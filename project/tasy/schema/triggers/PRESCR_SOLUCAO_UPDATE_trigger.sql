-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS prescr_solucao_update ON prescr_solucao CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_prescr_solucao_update() RETURNS trigger AS $BODY$
DECLARE

ie_lib_medico_w		varchar(1);
qt_hora_fase_w		double precision;
nr_etapas_w			double precision;
ds_alteracao_w		varchar(1800);
ie_nova_calc_terap_w	varchar(1);
ie_acm_protocolo_w		protocolo_npt.ie_acm%type;
cd_funcao_origem_w  	prescr_medica.cd_funcao_origem%type;
qt_horas_adicional_w	double precision;
ie_operacao_w			intervalo_prescricao.ie_operacao%type;
ie_intervalo_24_w		intervalo_prescricao.ie_24_h%type;
dt_inicio_prescr_w		prescr_medica.dt_inicio_prescr%type;
hr_prim_horario_w		prescr_solucao.hr_prim_horario%type;
dt_inicio_item_w		timestamp;
dt_copia_cpoe_w			cpoe_material.dt_prox_geracao%type;
nr_seq_mat_cpoe_w		cpoe_material.nr_sequencia%type;
qt_horas_ant_copia_cpoe_w	bigint;
ds_log_w				varchar(2000);
nm_usuario_w			usuario.nm_usuario%type;

procedure gerar_log_alteracoes is
BEGIN
	if (coalesce(NEW.qt_solucao_total,-1) <> coalesce(OLD.qt_solucao_total,-1)) then
		ds_alteracao_w := ds_alteracao_w || 'QT_SOLUCAO_TOTAL(' || to_char(OLD.qt_solucao_total) || '/' || to_char(NEW.qt_solucao_total) ||'); ';
	end if;
	
	if (ds_alteracao_w is not null) then
		ds_alteracao_w := substr('Alterações(old/new)= ' || ds_alteracao_w || 'NR_SEQ_SOLUCAO('||to_char(NEW.nr_seq_solucao)||'); FUNCAO('||to_char(wheb_usuario_pck.get_cd_funcao)||'); PERFIL('||to_char(wheb_usuario_pck.get_cd_perfil)||')',1,1800);
		
		CALL gerar_log_prescricao(
			nr_prescricao_p	=> NEW.nr_prescricao,
			nr_seq_item_p	=> NEW.nr_seq_solucao,
			ie_agrupador_p	=> null,
			nr_seq_horario_p => null,
			ie_tipo_item_p	=> 'SOL',
			ds_log_p		=> ds_alteracao_w,
			nm_usuario_p	=> nm_usuario_w,
			nr_seq_objeto_p	=> 3566,
			ie_commit_p		=> 'N'
		);
	end if;
end;

BEGIN
	ie_nova_calc_terap_w := Obter_Param_Usuario(924, 1151, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_nova_calc_terap_w);
	dt_inicio_prescr_w	:= obter_datas_prescricao(NEW.nr_prescricao,'I');
	cd_funcao_origem_w	:= obter_funcao_origem_prescr(NEW.nr_prescricao);
	nm_usuario_w := coalesce(wheb_usuario_pck.get_nm_usuario, NEW.nm_usuario);
	
	gerar_log_alteracoes;

update	prescr_material
set		ie_suspenso		= NEW.ie_suspenso,
		nm_usuario_susp		= NEW.nm_usuario_susp
where	nr_prescricao		= NEW.nr_prescricao
and		nr_sequencia_solucao	= NEW.nr_seq_solucao
and	ie_agrupador		in (4,13)
and	coalesce(ie_suspenso,'N')	= 'N'
and	nr_seq_substituto	is null;

update 	prescr_material
set	ie_acm 			= NEW.ie_acm,
	ie_se_necessario	= NEW.ie_se_necessario
where	nr_prescricao		= NEW.nr_prescricao
and	nr_sequencia_solucao	= NEW.nr_seq_solucao
and	ie_agrupador		in (4,13);


select max(nr_seq_mat_cpoe)
  into STRICT nr_seq_mat_cpoe_w
  from prescr_material
 where nr_prescricao = NEW.nr_prescricao
   and nr_sequencia_solucao = NEW.nr_seq_solucao;


if (coalesce(NEW.ie_suspenso, 'N') = 'S') then
	BEGIN
	NEW.ie_status := 'S';
	end;
end if;

if (coalesce(OLD.ie_suspenso, 'N') = 'S') and (coalesce(NEW.ie_suspenso,'N') = 'N') then
	BEGIN
	
	update 	prescr_material
	set	ie_suspenso  = NULL,
		dt_suspensao  = NULL,
		nm_usuario_susp  = NULL
	where	nr_prescricao = NEW.nr_prescricao
	and	nr_sequencia_solucao = NEW.nr_seq_solucao;
	
	update 	prescr_mat_hor
	set	dt_suspensao  = NULL,
		nm_usuario_susp  = NULL
	where	nr_prescricao = NEW.nr_prescricao
	and	nr_seq_solucao = NEW.nr_seq_solucao
	and	dt_fim_horario is null;
	
	NEW.ie_status := 'S';
	
	end;
end if;

if (coalesce(NEW.ie_solucao_especial,OLD.ie_solucao_especial) = 'N') then
	NEW.ie_bomba_elastomerica	:= obter_bomba_elast_sol(NEW.nr_prescricao, NEW.nr_Seq_solucao);

	if (NEW.ie_bomba_elastomerica is not null) and (coalesce(obter_vol_bomba_elast_sol(NEW.nr_prescricao, NEW.nr_Seq_solucao),0) > 0) then
		NEW.qt_dosagem			:= obter_vol_bomba_elast_sol(NEW.nr_prescricao, NEW.nr_Seq_solucao);
		NEW.qt_solucao_total		:= Obter_vel_sol_mlh(NEW.ie_tipo_dosagem, NEW.qt_dosagem) * NEW.qt_tempo_aplicacao * NEW.nr_etapas;
	end if;
end if;

--if	(nvl(:new.qt_volume,0) = 0) then


--end if;


if (NEW.nr_etapas = 0) and
	((NEW.ie_acm = 'S') or (NEW.IE_SOLUCAO_PCA = 'S') or (NEW.ie_se_necessario = 'S')) and (coalesce(NEW.ie_hemodialise,'N') = 'N') then
	NEW.nr_etapas	:= null;
end if;

if (NEW.nr_seq_dialise is not null) then	
	--if	(ie_lib_medico_w = 'N') then

		NEW.nr_etapas_medico := NEW.nr_etapas;
	--end if;

end if;


if (coalesce(cd_funcao_origem_w,9999) <> 2314) or (coalesce(NEW.qt_volume,0) = 0) then
	if (NEW.qt_solucao_total <> OLD.qt_solucao_total) then
		select	coalesce(NEW.qt_solucao_total,sum(coalesce(qt_solucao,0)))
		into STRICT	NEW.qt_volume
		from	prescr_material
		where	nr_prescricao		= NEW.nr_prescricao
		and	nr_sequencia_solucao	= NEW.nr_seq_solucao
		and		nr_seq_substituto is null;
	else
		select	sum(coalesce(qt_solucao,0))
		into STRICT	NEW.qt_volume
		from	prescr_material
		where	nr_prescricao		= NEW.nr_prescricao
		and	nr_sequencia_solucao	= NEW.nr_seq_solucao
		and		nr_seq_substituto is null;
	end if;
end if;

if (NEW.cd_intervalo 		is not null) and (coalesce(NEW.IE_CALC_AUT,'N')	= 'S') and (NEW.qt_hora_fase 		is not null) then
	SELECT * FROM Calcular_etapas_interv_solucao(NEW.cd_intervalo, NEW.qt_tempo_aplicacao, 'S', qt_hora_fase_w, nr_etapas_w, null, null) INTO STRICT qt_hora_fase_w, nr_etapas_w;
	if (NEW.qt_hora_fase	<> qt_hora_fase_w) then
		SELECT * FROM Calcular_etapas_interv_solucao(NEW.cd_intervalo, NEW.qt_tempo_aplicacao, 'N', qt_hora_fase_w, nr_etapas_w, null, null) INTO STRICT qt_hora_fase_w, nr_etapas_w;
	end if;
end if;

if (NEW.nr_seq_protocolo is not null) and (NEW.nr_seq_dialise is not null) then	

	select	coalesce(max(ie_acm),'N')
	into STRICT	ie_acm_protocolo_w
	from	protocolo_npt
	where	nr_sequencia = NEW.nr_seq_protocolo;

	NEW.ie_acm := ie_acm_protocolo_w;

end if;

if (coalesce(OLD.ie_bomba_infusao,'XPTO') <> coalesce(NEW.ie_bomba_infusao,'XPTO')) then
	NEW.ie_item_disp_gerado := 'N';
end if;

if	((coalesce(NEW.nr_etapas_suspensa,0) <> coalesce(OLD.nr_etapas_suspensa,0)) or ((coalesce(NEW.ie_suspenso,'N') = 'S') and (coalesce(OLD.ie_suspenso,'N') = 'N'))) then
	ds_log_w	:= 'Prescr='||NEW.nr_prescricao||';Seq='||NEW.nr_seq_solucao||';Old et='||coalesce(OLD.nr_etapas_suspensa,0)||';New et='||coalesce(NEW.nr_etapas_suspensa,0)||
				   ';Susp='||coalesce(NEW.ie_suspenso,'N')||';Stack='||substr(dbms_utility.format_call_stack,1,1700);
	CALL gravar_log_tasy(4589, ds_log_w, NEW.nm_usuario);
end if;

if (NEW.ds_horarios <> OLD.ds_horarios) and (NEW.ds_horarios is not null) and (cd_funcao_origem_w = 2314) and
	((obter_funcao_ativa = 7015) or (obter_funcao_ativa = 7010) or (obter_funcao_ativa = 252)) and (obter_datas_prescricao(NEW.nr_prescricao,'L') is not null) then

	qt_horas_adicional_w := 24;
	if (NEW.cd_intervalo is not null) then
		select	coalesce(max(ie_24_h),'N')
		into STRICT	ie_intervalo_24_w
		from	intervalo_prescricao
		where	cd_intervalo = NEW.cd_intervalo
		and    	coalesce(ie_operacao,'X') = 'H'
		and    	coalesce(qt_operacao,1) > 24;	
	end if;

	qt_horas_ant_copia_cpoe_w := get_qt_hours_after_copy_cpoe( obter_perfil_ativo, NEW.nm_usuario, obter_estabelecimento_ativo);

	if (ie_intervalo_24_w = 'S') then
		qt_horas_adicional_w := Obter_ocorrencia_intervalo(NEW.cd_intervalo,24,'H');
	else

		select 	coalesce(max(ie_operacao),'X')
		into STRICT	ie_operacao_w
		from	intervalo_prescricao
		where	cd_intervalo = NEW.cd_intervalo;

		qt_horas_adicional_w := Obter_ocorrencia_intervalo(NEW.cd_intervalo,24,'H');		
		if (ie_operacao_w = 'H' and qt_horas_adicional_w > 12 and qt_horas_adicional_w < 24) then
			qt_horas_adicional_w := qt_horas_adicional_w + qt_horas_adicional_w;
		else
			qt_horas_adicional_w := 24;
		end if;
	end if;

	hr_prim_horario_w := obter_prim_dshorarios(NEW.ds_horarios);
	dt_inicio_item_w := to_date(to_char(dt_inicio_prescr_w, 'dd/mm/yyyy') || ' ' || hr_prim_horario_w || ':00', 'dd/mm/yyyy hh24:mi:ss');

	if (dt_inicio_item_w < dt_inicio_prescr_w) then
		dt_inicio_item_w := dt_inicio_item_w + 1;
	end if;

	dt_copia_cpoe_w	:= (dt_inicio_item_w + ((qt_horas_adicional_w - qt_horas_ant_copia_cpoe_w)/24));

	update	cpoe_material
	set		dt_prox_geracao = trunc(dt_copia_cpoe_w,'hh')
	where	nr_sequencia = nr_seq_mat_cpoe_w;

end if;


RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_prescr_solucao_update() FROM PUBLIC;

CREATE TRIGGER prescr_solucao_update
	BEFORE UPDATE ON prescr_solucao FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_prescr_solucao_update();

