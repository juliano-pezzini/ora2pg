-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS gestao_vaga_befupdate ON gestao_vaga CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_gestao_vaga_befupdate() RETURNS trigger AS $BODY$
declare
 
nr_seq_proc_adic_w		bigint;
cd_proc_adic_w     	bigint;
ie_origem_proc_adic_w  	bigint;
ie_autorizacao_proc_adic_w	varchar(3);
ie_autorizacao_w		varchar(3);
ie_verifica_aut_conv_w		varchar(1);
ie_regra_w			integer;
ie_regra_proc_adic_w		integer;
nr_seq_proc_interno_w	bigint;
C01 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced, 
		nr_seq_proc_interno 
	from	gestao_vaga_proc 
	where	nr_seq_gestao = NEW.nr_sequencia;
BEGIN
  BEGIN 
 
BEGIN 
if (not wheb_usuario_pck.get_nm_usuario is null) then 
	NEW.nm_usuario := wheb_usuario_pck.get_nm_usuario;
end if;
exception 
when others then 
	null;
end;
 
 
ie_verifica_aut_conv_w := obter_param_usuario(1002, 100, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_verifica_aut_conv_w);
 
if (NEW.DS_SENHA_ATEND is null) and (OLD.DS_SENHA_ATEND is not null) then		 
	NEW.DT_REGISTRO_SENHA_ATEND	:= null;	
end if;
 
 
if 	((coalesce(ie_verifica_aut_conv_w,'N') = 'S') and 
	(((NEW.cd_convenio <> OLD.cd_convenio) or (OLD.cd_convenio is null)) or 
	((NEW.cd_plano_convenio <> OLD.cd_plano_convenio) or (OLD.cd_plano_convenio is null)) or 
	((NEW.cd_categoria <> OLD.cd_categoria) or (OLD.cd_categoria is null)))) then 
	 
	 
	SELECT * FROM gv_verifica_autorizacao_conv(	NEW.cd_convenio, NEW.cd_procedimento, NEW.ie_origem_proced, NEW.cd_plano_convenio, NEW.cd_categoria, NEW.nr_seq_proc_interno, NEW.cd_estabelecimento, Obter_Sexo_PF(NEW.cd_pessoa_fisica,'C'), NEW.nr_sequencia, ie_autorizacao_w, ie_regra_w) INTO STRICT ie_autorizacao_w, ie_regra_w;
	NEW.ie_autorizacao := ie_autorizacao_w;
	NEW.ie_regra := ie_regra_w;
	 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_proc_adic_w, 
		cd_proc_adic_w, 
		ie_origem_proc_adic_w, 
		nr_seq_proc_interno_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN 
		SELECT * FROM gv_verifica_autorizacao_conv(	NEW.cd_convenio, cd_proc_adic_w, ie_origem_proc_adic_w, NEW.cd_plano_convenio, NEW.cd_categoria, nr_seq_proc_interno_w, NEW.cd_estabelecimento, Obter_Sexo_PF(NEW.cd_pessoa_fisica,'C'), null, ie_autorizacao_proc_adic_w, ie_regra_proc_adic_w) INTO STRICT ie_autorizacao_proc_adic_w, ie_regra_proc_adic_w;
						 
		 
		update	gestao_vaga_proc 
		set	ie_autorizacao = ie_autorizacao_proc_adic_w, 
			ie_regra = ie_regra_proc_adic_w, 
			dt_atualizacao = LOCALTIMESTAMP, 
			nm_usuario = NEW.nm_usuario 
		where	nr_sequencia = nr_seq_proc_adic_w;
		 
		end;
	end loop;
	close C01;
	 
end if;
  END;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_gestao_vaga_befupdate() FROM PUBLIC;

CREATE TRIGGER gestao_vaga_befupdate
	BEFORE UPDATE ON gestao_vaga FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_gestao_vaga_befupdate();

