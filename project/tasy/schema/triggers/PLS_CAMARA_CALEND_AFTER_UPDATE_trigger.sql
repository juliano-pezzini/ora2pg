-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pls_camara_calend_after_update ON pls_camara_calendario CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pls_camara_calend_after_update() RETURNS trigger AS $BODY$
declare

procedure inserir_log_calendario(	nm_campo_p		text,
					vl_antigo_p		text,
					vl_novo_p		text) is

ds_historico_w	varchar(4000);
nm_campo_w	varchar(200);

BEGIN

	select 	coalesce(ds_label, ds_label_grid)
	into STRICT	nm_campo_w
	from	tabela_atributo
	where 	nm_tabela = 'PLS_CAMARA_CALENDARIO'
	and	nm_atributo = nm_campo_p;

ds_historico_w := wheb_mensagem_pck.get_texto(1111922, 	'NM_CAMPO=' 	|| nm_campo_w 			|| ';' ||
							'VL_ANTIGO=' 	|| coalesce(vl_antigo_p, 'null') 	|| ';' || 								
							'VL_NOVO=' 	|| coalesce(vl_novo_p, 'null'));

insert into pls_hist_camara_calend(nr_sequencia,
	cd_estabelecimento,
	ds_historico,
	dt_atualizacao,
	dt_atualizacao_nrec,
	nm_tabela,
	nm_usuario,
	nm_usuario_nrec,
	nr_seq_camara_calend)
values (nextval('pls_hist_camara_calend_seq'),
	wheb_usuario_pck.get_cd_estabelecimento,
	ds_historico_w,
	LOCALTIMESTAMP,
	LOCALTIMESTAMP,
	'PLS_CAMARA_CALENDARIO',
	wheb_usuario_pck.get_nm_usuario,
	wheb_usuario_pck.get_nm_usuario,
	NEW.nr_sequencia);
		
end;

BEGIN

if (coalesce(NEW.nm_usuario_lib, 'X') <> coalesce(OLD.nm_usuario_lib, 'X')) then
	inserir_log_calendario('NM_USUARIO_LIB', OLD.nm_usuario_lib, NEW.nm_usuario_lib);
end if;

if (coalesce(NEW.dt_liberacao, to_date('30/12/1899', 'dd/mm/yyyy')) <> coalesce(OLD.dt_liberacao, to_date('30/12/1899', 'dd/mm/yyyy'))) then
	inserir_log_calendario('DT_LIBERACAO', to_char(OLD.dt_liberacao,'dd/mm/rrrr'), to_char(NEW.dt_liberacao,'dd/mm/rrrr'));
end if;

if (coalesce(NEW.ds_observacao, '') <> coalesce(OLD.ds_observacao, '')) then
	inserir_log_calendario('DS_OBSERVACAO', OLD.ds_observacao, NEW.ds_observacao);
end if;

if (coalesce(NEW.nr_ano, 0) <> coalesce(OLD.nr_ano, 0)) then
	inserir_log_calendario('NR_ANO', OLD.nr_ano, NEW.nr_ano);
end if;

if (coalesce(NEW.nr_seq_camara, 0) <> coalesce(OLD.nr_seq_camara, 0)) then
	inserir_log_calendario('NR_SEQ_CAMARA', OLD.nr_seq_camara, NEW.nr_seq_camara);
end if;

RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pls_camara_calend_after_update() FROM PUBLIC;

CREATE TRIGGER pls_camara_calend_after_update
	AFTER UPDATE ON pls_camara_calendario FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pls_camara_calend_after_update();

