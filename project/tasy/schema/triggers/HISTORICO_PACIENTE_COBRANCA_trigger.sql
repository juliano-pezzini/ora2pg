-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS historico_paciente_cobranca ON cobranca CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_historico_paciente_cobranca() RETURNS trigger AS $BODY$
DECLARE
  i RECORD;

nr_interno_conta_w          titulo_receber.nr_interno_conta%type;
nr_sequencia_hist_cob_w     tipo_hist_cob.nr_sequencia%type;

BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
    select max(nr_interno_conta)
    into STRICT nr_interno_conta_w
    from titulo_receber
    where nr_titulo = NEW.nr_titulo;

    if (nr_interno_conta_w is not null) then
        select max(nr_sequencia)
        into STRICT nr_sequencia_hist_cob_w
        from tipo_hist_cob
        where coalesce(ie_obs_conta_paciente,'N') = 'S'
        and coalesce(ie_situacao, 'I') = 'A';
    end if;

    if (nr_sequencia_hist_cob_w is not null) then
        for i in (select cpo.ds_observacao
        from conta_paciente_observacao cpo
        where nr_interno_conta = nr_interno_conta_w
        and dt_liberacao is not null) loop

            insert into cobranca_historico(nr_sequencia,
                                            nr_seq_cobranca,
                                            dt_atualizacao,
                                            nm_usuario,
                                            nr_seq_historico,
                                            vl_historico,
                                            ds_historico,
                                            dt_historico,
                                            dt_atualizacao_nrec,
                                            nm_usuario_nrec,
                                            nr_seq_retorno,
                                            id_importacao)
            values (nextval('cobranca_historico_seq'),
                    NEW.nr_sequencia,
                    LOCALTIMESTAMP,
                    obter_usuario_ativo,
                    nr_sequencia_hist_cob_w,
                    null,
                    i.ds_observacao,
                    LOCALTIMESTAMP,
                    null,
                    null,
                    null,
                    null);
        end loop;
    end if;
end if;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_historico_paciente_cobranca() FROM PUBLIC;

CREATE TRIGGER historico_paciente_cobranca
	AFTER INSERT ON cobranca FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_historico_paciente_cobranca();

