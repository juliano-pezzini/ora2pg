-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pessoa_jur_tipo_adic_insert ON pessoa_jur_tipo_adic CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pessoa_jur_tipo_adic_insert() RETURNS trigger AS $BODY$
declare
cd_conta_pagamento_w	varchar(20);
cd_conta_recebimento_w	varchar(20);
cd_estabelecimento_w	integer;
qt_existe_w		integer;

BEGIN

select	coalesce(max(cd_conta_pagamento), 'X'),
	coalesce(max(cd_conta_recebimento), 'X'),
	coalesce(max(cd_estabelecimento), 0)
into STRICT	cd_conta_pagamento_w,
	cd_conta_recebimento_w,
	cd_estabelecimento_w
from	tipo_pessoa_juridica
where	cd_tipo_pessoa = NEW.cd_tipo_pessoa
and	coalesce(ie_atualiza_pj, 'D') = 'D';


if (cd_conta_pagamento_w <> 'X') then
	BEGIN
	select	count(*)
	into STRICT	qt_existe_w
	from	pessoa_jur_conta_cont
	where	ie_tipo_conta = 'P'
	and	cd_estabelecimento = cd_estabelecimento_w
	and	cd_cgc = NEW.cd_cgc;

	if (qt_existe_w > 0) then

		update	pessoa_jur_conta_cont
		set	cd_conta_contabil = cd_conta_pagamento_w,
			dt_inicio_vigencia = obter_vigencia_conta_contabil(cd_conta_pagamento_w,'I'),
			dt_fim_vigencia = obter_vigencia_conta_contabil(cd_conta_pagamento_w,'F')
		where	ie_tipo_conta = 'P'
		and	cd_estabelecimento = cd_estabelecimento_w
		and	cd_cgc = NEW.cd_cgc;
	else
		insert into pessoa_jur_conta_cont(
			nr_sequencia,
			cd_cgc,
			cd_conta_contabil,
			dt_atualizacao,
			nm_usuario,
			cd_empresa,
			ie_tipo_conta,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_inicio_vigencia,
			dt_fim_vigencia,
			cd_estabelecimento)
		SELECT nextval('pessoa_jur_conta_cont_seq'),
			NEW.cd_cgc,
			cd_conta_pagamento_w,
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			a.cd_empresa,
			'P',
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			obter_vigencia_conta_contabil(cd_conta_pagamento_w, 'I'),
			obter_vigencia_conta_contabil(cd_conta_pagamento_w, 'F'),
			CASE WHEN cd_estabelecimento_w=0 THEN  null  ELSE cd_estabelecimento_w END
			from empresa a;
	end if;
	end;
end if;


if (cd_conta_recebimento_w <> 'X') then
	BEGIN
	select	count(*)
	into STRICT	qt_existe_w
	from	pessoa_jur_conta_cont
	where	ie_tipo_conta = 'R'
	and	cd_estabelecimento = cd_estabelecimento_w
	and	cd_cgc = NEW.cd_cgc;

	if (qt_existe_w > 0) then
		update	pessoa_jur_conta_cont
		set	cd_conta_contabil = cd_conta_recebimento_w,
			dt_inicio_vigencia = obter_vigencia_conta_contabil(cd_conta_recebimento_w,'I'),
			dt_fim_vigencia = obter_vigencia_conta_contabil(cd_conta_recebimento_w,'F')
		where	ie_tipo_conta = 'R'
		and	cd_estabelecimento = cd_estabelecimento_w
		and	cd_cgc = NEW.cd_cgc;

	else

		insert into pessoa_jur_conta_cont(
			nr_sequencia,
			cd_cgc,
			cd_conta_contabil,
			dt_atualizacao,
			nm_usuario,
			cd_empresa,
			ie_tipo_conta,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_inicio_vigencia,
			dt_fim_vigencia,
			cd_estabelecimento)
		SELECT nextval('pessoa_jur_conta_cont_seq'),
			NEW.cd_cgc,
			cd_conta_recebimento_w,
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			a.cd_empresa,
			'R',
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			obter_vigencia_conta_contabil(cd_conta_recebimento_w, 'I'),
			obter_vigencia_conta_contabil(cd_conta_recebimento_w, 'F'),
			CASE WHEN cd_estabelecimento_w=0 THEN  null  ELSE cd_estabelecimento_w END
		from	empresa a;
	end if;
	end;
end if;

RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pessoa_jur_tipo_adic_insert() FROM PUBLIC;

CREATE TRIGGER pessoa_jur_tipo_adic_insert
	AFTER INSERT OR UPDATE ON pessoa_jur_tipo_adic FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pessoa_jur_tipo_adic_insert();

