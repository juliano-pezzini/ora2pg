-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS atendimento_acomp_insert ON atendimento_acompanhante CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_atendimento_acomp_insert() RETURNS trigger AS $BODY$
DECLARE
ie_possui_alta_w		varchar(2);
ie_permite_alta_w		varchar(2);
ie_gerar_controle_acomp_w	varchar(1);
nr_controle_novo_w		ATENDIMENTO_ACOMPANHANTE.nr_controle%type;
nr_controle_unico_w		varchar(2);

pragma autonomous_transaction;
BEGIN
  BEGIN
ie_gerar_controle_acomp_w := Obter_Param_Usuario(8014, 36, obter_perfil_ativo, NEW.nm_usuario, obter_estabelecimento_ativo, ie_gerar_controle_acomp_w);
ie_permite_alta_w := Obter_Param_Usuario(8014, 112, obter_perfil_ativo, NEW.nm_usuario, obter_estabelecimento_ativo, ie_permite_alta_w);
nr_controle_unico_w := Obter_Param_Usuario(8014, 119, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, nr_controle_unico_w);

BEGIN

	Select 	coalesce(max('S'),'N')
	into STRICT 	ie_possui_alta_w
	from 	atendimento_paciente a
	where 	NEW.nr_atendimento = a.nr_atendimento
	and 	a.dt_alta is not null;

	if (ie_possui_alta_w = 'S') and (ie_permite_alta_w = 'N') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(284133);
	end if;

	if (ie_gerar_controle_acomp_w = 'S') and (NEW.nr_controle is null) then
		
		if (nr_controle_unico_w = 'S') then
			select	nextval('controle_visita_unico_seq')
			into STRICT	nr_controle_novo_w
			;
		else
			select	nextval('controle_acompanhante_seq')
			into STRICT	nr_controle_novo_w
			;
		end if;
		NEW.nr_controle := nr_controle_novo_w;		
	end if;

	select	nextval('controle_visita_seq')
	into STRICT	NEW.nr_controle_acesso
	;

exception
	when	others then
		null;
end;

commit;
	
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_atendimento_acomp_insert() FROM PUBLIC;

CREATE TRIGGER atendimento_acomp_insert
	BEFORE INSERT ON atendimento_acompanhante FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_atendimento_acomp_insert();

