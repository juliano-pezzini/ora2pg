-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS laudo_paciente_loc_insert ON laudo_paciente_loc CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_laudo_paciente_loc_insert() RETURNS trigger AS $BODY$
declare
qt_regra_w		bigint;
nr_seq_regra_w		bigint;
ds_assunto_w		varchar(100);
ds_email_origem_w	varchar(100);
nm_usuario_ref_w	varchar(15);
ds_conteudo_w		varchar(2000);
cd_pessoa_fisica_w	varchar(10);
ds_email_destino_w	varchar(255);
ds_titulo_laudo_w	varchar(255);
ds_local_w		varchar(255);
ds_setor_atendimento_w	varchar(255);
dt_exame_w		timestamp;
ds_exames_w		varchar(1000) := '';
ds_procedimento_w	varchar(255);
ie_email_valido_w	varchar(2);
 
C01 CURSOR FOR 
	SELECT substr(obter_desc_procedimento(a.cd_procedimento, a.ie_origem_proced),1,255)	 
	from 	procedimento_paciente a 
	where	nr_laudo = NEW.nr_sequencia;
 
BEGIN 
 
select	count(*) 
into STRICT	qt_regra_w 
from	regra_envio_loc_laudo 
where	ie_tipo_local = NEW.ie_tipo_local 
and	ie_situacao = 'A';
 
if (qt_regra_w > 0) then 
	BEGIN 
	 
	select	coalesce(max(nr_sequencia),0) 
	into STRICT	nr_seq_regra_w 
	from	regra_envio_loc_laudo 
	where	ie_tipo_local = NEW.ie_tipo_local 
	and	ie_situacao = 'A';
	 
	if (nr_seq_regra_w <> 0) then 
		BEGIN 
		 
		select	ds_titulo, 
			ds_email_origem, 
			coalesce(nm_usuario_ref, NEW.nm_usuario), 
			ds_email 
		into STRICT	ds_assunto_w, 
			ds_email_origem_w, 
			nm_usuario_ref_w, 
			ds_conteudo_w 
		from	regra_envio_loc_laudo 
		where	nr_sequencia = nr_seq_regra_w;
		 
		select	max(coalesce(coalesce(obter_dados_atendimento(nr_atendimento, 'CP'), obter_dados_prescricao(nr_prescricao, 'P')), cd_pessoa_fisica)), 
			max(ds_titulo_laudo), 
			max(dt_exame) 
		into STRICT	cd_pessoa_fisica_w, 
			ds_titulo_laudo_w, 
			dt_exame_w 
		from	laudo_paciente 
		where	nr_sequencia = NEW.nr_sequencia;
		 
		if (cd_pessoa_fisica_w is not null) then 
			BEGIN 
			 
			ds_email_destino_w	:= substr(obter_compl_pf(cd_pessoa_fisica_w, 1, 'M'),1,255);
			 
			if (ds_assunto_w is not null) and (ds_conteudo_w is not null) and (ds_email_destino_w is not null) and (nm_usuario_ref_w is not null) then 
				BEGIN 
				 
				select substr(obter_valor_dominio(138,NEW.ie_tipo_local),1,255) 
				into STRICT  ds_local_w 
				;
				 
				select coalesce(max(ds_setor_atendimento),'') 
				into STRICT	ds_setor_atendimento_w 
				from 	setor_atendimento 
				where 	cd_setor_atendimento = NEW.cd_setor_registro;
				 
				open C01;
				loop 
				fetch C01 into	 
					ds_procedimento_w;
				EXIT WHEN NOT FOUND; /* apply on C01 */
					BEGIN 
					ds_exames_w := ds_exames_w || ' ' || ds_procedimento_w;
					end;
				end loop;
				close C01;
								 
				ds_conteudo_w := substr(replace_macro(ds_conteudo_w,'@TITULO@',ds_titulo_laudo_w),1,2000);
				ds_conteudo_w := substr(replace_macro(ds_conteudo_w,'@LOCAL@',ds_local_w),1,2000);
				ds_conteudo_w := substr(replace_macro(ds_conteudo_w,'@SETOR@',ds_setor_atendimento_w),1,2000);
				ds_conteudo_w := substr(replace_macro(ds_conteudo_w,'@PACIENTE@', obter_nome_pf(cd_pessoa_fisica_w)),1,2000);
				ds_conteudo_w := substr(replace_macro(ds_conteudo_w,'@DTEXAME@', to_char(dt_exame_w,'DD/MM/YYYY HH24:MI:SS')),1,2000);
				ds_conteudo_w := substr(replace_macro(ds_conteudo_w,'@EXAME@', ds_exames_w),1,2000);
				 
				select obter_se_email_valido(ds_email_destino_w) 
				into STRICT	ie_email_valido_w 
				;
				 
				if (ie_email_valido_w = 'S') then 
					CALL enviar_email(ds_assunto_w, ds_conteudo_w, ds_email_origem_w, ds_email_destino_w, nm_usuario_ref_w, 'M');
				end if;
				 
				insert into laudo_paciente_loc_envio( 
						nr_sequencia, 
						dt_envio, 
						nm_usuario, 
						ds_email_origem, 
						ds_email_destino,    
						ds_conteudo,       
						dt_atualizacao,     
						dt_atualizacao_nrec,   
						nm_usuario_nrec, 
						nr_seq_loc) 
				values (		nextval('laudo_paciente_loc_envio_seq'), 
						LOCALTIMESTAMP, 
						nm_usuario_ref_w, 
						ds_email_origem_w, 
						ds_email_destino_w, 
						ds_conteudo_w, 
						LOCALTIMESTAMP, 
						LOCALTIMESTAMP, 
						NEW.nm_usuario, 
						NEW.nr_seq_loc);
				end;
			end if;
			end;
		end if;		
		end;
	end if;	
	end;
end if;
 
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_laudo_paciente_loc_insert() FROM PUBLIC;

CREATE TRIGGER laudo_paciente_loc_insert
	AFTER INSERT ON laudo_paciente_loc FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_laudo_paciente_loc_insert();

