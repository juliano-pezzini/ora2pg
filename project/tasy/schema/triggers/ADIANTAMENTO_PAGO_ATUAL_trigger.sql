-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS adiantamento_pago_atual ON adiantamento_pago CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_adiantamento_pago_atual() RETURNS trigger AS $BODY$
declare

ie_deduzir_ordem_adiant_w	varchar(1);
ie_situacao_w varchar(1);
dt_baixa_w		timestamp;

BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger	= 'S')  then
	if (NEW.cd_pessoa_fisica is null) and (NEW.cd_cgc is null) then		
		CALL wheb_mensagem_pck.exibir_mensagem_abort(226813);
	end if;


if (NEW.cd_cgc is not null) and (TG_OP = 'INSERT') then
	select	coalesce(max(ie_situacao),'A')
	into STRICT	ie_situacao_w
	from	pessoa_juridica
	where	cd_cgc	= NEW.cd_cgc;	
	if (ie_situacao_w = 'I') then
        CALL wheb_mensagem_pck.exibir_mensagem_abort(1173628);
    end if;
end if;

if (NEW.vl_saldo = 0) and (NEW.dt_baixa is null) then
	BEGIN
	select	coalesce(max(ie_deduzir_ordem_adiant),'S')
	into STRICT	ie_deduzir_ordem_adiant_w
	from	parametros_contas_pagar
	where	cd_estabelecimento	= NEW.cd_estabelecimento;
	
	if (ie_deduzir_ordem_adiant_w = 'N') then
		select	coalesce(max(a.dt_contabil),LOCALTIMESTAMP)
		into STRICT	dt_baixa_w
		from	titulo_pagar b,
			titulo_pagar_adiant a
		where	a.nr_adiantamento	= NEW.nr_adiantamento
		and	b.nr_titulo		= a.nr_titulo;
	else
		select	coalesce(max(a.dt_contabil),LOCALTIMESTAMP)
		into STRICT	dt_baixa_w
		from	titulo_pagar b,
			titulo_pagar_adiant a
		where	a.nr_adiantamento	= NEW.nr_adiantamento
		and	b.nr_titulo		= a.nr_titulo
		and	not exists (	SELECT	1
				from	nota_fiscal_item y,
					ordem_compra_adiant_pago x
				where	x.nr_adiantamento	= a.nr_adiantamento
				and	x.nr_ordem_compra	= y.nr_ordem_compra
				and	y.nr_sequencia	= b.nr_seq_nota_fiscal);
	end if;
	
	NEW.dt_baixa	:= dt_baixa_w;
	end;
end if;

if (TG_OP = 'UPDATE') then
	if (NEW.dt_baixa <> OLD.dt_baixa)  then
		/* Projeto Davita  - Nao deixa gerar movimento contabil apos fechamento  da data */


		CALL philips_contabil_pck.valida_se_dia_fechado(OBTER_EMPRESA_ESTAB(NEW.cd_estabelecimento),NEW.dt_baixa);
	end if;
else 	if (TG_OP = 'INSERT') then
		/* Projeto Davita  - Nao deixa gerar movimento contabil apos fechamento  da data */


		CALL philips_contabil_pck.valida_se_dia_fechado(OBTER_EMPRESA_ESTAB(NEW.cd_estabelecimento),NEW.dt_baixa);
	end if;
end if;

end if;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_adiantamento_pago_atual() FROM PUBLIC;

CREATE TRIGGER adiantamento_pago_atual
	BEFORE INSERT OR UPDATE ON adiantamento_pago FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_adiantamento_pago_atual();

