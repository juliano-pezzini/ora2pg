-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS atend_aval_analgesia_atual ON atend_aval_analgesia CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_atend_aval_analgesia_atual() RETURNS trigger AS $BODY$
declare

qt_comunic_w	bigint:= 0;
ds_hora_w	varchar(20);
dt_registro_w	timestamp;
dt_apap_w	timestamp;
qt_hora_w	double precision;
qt_reg_w	smallint;
BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;
if (NEW.nr_hora is null) or (NEW.dt_avaliacao <> OLD.dt_avaliacao) then
	BEGIN
	NEW.nr_hora	:= (to_char(round(NEW.dt_avaliacao,'hh24'),'hh24'))::numeric;
	end;
end if;

if (coalesce(OLD.DT_AVALIACAO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_AVALIACAO) and (NEW.DT_AVALIACAO is not null) then
	NEW.ds_utc		:= obter_data_utc(NEW.DT_AVALIACAO,'HV');	
end if;

if (coalesce(OLD.DT_LIBERACAO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_LIBERACAO) and (NEW.DT_LIBERACAO is not null) then
	NEW.ds_utc_atualizacao	:= obter_data_utc(NEW.DT_LIBERACAO,'HV');
end if;

if (NEW.nr_hora is not null) and
	((OLD.nr_hora is null) or (OLD.dt_avaliacao is null) or (NEW.nr_hora <> OLD.nr_hora) or (NEW.dt_avaliacao <> OLD.dt_avaliacao)) then
	BEGIN
	ds_hora_w	:= substr(obter_valor_dominio(2119,NEW.nr_hora),1,2);
	dt_registro_w	:= trunc(NEW.dt_avaliacao,'hh24');
	dt_apap_w	:= to_date(to_char(NEW.dt_avaliacao,'dd/mm/yyyy') ||' '||ds_hora_w||':00:00','dd/mm/yyyy hh24:mi:ss');
	if (to_char(round(NEW.dt_avaliacao,'hh24'),'hh24') = ds_hora_w) then
		NEW.dt_referencia	:= round(NEW.dt_avaliacao,'hh24');
	else
		BEGIN
		qt_hora_w	:= (trunc(NEW.dt_avaliacao,'hh24') - to_date(to_char(NEW.dt_avaliacao,'dd/mm/yyyy') ||' '||ds_hora_w||':00:00','dd/mm/yyyy hh24:mi:ss')) * 24;
		if (qt_hora_w > 12) then
			NEW.dt_referencia	:= to_date(to_char(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(NEW.dt_avaliacao + 1),'dd/mm/yyyy') ||' '||ds_hora_w ||':00:00','dd/mm/yyyy hh24:mi:ss');
		elsif (qt_hora_w > 0) and (qt_hora_w <= 12) then
			NEW.dt_referencia	:= to_date(to_char(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(NEW.dt_avaliacao),'dd/mm/yyyy') ||' '||ds_hora_w ||':00:00','dd/mm/yyyy hh24:mi:ss');
		elsif (qt_hora_w >= -12) then
			NEW.dt_referencia	:= to_date(to_char(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(NEW.dt_avaliacao),'dd/mm/yyyy') ||' '||ds_hora_w ||':00:00','dd/mm/yyyy hh24:mi:ss');
		elsif (qt_hora_w < -12) then
			NEW.dt_referencia	:= to_date(to_char(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(NEW.dt_avaliacao - 1),'dd/mm/yyyy') ||' '||ds_hora_w ||':00:00','dd/mm/yyyy hh24:mi:ss');
		end if;
		end;
	end if;
	end;
end if;

if (NEW.ie_comunic_espontanea = 'S') then
	qt_comunic_w := 2;
elsif (NEW.ie_comunic_espontanea = 'N') then
	qt_comunic_w := 0;
end if;

NEW.qt_cook_pontuacao :=	coalesce(NEW.ie_cook_ao,0)		+	coalesce(NEW.ie_cook_resp_procd_enf,0)	+
				coalesce(NEW.ie_cook_tosse,0)	+	coalesce(NEW.ie_cook_respiracao,0)		+
				coalesce(qt_comunic_w,0);

if (TG_OP = 'INSERT') and (coalesce(NEW.ie_integracao,'N')	= 'S') then
   CALL record_integration_notify(null,NEW.nr_atendimento,'MA',NEW.nr_sequencia,null,'S');
end if;

NEW.qt_npass_pontuacao := obtem_desc_escala_npass(NEW.nr_atendimento);


if (OLD.DT_LIBERACAO is null) and (NEW.DT_LIBERACAO is not null) then
	select count(1)
	into STRICT   qt_reg_w
	from   escala_comfort_b
	where  nr_seq_analgesia = NEW.nr_sequencia;
	
	if (qt_reg_w > 0) then
		update escala_comfort_b
		set    dt_liberacao = LOCALTIMESTAMP
		where  nr_seq_analgesia = NEW.nr_sequencia;
	end if;
end if;

<<Final>>
qt_reg_w	:= 0;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_atend_aval_analgesia_atual() FROM PUBLIC;

CREATE TRIGGER atend_aval_analgesia_atual
	BEFORE INSERT OR UPDATE ON atend_aval_analgesia FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_atend_aval_analgesia_atual();

