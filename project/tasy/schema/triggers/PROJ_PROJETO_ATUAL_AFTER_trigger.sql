-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS proj_projeto_atual_after ON proj_projeto CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_proj_projeto_atual_after() RETURNS trigger AS $BODY$
declare
qt_reg_w	smallint;
ds_sep_bv_w	varchar(50) := obter_separador_bv;
ds_mensagem_w	varchar(4000);
ds_titulo_w	varchar(4000);
ds_email_origem_w	varchar(255);
ds_email_destino_w	varchar(255);
ds_macro_w	varchar(255);
ie_base_corp_w 	varchar(1);
ie_base_wheb_w	varchar(1);

BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger = 'N')  then
	goto Fim;
end if;

ie_base_corp_w := obter_se_base_corp;
ie_base_wheb_w := obter_se_base_wheb;

/* Envio de email ao alterar datas dt terminio previsto ou dt versao
   previsto com o estagio 'desenvolvimento e Implementacao' selecionado */


if (ie_base_corp_w = 'S' or ie_base_wheb_w = 'S') then
	if (NEW.ie_origem = 'D' and NEW.ie_status = 'E' and (NEW.ds_versao <> OLD.ds_versao or NEW.dt_fim_prev <> OLD.dt_fim_prev)) then
		BEGIN
			ds_email_origem_w	:= 'grp_pmo_emr@Philips.onmicrosoft.com';
			ds_email_destino_w	:= 'grp_pmo_emr@Philips.onmicrosoft.com';
			ds_macro_w	:= 'NR_SEQ_PROJ=' || NEW.nr_sequencia;
			ds_titulo_w	:= substr(obter_desc_exp_idioma(933549, wheb_usuario_pck.get_nr_seq_idioma, ds_macro_w), 1, 255);

			ds_macro_w	:= ds_macro_w ||
						';NM_PROJ=' || coalesce(NEW.ds_titulo, 'N/A') ||
						';DT_OLD=' || coalesce(to_char(OLD.dt_fim_prev), 'N/A') ||
						';DT_NEW=' || coalesce(to_char(NEW.dt_fim_prev), 'N/A') ||
						';CD_VERSAO_OLD=' || coalesce(OLD.ds_versao, 'N/A') ||
						';CD_VERSAO_NEW=' || coalesce(NEW.ds_versao, 'N/A');
			ds_mensagem_w	:= obter_desc_exp_idioma(933548, wheb_usuario_pck.get_nr_seq_idioma, ds_macro_w);

			CALL enviar_email(ds_titulo_w, ds_mensagem_w, ds_email_origem_w, ds_email_destino_w, NEW.nm_usuario, 'M');
		end;
	end if;
end if;

/* Origem Desenvolvimento e Estagio Encerramento */


if (ie_base_corp_w = 'S' or ie_base_wheb_w = 'S') and (NEW.ie_origem = 'D') and (NEW.nr_seq_estagio = 16) and (coalesce(OLD.nr_seq_estagio,0) <> NEW.nr_seq_estagio) and (NEW.nr_seq_ordem_serv is not null) then
	BEGIN
	select	count(*)
	into STRICT	qt_reg_w
	from	gpw_pendencia
	where	nr_seq_ordem_serv = NEW.nr_seq_ordem_serv;
	
	if (qt_reg_w = 0) then
		CALL exec_sql_dinamico_bv('','begin gpw_gerar_pendencia_ordem_serv(:nr_seq_ordem_serv,:nm_usuario); end;',
					'nr_seq_ordem_serv=' || NEW.nr_seq_ordem_serv || ds_sep_bv_w ||
					'nm_usuario=' || NEW.nm_usuario || ds_sep_bv_w);
	end if;	
	end;
end if;

if (ie_base_corp_w = 'S' or ie_base_wheb_w = 'S') and (NEW.ie_origem = 'D') and
	((NEW.ds_versao <> OLD.ds_versao) or (NEW.dt_inicio_prev <> OLD.dt_inicio_prev) or (NEW.dt_fim_prev <> OLD.dt_fim_prev) or (NEW.ie_status <> OLD.ie_status) or (NEW.nr_seq_ordem_serv <> OLD.nr_seq_ordem_serv) or (NEW.cd_metodologia <> OLD.cd_metodologia) or (NEW.ds_escopo <> OLD.ds_escopo)) then
	CALL update_arm_project(NEW.ds_versao, NEW.dt_inicio_prev, NEW.dt_fim_prev, NEW.ie_status, NEW.nr_seq_ordem_serv, NEW.cd_metodologia, NEW.ds_escopo, NEW.nm_usuario, NEW.nr_sequencia);
end if;

/* Atualizar o campo NR_SEQ_CLIENTE do PROJ_CRONOGRAMA assim que atualizar o mesmo campo do PROJ_PROJETO */


if (TG_OP = 'UPDATE') and (OLD.nr_seq_cliente <> NEW.nr_seq_cliente) then
	BEGIN

	update	proj_cronograma
	set	nr_seq_cliente = NEW.nr_seq_cliente,
        nm_usuario = NEW.nm_usuario,
        dt_atualizacao = NEW.dt_atualizacao
	where	nr_seq_proj = OLD.nr_sequencia;

    update	proj_rat
	set	nr_seq_cliente = NEW.nr_seq_cliente,
        nm_usuario = NEW.nm_usuario,
        dt_atualizacao = NEW.dt_atualizacao
	where	nr_seq_proj = OLD.nr_sequencia;

    update	proj_agenda
	set	nr_seq_cliente = NEW.nr_seq_cliente,
        nm_usuario = NEW.nm_usuario,
        dt_atualizacao = NEW.dt_atualizacao
	where	nr_seq_proj = OLD.nr_sequencia;

	end;
end if;

<<Fim>>
qt_reg_w := 0;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_proj_projeto_atual_after() FROM PUBLIC;

CREATE TRIGGER proj_projeto_atual_after
	AFTER INSERT OR UPDATE ON proj_projeto FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_proj_projeto_atual_after();

