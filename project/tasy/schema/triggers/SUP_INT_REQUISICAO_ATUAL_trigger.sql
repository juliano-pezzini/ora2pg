-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS sup_int_requisicao_atual ON sup_int_requisicao CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_sup_int_requisicao_atual() RETURNS trigger AS $BODY$
declare
qt_existe_erros_w	bigint;
nr_seq_nota_w    	bigint;
qt_existe_w        	bigint;
qt_existe_inc_w      	bigint;
nr_requisicao_w    	bigint;
BEGIN
  BEGIN

if (NEW.ie_conversao_dados = 'S') then

	if (NEW.cd_estabelecimento is not null) then
		BEGIN
		select	a.cd_estabelecimento
		into STRICT	NEW.cd_estabelecimento
		from	estabelecimento a
		where	a.cd_interno =  NEW.cd_estabelecimento  LIMIT 1;
		exception
		when others then
			CALL grava_sup_int_req_consist(NEW.nr_sequencia, wheb_mensagem_pck.get_texto(313247));
		end;
	end if;
end if;

select  count(*)
into STRICT    qt_existe_w
from    sup_parametro_integracao
where   cd_estabelecimento = NEW.cd_estabelecimento
and     ie_evento = 'RM'
and     ie_forma = 'R'
and     ie_situacao = 'A';

if (qt_existe_w > 0) and (OLD.dt_liberacao is null) and (NEW.dt_liberacao is not null) and (NEW.ie_forma_integracao = 'R') then
	BEGIN

	if (NEW.ie_conversao_dados = 'S') then

		if (NEW.nm_usuario is not null) then
			BEGIN
			select  cd_pessoa_fisica
			into STRICT    NEW.cd_pessoa_requisitante
			from    usuario
			where   nm_usuario = NEW.nm_usuario
			and	ie_situacao = 'A'  LIMIT 1;
			exception
			when others then
				CALL grava_sup_int_req_consist(NEW.nr_sequencia, wheb_mensagem_pck.get_texto(313250));
			end;
		end if;

		if (NEW.cd_centro_custo is not null) then
			BEGIN
			select  cd_centro_custo
			into STRICT    NEW.cd_centro_custo
			from    centro_custo
			where   cd_sistema_contabil = to_char(NEW.cd_centro_custo)  LIMIT 1;
			exception
			when others then
				CALL grava_sup_int_req_consist(NEW.nr_sequencia, wheb_mensagem_pck.get_texto(313254));
			end;
		end if;

		NEW.cd_local_estoque := OBTER_CONVERSAO_INTERNA(null, 'LOCAL_ESTOQUE', 'CD_LOCAL_ESTOQUE', NEW.cd_local_estoque);

		NEW.cd_local_estoque_destino := OBTER_CONVERSAO_INTERNA(null, 'LOCAL_ESTOQUE', 'CD_LOCAL_ESTOQUE', NEW.cd_local_estoque_destino);

		NEW.cd_operacao_estoque := OBTER_CONVERSAO_INTERNA(null, 'OPERACAO_ESTOQUE', 'CD_OPERACAO_ESTOQUE', NEW.cd_operacao_estoque);


	end if;

	NEW.dt_leitura  := LOCALTIMESTAMP;

	--projeto: 6407 requisição de materiais e medicamentos
		--rf 02 ? sgh > tasy - consistir as requisições
	CALL consiste_sup_int_requisicao(	NEW.nr_sequencia,
					NEW.cd_estabelecimento,
					NEW.cd_local_estoque,
					NEW.cd_operacao_estoque,
					NEW.cd_pessoa_requisitante,
					NEW.cd_estabelecimento_destino,
					NEW.cd_local_estoque_destino,
					NEW.cd_setor_atendimento,
					NEW.cd_centro_custo);



	--rf 03 - sgh > tasy - registrar requisição no tasy
	select  count(*)
	into STRICT    qt_existe_inc_w
	from    sup_int_req_consist
	where   nr_sequencia = NEW.nr_sequencia;

	if (qt_existe_inc_w = 0) then

		nr_requisicao_w := gerar_req_sup_int(	NEW.nr_sequencia, NEW.cd_estabelecimento, NEW.cd_local_estoque, NEW.dt_solicitacao_requisicao, NEW.dt_lib_requisicao, NEW.cd_operacao_estoque, NEW.cd_pessoa_requisitante, NEW.cd_pessoa_solicitante, NEW.cd_setor_atendimento, NEW.cd_estabelecimento_destino, NEW.cd_local_estoque_destino, NEW.cd_setor_entrega, NEW.cd_centro_custo, NEW.ds_observacao, NEW.nm_usuario, nr_requisicao_w, NEW.nr_documento_externo);

			if (nr_requisicao_w is not null) then
				NEW.nr_requisicao      := nr_requisicao_w;
				NEW.dt_confirma_integracao  := LOCALTIMESTAMP;

				update  requisicao_material
				set     ie_origem_requisicao = 'SGH'
				where  nr_requisicao = nr_requisicao_w;
			end if;
	end if;
        end;
end if;
  END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_sup_int_requisicao_atual() FROM PUBLIC;

CREATE TRIGGER sup_int_requisicao_atual
	BEFORE UPDATE ON sup_int_requisicao FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_sup_int_requisicao_atual();

