-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pessoa_juridica_afterupdate ON pessoa_juridica CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pessoa_juridica_afterupdate() RETURNS trigger AS $BODY$
declare
reg_integracao_p		gerar_int_padrao.reg_integracao;
cd_conta_pagamento_w	varchar(20);
CD_CONTA_RECEBIMENTO_W	varchar(20);
CD_ESTABELECIMENTO_W	integer;
QT_conta_pagamento_w	integer;
QT_CONTA_RECEBIMENTO_W	integer;

BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
    select coalesce(max(CD_CONTA_PAGAMENTO), 'X'),
           coalesce(max(CD_CONTA_RECEBIMENTO), 'X'),
           coalesce(max(CD_ESTABELECIMENTO), 0)
      into STRICT CD_CONTA_PAGAMENTO_W,
           CD_CONTA_RECEBIMENTO_W,
           CD_ESTABELECIMENTO_W
      from TIPO_PESSOA_JURIDICA
     where CD_TIPO_PESSOA	= NEW.CD_TIPO_PESSOA
       and coalesce(IE_ATUALIZA_PJ, 'S') = 'S';

     select COUNT(1) 
       into STRICT QT_CONTA_PAGAMENTO_W
       from PESSOA_JUR_CONTA_CONT
      where CD_CGC = NEW.cd_cgc
        and IE_TIPO_CONTA = 'P'
        AND CD_CONTA_CONTABIL = cd_conta_pagamento_w;

     select COUNT(1) 
       into STRICT QT_CONTA_RECEBIMENTO_W
       from PESSOA_JUR_CONTA_CONT
      where CD_CGC = NEW.cd_cgc
        and IE_TIPO_CONTA = 'R'
        and CD_CONTA_CONTABIL = CD_CONTA_RECEBIMENTO_W;

    if (NEW.CD_TIPO_PESSOA <> OLD.CD_TIPO_PESSOA) and (CD_CONTA_PAGAMENTO_W <> 'X') AND (QT_CONTA_PAGAMENTO_W =0) then
       update PESSOA_JUR_CONTA_CONT
       set DT_FIM_VIGENCIA =LOCALTIMESTAMP
     where CD_CGC = NEW.cd_cgc
       and IE_TIPO_CONTA <> 'T'
       and IE_TIPO_CONTA = 'P'
       and DT_INICIO_VIGENCIA is not null
       and DT_FIM_VIGENCIA is null;

     insert into pessoa_jur_conta_cont(
          nr_sequencia,
          cd_cgc,
          cd_conta_contabil,
          dt_atualizacao,
          nm_usuario,
          cd_empresa,
          ie_tipo_conta,
          dt_atualizacao_nrec,
          nm_usuario_nrec,
          dt_inicio_vigencia,
          dt_fim_vigencia,
          cd_estabelecimento)
        SELECT	nextval('pessoa_jur_conta_cont_seq'),
          NEW.cd_cgc,
          cd_conta_pagamento_w,
          LOCALTIMESTAMP,
          NEW.nm_usuario,
          a.cd_empresa,
          'P',
          LOCALTIMESTAMP,
          NEW.nm_usuario,
          obter_vigencia_conta_contabil(cd_conta_pagamento_w, 'I'),
          obter_vigencia_conta_contabil(cd_conta_pagamento_w, 'F'),
          CASE WHEN cd_estabelecimento_w=0 THEN  null  ELSE cd_estabelecimento_w END 
        from	EMPRESA a;
  end if;
		
 if (NEW.CD_TIPO_PESSOA <> OLD.CD_TIPO_PESSOA) and (CD_CONTA_RECEBIMENTO_W <> 'X')  AND (QT_CONTA_RECEBIMENTO_W =0) then
    update PESSOA_JUR_CONTA_CONT
       set DT_FIM_VIGENCIA =LOCALTIMESTAMP
     where CD_CGC = NEW.cd_cgc
       and IE_TIPO_CONTA <> 'T'
       and IE_TIPO_CONTA = 'R'
       and DT_INICIO_VIGENCIA is not null
       and DT_FIM_VIGENCIA is null;

	insert into pessoa_jur_conta_cont(
		nr_sequencia,
		cd_cgc,
		cd_conta_contabil,
		dt_atualizacao,
		nm_usuario,
		cd_empresa,
		ie_tipo_conta,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_inicio_vigencia,
		dt_fim_vigencia,
		cd_estabelecimento)
	SELECT	nextval('pessoa_jur_conta_cont_seq'),
		NEW.cd_cgc,
		cd_conta_recebimento_w,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		a.cd_empresa,
		'R',
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		obter_vigencia_conta_contabil(cd_conta_pagamento_w, 'I'),
		obter_vigencia_conta_contabil(cd_conta_pagamento_w, 'F'),
		CASE WHEN cd_estabelecimento_w=0 THEN  null  ELSE cd_estabelecimento_w END 
	from	EMPRESA a;
end if;
  
/* Projeto MXM (7077)  - Exportar cadastro pessoa juridica */


CALL gravar_agend_integracao(556,'CD_PESSOA_JURIDICA='||NEW.cd_cgc||';CD_PESSOA_FISICA='||null||';'); --Fornecedor

reg_integracao_p.ie_operacao		:=	'A';
reg_integracao_p.cd_tipo_pessoa		:=	NEW.cd_tipo_pessoa;
reg_integracao_p.cd_estab_documento	:=	wheb_usuario_pck.get_cd_estabelecimento;
reg_integracao_p := gerar_int_padrao.gravar_integracao('7', NEW.cd_cgc, NEW.nm_usuario, reg_integracao_p);
end if;

RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pessoa_juridica_afterupdate() FROM PUBLIC;

CREATE TRIGGER pessoa_juridica_afterupdate
	AFTER UPDATE ON pessoa_juridica FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pessoa_juridica_afterupdate();

