-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS adiantamento_atual ON adiantamento CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_adiantamento_atual() RETURNS trigger AS $BODY$
DECLARE

vl_devolucao_w		double precision	:= 0;
vl_baixa_titulo_w		double precision	:= 0;
vl_receb_conv_w		double precision	:= 0;
dt_fechamento_w		timestamp		:= null;
nr_recibo_w		bigint;
vl_vinc_lote_audit_w	double precision;
ie_atualizar_saldo_adiant_w	varchar(1)	:= 'S';
vl_receb_adiant_w		double precision	:= 0;
vl_troco_adiant_w		double precision 	:= 0;
ie_devo_adiant_w		varchar(1);
ie_adto_mesma_pessoa_w	varchar(1);
cd_pessoa_fisica_w 		caixa_receb.cd_pessoa_fisica%type;
cd_cgc_w				caixa_receb.cd_cgc%type;
ie_permite_orcamento_aprov_w varchar(1);
ie_status_orcamento_w    orcamento_paciente.ie_status_orcamento%type;

BEGIN

ie_devo_adiant_w := Obter_Param_Usuario(813, 195, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, obter_estabelecimento_ativo, ie_devo_adiant_w);
ie_adto_mesma_pessoa_w := Obter_Param_Usuario(813, 207, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, obter_estabelecimento_ativo, ie_adto_mesma_pessoa_w);

if (TG_OP = 'INSERT') then
	BEGIN
	NEW.nm_usuario_nrec		:= wheb_usuario_pck.get_nm_usuario;
	NEW.dt_atualizacao_nrec	:= LOCALTIMESTAMP;
	end;
end if;

if	((TG_OP = 'UPDATE') and
	((NEW.cd_tipo_recebimento <> OLD.cd_tipo_recebimento) or (NEW.ie_situacao <> OLD.ie_situacao) or (NEW.ie_status <> OLD.ie_status))) then
	CALL gerar_adiantamento_alteracao(NEW.nr_adiantamento,wheb_usuario_pck.get_nm_usuario,OLD.cd_tipo_recebimento,NEW.cd_tipo_recebimento,OLD.ie_situacao,NEW.ie_situacao,OLD.ie_status,NEW.ie_status);
end if;

if (wheb_usuario_pck.get_ie_executar_trigger	= 'S')  then
	if (NEW.vl_adiantamento > 0) then
		BEGIN

		select	coalesce(sum(vl_devolucao),0)
		into STRICT	vl_devolucao_w
		from	adiantamento_dev
		where	nr_adiantamento	= NEW.nr_adiantamento;

		select	coalesce(max(ie_atualizar_saldo_adiant_mens),'S')	
		into STRICT	ie_atualizar_saldo_adiant_w
		from	pls_parametros_cr a
		where	a.cd_estabelecimento	= NEW.cd_estabelecimento;

		select	coalesce(sum(vl_recebido),0) + coalesce(sum(vl_rec_maior),0) + coalesce(sum(vl_juros),0) + coalesce(sum(vl_multa),0)
		into STRICT	vl_baixa_titulo_w
		from	Titulo_Receber_liq
		where	nr_adiantamento	= NEW.nr_adiantamento
		and	coalesce(ie_lib_caixa, 'S') = 'S';
		
		if (ie_atualizar_saldo_adiant_w = 'N') then
			select	coalesce(sum(vl_recebido),0) + coalesce(sum(vl_rec_maior),0) + coalesce(sum(vl_juros),0) + coalesce(sum(vl_multa),0)
			into STRICT	vl_baixa_titulo_w
			from	Titulo_Receber_liq
			where	nr_adiantamento	= NEW.nr_adiantamento
			and	coalesce(ie_lib_caixa, 'S') = 'S'
			and	exists (SELECT	1
					from	movto_trans_financ x
					where	x.nr_adiantamento = NEW.nr_adiantamento);
		end if;

		select 	coalesce(sum(b.vl_vinculacao),0)
		into STRICT	vl_receb_conv_w
		from	convenio_retorno c,
			convenio_ret_receb b,
			convenio_receb a
		where	b.nr_seq_receb	= a.nr_sequencia
		and	b.nr_seq_retorno	= c.nr_sequencia
		and	c.ie_status_retorno	<> 'F'
		and	a.nr_adiantamento	= NEW.nr_adiantamento;

		select	coalesce(sum(a.vl_vinculado),0)
		into STRICT	vl_receb_adiant_w
		from	convenio_receb_adiant a
		where	not exists (SELECT	1
			from	convenio_retorno y,
				convenio_ret_receb x
			where	y.ie_status_retorno	= 'F'
			and	x.nr_seq_retorno	= y.nr_sequencia
			and	x.nr_seq_receb	= a.nr_seq_receb)
		and	a.nr_adiantamento	= NEW.nr_adiantamento;

		select 	coalesce(sum(b.vl_vinculado),0)
		into STRICT	vl_vinc_lote_audit_w
		from	lote_audit_hist c,
			lote_audit_hist_receb b,
			convenio_receb a
		where	b.nr_seq_receb	= a.nr_sequencia
		and	b.nr_seq_lote	= c.nr_sequencia
		and	c.dt_fechamento is null
		and	a.nr_adiantamento	= NEW.nr_adiantamento;

		end;
	end if;
	
	if (OLD.nr_seq_caixa_rec is not null) and (NEW.ie_lib_caixa = 'S') and (coalesce(ie_devo_adiant_w,'N') = 'N') then
	
		select	coalesce(sum(a.vl_troco_informado),0)
		into STRICT	vl_troco_adiant_w
		from	caixa_receb a,
			tipo_recebimento b
		where	a.cd_tipo_receb_caixa	= b.cd_tipo_recebimento
		and	a.dt_cancelamento 	is null
		and	a.nr_sequencia		= OLD.nr_seq_caixa_rec;		
	end if;

	if (OLD.nr_seq_caixa_rec is not null) and (OLD.vl_adiantamento <> NEW.vl_adiantamento) then
		select	max(dt_fechamento),
			max(nr_recibo)
		into STRICT	dt_fechamento_w,
			nr_recibo_w
		from	caixa_receb
		where	nr_sequencia	= OLD.nr_seq_caixa_rec;

		if (dt_fechamento_w is not null) then

			CALL wheb_mensagem_pck.exibir_mensagem_abort(185392,'NR_RECIBO_W='||nr_recibo_w);
		end if;
	end if;	

	NEW.vl_saldo	:= coalesce(NEW.vl_adiantamento,0) - coalesce(vl_devolucao_w,0) - coalesce(vl_baixa_titulo_w,0) - coalesce(vl_receb_conv_w,0) - coalesce(vl_vinc_lote_audit_w,0) - coalesce(vl_receb_adiant_w,0) - coalesce(vl_troco_adiant_w,0);

	if (NEW.vl_adiantamento < 0) or (NEW.vl_saldo < 0) then

		CALL wheb_mensagem_pck.exibir_mensagem_abort(185393,'VL_SALDO_W='||NEW.vl_saldo);
	end if;


	if	((TG_OP = 'INSERT') and (NEW.cd_pessoa_fisica is null) and (NEW.cd_cgc is null)) or
		((TG_OP = 'UPDATE') and (NEW.cd_pessoa_fisica is null) and (NEW.cd_cgc is null) and
		 ((OLD.cd_pessoa_fisica is not null) or (OLD.cd_cgc is not null))) then
		
		CALL wheb_mensagem_pck.exibir_mensagem_abort(185394);
	end if;
	
	if (NEW.ie_lib_caixa = 'N') and (NEW.nr_seq_caixa_rec is null) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(200046);
	end if;
	
	if (coalesce(ie_adto_mesma_pessoa_w,'N') = 'S') and (NEW.nr_seq_caixa_rec is not null) then		
		select	coalesce(max(cd_pessoa_fisica),0),
				coalesce(max(cd_cgc),0)
		into STRICT	cd_pessoa_fisica_w,
				cd_cgc_w			
		from	caixa_receb
		where	nr_sequencia	= NEW.nr_seq_caixa_rec;
		
		if ((cd_pessoa_fisica_w > 0) and (coalesce(NEW.cd_pessoa_fisica,0) <> cd_pessoa_fisica_w)) or
			((cd_cgc_w > 0) and (coalesce(NEW.cd_cgc,0) <> cd_cgc_w)) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(460322);	
		end if;		
	end if;
end if;

ie_permite_orcamento_aprov_w := obter_param_usuario(802, 49, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, obter_estabelecimento_ativo, ie_permite_orcamento_aprov_w);

if (NEW.NR_SEQ_ORCAMENTO_PAC is not null) and (coalesce(ie_permite_orcamento_aprov_w,'N') = 'S') then

	select max(ie_status_orcamento)
	into STRICT ie_status_orcamento_w
	from orcamento_paciente
	where NR_SEQUENCIA_ORCAMENTO = NEW.NR_SEQ_ORCAMENTO_PAC;
	
	if (ie_status_orcamento_w != 2) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1191639);

	end if;

end if;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_adiantamento_atual() FROM PUBLIC;

CREATE TRIGGER adiantamento_atual
	BEFORE INSERT OR UPDATE ON adiantamento FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_adiantamento_atual();

