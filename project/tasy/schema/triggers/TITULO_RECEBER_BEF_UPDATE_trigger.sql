-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS titulo_receber_bef_update ON titulo_receber CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_titulo_receber_bef_update() RETURNS trigger AS $BODY$
DECLARE

ie_titulo_prot_zerado_w		varchar(100);
qt_reg_w			smallint;
ie_fechamento_atual_w		varchar(1);
cd_convenio_w			integer;
ie_cancel_tit_a600_w		pls_parametros_camara.ie_permite_canc_tit_vinc_a600%type;
nr_seq_lote_camara_w		pls_lote_camara_comp.nr_sequencia%type;
nr_seq_ptu_fatura_w		ptu_fatura.nr_sequencia%type;
dt_ultima_baixa_banc_w		titulo_receber_liq.dt_recebimento%type;
vl_glosa_w			titulo_receber_liq.vl_glosa%type;

BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

if (coalesce(wheb_usuario_pck.get_ie_lote_contabil,'N') = 'S') or (coalesce(wheb_usuario_pck.get_ie_atualizacao_contabil,'N') = 'S') then
	goto Final;
end if;

cd_convenio_w	:= NEW.cd_convenio_conta;

if (cd_convenio_w	is null) then

	select	max(a.cd_convenio)
	into STRICT	cd_convenio_w
	from	protocolo_convenio a
	where	a.nr_seq_protocolo	= NEW.nr_seq_protocolo;

end if;

/* Alteração da data emissão */


if	((fin_obter_se_mes_aberto(NEW.cd_estabelecimento, NEW.dt_emissao,'CR',null,cd_convenio_w,null,null) = 'N') or (fin_obter_se_mes_aberto(NEW.cd_estabelecimento, OLD.dt_emissao,'CR',null,cd_convenio_w,null,null) = 'N'))and (OLD.dt_emissao <> NEW.dt_emissao) then
	--O mês/dia financeiro do título já está fechado! Não é possível alterar a data de emissão.

	CALL Wheb_mensagem_pck.exibir_mensagem_abort(204424);
end if;

/* Alteração da data contábil */


if	(((NEW.dt_contabil is not null) and (fin_obter_se_mes_aberto(NEW.cd_estabelecimento, NEW.dt_contabil,'CR',null,cd_convenio_w,null,null) = 'N')) or
	 ((OLD.dt_emissao is not null) and (fin_obter_se_mes_aberto(NEW.cd_estabelecimento, OLD.dt_emissao,'CR',null,cd_convenio_w,null,null) = 'N'))) and (OLD.dt_contabil <> NEW.dt_contabil) then
	--O mês/dia financeiro do título (#@NR_TITULO#@) já está fechado! Não é possível alterar a data de contábilização.

	--Dt contábil: #@DT_CONTABIL#@. Dt emissão: #@DT_EMISSAO#@

	CALL Wheb_mensagem_pck.exibir_mensagem_abort(204425,	'NR_TITULO=' || NEW.nr_titulo ||
							';DT_CONTABIL=' || to_char(NEW.dt_contabil,'dd/mm/yyyy') ||
							';DT_EMISSAO=' || to_char(OLD.dt_emissao,'dd/mm/yyyy'));
end if;

/* Projeto Davita  - Não deixa gerar movimento contabil após fechamento  da data */


if (OLD.dt_contabil <> NEW.dt_contabil) then
	CALL philips_contabil_pck.valida_se_dia_fechado(OBTER_EMPRESA_ESTAB(NEW.cd_estabelecimento),NEW.dt_contabil);
end if;

if (NEW.nr_lote_contabil > 0) and (OLD.dt_contabil is not null) and (OLD.dt_contabil <> NEW.dt_contabil) then
	--O título #@NR_TITULO#@  já está contabilizado no lote #@NR_LOTE#@ ! Não é possível alterar a data contábil.

	CALL Wheb_mensagem_pck.exibir_mensagem_abort(204426, 'NR_TITULO=' || NEW.nr_titulo ||
							';NR_LOTE=' || NEW.nr_lote_contabil);
end if;

/* Cancelamento */


ie_fechamento_atual_w := obter_param_usuario(801, 115, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_fechamento_atual_w);

if (ie_fechamento_atual_w	= 'S') and (fin_obter_se_mes_aberto(NEW.cd_estabelecimento, LOCALTIMESTAMP,'CR',null,cd_convenio_w,NEW.nr_interno_conta,null) = 'N') and (NEW.ie_situacao = '3') and (OLD.ie_situacao <> NEW.ie_situacao) then
	--O mês/dia financeiro do título já está fechado! Não é possível cancelar o mesmo.

	CALL Wheb_mensagem_pck.exibir_mensagem_abort(204423);

elsif (coalesce(ie_fechamento_atual_w,'N') = 'N') and
	((fin_obter_se_mes_aberto(NEW.cd_estabelecimento, NEW.dt_contabil,'CR',null,cd_convenio_w,NEW.nr_interno_conta,null) = 'N') or (fin_obter_se_mes_aberto(NEW.cd_estabelecimento, OLD.dt_emissao,'CR',null,cd_convenio_w,NEW.nr_interno_conta,null) = 'N')) and (NEW.ie_situacao = '3') and (OLD.ie_situacao <> NEW.ie_situacao) then
	--O mês/dia financeiro do título já está fechado! Não é possível cancelar o mesmo.

	CALL Wheb_mensagem_pck.exibir_mensagem_abort(204422);
end if;

select	coalesce(max(ie_titulo_prot_zerado),'N')
into STRICT	ie_titulo_prot_zerado_w
from	parametro_contas_receber
where	cd_estabelecimento		= NEW.cd_estabelecimento;

-- Edgar 18/04/2008, OS 89930 

if (ie_titulo_prot_zerado_w = 'N') and (NEW.vl_titulo = 0) and (NEW.vl_titulo <> OLD.vl_titulo) then -- dsantos em 15/03/2011, alterado para OS 297538 conforme sugestao do Egdar
	--O valor do título não pode ser zero!

	CALL Wheb_mensagem_pck.exibir_mensagem_abort(204420);
end if;

if	((NEW.dt_pagamento_previsto <> OLD.dt_pagamento_previsto) or (NEW.dt_emissao <> OLD.dt_emissao)) and (trunc(NEW.dt_pagamento_previsto, 'dd') < trunc(NEW.dt_emissao, 'dd')) then
	--A data de vencimento não pode ser menor que a data de emissão do título!

	CALL Wheb_mensagem_pck.exibir_mensagem_abort(204421);
end if;

--aldellandrea 01/12/2015 OS962185 -- Validar se permite cancelar titulo de A600

if	((NEW.ie_origem_titulo = '13') or   --OPS - Faturamento
	 (NEW.ie_origem_titulo = '11')) and (NEW.ie_situacao = '3')	then --contestação
	--verifica o campo na regra se permite cancelar título de a600	

	select	max(coalesce(ie_permite_canc_tit_vinc_a600, 'S'))
	into STRICT	ie_cancel_tit_a600_w
	from	pls_parametros_camara
	where	cd_estabelecimento = NEW.cd_estabelecimento;
	
	if (ie_cancel_tit_a600_w = 'N') then
	
		select  max(y.nr_sequencia)
		into STRICT	nr_seq_lote_camara_w
		from 	pls_titulo_lote_camara z,
			pls_lote_camara_comp x,
			ptu_camara_compensacao y
		where 	x.nr_sequencia 		= y.nr_seq_lote_camara
		and 	x.nr_sequencia 		= z.nr_seq_lote_camara
		and 	z.nr_titulo_receber  	= NEW.nr_titulo;
		
		if (nr_seq_lote_camara_w is not null) then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(373291, 'NR_TITULO=' || NEW.nr_titulo ||
									';NR_LOTE=' || nr_seq_lote_camara_w);
		end if;	
		
	end if;	
end if;

-- Gerar registro 510

if (NEW.ie_origem_titulo = '13') and -- OPS - Faturamento
	(OLD.ie_situacao != '2') and -- Não podia estar liquidado
	(NEW.ie_situacao = '2') and -- Estar sendo liquidado
	(NEW.dt_liquidacao is not null) then -- Ter data de liquidação

	select	max(u.nr_sequencia)
	into STRICT	nr_seq_ptu_fatura_w
	from	ptu_fatura	u,
		pls_fatura	s
	where	s.nr_sequencia	= u.nr_seq_pls_fatura
	and	s.nr_titulo	= NEW.nr_titulo;
	
	
	if (nr_seq_ptu_fatura_w is null) then
		select	max(u.nr_sequencia)
		into STRICT	nr_seq_ptu_fatura_w
		from	ptu_fatura	u,
			pls_fatura	s
		where	s.nr_sequencia	= u.nr_seq_pls_fatura
		and	s.nr_titulo_ndc	= NEW.nr_titulo;
	end if;
	
	-- Gerar A510

	if (nr_seq_ptu_fatura_w is not null) then
	
		-- Busca a ultima data de recebimento do titulo, que não tenha valor de glosa (indicando baixa bancaria)

		select	max(dt_recebimento)
		into STRICT	dt_ultima_baixa_banc_w
		from	titulo_receber_liq
		where	nr_titulo	= NEW.nr_titulo
		and	vl_glosa	= 0;
		
		select	sum(coalesce(vl_glosa,0))
		into STRICT	vl_glosa_w
		from	titulo_receber_liq
		where	nr_titulo	= NEW.nr_titulo;		
		
		-- se a data de baixa bancaria não existir ou for maior ou igual ( teoricamente só pode ser menor ou igual) que a data de liquidação,  então utiliza a data de baixa bancaria,		

		if (dt_ultima_baixa_banc_w is null) or (dt_ultima_baixa_banc_w >= NEW.dt_liquidacao)then
		
			dt_ultima_baixa_banc_w := NEW.dt_liquidacao;
		end if;
				
		CALL ptu_gerar_fat_baixa_interc( nr_seq_ptu_fatura_w, dt_ultima_baixa_banc_w, NEW.cd_estabelecimento, NEW.nm_usuario, 'N', null, null, vl_glosa_w, NEW.dt_pagamento_previsto);
	end if;	
end if;

--fim aldellandrea

<<Final>>
qt_reg_w	:= 0;

RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_titulo_receber_bef_update() FROM PUBLIC;

CREATE TRIGGER titulo_receber_bef_update
	BEFORE UPDATE ON titulo_receber FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_titulo_receber_bef_update();

