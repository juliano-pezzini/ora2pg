-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS prescr_mat_hor_atual ON prescr_mat_hor CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_prescr_mat_hor_atual() RETURNS trigger AS $BODY$
declare

dt_validade_w	timestamp;
ds_log_w	varchar(2000) := '';
nr_seq_log_w	bigint;
nr_atendimento_w bigint;
ie_status_processo_w adep_processo.ie_status_processo%type;
nr_seq_cpoe_w		prescr_material.nr_seq_dieta_cpoe%type;
ie_verificado_w		varchar(1);

BEGIN
if (coalesce(OLD.DT_HORARIO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_HORARIO) and (NEW.DT_HORARIO is not null) then
	NEW.ds_utc		:= obter_data_utc(NEW.DT_HORARIO, 'HV');	
end if;

if (NEW.nr_seq_turno is not null) and
	((OLD.nr_seq_turno is null) or (NEW.nr_seq_turno <> OLD.nr_seq_turno)) then
	select	coalesce(max(ds_turno),null)
	into STRICT	NEW.ds_turno
	from	regra_turno_disp
	where	nr_sequencia	= NEW.nr_seq_turno;
end if;

if	((NEW.dt_fim_horario	is not null) or (NEW.dt_suspensao	is not null)) and (OLD.dt_primeira_checagem is not null) then
	NEW.dt_primeira_checagem	:= null;
end if;	


if  ((coalesce(NEW.nr_atendimento,0) > 0) and (coalesce(NEW.nr_atendimento,0) <> coalesce(OLD.nr_atendimento,0))) then
	select coalesce(max(nr_atendimento),0)
	into STRICT nr_atendimento_w
	from prescr_medica
	where nr_prescricao = NEW.nr_prescricao;
	
	if ((nr_atendimento_w > 0) and (nr_atendimento_w <> coalesce(NEW.nr_atendimento,0))) then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(173298);
	end if;
end if;


if (NEW.nr_seq_processo is not null) then
	select  coalesce(max(a.ie_status_processo), 'G')
	into STRICT 	ie_status_processo_w
	from 	adep_processo a
	where 	a.nr_sequencia = NEW.nr_seq_processo;	
	
	if (OLD.dt_primeira_checagem is null
		and NEW.dt_primeira_checagem is not null
		and ie_status_processo_w = 'P') then
		update 	adep_processo
		set 	dt_primeira_checagem = NEW.dt_primeira_checagem
		where 	nr_sequencia = NEW.nr_seq_processo;
	else
		update 	adep_processo
		set 	dt_primeira_checagem  = NULL
		where 	nr_sequencia = NEW.nr_seq_processo;
	end if;
end if;

if (coalesce(OLD.nr_sequencia,0) = 0) then
	NEW.ds_stack	:= substr(dbms_utility.format_call_stack,1,2000);
end if;	


if (TG_OP = 'INSERT') then

	select	max(coalesce(a.nr_seq_mat_cpoe,a.nr_seq_dieta_cpoe))
	into STRICT	nr_seq_cpoe_w
	from	prescr_material a
	where	a.nr_sequencia = NEW.nr_seq_material
	and		a.nr_prescricao = NEW.nr_prescricao;

	select	coalesce(max('S'), 'N')
	into STRICT	ie_verificado_w
	from	registro_validacao_adep
	where	nr_seq_cpoe = nr_seq_cpoe_w;

	if (ie_verificado_w = 'S') then
		NEW.ie_ciente := 'S';
	end if;
	
end if;

RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_prescr_mat_hor_atual() FROM PUBLIC;

CREATE TRIGGER prescr_mat_hor_atual
	BEFORE INSERT OR UPDATE ON prescr_mat_hor FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_prescr_mat_hor_atual();

