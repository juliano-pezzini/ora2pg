-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS atestado_paciente_pend_atual ON atestado_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_atestado_paciente_pend_atual() RETURNS trigger AS $BODY$
declare

qt_reg_w		smallint;
ie_tipo_w		varchar(10);
ie_lib_atestado_w	varchar(10);
nm_usuario_w        varchar(15);

qt_tempo_ma_w				wl_regra_item.qt_tempo_normal%type;
nr_seq_regra_wl_ma_w		wl_regra_item.nr_sequencia%type;
is_rule_tasklist_ma_w		wl_item.nr_sequencia%type;

c01 CURSOR FOR
	SELECT	coalesce(b.qt_tempo_normal,0),
			coalesce(b.nr_sequencia, 0)
	from 	wl_regra_worklist a,
			wl_regra_item b
	where	a.nr_sequencia = b.nr_seq_regra
	and		b.ie_situacao = 'A'
	and		a.nr_seq_item = (	SELECT	max(x.nr_sequencia)
							from	wl_item x
							where	x.nr_sequencia = a.nr_seq_item
							and		x.cd_categoria = 'MA'
							and		x.ie_situacao = 'A');
							

BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

if (NEW.dt_liberacao is null) then

     if (coalesce(NEW.IE_AVALIADOR_AUX,'N') = 'S') and (NEW.DT_LIBERACAO_AUX is not null)then

	
		select 	obter_usuario_pf(NEW.cd_medico) 
		into STRICT	nm_usuario_w
		;
		
		Update    pep_item_pendente
		set		nm_usuario = nm_usuario_w
		where	NR_SEQ_ATESTADO = NEW.nr_sequencia;
		
	end if;

end if;

select	max(ie_lib_atestado)
into STRICT	ie_lib_atestado_w
from	parametro_medico
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

if (coalesce(ie_lib_atestado_w,'N') = 'S') then
	if (NEW.dt_liberacao is null) then
		ie_tipo_w := 'AT';
	elsif (OLD.dt_liberacao is null) and (NEW.dt_liberacao is not null) then
		ie_tipo_w := 'XAT';
	end if;
	if (ie_tipo_w	is not null) then
    CALL Gerar_registro_pendente_PEP(
      cd_tipo_registro_p => ie_tipo_w,
      nr_sequencia_registro_p => NEW.nr_sequencia,
      cd_pessoa_fisica_p => coalesce(NEW.cd_pessoa_fisica,substr(obter_pessoa_atendimento(NEW.nr_atendimento,'C'),1,255)),
      nr_atendimento_p => NEW.nr_atendimento, 
      nm_usuario_p => NEW.nm_usuario,
      nr_atend_cons_pepa_p=> NEW.nr_seq_atend_cons_pepa
    );
	end if;
end if;

if (pkg_i18n.get_user_locale = 'ja_JP') then
BEGIN
select	count(a.nr_sequencia)
into STRICT	is_rule_tasklist_ma_w
from	wl_item a,
		wl_regra_worklist b,
		wl_regra_item c
where	a.nr_sequencia = b.nr_seq_item
and	b.nr_sequencia = c.nr_seq_regra
and	a.cd_categoria = 'MA'
and	a.ie_situacao = 'A'
and	c.ie_situacao = 'A';

if (OLD.dt_liberacao is null and NEW.dt_liberacao is not null and is_rule_tasklist_ma_w > 0 ) then

	open c01;
	loop
	fetch c01 into
		qt_tempo_ma_w,
		nr_seq_regra_wl_ma_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		BEGIN
			if (coalesce(qt_tempo_ma_w,0) > 0) then

				CALL wl_gerar_finalizar_tarefa('MA','I',NEW.nr_atendimento,NEW.cd_pessoa_fisica,wheb_usuario_pck.get_nm_usuario,LOCALTIMESTAMP+(qt_tempo_ma_w/24),'N',
										null,null,null,null,null,null,null,null,null,nr_seq_regra_wl_ma_w,null,null,null,null,null,null,null,LOCALTIMESTAMP,null);
			end if;
		end;
	end loop;
	close c01;
  end if;
end;
end if;

if (OLD.dt_inativacao is null and NEW.dt_inativacao is not null and NEW.cd_evolucao is not null) then

delete from clinical_note_soap_data where cd_evolucao = NEW.cd_evolucao and ie_med_rec_type = 'MED_CERT'  and ie_stage = 1  and ie_soap_type = 'P' and nr_seq_med_item = NEW.nr_sequencia;
end if;

<<Final>>
qt_reg_w	:= 0;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_atestado_paciente_pend_atual() FROM PUBLIC;

CREATE TRIGGER atestado_paciente_pend_atual
	AFTER INSERT OR UPDATE ON atestado_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_atestado_paciente_pend_atual();

