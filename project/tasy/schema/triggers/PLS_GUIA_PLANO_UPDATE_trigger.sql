-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pls_guia_plano_update ON pls_guia_plano CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pls_guia_plano_update() RETURNS trigger AS $BODY$
declare
 
--pragma autonomous_transaction; 
 
qt_item_invalido_w	bigint	:= 0;
ds_estagio_w		varchar(255)	:= null;
ds_observacao_w		varchar(4000);
detalhes_exec_w		varchar(2000);
nr_seq_prot_atend_w	pls_protocolo_atendimento.nr_sequencia%type;
qt_proc_diarias_w	bigint;
BEGIN
  BEGIN 
 
if (NEW.ie_pagamento_automatico = 'PA' and NEW.nr_seq_pgto_aut is null) then 
	ds_observacao_w	:= 'Guia setada para pagamento automático sem regra de pagamento informada.'|| chr(13) || chr(10) || 
			  'Aplicação Tasy: '||pls_se_aplicacao_tasy || chr(13) || chr(10) || 
			  'Função ativa: '||obter_funcao_ativa || chr(13) || chr(10) || 
			  'Nome máquina: '||wheb_usuario_pck.get_machine|| chr(13) || chr(10) || 
			  'Usuário: '||coalesce(wheb_usuario_pck.get_nm_usuario,'Usuário não identificado ');
 
	insert into 	pls_guia_plano_historico(nr_sequencia, nm_usuario, dt_atualizacao, 
						 nr_seq_guia, dt_historico, ie_tipo_historico, 
						 ie_origem_historico, ds_observacao) 
					values (nextval('pls_guia_plano_historico_seq'), NEW.nm_usuario, LOCALTIMESTAMP, 
						 NEW.nr_sequencia, LOCALTIMESTAMP, 'L', 
						 'A', ds_observacao_w);
end if;
 
 
if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then 
	/* Consistir o estágio da guia com o status dos itens da guia */
 
	if (coalesce(OLD.ie_estagio,0) <> 9 and (coalesce(NEW.ie_estagio,0) <> coalesce(OLD.ie_estagio,0))) then 
 
		if (pls_se_estagio_aut_valido(NEW.nr_sequencia,NEW.ie_estagio) = 'N') then 
			/* Retorna função que está sendo executada e Call Stack*/
 
			ds_estagio_w	:= obter_valor_dominio(2055,NEW.ie_estagio);
 
			detalhes_exec_w	:= substr(pls_obter_detalhe_exec(true),1,2000);
 
			ds_observacao_w	:= 	'Mudança de estágio não permitida ' || chr(13) || chr(10) || 
						'Estágio anterior: ' || obter_valor_dominio(2055,OLD.ie_estagio) || chr(13) || chr(10) || 
						'Estágio novo: ' || obter_valor_dominio(2055,NEW.ie_estagio)|| chr(13) || chr(10) || 
						'Detalhes técnicos: ' || chr(13) || chr(10) || 
						detalhes_exec_w;
 
			/* Gravar em log, qual a guia, estágio que foi alterado e stack de execução */
 
			insert into pls_guia_plano_historico(nr_sequencia, 
				nm_usuario, 
				dt_atualizacao, 
				nr_seq_guia, 
				dt_historico, 
				ie_tipo_historico, 
				ie_origem_historico, 
				ds_observacao) 
			values (nextval('pls_guia_plano_historico_seq'), 
				NEW.nm_usuario, 
				LOCALTIMESTAMP, 
				NEW.nr_sequencia, 
				LOCALTIMESTAMP, 
				'EI', 
				'A', 
				ds_observacao_w);
 
		end if;
	end if;
end if;
 
if (coalesce(OLD.ie_status,0) <> 1 and coalesce(NEW.ie_status,0) = 1) then 
	select	coalesce(sum(a.qt_autorizada), 0) 
	into STRICT	qt_proc_diarias_w 
	from	pls_guia_plano_proc a, 
		procedimento b 
	where	a.nr_seq_guia		= NEW.nr_sequencia 
	and	a.cd_procedimento	= b.cd_procedimento 
	and	a.ie_origem_proced 	= b.ie_origem_proced 
	and	b.ie_classificacao 	= '3'; 			--Diárias 
	if (qt_proc_diarias_w > 0) then 
		NEW.qt_dia_autorizado	:= qt_proc_diarias_w;
	end if;
end if;
 
BEGIN 
	select	nr_sequencia 
	into STRICT	nr_seq_prot_atend_w 
	from	pls_protocolo_atendimento 
	where 	nr_seq_guia	= NEW.nr_sequencia;
exception 
when others then 
	nr_seq_prot_atend_w	:= null;
end;
if (nr_seq_prot_atend_w is not null) then 
	if (coalesce(OLD.ie_estagio, 0) <> coalesce(NEW.ie_estagio, 0)) and (OLD.ie_estagio in (1,2,3,9,11,12)) and (NEW.ie_estagio in (4,5,6,10)) then 
 
		update	pls_protocolo_atendimento 
		set	ie_status	= 3, 
			nm_usuario 	= NEW.nm_usuario, 
			dt_atualizacao 	= LOCALTIMESTAMP 
		where	nr_sequencia	= nr_seq_prot_atend_w;
 
	elsif (coalesce(OLD.ie_estagio, 0) <> coalesce(NEW.ie_estagio, 0)) and (NEW.ie_estagio = 8) then 
 
		update	pls_protocolo_atendimento 
		set	ie_status	= 4, 
			nm_usuario 	= NEW.nm_usuario, 
			dt_atualizacao 	= LOCALTIMESTAMP 
		where	nr_sequencia	= nr_seq_prot_atend_w;
	end if;
end if;
 
  END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pls_guia_plano_update() FROM PUBLIC;

CREATE TRIGGER pls_guia_plano_update
	BEFORE UPDATE ON pls_guia_plano FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pls_guia_plano_update();

