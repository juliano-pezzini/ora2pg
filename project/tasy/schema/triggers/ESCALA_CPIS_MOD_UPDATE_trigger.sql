-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS escala_cpis_mod_update ON escala_cpis_mod CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_escala_cpis_mod_update() RETURNS trigger AS $BODY$
declare
  qt_reg_w       smallint;
  qt_pontuacao_w smallint;
  sql_w          varchar(200);
  ds_erro_w   varchar(4000);
  ds_parametro_w  varchar(4000);
BEGIN
  BEGIN
  if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
    goto Final;
  end if;

  /** Medical Device **/


  BEGIN
    sql_w := 'call OBTER_SCORE_ESCALA_CPIS_MD(:1, :2, :3, :4, :5, :6) into :qt_pontuacao_w';
    EXECUTE sql_w using in NEW.ie_secrecao_purulenta,
                                  in NEW.ie_temperatura,
                                  in NEW.ie_leucocitose,
                                  in NEW.ie_secrecao_traqueal,
                                  in NEW.ie_pao2,
                                  in NEW.ie_rx_torax,			
                                  out qt_pontuacao_w;
  exception
    when others then
      qt_pontuacao_w := null;
      ds_erro_w := sqlerrm;
      ds_parametro_w := ':new.nr_atendimento: ' || NEW.nr_atendimento || ' - :new.ie_situacao: ' || NEW.ie_situacao || ' - :new.cd_profissional: ' || NEW.cd_profissional;
      ds_parametro_w := ds_parametro_w || ' - :new.ie_secrecao_purulenta: ' || NEW.ie_secrecao_purulenta || ' - :new.ie_temperatura: ' || NEW.ie_temperatura || ' - :new.ie_leucocitose: ' || NEW.ie_leucocitose || ' - :new.ie_secrecao_traqueal: ' || NEW.ie_secrecao_traqueal || ' - :new.ie_pao2: ' || NEW.ie_pao2 || ' - :new.ie_rx_torax: ' || NEW.ie_rx_torax || ' - qt_pontuacao_w: ' || qt_pontuacao_w;
      CALL gravar_log_medical_device('ESCALA_CPIS_MOD_UPDATE', 'OBTER_SCORE_ESCALA_CPIS_MD', ds_parametro_w, ds_erro_w, wheb_usuario_pck.get_nm_usuario, 'N');
  end;
  NEW.qt_pontuacao := qt_pontuacao_w;

  <<Final>>
  qt_reg_w	:= 0;
  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_escala_cpis_mod_update() FROM PUBLIC;

CREATE TRIGGER escala_cpis_mod_update
	BEFORE INSERT OR UPDATE ON escala_cpis_mod FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_escala_cpis_mod_update();

