-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS cirurgia_partic_before ON cirurgia_participante CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_cirurgia_partic_before() RETURNS trigger AS $BODY$
Declare
qt_reg_w			bigint;
ie_medico_w		varchar(01);
ie_consiste_inicio_fim_w	varchar(1);
dt_inicio_real_w		timestamp;
dt_termino_w		timestamp;
ie_consiste_w		varchar(1):= 'N';
dt_entrada_w		timestamp;
dt_saida_w		timestamp;
BEGIN
ie_consiste_inicio_fim_w := obter_param_usuario(900, 127, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_consiste_inicio_fim_w);
if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;
if (NEW.cd_pessoa_fisica is not null) then
	select	count(*)
	into STRICT	qt_reg_w
	from	medico
	where	cd_pessoa_fisica	= NEW.cd_pessoa_fisica;
	select	coalesce(max(ie_medico),'N')
	into STRICT	ie_medico_w
	from	funcao_medico
	where	cd_funcao		= NEW.ie_funcao;
	if (qt_reg_w = 0) and (ie_medico_w = 'S') then
		CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(266220);
	end if;
	if (NEW.nm_participante is null) or (NEW.cd_pessoa_fisica <> OLD.cd_pessoa_fisica) then
		NEW.nm_participante	:= obter_nome_pf(NEW.cd_pessoa_fisica);
	end if;
	if (ie_consiste_inicio_fim_w = 'S') then
		select	coalesce(dt_inicio_real,dt_inicio_prevista),
				coalesce(dt_termino,LOCALTIMESTAMP)
		into STRICT	dt_inicio_real_w,
				dt_termino_w
		from 	cirurgia
		where	nr_cirurgia = NEW.nr_cirurgia;
		select	coalesce(NEW.dt_entrada,LOCALTIMESTAMP),
				coalesce(NEW.dt_saida,LOCALTIMESTAMP)
		into STRICT	dt_entrada_w,
				dt_saida_w
		;		
		
		if (dt_entrada_w < dt_inicio_real_w) or (dt_entrada_w > dt_termino_w) or (dt_saida_w < dt_inicio_real_w) or (dt_saida_w > dt_termino_w) then
			CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(266221);	
		end if;
	end if;			
end if;

IF ( NEW.dt_entrada IS NOT NULL ) THEN
	NEW.ds_utc := substr(obter_data_utc(NEW.dt_entrada, 'HV'), 1, 50);
END IF;

IF ( ( OLD.dt_liberacao IS NULL ) OR ( OLD.dt_liberacao <> NEW.dt_liberacao ) ) AND ( NEW.dt_liberacao IS NOT NULL ) THEN
	NEW.ds_utc_atualizacao := substr(obter_data_utc(NEW.dt_liberacao, 'HV'), 1, 50);
END IF;

<<Final>>
qt_reg_w	:= 0;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_cirurgia_partic_before() FROM PUBLIC;

CREATE TRIGGER cirurgia_partic_before
	BEFORE INSERT OR UPDATE ON cirurgia_participante FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_cirurgia_partic_before();

