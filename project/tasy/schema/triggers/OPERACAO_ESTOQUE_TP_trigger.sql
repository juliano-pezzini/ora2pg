-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS operacao_estoque_tp ON operacao_estoque CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_operacao_estoque_tp() RETURNS trigger AS $BODY$
DECLARE nr_seq_w bigint;ds_s_w   varchar(1);ds_c_w   varchar(1);ds_w	   varchar(1);ie_log_w varchar(1);BEGIN BEGIN ds_s_w := to_char(OLD.CD_OPERACAO_ESTOQUE);  ds_c_w:=null;SELECT * FROM gravar_log_alteracao(substr(OLD.IE_ATUALIZA_ESTOQUE,1,4000), substr(NEW.IE_ATUALIZA_ESTOQUE,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_ATUALIZA_ESTOQUE', ie_log_w, ds_w, 'OPERACAO_ESTOQUE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_SITUACAO,1,4000), substr(NEW.IE_SITUACAO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_SITUACAO', ie_log_w, ds_w, 'OPERACAO_ESTOQUE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_OPERACAO,1,4000), substr(NEW.DS_OPERACAO,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_OPERACAO', ie_log_w, ds_w, 'OPERACAO_ESTOQUE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_ENTRADA_SAIDA,1,4000), substr(NEW.IE_ENTRADA_SAIDA,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_ENTRADA_SAIDA', ie_log_w, ds_w, 'OPERACAO_ESTOQUE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_PERMITE_DIGITACAO,1,4000), substr(NEW.IE_PERMITE_DIGITACAO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_PERMITE_DIGITACAO', ie_log_w, ds_w, 'OPERACAO_ESTOQUE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_OPERACAO_ESTOQUE,1,4000), substr(NEW.CD_OPERACAO_ESTOQUE,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_OPERACAO_ESTOQUE', ie_log_w, ds_w, 'OPERACAO_ESTOQUE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_DESCONSIDERA_CONS_PADRAO,1,4000), substr(NEW.IE_DESCONSIDERA_CONS_PADRAO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_DESCONSIDERA_CONS_PADRAO', ie_log_w, ds_w, 'OPERACAO_ESTOQUE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_CONSUMO,1,4000), substr(NEW.IE_CONSUMO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_CONSUMO', ie_log_w, ds_w, 'OPERACAO_ESTOQUE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_CONSIGNADO,1,4000), substr(NEW.IE_CONSIGNADO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_CONSIGNADO', ie_log_w, ds_w, 'OPERACAO_ESTOQUE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_ALTERA_CUSTO,1,4000), substr(NEW.IE_ALTERA_CUSTO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_ALTERA_CUSTO', ie_log_w, ds_w, 'OPERACAO_ESTOQUE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_TIPO_REQUISICAO,1,4000), substr(NEW.IE_TIPO_REQUISICAO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_TIPO_REQUISICAO', ie_log_w, ds_w, 'OPERACAO_ESTOQUE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_OPERACAO_CORRESPONDENTE,1,4000), substr(NEW.CD_OPERACAO_CORRESPONDENTE,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_OPERACAO_CORRESPONDENTE', ie_log_w, ds_w, 'OPERACAO_ESTOQUE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_DESCONSIDERA_CONS_RESSUP,1,4000), substr(NEW.IE_DESCONSIDERA_CONS_RESSUP,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_DESCONSIDERA_CONS_RESSUP', ie_log_w, ds_w, 'OPERACAO_ESTOQUE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_COLUNA_RESUMO,1,4000), substr(NEW.IE_COLUNA_RESUMO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_COLUNA_RESUMO', ie_log_w, ds_w, 'OPERACAO_ESTOQUE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;   exception when others then ds_w:= '1'; end;   END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_operacao_estoque_tp() FROM PUBLIC;

CREATE TRIGGER operacao_estoque_tp
	AFTER UPDATE ON operacao_estoque FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_operacao_estoque_tp();

