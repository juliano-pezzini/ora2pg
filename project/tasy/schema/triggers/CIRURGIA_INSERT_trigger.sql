-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS cirurgia_insert ON cirurgia CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_cirurgia_insert() RETURNS trigger AS $BODY$
declare

ie_gera_proc_w			varchar(1);
ie_gera_cir_pepo_w		varchar(1);
ie_consiste_medico_w		varchar(1);
ie_permissao_atend_w		varchar(1);
nr_sequencia_w			bigint;
ie_status_cirurgia_w		varchar(3);
ie_vincula_cir_processo_w	varchar(1);
ds_origem_w			varchar(2000);
dt_cancelamento_w   		timestamp;
nr_setor_atendimento_w          setor_atendimento.cd_setor_atendimento%type;
nr_convenio_w                   convenio.cd_convenio%type;

BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S')  then
  ie_gera_proc_w := obter_param_usuario(901, 112, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_gera_proc_w);
  ie_gera_cir_pepo_w := obter_param_usuario(872, 158, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_gera_cir_pepo_w);


  select	coalesce(max(ie_agrupar_cir_dia),'N')
  into STRICT	ie_vincula_cir_processo_w
  from	parametros_pepo
  where	cd_estabelecimento	= NEW.cd_estabelecimento;

  if (NEW.cd_setor_atendimento >= 0) then
      select coalesce(max(cd_setor_atendimento),0)
      into STRICT nr_setor_atendimento_w
      from setor_atendimento
      where cd_setor_atendimento = NEW.cd_setor_atendimento;

      if (nr_setor_atendimento_w = 0 ) then
          CALL wheb_mensagem_pck.exibir_mensagem_abort(261635);
      end if;
  end if;

  if (NEW.cd_convenio >= 0) then
      select coalesce(max(cd_convenio),0)
      into STRICT nr_convenio_w
      from convenio
      where cd_convenio = NEW.cd_convenio;

      if (nr_convenio_w = 0 ) then
          CALL wheb_mensagem_pck.exibir_mensagem_abort(193010);
      end if;
  end if;

  CALL Consistir_impedimento_pf(NEW.cd_medico_cirurgiao,'CIR',NEW.nm_usuario);
  if (NEW.cd_medico_anestesista is not null) then
    CALL Consistir_impedimento_pf(NEW.cd_medico_anestesista,'ANES',NEW.nm_usuario);
  end if;

  if (ie_consiste_medico_w = 'S') then
    select	obter_se_assumir_paciente(NEW.cd_medico_cirurgiao, OLD.cd_estabelecimento)
    into STRICT	ie_permissao_atend_w
;

    if (ie_permissao_atend_w = 'N') then
      --Medico nao possui autorizacao para assumir o paciente!
      CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(233793);
    end if;
  end if;


  if (NEW.ie_infeccao is null) then
    NEW.ie_infeccao	:= 'N';
  end if;


  if	((ie_gera_proc_w = 'S') and (NEW.nr_prescricao is not null) and (NEW.dt_entrada_unidade is not null) and (NEW.nr_atendimento is not null))  then
    CALL gravar_prescr_proc_cir(NEW.nr_prescricao,NEW.cd_procedimento_princ,NEW.ie_origem_proced,NEW.dt_entrada_unidade,
    NEW.nr_atendimento, NEW.nr_seq_proc_interno, NEW.nm_usuario);
  end if;

  if (NEW.qt_peso is null) and (NEW.nr_atendimento is not null)  then
    NEW.qt_peso := obter_sinal_vital(NEW.nr_atendimento,'Peso');
  end if;

  if (ie_gera_cir_pepo_w = 'S') and (NEW.nr_seq_pepo is null) then

    Select	coalesce(max(nr_sequencia),0)
    into STRICT	nr_sequencia_w
    from	pepo_cirurgia
    where	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_cirurgia) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(NEW.dt_inicio_prevista)
    and	cd_pessoa_fisica = NEW.cd_pessoa_fisica;

    select	coalesce(max(ie_status_cirurgia),0)
    into STRICT	ie_status_cirurgia_w
    from	cirurgia
    where	nr_seq_pepo = nr_sequencia_w;


    if (ie_vincula_cir_processo_w = 'S') and (nr_sequencia_w > 0) then
      nr_sequencia_w := nr_sequencia_w;

    elsif (nr_sequencia_w = 0 ) or
      (nr_sequencia_w > 0 AND ie_status_cirurgia_w = 2) then
        select	nextval('pepo_cirurgia_seq')
        into STRICT	nr_sequencia_w
;

        insert into pepo_cirurgia(
          nr_sequencia,
          dt_atualizacao,
          nm_usuario,
          dt_atualizacao_nrec,
          nm_usuario_nrec,
          cd_pessoa_fisica,
          nr_atendimento,
          dt_cirurgia,
          cd_medico_anestesista,
          ie_carater_cirurgia,
          ie_asa_estado_paciente,
          ie_tipo_cirurgia,
          ie_tipo_procedimento,
              cd_estabelecimento)
        values (
          nr_sequencia_w,
          LOCALTIMESTAMP,
          NEW.nm_usuario,
          LOCALTIMESTAMP,
          NEW.nm_usuario,
          NEW.cd_pessoa_fisica,
          NEW.nr_atendimento,
          NEW.dt_inicio_prevista,
          NEW.cd_medico_anestesista,
          NEW.ie_carater_cirurgia,
          NEW.ie_asa_estado_paciente,
          NEW.ie_tipo_cirurgia,
          'C',
              NEW.cd_estabelecimento);

    end if;

    NEW.nr_seq_pepo := nr_sequencia_w;
  end if;

  --OS 975521 - Nao permitir vincular atendimentos cancelados na cirurgia e no agendamento.
  if ((OLD.nr_atendimento is null AND NEW.nr_atendimento is not null) or
    ((OLD.nr_atendimento is not null) and (NEW.nr_atendimento is not null) and (OLD.nr_atendimento <> NEW.nr_atendimento))) then

    select dt_cancelamento
    into STRICT   dt_cancelamento_w
    from   atendimento_paciente
    where  nr_atendimento = NEW.nr_atendimento;

    if (dt_cancelamento_w is not null) then
      CALL wheb_mensagem_pck.exibir_mensagem_abort(384733, 'NR_ATENDIMENTO_P='||to_char(NEW.nr_atendimento)); --Nao sera possivel vincular o atendimento #@nr_atendimento_p#@! Este atendimento esta cancelado.
    end if;
  end if;

  ds_origem_w := substr(dbms_utility.format_call_stack,1,1800);
end if;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_cirurgia_insert() FROM PUBLIC;

CREATE TRIGGER cirurgia_insert
	BEFORE INSERT ON cirurgia FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_cirurgia_insert();

