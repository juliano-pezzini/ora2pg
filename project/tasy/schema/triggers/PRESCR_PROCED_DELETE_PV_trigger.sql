-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS prescr_proced_delete_pv ON prescr_procedimento CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_prescr_proced_delete_pv() RETURNS trigger AS $BODY$
DECLARE

ie_agrupada_w		pre_venda.ie_agrupada%type;
nr_atendimento_w	atendimento_paciente.nr_atendimento%type;
qt_registros_w		bigint;

PRAGMA AUTONOMOUS_TRANSACTION;

BEGIN

select	count(*)
into STRICT	qt_registros_w
from	pre_venda_item
where	nr_seq_interno = OLD.nr_seq_interno;

if (qt_registros_w > 0) then
	BEGIN
	
	select	max(nr_atendimento)
	into STRICT	nr_atendimento_w
	from	prescr_medica
	where	nr_prescricao = OLD.nr_prescricao;
	
	select	coalesce(max(a.ie_agrupada),'N')
	into STRICT	ie_agrupada_w
	from	pre_venda a,
		pre_venda_item b			
	where	a.nr_sequencia = b.nr_seq_pre_venda
	and	b.nr_prescricao = OLD.nr_prescricao;

	if (ie_agrupada_w = 'S') then
		select	count(*)
		into STRICT	qt_registros_w
		from	prescr_procedimento a,
			pre_venda_item b
		where	a.nr_seq_interno = b.nr_seq_interno
		and   	a.nr_prescricao = b.nr_prescricao
		and	b.nr_atendimento = nr_atendimento_w
		and	a.ie_suspenso = 'N'
		and	a.nr_seq_interno <> OLD.nr_seq_interno;
		
		/*Se todos os itens foram suspensos, limpa o vinculo da prevenda com o atendimento e prescricao
		Mas faz isso somente se a prevenda for do tipo Agrupada*/
		if (qt_registros_w = 0) then
			update	pre_venda_item
			set	nr_atendimento  = NULL,
				nr_prescricao  = NULL,
				nr_seq_interno  = NULL
			where	nr_atendimento = nr_atendimento_w;
			commit;
		end if;
	else
		/*Desvincular a prescricao e o atendimento da prevenda, quando deleta*/

		update	pre_venda_item
		set	nr_atendimento  = NULL,
			nr_prescricao  = NULL,
			nr_seq_interno  = NULL
		where	nr_seq_interno = OLD.nr_seq_interno;
		commit;
	end if;	
	end;
end if;
RETURN OLD;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_prescr_proced_delete_pv() FROM PUBLIC;

CREATE TRIGGER prescr_proced_delete_pv
	BEFORE DELETE ON prescr_procedimento FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_prescr_proced_delete_pv();

