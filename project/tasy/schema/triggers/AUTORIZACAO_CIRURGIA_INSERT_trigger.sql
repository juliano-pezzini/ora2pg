-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS autorizacao_cirurgia_insert ON autorizacao_cirurgia CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_autorizacao_cirurgia_insert() RETURNS trigger AS $BODY$
DECLARE

nr_doc_convenio_w	varchar(40);
nr_seq_autorizacao_w	bigint;
nr_atendimento_w	bigint;
cd_convenio_w		bigint;
nr_seq_estagio_w	bigint;
nr_sequencia_autor_w	bigint;
ie_lib_materiais_esp_w	varchar(1)	:= 'N';
ie_gerando_autor_conv_w	bigint;
ie_tipo_autor_conv_esp_w	varchar(255);
ds_estagio_w		varchar(255);
cd_pessoa_fisica_w	varchar(10);
cd_estabelecimento_w	integer;
dt_agenda_w		timestamp;
cd_setor_origem_w	setor_atendimento.cd_setor_atendimento%type;
BEGIN
  BEGIN

select	coalesce(max(ie_lib_materiais_esp),'N'),
	coalesce(max(ie_tipo_autor_conv_esp),'5')
into STRICT	ie_lib_materiais_esp_w,
	ie_tipo_autor_conv_esp_w
from	parametro_faturamento
where	cd_estabelecimento	= NEW.cd_estabelecimento;


if (coalesce(ie_lib_materiais_esp_w,'N') = 'N') and
	((coalesce(NEW.nr_atendimento,0) > 0) or (coalesce(NEW.nr_seq_agenda,0) > 0)) and (NEW.nr_seq_autor_conv is null) then /* Francisco - 11/12/2009 - Tratei o nr_seq_autor_conv para os casos onde Ã© gerado por autorizacao convenio*/
	select	max(a.nr_sequencia)
	into STRICT	nr_sequencia_autor_w
	FROM autorizacao_convenio a
LEFT OUTER JOIN estagio_autorizacao b ON (a.nr_seq_estagio = b.nr_sequencia)
WHERE a.nr_seq_agenda		= coalesce(NEW.nr_seq_agenda,0) and a.nr_seq_autor_cirurgia is null and a.ie_tipo_autorizacao	= ie_tipo_autor_conv_esp_w /*lhalves OS264935 - 13/01/2011*/
  and coalesce(b.ie_interno,1)	= 1; /* Francisco - OS 178491 - 12/11/09 - So pode usar a mesma se estiver como necessidade */
	if (nr_sequencia_autor_w is null) then

		nr_seq_autorizacao_w	:= null;
		if (coalesce(NEW.nr_atendimento,0) > 0) then
			select	coalesce(max(nr_seq_autorizacao),0) + 1
			into STRICT	nr_seq_autorizacao_w
			from	autorizacao_convenio
			where	nr_atendimento	= NEW.nr_atendimento;

			select	max(nr_doc_convenio),
				max(coalesce(cd_convenio,0))
			into STRICT	nr_doc_convenio_w,
				cd_convenio_w
			from	atend_categoria_convenio
			where	nr_atendimento			= NEW.nr_atendimento
			and	obter_atecaco_atendimento(nr_atendimento) = nr_seq_interno;

		elsif (coalesce(NEW.nr_seq_agenda,0) > 0) then

			select	max(nr_atendimento),
				max(coalesce(cd_convenio,0)),
				max(nr_doc_convenio),
				max(dt_agenda)
			into STRICT	nr_atendimento_w,
				cd_convenio_w,
				nr_doc_convenio_w,
				dt_agenda_w
			from	agenda_paciente
			where	nr_sequencia	= NEW.nr_seq_agenda;

		end if;

		if (coalesce(cd_convenio_w,0) = 0) then
			CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(189896);
		end if;

		BEGIN
		if (NEW.dt_autorizacao is null) then
			select	min(nr_sequencia)
			into STRICT	nr_seq_estagio_w
			from	estagio_autorizacao
			where	ie_interno	= '1'
			and	ie_situacao = 'A'
			and	OBTER_EMPRESA_ESTAB(wheb_usuario_pck.get_cd_estabelecimento) = cd_empresa;
		else
			select	min(nr_sequencia)
			into STRICT	nr_seq_estagio_w
			from	estagio_autorizacao
			where	ie_interno	= '10'
			and	ie_situacao = 'A'
			and	OBTER_EMPRESA_ESTAB(wheb_usuario_pck.get_cd_estabelecimento) = cd_empresa;
		end if;
		exception
		when others then
			nr_seq_estagio_w	:= null;
		end;

		if (coalesce(NEW.nr_atendimento,0) > 0) then
			select	cd_pessoa_fisica,
				cd_estabelecimento
			into STRICT	cd_pessoa_fisica_w,
				cd_estabelecimento_w
			from	atendimento_paciente
			where	nr_atendimento = NEW.nr_atendimento;
		elsif (coalesce(NEW.nr_seq_agenda,0) > 0) then
			select	max(a.cd_pessoa_fisica),
				max(b.cd_estabelecimento)
			into STRICT	cd_pessoa_fisica_w,
				cd_estabelecimento_w
			from	agenda_paciente a,
				agenda b
			where	a.nr_sequencia = NEW.nr_seq_agenda
			and	a.cd_agenda  = b.cd_agenda;
		end if;

		select	max(cd_setor_atendimento)
		into STRICT	cd_setor_origem_w
		from	usuario
		where	nm_usuario = NEW.nm_usuario;

		insert	into autorizacao_convenio(NR_ATENDIMENTO ,
			NR_SEQ_AUTORIZACAO,
			CD_CONVENIO,
			CD_AUTORIZACAO,
			DT_AUTORIZACAO,
			DT_INICIO_VIGENCIA,
			DT_ATUALIZACAO,
			NM_USUARIO,
			DT_FIM_VIGENCIA,
			NM_RESPONSAVEL,
			DS_OBSERVACAO,
			CD_SENHA,
			CD_PROCEDIMENTO_PRINCIPAL,
			IE_ORIGEM_PROCED,
			DT_PEDIDO_MEDICO,
			CD_MEDICO_SOLICITANTE,
			IE_TIPO_GUIA,
			QT_DIA_AUTORIZADO,
			NR_PRESCRICAO,
			DT_ENVIO,
			DT_RETORNO,
			NR_SEQ_ESTAGIO,
			IE_TIPO_AUTORIZACAO,
			IE_TIPO_DIA,
			CD_TIPO_ACOMODACAO,
			NR_SEQ_AUTOR_CIRURGIA,
			DS_INDICACAO,
			DT_GERACAO_CIH,
			NR_SEQUENCIA,
			NR_SEQ_AGENDA,
			CD_PESSOA_FISICA,
			CD_ESTABELECIMENTO,
			dt_agenda,
			cd_setor_origem,
      dt_atualizacao_nrec,
      nm_usuario_nrec)
		values (NEW.nr_atendimento,
			nr_seq_autorizacao_w,
			cd_convenio_w,
			nr_doc_convenio_w,
			LOCALTIMESTAMP,
			null,
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			null,
			NEW.nm_usuario_pedido,
			NEW.ds_observacao,
			null,
			NEW.cd_procedimento,
			NEW.ie_origem_proced,
			NEW.dt_pedido,
			NEW.cd_requisitante,
			5,
			null,
			NEW.nr_prescricao,
			null,
			null,
			nr_seq_estagio_w,
			ie_tipo_autor_conv_esp_w,
			'C',
			null,
			NEW.nr_sequencia,
			null,
			null,
			nextval('autorizacao_convenio_seq'),
			NEW.nr_seq_agenda,
			cd_pessoa_fisica_w,
			cd_estabelecimento_w,
			dt_agenda_w,
			cd_setor_origem_w,
      LOCALTIMESTAMP,
      NEW.nm_usuario);
	else
		update	autorizacao_convenio
		set	nr_seq_autor_cirurgia	= NEW.nr_sequencia
		where	nr_sequencia		= nr_sequencia_autor_w;
	end if;
end if;

select	obter_valor_dominio(3116,NEW.ie_estagio_autor)
into STRICT	ds_estagio_w
;

if (ds_estagio_w is not null) then
	insert into autorizacao_cirurgia_hist(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_seq_autor_cirurgia,
			ds_historico,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_liberacao,
			nm_usuario_lib)
		values (	nextval('autorizacao_cirurgia_hist_seq'),
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			NEW.nr_sequencia,
			ds_estagio_w,
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			LOCALTIMESTAMP,
			NEW.nm_usuario);
end if;

  END;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_autorizacao_cirurgia_insert() FROM PUBLIC;

CREATE TRIGGER autorizacao_cirurgia_insert
	AFTER INSERT ON autorizacao_cirurgia FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_autorizacao_cirurgia_insert();

