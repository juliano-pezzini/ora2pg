-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS emprest_financ_bndes_before ON emprest_financ_parc CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_emprest_financ_bndes_before() RETURNS trigger AS $BODY$
declare

ds_formula_ajustada_w     varchar(4000);
nr_seq_contrato_w         contrato.nr_sequencia%type;
ds_formula_w              contrato_bndes.ds_formula%type;
qt_periodicidade_juros_w  contrato_bndes.qt_periodicidade_juros%type;
qt_periodicidade_amort_w  contrato_bndes.qt_periodicidade_amort%type;
vl_principal_w            contrato_bndes.vl_principal%type;
vl_ajustado_w             contrato_bndes.vl_ajustado%type;
qt_parcelas_w             contrato_bndes.qt_parcelas%type;
vl_calculado_w            contrato_bndes.vl_calculado%type;
qt_carencia_w             contrato_bndes.qt_carencia%type;
vl_juros_w                emprest_financ_parc.vl_juros%type;
vl_juros_index_w          emprest_financ_parc.vl_juros_index%type;

owner_w varchar(30);
name_w varchar(30);
line_w integer;
type_w varchar(30);

pragma autonomous_transaction;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then

  owa_util.who_called_me(owner_w,name_w,line_w,type_w);

  if name_w = 'GERAR_PARCELAS_BNDES_FIN' then
    select nr_sequencia
    into STRICT nr_seq_contrato_w
    from contrato_bndes
    where nr_seq_contrato = NEW.nr_seq_contrato;

    if nr_seq_contrato_w is not null then
      select ds_formula,
             qt_periodicidade_juros,
             qt_periodicidade_amort,
             vl_principal,
             vl_ajustado,
             qt_parcelas,
             vl_calculado,
             qt_carencia
      into STRICT ds_formula_w,
           qt_periodicidade_juros_w,
           qt_periodicidade_amort_w,
           vl_principal_w,
           vl_ajustado_w,
           qt_parcelas_w,
           vl_calculado_w,
           qt_carencia_w
      from contrato_bndes
      where nr_seq_contrato = NEW.nr_seq_contrato;

      if ((NEW.nr_mes < qt_carencia_w and mod(NEW.nr_mes, qt_periodicidade_juros_w) = 0) or (NEW.nr_mes > qt_carencia_w and mod(NEW.nr_mes, qt_periodicidade_amort_w) = 0)) then
        if ds_formula_w is not null then
          ds_formula_ajustada_w := ds_formula_w;
          ds_formula_ajustada_w := replace(ds_formula_ajustada_w, '#:I:#', 'obter_resultado_formula_indice(''');
          ds_formula_ajustada_w := replace(ds_formula_ajustada_w, '!', ''', to_date(''' || NEW.dt_vencimento || '''))');
          ds_formula_ajustada_w := replace(ds_formula_ajustada_w, '#:P:#', 'nvl(:NEW.');
          ds_formula_ajustada_w := replace(ds_formula_ajustada_w, '#:', 'nvl(');
          ds_formula_ajustada_w := replace(ds_formula_ajustada_w, ':#', '.');
          ds_formula_ajustada_w := replace(ds_formula_ajustada_w, '@',',0)');

          ds_formula_ajustada_w := replace(ds_formula_ajustada_w, ':NEW.NR_MES', coalesce(to_char(NEW.NR_MES,'99999999999999B', 'NLS_NUMERIC_CHARACTERS = ''.,'''),0));
          ds_formula_ajustada_w := replace(ds_formula_ajustada_w, ':NEW.NR_PARCELA', coalesce(to_char(NEW.NR_PARCELA,'99999999999999B', 'NLS_NUMERIC_CHARACTERS = ''.,'''),0));
          ds_formula_ajustada_w := replace(ds_formula_ajustada_w, ':NEW.NR_TITULO', coalesce(to_char(NEW.NR_TITULO,'99999999999999B', 'NLS_NUMERIC_CHARACTERS = ''.,'''),0));
          ds_formula_ajustada_w := replace(ds_formula_ajustada_w, ':NEW.QT_DUP', coalesce(to_char(NEW.QT_DUP,'99999999999999B', 'NLS_NUMERIC_CHARACTERS = ''.,'''),0));
          ds_formula_ajustada_w := replace(ds_formula_ajustada_w, ':NEW.QT_DUT', coalesce(to_char(NEW.QT_DUT,'99999999999999B', 'NLS_NUMERIC_CHARACTERS = ''.,'''),0));
          ds_formula_ajustada_w := replace(ds_formula_ajustada_w, ':NEW.VL_AMORTIZACAO', coalesce(to_char(NEW.VL_AMORTIZACAO,'999999999999999BD99', 'NLS_NUMERIC_CHARACTERS = ''.,'''),0));
          ds_formula_ajustada_w := replace(ds_formula_ajustada_w, ':NEW.VL_CORRECAO', coalesce(to_char(NEW.VL_CORRECAO,'999999999999999BD99', 'NLS_NUMERIC_CHARACTERS = ''.,'''),0));
          ds_formula_ajustada_w := replace(ds_formula_ajustada_w, ':NEW.VL_INDICE_REAJ', coalesce(to_char(NEW.VL_INDICE_REAJ,'999999999999999BD99999999', 'NLS_NUMERIC_CHARACTERS = ''.,'''),0));
          ds_formula_ajustada_w := replace(ds_formula_ajustada_w, ':NEW.VL_JUROS_INDEX', coalesce(to_char(NEW.VL_JUROS_INDEX,'999999999999999BD99999999', 'NLS_NUMERIC_CHARACTERS = ''.,'''),0));
          ds_formula_ajustada_w := replace(ds_formula_ajustada_w, ':NEW.VL_JUROS', coalesce(to_char(NEW.VL_JUROS,'999999999999999BD99', 'NLS_NUMERIC_CHARACTERS = ''.,'''),0));
          ds_formula_ajustada_w := replace(ds_formula_ajustada_w, ':NEW.VL_PARCELA', coalesce(to_char(NEW.VL_PARCELA,'999999999999999BD99', 'NLS_NUMERIC_CHARACTERS = ''.,'''),0));
          ds_formula_ajustada_w := replace(ds_formula_ajustada_w, ':NEW.VL_SALDO_CORRIGIDO', coalesce(to_char(NEW.VL_SALDO_CORRIGIDO,'999999999999999BD99', 'NLS_NUMERIC_CHARACTERS = ''.,'''),0));
          ds_formula_ajustada_w := replace(ds_formula_ajustada_w, ':NEW.VL_SALDO_DEV_INDEX', coalesce(to_char((NEW.VL_SALDO_DEV_INDEX),'999999999999999BD99999999', 'NLS_NUMERIC_CHARACTERS = ''.,'''),0));
          ds_formula_ajustada_w := replace(ds_formula_ajustada_w, ':NEW.VL_SALDO_DEV', coalesce(to_char(NEW.VL_SALDO_DEV,'999999999999999BD99', 'NLS_NUMERIC_CHARACTERS = ''.,'''),0));

          BEGIN
            EXECUTE
              'select ' || ds_formula_ajustada_w || ' ' ||
              'from contrato c,
                  contrato_bndes b,
                  indice_reajuste_anual_fin a,
                  indice_reajuste_valor_fin v
              where c.nr_sequencia = ' || NEW.nr_seq_contrato || '
              and b.nr_seq_contrato = c.nr_sequencia
              and a.nr_seq_contrato_bndes(+) = b.nr_sequencia
              and v.nr_seq_indice(+) = a.nr_sequencia'
            into STRICT vl_juros_index_w;
          exception
            when data_exception then
              CALL Wheb_mensagem_pck.exibir_mensagem_abort(1067077, 'DS_ERRO_P=' || sqlerrm);
            when division_by_zero then
              CALL wheb_mensagem_pck.exibir_mensagem_abort(1067078, 'DS_ERRO_P=' || sqlerrm);
            when others then
              CALL wheb_mensagem_pck.exibir_mensagem_abort(1067079, 'DS_ERRO_P=' || sqlerrm);
          end;

          vl_juros_w := (coalesce(vl_juros_index_w,0) * coalesce(NEW.vl_indice_reaj, 1));

        end if;
      end if;

      NEW.vl_juros := coalesce(vl_juros_w,0);
      NEW.vl_juros_index := coalesce(vl_juros_index_w,0);
      NEW.vl_parcela := coalesce(NEW.vl_amortizacao,0) + coalesce(vl_juros_w,0) + coalesce(NEW.vl_correcao,0);

    end if;
  end if;
end if;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_emprest_financ_bndes_before() FROM PUBLIC;

CREATE TRIGGER emprest_financ_bndes_before
	BEFORE INSERT OR UPDATE ON emprest_financ_parc FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_emprest_financ_bndes_before();

