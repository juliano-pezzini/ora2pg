-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS convenio_receb_estorno_insert ON convenio_receb_estorno CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_convenio_receb_estorno_insert() RETURNS trigger AS $BODY$
DECLARE

cd_cgc_convenio_w		varchar(30);
NR_SEQ_CONTA_BANCO_w	bigint;
NR_SEQ_MOVTO_W			bigint;
nr_seq_trans_fin_w		bigint;
qt_movto_w				integer;
ie_banco_w				varchar(1);
vl_transacao_estrang_w	double precision;
tx_cambial_w			convenio_Receb.tx_cambial%type;
cd_moeda_transacao_w	integer;
vl_cotacao_w			cotacao_moeda.vl_cotacao%type;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
vl_moeda_original_w		convenio_receb.vl_moeda_original%type;
vl_transacao_estorno_w	double precision;
vl_receb_w				double precision;
vl_movimento_w			double precision;
nr_seq_movto_origem_w	movto_trans_financ.nr_sequencia%type;
ctb_param_lote_receb_conv_w	ctb_param_lote_receb_conv%rowtype;

c01 CURSOR FOR
SELECT		a.nm_atributo,
		a.cd_tipo_lote_contab
from		atributo_contab a
where 		a.cd_tipo_lote_contab = 11
and 		a.nm_atributo in ('VL_RECEBIMENTO', 'VL_DEPOSITO', 'VL_ADICIONAL_ESTORNO');

c01_w		c01%rowtype;
BEGIN
  BEGIN

nr_seq_trans_fin_w 	:= NEW.nr_seq_trans_fin;

if (coalesce(nr_seq_trans_fin_w, 0) = 0) then
	BEGIN

	select  nr_seq_trans_fin
	into STRICT    nr_seq_trans_fin_w
	from    Convenio_Receb a
	where   a.nr_sequencia		= NEW.nr_seq_receb;

	exception when others then
		nr_seq_trans_fin_w		:= null;
	end;
end if;

if (TG_OP = 'INSERT') then

    select	b.cd_cgc,
        a.NR_SEQ_CONTA_BANCO,
        coalesce(NEW.nr_seq_trans_fin,a.NR_SEQ_TRANS_FIN), /* Francisco - OS 76386 - 19/12/2007 - Tratei para pegar primeiro a transação do estorno */

        coalesce(a.tx_cambial,0),
        a.cd_estabelecimento,
        a.vl_moeda_original,
        coalesce(vl_recebimento,0)
    into STRICT	cd_cgc_convenio_w,
        NR_SEQ_CONTA_BANCO_w,
        NR_SEQ_TRANS_FIN_w,
        tx_cambial_w,
        cd_estabelecimento_w,
        vl_moeda_original_w,
        vl_receb_w
    from	convenio b,
        convenio_receb a
    where	a.cd_convenio	= b.cd_convenio
    and	a.nr_sequencia	= NEW.nr_seq_receb;

    IF (NR_SEQ_CONTA_BANCO_w IS NOT NULL) AND (NR_SEQ_TRANS_FIN_w IS NOT NULL) THEN
    
        select	max(ie_banco)
        into STRICT	ie_banco_w
        from	transacao_financeira
        where	nr_sequencia	= nr_seq_trans_fin_w;

        select	count(*),
		coalesce(max(vl_cotacao),0),
		coalesce(max(cd_moeda),0),
		coalesce(sum(vl_transacao_estrang),0),
		max(nr_sequencia)
        into STRICT	qt_movto_w,
		vl_cotacao_w,
		cd_moeda_transacao_w,
		vl_transacao_estrang_w,
		nr_seq_movto_origem_w
        from	MOVTO_TRANS_FINANC
        where	nr_seq_conv_receb = NEW.nr_seq_receb
	and	coalesce(ie_estorno,'N') = 'N'
	and	nr_Seq_movto_orig is null;

        if (qt_movto_w > 0) and (ie_banco_w <> 'N') then
    
            SELECT	nextval('movto_trans_financ_seq')
            INTO STRICT	NR_SEQ_MOVTO_W
;

            if (vl_cotacao_w > 0) and (cd_moeda_Transacao_w > 0) and (vl_moeda_original_w > 0) then
                
                BEGIN
                if (coalesce(obter_moeda_padrao_empresa(cd_estabelecimento_w,'E'),cd_moeda_transacao_w) <> cd_moeda_transacao_w) and (vl_cotacao_w = tx_cambial_w) and (NEW.VL_ESTORNO <> 0) then
                
                    vl_transacao_estorno_w := round((NEW.VL_ESTORNO / vl_cotacao_w)::numeric,2);				

                end if;
                exception
                when others then
                    vl_transacao_estorno_w := 0;
                end;

            end if;

    
            INSERT	INTO MOVTO_TRANS_FINANC(NR_SEQUENCIA,
                DT_TRANSACAO,
                NR_SEQ_TRANS_FINANC,
                VL_TRANSACAO,
                NR_SEQ_BANCO,
                NR_SEQ_CONV_RECEB,
                DT_REFERENCIA_SALDO,
                DT_ATUALIZACAO,
                NM_USUARIO,
                nr_lote_contabil,
                ie_conciliacao,
                ds_historico,
                cd_cgc,
                VL_TRANSACAO_ESTRANG,
                vl_cotacao,
		ie_estorno,
		nr_seq_movto_orig)
            VALUES (NR_SEQ_MOVTO_W,
                NEW.DT_ESTORNO,
                NR_SEQ_TRANS_FIN_w,
                NEW.VL_ESTORNO * -1,
                NR_SEQ_CONTA_BANCO_W,
                NEW.nr_seq_receb,
                TRUNC(NEW.DT_ESTORNO,'MM'),
                LOCALTIMESTAMP,
                NEW.NM_USUARIO,
                0,
                'N',
                'Estorno de recebimento de convênio',
                cd_cgc_convenio_w,
                vl_transacao_estorno_w * -1,
                vl_cotacao_w,
		'S',
		nr_seq_movto_origem_w);

        end if;

    end if;
	
	BEGIN
	select  x.*
	into STRICT    ctb_param_lote_receb_conv_w
	from (
			SELECT  a.*
			from    ctb_param_lote_receb_conv a
			where   a.cd_empresa    = obter_empresa_estab(cd_estabelecimento_w)
			and     coalesce(a.cd_estab_exclusivo, cd_estabelecimento_w) = cd_estabelecimento_w
			order   by coalesce(a.cd_estab_exclusivo, 0) desc
			) x LIMIT 1;
	exception
		when others then
			ctb_param_lote_receb_conv_w := null;
	end;
	
	open c01;
	loop
	fetch c01 into	
	c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		BEGIN
		vl_movimento_w := 0;
		
		if	((c01_w.nm_atributo = 'VL_RECEBIMENTO' or c01_w.nm_atributo = 'VL_DEPOSITO') and ctb_param_lote_receb_conv_w.ie_contab_estorno_receb = 'S') then
			vl_movimento_w := (NEW.vl_estorno * -1);

		elsif (c01_w.nm_atributo = 'VL_ADICIONAL_ESTORNO' and ctb_param_lote_receb_conv_w.ie_contab_vl_adic_estorno = 'S') then
			vl_movimento_w := NEW.vl_adic_estorno;
		end if;

		if (coalesce(vl_movimento_w, 0) <> 0 and coalesce(nr_seq_trans_fin_w, 0) <> 0) then
			BEGIN

			CALL ctb_concil_financeira_pck.ctb_gravar_documento(	
										cd_estabelecimento_w,
										trunc(NEW.dt_estorno),
										c01_w.cd_tipo_lote_contab,
										nr_seq_trans_fin_w,
										8,
										NEW.nr_seq_receb,
										NEW.nr_sequencia,
										null,
										vl_movimento_w,
										'CONVENIO_RECEB_ESTORNO',
										c01_w.nm_atributo,
										NEW.nm_usuario);

			end;
		end if;
		end;
	end loop;
	close c01;

elsif (TG_OP = 'UPDATE') then

	update  ctb_documento
	set     vl_movimento 		= (NEW.vl_estorno * -1),
		nr_seq_trans_financ	= nr_seq_trans_fin_w
	where   nm_atributo		in ('VL_RECEBIMENTO','VL_DEPOSITO')
	and     nm_tabela  		= 'CONVENIO_RECEB_ESTORNO'
	and     nr_documento		= NEW.nr_seq_receb
	and	nr_seq_doc_compl 	= NEW.nr_sequencia;

	update  ctb_documento
	set     vl_movimento		= NEW.vl_adic_estorno,
		nr_seq_trans_financ 	= nr_seq_trans_fin_w
	where   nm_atributo 	 	= 'VL_ADICIONAL_ESTORNO'
	and     nm_tabela   		= 'CONVENIO_RECEB_ESTORNO'
	and     nr_documento 		= NEW.nr_seq_receb
	and	nr_seq_doc_compl	= NEW.nr_sequencia;
end if;
/* Grava o agendamento da informação para atualização do fluxo de caixa. */


CALL gravar_agend_fluxo_caixa(NEW.nr_seq_receb,null,'RC',NEW.dt_estorno,'I',NEW.nm_usuario);

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_convenio_receb_estorno_insert() FROM PUBLIC;

CREATE TRIGGER convenio_receb_estorno_insert
	AFTER INSERT OR UPDATE ON convenio_receb_estorno FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_convenio_receb_estorno_insert();

