-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS titulo_receber_liq_mx ON titulo_receber_liq CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_titulo_receber_liq_mx() RETURNS trigger AS $BODY$
declare
nr_sequencia_w  	nota_fiscal.nr_sequencia%type;
ie_tipo_consistencia_w  tipo_recebimento.ie_tipo_consistencia%type;
ie_forma_pagamento_w	condicao_pagamento.ie_forma_pagamento%type;
ie_utilizar_cfdi_w	nfe_senha_conexao.ie_utilizar_cfdi%type;
qt_nota_fiscal_w	bigint;
BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then

	if (TG_OP = 'UPDATE') then
	BEGIN
		select	count(1)
		into STRICT	qt_nota_fiscal_w
		from	nota_fiscal n
		where	n.nr_seq_baixa_tit 	= NEW.nr_sequencia
		and 	n.nr_sequencia_ref 	= (	SELECT	t.nr_seq_nf_saida
							from	titulo_receber t
							where	t.nr_titulo 	= NEW.nr_titulo 	 LIMIT 1)  LIMIT 1;
	end;
	end if;
	
	if (TG_OP = 'INSERT' AND NEW.ie_lib_caixa = 'S') or ((TG_OP = 'UPDATE') and (NEW.ie_lib_caixa = 'S') and (qt_nota_fiscal_w = 0)) then
	BEGIN
		select 	coalesce(max(ie_utilizar_cfdi), 'N')
		into STRICT	ie_utilizar_cfdi_w
		from   	nfe_senha_conexao
		where  	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
		and	ie_tipo_nota = 'NFSE';
	
		if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'es_MX') and ((ie_utilizar_cfdi_w = 'S') or (ie_utilizar_cfdi_w = '4')) then
	
			select max(ie_tipo_consistencia)
			into STRICT   ie_tipo_consistencia_w
			from   tipo_recebimento
			where  cd_tipo_recebimento = NEW.cd_tipo_recebimento;

			select 	coalesce(Obter_tp_nfe_avista_aprazo(max(nr_seq_nf_saida)),0)
			into STRICT	ie_forma_pagamento_w	
			from 	titulo_receber
			where 	nr_titulo = NEW.nr_titulo;
			
			if (ie_tipo_consistencia_w <> 7) and (ie_forma_pagamento_w <> 1) then
	
				if (NEW.vl_recebido > 0) then
					CALL gerar_nota_zero(NEW.nr_sequencia,NEW.nr_titulo,NEW.nm_usuario,'N');
				elsif (NEW.vl_recebido < 0) then
				
					select max(nr_sequencia)
					into STRICT   nr_sequencia_w
					from   nota_fiscal n
					where  n.nr_seq_baixa_tit = NEW.nr_seq_liq_origem
					and    n.nr_sequencia_ref = (SELECT t.nr_seq_nf_saida
								from   titulo_receber t
								where  t.nr_titulo = NEW.nr_titulo);
				
					if (nr_sequencia_w is not null) then
					CALL estornar_nota_fiscal(nr_sequencia_w,NEW.nm_usuario);
					CALL gerar_nota_zero(NEW.nr_sequencia,NEW.nr_titulo,NEW.nm_usuario,'S');
					end if;
					
				end if;
			end if;	
		end if;
	end;
	end if;
end if;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_titulo_receber_liq_mx() FROM PUBLIC;

CREATE TRIGGER titulo_receber_liq_mx
	BEFORE INSERT OR UPDATE ON titulo_receber_liq FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_titulo_receber_liq_mx();

