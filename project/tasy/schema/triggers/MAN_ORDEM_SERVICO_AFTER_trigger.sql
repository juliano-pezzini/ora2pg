-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS man_ordem_servico_after ON man_ordem_servico CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_man_ordem_servico_after() RETURNS trigger AS $BODY$
declare
	
nm_user_w			varchar(50);
dt_inicio_w			timestamp;
dt_termino_w			timestamp;
nr_sequencia_w			bigint;
cd_estabelecimento_w		bigint;
qt_reg_w				smallint;
ie_atualiza_estagio_ativ_w		varchar(01) := 'N';
qt_minuto_w			bigint;
nr_seq_estagio_w			bigint;
ie_gerar_aval_efic_w		varchar(1) := 'N';
nr_seq_agenda_w			bigint;
nr_seq_gerencia_w			bigint;
ie_tempo_w			man_ordem_serv_sla.ie_tempo%type;
nr_seq_estagio_sla_w		man_ordem_serv_sla.nr_seq_estagio%type;
dt_estagio_w			timestamp;
cd_estabelecimento_ww		man_localizacao.cd_estabelecimento%type;
dt_inicio_ww			timestamp;
qt_min_real_os_w			man_ordem_serv_sla.qt_min_real_os%type;
dt_ordem_w			timestamp;
dt_anterior_w			timestamp;
ie_aguarda_cliente_ww		varchar(255);
ie_aguarda_cliente_w		varchar(255);
dt_atualizacao_w			timestamp;
qt_min_w				bigint;
cd_setor_usuario_w			bigint;
nm_usuario_resp_w			varchar(15);
qtd_registro_usuario_setor_w		bigint;
ie_utiliza_sla_w			varchar(255) := obter_valor_param_usuario(299,57,wheb_usuario_pck.get_cd_perfil,wheb_usuario_pck.get_nm_usuario,wheb_usuario_pck.get_cd_estabelecimento);

C01 CURSOR FOR
	SELECT a.dt_atualizacao, b.ie_aguarda_cliente
	from	man_estagio_processo b,
		man_ordem_serv_estagio a
	where	a.nr_seq_ordem		= NEW.nr_sequencia
	and	a.nr_seq_estagio	= b.nr_sequencia
	
union all

	SELECT coalesce(NEW.dt_fim_real,LOCALTIMESTAMP),
		b.ie_aguarda_cliente
	from	man_estagio_processo b
	where	b.nr_sequencia		= NEW.nr_sequencia
	order by 1;
BEGIN
  BEGIN

if (coalesce(OLD.nr_seq_estagio, 0) <> NEW.nr_seq_estagio) then
	BEGIN
		insert into man_ordem_serv_estagio(
			nr_sequencia,
			nr_seq_ordem,
			dt_atualizacao,
			nm_usuario,
			nr_seq_estagio,
			ie_tipo_customizacao_os,
			nr_seq_grupo_planej)
		values (nextval('man_ordem_serv_estagio_seq'),
			NEW.nr_sequencia,
			LOCALTIMESTAMP,
			coalesce(wheb_usuario_pck.get_nm_usuario, NEW.nm_usuario),
			NEW.nr_seq_estagio,
			NEW.ie_tipo_customizacao_os,
			NEW.nr_grupo_planej);
	exception
	when others then
	
		if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
			BEGIN
			--Tratamento ao disparar erro de FK

			if (SQLSTATE = -02291) then
				/* Estagio de encerramento de Ordem de servico Philips nao encontrado. Favor verificar cadastros  */


				CALL wheb_mensagem_pck.exibir_mensagem_abort(852352);
			else
				CALL wheb_mensagem_pck.exibir_mensagem_abort(sqlerrm(SQLSTATE));
			end if;
			end;
		end if;
	end;
end if;

if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto final;
end if;

if (coalesce(OLD.nr_seq_estagio, 0) <> NEW.nr_seq_estagio) then
	BEGIN
	
	/*inicio alteracao os243922*/


	ie_atualiza_estagio_ativ_w := obter_param_usuario(299, 288, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_atualiza_estagio_ativ_w);	
	
	if (coalesce(ie_atualiza_estagio_ativ_w,'N') = 'S') then
		BEGIN
		if (OLD.nr_seq_estagio is not null) then
			select	max(nr_sequencia)
			into STRICT	nr_seq_estagio_w
			from	man_ordem_serv_estagio
			where	nr_seq_ordem = NEW.nr_sequencia
			and	nr_seq_estagio= OLD.nr_seq_estagio;
			
			qt_minuto_w	:= coalesce(trunc(man_obter_tempo_estagio(nr_seq_estagio_w,NEW.nr_sequencia,'M')),0);

			insert into man_os_estagio_ativ(	nr_sequencia,
							nr_seq_ordem_servico,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							qt_minuto,
							nr_seq_estagio,
							nr_seq_os_ativ)
						values (	nextval('man_os_estagio_ativ_seq'),
							NEW.nr_sequencia,
							LOCALTIMESTAMP,
							NEW.nm_usuario,
							LOCALTIMESTAMP,
							NEW.nm_usuario,
							coalesce(qt_minuto_w,0),
							OLD.nr_seq_estagio,
							0);
		end if;
		end;
	end if;		/*fim alteracao os243922*/

	end;
end if;

if (NEW.nr_seq_tipo_ordem <> OLD.nr_seq_tipo_ordem) or (OLD.nr_seq_tipo_ordem is null) and (NEW.nr_seq_tipo_ordem is not null) then
	insert into man_ordem_serv_hist_tp_cli(	nr_sequencia,
					nr_seq_ordem_servico,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_tipo)
				values (	nextval('man_ordem_serv_hist_tp_cli_seq'),
					NEW.nr_sequencia,
					LOCALTIMESTAMP,
					NEW.nm_usuario,
					LOCALTIMESTAMP,
					NEW.nm_usuario,
					NEW.nr_seq_tipo_ordem);
end if;

if (NEW.nr_seq_localizacao is not null) then
	BEGIN
	select	cd_estabelecimento
	into STRICT	cd_estabelecimento_w
	from	man_localizacao
	where	nr_sequencia		= NEW.nr_seq_localizacao;
	exception
	when others then
		/*(-20011,'Estabelecimento da localizacao(' ||:new.nr_seq_localizacao|| ') nao encontrado ou localizacao inexistente.');*/


		CALL wheb_mensagem_pck.exibir_mensagem_abort(263156,'CD_LOCAL=' || NEW.nr_seq_localizacao);
	end;
end if;

select	username
into STRICT	nm_user_w
from	user_users;

if (nm_user_w <> 'CORP') and (ie_utiliza_sla_w is null) then
	select	coalesce(max(vl_parametro),'N')
	into STRICT	ie_utiliza_sla_w
	from	funcao_param_perfil
	where	cd_funcao	= 299
	and	nr_sequencia	= 57;
end if;

/* rotina somente para wheb  ou para quem tem parametro 57 da funcao 299 (utiliza sla) */


if (nm_user_w = 'CORP') or (ie_utiliza_sla_w in ('S','L')) then
	BEGIN
	select	max(dt_inicio),
		max(dt_termino),
		max(nr_sequencia)
	into STRICT	dt_inicio_w,
		dt_termino_w,
		nr_sequencia_w
	from	man_ordem_serv_sla
	where	nr_seq_ordem	= NEW.nr_sequencia;

	if (nr_sequencia_w is null) then
		if (NEW.ie_status_ordem < 3) and (verifica_sla_removido(NEW.nr_sequencia) = 'N') then
			CALL sla_dashboard_pck.incluir_sla_recebida(
				cd_estabelecimento_w, NEW.nr_sequencia,NEW.nm_usuario,
				NEW.ie_prioridade, NEW.ie_classificacao,
				NEW.nr_seq_localizacao, NEW.nr_grupo_trabalho, NEW.dt_ordem_servico, 
				NEW.dt_inicio_real, NEW.nr_seq_estagio, NEW.nr_seq_equipamento, NEW.nr_seq_classif,
				NEW.ie_parado, 'S', NEW.ie_ambiente, NEW.cd_funcao);
		end if;
	else
		BEGIN
		if (dt_inicio_w is null) and (NEW.dt_inicio_real is not null) then
			update	man_ordem_serv_sla
			set	dt_inicio	= NEW.dt_inicio_real
			where	nr_sequencia	= nr_sequencia_w;
		end if;
		if (dt_termino_w is null) and (NEW.dt_fim_real is not null) then
			update	man_ordem_serv_sla
			set	dt_termino	= NEW.dt_fim_real
			where	nr_sequencia	= nr_sequencia_w;
		end if;
		
		
		select	ie_tempo,
			nr_seq_estagio
		into STRICT	ie_tempo_w,
			nr_seq_estagio_sla_w
		from	man_ordem_serv_sla	a
		where	a.nr_sequencia	= nr_sequencia_w;
		
		/*if 	(nr_seq_estagio_sla_w is not null) then
			qt_min_real_os_w		:= 0;

			dt_inicio_ww	:= nvl(:new.dt_inicio_real, :new.dt_ordem_servico);
			
			select	max(b.cd_estabelecimento)
			into	cd_estabelecimento_ww
			from	man_localizacao	b
			where	b.nr_sequencia	= :new.nr_seq_localizacao;

			select 	max(dt_atualizacao)
			into	dt_estagio_w
			from	man_ordem_serv_estagio
			where	nr_seq_estagio 	= nr_seq_estagio_sla_w
			and	nr_seq_ordem	= :new.nr_sequencia;

			if	(ie_tempo_w = 'COM') then
				select 	Man_Obter_min_Com(cd_estabelecimento_ww, dt_estagio_w, sysdate)
				into	qt_min_real_os_w
				from	dual;			
			else
				qt_min_real_os_w	:= (dt_inicio_ww - dt_estagio_w) * 1440;
			end if;
		else*/

		qt_min_real_os_w		:= 0;
		
		dt_ordem_w	:= NEW.dt_ordem_servico;
		dt_inicio_ww	:= coalesce(NEW.dt_inicio_real, NEW.dt_ordem_servico);
		
		select	max(b.cd_estabelecimento)
		into STRICT	cd_estabelecimento_w
		from	man_localizacao	b
		where	b.nr_sequencia	= NEW.nr_seq_localizacao;

		if (ie_tempo_w = 'COM') then
			select 	Man_Obter_min_Com(cd_estabelecimento_w, dt_ordem_w, dt_inicio_ww)
			into STRICT	qt_min_real_os_w
			;			
		else
			qt_min_real_os_w	:= (dt_inicio_ww - dt_ordem_w) * 1440;
		end if;

		ie_aguarda_cliente_ww	:= 'N';
		dt_anterior_w		:= dt_inicio_ww;

		OPEN C01;
		LOOP
		FETCH C01 into
			dt_atualizacao_w,
			ie_aguarda_cliente_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			BEGIN
			qt_min_w		:= 0;
			if (ie_aguarda_cliente_ww = 'N') and (dt_atualizacao_w > dt_inicio_ww) then
				BEGIN
				if (ie_tempo_w = 'COM') then
					select 	Man_Obter_min_Com(cd_estabelecimento_w, dt_anterior_w, dt_atualizacao_w)
					into STRICT	qt_min_w
					;
				else
					qt_min_w	:= (dt_atualizacao_w - dt_anterior_w) * 1440;
				end if;
				qt_min_real_os_w	:= qt_min_real_os_w + qt_min_w;
				end;
			end if;
			ie_aguarda_cliente_ww	:= ie_aguarda_cliente_w;
			dt_anterior_w		:= dt_atualizacao_w;
			end;
		END LOOP;
		CLOSE C01;
		--end if;

		
		--wheb_usuario_pck.set_ie_executar_trigger('N');

		
		update	man_ordem_serv_sla
		set	qt_min_real_os	= qt_min_real_os_w
		where	nr_sequencia	= nr_sequencia_w;
		
		--wheb_usuario_pck.set_ie_executar_trigger('S');

		end;
	end if;
	
	if (nm_user_w = 'CORP') then
		BEGIN
		BEGIN
		select	nr_seq_gerencia
		into STRICT	nr_seq_gerencia_w
		from	grupo_desenvolvimento
		where	nr_sequencia = NEW.nr_seq_grupo_des;
		exception
		when others then
			nr_seq_gerencia_w	:=	0;
		end;
		
		if (nr_seq_gerencia_w = 60) and
			coalesce(man_obter_tipo_sla(NEW.nr_sequencia),0) = 1 then
			BEGIN
			select	count(1)
			into STRICT	qt_reg_w
			from	man_ordem_servico_exec
			where	nm_usuario_exec = 'pfcaldas'
			and	nr_seq_ordem = NEW.nr_sequencia;
			
			if (qt_reg_w = 0) then
				insert into man_ordem_servico_exec(	
					nr_sequencia,
					nr_seq_ordem,
					dt_atualizacao,
					nm_usuario,
					nm_usuario_exec,
					qt_min_prev,
					dt_recebimento,
					nr_seq_tipo_exec,
					dt_atualizacao_nrec,
					nm_usuario_nrec)
				values (	nextval('man_ordem_servico_exec_seq'),
					NEW.nr_sequencia,
					LOCALTIMESTAMP,
					'Tasy',
					'pfcaldas',
					15,
					LOCALTIMESTAMP,
					1,
					LOCALTIMESTAMP,
					'Tasy');
					
				update	man_ordem_servico_exec a
				set	dt_fim_execucao = LOCALTIMESTAMP
				where	a.nr_seq_ordem = NEW.nr_sequencia
				and	a.nm_usuario_exec <> 'pfcaldas'
				and	a.dt_fim_execucao is null
				and	exists (	SELECT	1
						from	grupo_desenvolvimento y,
							usuario_grupo_des x
						where	y.nr_sequencia = x.nr_seq_grupo
						and	y.nr_seq_gerencia = 60
						and	a.nm_usuario_exec = x.nm_usuario_grupo
						and	x.ie_funcao_usuario in ('S','N'));
			end if;
			end;
		end if;
		end;
	end if;
	end;
end if;
-- verificar se e ordem de encerramento de um treinamento. caso a os esteja vinculado a um treinamento devera gerar um registro na tabela de pendencias de avaliacao de eficacia os633467

if (nm_user_w = 'CORP') then
	BEGIN
	select	CASE WHEN count(b.nr_seq_agenda)=0 THEN 'N'  ELSE 'S' END , -- verifica se a ordem e vinculada a um treinamento
		max(b.nr_seq_agenda)
	into STRICT	ie_gerar_aval_efic_w,
		nr_seq_agenda_w
	from	tre_agenda_ordem b
	where	NEW.ie_status_ordem = '3'
	and	b.nr_seq_agenda is not null
	and	b.nr_seq_ordem = NEW.nr_sequencia;
	if (coalesce(ie_gerar_aval_efic_w,'N') = 'S') then
		BEGIN
		insert	into	man_aval_eficacia_tre(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_seq_ordem_tre,
			nr_seq_agenda,
			nr_seq_ordem,
			ie_gerado_ordem)
		values (nextval('man_aval_eficacia_tre_seq'),
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			NEW.nr_sequencia,
			nr_seq_agenda_w,
			null,
			'N');
		end;
	end if;
	end;
end if;

if (obter_valor_param_usuario(299,528,obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento) = 'S') then
	BEGIN
		
	--buscar o  setor 

	select	max(obter_setor_usuario_pf(NEW.CD_PESSOA_SOLICITANTE))
	into STRICT	cd_setor_usuario_w
	;
				
	--buscar o  responsavel pelo setor	

	select	max(b.nm_usuario)
	into STRICT 	nm_usuario_resp_w
	from    setor_atendimento a,
		usuario b
	where	a.cd_pessoa_resp = b.cd_pessoa_fisica
	and	a.cd_setor_atendimento = cd_setor_usuario_w;
					
	--verificacao se ja existe o usuario responsavel do setor como executor

				
	SELECT	COUNT(*)
	INTO STRICT	qtd_registro_usuario_setor_w
	FROM 	man_ordem_servico_exec
	WHERE	nr_seq_ordem = NEW.nr_sequencia
	AND 	nm_usuario_exec = nm_usuario_resp_w;
		
	if (qtd_registro_usuario_setor_w = 0) and (nm_usuario_resp_w is not null) then
		BEGIN
				
		insert into man_ordem_servico_exec(	
				nr_sequencia,
				nr_seq_ordem,
				dt_atualizacao,
				nm_usuario,
				nm_usuario_exec,
				qt_min_prev,
				dt_recebimento,
				nr_seq_tipo_exec,
				dt_atualizacao_nrec,
				nm_usuario_nrec)
			values (	nextval('man_ordem_servico_exec_seq'),
				NEW.nr_sequencia,
				LOCALTIMESTAMP,
				'Tasy',
				nm_usuario_resp_w,
				15,
				LOCALTIMESTAMP,
				null,
				LOCALTIMESTAMP,
				'Tasy');
		end;
		end if;
	end;
end if;

if (nm_user_w = 'CORP') and (NEW.cd_funcao is not null) and (NEW.nr_seq_localizacao is not null) and TG_OP = 'INSERT' then
BEGIN
	CALL man_enviar_ci_complaint(NEW.nr_sequencia, NEW.nr_seq_localizacao, NEW.cd_funcao);
	Exception
	when others then
		goto final;
end;	
end if;

if	(NEW.nr_seq_os_ant is not null AND NEW.nr_seq_os_ant <> OLD.nr_seq_os_ant) or
	(NEW.nr_seq_os_ant is not null AND OLD.nr_seq_os_ant is null) and (phi_is_base_philips = 'S') then
	BEGIN

        CALL man_inserir_anexos_os_reab(NEW.nr_sequencia, NEW.nr_seq_os_ant);

	end;
end if;

<<final>>
qt_reg_w	:= 0;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_man_ordem_servico_after() FROM PUBLIC;

CREATE TRIGGER man_ordem_servico_after
	AFTER INSERT OR UPDATE ON man_ordem_servico FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_man_ordem_servico_after();

