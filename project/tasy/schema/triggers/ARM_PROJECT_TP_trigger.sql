-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS arm_project_tp ON arm_project CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_arm_project_tp() RETURNS trigger AS $BODY$
DECLARE nr_seq_w bigint;ds_s_w   varchar(1);ds_c_w   varchar(1);ds_w	   varchar(1);ie_log_w varchar(1);BEGIN BEGIN ds_s_w := to_char(OLD.NR_SEQUENCIA);  ds_c_w:=null;SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQ_SCOPE_STAGE,1,4000), substr(NEW.NR_SEQ_SCOPE_STAGE,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQ_SCOPE_STAGE', ie_log_w, ds_w, 'ARM_PROJECT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQ_PORT_CATEGORY,1,4000), substr(NEW.NR_SEQ_PORT_CATEGORY,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQ_PORT_CATEGORY', ie_log_w, ds_w, 'ARM_PROJECT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(to_char(OLD.DT_FINAL,'dd/mm/yyyy hh24:mi:ss'), to_char(NEW.DT_FINAL,'dd/mm/yyyy hh24:mi:ss'), NEW.nm_usuario, nr_seq_w, 'DT_FINAL', ie_log_w, ds_w, 'ARM_PROJECT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQ_TYPE,1,4000), substr(NEW.NR_SEQ_TYPE,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQ_TYPE', ie_log_w, ds_w, 'ARM_PROJECT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_PROJECT_NAME,1,4000), substr(NEW.DS_PROJECT_NAME,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_PROJECT_NAME', ie_log_w, ds_w, 'ARM_PROJECT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_DESCRIPTION,1,4000), substr(NEW.DS_DESCRIPTION,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_DESCRIPTION', ie_log_w, ds_w, 'ARM_PROJECT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(to_char(OLD.DT_INITIAL,'dd/mm/yyyy hh24:mi:ss'), to_char(NEW.DT_INITIAL,'dd/mm/yyyy hh24:mi:ss'), NEW.nm_usuario, nr_seq_w, 'DT_INITIAL', ie_log_w, ds_w, 'ARM_PROJECT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_PROJECT_ID,1,4000), substr(NEW.NR_PROJECT_ID,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_PROJECT_ID', ie_log_w, ds_w, 'ARM_PROJECT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_REGION,1,4000), substr(NEW.NR_REGION,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_REGION', ie_log_w, ds_w, 'ARM_PROJECT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQ_PROBABILITY,1,4000), substr(NEW.NR_SEQ_PROBABILITY,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQ_PROBABILITY', ie_log_w, ds_w, 'ARM_PROJECT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_DEVELOPMENT_COVERAGE,1,4000), substr(NEW.DS_DEVELOPMENT_COVERAGE,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_DEVELOPMENT_COVERAGE', ie_log_w, ds_w, 'ARM_PROJECT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_TOTAL_BUDGET,1,4000), substr(NEW.QT_TOTAL_BUDGET,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_TOTAL_BUDGET', ie_log_w, ds_w, 'ARM_PROJECT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_PRODUCT_PROJECT,1,4000), substr(NEW.IE_PRODUCT_PROJECT,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_PRODUCT_PROJECT', ie_log_w, ds_w, 'ARM_PROJECT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_APPROVED,1,4000), substr(NEW.IE_APPROVED,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_APPROVED', ie_log_w, ds_w, 'ARM_PROJECT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQUENCIA,1,4000), substr(NEW.NR_SEQUENCIA,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQUENCIA', ie_log_w, ds_w, 'ARM_PROJECT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;   exception when others then ds_w:= '1'; end;   END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_arm_project_tp() FROM PUBLIC;

CREATE TRIGGER arm_project_tp
	AFTER UPDATE ON arm_project FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_arm_project_tp();

