-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pls_conta_pos_estab_atual ON pls_conta_pos_estabelecido CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pls_conta_pos_estab_atual() RETURNS trigger AS $BODY$
declare

ds_programa_w		varchar(4000);
qt_registro_w		integer := 0;
ie_status_analise_w	pls_analise_conta.ie_status%type;
ds_log_w		varchar(4000);
ds_log_call_w		varchar(2000);
machine_w		varchar(100);
osuser_w		varchar(100);
qt_apresentada_w	pls_conta_mat.qt_material_imp%type;
qt_liberada_w		pls_conta_mat.qt_material_imp%type;
ie_concil_contab_w	pls_visible_false.ie_concil_contab%type;
nr_seq_log_pos_estab_w	pls_log_pos_estabelecido.nr_sequencia%type;

BEGIN

select	osuser,
	machine
into STRICT	osuser_w,
	machine_w
from  	v$session
where	audsid = userenv('SESSIONID');

ds_log_w := substr(	' M'||chr(225)||'quina: ' || machine_w || chr(13) ||chr(10)||
				' OS User: ' || osuser_w || chr(13) ||chr(10)||
				' Fun'||chr(231)||chr(227)||'o ativa : '|| obter_funcao_ativa || chr(13) ||chr(10)||
				' CallStack: '|| chr(13) || chr(10)|| dbms_utility.format_call_stack || chr(13) ||chr(10) ,1,1500);
				
if (NEW.nr_seq_analise is null and OLD.nr_seq_analise is not null) then

	
	if (pls_se_aplicacao_tasy = 'N') then
			ds_log_w := ds_log_w || ' old.An'||chr(225)||'lise. '||OLD.nr_seq_analise ||' Altera'||chr(231)||chr(227)||'o efetuada via update fora do Tasy.';
				
	else
		ds_log_w :=  ds_log_w || ' new.An'||chr(225)||'lise. '||NEW.nr_seq_analise  ||' Altera'||chr(231)||chr(227)||'o efetuada via Tasy.';
	end if;
	

end if;				

if (NEW.nr_seq_disc_proc is not null) then
	select	qt_procedimento_imp,
		qt_procedimento
	into STRICT	qt_apresentada_w,
		qt_liberada_w
	from	pls_conta_proc
	where	nr_sequencia = NEW.nr_seq_conta_proc;
	
elsif (NEW.nr_seq_disc_mat is not null) then
	
	select	qt_material_imp,
		qt_material
	into STRICT	qt_apresentada_w,
		qt_liberada_w
	from	pls_conta_mat
	where	nr_sequencia = NEW.nr_seq_conta_mat;
end if;

if	((NEW.qt_item + qt_liberada_w) > qt_apresentada_w) and
	((NEW.qt_item <> OLD.qt_item) or (NEW.qt_item is not null and OLD.qt_item is null)) then	
	
	ds_log_w := 'Quantidade gerada + quantidade liberada do item '||chr(233)||' maior que a quantidade apresentada. ' || pls_util_pck.enter_w || ds_log_w;
	
	insert	into	pls_conta_pos_estab_log(	nr_sequencia, vl_beneficiario, vl_beneficiario_old,
			dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
			nm_usuario_nrec, nr_seq_conta, nr_seq_conta_mat,
			nr_seq_conta_proc, ds_log, vl_provisao_old,
			vl_provisao, vl_custo_operacional_old, vl_custo_operacional,
			vl_materiais_old, vl_materiais, vl_administracao,
			tx_administracao, vl_medico_old, vl_medico,
			vl_calculado_old, vl_calculado, vl_medico_calc,
			vl_medico_calc_old, vl_materiais_calc, vl_materiais_calc_old,
			vl_custo_operacional_calc_old, vl_custo_operacional_calc, vl_liberado_material_fat,
			vl_liberado_material_fat_old, vl_liberado_co_fat_old, vl_liberado_co_fat,
			vl_liberado_hi_fat, vl_liberado_hi_fat_old, vl_glosa_material_fat,
			vl_glosa_material_fat_old, vl_glosa_hi_fat, vl_glosa_hi_fat_old,
			vl_glosa_co_fat_old, vl_glosa_co_fat, vl_taxa_servico,
			vl_taxa_servico_old, vl_taxa_co, vl_taxa_co_old,
			vl_taxa_material_old, vl_taxa_material, vl_lib_taxa_co,
			vl_lib_taxa_co_old, vl_lib_taxa_material_old, vl_lib_taxa_material,
			vl_lib_taxa_servico, vl_lib_taxa_servico_old, vl_glosa_taxa_co_old,
			vl_glosa_taxa_co, vl_glosa_taxa_material_old, vl_glosa_taxa_material,
			vl_glosa_taxa_servico, vl_glosa_taxa_servico_old, nr_seq_lote_fat,
			nr_seq_lote_fat_old, nr_seq_evento_fat, nr_seq_evento_fat_old)
	values (	nextval('pls_conta_pos_estab_log_seq'), NEW.vl_beneficiario, OLD.vl_beneficiario,
			LOCALTIMESTAMP, NEW.nm_usuario, LOCALTIMESTAMP,
			NEW.nm_usuario, NEW.nr_seq_conta, NEW.nr_seq_conta_mat,
			NEW.nr_seq_conta_proc, ds_log_w, OLD.vl_provisao,
			NEW.vl_provisao, OLD.vl_custo_operacional, NEW.vl_custo_operacional,
			OLD.vl_materiais, NEW.vl_materiais, NEW.vl_administracao,
			NEW.tx_administracao, OLD.vl_medico, NEW.vl_medico,
			OLD.vl_calculado, NEW.vl_calculado, NEW.vl_medico_calc,
			OLD.vl_medico_calc, NEW.vl_materiais_calc, OLD.vl_materiais_calc,
			OLD.vl_custo_operacional_calc, NEW.vl_custo_operacional_calc, NEW.vl_liberado_material_fat,
			OLD.vl_liberado_material_fat, OLD.vl_liberado_co_fat, NEW.vl_liberado_co_fat,
			NEW.vl_liberado_hi_fat, OLD.vl_liberado_hi_fat, NEW.vl_glosa_material_fat,
			OLD.vl_glosa_material_fat, NEW.vl_glosa_hi_fat, OLD.vl_glosa_hi_fat,
			OLD.vl_glosa_co_fat, NEW.vl_glosa_co_fat, NEW.vl_taxa_servico,
			OLD.vl_taxa_servico, NEW.vl_taxa_co, OLD.vl_taxa_co,
			OLD.vl_taxa_material, NEW.vl_taxa_material, NEW.vl_lib_taxa_co,
			OLD.vl_lib_taxa_co, OLD.vl_lib_taxa_material, NEW.vl_lib_taxa_material,
			NEW.vl_lib_taxa_servico, OLD.vl_lib_taxa_servico, OLD.vl_glosa_taxa_co,
			NEW.vl_glosa_taxa_co, OLD.vl_glosa_taxa_material, NEW.vl_glosa_taxa_material,
			NEW.vl_glosa_taxa_servico, OLD.vl_glosa_taxa_servico, NEW.nr_seq_lote_fat,
			OLD.nr_seq_lote_fat, NEW.nr_seq_evento_fat, OLD.nr_seq_evento_fat);
end if;
				
--Quando status faturamento da conta pos mudar para liberado. Tentar pegar os casos onde as contas ficam liberadas para faturamento e a analise pendente.(Ex: OS958963)

if (NEW.ie_status_faturamento = 'L' and (OLD.ie_status_faturamento <> 'L' or OLD.ie_status_faturamento is null) ) then
	
	--Tentar pegar os casos onde 

	select 	max(ie_status)
	into STRICT	ie_status_analise_w
	from	pls_analise_conta
	where	nr_sequencia = NEW.nr_seq_analise;
	
	if (ie_status_analise_w = 'G') then
		
		if (pls_se_aplicacao_tasy = 'N') then
			ds_log_w := ds_log_w || 'status da an'||chr(255)||'lise = G. Altera'||chr(231)||chr(227)||'o efetuada via update fora do Tasy.';
				
		else
			ds_log_w :=  ds_log_w || 'ie_status_analise_w = G.';
		end if;
	end if;
	
end if;

if (coalesce(wheb_usuario_pck.get_ie_lote_contabil,'N') = 'N') and (coalesce(wheb_usuario_pck.get_ie_atualizacao_contabil,'N') = 'N') then
	if	((coalesce(NEW.vl_beneficiario,0) < 0) and (coalesce(NEW.vl_beneficiario,0) <> coalesce(OLD.vl_beneficiario,0))) and (NEW.ie_status_faturamento <> 'N') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 281537, 'NR_SEQ_CONTA=' || NEW.nr_seq_conta || ';' || 'NR_SEQ_CONTA_POS=' || NEW.nr_sequencia );
	end if;
end if;

if (OLD.ie_status_faturamento = 'L') and (NEW.ie_status_faturamento = 'P') then
	
	if (NEW.nr_seq_conta_proc is not null) then
		select  count(1)
		into STRICT	qt_registro_w
		from    pls_fatura_proc a,
			pls_fatura_conta b,
			pls_fatura_evento c,
			pls_fatura d
		where   a.nr_seq_conta_pos_estab = NEW.nr_sequencia
		and     a.nr_seq_fatura_conta = b.nr_sequencia
		and     b.nr_seq_fatura_evento = c.nr_sequencia
		and     c.nr_seq_fatura = d.nr_sequencia
		and     d.ie_cancelamento is null;
		
	elsif (NEW.nr_seq_conta_mat is not null) then
		select  count(1)
		into STRICT	qt_registro_w
		from    pls_fatura_mat a,
			pls_fatura_conta b,
			pls_fatura_evento c,
			pls_fatura d
		where   a.nr_seq_conta_pos_estab = NEW.nr_sequencia
		and     a.nr_seq_fatura_conta = b.nr_sequencia
		and     b.nr_seq_fatura_evento = c.nr_sequencia
		and     c.nr_seq_fatura = d.nr_sequencia
		and     d.ie_cancelamento is null;
		
	end if;
	if (qt_registro_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 289301, 'NR_SEQ_CONTA=' || NEW.nr_seq_conta || ';' || 'NR_SEQ_CONTA_POS=' || NEW.nr_sequencia );
	end if;
end if;

if (NEW.nr_seq_evento_fat is not null) and (NEW.nr_seq_lote_fat is null) and (OLD.nr_seq_evento_fat is not null) and (OLD.nr_seq_lote_fat is not null) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort( 322232, 'NR_SEQ_CONTA=' || NEW.nr_seq_conta || ';' || 'NR_SEQ_CONTA_POS=' || NEW.nr_sequencia );
end if;

if (OLD.ie_status_faturamento	= 'C') and (NEW.ie_status_faturamento	!= 'C') then
	NEW.ie_status_faturamento	:= 'C';
	NEW.ie_cobrar_mensalidade	:= 'N';
	NEW.vl_beneficiario		:= 0;
	NEW.qt_item			:= 0;
end if;

if ( TG_OP = 'UPDATE' ) and (NEW.ie_situacao = 'I') and (OLD.nr_seq_lote_fat is not null) then
		
	if (pls_se_aplicacao_tasy = 'N') then
		ds_log_w := ds_log_w || 'Situa'||chr(231)||chr(227)||'o do item(pos) alterada para inativo. Altera'||chr(231)||chr(227)||'o efetuada via update fora do Tasy.';
			
	else
		ds_log_w :=  ds_log_w || 'Situa'||chr(231)||chr(227)||'o do item(pos) alterada para inativo.';
	end if;
	
end if;	

if ( TG_OP = 'UPDATE' ) and
	( (pls_se_aplicacao_tasy = 'N') or (ie_status_analise_w = 'G')) then

	insert	into pls_conta_pos_estab_log(nr_sequencia,
		vl_beneficiario,
		vl_beneficiario_old,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_conta,
		nr_seq_conta_mat,
		nr_seq_conta_proc,
		ds_log,
		vl_provisao_old,
		vl_provisao,
		vl_custo_operacional_old,
		vl_custo_operacional,
		vl_materiais_old,
		vl_materiais,
		vl_administracao,
		tx_administracao,
		vl_medico_old,
		vl_medico,
		vl_calculado_old,
		vl_calculado,
		vl_medico_calc,
		vl_medico_calc_old,
		vl_materiais_calc,
		vl_materiais_calc_old,
		vl_custo_operacional_calc_old,
		vl_custo_operacional_calc,
		vl_liberado_material_fat,
		vl_liberado_material_fat_old,
		vl_liberado_co_fat_old,
		vl_liberado_co_fat,
		vl_liberado_hi_fat,
		vl_liberado_hi_fat_old,
		vl_glosa_material_fat,
		vl_glosa_material_fat_old,
		vl_glosa_hi_fat,
		vl_glosa_hi_fat_old,
		vl_glosa_co_fat_old,
		vl_glosa_co_fat,
		vl_taxa_servico,
		vl_taxa_servico_old,
		vl_taxa_co,
		vl_taxa_co_old,
		vl_taxa_material_old,
		vl_taxa_material,
		vl_lib_taxa_co,
		vl_lib_taxa_co_old,
		vl_lib_taxa_material_old,
		vl_lib_taxa_material,
		vl_lib_taxa_servico,
		vl_lib_taxa_servico_old,
		vl_glosa_taxa_co_old,
		vl_glosa_taxa_co,
		vl_glosa_taxa_material_old,
		vl_glosa_taxa_material,
		vl_glosa_taxa_servico,
		vl_glosa_taxa_servico_old,
		nr_seq_lote_fat,
		nr_seq_lote_fat_old,
		nr_seq_evento_fat,
		nr_seq_evento_fat_old)
	SELECT	nextval('pls_conta_pos_estab_log_seq'),
		NEW.vl_beneficiario,
		OLD.vl_beneficiario,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		NEW.nr_seq_conta,
		NEW.nr_seq_conta_mat,
		NEW.nr_seq_conta_proc,
		coalesce(ds_log_w, 'Altera'||chr(231)||chr(227)||'o efetuada via update fora do Tasy.'),
		OLD.vl_provisao,
		NEW.vl_provisao,
		OLD.vl_custo_operacional,
		NEW.vl_custo_operacional,
		OLD.vl_materiais,
		NEW.vl_materiais,
		NEW.vl_administracao,
		NEW.tx_administracao,
		OLD.vl_medico,
		NEW.vl_medico,
		OLD.vl_calculado,
		NEW.vl_calculado,
		NEW.vl_medico_calc,
		OLD.vl_medico_calc,
		NEW.vl_materiais_calc,
		OLD.vl_materiais_calc,
		OLD.vl_custo_operacional_calc,
		NEW.vl_custo_operacional_calc,
		NEW.vl_liberado_material_fat,
		OLD.vl_liberado_material_fat,
		OLD.vl_liberado_co_fat,
		NEW.vl_liberado_co_fat,
		NEW.vl_liberado_hi_fat,
		OLD.vl_liberado_hi_fat,
		NEW.vl_glosa_material_fat,
		OLD.vl_glosa_material_fat,
		NEW.vl_glosa_hi_fat,
		OLD.vl_glosa_hi_fat,
		OLD.vl_glosa_co_fat,
		NEW.vl_glosa_co_fat,
		NEW.vl_taxa_servico,
		OLD.vl_taxa_servico,
		NEW.vl_taxa_co,
		OLD.vl_taxa_co,
		OLD.vl_taxa_material,
		NEW.vl_taxa_material,
		NEW.vl_lib_taxa_co,
		OLD.vl_lib_taxa_co,
		OLD.vl_lib_taxa_material,
		NEW.vl_lib_taxa_material,
		NEW.vl_lib_taxa_servico,
		OLD.vl_lib_taxa_servico,
		OLD.vl_glosa_taxa_co,
		NEW.vl_glosa_taxa_co,
		OLD.vl_glosa_taxa_material,
		NEW.vl_glosa_taxa_material,
		NEW.vl_glosa_taxa_servico,
		OLD.vl_glosa_taxa_servico,
		NEW.nr_seq_lote_fat,
		OLD.nr_seq_lote_fat,
		NEW.nr_seq_evento_fat,
		OLD.nr_seq_evento_fat
	;

end if;

if	(NEW.vl_beneficiario != (coalesce(NEW.vl_medico,0) + coalesce(NEW.vl_custo_operacional,0) + coalesce(NEW.vl_materiais,0) + coalesce(NEW.vl_lib_taxa_servico,0) + coalesce(NEW.vl_lib_taxa_co,0) + coalesce(NEW.vl_lib_taxa_material,0))) and
	((NEW.vl_beneficiario != OLD.vl_beneficiario) or
	((coalesce(NEW.vl_medico,0) + coalesce(NEW.vl_custo_operacional,0) + coalesce(NEW.vl_materiais,0) + coalesce(NEW.vl_lib_taxa_servico,0) + coalesce(NEW.vl_lib_taxa_co,0) + coalesce(NEW.vl_lib_taxa_material,0)) !=
	(coalesce(OLD.vl_medico,0) + coalesce(OLD.vl_custo_operacional,0) + coalesce(OLD.vl_materiais,0) + coalesce(OLD.vl_lib_taxa_servico,0) + coalesce(OLD.vl_lib_taxa_co,0) + coalesce(OLD.vl_lib_taxa_material,0)))) and (NEW.vl_beneficiario 		> 0)   and (NEW.ie_status_faturamento	= 'L') then
	BEGIN
	insert	into pls_conta_pos_estab_log(nr_sequencia,
		vl_beneficiario,
		vl_beneficiario_old,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_conta,
		nr_seq_conta_mat,
		nr_seq_conta_proc,
		ds_log,
		vl_provisao_old,
		vl_provisao,
		vl_custo_operacional_old,
		vl_custo_operacional,
		vl_materiais_old,
		vl_materiais,
		vl_administracao,
		tx_administracao,
		vl_medico_old,
		vl_medico,
		vl_calculado_old,
		vl_calculado,
		vl_medico_calc,
		vl_medico_calc_old,
		vl_materiais_calc,
		vl_materiais_calc_old,
		vl_custo_operacional_calc_old,
		vl_custo_operacional_calc,
		vl_liberado_material_fat,
		vl_liberado_material_fat_old,
		vl_liberado_co_fat_old,
		vl_liberado_co_fat,
		vl_liberado_hi_fat,
		vl_liberado_hi_fat_old,
		vl_glosa_material_fat,
		vl_glosa_material_fat_old,
		vl_glosa_hi_fat,
		vl_glosa_hi_fat_old,
		vl_glosa_co_fat_old,
		vl_glosa_co_fat,
		vl_taxa_servico,
		vl_taxa_servico_old,
		vl_taxa_co,
		vl_taxa_co_old,
		vl_taxa_material_old,
		vl_taxa_material,
		vl_lib_taxa_co,
		vl_lib_taxa_co_old,
		vl_lib_taxa_material_old,
		vl_lib_taxa_material,
		vl_lib_taxa_servico,
		vl_lib_taxa_servico_old,
		vl_glosa_taxa_co_old,
		vl_glosa_taxa_co,
		vl_glosa_taxa_material_old,
		vl_glosa_taxa_material,
		vl_glosa_taxa_servico,
		vl_glosa_taxa_servico_old,
		nr_seq_lote_fat,
		nr_seq_lote_fat_old,
		nr_seq_evento_fat,
		nr_seq_evento_fat_old)
	SELECT	nextval('pls_conta_pos_estab_log_seq'),
		NEW.vl_beneficiario,
		OLD.vl_beneficiario,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		NEW.nr_seq_conta,
		NEW.nr_seq_conta_mat,
		NEW.nr_seq_conta_proc,
		'Valor divergente '||dbms_utility.format_call_stack,
		OLD.vl_provisao,
		NEW.vl_provisao,
		OLD.vl_custo_operacional,
		NEW.vl_custo_operacional,
		OLD.vl_materiais,
		NEW.vl_materiais,
		NEW.vl_administracao,
		NEW.tx_administracao,
		OLD.vl_medico,
		NEW.vl_medico,
		OLD.vl_calculado,
		NEW.vl_calculado,
		NEW.vl_medico_calc,
		OLD.vl_medico_calc,
		NEW.vl_materiais_calc,
		OLD.vl_materiais_calc,
		OLD.vl_custo_operacional_calc,
		NEW.vl_custo_operacional_calc,
		NEW.vl_liberado_material_fat,
		OLD.vl_liberado_material_fat,
		OLD.vl_liberado_co_fat,
		NEW.vl_liberado_co_fat,
		NEW.vl_liberado_hi_fat,
		OLD.vl_liberado_hi_fat,
		NEW.vl_glosa_material_fat,
		OLD.vl_glosa_material_fat,
		NEW.vl_glosa_hi_fat,
		OLD.vl_glosa_hi_fat,
		OLD.vl_glosa_co_fat,
		NEW.vl_glosa_co_fat,
		NEW.vl_taxa_servico,
		OLD.vl_taxa_servico,
		NEW.vl_taxa_co,
		OLD.vl_taxa_co,
		OLD.vl_taxa_material,
		NEW.vl_taxa_material,
		NEW.vl_lib_taxa_co,
		OLD.vl_lib_taxa_co,
		OLD.vl_lib_taxa_material,
		NEW.vl_lib_taxa_material,
		NEW.vl_lib_taxa_servico,
		OLD.vl_lib_taxa_servico,
		OLD.vl_glosa_taxa_co,
		NEW.vl_glosa_taxa_co,
		OLD.vl_glosa_taxa_material,
		NEW.vl_glosa_taxa_material,
		NEW.vl_glosa_taxa_servico,
		OLD.vl_glosa_taxa_servico,
		NEW.nr_seq_lote_fat,
		OLD.nr_seq_lote_fat,
		NEW.nr_seq_evento_fat,
		OLD.nr_seq_evento_fat
	;
	end;
end if;


if (coalesce(NEW.qt_item,0) = 0) then
	BEGIN
	insert	into pls_conta_pos_estab_log(nr_sequencia,
		vl_beneficiario,
		vl_beneficiario_old,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_conta,
		nr_seq_conta_mat,
		nr_seq_conta_proc,
		ds_log,
		vl_provisao_old,
		vl_provisao,
		vl_custo_operacional_old,
		vl_custo_operacional,
		vl_materiais_old,
		vl_materiais,
		vl_administracao,
		tx_administracao,
		vl_medico_old,
		vl_medico,
		vl_calculado_old,
		vl_calculado,
		vl_medico_calc,
		vl_medico_calc_old,
		vl_materiais_calc,
		vl_materiais_calc_old,
		vl_custo_operacional_calc_old,
		vl_custo_operacional_calc,
		vl_liberado_material_fat,
		vl_liberado_material_fat_old,
		vl_liberado_co_fat_old,
		vl_liberado_co_fat,
		vl_liberado_hi_fat,
		vl_liberado_hi_fat_old,
		vl_glosa_material_fat,
		vl_glosa_material_fat_old,
		vl_glosa_hi_fat,
		vl_glosa_hi_fat_old,
		vl_glosa_co_fat_old,
		vl_glosa_co_fat,
		vl_taxa_servico,
		vl_taxa_servico_old,
		vl_taxa_co,
		vl_taxa_co_old,
		vl_taxa_material_old,
		vl_taxa_material,
		vl_lib_taxa_co,
		vl_lib_taxa_co_old,
		vl_lib_taxa_material_old,
		vl_lib_taxa_material,
		vl_lib_taxa_servico,
		vl_lib_taxa_servico_old,
		vl_glosa_taxa_co_old,
		vl_glosa_taxa_co,
		vl_glosa_taxa_material_old,
		vl_glosa_taxa_material,
		vl_glosa_taxa_servico,
		vl_glosa_taxa_servico_old,
		nr_seq_lote_fat,
		nr_seq_lote_fat_old,
		nr_seq_evento_fat,
		nr_seq_evento_fat_old)
	SELECT	nextval('pls_conta_pos_estab_log_seq'),
		NEW.vl_beneficiario,
		OLD.vl_beneficiario,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		NEW.nr_seq_conta,
		NEW.nr_seq_conta_mat,
		NEW.nr_seq_conta_proc,
		'Quantidade do item zerado (qt_item anterior: '||OLD.qt_item||') - '||dbms_utility.format_call_stack,
		OLD.vl_provisao,
		NEW.vl_provisao,
		OLD.vl_custo_operacional,
		NEW.vl_custo_operacional,
		OLD.vl_materiais,
		NEW.vl_materiais,
		NEW.vl_administracao,
		NEW.tx_administracao,
		OLD.vl_medico,
		NEW.vl_medico,
		OLD.vl_calculado,
		NEW.vl_calculado,
		NEW.vl_medico_calc,
		OLD.vl_medico_calc,
		NEW.vl_materiais_calc,
		OLD.vl_materiais_calc,
		OLD.vl_custo_operacional_calc,
		NEW.vl_custo_operacional_calc,
		NEW.vl_liberado_material_fat,
		OLD.vl_liberado_material_fat,
		OLD.vl_liberado_co_fat,
		NEW.vl_liberado_co_fat,
		NEW.vl_liberado_hi_fat,
		OLD.vl_liberado_hi_fat,
		NEW.vl_glosa_material_fat,
		OLD.vl_glosa_material_fat,
		NEW.vl_glosa_hi_fat,
		OLD.vl_glosa_hi_fat,
		OLD.vl_glosa_co_fat,
		NEW.vl_glosa_co_fat,
		NEW.vl_taxa_servico,
		OLD.vl_taxa_servico,
		NEW.vl_taxa_co,
		OLD.vl_taxa_co,
		OLD.vl_taxa_material,
		NEW.vl_taxa_material,
		NEW.vl_lib_taxa_co,
		OLD.vl_lib_taxa_co,
		OLD.vl_lib_taxa_material,
		NEW.vl_lib_taxa_material,
		NEW.vl_lib_taxa_servico,
		OLD.vl_lib_taxa_servico,
		OLD.vl_glosa_taxa_co,
		NEW.vl_glosa_taxa_co,
		OLD.vl_glosa_taxa_material,
		NEW.vl_glosa_taxa_material,
		NEW.vl_glosa_taxa_servico,
		OLD.vl_glosa_taxa_servico,
		NEW.nr_seq_lote_fat,
		OLD.nr_seq_lote_fat,
		NEW.nr_seq_evento_fat,
		OLD.nr_seq_evento_fat
	;
	end;
end if;



if (coalesce(NEW.vl_beneficiario,0) = 0) and (coalesce(NEW.ie_status_faturamento,'L') = 'L') then
	BEGIN
	NEW.ie_status_faturamento	:= 'N';
	end;
end if;

-- tratamento para o pos estabelecido com base no A520. Quando for gerado.

-- se estiver atualizado e o antigo e 'A', deve permanecer 'A'.

if (coalesce(wheb_usuario_pck.get_ie_executar_trigger,'S') = 'S') and (TG_OP = 'UPDATE') and (coalesce(OLD.ie_status_faturamento,'L')	= 'A') then
	
	NEW.ie_status_faturamento := 'A'; -- Fixo 'A', para nao emitir cobranca no A520
end if;


if (coalesce(wheb_usuario_pck.get_ie_executar_trigger,'S') = 'S') and (TG_OP = 'UPDATE') and (coalesce(OLD.ie_cobrar_mensalidade,'L')	= 'A') then
	
	NEW.ie_cobrar_mensalidade := 'A'; -- Fixo 'A', para nao emitir cobranca no A520
end if;	

if (TG_OP = 'UPDATE') and (coalesce(OLD.ie_status_faturamento,'L')	!= coalesce(NEW.ie_status_faturamento,'L')) then
	BEGIN
	insert 	into	pls_log_pos_estabelecido(nr_sequencia, dt_atualizacao,	nm_usuario,
						  dt_atualizacao_nrec, nm_usuario_nrec, ie_status_faturamento_ant,
						  ie_status_faturamento_new, nr_seq_conta, nr_seq_conta_pos, ie_tipo_registro,
						  ds_log)
		values (nextval('pls_log_pos_estabelecido_seq'),LOCALTIMESTAMP,NEW.nm_usuario,
						 LOCALTIMESTAMP, NEW.nm_usuario, OLD.ie_status_faturamento,
						  NEW.ie_status_faturamento, NEW.nr_seq_conta, NEW.nr_sequencia, 'H',
						  dbms_utility.format_call_stack) returning nr_sequencia into nr_seq_log_pos_estab_w;

	-- Contabilidade instantanea

	select	coalesce(max(ie_concil_contab), 'N')
	into STRICT	ie_concil_contab_w
	from	pls_visible_false;

	if (ie_concil_contab_w = 'S') then
		CALL pls_ctb_onl_gravar_movto_pck.gravar_movto_pos_estab_update(	NEW.nr_sequencia,
										NEW.nr_seq_conta,
										nr_seq_log_pos_estab_w,
										coalesce(NEW.nr_seq_conta_rec, 0),
										NEW.ie_situacao,
										NEW.ie_status_faturamento, 
										coalesce(wheb_usuario_pck.get_nm_usuario, NEW.nm_usuario));
	end if;

	end;
end if;


RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pls_conta_pos_estab_atual() FROM PUBLIC;

CREATE TRIGGER pls_conta_pos_estab_atual
	BEFORE INSERT OR UPDATE ON pls_conta_pos_estabelecido FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pls_conta_pos_estab_atual();

