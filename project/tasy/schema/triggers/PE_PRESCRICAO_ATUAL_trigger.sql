-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pe_prescricao_atual ON pe_prescricao CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pe_prescricao_atual() RETURNS trigger AS $BODY$
declare
qt_reg_w				smallint;
dt_inicio_prescricao_w	timestamp;
ie_hora_w				varchar(10);
ie_estender_w			varchar(10);
ie_prox_hor_w			varchar(10);
dt_rep_pt_w				timestamp;
dt_rep_pt2_w			timestamp;
dt_prim_setor_w			timestamp;
ie_sepse_lib_sae_w		varchar(1);
ie_liberado_modelo_w 	varchar(1);
qt_evento_w				bigint;
reg_integracao_p		gerar_int_padrao.reg_integracao;
cd_pessoa_fisica_w		atendimento_paciente.cd_pessoa_fisica%type;
dt_validade_prescr_w 	timestamp;
dt_inicio_prescr_w		timestamp;
qt_horas_validade_w		bigint;
ie_quest_alt_hor_sae_w	varchar(10);
BEGIN
  BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

if (NEW.cd_setor_atendimento is null) and (NEW.nr_atendimento is not null)then
	
	NEW.cd_setor_atendimento	:= obter_setor_Atendimento(NEW.nr_atendimento);
end if;

if (coalesce(OLD.DT_PRESCRICAO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_PRESCRICAO) and (NEW.DT_PRESCRICAO is not null) then
	NEW.ds_utc		:= obter_data_utc(NEW.DT_PRESCRICAO, 'HV');	
end if;

if (coalesce(OLD.DT_LIBERACAO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_LIBERACAO) and (NEW.DT_LIBERACAO is not null) then
	NEW.ds_utc_atualizacao	:= obter_data_utc(NEW.DT_LIBERACAO,'HV');
end if;

if (NEW.nr_seq_modelo is not null) and (NEW.dt_liberacao is null) then

	select max(Obter_se_modelo_SAE_lib(NEW.nr_seq_modelo,NEW.cd_pessoa_fisica, NEW.nr_atendimento))
	into STRICT   ie_liberado_modelo_w
	;
	
	if ( ie_liberado_modelo_w = 'N') then
		-- Nao e possivel continuar esta acao pois o Modelo "#@DS_MODELO#@" nao esta liberado para este Perfil/Paciente.

		CALL Wheb_mensagem_pck.exibir_mensagem_abort( 261365 , 'DS_MODELO='|| substr(obter_desc_mod_sae(NEW.nr_seq_modelo),1,255));
	end if;
	
end if;

select	max(HR_INICIO_PRESCRICAO_SAE)
into STRICT	dt_inicio_prescricao_w
from	setor_atendimento
where	cd_setor_atendimento	= NEW.cd_setor_atendimento;

if (NEW.DT_PRIMEIRO_HORARIO	is null) then
	ie_hora_w	:= obter_valor_param_usuario(281,388, obter_perfil_ativo, NEW.nm_usuario, 0);
	ie_prox_hor_w	:= obter_valor_param_usuario(281,782, obter_perfil_ativo, NEW.nm_usuario, 0);
	if (ie_hora_w	= '1') and (dt_inicio_prescricao_w	is not null) then
		NEW.DT_PRIMEIRO_HORARIO	:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(NEW.dt_prescricao, dt_inicio_prescricao_w);
		if (NEW.DT_PRIMEIRO_HORARIO	< LOCALTIMESTAMP) and (ie_prox_hor_w	= 'S') then
			NEW.DT_PRIMEIRO_HORARIO	:= trunc(NEW.dt_prescricao,'hh24') + 1/24;
		end if;
	elsif (ie_hora_w	= '2') then
		NEW.DT_PRIMEIRO_HORARIO	:= trunc(NEW.dt_prescricao,'hh24') + 1/24;
	end if;
end if;

NEW.QT_HORAS_VALIDADE	:= coalesce(NEW.QT_HORAS_VALIDADE,24);

dt_validade_prescr_w := NEW.dt_validade_prescr;
dt_inicio_prescr_w   := NEW.dt_inicio_prescr;
qt_horas_validade_w  := NEW.qt_horas_validade;

select coalesce(max(ie_quest_alt_hor_sae), 'N')
into STRICT ie_quest_alt_hor_sae_w
from parametro_medico
where cd_estabelecimento = obter_estabelecimento_ativo;

SELECT * FROM calculo_horas_prescr_validade(NEW.ie_agora, NEW.nm_usuario, qt_horas_validade_w, dt_inicio_prescr_w, NEW.nr_atendimento, NEW.dt_prescricao, NEW.nr_sequencia, dt_validade_prescr_w, NEW.cd_setor_atendimento, NEW.dt_primeiro_horario) INTO STRICT qt_horas_validade_w, dt_inicio_prescr_w, dt_validade_prescr_w;

if (ie_quest_alt_hor_sae_w = 'S') then
	if (NEW.dt_validade_prescr is null) then
		NEW.dt_validade_prescr := dt_validade_prescr_w;
	end if;
	if (NEW.dt_inicio_prescr is null) then
		NEW.dt_inicio_prescr   := dt_inicio_prescr_w;
	end if;
	if (NEW.qt_horas_validade is null) then
		NEW.qt_horas_validade  := qt_horas_validade_w;
	end if;
else
	NEW.dt_validade_prescr := dt_validade_prescr_w;
	NEW.dt_inicio_prescr   := dt_inicio_prescr_w;
	NEW.qt_horas_validade  := qt_horas_validade_w;
end if;

select	max(hr_inicio_prescricao)
into STRICT	dt_prim_setor_w
from	setor_atendimento
where	cd_setor_atendimento = NEW.cd_setor_atendimento;

if (dt_prim_setor_w is not null) then

	dt_rep_pt_w		:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(NEW.dt_inicio_prescr,NEW.dt_prescricao));

	dt_prim_setor_w		:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(coalesce(NEW.dt_inicio_prescr,NEW.dt_prescricao), dt_prim_setor_w);

	if (coalesce(NEW.dt_inicio_prescr,NEW.dt_prescricao)	< dt_prim_setor_w) then
		dt_rep_pt_w	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(NEW.dt_inicio_prescr,NEW.dt_prescricao) - 1);
	end if;

	if (NEW.qt_horas_validade	> 24) then
		
		dt_rep_pt2_w	:= (dt_rep_pt_w + 1);
		
	else
		dt_rep_pt2_w	:= null;
	end if;

	NEW.dt_rep_pt	:= dt_rep_pt_w;
	NEW.dt_rep_pt2	:= dt_rep_pt2_w;
else

	NEW.dt_rep_pt	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(NEW.dt_inicio_prescr,NEW.dt_prescricao));
	NEW.dt_rep_pt2	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(NEW.dt_validade_prescr,coalesce(NEW.dt_inicio_prescr,NEW.dt_prescricao)));

end if;


if (NEW.dt_liberacao is not null) and (OLD.dt_liberacao is null) and (NEW.nr_atendimento is not null) then
	
	BEGIN
		CALL gravar_agend_rothman(NEW.nr_atendimento,NEW.nr_sequencia,'SAE',NEW.nm_usuario);
	exception
	when others then
		null;
	end;
	
	BEGIN
	select	1
	into STRICT	qt_evento_w
	from	intpd_eventos
	where	ie_situacao	= 'A'
	and	ie_evento	= '406'  LIMIT 1;
	exception
	when others then
		qt_evento_w 	:= 0;
	end;
	
	if (qt_evento_w > 0) then
	
		select	max(cd_pessoa_fisica)
		into STRICT	cd_pessoa_fisica_w
		from	atendimento_paciente
		where	nr_atendimento	= NEW.nr_atendimento;
	
		reg_integracao_p.ie_operacao		:= 'I';	
		reg_integracao_p.cd_pessoa_fisica	:= cd_pessoa_fisica_w;
		reg_integracao_p.nr_atendimento		:= NEW.nr_atendimento;	

		reg_integracao_p  := gerar_int_padrao.gravar_integracao('406', NEW.nr_sequencia, NEW.nm_usuario, reg_integracao_p);
	
	end if;	
end if;

if (NEW.dt_inativacao is not null) and (OLD.dt_inativacao is null) and (NEW.nr_atendimento is not null) then
	
	BEGIN
	select	1
	into STRICT	qt_evento_w
	from	intpd_eventos
	where	ie_situacao	= 'A'
	and	ie_evento	= '406'  LIMIT 1;
	exception
	when others then
		qt_evento_w 	:= 0;
	end;
	
	if (qt_evento_w > 0) then
	
		select	max(cd_pessoa_fisica)
		into STRICT	cd_pessoa_fisica_w
		from	atendimento_paciente
		where	nr_atendimento	= NEW.nr_atendimento;
	
		reg_integracao_p.ie_operacao		:= 'E';	
		reg_integracao_p.cd_pessoa_fisica	:= cd_pessoa_fisica_w;
		reg_integracao_p.nr_atendimento		:= NEW.nr_atendimento;	

		reg_integracao_p  := gerar_int_padrao.gravar_integracao('406', NEW.nr_sequencia, NEW.nm_usuario, reg_integracao_p);
	
	end if;		
end if;

<<Final>>
qt_reg_w	:= 0;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pe_prescricao_atual() FROM PUBLIC;

CREATE TRIGGER pe_prescricao_atual
	BEFORE INSERT OR UPDATE ON pe_prescricao FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pe_prescricao_atual();

