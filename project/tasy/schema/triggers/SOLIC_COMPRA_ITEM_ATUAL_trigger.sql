-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS solic_compra_item_atual ON solic_compra_item CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_solic_compra_item_atual() RETURNS trigger AS $BODY$
declare

cd_estabelecimento_w	smallint;
cd_comprador_resp_w	varchar(10);
cd_perfil_w		integer;
cd_operacao_estoque_w	requisicao_material.cd_operacao_estoque%type;
cd_motivo_baixa_w		sup_motivo_baixa_req.nr_sequencia%type;
ds_erro_w		varchar(2000);
qt_pendentes_w		bigint;
nr_seq_motivo_cancel_w	solic_compra.nr_seq_motivo_cancel %type;
cd_comprador_w		comprador.cd_pessoa_fisica%type;
qt_registros_w		bigint;

BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then

	if (obter_bloq_canc_proj_rec(NEW.nr_seq_proj_rec) > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1144309);  -- Registro associado a um projeto bloqueado ou cancelado. 
	end if;

	select	cd_estabelecimento,
		cd_comprador_resp,
		nr_seq_motivo_cancel
	into STRICT	cd_estabelecimento_w,
		cd_comprador_resp_w,
		nr_seq_motivo_cancel_w
	from	solic_compra
	where	nr_solic_compra = NEW.nr_solic_compra;

	if (cd_comprador_resp_w is null) or (cd_comprador_resp_w = '') then	
		
		select	obter_comprador_material(NEW.cd_material, ie_urgente, cd_estabelecimento_w)
		into STRICT	cd_comprador_w
		from	solic_compra
		where	nr_solic_compra = NEW.nr_solic_compra;
		
		select	count(*)
		into STRICT	qt_registros_w
		from	comprador
		where	cd_estabelecimento = cd_estabelecimento_w
		and	cd_pessoa_fisica = cd_comprador_w;
		
		if (qt_registros_w > 0) then
			CALL compras_pck.set_is_sci_insert('S');
			CALL compras_pck.set_nr_seq_proj_rec(NEW.nr_seq_proj_rec);
		
			update	solic_compra
			set	cd_comprador_resp = cd_comprador_w
			where	nr_solic_compra = NEW.nr_solic_compra;
		end if;
	end if;

	cd_perfil_w	:= coalesce(obter_perfil_ativo,0);

	if (OLD.dt_autorizacao is null) and (NEW.dt_autorizacao is not null) and (cd_perfil_w > 0) then
		NEW.cd_perfil_aprov := cd_perfil_w;
	end if;

	if (OLD.dt_autorizacao is not null) and (NEW.dt_autorizacao is null) then
		NEW.cd_perfil_aprov := '';
	end if;

end if;

CALL compras_pck.set_nr_seq_proj_rec(null);
CALL compras_pck.set_is_sci_insert('N');

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_solic_compra_item_atual() FROM PUBLIC;

CREATE TRIGGER solic_compra_item_atual
	BEFORE UPDATE ON solic_compra_item FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_solic_compra_item_atual();

