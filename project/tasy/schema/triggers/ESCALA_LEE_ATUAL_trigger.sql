-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS escala_lee_atual ON escala_lee CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_escala_lee_atual() RETURNS trigger AS $BODY$
declare
  qt_reg_w           smallint;
  ie_tipo_w          varchar(10);
  nr_atendimento_w   bigint;
  cd_pessoa_fisica_w varchar(10);
  sql_w              varchar(200);
  qt_pontuacao_w     bigint;
  ds_erro_w      varchar(4000);
  ds_parametro_w varchar(4000);
BEGIN
  BEGIN

  if (NEW.nr_hora is null) or (NEW.DT_AVALIACAO <> OLD.DT_AVALIACAO) then
	BEGIN
	  NEW.nr_hora := (to_char(round(NEW.DT_AVALIACAO,'hh24'),'hh24'))::numeric;
	end;
  end if;
  if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
  end if;

  /** Medical Device **/


  BEGIN
    sql_w := 'call obter_score_escala_lee_md(:1, :2, :3, :4, :5, :6) into :qt_pontuacao_w';
    EXECUTE sql_w using
      in NEW.ie_operacao_alto_risco,
      in NEW.ie_doenca_arterial,
      in NEW.ie_insuficiencia_cardiaca,
      in NEW.ie_doenca_cerebro,
      in NEW.ie_diabete,
      in NEW.ie_creatinina,
      out qt_pontuacao_w;
  exception
    when others then
	  qt_pontuacao_w := 0;
    ds_erro_w := sqlerrm;
    ds_parametro_w := ':new.nr_atendimento: ' || NEW.nr_atendimento || ' - :new.ie_situacao: ' || NEW.ie_situacao || ' - :new.cd_profissional: ' || NEW.cd_profissional;
    ds_parametro_w := ds_parametro_w || ' - :new.ie_operacao_alto_risco: ' || NEW.ie_operacao_alto_risco || ' - :new.ie_doenca_arterial: ' || NEW.ie_doenca_arterial || ' - :new.ie_insuficiencia_cardiaca: ' || NEW.ie_insuficiencia_cardiaca;
    ds_parametro_w := ds_parametro_w || ' - :new.ie_doenca_cerebro: ' || NEW.ie_doenca_cerebro || ' - :new.ie_diabete: ' || NEW.ie_diabete || ' - :new.ie_creatinina: ' || NEW.ie_creatinina || ' - qt_pontuacao_w: ' || qt_pontuacao_w;
    CALL gravar_log_medical_device('ESCALA_LEE_ATUAL', 'OBTER_SCORE_ESCALA_LEE_MD', ds_parametro_w, ds_erro_w, wheb_usuario_pck.get_nm_usuario, 'N');
  end;

  NEW.qt_pontuacao := qt_pontuacao_w;

  if (obter_funcao_ativa = 874) then
    select max(c.nr_atendimento),
           max(c.cd_pessoa_fisica)
      into STRICT nr_atendimento_w,
	       cd_pessoa_fisica_w
      from atendimento_paciente c
     where c.nr_atendimento = NEW.nr_atendimento;

    if (NEW.dt_liberacao is null) then
      ie_tipo_w := 'AEL';
    elsif (OLD.dt_liberacao is null) and (NEW.dt_liberacao is not null) then
      ie_tipo_w := 'XAEL';
	end if;

    if (ie_tipo_w	is not null) then
      CALL Gerar_registro_pendente_PEP(ie_tipo_w, NEW.nr_sequencia, cd_pessoa_fisica_w, nr_atendimento_w, NEW.nm_usuario);
    end if;
  end if;

  <<Final>>
  qt_reg_w := 0;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_escala_lee_atual() FROM PUBLIC;

CREATE TRIGGER escala_lee_atual
	BEFORE INSERT OR UPDATE ON escala_lee FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_escala_lee_atual();

