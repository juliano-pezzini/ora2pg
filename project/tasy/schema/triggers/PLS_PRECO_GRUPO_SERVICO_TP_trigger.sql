-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pls_preco_grupo_servico_tp ON pls_preco_grupo_servico CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pls_preco_grupo_servico_tp() RETURNS trigger AS $BODY$
DECLARE nr_seq_w bigint;ds_s_w   varchar(1);ds_c_w   varchar(1);ds_w	   varchar(1);ie_log_w varchar(1);BEGIN BEGIN ds_s_w := to_char(OLD.NR_SEQUENCIA);  ds_c_w:=null;SELECT * FROM gravar_log_alteracao(substr(OLD.IE_REGRA_PRECO,1,4000), substr(NEW.IE_REGRA_PRECO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_REGRA_PRECO', ie_log_w, ds_w, 'PLS_PRECO_GRUPO_SERVICO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_JUSTIFICATIVA_AUTOMATICA,1,4000), substr(NEW.IE_JUSTIFICATIVA_AUTOMATICA,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_JUSTIFICATIVA_AUTOMATICA', ie_log_w, ds_w, 'PLS_PRECO_GRUPO_SERVICO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_OC_CONTA_MEDICA,1,4000), substr(NEW.IE_OC_CONTA_MEDICA,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_OC_CONTA_MEDICA', ie_log_w, ds_w, 'PLS_PRECO_GRUPO_SERVICO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_OC_CONTA_MEDICA_WEB,1,4000), substr(NEW.IE_OC_CONTA_MEDICA_WEB,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_OC_CONTA_MEDICA_WEB', ie_log_w, ds_w, 'PLS_PRECO_GRUPO_SERVICO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_TIPO_GUIA,1,4000), substr(NEW.IE_TIPO_GUIA,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_TIPO_GUIA', ie_log_w, ds_w, 'PLS_PRECO_GRUPO_SERVICO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_QTD_EXECUCAO,1,4000), substr(NEW.IE_QTD_EXECUCAO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_QTD_EXECUCAO', ie_log_w, ds_w, 'PLS_PRECO_GRUPO_SERVICO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_VIA_ACESSO_OBRIG,1,4000), substr(NEW.IE_VIA_ACESSO_OBRIG,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_VIA_ACESSO_OBRIG', ie_log_w, ds_w, 'PLS_PRECO_GRUPO_SERVICO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_LIB_VALOR_CONTA,1,4000), substr(NEW.IE_LIB_VALOR_CONTA,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_LIB_VALOR_CONTA', ie_log_w, ds_w, 'PLS_PRECO_GRUPO_SERVICO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_CAD_PRESTADOR,1,4000), substr(NEW.IE_CAD_PRESTADOR,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_CAD_PRESTADOR', ie_log_w, ds_w, 'PLS_PRECO_GRUPO_SERVICO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_TAXA_ADM,1,4000), substr(NEW.IE_TAXA_ADM,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_TAXA_ADM', ie_log_w, ds_w, 'PLS_PRECO_GRUPO_SERVICO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_COMPLEMENTO_GUIA,1,4000), substr(NEW.IE_COMPLEMENTO_GUIA,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_COMPLEMENTO_GUIA', ie_log_w, ds_w, 'PLS_PRECO_GRUPO_SERVICO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_REGRA_PROCEDIMENTO,1,4000), substr(NEW.IE_REGRA_PROCEDIMENTO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_REGRA_PROCEDIMENTO', ie_log_w, ds_w, 'PLS_PRECO_GRUPO_SERVICO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_GUIA_MEDICO,1,4000), substr(NEW.IE_GUIA_MEDICO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_GUIA_MEDICO', ie_log_w, ds_w, 'PLS_PRECO_GRUPO_SERVICO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_SITUACAO,1,4000), substr(NEW.IE_SITUACAO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_SITUACAO', ie_log_w, ds_w, 'PLS_PRECO_GRUPO_SERVICO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_GRUPO,1,4000), substr(NEW.DS_GRUPO,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_GRUPO', ie_log_w, ds_w, 'PLS_PRECO_GRUPO_SERVICO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_REGRA_COLETA,1,4000), substr(NEW.IE_REGRA_COLETA,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_REGRA_COLETA', ie_log_w, ds_w, 'PLS_PRECO_GRUPO_SERVICO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_AUTOGERADO,1,4000), substr(NEW.IE_AUTOGERADO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_AUTOGERADO', ie_log_w, ds_w, 'PLS_PRECO_GRUPO_SERVICO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_COBERTURA_CONTRATO,1,4000), substr(NEW.IE_COBERTURA_CONTRATO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_COBERTURA_CONTRATO', ie_log_w, ds_w, 'PLS_PRECO_GRUPO_SERVICO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DT_REFERENCIA,1,4000), substr(NEW.DT_REFERENCIA,1,4000), NEW.nm_usuario, nr_seq_w, 'DT_REFERENCIA', ie_log_w, ds_w, 'PLS_PRECO_GRUPO_SERVICO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_VIA_ACESSO_PROCEDIMENTO,1,4000), substr(NEW.IE_VIA_ACESSO_PROCEDIMENTO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_VIA_ACESSO_PROCEDIMENTO', ie_log_w, ds_w, 'PLS_PRECO_GRUPO_SERVICO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_ITEM_ASSISTENCIAL_SIP,1,4000), substr(NEW.IE_ITEM_ASSISTENCIAL_SIP,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_ITEM_ASSISTENCIAL_SIP', ie_log_w, ds_w, 'PLS_PRECO_GRUPO_SERVICO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_CRITERIO_HORARIO,1,4000), substr(NEW.IE_CRITERIO_HORARIO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_CRITERIO_HORARIO', ie_log_w, ds_w, 'PLS_PRECO_GRUPO_SERVICO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;   exception when others then ds_w:= '1'; end;   END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pls_preco_grupo_servico_tp() FROM PUBLIC;

CREATE TRIGGER pls_preco_grupo_servico_tp
	AFTER UPDATE ON pls_preco_grupo_servico FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pls_preco_grupo_servico_tp();

