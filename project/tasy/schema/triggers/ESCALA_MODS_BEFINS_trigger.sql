-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS escala_mods_befins ON escala_mods CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_escala_mods_befins() RETURNS trigger AS $BODY$
DECLARE
qt_reg_w	smallint;
BEGIN


if (NEW.nr_hora is null) or (NEW.DT_AVALIACAO <> OLD.DT_AVALIACAO) then
	BEGIN
	NEW.nr_hora	:= (to_char(round(NEW.DT_AVALIACAO,'hh24'),'hh24'))::numeric;
	end;
end if;
if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;
/* Pontuação relação Pa02/FiO2 */

if (NEW.qt_rel_pao2_fio2 is null) then
	NEW.qt_pto_resp:= 0;
elsif (NEW.qt_rel_pao2_fio2 > 300) then
	NEW.qt_pto_resp:= 0;
elsif (NEW.qt_rel_pao2_fio2 > 225) and (NEW.qt_rel_pao2_fio2 <= 300) then
	NEW.qt_pto_resp:= 1;
elsif (NEW.qt_rel_pao2_fio2 > 150) and (NEW.qt_rel_pao2_fio2 <= 225) then
	NEW.qt_pto_resp:= 2;
elsif (NEW.qt_rel_pao2_fio2 > 75) and (NEW.qt_rel_pao2_fio2 <= 150) then
	NEW.qt_pto_resp:= 3;
elsif (NEW.qt_rel_pao2_fio2 <= 75) then
	NEW.qt_pto_resp:= 4;
end if;

/* Pontuação Contagem de plaquetas multiplicar por 1000 */

if (NEW.qt_plaquetas is null) then
	NEW.qt_pto_coag:= 0;
elsif (NEW.qt_plaquetas > 120) then
	NEW.qt_pto_coag:= 0;
elsif (NEW.qt_plaquetas >= 81) and (NEW.qt_plaquetas <= 120) then
	NEW.qt_pto_coag:= 1;
elsif (NEW.qt_plaquetas >= 51) and (NEW.qt_plaquetas < 81) then
	NEW.qt_pto_coag:= 2;
elsif (NEW.qt_plaquetas >= 21) and (NEW.qt_plaquetas < 51) then
	NEW.qt_pto_coag:= 3;
elsif (NEW.qt_plaquetas <= 20) then
	NEW.qt_pto_coag:= 4;
end if;

/* Pontuação Bilirrubina sérica */

if (NEW.qt_bilirrubina_serica is null) then
	NEW.qt_pto_hepatica:= 0;
elsif (NEW.qt_bilirrubina_serica > 14) then
	NEW.qt_pto_hepatica:= 4;
elsif (NEW.qt_bilirrubina_serica > 7) and (NEW.qt_bilirrubina_serica <= 14) then
	NEW.qt_pto_hepatica:= 3;
elsif (NEW.qt_bilirrubina_serica > 3.5) and (NEW.qt_bilirrubina_serica <= 7) then
	NEW.qt_pto_hepatica:= 2;
elsif (NEW.qt_bilirrubina_serica > 1.2) and (NEW.qt_bilirrubina_serica <= 3.5) then
	NEW.qt_pto_hepatica:= 1;
elsif (NEW.qt_bilirrubina_serica < 1.2) then
	NEW.qt_pto_hepatica:= 0;
end if;


/* Pontuação para Cardiovascular */

if (NEW.qt_pa_diastolica is not null) and (NEW.qt_pa_sistolica is not null) then
	NEW.qt_pam:= coalesce(dividir((NEW.qt_pa_sistolica + (NEW.qt_pa_diastolica * 2)), 3),0);
end if;

if (NEW.qt_freq_cardiaca is not null) and (NEW.qt_pvc is not null) and (NEW.qt_pam is not null) then
	NEW.qt_pa_ajustada:= coalesce(dividir((NEW.qt_freq_cardiaca * NEW.qt_pvc), NEW.qt_pam),0);
end if;

if (NEW.qt_pa_ajustada is null) then
	NEW.qt_pto_cardio:= 0;
elsif (NEW.qt_pa_ajustada > 30) then
	NEW.qt_pto_cardio:= 4;
elsif (NEW.qt_pa_ajustada > 20) and (NEW.qt_pa_ajustada <= 30) then
	NEW.qt_pto_cardio:= 3;
elsif (NEW.qt_pa_ajustada > 15) and (NEW.qt_pa_ajustada <= 20) then
	NEW.qt_pto_cardio:= 2;
elsif (NEW.qt_pa_ajustada > 10) and (NEW.qt_pa_ajustada <= 15) then
	NEW.qt_pto_cardio:= 1;
elsif (NEW.qt_pa_ajustada <= 10) then
	NEW.qt_pto_cardio:= 0;
end if;

/* Pontuação Glasgow */

if (NEW.qt_glasgow is null) then
	NEW.qt_pto_snc:= 0;
elsif (NEW.qt_glasgow >= 15) then
	NEW.qt_pto_snc:= 0;
elsif (NEW.qt_glasgow >= 13) and (NEW.qt_glasgow < 15) then
	NEW.qt_pto_snc:= 1;
elsif (NEW.qt_glasgow >= 10) and (NEW.qt_glasgow < 13) then
	NEW.qt_pto_snc:= 2;
elsif (NEW.qt_glasgow >= 7) and (NEW.qt_glasgow < 10) then
	NEW.qt_pto_snc:= 3;
elsif (NEW.qt_glasgow <= 6) then
	NEW.qt_pto_snc:= 4;
end if;

/* Pontuação Creatinina Sérica */

if (NEW.qt_creatinina_serica is null) then
	NEW.qt_pto_renal:= 0;
elsif (NEW.qt_creatinina_serica > 5.7) then
	NEW.qt_pto_renal:= 4;
elsif (NEW.qt_creatinina_serica > 4) and (NEW.qt_creatinina_serica <= 5.7) then
	NEW.qt_pto_renal:= 3;
elsif (NEW.qt_creatinina_serica > 2.3) and (NEW.qt_creatinina_serica <= 4) then
	NEW.qt_pto_renal:= 2;
elsif (NEW.qt_creatinina_serica > 1.1) and (NEW.qt_creatinina_serica <= 2.3) then
	NEW.qt_pto_renal:= 1;
elsif (NEW.qt_creatinina_serica <= 1.1) then
	NEW.qt_pto_renal:= 0;
end if;

/* Obter a pontuação total */

NEW.qt_pontuacao:= coalesce(NEW.qt_pto_resp,0)	+ coalesce(NEW.qt_pto_coag,0)	+ coalesce(NEW.qt_pto_hepatica,0) +
		    coalesce(NEW.qt_pto_cardio,0)	+ coalesce(NEW.qt_pto_snc,0)	+ coalesce(NEW.qt_pto_renal,0);

/* Percentual de mortalidade */

if (NEW.qt_pontuacao = 0) then
	NEW.pr_mortalidade_uti:= 0;
	NEW.pr_mortalidade:= 0;
	NEW.qt_dias:= 2;
elsif (NEW.qt_pontuacao >= 1) and (NEW.qt_pontuacao <= 2) then
	NEW.pr_mortalidade_uti:= 1;
	NEW.pr_mortalidade:= 7;
	NEW.qt_dias:= 3;
elsif (NEW.qt_pontuacao >= 3) and (NEW.qt_pontuacao <= 4) then
	NEW.pr_mortalidade_uti:= 2;
	NEW.pr_mortalidade:= 7;
	NEW.qt_dias:= 3;
elsif (NEW.qt_pontuacao = 5) then
	NEW.pr_mortalidade_uti:= 3;
	NEW.pr_mortalidade:= 16;
	NEW.qt_dias:= 6;
elsif (NEW.qt_pontuacao >= 6) and (NEW.qt_pontuacao <= 7) then
	NEW.pr_mortalidade_uti:= 4;
	NEW.pr_mortalidade:= 16;
	NEW.qt_dias:= 6;
elsif (NEW.qt_pontuacao = 8) then
	NEW.pr_mortalidade_uti:= 5;
	NEW.pr_mortalidade:= 16;
	NEW.qt_dias:= 6;
elsif (NEW.qt_pontuacao >= 9) and (NEW.qt_pontuacao <= 12) then
	NEW.pr_mortalidade_uti:= 25;
	NEW.pr_mortalidade:= 50;
	NEW.qt_dias:= 10;
elsif (NEW.qt_pontuacao >= 13) and (NEW.qt_pontuacao <= 16) then
	NEW.pr_mortalidade_uti:= 50;
	NEW.pr_mortalidade:= 70;
	NEW.qt_dias:= 17;
elsif (NEW.qt_pontuacao >= 17) and (NEW.qt_pontuacao <= 20) then
	NEW.pr_mortalidade_uti:= 75;
	NEW.pr_mortalidade:= 82;
	NEW.qt_dias:= 21;
elsif (NEW.qt_pontuacao >= 21) and (NEW.qt_pontuacao <= 24) then
	NEW.pr_mortalidade_uti:= 100;
	NEW.pr_mortalidade:= 100;
	NEW.qt_dias:= null;
end if;

<<Final>>
qt_reg_w	:= 0;

RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_escala_mods_befins() FROM PUBLIC;

CREATE TRIGGER escala_mods_befins
	BEFORE INSERT OR UPDATE ON escala_mods FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_escala_mods_befins();

