-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS hd_dializador_before_update ON hd_dializador CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_hd_dializador_before_update() RETURNS trigger AS $BODY$
declare
dt_fim_w	timestamp;
BEGIN
if (NEW.ie_status is not null) and (OLD.ie_status is not null) and (NEW.ie_status <> OLD.ie_status) then
	NEW.ie_status_ant := NEW.ie_status;
end if;

if (NEW.ie_status = 'O') then
	select  max(dt_fim)
	into STRICT	dt_fim_w
	from	hd_dialisador_reproc a
	where	a.nr_sequencia = (SELECT max(b.nr_sequencia)
				from    hd_dialisador_reproc b
				where   b.nr_seq_dialisador = NEW.nr_sequencia
				and	coalesce(a.ie_situacao,'S') <> 'I')
	and	coalesce(a.ie_situacao,'S') <> 'I';


	if (dt_fim_w is null) then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(222465);

	end if;
end if;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_hd_dializador_before_update() FROM PUBLIC;

CREATE TRIGGER hd_dializador_before_update
	BEFORE UPDATE ON hd_dializador FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_hd_dializador_before_update();

