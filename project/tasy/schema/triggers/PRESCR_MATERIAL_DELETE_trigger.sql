-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS prescr_material_delete ON prescr_material CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_prescr_material_delete() RETURNS trigger AS $BODY$
DECLARE
	
ds_module_log_w			varchar(255);
ie_log_incl_excl_w		varchar(01) := 'N';
nr_atendimento_w		bigint;
cd_setor_atend_w		integer;
dt_entrada_unid_w		timestamp;
nr_cirurgia_w			bigint;
ds_mensagem_w			varchar(255);
ie_reg_alter_medico_farm_w	varchar(1);
ie_registra_alter_medico_w	varchar(1);
ds_call_stack_w			varchar(2000);
ie_tipo_item_w			varchar(20);
cd_pessoa_fisica_w		varchar(10);
BEGIN
  BEGIN
BEGIN
ie_log_incl_excl_w	:= coalesce(obter_valor_param_usuario(900, 205, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento),'N');
exception
when others then
	ie_log_incl_excl_w	:= 'N';
end;


BEGIN
update	material_autorizado
set	nr_prescricao 	 = NULL,
	nr_seq_prescricao  = NULL,
	dt_atualizacao 	= LOCALTIMESTAMP,
	nm_usuario	= OLD.nm_usuario
where	nr_prescricao 	= OLD.nr_prescricao
and	nr_seq_prescricao = OLD.nr_sequencia;
exception
when others then
	null;
end;

if (ie_log_incl_excl_w = 'S') then
	BEGIN
	BEGIN
	select	substr(max(module||' - ' || machine||' - ' || program|| ' - ' || osuser|| ' - ' || terminal),1,255)			
	into STRICT	ds_module_log_w		
	from	v$session
	where	audsid = (SELECT userenv('sessionid') );
	
BEGIN	
	select	max(nr_cirurgia)
	into STRICT	nr_cirurgia_w
	from	cirurgia
	where	nr_prescricao = OLD.nr_prescricao;
	
	if (nr_cirurgia_w is null) then
		select	nr_cirurgia
		into STRICT	nr_cirurgia_w
		from	prescr_medica
		where	nr_prescricao = OLD.nr_prescricao;
	end if;
	
exception
when others then
	null;
end;

BEGIN	
	delete
	  from alerta_api 
	 where nr_prescricao = OLD.nr_prescricao
	   and nr_seq_material = OLD.nr_sequencia;
exception
when others then
	null;
end;

ds_call_stack_w	:= substr(dbms_utility.format_call_stack,1,1800);
	
insert	into mat_atend_pac_log(
	nr_sequencia,
	nr_seq_mat,
	dt_atualizacao,	
	nm_usuario,
	ds_module,
	nr_atendimento,
	cd_material,
	ie_acao,
	qt_material,
	cd_perfil,
	cd_funcao,
	cd_setor_atendimento,
	dt_entrada_unidade,
	nr_prescricao,
	cd_local_estoque,
	nr_seq_kit_estoque,
	cd_material_kit,
	nr_cirurgia,
	ds_call_stack)
values (nextval('mat_atend_pac_log_seq'),
	OLD.nr_sequencia,
	LOCALTIMESTAMP,
	wheb_usuario_pck.get_nm_usuario,
	ds_module_log_w,
	nr_atendimento_w,
	OLD.cd_material,
	'E',
	OLD.qt_material,
	obter_perfil_ativo,
	obter_funcao_ativa,
	null,
	null,
	OLD.nr_prescricao,
	OLD.cd_local_estoque,
	OLD.nr_seq_kit_estoque,
	OLD.cd_kit_material,
	nr_cirurgia_w,
	ds_call_stack_w);
	end;
	
	exception when others then
		null;
	end;
	
end if;	

if (OLD.ie_agrupador = 1) then
	ie_tipo_item_w	:= 'M';
elsif (OLD.ie_agrupador = 2) then
	ie_tipo_item_w	:= 'MAT';
elsif (OLD.ie_agrupador = 8) then
	ie_tipo_item_w	:= 'SNE';
elsif (OLD.ie_agrupador = 4) then
	ie_tipo_item_w	:= 'SOL';
elsif (OLD.ie_agrupador = 12) then
	ie_tipo_item_w	:= 'S';
elsif (OLD.ie_agrupador = 16) then
	ie_tipo_item_w	:= 'LD';	
end if;

CALL atualizar_prescr_del_cih(OLD.nr_prescricao, OLD.nr_sequencia, OLD.nr_prescricao_anterior);

CALL Atualizar_plt_controle(OLD.nm_usuario, null, null, ie_tipo_item_w, 'S', OLD.nr_prescricao);

  END;
RETURN OLD;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_prescr_material_delete() FROM PUBLIC;

CREATE TRIGGER prescr_material_delete
	BEFORE DELETE ON prescr_material FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_prescr_material_delete();

