-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS prescr_mat_alteracao_insert ON prescr_mat_alteracao CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_prescr_mat_alteracao_insert() RETURNS trigger AS $BODY$
declare
pragma autonomous_transaction;	

cd_setor_atendimento_w		bigint;
nr_seq_atend_w				bigint;
nr_seq_tipo_w				bigint;
cd_perfil_w					integer;
ie_perda_ganho_dt_evento_w	varchar(1);

c01 CURSOR FOR
SELECT	nr_seq_tipo
from	prescr_dieta_perda_ganho
where	CASE WHEN ie_evento='AD' THEN 3  ELSE null END  = NEW.ie_alteracao
and ('D' = NEW.ie_tipo_item or
'DE' = NEW.ie_tipo_item);
BEGIN
  BEGIN

ie_perda_ganho_dt_evento_w := Obter_Param_Usuario(1113, 690, obter_perfil_ativo, NEW.nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_perda_ganho_dt_evento_w);

if (ie_perda_ganho_dt_evento_w = 'S') then

	update 	atendimento_perda_ganho
	set		dt_medida = NEW.dt_alteracao
	where 	nr_seq_horario 	= NEW.nr_seq_horario
	and		nr_atendimento 	= NEW.nr_atendimento;

end if;

CALL excluir_evento_duplicado(NEW.nr_prescricao, NEW.nr_seq_procedimento, NEW.nr_sequencia, NEW.dt_alteracao, NEW.ie_alteracao, NEW.ie_tipo_item);

if (NEW.dt_horario_acao is null) then

	BEGIN	
		if (NEW.dt_hor_acm_sn is not null) then
			NEW.dt_horario_acao	:= NEW.dt_hor_acm_sn;				
		else
			NEW.dt_horario_acao 	:= to_date(substr(plt_obter_dados_hor_item(coalesce(NEW.nr_seq_horario, NEW.nr_seq_horario_proc, NEW.nr_seq_horario_rec, NEW.nr_seq_horario_dieta, NEW.nr_seq_horario_sae),NEW.ie_tipo_item,'H'),1,19),'dd/mm/yyyy hh24:mi:ss');				
		end if;

	exception
	when others then
		NEW.dt_horario_acao 	:= LOCALTIMESTAMP;
	end;
end if;

NEW.ds_stack			:= substr(dbms_utility.format_call_stack,1,2000);

if (NEW.cd_funcao is null) then
	NEW.cd_funcao			:= obter_funcao_ativa;
end if;

if (NEW.qt_dose_adm is not null) and (NEW.nr_atendimento is not null) then
	        open C01;
		loop
		fetch C01 into	
			nr_seq_tipo_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			select	max(cd_setor_atendimento),
				max(cd_perfil_ativo)
			into STRICT	cd_setor_atendimento_w,
				cd_perfil_w
			from	prescr_medica
			where	nr_prescricao	= NEW.nr_prescricao;

			select	nextval('atendimento_perda_ganho_seq')
			into STRICT	nr_seq_atend_w
			;

			insert into atendimento_perda_ganho(nr_sequencia,
				nr_atendimento,
				dt_atualizacao,
				nm_usuario,
				nr_seq_tipo,
				qt_volume,
				ds_observacao,
				dt_medida,
				cd_setor_atendimento,
				ie_origem,
				dt_referencia,
				cd_profissional,
				ie_situacao,
				dt_liberacao,
				dt_apap,
				qt_ocorrencia,
				nr_seq_horario)
			values (nr_seq_atend_w,
				NEW.nr_atendimento,
				LOCALTIMESTAMP,
				NEW.nm_usuario,
				nr_seq_tipo_w,
				NEW.qt_dose_adm,
				NEW.ds_observacao,
				LOCALTIMESTAMP,
				cd_setor_atendimento_w,
				'S',
				LOCALTIMESTAMP,
				NEW.cd_pessoa_fisica,
				'A',
				LOCALTIMESTAMP,
				LOCALTIMESTAMP,
				1,
				COALESCE(NEW.nr_seq_horario, NEW.nr_seq_horario_dieta, NEW.nr_seq_servico));
		end loop;
		close C01;
	COMMIT;		
end if;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_prescr_mat_alteracao_insert() FROM PUBLIC;

CREATE TRIGGER prescr_mat_alteracao_insert
	BEFORE INSERT ON prescr_mat_alteracao FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_prescr_mat_alteracao_insert();

