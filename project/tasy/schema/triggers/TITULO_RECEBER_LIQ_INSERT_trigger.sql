-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS titulo_receber_liq_insert ON titulo_receber_liq CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_titulo_receber_liq_insert() RETURNS trigger AS $BODY$
declare

nr_interno_conta_w              titulo_receber.nr_interno_conta%type;
ie_tipo_consistencia_w          integer;
cd_convenio_w                   convenio.cd_convenio%type;
cd_estabelecimento_w            titulo_receber.cd_estabelecimento%type;
vl_saldo_titulo_w               titulo_receber_liq.vl_recebido%type;
ie_tipo_convenio_w              convenio.ie_tipo_convenio%type;
ie_lib_repasse_w                convenio_estabelecimento.ie_lib_repasse%type;
nr_seq_protocolo_w              titulo_receber.nr_seq_protocolo%type;
vl_proporcional_w               titulo_receber_liq.vl_recebido%type;
vl_conta_w                      titulo_receber_liq.vl_recebido%type;
vl_protocolo_w                  titulo_receber_liq.vl_recebido%type;
vl_titulo_w                     titulo_receber_liq.vl_recebido%type;
vl_conta_tit_w                  titulo_receber_liq.vl_recebido%type;
ie_liberar_repasse_w            tipo_recebimento.ie_liberar_repasse%type;
ie_lib_rep_tit_cheque_w         parametro_faturamento.ie_lib_rep_tit_cheque%type;
ie_controle_perdas_w            parametro_contas_receber.ie_controle_perdas%type;

cd_pessoa_fisica_w              titulo_receber.cd_pessoa_fisica%type;
cd_cgc_w                        titulo_receber.cd_cgc%type;
nr_seq_tipo_baixa_w             perda_contas_receber.nr_sequencia%type;
nr_seq_perda_w                  perda_contas_receber.nr_sequencia%type;
vl_movimento_w                  ctb_documento.vl_movimento%type;
nr_multiplicador_w              smallint;
ie_contab_cr_w                  parametro_tesouraria.ie_contab_cr%type;
dt_movimento_w                  ctb_documento.dt_competencia%type;
nr_seq_trans_financ_w           ctb_documento.nr_seq_trans_financ%type;
nr_seq_info_w                   ctb_documento.nr_seq_info%type;
nr_documento_w                  ctb_documento.nr_documento%type;
nr_seq_doc_compl_w              ctb_documento.nr_seq_doc_compl%type;
nm_tabela_w                     ctb_documento.nm_tabela%type;
nr_seq_proj_rec_w               ctb_documento.nr_seq_proj_rec%type;
ie_contab_cr_no_cb_w            parametro_controle_banc.ie_contab_cr_no_cb%type;
ie_contab_rec_classif_w         parametro_contas_receber.ie_contab_rec_classif%type;
ie_cc_glosa_w                   parametro_contas_receber.ie_cc_glosa%type;
ie_dt_contab_cr_w               parametro_contas_receber.ie_dt_contab_cr%type;
ie_dt_contab_glosa_w            parametro_contas_receber.ie_dt_contab_glosa%type;
ie_contab_tit_cancelado_w       parametro_contas_receber.ie_contab_tit_cancelado%type;
nr_seq_mensalidade_w            titulo_receber.nr_seq_mensalidade%type;
nr_doc_analitico_w              ctb_documento.nr_doc_analitico%type;
ie_entrada_confirmada_w         titulo_receber.ie_entrada_confirmada%type;
nr_seq_conta_banco_w            titulo_receber.nr_seq_conta_banco%type;
vl_desc_previsto_w              titulo_receber.vl_desc_previsto%type;
ie_tipo_ocorrencia_w            bigint;
cd_banco_w                      banco_estabelecimento.cd_banco%type;
cd_agencia_bancaria_w           banco_estabelecimento.cd_agencia_bancaria%type;
nr_conta_w                      banco_estabelecimento.cd_conta%type;
ie_digito_conta_w               banco_estabelecimento.ie_digito_conta%type;
cd_camara_compensacao_w         pessoa_fisica_conta.cd_camara_compensacao%type;
ie_retorno_w                    bigint;
nr_seq_motivo_desc_w            titulo_receber_liq_desc.nr_seq_motivo_desc%type;
cd_centro_custo_desc_w          titulo_receber_liq_desc.cd_centro_custo%type;
ie_desc_previsto_w              varchar(1);
ie_juros_multa_w                varchar(1);
vl_saldo_tit_w                  titulo_receber.vl_saldo_titulo%type;

ie_origem_titulo_w              titulo_receber.ie_origem_titulo%type;
ie_situacao_w                   titulo_receber.ie_situacao%type;
dt_liquidacao_w                 titulo_receber.dt_liquidacao%type;
dt_pagamento_previsto_w         titulo_receber.dt_pagamento_previsto%type;
nr_seq_ptu_fatura_w             ptu_fatura.nr_sequencia%type;
ie_gerar_a510_baixa_tit_w       pls_parametros.ie_gerar_a510_baixa_tit%type := 'N';

reg_integracao_p                gerar_int_padrao.reg_integracao;
qt_reg_w                        bigint;
ie_passivo_saldo_tit_w          parametro_contas_receber.ie_passivo_saldo_tit%type;
vl_cambial_passivo_w            titulo_receber_liq.vl_cambial_passivo%type;
ie_situacao_ctb_w               caixa_receb.ie_tipo_receb%type := 'P';
ie_lib_adiantamento_w           parametro_repasse.ie_lib_adiantamento%type;
nr_seq_caixa_rec_w              adiantamento.nr_seq_caixa_rec%type;
vl_cartao_w                     titulo_receber_liq.vl_recebido%type;
vl_cheques_w                    titulo_receber_liq.vl_recebido%type;
vl_recebido_w                   titulo_receber_liq.vl_recebido%type;
ie_concil_contab_w              pls_visible_false.ie_concil_contab%type;
vl_perdas_w                     titulo_receber_liq.vl_recebido%type;
qt_registros_w                  bigint := 0;

ie_lib_repasse_tit_conv_w       convenio_estabelecimento.ie_lib_repasse_tit_conv%type;

c01 CURSOR FOR
    SELECT  b.nr_interno_conta,
            b.vl_conta
    from    conta_paciente b,
            titulo_receber a
    where   a.nr_seq_protocolo      = b.nr_seq_protocolo
    and     a.nr_titulo = NEW.nr_titulo;

c02 CURSOR FOR
    SELECT  p.nr_sequencia
    from    perda_contas_receber p
    where   p.nr_titulo = NEW.nr_titulo
    and     p.nr_seq_baixa = NEW.nr_seq_liq_origem;

c03 CURSOR FOR
    SELECT  p.cd_banco,
            p.cd_agencia_bancaria,
            p.nr_conta,
            p.nr_digito_conta,
            p.cd_camara_compensacao
    from    pessoa_fisica_conta p
    where   p.cd_pessoa_fisica        = cd_pessoa_fisica_w

union

    SELECT  p.cd_banco,
            p.cd_agencia_bancaria,
            p.nr_conta,
            p.nr_digito_conta,
            p.cd_camara_compensacao
    from    pessoa_juridica_conta p
    where   p.cd_cgc  = cd_cgc_w;

c04 CURSOR FOR
    SELECT  a.nm_atributo,
            18 cd_tipo_lote_contab
    from    atributo_contab a
    where   ((a.cd_tipo_lote_contab = 18
            and     a.nm_atributo  (      'VL_DESCONTOS', 'VL_JUROS',
                                            'VL_MULTA', 'VL_DESPESA_BANCARIA', 'VL_RECEBIDO_CB'))
    or (a.cd_tipo_lote_contab = 5
            and     a.nm_atributo in (      'VL_GLOSA', 'VL_REC_MAIOR', 'VL_ORIGINAL_BAIXA',
                                            'VL_CAMBIAL_ATIVO', 'VL_CAMBIAL_PASSIVO')))

union all

    SELECT  a.nm_atributo,
            37 cd_tipo_lote_contab
    from    atributo_contab a
    where   a.cd_tipo_lote_contab = 37
    and     a.nm_atributo in ('VL_RECEBIDO',  'VL_REC_GLOSA', 'VL_REC_MAIOR')
    and     coalesce(NEW.nr_seq_pls_lote_camara,0) = 0
    and     coalesce(NEW.nr_seq_lote_enc_contas,0) = 0
    and     ie_concil_contab_w = 'S'
    and     exists  (select 1
                     from   titulo_receber x
                     where  x.nr_titulo = NEW.nr_titulo
                     and    x.ie_origem_titulo  = '11'
                     and    ((x.nr_seq_pls_lote_contest is not null)
                     or (x.nr_seq_pls_lote_disc is not null)))
    
union all

    select  a.nm_atributo,
            39 cd_tipo_lote_contab
    from    atributo_contab a
    where   ((a.cd_tipo_lote_contab = 39
    and     a.nm_atributo in (      'VL_RECEBIDO',  'VL_DESCONTOS', 'VL_JUROS',
                                            'VL_MULTA', 'VL_DESPESA_BANCARIA', 'VL_REC_MAIOR',
                                            'VL_PERDAS', 'VL_GLOSA'))
    or (a.cd_tipo_lote_contab = 5
    and     a.nm_atributo in (       'VL_CAMBIAL_ATIVO', 'VL_CAMBIAL_PASSIVO')))
    and     NEW.nr_seq_lote_enc_contas is null
    and     NEW.nr_seq_pls_lote_camara is null
    and     coalesce(NEW.ie_lib_caixa, 'S') = 'S'
    and     ie_concil_contab_w = 'S'
    and exists  (select 1
                    from    titulo_receber x
                    where   x.nr_titulo = NEW.nr_titulo
                    and x.ie_pls    = 'S'
                    and x.ie_origem_titulo = '3'
                    and ((x.ie_situacao <> '3' or ie_contab_tit_cancelado_w = 'S')
            or (x.ie_situacao = '3' and NEW.vl_rec_maior <> 0)))
    
union all

    select  a.nm_atributo,
            a.cd_tipo_lote_contab
    from    atributo_contab a
    where   a.cd_tipo_lote_contab = 5
    and     a.nm_atributo in (  'VL_CAMBIAL_ATIVO', 'VL_CAMBIAL_PASSIVO', 'VL_DESCONTOS', 'VL_DESPESA_BANCARIA', 'VL_GLOSA',
                    'VL_JUROS', 'VL_MOEDA_COMPLEMENTAR', 'VL_MULTA', 'VL_OUTROS_ACRESCIMOS', 'VL_PERDAS',
                    'VL_RECEBIDO', 'VL_RECEBIDO_ESTRANG', 'VL_RECEBIDO_TOTAL', 'VL_RECURSADO', 'VL_REC_MAIOR');

c04_w           c04%rowtype;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then

    CALL philips_contabil_pck.set_ie_baixa(NEW.ie_lib_caixa);
    CALL philips_contabil_pck.set_dt_recebimento(NEW.dt_recebimento);

    select  max(b.ie_tipo_consistencia),
            coalesce(max(b.ie_liberar_repasse),'S')
    into STRICT    ie_tipo_consistencia_w,
            ie_liberar_repasse_w
    from    tipo_recebimento b
    where   b.cd_tipo_recebimento = NEW.cd_tipo_recebimento;

    select  cd_estabelecimento,
            cd_pessoa_fisica,
            cd_cgc,
            ie_origem_titulo,
            ie_situacao,
            dt_liquidacao,
            dt_pagamento_previsto,
            nr_seq_proj_rec
    into STRICT    cd_estabelecimento_w,
            cd_pessoa_fisica_w,
            cd_cgc_w,
            ie_origem_titulo_w,
            ie_situacao_w,
            dt_liquidacao_w,
            dt_pagamento_previsto_w,
            nr_seq_proj_rec_w
    from    titulo_receber
    where   nr_titulo = NEW.nr_titulo;

    BEGIN
    select  coalesce(max(p.ie_concil_contab), 'N')
    into STRICT    ie_concil_contab_w
    from    pls_visible_false p
    where   p.cd_estabelecimento = cd_estabelecimento_w;
    exception
        when no_data_found then
            ie_concil_contab_w := 'N';
    end;

    BEGIN
    select  coalesce(max(p.ie_controle_perdas),'N'),
            coalesce(max(p.ie_contab_rec_classif),'N'),
            coalesce(max(p.ie_cc_glosa),'N'),
            coalesce(max(p.ie_dt_contab_cr),'L'),
            coalesce(max(p.ie_dt_contab_glosa),'R'),
            coalesce(max(p.ie_contab_tit_cancelado), 'S')
    into STRICT    ie_controle_perdas_w,
            ie_contab_rec_classif_w,
            ie_cc_glosa_w,
            ie_dt_contab_cr_w,
            ie_dt_contab_glosa_w,
            ie_contab_tit_cancelado_w
    from    parametro_contas_receber p
    where   p.cd_estabelecimento = cd_estabelecimento_w;
    exception
        when no_data_found then
            ie_controle_perdas_w    := 'N';
            ie_contab_rec_classif_w := 'N';
            ie_cc_glosa_w           := 'N';
            ie_dt_contab_cr_w       := 'L';
            ie_dt_contab_glosa_w    := 'R';
    end;

    BEGIN
    select  x.*
    into STRICT    ie_contab_rec_classif_w,
            ie_cc_glosa_w,
            ie_dt_contab_cr_w,
            ie_dt_contab_glosa_w
    from (
            SELECT  coalesce(a.ie_contab_rec_classif, 'N'),
                    coalesce(a.ie_cc_glosa, 'N'),
                    coalesce(a.ie_dt_contab_cr, 'L'),
                    coalesce(a.ie_dt_contab_glosa, 'R')
            from    ctb_param_lote_contas_rec a
            where   a.cd_empresa    = obter_empresa_estab(cd_estabelecimento_w)
            and     coalesce(a.cd_estab_exclusivo, cd_estabelecimento_w) = cd_estabelecimento_w
            and     ie_ctb_online = 'S'
            order   by coalesce(a.cd_estab_exclusivo, 0) desc
            ) x LIMIT 1;
    exception
        when no_data_found then
            null;
    end;

    if (ie_controle_perdas_w = 'S') and (ie_tipo_consistencia_w = 9) then
        BEGIN
        open c02;
        loop
        fetch c02 into
            nr_seq_perda_w;
        EXIT WHEN NOT FOUND; /* apply on c02 */
            CALL fin_cancelar_perda(nr_seq_perda_w, NEW.nm_usuario);
        end loop;
        close c02;
        exception
            when no_data_found then
                null;
            when others then
                null;
        end;
    end if;

    if (NEW.nr_seq_caixa_rec is null) then -- francisco 18/0|1/2007 so pode atualizar quando fecha o recebimento
            CALL atualizar_imposto_tit_rec(NEW.nr_titulo, NEW.nr_sequencia, NEW.vl_recebido + NEW.vl_glosa, NEW.nm_usuario, NEW.nr_seq_liq_origem);

            select  coalesce(t.nr_interno_conta,0),
                    t.vl_saldo_titulo - coalesce(NEW.vl_recebido,0) - coalesce(NEW.vl_perdas,0) - coalesce(NEW.vl_descontos,0) - coalesce(NEW.vl_glosa,0) /*bruna,chico 21/11/2007 atualizar o saldo do titulo*/
,
                    t.cd_estabelecimento,
                    t.nr_seq_protocolo,
                    t.vl_titulo
            into STRICT    nr_interno_conta_w,
                    vl_saldo_titulo_w,
                    cd_estabelecimento_w,
                    nr_seq_protocolo_w,
                    vl_titulo_w
            from    titulo_receber t
            where   t.nr_titulo = NEW.nr_titulo;

            select  coalesce(max(a.ie_lib_rep_tit_cheque),'N')
            into STRICT    ie_lib_rep_tit_cheque_w
            from    parametro_faturamento a
            where   a.cd_estabelecimento    = cd_estabelecimento_w;

        BEGIN
        select  coalesce(p.ie_lib_adiantamento,'N')
        into STRICT    ie_lib_adiantamento_w
        from    parametro_repasse p
        where   p.cd_estabelecimento = cd_estabelecimento_w;
        exception
            when no_data_found then
                ie_lib_adiantamento_w   := 'N';
            when too_many_rows then
                ie_lib_adiantamento_w   := 'N';
        end;

            if (nr_interno_conta_w > 0) then

                    if (ie_tipo_consistencia_w <> 3) or        -- so atualizar o repasse se a baixa nao for cheque
                            (ie_lib_rep_tit_cheque_w = 'S') then    /* ahoffelder - os 429968 - 23/05/2012 */


                            vl_conta_tit_w  := 0;

                            select  b.ie_tipo_convenio,
                                    b.cd_convenio,
                                    a.vl_conta
                            into STRICT    ie_tipo_convenio_w,
                                    cd_convenio_w,
                                    vl_conta_tit_w
                            from    convenio b,
                                    conta_paciente a
                            where   a.cd_convenio_parametro = b.cd_convenio
                            and     a.nr_interno_conta      = nr_interno_conta_w;

                            select  coalesce(max(c.ie_lib_repasse),'S'),
                                    coalesce(max(c.ie_lib_repasse_tit_conv), 'N')
                            into STRICT    ie_lib_repasse_w,
                                    ie_lib_repasse_tit_conv_w
                            from    convenio_estabelecimento c
                            where   c.cd_convenio             = cd_convenio_w
                            and     c.cd_estabelecimento      = cd_estabelecimento_w;

                vl_cartao_w := 0;
                vl_cheques_w    := 0;
                vl_recebido_w   := NEW.vl_recebido;

                if (NEW.nr_adiantamento is not null) then
                    select  max(a.nr_seq_caixa_rec)
                    into STRICT    nr_seq_caixa_rec_w
                    from    adiantamento a
                    where   a.nr_adiantamento = NEW.nr_adiantamento;

                    select  coalesce(sum(m.vl_transacao),0)
                    into STRICT    vl_cartao_w
                    from    movto_cartao_cr m
                    where   m.nr_seq_caixa_rec    = nr_seq_caixa_rec_w
                    and     m.dt_cancelamento is null
                    and (m.dt_confirmacao_tef is not null or m.dt_integracao_tef is null);

                    select  coalesce(sum(c.vl_cheque),0)
                    into STRICT    vl_cheques_w
                    from    cheque_cr c
                    where   c.nr_seq_caixa_rec    = nr_seq_caixa_rec_w;

                    select  coalesce(sum(c.vl_especie),0)
                    into STRICT    vl_recebido_w
                    from    caixa_receb c
                    where   c.nr_sequencia = nr_seq_caixa_rec_w;

                end if;

                    if (NEW.nr_seq_trans_caixa is null) and
                        ((ie_lib_adiantamento_w = 'N') or
                        ((ie_lib_adiantamento_w = 'S') and
                        (((coalesce(vl_cartao_w,0) = 0) and (coalesce(vl_cheques_w,0) = 0)) or (vl_recebido_w <> 0)))) then

                        if (ie_lib_adiantamento_w = 'N') and (vl_recebido_w = 0) then
                            vl_recebido_w  := NEW.vl_recebido;
                        end if;

                    select CASE WHEN coalesce(NEW.vl_perdas,0)=0 THEN NEW.vl_recebido  ELSE NEW.vl_perdas END  into STRICT vl_perdas_w;

                                    if (ie_liberar_repasse_w in ('S','P')) and
                                            (((ie_tipo_convenio_w = 1 or ie_lib_repasse_tit_conv_w = 'S') AND ie_lib_repasse_w = 'S') or
                                            ((ie_tipo_convenio_w = 4 or ie_lib_repasse_tit_conv_w = 'S') AND ie_lib_repasse_w = 'F')) then

                                            if (ie_liberar_repasse_w = 'P') then
                                                    CALL gerar_perdas_repasse(nr_interno_conta_w, NEW.nm_usuario, 'B', vl_titulo_w, vl_perdas_w, vl_saldo_titulo_w);
                                            else
                                                    CALL atualizar_repasse_conta(nr_interno_conta_w, vl_saldo_titulo_w, NEW.nm_usuario);
                                            end if;
                                    elsif (ie_liberar_repasse_w in ('S','P')) and
                                            (((ie_tipo_convenio_w = 1 or ie_lib_repasse_tit_conv_w = 'S') AND ie_lib_repasse_w = 'SP') or
                                            ((ie_tipo_convenio_w = 4 or ie_lib_repasse_tit_conv_w = 'S') AND ie_lib_repasse_w = 'FP')) then

                                            if (ie_liberar_repasse_w = 'P') then
                                                    CALL gerar_perdas_repasse(nr_interno_conta_w, NEW.nm_usuario, 'B', vl_titulo_w, vl_perdas_w, vl_saldo_titulo_w);
                                            else
                                                    if (coalesce(vl_conta_tit_w, 0) > 0) then
                                                            CALL atualizar_repasse_conta_prop(nr_interno_conta_w, vl_recebido_w, vl_conta_tit_w, NEW.nm_usuario);
                                                    else
                                                            CALL atualizar_repasse_conta_prop(nr_interno_conta_w, vl_recebido_w, vl_titulo_w, NEW.nm_usuario);
                                                    end if;
                                            end if;
                                    end if;

                            end if;

                    end if;

            /* francisco - 20/11/2009 - os 173662 */


            elsif (nr_seq_protocolo_w is not null) then

                    if (ie_tipo_consistencia_w <> 3) or        -- so atualizar o repasse se a baixa nao for cheque
                            (ie_lib_rep_tit_cheque_w = 'S') then    /* ahoffelder - os 429968 - 23/05/2012 */


                            select  b.ie_tipo_convenio,
                                    b.cd_convenio
                            into STRICT    ie_tipo_convenio_w,
                                    cd_convenio_w
                            from    convenio b,
                                    protocolo_convenio a
                            where   a.cd_convenio           = b.cd_convenio
                            and     a.nr_seq_protocolo      = nr_seq_protocolo_w;

                            select  coalesce(max(c.ie_lib_repasse),'S'),
                                    coalesce(max(c.ie_lib_repasse_tit_conv), 'N')
                            into STRICT    ie_lib_repasse_w,
                                    ie_lib_repasse_tit_conv_w
                            from    convenio_estabelecimento c
                            where   c.cd_convenio             = cd_convenio_w
                            and     c.cd_estabelecimento      = cd_estabelecimento_w;

                            if (NEW.nr_seq_trans_caixa is null) then
                                    open c01;
                                    loop
                                    fetch c01 into
                                            nr_interno_conta_w,
                                            vl_conta_w;
                                    EXIT WHEN NOT FOUND; /* apply on c01 */

                     select CASE WHEN coalesce(NEW.vl_perdas,0)=0 THEN NEW.vl_recebido  ELSE NEW.vl_perdas END  into STRICT vl_perdas_w;

                                            if (ie_liberar_repasse_w in ('S','P')) and
                                                    (((ie_tipo_convenio_w = 1 or ie_lib_repasse_tit_conv_w = 'S') AND ie_lib_repasse_w = 'S') or
                                                     ((ie_tipo_convenio_w = 4 or ie_lib_repasse_tit_conv_w = 'S') AND ie_lib_repasse_w = 'F')) then
                                                    if (ie_liberar_repasse_w = 'P') then
                                                            CALL gerar_perdas_repasse(nr_interno_conta_w, NEW.nm_usuario, 'B', vl_titulo_w, vl_perdas_w, vl_saldo_titulo_w);
                                                    else
                                                            CALL atualizar_repasse_conta(nr_interno_conta_w, vl_saldo_titulo_w, NEW.nm_usuario);
                                                    end if;
                                            elsif (ie_liberar_repasse_w in ('S','P')) and
                                                    (((ie_tipo_convenio_w = 1 or ie_lib_repasse_tit_conv_w = 'S') AND ie_lib_repasse_w = 'SP') or
                                                     ((ie_tipo_convenio_w = 4 or ie_lib_repasse_tit_conv_w = 'S') AND ie_lib_repasse_w = 'FP')) then
                                                    if (ie_liberar_repasse_w = 'P') then
                                                            CALL gerar_perdas_repasse(nr_interno_conta_w, NEW.nm_usuario, 'B', vl_titulo_w, vl_perdas_w, vl_saldo_titulo_w);
                                                    else
                                                            CALL atualizar_repasse_conta_prop(nr_interno_conta_w, NEW.vl_recebido, vl_titulo_w, NEW.nm_usuario);
                                                    end if;

                                            end if;
                                    end loop;
                                    close c01;
                            end if;
                    end if;
            end if;
    end if;

    select  max(a.ie_entrada_confirmada),
            max(a.nr_seq_conta_banco),
            max(a.vl_desc_previsto),
            max(a.vl_saldo_titulo),
            max(a.vl_titulo)
    into STRICT    ie_entrada_confirmada_w,
            nr_seq_conta_banco_w,
            vl_desc_previsto_w,
            vl_saldo_tit_w,
            vl_titulo_w
    from    titulo_receber a
    where   a.nr_titulo = NEW.nr_titulo;

    if (ie_entrada_confirmada_w = 'C') and (NEW.nr_seq_cobranca is null) then /*OS 1360248 - Apenas inseir no lote de instrucao caso a baixa NAO for originada de Cobranca Escritural.*/


            /*Cambial passivo somente atualiza o saldo se esse param estiver como Sim, cfme ocorre na atualizar_saldo_tit_rec*/


            select  coalesce(max(ie_passivo_saldo_tit),'S')
            into STRICT    ie_passivo_saldo_tit_w
            from    parametro_contas_receber a
            where   a.cd_estabelecimento    = cd_estabelecimento_w;

            if (ie_passivo_saldo_tit_w = 'N') then
                    vl_cambial_passivo_w := 0;
            else
                    vl_cambial_passivo_w := coalesce(NEW.vl_cambial_passivo,0);
            end if;

            /*Se for uma baixa ou uma baixa de desconto*/


            if ( ((NEW.vl_recebido > 0) or (NEW.vl_descontos > 0) or (NEW.vl_perdas > 0) or (NEW.vl_nota_credito > 0) or (vl_cambial_passivo_w > 0)) and (NEW.nr_seq_liq_origem is null) ) then

                    /*Tipo de ocorrencia 4 pois se trata de concessao de desconto.*/


                    ie_tipo_ocorrencia_w := 4;

            /*Se a baixa for negativa ou valor de desconto negativo e tiver sequencia de origem dessa baixa, indica estorno*/


            elsif ( ((NEW.vl_recebido < 0) or (NEW.vl_descontos < 0)  or (NEW.vl_perdas > 0) or (NEW.vl_nota_credito > 0) or (vl_cambial_passivo_w > 0)) and (NEW.nr_seq_liq_origem is not null) ) then

                    /*Tipo de ocorrencia 5 pois se trata de cancelamento de abatimento.*/


                    ie_tipo_ocorrencia_w := 5;

            end if;

            /*Se a baixa deixar o saldo 0, indica que foi liquidado, ai enviar a ocorrencia de Baixa de titulo*/


            if ( (coalesce(vl_saldo_tit_w,0) - (coalesce(NEW.vl_recebido,0) + coalesce(NEW.vl_descontos,0) + coalesce(NEW.vl_perdas,0) + coalesce(NEW.vl_nota_credito,0) + coalesce(vl_cambial_passivo_w,0))) = 0) then
                    ie_tipo_ocorrencia_w := 2;
            end if;

            BEGIN
            select  a.cd_banco,
                    a.cd_agencia_bancaria,
                    a.cd_conta,
                    a.ie_digito_conta
            into STRICT    cd_banco_w,
                    cd_agencia_bancaria_w,
                    nr_conta_w,
                    ie_digito_conta_w
            from    banco_estabelecimento a
            where   a.nr_sequencia = nr_seq_conta_banco_w;
            exception
                when no_data_found then
                    ie_retorno_w    := 0;
                when too_many_rows then
                    ie_retorno_w    := 0;
            end;

            if (ie_retorno_w = 0) then
                    open c03;
                    loop
                    fetch c03 into
                            cd_banco_w,
                            cd_agencia_bancaria_w,
                            nr_conta_w,
                            ie_digito_conta_w,
                            cd_camara_compensacao_w;
                    EXIT WHEN NOT FOUND; /* apply on c03 */
                            cd_banco_w      := cd_banco_w;
                    end loop;
                    close c03;
            end if;

            ie_desc_previsto_w := obter_param_usuario(815, 9, obter_perfil_ativo, NEW.nm_usuario, obter_estabelecimento_ativo, ie_desc_previsto_w);
            ie_juros_multa_w := obter_param_usuario(815, 16, obter_perfil_ativo, NEW.nm_usuario, obter_estabelecimento_ativo, ie_juros_multa_w);

            select  max(a.cd_centro_custo),
                    max(a.nr_seq_motivo_desc)
            into STRICT    cd_centro_custo_desc_w,
                    nr_seq_motivo_desc_w
            from    titulo_receber_liq_desc a
            where   a.nr_titulo             = NEW.nr_titulo
            and     a.nr_bordero    is null
            and     a.nr_seq_liq    is null;


            insert into titulo_receber_instr(      nr_seq_cobranca,
                                                    nr_titulo,
                                                    vl_cobranca,
                                                    dt_atualizacao,
                                                    nm_usuario,
                                                    cd_banco,
                                                    cd_agencia_bancaria,
                                                    nr_conta,
                                                    cd_moeda,
                                                    ie_digito_conta,
                                                    cd_camara_compensacao,
                                                    vl_desconto,
                                                    vl_desc_previsto,
                                                    vl_acrescimo,
                                                    nr_sequencia,
                                                    vl_despesa_bancaria,
                                                    vl_saldo_inclusao,
                                                    qt_dias_instrucao,
                                                    cd_ocorrencia,
                                                    ie_instrucao_enviada,
                                                    nr_seq_motivo_desc,
                                                    cd_centro_custo_desc,
                                                    vl_juros,
                                                    vl_multa,
                                                    ie_selecionado  )
                            values  (       null,
                                            NEW.nr_titulo,
                                            CASE WHEN ie_tipo_ocorrencia_w=4 THEN  vl_titulo_w  ELSE coalesce(vl_saldo_tit_w,0) - (coalesce(NEW.vl_recebido,0) + coalesce(NEW.vl_descontos,0)) END ,
                                            LOCALTIMESTAMP,
                                            NEW.nm_usuario,
                                            cd_banco_w,
                                            cd_agencia_bancaria_w,
                                            nr_conta_w,
                                            NEW.cd_moeda,
                                            ie_digito_conta_w,
                                            cd_camara_compensacao_w,
                                            CASE WHEN ie_tipo_ocorrencia_w=4 THEN  coalesce(NEW.vl_descontos,0)  ELSE CASE WHEN ie_desc_previsto_w='S' THEN  coalesce(vl_desc_previsto_w,0) END  + coalesce((obter_dados_titulo_receber(NEW.nr_titulo,'VNC'))::numeric ,0) END ,
                                            CASE WHEN ie_desc_previsto_w='S' THEN  coalesce(vl_desc_previsto_w,0)  ELSE 0 END ,
                                            0,
                                            nextval('titulo_receber_instr_seq'),
                                            0,
                                            coalesce(vl_saldo_tit_w,0) - (coalesce(NEW.vl_recebido,0) + coalesce(NEW.vl_descontos,0)),
                                            null,
                                            substr(obter_ocorrencia_envio_cre(ie_tipo_ocorrencia_w,cd_banco_w),1,3),
                                            'N',
                                            nr_seq_motivo_desc_w,
                                            cd_centro_custo_desc_w,
                                            CASE WHEN ie_juros_multa_w='S' THEN (obter_juros_multa_titulo(NEW.nr_titulo,LOCALTIMESTAMP,'R','J'))::numeric   ELSE null END ,
                                            CASE WHEN ie_juros_multa_w='S' THEN (obter_juros_multa_titulo(NEW.nr_titulo,LOCALTIMESTAMP,'R','M'))::numeric   ELSE null END ,
                                            'N');

    end if;

    -- Se titulo de faturamento

    if (ie_origem_titulo_w = 13) then
            select  coalesce(max(ie_gerar_a510_baixa_tit),'N')
            into STRICT    ie_gerar_a510_baixa_tit_w
            from    pls_parametros
            where   cd_estabelecimento      = cd_estabelecimento_w;

            if (ie_gerar_a510_baixa_tit_w = 'S') and (ie_situacao_w = 1) and (dt_liquidacao_w is null) and (NEW.vl_glosa = 0) then

                    select  max(u.nr_sequencia)
                    into STRICT    nr_seq_ptu_fatura_w
                    from    ptu_fatura      u,
                            pls_fatura      s
                    where   s.nr_sequencia  = u.nr_seq_pls_fatura
                    and     s.nr_titulo     = NEW.nr_titulo;

                    if (nr_seq_ptu_fatura_w is null) then
                            select  max(u.nr_sequencia)
                            into STRICT    nr_seq_ptu_fatura_w
                            from    ptu_fatura      u,
                                    pls_fatura      s
                            where   s.nr_sequencia  = u.nr_seq_pls_fatura
                            and     s.nr_titulo_ndc = NEW.nr_titulo;
                    end if;

                    -- Gerar A510

                    if (nr_seq_ptu_fatura_w is not null) and (cd_estabelecimento_w is not null)then
                            CALL ptu_gerar_fat_baixa_interc( nr_seq_ptu_fatura_w, null, cd_estabelecimento_w, NEW.nm_usuario, 'N', NEW.dt_recebimento, NEW.vl_recebido, 0, dt_pagamento_previsto_w);
                    end if;
            end if;
    end if;

    if (NEW.nr_titulo is not null) and (NEW.nr_sequencia is not null) and ( coalesce(NEW.ie_lib_caixa,'S') = 'S') then
            /*Esse select e para tentar evitar a duplicidade. Pois ao ao atualizar algo no titulo, pode chamar que tb dispara a trigger das tabelas com esse insert*/



            BEGIN
            select  1
            into STRICT    qt_reg_w

            where exists (
                SELECT  i.nr_sequencia
                from    intpd_fila_transmissao i
                where   i.nr_seq_documento      = to_char(NEW.nr_titulo)
                and     i.nr_seq_item_documento = to_char(NEW.nr_sequencia)
                and     to_char(i.dt_atualizacao, 'dd/mm/yyyy hh24:mi:ss') = to_char(LOCALTIMESTAMP,'dd/mm/yyyy hh24:mi:ss')
                and     i.ie_evento in ('32','27')
                );
            exception
                when no_data_found then
                    qt_reg_w := 0;
                when too_many_rows then
                    qt_reg_w := 0;
            end;

            if (qt_reg_w = 0) then
                    reg_integracao_p.nr_seq_item_documento_p :=      NEW.nr_sequencia;
                                    /*Envio de cadastros financeiros - Baixa de titulo*/


                                    reg_integracao_p := gerar_int_padrao.gravar_integracao('32', NEW.nr_titulo, NEW.nm_usuario, reg_integracao_p);

                    reg_integracao_p := gerar_int_padrao.gravar_integracao('27', NEW.nr_titulo, NEW.nm_usuario, reg_integracao_p);
            end if;

    end if;
    /* Grava o agendamento da informacao para atualizacao do fluxo de caixa. */


    CALL gravar_agend_fluxo_caixa(NEW.nr_titulo,NEW.nr_sequencia,'TRB',NEW.dt_recebimento,'I',NEW.nm_usuario);
    /* Quando houver vl_recurso, gera informacao de glosa a recuperar */


    if (coalesce(NEW.vl_recurso,0) <> 0) then
            CALL gravar_agend_fluxo_caixa(NEW.nr_titulo,null,'TR',NEW.dt_recebimento,'A',NEW.nm_usuario);
    end if;

    open c04;
    loop
    fetch c04 into
            c04_w;
    EXIT WHEN NOT FOUND; /* apply on c04 */
            BEGIN

            nr_multiplicador_w := 1;
            if (NEW.ie_acao <> 'I') then
                    BEGIN
                    nr_multiplicador_w := -1;
                    end;
            end if;

            if (c04_w.cd_tipo_lote_contab = 18) then
                    BEGIN

                    BEGIN
                    select  coalesce(p.ie_contab_cr_no_cb, 'N')
                    into STRICT    ie_contab_cr_no_cb_w
                    from    parametro_controle_banc p
                    where   p.cd_estabelecimento = cd_estabelecimento_w;
                    exception
                        when no_data_found then
                            ie_contab_cr_no_cb_w:= 'N';
                        when too_many_rows then
                            ie_contab_cr_no_cb_w:= 'N';
                    end;

                    if (ie_contab_cr_no_cb_w = 'S') then
                            BEGIN

                            vl_movimento_w:=        case c04_w.nm_atributo
                                                    when 'VL_DESCONTOS' then NEW.vl_descontos * nr_multiplicador_w
                                                    when 'VL_JUROS' then NEW.vl_juros * nr_multiplicador_w
                                                    when 'VL_MULTA'  then NEW.vl_multa * nr_multiplicador_w
                                                    when 'VL_DESPESA_BANCARIA'  then NEW.vl_despesa_bancaria * nr_multiplicador_w
                                                    when 'VL_RECEBIDO_TESOURARIA'  then NEW.vl_recebido * nr_multiplicador_w
                                                    when 'VL_ORIGINAL_BAIXA'  then NEW.vl_recebido + NEW.vl_juros + NEW.vl_multa + NEW.vl_descontos
                                                    when 'VL_CAMBIAL_ATIVO'  then NEW.vl_cambial_ativo * nr_multiplicador_w
                                                    when 'VL_CAMBIAL_PASSIVO'  then NEW.vl_cambial_passivo * nr_multiplicador_w
                                                    when 'VL_GLOSA'  then NEW.vl_glosa * nr_multiplicador_w
                                                    when 'VL_REC_MAIOR'  then NEW.vl_rec_maior * nr_multiplicador_w
                                                    end;

                            dt_movimento_w          := NEW.dt_recebimento;
                            nr_seq_trans_financ_w   := NEW.nr_seq_trans_fin;
                            nr_seq_info_w           := 14;
                            nr_documento_w          := NEW.nr_titulo;
                            nr_seq_doc_compl_w      := NEW.nr_sequencia;
                            nr_doc_analitico_w      := null;
                            nm_tabela_w             := 'TITULO_RECEBER_LIQ_CONTAB_V';

                            end;
                    end if;

                    end;

            elsif (c04_w.cd_tipo_lote_contab = 37) then
                    vl_movimento_w:=        case c04_w.nm_atributo
                                            when 'VL_RECEBIDO' then NEW.vl_recebido -- * nr_multiplicador_w
                                            when 'VL_REC_GLOSA' then NEW.vl_glosa --* nr_multiplicador_w
                                            when 'VL_REC_MAIOR'  then NEW.vl_rec_maior -- * nr_multiplicador_w
                                            end;

                    dt_movimento_w          := NEW.dt_recebimento;
                    nr_seq_trans_financ_w   := NEW.nr_seq_trans_fin;
                    nr_seq_info_w           := 14;
                    nr_documento_w          := NEW.nr_titulo;
                    nr_seq_doc_compl_w      := NEW.nr_sequencia;
                    nr_doc_analitico_w      := null;
                    nm_tabela_w             := 'TITULO_RECEBER_LIQ';

                    if (c04_w.nm_atributo = 'VL_REC_MAIOR' and NEW.vl_glosa <> 0) then
                            vl_movimento_w := 0;
                    end if;
            elsif (c04_w.cd_tipo_lote_contab = 39) then
                    BEGIN
                    vl_movimento_w:=        case c04_w.nm_atributo
                                            when 'VL_RECEBIDO' then NEW.vl_recebido * nr_multiplicador_w
                                            when 'VL_DESCONTOS' then NEW.vl_descontos * nr_multiplicador_w
                                            when 'VL_JUROS'  then NEW.vl_juros * nr_multiplicador_w
                                            when 'VL_MULTA'  then NEW.vl_multa * nr_multiplicador_w
                                            when 'VL_DESPESA_BANCARIA'  then NEW.vl_despesa_bancaria * nr_multiplicador_w
                                            when 'VL_REC_MAIOR'  then NEW.vl_rec_maior * nr_multiplicador_w
                                            when 'VL_PERDAS'  then NEW.vl_perdas * nr_multiplicador_w
                                            when 'VL_GLOSA'  then NEW.vl_glosa * nr_multiplicador_w
                                            when 'VL_CAMBIAL_ATIVO'  then NEW.vl_cambial_ativo * nr_multiplicador_w
                                            when 'VL_CAMBIAL_PASSIVO'  then NEW.vl_cambial_passivo * nr_multiplicador_w
                                            else
                                                    null
                                            end;

                    dt_movimento_w          := NEW.dt_recebimento;
                    nr_seq_trans_financ_w   := NEW.nr_seq_trans_fin;
                    nr_seq_info_w           := 14;
                    nr_documento_w          := NEW.nr_titulo;
                    nr_seq_doc_compl_w      := NEW.nr_sequencia;
                    nr_doc_analitico_w      := null;
                    nm_tabela_w             := 'TITULO_RECEBER_LIQ';

                    nm_tabela_w     := case c04_w.nm_atributo
                                            when 'VL_GLOSA'  then 'TITULO_RECEBER'
                                            when 'VL_CAMBIAL_ATIVO'  then 'TITULO_RECEBER_LIQ_CTB_CAMB_V'
                                            when 'VL_CAMBIAL_PASSIVO'  then 'TITULO_RECEBER_LIQ_CTB_CAMB_V'
                                            else
                                                    'TITULO_RECEBER_LIQ'
                                            end;


                    if (c04_w.nm_atributo = 'VL_GLOSA') then
                            BEGIN

                            BEGIN
                            select  t.nr_seq_mensalidade
                            into STRICT    nr_seq_mensalidade_w
                            from    titulo_receber t
                            where   t.nr_titulo = NEW.nr_titulo;
                            exception
                                when no_data_found then
                                    nr_seq_mensalidade_w:= null;
                                when too_many_rows then
                                    nr_seq_mensalidade_w:= null;
                            end;

                            if (ie_cc_glosa_w <> 'N') or (coalesce(nr_seq_mensalidade_w,0) = 0) then
                                    BEGIN

                                            vl_movimento_w:= 0;

                                    end;
                            else
                                    BEGIN

                                    if (ie_dt_contab_glosa_w = 'F') then
                                            BEGIN

                                            select  max(c.dt_fechamento)
                                            into STRICT    dt_movimento_w
                                            from    convenio_retorno c
                                            where   c.nr_sequencia    = NEW.nr_seq_retorno;

                                            end;
                                    end if;

                                    end;
                            end if;

                            end;
                    end if;


                    if      ((coalesce(nr_seq_trans_financ_w, 0) = 0) or (c04_w.nm_atributo = 'VL_RECEBIDO' AND ie_contab_rec_classif_w <> 'N')) then
                            BEGIN

                            vl_movimento_w := 0;

                            end;
                    end if;


                    end;
            elsif (c04_w.cd_tipo_lote_contab = 5) then
                    BEGIN

                    ie_situacao_ctb_w       := 'P';
                    dt_movimento_w          := trunc(NEW.dt_recebimento);
                    nr_seq_trans_financ_w   := NEW.nr_seq_trans_fin;
                    nr_documento_w          := NEW.nr_titulo;
                    nr_seq_doc_compl_w      := NEW.nr_sequencia;
                    nr_doc_analitico_w      := null;

                    vl_movimento_w  :=      case c04_w.nm_atributo
                                            when 'VL_CAMBIAL_ATIVO'         then NEW.vl_cambial_ativo * nr_multiplicador_w
                                            when 'VL_CAMBIAL_PASSIVO'       then NEW.vl_cambial_passivo * nr_multiplicador_w
                                            when 'VL_DESCONTOS'             then NEW.vl_descontos * nr_multiplicador_w
                                            when 'VL_JUROS'                 then NEW.vl_juros * nr_multiplicador_w
                                            when 'VL_MULTA'                 then NEW.vl_multa * nr_multiplicador_w
                                            when 'VL_RECEBIDO_ESTRANG'      then NEW.vl_recebido_estrang * nr_multiplicador_w
                                            when 'VL_MOEDA_COMPLEMENTAR'    then NEW.vl_complemento * nr_multiplicador_w
                                            when 'VL_DESPESA_BANCARIA'      then NEW.vl_despesa_bancaria * nr_multiplicador_w
                                            when 'VL_GLOSA'                 then NEW.vl_glosa * nr_multiplicador_w
                                            when 'VL_REC_MAIOR'             then NEW.vl_rec_maior * nr_multiplicador_w
                                            when 'VL_PERDAS'                then NEW.vl_perdas * nr_multiplicador_w
                                            when 'VL_OUTROS_ACRESCIMOS'     then NEW.vl_outros_acrescimos * nr_multiplicador_w
                                            when 'VL_RECURSADO'             then NEW.vl_recurso
                                            when 'VL_RECEBIDO_TOTAL'        then (NEW.vl_recebido + NEW.vl_descontos + NEW.vl_juros + NEW.vl_multa) * nr_multiplicador_w
                                            when 'VL_RECEBIDO'              then NEW.vl_recebido * nr_multiplicador_w
                                            else
                                                    null
                                            end;

                    nr_seq_info_w   :=      case    c04_w.nm_atributo
                                            when    'VL_CAMBIAL_ATIVO'      then 53
                                            when    'VL_CAMBIAL_PASSIVO'    then 53
                                            when    'VL_RECEBIDO_ESTRANG'   then 49
                                            when    'VL_MOEDA_COMPLEMENTAR' then 49
                                            else
                                                    14
                                            end;

                    nm_tabela_w     :=      case c04_w.nm_atributo
                                                    when 'VL_CAMBIAL_ATIVO'         then 'TITULO_RECEBER_LIQ_CTB_CAMB_V'
                                                    when 'VL_CAMBIAL_PASSIVO'       then 'TITULO_RECEBER_LIQ_CTB_CAMB_V'
                                                    when 'VL_DESCONTOS'             then 'TITULO_RECEBER_LIQ_CONTAB_V2'
                                                    when 'VL_JUROS'                 then 'TITULO_RECEBER_LIQ_CONTAB_V2'
                                                    when 'VL_MULTA'                 then 'TITULO_RECEBER_LIQ_CONTAB_V2'
                                                    when 'VL_RECEBIDO_ESTRANG'      then 'TITULO_REC_LIQ_CC'
                                                    when 'VL_MOEDA_COMPLEMENTAR'    then 'TITULO_REC_LIQ_CC'
                                                    else
                                                                    'TITULO_RECEBER_LIQ'
                                                    end;

                    if (c04_w.nm_atributo in ('VL_DESCONTOS', 'VL_JUROS', 'VL_MOEDA_COMPLEMENTAR', 'VL_MULTA', 'VL_PERDAS', 'VL_RECEBIDO_ESTRANG')) then
                            BEGIN
                            ie_situacao_ctb_w := 'N';
                            end;
                    end if;

                    if (ie_contab_rec_classif_w = 'S') then
                            BEGIN

                            if (c04_w.nm_atributo = 'VL_RECEBIDO') then
                                    BEGIN
                                    ie_situacao_ctb_w := 'N';
                                    end;
                            elsif (c04_w.nm_atributo = 'VL_RECEBIDO_TOTAL') then
                                    BEGIN
                                    vl_movimento_w := null;
                                    end;
                            end if;

                            end;
                    end if;

                    if (ie_cc_glosa_w = 'S') then
                            BEGIN

                            if (c04_w.nm_atributo = 'VL_GLOSA' or (c04_w.nm_atributo = 'VL_REC_MAIOR' and ie_origem_titulo_w <> 3)) then
                                    BEGIN
                                    vl_movimento_w:= null;
                                    end;
                            end if;

                            end;
                    end if;

                    end;
            end if;

            if (qt_registros_w = 0) and (coalesce(vl_movimento_w, 0) <> 0 and coalesce(nr_seq_trans_financ_w, 0) <> 0) then
                    CALL ctb_concil_financeira_pck.ctb_gravar_documento(   cd_estabelecimento_w,
                                                                        dt_movimento_w,
                                                                        c04_w.cd_tipo_lote_contab,
                                                                        nr_seq_trans_financ_w,
                                                                        nr_seq_info_w,
                                                                        nr_documento_w,
                                                                        nr_seq_doc_compl_w,
                                                                        nr_doc_analitico_w,
                                                                        vl_movimento_w,
                                                                        nm_tabela_w,
                                                                        c04_w.nm_atributo,
                                                                        NEW.nm_usuario,
                                                                        ie_situacao_ctb_w,
                                                                        null,
                                                                        nr_seq_proj_rec_w);
            end if;

            end;
    end loop;
    close c04;

end if;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_titulo_receber_liq_insert() FROM PUBLIC;

CREATE TRIGGER titulo_receber_liq_insert
	AFTER INSERT ON titulo_receber_liq FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_titulo_receber_liq_insert();

