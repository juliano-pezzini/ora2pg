-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS titulo_receber_after_update ON titulo_receber CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_titulo_receber_after_update() RETURNS trigger AS $BODY$
declare

cd_banco_w					banco_estabelecimento.cd_banco%type;			
cd_agencia_bancaria_w		banco_estabelecimento.cd_agencia_bancaria%type;
nr_conta_w					banco_estabelecimento.cd_conta%type;
ie_digito_conta_w			banco_estabelecimento.ie_digito_conta%type;
cd_camara_compensacao_w		pessoa_fisica_conta.cd_camara_compensacao%type;
ie_retorno_w				bigint;
ie_tipo_ocorrencia_w		bigint;
ie_desc_previsto_w			varchar(1);
ie_juros_multa_w			varchar(1);
nr_seq_motivo_desc_w		titulo_receber_liq_desc.nr_seq_motivo_desc%type;		
cd_centro_custo_desc_w		titulo_receber_liq_desc.cd_centro_custo%type;

c01 CURSOR FOR
	SELECT	cd_banco,
			cd_agencia_bancaria,
			nr_conta,
			nr_digito_conta,
			cd_camara_compensacao
	from 	pessoa_fisica_conta
	where	cd_pessoa_fisica 	= NEW.cd_pessoa_fisica
	
union

	SELECT	cd_banco,
			cd_agencia_bancaria,
			nr_conta,
			nr_digito_conta,
			cd_camara_compensacao
	from 	pessoa_juridica_conta
	where	cd_cgc 	= NEW.cd_cgc;
BEGIN
  BEGIN

if (coalesce(wheb_usuario_pck.get_ie_executar_trigger,'S')	= 'S')  then

/* Projeto MXM (7077)  - Exportar título a receber 
 Dispara somente quando houver nota fiscal vinculada */

if (coalesce(NEW.nr_seq_nf_saida,0) <> 0 and coalesce(OLD.nr_seq_nf_saida,0) <> coalesce(NEW.nr_seq_nf_saida,0)) then
	if (NEW.cd_pessoa_fisica is not null) then
		CALL gravar_agend_integracao(556,'CD_PESSOA_FISICA='||NEW.cd_pessoa_fisica||';CD_PESSOA_JURIDICA='||null||';'); --Fornecedor
		CALL gravar_agend_integracao(562,'CD_PESSOA_FISICA='||NEW.cd_pessoa_fisica||';'); --Cliente
	else
		CALL gravar_agend_integracao(556,'CD_PESSOA_JURIDICA='||NEW.cd_cgc||';CD_PESSOA_FISICA='||null||';'); --Fornecedor
	end if;
	CALL gravar_agend_integracao(559,'NR_TITULO='||NEW.nr_titulo||';');
end if;

if (NEW.ie_entrada_confirmada = 'C') and (OLD.vl_desc_previsto <> NEW.vl_desc_previsto) then
	/*Tipo de ocorrencia 4 pois se trata de concessão de desconto.*/


	ie_tipo_ocorrencia_w := 4;
	
	BEGIN
	select	a.cd_banco,
			a.cd_agencia_bancaria,
			a.cd_conta,
			a.ie_digito_conta
	into STRICT	cd_banco_w,
			cd_agencia_bancaria_w,
			nr_conta_w,
			ie_digito_conta_w
	from	banco_estabelecimento a
	where	a.nr_sequencia = NEW.nr_seq_conta_banco;
	exception when others then
			ie_retorno_w	:= 0;
	end;
	
	if (ie_retorno_w = 0) then
		open c01;
		loop
		fetch c01 into
			cd_banco_w,
			cd_agencia_bancaria_w,
			nr_conta_w,
			ie_digito_conta_w,
			cd_camara_compensacao_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			cd_banco_w	:= cd_banco_w;
		end loop;
		close c01;
	end if;
	
	ie_desc_previsto_w := obter_param_usuario(815, 9, obter_perfil_ativo, NEW.nm_usuario, obter_estabelecimento_ativo, ie_desc_previsto_w);
	ie_juros_multa_w := obter_param_usuario(815, 16, obter_perfil_ativo, NEW.nm_usuario, obter_estabelecimento_ativo, ie_juros_multa_w);
	
	select	max(a.cd_centro_custo),
			max(a.nr_seq_motivo_desc)
	into STRICT	cd_centro_custo_desc_w,
			nr_seq_motivo_desc_w
	from	titulo_receber_liq_desc a
	where	a.nr_titulo		= NEW.nr_titulo
	and		a.nr_bordero	is null
	and		a.nr_seq_liq	is null;
	
	insert into titulo_receber_instr(	nr_seq_cobranca,
										nr_titulo,
										vl_cobranca,
										dt_atualizacao,
										nm_usuario,
										cd_banco,
										cd_agencia_bancaria,
										nr_conta,
										cd_moeda,
										ie_digito_conta,
										cd_camara_compensacao,
										vl_desconto,
										vl_desc_previsto,
										vl_acrescimo,
										nr_sequencia,
										vl_despesa_bancaria,
										vl_saldo_inclusao,
										qt_dias_instrucao,
										cd_ocorrencia,
										ie_instrucao_enviada,
										nr_seq_motivo_desc,
										cd_centro_custo_desc,
										vl_juros,
										vl_multa,
										ie_selecionado)
							values (	null,
										NEW.nr_titulo,
										NEW.vl_titulo,
										LOCALTIMESTAMP,
										NEW.nm_usuario,
										cd_banco_w,
										cd_agencia_bancaria_w,
										nr_conta_w,
										NEW.cd_moeda,
										ie_digito_conta_w,
										cd_camara_compensacao_w,
										CASE WHEN ie_desc_previsto_w='S' THEN  coalesce(NEW.vl_desc_previsto,0) END  + coalesce((obter_dados_titulo_receber(NEW.nr_titulo,'VNC'))::numeric ,0),
										CASE WHEN ie_desc_previsto_w='S' THEN  coalesce(NEW.vl_desc_previsto,0)  ELSE 0 END ,
										0,
										nextval('titulo_receber_instr_seq'),
										0,
										NEW.vl_saldo_titulo,
										null,
										substr(obter_ocorrencia_envio_cre(ie_tipo_ocorrencia_w,cd_banco_w),1,3),
										'N',
										nr_seq_motivo_desc_w,
										cd_centro_custo_desc_w,
										CASE WHEN ie_juros_multa_w='S' THEN (obter_juros_multa_titulo(NEW.nr_titulo,LOCALTIMESTAMP,'R','J'))::numeric   ELSE null END ,
										CASE WHEN ie_juros_multa_w='S' THEN (obter_juros_multa_titulo(NEW.nr_titulo,LOCALTIMESTAMP,'R','M'))::numeric   ELSE null END ,
										'N');	
	
end if;

/* Grava o agendamento da informação para atualização do fluxo de caixa. */


CALL gravar_agend_fluxo_caixa(NEW.nr_titulo,null,'TR',coalesce(NEW.dt_pagamento_previsto,NEW.dt_vencimento),'A',NEW.nm_usuario);

end if;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_titulo_receber_after_update() FROM PUBLIC;

CREATE TRIGGER titulo_receber_after_update
	AFTER UPDATE ON titulo_receber FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_titulo_receber_after_update();

