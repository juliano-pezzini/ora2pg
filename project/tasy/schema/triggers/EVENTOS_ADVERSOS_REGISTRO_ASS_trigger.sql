-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS eventos_adversos_registro_ass ON eventos_adversos_registro CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_eventos_adversos_registro_ass() RETURNS trigger AS $BODY$
declare

qt_reg_w				smallint;
ie_lib_alerta_pac_w		parametro_medico.ie_lib_alerta_pac%type;

BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'N')  then
	goto Final;
end if;

select	max(ie_lib_alerta_pac)
into STRICT	ie_lib_alerta_pac_w
from	parametro_medico
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

if (coalesce(ie_lib_alerta_pac_w,'N') = 'S') then

	if (NEW.dt_liberacao is null) then
		CALL Gerar_registro_pendente_PEP('EVAD', NEW.nr_sequencia, NEW.cd_pessoa_fisica, null, NEW.nm_usuario);
	elsif (OLD.dt_liberacao is null) and (NEW.dt_liberacao is not null) then
		CALL Gerar_registro_pendente_PEP('XEVAD', NEW.nr_sequencia, NEW.cd_pessoa_fisica, null, NEW.nm_usuario);
	end if;

end if;

<<Final>>
qt_reg_w := 0;

RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_eventos_adversos_registro_ass() FROM PUBLIC;

CREATE TRIGGER eventos_adversos_registro_ass
	AFTER INSERT OR UPDATE ON eventos_adversos_registro FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_eventos_adversos_registro_ass();

