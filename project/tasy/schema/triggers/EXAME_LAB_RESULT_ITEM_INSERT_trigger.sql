-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS exame_lab_result_item_insert ON exame_lab_result_item CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_exame_lab_result_item_insert() RETURNS trigger AS $BODY$
declare
ie_vancocinemia_w		varchar(1);
nr_prescricao_w			bigint;

cd_estabelecimento_w	estabelecimento.cd_Estabelecimento%type;
ie_identifica_valor_w	lab_parametro.ie_identifica_valor%type;
nr_sequencia_padrao_w	bigint;
nr_seq_exame_w			exame_lab_result_item.nr_seq_exame%type;
nr_seq_metodo_w			exame_lab_result_item.nr_seq_metodo%type;
nr_seq_material_w		exame_lab_result_item.nr_seq_material%type;

nr_sequencia_criterio_w lab_valor_padrao_criterio.nr_sequencia%type;

ie_atual_ref_ger_laudo_w	varchar(1);
BEGIN
  BEGIN

if (NEW.nr_seq_resultado is not null) then
	select	max(nr_prescricao)
	into STRICT	nr_prescricao_w
	from	exame_lab_resultado
	where	nr_seq_resultado = NEW.nr_seq_resultado;
end if;

Cd_Estabelecimento_W  := Obter_Valores_Prescr_Trigger(Nr_Prescricao_W, 'E');

select 	coalesce(max(ie_atual_ref_ger_laudo),'N')
into STRICT	ie_atual_ref_ger_laudo_w
from	lab_parametro
where	cd_estabelecimento = cd_estabelecimento_w;

if (NEW.dt_aprovacao is not null) then

	select	coalesce(max(ie_vancocinemia), 'N')
	into STRICT	ie_vancocinemia_w
	from	exame_laboratorio
	where	nr_seq_exame = NEW.nr_seq_exame;

	if (ie_vancocinemia_w = 'S') then
		BEGIN
			CALL Gerar_resultado_vancocinemia(NEW.nm_usuario_aprovacao, null, nr_prescricao_w, 'S', LOCALTIMESTAMP, coalesce(NEW.qt_resultado, (replace(coalesce(NEW.ds_resultado_curto,NEW.ds_resultado),'.',','))::numeric ), 'N');
			exception when others then
				ie_vancocinemia_w	:= 'N';
		end;
	end if;
end if;

if (nr_prescricao_w is not null) then
	BEGIN
		NEW.ie_resultado_critico := Lab_obter_se_nao_aceitavel(nr_prescricao_w, NEW.nr_seq_prescr, NEW.nr_seq_exame, NEW.nr_seq_material, NEW.ds_resultado, NEW.qt_resultado, NEW.pr_resultado);
		exception when others then
			NEW.ie_resultado_critico := 'N';
	end;
	BEGIN
		NEW.ie_resultado_relevante := lab_obter_se_result_relev(nr_prescricao_w, NEW.nr_seq_prescr, NEW.nr_seq_exame, NEW.nr_seq_material, NEW.ds_resultado, NEW.qt_resultado, NEW.pr_resultado);
		exception when others then
			NEW.ie_resultado_relevante := 'N';
	end;
end if;

NEW.ds_obs_curta := SUBSTR(NEW.ds_observacao,1,255);


if (nr_prescricao_w is not null) then

	select	coalesce(max(nr_seq_exame), NEW.nr_seq_exame),
			coalesce(max(nr_seq_metodo), NEW.nr_seq_metodo),
			coalesce(max(nr_seq_material), NEW.nr_seq_material)
	into STRICT	nr_seq_exame_w,
			nr_seq_metodo_w,
			nr_seq_material_w
	from	Exame_lab_result_item
	where	nr_seq_resultado = NEW.nr_seq_resultado and
			nr_seq_prescr = NEW.nr_seq_prescr and
			nr_seq_material is not null;


    if((ie_atual_ref_ger_laudo_w = 'S') or (ie_atual_ref_ger_laudo_w = 'N') ) then
        SELECT * FROM define_reference_result_values(	nr_prescricao_w, NEW.nr_seq_prescr, NEW.nr_seq_resultado, NEW.qt_resultado, NEW.pr_resultado, NEW.ds_resultado, NEW.nr_seq_exame, nr_seq_material_w, nr_seq_metodo_w, NEW.qt_minima, NEW.qt_maxima, NEW.pr_minimo, NEW.pr_maximo, NEW.ds_referencia, NEW.ie_consiste, nr_sequencia_padrao_w, NEW.ds_mensagem_criterio, NEW.ie_acao_criterio_lote, nr_sequencia_criterio_w) INTO STRICT NEW.qt_minima, NEW.qt_maxima, NEW.pr_minimo, NEW.pr_maximo, NEW.ds_referencia, NEW.ie_consiste, nr_sequencia_padrao_w, NEW.ds_mensagem_criterio, NEW.ie_acao_criterio_lote, nr_sequencia_criterio_w;
    end if;

  select	coalesce(max(ie_identifica_valor), 'N')
  into STRICT	ie_identifica_valor_w
  from	lab_parametro
  where	cd_estabelecimento = cd_estabelecimento_w;

  if ((NEW.ie_normalidade <> 845) or (NEW.ie_normalidade is null)) then
    NEW.ie_normalidade := 758;
    if (coalesce(NEW.ds_resultado,'') <> '') and (NEW.DS_REFERENCIA is not null) then
      if (upper(NEW.ds_resultado) <> upper(NEW.DS_REFERENCIA)) then
        NEW.ie_normalidade := 760;
      end if;
    else
      if (ie_identifica_valor_w = 'N') then
        if (NEW.pr_minimo is not null AND NEW.pr_maximo is not null) and
           ((coalesce(NEW.pr_resultado,0) < NEW.PR_MINIMo) or (coalesce(NEW.pr_resultado,0) > NEW.pr_maximo)) then
          NEW.ie_normalidade := 760;
        end if;

        if (NEW.qt_minima is not null  and NEW.qt_maxima is not null) and
           ((coalesce(NEW.qt_resultado,0) < NEW.qt_minima) or (coalesce(NEW.qt_resultado,0) > NEW.qt_maxima)) then
          NEW.ie_normalidade := 760;
        end if;
      else
        if	(NEW.pr_minimo is not null AND NEW.pr_maximo is not null) then
          if (coalesce(NEW.pr_resultado,0) < NEW.PR_MINIMo) then
            NEW.ie_normalidade := 1088;
          elsif (coalesce(NEW.pr_resultado,0) > NEW.pr_maximo) then
            NEW.ie_normalidade := 1089;
          end if;
        end if;
        if	(NEW.qt_minima is not null AND NEW.qt_maxima is not null) then
          if (coalesce(NEW.qt_resultado,0) < NEW.qt_minima) then
            NEW.ie_normalidade := 1088;
          elsif (coalesce(NEW.qt_resultado,0) > NEW.qt_maxima) then
            NEW.ie_normalidade := 1089;
          end if;
        end if;
      end if;
    end if;
  end if;

end if;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_exame_lab_result_item_insert() FROM PUBLIC;

CREATE TRIGGER exame_lab_result_item_insert
	BEFORE INSERT ON exame_lab_result_item FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_exame_lab_result_item_insert();

