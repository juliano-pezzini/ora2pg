-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pessoa_juridica_afterinsert ON pessoa_juridica CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pessoa_juridica_afterinsert() RETURNS trigger AS $BODY$
declare
reg_integracao_p		gerar_int_padrao.reg_integracao;
cd_conta_pagamento_w	varchar(20);
cd_conta_recebimento_w	varchar(20);
cd_estabelecimento_w	integer;
dt_inicio_vigencia_w    timestamp;
dt_fim_vigencia_w       timestamp;
BEGIN
  BEGIN


select	coalesce(max(cd_conta_pagamento), 'X'),
	coalesce(max(cd_conta_recebimento), 'X'),
	coalesce(max(cd_estabelecimento), 0)
into STRICT	cd_conta_pagamento_w,
	cd_conta_recebimento_w,
	cd_estabelecimento_w
from	tipo_pessoa_juridica
where	cd_tipo_pessoa	= NEW.cd_tipo_pessoa
and	coalesce(ie_atualiza_pj, 'S') = 'S';



if (cd_conta_pagamento_w <> 'X') then

BEGIN
	select	dt_inicio_vigencia,
		dt_fim_vigencia
	into STRICT	dt_inicio_vigencia_w,
		dt_fim_vigencia_w
	from	conta_contabil
	where	cd_conta_contabil = cd_conta_pagamento_w;
	exception when others then
		dt_inicio_vigencia_w	:= null;
		dt_fim_vigencia_w	:= null;
end;


	insert into pessoa_jur_conta_cont(
		nr_sequencia,
		cd_cgc,
		cd_conta_contabil,
		dt_atualizacao,
		nm_usuario,
		cd_empresa,
		ie_tipo_conta,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_inicio_vigencia,
		dt_fim_vigencia,
		cd_estabelecimento)
	SELECT	nextval('pessoa_jur_conta_cont_seq'),
		NEW.cd_cgc,
		cd_conta_pagamento_w,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		a.cd_empresa,
		'P',
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		dt_inicio_vigencia_w,
		dt_fim_vigencia_w,
		CASE WHEN cd_estabelecimento_w=0 THEN  null  ELSE cd_estabelecimento_w END
	from	empresa a;
end if;


if (cd_conta_recebimento_w <> 'X') then

BEGIN
	select	dt_inicio_vigencia,
		dt_fim_vigencia
	into STRICT	dt_inicio_vigencia_w,
		dt_fim_vigencia_w
	from	conta_contabil
	where	cd_conta_contabil = cd_conta_recebimento_w;
	exception when others then
		dt_inicio_vigencia_w	:= null;
		dt_fim_vigencia_w	:= null;
end;

	insert into pessoa_jur_conta_cont(
		nr_sequencia,
		cd_cgc,
		cd_conta_contabil,
		dt_atualizacao,
		nm_usuario,
		cd_empresa,
		ie_tipo_conta,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_inicio_vigencia,
		dt_fim_vigencia,
		cd_estabelecimento)
	SELECT	nextval('pessoa_jur_conta_cont_seq'),
		NEW.cd_cgc,
		cd_conta_recebimento_w,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		a.cd_empresa,
		'R',
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		dt_inicio_vigencia_w,
		dt_fim_vigencia_w,
		CASE WHEN cd_estabelecimento_w=0 THEN  null  ELSE cd_estabelecimento_w END
	from	empresa a;
end if;

/* Projeto MXM (7077)  - Exportar cadastro pessoa juridica */

CALL gravar_agend_integracao(556,'CD_PESSOA_JURIDICA='||NEW.cd_cgc||';CD_PESSOA_FISICA='||null||';'); --Fornecedor
reg_integracao_p.ie_operacao		:=	'I';
reg_integracao_p.cd_tipo_pessoa		:=	NEW.cd_tipo_pessoa;
reg_integracao_p.cd_estab_documento	:=	wheb_usuario_pck.get_cd_estabelecimento;
reg_integracao_p := gerar_int_padrao.gravar_integracao('7', NEW.cd_cgc, NEW.nm_usuario, reg_integracao_p);

  END;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pessoa_juridica_afterinsert() FROM PUBLIC;

CREATE TRIGGER pessoa_juridica_afterinsert
	AFTER INSERT ON pessoa_juridica FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pessoa_juridica_afterinsert();

