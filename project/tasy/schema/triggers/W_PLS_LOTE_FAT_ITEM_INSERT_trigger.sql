-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS w_pls_lote_fat_item_insert ON w_pls_lote_fat_item CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_w_pls_lote_fat_item_insert() RETURNS trigger AS $BODY$
declare
 
qt_registro_w	integer := 0;
 
BEGIN 
select	count(1) 
into STRICT	qt_registro_w 
from	pls_lote_fat_lib 
where	nr_seq_lote_fat = NEW.nr_seq_lote;
 
if (qt_registro_w = 0) then 
	if (NEW.vl_item < 0) or (NEW.vl_item_ndc < 0) then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 281537, 'NR_SEQ_CONTA=' || NEW.nr_seq_conta || ';' || 'NR_SEQ_CONTA_POS=' || NEW.nr_seq_conta_pos );
	end if;
 
	-- OS 808183 - wcbernardino - Retirado do momento de gerar a fatura e colocado na "Consistir fatura" 
	/*select	count(1) 
	into	qt_registro_w 
	from	pls_conta_pos_estabelecido 
	where	nr_sequencia		= :new.nr_seq_conta_pos 
	and	ie_status_faturamento	<> 'N' 
	and	nvl(vl_beneficiario,0)	<> (	nvl(vl_custo_operacional,0) + nvl(vl_materiais,0) + nvl(vl_medico,0) + 
						nvl(vl_lib_taxa_servico,0) + nvl(vl_lib_taxa_co,0) + nvl(vl_lib_taxa_material,0)); 
						 
	if	(qt_registro_w > 0) then				 
		wheb_mensagem_pck.exibir_mensagem_abort(287945,'NR_SEQ_CONTA=' || :new.nr_seq_conta || ';' || 'NR_SEQ_CONTA_POS=' || :new.nr_seq_conta_pos); 
	end if; 
 
	select	count(1) 
	into	qt_registro_w 
	from	pls_conta_pos_estabelecido 
	where	nr_sequencia		= :new.nr_seq_conta_pos 
	and	ie_status_faturamento	<> 'N' 
	and	(nvl(vl_custo_operacional,0) + nvl(vl_materiais,0) + nvl(vl_medico,0)) <> :new.vl_item_ndc; 
 
	if	(qt_registro_w > 0) and 
		(:new.ie_tipo_cobranca not in ('3')) then				 
		wheb_mensagem_pck.exibir_mensagem_abort(288942,'NR_SEQ_CONTA=' || :new.nr_seq_conta || ';' || 'NR_SEQ_CONTA_POS=' || :new.nr_seq_conta_pos); 
	end if;*/
 
end if;
 
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_w_pls_lote_fat_item_insert() FROM PUBLIC;

CREATE TRIGGER w_pls_lote_fat_item_insert
	BEFORE INSERT OR UPDATE ON w_pls_lote_fat_item FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_w_pls_lote_fat_item_insert();

