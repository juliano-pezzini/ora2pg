-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS nota_fiscal_item_beforeinsert ON nota_fiscal_item CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_nota_fiscal_item_beforeinsert() RETURNS trigger AS $BODY$
declare


cd_natureza_operacao_w		smallint;
nr_seq_variacao_fiscal_w	bigint;
nr_seq_produto_w		bigint;
nr_seq_grupo_prod_w		bigint;
nr_ordem_compra_w		bigint;
qt_existe_w			integer;
cd_ext_material_w		bigint;
nr_solic_compra_w		solic_compra.nr_solic_compra%type;
nr_item_solic_compra_w		solic_compra_item.nr_item_solic_compra%type;
nr_seq_orc_item_gpi_w		nota_fiscal_item.nr_seq_orc_item_gpi%type;
nr_seq_orc_item_gpi_ww		nota_fiscal_item.nr_seq_orc_item_gpi%type;
ie_tipo_nota_w			nota_fiscal.ie_tipo_nota%type;
ie_entrada_saida_w		varchar(10);
ie_tipo_operacao_w		operacao_nota.ie_tipo_operacao%type;
cd_grupo_material_w     	grupo_material.cd_grupo_material%type;
cd_subgrupo_material_w     	subgrupo_material.cd_subgrupo_material%type;
cd_classe_material_w     	classe_material.cd_classe_material%type;
nr_seq_familia_w     		material.nr_seq_familia%type;


BEGIN

select	obter_dados_variacao_fiscal(NEW.nr_Sequencia, NEW.cd_material, 'N'),
	obter_dados_variacao_fiscal(NEW.nr_Sequencia, NEW.cd_material, 'S')
into STRICT	cd_natureza_operacao_w,
	nr_seq_variacao_fiscal_w
;

if (cd_natureza_operacao_w > 0) then
	NEW.cd_natureza_operacao		:= cd_natureza_operacao_w;
end if;

if (nr_seq_variacao_fiscal_w > 0) then
	NEW.nr_seq_variacao_fiscal		:= nr_seq_variacao_fiscal_w;
end if;

SELECT * FROM obter_produto_financeiro(NEW.cd_estabelecimento, null, null, nr_seq_produto_w, null, null, nr_seq_grupo_prod_w) INTO STRICT nr_seq_produto_w, nr_seq_grupo_prod_w;

if (coalesce(nr_seq_produto_w,0) > 0) then
	NEW.nr_seq_produto			:= nr_seq_produto_w;
end if;

if (TG_OP = 'INSERT') then
	BEGIN
	--Trazer dados do material

    if (NEW.cd_material IS NOT NULL) and (NEW.cd_material > 0) then
    BEGIN
        select
            gm.cd_grupo_material,
            sm.cd_subgrupo_material,
            cm.cd_classe_material,
            coalesce(m.nr_seq_familia, 0) as nr_seq_familia	
        into STRICT cd_grupo_material_w,
             cd_subgrupo_material_w,
             cd_classe_material_w,
             nr_seq_familia_w
        from material m,
            classe_material cm,
            subgrupo_material sm,
            grupo_material gm
        where m.cd_classe_material = cm.cd_classe_material
          and cm.cd_subgrupo_material = sm.cd_subgrupo_material
          and sm.cd_grupo_material = gm.cd_grupo_material
          and m.cd_material = NEW.cd_material;

        if (NEW.ie_tipo_programa is null) THEN
            NEW.ie_tipo_programa := obter_regra_prog_saude(NEW.cd_material, NEW.cd_estabelecimento, cd_grupo_material_w, cd_subgrupo_material_w,cd_classe_material_w,nr_seq_familia_w);
        end if;
        -- Buscar IE_CLASSIF_RENAME pelo caso venha vazio

        if (NEW.ie_classif_rename is null) THEN
            NEW.ie_classif_rename := obter_regra_rename(NEW.cd_material, NEW.cd_estabelecimento, cd_grupo_material_w, cd_subgrupo_material_w,cd_classe_material_w,nr_seq_familia_w);
        end if;
	end;
    end if;

	if (NEW.nr_solic_compra is not null) and (NEW.nr_item_solic_compra is not null) then
		
		select  max(nr_seq_orc_item_gpi)
		into STRICT	nr_seq_orc_item_gpi_w
		from	solic_compra_item
		where	nr_solic_compra		= NEW.nr_solic_compra
		and	nr_item_solic_compra	= NEW.nr_item_solic_compra;

		NEW.nr_seq_orc_item_gpi := nr_seq_orc_item_gpi_w;
	end if;
	end;
else
	BEGIN
	if (NEW.nr_solic_compra is not null) and (NEW.nr_item_solic_compra is not null) and (NEW.nr_seq_orc_item_gpi is null) and (OLD.nr_seq_orc_item_gpi is null) then
		
		select  max(nr_seq_orc_item_gpi)
		into STRICT	nr_seq_orc_item_gpi_w
		from	solic_compra_item
		where	nr_solic_compra	= NEW.nr_solic_compra
		and	nr_item_solic_compra = NEW.nr_item_solic_compra;

		NEW.nr_seq_orc_item_gpi := nr_seq_orc_item_gpi_w;
	end if;
	end;
end if;

if (TG_OP = 'INSERT') then

	select	coalesce(max(a.nr_ordem_compra),0),
		max(a.ie_tipo_nota),
		max(obter_se_Nota_entrada_saida(a.nr_sequencia)),
		max(b.ie_tipo_operacao)
	into STRICT	nr_ordem_compra_w,
		ie_tipo_nota_w,
		ie_entrada_saida_w,
		ie_tipo_operacao_w
	from	nota_fiscal a,
		operacao_nota b
	where	a.cd_operacao_nf = b.cd_operacao_nf
	and	a.nr_sequencia = NEW.nr_sequencia;
	
	select	count(*)

	into STRICT	qt_existe_w
	from	ordem_compra
	where	ie_origem_imp = 'MercadoEletronico'
	and	nr_ordem_compra = nr_ordem_compra_w;
	
	if (NEW.nr_solic_compra is not null) and (NEW.nr_item_solic_compra is not null)then
		
		select  max(nr_seq_orc_item_gpi)
		into STRICT	nr_seq_orc_item_gpi_w
		from	solic_compra_item
		where	nr_solic_compra = NEW.nr_solic_compra
		and	nr_item_solic_compra = NEW.nr_item_solic_compra;
	
			NEW.nr_seq_orc_item_gpi := nr_seq_orc_item_gpi_w;
	end if;
	
	if (qt_existe_w = 0) and (ie_tipo_nota_w <> 'ST') and (ie_entrada_saida_w = 'E') and (ie_tipo_operacao_w = '1') then
	
		select	coalesce((obter_cod_ext_material(NEW.cd_material,NEW.cd_estabelecimento))::numeric ,0)
		into STRICT	cd_ext_material_w
		;
	
		if (cd_ext_material_w > 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(216284,'CD_MATERIAL=' || NEW.cd_material ||';'|| 'DS_MATERIAL=' || obter_desc_material(NEW.cd_material));
		end if;
	
	end if;
	
end if;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_nota_fiscal_item_beforeinsert() FROM PUBLIC;

CREATE TRIGGER nota_fiscal_item_beforeinsert
	BEFORE INSERT OR UPDATE ON nota_fiscal_item FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_nota_fiscal_item_beforeinsert();

