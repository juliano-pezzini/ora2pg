-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS agenda_pac_proc_after_atual ON agenda_paciente_proc CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_agenda_pac_proc_after_atual() RETURNS trigger AS $BODY$
declare

ie_gerar_consent_w			varchar(1);
cd_pessoa_fisica_w			AGENDA_PACIENTE.CD_PESSOA_FISICA%TYPE;
cd_tipo_agenda_w			agenda.cd_tipo_agenda%type;
cd_agenda_w					agenda.cd_agenda%type;
cd_estab_agenda_w			agenda.cd_estabelecimento%type;
ie_status_agenda_w			AGENDA_PACIENTE.ie_status_agenda%type;
cd_medico_w					AGENDA_PACIENTE.cd_medico%type;
nr_atendimento_w            agenda_paciente.nr_atendimento%type;
BEGIN
  BEGIN
	BEGIN
	
	SELECT ap.CD_PESSOA_FISICA,
		   ap.CD_AGENDA, 
		   a.CD_TIPO_AGENDA, 
		   a.CD_ESTABELECIMENTO,
		   ap.ie_status_agenda,
		   ap.cd_medico,
		   ap.nr_atendimento
	  INTO STRICT cd_pessoa_fisica_w, 
		   cd_agenda_w, 
		   cd_tipo_agenda_w, 
		   cd_estab_agenda_w,
		   ie_status_agenda_w,
		   cd_medico_w,
		   nr_atendimento_w
	  FROM AGENDA_PACIENTE ap, 
		   agenda a
	 WHERE ap.NR_SEQUENCIA = NEW.NR_SEQUENCIA
	   and ap.cd_agenda = a.cd_agenda;

	ie_gerar_consent_w := Obter_Param_Usuario(820, 463, obter_perfil_ativo, NEW.nm_usuario, cd_estab_agenda_w, ie_gerar_consent_w);
	/*
	S - Agendamento ou Proc. Adicional
	N - Nao gera
	A - Somente Agendamento
	P - Somente Proc. Adicional
	*/


	if (cd_tipo_agenda_w = 2 and
		ie_status_agenda_w = 'N' and
		cd_pessoa_fisica_w is not null and
		((NEW.cd_procedimento is not null and (NEW.cd_procedimento <> OLD.cd_procedimento or NEW.ie_origem_proced <> OLD.ie_origem_proced or OLD.cd_procedimento is null)) or (NEW.nr_seq_proc_interno is not null and (OLD.nr_seq_proc_interno <> NEW.nr_seq_proc_interno or OLD.nr_Seq_proc_interno is null)) and 
		 ie_gerar_consent_w in ('S','P'))) then
		 
			CALL agendas_inserir_consentimentos(
					cd_tipo_agenda_w,
					NEW.NR_SEQUENCIA,
					NEW.cd_procedimento,
					NEW.ie_origem_proced,
					NEW.nr_seq_proc_interno,
					cd_pessoa_fisica_w,
					cd_medico_w,
					cd_estab_agenda_w,
					nr_atendimento_w);
	end if;	
	
	exception when others then
		null;
	end;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_agenda_pac_proc_after_atual() FROM PUBLIC;

CREATE TRIGGER agenda_pac_proc_after_atual
	AFTER INSERT OR UPDATE ON agenda_paciente_proc FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_agenda_pac_proc_after_atual();

