-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS atendimento_paciente_delete ON atendimento_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_atendimento_paciente_delete() RETURNS trigger AS $BODY$
DECLARE
dt_atualizacao 			timestamp := LOCALTIMESTAMP;
qt_crm_atendimentos_w		bigint;
ie_integracao_dynamics_w	varchar(1);
ie_consiste_conv_part		varchar(1);
reg_integracao_w		gerar_int_padrao.reg_integracao;
qt_existe_setor_w		bigint;
BEGIN
  BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then

BEGIN

update	agenda_consulta
set	ie_status_agenda	= 'N',
	nr_atendimento	 = NULL
where	nr_atendimento	= OLD.nr_atendimento;

update	agenda_paciente
set	ie_status_agenda	= 'N',
	nr_atendimento	 = NULL
where	nr_atendimento	= OLD.nr_atendimento;

update	checkup
set	ie_status_agenda = 'N',
	nr_atendimento  = NULL
where	nr_atendimento = OLD.nr_atendimento;

select	coalesce(max(ie_integracao_dynamics),'N')
into STRICT	ie_integracao_dynamics_w
from	parametro_atendimento
where	cd_estabelecimento = OLD.cd_estabelecimento;

-- Atualiza tabela de integracao CRM_ATENDIMENTOS

if (ie_integracao_dynamics_w = 'S') then
	select	count(*)
	into STRICT	qt_crm_atendimentos_w
	from	crm_atendimentos
	where	nr_atendimento = OLD.nr_atendimento;

	if (qt_crm_atendimentos_w > 0) then
		update	crm_atendimentos
		set	ie_status	= 4,
			dt_atualizacao	= LOCALTIMESTAMP,
			nm_usuario	= OLD.nm_usuario
		where	nr_atendimento 	= OLD.nr_atendimento;
	end if;
end if;

SELECT 'S'
into STRICT ie_consiste_conv_part
FROM PARAMETRO_ATENDIMENTO
WHERE IE_SOLIC_PLANO_PART = 'S'
and cd_estabelecimento = obter_estabelecimento_ativo  LIMIT 1;
if (ie_consiste_conv_part is not null) then
	UPDATE  CONVENIO_PARTICULAR_ATEND
	SET	ds_observacao = substr(obter_desc_expressao(774847)||CHR(13)||ds_observacao,1,255)
	WHERE 	nr_atendimento = OLD.nr_atendimento;
end if;

/* 
Ivan em 15/06/2007 OS59726 - 
Criada Trigger After Delete e incluido geracao do log nela

insert into log_exclusao (
	dt_atualizacao,
	nm_usuario,
	nm_tabela,
	ds_chave)
values (
	:old.dt_atualizacao,
	:old.nm_usuario,
	'ATENDIMENTO_PACIENTE',
	'nr_Atendimento=' || :old.nr_atendimento);
*/


exception
	when others then
      	dt_atualizacao := LOCALTIMESTAMP;
end;

BEGIN
select	1
into STRICT	qt_existe_setor_w
from	int_disp_movt_pac
where	nr_atendimento = OLD.nr_atendimento  LIMIT 1;
exception
when others then
	qt_existe_setor_w := 0;
end;	
if (qt_existe_setor_w > 0) then
	--intdisp_gerar_movimento(:old.nr_atendimento, 'EPD');

	CALL intdisp_gerar_movto_estor(OLD.nr_atendimento);
end if;

/*Desvincular a prescricao e o atendimento da prevenda, quando deleta*/


update	pre_venda_item
set	nr_atendimento  = NULL,
	nr_prescricao  = NULL,
	nr_seq_interno  = NULL
where	nr_prescricao = NEW.nr_atendimento;

UPDATE pessoa_fisica_aux SET nr_primeiro_atend  = NULL WHERE nr_primeiro_atend = NEW.nr_atendimento;

end if;
  END;
RETURN OLD;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_atendimento_paciente_delete() FROM PUBLIC;

CREATE TRIGGER atendimento_paciente_delete
	BEFORE DELETE ON atendimento_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_atendimento_paciente_delete();

