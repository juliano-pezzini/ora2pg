-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS item_requisicao_material_atual ON item_requisicao_material CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_item_requisicao_material_atual() RETURNS trigger AS $BODY$
declare
qt_existe_w			bigint;
ie_integra_w			varchar(1) := 'N';
ds_enter_w			varchar(3) := chr(13) || chr(10);
ds_origem_w			varchar(2000);
ds_param_integ_hl7_w		varchar(4000) := '';
ie_verificar_w			varchar(1) := 'N';
cd_centro_custo_w		centro_custo.cd_centro_custo%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_local_estoque_destino_w	local_estoque.cd_local_estoque%type;
cd_operacao_estoque_w		operacao_estoque.cd_operacao_estoque%type;
dt_liberacao_w			requisicao_material.dt_liberacao%type;
cd_local_estoque_w		local_estoque.cd_local_estoque%type;
cd_pessoa_requisitante_w	pessoa_fisica.cd_pessoa_fisica%type;
ie_origem_requisicao_w		requisicao_material.ie_origem_requisicao%type;

reg_integracao_p		gerar_int_padrao.reg_integracao;

ie_setor_athena_w				varchar(1) := 'N';
ie_setor_supply_w				varchar(1) := 'N';
BEGIN
  BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then

select	count(*)
into STRICT	qt_existe_w
from	sup_parametro_integracao a,
	sup_int_regra_req b
where	a.nr_sequencia = b.nr_seq_integracao
and	a.ie_evento = 'RM'
and	a.ie_forma = 'E'
and	a.ie_situacao = 'A';


select	cd_estabelecimento,
	cd_local_estoque,
	cd_local_estoque_destino,
	cd_operacao_estoque,
	cd_centro_custo,
	ie_origem_requisicao,
	dt_liberacao,
	cd_pessoa_requisitante	
into STRICT	cd_estabelecimento_w,
	cd_local_estoque_w,
	cd_local_estoque_destino_w,
	cd_operacao_estoque_w,
	cd_centro_custo_w,
	ie_origem_requisicao_w,
	dt_liberacao_w,
	cd_pessoa_requisitante_w
from	requisicao_material
where	nr_requisicao = NEW.nr_requisicao;


BEGIN
ds_origem_w	:= 	null;

if	(	(TG_OP = 'INSERT') or
	(	(TG_OP = 'UPDATE') and
		((coalesce(NEW.cd_motivo_baixa,0) <> coalesce(OLD.cd_motivo_baixa,0)) or (coalesce(NEW.qt_material_atendida,0) <> coalesce(OLD.qt_material_atendida,0)) or (NEW.dt_atendimento is null and OLD.dt_atendimento is not null) or (NEW.dt_atendimento is not null and OLD.dt_atendimento is null)))) then
	ie_verificar_w	:= 'S';
end if;

if (ie_verificar_w = 'S') then
	BEGIN
	if (coalesce(NEW.cd_motivo_baixa,0) = 0) and (coalesce(NEW.qt_material_atendida,0) > 0) then
		ds_origem_w := substr(WHEB_MENSAGEM_PCK.get_texto(303094,
					'NR_SEQ_W='|| '1' ||
					';NR_REQUISICAO_W='|| NEW.nr_requisicao ||
					';NR_SEQUENCIA_W='|| NEW.nr_sequencia ||
					';NM_ESTACAO_W='|| substr(wheb_usuario_pck.get_nm_estacao,1,80) ||
					';DS_FUNCAO_W='|| coalesce(obter_funcao_ativa,0) ||
					';DS_PERFIL_W='|| coalesce(obter_perfil_ativo,0) ||
					';NM_USUARIO_W='|| obter_usuario_ativo ||
					';DS_RETORNO_W='|| substr(dbms_utility.format_call_stack,1,1800)),1,2000);
					
					/*NR_SEQ_W - NR_REQUISICAO_W - NR_SEQUENCIA_W
					Estacoo: NM_ESTACAO_W
					Funcoo: DS_FUNCAO_W
					Perfil: DS_PERFIL_W
					Usuario: NM_USUARIO_W

					DS_RETORNO_W*/
					
	elsif (NEW.dt_atendimento is not null) and (coalesce(NEW.cd_motivo_baixa,0) = 0) then
		ds_origem_w := substr(WHEB_MENSAGEM_PCK.get_texto(303094,
					'NR_SEQ_W='|| '2' ||
					';NR_REQUISICAO_W='|| NEW.nr_requisicao ||
					';NR_SEQUENCIA_W='|| NEW.nr_sequencia ||
					';NM_ESTACAO_W='|| substr(wheb_usuario_pck.get_nm_estacao,1,80) ||
					';DS_FUNCAO_W='|| coalesce(obter_funcao_ativa,0) ||
					';DS_PERFIL_W='|| coalesce(obter_perfil_ativo,0) ||
					';NM_USUARIO_W='|| obter_usuario_ativo ||
					';DS_RETORNO_W='|| substr(dbms_utility.format_call_stack,1,1800)),1,2000);
	elsif (NEW.cd_motivo_baixa is null) then
		ds_origem_w := substr(WHEB_MENSAGEM_PCK.get_texto(303094,
					'NR_SEQ_W='|| '3' ||
					';NR_REQUISICAO_W='|| NEW.nr_requisicao ||
					';NR_SEQUENCIA_W='|| NEW.nr_sequencia ||
					';NM_ESTACAO_W='|| substr(wheb_usuario_pck.get_nm_estacao,1,80) ||
					';DS_FUNCAO_W='|| coalesce(obter_funcao_ativa,0) ||
					';DS_PERFIL_W='|| coalesce(obter_perfil_ativo,0) ||
					';NM_USUARIO_W='|| obter_usuario_ativo ||
					';DS_RETORNO_W='|| substr(dbms_utility.format_call_stack,1,1800)),1,2000);
	end if;
	end;
end if;

if (coalesce(ds_origem_w,'X') <> 'X') then
	BEGIN
	if (TG_OP = 'INSERT') then
		ds_origem_w := substr('Insert - ' || ds_origem_w,1,2000);
	else
		ds_origem_w := substr('Update - ' || ds_origem_w,1,2000);
	end if;
	
	insert into requisicao_mat_historico(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		nr_requisicao,
		dt_historico,
		ds_titulo,
		ds_historico,
		ie_tipo,
		dt_liberacao,
		nm_usuario_lib,
		cd_evento)
	values (
		nextval('requisicao_mat_historico_seq'),
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		NEW.nr_requisicao,
		LOCALTIMESTAMP,
		Wheb_mensagem_pck.get_Texto(303098), /*'Historico da requisicao com motivo de baixa nula',*/
		ds_origem_w,
		'S',
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		'LB');
		--gravar_log_tasy(88929,ds_origem_w,:new.nm_usuario);
	end;
end if;

if (coalesce(OLD.qt_estoque,0) > 0) and (NEW.qt_estoque = 0) then
	BEGIN	
	
	if (dt_liberacao_w is not null) then
		BEGIN
		ds_origem_w := substr(WHEB_MENSAGEM_PCK.get_texto(303099,
					'SEQ_W='|| '3' ||
					';NR_REQUISICAO_W='|| NEW.nr_requisicao ||
					';NR_SEQUENCIA_W='|| NEW.nr_sequencia ||
					';CD_MOTIVO_BAIXA_W='|| NEW.cd_motivo_baixa ||
					';DS_RETORNO_W='|| substr(dbms_utility.format_call_stack,1,1800)),1,2000);
					
					/*#EQ_W - NR_REQUISICAO_W - NR_SEQUENCIA_W - Motivo: CD_MOTIVO_BAIXA_W DS_RETORNO_W*/

		--gravar_log_tasy(88929,ds_origem_w,:new.nm_usuario);
		end;
	end if;
	end;
end if;

exception
when others then
	ds_origem_w := null;
end;

if (qt_existe_w > 0) then
	BEGIN
	
	
	if (coalesce(OLD.qt_material_atendida,0) = 0) and (coalesce(NEW.qt_material_atendida,0) > 0) and (obter_tipo_motivo_baixa_req(coalesce(OLD.cd_motivo_baixa,0)) = 0) and (obter_tipo_motivo_baixa_req(coalesce(NEW.cd_motivo_baixa,0)) > 0) then
		BEGIN
		select	count(*)
		into STRICT	qt_existe_w
		from	sup_parametro_integracao a,
			sup_int_regra_req b
		where	a.nr_sequencia = b.nr_seq_integracao
		and	a.ie_evento = 'RM'
		and	a.ie_forma = 'E'
		and	a.ie_situacao = 'A'		
		and	b.ie_atende = 'A';

		if (qt_existe_w > 0) then			
			ie_integra_w := substr(obter_se_integra_item_req(NEW.nr_requisicao, cd_local_estoque_w, cd_local_estoque_destino_w, cd_operacao_estoque_w, NEW.cd_material, 'A'),1,1);
		end if;
		end;
	elsif (coalesce(NEW.qt_material_atendida,0) = 0) and (obter_tipo_motivo_baixa_req(coalesce(NEW.cd_motivo_baixa,0)) = 0) and (OLD.dt_aprovacao is null) and (NEW.dt_aprovacao is not null) then
		BEGIN
		select	count(*)
		into STRICT	qt_existe_w
		from	sup_parametro_integracao a,
			sup_int_regra_req b
		where	a.nr_sequencia = b.nr_seq_integracao
		and	a.ie_evento = 'RM'
		and	a.ie_forma = 'E'
		and	a.ie_situacao = 'A'		
		and	b.ie_atende = 'L';

		if (qt_existe_w > 0) then			
			ie_integra_w := substr(obter_se_integra_item_req(NEW.nr_requisicao, cd_local_estoque_w, cd_local_estoque_destino_w, cd_operacao_estoque_w, NEW.cd_material, 'L'),1,1);
		end if;
		end;
	end if;
	if (ie_integra_w = 'S') then			
		CALL sup_carrega_itens_atend_req(	
			NEW.nr_requisicao,
			NEW.nr_Sequencia,
			NEW.cd_unidade_medida,
			NEW.cd_estabelecimento,
			NEW.dt_atendimento,
			NEW.cd_pessoa_recebe,
			NEW.cd_pessoa_atende,
			NEW.ie_acao,
			NEW.cd_motivo_baixa,
			NEW.qt_estoque,
			NEW.cd_unidade_medida_estoque,
			NEW.cd_conta_contabil,
			NEW.cd_material,
			NEW.cd_material_req,
			NEW.nr_seq_lote_fornec,
			NEW.cd_cgc_fornecedor,
			NEW.qt_material_requisitada,
			NEW.ds_observacao,
			NEW.nm_usuario_retirada,
			NEW.ds_justificativa,
			NEW.ds_justificativa_atend,
			NEW.qt_material_atendida,
			NEW.cd_material_lido,
			NEW.ie_geracao,
			NEW.vl_material,
			NEW.nr_documento_externo,
			NEW.nr_item_docto_externo,
			NEW.nm_usuario_aprov,
			NEW.dt_aprovacao,
			NEW.vl_unit_previsto,
			NEW.dt_reprovacao,
			NEW.nr_seq_cor_exec,
			NEW.vl_preco_venda,
			NEW.nr_seq_etapa_gpi,
			NEW.ie_msg_estoque_max,
			NEW.qt_estoque_superou,
			NEW.nr_seq_aprovacao,
			NEW.cd_kit_material,
			NEW.nm_usuario);
	end if;
	end;
end if;

-- Swisslog / SupplyPoint / Athena
if (TG_OP = 'UPDATE') and (coalesce(OLD.cd_motivo_baixa,0) = 0) and (coalesce(NEW.cd_motivo_baixa,0) = 1) and (coalesce(NEW.qt_material_atendida,0) > 0) then
	BEGIN
	select	count(1)
	into STRICT	qt_existe_w
	from	far_setores_integracao
	where	nr_seq_empresa_int = 76  LIMIT 1;
	
	if (qt_existe_w > 0) then
		select	CASE WHEN coalesce(max(1),0)=1 THEN 'S'  ELSE 'N' END
		into STRICT	ie_integra_w
		from	parametros_farmacia
		where	cd_pessoa_requisicao = cd_pessoa_requisitante_w
		and	cd_estabelecimento = NEW.cd_estabelecimento;
		
		if (ie_integra_w = 'S') then
			ds_param_integ_hl7_w := 'nr_requisicao=' || NEW.nr_requisicao || obter_separador_bv || 'nr_sequencia=' || NEW.nr_sequencia || obter_separador_bv;
			CALL swisslog_gerar_integracao(441, ds_param_integ_hl7_w);
		end if;
	end if;

	SELECT CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'S' END
	INTO STRICT ie_setor_supply_w
	FROM far_setores_integracao
	WHERE nr_seq_empresa_int = 82  LIMIT 1;

	SELECT CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'S' END
	INTO STRICT ie_setor_athena_w
	FROM far_setores_integracao
	WHERE nr_seq_empresa_int = 221  LIMIT 1;

	select	CASE WHEN coalesce(max(1),0)=1 THEN 'S'  ELSE 'N' END
	into STRICT	ie_integra_w
	from	parametros_farmacia
	where	cd_pessoa_requisicao = cd_pessoa_requisitante_w
	and	cd_estabelecimento = NEW.cd_estabelecimento;

	if (ie_setor_supply_w = 'S' and ie_setor_athena_w = 'S')  then

		SELECT CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'S' END
		INTO STRICT ie_setor_supply_w
		FROM empresa_integracao a, 
			far_setores_integracao b,
			far_local_cc_int c
		WHERE b.nr_seq_empresa_int = 82
		AND  c.cd_local_estoque =  cd_local_estoque_destino_w
		AND  a.nr_sequencia = b.nr_seq_empresa_int
		AND  c.nr_seq_far_setores = b.nr_sequencia  LIMIT 1;

		SELECT CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'S' END
		INTO STRICT ie_setor_athena_w
		FROM empresa_integracao a, 
			far_setores_integracao b,
			far_local_cc_int c
		WHERE b.nr_seq_empresa_int = 221
		AND (c.cd_local_estoque =  cd_local_estoque_destino_w) or (c.cd_local_estoque =  cd_local_estoque_w)
		AND  a.nr_sequencia = b.nr_seq_empresa_int
		AND  c.nr_seq_far_setores = b.nr_sequencia  LIMIT 1;	
		
		if (ie_integra_w = 'S') then
			ds_param_integ_hl7_w := 'nr_requisicao=' || NEW.nr_requisicao || obter_separador_bv || 'nr_sequencia=' || NEW.nr_sequencia || obter_separador_bv;
			
			if (ie_setor_supply_w = 'S') then
				CALL gravar_agend_integracao(441, ds_param_integ_hl7_w);
			end if;

			if (ie_setor_athena_w = 'S') then
				gravar_agend_integracao(918, ds_param_integ_hl7_w);
			end if;
		end if;

	elsif (ie_setor_supply_w = 'S' or ie_setor_athena_w = 'S')  then
			
		if (ie_integra_w = 'S') then
			ds_param_integ_hl7_w := 'nr_requisicao=' || NEW.nr_requisicao || obter_separador_bv || 'nr_sequencia=' || NEW.nr_sequencia || obter_separador_bv;
			
			if (ie_setor_supply_w = 'S') then
				CALL gravar_agend_integracao(441, ds_param_integ_hl7_w);
			elsif (ie_setor_supply_w = 'S') then
				CALL gravar_agend_integracao(918, ds_param_integ_hl7_w);
			end if;
		end if;

	end if;
		
	CALL gerar_int_dankia_pck.dankia_disp_barras_req(NEW.cd_material, NEW.nr_seq_lote_fornec, NEW.qt_material_atendida, NEW.cd_barras, NEW.nm_usuario, cd_local_estoque_destino_w);
	CALL gerar_int_dankia_pck.dankia_disp_item_transf(NEW.cd_material, NEW.cd_barras, NEW.nr_requisicao, NEW.nr_sequencia, NEW.qt_material_atendida, cd_local_estoque_destino_w, cd_local_estoque_w, NEW.nm_usuario,cd_estabelecimento_w, 'I',NEW.nr_seq_lote_fornec);
	
	exception
	when others then
		null;
	end;
end if;
-- Swisslog / SupplyPoint / Athena
if (TG_OP = 'UPDATE') and (coalesce(OLD.cd_motivo_baixa,0) = 1) and (coalesce(NEW.cd_motivo_baixa,0) = 0) and (coalesce(NEW.qt_material_atendida,0) = 0) then
	BEGIN
	CALL gerar_int_dankia_pck.dankia_disp_item_transf(OLD.cd_material, OLD.cd_barras, OLD.nr_requisicao, OLD.nr_sequencia, OLD.qt_material_atendida, cd_local_estoque_destino_w, cd_local_estoque_w, NEW.nm_usuario,cd_estabelecimento_w, 'E', OLD.nr_seq_lote_fornec);
	exception
	when others then
		null;
	end;
end if;

/*INTPD - Envia Baixa do item da requisicao*/

ie_integra_w := 'N';
if (OLD.dt_atendimento is null) and (NEW.dt_atendimento is not null) then
	reg_integracao_p.ie_operacao	:=	'I';
	ie_integra_w 			:= 'S';
elsif (OLD.dt_atendimento is not null) and (NEW.dt_atendimento is null) then
	reg_integracao_p.ie_operacao	:=	'A';
	ie_integra_w 			:= 'S';
end if;

if (ie_integra_w = 'S') then
	reg_integracao_p.cd_estab_documento		:=	cd_estabelecimento_w;
	reg_integracao_p.cd_local_estoque		:=	cd_local_estoque_w;
	reg_integracao_p.cd_local_estoque_destino	:=	cd_local_estoque_destino_w;
	reg_integracao_p.cd_centro_custo		:=	cd_centro_custo_w;
	reg_integracao_p.cd_operacao_estoque		:=	cd_operacao_estoque_w;
	reg_integracao_p.ds_id_origin			:=	ie_origem_requisicao_w;
	reg_integracao_p.nr_seq_item_documento_p	:=	NEW.nr_sequencia;
	reg_integracao_p := gerar_int_padrao.gravar_integracao('56', NEW.nr_requisicao, NEW.nm_usuario, reg_integracao_p);
end if;
end if;
  END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_item_requisicao_material_atual() FROM PUBLIC;

CREATE TRIGGER item_requisicao_material_atual
	AFTER INSERT OR UPDATE ON item_requisicao_material FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_item_requisicao_material_atual();

