-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS sup_normas_compras_insert ON sup_normas_compras CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_sup_normas_compras_insert() RETURNS trigger AS $BODY$
declare
nr_sequencia_w		bigint;

PRAGMA AUTONOMOUS_TRANSACTION;

BEGIN

select	coalesce(max(a.nr_sequencia),0)
into STRICT	nr_sequencia_w
from	sup_normas_compras a
where	a.ie_situacao = 'A'
and	a.cd_estabelecimento	= NEW.cd_estabelecimento
and	a.nr_sequencia		<> NEW.nr_sequencia
and	coalesce(a.cd_grupo_material,0)	= coalesce(NEW.cd_grupo_material,0)
and	coalesce(a.cd_subgrupo_material,0)	= coalesce(NEW.cd_subgrupo_material,0)
and	coalesce(a.cd_classe_material,0)	= coalesce(NEW.cd_classe_material,0)
and	coalesce(a.cd_material,0)		= coalesce(NEW.cd_material,0)
and	coalesce(a.nr_seq_familia,0)	= coalesce(NEW.nr_seq_familia,0)
and	coalesce(a.cd_perfil,0)		= coalesce(NEW.cd_perfil,0)
and	coalesce(a.cd_centro_custo,0)	= coalesce(NEW.cd_centro_custo,0)
and	coalesce(a.ie_tipo_servico,'XX')	= coalesce(NEW.ie_tipo_servico,'XX')
and	((a.ie_material_estoque	= NEW.ie_material_estoque) or
	((a.ie_material_estoque	= 'A') and (NEW.ie_material_estoque in ('S','N'))) or
	((a.ie_material_estoque	in ('S','N')) and (NEW.ie_material_estoque = 'A')))
and	((a.ie_padronizado = NEW.ie_padronizado) or
	((a.ie_padronizado = 'A') and (NEW.ie_padronizado in ('S','N'))) or
	((a.ie_padronizado in ('S','N')) and (NEW.ie_padronizado = 'A')))
and	((a.ie_urgente = NEW.ie_urgente) or
	((a.ie_urgente = 'A') and (NEW.ie_urgente in ('S','N'))) or
	((a.ie_urgente in ('S','N')) and (NEW.ie_urgente = 'A')));

if (nr_sequencia_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(217597,'NR_SEQUENCIA_W='||nr_sequencia_w);
end if;

RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_sup_normas_compras_insert() FROM PUBLIC;

CREATE TRIGGER sup_normas_compras_insert
	AFTER INSERT OR UPDATE ON sup_normas_compras FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_sup_normas_compras_insert();

