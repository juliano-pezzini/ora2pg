-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS diagnostico_admissao_ins_upd ON diagnostico_admissao_atend CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_diagnostico_admissao_ins_upd() RETURNS trigger AS $BODY$
DECLARE

  json_aux_bb                 philips_json;
  envio_integracao_bb         text;
  retorno_integracao_bb       text;
  ds_integracao_orgao_bb      ORGAO_DIAGNOSTICO_ADMISSAO.DS_INTEGRACAO%TYPE;
  ds_integracao_admissao_bb   DIAGNOSTICO_ADMISSAO.DS_INTEGRACAO%TYPE;
  ie_operacao_bb              DIAGNOSTICO_ADMISSAO.IE_OPERACAO%TYPE;
BEGIN
  BEGIN
IF (wheb_usuario_pck.get_ie_executar_trigger = 'S') THEN
  IF (OBTER_SE_INTEGRACAO_ATIVA(968, 245) = 'S') THEN
    BEGIN
      SELECT  ds_integracao
      INTO STRICT    ds_integracao_orgao_bb
      FROM    ORGAO_DIAGNOSTICO_ADMISSAO
      WHERE   NR_SEQUENCIA = NEW.nr_seq_orgao;
    EXCEPTION
      WHEN no_data_found THEN
        ds_integracao_orgao_bb := NULL;
    END;

    BEGIN
      SELECT  ds_integracao, ie_operacao
      INTO STRICT    ds_integracao_admissao_bb, ie_operacao_bb
      FROM    DIAGNOSTICO_ADMISSAO
      WHERE   NR_SEQUENCIA = NEW.nr_seq_diagnostico;
    EXCEPTION
      WHEN no_data_found THEN
        ds_integracao_admissao_bb := NULL;
        ie_operacao_bb := NULL;
    END;

    json_aux_bb := philips_json();
    json_aux_bb.put('typeID', 'ADMITDIAG');
    json_aux_bb.put('messageDateTime', TO_CHAR((CURRENT_TIMESTAMP AT TIME ZONE 'UTC'), 'YYYY-MM-DD HH24:MI:SS.SSSSS'));
    json_aux_bb.put('patientHealthSystemStayID', LPAD(NEW.nr_atendimento, 32, 0));
    json_aux_bb.put('admissionDiagnosisID', LPAD(NEW.nr_sequencia, 32, 0));

    IF (NEW.ie_operacao = 'S') THEN
      json_aux_bb.put('admittedFromOR', 'True');
    ELSE
      json_aux_bb.put('admittedFromOR', 'False');
    END IF;

    IF (NEW.ie_eletiva = 'S') THEN
      json_aux_bb.put('admittedElective', 'True');
    ELSE
      json_aux_bb.put('admittedElective', 'False');
    END IF;

    json_aux_bb.put('objectID1', ds_integracao_orgao_bb);
    json_aux_bb.put('objectID2', ds_integracao_admissao_bb);

    IF (ie_operacao_bb IS NOT NULL AND ie_operacao_bb = 'S') THEN
      json_aux_bb.put('objectID3', 'fce7534340a84c5788463850b29a9c43');
    ELSE
      json_aux_bb.put('objectID3', 'cb3a7d6ae4ec431a8c7e3273dd118a8e');
    END IF;

    dbms_lob.createtemporary(envio_integracao_bb, TRUE);
    json_aux_bb.(envio_integracao_bb);
    SELECT BIFROST.SEND_INTEGRATION_CONTENT('Blackboard_Admission_Diagnosis',envio_integracao_bb,wheb_usuario_pck.get_nm_usuario) into STRICT retorno_integracao_bb;
  END IF;
END IF;
  END;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_diagnostico_admissao_ins_upd() FROM PUBLIC;

CREATE TRIGGER diagnostico_admissao_ins_upd
	AFTER INSERT OR UPDATE ON diagnostico_admissao_atend FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_diagnostico_admissao_ins_upd();

