-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pf_pront_estab_afterup ON pessoa_fisica_pront_estab CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pf_pront_estab_afterup() RETURNS trigger AS $BODY$
DECLARE
reg_integracao_w   gerar_int_padrao.reg_integracao;
qt_existe_w        integer;
nr_cpf_w           pessoa_fisica.nr_cpf%TYPE;
nr_seq_conselho_w  pessoa_fisica.nr_seq_conselho%TYPE;
nr_prontuario_w    pessoa_fisica.nr_prontuario%TYPE;
ie_funcionario_w   reg_integracao_w.ie_funcionario%TYPE;
BEGIN
  BEGIN
    IF (wheb_usuario_pck.get_ie_executar_trigger = 'S' ) THEN
      BEGIN
            SELECT nr_prontuario,
                    ie_funcionario,
                    nr_cpf,
                    nr_seq_conselho
            INTO STRICT nr_prontuario_w, ie_funcionario_w, nr_cpf_w, nr_seq_conselho_w
            FROM pessoa_fisica
        WHERE cd_pessoa_fisica = NEW.cd_pessoa_fisica;
      EXCEPTION
        WHEN no_data_found THEN
            nr_prontuario_w   := null;
            ie_funcionario_w  := null;
            nr_cpf_w          := null;
            nr_seq_conselho_w := null;
        WHEN too_many_rows THEN
            nr_prontuario_w   := null;
            ie_funcionario_w  := null;
            nr_cpf_w          := null;
            nr_seq_conselho_w := null;
      END;

            reg_integracao_w.ie_operacao := 'A';
            reg_integracao_w.nr_prontuario := coalesce(nr_prontuario_w, NEW.nr_prontuario);
            reg_integracao_w.cd_pessoa_fisica := NEW.cd_pessoa_fisica;
            reg_integracao_w.ie_funcionario := coalesce(ie_funcionario_w, 'N');
            reg_integracao_w.nr_seq_conselho := nr_seq_conselho_w;

      BEGIN
            SELECT CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'S' END 
            INTO STRICT reg_integracao_w.ie_pessoa_atend
            FROM pessoa_fisica_aux
            WHERE cd_pessoa_fisica = NEW.cd_pessoa_fisica
                  AND nr_primeiro_atend IS NOT NULL;
      EXCEPTION
        WHEN no_data_found THEN
            reg_integracao_w.ie_pessoa_atend := 'N';
      END;

            IF (nr_cpf_w IS NOT NULL) 
                THEN reg_integracao_w.ie_possui_cpf := 'S';
            END IF;

            IF (wheb_usuario_pck.get_ie_lote_contabil = 'N') THEN 
                reg_integracao_p => reg_integracao_w := gerar_int_padrao.gravar_integracao(ie_evento_p => '12', nr_seq_documento_p => NEW.cd_pessoa_fisica, nm_usuario_p => NEW.nm_usuario, reg_integracao_p => reg_integracao_w);
            END IF;
    END IF;
  END;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pf_pront_estab_afterup() FROM PUBLIC;

CREATE TRIGGER pf_pront_estab_afterup
	AFTER INSERT OR UPDATE ON pessoa_fisica_pront_estab FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pf_pront_estab_afterup();

