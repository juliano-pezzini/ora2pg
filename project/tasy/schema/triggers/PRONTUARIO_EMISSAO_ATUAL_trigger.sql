-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS prontuario_emissao_atual ON prontuario_emissao CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_prontuario_emissao_atual() RETURNS trigger AS $BODY$
DECLARE
 ds_param_integ_hl7_w varchar(4000);
 ie_case_paciente_w	varchar(1) := 'N';
 nr_atendimento_episodio_w	atendimento_paciente.nr_atendimento%type;
BEGIN
if (coalesce(OLD.DT_ATUALIZACAO_NREC,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_ATUALIZACAO_NREC) and (NEW.DT_ATUALIZACAO_NREC is not null) then
 NEW.ds_utc  := obter_data_utc(NEW.DT_ATUALIZACAO_NREC, 'HV');
end if;

if (coalesce(OLD.DT_LIBERACAO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_LIBERACAO) and (NEW.DT_LIBERACAO is not null) then
 NEW.ds_utc_atualizacao := obter_data_utc(NEW.DT_LIBERACAO,'HV');
end if;

if (NEW.DT_LIBERACAO is not null AND OLD.DT_LIBERACAO is null) then
    ds_param_integ_hl7_w := 'nr_seq_prontuario_emissao='    || NEW.nr_sequencia            || ';' ||
                            'nr_atendimento='               || NEW.nr_atendimento          || ';' || 
                            'nr_seq_perfil_ehr='            || NEW.nr_seq_perfil_openehr   || ';';
    CALL gravar_agend_integracao(650, ds_param_integ_hl7_w);
end if;

if (NEW.DT_LIBERACAO is not null AND OLD.DT_LIBERACAO is null) then
    if (NEW.CD_TRANSACAO_UNIMED is not null) then

    if (NEW.CD_TRANSACAO_UNIMED = '00760' AND NEW.IE_TIPO_INATIVACAO_UNIMED is null) then
        NEW.IE_TIPO_INATIVACAO_UNIMED := '03';
    end if;

        ds_param_integ_hl7_w := 'nr_seq_prontuario_emissao=' || NEW.nr_sequencia              || ';' ||
                                'nr_atendimento='            || NEW.nr_atendimento            || ';' ||
                                'cd_transacao='              || NEW.CD_TRANSACAO_UNIMED       || ';' ||
                                'ie_tipo_inativacao='        || NEW.IE_TIPO_INATIVACAO_UNIMED || ';';

        CALL gravar_agend_integracao(682, ds_param_integ_hl7_w, NEW.CD_SETOR_ATENDIMENTO);
    end if;
end if;

if (TG_OP = 'INSERT') and (coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'de_DE') and (NEW.nr_atendimento is null) then
	
	ie_case_paciente_w := obter_se_episodio_paciente(NEW.nr_seq_episodio,NEW.cd_pessoa_fisica);
	
	if (NEW.nr_seq_episodio is not null and ie_case_paciente_w = 'S') then
	
		select	max(a.nr_atendimento)
		into STRICT	nr_atendimento_episodio_w
		from	atendimento_paciente a,
				episodio_paciente b
		where	a.nr_seq_episodio = b.nr_sequencia
		and		((b.nr_episodio is not null and b.nr_episodio = NEW.nr_seq_episodio) or b.nr_sequencia = NEW.nr_seq_episodio);
		
		NEW.nr_atendimento := nr_atendimento_episodio_w;
	else
		NEW.nr_atendimento := obter_atendimento_paciente(NEW.cd_pessoa_fisica, wheb_usuario_pck.get_cd_estabelecimento);
	end if;
end if;

if (TG_OP = 'INSERT') and (NEW.ds_maquina is null) then
	NEW.ds_maquina := obter_origem_acesso(NEW.nm_usuario, NEW.dt_atualizacao);
end if;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_prontuario_emissao_atual() FROM PUBLIC;

CREATE TRIGGER prontuario_emissao_atual
	BEFORE INSERT OR UPDATE ON prontuario_emissao FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_prontuario_emissao_atual();

