-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS exame_lab_result_item_update ON exame_lab_result_item CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_exame_lab_result_item_update() RETURNS trigger AS $BODY$
declare
ie_status_baixa_w			smallint;
ie_status_atend_atual_w		smallint;
cd_motivo_baixa_w			smallint;
nr_prescricao_w				bigint;
qt_procedimento_w			integer;
cd_estabelecimento_w		smallint;
nr_seq_prescr_w				bigint;
cd_procedimento_w			bigint;
ie_origem_proced_w			bigint;
nr_atendimento_w			bigint;
qt_dias_w					double precision	:= 0;
qt_horas_w					bigint	:= 0;
ie_status_acerto_w			smallint;
nr_seq_proc_w				bigint;
ie_tipo_valor_w				smallint;
nr_seq_etapa_w				bigint;
ie_tipo_atendimento_w		smallint;
ie_tipo_convenio_w			smallint;
qt_exame_w 					bigint;
nr_seq_evento_w				bigint;
nr_seq_interno_w			bigint;
nr_sequencia_padrao_w		bigint	:= 0;
qt_criterios_w				bigint;
ie_conta_paciente_w			varchar(1);
cd_pessoa_fisica_w			varchar(10);
ds_codigo_prof_w			varchar(20);
cd_exame_w					varchar(10);
ie_formato_resultado_w		varchar(3);
ie_gera_depend_w			varchar(1);
nr_seq_lab_w				varchar(20);
ie_sexo_w					varchar(1);
ie_atual_equip_resultado_w	varchar(1);
ie_atual_bioquimico_conta_w	varchar(1);
ie_identifica_valor_w		varchar(1);
ie_atualiza_medic_w			varchar(1);
cd_cbo_w					varchar(6)	:= '';
ie_utiliza_usuario_aprov_w	varchar(1);
nm_usuario_medico_resp_w	varchar(15);
dt_baixa_w					timestamp;
ie_considera_formato_w varchar(1);

--Variaveis da lote_ent_sec_ficha

lote_qt_idade_gest_w			bigint;
lote_qt_peso_w					double precision;
lote_nr_seq_classif_w			bigint;
lote_nr_seq_grau_w				bigint;
lote_qt_media_w					double precision;
lote_qt_gest_w					smallint;
ie_classif_lote_ent_w			smallint;
nr_seq_atecaco_w				bigint;
lote_cd_convenio_w				integer;
lote_medic_uso_w				bigint;
lote_ie_gerar_busca_ativa_w		varchar(1);
lote_ie_gerar_busca_passiva_w	varchar(1);
lote_ie_amamentado_w			varchar(1);
lote_ie_prematuro_w				varchar(1);
lote_ie_transfundido_w			varchar(1);
lote_ie_mae_veg_w				varchar(1);
lote_ie_ictericia_w				varchar(1);
lote_ie_npp_w					varchar(1);
lote_ie_cor_pf_w				varchar(10);
lote_ie_gemelar_w				varchar(1);
lote_ie_tipo_parto_w			varchar(1);
lote_ie_alim_leite_w			varchar(1);
lote_pessoa_fisica_w			varchar(10);
lote_cd_municipio_w				varchar(6);
lote_ie_tipo_coleta_w			varchar(1);
lote_ie_data_coleta_w			timestamp;
lote_ie_hora_coleta_w			timestamp;
lote_ie_data_nascimento_w		timestamp;
lote_ie_hora_nascimento_w		timestamp;
ie_vancocinemia_w				varchar(1);
ie_valor_nao_aceit_w			varchar(1);
ds_result_fleury_w				varchar(4000);
lote_dt_ult_menst_w				timestamp;
ie_corticoide_f_w				lab_valor_padrao_criterio.ie_corticoide%type;
nr_seq_ficha_w					lote_ent_sec_ficha.nr_sequencia%type;
nr_seq_exame_prescr_w				prescr_procedimento.nr_seq_exame%type;
nr_seq_material_prescr_w			material_exame_lab.nr_Sequencia%type;

dt_coleta_w						timestamp;
dt_transf_w						timestamp;
qt_dias_coleta_w				bigint := 0;
qt_horas_coleta_w				bigint := 0;
qt_dias_transf_w				bigint := 0;
qt_horas_transf_w				bigint := 0;
cd_pessoa_fisica_prescr_w		varchar(10);
ie_existe_w						varchar(1);
qt_casas_decimais_dias_w		bigint := 2;
cd_procedencia_w				atendimento_paciente.cd_procedencia%type;

--Task list variables

nr_seq_regra_w					wl_regra_item.nr_sequencia%type;
qt_regra_wl_exame_w				wl_regra_item.qt_tempo_normal%type;
nr_seq_tipo_adm_fat_atd_w		atendimento_paciente.nr_seq_tipo_admissao_fat%type;
ie_tipo_atendimento_wl_w		atendimento_paciente.ie_tipo_atendimento%type;
nr_seq_episodio_w				atendimento_paciente.nr_seq_episodio%type;
ie_gerar_pendencia_tl_w			subtipo_episodio.ie_gerar_pendencia%type;

nr_sequencia_criterio_w lab_valor_padrao_criterio.nr_sequencia%type;

c01 CURSOR FOR
	SELECT	nr_sequencia_prescricao
	from	procedimento_paciente
	where	nr_prescricao = nr_prescricao_w
	  and	nr_seq_exame	in (	SELECT nr_seq_exame_dep
					from exame_lab_dependente
					where nr_seq_exame	= NEW.nr_seq_exame
					  and ie_excluir	= 'S')
	
union

	select	nr_sequencia_prescricao
	from	procedimento_paciente
	where	nr_prescricao = nr_prescricao_w
	  and	nr_seq_exame	in (	select nr_seq_exame
					from procedimento_proc_prescr
					where cd_procedimento	= cd_procedimento_w
					  and ie_origem_proced	= ie_origem_proced_w
					  and nr_seq_exame		<> NEW.nr_seq_exame);
c02 CURSOR FOR
	SELECT	a.nr_seq_evento
	from	regra_envio_sms a
	where	a.ie_evento_disp = 'APRTEA'
	and	coalesce(a.ie_situacao,'A') = 'A'
	and	((a.cd_procedencia = cd_procedencia_w) or (a.cd_procedencia is null));

/*cursor c03 is
	select	a.nr_seq_evento
	from	regra_envio_sms a
	where	a.ie_evento_disp = 'APRNAF'
	and	nvl(a.ie_situacao,'A') = 'A';	*/


c04 CURSOR FOR
	SELECT	a.nr_seq_evento
	from	regra_envio_sms a
	where	a.ie_evento_disp = 'APRPRP'
	and	coalesce(a.ie_situacao,'A') = 'A';

c05 CURSOR FOR
	SELECT	coalesce(b.qt_tempo_normal, 0),
			coalesce(b.nr_sequencia, 0)
	from 	wl_regra_worklist a,
			wl_regra_item b
	where	a.nr_sequencia = b.nr_seq_regra
	and		b.ie_situacao = 'A'
	and		a.nr_seq_item = (	SELECT	max(x.nr_sequencia)
								from	wl_item x
								where	x.nr_sequencia = a.nr_seq_item
								and		x.cd_categoria = 'EX'
								and		x.ie_situacao = 'A');
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'N') then
  goto final;
end if;
if (coalesce(OLD.ds_resultado_curto,'X') <> coalesce(NEW.ds_resultado_curto,'X')) then
	NEW.ds_resultado := NEW.ds_resultado_curto;
end if;
CALL wheb_usuario_pck.set_ie_commit('N');

select	coalesce(max(ie_atual_equip_resultado),'N')
into STRICT	ie_atual_equip_resultado_w
from	lab_parametro;
if  	-- (:new.ie_status is null) and
	(NEW.cd_equipamento is null) and (OLD.cd_equipamento is null) and (coalesce(ie_atual_equip_resultado_w,'N') = 'S') then
	select  max(a.cd_equipamento)
	into STRICT	NEW.cd_equipamento
	from	equipamento_lab b, lab_exame_equip a
	where 	a.cd_equipamento = b.cd_equipamento
	and 	a.nr_seq_exame = NEW.nr_seq_exame
	and	coalesce(a.nr_prior_geracao,0) = (SELECT coalesce(MAX(t.nr_prior_geracao),0) from lab_exame_equip t where t.nr_seq_exame = a.nr_seq_exame);
end if;

if (NEW.ie_status is null) and /* Bruna 12/03/2007, OS52247, inclui a linha abaixo */

	((coalesce(NEW.qt_resultado,0) <> 0) or (coalesce(NEW.pr_resultado,0) <> 0) or (coalesce(NEW.ds_resultado,' ') <> ' ')) then
    NEW.ie_status := 1;
end if;

if (OLD.nm_usuario_prim_dig is null) and
	((coalesce(NEW.qt_resultado,0) <> 0) or (coalesce(NEW.pr_resultado,0) <> 0) or (coalesce(NEW.ds_resultado,' ') <> ' ')) then
	NEW.nm_usuario_prim_dig := NEW.nm_usuario;
end if;
if (OLD.dt_aprovacao is null) and (NEW.dt_aprovacao is not null) then

	select 	max(nr_prescricao)
	into STRICT	nr_prescricao_w
	from 	exame_lab_resultado
	where 	nr_seq_resultado = NEW.nr_seq_resultado;

	select	coalesce(max(cd_estabelecimento),1),
		max(nr_atendimento),
		max(cd_pessoa_fisica)
	into STRICT	cd_estabelecimento_w,
		nr_atendimento_w,
		cd_pessoa_fisica_prescr_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_w;

	select	max(ie_formato_resultado),
			coalesce(max(ie_vancocinemia), 'N')
	into STRICT	ie_formato_resultado_w,
			ie_vancocinemia_w
	from	exame_laboratorio
	where	nr_seq_exame = NEW.nr_seq_exame;

	if (ie_vancocinemia_w = 'S') then
		CALL Gerar_resultado_vancocinemia(NEW.nm_usuario_aprovacao, nr_atendimento_w, nr_prescricao_w, 'S', LOCALTIMESTAMP, NEW.qt_resultado, 'N');
	end if;

	if (nr_atendimento_w	is not null) then
		BEGIN
			CALL gravar_agend_rothman(nr_atendimento_w,NEW.nr_seq_resultado,'EX',NEW.nm_usuario_aprovacao);
		exception
		when others then
			null;
		end;
	end if;

	select	coalesce(max(ie_utiliza_usuario_aprov),'N')
	into STRICT	ie_utiliza_usuario_aprov_w
	from	lab_parametro
	where	cd_estabelecimento = cd_estabelecimento_w;

	if (ie_utiliza_usuario_aprov_w = 'S') then
		nm_usuario_medico_resp_w := NEW.nm_usuario_aprovacao;
	else
		nm_usuario_medico_resp_w := NEW.nm_usuario;
	end if;

	if (nm_usuario_medico_resp_w is not null) and (NEW.cd_medico_resp is null) then
		select	coalesce(max(cd_pessoa_fisica),null)
		into STRICT	cd_pessoa_fisica_w
		from	usuario
		where	upper(nm_usuario) = upper(nm_usuario_medico_resp_w);

		if (cd_pessoa_fisica_w is not null) then
			select	coalesce(max(substr(obter_crm_medico(cd_pessoa_fisica), 1, 255)),'')
			into STRICT	ds_codigo_prof_w
			from 	medico
			where 	cd_pessoa_fisica = cd_pessoa_fisica_w;

			select	coalesce(max(ds_codigo_prof), ds_codigo_prof_w)
			into STRICT	ds_codigo_prof_w
			from 	pessoa_fisica
			where 	cd_pessoa_fisica = cd_pessoa_fisica_w
			and (length(ds_codigo_prof_w) = 0 or
					ds_codigo_prof_w is null);

			if (ds_codigo_prof_w is not null) then
				NEW.cd_medico_resp := cd_pessoa_fisica_w;
			end if;
		end if;
	end if;
	CALL enviar_comunic_aprov_exame(nr_prescricao_w, NEW.nr_seq_prescr, NEW.dt_aprovacao, NEW.nm_usuario);
    CALL gerar_prot_assistencial_js(nr_atendimento_w, NEW.nm_usuario, NEW.nr_seq_resultado, NEW.nr_sequencia);
	select	count(*)
	into STRICT	qt_procedimento_w
	from	procedimento_paciente
	where	nr_prescricao = nr_prescricao_w
	and		nr_sequencia_prescricao = NEW.nr_seq_prescr;

	select	coalesce(cd_motivo_baixa_exame,coalesce(cd_motivo_baixa,0)),
			dt_baixa,
			cd_procedimento,
			ie_origem_proced
	into STRICT	cd_motivo_baixa_w,
			dt_baixa_w,
			cd_procedimento_w,
			ie_origem_proced_w
	from 	prescr_procedimento
	where 	nr_prescricao = nr_prescricao_w
	and 	nr_sequencia = NEW.nr_seq_prescr;

	if (cd_motivo_baixa_w = 0) then
		select	coalesce(max(ie_status_baixa),35),
				coalesce(max(cd_motivo_baixa),1)
		into STRICT	ie_status_baixa_w,
				cd_motivo_baixa_w
		from	lab_parametro
		where	cd_estabelecimento = cd_estabelecimento_w;

		if (qt_procedimento_w = 0) then
			select	ie_conta_paciente
			into STRICT	ie_conta_paciente_w
			from	tipo_baixa_prescricao
			where	cd_tipo_baixa = cd_motivo_baixa_w
			and		ie_prescricao_devolucao = 'P';

			if (ie_conta_paciente_w = 'S') then
				if (wheb_usuario_pck.get_cd_estabelecimento is null) then
					CALL wheb_usuario_pck.set_cd_estabelecimento(cd_estabelecimento_w);
				end if;
				CALL Gerar_Proc_Pac_Prescricao(nr_prescricao_w,
							NEW.nr_seq_prescr, obter_perfil_ativo, 722,
							NEW.nm_usuario,null,null,NEW.cd_medico_resp);
			else
				update	prescr_procedimento
				set		dt_baixa = LOCALTIMESTAMP,
						cd_motivo_baixa = cd_motivo_baixa_w,
			    		dt_atualizacao	= LOCALTIMESTAMP,
						nm_usuario	= NEW.nm_usuario
				where 	nr_prescricao = nr_prescricao_w
				  and 	nr_sequencia = NEW.nr_seq_prescr;
			end if;
		else
			update 	prescr_procedimento
			set		dt_baixa = LOCALTIMESTAMP,
					cd_motivo_baixa = cd_motivo_baixa_w,
			    	dt_atualizacao	= LOCALTIMESTAMP,
					nm_usuario	= NEW.nm_usuario
			where 	nr_prescricao = nr_prescricao_w
			  and 	nr_sequencia = NEW.nr_seq_prescr
			  and 	ie_status_atend >= ie_status_baixa_w;
		end if;
	end if;

	if	((ie_formato_resultado_w = 'SM') or (ie_formato_resultado_w = 'S')) and (substr(upper(NEW.ds_resultado),1,7) <> 'POSITIV') then
		open c01;
		loop
		fetch c01 into nr_seq_prescr_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
			CALL estornar_propaci_prescr_proc(nr_prescricao_w, nr_seq_prescr_w, NEW.nm_usuario);
		end loop;
		close c01;
	end if;

	select coalesce(obter_regra_depend_positivo(nr_prescricao_w, NEW.nr_seq_prescr),'N')
	into STRICT   ie_gera_depend_w
	;

	if (substr(upper(NEW.ds_resultado),1,7) = 'POSITIV') and (ie_gera_depend_w = 'S')	 then
		CALL Gerar_Exame_Lab_Dependente(nr_prescricao_w, NEW.nr_seq_prescr, 3, nr_atendimento_w, NEW.nm_usuario,null, NEW.nr_sequencia, null);
	end if;

	select	ie_formato_resultado
	into STRICT	ie_formato_resultado_w
	from	exame_laboratorio
	where	nr_seq_exame = NEW.nr_seq_exame;

	select count(*)
	into STRICT qt_procedimento_w
	from procedimento_paciente
	where nr_prescricao = nr_prescricao_w
	and nr_sequencia_prescricao = NEW.nr_seq_prescr;

	if (substr(upper(NEW.ds_resultado),1,7) = 'POSITIV') then
		if (ie_formato_resultado_w = 'SM') then
			CALL Gerar_Exame_Lab_Dependente(nr_prescricao_w, NEW.nr_seq_prescr, 1, nr_atendimento_w, NEW.nm_usuario,null, NEW.nr_sequencia, null);
		elsif (ie_formato_resultado_w = 'S') then
			CALL Gerar_Exame_Lab_Dependente(nr_prescricao_w, NEW.nr_seq_prescr, 5, nr_atendimento_w, NEW.nm_usuario,null, NEW.nr_sequencia, null);
		end if;
	end if;
	if (NEW.cd_medico_resp is not null and OLD.cd_medico_resp is null) then
		select	coalesce(max(ie_atual_bioquimico_conta),'N')
		into STRICT	ie_atual_bioquimico_conta_w
		from	lab_parametro
		where	cd_estabelecimento = cd_estabelecimento_w;

		select	max(ie_status_acerto)
		into STRICT	ie_status_acerto_w
		from	conta_paciente a,
				procedimento_paciente b
		where	a.nr_interno_conta	= b.nr_interno_conta
		and		nr_prescricao 		= nr_prescricao_w
		and 	nr_sequencia_prescricao = NEW.nr_seq_prescr;

		if (nr_atendimento_w	is not null) then
			BEGIN
			select	ie_tipo_atendimento,
					ie_tipo_convenio,
					verifica_se_atualiza_medico(obter_convenio_atendimento(nr_atendimento))
			into STRICT	ie_tipo_atendimento_w,
					ie_tipo_convenio_w,
					ie_atualiza_medic_w
			from	atendimento_paciente
			where	nr_atendimento	= nr_atendimento_w;
			exception
				when others then
				ie_tipo_atendimento_w	:= null;
				end;
		end if;

		select	count(*)
		into STRICT 	qt_procedimento_w
		from 	procedimento_paciente
		where 	nr_prescricao = nr_prescricao_w
	  	and 	nr_sequencia_prescricao = NEW.nr_seq_prescr;

		if	((ie_atual_bioquimico_conta_w = 'S') or
			((ie_atual_bioquimico_conta_w	= 'B') and (ie_tipo_convenio_w	= 3) and (ie_tipo_atendimento_w	<> 1))) and (ie_status_acerto_w = 1) and (qt_procedimento_w <> 0) and (NEW.cd_medico_resp is not null) then

			select 	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_proc_w
			from	procedimento_paciente
			where	nr_prescricao 			= nr_prescricao_w
			and 	nr_sequencia_prescricao	= NEW.nr_seq_prescr;

			if (obter_se_medico(NEW.cd_medico_resp, 'M') = 'S') then
				update 	procedimento_paciente
				set		cd_medico_executor		= NEW.cd_medico_resp
				where	nr_prescricao 			= nr_prescricao_w
				and 	nr_sequencia_prescricao = NEW.nr_seq_prescr;

				if (nr_seq_proc_w > 0 ) then
					update	procedimento_paciente
					set		cd_medico_executor	= NEW.cd_medico_resp
					where	NR_SEQ_PROC_PRINC	= nr_seq_proc_w;
				end if;
			else
				update 	procedimento_paciente
				set		cd_pessoa_fisica		= NEW.cd_medico_resp
				where	nr_prescricao 			= nr_prescricao_w
				and 	nr_sequencia_prescricao = NEW.nr_seq_prescr;

				if (nr_seq_proc_w > 0 ) then
					update 	procedimento_paciente
					set		cd_pessoa_fisica	= NEW.cd_medico_resp
					where	NR_SEQ_PROC_PRINC	= nr_seq_proc_w;
				end if;
			end if;

			BEGIN
			select	max(a.cd_cbo)
			into STRICT	cd_cbo_w
			from    sus_cbo b,
					sus_cbo_pessoa_fisica a,
					procedimento_paciente c
			where   sus_obter_secbo_compativel(NEW.cd_medico_resp,c.cd_procedimento, c.ie_origem_proced, c.dt_procedimento, a.cd_cbo, 0) = 'S'
			and     a.cd_pessoa_fisica        	= NEW.cd_medico_resp
			and     a.cd_cbo        			= b.cd_cbo
			and		c.nr_prescricao 			= nr_prescricao_w
			and 	c.nr_sequencia_prescricao	= NEW.nr_seq_prescr;
			exception
				when others then
				cd_cbo_w := '';
			end;

			update	procedimento_paciente
			set		cd_cbo					= cd_cbo_w
			where	nr_prescricao 			= nr_prescricao_w
			and		nr_sequencia_prescricao = NEW.nr_seq_prescr;
		end if;

		if	(((ie_atual_bioquimico_conta_w = 'N') or
			  (ie_atual_bioquimico_conta_w	= 'B' AND ie_tipo_convenio_w	<> 3)) and (ie_atualiza_medic_w	= 'S') and (ie_status_acerto_w = 1) and (qt_procedimento_w <> 0) and (NEW.cd_medico_resp is not null)) then
			select 	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_proc_w
			from	procedimento_paciente
			where	nr_prescricao 			= nr_prescricao_w
			and 	nr_sequencia_prescricao = NEW.nr_seq_prescr;

			if (obter_se_medico(NEW.cd_medico_resp, 'M') = 'S') then
				update 	procedimento_paciente
				set		cd_medico_executor		= NEW.cd_medico_resp
				where	nr_prescricao 			= nr_prescricao_w
				and 	nr_sequencia_prescricao = NEW.nr_seq_prescr;

				if (nr_seq_proc_w > 0 ) then
					update 	procedimento_paciente
					set	cd_medico_executor		= NEW.cd_medico_resp
					where	NR_SEQ_PROC_PRINC	= nr_seq_proc_w;
				end if;
			else
				update 	procedimento_paciente
				set		cd_pessoa_fisica		= NEW.cd_medico_resp
				where	nr_prescricao 			= nr_prescricao_w
				and 	nr_sequencia_prescricao	= NEW.nr_seq_prescr;

				if (nr_seq_proc_w > 0 ) then
					update 	procedimento_paciente
					set		cd_pessoa_fisica	= NEW.cd_medico_resp
					where	NR_SEQ_PROC_PRINC	= nr_seq_proc_w;
				end if;
			end if;
		end if;
	end if;

	/*if	((:new.nm_usuario = 'FLEURYWS') or (upper(:new.nm_usuario) = upper('FleuryTasy'))) then

		open c03;
		loop
		fetch c03 into
			nr_seq_evento_w;
		exit when c03%notfound;
			begin

			fleury_ver_nao_aceit_alert(nr_prescricao_w, :new.nr_seq_prescr, :new.nr_seq_exame, :new.nr_seq_material, :new.ds_resultado, :new.qt_resultado, :new.pr_resultado, ie_valor_nao_aceit_w);

			if (nvl(ie_valor_nao_aceit_w,'N') = 'S') then

				if (NVL(:new.qt_resultado,0) = 0) then
					ds_result_fleury_w := nvl(:new.pr_resultado,0);
				else
					ds_result_fleury_w := :new.qt_resultado;
				end if;

				if (ds_result_fleury_w = 0) then
					ds_result_fleury_w := :new.ds_resultado;
				end if;

				gerar_ev_aprov_result_fleury(nr_seq_evento_w,:new.nm_usuario, nr_prescricao_w, :new.nr_seq_prescr, :new.nr_seq_exame, :new.nr_seq_material, :new.cd_medico_resp, :new.dt_aprovacao, 'S', ds_result_fleury_w);
			end if;

			end;
		end loop;
		close c03;

	end if;	*/


	select	max(nr_seq_interno)
	into STRICT	nr_seq_interno_w
	from	prescr_procedimento
	where	nr_sequencia = NEW.nr_seq_prescr
	and	nr_prescricao = nr_prescricao_w;

	if (nr_seq_interno_w is not null) then
		select	count(*)
		into STRICT	qt_exame_w
		from	prescr_procedimento a,
				prescr_medica b
		where	a.ie_status_atend < 35
		and	a.nr_prescricao = b.nr_prescricao
		and	b.nr_atendimento = nr_atendimento_w
		and	a.nr_seq_interno <> nr_seq_interno_w
		and	a.ie_suspenso <> 'S'
		and	a.dt_cancelamento IS NULL;

		select	coalesce(max(a.cd_procedencia), 0)
		into STRICT	cd_procedencia_w
		from	atendimento_paciente a,
			prescr_medica b
		where	a.nr_atendimento = b.nr_atendimento
		and	b.nr_prescricao = nr_prescricao_w;

		open c02;
		loop
		fetch c02 into
			nr_seq_evento_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			BEGIN
			if ( qt_exame_w = 0 ) then
				CALL gerar_evento_aprov_res_atend(nr_seq_evento_w,NEW.nm_usuario, nr_prescricao_w, nr_seq_prescr_w, NEW.nr_seq_exame, 'S', NEW.dt_aprovacao, NEW.cd_medico_resp);
			end if;
			end;
		end loop;
		close c02;

		select	count(*)
		into STRICT	qt_exame_w
		from	prescr_procedimento a,
				prescr_medica b
		where	a.ie_status_atend >= 35
		and	a.nr_prescricao = b.nr_prescricao
		and	b.nr_prescricao = nr_prescricao_w
		and	a.nr_seq_interno <> nr_seq_interno_w;

		if (qt_exame_w = 0) then

			select	lab_existe_dt_aprov_res_item(NEW.nr_seq_resultado, NEW.nr_seq_prescr)
			into STRICT	ie_existe_w
			;

			if (ie_existe_w = 'S') then
				open C04;
				loop
				fetch C04 into
					nr_seq_evento_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					BEGIN
					CALL gerar_evento_aprov_res_atend(nr_seq_evento_w,NEW.nm_usuario, nr_prescricao_w, nr_seq_prescr_w, NEW.nr_seq_exame, 'S', NEW.dt_aprovacao, NEW.cd_medico_resp);
					end;
				end loop;
				close C04;
			end if;

			if (nr_atendimento_w is not null) then

				select	max(nr_seq_tipo_admissao_fat),
						max(ie_tipo_atendimento),
						max(nr_seq_episodio)
				into STRICT	nr_seq_tipo_adm_fat_atd_w,
						ie_tipo_atendimento_wl_w,
						nr_seq_episodio_w
				from	atendimento_paciente
				where	nr_atendimento = nr_atendimento_w;

			end if;

			open c05;
			loop
			fetch c05 into
				qt_regra_wl_exame_w,
				nr_seq_regra_w;
			EXIT WHEN NOT FOUND; /* apply on c05 */
				BEGIN
					if (qt_regra_wl_exame_w > 0 and obter_se_regra_geracao(nr_seq_regra_w,nr_seq_episodio_w,nr_seq_tipo_adm_fat_atd_w) = 'S') then

						-- Generates task in the WorkList function as a pendant for the user to inform that he is aware of the exam

						CALL wl_gerar_finalizar_tarefa('EX','I',nr_atendimento_w,cd_pessoa_fisica_prescr_w,NEW.nm_usuario,
									coalesce(NEW.dt_aprovacao,LOCALTIMESTAMP)+(qt_regra_wl_exame_w/24),
									'N',null,null,null,nr_prescricao_w,NEW.nr_seq_prescr,null,null,null,null,nr_seq_regra_w,null,null,null,null,null,null,null,NEW.dt_aprovacao,nr_seq_episodio_w);
					end if;
				end;
			end loop;
			close c05;
		end if;
	end if;
end if;

if 	(NEW.nr_seq_material is null AND OLD.nr_seq_material is not null) then
	NEW.nr_seq_material	:= OLD.nr_seq_material;
end if;

if 	(NEW.nr_seq_material <> OLD.nr_seq_material AND OLD.nr_seq_material is not null) and (NEW.nr_seq_prescr is not null) then
	select	nr_prescricao
	into STRICT	nr_prescricao_w
	from 	exame_lab_resultado
	where 	nr_seq_resultado = NEW.nr_seq_resultado;

	select	max(nr_seq_lab)
	into STRICT 	nr_seq_lab_w
	from 	prescr_procedimento
	where 	nr_prescricao = nr_prescricao_w
	and 	nr_sequencia = NEW.nr_seq_prescr;

	insert into prescr_proc_mat_alteracao(
			nr_sequencia,
			nr_prescricao,
			nr_seq_prescr,
			dt_atualizacao,
			nm_usuario,
			nr_seq_mat_ant,
			nr_seq_mat_atual,
			nr_seq_lab)
	values (nextval('prescr_proc_mat_alteracao_seq'),
			nr_prescricao_w,
			NEW.nr_seq_prescr,
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			OLD.nr_seq_material,
			NEW.nr_seq_material,
			nr_seq_lab_w);
	CALL Alterar_seq_lab(nr_prescricao_w,NEW.nm_usuario,NEW.nr_seq_material,NEW.nr_seq_prescr);
end if;

if	((coalesce(NEW.ds_resultado,'X') <> coalesce(OLD.ds_resultado,'X')) or (coalesce(NEW.qt_resultado,0) <> coalesce(OLD.qt_resultado,0)) or (coalesce(NEW.pr_resultado,0) <> coalesce(OLD.pr_resultado,0)) or (coalesce(NEW.nr_seq_metodo,0) <> coalesce(OLD.nr_seq_metodo,0)) or (coalesce(NEW.nr_seq_material,0) <> coalesce(OLD.nr_seq_material,0))) then
	select 	max(nr_prescricao)
	into STRICT	nr_prescricao_w
	from 	exame_lab_resultado
	where 	nr_seq_resultado = NEW.nr_seq_resultado;

	if (NEW.nm_usuario <> 'FLEURYWS') and (NEW.nm_usuario <> 'UserApprove') then
		if	(OLD.dt_aprovacao is not null AND NEW.dt_aprovacao is not null) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(196252, 'NR_PRESCRICAO='||to_char(nr_prescricao_w)||';'||'NR_SEQ_EXAME='||to_char(NEW.nr_seq_exame));
		else
			select 	max(nr_sequencia)
			into STRICT	nr_seq_etapa_w
			from	prescr_proc_etapa
			where	nr_prescricao 		= nr_prescricao_w
			and		nr_seq_prescricao	= NEW.nr_seq_prescr;

			if (nr_seq_etapa_w is not null) then
				select	ie_etapa
				into STRICT	ie_status_atend_atual_w
				from	prescr_proc_etapa
				where	nr_sequencia 	= nr_seq_etapa_w
				and		nr_prescricao 	= nr_prescricao_w
				and		nr_seq_prescricao	= NEW.nr_seq_prescr;

				if (ie_status_atend_atual_w >= 35) then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(196252, 'NR_PRESCRICAO='||to_char(nr_prescricao_w)||';'||'NR_SEQ_EXAME='||to_char(NEW.nr_seq_exame));
				end if;
			end if;
		end if;
	end if;

	select 	MAX(nr_sequencia)
	into STRICT	nr_seq_ficha_w
	from 	lote_ent_sec_ficha
	where 	nr_prescricao = nr_prescricao_w;

	if (nr_seq_ficha_w is not null) then

		select 	max(a.nr_seq_exame),
			max(b.nr_sequencia)
		into STRICT	nr_seq_exame_prescr_w,
			nr_seq_material_prescr_w
		from	prescr_procedimento a,
			material_exame_lab  b
		where 	a.cd_material_exame = b.cd_material_exame
		and	a.nr_prescricao = nr_prescricao_w
		and	a.nr_sequencia  = NEW.nr_seq_prescr;


		if (nr_seq_exame_prescr_w is not null) then

--b.nr_seq_metodo,

--b.nr_seq_resultado


			NEW.ie_tipo_val_crit 	:= SUBSTR(lab_cons_valor_result_lote(nr_seq_exame_prescr_w, nr_seq_material_prescr_w, coalesce(NEW.qt_resultado,NEW.pr_resultado), NEW.ds_resultado, nr_prescricao_w, NEW.nr_seq_prescr,1, NEW.nr_seq_metodo, NEW.nr_seq_resultado),1,255);
			NEW.ie_valor_crit 	:= SUBSTR(lab_cons_valor_result_lote(nr_seq_exame_prescr_w, nr_seq_material_prescr_w, coalesce(NEW.qt_resultado,NEW.pr_resultado), NEW.ds_resultado, nr_prescricao_w, NEW.nr_seq_prescr,2, NEW.nr_seq_metodo, NEW.nr_seq_resultado),1,2);
			--:new.ds_mensagem_criterio :=  SUBSTR(lab_cons_valor_result_lote(nr_seq_exame_prescr_w, nr_seq_material_prescr_w, NVL(:new.qt_resultado,:new.pr_resultado), :new.ds_resultado, nr_prescricao_w, :new.nr_seq_prescr,3, :new.nr_seq_metodo, :new.nr_seq_resultado),1,4000);

                                                NEW.ds_mensagem_criterio :=  SUBSTR(coalesce(lab_cons_valor_result_lote(nr_seq_exame_prescr_w, nr_seq_material_prescr_w, coalesce(NEW.qt_resultado,NEW.pr_resultado), NEW.ds_resultado, nr_prescricao_w, NEW.nr_seq_prescr,3, NEW.nr_seq_metodo, NEW.nr_seq_resultado), NEW.ds_mensagem_criterio),1,4000);
			NEW.ds_acao_criterio 	:= SUBSTR(lab_cons_valor_result_lote(nr_seq_exame_prescr_w, nr_seq_material_prescr_w, coalesce(NEW.qt_resultado,NEW.pr_resultado), NEW.ds_resultado, nr_prescricao_w, NEW.nr_seq_prescr,4, NEW.nr_seq_metodo, NEW.nr_seq_resultado),1,255);
			NEW.ie_acao_criterio_lote := SUBSTR(lab_cons_valor_result_lote(nr_seq_exame_prescr_w, nr_seq_material_prescr_w, coalesce(NEW.qt_resultado,NEW.pr_resultado), NEW.ds_resultado, nr_prescricao_w, NEW.nr_seq_prescr,7, NEW.nr_seq_metodo, NEW.nr_seq_resultado),1,1);
			NEW.ds_result_sug_crit := SUBSTR(lab_cons_valor_result_lote(nr_seq_exame_prescr_w, nr_seq_material_prescr_w, coalesce(NEW.qt_resultado,NEW.pr_resultado), NEW.ds_resultado, nr_prescricao_w, NEW.nr_seq_prescr,8, NEW.nr_seq_metodo, NEW.nr_seq_resultado),1,255);
			NEW.ds_material_criterio := SUBSTR(lab_cons_valor_result_lote(nr_seq_exame_prescr_w, nr_seq_material_prescr_w, coalesce(NEW.qt_resultado,NEW.pr_resultado), NEW.ds_resultado, nr_prescricao_w, NEW.nr_seq_prescr,9, NEW.nr_seq_metodo, NEW.nr_seq_resultado),1,255);
			NEW.ds_metodo_criterio := SUBSTR(lab_cons_valor_result_lote(nr_seq_exame_prescr_w, nr_seq_material_prescr_w, coalesce(NEW.qt_resultado,NEW.pr_resultado), NEW.ds_resultado, nr_prescricao_w, NEW.nr_seq_prescr,10, NEW.nr_seq_metodo, NEW.nr_seq_resultado),1,255);

		end if;
	end if;


end if;

select	coalesce(max(cd_estabelecimento),1)
into STRICT	cd_estabelecimento_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_w;


if (((NEW.nr_seq_metodo <> OLD.nr_seq_metodo) or (NEW.nr_seq_material <> OLD.nr_seq_material)) and
    OLD.nr_seq_material is not null) then

	select 	nr_prescricao
	into STRICT	nr_prescricao_w
	from 	exame_lab_resultado
	where 	nr_seq_resultado = NEW.nr_seq_resultado;

	select 	obter_dias_entre_datas_lab(obter_nascimento_prescricao(nr_prescricao_w),LOCALTIMESTAMP),
			Obter_Hora_Entre_datas(obter_nascimento_prescricao(nr_prescricao_w),LOCALTIMESTAMP)
	into STRICT 	qt_dias_w,
			qt_horas_w
	;

	select	obter_sexo_prescricao(nr_prescricao_w)
	into STRICT 	ie_sexo_w
	;

	select	max(qt_peso_f),
			max(nr_idade_gest_f),
			max(ie_premat_s_f),
			max(IE_AMAMENTADO_F),
			max(ie_transfusao_f),
			max(nr_seq_grau_parentesco),
			max(substr(obter_classif_atendimento(nr_atendimento_w),1,10)),
			max(IE_MAE_VEG_F),
			max(IE_ICTERICIA_F),
			max(IE_NPP_F),
			max(IE_COR_PF_F),
			max(IE_GEMELAR_F),
			max(substr(lote_ent_obter_result_ant(nr_prescricao_w, NEW.nr_seq_prescr, NEW.nr_seq_resultado, NEW.nr_seq_exame, 99,'S',NEW.qt_resultado,NEW.pr_resultado),1,255)),
			max(QT_GEST_F),
			max(DT_ULT_MENST),
			max(IE_TIPO_PARTO),
			max(IE_ALIM_LEITE_F),
			max(cd_pessoa_fisica),
			max(IE_CORTICOIDE_F),
			coalesce(max(nr_sequencia),0),
			max(DT_COLETA_FICHA_F),
			max(HR_COLETA_F),
			max(DT_NASCIMENTO_F),
			max(HR_NASCIMENTO_F)
	into STRICT	lote_qt_peso_w,
			lote_qt_idade_gest_w,
			lote_ie_prematuro_w,
			lote_ie_amamentado_w,
			lote_ie_transfundido_w,
			lote_nr_seq_grau_w,
			lote_nr_seq_classif_w,
			lote_ie_mae_veg_w,
			lote_ie_ictericia_w,
			lote_ie_npp_w,
			lote_ie_cor_pf_w,
			lote_ie_gemelar_w,
			lote_qt_media_w,
			lote_qt_gest_w,
			lote_dt_ult_menst_w,
			lote_ie_tipo_parto_w,
			lote_ie_alim_leite_w,
			lote_pessoa_fisica_w,
			ie_corticoide_f_w,
			nr_seq_ficha_w,
			lote_ie_data_coleta_w,
			lote_ie_hora_coleta_w,
			lote_ie_data_nascimento_w,
			lote_ie_hora_nascimento_w
	from	lote_ent_sec_ficha
	where	nr_prescricao = nr_prescricao_w;

	BEGIN
	if (nr_seq_ficha_w <> 0) then

		SELECT * FROM define_reference_result_values(	nr_prescricao_w, nr_seq_prescr_w, NEW.nr_seq_resultado, NEW.qt_resultado, NEW.pr_resultado, NEW.ds_resultado, NEW.nr_seq_exame, NEW.nr_seq_material, NEW.nr_seq_metodo, NEW.qt_minima, NEW.qt_maxima, NEW.pr_minimo, NEW.pr_maximo, NEW.ds_referencia, NEW.ie_consiste, nr_sequencia_padrao_w, NEW.ds_mensagem_criterio, NEW.ie_acao_criterio_lote, nr_sequencia_criterio_w) INTO STRICT NEW.qt_minima, NEW.qt_maxima, NEW.pr_minimo, NEW.pr_maximo, NEW.ds_referencia, NEW.ie_consiste, nr_sequencia_padrao_w, NEW.ds_mensagem_criterio, NEW.ie_acao_criterio_lote, nr_sequencia_criterio_w;


	end if;

	select 	CASE WHEN coalesce(max(ie_idade_int_val_ref), 'N')='N' THEN  2  ELSE 0 END
	into STRICT	qt_casas_decimais_dias_w
	from	lab_parametro
	where	cd_estabelecimento = cd_estabelecimento_w;

	if (nr_sequencia_padrao_w = 0) then

		SELECT * FROM define_reference_result_values(	nr_prescricao_w, nr_seq_prescr_w, NEW.nr_seq_resultado, NEW.qt_resultado, NEW.pr_resultado, NEW.ds_resultado, NEW.nr_seq_exame, NEW.nr_seq_material, NEW.nr_seq_metodo, NEW.qt_minima, NEW.qt_maxima, NEW.pr_minimo, NEW.pr_maximo, NEW.ds_referencia, NEW.ie_consiste, nr_sequencia_padrao_w, NEW.ds_mensagem_criterio, NEW.ie_acao_criterio_lote, nr_sequencia_criterio_w) INTO STRICT NEW.qt_minima, NEW.qt_maxima, NEW.pr_minimo, NEW.pr_maximo, NEW.ds_referencia, NEW.ie_consiste, nr_sequencia_padrao_w, NEW.ds_mensagem_criterio, NEW.ie_acao_criterio_lote, nr_sequencia_criterio_w;
	end if;

	exception
		when others then

		NEW.qt_minima 	:= null;
		NEW.qt_maxima 	:= null;
		NEW.pr_minimo 	:= null;
		NEW.pr_maximo 	:= null;
		NEW.ds_referencia	:= null;
		NEW.ie_consiste	:= 'N';
		NEW.ie_acao_criterio_lote := null;
		NEW.ds_mensagem_criterio := null;
	end;
end if;

if  ((coalesce(OLD.qt_resultado,0) <> coalesce(NEW.qt_resultado,0)) or (coalesce(OLD.pr_resultado,0) <> coalesce(NEW.pr_resultado,0)) or (NEW.ds_resultado is null and OLD.ds_resultado is not null))
and ((coalesce(NEW.qt_resultado,0) = 0) and (coalesce(NEW.pr_resultado,0) = 0))
and (nr_seq_ficha_w <> 0) then
  NEW.ds_mensagem_criterio := null;
  NEW.ds_observacao := null;
end if;

if (coalesce(substr(NEW.ds_obs_curta,1,255),'X') <> coalesce(substr(OLD.ds_observacao,1,255),'X')) then
  NEW.ds_observacao := NEW.ds_obs_curta;
end if;

if (coalesce(substr(NEW.ds_observacao,1,255),'X') <> coalesce(substr(OLD.ds_obs_curta,1,255),'X')) then
  NEW.ds_obs_curta := SUBSTR(NEW.ds_observacao,1,255);
end if;

select  nr_prescricao
into STRICT  nr_prescricao_w
from   exame_lab_resultado
where   nr_seq_resultado = NEW.nr_seq_resultado;

select  coalesce(max(ie_identifica_valor), 'N')
into STRICT  ie_identifica_valor_w
from  lab_parametro
where  cd_estabelecimento = cd_estabelecimento_w;

if ((NEW.ie_normalidade <> 845) or (NEW.ie_normalidade is null)) then
  NEW.ie_normalidade := 758;
  ie_considera_formato_w := Obter_param_Usuario(722, 394, obter_perfil_ativo, NEW.nm_usuario, cd_estabelecimento_w, ie_considera_formato_w);
  if (ie_considera_formato_w = 'S' and NEW.ds_resultado is not null) and (NEW.DS_REFERENCIA is not null) then
    if (upper(NEW.ds_resultado) <> upper(NEW.DS_REFERENCIA)) then
      NEW.ie_normalidade := 760;
    end if;
  else
    if (ie_identifica_valor_w = 'N') then
      if (NEW.pr_minimo is not null AND NEW.pr_maximo is not null) and
         ((coalesce(NEW.pr_resultado,0) < NEW.PR_MINIMo) or (coalesce(NEW.pr_resultado,0) > NEW.pr_maximo)) then
        NEW.ie_normalidade := 760;
      end if;

      if (NEW.qt_minima is not null  and NEW.qt_maxima is not null) and
         ((coalesce(NEW.qt_resultado,0) < NEW.qt_minima) or (coalesce(NEW.qt_resultado,0) > NEW.qt_maxima)) then
        NEW.ie_normalidade := 760;
      end if;
    else
      if  (NEW.pr_minimo is not null AND NEW.pr_maximo is not null) then
        if (coalesce(NEW.pr_resultado,0) < NEW.PR_MINIMo) then
          NEW.ie_normalidade := 1088;
        elsif (coalesce(NEW.pr_resultado,0) > NEW.pr_maximo) then
          NEW.ie_normalidade := 1089;
        end if;
      end if;
      if  (NEW.qt_minima is not null AND NEW.qt_maxima is not null) then
        if (coalesce(NEW.qt_resultado,0) < NEW.qt_minima) then
          NEW.ie_normalidade := 1088;
        elsif (coalesce(NEW.qt_resultado,0) > NEW.qt_maxima) then
          NEW.ie_normalidade := 1089;
        end if;
      end if;
    end if;
  end if;

  if (NEW.IE_RESULTADO_CRITICO = 'S') or (NEW.IE_RESULTADO_REFERENCIA = 'S') then
    NEW.ie_normalidade := 760;
  end if;

end if;

if (OLD.dt_aprovacao is not null) and (NEW.dt_aprovacao is null) then
  delete  FROM exame_lab_result_item_mas
  where  nr_seq_resultado = NEW.nr_seq_resultado
  and  nr_seq_prescr = NEW.nr_seq_prescr;

  CALL gravar_log_lab_pragma(36,NEW.nr_seq_resultado||'-'||NEW.nr_seq_prescr||'-'||substr(dbms_utility.format_call_stack,1,2000),NEW.nm_usuario);
end if;

if  ((coalesce(NEW.qt_resultado,0) <> coalesce(OLD.qt_resultado,0)) or (coalesce(NEW.ds_resultado,'X') <> coalesce(OLD.ds_resultado,'X')) or (coalesce(NEW.pr_resultado,0) <> coalesce(OLD.pr_resultado,0)) or (coalesce(NEW.nr_seq_material,0) <> coalesce(OLD.nr_seq_material,0))) then

  BEGIN
    select       max(b.nr_sequencia)
    into STRICT        nr_seq_material_prescr_w
    from  prescr_procedimento a,
      material_exame_lab  b
    where   a.cd_material_exame = b.cd_material_exame
    and  a.nr_prescricao = nr_prescricao_w
    and  a.nr_sequencia  = NEW.nr_seq_prescr;

    NEW.ie_resultado_critico := Lab_obter_se_nao_aceitavel(nr_prescricao_w, NEW.nr_seq_prescr, NEW.nr_seq_exame, nr_seq_material_prescr_w, NEW.ds_resultado, NEW.qt_resultado, NEW.pr_resultado);
    exception when others then
      NEW.ie_resultado_critico := 'N';
  end;
  BEGIN
    NEW.ie_resultado_relevante := lab_obter_se_result_relev(nr_prescricao_w, NEW.nr_seq_prescr, NEW.nr_seq_exame, NEW.nr_seq_material, NEW.ds_resultado, NEW.qt_resultado, NEW.pr_resultado);
    exception when others then
      NEW.ie_resultado_relevante := 'N';
  end;
end if;
CALL wheb_usuario_pck.set_ie_commit('S');
<<final>>
null;

  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_exame_lab_result_item_update() FROM PUBLIC;

CREATE TRIGGER exame_lab_result_item_update
	BEFORE UPDATE ON exame_lab_result_item FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_exame_lab_result_item_update();

