-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS ageint_obs_age_confirm_atual ON ageint_obs_agenda_confirm CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_ageint_obs_age_confirm_atual() RETURNS trigger AS $BODY$
declare
ds_observacao_agenda_w varchar(4000);

BEGIN

if NEW.ie_tipo_agendamento in ('C','S') then

select 	max(ds_observacao)
	into STRICT    ds_observacao_agenda_w
	from	agenda_consulta
	where	nr_sequencia	= NEW.nr_seq_agenda;

	if (NEW.ds_observacao is not null) then

		if (ds_observacao_agenda_w is not null) then
			ds_observacao_agenda_w := substr(ds_observacao_agenda_w || chr(10) || NEW.ds_observacao ,1,2000);
		else
			ds_observacao_agenda_w := substr(NEW.ds_observacao,1,2000);
		end if;
	else
		ds_observacao_agenda_w := null;
	end if;

	update	agenda_consulta
		set	ds_observacao	= coalesce(ds_observacao_agenda_w, ds_observacao),
				nr_seq_forma_confirmacao = NEW.nr_seq_forma_confirmacao,
				DS_CONFIRMACAO			= NEW.ds_confirmacao
		where	nr_sequencia	= NEW.nr_seq_agenda;

elsif (NEW.ie_tipo_agendamento in ('E')) then

	select 	max(ds_observacao)
	into STRICT    ds_observacao_agenda_w
	from	agenda_paciente
	where	nr_sequencia	= NEW.nr_seq_agenda;

	if (NEW.ds_observacao is not null) then

		if (ds_observacao_agenda_w is not null) then
			ds_observacao_agenda_w := substr(ds_observacao_agenda_w || chr(10) || NEW.ds_observacao ,1,4000);
		else
			ds_observacao_agenda_w := substr(NEW.ds_observacao,1,4000);
		end if;

	else
		ds_observacao_agenda_w := null;
	end if;

	update	agenda_paciente
		set	ds_observacao	= coalesce(ds_observacao_agenda_w, ds_observacao),
				nr_seq_forma_confirmacao = NEW.nr_seq_forma_confirmacao,
				DS_CONFIRMACAO			= NEW.ds_confirmacao
		where	nr_sequencia	= NEW.nr_seq_agenda;

end if;

RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_ageint_obs_age_confirm_atual() FROM PUBLIC;

CREATE TRIGGER ageint_obs_age_confirm_atual
	AFTER INSERT OR UPDATE ON ageint_obs_agenda_confirm FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_ageint_obs_age_confirm_atual();

