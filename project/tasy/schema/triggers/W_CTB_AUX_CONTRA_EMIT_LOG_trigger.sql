-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS w_ctb_aux_contra_emit_log ON w_ctb_aux_contra_emit CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_w_ctb_aux_contra_emit_log() RETURNS trigger AS $BODY$
declare
 
nm_usuario_w			usuario.nm_usuario%type;
ds_log_w			ctb_reg_auxiliar_log.ds_log%type;
ds_alt_reg_w			varchar(4000);
qt_registros_w			bigint;
			 
BEGIN 
 
nm_usuario_w := wheb_usuario_pck.get_nm_usuario;
 
if TG_OP = 'DELETE' then 
	ds_log_w := wheb_mensagem_pck.get_texto(392981, 'NR_SEQUENCIA=' || OLD.nr_sequencia || ';NR_DOCUMENTO=' || OLD.nr_documento || ';VALOR=' || OLD.vl_parcela || ';CD_CONTA_CONTAB=' || OLD.cd_conta_contabil || ';CLASSIFICACAO=' || substr(ctb_obter_classif_conta(OLD.cd_conta_contabil, null, OLD.dt_referencia),1,255));
	 
	CALL wheb_usuario_pck.set_ie_executar_trigger('N');
	 
	insert into	ctb_reg_auxiliar_log(nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					nr_seq_reg_auxiliar, 
					ie_tipo_log, 
					ds_log) 
				values (nextval('ctb_reg_auxiliar_log_seq'), 
					LOCALTIMESTAMP, 
					nm_usuario_w, 
					LOCALTIMESTAMP, 
					nm_usuario_w, 
					OLD.nr_seq_reg_auxiliar, 
					'E', 
					ds_log_w);
 
elsif TG_OP = 'INSERT' then 
 
	if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then 
 
		ds_log_w := wheb_mensagem_pck.get_texto(394713, 'NR_SEQUENCIA=' || NEW.nr_sequencia || ';NR_DOCUMENTO=' || NEW.nr_documento || ';VALOR=' || NEW.vl_parcela || ';CD_CONTA_CONTAB=' || NEW.cd_conta_contabil || ';CLASSIFICACAO=' || substr(ctb_obter_classif_conta(NEW.cd_conta_contabil, null, NEW.dt_referencia),1,255));
		 
		CALL wheb_usuario_pck.set_ie_executar_trigger('N');
		 
		insert into	ctb_reg_auxiliar_log(nr_sequencia, 
						dt_atualizacao, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						nr_seq_reg_auxiliar, 
						ie_tipo_log, 
						ds_log) 
					values (nextval('ctb_reg_auxiliar_log_seq'), 
						LOCALTIMESTAMP, 
						nm_usuario_w, 
						LOCALTIMESTAMP, 
						nm_usuario_w, 
						NEW.nr_seq_reg_auxiliar, 
						'I', 
						ds_log_w);
						 
		CALL wheb_usuario_pck.set_ie_executar_trigger('S');
					 
	end if;
 
elsif TG_OP = 'UPDATE' then 
 
	if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then 
	 
		ds_alt_reg_w := NEW.nr_sequencia;
		 
		if (coalesce(OLD.nr_contrato,0) <> coalesce(NEW.nr_contrato,0)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Nr contrato: ' || OLD.nr_contrato;
		end if;
		 
		if (coalesce(OLD.nr_titulo,0) <> coalesce(NEW.nr_titulo,0)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Nr título: ' || OLD.nr_titulo;
		end if;
		 
		if ((OLD.dt_contrato <> NEW.dt_contrato) or (OLD.dt_contrato is null and NEW.dt_contrato is not null) or (OLD.dt_contrato is not null and NEW.dt_contrato is null)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Data contrato: ' || OLD.dt_contrato;
		end if;
		 
		if ((OLD.dt_rescisao <> NEW.dt_rescisao) or (OLD.dt_rescisao is null and NEW.dt_rescisao is not null) or (OLD.dt_rescisao is not null and NEW.dt_rescisao is null)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Data rescisão: ' || OLD.dt_rescisao;
		end if;
		 
		if ((OLD.dt_referencia <> NEW.dt_referencia) or (OLD.dt_referencia is null and NEW.dt_referencia is not null) or (OLD.dt_referencia is not null and NEW.dt_referencia is null)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Data referência: ' || OLD.dt_referencia;
		end if;
		 
		if ((OLD.dt_rec_antec <> NEW.dt_rec_antec) or (OLD.dt_rec_antec is null and NEW.dt_rec_antec is not null) or (OLD.dt_rec_antec is not null and NEW.dt_rec_antec is null)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Data recebimento: ' || OLD.dt_rec_antec;
		end if;
		 
		if ((OLD.dt_inicio_cobertura <> NEW.dt_inicio_cobertura) or (OLD.dt_inicio_cobertura is null and NEW.dt_inicio_cobertura is not null) or (OLD.dt_inicio_cobertura is not null and NEW.dt_inicio_cobertura is null)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Data início cobertura: ' || OLD.dt_inicio_cobertura;
		end if;
		 
		if ((OLD.dt_fim_cobertura <> NEW.dt_fim_cobertura) or (OLD.dt_fim_cobertura is null and NEW.dt_fim_cobertura is not null) or (OLD.dt_fim_cobertura is not null and NEW.dt_fim_cobertura is null)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Data fim cobertura: ' || OLD.dt_fim_cobertura;
		end if;
		 
		if (coalesce(OLD.ds_tipo_contratacao,0) <> coalesce(NEW.ds_tipo_contratacao,0)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Tipo contratação: ' || OLD.ds_tipo_contratacao;
		end if;
		 
		if (coalesce(OLD.ds_modalidade_contrat,0) <> coalesce(NEW.ds_modalidade_contrat,0)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Modalidade contratação: ' || OLD.ds_modalidade_contrat;
		end if;
		 
		if (coalesce(OLD.ds_regulamentacao,0) <> coalesce(NEW.ds_regulamentacao,0)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Regulamentação: ' || OLD.ds_regulamentacao;
		end if;
		 
		if (coalesce(OLD.ds_segmentacao,0) <> coalesce(NEW.ds_segmentacao,0)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Segmentação: ' || OLD.ds_segmentacao;
		end if;
		 
		if (coalesce(OLD.ds_definicao_atos,0) <> coalesce(NEW.ds_definicao_atos,0)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Ato cooperado: ' || OLD.ds_definicao_atos;
		end if;
		 
		if (coalesce(OLD.nm_usuario_principal,0) <> coalesce(NEW.nm_usuario_principal,0)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Usuário principal: ' || OLD.nm_usuario_principal;
		end if;
		 
		if (coalesce(OLD.cd_cpf_cnpj,0) <> coalesce(NEW.cd_cpf_cnpj,0)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', CPF/CNPJ: ' || OLD.cd_cpf_cnpj;
		end if;
		 
		if ((OLD.dt_emissao <> NEW.dt_emissao) or (OLD.dt_emissao is null and NEW.dt_emissao is not null) or (OLD.dt_emissao is not null and NEW.dt_emissao is null)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Data emissão: ' || OLD.dt_emissao;
		end if;
		 
		if (coalesce(OLD.ds_tipo_documento,0) <> coalesce(NEW.ds_tipo_documento,0)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Tipo documento: ' || OLD.ds_tipo_documento;
		end if;
		 
		if (coalesce(OLD.nr_documento,0) <> coalesce(NEW.nr_documento,0)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Nr Documento: ' || OLD.nr_documento;
		end if;
		 
		if (coalesce(OLD.nr_parcela,0) <> coalesce(NEW.nr_parcela,0)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Nr parcela: ' || OLD.nr_parcela;
		end if;
		 
		if ((OLD.dt_vencimento <> NEW.dt_vencimento) or (OLD.dt_vencimento is null and NEW.dt_vencimento is not null) or (OLD.dt_vencimento is not null and NEW.dt_vencimento is null)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Data vencimento: ' || OLD.dt_vencimento;
		end if;
		 
		if (coalesce(OLD.vl_parcela,0) <> coalesce(NEW.vl_parcela,0)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Valor parcela: ' || OLD.vl_parcela;
		end if;
		 
		if (coalesce(OLD.vl_apropriado,0) <> coalesce(NEW.vl_apropriado,0)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Valor apropriado: ' || OLD.vl_apropriado;
		end if;
		 
		if (coalesce(OLD.vl_antecipado,0) <> coalesce(NEW.vl_antecipado,0)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Valor antecipado: ' || OLD.vl_antecipado;
		end if;
		 
		if (coalesce(OLD.vl_fat_antec,0) <> coalesce(NEW.vl_fat_antec,0)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Valor faturamento antecipado: ' || OLD.vl_fat_antec;
		end if;
		 
		if (coalesce(OLD.vl_rec_cobertura,0) <> coalesce(NEW.vl_rec_cobertura,0)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Valor receita cobertura: ' || OLD.vl_rec_cobertura;
		end if;
		 
		if ((OLD.dt_baixa <> NEW.dt_baixa) or (OLD.dt_baixa is null and NEW.dt_baixa is not null) or (OLD.dt_baixa is not null and NEW.dt_baixa is null)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Data baixa: ' || OLD.dt_baixa;
		end if;
		 
		if (coalesce(OLD.cd_beneficiario,0) <> coalesce(NEW.cd_beneficiario,0)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Nr carteira: ' || OLD.cd_beneficiario;
		end if;
		 
		if (coalesce(OLD.nr_protocolo_ans,0) <> coalesce(NEW.nr_protocolo_ans,0)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Nr protocolo: ' || OLD.nr_protocolo_ans;
		end if;
		 
		if (coalesce(OLD.cd_conta_debito,0) <> coalesce(NEW.cd_conta_debito,0)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Conta débito: ' || OLD.cd_conta_debito;
		end if;
		 
		if (coalesce(OLD.cd_conta_contabil,0) <> coalesce(NEW.cd_conta_contabil,0)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Conta contábil: ' || OLD.cd_conta_contabil;
		end if;
		 
		if (coalesce(OLD.cd_conta_cred_encargos,0) <> coalesce(NEW.cd_conta_cred_encargos,0)) then 
			ds_alt_reg_w := ds_alt_reg_w || ', Conta crédito encargos: ' || OLD.cd_conta_cred_encargos;
		end if;
 
		ds_log_w := substr(wheb_mensagem_pck.get_texto(394796, 'NR_SEQUENCIA=' || ds_alt_reg_w),1,255);
 
		CALL wheb_usuario_pck.set_ie_executar_trigger('N');
 
		insert into	ctb_reg_auxiliar_log(nr_sequencia, 
						dt_atualizacao, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						nr_seq_reg_auxiliar, 
						ie_tipo_log, 
						ds_log) 
					values (nextval('ctb_reg_auxiliar_log_seq'), 
						LOCALTIMESTAMP, 
						nm_usuario_w, 
						LOCALTIMESTAMP, 
						nm_usuario_w, 
						NEW.nr_seq_reg_auxiliar, 
						'A', 
						ds_log_w);
					 
		CALL wheb_usuario_pck.set_ie_executar_trigger('S');
		 
	end if;
 
end if;
 
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_w_ctb_aux_contra_emit_log() FROM PUBLIC;

CREATE TRIGGER w_ctb_aux_contra_emit_log
	BEFORE INSERT OR UPDATE OR DELETE ON w_ctb_aux_contra_emit FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_w_ctb_aux_contra_emit_log();

