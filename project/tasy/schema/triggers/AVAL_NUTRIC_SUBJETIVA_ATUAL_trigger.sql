-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS aval_nutric_subjetiva_atual ON aval_nutric_subjetiva CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_aval_nutric_subjetiva_atual() RETURNS trigger AS $BODY$
declare

qt_ponto_w		      bigint;
qt_reg_w	          smallint;
nr_seq_evento_w		  bigint;
cd_estabelecimento_w  smallint;
cd_pessoa_fisica_w	  varchar(10);
qt_idade_w		      bigint;
ds_resultado_w        aval_nutric_subjetiva.ds_resultado%type;
qt_imc_w              real;
ds_sql_w              varchar(4000);
ds_erro_w             varchar(4000);
ds_parametros_w       varchar(4000);

C01 CURSOR FOR
	SELECT	nr_seq_evento
	from	regra_envio_sms
	where	((cd_estabelecimento_w = 0) or (cd_estabelecimento	= cd_estabelecimento_w))
	and		ie_evento_disp		= 'LASD'
	and		qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999)
	and		coalesce(ie_situacao,'A') = 'A';


pragma autonomous_transaction;
BEGIN
  BEGIN

if (NEW.nr_hora is null) or (NEW.DT_AVALIACAO <> OLD.DT_AVALIACAO) then
	BEGIN  
	NEW.nr_hora	:= (to_char(round(NEW.DT_AVALIACAO,'hh24'),'hh24'))::numeric;
	end;
end if;

if (NEW.nr_hora is null) or (NEW.DT_AVALIACAO <> OLD.DT_AVALIACAO) then 
	BEGIN  
	NEW.nr_hora	:= (to_char(round(NEW.DT_AVALIACAO,'hh24'),'hh24'))::numeric;
	end;
end if;

if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

BEGIN
	ds_sql_w := 'begin calc_perda_nutri_subjetiva_md(:1, :2, :3, :4); end;';


	EXECUTE ds_sql_w  using in NEW.qt_peso_habit,
								   in NEW.qt_peso_atual,
								   out NEW.pr_perda, 
								   out NEW.qt_perda;
 exception
 when others then
		ds_erro_w := substr(sqlerrm, 1, 4000);
		ds_parametros_w := substr(':new.nr_atendimento: '||NEW.nr_atendimento||'-'||':new.qt_peso_habit: '||NEW.qt_peso_habit||'-'||
								  'new.qt_peso_atual: '||NEW.qt_peso_atual||'-'||':new.pr_perda: '||NEW.pr_perda||'-'||':new.qt_perda: '||NEW.qt_perda, 1, 4000);
		CALL gravar_log_medical_device('AVAL_NUTRIC_SUBJETIVA_ATUAL', 'CALC_PERDA_NUTRI_SUBJETIVA_MD', ds_parametros_w, ds_erro_w, NEW.nm_usuario, 'N');

   NEW.pr_perda := null;
   NEW.qt_perda := null;
 end;

if (NEW.qt_perda < 0) then
	NEW.qt_perda	:= 0;
end if;

BEGIN
	ds_sql_w := 'call obter_pont_avalia_nutri_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16, :17, :18, :19, :20, :21) into :qt_ponto_w';
	EXECUTE ds_sql_w using in NEW.ie_mudou_peso, in NEW.pr_perda, in NEW.ie_mudanca_dieta, in NEW.ie_dieta_hipocalorica,
									 in NEW.ie_dieta_pastosa_hipocalorica, in NEW.ie_diet_liquida, in NEW.ie_jejum, in NEW.ie_mudanca_persistente, 
									 in NEW.ie_disfagia, in NEW.ie_nausea, in NEW.ie_vomito, in NEW.ie_diarreia, in NEW.ie_anorexia, 
									 in NEW.ie_capacidade_func, in NEW.ie_diagnostico, in NEW.ie_perda_gordura, in NEW.ie_edema_sacral, in NEW.ie_ascite, 
									 in NEW.ie_musculo_estriado, in NEW.ie_edema_tornozelo, in NEW.ie_perda_peso, out qt_ponto_w;
exception
	when others then
		ds_erro_w := substr(sqlerrm, 1, 4000);
		ds_parametros_w := substr(':new.nr_atendimento: '||NEW.nr_atendimento||'-'||':new.ie_mudou_peso: '||NEW.ie_mudou_peso||'-'||'new.pr_perda: '||NEW.pr_perda||'-'||':new.ie_mudanca_dieta: '||NEW.ie_mudanca_dieta||'-'||
								  ':new.ie_dieta_hipocalorica: '||NEW.ie_dieta_hipocalorica||'-'||':new.ie_dieta_pastosa_hipocalorica: '||NEW.ie_dieta_pastosa_hipocalorica||'-'||':new.ie_diet_liquida: '||NEW.ie_diet_liquida||'-'||
								  ':new.ie_jejum: '||NEW.ie_jejum||'-'||':new.ie_mudanca_persistente: '||NEW.ie_mudanca_persistente||'-'||'new.ie_disfagia: '||NEW.ie_disfagia||'-'||':new.ie_nausea: '||NEW.ie_nausea||'-'||
								  ':new.ie_vomito: '||NEW.ie_vomito||'-'||':new.ie_diarreia: '||NEW.ie_diarreia||'-'||':new.ie_anorexia: '||NEW.ie_anorexia||'-'||':new.ie_capacidade_func: '||NEW.ie_capacidade_func||'-'||
								  ':new.ie_diagnostico: '||NEW.ie_diagnostico||'-'||':new.ie_perda_gordura: '||NEW.ie_perda_gordura||'-'||':new.ie_edema_sacral: '||NEW.ie_edema_sacral||'-'||':new.ie_ascite: '||NEW.ie_ascite||'-'||
								  ':new.ie_musculo_estriado: '||NEW.ie_musculo_estriado||'-'||':new.ie_edema_tornozelo: '||NEW.ie_edema_tornozelo||'-'||':new.ie_perda_peso: '||NEW.ie_perda_peso||'-'||'qt_ponto_w: '||qt_ponto_w, 1, 4000);
		CALL gravar_log_medical_device('AVAL_NUTRIC_SUBJETIVA_ATUAL', 'OBTER_PONT_AVALIA_NUTRI_MD', ds_parametros_w, ds_erro_w, NEW.nm_usuario, 'N');	
		qt_ponto_w := null;
end;
	
NEW.qt_ponto := qt_ponto_w;

BEGIN
	ds_sql_w := 'call obter_desc_pont_aval_nutri_md(:1) into :ds_resultado_w';
	
	EXECUTE ds_sql_w  using in qt_ponto_w,
									  out ds_resultado_w;
exception
	when others then
		ds_erro_w := substr(sqlerrm, 1, 4000);
		ds_parametros_w := substr(':new.nr_atendimento: '|| NEW.nr_atendimento|| '-'|| 'qt_ponto_w: '|| qt_ponto_w|| '-'|| 'ds_resultado_w: '|| ds_resultado_w, 1, 4000);
		CALL gravar_log_medical_device('AVAL_NUTRIC_SUBJETIVA_ATUAL', 'OBTER_DESC_PONT_AVAL_NUTRI_MD', ds_parametros_w, ds_erro_w, NEW.nm_usuario, 'N');
		ds_resultado_w := null;
end;

NEW.ds_resultado := ds_resultado_w;

BEGIN
	ds_sql_w := 'call obter_valor_imc_md(:1, :2, :3) into :qt_imc_w';
	EXECUTE ds_sql_w using in NEW.qt_peso_atual,
									 in 0, 
									 in NEW.qt_altura, 
									 out qt_imc_w;
exception
	when others then
		ds_erro_w := substr(sqlerrm, 1, 4000);
		ds_parametros_w := substr(':new.nr_atendimento: '||NEW.nr_atendimento||'-'||':new.qt_peso_atual: '||NEW.qt_peso_atual||'-'||'new.qt_altura: '||NEW.qt_altura||'-'||'qt_imc_w: '||qt_imc_w, 1, 4000);
		CALL gravar_log_medical_device('AVAL_NUTRIC_SUBJETIVA_ATUAL', 'OBTER_VALOR_IMC_MD', ds_parametros_w, ds_erro_w, NEW.nm_usuario, 'N');
		qt_imc_w := null;
end;

NEW.qt_imc := qt_imc_w;

if (OLD.dt_liberacao is null) and (NEW.dt_liberacao is not null) then
	BEGIN  

	select	max(cd_estabelecimento),
		max(cd_pessoa_fisica)
	into STRICT	cd_estabelecimento_w,
		cd_pessoa_fisica_w
	from	atendimento_paciente
	where	nr_atendimento	= NEW.nr_atendimento;
	qt_idade_w	:= coalesce(obter_idade_pf(cd_pessoa_fisica_w,LOCALTIMESTAMP,'A'),0);
	open C01;
	loop
	fetch C01 into	
		nr_seq_evento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN
		CALL gerar_evento_paciente_trigger(nr_seq_evento_w,NEW.nr_atendimento,cd_pessoa_fisica_w,null,NEW.nm_usuario);
		end;
	end loop;
	close C01;
	end;

	CALL atualizar_prof_atend( NEW.nr_atendimento, NEW.nm_usuario);
end if;

<<Final>>
qt_reg_w	:= 0;
  END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_aval_nutric_subjetiva_atual() FROM PUBLIC;

CREATE TRIGGER aval_nutric_subjetiva_atual
	BEFORE INSERT OR UPDATE ON aval_nutric_subjetiva FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_aval_nutric_subjetiva_atual();

