-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS paciente_medic_uso_atual ON paciente_medic_uso CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_paciente_medic_uso_atual() RETURNS trigger AS $BODY$
declare
nr_seq_evento_w		bigint;
cd_estabelecimento_w	smallint;
qt_idade_w		bigint;

const_day_month_year_w			constant smallint := 1;
const_month_year_w				constant smallint := 2;
const_year_w					constant smallint := 3;

C01 CURSOR FOR
	SELECT	nr_seq_evento
	from	regra_envio_sms
	where	ie_evento_disp		= 'LHSP'
	and	qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999)
	and	coalesce(ie_situacao,'A') = 'A';

BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
	if (NEW.nr_atendimento is not null) then
		NEW.cd_setor_atendimento := obter_setor_atendimento(NEW.nr_atendimento);
	end if;

	if (coalesce(OLD.DT_REGISTRO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_REGISTRO) and (NEW.DT_REGISTRO is not null) then
		NEW.ds_utc		:= obter_data_utc(NEW.DT_REGISTRO, 'HV');	
	end if;

	if (coalesce(OLD.DT_LIBERACAO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_LIBERACAO) and (NEW.DT_LIBERACAO is not null) then
		NEW.ds_utc_atualizacao	:= obter_data_utc(NEW.DT_LIBERACAO,'HV');
	end if;

	if (coalesce(NEW.ie_nega_medicamentos,'S') not in ('S','D')) and (NEW.dt_fim is not null) and (OLD.dt_fim is null or OLD.dt_fim <> NEW.dt_fim)
		then
			NEW.nm_usuario_termino := wheb_usuario_pck.get_nm_usuario;
	end if;

	if (NEW.dt_fim is null) and (OLD.dt_fim is not null)then
		NEW.nm_usuario_termino := null;
	end if;

	if (NEW.dt_liberacao is not null) then
			BEGIN
		qt_idade_w	:= coalesce(obter_idade_pf( NEW.cd_pessoa_fisica,LOCALTIMESTAMP,'A'),0);
			open C01;
					loop
					fetch C01 into
							nr_seq_evento_w;
					EXIT WHEN NOT FOUND; /* apply on C01 */
							BEGIN
							CALL gerar_evento_paciente_trigger(nr_seq_evento_w,NEW.nr_atendimento,NEW.cd_pessoa_fisica,null,NEW.nm_usuario,null,NEW.dt_liberacao,null);
							end;
					end loop;
			close C01;
			end;
	end if;

	if (NEW.ds_unidade_medida is not null and NEW.cd_unid_med is null) then
		NEW.cd_unid_med := NEW.ds_unidade_medida;
	end if;

	if (NEW.ie_data_inicio = const_day_month_year_w) then
		NEW.QT_ANO_INICIO := (PKG_DATE_UTILS.extract_field('YEAR', NEW.DT_INICIO))::numeric;
		NEW.DT_MES_ANO_INICIO := NEW.DT_INICIO;
	elsif (NEW.ie_data_inicio = const_month_year_w) then
		NEW.DT_INICIO := NEW.DT_MES_ANO_INICIO;
		NEW.QT_ANO_INICIO := (PKG_DATE_UTILS.extract_field('YEAR', NEW.DT_MES_ANO_INICIO))::numeric;
	elsif (NEW.ie_data_inicio = const_year_w) then
		NEW.DT_INICIO := PKG_DATE_UTILS.get_Date(NEW.QT_ANO_INICIO);
		NEW.DT_MES_ANO_INICIO := PKG_DATE_UTILS.get_Date(NEW.QT_ANO_INICIO);
	end if;
end if;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_paciente_medic_uso_atual() FROM PUBLIC;

CREATE TRIGGER paciente_medic_uso_atual
	BEFORE INSERT OR UPDATE ON paciente_medic_uso FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_paciente_medic_uso_atual();

