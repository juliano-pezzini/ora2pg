-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS material_estab_after ON material_estab CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_material_estab_after() RETURNS trigger AS $BODY$
declare
reg_integracao_p		gerar_int_padrao.reg_integracao;
ie_operacao_w			varchar(1);
ie_material_estoque_w		varchar(1);
ie_padronizado_w		varchar(1);
cd_material_w			material.cd_material%type;
nm_usuario_w			usuario.nm_usuario%type;
cd_estabelecimento_w	material_estab.cd_estabelecimento%type;
ds_retorno_integracao_w text;
event_w					varchar(35);
event_class_w			varchar(100);
ie_integrar_w			varchar(1) := 'S';
qt_retorno_w        varchar(1);

pragma autonomous_transaction;

BEGIN

select	obter_valor_param_usuario(9041,
                                  10, 
                                  obter_perfil_ativo, 
                                  wheb_usuario_pck.get_nm_usuario(), 
                                  obter_estabelecimento_ativo())
into STRICT	qt_retorno_w
;

if (qt_retorno_w = 'S')then
  /* Inclusão do if wheb_usuario_pck.get_ie_executar_trigger devido ao grande volume de dados  do cliente RedeDor, ao dar d isable e e nable na  trigger , causava  extrema lentidão OS 1945059*/


  
  if (wheb_usuario_pck.get_ie_executar_trigger	= 'S')  then
    /*Quando Incluir, alterar e excluir as informações da material,_estab chama a integração padrão*/


    if (TG_OP = 'INSERT') then
      ie_operacao_w			:= 'A';
      ie_material_estoque_w		:= NEW.ie_material_estoque;
      ie_padronizado_w		:= NEW.ie_padronizado;
      cd_material_w			:= NEW.cd_material;
      nm_usuario_w			:= NEW.nm_usuario;
      cd_estabelecimento_w	:= NEW.cd_estabelecimento;
      event_w					:= 'establishmentmaterial.added'; -- event register in bifrost
      event_class_w			:= 'com.philips.tasy.integration.establishmentmaterial.outbound.EstablishmentMaterialAddedCallback'; -- event class created in tasy-interfaces(material module).
      ie_integrar_w			:= 'S';
    elsif (TG_OP = 'UPDATE') then	
      ie_operacao_w			:= 'A';
      ie_material_estoque_w		:= NEW.ie_material_estoque;
      ie_padronizado_w		:= NEW.ie_padronizado	;
      cd_material_w			:= NEW.cd_material;
      nm_usuario_w			:= NEW.nm_usuario;
      cd_estabelecimento_w	:= NEW.cd_estabelecimento;
      event_w					:= 'establishmentmaterial.updated'; -- event register in bifrost
      event_class_w			:= 'com.philips.tasy.integration.establishmentmaterial.outbound.EstablishmentMaterialUpdatedCallback'; -- event class created in tasy-interfaces(material module).
      ie_integrar_w			:= 'S';
      if (NEW.dt_atual_consumo <> OLD.dt_atual_consumo) then
        ie_integrar_w			:= 'N';
      end if;	
    else
      ie_operacao_w			:= 'A';
      ie_material_estoque_w		:= OLD.ie_material_estoque;
      ie_padronizado_w		:= OLD.ie_padronizado;
      cd_material_w			:= OLD.cd_material;
      nm_usuario_w			:= OLD.nm_usuario;
      cd_estabelecimento_w	:= OLD.cd_estabelecimento;
      event_w					:= 'establishmentmaterial.deleted'; -- event register in bifrost
      event_class_w			:= 'com.philips.tasy.integration.establishmentmaterial.outbound.EstablishmentMaterialDeletedCallback'; -- event class created in tasy-interfaces(material module).
      if (NEW.dt_atual_consumo <> OLD.dt_atual_consumo) then
        ie_integrar_w			:= 'N';
      end if;
    end if;

    reg_integracao_p.ie_operacao		:=	ie_operacao_w;
    reg_integracao_p.ie_material_estoque	:=	ie_material_estoque_w;
    reg_integracao_p.ie_padronizado		:=	ie_padronizado_w;

    if (ie_integrar_w = 'S') then
      reg_integracao_p.cd_estab_documento	:=	wheb_usuario_pck.get_cd_estabelecimento;
      reg_integracao_p := gerar_int_padrao.gravar_integracao('1', cd_material_w, nm_usuario_w, reg_integracao_p);
    end if;

    SELECT BIFROST.SEND_INTEGRATION(
        event_w,
        event_class_w,
        '{"material" : '||cd_material_w||', "establishment":' || cd_estabelecimento_w||'}',
        'integration')
    INTO STRICT ds_retorno_integracao_w
;

    commit;

  end if;	
end if;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_material_estab_after() FROM PUBLIC;

CREATE TRIGGER material_estab_after
	AFTER INSERT OR UPDATE OR DELETE ON material_estab FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_material_estab_after();

