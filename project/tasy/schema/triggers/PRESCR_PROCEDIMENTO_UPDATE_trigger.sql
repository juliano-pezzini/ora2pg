-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS prescr_procedimento_update ON prescr_procedimento CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_prescr_procedimento_update() RETURNS trigger AS $BODY$
declare

ie_status_pos_autor_w   LAB_PARAMETRO.IE_STATUS_POS_AUTOR%type;

ie_conta_ww           bigint;
acao_w                    varchar(11);
total_w                   bigint;
total_canc_w              bigint;
ie_etapa_w            varchar(1);
ie_conta_lab_ext_w        varchar(1);
ie_consid_lab_conta_ext_w   varchar(1);
nr_seq_resultado_w        bigint;
ie_tasylab_w          varchar(1);
ie_status_baixa_w       smallint;
ie_atualizar_recoleta_w     varchar(255);
dt_entrega_w          timestamp;
cd_setor_atend_w        varchar(255);
cd_setor_coleta_w       varchar(255);
cd_setor_entrega_w        varchar(255);
qt_dia_entrega_w        smallint;
ie_emite_mapa_w         varchar(1);
ie_excluir_laudo_w        varchar(1);
ie_excluir_vinculados_w     varchar(1);
cd_estabelecimento_w      estabelecimento.cd_estabelecimento%type;
cd_estab_prescr_w       estabelecimento.cd_estabelecimento%type;
dt_prescricao_w         timestamp;
dt_entrada_unid_prescr_w    timestamp;
dt_inicio_prescr_w        timestamp;
nr_seq_material_w       bigint;
ie_data_conta_w         smallint;
nr_seq_proc_w         bigint;
cd_material_exame_w       varchar(20);
cd_motivo_exclusao_w      varchar(20);
ie_status_conta_w       smallint;
ie_status_lote_ext_w      smallint;
dt_geracao_conta_w        timestamp;
qt_registros_w          bigint;
nr_atendimento_w        atendimento_paciente.nr_atendimento%type;
nr_atend_cir_w          atendimento_paciente.nr_atendimento%type;
nr_horas_validade_w       bigint;
dt_auxiliar_w         timestamp;
ds_hora_fixa_w          varchar(2);
ie_atualizar_lote_ext_w     varchar(1);
ie_situacao_w         varchar(1);
ds_procedimento_w       varchar(240);
ie_data_resultado_w       varchar(1);
varmatexame_w         varchar(1);
qt_mat_exame_w          integer;
qt_min_entrega_w        bigint;
ie_lado_w           varchar(1);
dt_digitacao_w          timestamp;
ie_atualiza_dt_digitacao_w    varchar(1);
ie_desaprovar_w         varchar(1);
ie_desaprovando_w       varchar(1) := 'N';
ie_retirar_lote_cancelar_w    varchar(1);
dt_envio_w            timestamp;
ie_permite_bloqueado_w      varchar(1);
qt_exame_arquivo_w        integer;
cd_medico_prescr_w        varchar(10);
qt_nao_gera_lote_w        bigint;
nr_cirurgia_w         bigint;
nr_seq_reserva_w        bigint;
qt_itens_reserva_w        bigint;
varie_cancela_reserva_w     varchar(1);
ie_status_prescr_contr_w    smallint;
qt_reg_w            smallint;
qt_itens_gerados_w        bigint;
ie_permite_definitivo_w     varchar(15);
dt_alta_w           timestamp;
dt_entrada_w          timestamp;
ie_tipo_convenio_w        smallint;
ie_consiste_tipo_convenio_w   varchar(1);
ie_consistencia_sus_w     varchar(1);
ie_susp_glicemia_w        varchar(1);
dt_coleta_amostra_w       timestamp;
ie_baixar_integr_depend_w   varchar(1);
nr_seq_status_pato_w      bigint;
ds_call_stack_w         varchar(2000);
cd_especialidade_w        varchar(50);
cd_setor_prescr_w       setor_atendimento.cd_setor_atendimento%type;
ie_tipo_atendimento_w     smallint;
cd_cbo_w            varchar(6) := '0';
ds_retorno_fpo_w        varchar(255)   := 'X';
ie_consiste_fpo_prescr_w    varchar(15)  := 'N';
nr_seq_evento_w         bigint;
ie_retorno_w          char(1);
ie_valor_nao_aceit_w      varchar(1);
dt_ult_transplante_w      timestamp;
cd_pessoa_fisica_w        pessoa_fisica.cd_pessoa_fisica%type;
cd_prescritor_w         pessoa_fisica.cd_pessoa_fisica%type;
ie_dia_semana_final_w       bigint;
dt_resultado_w          timestamp;
ie_dia_semana_upd_w       smallint;
ie_converte_proc_conv_w     varchar(1);
ie_ordem_converte_proc_w    varchar(2):= 'EP';
cd_procedimento_w       bigint;
ie_origem_proced_w        bigint;
ds_erro_w           varchar(255);
ie_status_pendente_adep_w   smallint;
ie_checa_adep_palm_w      varchar(1);
ds_horarios_w         varchar(2000);
ds_horarios_ww          varchar(2000);
nr_intervalo_w          bigint;
nr_seq_proc_interno_aux_w   bigint;
qt_registro_w         bigint;
cd_plano_convenio_w       varchar(10);
ie_integra_matrixws_w     varchar(1);
ie_prior_alta_dtconta_w     varchar(1);
ie_status_exam_n_lab_adep_w   varchar(5);
ie_status_recoleta_w      prescr_procedimento.ie_status_atend%type;
ie_remove_lote_ext_w      varchar(1);
contador_lote_w         bigint;
dt_coleta_lote_w        timestamp;
nr_seq_ficha_lote_w       bigint;
ie_status_exec_old_w      varchar(10);
nr_seq_proc_hor_w       bigint;
nr_seq_alteracao_w        bigint;
cd_procedencia_w        integer;
ie_DataPrevExecucao_w     varchar(10);
ie_worklist_carestream_w    varchar(2);
ie_sepse_lib_exame_w      varchar(1);
ie_retirar_lote_susp_w      lab_parametro.ie_retirar_lote_susp%type;
status_mapa_w           varchar(255);
grupos_mapa_w         varchar(255);
grupo_imp_lab_w         varchar(10);
possui_formato_exame_w      varchar(1);
ie_limpar_data_integracao_w   varchar(2);
ie_gera_conta_dependente_w    varchar(1);
ie_forma_atual_dt_result_w    exame_lab_regra_setor.ie_atul_data_result%type;
ie_data_canc_exame_w      varchar(1);
qt_min_atraso_w           bigint;
ie_ctrl_glic_w          varchar(10) := 'XPTO';
cd_perfil_w           bigint;
qtd_prescrito_status_w      bigint;
ds_log_w            varchar(2000);
cd_funcao_origem_w        prescr_medica.cd_funcao_origem%type;
nr_controle_w           prescr_medica.nr_controle%type;
qt_horas_adicional_w      double precision;
ie_intervalo_24_w       varchar(5);
hr_prim_horario_w       varchar(5);
ie_copia_dil_w          varchar(10);
qt_horas_ant_copia_cpoe_w   bigint;
dt_inicio_item_w        timestamp;
dt_copia_cpoe_w         timestamp;
ie_operacao_w       varchar(2);
ds_param_integ_hl7_w varchar(2000);
dt_min_date_w			timestamp := to_date('30/12/1899 00:00:00', 'dd/mm/yyyy hh24:mi:ss');
json_data_w          	text;					

nr_atendimento_ww       material_atend_paciente.nr_atendimento%type;
dt_entrada_unidade_w      material_atend_paciente.dt_entrada_unidade%type;
cd_material_exec_w        material_atend_paciente.cd_material_exec%type;
dt_atendimento_w        material_atend_paciente.dt_atendimento%type;
cd_acao_w           material_atend_paciente.cd_acao%type;
cd_local_estoque_w        material_atend_paciente.cd_local_estoque%type;
qt_estoque_w          material_atend_paciente.qt_estoque%type;
cd_setor_atendimento_w      material_atend_paciente.nr_atendimento%type;
cd_unidade_medida_w       material_atend_paciente.cd_unidade_medida%type;
nr_prescricao_w         material_atend_paciente.nr_prescricao%type;
nr_sequencia_prescricao_w   material_atend_paciente.nr_sequencia_prescricao%type;
nr_sequencia_w          material_atend_paciente.nr_sequencia%type;
cd_cgc_fornecedor_w       material_atend_paciente.cd_cgc_fornecedor%type;
ds_observacao_w         material_atend_paciente.ds_observacao%type;
nr_seq_lote_fornec_w      material_atend_paciente.nr_seq_Lote_fornec%type;
nr_receita_w          material_atend_paciente.nr_receita%type;
nr_serie_material_w       material_atend_paciente.nr_serie_material%type;
ie_matrix_status_envio_integ_w  lab_parametro.ie_matrix_status_envio_integ%type;
ie_atualiza_setor_exame_lab_w lab_parametro.ie_atualiza_setor_exame_lab%type;
cd_procedimento_tuss_w      procedimento.cd_procedimento%type;
cd_convenio_w         convenio.cd_convenio%type;
cd_categoria_w          categoria_convenio.cd_categoria%type;
count_w             bigint;
ie_anatomia_patologica_w    exame_laboratorio.ie_anatomia_patologica%type;
reg_integracao_w        gerar_int_padrao.reg_integracao;
nr_ie_critico_exists_w        smallint;
nr_seq_proc_compl_w       prescr_procedimento.nr_seq_proc_compl%type;
nr_seq_proc_pacote_w      procedimento_paciente.nr_seq_proc_pacote%type;
ds_param_adicional_w        varchar(100);
registro_integracao_w     gerar_int_padrao.reg_integracao;
dt_liberacao_w                  exame_lab_result_item.dt_liberacao%type;
nr_seq_cih_w          cih_doenca_compulsoria.nr_sequencia%type;
nm_usuario_w          usuario.nm_usuario%type;
nr_seq_lista_espera_w     agenda_lista_espera.nr_sequencia%type;
ie_tem_conta_paciente           char(1);
qt_prescr_pro_hor_w				integer;
param_8_forma_geracao_dt_fim_w	varchar(2);
dt_fim_horario_w				cpoe_procedimento.dt_fim%type;
qt_dt_fim_horario_w				integer;
dt_horario_w					timestamp;
ds_param_integration_w varchar(500);
ie_retrogrado_w varchar(1);
ie_transmit_special_order varchar(1);

c02 CURSOR FOR
  SELECT  b.cd_material_exame
  from  material_exame_lab b,
      exame_lab_material a
  where a.nr_seq_material   = b.nr_sequencia
  and   a.nr_seq_exame    = NEW.nr_seq_exame
  and (b.cd_material_exame  = coalesce(NEW.cd_material_exame, b.cd_material_exame) or (ie_retorno_w = 'N'))
  and   a.ie_situacao     = 'A' /*Bruna OS76502, buscar o material*/

  and   varmatexame_w   = 'S'
  order by
      a.ie_prioridade;

c03 CURSOR FOR
  SELECT  a.cd_cbo
  from  sus_cbo b,
      sus_cbo_pessoa_fisica   a
  where sus_obter_secbo_compativel(coalesce(NEW.cd_medico_exec,NEW.cd_profissional), NEW.cd_procedimento, NEW.ie_origem_proced, LOCALTIMESTAMP, a.cd_cbo, 0) = 'S'
  and   cd_pessoa_fisica  = coalesce(NEW.cd_medico_exec, NEW.cd_profissional)
  and   a.cd_cbo    = b.cd_cbo
  order by
      a.nr_seq_apres desc,
      a.cd_cbo;

c04 CURSOR FOR
  SELECT  a.nr_seq_evento
  from  regra_envio_sms a
  where a.ie_evento_disp = 'APRE'
  and coalesce(a.ie_situacao,'A') = 'A';

c05 CURSOR FOR
  SELECT  a.nr_seq_evento
  from  regra_envio_sms a
  where a.ie_evento_disp = 'APRNA'
  and ((nr_dias_transplante is null) or
    (dt_ult_transplante_w >= (LOCALTIMESTAMP - nr_dias_transplante)))
  and coalesce(a.ie_situacao,'A') = 'A'
  and obter_se_regra_envio(a.nr_sequencia,nr_atendimento_w) = 'S';

c06 CURSOR FOR
  SELECT  a.nr_seq_evento
  from  regra_envio_sms a
  where a.ie_evento_disp = 'AEREP'
  and coalesce(a.ie_situacao,'A') = 'A';

c07 CURSOR FOR
  SELECT  a.nr_seq_evento
  from  regra_envio_sms a
  where a.ie_evento_disp = 'APREL'
  and coalesce(a.ie_situacao,'A') = 'A';

c08 CURSOR FOR
  SELECT  b.nr_sequencia
  from  prescr_proc_hor b
  where coalesce(b.nr_seq_proc_origem,b.nr_seq_procedimento) = NEW.nr_sequencia
  and b.nr_prescricao   = NEW.nr_prescricao
  --and b.dt_horario    = trunc(:new.dt_prev_execucao,'mi')

  order by 1;

C09 CURSOR FOR
    SELECT  a.nr_atendimento,
        a.dt_entrada_unidade,
        coalesce(a.cd_Material_exec,a.cd_material),
        a.dt_atendimento,
        a.cd_acao,
        a.cd_local_estoque,
        coalesce(a.qt_estoque,a.qt_material),
        a.cd_setor_atendimento,
        a.cd_unidade_medida,
        a.nr_prescricao,
        a.nr_sequencia_prescricao,
        a.nr_sequencia,
        a.cd_cgc_fornecedor,
        a.ds_observacao,
        a.nr_seq_lote_fornec,
        a.nr_receita,
        a.nr_serie_material
    from  material_atend_paciente a
    where a.nr_seq_proc_princ = nr_seq_proc_w
    and   a.dt_atualizacao_estoque is not null
    and   a.cd_local_estoque is not null
    and   obter_se_baixa_estoque_pac(a.cd_setor_atendimento, coalesce(a.cd_material_exec, a.cd_material),null,0) = 'S';

c10 CURSOR FOR
  SELECT  a.nr_seq_evento
  from  regra_envio_sms a
  where a.ie_evento_disp = 'APRELABDC'
  and coalesce(a.ie_situacao,'A') = 'A';

c11 CURSOR FOR
  SELECT  a.nr_seq_evento
  from  regra_envio_sms a
  where a.ie_evento_disp = 'LIBELABDC'
  and coalesce(a.ie_situacao,'A') = 'A';

c12 CURSOR FOR  
SELECT  b.nr_seq_sub_grp
from    cpoe_order_unit a,
        cpoe_tipo_pedido b,
        cpoe_anatomia_patologica e
where   a.nr_seq_cpoe_tipo_pedido   = b.nr_sequencia
        and a.nr_sequencia          = e.nr_seq_cpoe_order_unit  
        and e.nr_sequencia          = NEW.nr_seq_proc_cpoe

union all

SELECT  distinct b.nr_seq_sub_grp
from    cpoe_order_unit a,
        cpoe_tipo_pedido b,
        cpoe_procedimento c
where   a.nr_seq_cpoe_tipo_pedido   = b.nr_sequencia
        and a.nr_sequencia          = c.nr_seq_cpoe_order_unit  
        and c.nr_sequencia          = NEW.nr_seq_proc_cpoe

union all

select  distinct b.nr_seq_sub_grp
from    cpoe_hemoterapia a,
        cpoe_tipo_pedido b,
        cpoe_order_unit c,
        prescr_solic_bco_sangue e
where   e.nr_seq_hemo_cpoe              = a.nr_sequencia
        and a.nr_seq_cpoe_order_unit    = c.nr_sequencia
        and c.nr_seq_cpoe_tipo_pedido   = b.nr_sequencia
        and a.nr_sequencia              = NEW.nr_seq_proc_cpoe;										
BEGIN
  BEGIN
/*AVISO !!!!!!!!!!
ESTA TRIGGER N?O PODE TER SELECT EM CIMA DA PRESCR_MEDICA
*/

BEGIN
    select  coalesce(max('S'),'N')
    into STRICT  ie_tem_conta_paciente
    from  procedimento_paciente where   nr_prescricao = NEW.nr_prescricao
    and   nr_sequencia_prescricao = NEW.nr_sequencia LIMIT 1;
EXCEPTION
   WHEN OTHERS THEN
        ie_tem_conta_paciente := null;
END;

BEGIN

select  ie_status_pos_autor
into STRICT  ie_status_pos_autor_w
from  lab_parametro
where cd_estabelecimento = coalesce(wheb_usuario_pck.get_cd_estabelecimento,0);
exception
    when no_data_found then
    ie_status_pos_autor_w := null;
end;

if((ie_status_pos_autor_w is not null) and
  ((coalesce(OLD.ie_autorizacao, 'A') not in ('L','A','NN','AP')) and (NEW.ie_autorizacao in ('L','A','NN','AP'))))then
  NEW.ie_status_atend := ie_status_pos_autor_w;
end if;


if (wheb_usuario_pck.get_ie_executar_trigger = 'N')  then
  goto final;
end if;

ie_status_exec_old_w  := NEW.ie_status_execucao;

if (coalesce(NEW.nr_ocorrencia,0) = 0) then
  NEW.nr_ocorrencia  := 1;
end if;

if (NEW.nr_seq_exame is not null) and (NEW.dt_prev_execucao is null) and (NEW.ie_status_atend >= 30) then
   NEW.dt_prev_execucao := LOCALTIMESTAMP;
end if;

if (OLD.nr_seq_motivo_desaprov <> NEW.nr_seq_motivo_desaprov) then
  update result_laboratorio_copia a
  set   a.nr_seq_motivo_desaprov = NEW.nr_seq_motivo_desaprov
  where a.nr_prescricao = NEW.nr_prescricao
  and   a.nr_seq_prescricao = NEW.nr_sequencia
  and   a.nr_sequencia = (SELECT MAX(b.nr_sequencia) from result_laboratorio_copia b where b.nr_prescricao = a.nr_prescricao and b.nr_seq_prescricao = a.nr_seq_prescricao);
end if;

dt_prescricao_w       := obter_datas_prescricao(NEW.nr_prescricao,'P');
dt_entrada_unid_prescr_w  := obter_datas_prescricao(NEW.nr_prescricao,'DEP');
dt_inicio_prescr_w      := obter_datas_prescricao(NEW.nr_prescricao,'I');
cd_funcao_origem_w      := obter_funcao_origem_prescr(NEW.nr_prescricao);
cd_pessoa_fisica_w      := obter_valores_prescr_trigger(NEW.nr_prescricao,'PF');
nr_horas_validade_w     := obter_valores_prescr_trigger(NEW.nr_prescricao,'HV');
nr_atendimento_w      := obter_valores_prescr_trigger(NEW.nr_prescricao,'A');
cd_prescritor_w       := obter_valores_prescr_trigger(NEW.nr_prescricao,'P');
cd_setor_prescr_w     := obter_valores_prescr_trigger(NEW.nr_prescricao,'SA');
cd_medico_prescr_w      := obter_valores_prescr_trigger(NEW.nr_prescricao,'M');
cd_estab_prescr_w     := obter_valores_prescr_trigger(NEW.nr_prescricao,'E');

if (coalesce(cd_estabelecimento_w,0) = 0) then
  cd_estabelecimento_w := coalesce(wheb_usuario_pck.get_cd_estabelecimento,0);
end if;
cd_perfil_w       := coalesce(obter_perfil_ativo,0);
CALL wheb_assist_pck.set_informacoes_usuario(cd_estabelecimento_w,cd_perfil_w,wheb_usuario_pck.get_nm_usuario);

if (NEW.cd_procedimento <> OLD.cd_procedimento) and (OLD.nm_usuario_biometria is not null) then
  NEW.nm_usuario_biometria   := null;
  NEW.dt_biometria       := null;
end if;

BEGIN
if (NEW.cd_procedimento <> OLD.cd_procedimento) then
  delete
  from  prescr_proced_biometria
  where nr_prescricao = NEW.nr_prescricao
  and nr_seq_proc = NEW.nr_sequencia;
end if;
exception
when others then
  NEW.nm_usuario_aux_biometria := null;
end;

ie_DataPrevExecucao_w := wheb_assist_pck.obterValorParametroREP(105, ie_DataPrevExecucao_w);

select coalesce(obter_ctrl_glic_proc(NEW.nr_seq_proc_interno),'XPTO')
into STRICT ie_ctrl_glic_w
;

if (NEW.dt_prev_execucao  is not null) and (ie_DataPrevExecucao_w = 'DIV')  and (dt_inicio_prescr_w is not null) and (coalesce(NEW.ie_acm,'N') <> 'S')    and (coalesce(NEW.ie_se_necessario,'N') <> 'S') and (NEW.dt_prev_execucao  < dt_inicio_prescr_w) and (NEW.dt_prev_execucao  < dt_prescricao_w) and (coalesce(NEW.ie_urgencia,'N')  <> 'S') and (coalesce(ie_ctrl_glic_w,'XPTO') <> 'CIG') then
  NEW.dt_prev_execucao := dt_inicio_prescr_w;

  SELECT * FROM Calcular_Horario_Prescricao(
        NEW.nr_prescricao, NEW.cd_intervalo, dt_inicio_prescr_w, NEW.dt_prev_execucao, nr_horas_validade_w, NEW.cd_procedimento, NEW.qt_hora_intervalo, NEW.qt_min_intervalo, nr_intervalo_w, ds_horarios_w, ds_horarios_ww, 'N', null, null, NEW.cd_procedimento, NEW.ie_origem_proced, NEW.nr_seq_proc_interno) INTO STRICT nr_intervalo_w, ds_horarios_w, ds_horarios_ww;
  NEW.ds_horarios  := substr(ds_horarios_w || ds_horarios_ww,1,2000);
elsif (NEW.dt_prev_execucao  is not null) and (dt_prescricao_w  is not null) and (coalesce(NEW.ie_acm,'N') <> 'S') and (coalesce(NEW.ie_se_necessario,'N') <> 'S') and (NEW.dt_prev_execucao  < dt_prescricao_w) and (coalesce(NEW.ie_urgencia,'N')  <> 'S') and (coalesce(ie_ctrl_glic_w,'XPTO') <> 'CIG') then
  NEW.dt_prev_execucao := dt_prescricao_w;

  SELECT * FROM Calcular_Horario_Prescricao(
        NEW.nr_prescricao, NEW.cd_intervalo, dt_inicio_prescr_w, NEW.dt_prev_execucao, nr_horas_validade_w, NEW.cd_procedimento, NEW.qt_hora_intervalo, NEW.qt_min_intervalo, nr_intervalo_w, ds_horarios_w, ds_horarios_ww, 'N', null, null, NEW.cd_procedimento, NEW.ie_origem_proced, NEW.nr_seq_proc_interno) INTO STRICT nr_intervalo_w, ds_horarios_w, ds_horarios_ww;
  NEW.ds_horarios  := substr(ds_horarios_w || ds_horarios_ww,1,2000);
end if;


if (NEW.ds_horarios <> OLD.ds_horarios) and (NEW.ds_horarios is not null) and (cd_funcao_origem_w = 2314) and
  ((obter_funcao_ativa = 7015) or (obter_funcao_ativa = 7010) or (obter_funcao_ativa = 252)) and (obter_datas_prescricao(NEW.nr_prescricao,'L') is not null) then

  qt_horas_adicional_w := 24;
  if (NEW.cd_intervalo is not null) then
    select  coalesce(max(ie_24_h),'N')
    into STRICT  ie_intervalo_24_w
    from  intervalo_prescricao
    where cd_intervalo = NEW.cd_intervalo
    and     coalesce(ie_operacao,'X') = 'H'
    and     coalesce(qt_operacao,1) > 24;
  end if;
  qt_horas_ant_copia_cpoe_w := get_qt_hours_after_copy_cpoe( obter_perfil_ativo, NEW.nm_usuario, obter_estabelecimento_ativo);

  if (ie_intervalo_24_w = 'S') then
    qt_horas_adicional_w := Obter_ocorrencia_intervalo(NEW.cd_intervalo,24,'H');
  else

    select  coalesce(max(ie_operacao),'XX')
    into STRICT  ie_operacao_w
    from  intervalo_prescricao
    where cd_intervalo = NEW.cd_intervalo;

    qt_horas_adicional_w := Obter_ocorrencia_intervalo(NEW.cd_intervalo,24,'H');
    if (ie_operacao_w = 'H' and qt_horas_adicional_w > 12 and qt_horas_adicional_w < 24) then
      qt_horas_adicional_w := qt_horas_adicional_w + qt_horas_adicional_w;
    else
      qt_horas_adicional_w := 24;
    end if;
  end if;

  hr_prim_horario_w   :=  obter_prim_dshorarios(NEW.ds_horarios);

  dt_inicio_item_w := to_date(to_char(NEW.dt_prev_execucao,'dd/mm/yyyy')||' '||hr_prim_horario_w||':00','dd/mm/yyyy hh24:mi:ss');
  if (dt_inicio_item_w < dt_inicio_prescr_w) then
    dt_inicio_item_w := dt_inicio_item_w + 1;
  end if;

  dt_copia_cpoe_w := (dt_inicio_item_w + ((qt_horas_adicional_w - qt_horas_ant_copia_cpoe_w)/24));

  update  cpoe_procedimento
  set   dt_prox_geracao = trunc(dt_copia_cpoe_w,'hh')
  where nr_sequencia = NEW.nr_seq_proc_cpoe;

end if;


if (NEW.ie_tipo_proced is null) and (NEW.nr_seq_proc_interno is not null) then
  select  ie_tipo
  into STRICT  NEW.ie_tipo_proced
  from  proc_interno
  where nr_sequencia  = NEW.nr_seq_proc_interno;
elsif (NEW.ie_tipo_proced is null) then
  NEW.ie_tipo_proced := 'O';
end if;

update  prescr_material
set ie_suspenso   = NEW.ie_suspenso,
    dt_suspensao   	= NEW.dt_suspensao,
    nm_usuario_susp	= NEW.nm_usuario_susp
where nr_prescricao   = NEW.nr_prescricao
and nr_sequencia_proc = NEW.nr_sequencia
and ie_agrupador    = 5;

if (NEW.nr_seq_exame is not null) then
  if (NEW.ie_avisar_result = 'S') and (NEW.ie_status_atend >= 35) and (OLD.ie_status_atend < 35) then
    CALL gerar_aviso_result_prescr(NEW.nr_prescricao,0,NEW.cd_procedimento,NEW.ie_origem_proced,NEW.nr_seq_exame);

    open c06;
    loop
    fetch c06 into
      nr_seq_evento_w;
    EXIT WHEN NOT FOUND; /* apply on c06 */
      CALL gerar_evento_laudo_lab(nr_seq_evento_w,NEW.nm_usuario,NEW.nr_prescricao,NEW.nr_sequencia,NEW.nr_seq_exame,'S',null,'P');
    end loop;
    close c06;
  end if;

  select max(a.nr_sequencia)
  into STRICT nr_seq_cih_w
  from  cih_doenca_compulsoria a,
    cih_exame_doenca_compul b
  where a.nr_sequencia = b.nr_seq_doenca
    and a.ie_situacao = 'A'
    and b.ie_situacao = 'A'
    and b.nr_seq_exame = NEW.nr_seq_exame;

  if (nr_seq_cih_w is not null) then
    if (OLD.ie_status_atend = 30) and (NEW.ie_status_atend = 35) then
      open c10;
        loop
          fetch c10 into
            nr_seq_evento_w;
          EXIT WHEN NOT FOUND; /* apply on c10 */
          BEGIN
            lab_gerar_aviso_exame_dc(nr_seq_cih_w, nr_seq_evento_w,NEW.nm_usuario,NEW.nr_prescricao,NEW.nr_sequencia,NEW.nr_seq_exame,'S');
          end;
        end loop;
      close c10;
    end if;

    if (OLD.ie_status_atend = 35) and (NEW.ie_status_atend > 35) then
      open c11;
        loop
          fetch c11 into
            nr_seq_evento_w;
          EXIT WHEN NOT FOUND; /* apply on c11 */
          BEGIN
            lab_gerar_aviso_exame_dc(nr_seq_cih_w, nr_seq_evento_w,NEW.nm_usuario,NEW.nr_prescricao,NEW.nr_sequencia,NEW.nr_seq_exame,'S');
          end;
        end loop;
      close c11;
    end if;
  end if;

  --Gerar Mapa a ser impresso

  select  lab_obter_valor_parametro(10209, 3),
    lab_obter_valor_parametro(10209, 1),
    Obter_Grupo_imp_Exame_lab(NEW.nr_seq_exame),
    lab_ie_imprime_mapa(NEW.nr_seq_exame, NEW.nm_usuario)
  into STRICT  status_mapa_w,
    grupos_mapa_w,
    grupo_imp_lab_w,
    possui_formato_exame_w
;

  if (OLD.ie_status_atend <> NEW.ie_status_atend) and (NEW.ie_status_atend = status_mapa_w) and
    ((grupos_mapa_w is null) or ((grupo_imp_lab_w is not null) and (grupo_imp_lab_w in (grupos_mapa_w)))) and
    ((Lab_imp_mapa_regra(NEW.nr_prescricao, NEW.nr_sequencia, NEW.nr_seq_exame,NEW.cd_setor_atendimento) = 'S') and (possui_formato_exame_w = 'S')) then
    CALL lab_insere_impressao_mapa(NEW.nr_prescricao, NEW.nr_sequencia, NEW.nr_seq_exame, NEW.nm_usuario, NEW.cd_setor_atendimento);
  end if;

  if (NEW.ie_status_atend >= 35) and (OLD.ie_status_atend < 35) then
    select  coalesce(max('S'),'N')
    into STRICT  ie_retorno_w
    from  exame_laboratorio a where   a.ie_formato_resultado in ('SM','SDM')
    and   a.nr_seq_exame = NEW.nr_seq_exame LIMIT 1;

    if (ie_retorno_w = 'S') then
      open c04;
      loop
      fetch c04 into
        nr_seq_evento_w;
      EXIT WHEN NOT FOUND; /* apply on c04 */
        BEGIN
        CALL gerar_evento_aprov_result_lab(nr_seq_evento_w,NEW.nm_usuario, NEW.nr_prescricao, NEW.nr_sequencia, NEW.nr_seq_exame, 'S');
        end;
      end loop;
      close c04;
    end if;

    dt_ult_transplante_w := Obter_Dt_Transplante_PF(cd_pessoa_fisica_w);

    open c05;
    loop
    fetch c05 into
      nr_seq_evento_w;
    EXIT WHEN NOT FOUND; /* apply on c05 */
      BEGIN
      ie_valor_nao_aceit_w := verifica_res_nao_aceit_alert(NEW.nr_prescricao, NEW.nr_sequencia, NEW.nr_seq_exame, NEW.cd_material_exame, ie_valor_nao_aceit_w);

      if (coalesce(ie_valor_nao_aceit_w,'N') = 'S') then
        CALL gerar_evento_aprov_result_lab(nr_seq_evento_w,NEW.nm_usuario, NEW.nr_prescricao, NEW.nr_sequencia, NEW.nr_seq_exame, 'S');
      end if;
      end;
    end loop;
    close c05;

    open c07;
    loop
    fetch c07 into
      nr_seq_evento_w;
    EXIT WHEN NOT FOUND; /* apply on c07 */
      BEGIN
      CALL gerar_evento_aprov_result_lab(nr_seq_evento_w,NEW.nm_usuario, NEW.nr_prescricao, NEW.nr_sequencia, NEW.nr_seq_exame, 'S');
      end;
    end loop;
    close c07;

    /* Roger Panayfo - 16/MAR/2018: If the laboratory result has been marked as critical, then a record is inserted into PRESC_PROCEDIMENTO_COMPL */


    select count(1) as total
    into STRICT nr_ie_critico_exists_w
    from  exame_lab_result_item b,
      exame_lab_resultado a
    where a.nr_seq_resultado  = b.nr_seq_resultado
    and b.ie_resultado_critico = 'S'
    and b.nr_seq_prescr = NEW.nr_sequencia
    and a.nr_prescricao = NEW.nr_prescricao;

    if (nr_ie_critico_exists_w  > 0 ) then
          if (NEW.nr_seq_proc_compl is null) then
            select nextval('prescr_procedimento_compl_seq')
            into STRICT nr_seq_proc_compl_w
;

            insert
            into prescr_procedimento_compl(
                nr_sequencia,
                dt_atualizacao,
                nm_usuario,
                dt_atualizacao_nrec,
                nm_usuario_nrec,
                ie_critico,
                nm_usuario_critico,
                ie_comunicacao_critico
              )
              values (
                nr_seq_proc_compl_w,
                LOCALTIMESTAMP,
                NEW.nm_usuario,
                LOCALTIMESTAMP,
                NEW.nm_usuario,
                'S',
                NEW.nm_usuario,
                1
              );

            NEW.nr_seq_proc_compl  := nr_seq_proc_compl_w;
          else
            update prescr_procedimento_compl
            set ie_critico           = 'S',
              ie_comunicacao_critico = 1,
              dt_atualizacao         = LOCALTIMESTAMP,
              nm_usuario_critico     = NEW.nm_usuario,
              nm_usuario             = NEW.nm_usuario
            where nr_sequencia       = nr_seq_proc_compl_w;
          end if;
    end if;
  end if;

  if (NEW.ie_status_atend = 20) and (NEW.ie_status_execucao = '10') and (NEW.cd_motivo_baixa = 0) then /* Edilson em 06/02/2008 OS 81397 */

    NEW.ie_status_execucao := '15';
  elsif (NEW.ie_status_execucao in ('10','15')) and (NEW.cd_motivo_baixa <> 0) then
    NEW.ie_status_execucao := '20';
  elsif (NEW.ie_status_execucao = '11') and (NEW.cd_motivo_baixa <> 0) and (NEW.dt_integracao IS NOT NULL) then
    NEW.ie_status_execucao  := '20';
  end if;

  if  ((NEW.ie_exame_bloqueado = 'S') or (NEW.ie_exame_bloqueado = 'R')) and (NEW.ie_status_atend <> OLD.ie_status_atend) then
    cd_estabelecimento_w := coalesce(wheb_usuario_pck.get_cd_estabelecimento,0);
    ie_permite_bloqueado_w := obter_param_usuario(722, 66, obter_perfil_ativo, NEW.nm_usuario, cd_estabelecimento_w, ie_permite_bloqueado_w);
    if (ie_permite_bloqueado_w = 'N') and (NEW.ie_exame_bloqueado = 'S') and (coalesce(NEW.cd_funcao_origem,0) <> 2314) then
      CALL wheb_mensagem_pck.exibir_mensagem_abort(183110);
    elsif (ie_permite_bloqueado_w = 'N') and (NEW.ie_exame_bloqueado = 'R') and (coalesce(NEW.cd_funcao_origem,0) <> 2314) then
      CALL wheb_mensagem_pck.exibir_mensagem_abort(183113);
    end if;
  end if;

  ie_tasylab_w := obter_param_usuario(0, 26, null, null, 0, ie_tasylab_w); /*Elemar 30/06/04 */


  /* Bruna - 11/08/2006 - Inclui tratamento caso o material seja nulo*/


  if (cd_estabelecimento_w > 0) then
    select  coalesce(max(ie_salva_etapa),'N'),
        coalesce(max(ie_status_baixa),99),
        coalesce(max(ie_excluir_laudo),'N'),
        coalesce(max(ie_status_conta),99),
        coalesce(max(ie_status_lote_ext),99),
        coalesce(max(ie_atualizar_lote_ext),'N'),
        coalesce(max(ie_atualizar_data_digitacao),'S'),
        coalesce(max(ie_retirar_lote_cancelar),'S'),
        coalesce(max(ie_status_prescr_contr),0),
        coalesce(max(ie_data_conta),3),
        coalesce(max(ie_consiste_tipo_convenio),'N'),
        coalesce(max(ie_baixar_integr_depend),'N'),
        coalesce(max(ie_prior_alta_dtconta),'N'),
        coalesce(max(ie_retirar_lote_susp),'N')
    into STRICT  ie_etapa_w,
        ie_status_baixa_w,
        ie_excluir_laudo_w,
        ie_status_conta_w,
        ie_status_lote_ext_w,
        ie_atualizar_lote_ext_w,
        ie_atualiza_dt_digitacao_w,
        ie_retirar_lote_cancelar_w,
        ie_status_prescr_contr_w,
        ie_data_conta_w,
        ie_consiste_tipo_convenio_w,
        ie_baixar_integr_depend_w,
        ie_prior_alta_dtconta_w,
        ie_retirar_lote_susp_w
    from  lab_parametro
    where cd_estabelecimento = cd_estabelecimento_w;
  elsif (cd_estab_prescr_w > 0) then
    select  coalesce(max(ie_salva_etapa),'N'),
        coalesce(max(ie_status_baixa),99),
        coalesce(max(ie_excluir_laudo),'N'),
        coalesce(max(ie_status_conta),99),
        coalesce(max(ie_status_lote_ext),99),
        coalesce(max(ie_atualizar_lote_ext),'N'),
        coalesce(max(ie_atualizar_data_digitacao),'S'),
        coalesce(max(ie_retirar_lote_cancelar),'S'),
        coalesce(max(ie_status_prescr_contr),0),
        coalesce(max(ie_data_conta),3),
        coalesce(max(ie_consiste_tipo_convenio),'N'),
        coalesce(max(ie_baixar_integr_depend),'N'),
        coalesce(max(ie_prior_alta_dtconta),'N'),
        coalesce(max(ie_retirar_lote_susp),'N')
    into STRICT  ie_etapa_w,
        ie_status_baixa_w,
        ie_excluir_laudo_w,
        ie_status_conta_w,
        ie_status_lote_ext_w,
        ie_atualizar_lote_ext_w,
        ie_atualiza_dt_digitacao_w,
        ie_retirar_lote_cancelar_w,
        ie_status_prescr_contr_w,
        ie_data_conta_w,
        ie_consiste_tipo_convenio_w,
        ie_baixar_integr_depend_w,
        ie_prior_alta_dtconta_w,
        ie_retirar_lote_susp_w
    from  lab_parametro
    where cd_estabelecimento = cd_estab_prescr_w;
  else
    select  coalesce(max(ie_salva_etapa),'N'),
        coalesce(max(ie_status_baixa),99),
        coalesce(max(ie_excluir_laudo),'N'),
        coalesce(max(ie_status_conta),99),
        coalesce(max(ie_status_lote_ext),99),
        coalesce(max(ie_atualizar_lote_ext),'N'),
        coalesce(max(ie_atualizar_data_digitacao),'S'),
        coalesce(max(ie_retirar_lote_cancelar),'S'),
        coalesce(max(ie_status_prescr_contr),0),
        coalesce(max(ie_data_conta),3),
        coalesce(max(ie_consiste_tipo_convenio),'N'),
        coalesce(max(ie_baixar_integr_depend),'N'),
        coalesce(max(ie_prior_alta_dtconta),'N'),
        coalesce(max(ie_retirar_lote_susp),'N')
    into STRICT  ie_etapa_w,
        ie_status_baixa_w,
        ie_excluir_laudo_w,
        ie_status_conta_w,
        ie_status_lote_ext_w,
        ie_atualizar_lote_ext_w,
        ie_atualiza_dt_digitacao_w,
        ie_retirar_lote_cancelar_w,
        ie_status_prescr_contr_w,
        ie_data_conta_w,
        ie_consiste_tipo_convenio_w,
        ie_baixar_integr_depend_w,
        ie_prior_alta_dtconta_w,
        ie_retirar_lote_susp_w
    from  lab_parametro;
  end if;

  if (ie_etapa_w = 'S') and (NEW.ie_status_atend is not null) and
    ((coalesce(NEW.ie_status_atend,0) <> coalesce(OLD.ie_status_atend,0)) or (NEW.ie_exame_bloqueado <> coalesce(OLD.ie_exame_bloqueado,'N'))) then
    dt_digitacao_w  := LOCALTIMESTAMP;

    nm_usuario_w := NEW.nm_usuario;

    if (obter_funcao_ativa = 1113) then
      nm_usuario_w := wheb_usuario_pck.get_nm_usuario;
    end if;

    insert into prescr_proc_etapa(nr_prescricao, nr_seq_prescricao, ie_etapa, ie_exame_bloqueado,
            dt_atualizacao, nm_usuario, nr_sequencia, ie_amostra, nr_seq_motivo_alt_status, ds_justificativa_alt,
            nr_seq_funcao, ds_call_stack)
    values (NEW.nr_prescricao, NEW.nr_sequencia, NEW.ie_status_atend, coalesce(NEW.ie_exame_bloqueado,'N'),
        dt_digitacao_w, nm_usuario_w, nextval('prescr_proc_etapa_seq'),NEW.ie_amostra, NEW.nr_seq_motivo_alt_status, NEW.ds_justificativa_alt,
        obter_funcao_ativa, substr(dbms_utility.format_call_stack,1,4000));

    select  coalesce(max(a.nr_seq_resultado),0) /*Bruna OS 98277 11/07/2008*/

    into STRICT  nr_seq_resultado_w
    from  exame_lab_result_item a,
      exame_lab_resultado b
    where a.nr_seq_resultado = b.nr_seq_resultado
    and nr_prescricao = NEW.nr_prescricao
    and nr_seq_prescr = NEW.nr_sequencia
    and nr_seq_material is not null;

    if (ie_atualiza_dt_digitacao_w = 'S') and (nr_seq_resultado_w > 0) and (NEW.ie_status_atend = 30) then

      update  exame_lab_result_item
      set dt_digitacao = dt_digitacao_w
      where nr_seq_resultado = nr_seq_resultado_w
      and nr_seq_prescr = NEW.nr_sequencia;
    end if;

    if (nr_seq_resultado_w > 0) and (NEW.ie_status_atend < 30) then
      update  exame_lab_result_item
      set dt_digitacao  = NULL
      where nr_seq_resultado = nr_seq_resultado_w
      and nr_seq_prescr = NEW.nr_sequencia
      and dt_digitacao is not null;
    end if;
  end if;

  if (coalesce(NEW.cd_material_exame,'X') <> coalesce(OLD.cd_material_exame,'X')) then
    select  coalesce(max('S'),'N')
    into STRICT  ie_retorno_w
    from  material_exame_lab b,
        exame_lab_material a where   b.nr_sequencia    = a.nr_seq_material
    and   a.ie_situacao     =  'A'
    and   b.cd_material_exame   = NEW.cd_material_exame
    and   a.nr_seq_exame    = NEW.nr_seq_exame LIMIT 1;

    if (ie_retorno_w = 'N') then
      NEW.cd_material_exame := OLD.cd_material_exame;
    end if;
  end if;

  if (NEW.cd_material_exame is null) then
    select  coalesce(max('S'),'N')
    into STRICT  ie_retorno_w
    from  material_exame_lab b,
        exame_lab_material a where   b.nr_sequencia    = a.nr_seq_material
    and   a.ie_situacao     =  'A'
    and   b.cd_material_exame   = NEW.cd_material_exame
    and   a.nr_seq_exame    = NEW.nr_seq_exame LIMIT 1;

    varmatexame_w := wheb_assist_pck.obterValorParametroREP(88, varmatexame_w);

    open c02;
    loop
      fetch c02 into NEW.cd_material_exame;
      exit;
    end loop;
    close c02;

    if (coalesce(obter_dados_exame_lab_rep(
          obter_perfil_ativo,
          obter_especialidade_medico(cd_prescritor_w, 'C'),
          cd_setor_prescr_w,
          NEW.nr_seq_exame,
          cd_estab_prescr_w,
          'N'), 'PL') = 'V') and (NEW.cd_material_exame is not null) then
      NEW.cd_material_exame := null;
    elsif (varmatexame_w = 'S') and (NEW.cd_material_exame is null) and (coalesce(NEW.cd_funcao_origem,0) <> 2314) then
      -- Exame n?o possui material informado "#@NR_SEQ_EXAME#@ - Prescric?o: #@NR_PRESCRICAO#@"!

      CALL wheb_mensagem_pck.exibir_mensagem_abort(183119,'NR_SEQ_EXAME='||to_char(NEW.nr_seq_exame)||';NR_PRESCRICAO='||to_char(NEW.nr_prescricao));
    end if;
  end if;

  select  coalesce(max(nr_seq_resultado),0)
  into STRICT  nr_seq_resultado_w
  from  exame_lab_resultado
  where nr_prescricao = NEW.nr_prescricao;

  ie_data_canc_exame_w  := coalesce(obter_valor_param_usuario(722, 262, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento),'N');

  /* Elemar - 15/09/03 - Excluir laboratorio ao cancelar procedimento */


  if (NEW.cd_motivo_baixa <> 0) and (NEW.cd_motivo_baixa <> OLD.cd_motivo_baixa) and
    (((ie_data_canc_exame_w = 'N') and ((NEW.nm_usuario_baixa is not null) or (NEW.dt_baixa_job is not null))) or (ie_data_canc_exame_w = 'S' AND NEW.dt_cancelamento is not null)) then
    select  coalesce(max('S'),'N')
    into STRICT  ie_retorno_w
    from  tipo_baixa_prescricao where   coalesce(cd_tipo_baixa,0) <> 0
    and   ie_prescricao_devolucao = 'P'
    and   ie_conta_paciente   = 'N'
    and   cd_tipo_baixa   = NEW.cd_motivo_baixa LIMIT 1;

    if (ie_retorno_w = 'S') then
      if (ie_retirar_lote_cancelar_w = 'S') then
        select  max(dt_envio)
        into STRICT  dt_envio_w
        from  lab_lote_externo
        where nr_sequencia = NEW.nr_seq_lote_externo;

        if (dt_envio_w is null) then
          NEW.nr_seq_lote_externo := null;
        end if;
      end if;

      if (NEW.ie_status_atend >= 35) and (coalesce(NEW.cd_funcao_origem,0) <> 2314) then
        -- Este exame ja foi aprovado, n?o pode ser cancelado !

        CALL wheb_mensagem_pck.exibir_mensagem_abort(183114);
      end if;

      if (nr_seq_resultado_w > 0) then
        delete FROM exame_lab_result_item
        where nr_seq_resultado    = nr_seq_resultado_w
          and nr_seq_prescr     = NEW.nr_sequencia;

        delete  FROM result_laboratorio a
        where a.nr_prescricao   = NEW.nr_prescricao
          and a.nr_seq_prescricao = NEW.nr_sequencia
          and not exists (  SELECT  1
              from  envelope_laudo_item b
              where b.nr_seq_result_lab = a.nr_sequencia);
      end if;
    end if;
  end if;

  /* Elemar - 17/12/2003 - Baixar na confirmac?o da entrega da amostra */


  /* Comentado em acordo com Elemar em 24/12/2003 deve resolver p/HDH no retorno */


  if (NEW.ie_amostra = 'S') and (OLD.ie_amostra = 'N') then
    if (coalesce(ie_tasylab_w,'N')   = 'N') and /*Elemar 30/06/04 */

      (NEW.cd_motivo_baixa = 0) and (OLD.cd_motivo_baixa = 0) then
      /* Elemar - 06/01/2004 - Inclui o select */


      select coalesce(max('S'),'N')
      into STRICT  ie_retorno_w
      from  procedimento_paciente where   nr_prescricao = NEW.nr_prescricao
      and   nr_sequencia_prescricao = NEW.nr_sequencia LIMIT 1;

      if (ie_retorno_w = 'S') then
        NEW.cd_motivo_baixa  := 1;
        NEW.dt_baixa   := LOCALTIMESTAMP;
      end if;
    end if;

    /*atualiza a lote_ent_sec_ficha com a amostra para 'S' tambem*/


    select  coalesce(max('S'),'N')
    into STRICT  ie_retorno_w
    from  lote_ent_sec_ficha where   nr_prescricao = NEW.nr_prescricao LIMIT 1;

    if (ie_retorno_w = 'S') then
      CALL atual_lote_sec_amostra(NEW.nr_prescricao, 'S');
      /*update  lote_ent_sec_ficha
      set   ie_amostra = 'S'
      where nr_prescricao = :new.nr_prescricao
      and   nvl(ie_amostra,'N') = 'N';    */

    end if;
  end if;

  if (coalesce(ie_tasylab_w,'N')  = 'S') and (ie_status_baixa_w    = NEW.ie_status_atend) and (NEW.ie_status_atend <> OLD.ie_status_atend) and (NEW.cd_motivo_baixa = 0) then
    NEW.cd_motivo_baixa  := 1;
    NEW.dt_baixa   := LOCALTIMESTAMP;
  end if;

  if (OLD.ie_status_atend >= 35) and (NEW.ie_status_atend < 35) and (nr_seq_resultado_w > 0) then
    ie_desaprovando_w := 'S';

    update exame_lab_result_item
    set dt_aprovacao     = NULL,
      nm_usuario_aprovacao   = NULL,
      dt_impressao     = NULL
    where nr_seq_resultado  = nr_seq_resultado_w
      and nr_seq_prescr = NEW.nr_sequencia
      and nr_seq_material is not null;
  end if;

  if  /*(:old.ie_status_atend >= 40) and
    (:new.ie_status_atend < 40) and
    (nr_seq_resultado_w > 0) then*/

    (NEW.ie_status_atend < OLD.ie_status_atend) and (NEW.ie_status_atend < 40) and (nr_seq_resultado_w > 0) then
    update exame_lab_result_item
    set dt_liberacao     = NULL,
      nm_usuario_liberacao   = NULL
    where nr_seq_resultado  = nr_seq_resultado_w
      and nr_seq_prescr = NEW.nr_sequencia
      and nr_seq_material is not null;
  end if;

  if (NEW.ie_status_atend < OLD.ie_status_atend) and (NEW.ie_status_atend < 40) and (nr_seq_resultado_w > 0)then
        select  max(dt_liberacao)
            into STRICT    dt_liberacao_w
        from    exame_lab_result_item
        where   nr_seq_resultado = nr_seq_resultado_w
      and   nr_seq_prescr  = NEW.nr_sequencia
      and   nr_seq_material is not null;

        if (dt_liberacao_w is not null) and (ie_status_baixa_w = NEW.ie_status_atend)then

            update exame_lab_result_item
            set dt_liberacao    = LOCALTIMESTAMP,
                nm_usuario_liberacao  = NEW.nm_usuario
            where nr_seq_resultado  = nr_seq_resultado_w
              and nr_seq_prescr = NEW.nr_sequencia
              and nr_seq_material is not null;

        end if;
  end if;

  if (OLD.ie_status_atend >= 35) and (NEW.ie_status_atend < 35) and (nr_seq_resultado_w > 0) and (ie_excluir_laudo_w = 'S') then
    delete FROM exame_lab_result_item
    where nr_seq_resultado  = nr_seq_resultado_w
      and nr_seq_prescr = NEW.nr_sequencia
      and nr_seq_material is null;

    update exame_lab_result_item
    set qt_resultado = 0, pr_resultado = 0, ds_resultado = ''
    where nr_seq_resultado  = nr_seq_resultado_w
      and nr_seq_prescr = NEW.nr_sequencia;
  end if;

  if (NEW.ie_status_atend > 20) and (NEW.dt_coleta is null) and (OLD.dt_coleta is null) then
    NEW.dt_coleta := LOCALTIMESTAMP;
  end if;

  if (NEW.dt_coleta is not null) and (NEW.dt_coleta <> coalesce(OLD.dt_coleta, LOCALTIMESTAMP - interval '9999 days')) then
    select  max(nr_sequencia)
    into STRICT  nr_seq_material_w
    from  material_exame_lab
    where cd_material_exame = NEW.cd_material_exame;

    if (nr_seq_material_w is not null) then
      update  prescr_proc_material
      set dt_coleta = NEW.dt_coleta
      where nr_prescricao = NEW.nr_prescricao
        and nr_seq_material = nr_seq_material_w
        and dt_coleta < NEW.dt_coleta
/*        and nr_sequencia  = ( select min(nr_sequencia)
              from prescr_proc_material
              where nr_prescricao     = :new.nr_prescricao
                and nvl(dt_coleta,sysdate - 9999) < :new.dt_coleta
                and nr_seq_material     = nr_seq_material_w)*/
;
    end if;
  end if;

  if (NEW.dt_coleta is not null) and (NEW.dt_coleta <> coalesce(OLD.dt_coleta, LOCALTIMESTAMP - interval '9999 days')) then

    select  coalesce(max(a.nr_seq_resultado),0) /*Bruna OS 98277 11/07/2008*/

    into STRICT  nr_seq_resultado_w
    from  exame_lab_result_item a,
      exame_lab_resultado b
    where a.nr_seq_resultado = b.nr_seq_resultado
    and nr_prescricao = NEW.nr_prescricao
    and nr_seq_prescr = NEW.nr_sequencia
    and nr_seq_material is not null;

    if (nr_seq_resultado_w > 0) then
      update  exame_lab_result_item
      set dt_coleta = NEW.dt_coleta
      where nr_seq_resultado = nr_seq_resultado_w
      and nr_seq_prescr = NEW.nr_sequencia
      and dt_coleta is not null;
    end if;
  end if;

  if (NEW.ie_status_atend >= 20) and (OLD.ie_status_atend < 20) and (NEW.ie_amostra = 'N') then
    NEW.ie_amostra := 'S';
  end if;

  if (NEW.ie_status_atend >= 20) and (OLD.ie_status_atend < 20) and (NEW.ie_pendente_amostra = 'S') then
    NEW.ie_pendente_amostra:= 'N';
  end if;

  select  max(nr_sequencia)
  into STRICT  nr_seq_ficha_lote_w
  from  lote_ent_sec_ficha
  where nr_prescricao = NEW.nr_prescricao;

  if (NEW.ie_status_atend >= 20) and (coalesce(nr_seq_ficha_lote_w,0) > 0) then
    select  TO_DATE(TO_CHAR(coalesce(dt_coleta_ficha_f,LOCALTIMESTAMP),'dd/mm/yyyy')||' '||TO_CHAR(coalesce(hr_coleta_f,LOCALTIMESTAMP),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')
    into STRICT  NEW.dt_coleta
    from  lote_ent_sec_ficha
    where nr_prescricao = NEW.nr_prescricao;

    /*if (dt_coleta_lote_w is not null) then
      :new.dt_coleta := dt_coleta_lote_w;
    end if;*/

  end if;

  if (NEW.ie_amostra <> 'S') then
    NEW.ie_amostra := 'N';
  end if;

  /* OS 65621 - Bruna 21/09 - Coloquei a rotina apos ser atualizado a data de coleta */


  if (NEW.ie_amostra = 'S') and (OLD.ie_amostra = 'N') then
    /* Elemar - 08/11/2004 - Inicio*/


    SELECT * FROM obter_setor_exame_lab(  NEW.nr_prescricao, NEW.nr_seq_exame, NEW.cd_setor_atendimento, NEW.cd_material_exame, NEW.dt_coleta, 'N', cd_setor_atend_w, cd_setor_coleta_w, cd_setor_entrega_w, qt_dia_entrega_w, ie_emite_mapa_w, ds_hora_fixa_w, ie_data_resultado_w, qt_min_entrega_w, ie_atualizar_recoleta_w, NEW.ie_urgencia, ie_dia_semana_final_w, ie_forma_atual_dt_result_w, qt_min_atraso_w) INTO STRICT cd_setor_atend_w, cd_setor_coleta_w, cd_setor_entrega_w, qt_dia_entrega_w, ie_emite_mapa_w, ds_hora_fixa_w, ie_data_resultado_w, qt_min_entrega_w, ie_atualizar_recoleta_w, ie_dia_semana_final_w, ie_forma_atual_dt_result_w, qt_min_atraso_w;

    if (ie_data_resultado_w = 'P') then
      if (ds_hora_fixa_w is not null) then
        dt_resultado_w  := (establishment_timezone_utils.startOfDay(coalesce(dt_entrada_unid_prescr_w,dt_prescricao_w)) + (ds_hora_fixa_w/24)) + qt_dia_entrega_w + (qt_min_entrega_w/1440);
      else
        dt_resultado_w  := coalesce(dt_entrada_unid_prescr_w,dt_prescricao_w) + qt_dia_entrega_w  + (qt_min_entrega_w/1440);
      end if;
    elsif (ie_data_resultado_w = 'C') and (NEW.dt_coleta is not null) then
      if (ds_hora_fixa_w is not null) then
                if (coalesce(qt_min_entrega_w,0) > 0) then
                    dt_resultado_w  :=  (establishment_timezone_utils.startOfDay(NEW.dt_coleta) + (ds_hora_fixa_w/24)) + qt_dia_entrega_w  + (qt_min_entrega_w/1440);
                else
        dt_resultado_w  :=  (establishment_timezone_utils.startOfDay(NEW.dt_coleta) + (ds_hora_fixa_w/24)) + qt_dia_entrega_w  + qt_min_entrega_w;
                end if;
      else
                if (coalesce(qt_min_entrega_w,0) > 0) then
                    dt_resultado_w  :=  NEW.dt_coleta + qt_dia_entrega_w  + (qt_min_entrega_w/1440);
      else
        dt_resultado_w  :=  NEW.dt_coleta + qt_dia_entrega_w  + qt_min_entrega_w;
      end if;
      end if;
      NEW.dt_resultado := dt_resultado_w;
    elsif (ie_data_resultado_w = 'N') then
      if (NEW.dt_coleta is not null) then
        if (ds_hora_fixa_w is not null) then
                    if (coalesce(qt_min_entrega_w,0) > 0) then
                        dt_resultado_w  :=  (establishment_timezone_utils.startOfDay(NEW.dt_coleta) + (ds_hora_fixa_w/24)) + qt_dia_entrega_w  + (qt_min_entrega_w/1440);
                    else
          dt_resultado_w  :=  (establishment_timezone_utils.startOfDay(NEW.dt_coleta) + (ds_hora_fixa_w/24)) + qt_dia_entrega_w  + qt_min_entrega_w;
                    end if;
        else
                    if (coalesce(qt_min_entrega_w,0) > 0) then
                        dt_resultado_w  :=  NEW.dt_coleta + qt_dia_entrega_w  + (qt_min_entrega_w/1440);
        else
          dt_resultado_w  :=  NEW.dt_coleta + qt_dia_entrega_w  + qt_min_entrega_w;
        end if;
        end if;
      else
        if (ds_hora_fixa_w is not null) then
          dt_resultado_w  := (establishment_timezone_utils.startOfDay(coalesce(dt_entrada_unid_prescr_w,dt_prescricao_w)) + (ds_hora_fixa_w/24)) + qt_dia_entrega_w + (qt_min_entrega_w/1440);
        else
          dt_resultado_w  := coalesce(dt_entrada_unid_prescr_w,dt_prescricao_w) + qt_dia_entrega_w  + (qt_min_entrega_w/1440);
        end if;
      end if;
    end if;

    if (dt_resultado_w is not null) and (ie_dia_semana_final_w > 0) then
      ie_dia_semana_upd_w :=  pkg_date_utils.get_WeekDay(dt_resultado_w);
      while(ie_dia_semana_upd_w <> ie_dia_semana_final_w) loop
        dt_resultado_w := dt_resultado_w + 1;
        ie_dia_semana_upd_w :=  pkg_date_utils.get_WeekDay(dt_resultado_w);
      end loop;
      NEW.dt_resultado := dt_resultado_w;
    end if;
  end if;

  if (coalesce(NEW.nr_seq_superior,0) > 0) and (NEW.cd_motivo_baixa_exame is not null) then
    select  coalesce(max('S'),'N')
    into STRICT  ie_retorno_w
    from  tipo_baixa_prescricao where   ie_prescricao_devolucao = 'P'
    and   ie_conta_paciente   = 'N'
    and   cd_tipo_baixa   = NEW.cd_motivo_baixa_exame LIMIT 1;

    if (ie_retorno_w = 'S') and
      (OLD.dt_integracao is null AND NEW.dt_integracao is not null) and
      ((NEW.cd_motivo_baixa is null) and (coalesce(NEW.ie_baixa_dep_lab,'N') = 'S')) then
      NEW.cd_motivo_baixa := NEW.cd_motivo_baixa_exame;
      NEW.dt_baixa := LOCALTIMESTAMP;
      NEW.nm_usuario_baixa := 'Tasy';
      NEW.ds_observacao := substr(OLD.ds_observacao||' ' || wheb_mensagem_pck.get_texto(309607),1,2000); -- Baixa por dependente
    end if;
  end if;

  if (NEW.ie_status_atend >= ie_status_conta_w) and (NEW.ie_status_atend <> coalesce(OLD.ie_status_atend, 0)) and (ie_desaprovando_w = 'N') then
    select  coalesce(max('S'),'N')
    into STRICT  ie_retorno_w
    from  procedimento_paciente where   nr_prescricao = NEW.nr_prescricao
    and   nr_sequencia_prescricao = NEW.nr_sequencia LIMIT 1;

    if (ie_retorno_w = 'N') then
      dt_auxiliar_w := coalesce(dt_prescricao_w, LOCALTIMESTAMP);
      ie_permite_definitivo_w := obter_param_usuario(916, 80, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_permite_definitivo_w);

      if (ie_permite_definitivo_w = 'N') and (nr_atendimento_w > 0) then
        select  coalesce(max('S'),'N')
        into STRICT  ie_retorno_w
        from  conta_paciente where   nr_atendimento    = nr_atendimento_w
        and   ie_status_acerto  = 1 LIMIT 1;

        if (ie_retorno_w = 'N') then
          select  coalesce(max('S'),'N')
          into STRICT  ie_retorno_w
          from  conta_paciente where   nr_atendimento    = nr_atendimento_w
          and   ie_status_acerto  = 2 LIMIT 1;

          if (ie_retorno_w = 'S') and (coalesce(NEW.cd_funcao_origem,0) <> 2314) then
            -- A conta do atendimento esta com status definitivo. O procedimento n?o pode ser executado!

            CALL wheb_mensagem_pck.exibir_mensagem_abort(183115);
          end if;
        end if;
      end if;

      select  max(dt_alta),
          max(dt_entrada),
          max(ie_tipo_convenio),
          max(ie_tipo_atendimento),
          max(obter_plano_conv_atend(nr_atendimento)),
          max(coalesce(cd_procedencia,0))
      into STRICT  dt_alta_w,
          dt_entrada_w,
          ie_tipo_convenio_w,
          ie_tipo_atendimento_w,
          cd_plano_convenio_w,
          cd_procedencia_w
      from  atendimento_paciente
      where nr_atendimento = nr_atendimento_w;

      select  coalesce(max(nr_sequencia),0) + 1
      into STRICT  qt_registros_w
      from  atend_paciente_unidade
      where nr_atendimento    = nr_atendimento_w
        and dt_entrada_unidade  = LOCALTIMESTAMP;

      dt_geracao_conta_w  := LOCALTIMESTAMP - (qt_registros_w/86400);

      if (ie_data_conta_w = 0) then
        dt_geracao_conta_w := dt_auxiliar_w;
        if (dt_alta_w is not null) and (dt_alta_w < dt_auxiliar_w) then
          dt_geracao_conta_w  := dt_alta_w;
        end if;

        if (dt_entrada_w > dt_auxiliar_w) then
          dt_geracao_conta_w := dt_entrada_w;
        end if;
      end if;

      if (ie_data_conta_w = 1) then
        if (ie_prior_alta_dtconta_w = 'S') then
          if  (dt_alta_w is not null AND dt_alta_w < NEW.dt_prev_execucao) then
            dt_geracao_conta_w := dt_alta_w;
          else
            dt_geracao_conta_w := NEW.dt_prev_execucao;
          end if;
        else
          dt_geracao_conta_w := NEW.dt_prev_execucao;
        end if;
      elsif (ie_data_conta_w = 2) then
        if (ie_prior_alta_dtconta_w = 'S') then
          if  (dt_alta_w is not null AND dt_alta_w < NEW.dt_baixa) then
            dt_geracao_conta_w := dt_alta_w;
          else
            dt_geracao_conta_w := NEW.dt_baixa;
          end if;
        else
          dt_geracao_conta_w := NEW.dt_baixa;
        end if;
      elsif (ie_data_conta_w = 4) then
        if (ie_prior_alta_dtconta_w = 'S') then
          if  (dt_alta_w is not null AND dt_alta_w < NEW.dt_coleta) then
            dt_geracao_conta_w := dt_alta_w;
          else
            dt_geracao_conta_w := NEW.dt_coleta;
          end if;
        else
          dt_geracao_conta_w := NEW.dt_coleta;
        end if;
      elsif (ie_data_conta_w = 5) then
        if (ie_prior_alta_dtconta_w = 'S') then
          if  (dt_alta_w is not null AND dt_alta_w < dt_inicio_prescr_w) then
            dt_geracao_conta_w := dt_alta_w;
          else
            dt_geracao_conta_w := dt_inicio_prescr_w;
          end if;
        else
          dt_geracao_conta_w := dt_inicio_prescr_w;
        end if;
      end if;

      ie_retorno_w  := 'N';

      if (coalesce(NEW.nr_seq_superior,0) > 0) and (NEW.cd_motivo_baixa_exame is not null) then
        select  coalesce(max('S'),'N')
        into STRICT  ie_retorno_w
        from  tipo_baixa_prescricao where   ie_prescricao_devolucao = 'P'
        and   ie_conta_paciente   = 'N'
        and   cd_tipo_baixa   = NEW.cd_motivo_baixa_exame LIMIT 1;
      end if;

      ie_gera_conta_dependente_w  := 'S';
      if (coalesce(NEW.nr_seq_superior,0) <> 0) then
        ie_gera_conta_dependente_w := lab_consistir_depend_conta(NEW.nr_prescricao, NEW.nr_seq_superior, NEW.nr_seq_exame, ie_gera_conta_dependente_w);
      end if;

      if (ie_gera_conta_dependente_w = 'S') then
        if (ie_retorno_w = 'N') then
          if (ie_tipo_convenio_w = 3) and (ie_consiste_tipo_convenio_w = 'S') then
            ie_consistencia_sus_w :=  sus_consiste_proced_atend(nr_atendimento_w,NEW.cd_procedimento,NEW.ie_origem_proced);

            if (ie_consistencia_sus_w = 'N') and (coalesce(NEW.cd_funcao_origem,0) <> 2314) then
              CALL wheb_mensagem_pck.exibir_mensagem_abort(183116);
            end if;
          end if;

          CALL gerar_proc_pac_item_prescr_up(
            NEW.nr_prescricao, NEW.nr_sequencia, null, null,
            NEW.nr_seq_proc_interno,
            NEW.cd_procedimento, NEW.ie_origem_proced,
            NEW.qt_procedimento, NEW.cd_setor_atendimento,
            9, dt_geracao_conta_w,
            NEW.nm_usuario, NEW.cd_medico_exec, NEW.nr_seq_exame, coalesce(NEW.ie_lado,'A'), null, null, null, null, null, null, NEW.nr_doc_convenio, NEW.cd_senha);

      BEGIN
          select  coalesce(max('S'),'N')
          into STRICT  ie_tem_conta_paciente
          from  procedimento_paciente where   nr_prescricao = NEW.nr_prescricao
          and   nr_sequencia_prescricao = NEW.nr_sequencia LIMIT 1;
      EXCEPTION
         WHEN OTHERS THEN
              ie_tem_conta_paciente := null;
      END;
        end if;


      end if;

	  select  count(1)
          into STRICT  count_w
          from  intpd_eventos a,
              intpd_eventos_sistema b
          where a.nr_sequencia = b.nr_seq_evento
          and   a.ie_evento = 169
          and   a.ie_situacao = 'A'
          and   b.ie_situacao = 'A'  LIMIT 1;
      if (count_w=0) then
        NEW.ie_status_execucao := '20';
      end if;

    end if;
  end if;

  if ((NEW.ie_status_atend = ie_status_lote_ext_w) and
     ((NEW.nr_seq_lote_externo is null) or (ie_atualizar_lote_ext_w = 'S')) and (NEW.ie_status_atend <> OLD.ie_status_atend) and (NEW.ie_status_atend > 10)) then
    select  coalesce(max('S'),'N')
    into STRICT  ie_retorno_w
    from  lab_regra_gerar_lote_ext where   cd_medico_prescr = cd_medico_prescr_w
    and   ie_gerar_lote = 'N' LIMIT 1;

    if (ie_retorno_w = 'N') then
      NEW.nr_seq_lote_externo := lab_obter_lote_externo(NEW.nr_seq_exame, NEW.nm_usuario, cd_estab_prescr_w, NEW.nr_seq_lote_externo, NEW.cd_setor_coleta, NEW.nr_prescricao, NEW.nr_sequencia, NEW.cd_material_exame);
    end if;
  end if;

  if (NEW.ie_status_atend <> coalesce(OLD.ie_status_atend,0)) then
    BEGIN
    update  prescr_proc_mat_item
    set   ie_status   = NEW.ie_status_atend
    where nr_prescricao   = NEW.nr_prescricao
    and   nr_seq_prescr   = NEW.nr_sequencia;

    exception
    when others then
      CALL gravar_log_lab(30,'Prescr_procedimento_upd - ' ||  wheb_mensagem_pck.get_texto(309608) || '. '||NEW.nr_sequencia||' - '||sqlerrm, NEW.nm_usuario,NEW.nr_prescricao,''); -- Seq
    end;
  end if;

  if (ie_status_prescr_contr_w = NEW.ie_status_atend) and (NEW.ie_status_atend <> OLD.ie_status_atend)  then
    CALL gerar_seq_lab_prescricao(NEW.nr_prescricao,NEW.nm_usuario);
  end if;

  if (NEW.ie_status_atend < 35) and (OLD.ie_status_atend > 30) then
    if (coalesce(cd_estabelecimento_w,0) = 0) then
      cd_estabelecimento_w  := cd_estab_prescr_w;
    end if;

    ie_desaprovar_w := obter_param_usuario(722, 59, obter_perfil_ativo, NEW.nm_usuario, cd_estabelecimento_w, ie_desaprovar_w);

    if (coalesce(ie_desaprovar_w,'S') = 'N') and (coalesce(NEW.cd_funcao_origem,0) <> 2314)  then
      CALL wheb_mensagem_pck.exibir_mensagem_abort(183117);
    end if;

    NEW.ie_result_lab_gerado := 'N';
  end if;

  if (NEW.ie_status_atend > OLD.ie_status_atend) and (NEW.ie_status_atend > 30) then
    qt_itens_gerados_w  :=  lab_consitir_val_interf_aprov(NEW.nr_prescricao,NEW.nr_sequencia);

    if (qt_itens_gerados_w > 0) and (coalesce(NEW.cd_funcao_origem,0) <> 2314) then
      /*select  max(nr_seq_resultado)
      into  nr_seq_resultado_w
      from  exame_lab_resultado
      where nr_prescricao = :new.nr_prescricao;

      update  exame_lab_result_item
      set   dt_aprovacao = null
      where   nr_seq_resultado = nr_seq_resultado_w
      and nr_seq_prescr = :new.nr_Sequencia
      and dt_aprovacao is not null; */


      CALL lab_desaprovar_exame(NEW.nr_prescricao,NEW.nr_sequencia,NEW.nm_usuario);
      CALL wheb_mensagem_pck.exibir_mensagem_abort(183118);
    end if;
  end if;

  if (NEW.ie_status_atend < OLD.ie_status_atend) and (OLD.ie_status_atend = 30) then

    select  coalesce(max(a.nr_seq_resultado),0) /*Bruna OS 98277 11/07/2008*/

    into STRICT  nr_seq_resultado_w
    from  exame_lab_result_item a,
      exame_lab_resultado b
    where a.nr_seq_resultado = b.nr_seq_resultado
    and nr_prescricao = NEW.nr_prescricao
    and nr_seq_prescr = NEW.nr_sequencia
    and nr_seq_material is not null;

    if (nr_seq_resultado_w > 0) then
      update  exame_lab_result_item
      set dt_aprovacao  = NULL
      where nr_seq_resultado = nr_seq_resultado_w
      and nr_seq_prescr = NEW.nr_sequencia
      and dt_aprovacao is not null;
    end if;
  end if;

  if (NEW.cd_material_exame <> OLD.cd_material_exame) then
    NEW.nr_seq_frasco := lab_seq_obter_frasco_exame(NEW.nr_seq_exame,NEW.cd_material_exame, null);
  end if;

  if  ((coalesce(NEW.cd_material_exame,'X') <> coalesce(OLD.cd_material_exame,'X')) or (coalesce(NEW.ie_urgencia,'X') <> coalesce(OLD.ie_urgencia,'X')) or (coalesce(NEW.nr_seq_exame,0) <> coalesce(OLD.nr_seq_exame,0))) then
    CALL fleury_limpa_validacao_item(NEW.nr_prescricao, NEW.nr_sequencia);
  end if;

  if (coalesce(OLD.nr_seq_status_pato,0) <> coalesce(NEW.nr_seq_status_pato,0)) and (obter_se_exame_anatomo_patol(NEW.nr_seq_exame) = 'S') then
    insert into prescr_proc_status(nr_prescricao, nr_seq_prescr, ie_status_exec,nr_seq_funcao,
                  dt_atualizacao, nm_usuario, nr_sequencia, nm_usuario_nrec, dt_atualizacao_nrec)
      values (NEW.nr_prescricao, NEW.nr_sequencia, coalesce(NEW.nr_seq_status_pato,0), obter_funcao_ativa,
                LOCALTIMESTAMP,NEW.nm_usuario,nextval('prescr_proc_status_seq'),NEW.nm_usuario,LOCALTIMESTAMP);
  end if;

  BEGIN
    select 	CASE WHEN e.ie_retrogrado IS NULL THEN  'N'  ELSE e.ie_retrogrado END ,
            is_special_order_rule('PA','A',wheb_usuario_pck.get_cd_estabelecimento)
    into STRICT 	ie_retrogrado_w,
          ie_transmit_special_order 
    from	cpoe_anatomia_patologica e
    where e.nr_sequencia = NEW.nr_seq_proc_cpoe;
    exception
        when others then
            ie_retrogrado_w := 'N';
            ie_transmit_special_order := 'N';
  end;
  if (OLD.dt_integracao is null ) then
  if (coalesce(OLD.nr_seq_status_pato,0) <> coalesce(NEW.nr_seq_status_pato,0) and (ie_retrogrado_w = 'N' or (ie_retrogrado_w = 'S' and ie_transmit_special_order = 'S'))) then 	
      ds_param_integration_w := '{"recordId" : "' || NEW.nr_seq_interno || '"' || '}';
      CALL execute_bifrost_integration(269, ds_param_integration_w);
  end if;
  end if;	
  /*if  (:new.ie_status_atend = 20) and (nvl(:old.ie_status_atend,0) <> 20) and (wheb_usuario_pck.is_evento_ativo(252) = 'S') then
    if  (nvl(cd_estabelecimento_w,0) = 0) then
      cd_estabelecimento_w  := cd_estab_prescr_w;
    end if;

    select  decode(count(*), 0, 'N', 'S')
    into  ie_integra_matrixws_w
    from  lab_exame_equip a,
        equipamento_lab b
    where a.cd_equipamento = b.cd_equipamento
    AND   b.ds_sigla = 'MATRIX'
    and   a.nr_seq_exame  = :new.nr_seq_exame;

    if  (ie_integra_matrixws_w = 'S') then
      integrar_matrix_ws(252, :new.nr_prescricao, :new.nr_sequencia, :new.nr_seq_exame, :new.nm_usuario);
    end if;
  end if;*/


  if (wheb_usuario_pck.is_evento_ativo(249) = 'S') or (wheb_usuario_pck.is_evento_ativo(252) = 'S') or (obter_se_integracao_ativa(885,53) = 'S') then

    if (coalesce(cd_estabelecimento_w,0) = 0) then
      cd_estabelecimento_w  := cd_estab_prescr_w;
    end if;

    select  max(a.IE_MATRIX_STATUS_ENVIO_INTEG)
    into STRICT  ie_matrix_status_envio_integ_w
    from  lab_parametro a
    where a.cd_estabelecimento = cd_estabelecimento_w;

    if   (((wheb_usuario_pck.is_evento_ativo(249) = 'S') or (obter_se_integracao_ativa(885,53) = 'S'))
    and (ie_matrix_status_envio_integ_w is not null)
    and (NEW.ie_status_atend >= ie_matrix_status_envio_integ_w)
    and (NEW.ie_status_atend > OLD.ie_status_atend)) then
      if (ie_matrix_status_envio_integ_w is null) and (wheb_usuario_pck.is_evento_ativo(249) = 'S') then
        CALL integrar_matrix_ws(249, NEW.nr_prescricao, null, null, NEW.nm_usuario, 'S');
      end if;

      if (obter_se_integracao_ativa(885,53) = 'S')
      and (NEW.ie_status_atend >= ie_matrix_status_envio_integ_w)
      and (OLD.ie_status_atend < ie_matrix_status_envio_integ_w) then
          CALL integrar_matrix_ws_v7(885,
                                NEW.nr_prescricao,
                                NEW.nr_sequencia,
                                nr_atendimento_p => nr_atendimento_w,
                                nr_seq_exame_p => NEW.nr_seq_exame,
                                cd_material_exame_p => NEW.cd_material_exame);
      end if;
    end if;

    if (NEW.ie_status_atend = 20) and (coalesce(OLD.ie_status_atend,0) <> 20) and (wheb_usuario_pck.is_evento_ativo(252) = 'S') then
      select  CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
      into STRICT  ie_integra_matrixws_w
      from  lab_exame_equip a,
          equipamento_lab b
      where a.cd_equipamento = b.cd_equipamento
      AND   b.ds_sigla = 'MATRIX'
      and   a.nr_seq_exame  = NEW.nr_seq_exame;

      if (ie_integra_matrixws_w = 'S') then
        CALL integrar_matrix_ws(252, NEW.nr_prescricao, NEW.nr_sequencia, NEW.nr_seq_exame, NEW.nm_usuario);
      end if;
    end if;
  end if;

  ie_remove_lote_ext_w := obter_param_usuario(722, 312, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_remove_lote_ext_w);
  if (coalesce(ie_remove_lote_ext_w,'N') = 'S') then

    ie_status_recoleta_w := obter_param_usuario(722, 12, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_status_recoleta_w);

    if (NEW.ie_status_atend = ie_status_recoleta_w) and (OLD.ie_status_atend > ie_status_recoleta_w) then
      NEW.nr_seq_lote_externo := null;
    end if;
  end if;
elsif (NEW.cd_procedimento <> OLD.cd_procedimento) or (NEW.cd_setor_atendimento <> OLD.cd_setor_atendimento) then

  NEW.dt_resultado := obter_entrega_laudo(NEW.nr_prescricao, NEW.dt_prev_execucao, NEW.nr_seq_proc_interno, NEW.cd_procedimento, NEW.ie_origem_proced, NEW.cd_setor_atendimento, NEW.nm_usuario, NEW.dt_resultado);
end if;
if (NEW.nr_seq_exame is not null) then
    if (NEW.ie_suspenso is null) then
        NEW.ie_suspenso := 'N';
        CALL gravar_log_lab_pragma(300, 'Prescr_procedimento_upd - ' || substr(dbms_utility.format_call_stack,1,4000), NEW.nm_usuario, NEW.nr_prescricao);
    end if;
end if;

if (coalesce(cd_estabelecimento_w,0) = 0) then
  cd_estabelecimento_w := coalesce(wheb_usuario_pck.get_cd_estabelecimento,0);
end if;

if (cd_estabelecimento_w = 0) then
  select  max(ie_conta_lab_ext)
  into STRICT  ie_conta_lab_ext_w
  from  lab_parametro;
else
  select  max(ie_conta_lab_ext)
  into STRICT  ie_conta_lab_ext_w
  from  lab_parametro
  where   cd_estabelecimento = cd_estabelecimento_w;
end if;

if (cd_estabelecimento_w = 0) then
  select  max(ie_conta_lab_ext)
  into STRICT  ie_conta_lab_ext_w
  from  lab_parametro a
  where   a.cd_estabelecimento =  cd_estab_prescr_w;
end if;

select  coalesce(max(a.ie_worklist_carestream),'N')
into STRICT  ie_worklist_carestream_w
from  parametro_pacs_mmed a
where cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

if (NEW.ie_status_execucao = '20') and (coalesce(OLD.ie_status_execucao,0) <> '20') and (coalesce(ie_worklist_carestream_w,'N') = 'S') then
  BEGIN
  CALL gerar_xml_worklist_carestream(NEW.nr_prescricao,NEW.nr_sequencia,NEW.nr_acesso_dicom,NEW.nm_usuario);
  end;
end if;

if (OLD.dt_baixa is null) and   /* Bruna, integrac?o Santa Paula */

  (NEW.dt_baixa is not null) and
  ((NEW.nr_seq_exame is not null) or (ie_conta_lab_ext_w = 'L'))and (NEW.dt_integracao is not null) and (NEW.dt_suspensao is null) then
  ie_conta_ww :=  obter_se_exame_conta(NEW.nr_prescricao,NEW.nr_sequencia);

  if (ie_conta_ww = 0) and
     ((NEW.nr_seq_exame is not null) or (ie_status_exec_old_w  < '20')) then
    select  coalesce(max(ie_conta_lab_ext),'N'),
      coalesce(max(c.cd_estabelecimento),1),
      coalesce(max(c.ie_data_conta),0),
      coalesce(MAX(c.ie_consid_lab_conta_ext),'N'),
      coalesce(max(c.ie_prior_alta_dtconta),'N'),
      max(b.dt_alta)
    into STRICT  ie_conta_lab_ext_w,
      cd_estabelecimento_w,
      ie_data_conta_w,
      ie_consid_lab_conta_ext_w,
      ie_prior_alta_dtconta_w,
      dt_alta_w
    from  lab_parametro c,
      atendimento_paciente b
    where b.nr_atendimento = nr_atendimento_w
      and b.cd_estabelecimento  = c.cd_estabelecimento;

    dt_auxiliar_w := dt_prescricao_w;

    if (ie_data_conta_w = 1) then
      if (ie_prior_alta_dtconta_w = 'S') then
        if  (dt_alta_w is not null AND dt_alta_w < NEW.dt_prev_execucao) then
          dt_auxiliar_w := dt_alta_w;
        else
          dt_auxiliar_w := NEW.dt_prev_execucao;
        end if;
      else
        dt_auxiliar_w := NEW.dt_prev_execucao;
      end if;
    elsif (ie_data_conta_w = 2) then
      if (ie_prior_alta_dtconta_w = 'S') then
        if  (dt_alta_w is not null AND dt_alta_w < NEW.dt_baixa) then
          dt_auxiliar_w := dt_alta_w;
        else
          dt_auxiliar_w := NEW.dt_baixa;
        end if;
      else
        dt_auxiliar_w := NEW.dt_baixa;
      end if;
    elsif (ie_data_conta_w = 4) then
      if (ie_prior_alta_dtconta_w = 'S') then
        if  (dt_alta_w is not null AND dt_alta_w < NEW.dt_coleta) then
          dt_auxiliar_w := dt_alta_w;
        else
          dt_auxiliar_w := NEW.dt_coleta;
        end if;
      else
        dt_auxiliar_w := NEW.dt_coleta;
      end if;
    elsif (ie_data_conta_w = 5) then
      if (ie_prior_alta_dtconta_w = 'S') then
        if  (dt_alta_w is not null AND dt_alta_w < dt_inicio_prescr_w) then
          dt_auxiliar_w := dt_alta_w;
        else
          dt_auxiliar_w := dt_inicio_prescr_w;
        end if;
      else
        dt_auxiliar_w := dt_inicio_prescr_w;
      end if;
    end if;

    if  ((ie_conta_lab_ext_w = 'B') or
      (ie_conta_lab_ext_w = 'L' AND ie_consid_lab_conta_ext_w = 'N') or
      ((ie_conta_lab_ext_w = 'L') and (ie_consid_lab_conta_ext_w = 'S') and (NEW.nr_seq_exame is not null)))then    /* Bruna */

      BEGIN
                NEW.cd_motivo_baixa  := 1;
                NEW.dt_atualizacao := LOCALTIMESTAMP;

                if (NEW.nr_seq_exame is null) then
                    CALL gravar_log_integracao_laudo(NEW.nr_acesso_dicom,
                        wheb_mensagem_pck.get_texto(309609), -- Execuc?o pela data de baixa
                        NEW.nm_usuario);
                end if;

                if((ie_tem_conta_paciente IS NULL) or (ie_tem_conta_paciente = 'N')) then
                    CALL gerar_proc_pac_item_prescr_up(
                        NEW.nr_prescricao, NEW.nr_sequencia, null,null,
                        NEW.nr_seq_proc_interno,
                        NEW.cd_procedimento, NEW.ie_origem_proced,
                        NEW.qt_procedimento, NEW.cd_setor_atendimento,
                        9, coalesce(dt_auxiliar_w,LOCALTIMESTAMP),
                        NEW.nm_usuario, NEW.cd_medico_exec, NEW.nr_seq_exame, coalesce(NEW.ie_lado,'A'), null, null, null, null, null, null, NEW.nr_doc_convenio, NEW.cd_senha);
                end if;
      end;
    end if;
  end if;
end if;

/* Gerar a conta do paciente no momento da integrac?o com o laboratorio */


/* Marcus em 23/04/2002 - Integrac?o LifeCenter com Pardini */


if (OLD.dt_integracao is null) and (NEW.dt_integracao is not null) and (NEW.nr_seq_exame is not null) and (NEW.cd_motivo_baixa_exame is not null) and (ie_baixar_integr_depend_w = 'S') then
  NEW.cd_motivo_baixa  := NEW.cd_motivo_baixa_exame;
  NEW.dt_baixa   := LOCALTIMESTAMP;
end if;

if (OLD.dt_integracao is null) and (NEW.dt_integracao is not null) and (NEW.ds_integracao is null) then
  select  coalesce(max(ie_conta_lab_ext),'N'),
    coalesce(max(c.cd_estabelecimento),1),
    coalesce(max(c.ie_data_conta),0),
    coalesce(MAX(c.ie_consid_lab_conta_ext),'N'),
    coalesce(max(c.ie_prior_alta_dtconta),'N'),
    max(b.dt_alta)
  into STRICT  ie_conta_lab_ext_w,
    cd_estabelecimento_w,
    ie_data_conta_w,
    ie_consid_lab_conta_ext_w,
    ie_prior_alta_dtconta_w,
    dt_alta_w
  from  lab_parametro c,
    atendimento_paciente b
  where b.nr_atendimento    = nr_atendimento_w
    and b.cd_estabelecimento  = c.cd_estabelecimento;

  dt_auxiliar_w := dt_prescricao_w;
  if (ie_data_conta_w = 1) then
    if (ie_prior_alta_dtconta_w = 'S') then
      if  (dt_alta_w is not null AND dt_alta_w < NEW.dt_prev_execucao) then
        dt_auxiliar_w := dt_alta_w;
      else
        dt_auxiliar_w := NEW.dt_prev_execucao;
      end if;
    else
      dt_auxiliar_w := NEW.dt_prev_execucao;
    end if;
  elsif (ie_data_conta_w = 2) then
    if (ie_prior_alta_dtconta_w = 'S') then
      if  (dt_alta_w is not null AND dt_alta_w < NEW.dt_integracao) then
        dt_auxiliar_w := dt_alta_w;
      else
        dt_auxiliar_w := NEW.dt_integracao;
      end if;
    else
      dt_auxiliar_w := NEW.dt_integracao;
    end if;
  elsif (ie_data_conta_w = 4) then
    if (ie_prior_alta_dtconta_w = 'S') then
      if  (dt_alta_w is not null AND dt_alta_w < NEW.dt_coleta) then
        dt_auxiliar_w := dt_alta_w;
      else
        dt_auxiliar_w := NEW.dt_coleta;
      end if;
    else
      dt_auxiliar_w := NEW.dt_coleta;
    end if;
  elsif (ie_data_conta_w = 5) then
    if (ie_prior_alta_dtconta_w = 'S') then
      if  (dt_alta_w is not null AND dt_alta_w < dt_inicio_prescr_w) then
        dt_auxiliar_w := dt_alta_w;
      else
        dt_auxiliar_w := dt_inicio_prescr_w;
      end if;
    else
      dt_auxiliar_w := dt_inicio_prescr_w;
    end if;
  end if;

  select  coalesce(max('S'),'N')
  into STRICT  ie_retorno_w
  from  procedimento_paciente where   nr_prescricao     = NEW.nr_prescricao
  and   nr_sequencia_prescricao = NEW.nr_sequencia LIMIT 1;

  if (ie_retorno_w = 'N') and
    (((ie_conta_lab_ext_w = 'I' AND ie_consid_lab_conta_ext_w = 'N') or
    ((ie_conta_lab_ext_w = 'I') and (ie_consid_lab_conta_ext_w = 'S') and (NEW.nr_seq_exame is not null))) or
    ((ie_conta_lab_ext_w = 'E') and (lab_obter_regra_fatur(cd_estabelecimento_w, NEW.nr_seq_exame) = 'I') and (NEW.nr_seq_exame is not null))) then    /* Bruna, Edilson OS 50812 e 51747 05/03/2007 */

    BEGIN
    NEW.dt_baixa   := LOCALTIMESTAMP;
    NEW.cd_motivo_baixa  := 1;
    NEW.dt_atualizacao := LOCALTIMESTAMP;

    CALL gerar_proc_pac_item_prescr_up(
      NEW.nr_prescricao, NEW.nr_sequencia, null,null,
      NEW.nr_seq_proc_interno,
      NEW.cd_procedimento, NEW.ie_origem_proced,
      NEW.qt_procedimento, NEW.cd_setor_atendimento,
      9, coalesce(dt_auxiliar_w,LOCALTIMESTAMP),
      NEW.nm_usuario, NEW.cd_medico_exec, NEW.nr_seq_exame, coalesce(NEW.ie_lado,'A'), null, null, null, null, null, null, NEW.nr_doc_convenio, NEW.cd_senha);
    end;
  end if;
end if;

/* Elemar - 01/07/2006 - OS35683 */


if (OLD.dt_result_integracao is null) and (NEW.dt_result_integracao is not null) and (NEW.dt_integracao is not null) and (NEW.ds_integracao is null) then
  ie_conta_ww :=  obter_se_exame_conta(NEW.nr_prescricao,NEW.nr_sequencia);

  if (ie_conta_ww = 0) then
    select  coalesce(max(ie_conta_lab_ext),'N'),
      coalesce(max(c.cd_estabelecimento),1),
      coalesce(MAX(c.ie_consid_lab_conta_ext),'N')
    into STRICT  ie_conta_lab_ext_w,
      cd_estabelecimento_w,
      ie_consid_lab_conta_ext_w
    from  lab_parametro c,
      atendimento_paciente b
    where b.nr_atendimento    = nr_atendimento_w
      and b.cd_estabelecimento  = c.cd_estabelecimento;

    if  ((ie_conta_lab_ext_w = 'R' AND ie_consid_lab_conta_ext_w = 'N') or ((ie_conta_lab_ext_w = 'R') and (ie_consid_lab_conta_ext_w = 'S') and (NEW.nr_seq_exame is not null))) or
      ((ie_conta_lab_ext_w = 'E') and (lab_obter_regra_fatur(cd_estabelecimento_w, NEW.nr_seq_exame) = 'R') and (NEW.nr_seq_exame is not null)) then   /* Bruna, Edilson OS 50812 e 51747 05/03/2007 */


    dt_auxiliar_w := dt_prescricao_w;
      NEW.dt_baixa   := LOCALTIMESTAMP;
      NEW.cd_motivo_baixa  := 1;
      NEW.dt_atualizacao := LOCALTIMESTAMP;

      CALL gerar_proc_pac_item_prescr_up(
        NEW.nr_prescricao, NEW.nr_sequencia, null,null,
        NEW.nr_seq_proc_interno,
        NEW.cd_procedimento, NEW.ie_origem_proced,
        NEW.qt_procedimento, NEW.cd_setor_atendimento,
        9, NEW.dt_atualizacao,
        NEW.nm_usuario, NEW.cd_medico_exec, NEW.nr_seq_exame, coalesce(NEW.ie_lado,'A'), null, null, null, null, null, null, NEW.nr_doc_convenio, NEW.cd_senha);
    end if;
  end if;
end if;

/*Edilson em 06/09/2005 OS 22938  / Rafael 19/07/2006 OS33749 inseri o or = '15'*/


if (NEW.dt_integracao is not null) and (NEW.cd_motivo_baixa <> 0) and
  ((NEW.ie_status_execucao = '10') or (NEW.ie_status_execucao = '15')) then
  NEW.ie_status_execucao := '20';
end if;

/* Elemar em 13/02/04 - Cancelamento de exames */


if (OLD.dt_integracao is not null) and
  ((OLD.ie_suspenso = 'N' AND NEW.ie_suspenso = 'S') or (NEW.cd_motivo_baixa <> OLD.cd_motivo_baixa)) then
  if (NEW.dt_baixa is null) and (NEW.cd_motivo_baixa <> OLD.cd_motivo_baixa) and (NEW.cd_motivo_baixa <> 0) then
    NEW.dt_baixa := LOCALTIMESTAMP;
  end if;

  ie_retorno_w := 'N';
  if (NEW.cd_motivo_baixa <> OLD.cd_motivo_baixa) then
    select  coalesce(max('S'),'N')
    into STRICT  ie_retorno_w
    from  tipo_baixa_prescricao where   coalesce(cd_tipo_baixa,0) <> 0
    and   ie_prescricao_devolucao = 'P'
    and   ie_conta_paciente   = 'N'
    and   cd_tipo_baixa   = NEW.cd_motivo_baixa LIMIT 1;
  end if;

  if (ie_retorno_w = 'S') or (NEW.cd_motivo_baixa = OLD.cd_motivo_baixa) then
    insert into prescr_proc_cancel(nr_sequencia,
            nr_prescricao,
            nr_seq_prescr,
            nm_usuario_cancel,
            dt_cancelamento,
            ie_status,
            dt_atualizacao,
            nm_usuario,
            nm_usuario_confirm,
            dt_confirmacao)
    values (nextval('prescr_proc_cancel_seq'),
      NEW.nr_prescricao,
      NEW.nr_sequencia,
      NEW.nm_usuario,
      LOCALTIMESTAMP,
      'S',
      LOCALTIMESTAMP,
      NEW.nm_usuario,
      null,
      null);
  end if;
end if;

if (OLD.ie_suspenso = 'N') and (NEW.ie_suspenso = 'S') and (NEW.dt_suspensao is not null) and (NEW.nr_seq_exame is null) and (NEW.nr_seq_agenda is not null) then
  BEGIN
  select  count(b.nr_sequencia)
  into STRICT  count_w
  from  intpd_eventos a,
      intpd_eventos_sistema b
  where a.nr_sequencia = b.nr_seq_evento
  and   a.ie_evento = 149
  and   a.ie_situacao = 'A'
  and   b.ie_situacao = 'A'  LIMIT 1;

  if (coalesce(count_w,0) > 0) then
    BEGIN
    select  max(ie_tipo_atendimento)
    into STRICT  reg_integracao_w.ie_tipo_atendimento
    from  atendimento_paciente
    where nr_atendimento = nr_atendimento_w;

    select  max(a.cd_estabelecimento),
        max(a.cd_agenda_externa)
    into STRICT  reg_integracao_w.cd_estab_documento,
        reg_integracao_w.cd_agenda_externa
    from  agenda a,
        agenda_paciente b
    where a.cd_agenda = b.cd_agenda
    and   b.nr_sequencia = NEW.nr_seq_agenda;

    reg_integracao_w.ie_operacao := 'A';
    reg_integracao_w := gerar_int_padrao.gravar_integracao('149', NEW.nr_seq_agenda, NEW.nm_usuario, reg_integracao_w);
    end;
  end if;
  end;
end if;

if (NEW.dt_integracao is null) and (OLD.dt_integracao is not null) and (NEW.nr_seq_exame is not null) then
  BEGIN

  update  prescr_proc_mat_item
  set dt_integracao  = NULL
  where nr_prescricao = NEW.nr_prescricao
  and nr_seq_prescr = NEW.nr_sequencia;

  end;
end if;

/*Edilson em 10/01/07 OS 48075*/


if (coalesce(NEW.ie_suspenso,'N') = 'S') and (coalesce(OLD.ie_suspenso,'N') = 'N') then
  BEGIN
  if (wheb_usuario_pck.is_evento_ativo(448) = 'S') then
   CALL eclipse_enviar_prescr_oml_o21(NEW.nr_prescricao, nr_atendimento_w, 'CA', NEW.nr_sequencia);
  end if;

  if (wheb_usuario_pck.is_evento_ativo(629) = 'S') then
   CALL ece_enviar_prescr_oml_o21(NEW.nr_prescricao, nr_atendimento_w, 'CA', NEW.nr_sequencia);
  end if;

  update  prescr_proc_mat_item
  set ie_suspenso = 'S'
  where nr_prescricao = NEW.nr_prescricao
  and nr_seq_prescr = NEW.nr_sequencia;

  select  count(b.nr_sequencia)
  into STRICT  count_w
  from  intpd_eventos a,
      intpd_eventos_sistema b
  where a.nr_sequencia = b.nr_seq_evento
  and   a.ie_evento = 146
  and   a.ie_situacao = 'A'
  and   b.ie_situacao = 'A'  LIMIT 1;

  if (coalesce(count_w,0) > 0) and (NEW.dt_suspensao is not null) and (NEW.nr_seq_exame is not null) then
    BEGIN
    select ie_anatomia_patologica
    into STRICT ie_anatomia_patologica_w
    from exame_laboratorio
    where nr_seq_exame = NEW.nr_seq_exame;

    if (ie_anatomia_patologica_w = 'N') then
      BEGIN
      select  max(ie_tipo_atendimento),
        max(obter_convenio_atendimento(nr_atendimento)),
        max(obter_categoria_atendimento(nr_atendimento))
      into STRICT  ie_tipo_atendimento_w,
        cd_convenio_w,
        cd_categoria_w
      from  atendimento_paciente
      where nr_atendimento = nr_atendimento_w;

      reg_integracao_w.cd_estab_documento := cd_estabelecimento_w;
      reg_integracao_w.cd_convenio := cd_convenio_w;
      reg_integracao_w.cd_categoria := cd_categoria_w;
      reg_integracao_w.cd_procedimento := NEW.cd_procedimento;
      reg_integracao_w.nr_seq_exame := NEW.nr_seq_exame;
      reg_integracao_w.ie_tipo_atendimento := ie_tipo_atendimento_w;
      reg_integracao_w := gerar_int_padrao.gravar_integracao('146', NEW.nr_seq_interno, NEW.nm_usuario, reg_integracao_w);
      end;
    end if;
    end;
  end if;

  select  count(b.nr_sequencia)
  into STRICT  count_w
  from  intpd_eventos a,
      intpd_eventos_sistema b
  where a.nr_sequencia = b.nr_seq_evento
  and   a.ie_evento = 175
  and   a.ie_situacao = 'A'
  and   b.ie_situacao = 'A'  LIMIT 1;

  if (coalesce(count_w,0) > 0) and (NEW.dt_suspensao is not null) and (NEW.nr_seq_exame is not null) then
    select ie_anatomia_patologica
    into STRICT ie_anatomia_patologica_w
    from exame_laboratorio
    where nr_seq_exame = NEW.nr_seq_exame;

    if (ie_anatomia_patologica_w = 'S') then
      select  max(ie_tipo_atendimento),
        max(obter_convenio_atendimento(nr_atendimento)),
        max(obter_categoria_atendimento(nr_atendimento))
      into STRICT  ie_tipo_atendimento_w,
        cd_convenio_w,
        cd_categoria_w
      from  atendimento_paciente
      where nr_atendimento = nr_atendimento_w;

      reg_integracao_w.cd_estab_documento := cd_estabelecimento_w;
      reg_integracao_w.cd_convenio := cd_convenio_w;
      reg_integracao_w.cd_categoria := cd_categoria_w;
      reg_integracao_w.cd_procedimento := NEW.cd_procedimento;
      reg_integracao_w.nr_seq_exame := NEW.nr_seq_exame;
      reg_integracao_w.ie_tipo_atendimento := ie_tipo_atendimento_w;

      reg_integracao_w := gerar_int_padrao.gravar_integracao('175', NEW.nr_seq_interno, NEW.nm_usuario, reg_integracao_w);
    end if;
  end if;

  cd_motivo_exclusao_w := wheb_assist_pck.obterValorParametroREP(130, cd_motivo_exclusao_w);

  if (cd_motivo_exclusao_w is not null) and ((cd_motivo_exclusao_w)::numeric  > 0) then

    /* Felipe 05/03/2007 - OS 51823 */


    select  coalesce(max(a.nr_sequencia),0)
    into STRICT  nr_seq_proc_w
    from  procedimento_paciente a
    where a.nr_prescricao     = NEW.nr_prescricao
    and a.nr_sequencia_prescricao = NEW.nr_sequencia
    and exists (  SELECT  1
          from  conta_paciente b
          where a.nr_interno_conta  = b.nr_interno_conta
          and b.ie_status_acerto  = 1);


        if (nr_seq_proc_w > 0) then
      select  max(nr_seq_procedimento)
      into STRICT  nr_seq_proc_pacote_w
      from  atendimento_pacote
      where   nr_seq_proc_origem = nr_seq_proc_w;

      if (coalesce(nr_seq_proc_pacote_w,0) > 0) then
        CALL desfazer_pacote(nr_seq_proc_pacote_w, 'N', NEW.nm_usuario, 'N');
      end if;
    end if;

    update  procedimento_paciente a
    set a.cd_motivo_exc_conta   = (cd_motivo_exclusao_w)::numeric ,
      a.nr_interno_conta     = NULL
    where a.nr_prescricao     = NEW.nr_prescricao
    and a.nr_sequencia_prescricao = NEW.nr_sequencia
    and exists (  SELECT  1
          from  conta_paciente b
          where a.nr_interno_conta  = b.nr_interno_conta
          and b.ie_status_acerto  = 1);

    /* Felipe 05/03/2007 - OS 51823 */


    ie_excluir_vinculados_w := wheb_assist_pck.obterValorParametroREP(137, ie_excluir_vinculados_w);

    if (ie_excluir_vinculados_w  = 'S') and (nr_seq_proc_w  > 0) then
      update  procedimento_paciente a
      set a.cd_motivo_exc_conta = (cd_motivo_exclusao_w)::numeric ,
        a.nr_interno_conta   = NULL
      where a.nr_seq_proc_princ = nr_seq_proc_w
      and exists (  SELECT  1
            from  conta_paciente b
            where a.nr_interno_conta  = b.nr_interno_conta
            and b.ie_status_acerto  = 1);

      update  material_atend_paciente a
      set a.cd_motivo_exc_conta = (cd_motivo_exclusao_w)::numeric ,
        a.nr_interno_conta   = NULL
      where a.nr_seq_proc_princ = nr_seq_proc_w
      and exists (  SELECT  1
              from  conta_paciente b
              where a.nr_interno_conta  = b.nr_interno_conta
              and b.ie_status_acerto  = 1);

      open C09;
      loop
      fetch C09 into
        nr_atendimento_ww,
        dt_entrada_unidade_w,
        cd_Material_exec_w,
        dt_atendimento_w,
        cd_acao_w,
        cd_local_estoque_w,
        qt_estoque_w,
        cd_setor_atendimento_w,
        cd_unidade_medida_w,
        nr_prescricao_w,
        nr_sequencia_prescricao_w,
        nr_sequencia_w,
        cd_cgc_fornecedor_w,
        ds_observacao_w,
        nr_seq_lote_fornec_w,
        nr_receita_w,
        nr_serie_material_w;
      EXIT WHEN NOT FOUND; /* apply on C09 */
        BEGIN
        CALL gerar_prescricao_estoque(
                null,
                nr_atendimento_ww,
                dt_entrada_unidade_w,
                cd_Material_exec_w,
                dt_atendimento_w,
                cd_acao_w,
                cd_local_estoque_w,
                qt_estoque_w,
                cd_setor_atendimento_w,
                cd_unidade_medida_w,
                NEW.nm_usuario,
                'E',
                nr_prescricao_w,
                nr_sequencia_prescricao_w,
                nr_seq_proc_w,
                nr_sequencia_w,
                cd_cgc_fornecedor_w,
                ds_observacao_w,
                nr_seq_lote_fornec_w,
                nr_receita_w,
                nr_serie_material_w,
                null, '','','');
        end;
      end loop;
      close C09;
    end if;
  end if;

  update  frasco_pato_loc
  set nr_prescr_vinc_patol  = NULL,
    nr_seq_prescr_vinc  = NULL
  where nr_prescr_vinc_patol = NEW.nr_prescricao
  and nr_seq_prescr_vinc = NEW.nr_sequencia;

  if (ie_retirar_lote_susp_w = 'S') then
    NEW.nr_seq_lote_externo  := null;
  end if;
  end;
end if;

/* --> Rafael em 03/09/2007 x ADEP x cfe definido com Marcus <-- */


if (coalesce(OLD.ie_suspenso,'N') = 'N') and (NEW.ie_suspenso = 'S') then
  select  coalesce(max(nr_seq_reserva),0)
  into STRICT  nr_seq_reserva_w
  from  san_reserva_item
  where nr_prescricao = NEW.nr_prescricao
  and nr_seq_prescr = NEW.nr_sequencia;

  varie_cancela_reserva_w := wheb_assist_pck.obterValorParametroREP(313, varie_cancela_reserva_w);

  if (nr_seq_reserva_w > 0) and (varie_cancela_reserva_w = 'S') then
    update  san_reserva_item
    set ie_suspenso = 'S'
    where nr_prescricao = NEW.nr_prescricao;

    select  coalesce(max('S'),'N')
    into STRICT  ie_retorno_w
    from  san_reserva_item where   nr_prescricao = NEW.nr_prescricao
    and   coalesce(ie_suspenso,'N') = 'N' LIMIT 1;

    if (ie_retorno_w = 'N') then
      CALL san_cancela_reserva(nr_seq_reserva_w,NEW.nm_usuario);
    end if;
  end if;

  update  prescr_proc_hor
  set dt_suspensao = LOCALTIMESTAMP,
    nm_usuario_susp = NEW.nm_usuario_susp
  where nr_prescricao = NEW.nr_prescricao
  and nr_seq_procedimento = NEW.nr_sequencia
  and dt_fim_horario is null
  and dt_suspensao is null;

  ie_susp_glicemia_w := wheb_assist_pck.obterValorParametroREP(407, ie_susp_glicemia_w);

  if (ie_susp_glicemia_w = 'N') then --OS166471
    CALL consistir_suspender_proc_glic(NEW.nr_prescricao, NEW.nr_sequencia); /* Rafael em 24/1/8 OS80581 */

  end if;
end if;

if (NEW.nr_seq_exame is null) then
  if (NEW.ie_status_execucao = '20') and (OLD.ie_status_execucao <> '25') then
    select  coalesce(max('S'),'N')
    into STRICT  ie_retorno_w
    from  prescr_proc_ditado where   nr_seq_prescr_proc = NEW.nr_seq_interno LIMIT 1;

    if (ie_retorno_w = 'S') then
      NEW.ie_status_execucao := '25';
    end if;
  end if;

  select count(*)
  into STRICT qtd_prescrito_status_w
  from  prescr_proc_status
  where nr_prescricao = NEW.nr_prescricao
  and   nr_seq_prescr = NEW.nr_sequencia;

  if  ((NEW.ie_status_execucao = '10') and qtd_prescrito_status_w = 0)then
  insert into prescr_proc_status(nr_prescricao, nr_seq_prescr, ie_status_exec,nr_seq_funcao,
                  dt_atualizacao, nm_usuario, nr_sequencia, nm_usuario_nrec, dt_atualizacao_nrec, ds_call_stack)
      values (NEW.nr_prescricao, NEW.nr_sequencia, NEW.ie_status_execucao, obter_funcao_ativa,
                LOCALTIMESTAMP,NEW.nm_usuario,nextval('prescr_proc_status_seq'),NEW.nm_usuario,LOCALTIMESTAMP,
                substr(dbms_utility.format_call_stack,1,4000));
  end if;

  if (NEW.ie_status_execucao <> coalesce(OLD.ie_status_execucao,0)) then
    insert into prescr_proc_status(nr_prescricao, nr_seq_prescr, ie_status_exec,nr_seq_funcao,
                  dt_atualizacao, nm_usuario, nr_sequencia, nm_usuario_nrec, dt_atualizacao_nrec, ds_call_stack)
      values (NEW.nr_prescricao, NEW.nr_sequencia, NEW.ie_status_execucao, obter_funcao_ativa,
                LOCALTIMESTAMP,NEW.nm_usuario,nextval('prescr_proc_status_seq'),NEW.nm_usuario,LOCALTIMESTAMP,
                substr(dbms_utility.format_call_stack,1,4000));
  end if;
end if;

--Bruno em 05/05/2010 Os 206526

if (NEW.ie_status_atend <> OLD.ie_status_atend) and (NEW.ie_status_atend = 10) then
  select  max(nr_sequencia)
  into STRICT  nr_seq_status_pato_w
  from  proced_patologia_status
  where ie_status_patologia = 'PL';

  if (nr_seq_status_pato_w is not null) then
    NEW.nr_seq_status_pato := nr_seq_status_pato_w;
  end if;
end if;

select  coalesce(max(nr_cirurgia),0),
    max(nr_atendimento)
into STRICT  nr_cirurgia_w,
    nr_atend_cir_w
from  cirurgia
where nr_prescricao = NEW.nr_prescricao;

if (nr_cirurgia_w > 0) and
  ((OLD.cd_procedimento <> NEW.cd_procedimento) or (OLD.nr_seq_proc_interno <> NEW.nr_seq_proc_interno) or (OLD.ie_origem_proced <> NEW.ie_origem_proced)) then

  insert into log_alter_proc_cirurgia(
    nr_sequencia,
    dt_atualizacao,
    nm_usuario,
    dt_atualizacao_nrec,
    nm_usuario_nrec,
    nr_atendimento,
    nr_cirurgia,
    nr_prescricao,
    nr_seq_proc,
    nr_seq_proc_interno,
    cd_procedimento,
    ie_origem_proced)
  values (
    nextval('log_alter_proc_cirurgia_seq'),
    LOCALTIMESTAMP,
    NEW.nm_usuario,
    LOCALTIMESTAMP,
    NEW.nm_usuario,
    nr_atend_cir_w,
    nr_cirurgia_w,
    NEW.nr_prescricao,
    OLD.nr_sequencia,
    OLD.nr_seq_proc_interno,
    OLD.cd_procedimento,
    OLD.ie_origem_proced);
end if;

BEGIN
select  coalesce(max(ie_consiste_fpo_prescr),'N'),
  coalesce(max(ie_converte_proc_conv),'N'),
  coalesce(max(ie_ordem_converte_proc),'EP')
into STRICT  ie_consiste_fpo_prescr_w,
  ie_converte_proc_conv_w,
  ie_ordem_converte_proc_w
from  parametro_faturamento
where cd_estabelecimento  = wheb_usuario_pck.get_cd_estabelecimento;

exception
when others then
  ie_consiste_fpo_prescr_w  := 'N';
  ie_converte_proc_conv_w   := 'N';
  ie_ordem_converte_proc_w  := 'EP';
end;

if (ie_consiste_fpo_prescr_w <> 'N') and (NEW.ie_origem_proced  = 7) then
  BEGIN
  BEGIN

  open c03;
  loop
  fetch c03 into
    cd_cbo_w;
  EXIT WHEN NOT FOUND; /* apply on c03 */
  end loop;
  close c03;

  exception
  when others then
    cd_cbo_w := '0';
  end;

  ds_retorno_fpo_w := sus_consiste_fpo_unif(coalesce(dt_prescricao_w,NEW.dt_prev_execucao), NEW.cd_procedimento, NEW.ie_origem_proced, NEW.qt_procedimento, nr_atendimento_w, wheb_usuario_pck.get_cd_estabelecimento, ie_tipo_atendimento_w, coalesce(cd_cbo_w,'0'), ie_consiste_fpo_prescr_w, ds_retorno_fpo_w, NEW.cd_setor_atendimento, cd_procedencia_w, NEW.nm_usuario);

  if (coalesce(ds_retorno_fpo_w,'X') <> 'X') and (coalesce(NEW.cd_funcao_origem,0) <> 2314) then
    CALL wheb_mensagem_pck.exibir_mensagem_abort(183121,'DS_MENSAGEM='||ds_retorno_fpo_w);
  end if;
  end;
end if;

if (coalesce(NEW.cd_convenio,0) <> coalesce(OLD.cd_convenio,0)) and (ie_converte_proc_conv_w = 'S') then

  cd_procedimento_w := 0;

  select  max(ie_tipo_atendimento)
  into STRICT  ie_tipo_atendimento_w
  from  atendimento_paciente
  where nr_atendimento = nr_atendimento_w;

  if (coalesce(cd_estabelecimento_w,0) = 0) then
    cd_estabelecimento_w  := cd_estab_prescr_w;
  end if;

  select  max(ie_tipo_convenio)
  into STRICT  ie_tipo_convenio_w
  from  convenio
  where cd_convenio = NEW.cd_convenio;
  cd_setor_atend_w  := NEW.cd_setor_atendimento;

  if (ie_ordem_converte_proc_w = 'EP') then -- Exame de laboratorio / Proc. Interno
    if (NEW.nr_seq_exame is not null) then
      SELECT * FROM obter_exame_lab_convenio(NEW.nr_seq_exame, NEW.cd_convenio, NEW.cd_categoria, ie_tipo_atendimento_w, cd_estabelecimento_w, ie_tipo_convenio_w, NEW.nr_seq_proc_interno, NEW.cd_material_exame, cd_plano_convenio_w, cd_setor_atend_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w) INTO STRICT cd_setor_atend_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w;
    elsif (NEW.nr_seq_proc_interno is not null) then
      SELECT * FROM obter_proc_tab_interno_conv(NEW.nr_seq_proc_interno, cd_estabelecimento_w, NEW.cd_convenio, NEW.cd_categoria, null, NEW.cd_setor_atendimento, cd_procedimento_w, ie_origem_proced_w, NEW.cd_setor_atendimento, LOCALTIMESTAMP, null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
    end if;
  elsif (ie_ordem_converte_proc_w = 'PE') then --  Proc. Interno / Exame de laboratorio
    if (NEW.nr_seq_proc_interno is not null) then
      SELECT * FROM obter_proc_tab_interno_conv(NEW.nr_seq_proc_interno, cd_estabelecimento_w, NEW.cd_convenio, NEW.cd_categoria, null, NEW.cd_setor_atendimento, cd_procedimento_w, ie_origem_proced_w, NEW.cd_setor_atendimento, LOCALTIMESTAMP, null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
    elsif (NEW.nr_seq_exame is not null) then
      SELECT * FROM obter_exame_lab_convenio(NEW.nr_seq_exame, NEW.cd_convenio, NEW.cd_categoria, ie_tipo_atendimento_w, cd_estabelecimento_w, ie_tipo_convenio_w, NEW.nr_seq_proc_interno, NEW.cd_material_exame, cd_plano_convenio_w, cd_setor_atend_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w) INTO STRICT cd_setor_atend_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w;
    end if;
  end if;

  if (nr_seq_proc_interno_aux_w > 0) then
    NEW.nr_seq_proc_interno := nr_seq_proc_interno_aux_w;
  end if;

  if (coalesce(cd_procedimento_w,0) > 0) then
    NEW.cd_procedimento  := cd_procedimento_w;
    NEW.ie_origem_proced := ie_origem_proced_w;
  end if;
end if;

if (OLD.nr_seq_proc_interno is not null) and (NEW.nr_seq_proc_interno is not null) and (OLD.nr_seq_proc_interno <> NEW.nr_seq_proc_interno) then
  update  prescr_proc_hor
  set nr_seq_proc_interno = NEW.nr_seq_proc_interno
  where nr_prescricao   = NEW.nr_prescricao
  and nr_seq_procedimento = NEW.nr_sequencia;
end if;

if (NEW.cd_intervalo = '#SIP#') then
  NEW.cd_intervalo := null;
end if;

if (NEW.nr_seq_exame is not null) then
  ie_status_pendente_adep_w := obter_param_usuario(722, 248, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_status_pendente_adep_w);
  ie_checa_adep_palm_w := obter_param_usuario(88, 269, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_checa_adep_palm_w);

  if (ie_status_pendente_adep_w  <> 0) and (OLD.ie_status_atend <> ie_status_pendente_adep_w) and (NEW.ie_status_atend =  ie_status_pendente_adep_w) then

      open C08;
      loop
      fetch C08 into
        nr_seq_proc_hor_w;

      EXIT WHEN NOT FOUND; /* apply on C08 */
        BEGIN
        select  coalesce(max('S'),'N')
        into STRICT  ie_retorno_w
        from  prescr_proc_hor where   nr_sequencia  = nr_seq_proc_hor_w
        and   dt_fim_horario  is null
        and   dt_suspensao  is null
        and   Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S' LIMIT 1;

        if ( ie_retorno_w = 'S') then
          select  nextval('prescr_mat_alteracao_seq')
          into STRICT  nr_seq_alteracao_w
;

          if (nr_seq_proc_hor_w > 0) then
            BEGIN
            insert into prescr_mat_alteracao(
                nr_sequencia,
                dt_atualizacao,
                nm_usuario,
                dt_atualizacao_nrec,
                nm_usuario_nrec,
                nr_prescricao,
                nr_seq_prescricao,
                dt_alteracao,
                cd_pessoa_fisica,
                ie_alteracao,
                nr_seq_horario,
                ds_observacao,
                ds_justificativa,
                nr_seq_procedimento,
                nr_seq_recomendacao,
                nr_seq_horario_proc,
                nr_seq_horario_rec,
                ie_agrupador,
                ie_tipo_item,
                nr_seq_horario_sae,
                nr_seq_item_sae,
                dt_hor_acm_sn,
                nr_seq_horario_dieta,
                nr_seq_qualidade,
                nr_seq_satisfacao,
                dt_horario,
                nr_atendimento,
                cd_item,
                qt_dose_adm,
                cd_um_dose_adm,
                nr_seq_motivo,
                nr_seq_proc_interno)
              values (
                nr_seq_alteracao_w,
                LOCALTIMESTAMP,
                NEW.nm_usuario,
                LOCALTIMESTAMP,
                NEW.nm_usuario,
                NEW.nr_prescricao,
                null,
                LOCALTIMESTAMP,
                substr(obter_dados_usuario_opcao(NEW.nm_usuario,'C'),1,10),
                CASE WHEN NEW.nr_seq_exame IS NULL THEN 3  ELSE 8 END ,
                null,
                wheb_mensagem_pck.get_texto(309610), -- Administrac?o realizada via Exames pendentes conforme parametro 248
                null,
                NEW.nr_sequencia,
                null,
                nr_seq_proc_hor_w,
                null,
                null,
                'P',
                null,
                null,
                trunc(NEW.dt_prev_execucao,'mi'),
                null,
                null,
                null,
                trunc(NEW.dt_prev_execucao,'mi'),
                obter_atendimento_prescr(NEW.nr_prescricao),
                NEW.cd_procedimento,
                null,
                null,
                null,
                NEW.nr_seq_proc_interno);

            exception
            when others then
            nr_seq_alteracao_w := 0;
            end;
          end if;
        end if;
        end;
      end loop;
      close C08;

    update  prescr_proc_hor
    set   dt_fim_horario  = LOCALTIMESTAMP,
        nm_usuario_adm  = NEW.nm_usuario
    where dt_fim_horario  is null
    and   nm_usuario_adm  is null
    and   nr_prescricao   = NEW.nr_prescricao
    and   dt_horario    = trunc(NEW.dt_prev_execucao,'mi')
    and   coalesce(nr_seq_proc_origem,nr_seq_procedimento) = NEW.nr_sequencia;

  if (ie_checa_adep_palm_w = 'S') then
      update  prescr_proc_hor
      set   dt_fim_horario  = LOCALTIMESTAMP,
          nm_usuario_adm  = NEW.nm_usuario
      where dt_fim_horario  is null
      and   nm_usuario_adm  is null
      and   nr_prescricao   = NEW.nr_prescricao
      and   coalesce(nr_seq_proc_origem,nr_seq_procedimento) = NEW.nr_sequencia;
    end if;
  end if;
end if;

if (NEW.nr_seq_exame is null) then
  ie_status_exam_n_lab_adep_w  := obter_param_usuario(942, 355, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_status_exam_n_lab_adep_w );

  if (coalesce(ie_status_exam_n_lab_adep_w,'0') <> '0') then
    if (OLD.ie_status_execucao <> ie_status_exam_n_lab_adep_w) and (NEW.ie_status_execucao =  ie_status_exam_n_lab_adep_w) then

      update  prescr_proc_hor
      set   dt_fim_horario  = LOCALTIMESTAMP,
          nm_usuario_adm  = NEW.nm_usuario
      where dt_fim_horario  is null
      and   nm_usuario_adm  is null
      and   nr_prescricao   = NEW.nr_prescricao
      and   dt_horario    = trunc(NEW.dt_prev_execucao,'mi')
      and   coalesce(nr_seq_proc_origem,nr_seq_procedimento) = NEW.nr_sequencia;

      select  nextval('prescr_mat_alteracao_seq')
      into STRICT  nr_seq_alteracao_w
;

      select  coalesce(max(nr_sequencia),0)
      into STRICT    nr_seq_proc_hor_w
      from    prescr_proc_hor
      where   nr_prescricao   	= NEW.nr_prescricao
      and     nr_seq_procedimento 	= NEW.nr_sequencia;

      if (nr_seq_proc_hor_w > 0) then
      BEGIN
        insert into prescr_mat_alteracao(nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, nr_prescricao, nr_seq_prescricao, dt_alteracao, cd_pessoa_fisica, ie_alteracao, nr_seq_horario, ds_observacao, ds_justificativa, nr_seq_procedimento, nr_seq_recomendacao, nr_seq_horario_proc, nr_seq_horario_rec, ie_agrupador, ie_tipo_item, nr_seq_horario_sae, nr_seq_item_sae, dt_hor_acm_sn, nr_seq_horario_dieta, nr_seq_qualidade, nr_seq_satisfacao, dt_horario, nr_atendimento, cd_item, qt_dose_adm, cd_um_dose_adm, nr_seq_motivo, nr_seq_proc_interno)
        values (
          nr_seq_alteracao_w, --nr_sequencia
          LOCALTIMESTAMP, --dt_atualizacao
          NEW.nm_usuario, --nm_usuario
          LOCALTIMESTAMP, --dt_atualizacao_nrec
          NEW.nm_usuario, --nm_usuario_nrec
          NEW.nr_prescricao, --nr_prescricao
          null, --nr_seq_prescricao
          LOCALTIMESTAMP, --dt_alteracao
          substr(obter_dados_usuario_opcao(NEW.nm_usuario,'C'),1,10), --cd_pessoa_fisica
          CASE WHEN NEW.nr_seq_exame IS NULL THEN 3  ELSE 8 END , --ie_alteracao
          null, --nr_seq_horario
          null, --ds_observacao
          null, --ds_justificativa
          NEW.nr_sequencia, --nr_seq_procedimento
          null, --nr_seq_recomendacao
          nr_seq_proc_hor_w, --nr_seq_horario_proc
          null, --nr_seq_horario_rec
          null, --ie_agrupador
          'P', --ie_tipo_item
          null, --nr_seq_horario_sae
          null, --nr_seq_item_sae
          trunc(NEW.dt_prev_execucao,'mi'), --dt_hor_acm_sn
          null, --nr_seq_horario_dieta
          null, --nr_seq_qualidade
          null, --nr_seq_satisfacao
          trunc(NEW.dt_prev_execucao,'mi'), --dt_horario
          obter_atendimento_prescr(NEW.nr_prescricao), --nr_atendimento
          NEW.cd_procedimento, --cd_item
          null, --qt_dose_adm
          null, --cd_um_dose_adm
          null, --nr_seq_motivo
          NEW.nr_seq_proc_interno --nr_seq_proc_intern
        );

        exception
        when others then
          nr_seq_alteracao_w := 0;
        end;
      end if;
    end if;
  end if;
end if;

if ((NEW.nr_seq_exame is not null and
	 coalesce(ie_status_pendente_adep_w,'0') <> '0' and
	 ie_status_pendente_adep_w <> OLD.ie_status_atend and
	 ie_status_pendente_adep_w = NEW.ie_status_atend) or (NEW.nr_seq_exame is null and
	 coalesce(ie_status_exam_n_lab_adep_w,'0') <> '0' and
	 ie_status_exam_n_lab_adep_w <> OLD.ie_status_execucao and
	 ie_status_exam_n_lab_adep_w = NEW.ie_status_execucao)) then

	select	count(b.nr_sequencia)
	into STRICT	qt_prescr_pro_hor_w
	from	prescr_proc_hor b
	where	b.nr_prescricao			= NEW.nr_prescricao
	and		b.nr_seq_procedimento	= NEW.nr_sequencia;

	if (qt_prescr_pro_hor_w > 0)  then

		select	count(b.nr_sequencia)
		into STRICT	qt_dt_fim_horario_w
		from	prescr_proc_hor b
		where	b.nr_prescricao			= NEW.nr_prescricao
		and		b.nr_seq_procedimento	= NEW.nr_sequencia
		and		b.dt_fim_horario		is null;

		if (qt_dt_fim_horario_w = 0) then

			param_8_forma_geracao_dt_fim_w := obter_param_usuario(2314, 8, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, param_8_forma_geracao_dt_fim_w);

			if (param_8_forma_geracao_dt_fim_w = 'A' and NEW.cd_funcao_origem = 2314) then

				dt_fim_horario_w := LOCALTIMESTAMP;

				if (NEW.dt_prev_execucao > LOCALTIMESTAMP AND NEW.dt_prev_execucao is not null) then
					dt_fim_horario_w := NEW.dt_prev_execucao;
				end if;

				update	cpoe_procedimento
				set 	dt_fim =  trunc(dt_fim_horario_w + 1/24,'hh24') - 1/1440,
						nm_usuario = NEW.nm_usuario,
						dt_atualizacao = LOCALTIMESTAMP
				where	nr_sequencia = NEW.nr_seq_proc_cpoe
				and 	coalesce(ie_evento_unico,'N') = 'S'
				and		ie_administracao = 'P';
			end if;
		end if;
	end if;
end if;

if (NEW.dt_cancelamento is not null) and (OLD.ie_status_execucao <> NEW.ie_status_execucao) and (coalesce(NEW.cd_funcao_origem,0) <> 2314) then

  -- O exame esta cancelado. N?o e possivel realizar a alterac?o de status

  CALL wheb_mensagem_pck.exibir_mensagem_abort(185703,null);
end if;

if (OLD.ie_status_execucao <> NEW.ie_status_execucao and NEW.ie_status_execucao >= '20' and NEW.ie_status_execucao <> 'ASA') then
  select  coalesce(max(le.nr_sequencia),0)
  into STRICT  nr_seq_lista_espera_w
  from  cpoe_procedimento cp,
      agenda_lista_espera le
  where le.nr_sequencia = cp.nr_seq_lista_espera
  and   cp.nr_sequencia = NEW.nr_seq_proc_cpoe;

  if (nr_seq_lista_espera_w > 0) then
    update  agenda_lista_espera
    set   ie_status_espera = 'E'
    where nr_sequencia = nr_seq_lista_espera_w;
  end if;
end if;

select  coalesce(max(ie_sepse_lib_exame),'N')
into STRICT  ie_sepse_lib_exame_w
from  parametro_medico
where cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

if (ie_sepse_lib_exame_w = 'S') and (NEW.ie_status_atend = 35) then -- Definic?o do Dr. Haertel, a sepse toda ira trabalhar com aprovac?o de exames e n?o mais liberac?o de exames. OS 1610406
  BEGIN
  nr_controle_w := get_nr_controle_prescr_medica(NEW.nr_prescricao);
  if (nr_controle_w is not null and wheb_usuario_pck.is_evento_ativo(797) = 'S') then
  insert into w_sepse_procedimento(
          dt_atualizacao,
          nm_usuario,
          cd_pessoa_fisica,
          nr_atendimento,
          nr_prescricao,
          nr_seq_proc)
  values (
          LOCALTIMESTAMP,
          NEW.nm_usuario,
          cd_medico_prescr_w,
          nr_atendimento_w,
          NEW.nr_prescricao,
          NEW.nr_sequencia);
  else
    CALL gerar_escala_sepse_js(nr_atendimento_w,cd_medico_prescr_w,0,NEW.nm_usuario);
  end if;
  exception
  when others then
    null;
  end;
end if;

BEGIN
select  coalesce(max(ie_limpar_data_integracao),'N')
into STRICT  ie_limpar_data_integracao_w
from  parametro_integracao_pacs
where cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

if (ie_limpar_data_integracao_w = 'S') and (OLD.nr_seq_exame is null) and (OLD.dt_integracao is not null) and (NEW.ie_status_execucao = 'BE') then
  BEGIN
  NEW.dt_integracao   := null;
  end;
end if;

exception
when others then
  null;
end;

BEGIN
  if (NEW.ie_status_atend >= 35) and (OLD.ie_status_atend < 35) then
    select  max(nr_seq_resultado)
    into STRICT  nr_seq_resultado_w
    from  exame_lab_resultado
    where nr_prescricao = NEW.nr_prescricao;

    CALL LAB_ATUALIZA_TIPO_SANGUE_PAC(nr_seq_resultado_w, NEW.nr_sequencia);
    CALL LAB_ATUALIZA_FATOR_RH_PAC(nr_seq_resultado_w, NEW.nr_sequencia);
    CALL LAB_ATUALIZA_RH_FRACO_PAC(nr_seq_resultado_w, NEW.nr_sequencia);
    end if;
end;

if (coalesce(NEW.qt_procedimento,0) <> coalesce(OLD.qt_procedimento,0)) then
  update  prescr_material
  set   ie_alterou_dose_dil = 'S'
  where nr_prescricao = NEW.nr_prescricao
  and nr_sequencia_proc = NEW.nr_sequencia
  and ie_agrupador    = 5;
else
  update  prescr_material
  set   ie_alterou_dose_dil = 'N'
  where nr_prescricao = NEW.nr_prescricao
  and nr_sequencia_proc = NEW.nr_sequencia
  and ie_agrupador    = 5;
end if;

select  coalesce(max(ie_atualiza_setor_exame_lab), 'N')
into STRICT  ie_atualiza_setor_exame_lab_w
from  lab_parametro
where cd_estabelecimento = cd_estabelecimento_w;

if (ie_atualiza_setor_exame_lab_w = 'S') and (NEW.nr_seq_exame is not null) and (NEW.cd_material_exame is not null) then
  NEW.cd_setor_atendimento := coalesce(obter_setor_atend_proc_lab(cd_estabelecimento_w,cd_procedimento_w,ie_origem_proced_w, null,NEW.cd_setor_atendimento,null,NEW.nr_seq_exame, nr_atendimento_w), NEW.cd_setor_atendimento);
end if;

if  (((coalesce(NEW.nr_seq_proc_interno,0) > 0) and (coalesce(NEW.nr_seq_exame,0) = 0)) and (coalesce(NEW.nr_seq_proc_interno,0) <> coalesce(OLD.nr_seq_proc_interno,0))) then
  select  max(ie_tipo_atendimento),
    max(obter_convenio_atendimento(nr_atendimento)),
    max(obter_categoria_atendimento(nr_atendimento))
  into STRICT  ie_tipo_atendimento_w,
    cd_convenio_w,
    cd_categoria_w
  from  atendimento_paciente
  where nr_atendimento = nr_atendimento_w;

  cd_procedimento_tuss_w:= Define_procedimento_TUSS(cd_estabelecimento_w,  NEW.nr_seq_proc_interno, coalesce(NEW.cd_convenio, cd_convenio_w),
            coalesce(NEW.cd_categoria, cd_categoria_w), ie_tipo_atendimento_w, coalesce(NEW.dt_prev_execucao, LOCALTIMESTAMP),
            NEW.cd_procedimento, NEW.ie_origem_proced, 0, cd_setor_prescr_w, null);

  if (cd_procedimento_tuss_w > 0) then
    NEW.cd_proced_tuss := cd_procedimento_tuss_w;
  else
    NEW.cd_proced_tuss := null;
  end if;
end if;

if (coalesce(OLD.ds_horarios, 'XPTO') <> coalesce(NEW.ds_horarios, 'XPTO')) then
  ds_log_w  := substr(ds_log_w || ' DS_HORARIOS(' || coalesce(OLD.DS_HORARIOS,'XPTO') || '/' || coalesce(NEW.DS_HORARIOS,'XPTO')||'); ',1,1800);
end if;

if (coalesce(OLD.IE_SUSPENSO, 'N') <> coalesce(NEW.IE_SUSPENSO, 'N')) then
  ds_log_w  := substr(ds_log_w || ' IE_SUSPENSO(' || coalesce(OLD.IE_SUSPENSO,'N') || '/' || coalesce(NEW.IE_SUSPENSO,'N')||'); ',1,1800);
end if;

if (coalesce(OLD.cd_procedimento, 0) <> coalesce(NEW.cd_procedimento, 0)) then
  ds_log_w  := substr(ds_log_w || ' CD_PROCEDIMENTO(' || coalesce(OLD.cd_procedimento, 0) || '/' || coalesce(NEW.cd_procedimento, 0)||'); ',1,1800);
end if;

if (coalesce(OLD.nr_seq_proc_interno, 0) <> coalesce(NEW.nr_seq_proc_interno, 0)) then
  ds_log_w  := substr(ds_log_w || ' NR_SEQ_PROC_INTERNO(' || coalesce(OLD.nr_seq_proc_interno, 0) || '/' || coalesce(NEW.nr_seq_proc_interno, 0)||'); ',1,1800);
end if;

if (coalesce(OLD.ie_origem_proced, 0) <> coalesce(NEW.ie_origem_proced, 0)) then
  ds_log_w  := substr(ds_log_w || ' IE_ORIGEM_PROCED(' || coalesce(OLD.ie_origem_proced, 0) || '/' || coalesce(NEW.ie_origem_proced, 0)||'); ',1,1800);
end if;

if (coalesce(OLD.dt_prev_execucao, dt_min_date_w) <> coalesce(NEW.dt_prev_execucao, dt_min_date_w)) then
  ds_log_w  := substr(ds_log_w || ' dt_prev_execucao(' || coalesce(to_char(OLD.dt_prev_execucao,'dd/mm/yyyy hh24:mi:ss'),'<NULL>') || '/' || coalesce(to_char(NEW.dt_prev_execucao,'dd/mm/yyyy hh24:mi:ss'),'<NULL>')||'); ',1,2000);
end if;

if (coalesce(OLD.ie_status_execucao, 0) <> coalesce(NEW.ie_status_execucao, 0)) then
  ds_log_w  := substr(ds_log_w || ' IE_STATUS_EXECUCAO(' || coalesce(OLD.ie_status_execucao, 0) || '/' || coalesce(NEW.ie_status_execucao, 0)||'); ',1,1800);
end if;

if (ds_log_w is not null) then
  ds_log_w := substr(wheb_mensagem_pck.get_texto(952753)/*'Sequencia: '*/
 || NEW.nr_sequencia ||' - '|| wheb_mensagem_pck.get_texto(952754)/*' - prescricao - '*/ ||' - '|| NEW.nr_prescricao || ' - ' || ds_log_w || ' - ' ||
  ' FUNCAO(' || to_char(wheb_usuario_pck.get_cd_funcao) || '); PERFIL(' || to_char(cd_perfil_w) || ')' || dbms_utility.format_call_stack ,1,1800);
  CALL gravar_log_tasy(50, ds_log_w, NEW.nm_usuario);
end if;

if (OLD.ie_status_atend <> NEW.ie_status_atend) and (NEW.nr_seq_exame is not null) then
  ds_param_adicional_w :=  'nr_prescricao='||NEW.nr_prescricao ||';nr_sequencia='|| NEW.nr_sequencia || ';';
  registro_integracao_w := gerar_int_padrao.gravar_integracao('312', NEW.nr_prescricao, NEW.nm_usuario, registro_integracao_w, ds_param_adicional_w);
end if;

if (OLD.ie_status_atend <> NEW.ie_status_atend) and (OLD.ie_status_atend >= 35) and (NEW.ie_status_atend < 35) and (NEW.nr_seq_exame is not null) then
    if (wheb_usuario_pck.is_evento_ativo(766) = 'S') then
        acao_w := 'Exclusao';
        CALL integrar_unimed_rs_ws(766, NEW.nr_prescricao, NEW.nr_sequencia, NEW.nm_usuario, acao_w);
    end if;
end if;

/* HL7 Cancel order - prescription.laboratory.order.update */


if  	((NEW.dt_cancelamento is not null) and (OLD.dt_cancelamento is null) and (NEW.dt_suspensao is null)) or
	((NEW.dt_suspensao is not null) and (OLD.dt_suspensao is null) and (NEW.dt_cancelamento is null)) or
	((NEW.dt_suspensao is not null) and (NEW.dt_cancelamento is not null) and (OLD.dt_cancelamento is null) and (OLD.dt_suspensao is null))	then
	BEGIN
	select  coalesce(max(nr_sequencia),0),
		coalesce(max(dt_horario),LOCALTIMESTAMP)
	into STRICT    nr_seq_proc_hor_w,
		dt_horario_w
	from    prescr_proc_hor
	where   nr_prescricao   	= NEW.nr_prescricao
	and     nr_seq_procedimento 	= NEW.nr_sequencia;
	
	CALL call_bifrost_content('prescription.laboratory.order.update','prescription_json_pck.get_lis_message_clob('||NEW.nr_prescricao||
						', to_date('||chr(39)||to_char(dt_horario_w,'dd/mm/yyyy hh24:mi:ss')||chr(39)||','||
						chr(39)||'dd/mm/yyyy hh24:mi:ss'|| chr(39)||' ),'||NEW.nr_sequencia||' )', NEW.nm_usuario);

	CALL call_bifrost_content('prescription.image.order.update','prescription_json_pck.get_ris_message_clob('||nr_seq_proc_hor_w||')', NEW.nm_usuario);
	
	end;
end if;

if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'ja_JP') then

  if  (NEW.dt_cancelamento is not null AND OLD.dt_cancelamento is null) or
      (NEW.dt_suspensao is not null AND OLD.dt_suspensao is null) then	

        for r_c12 in c12 loop
          BEGIN
            ds_param_integ_hl7_w := '{"recordId" : "' || NEW.nr_seq_interno || '"' || ',"typePrescription" : "' || r_c12.nr_seq_sub_grp || '"}';
            json_data_w := bifrost.send_integration_content('nais.itemOrder.cancelation', ds_param_integ_hl7_w, NEW.nm_usuario);
          end;
        end loop;
  end if;
end if;
<<final>>
qt_reg_w  := 0;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_prescr_procedimento_update() FROM PUBLIC;

CREATE TRIGGER prescr_procedimento_update
	BEFORE UPDATE ON prescr_procedimento FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_prescr_procedimento_update();

