-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pe_prescricao_insert ON pe_prescricao CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pe_prescricao_insert() RETURNS trigger AS $BODY$
declare

dt_rep_pt_w		timestamp;
dt_rep_pt2_w		timestamp;
dt_prim_setor_w		timestamp;

BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'N') then
	goto final;
end if;




if (NEW.nr_seq_modelo is not null) and (Obter_se_modelo_SAE_lib(NEW.nr_seq_modelo,NEW.cd_pessoa_fisica, NEW.nr_atendimento) = 'N') then
	-- Nao e possivel continuar esta acao pois o Modelo DS_MODELO nao esta liberado para este Perfil e Paciente.

	CALL Wheb_mensagem_pck.exibir_mensagem_abort( 261365 , 'DS_MODELO=' || substr(obter_desc_mod_sae(NEW.nr_seq_modelo),1,255));
end if;

select	max(hr_inicio_prescricao)
into STRICT	dt_prim_setor_w
from	setor_atendimento
where	cd_setor_atendimento = NEW.cd_setor_atendimento;

if (dt_prim_setor_w is not null) then

	dt_rep_pt_w		:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(NEW.dt_inicio_prescr,NEW.dt_prescricao));

	dt_prim_setor_w		:= to_date(to_char(coalesce(NEW.dt_inicio_prescr,NEW.dt_prescricao),'dd/mm/yyyy') || ' ' || to_char(dt_prim_setor_w,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');

	if (coalesce(NEW.dt_inicio_prescr,NEW.dt_prescricao)	< dt_prim_setor_w) then
		dt_rep_pt_w	:= establishment_timezone_utils.startOfDay(coalesce(NEW.dt_inicio_prescr,NEW.dt_prescricao) - 1);
	end if;

	if (NEW.qt_horas_validade	> 24) then
		
		dt_rep_pt2_w	:= (dt_rep_pt_w + 1);
		
	else
		dt_rep_pt2_w	:= null;
	end if;

	NEW.dt_rep_pt	:= dt_rep_pt_w;
	NEW.dt_rep_pt2	:= dt_rep_pt2_w;
	
else

	NEW.dt_rep_pt	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(NEW.dt_inicio_prescr,NEW.dt_prescricao));
	NEW.dt_rep_pt2	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(NEW.dt_validade_prescr,coalesce(NEW.dt_inicio_prescr,NEW.dt_prescricao)));
	
end if;

<<final>>
null;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pe_prescricao_insert() FROM PUBLIC;

CREATE TRIGGER pe_prescricao_insert
	BEFORE INSERT ON pe_prescricao FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pe_prescricao_insert();

