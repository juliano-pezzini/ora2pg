-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS ptu_fatura_update ON ptu_fatura CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_ptu_fatura_update() RETURNS trigger AS $BODY$
declare

ds_log_w		ptu_fatura_log.ds_log%type; 		-- 4000
ds_observacao_w		ptu_fatura_log.ds_observacao%type;	-- 4000
nm_machine_w		varchar(255);
nm_program_w		varchar(255);
nm_machine_log_w	varchar(255);
ds_log_call_w		varchar(4000);
qt_analise_aberta_w	integer;
BEGIN
  BEGIN
if (NEW.ie_status = 'I') or (NEW.ie_status = 'V') then
	BEGIN
	select	' Máquina: ' || machine
	into STRICT	nm_machine_w
	from	v$session
	where	audsid = userenv('sessionid');
	exception
		when others then
		nm_machine_w	:= null;
	end;

	BEGIN
	select	' Aplicação: ' || program
	into STRICT	nm_program_w
	from	v$session
	where	audsid = userenv('sessionid');
	exception
		when others then
		nm_machine_w	:= null;
	end;

	ds_observacao_w	:=	trim(both substr(nm_machine_w || nm_program_w,1,4000));

	ds_log_w 	:=	'PTU_FATURA: '		||
				'IE_STATUS_OLD: ' 	|| OLD.ie_status ||
				'   IE_STATUS_NEW: '	|| NEW.ie_status ||
				'   NM_USUARIO_OLD: ' 	|| OLD.nm_usuario ||
				'   NM_USUARIO_NEW: ' 	|| NEW.nm_usuario||
				'   Call: '||dbms_utility.format_call_stack;

	CALL ptu_gerar_fatura_log( NEW.nr_sequencia, ds_log_w, ds_observacao_w, 'N', coalesce(NEW.nm_usuario,OLD.nm_usuario));
end if;

if 	(OLD.ie_status = 'E' AND NEW.ie_status <> 'AF') then
	ds_log_call_w := substr(pls_obter_detalhe_exec(false),1,1500);

	BEGIN
	select	' Máquina: ' || machine
	into STRICT	nm_machine_log_w
	from	v$session
	where	audsid = userenv('sessionid');
	exception
		when others then
		nm_machine_log_w	:= null;
	end;

	ds_log_w	:= substr('CallStack: ' || ds_log_call_w,1,4000);
	ds_observacao_w := substr('Alteração de Status de "Encerrada" para outro status diferente de "Análise Finalizada" ' || ' Usuário: ' || coalesce(wheb_usuario_pck.get_nm_usuario,'Usuário não identificado') || ' Máquina: ' || nm_machine_log_w,1,4000);

	CALL ptu_gerar_fatura_log( NEW.nr_sequencia, ds_log_w, ds_observacao_w, 'N', coalesce(NEW.nm_usuario,OLD.nm_usuario));
end if;

if (NEW.ie_status = 'CA') then
	ds_log_call_w := substr(pls_obter_detalhe_exec(false),1,1500);

	BEGIN
	select	' Máquina: ' || machine
	into STRICT	nm_machine_log_w
	from	v$session
	where	audsid = userenv('sessionid');
	exception
		when others then
		nm_machine_log_w	:= null;
	end;

	ds_log_w	:= substr('CallStack: ' || ds_log_call_w,1,4000);
	ds_observacao_w := substr('Fatura cancelada. Título: ' || NEW.nr_titulo || ' Titulo NDC ' || NEW.nr_titulo_ndc || ' Usuário: ' || coalesce(wheb_usuario_pck.get_nm_usuario,'Usuário não identificado') || ' Máquina: ' || nm_machine_log_w,1,4000);

	CALL ptu_gerar_fatura_log( NEW.nr_sequencia, ds_log_w, ds_observacao_w, 'N', coalesce(NEW.nm_usuario,OLD.nm_usuario));
end if;


if (NEW.nr_seq_protocolo != OLD.nr_seq_protocolo) or
	(NEW.nr_seq_protocolo is not null AND OLD.nr_seq_protocolo is null) or
	(NEW.nr_seq_protocolo is null AND OLD.nr_seq_protocolo is not null)then
	ds_log_call_w := substr(pls_obter_detalhe_exec(false),1,1500);

	BEGIN
	select	' Máquina: ' || machine
	into STRICT	nm_machine_log_w
	from	v$session
	where	audsid = userenv('sessionid');
	exception
		when others then
		nm_machine_log_w	:= null;
	end;

	ds_log_w	:= substr('CallStack: ' || ds_log_call_w,1,4000);
	ds_observacao_w := substr('Protocolo alterado : ' || NEW.nr_seq_protocolo || ' protocolo antigo ' || OLD.nr_seq_protocolo || ' Usuário: ' || coalesce(wheb_usuario_pck.get_nm_usuario,'Usuário não identificado') || ' Máquina: ' || nm_machine_log_w,1,4000);

	CALL ptu_gerar_fatura_log( NEW.nr_sequencia, ds_log_w, ds_observacao_w, 'N', coalesce(NEW.nm_usuario,OLD.nm_usuario));
end if;

if (NEW.ie_status <> OLD.ie_status) then
	BEGIN

	ds_log_call_w := substr(pls_obter_detalhe_exec(false),1,1500);

	BEGIN
	select	' Máquina: ' || machine
	into STRICT	nm_machine_log_w
	from	v$session
	where	audsid = userenv('sessionid');
	exception
		when others then
		nm_machine_log_w	:= null;
	end;

	ds_log_w	:= substr('CallStack: ' || ds_log_call_w,1,4000);
	ds_observacao_w := substr('Alteração de Status de ' ||OLD.ie_status || ' para ' || NEW.ie_status || '. ' || ' Usuário: ' || coalesce(wheb_usuario_pck.get_nm_usuario,'Usuário não identificado') || ' Máquina: ' || nm_machine_log_w,1,4000);

	CALL ptu_gerar_fatura_log( NEW.nr_sequencia, ds_log_w, ds_observacao_w, 'N', coalesce(NEW.nm_usuario,OLD.nm_usuario));

	end;
end if;

if (NEW.ie_status = 'AF') and (OLD.ie_status <> 'AF') then

	BEGIN
		select	count(1)
		into STRICT	qt_analise_aberta_w
		from	pls_analise_conta a,
			pls_conta b
		where	a.nr_sequencia = b.nr_seq_analise
		and	b.nr_seq_fatura = NEW.nr_sequencia
		and	a.ie_status <> 'T';
	exception
	when others then
		qt_analise_aberta_w := 0;
	end;

	if (qt_analise_aberta_w > 0) then
		ds_log_w := substr('CallStack: ' || ds_log_call_w,1,4000);
		ds_observacao_w := substr('Status da fatura alterado para "Análise finalizada", porém, nem todas as análises estão fechadas ',1,4000);
		CALL ptu_gerar_fatura_log( NEW.nr_sequencia, ds_log_w, ds_observacao_w, 'N', coalesce(NEW.nm_usuario,OLD.nm_usuario));
	end if;
end if;

  END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_ptu_fatura_update() FROM PUBLIC;

CREATE TRIGGER ptu_fatura_update
	BEFORE UPDATE ON ptu_fatura FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_ptu_fatura_update();

