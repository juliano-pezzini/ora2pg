-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS agenda_consulta_insert ON agenda_consulta CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_agenda_consulta_insert() RETURNS trigger AS $BODY$
DECLARE

HR_QUEBRA_TURNO_W		varchar(05);
qt_min_QUEBRA_TURNO_W		varchar(05);
cd_convenio_w			integer;
cd_plano_w			varchar(10);
cd_categoria_w			varchar(10);
cd_tipo_acomodacao_w		smallint;
cd_estabelecimento_w		smallint;
cd_perfil_w			integer;
cd_perfil_regra_w		integer;
ie_atual_nome_bloq_w		varchar(1) := 'N';
nr_seq_Agendamento_w		bigint;
cd_cid_w			varchar(10);
nr_seq_regra_w			bigint;
hr_quebra_turno_not_w	 varchar(2);
ie_solicitacao_w			varchar(1);
ie_situacao_lab_w			varchar(1);
nr_conta_w				bigint;
qt_reg_w		bigint;
cd_tipo_agenda_w	agenda.cd_tipo_agenda%type;
hr_quebra_turno_not_fim_w	agenda.hr_quebra_turno_not_fim%type;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	regra_valor_padrao_agenda
	where	cd_perfil = cd_perfil_regra_w
	and	((cd_agenda = NEW.cd_agenda) or (cd_agenda is null))
	and	((cd_estabelecimento = cd_estabelecimento_w) or (cd_estabelecimento is null))
	order by coalesce(cd_estabelecimento,0),
		 coalesce(cd_agenda,0);

BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger	= 'S') then

	if (NEW.nr_seq_exame is not null) then
		select	coalesce(max(ie_solicitacao),'N'),
				coalesce(max(ie_situacao),'A')
		into STRICT		ie_solicitacao_w,
				ie_situacao_lab_w
		from		exame_laboratorio
		where	nr_seq_exame = NEW.nr_seq_exame;
		if (ie_solicitacao_w <> 'S') then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(182653, 'NR_SEQ_EXAME=' || NEW.nr_seq_exame);
		
		elsif (ie_situacao_lab_w <> 'A') then
			CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(172737, 'EXAME='||NEW.nr_seq_exame);
		end if;
	end if;

	select	coalesce(max(HR_QUEBRA_TURNO), '12'),
		coalesce(max(qt_min_quebra_turno), '00'),
		max(cd_estabelecimento),
		max(hr_quebra_turno_not),
		max(hr_quebra_turno_not_fim)
	into STRICT	HR_QUEBRA_TURNO_W,
		qt_min_QUEBRA_TURNO_W,
		cd_estabelecimento_w,
		hr_quebra_turno_not_w,
		hr_quebra_turno_not_fim_w
	from	agenda
	where 	cd_agenda	= NEW.cd_agenda;

	ie_atual_nome_bloq_w := Obter_Param_Usuario(821, 203, obter_perfil_ativo, NEW.nm_usuario, cd_estabelecimento_w, ie_atual_nome_bloq_w);

	NEW.cd_turno		:= 0;--manha

	if (NEW.nr_seq_hora is null) then
		NEW.nr_seq_hora	:= 0;
	end if;

	if (NEW.ie_classif_agenda is null) then
		if (NEW.ie_status_agenda = 'L') then
			select max(cd_tipo_agenda)
			into STRICT cd_tipo_agenda_w
			from agenda
			where cd_agenda = NEW.cd_agenda;
			NEW.ie_classif_agenda	:= obter_classif_regra_alteracao(cd_tipo_agenda_w, NEW.cd_agenda, NEW.dt_agenda, 'E');
		else
			NEW.ie_classif_agenda	:= 'E';
		end if;
	end if;
			
	if ((to_char(NEW.dt_agenda,'hh24'))::numeric  > somente_numero(HR_QUEBRA_TURNO_W)) or
		(((to_char(NEW.dt_agenda,'hh24'))::numeric  = somente_numero(HR_QUEBRA_TURNO_W)) and ((to_char(NEW.dt_agenda,'mi'))::numeric  >= somente_numero(qt_min_QUEBRA_TURNO_W))) then
		NEW.cd_turno	:= 1;--tarde
	end if;

	if (hr_quebra_turno_not_w is not null) then
		if ((hr_quebra_turno_not_fim_w is null) and ((to_char(NEW.dt_agenda,'hh24'))::numeric  >= somente_numero(hr_quebra_turno_not_w)) and ((to_char(NEW.dt_agenda,'hh24'))::numeric  < 24)) then
			NEW.cd_turno := 3;--noite

		elsif ((hr_quebra_turno_not_fim_w is not null) and
			(((somente_numero(hr_quebra_turno_not_fim_w) < somente_numero(hr_quebra_turno_not_w)) and
			((((to_char(NEW.dt_agenda,'hh24'))::numeric  >= somente_numero(hr_quebra_turno_not_w)) and ((to_char(NEW.dt_agenda,'hh24'))::numeric  < 24)) or
			(((to_char(NEW.dt_agenda,'hh24'))::numeric  < somente_numero(hr_quebra_turno_not_fim_w)) and ((to_char(NEW.dt_agenda,'hh24'))::numeric  >= 00)))) or
			((somente_numero(hr_quebra_turno_not_fim_w) > somente_numero(hr_quebra_turno_not_w)) and ((to_char(NEW.dt_agenda,'hh24'))::numeric  between somente_numero(hr_quebra_turno_not_w) and somente_numero(hr_quebra_turno_not_fim_w))))) then
			NEW.cd_turno := 3;--noite
		end if;
	end if;

	select	max(cd_perfil)
	into STRICT	cd_perfil_w
	from	rp_parametros
	where	cd_estabelecimento = cd_estabelecimento_w;

	cd_perfil_regra_w	:= obter_perfil_ativo;

	if (cd_perfil_regra_w = 0) then
		cd_perfil_regra_w	:= cd_perfil_w;
	end if;	
		
	open C01;
	loop
	fetch C01 into	
		nr_seq_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN
		nr_seq_regra_w	:= nr_seq_regra_w;
		end;
	end loop;
	close C01;	
		
	if (nr_seq_regra_w > 0) then
		select	max(cd_convenio),
			max(cd_categoria),
			max(cd_plano),
			max(cd_tipo_acomodacao),
			max(cd_cid)
		into STRICT	cd_convenio_w,
			cd_categoria_w,
			cd_plano_w,
			cd_tipo_acomodacao_w,
			cd_cid_w
		from	regra_valor_padrao_agenda
		where	nr_sequencia = nr_seq_regra_w;

		if (cd_convenio_w is not null) then
			NEW.cd_convenio := cd_convenio_w;
		end if;

		if (cd_categoria_w is not null) then
			NEW.cd_categoria := cd_categoria_w;
		end if;

		if (cd_plano_w is not null) then
			NEW.cd_plano := cd_plano_w;
		end if;

		if (cd_tipo_acomodacao_w is not null) then
			NEW.cd_tipo_acomodacao := cd_tipo_acomodacao_w;
		end if;

		if (cd_cid_w is not null) then
			NEW.cd_cid		:= cd_cid_w;
		end if;
	end if;

	if (ie_atual_nome_bloq_w = 'S') and (NEW.ie_status_agenda = 'B') then
		NEW.nm_paciente := wheb_mensagem_pck.get_texto(306953, null); -- Horario bloqueado
	end if;

	if (NEW.ie_status_agenda = 'N') and (NEW.nr_seq_agendamento is null) and (NEW.ie_encaixe		= 'S') and (NEW.cd_pessoa_fisica is not null) then
		select nextval('agendamento_cons_seq')
		into STRICT nr_seq_Agendamento_w 
		;		
		NEW.nr_seq_agendamento	:= nr_seq_Agendamento_w;		
	end if;

	/*Alterar status opm apos confirmar agendamento (COA)*/


	CALL WHEB_USUARIO_PCK.set_ie_commit('N');
	if ((NEW.nr_seq_opm is not null) and (coalesce(to_char(OLD.nr_seq_opm),'0') <> coalesce(to_char(NEW.nr_seq_opm),'0'))) then
		 CALL gravar_status_op_opm(NEW.nr_seq_opm,'COA',NEW.cd_agenda,wheb_usuario_pck.get_nm_usuario,wheb_usuario_pck.get_cd_estabelecimento);

	end if;
		
	/*Alterar status opm apos executar agendamento (AEAG)*/


	if ((OLD.ie_status_agenda <> NEW.ie_status_agenda) and (NEW.nr_seq_opm is not null) and (NEW.ie_status_agenda = 'E')) then
		  if (obter_qt_agend_opm(NEW.nr_seq_opm, NEW.dt_agenda, NEW.nr_sequencia, 'AEAG') = 0) then
		   CALL gravar_status_op_opm(NEW.nr_seq_opm,'AEAG',NEW.cd_agenda,wheb_usuario_pck.get_nm_usuario,wheb_usuario_pck.get_cd_estabelecimento);
		 end if;
	end if;

	if (NEW.NR_SEQ_LISTA_ESPERA is not null and OLD.NR_SEQ_LISTA_ESPERA is null) then
		SELECT	count(*)
		into STRICT	qt_reg_w
		from	ag_lista_espera_estagio
		where	IE_SITUACAO = 'A'
		and		ie_acao = 'AG';
		
		if (qt_reg_w > 0) then		
			select	count(*)
			into STRICT	qt_reg_w
			from	ag_lista_esp_estagio_ant a,
					agenda_lista_espera b
			where	a.nr_seq_estagio = (SELECT	c.nr_sequencia
										from	ag_lista_espera_estagio c
										where	c.IE_SITUACAO = 'A'
										and		c.ie_acao = 'AG')
			and		a.nr_seq_estagio_ant = b.nr_seq_estagio							
			and		b.nr_sequencia = NEW.nr_seq_lista_espera;
		
			if (qt_reg_w > 0) then		
				update	AGENDA_LISTA_ESPERA b
				set		b.nr_seq_estagio = (SELECT	nr_sequencia
										  from		ag_lista_espera_estagio a
										  where		a.IE_SITUACAO = 'A'
										  and		a.ie_acao = 'AG')
				where	b.nr_sequencia = NEW.NR_SEQ_LISTA_ESPERA;			
			end if;		
		end if;	
	end if;

	CALL wheb_usuario_pck.set_ie_commit('S');
end if;
	
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_agenda_consulta_insert() FROM PUBLIC;

CREATE TRIGGER agenda_consulta_insert
	BEFORE INSERT ON agenda_consulta FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_agenda_consulta_insert();

