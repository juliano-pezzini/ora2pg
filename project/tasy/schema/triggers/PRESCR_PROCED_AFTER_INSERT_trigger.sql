-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS prescr_proced_after_insert ON prescr_procedimento CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_prescr_proced_after_insert() RETURNS trigger AS $BODY$
declare

ds_sigla_equip_w			equipamento_lab.ds_sigla%type;
cd_exame_equip_w			lab_exame_equip.cd_exame_equip%type;
cd_equipamento_w			equipamento_lab.cd_equipamento%type;
ie_interf_mult_equip_w		lab_parametro.ie_interf_mult_equip%type;

c01 CURSOR FOR
	SELECT	a.ds_sigla,
			b.cd_exame_equip,
			b.cd_equipamento
	from	equipamento_lab a,
			lab_exame_equip b
	where 	a.cd_equipamento = b.cd_equipamento
	and	  	 b.nr_seq_exame = NEW.nr_seq_exame
	and 	 a.ds_sigla in ('CETUS','MATRIX')
	order by b.cd_equipamento;

BEGIN

select 	MAX(a.ie_interf_mult_equip)
into STRICT	ie_interf_mult_equip_w
from	lab_parametro a,
		prescr_medica b
where 	a.cd_estabelecimento = b.cd_estabelecimento
and		b.nr_prescricao = NEW.nr_prescricao;

if (ie_interf_mult_equip_w = 'S') and (NEW.nr_seq_exame is not null) then
	open c01;
	loop
	fetch c01 into
		ds_sigla_equip_w,
		cd_exame_equip_w,
		cd_equipamento_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		BEGIN
			insert into prescr_proc_equip_lab( nr_sequencia,
												dt_atualizacao,
												nm_usuario,
												dt_atualizacao_nrec,
												nm_usuario_nrec,
												dt_integracao,
												nr_prescricao,
												nr_seq_prescr,
												cd_equipamento,
												cd_exame_equip,
												ds_sigla_interf
											  ) values (
 												nextval('prescr_proc_equip_lab_seq'),
												LOCALTIMESTAMP,
												NEW.nm_usuario,
												LOCALTIMESTAMP,
												NEW.nm_usuario,
												null,
												NEW.nr_prescricao,
												NEW.nr_sequencia,
												cd_equipamento_w,
												cd_exame_equip_w,
												ds_sigla_equip_w
											  );
		end;
	end loop;
	close c01;
end if;

RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_prescr_proced_after_insert() FROM PUBLIC;

CREATE TRIGGER prescr_proced_after_insert
	AFTER INSERT ON prescr_procedimento FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_prescr_proced_after_insert();

