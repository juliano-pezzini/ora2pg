-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS lote_audit_hist_guia_insert ON lote_audit_hist_guia CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_lote_audit_hist_guia_insert() RETURNS trigger AS $BODY$
DECLARE

cd_estabelecimento_w		smallint;
cd_convenio_w			lote_auditoria.cd_convenio%type;
nr_seq_retorno_w		bigint;
ie_status_retorno_w		varchar(1);
ie_sem_retorno_w		varchar(1);
ie_vinc_adiant_prot_pj_w	varchar(1);
nr_adiantamento_w		adiantamento.nr_adiantamento%type;

BEGIN

select	max(b.cd_estabelecimento),
	max(b.cd_convenio)
into STRICT	cd_estabelecimento_w,
	cd_convenio_w
from	lote_auditoria b,
	lote_audit_hist a
where	a.nr_seq_lote_audit	= b.nr_sequencia
and	a.nr_sequencia		= NEW.nr_seq_lote_hist;

ie_sem_retorno_w := obter_param_usuario(69, 23, obter_perfil_ativo, NEW.nm_usuario, cd_estabelecimento_w, ie_sem_retorno_w);

select 	coalesce(x.ie_vinc_adiant_prot_pj,'N')
into STRICT	ie_vinc_adiant_prot_pj_w
from  	convenio_estabelecimento x
where 	x.cd_convenio = cd_convenio_w
and	x.cd_estabelecimento = cd_estabelecimento_w;

select	max(nr_adiantamento)
into STRICT	nr_adiantamento_w
from	conta_paciente_adiant
where	nr_interno_conta = NEW.nr_interno_conta;

if (ie_vinc_adiant_prot_pj_w = 'S') and (nr_adiantamento_w is not null) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1026496,'nr_adiantamento_w='||nr_adiantamento_w||';'||
							'nr_interno_conta_w='||NEW.nr_interno_conta);
end if;

if (ie_sem_retorno_w = 'N') then

	select	coalesce(max(b.nr_sequencia),0),
		max(b.ie_status_retorno)
	into STRICT	nr_seq_retorno_w,
		ie_status_retorno_w
	from	convenio_retorno b,
		convenio_retorno_item a
	where	a.nr_seq_retorno	= b.nr_sequencia
	and	coalesce(a.cd_autorizacao,'N?o Informada')	= coalesce(NEW.cd_autorizacao,'N?o Informada')
	and	a.nr_interno_conta	= NEW.nr_interno_conta;

	if (coalesce(nr_seq_retorno_w,0) = 0) then
		--r.aise_application_error(-20011,'A guia ' || :new.cd_autorizacao || ' da conta ' || :new.nr_interno_conta || ' ainda n?o foi tratada na func?o Retorno Convenio! Parametro [23]');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(263407,	'cd_autorizacao_w='||NEW.cd_autorizacao||';'||
								'nr_interno_conta_w='||NEW.nr_interno_conta);
	elsif (ie_status_retorno_w <> 'F' and NEW.nr_seq_retorno <> nr_seq_retorno_w) then
		--r.aise_application_error(-20011,'A guia ' || :new.cd_autorizacao || ' da conta ' || :new.nr_interno_conta || ' ainda esta sendo tratada no retorno ' || nr_seq_retorno_w || '! Parametro [23]');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(263408,	'cd_autorizacao_w='||NEW.cd_autorizacao||';'||
								'nr_interno_conta_w='||NEW.nr_interno_conta||';'||
								'nr_seq_retorno_w='||nr_seq_retorno_w);
	end if;

end if;

RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_lote_audit_hist_guia_insert() FROM PUBLIC;

CREATE TRIGGER lote_audit_hist_guia_insert
	BEFORE INSERT ON lote_audit_hist_guia FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_lote_audit_hist_guia_insert();

