-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS perfil_item_pront_pasta_atual ON perfil_item_pront_pasta CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_perfil_item_pront_pasta_atual() RETURNS trigger AS $BODY$
declare

nr_pasta_filha_w bigint;
qt_registro_sup_w bigint;
nr_seq_pasta_sup_w bigint;
nr_seq_dic_obj_w bigint;
qt_reg_config_comp_w bigint;

C01 CURSOR FOR
	SELECT  a.NR_SEQUENCIA
	FROM 	perfil_item_pront_pasta a,
			PERFIL_ITEM_PRONT b
	WHERE	a.NR_SEQ_ITEM_PERFIL = b.nr_sequencia
	AND		b.nr_sequencia = OLD.NR_SEQ_ITEM_PERFIL
	AND		a.nr_sequencia IN (
		SELECT x.nr_sequencia
		FROM	perfil_item_pront_pasta x
		WHERE	x.nr_seq_item_pasta  (
			SELECT 	  p.nr_sequencia
			FROM	  prontuario_item_pasta p
			WHERE	  p.nr_seq_pasta  (
				SELECT z.NR_sequencia
				FROM	prontuario_pasta z
				WHERE	z.nr_seq_pasta_superior  (obter_seq_pasta_superior(OLD.nr_seq_item_pasta, 'P'))
			)
		)
	);

pragma autonomous_transaction;

BEGIN

if (TG_OP = 'DELETE') then
	open C01;
		loop
		fetch C01 into
			nr_pasta_filha_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			BEGIN

				if (coalesce(nr_pasta_filha_w, 0) > 0) then
					delete from perfil_item_pront_pasta where nr_sequencia = nr_pasta_filha_w;
					COMMIT;
				end if;

			end;
		end loop;
	close C01;

elsif (TG_OP = 'INSERT' or TG_OP = 'UPDATE') then

	select coalesce(obter_seq_pasta_superior(NEW.nr_seq_item_pasta, 'F'),0)
	into STRICT nr_seq_pasta_sup_w
	;

	if (nr_seq_pasta_sup_w > 0) then

		SELECT  COUNT(*)
		into STRICT	qt_registro_sup_w
		FROM 	perfil_item_pront_pasta a,
				PERFIL_ITEM_PRONT b
		WHERE	a.NR_SEQ_ITEM_PERFIL = b.nr_sequencia
		AND		b.nr_sequencia = NEW.NR_SEQ_ITEM_PERFIL
		AND		a.nr_sequencia IN (
				SELECT x.nr_sequencia
				FROM	perfil_item_pront_pasta x
				WHERE	x.nr_seq_item_pasta IN (
					SELECT 	  p.nr_sequencia
					FROM	  prontuario_item_pasta p
					WHERE	  p.nr_seq_pasta IN (nr_seq_pasta_sup_w))
		);

		if (qt_registro_sup_w = 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(449071);
		end if;
	end if;

end if;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_perfil_item_pront_pasta_atual() FROM PUBLIC;

CREATE TRIGGER perfil_item_pront_pasta_atual
	BEFORE INSERT OR UPDATE OR DELETE ON perfil_item_pront_pasta FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_perfil_item_pront_pasta_atual();

