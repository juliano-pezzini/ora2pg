-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS prescr_material_aft_upd ON prescr_material CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_prescr_material_aft_upd() RETURNS trigger AS $BODY$
declare
ds_param_integration_w varchar(1000);
ds_stack	varchar(4000);
is_order_cancelled_inpatient_w  bigint;
ie_transmit_special_order_w varchar(2);
is_type_of_prescription	 varchar(10);
ie_limpar_data_w			varchar(5);

BEGIN
ds_stack := substr(dbms_utility.format_call_stack,1,4000);

select
         count(*)
         into STRICT is_order_cancelled_inpatient_w
          from  
                cpoe_material     c,
                cpoe_order_unit   a,
                cpoe_tipo_pedido  cp,	
                cpoe_rp           d
        where   c.nr_sequencia                  = NEW.NR_SEQ_MAT_CPOE
                and a.nr_seq_cpoe_tipo_pedido   = cp.nr_sequencia
                and c.nr_seq_cpoe_order_unit    = a.nr_sequencia
                and  d.nr_sequencia             = c.nr_seq_cpoe_rp
                and a.si_type_of_prescription in ('INPR','INPT','INPI','INPAT','INPDP','BRME','OPIHO','OPOOH')
                and cp.nr_seq_sub_grp  ='ME';

 select  is_special_order_rule('ME','A',wheb_usuario_pck.get_cd_estabelecimento)
  into STRICT    ie_transmit_special_order_w
;


if (wheb_usuario_pck.get_ie_executar_trigger    = 'S')  then
  if ((coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'ja_JP') and ie_transmit_special_order_w = 'S') then
    is_type_of_prescription := 'ME';
	if (coalesce(OLD.ie_suspenso,'N') = 'N') and (NEW.ie_suspenso = 'S') and is_order_cancelled_inpatient_w > 0  then
          ds_param_integration_w := '{"recordId" : "' || NEW.nr_prescricao || '"' || ',
             "typePrescription" : "' || is_type_of_prescription || '"}';

         CALL execute_bifrost_integration(280, ds_param_integration_w); -- Inpatient Prescription
	end if;

  end if;
 end if;

if (coalesce(NEW.cd_local_estoque,0) > 0) and (coalesce(NEW.cd_local_estoque,0) <> coalesce(OLD.cd_local_estoque,0)) then
	BEGIN
	ie_limpar_data_w := wheb_assist_pck.obterValorParametroREP(815, ie_limpar_data_w);
	if (ie_limpar_data_w = 'S') then
		delete	FROM Prescr_emissao_local
		where	cd_local_estoque	= NEW.cd_local_estoque
		and		nr_prescricao		= NEW.nr_prescricao;

		update	prescr_medica
		set		dt_emissao_farmacia	 = NULL
		where	nr_prescricao		= NEW.nr_prescricao;
	end if;
	end;
end if;


RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_prescr_material_aft_upd() FROM PUBLIC;

CREATE TRIGGER prescr_material_aft_upd
	AFTER UPDATE ON prescr_material FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_prescr_material_aft_upd();

