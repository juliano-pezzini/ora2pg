-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS nota_fiscal_afterinsert ON nota_fiscal CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_nota_fiscal_afterinsert() RETURNS trigger AS $BODY$
declare

qt_existe_w			bigint;
qt_registro_w			bigint;
ie_tipo_frete_w			regra_padrao_tipo_nf.ie_tipo_frete%type;
cd_cnpj_transportador_w		pessoa_juridica.cd_cgc%type;

C01 CURSOR FOR
	SELECT	cd_cnpj_transportador,
		ie_tipo_frete
	from	regra_padrao_tipo_nf
	where	coalesce(cd_estabelecimento,NEW.cd_estabelecimento) = NEW.cd_estabelecimento
	and	((ie_entrada = 'S' AND NEW.ie_tipo_nota = 'EN') or
		(ie_complementar = 'S' AND NEW.ie_tipo_nota = 'NC') or
		(ie_entrada_pf = 'S' AND NEW.ie_tipo_nota = 'EF') or
		(ie_entrada_ep = 'S' AND NEW.ie_tipo_nota = 'EP') or
		(ie_saida_pf = 'S' AND NEW.ie_tipo_nota = 'SF') or
		(ie_saida_digitacao = 'S' AND NEW.ie_tipo_nota = 'SD') or
		(ie_saida_emissao = 'S' AND NEW.ie_tipo_nota = 'SE'))
	and	not exists (	SELECT	1
				from	nota_fiscal_transportadora
				where	nr_sequencia = NEW.nr_sequencia);

BEGIN

if (coalesce(wheb_usuario_pck.get_ie_executar_trigger, 'S') = 'S')  then

	open C01;
	loop
	fetch C01 into	
		cd_cnpj_transportador_w,
		ie_tipo_frete_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN
		if (coalesce(cd_cnpj_transportador_w, '0') <> '0') then
		
			insert into nota_fiscal_transportadora(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario, 
				nr_seq_nota, 
				cd_cnpj,
				ie_tipo_frete)
			values (	nextval('nota_fiscal_transportadora_seq'),
				LOCALTIMESTAMP,
				NEW.nm_usuario,
				NEW.nr_sequencia,
				cd_cnpj_transportador_w,
				ie_tipo_frete_w);
		end if;
		end;
	end loop;
	close C01;

end if;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_nota_fiscal_afterinsert() FROM PUBLIC;

CREATE TRIGGER nota_fiscal_afterinsert
	AFTER INSERT ON nota_fiscal FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_nota_fiscal_afterinsert();

