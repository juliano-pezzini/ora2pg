-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS cpoe_trev_elem_ins_upd_after ON cpoe_trev_elem CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_cpoe_trev_elem_ins_upd_after() RETURNS trigger AS $BODY$
declare

ds_stack_w		varchar(2000);
ds_log_cpoe_w	varchar(2000);
BEGIN
  BEGIN
	if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then

		if (coalesce(NEW.cd_unidade_med_elem,'XPTO') <> coalesce(OLD.cd_unidade_med_elem,'XPTO')) then
			ds_log_cpoe_w := substr(ds_log_cpoe_w || ' cd_unidade_med_elem(' || coalesce(OLD.cd_unidade_med_elem,'<NULL>') || '/' || coalesce(NEW.cd_unidade_med_elem,'<NULL>')||'); ',1,2000);
		end if;
		
		if (coalesce(NEW.cd_unidade_medida,'XPTO') <> coalesce(OLD.cd_unidade_medida,'XPTO')) then
			ds_log_cpoe_w := substr(ds_log_cpoe_w || ' cd_unidade_medida(' || coalesce(OLD.cd_unidade_medida,'<NULL>') || '/' || coalesce(NEW.cd_unidade_medida,'<NULL>')||'); ',1,2000);
		end if;	

		if (coalesce(NEW.ie_unidade_ped_calc,'XPTO') <> coalesce(OLD.ie_unidade_ped_calc,'XPTO')) then
			ds_log_cpoe_w := substr(ds_log_cpoe_w || ' ie_unidade_ped_calc(' || coalesce(OLD.ie_unidade_ped_calc,'<NULL>') || '/' || coalesce(NEW.ie_unidade_ped_calc,'<NULL>')||'); ',1,2000);
		end if;

		if (coalesce(NEW.nr_seq_cpoe_trev,0) <> coalesce(OLD.nr_seq_cpoe_trev,0)) then
			ds_log_cpoe_w := substr(ds_log_cpoe_w || ' nr_seq_cpoe_trev(' || coalesce(OLD.nr_seq_cpoe_trev,0) || '/' || coalesce(NEW.nr_seq_cpoe_trev,0)||'); ',1,2000);
		end if;

		if (coalesce(NEW.nr_seq_elemento,0) <> coalesce(OLD.nr_seq_elemento,0)) then
			ds_log_cpoe_w := substr(ds_log_cpoe_w || ' nr_seq_elemento(' || coalesce(OLD.nr_seq_elemento,0) || '/' || coalesce(NEW.nr_seq_elemento,0)||'); ',1,2000);
		end if;

		if (coalesce(NEW.qt_diaria,0) <> coalesce(OLD.qt_diaria,0)) then
			ds_log_cpoe_w := substr(ds_log_cpoe_w || ' qt_diaria(' || coalesce(OLD.qt_diaria,0) || '/' || coalesce(NEW.qt_diaria,0)||'); ',1,2000);
		end if;

		if (coalesce(NEW.qt_elem_kg_dia,0) <> coalesce(OLD.qt_elem_kg_dia,0)) then
			ds_log_cpoe_w := substr(ds_log_cpoe_w || ' qt_elem_kg_dia(' || coalesce(OLD.qt_elem_kg_dia,0) || '/' || coalesce(NEW.qt_elem_kg_dia,0)||'); ',1,2000);
		end if;

		if (coalesce(NEW.qt_volume,0) <> coalesce(OLD.qt_volume,0)) then
			ds_log_cpoe_w := substr(ds_log_cpoe_w || ' qt_volume(' || coalesce(OLD.qt_volume,0) || '/' || coalesce(NEW.qt_volume,0)||'); ',1,2000);
		end if;

		if (coalesce(NEW.qt_volume_corrigido,0) <> coalesce(OLD.qt_volume_corrigido,0)) then
			ds_log_cpoe_w := substr(ds_log_cpoe_w || ' qt_volume_corrigido(' || coalesce(OLD.qt_volume_corrigido,0) || '/' || coalesce(NEW.qt_volume_corrigido,0)||'); ',1,2000);
		end if;

		if (coalesce(NEW.qt_volume_etapa,0) <> coalesce(OLD.qt_volume_etapa,0)) then
			ds_log_cpoe_w := substr(ds_log_cpoe_w || ' qt_volume_etapa(' || coalesce(OLD.qt_volume_etapa,0) || '/' || coalesce(NEW.qt_volume_etapa,0)||'); ',1,2000);
		end if;

		if (ds_log_cpoe_w is not null) then
			if (coalesce(OLD.nr_sequencia, 0) > 0) then
				ds_log_cpoe_w := substr('CPOE_TREV_ELEM Alteracoes(old/new)= NR_SEQUENCIA: ' || NEW.nr_sequencia || ds_log_cpoe_w,1,2000);
			else
				ds_log_cpoe_w := substr('CPOE_TREV_ELEM Criacao(old/new)= NR_SEQUENCIA: ' || NEW.nr_sequencia || ds_log_cpoe_w,1,2000);
			end if;
			
			ds_stack_w	:= substr(dbms_utility.format_call_stack,1,2000);
			ds_log_cpoe_w := substr(ds_log_cpoe_w ||' FUNCAO('||to_char(obter_funcao_ativa)||'); PERFIL('||to_char(obter_perfil_ativo)||')',1,2000);
			
			insert into log_cpoe(nr_sequencia, dt_atualizacao, nm_usuario, ds_log, ds_stack) values (nextval('log_cpoe_seq'), LOCALTIMESTAMP, NEW.nm_usuario, ds_log_cpoe_w, ds_stack_w);
		end if;

	end if;

exception
	when others then
		ds_stack_w	:= substr(dbms_utility.format_call_stack,1,2000);

		insert into log_cpoe(nr_sequencia,
							dt_atualizacao, 
							nm_usuario, 
							ds_log, 
							ds_stack) 
		values (			nextval('log_cpoe_seq'), 
							LOCALTIMESTAMP, 
							NEW.nm_usuario, 
							'EXCEPTION CPOE_TREV_ELEM_INS_UPD_AFTER', 
							ds_stack_w);
  END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_cpoe_trev_elem_ins_upd_after() FROM PUBLIC;

CREATE TRIGGER cpoe_trev_elem_ins_upd_after
	AFTER INSERT OR UPDATE ON cpoe_trev_elem FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_cpoe_trev_elem_ins_upd_after();

