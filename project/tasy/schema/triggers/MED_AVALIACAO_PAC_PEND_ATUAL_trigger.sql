-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS med_avaliacao_pac_pend_atual ON med_avaliacao_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_med_avaliacao_pac_pend_atual() RETURNS trigger AS $BODY$
declare

qt_reg_w			smallint;
ie_tipo_w			varchar(10);
nm_usuario_w	varchar(15);
ie_gerar_autor_aval_w varchar(2);

BEGIN

ie_gerar_autor_aval_w := obter_param_usuario(281, 1605, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_gerar_autor_aval_w);

if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

if (NEW.dt_liberacao is null) then

	if (coalesce(NEW.IE_AVALIADOR_AUX,'N') = 'S') and (NEW.DT_LIBERACAO_AUX is not null)then
	
		select 	obter_usuario_pf(NEW.cd_medico)
		into STRICT	nm_usuario_w
		;		
		
		Update  pep_item_pendente
		set		nm_usuario = nm_usuario_w
		where	NR_SEQ_AVALIACAO = NEW.nr_sequencia;		
	end if;

	ie_tipo_w := 'AV';
elsif (OLD.dt_liberacao is null) and (NEW.dt_liberacao is not null) then	
	ie_tipo_w := 'XAV';
end if;

	if (ie_tipo_w	is not null) then
		BEGIN
      CALL Gerar_registro_pendente_PEP( cd_tipo_registro_p => ie_tipo_w,
        nr_sequencia_registro_p => NEW.nr_sequencia,
        cd_pessoa_fisica_p => obter_pessoa_atendimento(NEW.nr_atendimento,'C'),
        nr_atendimento_p => NEW.nr_atendimento,
        nm_usuario_p => NEW.nm_usuario,
        nr_seq_item_pront_p => NEW.nr_seq_item_pront,
        nr_atend_cons_pepa_p => NEW.nr_seq_atend_cons_pepa);
										
			if (coalesce(ie_gerar_autor_aval_w,'N') = 'S') and (Obter_Funcao_Ativa = 281) Then
				CALL Gerar_Avaliacao_Autorizacao(NEW.nr_sequencia, NEW.NR_SEQ_TIPO_AVALIACAO, NEW.nr_atendimento, NEW.dt_avaliacao, NEW.DT_LIBERACAO, NEW.nm_usuario_lib, NEW.ie_situacao, NEW.NM_USUARIO_INATIVACAO ,NEW.DT_INATIVACAO);
			end if;
		end;
	end if;


<<Final>>
qt_reg_w	:= 0;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_med_avaliacao_pac_pend_atual() FROM PUBLIC;

CREATE TRIGGER med_avaliacao_pac_pend_atual
	AFTER INSERT OR UPDATE ON med_avaliacao_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_med_avaliacao_pac_pend_atual();

