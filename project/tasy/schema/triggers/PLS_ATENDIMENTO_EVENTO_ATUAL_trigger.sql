-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pls_atendimento_evento_atual ON pls_atendimento_evento CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pls_atendimento_evento_atual() RETURNS trigger AS $BODY$
declare
ds_historico_w			varchar(4000)	:= 'X';
nm_evento_new_w			varchar(255);
nm_evento_old_w			varchar(255);
nr_seq_tipo_historico_w		pls_tipo_historico_atend.nr_sequencia%type;

BEGIN
select	max(nr_sequencia)
into STRICT	nr_seq_tipo_historico_w
from	pls_tipo_historico_atend
where	ie_gerado_sistema	= 'S'
and	ie_situacao		= 'A';

if (coalesce(nr_seq_tipo_historico_w,0)	> 0) then
	if (TG_OP = 'INSERT') then
		select	ds_valor_dominio
		into STRICT	ds_historico_w
		from	valor_dominio
		where	cd_dominio	= 3394
		and	vl_dominio	= '2' --Novo evento
		and	ie_situacao	= 'A';

		select	nm_evento
		into STRICT	nm_evento_new_w
		from	pls_evento_ocorrencia
		where   nr_sequencia 	= NEW.nr_seq_evento;

		ds_historico_w	:= ds_historico_w||': '||nm_evento_new_w;
	elsif (TG_OP = 'UPDATE') then
		if (coalesce(OLD.nr_seq_evento, 0) <> coalesce(NEW.nr_seq_evento, 0)) then
			select	ds_valor_dominio
			into STRICT	ds_historico_w
			from	valor_dominio
			where	cd_dominio	= 3394
			and	vl_dominio	= '12' --Alteração de evento
			and	ie_situacao	= 'A';

			select	nm_evento
			into STRICT	nm_evento_new_w
			from	pls_evento_ocorrencia
			where   nr_sequencia 	= NEW.nr_seq_evento;

			select	nm_evento
			into STRICT	nm_evento_old_w
			from	pls_evento_ocorrencia
			where   nr_sequencia 	= OLD.nr_seq_evento;

			ds_historico_w	:= ds_historico_w||': o evento '||nm_evento_old_w||' foi alterado para '||nm_evento_new_w;
		end if;
	end if;
	if (ds_historico_w <> 'X') then
		insert	into	pls_atendimento_historico(	nr_sequencia, nr_seq_atendimento, ds_historico_long,
								dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
								nm_usuario_nrec, nr_seq_tipo_historico, dt_historico,
								ie_origem_historico, ie_gerado_sistema)
			values (	nextval('pls_atendimento_historico_seq'), NEW.nr_seq_atendimento, ds_historico_w,
								LOCALTIMESTAMP, NEW.nm_usuario, LOCALTIMESTAMP,
								NEW.nm_usuario, nr_seq_tipo_historico_w, NEW.dt_atualizacao,
								'12', 'S');
	end if;
end if;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pls_atendimento_evento_atual() FROM PUBLIC;

CREATE TRIGGER pls_atendimento_evento_atual
	AFTER INSERT OR UPDATE ON pls_atendimento_evento FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pls_atendimento_evento_atual();

