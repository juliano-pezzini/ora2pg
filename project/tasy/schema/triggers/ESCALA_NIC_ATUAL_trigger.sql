-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS escala_nic_atual ON escala_nic CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_escala_nic_atual() RETURNS trigger AS $BODY$
declare
  sql_w varchar(300);
  ds_erro_w      varchar(4000);
  ds_parametro_w varchar(4000);
BEGIN
  BEGIN
  if (wheb_usuario_pck.get_ie_executar_trigger = 'S')  then
      BEGIN
          sql_w := 'begin prd_obter_escala_nic_md(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14); end;';

          EXECUTE sql_w using in NEW.ie_pa_max, in NEW.ie_balao_aortico, in NEW.ie_insuf_card,
                                        in NEW.ie_idade, in NEW.ie_anemia, in NEW.ie_diabete,
                                        in NEW.ie_creatinina_serica_maior, in NEW.ie_creatinia,
                                        in NEW.qt_clearence_creatinina, in NEW.qt_creatinina_serica,
                                        in NEW.qt_contraste,
                                        out NEW.qt_escore, out NEW.qt_risco_nic, out NEW.qt_risco_dialise;
      exception
          when others then
            NEW.qt_escore := null;
            NEW.qt_risco_nic := null;
            NEW.qt_risco_dialise := null;
            ds_erro_w := sqlerrm;
            ds_parametro_w := ':new.nr_atendimento: ' || NEW.nr_atendimento || ' - :new.cd_profissional: ' || NEW.cd_profissional;
            ds_parametro_w := ds_parametro_w || ' - :new.ie_pa_max: ' || NEW.ie_pa_max || ' - :new.ie_balao_aortico: ' || NEW.ie_balao_aortico || ' - :new.ie_insuf_card: ' || NEW.ie_insuf_card;
            ds_parametro_w := ds_parametro_w || ' - :new.ie_idade: ' || NEW.ie_idade || ' - :new.ie_anemia: ' || NEW.ie_anemia || ' - :new.ie_diabete: ' || NEW.ie_diabete || ' - :new.ie_creatinina_serica_maior: ' || NEW.ie_creatinina_serica_maior;
            ds_parametro_w := ds_parametro_w || ' - :new.ie_creatinia: ' || NEW.ie_creatinia || ' - :new.qt_clearence_creatinina: ' || NEW.qt_clearence_creatinina || ' - :new.qt_creatinina_serica: ' || NEW.qt_creatinina_serica || ' - :new.qt_contraste: ' || NEW.qt_contraste;
            ds_parametro_w := ds_parametro_w || ' - :new.qt_escore: ' || NEW.qt_escore || ' - :new.qt_risco_nic: ' || NEW.qt_risco_nic || ' - :new.qt_risco_dialise: ' || NEW.qt_risco_dialise;
            CALL gravar_log_medical_device('ESCALA_NIC_ATUAL', 'PRD_OBTER_ESCALA_NIC_MD', ds_parametro_w, ds_erro_w, wheb_usuario_pck.get_nm_usuario, 'N');
      end;
  end if;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_escala_nic_atual() FROM PUBLIC;

CREATE TRIGGER escala_nic_atual
	BEFORE INSERT OR UPDATE ON escala_nic FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_escala_nic_atual();

