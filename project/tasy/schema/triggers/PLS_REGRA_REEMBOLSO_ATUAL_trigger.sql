-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pls_regra_reembolso_atual ON pls_regra_reembolso CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pls_regra_reembolso_atual() RETURNS trigger AS $BODY$
declare
 
BEGIN 
--caso seja adicionado uma data ao dt_fim_vigencia da regra 
if	(OLD.dt_fim_vigencia is null AND NEW.dt_fim_vigencia is not null) then	 
	--faz update na ação regra para a mesma dt_fim_vigencia da regra onde o dt_fim_vigencia for nulo 
	update	pls_regra_reemb_acao 
	set	dt_fim_vigencia = NEW.dt_fim_vigencia 
	where	nr_seq_regra	= NEW.nr_sequencia 
	and	dt_fim_vigencia is null;
-- caso limpe a data de vigencia da regra 
elsif (NEW.dt_fim_vigencia is null) and (OLD.dt_fim_vigencia is not null) then 
	--caso a data de vigencia anterior for retroativa à data atual impede a alteração 
	if (OLD.dt_fim_vigencia < trunc(LOCALTIMESTAMP)) then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(385145); --Não é permitido alterar a data fim de vigência de regras com data fim de vigência retroativa à data atual. 
	else
		--faz o update na ação regra onde a dt_fim_vigencia for igual a dt_fim_vigencia anterior 
		update	pls_regra_reemb_acao 
		set	dt_fim_vigencia  = NULL 
		where	nr_seq_regra	= NEW.nr_sequencia 
		and	dt_fim_vigencia = OLD.dt_fim_vigencia;
	end if;
--caso altere a data de vigencia da regra 
elsif (OLD.dt_fim_vigencia <> NEW.dt_fim_vigencia) then 
	--caso a data de vigencia anterior for retroativa à data atual impede a alteração 
	if (OLD.dt_fim_vigencia < trunc(LOCALTIMESTAMP)) then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(385145); --Não é permitido alterar a data fim de vigência de regras com data fim de vigência retroativa à data atual. 
	else
		--faz update na ação regra onde a data fim de vigencia for igual a data fim de vigencia anterior 
		update	pls_regra_reemb_acao 
		set	dt_fim_vigencia = NEW.dt_fim_vigencia 
		where	nr_seq_regra	= NEW.nr_sequencia 
		and	dt_fim_vigencia = OLD.dt_fim_vigencia;
	end if;
end if;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pls_regra_reembolso_atual() FROM PUBLIC;

CREATE TRIGGER pls_regra_reembolso_atual
	BEFORE INSERT OR UPDATE ON pls_regra_reembolso FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pls_regra_reembolso_atual();

