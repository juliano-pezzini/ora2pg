-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS material_autor_cir_cot_tp ON material_autor_cir_cot CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_material_autor_cir_cot_tp() RETURNS trigger AS $BODY$
DECLARE

nr_seq_w bigint;
ds_s_w   varchar(50);
ds_c_w   varchar(500);
ds_w	   varchar(500);
ie_log_w varchar(1);
BEGIN
  BEGIN 

BEGIN 

ds_s_w := to_char(OLD.NR_SEQUENCIA);
ds_c_w := null;

ds_w:=substr(NEW.CD_CGC,1,500);
SELECT * FROM gravar_log_alteracao(substr(OLD.CD_CGC,1,4000), substr(NEW.CD_CGC,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_CGC', ie_log_w, ds_w, 'MATERIAL_AUTOR_CIR_COT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;

ds_w:=substr(NEW.IE_APROVACAO,1,500);
SELECT * FROM gravar_log_alteracao(substr(OLD.IE_APROVACAO,1,4000), substr(NEW.IE_APROVACAO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_APROVACAO', ie_log_w, ds_w, 'MATERIAL_AUTOR_CIR_COT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;

ds_w:=substr(NEW.NR_SEQ_MARCA,1,500);
SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQ_MARCA,1,4000), substr(NEW.NR_SEQ_MARCA,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQ_MARCA', ie_log_w, ds_w, 'MATERIAL_AUTOR_CIR_COT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;

ds_w:=substr(NEW.NR_ORCAMENTO,1,500);
SELECT * FROM gravar_log_alteracao(substr(OLD.NR_ORCAMENTO,1,4000), substr(NEW.NR_ORCAMENTO,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_ORCAMENTO', ie_log_w, ds_w, 'MATERIAL_AUTOR_CIR_COT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;

ds_w:=substr(NEW.VL_COTADO,1,500);
SELECT * FROM gravar_log_alteracao(substr(OLD.VL_COTADO,1,4000), substr(NEW.VL_COTADO,1,4000), NEW.nm_usuario, nr_seq_w, 'VL_COTADO', ie_log_w, ds_w, 'MATERIAL_AUTOR_CIR_COT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;

ds_w:=substr(NEW.CD_CONDICAO_PAGAMENTO,1,500);
SELECT * FROM gravar_log_alteracao(substr(OLD.CD_CONDICAO_PAGAMENTO,1,4000), substr(NEW.CD_CONDICAO_PAGAMENTO,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_CONDICAO_PAGAMENTO', ie_log_w, ds_w, 'MATERIAL_AUTOR_CIR_COT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;

ds_w:=substr(NEW.DT_ATUALIZACAO,1,500);
SELECT * FROM gravar_log_alteracao(substr(OLD.DT_ATUALIZACAO,1,4000), substr(NEW.DT_ATUALIZACAO,1,4000), NEW.nm_usuario, nr_seq_w, 'DT_ATUALIZACAO', ie_log_w, ds_w, 'MATERIAL_AUTOR_CIR_COT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;

ds_w:=substr(NEW.NM_USUARIO,1,500);
SELECT * FROM gravar_log_alteracao(substr(OLD.NM_USUARIO,1,4000), substr(NEW.NM_USUARIO,1,4000), NEW.nm_usuario, nr_seq_w, 'NM_USUARIO', ie_log_w, ds_w, 'MATERIAL_AUTOR_CIR_COT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;

ds_w:=substr(NEW.VL_UNITARIO_COTADO,1,500);
SELECT * FROM gravar_log_alteracao(substr(OLD.VL_UNITARIO_COTADO,1,4000), substr(NEW.VL_UNITARIO_COTADO,1,4000), NEW.nm_usuario, nr_seq_w, 'VL_UNITARIO_COTADO', ie_log_w, ds_w, 'MATERIAL_AUTOR_CIR_COT', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;

exception when others then 
ds_w:= '1';
end;
  END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_material_autor_cir_cot_tp() FROM PUBLIC;

CREATE TRIGGER material_autor_cir_cot_tp
	AFTER UPDATE ON material_autor_cir_cot FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_material_autor_cir_cot_tp();

