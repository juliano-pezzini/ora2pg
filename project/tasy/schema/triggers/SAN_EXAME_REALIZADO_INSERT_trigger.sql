-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS san_exame_realizado_insert ON san_exame_realizado CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_san_exame_realizado_insert() RETURNS trigger AS $BODY$
declare

ie_situacao_w		varchar(1);
ie_fator_rh_w		varchar(1);
ie_tipo_sangue_w	varchar(1);
nr_seq_reserva_w	bigint;
nr_seq_transfusao_w	bigint;
cd_pessoa_fisica_w	varchar(10) := 'X';
ie_origem_w		varchar(1);
nr_seq_res_prod_w	bigint;
ds_resultado_w		varchar(255);
ie_verifica_liberacao_w	varchar(1);
ie_atualiza_nulo_w	varchar(1);
nr_sequencia_w		bigint;
ie_tipo_sangue_pf_w	varchar(2);
ie_subgrupo_abo_w	san_exame.ie_subgrupo_abo%type;
ds_result_sub_abo_w	san_exame_realizado.ds_resultado%type;
nr_seq_subgrupo_w	subtipo_sanguineo.nr_sequencia%type;
BEGIN
  BEGIN

ie_verifica_liberacao_w := Obter_Param_Usuario(450, 334, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_verifica_liberacao_w);

select	coalesce(max(ie_situacao),'A')
into STRICT	ie_situacao_w
from	san_exame
where	nr_sequencia = NEW.nr_seq_exame;

if (ie_situacao_w <> 'A') then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(245062);
end if;

select	coalesce(max(nr_seq_reserva),0),
	coalesce(max(nr_seq_transfusao),0),
	coalesce(max(ie_origem),'X'),
	coalesce(max(NR_SEQ_RES_PROD),0)
into STRICT	nr_seq_reserva_w,
	nr_seq_transfusao_w,
	ie_origem_w,
	nr_seq_res_prod_w
from 	san_exame_lote
where 	nr_sequencia = NEW.nr_seq_exame_lote;

if (nr_seq_res_prod_w > 0) then
	select 	coalesce(max(nr_seq_reserva),0)
	into STRICT	nr_seq_reserva_w
	from	san_reserva_prod
	where	nr_sequencia = nr_seq_res_prod_w;
end if;

select 	coalesce(max(ie_atualiza_nulo),'N')
into STRICT	ie_atualiza_nulo_w
from	san_parametro
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

select	max(ie_tipo_sangue),
	max(ie_fator_rh),
	max(ie_subgrupo_abo)
into STRICT	ie_tipo_sangue_w,
	ie_fator_rh_w,
	ie_subgrupo_abo_w
from 	san_exame
where 	nr_sequencia = NEW.nr_seq_exame;

if ((nr_seq_transfusao_w <> 0) or (nr_seq_reserva_w <> 0) and (nr_seq_res_prod_w = 0)) and (ie_origem_w in ('R','T','X')) and
   ((ie_tipo_sangue_w = 'S') or (ie_fator_rh_w = 'S') or (ie_subgrupo_abo_w = 'S')) then
	if (nr_seq_transfusao_w <> 0) then
		select 	cd_pessoa_fisica
		into STRICT 	cd_pessoa_fisica_w
		from 	san_transfusao
		where 	nr_sequencia = nr_seq_transfusao_w;
	elsif (nr_seq_reserva_w <> 0) then
		select 	cd_pessoa_fisica
		into STRICT 	cd_pessoa_fisica_w
		from 	san_reserva
		where 	nr_sequencia = nr_seq_reserva_w;
	end if;

	if (cd_pessoa_fisica_w <> 'X') then
		BEGIN
			ds_resultado_w	:= NEW.ds_resultado;
			--Os273189 clicente utiliza no o dominío Positivo/Negativo
			if (ie_fator_rh_w = 'S') then
				if (ds_resultado_w = 'Negativo') or (ds_resultado_w = 'NEG') then
					ds_resultado_w := '-';
				elsif (ds_resultado_w = 'POS') or (ds_resultado_w = 'Positivo') then
					ds_resultado_w := '+';
				elsif (ie_atualiza_nulo_w = 'S') and (ds_resultado_w <> '+') and (ds_resultado_w <> '-') then
					ds_resultado_w := '';
				end if;
			end if;

			ie_tipo_sangue_pf_w := NEW.ds_resultado;
			if (ie_tipo_sangue_w = 'S') then
				if (NEW.ds_resultado in ('A','B','AB','O')) then
					ie_tipo_sangue_pf_w := NEW.ds_resultado;
				elsif (ie_atualiza_nulo_w = 'S') then
					ie_tipo_sangue_pf_w := '';
				end if;
			end if;

			--Atualiza o subgrupo ABO do cadastro do paciente. Os subgrupos possíveis estão listados na consistência
			ds_result_sub_abo_w := NEW.ds_resultado;
			if (ie_subgrupo_abo_w = 'S') then
				select	max(nr_sequencia)
				into STRICT	nr_seq_subgrupo_w
				from	subtipo_sanguineo
				where	ds_subtipo = substr(ds_result_sub_abo_w, 1, 20);
			end if;

			if (NEW.ds_resultado is not null) and
				((ie_verifica_liberacao_w = 'S' AND NEW.dt_liberacao is not null) or (ie_verifica_liberacao_w = 'N')) then
			update 	pessoa_fisica
			set 	ie_tipo_sangue = CASE WHEN ie_tipo_sangue_w='S' THEN  ie_tipo_sangue_pf_w  ELSE ie_tipo_sangue END ,
				ie_fator_rh = CASE WHEN ie_fator_rh_w='S' THEN  ds_resultado_w  ELSE ie_fator_rh END ,
				ie_subtipo_sanguineo = CASE WHEN ie_subgrupo_abo_w='S' THEN  nr_seq_subgrupo_w  ELSE ie_subtipo_sanguineo END
			where 	cd_pessoa_fisica = cd_pessoa_fisica_w;
			end if;
		exception
		when others then
			cd_pessoa_fisica_w := 'X';
		end;

	end if;
end if;

  END;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_san_exame_realizado_insert() FROM PUBLIC;

CREATE TRIGGER san_exame_realizado_insert
	BEFORE INSERT ON san_exame_realizado FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_san_exame_realizado_insert();

