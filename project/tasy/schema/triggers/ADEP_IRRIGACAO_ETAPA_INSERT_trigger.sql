-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS adep_irrigacao_etapa_insert ON adep_irrigacao_etapa CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_adep_irrigacao_etapa_insert() RETURNS trigger AS $BODY$
DECLARE

cd_setor_atendimento_w		bigint;
nr_seq_atend_w			bigint;
nr_seq_tipo_w			bigint;
nr_prescricao_w			bigint;
nr_atendimento_w		bigint;
ie_perda_ganho_w		varchar(5);
ie_evento_w				prescr_ivc_perda_ganho.ie_evento%type;
qt_volume_real_w		bigint;
qt_volume_real_ww		bigint;

C01 CURSOR FOR
SELECT	nr_seq_tipo,
		ie_evento
from	prescr_ivc_perda_ganho
where	ie_evento		= NEW.ie_evento

union

SELECT	nr_seq_tipo,
		ie_evento
from	prescr_ivc_perda_ganho
where	NEW.ie_evento = 'R'
and		ie_evento in ('RBP', 'RBG');

BEGIN

select	max(a.nr_atendimento),
		max(a.nr_prescricao)
into STRICT	nr_atendimento_w,
		nr_prescricao_w
from	adep_irrigacao 	a
where	a.nr_sequencia = NEW.nr_seq_irrigacao;

select	max(cd_setor_atendimento)
into STRICT	cd_setor_atendimento_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_w;

if (cd_setor_atendimento_w is null) then
	BEGIN
	select	Obter_Setor_Atendimento(nr_atendimento_w)
	into STRICT	cd_setor_atendimento_w
	;
	end;
end if;

qt_volume_real_w	:= coalesce(NEW.qt_infusao,0) - coalesce(NEW.qt_drenagem,0);

open C01;
loop
fetch C01 into	
	nr_seq_tipo_w,
	ie_evento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	BEGIN
		
	if (nr_seq_tipo_w is not null) then

		select	max(b.ie_perda_ganho)
		into STRICT	ie_perda_ganho_w
		from	tipo_perda_ganho a,
				grupo_perda_ganho b
		where	a.ie_situacao = 'A'
		and		b.ie_situacao = 'A'
		and		b.nr_sequencia = a.nr_seq_grupo
		and		a.nr_sequencia	= nr_seq_tipo_w;
		
		select	nextval('atendimento_perda_ganho_seq')
		into STRICT	nr_seq_atend_w
		;
				
		if	(((ie_evento_w in ('RBP')) and (qt_volume_real_w < 0) and (ie_perda_ganho_w = 'P')) or
			 ((ie_evento_w in ('RBG')) and (qt_volume_real_w > 0) and (ie_perda_ganho_w = 'G'))) then
			 
			qt_volume_real_ww	:= qt_volume_real_w;
     		if (qt_volume_real_w < 0) then
				qt_volume_real_ww	:= qt_volume_real_w * -1;
			end if;
			
			insert into atendimento_perda_ganho(nr_sequencia,
				nr_atendimento,
				dt_atualizacao,
				nm_usuario,
				nr_seq_tipo,
				qt_volume,
				ds_observacao,
				dt_medida,
				cd_setor_atendimento,
				ie_origem,
				dt_referencia,
				cd_profissional,
				ie_situacao,
				dt_liberacao,
				dt_apap,
				qt_ocorrencia,
				nr_seq_evento_ivc
				)
			values (nr_seq_atend_w,
				nr_atendimento_w,
				LOCALTIMESTAMP,
				NEW.nm_usuario,
				nr_seq_tipo_w,
				qt_volume_real_ww,
				NEW.ds_observacao,
				NEW.dt_registro,
				cd_setor_atendimento_w,
				'S',
				LOCALTIMESTAMP,
				NEW.cd_pessoa_fisica,
				'A',
				LOCALTIMESTAMP,
				NEW.dt_registro,
				1,
				NEW.nr_sequencia);
				
		elsif (ie_evento_w not in ('RBP', 'RBG')) then
			if (ie_perda_ganho_w = 'G') and (coalesce(NEW.qt_infusao,0) > 0 ) then
			    insert into atendimento_perda_ganho(nr_sequencia,
					nr_atendimento,
					dt_atualizacao,
					nm_usuario,
					nr_seq_tipo,
					qt_volume,
					ds_observacao,
					dt_medida,
					cd_setor_atendimento,
					ie_origem,
					dt_referencia,
					cd_profissional,
					ie_situacao,
						dt_liberacao,
					dt_apap,
					qt_ocorrencia,
					nr_seq_evento_ivc
					)
				values (nr_seq_atend_w,
					nr_atendimento_w,
					LOCALTIMESTAMP,
					NEW.nm_usuario,
					nr_seq_tipo_w,
					NEW.qt_infusao,
					NEW.ds_observacao,
					NEW.dt_registro,
					cd_setor_atendimento_w,
					'S',
					LOCALTIMESTAMP,
					NEW.cd_pessoa_fisica,
					'A',
					LOCALTIMESTAMP,
					NEW.dt_registro,
					1,
					NEW.nr_sequencia);	
			elsif (ie_perda_ganho_w = 'P') and (coalesce(NEW.qt_drenagem,0) > 0) then
			    insert into atendimento_perda_ganho(nr_sequencia,
					nr_atendimento,
					dt_atualizacao,
					nm_usuario,
					nr_seq_tipo,
					qt_volume,
					ds_observacao,
					dt_medida,
					cd_setor_atendimento,
					ie_origem,
					dt_referencia,
					cd_profissional,
					ie_situacao,
					dt_liberacao,
					dt_apap,
					qt_ocorrencia,
					nr_seq_evento_ivc
					)
				values (nr_seq_atend_w,
					nr_atendimento_w,
					LOCALTIMESTAMP,
					NEW.nm_usuario,
					nr_seq_tipo_w,
					NEW.qt_drenagem,
					NEW.ds_observacao,
					NEW.dt_registro,
					cd_setor_atendimento_w,
					'S',
					LOCALTIMESTAMP,
					NEW.cd_pessoa_fisica,
					'A',
					LOCALTIMESTAMP,
					NEW.dt_registro,
					1,
					NEW.nr_sequencia);	
			end if;
		end if;
	end if;
	end;
end loop;
close C01;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_adep_irrigacao_etapa_insert() FROM PUBLIC;

CREATE TRIGGER adep_irrigacao_etapa_insert
	AFTER INSERT ON adep_irrigacao_etapa FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_adep_irrigacao_etapa_insert();

