-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS iscv_agenda_paciente_aftinsup ON agenda_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_iscv_agenda_paciente_aftinsup() RETURNS trigger AS $BODY$
declare

ds_sep_bv_w		varchar(100):= obter_separador_bv;

	/* Verifica se existe alguma integração cadastrada para o domínio 17, para certificar que há o que ser procurado, para aí então executar todas as verificações. */

	function permiteIntegrarISCV
	return boolean is
	qt_resultado_w	bigint;

	BEGIN
	select	count(*) qt_resultado
	into STRICT	qt_resultado_w
	from 	regra_proc_interno_integra
	where	ie_tipo_integracao = 17; --Dominio criado para a integração
	return qt_resultado_w > 0;
	end;

	function retornaAcaoHistorico(nr_sequencia_agenda_p number)
	return varchar is
		ds_retorno_w	agenda_historico_acao.IE_ACAO%type;
	BEGIN
		select	coalesce(max(IE_ACAO), ' ')
		into STRICT	ds_retorno_w
		from	agenda_historico_acao
		where	nr_Sequencia =  nr_sequencia_agenda_p;
	return	ds_retorno_w;
	end;

	function permiteProcInternoInteg(nr_sequencia_agenda_p number)
	return boolean is
	ds_retorno_w varchar2(1);
	BEGIN

	ds_retorno_w := Obter_Se_Integr_Proc_Interno(NEW.nr_seq_proc_interno ,17,null,NEW.ie_lado,wheb_usuario_pck.get_cd_estabelecimento);

	if (ds_retorno_w = 'N') then
		select	coalesce(max(ie_permite_proc_integ),'N') ie_permite_proc_integ
		into STRICT	ds_retorno_w
		from (
				SELECT	Obter_Se_Integr_Proc_Interno(nr_seq_proc_interno ,17,null,NEW.ie_lado,wheb_usuario_pck.get_cd_estabelecimento) ie_permite_proc_integ
				from	agenda_paciente_proc
				where	nr_sequencia =  nr_sequencia_agenda_p
				and		nr_seq_proc_interno is not null
			) alias4
		where	ie_permite_proc_integ = 'S';
	end if;

	return	ds_retorno_w = 'S';
	end;

BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger	= 'S')  then
	if	permiteIntegrarISCV
	and (permiteProcInternoInteg(NEW.nr_sequencia)) then

		if	TG_OP = 'INSERT' then
			if (NEW.cd_pessoa_fisica) is not null then
				CALL gravar_agend_integracao(741, 'nr_sequencia=' || NEW.nr_sequencia || ds_sep_bv_w || 'cd_pessoa_fisica=' || NEW.cd_pessoa_fisica || ds_sep_bv_w, NEW.cd_setor_atendimento);
			end if;
		elsif TG_OP = 'UPDATE' then
			if	(OLD.cd_pessoa_fisica is null AND NEW.cd_pessoa_fisica is not null)
			and	(OLD.nr_seq_proc_interno is null AND NEW.nr_seq_proc_interno is not null) then
				CALL gravar_agend_integracao(741, 'nr_sequencia=' || NEW.nr_sequencia || ds_sep_bv_w || 'cd_pessoa_fisica=' || NEW.cd_pessoa_fisica || ds_sep_bv_w, NEW.cd_setor_atendimento);
			end if;

			if (OLD.hr_inicio <> NEW.hr_inicio)
			or	((OLD.cd_pessoa_fisica is null) and (NEW.cd_pessoa_fisica is not null) and retornaAcaoHistorico(NEW.nr_sequencia) = 'T' )
			or (NEW.IE_TRANSFERIDO = 'S') then
				CALL gravar_agend_integracao(742, 'nr_sequencia=' || NEW.nr_sequencia || ds_sep_bv_w || 'cd_pessoa_fisica=' || NEW.cd_pessoa_fisica || ds_sep_bv_w, NEW.cd_setor_atendimento);
			end if;

			if (OLD.cd_pessoa_fisica is not null) and (NEW.cd_pessoa_fisica is not null)
			and	((OLD.hr_inicio <> NEW.hr_inicio)
			or (OLD.nr_minuto_duracao <> NEW.nr_minuto_duracao)
			or (OLD.cd_procedimento <> NEW.cd_procedimento)
			or (OLD.ie_origem_proced <> NEW.ie_origem_proced)
			or (OLD.nm_pessoa_contato <> NEW.nm_pessoa_contato)
			or (OLD.nm_usuario_orig <> NEW.nm_usuario_orig)) then
				CALL gravar_agend_integracao(743, 'nr_sequencia=' || NEW.nr_sequencia || ds_sep_bv_w || 'cd_pessoa_fisica=' || NEW.cd_pessoa_fisica || ds_sep_bv_w, NEW.cd_setor_atendimento);
			end if;

			if (OLD.dt_cancelamento is null) and (NEW.dt_cancelamento is not null) then
				CALL gravar_agend_integracao(744, 'nr_sequencia=' || NEW.nr_sequencia || ds_sep_bv_w || 'cd_pessoa_fisica=' || NEW.cd_pessoa_fisica || ds_sep_bv_w, NEW.cd_setor_atendimento);
			end if;

			if	(OLD.nr_atendimento is null AND NEW.nr_Atendimento is not null) then
				CALL gravar_agend_integracao(745, 'cd_pessoa_fisica=' || NEW.cd_pessoa_fisica || ds_sep_bv_w || 'nr_atendimento=' || NEW.nr_atendimento || ds_sep_bv_w, NEW.cd_setor_atendimento);
			end if;

		end if;
	end if;
end if;

RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_iscv_agenda_paciente_aftinsup() FROM PUBLIC;

CREATE TRIGGER iscv_agenda_paciente_aftinsup
	AFTER INSERT OR UPDATE ON agenda_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_iscv_agenda_paciente_aftinsup();

