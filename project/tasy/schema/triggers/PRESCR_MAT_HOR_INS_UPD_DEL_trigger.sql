-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS prescr_mat_hor_ins_upd_del ON prescr_mat_hor CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_prescr_mat_hor_ins_upd_del() RETURNS trigger AS $BODY$
declare
	cd_estabelecimento_w 		estabelecimento.cd_estabelecimento%type;
	cd_perfil_w					perfil.cd_perfil%type;
    nm_usuario_w    			usuario.nm_usuario%type;
	ie_ajustar_disp_w			varchar(255);
	ie_info_rastre_prescr_w		varchar(1);
	ds_alteracao_rastre_w		varchar(2000);
	qt_itens_lote_w				integer;
BEGIN
  BEGIN	
	cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;
	cd_perfil_w				:= obter_perfil_ativo;
	nm_usuario_w			:= wheb_usuario_pck.get_nm_usuario;

	ie_info_rastre_prescr_w := obter_se_info_rastre_prescr('L', nm_usuario_w, cd_perfil_w, cd_estabelecimento_w);
	
	if (ie_info_rastre_prescr_w = 'S') then
		ie_ajustar_disp_w := obter_param_usuario(924, 179, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_ajustar_disp_w);
				
		if (not TG_OP = 'DELETE') then
			if ((NEW.qt_dispensar_hor is null) or (ie_ajustar_disp_w <> 'N' and trunc(NEW.qt_dispensar_hor) <> NEW.qt_dispensar_hor) or (TG_OP = 'UPDATE' and coalesce(OLD.qt_dispensar_hor,-1) <> coalesce(NEW.qt_dispensar_hor,-1))) then
				ds_alteracao_rastre_w := substr(ds_alteracao_rastre_w || 'qt_dispensar_hor(',1,2000);
				
				if (TG_OP = 'UPDATE') then
					ds_alteracao_rastre_w := substr(ds_alteracao_rastre_w || to_char(OLD.qt_dispensar_hor) || '/',1,2000);
				end if;
				
				ds_alteracao_rastre_w := substr(ds_alteracao_rastre_w || to_char(NEW.qt_dispensar_hor) || '); ' || chr(13),1,2000);
			end if;
		else
			ds_alteracao_rastre_w := 'DELETE' || chr(13);
		end if;

		if (ds_alteracao_rastre_w is not null) then
			ds_alteracao_rastre_w := substr('Alteracoes / prescr_mat_hor_ins_upd_del = ' || chr(13) ||
				ds_alteracao_rastre_w ||
				'FUNCAO(' || to_char(obter_funcao_ativa) || '); ' ||
				'PERFIL(' || to_char(obter_perfil_ativo) || ')',1,2000);
			
			CALL gerar_log_prescricao(
				nr_prescricao_p		=> NEW.nr_prescricao,
				nr_seq_item_p		=> NEW.nr_seq_material,
				ie_agrupador_p		=> NEW.ie_agrupador,
				nr_seq_horario_p	=> NEW.nr_sequencia,
				ie_tipo_item_p		=> null,
				ds_log_p			=> ds_alteracao_rastre_w,
				nm_usuario_p		=> nm_usuario_w,
				nr_seq_objeto_p		=> 80667,
				ie_commit_p			=> 'N');
		end if;
	end if;
	
	if (TG_OP = 'DELETE') and (OLD.nr_seq_lote is not null) then
		
		CALL excluir_horario_lote_prescr(OLD.nr_seq_lote,OLD.nr_sequencia,coalesce(nm_usuario_w,OLD.nm_usuario));
	end if;
exception
when others then
	CALL gravar_log_tasy(88098, to_char(sqlerrm), nm_usuario_w);
  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_prescr_mat_hor_ins_upd_del() FROM PUBLIC;

CREATE TRIGGER prescr_mat_hor_ins_upd_del
	BEFORE INSERT OR UPDATE OR DELETE ON prescr_mat_hor FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_prescr_mat_hor_ins_upd_del();

