-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS nicu_encounter_afterins ON nicu_encounter CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_nicu_encounter_afterins() RETURNS trigger AS $BODY$
declare

nm_usuario_w				usuario.nm_usuario%type;
ds_usuario_w				usuario.ds_usuario%type 				:= 'NICU Parent';
cd_funcao_w					usuario.cd_funcao%type					:= 447;
cd_perfil_inicial_w			usuario.cd_perfil_inicial%type;
ie_situacao_w				usuario.ie_situacao%type 				:= 'I';
dt_atualizacao_w			usuario.dt_atualizacao%type 			:= LOCALTIMESTAMP;
nm_usuario_atual_w			usuario.nm_usuario_atual%type 			:= 'NICU_INTERFACE';
cd_estabelecimento_w		usuario.cd_estabelecimento%type;
qt_dia_senha_w				usuario.qt_dia_senha%type 				:= 180;
ie_anexar_arquivo_w			usuario.ie_anexar_arquivo%type 			:= 'N';
ie_comunic_interna_w		usuario.ie_comunic_interna%type 		:= 'N';
ie_versao_anterior_w		usuario.ie_versao_anterior%type 		:= 'S';
ie_evento_agenda_w			usuario.ie_evento_agenda%type 			:= 'N';
ie_evento_sac_w				usuario.ie_evento_sac%type 				:= 'N';
ie_evento_processo_w		usuario.ie_evento_processo%type 		:= 'N';
ie_evento_prescr_w			usuario.ie_evento_prescr%type 			:= 'N';
ie_evento_proc_agenda_w		usuario.ie_evento_proc_agenda%type 		:= 'N';
ie_evento_comunic_w			usuario.ie_evento_comunic%type 			:= 'N';
ie_evento_alerta_w			usuario.ie_evento_alerta%type 			:= 'N';
ie_evento_aprov_compra_w	usuario.ie_evento_aprov_compra%type 	:= 'N';
ie_evento_exame_urg_w		usuario.ie_evento_exame_urg%type 		:= 'N';
ie_evento_aprov_doc_w		usuario.ie_evento_aprov_doc%type 		:= 'N';
ie_fechar_tasymon_w			usuario.ie_fechar_tasymon%type 			:= 'S';
ie_evento_lib_telefone_w	usuario.ie_evento_lib_telefone%type 	:= 'N';
ie_mostrar_anexo_comunic_w	usuario.ie_mostrar_anexo_comunic%type 	:= 'N';
ie_evento_ordem_serv_w		usuario.ie_evento_ordem_serv%type 		:= 'N';
ie_evento_obj_inv_w			usuario.ie_evento_obj_inv%type 			:= 'N';
ie_evento_recoleta_w		usuario.ie_evento_recoleta%type 		:= 'N';
nm_usuario_pesquisa_w		usuario.nm_usuario_pesquisa%type 		:= 'N';
ds_locale_w					user_locale.ds_locale%type;
ds_calendar_w				user_locale.ds_calendar%type;
ie_locale_exists_w			varchar(1);
nr_seq_complete_w			user_guide_complete.nr_sequencia%type;

cGuides CURSOR FOR
	SELECT	a.nr_sequencia
	from 	user_guide a
	where 	a.ie_situacao = 'A'
	and not exists (	SELECT	1
						from 	user_guide_complete b
						where 	b.nr_seq_user_guide = a.nr_sequencia
						and 	b.nm_usuario = nm_usuario_w);

BEGIN

	if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then

		if (coalesce(NEW.id_location, 'XPTO') <> 'XPTO') then

			select	coalesce(max(e.cd_estabelecimento), 1)
			into STRICT	cd_estabelecimento_w
			from    unidade_atendimento u,
					setor_atendimento s,
					estabelecimento e
			where   e.cd_estabelecimento = s.cd_estabelecimento
			and     s.cd_setor_atendimento = u.cd_setor_atendimento
			and     u.nm_leito_integracao = NEW.id_location;

			select	coalesce(max(cd_parent_profile), 0)
			into STRICT	cd_perfil_inicial_w
			from 	nicu_settings;

			select	ds_locale,
					ds_calendar
			into STRICT	ds_locale_w,
					ds_calendar_w
			from 	establishment_locale
			where	cd_estabelecimento = cd_estabelecimento_w;

			CALL wheb_usuario_pck.set_nm_usuario(nm_usuario_atual_w);

			nm_usuario_w := NEW.id_visit_number;

			insert into usuario(
				nm_usuario,
				ds_usuario,
				cd_funcao,
				cd_perfil_inicial,
				ie_situacao,
				dt_atualizacao,
				nm_usuario_atual,
				cd_estabelecimento,
				qt_dia_senha,
				ie_anexar_arquivo,
				ie_comunic_interna,
				ie_versao_anterior,
				ie_evento_agenda,
				ie_evento_sac,
				ie_evento_processo,
				ie_evento_prescr,
				ie_evento_proc_agenda,
				ie_evento_comunic,
				ie_evento_alerta,
				ie_evento_aprov_compra,
				ie_evento_exame_urg,
				ie_evento_aprov_doc,
				ie_fechar_tasymon,
				ie_evento_lib_telefone,
				ie_mostrar_anexo_comunic,
				ie_evento_ordem_serv,
				ie_evento_obj_inv,
				ie_evento_recoleta,
				nm_usuario_pesquisa,
				id_visit_number)
			values (
				nm_usuario_w,
				ds_usuario_w,
				cd_funcao_w,
				cd_perfil_inicial_w,
				ie_situacao_w,
				dt_atualizacao_w,
				nm_usuario_atual_w,
				cd_estabelecimento_w,
				qt_dia_senha_w,
				ie_anexar_arquivo_w,
				ie_comunic_interna_w,
				ie_versao_anterior_w,
				ie_evento_agenda_w,
				ie_evento_sac_w,
				ie_evento_processo_w,
				ie_evento_prescr_w,
				ie_evento_proc_agenda_w,
				ie_evento_comunic_w,
				ie_evento_alerta_w,
				ie_evento_aprov_compra_w,
				ie_evento_exame_urg_w,
				ie_evento_aprov_doc_w,
				ie_fechar_tasymon_w,
				ie_evento_lib_telefone_w,
				ie_mostrar_anexo_comunic_w,
				ie_evento_ordem_serv_w,
				ie_evento_obj_inv_w,
				ie_evento_recoleta_w,
				nm_usuario_pesquisa_w,
				NEW.id_visit_number);

			insert into usuario_perfil(
				nm_usuario,
				cd_perfil,
				dt_atualizacao,
				nm_usuario_atual,
				dt_liberacao)
			values (
				nm_usuario_w,
				cd_perfil_inicial_w,
				LOCALTIMESTAMP,
				nm_usuario_atual_w,
				LOCALTIMESTAMP);

			select	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
			into STRICT	ie_locale_exists_w
			from 	user_locale
			where	nm_user = nm_usuario_w;

			if (ie_locale_exists_w = 'S') then

				update	user_locale
				set		ds_locale 	= ds_locale_w,
						ds_calendar = ds_calendar_w,
						ds_language	= ds_locale_w,
						ds_secondary_calendar = ds_calendar_w
				where	nm_user = nm_usuario_w;

			else

				insert into user_locale(
					nm_user,
					ds_locale,
					ds_calendar,
					ds_language,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					ds_secondary_calendar)
				values (
					nm_usuario_w,
					ds_locale_w,
					ds_calendar_w,
					ds_locale_w,
					nm_usuario_atual_w,
					LOCALTIMESTAMP,
					nm_usuario_atual_w,
					LOCALTIMESTAMP,
					ds_calendar_w);

			end if;

			select	coalesce(max(nr_sequencia), 0)
			into STRICT	nr_seq_complete_w
			from	user_guide_complete;

			for rGuide in cGuides loop
			BEGIN

				nr_seq_complete_w := nr_seq_complete_w + 1;

				insert into user_guide_complete(
					nr_sequencia,
                    nr_seq_user_guide,
                    nm_usuario,
                    dt_atualizacao,
                    nm_usuario_nrec,
                    dt_atualizacao_nrec)
				values (
					nr_seq_complete_w,
					rGuide.nr_sequencia,
					nm_usuario_w,
					LOCALTIMESTAMP,
					nm_usuario_atual_w,
					LOCALTIMESTAMP);

			end;
			end loop;

		end if;
	end if;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_nicu_encounter_afterins() FROM PUBLIC;

CREATE TRIGGER nicu_encounter_afterins
	AFTER INSERT ON nicu_encounter FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_nicu_encounter_afterins();

