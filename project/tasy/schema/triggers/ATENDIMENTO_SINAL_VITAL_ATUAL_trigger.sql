-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS atendimento_sinal_vital_atual ON atendimento_sinal_vital CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_atendimento_sinal_vital_atual() RETURNS trigger AS $BODY$
DECLARE

ds_hora_w	varchar(20);
dt_registro_w	timestamp;
dt_apap_w	timestamp;
qt_hora_w	double precision;
qt_reg_w	smallint;
cd_estabelecimento_w	smallint;
nr_seq_evento_w			bigint;
total_escore_alerta_w	bigint;
qt_idade_w		bigint;
cd_setor_paciente_w	bigint;
ds_alerta_modificado_w	varchar(512);
ds_retorno_w		varchar(4000);
ie_retorno_w		varchar(10);
ie_motivo_dor_inapto_w	varchar(1);
ds_Alerta_sinais_w	varchar(4000);
ie_setor_w		varchar(1);
cd_funcao_ativa_w	integer;
ie_sepse_lib_sv_w	varchar(1);
qt_horas_passado_sv_w	double precision;
cd_pessoa_fisica_w		atendimento_sinal_vital.cd_pessoa_fisica%type;
nr_atendimento_w		atendimento_sinal_vital.nr_atendimento%type;
nr_seq_triagem_w        atendimento_sinal_vital.nr_seq_triagem%type;


C01 CURSOR FOR
	SELECT	nr_seq_evento
	from 	regra_envio_sms
	where	cd_estabelecimento = cd_estabelecimento_w
	and	ie_evento_disp 	=	'APM'
	and	qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999)
	and	total_escore_alerta_w between coalesce(qt_pto_min,0)	and coalesce(qt_pto_max,9999)	
	and	coalesce(cd_setor_atendimento,cd_setor_paciente_w)	= cd_setor_paciente_w
	and	coalesce(ie_situacao,'A') = 'A';
	
C02 CURSOR FOR
	SELECT	nr_seq_evento
	from 	regra_envio_sms
	where	cd_estabelecimento = cd_estabelecimento_w
	and	ie_evento_disp 	=  'CSVR'
	and	qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999)
	and	coalesce(cd_setor_atendimento,cd_setor_paciente_w)	= cd_setor_paciente_w
	and	coalesce(ie_situacao,'A') = 'A';	
BEGIN
  BEGIN
cd_funcao_ativa_w := obter_funcao_ativa;
ie_setor_w := Obter_Param_Usuario(872, 485, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_setor_w);
ds_alerta_modificado_w	:= '';
qt_idade_w	:= coalesce(obter_idade_pf(NEW.CD_PACIENTE,LOCALTIMESTAMP,'A'),0);
NEW.ie_rn	:= coalesce(NEW.ie_rn,'N');

if (wheb_usuario_pck.get_ie_executar_trigger	<> 'N')  then

if (NEW.nr_seq_triagem is not null) then

  select max(nr_sequencia)
  into STRICT nr_seq_triagem_w
  from triagem_pronto_atend
  where cd_pessoa_fisica = NEW.cd_paciente
  and nr_sequencia = NEW.nr_seq_triagem;

  if (nr_seq_triagem_w is null) then

    select max(nr_sequencia)
    into STRICT nr_seq_triagem_w
    from triagem_pronto_atend
    where cd_pessoa_fisica = NEW.cd_paciente;

    NEW.nr_seq_triagem := nr_seq_triagem_w;

  end if;

end if;


-- Verificar se os valores das variaveis correspondem ao agendamento do paciente selecionado caso nao limpara as variaveis

if (NEW.nr_seq_agendamento is not null AND NEW.nr_tipo_agenda is not null) then
	
	if (NEW.nr_seq_agendamento = 0 AND NEW.nr_tipo_agenda = 0) then
		NEW.nr_seq_agendamento := null;
		NEW.nr_tipo_agenda := null;
	
	elsif (NEW.nr_tipo_agenda in (3, 5)) then
		
		select 	cd_pessoa_fisica,
				nr_atendimento
		into STRICT	cd_pessoa_fisica_w,
				nr_atendimento_w
		from	agenda_consulta
		where 	nr_sequencia = NEW.nr_seq_agendamento;
		
	elsif (NEW.nr_tipo_agenda in (1, 2)) then
		
		select  cd_pessoa_fisica,
				nr_atendimento
		into STRICT	cd_pessoa_fisica_w,
				nr_atendimento_w
		from    agenda_paciente
		where 	nr_sequencia = NEW.nr_seq_agendamento;
	
	end if;
	
	if (cd_pessoa_fisica_w is not null AND (nr_atendimento_w is null or nr_atendimento_w <> NEW.nr_atendimento)) then
		NEW.nr_seq_agendamento := null;
		NEW.nr_tipo_agenda := null;
	end if;

end if;


if (coalesce(OLD.dt_sinal_vital,LOCALTIMESTAMP + interval '10 days') <> NEW.dt_sinal_vital) and (NEW.dt_sinal_vital is not null) then
	NEW.ds_utc		:= obter_data_utc(NEW.dt_sinal_vital,'HV');
end if;

if (coalesce(OLD.DT_LIBERACAO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_LIBERACAO) and (NEW.DT_LIBERACAO is not null) then
	NEW.ds_utc_atualizacao	:= obter_data_utc(NEW.DT_LIBERACAO,'HV');
end if;

select 	max(ie_motivo_dor_inapto),
	coalesce(max(qt_horas_passado_sv),0)
into STRICT	ie_motivo_dor_inapto_w,
	qt_horas_passado_sv_w
from	parametro_medico
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

if 	(NEW.dt_liberacao is not null AND OLD.dt_liberacao is null) and ( ie_motivo_dor_inapto_w = 'S') and
	(NEW.cd_escala_dor = 'IA' AND NEW.nr_seq_inapto_dor is null)then
	-- E necessario informar o motivo do paciente estar inapto para a avaliacao da dor.

	CALL Wheb_mensagem_pck.exibir_mensagem_abort(264596);
end if;

if	(NEW.dt_liberacao is not null AND OLD.dt_liberacao is null) then
	 	
	 If (NEW.cd_escala_dor is null) then
	 
		NEW.nr_seq_result_dor  	:= null;
		NEW.nr_seq_topografia_dor 	:= null;
		NEW.ie_lado 			:= null;
		NEW.nr_seq_condicao_dor 	:= null;
		NEW.qt_escala_dor		:= null;
		NEW.nr_seq_inapto_dor		:= null;
		
		
	else
                    if NEW.cd_escala_dor = 'CFT' then      
                       update ESCALA_COMFORT_B
                       set  dt_liberacao = NEW.dt_liberacao
                       where nr_seq_sv = NEW.nr_sequencia;
                    end if;
               end  if;
	
	if (NEW.cd_escala_dor <> 'IA') and (NEW.cd_escala_dor is not null) and (NEW.qt_escala_dor is null) then
		-- E necessario informar a pontuacao da escala de dor selecionada.

		CALL Wheb_mensagem_pck.exibir_mensagem_abort(264598);
		
		/*:new.nr_seq_result_dor  	:= null;
		:new.nr_seq_topografia_dor 	:= null;
		:new.ie_lado 			:= null;
		:new.nr_seq_condicao_dor 	:= null;
		:new.cd_escala_dor		:= null;
		:new.nr_seq_inapto_dor		:= null;*/
	
	
	end if;
	
	if (NEW.cd_escala_dor = 'IA')  then
		
		--:new.cd_escala_dor		:= null;

		NEW.nr_seq_result_dor  	:= null;
		NEW.nr_seq_topografia_dor 	:= null;
		NEW.ie_lado 			:= null;
		NEW.nr_seq_condicao_dor 	:= null;				
	
	end if;
		
end if;

if (NEW.cd_escala_dor is not null) and (NEW.qt_escala_dor is not null) and (NEW.nr_seq_result_dor is null) then
	
	NEW.nr_seq_result_dor := Obter_Seq_Result_Dor(NEW.cd_escala_dor,NEW.qt_escala_dor);
	
end if;


if (NEW.nr_Atendimento is not null) and
	(((coalesce(cd_funcao_ativa_w,0) = 872) and (ie_setor_w = 'N')) or (coalesce(cd_funcao_ativa_w,0) <> 872)) and (NEW.cd_setor_atendimento is null)then
	BEGIN
	NEW.cd_setor_atendimento 	:= obter_setor_atendimento(NEW.nr_atendimento);
	exception
	when others then
		null;
	end;
end if;

if (NEW.cd_paciente is null) and (NEW.nr_atendimento is not null) then
	NEW.cd_paciente	:= obter_Pessoa_Atendimento(NEW.nr_atendimento,'C');
end if;

if (NEW.nr_hora is null) or (NEW.dt_sinal_vital <> OLD.dt_sinal_vital) then
	BEGIN
	NEW.nr_hora	:= (to_char(round(NEW.dt_sinal_vital,'hh24'),'hh24'))::numeric;
	end;
end if;

if (NEW.nr_hora is not null) and
	((OLD.nr_hora is null) or (OLD.dt_sinal_vital is null) or (NEW.nr_hora <> OLD.nr_hora) or (NEW.dt_sinal_vital <> OLD.dt_sinal_vital)) then
	BEGIN
	ds_hora_w	:= lpad(NEW.nr_hora,2,'0');
	dt_registro_w	:= trunc(NEW.dt_sinal_vital,'hh24');
	dt_apap_w	:= to_date(to_char(NEW.dt_sinal_vital,'dd/mm/yyyy') ||' '||ds_hora_w||':00:00','dd/mm/yyyy hh24:mi:ss');
	if (to_char(round(NEW.dt_sinal_vital,'hh24'),'hh24') = ds_hora_w) then
		NEW.dt_referencia	:= round(NEW.dt_sinal_vital,'hh24');
	else
		BEGIN
		qt_hora_w	:= (trunc(NEW.dt_sinal_vital,'hh24') - to_date(to_char(NEW.dt_sinal_vital,'dd/mm/yyyy') ||' '||ds_hora_w||':00:00','dd/mm/yyyy hh24:mi:ss')) * 24;
		if (qt_hora_w > 12) then
			NEW.dt_referencia	:= to_date(to_char(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(NEW.dt_sinal_vital + 1),'dd/mm/yyyy') ||' '||ds_hora_w ||':00:00','dd/mm/yyyy hh24:mi:ss');
		elsif (qt_hora_w > 0) and (qt_hora_w <= 12) then
			NEW.dt_referencia	:= to_date(to_char(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(NEW.dt_sinal_vital),'dd/mm/yyyy') ||' '||ds_hora_w ||':00:00','dd/mm/yyyy hh24:mi:ss');
		elsif (qt_hora_w >= -12) then
			NEW.dt_referencia	:= to_date(to_char(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(NEW.dt_sinal_vital),'dd/mm/yyyy') ||' '||ds_hora_w ||':00:00','dd/mm/yyyy hh24:mi:ss');
		elsif (qt_hora_w < -12) then
			NEW.dt_referencia	:= to_date(to_char(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(NEW.dt_sinal_vital - 1),'dd/mm/yyyy') ||' '||ds_hora_w ||':00:00','dd/mm/yyyy hh24:mi:ss');
		end if;
		end;
	end if;
	end;
end if;
total_escore_alerta_w:=0;
if 	(NEW.qt_freq_cardiaca >= 51 AND NEW.qt_freq_cardiaca 	<= 100) then
		total_escore_alerta_w:=0;
elsif	(NEW.qt_freq_cardiaca >= 41 AND NEW.qt_freq_cardiaca	<= 50)	or
	(NEW.qt_freq_cardiaca >= 101 AND NEW.qt_freq_cardiaca	<= 110)	then
		total_escore_alerta_w:= total_escore_alerta_w + 1;
		ds_alerta_modificado_w := Obter_desc_expressao(290490,'Freq. cardiaca') || ' = ' ||  NEW.qt_freq_cardiaca;
elsif (NEW.qt_freq_cardiaca 	<= 40)	or
	(NEW.qt_freq_cardiaca >= 111 AND NEW.qt_freq_cardiaca	<= 120)	then
		total_escore_alerta_w:= total_escore_alerta_w + 2;
		ds_alerta_modificado_w := Obter_desc_expressao(290490,'Freq. cardiaca') || ' = ' || NEW.qt_freq_cardiaca;
elsif (NEW.qt_freq_cardiaca 	>  120)	then
		total_escore_alerta_w:= total_escore_alerta_w + 3;
		ds_alerta_modificado_w := Obter_desc_expressao(290490,'Freq. cardiaca') || ' = ' || NEW.qt_freq_cardiaca;
end if;

if 	(NEW.qt_freq_resp 	>= 10 AND NEW.qt_freq_resp 	<= 14) then
		total_escore_alerta_w:= total_escore_alerta_w + 0;
elsif	(NEW.qt_freq_resp 	>= 15 AND NEW.qt_freq_resp	<= 20)	then
		total_escore_alerta_w:= total_escore_alerta_w + 1;
		ds_alerta_modificado_w := ds_alerta_modificado_w || chr(13) || chr(10) || Obter_desc_expressao(557498,'Freq. respiratoria') || ' = ' || NEW.qt_freq_resp;
elsif (NEW.qt_freq_resp 	<= 9)	or
	(NEW.qt_freq_resp 	>= 21 AND NEW.qt_freq_resp	<= 29)	then
		total_escore_alerta_w:= total_escore_alerta_w + 2;
		ds_alerta_modificado_w := ds_alerta_modificado_w || chr(13) || chr(10) || Obter_desc_expressao(557498,'Freq. respiratoria') || ' = ' || NEW.qt_freq_resp;
elsif (NEW.qt_freq_resp 	>  30)	then
		total_escore_alerta_w:= total_escore_alerta_w + 3;
		ds_alerta_modificado_w := ds_alerta_modificado_w || chr(13) || chr(10) || Obter_desc_expressao(557498,'Freq. respiratoria') || ' = ' || NEW.qt_freq_resp;
end if;

if 	(NEW.qt_pa_sistolica >= 101 AND NEW.qt_pa_sistolica <= 199) then
		total_escore_alerta_w:= total_escore_alerta_w + 0;
elsif	(NEW.qt_pa_sistolica 	>= 81 AND NEW.qt_pa_sistolica	<= 100)	then
		total_escore_alerta_w:= total_escore_alerta_w + 1;
		ds_alerta_modificado_w := ds_alerta_modificado_w || chr(13) || chr(10) || Obter_desc_expressao(310302,'Pa. sistolica') || ' = ' || NEW.qt_pa_sistolica;
elsif	(NEW.qt_pa_sistolica 	>= 71 AND NEW.qt_pa_sistolica 	<= 80)	or (NEW.qt_pa_sistolica 	>= 200)	then
		total_escore_alerta_w:= total_escore_alerta_w + 2;
		ds_alerta_modificado_w := ds_alerta_modificado_w || chr(13) || chr(10) || Obter_desc_expressao(310302,'Pa. sistolica') || ' = ' || NEW.qt_pa_sistolica;
elsif (NEW.qt_pa_sistolica 	<= 70)	then
		total_escore_alerta_w:= total_escore_alerta_w + 3;
		ds_alerta_modificado_w := ds_alerta_modificado_w || chr(13) || chr(10) || Obter_desc_expressao(310302,'Pa. sistolica') || ' = ' || NEW.qt_pa_sistolica;
end if;

if (NEW.ie_nivel_consciencia 	= '0') then
		total_escore_alerta_w:= total_escore_alerta_w + 0;
elsif (NEW.ie_nivel_consciencia 	= '1')	then
		total_escore_alerta_w:= total_escore_alerta_w + 1;
		ds_alerta_modificado_w := ds_alerta_modificado_w || chr(13) || chr(10) ||  Obter_desc_expressao(294136,null) || ' = ' || NEW.ie_nivel_consciencia;
elsif (NEW.ie_nivel_consciencia 	= '2')	then
		total_escore_alerta_w:= total_escore_alerta_w + 2;
		ds_alerta_modificado_w := ds_alerta_modificado_w || chr(13) || chr(10) ||  Obter_desc_expressao(294136,null) || ' = ' || NEW.ie_nivel_consciencia;
elsif (NEW.ie_nivel_consciencia 	= '3')	then
		total_escore_alerta_w:= total_escore_alerta_w + 3;
		ds_alerta_modificado_w := ds_alerta_modificado_w || chr(13) || chr(10) ||  Obter_desc_expressao(294136,null) || ' = ' || NEW.ie_nivel_consciencia;
end if;

if 	(NEW.qt_temp >= 35.1 AND NEW.qt_temp <= 37.8) then
		total_escore_alerta_w:= total_escore_alerta_w + 0;
elsif	((NEW.qt_temp 	<= 35)	or (NEW.qt_temp	>= 37.9))	then
		total_escore_alerta_w:= total_escore_alerta_w + 2;
		ds_alerta_modificado_w := ds_alerta_modificado_w || chr(13) || chr(10) || Obter_desc_expressao(299207,'Temperatura') || ' = ' || NEW.qt_temp;
end if;

if (NEW.qt_pa_diastolica is not null) and (NEW.qt_pa_sistolica is not null) and (NEW.qt_pam is null) then
	NEW.qt_pam 	:=	((NEW.qt_pa_sistolica +(NEW.qt_pa_diastolica * 2)) / 3);
end if;

if 	(NEW.dt_liberacao is not null AND OLD.dt_liberacao is null) 	then
	BEGIN
		cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
		BEGIN
		cd_setor_paciente_w	:= obter_setor_atendimento(NEW.nr_atendimento);
		exception
			when others then
			null;
		end;
		open C01;
			loop
			fetch C01 into
				nr_seq_evento_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				BEGIN
				CALL gerar_evento_paciente_trigger(nr_seq_evento_w,NEW.nr_atendimento,NEW.cd_paciente,null,NEW.nm_usuario,ds_alerta_modificado_w,NEW.dt_sinal_vital);
				end;
			end loop;
		close C01;
	end;
end if;


if ((NEW.dt_liberacao is not null AND OLD.dt_liberacao is null) and (NEW.QT_TEMP > 38 OR NEW.QT_TEMP < 36) OR (NEW.QT_FREQ_RESP > 20) OR (NEW.QT_FREQ_CARDIACA > 100) OR (NEW.QT_PA_SISTOLICA < 90) OR (NEW.QT_PAM < 65)) then
	BEGIN
		cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
		SELECT	SUBSTR(CASE WHEN(NEW.QT_TEMP > 38 OR NEW.QT_TEMP < 36 ) THEN Obter_desc_expressao(299207,'Temperatura') || ': ' || NEW.QT_TEMP ||
		SUBSTR(Obter_Atrib_Unid_Med_Unica('ATENDIMENTO_SINAL_VITAL','QT_TEMP',NEW.DT_ATUALIZACAO, 1),1,30) || CHR(13) || CHR(10) ELSE '' END ||
		CASE WHEN(NEW.QT_FREQ_RESP > 20) THEN Obter_desc_expressao(557498,null) || ': ' || NEW.QT_FREQ_RESP || ' ('||Obter_desc_expressao(558642,'FR') || ')' || CHR(13) || CHR(10)  ELSE '' END ||
		CASE WHEN(NEW.QT_FREQ_CARDIACA > 100) THEN Obter_desc_expressao(290490,null) || ': ' || NEW.QT_FREQ_CARDIACA || ' ('||Obter_desc_expressao(311848,'FR') || ')' ||  CHR(13) || CHR(10) ELSE '' END||
		CASE WHEN(NEW.QT_PA_SISTOLICA < 90) THEN Obter_desc_expressao(295132,'PA max') || ': ' || NEW.QT_PA_SISTOLICA || ' (mmHg)' || CHR(13) || CHR(10)  ELSE ''  END ||
		CASE WHEN(NEW.QT_PAM < 65) THEN Obter_desc_expressao(295239,'PAM') || ': ' || NEW.QT_PAM || ' '|| Obter_desc_expressao(727862,'(mmHg)')|| CHR(13) || CHR(10) ELSE '' END,1,4000) DESCR
		INTO STRICT ds_Alerta_sinais_w
		;
					
		BEGIN
		cd_setor_paciente_w	:= obter_setor_atendimento(NEW.nr_atendimento);
		exception
			when others then
			null;
		end;
		open C02;
			loop
			fetch C02 into
				nr_seq_evento_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				BEGIN
				CALL gerar_evento_paciente_trigger(nr_seq_evento_w,NEW.nr_atendimento,NEW.cd_paciente,null,NEW.nm_usuario,ds_Alerta_sinais_w,NEW.dt_sinal_vital);
				end;
			end loop;
		close C02;
	end;
end if;


if (NEW.qt_peso	is not null) then
	SELECT * FROM consiste_sinal_vital(	NEW.cd_paciente, NEW.qt_peso, 12, ds_retorno_w, ie_retorno_w, NEW.qt_peso_um, NEW.nr_atendimento, null, NEW.ie_rn) INTO STRICT ds_retorno_w, ie_retorno_w;
	if (ie_retorno_w	= 'E') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(264607,	'DS_RETORNO_W='||DS_RETORNO_W);
	end if;
end if;

if (coalesce(NEW.qt_peso,0) <> coalesce(OLD.qt_peso,0)) then
	CALL cpoe_update_peso_atual_dialise( NEW.nr_atendimento, NEW.dt_sinal_vital, NEW.qt_peso);
end if;


if (NEW.qt_peso is not null) and (NEW.qt_altura_cm is not null) then
	BEGIN
	if (NEW.qt_imc is null) then
		NEW.qt_imc	:= Obter_IMC(NEW.qt_peso,NEW.qt_altura_cm);
	end if;
	
	exception
		when others then
		null;
	end;
	BEGIN
	if (NEW.QT_SUPERF_CORPORIA is null) then
		NEW.QT_SUPERF_CORPORIA	:= Obter_Superficie_Corporea(NEW.qt_altura_cm,NEW.qt_peso);
	end if;
	exception
		when others then
		null;
	end;
	
end if;

if (NEW.dt_liberacao is not null) and (OLD.dt_liberacao is null) and (NEW.nr_atendimento is not null) then
	
	BEGIN
		CALL gravar_agend_rothman(NEW.nr_atendimento,NEW.nr_sequencia,'SV',NEW.nm_usuario);
	exception
	when others then
		null;
	end;
/*
select	max(nvl(ie_sepse_lib_sv,'N'))
into	ie_sepse_lib_sv_w
from	parametro_medico
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;
	
if	(ie_sepse_lib_sv_w = 'S') and
	(:old.dt_liberacao is null) and
	(:new.dt_liberacao is not null) then
	begin
	gerar_escala_sepse_js(:new.nr_atendimento,:new.cd_pessoa_fisica,:new.nr_sequencia,:new.nm_usuario);
	end;
end if;
*/

end if;

if (NEW.dt_liberacao is null) and (NEW.dt_inativacao is null) and (coalesce(NEW.ie_integracao,'N')	= 'N') and
	((NEW.dt_sinal_vital		> LOCALTIMESTAMP) or
	(qt_horas_passado_sv_w > 0 and NEW.dt_sinal_vital	< LOCALTIMESTAMP - (qt_horas_passado_sv_w/24) )) then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(15222,	'QT_HR_PASSADO_SV='||qt_horas_passado_sv_w);
end if;

if (OLD.dt_liberacao is null and NEW.dt_liberacao is not null) then --Apenas calcular quando liberar


	if (coalesce(NEW.qt_glicemia_capilar,0) > 0 and coalesce(NEW.qt_glicemia_mmol,0) = 0) then
		NEW.qt_glicemia_mmol := converter_mg_mmol(NEW.qt_glicemia_capilar, 'MMOL');
	elsif (coalesce(NEW.qt_glicemia_mmol,0) > 0 and coalesce(NEW.qt_glicemia_capilar,0) = 0) then
		NEW.qt_glicemia_capilar := converter_mg_mmol(NEW.qt_glicemia_mmol, 'MG');
	end if;
	
end if;

if ((OLD.dt_liberacao is null and NEW.dt_liberacao is not null) or (OLD.dt_inativacao is null and NEW.dt_inativacao is not null)) then

	CALL send_physio_data_integration(null, null, NEW.nr_atendimento, NEW.cd_pessoa_fisica, NEW.nr_sequencia, NEW.dt_sinal_vital, 
	NEW.qt_pa_sistolica, NEW.qt_pa_diastolica, NEW.qt_freq_cardiaca, NEW.qt_temp, NEW.dt_atualizacao);
	
end if;

if (TG_OP = 'INSERT') and (coalesce(NEW.ie_integracao,'N')	= 'S') then
   CALL record_integration_notify(NEW.cd_paciente,NEW.nr_atendimento,'SV',NEW.nr_sequencia,null,'S');
end if;

end if;

qt_reg_w	:= 0;
  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_atendimento_sinal_vital_atual() FROM PUBLIC;

CREATE TRIGGER atendimento_sinal_vital_atual
	BEFORE INSERT OR UPDATE ON atendimento_sinal_vital FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_atendimento_sinal_vital_atual();

