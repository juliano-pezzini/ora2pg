-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS paciente_atend_medic_update ON paciente_atend_medic CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_paciente_atend_medic_update() RETURNS trigger AS $BODY$
DECLARE
  R RECORD;

ie_inserir_item_adm_w		varchar(1);
qt_mat_itens_w 			bigint;
ie_alterar_etapa_w			varchar(1);
ie_atualizar_autor_conv_w		varchar(15) := 'N';
nr_seq_autor_w			bigint;
nr_ciclo_w			smallint;
ds_dia_ciclo_w			varchar(5);
ie_inserir_novo_item_adm_w	varchar(1);
ie_atualizar_pac_prot_med_w	varchar(15) := 'S';
ie_utiliza_data_adm_w		varchar(1);
cd_funcao_ativa_w		bigint := coalesce(Obter_Funcao_Ativa,0);
ie_via_aplicacao_w		paciente_atend_medic.ie_via_aplicacao%type;
cd_perfil_w			perfil.cd_perfil%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
jobno 				bigint;
ie_interno_w                	estagio_autorizacao.ie_interno%type;
nr_seq_estagio_w            	estagio_autorizacao.nr_sequencia%type;
v_select_string    		varchar(2000);
csr                		REFCURSOR;
job_nr_w         		varchar(2000);
nr_atendimento_w		paciente_atendimento.nr_atendimento%type;
ie_tipo_convenio_w		atendimento_paciente.ie_tipo_convenio%type;
ie_gerar_autor_w		varchar(1)	:= 'N';
ds_lista_tipos_convenio_w	varchar(40)	:= '';
ie_gerar_tipo_convenio_w	varchar(15)	:= 'S';
nr_seq_paciente_w		paciente_atendimento.nr_seq_paciente%type;

ie_tipo_operacao_w      	regra_atualiza_aut_quimio.ie_aplica_inclusao%type := 'X';	
nr_seq_estagio_atual_w		estagio_autorizacao.nr_sequencia%type;
str_job_w                   	user_jobs.what%type := null;
str_duplica_w               	user_jobs.what%type := null;
nr_seq_estagio_pendente_w   	estagio_autorizacao.nr_sequencia%type;
ie_regra_apres_autor_quimio_w	convenio_estabelecimento.ie_regra_apres_autor_quimio%type;
cd_convenio_w               	paciente_setor_convenio.cd_convenio%type;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

cd_perfil_w	:= coalesce(obter_perfil_ativo,0);
cd_estabelecimento_w			:= coalesce(wheb_usuario_pck.get_cd_estabelecimento,1);

ie_inserir_item_adm_w := obter_param_usuario(3130, 47, cd_perfil_w, NEW.nm_usuario, cd_estabelecimento_w, ie_inserir_item_adm_w);
ie_inserir_novo_item_adm_w := obter_param_usuario(3130, 274, cd_perfil_w, NEW.nm_usuario, cd_estabelecimento_w, ie_inserir_novo_item_adm_w);
ie_alterar_etapa_w := obter_param_usuario(3130, 84, cd_perfil_w, NEW.nm_usuario, cd_estabelecimento_w, ie_alterar_etapa_w);
ie_atualizar_autor_conv_w := obter_param_usuario(281, 1001, cd_perfil_w, NEW.nm_usuario, cd_estabelecimento_w, ie_atualizar_autor_conv_w);
ie_atualizar_pac_prot_med_w := obter_param_usuario(281, 1185, cd_perfil_w, NEW.nm_usuario, cd_estabelecimento_w, ie_atualizar_pac_prot_med_w);
ie_utiliza_data_adm_w := obter_param_usuario(3130, 349, cd_perfil_w, NEW.nm_usuario, cd_estabelecimento_w, ie_utiliza_data_adm_w);
ie_gerar_autor_w := obter_param_usuario(281, 385, cd_perfil_w, NEW.nm_usuario, cd_estabelecimento_w, ie_gerar_autor_w);
ds_lista_tipos_convenio_w := obter_param_usuario(281, 1041, cd_perfil_w, NEW.nm_usuario, cd_estabelecimento_w, ds_lista_tipos_convenio_w);

if (TG_OP = 'UPDATE') then
	if (ie_alterar_etapa_w = 'S') and (NEW.ie_administracao = 'A') and (NEW.ie_administracao <> coalesce(OLD.ie_administracao,'X')) then

		update 	paciente_atendimento
		set 	dt_inicio_adm = LOCALTIMESTAMP,
			nm_usuario = NEW.nm_usuario
		where	dt_inicio_adm is null
		and	nr_seq_atendimento = NEW.nr_seq_atendimento;

	end if;

	if (ie_inserir_item_adm_w = 'S') and (NEW.ie_administracao = 'A') and (OLD.ie_administracao <> 'A') and (ie_utiliza_data_adm_w <> 'S') then

		if (NEW.ie_checado = 'N') then
			NEW.ie_checado := 'S';
		end if;

		select 	count(*)
		into STRICT	qt_mat_itens_w
		from 	paciente_atend_medic_adm
		where 	nr_seq_atendimento = NEW.nr_seq_atendimento
		and	nr_seq_material	= NEW.nr_seq_material;


		if (qt_mat_itens_w >0) and (ie_inserir_novo_item_adm_w = 'N') then		
			update 	paciente_atend_medic_adm
			set			dt_atualizacao		= LOCALTIMESTAMP,      
						    nm_usuario			= CASE WHEN cd_funcao_ativa_w=88 THEN  nm_usuario  ELSE NEW.nm_usuario END ,
						    dt_administracao	= LOCALTIMESTAMP,
						    cd_profissional		= CASE WHEN cd_funcao_ativa_w=88 THEN  cd_profissional  ELSE obter_pessoa_fisica_usuario(NEW.nm_usuario,'C') END ,
				ie_status_adm		= 1
			where 		nr_seq_atendimento	= NEW.nr_seq_atendimento
			and			nr_seq_material		= NEW.nr_seq_material;

		end if;

	end if;
end if;

select max(nr_ciclo), max(ds_dia_ciclo), max(nr_atendimento), max(nr_seq_paciente)
    into STRICT nr_ciclo_w, ds_dia_ciclo_w, nr_atendimento_w, nr_seq_paciente_w
    from paciente_atendimento
   where nr_seq_atendimento = NEW.nr_seq_atendimento;

select	max(a.cd_convenio)
  into STRICT	cd_convenio_w
  from  paciente_setor_convenio a
  where a.nr_seq_paciente	= nr_seq_paciente_w;

   if (TG_OP = 'INSERT') then
	   if (nr_atendimento_w > 0) then
		BEGIN
		select	max(ie_tipo_convenio)
		into STRICT	ie_tipo_convenio_w
		from	atendimento_paciente
		where	nr_atendimento	= nr_atendimento_w;
		end;
	   end if;
	
	   if (coalesce(ds_lista_tipos_convenio_w,'X') <> 'X') and (ie_tipo_convenio_w is not null) then
		ie_gerar_tipo_convenio_w := substr(obter_se_contido_char(ie_tipo_convenio_w, ds_lista_tipos_convenio_w),1,1);
	   end if;
	end if;

if (TG_OP = 'INSERT') then
    ie_tipo_operacao_w := 'I';
elsif ( (NEW.qt_dose > OLD.qt_dose) or (NEW.qt_dose_prescricao > OLD.qt_dose_prescricao) or (NEW.qt_dias_util > OLD.qt_dias_util) or (NEW.cd_intervalo > OLD.cd_intervalo)) then
    ie_tipo_operacao_w := 'A';
elsif ( (NEW.qt_dose < OLD.qt_dose) or (NEW.qt_dose_prescricao < OLD.qt_dose_prescricao) or (NEW.qt_dias_util < OLD.qt_dias_util) or (NEW.cd_intervalo < OLD.cd_intervalo)) then
    ie_tipo_operacao_w := 'R';
end if;

if (TG_OP = 'UPDATE' and ie_atualizar_autor_conv_w = 'S' and ie_tipo_operacao_w <> 'X') then
	  select max(a.nr_sequencia), max(b.nr_sequencia)
            into STRICT nr_seq_autor_w, nr_seq_estagio_atual_w
            from autorizacao_convenio a, estagio_autorizacao b
           where a.nr_ciclo = nr_ciclo_w
             and ((a.ds_dia_ciclo = ds_dia_ciclo_w) or (coalesce(a.ds_dia_ciclo, 'X') = 'X'))
             and a.nr_seq_paciente_setor = nr_seq_paciente_w
             and a.nr_seq_estagio = b.nr_sequencia
             and b.ie_interno = '1'
             and
                 not(exists (SELECT 1
                        from material_autorizado m
                       where m.nr_sequencia_autor = a.nr_sequencia
                         and m.cd_material <>
                             coalesce(m.cd_material_informado, m.cd_material)));

end if;

if (nr_seq_autor_w is null) then
	select max(a.nr_sequencia), max(b.nr_sequencia)
	      into STRICT nr_seq_autor_w, nr_seq_estagio_atual_w
	      from autorizacao_convenio a, estagio_autorizacao b
	     where a.nr_seq_paciente = nr_seq_paciente_w
	       and a.nr_seq_estagio = b.nr_sequencia
	       and b.ie_interno not in ('70', '90')
	       and exists (SELECT 1
		      from material_autorizado m
		     where m.nr_sequencia_autor = a.nr_sequencia
		       and m.cd_material <>
			   coalesce(m.cd_material_informado, m.cd_material));
end if;

if (nr_seq_autor_w is null) then
	select max(a.nr_sequencia), max(b.nr_sequencia)
	into STRICT nr_seq_autor_w, nr_seq_estagio_atual_w
	from autorizacao_convenio a, estagio_autorizacao b
	where a.nr_ciclo = nr_ciclo_w
	 and ((a.ds_dia_ciclo = ds_dia_ciclo_w) or (coalesce(a.ds_dia_ciclo, 'X') = 'X'))
	 and a.nr_seq_paciente_setor = nr_seq_paciente_w
	 and a.nr_seq_estagio = b.nr_sequencia
	 and b.ie_interno not in ('70', '90')
	 and exists (SELECT 1
		from material_autorizado m
	       where m.nr_sequencia_autor = a.nr_sequencia
		 and m.cd_material <>
		     coalesce(m.cd_material_informado, m.cd_material));
end if;

for R in (SELECT CASE WHEN ie_tipo_operacao_w='R' THEN  CASE WHEN coalesce(q.IE_APLICA_REDUCAO_DOSE,'N')='S' THEN q.NR_SEQ_ESTAGIO_DIM  ELSE null END  WHEN ie_tipo_operacao_w='A' THEN  CASE WHEN coalesce(q.IE_APLICA_AUMENTO_DOSE,'N')='S' THEN q.NR_SEQ_ESTAGIO_AUM  ELSE null END  WHEN ie_tipo_operacao_w='I' THEN  CASE WHEN coalesce(q.IE_APLICA_INCLUSAO ,'N')='S' THEN q.NR_SEQ_ESTAGIO_INC  ELSE null END  END  estagio		
 from REGRA_ATUALIZA_AUT_QUIMIO q
where cd_convenio = cd_convenio_w  
  and ie_situacao = 'A'
  and coalesce(nr_seq_estagio_atual, nr_seq_estagio_atual_w, 0) = coalesce(nr_seq_estagio_atual_w, 0)
  and coalesce(cd_perfil, cd_perfil_w, 0) = coalesce(cd_perfil_w, 0)
  and coalesce(cd_estabelecimento, cd_estabelecimento_w, 0) = coalesce(cd_estabelecimento_w, 0) 
  order by nr_seq_estagio_atual desc,  cd_perfil desc )loop
  
 nr_seq_estagio_w := R.estagio;
 
end loop;


select	coalesce(max(ie_regra_apres_autor_quimio),'N')
  into STRICT	ie_regra_apres_autor_quimio_w
  from	convenio_estabelecimento
 where	cd_convenio		= cd_convenio_w
   and	cd_estabelecimento	= cd_estabelecimento_w;


select max(a.ie_interno) 
  into STRICT ie_interno_w 
  from estagio_autorizacao a 
 where a.nr_sequencia = nr_seq_estagio_w 
   and a.ie_situacao = 'A';

if ( coalesce(nr_seq_autor_w, 0) <> 0) then
	if (ie_interno_w not in ('70') or (ie_interno_w is null and ie_atualizar_autor_conv_w = 'S')) then
		if (coalesce(ie_regra_apres_autor_quimio_w,'N') = 'S' and ie_interno_w is not null) then
		
		insert into AUTORIZACAO_CONVENIO_HIST(NR_SEQUENCIA,
			    DT_ATUALIZACAO,
			    NM_USUARIO,
			    NR_ATENDIMENTO,
			    NR_SEQ_AUTORIZACAO,
			    DS_HISTORICO,
			    DT_ATUALIZACAO_NREC,
			    NM_USUARIO_NREC,
			    NR_SEQUENCIA_AUTOR)
			SELECT	nextval('autorizacao_convenio_hist_seq'),
				LOCALTIMESTAMP,
				NEW.nm_usuario,
				nr_atendimento_w,
				nr_seq_autorizacao,
				substr(wheb_mensagem_pck.get_texto(233213,  'cd_material=' || m.cd_material || ';' ||'ds_material=' || substr(obter_desc_material(m.cd_material),1,254)  || ';' ||'qt_solicitada=' || m.qt_solicitada || ';' ||'qt_autorizada=' || m.qt_autorizada),1,4000),
				LOCALTIMESTAMP,
				NEW.nm_usuario,
				nr_seq_autor_w
			from material_autorizado m
		       where nr_sequencia_autor = nr_seq_autor_w
			and cd_material_informado = NEW.cd_material;
		
			delete from material_autorizado
			 where nr_sequencia_autor = nr_seq_autor_w
			   and cd_material_informado = NEW.cd_material;

		elsif (TG_OP = 'UPDATE' and ie_atualizar_autor_conv_w = 'S') then
		
		    update material_autorizado
		       set qt_solicitada  = coalesce(calcula_dose_total_quimio(NEW.qt_dose_prescricao,
									  NEW.qt_dias_util,
									  NEW.cd_intervalo),
						    NEW.qt_dose_prescricao,
						    NEW.qt_dose),
			   dt_atualizacao = LOCALTIMESTAMP,
			   nm_usuario     = NEW.nm_usuario
		     where nr_sequencia_autor = nr_seq_autor_w
		       and cd_material = NEW.cd_material;
		end if;
	elsif (ie_interno_w in ('70')) then
	    BEGIN
		select	min(nr_sequencia)
		into STRICT	nr_seq_estagio_pendente_w
		from	estagio_autorizacao a
		where	a.cd_empresa	= obter_empresa_estab(cd_estabelecimento_w)
		and	a.ie_situacao	= 'A'
		and	a.ie_interno	= '1';
		
		str_duplica_w := ' duplicar_autorizacao_convenio('||nr_seq_autor_w||','''||NEW.nm_usuario||''',nr_seq_autor_gerada_w,''N'',''S'');';
		str_duplica_w := str_duplica_w||' atualizar_autorizacao_convenio(nr_seq_autor_gerada_w,''' || NEW.nm_usuario || ''',' || nr_seq_estagio_pendente_w ||',''N'',''N'',''N'''||');';
		str_duplica_w := str_duplica_w||' tiss_atualizar_autorizacao(nr_seq_autor_gerada_w,''' || NEW.nm_usuario || ''');';
		str_duplica_w := str_duplica_w||' atualizar_autorizacao_convenio('||nr_seq_autor_w || ',''' || NEW.nm_usuario || ''',' || nr_seq_estagio_w ||',''N'',''N'',''N'''||');';
	    end;
	end if;
end if;
	
if ((TG_OP = 'INSERT' 	and (((ie_gerar_autor_w = 'S') or (ie_gerar_autor_w = 'T')) 
		and (coalesce(ie_gerar_tipo_convenio_w,'S') = 'S'))) or (TG_OP = 'UPDATE' and ie_atualizar_autor_conv_w = 'S' and coalesce(ie_regra_apres_autor_quimio_w,'N') = 'N')
    or (coalesce(ie_regra_apres_autor_quimio_w,'N') = 'S' and nr_seq_estagio_w is not null )) then
    BEGIN

	    
      if (ie_tipo_operacao_w <> 'X') then
        BEGIN          
     
           v_select_string   := 'select job from user_jobs where lower(what) like ''%gerar_autor_conv_quimioterapia(' ||
                          nr_seq_paciente_w || ',' || nr_ciclo_w ||'%'' or lower(what) like ''%atualizar_autorizacao_convenio('||nr_seq_autor_w||'%''';

          open csr for EXECUTE v_select_string;
          loop
            fetch csr into job_nr_w;
            EXIT WHEN NOT FOUND; /* apply on csr */
            dbms_job.remove(job_nr_w);
          end loop;

          str_job_w := 'declare nr_seq_autor_gerada_w number; begin wheb_usuario_pck.set_cd_estabelecimento('||cd_estabelecimento_w||');  wheb_usuario_pck.set_ie_executar_trigger(''S''); wheb_usuario_pck.set_cd_perfil('||cd_perfil_w||');';
          str_job_w := str_job_w||str_duplica_w;
          str_job_w := str_job_w||' gerar_autor_conv_quimioterapia('||nr_seq_paciente_w || ',' || nr_ciclo_w ||',''' || NEW.nm_usuario || ''',''S'','||cd_perfil_w||','||cd_estabelecimento_w||');';
          if (nr_seq_estagio_w is not null and str_duplica_w is null) then
            str_job_w := str_job_w||' atualizar_autorizacao_convenio('||nr_seq_autor_w || ',''' || NEW.nm_usuario || ''',' || nr_seq_estagio_w ||',''N'',''N'',''N'''||');';
          end if;
          str_job_w := str_job_w||' end;';

          dbms_job.submit(jobno,
                          str_job_w,
                          LOCALTIMESTAMP +
                          (5 / 86400));


          if ((coalesce(ie_atualizar_pac_prot_med_w, 'S') = 'S') and TG_OP = 'UPDATE') then
            BEGIN
              update paciente_protocolo_medic
                 set qt_dose = NEW.qt_dose
               where cd_material = OLD.cd_material
                 and nr_seq_material = OLD.nr_seq_material
                 and nr_seq_paciente = NEW.nr_seq_paciente;
            end;
          end if;

        end;
      end if;
    exception
      when others then
        null;
    end;
  end if;
<<Final>>
null;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_paciente_atend_medic_update() FROM PUBLIC;

CREATE TRIGGER paciente_atend_medic_update
	BEFORE INSERT OR UPDATE ON paciente_atend_medic FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_paciente_atend_medic_update();

