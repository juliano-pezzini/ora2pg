-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pls_regra_copartic_update ON pls_regra_copartic CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pls_regra_copartic_update() RETURNS trigger AS $BODY$
declare

BEGIN
if (NEW.dt_inicio_vigencia <> OLD.dt_inicio_vigencia)	then
	 CALL pls_gravar_log_alt_regra_aprop(NEW.nr_sequencia, OLD.dt_inicio_vigencia, NEW.dt_inicio_vigencia, 'PLS_REGRA_COPARTIC', 'DT_INICIO_VIGENCIA', NEW.nm_usuario);
end if;
if (NEW.dt_fim_vigencia <> OLD.dt_fim_vigencia)	then
	 CALL pls_gravar_log_alt_regra_aprop(NEW.nr_sequencia, OLD.dt_fim_vigencia, NEW.dt_fim_vigencia, 'PLS_REGRA_COPARTIC', 'DT_FIM_VIGENCIA', NEW.nm_usuario);
end if;
if (NEW.nr_seq_tipo_coparticipacao <> OLD.nr_seq_tipo_coparticipacao)	then
	 CALL pls_gravar_log_alt_regra_aprop(NEW.nr_sequencia, OLD.nr_seq_tipo_coparticipacao, NEW.nr_seq_tipo_coparticipacao, 'PLS_REGRA_COPARTIC', 'NR_SEQ_TIPO_COPARTICIPACAO', NEW.nm_usuario);
end if;
if (NEW.ie_tipo_atendimento <> OLD.ie_tipo_atendimento)	then
	 CALL pls_gravar_log_alt_regra_aprop(NEW.nr_sequencia, OLD.ie_tipo_atendimento, NEW.ie_tipo_atendimento, 'PLS_REGRA_COPARTIC', 'IE_TIPO_ATENDIMENTO', NEW.nm_usuario);
end if;
if (NEW.ie_forma_cobr_internacao <> OLD.ie_forma_cobr_internacao)	then
	 CALL pls_gravar_log_alt_regra_aprop(NEW.nr_sequencia, OLD.ie_forma_cobr_internacao, NEW.ie_forma_cobr_internacao, 'PLS_REGRA_COPARTIC', 'IE_FORMA_COBR_INTERNACAO', NEW.nm_usuario);
end if;
if (NEW.vl_maximo_copartic <> OLD.vl_maximo_copartic)	then
	 CALL pls_gravar_log_alt_regra_aprop(NEW.nr_sequencia, OLD.vl_maximo_copartic, NEW.vl_maximo_copartic, 'PLS_REGRA_COPARTIC', 'VL_MAXIMO_COPARTIC', NEW.nm_usuario);
end if;
if (NEW.dt_liberacao <> OLD.dt_liberacao)	then
	 CALL pls_gravar_log_alt_regra_aprop(NEW.nr_sequencia, OLD.dt_liberacao, NEW.dt_liberacao, 'PLS_REGRA_COPARTIC', 'DT_LIBERACAO', NEW.nm_usuario);
end if;
if (NEW.nm_usuario_liberacao <> OLD.nm_usuario_liberacao)	then
	 CALL pls_gravar_log_alt_regra_aprop(NEW.nr_sequencia, OLD.nm_usuario_liberacao, NEW.nm_usuario_liberacao, 'PLS_REGRA_COPARTIC', 'NM_USUARIO_LIBERACAO', NEW.nm_usuario);
end if;
if (NEW.nr_ordem_prioridade <> OLD.nr_ordem_prioridade)	then
	 CALL pls_gravar_log_alt_regra_aprop(NEW.nr_sequencia, OLD.nr_ordem_prioridade, NEW.nr_ordem_prioridade, 'PLS_REGRA_COPARTIC', 'NR_ORDEM_PRIORIDADE', NEW.nm_usuario);
end if;
if (NEW.ie_beneficiario <> OLD.ie_beneficiario)	then
	 CALL pls_gravar_log_alt_regra_aprop(NEW.nr_sequencia, OLD.ie_beneficiario, NEW.ie_beneficiario, 'PLS_REGRA_COPARTIC', 'IE_BENEFICIARIO', NEW.nm_usuario);
end if;
if (NEW.ie_conta_medica <> OLD.ie_conta_medica)	then
	 CALL pls_gravar_log_alt_regra_aprop(NEW.nr_sequencia, OLD.ie_conta_medica, NEW.ie_conta_medica, 'PLS_REGRA_COPARTIC', 'IE_CONTA_MEDICA', NEW.nm_usuario);
end if;
if (NEW.ie_utilizacao <> OLD.ie_utilizacao)	then
	 CALL pls_gravar_log_alt_regra_aprop(NEW.nr_sequencia, OLD.ie_utilizacao, NEW.ie_utilizacao, 'PLS_REGRA_COPARTIC', 'IE_UTILIZACAO', NEW.nm_usuario);
end if;
if (NEW.ie_prestador <> OLD.ie_prestador)	then
	 CALL pls_gravar_log_alt_regra_aprop(NEW.nr_sequencia, OLD.ie_prestador, NEW.ie_prestador, 'PLS_REGRA_COPARTIC', 'IE_PRESTADOR', NEW.nm_usuario);
end if;
if (NEW.ie_guia <> OLD.ie_guia)	then
	 CALL pls_gravar_log_alt_regra_aprop(NEW.nr_sequencia, OLD.ie_guia, NEW.ie_guia, 'PLS_REGRA_COPARTIC', 'IE_GUIA', NEW.nm_usuario);
end if;
if (NEW.ie_internacao <> OLD.ie_internacao)	then
	 CALL pls_gravar_log_alt_regra_aprop(NEW.nr_sequencia, OLD.ie_internacao, NEW.ie_internacao, 'PLS_REGRA_COPARTIC', 'IE_INTERNACAO', NEW.nm_usuario);
end if;
if (NEW.nr_seq_mot_reembolso <> OLD.nr_seq_mot_reembolso)	then
	 CALL pls_gravar_log_alt_regra_aprop(NEW.nr_sequencia, OLD.nr_seq_mot_reembolso, NEW.nr_seq_mot_reembolso, 'PLS_REGRA_COPARTIC', 'NR_SEQ_MOT_REEMBOLSO', NEW.nm_usuario);
end if;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pls_regra_copartic_update() FROM PUBLIC;

CREATE TRIGGER pls_regra_copartic_update
	BEFORE UPDATE ON pls_regra_copartic FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pls_regra_copartic_update();

