-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS intdisp_requisicao_material ON item_requisicao_material CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_intdisp_requisicao_material() RETURNS trigger AS $BODY$
declare

qt_existe_regra_w		bigint;
dt_validade_w			timestamp;
cd_setor_atendimento_w		bigint;
cd_local_estoque_destino_w	integer;
nr_sequencia_w			bigint;
nr_digito_verif_w		integer;
nr_seq_lote_fornec_w		bigint;
ie_enviar_atendido_req_w	parametros_farmacia.ie_enviar_atendido_req%type;
BEGIN
  BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then

if (OLD.dt_atendimento is null) and (OLD.cd_motivo_baixa = '0') and (NEW.dt_atendimento is not null) and (NEW.cd_motivo_baixa > '0') then
	BEGIN
	select 	cd_local_estoque_destino
	into STRICT	cd_local_estoque_destino_w
	from	requisicao_material
	where	nr_requisicao = NEW.nr_requisicao;
	
	BEGIN
	select	1
	into STRICT	qt_existe_regra_w
	from	dis_regra_local_setor
	where	cd_local_estoque = cd_local_estoque_destino_w  LIMIT 1;
	exception
	when others then
		qt_existe_regra_w := 0;
	end;
	
	if (NEW.nr_seq_lote_fornec is not null) then
		BEGIN
		select	max(nr_digito_verif),
			max(dt_validade)
		into STRICT	nr_digito_verif_w,
			dt_validade_w
		from	material_lote_fornec
		where	nr_sequencia = NEW.nr_seq_lote_fornec;
		
		nr_seq_lote_fornec_w :=	substr(adiciona_zeros_esquerda(NEW.nr_seq_lote_fornec||nr_digito_verif_w,11),1,15);
		end;
	end if;
	
	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_sequencia_w
	from	int_disp_req_material;

	select	coalesce(max(ie_enviar_atendido_req), 'S')
	into STRICT	ie_enviar_atendido_req_w
	from	parametros_farmacia
	where	cd_estabelecimento = NEW.cd_estabelecimento;
	
	if (qt_existe_regra_w > 0) and (coalesce(NEW.qt_material_atendida,0) > 0) then
		
		insert into int_disp_req_material(
			nr_sequencia,
			nr_requisicao,
			dt_leitura,
			cd_acao,
			cd_material,
			qt_material_atendida,
			nr_seq_lote_fornec,
			dt_validade,
			cd_estabelecimento,
			cd_barras,
			dt_atualizacao)
		values (	nr_sequencia_w,
			NEW.nr_requisicao,
			'',
			'ESA',
			CASE WHEN ie_enviar_atendido_req_w='S' THEN  coalesce(NEW.cd_material_lido, NEW.cd_material)  ELSE NEW.cd_material END ,
			NEW.qt_material_atendida,
			nr_seq_lote_fornec_w,
			dt_validade_w,
			NEW.cd_estabelecimento,
			NEW.cd_barras,
			LOCALTIMESTAMP);
	end if;
	end;
end if;
end if;	
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_intdisp_requisicao_material() FROM PUBLIC;

CREATE TRIGGER intdisp_requisicao_material
	BEFORE UPDATE ON item_requisicao_material FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_intdisp_requisicao_material();

