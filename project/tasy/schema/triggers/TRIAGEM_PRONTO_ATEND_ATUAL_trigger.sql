-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS triagem_pronto_atend_atual ON triagem_pronto_atend CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_triagem_pronto_atend_atual() RETURNS trigger AS $BODY$
declare

ie_sexo_paciente_w	varchar(2);
ie_sexo_regra_w		varchar(2);
ie_tipo_nome_w		varchar(1);

ie_prot_institut_ant_w	varchar(1);
ie_prot_institut_w	varchar(1);
BEGIN
  BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
if (NEW.cd_estabelecimento is null) then
	NEW.cd_estabelecimento	:= wheb_usuario_pck.get_cd_estabelecimento;
end if;

ie_tipo_nome_w := Obter_param_Usuario(10021, 65, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_tipo_nome_w);

if (NEW.nr_seq_triagem_prioridade is not null ) then
	select 	coalesce(ie_sexo,'A')
	into STRICT	ie_sexo_regra_w
	from	triagem_classif_prioridade
	where	nr_sequencia = NEW.nr_seq_triagem_prioridade;
	
	if (ie_sexo_regra_w <> 'A') then		
		select	coalesce(Obter_Sexo_PF(NEW.cd_pessoa_fisica,'C'),'I')
		into STRICT	ie_sexo_paciente_w
		;
		
		if (ie_sexo_paciente_w <> ie_sexo_regra_w) and (ie_sexo_paciente_w <> 'I') then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(212461);
		end if;
	end if;
end if;

BEGIN

	if	(NEW.NR_SEQ_FILA_SENHA is not null AND OLD.NR_SEQ_FILA_SENHA is null) then
		
		if (NEW.CD_SENHA_GERADA	is null) then
			NEW.CD_SENHA_GERADA := obter_dados_senha(NEW.NR_SEQ_FILA_SENHA,'LC');
		end if;

		if (ie_tipo_nome_w in ('1','2')) then
			UPDATE	paciente_senha_fila
			SET	nm_paciente	 = CASE WHEN NEW.cd_pessoa_fisica = NULL THEN substr(obter_nome_pf(NEW.CD_PESSOA_FISICA),1,255)  ELSE null END ,
				cd_pessoa_fisica = NEW.cd_pessoa_fisica
			WHERE	nr_sequencia	= NEW.NR_SEQ_FILA_SENHA;
		elsif (ie_tipo_nome_w in ('3','4')) then
			UPDATE	paciente_senha_fila
			SET	nm_paciente	= CASE WHEN NEW.cd_pessoa_fisica = NULL THEN substr(pls_gerar_nome_abreviado(obter_nome_pf(NEW.CD_PESSOA_FISICA)),1,255)  ELSE null END ,
				cd_pessoa_fisica = NEW.cd_pessoa_fisica
			WHERE	nr_sequencia	= NEW.NR_SEQ_FILA_SENHA;
		elsif (ie_tipo_nome_w = '5') then
			UPDATE	paciente_senha_fila
			SET	nm_paciente	= CASE WHEN NEW.cd_pessoa_fisica = NULL THEN substr(OBTER_INICIAIS_NOME_SENHAS(NEW.CD_PESSOA_FISICA,obter_nome_pf(NEW.CD_PESSOA_FISICA)),1,255)  ELSE null END ,
				cd_pessoa_fisica = NEW.cd_pessoa_fisica
			WHERE	nr_sequencia	= NEW.NR_SEQ_FILA_SENHA;
		end if;

	end if;

exception
	when 	others then
		null;
end;


if (NEW.DT_INICIO_TRIAGEM is not null) and (OLD.DT_INICIO_TRIAGEM is null) then
	NEW.NM_USUARIO_TRIAGEM := obter_usuario_ativo;
end if;


if (NEW.NR_SEQ_QUEIXA is not null) then

	select	ie_prot_institut,
		ie_prot_institut_ant
	into STRICT	ie_prot_institut_w,
		ie_prot_institut_ant_w
	from	queixa_paciente
	where	nr_sequencia = NEW.nr_seq_queixa;
	
	if	((ie_prot_institut_w = 'S') or (ie_prot_institut_ant_w = 'S')) then
	
		NEW.IE_PROTOCOLO_ASSISTENCIAL	:= 'S';
	
	end if;

end if;

if (NEW.NR_SEQ_MANCHESTER_FLUXO = 10) then -- NR_SEQUENCIA = 10      NR_FLUXO = 25
	NEW.IE_PROTOCOLO_ASSISTENCIAL	:= 'S';
end if;
end if;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_triagem_pronto_atend_atual() FROM PUBLIC;

CREATE TRIGGER triagem_pronto_atend_atual
	BEFORE INSERT OR UPDATE ON triagem_pronto_atend FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_triagem_pronto_atend_atual();

