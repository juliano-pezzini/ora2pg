-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS iscv_prescr_procedimento_ins ON prescr_procedimento CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_iscv_prescr_procedimento_ins() RETURNS trigger AS $BODY$
declare
ie_proc_integra_w	varchar(10);
ds_sep_bv_w			varchar(100)	:= obter_separador_bv;
cd_pessoa_fisica_w	atendimento_paciente.cd_pessoa_fisica%type;
nr_atendimento_w	atendimento_paciente.nr_atendimento%type;

function permiteIntegrarISCV
return boolean is
qt_resultado_w	bigint;
BEGIN

select	count(*) qt_resultado
into STRICT	qt_resultado_w
from 	regra_proc_interno_integra
where	ie_tipo_integracao = 17; --Dominio criado para a integração
return qt_resultado_w > 0;
end;

BEGIN
--Não considera liberação da prescrição pois na cirurgia a prescrição não é liberada
if (wheb_usuario_pck.get_ie_executar_trigger	= 'S') and (permiteIntegrarISCV()) and
	((NEW.cd_funcao_origem = 900) or (NEW.cd_funcao_origem = 872) or (NEW.cd_funcao_origem = 871)) then
	ie_proc_integra_w := Obter_Se_Integr_Proc_Interno(NEW.nr_seq_proc_interno, 17,null,NEW.ie_lado,wheb_usuario_pck.get_cd_estabelecimento);
	if (ie_proc_integra_w = 'S') and (NEW.nr_acesso_dicom is not null) then
		select	max(a.cd_pessoa_fisica),
				max(a.nr_atendimento)
		into STRICT	cd_pessoa_fisica_w,
				nr_atendimento_w
		from	atendimento_paciente a,
				prescr_medica b
		where	a.nr_atendimento = b.nr_atendimento
		and		b.nr_prescricao = NEW.nr_prescricao;


		CALL gravar_agend_integracao(745, 'nr_atendimento=' || nr_atendimento_w || ds_sep_bv_w || 'cd_pessoa_fisica=' || cd_pessoa_fisica_w || ds_sep_bv_w, NEW.cd_setor_atendimento);
		CALL gravar_agend_integracao(749,'cd_pessoa_fisica='	|| cd_pessoa_fisica_w	|| ds_sep_bv_w ||
									'nr_atendimento='	|| nr_atendimento_w		|| ds_sep_bv_w ||
									'nr_prescricao='	|| NEW.nr_prescricao		|| ds_sep_bv_w ||
									'nr_acesso_dicom='	|| NEW.nr_acesso_dicom		|| ds_sep_bv_w ||
									'order_control=NW'	|| ds_sep_bv_w				||
									'order_status=SC'	|| ds_sep_bv_w
									, NEW.cd_setor_atendimento);
	end if;
end if;

RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_iscv_prescr_procedimento_ins() FROM PUBLIC;

CREATE TRIGGER iscv_prescr_procedimento_ins
	AFTER INSERT ON prescr_procedimento FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_iscv_prescr_procedimento_ins();

