-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS man_doc_erro_atual ON man_doc_erro CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_man_doc_erro_atual() RETURNS trigger AS $BODY$
declare

qt_existe_w			bigint;
qt_consultor_w			bigint;
qt_reg_w			smallint;
cd_setor_erro_w			bigint;
cd_setor_usuario_w		bigint;
ie_situacao_w			varchar(10);
nr_seq_localizacao_w		bigint;
nr_seq_equipamento_w		bigint;
ie_terceiro_w			varchar(10);
ie_empresa_valida_w		varchar(1);
nr_seq_severidade_w		man_severidade.nr_sequencia%type;
cd_funcao_w			funcao.cd_funcao%type;
nr_seq_aviso_seg_pac_w		man_aviso_seg_pac.nr_sequencia%type;
ds_titulo_w			man_aviso_seg_pac.ds_titulo%type;
ds_aviso_w			man_aviso_seg_pac.ds_aviso%type;
qt_dest_w			bigint;
nm_usuarios_dest_w		varchar(4000) := '';
ds_perfis_dest_w		varchar(4000) := '';
dt_ordem_servico_w		timestamp;
cd_versao_w			varchar(15);
nr_seq_severidade_cliente_w	bigint;
nr_seq_ordem_serv_pai_w		man_ordem_servico.nr_sequencia%type;

c_avisos_seg_pac CURSOR(cd_funcao_p bigint) FOR
SELECT	a.nr_sequencia nr_seq_aviso_seg_pac
from	man_aviso_seg_pac a,
	man_aviso_seg_pac_func b
where	a.nr_sequencia = b.nr_seq_aviso_seg_pac
and	b.cd_funcao = cd_funcao_p
and	a.ie_situacao = 'A'
and	b.ie_situacao = 'A';

BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

select	max(mos.nr_seq_ordem_serv_pai)
into STRICT	nr_seq_ordem_serv_pai_w
from	man_ordem_servico mos
where	mos.nr_sequencia = NEW.nr_seq_ordem_def;

if (nr_seq_ordem_serv_pai_w is not null) then
	BEGIN
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1084140);
	end;
end if;

if (NEW.dt_liberacao <> OLD.dt_liberacao) then
BEGIN
	select	nr_seq_severidade_wheb,
		nr_seq_severidade
	into STRICT	nr_seq_severidade_w,
		nr_seq_severidade_cliente_w
	from	man_ordem_servico
	where	nr_sequencia = NEW.nr_seq_ordem;
	
	if (nr_seq_severidade_cliente_w = 1 AND nr_seq_severidade_w is null) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1023614);
	end if;
	
	nr_seq_severidade_w := null;
end;
end if;


if (NEW.nr_seq_grupo_des in (50,19,63,57)) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(183870);
elsif (OLD.dt_liberacao is null) and (NEW.dt_liberacao is not null) and (NEW.nr_seq_grupo_des in (31, 32, 198, 407, 129, 387)) then

        SELECT count(*)
        into STRICT	qt_existe_w
        FROM usuario_grupo_des c, grupo_desenvolvimento d
		WHERE d.nr_sequencia = c.nr_seq_grupo
		AND d.nr_seq_gerencia IN (2, 284, 285)  --3 gerencias da tech
        and c.nm_usuario_grupo = wheb_usuario_pck.get_nm_usuario;

		if (qt_existe_w = 0) then
          CALL wheb_mensagem_pck.exibir_mensagem_abort(1058595);
        end if;
end if;


select	nr_seq_localizacao,
	coalesce(b.ie_terceiro,'N'),
	dt_ordem_servico
into STRICT	nr_seq_localizacao_w,
	ie_terceiro_w,
	dt_ordem_servico_w
from	man_localizacao b,
	man_ordem_servico a
where	a.nr_seq_localizacao	= b.nr_sequencia
and	a.nr_sequencia		= NEW.nr_seq_ordem;

if (coalesce(NEW.ie_ident_erro,'KK') <> 'W') and (NEW.nr_seq_ordem_origem is null) and (ie_terceiro_w = 'N') then
	BEGIN
	CALL wheb_mensagem_pck.exibir_mensagem_abort(183871);
	end;
end if;

if (coalesce(NEW.ie_ident_erro,'KK') = 'W') and (NEW.NR_SEQ_ORDEM_ORIGEM is null) and (coalesce(NEW.ie_recorrente,'N') <> 'S') and (coalesce(NEW.qt_cliente,1) = coalesce(OLD.qt_cliente,1)) and (ie_terceiro_w = 'S') then
	BEGIN
	CALL wheb_mensagem_pck.exibir_mensagem_abort(339019);
	end;
end if;

if (NEW.ie_origem_erro = 'W') then
	BEGIN
	select	count(*)
	into STRICT	qt_existe_w
	from	usuario
	where	cd_pessoa_fisica = NEW.cd_pessoa_fisica;
	
	if (qt_existe_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(183872);
	end if;
	
	end;
elsif (NEW.ie_origem_erro = 'C') then
	select	count(*)
	into STRICT	qt_existe_w
	from	usuario a,
		pessoa_fisica b
	where	a.cd_pessoa_fisica = b.cd_pessoa_fisica
	and	a.cd_pessoa_fisica = NEW.cd_pessoa_fisica
	and	b.ie_funcionario = 'S'
	and	a.ie_situacao = 'A';
	
	
	if (qt_existe_w > 0) then
		BEGIN
	
		select	count(*)
		into STRICT	qt_consultor_w
		from	com_canal_consultor
		where	ie_situacao		= 'A'
		and	cd_pessoa_fisica 	= NEW.cd_pessoa_fisica
		and	ie_consultor_wheb	= 'S';
	
		if (qt_consultor_w	> 0) then
			qt_existe_w	:= 0;
		end if;
	
		end;
	end if;
	
	/* Francisco - 11/02/2011 - Incluir o tratamento pela localizacao, pois senao nao conseguimos colocar OS's internas como erro cliente */


	
	if (qt_existe_w > 0) and (nr_seq_localizacao_w <> 1272) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(183874);
	end if;	
end if;

if (NEW.dt_liberacao is not null) then
	NEW.nm_usuario_liberou_erro := wheb_usuario_pck.get_nm_usuario;
end if;


if (OLD.dt_liberacao is null) and (NEW.dt_liberacao is not null) and (NEW.ie_origem_erro = 'W') then


	if (NEW.dt_ocorrencia_erro is not null) and (dt_ordem_servico_w < NEW.dt_ocorrencia_erro) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(407271);
	end if;


	if (NEW.dt_ocorrencia_erro is not null) and (NEW.nr_seq_ordem <> 1105777) then
		select	Obter_Versao_Defeito(NEW.dt_ocorrencia_erro)
		into STRICT	cd_versao_w
		;

		if (cd_versao_w is not null) then
			NEW.cd_versao_alteracao	:= cd_versao_w;
		end if;
	end if;


	select	max(nr_seq_severidade_wheb),
		max(cd_funcao)
	into STRICT	nr_seq_severidade_w,
		cd_funcao_w
	from	man_ordem_servico
	where	nr_sequencia = NEW.nr_seq_ordem;

	if (nr_seq_severidade_w = 1) and (cd_funcao_w is not null) then -- Risco a seguranca do paciente

		for r_c_avisos_seg_pac in c_avisos_seg_pac(cd_funcao_w) loop

			select	substr(obter_desc_expressao(309717, 'OS'), 1, 255) || ' ' ||
				to_char(NEW.nr_seq_ordem) || ' - ' || ds_titulo,
				ds_aviso
			into STRICT	ds_titulo_w,
				ds_aviso_w
			from	man_aviso_seg_pac
			where	nr_sequencia = r_c_avisos_seg_pac.nr_seq_aviso_seg_pac;

			select	count(*)
			into STRICT	qt_dest_w
			from	man_aviso_seg_pac_dest
			where	nr_seq_aviso_seg_pac = r_c_avisos_seg_pac.nr_seq_aviso_seg_pac
			and	nm_usuario_dest is not null
			and	ie_situacao = 'A';WITH RECURSIVE cte AS (


			if (qt_dest_w > 0) then
				select	substr(ltrim(nm_usuario_dest, ', '), 1, 4000)
				into STRICT	nm_usuarios_dest_w
				from (	SELECT	nm_usuario_dest,
							row_number() over (order by nm_usuario_dest) nr_linha
						from	man_aviso_seg_pac_dest
						where	nr_seq_aviso_seg_pac = r_c_avisos_seg_pac.nr_seq_aviso_seg_pac
						and	nm_usuario_dest is not null
						and	ie_situacao = 'A'
				) alias6 WHERE nr_linha = 1
  UNION ALL


			if (qt_dest_w > 0) then
				select	c.nm_usuarios_dest_w || ', ' || substr(ltrim(nm_usuario_dest, ', '), 1, 4000)
				into STRICT	nm_usuarios_dest_w
				from (	SELECT	nm_usuario_dest,
							row_number() over (order by nm_usuario_dest) nr_linha
						from	man_aviso_seg_pac_dest
						where	nr_seq_aviso_seg_pac = r_c_avisos_seg_pac.nr_seq_aviso_seg_pac
						and	nm_usuario_dest is not null
						and	ie_situacao = 'A'
				) JOIN cte c ON (c.prior nr_linha = alias6.(nr_linha - 1))

) SELECT * FROM cte WHERE connect_by_isleaf = 1;
;
			end if;

			select	count(*)
			into STRICT	qt_dest_w
			from	man_aviso_seg_pac_dest
			where	nr_seq_aviso_seg_pac = r_c_avisos_seg_pac.nr_seq_aviso_seg_pac
			and	cd_perfil_dest is not null
			and	ie_situacao = 'A';WITH RECURSIVE cte AS (


			if (qt_dest_w > 0) then
				select	substr(ltrim(cd_perfil_dest, ', '), 1, 4000)
				into STRICT	ds_perfis_dest_w
				from (	SELECT	cd_perfil_dest,
							row_number() over (order by cd_perfil_dest) nr_linha
						from	man_aviso_seg_pac_dest
						where	nr_seq_aviso_seg_pac = r_c_avisos_seg_pac.nr_seq_aviso_seg_pac
						and	cd_perfil_dest is not null
						and	ie_situacao = 'A'
				) alias6 WHERE nr_linha = 1
  UNION ALL


			if (qt_dest_w > 0) then
				select	c.ds_perfis_dest_w || ', ' || substr(ltrim(cd_perfil_dest, ', '), 1, 4000)
				into STRICT	ds_perfis_dest_w
				from (	SELECT	cd_perfil_dest,
							row_number() over (order by cd_perfil_dest) nr_linha
						from	man_aviso_seg_pac_dest
						where	nr_seq_aviso_seg_pac = r_c_avisos_seg_pac.nr_seq_aviso_seg_pac
						and	cd_perfil_dest is not null
						and	ie_situacao = 'A'
				) JOIN cte c ON (c.prior nr_linha = alias6.(nr_linha - 1))

) SELECT * FROM cte WHERE connect_by_isleaf = 1;
;
			end if;

			if (nm_usuarios_dest_w is not null) or (ds_perfis_dest_w is not null) then
				CALL gerar_comunic_padrao(
					LOCALTIMESTAMP,
					ds_titulo_w,
					ds_aviso_w,
					NEW.nm_usuario,
					'N',
					nm_usuarios_dest_w,
					'N',
					null,
					ds_perfis_dest_w,
					null,
					null,
					LOCALTIMESTAMP,
					null,
					null);
			end if;
		end loop;
	end if;
end if;

<<Final>>
qt_reg_w	:= 0;

select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_empresa_valida_w
from	empresa_referencia
where	cd_empresa = NEW.cd_empresa;

if (ie_empresa_valida_w = 'N') then
	NEW.cd_empresa := null;
end if;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_man_doc_erro_atual() FROM PUBLIC;

CREATE TRIGGER man_doc_erro_atual
	BEFORE INSERT OR UPDATE ON man_doc_erro FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_man_doc_erro_atual();

