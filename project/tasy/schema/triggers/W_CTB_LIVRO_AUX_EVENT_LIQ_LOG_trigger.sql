-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS w_ctb_livro_aux_event_liq_log ON w_ctb_livro_aux_event_liq CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_w_ctb_livro_aux_event_liq_log() RETURNS trigger AS $BODY$
declare
 
nm_usuario_w			usuario.nm_usuario%type;
ds_log_w			ctb_reg_auxiliar_log.ds_log%type;
ie_tipo_reg_auxiliar_w		ctb_livro_auxiliar.ie_tipo_reg_auxiliar_ans%type;
vl_log_w			double precision;
ds_alt_reg_w			varchar(4000);
qt_registros_w			bigint;
			 
BEGIN 
 
if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then 
	BEGIN 
	 
	select	ie_tipo_reg_auxiliar_ans 
	into STRICT	ie_tipo_reg_auxiliar_w 
	from	ctb_livro_auxiliar 
	where	nr_sequencia = coalesce(OLD.nr_seq_reg_auxiliar,NEW.nr_seq_reg_auxiliar);
 
	if TG_OP = 'DELETE' and ie_tipo_reg_auxiliar_w in ('8000','8001','8011','8012','8020','8022') then 
 
		vl_log_w := OLD.vl_pagar;
 
	elsif TG_OP = 'INSERT' and ie_tipo_reg_auxiliar_w in ('8000','8001','8011','8012','8020','8022') then 
		 
		vl_log_w := NEW.vl_pagar;
 
	elsif TG_OP = 'DELETE' and ie_tipo_reg_auxiliar_w in ('8002','8003','8005') then 
 
		vl_log_w := OLD.vl_glosa;
 
	elsif TG_OP = 'INSERT' and ie_tipo_reg_auxiliar_w in ('8002','8003','8005') then 
		 
		vl_log_w := NEW.vl_glosa;
 
	elsif TG_OP = 'DELETE' and ie_tipo_reg_auxiliar_w in ('8004','8013') then 
 
		vl_log_w := OLD.vl_evento;
 
	elsif TG_OP = 'INSERT' and ie_tipo_reg_auxiliar_w in ('8004','8013') then 
		 
		vl_log_w := NEW.vl_evento;
			 
	end if;
 
	nm_usuario_w := wheb_usuario_pck.get_nm_usuario;
 
	if TG_OP = 'DELETE' then 
 
		ds_log_w := wheb_mensagem_pck.get_texto(392981, 'NR_SEQUENCIA=' || OLD.nr_sequencia || ';NR_DOCUMENTO=' || OLD.nr_documento || ';VALOR=' || vl_log_w || ';CD_CONTA_CONTAB=' || OLD.cd_conta_contabil || ';CLASSIFICACAO=' || substr(ctb_obter_classif_conta(OLD.cd_conta_contabil, null, OLD.dt_referencia),1,255));
		 
		CALL wheb_usuario_pck.set_ie_executar_trigger('N');
		 
		insert into	ctb_reg_auxiliar_log(nr_sequencia, 
						dt_atualizacao, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						nr_seq_reg_auxiliar, 
						ie_tipo_log, 
						ds_log) 
					values (nextval('ctb_reg_auxiliar_log_seq'), 
						LOCALTIMESTAMP, 
						nm_usuario_w, 
						LOCALTIMESTAMP, 
						nm_usuario_w, 
						OLD.nr_seq_reg_auxiliar, 
						'E', 
						ds_log_w);
 
	elsif TG_OP = 'INSERT' then 
 
		if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then 
 
			ds_log_w := wheb_mensagem_pck.get_texto(394713, 'NR_SEQUENCIA=' || NEW.nr_sequencia || ';NR_DOCUMENTO=' || NEW.nr_documento || ';VALOR=' || vl_log_w || ';CD_CONTA_CONTAB=' || NEW.cd_conta_contabil || ';CLASSIFICACAO=' || substr(ctb_obter_classif_conta(NEW.cd_conta_contabil, null, NEW.dt_referencia),1,255));
			 
			CALL wheb_usuario_pck.set_ie_executar_trigger('N');
			 
			insert into	ctb_reg_auxiliar_log(nr_sequencia, 
							dt_atualizacao, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							nr_seq_reg_auxiliar, 
							ie_tipo_log, 
							ds_log) 
						values (nextval('ctb_reg_auxiliar_log_seq'), 
							LOCALTIMESTAMP, 
							nm_usuario_w, 
							LOCALTIMESTAMP, 
							nm_usuario_w, 
							NEW.nr_seq_reg_auxiliar, 
							'I', 
							ds_log_w);
							 
			CALL wheb_usuario_pck.set_ie_executar_trigger('S');				
										 
		end if;
 
	elsif TG_OP = 'UPDATE' then 
 
		if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then 
		 
			ds_alt_reg_w := NEW.nr_sequencia;
			 
			if (coalesce(OLD.nm_prestador,0) <> coalesce(NEW.nm_prestador,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Prestador: ' || OLD.nm_prestador;
			end if;
			 
			if (coalesce(OLD.nr_cpf_cnpj,0) <> coalesce(NEW.nr_cpf_cnpj,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', CPF/CNPJ: ' || OLD.nr_cpf_cnpj;
			end if;
			 
			if (coalesce(OLD.nr_titulo,0) <> coalesce(NEW.nr_titulo,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Nr título: ' || OLD.nr_titulo;
			end if;
			 
			if (coalesce(OLD.nr_evento,0) <> coalesce(NEW.nr_evento,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Nr evento: ' || OLD.nr_evento;
			end if;
			 
			if (coalesce(OLD.ds_item_mat_proc,0) <> coalesce(NEW.ds_item_mat_proc,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Item/Procedimento: ' || OLD.ds_item_mat_proc;
			end if;
			 
			if (coalesce(OLD.ds_tipo_relacao,0) <> coalesce(NEW.ds_tipo_relacao,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Tipo relação: ' || OLD.ds_tipo_relacao;
			end if;
			 
			if (coalesce(OLD.ds_ato_cooperado,0) <> coalesce(NEW.ds_ato_cooperado,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Ato cooperado: ' || OLD.ds_ato_cooperado;
			end if;
			 
			if (coalesce(OLD.ds_modalidade_contrat,0) <> coalesce(NEW.ds_modalidade_contrat,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Modalidade contratação: ' || OLD.ds_modalidade_contrat;
			end if;
			 
			if (coalesce(OLD.ds_tipo_regulamentacao,0) <> coalesce(NEW.ds_tipo_regulamentacao,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Regulamentação: ' || OLD.ds_tipo_regulamentacao;
			end if;
			 
			if (coalesce(OLD.cd_beneficiario,0) <> coalesce(NEW.cd_beneficiario,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Nr carteira: ' || OLD.cd_beneficiario;
			end if;
			 
			if ((OLD.dt_vencimento <> NEW.dt_vencimento) or (OLD.dt_vencimento is null and NEW.dt_vencimento is not null) or (OLD.dt_vencimento is not null and NEW.dt_vencimento is null)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Data vencimento: ' || OLD.dt_vencimento;
			end if;
			 
			if ((OLD.dt_conhecimento <> NEW.dt_conhecimento) or (OLD.dt_conhecimento is null and NEW.dt_conhecimento is not null) or (OLD.dt_conhecimento is not null and NEW.dt_conhecimento is null)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Data conhecimento: ' || OLD.dt_conhecimento;
			end if;
			 
			if ((OLD.dt_contabilizacao <> NEW.dt_contabilizacao) or (OLD.dt_contabilizacao is null and NEW.dt_contabilizacao is not null) or (OLD.dt_contabilizacao is not null and NEW.dt_contabilizacao is null)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Data contabilização: ' || OLD.dt_contabilizacao;
			end if;
			 
			if ((OLD.dt_referencia <> NEW.dt_referencia) or (OLD.dt_referencia is null and NEW.dt_referencia is not null) or (OLD.dt_referencia is not null and NEW.dt_referencia is null)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Data referência: ' || OLD.dt_referencia;
			end if;
			 
			if ((OLD.dt_recuperacao <> NEW.dt_recuperacao) or (OLD.dt_recuperacao is null and NEW.dt_recuperacao is not null) or (OLD.dt_recuperacao is not null and NEW.dt_recuperacao is null)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Data recuperação: ' || OLD.dt_recuperacao;
			end if;
			 
			if (coalesce(OLD.cd_conta_contabil,0) <> coalesce(NEW.cd_conta_contabil,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Conta contábil: ' || OLD.cd_conta_contabil;
			end if;
			 
			if (coalesce(OLD.nr_documento,0) <> coalesce(NEW.nr_documento,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Nr documento: ' || OLD.nr_documento;
			end if;
			 
			if (coalesce(OLD.vl_evento,0) <> coalesce(NEW.vl_evento,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Valor evento: ' || OLD.vl_evento;
			end if;
			 
			if (coalesce(OLD.cd_beneficiario,0) <> coalesce(NEW.cd_beneficiario,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Nr carteira: ' || OLD.cd_beneficiario;
			end if;
			 
			if (coalesce(OLD.nm_usuario_evento,0) <> coalesce(NEW.nm_usuario_evento,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Usuário evento: ' || OLD.nm_usuario_evento;
			end if;
			 
			if (coalesce(OLD.ds_classif_pel,0) <> coalesce(NEW.ds_classif_pel,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Classificação PEL: ' || OLD.ds_classif_pel;
			end if;
			 
			if (coalesce(OLD.ds_classif_diops,0) <> coalesce(NEW.ds_classif_diops,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Classificação DIOPS: ' || OLD.ds_classif_diops;
			end if;
			 
			if (coalesce(OLD.ds_tipo_documento,0) <> coalesce(NEW.ds_tipo_documento,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Tipo documento: ' || OLD.ds_tipo_documento;
			end if;
			 
			if (coalesce(OLD.nr_contrato,0) <> coalesce(NEW.nr_contrato,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Nr contrato: ' || OLD.nr_contrato;
			end if;
			 
			if ((OLD.dt_emissao <> NEW.dt_emissao) or (OLD.dt_emissao is null and NEW.dt_emissao is not null) or (OLD.dt_emissao is not null and NEW.dt_emissao is null)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Data emissão: ' || OLD.dt_emissao;
			end if;
			 
			if (coalesce(OLD.ds_tipo_contratacao,0) <> coalesce(NEW.ds_tipo_contratacao,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Tipo contratação: ' || OLD.ds_tipo_contratacao;
			end if;
			 
			if (coalesce(OLD.ds_segmentacao,0) <> coalesce(NEW.ds_segmentacao,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Segmentação: ' || OLD.ds_segmentacao;
			end if;
			 
			if (coalesce(OLD.nm_usuario_princ,0) <> coalesce(NEW.nm_usuario_princ,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Usuário principal: ' || OLD.nm_usuario_princ;
			end if;
			 
			if ((OLD.dt_rescisao <> NEW.dt_rescisao) or (OLD.dt_rescisao is null and NEW.dt_rescisao is not null) or (OLD.dt_rescisao is not null and NEW.dt_rescisao is null)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Data rescisão: ' || OLD.dt_rescisao;
			end if;
			 
			if ((OLD.dt_ocorrencia <> NEW.dt_ocorrencia) or (OLD.dt_ocorrencia is null and NEW.dt_ocorrencia is not null) or (OLD.dt_ocorrencia is not null and NEW.dt_ocorrencia is null)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Data ocorrência: ' || OLD.dt_ocorrencia;
			end if;
			 
			if ((OLD.dt_pagamento <> NEW.dt_pagamento) or (OLD.dt_pagamento is null and NEW.dt_pagamento is not null) or (OLD.dt_pagamento is not null and NEW.dt_pagamento is null)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Data pagamento: ' || OLD.dt_pagamento;
			end if;
			 
			if (coalesce(OLD.vl_glosa,0) <> coalesce(NEW.vl_glosa,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Valor glosa: ' || OLD.vl_glosa;
			end if;
			 
			if (coalesce(OLD.vl_pagar,0) <> coalesce(NEW.vl_pagar,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Valor pagar: ' || OLD.vl_pagar;
			end if;
			 
			if (coalesce(OLD.vl_ajuste,0) <> coalesce(NEW.vl_ajuste,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Valor ajuste: ' || OLD.vl_ajuste;
			end if;
			 
			if (coalesce(OLD.vl_coparticipacao,0) <> coalesce(NEW.vl_coparticipacao,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Valor coparticipação: ' || OLD.vl_coparticipacao;
			end if;
			 
			if (coalesce(OLD.nr_protocolo_ans,0) <> coalesce(NEW.nr_protocolo_ans,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Nr protocolo: ' || OLD.nr_protocolo_ans;
			end if;
			 
			if (coalesce(OLD.ds_grupo_ans,0) <> coalesce(NEW.ds_grupo_ans,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Grupo ANS: ' || OLD.ds_grupo_ans;
			end if;
			 
			if (coalesce(OLD.ds_tipo_protocolo,0) <> coalesce(NEW.ds_tipo_protocolo,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Tipo protocolo: ' || OLD.ds_tipo_protocolo;
			end if;
			 
			if (coalesce(OLD.ds_tipo_segurado,0) <> coalesce(NEW.ds_tipo_segurado,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Tipo segurado: ' || OLD.ds_tipo_segurado;
			end if;
			 
			if (coalesce(OLD.ds_tipo_vinculo_operadora,0) <> coalesce(NEW.ds_tipo_vinculo_operadora,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Tipo vinculo: ' || OLD.ds_tipo_vinculo_operadora;
			end if;
			 
			if (coalesce(OLD.cd_conta_contrapartida,0) <> coalesce(NEW.cd_conta_contrapartida,0)) then 
				ds_alt_reg_w := ds_alt_reg_w || ', Conta contrapartida: ' || OLD.cd_conta_contrapartida;
			end if;
 
			ds_log_w := substr(wheb_mensagem_pck.get_texto(394796, 'NR_SEQUENCIA=' || ds_alt_reg_w),1,255);
 
			CALL wheb_usuario_pck.set_ie_executar_trigger('N');
 
			insert into	ctb_reg_auxiliar_log(nr_sequencia, 
							dt_atualizacao, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							nr_seq_reg_auxiliar, 
							ie_tipo_log, 
							ds_log) 
						values (nextval('ctb_reg_auxiliar_log_seq'), 
							LOCALTIMESTAMP, 
							nm_usuario_w, 
							LOCALTIMESTAMP, 
							nm_usuario_w, 
							NEW.nr_seq_reg_auxiliar, 
							'A', 
							ds_log_w);
							 
			CALL wheb_usuario_pck.set_ie_executar_trigger('S');
						 
		end if;
						 
	end if;
 
	end;
end if;
 
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_w_ctb_livro_aux_event_liq_log() FROM PUBLIC;

CREATE TRIGGER w_ctb_livro_aux_event_liq_log
	BEFORE INSERT OR UPDATE OR DELETE ON w_ctb_livro_aux_event_liq FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_w_ctb_livro_aux_event_liq_log();

