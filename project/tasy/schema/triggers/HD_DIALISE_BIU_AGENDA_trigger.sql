-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS hd_dialise_biu_agenda ON hd_dialise CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_hd_dialise_biu_agenda() RETURNS trigger AS $BODY$
DECLARE
    cd_pessoa_fisica_w varchar(10) := coalesce(NEW.cd_pessoa_fisica, OLD.cd_pessoa_fisica);
    dt_agenda_w        timestamp := ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(NEW.dt_dialise, OLD.dt_dialise));
    nr_seq_dialise_w   bigint := coalesce(NEW.nr_sequencia, OLD.nr_sequencia);
    ie_status_agenda_w   varchar(2);
    nr_seq_agenda_w    bigint;
    nm_usuario_w       varchar(20) := NEW.nm_usuario;
	nr_seq_ag_dial_w	hd_agenda_dialise.nr_sequencia%type;
BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'N') then
    goto final;
end if;

    IF TG_OP = 'UPDATE' AND NEW.DT_FIM_DIALISE IS DISTINCT FROM OLD.DT_FIM_DIALISE OR
       TG_OP = 'UPDATE' AND NEW.DT_CANCELAMENTO IS DISTINCT FROM OLD.DT_CANCELAMENTO OR
       TG_OP = 'UPDATE' AND NEW.DT_INICIO_DIALISE IS DISTINCT FROM OLD.DT_INICIO_DIALISE OR
       TG_OP = 'INSERT' THEN
        SELECT MAX(a.nr_seq_agenda)
          INTO STRICT nr_seq_agenda_w
          FROM hd_agenda_dialise a
         WHERE a.cd_pessoa_fisica = cd_pessoa_fisica_w
           AND a.dt_agenda = dt_agenda_w
           AND a.nr_seq_dialise = nr_seq_dialise_w;

        IF nr_seq_agenda_w IS NULL THEN

            SELECT MAX(a.nr_seq_agenda),
					max(a.nr_sequencia)
              INTO STRICT nr_seq_agenda_w,
					nr_seq_ag_dial_w
              FROM hd_agenda_dialise a
             WHERE a.cd_pessoa_fisica = cd_pessoa_fisica_w
               AND a.dt_agenda = dt_agenda_w
               AND a.nr_seq_dialise IS NULL
			   and	a.ie_situacao = 'A';

            UPDATE hd_agenda_dialise
               SET nr_seq_dialise = nr_seq_dialise_w,
                   dt_atualizacao = LOCALTIMESTAMP,
                   nm_usuario     = nm_usuario_w
             WHERE nr_sequencia = nr_seq_ag_dial_w;

        END IF;
		if (TG_OP = 'UPDATE') then
			IF TG_OP = 'UPDATE' AND NEW.DT_INICIO_DIALISE IS DISTINCT FROM OLD.DT_INICIO_DIALISE THEN
				ie_status_agenda_w := 'IN';
			END IF;
		
			IF TG_OP = 'UPDATE' AND NEW.DT_FIM_DIALISE IS DISTINCT FROM OLD.DT_FIM_DIALISE THEN
				ie_status_agenda_w := 'FI';
			END IF;
			IF TG_OP = 'UPDATE' AND NEW.DT_CANCELAMENTO IS DISTINCT FROM OLD.DT_CANCELAMENTO THEN
				ie_status_agenda_w := 'C';
			END IF;
			
			if (ie_status_agenda_w is not null) then
				UPDATE agenda_consulta ac
				   SET ac.ie_status_agenda = ie_status_agenda_w,
					   ac.dt_atualizacao   = LOCALTIMESTAMP,
					   ac.nm_usuario       = nm_usuario_w
				WHERE ac.nr_sequencia = nr_seq_agenda_w;
			end if;	
		end if;	
    END IF;

<<final>>
null;

RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_hd_dialise_biu_agenda() FROM PUBLIC;

CREATE TRIGGER hd_dialise_biu_agenda
	AFTER INSERT OR UPDATE ON hd_dialise FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_hd_dialise_biu_agenda();

