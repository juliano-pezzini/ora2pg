-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pls_protocolo_conta_alt ON pls_protocolo_conta CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pls_protocolo_conta_alt() RETURNS trigger AS $BODY$
declare
 
ds_log_call_w			varchar(1500);
ds_observacao_w			varchar(4000);
 
BEGIN 
/* Permitir desfazer contas originadas do A700 - ebcabral - OS 609162 - 03/02/2014 
if	(:old.ie_status != :new.ie_status) and 
	(:old.ie_status	= '7') then 
	wheb_mensagem_pck.exibir_mensagem_abort(250624); 
end if; */
 
if (coalesce(wheb_usuario_pck.get_ie_lote_contabil,'N') = 'N') and (coalesce(wheb_usuario_pck.get_ie_atualizacao_contabil,'N') = 'N') then 
	if (coalesce(wheb_usuario_pck.get_ie_executar_trigger,'S') = 'S') then 
		if	(( pls_se_aplicacao_tasy = 'N') and (coalesce(wheb_usuario_pck.get_nm_usuario,'X') = 'X')) or (NEW.ie_tipo_protocolo is null) then 
 
			ds_log_call_w := substr(pls_obter_detalhe_exec(false),1,1500);
			ds_observacao_w := 'Protocolo: '||OLD.nr_sequencia;
 
			if (coalesce(OLD.nr_seq_prestador,0) <> coalesce(NEW.nr_seq_prestador,0)) then 
				ds_observacao_w :=	ds_observacao_w||chr(13)||chr(10)|| 
							'Prestador: '||chr(13)||chr(10)|| 
							chr(9)||'Anterior: '||OLD.nr_seq_prestador||' - Modificada: '||NEW.nr_seq_prestador||chr(13)||chr(10);
			end if;
 
			if (coalesce(OLD.ie_tipo_protocolo,'X') <> coalesce(NEW.ie_tipo_protocolo,'X')) then 
				ds_observacao_w :=	ds_observacao_w||chr(13)||chr(10)|| 
							'Tipo protocolo: '||chr(13)||chr(10)|| 
							chr(9)||'Anterior: '||OLD.ie_tipo_protocolo||' - Modificada: '||NEW.ie_tipo_protocolo||chr(13)||chr(10);
			end if;
 
			if (coalesce(OLD.nr_seq_lote,0) <> coalesce(NEW.nr_seq_lote,0)) then 
				ds_observacao_w :=	ds_observacao_w||chr(13)||chr(10)|| 
							'Lote: '||chr(13)||chr(10)|| 
							chr(9)||'Anterior: '||OLD.nr_seq_lote||' - Modificada: '||NEW.nr_seq_lote||chr(13)||chr(10);
			end if;
 
			if (coalesce(OLD.nr_seq_lote_conta,0) <> coalesce(NEW.nr_seq_lote_conta,0)) then 
				ds_observacao_w :=	ds_observacao_w||chr(13)||chr(10)|| 
							'Lote de contas: '||chr(13)||chr(10)|| 
							chr(9)||'Anterior: '||OLD.nr_seq_lote_conta||' - Modificada: '||NEW.nr_seq_lote_conta||chr(13)||chr(10);
			end if;
 
			if (coalesce(OLD.ie_status,'X') <> coalesce(NEW.ie_status,'X')) then 
				ds_observacao_w :=	ds_observacao_w||chr(13)||chr(10)|| 
							'Status: '||chr(13)||chr(10)|| 
							chr(9)||'Anterior: '||OLD.ie_status||' - Modificada: '||NEW.ie_status||chr(13)||chr(10);
			end if;
 
			if (coalesce(OLD.ie_situacao,'X') <> coalesce(NEW.ie_situacao,'X')) then 
				ds_observacao_w :=	ds_observacao_w||chr(13)||chr(10)|| 
							'Situação: '||chr(13)||chr(10)|| 
							chr(9)||'Anterior: '||OLD.ie_situacao||' - Modificada: '||NEW.ie_situacao||chr(13)||chr(10);
			end if;
 
			if (coalesce(to_char(OLD.dt_protocolo),'X') <> coalesce(to_char(NEW.dt_protocolo),'X')) then 
				ds_observacao_w :=	ds_observacao_w||chr(13)||chr(10)|| 
							'Dt. protocolo: '||chr(13)||chr(10)|| 
							chr(9)||'Anterior: '||to_char(OLD.dt_protocolo, 'dd/mm/yyyy')||' - Modificada: '||to_char(NEW.dt_protocolo, 'dd/mm/yyyy')||chr(13)||chr(10);
			end if;
 
			if (coalesce(to_char(OLD.dt_recebimento),'X') <> coalesce(to_char(NEW.dt_recebimento),'X')) then 
				ds_observacao_w :=	ds_observacao_w||chr(13)||chr(10)|| 
							'Dt. recebimento: '||chr(13)||chr(10)|| 
							chr(9)||'Anterior: '||to_char(OLD.dt_recebimento, 'dd/mm/yyyy')||' - Modificada: '||to_char(NEW.dt_recebimento, 'dd/mm/yyyy')||chr(13)||chr(10);
			end if;
 
			if (coalesce(to_char(OLD.dt_mes_competencia),'X') <> coalesce(to_char(NEW.dt_mes_competencia),'X')) then 
				ds_observacao_w :=	ds_observacao_w||chr(13)||chr(10)|| 
							'Dt. mês competência: '||chr(13)||chr(10)|| 
							chr(9)||'Anterior: '||to_char(OLD.dt_mes_competencia, 'dd/mm/yyyy')||' - Modificada: '||to_char(NEW.dt_mes_competencia, 'dd/mm/yyyy')||chr(13)||chr(10);
			end if;
 
			insert into plsprco_cta( 	nr_sequencia, dt_atualizacao, nm_usuario, 
								dt_atualizacao_nrec, nm_usuario_nrec, nm_tabela, 
								ds_log, ds_log_call, ds_funcao_ativa, 
								ie_aplicacao_tasy, nm_maquina, nr_seq_protocolo, ie_opcao ) 
					values ( 	nextval('plsprco_cta_seq'), LOCALTIMESTAMP, substr(coalesce(wheb_usuario_pck.get_nm_usuario,'Usuário não identificado '),1,14), 
								LOCALTIMESTAMP, substr(coalesce(wheb_usuario_pck.get_nm_usuario,'Usuário não identificado '),1,14), 'PLS_PROTOCOLO_CONTA', 
								ds_observacao_w, ds_log_call_w, obter_funcao_ativa, 
								pls_se_aplicacao_tasy, wheb_usuario_pck.get_machine, OLD.nr_sequencia, '0');
		end if;
	end if;
end if;
 
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pls_protocolo_conta_alt() FROM PUBLIC;

CREATE TRIGGER pls_protocolo_conta_alt
	BEFORE UPDATE ON pls_protocolo_conta FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pls_protocolo_conta_alt();

