-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pls_conta_medica_resumo_atual ON pls_conta_medica_resumo CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pls_conta_medica_resumo_atual() RETURNS trigger AS $BODY$
declare
ds_log_call_w			varchar(1500);
ds_observacao_w			varchar(4000);
ie_tipo_conta_w			pls_conta.ie_tipo_conta%type;

BEGIN
if (coalesce(wheb_usuario_pck.get_ie_lote_contabil,'N') = 'N') and (coalesce(wheb_usuario_pck.get_ie_atualizacao_contabil,'N') = 'N') then
	if (coalesce(NEW.ie_situacao, 'A') <> 'I') then
		if (NEW.vl_liberado < 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(225848);
		elsif (NEW.vl_lib_original < 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(225848);
		end if;
	end if;

	if (TG_OP = 'DELETE') then
		if (OLD.nr_seq_lote_pgto is not null) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(226008);
		end if;

	end if;

	if (coalesce(OLD.dt_competencia_pgto,LOCALTIMESTAMP) <> coalesce(NEW.dt_competencia_pgto,LOCALTIMESTAMP)) then
			ds_observacao_w :=	ds_observacao_w||chr(13)||chr(10)||
						' Seq resumo : '||NEW.nr_sequencia||chr(13)||chr(10)||
						'Compet'||chr(234)||'ncia : '||chr(13)||chr(10)||
						chr(9)||'Anterior: '||OLD.dt_competencia_pgto||' - Modificada: '||NEW.dt_competencia_pgto||chr(13)||chr(10);
						
			ds_log_call_w := substr(pls_obter_detalhe_exec(false),1,1500);
	end if;
	
	if ( TG_OP = 'UPDATE' ) then
	
		if (OLD.nr_seq_grupo_ans is not null and NEW.nr_seq_grupo_ans is null and NEW.vl_glosa > 0) then
			ds_observacao_w := ds_observacao_w||chr(13)||chr(10)||
					'Conta : '||OLD.nr_seq_conta||'; Conta proc : '||OLD.nr_seq_conta_proc||' ; Conta mat: '||OLD.nr_seq_conta_mat||
							'; Grupo ANS Ant: ' ||OLD.nr_seq_grupo_ans||'; Grupo ANS Atual: ' || NEW.nr_seq_grupo_ans||'; ';
			ds_log_call_w := substr(pls_obter_detalhe_exec(false),1,1500);			
		end if;		
	end if;	
	
	--Se for alterada a data de competencia de pagto, log independentemente de ser pelo tasy ou por fora

	if ( pls_se_aplicacao_tasy = 'S') and ( TG_OP = 'UPDATE' ) and (ds_observacao_w is not null) then --Coloquei essa restricao para nao entrar toda a hora no insert
	
		insert into plsprco_cta( 	nr_sequencia, dt_atualizacao, nm_usuario,
							dt_atualizacao_nrec, nm_usuario_nrec, nm_tabela,
							ds_log, ds_log_call, ds_funcao_ativa,
							ie_aplicacao_tasy, nm_maquina, ie_opcao)
				values ( 	nextval('plsprco_cta_seq'), LOCALTIMESTAMP, substr(coalesce(wheb_usuario_pck.get_nm_usuario,'Usu'||chr(225)||'rio n'||chr(227)||'o identificado '),1,14),
							LOCALTIMESTAMP, substr(coalesce(wheb_usuario_pck.get_nm_usuario,'Usu'||chr(225)||'rio n'||chr(227)||'o identificado '),1,14), 'PLS_CONTA_MEDICA_RESUMO',
							ds_observacao_w, ds_log_call_w, obter_funcao_ativa,
							'N', wheb_usuario_pck.get_machine, '0');	
	end if;

	if	((TG_OP = 'INSERT') and (coalesce(NEW.vl_liberado,0) > 0) and (coalesce(NEW.qt_item,0) = 0) and (coalesce(NEW.vl_glosa,0) = 0))
		or
		((TG_OP = 'UPDATE') and
		 (
		  (coalesce(OLD.vl_liberado,0) != coalesce(NEW.vl_liberado,0)) or (coalesce(OLD.qt_item,0) != coalesce(NEW.qt_item,0)) or (coalesce(OLD.vl_glosa,0) != coalesce(NEW.vl_glosa,0))
		 ) and (coalesce(NEW.vl_liberado, 0) > 0) and (coalesce(NEW.qt_item,0) = 0) and (coalesce(NEW.vl_glosa,0) = 0)) then


		ds_observacao_w :=	ds_observacao_w||chr(13)||chr(10)||
					'Conta : '||NEW.nr_seq_conta||'; Conta proc : '||NEW.nr_seq_conta_proc||' ; Conta mat: '||NEW.nr_seq_conta_mat||'; '||chr(13)||chr(10)||
					'Item foi liberado com quantidade zero e sem valor de glosa'||chr(13)||chr(10);
		

		ds_log_call_w := substr(pls_obter_detalhe_exec(false),1,1500);
		
		insert into plsprco_cta( 	nr_sequencia, dt_atualizacao, nm_usuario,
							dt_atualizacao_nrec, nm_usuario_nrec, nm_tabela,
							ds_log, ds_log_call, ds_funcao_ativa,
							ie_aplicacao_tasy, nm_maquina, ie_opcao)
		values ( 	nextval('plsprco_cta_seq'), LOCALTIMESTAMP, substr(coalesce(wheb_usuario_pck.get_nm_usuario,'Usu'||chr(225)||'rio n'||chr(227)||'o identificado '),1,14),
					LOCALTIMESTAMP, substr(coalesce(wheb_usuario_pck.get_nm_usuario,'Usu'||chr(225)||'rio n'||chr(227)||'o identificado '),1,14), 'PLS_CONTA_MEDICA_RESUMO',
					ds_observacao_w, ds_log_call_w, obter_funcao_ativa,
					'N', wheb_usuario_pck.get_machine, '0');

	end if;

	
	if ( pls_se_aplicacao_tasy = 'N') and ( TG_OP = 'UPDATE' ) then

		ds_log_call_w := substr(pls_obter_detalhe_exec(false),1,1500);

		ds_observacao_w := ds_observacao_w||chr(13)||chr(10)||
				'Conta : '||OLD.nr_seq_conta||'; Conta proc : '||OLD.nr_seq_conta_proc||' ; Conta mat: '||OLD.nr_seq_conta_mat||'; ';
		if (coalesce(OLD.nr_seq_item,0) <> coalesce(NEW.nr_seq_item,0)) then
			ds_observacao_w :=	ds_observacao_w||chr(13)||chr(10)||
						'Item: '||chr(13)||chr(10)||
						chr(9)||'Anterior: '||OLD.nr_seq_item||' - Modificada: '||NEW.nr_seq_item||chr(13)||chr(10);
		end if;

		if (coalesce(OLD.ie_proc_mat,'X') <> coalesce(NEW.ie_proc_mat,'X')) then
			ds_observacao_w :=	ds_observacao_w||chr(13)||chr(10)||
						'Proc/Mat: '||chr(13)||chr(10)||
						chr(9)||'Anterior: '||OLD.ie_proc_mat||' - Modificada: '||NEW.ie_proc_mat||chr(13)||chr(10);
		end if;

		if (coalesce(OLD.NR_SEQ_CONTA,0) <> coalesce(NEW.NR_SEQ_CONTA,0)) then
			ds_observacao_w :=	ds_observacao_w||chr(13)||chr(10)||
						'Conta: '||chr(13)||chr(10)||
						chr(9)||'Anterior: '||OLD.NR_SEQ_CONTA||' - Modificada: '||NEW.NR_SEQ_CONTA||chr(13)||chr(10);
		end if;

		if (coalesce(OLD.NR_SEQ_LOTE_PGTO,0) <> coalesce(NEW.NR_SEQ_LOTE_PGTO,0)) then
			ds_observacao_w :=	ds_observacao_w||chr(13)||chr(10)||
						'Lote de pagamento: '||chr(13)||chr(10)||
						chr(9)||'Anterior: '||OLD.NR_SEQ_LOTE_PGTO||' - Modificada: '||NEW.NR_SEQ_LOTE_PGTO||chr(13)||chr(10);
		end if;

		if (coalesce(OLD.VL_LIB_ORIGINAL,0) <> coalesce(NEW.VL_LIB_ORIGINAL,0)) then
			ds_observacao_w :=	ds_observacao_w||chr(13)||chr(10)||
						'Vl lib original: '||chr(13)||chr(10)||
						chr(9)||'Anterior: '||OLD.VL_LIB_ORIGINAL||' - Modificada: '||NEW.VL_LIB_ORIGINAL||chr(13)||chr(10);
		end if;

		if (coalesce(OLD.VL_LIBERADO,0) <> coalesce(NEW.VL_LIBERADO,0)) then
			ds_observacao_w :=	ds_observacao_w||chr(13)||chr(10)||
						'Vl liberado: '||chr(13)||chr(10)||
						chr(9)||'Anterior: '||OLD.VL_LIBERADO||' - Modificada: '||NEW.VL_LIBERADO||chr(13)||chr(10);
		end if;
		
		if (coalesce(OLD.nr_seq_evento,0) <> coalesce(NEW.nr_seq_evento,0)) then
			ds_observacao_w :=	ds_observacao_w||chr(13)||chr(10)||
						'Evento: '||chr(13)||chr(10)||
						chr(9)||'Anterior: '||OLD.nr_seq_evento||' - Modificada: '||NEW.nr_seq_evento||chr(13)||chr(10);
		end if;
		
		if (coalesce(OLD.nr_seq_pag_item,0) <> coalesce(NEW.nr_seq_pag_item,0)) then
			ds_observacao_w :=	ds_observacao_w||chr(13)||chr(10)||
						'Pagamento item: '||chr(13)||chr(10)||
						chr(9)||'Anterior: '||OLD.nr_seq_pag_item||' - Modificada: '||NEW.nr_seq_pag_item||chr(13)||chr(10);
		end if;

		if (ds_observacao_w is not null) then --Coloquei essa restricao para nao entrar toda a hora no insert
			insert into plsprco_cta( 	nr_sequencia, dt_atualizacao, nm_usuario,
								dt_atualizacao_nrec, nm_usuario_nrec, nm_tabela,
								ds_log, ds_log_call, ds_funcao_ativa,
								ie_aplicacao_tasy, nm_maquina, ie_opcao)
					values ( 	nextval('plsprco_cta_seq'), LOCALTIMESTAMP, substr(coalesce(wheb_usuario_pck.get_nm_usuario,'Usu'||chr(225)||'rio n'||chr(227)||'o identificado '),1,14),
								LOCALTIMESTAMP, substr(coalesce(wheb_usuario_pck.get_nm_usuario,'Usu'||chr(225)||'rio n'||chr(227)||'o identificado '),1,14), 'PLS_CONTA_MEDICA_RESUMO',
								ds_observacao_w, ds_log_call_w, obter_funcao_ativa,
								'N', wheb_usuario_pck.get_machine, '0');
		end if;
	end if;
end if;

IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pls_conta_medica_resumo_atual() FROM PUBLIC;

CREATE TRIGGER pls_conta_medica_resumo_atual
	BEFORE INSERT OR UPDATE OR DELETE ON pls_conta_medica_resumo FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pls_conta_medica_resumo_atual();

