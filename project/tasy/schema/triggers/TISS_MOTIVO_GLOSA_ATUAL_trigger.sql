-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS tiss_motivo_glosa_atual ON tiss_motivo_glosa CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_tiss_motivo_glosa_atual() RETURNS trigger AS $BODY$
declare

ds_log_w	log_tasy.ds_log%type;
nm_usuario_w	usuario.nm_usuario%type;
cd_funcao_w	bigint;
ds_funcao_w	funcao.ds_aplicacao%type;
nm_id_sid_w	pls_controle_upd_obj.nm_id_sid%type;
nm_id_serial_w	pls_controle_upd_obj.nm_id_serial%type;
nm_osuser_w	pls_controle_upd_obj.nm_osuser%type;
nm_machine_w	pls_controle_upd_obj.nm_machine%type;
nm_terminal_w	pls_controle_upd_obj.nm_terminal%type;
nm_program_w	pls_controle_upd_obj.nm_program%type;
nm_module_w	pls_controle_upd_obj.nm_module%type;
nm_action_w	pls_controle_upd_obj.nm_action%type;
ds_log_call_w	varchar(1500);

BEGIN
-- pega o usuário do tasy, código da função e descrição da função

nm_usuario_w	:= coalesce(wheb_usuario_pck.get_nm_usuario, 'banco de dados');
cd_funcao_w	:= wheb_usuario_pck.get_cd_funcao;

select	max(ds_aplicacao)
into STRICT	ds_funcao_w
from	funcao
where	cd_funcao = cd_funcao_w;

-- pega os dados da sessão atual

SELECT * FROM pls_util_pck.obter_dados_sessao(	nm_id_sid_w, nm_id_serial_w, nm_osuser_w, nm_machine_w, nm_terminal_w, nm_program_w, nm_module_w, nm_action_w) INTO STRICT 	nm_id_sid_w, nm_id_serial_w, nm_osuser_w, nm_machine_w, nm_terminal_w, nm_program_w, nm_module_w, nm_action_w;

					
if (TG_OP = 'INSERT') then
	
	ds_log_w := ' Inserido';
			
elsif (TG_OP = 'UPDATE') then

	ds_log_w := ' Alterado';
end if;

ds_log_w := substr( ds_log_w || ' tabela tiss_motivo_glosa; sequencia ' || NEW.nr_sequencia || '; cd_motivo_glosa ' || NEW.cd_motivo_glosa ||
		'; usuário ' || nm_usuario_w || '; função ' || cd_funcao_w || ' - ' || coalesce(ds_funcao_w, 'via banco') ||
		'; nm_id_sid ' || nm_id_sid_w || '; nm_id_serial ' || nm_id_serial_w || '; nm_osuser '|| nm_osuser_w ||
		'; nm_machine ' || nm_machine_w || '; nm_terminal ' || nm_terminal_w || '; nm_program ' || nm_program_w ||
		'; nm_module ' || nm_module_w || '; nm_action ' || nm_action_w, 1, 2000);
		
ds_log_call_w := substr(	' Função ativa : '|| obter_funcao_ativa || chr(13) ||chr(10)||
							' CallStack: '|| chr(13) || chr(10)|| dbms_utility.format_call_stack,1,1500);
		
ds_log_w := substr( ds_log_w ||ds_log_call_w, 1, 2000);

insert into log_tasy(
	cd_log,
	ds_log,
	dt_atualizacao,
	nm_usuario
) values (
	1,
	ds_log_w,
	LOCALTIMESTAMP,
	nm_usuario_w
);

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_tiss_motivo_glosa_atual() FROM PUBLIC;

CREATE TRIGGER tiss_motivo_glosa_atual
	BEFORE INSERT OR UPDATE ON tiss_motivo_glosa FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_tiss_motivo_glosa_atual();

