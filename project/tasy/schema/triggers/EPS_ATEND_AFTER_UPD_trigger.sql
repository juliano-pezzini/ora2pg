-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS eps_atend_after_upd ON episodio_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_eps_atend_after_upd() RETURNS trigger AS $BODY$
declare
coding_status_w	 bigint;
status_w varchar(1);

pragma autonomous_transaction;

BEGIN

    IF (coalesce(wheb_usuario_pck.get_ie_executar_trigger, 'S') = 'S') THEN
        SELECT coalesce(max(1),0) status
        INTO STRICT coding_status_w

        WHERE EXISTS (SELECT 1
                      
                      WHERE NEW.dt_cancelamento IS NOT NULL OR NEW.dt_fim_episodio IS NOT NULL)
            OR EXISTS (SELECT 1
                       FROM atendimento_paciente ap
                       WHERE ap.nr_atendimento = OBTER_ATENDIMENTO_EPISODIO(NEW.nr_sequencia)
                        AND (ap.dt_cancelamento is not null));

        IF (NEW.dt_cancelamento is null and NEW.dt_fim_episodio is null) THEN
          status_w := 'P';
        ELSIF (NEW.dt_cancelamento is not null)THEN
          status_w := 'C';
        ELSIF (NEW.dt_fim_episodio is not null)THEN
          status_w := 'F';
        END IF;

        IF (status_w = 'F' and coding_status_w = 1) THEN
            UPDATE CONTA_PACIENTE cont
            SET(IE_STATUS_ACERTO,
                DT_CONTA_DEFINITIVA,
                DT_ATUALIZACAO,
                NM_USUARIO) = (
                                SELECT 2, LOCALTIMESTAMP, LOCALTIMESTAMP, WHEB_USUARIO_PCK.GET_NM_USUARIO
                                FROM atendimento_paciente at
                                WHERE at.nr_seq_episodio = NEW.nr_sequencia
                                    and cont.nr_atendimento = at.nr_atendimento)
            WHERE EXISTS (SELECT 1
              FROM atendimento_paciente at
              WHERE at.nr_seq_episodio = NEW.nr_sequencia
                  and cont.nr_atendimento = at.nr_atendimento);
        ELSIF (coding_status_w <> 1) THEN
            UPDATE CONTA_PACIENTE cont
            SET(IE_STATUS_ACERTO,
                DT_CONTA_DEFINITIVA,
                DT_ATUALIZACAO,
                NM_USUARIO) = (
                                SELECT 1, null, LOCALTIMESTAMP, WHEB_USUARIO_PCK.GET_NM_USUARIO
                                FROM atendimento_paciente at
                                WHERE at.nr_seq_episodio = NEW.nr_sequencia
                                    and cont.nr_atendimento = at.nr_atendimento)
            WHERE EXISTS (SELECT 1
                          FROM atendimento_paciente at
                          WHERE at.nr_seq_episodio = NEW.nr_sequencia
                              and cont.nr_atendimento = at.nr_atendimento);
        END IF;
		commit;
    END IF;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_eps_atend_after_upd() FROM PUBLIC;

CREATE TRIGGER eps_atend_after_upd
	AFTER UPDATE ON episodio_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_eps_atend_after_upd();

