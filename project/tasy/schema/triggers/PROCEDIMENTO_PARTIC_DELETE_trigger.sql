-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS procedimento_partic_delete ON procedimento_participante CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_procedimento_partic_delete() RETURNS trigger AS $BODY$
declare
 ds_procedimento_w		varchar(255);
 cd_procedimento_w		bigint;
 nr_seq_proc_interno_w		bigint;
 nr_seq_exame_w			bigint;
 nr_atendimento_w			bigint;
 nr_interno_conta_w		bigint;
 qt_lote_pre_fat_w			bigint := 0;
 ie_excluir_proc_repasse_w		parametro_faturamento.ie_excluir_proc_repasse%type;
 cd_estabelecimento_w		atendimento_paciente.cd_estabelecimento%type;
 vl_repasse_pend_w		procedimento_repasse.vl_repasse%type;
 vl_repasse_w 			procedimento_repasse.vl_repasse%type;
 
pragma autonomous_transaction;
 
BEGIN 
 
select	a.cd_procedimento, 
	b.ds_procedimento, 
	coalesce(a.nr_seq_proc_interno,0), 
	coalesce(a.nr_seq_exame,0), 
	nr_atendimento, 
	nr_interno_conta 
into STRICT	cd_procedimento_w, 
	ds_procedimento_w, 
	nr_seq_proc_interno_w, 
	nr_seq_exame_w, 
	nr_atendimento_w, 
	nr_interno_conta_w 
from	procedimento_paciente a, 
	procedimento b 
where	a.cd_procedimento = b.cd_procedimento 
and	a.ie_origem_proced = b.ie_origem_proced 
and	a.nr_sequencia	  = OLD.nr_sequencia;
 
select	max(coalesce(cd_estabelecimento,0)) 
into STRICT	cd_estabelecimento_w 
from	atendimento_paciente 
where	nr_atendimento = nr_atendimento_w;
 
select	max(coalesce(ie_excluir_proc_repasse,'N')) 
into STRICT	ie_excluir_proc_repasse_w 
from	parametro_faturamento 
where	cd_estabelecimento	= cd_estabelecimento_w;
 
if (ie_excluir_proc_repasse_w = 'S') then 
	select	count(1) 
	into STRICT	qt_lote_pre_fat_w 
	from	pre_fatur_conta	a 
	where	a.nr_interno_conta	= nr_interno_conta_w  LIMIT 1;
		 
	select	coalesce(sum(a.vl_repasse),0) 
	into STRICT	vl_repasse_pend_w 
	from	procedimento_repasse	a 
	where	a.nr_repasse_terceiro is not null 
	and	a.nr_seq_procedimento	= OLD.nr_sequencia 
	and	nr_seq_partic		= OLD.nr_seq_partic;
end if;
	 
select	coalesce(sum(a.vl_repasse),0) 
into STRICT	vl_repasse_w 
from	procedimento_repasse	a 
where	a.nr_seq_procedimento	= OLD.nr_sequencia 
and	nr_seq_partic		= OLD.nr_seq_partic;
	 
if	((ie_excluir_proc_repasse_w = 'N') or (vl_repasse_pend_w > 0) or (qt_lote_pre_fat_w = 0)) and (vl_repasse_w > 0) then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(188917,	'nr_sequencia=' || OLD.nr_sequencia || 
							';nr_interno_conta=' || nr_interno_conta_w || 
							';vl_repasse=' || vl_repasse_w || 
							';vl_repasse_pend=' || vl_repasse_pend_w || 
							';qt_lote_pre_fat=' || qt_lote_pre_fat_w);
	/* sequência: #@nr_sequencia#@ 
	conta: #@nr_interno_conta#@ 
	este procedimento possui repasse gerado! 
	não é possível excluir o procedimento. 
	valor do repasse: #@vl_repasse#@ */
 
elsif (ie_excluir_proc_repasse_w = 'S') then 
	delete	from procedimento_repasse 
	where	nr_seq_procedimento	= OLD.nr_sequencia 
	and	nr_seq_partic		= OLD.nr_seq_partic;
end if;
 
		 
insert into proc_partic_log(dt_atualizacao, 
				dt_atualizacao_nrec, 
				ie_acao, 
				nm_usuario, 
				nm_usuario_nrec, 
				nr_seq_propaci, 
				nr_sequencia, 
				vl_participante, 
				cd_procedimento, 
				ds_procedimento, 
				nr_seq_proc_interno, 
				nr_seq_exame, 
				ie_funcao, 
				ie_emite_conta, 
				nr_seq_partic, 
				vl_conta, 
				cd_especialidade, 
				cd_medico_convenio, 
				cd_cgc, 
				nr_atendimento, 
				nr_interno_conta, 
				cd_pessoa_fisica) 
values ( LOCALTIMESTAMP, 
    LOCALTIMESTAMP, 
    'E', 
    wheb_usuario_pck.get_nm_usuario, 
    wheb_usuario_pck.get_nm_usuario,     		 
    OLD.nr_sequencia, 
    nextval('proc_pac_log_seq'), 		 
    OLD.vl_participante, 
	  cd_procedimento_w, 
		ds_procedimento_w, 
		nr_seq_proc_interno_w, 
		nr_seq_exame_w, 
		OLD.ie_funcao, 
		OLD.ie_emite_conta, 
		OLD.nr_seq_partic, 
		OLD.vl_conta, 
		OLD.cd_especialidade, 
		OLD.cd_medico_convenio, 
		OLD.cd_cgc, 
		nr_atendimento_w, 
		nr_interno_conta_w, 
		OLD.cd_pessoa_fisica);
		 
commit;
		 
RETURN OLD;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_procedimento_partic_delete() FROM PUBLIC;

CREATE TRIGGER procedimento_partic_delete
	BEFORE DELETE ON procedimento_participante FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_procedimento_partic_delete();

