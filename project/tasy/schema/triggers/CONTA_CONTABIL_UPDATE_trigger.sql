-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS conta_contabil_update ON conta_contabil CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_conta_contabil_update() RETURNS trigger AS $BODY$
declare

ds_log_w	varchar(2000);
qt_registro_w	smallint;

BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
	BEGIN
	if	not(NEW.ie_centro_custo in ('S','N')) then
		/* O campo Exige Centro de Custo deve ter valor S, N */


		CALL wheb_mensagem_pck.exibir_mensagem_abort(266390);
	end if;

	if (obter_pais_sistema(wheb_usuario_pck.get_cd_perfil,NEW.nm_usuario,wheb_usuario_pck.get_cd_estabelecimento) = 1) and (coalesce(NEW.ie_centro_custo,'X') <> coalesce(OLD.ie_centro_custo,'X')) then
		BEGIN
		select	count(*)
		into STRICT	qt_registro_w
		from (SELECT	1
			from	ctb_movimento a
			where	a.cd_conta_credito = NEW.cd_conta_contabil
			
union all

			SELECT	1
			from	ctb_movimento a
			where	a.cd_conta_debito = NEW.cd_conta_contabil  LIMIT 1) alias6;

		if (qt_registro_w > 0) then
			BEGIN
			/* Esta conta contabil ja possui movimentacao na contabilidade, desta forma o detalhamento por centro de custo nao pode ser alterado */


			CALL wheb_mensagem_pck.exibir_mensagem_abort(1009703);
			end;
		end if;

		end;
	end if;
	
	if	((NEW.cd_classificacao <> OLD.cd_classificacao) OR (NEW.cd_classif_superior <> OLD.cd_classif_superior)) then
		BEGIN
		select	count(*)
		into STRICT	qt_registro_w
		from (SELECT	1
			from	ctb_saldo c
			where	c.cd_conta_contabil = NEW.cd_conta_contabil  LIMIT 1) alias4;

		if (qt_registro_w > 0) then
			BEGIN			
			/*Nao eh permitido alterar a classificacao e classificacao superior da conta contabil #@CD_CONTA_CONTABIL#@ - #@DS_CONTA_CONTABIL#@, porque ela ja   possui movimentacao na contabilidade.
			Utilize a regra de classificacao por periodo para modificar a classificacao e classificacao superior desta conta.*/

			CALL wheb_mensagem_pck.exibir_mensagem_abort(1141110, substr('CD_CONTA_CONTABIL=' || NEW.cd_conta_contabil || ';' ||
										'DS_CONTA_CONTABIL=' || NEW.ds_conta_contabil, 1, 2000));
			end;
		end if;

		end;
	end if;

	if (NEW.ie_tipo <> OLD.ie_tipo) then
	/* Alteracao do TIPO da conta. De: #@OLD_IE_TIPO#@ Para: #@NEW_IE_TIPO#@ */


		ds_log_w	:= substr(wheb_mensagem_pck.get_texto(818830, 'OLD_IE_TIPO=' || OLD.ie_tipo || ';NEW_IE_TIPO=' || NEW.ie_tipo),1,500);
		CALL ctb_gravar_log_conta(NEW.cd_conta_contabil, ds_log_w, NEW.nm_usuario);
	end if;

	if (NEW.cd_classificacao <> OLD.cd_classificacao) then
	/* Alteracao da CLASSIFICACAO da conta. De: #@OLD_CD_CLASSIFICACAO#@ Para: #@NEW_CD_CLASSIFICACAO#@ */


		ds_log_w	:= substr(wheb_mensagem_pck.get_texto(818831, 'OLD_CD_CLASSIFICACAO=' || OLD.cd_classificacao || ';NEW_CD_CLASSIFICACAO=' || NEW.cd_classificacao),1,2000);
		CALL ctb_gravar_log_conta(NEW.cd_conta_contabil, ds_log_w, NEW.nm_usuario);
	end if;

	if (NEW.cd_classif_superior <> OLD.cd_classif_superior) then
	/* Alteracao da CLASSIFICACAO SUPERIOR da conta. De: #@OLD_CD_CLASSIF_SUPERIOR#@ Para: #@NEW_CD_CLASSIF_SUPERIOR#@ */


		ds_log_w	:= substr(wheb_mensagem_pck.get_texto(818832, 'OLD_CD_CLASSIF_SUPERIOR=' || OLD.cd_classif_superior || ';NEW_CD_CLASSIF_SUPERIOR=' || NEW.cd_classif_superior),1,2000);
		CALL ctb_gravar_log_conta(NEW.cd_conta_contabil, ds_log_w, NEW.nm_usuario);
	end if;

	if (NEW.cd_grupo <> OLD.cd_grupo) then
	/* Alteracao do GRUPO da conta. De: #@OLD_CD_GRUPO#@ Para: #@NEW_CD_GRUPO#@ */


		ds_log_w	:= substr(wheb_mensagem_pck.get_texto(818833, 'OLD_CD_GRUPO=' || OLD.cd_grupo || ';NEW_CD_GRUPO=' || NEW.cd_grupo),1,2000);
		CALL ctb_gravar_log_conta(NEW.cd_conta_contabil, ds_log_w, NEW.nm_usuario);
	end if;
	
	end;
end if;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_conta_contabil_update() FROM PUBLIC;

CREATE TRIGGER conta_contabil_update
	BEFORE UPDATE ON conta_contabil FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_conta_contabil_update();

