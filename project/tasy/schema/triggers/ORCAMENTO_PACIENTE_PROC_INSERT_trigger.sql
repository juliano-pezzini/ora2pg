-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS orcamento_paciente_proc_insert ON orcamento_paciente_proc CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_orcamento_paciente_proc_insert() RETURNS trigger AS $BODY$
declare

ie_tipo_convenio_w		smallint;
cd_setor_w			integer;
cd_material_exame_w		varchar(20);
ie_tipo_atendimento_w		smallint;
cd_estabelecimento_w		integer;
cd_plano_convenio_w		varchar(10);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
ds_erro_w			varchar(255);
nr_seq_proc_interno_aux_w	bigint;
cd_estabelecimento_orc_w	integer;
ie_tipo_atendimento_orc_w	smallint;
cd_plano_convenio_orc_w		varchar(10);
nr_atendimento_w		bigint;
cd_convenio_w			integer;
cd_categoria_convenio_w		varchar(10);

BEGIN

if (NEW.nr_seq_proc_interno is null) then
	select	max(cd_estabelecimento),
		max(ie_tipo_atendimento),
		max(obter_plano_conv_atend(nr_atendimento)),
		max(nr_atendimento), 
		max(cd_convenio), 
		max(cd_categoria)
	into STRICT	cd_estabelecimento_orc_w,
		ie_tipo_atendimento_orc_w,
		cd_plano_convenio_orc_w,
		nr_atendimento_w, 
		cd_convenio_w, 
		cd_categoria_convenio_w
	from	orcamento_paciente
	where	nr_sequencia_orcamento = NEW.nr_sequencia_orcamento;


	if ((cd_estabelecimento_orc_w is null) or (ie_tipo_atendimento_orc_w is null) or (cd_plano_convenio_orc_w is null)) then
		select	max(cd_estabelecimento),
			max(ie_tipo_atendimento),
			max(obter_plano_conv_atend(nr_atendimento))
		into STRICT	cd_estabelecimento_w,
			ie_tipo_atendimento_w,
			cd_plano_convenio_w
		from	atendimento_paciente
		where	nr_atendimento	= nr_atendimento_w;
	end if;

	if (NEW.nr_seq_exame is not null) then
		select	max(ie_tipo_convenio)
		into STRICT	ie_tipo_convenio_w
		from 	convenio
		where 	cd_convenio = cd_convenio_w;

		cd_setor_w := NEW.cd_setor_atendimento;
		
		SELECT * FROM obter_exame_lab_convenio(NEW.nr_seq_exame, cd_convenio_w, cd_categoria_convenio_w, coalesce(ie_tipo_atendimento_orc_w, ie_tipo_atendimento_w), coalesce(cd_estabelecimento_orc_w, cd_estabelecimento_w), ie_tipo_convenio_w, NEW.nr_seq_proc_interno, NEW.cd_material_exame, coalesce(cd_plano_convenio_orc_w, cd_plano_convenio_w), cd_setor_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w, NEW.dt_atualizacao) INTO STRICT cd_setor_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w;

		if (nr_seq_proc_interno_aux_w > 0) then
			NEW.nr_seq_proc_interno := nr_seq_proc_interno_aux_w;
		end if;
		if (coalesce(cd_procedimento_w,0) > 0) then
			NEW.cd_procedimento	:= cd_procedimento_w;
			NEW.ie_origem_proced	:= ie_origem_proced_w;
		end if;
	end if;
end if;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_orcamento_paciente_proc_insert() FROM PUBLIC;

CREATE TRIGGER orcamento_paciente_proc_insert
	BEFORE INSERT ON orcamento_paciente_proc FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_orcamento_paciente_proc_insert();

