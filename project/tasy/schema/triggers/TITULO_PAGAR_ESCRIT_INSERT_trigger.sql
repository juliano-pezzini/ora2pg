-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS titulo_pagar_escrit_insert ON titulo_pagar_escrit CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_titulo_pagar_escrit_insert() RETURNS trigger AS $BODY$
DECLARE

ie_remessa_retorno_w	varchar(255);
vl_saldo_titulo_w		double precision;
dt_baixa_w				timestamp;
qt_bordero_w			bigint;
qt_bordero_tit_pagar_w	bigint;
qt_baixa_titulo_w		bigint;
ie_baixa_titulo_w 		varchar(1);
cd_estabelecimento_w	banco_escritural.cd_estabelecimento%type;
cd_estab_titulo_w		titulo_pagar.cd_estabelecimento%type;
cd_estab_financ_w		titulo_pagar.cd_estab_financeiro%type;
cd_estab_ativo_w		estabelecimento.cd_estabelecimento%type;
ie_permite_estab_w		varchar(1);

BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then

select	max(vl_saldo_titulo)
into STRICT	vl_saldo_titulo_w
from	titulo_pagar
where	nr_titulo		= NEW.nr_titulo;

select	max(ie_remessa_retorno),
		max(dt_baixa),
		max(cd_estabelecimento)
into STRICT	ie_remessa_retorno_w,
		dt_baixa_w,
		cd_estabelecimento_w
from	banco_escritural
where	nr_sequencia	= NEW.nr_seq_escrit;

cd_estab_ativo_w := obter_estabelecimento_ativo;

ie_baixa_titulo_w := obter_param_usuario(857, 45, obter_perfil_ativo, NEW.nm_usuario, cd_estabelecimento_w, ie_baixa_titulo_w);
ie_permite_estab_w := obter_param_usuario(857, 68, obter_perfil_ativo, NEW.nm_usuario, cd_estab_ativo_w, ie_permite_estab_w);

if (coalesce(ie_baixa_titulo_w,'N')	= 'S') then

	select	count(*)
	into STRICT	qt_baixa_titulo_w
	from	titulo_pagar_baixa a,
			bordero_tit_pagar b
	where	b.nr_titulo 	= NEW.nr_titulo
	and		a.nr_titulo		= b.nr_titulo
	and		a.nr_bordero 	= b.nr_bordero
	and		exists ( SELECT 1 -- Verificar se existe uma baixa de estorno OS 1140612
					 from 	titulo_pagar_baixa x
					 where	x.nr_titulo = a.nr_titulo
					 and	x.nr_seq_baixa_origem = a.nr_sequencia);

	if (qt_baixa_titulo_w = 0) then
		select	count(*)
		into STRICT	qt_baixa_titulo_w
		from	titulo_pagar_baixa a,
				titulo_pagar b
		where	b.nr_titulo 	= NEW.nr_titulo
		and		a.nr_titulo		= b.nr_titulo
		and		a.nr_bordero 	= b.nr_bordero
		and		exists ( SELECT 1 -- Verificar se existe uma baixa de estorno OS 1140612
						 from 	titulo_pagar_baixa x
						 where	x.nr_titulo = a.nr_titulo
						 and	x.nr_seq_baixa_origem = a.nr_sequencia);
	end if;

end if;

select	count(*)
into STRICT	qt_bordero_w
from	titulo_pagar a
where	a.nr_bordero	is not null
and	a.nr_titulo	= NEW.nr_titulo;

select	count(*)
into STRICT	qt_bordero_tit_pagar_w
from	bordero_tit_pagar a
where	a.nr_titulo	= NEW.nr_titulo;


if	(((qt_bordero_w > 0) or (qt_bordero_tit_pagar_w > 0)) and ((qt_baixa_titulo_w = 0) or ('N' = coalesce(ie_baixa_titulo_w,'N')))) then
--'Nao e possivel incluir um titulo que esta em bordero!'

	CALL wheb_mensagem_pck.exibir_mensagem_abort(1197333,'NR_TITULO=' || NEW.nr_titulo ||';NR_BORDERO=' || obter_bordero_tit_pag(NEW.nr_titulo));
end if;


if (vl_saldo_titulo_w = 0) and (ie_remessa_retorno_w = 'R') then
-- Nao e possivel incluir um titulo a pagar com saldo zerado no pagamento escritural!

-- Titulo: #@NR_TITULO#@

	CALL wheb_mensagem_pck.exibir_mensagem_abort(224273, 'NR_TITULO=' || NEW.nr_titulo);
end if;

if (dt_baixa_w is not null) then
--Nao e possivel incluir um titulo em um pagamento escritural ja baixado!

	CALL wheb_mensagem_pck.exibir_mensagem_abort(224275);
end if;

if (coalesce(ie_permite_estab_w,'S') = 'N') then
	select	max(cd_estabelecimento),
		max(cd_estab_financeiro)
	into STRICT	cd_estab_titulo_w,
		cd_estab_financ_w
	from	titulo_pagar
	where	nr_titulo = NEW.nr_titulo;
	if ((cd_estab_titulo_w <> coalesce(cd_estab_ativo_w,cd_estabelecimento_w)) and (cd_estab_financ_w <> coalesce(cd_estab_ativo_w,cd_estabelecimento_w))) then
		-- Nao e permitido incluir titulos de outro estabelecimento. Parametro [68]

		CALL wheb_mensagem_pck.exibir_mensagem_abort(446925);
	end if;
end if;
end if;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_titulo_pagar_escrit_insert() FROM PUBLIC;

CREATE TRIGGER titulo_pagar_escrit_insert
	BEFORE INSERT ON titulo_pagar_escrit FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_titulo_pagar_escrit_insert();

