-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS sus_laudo_proced_adic_befins ON sus_laudo_proced_adic CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_sus_laudo_proced_adic_befins() RETURNS trigger AS $BODY$
DECLARE

cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
dt_entrada_unidade_w		timestamp;
cd_setor_atendimento_w		integer;
nr_atendimento_w			bigint;
nr_seq_atepacu_w			bigint;
nr_seq_propaci_w			bigint;
cd_convenio_w			integer;
qt_regra_laudo_w			integer;
cd_cgc_prestador_w		varchar(14);
cd_categoria_w			varchar(10);
cd_medico_requisitante_w            varchar(10);
ie_proc_laudo_w			varchar(15) := 'N';
ds_retorno_w			varchar(255):= '';
BEGIN
  BEGIN

BEGIN
cd_estabelecimento_w := coalesce(wheb_usuario_pck.get_cd_estabelecimento,0);
exception
when others then
	cd_estabelecimento_w := 0;
end;

ds_retorno_w := sus_consiste_regra_laudo(cd_estabelecimento_w, NEW.cd_procedimento, NEW.ie_origem_proced, ds_retorno_w);

if (coalesce(ds_retorno_w,'X') <> 'X') then
	ds_retorno_w := substr(substr(ds_retorno_w,1,220) || chr(13) || chr(10) || WHEB_MENSAGEM_PCK.get_texto(454285),1,255);
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(262328 , 'DS_MENSAGEM='||ds_retorno_w);
end if;

select	count(*)
into STRICT	qt_regra_laudo_w
from	sus_regra_gerar_proc_laudo;

if (qt_regra_laudo_w > 0) then

	BEGIN
	select	coalesce(sus_obter_se_gerar_proc_laudo(a.cd_procedimento_solic,a.ie_origem_proced,a.ie_classificacao),'N')
	into STRICT	ie_proc_laudo_w
	from 	sus_laudo_paciente a
	where 	nr_seq_interno = NEW.nr_seq_laudo;
	exception
	when others then
		ie_proc_laudo_w := 'N';
	end;
	
else
	ie_proc_laudo_w := 'N';
end if;


if (ie_proc_laudo_w = 'S') then

	select	nr_atendimento,
		coalesce(cd_medico_requisitante,cd_profis_requisitante)
	into STRICT	nr_atendimento_w,
		cd_medico_requisitante_w
	from	sus_laudo_paciente
	where	nr_seq_interno = NEW.nr_seq_laudo;
	
	BEGIN
	select	a.cd_convenio,
		a.cd_categoria,
		b.cd_estabelecimento
	into STRICT	cd_convenio_w,
		cd_categoria_w,
		cd_estabelecimento_w
	from	atend_categoria_convenio a,
		atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and	b.nr_atendimento = nr_atendimento_w  LIMIT 1;
	
	select	max(cd_cgc)
	into STRICT	cd_cgc_prestador_w
	from	estabelecimento
	where	cd_estabelecimento	= cd_estabelecimento_w;

	exception
	when others then
		cd_convenio_w		:= null;
		cd_categoria_w		:= null;
		cd_estabelecimento_w	:= null;
		cd_cgc_prestador_w	:= null;
	end;
	
	BEGIN
	select	a.cd_setor_atendimento,
		a.dt_entrada_unidade,
		a.nr_seq_interno
	into STRICT	cd_setor_atendimento_w,
		dt_entrada_unidade_w,
		nr_seq_atepacu_w
	from	atend_paciente_unidade a
	where	a.nr_atendimento	= nr_atendimento_w
	and	a.dt_entrada_unidade 	= (	SELECT max(x.dt_entrada_unidade)
						from atend_paciente_unidade x
						where x.nr_atendimento = a.nr_atendimento);
	exception
	when others then
		cd_setor_atendimento_w	:= null;
		dt_entrada_unidade_w	:= null;
		nr_seq_atepacu_w		:= null;
	end;

	if (nr_seq_atepacu_w is not null)  then
		
		select	nextval('procedimento_paciente_seq')
		into STRICT	nr_seq_propaci_w
		;	
		
		BEGIN		
			insert into procedimento_paciente(
				nr_sequencia, nr_atendimento, dt_entrada_unidade, cd_procedimento,
				dt_procedimento, qt_procedimento, dt_atualizacao, nm_usuario,
				cd_medico, cd_convenio, cd_categoria, cd_pessoa_fisica,
				dt_prescricao, ds_observacao, vl_procedimento, 	vl_medico,
				vl_anestesista, vl_materiais, cd_edicao_amb, cd_tabela_servico,
				dt_vigencia_preco, cd_procedimento_princ, dt_procedimento_princ, dt_acerto_conta,
				dt_acerto_convenio, dt_acerto_medico, vl_auxiliares, vl_custo_operacional,
				tx_medico, tx_anestesia, nr_prescricao, nr_sequencia_prescricao,
				cd_motivo_exc_conta, ds_compl_motivo_excon, cd_acao, qt_devolvida,
				cd_motivo_devolucao, nr_cirurgia, nr_doc_convenio, cd_medico_executor,
				ie_cobra_pf_pj, nr_laudo, dt_conta, cd_setor_atendimento,
				cd_conta_contabil, cd_procedimento_aih, ie_origem_proced, nr_aih,
				ie_responsavel_credito, tx_procedimento, cd_equipamento, ie_valor_informado,
				cd_estabelecimento_custo, cd_tabela_custo, cd_situacao_glosa, nr_lote_contabil,
				cd_procedimento_convenio, nr_seq_autorizacao, 	ie_tipo_servico_sus, ie_tipo_ato_sus,
				cd_cgc_prestador, nr_nf_prestador, cd_atividade_prof_bpa, nr_interno_conta,
				nr_seq_proc_princ, ie_guia_informada, dt_inicio_procedimento, ie_emite_conta,
				ie_funcao_medico, ie_classif_sus, 	cd_especialidade, nm_usuario_original,
				nr_seq_proc_pacote, ie_tipo_proc_sus, cd_setor_receita, vl_adic_plant,
				nr_seq_atepacu, ie_auditoria)
			values (nr_seq_propaci_w, nr_atendimento_w,dt_entrada_unidade_w,NEW.cd_procedimento,
				dt_entrada_unidade_w, coalesce(NEW.qt_procedimento,1), LOCALTIMESTAMP, NEW.nm_usuario,
				null, cd_convenio_w, cd_categoria_w, null,
				null,'Regra geracao proc laudo', 0, 0,
				0, 0,null,null,
				null, null, null, null,
				null, null, 0, 0,
				1, 1, null, null,
				null, null, null, null,
				null, null, null, cd_medico_requisitante_w,
				null, null, null, cd_setor_atendimento_w,
				null, null, NEW.ie_origem_proced, null,
				null, null, null, 'N',
				cd_estabelecimento_w, null, null, null,		
				null, null, null, null,
				cd_cgc_prestador_w, null, null, null,
				null, null, null, null,
				null, null, null, null,
				null, null, cd_setor_atendimento_w, 0,
				nr_seq_atepacu_w,null);	
				
			CALL atualiza_preco_procedimento(nr_seq_propaci_w,cd_convenio_w,NEW.nm_usuario);	
		
		exception
		when others then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(188082,'SQL_ERRO='||substr(sqlerrm,1,255));
			/* Ocorreu o seguinte problema ao inserir registro na procedimento paciente:#@SQL_ERRO#@ */


		end;
	end if;
end if;

  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_sus_laudo_proced_adic_befins() FROM PUBLIC;

CREATE TRIGGER sus_laudo_proced_adic_befins
	BEFORE INSERT ON sus_laudo_proced_adic FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_sus_laudo_proced_adic_befins();

