-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS material_update ON material CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_material_update() RETURNS trigger AS $BODY$
declare
ie_possui_reg_w		integer;
cd_estabelecimento_w	integer;
ie_estoque_lote_mat_control_w   material_estab.ie_estoque_lote%type;
ie_estoque_lote_mat_w   material_estab.ie_estoque_lote%type;
ie_parametro_17_w	varchar(255) := 'N';
BEGIN
  BEGIN
select	count(*)
into STRICT	ie_possui_reg_w
from	material_tipo_local_est
where	cd_material = OLD.cd_material;

select	min(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	material_estab
where	cd_material	= OLD.cd_material;

if (cd_estabelecimento_w is not null) then
	if (ie_possui_reg_w > 0) then
		update	material_estab
		set	ie_revisar	= 'R'
		where	cd_material	= OLD.cd_material;

		gerar_comunic_revisao_mat(OLD.cd_material, null, NEW.dt_atualizacao,cd_Estabelecimento_w, NEW.nm_usuario);
	end if;
end if;

cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
ie_parametro_17_w := Obter_Param_Usuario(9900, 17, obter_perfil_ativo, NEW.nm_usuario, cd_estabelecimento_w, ie_parametro_17_w);

if (coalesce(ie_parametro_17_w,'N') = 'S') then
	update	material_estab
	set	nr_registro_anvisa	= coalesce(NEW.nr_registro_anvisa,OLD.nr_registro_anvisa),
		dt_validade_reg_anvisa	= coalesce(NEW.dt_validade_reg_anvisa,OLD.dt_validade_reg_anvisa)
	where	cd_material		= NEW.cd_material;
end if;

if (NEW.cd_material_estoque <> OLD.cd_material_estoque and NEW.cd_material_estoque <> NEW.cd_material) then
    BEGIN
        select ie_estoque_lote
        into STRICT ie_estoque_lote_mat_control_w
        from material_estab
        where cd_material = NEW.cd_material_estoque
        and cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;
    exception
    when others then
        ie_estoque_lote_mat_control_w := 'N';
    end;
        
    BEGIN
        select ie_estoque_lote
        into STRICT ie_estoque_lote_mat_w
        from material_estab
        where cd_material = NEW.cd_material
        and cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;
    exception
    when others then
        ie_estoque_lote_mat_w := ie_estoque_lote_mat_control_w;
    end;

    if (ie_estoque_lote_mat_control_w <> ie_estoque_lote_mat_w) then
         CALL Wheb_mensagem_pck.exibir_mensagem_abort(1140301);
    end if;
end if;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_material_update() FROM PUBLIC;

CREATE TRIGGER material_update
	BEFORE UPDATE ON material FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_material_update();

