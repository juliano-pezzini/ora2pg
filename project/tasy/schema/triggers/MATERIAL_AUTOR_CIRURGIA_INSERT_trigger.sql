-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS material_autor_cirurgia_insert ON material_autor_cirurgia CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_material_autor_cirurgia_insert() RETURNS trigger AS $BODY$
declare

nr_sequencia_autor_w	bigint;
cont_w			integer;
ie_lib_materiais_esp_w	varchar(1)	:= 'N';
nr_seq_autor_conv_w	bigint;
ie_gera_hist_item_w	varchar(5) := 'N';

BEGIN

if	wheb_usuario_pck.get_ie_executar_trigger = 'S' then


	ie_gera_hist_item_w := obter_param_usuario(3006, 50, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.Get_cd_estabelecimento, ie_gera_hist_item_w);


	select	coalesce(max(ie_lib_materiais_esp),'N'),
		max((select max(x.nr_sequencia) from autorizacao_convenio x where x.nr_sequencia = a.nr_seq_autor_conv)) nr_seq_autor_conv
	into STRICT	ie_lib_materiais_esp_w,
		nr_seq_autor_conv_w
	from	parametro_faturamento b,
		autorizacao_cirurgia a
	where	a.cd_estabelecimento	= b.cd_estabelecimento
	and	a.nr_sequencia		= NEW.nr_seq_autorizacao;

	if (coalesce(ie_lib_materiais_esp_w,'N') = 'N') then

		select	max(nr_sequencia)
		into STRICT	nr_sequencia_autor_w
		from	autorizacao_convenio
		where	nr_seq_autor_cirurgia	= NEW.nr_seq_autorizacao;

		if (nr_sequencia_autor_w is not null) or (nr_seq_autor_conv_w is not null)then

			select	count(*)
			into STRICT	cont_w
			from	material_autorizado
			where	nr_sequencia_autor	= coalesce(nr_sequencia_autor_w,nr_seq_autor_conv_w)
			and	cd_material		= NEW.cd_material
			and	((nr_seq_opme is null) or (nr_seq_opme		= NEW.nr_seq_opme));

			if (cont_w = 0) then

				insert	into	material_autorizado(nr_sequencia,
					nm_usuario,
					nm_usuario_nrec,
					dt_atualizacao,
					dt_atualizacao_nrec,
					nr_sequencia_autor,
					cd_material,
					qt_solicitada,
					qt_autorizada,
					vl_unitario,
					ds_observacao,
					cd_cgc_fabricante,
					nr_seq_fabricante,
					pr_adicional,
					ie_valor_conta,
					nr_seq_opme,
					nr_seq_regra_plano,
					ie_reducao_acrescimo)
				values (nextval('material_autorizado_seq'),
					NEW.nm_usuario,
					NEW.nm_usuario,
					NEW.dt_atualizacao,
					NEW.dt_atualizacao,
					coalesce(nr_sequencia_autor_w,nr_seq_autor_conv_w),
					NEW.cd_material,
					NEW.qt_solicitada,
					0,
					NEW.vl_unitario_material,
					substr(NEW.ds_observacao,1,2000),
					NEW.cd_cgc_fornec,
					NEW.nr_seq_fabricante,
					NEW.pr_adicional,
					NEW.ie_valor_conta,
					NEW.nr_seq_opme,
					NEW.nr_seq_regra_plano,
					NEW.ie_reducao_acrescimo);
			end if;
		end if;
	end if;
		
	if (coalesce(ie_gera_hist_item_w,'N') = 'S') then
		

		insert into autorizacao_cirurgia_hist(
			ds_historico,
			dt_atualizacao,             
			dt_atualizacao_nrec,        
			dt_liberacao,               
			nm_usuario,                 
			nm_usuario_lib,             
			nm_usuario_nrec,            
			nr_seq_autor_cirurgia,           
			nr_sequencia) 	
		values (
			substr(wheb_mensagem_pck.get_texto(311758) || chr(13) || chr(10) || 
			NEW.cd_material || ' - ' || substr(obter_desc_material(NEW.cd_material),1,100) || chr(13) || chr(10) ||
			wheb_mensagem_pck.get_texto(311521) || NEW.qt_solicitada,1,4000), 
			LOCALTIMESTAMP,
			LOCALTIMESTAMP,
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			NEW.nm_usuario,
			NEW.nm_usuario,
			NEW.nr_seq_autorizacao,
			nextval('autorizacao_cirurgia_hist_seq'));
	end if;
end if;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_material_autor_cirurgia_insert() FROM PUBLIC;

CREATE TRIGGER material_autor_cirurgia_insert
	AFTER INSERT ON material_autor_cirurgia FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_material_autor_cirurgia_insert();

