-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS atendimento_pac_after_delete ON atendimento_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_atendimento_pac_after_delete() RETURNS trigger AS $BODY$
declare

dt_atualizacao 	timestamp	:= LOCALTIMESTAMP;
qt_inpatient_encounters_w 	smallint;
qt_outpatient_encounters_w	smallint;
nr_seq_case_type_w			tipo_episodio.nr_sequencia%type;

pragma autonomous_transaction;
BEGIN
  BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then

BEGIN
if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') in ('de_DE', 'de_AT')) then
	select 	count(1)
	into STRICT 	qt_inpatient_encounters_w
	from 	atendimento_paciente
	where 	nr_seq_episodio = OLD.nr_seq_episodio
	and		nr_atendimento <> OLD.nr_atendimento
	and 	dt_cancelamento is null
	and		ie_tipo_atendimento = 1;
	
	if (qt_inpatient_encounters_w = 0) then
		select 	count(1)
		into STRICT 	qt_outpatient_encounters_w
		from 	atendimento_paciente
		where 	nr_seq_episodio = OLD.nr_seq_episodio
		and 	dt_cancelamento is null
		and 	ie_tipo_atendimento = 8;
		
		if (qt_outpatient_encounters_w > 0) then
			select 	max(nr_sequencia)
			into STRICT 	nr_seq_case_type_w
			from 	tipo_episodio
			where 	ie_tipo = 8
			and 	ie_situacao = 'A';
			
			if (nr_seq_case_type_w > 0) then			
				update 	episodio_paciente
				set 	nr_seq_tipo_episodio = nr_seq_case_type_w
				where 	nr_sequencia = OLD.nr_seq_episodio;
			end if;
		end if;
	end if;
end if;

CALL gravar_log_exclusao('ATENDIMENTO_PACIENTE',OLD.nm_usuario,'nr_Atendimento=' || OLD.nr_atendimento,'N');

exception
	when others then
      	dt_atualizacao := LOCALTIMESTAMP;
end;

commit;

end if;
  END;
RETURN OLD;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_atendimento_pac_after_delete() FROM PUBLIC;

CREATE TRIGGER atendimento_pac_after_delete
	AFTER DELETE ON atendimento_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_atendimento_pac_after_delete();

