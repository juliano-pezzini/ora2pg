-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS nota_fiscal_update ON nota_fiscal CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_nota_fiscal_update() RETURNS trigger AS $BODY$
declare

reg_integracao_p		gerar_int_padrao.reg_integracao;
nr_nota_fiscal_w		varchar(255);
cd_funcao_ativa_w		integer;
cd_perfil_ativo_w		integer;
ds_historico_w			varchar(255);
qt_reg_w			smallint;
nr_ordem_compra_w		bigint;
ie_altera_fornec_w		varchar(1);
cd_material_w			nota_fiscal_item.cd_material%type;
cd_lote_fabricacao_w		nota_fiscal_item_lote.cd_lote_fabricacao%type;
dt_validade_w			nota_fiscal_item.dt_validade%type;

c01 CURSOR FOR
SELECT	distinct nr_ordem_compra
from	nota_fiscal_item
where	nr_sequencia = OLD.nr_sequencia
and	nr_ordem_compra is not null;

c02 CURSOR FOR
SELECT 	a.cd_material,
	b.cd_lote_fabricacao,
	b.dt_validade
from   	nota_fiscal_item a,
	nota_fiscal_item_lote b
where  	a.nr_item_nf = b.nr_item_nf
and	a.nr_sequencia = b.nr_seq_nota
and 	a.nr_sequencia = OLD.nr_sequencia;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

if (NEW.cd_cgc is null) and (NEW.cd_pessoa_fisica is null) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(266259);
	--'Para emissao da nota tem que ter um CGC ou pessoa fisica informada');

end if;

select (max(Obter_Valor_Param_Usuario(40, 275, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento)))
into STRICT	ie_altera_fornec_w
;

if ('pt_BR' = coalesce(pkg_i18n.get_user_locale, 'pt_BR')) then
	BEGIN
		select	(NEW.nr_nota_fiscal)::numeric
		into STRICT	nr_nota_fiscal_w
		;

		NEW.nr_nota_fiscal := nr_nota_fiscal_w;

	exception when data_exception then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266260);
		--'Nao e permitido informar caracteres alfanumericos no numero da nota fiscal.');

	end;
end if;

if (ie_altera_fornec_w = 'S') and (NEW.cd_cgc_emitente <> OLD.cd_cgc_emitente) then

	open C01;
	loop
	fetch C01 into
		nr_ordem_compra_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN
		CALL alterar_fornec_ordem_compra(nr_ordem_compra_w, NEW.cd_cgc_emitente, NEW.nm_usuario);
		end;
	end loop;
	close C01;
end if;

if (NEW.dt_atualizacao_estoque is null) and (OLD.dt_atualizacao_estoque is not null) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(266261);
	--'Esta nota fiscal ja foi calculada, nao pode ser alterada!');

end if;

/*Integracao padrao - Evento 65 - Enviar nota fiscal (antes de calcular)*/


if (NEW.dt_envio_integr_padrao is not null) and (OLD.dt_envio_integr_padrao is null) then

	open c02;
	loop
	fetch c02 into
		cd_material_w,
		cd_lote_fabricacao_w,
		dt_validade_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		BEGIN
		CALL consiste_lote_fornec_regra(cd_material_w, 0, 0, 0, 65, cd_lote_fabricacao_w);
		end;
	end loop;
	close c02;

	reg_integracao_p.ie_operacao		:=	'I';
	reg_integracao_p.ie_tipo_nota		:=	NEW.ie_tipo_nota;
	reg_integracao_p.cd_operacao_nf		:=	NEW.cd_operacao_nf;
	reg_integracao_p.cd_natureza_operacao	:=	NEW.cd_natureza_operacao;
	reg_integracao_p.cd_estabelecimento	:=	NEW.cd_estabelecimento;
	reg_integracao_p.ie_situacao_nota	:=	NEW.ie_situacao;

	reg_integracao_p := gerar_int_padrao.gravar_integracao('65', NEW.nr_sequencia, NEW.nm_usuario, reg_integracao_p);
end if;

<<Final>>
qt_reg_w	:= 0;

  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_nota_fiscal_update() FROM PUBLIC;

CREATE TRIGGER nota_fiscal_update
	BEFORE UPDATE ON nota_fiscal FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_nota_fiscal_update();

