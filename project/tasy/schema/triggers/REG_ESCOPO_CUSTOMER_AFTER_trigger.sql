-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS reg_escopo_customer_after ON reg_escopo_customer_req CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_reg_escopo_customer_after() RETURNS trigger AS $BODY$
declare

c_test_cases CURSOR FOR
SELECT	ct.nr_sequencia
from	reg_caso_teste ct
where	ct.nr_seq_customer = NEW.nr_customer_req
and	not exists (	select	1
			from	reg_escopo_caso_teste
			where	nr_seq_caso_teste = ct.nr_sequencia
			and	nr_seq_escopo = NEW.nr_seq_escopo
		);

BEGIN

for r_c_test_cases in c_test_cases loop

	insert into reg_escopo_caso_teste(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_escopo,
		nr_seq_caso_teste
	) values (
		nextval('reg_escopo_caso_teste_seq'),
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		NEW.nr_seq_escopo,
		r_c_test_cases.nr_sequencia
	);

end loop;

RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_reg_escopo_customer_after() FROM PUBLIC;

CREATE TRIGGER reg_escopo_customer_after
	AFTER INSERT ON reg_escopo_customer_req FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_reg_escopo_customer_after();

