-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS reg_product_req_update ON reg_product_requirement CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_reg_product_req_update() RETURNS trigger AS $BODY$
declare



nr_seq_ap_area_w		    reg_area_customer.nr_seq_apresentacao%type;

nr_seq_ap_feat_w		    reg_features_customer.nr_seq_apresentacao%type;

nr_seq_ap_cust_w		    reg_customer_requirement.nr_seq_apresentacao%type;

nr_seq_intencao_uso_w   bigint;

ds_prefixo_w		        varchar(15);

nr_sequencia_w          varchar(15);

nr_seq_prs_w            bigint;


BEGIN

IF (wheb_usuario_pck.get_ie_executar_trigger = 'N') THEN
	null;
END IF;



if (OLD.cd_prs_id is null) then

  if (NEW.nr_seq_intencao_uso is null or NEW.nr_seq_intencao_uso = 2) then

    select ac.nr_seq_apresentacao,

           fc.nr_seq_apresentacao,
  
           cr.nr_seq_apresentacao,
  
           iu.nr_sequencia,
  
           iu.ds_prefixo
  
      into STRICT nr_seq_ap_area_w,
  
           nr_seq_ap_feat_w,
  
           nr_seq_ap_cust_w,
  
           nr_seq_intencao_uso_w,
  
           ds_prefixo_w
  
      from reg_area_customer ac,
  
           reg_features_customer fc,
  
           reg_intencao_uso iu,
  
           reg_customer_requirement cr
  
     where ac.nr_sequencia = fc.nr_seq_area_customer
  
       and ac.nr_seq_intencao_uso = iu.nr_sequencia
  
       and fc.nr_sequencia = cr.nr_seq_features
  
       and cr.nr_sequencia = NEW.nr_customer_requirement;

  elsif NEW.nr_seq_intencao_uso is not null then

      select iu.nr_sequencia,
             
             iu.ds_prefixo
      
        into STRICT nr_seq_intencao_uso_w,
             
             ds_prefixo_w
      
        from reg_intencao_uso iu
      
       where iu.nr_sequencia = NEW.nr_seq_intencao_uso;

  end if;

  if nr_seq_intencao_uso_w = 2 then

    NEW.cd_prs_id := 'TASY_PRS_ID_' || nr_seq_ap_area_w || '.' || nr_seq_ap_feat_w || '.' || nr_seq_ap_cust_w || '.' || NEW.nr_sequencia;

  else

    select max(a.nr_sequencia)
      into STRICT nr_seq_prs_w
      from reg_product_requirement a
     where a.nr_seq_intencao_uso = nr_seq_intencao_uso_w;

    if nr_seq_prs_w is not null then
      
      select coalesce(obter_somente_numero(cd_prs_id), 0) + 1
        into STRICT nr_sequencia_w
        from reg_product_requirement
       where nr_sequencia = nr_seq_prs_w;

    end if;

    NEW.cd_prs_id := coalesce(ds_prefixo_w, nr_seq_intencao_uso_w) || '_PRS_' || coalesce(nr_sequencia_w, '1');

  end if;

end if;
NEW.nr_seq_intencao_uso := nr_seq_intencao_uso_w;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_reg_product_req_update() FROM PUBLIC;

CREATE TRIGGER reg_product_req_update
	BEFORE INSERT ON reg_product_requirement FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_reg_product_req_update();

