-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS gestao_vaga_update ON gestao_vaga CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_gestao_vaga_update() RETURNS trigger AS $BODY$
declare

cd_paciente_reserva_w	varchar(10);	
ie_status_unidade_w	varchar(3);
ie_atualiza_status_w 	varchar(1);
qt_reg_w		smallint;
ie_atualiza_agecir_w	varchar(1);
ds_log_w				varchar(2000);
nm_pac_reserva_w	varchar(255);
gestao_vaga_r gestao_vaga%rowtype;
BEGIN
  BEGIN

select	coalesce(max(Obter_Valor_Param_Usuario(1002, 39, Obter_Perfil_Ativo, NEW.nm_usuario, 0)), 'S')
into STRICT	ie_atualiza_status_w
;

select	coalesce(max(Obter_Valor_Param_Usuario(1002, 84, Obter_Perfil_Ativo, NEW.nm_usuario, 0)), 'S')
into STRICT	ie_atualiza_agecir_w
;

if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;
if (NEW.ie_status = 'D') or (NEW.ie_status = 'N') or (NEW.ie_status = 'F') then
	BEGIN	

	BEGIN
	select	coalesce(max(ie_status_unidade),'L'),
		max(cd_paciente_reserva),
		max(nm_pac_reserva)
	into STRICT	ie_status_unidade_w,
		cd_paciente_reserva_w,
		nm_pac_reserva_w
	from	unidade_atendimento
	where	cd_unidade_basica	= NEW.cd_unidade_basica	
	and	cd_unidade_compl	= NEW.cd_unidade_compl
	and	cd_setor_atendimento	= NEW.cd_setor_desejado;
	exception
	when others then
		ie_status_unidade_w 	:= 'L';
		cd_paciente_reserva_w 	:= null;
		nm_pac_reserva_w	:= null;
	end;
		
	if	((NEW.cd_pessoa_fisica = cd_paciente_reserva_w) or (NEW.nm_paciente = nm_pac_reserva_w)) then
		BEGIN
		if (ie_status_unidade_w = 'R')	then
			update	unidade_atendimento
			set	ie_status_unidade	= 'L',
				cd_paciente_reserva	 = NULL,	
				ds_observacao		 = NULL,
				nm_usuario_reserva	 = NULL,
				nm_usuario		= NEW.nm_usuario,
				dt_atualizacao		= LOCALTIMESTAMP,
				nm_pac_reserva		 = NULL
			where	cd_unidade_basica	= NEW.cd_unidade_basica	
			and	cd_unidade_compl	= NEW.cd_unidade_compl
			and	cd_setor_atendimento	= NEW.cd_setor_desejado;
		else
			update	unidade_atendimento
			set	cd_paciente_reserva	 = NULL,	
				ds_observacao		 = NULL,
				nm_usuario_reserva	 = NULL,
				nm_usuario		= NEW.nm_usuario,
				dt_atualizacao		= LOCALTIMESTAMP,
				nm_pac_reserva		 = NULL
			where	cd_unidade_basica	= NEW.cd_unidade_basica	
			and	cd_unidade_compl	= NEW.cd_unidade_compl
			and	cd_setor_atendimento	= NEW.cd_setor_desejado;
		end if;
		end;	
	end if;
	
	end;
end if;


if (NEW.ie_status <> OLD.ie_status) then
	
	insert into gestao_vaga_hist_status(nr_sequencia,
		 dt_atualizacao,
	     	 nm_usuario,
		 dt_atualizacao_nrec,
	  	 nm_usuario_nrec,
		 nr_seq_gestao_vaga,
		 ie_status,
		 nm_usuario_resp_transf)
	values (nextval('gestao_vaga_hist_status_seq'),
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		LOCALTIMESTAMP,
	  	NEW.nm_usuario,
		NEW.nr_sequencia,
		NEW.ie_status,
		NEW.nm_resp_transf		
		);

	BEGIN
	ds_log_w := substr(	' '||wheb_mensagem_pck.get_texto(795194)||' : '|| NEW.nr_sequencia || chr(13) ||chr(10)||
						' CallStack: '|| chr(13) || chr(10)|| dbms_utility.format_call_stack,1,1500);

	insert into log_mov(
		dt_atualizacao,
		nm_usuario,
		cd_log,
		ds_log)
	values (
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		88911,
		ds_log_w);

	exception
		when others then
		ds_log_w	:=	'';
	end;

end if;

if (ie_atualiza_status_w = 'S') and (NEW.nr_seq_agenda <> 0) and (NEW.ie_status <> OLD.ie_status) and
	((NEW.ie_status = 'F') or (NEW.ie_status = 'P'))  then
		
	update	agenda_paciente
	set	ie_status_agenda = 'N'
	where	nr_sequencia = NEW.nr_seq_agenda
	and	ie_status_agenda not in ('C','E');
	
end if;

if (NEW.cd_pessoa_fisica is not null) and (OLD.cd_pessoa_fisica is null) and (ie_atualiza_agecir_w = 'S') then
	update	agenda_paciente
	set	ie_status_agenda = 'N'
	where	nr_sequencia = NEW.nr_seq_agenda;
end if;

if (coalesce(NEW.cd_pessoa_fisica, 0) <> coalesce(OLD.cd_pessoa_fisica, 0)) then
	
	update	autorizacao_convenio
	set	cd_pessoa_fisica 	= NEW.cd_pessoa_fisica,
		nm_usuario 		= NEW.nm_usuario
	where	nr_seq_gestao 		= NEW.nr_sequencia;

end if;

if (OLD.ie_status <> NEW.ie_status) then

	gestao_vaga_r.nr_sequencia := NEW.nr_sequencia;
	gestao_vaga_r.cd_convenio := NEW.cd_convenio;
	gestao_vaga_r.ie_tipo_vaga := NEW.ie_tipo_vaga;
	gestao_vaga_r.ie_status := NEW.ie_status;
	gestao_vaga_r.ie_solicitacao := NEW.ie_solicitacao;
	gestao_vaga_r.cd_setor_atual := NEW.cd_setor_atual;
	gestao_vaga_r.cd_setor_desejado := NEW.cd_setor_desejado;
	gestao_vaga_r.cd_tipo_acomod_desej := NEW.cd_tipo_acomod_desej;
	gestao_vaga_r.nr_seq_status_pac := NEW.nr_seq_status_pac;
	gestao_vaga_r.nr_atendimento := NEW.nr_atendimento;
	gestao_vaga_r.dt_prevista	:=	NEW.dt_prevista;
	gestao_vaga_r.nm_paciente	:= NEW.nm_paciente;
	
	CALL gerar_evento_gestao_vaga_auto(NEW.cd_pessoa_fisica,NEW.nm_usuario,NEW.cd_estabelecimento,NEW.nr_sequencia,NEW.nm_paciente,'AAV', NEW.ie_status, gestao_vaga_r);
end if;

if(NEW.ie_status ='F' and NEW.ie_solicitacao='I' AND (OLD.ie_status <> NEW.ie_status or OLD.ie_solicitacao <> NEW.ie_solicitacao)) then

    CALL execute_bifrost_integration(251, '{"recordId" : "' || NEW.nr_sequencia|| '"' || '}');

	CALL call_interface_file(932, 'carestream_ris_japan_l10n_pck.patient_admission_info(' || NEW.nr_sequencia || ',''3H'' , 1, ''' || NEW.nm_usuario || ''' , 0, null, ' || NEW.cd_estabelecimento || ',''N'');', NEW.nm_usuario);
	CALL call_interface_file(948, 'tosho_pck.patient_admission_info(' || NEW.nr_sequencia || ',''3H'' , 1, ''' || NEW.nm_usuario || ''' , 0, null, ' || NEW.cd_estabelecimento ||  ', ''N'' );' , NEW.nm_usuario);	
end if;

if((NEW.ie_status in ('C','N', 'A') and OLD.ie_status in ('F') and NEW.ie_solicitacao='I') and (OLD.ie_status <> NEW.ie_status or OLD.ie_solicitacao <> NEW.ie_solicitacao)) then

	CALL call_interface_file(932, 'carestream_ris_japan_l10n_pck.patient_admission_info(' || NEW.nr_sequencia || ',''3I'' , 3, ''' || NEW.nm_usuario || ''' , 0, null, ' || NEW.cd_estabelecimento || ',''N'');' , NEW.nm_usuario);
	CALL call_interface_file(948, 'tosho_pck.patient_admission_info(' || NEW.nr_sequencia || ',''3I'' , 3, ''' || NEW.nm_usuario || ''' , 0, null, ' || NEW.cd_estabelecimento ||  ', ''N'' );' , NEW.nm_usuario);	

end if;

<<Final>>
qt_reg_w := 0;
  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_gestao_vaga_update() FROM PUBLIC;

CREATE TRIGGER gestao_vaga_update
	AFTER UPDATE ON gestao_vaga FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_gestao_vaga_update();

