-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS lote_audit_hist_item_update ON lote_audit_hist_item CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_lote_audit_hist_item_update() RETURNS trigger AS $BODY$
declare

ie_possui_partic_w	varchar(1);
var_consistir_pago	varchar(1);	
vl_pago_w		lote_audit_hist_item.vl_pago%type;

BEGIN
	
	if	((coalesce(NEW.vl_acatado,0) > 0) and
		((coalesce(NEW.vl_glosa_informada,0) <> coalesce(OLD.vl_glosa_informada,0)) or (coalesce(NEW.vl_amenor,0) <> coalesce(OLD.vl_amenor,0)) or (coalesce(NEW.vl_glosa,0) <> coalesce(OLD.vl_glosa,0)) or (coalesce(NEW.vl_acatado,0) <> coalesce(OLD.vl_acatado,0)))) then
		if (coalesce(NEW.vl_glosa_informada,0) <> (coalesce(NEW.vl_amenor,0) + coalesce(NEW.vl_glosa,0) + coalesce(NEW.vl_acatado,0))) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1041992);
		end if;
	end if;
	
	if (coalesce(OLD.ie_acao_glosa, 0) <> coalesce(NEW.ie_acao_glosa, 0)) then

		vl_pago_w := 0;
		
		var_consistir_pago := obter_param_usuario(69, 266, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, var_consistir_pago);
		
		select	max(ie_possui)
		into STRICT	ie_possui_partic_w
		from (
				SELECT 	'S' ie_possui
				from	grg_proc_partic a
				where	a.nr_seq_hist_item = NEW.nr_sequencia
				
union
	
				SELECT  'N' ie_possui
				from	grg_proc_partic a
				where	NEW.nr_sequencia not in (a.nr_seq_hist_item)
			) alias2;
			
		if	var_consistir_pago = 'N' and coalesce(NEW.nr_seq_ret_glosa, 0) > 0 then
			vl_pago_w := NEW.vl_pago;
		end if;
		
		if ((NEW.vl_glosa = 0 and NEW.vl_amenor = 0) or ie_possui_partic_w = 'N') then
			if NEW.ie_acao_glosa = 'R' then
				NEW.vl_amenor 	:=  NEW.vl_glosa_informada - vl_pago_w;
				NEW.vl_glosa 	:=  0;
			elsif NEW.ie_acao_glosa = 'A' then
				NEW.vl_amenor 	:=  0;
				NEW.vl_glosa 	:=  NEW.vl_glosa_informada - vl_pago_w;
			end if;
		end if;
		
	end if;
	
	if (coalesce(OLD.ie_acao_glosa, 0) <> NEW.ie_acao_glosa)
		or (coalesce(OLD.ds_observacao, '') <> NEW.ds_observacao)
		or (coalesce(OLD.ds_justificativa_oper, '') <> NEW.ds_justificativa_oper) then
		NEW.nm_usuario_resp := coalesce(NEW.nm_usuario, wheb_usuario_pck.get_nm_usuario);
	end if;
	
	if (coalesce(NEW.NR_PROTOCOLO_OPERADORA, '0') <> coalesce(OLD.NR_PROTOCOLO_OPERADORA, '0')) then
		NEW.DT_ATUAL_PROTOC_OPERADORA := LOCALTIMESTAMP;
	end if;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_lote_audit_hist_item_update() FROM PUBLIC;

CREATE TRIGGER lote_audit_hist_item_update
	BEFORE UPDATE ON lote_audit_hist_item FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_lote_audit_hist_item_update();

