-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS orcamento_paciente_mat_atual ON orcamento_paciente_mat CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_orcamento_paciente_mat_atual() RETURNS trigger AS $BODY$
declare

ie_valor_partic_w 	varchar(1);
cd_estabelecimento_w	bigint;
cd_convenio_partic_w	integer;
cd_categoria_partic_w	varchar(20);
dt_orcamento_w		timestamp;
cd_material_w		bigint:= null;
ie_material_conta_w	varchar(1);
cd_convenio_w		bigint;
cd_categoria_w		varchar(10);
ie_regra_qtde_fatur_w	varchar(1);
qt_material_w		double precision;
cd_plano_w		varchar(10);

qt_calculo_w		double precision;

c01 CURSOR FOR
	SELECT 	cd_material_conta
	from	material_convenio
	where	cd_convenio		= cd_convenio_w
	and	cd_material		= NEW.cd_material
	order by coalesce(cd_convenio,0);

BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S')  then

	select	cd_estabelecimento,
		dt_orcamento,
		cd_convenio,
		cd_categoria,
		cd_plano
	into STRICT	cd_estabelecimento_w,
		dt_orcamento_w,
		cd_convenio_w,
		cd_categoria_w,
		cd_plano_w
	from	orcamento_paciente
	where	nr_sequencia_orcamento = NEW.nr_sequencia_orcamento;

	ie_valor_partic_w := obter_param_usuario(106, 50, obter_perfil_ativo, NEW.nm_usuario, cd_estabelecimento_w, ie_valor_partic_w);
	ie_material_conta_w := obter_param_usuario(106, 77, obter_perfil_ativo, NEW.nm_usuario, cd_estabelecimento_w, ie_material_conta_w);
	ie_regra_qtde_fatur_w := obter_param_usuario(106, 78, obter_perfil_ativo, NEW.nm_usuario, cd_estabelecimento_w, ie_regra_qtde_fatur_w);

	if (coalesce(ie_material_conta_w,'N') = 'S') and (TG_OP = 'INSERT') then

		open C01;
		loop
		fetch C01 into
			cd_material_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			cd_material_w	:= cd_material_w;
		end loop;
		close c01;

		if (cd_material_w is null) then
			cd_material_w:= obter_mat_estabelecimento(cd_estabelecimento_w, 0, NEW.cd_material ,'MC');
		end if;

		if (coalesce(cd_material_w, NEW.cd_material) <> NEW.cd_material) then
			if (NEW.ds_observacao is null) then
				--:new.ds_observacao:= 'Material Orig: ' || :new.cd_material;

				NEW.ds_observacao:= wheb_mensagem_pck.get_texto(309990, 'CD_MATERIAL=' || NEW.cd_material);
			else
				--:new.ds_observacao:= substr(:new.ds_observacao || ' ' || 'Material Orig: ' || :new.cd_material,1,255);

				NEW.ds_observacao:= substr(NEW.ds_observacao || ' ' || wheb_mensagem_pck.get_texto(309990, 'CD_MATERIAL=' || NEW.cd_material),1,255);
			end if;
		end if;

		if (cd_material_w is not null) then
			NEW.cd_material:= cd_material_w;
		end if;

	elsif (coalesce(ie_material_conta_w,'N') = 'R') and (TG_OP = 'INSERT') then

		select obter_material_conta(
			cd_estabelecimento_w,
			cd_convenio_w,
			cd_categoria_w,
			null,
			null,
			NEW.cd_material,
			cd_plano_w,
			NEW.cd_setor_atendimento,
			dt_orcamento_w,
			null,
			null)
		into STRICT	cd_material_w
		;

		if (coalesce(cd_material_w, NEW.cd_material) <> NEW.cd_material) then
			if (NEW.ds_observacao is null) then
				--:new.ds_observacao:= 'Material Orig: ' || :new.cd_material;

				NEW.ds_observacao:= wheb_mensagem_pck.get_texto(309990, 'CD_MATERIAL=' || NEW.cd_material);
			else
				--:new.ds_observacao:= substr(:new.ds_observacao || ' ' || 'Material Orig: ' || :new.cd_material,1,255);

				NEW.ds_observacao:= substr(NEW.ds_observacao || ' ' || wheb_mensagem_pck.get_texto(309990, 'CD_MATERIAL=' || NEW.cd_material),1,255);
			end if;
		end if;

		if (cd_material_w is not null) then
			NEW.cd_material:= cd_material_w;
		end if;


	end if;


	if (coalesce(ie_regra_qtde_fatur_w,'N')	= 'S') and (TG_OP = 'INSERT') then

		if (coalesce(NEW.ie_regra_apresent_onc, 'N') = 'S') then
		   qt_calculo_w := NEW.qt_dose;
		else
		   qt_calculo_w := NEW.qt_material;
		end if;

		select	obter_qt_material_fat_orc(
					cd_estabelecimento_w,
					NEW.cd_material,
					cd_convenio_w,
					cd_categoria_w,
					null,
					qt_calculo_w,
					null,
					dt_orcamento_w,
					dt_orcamento_w,
					NEW.qt_dose,
					NEW.cd_unid_med_prescr)
		into STRICT	qt_material_w
		;

		if (qt_calculo_w <> qt_material_w) then
			NEW.qt_original	:= qt_calculo_w;
			NEW.qt_material	:= qt_material_w;
		end if;

	end if;



	if (coalesce(ie_valor_partic_w,'N') = 'S') and (coalesce(NEW.ie_autorizacao,'L') <> 'L') then

		select 	cd_convenio_partic,
			cd_categoria_partic
		into STRICT	cd_convenio_partic_w,
				cd_categoria_partic_w
		from	parametro_faturamento
		where	cd_estabelecimento = cd_estabelecimento_w;

		if (cd_convenio_partic_w is not null) and (cd_categoria_partic_w is not null) then

		NEW.vl_particular := Obter_Preco_Material(	cd_estabelecimento_w,
								cd_convenio_partic_w,
								cd_categoria_partic_w,
								dt_orcamento_w,
								NEW.cd_material,
								0,
								0,
								NEW.cd_setor_atendimento,
								null,
								0,
								0);
		NEW.vl_particular  := NEW.vl_particular * NEW.qt_material;

		end if;
	end if;

end if;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_orcamento_paciente_mat_atual() FROM PUBLIC;

CREATE TRIGGER orcamento_paciente_mat_atual
	BEFORE INSERT OR UPDATE ON orcamento_paciente_mat FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_orcamento_paciente_mat_atual();

