-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pessoa_juridica_atual ON pessoa_juridica CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pessoa_juridica_atual() RETURNS trigger AS $BODY$
declare
qt_existe_saldo_w		integer;
i	 		bigint;
cd_cgc_w		varchar(14);
vl_parametro_w		varchar(1)	:= 'N';
cd_codigo_pais_w		varchar(5)	:= 0;
ie_conta_vigente_w	varchar(1)	:= 'N';
qt_reg_w			smallint;
qt_existe_w		bigint;
qt_cnes_w		bigint;
qt_parametro_w		bigint;
cd_cnes_w		pessoa_juridica.cd_cnes%type;
BEGIN
  BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

if (OLD.ie_situacao <> 'I') and (NEW.ie_situacao = 'I') then
	select	coalesce(sum(qt_estoque),0)
	into STRICT	qt_existe_saldo_w
	from	fornecedor_mat_consignado
	where	cd_fornecedor		= NEW.cd_cgc
	and	dt_mesano_referencia	= trunc(LOCALTIMESTAMP,'mm');
	
	if (qt_existe_saldo_w <> 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(187694);
	end if;
end if;

/*	Obter parametro "09 - Permite cadastro de pessoa juridica internacional" da funcao "Pessoa juridica"	*/


BEGIN
vl_parametro_w := obter_param_usuario(6, 9, obter_perfil_Ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, vl_parametro_w);

/*select	nvl(vl_parametro,vl_parametro_padrao)
into	vl_parametro_w
from	funcao_parametro
where	cd_funcao	= 6
and	nr_sequencia	= 9;*/

exception
	when others then
	vl_parametro_w	:= 'N';
end;

if (NEW.ie_empreendedor_individual is null) then
	NEW.ie_empreendedor_individual := 'N';
end if;

select	coalesce(max(cd_codigo_pais),0)
into STRICT	cd_codigo_pais_w
from	pais
where	nr_sequencia	= NEW.nr_seq_pais;

if	((vl_parametro_w = 'N') or (cd_codigo_pais_w = '55') or (cd_codigo_pais_w = 'BRA')) and (coalesce(NEW.ie_empreendedor_individual,'N') <> 'S') and
	((NEW.cd_cgc <> OLD.cd_cgc) or (OLD.cd_cgc is null)) then
	BEGIN
	cd_cgc_w	:= NEW.cd_cgc;
	if (length(cd_cgc_w) <> 14) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(187695);
	end if;

	FOR i IN 1..14 LOOP
		if (substr(cd_cgc_w,i,1) not in ('1','2','3','4','5','6','7','8','9','0')) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(187697);
		end if;
	END LOOP;
	end;
end if;

if (NEW.cd_conta_contabil is not null) and (NEW.cd_conta_contabil <> OLD.cd_conta_contabil) then
	select	substr(obter_se_conta_vigente(NEW.cd_conta_contabil, LOCALTIMESTAMP),1,1)
	into STRICT	ie_conta_vigente_w
	;
	if (ie_conta_vigente_w = 'N') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(187699);
	end if;
end if;

if (NEW.ds_senha is not null) and (NEW.ds_senha <> OLD.ds_senha) then
	CALL exec_sql_dinamico_bv('','delete from controle_acesso_web where ds_login = :ds_login','ds_login='||NEW.cd_cgc);
end if;

if (NEW.cd_cnpj_raiz is null) then
	NEW.cd_cnpj_raiz		:= substr(NEW.cd_cgc,1,8);
end if;

select	count(*)
into STRICT	qt_existe_w
from	sup_parametro_integracao a,
	sup_int_regra_pj b
where	a.nr_sequencia = b.nr_seq_integracao
and	a.ie_evento = 'PJ'
and	a.ie_forma = 'E'
and	a.ie_situacao = 'A'
and	b.ie_situacao = 'A';

if (qt_existe_w > 0) and (NEW.nm_usuario <> 'INTEGR_TASY') then
	
	insert into sup_int_pj(
		nr_sequencia,
		ie_forma_integracao,
		dt_liberacao,
		cd_cgc,
		ds_razao_social,
		nm_fantasia,
		ds_nome_abrev,
		cd_municipio_ibge,
		cd_cep,
		ds_endereco,
		nr_endereco,
		ds_complemento,
		ds_bairro,
		ds_municipio,
		sg_estado,
		nr_telefone,
		nr_fax,
		nr_inscricao_estadual,
		nr_inscricao_municipal,
		cd_internacional,
		ds_site_internet,
		cd_pf_resp_tecnico,
		ds_orgao_reg_resp_tecnico,
		nr_autor_func,
		nr_alvara_sanitario,
		nr_alvara_sanitario_munic,
		nr_certificado_boas_prat,
		cd_ans,
		dt_validade_autor_func,
		dt_validade_alvara_sanit,
		dt_validade_cert_boas_prat,
		cd_cnes,
		dt_validade_resp_tecnico,
		nr_registro_resp_tecnico,
		dt_validade_alvara_munic,
		ds_resp_tecnico,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ie_situacao)
	values (	nextval('sup_int_pj_seq'),
		'E',
		LOCALTIMESTAMP,
		NEW.cd_cgc,
		substr(NEW.ds_razao_social,1,255),
		NEW.nm_fantasia,
		NEW.ds_nome_abrev,
		NEW.cd_municipio_ibge,
		NEW.cd_cep,
		NEW.ds_endereco,
		NEW.nr_endereco,
		NEW.ds_complemento,
		NEW.ds_bairro,
		NEW.ds_municipio,
		NEW.sg_estado,
		NEW.nr_telefone,
		NEW.nr_fax,
		NEW.nr_inscricao_estadual,
		NEW.nr_inscricao_municipal,
		NEW.cd_internacional,
		NEW.ds_site_internet,
		NEW.cd_pf_resp_tecnico,
		NEW.ds_orgao_reg_resp_tecnico,
		NEW.nr_autor_func,
		NEW.nr_alvara_sanitario,
		NEW.nr_alvara_sanitario_munic,
		NEW.nr_certificado_boas_prat,
		NEW.cd_ans,
		NEW.dt_validade_autor_func,
		NEW.dt_validade_alvara_sanit,
		NEW.dt_validade_cert_boas_prat,
		NEW.cd_cnes,
		NEW.dt_validade_resp_tecnico,
		NEW.nr_registro_resp_tecnico,
		NEW.dt_validade_alvara_munic,
		NEW.ds_resp_tecnico,
		LOCALTIMESTAMP,
		'INTEGR_TASY',
		LOCALTIMESTAMP,
		'INTEGR_TASY',
		NEW.ie_situacao);
end if;

if ((NEW.cd_cnes is not null) and (coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'pt_BR')) then
	cd_cnes_w := NEW.cd_cnes;
	cd_cnes_w := replace(cd_cnes_w,' ',null);
	
	if (length(cd_cnes_w) != 7) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(784559);
	end if;

end if;

/*
if	(:new.cd_cnes is not null) then
	select	count(*)
	into	qt_cnes_w
	from	cnes_identificacao
	where	cd_cnes	= :new.cd_cnes
	and	cd_cgc	<> :new.cd_cgc;
	
	if	(qt_cnes_w > 0) then
		wheb_mensagem_pck.exibir_mensagem_abort(187701);
	end if;
end if;
*/
	
if	((coalesce(NEW.ds_razao_social,'X') <> coalesce(OLD.ds_razao_social,'X')) or (coalesce(NEW.nm_fantasia,'X') <> coalesce(OLD.nm_fantasia,'X'))) then	
	select 	count(1)
	into STRICT	qt_parametro_w
	from 	pls_web_param_guia_medico;
	
	if (qt_parametro_w > 0) then	
		CALL pls_atualiza_nome_busca_guia(	null,	
						NEW.cd_cgc,			
						NEW.ds_razao_social,		
						NEW.nm_fantasia,			
						null,		
						null);	
	end if;
end if;	
<<Final>>
qt_reg_w	:= 0;
  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pessoa_juridica_atual() FROM PUBLIC;

CREATE TRIGGER pessoa_juridica_atual
	BEFORE INSERT OR UPDATE ON pessoa_juridica FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pessoa_juridica_atual();

