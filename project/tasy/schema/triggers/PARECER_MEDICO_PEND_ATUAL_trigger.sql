-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS parecer_medico_pend_atual ON parecer_medico CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_parecer_medico_pend_atual() RETURNS trigger AS $BODY$
declare

PRAGMA AUTONOMOUS_TRANSACTION;

qt_reg_w			smallint;
nm_usuario_w			varchar(15);
cd_especialidade_dest_w		integer;
cd_especialidade_dest_prof_w	integer;
cd_medico_parecer_w		bigint;
cd_pessoa_fisica_w		varchar(10);
nr_atendimento_w		bigint;
ie_lib_parecer_medico_w		varchar(10);
ie_pend_parecer_w		varchar(10);
ie_registro_w			char(1);
ie_liberado_w			char(1);

BEGIN
	if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
		goto Final;
	end if;

	if (TG_OP = 'INSERT') or (TG_OP = 'UPDATE') then

		select  coalesce(max(ie_lib_parecer_medico),'N'),
			coalesce(max(ie_pend_parecer),'N')
		into STRICT    ie_lib_parecer_medico_w,
			ie_pend_parecer_w
		from    parametro_medico
		where   cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

		if (coalesce(ie_lib_parecer_medico_w,'N') = 'S') and (coalesce(ie_pend_parecer_w,'S') = 'S') 	then

			if (NEW.dt_liberacao is null) and (not TG_OP = 'DELETE') then
				select  coalesce(max(cd_especialidade_dest), 0),
					coalesce(max(cd_especialidade_dest_prof), 0),
					coalesce(max(cd_pessoa_fisica), 0),
					coalesce(max(nr_atendimento), 0)
				into STRICT    cd_especialidade_dest_w,
					cd_especialidade_dest_prof_w,
					cd_pessoa_fisica_w,
					nr_atendimento_w
				from    parecer_medico_req
				where   nr_parecer = NEW.nr_parecer;

				if (cd_pessoa_fisica_w > 0 ) then 				
					
          CALL Gerar_registro_pendente_PEP(
            cd_tipo_registro_p => 'RP',
            nr_sequencia_registro_p => NEW.nr_sequencia,
            cd_pessoa_fisica_p => cd_pessoa_fisica_w, 
            nr_atendimento_p => nr_atendimento_w, 
            nm_usuario_p => NEW.nm_usuario,
            ie_tipo_pendencia_p => 'L',
            nr_parecer_p =>NEW.nr_parecer,
            nr_atend_cons_pepa_p=> NEW.nr_seq_atend_cons_pepa
          );
				end if;
				    
			elsif (OLD.dt_liberacao is null) and (NEW.dt_liberacao is not null) then
					
          CALL Gerar_registro_pendente_PEP(
            cd_tipo_registro_p => 'XRP',
            nr_sequencia_registro_p => NEW.nr_sequencia,
            cd_pessoa_fisica_p => cd_pessoa_fisica_w, 
            nr_atendimento_p => nr_atendimento_w, 
            nm_usuario_p => NEW.nm_usuario,
            ie_tipo_pendencia_p => 'L',
            nr_parecer_p =>NEW.nr_parecer,
            nr_atend_cons_pepa_p=> NEW.nr_seq_atend_cons_pepa
          );
				
				select	coalesce(max('S'),'N')
				into STRICT	ie_liberado_w
				from	parecer_medico_req
				where	nr_parecer = NEW.nr_parecer
				and		dt_liberacao is not null;
				
				if (ie_liberado_w = 'S') then
					
          CALL Gerar_registro_pendente_PEP(
            cd_tipo_registro_p => 'XPM',
            nr_sequencia_registro_p => NEW.nr_parecer,
            cd_pessoa_fisica_p => cd_pessoa_fisica_w,
            nr_atendimento_p => nr_atendimento_w,
            nm_usuario_p => NEW.nm_usuario,
            nr_atend_cons_pepa_p=> NEW.nr_seq_atend_cons_pepa
          );
				end if;
			end if;
		end if;
	elsif (TG_OP = 'DELETE') then
		
		select 	coalesce(max('S'),'N')
		into STRICT	ie_registro_w
		from	parecer_medico_req
		where	nr_parecer = OLD.nr_parecer;
		
		if (ie_registro_w = 'S')  then
			delete	from pep_item_pendente
			where 	ie_tipo_registro = 'RP'
			and     nr_seq_registro = OLD.nr_sequencia
			and	nr_parecer = OLD.nr_parecer
			and     coalesce(IE_TIPO_PENDENCIA,'L') = 'L';
			commit;
		end if;
		
	end if;
	
	commit;

<<Final>>
qt_reg_w	:= 0;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_parecer_medico_pend_atual() FROM PUBLIC;

CREATE TRIGGER parecer_medico_pend_atual
	AFTER INSERT OR UPDATE OR DELETE ON parecer_medico FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_parecer_medico_pend_atual();

