-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pe_prescr_proc_atual ON pe_prescr_proc CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pe_prescr_proc_atual() RETURNS trigger AS $BODY$
declare
ie_situacao_w	 varchar(2);
qt_reg_w		bigint;
BEGIN
  BEGIN


if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

if (NEW.ie_faose is null) then
	BEGIN
	select	max(ie_faose)
	into STRICT	NEW.ie_faose
	from	pe_procedimento
	where	nr_sequencia = NEW.NR_SEQ_PROC;
	exception
		when others then
		null;
	end;
end if;	



if (NEW.ie_profissional is null) then
	BEGIN
	select	max(ie_profissional)
	into STRICT	NEW.ie_profissional
	from	pe_procedimento
	where	nr_sequencia = NEW.NR_SEQ_PROC;
	exception
		when others then
		null;
	end;
end if;	


select max(ie_situacao)
into STRICT ie_situacao_w
from pe_procedimento
where nr_sequencia = NEW.nr_seq_proc;
if (ie_situacao_w = 'I') then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(349391);
end if;

BEGIN
if (NEW.hr_horario_espec is not null) and ((NEW.hr_horario_espec <> OLD.hr_horario_espec) or (OLD.dt_fim is null)) then
		NEW.dt_fim := to_date(to_char(LOCALTIMESTAMP,'dd/mm/yyyy') || ' ' || NEW.hr_horario_espec,'dd/mm/yyyy hh24:mi');
end if;	
if (NEW.hr_prim_horario is not null) and ((NEW.hr_prim_horario <> OLD.hr_prim_horario) or (OLD.dt_inicio is null)) then
		NEW.dt_inicio := to_date(to_char(LOCALTIMESTAMP,'dd/mm/yyyy') || ' ' || NEW.hr_prim_horario,'dd/mm/yyyy hh24:mi');
end if;

if (TG_OP = 'INSERT' and coalesce(NEW.ds_horarios,'XPTO') = 'XPTO' and coalesce(NEW.ie_se_necessario,'N') = 'S') then
	NEW.ds_horarios	:= 'SN';
end if;

exception
	when others then
	null;
end;


<<Final>>
qt_reg_w	:= 0;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pe_prescr_proc_atual() FROM PUBLIC;

CREATE TRIGGER pe_prescr_proc_atual
	BEFORE INSERT OR UPDATE ON pe_prescr_proc FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pe_prescr_proc_atual();

