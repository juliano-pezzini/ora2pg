-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS atend_pac_und_inf_before_del ON atend_paciente_unidade_inf CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_atend_pac_und_inf_before_del() RETURNS trigger AS $BODY$
declare

CD_MEDICO_ATENDIMENTO_W		ATEND_PACIENTE_UNIDADE_INF.CD_PROF_MEDICO%type;
NR_SEQ_ATEND_PAC_UNIDADE_W	ATEND_PACIENTE_UNIDADE_INF.NR_SEQ_ATEND_PAC_UNIDADE%type;
vl_default_w				tabela_atrib_regra.vl_default%type;

pragma autonomous_transaction;

BEGIN

	if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
	
		vl_default_w := null;
			
      select	max(vl_default)
    into STRICT	vl_default_w
    from	tabela_atrib_regra
    where	nm_tabela	= 'ATENDIMENTO_PACIENTE'
    and		nm_atributo		= 'CD_MEDICO_RESP'
    and		coalesce(cd_estabelecimento, obter_estabelecimento_ativo)	= obter_estabelecimento_ativo
    and		coalesce(cd_perfil, obter_perfil_ativo)		= obter_perfil_ativo
    and		coalesce(nm_usuario_param, wheb_usuario_pck.get_nm_usuario) 		= wheb_usuario_pck.get_nm_usuario;

    if (vl_default_w is null) then
      select	max(cd_pessoa_fisica)
      into STRICT	vl_default_w
      from    usuario
      where  	nm_usuario = wheb_usuario_pck.get_nm_usuario;
    end if;
		
    	NR_SEQ_ATEND_PAC_UNIDADE_W	:=	coalesce(NEW.NR_SEQ_ATEND_PAC_UNIDADE, OLD.NR_SEQ_ATEND_PAC_UNIDADE);
		CD_MEDICO_ATENDIMENTO_W		:=	coalesce(NEW.CD_PROF_MEDICO, OLD.CD_PROF_MEDICO);

		if (vl_default_w is not null) then
			CD_MEDICO_ATENDIMENTO_W		:=	substr(vl_default_w, 1, 10);
		end if;

		if (CD_MEDICO_ATENDIMENTO_W is not null)	then
			CALL update_resp_physician(CD_MEDICO_ATENDIMENTO_W, NR_SEQ_ATEND_PAC_UNIDADE_W);
		end if;
		
	end if;

RETURN OLD;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_atend_pac_und_inf_before_del() FROM PUBLIC;

CREATE TRIGGER atend_pac_und_inf_before_del
	BEFORE DELETE ON atend_paciente_unidade_inf FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_atend_pac_und_inf_before_del();

