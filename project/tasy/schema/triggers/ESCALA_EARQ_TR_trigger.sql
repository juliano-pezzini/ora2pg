-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS escala_earq_tr ON escala_earq CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_escala_earq_tr() RETURNS trigger AS $BODY$
declare
qt_ponto_w	bigint := 0;
qt_reg_w	smallint;
cd_pessoa_fisica_w numeric(20);
nr_seq_triagem_w        escala_earq.nr_seq_triagem%type;
dt_fim_triagem_w        triagem_pronto_atend.dt_fim_triagem%type;
dt_inicio_triagem_w     triagem_pronto_atend.dt_inicio_triagem%type;


BEGIN

if (NEW.CD_PESSOA_FISICA is not null and NEW.NR_ATENDIMENTO is null and NEW.NR_SEQ_TRIAGEM is null) then

select max(nr_sequencia)
into STRICT nr_seq_triagem_w
from triagem_pronto_atend
where cd_pessoa_fisica = NEW.CD_PESSOA_FISICA;

select max(dt_fim_triagem), max(dt_inicio_triagem)
into STRICT dt_fim_triagem_w, dt_inicio_triagem_w
from triagem_pronto_atend
where nr_sequencia = nr_seq_triagem_w;

if (dt_fim_triagem_w is null and dt_inicio_triagem_w is not null and nr_seq_triagem_w is not null) then
NEW.nr_seq_triagem := nr_seq_triagem_w;
end if;

end if;

select max(cd_pessoa_fisica)
into STRICT cd_pessoa_fisica_w
from atendimento_paciente
where NEW.nr_atendimento = nr_atendimento;

if (cd_pessoa_fisica_w is not null) then
  NEW.cd_pessoa_fisica := cd_pessoa_fisica_w;
end if;

if (NEW.nr_hora is null) or (NEW.DT_AVALIACAO <> OLD.DT_AVALIACAO) then
	BEGIN  
	NEW.nr_hora	:= (to_char(round(NEW.DT_AVALIACAO,'hh24'),'hh24'))::numeric;
	end;
end if;
if (wheb_usuario_pck.get_ie_executar_trigger <> 'N') then

qt_ponto_w := 0;
if (NEW.qt_idade >= 60) and (NEW.qt_idade <= 70) then
	qt_ponto_w := 1;
elsif (NEW.qt_idade >= 71) and (NEW.qt_idade <= 80) then
	qt_ponto_w := 2;
elsif (NEW.qt_idade > 80) then
	qt_ponto_w := 1;
end if;

if (NEW.ie_sexo = 'F') then
	qt_ponto_w := qt_ponto_w + 2;
else
	qt_ponto_w := qt_ponto_w + 1;
end if;	

/*ESTILO DE MARCHA*/

if (NEW.ie_marcha_firme = 'S') then
	qt_ponto_w := qt_ponto_w + 0;
end if;
if (NEW.ie_marcha_hesitante = 'S') then
	qt_ponto_w := qt_ponto_w + 1;
end if;
if (NEW.ie_marcha_instavel = 'S') then
	qt_ponto_w := qt_ponto_w + 3;
end if;
if (NEW.ie_marcha_dif_transferencia = 'S') then
	qt_ponto_w := qt_ponto_w + 3;
end if;

/*MOBILIDADE*/
	
if (NEW.ie_mob_independente = 'S') then
	qt_ponto_w := qt_ponto_w + 0;
end if;	
if (NEW.ie_mob_ortese_apoio = 'S') then
	qt_ponto_w := qt_ponto_w + 2;
end if;	
if (NEW.ie_mob_req_ortese = 'S') then
	qt_ponto_w := qt_ponto_w + 3;
end if;	
if (NEW.ie_mob_imovel = 'S') then
	qt_ponto_w := qt_ponto_w + 1;
end if;

/*HISTORIA DE QUEDA*/

qt_ponto_w := qt_ponto_w + NEW.ie_hist_queda;

/*DEFICIT SENSORIAL*/

if (NEW.ie_def_visao = 'S') then
	qt_ponto_w := qt_ponto_w + 2;
end if;	
if (NEW.ie_def_audicao = 'S') then
	qt_ponto_w := qt_ponto_w + 1;
end if;	
if (NEW.ie_def_equilibrio = 'S') then
	qt_ponto_w := qt_ponto_w + 2;
end if;

/*MEDICACOES*/

if (NEW.ie_hipnoticos = 'S') then
	qt_ponto_w := qt_ponto_w + 1;
end if;	
if (NEW.ie_tranquilizantes = 'S') then
	qt_ponto_w := qt_ponto_w + 1;
end if;	
if (NEW.ie_hipotensores = 'S') then
	qt_ponto_w := qt_ponto_w + 1;
end if;	
if (NEW.ie_analgesicos = 'S') then
	qt_ponto_w := qt_ponto_w + 1;
end if;
	
/*HISTORIA MEDICA*/

if (NEW.ie_diabetes = 'S') then
	qt_ponto_w := qt_ponto_w + 1;
end if;	
if (NEW.ie_confusao = 'S') then
	qt_ponto_w := qt_ponto_w + 1;
end if;	
if (NEW.ie_ataque_epileptico = 'S') then
	qt_ponto_w := qt_ponto_w + 1;
end if;	
if (NEW.ie_artrite = 'S') then
	qt_ponto_w := qt_ponto_w + 1;
end if;
if (NEW.ie_neurologico = 'S') then
	qt_ponto_w := qt_ponto_w + 1;
end if;

/*MEMORIA*/

if (NEW.ie_nao_sabe_ano = 'S') then
	qt_ponto_w := qt_ponto_w + 1;
end if;	
if (NEW.ie_nao_sabe_data_nasc = 'S') then
	qt_ponto_w := qt_ponto_w + 1;
end if;	
if (NEW.ie_nao_sabe_endereco = 'S') then
	qt_ponto_w := qt_ponto_w + 2;
end if;	
if (NEW.ie_nao_sabe_onde = 'S') then
	qt_ponto_w := qt_ponto_w + 2;
end if;
if (NEW.ie_nao_sabe_cidade = 'S') then
	qt_ponto_w := qt_ponto_w + 2;
end if;
	
NEW.qt_pontuacao := qt_ponto_w;

end if;
qt_reg_w := 0;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_escala_earq_tr() FROM PUBLIC;

CREATE TRIGGER escala_earq_tr
	BEFORE INSERT OR UPDATE ON escala_earq FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_escala_earq_tr();

