-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS repasse_terc_venc_trib_delete ON repasse_terc_venc_trib CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_repasse_terc_venc_trib_delete() RETURNS trigger AS $BODY$
declare
ds_benefic_w			varchar(80);
dt_vencimento_w			timestamp;
dt_emissao_w			timestamp;
vl_vencimento_w			double precision;
ds_tributo_w			varchar(40);
ds_log_w			varchar(4000);
qt_registro_w			integer;
BEGIN


select	substr(max(obter_nome_terceiro(b.nr_seq_terceiro)),1,80),
	max(a.dt_vencimento),
	max(a.vl_vencimento)
into STRICT	ds_benefic_w,
	dt_vencimento_w,
	vl_vencimento_w
from	repasse_terceiro b,
	repasse_terceiro_venc a
where	a.nr_repasse_terceiro	= b.nr_repasse_terceiro
and	nr_sequencia		= OLD.nr_seq_rep_venc;

select	max(ds_tributo)
into STRICT	ds_tributo_w
from	tributo
where	cd_tributo = OLD.cd_tributo;

--ds_log_w	:= substr(	'Terceiro repasse: ' || ds_benefic_w || chr(13) ||
--				'Vencimento: ' || dt_vencimento_w || chr(13) ||
--				'Criação tributo: ' || to_char(:old.dt_atualizacao_nrec,'dd/mm/yyyy hh24:mi:ss') || chr(13) ||
--				'Valor venc: ' || vl_vencimento_w || chr(13) ||
--				'Tributo: ' || ds_tributo_w || chr(13) ||
--				'Valor tributo ' || :old.vl_imposto,1,4000);
ds_log_w	:= substr(	wheb_mensagem_pck.get_texto(304660) || ds_benefic_w || chr(13) ||
				wheb_mensagem_pck.get_texto(304662) || dt_vencimento_w || chr(13) ||
				wheb_mensagem_pck.get_texto(304663) || to_char(OLD.dt_atualizacao_nrec,'dd/mm/yyyy hh24:mi:ss') || chr(13) ||
				wheb_mensagem_pck.get_texto(304664) || vl_vencimento_w || chr(13) ||
				wheb_mensagem_pck.get_texto(304665) || ds_tributo_w || chr(13) ||
				wheb_mensagem_pck.get_texto(304667) || OLD.vl_imposto,1,4000);

CALL fin_gerar_log_controle_banco(100, ds_log_w, 'Tasy','N');

select	count(1)
into STRICT	qt_registro_w
from	pls_pp_base_acum_trib
where	nr_seq_vl_repasse = OLD.nr_sequencia;

if (qt_registro_w > 0) then
	-- Existem registros dependentes
	CALL wheb_mensagem_pck.exibir_mensagem_abort(457570);
end if;

select	count(1)
into STRICT	qt_registro_w
from	pls_pp_lr_base_trib
where	nr_seq_vl_repasse = OLD.nr_sequencia;

if (qt_registro_w > 0) then
	-- Existem registros dependentes
	CALL wheb_mensagem_pck.exibir_mensagem_abort(457570);
end if;

RETURN OLD;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_repasse_terc_venc_trib_delete() FROM PUBLIC;

CREATE TRIGGER repasse_terc_venc_trib_delete
	BEFORE DELETE ON repasse_terc_venc_trib FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_repasse_terc_venc_trib_delete();

