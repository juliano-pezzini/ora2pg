-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pls_seguradobeforepost ON pls_segurado CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pls_seguradobeforepost() RETURNS trigger AS $BODY$
declare

ie_tipo_contratacao_w		pls_plano.ie_tipo_contratacao%type;
ie_participacao_w		pls_plano.ie_participacao%type;
ie_tipo_plano_w			pls_segurado.ie_tipo_plano%type;
nr_seq_seg_contrato_w		pls_segurado.nr_seq_seg_contrato%type;
nm_pessoa_fisica_w		pessoa_fisica.nm_pessoa_fisica%type;
qt_reg_w			integer;
ds_erro_w			varchar(255);
nr_seq_segurado_status_w	pls_segurado_status.nr_sequencia%type;
BEGIN
  BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

NEW.nr_seq_congenere_ok := coalesce(NEW.nr_seq_ops_congenere,NEW.nr_seq_congenere);

if (trunc(NEW.dt_inclusao_operadora,'dd') > trunc(NEW.dt_contratacao,'dd')) then
	if (NEW.cd_pessoa_fisica is not null) then
		select	nm_pessoa_fisica
		into STRICT	nm_pessoa_fisica_w
		from	pessoa_fisica
		where	cd_pessoa_fisica = NEW.cd_pessoa_fisica;
	end if;
	
	CALL wheb_mensagem_pck.exibir_mensagem_abort(309308,'BENEFICIARIO='||NEW.nr_sequencia||' - '||nm_pessoa_fisica_w);
end if;

if (NEW.nr_seq_plano <> OLD.nr_seq_plano) then
	select	ie_tipo_contratacao,
		ie_participacao
	into STRICT	ie_tipo_contratacao_w,
		ie_participacao_w
	from	pls_plano
	where	nr_sequencia	= NEW.nr_seq_plano;
	
	if (ie_tipo_contratacao_w	= 'I') then
		ie_tipo_plano_w	:= 'IF';
	elsif (ie_participacao_w	= 'C') then
		ie_tipo_plano_w	:= 'CCP';
	elsif (ie_participacao_w	= 'S') then
		ie_tipo_plano_w	:= 'CSP';
	end if;
	NEW.ie_tipo_plano	:= ie_tipo_plano_w;
end if;

/*Tratamento para nao verificar essa coluna quando realizar carga dos beneficiarios*/


if (pls_usuario_pck.get_ie_importacao_benef = 'N') then
	/* Tratar para nao duplicar o codigo interno do beneficiario */


	BEGIN
	select	count(1)
	into STRICT	qt_reg_w
	from	pls_segurado a
	where	a.nr_seq_seg_contrato	= NEW.nr_seq_seg_contrato
	and	a.nr_sequencia		<> NEW.nr_sequencia
	and	a.nr_seq_contrato	= NEW.nr_seq_contrato;
	
	if (qt_reg_w > 0) then
		select	max(nr_seq_seg_contrato)
		into STRICT	nr_seq_seg_contrato_w
		from	pls_segurado
		where	nr_seq_contrato	= NEW.nr_seq_contrato;
		
		NEW.nr_seq_seg_contrato	:= coalesce(nr_seq_seg_contrato_w,0) + 1;
	end if;
	exception
	when others then
		ds_erro_w	:= '';
	end;
end if;

--Atualizar o status do beneficiario

if (NEW.dt_rescisao is not null) and (OLD.dt_rescisao is null) then --Rescisao

	CALL pls_atualiza_segurado_status(NEW.nr_sequencia, 2, NEW.dt_rescisao, NEW.nr_seq_motivo_cancelamento, NEW.nr_seq_plano, null, NEW.nm_usuario, NEW.cd_estabelecimento,'N');
	
	NEW.dt_reativacao_ant := OLD.dt_reativacao;
	
	if (OLD.dt_rescisao_ant is not null) then
		NEW.dt_rescisao_ant := null;
	end if;
	
elsif (NEW.dt_reativacao is not null) and (OLD.dt_reativacao is null) then --Reativacao

	CALL pls_atualiza_segurado_status(NEW.nr_sequencia, 3, NEW.dt_reativacao, null, NEW.nr_seq_plano, null, NEW.nm_usuario, NEW.cd_estabelecimento,'N');
	
	NEW.dt_rescisao_ant := OLD.dt_rescisao;
	
	if (OLD.dt_reativacao_ant is not null) then
		NEW.dt_reativacao_ant := null;
	end if;
	
elsif (NEW.dt_rescisao is null) and (OLD.dt_rescisao is not null) then --Desfazer rescisao

	CALL pls_atualiza_segurado_status(NEW.nr_sequencia, 3, OLD.dt_rescisao, null, NEW.nr_seq_plano, null, NEW.nm_usuario, NEW.cd_estabelecimento,'N');
	
elsif (NEW.dt_contratacao is not null) and (OLD.dt_contratacao is not null) and (NEW.dt_contratacao <> OLD.dt_contratacao) then --Alteracao da data de contratacao

	CALL pls_alt_segurado_status( NEW.nr_sequencia, 'I', OLD.dt_contratacao, NEW.dt_contratacao, NEW.nm_usuario, 'N');
	
elsif (NEW.dt_reativacao is not null) and (OLD.dt_reativacao is not null) and (NEW.dt_reativacao <> OLD.dt_reativacao) then --Alteracao da data de reativacao

	CALL pls_alt_segurado_status( NEW.nr_sequencia, 'I', OLD.dt_reativacao, NEW.dt_reativacao, NEW.nm_usuario, 'N');
	
elsif (NEW.dt_rescisao is not null) and (OLD.dt_rescisao is not null) and (NEW.dt_rescisao <> OLD.dt_rescisao) then --Alteracao da data de rescisao

	CALL pls_alt_segurado_status( NEW.nr_sequencia, 'F', OLD.dt_rescisao, NEW.dt_rescisao, NEW.nm_usuario, 'N');
	
end if;

<<Final>>
qt_reg_w	:= 0;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pls_seguradobeforepost() FROM PUBLIC;

CREATE TRIGGER pls_seguradobeforepost
	BEFORE INSERT OR UPDATE ON pls_segurado FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pls_seguradobeforepost();

