-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS inventario_material_insert ON inventario_material CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_inventario_material_insert() RETURNS trigger AS $BODY$
declare
cd_local_estoque_w		smallint;
cd_estabelecimento_w	smallint;
qt_bloqueado_w			smallint;
ie_estoque_lote_w		varchar(1);
nr_seq_lote_w			bigint;
qt_estoque_w			double precision;
ie_consignado_w			inventario.ie_consignado%type;

c01 CURSOR FOR
SELECT	nr_seq_lote,
	coalesce(qt_estoque,0)
from	saldo_estoque_lote a
where	cd_material = NEW.cd_material
and	cd_local_estoque = cd_local_estoque_w
and	cd_estabelecimento = cd_estabelecimento_w
and	dt_mesano_referencia = trunc(LOCALTIMESTAMP,'mm')
and	NEW.cd_fornecedor is null
and ie_consignado_w = 'N'
and	not exists (	SELECT 	1
			from	inventario_material_lote b
			where	b.nr_seq_item = NEW.nr_sequencia
			and	a.nr_seq_lote = b.nr_seq_lote_fornec)

union all

select	nr_seq_lote,
	coalesce(qt_estoque,0)
from	fornecedor_mat_consig_lote a
where	cd_material = NEW.cd_material
and	cd_local_estoque = cd_local_estoque_w
and	cd_estabelecimento = cd_estabelecimento_w
and	dt_mesano_referencia = trunc(LOCALTIMESTAMP,'mm')
and	NEW.cd_fornecedor is not null
and	a.cd_fornecedor = NEW.cd_fornecedor
and ie_consignado_w = 'S'
and	not exists (	select 	1
			from	inventario_material_lote b
			where	b.nr_seq_item = NEW.nr_sequencia
			and	a.nr_seq_lote = b.nr_seq_lote_fornec)

union all

select	nr_seq_lote,
	coalesce(qt_estoque,0)
from	fornecedor_mat_consig_lote a
where	cd_material = NEW.cd_material
and	cd_local_estoque = cd_local_estoque_w
and	cd_estabelecimento = cd_estabelecimento_w
and	dt_mesano_referencia = trunc(LOCALTIMESTAMP,'mm')
and	NEW.cd_fornecedor is null
and obter_se_mat_consignado(a.cd_material) in ('1', '2')
and ie_consignado_w = 'S'
and	not exists (	select 	1
			from	inventario_material_lote b
			where	b.nr_seq_item = NEW.nr_sequencia
			and	a.nr_seq_lote = b.nr_seq_lote_fornec);

BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
	select	cd_local_estoque,
		cd_estabelecimento,
		ie_consignado
	into STRICT	cd_local_estoque_w,
		cd_estabelecimento_w,
		ie_consignado_w
	from	inventario
	where	nr_sequencia = NEW.nr_seq_inventario;

	ie_estoque_lote_w := substr(coalesce(obter_se_material_estoque_lote(cd_estabelecimento_w,NEW.cd_material),'N'),1,1);

	if (ie_estoque_lote_w = 'S') then
		BEGIN
		open c01;
		loop
		fetch c01 into
			nr_seq_lote_w,
			qt_estoque_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			BEGIN
			insert into inventario_material_lote(
				nr_seq_item,
				nr_seq_inventario,
				nr_seq_lote_fornec,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nm_usuario,
				dt_atualizacao,
				nr_sequencia,
				qt_saldo)
			values (	NEW.nr_sequencia,
				NEW.nr_seq_inventario,
				nr_seq_lote_w,
				NEW.nm_usuario,
				NEW.dt_atualizacao,
				NEW.nm_usuario,
				NEW.dt_atualizacao,
				nextval('inventario_material_lote_seq'),
				qt_estoque_w);
			end;
		end loop;
		close c01;
		end;
	end if;
end if;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_inventario_material_insert() FROM PUBLIC;

CREATE TRIGGER inventario_material_insert
	AFTER INSERT ON inventario_material FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_inventario_material_insert();

