-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS procedimento_pac_ish_atual ON procedimento_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_procedimento_pac_ish_atual() RETURNS trigger AS $BODY$
declare
reg_integracao_p	gerar_int_padrao.reg_integracao;
nr_sequencia_w		varchar(35);
ie_gravar_w		varchar(1);
qt_eventos_w		bigint	:= 0;
ie_inserindo_proc_w	bigint	:= 0;
ie_classificacao_w	procedimento.ie_classificacao%type;
cd_grupo_proc_w     procedimento.cd_grupo_proc%type;
jobno 				bigint;
nm_usuario_w		usuario.nm_usuario%type;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S')  then

	nm_usuario_w	:= coalesce(NEW.nm_usuario,wheb_usuario_pck.get_nm_usuario);

	/* Verificar se existe cadastrado pelo menos um evento 54 - Enviar procedimento paciente */

	BEGIN
	select	count(1)
	into STRICT	qt_eventos_w
	from	intpd_eventos
	where	ie_evento	= '54'
	and	ie_situacao	= 'A'  LIMIT 1;
	exception
	when others then
		qt_eventos_w	:= 0;
	end;

	/* OS 1696809, alterei para considerar o gerar_int_padrao.get_executando_recebimento
	select	count(*)
	into	ie_inserindo_proc_w
	from	v$session
	where	audsid		= (select userenv('sessionid') from dual)
	and	upper(action) 	= 'INTPD_INSERIR_PROCEDIMENTO';*/
	if (qt_eventos_w > 0) and (gerar_int_padrao.get_executando_recebimento = 'N') then
		
		select	max(ie_classificacao),
                max(cd_grupo_proc)
		into STRICT	ie_classificacao_w, 
                cd_grupo_proc_w
		 from	procedimento
		where	cd_procedimento	= NEW.cd_procedimento       
		  and	ie_origem_proced = NEW.ie_origem_proced;

		if (TG_OP = 'INSERT') then
		
			reg_integracao_p.ie_operacao		:= 'I';
			reg_integracao_p.nr_seq_agrupador	:= NEW.nr_atendimento;
			reg_integracao_p.ie_status		:= 'P';
			reg_integracao_p.ie_classif_proced	:= ie_classificacao_w;
			reg_integracao_p.ie_origem_proced	:= NEW.ie_origem_proced;
			reg_integracao_p.cd_procedimento	:= NEW.cd_procedimento;
            reg_integracao_p.cd_grupo_proc	    := cd_grupo_proc_w;
			reg_integracao_p.nr_seq_proc_interno	:= NEW.nr_seq_proc_interno;
			reg_integracao_p.nr_atendimento		:= NEW.nr_atendimento;
			
			nr_sequencia_w				:= NEW.nr_sequencia;
			reg_integracao_p := gerar_int_padrao.gravar_integracao('54', nr_sequencia_w, nm_usuario_w, reg_integracao_p);
			
		elsif (TG_OP = 'UPDATE') then
		
			nr_sequencia_w				:= NEW.nr_sequencia;
			reg_integracao_p.nr_seq_agrupador	:= NEW.nr_atendimento;
			reg_integracao_p.ie_classif_proced	:= ie_classificacao_w;
			reg_integracao_p.ie_origem_proced	:= NEW.ie_origem_proced;
			reg_integracao_p.cd_procedimento	:= NEW.cd_procedimento;
            reg_integracao_p.cd_grupo_proc	    := cd_grupo_proc_w;
			reg_integracao_p.nr_seq_proc_interno	:= NEW.nr_seq_proc_interno;
			reg_integracao_p.nr_atendimento		:= NEW.nr_atendimento;
			reg_integracao_p.ie_status		:= 'P';

			if (NEW.cd_motivo_exc_conta is null) then
				reg_integracao_p.ie_operacao	:= 'A';
			elsif (NEW.cd_motivo_exc_conta is not null ) then
				reg_integracao_p.ie_operacao	:= 'E';
			end if;

			ie_gravar_w	:= 'S';
			
			if (reg_integracao_p.ie_operacao = 'A') then
				BEGIN
				select	'N'
				into STRICT	ie_gravar_w
				from	intpd_fila_transmissao
				where	nr_seq_documento	= NEW.nr_sequencia
				and	ie_evento	= '54'
				and	ie_status		in ('A','P')
				and	ie_operacao		= 'I'  LIMIT 1;
				exception
				when others then
					ie_gravar_w	:= 'S';
				end;
			end if;
			
			if (ie_gravar_w = 'S') then
				reg_integracao_p := gerar_int_padrao.gravar_integracao('54', nr_sequencia_w, nm_usuario_w, reg_integracao_p);
			end if;
			
		elsif (TG_OP = 'DELETE') then
		
		
			select	max(ie_classificacao),
                    max(cd_grupo_proc)
			into STRICT	ie_classificacao_w,
                    cd_grupo_proc_w
			from	procedimento
			where	cd_procedimento	= OLD.cd_procedimento
			  and	ie_origem_proced = OLD.ie_origem_proced;
			
			reg_integracao_p.ie_operacao		:= 'E';
			reg_integracao_p.ie_status		:= 'P';
			reg_integracao_p.ie_classif_proced	:= ie_classificacao_w;
			reg_integracao_p.nr_seq_agrupador	:= OLD.nr_atendimento;
			nr_sequencia_w				:= OLD.nr_sequencia;
			reg_integracao_p.nr_atendimento		:= OLD.nr_atendimento;
			
			reg_integracao_p := gerar_int_padrao.gravar_integracao('54', nr_sequencia_w, OLD.nm_usuario, reg_integracao_p);
			
		end if;
	end if;

	/* Verificar se existe cadastrado pelo menos um evento 161*/

	BEGIN
	select	count(1)
	into STRICT	qt_eventos_w
	from	intpd_eventos
	where	ie_evento	= '161'
	and	ie_situacao	= 'A'  LIMIT 1;
	exception
	when others then
		qt_eventos_w	:= 0;
	end;

	if (TG_OP = 'INSERT') and (qt_eventos_w > 0) then
		reg_integracao_p.cd_estab_documento := wheb_usuario_pck.get_cd_estabelecimento();

		reg_integracao_p.ie_status			:= 'P';
		reg_integracao_p.nr_seq_item_documento_p	:= '2';
		reg_integracao_p.nr_seq_agrupador		:= null;
		reg_integracao_p.ie_operacao			:= 'I';
		reg_integracao_p.nr_atendimento			:= NEW.nr_atendimento;

		if (NEW.qt_procedimento >= 0) then
			reg_integracao_p := gerar_int_padrao.gravar_integracao('161', NEW.nr_sequencia, nm_usuario_w, reg_integracao_p);
		else
			dbms_job.submit(jobno, 'intpd_gerar_devol_proced(' || to_char(NEW.cd_procedimento) || ', ' ||
										to_char('null') || ', ' ||
										to_char(NEW.nr_atendimento) || ', ' ||
										to_char('null') || ', ' ||
										to_char(NEW.nr_sequencia) || ', ' ||
										to_char(replace(NEW.qt_procedimento,',','.')) || ', ' ||
										to_char(NEW.cd_setor_atendimento) || ', ' || chr(39) ||
										to_char(nm_usuario_w) || chr(39) || ');');

		end if;
	end if;
end if;

  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_procedimento_pac_ish_atual() FROM PUBLIC;

CREATE TRIGGER procedimento_pac_ish_atual
	AFTER INSERT OR UPDATE OR DELETE ON procedimento_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_procedimento_pac_ish_atual();

