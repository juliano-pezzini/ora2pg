-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS paciente_atendimento_ci ON paciente_atendimento CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_paciente_atendimento_ci() RETURNS trigger AS $BODY$
declare
nr_seq_evento_w			bigint;
qt_idade_w				bigint;
cd_estabelecimento_w	smallint;
cd_pessoa_fisica_w		varchar(10);
ds_informacao_w			varchar(255);
nr_atendimento_w		paciente_atendimento.nr_atendimento%type;

C01 CURSOR FOR
	SELECT	nr_seq_evento
	from	regra_envio_sms
	where	((cd_estabelecimento_w = 0) or (cd_estabelecimento	= cd_estabelecimento_w))
	and		ie_evento_disp		= 'ATO'
	and		qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999)
	and		coalesce(ie_situacao,'A') = 'A';
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'N') then
    goto final;
end if;

BEGIN

nr_atendimento_w := NEW.nr_atendimento;

if (coalesce(nr_atendimento_w, 0) = 0) then

	select	max(cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_w
	from	paciente_setor
	where	nr_seq_paciente = NEW.nr_seq_paciente;

	select	max(nr_atendimento)
	into STRICT 	nr_atendimento_w
	from 	atendimento_paciente
	where 	cd_pessoa_fisica = cd_pessoa_fisica_w;
end if;

if (OLD.dt_prevista <> NEW.dt_prevista) and (coalesce(nr_atendimento_w,0) > 0) then
	BEGIN
			
	select	coalesce(max(cd_estabelecimento),0),
		max(cd_pessoa_fisica)
	into STRICT	cd_estabelecimento_w,
		cd_pessoa_fisica_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_w;
	qt_idade_w	:= coalesce(obter_idade_pf(cd_pessoa_fisica_w,LOCALTIMESTAMP,'A'),0);
	
	select	obter_desc_expressao(781783, 'MACRO1' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(OLD.dt_prevista, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)|| 'MACRO2' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(NEW.dt_prevista, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone))/*'Alterada a data de ' || to_char(OLD.dt_prevista,'dd/mm/yyyy hh24:mi:ss') || ' para ' || to_char(NEW.dt_prevista,'dd/mm/yyyy hh24:mi:ss')*/
	into STRICT	ds_informacao_w
	;
	
	open C01;
	loop
	fetch C01 into	
		nr_seq_evento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN
		CALL gerar_evento_paciente_trigger(nr_seq_evento_w,nr_atendimento_w,cd_pessoa_fisica_w,null,NEW.nm_usuario,ds_informacao_w);
		end;
	end loop;
	close C01;
	
	end;
end if;

exception
when others then
	null;

end;

<<final>>
null;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_paciente_atendimento_ci() FROM PUBLIC;

CREATE TRIGGER paciente_atendimento_ci
	AFTER UPDATE ON paciente_atendimento FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_paciente_atendimento_ci();

