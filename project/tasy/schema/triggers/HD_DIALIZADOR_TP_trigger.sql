-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS hd_dializador_tp ON hd_dializador CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_hd_dializador_tp() RETURNS trigger AS $BODY$
DECLARE nr_seq_w bigint;ds_s_w   varchar(1);ds_c_w   varchar(1);ds_w	   varchar(1);ie_log_w varchar(1);BEGIN BEGIN ds_s_w := to_char(OLD.NR_SEQUENCIA);  ds_c_w:=null;SELECT * FROM gravar_log_alteracao(substr(OLD.IE_TIPO,1,4000), substr(NEW.IE_TIPO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_TIPO', ie_log_w, ds_w, 'HD_DIALIZADOR', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_STATUS,1,4000), substr(NEW.IE_STATUS,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_STATUS', ie_log_w, ds_w, 'HD_DIALIZADOR', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DT_PRIMING,1,4000), substr(NEW.DT_PRIMING,1,4000), NEW.nm_usuario, nr_seq_w, 'DT_PRIMING', ie_log_w, ds_w, 'HD_DIALIZADOR', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_PRIMING,1,4000), substr(NEW.QT_PRIMING,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_PRIMING', ie_log_w, ds_w, 'HD_DIALIZADOR', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_PESSOA_FISICA,1,4000), substr(NEW.CD_PESSOA_FISICA,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_PESSOA_FISICA', ie_log_w, ds_w, 'HD_DIALIZADOR', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_DIALIZADOR,1,4000), substr(NEW.NR_DIALIZADOR,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_DIALIZADOR', ie_log_w, ds_w, 'HD_DIALIZADOR', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_PRIMING_ATUAL,1,4000), substr(NEW.QT_PRIMING_ATUAL,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_PRIMING_ATUAL', ie_log_w, ds_w, 'HD_DIALIZADOR', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.PR_PERDA,1,4000), substr(NEW.PR_PERDA,1,4000), NEW.nm_usuario, nr_seq_w, 'PR_PERDA', ie_log_w, ds_w, 'HD_DIALIZADOR', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_MAX_REUSO,1,4000), substr(NEW.NR_MAX_REUSO,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_MAX_REUSO', ie_log_w, ds_w, 'HD_DIALIZADOR', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_CAPILAR_PRC,1,4000), substr(NEW.NR_CAPILAR_PRC,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_CAPILAR_PRC', ie_log_w, ds_w, 'HD_DIALIZADOR', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DT_PRIM_LAVAGEM,1,4000), substr(NEW.DT_PRIM_LAVAGEM,1,4000), NEW.nm_usuario, nr_seq_w, 'DT_PRIM_LAVAGEM', ie_log_w, ds_w, 'HD_DIALIZADOR', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DT_PRIM_USO,1,4000), substr(NEW.DT_PRIM_USO,1,4000), NEW.nm_usuario, nr_seq_w, 'DT_PRIM_USO', ie_log_w, ds_w, 'HD_DIALIZADOR', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_PRIMING_FINAL,1,4000), substr(NEW.QT_PRIMING_FINAL,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_PRIMING_FINAL', ie_log_w, ds_w, 'HD_DIALIZADOR', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_REUSO,1,4000), substr(NEW.QT_REUSO,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_REUSO', ie_log_w, ds_w, 'HD_DIALIZADOR', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DT_DEFINIDO_PACIENTE,1,4000), substr(NEW.DT_DEFINIDO_PACIENTE,1,4000), NEW.nm_usuario, nr_seq_w, 'DT_DEFINIDO_PACIENTE', ie_log_w, ds_w, 'HD_DIALIZADOR', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DT_ULTIMO_PREPARO,1,4000), substr(NEW.DT_ULTIMO_PREPARO,1,4000), NEW.nm_usuario, nr_seq_w, 'DT_ULTIMO_PREPARO', ie_log_w, ds_w, 'HD_DIALIZADOR', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;   exception when others then ds_w:= '1'; end;   END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_hd_dializador_tp() FROM PUBLIC;

CREATE TRIGGER hd_dializador_tp
	AFTER UPDATE ON hd_dializador FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_hd_dializador_tp();

