-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS titulo_pagar_log_tiss_update ON titulo_pagar CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_titulo_pagar_log_tiss_update() RETURNS trigger AS $BODY$
declare

ie_tipo_evento_w	pls_monitor_tiss_alt.ie_tipo_evento%type	:= null;
ie_gera_w		varchar(1) := 'S';
qt_reg_criados_w	integer := 0;
qt_reg_env_w		integer := 0;

c_contas CURSOR(	nr_titulo_pc		pls_oc_cta_filtro.nr_sequencia%type,
			nr_seq_lote_res_pls_pc	titulo_pagar.nr_seq_lote_res_pls%type) FOR
	SELECT 	distinct a.nr_seq_conta
	from	pls_conta_medica_resumo		a,
		pls_pag_prest_vencimento	b,
		pls_pagamento_prestador		c,
		pls_pagamento_item		d,
		pls_lote_pagamento		e
	where	e.nr_sequencia = c.nr_seq_lote
	and	a.nr_seq_lote_pgto = e.nr_sequencia
	and	a.nr_seq_pag_item = d.nr_sequencia
	and	c.nr_sequencia	= d.nr_seq_pagamento
	and	c.nr_sequencia	= b.nr_seq_pag_prestador
	and	b.nr_titulo	= nr_titulo_pc
	and	nr_seq_lote_res_pls_pc is null
	
union all

	SELECT  distinct a.nr_seq_conta
	from  	pls_conta_medica_resumo a,
		pls_pp_prestador b
	where   a.ie_situacao = 'A'
	and  	b.nr_seq_lote = a.nr_seq_pp_lote
	and  	b.nr_seq_prestador = a.nr_seq_prestador_pgto
	and  	b.nr_titulo_pagar = nr_titulo_pc
	and	nr_seq_lote_res_pls_pc is null
	
union all

	select distinct a.nr_sequencia
	from	pls_conta a,
		pls_protocolo_conta b,
		pls_prot_conta_titulo c,
		pls_lote_protocolo d,
		pls_lote_protocolo_venc e
	where	a.nr_seq_protocolo = b.nr_sequencia
	and	b.nr_sequencia = c.nr_seq_protocolo
	and	c.nr_seq_lote = d.nr_sequencia
	and	d.nr_sequencia = e.nr_seq_lote
	and	e.nr_titulo = nr_titulo_pc
	and	nr_seq_lote_res_pls_pc is not null
	
union all

	select 	distinct a.nr_sequencia nr_seq_conta
	from	pls_conta			a,
		ptu_fatura			b
	where	a.nr_seq_fatura		= b.nr_sequencia
	and	b.nr_titulo		= nr_titulo_pc
	and	nr_seq_lote_res_pls_pc 	is null;
		
c_recursos CURSOR(	nr_titulo_pc	pls_oc_cta_filtro.nr_sequencia%type) FOR
	SELECT	d.nr_seq_conta,
		f.nr_seq_conta_proc,
		null nr_seq_conta_mat,
		d.nr_sequencia nr_seq_conta_rec,
		f.nr_sequencia nr_seq_proc_rec,
		null nr_seq_mat_rec
	from	pls_rec_glosa_proc		f,
		pls_rec_glosa_conta		d,
		pls_conta_rec_resumo_item	c,
		pls_pagamento_prestador		b,
		pls_pag_prest_vencimento	a
	where	c.nr_seq_prestador_pgto	= b.nr_seq_prestador
	and	b.nr_seq_lote           = c.nr_seq_lote_pgto
	and	c.nr_seq_conta_rec	= d.nr_sequencia
	and	a.nr_seq_pag_prestador	= b.nr_sequencia
	and	c.nr_seq_proc_rec	= f.nr_sequencia
	and	a.nr_titulo		= nr_titulo_pc
	
union all

	SELECT	d.nr_seq_conta,
		null nr_seq_conta_proc,
		f.nr_seq_conta_mat,
		d.nr_sequencia nr_seq_conta_rec,
		null nr_seq_proc_rec,
		f.nr_sequencia nr_seq_mat_rec
	from	pls_rec_glosa_mat		f,
		pls_rec_glosa_conta		d,
		pls_conta_rec_resumo_item	c,
		pls_pagamento_prestador		b,
		pls_pag_prest_vencimento	a
	where	c.nr_seq_prestador_pgto	= b.nr_seq_prestador
	and	b.nr_seq_lote           = c.nr_seq_lote_pgto
	and	c.nr_seq_conta_rec	= d.nr_sequencia
	and	a.nr_seq_pag_prestador	= b.nr_sequencia
	and	c.nr_seq_mat_rec	= f.nr_sequencia
	and	a.nr_titulo		= nr_titulo_pc;
	
c_reembolso CURSOR(	nr_seq_protocolo_p	pls_protocolo_conta.nr_sequencia%type) FOR
	SELECT	b.nr_sequencia nr_seq_conta,
		a.nr_sequencia nr_seq_conta_proc,
		null nr_seq_conta_mat
	from	pls_conta		b,
		pls_conta_proc		a
	where	a.nr_seq_conta		= b.nr_sequencia
	and	b.nr_seq_protocolo	= nr_seq_protocolo_p
	and	b.ie_status		= 'F'
	and	a.ie_status		<> 'M'
	
union all

	SELECT	b.nr_sequencia nr_seq_conta,
		null nr_seq_conta_proc,
		a.nr_sequencia nr_seq_conta_mat
	from	pls_conta		b,
		pls_conta_mat		a
	where	a.nr_seq_conta		= b.nr_sequencia
	and	b.nr_seq_protocolo	= nr_seq_protocolo_p
	and	b.ie_status		= 'F'
	and	a.ie_status		<> 'M';

BEGIN

if (coalesce(wheb_usuario_pck.get_ie_executar_trigger,'S') = 'S') then

-- Quando o t?tulo foi liquidado

if (OLD.dt_liquidacao is null) and (NEW.dt_liquidacao is not null) and (NEW.ie_situacao <> 'C')/*Tem que desconsiderar os t?tulos que foram cancelados*/
 then
	-- Pagamento da conta m?dica

	ie_tipo_evento_w	:= 'PC';
elsif (OLD.dt_liquidacao is not null) and (NEW.dt_liquidacao is null) and (NEW.ie_situacao <> 'C')/*Tem que desconsiderar os t?tulos que foram cancelados*/
 then
	ie_tipo_evento_w	:= 'EX';
end if;

if (ie_tipo_evento_w is not null) then

	for r_c_contas_w in c_contas(NEW.nr_titulo, NEW.nr_seq_lote_res_pls) loop
		
		if (ie_tipo_evento_w	= 'EX') then
		
			--se esta extornando e tem registros em lote de monitoramento, necessita fazer verificacoes.

			-- caso ja executada preparacao de base ou envio, nao deve atualizar o status do registro na tabela de controle

			select 	count(1)
			into STRICT   	qt_reg_env_w
			from   	pls_monitor_tiss_alt a,
				pls_monitor_tiss_cta_val b,
				PLS_MONITOR_TISS_LOTE c
			where  	b.nr_seq_cta_alt = a.nr_sequencia
			and    	b.nr_seq_lote_monitor = c.nr_sequencia
			and    	a.nr_seq_conta = r_c_contas_w.nr_seq_conta
			and    	c.ie_status in ('LG', 'PE') 
			and 	a.ie_tipo_evento = 'PC';
			
			if ( qt_reg_env_w = 0) then
			
				-- nesse caso atualiza o status na tabela de controle

				update 	pls_monitor_tiss_alt
				set	ie_status = 'D'
				where	nr_seq_conta	= r_c_contas_w.nr_seq_conta
				and	ie_tipo_evento	= 'PC';
			
				--verifica se tem registro no lote mas apenas foi gerado o mesmo, sem execucao da preparacao de base

				select 	count(1)
				into STRICT   	qt_reg_criados_w
				from   	pls_monitor_tiss_alt a,
					pls_monitor_tiss_cta_val b,
					PLS_MONITOR_TISS_LOTE c
				where  	b.nr_seq_cta_alt = a.nr_sequencia
				and    	b.nr_seq_lote_monitor = c.nr_sequencia
				and    	a.nr_seq_conta = r_c_contas_w.nr_seq_conta
				and    	c.ie_status in ('LE', 'PI', 'U') 
				and 	a.ie_tipo_evento = 'PC';
				
				if (	qt_reg_criados_w > 0) then
				
					
					delete	FROM pls_monitor_tiss_inc_val
					where	nr_seq_cta_val	in (SELECT	nr_sequencia
						 from 	pls_monitor_tiss_cta_val
						 where 	nr_seq_cta_alt in ( 	SELECT 	nr_sequencia
										from 	pls_monitor_tiss_alt 
										where 	nr_seq_conta = r_c_contas_w.nr_seq_conta 
										and 	ie_tipo_evento = 'PC'));
					

					
					delete	FROM pls_monitor_tiss_alt_guia
					where	nr_seq_cta_val	in (SELECT	nr_sequencia
						 from 	pls_monitor_tiss_cta_val
						 where 	nr_seq_cta_alt in ( 	SELECT 	nr_sequencia
										from 	pls_monitor_tiss_alt 
										where 	nr_seq_conta = r_c_contas_w.nr_seq_conta 
										and 	ie_tipo_evento = 'PC'));
					

					
					delete	FROM pls_monitor_tiss_mat_val
					where	nr_seq_cta_val	in (SELECT	nr_sequencia
						 from 	pls_monitor_tiss_cta_val
						 where 	nr_seq_cta_alt in ( 	SELECT 	nr_sequencia
										from 	pls_monitor_tiss_alt 
										where 	nr_seq_conta = r_c_contas_w.nr_seq_conta 
										and 	ie_tipo_evento = 'PC'));
					

					
					delete	FROM pls_monitor_tiss_proc_val
					where	nr_seq_cta_val	in (SELECT	nr_sequencia
						 from 	pls_monitor_tiss_cta_val
						 where 	nr_seq_cta_alt in ( 	SELECT 	nr_sequencia
										from 	pls_monitor_tiss_alt 
										where 	nr_seq_conta = r_c_contas_w.nr_seq_conta 
										and 	ie_tipo_evento = 'PC'));
					
				
					--se tiver, alem da atualizacao de status anterior, remove o item do lote.

					delete from pls_monitor_tiss_cta_val
					where 	nr_seq_cta_alt in ( 	SELECT 	nr_sequencia
									from 	pls_monitor_tiss_alt 
									where 	nr_seq_conta = r_c_contas_w.nr_seq_conta 
									and 	ie_tipo_evento = 'PC');				
				end if;			
			end if;
			
		else
						
			ie_gera_w := 'S';
			
			if ( ie_tipo_evento_w = 'PC') then
				ie_gera_w := pls_obter_se_pgto_monit(r_c_contas_w.nr_seq_conta);
			end if;						
			
			if (ie_gera_w = 'S') then
				CALL pls_tiss_gravar_log_monitor(	ie_tipo_evento_w,
								r_c_contas_w.nr_seq_conta,
								null,
								null,
								null,
								null,
								null,
								null,
								null,
								null,
								null,
								wheb_usuario_pck.get_nm_usuario,
								NEW.dt_liquidacao);
			end if;
		end if;
	end loop;
	
	-- Recursos que foram pagos no t?tulo a pagar

	for r_c_recursos in c_recursos(NEW.nr_titulo) loop
		
		if (ie_tipo_evento_w	= 'EX') then
			delete	FROM pls_monitor_tiss_alt
			where	nr_seq_conta	= r_c_recursos.nr_seq_conta
			and	ie_tipo_evento	= 'PR';
		else
			ie_gera_w := 'S';
			
			if (ie_tipo_evento_w = 'PC') then
				ie_gera_w := pls_obter_se_pgto_monit(r_c_recursos.nr_seq_conta);
			end if;
			
			if (ie_gera_w = 'S') then
				CALL pls_tiss_gravar_log_monitor(	'PR',
								r_c_recursos.nr_seq_conta,
								null,
								null,
								r_c_recursos.nr_seq_conta_rec,
								null,
								null,
								null,
								null,
								null,
								null,
								wheb_usuario_pck.get_nm_usuario,
								NEW.dt_liquidacao);
			end if;
		end if;
	end loop;
	
	--Reembolso

	if (NEW.nr_seq_reembolso is not null) then
		for r_c_reembolso in c_reembolso(NEW.nr_seq_reembolso) loop
			if (ie_tipo_evento_w	= 'EX') then
				delete	FROM pls_monitor_tiss_alt
				where	nr_seq_conta	= r_c_reembolso.nr_seq_conta
				and	ie_tipo_evento	= 'PC';
			else
				ie_gera_w := 'S';
			
				if (ie_tipo_evento_w = 'PC') then
					ie_gera_w := pls_obter_se_pgto_monit(r_c_reembolso.nr_seq_conta);
				end if;
				
				if (ie_gera_w = 'S') then
					CALL pls_tiss_gravar_log_monitor(	'PC',
									r_c_reembolso.nr_seq_conta,
									r_c_reembolso.nr_seq_conta_proc,
									r_c_reembolso.nr_seq_conta_mat,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									wheb_usuario_pck.get_nm_usuario,
									NEW.dt_liquidacao);
				end if;
			end if;
		end loop;
	end if;
end if;

end if;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_titulo_pagar_log_tiss_update() FROM PUBLIC;

CREATE TRIGGER titulo_pagar_log_tiss_update
	BEFORE UPDATE ON titulo_pagar FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_titulo_pagar_log_tiss_update();

