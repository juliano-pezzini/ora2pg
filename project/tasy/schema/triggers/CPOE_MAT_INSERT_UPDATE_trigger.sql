-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS cpoe_mat_insert_update ON cpoe_material CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_cpoe_mat_insert_update() RETURNS trigger AS $BODY$
declare

_ora2pg_r RECORD;
ds_retorno_w		varchar(255);
ie_operacao_w		intervalo_prescricao.ie_operacao%type;
ie_justificativa_w	regra_antimicrobiano.ie_justificativa%type;
ie_objetivo_proc_w	regra_antimicrobiano.ie_objetivo%type;
ie_dia_utilizacao_w	regra_antimicrobiano.ie_dia_utilizacao%type;
ie_topografia_w		regra_antimicrobiano.ie_topografia%type;
ie_amostra_w		regra_antimicrobiano.ie_amostra%type;
ie_microorganismo_w	regra_antimicrobiano.ie_microorganismo%type;
ie_origem_w			regra_antimicrobiano.ie_origem%type;
ie_exige_indicacao_w	regra_antimicrobiano.ie_indicacao%type;
qt_dias_prev_w		regra_antimicrobiano.qt_dias_prev%type;
ie_obj_regra_w		regra_antimicrobiano.ie_objetivo_filtro%type;
ie_lib_auto_w		regra_antimicrobiano.ie_lib_auto%type;
ie_possui_regra_w	varchar(5);

ds_orientacao_preparo_w	varchar(4000);
qt_vel_infusao_w	double precision;
ie_tipo_dosagem_w	varchar(255);
ds_min_aplic_med_w	varchar(30);
dt_min_date_w			timestamp := to_date('30/12/1899 00:00:00', 'dd/mm/yyyy hh24:mi:ss');
is_antecipated_batch_w	varchar(1) := 'N';
dt_prox_geracao_regra_w	timestamp;
ie_regra_intervalo_w 	cpoe_material.cd_intervalo%type;
qt_dias_lib_padrao_w	parametro_medico.qt_dias_lib_padrao%type;

/* Integracao com o sistema blackboard */


json_aux_bb philips_json;
envio_integracao_bb text;
retorno_integracao_bb text;

json_aux_cancel_bb philips_json;
envio_integracao_cancel_bb text;
retorno_integracao_cancel_bb text;

bb_isPRN varchar(32);
bb_antimicrobiano     medic_ficha_tecnica.ie_antimicrobiano%type;
bb_material           material.ds_material%type;
bb_ie_variavel        algoritmos_var_ficha_tec.ie_variavel%TYPE;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then

if (NEW.ie_evento_unico = 'S') and
	((NEW.dt_fim is null) or (NEW.dt_fim > NEW.dt_inicio + 1)) then
	NEW.ie_duracao := 'P';
	NEW.dt_fim := (NEW.dt_inicio + 1) -1/86400;
end if;

if (NEW.hr_prim_horario is not null and position(':' in NEW.hr_prim_horario) > 0) then
	if ((substr(NEW.hr_prim_horario,0,position(':' in NEW.hr_prim_horario) - 1))::numeric  > 23) then
		NEW.hr_prim_horario := to_char(NEW.dt_inicio, 'hh24:mi');
	end if;
end if;

if (NEW.NR_SEQ_CPOE_RP is not null)
    and (coalesce(OLD.NR_SEQ_CPOE_RP, 0) <> NEW.NR_SEQ_CPOE_RP) then
    BEGIN    
        select 
            rp.NR_SEQ_GRUPO_INTERVAL, 
            rp.NR_SEQ_SUBGRUPO_INTERVAL, 
            rp.CD_INTERVALO 
         into STRICT
             NEW.NR_SEQ_GRUPO_INTERVAL,
             NEW.NR_SEQ_SUBGRUPO_INTERVAL,
             NEW.CD_INTERVALO
        from CPOE_RP rp
        where rp.NR_SEQUENCIA = NEW.NR_SEQ_CPOE_RP;
    exception
        when others then
        BEGIN
            null;
        end;
    end;
end if;

if (obter_ctrl_antimicrobiano_mat(NEW.cd_material) = 0 and NEW.dt_fim_cih is not null) then
	NEW.dt_fim_cih := null;
	NEW.qt_dias_liberado := null;
	NEW.qt_dias_solicitado := null;
end if;

if (NEW.dt_fim is not null) and (length(NEW.hr_prim_horario) = 5) and (to_date(to_char(NEW.dt_inicio,'dd/mm/yyyy')||' '||NEW.hr_prim_horario||':00','dd/mm/yyyy hh24:mi:ss') > NEW.dt_fim) and (coalesce(OLD.dt_fim,LOCALTIMESTAMP) <> NEW.dt_fim) and (NEW.dt_suspensao is null) and (coalesce(NEW.ie_baixado_por_alta,'N') = 'N') then
	NEW.dt_fim := OLD.dt_fim;	
end if;

if (coalesce(NEW.ie_dose_ataque,'N') = 'N') then
	NEW.qt_dose_ataque := null;
	NEW.hr_min_aplic_ataque := null;
	NEW.qt_min_fase_ataque := null;
	NEW.qt_dosagem_ataque := null;
	NEW.ie_tipo_dosagem_ataque := null;
end if;

if (coalesce(NEW.ie_antibiotico,'N') = 'S' and NEW.ds_justificativa is null) then

	SELECT * FROM cpoe_obter_dados_antimicrob(NEW.cd_material, Obter_perfil_Ativo, obter_estabelecimento_ativo, NEW.nm_usuario, NEW.ie_objetivo, NEW.cd_intervalo) INTO STRICT _ora2pg_r;
 ie_justificativa_w := _ora2pg_r.ie_justificativa_p; ie_objetivo_proc_w := _ora2pg_r.ie_objetivo_p; ie_dia_utilizacao_w := _ora2pg_r.ie_dia_utilizacao_p; ie_topografia_w := _ora2pg_r.ie_topografia_p; ie_amostra_w := _ora2pg_r.ie_amostra_p; ie_microorganismo_w := _ora2pg_r.ie_microorganismo_p; ie_origem_w := _ora2pg_r.ie_origem_p; ie_exige_indicacao_w := _ora2pg_r.ie_exige_indicacao_p; qt_dias_prev_w := _ora2pg_r.qt_dias_prev_p; ie_obj_regra_w := _ora2pg_r.ie_obj_regra_p; ie_lib_auto_w := _ora2pg_r.ie_lib_auto_p; ie_possui_regra_w := _ora2pg_r.ie_possui_regra_p; ie_regra_intervalo_w := _ora2pg_r.ie_regra_intervalo_p; qt_dias_lib_padrao_w := _ora2pg_r.qt_dias_lib_padrao_p;

	if ((ie_possui_regra_w = 'N') or ((ie_possui_regra_w = 'S') and (coalesce(ie_justificativa_w, 'N') = 'N'))) then
		NEW.ds_justificativa := wheb_mensagem_pck.get_texto(346895);
	end if;
end if;

if (NEW.hr_prim_horario is not null) and (length(NEW.hr_prim_horario) < 5) then

	ds_retorno_w := formatar_primeiro_horario(NEW.hr_prim_horario, ds_retorno_w);

	if (ds_retorno_w = 'N') then
		NEW.hr_prim_horario := null;
	else
		NEW.hr_prim_horario := ds_retorno_w;
	end if;

end if;

if	((NEW.ds_horarios is null) or (NEW.ds_horarios = '')) and (NEW.ie_administracao = 'P') then
	if (OLD.ds_horarios is not null) then
		NEW.ds_horarios	:= OLD.ds_horarios;
	end if;

end if;

if (NEW.nr_cirurgia is not null) and (NEW.ie_tipo_prescr_cirur is null) then
	NEW.ie_tipo_prescr_cirur := 2;
end if;

if (NEW.ie_duracao = 'C') and (OLD.ie_duracao = 'P') and (NEW.dt_fim is not null) then
	NEW.dt_fim := null;
end if;

IF (OBTER_SE_INTEGRACAO_ATIVA(966, 245) = 'S') THEN
  SELECT coalesce(ft.ie_antimicrobiano, 'N'), COALESCE(m.ds_material, '')
  INTO STRICT bb_antimicrobiano, bb_material
  FROM material m
LEFT OUTER JOIN medic_ficha_tecnica ft ON (m.nr_seq_ficha_tecnica = ft.nr_sequencia)
WHERE m.cd_material = NEW.cd_material  AND coalesce(ft.ie_situacao, 'A') = 'A';

  SELECT ie_variavel
  INTO STRICT bb_ie_variavel
  FROM material m
LEFT OUTER JOIN medic_ficha_tecnica ft ON (m.nr_seq_ficha_tecnica = ft.nr_sequencia)
LEFT OUTER JOIN algoritmos_var_ficha_tec av ON (ft.nr_sequencia = av.nr_seq_ficha_tecnica)
WHERE m.cd_material = NEW.cd_material   AND coalesce(ft.ie_situacao, 'A') = 'A';

  if (OLD.dt_liberacao IS NULL AND NEW.dt_liberacao IS NOT NULL and (bb_antimicrobiano = 'S' OR bb_ie_variavel in (13,14,15,16,17))) then

      IF (NEW.ie_administracao = 'N') THEN
          bb_isPRN := '19f8ca9898334625a57b828cc2ede20b';
      ELSE
          bb_isPRN := 'd33c711e079743b4a527c3613e402f4b';
      END IF;

      json_aux_bb := philips_json();
      json_aux_bb.put('typeID', 'ORDERS');
      json_aux_bb.put('messageDateTime', TO_CHAR((CURRENT_TIMESTAMP + interval '1' minute AT TIME ZONE 'UTC'), 'YYYY-MM-DD HH24:MI:SS.SSSSS'));
      json_aux_bb.put('patientHealthSystemStayID', LPAD(TO_CHAR(NEW.NR_ATENDIMENTO), 32, 0));
      json_aux_bb.put('drugOrderId', TO_CHAR(NEW.NR_SEQUENCIA));
      json_aux_bb.put('isOrderCancelled', '0');
      json_aux_bb.put('drugName', bb_material);

      CASE
        WHEN bb_ie_variavel is null THEN
          json_aux_bb.put('hiclSeqNo', '3963');
        WHEN bb_ie_variavel = 13 THEN
          json_aux_bb.put('hiclSeqNo', '3744');
        WHEN bb_ie_variavel = 14 THEN
          json_aux_bb.put('hiclSeqNo', '8963');
        WHEN bb_ie_variavel = 15 THEN
          json_aux_bb.put('hiclSeqNo', '3743');
        WHEN bb_ie_variavel = 16 THEN
          json_aux_bb.put('hiclSeqNo', '10278');
        WHEN bb_ie_variavel = 17 THEN
          json_aux_bb.put('hiclSeqNo', '3745');
        ELSE
          json_aux_bb.put('hiclSeqNo', '3963');
      END CASE;

      json_aux_bb.put('startDate', TO_CHAR(f_extract_utc_bb(NEW.DT_INICIO), 'YYYY-MM-DD"T"HH24:MI'));
      json_aux_bb.put('startDateOffset', '0');

      IF (NEW.DT_FIM IS NOT NULL) THEN
          json_aux_bb.put('stopDate', TO_CHAR(f_extract_utc_bb(NEW.DT_FIM), 'YYYY-MM-DD"T"HH24:MI'));
          json_aux_bb.put('stopDateOffset', '0');
      END IF;

      json_aux_bb.put('dosage', '100');
      json_aux_bb.put('dosageUnit', '46cbde6ca7794327a605bcdd06c8a951');
      json_aux_bb.put('isPRN', bb_isPRN);
      json_aux_bb.put('routeAdminId', '6b11c6d982f54d27b624215b6f39d937');

      dbms_lob.createtemporary(envio_integracao_bb, TRUE);
      json_aux_bb.(envio_integracao_bb);

      SELECT BIFROST.SEND_INTEGRATION_CONTENT('Blackboard_Medical_Order',envio_integracao_bb,wheb_usuario_pck.get_nm_usuario) into STRICT retorno_integracao_bb;

  end if;

  if (OLD.dt_suspensao IS NULL AND NEW.dt_suspensao IS NOT NULL and bb_antimicrobiano = 'S') then

      json_aux_cancel_bb := philips_json();
      json_aux_cancel_bb.put('typeID', 'ORDERS');
      json_aux_cancel_bb.put('messageDateTime', TO_CHAR((CURRENT_TIMESTAMP AT TIME ZONE 'UTC'), 'YYYY-MM-DD HH24:MI:SS.SSSSS'));
      json_aux_cancel_bb.put('patientHealthSystemStayID', LPAD(TO_CHAR(NEW.NR_ATENDIMENTO), 32, 0));
      json_aux_cancel_bb.put('drugOrderId', TO_CHAR(NEW.NR_SEQUENCIA));
      json_aux_cancel_bb.put('isOrderCancelled', '1');
      json_aux_cancel_bb.put('hiclSeqNo', '3963');
      json_aux_cancel_bb.put('startDate', TO_CHAR(f_extract_utc_bb(NEW.DT_INICIO), 'YYYY-MM-DD"T"HH24:MI'));
      json_aux_cancel_bb.put('startDateOffset', '0');

      dbms_lob.createtemporary(envio_integracao_cancel_bb, TRUE);
      json_aux_cancel_bb.(envio_integracao_cancel_bb);

      SELECT BIFROST.SEND_INTEGRATION_CONTENT('Blackboard_Medical_Order_Cancel',envio_integracao_cancel_bb,wheb_usuario_pck.get_nm_usuario) into STRICT retorno_integracao_cancel_bb;

  end if;
end if;

BEGIN
    /* Solucoes ou medicamentos que foram modificados */


	if (((NEW.ie_controle_tempo = 'S') or (NEW.ie_controle_tempo = 'N' and NEW.nr_seq_cpoe_anterior is not null)) and NEW.dt_liberacao is null and NEW.dt_liberacao_enf is null) then
		SELECT * FROM cpoe_gerar_orientacao_preparo(NEW.nr_atendimento, NEW.cd_pessoa_fisica, NEW.nm_usuario, NEW.ie_controle_tempo, NEW.ie_via_aplicacao, NEW.cd_intervalo, NEW.nr_etapas, NEW.ie_administracao, /*(P,N,C)(Conforme primeiro Horario,Se necessario,A criterio medico)*/

			NEW.hr_prim_horario, NEW.ds_horarios, /*Medicamento*/


			NEW.qt_solucao, NEW.qt_solucao_total, NEW.hr_min_aplicacao, /*Solucao*/


			NEW.ie_tipo_solucao, NEW.qt_tempo_aplicacao, NEW.ie_bomba_infusao, NEW.ie_ref_calculo, NEW.ie_fator_correcao, NEW.qt_dosagem, NEW.qt_dosagem_diferenciada, NEW.qt_hora_fase, NEW.qt_hora_fase_diferenciada, upper(NEW.ie_tipo_dosagem), NEW.qt_volume, NEW.ds_volume_diferenciado, NEW.cd_material, NEW.qt_dose, NEW.ds_dose_diferenciada, NEW.cd_unidade_medida, NEW.nr_seq_mat_reconst, NEW.cd_mat_recons, NEW.qt_dose_recons, NEW.ds_dose_diferenciada_rec, NEW.cd_unid_med_dose_recons, NEW.nr_seq_mat_diluicao, NEW.cd_mat_dil, NEW.qt_dose_dil, NEW.qt_solucao_dil, NEW.ds_dose_diferenciada_dil, NEW.cd_unid_med_dose_dil, NEW.nr_seq_mat_rediluicao, NEW.cd_mat_red, NEW.qt_dose_red, NEW.ds_dose_diferenciada_red, NEW.cd_unid_med_dose_red, NEW.qt_solucao_red, NEW.cd_mat_comp1, NEW.qt_dose_comp1, NEW.ds_dose_diferenciada_comp1, NEW.cd_unid_med_dose_comp1, NEW.cd_mat_comp2, NEW.qt_dose_comp2, NEW.ds_dose_diferenciada_comp2, NEW.cd_unid_med_dose_comp2, NEW.cd_mat_comp3, NEW.qt_dose_comp3, NEW.ds_dose_diferenciada_comp3, NEW.cd_unid_med_dose_comp3, NEW.cd_mat_comp4, NEW.qt_dose_comp4, NEW.ds_dose_diferenciada_comp4, NEW.cd_unid_med_dose_comp4, NEW.cd_mat_comp5, NEW.qt_dose_comp5, NEW.ds_dose_diferenciada_comp5, NEW.cd_unid_med_dose_comp5, NEW.cd_mat_comp6, NEW.qt_dose_comp6, NEW.ds_dose_diferenciada_comp6, NEW.cd_unid_med_dose_comp6, NEW.cd_mat_comp7, NEW.qt_dose_comp7, NEW.ds_dose_diferenciada_comp7, NEW.cd_unid_med_dose_comp7, NEW.qt_vel_inf_glicose, null) INTO STRICT ds_orientacao_preparo_w, qt_vel_infusao_w, ie_tipo_dosagem_w, ds_min_aplic_med_w;

		if (NEW.ie_controle_tempo = 'S') then
			NEW.ds_ref_calculo := ds_orientacao_preparo_w;
		elsif (NEW.ie_controle_tempo = 'N') then
			NEW.ds_orientacao_preparo := ds_orientacao_preparo_w;
		end if;
	end if;
exception
when others then
	CALL gravar_log_cpoe('CPOE_MAT_INSERT_UPDATE - CPOE_GERAR_ORIENTACAO_PREPARO: :new.nr_sequencia '|| NEW.nr_sequencia, NEW.nr_atendimento);
	commit;
end;

end if;

if (NEW.nr_seq_hemoterapia is null and NEW.nr_seq_adicional is null and NEW.nr_seq_ataque is null and NEW.nr_seq_ataque is null) then
	CALL generate_task_needs_schedule(
			NEW.nr_atendimento,
			NEW.cd_pessoa_fisica, 
			NEW.nr_sequencia, 
			'M', 
			NEW.dt_liberacao, 
			NEW.dt_liberacao_farm, 
			OLD.dt_liberacao_farm, 
			NEW.dt_inicio,
			NEW.ie_alterou_horario,
			NEW.ie_sem_aprazamento);
			
	CALL generate_task_delayed(
			NEW.nr_atendimento,
			NEW.cd_pessoa_fisica, 
			NEW.nr_sequencia, 
			'M', 
			NEW.dt_liberacao, 
			NEW.dt_liberacao_enf, 
			OLD.dt_liberacao_enf, 
			NEW.dt_inicio);
			
end if;

exception
when others then
	null;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_cpoe_mat_insert_update() FROM PUBLIC;

CREATE TRIGGER cpoe_mat_insert_update
	BEFORE INSERT OR UPDATE ON cpoe_material FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_cpoe_mat_insert_update();

