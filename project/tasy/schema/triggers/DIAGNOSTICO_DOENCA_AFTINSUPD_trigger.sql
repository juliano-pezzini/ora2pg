-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS diagnostico_doenca_aftinsupd ON diagnostico_doenca CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_diagnostico_doenca_aftinsupd() RETURNS trigger AS $BODY$
Declare

CD_CATEGORIA_CID_w CID_DOENCA.CD_CATEGORIA_CID%type;
CD_PESSOA_FISICA_W  pessoa_fisica.CD_PESSOA_FISICA%type;
ds_param_integration_w  varchar(500);

BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger	= 'S')  then
	SELECT	max(c.CD_PESSOA_FISICA)
	into STRICT	CD_PESSOA_FISICA_W
	FROM	ATENDIMENTO_PACIENTE c 
	where	c.NR_ATENDIMENTO = NEW.NR_ATENDIMENTO;

		if (CD_PESSOA_FISICA_W is not null) then
			
			select	max(a.CD_CATEGORIA_CID)
			into STRICT	CD_CATEGORIA_CID_w
			from	CID_DOENCA a
			where	a.cd_DOENCA = NEW.cd_DOENCA;
			
				
			if (CD_CATEGORIA_CID_w =  'E10') or (CD_CATEGORIA_CID_w =  'E11') or (CD_CATEGORIA_CID_w =  'E12') or (CD_CATEGORIA_CID_w =  'E13') or (CD_CATEGORIA_CID_w =  'E14') then
				UPDATE HD_PAC_RENAL_CRONICO a
				SET IE_DIABETICO = 'S'
				WHERE a.cd_pessoa_fisica = CD_PESSOA_FISICA_W;
			
			elsif (CD_CATEGORIA_CID_w =  'I10') or (CD_CATEGORIA_CID_w =  'I11') or (CD_CATEGORIA_CID_w =  'I12') or (CD_CATEGORIA_CID_w =  'I13') or (CD_CATEGORIA_CID_w =  'I15') then
				UPDATE HD_PAC_RENAL_CRONICO a
				SET IE_HIPERTENSO = 'S'
				WHERE a.cd_pessoa_fisica = CD_PESSOA_FISICA_W;
			
			end if;
	  end if;
	end if;
    
    
    if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'ja_JP') then
        if (TG_OP = 'UPDATE' and OLD.dt_liberacao is null and NEW.dt_liberacao is not null) then 
            ds_param_integration_w :=  '{"recordId" : "' || NEW.NR_SEQ_INTERNO|| '"' || '}';
            CALL execute_bifrost_integration(279,ds_param_integration_w);

        elsif (TG_OP = 'UPDATE' and NEW.IE_SITUACAO<>'A') then
            ds_param_integration_w :=  '{"recordId" : "' || OLD.NR_SEQ_INTERNO|| '"' || '}';
            CALL execute_bifrost_integration(279,ds_param_integration_w);
	
    end if;
    end if;

RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_diagnostico_doenca_aftinsupd() FROM PUBLIC;

CREATE TRIGGER diagnostico_doenca_aftinsupd
	AFTER INSERT OR UPDATE ON diagnostico_doenca FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_diagnostico_doenca_aftinsupd();

