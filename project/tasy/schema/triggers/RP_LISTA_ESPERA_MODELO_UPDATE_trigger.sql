-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS rp_lista_espera_modelo_update ON rp_lista_espera_modelo CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_rp_lista_espera_modelo_update() RETURNS trigger AS $BODY$
declare
qt_vagas_restantes_w	bigint;
qt_lista_espera_w	bigint;
qt_valida_log_existe_w	bigint;
nr_seq_log_w		bigint;
BEGIN
select	count(*)
into STRICT	qt_valida_log_existe_w
from	rp_log_movto_modelo
where   nr_seq_modelo = NEW.nr_seq_modelo
and	dt_atualizacao = LOCALTIMESTAMP;

if (qt_valida_log_existe_w = 0) then
	if (NEW.NR_SEQ_MODELO is not null) and
		((((OLD.NR_SEQ_MODELO <> NEW.NR_SEQ_MODELO) or (OLD.NR_SEQ_MODELO is null)) and (NEW.ie_status = 'A')) or
		((OLD.ie_status <> NEW.ie_status) and (NEW.ie_status <> 'T') and (NEW.ie_status <> 'C')))
		then
		--rp_insert_log_movto_modelo(:new.nr_seq_modelo,wheb_usuario_pck.get_nm_usuario);
		qt_vagas_restantes_w	:= Rp_obter_qtd_vaga_restante(NEW.nr_seq_modelo);
		qt_lista_espera_w	:= rp_obter_lista_espera_modelo(NEW.nr_seq_modelo) + 1;

		insert into rp_log_movto_modelo(
			NR_SEQUENCIA,
			NR_SEQ_MODELO,
			DT_ATUALIZACAO,
			NM_USUARIO,
			DT_ATUALIZACAO_NREC,
			NM_USUARIO_NREC,
			DT_LOG,
			QT_VAGAS_RESTANTES,
			QT_LISTA_ESPERA        )
		values (	nextval('rp_log_movto_modelo_seq'),
			NEW.nr_seq_modelo,
			LOCALTIMESTAMP,
			wheb_usuario_pck.get_nm_usuario,
			LOCALTIMESTAMP,
			wheb_usuario_pck.get_nm_usuario,
			LOCALTIMESTAMP,
			qt_vagas_restantes_w,
			qt_lista_espera_w);
	elsif (NEW.NR_SEQ_MODELO is not null) and
		((OLD.ie_status <> NEW.ie_status) and
		((NEW.ie_status = 'C') or (NEW.ie_status = 'T')) and (OLD.ie_status not in ('C','T'))) then

		qt_vagas_restantes_w	:= Rp_obter_qtd_vaga_restante(OLD.nr_seq_modelo);
		qt_lista_espera_w	:= rp_obter_lista_espera_modelo(OLD.nr_seq_modelo) - 1;

		insert into rp_log_movto_modelo(
			NR_SEQUENCIA,
			NR_SEQ_MODELO,
			DT_ATUALIZACAO,
			NM_USUARIO,
			DT_ATUALIZACAO_NREC,
			NM_USUARIO_NREC,
			DT_LOG,
			QT_VAGAS_RESTANTES,
			QT_LISTA_ESPERA        )
		values (	nextval('rp_log_movto_modelo_seq'),
			OLD.nr_seq_modelo,
			LOCALTIMESTAMP,
			wheb_usuario_pck.get_nm_usuario,
			LOCALTIMESTAMP,
			wheb_usuario_pck.get_nm_usuario,
			LOCALTIMESTAMP,
			qt_vagas_restantes_w,
			qt_lista_espera_w);

	end if;

	if (NEW.NR_SEQ_MODELO is not null) and (OLD.NR_SEQ_MODELO <> NEW.NR_SEQ_MODELO) and
		((((OLD.NR_SEQ_MODELO <> NEW.NR_SEQ_MODELO) or (OLD.NR_SEQ_MODELO is null)) and (NEW.ie_status = 'A')) or
		(OLD.ie_status <> NEW.ie_status AND NEW.ie_status <> 'T')) then

		qt_vagas_restantes_w	:= Rp_obter_qtd_vaga_restante(OLD.nr_seq_modelo);
		qt_lista_espera_w	:= rp_obter_lista_espera_modelo(OLD.nr_seq_modelo) - 1;

		insert into rp_log_movto_modelo(
			NR_SEQUENCIA,
			NR_SEQ_MODELO,
			DT_ATUALIZACAO,
			NM_USUARIO,
			DT_ATUALIZACAO_NREC,
			NM_USUARIO_NREC,
			DT_LOG,
			QT_VAGAS_RESTANTES,
			QT_LISTA_ESPERA        )
		values (	nextval('rp_log_movto_modelo_seq'),
			OLD.nr_seq_modelo,
			LOCALTIMESTAMP,
			wheb_usuario_pck.get_nm_usuario,
			LOCALTIMESTAMP,
			wheb_usuario_pck.get_nm_usuario,
			LOCALTIMESTAMP,
			qt_vagas_restantes_w,
			qt_lista_espera_w);

	end if;
else
	select	max(nr_sequencia)
	into STRICT	nr_seq_log_w
	from	rp_log_movto_modelo;

	qt_lista_espera_w	:= rp_obter_lista_espera_modelo(OLD.nr_seq_modelo) - 1;

	update	rp_log_movto_modelo
	set	qt_lista_espera = qt_lista_espera_w
	where	nr_sequencia = nr_seq_log_w
	and	nr_seq_modelo = OLD.nr_seq_modelo;

end if;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_rp_lista_espera_modelo_update() FROM PUBLIC;

CREATE TRIGGER rp_lista_espera_modelo_update
	AFTER UPDATE ON rp_lista_espera_modelo FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_rp_lista_espera_modelo_update();

