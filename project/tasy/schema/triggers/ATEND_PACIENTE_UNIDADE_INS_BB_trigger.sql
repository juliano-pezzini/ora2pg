-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS atend_paciente_unidade_ins_bb ON atend_paciente_unidade CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_atend_paciente_unidade_ins_bb() RETURNS trigger AS $BODY$
DECLARE

    bb_count_icu                bigint;
    bb_count_stepdown           bigint;
    bb_count_acute              bigint;
    bb_classif_setor            bigint;
    bb_nome_setor_anterior      varchar(200);
    bb_nome_setor               varchar(200);
    bb_ie_readmitido            varchar(1);
    bb_primeira_movimentacao    varchar(1);
    bb_cd_pessoa_fisica         PESSOA_FISICA.cd_pessoa_fisica%TYPE;
    bb_dt_nascimento            PESSOA_FISICA.dt_nascimento%TYPE;
    bb_ie_sexo                  PESSOA_FISICA.ie_sexo%TYPE;
    bb_qt_peso                  PESSOA_FISICA.qt_peso%TYPE;
    bb_qt_altura_cm             PESSOA_FISICA.qt_altura_cm%TYPE;
    bb_cd_procedencia           ATENDIMENTO_PACIENTE.cd_procedencia%TYPE;
    bb_dt_entrada               ATENDIMENTO_PACIENTE.dt_entrada%TYPE;
    bb_nr_seq_classif           UNIDADE_ATENDIMENTO.nr_seq_classif%TYPE;
    bb_nr_seq_interno_anterior  UNIDADE_ATENDIMENTO.nr_seq_interno%type;

BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
  if (OBTER_SE_INTEGRACAO_ATIVA(959, 245) = 'S') then

    SELECT * FROM p_buscar_info_admissao_bb(
      NEW.nr_atendimento, NEW.cd_setor_atendimento, bb_count_icu, bb_count_stepdown, bb_count_acute, bb_nome_setor_anterior, bb_nome_setor, bb_ie_readmitido, bb_nr_seq_interno_anterior
    ) INTO STRICT bb_count_icu, bb_count_stepdown, bb_count_acute, bb_nome_setor_anterior, bb_nome_setor, bb_ie_readmitido, bb_nr_seq_interno_anterior
;

    SELECT
      pf.cd_pessoa_fisica,
      pf.dt_nascimento, 
      pf.ie_sexo,
      pf.qt_peso,
      pf.qt_altura_cm,
      ap.cd_procedencia, 
      ap.dt_entrada,
      ua.nr_seq_classif
    INTO STRICT
      bb_cd_pessoa_fisica,
      bb_dt_nascimento,
      bb_ie_sexo,
      bb_qt_peso,
      bb_qt_altura_cm,
      bb_cd_procedencia,
      bb_dt_entrada,
      bb_nr_seq_classif
    FROM
      ATENDIMENTO_PACIENTE ap, 
      PESSOA_FISICA pf, 
      UNIDADE_ATENDIMENTO ua
    WHERE 
      ap.NR_ATENDIMENTO = NEW.NR_ATENDIMENTO 
      AND ua.CD_SETOR_ATENDIMENTO = NEW.CD_SETOR_ATENDIMENTO 
      AND ua.CD_UNIDADE_BASICA = NEW.CD_UNIDADE_BASICA 
      AND ua.CD_UNIDADE_COMPL = NEW.CD_UNIDADE_COMPL
      AND pf.CD_PESSOA_FISICA = ap.CD_PESSOA_FISICA;

    IF (bb_nome_setor = 'ICU' OR bb_nome_setor = 'Stepdown' OR bb_nome_setor = 'Acute') THEN
      IF (bb_count_icu = 0 AND bb_count_stepdown = 0 AND bb_count_acute = 0) THEN
        bb_primeira_movimentacao := 'S';
      ELSE
        bb_primeira_movimentacao := 'N';
      END IF;

      IF (bb_nome_setor_anterior = bb_nome_setor) THEN
        CALL p_integrar_admissao_bb(bb_integracao              => 'T',
          nr_atendimento_p            => NEW.nr_atendimento,
          nr_seq_interno_p            => NEW.nr_seq_interno,
          nm_setor_bb_p               => bb_nome_setor,
          nm_setor_anterior_bb_p      => bb_nome_setor_anterior,
          cd_setor_atendimento_p      => NEW.cd_setor_atendimento,
          nr_seq_classif_p            => bb_nr_seq_classif,
          cd_unidade_basica_p         => NEW.cd_unidade_basica,
          cd_unidade_compl_p          => NEW.cd_unidade_compl,
          dt_entrada_unidade_p        => NEW.dt_entrada_unidade,
          nr_seq_interno_anterior_p   => bb_nr_seq_interno_anterior);
      ELSE

        IF ((bb_count_icu = 0 AND bb_nome_setor = 'ICU') OR (bb_count_stepdown = 0 AND bb_nome_setor = 'Stepdown') OR (bb_count_acute = 0 AND bb_nome_setor = 'Acute')) THEN
          CALL p_integrar_admissao_bb(bb_integracao              => 'A',
            nr_atendimento_p            => NEW.nr_atendimento,
            nr_seq_interno_p            => NEW.nr_seq_interno,
            cd_pessoa_fisica_p          => bb_cd_pessoa_fisica,
            nm_setor_bb_p               => bb_nome_setor,
            nm_setor_anterior_bb_p      => bb_nome_setor_anterior,
            cd_setor_atendimento_p      => NEW.cd_setor_atendimento,
            nr_seq_classif_p            => bb_nr_seq_classif,
            cd_unidade_basica_p         => NEW.cd_unidade_basica,
            cd_unidade_compl_p          => NEW.cd_unidade_compl,
            cd_procedencia_p            => bb_cd_procedencia,
            dt_entrada_p                => bb_dt_entrada,
            dt_entrada_unidade_p        => NEW.dt_entrada_unidade,
            dt_nascimento_p             => bb_dt_nascimento,
            ie_sexo_p                   => bb_ie_sexo,
            qt_peso_p                   => bb_qt_peso,
            qt_altura_cm_p              => bb_qt_altura_cm,
            ie_primeira_movimentacao    => bb_primeira_movimentacao);
        END IF;

        IF ((bb_count_icu > 0 AND bb_nome_setor = 'ICU') OR (bb_count_stepdown > 0 AND bb_nome_setor = 'Stepdown') OR (bb_count_acute > 0 AND bb_nome_setor = 'Acute')) THEN
          CALL p_integrar_admissao_bb(bb_integracao              => 'R',
            nr_atendimento_p            => NEW.nr_atendimento,
            nr_seq_interno_p            => NEW.nr_seq_interno,
            nm_setor_bb_p               => bb_nome_setor,
            nm_setor_anterior_bb_p      => bb_nome_setor_anterior,
            cd_setor_atendimento_p      => NEW.cd_setor_atendimento,
            nr_seq_classif_p            => bb_nr_seq_classif,
            cd_unidade_basica_p         => NEW.cd_unidade_basica,
            cd_unidade_compl_p          => NEW.cd_unidade_compl,
            cd_procedencia_p            => bb_cd_procedencia,
            dt_entrada_p                => bb_dt_entrada,
            dt_entrada_unidade_p        => NEW.dt_entrada_unidade,
            dt_nascimento_p             => bb_dt_nascimento,
            ie_sexo_p                   => bb_ie_sexo,
            qt_peso_p                   => bb_qt_peso,
            qt_altura_cm_p              => bb_qt_altura_cm,
            ie_readmitido               => bb_ie_readmitido);
        END IF;
      END IF;

    ELSIF (bb_nome_setor_anterior IS NOT NULL AND bb_nome_setor IS NULL) THEN
      CALL p_integrar_admissao_bb(bb_integracao              => 'D',
        nr_atendimento_p            => NEW.nr_atendimento,
        dt_entrada_unidade_p        => NEW.dt_entrada_unidade,
        nr_seq_interno_p            => bb_nr_seq_interno_anterior);
    END IF;

  end if;
end if;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_atend_paciente_unidade_ins_bb() FROM PUBLIC;

CREATE TRIGGER atend_paciente_unidade_ins_bb
	AFTER INSERT ON atend_paciente_unidade FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_atend_paciente_unidade_ins_bb();

