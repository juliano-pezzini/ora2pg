-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS agenda_paciente_encaixe ON agenda_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_agenda_paciente_encaixe() RETURNS trigger AS $BODY$
declare

cd_procedimento_w bigint;
ie_origem_w bigint;
nr_seq_proced_w bigint;

c11 CURSOR FOR
    SELECT nr_sequencia from agenda_lista_espera where nr_sequencia = NEW.nr_seq_lista;
	nr_sequencia_w bigint;

c12 CURSOR(nr_sequencia_p bigint) FOR
    SELECT * from equipe_lista_espera where  nr_seq_lista_espera = nr_sequencia_p;
	teq	c12%rowtype;

c13 CURSOR FOR
    SELECT * from lista_espera_proc_add where  nr_seq_lista_espera = NEW.nr_seq_lista;
	eq	c13%rowtype;

BEGIN
	if TG_OP = 'INSERT' then
		open c11;
			fetch c11 into nr_sequencia_w;
		close c11;
		if (nr_sequencia_w is not null AND nr_sequencia_w != 0) then
		  open c12(nr_sequencia_w);
		  loop fetch c12 into teq;
		  EXIT WHEN NOT FOUND; /* apply on c12 */
			insert into profissional_agenda(nr_sequencia, cd_profissional, cd_funcao, nr_seq_agenda, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
				nm_usuario_nrec, ie_indicacao, nr_seq_equipe, cd_especialidade)
			values (nextval('profissional_agenda_seq'), teq.cd_profissional, teq.cd_funcao, NEW.nr_sequencia, LOCALTIMESTAMP, NEW.nm_usuario, LOCALTIMESTAMP,
				NEW.nm_usuario, teq.ie_indicacao, teq.nr_seq_equipe, teq.cd_especialidade);
		  end loop;

                  open c13;
		  loop fetch c13 into eq;
		  EXIT WHEN NOT FOUND; /* apply on c13 */
                        select max(cd_procedimento),
                               max(ie_origem_proced)
                               into STRICT
                               cd_procedimento_w,
                               ie_origem_w
                        from proc_interno
                        where nr_sequencia = eq.nr_seq_proc_interno;

                        select	coalesce(max(nr_seq_agenda),0)+1
			into STRICT	nr_seq_proced_w
			from	agenda_paciente_proc
			where	nr_sequencia = NEW.nr_sequencia;

			insert into agenda_paciente_proc(nr_sequencia, nr_seq_agenda, dt_atualizacao, nm_usuario,
			nr_atendimento, ie_posicao,cd_procedimento,ie_origem_proced)
			values (NEW.nr_sequencia, nr_seq_proced_w, LOCALTIMESTAMP, NEW.nm_usuario, 
				eq.nr_atendimento, eq.cd_posicao,cd_procedimento_w, ie_origem_w);
		  end loop;
		end if;
	end if;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_agenda_paciente_encaixe() FROM PUBLIC;

CREATE TRIGGER agenda_paciente_encaixe
	AFTER INSERT OR UPDATE ON agenda_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_agenda_paciente_encaixe();

