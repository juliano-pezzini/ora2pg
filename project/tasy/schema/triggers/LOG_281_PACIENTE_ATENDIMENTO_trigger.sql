-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS log_281_paciente_atendimento ON paciente_atendimento CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_log_281_paciente_atendimento() RETURNS trigger AS $BODY$
declare

ie_247_w varchar(10);
ie_acao_w varchar(40);
BEGIN
  BEGIN

BEGIN

ie_acao_w := 'update';

if (TG_OP = 'INSERT') then
	ie_acao_w := 'insert';
end if;

ie_247_w := Obter_Param_Usuario(281, 247, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_247_w);

if (NEW.nr_atendimento is not null or OLD.nr_atendimento is not null) then
	BEGIN
	insert into log_tasy(  dt_atualizacao,
                        nm_usuario, 
                        cd_log, 
                        ds_log)
        values ( 	LOCALTIMESTAMP, 
                        'tasy',  
                        281, 
                        substr('NR_SEQ_ATENDIMENTO: ' || NEW.NR_SEQ_ATENDIMENTO
                            || ', NR_ATENDIMENTO: ' || NEW.NR_ATENDIMENTO
                            || ', NR_SEQ_PACIENTE: ' || NEW.NR_SEQ_PACIENTE
                            || ', stack trace: ' || dbms_utility.format_call_stack
                            || ', when: ' || to_char(LOCALTIMESTAMP, 'dd-mm-yyyy hh24:mi:ss')
                            || ', dt_prevista: ' || NEW.dt_prevista
                            || ', perf: ' || obter_perfil_ativo
                            || ', ie_247_w : ' || ie_247_w
                            || ', ie_ac : ' ||  ie_acao_w
                            || ', user: ' || wheb_usuario_pck.get_nm_usuario,1,2000));
	end;
end if;

exception
when others then
	insert into log_tasy(  dt_atualizacao,
                        nm_usuario, 
                        cd_log, 
                        ds_log)
        values ( 	LOCALTIMESTAMP, 
                        'tasy',  
                        281, 
                        'NÃ£o gerou log!');
end;

  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_log_281_paciente_atendimento() FROM PUBLIC;

CREATE TRIGGER log_281_paciente_atendimento
	BEFORE INSERT OR UPDATE ON paciente_atendimento FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_log_281_paciente_atendimento();

