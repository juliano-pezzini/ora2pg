-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS prescr_recomendacao_update ON prescr_recomendacao CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_prescr_recomendacao_update() RETURNS trigger AS $BODY$
declare

ds_param_integ_hl7_w    varchar(2000);
json_data_w          	text;	
qt_reg_w                smallint;

c01 CURSOR FOR
SELECT  h.nr_seq_sub_grp
from    cpoe_recomendacao a,
        cpoe_order_unit g,
        cpoe_tipo_pedido h,
        nut_orientacao_list j
where   a.nr_sequencia                 = NEW.nr_seq_rec_cpoe
        and j.nr_seq_recomendacao      = a.nr_sequencia        
        and a.nr_seq_cpoe_order_unit   = g.nr_sequencia
        and g.nr_seq_cpoe_tipo_pedido  = h.nr_sequencia        
        and h.nr_seq_sub_grp           = 'N';

BEGIN
    if (wheb_usuario_pck.get_ie_executar_trigger = 'S')  then
        if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'ja_JP') then
            if (NEW.dt_suspensao is not null and OLD.dt_suspensao is null) then    
                for r_c01 in c01 loop
                  BEGIN
                    ds_param_integ_hl7_w := '{"recordId" : "' || NEW.nr_seq_interno || '"' || ',"typePrescription" : "' || r_c01.nr_seq_sub_grp || '"}';
                    json_data_w := bifrost.send_integration_content('nais.itemOrder.cancelation', ds_param_integ_hl7_w, NEW.nm_usuario_susp);
                  end;
                end loop;
            end if;
        end if;
    end if;

    /* --> Rafael em 03/09/2007 x ADEP x cfe definido com Marcus <-- */

    if (coalesce(OLD.ie_suspenso,'N') = 'N') and (NEW.ie_suspenso = 'S') then
    
        update	prescr_rec_hor x
        set	dt_suspensao = LOCALTIMESTAMP,
            nm_usuario_susp = NEW.nm_usuario_susp
        where	nr_prescricao = NEW.nr_prescricao
        and	nr_seq_recomendacao = NEW.nr_sequencia
        and	dt_fim_horario is null
        and	dt_suspensao is null
        and 'N' = substr(coalesce(obter_status_recomendacao(NEW.nr_prescricao, NEW.nr_sequencia, nr_sequencia), obter_status_hor_rec(dt_fim_horario,dt_suspensao)),1,1);
    end if;

    if (NEW.ie_se_necessario = 'N')  then
        if (NEW.ds_horarios is not null AND NEW.ds_horarios <> 'ACM') then
            NEW.nr_ocorrencia	:= obter_ocorrencias_horarios_rep(NEW.ds_horarios);
        elsif (NEW.cd_intervalo is not null) then
            NEW.nr_ocorrencia	:= obter_ocorrencia_intervalo(NEW.cd_intervalo, 24,'O');
        end if;
    end if;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_prescr_recomendacao_update() FROM PUBLIC;

CREATE TRIGGER prescr_recomendacao_update
	BEFORE UPDATE ON prescr_recomendacao FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_prescr_recomendacao_update();

