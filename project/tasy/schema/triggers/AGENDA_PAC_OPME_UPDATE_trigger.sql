-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS agenda_pac_opme_update ON agenda_pac_opme CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_agenda_pac_opme_update() RETURNS trigger AS $BODY$
DECLARE

nr_seq_autorizacao_w		bigint;
atrib_oldvalue_w		varchar(255);
atrib_newvalue_w		varchar(255);
cd_material_w			bigint;
cd_kit_material_w		integer;
nr_seq_evento_w			bigint;
qt_idade_w			bigint;
cd_convenio_w			bigint;
cd_medico_w			varchar(15);
cd_pessoa_fisica_w		varchar(15);
ie_sexo_w			varchar(15);
nr_seq_proc_interno_w		bigint;
cd_estabelecimento_w		smallint;
ie_evento_w			varchar(15);
cd_agenda_w			bigint;
hr_inicio_w			timestamp;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
dt_cancelamento_w		timestamp;
cd_motivo_cancel_w		varchar(15);
qt_material_w			bigint;
ds_observacao_w			varchar(4000);
ds_observacao_ww		varchar(255);
nr_atendimento_w		bigint;
nr_seq_mat_autor_w		bigint;
ie_regra_acresc_mat_autor_w	varchar(1) := 'N';

ie_permite_alt_executada_w	varchar(1);
ie_status_agenda_w		varchar(3);
cd_tipo_agenda_w		bigint;	
ie_zerar_qt_opme_exc_w		varchar(2) := 'E';
qt_autor_conv_w			bigint := 0;
qt_autor_cir_w			bigint := 0;
nr_seq_autor_conv_w		bigint;
qt_mat_cirurgia			bigint;
nr_seq_mat_cirurgia_w		material_autor_cirurgia.nr_sequencia%type;

expressao1_w	varchar(255) := obter_desc_expressao_idioma(773980, null, wheb_usuario_pck.get_nr_seq_idioma);--Status da autorizacao de
expressao2_w	varchar(255) := obter_desc_expressao_idioma(727816, null, wheb_usuario_pck.get_nr_seq_idioma);--para
expressao3_w	varchar(255) := obter_desc_expressao_idioma(773985, null, wheb_usuario_pck.get_nr_seq_idioma);--Alterado o material
expressao4_w	varchar(255) := obter_desc_expressao_idioma(773986, null, wheb_usuario_pck.get_nr_seq_idioma);--Alterada a quantidade de
expressao5_w	varchar(255) := obter_desc_expressao_idioma(773987, null, wheb_usuario_pck.get_nr_seq_idioma);--Alterado a obervacao
expressao6_w	varchar(255) := obter_desc_expressao_idioma(773992, null, wheb_usuario_pck.get_nr_seq_idioma);--Item excluido na Agenda pelo usuario
expressao7_w	varchar(255) := obter_desc_expressao_idioma(327202, null, wheb_usuario_pck.get_nr_seq_idioma);--Data


c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.nr_seq_autor_conv
from	autorizacao_cirurgia a
where	a.nr_seq_agenda	= NEW.nr_seq_agenda
and	a.dt_liberacao	is null;

c02 CURSOR FOR
SELECT cd_kit_material
from   material_estab
where  cd_material = NEW.cd_material;

c03 CURSOR FOR
SELECT	a.cd_material
from	componente_kit a
where	a.cd_kit_material	= cd_kit_material_w;

c04 CURSOR FOR
	SELECT	nr_seq_evento
	from	regra_envio_sms
	where	cd_estabelecimento		= cd_estabelecimento_w
	and	ie_evento_disp			= ie_evento_w
	and	coalesce(qt_idade_w,0) between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999)
	and	coalesce(ie_sexo,coalesce(ie_sexo_w,'XPTO'))  = coalesce(ie_sexo_w,'XPTO')
	and	coalesce(cd_medico,coalesce(cd_medico_w,'0')) = coalesce(cd_medico_w,'0')
	and (obter_se_convenio_rec_alerta(cd_convenio_w,nr_sequencia) = 'S')
	and (obter_se_proc_rec_alerta(nr_seq_proc_interno_w,nr_sequencia,cd_procedimento_w,ie_origem_proced_w) = 'S')
	and (obter_se_mat_rec_alerta(NEW.cd_material,nr_sequencia) = 'S')
	and (obter_se_regra_envio(nr_sequencia,nr_atendimento_w) = 'S')
	and (obter_classif_regra(nr_sequencia,coalesce(obter_classificacao_pf(cd_pessoa_fisica_w),0)) = 'S')
	and	coalesce(ie_situacao,'A') = 'A';
	
c05 CURSOR FOR
SELECT	a.nr_sequencia
from	autorizacao_convenio b,
	material_autorizado a
where	a.nr_sequencia_autor				= b.nr_sequencia
and	b.nr_seq_agenda					= NEW.nr_seq_agenda
and	a.nr_seq_opme					= NEW.nr_sequencia
and	OBTER_ESTAGIO_AUTOR(b.nr_seq_estagio,'C') 	not in ('10','70','90'); --Autorizado, Cancelado , Reprovado;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S')  then
	cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
	
	ie_zerar_qt_opme_exc_w := obter_param_usuario(871, 618, obter_perfil_ativo, NEW.nm_usuario, cd_estabelecimento_w, ie_zerar_qt_opme_exc_w);
	
	if (OLD.ie_autorizado is not null) and (NEW.ie_autorizado is not null) and (OLD.ie_autorizado <> NEW.ie_autorizado) then 	
		
		atrib_oldvalue_w := substr(obter_valor_dominio(1637,OLD.ie_autorizado),1,255);
		atrib_newvalue_w := substr(obter_valor_dominio(1637,NEW.ie_autorizado),1,255);

		CALL gerar_opme_hist(NEW.nr_sequencia,'1',wheb_usuario_pck.get_nm_usuario,expressao1_w || ' ' || atrib_oldvalue_w || ' ' || expressao2_w || ' ' || atrib_newvalue_w,LOCALTIMESTAMP);
	end if;
	
	if (OLD.cd_material is not null) and (NEW.cd_material is not null) and (OLD.cd_material <> NEW.cd_material) then 	
		
		atrib_oldvalue_w := substr(obter_desc_material(OLD.cd_material),1,255);
		atrib_newvalue_w := substr(obter_desc_material(NEW.cd_material),1,255);

		CALL gerar_opme_hist(NEW.nr_sequencia,'2',wheb_usuario_pck.get_nm_usuario,expressao3_w || ' ' || atrib_oldvalue_w || ' ' || expressao2_w || ' ' || atrib_newvalue_w,LOCALTIMESTAMP);
	end if;

	if (OLD.qt_material is not null) and (NEW.qt_material is not null) and (OLD.qt_material <> NEW.qt_material) then 	
		
		atrib_oldvalue_w := OLD.qt_material;
		atrib_newvalue_w := NEW.qt_material;

		CALL gerar_opme_hist(NEW.nr_sequencia,'3',wheb_usuario_pck.get_nm_usuario,expressao4_w || ' ' || atrib_oldvalue_w || ' ' || expressao2_w || ' ' || atrib_newvalue_w,LOCALTIMESTAMP);
	end if;

	if (OLD.DS_OBSERVACAO is not null) and (NEW.DS_OBSERVACAO is not null) and (OLD.DS_OBSERVACAO <> NEW.DS_OBSERVACAO) then 	
		
		atrib_oldvalue_w := substr(OLD.DS_OBSERVACAO,1,255);
		atrib_newvalue_w := substr(NEW.DS_OBSERVACAO,1,255);

		CALL gerar_opme_hist(NEW.nr_sequencia,'4',wheb_usuario_pck.get_nm_usuario,expressao5_w || ' ' || atrib_oldvalue_w || ' ' || expressao2_w || ' ' || atrib_newvalue_w,LOCALTIMESTAMP);
	end if;	
	
	
	select	coalesce(max(IE_REGRA_ACRESC_MAT_AUTOR),'N')
	into STRICT	ie_regra_acresc_mat_autor_w
	from	parametro_faturamento
	where	cd_estabelecimento = cd_estabelecimento_w;
	

	open c01;
	loop
	fetch c01 into
		nr_seq_autorizacao_w,
		nr_seq_autor_conv_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		BEGIN
		
		BEGIN
		select	max(qt_material),
			max(substr(ds_observacao,1,3800))
		into STRICT	qt_material_w,
			ds_observacao_w
		from	material_autor_cirurgia
		where	((nr_seq_opme	= NEW.nr_sequencia) or
			(nr_seq_opme is null AND cd_material = NEW.cd_material))
		and	nr_seq_autorizacao 	= nr_seq_autorizacao_w;
		exception
		when others then
			qt_material_w := 0;
			ds_observacao_w := null;
		end;
		
		if (qt_material_w <> NEW.qt_material) then
			BEGIN
			update	material_autor_cirurgia
			set	qt_solicitada		= NEW.qt_material,
				dt_atualizacao		= LOCALTIMESTAMP,
				nm_usuario		= NEW.nm_usuario
			where	((nr_seq_opme	= NEW.nr_sequencia) or
				(nr_seq_opme is null AND cd_material = NEW.cd_material))
			and	nr_seq_autorizacao	= nr_seq_autorizacao_w;
			end;
		end if;
		
		if (ds_observacao_w <> NEW.ds_observacao) then
			BEGIN
			update	material_autor_cirurgia
			set	ds_observacao		= substr(NEW.ds_observacao,1,3800),
				dt_atualizacao		= LOCALTIMESTAMP,
				nm_usuario		= NEW.nm_usuario
			where	((nr_seq_opme	= NEW.nr_sequencia) or
				(nr_seq_opme is null AND cd_material = NEW.cd_material))
			and	nr_seq_autorizacao	= nr_seq_autorizacao_w;
			end;
		end if;
		
		if (coalesce(OLD.vl_unitario_item,0) <> coalesce(NEW.vl_unitario_item,0)) then
		
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_mat_cirurgia_w
			from	material_autor_cirurgia a
			where	((nr_seq_opme		= NEW.nr_sequencia) or
				(nr_seq_opme is null AND cd_material = NEW.cd_material))
			and	nr_seq_autorizacao	= nr_seq_autorizacao_w;
			
			if (coalesce(nr_seq_mat_cirurgia_w,0) > 0) and (coalesce(NEW.cd_cgc,'0') <> '0') then			
				
				update	material_autor_cir_cot
				set	dt_atualizacao		= LOCALTIMESTAMP,
					nm_usuario		= NEW.nm_usuario,
					vl_cotado		= (NEW.qt_material * NEW.vl_unitario_item),
					vl_unitario_cotado	= NEW.vl_unitario_item
				where	nr_sequencia		= nr_seq_mat_cirurgia_w
				and 	cd_cgc			= NEW.cd_cgc
				and 	coalesce(vl_unitario_cotado,0) <> coalesce(NEW.vl_unitario_item,0);	
				
			end if;				
		end if;
		
		end;	
	end loop;
	close c01;
	
	open c01;
	loop
	fetch c01 into
		nr_seq_autorizacao_w,
		nr_seq_autor_conv_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		BEGIN
		if (NEW.ie_origem_inf = 'E') then
			if (coalesce(ie_zerar_qt_opme_exc_w,'E') = 'E') then	
			
			select 	coalesce(count(*),0)
			into STRICT 	qt_mat_cirurgia
			from 	material_autor_cirurgia a
			where 	a.nr_seq_autorizacao	= nr_seq_autorizacao_w
			and 	a.cd_material 		= NEW.cd_material;
			
						
			if (qt_mat_cirurgia = 1 ) then --Lancado 1 vez o Mat na Autor Mat Esp
				delete
				from 	material_autorizado a
				where 	a.nr_sequencia_autor		= nr_seq_autor_conv_w
				and 	a.cd_material 			= NEW.cd_material
				and 	coalesce(a.cd_cgc_fabricante,'') 	= coalesce(NEW.cd_cgc,'')  LIMIT 1;--nr_seq_opme pode ser repetida na mat_autor, por isso exclui apenas uma linha conforme o fornecedor.
				
				delete
				from 	material_autor_cirurgia a
				where	((a.nr_seq_opme	= NEW.nr_sequencia) or (a.nr_seq_opme is null AND a.cd_material = NEW.cd_material))
				and	a.nr_seq_autorizacao	= nr_seq_autorizacao_w
				and 	not exists (	SELECT 	1
						from 	autorizacao_cirurgia b,
							material_autorizado c
						where    c.nr_sequencia_autor       = b.nr_seq_autor_conv
						and      b.nr_sequencia             = a.nr_seq_autorizacao
						and      c.cd_material              = a.cd_material);								
			else
				delete
				from	material_autor_cirurgia
				where	((nr_seq_opme	= NEW.nr_sequencia) or
					(nr_seq_opme is null AND cd_material = NEW.cd_material))
				and	nr_seq_autorizacao	= nr_seq_autorizacao_w;
			end if;
				
				--Para Kit's e nao material avulso

				open c02;
				loop
				fetch c02 into
					cd_kit_material_w;
				EXIT WHEN NOT FOUND; /* apply on c02 */
					BEGIN	
					open c03;
					loop
					fetch c03 into
						cd_material_w;
					EXIT WHEN NOT FOUND; /* apply on c03 */
						BEGIN	
						
						select 	coalesce(count(*),0)
						into STRICT 	qt_mat_cirurgia
						from 	material_autor_cirurgia a
						where 	a.nr_seq_autorizacao	= nr_seq_autorizacao_w
						and 	a.cd_material 		= NEW.cd_material;						
									
						if (qt_mat_cirurgia = 1 ) then --Lancado 1 vez o Mat na Autor Mat Esp											
							delete
							from 	material_autor_cirurgia a
							where	((a.nr_seq_opme	= NEW.nr_sequencia) or (a.nr_seq_opme is null AND a.cd_material = NEW.cd_material))
							and	a.nr_seq_autorizacao	= nr_seq_autorizacao_w
							and 	not exists (	SELECT 	1
									from 	autorizacao_cirurgia b,
										material_autorizado c
									where    c.nr_sequencia_autor       = b.nr_seq_autor_conv
									and      b.nr_sequencia             = a.nr_seq_autorizacao
									and      c.cd_material              = a.cd_material);	
						else
							delete
							from	material_autor_cirurgia
							where	((nr_seq_opme	= NEW.nr_sequencia) or
								(nr_seq_opme is null AND cd_material = NEW.cd_material))
							and	nr_seq_autorizacao	= nr_seq_autorizacao_w;
						end if;
			
						end;
					end loop;
					close c03;	
					end;
				end loop;
				close c02;
				
			
				update	autorizacao_cirurgia a
				set	a.ie_estagio_autor = '6',
					a.nm_usuario	 = NEW.nm_usuario,
					a.dt_atualizacao	 = LOCALTIMESTAMP
				where	a.nr_sequencia	 = nr_seq_autorizacao_w
				and	not exists (	SELECT	1
							from	material_autor_cirurgia x
							where	x.nr_seq_autorizacao = a.nr_sequencia);
					
				
				update	autorizacao_convenio a
				set	a.nr_seq_estagio = (	SELECT 	max(x.nr_sequencia)
								from	estagio_autorizacao x
								where	x.ie_interno = '70'
								and 	x.ie_situacao = 'A'
								and	OBTER_EMPRESA_ESTAB(wheb_usuario_pck.get_cd_estabelecimento) = x.cd_empresa),
					a.nm_usuario	 = NEW.nm_usuario,
					a.dt_atualizacao = LOCALTIMESTAMP
				where	a.nr_seq_agenda  = NEW.nr_seq_agenda
				and	((a.nr_sequencia = nr_seq_autor_conv_w) or (a.nr_seq_autor_cirurgia = nr_seq_autorizacao_w))
				and	not exists (	select	1
							from	material_autorizado x
							where	x.nr_sequencia_autor = a.nr_sequencia)
				and	not exists (	select	1
							from	procedimento_autorizado p
							where	p.nr_sequencia_autor = a.nr_sequencia);
					
				
			end if;
			
		end if;	
		end;	
	end loop;
	close c01;
	


	if (coalesce(ie_zerar_qt_opme_exc_w,'E') = 'A') and (NEW.ie_origem_inf = 'E') then
	
		
		update	material_autor_cirurgia
		set	qt_solicitada	= 0,
			nm_usuario	= NEW.nm_usuario,
			dt_atualizacao	= LOCALTIMESTAMP,
			ds_observacao 	= expressao6_w || ' ' || NEW.nm_usuario || ' ' || expressao7_w || ' ' 
							|| PKG_DATE_FORMATERS_TZ.TO_VARCHAR(LOCALTIMESTAMP,'timestamp',ESTABLISHMENT_TIMEZONE_UTILS.GETTIMEZONE)
		where	nr_seq_opme	= NEW.nr_sequencia;
		
		update	material_autorizado
		set	qt_solicitada	= 0,
			nm_usuario	= NEW.nm_usuario,
			dt_atualizacao	= LOCALTIMESTAMP,
			ds_observacao	= expressao6_w || ' ' || NEW.nm_usuario || ' ' || expressao7_w || ' '
							|| PKG_DATE_FORMATERS_TZ.TO_VARCHAR(LOCALTIMESTAMP,'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.GETTIMEZONE)
		where	nr_seq_opme	= NEW.nr_sequencia;
		
		select 	count(1)
		into STRICT	qt_autor_conv_w
		from	material_autorizado a,
			autorizacao_convenio b
		where	a.nr_sequencia_autor = b.nr_sequencia
		and	b.nr_seq_agenda = NEW.nr_seq_agenda
		--and	b.ie_tipo_autorizacao	= '4'

		and	a.qt_solicitada	 > 0
		and	exists (	SELECT	1
					from	material_autorizado x
					where	x.nr_sequencia_autor = b.nr_sequencia
					and	x.nr_seq_opme	     = NEW.nr_sequencia);
		
		
		select	count(1)
		into STRICT	qt_autor_cir_w
		from	material_autor_cirurgia a,
			autorizacao_cirurgia b
		where	a.nr_seq_autorizacao = b.nr_sequencia
		and	b.nr_seq_agenda = NEW.nr_seq_agenda
		and	a.qt_solicitada > 0
		and	exists (	SELECT	1
				from	material_autor_cirurgia x
				where	x.nr_seq_autorizacao = b.nr_sequencia
				and	x.nr_seq_opme	     = NEW.nr_sequencia);

		
		if (qt_autor_cir_w = 0) then
		
			update	autorizacao_cirurgia a
			set	a.ie_estagio_autor = '6',
				a.nm_usuario	= NEW.nm_usuario,
				a.dt_atualizacao	= LOCALTIMESTAMP
			where	a.nr_seq_agenda = NEW.nr_seq_agenda
			and	exists (	SELECT	1
					from	material_autor_cirurgia x
					where	x.nr_seq_autorizacao = a.nr_sequencia
					and	x.nr_seq_opme	     = NEW.nr_sequencia);
			
		end if;
			
		if (qt_autor_conv_w = 0) then
			-- A procedure atualizar_autorizacao_convenio nao pode ser chamada por que vai dar referencia circular

			update	autorizacao_convenio a
			set	a.nr_seq_estagio = (	SELECT 	max(x.nr_sequencia)
							from	estagio_autorizacao x
							where	x.ie_interno = '70'
							and 	x.ie_situacao = 'A'
							and	OBTER_EMPRESA_ESTAB(wheb_usuario_pck.get_cd_estabelecimento) = x.cd_empresa),
				a.nm_usuario	 = NEW.nm_usuario,
				a.dt_atualizacao = LOCALTIMESTAMP
			where	a.nr_seq_agenda  = NEW.nr_seq_agenda
			and	exists (	select	1
					from	material_autorizado x
					where	x.nr_sequencia_autor = a.nr_sequencia
					and	x.nr_seq_opme	     = NEW.nr_sequencia)
			and	not exists (	select	1
							from	procedimento_autorizado p
							where	p.nr_sequencia_autor = a.nr_sequencia);

		end if;	
			
	end if;
			
	
	open C05;
	loop
	fetch C05 into	
		nr_seq_mat_autor_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		BEGIN
		
		if (coalesce(OLD.vl_unitario_item,0) <> coalesce(NEW.vl_unitario_item,0)) then
		
			if (ie_regra_acresc_mat_autor_w = 'S') then
				
				update	material_autorizado
				set	vl_cotado	= NEW.vl_unitario_item,
					vl_unitario	= CASE WHEN coalesce(ie_origem_preco,6)=6 THEN CASE WHEN ie_reducao_acrescimo='R' THEN									(coalesce(NEW.vl_unitario_item,0) - (coalesce(NEW.vl_unitario_item,0)  * coalesce(pr_adicional/100,0)))  ELSE (coalesce(NEW.vl_unitario_item,0)  + (coalesce(NEW.vl_unitario_item,0)  * coalesce(pr_adicional/100,0))) END   ELSE coalesce(NEW.vl_unitario_item,0) END ,
					nm_usuario	= NEW.nm_usuario,
					dt_atualizacao	= LOCALTIMESTAMP
				where	nr_sequencia	= nr_seq_mat_autor_w;

			elsif (ie_regra_acresc_mat_autor_w = 'N') then
				
				update	material_autorizado
				set	vl_cotado	= NEW.vl_unitario_item,
					vl_unitario	= NEW.vl_unitario_item,
					nm_usuario	= NEW.nm_usuario,
					dt_atualizacao	= LOCALTIMESTAMP
				where	nr_sequencia	= nr_seq_mat_autor_w;
			
			end if;
	
		end if;
		
		if (coalesce(NEW.cd_cgc,'X') <> coalesce(OLD.cd_cgc,'X')) then
			update	material_autorizado
			set	cd_cgc_fabricante = coalesce(NEW.cd_cgc, cd_cgc_fabricante),
				nm_usuario	= NEW.nm_usuario,
				dt_atualizacao	= LOCALTIMESTAMP
			where	nr_sequencia	= nr_seq_mat_autor_w;
			
		end if;
		end;
	end loop;
	close C05;
	
	if (coalesce(OLD.vl_unitario_item,0) <> coalesce(NEW.vl_unitario_item,0)) then
		NEW.vl_unitario_atualizado := (NEW.vl_unitario_item - coalesce(NEW.vl_desconto,0));
	end 	if;
		
	if (OLD.ie_autorizado is not null) and (OLD.ie_autorizado <> NEW.ie_autorizado) then
		ie_evento_w :=	'ASAA';
	elsif (NEW.ie_origem_inf = 'E') then
		ie_evento_w :=	'EOPME';
	else
		ie_evento_w :=	'AOPME';
	end if;	
	
	if (NEW.nr_seq_agenda is not null) then	
		select	cd_pessoa_fisica,
			coalesce(obter_idade_pf(cd_pessoa_fisica,LOCALTIMESTAMP,'A'),coalesce(qt_idade_paciente,0)),
			Obter_Sexo_PF(cd_pessoa_fisica,'C'),
			cd_medico,
			cd_convenio,
			nr_seq_proc_interno,
			cd_agenda,
			hr_inicio,
			cd_procedimento,
			ie_origem_proced,
			dt_cancelamento,
			cd_motivo_cancelamento,
			nr_atendimento,
			substr(ds_observacao,1,255)
		into STRICT	cd_pessoa_fisica_w,
			qt_idade_w,
			ie_sexo_w,
			cd_medico_w,
			cd_convenio_w,
			nr_seq_proc_interno_w,
			cd_agenda_w,
			hr_inicio_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			dt_cancelamento_w,
			cd_motivo_cancel_w,
			nr_atendimento_w,
			ds_observacao_ww
		from	agenda_paciente
		where	nr_sequencia = NEW.nr_seq_agenda;	

		
		open c04;
		loop
		fetch c04 into
			nr_seq_evento_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
			BEGIN
			CALL gerar_evento_agenda_trigger(	nr_seq_evento_w,
							null,
							cd_pessoa_fisica_w,
							null,
							NEW.nm_usuario,
							cd_agenda_w,
							hr_inicio_w,
							cd_medico_w,
							cd_procedimento_w,
							ie_origem_proced_w,
							dt_cancelamento_w,
							NEW.cd_material,
							NEW.qt_material,
							NEW.ie_autorizado,
							cd_convenio_w, 
							cd_motivo_cancel_w,
							'S',
							null,
							null,
							null,
							null,
							null,
							ds_observacao_ww,
							NULL,
							NULL,
							NULL,
							NEW.cd_cgc);
			end;
		end loop;
		close c04;
	end if;
	
	BEGIN

	ie_permite_alt_executada_w := obter_param_usuario(871, 758, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_permite_alt_executada_w);


	select  max(a.ie_status_agenda),
		max(b.cd_tipo_agenda)
	into STRICT	ie_status_agenda_w,
		cd_tipo_agenda_w
	from    agenda_paciente a,
		agenda b
	where   a.cd_agenda = b.cd_agenda
	and	nr_sequencia = NEW.nr_seq_agenda;

	exception
		when others then
		null;
	end;

	if (ie_permite_alt_executada_w = 'N') and (cd_tipo_agenda_w = 1) and (ie_status_agenda_w = 'E') then
		CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(236679);
		
	end if;
	
end if;

  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_agenda_pac_opme_update() FROM PUBLIC;

CREATE TRIGGER agenda_pac_opme_update
	BEFORE UPDATE ON agenda_pac_opme FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_agenda_pac_opme_update();

