-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS smart_prescr_proc_hor ON prescr_proc_hor CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_smart_prescr_proc_hor() RETURNS trigger AS $BODY$
declare
	REG_INTEGRACAO_W		  gerar_int_padrao.reg_integracao;
	NR_SEQ_PROT_GLIC_W        PRESCR_PROCEDIMENTO.NR_SEQ_PROT_GLIC%type;
	NR_SEQ_PROC_INTERNO_W     PRESCR_PROCEDIMENTO.NR_SEQ_PROC_INTERNO%type;
	NR_SEQ_EXAME_W            PRESCR_PROCEDIMENTO.NR_SEQ_EXAME%type;
BEGIN
  BEGIN
BEGIN
	select max(nr_seq_prot_glic),
		   max(nr_seq_proc_interno),
		   max(nr_seq_exame)
	into STRICT 
		nr_seq_prot_glic_w,   
		nr_seq_proc_interno_w,
		nr_seq_exame_w        
	from prescr_procedimento
	where nr_sequencia = NEW.nr_seq_procedimento
	and nr_prescricao  = NEW.nr_prescricao;

	
	if 	((((OLD.DT_SUSPENSAO is null AND NEW.DT_SUSPENSAO is not null)
		   or (NEW.dt_horario 	<> OLD.dt_horario)) 
		   and (TG_OP = 'UPDATE')) 
		   or (((coalesce(NEW.IE_APRAZADO,'N') = 'S') 
		   and (TG_OP = 'INSERT'))))  then 
		BEGIN	
			reg_integracao_w.cd_estab_documento := wheb_usuario_pck.get_cd_estabelecimento;		
			If (nr_seq_prot_glic_w is not null) then -- Glicemia
				reg_integracao_w := gerar_int_padrao.gravar_integracao('328', NEW.NR_PRESCRICAO, NEW.nm_usuario, reg_integracao_w, 'NR_PRESCRICAO=' || NEW.NR_PRESCRICAO || ';NR_SEQUENCIA=' || NEW.NR_SEQ_PROCEDIMENTO || ';DS_OPERACAO=UPDATE');
			ELSIF ((Obter_dados_proc_interno(nr_seq_proc_interno_w,'TU') = 'E') or (obter_cod_exame_lab(nr_seq_exame_w) IS NOT NULL)) then  -- Exames
				reg_integracao_w := gerar_int_padrao.gravar_integracao('310', NEW.NR_PRESCRICAO, NEW.nm_usuario, reg_integracao_w, 'NR_PRESCRICAO=' || NEW.NR_PRESCRICAO || ';NR_SEQUENCIA=' || NEW.NR_SEQ_PROCEDIMENTO || ';DS_OPERACAO=UPDATE');
			end if;
		END;	
	end if;
	
	
exception when others then
	null;
end;

  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_smart_prescr_proc_hor() FROM PUBLIC;

CREATE TRIGGER smart_prescr_proc_hor
	AFTER INSERT OR UPDATE ON prescr_proc_hor FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_smart_prescr_proc_hor();

