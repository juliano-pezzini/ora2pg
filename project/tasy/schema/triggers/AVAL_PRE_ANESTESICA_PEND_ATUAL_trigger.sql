-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS aval_pre_anestesica_pend_atual ON aval_pre_anestesica CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_aval_pre_anestesica_pend_atual() RETURNS trigger AS $BODY$
declare

PRAGMA AUTONOMOUS_TRANSACTION;

qt_reg_w		smallint;
ie_tipo_w		varchar(10);
cd_pessoa_fisica_w		varchar(30);
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

	if (TG_OP = 'INSERT') or (TG_OP = 'UPDATE') then
		
		if (NEW.dt_liberacao is null) then
			ie_tipo_w := 'APAE';
		elsif (OLD.dt_liberacao is null) and (NEW.dt_liberacao is not null) then
			ie_tipo_w := 'XAPAE';
		end if;

		select 	max(cd_pessoa_fisica)
		into STRICT	cd_pessoa_fisica_w
		from	atendimento_paciente
		where 	nr_atendimento	=	NEW.nr_atendimento;

		BEGIN
		if (ie_tipo_w	is not null) then
			CALL Gerar_registro_pendente_PEP(ie_tipo_w, NEW.nr_sequencia, coalesce(cd_pessoa_fisica_w,NEW.cd_pessoa_fisica), NEW.nr_atendimento, NEW.nm_usuario);
		end if;
		exception
			when others then
			null;
		end;		

	elsif (TG_OP = 'DELETE') then
		
		delete 	from pep_item_pendente
		where 	IE_TIPO_REGISTRO = 'APAE'
		and	nr_seq_registro = OLD.nr_sequencia
		and	coalesce(IE_TIPO_PENDENCIA,'L')	= 'L';
		
		commit;

	end if;	
	if (wheb_usuario_pck.get_ie_executar_trigger	= 'S')  then
		if (OLD.dt_inativacao is null and NEW.dt_inativacao is not null and NEW.cd_evolucao is not null) then
			delete from clinical_note_soap_data where cd_evolucao = NEW.cd_evolucao and ie_med_rec_type = 'SURG_ACHIEVE' and ie_stage = 1 and ie_soap_type = 'P';
		end if;
	end if;
	commit;

<<Final>>
qt_reg_w	:= 0;
  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_aval_pre_anestesica_pend_atual() FROM PUBLIC;

CREATE TRIGGER aval_pre_anestesica_pend_atual
	AFTER INSERT OR UPDATE OR DELETE ON aval_pre_anestesica FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_aval_pre_anestesica_pend_atual();

