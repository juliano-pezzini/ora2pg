-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS escala_epworth_atual ON escala_epworth CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_escala_epworth_atual() RETURNS trigger AS $BODY$
declare
  qt_reg_w        smallint;
  sql_w           varchar(200);
  qt_pontuacao_w  smallint;
  ds_erro_w      varchar(4000);
  ds_parametro_w varchar(4000);
BEGIN
  BEGIN
  if (NEW.nr_hora is null) or (NEW.DT_AVALIACAO <> OLD.DT_AVALIACAO) then
  BEGIN
    NEW.nr_hora := (to_char(round(NEW.DT_AVALIACAO,'hh24'),'hh24'))::numeric;
  end;
  end if;

  if (wheb_usuario_pck.get_ie_executar_trigger = 'N') then
    goto Final;
  end if;

  BEGIN
      sql_w := 'call OBTER_SCORE_ESCALA_EPWORTH_MD(:1,:2,:3,:4,:5,:6,:7,:8) into :qt_pontuacao_w';

      EXECUTE sql_w using in NEW.qt_sentado_lendo,
                                    in NEW.qt_televisao,
                                    in NEW.qt_publico,
                                    in NEW.qt_passeio,
                                    in NEW.qt_deitado,
                                    in NEW.qt_conversando,
                                    in NEW.qt_apos_refeicao,
                                    in NEW.qt_carro_parado,			
                                    out qt_pontuacao_w;
  exception
      when others then
        qt_pontuacao_w := null;
        ds_erro_w := sqlerrm;
        ds_parametro_w := ':new.nr_atendimento: ' || NEW.nr_atendimento || ' - :new.ie_situacao: ' || NEW.ie_situacao || ' - :new.cd_profissional: ' || NEW.cd_profissional;
        ds_parametro_w := ds_parametro_w || ' - :new.qt_sentado_lendo: ' || NEW.qt_sentado_lendo || ' - :new.qt_televisao: ' || NEW.qt_televisao || ' - :new.qt_publico: ' || NEW.qt_publico;
        ds_parametro_w := ds_parametro_w || ' - :new.qt_passeio: ' || NEW.qt_passeio || ' - :new.qt_deitado: ' || NEW.qt_deitado || ' - :new.qt_conversando: ' || NEW.qt_conversando || ' - :new.qt_apos_refeicao: ' || NEW.qt_apos_refeicao;
        ds_parametro_w := ds_parametro_w || ' - :new.qt_carro_parado: ' || NEW.qt_carro_parado || ' - qt_pontuacao_w: ' || qt_pontuacao_w;
        CALL gravar_log_medical_device('ESCALA_EPWORTH_ATUAL', 'OBTER_SCORE_ESCALA_EPWORTH_MD', ds_parametro_w, ds_erro_w, wheb_usuario_pck.get_nm_usuario, 'N');
  end;

  NEW.qt_pontuacao := qt_pontuacao_w;

  <<Final>>
  qt_reg_w := 0;
  END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_escala_epworth_atual() FROM PUBLIC;

CREATE TRIGGER escala_epworth_atual
	BEFORE INSERT OR UPDATE ON escala_epworth FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_escala_epworth_atual();

