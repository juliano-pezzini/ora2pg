-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS cpoe_variable_dose_atual ON cpoe_variable_dose CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_cpoe_variable_dose_atual() RETURNS trigger AS $BODY$
declare
dt_inicio_w		timestamp;
nr_prescricao_w		prescr_mat_hor.nr_prescricao%type;
nr_seq_material_w	prescr_material.nr_sequencia%type;
nr_seq_horario_w	prescr_mat_hor.nr_sequencia%type;

BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger	= 'S')  then

	select	max(dt_inicio)
	into STRICT	dt_inicio_w
	from 	cpoe_material
	where 	nr_sequencia = NEW.nr_seq_mat_cpoe;

	if (trunc(dt_inicio_w) = trunc(NEW.dt_dose)) and
		(NEW.qt_dose_adm is not null AND NEW.IE_AWAITING_RESULT = 'N') then

		update 	cpoe_material
		set	qt_dose 	= NEW.qt_dose_adm
		where 	nr_sequencia 	= NEW.nr_seq_mat_cpoe;
	
	end if;

	if (trunc(LOCALTIMESTAMP) = trunc(NEW.dt_dose)) and (NEW.qt_dose_adm is not null) and (OLD.qt_dose_adm is null or OLD.qt_dose_adm <> NEW.qt_dose_adm) and (NEW.IE_AWAITING_RESULT = 'N') then

		select 	max(b.nr_prescricao),
			max(a.nr_sequencia),
			max(b.nr_sequencia)
		into STRICT	nr_prescricao_w,
			nr_seq_material_w,
			nr_seq_horario_w
		from 	prescr_material a,
			prescr_mat_hor b
		where 	a.nr_seq_mat_cpoe 	= NEW.nr_seq_mat_cpoe
		and 	trunc(b.dt_horario)	= trunc(NEW.dt_dose)
		and 	a.nr_sequencia 		= b.nr_seq_material
		and 	a.nr_prescricao 	= b.nr_prescricao
		and 	b.dt_fim_horario 	is null
		and 	a.nr_sequencia_diluicao is null;
		
		if (nr_prescricao_w > 0) then
			
			update 	prescr_material
			set 	qt_dose = NEW.qt_dose_adm
			where	nr_prescricao 	= nr_prescricao_w
			and 	nr_sequencia	= nr_seq_material_w
			and 	nr_sequencia_diluicao is null;
			
			update	prescr_mat_hor
			set 	qt_dose	= NEW.qt_dose_adm
			where	nr_sequencia	= nr_seq_horario_w;
			
		end if;
	end if;
end if;

RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_cpoe_variable_dose_atual() FROM PUBLIC;

CREATE TRIGGER cpoe_variable_dose_atual
	AFTER INSERT OR UPDATE ON cpoe_variable_dose FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_cpoe_variable_dose_atual();

