-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS ap_lote_atual ON ap_lote CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_ap_lote_atual() RETURNS trigger AS $BODY$
DECLARE

ds_alteracao_w		varchar(1800);
cd_setor_atendimento_w	setor_atendimento.cd_setor_atendimento%type;
qt_existe_regra_w	bigint;
nr_atendimento_w	atendimento_paciente.nr_atendimento%type;
ie_permite_atend_lote_w		setor_atendimento.ie_permite_atend_lote%type := 'S';

BEGIN

if wheb_usuario_pck.get_ie_executar_trigger = 'S' then
	if (TG_OP = 'UPDATE') then
		if (coalesce(OLD.cd_local_estoque,0) <> coalesce(NEW.cd_local_estoque,0)) then

			ds_alteracao_w	:= substr(ds_alteracao_w || ' CD_LOCAL_ESTOQUE(' || coalesce(OLD.cd_local_estoque,0) || '/' || coalesce(NEW.cd_local_estoque,0)||'); ',1,1800);	

			select	count(1)
			into STRICT	qt_existe_regra_w
			from	dis_regra_setor;
			
			select	max(nr_atendimento)
			into STRICT	nr_atendimento_w
			from	prescr_medica
			where	nr_prescricao = NEW.nr_prescricao;
			
			if (qt_existe_regra_w > 0) then
				
				select	count(1)
				into STRICT	qt_existe_regra_w
				from	local_estoque c,
					dis_regra_setor b,
					dis_regra_local_setor a
				where	a.nr_seq_dis_regra_setor = b.nr_sequencia
				and	c.cd_local_estoque = a.cd_local_estoque
				and	b.cd_setor_atendimento = obter_setor_atendimento(nr_atendimento_w)
				and	a.cd_local_estoque = NEW.cd_local_estoque
				and	c.ie_tipo_local = '11';
				
				if (qt_existe_regra_w > 0) then
					CALL intdisp_movto_mat_hor(NEW.nr_sequencia, NEW.ie_status_lote, NEW.cd_local_estoque, '1');
				else
								
					select	count(1)
					into STRICT	qt_existe_regra_w
					from	int_disp_mat_hor a
					where	a.nr_seq_lote = coalesce(NEW.nr_seq_lote_sup,NEW.nr_sequencia)
					and	a.ie_tipo_movimentacao = 'EOA'
					and	a.cd_local_estoque = OLD.cd_local_estoque;
								
					if (qt_existe_regra_w > 0) then
						CALL intdisp_movto_mat_hor(NEW.nr_sequencia, NEW.ie_status_lote, OLD.cd_local_estoque, '2');
					end if;
					
					select	count(1)
					into STRICT	qt_existe_regra_w
					from	local_estoque c,
						dis_regra_setor b,
						dis_regra_local_setor a
					where	a.nr_seq_dis_regra_setor = b.nr_sequencia
					and	c.cd_local_estoque = a.cd_local_estoque		
					and	a.cd_local_estoque = NEW.cd_local_estoque
					and	c.ie_tipo_local = '11';
						
					if (qt_existe_regra_w > 0) then
						CALL intdisp_movto_mat_hor(NEW.nr_sequencia, NEW.ie_status_lote, NEW.cd_local_estoque, '1');
					end if;
				end if;
			end if;
			if (NEW.ie_status_lote = 'G') then
				CALL gerar_int_dankia_pck.dankia_gerar_horario_mov(NEW.nr_prescricao, NEW.nr_sequencia, nr_atendimento_w, NEW.cd_local_estoque, OLD.cd_local_estoque, NEW.nm_usuario);
			end if;
			
		end if;
		
		if (coalesce(OLD.cd_setor_atendimento,0) <> coalesce(NEW.cd_setor_atendimento,0)) then
			ds_alteracao_w	:= substr(ds_alteracao_w || ' CD_SETOR_ATENDIMENTO(' || coalesce(OLD.cd_setor_atendimento,0) || '/' || coalesce(NEW.cd_setor_atendimento,0)||'); ',1,1800);
			
			select	coalesce(max(ie_permite_atend_lote),'S')
			into STRICT	ie_permite_atend_lote_w
			from	setor_atendimento
			where	cd_setor_atendimento = NEW.cd_setor_atendimento;
			
			if (ie_permite_atend_lote_w = 'N') then
				NEW.cd_setor_atendimento := OLD.cd_setor_atendimento;
			end if;
		end if;
		
		if (coalesce(OLD.ie_status_lote,0) <> coalesce(NEW.ie_status_lote,0)) then
			ds_alteracao_w	:= substr(ds_alteracao_w || ' IE_STATUS_LOTE(' || coalesce(OLD.ie_status_lote,0) || '/' || coalesce(NEW.ie_status_lote,0)||'); ',1,1800);
			if (NEW.ie_status_lote in ('C', 'CA')) then
				CALL gerar_int_dankia_pck.dankia_cancelamento_lote(NEW.nr_prescricao, NEW.nr_sequencia, NEW.cd_local_estoque, NEW.nm_usuario);
			end if;
		end if;
		
		if (OLD.dt_inicio_dispensacao is not null) and (NEW.dt_inicio_dispensacao is null) then
			ds_alteracao_w	:= substr(ds_alteracao_w || ' DT_INICIO_DISPENSACAO(' || OLD.dt_inicio_dispensacao || '/' || NEW.dt_inicio_dispensacao || '); ',1,1800);	
		end if;

		if (OLD.dt_inicio_dispensacao is null and NEW.dt_inicio_dispensacao is not null or coalesce(OLD.dt_inicio_dispensacao, LOCALTIMESTAMP) <> coalesce(NEW.dt_inicio_dispensacao, LOCALTIMESTAMP)) then
			ds_alteracao_w	:= substr(ds_alteracao_w || ' DT_INICIO_DISPENSACAO(' || OLD.dt_inicio_dispensacao || '/' || NEW.dt_inicio_dispensacao || '); ',1,1800);	
		end if;

		if	((OLD.dt_impressao is null and NEW.dt_impressao is not null) or (coalesce(OLD.dt_impressao, LOCALTIMESTAMP) <> coalesce(NEW.dt_impressao, LOCALTIMESTAMP))) then
			ds_alteracao_w	:= substr(ds_alteracao_w || ' dt_impressao(' || coalesce(to_char(OLD.dt_impressao, 'dd/mm/yyyy hh24:mi:ss'),'null') || ' / ' || coalesce(to_char(NEW.dt_impressao, 'dd/mm/yyyy hh24:mi:ss'),'null')||'); ',1,1800);
		end if;
		
		if	((OLD.dt_impressao_aqui is null and NEW.dt_impressao_aqui is not null) or (coalesce(OLD.dt_impressao_aqui, LOCALTIMESTAMP) <> coalesce(NEW.dt_impressao_aqui, LOCALTIMESTAMP))) then
			ds_alteracao_w	:= substr(ds_alteracao_w || ' dt_impressao_aqui(' || coalesce(to_char(OLD.dt_impressao_aqui, 'dd/mm/yyyy hh24:mi:ss'),'null') || ' / ' || coalesce(to_char(NEW.dt_impressao_aqui, 'dd/mm/yyyy hh24:mi:ss'),'null')||'); ',1,1800);
		end if;

		if (OLD.nr_seq_turno is not null) and (NEW.nr_seq_turno is null) then
			ds_alteracao_w	:= substr(ds_alteracao_w || ' NR_SEQ_TURNO(' || OLD.nr_seq_turno || '/' || NEW.nr_seq_turno || '); ',1,1800);	
		end if;

		if (coalesce(OLD.nr_seq_classif,0) <> coalesce(NEW.nr_seq_classif,0)) then
			ds_alteracao_w	:= substr(ds_alteracao_w || ' NR_SEQ_CLASSIF(' || coalesce(OLD.nr_seq_classif,0) || '/' || coalesce(NEW.nr_seq_classif,0)||'); ',1,1800);	
		end if;
		
		if (ds_alteracao_w is not null) then
			ds_alteracao_w := substr(' '||wheb_mensagem_pck.get_texto(167701)||'(old/new)= '||ds_alteracao_w||' FUNCAO('||to_char(wheb_usuario_pck.get_cd_funcao)||'); PERFIL('||to_char(wheb_usuario_pck.get_cd_perfil)||
						 '); STACK('||substr(dbms_utility.format_call_stack,1,1500)||');',1,1800);
			
			CALL gravar_log_tasy(99997,'LotePrescr=' || NEW.nr_sequencia || ds_alteracao_w || ';CD_SETOR_LOGADO='||wheb_usuario_pck.get_cd_setor_atendimento,NEW.nm_usuario);
		end if;
		
		
		if (NEW.ie_status_lote = 'R') and (NEW.nm_usuario_receb is null) then
			-- Nao foi possivel receber o lote!

			CALL wheb_mensagem_pck.exibir_mensagem_abort(252539);
		end if;
	end if;

	NEW.qt_min_atraso_inicio_atend	:= 0;
	NEW.qt_min_atraso_atend	:= 0;
	NEW.qt_min_atraso_disp		:= 0;
	NEW.qt_min_atraso_entrega	:= 0;
	NEW.qt_min_atraso_receb	:= 0;

	if (NEW.dt_limite_inicio_atend is not null) and (NEW.dt_inicio_dispensacao is not null) and (NEW.dt_limite_inicio_atend < NEW.dt_inicio_dispensacao) then
		BEGIN
		NEW.qt_min_atraso_inicio_atend	:= round((NEW.dt_inicio_dispensacao - NEW.dt_limite_inicio_atend) * 1440);
		end;
	end if;
	if (NEW.dt_limite_atend is not null) and (NEW.dt_atend_farmacia is not null) and (NEW.dt_limite_atend < NEW.dt_atend_farmacia) then
		BEGIN
		NEW.qt_min_atraso_atend	:= round((NEW.dt_atend_farmacia - NEW.dt_limite_atend) * 1440);
		end;
	end if;

	if (NEW.dt_limite_disp_farm is not null) and (NEW.dt_disp_farmacia is not null) and (NEW.dt_limite_disp_farm < NEW.dt_disp_farmacia) then
		BEGIN
		NEW.qt_min_atraso_disp		:= round((NEW.dt_disp_farmacia - NEW.dt_limite_disp_farm) * 1440);
		end;
	end if;

	if (NEW.dt_limite_entrega_setor is not null) and (NEW.dt_entrega_setor is not null) and (NEW.dt_limite_entrega_setor < NEW.dt_entrega_setor) then
		BEGIN
		NEW.qt_min_atraso_entrega	:= round((NEW.dt_entrega_setor - NEW.dt_limite_entrega_setor) * 1440);
		end;
	end if;

	if (NEW.dt_limite_receb_setor is not null) and (NEW.dt_recebimento_setor is not null) and (NEW.dt_limite_receb_setor < NEW.dt_recebimento_setor) then
		BEGIN
		NEW.qt_min_atraso_receb	:= round((NEW.dt_recebimento_setor - NEW.dt_limite_receb_setor) * 1440);
		end;
	end if;

	if (TG_OP = 'INSERT') then
		NEW.ds_stack := substr(dbms_utility.format_call_stack,1,2000);
	end if;
end if;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_ap_lote_atual() FROM PUBLIC;

CREATE TRIGGER ap_lote_atual
	BEFORE INSERT OR UPDATE ON ap_lote FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_ap_lote_atual();

