-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS aval_nutricao_ped_atual ON aval_nutricao_ped CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_aval_nutricao_ped_atual() RETURNS trigger AS $BODY$
declare
cd_pessoa_fisica_w	varchar(10);
ie_sexo_w		varchar(1);
qt_fator_ativ_w		double precision;
qt_fator_stress_w	double precision;
qt_obesidade		smallint;
qt_pont_sexo		smallint;
qt_pont_queimadura	smallint;
qt_pont_trauma		smallint;
ie_raca_negra_w			varchar(1);
qt_nec_proteica_w	double precision;
qt_meses_w			varchar(255);
qt_50_w				real;
qt_fator_ativ_fis_w double precision;
idade_ano_w bigint;
BEGIN
  BEGIN

/* *************************************************************************************
 *WHEN MAKING CHANGES IN THIS TRIGGER, ALSO CHANGE IN PROCEDURE OBTER_VALORES_AVAL_PED *
 ************************************************************************************ */



NEW.pr_perda		:= 	trunc(dividir_sem_round((NEW.qt_peso_atual * 100) , NEW.qt_peso_habit),3);
if (NEW.qt_peso_atual < NEW.qt_peso_habit) then
	NEW.QT_PERDA		:= (NEW.qt_peso_habit - NEW.qt_peso_atual);
	NEW.PR_PERDA_PESO  	:=   trunc(dividir_sem_round(((NEW.qt_peso_habit - NEW.qt_peso_atual) * 100), NEW.qt_peso_habit),3);
else
	NEW.QT_PERDA := 0;
	NEW.PR_PERDA_PESO := 0;
end if;

if (NEW.qt_altura is not null) then
	NEW.qt_imc	:= 	trunc(dividir_sem_round(NEW.qt_peso_atual , ((dividir_sem_round((NEW.qt_altura )::numeric, 100)) * (dividir_sem_round((NEW.qt_altura )::numeric, 100)))),1);
end if;


if (NEW.QT_CIRC_QUADRIL	is not null) and (NEW.QT_CIRC_CINTURA is not null)then
	NEW.QT_RAZAO_CINTURA_QUADRIL	:= dividir(NEW.QT_CIRC_CINTURA,NEW.QT_CIRC_QUADRIL);
end if;

select	cd_pessoa_fisica
into STRICT	cd_pessoa_fisica_w
from	atendimento_paciente
where	nr_atendimento = NEW.nr_atendimento;

select	obter_sexo_pf(cd_pessoa_fisica_w,'C')
into STRICT	ie_sexo_w
;

qt_meses_w := obter_idade_pf(cd_pessoa_fisica_w,NEW.DT_AVALIACAO,'M');
idade_ano_w := Obter_Idade_PF(cd_pessoa_fisica_w, LOCALTIMESTAMP, 'A');

select max(qt_50)
into STRICT   qt_50_w
from   w_aval_who
where  ie_tipo = 'IMC'
and    ie_sexo = ie_sexo_w
and    qt_meses = qt_meses_w;

if (NEW.qt_altura > 0) and (qt_50_w > 0) then
	NEW.QT_PESO_HABIT := coalesce(trunc(((dividir_sem_round((NEW.qt_altura )::numeric, 100)) * (dividir_sem_round((NEW.qt_altura )::numeric, 100))) * qt_50_w,3),0);
end if;

/* Get your black race */


select	coalesce(max(ie_negro),'N')
into STRICT	ie_raca_negra_w
from	cor_pele a,
	pessoa_fisica b
	where	b.nr_seq_cor_pele 	= a.nr_sequencia
	and	b.cd_pessoa_fisica 	= cd_pessoa_fisica_w;

if (ie_sexo_w = 'M') then
	NEW.qt_altura_estimada	:= 	(64.19 - (0.04 * NEW.qt_idade) + (2.02 * NEW.qt_altura_joelho));
else
	NEW.qt_altura_estimada	:= 	(84.88 - (0.24 * NEW.qt_idade) + (1.83 * NEW.qt_altura_joelho));
end if;

/*Chumlea - 1985		- 		Arthur - OS 823502*/

if (NEW.ie_origem_peso = 'F') and (NEW.qt_altura_joelho is not null) then
	if (ie_sexo_w	= 	'M') then
		NEW.qt_peso_atual	:= 	(60.65 + (NEW.qt_altura_joelho * 2.04));
	else
		NEW.qt_peso_atual	:= 	(84.88 + (NEW.qt_altura_joelho * 1.83) - (NEW.qt_idade * 0.24));
	end if;
end if;

/*Chumlea - 1988 		- 		Arthur - OS 823502*/

if (NEW.ie_origem_peso = 'C') and (NEW.qt_prega_cut_subesc is not null) and (NEW.qt_circ_panturrilha is not null) and (NEW.qt_circ_braco is not null) and (NEW.qt_altura_joelho is not null) then
	BEGIN
	if (ie_sexo_w	= 	'M') then
		NEW.qt_peso_atual	:= ((0.98 * NEW.qt_circ_panturrilha) + (1.16 * NEW.qt_altura_joelho) + (1.73 * NEW.qt_circ_braco) + (0.37 * NEW.qt_prega_cut_subesc) - 81.69);
	else
		NEW.qt_peso_atual	:= ((1.27 * NEW.qt_circ_panturrilha) + (0.87 * NEW.qt_altura_joelho) + (0.98 * NEW.qt_circ_braco) + (0.4 * NEW.qt_prega_cut_subesc) - 62.35);

	end if;
	end;
end if;

if (NEW.ie_origem_peso = 'R') and (NEW.qt_circ_abdomen is not null) and (NEW.qt_circ_panturrilha is not null) and (NEW.qt_circ_braco is not null) then
	BEGIN
	if (ie_sexo_w	= 	'M') then
		NEW.qt_peso_atual	:= ((0.5759 * NEW.qt_circ_braco) + (0.5263 * NEW.qt_circ_abdomen) + (1.2452 * NEW.qt_circ_panturrilha) - (4.8689 * 1) - 32.9241);
	else
		NEW.qt_peso_atual	:= ((0.5759 * NEW.qt_circ_braco) + (0.5263 * NEW.qt_circ_abdomen) + (1.2452 * NEW.qt_circ_panturrilha) - (4.8689 * 2) - 32.9241);

	end if;
	end;
end if;

/*The formula below was documented as Chumlea, but it does not match the references
Changed to a non-existing type*/

if (NEW.ie_origem_peso = 'J')and (NEW.qt_circ_braco is not null) and (NEW.qt_altura_joelho is not null) then
	BEGIN
	if (ie_sexo_w	= 	'M') then
			if (ie_raca_negra_w	=	'N') then
				if (NEW.qt_idade between 19 and 59) then
					NEW.qt_peso_atual :=  ((NEW.qt_altura_joelho * 1.19) + (NEW.qt_circ_braco * 3.14) - (83.72));
				elsif (NEW.qt_idade between 60 and 80) then 
					NEW.qt_peso_atual :=  ((NEW.qt_altura_joelho * 1.10) + (NEW.qt_circ_braco * 3.07) - (75.81));
				end if;
			else
				if (NEW.qt_idade between 19 and 59) then
					NEW.qt_peso_atual :=  ((NEW.qt_altura_joelho * 1.09) + (NEW.qt_circ_braco * 3.14) - (83.72));
				elsif (NEW.qt_idade between 60 and 80) then
					NEW.qt_peso_atual :=  ((NEW.qt_altura_joelho * 0.44) + (NEW.qt_circ_braco * 2.86) - (39.21));
				end if;
			end if;
	elsif (ie_sexo_w	= 	'F') then
		if (ie_raca_negra_w	=	'N') then
			if (NEW.qt_idade between 19 and 59) then
				NEW.qt_peso_atual :=  ((NEW.qt_altura_joelho * 1.01) + (NEW.qt_circ_braco * 2.81) - (66.04));
			elsif (NEW.qt_idade between 60 and 80) then 
				NEW.qt_peso_atual :=  ((NEW.qt_altura_joelho * 1.09) + (NEW.qt_circ_braco * 2.68) - (65.51));
			end if;
		else
			if (NEW.qt_idade between 19 and 59) then
				NEW.qt_peso_atual :=  ((NEW.qt_altura_joelho * 1.24) + (NEW.qt_circ_braco * 2.97) - (82.48));
			elsif (NEW.qt_idade between 60 and 80) then
				NEW.qt_peso_atual :=  ((NEW.qt_altura_joelho * 1.50) + (NEW.qt_circ_braco * 2.58) - (84.22));
			end if;	
		end if;
	end if;
	end;
end if;

/*Chumlea*/


NEW.QT_PERC_CIRC_BRACO 	:= obter_classif_percentil(ie_raca_negra_w,ie_sexo_w,NEW.qt_idade,'CB');
NEW.QT_PERC_PREGA_CUT_TRICIP 	:= obter_classif_percentil(ie_raca_negra_w,ie_sexo_w,NEW.qt_idade,'PCT');
NEW.QT_PERC_CIRC_MUSC_BRACO 	:= obter_classif_percentil(ie_raca_negra_w,ie_sexo_w,NEW.qt_idade,'CMB');

if (NEW.QT_CIRC_BRACO is not null) and (NEW.QT_PREGA_CUT_TRICIP is not null) then
	NEW.QT_CIRC_MUSC_BRACO	:= NEW.QT_CIRC_BRACO - 3.14 * (dividir(NEW.QT_PREGA_CUT_TRICIP , 10));
end if;

if (NEW.QT_PERC_CIRC_BRACO is not null) then
	NEW.PR_CIRC_BRACO	:= dividir((NEW.QT_CIRC_BRACO * 100) , NEW.QT_PERC_CIRC_BRACO);
end if;	

if (NEW.QT_PERC_PREGA_CUT_TRICIP is not null) then
	NEW.PR_PREGA_CUT_TRICIP	:= dividir((NEW.QT_PREGA_CUT_TRICIP * 100) , NEW.QT_PERC_PREGA_CUT_TRICIP);
end if;	

if (NEW.QT_PERC_CIRC_MUSC_BRACO is not null) then
	NEW.PR_CIRC_MUSC_BRACO	:= dividir((NEW.QT_CIRC_MUSC_BRACO * 100) , NEW.QT_PERC_CIRC_MUSC_BRACO);
end if;	

if (ie_sexo_w = 'M') then
	NEW.QT_GASTO_ENER_REPOUSO	:= 66.5 + (13.7 * NEW.QT_PESO_ATUAL) + (5 * coalesce(NEW.qt_altura,NEW.qt_altura_estimada)) - (6.8 * NEW.qt_idade);
  NEW.QT_GASTO_ENER_REPOUSO_KJ := converter_kcal_kjoules(NEW.QT_GASTO_ENER_REPOUSO,'KJ');

elsif (ie_sexo_w = 'F') then
	NEW.QT_GASTO_ENER_REPOUSO	:= 665 + (9.6 * NEW.QT_PESO_ATUAL) + (1.9 * coalesce(NEW.qt_altura,NEW.qt_altura_estimada)) - (4.7 * NEW.qt_idade);	
  NEW.QT_GASTO_ENER_REPOUSO_KJ := converter_kcal_kjoules(NEW.QT_GASTO_ENER_REPOUSO,'KJ');

end if;

if	(NEW.QT_PROTEINA is not null AND NEW.QT_PESO_ATUAL is not null) then
	NEW.QT_NEC_PROTEICA := NEW.QT_PROTEINA * NEW.QT_PESO_ATUAL;
else
	NEW.QT_NEC_PROTEICA := null;
end if;

if (NEW.QT_CALORIA is not null or  NEW.QT_CALORIA_KJ is not null) and (NEW.QT_PESO_ATUAL is not null) then

if (NEW.QT_CALORIA is not null and  NEW.QT_CALORIA_KJ is  null and (OLD.QT_CALORIA <> NEW.QT_CALORIA)) then
      NEW.QT_CALORIA_KJ := converter_kcal_kjoules(NEW.QT_CALORIA,'KJ');

elsif (NEW.QT_CALORIA is not null and  NEW.QT_CALORIA_KJ is  null ) then
      NEW.QT_CALORIA_KJ := converter_kcal_kjoules(NEW.QT_CALORIA,'KJ');
end if;

if (NEW.QT_CALORIA_KJ is null and NEW.QT_CALORIA is not null and (OLD.QT_CALORIA_KJ <> NEW.QT_CALORIA_KJ)) then
	NEW.QT_CALORIA := converter_kcal_kjoules(NEW.QT_CALORIA_KJ,'KCAL');

elsif (NEW.QT_CALORIA is null and NEW.QT_CALORIA_KJ is not null) then
	NEW.QT_CALORIA := converter_kcal_kjoules(NEW.QT_CALORIA_KJ,'KCAL');

end if;

  NEW.QT_NEC_CALORICA := NEW.QT_CALORIA * NEW.QT_PESO_ATUAL;
  NEW.QT_NEC_CALORICA_KJ := NEW.QT_CALORIA_KJ * NEW.QT_PESO_ATUAL;

end if;
BEGIN
if (NEW.QT_GASTO_ENER_REPOUSO is not null or NEW.QT_GASTO_ENER_REPOUSO_KJ is not null) and (NEW.NR_SEQ_FATOR_ATIV is not null) and (NEW.NR_SEQ_FATOR_STRESS is not null) then
	
	select	coalesce(max(qt_fator),1)
	into STRICT	qt_fator_stress_w
	from	nut_fator_stress
	where	nr_sequencia	= NEW.NR_SEQ_FATOR_STRESS;

	select	coalesce(max(qt_fator),1)
	into STRICT	qt_fator_ativ_w
	from	nut_fator_ativ
	where	nr_sequencia	= NEW.NR_SEQ_FATOR_ATIV;
	
	
	NEW.QT_GASTO_ENER_TOTAL := (NEW.QT_GASTO_ENER_REPOUSO * qt_fator_ativ_w * qt_fator_stress_w);
  NEW.QT_GASTO_ENER_TOTAL_KJ := (NEW.QT_GASTO_ENER_REPOUSO_KJ * qt_fator_ativ_w * qt_fator_stress_w);

end if;
exception
when others then
	null;
end;

BEGIN
if (NEW.qt_altura is not null) then
	if (ie_sexo_w = 'M') then
		NEW.QT_GASTO_GEB_MIFFLIN := (10 * NEW.qt_peso_atual) + (6.25 * NEW.qt_altura) - (5 * NEW.qt_idade) + 5;
    NEW.QT_GASTO_GEB_MIFFLIN_KJ := converter_kcal_kjoules(NEW.QT_GASTO_GEB_MIFFLIN,'KJ');
	else
		NEW.QT_GASTO_GEB_MIFFLIN := (10 * NEW.qt_peso_atual) + (6.25 * NEW.qt_altura) - (5 * NEW.qt_idade) - 161;
    NEW.QT_GASTO_GEB_MIFFLIN_KJ := converter_kcal_kjoules(NEW.QT_GASTO_GEB_MIFFLIN,'KJ');
	end if;
end if;

if (NEW.QT_PREGA_CUT_TRICIP is not null) and (NEW.QT_PREGA_CUT_SUPRAILIACA is not null) and (NEW.QT_PREGA_CUT_SUBESC is not null) and (NEW.QT_PREGA_CUT_ABD is not null) then
	NEW.PR_GORDURA := ((NEW.QT_PREGA_CUT_TRICIP + NEW.QT_PREGA_CUT_SUPRAILIACA + NEW.QT_PREGA_CUT_SUBESC + NEW.QT_PREGA_CUT_ABD ) * 0.153) + 5.783;
     --                                                 ((:new.QT_PREGA_CUT_TRICIP + :new.QT_PREGA_CUT_SUPRAILIACA + :new.QT_PREGA_CUT_SUBESC + (:new.QT_CIRC_ABDOMEN * 10) ) * 0.153) + 5.783;

end if;


if (NEW.IE_RESPIRACAO is not null) then
	if (NEW.IE_RESPIRACAO = 'ESP') then
		
		if (NEW.QT_IMC is not null) then
			if (NEW.QT_IMC > 27) then
				qt_obesidade	:= 1;
			else
				qt_obesidade	:= 0;
			end if;
		end if;
	
		NEW.QT_GAST_ENER_TOTAL_IRETON := 629 - (11 * NEW.qt_idade) + (25 * NEW.qt_peso_atual) - (609 * qt_obesidade);
    NEW.QT_GAST_ENER_TOTAL_IRETON_KJ := converter_kcal_kjoules(NEW.QT_GAST_ENER_TOTAL_IRETON,'KJ');

	end if;

	if (NEW.IE_RESPIRACAO = 'MEC') then
	
		if (NEW.IE_QUEIMADURA = 'S') then
			qt_pont_queimadura := 1;
		else
			qt_pont_queimadura := 0;
		end if;
	
		if (NEW.IE_TRAUMA = 'S') then
			qt_pont_trauma := 1;
		else
			qt_pont_trauma := 0;
		end if;
		
		if (ie_sexo_w = 'M') then
			qt_pont_sexo := 1;
		else
			qt_pont_sexo := 0;
		end if;
	
		NEW.QT_GAST_ENER_TOTAL_IRETON := 1784 - (11 * NEW.qt_idade) + (5 * NEW.qt_peso_atual) + (244 * qt_pont_sexo) + (239 * qt_pont_trauma) + (840 * qt_pont_queimadura);
    NEW.QT_GAST_ENER_TOTAL_IRETON_KJ := converter_kcal_kjoules(NEW.QT_GAST_ENER_TOTAL_IRETON,'KJ');

	
	end if;

end if;

if (NEW.IE_TCTH = 'PR') then			
	if (ie_sexo_w = 'M') then
		if (idade_ano_w >= 0) and (idade_ano_w < 3) then
			NEW.qt_necessidade_energetica := ((0.249 * NEW.QT_PESO_ATUAL) - 0.127) * 238.85;
		elsif (idade_ano_w >= 3) and (idade_ano_w < 10) then	
			NEW.qt_necessidade_energetica := ((0.095 * NEW.QT_PESO_ATUAL) + 2.110) * 238.85;
		elsif (idade_ano_w >= 10) and (idade_ano_w <= 18) then			
			NEW.qt_necessidade_energetica := ((0.074 * NEW.QT_PESO_ATUAL) + 2.754) * 238.85;
		end if;	
	elsif (idade_ano_w >= 0) and (idade_ano_w < 3) then
		NEW.qt_necessidade_energetica := ((0.244 * NEW.QT_PESO_ATUAL) - 0.130) * 238.85;
	elsif (idade_ano_w >= 3) and (idade_ano_w <= 10) then	
		NEW.qt_necessidade_energetica := ((0.085 * NEW.QT_PESO_ATUAL) + 2.033) * 238.85;
	elsif (idade_ano_w >= 10) and (idade_ano_w < 18) then	
		NEW.qt_necessidade_energetica := ((0.056 * NEW.QT_PESO_ATUAL) + 2.898) * 238.85;
	end if;	
elsif (NEW.IE_TCTH = 'PO') then
	if (qt_meses_w > 3) and (qt_meses_w <= 35) then
		NEW.qt_necessidade_energetica := (89 * NEW.QT_PESO_ATUAL) - 100 + 22;
	elsif (qt_meses_w <= 3) then
		NEW.qt_necessidade_energetica := (89 * NEW.QT_PESO_ATUAL) - 100 + 175;		
	elsif (qt_meses_w >= 4) and (qt_meses_w <= 6) then
		NEW.qt_necessidade_energetica := (89 * NEW.QT_PESO_ATUAL) - 100 + 56;	
	elsif (qt_meses_w >= 7) and (qt_meses_w <= 12) then
		NEW.qt_necessidade_energetica := (89 * NEW.QT_PESO_ATUAL) - 100 + 22;			
	elsif (qt_meses_w >= 13) and (qt_meses_w <= 35) then
		NEW.qt_necessidade_energetica := (89 * NEW.QT_PESO_ATUAL) - 100 + 20;			
	else
		qt_fator_ativ_fis_w := (obter_qt_fator_ativ_fisica(NEW.ie_fator_ativ_fisica, NEW.nr_atendimento))::numeric;

		if (qt_fator_ativ_fis_w is not null) and (qt_fator_ativ_fis_w > 0) then
			NEW.qt_necessidade_energetica := obter_nec_energetica(NEW.QT_PESO_ATUAL,NEW.QT_ALTURA,qt_fator_ativ_fis_w,NEW.nr_atendimento);
		else
			NEW.qt_necessidade_energetica := null;
		end if;
	end if;	
elsif (qt_meses_w <= 35) then
	NEW.qt_necessidade_energetica := (89 * NEW.QT_PESO_ATUAL) - 100 + 22;	
else
	qt_fator_ativ_fis_w := (obter_qt_fator_ativ_fisica(NEW.ie_fator_ativ_fisica, NEW.nr_atendimento))::numeric;
	if (qt_fator_ativ_fis_w is not null) and (qt_fator_ativ_fis_w > 0) then
			NEW.qt_necessidade_energetica := obter_nec_energetica(NEW.QT_PESO_ATUAL,NEW.QT_ALTURA,qt_fator_ativ_fis_w,NEW.nr_atendimento);
		else
			NEW.qt_necessidade_energetica := null;
		end if;
end if;
exception
when others then
	null;
end;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_aval_nutricao_ped_atual() FROM PUBLIC;

CREATE TRIGGER aval_nutricao_ped_atual
	BEFORE INSERT OR UPDATE ON aval_nutricao_ped FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_aval_nutricao_ped_atual();

