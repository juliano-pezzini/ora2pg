-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS exame_laboratorio_update ON exame_laboratorio CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_exame_laboratorio_update() RETURNS trigger AS $BODY$
declare
reg_integracao_w		gerar_int_padrao.reg_integracao;
ds_param_adicional_w		varchar(100);
nr_seq_evento_w		bigint;

C01 CURSOR FOR
SELECT	a.nr_seq_evento
from	regra_envio_sms a
where	a.ie_evento_disp	= 'ASE'
and	coalesce(a.ie_situacao,'A') = 'A';

BEGIN

if (NEW.nm_exame_loc	is null) or (NEW.nm_exame <> OLD.nm_exame )	then
	NEW.nm_exame_loc	:= upper(elimina_acentuacao(NEW.nm_exame));

end if;

if (NEW.ie_solicitacao <> OLD.ie_solicitacao) then

	open C01;
	loop
	fetch C01 into	
		nr_seq_evento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN
		CALL gerar_evento_exame_lab_trigger(nr_seq_evento_w,NEW.nm_usuario	,NEW.nr_seq_exame,NEW.nm_exame);
		end;
	end loop;
	close C01;

end if;

if (coalesce(NEW.nr_seq_superior,0) <> coalesce(OLD.nr_seq_superior,0)) and (NEW.nr_seq_superior is not null) and (NEW.nr_seq_superior = NEW.nr_seq_exame) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(224250,'');
end if;

if (NEW.nr_seq_superior is null) and (NEW.ie_situacao <>'I') then

  reg_integracao_w.cd_estab_documento :=obter_estabelecimento_ativo();
	ds_param_adicional_w := 'operacao_p=UPDATE;';
	reg_integracao_w := gerar_int_padrao.gravar_integracao('309', NEW.nr_seq_exame, NEW.nm_usuario, reg_integracao_w, ds_param_adicional_w);
elsif (NEW.nr_seq_superior is null) and (NEW.ie_situacao ='I') then
  reg_integracao_w.cd_estab_documento :=obter_estabelecimento_ativo();
	ds_param_adicional_w := 'operacao_p=DELETE;';
	reg_integracao_w := gerar_int_padrao.gravar_integracao('309', NEW.nr_seq_exame, NEW.nm_usuario, reg_integracao_w, ds_param_adicional_w);
end if;

RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_exame_laboratorio_update() FROM PUBLIC;

CREATE TRIGGER exame_laboratorio_update
	BEFORE UPDATE ON exame_laboratorio FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_exame_laboratorio_update();

