-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS atend_paciente_unidade_update ON atend_paciente_unidade CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_atend_paciente_unidade_update() RETURNS trigger AS $BODY$
DECLARE
ie_tipo_convenio_w		smallint;
cd_classif_setor_w		varchar(02);
dt_entrada_w			timestamp;
qt_existe_tel_w			smallint;
nr_ramal_w			varchar(5);
ie_transfere_prontuario_w	varchar(1);
nr_seq_interno_w		bigint;
nr_seq_evento_w			bigint;
cd_pessoa_fisica_w		varchar(10);
cd_estabelecimento_w		integer;
qt_idade_w			bigint;
ie_alta_w			varchar(1);
ie_higienizacao_w		varchar(1);
ie_gera_eritel_w		varchar(3);
ie_novo_status_w		varchar(1);
ie_status_atual_w		varchar(1);
ie_aguar_hig_transf_w		varchar(1);
ie_considera_pac_leito_w	varchar(1);
ie_integracao_epimed_w		smallint;
nr_seq_unidade_w		bigint;
nr_seq_regra_princ_w		bigint;
qt_regra_w			bigint;
ie_carater_inter_sus_w		varchar(10);
ie_tipo_atendimento_w		varchar(10);
nr_seq_classificacao_w		bigint;
ie_clinica_w			integer;
ie_higienizar_transferencia_w	varchar(1);
ie_aguard_hig_transferencia_w	varchar(1);
ie_status_transferencia_w	varchar(1);
ie_questiona_hig_transf_w	varchar(1);
ie_tipo_w					bigint;
cd_setor_atend_w			varchar(10);
cd_unid_bas_w				varchar(10);
cd_unid_compl_w				varchar(10);
ie_controle_hig_w			varchar(1);
ie_perm_hig_w				varchar(1);
ie_perm_hig_inic_w			varchar(1);
ie_higieniza_w				varchar(1);
qt_unid_bloq_w				bigint;
ie_unid_bloq_w				varchar(1);
ie_aguard_hig_w				varchar(1);
cd_tipo_acomodacao_leito_w		varchar(5);
ie_considera_tipo_acomod_w		varchar(1);
ie_move_paciente_w varchar(02);
ie_recebe_paciente_w varchar(02);
ie_aceita_outpatient_w varchar(02);
ie_encounter_outpatient_w varchar(02);
qt_reg_w	smallint;
ie_permite_data_menor_w			varchar(1);
dt_alta_w			timestamp;
qt_reg_hsl_w		bigint;

C02 CURSOR FOR
	SELECT	a.nr_seq_evento
	FROM regra_envio_sms a
LEFT OUTER JOIN regra_envio_sms_atend b ON (a.nr_sequencia = b.nr_seq_regra)
WHERE a.cd_estabelecimento	= cd_estabelecimento_w and a.ie_evento_disp	= 'ERA' and qt_idade_w between coalesce(qt_idade_min,0) and coalesce(qt_idade_max,9999) and coalesce(a.ie_situacao,'A') = 'A'  and coalesce(b.ie_carater_inter_sus,coalesce(ie_carater_inter_sus_w,0)) = coalesce(ie_carater_inter_sus_w,'0') and coalesce(b.ie_tipo_atendimento,coalesce(ie_tipo_atendimento_w,0)) = coalesce(ie_tipo_atendimento_w,'0') and coalesce(b.ie_clinica,coalesce(ie_clinica_w,0)) = coalesce(ie_clinica_w,'0') and coalesce(b.nr_seq_classificacao,coalesce(nr_seq_classificacao_w,0)) = coalesce(nr_seq_classificacao_w,'0');

BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'N') then
    goto final;
end if;

if (NEW.cd_departamento = 0) then
	NEW.cd_departamento := null;
end if;

ie_permite_data_menor_w := Obter_Param_Usuario(916, 662, Obter_perfil_Ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_permite_data_menor_w);

select 	coalesce(max(1), 0)
into STRICT 	qt_reg_w
from 	departamento_medico;
if (qt_reg_w > 0) then
	select coalesce(max(a.ie_move_paciente), 'N')
	into STRICT ie_move_paciente_w
	from departamento_medico a	
	where a.cd_departamento = OLD.cd_departamento;

	select coalesce(max(a.ie_recebe_paciente), 'N')
	into STRICT ie_recebe_paciente_w
	from departamento_medico a	
	where a.cd_departamento = NEW.cd_departamento;

	select coalesce(max(a.ie_aceita_outpatient), 'N')
	into STRICT ie_aceita_outpatient_w
	from departamento_medico a	
	where a.cd_departamento = NEW.cd_departamento;

	select
	 case  
	   WHEN ie_tipo_atendimento <> 1 THEN 'S'
	   WHEN ie_tipo_atendimento =  1 THEN 'N' 
	    ELSE 'N' 
	 end INTO STRICT ie_encounter_outpatient_w 
	from atendimento_paciente
	where nr_atendimento = NEW.nr_atendimento;


	if	((coalesce(NEW.cd_departamento, 0) <> 0) and ((NEW.cd_departamento) <> (OLD.cd_departamento))) then 	
		if (ie_move_paciente_w = 'N') then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(997494);
		elsif (ie_recebe_paciente_w = 'N') then
		 CALL wheb_mensagem_pck.exibir_mensagem_abort(997511);
		elsif (ie_aceita_outpatient_w = 'N' AND ie_encounter_outpatient_w = 'S') then
	        CALL wheb_mensagem_pck.exibir_mensagem_abort(997502);
		end if;
	end if;
end if;

if	((NEW.cd_setor_atendimento) <> (OLD.cd_setor_atendimento)) and
	((NEW.dt_entrada_unidade) = (OLD.dt_entrada_unidade)) and
	((NEW.nr_seq_interno) = (OLD.nr_seq_interno)) then

	insert 	into log_mov(DT_ATUALIZACAO, NM_USUARIO, CD_LOG, DS_LOG)
		values (LOCALTIMESTAMP, NEW.nm_usuario, 98822, ' ' || wheb_mensagem_pck.get_texto(800315) || ': ' || NEW.nr_atendimento ||
							  ' ' || wheb_mensagem_pck.get_texto(803148) || ': ' || NEW.cd_setor_atendimento ||
							  ' ' || wheb_mensagem_pck.get_texto(803149) || ': ' || OLD.cd_setor_atendimento ||
							  ' ' || wheb_mensagem_pck.get_texto(803150) || ': ' || obter_funcao_ativa ||
							  ' ' || wheb_mensagem_pck.get_texto(803152) || ': ' || obter_perfil_ativo);
end if;

if (NEW.dt_saida_unidade is not null) and (NEW.dt_entrada_unidade is not null) and (NEW.dt_entrada_unidade > NEW.dt_saida_unidade) and (NEW.IE_CALCULAR_DIF_DIARIA = OLD.IE_CALCULAR_DIF_DIARIA) then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort( 262445 , 'DT_SAIDA_UNIDADE='||PKG_DATE_FORMATERS_TZ.TO_VARCHAR(NEW.dt_saida_unidade, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)||';DT_ENTRADA='||PKG_DATE_FORMATERS_TZ.TO_VARCHAR(NEW.dt_entrada_unidade, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone));

end if;

select	Obter_Valor_Param_Usuario(3111,105, obter_perfil_ativo, NEW.nm_usuario,0)
into STRICT	ie_higienizacao_w
;

select	Obter_Valor_Param_Usuario(3111,109, obter_perfil_ativo, NEW.nm_usuario,0)
into STRICT	ie_gera_eritel_w
;

select	dt_entrada,
	ie_tipo_convenio,
	cd_pessoa_fisica,
	cd_estabelecimento,
	CASE WHEN dt_alta IS NULL THEN		CASE WHEN ie_higienizacao_w='S' THEN 'N'  ELSE 'S' END   ELSE 'S' END ,
	ie_carater_inter_sus,
	ie_tipo_atendimento,
	nr_seq_classificacao,
	ie_clinica,
	dt_alta
into STRICT	dt_entrada_w,
	ie_tipo_convenio_w,
	cd_pessoa_fisica_w,
	cd_estabelecimento_w,
	ie_alta_w,
	ie_carater_inter_sus_w,
	ie_tipo_atendimento_w,
	nr_seq_classificacao_w,
	ie_clinica_w,
	dt_alta_w
from	atendimento_paciente
where	nr_atendimento = NEW.nr_atendimento;

select count(*)
into STRICT qt_reg_hsl_w
from hsl_epimed_internacao_uti
where nr_atendimento = NEW.nr_atendimento;

select	coalesce(max(ie_integracao_epimed),0),
	coalesce(max(ie_considera_tipo_acomod),'N')
into STRICT	ie_integracao_epimed_w,
	ie_considera_tipo_acomod_w
from	parametro_atendimento
where	cd_estabelecimento =	cd_estabelecimento_w;

qt_idade_w	:= coalesce(obter_idade_pf(cd_pessoa_fisica_w,LOCALTIMESTAMP,'A'),0);
if (dt_entrada_w < LOCALTIMESTAMP) and (NEW.IE_CALCULAR_DIF_DIARIA = OLD.IE_CALCULAR_DIF_DIARIA) then
	if (NEW.dt_saida_unidade is not null) and (NEW.dt_saida_unidade > LOCALTIMESTAMP) and (NEW.dt_saida_unidade > LOCALTIMESTAMP + interval '120 days'/86400) then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort( 379546 , 'DT_SAIDA_UNIDADE='||PKG_DATE_FORMATERS_TZ.TO_VARCHAR(NEW.dt_saida_unidade, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)||';DT_ATUAL='||PKG_DATE_FORMATERS_TZ.TO_VARCHAR(LOCALTIMESTAMP, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone));
	end if;

	if (NEW.dt_entrada_unidade is not null) and (NEW.dt_entrada_unidade > LOCALTIMESTAMP) and pkg_i18n.get_user_locale <> 'de_AT' then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort( 379552 , 'DT_ENTRADA_UNIDADE='||PKG_DATE_FORMATERS_TZ.TO_VARCHAR(NEW.dt_entrada_unidade, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)||';DT_ATUAL='||PKG_DATE_FORMATERS_TZ.TO_VARCHAR(LOCALTIMESTAMP, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone));
	end if;

	if (ie_tipo_convenio_w <> 3) and (ie_permite_data_menor_w	= 'N') then -- Edgar 10/01/2005 OS 14154, Nao fazer esta consistencias qdo for SUS por causa da internacao BPA
		if (dt_entrada_w > NEW.dt_entrada_unidade) then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort( 379553 , 'DT_ENTRADA_UNIDADE='||PKG_DATE_FORMATERS_TZ.TO_VARCHAR(NEW.dt_entrada_unidade, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)||';DT_INICIO='||PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_entrada_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone));
		elsif (dt_entrada_w > NEW.dt_saida_unidade) then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort( 379554 , 'DT_SAIDA_UNIDADE='||PKG_DATE_FORMATERS_TZ.TO_VARCHAR(NEW.dt_saida_unidade, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)||';DT_INICIO='||PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_entrada_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone));
		end if;
	end if;
end if;

if (NEW.dt_saida_interno is null) then
	NEW.dt_saida_interno	:= to_date('30/12/2999','dd/mm/yyyy');
end if;

NEW.dt_saida_interno	:= coalesce(NEW.DT_SAIDA_UNIDADE,to_date('30/12/2999','dd/mm/yyyy'));

select cd_classif_setor
into STRICT cd_classif_setor_w
from setor_atendimento
where cd_setor_atendimento = NEW.cd_setor_atendimento;

if (NEW.dt_saida_unidade is not null) and (cd_classif_setor_w in ('1','5')) then

	update	controle_atend_unidade
	set	dt_saida = LOCALTIMESTAMP
	where	nr_seq_atepacu = NEW.nr_seq_interno;

end if;

select	max(a.cd_tipo_acomodacao)
into STRICT	cd_tipo_acomodacao_leito_w
from	unidade_atendimento a
where	a.cd_unidade_basica 	= NEW.cd_unidade_basica
and	a.cd_unidade_compl  	= NEW.cd_unidade_compl
and	a.cd_setor_atendimento 	= NEW.cd_setor_atendimento;

if	((coalesce(NEW.ie_passagem_setor,'N') = 'N') or (coalesce(NEW.ie_passagem_setor,'L') = 'L')) and
	(((ie_considera_tipo_acomod_w = 'S') and (substr(obter_se_sem_acomodacao(cd_tipo_acomodacao_leito_w),1,1) = 'N')) or
	 ((ie_considera_tipo_acomod_w = 'N') and (cd_classif_setor_w in (3, 4, 8, 11, 12)))) then
	BEGIN
	if (NEW.dt_saida_unidade is not null) and (coalesce(NEW.ie_radiacao,'N') = 'N') then
		BEGIN
		NEW.dt_saida_interno     	:= NEW.dt_saida_unidade;
		/*begin
		Select 	decode(nvl(a.ie_higienizacao,'N'),'N',
				Decode(a.cd_paciente_reserva,null,Decode(a.cd_convenio_reserva,null,'L','R'),'R'),
					Decode(a.ie_higienizacao, 'A', Decode(ie_alta_w,'S',a.ie_higienizacao,'H'), a.ie_higienizacao))
		into	ie_novo_status_w
		from	UNIDADE_ATENDIMENTO a
		WHERE A.cd_unidade_basica 	= :new.cd_unidade_basica
		  AND A.cd_unidade_compl  	= :new.cd_unidade_compl
		  AND A.nr_atendimento    	= :new.nr_atendimento
		  AND A.cd_setor_atendimento 	= :new.cd_setor_atendimento;

		exception
		when others then
			null;
		end; */


		select	Obter_Valor_Param_Usuario(3111,184, obter_perfil_ativo, NEW.nm_usuario,wheb_usuario_pck.get_cd_estabelecimento)
		into STRICT	ie_considera_pac_leito_w
		;

		if (ie_considera_pac_leito_w = 'F') and (ie_alta_w = 'N') then
			ie_aguar_hig_transf_w := 'S';
		else
			ie_aguar_hig_transf_w := 'N';
		end if;

		ie_higienizar_transferencia_w := Obter_param_Usuario(3111, 127, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_higienizar_transferencia_w);
		ie_aguard_hig_transferencia_w := Obter_param_Usuario(3111, 137, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_aguard_hig_transferencia_w);
		ie_aguard_hig_w := Obter_param_Usuario(3111, 175, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_aguard_hig_w);
		ie_questiona_hig_transf_w := Obter_param_Usuario(3111, 302, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_questiona_hig_transf_w);

		If (coalesce(obter_funcao_ativa, 0) in (3111, 3113)) then
			/*  Status para transferencia - depende dos param 127 e 137  */


			If (ie_higienizar_transferencia_w = 'S') then -- Higienizar o leito ao transferir - param 127
				ie_status_transferencia_w := 'H';
			Elsif (ie_aguard_hig_transferencia_w = 'S') then -- Higienizar o leito ao transferir - param 137
				ie_status_transferencia_w := 'G';
			Else
				ie_status_transferencia_w := 'L';
			end if;
		else
			ie_status_transferencia_w := 'H';
		end if;
		SELECT	CASE WHEN COUNT(nr_seq_unid_bloq)=0 THEN 'S'  ELSE 'N' END
		INTO STRICT	ie_unid_bloq_w
		FROM 	unidade_atendimento
		WHERE	cd_unidade_basica		= NEW.cd_unidade_basica
		AND		cd_unidade_compl		= NEW.cd_unidade_compl
		AND		cd_setor_atendimento	= NEW.cd_setor_atendimento;

		if (ie_unid_bloq_w = 'S') then
			if	(((ie_questiona_hig_transf_w = 'S' AND ie_aguard_hig_w <> 'C') or (ie_aguard_hig_w = 'S')) and (coalesce(obter_funcao_ativa, 0) in (3111, 3113))) then -- questionar higienizacao do leito - param 302

				UPDATE	UNIDADE_ATENDIMENTO A
				SET	A.NR_ATENDIMENTO      	 = NULL,
					A.DT_ENTRADA_UNIDADE  	 = NULL,
					A.NM_USUARIO		= NEW.nm_usuario,
					A.DT_ATUALIZACAO		= LOCALTIMESTAMP
				WHERE	A.cd_unidade_basica 	= NEW.cd_unidade_basica
				AND	A.cd_unidade_compl  	= NEW.cd_unidade_compl
				AND	A.nr_atendimento    	= NEW.nr_atendimento
				AND	A.dt_entrada_unidade	= NEW.dt_entrada_unidade
				AND	A.cd_setor_atendimento 	= NEW.cd_setor_atendimento;
			else
				UPDATE	UNIDADE_ATENDIMENTO A
				SET	A.NR_ATENDIMENTO      	 = NULL,
					A.DT_ENTRADA_UNIDADE  	 = NULL,
					A.IE_STATUS_UNIDADE   	=
					CASE WHEN coalesce(a.ie_higienizacao,'N')='N' THEN						CASE WHEN coalesce(a.cd_paciente_reserva,a.nm_pac_reserva) = NULL THEN CASE WHEN a.cd_convenio_reserva = NULL THEN 'L'  ELSE 'R' END   ELSE 'R' END   ELSE CASE WHEN a.ie_higienizacao='A' THEN  CASE WHEN ie_aguar_hig_transf_w='S' THEN 'G'  ELSE CASE WHEN ie_alta_w='S' THEN  a.ie_higienizacao  ELSE coalesce(ie_status_transferencia_w, a.ie_status_unidade) END  END   ELSE CASE WHEN ie_aguard_hig_w='C' THEN  'G'  ELSE a.ie_higienizacao END  END  END ,
					A.NM_USUARIO		= NEW.nm_usuario,
					A.DT_ATUALIZACAO	= LOCALTIMESTAMP
				WHERE	A.cd_unidade_basica 	= NEW.cd_unidade_basica
				AND	A.cd_unidade_compl  	= NEW.cd_unidade_compl
				AND	A.nr_atendimento    	= NEW.nr_atendimento
				AND	A.dt_entrada_unidade	= NEW.dt_entrada_unidade
				AND	A.cd_setor_atendimento 	= NEW.cd_setor_atendimento;
			end if;

			/*if	(ie_novo_status_w = 'A') and
				(ie_gera_eritel_w = 'S') then
				Insere_W_integracao_eritel	(:new.cd_setor_atendimento,
								:new.cd_unidade_basica,
								:new.cd_unidade_compl,
								:new.nr_atendimento,
								'N',
								:new.nm_usuario);
			end if;*/


			UPDATE UNIDADE_ATENDIMENTO A
			SET 	A.dt_higienizacao		 = NULL,
				A.dt_inicio_higienizacao	= LOCALTIMESTAMP,
				A.NM_USUARIO		= NEW.nm_usuario,
				A.DT_ATUALIZACAO		= LOCALTIMESTAMP,
				a.nm_usuario_higienizacao	= NEW.nm_usuario
			WHERE A.cd_unidade_basica 	= NEW.cd_unidade_basica
			  AND A.cd_unidade_compl  	= NEW.cd_unidade_compl
			  AND A.cd_setor_atendimento 	= NEW.cd_setor_atendimento
			  AND A.nr_atendimento    	= NEW.nr_atendimento
			  AND a.ie_status_unidade	= 'H';


			/* Ricardo 26/07/2005 - Alterado abaixo para setar a data de inicio de higienizacao quando
						for utilizado a regra de Controla no cadastro da unidade. OS 21222 */

			UPDATE UNIDADE_ATENDIMENTO A
			SET 	A.dt_higienizacao		 = NULL,
				A.dt_inicio_higienizacao	= LOCALTIMESTAMP,
				A.NM_USUARIO		= NEW.nm_usuario,
				A.DT_ATUALIZACAO		= LOCALTIMESTAMP,
				a.nm_usuario_higienizacao	= NEW.nm_usuario
			WHERE A.cd_unidade_basica 	= NEW.cd_unidade_basica
			  AND A.cd_unidade_compl  	= NEW.cd_unidade_compl
			  AND A.cd_setor_atendimento 	= NEW.cd_setor_atendimento
			  and a.nr_atendimento 		is null
			  AND a.ie_status_unidade	= 'H';
		end if;
		end;
	elsif (NEW.dt_entrada_unidade <> OLD.dt_entrada_unidade ) or (coalesce(NEW.dt_saida_unidade,LOCALTIMESTAMP + interval '1000 days') <> OLD.dt_saida_unidade ) then
		BEGIN
		NEW.dt_saida_interno       	:= to_date('30/12/2999','dd/mm/yyyy');
		select	a.IE_STATUS_UNIDADE
		into STRICT	ie_status_atual_w
		from	UNIDADE_ATENDIMENTO A
		WHERE A.cd_unidade_basica 	= NEW.cd_unidade_basica
		  AND A.cd_unidade_compl  	= NEW.cd_unidade_compl
		  AND A.cd_setor_atendimento 	= NEW.cd_setor_atendimento;


		if (cd_classif_setor_w <> 8) then -- Ao desfazer a alta nao colocar o leito em 'P' caso for Home Care.

			UPDATE	UNIDADE_ATENDIMENTO A
			SET A.NR_ATENDIMENTO      	= NEW.nr_atendimento,
			    A.DT_ENTRADA_UNIDADE  	= NEW.dt_entrada_unidade,
			    A.IE_STATUS_UNIDADE   	= 'P',
			    A.NM_USUARIO		= NEW.nm_usuario,
			    A.DT_ATUALIZACAO		= LOCALTIMESTAMP
			WHERE A.cd_unidade_basica 	= NEW.cd_unidade_basica
			  AND A.cd_unidade_compl  	= NEW.cd_unidade_compl
			  AND A.cd_setor_atendimento 	= NEW.cd_setor_atendimento;
		end if;

		if (ie_status_atual_w = 'A')
		and (NEW.dt_saida_unidade is null)
		and (OLD.dt_saida_unidade is not null)
		and	((ie_gera_eritel_w = 'S') or (ie_gera_eritel_w = 'APT')) then
			CALL Insere_W_integracao_eritel(NEW.cd_setor_atendimento,
							NEW.cd_unidade_basica,
							NEW.cd_unidade_compl,
							NEW.nr_atendimento,
							'S',
							NEW.nm_usuario,
							cd_estabelecimento_w);
		end if;
		end;
	else
		BEGIN

		insert 	into log_mov(DT_ATUALIZACAO, NM_USUARIO, CD_LOG, DS_LOG)
		values (LOCALTIMESTAMP, NEW.nm_usuario, 5750, ' ' || wheb_mensagem_pck.get_texto(800315) || ': ' || NEW.nr_atendimento ||
							 ' ' || wheb_mensagem_pck.get_texto(796345) || ' ' || NEW.cd_setor_atendimento ||
							 ' ' || wheb_mensagem_pck.get_texto(796346) || ': ' || NEW.cd_unidade_basica ||
							 ' ' || wheb_mensagem_pck.get_texto(796347) || ': ' || NEW.cd_unidade_compl ||
							 ' ' || wheb_mensagem_pck.get_texto(802055) || ': ' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(NEW.dt_entrada_unidade, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone));
		end;
	end if;

	if (NEW.dt_entrada_unidade <> OLD.dt_entrada_unidade ) or (NEW.dt_saida_unidade <> coalesce(OLD.dt_saida_unidade, LOCALTIMESTAMP + interval '5000 days')) then
		CALL Atualizar_Unidade_atendimento(
					NEW.cd_setor_atendimento,
					NEW.cd_unidade_basica,
					NEW.cd_unidade_compl);

	end if;
	end;
elsif (NEW.dt_saida_unidade is not null)  then
	NEW.dt_saida_interno     	:= NEW.dt_saida_unidade;
end if;

if (NEW.dt_saida_unidade is not null) and (OLD.dt_saida_unidade is null) then

	select	max(nr_seq_interno)
	into STRICT	nr_seq_unidade_w
	from	unidade_atendimento
	where	cd_setor_atendimento = NEW.cd_setor_atendimento
	and		cd_unidade_basica    = NEW.cd_unidade_basica
	and		cd_unidade_compl     = NEW.cd_unidade_compl;

	select	count(1)
	into STRICT	qt_unid_bloq_w
	from	unidade_atendimento
	where	nr_seq_unid_bloq = nr_seq_unidade_w;

	if (qt_unid_bloq_w > 0) then
		select	Max(cd_setor_atendimento),
				Max(cd_unidade_basica),
				Max(cd_unidade_compl)
		into STRICT	cd_setor_atend_w,
				cd_unid_bas_w,
				cd_unid_compl_w
		from	unidade_atendimento
		where	nr_seq_unid_bloq = nr_seq_unidade_w;

		update	unidade_atendimento
		set		nr_seq_unid_bloq  = NULL
		where	nr_seq_unid_bloq = nr_seq_unidade_w;

		ie_perm_hig_w := Obter_param_Usuario(3111, 118, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_perm_hig_w);
		ie_perm_hig_inic_w := Obter_param_Usuario(3111, 119, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_perm_hig_inic_w);

		if (ie_aguard_hig_transferencia_w <> 'N') then
			ie_controle_hig_w := substr(obter_se_higieniza_leito(cd_setor_atend_w, cd_unid_bas_w, cd_unid_compl_w),1,1);
			if ((substr(obter_se_higieniza_leito(cd_setor_atend_w, cd_unid_bas_w, cd_unid_compl_w),1,1) = 'H') and (ie_aguard_hig_transferencia_w = 'S')) or (ie_aguard_hig_transferencia_w = 'C') or
				((ie_considera_pac_leito_w = 'S') and (ie_aguard_hig_transferencia_w = 'S') and (ie_controle_hig_w = 'A')) then
				ie_tipo_w := 8;
			end if;
		end if;

		if ((ie_higienizar_transferencia_w = 'S') and
			((ie_perm_hig_w = 'S') or (ie_perm_hig_inic_w = 'S') or
			((ie_perm_hig_inic_w = 'D') and (obter_se_regra_lib_setor_higie(cd_setor_atend_w, obter_perfil_ativo, NEW.nm_usuario, 0) = 'S'))) and (ie_aguard_hig_transferencia_w = 'N')) then
			ie_tipo_w := 10;
		elsif ((ie_higienizar_transferencia_w = 'S') and
			((ie_perm_hig_w = 'S') or (ie_perm_hig_inic_w = 'S') or
			((ie_perm_hig_inic_w = 'D') and (obter_se_regra_lib_setor_higie(cd_setor_atend_w, obter_perfil_ativo, NEW.nm_usuario, 0) = 'S'))) and (ie_aguard_hig_transferencia_w = 'N')) then
			ie_tipo_w := 10;
		end if;

		ie_higieniza_w := valida_higien_saida_real(ie_tipo_w, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, NEW.cd_tipo_acomodacao, cd_setor_atend_w, cd_unid_bas_w, cd_unid_compl_w, ie_higieniza_w);

		if (ie_higieniza_w = 'S') then
			CALL atualizar_higienizar_js(ie_tipo_w, cd_setor_atend_w, cd_unid_bas_w, cd_unid_compl_w, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento,'N');
		end if;

	end if;

	CALL gerar_lib_bloqueio_telefone(obter_estab_atend(NEW.nr_atendimento),
					NEW.nr_atendimento,
					NEW.nm_usuario,
					NEW.cd_setor_atendimento,
					NEW.cd_unidade_basica,
					NEW.cd_unidade_compl,
					12);
end if;

if (NEW.dt_saida_unidade is null) and (OLD.dt_saida_unidade is not null) then
	CALL gerar_lib_bloqueio_telefone(obter_estab_atend(NEW.nr_atendimento),
					NEW.nr_atendimento,
					NEW.nm_usuario,
					NEW.cd_setor_atendimento,
					NEW.cd_unidade_basica,
					NEW.cd_unidade_compl,
					10);
end if;

select	Obter_Valor_Param_Usuario(1007,12, obter_perfil_ativo, NEW.nm_usuario,0)
into STRICT	ie_transfere_prontuario_w
;

if (ie_transfere_prontuario_w = 'S') and (NEW.cd_setor_atendimento <> OLD.cd_setor_atendimento) then
	CALL solicitar_prontuario_setor(NEW.nr_atendimento,NEW.cd_setor_atendimento,null,LOCALTIMESTAMP,NEW.nm_usuario);
end if;

if (OLD.dt_saida_unidade is null) and (NEW.dt_saida_unidade is not null) then
	select	coalesce(max(nr_seq_interno),0)
	into STRICT	nr_seq_interno_w
	from	unidade_atendimento
	where	cd_unidade_basica	= NEW.cd_unidade_basica
	and	cd_unidade_compl	= NEW.cd_unidade_compl
	and	cd_setor_atendimento	= NEW.cd_setor_atendimento;

	update	unidade_atendimento
	set	ie_status_unidade	= 'L',
		nr_seq_superior		 = NULL,
		NM_USUARIO		= NEW.nm_usuario,
		DT_ATUALIZACAO		= LOCALTIMESTAMP
	where	nr_seq_superior		= nr_seq_interno_w
	and	ie_status_unidade	= 'I';
end if;

if (NEW.dt_saida_unidade is not null) and (OLD.dt_saida_unidade is null) and (NEW.ie_radiacao = 'S') then
	update	unidade_atendimento
	set	ie_status_unidade	= 'I',
		ie_interditado_radiacao = 'S',
		NM_USUARIO		= NEW.nm_usuario,
		DT_ATUALIZACAO		= LOCALTIMESTAMP
	where	cd_unidade_basica	= OLD.cd_unidade_basica
	and	cd_unidade_compl	= OLD.cd_unidade_compl
	and	cd_setor_atendimento	= OLD.cd_setor_atendimento;
end if;

if (NEW.dt_entrada_real is not null) and (OLD.dt_entrada_real is null) then

	open C02;
	loop
	fetch C02 into
		nr_seq_evento_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		BEGIN

		CALL gerar_evento_pac_trigger_setor(nr_seq_evento_w,NEW.nr_atendimento,cd_pessoa_fisica_w,null,NEW.nm_usuario, NEW.cd_unidade_basica, NEW.cd_unidade_compl, NEW.cd_setor_atendimento);

		end;
	end loop;
	close C02;

	NEW.nm_usuario_real := wheb_usuario_pck.get_nm_usuario;
end if;

if	((ie_integracao_epimed_w = 1) and (cd_classif_setor_w = 4) and (NEW.dt_saida_unidade is not null)) or
	(dt_alta_w is not null AND qt_reg_hsl_w > 0)	then
		CALL hsl_gerar_epimed_internacao(NEW.cd_setor_atendimento,NEW.dt_entrada_unidade,NEW.nr_seq_interno,NEW.nr_atendimento,NEW.cd_unidade_basica,
				    NEW.cd_unidade_compl,NEW.nm_usuario,NEW.dt_saida_unidade,cd_classif_setor_w,'A');
end if;

select 	count(*)
into STRICT	qt_regra_w
from	regra_leitos_inativacao
where	ie_situacao = 'A';

if (OLD.dt_entrada_unidade is not null) and (NEW.dt_entrada_unidade <> OLD.dt_entrada_unidade and (coalesce(pkg_i18n.get_user_locale, 'pt_BR') not in ('de_DE', 'de_AT'))) then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(316262);
end if;

if (coalesce(qt_regra_w,0) > 0) and (OLD.dt_saida_unidade is null) and (NEW.dt_saida_unidade is not null) then

	select	max(nr_seq_unid_princ)
	into STRICT	nr_seq_regra_princ_w
	from	regra_leitos_inativacao
	where	ie_situacao = 'A'
	and	nr_seq_unid_sec = (	SELECT	max(nr_seq_interno)
					from	unidade_atendimento
					where 	cd_unidade_basica	= NEW.cd_unidade_basica
					and 	cd_unidade_compl  	= NEW.cd_unidade_compl
					and 	cd_setor_atendimento 	= NEW.cd_setor_atendimento);

	if (coalesce(nr_seq_regra_princ_w,0) = 0) then
		select	max(nr_seq_unid_sec)
		into STRICT	nr_seq_regra_princ_w
		from	regra_leitos_inativacao
		where	ie_situacao = 'A'
		and	nr_seq_unid_princ = (	SELECT	max(nr_seq_interno)
						from	unidade_atendimento
						where 	cd_unidade_basica	= NEW.cd_unidade_basica
						and 	cd_unidade_compl  	= NEW.cd_unidade_compl
						and 	cd_setor_atendimento 	= NEW.cd_setor_atendimento);
	end if;

	if (coalesce(nr_seq_regra_princ_w, 0) > 0) then

		update	unidade_atendimento
		set	ie_situacao = 'A'
		where	nr_seq_interno = nr_seq_regra_princ_w;

	end if;
end if;

<<final>>
null;

RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_atend_paciente_unidade_update() FROM PUBLIC;

CREATE TRIGGER atend_paciente_unidade_update
	BEFORE UPDATE ON atend_paciente_unidade FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_atend_paciente_unidade_update();

