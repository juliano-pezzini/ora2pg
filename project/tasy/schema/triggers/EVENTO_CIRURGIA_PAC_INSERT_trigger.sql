-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS evento_cirurgia_pac_insert ON evento_cirurgia_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_evento_cirurgia_pac_insert() RETURNS trigger AS $BODY$
declare

ie_evento_sac_w			smallint;
qt_reg_w				smallint;
ie_momento_integracao_w	varchar(15);
nr_atendimento_w		bigint;
cd_setor_atendimento_w 	integer;
ie_inicia_integracao_w	varchar(1);
ie_finaliza_integracao_w varchar(1);
ie_tipo_w				varchar(10);
ie_gera_cir_pepo_w		varchar(1);
cd_pessoa_fisica_w	pessoa_fisica.cd_pessoa_fisica%type;
ie_libera_evento_pepo_w	varchar(5);

BEGIN

ie_gera_cir_pepo_w := obter_param_usuario(872, 158, obter_perfil_ativo, NEW.nm_usuario, obter_estabelecimento_ativo, ie_gera_cir_pepo_w);

if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;
select	max(ie_evento_sac)
into STRICT	ie_evento_sac_w
from	evento_cirurgia
where	nr_sequencia	=	NEW.nr_seq_evento;

if (ie_evento_sac_w = 1) then
	if (ie_gera_cir_pepo_w = 'S' and coalesce(NEW.nr_seq_pepo,0) > 0) then
		update cirurgia set dt_preparacao = NEW.dt_registro where nr_seq_pepo = NEW.nr_seq_pepo;
	else
		update cirurgia set dt_preparacao = NEW.dt_registro where nr_cirurgia = NEW.nr_cirurgia;
	end if;
elsif (ie_evento_sac_w = 2) then
	update cirurgia set dt_chamada = NEW.dt_registro where nr_cirurgia = NEW.nr_cirurgia;
elsif (ie_evento_sac_w = 3) then
	if (ie_gera_cir_pepo_w = 'S' and coalesce(NEW.nr_seq_pepo,0) > 0) then
		update cirurgia set dt_chegada_sala = NEW.dt_registro where nr_seq_pepo = NEW.nr_seq_pepo;
	else
		update cirurgia set dt_chegada_sala = NEW.dt_registro where nr_cirurgia = NEW.nr_cirurgia;
	end if;
elsif (ie_evento_sac_w = 4) then
	if (ie_gera_cir_pepo_w = 'S' and coalesce(NEW.nr_seq_pepo,0) > 0) then
		update cirurgia set dt_chegada_anestesista = NEW.dt_registro where nr_seq_pepo = NEW.nr_seq_pepo;
	else
		update cirurgia set dt_chegada_anestesista = NEW.dt_registro where nr_cirurgia = NEW.nr_cirurgia;
	end if;
elsif (ie_evento_sac_w = 5) then
	if (ie_gera_cir_pepo_w = 'S' and coalesce(NEW.nr_seq_pepo,0) > 0) then
		update cirurgia set dt_inicio_anestesia = NEW.dt_registro where nr_seq_pepo = NEW.nr_seq_pepo;
	else
		update cirurgia set dt_inicio_anestesia	= NEW.dt_registro where nr_cirurgia = NEW.nr_cirurgia;
	end if;
elsif (ie_evento_sac_w = 6) then
	update cirurgia set dt_chegada_cirurgiao= NEW.dt_registro where nr_cirurgia = NEW.nr_cirurgia;
elsif (ie_evento_sac_w = 7) then
	update cirurgia set dt_fim_cirurgia = NEW.dt_registro where nr_cirurgia = NEW.nr_cirurgia;
elsif (ie_evento_sac_w = 7) then
	update cirurgia set dt_fim_cirurgia = NEW.dt_registro where nr_cirurgia = NEW.nr_cirurgia;
elsif (ie_evento_sac_w = 8) then
	update cirurgia set dt_inicio_cirurgia = NEW.dt_registro where nr_cirurgia = NEW.nr_cirurgia;
elsif (ie_evento_sac_w = 9) then
	if (ie_gera_cir_pepo_w = 'S' and coalesce(NEW.nr_seq_pepo,0) > 0) then
		update cirurgia set	dt_liberacao_sala  = NEW.dt_registro where nr_seq_pepo = NEW.nr_seq_pepo;
	else
		update cirurgia set dt_liberacao_sala = NEW.dt_registro where nr_cirurgia = NEW.nr_cirurgia;
	end if;
elsif (ie_evento_sac_w = 10) then
	update cirurgia set dt_fim_extubacao = NEW.dt_registro where nr_cirurgia = NEW.nr_cirurgia;
elsif (ie_evento_sac_w = 11) then
	if (ie_gera_cir_pepo_w = 'S' and coalesce(NEW.nr_seq_pepo,0) > 0) then
		update cirurgia set dt_entrada_recup = NEW.dt_registro where nr_seq_pepo = NEW.nr_seq_pepo;
	else
		update cirurgia set dt_entrada_recup = NEW.dt_registro where nr_cirurgia = NEW.nr_cirurgia;
	end if;
elsif (ie_evento_sac_w = 12) then
	if (ie_gera_cir_pepo_w = 'S' and coalesce(NEW.nr_seq_pepo,0) > 0) then
		update cirurgia set dt_saida_recup = NEW.dt_registro where nr_seq_pepo = NEW.nr_seq_pepo;
	else
		update cirurgia set dt_saida_recup = NEW.dt_registro where nr_cirurgia = NEW.nr_cirurgia;
	end if;
elsif (ie_evento_sac_w = 13) then
	update cirurgia set dt_chegada_srpa = NEW.dt_registro where nr_cirurgia = NEW.nr_cirurgia;
elsif (ie_evento_sac_w = 14) then
	if (ie_gera_cir_pepo_w = 'S' and coalesce(NEW.nr_seq_pepo,0) > 0) then
		update cirurgia set dt_saida_sala = NEW.dt_registro where nr_seq_pepo = NEW.nr_seq_pepo;
	else
		update cirurgia set dt_saida_sala = NEW.dt_registro where nr_cirurgia = NEW.nr_cirurgia;
	end if;
elsif (ie_evento_sac_w = 15) then
	if (ie_gera_cir_pepo_w = 'S' and coalesce(NEW.nr_seq_pepo,0) > 0) then
		update cirurgia set	dt_liberacao_sala  = NEW.dt_registro where nr_seq_pepo = NEW.nr_seq_pepo;
	else
		update cirurgia set dt_liberacao_sala = NEW.dt_registro where nr_cirurgia = NEW.nr_cirurgia;
	end if;
elsif (ie_evento_sac_w = 16) then
	if (ie_gera_cir_pepo_w = 'S' and coalesce(NEW.nr_seq_pepo,0) > 0) then
		update cirurgia set dt_fim_anestesia = NEW.dt_registro where nr_seq_pepo = NEW.nr_seq_pepo;
	else
		update cirurgia set dt_fim_anestesia = NEW.dt_registro where nr_cirurgia = NEW.nr_cirurgia;
	end if;
elsif (ie_evento_sac_w = 17) then
	if (ie_gera_cir_pepo_w = 'S' and coalesce(NEW.nr_seq_pepo,0) > 0) then
		update cirurgia set dt_saida_recup_prev = NEW.dt_registro where nr_seq_pepo = NEW.nr_seq_pepo;
	else
		update cirurgia set dt_saida_recup_prev = NEW.dt_registro where nr_cirurgia = NEW.nr_cirurgia;
	end if;

end if;

if (NEW.nr_seq_aten_pac_unid > 0) and
   ((NEW.nr_cirurgia > 0) or (NEW.nr_seq_pepo > 0)) and (coalesce(OLD.nr_seq_aten_pac_unid,0) <> coalesce(NEW.nr_seq_aten_pac_unid,0)) then

	select	coalesce(max(ie_momento_integracao),'IF')
	into STRICT	ie_momento_integracao_w
	from	parametros_pepo
	where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

	if (ie_momento_integracao_w = 'TM') then

		select	coalesce(max(ie_inicia_integracao),'N'),
				coalesce(max(ie_finaliza_integracao),'N')
		into STRICT	ie_inicia_integracao_w,
				ie_finaliza_integracao_w
		from	evento_cirurgia
		where	nr_sequencia = NEW.nr_seq_evento;


		if (NEW.nr_cirurgia > 0) then

			select	max(nr_atendimento)
			into STRICT	nr_atendimento_w
			from 	cirurgia
			where   nr_cirurgia = NEW.nr_cirurgia;

		elsif (NEW.nr_seq_pepo > 0) then

			select	max(nr_atendimento)
			into STRICT	nr_atendimento_w
			from 	cirurgia
			where   nr_seq_pepo = NEW.nr_seq_pepo;

		end if;


		select	max(cd_setor_atendimento)
		into STRICT	cd_setor_atendimento_w
		from	atend_paciente_unidade
		where	nr_seq_interno = NEW.nr_seq_aten_pac_unid;

		if (nr_atendimento_w > 0) and (cd_setor_atendimento_w > 0) then

			if (ie_inicia_integracao_w = 'S') then

				CALL gerar_cirurgia_hl7(nr_atendimento_w,NEW.nr_seq_aten_pac_unid,cd_setor_atendimento_w,'I');
			end if;

			if (ie_finaliza_integracao_w = 'S') then

				CALL gerar_cirurgia_hl7(nr_atendimento_w,NEW.nr_seq_aten_pac_unid,cd_setor_atendimento_w,'F');

			end if;

		end if;

	end if;

end if;

select	coalesce(max(ie_libera_evento_pepo),'N')
into STRICT	ie_libera_evento_pepo_w
from	parametro_medico
where	cd_estabelecimento = obter_estabelecimento_ativo;

if (ie_libera_evento_pepo_w = 'S') then
	if (NEW.dt_liberacao is null) then
		ie_tipo_w := 'TMOV';
	elsif (OLD.dt_liberacao is null) and (NEW.dt_liberacao is not null) then
		ie_tipo_w := 'XTMOV';
	end if;

	if (ie_tipo_w	is not null) then
		select	max(c.nr_atendimento),
				max(c.cd_pessoa_fisica)
		into STRICT	nr_atendimento_w,
				cd_pessoa_fisica_w
		from	cirurgia c
		where	c.nr_cirurgia = NEW.nr_cirurgia;

	if (cd_pessoa_fisica_w is null) then
		select	max(c.nr_atendimento),
						max(c.cd_pessoa_fisica)
		into STRICT	   nr_atendimento_w,
						cd_pessoa_fisica_w
		from	   pepo_cirurgia c
		where	c.nr_sequencia = NEW.nr_seq_pepo;
	end if;

		CALL Gerar_registro_pendente_PEP(ie_tipo_w, NEW.nr_sequencia, cd_pessoa_fisica_w, nr_atendimento_w, NEW.nm_usuario);
	end if;
end if;

<<Final>>
qt_reg_w	:= 0;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_evento_cirurgia_pac_insert() FROM PUBLIC;

CREATE TRIGGER evento_cirurgia_pac_insert
	AFTER INSERT OR UPDATE ON evento_cirurgia_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_evento_cirurgia_pac_insert();

