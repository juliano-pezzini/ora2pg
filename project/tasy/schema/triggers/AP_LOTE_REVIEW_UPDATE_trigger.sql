-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS ap_lote_review_update ON ap_lote_review CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_ap_lote_review_update() RETURNS trigger AS $BODY$
declare
    ds_param_integration_w        varchar(500);
    inpatient_count_w             bigint := 0;
    outpatient_count_w            bigint := 0;
BEGIN

    if ( NEW.ie_status_review <> 'R' ) then
        if ( coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'ja_JP' and wheb_usuario_pck.get_ie_executar_trigger = 'S' ) then
		
            select  count(case     when a.si_type_of_prescription in ('INPR','INPT','INPI','INPAT','INPDP','BRME')  then 1 end) ,
                    count(case      when a.si_type_of_prescription in ('OPIHO','OPOOH')  then 1 end)
            into STRICT	inpatient_count_w,
					outpatient_count_w
            from	prescr_material    p,
					cpoe_material      c,
					cpoe_order_unit    a,
					cpoe_tipo_pedido   cp,
					cpoe_rp            d
            where	p.nr_prescricao = NEW.nr_prescricao
			and 	p.nr_seq_mat_cpoe = c.nr_sequencia
			and 	a.nr_seq_cpoe_tipo_pedido = cp.nr_sequencia
			and 	c.nr_seq_cpoe_order_unit = a.nr_sequencia
			and 	d.nr_sequencia = c.nr_seq_cpoe_rp
			and 	coalesce(c.ie_retrogrado, 'N') = 'N' -- Not handling special Order for batch submission
			and   	a.si_type_of_prescription in ('INPR','INPT','INPI','INPAT','INPDP','BRME','OPIHO','OPOOH')
			and		cp.nr_seq_sub_grp = 'ME';

            if (NEW.dt_review_accepted is not null or NEW.dt_review_cancelled is not null) then
                if ( inpatient_count_w > 0 ) then
                    ds_param_integration_w := '{"recordId" : "' || NEW.nr_seq_lote || '"' || '}';
                    CALL execute_bifrost_integration(281, ds_param_integration_w); -- Inpatient Prescription
                end if;

                if ( outpatient_count_w > 0 ) then
                    ds_param_integration_w := '{"recordId" : "' || NEW.nr_seq_lote || '"' || '}';
					CALL execute_bifrost_integration(282, ds_param_integration_w); -- Outpatient Prescription
                end if;

            end if;

        end if;

    end if;

RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_ap_lote_review_update() FROM PUBLIC;

CREATE TRIGGER ap_lote_review_update
	AFTER UPDATE ON ap_lote_review FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_ap_lote_review_update();

