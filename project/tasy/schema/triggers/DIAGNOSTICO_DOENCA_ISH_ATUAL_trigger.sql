-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS diagnostico_doenca_ish_atual ON diagnostico_doenca CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_diagnostico_doenca_ish_atual() RETURNS trigger AS $BODY$
declare

reg_integracao_p		gerar_int_padrao.reg_integracao;
nr_sequencia_w		varchar(255);

procedure agendar_envio_diag_filho(
		ie_operacao_p		text,
		nr_atendimento_p		diagnostico_doenca.nr_atendimento%type,
		dt_diagnostico_p		diagnostico_doenca.dt_diagnostico%type,
		cd_doenca_p		diagnostico_doenca.cd_doenca%type,
		nm_usuario_p		text) is

c01 CURSOR FOR
SELECT	nr_atendimento,
	nr_seq_interno,
	cd_doenca
from	diagnostico_doenca
where	nr_atendimento = nr_atendimento_p
and	dt_diagnostico = dt_diagnostico_p
and	cd_doenca_superior = cd_doenca_p
order by nr_seq_interno;

c01_w	c01%rowtype;

reg_integracao_w	gerar_int_padrao.reg_integracao;
nr_sequencia_ww		varchar(255);

pragma autonomous_transaction;
BEGIN
open c01;
loop
fetch c01 into	
	c01_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	BEGIN
	reg_integracao_w.ie_operacao	:=	ie_operacao_p;
	reg_integracao_w.ie_status		:=	'P';
	reg_integracao_w.nr_atendimento	:=	c01_w.nr_atendimento;
	
	nr_sequencia_ww := c01_w.nr_atendimento || '¬' || c01_w.nr_seq_interno || '¬' || c01_w.cd_doenca;
		
	reg_integracao_w := gerar_int_padrao.gravar_integracao('82', nr_sequencia_ww, nm_usuario_p, reg_integracao_w);
	end;
end loop;
close c01;
commit;
end;

function obter_se_diag_lib(
		dt_liberacao_p		date,
		nr_atendimento_p		diagnostico_doenca.nr_atendimento%type,
		dt_diagnostico_p		diagnostico_doenca.dt_diagnostico%type,
		cd_doenca_superior_p	diagnostico_doenca.cd_doenca%type)
		return varchar2 is

ie_liberado_w		varchar2(1);
dt_liberacao_sup_w	date;

pragma autonomous_transaction;
BEGIN
ie_liberado_w	:=	'N';

if (coalesce(cd_doenca_superior_p,'X') = 'X') then
	if (dt_liberacao_p	is not null) then
		ie_liberado_w	:=	'S';	
	end if;
else
	BEGIN
	select	max(dt_liberacao)
	into STRICT	dt_liberacao_sup_w
	from	diagnostico_doenca
	where	nr_atendimento = nr_atendimento_p
	and	dt_diagnostico = dt_diagnostico_p
	and	cd_doenca = cd_doenca_superior_p;	
	
	if (dt_liberacao_sup_w is not null) and (dt_liberacao_p is not null) then
		ie_liberado_w	:=	'S';
	end if;
	end;
end if;

return ie_liberado_w;
end;
	
BEGIN 

if (wheb_usuario_pck.get_ie_executar_trigger = 'S')  then	
	reg_integracao_p.ie_status := 'AB';
	if (obter_se_diag_lib(
			coalesce(NEW.dt_liberacao, OLD.dt_liberacao),
			coalesce(NEW.nr_atendimento, OLD.nr_atendimento),
			coalesce(NEW.dt_diagnostico, OLD.dt_diagnostico),
			coalesce(NEW.cd_doenca_superior, OLD.cd_doenca_superior)) = 'S') then
		BEGIN
		if (TG_OP = 'INSERT') or
			(TG_OP = 'UPDATE' AND OLD.dt_liberacao is null and NEW.dt_liberacao is not null) then
			BEGIN
			if (NEW.cd_doenca_superior is null) then
				reg_integracao_p.ie_operacao	:=	'I';
				reg_integracao_p.ie_status		:=	'P';
				reg_integracao_p.nr_atendimento	:=	NEW.nr_atendimento;				
				nr_sequencia_w := NEW.nr_atendimento||'¬'||NEW.nr_seq_interno||'¬'||NEW.cd_doenca;
								
				reg_integracao_p := gerar_int_padrao.gravar_integracao('82', nr_sequencia_w, NEW.nm_usuario, reg_integracao_p);
				/* OS 1967752, removido tratamento para agendar msg dos diagnósticos filhos, já que serão enviados juntamente na msg do pai.
				agendar_envio_diag_filho(reg_integracao_p.ie_operacao, :new.nr_atendimento, :new.dt_diagnostico, :new.cd_doenca, :new.nm_usuario);
				*/

			end if;
			end;
		/* verifica se o diagnostico esta sendo inativado, caso sim serÁ deletado no ish, pendente verificar se jÁ foi faturado!!!!*/


		elsif (TG_OP = 'UPDATE') then
			if (NEW.dt_inativacao is not null) and (OLD.dt_inativacao is null) and (NEW.ie_situacao = 'I') then			
				BEGIN
				
				reg_integracao_p.ie_operacao	:= 'E';
				reg_integracao_p.ie_status	:= 'P';
				
				--Quando for para excluir, deve agendar primeiro a exclusão dos filhos e após a do dig pai.

				/* OS 1967752, removido tratamento para agendar msg dos diagnósticos filhos, já que serão enviados juntamente na msg do pai.
				if	(:new.cd_doenca_superior is null) then
					agendar_envio_diag_filho(reg_integracao_p.ie_operacao, :new.nr_atendimento, :new.dt_diagnostico, :new.cd_doenca, :new.nm_usuario);
				end if;*/

								
				reg_integracao_p.nr_atendimento	:=	NEW.nr_atendimento;
				
				nr_sequencia_w := OLD.nr_atendimento||'¬'||NEW.nr_seq_interno||'¬'||OLD.cd_doenca;
				if (NEW.cd_doenca_superior is null) then
					reg_integracao_p := gerar_int_padrao.gravar_integracao('82', nr_sequencia_w, NEW.nm_usuario, reg_integracao_p);
				end if;
				end;
			elsif (NEW.dt_inativacao is null) and (NEW.cd_doenca_superior is null) then
				BEGIN
				reg_integracao_p.ie_operacao	:=	'A';
				reg_integracao_p.ie_status		:=	'P';
				reg_integracao_p.nr_atendimento	:=	NEW.nr_atendimento;
				
				nr_sequencia_w := NEW.nr_atendimento||'¬'||NEW.nr_seq_interno||'¬'||NEW.cd_doenca;
				
				reg_integracao_p := gerar_int_padrao.gravar_integracao('82', nr_sequencia_w, NEW.nm_usuario, reg_integracao_p);
				end;
			end if;
		/* nÃo deverÁ cair nesta condiÇÃo pois o diagnÓstico nao pode ser deletado do tasy */
	
		elsif (TG_OP = 'DELETE') then
			BEGIN
			reg_integracao_p.ie_operacao	:=	'E';
			reg_integracao_p.ie_status		:=	'P';
			reg_integracao_p.nr_atendimento	:=	OLD.nr_atendimento;
			
			nr_sequencia_w := OLD.nr_atendimento||'¬'||OLD.nr_seq_interno||'¬'||OLD.cd_doenca;
			
			reg_integracao_p := gerar_int_padrao.gravar_integracao('82', nr_sequencia_w, OLD.nm_usuario, reg_integracao_p);
			end;
		end if;
		end;
	end if;
end if;

IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_diagnostico_doenca_ish_atual() FROM PUBLIC;

CREATE TRIGGER diagnostico_doenca_ish_atual
	AFTER INSERT OR UPDATE OR DELETE ON diagnostico_doenca FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_diagnostico_doenca_ish_atual();

