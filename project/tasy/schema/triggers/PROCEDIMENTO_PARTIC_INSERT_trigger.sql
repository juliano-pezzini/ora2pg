-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS procedimento_partic_insert ON procedimento_participante CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_procedimento_partic_insert() RETURNS trigger AS $BODY$
DECLARE
 
ie_bloqueia_medico_estab_w		varchar(10);
qt_registro_w				bigint;
cd_estabelecimento_w			integer;
nr_atendimento_w			bigint;
ie_tipo_atendimento_w			smallint;
ie_bloqueia_medico_conv_w		varchar(10);
ie_regra_w				varchar(1);
cd_convenio_w          	integer;
ds_convenio_w				varchar(255);
cd_empresa_w				smallint;
BEGIN 
 
NEW.ds_stack	:= substr(dbms_utility.format_call_stack,1,2000);
 
select	max(nr_atendimento), 
	max(cd_convenio) 
into STRICT	nr_atendimento_w, 
	cd_convenio_w 
from	procedimento_paciente 
where	nr_sequencia	= NEW.nr_sequencia;
 
select	max(cd_estabelecimento), 
	max(ie_tipo_atendimento) 
into STRICT	cd_estabelecimento_w, 
	ie_tipo_atendimento_w 
from	atendimento_paciente 
where	nr_atendimento	= nr_atendimento_w;
 
ie_bloqueia_medico_estab_w	:= coalesce(obter_valor_param_usuario(67,285,Obter_Perfil_ativo,NEW.nm_usuario,0),'N');
if (ie_bloqueia_medico_estab_w	= 'S') and (NEW.cd_pessoa_fisica	is not null) then 
	 
	select	coalesce(max(cd_empresa),0) 
	into STRICT	cd_empresa_w 
	from	estabelecimento 
	where	cd_estabelecimento = cd_estabelecimento_w;
	 
	select	count(*) 
	into STRICT	qt_registro_w 
	from	medico_estabelecimento 
	where	cd_pessoa_fisica				= NEW.cd_pessoa_fisica 
	and	coalesce(cd_estabelecimento, cd_estabelecimento_w)	= cd_estabelecimento_w 
	and	coalesce(cd_empresa, cd_empresa_w)			= cd_empresa_w;
	 
	if (qt_registro_w		= 0) then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(241554);
	end if;
end if;
 
ie_bloqueia_medico_conv_w	:= coalesce(obter_valor_param_usuario(1123,75,Obter_Perfil_ativo,NEW.nm_usuario,0),'N');
if (ie_bloqueia_medico_conv_w = 'S') and (NEW.cd_pessoa_fisica is not null) and (cd_convenio_w is not null) then 
	select	coalesce(max(Obter_convenio_regra_atend(NEW.cd_pessoa_fisica,cd_convenio_w,ie_tipo_atendimento_w,cd_estabelecimento_w,'P',null,null)), 'S') 
	into STRICT	ie_regra_w 
	;
	if (ie_regra_w = 'N') then 
		select	max(substr(obter_nome_convenio(cd_convenio_w),1,40)) 
		into STRICT	ds_convenio_w 
		;
		CALL wheb_mensagem_pck.exibir_mensagem_abort(241556, 'DS_CONVENIO='||ds_convenio_w);
	end if;
end if;
 
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_procedimento_partic_insert() FROM PUBLIC;

CREATE TRIGGER procedimento_partic_insert
	BEFORE INSERT ON procedimento_participante FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_procedimento_partic_insert();

