-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS auditoria_propaci_update ON auditoria_propaci CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_auditoria_propaci_update() RETURNS trigger AS $BODY$
declare

nr_seq_pend_w			bigint;
nr_seq_estagio_pend_w	bigint;
cd_setor_resp_glosa_w	integer:=0;

vl_item_w		double precision;
qt_ajuste_w		bigint;
qt_original_w		bigint;
vl_unitario_w		double precision;
qt_dif_w		bigint;
tx_dif_w		double precision;

nr_interno_conta_w	bigint;
nr_atendimento_w	bigint;
nr_conta_audit_w	bigint;
ds_call_stack_w		varchar(2000);
dt_periodo_inicial_w	timestamp;
dt_periodo_final_w	timestamp;
dt_conta_w		timestamp;
dt_procedimento_w	timestamp;
qt_item_periodo_w	bigint;
BEGIN
  BEGIN

select 	max(nr_sequencia)
into STRICT	nr_seq_pend_w
from 	cta_pendencia
where 	nr_seq_auditoria = NEW.nr_seq_auditoria;

if (coalesce(nr_seq_pend_w,0) > 0) then

	select 	max(nr_seq_estagio)
	into STRICT	nr_seq_estagio_pend_w
	from  	cta_pendencia
	where 	nr_sequencia = nr_seq_pend_w;

	if (coalesce(nr_seq_estagio_pend_w,0) > 0) then

		NEW.nr_seq_estagio_pend:= nr_seq_estagio_pend_w;

	end if;
end if;

if (coalesce(OLD.nr_seq_motivo,0) <> coalesce(NEW.nr_seq_motivo,0)) then

	insert into audit_propaci_motivo(
			nr_sequencia,
			nr_seq_audit_proc,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_motivo,
			nr_seq_motivo_ant)
		values (nextval('audit_propaci_motivo_seq'),
			NEW.nr_sequencia,
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			NEW.nr_seq_motivo, -- Novo
			OLD.nr_seq_motivo); -- Antigo
end if;

if (NEW.nr_seq_motivo is not null) then

	BEGIN
	select	coalesce(max(cd_setor_atendimento),0)
	into STRICT	cd_setor_resp_glosa_w
	from 	regra_setor_resp_glosa
	where	nr_seq_motivo = NEW.nr_seq_motivo
	and		ie_situacao = 'A';
	exception
	when others then
		cd_setor_resp_glosa_w := 0;
	end;

	if (cd_setor_resp_glosa_w > 0) then
		NEW.cd_setor_resp_glosa	 := cd_setor_resp_glosa_w;
	end if;

end if;

-- OS 377968
BEGIN
select	coalesce(a.vl_procedimento,0),
	dividir(coalesce(a.vl_procedimento,0), NEW.qt_original)
into STRICT	vl_item_w,
	vl_unitario_w
from	procedimento_paciente a
where	a.nr_sequencia		= NEW.nr_seq_propaci
and	a.cd_motivo_exc_conta is null
and	coalesce(a.nr_seq_proc_pacote,0)	<> a.nr_sequencia;
exception
	when others then
	NEW.vl_total_ajuste:= 0;
end;

if (NEW.ie_tipo_auditoria = 'X') then
	NEW.vl_total_ajuste:= 0;
else
	if (NEW.ie_tipo_auditoria = 'V') or (NEW.vl_procedimento_ajuste is not null) then

		NEW.vl_total_ajuste:= NEW.vl_procedimento_ajuste;

		if (NEW.qt_ajuste is not null) then

			qt_dif_w:= NEW.qt_ajuste - NEW.qt_original;
			NEW.vl_total_ajuste:=   NEW.vl_total_ajuste + (dividir(coalesce(NEW.vl_total_ajuste,0), NEW.qt_original) * qt_dif_w);

		elsif (NEW.tx_proc_ajuste is not null) and (NEW.tx_proc_ajuste <> OLD.tx_proc_ajuste) then

			tx_dif_w:= NEW.tx_proc_ajuste - NEW.tx_proc_original;
			NEW.vl_total_ajuste:= NEW.vl_total_ajuste + (NEW.vl_total_ajuste * tx_dif_w / 100);

		end if;

	else
		if (NEW.qt_ajuste is not null) and (coalesce(NEW.qt_ajuste,-1) <> coalesce(OLD.qt_ajuste,-1)) then

			NEW.vl_total_ajuste:= vl_item_w;
			qt_dif_w:= NEW.qt_ajuste - NEW.qt_original;
			NEW.vl_total_ajuste:=   NEW.vl_total_ajuste + (vl_unitario_w * qt_dif_w);

		elsif (NEW.tx_proc_ajuste is not null) and (coalesce(NEW.tx_proc_ajuste,-1) <> coalesce(OLD.tx_proc_ajuste,-1)) then

			NEW.vl_total_ajuste:= vl_item_w;
			tx_dif_w:= NEW.tx_proc_ajuste - NEW.tx_proc_original;
			NEW.vl_total_ajuste:= NEW.vl_total_ajuste + (vl_item_w * tx_dif_w / 100);

		end if;

	end if;
end if;

select	max(nr_interno_conta),
	max(nr_atendimento),
	max(dt_conta),
	max(dt_procedimento)
into STRICT	nr_interno_conta_w,
	nr_atendimento_w,
	dt_conta_w,
	dt_procedimento_w
from	procedimento_paciente
where	nr_sequencia = NEW.nr_seq_propaci;

select	max(nr_interno_conta),
	max(dt_periodo_inicial),
	max(dt_periodo_final)
into STRICT	nr_conta_audit_w,
	dt_periodo_inicial_w,
	dt_periodo_final_w
from	auditoria_conta_paciente
where	nr_sequencia = NEW.nr_seq_auditoria;

qt_item_periodo_w	:= 1;
BEGIN
select	coalesce(max(1),0)
into STRICT	qt_item_periodo_w

where	((dt_conta_w between dt_periodo_inicial_w and dt_periodo_final_w) or (dt_procedimento_w between dt_periodo_inicial_w and dt_periodo_final_w));
exception
	when others then
	qt_item_periodo_w	:= 1;
end;

if	((coalesce(nr_interno_conta_w,0) <> 0) and (coalesce(nr_conta_audit_w,0) <> 0) and (coalesce(nr_interno_conta_w,0) <> coalesce(nr_conta_audit_w,0))) or (qt_item_periodo_w = 0) then

	ds_call_stack_w	:= substr(dbms_utility.format_call_stack,1,1800);

	insert into w_log_atend_audit(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_audit_item,
		nr_seq_auditoria,
		ds_call_stack,
		ie_tipo_item,
		nr_seq_item,
		dt_periodo_inicial,
		dt_periodo_final,
		ds_observacao
	) values (
		nextval('w_log_atend_audit_seq'),
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		NEW.nr_sequencia,
		NEW.nr_seq_auditoria,
		ds_call_stack_w,
		'P',
		NEW.nr_seq_propaci,
		dt_periodo_inicial_w,
		dt_periodo_final_w,
		CASE WHEN qt_item_periodo_w=0 THEN  substr(wheb_mensagem_pck.get_texto(309510),1,255)  ELSE substr(wheb_mensagem_pck.get_texto(309511),1,255) END
	);

end if;

  END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_auditoria_propaci_update() FROM PUBLIC;

CREATE TRIGGER auditoria_propaci_update
	BEFORE UPDATE ON auditoria_propaci FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_auditoria_propaci_update();

