-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS ehr_registro_atual ON ehr_registro CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_ehr_registro_atual() RETURNS trigger AS $BODY$
declare


nr_seq_triagem_w        ehr_registro.nr_seq_triagem%type;
dt_fim_triagem_w        triagem_pronto_atend.dt_fim_triagem%type;
dt_inicio_triagem_w     triagem_pronto_atend.dt_inicio_triagem%type;
BEGIN
  BEGIN

if (NEW.dt_registro > LOCALTIMESTAMP) and (NEW.nr_atendimento is not null) then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort('A data do template nao pode ser maior que a data atual');
end if;

if (NEW.CD_PACIENTE is not null and NEW.NR_ATENDIMENTO is null and NEW.NR_SEQ_TRIAGEM is null) then

select max(nr_sequencia)
into STRICT nr_seq_triagem_w
from triagem_pronto_atend
where cd_pessoa_fisica = NEW.cd_paciente;

select max(dt_fim_triagem), max(dt_inicio_triagem)
into STRICT dt_fim_triagem_w, dt_inicio_triagem_w
from triagem_pronto_atend
where nr_sequencia = nr_seq_triagem_w;

if (dt_fim_triagem_w is null and dt_inicio_triagem_w is not null and nr_seq_triagem_w is not null) then
NEW.nr_seq_triagem := nr_seq_triagem_w;
end if;

end if;

if (NEW.ie_tipo_evolucao	is null) then
	BEGIN
	select	ie_tipo_evolucao
	into STRICT	NEW.ie_tipo_evolucao
	from	usuario
	where	nm_usuario	= NEW.nm_usuario;
	exception
	when others then

	null;
	end;
end if;

if (wheb_usuario_pck.get_ie_executar_trigger <> 'N') then

if (NEW.cd_setor_atendimento is null) and (NEW.nr_atendimento is not null) then
	NEW.cd_setor_atendimento := obter_setor_atendimento(NEW.nr_atendimento);
end if;

if (coalesce(OLD.DT_REGISTRO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_REGISTRO) and (NEW.DT_REGISTRO is not null) then
	NEW.ds_utc		:= obter_data_utc(NEW.DT_REGISTRO, 'HV');	
end if;

if (coalesce(OLD.DT_LIBERACAO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_LIBERACAO) and (NEW.DT_LIBERACAO is not null) then
	NEW.ds_utc_atualizacao	:= obter_data_utc(NEW.DT_LIBERACAO,'HV');
end if;

end if;
nr_seq_triagem_w := 0;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_ehr_registro_atual() FROM PUBLIC;

CREATE TRIGGER ehr_registro_atual
	BEFORE INSERT OR UPDATE ON ehr_registro FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_ehr_registro_atual();

