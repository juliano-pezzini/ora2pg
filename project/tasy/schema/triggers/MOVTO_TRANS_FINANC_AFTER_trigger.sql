-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS movto_trans_financ_after ON movto_trans_financ CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_movto_trans_financ_after() RETURNS trigger AS $BODY$
declare

nm_tabela_w		ctb_documento.nm_tabela%type;
vl_movimento_w		ctb_documento.vl_movimento%type;
nr_seq_tab_compl_w	ctb_documento.nr_seq_doc_compl%type;
nr_seq_info_w		ctb_documento.nr_seq_info%type;
ie_contab_cb_w		transacao_financeira.ie_contab_cb%type;
ie_banco_w		transacao_financeira.ie_banco%type;
nr_documento_w		ctb_documento.nr_documento%type;
nr_doc_analitico_w	ctb_documento.nr_doc_analitico%type;


c01 CURSOR FOR
	SELECT	a.nm_atributo,
		a.cd_tipo_lote_contab
	from	atributo_contab a
	where 	a.cd_tipo_lote_contab = 18
	and	NEW.nr_seq_banco is not null
	and 	a.nm_atributo in (	'VL_TRANSACAO', 'VL_TRANSACAO_ESTRANG', 'VL_MOEDA_COMPLEMENTAR', 'VL_CHEQUE_DEPOSITO');

c01_w		c01%rowtype;

c02 CURSOR FOR
	SELECT	a.vl_cheque * CASE WHEN NEW.ie_estorno='E' THEN  -1  ELSE 1 END  vl_movimento,
		a.nr_seq_cheque
	from	cheque_cr a,
		deposito_cheque f
	where	f.nr_seq_cheque		= a.nr_seq_cheque
	and 	f.nr_seq_deposito	= NEW.nr_seq_deposito
	and 	a.vl_cheque <> 0;

c02_w		c02%rowtype;

c03 CURSOR FOR
	SELECT 	g.vl_cheque,
		g.nr_seq_cheque
	from	cheque_cr g,
		deposito_cheque f
	where	f.nr_seq_cheque		= g.nr_seq_cheque
	and	f.nr_seq_deposito	= NEW.nr_seq_deposito;

c03_w		c03%rowtype;

c04 CURSOR FOR
	SELECT	a.vl_especie * CASE WHEN NEW.ie_estorno='E' THEN  -1  ELSE 1 END  vl_movimento,
			a.nr_sequencia
	from	deposito a
	where	a.nr_sequencia = NEW.nr_seq_deposito
	and	coalesce(a.vl_especie,0)	> 0;

c04_w		c04%rowtype;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
open c01;
loop
fetch c01 into	
	c01_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	BEGIN
	
	if (c01_w.cd_tipo_lote_contab = 18) then
		BEGIN
		nm_tabela_w		:= 'MOVTO_TRANS_FINANC';
		nr_seq_info_w		:= 5;
		nr_seq_tab_compl_w	:= null;
		nr_documento_w		:= null;
		nr_doc_analitico_w	:= null;
		
		if (NEW.nr_seq_titulo_pagar is not null) then
			BEGIN
			nr_documento_w:= NEW.nr_seq_titulo_pagar;
			nr_seq_tab_compl_w := NEW.nr_sequencia;
			end;
		elsif (NEW.nr_seq_titulo_receber is not null) then
			BEGIN
			nr_documento_w:= NEW.nr_seq_titulo_receber;
			nr_seq_tab_compl_w := NEW.nr_sequencia;
			end;
		end if;
		
		if (nr_documento_w is null) then
			BEGIN
			nr_documento_w:= NEW.nr_sequencia;
			nr_seq_tab_compl_w := null;
			end;
		end if;
		
		BEGIN
		
		select	coalesce(ie_contab_cb, 'N'),
			ie_banco
		into STRICT	ie_contab_cb_w,
			ie_banco_w
		from	transacao_financeira
		where	nr_sequencia = NEW.nr_seq_trans_financ;
		
		exception
		when others then
			ie_contab_cb_w := 'N';
		end;
		
		if (ie_contab_cb_w = 'S') then
			BEGIN
			
			nm_tabela_w:= 	case	c01_w.nm_atributo
					when	'VL_CHEQUE_DEPOSITO' then 'CHEQUE_CR'
					else
						'MOVTO_TRANS_FINANC'
					end;
			nr_seq_info_w:= 5;
			
			
			if (c01_w.nm_atributo = 'VL_CHEQUE_DEPOSITO') then
				BEGIN
				vl_movimento_w := null;
				if (coalesce(ie_banco_w, 'X') = 'D') or (coalesce(ie_banco_w, 'X') = 'C') or (coalesce(ie_banco_w, 'X') = 'T') then
					BEGIN
					
					BEGIN
					
					vl_movimento_w:= null;
					
					open c03;
					loop
					fetch c03 into	
						c03_w;
					EXIT WHEN NOT FOUND; /* apply on c03 */
						BEGIN
						
						if (coalesce(c03_w.vl_cheque, 0) <> 0) then
							BEGIN
							CALL ctb_concil_financeira_pck.ctb_gravar_documento(	NEW.cd_estabelecimento,
														trunc(NEW.dt_transacao),
														c01_w.cd_tipo_lote_contab,
														NEW.nr_seq_trans_financ,
														nr_seq_info_w,
														nr_documento_w,
														c03_w.nr_seq_cheque,
														null,
														c03_w.vl_cheque,
														nm_tabela_w,
														c01_w.nm_atributo,
														NEW.nm_usuario,
                                                        'P',
                                                        null,
                                                        NEW.nr_seq_proj_rec);
							end;
						end if;
						
						end;
					end loop;
					close c03;
					
					exception
					when others then
						vl_movimento_w := null;
					end;
					
					end;
				end if;
				
				end;
			else
				BEGIN
					vl_movimento_w := 	case	c01_w.nm_atributo
								when	'VL_TRANSACAO' then NEW.vl_transacao
								when	'VL_TRANSACAO_ESTRANG' then NEW.vl_transacao_estrang
								when	'VL_MOEDA_COMPLEMENTAR' then NEW.vl_complemento
								else
									null
								end;
				end;
			end if;
						
			end;
		end if;
		
		end;
	end if;
	
	if (coalesce(vl_movimento_w, 0) <> 0) then
		BEGIN
		
		CALL ctb_concil_financeira_pck.ctb_gravar_documento(	coalesce(NEW.cd_estabelecimento,wheb_usuario_pck.get_cd_estabelecimento),
									trunc(NEW.dt_transacao),
									c01_w.cd_tipo_lote_contab,
									NEW.nr_seq_trans_financ,
									nr_seq_info_w,
									nr_documento_w,
									nr_seq_tab_compl_w,
									nr_doc_analitico_w,
									vl_movimento_w,
									nm_tabela_w,
									c01_w.nm_atributo,
									NEW.nm_usuario,
                                    'P',
                                    null,
                                    NEW.nr_seq_proj_rec);
		end;
	end if;
	

	
	end;
end loop;
close c01;
end if;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_movto_trans_financ_after() FROM PUBLIC;

CREATE TRIGGER movto_trans_financ_after
	AFTER INSERT ON movto_trans_financ FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_movto_trans_financ_after();

