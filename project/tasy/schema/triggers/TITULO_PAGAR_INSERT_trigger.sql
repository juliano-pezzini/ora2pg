-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS titulo_pagar_insert ON titulo_pagar CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_titulo_pagar_insert() RETURNS trigger AS $BODY$
declare

ie_titulo_nf_w		varchar(1);
ie_ajusta_emissao_w	varchar(1);
dt_emissao_w		timestamp;
qt_dias_venc_w		varchar(255);
ie_tit_lote_repasse_w	varchar(255);
ie_consistir_cpf_w	varchar(1);
ie_titulo_zerado_w	varchar(1);
cd_empresa_w		bigint;
nr_lote_contabil_w	bigint;
nr_seq_regra_w		bigint;
ie_liberar_w		varchar(1);
ds_resultado_w		varchar(1);
ie_brasileiro_w		varchar(10);
qt_dias_venc_uteis_w	varchar(255);
dt_mes_competencia_w	timestamp;
dt_geracao_titulos_w 	timestamp;
ie_data_lote_prod_med_w	pls_parametro_contabil.ie_data_lote_prod_med%type;
nr_fatura_w		ptu_fatura.nr_sequencia%type;
ds_call_stack_w		varchar(2000);
ie_contab_trib_nota_w 	varchar(1);
ie_origem_tit_w		titulo_pagar.ie_origem_titulo%type;

pragma autonomous_transaction;
BEGIN
  BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger	= 'S')  then

if (obter_bloq_canc_proj_rec(NEW.nr_seq_proj_rec) > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1144309);  -- Registro associado a um projeto bloqueado ou cancelado. 
end if;

ie_titulo_nf_w := obter_param_usuario(5511, 4, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_titulo_nf_w);
ie_ajusta_emissao_w := obter_param_usuario(851, 258, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_ajusta_emissao_w);

select	coalesce(max(ie_consistir_cpf),'N'),
        coalesce(max(ie_titulo_zerado),'S'),
        coalesce(max(ie_contab_trib_nota),'N')
into STRICT	ie_consistir_cpf_w,
        ie_titulo_zerado_w,
        ie_contab_trib_nota_w
from 	parametros_contas_pagar
where	cd_estabelecimento	= NEW.cd_estabelecimento;

if (coalesce(ie_titulo_nf_w,'N') = 'S') then
	select	coalesce(max(a.dt_entrada_saida),NEW.dt_emissao)
	into STRICT	dt_emissao_w
	from	nota_fiscal a
	where	a.nr_sequencia	= NEW.nr_seq_nota_fiscal;
else
	dt_emissao_w := NEW.dt_emissao;
end if;

if (coalesce(ie_ajusta_emissao_w,'N') = 'S') and (trunc(NEW.dt_vencimento_atual,'dd') < trunc(LOCALTIMESTAMP,'dd')) and (trunc(NEW.dt_emissao,'dd') > trunc(NEW.dt_vencimento_atual,'dd')) then
	NEW.dt_emissao := NEW.dt_vencimento_atual;
end if;

if (fin_obter_se_mes_aberto(NEW.cd_estabelecimento, dt_emissao_w,'CP',NEW.ie_tipo_titulo,null,null,null) = 'N') then
	/* O mes/dia financeiro de emissao do titulo ja esta fechado! Nao e possivel incluir novos titulos neste mes/dia.
	Dt emissao: dt_emissao_w */

	CALL wheb_mensagem_pck.exibir_mensagem_abort(191637,	'DT_EMISSAO_W=' || to_char(dt_emissao_w, 'dd/mm/yyyy'));
end if;

select  max(ie_origem_titulo)
into STRICT    ie_origem_tit_w
from    titulo_pagar
where   nr_titulo = NEW.nr_titulo_original;

if ((ie_origem_tit_w in (2,4,7,14,21,10,23,24,26)) or (ie_origem_tit_w = 1 AND ie_contab_trib_nota_w = 'S')) then
    /* Projeto Davita  - Nao deixa gerar movimento contabil apos fechamento  da data */


    CALL philips_contabil_pck.valida_se_dia_fechado(OBTER_EMPRESA_ESTAB(NEW.cd_estabelecimento),coalesce(NEW.dt_contabil,dt_emissao_w));
end if;

if (fin_obter_se_mes_aberto(NEW.cd_estabelecimento, coalesce(NEW.dt_contabil,dt_emissao_w),'CP',NEW.ie_tipo_titulo,null,null,null) = 'N') then
	/* O mes/dia financeiro da data contabil do titulo ja esta fechado! Nao e possivel incluir novos titulos neste mes/dia. */


	CALL wheb_mensagem_pck.exibir_mensagem_abort(191638);
end if;

if (NEW.vl_saldo_titulo < 0) or (NEW.vl_titulo < 0) then
	/* O valor do titulo nao pode ser negativo! */


	CALL wheb_mensagem_pck.exibir_mensagem_abort(191639);
end if;

if	(NEW.cd_cgc is null AND NEW.cd_pessoa_fisica is null)
	or
	(NEW.cd_cgc is not null AND NEW.cd_pessoa_fisica is not null) then
	/* O titulo deve ser de uma pessoa fisica ou juridica! */


	CALL wheb_mensagem_pck.exibir_mensagem_abort(191640);
end if;

if (trunc(NEW.dt_emissao,'dd') > trunc(NEW.dt_vencimento_atual,'dd')) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(471962);
end if;

qt_dias_venc_w := obter_param_usuario(851, 120, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, qt_dias_venc_w);

if (coalesce((qt_dias_venc_w)::numeric ,0) > 0) and
	((trunc(NEW.dt_vencimento_atual) - trunc(NEW.dt_emissao)) < (qt_dias_venc_w)::numeric ) then
	/* Nao foi possivel salvar o titulo! O vencimento deve ser qt_dias_venc_w dias maior do que a emissao.
	Parametro [120] da funcao Titulos a Pagar */

	CALL wheb_mensagem_pck.exibir_mensagem_abort(191641,	'QT_DIAS_VENC_W=' || qt_dias_venc_w);
end if;

qt_dias_venc_uteis_w := obter_param_usuario(851, 249, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, qt_dias_venc_uteis_w);	

if (coalesce((qt_dias_venc_uteis_w)::numeric ,0) > 0) and (trunc(NEW.dt_vencimento_atual,'dd') <=  trunc(obter_dia_util_periodo(NEW.cd_estabelecimento, LOCALTIMESTAMP, (qt_dias_venc_uteis_w)::numeric ),'dd')) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(324340,	'QT_DIAS_VENC_UTEIS_W=' || qt_dias_venc_uteis_w);
end if;

if (ie_consistir_cpf_w = 'S') and
	(NEW.cd_pessoa_fisica is not null AND NEW.cd_cgc is null) and (Obter_Cpf_Pessoa_Fisica(NEW.cd_pessoa_fisica) is null) then
	/* Pessoa fisica sem CPF cadastrado! */


	ie_brasileiro_w := obter_se_brasileiro(NEW.cd_pessoa_fisica);
	if ie_brasileiro_w = 'S' then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(191642);
	end if;
end if;

if (ie_titulo_zerado_w = 'N') and (NEW.vl_titulo = 0) then
	/* O valor do titulo nao pode ser zero! Verifique os parametros do contas a pagar. */


	CALL wheb_mensagem_pck.exibir_mensagem_abort(191643);
end if;

ie_tit_lote_repasse_w := obter_param_usuario(89, 88, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_tit_lote_repasse_w);

if	((coalesce(ie_tit_lote_repasse_w, 'S') = 'N') or (coalesce(ie_tit_lote_repasse_w, 'S') = 'M')) and (NEW.nr_repasse_terceiro is not null) then

	select	max(cd_empresa)
	into STRICT	cd_empresa_w
	from	estabelecimento
	where	cd_estabelecimento = NEW.cd_estabelecimento;

	select	coalesce(max(a.nr_lote_contabil), 0)
	into STRICT	nr_lote_contabil_w
	from	lote_contabil a
	where	a.cd_tipo_lote_contabil				= 16
	and	obter_empresa_estab(a.cd_estabelecimento) 	= cd_empresa_w
	and	CASE WHEN ie_tit_lote_repasse_w='N' THEN trunc(a.dt_referencia,'dd')  ELSE trunc(a.dt_referencia,'mm') END  = CASE WHEN ie_tit_lote_repasse_w='N' THEN trunc(coalesce(NEW.dt_contabil, NEW.dt_emissao),'dd')  ELSE trunc(coalesce(NEW.dt_contabil, NEW.dt_emissao),'mm') END
	and	exists (	SELECT	1
				from	movimento_contabil z
				where	z.nr_lote_contabil	= a.nr_lote_contabil);

	if (nr_lote_contabil_w > 0) then
		if (coalesce(ie_tit_lote_repasse_w, 'S') = 'N') then
		/* Ja existe o lote contabil nr_lote_contabil_w para a data contabil/emissao deste titulo (dt_contabil_w)! Parametro [88] */


		CALL wheb_mensagem_pck.exibir_mensagem_abort(191644,	'NR_LOTE_CONTABIL_W=' || to_char(nr_lote_contabil_w) ||
								';DT_CONTABIL_W=' || to_char(coalesce(NEW.dt_contabil, NEW.dt_emissao), 'dd/mm/yyyy'));
		elsif (coalesce(ie_tit_lote_repasse_w, 'S') = 'M') then						
		/* Ja existe o lote contabil nr_lote_contabil_w para o mes contabil/emissao deste titulo (dt_contabil_w)! Parametro [88] */


		CALL wheb_mensagem_pck.exibir_mensagem_abort(275220,	'NR_LOTE_CONTABIL_W=' || to_char(nr_lote_contabil_w) ||
								';DT_CONTABIL_W=' || to_char(coalesce(NEW.dt_contabil, NEW.dt_emissao), 'dd/mm/yyyy'));
		end if;							
	end if;
end if;

SELECT * FROM obter_regra_lib_tit_pagar(	NEW.nr_seq_nota_fiscal, NEW.vl_titulo, NEW.cd_cgc, NEW.cd_estabelecimento, NEW.nm_usuario, nr_seq_regra_w, ie_liberar_w, ds_resultado_w, dt_emissao_w, NEW.nr_seq_proj_rec, NEW.ie_tipo_titulo, NEW.nr_seq_classe, NEW.ie_origem_titulo) INTO STRICT nr_seq_regra_w, ie_liberar_w, ds_resultado_w;

/* ahoffelder - OS 311355 - 19/04/2011 - liberar o titulo automaticamente */


if (ds_resultado_w	= 'S') and (ie_liberar_w	= 'S') then
	NEW.dt_liberacao	:= LOCALTIMESTAMP;
	NEW.nm_usuario_lib	:= NEW.nm_usuario;
end if;

NEW.nr_lote_contabil	:= coalesce(NEW.nr_lote_contabil,0);
NEW.DT_INCLUSAO	:= NEW.dt_atualizacao;
NEW.NM_USUARIO_ORIG	:= NEW.nm_usuario;

/*fcastro - os 938490 - 25/09/2015 - carrregar dt_contabil do titulo a pagar para origem de titulo ops - pagamento de producao medica e ops - intercambio*/



/*ops - pagamento de producao medica*/


if (NEW.ie_origem_titulo = '20' and NEW.nr_seq_pls_pag_prest <> 0)then
	select 	max(dt_mes_competencia),
		max(dt_geracao_titulos)
	into STRICT 	dt_mes_competencia_w,
		dt_geracao_titulos_w
	from 	pls_lote_pagamento lp,
		pls_pagamento_prestador pg
	where 	NEW.nr_seq_pls_pag_prest = pg.nr_sequencia
	and 	pg.nr_seq_lote = lp.nr_sequencia;
	
	select 	max(ie_data_lote_prod_med)
	into STRICT 	ie_data_lote_prod_med_w
	from 	pls_parametro_contabil
    	where 	cd_estabelecimento = NEW.cd_estabelecimento;
	
	if (ie_data_lote_prod_med_w = 'C')then
		NEW.dt_contabil := dt_mes_competencia_w;
	else
		NEW.dt_contabil := coalesce(dt_geracao_titulos_w,LOCALTIMESTAMP);
	end if;
		
elsif (NEW.ie_origem_titulo = '16') then /*ops - intercambio*/

	
	select	max(nr_sequencia),
		max(dt_mes_competencia)
	into STRICT	nr_fatura_w,
		dt_mes_competencia_w
	from	ptu_fatura
	where	nr_titulo = NEW.nr_titulo;
	
	if (nr_fatura_w <> 0) then
		NEW.dt_contabil :=	dt_mes_competencia_w;
	end if;
	
end if;

if (NEW.vl_titulo_atual is null) then
	NEW.vl_titulo_atual := NEW.vl_titulo;
end if;

NEW.DS_STACK := substr('CallStack Insert: ' || substr(dbms_utility.format_call_stack,1,3980),1,4000);

/*OS 1458006 - Gravar log de alteracao para o campo NR_SEQ_TRANS_FIN_BAIXA.
Log para auxiliar o Suporte. Qualquer excessao aqui dentro nao disparar.*/

BEGIN
	if (NEW.nr_seq_trans_fin_baixa is not null) then

		ds_call_stack_w := substr('CallStack Insert: ' || substr(dbms_utility.format_call_stack,1,1980),1,2000);

		if (ds_call_stack_w is not null) then
			insert into log_tasy( cd_log,
								   ds_log,
								   nm_usuario,	
								   dt_atualizacao )
						values ( 75395,
								   ds_call_stack_w,
								   NEW.nm_usuario,
								   LOCALTIMESTAMP );
			commit;
		end if;				

	end if;
exception when others then
	null;
end;

end if;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_titulo_pagar_insert() FROM PUBLIC;

CREATE TRIGGER titulo_pagar_insert
	BEFORE INSERT ON titulo_pagar FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_titulo_pagar_insert();

