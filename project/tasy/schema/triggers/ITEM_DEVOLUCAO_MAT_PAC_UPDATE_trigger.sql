-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS item_devolucao_mat_pac_update ON item_devolucao_material_pac CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_item_devolucao_mat_pac_update() RETURNS trigger AS $BODY$
declare

ie_quantidade_maior_w	varchar(1);
ds_log_w				varchar(2000);
ie_situacao_w           local_estoque.ie_situacao%type;

BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
if (TG_OP = 'INSERT') then
	ds_log_w := substr(ds_log_w ||';NR_DEVOLUCAO=' || NEW.nr_devolucao || 'CD_MATERIAL='|| NEW.cd_material || ';call stack='|| substr(dbms_utility.format_call_stack,1,1800),1,2000);
	CALL gravar_log_tasy(5136, ds_log_w, NEW.nr_sequencia);

    select  coalesce(max(ie_situacao), 'A')
    into STRICT    ie_situacao_w
    from    local_estoque
    where   cd_local_estoque = NEW.cd_local_estoque;

    if (ie_situacao_w = 'I') then
        CALL wheb_mensagem_pck.exibir_mensagem_abort(196048);
    end if;

else

	ie_quantidade_maior_w := obter_param_usuario(42, 9, obter_perfil_ativo, NEW.nm_usuario, 0, ie_quantidade_maior_w);

	if (ie_quantidade_maior_w = 'N') and (OLD.qt_material > 0) and (NEW.qt_material > 0) then
		if (NEW.qt_material > OLD.qt_material) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(163388);
		end if;
	end if;

	if (coalesce(NEW.qt_material, 0) <> coalesce(OLD.qt_material, 0)) then
		ds_log_w := ds_log_w || ' qt_material old/new:' || OLD.qt_material || '-' || NEW.qt_material;
	end if;
	if (coalesce(NEW.cd_local_estoque, 0) <> coalesce(OLD.cd_local_estoque, 0)) then
		ds_log_w := ds_log_w || ' cd_local_estoque old/new:' || OLD.cd_local_estoque || '-' || NEW.cd_local_estoque;
	end if;
	if (coalesce(NEW.nr_seq_lote_fornec, 0) <> coalesce(OLD.nr_seq_lote_fornec, 0)) then
		ds_log_w := ds_log_w || ' nr_seq_lote_fornec old/new:' || OLD.nr_seq_lote_fornec || '-' || NEW.nr_seq_lote_fornec;
	end if;
	if (coalesce(NEW.nr_prescricao, 0) <> coalesce(OLD.nr_prescricao, 0)) then
		ds_log_w := ds_log_w || ' nr_prescricao old/new:' || OLD.nr_prescricao || '-' || NEW.nr_prescricao;
	end if;
	if (coalesce(NEW.dt_recebimento,LOCALTIMESTAMP) <> coalesce(OLD.dt_recebimento,LOCALTIMESTAMP)) then
		ds_log_w := ds_log_w || ' dt_recebimento old/new:' || to_char(OLD.dt_recebimento,'dd/mm/yyyy hh24:mi:ss') || '-' || to_char(NEW.dt_recebimento,'dd/mm/yyyy hh24:mi:ss');
	end if;
	if (coalesce(NEW.cd_material, 0) <> coalesce(OLD.cd_material, 0)) then
		ds_log_w := ds_log_w || ' cd_material old/new:' || OLD.cd_material || '-' || NEW.cd_material;
	end if;
	if (coalesce(NEW.cd_motivo_devolucao, 0) <> coalesce(OLD.cd_motivo_devolucao, 0)) then
		ds_log_w := ds_log_w || ' cd_motivo_devolucao old/new:' || OLD.cd_motivo_devolucao || '-' || NEW.cd_motivo_devolucao;
	end if;
	if (coalesce(OLD.ie_tipo_baixa_estoque,'X') <> coalesce(NEW.ie_tipo_baixa_estoque,'X')) then
		ds_log_w := ds_log_w || ' ie_tipo_baixa_estoque old/new:' || OLD.ie_tipo_baixa_estoque || '-' || NEW.ie_tipo_baixa_estoque;
	end if;

	if (ds_log_w is not null) then
		ds_log_w := substr(ds_log_w ||';NR_DEVOLUCAO=' || NEW.nr_devolucao || 'CD_MATERIAL='|| NEW.cd_material || ';call stack='|| substr(dbms_utility.format_call_stack,1,1800),1,2000);
		CALL gravar_log_tasy(5136, ds_log_w, NEW.nm_usuario);
	end if;
end if;
end if;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_item_devolucao_mat_pac_update() FROM PUBLIC;

CREATE TRIGGER item_devolucao_mat_pac_update
	BEFORE INSERT OR UPDATE ON item_devolucao_material_pac FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_item_devolucao_mat_pac_update();

