-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS atendimento_precaucao_atual ON atendimento_precaucao CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_atendimento_precaucao_atual() RETURNS trigger AS $BODY$
declare
nr_seq_tipo_ocorrencia_w		bigint;
ds_comentario_w				varchar(2000);
quebra_w				varchar(10)	:= chr(13)||chr(10);
vl_parametro_w				varchar(10);
BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'N') then
    goto final;
end if;

vl_parametro_w	:= substr(Obter_Valor_Param_Usuario(281, 1124, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento),1,255);

if (vl_parametro_w = 'N') and (NEW.DT_INICIO is not null) and (NEW.DT_TERMINO is not null) and (NEW.DT_TERMINO < NEW.DT_INICIO) then
	-- A data de fim nao pode ser maior que a data de inicio. Parametro [1124] #@#@

	CALL Wheb_mensagem_pck.exibir_mensagem_abort(263494);
end if;


if (OLD.dt_liberacao is null) and (NEW.dt_liberacao is not null) then
	select	max(nr_seq_tipo_ocorrencia)
	into STRICT	nr_seq_tipo_ocorrencia_w
	from	cih_precaucao
	where	nr_sequencia	= NEW.NR_SEQ_PRECAUCAO;
	
	if (nr_seq_tipo_ocorrencia_w	is not null) then
		ds_comentario_w	:= '';
		if (NEW.NR_SEQ_MOTIVO_ISOL is not null) then
			ds_comentario_w		:= ds_comentario_w||obter_desc_expressao(327458)/*'Motivo: '*/
||substr(obter_descricao_padrao('MOTIVO_ISOLAMENTO','DS_MOTIVO',NEW.NR_SEQ_MOTIVO_ISOL),1,255)||quebra_w;
		end if;
		
		if (NEW.DT_INICIO is not null) then
			ds_comentario_w		:= ds_comentario_w||obter_desc_expressao(648277)/*'Inicio: '*/
||PKG_DATE_FORMATERS_TZ.TO_VARCHAR(NEW.DT_INICIO, 'shortDate', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)||quebra_w;
		end if;
		
		if (NEW.DT_TERMINO is not null) then
			ds_comentario_w		:= ds_comentario_w||obter_desc_expressao(729249)/*'Fim: '*/
||PKG_DATE_FORMATERS_TZ.TO_VARCHAR(NEW.DT_TERMINO, 'shortDate', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)||quebra_w;
		end if;
		
		if (NEW.CD_TOPOGRAFIA is not null) then
			ds_comentario_w		:= ds_comentario_w||obter_desc_expressao(343115)/*'Topografia: '*/
||substr(obter_cih_topografia(NEW.cd_topografia),1,255)||quebra_w;
		end if;
		
		if (NEW.cd_microorganismo is not null) then
			ds_comentario_w		:= ds_comentario_w||obter_desc_expressao(728004, null)||' '||substr(obter_cih_microorganismo(NEW.cd_microorganismo),1,255)||quebra_w;
		end if;

		insert into PACIENTE_OCORRENCIA(	nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							cd_pessoa_fisica,
							nr_seq_tipo_ocorrencia,
							ie_intensidade,
							dt_registro,
							dt_liberacao,
							nm_usuario_liberacao,
							nr_atendimento,
							ds_comentario)
					values (	nextval('paciente_ocorrencia_seq'),
							LOCALTIMESTAMP,
							NEW.nm_usuario,
							LOCALTIMESTAMP,
							NEW.nm_usuario,
							obter_pessoa_Atendimento(NEW.nr_Atendimento,'C'),
							nr_seq_tipo_ocorrencia_w,
							'N',
							coalesce(NEW.dt_registro,LOCALTIMESTAMP),
							NEW.dt_liberacao,
							NEW.nm_usuario,
							NEW.nr_atendimento,
							ds_comentario_w);
							
							
		
		
	end if;
	
end if;

<<final>>
quebra_w := quebra_w;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_atendimento_precaucao_atual() FROM PUBLIC;

CREATE TRIGGER atendimento_precaucao_atual
	BEFORE INSERT OR UPDATE ON atendimento_precaucao FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_atendimento_precaucao_atual();

