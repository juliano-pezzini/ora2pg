-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS regra_pf_codigo_externo ON pf_codigo_externo CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_regra_pf_codigo_externo() RETURNS trigger AS $BODY$
declare

nr_ano_w			        smallint;
nr_seq_controle_w		    controle_pf_codigo_externo.nr_sequencia%type;
cd_estabelecimento_w	    controle_pf_codigo_externo.cd_estabelecimento%type;
de_mascara_cd_externo_w	    controle_pf_codigo_externo.ds_mascara_cd_externo%type;
ie_tipo_codigo_externo_w	controle_pf_codigo_externo.ie_tipo_codigo_externo%type;
cd_ultimo_pf_externo_w	    controle_pf_codigo_externo.cd_ultimo_pf_externo%type;

ind_w	                    integer default 1;
count_e	                    integer default 0;
count_y	                    integer default 0;
count_d	                    integer default 0;

BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger	= 'S') then

	if (NEW.cd_estabelecimento is null) then
		NEW.cd_estabelecimento:= wheb_usuario_pck.get_cd_estabelecimento;
	end if;

	if (gerar_int_padrao.get_executando_recebimento = 'N') then

		if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'de_AT') then

			lock table controle_pf_codigo_externo in exclusive mode;

			select	max(cce.nr_sequencia),
					max(UPPER(cce.ds_mascara_cd_externo)),
					max(cce.ie_tipo_codigo_externo),
					max(cce.cd_estabelecimento),
					pkg_date_utils.extract_field('YEAR', NEW.dt_atualizacao_nrec, 0),
					coalesce(max(cce.cd_ultimo_pf_externo), 0) +1
			into STRICT	nr_seq_controle_w,
					de_mascara_cd_externo_w,
					ie_tipo_codigo_externo_w,
					cd_estabelecimento_w,
					nr_ano_w,
					cd_ultimo_pf_externo_w
			from	controle_pf_codigo_externo cce
			where	cce.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
			and     cce.ie_tipo_codigo_externo = NEW.ie_tipo_codigo_externo
			and		coalesce(cce.dt_inicio_vigencia, LOCALTIMESTAMP) <= coalesce(cce.dt_fim_vigencia, LOCALTIMESTAMP)
			and		coalesce(cce.dt_inicio_vigencia, truncar_data(LOCALTIMESTAMP,'D')) <= truncar_data(LOCALTIMESTAMP,'D')
			and		coalesce(cce.dt_fim_vigencia, truncar_data(LOCALTIMESTAMP,'D')) >= truncar_data(LOCALTIMESTAMP,'D');

			if (cd_estabelecimento_w is not null) then

				while(length(de_mascara_cd_externo_w) >= ind_w) loop
					if (substr(de_mascara_cd_externo_w, ind_w, 1) = 'E') then
						count_e := count_e + 1;
					elsif (substr(de_mascara_cd_externo_w, ind_w, 1) = 'Y') then
						count_y := count_y + 1;
					elsif (substr(de_mascara_cd_externo_w, ind_w, 1) = 'D') then
						count_d := count_d + 1;
					end if;

					ind_w := ind_w + 1;
				end loop;

				if (count_y < 4) then
					nr_ano_w := (substr(nr_ano_w,5-count_y,count_y))::numeric;
				end if;

				if (cd_ultimo_pf_externo_w <= 1) then

					select (lpad(cd_estabelecimento_w,count_e,'0') || nr_ano_w || lpad(cd_ultimo_pf_externo_w,count_d,'0'))
					into STRICT	NEW.cd_pessoa_fisica_externo
					;

					update	controle_pf_codigo_externo
					set		cd_ultimo_pf_externo = NEW.cd_pessoa_fisica_externo,
							dt_atualizacao = LOCALTIMESTAMP,
							nm_usuario = NEW.nm_usuario
					where	nr_sequencia = nr_seq_controle_w;

				else

					select	lpad(cd_ultimo_pf_externo_w, (count_e+count_y+count_d), '0')
					into STRICT	NEW.cd_pessoa_fisica_externo
					;

					update	controle_pf_codigo_externo
					set		cd_ultimo_pf_externo = NEW.cd_pessoa_fisica_externo,
							dt_atualizacao = LOCALTIMESTAMP,
							nm_usuario = NEW.nm_usuario
					where	nr_sequencia = nr_seq_controle_w;

				end if;

			end if;

		end if;
	end if;
	
end if;	
	
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_regra_pf_codigo_externo() FROM PUBLIC;

CREATE TRIGGER regra_pf_codigo_externo
	BEFORE INSERT ON pf_codigo_externo FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_regra_pf_codigo_externo();

