-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS trans_solicitacao_aftins ON trans_solicitacao CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_trans_solicitacao_aftins() RETURNS trigger AS $BODY$
declare

json_w		philips_json;
json_data_w	text;

BEGIN
    if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
        if (wheb_usuario_pck.get_nm_usuario is not null) then
            if (TG_OP = 'INSERT' or TG_OP = 'UPDATE') then

                json_w := philips_json();
                json_w.put('sequentialNumber', NEW.nr_sequencia);
                json_w.put('serviceNumber', NEW.nr_atendimento);
                json_w.put('homeSector', NEW.cd_setor_origem);
                json_w.put('destinationSector', NEW.cd_setor_destino);
                json_w.put('codePerson', NEW.cd_pessoa_fisica);
                json_w.put('transporter', NEW.cd_transportador);
                json_w.put('status', NEW.ie_status);
                json_w.put('requester', NEW.cd_solicitante);
                json_w.put('oxygen', NEW.ie_oxigenio);
                json_w.put('chemo', NEW.ie_em_quimio);
                json_w.put('isolatedPatient', NEW.ie_paciente_isolado);
                json_w.put('wheelchair', NEW.ie_cadeira_rodas);
                json_w.put('belt', NEW.ie_cinto);
                json_w.put('hammock', NEW.ie_maca);
                json_w.put('requestDate', NEW.dt_solicitacao);
                json_w.put('requestTime', TO_CHAR(NEW.dt_solicitacao,'HH24:MI'));
                json_w.put('note', NEW.ds_observacao);
                json_w.put('sourceUnit', NEW.cd_unidade_basica_orig);
                json_w.put('destinationUnit', NEW.cd_unidade_basica_dest);
                json_w.put('realiseDate', NEW.dt_liberacao);
                json_w.put('realiseTime', TO_CHAR(NEW.dt_liberacao,'HH24:MI'));
                json_w.put('reasonCancellation', NEW.cd_motivo_cancelamento);
                json_w.put('noteCancellation', NEW.ds_obs_cancelamento);
                json_w.put('updateDate', NEW.dt_atualizacao);
                json_w.put('updateTime', TO_CHAR(NEW.dt_atualizacao,'HH24:MI'));
                json_w.put('pumpInfusion', NEW.ie_med_bomba_infusao);

                dbms_lob.createtemporary(json_data_w, true);
                json_w.(json_data_w);

                if (TG_OP = 'INSERT') then
                    json_data_w := bifrost.send_integration_content('transportation.request.outbound', json_data_w, wheb_usuario_pck.get_nm_usuario);
                elsif (TG_OP = 'UPDATE') then
                    json_data_w := bifrost.send_integration_content('transportation.update.outbound', json_data_w, wheb_usuario_pck.get_nm_usuario);
                end if;

            end if;

        end if;

    end if;

RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_trans_solicitacao_aftins() FROM PUBLIC;

CREATE TRIGGER trans_solicitacao_aftins
	AFTER INSERT OR UPDATE ON trans_solicitacao FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_trans_solicitacao_aftins();

