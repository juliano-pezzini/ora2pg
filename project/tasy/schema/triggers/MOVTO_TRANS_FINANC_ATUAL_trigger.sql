-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS movto_trans_financ_atual ON movto_trans_financ CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_movto_trans_financ_atual() RETURNS trigger AS $BODY$
declare

nm_tabela_w      ctb_documento.nm_tabela%type;
vl_movimento_w    ctb_documento.vl_movimento%type;
nr_seq_tab_compl_w  ctb_documento.nr_seq_doc_compl%type;
nr_seq_info_w    ctb_documento.nr_seq_info%type;
nr_documento_w    ctb_documento.nr_documento%type;
nr_doc_analitico_w  ctb_documento.nr_doc_analitico%type;

c01 CURSOR FOR
  SELECT  a.nm_atributo,
      a.cd_tipo_lote_contab
  from  atributo_contab a
  where   a.cd_tipo_lote_contab = 10
  and   a.nm_atributo in ( 'VL_TRANSACAO', 'VL_CHEQUE_DEPOSITO', 'VL_ESPECIE_DEPOSITO')
  and    NEW.nr_seq_saldo_caixa is not null
  and    NEW.dt_fechamento_lote is not null
  and not exists (SELECT 1
                 from    ctb_documento b
                 where   b.nr_documento = NEW.nr_seq_saldo_caixa
                 and     b.nr_seq_doc_compl = NEW.nr_sequencia
				 and	 b.nr_doc_analitico is null
                 and     b.cd_tipo_lote_contabil = a.cd_tipo_lote_contab
                 and     b.vl_movimento = NEW.vl_transacao);

c01_w    c01%rowtype;

c02 CURSOR FOR
  SELECT  a.vl_cheque * CASE WHEN NEW.ie_estorno='E' THEN  -1  ELSE 1 END  vl_movimento,
      a.nr_seq_cheque
  from  cheque_cr a,
      deposito_cheque f
  where  f.nr_seq_cheque    = a.nr_seq_cheque
  and   f.nr_seq_deposito  = NEW.nr_seq_deposito
  and   a.vl_cheque <> 0
  and not exists (SELECT 1
                 from    ctb_documento b
                 where   b.nr_documento = NEW.nr_seq_saldo_caixa
                 and     b.nr_seq_doc_compl = NEW.nr_sequencia
				 and	 b.nr_doc_analitico = a.nr_seq_cheque
                 and     b.cd_tipo_lote_contabil = 10
                 and     b.vl_movimento = a.vl_cheque * CASE WHEN NEW.ie_estorno='E' THEN  -1  ELSE 1 END );

c02_w    c02%rowtype;

c04 CURSOR FOR
  SELECT  a.vl_especie * CASE WHEN NEW.ie_estorno='E' THEN  -1  ELSE 1 END  vl_movimento,
      a.nr_sequencia
  from  deposito a
  where  a.nr_sequencia = NEW.nr_seq_deposito
  and  coalesce(a.vl_especie,0)  > 0
  and not exists (SELECT 1
                 from    ctb_documento b
                 where   b.nr_documento = NEW.nr_seq_saldo_caixa
                 and     b.nr_seq_doc_compl = NEW.nr_sequencia
				 and	 b.nr_doc_analitico = a.nr_sequencia
                 and     b.cd_tipo_lote_contabil = 10
                 and     b.vl_movimento = a.vl_especie * CASE WHEN NEW.ie_estorno='E' THEN  -1  ELSE 1 END );

c04_w    c04%rowtype;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger	= 'S')  then

  if (obter_bloq_canc_proj_rec(NEW.nr_seq_proj_rec) > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1144309);  -- Registro associado a um projeto bloqueado ou cancelado. 
  end if;

  if (TG_OP = 'INSERT') and (NEW.DT_TRANSACAO < to_date('01/01/1980','dd/mm/yyyy')) then
    CALL wheb_mensagem_pck.exibir_mensagem_abort(190183,'DT_TRANSACAO=' || to_char(NEW.DT_TRANSACAO, 'dd/mm/yyyy'));
    --r aise_application_error(-20011, 'Nao e possivel gerar um saldo com data de ' || to_char(:new.DT_TRANSACAO, 'dd/mm/yyyy'));

  end if;

  if (NEW.nr_seq_pagador is not null) and (NEW.nr_seq_pagador <> OLD.nr_seq_pagador)then
    BEGIN
    select  max(a.nr_sequencia)
    into STRICT  NEW.nr_seq_segurado
    from  pls_segurado  a
    where  a.nr_seq_pagador  = NEW.nr_seq_pagador;
    exception
    when others then
      null;
    end;
  end if;

  open c01;
  loop
  fetch c01 into
    c01_w;
  EXIT WHEN NOT FOUND; /* apply on c01 */
    BEGIN

    nm_tabela_w :=   case c01_w.nm_atributo
        when 'VL_TRANSACAO' then 'CAIXA_SALDO_DIARIO'
        when 'VL_CHEQUE_DEPOSITO' then 'MOVTO_TRANS_FINANC'
        when 'VL_ESPECIE_DEPOSITO' then 'MOVTO_TRANS_FINANC'
        end;

    vl_movimento_w    := 0;
    nr_documento_w    := NEW.nr_seq_saldo_caixa;
    nr_seq_tab_compl_w  := NEW.nr_sequencia;
    nr_doc_analitico_w  := null;

    if (c01_w.nm_atributo = 'VL_TRANSACAO') then
      BEGIN
      vl_movimento_w  := NEW.vl_transacao;
      nr_seq_info_w  := 4;
      end;
    elsif (c01_w.nm_atributo = 'VL_CHEQUE_DEPOSITO') then
      BEGIN
      vl_movimento_w  := null;

      if (coalesce(NEW.nr_seq_deposito, 0) <> 0) and (coalesce(NEW.nr_seq_trans_financ, 0) <> 0) then
        BEGIN

        BEGIN

        nr_seq_info_w  := 61;
        vl_movimento_w  := null;

        open c02;
        loop
        fetch c02 into
          c02_w;
        EXIT WHEN NOT FOUND; /* apply on c02 */
          BEGIN
          if (c02_w.vl_movimento <> 0) then
            CALL ctb_concil_financeira_pck.ctb_gravar_documento(  NEW.cd_estabelecimento,
                          trunc(coalesce(NEW.dt_referencia_saldo,NEW.dt_transacao)),
                          c01_w.cd_tipo_lote_contab,
                          NEW.nr_seq_trans_financ,
                          nr_seq_info_w,
                          nr_documento_w,
                          nr_seq_tab_compl_w,
                          c02_w.nr_seq_cheque,
                          c02_w.vl_movimento,
                          nm_tabela_w,
                          c01_w.nm_atributo,
                          NEW.nm_usuario,
                          'P',
                          null,
                          NEW.nr_seq_proj_rec);
          end if;
          end;
        end loop;
        close c02;

        exception
        when others then
          nr_seq_info_w:=  null;
          vl_movimento_w:= null;
        end;

        end;
      end if;
      end;
    elsif (c01_w.nm_atributo = 'VL_ESPECIE_DEPOSITO') then
      BEGIN
      if (coalesce(NEW.nr_seq_deposito, 0) <> 0) and (coalesce(NEW.nr_seq_trans_financ, 0) <> 0) then
        BEGIN

        BEGIN

        nr_seq_info_w  := 62;
        vl_movimento_w := null;

        open c04;
        loop
        fetch c04 into
          c04_w;
        EXIT WHEN NOT FOUND; /* apply on c04 */
          BEGIN
          if (coalesce(c02_w.vl_movimento,0) <> 0) then
            CALL ctb_concil_financeira_pck.ctb_gravar_documento(  NEW.cd_estabelecimento,
                          trunc(coalesce(NEW.dt_referencia_saldo,NEW.dt_transacao)),
                          c01_w.cd_tipo_lote_contab,
                          NEW.nr_seq_trans_financ,
                          nr_seq_info_w,
                          nr_documento_w,
                          nr_seq_tab_compl_w,
                          c04_w.nr_sequencia,
                          c04_w.vl_movimento,
                          nm_tabela_w,
                          c01_w.nm_atributo,
                          NEW.nm_usuario,
                          'P',
                          null,
                          NEW.nr_seq_proj_rec);
          end if;
          end;
        end loop;
        close c04;

        exception
        when others then
          nr_seq_info_w  := null;
          vl_movimento_w  := null;
        end;

        end;
      end if;
      end;
    end if;


    if (coalesce(vl_movimento_w, 0) <> 0) then
      BEGIN

      CALL ctb_concil_financeira_pck.ctb_gravar_documento(  coalesce(NEW.cd_estabelecimento,wheb_usuario_pck.get_cd_estabelecimento),
                    trunc(coalesce(NEW.dt_referencia_saldo,NEW.dt_transacao)),
                    c01_w.cd_tipo_lote_contab,
                    NEW.nr_seq_trans_financ,
                    nr_seq_info_w,
                    nr_documento_w,
                    nr_seq_tab_compl_w,
                    nr_doc_analitico_w,
                    vl_movimento_w,
                    nm_tabela_w,
                    c01_w.nm_atributo,
                    NEW.nm_usuario,
                    'P',
                    null,
                    NEW.nr_seq_proj_rec);
      end;
    end if;

    end;
  end loop;
  close c01;
end if;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_movto_trans_financ_atual() FROM PUBLIC;

CREATE TRIGGER movto_trans_financ_atual
	BEFORE INSERT OR UPDATE ON movto_trans_financ FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_movto_trans_financ_atual();

