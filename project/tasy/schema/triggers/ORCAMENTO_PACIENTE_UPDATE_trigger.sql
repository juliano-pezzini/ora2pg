-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS orcamento_paciente_update ON orcamento_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_orcamento_paciente_update() RETURNS trigger AS $BODY$
declare

C01 CURSOR FOR
	SELECT	nm_usuario_envio,
		cd_perfil
	from	REGRA_ENVIO_CI_ORCAMENTO
	where	ie_status_orcamento = NEW.ie_status_orcamento
	order by nm_usuario_envio,
		cd_perfil;
		
C02 CURSOR FOR
	SELECT	distinct
		cd_protocolo,
		cd_material
	from 	orcamento_paciente_mat
	where	nr_sequencia_orcamento = NEW.nr_sequencia_orcamento
	and	cd_protocolo is not null
	order by cd_protocolo;

nm_usuario_envio_w            	varchar(15);
cd_perfil_w                     integer;
ds_erro_w			varchar(2000);
cd_material_w			integer;
cd_protocolo_w			bigint;
cd_material_ww			varchar(2000);
cd_protocolo_ww			varchar(2000);
qt_reg_w			smallint;
varAlerta_w			varchar(1);
ds_alerta_w			varchar(255);
nr_seq_alerta_w			bigint;
vl_orcamento_w			double precision;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

varAlerta_w:= coalesce(Obter_Valor_Param_Usuario(106,69,obter_perfil_ativo,NEW.nm_usuario,wheb_usuario_pck.get_cd_estabelecimento),'N');

if (varAlerta_w = 'S') and (coalesce(OLD.nr_atendimento,0) <> coalesce(NEW.nr_atendimento,0)) and (coalesce(OLD.nr_atendimento,0) = 0) then
	
	vl_orcamento_w := obter_valor_orcamento(NEW.nr_sequencia_orcamento, vl_orcamento_w);

	ds_alerta_w 	:= obter_desc_expressao(968305)||' ';
	
	ds_alerta_w 	:= ds_alerta_w 	||chr(13) ||chr(10)	||obter_desc_expressao(344019)||' '||NEW.nr_sequencia_orcamento;
	ds_alerta_w 	:= ds_alerta_w 	|| chr(13)||chr(10) 	||obter_desc_expressao(968307)||' '|| wheb_usuario_pck.get_nm_usuario;
	ds_alerta_w 	:= ds_alerta_w 	|| chr(13)||chr(10)	||obter_desc_expressao(968309)||' '||LOCALTIMESTAMP;
	ds_alerta_w	:= ds_alerta_w	|| chr(13)||chr(10)	||obter_desc_expressao(968311)||' '|| vl_orcamento_w;
	
	select	nextval('atendimento_alerta_seq')
	into STRICT	nr_seq_alerta_w
	;

	insert into atendimento_alerta( 	nr_sequencia,
						nr_atendimento,
						dt_alerta,
						dt_atualizacao,
						nm_usuario,
						ds_alerta,
						ie_situacao,
						dt_fim_alerta,
						cd_paciente)
				values (	nr_seq_alerta_w,
						NEW.nr_atendimento,
						LOCALTIMESTAMP,
						LOCALTIMESTAMP,
						NEW.nm_usuario,
						substr(ds_alerta_w,1,2000),
						'A',
						null,
						NEW.cd_pessoa_fisica);
end if;

IF (OLD.IE_STATUS_ORCAMENTO <> NEW.IE_STATUS_ORCAMENTO) and (NEW.IE_STATUS_ORCAMENTO = 1) THEN
	
	insert into orcamento_historico(nr_sequencia,
		nr_sequencia_orcamento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_historico,
		ds_historico,
		dt_liberacao)
	values (nextval('orcamento_historico_seq'),
		NEW.nr_sequencia_orcamento,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		LOCALTIMESTAMP,
		obter_desc_expressao(486460),
		LOCALTIMESTAMP);
		
ELSIF (OLD.IE_STATUS_ORCAMENTO <> NEW.IE_STATUS_ORCAMENTO) and (NEW.IE_STATUS_ORCAMENTO = 2) THEN
	
	insert into orcamento_historico(nr_sequencia,
		nr_sequencia_orcamento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_historico,
		ds_historico,
		dt_liberacao)
	values (nextval('orcamento_historico_seq'),
		NEW.nr_sequencia_orcamento,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		LOCALTIMESTAMP,
		obter_desc_expressao(491340),
		LOCALTIMESTAMP);
		
ELSIF (OLD.IE_STATUS_ORCAMENTO <> NEW.IE_STATUS_ORCAMENTO) and (NEW.IE_STATUS_ORCAMENTO = 3) THEN
	
	insert into orcamento_historico(nr_sequencia,
		nr_sequencia_orcamento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_historico,
		ds_historico,
		dt_liberacao)
	values (nextval('orcamento_historico_seq'),
		NEW.nr_sequencia_orcamento,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		LOCALTIMESTAMP,
		obter_desc_expressao(486461),
		LOCALTIMESTAMP);
		
ELSIF (OLD.IE_STATUS_ORCAMENTO <> NEW.IE_STATUS_ORCAMENTO) and (NEW.IE_STATUS_ORCAMENTO = 4) THEN
	
	insert into orcamento_historico(nr_sequencia,
		nr_sequencia_orcamento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_historico,
		ds_historico,
		dt_liberacao)
	values (nextval('orcamento_historico_seq'),
		NEW.nr_sequencia_orcamento,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		LOCALTIMESTAMP,
		obter_desc_expressao(486462),
		LOCALTIMESTAMP);

ELSIF (OLD.IE_STATUS_ORCAMENTO <> NEW.IE_STATUS_ORCAMENTO) and (NEW.IE_STATUS_ORCAMENTO = 5) THEN
	
	insert into orcamento_historico(nr_sequencia,
		nr_sequencia_orcamento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_historico,
		ds_historico,
		dt_liberacao)
	values (nextval('orcamento_historico_seq'),
		NEW.nr_sequencia_orcamento,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		LOCALTIMESTAMP,
		obter_desc_expressao(494233),
		LOCALTIMESTAMP);
		
ELSIF (OLD.IE_STATUS_ORCAMENTO <> NEW.IE_STATUS_ORCAMENTO) and (NEW.IE_STATUS_ORCAMENTO = 6) THEN
	
	insert into orcamento_historico(nr_sequencia,
		nr_sequencia_orcamento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_historico,
		ds_historico,
		dt_liberacao)
	values (nextval('orcamento_historico_seq'),
		NEW.nr_sequencia_orcamento,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		LOCALTIMESTAMP,
		NEW.nm_usuario,
		LOCALTIMESTAMP,
		obter_desc_expressao(494234),
		LOCALTIMESTAMP);
	
END IF;

if (coalesce(OLD.ie_status_orcamento,0) <> coalesce(NEW.ie_status_orcamento,0)) then

	open C01;
	loop
	fetch C01 into	
		nm_usuario_envio_w,
		cd_perfil_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN
		
		cd_protocolo_ww	:= '';
		cd_material_ww	:= '';
		open C02;
		loop
		fetch C02 into	
			cd_protocolo_w,
			cd_material_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			BEGIN
			
			cd_protocolo_ww	:= cd_protocolo_ww || cd_protocolo_w || ', ';
			cd_material_ww := cd_material_ww || cd_material_w || ', ';
			
			end;
		end loop;
		close C02;
		
		cd_protocolo_ww	:= substr(cd_protocolo_ww,1, length(cd_protocolo_ww) -2);
		cd_material_ww	:= substr(cd_material_ww,1, length(cd_material_ww) -2);
		
		BEGIN
		insert into comunic_interna(
			ds_titulo,
			ds_comunicado,
			cd_perfil,
			nm_usuario_destino,
			dt_atualizacao,
			dt_comunicado,
			ie_gerencial,
			nm_usuario,
			nr_sequencia,
			ie_geral,
			dt_liberacao)
		values (
			obter_desc_expressao(968277) || ' ' || NEW.nr_sequencia_orcamento,
			obter_desc_expressao(344019) || NEW.nr_sequencia_orcamento || chr(13) ||
			obter_desc_expressao(325811) || substr(obter_nome_pf(NEW.cd_pessoa_fisica ),1,60) || chr(13) ||
			obter_desc_expressao(326148) || substr(obter_nome_convenio(NEW.cd_convenio),1,60) || chr(13) ||
			obter_desc_expressao(651009) || substr(obter_categoria_convenio(NEW.cd_convenio, NEW.cd_categoria),1,60) || chr(13) ||
			obter_desc_expressao(612282) || substr(obter_plano_convenio(NEW.cd_convenio, NEW.cd_plano),1,60) || chr(13) ||
			obter_desc_expressao(328829) || cd_protocolo_ww || chr(13) ||
			obter_desc_expressao(293060) || cd_material_ww,
			cd_perfil_w,
			nm_usuario_envio_w,
			LOCALTIMESTAMP,
			LOCALTIMESTAMP,
			'N',
			NEW.nm_usuario,
			nextval('comunic_interna_seq'),
			'N',
			LOCALTIMESTAMP);
		exception
			when others then
			ds_erro_w	:= '';
		end;
		
		end;
	end loop;
	close C01;

end if;

<<Final>>
qt_reg_w	:= 0;

  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_orcamento_paciente_update() FROM PUBLIC;

CREATE TRIGGER orcamento_paciente_update
	AFTER UPDATE ON orcamento_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_orcamento_paciente_update();

