-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS titulo_receber_update ON titulo_receber CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_titulo_receber_update() RETURNS trigger AS $BODY$
DECLARE

nr_sequencia_w			bigint;
nm_atributo_w			varchar(50);
ds_valor_ant_w			varchar(50);
ds_valor_atual_w		varchar(50);

ie_motivo_w				integer;
ie_tipo_consistencia_w	integer;
nr_seq_liq_w			bigint;
ie_tipo_convenio_w		smallint;
qt_reg_w				smallint;

nr_seq_pls_fatura_w		bigint;
nr_seq_fatura_w			bigint;
ie_tipo_ocorrencia_w	bigint;

cd_tipo_portador_w				portador.cd_tipo_portador%type;
nr_seq_conta_banco_w			portador.nr_seq_conta_banco%type;
ie_recalcula_nosso_num_w		varchar(1);
vl_valor_altera_venc_w		double precision;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

if (coalesce(wheb_usuario_pck.get_ie_lote_contabil,'N') = 'S') or (coalesce(wheb_usuario_pck.get_ie_atualizacao_contabil,'N') = 'S') then
	goto Final;
end if;

select coalesce(max(nr_sequencia),0) + 1
into STRICT nr_sequencia_w
from titulo_receber_alt;

if (OLD.dt_emissao <> NEW.dt_emissao) or (OLD.cd_pessoa_fisica <> NEW.cd_pessoa_fisica) or (OLD.cd_cgc <> NEW.cd_cgc) then
	if (OLD.dt_emissao <> NEW.dt_emissao) then
		nm_atributo_w := 'DT_EMISSAO';
		ds_valor_ant_w := to_char(OLD.dt_emissao,'dd/mm/yyyy hh24:mi:ss');
		ds_valor_atual_w := to_char(NEW.dt_emissao,'dd/mm/yyyy hh24:mi:ss');
	elsif (OLD.cd_pessoa_fisica <> NEW.cd_pessoa_fisica) then
		nm_atributo_w := 'CD_PESSOA_FISICA';
		ds_valor_ant_w := OLD.cd_pessoa_fisica;
		ds_valor_atual_w := NEW.cd_pessoa_fisica;
	elsif (OLD.cd_cgc <> NEW.cd_cgc) then
		nm_atributo_w := 'CD_CGC';
		ds_valor_ant_w := OLD.cd_cgc;
		ds_valor_atual_w := NEW.cd_cgc;
	end if;

	insert into Titulo_Receber_Alt(nr_titulo, nr_sequencia, nm_atributo, nm_usuario,
						  dt_atualizacao, ds_valor_ant, ds_valor_atual)
	values (NEW.nr_titulo, nr_sequencia_w, nm_atributo_w, NEW.nm_usuario,
		  LOCALTIMESTAMP, ds_valor_ant_w, ds_valor_atual_w);
end if;

/* Rotina criada por Marcus em 30/12/2006 para aprovar ordens de repasse a distribuidores Wheb */

if (NEW.nr_seq_nf_saida is not null) and (NEW.vl_saldo_titulo <> OLD.vl_saldo_titulo) then
	CALL FIN_Aprovar_OC_Repasse(
		NEW.nr_titulo,
		NEW.nr_seq_nf_saida,
		NEW.vl_titulo,
		NEW.vl_saldo_titulo,
		NEW.nm_usuario);
end if;

if	(NEW.cd_cgc is null AND NEW.cd_pessoa_fisica is null)
	or
	(NEW.cd_cgc is not null AND NEW.cd_pessoa_fisica is not null) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(232927);
end if;

/* Ao alterar o vencimento do título, altera o vencimento da fatura que originou o título */

if (trunc(NEW.dt_pagamento_previsto) <> trunc(OLD.dt_pagamento_previsto)) and (OLD.dt_pagamento_previsto is not null) then
	BEGIN
	select	nr_sequencia
	into STRICT	nr_seq_pls_fatura_w
	from	pls_fatura
	where	nr_titulo = OLD.nr_titulo;
	exception
		when others then
		nr_seq_pls_fatura_w := null;
	end;

	if (nr_seq_pls_fatura_w is not null) then
		update	pls_fatura
		set	dt_vencimento 	= NEW.dt_pagamento_previsto,
			nm_usuario	= NEW.nm_usuario,
			dt_atualizacao	= LOCALTIMESTAMP
		where	nr_sequencia	= nr_seq_pls_fatura_w;

		BEGIN
		select	nr_sequencia
		into STRICT	nr_seq_fatura_w
		from	ptu_fatura
		where	nr_seq_pls_fatura = nr_seq_pls_fatura_w;
		exception
			when others then
			nr_seq_fatura_w := null;
		end;

		if (nr_seq_fatura_w is not null) then
			update	ptu_fatura
			set	dt_vencimento_fatura	= NEW.dt_pagamento_previsto,
				nm_usuario		= NEW.nm_usuario,
				dt_atualizacao		= LOCALTIMESTAMP
			where	nr_sequencia		= nr_seq_fatura_w;
		end if;
	end if;
end if;
/* OS 1782010 - retirei daqui desta trigger pois estava dando mutante. Coloquei no afterpost do programa.
if (:new.cd_portador <> :old.cd_portador) then

	obter_param_usuario(801,211,obter_perfil_ativo,:new.nm_usuario,:new.cd_estabelecimento,ie_recalcula_nosso_num_w);

	if (ie_recalcula_nosso_num_w in ('B','A')) then
		select 	cd_tipo_portador,
			nr_seq_conta_banco
		into	cd_tipo_portador_w,
			nr_seq_conta_banco_w
		from	portador
		where	cd_portador = :new.cd_portador;
		if (cd_tipo_portador_w = 1) and (nr_seq_conta_banco_w is not null) and (:new.nr_bloqueto is not null) then
			gerar_bloqueto_tit_rec(:new.nr_titulo, 'MTR', 'S');
		end if;
	end if;
end if;*/
/*Inicio tratamento para titulos de cobrança que foram alterados*/

if (NEW.ie_entrada_confirmada = 'C') then

	/*Alteração de conta bancária*/

	if (OLD.nr_seq_conta_banco <> NEW.nr_seq_conta_banco) then

		ie_tipo_ocorrencia_w := 7;

		CALL gerar_titulo_receber_instr( NEW.nr_titulo,
									 NEW.vl_saldo_titulo,
									 NEW.nm_usuario,
									 NEW.cd_moeda,
									 0,
									 0,
									 NEW.vl_saldo_titulo,
									 ie_tipo_ocorrencia_w,
									 NEW.cd_pessoa_fisica,
									 NEW.cd_cgc,
									 OLD.nr_seq_conta_banco,
									 'TITULO_RECEBER_UPDATE');


	end if;

end if;

/*OS 1555588 - Como é um valor, fiz da mesma forma que o parametro 148 na proc consistir_calcular_cot_compra*/

BEGIN
	select	coalesce(max(obter_valor_param_usuario(801,214, obter_perfil_ativo, NEW.nm_usuario, obter_estabelecimento_ativo)),0)
	into STRICT	vl_valor_altera_venc_w
	;
exception when others then
	vl_valor_altera_venc_w := 0;
end;

if (coalesce(vl_valor_altera_venc_w,0) > 0) and (NEW.vl_saldo_titulo > coalesce(vl_valor_altera_venc_w,0)) and (NEW.dt_pagamento_previsto <> OLD.dt_pagamento_previsto) then
	--Não será possível alterar o vencimento do título. O saldo é maior que o valor mímino informado no parâmetro 214. Vl saldo: #@vl_saldo_titulo_w#@ Vl parâmetro: #@vl_valor_altera_venc_w#@
	CALL wheb_mensagem_pck.exibir_mensagem_abort(995290,	'vl_saldo_titulo_w=' || campo_mascara_virgula(NEW.vl_saldo_titulo) ||
									';VL_VALOR_ALTERA_VENC_W=' || campo_mascara_virgula(vl_valor_altera_venc_w));
end if;
/*FIM OS 1555588 */

<<Final>>
qt_reg_w	:= 0;

  END;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_titulo_receber_update() FROM PUBLIC;

CREATE TRIGGER titulo_receber_update
	AFTER UPDATE ON titulo_receber FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_titulo_receber_update();

