-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS atend_monit_hemod_atual ON atend_monit_hemod CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_atend_monit_hemod_atual() RETURNS trigger AS $BODY$
DECLARE

ds_hora_w	varchar(20);
dt_registro_w	timestamp;
dt_apap_w	timestamp;
qt_hora_w	double precision;
qt_reg_w		smallint;

BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

if (NEW.nr_hora is null) or (NEW.dt_monitoracao <> OLD.dt_monitoracao) then
	BEGIN
	NEW.nr_hora	:= (to_char(round(NEW.dt_monitoracao,'hh24'),'hh24'))::numeric;
	end;
end if;

if (coalesce(OLD.DT_MONITORACAO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_MONITORACAO) and (NEW.DT_MONITORACAO is not null) then
	NEW.ds_utc		:= obter_data_utc(NEW.DT_MONITORACAO, 'HV');	
end if;

if (coalesce(OLD.DT_LIBERACAO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_LIBERACAO) and (NEW.DT_LIBERACAO is not null) then
	NEW.ds_utc_atualizacao	:= obter_data_utc(NEW.DT_LIBERACAO,'HV');
end if;

if (NEW.nr_hora is not null) and
	((OLD.nr_hora is null) or (OLD.dt_monitoracao is null) or (NEW.nr_hora <> OLD.nr_hora) or (NEW.dt_monitoracao <> OLD.dt_monitoracao)) then
	BEGIN
	ds_hora_w	:= substr(obter_valor_dominio(2119,NEW.nr_hora),1,2);
	dt_registro_w	:= trunc(NEW.dt_monitoracao,'hh24');
	dt_apap_w	:= to_date(to_char(NEW.dt_monitoracao,'dd/mm/yyyy') ||' '||ds_hora_w||':00:00','dd/mm/yyyy hh24:mi:ss');
	if (to_char(round(NEW.dt_monitoracao,'hh24'),'hh24') = ds_hora_w) then
		NEW.dt_referencia	:= round(NEW.dt_monitoracao,'hh24');
	else
		BEGIN
		qt_hora_w	:= (trunc(NEW.dt_monitoracao,'hh24') - to_date(to_char(NEW.dt_monitoracao,'dd/mm/yyyy') ||' '||ds_hora_w||':00:00','dd/mm/yyyy hh24:mi:ss')) * 24;
		if (qt_hora_w > 12) then
			NEW.dt_referencia	:= to_date(to_char(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(NEW.dt_monitoracao + 1),'dd/mm/yyyy') ||' '||ds_hora_w ||':00:00','dd/mm/yyyy hh24:mi:ss');
		elsif (qt_hora_w > 0) and (qt_hora_w <= 12) then
			NEW.dt_referencia	:= to_date(to_char(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(NEW.dt_monitoracao),'dd/mm/yyyy') ||' '||ds_hora_w ||':00:00','dd/mm/yyyy hh24:mi:ss');
		elsif (qt_hora_w >= -12) then
			NEW.dt_referencia	:= to_date(to_char(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(NEW.dt_monitoracao),'dd/mm/yyyy') ||' '||ds_hora_w ||':00:00','dd/mm/yyyy hh24:mi:ss');
		elsif (qt_hora_w < -12) then
			NEW.dt_referencia	:= to_date(to_char(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(NEW.dt_monitoracao - 1),'dd/mm/yyyy') ||' '||ds_hora_w ||':00:00','dd/mm/yyyy hh24:mi:ss');
		end if;
		end;
	end if;
	end;
end if;

if (coalesce(NEW.ie_importado,'N') = 'N') then
	BEGIN
	if (NEW.ie_pam_informada <> 'S') then
		NEW.qt_pam		:= (NEW.qt_pa_sist + (2 * NEW.qt_pa_diast))/3;
	end if;
	if (NEW.ie_pa_media_ap_informada <> 'S') then
		NEW.qt_pa_media_ap	:= NEW.qt_pa_diast_ap + (NEW.qt_pa_sist_ap - NEW.qt_pa_ocluida_ap)/3;
	end if;
	
	NEW.qt_pa_media_fem	:= trunc((NEW.qt_pa_sist_fem + (2 * NEW.qt_pa_diast_fem))/3);
	
	
	NEW.tx_indice_card	:= dividir(NEW.qt_debito_card,NEW.qt_super_corp);
	NEW.qt_volume_sist	:= dividir(NEW.qt_debito_card, NEW.qt_fc) * 1000;
	NEW.tx_indice_sist	:= dividir(NEW.tx_indice_card, NEW.qt_fc) * 1000;
	NEW.qt_rv_sistemica	:= round(dividir((80 * (NEW.qt_pam - NEW.qt_pvc)),NEW.qt_debito_card));
	NEW.tx_rv_sistemica	:= round(dividir((80 * (NEW.qt_pam - NEW.qt_pvc)),NEW.tx_indice_card));
	NEW.qt_rv_pulmonar	:= dividir((80 * (NEW.qt_pa_media_ap - NEW.qt_pa_ocluida_ap)),NEW.qt_debito_card);
	NEW.tx_rv_pulmonar	:= dividir((80 * (NEW.qt_pa_media_ap - NEW.qt_pa_ocluida_ap)),NEW.tx_indice_card);
	NEW.qt_trab_sist_ve	:= NEW.qt_volume_sist * (NEW.qt_pam - NEW.qt_pa_ocluida_ap) * 0.0136;
	NEW.tx_trab_sist_ve	:= NEW.tx_indice_sist * (NEW.qt_pam - NEW.qt_pa_ocluida_ap) * 0.0136;
	NEW.qt_trab_sist_vd	:= NEW.qt_volume_sist * (NEW.qt_pa_media_ap - NEW.qt_pvc) * 0.0136;
	NEW.tx_trab_sist_vd	:= NEW.tx_indice_sist * (NEW.qt_pa_media_ap - NEW.qt_pvc) * 0.0136;
	end;
end if;

if (TG_OP = 'INSERT') and (coalesce(NEW.ie_integracao,'N')	= 'S') then
   CALL record_integration_notify(null,NEW.nr_atendimento,'MH',NEW.nr_sequencia,null,'S');
end if;

<<Final>>
qt_reg_w	:= 0;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_atend_monit_hemod_atual() FROM PUBLIC;

CREATE TRIGGER atend_monit_hemod_atual
	BEFORE INSERT OR UPDATE ON atend_monit_hemod FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_atend_monit_hemod_atual();

