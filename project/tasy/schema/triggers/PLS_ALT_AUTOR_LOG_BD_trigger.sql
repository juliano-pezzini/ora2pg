-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pls_alt_autor_log_bd ON pls_guia_plano CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pls_alt_autor_log_bd() RETURNS trigger AS $BODY$
declare
 
nm_machine_w		varchar(255);
ie_tipo_alteracao_w	varchar(1)	:= null;
ds_log_w		varchar(2000)	:= null;
qt_rotina_w		bigint;
BEGIN
  BEGIN 
 
if (pls_se_aplicacao_tasy = 'N') then 
	BEGIN 
	SELECT	machine 
	INTO STRICT	nm_machine_w 
	FROM	v$session 
	WHERE	audsid = USERENV('sessionid');
	exception 
		when others then 
		nm_machine_w	:= null;
	end;
	 
	/* Verificação de SCS */
 
	select	count(1) 
	into STRICT	qt_rotina_w 
	from 	v$session 
	where	audsid	= (SELECT userenv('sessionid') ) 
	and	username = (select username from v$session where audsid = (select userenv('sessionid') )) 
	and	action like 'TASY_SCS%';
	 
	if (qt_rotina_w = 0) then 
	 
		if (TG_OP = 'UPDATE') then 
			if (coalesce(NEW.ie_estagio,0) <> coalesce(OLD.ie_estagio,0)) then 
				ds_log_w	:= ds_log_w || chr(13) || chr(10) || 'ie_estagio_old= ' || OLD.ie_estagio || ' ie_estagio_new= ' || NEW.ie_estagio;
			end if;
		 
			if (coalesce(NEW.ie_status,0) <> coalesce(OLD.ie_status,0)) then 
				ds_log_w	:= ds_log_w || chr(13) || chr(10) || 'ie_status_old= ' || OLD.ie_status || ' ie_estagio_new= ' || NEW.ie_status;
			end if;
		 
			if (ds_log_w is not null) then 
				ie_tipo_alteracao_w	:= 'A';
			end if;
		elsif (TG_OP = 'DELETE') then 
			ie_tipo_alteracao_w	:= 'E';
			 
			ds_log_w	:= 'Guia: ' || NEW.cd_guia;
		end if;
 
		if (ie_tipo_alteracao_w is not null) then 
			insert into pls_log_alt_autor_bd(nr_sequencia, 
				dt_alteracao, 
				nr_seq_guia_plano, 
				nr_seq_guia_plano_proc, 
				nr_seq_guia_plano_mat, 
				ie_tipo_alteracao, 
				ds_log, 
				nm_maquina) 
			values (nextval('pls_log_alt_autor_bd_seq'), 
				LOCALTIMESTAMP, 
				NEW.nr_sequencia, 
				null, 
				null, 
				ie_tipo_alteracao_w, 
				ds_log_w, 
				nm_machine_w);
		end if;
	end if;
end if;
 
  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pls_alt_autor_log_bd() FROM PUBLIC;

CREATE TRIGGER pls_alt_autor_log_bd
	BEFORE UPDATE OR DELETE ON pls_guia_plano FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pls_alt_autor_log_bd();

