-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS nota_fiscal_item_atual ON nota_fiscal_item CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_nota_fiscal_item_atual() RETURNS trigger AS $BODY$
declare

cd_estabelecimento_w	bigint;
ie_gerar_barra_w		varchar(1);
ie_altera_conta_movto_w	varchar(1);
nr_movimento_estoque_w	varchar(10);
ie_tipo_ordem_w		varchar(10);
ds_historico_w		varchar(255);
cd_material_estoque_w	integer;
ie_material_estoque_w	varchar(1);
cd_cgc_emitente_w	nota_fiscal.cd_cgc_emitente%type;
cd_operacao_nf_w		operacao_nota.cd_operacao_nf%type;
nr_seq_cnae_w		pls_cnae.nr_sequencia%type;
nr_seq_classif_trib_w	nota_fiscal_item.nr_seq_classif_trib%type;
cd_procedimento_w	proc_interno.cd_procedimento%type;
nr_seq_marca_w		marca.nr_sequencia%type;


c01 CURSOR FOR
SELECT	nr_movimento_estoque
from	movimento_estoque
where	ie_origem_documento = 1
and	nr_seq_tab_orig = NEW.nr_sequencia
and	nr_sequencia_item_docto = NEW.nr_item_nf;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S')  then

if (obter_bloq_canc_proj_rec(NEW.nr_seq_proj_rec) > 0) then
    CALL wheb_mensagem_pck.exibir_mensagem_abort(1144309);  -- Registro associado a um projeto bloqueado ou cancelado.
end if;

if (NEW.cd_procedimento_loc is null and OLD.cd_procedimento_loc is not null) then
    NEW.cd_procedimento := NEW.cd_procedimento_loc;
end if;

select	cd_estabelecimento,
	cd_operacao_nf,
	cd_cgc_emitente
into STRICT	cd_estabelecimento_w,
	cd_operacao_nf_w,
	cd_cgc_emitente_w
from	nota_fiscal
where	nr_sequencia  = NEW.nr_sequencia;

if (coalesce(NEW.vl_unit_estrangeiro,0) > 0) then
	BEGIN

	if (coalesce(NEW.vl_unit_estrangeiro,0) >= coalesce(NEW.vl_unitario_item_nf,0)) then

		NEW.vl_dif_estrangeiro := coalesce(NEW.vl_unit_estrangeiro,0) - coalesce(NEW.vl_unitario_item_nf,0);
	else
		NEW.vl_dif_estrangeiro := coalesce(NEW.vl_unitario_item_nf,0) - coalesce(NEW.vl_unit_estrangeiro,0);
	end if;

	end;
end if;

if (coalesce(NEW.cd_material,0) > 0) then
	BEGIN
	select	coalesce(max(cd_material_estoque),NEW.cd_material)
	into STRICT	cd_material_estoque_w
	from	material
	where	cd_material = NEW.cd_material;

	NEW.cd_material_estoque	:= cd_material_estoque_w;

	select	coalesce(max(ie_material_estoque),'N')
	into STRICT	ie_material_estoque_w
	from	material_estab
	where	cd_material = cd_material_estoque_w
	and	cd_estabelecimento = cd_estabelecimento_w;

	NEW.ie_material_estoque	:= ie_material_estoque_w;
	end;
else
	BEGIN
	NEW.cd_material_estoque	:= null;
	NEW.ie_material_estoque	:= null;
	end;
end if;

select (max(obter_valor_param_usuario(40, 148, obter_perfil_ativo, NEW.nm_usuario, cd_estabelecimento_w)))
into STRICT	ie_altera_conta_movto_w
;

if (NEW.pr_desc_financ is null) then
	NEW.pr_desc_financ	:= 0;
end if;

if (coalesce(NEW.cd_procedimento,0) > 0) and (coalesce(NEW.cd_material,0) = 0) then
	BEGIN
	NEW.cd_unidade_medida_estoque	:= null;
	NEW.cd_unidade_medida_compra	:= null;
	end;
end if;

if (coalesce(NEW.vl_desc_financ,0) = 0) and
	((coalesce(OLD.pr_desc_financ,0) <> coalesce(NEW.pr_desc_financ,0)) or (coalesce(OLD.vl_liquido,0) <> coalesce(NEW.vl_liquido,0))) then
	NEW.vl_desc_financ	:= coalesce(NEW.vl_liquido,0) * coalesce(NEW.pr_desc_financ,0) / 100;
end if;

CALL ctb_consistir_conta_titulo(NEW.cd_conta_contabil, Wheb_mensagem_pck.get_Texto(303614)); /*'Conta contabil'*/

ctb_consistir_conta_estab(cd_estabelecimento_w, NEW.cd_conta_contabil, Wheb_mensagem_pck.get_Texto(303614)); /*'Conta contabil'*/


/*buscando da regra e identifica no item, se o barras do material deve ser atualizado*/


if (NEW.cd_material is not null) then
	ie_gerar_barra_w := obter_regra_atualizar_barras(NEW.cd_material, cd_estabelecimento_w, ie_gerar_barra_w);
	if (ie_gerar_barra_w <> 'N') then
		NEW.ie_atualizar_barras	:= ie_gerar_barra_w;
	end if;
end if;

if (ie_altera_conta_movto_w = 'S') then

	open c01;
	loop
	fetch c01 into
		nr_movimento_estoque_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		BEGIN

		update	movimento_estoque
		set	cd_conta_contabil	= NEW.cd_conta_contabil,
			cd_centro_custo	= NEW.cd_centro_custo
		where	nr_movimento_estoque = nr_movimento_estoque_w;

		end;
	end loop;
	close c01;
end if;

if (NEW.nr_ordem_compra is not null) and (OLD.vl_unitario_item_nf > 0) and (OLD.vl_unitario_item_nf <> NEW.vl_unitario_item_nf) then
	BEGIN
	select	ie_tipo_ordem
	into STRICT	ie_tipo_ordem_w
	from	ordem_compra
	where	nr_ordem_compra = NEW.nr_ordem_compra;

	if (ie_tipo_ordem_w = 'T') then
		BEGIN
		ds_historico_w := substr(WHEB_MENSAGEM_PCK.get_texto(303615,'CD_MATERIAL_W='|| NEW.cd_material ||';NR_ITEM_NF_W='|| NEW.nr_item_nf ||';VL_UNITARIO_ITEM_NF_DE_W='|| campo_mascara_virgula(OLD.vl_unitario_item_nf) ||';VL_UNITARIO_ITEM_NF_PARA_W='|| campo_mascara_virgula(NEW.vl_unitario_item_nf)),1,255);
				/*Material [#@CD_MATERIAL_W#@] item [#@NR_ITEM_NF_W#@]. De: #@VL_UNITARIO_ITEM_NF_DE_W#@ Para: #@VL_UNITARIO_ITEM_NF_PARA_W#@*/



		CALL gerar_historico_nota_fiscal(
			NEW.nr_sequencia,
			NEW.nm_usuario,
			'40',
			ds_historico_w);
		end;
	end if;
	end;
end if;

if (TG_OP = 'INSERT') then

	select coalesce(obter_cnae_emitente(	cd_estabelecimento_w,
					cd_cgc_emitente_w,
					obter_item_servico_proced(NEW.cd_procedimento, NEW.ie_origem_proced),
					NEW.cd_procedimento),0)
	into STRICT	nr_seq_cnae_w
	;

	if (nr_seq_cnae_w = 0) and (cd_operacao_nf_w > 0)	then
		BEGIN

		select	coalesce(max(nr_seq_cnae),0)
		into STRICT	nr_seq_cnae_w
		from	operacao_nota
		where	cd_operacao_nf = cd_operacao_nf_w;

		end;
	end if;

	if (nr_seq_cnae_w > 0) then
		NEW.nr_seq_cnae := nr_seq_cnae_w;
	end if;
end if;

select	obter_cst_regra_item_nf(NEW.nr_sequencia, coalesce(NEW.cd_material,0),coalesce(NEW.cd_procedimento,0),coalesce(NEW.ie_origem_proced,0)) nr_cst
into STRICT	nr_seq_classif_trib_w
;

if (TG_OP = 'INSERT') and (coalesce(OLD.nr_seq_classif_trib,0) = 0) and (nr_seq_classif_trib_w > 0) then
	NEW.nr_seq_classif_trib := nr_seq_classif_trib_w;
end if;

if (TG_OP = 'UPDATE') and (coalesce(OLD.nr_seq_classif_trib,0) = 0) and (nr_seq_classif_trib_w > 0) then
	NEW.nr_seq_classif_trib := nr_seq_classif_trib_w;
end if;

if (NEW.nr_seq_lote_fornec is not null)  then
	BEGIN
	select	coalesce(nr_seq_marca,NEW.nr_seq_marca)
	into STRICT	NEW.nr_seq_marca
	from	material_lote_fornec
	where	nr_sequencia = NEW.nr_seq_lote_fornec;
	exception
	when others then

		null;
	end;
end if;
end if;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_nota_fiscal_item_atual() FROM PUBLIC;

CREATE TRIGGER nota_fiscal_item_atual
	BEFORE INSERT OR UPDATE ON nota_fiscal_item FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_nota_fiscal_item_atual();

