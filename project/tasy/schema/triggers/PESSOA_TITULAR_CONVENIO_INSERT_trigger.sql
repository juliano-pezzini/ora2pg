-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pessoa_titular_convenio_insert ON pessoa_titular_convenio CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pessoa_titular_convenio_insert() RETURNS trigger AS $BODY$
declare
ds_param_integ_hl7_w	varchar(500);
nr_prioridade_w		pessoa_titular_convenio.nr_prioridade%type;
qt_pessoa_fisica_w      bigint;
cd_pessoa_fisica_w      pessoa_titular_convenio.cd_pessoa_fisica%type;
ds_error_w	            varchar(254);
qt_newborn_w            bigint;

pragma autonomous_transaction;	
	
BEGIN

    if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') in ('de_DE', 'de_AT'))then
        if (NEW.nr_prioridade is null) then
            select	max(c.nr_prioridade_padrao)
            into STRICT	nr_prioridade_w
            from 	convenio c
            where	c.cd_convenio = NEW.cd_convenio;

            if (nr_prioridade_w is null)then
                select  coalesce(max(ptc.nr_prioridade),0)
                into STRICT   	nr_prioridade_w
                from    pessoa_titular_convenio ptc,
                    convenio  c
                where   ptc.cd_convenio = c.cd_convenio
                and     c.ie_tipo_convenio <> 1
                and     ptc.cd_pessoa_fisica = NEW.cd_pessoa_fisica;

                if (nr_prioridade_w < 9999) then
                    nr_prioridade_w := nr_prioridade_w + 1;
                end if;			
            end if;

            NEW.nr_prioridade := nr_prioridade_w;
        end if;

        select  count(*) qt_pessoa_fisica,
                max(cd_pessoa_fisica) cd_pessoa_fisica
        into STRICT    qt_pessoa_fisica_w,
                cd_pessoa_fisica_w
        from (  SELECT  ptc.cd_usuario_convenio,
                        ptc.cd_pessoa_fisica
                from    pessoa_titular_convenio ptc,
                        pessoa_fisica_egk pfe
                        ,atendimento_paciente ap
                where   ptc.cd_usuario_convenio = pfe.versicherten_id
                and     ptc.cd_usuario_convenio =  NEW.cd_usuario_convenio
                and pfe.ie_tipo_cartao = '1'
                and ap.cd_pessoa_fisica=ptc.cd_pessoa_fisica
                and ap.nr_seq_tipo_admissao_fat<>9
                and ap.nr_seq_classificacao<>13
                        group by    ptc.cd_usuario_convenio,
                                    ptc.cd_pessoa_fisica
                        order by ptc.cd_usuario_convenio) alias2;

        select count(*)
        into STRICT   qt_newborn_w
        from   atendimento_paciente ap
        where  ap.cd_pessoa_fisica=NEW.cd_pessoa_fisica
        and    ap.nr_seq_tipo_admissao_fat = 9
        and    ap.nr_seq_classificacao = 13;

        if (qt_pessoa_fisica_w > 0 and cd_pessoa_fisica_w <> NEW.cd_pessoa_fisica and qt_newborn_w = 0 )then
            ds_error_w := obter_desc_expressao(972995);
            ds_error_w := replace(ds_error_w, '#@CD_USUARIO_CONVENIO#@', NEW.cd_usuario_convenio);
            ds_error_w := replace(ds_error_w, '#@CD_PESSOA_FISICA#@', cd_pessoa_fisica_w);
            CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_error_w);
        end if;

    end if;


commit;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pessoa_titular_convenio_insert() FROM PUBLIC;

CREATE TRIGGER pessoa_titular_convenio_insert
	BEFORE INSERT OR UPDATE ON pessoa_titular_convenio FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pessoa_titular_convenio_insert();

