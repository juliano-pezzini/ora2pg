-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS tie_hl7_his_pdf_integracao ON laudo_paciente_pdf_serial CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_tie_hl7_his_pdf_integracao() RETURNS trigger AS $BODY$
DECLARE
    cd_pessoa_fisica_w     laudo_paciente.cd_pessoa_fisica%TYPE;
    nm_paciente_w          pessoa_fisica.nm_pessoa_fisica%TYPE;
    nr_acesso_dicom_w      prescr_procedimento.nr_acesso_dicom%TYPE;
    cd_procedimento_w      prescr_procedimento.cd_procedimento%TYPE;
    ds_procedimento_w      procedimento.ds_procedimento%TYPE;
    cd_medico_resp_w       laudo_paciente.cd_medico_resp%TYPE;
    nm_medico_w            pessoa_fisica.nm_pessoa_fisica%TYPE;
    nr_crm_w               medico.nr_crm%TYPE;
    uf_crm_w               medico.uf_crm%TYPE;
    nr_seq_interno_w       prescr_procedimento.nr_seq_interno%TYPE;
    dt_laudo_w             laudo_paciente.dt_laudo%TYPE;
    ds_pedido_ext_w        prescr_medica.ds_pedido_ext%TYPE;
    cd_estabelecimento_w   prescr_medica.cd_estabelecimento%TYPE;
    nr_prescricao_w        laudo_paciente.nr_prescricao%TYPE;
    nr_seq_prescricao_w    laudo_paciente.nr_seq_prescricao%TYPE;
    cd_externo_laudo_w     laudo_paciente.cd_laudo_externo%TYPE;

    FUNCTION iso_formatter(
        date_in IN timestamp
    ) RETURN text IS
        date_w varchar(23);
BEGIN
  BEGIN
    CALL gravar_log_tasy(49596, 'TIE_HL7_HIS_PDF_INTEGRACAO - INPUT ISO_FORMATTER', NEW.nm_usuario);
        IF ( dt_laudo_w IS NOT NULL ) THEN
            date_w := pkg_date_utils.get_isoformat(date_in) || 'Z';
        END IF;
    CALL gravar_log_tasy(49596, 'TIE_HL7_HIS_PDF_INTEGRACAO - END ISO_FORMATTER - DATE_W: ' || date_w, NEW.nm_usuario);
        RETURN date_w;
    END;

    PROCEDURE PROCESS_EVENT_SEND_REPORT IS
        json_w        philips_json := philips_json();
        json_data_w   CLOB;
    BEGIN

     CALL gravar_log_tasy(49596, 'TIE_HL7_HIS_PDF_INTEGRACAO - INPUT PROCESS_EVENT_SEND_REPORT', NEW.nm_usuario);

        json_w.put(pair_name => 'patientCode', pair_value => cd_pessoa_fisica_w);
        json_w.put(pair_name => 'patientName', pair_value => nm_paciente_w);
        json_w.put(pair_name => 'accessNumber', pair_value => nr_acesso_dicom_w);
        json_w.put(pair_name => 'procedureCode', pair_value => cd_procedimento_w);
        json_w.put(pair_name => 'procedureDescription', pair_value => ds_procedimento_w);
        json_w.put(pair_name => 'physicianChargeID', pair_value => cd_medico_resp_w);
        json_w.put(pair_name => 'physisianName', pair_value => nm_medico_w);
        json_w.put(pair_name => 'licenseNumber', pair_value => nr_crm_w);
        json_w.put(pair_name => 'federatedStateLicense', pair_value => uf_crm_w);
        json_w.put(pair_name => 'internalProcedure', pair_value => nr_seq_interno_w);
        json_w.put(pair_name => 'externalReportCode', pair_value => cd_externo_laudo_w);
        json_w.put(pair_name => 'reportDateRelease', pair_value => iso_formatter(dt_laudo_w));
        json_w.put(pair_name => 'orderNumber', pair_value => ds_pedido_ext_w);
        json_w.put(pair_name => 'sequenceProcedure', pair_value => nr_seq_prescricao_w);
        json_w.put(pair_name => 'establishment', pair_value => cd_estabelecimento_w);
        json_w.put(pair_name => 'sequenceReportPDFNew', pair_value => NEW.nr_sequencia);
        json_w.put(pair_name => 'identifierMessage', pair_value => 'PDF_SERIAL');
        dbms_lob.createtemporary(json_data_w, true);
        json_w.(json_data_w);

        CALL gravar_log_tasy(49596, 'TIE_HL7_HIS_PDF_INTEGRACAO - 1.JSON_DATA_W: ' || json_data_w, NEW.nm_usuario);

        json_data_w := bifrost.send_integration_content(nm_event => 'send.hl7.tasy_integration_report', ds_content => json_data_w, nm_user => NEW.nm_usuario);

        CALL gravar_log_tasy(49596, 'TIE_HL7_HIS_PDF_INTEGRACAO - 2.JSON_DATA_W: ' || json_data_w, NEW.nm_usuario);

    END;

BEGIN
    CALL gravar_log_tasy(49596, 'TIE_HL7_HIS_PDF_INTEGRACAO - INPUT', NEW.nm_usuario);

    IF ( wheb_usuario_pck.get_ie_executar_trigger = 'S' ) THEN
        BEGIN
            SELECT
                cd_pessoa_fisica,
                nm_paciente,
                nr_acesso_dicom,
                cd_procedimento,
                ds_procedimento,
                cd_medico_resp,
                nm_medico,
                nr_crm,
                uf_crm,
                nr_seq_interno,
                dt_laudo,
                ds_pedido_ext,
                cd_estabelecimento,
                nr_prescricao,
                nr_seq_prescricao
            INTO STRICT
                cd_pessoa_fisica_w,
                nm_paciente_w,
                nr_acesso_dicom_w,
                cd_procedimento_w,
                ds_procedimento_w,
                cd_medico_resp_w,
                nm_medico_w,
                nr_crm_w,
                uf_crm_w,
                nr_seq_interno_w,
                dt_laudo_w,
                ds_pedido_ext_w,
                cd_estabelecimento_w,
                nr_prescricao_w,
                nr_seq_prescricao_w
            FROM (
                    SELECT
                        a.cd_pessoa_fisica     cd_pessoa_fisica,
                        obter_dados_pf(a.cd_pessoa_fisica, 'PNC') nm_paciente,
                        b.ds_integracao        nr_acesso_dicom,
                        b.cd_procedimento      cd_procedimento,
                        obter_desc_procedimento(b.cd_procedimento, b.ie_origem_proced) ds_procedimento,
                        a.cd_medico_resp       cd_medico_resp,
                        obter_dados_pf(a.cd_medico_resp, 'PNC') nm_medico,
                        obter_dados_medico(a.cd_medico_resp, 'CRM') nr_crm,
                        obter_dados_medico(a.cd_medico_resp, 'UFCRM') uf_crm,
                        b.nr_seq_interno       nr_seq_interno,
                        a.dt_laudo             dt_laudo,
                        c.ds_pedido_ext        ds_pedido_ext,
                        c.cd_estabelecimento   cd_estabelecimento,
                        b.nr_prescricao        nr_prescricao,
                        b.nr_sequencia         nr_seq_prescricao
                    FROM
                        laudo_paciente        a,
                        prescr_procedimento   b,
                        prescr_medica         c
                    WHERE
                        a.nr_sequencia = NEW.nr_seq_laudo
                        AND b.ds_integracao = NEW.nr_acesso_dicom
						AND a.ie_formato in (3,4,5)
                        AND a.nr_prescricao = b.nr_prescricao
                        AND a.nr_seq_prescricao = b.nr_sequencia
                        AND b.nr_prescricao = c.nr_prescricao
                    ORDER BY
                        a.dt_atualizacao
                ) alias7 LIMIT 1;

            SELECT
                nextval('tie_integra_laudo_hl7_seq')
            INTO STRICT cd_externo_laudo_w
;

        EXCEPTION
            WHEN no_data_found THEN
                CALL gravar_log_tasy(49596, 'TIE_HL7_HIS_PDF_INTEGRACAO - No data found for sequence: ' || NEW.nr_sequencia, NEW.nm_usuario);
            WHEN OTHERS THEN
                CALL gravar_log_tasy(49596, 'TIE_HL7_HIS_PDF_INTEGRACAO - Error occur for sequence: ' || NEW.nr_sequencia, NEW.nm_usuario);
        END;

        CALL gravar_log_tasy(49596, 'TIE_HL7_HIS_PDF_INTEGRACAO - nr_prescricao_w: ' || nr_prescricao_w
                                                   || ' nr_seq_prescricao_w: '  || nr_seq_prescricao_w 
                                                   || ' cd_estabelecimento_w: ' || cd_estabelecimento_w, NEW.nm_usuario);

        IF ( nr_prescricao_w IS NOT NULL AND nr_seq_prescricao_w IS NOT NULL AND cd_estabelecimento_w IS NOT NULL ) THEN
            process_event_send_report;
        END IF;

    END IF;
  END;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_tie_hl7_his_pdf_integracao() FROM PUBLIC;

CREATE TRIGGER tie_hl7_his_pdf_integracao
	AFTER INSERT OR UPDATE ON laudo_paciente_pdf_serial FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_tie_hl7_his_pdf_integracao();

