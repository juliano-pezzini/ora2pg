-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS emprestimo_atual ON emprestimo CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_emprestimo_atual() RETURNS trigger AS $BODY$
declare

ie_acao_w			varchar(1);
ie_disp_emprestimo_lib_w	parametro_estoque.ie_disp_emprestimo_lib%type;
cd_material_w			emprestimo_material.cd_material%type;
nr_seq_lote_w			emprestimo_material.nr_seq_lote%type;
qt_material_w			emprestimo_material.qt_material%type;

cd_material_ww			emprestimo_material.cd_material%type;
nr_seq_lote_ww			emprestimo_material.nr_seq_lote%type;
qt_material_ww			emprestimo_material.qt_material%type;

ie_erro_w			varchar(255);
ie_atualizou_lote_w		varchar(1);
ie_gerar_w			varchar(1);
ie_quantidade_w			varchar(15);
ie_desdobrado_w			varchar(1);

C01 CURSOR FOR
SELECT	b.cd_material_estoque,
	nr_seq_lote,
	qt_material
from	emprestimo_material a,
	material b
where	a.cd_material = b.cd_material
and	a.nr_emprestimo = NEW.nr_emprestimo;

C02 CURSOR FOR
SELECT	b.cd_material_estoque,
	a.nr_sequencia,
	a.qt_material
from	material_lote_fornec a,
	material b
where	a.cd_material = b.cd_material
and	a.cd_material = cd_material_w
and	a.nr_emprestimo = NEW.nr_emprestimo;

BEGIN
if (OLD.dt_liberacao is not null) and (NEW.dt_liberacao is null) then
	BEGIN
	select	max(ie_disp_emprestimo_lib)
	into STRICT	ie_disp_emprestimo_lib_w
	from	parametro_estoque
	where	cd_estabelecimento = NEW.cd_estabelecimento;

	if (NEW.ie_tipo = 'E') then
		ie_acao_w	:=	'1';
	else
		ie_acao_w	:=	'2';
	end if;

	if (ie_disp_emprestimo_lib_w = 'S') then
		BEGIN
		open C01;
		loop
		fetch C01 into
			cd_material_w,
			nr_seq_lote_w,
			qt_material_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			BEGIN
			ie_atualizou_lote_w	:=	'N';

			SELECT * FROM obter_regra_empr_lote_fornec(
				cd_material_w, NEW.cd_estabelecimento, ie_gerar_w, ie_quantidade_w, ie_desdobrado_w) INTO STRICT ie_gerar_w, ie_quantidade_w, ie_desdobrado_w;

			if (ie_desdobrado_w = 'S') then
				open C02;
				loop
				fetch C02 into
					cd_material_ww,
					nr_seq_lote_ww,
					qt_material_ww;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					BEGIN
					ie_erro_w := atualizar_saldo_lote(
						NEW.cd_estabelecimento, NEW.cd_local_estoque, cd_material_ww, trunc(LOCALTIMESTAMP,'mm'), nr_seq_lote_ww, 0, qt_material_ww, ie_acao_w, NEW.nm_usuario, ie_erro_w);

					ie_atualizou_lote_w	:=	'S';
					end;
				end loop;
				close C02;
			end if;

			if (ie_atualizou_lote_w = 'N') then
				ie_erro_w := atualizar_saldo_lote(
					NEW.cd_estabelecimento, NEW.cd_local_estoque, cd_material_w, trunc(LOCALTIMESTAMP,'mm'), nr_seq_lote_w, 0, qt_material_w, ie_acao_w, NEW.nm_usuario, ie_erro_w);
			end if;


			end;
		end loop;
		close C01;
		end;
	end if;
	end;
end if;

RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_emprestimo_atual() FROM PUBLIC;

CREATE TRIGGER emprestimo_atual
	BEFORE UPDATE ON emprestimo FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_emprestimo_atual();

