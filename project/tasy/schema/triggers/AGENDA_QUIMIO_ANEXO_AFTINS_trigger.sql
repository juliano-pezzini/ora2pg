-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS agenda_quimio_anexo_aftins ON agenda_quimio_anexo CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_agenda_quimio_anexo_aftins() RETURNS trigger AS $BODY$
declare

ds_texto_w				varchar(255);
nr_sequencia_autor_w	autorizacao_convenio.nr_sequencia%type;
nr_seq_paciente_w		paciente_atendimento.nr_seq_paciente%type;
ie_gerar_anexo_w		parametro_agenda_quimio.ie_gerar_anexo_aut_conv%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia
	from	autorizacao_convenio a
	where	a.nr_seq_paciente_setor = nr_seq_paciente_w
	and	not exists (	SELECT 1
				from	autorizacao_convenio_arq x
				where	x.nr_sequencia_autor = a.nr_sequencia
				and		x.ds_arquivo	     = NEW.ds_arquivo);

BEGIN

select	coalesce(max(ie_gerar_anexo_aut_conv),'N')
into STRICT	ie_gerar_anexo_w
from	parametro_agenda_quimio
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

if (ie_gerar_anexo_w = 'S') then
	BEGIN

	ds_texto_w := substr(wheb_mensagem_pck.get_texto(333914),1,255); --Registro gerado pela Agenda de Quimioterapia.
	select	max(b.nr_seq_paciente)
	into STRICT	nr_seq_paciente_w
	from	agenda_quimio a,
			paciente_atendimento b
	where 	a.nr_seq_atendimento = b.nr_seq_atendimento
	and		a.nr_sequencia = NEW.nr_seq_agenda_quimio;

	if (nr_seq_paciente_w is not null) then
		BEGIN

		open C01;
		loop
		fetch C01 into
			nr_sequencia_autor_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			BEGIN

			insert	into autorizacao_convenio_arq(
				ds_arquivo,
				ds_observacao,
				dt_atualizacao,
				dt_atualizacao_nrec,
				ie_anexar_email,
				nm_usuario,
				nm_usuario_nrec,
				nr_sequencia,
				nr_sequencia_autor)
			values (
				substr(NEW.ds_arquivo,1,254),
				ds_texto_w,
				LOCALTIMESTAMP,
				LOCALTIMESTAMP,
				'N',
				wheb_usuario_pck.get_nm_usuario,
				wheb_usuario_pck.get_nm_usuario,
				nextval('autorizacao_convenio_arq_seq'),
				nr_sequencia_autor_w);

			end;
		end loop;
		close C01;

		end;
	end if;

	end;
end if;

RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_agenda_quimio_anexo_aftins() FROM PUBLIC;

CREATE TRIGGER agenda_quimio_anexo_aftins
	AFTER INSERT ON agenda_quimio_anexo FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_agenda_quimio_anexo_aftins();

