-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pls_cad_inconsist_pes_update ON pls_cad_inconsist_pessoa CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pls_cad_inconsist_pes_update() RETURNS trigger AS $BODY$
declare
i			smallint;
nm_campo_w		varchar(255)	:= '';
vl_anterior_w		varchar(255)	:= '';
vl_atual_w		varchar(255)	:= '';

BEGIN

for i in 1..10 loop
	BEGIN
	if (OLD.cd_inconsistencia  is not null) and (OLD.cd_inconsistencia  <> NEW.cd_inconsistencia ) and (i = 1) then
		nm_campo_w	:= 'CD_INCONSISTENCIA';
		vl_anterior_w	:= OLD.cd_inconsistencia;
		vl_atual_w	:= NEW.cd_inconsistencia;
	end if;

	if (OLD.ds_acao_usuario is not null) and (OLD.ds_acao_usuario <> NEW.ds_acao_usuario) and (i = 2) then
		nm_campo_w	:= 'DS_ACAO_USUARIO';
		vl_anterior_w	:= OLD.ds_acao_usuario;
		vl_atual_w	:= NEW.ds_acao_usuario;
	end if;

	if (OLD.ds_inconsistencia is not null) and (OLD.ds_inconsistencia <> NEW.ds_inconsistencia) and (i = 3) then
		nm_campo_w	:= 'DS_INCONSISTENCIA';
		vl_anterior_w	:= OLD.ds_inconsistencia;
		vl_atual_w	:= NEW.ds_inconsistencia;
	end if;

	if (OLD.ie_beneficiario is not null) and (OLD.ie_beneficiario <> NEW.ie_beneficiario) and (i = 4) then
		nm_campo_w	:= 'IE_BENEFICIARIO';
		vl_anterior_w	:= OLD.ie_beneficiario;
		vl_atual_w	:= NEW.ie_beneficiario;
	end if;

	if (OLD.ie_estipulante is not null) and (OLD.ie_estipulante <> NEW.ie_estipulante) and (i = 5) then
		nm_campo_w	:= 'IE_ESTIPULANTE';
		vl_anterior_w	:= OLD.ie_estipulante;
		vl_atual_w	:= NEW.ie_estipulante;
	end if;

	if (OLD.ie_pagador is not null) and (OLD.ie_pagador <> NEW.ie_pagador) and (i = 6) then
		nm_campo_w	:= 'IE_PAGADOR';
		vl_anterior_w	:= OLD.ie_pagador;
		vl_atual_w	:= NEW.ie_pagador;
	end if;

	if (OLD.ie_pessoa_fisica is not null) and (OLD.ie_pessoa_fisica <> NEW.ie_pessoa_fisica) and (i = 7) then
		nm_campo_w	:= 'IE_PESSOA_FISICA';
		vl_anterior_w	:= OLD.ie_pessoa_fisica;
		vl_atual_w	:= NEW.ie_pessoa_fisica;
	end if;

	if (OLD.ie_prestador is not null) and (OLD.ie_prestador <> NEW.ie_prestador) and (i = 8) then
		nm_campo_w	:= 'IE_PRESTADOR';
		vl_anterior_w	:= OLD.ie_prestador;
		vl_atual_w	:= NEW.ie_prestador;
	end if;

	if (OLD.ie_situacao is not null) and (OLD.ie_situacao <> NEW.ie_situacao) and (i = 9) then
		nm_campo_w	:= 'IE_SITUACAO';
		vl_anterior_w	:= OLD.ie_situacao;
		vl_atual_w	:= NEW.ie_situacao;
	end if;

	if (OLD.ie_tipo_pessoa is not null) and (OLD.ie_tipo_pessoa <> NEW.ie_tipo_pessoa) and (i = 10) then
		nm_campo_w	:= 'IE_TIPO_PESSOA';
		vl_anterior_w	:= OLD.ie_tipo_pessoa;
		vl_atual_w	:= NEW.ie_tipo_pessoa;
	end if;

	if (nm_campo_w is not null) then
		insert into pls_cad_inc_pes_log_alt(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_estabelecimento,
			nm_campo,
			vl_anterior,
			vl_atual,
			cd_inconsistencia)
		values (nextval('pls_cad_inc_pes_log_alt_seq'),
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			NEW.cd_estabelecimento,
			nm_campo_w,
			vl_anterior_w,
			vl_atual_w,
			OLD.cd_inconsistencia);

		nm_campo_w	:= '';
	end if;
	end;
end loop;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pls_cad_inconsist_pes_update() FROM PUBLIC;

CREATE TRIGGER pls_cad_inconsist_pes_update
	AFTER UPDATE ON pls_cad_inconsist_pessoa FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pls_cad_inconsist_pes_update();

