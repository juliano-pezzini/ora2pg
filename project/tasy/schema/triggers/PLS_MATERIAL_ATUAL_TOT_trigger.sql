-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pls_material_atual_tot ON pls_material CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pls_material_atual_tot() RETURNS trigger AS $BODY$
declare
nr_seq_material_w	pls_material.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_grupo
	from	pls_preco_grupo_material a
	where	exists (SELECT	1
			from	pls_preco_material b
			where	a.nr_sequencia = b.nr_seq_grupo
			and	b.nr_seq_estrutura_mat is not null);
BEGIN

-- se existir diferença de estrutura, manda atualizar a tabela que grava a estrutura e os materiais
if (coalesce(NEW.nr_seq_estrut_mat, -1) != coalesce(OLD.nr_seq_estrut_mat, -1)) then

	 -- se tiver novo valor usa ele, senão busca do antigo
	 nr_seq_material_w := null;
	 if (NEW.nr_sequencia is not null) then
		nr_seq_material_w := NEW.nr_sequencia;
	 elsif (OLD.nr_sequencia is not null) then
		nr_seq_material_w := OLD.nr_sequencia;
	 end if;

	-- marca para atualizar todos grupos de materiais que possuam pelo menos uma estrutura informada
	for r_c01_w in c01 loop
		CALL pls_gerencia_upd_obj_pck.marcar_para_atualizacao(	'PLS_GRUPO_MATERIAL_TM',
									wheb_usuario_pck.get_nm_usuario,
									'PLS_MATERIAL_ATUAL_TOT',
									'nr_seq_grupo_p=' || r_c01_w.nr_seq_grupo);
	end loop;

	if (nr_seq_material_w is not null) then
		CALL pls_gerencia_upd_obj_pck.marcar_para_atualizacao(	'PLS_ESTRUTURA_MATERIAL_TM',
									wheb_usuario_pck.get_nm_usuario,
									'PLS_MATERIAL_ATUAL_TOT',
									'nr_seq_material_p=' || nr_seq_material_w);

		if (not TG_OP = 'INSERT') then
			CALL pls_gerencia_upd_obj_pck.marcar_para_atualizacao(	'PLS_ESTRUTURA_OCOR_TM',
										wheb_usuario_pck.get_nm_usuario,
										'PLS_MATERIAL_ATUAL_TOT',
										'nr_seq_material_p=' || nr_seq_material_w);
		end if;
	end if;
end if;

-- se for atualização ou insert
-- tratamento para melhorar a performance durante a busca de materiais OPS nesta tabela
if (TG_OP = 'INSERT' or TG_OP = 'UPDATE') then

	-- Se a data de inclusão for maior que a data de exclusão, exibi a mensagem
	if (NEW.dt_exclusao is not null) and (NEW.dt_exclusao <= NEW.dt_inclusao) then -- removido o Trunc, pois em alguns cadastro do A900, pode acontecer da exclusão ser no mesmo dia que a inclusão(!), por isto tem que considerar a hora
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1033387,'NR_SEQ_MATERIAL_P='||to_char(NEW.nr_sequencia)||';DT_EXCLUSAO_P='||to_char(NEW.dt_exclusao, 'dd/mm/yyyy hh24:mi:ss')||';'); -- A data de exclusão deve ser maior que a data de inclusão.
	end if;

	-- se mudou o material
	if (coalesce(NEW.cd_material_ops, '-1') != coalesce(OLD.cd_material_ops, '-1')) then
		NEW.cd_material_ops_number := pls_util_pck.converte_para_numero(NEW.cd_material_ops);
	end if;

	-- se mudou alguma data
	if	((coalesce(NEW.dt_limite_utilizacao, to_date('30/12/1899', 'dd/mm/yyyy')) != coalesce(OLD.dt_limite_utilizacao, to_date('30/12/1899', 'dd/mm/yyyy'))) or (coalesce(NEW.dt_exclusao, to_date('30/12/1899', 'dd/mm/yyyy')) != coalesce(OLD.dt_exclusao, to_date('30/12/1899', 'dd/mm/yyyy')))) then
		NEW.dt_referencia := coalesce(NEW.dt_limite_utilizacao, NEW.dt_exclusao);
	end if;
end if;

IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pls_material_atual_tot() FROM PUBLIC;

CREATE TRIGGER pls_material_atual_tot
	BEFORE INSERT OR UPDATE OR DELETE ON pls_material FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pls_material_atual_tot();

