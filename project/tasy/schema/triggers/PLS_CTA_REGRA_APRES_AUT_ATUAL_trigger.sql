-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pls_cta_regra_apres_aut_atual ON pls_cta_regra_apres_aut CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pls_cta_regra_apres_aut_atual() RETURNS trigger AS $BODY$
declare

ie_acao_w		varchar(255);
nr_mes_w		integer := 0;
dt_execucao_w		timestamp;
dt_proxima_exec_w	varchar(255);
hr_exec_w		varchar(10);

BEGIN
if (TG_OP = 'INSERT') then
	ie_acao_w := 'I';

elsif (TG_OP = 'UPDATE') then
	ie_acao_w := 'U';

elsif (TG_OP = 'DELETE') then
	ie_acao_w := 'D';
end if;

if (NEW.dt_exec_proc is not null) then
	hr_exec_w := to_char(NEW.dt_exec_proc, 'hh24:mi:ss');
else
	hr_exec_w := to_char((fim_dia(LOCALTIMESTAMP) - 1/3072), 'hh24:mi:ss');
end if;

if (NEW.ie_forma_geracao = 'M') then

	if	(((trunc(LOCALTIMESTAMP,'month') + NEW.nr_dia_geracao) - 1) < trunc(LOCALTIMESTAMP)) then
		nr_mes_w := + 1;
	end if;

	dt_execucao_w		:= to_date(to_char(to_char(add_months(((trunc(LOCALTIMESTAMP,'month') + NEW.nr_dia_geracao) - 1),nr_mes_w),'dd/mm/yyyy') || ' ' || hr_exec_w), 'dd/mm/yyyy hh24:mi:ss');
	dt_proxima_exec_w	:= 'add_months(to_date(to_char(to_char(add_months(((trunc(sysdate,''month'') + ' || NEW.nr_dia_geracao || ') - 1),' || nr_mes_w || '),''dd/mm/yyyy'') || '' '' || ''' || hr_exec_w || '''), ''dd/mm/yyyy hh24:mi:ss''),1)';

elsif (NEW.ie_forma_geracao = 'D') then

	dt_execucao_w 		:= to_date((to_char(LOCALTIMESTAMP,'dd/mm/yyyy') || ' ' || hr_exec_w),'dd/mm/yyyy hh24:mi:ss');
	dt_proxima_exec_w	:= 'to_date((to_char(sysdate,''dd/mm/yyyy'') || '' '' || ''' || hr_exec_w || '''),''dd/mm/yyyy hh24:mi:ss'') + 1';
end if;

CALL pls_cta_gerar_job_regra( 	ie_acao_w,
				'PLS_CARREGA_GUIAS_LOTE_APRES',
				'PLS_CARREGA_GUIAS_LOTE_APRES('''|| to_char(NEW.nr_sequencia) || ''', ''' || to_char(NEW.cd_estabelecimento) || ''', ''' || NEW.nm_usuario_nrec || ''');',
				dt_execucao_w,
				dt_proxima_exec_w,
				NEW.ie_situacao);
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pls_cta_regra_apres_aut_atual() FROM PUBLIC;

CREATE TRIGGER pls_cta_regra_apres_aut_atual
	BEFORE INSERT OR UPDATE OR DELETE ON pls_cta_regra_apres_aut FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pls_cta_regra_apres_aut_atual();

