-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS ctb_documento_before_update ON ctb_documento CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_ctb_documento_before_update() RETURNS trigger AS $BODY$
declare
    ie_start_date  constant timestamp := LOCALTIMESTAMP + interval '5 days' / 86400;
    ds_job_name    constant varchar(25)  := 'DOC_PENDENTE_' || NEW.nr_sequencia;
    ds_job_type    constant varchar(25)  := 'PLSQL_BLOCK';
    ds_job_action  constant varchar(255) := 'BEGIN '||
                                                    ' philips_param_pck.set_nr_seq_idioma('||coalesce(philips_param_pck.get_nr_seq_idioma,1)||');'||
                                                    ' CTB_CONTAB_ONL_LOTE_FIN_PCK.CTB_CONTABILIZA_DOCUMENTO(null,'''
                                                  || NEW.nm_usuario || ''',' || NEW.nr_sequencia ||'); END;';

   pragma autonomous_transaction;

BEGIN
    if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
        if  (NEW.ie_situacao_ctb = ctb_online_pck.ds_contabilizado and
            ((OLD.vl_movimento <> NEW.vl_movimento) or (OLD.dt_competencia <> NEW.dt_competencia) or (OLD.nr_seq_trans_financ <> NEW.nr_seq_trans_financ))) then
                NEW.ie_situacao_ctb    := ctb_online_pck.ds_pendente;
                NEW.nr_lote_contabil   := 0;
                NEW.dt_atualizacao     := LOCALTIMESTAMP;

                dbms_scheduler.create_job(  job_name   => ds_job_name,
                                            job_type   => ds_job_type,
                                            job_action => ds_job_action,
                                            start_date => ie_start_date,
                                            auto_drop  => TRUE,
                                            enabled    => TRUE);
        end if;
    end if;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_ctb_documento_before_update() FROM PUBLIC;

CREATE TRIGGER ctb_documento_before_update
	BEFORE UPDATE OF vl_movimento,dt_competencia,nr_seq_trans_financ ON ctb_documento FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_ctb_documento_before_update();

