-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS conta_paciente_afterupdate ON conta_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_conta_paciente_afterupdate() RETURNS trigger AS $BODY$
DECLARE


nr_sequencia_w			bigint;
ie_historico_w			varchar(01);
dt_alta_w			timestamp;
dt_referencia_w			timestamp;
qt_historico_w			bigint;
cd_funcao_w			integer;
ie_atualiza_dt_contab_prot_w	varchar(1)	:= 'N';
dt_conta_protocolo_w		timestamp;

ds_module_log_w conta_paciente_hist.ds_module%type;
ds_call_stack_w conta_paciente_hist.ds_call_stack%type;

BEGIN
/*Matheus  - OS 184506 Atribui para variavel para evitar erro do ORACLE */


dt_conta_protocolo_w	:= NEW.dt_conta_protocolo;

select 	coalesce(max(ie_historico_conta),'N')
into STRICT	ie_historico_w
from	parametro_faturamento
where	cd_estabelecimento	= NEW.cd_estabelecimento;

if (ie_historico_w	= 'S') then
	select	obter_funcao_ativa
	into STRICT	cd_funcao_w
	;
end if;

if (NEW.ie_status_acerto = 1) and (coalesce(NEW.nr_seq_protocolo,0) > 0) then
	-- A conta esta com status provisorio, nao pode ser inserida em um protocolo

	CALL Wheb_mensagem_pck.exibir_mensagem_abort(184237);
end if;

select	substr(max(module||' - ' || machine||' - ' || program|| ' - ' || osuser|| ' - ' || terminal),1,255)
into STRICT	ds_module_log_w
from	v$session
where	audsid = (SELECT userenv('sessionid') );

if (NEW.ie_status_acerto = 1) and (OLD.ie_status_acerto = 2) and (ie_historico_w = 'S') then
	select	dt_alta
	into STRICT	dt_alta_w
	from	atendimento_paciente
	where	nr_atendimento	= NEW.nr_atendimento;
	select	nextval('conta_paciente_hist_seq')
	into STRICT	nr_sequencia_w
	;
	
	ds_call_stack_w	:= substr(dbms_utility.format_call_stack,1,1800);
		
	insert into conta_paciente_hist(
		nr_sequencia, dt_atualizacao, nm_usuario,
		vl_conta, nr_seq_protocolo, nr_interno_conta,
		nr_nivel_anterior, nr_nivel_atual, dt_referencia,
		nr_atendimento, cd_convenio, dt_conta_protocolo,
		cd_funcao, ds_module, ds_call_stack)
	values (
		nr_sequencia_w, LOCALTIMESTAMP, NEW.nm_usuario,
		coalesce(NEW.vl_conta, 0), NEW.nr_seq_protocolo, NEW.nr_interno_conta,
		6, CASE WHEN dt_alta_w IS NULL THEN 2  ELSE 4 END  , trunc(LOCALTIMESTAMP,'dd'),
		NEW.nr_atendimento, NEW.cd_convenio_parametro, dt_conta_protocolo_w,
		cd_funcao_w, ds_module_log_w, ds_call_stack_w);
elsif (NEW.ie_status_acerto = 2) and (OLD.ie_status_acerto = 1) and (ie_historico_w = 'S') then
	/*select	count(*)
	into	qt_historico_w
	from	conta_paciente_hist
	where	nr_interno_conta	= :new.nr_interno_conta;
	if	(qt_historico_w > 0) then*/

		select	nextval('conta_paciente_hist_seq')
		into STRICT	nr_sequencia_w
		;
		
		ds_call_stack_w	:= substr(dbms_utility.format_call_stack,1,1800);
		
		insert into conta_paciente_hist(
			nr_sequencia, dt_atualizacao, nm_usuario,
			vl_conta, nr_seq_protocolo, nr_interno_conta,
			nr_nivel_anterior, nr_nivel_atual, dt_referencia,
			nr_atendimento, cd_convenio, dt_conta_protocolo,
			cd_funcao, ds_module, ds_call_stack)
		values (
			nr_sequencia_w, LOCALTIMESTAMP, NEW.nm_usuario,
			coalesce(NEW.vl_conta, 0), NEW.nr_seq_protocolo, NEW.nr_interno_conta,
			4, 6, trunc(LOCALTIMESTAMP,'dd'),
			NEW.nr_atendimento, NEW.cd_convenio_parametro, dt_conta_protocolo_w,
			cd_funcao_w, ds_module_log_w, ds_call_stack_w);
/*	end if;*/


elsif (NEW.ie_status_acerto = 2) and (OLD.ie_status_acerto = 2) and (coalesce(NEW.nr_seq_protocolo,0) <> coalesce(OLD.nr_seq_protocolo,0)) and (ie_historico_w = 'S') then
	select	nextval('conta_paciente_hist_seq')
	into STRICT	nr_sequencia_w
	;
	
	ds_call_stack_w	:= substr(dbms_utility.format_call_stack,1,1800);
	
	insert into conta_paciente_hist(
		nr_sequencia, dt_atualizacao, nm_usuario,
		vl_conta, nr_seq_protocolo, nr_interno_conta,
		nr_nivel_anterior, nr_nivel_atual, dt_referencia,
		nr_atendimento, cd_convenio, dt_conta_protocolo,
		cd_funcao, ds_module, ds_call_stack)
	values (
		nr_sequencia_w, LOCALTIMESTAMP, NEW.nm_usuario,
		coalesce(NEW.vl_conta, 0), NEW.nr_seq_protocolo, NEW.nr_interno_conta,
		CASE WHEN OLD.nr_seq_protocolo IS NULL THEN 6  ELSE 8 END ,
		CASE WHEN NEW.nr_seq_protocolo IS NULL THEN 6  ELSE 8 END  , trunc(LOCALTIMESTAMP,'dd'),
		NEW.nr_atendimento, NEW.cd_convenio_parametro, dt_conta_protocolo_w,
		cd_funcao_w, ds_module_log_w, ds_call_stack_w);
end if;


if (NEW.cd_convenio_parametro <> OLD.cd_convenio_parametro) and (coalesce(OLD.cd_convenio_parametro,0) <> 0) and (ie_historico_w = 'S') then
	
	select	nextval('conta_paciente_hist_seq')
	into STRICT	nr_sequencia_w
	;
	
	ds_call_stack_w	:= substr(dbms_utility.format_call_stack,1,1800);
	
	insert into conta_paciente_hist(
		nr_sequencia, dt_atualizacao, nm_usuario,
		vl_conta, nr_seq_protocolo, nr_interno_conta,
		nr_nivel_anterior, nr_nivel_atual, dt_referencia,
		nr_atendimento, cd_convenio, dt_conta_protocolo,
		cd_funcao, cd_convenio_orig, ds_module, ds_call_stack)
	values (
		nr_sequencia_w, LOCALTIMESTAMP, NEW.nm_usuario,
		coalesce(NEW.vl_conta, 0), NEW.nr_seq_protocolo, NEW.nr_interno_conta,
		0, 0 , trunc(LOCALTIMESTAMP,'dd'),
		NEW.nr_atendimento, NEW.cd_convenio_parametro, dt_conta_protocolo_w,
		cd_funcao_w, OLD.cd_convenio_parametro, ds_module_log_w, ds_call_stack_w);
end if;

if (NEW.ie_status_acerto = OLD.ie_status_acerto) and (NEW.dt_mesano_referencia <> OLD.dt_mesano_referencia) then
	select	max(dt_referencia)
	into STRICT	dt_referencia_w
	from	eis_conta_paciente
	where	nr_interno_conta	= NEW.nr_interno_conta;
	if (dt_referencia_w	<> trunc(NEW.dt_mesano_referencia,'month')) then
		update eis_conta_paciente
		set	dt_referencia	=  trunc(NEW.dt_mesano_referencia,'month')
		where	nr_interno_conta	= NEW.nr_interno_conta;
	end if;
end if;

/*Francisco - 21/05/2009 - Tratar dt contabil titulo - OS 142718 */


if (NEW.dt_mesano_referencia <> OLD.dt_mesano_referencia) then	
	
	-- Feito dessa forma, colocando o comando aqui, devido a performance no update da conta_paciente_resumo que e executado na atualizacao do eis resultado.

	select 	coalesce(max(ie_atualiza_dt_contab_prot),'N')
	into STRICT	ie_atualiza_dt_contab_prot_w
	from	parametro_faturamento
	where	cd_estabelecimento	= NEW.cd_estabelecimento;
	
	if (ie_atualiza_dt_contab_prot_w = 'S') then
	
		update	titulo_receber
		set	dt_contabil	= NEW.dt_mesano_referencia
		where	nr_interno_conta	= NEW.nr_interno_conta
		and	coalesce(nr_lote_contabil,0)	= 0;
		
	end if;
end if;


RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_conta_paciente_afterupdate() FROM PUBLIC;

CREATE TRIGGER conta_paciente_afterupdate
	AFTER UPDATE ON conta_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_conta_paciente_afterupdate();

