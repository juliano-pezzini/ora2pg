-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pessoa_fisica_update_hl7 ON pessoa_fisica CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pessoa_fisica_update_hl7() RETURNS trigger AS $BODY$
declare
ds_sep_bv_w				varchar(100);
ds_param_integ_hl7_w	varchar(4000);
ie_integrado_w			varchar(1);
ie_existe_atend_w		bigint;
qt_atendimento_w		bigint;
ie_medico_w				varchar(1);
ds_guampa_w		varchar(10)	:= chr(39);
ie_condition_w varchar(1) := 'N';
	
	PROCEDURE INTEGRA_BIFROST IS
	  JSON_ADT_A08_W			PHILIPS_JSON;
	  DS_EVENT_W				varchar(100) := 'patient.changeInformation_ADT_A08';
	  DS_MESSAGE_RESPONSE_W	text;
	BEGIN
	  JSON_ADT_A08_W := PHILIPS_JSON();
	  JSON_ADT_A08_W.PUT('CD_PESSOA_FISICA', NEW.CD_PESSOA_FISICA);
	  JSON_ADT_A08_W.PUT('NM_PESSOA_FISICA', NEW.NM_PESSOA_FISICA);
	  JSON_ADT_A08_W.PUT('DT_NASCIMENTO',	NEW.DT_NASCIMENTO);
	  JSON_ADT_A08_W.PUT('IE_SEXO', NEW.IE_SEXO);
	
	  DBMS_LOB.CREATETEMPORARY(DS_MESSAGE_RESPONSE_W, TRUE);
	  JSON_ADT_A08_W.(DS_MESSAGE_RESPONSE_W);
	
	  DS_MESSAGE_RESPONSE_W := BIFROST.SEND_INTEGRATION_CONTENT(DS_EVENT_W,
																DS_MESSAGE_RESPONSE_W,
																OBTER_USUARIO_ATIVO);
	END;

  PROCEDURE HL7_ADT_47(CD_PESSOA_FISICA_P PESSOA_FISICA.CD_PESSOA_FISICA%TYPE, 
                       NR_PRONT_EXT_OLD_P PESSOA_FISICA.NR_PRONT_EXT%TYPE, 
                       NM_PESSOA_FISICA_OLD_P PESSOA_FISICA.NM_PESSOA_FISICA%TYPE) IS
    ie_use_integration_w varchar2(10);
    ds_comando_w         varchar2(4000);
    ds_guampa_w          varchar2(10) := chr(39);
    jobno                number;

  BEGIN
    ie_use_integration_w := obter_param_usuario(9041, 10, obter_perfil_ativo, NEW.NM_USUARIO, obter_estabelecimento_ativo, ie_use_integration_w);

    if (ie_use_integration_w = 'S') then
      BEGIN
        ds_comando_w	:= ' declare '||CHR(10)||
                         ' ds_result_w clob; '||CHR(10)||
                         ' ds_params_w clob; '||CHR(10)||
                         ' begin '||CHR(10)||
                         ' ds_params_w := person_json_pck.get_patient_message_clob('||CD_PESSOA_FISICA_P||');'|| CHR(10)||
                         ' ds_params_w := REPLACE(ds_params_w,'
                          ||CHR(39)||'"externalAccountNumber"'||CHR(39)
                          ||','||CHR(39)||'"externalMedicalRecordIdOld":"'
                          || NR_PRONT_EXT_OLD_P||'"'
                          ||',"patientNameOld":"'
                          || NM_PESSOA_FISICA_OLD_P||'"'
                          ||',"externalAccountNumber"'|| CHR(39)||');'||CHR(10)||

                    ' if (ds_params_w is not null) then '||
                    ' wheb_usuario_pck.set_cd_estabelecimento('||obter_estabelecimento_ativo||');' ||                    
                    ' wheb_usuario_pck.set_nm_usuario('||CHR(39)||NEW.NM_USUARIO||CHR(39)||');' ||
                    ' ds_result_w := bifrost.send_integration_content('
                    ||CHR(39)||'patient.identifier.update'||CHR(39)
                    ||',ds_params_w,'
                    ||CHR(39)||NEW.NM_USUARIO||CHR(39)||','                
                    ||CHR(39)||'N'||CHR(39)||');'||
                    ' end if; '||
                    ' end;';
      
        dbms_job.submit(jobno, ds_comando_w);
      end;
    end if;

  end;
	
BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger = 'S' ) then

	ds_sep_bv_w := obter_separador_bv;	
	
	if (OLD.dt_obito is null)
	and (NEW.dt_obito is null) then
		BEGIN
		ds_param_integ_hl7_w :=	'cd_pessoa_fisica=' || NEW.cd_pessoa_fisica || ds_sep_bv_w ||
					'nr_atendimento=0'  || ds_sep_bv_w ||
					'nr_seq_interno=0'  || ds_sep_bv_w;
		CALL gravar_agend_integracao(18, ds_param_integ_hl7_w);
		end;
	end if;
	
	if (coalesce(OLD.nm_pessoa_fisica,'X') <> NEW.nm_pessoa_fisica ) or (coalesce(OLD.ie_sexo,'X') 	<> NEW.ie_sexo) 	or (OLD.dt_nascimento 	<> NEW.dt_nascimento) 	or (coalesce(OLD.nr_identidade,'X') 	<> NEW.nr_identidade) 	or
		(OLD.dt_obito is null AND NEW.dt_obito is null) then
		BEGIN
		ds_param_integ_hl7_w :=	'cd_pessoa_fisica=' || NEW.cd_pessoa_fisica || ds_sep_bv_w;
		CALL gravar_agend_integracao(145, ds_param_integ_hl7_w);
		
		CALL Mirth_ADT_A08_atualizaao_pac(NEW.cd_pessoa_fisica);
		
		end;
	end if;
		
	if (coalesce(OLD.nm_pessoa_fisica,'X') <> coalesce(NEW.nm_pessoa_fisica,'X')) or (coalesce(OLD.dt_nascimento,LOCALTIMESTAMP) <> coalesce(NEW.dt_nascimento,LOCALTIMESTAMP)) or (coalesce(OLD.ie_sexo,'X') <> coalesce(NEW.ie_sexo,'X')) then

		select	coalesce(max('S'),'N')
		into STRICT	ie_integrado_w
		from	pf_codigo_externo
		where	cd_pessoa_fisica = NEW.cd_pessoa_fisica
		and	IE_TIPO_CODIGO_EXTERNO = 'DI'
		AND coalesce(cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento;
	
		if (ie_integrado_w = 'S') then

			ds_param_integ_hl7_w :=	'cd_pessoa_fisica=' || NEW.cd_pessoa_fisica || ds_sep_bv_w;
			CALL gravar_agend_integracao(191, ds_param_integ_hl7_w);
	
		end if;

		ds_param_integ_hl7_w :=	'cd_pessoa_fisica=' || NEW.cd_pessoa_fisica || ds_sep_bv_w;
		CALL gravar_agend_integracao(214, ds_param_integ_hl7_w);
	
	end if;
	
	if (coalesce(OLD.nm_pessoa_fisica,'X') <> coalesce(NEW.nm_pessoa_fisica,'X')) or (coalesce(OLD.dt_nascimento,LOCALTIMESTAMP) <> coalesce(NEW.dt_nascimento,LOCALTIMESTAMP)) or (coalesce(OLD.ie_sexo,'X') <> coalesce(NEW.ie_sexo,'X')) or (coalesce(OLD.dt_obito,LOCALTIMESTAMP) <> coalesce(NEW.dt_obito,LOCALTIMESTAMP)) then	
	
		CALL ger_pessoa_fisica_update(NEW.cd_pessoa_fisica);
		
	end if;
	
	--HCOR ADT A08


   if (wheb_usuario_pck.is_evento_ativo(783) = 'S') then

      qt_atendimento_w  := OBTER_QTD_ATENDIMENTOS(NEW.cd_pessoa_fisica);

      if (qt_atendimento_w > 0) then
         ds_param_integ_hl7_w := 'cd_pessoa_fisica=' || NEW.cd_pessoa_fisica || ds_sep_bv_w;
         CALL gravar_agend_integracao(783, ds_param_integ_hl7_w);
      end if;

   end if;
	
	if (wheb_usuario_pck.is_evento_ativo(853) = 'S') and
		((coalesce(OLD.nm_pessoa_fisica,'X') <> coalesce(NEW.nm_pessoa_fisica,'X')) or (coalesce(OLD.ie_sexo,'X') <> coalesce(NEW.ie_sexo,'X')) or (coalesce(OLD.dt_nascimento,LOCALTIMESTAMP) <> coalesce(NEW.dt_nascimento,LOCALTIMESTAMP)) or (coalesce(OLD.nr_seq_cor_pele,0) <> coalesce(NEW.nr_seq_cor_pele,0)) or (coalesce(OLD.ie_estado_civil,0) <> coalesce(NEW.ie_estado_civil,0)) or (coalesce(OLD.cd_religiao,0) <> coalesce(NEW.cd_religiao,0)) or (coalesce(OLD.nr_prontuario,0) <> coalesce(NEW.nr_prontuario,0)) or (coalesce(OLD.nr_cpf,'X') <> coalesce(NEW.nr_cpf,'X')) or (coalesce(OLD.nr_telefone_celular,'X') <> coalesce(NEW.nr_telefone_celular,'X')) or (coalesce(OLD.nr_ddd_celular,'X') <> coalesce(NEW.nr_ddd_celular,'X')) or (coalesce(OLD.nr_ddi_celular,'X') <> coalesce(NEW.nr_ddi_celular,'X')) or (coalesce(OLD.dt_obito,LOCALTIMESTAMP) <> coalesce(NEW.dt_obito,LOCALTIMESTAMP))) then
		
		CALL enviar_pf_medico_hl7(NEW.cd_pessoa_fisica,'MUP');	
		
		INTEGRA_BIFROST;
	end if;
	if ((coalesce(OLD.IE_TIPO_SANGUE, 'X') <> coalesce(NEW.IE_TIPO_SANGUE, 'X')) or (coalesce(OLD.IE_FATOR_RH, 'X') <> coalesce(NEW.IE_FATOR_RH, 'X')) or (coalesce(OLD.QT_PESO, 0) <> coalesce(NEW.QT_PESO, 0)) or (coalesce(OLD.QT_ALTURA_CM, 0) <> coalesce(NEW.QT_ALTURA_CM, 0)) or (coalesce(OLD.nm_pessoa_fisica,'X') <> coalesce(NEW.nm_pessoa_fisica,'X')) or (coalesce(OLD.ie_sexo,'X') <> coalesce(NEW.ie_sexo,'X')) or (coalesce(OLD.dt_nascimento,LOCALTIMESTAMP) <> coalesce(NEW.dt_nascimento,LOCALTIMESTAMP)) or (coalesce(OLD.nr_telefone_celular,'X') <> coalesce(NEW.nr_telefone_celular,'X')) or (coalesce(OLD.nr_ddd_celular,'X') <> coalesce(NEW.nr_ddd_celular,'X')) or (coalesce(OLD.nr_ddi_celular,'X') <> coalesce(NEW.nr_ddi_celular,'X'))) then
	
		CALL call_interface_file(927, 'itech_pck.send_patient_attribute_info('||ds_guampa_w|| NEW.cd_pessoa_fisica ||ds_guampa_w||','||ds_guampa_w|| NEW.nm_usuario ||ds_guampa_w||','||0||','||ds_guampa_w||null||ds_guampa_w||','||obter_estabelecimento_ativo||');', NEW.nm_usuario);
		
		CALL call_interface_file(933, 'carestream_ris_japan_l10n_pck.patient_change_info( ' || NEW.cd_pessoa_fisica || ', ''' || NEW.nm_usuario || ''' , 0 , null, ' || obter_estabelecimento_ativo || ');' , NEW.nm_usuario);
	end if;
	CALL call_bifrost_content('patient.registration.update','person_json_pck.get_patient_message_clob('||NEW.cd_pessoa_fisica||')', NEW.nm_usuario);

  BEGIN
    -- INICIO ADT_A47

    IF (NEW.NR_PRONT_EXT <> OLD.NR_PRONT_EXT) THEN
      HL7_ADT_47(OLD.CD_PESSOA_FISICA, OLD.NR_PRONT_EXT, OLD.NM_PESSOA_FISICA);
    END IF;
    -- FIM ADT_A47*/

  end;

end if;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pessoa_fisica_update_hl7() FROM PUBLIC;

CREATE TRIGGER pessoa_fisica_update_hl7
	AFTER UPDATE ON pessoa_fisica FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pessoa_fisica_update_hl7();

