-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS processo_aprov_resp_tp ON processo_aprov_resp CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_processo_aprov_resp_tp() RETURNS trigger AS $BODY$
DECLARE nr_seq_w bigint;ds_s_w   varchar(1);ds_c_w   varchar(1);ds_w	   varchar(1);ie_log_w varchar(1);BEGIN BEGIN ds_s_w := null;  ds_c_w:= 'CD_PROCESSO_APROV='||to_char(OLD.CD_PROCESSO_APROV)||'#@#@NR_SEQUENCIA='||to_char(OLD.NR_SEQUENCIA);SELECT * FROM gravar_log_alteracao(to_char(OLD.DT_ATUALIZACAO_NREC,'dd/mm/yyyy hh24:mi:ss'), to_char(NEW.DT_ATUALIZACAO_NREC,'dd/mm/yyyy hh24:mi:ss'), NEW.nm_usuario, nr_seq_w, 'DT_ATUALIZACAO_NREC', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_TRANSF_PCS,1,4000), substr(NEW.IE_TRANSF_PCS,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_TRANSF_PCS', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_PROCESSO_APROV,1,4000), substr(NEW.CD_PROCESSO_APROV,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_PROCESSO_APROV', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQUENCIA,1,4000), substr(NEW.NR_SEQUENCIA,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQUENCIA', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(to_char(OLD.DT_ATUALIZACAO,'dd/mm/yyyy hh24:mi:ss'), to_char(NEW.DT_ATUALIZACAO,'dd/mm/yyyy hh24:mi:ss'), NEW.nm_usuario, nr_seq_w, 'DT_ATUALIZACAO', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_RESPONSAVEL,1,4000), substr(NEW.IE_RESPONSAVEL,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_RESPONSAVEL', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_SOLICITACAO_COMPRA,1,4000), substr(NEW.IE_SOLICITACAO_COMPRA,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_SOLICITACAO_COMPRA', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NM_USUARIO,1,4000), substr(NEW.NM_USUARIO,1,4000), NEW.nm_usuario, nr_seq_w, 'NM_USUARIO', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_CARGO,1,4000), substr(NEW.CD_CARGO,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_CARGO', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.VL_MINIMO,1,4000), substr(NEW.VL_MINIMO,1,4000), NEW.nm_usuario, nr_seq_w, 'VL_MINIMO', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_ORDEM_COMPRA,1,4000), substr(NEW.IE_ORDEM_COMPRA,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_ORDEM_COMPRA', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_ORDEM_COMPRA_TRANSF,1,4000), substr(NEW.IE_ORDEM_COMPRA_TRANSF,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_ORDEM_COMPRA_TRANSF', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.VL_MAXIMO,1,4000), substr(NEW.VL_MAXIMO,1,4000), NEW.nm_usuario, nr_seq_w, 'VL_MAXIMO', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NM_USUARIO_REGRA,1,4000), substr(NEW.NM_USUARIO_REGRA,1,4000), NEW.nm_usuario, nr_seq_w, 'NM_USUARIO_REGRA', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_REQUISICAO,1,4000), substr(NEW.IE_REQUISICAO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_REQUISICAO', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_COTACAO,1,4000), substr(NEW.IE_COTACAO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_COTACAO', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_DESCONSIDERA_REQ_TRANSF,1,4000), substr(NEW.IE_DESCONSIDERA_REQ_TRANSF,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_DESCONSIDERA_REQ_TRANSF', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_SOLICITACAO_PAGTO,1,4000), substr(NEW.IE_SOLICITACAO_PAGTO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_SOLICITACAO_PAGTO', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_NIVEL_APROVACAO,1,4000), substr(NEW.NR_NIVEL_APROVACAO,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_NIVEL_APROVACAO', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_MINIMO_APROVADOR,1,4000), substr(NEW.QT_MINIMO_APROVADOR,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_MINIMO_APROVADOR', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_NOTA_FISCAL,1,4000), substr(NEW.IE_NOTA_FISCAL,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_NOTA_FISCAL', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_REG_LICITACAO,1,4000), substr(NEW.IE_REG_LICITACAO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_REG_LICITACAO', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NM_USUARIO_NREC,1,4000), substr(NEW.NM_USUARIO_NREC,1,4000), NEW.nm_usuario, nr_seq_w, 'NM_USUARIO_NREC', ie_log_w, ds_w, 'PROCESSO_APROV_RESP', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;   exception when others then ds_w:= '1'; end;   END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_processo_aprov_resp_tp() FROM PUBLIC;

CREATE TRIGGER processo_aprov_resp_tp
	AFTER UPDATE ON processo_aprov_resp FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_processo_aprov_resp_tp();

