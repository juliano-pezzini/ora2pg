-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS autorizacao_convenio_aftinsert ON autorizacao_convenio CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_autorizacao_convenio_aftinsert() RETURNS trigger AS $BODY$
DECLARE
qt_existe_w	bigint;
nr_sequencia_w	bigint;
ie_interno_w	varchar(255);
ds_estagio_w	varchar(255);
ie_medico_w   	varchar(1);
ie_agua_just_med_w	varchar(1) := '';
ds_texto_padrao_w	text;
ie_save_insurance_holder_w 	varchar(1);
qt_anexo_agenda_w	smallint;
nr_seq_anexo_agenda_w	anexo_agenda.nr_sequencia%type;
nr_seq_just_exists_w paciente_justificativa.nr_sequencia%type;
ie_tipo_autor_w autorizacao_convenio.ie_tipo_autorizacao%type := NEW.IE_TIPO_AUTORIZACAO;


C01 CURSOR FOR
	SELECT	ds_texto_padrao
	from	texto_padrao_justif_solic
	where	ie_tipo_justificativa = NEW.ie_tipo_autorizacao
	and 	ie_situacao = 'A';

--TEXTO_PADRAO_JUSTIF_SOLIC


c02 CURSOR FOR
	SELECT	ds_arquivo,
				ds_observacao
	from	ged_atendimento
	where	nr_seq_agenda = NEW.nr_seq_agenda;

c02_w		c02%rowtype;
BEGIN
  BEGIN

if coalesce(wheb_usuario_pck.get_ie_executar_trigger, 'S') = 'S' then

--Added below code for request SO#1996135

ie_save_insurance_holder_w := obter_dados_param_atend(wheb_usuario_pck.get_cd_estabelecimento, 'SI');

if (ie_save_insurance_holder_w = 'S') and (NEW.cd_pessoa_fisica is not null) and (NEW.cd_convenio is not null) and
	((coalesce(NEW.cd_convenio, 0) <> coalesce(OLD.cd_convenio, 0)) or (coalesce(NEW.cd_pessoa_fisica, '0') <> coalesce(OLD.cd_pessoa_fisica, '0'))) then
	CALL insere_atualiza_titular_conv(
				NEW.nm_usuario,
				NEW.cd_convenio,
				null,
				NEW.cd_pessoa_fisica,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				'N',
				'2');
end if;


ie_agua_just_med_w := Obter_Param_Usuario(3004, 236, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_agua_just_med_w);

if (ie_agua_just_med_w = 'S') then
   select	count(*)
   into STRICT	   qt_existe_w
   from	   paciente_justificativa
   where	   nr_atendimento		= NEW.nr_atendimento
   and	   coalesce(nr_seq_autorizacao,0) = coalesce(NEW.nr_seq_autorizacao,0);
elsif (ie_agua_just_med_w = 'P') then
   if (NEW.nr_seq_autorizacao is not null) and (NEW.nr_atendimento is not null) then
      select	count(*)
      into STRICT	   qt_existe_w
      from	   paciente_justificativa
      where	  coalesce(nr_seq_autorizacao,0) = coalesce(NEW.nr_seq_autorizacao,0)
      and	  nr_atendimento		   = NEW.nr_atendimento;
   else
      select	count(*)
      into STRICT	   qt_existe_w
      from	   paciente_justificativa
      where	   nr_sequencia_autor	= NEW.nr_sequencia;
   end if;
end if;

BEGIN
select	ie_interno
into STRICT	ie_interno_w
from	estagio_autorizacao
where	nr_sequencia = NEW.nr_seq_estagio
and	OBTER_EMPRESA_ESTAB(wheb_usuario_pck.get_cd_estabelecimento) = cd_empresa;
exception
when no_data_found then
	ie_interno_w	:= null;
end;

if	((qt_existe_w = 0) or (ie_tipo_autor_w = 2)) and (ie_interno_w = '2') and
   ((ie_agua_just_med_w = 'P') or (ie_agua_just_med_w = 'S' and NEW.nr_atendimento is not null)) and (NEW.ie_tipo_autorizacao is not null) then

	select	nextval('paciente_justificativa_seq')
	into STRICT	nr_sequencia_w
	;

	SELECT obter_se_usuario_medico(NEW.nm_usuario)
	into STRICT	ie_medico_w
	;

	ds_texto_padrao_w:= '';
	open C01;
	loop
	fetch C01 into	
		ds_texto_padrao_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN
		ds_texto_padrao_w:= ds_texto_padrao_w;
		end;
	end loop;
	close C01;

    select max(a.nr_sequencia)
    into STRICT nr_seq_just_exists_w
    from paciente_justificativa a
    where a.nr_atendimento	   = NEW.nr_atendimento
    and	  coalesce(a.nr_seq_autorizacao,0) = coalesce(NEW.nr_seq_autorizacao,0)
    and   a.nr_sequencia_autor = NEW.nr_sequencia;

    if (nr_seq_just_exists_w is null) then
        insert into paciente_justificativa(
            nr_sequencia,
            dt_atualizacao,
            nm_usuario,
            dt_atualizacao_nrec,
            nm_usuario_nrec,
            nr_seq_autorizacao,     
            nr_atendimento,
            dt_justificativa,
            ie_tipo_justificativa,
            qt_dia_prorrogacao,
            nr_sequencia_autor,
            ie_situacao,
            ds_justificativa,
            cd_profissional,
            ie_gerado_job,
            cd_pessoa_fisica,-- Francisco - 23/10/06 - Inclui sequencia
            dt_liberacao_parcial) 
        values (	nr_sequencia_w,
            LOCALTIMESTAMP,
            NEW.nm_usuario,
            LOCALTIMESTAMP,
            NEW.nm_usuario,
            NEW.nr_seq_autorizacao,     
            NEW.nr_atendimento,
            LOCALTIMESTAMP,
            NEW.ie_tipo_autorizacao,
            NEW.qt_dia_autorizado,
            NEW.nr_sequencia,
            'A',
            ds_texto_padrao_w,
            coalesce(CASE WHEN ie_medico_w='S' THEN Obter_Medico_Prescricao(NEW.nr_prescricao,'C')  ELSE NEW.cd_medico_solicitante END  ,null),
            'S',
            NEW.cd_pessoa_fisica,
            LOCALTIMESTAMP);
         end if;
end if;

select	max(ds_estagio)
into STRICT	ds_estagio_w
from	estagio_autorizacao
where	nr_sequencia	= NEW.nr_seq_estagio
and	OBTER_EMPRESA_ESTAB(wheb_usuario_pck.get_cd_estabelecimento) = cd_empresa;

if (ds_estagio_w is not null) then
	insert into autorizacao_convenio_hist(nr_sequencia,
		 dt_atualizacao,
		 nm_usuario,
		 nr_atendimento,
		 nr_seq_autorizacao,
		 ds_historico,
		 nr_sequencia_autor,
		 nr_seq_estagio)
	values (nextval('autorizacao_convenio_hist_seq'),
		 LOCALTIMESTAMP,
		 NEW.nm_usuario,
		 NEW.nr_atendimento,
		 NEW.nr_seq_autorizacao,
		 ds_estagio_w,
		 NEW.nr_sequencia,
		 NEW.nr_seq_estagio);
end if;

/* OS 2007482 - Insercao de anexo agenda da Gestao da Agenda Cirurgica - Jeferson Job (jjrsantos) */


select	count(*)
into STRICT	qt_anexo_agenda_w
from	ged_atendimento
where	nr_seq_agenda	= NEW.nr_seq_agenda;

if (qt_anexo_agenda_w > 0) then
	open c02;
	loop
	fetch c02 into	
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		select	count(*)
		into STRICT		qt_anexo_agenda_w
		from	anexo_agenda
		where	ds_arquivo = c02_w.ds_arquivo;

		if ( qt_anexo_agenda_w = 0) then

			select	nextval('anexo_agenda_seq')
			into STRICT	nr_seq_anexo_agenda_w
			;

			insert into anexo_agenda(
					nr_sequencia,
					ds_arquivo,
					nr_seq_agenda,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ds_observacao,
					ie_situacao
				)
			values (
				nr_seq_anexo_agenda_w,
				c02_w.ds_arquivo,
				NEW.nr_seq_agenda,
				LOCALTIMESTAMP,
				NEW.nm_usuario,
				LOCALTIMESTAMP,
				NEW.nm_usuario_nrec,
				c02_w.ds_observacao,
				'A'
			);
		end if;
	end loop;
	close c02;
end if;
end if;
/* FIM - Insercao de anexo agenda da Gestao da Agenda Cirurgica */


  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_autorizacao_convenio_aftinsert() FROM PUBLIC;

CREATE TRIGGER autorizacao_convenio_aftinsert
	AFTER INSERT ON autorizacao_convenio FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_autorizacao_convenio_aftinsert();

