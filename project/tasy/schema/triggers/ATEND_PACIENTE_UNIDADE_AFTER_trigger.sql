-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS atend_paciente_unidade_after ON atend_paciente_unidade CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_atend_paciente_unidade_after() RETURNS trigger AS $BODY$
declare
SUBTYPE one_char    IS varchar(1);

reg_integracao_p		gerar_int_padrao.reg_integracao;
dt_saida_real_w		timestamp;

ie_sem_acomodacao_w tipo_acomodacao.ie_sem_acomodacao%type;
ie_setor_supply_w	one_char := 'N';
qt_existe_w			bigint;

BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S')  then

	if (TG_OP = 'INSERT') then
		CALL insert_atend_unid_classif_esp(null, null, NEW.nr_atendimento, NEW.nr_seq_interno, NEW.nm_usuario);

		select CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
		into STRICT ie_setor_supply_w
		from far_setores_integracao
		where nr_seq_empresa_int = 82
		and cd_setor_atendimento = NEW.cd_setor_atendimento  LIMIT 1;

		if (ie_setor_supply_w = 'S') then
			CALL supplypoint_mov_pac(NEW.nr_atendimento, NEW.cd_setor_atendimento, 0, 3, NEW.nm_usuario);
		end if;
		
		select	count(1)
		into STRICT	qt_existe_w
		from	dis_regra_setor
		where	cd_setor_atendimento = NEW.cd_setor_atendimento  LIMIT 1;

		if (qt_existe_w > 0) then
			CALL intdisp_gerar_movto_eup(NEW.nr_atendimento, NEW.cd_setor_atendimento, NEW.cd_unidade_basica, NEW.dt_entrada_unidade, 'EPA');
		end if;
		
	end if;
	
	if (NEW.nr_sequencia = 1) and (TG_OP = 'INSERT') then
		reg_integracao_p.ie_operacao := 'I';
		reg_integracao_p := gerar_int_padrao.gravar_integracao('308', NEW.nr_seq_interno, NEW.nm_usuario, reg_integracao_p);
	end if;
	
	select	max(dt_saida_real)
	into STRICT	dt_saida_real_w
	from	atendimento_paciente
	where	nr_atendimento = NEW.nr_atendimento;
	if (dt_saida_real_w is null) then
		reg_integracao_p.ie_saida_unidade	:= 'N';
		if (TG_OP = 'INSERT' or TG_OP = 'UPDATE') then
			if (OLD.dt_saida_unidade is not null and NEW.dt_saida_unidade is null) or (OLD.dt_saida_unidade is null and NEW.dt_saida_unidade is not null)  then
				reg_integracao_p.ie_saida_unidade	:= 'S';
			end if;
		end if;
		reg_integracao_p.nr_atendimento		:= coalesce(NEW.nr_atendimento,OLD.nr_atendimento);

		select coalesce(max(t.ie_sem_acomodacao), 'N')
		into STRICT	reg_integracao_p.ie_passagem_sem_acomd
		from	unidade_atendimento c,
				tipo_acomodacao t
		where	NEW.cd_setor_atendimento = c.cd_setor_atendimento
		and		NEW.cd_unidade_basica = c.cd_unidade_basica
		and		NEW.cd_unidade_compl = c.cd_unidade_compl
		and		t.cd_tipo_acomodacao = c.cd_tipo_acomodacao;
		
		if (TG_OP = 'INSERT') then
			reg_integracao_p.ie_operacao		:=	'I';
		elsif (TG_OP = 'DELETE') then
			reg_integracao_p.ie_operacao		:=	'E';
		elsif (TG_OP = 'UPDATE') then
			reg_integracao_p.ie_operacao		:=	'A';	
		end if;
		
		if (NEW.ie_passagem_setor = 'N') then
		   reg_integracao_p.ie_tipo_movimentacao := 'T';
		else
		   reg_integracao_p.ie_tipo_movimentacao := 'P';
		end if;
		
		if (NEW.nr_sequencia = 1) then
		   reg_integracao_p.ie_primeiro_reg_setor := 'P';
		elsif (NEW.nr_sequencia > 1) then
		   reg_integracao_p.ie_primeiro_reg_setor := 'S';
		end if;
		
		reg_integracao_p := gerar_int_padrao.gravar_integracao('118', coalesce(NEW.nr_seq_interno,OLD.nr_seq_interno), coalesce(NEW.nm_usuario,OLD.nm_usuario), reg_integracao_p);	
	end if;
	
	reg_integracao_p.ie_operacao	:= 'E';
	
	if (OLD.dt_saida_temporaria is null and NEW.dt_saida_temporaria is not null) then
		reg_integracao_p.ie_operacao		:=	'I';
	elsif (OLD.dt_retorno_saida_temporaria is null and NEW.dt_retorno_saida_temporaria is not null) then
		reg_integracao_p.ie_operacao		:=	'A';
	end if;
	
	if (reg_integracao_p.ie_operacao <> 'E') then
		reg_integracao_p := gerar_int_padrao.gravar_integracao('195', coalesce(NEW.nr_seq_interno,OLD.nr_seq_interno), coalesce(NEW.nm_usuario,OLD.nm_usuario), reg_integracao_p);	
	end if;

	if (NEW.cd_departamento <> OLD.cd_departamento) then
		CALL call_interface_file(932, 'carestream_ris_japan_l10n_pck.patient_dept_transfer_info ('||  NEW.nr_seq_interno || ', 1, ''' || NEW.nm_usuario || ''' , 0, null, ' || obter_estabelecimento_ativo || ', ''N'');' , NEW.nm_usuario);
		CALL call_interface_file(948, 'tosho_pck.patient_dept_transfer_info ('||  NEW.nr_seq_interno || ', 1, ''' || NEW.nm_usuario || ''' , 0, null, ' || obter_estabelecimento_ativo || ', ''N'');' , NEW.nm_usuario);	
	end if;
end if;

IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_atend_paciente_unidade_after() FROM PUBLIC;

CREATE TRIGGER atend_paciente_unidade_after
	AFTER INSERT OR UPDATE OR DELETE ON atend_paciente_unidade FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_atend_paciente_unidade_after();

