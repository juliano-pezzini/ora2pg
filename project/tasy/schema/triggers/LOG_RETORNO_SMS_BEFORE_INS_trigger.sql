-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS log_retorno_sms_before_ins ON log_retorno_sms CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_log_retorno_sms_before_ins() RETURNS trigger AS $BODY$
declare

	nr_seq_agenda_w			agenda_consulta.nr_sequencia%type;
	nr_seq_ageint_w         log_retorno_sms.nr_seq_ageint%type;
	cd_pessoa_fisica_w		varchar(20);
	nr_seq_forma_confirmacao_w	bigint;
	nr_celular_w			varchar(50);
	ie_tipo_retorno_w		varchar(1);
	nr_atendimento_w                bigint;
	ds_texto_w			varchar(5000);
	id_sms_w			bigint;
	ds_remetente_p			varchar(255);
	nm_pessoa_fisica_w		varchar(255);
	dt_agenda_w			timestamp;
	dt_min_exame_w			timestamp;
	dt_min_consulta_w		timestamp;
	dt_primeiro_hor_w		varchar(100);
	ds_remetente_sms_w		varchar(255);
	ds_item_agenda_w		varchar(255);
	cd_agenda_w			numeric(20);
	cd_estab_logado_w		bigint;
	nr_seq_regra_sms_w              bigint;
	cd_estab_agenda_w		bigint;
	nr_ddd_celular_w		varchar(50);
	nr_telefone_celular_w		varchar(50);
	ds_mensagem_sms_w               regra_sms_alta.ds_mensagem%type;
	ie_consist_destinatario_w	varchar(1);
	nr_tamanho_mensagem_w		integer	:= 0;
	ie_retorno_DDI_w		varchar(1);
	nr_celular_new_w		varchar(50);
	qt_dias_confirmacao_w	 ageint_texto_confirm_sms.qt_dias_confirmacao%type;
	qt_dias_confirmacao_ww	 ageint_texto_confirm_sms.qt_dias_confirmacao%type;
	ds_motivo_cancelamento_w ageint_texto_confirm_sms.ds_motivo_cancelamento%type;
	cd_estabelecimento_w	 bigint;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then

	cd_pessoa_fisica_w	:= NEW.cd_pessoa_fisica;
	nr_seq_agenda_w		:= coalesce(NEW.nr_seq_agenda_pac, NEW.nr_seq_agenda_cons);

	SELECT MAX(cd_estabelecimento), MAX(cd_agenda)
	INTO STRICT cd_estab_agenda_w, cd_agenda_w
	FROM (
		SELECT a.cd_estabelecimento, a.cd_agenda
		FROM agenda a,
		agenda_paciente b
		WHERE a.cd_agenda = b.cd_agenda
		AND ((coalesce(NEW.nr_seq_agenda_pac, 0) = 0 AND 1 = 2) OR b.nr_sequencia = NEW.nr_seq_agenda_pac)
		
UNION

		SELECT a.cd_estabelecimento, a.cd_agenda
		FROM agenda a,
		agenda_consulta b
		WHERE a.cd_agenda = b.cd_agenda
		AND ((coalesce(NEW.nr_seq_agenda_cons, 0) > 0 AND 1 = 2) OR b.nr_sequencia = NEW.nr_seq_agenda_cons)) alias8;

	cd_estab_logado_w	:= coalesce(obter_estabelecimento_ativo,1);
	ds_remetente_p		:= Obter_Valor_Param_Usuario(0, 63, obter_perfil_ativo, obter_usuario_ativo, coalesce(cd_estab_agenda_w,cd_estab_logado_w));
	ie_retorno_DDI_w := Obter_param_Usuario(821, 501, obter_perfil_ativo, obter_usuario_ativo, coalesce(cd_estab_agenda_w,cd_estab_logado_w), ie_retorno_DDI_w);
	ie_consist_destinatario_w := Obter_Param_Usuario(0, 214, obter_perfil_ativo, obter_usuario_ativo, coalesce(cd_estab_agenda_w,cd_estab_logado_w), ie_consist_destinatario_w);

	nr_celular_w		:= trim(both NEW.nr_celular);
	nr_celular_new_w	:= nr_celular_w;
	nr_ddd_celular_w	:= trim(both substr(nr_celular_w,3,2));
	nr_telefone_celular_w	:= trim(both substr(nr_celular_w,5,50));

	if (coalesce(ie_retorno_DDI_w,'S') = 'N') then

		if (substr(nr_celular_w,1,2) = '55') then
			select 	substr(NEW.nr_celular,3,12)
			into STRICT 	nr_celular_w
			;
		end if;

		nr_ddd_celular_w	:= trim(both substr(nr_celular_w,1,2));
		nr_telefone_celular_w	:= trim(both substr(nr_celular_w,3,50));

	else

		if (substr(nr_celular_w,1,2) <> '55') then
			nr_celular_w :=  '55'||NEW.nr_celular;
			nr_ddd_celular_w	:= trim(both substr(nr_celular_w,3,2));
			nr_telefone_celular_w	:= trim(both substr(nr_celular_w,5,50));
		end if;

	end if;

	if (ie_consist_destinatario_w = 'I') then
		nr_celular_w := nr_celular_new_w;
	else
		if	((ie_consist_destinatario_w <> 'N')
			and (substr(nr_celular_new_w,1,2) = '55')
			and (Length(nr_celular_new_w) > 11))	then
			nr_celular_w := substr(nr_celular_new_w,3,length(nr_celular_new_w));
		else
			BEGIN
				if	(((substr(nr_celular_new_w,1,3) = '055')
					OR (substr(nr_celular_new_w,1,3) = '+55')
					OR (substr(nr_celular_new_w,1,2) = '55'))
					and (Length(nr_celular_new_w) > 11)) then

					if	((substr(nr_celular_new_w,1,3) = '055')
						OR (substr(nr_celular_new_w,1,3) = '+55')) then
						nr_celular_w := substr(nr_celular_new_w, 4, Length(nr_celular_new_w));
					else
						nr_celular_w := substr(nr_celular_new_w, 3, Length(nr_celular_new_w));
					end if;
				end if;
			end;
		end if;

		nr_telefone_celular_w	:= trim(both substr(nr_celular_w,3,50));
	end if;

	if (to_char(NEW.dt_resposta,'yyyy')) <> (to_char(LOCALTIMESTAMP,'yyyy')) then
		if ((to_char(NEW.dt_resposta,'hh24:mi:ss') = '00:00:00') or (to_char(NEW.dt_resposta,'hh24:mi:ss') is null)) then
			NEW.dt_resposta := to_date(to_char(NEW.dt_resposta,'dd/mm/')||to_char(LOCALTIMESTAMP,'yyyy')||' '||to_char(LOCALTIMESTAMP,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
		else
			NEW.dt_resposta := to_date(to_char(NEW.dt_resposta,'dd/mm/')||to_char(LOCALTIMESTAMP,'yyyy')||' '||to_char(NEW.dt_resposta,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
		end if;
	end if;

	select 	coalesce(max(ie_tipo_retorno),'O')
	into STRICT	ie_tipo_retorno_w
	from	ageint_texto_retorno_sms
	where	trim(both upper(ds_texto)) = trim(both upper(NEW.ds_resposta));


	select 	coalesce(max(qt_dias_confirmacao),0) , max(ds_motivo_cancelamento)
	into STRICT	qt_dias_confirmacao_w,
			ds_motivo_cancelamento_w
	from	ageint_texto_confirm_sms
	where	ie_tipo_retorno    = ie_tipo_retorno_w
	and		cd_estabelecimento = coalesce(wheb_usuario_pck.get_cd_estabelecimento,1);

	if (coalesce(qt_dias_confirmacao_w,0) = 0) then
		qt_dias_confirmacao_ww := 30;
	else
		qt_dias_confirmacao_ww := qt_dias_confirmacao_w+1;
	end if;

	if (cd_pessoa_fisica_w is null) then
		BEGIN
		select	cd_pessoa_fisica,
				cd_estabelecimento
		into STRICT	cd_pessoa_fisica_w,
				cd_estabelecimento_w
		from	pessoa_fisica a
		where	dt_obito is NULL
		and     ((nr_telefone_celular = nr_celular_w) or (nr_telefone_celular = NEW.nr_celular))
		and (exists (SELECT 1
				from agenda_consulta x
				where a.cd_pessoa_fisica = x.cd_pessoa_fisica
				and x.dt_agenda between trunc(LOCALTIMESTAMP) and trunc(LOCALTIMESTAMP) + qt_dias_confirmacao_ww  LIMIT 1)
		or 	exists (select 1
				from agenda_paciente x
				where a.cd_pessoa_fisica = x.cd_pessoa_fisica
				and x.hr_inicio between trunc(LOCALTIMESTAMP) and trunc(LOCALTIMESTAMP) + qt_dias_confirmacao_ww  LIMIT 1))  LIMIT 1;

		exception
		when no_data_found then

			BEGIN
				select	cd_pessoa_fisica,
						cd_estabelecimento
				into STRICT	cd_pessoa_fisica_w,
						cd_estabelecimento_w
				from	pessoa_fisica a
				where	nr_ddd_celular		= nr_ddd_celular_w
				and		((nr_telefone_celular = nr_telefone_celular_w) or (nr_telefone_celular = NEW.nr_celular))
				and 	dt_obito is null
				and (exists (SELECT 1
						from agenda_consulta x
						where a.cd_pessoa_fisica = x.cd_pessoa_fisica
						and x.dt_agenda between trunc(LOCALTIMESTAMP) and trunc(LOCALTIMESTAMP) + qt_dias_confirmacao_ww  LIMIT 1)
				or 	exists (select 1
						from agenda_paciente x
						where a.cd_pessoa_fisica = x.cd_pessoa_fisica
						and x.hr_inicio between trunc(LOCALTIMESTAMP) and trunc(LOCALTIMESTAMP) + qt_dias_confirmacao_ww  LIMIT 1))  LIMIT 1;

			exception
			when no_data_found then

				BEGIN
					select	cd_pessoa_fisica,
							cd_estabelecimento
					into STRICT	cd_pessoa_fisica_w,
							cd_estabelecimento_w
					from	pessoa_fisica a
					where	somente_numero(nr_telefone_celular)	= somente_numero(nr_ddd_celular_w||nr_telefone_celular_w)
					and 	dt_obito is null
					and (exists (SELECT 1
							from agenda_consulta x
							where a.cd_pessoa_fisica = x.cd_pessoa_fisica
							and x.dt_agenda between trunc(LOCALTIMESTAMP) and trunc(LOCALTIMESTAMP) + qt_dias_confirmacao_ww  LIMIT 1)
					or 	exists (select 1
							from agenda_paciente x
							where a.cd_pessoa_fisica = x.cd_pessoa_fisica
							and x.hr_inicio between trunc(LOCALTIMESTAMP) and trunc(LOCALTIMESTAMP) + qt_dias_confirmacao_ww  LIMIT 1))  LIMIT 1;

					exception
					when no_data_found then
						BEGIN
							select	max(cd_pessoa_fisica),
									max(cd_estabelecimento)
							into STRICT	cd_pessoa_fisica_w,
									cd_estabelecimento_w
							from	pessoa_fisica a
							where	dt_obito is NULL
							and     ((somente_numero(nr_telefone_celular) = somente_numero(nr_celular_w))
							         or (somente_numero(nr_telefone_celular) = somente_numero(NEW.nr_celular)))
							and (exists (SELECT 1
									from agenda_consulta x
									where a.cd_pessoa_fisica = x.cd_pessoa_fisica
									and x.dt_agenda between trunc(LOCALTIMESTAMP) and trunc(LOCALTIMESTAMP) + qt_dias_confirmacao_ww  LIMIT 1)
							or 	exists (select 1
									from agenda_paciente x
									where a.cd_pessoa_fisica = x.cd_pessoa_fisica
									and x.hr_inicio between trunc(LOCALTIMESTAMP) and trunc(LOCALTIMESTAMP) + qt_dias_confirmacao_ww  LIMIT 1));

							exception
							when no_data_found then
							BEGIN
								select	cd_pessoa_fisica,
										cd_estabelecimento
								into STRICT	cd_pessoa_fisica_w,
										cd_estabelecimento_w
								from	pessoa_fisica a
								where	nr_ddd_celular		= nr_ddd_celular_w
								and		nr_telefone_celular = substr(trim(both nr_telefone_celular_w),2,50)  -- older number format with 8 digits
								and 	dt_obito is null
								and (exists (SELECT 1
										from agenda_consulta x
										where a.cd_pessoa_fisica = x.cd_pessoa_fisica
										and x.dt_agenda between trunc(LOCALTIMESTAMP) and trunc(LOCALTIMESTAMP) + qt_dias_confirmacao_ww  LIMIT 1)
								or 	exists (select 1
										from agenda_paciente x
										where a.cd_pessoa_fisica = x.cd_pessoa_fisica
										and x.hr_inicio between trunc(LOCALTIMESTAMP) and trunc(LOCALTIMESTAMP) + qt_dias_confirmacao_ww  LIMIT 1))  LIMIT 1;
							end;
						end;
				end;
			end;
		end;
	end if;

	if (cd_pessoa_fisica_w is not null) then
		NEW.cd_pessoa_fisica	:= cd_pessoa_fisica_w;

		select  max(a.nr_atendimento),
			max(b.nr_seq_regra_envio)
		into STRICT    nr_atendimento_w,
			nr_seq_regra_sms_w
		from    atendimento_paciente a,
			atend_regra_sms b
		where   a.nr_atendimento	= b.nr_atendimento
		and     a.cd_pessoa_fisica	= cd_pessoa_fisica_w
		and     b.dt_atualizacao_nrec	> LOCALTIMESTAMP - interval '30 days'
		and     b.ie_envio_retorno	= 'E'
		and     2	> (	SELECT  count(*)
					from    atend_regra_sms c
					where   c.nr_atendimento = a.nr_atendimento
					and     c.ie_envio_retorno = 'R');

		select	VALIDATE_SMS_RESPONSE_TEXT(NEW.ds_resposta)
		into STRICT	ie_tipo_retorno_w
		;

		if	((coalesce(nr_atendimento_w,0) > 0) and (NEW.ds_resposta is not null)) then
			insert into atend_regra_sms(
				nr_sequencia,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_atualizacao,
				nm_usuario,
				ds_mensagem,
				nr_seq_regra_envio,
				nr_atendimento,
				ie_envio_retorno
			) values (
				nextval('atend_regra_sms_seq'),
				LOCALTIMESTAMP,
				'Tasy',
				LOCALTIMESTAMP,
				'Tasy',
				substr(NEW.ds_resposta,1,140),
				nr_seq_regra_sms_w,
				nr_atendimento_w,
				'R'
			);

			select  max(ds_mensagem)
			into STRICT    ds_mensagem_sms_w
			from    REGRA_SMS_ALTA_RETORNO
			where   nr_seq_regra = nr_seq_regra_sms_w
			and	ie_tipo_resposta	= ie_tipo_retorno_w;

			if (ds_mensagem_sms_w is not null) then
				if (ds_remetente_p is null) then
					ds_remetente_p := substr(obter_nome_estabelecimento(cd_estab_logado_w),1,255);
				end if;

				ds_mensagem_sms_w	:= substr(replace_macro(ds_mensagem_sms_w, '@paciente', obter_nome_pf(cd_pessoa_fisica_w)),1,140);
				CALL enviar_sms_atend(ds_remetente_p, nr_ddd_celular_w||nr_telefone_celular_w, ds_mensagem_sms_w, nr_seq_regra_sms_w, nr_atendimento_w, 'E', 'Tasy', 'N');
			end if;
		end if;

		select	obter_primeiro_nome(obter_nome_pf(cd_pessoa_fisica_w))
		into STRICT	nm_pessoa_fisica_w
		;

		IF (coalesce(NEW.nr_seq_agenda_cons, 0) > 0) THEN

			SELECT	nm
			INTO STRICT	NEW.nm_sms_sent_user
			FROM (SELECT	coalesce(coalesce(MAX(b.nm_usuario), MAX(a.nm_usuario)), 'Tasy') nm
				FROM	agenda_consulta a,
					log_envio_sms	b
				WHERE	a.nr_sequencia	= b.nr_seq_agenda
				AND	somente_numero(b.nr_telefone)	= somente_numero(nr_celular_w)
				AND	b.cd_agenda	= a.cd_agenda
				AND	a.nr_sequencia	= NEW.nr_seq_agenda_cons
				AND	b.dt_envio	<= LOCALTIMESTAMP
				AND	'TASY'		!= upper(b.nm_usuario)
				ORDER BY	b.dt_atualizacao DESC) alias9 LIMIT 1;

		END IF;

		select 	coalesce(max(ie_tipo_retorno),'O')
		into STRICT	ie_tipo_retorno_w
		from	ageint_texto_retorno_sms
		where	trim(both upper(ds_texto)) = trim(both upper(NEW.ds_resposta));

		--and	cd_estabelecimento    = cd_estab_logado_w; -- Patricia solicitou que considere apenas do estabelecimento


		select 	coalesce(max(ds_texto),'')
		into STRICT	ds_texto_w
		from	ageint_texto_confirm_sms
		where	ie_tipo_retorno    = ie_tipo_retorno_w
		and	cd_estabelecimento = coalesce(cd_estab_agenda_w,cd_estab_logado_w); -- Patricia solicitou que considere apenas do estabelecimento

		ds_remetente_p := coalesce(Obter_Valor_Param_Usuario(0, 63, obter_perfil_ativo, obter_usuario_ativo, coalesce(cd_estab_agenda_w,cd_estab_logado_w)),'Tasy');

		BEGIN

			select 	max(substr(to_char(coalesce(Obter_Horario_item_Ageint(nr_seq_agenda_cons, nr_Seq_Agenda_exame,nr_sequencia),qt_obter_horario_agendado(nr_sequencia)),'dd/mm/yyyy hh24:mi'),1,20))
			into STRICT	dt_agenda_w
			from	agenda_integrada_item
			where	nr_seq_agenda_int = NEW.nr_seq_ageint;

		exception
		when others then
			dt_agenda_w	:= '';
		end;

		BEGIN
			select	max(substr(coalesce(obter_desc_espec_medica(b.cd_especialidade), obter_nome_medico_combo_agcons(b.cd_estabelecimento, cd_agenda_w, 3, 'N')),1,255))
			into STRICT	ds_item_agenda_w
			from	agenda_integrada_item b
			where	b.nr_seq_agenda_int = NEW.nr_seq_ageint;
		exception
		when others then
			ds_item_agenda_w := '';
		end;

		BEGIN
			select	max(substr(a.ds_remetente_sms,1,255))
			into STRICT	ds_remetente_sms_w
			from	parametro_agenda a
			where	a.cd_estabelecimento	= (	SELECT	max(x.cd_estabelecimento)
								from	agenda_integrada_item x
								where	x.nr_seq_agenda_int = NEW.nr_seq_ageint);
		exception
		when others then
			ds_remetente_sms_w := '';
		end;

		BEGIN

			select	min(a.hr_inicio)
			into STRICT	dt_min_exame_w
			from	agenda_paciente a,
				agenda_integrada_item b
			where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	a.nr_sequencia 	   	= b.nr_seq_agenda_exame
			and	trunc(a.hr_inicio)	>= trunc(LOCALTIMESTAMP)
			and	coalesce(b.cd_estabelecimento, coalesce(cd_estab_agenda_w,cd_estab_logado_w)) = coalesce(cd_estab_agenda_w,cd_estab_logado_w)
			and	a.ie_status_agenda	not in ('C','B','L');

			select	min(a.dt_agenda)
			into STRICT	dt_min_consulta_w
			from	agenda_consulta a,
				agenda_integrada_item b
			where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	a.nr_sequencia		= b.nr_seq_agenda_cons
			and	coalesce(b.cd_estabelecimento, coalesce(cd_estab_agenda_w,cd_estab_logado_w)) = coalesce(cd_estab_agenda_w,cd_estab_logado_w)
			and	trunc(a.dt_agenda)	>= trunc(LOCALTIMESTAMP)
			and	a.ie_status_agenda	not in ('C','B','L');

			if (dt_min_exame_w is not null) and (dt_min_consulta_w is not null) then
				if (dt_min_exame_w	< dt_min_consulta_w) then
					dt_primeiro_hor_w	:= to_char(dt_min_exame_w, 'dd/mm/yyyy hh24:mi');
				else
					dt_primeiro_hor_w	:= to_char(dt_min_consulta_w, 'dd/mm/yyyy hh24:mi');
				end if;

			elsif (dt_min_exame_w is null) then
				dt_primeiro_hor_w	:= to_char(dt_min_consulta_w, 'dd/mm/yyyy hh24:mi');
			elsif (dt_min_consulta_w is null) then
				dt_primeiro_hor_w	:= to_char(dt_min_exame_w, 'dd/mm/yyyy hh24:mi');
			end if;

		exception
		when others then
			dt_primeiro_hor_w := '';
		end;

		if (coalesce(NEW.nr_seq_ageint, 0) = 0) then

			SELECT max(nr_seq_agenda_int) INTO STRICT nr_seq_ageint_w FROM (
					SELECT	b.nr_seq_agenda_int as nr_seq_agenda_int
					from	agenda_paciente a,
						    agenda_integrada_item b
					where	a.nr_sequencia 	   	= b.nr_seq_agenda_exame
					and (a.nr_sequencia = NEW.nr_seq_agenda_pac
					     or (to_char(a.hr_inicio, 'dd/mm/yyyy hh24:mi') = dt_primeiro_hor_w 
					     and a.cd_pessoa_fisica	= coalesce(cd_pessoa_fisica_w, 'XYZ')))
					and	a.ie_status_agenda	not in ('C','B','L')
					and a.dt_confirmacao is null
					
union

		    		SELECT	b.nr_seq_agenda_int AS nr_seq_agenda_int
					from 	agenda_consulta ac,
							agenda_integrada_item b
					where	ac.nr_sequencia 	   	= b.nr_seq_agenda_cons
					and (ac.nr_sequencia = NEW.nr_seq_agenda_cons
					     or (to_char(ac.dt_agenda, 'dd/mm/yyyy hh24:mi') = dt_primeiro_hor_w 
					     and ac.cd_pessoa_fisica	= coalesce(cd_pessoa_fisica_w, 'XYZ')))
					and	ac.ie_status_agenda	not in ('C','B','L')
					and ac.dt_confirmacao is null) alias13;

			NEW.nr_seq_ageint := nr_seq_ageint_w;

		end if;

		ds_texto_w	:= substr(replace_macro(ds_texto_w, '@paciente', nm_pessoa_fisica_w),1,5000);
		ds_texto_w	:= substr(replace_macro(ds_texto_w, '@protocoloagenda', NEW.nr_seq_ageint),1,5000);
		ds_texto_w	:= substr(replace_macro(ds_texto_w, '@horario', dt_agenda_w),1,5000);
		ds_texto_w	:= substr(replace_macro(ds_texto_w, '@item', ds_item_agenda_w),1,5000);
		ds_texto_w	:= substr(replace_macro(ds_texto_w, '@primeiro_horario', dt_primeiro_hor_w),1,5000);
		ds_texto_w	:= substr(replace_macro(ds_texto_w, '@estab', ds_remetente_sms_w),1,5000);

		if (ds_remetente_p is not null) and (to_char(nr_celular_w) is not null) and (ds_texto_w is not null)	then

			select 	length(ds_texto_w)
			into STRICT	nr_tamanho_mensagem_w
			;

			insert into log_envio_sms(
				nr_sequencia,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_atualizacao,
				nm_usuario,
				dt_envio,
				cd_agenda,
				nr_seq_agenda,
				nr_telefone,
				ds_mensagem,
				id_sms,
				nr_seq_ageint
			) values (
				nextval('log_envio_sms_seq'),
				LOCALTIMESTAMP,
				'Tasy',
				LOCALTIMESTAMP,
				'Tasy',
				LOCALTIMESTAMP,
				null,
				nr_seq_agenda_w,
				coalesce(nr_celular_w, wheb_mensagem_pck.get_texto(793111)),
				substr(ds_texto_w,1,nr_tamanho_mensagem_w),
				1,
				NEW.nr_seq_ageint
			);

			if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'pt_BR'
			  and coalesce(ie_retorno_DDI_w,'S') = 'S') then
				if (substr(nr_celular_w,1,2) <> '55') then
					nr_celular_w := '55'|| nr_celular_w;
				end if;

				if (substr(nr_celular_w,1,3) = '550') then
					nr_celular_w := '55'||substr(nr_celular_w,4,50);
				end if;
			end if;

			CALL wheb_usuario_pck.set_cd_estabelecimento(coalesce(cd_estab_agenda_w,cd_estab_logado_w));
			id_sms_w := wheb_sms.enviar_sms(ds_remetente_p, to_char(nr_celular_w), substr(ds_texto_w,1,nr_tamanho_mensagem_w), obter_usuario_ativo, id_sms_w);
		end if;
	end if;
 end if;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_log_retorno_sms_before_ins() FROM PUBLIC;

CREATE TRIGGER log_retorno_sms_before_ins
	BEFORE INSERT ON log_retorno_sms FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_log_retorno_sms_before_ins();

