-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS rxt_tratamento_tp ON rxt_tratamento CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_rxt_tratamento_tp() RETURNS trigger AS $BODY$
DECLARE nr_seq_w bigint;ds_s_w   varchar(1);ds_c_w   varchar(1);ds_w	   varchar(1);ie_log_w varchar(1);BEGIN BEGIN ds_s_w := to_char(OLD.NR_SEQUENCIA);  ds_c_w:=null;SELECT * FROM gravar_log_alteracao(to_char(OLD.DT_INICIO_TRAT,'dd/mm/yyyy hh24:mi:ss'), to_char(NEW.DT_INICIO_TRAT,'dd/mm/yyyy hh24:mi:ss'), NEW.nm_usuario, nr_seq_w, 'DT_INICIO_TRAT', ie_log_w, ds_w, 'RXT_TRATAMENTO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(to_char(OLD.DT_BRAQUITERAPIA,'dd/mm/yyyy hh24:mi:ss'), to_char(NEW.DT_BRAQUITERAPIA,'dd/mm/yyyy hh24:mi:ss'), NEW.nm_usuario, nr_seq_w, 'DT_BRAQUITERAPIA', ie_log_w, ds_w, 'RXT_TRATAMENTO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_DOSE_TOTAL,1,4000), substr(NEW.QT_DOSE_TOTAL,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_DOSE_TOTAL', ie_log_w, ds_w, 'RXT_TRATAMENTO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_DOSE_FRACAO,1,4000), substr(NEW.QT_DOSE_FRACAO,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_DOSE_FRACAO', ie_log_w, ds_w, 'RXT_TRATAMENTO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_PTV,1,4000), substr(NEW.QT_PTV,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_PTV', ie_log_w, ds_w, 'RXT_TRATAMENTO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQ_PROTOCOLO,1,4000), substr(NEW.NR_SEQ_PROTOCOLO,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQ_PROTOCOLO', ie_log_w, ds_w, 'RXT_TRATAMENTO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_CTV,1,4000), substr(NEW.QT_CTV,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_CTV', ie_log_w, ds_w, 'RXT_TRATAMENTO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_GTV,1,4000), substr(NEW.QT_GTV,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_GTV', ie_log_w, ds_w, 'RXT_TRATAMENTO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_CHECK_FILM,1,4000), substr(NEW.QT_CHECK_FILM,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_CHECK_FILM', ie_log_w, ds_w, 'RXT_TRATAMENTO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_OBSERVACAO,1,4000), substr(NEW.DS_OBSERVACAO,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_OBSERVACAO', ie_log_w, ds_w, 'RXT_TRATAMENTO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQ_MOTIVO,1,4000), substr(NEW.NR_SEQ_MOTIVO,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQ_MOTIVO', ie_log_w, ds_w, 'RXT_TRATAMENTO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQ_CONTROLE_INTERNO,1,4000), substr(NEW.NR_SEQ_CONTROLE_INTERNO,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQ_CONTROLE_INTERNO', ie_log_w, ds_w, 'RXT_TRATAMENTO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQ_MODALIDADE,1,4000), substr(NEW.NR_SEQ_MODALIDADE,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQ_MODALIDADE', ie_log_w, ds_w, 'RXT_TRATAMENTO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(to_char(OLD.DT_AVALIACAO,'dd/mm/yyyy hh24:mi:ss'), to_char(NEW.DT_AVALIACAO,'dd/mm/yyyy hh24:mi:ss'), NEW.nm_usuario, nr_seq_w, 'DT_AVALIACAO', ie_log_w, ds_w, 'RXT_TRATAMENTO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_DURACAO_TRAT,1,4000), substr(NEW.QT_DURACAO_TRAT,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_DURACAO_TRAT', ie_log_w, ds_w, 'RXT_TRATAMENTO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;   exception when others then ds_w:= '1'; end;   END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_rxt_tratamento_tp() FROM PUBLIC;

CREATE TRIGGER rxt_tratamento_tp
	AFTER UPDATE ON rxt_tratamento FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_rxt_tratamento_tp();

