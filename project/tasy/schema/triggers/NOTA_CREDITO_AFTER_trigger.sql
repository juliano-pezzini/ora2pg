-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS nota_credito_after ON nota_credito CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_nota_credito_after() RETURNS trigger AS $BODY$
declare

c01 CURSOR FOR
SELECT		a.nm_atributo,
		a.cd_tipo_lote_contab
from		atributo_contab a
where 		a.cd_tipo_lote_contab = 29
and 		a.nm_atributo = 'VL_NOTA_CREDITO';

c01_w		c01%rowtype;

BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
if (TG_OP = 'INSERT') then

	open c01;
	loop
	fetch c01 into
	c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		BEGIN

		if (NEW.nr_seq_trans_fin_contab is not null) then
			BEGIN
			CALL ctb_concil_financeira_pck.ctb_gravar_documento(	NEW.cd_estabelecimento,
									trunc(NEW.dt_nota_credito),
									c01_w.cd_tipo_lote_contab,
									NEW.nr_seq_trans_fin_contab,
									90,
									NEW.nr_sequencia,
									null,
									null,
									NEW.vl_nota_credito,
									'NOTA_CREDITO',
									c01_w.nm_atributo,
									NEW.nm_usuario);
			end;
		end if;
		end;
	end loop;
	close c01;

elsif (TG_OP = 'UPDATE') then

	if (OLD.ie_situacao != 'C') and (NEW.ie_situacao = 'C') then
		BEGIN

		-- if	(:new.nr_seq_trans_fin_contab is not null) then

			-- begin

			-- ctb_concil_financeira_pck.ctb_gravar_documento(	:new.cd_estabelecimento,

									-- trunc(:new.dt_nota_credito),

									-- c01_w.cd_tipo_lote_contab,

									-- :new.nr_seq_trans_fin_contab,

									-- 90,

									-- :new.nr_sequencia,

									-- null,

									-- null,

									-- :new.vl_nota_credito *-1,

									-- 'NOTA_CREDITO',

									-- c01_w.nm_atributo,

									-- :new.nm_usuario);

			-- end;

		-- end if;


		open c01;
		loop
		fetch c01 into
		c01_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			BEGIN

			if (NEW.nr_seq_trans_fin_contab is not null) then
				BEGIN
				CALL ctb_concil_financeira_pck.ctb_gravar_documento(	NEW.cd_estabelecimento,
										trunc(NEW.dt_nota_credito),
										c01_w.cd_tipo_lote_contab,
										NEW.nr_seq_trans_fin_contab,
										90,
										NEW.nr_sequencia,
										null,
										null,
										NEW.vl_nota_credito *-1,
										'NOTA_CREDITO',
										c01_w.nm_atributo,
										NEW.nm_usuario);
				end;
			end if;
			end;
		end loop;
		close c01;


		end;
	else

		update  ctb_documento
		set     vl_movimento = NEW.vl_nota_credito,
			nr_seq_trans_financ = NEW.nr_seq_trans_fin_contab
		where   nm_atributo = 'VL_NOTA_CREDITO'
		and     nm_tabela   = 'NOTA_CREDITO'
		and     nr_documento = NEW.nr_sequencia;
	end if;

end if;
end if;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_nota_credito_after() FROM PUBLIC;

CREATE TRIGGER nota_credito_after
	AFTER INSERT OR UPDATE ON nota_credito FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_nota_credito_after();

