-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS atendimento_transf_after ON atendimento_transf CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_atendimento_transf_after() RETURNS trigger AS $BODY$
declare
reg_integracao_p		gerar_int_padrao.reg_integracao;
ie_tipo_atendimento_p		atendimento_paciente.ie_tipo_atendimento%type;
nr_seq_tipo_admissao_fat_p	atendimento_paciente.nr_seq_tipo_admissao_fat%type;
dt_alta_p			atendimento_paciente.dt_alta%type;
cd_motivo_alta_p		atendimento_paciente.cd_motivo_alta%type;
cd_pessoa_fisica_p		atendimento_paciente.cd_pessoa_fisica%type;
dt_cancelamento_w		timestamp;
BEGIN
  BEGIN
BEGIN
select	dt_alta,
	ie_tipo_atendimento,
	nr_seq_tipo_admissao_fat,
	cd_pessoa_fisica,
	cd_motivo_alta,
	dt_cancelamento
into STRICT	dt_alta_p,
	ie_tipo_atendimento_p,
	nr_seq_tipo_admissao_fat_p,
	cd_pessoa_fisica_p,
	cd_motivo_alta_p,
	dt_cancelamento_w
from	atendimento_paciente
where	nr_atendimento	= NEW.nr_atendimento;
exception
when others then
	dt_alta_p			:= null;
	ie_tipo_atendimento_p		:= null;
	nr_seq_tipo_admissao_fat_p	:= null;
	cd_pessoa_fisica_p		:= null;
end;

if (dt_cancelamento_w is null) then
	if (TG_OP = 'INSERT') and (NEW.ie_situacao = 'A') then
    	reg_integracao_p.ie_operacao        :=  'I';
	elsif (TG_OP = 'UPDATE') and (NEW.ie_situacao = 'A') then
    	reg_integracao_p.ie_operacao        :=  'A';
	end if;
	
	reg_integracao_p.nr_atendimento			:=	NEW.nr_atendimento;
	reg_integracao_p.cd_pessoa_fisica		:=	cd_pessoa_fisica_p;
	reg_integracao_p.ie_tipo_atendimento		:= 	ie_tipo_atendimento_p;
	reg_integracao_p.nr_seq_tipo_admissao_fat	:= 	nr_seq_tipo_admissao_fat_p;
	reg_integracao_p.cd_motivo_alta			:= 	cd_motivo_alta_p;
	
	reg_integracao_p := gerar_int_padrao.gravar_integracao('114', NEW.nr_atendimento, coalesce(obter_usuario_ativo, NEW.nm_usuario), reg_integracao_p);
end if;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_atendimento_transf_after() FROM PUBLIC;

CREATE TRIGGER atendimento_transf_after
	AFTER INSERT OR UPDATE ON atendimento_transf FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_atendimento_transf_after();

