-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS evento_cirurgia_pac_delete ON evento_cirurgia_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_evento_cirurgia_pac_delete() RETURNS trigger AS $BODY$
declare

ie_atual_Inicio_cirurgia_w		varchar(1);
ie_atual_fim_cirurgia_w		varchar(1);
ie_inicia_cirurgia_w			varchar(1);
ie_finaliza_cirurgia_w		varchar(1);
dt_entrada_unidade_w		timestamp;
nr_atendimento_w			bigint;
ie_evento_painel_w	varchar(15);
nr_seq_agenda_w		agenda_paciente.nr_cirurgia%type;
nr_cirurgia_w		bigint;
ie_inicia_equipamento_w evento_cirurgia.ie_inicia_equipamento%type;
cd_perfil_w             perfil.cd_perfil%type   := wheb_usuario_pck.get_cd_perfil;
nm_usuario_w            usuario.nm_usuario%type := wheb_usuario_pck.get_nm_usuario;
cd_estabelecimento_w    estabelecimento.cd_estabelecimento%type:= wheb_usuario_pck.get_cd_estabelecimento;
nr_seq_evento_eritel_w  bigint;
cd_unidade_basica_w     atend_paciente_unidade.cd_unidade_basica%type;
cd_unidade_compl_w      atend_paciente_unidade.cd_unidade_compl%type;
nr_seq_interno_w        atend_paciente_unidade.nr_seq_interno%type;
cd_setor_atendimento_w  atend_paciente_unidade.cd_setor_atendimento%type;



c04 CURSOR FOR
	SELECT	nr_cirurgia
	from	cirurgia
	where	nr_seq_pepo = OLD.nr_seq_pepo;
BEGIN
  BEGIN

nr_seq_evento_eritel_w := obter_param_usuario(872, 534, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, nr_seq_evento_eritel_w);

ie_finaliza_cirurgia_w := 'N';

select 	max(ie_evento_painel),
         coalesce(max(ie_inicia_equipamento),'N')
into STRICT	ie_evento_painel_w,
      ie_inicia_equipamento_w
from	evento_cirurgia
where	nr_sequencia 	= OLD.nr_seq_evento;

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then

if (ie_evento_painel_w is not null) and (ie_evento_painel_w <> 'E') then	
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_agenda_w
	from	agenda_paciente
	where	nr_cirurgia = OLD.nr_cirurgia;	
	
	if (nr_seq_agenda_w is not null) then								
		BEGIN
			CALL gerar_dados_painel_cirurgia(ie_evento_painel_w,nr_seq_agenda_w,'IP',OLD.nm_usuario,'N');
		exception
		when others then
			cd_estabelecimento_w := 0;
		end;
	end if;
	
	if (OLD.nr_seq_pepo is not null) and (OLD.nr_cirurgia is null) then
		open c04;
		loop
		fetch c04 into	
			nr_cirurgia_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
			BEGIN						
			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_agenda_w
			from	agenda_paciente
			where	nr_cirurgia = nr_cirurgia_w;
			if (nr_seq_agenda_w > 0) then
				BEGIN
					CALL gerar_dados_painel_cirurgia(ie_evento_painel_w,nr_seq_agenda_w,'IP',OLD.nm_usuario,'N');
				exception
				when others then
					cd_estabelecimento_w := 0;
				end;
			end if;	
			end;
		end loop;
		close c04;
	end if;
end if;	

if (OLD.nr_sequencia is not null) then
   delete from  cir_paciente_atraso
   where nr_seq_evento = OLD.nr_sequencia;
end if;

if (ie_inicia_equipamento_w = 'S') then
   update   equipamento_cirurgia
   set      dt_inicio       = NULL
   where    ((nr_cirurgia    = OLD.nr_cirurgia AND OLD.nr_cirurgia is not null) or
             (nr_seq_pepo    = OLD.nr_seq_pepo AND OLD.nr_seq_pepo is not null))
   and      dt_inicio         = OLD.dt_registro
   and      dt_liberacao      is null;
end if;

if (coalesce(nr_seq_evento_eritel_w,0) > 0) and (nr_seq_evento_eritel_w = OLD.nr_seq_evento) then
   BEGIN
   if (coalesce(OLD.nr_cirurgia,0) > 0) then
      select   max(a.cd_setor_atendimento),
               max(a.cd_unidade_basica),
               max(a.cd_unidade_compl),
               max(a.nr_seq_interno),
               max(a.nr_atendimento)
      into STRICT     cd_setor_atendimento_w,
               cd_unidade_basica_w,
               cd_unidade_compl_w,
               nr_seq_interno_w,
               nr_atendimento_w
      from     atend_paciente_unidade a,
               cirurgia b
      where    a.NR_ATENDIMENTO     = b.NR_ATENDIMENTO
      and      a.DT_ENTRADA_UNIDADE = b.DT_ENTRADA_UNIDADE
      and      b.nr_cirurgia        = OLD.nr_cirurgia;
   elsif (coalesce(OLD.nr_seq_pepo,0) > 0) then
      select   max(a.cd_setor_atendimento),
               max(a.cd_unidade_basica),
               max(a.cd_unidade_compl),
               max(a.nr_seq_interno),
               max(a.nr_atendimento)
      into STRICT     cd_setor_atendimento_w,
               cd_unidade_basica_w,
               cd_unidade_compl_w,
               nr_seq_interno_w,
               nr_atendimento_w
      from     atend_paciente_unidade a,
               cirurgia b
      where    a.NR_ATENDIMENTO     = b.NR_ATENDIMENTO
      and      a.DT_ENTRADA_UNIDADE = b.DT_ENTRADA_UNIDADE
      and      b.nr_seq_pepo        = OLD.nr_seq_pepo;
   end if;
   if (nr_seq_interno_w is not null) then
      CALL insere_w_integracao_eritel(cd_setor_atendimento_w,cd_unidade_basica_w,cd_unidade_compl_w,nr_atendimento_w,'S',nm_usuario_w,cd_estabelecimento_w);
   end if;
   exception
   when others then
      null;
   end;

end if;

BEGIN
DELETE 	FROM pep_item_pendente
WHERE  	ie_tipo_registro = 'TMOV'
AND 	coalesce(ie_tipo_pendencia,'L')	 = 'L'
AND	   	nr_seq_registro  = OLD.nr_sequencia;

exception
when others then
  null;
end;

end if;

  END;
RETURN OLD;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_evento_cirurgia_pac_delete() FROM PUBLIC;

CREATE TRIGGER evento_cirurgia_pac_delete
	AFTER DELETE ON evento_cirurgia_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_evento_cirurgia_pac_delete();

