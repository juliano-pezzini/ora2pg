-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS escala_prot_gordura_atual ON escala_prot_gordura CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_escala_prot_gordura_atual() RETURNS trigger AS $BODY$
declare

BEGIN

if (OLD.nr_seq_protocolo is null) or (OLD.nr_seq_protocolo <> NEW.nr_seq_protocolo) then
	delete from escala_prot_gordura_prega where nr_seq_escala = NEW.nr_sequencia;

	insert into escala_prot_gordura_prega(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_escala,
		nr_seq_prot_prega,
		qt_medida)
	SELECT	nextval('escala_prot_gordura_prega_seq'),
		LOCALTIMESTAMP,
		NEW.nm_usuario_nrec,
		LOCALTIMESTAMP,
		NEW.nm_usuario_nrec,
		NEW.nr_sequencia,
		nr_sequencia,
		null
	from	protocolo_gordura_prega
	where	nr_seq_protocolo = NEW.nr_seq_protocolo;
end if;

RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_escala_prot_gordura_atual() FROM PUBLIC;

CREATE TRIGGER escala_prot_gordura_atual
	AFTER INSERT OR UPDATE ON escala_prot_gordura FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_escala_prot_gordura_atual();

