-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS preco_tuss_tp ON preco_tuss CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_preco_tuss_tp() RETURNS trigger AS $BODY$
DECLARE nr_seq_w bigint;ds_s_w   varchar(1);ds_c_w   varchar(1);ds_w	   varchar(1);ie_log_w varchar(1);BEGIN BEGIN ds_s_w := to_char(OLD.NR_SEQUENCIA);  ds_c_w:=null;SELECT * FROM gravar_log_alteracao(substr(OLD.CD_EDICAO_AMB,1,4000), substr(NEW.CD_EDICAO_AMB,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_EDICAO_AMB', ie_log_w, ds_w, 'PRECO_TUSS', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.VL_PROCEDIMENTO,1,4000), substr(NEW.VL_PROCEDIMENTO,1,4000), NEW.nm_usuario, nr_seq_w, 'VL_PROCEDIMENTO', ie_log_w, ds_w, 'PRECO_TUSS', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.VL_FILME,1,4000), substr(NEW.VL_FILME,1,4000), NEW.nm_usuario, nr_seq_w, 'VL_FILME', ie_log_w, ds_w, 'PRECO_TUSS', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.VL_MEDICO,1,4000), substr(NEW.VL_MEDICO,1,4000), NEW.nm_usuario, nr_seq_w, 'VL_MEDICO', ie_log_w, ds_w, 'PRECO_TUSS', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.VL_AUXILIARES,1,4000), substr(NEW.VL_AUXILIARES,1,4000), NEW.nm_usuario, nr_seq_w, 'VL_AUXILIARES', ie_log_w, ds_w, 'PRECO_TUSS', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_AUXILIARES_CBHPM,1,4000), substr(NEW.NR_AUXILIARES_CBHPM,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_AUXILIARES_CBHPM', ie_log_w, ds_w, 'PRECO_TUSS', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_PORTE_ANEST_AMB,1,4000), substr(NEW.NR_PORTE_ANEST_AMB,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_PORTE_ANEST_AMB', ie_log_w, ds_w, 'PRECO_TUSS', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.VL_CUSTO_OPERACIONAL,1,4000), substr(NEW.VL_CUSTO_OPERACIONAL,1,4000), NEW.nm_usuario, nr_seq_w, 'VL_CUSTO_OPERACIONAL', ie_log_w, ds_w, 'PRECO_TUSS', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_AUXILIARES_AMB,1,4000), substr(NEW.NR_AUXILIARES_AMB,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_AUXILIARES_AMB', ie_log_w, ds_w, 'PRECO_TUSS', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_PORTE_ANEST_CBHPM,1,4000), substr(NEW.NR_PORTE_ANEST_CBHPM,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_PORTE_ANEST_CBHPM', ie_log_w, ds_w, 'PRECO_TUSS', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.VL_ANESTESISTA,1,4000), substr(NEW.VL_ANESTESISTA,1,4000), NEW.nm_usuario, nr_seq_w, 'VL_ANESTESISTA', ie_log_w, ds_w, 'PRECO_TUSS', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;   exception when others then ds_w:= '1'; end;   END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_preco_tuss_tp() FROM PUBLIC;

CREATE TRIGGER preco_tuss_tp
	AFTER UPDATE ON preco_tuss FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_preco_tuss_tp();

