-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS agenda_paciente_delete ON agenda_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_agenda_paciente_delete() RETURNS trigger AS $BODY$
DECLARE
dt_atualizacao 	timestamp	:= LOCALTIMESTAMP;
OSUSER_w	varchar(100);
ds_log_w	varchar(2000);	
sess_id_w	bigint;	
ie_atualiza_w  varchar(1) := 'N';
BEGIN
  BEGIN

--if	(obter_funcao_ativa = 871) and

--	(:old.cd_pessoa_fisica is not null) and (obter_tipo_agenda(:old.cd_agenda) = 1) then

--	WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(238642);

--end if;


if (wheb_usuario_pck.get_ie_executar_trigger = 'N') then
	goto final;
end if;

BEGIN


/* Rafael em 29/12/2006 OS46794 */


if (OLD.cd_pessoa_fisica is not null) or (OLD.nm_paciente is not null) then
	ds_log_w := substr(	wheb_mensagem_pck.get_texto(793125)||': '|| obter_funcao_ativa || chr(13) ||chr(10)||
				' CallStack: '|| chr(13) || chr(10)|| dbms_utility.format_call_stack,1,1500);
	insert into agenda_historico_acao(
						nr_sequencia,
						ie_agenda,
						cd_agenda,
						nr_seq_agenda,
						dt_agenda,
						ie_acao,
						dt_acao,
						ds_acao
						)
						SELECT	nextval('agenda_historico_acao_seq'),
							obter_tipo_agenda(OLD.cd_agenda),
							OLD.cd_agenda,
							OLD.nr_sequencia,
							OLD.hr_inicio,
							'E',
							LOCALTIMESTAMP,
							substr(' '||wheb_mensagem_pck.get_texto(793126)||' '|| coalesce(OLD.cd_pessoa_fisica,OLD.nm_paciente)||
							' '||wheb_mensagem_pck.get_texto(793128)||' '|| OLD.ie_status_agenda||
							' '||wheb_mensagem_pck.get_texto(793129)||' '|| OLD.cd_medico||
							' '||wheb_mensagem_pck.get_texto(793130)||' '|| to_char(OLD.cd_procedimento)||
							' '||wheb_mensagem_pck.get_texto(793131)||' '|| to_char(OLD.ie_origem_proced)||
							' '||wheb_mensagem_pck.get_texto(793132)||': '|| to_char(OLD.nr_seq_proc_interno)||
							' '||wheb_mensagem_pck.get_texto(793133)||': '|| PKG_DATE_FORMATERS_TZ.TO_VARCHAR(OLD.dt_agendamento,'timestamp',ESTABLISHMENT_TIMEZONE_UTILS.gettimezone)||
							' '||wheb_mensagem_pck.get_texto(793134)||' '|| OLD.nm_usuario_orig||
							' '||wheb_mensagem_pck.get_texto(793135)||' '||ds_log_w,1,2000)
						;
end if;

if (OLD.ie_status_agenda <> 'L') then
	sess_id_w := userenv('sessionid');

	select	substr(max(coalesce(client_info,machine)),1,15)
	into STRICT	OSUSER_w
	from	v$session
	where	audsid = sess_id_w;

	if (position('USER=' in upper(OSUSER_w)) > 0) then
		osuser_w	:= substr(OSUSER_w,6,position(';' in OSUSER_w)-6);
	end	if;

	CALL gerar_agenda_paciente_hist(	OLD.cd_agenda,
					OLD.nr_sequencia,
					'DEL',
					coalesce(OSUSER_w,OLD.nm_usuario),
					wheb_mensagem_pck.get_texto(793136),
					OLD.cd_pessoa_fisica,
					OLD.nm_paciente,
					OLD.hr_inicio,
					obter_perfil_ativo,
					null,
					null,
					OLD.dt_agendamento);
end if;

if (OLD.ie_status_agenda = 'L') then
	BEGIN
   select   coalesce(max('S'),'N')
   into STRICT     ie_atualiza_w
   from     prescr_medica
   where    NR_SEQ_AGENDA = OLD.nr_sequencia;

   if (ie_atualiza_w = 'S') then
      update	prescr_medica
      set	NR_SEQ_AGENDA	 = NULL
      where	nr_seq_agenda	= OLD.nr_sequencia;
   end if;
	exception
		when others then
		ie_atualiza_w := 'N';
	end;
	BEGIN
   select   coalesce(max('S'),'N')
   into STRICT     ie_atualiza_w
   from     paciente_espera
   where    NR_SEQ_AGENDA = OLD.nr_sequencia;

   if (ie_atualiza_w = 'S') then
      update	paciente_espera
      set	NR_SEQ_AGENDA	 = NULL
      where	nr_seq_agenda	= OLD.nr_sequencia;
   end if;
	exception
		when others then
		ie_atualiza_w := 'N';
	end;
	BEGIN
   select   coalesce(max('S'),'N')
   into STRICT     ie_atualiza_w
   from     AVAL_PRE_ANESTESICA
   where    NR_SEQ_AGENDA = OLD.nr_sequencia;

   if (ie_atualiza_w = 'S') then
      update  AVAL_PRE_ANESTESICA
      set     NR_SEQ_AGENDA	 = NULL
      where	nr_seq_agenda	= OLD.nr_sequencia;
   end if;
	exception
		when others then
		ie_atualiza_w := 'N';
	end;
	BEGIN
   select   coalesce(max('S'),'N')
   into STRICT     ie_atualiza_w
   from     AUTOR_CONVENIO_EVENTO
   where    NR_SEQ_AGENDA = OLD.nr_sequencia;

   if (ie_atualiza_w = 'S') then
      update  AUTOR_CONVENIO_EVENTO
      set     NR_SEQ_AGENDA	 = NULL
      where	  nr_seq_agenda	= OLD.nr_sequencia;
   end if;
	exception
		when others then
		ie_atualiza_w := 'N';
	end;
	
end if;

if (OLD.ie_status_Agenda not in ('L','B','LF')) then
	delete FROM agenda_controle_horario
	where 	cd_agenda = OLD.cd_agenda
	and 	dt_agenda = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(OLD.dt_agenda);
end if;


exception
	when others then
      	dt_atualizacao := LOCALTIMESTAMP;
end;
<<Final>>
null;

  END;
RETURN OLD;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_agenda_paciente_delete() FROM PUBLIC;

CREATE TRIGGER agenda_paciente_delete
	BEFORE DELETE ON agenda_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_agenda_paciente_delete();

