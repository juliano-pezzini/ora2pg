-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS prescr_medica_befinsupd ON prescr_medica CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_prescr_medica_befinsupd() RETURNS trigger AS $BODY$
DECLARE

ie_rn_pre_termo_w		varchar(1)	:= 'N';
vl_const_schwartz_w		double precision;
qt_idade_w				bigint;
vl_mult_w				double precision;
vl_mult_mdrd_w			double precision;
vl_mult_negro_w			double precision;
ie_raca_negra_w			varchar(1);
ie_sexo_w				varchar(1);
ie_prescr_rn_w			varchar(1);
cd_pessoa_fisica_w		varchar(10);
ds_prescr_rn_w			varchar(255);
qt_reg_w				smallint;
ie_situacao_w			varchar(1);
ie_permite_inativo_w	varchar(1);
BEGIN
  BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;
select	max(ie_sexo)
into STRICT	ie_sexo_w
from	pessoa_fisica
where	cd_pessoa_fisica	= NEW.cd_pessoa_fisica;

if (NEW.ie_recem_nato = 'S') then
	SELECT * FROM obter_se_pf_prescr_rn(NEW.cd_estabelecimento, NEW.cd_pessoa_fisica, NEW.nm_usuario, ie_prescr_rn_w, ds_prescr_rn_w) INTO STRICT ie_prescr_rn_w, ds_prescr_rn_w;
	if (ie_prescr_rn_w = 'N') then
		 CALL Wheb_mensagem_pck.exibir_mensagem_abort(259962,'DS_PRESCRICAO_RN_W='||ds_prescr_rn_w);
	end if;
end if;

if (coalesce(OLD.DT_PRESCRICAO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_PRESCRICAO) and (NEW.DT_PRESCRICAO is not null) then
	NEW.ds_utc		:= obter_data_utc(NEW.DT_PRESCRICAO, 'HV');	
end if;

if (coalesce(OLD.DT_LIBERACAO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_LIBERACAO) and (NEW.DT_LIBERACAO is not null) then
	NEW.ds_utc_atualizacao	:= obter_data_utc(NEW.DT_LIBERACAO,'HV');
end if;

/* Ivan em 21/01/2008 OS80038 - Inicio do calculo da clearence */



/* Obter idade atual */


select	(coalesce(max(obter_idade_pf(NEW.cd_pessoa_fisica, LOCALTIMESTAMP, 'A')),0))::numeric
into STRICT	qt_idade_w
;

if (NEW.ie_calculo_clearence = 'CG') then /* Cockcroft-Galt */

	/* Obter valor multiplicacao caso seja do sexo feminino */


	select	coalesce(CASE WHEN obter_sexo_pf(NEW.cd_pessoa_fisica,'C')='F' THEN 0.85  ELSE 1 END ,1)
	into STRICT	vl_mult_w
	;
	NEW.qt_clearence	:= (140 - qt_idade_w) * dividir(NEW.qt_peso, (72 * NEW.qt_creatinina)) * (vl_mult_w);

elsif (NEW.ie_calculo_clearence = 'MDRD') then /* MDRD */

	/* Obter se raca negra */


	select	coalesce(max(ie_negro),'N')
	into STRICT	ie_raca_negra_w
	from	cor_pele a,
		pessoa_fisica b
	where	b.nr_seq_cor_pele 	= a.nr_sequencia
	and	b.cd_pessoa_fisica 	= NEW.cd_pessoa_fisica;
	/* Obter multiplicador se raca negra */


	select	coalesce(CASE WHEN max(ie_raca_negra_w)='S' THEN 1.210 WHEN max(ie_raca_negra_w)='N' THEN 1 END ,1)
	into STRICT	vl_mult_negro_w	
	;
	/* Obter valor multiplicacao caso seja do sexo feminino */


	select	coalesce(CASE WHEN obter_sexo_pf(NEW.cd_pessoa_fisica,'C')='F' THEN 0.742  ELSE 1 END ,1)
	into STRICT	vl_mult_mdrd_w
	;
	BEGIN
	NEW.qt_clearence	:= 186 * power(NEW.qt_creatinina, - 1.154) * power(qt_idade_w, - 0.203) * (vl_mult_mdrd_w) * (vl_mult_negro_w);
	exception
		when others then
		NEW.qt_clearence	:= 0;
	end;

elsif (NEW.ie_calculo_clearence = 'S') then /* Schwartz */

	/* Obter valor da constante Schwartz */


	if (qt_idade_w <= 2) and (ie_rn_pre_termo_w = 'S') then
		vl_const_schwartz_w	:= 0.33;
	elsif (qt_idade_w <= 2) and (ie_rn_pre_termo_w = 'N' ) then
		vl_const_schwartz_w	:= 0.45;
	elsif (qt_idade_w > 2) and (obter_sexo_pf(NEW.cd_pessoa_fisica,'C') = 'F') then
		vl_const_schwartz_w	:= 0.55;
	elsif (obter_sexo_pf(NEW.cd_pessoa_fisica,'C') = 'M') then
		vl_const_schwartz_w	:= 0.70;
	end if;
	/* Calcula a clearence */


	NEW.qt_clearence	:= vl_const_schwartz_w * dividir(NEW.qt_altura_cm, NEW.qt_creatinina);


elsif (NEW.ie_calculo_clearence = 'CB') then /* Counahan-Barratt */

	NEW.qt_clearence	:= 0.43 * dividir(NEW.qt_altura_cm, NEW.qt_creatinina);
end if;

if (NEW.nr_horas_validade = 0) then
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(259960);
end if;

if (NEW.nr_atendimento is not null) and
	((coalesce(NEW.nr_atendimento,0) <> coalesce(OLD.nr_atendimento,0)) or (coalesce(NEW.cd_pessoa_fisica,'X') <> coalesce(OLD.cd_pessoa_fisica,'X'))) then
	select	cd_pessoa_fisica
	into STRICT	cd_pessoa_fisica_w
	from	atendimento_paciente
	where	nr_atendimento	= NEW.nr_atendimento;

	if (cd_pessoa_fisica_w <> NEW.cd_pessoa_fisica) then
		--O paciente do atendimento nao e o mesmo da prescricao.

		CALL Wheb_mensagem_pck.exibir_mensagem_abort(173298);
	end if;
end if;

if (NEW.dt_validade_prescr < NEW.dt_inicio_prescr) then
	NEW.dt_validade_prescr := null;
end if;

if (coalesce(NEW.cd_medico,'X') <> coalesce(OLD.cd_medico,'X')) and (NEW.cd_medico is not null) then
	
	select 	coalesce(max(IE_SITUACAO),'A')
	into STRICT	ie_situacao_w
	from 	medico
	where	cd_pessoa_fisica = NEW.cd_medico;
	
	ie_permite_inativo_w := Obter_Param_Usuario(950, 82, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_permite_inativo_w);
	
	if (ie_situacao_w = 'I') and
		((ie_permite_inativo_w = 'N'  AND NEW.cd_funcao_origem = 950) or (NEW.cd_funcao_origem = 924)) then
		
		CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(259958);
		
	end if;
	
end if;

if (NEW.dt_entrega is not null) and (to_char(NEW.dt_entrega,'dd/mm/yyyy hh24:mi:ss') = '00/00/0000 00:00:00') then
	NEW.dt_entrega := null;
end if;

/* Ivan em 21/01/2008 OS80038 - Fim do calculo da clearence */


<<Final>>
qt_reg_w	:= 0;
  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_prescr_medica_befinsupd() FROM PUBLIC;

CREATE TRIGGER prescr_medica_befinsupd
	BEFORE INSERT OR UPDATE ON prescr_medica FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_prescr_medica_befinsupd();

