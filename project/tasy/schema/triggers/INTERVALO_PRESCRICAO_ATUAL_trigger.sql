-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS intervalo_prescricao_atual ON intervalo_prescricao CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_intervalo_prescricao_atual() RETURNS trigger AS $BODY$
declare

ds_horarios_w		intervalo_prescricao.ds_horarios%type;
ds_horarios_ww		intervalo_prescricao.ds_horarios%type;
ds_prim_horario_w	intervalo_prescricao.ds_prim_horario%type;
ds_prim_horario_ww	intervalo_prescricao.ds_prim_horario%type;
ds_texto_w		varchar(255);
BEGIN
  BEGIN
BEGIN
	if (NEW.hr_referencia_dieta is not null) and ((NEW.hr_referencia_dieta <> OLD.hr_referencia_dieta) or (OLD.dt_final is null)) then
		NEW.dt_final := to_date(to_char(LOCALTIMESTAMP,'dd/mm/yyyy') || ' ' || NEW.hr_referencia_dieta,'dd/mm/yyyy hh24:mi');
	end if;	
exception
	when others then
	null;
end;

if  	((coalesce(NEW.ie_acm, 'N') = 'N') and (coalesce(NEW.ie_se_necessario, 'N') = 'N') and (NEW.ds_horarios is not null or
	  NEW.ds_prim_horario is not null)) then

	ds_horarios_w := replace(replace(NEW.ds_horarios, ':', null), ' ', null);
	ds_prim_horario_w := replace(replace(NEW.ds_prim_horario, ':', null), ' ', null);

	ds_horarios_ww := coalesce(trim(both ds_horarios_w),0);
	ds_prim_horario_ww := coalesce(trim(both ds_prim_horario_w),0);

	if (obter_se_somente_numero(ds_horarios_ww) = 'N') or (obter_se_somente_numero(ds_prim_horario_ww) = 'N') then

		ds_texto_w := substr(obter_desc_expressao(345333)||' '||obter_desc_expressao(349053)||chr(10),1,255);

		if (obter_se_somente_numero(ds_horarios_ww) = 'N') then
			ds_texto_w := substr(ds_texto_w ||' - '||obter_desc_expressao(291449)||chr(10),1,255);
		end if;

		if (obter_se_somente_numero(ds_prim_horario_ww) = 'N') then
			ds_texto_w := substr(ds_texto_w ||' - '||obter_desc_expressao(296314),1,255);
		end if;

		CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_texto_w);
	end if;
end if;

  END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_intervalo_prescricao_atual() FROM PUBLIC;

CREATE TRIGGER intervalo_prescricao_atual
	BEFORE INSERT OR UPDATE ON intervalo_prescricao FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_intervalo_prescricao_atual();

