-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS titulo_pagar_baixa_befinsert ON titulo_pagar_baixa CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_titulo_pagar_baixa_befinsert() RETURNS trigger AS $BODY$
DECLARE

ie_baixa_lote_contab_w		varchar(2)	:= 'S';
cd_estabelecimento_w		integer;
qt_registro_w			bigint;
cd_empresa_w			smallint;
cont_w				bigint;
ie_baixa_tit_repasse_nf_w	varchar(255);
nr_repasse_terceiro_w		bigint;
ie_moeda_dif_w			varchar(100);
cd_moeda_padrao_w		bigint;
nr_seq_nota_fiscal_w		bigint;
ie_exige_nf_baixa_titulo_w	varchar(2);
ie_tipo_titulo_cpa_w		varchar(2);
nr_seq_pls_pag_prest_w		varchar(10);
cd_cgc_w			bigint;
cd_pessoa_fisica_w		bigint;
ie_movto_trans_fin_w		bigint;
LoteContabContabil_w		varchar(100);
ie_status_w			varchar(3);
dt_liberacao_w			timestamp;
ie_origem_titulo_w		varchar(10);
nr_lote_contabil_w		bigint;
ds_tipo_lote_contabil_w		varchar(40);
nr_seq_banco_w			movto_trans_financ.nr_seq_banco%type;
nr_seq_caixa_w			movto_trans_financ.nr_seq_caixa%type;
qt_tit_rec_w			bigint;
ie_processo_camara_w		pls_parametros_camara.ie_processo_camara%type;
nr_titulo_pagar_w		pls_titulo_lote_camara.nr_titulo_pagar%type;
nr_seq_lote_w			pls_titulo_lote_camara.nr_sequencia%type;
ie_baixa_camara_compensacao_w	bigint;
cd_tipo_baixa_w tipo_baixa_cpa.cd_tipo_baixa%type;
ds_tipo_baixa_w tipo_baixa_cpa.ds_tipo_baixa%type;
nr_seq_imposto_w		titulo_pagar_imposto.nr_sequencia%type;
ie_gerar_titulo_pagar_w		tributo.ie_gerar_titulo_pagar%type;
vl_saldo_titulo_w		titulo_pagar.vl_saldo_titulo%type;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	b.ie_gerar_titulo_pagar
from	tributo b,
	titulo_pagar_imposto a
where	a.cd_tributo	= b.cd_tributo
and Obter_Titulo_Imposto(a.nr_sequencia) = 0
and	a.nr_titulo	= NEW.nr_titulo;


BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
select	max(cd_estabelecimento),
	max(nr_repasse_terceiro),
	max(nr_seq_nota_fiscal),
	max(ie_tipo_titulo),
	max(nr_seq_pls_pag_prest),
	coalesce(max(ie_status),'D'),
	max(dt_liberacao),
	max(ie_origem_titulo)
into STRICT	cd_estabelecimento_w,
	nr_repasse_terceiro_w,
	nr_seq_nota_fiscal_w,
	ie_tipo_titulo_cpa_w,
	nr_seq_pls_pag_prest_w,
	ie_status_w,
	dt_liberacao_w,
	ie_origem_titulo_w
from	titulo_pagar
where	nr_titulo	= NEW.nr_titulo;

select	max(coalesce(ie_moeda_dif, 'S')),
	max(cd_moeda_padrao),
	coalesce(max(ie_baixa_tit_repasse_nf), 'S')
into STRICT	ie_moeda_dif_w,
	cd_moeda_padrao_w,
	ie_baixa_tit_repasse_nf_w
from	parametros_contas_pagar
where	cd_estabelecimento	= cd_estabelecimento_w;

select	max(cd_tipo_baixa)
into STRICT	cd_tipo_baixa_w
from (
	SELECT	a.cd_tipo_baixa
	from	tipo_baixa_cpa A,
		TIPO_BAIXA_CPA_PERFIL x
	where	a.CD_TIPO_BAIXA  = NEW.CD_TIPO_BAIXA
	and 	x.cd_perfil = coalesce(wheb_usuario_pck.get_cd_perfil,x.cd_perfil)
	and 	x.IE_SITUACAO = 'A'
	
union

	SELECT	a.cd_tipo_baixa
	from	tipo_baixa_cpa A
	where	a.CD_TIPO_BAIXA  = NEW.CD_TIPO_BAIXA
	and (not exists (select 1 from TIPO_BAIXA_CPA_PERFIL x where a.CD_TIPO_BAIXA  = x.CD_TIPO_BAIXA)
	or 	 not exists (select 1 from TIPO_BAIXA_CPA_PERFIL x where a.CD_TIPO_BAIXA  = x.CD_TIPO_BAIXA and x.IE_SITUACAO = 'A'))) alias5;

if (cd_tipo_baixa_w is null) then
		
select	a.ds_tipo_baixa
into STRICT	ds_tipo_baixa_w
from	tipo_baixa_cpa A
where	a.CD_TIPO_BAIXA  = NEW.CD_TIPO_BAIXA;
	--O tipo de baixa #@DS_TIPO_BAIXA#@, nao esta liberado para o perfil. Verifique a regra nos "Cadastros Gerais (Shift + F11)".

	CALL Wheb_mensagem_pck.exibir_mensagem_abort(1076905,'DS_TIPO_BAIXA='||ds_tipo_baixa_w);
end if;


/* Francisco - 03/10/2011 - Tratar titulo provisorio, so pode baixar quando e glosa */


if (ie_status_w = 'P') and (coalesce(NEW.vl_glosa,0) = 0) then
	/*O titulo #@NR_TITULO#@ esta com status provisorio, o mesmo nao pode ser baixado.*/


	CALL Wheb_mensagem_pck.exibir_mensagem_abort(204532,'NR_TITULO='||NEW.nr_titulo);

/*	Edgar 17/01/2013, OS 537641, este tratamento nao esta correto, comentado abaixo
else

	if	(dt_liberacao_w is null) and
		(ie_origem_titulo_w = '16')then
		-- O titulo #@NR_TITULO#@ nao esta liberado, o mesmo nao pode ser baixado.

		Wheb_mensagem_pck.exibir_mensagem_abort(204533,'NR_TITULO='||:new.nr_titulo);
	end if;
*/

end if;

if (ie_baixa_tit_repasse_nf_w = 'N') and (nr_repasse_terceiro_w is not null) then
	select	count(*)
	into STRICT	cont_w
	from	repasse_nota_fiscal
	where	nr_repasse_terceiro	= nr_repasse_terceiro_w;
	if (cont_w = 0) then
		/*Este titulo esta vinculado a um repasse sem nota fiscal gerada!*/


		CALL Wheb_mensagem_pck.exibir_mensagem_abort(204534);
	end if;
end if;

if (ie_moeda_dif_w = 'N') and (cd_moeda_padrao_w <> NEW.cd_moeda) then
	/*Nao pode ser gerada baixa com moeda diferente da moeda padrao!*/


	CALL Wheb_mensagem_pck.exibir_mensagem_abort(204535);
end if;

if (fin_obter_se_mes_aberto(cd_estabelecimento_w, NEW.dt_baixa,'CP',ie_tipo_titulo_cpa_w,null,null,null) = 'N') then
	/*Nao e possivel baixar o titulo com esta data pois este mes/dia de referencia financeiro ja esta fechado!*/


	CALL Wheb_mensagem_pck.exibir_mensagem_abort(204536);
end if;

/* Projeto Davita  - Nao deixa gerar movimento contabil apos fechamento  da data */


CALL philips_contabil_pck.valida_se_dia_fechado(OBTER_EMPRESA_ESTAB(cd_estabelecimento_w),NEW.dt_baixa);

LoteContabContabil_w := obter_param_usuario(855, 47, obter_perfil_ativo, NEW.nm_usuario, cd_estabelecimento_w, LoteContabContabil_w);

/* Felipe e Francisco - 07/03/2011 - OS 297213 */


select	coalesce(max(ie_exige_nf_baixa_titulo),'N')
into STRICT	ie_exige_nf_baixa_titulo_w
from	pls_parametro_pagamento
where	cd_estabelecimento	= cd_estabelecimento_w;

if (ie_exige_nf_baixa_titulo_w <> 'N') and (nr_seq_nota_fiscal_w is null) and (nr_seq_pls_pag_prest_w is not null) and (ie_tipo_titulo_cpa_w <> '4') then

	select	cd_cgc,
		cd_pessoa_fisica
	into STRICT	cd_cgc_w,
		cd_pessoa_fisica_w
	from	titulo_pagar
	where	nr_titulo = NEW.nr_titulo;
	
	if	(ie_exige_nf_baixa_titulo_w = 'PJ' AND cd_cgc_w is not null) or /* Se PJ */

		(ie_exige_nf_baixa_titulo_w = 'PF' AND cd_pessoa_fisica_w is not null) or /* Se PF */

		(ie_exige_nf_baixa_titulo_w = 'S') then /* Todos */

		-- E necessario ter uma nota fiscal vinculada a este titulo (#@NR_TITULO#@) para poder baixar o mesmo. Parametro "Exige NF para baixa de titulo" em OPS - Gestao de Operadoras -> Parametros OPS -> Pagamento da producao.

		CALL Wheb_mensagem_pck.exibir_mensagem_abort(204539,'NR_TITULO='||NEW.nr_titulo);
	end if;

	-- Caso nao tenha pessoa no titulo

	if (cd_cgc_w is null) and (cd_pessoa_fisica_w is null) then
		if (ie_exige_nf_baixa_titulo_w = 'PJ') then
			-- E necessario ter uma pessoa juridica e uma nota fiscal vinculada a este titulo (#@NR_TITULO#@) para poder baixar o mesmo. Parametro "Exige NF para baixa de titulo" em OPS - Gestao de Operadoras -> Parametros OPS -> Pagamento da producao.

			CALL Wheb_mensagem_pck.exibir_mensagem_abort(204537,'NR_TITULO='||NEW.nr_titulo);

		elsif (ie_exige_nf_baixa_titulo_w = 'PF') then
			-- E necessario ter uma pessoa fisica e uma nota fiscal vinculada a este titulo (#@NR_TITULO#@) para poder baixar o mesmo. Parametro "Exige NF para baixa de titulo" em OPS - Gestao de Operadoras -> Parametros OPS -> Pagamento da producao.

			CALL Wheb_mensagem_pck.exibir_mensagem_abort(204538,'NR_TITULO='||NEW.nr_titulo);
		end if;
	end if;
end if;

if (cd_estabelecimento_w is not null) then

	select	max(ie_baixa_lote_contab)
	into STRICT	ie_baixa_lote_contab_w
	from	parametros_contas_pagar
	where 	cd_estabelecimento	= cd_estabelecimento_w;

	select	max(cd_empresa)
	into STRICT	cd_empresa_w
	from	estabelecimento
	where	cd_estabelecimento = cd_estabelecimento_w;

	/* ahoffelder - OS 325513 - 17/06/2011 - a consistencia ja e feita na MOVTO_TRANS_FINANC_INSERT */


	select	count(*)
	into STRICT	ie_movto_trans_fin_w
	from	v$session
	where	audsid		= (SELECT userenv('sessionid') )
	and	upper(action) 	= 'ATUALIZAR_TRANSACAO_FINANCEIRA';

	if (cd_empresa_w is not null) and (coalesce(ie_movto_trans_fin_w,0) = 0) then

		if (ie_baixa_lote_contab_w = 'N') then
			select	count(*)
			into STRICT	qt_registro_w
			from 	ctb_mes_ref
			where	cd_empresa = cd_empresa_w
       	        	and	substr(ctb_obter_se_mes_fechado(nr_sequencia,cd_estabelecimento_w),1,1) = 'F'
       		        and	trunc(dt_referencia,'month') = trunc(NEW.dt_baixa,'month');

			if (qt_registro_w > 0) then
				/*O mes de referencia na contabilidade para esta data de baixa (#@DT_BAIXA#@) ja foi fechado!*/


				CALL Wheb_mensagem_pck.exibir_mensagem_abort(204540,'DT_BAIXA='||to_char(NEW.dt_baixa,'dd/mm/yyyy'));
			end if;

		elsif (ie_baixa_lote_contab_w = 'L') then

			if (coalesce(LoteContabContabil_w,'S') = 'S') or
				((coalesce(LoteContabContabil_w,'S') = 'N') and (NEW.nr_bordero is null)) then

				-- se o parametro 47 do bordero estiver para N, de nao permitir baixar o bordero com lote contab de CB fechado na data,

				-- e o numero de bordero nao for nulo, nao precisa fazer esta consistencia, 

				-- pois estara sendo feito no Bordero a pagar.


				select	count(*),
					max(a.nr_lote_contabil),
					max(b.ds_tipo_lote_contabil)
				into STRICT	qt_registro_w,
					nr_lote_contabil_w,
					ds_tipo_lote_contabil_w
				from 	tipo_lote_contabil b,
					lote_contabil a
				where	a.cd_tipo_lote_contabil	= b.cd_tipo_lote_contabil
				and	a.cd_estabelecimento = cd_estabelecimento_w
				and	trunc(a.dt_referencia,'dd')	= trunc(NEW.dt_baixa,'dd')
				and	a.cd_tipo_lote_contabil	= 7
				and	exists (	SELECT	1
							from	movimento_contabil z
							where	z.nr_lote_contabil	= a.nr_lote_contabil);

				if (qt_registro_w > 0) then
					/*Ja foi gerado lote contabil para esta data de baixa.
					Lote: #@NR_LOTE_CONTABIL#@
					Tipo de lote contabil: #@DS_TIPO_LOTE_CONTABIL#@
					Data: #@DT_BAIXA#@*/

					CALL Wheb_mensagem_pck.exibir_mensagem_abort(204541, 'NR_LOTE_CONTABIL='||nr_lote_contabil_w ||
											';DS_TIPO_LOTE_CONTABIL='||ds_tipo_lote_contabil_w ||
											';DT_BAIXA='||to_char(NEW.dt_baixa,'dd/mm/yyyy'));
				end if;

			end if;

		elsif (ie_baixa_lote_contab_w = 'M') then
			
			if (coalesce(LoteContabContabil_w,'S') = 'S') or
				((coalesce(LoteContabContabil_w,'S') = 'N') and (NEW.nr_bordero is null)) then

				-- se o parametro 47 do bordero estiver para N, de nao permitir baixar o bordero com lote contab de CB fechado na data,

				-- e o numero de bordero nao for nulo, nao precisa fazer esta consistencia, 

				-- pois estara sendo feito no Bordero a pagar.


				select	count(*),
					max(a.nr_lote_contabil),
					max(b.ds_tipo_lote_contabil)
				into STRICT	qt_registro_w,
					nr_lote_contabil_w,
					ds_tipo_lote_contabil_w
				from 	tipo_lote_contabil b,
					lote_contabil a
				where	a.cd_tipo_lote_contabil	= b.cd_tipo_lote_contabil
				and	a.cd_estabelecimento = cd_estabelecimento_w
				and	trunc(a.dt_referencia,'dd')	>= trunc(NEW.dt_baixa,'dd')
				and	trunc(a.dt_referencia,'month')	= trunc(NEW.dt_baixa,'month')
				and	a.cd_tipo_lote_contabil	= 7
				and	exists (	SELECT	1
							from	movimento_contabil z
							where	z.nr_lote_contabil	= a.nr_lote_contabil);

				if (qt_registro_w > 0) then
					/*Ja foi gerado lote contabil para esta data de baixa.
					Lote: #@NR_LOTE_CONTABIL#@
					Tipo de lote contabil: #@DS_TIPO_LOTE_CONTABIL#@
					Data: #@DT_BAIXA#@*/

					CALL Wheb_mensagem_pck.exibir_mensagem_abort(204541, 'NR_LOTE_CONTABIL='||nr_lote_contabil_w ||
											';DS_TIPO_LOTE_CONTABIL='||ds_tipo_lote_contabil_w ||
											';DT_BAIXA='||to_char(NEW.dt_baixa,'dd/mm/yyyy'));
				end if;

			end if;
		
		elsif (ie_baixa_lote_contab_w = 'F') then

			select	count(*)
			into STRICT	qt_registro_w
			from 	ctb_mes_ref
			where	cd_empresa = cd_empresa_w
                		and	trunc(dt_referencia,'month') = trunc(NEW.dt_baixa,'month');

			if (qt_registro_w > 0) then
				/*Ja existe mes de referencia na contabilidade para esta data de baixa (#@DT_BAIXA#@).*/


				CALL Wheb_mensagem_pck.exibir_mensagem_abort(204542,'DT_BAIXA='||NEW.dt_baixa);
			end if;

		end if;
	end if;
	
	/* Controle Bancario */


	select	max(a.nr_seq_banco)
	into STRICT 	nr_seq_banco_w
	from 	movto_trans_financ a
	where 	a.nr_sequencia	= NEW.nr_seq_movto_trans_fin;

	/* tesoraria */


	select	max(a.nr_seq_caixa)
	into STRICT 	nr_seq_caixa_w
	from 	movto_trans_financ a
	where 	a.nr_sequencia	= NEW.nr_seq_movto_trans_fin;
	
	/* abatimento */


	select	count(*)
	into STRICT	qt_tit_rec_w
	from	titulo_receber_liq a
	where	a.nr_seq_baixa_pagar	= NEW.nr_sequencia
	and	a.nr_tit_pagar		= NEW.nr_titulo;

	if (coalesce(qt_tit_rec_w,0)	> 0) then
		NEW.ie_origem_baixa := 'AB';
	
	elsif (NEW.nr_bordero is not null) then
		NEW.ie_origem_baixa := 'BP';
	
	elsif (NEW.nr_seq_movto_trans_fin is not null) and (nr_seq_banco_w is not null) then
		NEW.ie_origem_baixa := 'CB';
	
	elsif (NEW.nr_seq_escrit is not null) then
		NEW.ie_origem_baixa := 'PE';
	
	elsif (NEW.nr_seq_baixa_origem is not null) then
		NEW.ie_origem_baixa := 'ET';
	
	elsif (NEW.nr_seq_lote_enc_contas is not null) then
		NEW.ie_origem_baixa := 'EC';
	
	elsif (NEW.nr_seq_movto_trans_fin  is not null) and (nr_seq_caixa_w is not null) then
		NEW.ie_origem_baixa := 'TS';
	else 	
		NEW.ie_origem_baixa := 'TP';
	end if;
	
	/*verificar se o titulo que esta recebendo a baixa esta em um lote de camra de compensacao que nao esta baixado.*/


	select	count(a.nr_titulo_pagar),
		max(b.nr_sequencia)
	into STRICT	nr_titulo_pagar_w,
		nr_seq_lote_w
	from	pls_titulo_lote_camara a,
		pls_lote_camara_comp b
	where	a.nr_seq_lote_camara	= b.nr_sequencia
	and	a.nr_titulo_pagar	= NEW.nr_titulo;	
	
	select	coalesce(max(a.ie_processo_camara),'CO')
	into STRICT	ie_processo_camara_w
	from	pls_parametros_camara a
	where 	cd_estabelecimento = cd_estabelecimento_w;

	if (ie_processo_camara_w = 'CA') and	-- processo camara de compensacao for regime de caixa
		(nr_titulo_pagar_w > 0) and 		-- titulo estiver na camara
		(coalesce(NEW.vl_glosa,0) = 0) then 	-- nao ter valor de glosa
		
		/*verifica se a rotina que esta efetuando a baixa e a rotina que baixa pela camara. Se nao for, deve consistir.*/


		select	count(*)
		into STRICT	ie_baixa_camara_compensacao_w
		from	v$session
		where	audsid			= (SELECT userenv('sessionid') )
		and (upper(action) 	= 'PLS_BAIXAR_LOTE_CAMARA_COMP' or
				 upper(action)  = 'PLS_ESTORNAR_LOTE_CAMARA_COMP');
				

		if (ie_baixa_camara_compensacao_w = 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(335779,	'NR_SEQ_LOTE_W=' || nr_seq_lote_w || ';NR_TITULO_W=' || NEW.nr_titulo);
		end if;
	end if;
	
	select vl_saldo_titulo
	into STRICT vl_saldo_titulo_w
	from titulo_pagar
	where nr_titulo = NEW.nr_titulo;

	if (NEW.vl_baixa > 0 and NEW.vl_baixa = vl_saldo_titulo_w) then
	
		open c01;
		loop
		fetch c01 into
			nr_seq_imposto_w,
			ie_gerar_titulo_pagar_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */

			if (ie_gerar_titulo_pagar_w = 'B') then
				CALL Gerar_titulo_tributo(nr_seq_imposto_w, NEW.nm_usuario);
			end if;

		end loop;
		close c01;
	
	end if;

end if;

NEW.DS_STACK := substr('CallStack Insert: ' || substr(dbms_utility.format_call_stack,1,3980),1,4000);
end if;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_titulo_pagar_baixa_befinsert() FROM PUBLIC;

CREATE TRIGGER titulo_pagar_baixa_befinsert
	BEFORE INSERT ON titulo_pagar_baixa FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_titulo_pagar_baixa_befinsert();

