-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS conv_mat_sistema_externo_ins ON conv_mat_sistema_externo CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_conv_mat_sistema_externo_ins() RETURNS trigger AS $BODY$
declare
qt_registros_w	bigint;
Pragma Autonomous_Transaction;

BEGIN

select	count(*)
into STRICT	qt_registros_w
from	conv_mat_sistema_externo
where	nr_sequencia <> NEW.nr_sequencia
and	cd_material = NEW.cd_material
and	ie_sistema = NEW.ie_sistema
and	cd_estabelecimento = NEW.cd_estabelecimento
and	obter_se_periodo_vigente(pkg_date_utils.start_of(dt_inicio_vigencia, 'DD', null), pkg_date_utils.start_of(dt_fim_vigencia, 'DD', null), pkg_date_utils.start_of(LOCALTIMESTAMP, 'DD', null)) = 'S';

if (qt_registros_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(819869);
	/*Já existe um registro vigênte para esse material. Não é possível incluir registros duplicados.*/


end if;

select	count(*)
into STRICT	qt_registros_w
from	conv_mat_sistema_externo
where	nr_sequencia <> NEW.nr_sequencia
and	cd_sistema_externo = NEW.cd_sistema_externo
and	cd_estabelecimento = NEW.cd_estabelecimento
and	obter_se_periodo_vigente(pkg_date_utils.start_of(NEW.dt_inicio_vigencia, 'DD', null), pkg_date_utils.start_of(NEW.dt_fim_vigencia, 'DD', null), pkg_date_utils.start_of(LOCALTIMESTAMP, 'DD', null)) = 'S';

if (qt_registros_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(850434);
	/*O código do material externo digitado já está sendo usado para outro material. Não é possível vincular o mesmo código para dois ou mais materiais.*/


end if;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_conv_mat_sistema_externo_ins() FROM PUBLIC;

CREATE TRIGGER conv_mat_sistema_externo_ins
	BEFORE INSERT OR UPDATE ON conv_mat_sistema_externo FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_conv_mat_sistema_externo_ins();

