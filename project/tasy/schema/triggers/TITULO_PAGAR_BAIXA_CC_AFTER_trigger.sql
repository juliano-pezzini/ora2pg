-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS titulo_pagar_baixa_cc_after ON titulo_pagar_baixa_cc CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_titulo_pagar_baixa_cc_after() RETURNS trigger AS $BODY$
declare

vl_movimento_w			ctb_documento.vl_movimento%type;
dt_competencia_w		ctb_documento.dt_competencia%type;
cd_estabelecimento_w		ctb_documento.cd_estabelecimento%type;
nr_seq_trans_fin_w		ctb_documento.nr_seq_trans_financ%type;
ie_contab_classif_baixa_w	parametros_contas_pagar.ie_contab_classif_baixa%type;
ie_tipo_titulo_w		titulo_pagar.ie_tipo_titulo%type;
nm_tabela_w			ctb_documento.nm_tabela%type;
ie_contab_cp_w			parametro_tesouraria.ie_contab_cp%type;
nr_seq_proj_rec_w       ctb_documento.nr_seq_proj_rec%type;
ie_contab_trans_fin_baixa_w ctb_param_lote_contas_pag.ie_contab_trans_fin_baixa%type;
nr_seq_escrit_w             titulo_pagar_baixa.nr_seq_escrit%type;

c01 CURSOR FOR
	SELECT	a.nm_atributo
	from	atributo_contab a
	where 	a.cd_tipo_lote_contab = 7
	and 	a.nm_atributo in ( 	'VL_BAIXA', 'VL_DESCONTOS', 'VL_JUROS',
					'VL_MULTA', 'VL_OUTROS_ACRESCIMOS', 'VL_PAGO',
					'VL_BAIXA_ESTRANG', 'VL_MOEDA_COMPLEMENTAR');

c01_w		c01%rowtype;
	
c02 CURSOR FOR
	SELECT	a.nm_atributo
	from	atributo_contab a
	where 	a.cd_tipo_lote_contab = 10
	and 	a.nm_atributo in (	'VL_BAIXA', 'VL_DESCONTOS', 'VL_JUROS',
					'VL_MULTA', 'VL_OUTROS_ACRESCIMOS');

c02_w		c02%rowtype;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
select 	a.dt_baixa,
	b.cd_estabelecimento,
	a.nr_seq_trans_fin,
	b.ie_tipo_titulo,
   	b.nr_seq_proj_rec,
        a.nr_seq_escrit
into STRICT	dt_competencia_w,
	cd_estabelecimento_w,
	nr_seq_trans_fin_w,
	ie_tipo_titulo_w,
    	nr_seq_proj_rec_w,
        nr_seq_escrit_w
from	titulo_pagar_baixa a,
	titulo_pagar b
where	a.nr_titulo	= b.nr_titulo
and	a.nr_sequencia 	= NEW.nr_seq_baixa
and 	a.nr_titulo	= NEW.nr_titulo;

BEGIN
select  coalesce(ie_contab_classif_baixa, 'N')
into STRICT    ie_contab_classif_baixa_w
from    parametros_contas_pagar
where   cd_estabelecimento = cd_estabelecimento_w;
exception when others then
        ie_contab_classif_baixa_w := 'N';
end;

BEGIN
select  CASE WHEN a.ie_ctb_online='S' THEN  coalesce(a.ie_contab_classif_baixa, 'N')  ELSE ie_contab_classif_baixa_w END
into STRICT    ie_contab_classif_baixa_w
from    ctb_param_lote_contas_pag a
where   a.cd_empresa = obter_empresa_estab(cd_estabelecimento_w)
and     coalesce(a.cd_estab_exclusivo, cd_estabelecimento_w) = cd_estabelecimento_w;
exception when others then
        null;
end;

open c01;
loop
fetch c01 into	
	c01_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	BEGIN
	
	vl_movimento_w:= null;
	
	if	((ie_tipo_titulo_w in ('5','14','26')) and (c01_w.nm_atributo <> 'VL_JUROS') and (ie_contab_classif_baixa_w 	= 'S') and (c01_w.nm_atributo <> 'VL_BAIXA_ESTRANG') and (c01_w.nm_atributo <> 'VL_MOEDA_COMPLEMENTAR')) then
		BEGIN
		
		vl_movimento_w:= 	case c01_w.nm_atributo
					when 'VL_BAIXA' then NEW.vl_baixa
					when 'VL_DESCONTOS' then NEW.vl_desconto
					when 'VL_MULTA'  then NEW.vl_multa
					when 'VL_OUTROS_ACRESCIMOS'  then NEW.vl_outros_acrescimos
					when 'VL_PAGO'  then NEW.vl_pago
					else
						null
					end;
		
		if (coalesce(vl_movimento_w, 0) <> 0) then
			BEGIN
			delete
			from    ctb_documento
			where   nm_atributo = c01_w.nm_atributo
			and     cd_estabelecimento = cd_estabelecimento_w
			and     nm_tabela = nm_tabela_w
			and     nr_documento = NEW.nr_titulo
			and     nr_seq_doc_compl = NEW.nr_seq_baixa
			and     nr_doc_analitico = NEW.nr_sequencia;
			
			nm_tabela_w:= 'TITULO_PAGAR_BAIXA_CC';
			
			end;
		end if;
		
		
		
		end;
	elsif ((ie_tipo_titulo_w = '21') and (c01_w.nm_atributo <> 'VL_BAIXA') and (ie_contab_classif_baixa_w 	= 'S') and (c01_w.nm_atributo <> 'VL_BAIXA_ESTRANG') and (c01_w.nm_atributo <> 'VL_MOEDA_COMPLEMENTAR')) then
		BEGIN
		
		vl_movimento_w:= 	case c01_w.nm_atributo
					when 'VL_JUROS' then NEW.vl_juros
					when 'VL_DESCONTOS' then NEW.vl_desconto
					when 'VL_MULTA'  then NEW.vl_multa
					when 'VL_OUTROS_ACRESCIMOS'  then NEW.vl_outros_acrescimos
					when 'VL_PAGO'  then NEW.vl_pago
					else
						null
					end;
		
		if (coalesce(vl_movimento_w, 0) <> 0) then
			BEGIN
			
			delete
			from	ctb_documento
			where	nm_atributo = c01_w.nm_atributo
			and 	cd_estabelecimento = cd_estabelecimento_w
			and 	nm_tabela = nm_tabela_w
			and		nr_documento = NEW.nr_titulo
			and 	nr_seq_doc_compl = NEW.nr_seq_baixa
			and     nr_doc_analitico = NEW.nr_sequencia;
			
			nm_tabela_w:= 'TITULO_PAGAR_BAIXA_CC';
			
			end;
		end if;
		
		end;
	elsif	((ie_contab_classif_baixa_w = 'T') and (c01_w.nm_atributo <> 'VL_BAIXA_ESTRANG') and (c01_w.nm_atributo <> 'VL_MOEDA_COMPLEMENTAR')) then
		BEGIN
		
		vl_movimento_w:= 	case c01_w.nm_atributo
					when 'VL_BAIXA' then NEW.vl_baixa
					when 'VL_JUROS' then NEW.vl_juros
					when 'VL_DESCONTOS' then NEW.vl_desconto
					when 'VL_MULTA'  then NEW.vl_multa
					when 'VL_OUTROS_ACRESCIMOS'  then NEW.vl_outros_acrescimos
					when 'VL_PAGO'  then NEW.vl_pago
					else
						null
					end;
		
		
		
		if (coalesce(vl_movimento_w, 0) <> 0) then
			BEGIN
			
			delete
			from	ctb_documento
			where	nm_atributo = c01_w.nm_atributo
			and 	cd_estabelecimento = cd_estabelecimento_w
			and 	nm_tabela = nm_tabela_w
			and		nr_documento = NEW.nr_titulo
			and 	nr_seq_doc_compl = NEW.nr_seq_baixa
			and     nr_doc_analitico = NEW.nr_sequencia;
			
			nm_tabela_w:= 'TITULO_PAGAR_BAIXA_CC_CONTAB_V';
			
			end;
		end if;
		
		end;
	else
		BEGIN
		vl_movimento_w	:=	case c01_w.nm_atributo
					when 'VL_BAIXA_ESTRANG' then NEW.vl_baixa_estrang
					when 'VL_MOEDA_COMPLEMENTAR' then NEW.vl_complemento
					else
						null
					end;
					
		nm_tabela_w:=	'TITULO_PAGAR_BAIXA_CC';
		end;
	end if;
	
	
				
	if (coalesce(vl_movimento_w, 0) <> 0) then
		BEGIN
		select  ie_contab_trans_fin_baixa
		into STRICT    ie_contab_trans_fin_baixa_w
		from    ctb_param_lote_contas_pag
		where   cd_empresa = obter_empresa_estab(cd_estabelecimento_w)
		and     coalesce(cd_estab_exclusivo, cd_estabelecimento_w) = cd_estabelecimento_w  LIMIT 1;
		exception
		    when too_many_rows then
			ie_contab_trans_fin_baixa_w := 'N';
            	    when no_data_found then
			ie_contab_trans_fin_baixa_w := 'N';
		    when others then
			ie_contab_trans_fin_baixa_w := 'N';
		end;

		if (ie_contab_trans_fin_baixa_w = 'S') and (c01_w.nm_atributo in ('VL_BAIXA', 'VL_PAGO')) and (coalesce(nr_seq_escrit_w,0) <> 0) then

		    select  nr_seq_trans_fin_baixa
		    into STRICT    nr_seq_trans_fin_w
		    from    titulo_pagar
		    where   nr_titulo = NEW.nr_titulo;

		end if;
		CALL ctb_concil_financeira_pck.ctb_gravar_documento(	cd_estabelecimento_w,
									dt_competencia_w,
									7,
									nr_seq_trans_fin_w,
									13,
									NEW.nr_titulo,
									NEW.nr_seq_baixa,
									NEW.nr_sequencia,
									vl_movimento_w,
									nm_tabela_w,
									c01_w.nm_atributo,
									NEW.nm_usuario,
                                    'P',
                                    null,
                                    nr_seq_proj_rec_w);
	end if;
	
	end;
end loop;
close c01;


BEGIN
select  coalesce(ie_contab_cp, 'N')
into STRICT    ie_contab_cp_w
from    parametro_tesouraria
where   cd_estabelecimento = cd_estabelecimento_w;
exception when others then
        ie_contab_cp_w := 'N';
end;

BEGIN
select  CASE WHEN a.ie_ctb_online='S' THEN  coalesce(a.ie_contab_cp, 'N')  ELSE ie_contab_cp_w END
into STRICT    ie_contab_cp_w
from    ctb_param_lote_tesouraria a
where   a.cd_empresa = obter_empresa_estab(cd_estabelecimento_w)
and     coalesce(a.cd_estab_exclusivo, cd_estabelecimento_w) = cd_estabelecimento_w;
exception when others then
        null;
end;

if (ie_contab_cp_w = 'S') then
	BEGIN

	open c02;
	loop
	fetch c02 into	
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		BEGIN
		
		vl_movimento_w:= 	case c01_w.nm_atributo
					when 'VL_BAIXA' then NEW.vl_baixa
					when 'VL_DESCONTOS' then NEW.vl_desconto
					when 'VL_JUROS'  then NEW.vl_juros
					when 'VL_MULTA'  then NEW.vl_multa
					when 'VL_OUTROS_ACRESCIMOS'  then NEW.vl_outros_acrescimos
					end;
		
		delete 	from	ctb_documento
		where	nm_atributo = c01_w.nm_atributo
		and 	nm_tabela = 'TITULO_PAGAR_BAIXA_CC_CONTAB_V'
		and	nr_documento = NEW.nr_titulo
		and 	dt_competencia = dt_competencia_w
		and 	nr_seq_doc_compl = NEW.nr_seq_baixa;
		
		if (coalesce(vl_movimento_w, 0) <> 0) then
		BEGIN
		
		CALL ctb_concil_financeira_pck.ctb_gravar_documento(	cd_estabelecimento_w,
									dt_competencia_w,
									10,
									nr_seq_trans_fin_w,
									13,
									NEW.nr_titulo,
									NEW.nr_sequencia,
									null,
									vl_movimento_w,
									'TITULO_PAGAR_BAIXA_CC_CONTAB_V',
									c02_w.nm_atributo,
									NEW.nm_usuario,
                                    'P',
                                    null,
                                    nr_seq_proj_rec_w);
		
			
			end;
		end if;
		
		end;
	end loop;
	close c02;

	end;
end if;
end if;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_titulo_pagar_baixa_cc_after() FROM PUBLIC;

CREATE TRIGGER titulo_pagar_baixa_cc_after
	AFTER INSERT ON titulo_pagar_baixa_cc FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_titulo_pagar_baixa_cc_after();

