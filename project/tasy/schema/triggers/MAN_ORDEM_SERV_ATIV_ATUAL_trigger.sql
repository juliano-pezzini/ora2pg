-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS man_ordem_serv_ativ_atual ON man_ordem_serv_ativ CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_man_ordem_serv_ativ_atual() RETURNS trigger AS $BODY$
declare

nr_seq_classif_w	 bigint;
ie_em_programacao_w	varchar(1);
ie_progr_analis_w	varchar(1);
ie_origem_w		proj_projeto.ie_origem%type;
dt_inic_real_etapa_w	timestamp;
nr_seq_proj_cron_etapa_w		bigint	:= 0;
ie_status_ordem_w	varchar(1);
vl_param_59_w			varchar(1);
ie_usuario_controle_w	varchar(1);

BEGIN

if	((user = 'CORP' or user = 'TASY')
	and	wheb_usuario_pck.get_cd_setor_atendimento in (2,4,7)) then
	
	vl_param_59_w := Obter_Param_Usuario_padrao(296, 59, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento);

	select	coalesce(max('S'), 'N')
	into STRICT	ie_usuario_controle_w
	from	usuario_controle u
	where	u.nm_usuario = NEW.nm_usuario_exec
	and		trunc(NEW.dt_atividade) = trunc(u.dt_entrada);

	if (	(TG_OP = 'INSERT' or (TG_OP = 'UPDATE' and NEW.DT_ATIVIDADE != OLD.DT_ATIVIDADE))
		and (ie_usuario_controle_w <> 'S' and vl_param_59_w = 'S')) then
		BEGIN
			CALL wheb_mensagem_pck.exibir_mensagem_abort(247219);
		end;
	end if;
end if;

if (user = 'CORP') then
	select	nr_seq_proj_cron_etapa,
			ie_status_ordem
	into STRICT	nr_seq_proj_cron_etapa_w,
			ie_status_ordem_w
	from	man_ordem_servico
	where	nr_sequencia = NEW.nr_seq_ordem_serv;
	
	/*if (nr_seq_proj_cron_etapa_w > 0 and ie_status_ordem_w = 3) then
		Wheb_mensagem_pck.exibir_mensagem_abort(450302);
	end if;
	*/

	NEW.qt_minuto	:= (coalesce(NEW.DT_FIM_ATIVIDADE,NEW.DT_ATIVIDADE) - NEW.DT_ATIVIDADE) * 1440;
	if (NEW.DT_ATIVIDADE > coalesce(NEW.DT_FIM_ATIVIDADE,NEW.DT_ATIVIDADE)) then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(117033);
	end if;
	if (coalesce(NEW.qt_minuto,0) > 600) then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(316289);
	end if;

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_progr_analis_w			
	from	man_ordem_servico
	where	nr_sequencia = NEW.nr_seq_ordem_serv
	and	nr_seq_estagio in (732,731,1191,4);

	if (ie_progr_analis_w = 'S') then

		if (NEW.nr_seq_funcao = 31) then 	/*Análise*/

			select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_em_programacao_w
			from	man_ordem_servico
			where	nr_sequencia = NEW.nr_seq_ordem_serv
			and	nr_seq_estagio = 732;

			if (ie_em_programacao_w = 'N') and (NEW.dt_fim_atividade is null) then
				update	man_ordem_servico
				set	nr_seq_estagio = 731	/*Desenv em análise*/

				where	nr_sequencia = NEW.nr_seq_ordem_serv;
			end if;
		elsif (NEW.nr_seq_funcao in (11,551)) then	/*Programação*/

			if (NEW.dt_fim_atividade is null) then
				update	man_ordem_servico
				set	nr_seq_estagio = 732	/*Desenv em programação*/

				where	nr_sequencia = NEW.nr_seq_ordem_serv; 	
			else
				update	man_ordem_servico
				set	nr_seq_estagio = 1191	/*Desenv aguardando programação*/

				where	nr_sequencia = NEW.nr_seq_ordem_serv; 	
			end if;
		end if;	
	end if;

	if (NEW.nr_seq_proj_cron_etapa is not null) then

		select	max(p.ie_origem),
			max(e.dt_inicio_real)
		into STRICT	ie_origem_w,
			dt_inic_real_etapa_w
		from	proj_projeto p,
			proj_cronograma c,
			proj_cron_etapa e
		where	e.nr_seq_cronograma = c.nr_sequencia
		and	c.nr_seq_proj = p.nr_sequencia
		and	e.nr_sequencia = NEW.nr_seq_proj_cron_etapa;

		if (ie_origem_w = 'D') and (dt_inic_real_etapa_w is null) then

			update	proj_cron_etapa
			set	dt_inicio_real = NEW.dt_atividade,
				nm_usuario = NEW.nm_usuario,
				dt_atualizacao = NEW.dt_atualizacao
			where	nr_sequencia = NEW.nr_seq_proj_cron_etapa;

		end if;
	end if;
end if;

RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_man_ordem_serv_ativ_atual() FROM PUBLIC;

CREATE TRIGGER man_ordem_serv_ativ_atual
	BEFORE INSERT OR UPDATE ON man_ordem_serv_ativ FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_man_ordem_serv_ativ_atual();

