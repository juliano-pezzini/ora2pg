-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS movto_trans_financ_insert ON movto_trans_financ CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_movto_trans_financ_insert() RETURNS trigger AS $BODY$
DECLARE

vl_documento_w			double precision	:= 0;
vl_documento_estrang_w		double precision	:= 0;
nr_seq_trans_banco_w		bigint;
ie_banco_w			varchar(01);
nr_sequencia_w			bigint;
vl_saldo_adiant_w			double precision;
vl_saldo_w			double precision;
VL_TRIBUTOS_w			double precision;
ie_acao_w			integer;
cont_w				integer;
nr_titulo_w			bigint;
ds_lista_titulo_w			varchar(254);
ie_caixa_w			varchar(5);
ie_tipo_w				varchar(10);
nr_seq_conta_banco_w		bigint;
vl_cheque_cp_w			double precision;
vl_imposto_bordero_w		double precision;
dt_deposito_w			timestamp;
dt_venda_terc_w			timestamp;
dt_saque_w			timestamp;
qt_vigente_w			smallint;
dt_devolucao_w			timestamp;
cd_estabelecimento_w		smallint;
cd_estab_tit_w			bigint;
cd_empresa_w			bigint;
vl_especie_deposito_w		double precision;
vl_cheque_deposito_w		double precision;
vl_total_deposito_w			double precision;
vl_total_cheques_w			double precision;
ie_tipo_titulo_cpa_w		varchar(2);
qt_registro_w			bigint;
cd_convenio_w			integer;
cd_tipo_lote_contabil_w		smallint;
ie_baixa_lote_cp_w			varchar(5);
ie_baixa_lote_cr_w			varchar(5);
IE_CONSISTE_NF_w		varchar(5);
nr_lote_w				bigint;
ds_tipo_lote_w			varchar(255);
nr_lote_contab_gerado_w		bigint;
dt_referencia_w			timestamp;
nr_seq_classif_w			bigint;
nr_seq_classif_lote_w		bigint;
nr_interno_conta_tit_w		bigint;
cd_estab_logado_w		bigint;
ie_dia_fechado_w			varchar(1);
ie_conferir_movto_cb_w		varchar(1);
qt_transacao_w			bigint;
ie_movto_lote_contabil_w 		varchar(5);
ds_conta_w			banco_estabelecimento_v.ds_conta%type;
cd_moeda_unica_w		banco_estabelecimento_v.cd_moeda%type;
ds_moeda_w			moeda.ds_moeda%type;
cd_moeda_w			cheque_cr.cd_moeda%type;
ie_bordero_banco_w		bordero_pagamento.ie_bordero_banco%type;

/* Historico */


ds_origem_w			varchar(255);
ds_documento_w			varchar(255);
ds_historico_w			varchar(4000);
nr_seq_banco_escrit_tit_w		bigint;
nr_seq_cobr_escrit_tit_w		bigint;
nr_bordero_tit_w			bigint;
nr_bordero_rec_tit_w		bigint;
nr_seq_baixa_w			bigint;
nr_seq_movto_orig_transf_w	bigint;
ie_estorno_w			varchar(1);
dt_emissao_w			timestamp;

ie_estornar_concil_w		varchar(1);
ie_conciliado_w				movto_trans_financ.ie_conciliacao%type;
nr_seq_concil_w			movto_trans_financ.nr_seq_concil%type;
vl_cotacao_w			titulo_pagar.vl_cotacao%type;
nr_seq_parametro_cont_w		bigint;

c01 CURSOR FOR
SELECT	a.nr_titulo
from	titulo_pagar a,
	bordero_pagamento b
where (a.vl_saldo_titulo + coalesce(a.VL_JUROS_BORDERO,0) +
	coalesce(a.VL_MULTA_BORDERO,0) + coalesce(a.VL_DESCONTO_BORDERO,0) + coalesce(a.VL_OUT_DESP_BORDERO,0)) <
	(coalesce(a.vl_bordero,0) + coalesce(a.VL_JUROS_BORDERO,0) + coalesce(a.VL_MULTA_BORDERO, 0) -
	coalesce(a.vl_desconto_bordero,0) + coalesce(a.vl_out_desp_bordero, 0))
and	a.nr_bordero	= b.nr_bordero
and	b.nr_bordero	= NEW.nr_bordero;

c02 CURSOR FOR
SELECT	distinct b.cd_moeda
from	deposito_cheque a,
	cheque_cr b
where	a.nr_seq_cheque		= b.nr_seq_cheque
and	a.nr_seq_deposito	= NEW.nr_seq_deposito;
BEGIN
  BEGIN

if (coalesce(wheb_usuario_pck.get_ie_executar_trigger,'S')	= 'S')  then

BEGIN

if (coalesce(NEW.cd_conta_contabil,'0') <> '0') then
	select	count(*)
	into STRICT	qt_vigente_w
	from	conta_contabil
	where	cd_conta_contabil = NEW.cd_conta_contabil
	and	substr(obter_se_conta_vigente(NEW.cd_conta_contabil, NEW.dt_transacao),1,1) = 'S';

	if (qt_vigente_w = 0) then
		/*A conta contabil informada esta fora da data de vigencia.*/


		CALL wheb_mensagem_pck.exibir_mensagem_abort(183642);
	end if;
end if;

select	count(*)
into STRICT	qt_transacao_w
from	transacao_financeira a
where	a.nr_sequencia	= NEW.nr_seq_trans_financ;

if (coalesce(qt_transacao_w,0)	= 0) then

	CALL wheb_mensagem_pck.exibir_mensagem_abort(210098, 'NR_SEQ_TRANS_FINANC=' || to_char(NEW.nr_seq_trans_financ));

else

	select	nr_seq_trans_banco,
		ie_banco,
		ie_acao,
		ie_caixa,
		coalesce(ie_conferir_movto_cb,'N')
	into STRICT	nr_seq_trans_banco_w,
		ie_banco_w,
		ie_acao_w,
		ie_caixa_w,
		ie_conferir_movto_cb_w
	from	transacao_financeira
	where	nr_sequencia	= NEW.nr_seq_trans_financ;

end if;

/* Obter estabelecimento */


if (NEW.nr_seq_banco is not null) then
	select	cd_estabelecimento,
			nr_seq_classif
	into STRICT	cd_estabelecimento_w,
			nr_seq_classif_w
	from	banco_estabelecimento
	where	nr_sequencia	= NEW.nr_seq_banco;
elsif (NEW.nr_seq_saldo_banco is not null) then
	select	b.cd_estabelecimento,
			b.nr_seq_classif
	into STRICT	cd_estabelecimento_w,
			nr_seq_classif_w
	from	banco_estabelecimento b,
		banco_saldo a
	where	a.nr_seq_conta	= b.nr_sequencia
	and	a.nr_sequencia	= NEW.nr_seq_saldo_banco;
elsif (NEW.nr_seq_caixa is not null) then
	select	cd_estabelecimento,
		nr_seq_classif
	into STRICT	cd_estabelecimento_w,
		nr_seq_classif_w
	from	caixa
	where	nr_sequencia	= NEW.nr_seq_caixa;
end if;

/* ahoffelder - OS 536794 - 08/01/2013 - alterei para gravar sempre o estabelecimento da conta bancaria porque,
   caso os lancamentos sejam todos feitos atraves de um estabelecimento "matriz", os codigos dos estabelecimentos ficam incorretos
   causando problemas na contabilidade */


BEGIN
	cd_estab_logado_w	:= coalesce(wheb_usuario_pck.get_cd_estabelecimento,null);
exception when others then
	cd_estab_logado_w	:= null;
end;

if (NEW.nr_seq_banco is not null) or (NEW.nr_seq_saldo_banco is not null) then
	NEW.cd_estabelecimento	:= coalesce(cd_estabelecimento_w,cd_estab_logado_w);
elsif (coalesce(cd_estab_logado_w,0) <> 0) then
	NEW.cd_estabelecimento	:= cd_estab_logado_w;
end if;

/*	Consistencias	- Marcus - 06/09/2003  */


if (NEW.nr_seq_banco_escrit is not null) and
	((NEW.nr_seq_banco is null) or (NEW.nr_seq_caixa is not null)) then
	/*lancamento escritural somente pode ser baixado no banco !*/


	CALL wheb_mensagem_pck.exibir_mensagem_abort(183645);
end if;

/*	Consistencias	- Marcus - 06/01/2006  */


if (NEW.cd_centro_custo is not null) then
	select	ie_tipo
	into STRICT	ie_tipo_w
	from	centro_custo
	where	cd_centro_custo	= NEW.cd_centro_custo;
	if (ie_tipo_w = 'T') then
		/*O Centro de custo nao pode ser do tipo totalizador !*/


		CALL wheb_mensagem_pck.exibir_mensagem_abort(183646);
	end if;
end if;

if (NEW.cd_conta_contabil is not null) then
	select	ie_tipo
	into STRICT	ie_tipo_w
	from	conta_contabil
	where	cd_conta_contabil	= NEW.cd_conta_contabil;
	if (ie_tipo_w = 'T') then
		/*A conta contabil nao pode ser do tipo totalizador !*/


		CALL wheb_mensagem_pck.exibir_mensagem_abort(183647);
	end if;
end if;

if (nr_seq_trans_banco_w is not null) then
	if (ie_banco_w <> 'C') and (NEW.nr_seq_caixa is null) then /* Francisco - OS 119268 - Quando for originaria de caixa nao fazer esse tratamento */

		/*O banco base deve ser o de origem do valor(Transferencia Saida)!*/


		CALL wheb_mensagem_pck.exibir_mensagem_abort(183648);
	end if;
	if (NEW.nr_seq_banco is null) and (NEW.nr_seq_caixa is null) then /* Francisco - OS 119268 - Quando for originaria de caixa nao fazer esse tratamento */

		/*O banco de origem nao foi informado!*/


		CALL wheb_mensagem_pck.exibir_mensagem_abort(183649);
	end if;
	if (NEW.nr_seq_banco_od is null) then
		/*O banco de destino nao foi informado!*/


		CALL wheb_mensagem_pck.exibir_mensagem_abort(183650);
	end if;
end if;

if (NEW.ie_origem_lancamento = 'C') and (ie_acao_w = 5) and (NEW.nr_bordero is null) then
	/*Esta transacao nao tem bordero informado!*/


	CALL wheb_mensagem_pck.exibir_mensagem_abort(183651);
end if;

if (NEW.ie_origem_lancamento = 'C') and (ie_acao_w = 3) and (NEW.nr_adiantamento is not null)  and (NEW.vl_transacao < 0) then
	select	coalesce(max(vl_saldo),0)
	into STRICT	vl_saldo_adiant_w
	from	adiantamento
	where	nr_adiantamento	= NEW.nr_adiantamento;

	if	((vl_saldo_adiant_w + NEW.vl_transacao) < 0) then
		/*O saldo do adiantamento nao pode ser menor que zero!*/


		CALL wheb_mensagem_pck.exibir_mensagem_abort(183652);
	end if;
end if;

/* Projeto Davita  - Nao deixa gerar movimento contabil apos fechamento  da data */


CALL philips_contabil_pck.valida_se_dia_fechado(OBTER_EMPRESA_ESTAB(NEW.cd_estabelecimento),NEW.dt_transacao);

				
/* ahoffelder - 09/05/2013 - coloquei a Atualizar_Saldo_Movto_Bco aqui porque abaixo sao feitas consistencia que necessitam do campo nr_seq_saldo_banco */



if (NEW.nr_seq_banco is not null) then
	NEW.nr_seq_saldo_banco := Atualizar_Saldo_Movto_Bco(	NEW.nr_sequencia, NEW.nm_usuario, NEW.vl_transacao, NEW.nr_seq_banco, NEW.dt_transacao, NEW.nr_seq_trans_financ, NEW.nr_seq_saldo_banco, NEW.vl_transacao_estrang, NEW.vl_cotacao);

end if;
/*Retirado daqui pois pode ocorrer Mutante. Sera tratado no delphi, no BeforePost.
Obter_Param_Usuario(814, 100, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario,obter_estabelecimento_ativo, ie_estornar_concil_w);

if ( nvl(ie_estornar_concil_w,'S') = 'N') and (:new.nr_seq_movto_orig is not null) then 


	select	nvl(max(a.ie_conciliacao),'N'),
			max(a.nr_seq_concil)
	into	ie_conciliado_w,
			nr_seq_concil_w
	from	movto_trans_financ a
	where	a.nr_sequencia = :new.nr_seq_movto_orig;
		
	if ( nvl(ie_conciliado_w,'N') = 'S' ) or (nr_seq_concil_w is not null) then

		wheb_mensagem_pck.exibir_mensagem_abort(238696);
	end if;
	
end if;
*/

/*smsouza - 16/01/2014 - OS 680835 - Solicitacao de bloqueio do lancamento de movimentacao em mes ja gerado na Contabilidade */



if (NEW.nr_seq_saldo_banco is not null) and (NEW.nr_seq_titulo_pagar is null) and (NEW.nr_seq_titulo_receber is null) then
	
	select	max(a.ie_movto_lote_contabil)
	into STRICT 	ie_movto_lote_contabil_w
	from 	parametro_controle_banc a
	where 	a.cd_estabelecimento = coalesce(cd_estabelecimento_w,NEW.cd_estabelecimento);

	if (ie_movto_lote_contabil_w = 'M') then
				
		select	count(*),
			max(a.nr_lote_contabil),
			substr(ctb_obter_desc_tipo_lote(max(a.cd_tipo_lote_contabil)),1,255)
		into STRICT	qt_registro_w,
			nr_lote_w,
			ds_tipo_lote_w
		from 	lote_contabil a
		where	a.cd_estabelecimento		= coalesce(cd_estabelecimento_w,NEW.cd_estabelecimento)
		and	trunc(a.dt_referencia,'month')	= trunc(NEW.dt_transacao,'month')
		and	a.dt_geracao_lote is not null
		and	a.cd_tipo_lote_contabil		= 18
		and	exists (
				SELECT	1
				from	movimento_contabil z
				where	z.nr_lote_contabil   = a.nr_lote_contabil
				);
					
		if (qt_registro_w > 0) then

			select	coalesce(max(vl_parametro),0)
			into STRICT	nr_seq_classif_lote_w
			from	lote_contabil_parametro
			where	nr_lote_contabil	= nr_lote_w
			and	nr_seq_parametro	= 2; /* Fixo dois pois esse e a sequencia para Classificacao da conta bancaria nos Eventos Contabeis*/


			
			if (coalesce(nr_seq_classif_lote_w,0) = 0) then
			
				select 	coalesce(max(a.nr_documento),0)
				into STRICT	nr_seq_classif_lote_w
				from	lote_contabil_param_item a
				where	nr_lote_contabil	= nr_lote_w
				and		nr_seq_parametro	= 2; /* Fixo dois pois esse e a sequencia para Classificacao da conta bancaria nos Eventos Contabeis*/


			
			end if;

			if (nr_seq_classif_lote_w = 0) or (nr_seq_classif_lote_w = nr_seq_classif_w) then
				/*Ja foi gerado lote contabil para esta data de baixa.*/


				CALL wheb_mensagem_pck.exibir_mensagem_abort(280653);
			end if;
		end if;
	elsif (ie_movto_lote_contabil_w = 'D') then
		select	count(*),
			max(a.nr_lote_contabil),
			substr(ctb_obter_desc_tipo_lote(max(a.cd_tipo_lote_contabil)),1,255)
		into STRICT	qt_registro_w,
			nr_lote_w,
			ds_tipo_lote_w
		from 	lote_contabil a
		where	a.cd_estabelecimento		= coalesce(cd_estabelecimento_w,NEW.cd_estabelecimento)
		and	trunc(a.dt_referencia,'dd')	= trunc(NEW.dt_transacao,'dd')
		and	a.dt_geracao_lote is not null
		and	a.cd_tipo_lote_contabil		= 18
		and	exists (
				SELECT	1
				from	movimento_contabil z
				where	z.nr_lote_contabil   = a.nr_lote_contabil
				);
					
		if (qt_registro_w > 0) then

			select	coalesce(max(vl_parametro),0)
			into STRICT	nr_seq_classif_lote_w
			from	lote_contabil_parametro
			where	nr_lote_contabil	= nr_lote_w
			and	nr_seq_parametro	= 2; /* Fixo dois pois esse e a sequencia para Classificacao da conta bancaria nos Eventos Contabeis*/


			
			if (coalesce(nr_seq_classif_lote_w,0) = 0) then
			
				select 	coalesce(max(a.nr_documento),0)
				into STRICT	nr_seq_classif_lote_w
				from	lote_contabil_param_item a
				where	nr_lote_contabil	= nr_lote_w
				and		nr_seq_parametro	= 2; /* Fixo dois pois esse e a sequencia para Classificacao da conta bancaria nos Eventos Contabeis*/


			
			end if;

			if (nr_seq_classif_lote_w = 0) or (nr_seq_classif_lote_w = nr_seq_classif_w) then
				/*Ja foi gerado lote contabil para esta data de baixa.*/


				CALL wheb_mensagem_pck.exibir_mensagem_abort(280653);
			end if;
		end if;
	
	end if;	
	
end if;


if (NEW.nr_bordero is not null) and (ie_acao_w = 5) then
	BEGIN

	select max(ie_bordero_banco)
	into STRICT ie_bordero_banco_w
	from bordero_pagamento
	where nr_bordero = NEW.nr_bordero;
	
	if (ie_bordero_banco_w is null or ie_bordero_banco_w  = 'P') then
		select	max(ie_bordero_banco)
		into STRICT	ie_bordero_banco_w
		from	parametros_contas_pagar
		where	cd_estabelecimento	= cd_estabelecimento_w;
	end if;
	
	if (ie_bordero_banco_w <> 'F') then
		select	sum(a.vl_saldo_titulo_cotacao) +
			sum(a.VL_JUROS_BORDERO) +
			sum(a.VL_MULTA_BORDERO) - sum(a.VL_DESCONTO_BORDERO) + sum(a.VL_OUT_DESP_BORDERO),
			sum(a.vl_bordero) + sum(a.VL_JUROS_BORDERO) +
			sum(a.VL_MULTA_BORDERO) - sum(a.VL_DESCONTO_BORDERO) + sum(a.VL_OUT_DESP_BORDERO),
			coalesce(sum(a.VL_TRIBUTOS),0)
		into STRICT	vl_saldo_w,
			vl_documento_w,
			VL_TRIBUTOS_w
		from	titulo_pagar_bordero_v a,
			bordero_pagamento b
		where	b.nr_bordero	= a.nr_bordero
		and	b.nr_bordero	= NEW.nr_bordero
		and	a.dt_liquidacao is null;
		-- Edgar 12/02/2008, OS 80633, calcular tributos que serao gerados na baixa do titulo

		select	coalesce(sum(vl_imposto),0)
		into STRICT	vl_imposto_bordero_w
		from	w_titulo_pagar_imposto
		where	nr_bordero	= NEW.NR_BORDERO;
		
		if (vl_imposto_bordero_w = 0) and (vl_documento_w > 0) and (VL_TRIBUTOS_w = 0) then
			
			select	sum(a.vl_saldo_titulo_cotacao) +
				sum(a.VL_JUROS_BORDERO) +
				sum(a.VL_MULTA_BORDERO) - sum(a.VL_DESCONTO_BORDERO) + sum(a.VL_OUT_DESP_BORDERO),
				sum(a.vl_bordero) + sum(a.VL_JUROS_BORDERO) +
				sum(a.VL_MULTA_BORDERO) - sum(a.VL_DESCONTO_BORDERO) + sum(a.VL_OUT_DESP_BORDERO),
				coalesce(sum(a.VL_TRIBUTOS),0)
			into STRICT	vl_saldo_w,
				vl_documento_w,
				VL_TRIBUTOS_w
			from	titulo_pagar_bordero_v a,
				bordero_pagamento b
			where	b.nr_bordero	= a.nr_bordero
			and	b.nr_bordero	= NEW.nr_bordero
			and	a.dt_liquidacao is not null;
			
			vl_imposto_bordero_w	:= (VL_TRIBUTOS_w) * -1;
		end if;
	else
		select	sum(a.vl_saldo_titulo_cotacao) +
			sum(a.VL_JUROS_BORDERO) +
			sum(a.VL_MULTA_BORDERO) - sum(a.VL_DESCONTO_BORDERO) + sum(a.VL_OUT_DESP_BORDERO),
			sum(a.vl_bordero) + sum(a.VL_JUROS_BORDERO) +
			sum(a.VL_MULTA_BORDERO) - sum(a.VL_DESCONTO_BORDERO) + sum(a.VL_OUT_DESP_BORDERO),
			coalesce(sum(a.VL_TRIBUTOS),0)
		into STRICT	vl_saldo_w,
			vl_documento_w,
			vl_tributos_w
		from	titulo_pagar_bordero_v a,
			bordero_pagamento b
		where	b.nr_bordero	= a.nr_bordero
		and	b.nr_bordero	= NEW.nr_bordero
		and	a.dt_liquidacao is null
		and (a.cd_pessoa_fisica = NEW.cd_pessoa_fisica or a.cd_cgc = NEW.cd_cgc);
		-- Edgar 12/02/2008, OS 80633, calcular tributos que serao gerados na baixa do titulo

		select	coalesce(sum(vl_imposto),0)
		into STRICT	vl_imposto_bordero_w
		from	w_titulo_pagar_imposto
		where	nr_bordero	= NEW.NR_BORDERO;
		
		if (vl_imposto_bordero_w = 0) and (vl_documento_w > 0) and (VL_TRIBUTOS_w = 0) then
			
			select	sum(a.vl_saldo_titulo_cotacao) +
				sum(a.VL_JUROS_BORDERO) +
				sum(a.VL_MULTA_BORDERO) - sum(a.VL_DESCONTO_BORDERO) + sum(a.VL_OUT_DESP_BORDERO),
				sum(a.vl_bordero) + sum(a.VL_JUROS_BORDERO) +
				sum(a.VL_MULTA_BORDERO) - sum(a.VL_DESCONTO_BORDERO) + sum(a.VL_OUT_DESP_BORDERO),
				coalesce(sum(a.VL_TRIBUTOS),0)
			into STRICT	vl_saldo_w,
				vl_documento_w,
				vl_tributos_w
			from	titulo_pagar_bordero_v a,
				bordero_pagamento b
			where	b.nr_bordero	= a.nr_bordero
			and	b.nr_bordero	= NEW.nr_bordero
			and	a.dt_liquidacao is not null
			and (a.cd_pessoa_fisica = NEW.cd_pessoa_fisica or a.cd_cgc = NEW.cd_cgc);
				
			vl_imposto_bordero_w	:= (VL_TRIBUTOS_w) * -1;
			
		end if;
	end if;
	
	vl_documento_w		:= vl_documento_w - vl_imposto_bordero_w;
	
	if (NEW.vl_transacao >= 0) then
		if (vl_documento_w <> NEW.vl_transacao) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(183653,'VL_DOCUMENTO_P='||vl_documento_w||';VL_TRANSACAO_P='||NEW.vl_transacao);
		end if;
		if (vl_saldo_w < NEW.vl_transacao) then

			ds_lista_titulo_w	:= '';
			open c01;
			loop
			fetch c01 into
				nr_titulo_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
				if (ds_lista_titulo_w is null) then
					ds_lista_titulo_w	:= substr(wheb_mensagem_pck.get_texto(304552),1,254) || nr_titulo_w;
				else
					ds_lista_titulo_w	:= ds_lista_titulo_w || ', ' || nr_titulo_w;
				end if;
			end loop;
			close c01;

			CALL wheb_mensagem_pck.exibir_mensagem_abort(183658,'VL_SALDO_P= '|| vl_saldo_w ||
			';VL_TRANSACAO_P='||NEW.vl_transacao|| 
			';DS_LISTA_TITULO_P='||ds_lista_titulo_w);

		end if;
	elsif	((NEW.vl_transacao * -1) <> vl_documento_w) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(183661,'VL_DOCUMENTO_P='||vl_documento_w ||
							';VL_TRANSACAO_P='||NEW.vl_transacao);

	end if;
	end;
elsif (NEW.nr_seq_titulo_pagar is not null) then
	BEGIN
	select	max(vl_saldo_titulo),
		max(vl_cotacao),
		max(ie_tipo_titulo),
		max(cd_estabelecimento)
	into STRICT	vl_documento_w,
		vl_cotacao_w,
		ie_tipo_titulo_cpa_w,
		cd_estab_tit_w
	from	titulo_pagar
	where	nr_titulo	= NEW.nr_seq_titulo_pagar;

	if (coalesce(NEW.ie_origem_lancamento,'O') = 'C') then /*Francisco - OS 34129 - Tratar somente no Controle Bancario */

		
		if (coalesce(NEW.vl_cotacao,0) = 0 and vl_documento_w < coalesce(NEW.vl_transacao,0)) then
			/*O valor da transacao e maior que o valor do saldo do titulo !*/


			CALL wheb_mensagem_pck.exibir_mensagem_abort(183662);
		end if;

		vl_documento_estrang_w := trunc(coalesce(vl_cotacao_w,0) * coalesce(NEW.vl_transacao_estrang,0), 2);
		if	(coalesce(NEW.vl_cotacao,0) <> 0 and (vl_documento_estrang_w - (vl_documento_estrang_w - vl_documento_w)) > vl_documento_w) then
			/*O valor da transacao e maior que o valor do saldo do titulo !*/


			CALL wheb_mensagem_pck.exibir_mensagem_abort(183662);
		end if;
		
	end if;

	/* Francisco - 02/09/2009 - OS 163867 */


	/* Acao baixa de titulo a pagar */



	if (ie_acao_w = 2) then
		
		if (coalesce(fin_obter_se_mes_aberto(cd_estabelecimento_w,NEW.dt_transacao,'CP',ie_tipo_titulo_cpa_w,null,null,null),'S') = 'N') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(183663);
		end if;
		
		select	dt_emissao
		into STRICT	dt_emissao_w
		from	titulo_pagar
		where	nr_titulo = NEW.nr_seq_titulo_pagar;									
			
		if (trunc(NEW.dt_transacao,'dd') < trunc(dt_emissao_w,'dd')) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(471997);
		end if;			

		if (cd_estab_tit_w is not null) then
			
			select	max(cd_empresa)
			into STRICT	cd_empresa_w
			from	estabelecimento
			where	cd_estabelecimento	= cd_estab_tit_w;

			if (cd_empresa_w is not null) then
				
				if (NEW.nr_seq_saldo_banco	is not null) then

					select	max(a.ie_baixa_lote_cp)
					into STRICT	ie_baixa_lote_cp_w
					from	parametro_controle_banc a
					where	a.cd_estabelecimento	= cd_estab_tit_w;

					cd_tipo_lote_contabil_w	:= 18;
					nr_seq_parametro_cont_w := 2;

				elsif (NEW.nr_seq_saldo_caixa	is not null) then

					select	max(a.ie_baixa_lote_cp)
					into STRICT	ie_baixa_lote_cp_w
					from	parametro_tesouraria a
					where	a.cd_estabelecimento	= cd_estab_tit_w;

					cd_tipo_lote_contabil_w	:= 10;
					nr_seq_parametro_cont_w := 1;

				else

					select	max(ie_baixa_lote_contab)
					into STRICT	ie_baixa_lote_cp_w
					from	parametros_contas_pagar
					where 	cd_estabelecimento	= cd_estab_tit_w;

					cd_tipo_lote_contabil_w	:= 7;

					nr_seq_parametro_cont_w := 2;
				end if;

				if (ie_baixa_lote_cp_w = 'N') then
					select	count(*)
					into STRICT	qt_registro_w
					from 	ctb_mes_ref
					where	cd_empresa							= cd_empresa_w
		       	        		and	substr(ctb_obter_se_mes_fechado(nr_sequencia,cd_estabelecimento_w),1,1)	= 'F'
		       		        	and	trunc(dt_referencia,'month')						= trunc(NEW.dt_transacao,'month');

					if (qt_registro_w > 0) then
						CALL wheb_mensagem_pck.exibir_mensagem_abort(183664,'DT_TRANSACAO_P='||NEW.dt_transacao);
					end if;
				
				elsif (ie_baixa_lote_cp_w = 'L') then
					
					select	count(*),
						max(a.nr_lote_contabil),
						substr(ctb_obter_desc_tipo_lote(max(a.cd_tipo_lote_contabil)),1,255)
					into STRICT	qt_registro_w,
						nr_lote_w,
						ds_tipo_lote_w
					from 	lote_contabil a
					where	a.cd_estabelecimento		= cd_estab_tit_w
					and	trunc(a.dt_referencia,'dd')	= trunc(NEW.dt_transacao,'dd')
					and	a.dt_geracao_lote	is not null
					and	a.cd_tipo_lote_contabil			= cd_tipo_lote_contabil_w
					and	exists (
							SELECT	1
							from	movimento_contabil z
							where	z.nr_lote_contabil	= a.nr_lote_contabil
							);
					
					if (qt_registro_w > 0) then

						select	coalesce(max(vl_parametro),0)
						into STRICT	nr_seq_classif_lote_w
						from	lote_contabil_parametro
						where	nr_lote_contabil	= nr_lote_w
						and	nr_seq_parametro	= nr_seq_parametro_cont_w;
						
						if (coalesce(nr_seq_classif_lote_w,0) = 0) then
			
							select 	coalesce(max(a.nr_documento),0)
							into STRICT	nr_seq_classif_lote_w
							from	lote_contabil_param_item a
							where	nr_lote_contabil	= nr_lote_w
							and		nr_seq_parametro	= nr_seq_parametro_cont_w;
						
						end if;

						if (nr_seq_classif_lote_w = 0) or (nr_seq_classif_lote_w = nr_seq_classif_w) then
							/*Ja foi gerado lote contabil para esta data de baixa.*/


							CALL wheb_mensagem_pck.exibir_mensagem_abort(183670,'NR_LOTE_P='||nr_lote_w||';DS_TIPO_LOTE_P='||ds_tipo_lote_w);
						end if;
					end if;
					
				elsif (ie_baixa_lote_cp_w = 'M') then
				
					select	count(*),
						max(a.nr_lote_contabil),
						substr(ctb_obter_desc_tipo_lote(max(a.cd_tipo_lote_contabil)),1,255)
					into STRICT	qt_registro_w,
						nr_lote_w,
						ds_tipo_lote_w
					from 	lote_contabil a
					where	a.cd_estabelecimento		= cd_estab_tit_w
					and	trunc(a.dt_referencia,'dd')	>= trunc(NEW.dt_transacao,'dd')
					and	trunc(a.dt_referencia,'month')	= trunc(NEW.dt_transacao,'month')
					and	a.dt_geracao_lote	is not null
					and	a.cd_tipo_lote_contabil			= cd_tipo_lote_contabil_w
					and	exists (
							SELECT	1
							from	movimento_contabil z
							where	z.nr_lote_contabil	= a.nr_lote_contabil
							);
					
					if (qt_registro_w > 0) then

						select	coalesce(max(vl_parametro),0)
						into STRICT	nr_seq_classif_lote_w
						from	lote_contabil_parametro
						where	nr_lote_contabil	= nr_lote_w
						and	nr_seq_parametro	= nr_seq_parametro_cont_w;
						
						if (coalesce(nr_seq_classif_lote_w,0) = 0) then
			
							select 	coalesce(max(a.nr_documento),0)
							into STRICT	nr_seq_classif_lote_w
							from	lote_contabil_param_item a
							where	nr_lote_contabil	= nr_lote_w
							and		nr_seq_parametro	= nr_seq_parametro_cont_w;
						
						end if;

						if (nr_seq_classif_lote_w = 0) or (nr_seq_classif_lote_w = nr_seq_classif_w) then
							/*Ja foi gerado lote contabil para esta data de baixa.*/


							CALL wheb_mensagem_pck.exibir_mensagem_abort(183670,'NR_LOTE_P='||nr_lote_w||';DS_TIPO_LOTE_P='||ds_tipo_lote_w);
						end if;
					end if;

				elsif (ie_baixa_lote_cp_w = 'F') then

					select	count(*)
					into STRICT	qt_registro_w
					from 	ctb_mes_ref
					where	cd_empresa		= cd_empresa_w
	                			and	trunc(dt_referencia,'month')	= trunc(NEW.dt_transacao,'month');

					if (qt_registro_w > 0) then
						CALL wheb_mensagem_pck.exibir_mensagem_abort(183674,'DT_TRANSACAO_P='||NEW.dt_transacao);
					end if;

				end if;
			end if;
		end if;
	end if;

	end;
elsif (NEW.nr_seq_titulo_receber is not null) then
	BEGIN
	select	max(vl_saldo_titulo),
		obter_convenio_tit_rec(max(nr_titulo)),
		max(cd_estabelecimento),
		max(nr_interno_conta)
	into STRICT	vl_documento_w,
		cd_convenio_w,
		cd_estab_tit_w,
		nr_interno_conta_tit_w
	from	titulo_receber
	where	nr_titulo	= NEW.nr_seq_titulo_receber;

	if (vl_documento_w < NEW.vl_transacao) and (coalesce(NEW.ie_origem_lancamento,'O') = 'C') then /*Francisco - OS 34129 - Tratar somente no Controle Bancario */

		/*O valor da transacao e maior que o valor do saldo do titulo !*/


		CALL wheb_mensagem_pck.exibir_mensagem_abort(183675);
	end if;

	if (coalesce(nr_interno_conta_tit_w,0) > 0) and (coalesce(NEW.nr_interno_conta,0) > 0) and (coalesce(nr_interno_conta_tit_w,0) <> coalesce(NEW.nr_interno_conta,0)) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(193631);
	end if;
	
	/* Francisco - 02/09/2009 - OS 163867 */


	/* Acao baixa de titulo a receber */


	if (ie_acao_w = 1) then

		if (coalesce(fin_obter_se_mes_aberto(cd_estabelecimento_w,NEW.dt_transacao,'CR',null,cd_convenio_w,null,null),'S') = 'N') then
			/*Nao e possivel baixar o titulo com esta data pois este mes/dia de referencia financeiro ja esta fechado!*/


			CALL wheb_mensagem_pck.exibir_mensagem_abort(183676);
		end if;

		if (cd_estab_tit_w is not null) then

			select	max(cd_empresa)
			into STRICT	cd_empresa_w
			from	estabelecimento
			where	cd_estabelecimento	= cd_estab_tit_w;

			if (cd_empresa_w is not null) then

				if (NEW.nr_seq_saldo_banco	is not null) then

					select	max(a.ie_baixa_lote_cr)
					into STRICT	ie_baixa_lote_cr_w
					from	parametro_controle_banc a
					where	a.cd_estabelecimento	= cd_estab_tit_w;

					cd_tipo_lote_contabil_w	:= 18;
					nr_seq_parametro_cont_w	:= 2;

				elsif (NEW.nr_seq_saldo_caixa	is not null) then

					select	max(a.ie_baixa_lote_cr)
					into STRICT	ie_baixa_lote_cr_w
					from	parametro_tesouraria a
					where	a.cd_estabelecimento	= cd_estab_tit_w;

					cd_tipo_lote_contabil_w	:= 10;
					nr_seq_parametro_cont_w := 1;

				else

					select	max(ie_baixa_lote_contab)
					into STRICT	ie_baixa_lote_cr_w
					from	parametro_contas_receber
					where 	cd_estabelecimento	= cd_estab_tit_w;

					cd_tipo_lote_contabil_w	:= 5;
					nr_seq_parametro_cont_w := 2;

				end if;
				
				if (ie_baixa_lote_cr_w = 'N') then
					select	count(*)
					into STRICT	qt_registro_w
					from 	ctb_mes_ref
					where	cd_empresa							= cd_empresa_w
		       	        		and	substr(ctb_obter_se_mes_fechado(nr_sequencia,cd_estabelecimento_w),1,1)	= 'F'
		       		        	and	trunc(dt_referencia,'month')						= trunc(NEW.dt_transacao,'month');

					if (qt_registro_w > 0) then
						CALL wheb_mensagem_pck.exibir_mensagem_abort(183677,'DT_TRANSACAO_P='||NEW.dt_transacao);
					end if;
				
				elsif (ie_baixa_lote_cr_w = 'L') then

					select	count(*),
						max(a.nr_lote_contabil),
						substr(ctb_obter_desc_tipo_lote(max(a.cd_tipo_lote_contabil)),1,255),
						max(a.dt_referencia)
					into STRICT	qt_registro_w,
						nr_lote_contab_gerado_w,
						ds_tipo_lote_w,
						dt_referencia_w
					from 	lote_contabil a
					where	a.cd_estabelecimento	= cd_estab_tit_w
					and	trunc(a.dt_referencia,'dd')		= trunc(NEW.dt_transacao,'dd')
					and	a.dt_geracao_lote	is not null
					and	a.cd_tipo_lote_contabil			= cd_tipo_lote_contabil_w
					and	exists (
							SELECT	1
							from	movimento_contabil z
							where	z.nr_lote_contabil	= a.nr_lote_contabil
							);

					if (qt_registro_w > 0) then

						select	coalesce(max(vl_parametro),0)
						into STRICT	nr_seq_classif_lote_w
						from	lote_contabil_parametro
						where	nr_lote_contabil	= nr_lote_contab_gerado_w
						and	nr_seq_parametro	= nr_seq_parametro_cont_w;
						
						if (coalesce(nr_seq_classif_lote_w,0) = 0) then
			
							select 	coalesce(max(a.nr_documento),0)
							into STRICT	nr_seq_classif_lote_w
							from	lote_contabil_param_item a
							where	nr_lote_contabil	= nr_lote_contab_gerado_w
							and		nr_seq_parametro	= nr_seq_parametro_cont_w;
						
						end if;


						if (nr_seq_classif_lote_w = 0) or (nr_seq_classif_lote_w = nr_seq_classif_w) then
							/*Ja foi gerado lote contabil para esta data de baixa.*/


							CALL wheb_mensagem_pck.exibir_mensagem_abort(183678,'NR_LOTE_P='||nr_lote_contab_gerado_w||';ds_tipo_p='||

ds_tipo_lote_w||';dt_referencia_p='||dt_referencia_w);
						end if;
					end if;
					
				elsif (ie_baixa_lote_cr_w = 'M') then
				
					select	count(*),
						max(a.nr_lote_contabil),
						substr(ctb_obter_desc_tipo_lote(max(a.cd_tipo_lote_contabil)),1,255),
						max(a.dt_referencia)
					into STRICT	qt_registro_w,
						nr_lote_contab_gerado_w,
						ds_tipo_lote_w,
						dt_referencia_w
					from 	lote_contabil a
					where	a.cd_estabelecimento	= cd_estab_tit_w
					and	trunc(a.dt_referencia,'dd')		>= trunc(NEW.dt_transacao,'dd')
					and	trunc(a.dt_referencia,'month')		= trunc(NEW.dt_transacao,'month')
					and	a.dt_geracao_lote	is not null
					and	a.cd_tipo_lote_contabil			= cd_tipo_lote_contabil_w
					and	exists (
							SELECT	1
							from	movimento_contabil z
							where	z.nr_lote_contabil	= a.nr_lote_contabil
							);

					if (qt_registro_w > 0) then

						select	coalesce(max(vl_parametro),0)
						into STRICT	nr_seq_classif_lote_w
						from	lote_contabil_parametro
						where	nr_lote_contabil	= nr_lote_contab_gerado_w
						and	nr_seq_parametro	= nr_seq_parametro_cont_w;
						
						if (coalesce(nr_seq_classif_lote_w,0) = 0) then
			
							select 	coalesce(max(a.nr_documento),0)
							into STRICT	nr_seq_classif_lote_w
							from	lote_contabil_param_item a
							where	nr_lote_contabil	= nr_lote_contab_gerado_w
							and		nr_seq_parametro	= nr_seq_parametro_cont_w;
						
						end if;



						if (nr_seq_classif_lote_w = 0) or (nr_seq_classif_lote_w = nr_seq_classif_w) then
							/*Ja foi gerado lote contabil para esta data de baixa.*/


							CALL wheb_mensagem_pck.exibir_mensagem_abort(183678,'NR_LOTE_P='||nr_lote_contab_gerado_w||';ds_tipo_p='||

ds_tipo_lote_w||';dt_referencia_p='||dt_referencia_w);
						end if;
					end if;

				elsif (ie_baixa_lote_cr_w = 'F') then

					select	count(*)
					into STRICT	qt_registro_w
					from 	ctb_mes_ref
					where	cd_empresa		= cd_empresa_w
	                			and	trunc(dt_referencia,'month')	= trunc(NEW.dt_transacao,'month');

					if (qt_registro_w > 0) then
						CALL wheb_mensagem_pck.exibir_mensagem_abort(183679,'DT_TRANSACAO_P=' || NEW.dt_transacao);
					end if;

				end if;
			end if;
		end if;
	end if;
	end;
elsif (NEW.nr_adiantamento is not null) then
	BEGIN
	select	vl_saldo
	into STRICT	vl_documento_w
	from	adiantamento
	where	nr_adiantamento		= NEW.nr_adiantamento;

	if (vl_documento_w < NEW.vl_transacao) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(183680);
	end if;
	end;
elsif (NEW.nr_seq_nota_fiscal is not null) then
	BEGIN
	if (NEW.NR_SEQ_BANCO is not null) then
		select	vl_total_nota,
			cd_estabelecimento
		into STRICT	vl_documento_w,
			cd_estabelecimento_w
		from	nota_fiscal
		where	nr_sequencia		= NEW.nr_seq_nota_fiscal;

		select	coalesce(max(a.IE_CONSISTE_NF), 'S')
		into STRICT	IE_CONSISTE_NF_w
		from	parametro_controle_banc a
		where	a.cd_estabelecimento	= cd_estabelecimento_w;

		if (IE_CONSISTE_NF_w = 'S') and (abs(vl_documento_w) <> abs(NEW.vl_transacao)) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(183682);
		end if;
	end if;
	end;
end if;

if (ie_acao_w = 16 and NEW.nr_seq_cheque_cp is null) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(183683);
end if;
if (ie_acao_w = 16 and NEW.nr_seq_cheque_cp is not null) then
	select	vl_cheque,
		nr_seq_conta_banco
	into STRICT	vl_cheque_cp_w,
		nr_seq_conta_banco_w
	from	cheque
	where	nr_sequencia = NEW.nr_seq_cheque_cp;

	if (abs(vl_cheque_cp_w) <> abs(NEW.vl_transacao)) then	/* Desfazer compensacao de cheque. (abs) */

		/*O valor da transacao nao bate com o valor do cheque!*/


		CALL wheb_mensagem_pck.exibir_mensagem_abort(183685);
	end if;
	if (nr_seq_conta_banco_w <> NEW.nr_seq_banco) then
		/*O banco do cheque nao e o mesmo da transacao!*/


		CALL wheb_mensagem_pck.exibir_mensagem_abort(183686);
	end if;
end if;

/* Francisco - OS 178135 - 13/11/2009 */


if (ie_acao_w = 6) and (NEW.nr_seq_deposito is not null) and (coalesce(NEW.ie_origem_lancamento,'O') = 'C') then

	if (NEW.vl_transacao >= 0) then
		select	vl_especie,
			vl_cheque,
			(vl_especie + vl_cheque),
			dt_deposito
		into STRICT	vl_especie_deposito_w,
			vl_cheque_deposito_w,
			vl_total_deposito_w,
			dt_deposito_w
		from	deposito
		where	nr_sequencia		= NEW.nr_seq_deposito;

		if (dt_deposito_w is not null) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(183687,'NR_SEQ_DEPOSITO_P=' || NEW.nr_seq_deposito);
		end if;

		select	sum(b.vl_cheque)
		into STRICT	vl_total_cheques_w
		from	deposito_cheque a,
			cheque_cr b
		where	a.nr_seq_cheque		= b.nr_seq_cheque
		and	a.nr_seq_deposito	= NEW.nr_seq_deposito;

		if (NEW.vl_transacao <> vl_total_deposito_w) then
			/*O valor da transacao nao bate com o valor total do deposito !*/


			CALL wheb_mensagem_pck.exibir_mensagem_abort(183690);
		end if;

		if (vl_total_cheques_w <> vl_cheque_deposito_w) then
			/*O valor dos cheques vinculados nao bate com o valor do deposito !*/


			CALL wheb_mensagem_pck.exibir_mensagem_abort(183691);
		end if;
	else
		select	vl_especie,
			vl_cheque,
			(vl_especie + vl_cheque),
			dt_deposito
		into STRICT	vl_especie_deposito_w,
			vl_cheque_deposito_w,
			vl_total_deposito_w,
			dt_deposito_w
		from	deposito
		where	nr_sequencia		= NEW.nr_seq_deposito;

		if (dt_deposito_w is null) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(183692,'NR_SEQ_DEPOSITO_P=' || NEW.nr_seq_deposito);
		end if;

		select	sum(b.vl_cheque)
		into STRICT	vl_total_cheques_w
		from	deposito_cheque a,
			cheque_cr b
		where	a.nr_seq_cheque		= b.nr_seq_cheque
		and	a.nr_seq_deposito	= NEW.nr_seq_deposito;

		if (NEW.vl_transacao <> vl_total_deposito_w * -1) then
			/*O valor da transacao nao bate com o valor total do deposito !*/


			CALL wheb_mensagem_pck.exibir_mensagem_abort(183693);
		end if;

		if (vl_total_cheques_w <> vl_cheque_deposito_w) then
			/*O valor dos cheques vinculados nao bate com o valor do deposito !*/


			CALL wheb_mensagem_pck.exibir_mensagem_abort(183691);
		end if;
	end if;
end if;

if (NEW.nr_seq_cheque is not null) and (NEW.nr_seq_banco is not null) and (coalesce(NEW.ie_estorno,'X') <> 'E') then

	if (NEW.ie_origem_lancamento = 'C') /* Francisco - 21/10/2009 - OS 171325 - Consistir somente se for pelo CB */
 then
		if (ie_acao_w = 7) then

			select	dt_devolucao
			into STRICT	dt_devolucao_w
			from	cheque_cr
			where	nr_seq_cheque = NEW.nr_seq_cheque;

			if (dt_devolucao_w is not null) then
				/*O cheque nao pode ser devolvido pois ja foi devolvido ao paciente!*/


				CALL wheb_mensagem_pck.exibir_mensagem_abort(183694);
			end if;

			if (obter_status_cheque(NEW.nr_seq_cheque) not in (2, 4, 9)) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(183695,'NR_SEQ_CHEQUE_P='||NEW.nr_seq_cheque);
			end if;
		end if;
	end if;

	select	max(a.cd_moeda)
	into STRICT	cd_moeda_w
	from	cheque_cr a
	where	a.nr_seq_cheque		= NEW.nr_seq_cheque;

	select	max(a.cd_moeda),
		max(a.ds_conta)
	into STRICT	cd_moeda_unica_w,
		ds_conta_w
	from	banco_estabelecimento_v a
	where	a.nr_sequencia		= NEW.nr_seq_banco;

	if (cd_moeda_unica_w is not null) and (cd_moeda_w <> cd_moeda_unica_w) then

		select	max(a.ds_moeda)
		into STRICT	ds_moeda_w
		from	moeda a
		where	a.cd_moeda	= cd_moeda_unica_w;
		
		/* A conta bancaria cd_conta_w permite apenas movimentacoes em ds_moeda_w!*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(301078,'CD_CONTA_W='||ds_conta_w||';DS_MOEDA_W='||ds_moeda_w);
	end if;	
	
end if;

if (NEW.nr_seq_deposito is not null) and (NEW.nr_seq_banco is not null) and (coalesce(NEW.ie_estorno,'X') <> 'E') then
	
	open c02;
	loop
	fetch c02 into
		cd_moeda_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
			
		select	max(a.cd_moeda),
			max(a.ds_conta)
		into STRICT	cd_moeda_unica_w,
			ds_conta_w
		from	banco_estabelecimento_v a
		where	a.nr_sequencia		= NEW.nr_seq_banco;

		if (cd_moeda_unica_w is not null) and (cd_moeda_w <> cd_moeda_unica_w) then

			select	max(a.ds_moeda)
			into STRICT	ds_moeda_w
			from	moeda a
			where	a.cd_moeda	= cd_moeda_unica_w;
			
			/* A conta bancaria cd_conta_w permite apenas movimentacoes em ds_moeda_w!*/

			CALL wheb_mensagem_pck.exibir_mensagem_abort(301078,'CD_CONTA_W='||ds_conta_w||';DS_MOEDA_W='||ds_moeda_w);
		end if;
	end loop;
	close c02;

end if;

if (NEW.nr_seq_banco is not null) then
	BEGIN

	select	substr(obter_se_banco_fechado(NEW.nr_seq_banco,NEW.dt_transacao),1,1)
	into STRICT	ie_dia_fechado_w
	;

	if (coalesce(ie_dia_fechado_w,'N')	= 'S') then
		/* O dia dt_transacao ja foi fechado no banco!
		Consulte o fechamento na pasta Fechamento banco do Controle Bancario.
		Parametro [72] */

		CALL wheb_mensagem_pck.exibir_mensagem_abort(231442,'DT_TRANSACAO='||NEW.dt_transacao);
	end if;

	if (ie_acao_w = 10) then
		select	count(*)
		into STRICT	cont_w
		from	convenio
		where	cd_cgc 		= NEW.cd_cgc;
	

	if (NEW.cd_convenio is not null) then 
		cont_w := 1;
	end if;
		
		
		if (cont_w = 0) then
			/*'CNPJ do convenio incorreto!'*/


			CALL wheb_mensagem_pck.exibir_mensagem_abort(183696);
		end if;
	end if;

	/* e necessario verificar o campo nr_seq_movto_transf_bco para nao entrar em loop */


	if (nr_seq_trans_banco_w		is not null) and (ie_banco_w			= 'C') and (NEW.nr_seq_movto_transf_bco	is null) then
		
		if (NEW.nr_seq_movto_orig 	is not null) then
		
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_movto_orig_transf_w
			from	movto_trans_financ a
			where	a.nr_seq_movto_transf_bco	= NEW.nr_seq_movto_orig;
			
			ie_estorno_w	:= 'E';
		
		end if;

		select	nextval('movto_trans_financ_seq')
		into STRICT	nr_sequencia_w
		;

		insert into movto_trans_financ(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			vl_transacao,
			dt_transacao,
			nr_seq_trans_financ,
			nr_seq_banco,
			nr_seq_banco_od,
			dt_referencia_saldo,
			nr_lote_contabil,
			ie_conciliacao,
			nr_documento,
			ds_historico,
			NR_SEQ_MOVTO_TRANSF_BCO,
			nr_seq_movto_orig,
			ie_estorno)
		values (nr_sequencia_w,
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			NEW.vl_transacao,
			NEW.dt_transacao,
			nr_seq_trans_banco_w,
			NEW.nr_seq_banco_od,
			NEW.nr_seq_banco,
			NEW.dt_referencia_saldo,
			0,
			'N',
			NEW.nr_documento,
			NEW.ds_historico,
			NEW.nr_sequencia,
			nr_seq_movto_orig_transf_w,
			ie_estorno_w);

		NEW.NR_SEQ_MOVTO_TRANSF_BCO	:= NEW.nr_sequencia;	-- Edgar 21/06/2011, OS 314641, gravar a movimentacao de origem para fins de contabilizacao
	end if;

	if (coalesce(ie_conferir_movto_cb_w,'N')	= 'S') then

		NEW.dt_conferencia	:= LOCALTIMESTAMP;

	end if;

	end;
end if;

exception
when	others then
	BEGIN

	if (NEW.nr_adiantamento		is not null) then /* Digitacao de Adiantamentos */


		ds_origem_w	:= substr(wheb_mensagem_pck.get_texto(304553),1,255);
		ds_documento_w	:= substr(wheb_mensagem_pck.get_texto(304554) || NEW.nr_adiantamento,1,255);

	elsif (NEW.nr_adiant_pago		is not null) then /* Adiantamento Pago */


		ds_origem_w	:= substr(wheb_mensagem_pck.get_texto(304555),1,255);
		ds_documento_w	:= substr(wheb_mensagem_pck.get_texto(304554) || NEW.nr_adiant_pago,1,255);

	elsif (NEW.nr_bordero		is not null) then /* Bordero a Pagar */


		ds_origem_w	:= substr(wheb_mensagem_pck.get_texto(304557),1,255);
		ds_documento_w	:= substr(wheb_mensagem_pck.get_texto(304558) || NEW.nr_bordero,1,255);

	elsif (NEW.nr_bordero_rec		is not null) then /* Bordero Recebimento */


		ds_origem_w	:= substr(wheb_mensagem_pck.get_texto(304559),1,255);
		ds_documento_w	:= substr(wheb_mensagem_pck.get_texto(304558) || NEW.nr_bordero_rec,1,255);

	elsif (NEW.nr_seq_banco_escrit	is not null) then /* Pagamento Escritural */


		ds_origem_w	:= substr(wheb_mensagem_pck.get_texto(304560),1,255);
		ds_documento_w	:= substr(wheb_mensagem_pck.get_texto(304561) || NEW.nr_seq_banco_escrit,1,255);

	elsif (NEW.nr_seq_bordero_cheque	is not null) then /* Administracao de Cheques */


		ds_origem_w	:= substr(wheb_mensagem_pck.get_texto(304562),1,255);
		ds_documento_w	:= substr(wheb_mensagem_pck.get_texto(304563) || NEW.nr_seq_bordero_cheque,1,255);

	elsif (NEW.nr_seq_cheque		is not null) then /* Administracao de Cheques */


		ds_origem_w	:= substr(wheb_mensagem_pck.get_texto(304562),1,255);
		ds_documento_w	:= substr(wheb_mensagem_pck.get_texto(304564) || NEW.nr_seq_cheque,1,255);

	elsif (NEW.nr_seq_cobr_escrit	is not null) then /* Cobranca Escritural */


		ds_origem_w	:= substr(wheb_mensagem_pck.get_texto(304565),1,255);
		ds_documento_w	:= substr(wheb_mensagem_pck.get_texto(304566) || NEW.nr_seq_cobr_escrit,1,255);

	elsif (NEW.nr_seq_conv_receb		is not null) then /* Retorno Convenio */


		ds_origem_w	:= substr(wheb_mensagem_pck.get_texto(304567),1,255);
		ds_documento_w	:= substr(wheb_mensagem_pck.get_texto(304568) || NEW.nr_seq_conv_receb,1,255);

	elsif (NEW.nr_seq_deposito		is not null) then /* Administracao de Cheques */


		ds_origem_w	:= substr(wheb_mensagem_pck.get_texto(304562),1,255);
		ds_documento_w	:= substr(wheb_mensagem_pck.get_texto(304569) || NEW.nr_seq_deposito,1,255);

	elsif (NEW.nr_seq_lote_cartao	is not null) then /* Administracao de Cartoes */


		ds_origem_w	:= substr(wheb_mensagem_pck.get_texto(304573),1,255);
		ds_documento_w	:= substr(wheb_mensagem_pck.get_texto(304574) || NEW.nr_seq_lote_cartao,1,255);

	elsif (NEW.nr_seq_movto_cartao	is not null) then /* Administracao de Cartoes */


		ds_origem_w	:= substr(wheb_mensagem_pck.get_texto(304573),1,255);
		ds_documento_w	:= substr(wheb_mensagem_pck.get_texto(304575) || NEW.nr_seq_movto_cartao,1,255);

	elsif (NEW.nr_seq_perda		is not null) then /* Tesouraria */


		ds_origem_w	:= substr(wheb_mensagem_pck.get_texto(304576),1,255);
		ds_documento_w	:= substr(wheb_mensagem_pck.get_texto(304577) || NEW.nr_seq_perda,1,255);

	elsif (NEW.nr_seq_caixa_rec		is not null) then /* Tesouraria */


		ds_origem_w	:= substr(wheb_mensagem_pck.get_texto(304576),1,255);
		ds_documento_w	:= substr(wheb_mensagem_pck.get_texto(304568) || NEW.nr_seq_caixa_rec,1,255);

	elsif (NEW.nr_seq_titulo_pagar	is not null) then

		select	max(a.nr_sequencia)
		into STRICT	nr_seq_baixa_w
		from	titulo_pagar_baixa a
		where	a.nr_titulo	= NEW.nr_seq_titulo_pagar;

		if (coalesce(nr_seq_baixa_w,0)	> 0) then

			select	a.nr_seq_escrit,
				a.nr_bordero
			into STRICT	nr_seq_banco_escrit_tit_w,
				nr_bordero_tit_w
			from	titulo_pagar_baixa a
			where	a.nr_sequencia	= nr_seq_baixa_w
			and	a.nr_titulo	= NEW.nr_seq_titulo_pagar;

			if (nr_seq_banco_escrit_tit_w	is not null) then /* Pagamento Escritural */


				ds_origem_w	:= substr(wheb_mensagem_pck.get_texto(304560),1,255);
				ds_documento_w	:= substr(wheb_mensagem_pck.get_texto(304561) || nr_seq_banco_escrit_tit_w || '. ' || wheb_mensagem_pck.get_texto(304579) || NEW.nr_seq_titulo_pagar,1,255);

			elsif (nr_bordero_tit_w		is not null) then /* Bordero a Pagar */


				ds_origem_w	:= substr(wheb_mensagem_pck.get_texto(304557),1,255);
				ds_documento_w	:= substr(wheb_mensagem_pck.get_texto(304558) || nr_bordero_tit_w || '. ' || wheb_mensagem_pck.get_texto(304579) ||

NEW.nr_seq_titulo_pagar,1,255);

			else
				/* Titulos a Pagar */


				ds_origem_w	:= substr(wheb_mensagem_pck.get_texto(304580),1,255);
				ds_documento_w	:= substr(wheb_mensagem_pck.get_texto(304579) || NEW.nr_seq_titulo_pagar,1,255);

			end if;

		else
			/* Titulos a Pagar */


			ds_origem_w	:= substr(wheb_mensagem_pck.get_texto(304580),1,255);
			ds_documento_w	:= substr(wheb_mensagem_pck.get_texto(304579) || NEW.nr_seq_titulo_pagar,1,255);

		end if;

	elsif (NEW.nr_seq_titulo_receber	is not null) then

		select	max(a.nr_sequencia)
		into STRICT	nr_seq_baixa_w
		from	titulo_receber_liq a
		where	a.nr_titulo	= NEW.nr_seq_titulo_receber;

		if (coalesce(nr_seq_baixa_w,0)	> 0) then

			select	a.nr_seq_cobranca,
				a.nr_bordero
			into STRICT	nr_seq_cobr_escrit_tit_w,
				nr_bordero_rec_tit_w
			from	titulo_receber_liq a
			where	a.nr_sequencia	= nr_seq_baixa_w
			and	a.nr_titulo	= NEW.nr_seq_titulo_receber;

			if (nr_seq_cobr_escrit_tit_w	is not null) then /* Cobranca Escritural */


				ds_origem_w	:= substr(wheb_mensagem_pck.get_texto(304565),1,255);
				ds_documento_w	:= substr(wheb_mensagem_pck.get_texto(304566) || nr_seq_cobr_escrit_tit_w || '. ' || wheb_mensagem_pck.get_texto(304579) || NEW.nr_seq_titulo_receber,1,255);

			elsif (nr_bordero_tit_w		is not null) then /* Bordero Recebimento */


				ds_origem_w	:= substr(wheb_mensagem_pck.get_texto(304559),1,255);
				ds_documento_w	:= substr(wheb_mensagem_pck.get_texto(304558) || nr_bordero_rec_tit_w || '. ' || wheb_mensagem_pck.get_texto(304579)

|| NEW.nr_seq_titulo_receber,1,255);

			else
				/* Manutencao de Titulos a Receber */


				ds_origem_w	:= substr(wheb_mensagem_pck.get_texto(304581),1,255);
				ds_documento_w	:= substr(wheb_mensagem_pck.get_texto(304579) || NEW.nr_seq_titulo_receber,1,255);

			end if;

		else
			/* Manutencao de Titulos a Receber */


			ds_origem_w	:= substr(wheb_mensagem_pck.get_texto(304581),1,255);
			ds_documento_w	:= substr(wheb_mensagem_pck.get_texto(304579) || NEW.nr_seq_titulo_receber,1,255);

		end if;

	end if;

	ds_historico_w	:=	substr(wheb_mensagem_pck.get_texto(304582) || trim(both to_char(NEW.vl_transacao,'999999990.00')) || chr(13) || chr(10) ||
				wheb_mensagem_pck.get_texto(304583) || NEW.nr_seq_trans_financ || chr(13) || chr(10) ||
				wheb_mensagem_pck.get_texto(304584) || ds_origem_w || chr(13) || chr(10) || ds_documento_w,1,4000);

	ds_historico_w	:= substr(sqlerrm,1,2000) || chr(13) || chr(10) || ds_historico_w;

	CALL gerar_banco_caixa_hist(	NEW.nr_seq_banco,
				NEW.nr_seq_caixa,
				ds_historico_w,
				NEW.nm_usuario,
				'S',
				'S');

	/* ds_historico_w */


	CALL wheb_mensagem_pck.exibir_mensagem_abort(244091,'DS_HISTORICO_W=' || ds_historico_w);
	end;
end;

NEW.DS_STACK := substr('CallStack Insert: ' || substr(dbms_utility.format_call_stack,1,3980),1,4000);

end if;

  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_movto_trans_financ_insert() FROM PUBLIC;

CREATE TRIGGER movto_trans_financ_insert
	BEFORE INSERT ON movto_trans_financ FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_movto_trans_financ_insert();

