-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS ordem_compra_insert ON ordem_compra CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_ordem_compra_insert() RETURNS trigger AS $BODY$
DECLARE
ie_seq_interna_w			varchar(01);
nr_seq_interno_w			bigint;
ie_somente_pagto_w		varchar(1);
ie_baixar_oc_pagto_w		varchar(1);
qt_reg_w				smallint;
qt_reprovada_w			bigint;
qt_itens_w			bigint;
gerar_material_marca_w		varchar(1);
qt_registro_w			bigint;
vl_frete_rateado_w		ordem_compra.vl_frete%type;
qt_itens_oc_w			ordem_compra_item.nr_item_oci%type;
nr_ordem_compra_w		ordem_compra_item_trib.nr_ordem_compra%type;
nr_item_oci_w			ordem_compra_item_trib.nr_item_oci%type;
qt_material_w			ordem_compra_item.qt_material%type;
vl_unitario_material_w	ordem_compra_item.vl_unitario_material%type;
vl_desconto_w			ordem_compra_item.vl_desconto%type;
cd_tributo_w			ordem_compra_item_trib.cd_tributo%type;
pr_tributo_w			ordem_compra_item_trib.pr_tributo%type;
ie_desc_nf_w			tributo.ie_desc_nf%type;
vl_tributo_w			ordem_compra_item_trib.vl_tributo%type;
ie_status_w  bigint;

c02 CURSOR FOR
SELECT	ocit.nr_ordem_compra,
		ocit.nr_item_oci,
		ocit.cd_tributo,
		ocit.pr_tributo,
		obter_inf_itens_oc(ocit.nr_ordem_compra, ocit.nr_item_oci, 1),
		obter_inf_itens_oc(ocit.nr_ordem_compra, ocit.nr_item_oci, 2),
		obter_inf_itens_oc(ocit.nr_ordem_compra, ocit.nr_item_oci, 3)
from	ordem_compra_item_trib ocit,
		tributo t
where	ocit.nr_ordem_compra = NEW.nr_ordem_compra
and		ocit.cd_tributo = t.cd_tributo
and		t.ie_tipo_tributo = 'IPI'
and		coalesce(obter_inf_itens_oc(ocit.nr_ordem_compra, ocit.nr_item_oci, 4),0) = 0;
BEGIN
  BEGIN

if (TG_OP = 'INSERT')then
	NEW.ds_stack := substr(dbms_utility.format_call_stack,1,2000);
end if;

if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

select count(*)
into STRICT ie_status_w
from ORDEM_COMPRA_ITEM
where NR_ORDEM_COMPRA = NEW.NR_ORDEM_COMPRA and obter_bloq_canc_proj_rec(nr_seq_proj_rec) > 0;

if (ie_status_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1144309);  -- Registro associado a um projeto bloqueado ou cancelado. 
end if;

if (NEW.cd_cgc_fornecedor is not null) and (NEW.cd_pessoa_fisica is not null) then
	--(-20011,'Nao e correto informar pessoa fisica e juridica');

	CALL wheb_mensagem_pck.exibir_mensagem_abort(177123);
end if;

if (NEW.cd_cgc_fornecedor is null) and (NEW.cd_estab_transf is not null) and (NEW.ie_tipo_ordem = 'T') then
	BEGIN
	select	cd_cgc
	into STRICT	NEW.cd_cgc_fornecedor
	from	estabelecimento
	where	cd_estabelecimento = NEW.cd_estab_transf;
	exception
	when others then
		NEW.cd_cgc_fornecedor	:=	null;
	end;
end if;


if (NEW.cd_cgc_fornecedor is null) and (NEW.cd_pessoa_fisica is null) then
	--(-20011,'Nao foi informado pessoa fisica ou juridica');

	CALL wheb_mensagem_pck.exibir_mensagem_abort(177125);
end if;

if (NEW.nr_seq_interno is null) and (OLD.nr_ordem_compra is null) then
	select	coalesce(max(ie_seq_interna),'N')
	into STRICT	ie_seq_interna_w
	from	parametro_compras
	where	cd_estabelecimento	= NEW.cd_estabelecimento;

	/* Locar a tabela e obter o numero da ordem de compra */


	if (ie_seq_interna_w = 'S') then
		nr_seq_interno_w	:= obter_nr_interno_oc;
		NEW.nr_seq_interno	:= nr_seq_interno_w;
	end if;
end if;

if (coalesce(NEW.cd_pessoa_solicitante,'X') <>  coalesce(OLD.cd_pessoa_solicitante,'X')) then
	BEGIN
	CALL wheb_usuario_pck.set_ie_executar_trigger('N');
	update	ordem_compra_item
	set	cd_pessoa_solicitante	= NEW.cd_pessoa_solicitante
	where	nr_ordem_compra		= OLD.nr_ordem_compra;
	CALL wheb_usuario_pck.set_ie_executar_trigger('S');
	exception
	when others then
		CALL wheb_usuario_pck.set_ie_executar_trigger('S');
	end;
end if;

select	count(*)
into STRICT	qt_registro_w
from	ordem_compra_item
where	nr_ordem_compra = NEW.nr_ordem_compra
and	dt_aprovacao is not null;

ie_somente_pagto_w	:= coalesce(NEW.ie_somente_pagto,'N');

if (OLD.dt_aprovacao is null) and (NEW.dt_aprovacao is not null)  and (ie_somente_pagto_w = 'S') and (qt_registro_w > 0)	then
	BEGIN
	CALL gerar_titulo_ordem(	NEW.nr_ordem_compra,
				NEW.cd_estabelecimento,
				trunc(NEW.dt_aprovacao,'dd'), /*  Francisco - 30/05 - Troquei dt_emissao por essa */

				coalesce(NEW.cd_moeda,1),
				coalesce(NEW.pr_juros_negociado,0),
				coalesce(NEW.pr_multa_atraso,0),
				coalesce(NEW.cd_pessoa_fisica,''),
				coalesce(NEW.cd_cgc_fornecedor,''),
				NEW.nm_usuario,
				substr(NEW.ds_observacao,1,254));

	select	coalesce(max(ie_baixar_oc_pagto),'S')
	into STRICT	ie_baixar_oc_pagto_w
	from	parametro_compras
	where	cd_estabelecimento	= NEW.cd_estabelecimento;
	if (ie_baixar_oc_pagto_w = 'S') then
		NEW.dt_baixa := LOCALTIMESTAMP;
	end if;

	end;
end if;

if (OLD.dt_aprovacao is null) and (NEW.dt_aprovacao is not null)  and (qt_registro_w > 0) then
	BEGIN

	select	count(*)
	into STRICT	qt_reprovada_w
	from	ordem_compra_item
	where	nr_ordem_Compra = NEW.nr_ordem_compra
	and	nr_seq_aprovacao is not null
	and	dt_reprovacao is not null;

	select	count(*)
	into STRICT	qt_itens_w
	from	ordem_compra_item
	where	nr_ordem_compra = NEW.nr_ordem_compra;
	
	if (qt_itens_w <> qt_reprovada_w) then
		BEGIN
	
		CALL gerar_adiantamento_oc(
			NEW.nr_ordem_compra,
			NEW.cd_cgc_fornecedor,
			NEW.cd_pessoa_fisica,
			NEW.cd_moeda,
			NEW.cd_estabelecimento,
			NEW.nm_usuario,
			NEW.vl_conv_moeda);
		end;
	end if;

	select	coalesce(max(ie_gerar_material_marca),'N')
	into STRICT	gerar_material_marca_w
	from	parametro_compras
	where	cd_estabelecimento = NEW.cd_estabelecimento;

	if (gerar_material_marca_w = 'S') then
		CALL gerar_material_marca_oc(NEW.nr_ordem_compra,NEW.cd_estabelecimento,NEW.nm_usuario);
	end if;
	
	end;
end if;

qt_itens_oc_w := obter_inf_itens_oc(NEW.nr_ordem_compra, null, null);

if (TG_OP = 'UPDATE') and (qt_itens_oc_w > 0) then
	BEGIN
	vl_frete_rateado_w := NEW.vl_frete / qt_itens_oc_w;
	
	open c02;
	loop
	fetch c02 into
		nr_ordem_compra_w,
		nr_item_oci_w,
		cd_tributo_w,
		pr_tributo_w,
		qt_material_w,
		vl_unitario_material_w,
		vl_desconto_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		BEGIN
		select	coalesce(ie_desc_nf,'N')
		into STRICT	ie_desc_nf_w
		from	tributo
		where	cd_tributo = cd_tributo_w;
		
		if (NEW.ie_frete = 'F') and (NEW.vl_frete > 0) and ((NEW.ie_frete <> OLD.ie_frete) or (NEW.vl_frete <> OLD.vl_frete)) then
			BEGIN
			if (ie_desc_nf_w = 'S') then
				vl_tributo_w	:= (pr_tributo_w / 100) * ((qt_material_w * vl_unitario_material_w) - vl_desconto_w + vl_frete_rateado_w);
			else
				vl_tributo_w	:= (pr_tributo_w / 100) * ((qt_material_w * vl_unitario_material_w) + vl_frete_rateado_w);
			end if;
			end;
		elsif (OLD.ie_frete = 'F' and NEW.ie_frete <> 'F') or (OLD.vl_frete > 0 and coalesce(NEW.vl_frete,0) = 0) then
			BEGIN
			if (ie_desc_nf_w = 'S') then
				vl_tributo_w	:= (pr_tributo_w / 100) * ((qt_material_w * vl_unitario_material_w) - vl_desconto_w);
			else
				vl_tributo_w	:= (pr_tributo_w / 100) * (qt_material_w * vl_unitario_material_w);
			end if;
			end;
		end if;
		
		if (vl_tributo_w is not null) then
			update	ordem_compra_item_trib
			set		vl_tributo = vl_tributo_w
			where	nr_ordem_compra = nr_ordem_compra_w
			and		nr_item_oci = nr_item_oci_w
			and		cd_tributo = cd_tributo_w;	
		end if;
		end;
	end loop;
	close c02;
	end;
end if;		

<<Final>>
qt_reg_w	:= 0;
  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_ordem_compra_insert() FROM PUBLIC;

CREATE TRIGGER ordem_compra_insert
	BEFORE INSERT OR UPDATE ON ordem_compra FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_ordem_compra_insert();

