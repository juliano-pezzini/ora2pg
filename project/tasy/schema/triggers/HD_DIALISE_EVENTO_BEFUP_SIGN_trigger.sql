-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS hd_dialise_evento_befup_sign ON hd_dialise_evento CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_hd_dialise_evento_befup_sign() RETURNS trigger AS $BODY$
declare
nr_seq_assinatura_w	hd_assinatura_digital.nr_sequencia%type;

BEGIN

select 	max(a.nr_sequencia)
into STRICT	nr_seq_assinatura_w
from 	hd_assinatura_digital a,
	hd_assinatura_item b
where 	a.nr_sequencia = b.nr_seq_assinatura
and	b.nr_seq_evento = NEW.nr_sequencia
and 	a.ie_opcao = 'NE'
and	a.dt_liberacao is not null;

if (nr_seq_assinatura_w is not null)
	and (OLD.nr_sequencia			<> NEW.nr_sequencia
		or OLD.dt_atualizacao			<> NEW.dt_atualizacao
		or OLD.nm_usuario			<> NEW.nm_usuario
		or OLD.dt_atualizacao_nrec		<> NEW.dt_atualizacao_nrec
		or OLD.nm_usuario_nrec			<> NEW.nm_usuario_nrec
		or OLD.nr_seq_dialise			<> NEW.nr_seq_dialise
		or OLD.nr_seq_tipo_evento		<> NEW.nr_seq_tipo_evento
		or OLD.dt_evento			<> NEW.dt_evento
		or OLD.nr_seq_unid_dialise		<> NEW.nr_seq_unid_dialise
		or OLD.ds_observacao			<> NEW.ds_observacao
		or OLD.nr_seq_dialise_peritonial	<> NEW.nr_seq_dialise_peritonial
		or (OLD.nr_sequencia			is null	and	NEW.nr_sequencia		is not null)
		or (OLD.dt_atualizacao			is null	and	NEW.dt_atualizacao		is not null)
		or (OLD.nm_usuario			is null	and	NEW.nm_usuario			is not null)
		or (OLD.dt_atualizacao_nrec		is null	and	NEW.dt_atualizacao_nrec	is not null)
		or (OLD.nm_usuario_nrec		is null	and	NEW.nm_usuario_nrec		is not null)
		or (OLD.nr_seq_dialise			is null	and	NEW.nr_seq_dialise		is not null)
		or (OLD.nr_seq_tipo_evento		is null	and	NEW.nr_seq_tipo_evento		is not null)
		or (OLD.dt_evento			is null	and	NEW.dt_evento			is not null)
		or (OLD.nr_seq_unid_dialise		is null	and	NEW.nr_seq_unid_dialise	is not null)
		or (OLD.ds_observacao			is null	and	NEW.ds_observacao		is not null)
		or (OLD.nr_seq_dialise_peritonial	is null	and	NEW.nr_seq_dialise_peritonial	is not null)
		or (OLD.nr_sequencia			is not null	and	NEW.nr_sequencia		is null)
		or (OLD.dt_atualizacao			is not null	and	NEW.dt_atualizacao		is null)
		or (OLD.nm_usuario			is not null	and	NEW.nm_usuario			is null)
		or (OLD.dt_atualizacao_nrec		is not null	and	NEW.dt_atualizacao_nrec	is null)
		or (OLD.nm_usuario_nrec		is not null	and	NEW.nm_usuario_nrec		is null)
		or (OLD.nr_seq_dialise			is not null	and	NEW.nr_seq_dialise		is null)
		or (OLD.nr_seq_tipo_evento		is not null	and	NEW.nr_seq_tipo_evento		is null)
		or (OLD.dt_evento			is not null	and	NEW.dt_evento			is null)
		or (OLD.nr_seq_unid_dialise		is not null	and	NEW.nr_seq_unid_dialise	is null)
		or (OLD.ds_observacao			is not null	and	NEW.ds_observacao		is null)
		or (OLD.nr_seq_dialise_peritonial	is not null	and	NEW.nr_seq_dialise_peritonial	is null)) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(364485);
end if;

RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_hd_dialise_evento_befup_sign() FROM PUBLIC;

CREATE TRIGGER hd_dialise_evento_befup_sign
	BEFORE UPDATE ON hd_dialise_evento FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_hd_dialise_evento_befup_sign();

