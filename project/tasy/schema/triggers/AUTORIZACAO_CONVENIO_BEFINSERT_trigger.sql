-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS autorizacao_convenio_befinsert ON autorizacao_convenio CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_autorizacao_convenio_befinsert() RETURNS trigger AS $BODY$
DECLARE

ie_tipo_atendimento_w	smallint;
cd_proc_convenio_w	varchar(20)	:= '';
cd_grupo_w		varchar(10)	:= '';
nr_seq_conversao_w	bigint;	
cd_plano_w		varchar(10)	:= '';
ie_clinica_w		integer;
cd_tipo_acomod_conv_w	smallint;
qt_idade_w		bigint;
cd_pessoa_fisica_w	varchar(10);
ie_sexo_w		varchar(1);
cd_empresa_ref_w	bigint;
ie_carater_inter_sus_w	varchar(2);

pragma autonomous_transaction;	
BEGIN
  BEGIN
/*2036854 - Generating insurance authorization from Service Schedule */



if (NEW.cd_proc_principal_loc is null and NEW.CD_PROCEDIMENTO_PRINCIPAL is not null and NEW.ie_origem_proced is not null)then
  select cd_procedimento_loc
  into STRICT NEW.cd_proc_principal_loc
  from procedimento
  where cd_procedimento=NEW.CD_PROCEDIMENTO_PRINCIPAL
  and ie_origem_proced=NEW.ie_origem_proced;
end if;

/* OS 51884 - Gravar proc convÃªnio */


if (NEW.nr_atendimento is not null) then
	select	max(ie_tipo_atendimento)
	into STRICT	ie_tipo_atendimento_w
	from	atendimento_paciente
	where	nr_atendimento	= NEW.nr_atendimento;
	
	select 	max(cd_plano_convenio),
		coalesce(max(cd_empresa),0)
	into STRICT	cd_plano_w,
		cd_empresa_ref_w
	from 	atend_categoria_convenio
	where	nr_atendimento = NEW.nr_atendimento
	and 	cd_convenio    = NEW.cd_convenio;
	
	select 	max(cd_tipo_acomodacao)
	into STRICT	cd_tipo_acomod_conv_w
	from 	atend_categoria_convenio
	where	nr_atendimento = NEW.nr_atendimento
	and 	cd_convenio    = NEW.cd_convenio;
	
	if (NEW.cd_pessoa_fisica is null) then
		select	max(cd_pessoa_fisica)
		into STRICT	NEW.cd_pessoa_fisica
		from	atendimento_paciente
		where	nr_atendimento = NEW.nr_atendimento;	
	end if;
end if;

if (NEW.cd_procedimento_principal is not null) then

	select	max(cd_pessoa_fisica),
		max(ie_carater_inter_sus)
	into STRICT	cd_pessoa_fisica_w,
		ie_carater_inter_sus_w
	from	atendimento_paciente
	where	nr_atendimento = NEW.nr_atendimento;
	
	BEGIN
	select	max(obter_idade(dt_nascimento, coalesce(dt_obito,LOCALTIMESTAMP),'DIA')),
		max(ie_sexo)
	into STRICT	qt_idade_w,
		ie_sexo_w
	from	pessoa_fisica
	where	cd_pessoa_fisica = cd_pessoa_fisica_w;
	exception
	when others then
		qt_idade_w	:= 0;
		ie_sexo_w	:= '';
	end;

	SELECT * FROM converte_proc_convenio(null, NEW.cd_convenio, null, NEW.cd_procedimento_principal, NEW.ie_origem_proced, null, null, ie_tipo_atendimento_w, null, cd_proc_convenio_w, cd_grupo_w, nr_seq_conversao_w, null, null, null, 'A', cd_plano_w, ie_clinica_w, 0, null, cd_tipo_acomod_conv_w, qt_idade_w, ie_sexo_w, cd_empresa_ref_w, ie_carater_inter_sus_w, 0, null, null, null) INTO STRICT cd_proc_convenio_w, cd_grupo_w, nr_seq_conversao_w;
end if;

if (cd_proc_convenio_w is not null) then
	NEW.cd_procedimento_convenio	:= cd_proc_convenio_w;
end if;

  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_autorizacao_convenio_befinsert() FROM PUBLIC;

CREATE TRIGGER autorizacao_convenio_befinsert
	BEFORE INSERT OR UPDATE ON autorizacao_convenio FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_autorizacao_convenio_befinsert();

