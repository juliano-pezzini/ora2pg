-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS inventario_material_update ON inventario_material CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_inventario_material_update() RETURNS trigger AS $BODY$
DECLARE

ds_observacao_w		varchar(255);
ie_atualiza_dif_cont_w	varchar(1) := 'N';
cd_estabelecimento_w	smallint := wheb_usuario_pck.get_cd_estabelecimento;
dt_atualizacao_saldo_w	timestamp;

BEGIN
select	dt_atualizacao_saldo
into STRICT	dt_atualizacao_saldo_w
from	inventario
where	nr_sequencia = NEW.nr_seq_inventario;

if (dt_atualizacao_saldo_w is not null) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(235097);
end if;

if (NEW.cd_material) <> (OLD.cd_material) then
	BEGIN
	if (NEW.nr_seq_inv_ciclico is not null) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(716973);
	end if;

	ds_observacao_w	:= WHEB_MENSAGEM_PCK.get_texto(279125) || OLD.cd_material || WHEB_MENSAGEM_PCK.get_texto(279127) || NEW.cd_material;
	if (NEW.ds_observacao is not null) then
		ds_observacao_w	:= substr(NEW.ds_observacao || chr(13) || chr(10) || ds_observacao_w,1,255);
	end if;

	NEW.ds_observacao	:= ds_observacao_w;
	end;
end if;

ie_atualiza_dif_cont_w := Obter_Param_Usuario(143, 233, obter_perfil_ativo, NEW.nm_usuario, cd_estabelecimento_w, ie_atualiza_dif_cont_w);

if (ie_atualiza_dif_cont_w = 'S') and (NEW.qt_inventario is null) and (NEW.qt_saldo is not null) then
	BEGIN
	if (NEW.qt_terc_recontagem is not null) then
		NEW.qt_diferenca := NEW.qt_terc_recontagem - NEW.qt_saldo;
	elsif (NEW.qt_seg_recontagem is not null) then
		NEW.qt_diferenca := NEW.qt_seg_recontagem - NEW.qt_saldo;
	elsif (NEW.qt_recontagem is not null) then
		NEW.qt_diferenca := NEW.qt_recontagem - NEW.qt_saldo;
	elsif (NEW.qt_contagem is not null) then
		NEW.qt_diferenca := NEW.qt_contagem - NEW.qt_saldo;
	else
		NEW.qt_diferenca := null;
	end if;
	end;
end if;

RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_inventario_material_update() FROM PUBLIC;

CREATE TRIGGER inventario_material_update
	BEFORE UPDATE ON inventario_material FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_inventario_material_update();

