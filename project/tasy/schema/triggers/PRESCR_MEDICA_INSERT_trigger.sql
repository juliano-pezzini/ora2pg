-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS prescr_medica_insert ON prescr_medica CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_prescr_medica_insert() RETURNS trigger AS $BODY$
declare
dt_entrada_w					timestamp;
nr_seq_forma_laudo_w			bigint;
qt_medico_w						bigint;
ie_tipo_atendimento_w			smallint;
qt_desfecho_w					bigint;
ie_sem_atend_w					varchar(1);
hr_prescr_copia_w				varchar(10);
ds_erro_w						varchar(255);
ie_considera_minuto_w			varchar(1);
ie_prescr_validade_w			varchar(1);
ie_minutos_rep_w				varchar(1);
dt_rep_pt_w						timestamp;
dt_rep_pt2_w					timestamp;
dt_prim_setor_w					timestamp;
ie_inicia_dia_plano_w			varchar(1);
ie_copia_guia_senha_w			varchar(1);
ie_calcula_validade_w		varchar(1);
nr_doc_convenio_w				varchar(20);
cd_senha_w						varchar(20);
cd_funcao_w						bigint;
qt_caracter_espaco_w			bigint;
ie_prescr_validade_cir_w		varchar(1);
ie_permite_guia_senha_atend_w	varchar(1);
nm_maquina_w					varchar(255);
cd_estabelecimento_setor_w		estabelecimento.cd_estabelecimento%type;
BEGIN
  BEGIN

BEGIN
if (coalesce(NEW.cd_funcao_origem,0) = 2314) and (NEW.cd_setor_atendimento is not null) then
	cd_estabelecimento_setor_w := obter_estabelecimento_setor(NEW.cd_setor_atendimento);
	if (coalesce(NEW.cd_estabelecimento,0) <> cd_estabelecimento_setor_w) then
		NEW.cd_estabelecimento := cd_estabelecimento_setor_w;
	end if;
end if;

exception when others then
	null;
end;

CALL wheb_assist_pck.set_informacoes_usuario(NEW.cd_estabelecimento, obter_perfil_ativo, NEW.nm_usuario);
qt_caracter_espaco_w := wheb_assist_pck.obterValorParametroREP(1033, qt_caracter_espaco_w);

ie_copia_guia_senha_w := Obter_Param_Usuario(916, 834, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_copia_guia_senha_w);
ie_prescr_validade_cir_w := Obter_Param_Usuario(900, 419, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_prescr_validade_cir_w);
ie_prescr_validade_w := Obter_Param_Usuario(924, 753, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_prescr_validade_w);

if (coalesce(NEW.cd_funcao_origem,0) <> 8030) then
	cd_funcao_w	:= coalesce(obter_funcao_ativa,0);
else
	cd_funcao_w := 8030;
end if;

if (cd_funcao_w > 0) then
	NEW.cd_funcao_origem	:= cd_funcao_w;
end if;

if (qt_caracter_espaco_w > 1) then
	NEW.qt_caracter_espaco	:= qt_caracter_espaco_w;
end if;

if (to_char(NEW.dt_primeiro_horario,'ss') <> '00') then
	NEW.dt_primeiro_horario	:= trunc(NEW.dt_primeiro_horario,'mi') + 1/1440;
	if (cd_funcao_w = 8030) then
		NEW.nr_horas_validade		:= Obter_Horas_Valid_Prescr_Trig(NEW.dt_primeiro_horario,NEW.nr_atendimento, wheb_assist_pck.obterParametroFuncao(924, 249), 'A',NEW.dt_prescricao, NEW.nr_prescricao, NEW.cd_setor_atendimento);
	end if;
end if;

CALL Consistir_impedimento_pf(NEW.cd_medico,'REP',NEW.nm_usuario);
if (NEW.cd_prescritor is not null) then
	CALL Consistir_impedimento_pf(NEW.cd_prescritor,'REP',NEW.nm_usuario);
end if;

if (NEW.nr_atendimento > 0) then
	select	dt_entrada,
			nr_seq_forma_laudo,
			ie_tipo_atendimento
	into STRICT	dt_entrada_w,
			nr_seq_forma_laudo_w,
			ie_tipo_atendimento_w
	from	atendimento_paciente
	where	nr_atendimento = NEW.nr_atendimento;

	if (NEW.nr_seq_forma_laudo is null) and (nr_seq_forma_laudo_w is not null) then
		NEW.nr_seq_forma_laudo	:= nr_seq_forma_laudo_w;
	end if;

	if (cd_funcao_w in (871,900)) and (dt_entrada_w > NEW.dt_prescricao) and (ie_prescr_validade_cir_w = 'S') then
			--A data da prescrição não pode ser menor que a data de entrada do atendimento. #@NR_ATENDIMENTO#@
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(173308,'NR_ATENDIMENTO=' || NEW.nr_atendimento);

	elsif (cd_funcao_w not in (871,900,916,3130)) and (dt_entrada_w > NEW.dt_prescricao) and (ie_prescr_validade_w = 'N') then
			----A data da prescrição não pode ser menor que a data de entrada do atendimento. #@NR_ATENDIMENTO#@
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(173308,'NR_ATENDIMENTO=' || NEW.nr_atendimento);
	end if;


	ie_sem_atend_w := Obter_Param_Usuario(924, 178, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_sem_atend_w);
	--Obter_Param_Usuario(924,178,obter_perfil_ativo,:new.nm_usuario,:new.cd_estabelecimento,ie_copia_peso_altura_w);
	if (ie_tipo_atendimento_w = 3) and (ie_sem_atend_w = 'S') then
        	BEGIN
        	select  count(b.nr_sequencia)
	        into STRICT    qt_desfecho_w
	        from    atendimento_alta b, parametro_medico p
	        where   nr_atendimento  = NEW.nr_atendimento
			and		ie_desfecho in ('I','A')
			and		ie_tipo_orientacao = 'P'
			and     p.cd_estabelecimento = obter_estabelecimento_ativo
			and     ((coalesce(p.ie_liberar_desfecho,'N')  = 'N')
			or      (b.dt_liberacao is not null AND b.dt_inativacao is null));

	        if (qt_desfecho_w > 0) then
        	        NEW.nr_atendimento     := null;
	        end if;
        	end;
	end if;

end if;

If (ie_prescr_validade_w = 'S') and (NEW.IE_PRESCR_EMERGENCIA = 'S')then
	ie_prescr_validade_w	:= 'N';
end if;

if (coalesce(NEW.qt_peso,0) = 0) and (coalesce(wheb_assist_pck.obterParametroFuncao(924, 380),'S') = 'S') then
	BEGIN
		NEW.qt_peso	:= obter_ultimo_sinal_vital_pf(NEW.cd_pessoa_fisica,'Peso');
	exception when others then
		null;
	end;
end if;

if (coalesce(NEW.qt_altura_cm,0) = 0) and (coalesce(wheb_assist_pck.obterParametroFuncao(924, 381),'S') = 'S') then
	NEW.qt_altura_cm	:= obter_sinal_vital(NEW.nr_atendimento,'Altura');
end if;

if (NEW.cd_especialidade is null) then
	NEW.cd_especialidade	:= wheb_usuario_pck.get_cd_especialidade;
end if;

if (to_char(NEW.dt_prescricao,'dd/mm/yyyy') = '30/12/1899') then
	--A data da prescrição informada não é válida. #@DT_PRESCRICAO#@
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(173273, 'DT_PRESCRICAO=' || to_char(NEW.dt_prescricao,'dd/mm/yyyy hh24:mi:ss'));
end if;

BEGIN
NEW.cd_setor_orig	:= Obter_Setor_Atendimento(NEW.nr_atendimento);
NEW.cd_unid_compl	:= Obter_Unidade_Atendimento(NEW.nr_atendimento, 'A', 'UC');
NEW.cd_unid_basica	:= Obter_Unidade_Atendimento(NEW.nr_atendimento, 'A', 'UB');
NEW.dt_prescricao_original	:= LOCALTIMESTAMP;
exception when others then
	ds_erro_w	:= null;
end;

select	count(*)
into STRICT	qt_medico_w
from	medico
where	cd_pessoa_fisica	= NEW.cd_medico;

if (qt_medico_w = 0) and (NEW.cd_medico is not null) and (wheb_assist_pck.obterParametroFuncao(924, 1037) = 'S') then
	--A pessoa informada no campo Médico não esta cadastrada como médico.
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(173291);
end if;

BEGIN
	select	ie_tipo_evolucao
	into STRICT	NEW.ie_funcao_prescritor
	from	usuario
	where	nm_usuario	= NEW.nm_usuario_original;
exception when others then
	NEW.ie_funcao_prescritor	:= null;
end;

if (ie_prescr_validade_w <> 'S') then
	hr_prescr_copia_w := wheb_assist_pck.obterValorParametroREP(532, hr_prescr_copia_w);
	if (hr_prescr_copia_w is null) or (to_char(NEW.dt_primeiro_horario,'hh24:mi') <> hr_prescr_copia_w) then
		BEGIN
		/* Rafael / Edilson em 17/07/2007 */

		if (NEW.dt_primeiro_horario is not null) then
			if (to_char(NEW.dt_primeiro_horario,'hh24:mi:ss') < to_char(NEW.dt_prescricao,'hh24:mi:ss')) then
				NEW.dt_inicio_prescr := to_date(to_char(NEW.dt_prescricao+1,'dd/mm/yyyy') || ' ' || to_char(NEW.dt_primeiro_horario,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
			else
				NEW.dt_inicio_prescr := to_date(to_char(NEW.dt_prescricao,'dd/mm/yyyy') || ' ' || to_char(NEW.dt_primeiro_horario,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
			end if;
		else
			NEW.dt_inicio_prescr := NEW.dt_prescricao;
		end if;

		end;
	else
		BEGIN
		if (NEW.dt_primeiro_horario is not null) then --OS195107
			NEW.dt_inicio_prescr := to_date(to_char(NEW.dt_prescricao,'dd/mm/yyyy') || ' ' || to_char(NEW.dt_primeiro_horario,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
		else
			NEW.dt_inicio_prescr := NEW.dt_prescricao;
		end if;

		end;
	end if;
elsif (ie_prescr_validade_w = 'S') then
	if (NEW.dt_inicio_prescr is null)  then
		if (NEW.dt_primeiro_horario is not null) then
			if (to_char(NEW.dt_primeiro_horario,'hh24:mi:ss') < to_char(NEW.dt_prescricao,'hh24:mi:ss')) then
				NEW.dt_inicio_prescr := to_date(to_char(NEW.dt_prescricao+1,'dd/mm/yyyy') || ' ' || to_char(NEW.dt_primeiro_horario,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
			else
				NEW.dt_inicio_prescr := to_date(to_char(NEW.dt_prescricao,'dd/mm/yyyy') || ' ' || to_char(NEW.dt_primeiro_horario,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
			end if;
		else
			NEW.dt_inicio_prescr := NEW.dt_prescricao;
		end if;
	elsif (NEW.dt_inicio_prescr < to_date(to_char(NEW.dt_prescricao,'dd/mm/yyyy') || ' ' || to_char(NEW.dt_primeiro_horario,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'))then
		NEW.dt_inicio_prescr := to_date(to_char(NEW.dt_prescricao,'dd/mm/yyyy') || ' ' || to_char(NEW.dt_primeiro_horario,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
	end if;
end if;

select	max(hr_inicio_prescricao),
		coalesce(max(ie_minutos_rep),'S')
into STRICT	dt_prim_setor_w,
		ie_minutos_rep_w
from	setor_atendimento
where	cd_setor_atendimento = NEW.cd_setor_atendimento;

if (coalesce(NEW.ie_hemodialise,'N') not in ('E','S')) then
	ie_calcula_validade_w	:= 'S';
else
	ie_calcula_validade_w := wheb_assist_pck.obterValorParametroREP(1016, ie_calcula_validade_w);
end if;

if (ie_calcula_validade_w	= 'S') then
	NEW.dt_validade_prescr := NEW.dt_inicio_prescr + coalesce(NEW.nr_horas_validade,24) / 24;

	ie_considera_minuto_w := wheb_assist_pck.obterValorParametroREP(689, ie_considera_minuto_w);
	if (ie_considera_minuto_w = 'S') and (coalesce(NEW.cd_funcao_origem,924) <> 950) then
		NEW.dt_validade_prescr := trunc(NEW.dt_validade_prescr,'mi') - 1/86400;
	elsif (ie_considera_minuto_w	= 'D') and (ie_minutos_rep_w	= 'S') and (coalesce(NEW.cd_funcao_origem,924) <> 950) then
		NEW.dt_validade_prescr := trunc(NEW.dt_validade_prescr,'mi') - 1/86400;
	else
		NEW.dt_validade_prescr := trunc(NEW.dt_validade_prescr,'hh24') - 1/86400;
	end if;
end if;

if	(NEW.nr_seq_transcricao is not null AND NEW.nr_prescricao_original is null) then

	update	transcricao_prescricao
	set		ie_status	= 'E'
	where	nr_sequencia	= NEW.nr_seq_transcricao;

end if;


if (obter_Perfil_Ativo	> 0) and (NEW.cd_perfil_ativo is null) then
	NEW.cd_perfil_ativo	:= obter_Perfil_Ativo;
end if;

if (dt_prim_setor_w is not null) then

	select	coalesce(max(vl_parametro),max(vl_parametro_padrao))
	into STRICT	ie_inicia_dia_plano_w
	from	funcao_parametro
	where	cd_funcao	= 950
	and		nr_sequencia	= 66;

	dt_rep_pt_w		:= trunc(NEW.dt_inicio_prescr);

	dt_prim_setor_w		:= to_date(to_char(NEW.dt_inicio_prescr,'dd/mm/yyyy') || ' ' || to_char(dt_prim_setor_w,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');

	if (NEW.dt_inicio_prescr	< dt_prim_setor_w) then
		dt_rep_pt_w	:= trunc(NEW.dt_inicio_prescr - 1);
		if (NEW.dt_validade_prescr > dt_prim_setor_w) then
			dt_rep_pt2_w	:= (dt_rep_pt_w + 1);
		else
			dt_rep_pt2_w	:= null;
		end if;
	elsif (NEW.nr_horas_validade	> 24) then
		dt_rep_pt2_w	:= (dt_rep_pt_w + 1);
	else
		dt_rep_pt2_w	:= null;
	end if;

	if (ie_inicia_dia_plano_w = 'N') then
		dt_rep_pt_w := dt_rep_pt_w + 1;
		if (dt_rep_pt2_w is not null) then
			dt_rep_pt2_w := dt_rep_pt2_w + 1;
		end if;
	end if;

	NEW.dt_rep_pt	:= dt_rep_pt_w;
	NEW.dt_rep_pt2	:= dt_rep_pt2_w;

else

	NEW.dt_rep_pt	:= trunc(coalesce(NEW.dt_inicio_prescr,NEW.dt_prescricao));
	NEW.dt_rep_pt2	:= trunc(coalesce(NEW.dt_validade_prescr,NEW.dt_prescricao));

end if;

if (ie_copia_guia_senha_w <> 'N') then

	select	max(nr_doc_convenio),
		max(cd_senha)
	into STRICT	nr_doc_convenio_w,
		cd_senha_w
	from	atend_categoria_convenio a
	where	nr_atendimento = NEW.nr_atendimento;

	if (ie_copia_guia_senha_w = 'S') then

		if (nr_doc_convenio_w is not null) then
			NEW.nr_doc_conv := nr_doc_convenio_w;
		end if;

		if (cd_senha_w is not null) then
			NEW.cd_senha := cd_senha_w;
		end if;

	elsif (ie_copia_guia_senha_w = 'I') then

		if (nr_doc_convenio_w is not null) and (NEW.nr_doc_conv is null) then
			NEW.nr_doc_conv := nr_doc_convenio_w;
		end if;

		if (cd_senha_w is not null) and (NEW.cd_senha is null) then
			NEW.cd_senha := cd_senha_w;
		end if;

	end if;

end if;

if (coalesce(NEW.dt_entrega, NEW.dt_prescricao) < NEW.dt_prescricao) then

	--Wheb_mensagem_pck.exibir_mensagem_abort(267493);
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(267493, 'DT_ENTREGA='||to_char(NEW.dt_entrega, 'dd/mm/yyyy hh24:mi:ss')||';DT_PRESCRICAO='||to_char(NEW.dt_prescricao, 'dd/mm/yyyy hh24:mi:ss'));


end if;

select	substr(max(module||' - ' || machine||' - ' || program|| ' - ' || osuser|| ' - ' || terminal),1,255)
into STRICT	nm_maquina_w
from	v$session
where	audsid = (SELECT userenv('sessionid') );
NEW.nm_maquina := nm_maquina_w;

NEW.ds_stack	:= substr(dbms_utility.format_call_stack,1,2000);

  END;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_prescr_medica_insert() FROM PUBLIC;

CREATE TRIGGER prescr_medica_insert
	BEFORE INSERT ON prescr_medica FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_prescr_medica_insert();

