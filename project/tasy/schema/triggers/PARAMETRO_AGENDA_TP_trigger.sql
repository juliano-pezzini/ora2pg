-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS parametro_agenda_tp ON parametro_agenda CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_parametro_agenda_tp() RETURNS trigger AS $BODY$
DECLARE nr_seq_w bigint;ds_s_w   varchar(1);ds_c_w   varchar(1);ds_w	   varchar(1);ie_log_w varchar(1);BEGIN BEGIN ds_s_w := to_char(OLD.NR_SEQUENCIA);  ds_c_w:=null;SELECT * FROM gravar_log_alteracao(substr(OLD.IE_USUARIO_ORIG_TRANSF,1,4000), substr(NEW.IE_USUARIO_ORIG_TRANSF,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_USUARIO_ORIG_TRANSF', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_URL_GED,1,4000), substr(NEW.DS_URL_GED,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_URL_GED', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_EMPRESA,1,4000), substr(NEW.CD_EMPRESA,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_EMPRESA', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_DURACAO_COPIA,1,4000), substr(NEW.IE_DURACAO_COPIA,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_DURACAO_COPIA', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_DURACAO_TRANSF,1,4000), substr(NEW.IE_DURACAO_TRANSF,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_DURACAO_TRANSF', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_STATUS_COPIA,1,4000), substr(NEW.IE_STATUS_COPIA,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_STATUS_COPIA', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_STATUS_TRANSF,1,4000), substr(NEW.IE_STATUS_TRANSF,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_STATUS_TRANSF', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_MEDICO_RESP_ATEND,1,4000), substr(NEW.IE_MEDICO_RESP_ATEND,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_MEDICO_RESP_ATEND', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_MEDICO_SOLIC_PRESCR,1,4000), substr(NEW.IE_MEDICO_SOLIC_PRESCR,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_MEDICO_SOLIC_PRESCR', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_ATEND_COPIA,1,4000), substr(NEW.IE_ATEND_COPIA,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_ATEND_COPIA', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_ATEND_TRANSF,1,4000), substr(NEW.IE_ATEND_TRANSF,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_ATEND_TRANSF', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_MEDICO_REF_ATEND,1,4000), substr(NEW.IE_MEDICO_REF_ATEND,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_MEDICO_REF_ATEND', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_CLASSIF_ORIG_TRANSF,1,4000), substr(NEW.IE_CLASSIF_ORIG_TRANSF,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_CLASSIF_ORIG_TRANSF', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_SETOR_TRANSFERENCIA,1,4000), substr(NEW.IE_SETOR_TRANSFERENCIA,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_SETOR_TRANSFERENCIA', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_CAMPO_SENHA_TRANSF,1,4000), substr(NEW.IE_CAMPO_SENHA_TRANSF,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_CAMPO_SENHA_TRANSF', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_CAMPO_SENHA_COPIA,1,4000), substr(NEW.IE_CAMPO_SENHA_COPIA,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_CAMPO_SENHA_COPIA', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_MEDICO_EXEC_TRANSF,1,4000), substr(NEW.IE_MEDICO_EXEC_TRANSF,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_MEDICO_EXEC_TRANSF', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_MEDICO_EXEC_COPIA,1,4000), substr(NEW.IE_MEDICO_EXEC_COPIA,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_MEDICO_EXEC_COPIA', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_CAMPO_MEDICO_TRANSF,1,4000), substr(NEW.IE_CAMPO_MEDICO_TRANSF,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_CAMPO_MEDICO_TRANSF', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_CAMPO_MEDICO_COPIA,1,4000), substr(NEW.IE_CAMPO_MEDICO_COPIA,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_CAMPO_MEDICO_COPIA', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_CAMPO_SALA_COPIA,1,4000), substr(NEW.IE_CAMPO_SALA_COPIA,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_CAMPO_SALA_COPIA', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_CAMPO_SALA_TRANSF,1,4000), substr(NEW.IE_CAMPO_SALA_TRANSF,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_CAMPO_SALA_TRANSF', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_MEDICO_RESP_ATEND_SERVICO,1,4000), substr(NEW.IE_MEDICO_RESP_ATEND_SERVICO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_MEDICO_RESP_ATEND_SERVICO', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_CLASSIF_ORIG_COPIA,1,4000), substr(NEW.IE_CLASSIF_ORIG_COPIA,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_CLASSIF_ORIG_COPIA', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_SOBREPOSICAO_ENCAIXE,1,4000), substr(NEW.IE_SOBREPOSICAO_ENCAIXE,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_SOBREPOSICAO_ENCAIXE', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_EXCLUIR_SERVICO_PASSADO,1,4000), substr(NEW.IE_EXCLUIR_SERVICO_PASSADO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_EXCLUIR_SERVICO_PASSADO', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_EXCLUIR_EXAME_PASSADO,1,4000), substr(NEW.IE_EXCLUIR_EXAME_PASSADO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_EXCLUIR_EXAME_PASSADO', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_EXCLUIR_CONSULTA_PASSADO,1,4000), substr(NEW.IE_EXCLUIR_CONSULTA_PASSADO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_EXCLUIR_CONSULTA_PASSADO', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_ALTERA_STATUS_CONFIRMADA,1,4000), substr(NEW.IE_ALTERA_STATUS_CONFIRMADA,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_ALTERA_STATUS_CONFIRMADA', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_ESTABELECIMENTO,1,4000), substr(NEW.CD_ESTABELECIMENTO,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_ESTABELECIMENTO', ie_log_w, ds_w, 'PARAMETRO_AGENDA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;   exception when others then ds_w:= '1'; end;   END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_parametro_agenda_tp() FROM PUBLIC;

CREATE TRIGGER parametro_agenda_tp
	AFTER UPDATE ON parametro_agenda FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_parametro_agenda_tp();

