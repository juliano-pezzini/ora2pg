-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS evolucao_paciente_insert ON evolucao_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_evolucao_paciente_insert() RETURNS trigger AS $BODY$
DECLARE

dt_entrada_w			timestamp;
ie_medico_w			varchar(1);
cd_estabelecimento_w		smallint;
qt_hora_w			double precision;
qt_hora_med_w			double precision;
qt_hora_retroativa_w		double precision;
ie_gera_lancamento_w		varchar(1);
ie_regra_libera_evolucao_w	parametro_faturamento.ie_regra_libera_evolucao%type;
BEGIN

select 	coalesce(max('S'),'N')
into STRICT	ie_medico_w
from	Medico
where 	cd_pessoa_fisica	= NEW.cd_medico;

if (NEW.dt_evolucao > LOCALTIMESTAMP) and (NEW.nr_atendimento is not null) then
	--A data da evolução não pode ser maior que a data atual.#@#@');
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(262188);
end if;

if (NEW.nr_atendimento is not null) and (NEW.nr_atendimento > 0) then
	select	dt_entrada,
		cd_estabelecimento
	into STRICT	dt_entrada_w,
		cd_estabelecimento_w
	from	atendimento_paciente
	where	nr_atendimento	= NEW.nr_atendimento;
	qt_hora_retroativa_w		:= Obter_Valor_Param_Usuario(281,592,obter_Perfil_Ativo,NEW.nm_usuario,0);
	select	coalesce(max(coalesce((qt_hora_retroativa_w)::numeric ,qt_horas_passado_evo)),-1),
		coalesce(max(qt_horas_passado_evo_med),-1)
	into STRICT	qt_hora_w,
		qt_hora_med_w
	from	parametro_medico
	where	cd_estabelecimento	= cd_estabelecimento_w;

	if (qt_hora_w >= 0) and (ie_medico_w = 'N') and
		(NEW.dt_evolucao < (LOCALTIMESTAMP - qt_hora_w/24)) then
		--A data da evolução não pode ser menor que '|| to_char(qt_hora_w)||' hora(s) em relação a data atual.#@#@');
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(262189, 'QT_HORA='||to_char(qt_hora_w));
	end if;

	if (qt_hora_med_w >= 0) and (ie_medico_w = 'S') and
		(NEW.dt_evolucao < (LOCALTIMESTAMP - qt_hora_med_w/24)) then
		--A data da evolução não pode ser menor que '|| to_char(qt_hora_med_w)||' hora(s) em relação a data atual.#@#@');
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(262190, 'QT_HORA='||to_char(qt_hora_med_w));
	end if;

	if (dt_entrada_w > NEW.dt_evolucao) then
		--A data da evolução não pode ser menor que a data de entrada do atendimento.#@#@');
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(262191);
	end if;
end if;


select 	coalesce(max(ie_regra_libera_evolucao),'M')
into STRICT	ie_regra_libera_evolucao_w
from 	parametro_faturamento
where 	cd_estabelecimento = cd_estabelecimento_w;

if (coalesce(NEW.ie_evolucao_clinica,'0') <> '0') then

	select 	coalesce(max(ie_gera_lancto_auto),'N')
	into STRICT	ie_gera_lancamento_w
	from 	tipo_evolucao
	where 	cd_tipo_evolucao = NEW.ie_evolucao_clinica;
else
	ie_gera_lancamento_w:= 'N';
end if;
CALL wheb_usuario_pck.set_ie_commit('N');
if	((ie_regra_libera_evolucao_w = 'M' AND ie_medico_w = 'S') or
	 (ie_regra_libera_evolucao_w = 'R' AND ie_gera_lancamento_w = 'S')) then
	CALL gerar_lancamento_automatico(NEW.nr_atendimento, null, 12, NEW.nm_usuario, NEW.cd_evolucao, NEW.cd_medico,to_char(NEW.dt_evolucao,'dd/mm/yyyy hh24:mi:ss'), NEW.ie_evolucao_clinica, NEW.cd_medico_parecer, null);
end if;
CALL wheb_usuario_pck.set_ie_commit('S');

RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_evolucao_paciente_insert() FROM PUBLIC;

CREATE TRIGGER evolucao_paciente_insert
	AFTER INSERT ON evolucao_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_evolucao_paciente_insert();

