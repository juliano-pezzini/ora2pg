-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pls_camara_cal_periodo_after ON pls_camara_calend_periodo CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pls_camara_cal_periodo_after() RETURNS trigger AS $BODY$
declare

nr_camara_new_w		varchar(15);
nr_camara_old_w		varchar(15);

procedure inserir_log_periodo(	ie_opcao_p		text,
				nm_campo_p		text,
				vl_antigo_p		text,
				vl_novo_p		text) is

ds_historico_w		varchar(4000);
nr_camara_w		varchar(15);
nm_campo_w		varchar(200);
nr_seq_calendario_w	bigint;
BEGIN

nr_seq_calendario_w := NEW.nr_seq_calendario;

if (ie_opcao_p = 'I') then
	
	select 	CASE WHEN NEW.nr_camara=1 THEN 'Primeira' WHEN NEW.nr_camara=2 THEN 'Segunda' WHEN NEW.nr_camara=3 THEN 'Terceira' WHEN NEW.nr_camara=4 THEN 'Quarta' END
	into STRICT	nr_camara_w
	;
	
	ds_historico_w := wheb_mensagem_pck.get_texto(1111919, 	'NR_MES=' 	|| substr(obter_mes_extenso(NEW.nr_mes,'C'),1,50) 	|| ';' || 							
								'NR_CAMARA=' 	|| nr_camara_w);
	
elsif (ie_opcao_p = 'U') then

	select 	coalesce(ds_label, ds_label_grid)
	into STRICT	nm_campo_w
	from	tabela_atributo
	where 	nm_tabela = 'PLS_CAMARA_CALEND_PERIODO'
	and	nm_atributo = nm_campo_p;

	ds_historico_w := wheb_mensagem_pck.get_texto(1111920, 	'NR_MES=' 	|| substr(obter_mes_extenso(NEW.nr_mes,'C'),1,50) 	|| ';' ||
								'NM_CAMPO=' 	|| nm_campo_w 						|| ';' ||
								'VL_ANTIGO=' 	|| coalesce(vl_antigo_p, 'null') 				|| ';' || 								
								'VL_NOVO=' 	|| coalesce(vl_novo_p, 'null'));
elsif (ie_opcao_p = 'D') then

	nr_seq_calendario_w := OLD.nr_seq_calendario;

	select 	CASE WHEN OLD.nr_camara=1 THEN 'Primeira' WHEN OLD.nr_camara=2 THEN 'Segunda' WHEN OLD.nr_camara=3 THEN 'Terceira' WHEN OLD.nr_camara=4 THEN 'Quarta' END
	into STRICT	nr_camara_w
	;

	ds_historico_w := wheb_mensagem_pck.get_texto(1111921, 	'NR_MES=' 	|| substr(obter_mes_extenso(OLD.nr_mes,'C'),1,50) 	|| ';' || 							
								'NR_CAMARA=' 	|| nr_camara_w);
end if;

insert into pls_hist_camara_calend(nr_sequencia,
	cd_estabelecimento,
	ds_historico,
	dt_atualizacao,
	dt_atualizacao_nrec,
	nm_usuario,
	nm_usuario_nrec,
	nm_tabela,
	nr_seq_camara_calend)
values (nextval('pls_hist_camara_calend_seq'),
	wheb_usuario_pck.get_cd_estabelecimento,
	ds_historico_w,
	LOCALTIMESTAMP,
	LOCALTIMESTAMP,
	wheb_usuario_pck.get_nm_usuario,
	wheb_usuario_pck.get_nm_usuario,
	'PLS_CAMARA_CALEND_PERIODO',
	nr_seq_calendario_w);
		
end;

BEGIN

if (TG_OP = 'INSERT') then

	inserir_log_periodo('I', '','','');
	
elsif (TG_OP = 'UPDATE') then

	if (coalesce(NEW.NR_MES,0) <> coalesce(OLD.NR_MES,0)) then
		inserir_log_periodo('U', 'NR_MES', OLD.NR_MES, NEW.NR_MES);
	end if;

	if (coalesce(NEW.NR_CAMARA, 0) <>  coalesce(OLD.NR_CAMARA, 0)) then
	
		select 	CASE WHEN OLD.nr_camara=1 THEN 'Primeira' WHEN OLD.nr_camara=2 THEN 'Segunda' WHEN OLD.nr_camara=3 THEN 'Terceira' WHEN OLD.nr_camara=4 THEN 'Quarta' END ,
			CASE WHEN NEW.nr_camara=1 THEN 'Primeira' WHEN NEW.nr_camara=2 THEN 'Segunda' WHEN NEW.nr_camara=3 THEN 'Terceira' WHEN NEW.nr_camara=4 THEN 'Quarta' END
		into STRICT	nr_camara_old_w,
			nr_camara_new_w
		;
	
		inserir_log_periodo('U', 'NR_CAMARA', nr_camara_old_w, nr_camara_new_w);
	end if;

	if (coalesce(NEW.DT_LIMITE_A600, LOCALTIMESTAMP) <>  coalesce(OLD.DT_LIMITE_A600, LOCALTIMESTAMP)) then
		inserir_log_periodo('U', 'DT_LIMITE_A600', to_char(OLD.DT_LIMITE_A600,'dd/mm/rrrr'), to_char(NEW.DT_LIMITE_A600,'dd/mm/rrrr'));
	end if;

	if (coalesce(NEW.DT_LIMITE_A500, LOCALTIMESTAMP) <>  coalesce(OLD.DT_LIMITE_A500, LOCALTIMESTAMP)) then
		inserir_log_periodo('U', 'DT_LIMITE_A500', to_char(OLD.DT_LIMITE_A500,'dd/mm/rrrr'), to_char(NEW.DT_LIMITE_A500,'dd/mm/rrrr'));
	end if;

	if (coalesce(NEW.DT_PREVIA, LOCALTIMESTAMP) <>  coalesce(OLD.DT_PREVIA, LOCALTIMESTAMP)) then
		inserir_log_periodo('U', 'DT_PREVIA', to_char(OLD.DT_PREVIA,'dd/mm/rrrr'), to_char(NEW.DT_PREVIA,'dd/mm/rrrr'));
	end if;

	if (coalesce(NEW.DT_LIMITE_REC_DOC, LOCALTIMESTAMP) <>  coalesce(OLD.DT_LIMITE_REC_DOC, LOCALTIMESTAMP)) then
		inserir_log_periodo('U', 'DT_LIMITE_REC_DOC', to_char(OLD.DT_LIMITE_REC_DOC,'dd/mm/rrrr'), to_char(NEW.DT_LIMITE_REC_DOC,'dd/mm/rrrr'));
	end if;

	if (coalesce(NEW.DT_LIMITE_EXCLUSAO, LOCALTIMESTAMP) <>  coalesce(OLD.DT_LIMITE_EXCLUSAO, LOCALTIMESTAMP)) then
		inserir_log_periodo('U', 'DT_LIMITE_EXCLUSAO', to_char(OLD.DT_LIMITE_EXCLUSAO,'dd/mm/rrrr'), to_char(NEW.DT_LIMITE_EXCLUSAO,'dd/mm/rrrr'));
	end if;

	if (coalesce(NEW.DT_DEFINITIVO, LOCALTIMESTAMP) <>  coalesce(OLD.DT_DEFINITIVO, LOCALTIMESTAMP)) then
		inserir_log_periodo('U', 'DT_DEFINITIVO', to_char(OLD.DT_DEFINITIVO,'dd/mm/rrrr'), to_char(NEW.DT_DEFINITIVO,'dd/mm/rrrr'));
	end if;

	if (coalesce(NEW.DT_SALDO_DEVEDOR, LOCALTIMESTAMP) <>  coalesce(OLD.DT_SALDO_DEVEDOR, LOCALTIMESTAMP)) then
		inserir_log_periodo('U', 'DT_SALDO_DEVEDOR', to_char(OLD.DT_SALDO_DEVEDOR,'dd/mm/rrrr'), to_char(NEW.DT_SALDO_DEVEDOR,'dd/mm/rrrr'));
	end if;

	if (coalesce(NEW.DT_SALDO_CREDOR, LOCALTIMESTAMP) <>  coalesce(OLD.DT_SALDO_CREDOR, LOCALTIMESTAMP)) then
		inserir_log_periodo('U', 'DT_SALDO_CREDOR', to_char(OLD.DT_SALDO_CREDOR,'dd/mm/rrrr'), to_char(NEW.DT_SALDO_CREDOR,'dd/mm/rrrr'));
	end if;

	if (coalesce(NEW.DT_LIMITE_A550, LOCALTIMESTAMP) <>  coalesce(OLD.DT_LIMITE_A550, LOCALTIMESTAMP)) then
		inserir_log_periodo('U', 'DT_LIMITE_A550', to_char(OLD.DT_LIMITE_A550,'dd/mm/rrrr'), to_char(NEW.DT_LIMITE_A550,'dd/mm/rrrr'));
	end if;
	
	if (coalesce(NEW.DT_REPASSE, LOCALTIMESTAMP) <>  coalesce(OLD.DT_REPASSE, LOCALTIMESTAMP)) then
		inserir_log_periodo('U', 'DT_REPASSE', to_char(OLD.DT_REPASSE,'dd/mm/rrrr'), to_char(NEW.DT_REPASSE,'dd/mm/rrrr'));
	end if;

	if (coalesce(NEW.DT_LIMITE_CANC_A550, LOCALTIMESTAMP) <>  coalesce(OLD.DT_LIMITE_CANC_A550, LOCALTIMESTAMP)) then
		inserir_log_periodo('U', 'DT_LIMITE_CANC_A550', to_char(OLD.DT_LIMITE_CANC_A550,'dd/mm/rrrr'), to_char(NEW.DT_LIMITE_CANC_A550,'dd/mm/rrrr'));
	end if;
	
elsif (TG_OP = 'DELETE') then

	inserir_log_periodo('D', '','','');
end if;
	
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pls_camara_cal_periodo_after() FROM PUBLIC;

CREATE TRIGGER pls_camara_cal_periodo_after
	AFTER INSERT OR UPDATE OR DELETE ON pls_camara_calend_periodo FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pls_camara_cal_periodo_after();

