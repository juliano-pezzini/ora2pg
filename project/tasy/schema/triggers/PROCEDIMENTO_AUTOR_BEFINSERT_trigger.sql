-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS procedimento_autor_befinsert ON procedimento_autorizado CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_procedimento_autor_befinsert() RETURNS trigger AS $BODY$
DECLARE

ie_tipo_atendimento_w	smallint;
cd_proc_convenio_w	varchar(20)	:= '';
cd_grupo_w		varchar(10)	:= '';
nr_seq_conversao_w	bigint;
nr_seq_agenda_consulta_w		autorizacao_convenio.nr_seq_agenda_consulta%type;
nr_atendimento_w	bigint;
cd_convenio_w		integer;
cd_plano_w		varchar(10)	:= '';	
ie_clinica_w		integer;
cd_tipo_acomod_conv_w	smallint;
cd_procedimento_tuss_w	bigint;
ie_origem_proc_tuss_w	bigint;
cd_estabelecimento_w	bigint;
ie_proc_tuss_autor_w	varchar(5);
nr_seq_agenda_w					autorizacao_convenio.nr_seq_agenda%type;
qt_idade_w		bigint;
cd_pessoa_fisica_w	varchar(10);
ie_sexo_w		varchar(1);
cd_empresa_ref_w	bigint;
ie_carater_inter_sus_w	varchar(2);
ie_gerar_historico_w	varchar(15);
cd_estab_autor_w	estabelecimento.cd_estabelecimento%type;
cd_categoria_w		categoria_convenio.cd_categoria%type;
ds_proc_convenio_w	procedimento_autorizado.ds_proc_convenio%type;
qt_bonus_w procedimento_autorizado.qt_bonus%type;
qt_bonus_apres_w procedimento_autorizado.qt_bonus_apres%type;
ds_locale_arg_s		varchar(5) := 'es_AR';
BEGIN
  BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger = 'S' or PKG_I18N.GET_USER_LOCALE <> ds_locale_arg_s) then
	ie_gerar_historico_w := obter_param_usuario(3004, 139, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.Get_cd_estabelecimento, ie_gerar_historico_w);
	/* OS 51884 - Gravar proc convenio */


	select	a.cd_convenio,
		a.nr_atendimento,
		a.nr_seq_agenda,
		a.cd_estabelecimento,
		b.cd_categoria,
		a.nr_seq_agenda_consulta
	into STRICT	cd_convenio_w,
		nr_atendimento_w,
		nr_seq_agenda_w,
		cd_estab_autor_w,
		cd_categoria_w,
		nr_seq_agenda_consulta_w
	FROM autorizacao_convenio a
LEFT OUTER JOIN autorizacao_convenio_tiss b ON (a.nr_sequencia = b.nr_sequencia_autor)
WHERE a.nr_sequencia	= NEW.nr_sequencia_autor;


	if (nr_atendimento_w is not null) then

		BEGIN
		select	a.ie_tipo_atendimento,
			a.ie_clinica,
			c.cd_plano_convenio,
			c.CD_EMPRESA,
			c.cd_categoria,
			c.cd_tipo_acomodacao,
			a.cd_pessoa_fisica,
			a.ie_carater_inter_sus,
			p.ie_sexo,
			obter_idade(p.dt_nascimento, coalesce(p.dt_obito,LOCALTIMESTAMP),'DIA'),
			a.cd_estabelecimento
		into STRICT	ie_tipo_atendimento_w,
			ie_clinica_w,
			cd_plano_w,
			cd_empresa_ref_w,
			cd_categoria_w,
			cd_tipo_acomod_conv_w,
			cd_pessoa_fisica_w,
			ie_carater_inter_sus_w,
			ie_sexo_w,
			qt_idade_w,
			cd_estabelecimento_w
		from	atendimento_paciente a,
			atend_categoria_convenio c,
			pessoa_fisica p
		where	a.nr_atendimento	= nr_atendimento_w
		and	a.nr_atendimento	= c.nr_atendimento
		and	p.cd_pessoa_fisica	= a.cd_pessoa_fisica
		and	c.nr_seq_interno	= obter_atecaco_atendimento(a.nr_atendimento);
		exception
		when others then
			ie_tipo_atendimento_w 	:= null;
			ie_clinica_w 		:= null;
			cd_plano_w 		:= null;
			cd_empresa_ref_w 	:= null;
			cd_categoria_w 		:= null;
			cd_tipo_acomod_conv_w	:= null;
			cd_pessoa_fisica_w	:= null;
			ie_carater_inter_sus_w	:= null;
			ie_sexo_w		:= null;
			qt_idade_w		:= 0;
		end;

		select 	max(coalesce(ie_proc_tuss_autor,'S'))
		into STRICT 	ie_proc_tuss_autor_w
		from 	convenio_estabelecimento
		where 	cd_estabelecimento 	= cd_estabelecimento_w
		and 	cd_convenio		= cd_convenio_w;

	elsif (nr_seq_agenda_w is not null) then

		BEGIN
		select 	a.cd_estabelecimento,
				b.cd_categoria,
				b.ie_tipo_atendimento,
				b.ie_clinica
		into STRICT 	cd_estabelecimento_w,
				cd_categoria_w,
				ie_tipo_atendimento_w,
				ie_clinica_w
		from 	agenda a,
				agenda_paciente b
		where 	a.cd_agenda 	= b.cd_agenda
		and  	b.nr_sequencia 	= nr_seq_agenda_w;
		exception
		when others then
				cd_estabelecimento_w := null;
				cd_categoria_w := null;
				ie_tipo_atendimento_w := null;
				ie_clinica_w := null;	
		end;
		
		select 	max(coalesce(ie_proc_tuss_autor,'S'))
		into STRICT 	ie_proc_tuss_autor_w
		from 	convenio_estabelecimento
		where 	cd_estabelecimento 	= cd_estabelecimento_w
		and 	cd_convenio		= cd_convenio_w;	
		
	elsif (nr_seq_agenda_consulta_w is not null) then
		
		BEGIN
		select 	a.ie_tipo_atendimento,
				a.cd_categoria,
				obter_estab_agenda(a.cd_agenda),
				a.cd_tipo_acomodacao,
				a.cd_pessoa_fisica
		into STRICT 	ie_tipo_atendimento_w,
				cd_categoria_w,
				cd_estabelecimento_w,
				cd_tipo_acomod_conv_w,
				cd_pessoa_fisica_w
		from 	agenda_consulta a
		where 	a.nr_sequencia 	= nr_seq_agenda_consulta_w;
		exception
		when others then
				ie_tipo_atendimento_w := null;
				cd_categoria_w := null;
				cd_estabelecimento_w := null;
				cd_tipo_acomod_conv_w := null;
				cd_pessoa_fisica_w := null;
		end;
		
	end if;

	if (NEW.cd_procedimento is not null) then

		SELECT * FROM converte_proc_convenio(	coalesce(cd_estab_autor_w,cd_estabelecimento_w), cd_convenio_w, cd_categoria_w, NEW.cd_procedimento, NEW.ie_origem_proced, null, null, ie_tipo_atendimento_w, LOCALTIMESTAMP, cd_proc_convenio_w, cd_grupo_w, nr_seq_conversao_w, null, null, NEW.nr_seq_proc_interno, 'A', cd_plano_w, ie_clinica_w, 0, null, cd_tipo_acomod_conv_w, qt_idade_w, ie_sexo_w, cd_empresa_ref_w, ie_carater_inter_sus_w, 0, null, null, null) INTO STRICT cd_proc_convenio_w, cd_grupo_w, nr_seq_conversao_w;
	end if;

	/* lhalves OS201957 17/03/2010 - Gerar codigo do procedimento TUSS */


	if (coalesce(ie_proc_tuss_autor_w,'S') = 'S' and PKG_I18N.GET_USER_LOCALE <> ds_locale_arg_s) then

		if (NEW.nr_seq_proc_interno is not null) then			
			
			cd_procedimento_tuss_w:= Define_procedimento_TUSS(cd_estabelecimento_w,  NEW.nr_seq_proc_interno, cd_convenio_w, cd_categoria_w,ie_tipo_atendimento_w, LOCALTIMESTAMP, 0, 0, null, null, null);
			NEW.cd_procedimento_tuss	:= cd_procedimento_tuss_w;
		
		
		elsif (NEW.nr_seq_exame is not null) then
		

			cd_procedimento_tuss_w := define_proc_tuss_exame(NEW.nr_seq_exame, cd_convenio_w, cd_categoria_w, null,0);
			
			if (cd_procedimento_tuss_w > 0) then
				NEW.cd_procedimento_tuss := cd_procedimento_tuss_w;
			end if;
			
			if (coalesce(cd_procedimento_tuss_w,0) = 0) then
			
				select 	max(cd_procedimento_tuss)
				into STRICT	cd_procedimento_tuss_w
				from 	exame_laboratorio
				where 	nr_seq_exame = NEW.nr_seq_exame;
				
				if (coalesce(cd_procedimento_tuss_w,0) > 0) then
					NEW.cd_procedimento_tuss	:= cd_procedimento_tuss_w;
				end if;
			end if;
			
			
		end if;
			
	end if;


	if (coalesce(nr_seq_conversao_w,0) > 0) then
		select	coalesce(max(DS_PROC_CONVENIO),'0')
		into STRICT	ds_proc_convenio_w
		from	CONVERSAO_PROC_CONVENIO
		where	nr_sequencia = nr_seq_conversao_w;
		
		
		NEW.cd_procedimento_convenio	:= cd_proc_convenio_w;
		
		if (coalesce(ds_proc_convenio_w,'0') = '0') then
			NEW.DS_PROC_CONVENIO	:= null;
		else
			NEW.DS_PROC_CONVENIO	:= ds_proc_convenio_w;
		end if;
		
	end if;

  select	coalesce(max(qt_bonus), 0)
  into STRICT qt_bonus_w
  from	regra_convenio_plano
  where	cd_convenio = cd_convenio_w
  and		cd_procedimento = NEW.cd_procedimento
	and (nr_seq_proc_interno is null or nr_seq_proc_interno = coalesce(NEW.nr_seq_proc_interno, 0))
	and (ie_origem_proced is null or ie_origem_proced = coalesce(NEW.ie_origem_proced, 0));

  select	coalesce(max(qt_bonus_conv_apresentado), 0)
  into STRICT	qt_bonus_apres_w
  from	atend_categoria_convenio
  where	nr_seq_interno = obter_atecaco_atendimento(NEW.nr_atendimento);

	if (coalesce(ie_gerar_historico_w, 'N') = 'S') and (TG_OP = 'INSERT') then

		insert into autorizacao_convenio_hist(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_atendimento,
			ds_historico,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_sequencia_autor)
		values (
			nextval('autorizacao_convenio_hist_seq'),
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			NEW.nr_atendimento,
			--substr('Incluido procedimento na autorizacao ' || chr(13) || chr(10) ||

			substr(wheb_mensagem_pck.get_texto(311520) || chr(13) || chr(10) ||
			NEW.cd_procedimento || ' - ' || substr(obter_desc_prescr_proc(NEW.cd_procedimento,NEW.ie_origem_proced,NEW.nr_seq_proc_interno),1,255) || ' ' || chr(13) || chr(10) ||
			--'Qtde solicitada: ' || :new.qt_solicitada,1,4000),

			wheb_mensagem_pck.get_texto(311521) || NEW.qt_solicitada,1,4000),		
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			NEW.nr_sequencia_autor);
		
	end if;
end if;
  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_procedimento_autor_befinsert() FROM PUBLIC;

CREATE TRIGGER procedimento_autor_befinsert
	BEFORE INSERT OR UPDATE ON procedimento_autorizado FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_procedimento_autor_befinsert();

