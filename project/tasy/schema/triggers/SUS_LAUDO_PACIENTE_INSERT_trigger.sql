-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS sus_laudo_paciente_insert ON sus_laudo_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_sus_laudo_paciente_insert() RETURNS trigger AS $BODY$
declare
 
ie_diagnostico_w			varchar(1) := 'N';
cd_doenca_cid_w			varchar(10);
cd_cid_secundario_w		varchar(10);
nr_interno_conta_w			bigint;
qt_meses_val_laudo_w		smallint;
cd_estabelecimento_w		smallint;
ie_proc_sus_antigo_w		varchar(1);
ie_gerar_diag_w			varchar(1);
ie_gerar_diag_atend_atual_w		varchar(1);
cd_cid_atualizar_w			varchar(10);
cd_estab_ativo_w			integer;
nm_usuario_ativo_w		varchar(20);
ie_dt_emissao_dt_inicial_w		varchar(15) := 'N';
ie_tipo_laudo_apac_w		sus_procedimento.ie_tipo_laudo_apac%type;
cd_procedimento_solic_w 		sus_laudo_paciente.cd_procedimento_solic%type;
ie_origem_proced_w			sus_laudo_paciente.ie_origem_proced%type;
BEGIN
  BEGIN 
 
cd_estab_ativo_w		:= wheb_usuario_pck.get_cd_estabelecimento;
nm_usuario_ativo_w	:= wheb_usuario_pck.get_nm_usuario;
 
ie_gerar_diag_w := obter_param_usuario(916, 653, obter_perfil_ativo, nm_usuario_ativo_w, cd_estab_ativo_w, ie_gerar_diag_w);
ie_gerar_diag_atend_atual_w := obter_param_usuario(916, 654, obter_perfil_ativo, nm_usuario_ativo_w, cd_estab_ativo_w, ie_gerar_diag_atend_atual_w);
ie_dt_emissao_dt_inicial_w := obter_param_usuario(1124, 76, obter_perfil_ativo, nm_usuario_ativo_w, cd_estab_ativo_w, ie_dt_emissao_dt_inicial_w);
 
select	max(cd_estabelecimento) 
into STRICT	cd_estabelecimento_w 
from	atendimento_paciente 
where	nr_atendimento	= NEW.nr_atendimento;
 
select	coalesce(max(ie_proc_sus_antigo),'N') 
into STRICT	ie_proc_sus_antigo_w 
from	parametro_faturamento 
where	cd_estabelecimento	= cd_estabelecimento_w;
 
if (ie_proc_sus_antigo_w = 'S') and (NEW.ie_origem_proced in (2,3)) then 
	BEGIN 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(187969);
	/* Este procedimento não pode ser lançado pois é de origem antiga do SUS. */
 
	end;
end if;
 
select	coalesce(max('S'),'N') 
into STRICT	ie_diagnostico_w 
from	diagnostico_medico 
where	nr_atendimento 	= NEW.nr_atendimento 
 and	ie_tipo_diagnostico 	= 2;
 
if (NEW.dt_fim_val_apac is null) then 
	select	coalesce(max(b.qt_meses_val_laudo - 1),0) 
	into STRICT	qt_meses_val_laudo_w 
	from	parametro_medico b, 
		atendimento_paciente a 
	where	a.cd_estabelecimento	= b.cd_estabelecimento 
	and	a.nr_atendimento	= NEW.nr_atendimento;
 
	if (qt_meses_val_laudo_w	> 0) then 
		if (NEW.dt_inicio_val_apac is null) then 
			BEGIN 
			if (ie_dt_emissao_dt_inicial_w = 'S') then 
				NEW.dt_inicio_val_apac 	:= NEW.dt_emissao;
			else 
				NEW.dt_inicio_val_apac	:= LOCALTIMESTAMP;
			end if;
			end;
		end if;
		if (NEW.dt_fim_val_apac is null) then 
			NEW.dt_fim_val_apac	:= last_day(add_months(NEW.dt_emissao,qt_meses_val_laudo_w));
		end if;
	end if;
end if;
 
if (obter_funcao_ativa = 916) 
and (ie_gerar_diag_atend_atual_w = 'S') then 
	select	max(cd_doenca) 
	into STRICT	cd_cid_atualizar_w 
	from	diagnostico_doenca 
	where	nr_atendimento 	= NEW.nr_atendimento 
	and	dt_diagnostico 	= (	SELECT	min(dt_diagnostico) 
					from	diagnostico_doenca 
					where	nr_atendimento = NEW.nr_atendimento);
 
	if (cd_cid_atualizar_w is not null) then 
		NEW.cd_cid_principal := cd_cid_atualizar_w;
	end if;
end if;
 
if (NEW.nr_atendimento is not null) and (NEW.cd_pessoa_fisica is null) then 
	BEGIN 
	NEW.cd_pessoa_fisica	:= obter_dados_atendimento(NEW.nr_atendimento,'CP');
	end;
end if;
 
if (NEW.ie_tipo_laudo_sus = 0) and (NEW.cd_procedimento_solic is not null) then 
 
	select	max(cd_doenca_cid), 
		max(cd_cid_secundario) 
	into STRICT	cd_doenca_cid_w, 
		cd_cid_secundario_w 
	from 	procedimento 
	where 	cd_procedimento 	= NEW.cd_procedimento_solic 
	and	ie_origem_proced	= NEW.ie_origem_proced;
 
	if	(obter_funcao_ativa <> 916 AND ie_diagnostico_w	= 'N') 
	or	(obter_funcao_ativa = 916 AND ie_gerar_diag_w = 'S') then 
		BEGIN 
		insert into diagnostico_medico( 
			nr_atendimento, dt_diagnostico, ie_tipo_diagnostico, 
			cd_medico, dt_atualizacao, nm_usuario, ds_diagnostico) 
		values ( 
			NEW.nr_atendimento, NEW.dt_emissao, 2, 
			NEW.cd_medico_requisitante, LOCALTIMESTAMP, NEW.nm_usuario, null);
		if (cd_doenca_cid_w is not null) then 
			insert into diagnostico_doenca( 
				nr_atendimento, dt_diagnostico, cd_doenca, dt_atualizacao, 
				nm_usuario, ds_diagnostico, ie_classificacao_doenca, IE_TIPO_DIAGNOSTICO) 
			values ( 
				NEW.nr_atendimento, NEW.dt_emissao, cd_doenca_cid_w, 
				LOCALTIMESTAMP, NEW.nm_usuario, null, 'P', 2);
		end if;
		if (cd_cid_secundario_w is not null) then 
			insert into diagnostico_doenca( 
				nr_atendimento, dt_diagnostico, cd_doenca, dt_atualizacao, 
				nm_usuario, ds_diagnostico, ie_classificacao_doenca, IE_TIPO_DIAGNOSTICO 
) 
			values ( 
				NEW.nr_atendimento, NEW.dt_emissao, cd_cid_secundario_w, LOCALTIMESTAMP, NEW.nm_usuario, null, 'S', 2);
		end if;
		exception 
			when others then 
				ie_diagnostico_w := 'S';
		end;
	end if;
end if;
 
/*if	(:new.nr_aih <> nvl(:old.nr_aih,0)) then 
	select	nvl(max(nr_interno_conta),null) 
	into	nr_interno_conta_w 
	from	sus_aih 
	where	nr_aih = :new.nr_aih; 
 
	:new.nr_interno_conta := nr_interno_conta_w; 
end if;*/
 
 
if	((NEW.nr_seq_aih is null) or (NEW.nr_seq_aih = 0)) and (NEW.nr_aih is not null) then 
	BEGIN 
	select	nr_sequencia 
	into STRICT	NEW.nr_seq_aih 
	from	sus_aih 
	where	nr_aih	= NEW.nr_aih;
	exception 
	when others then 
		NEW.nr_seq_aih := NEW.nr_seq_aih;
	end;
end if;
 
if (NEW.nr_apac is not null) then 
	NEW.ie_status_processo	:= 2;
end if;
 
if (NEW.ie_classificacao = 13) and (sus_obter_tiporeg_proc(NEW.cd_procedimento_solic,NEW.ie_origem_proced,'C',12) = 2) then 
	NEW.ie_classificacao := 15;
end if;
 
if (coalesce(NEW.ie_tipo_laudo_apac,0) = 0) and (coalesce(NEW.ie_classificacao,0) in (11,12,13,14)) then 
	BEGIN 
	 
	select	coalesce(max(ie_tipo_laudo_apac),'0') 
	into STRICT	ie_tipo_laudo_apac_w 
 	from	sus_procedimento 
	where	ie_origem_proced = NEW.ie_origem_proced 
	and	cd_procedimento = NEW.cd_procedimento_solic;
	 
	if (coalesce(ie_tipo_laudo_apac_w,'0') > '0') then 
		BEGIN 
		if (ie_tipo_laudo_apac_w = '01') then 
			NEW.ie_tipo_laudo_apac := 12;
		elsif (ie_tipo_laudo_apac_w = '02') then 
			NEW.ie_tipo_laudo_apac := 8;
		elsif (ie_tipo_laudo_apac_w = '03') then 
			NEW.ie_tipo_laudo_apac := 1;
		elsif (ie_tipo_laudo_apac_w = '04') then 
			NEW.ie_tipo_laudo_apac := 2;
		elsif (ie_tipo_laudo_apac_w = '06') then 
			NEW.ie_tipo_laudo_apac := 12;
		elsif (ie_tipo_laudo_apac_w = '07') then 
			NEW.ie_tipo_laudo_apac := 22;
		elsif (ie_tipo_laudo_apac_w = '10') then 
			NEW.ie_tipo_laudo_apac := 8;
		elsif (ie_tipo_laudo_apac_w = '12') then 
			NEW.ie_tipo_laudo_apac := 19;
		end if;		
		end;
	end if;
	end;
end if;
 
if (NEW.cd_procedimento_solic is null) and (NEW.nr_seq_proc_interno is not null) then 
	SELECT * FROM obter_proc_tab_interno(NEW.nr_seq_proc_interno, null, NEW.nr_atendimento, null, cd_procedimento_solic_w, ie_origem_proced_w) INTO STRICT cd_procedimento_solic_w, ie_origem_proced_w;
	if (cd_procedimento_solic_w is not null) then 
		NEW.cd_procedimento_solic := cd_procedimento_solic_w;
		NEW.ie_origem_proced := ie_origem_proced_w;
	end if;
end if;
 
  END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_sus_laudo_paciente_insert() FROM PUBLIC;

CREATE TRIGGER sus_laudo_paciente_insert
	BEFORE INSERT ON sus_laudo_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_sus_laudo_paciente_insert();

