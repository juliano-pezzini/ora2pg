-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS prescr_procedimento_aftupdate ON prescr_procedimento CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_prescr_procedimento_aftupdate() RETURNS trigger AS $BODY$
declare
reg_integracao_w	gerar_int_padrao.reg_integracao;
nr_seq_exame_w		prescr_procedimento.nr_seq_exame%type;
nr_atendimento_w	prescr_medica.nr_atendimento%type;
ie_anatomia_patologica_w exame_laboratorio.ie_anatomia_patologica%type;
cd_perfil_w					bigint;
cd_estabelecimento_w		bigint;

	procedure gerar_log_rastre_prescr is
		ds_alteracao_rastre_w		varchar(1800);	
	BEGIN
		if (obter_se_info_rastre_prescr('D', wheb_usuario_pck.get_nm_usuario, cd_perfil_w, cd_estabelecimento_w) = 'S') then
			if (coalesce(NEW.dt_prev_execucao, LOCALTIMESTAMP - interval '1 days') <> coalesce(OLD.dt_prev_execucao, LOCALTIMESTAMP - interval '1 days')) then
				ds_alteracao_rastre_w := substr(ds_alteracao_rastre_w || ' DT_PREV_EXECUCAO('
					|| coalesce(to_char(OLD.dt_prev_execucao, 'YYYY-MM-DD HH24:MI:SS'), '0') || '/' || coalesce(to_char(NEW.dt_prev_execucao, 'YYYY-MM-DD HH24:MI:SS'), '0')||'); ',1,1800);
			end if;

			if (ds_alteracao_rastre_w is not null) then
				ds_alteracao_rastre_w := substr('Rastreabilidade DT_PREV_EXECUCAO Alterações(old/new)= ' || 'NR_SEQUENCIA(' || NEW.nr_sequencia || ') ' || ds_alteracao_rastre_w
					|| ' FUNCAO('||to_char(wheb_usuario_pck.get_cd_funcao)||'); PERFIL('||to_char(cd_perfil_w)||')',1,1800);
				CALL gerar_log_prescricao(NEW.nr_prescricao, null, null, null, null, ds_alteracao_rastre_w, wheb_usuario_pck.get_nm_usuario, 70497, 'N');
			end if;
		end if;
	end;

BEGIN

cd_perfil_w				:= obter_perfil_ativo;
cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;

gerar_log_rastre_prescr;

if (NEW.dt_suspensao is not null) and (OLD.dt_suspensao is null) and (NEW.nr_seq_exame is not null) then	
	BEGIN
	select 	max(coalesce(ie_anatomia_patologica,'N'))
	into STRICT	ie_anatomia_patologica_w
	from 	exame_laboratorio
	where	nr_seq_exame = NEW.nr_seq_exame;
	
	if (ie_anatomia_patologica_w <> 'S') and (obter_qtd_exame_lab_pragma(NEW.nr_prescricao, NEW.nr_seq_interno) = 0) then
		BEGIN
		nr_atendimento_w := obter_valores_prescr_trigger(NEW.nr_prescricao,'A');
		
		select	max(ie_tipo_atendimento),
				max(obter_convenio_atendimento(nr_atendimento)),
				max(obter_categoria_atendimento(nr_atendimento))
		into STRICT	reg_integracao_w.ie_tipo_atendimento,
				reg_integracao_w.cd_convenio,
				reg_integracao_w.cd_categoria
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_w;

		reg_integracao_w.cd_estab_documento := coalesce(wheb_usuario_pck.get_cd_estabelecimento,0);
		reg_integracao_w.cd_procedimento 	:= NEW.cd_procedimento;
		reg_integracao_w.nr_seq_exame 		:= NEW.nr_seq_exame;
		reg_integracao_w := gerar_int_padrao.gravar_integracao('144', NEW.nr_prescricao, NEW.nm_usuario, reg_integracao_w);
		end;
	end if;
	end;
end if;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_prescr_procedimento_aftupdate() FROM PUBLIC;

CREATE TRIGGER prescr_procedimento_aftupdate
	AFTER UPDATE ON prescr_procedimento FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_prescr_procedimento_aftupdate();

