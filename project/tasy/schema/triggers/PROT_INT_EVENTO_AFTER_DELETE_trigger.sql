-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS prot_int_evento_after_delete ON protocolo_integrado_evento CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_prot_int_evento_after_delete() RETURNS trigger AS $BODY$
declare
    pragma autonomous_transaction;
    NR_SEQ_PROT_INT_W protocolo_integrado.NR_SEQUENCIA%TYPE;
BEGIN
    if (wheb_usuario_pck.get_ie_executar_trigger	= 'S')  then
        if (obtain_user_locale(wheb_usuario_pck.get_nm_usuario()) = 'ja_JP' ) THEN
            
            SELECT
                MAX(nr_seq_protocolo_integrado)
            INTO STRICT NR_SEQ_PROT_INT_W
            FROM protocolo_integrado_etapa a 
            WHERE
                a.NR_SEQUENCIA = OLD.NR_SEQ_ETAPA;

            IF (OLD.NR_SEQ_PLANO is not null) THEN
            
                CALL UPDATE_GQA_PENDENCIA_REGRA(OLD.NR_SEQ_PLANO,OLD.NR_SEQUENCIA,NR_SEQ_PROT_INT_W);

            END IF;
        END IF;
    END IF;
RETURN OLD;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_prot_int_evento_after_delete() FROM PUBLIC;

CREATE TRIGGER prot_int_evento_after_delete
	BEFORE DELETE ON protocolo_integrado_evento FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_prot_int_evento_after_delete();

