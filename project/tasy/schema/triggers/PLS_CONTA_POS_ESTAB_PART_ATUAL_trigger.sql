-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pls_conta_pos_estab_part_atual ON pls_conta_pos_estab_partic CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pls_conta_pos_estab_part_atual() RETURNS trigger AS $BODY$
declare

nr_seq_conta_w			pls_conta.nr_sequencia%type;
ie_parametro_w			pls_parametros.ie_calculo_pos_estab%type;
nr_contador_w			integer := 0;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type := coalesce(wheb_usuario_pck.get_cd_estabelecimento,obter_estabelecimento_ativo);
dt_referencia_w			timestamp := trunc(LOCALTIMESTAMP);
ie_cad_conta_medica_w		pls_controle_estab.ie_cad_conta_medica%type;

BEGIN
-- VERIFICAR SE A REGRA EST√Å PARA 'DEPENDE DA REGRA'
select	max(ie_calculo_pos_estab)
into STRICT	ie_parametro_w
from	pls_parametros
where	cd_estabelecimento = cd_estabelecimento_w;

select	coalesce(max(ie_cad_conta_medica),'N')
into STRICT	ie_cad_conta_medica_w
from	pls_controle_estab;

if (coalesce(ie_parametro_w,'C') = 'R') and (cd_estabelecimento_w is not null) then
	-- VERIFICAR SE EXISTE REGRA ATIVA ENTRE INICIO E FIM VIGENCIA DAS REGRAS CADASTRADAS.
	if (ie_cad_conta_medica_w = 'S') then
		select	count(1)
		into STRICT	nr_contador_w
		from	pls_regra_preco_pos_estab
		where	ie_situacao 		= 'A'
		and	cd_estabelecimento 	= cd_estabelecimento_w
		and	dt_referencia_w between trunc(coalesce(dt_inicio_vigencia, dt_referencia_w)) and coalesce(dt_fim_vigencia, LOCALTIMESTAMP);
	else
		select	count(1)
		into STRICT	nr_contador_w
		from	pls_regra_preco_pos_estab
		where	ie_situacao 		= 'A'
		and	dt_referencia_w between trunc(coalesce(dt_inicio_vigencia, dt_referencia_w)) and coalesce(dt_fim_vigencia, LOCALTIMESTAMP);
	end if;

	if (nr_contador_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(340424);
	end if;
end if;

if (NEW.vl_participante_pos < 0) or (NEW.vl_administracao < 0) then
	select	max(nr_seq_conta)
	into STRICT	nr_seq_conta_w
	from	pls_conta_pos_estabelecido
	where	nr_sequencia = NEW.nr_seq_conta_pos;

	CALL wheb_mensagem_pck.exibir_mensagem_abort( 283705, 'NR_SEQ_CONTA=' || nr_seq_conta_w || ';' || 'NR_SEQ_CONTA_POS=' || NEW.nr_seq_conta_pos );
end if;

RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pls_conta_pos_estab_part_atual() FROM PUBLIC;

CREATE TRIGGER pls_conta_pos_estab_part_atual
	BEFORE INSERT OR UPDATE ON pls_conta_pos_estab_partic FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pls_conta_pos_estab_part_atual();

