-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS escala_framingham_update ON escala_framingham CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_escala_framingham_update() RETURNS trigger AS $BODY$
declare
    EXEC_W          varchar(300);
    qt_pontuacao_w  smallint;
    ie_sexo_w       varchar(1);
    qt_risco_w 	    varchar(10);
    qt_reg_w	    smallint;
BEGIN
  BEGIN
    if (NEW.nr_hora is null) or (NEW.DT_AVALIACAO <> OLD.DT_AVALIACAO) then
        NEW.nr_hora	:= (to_char(round(NEW.DT_AVALIACAO,'hh24'),'hh24'))::numeric;
    end if;

    if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
        goto Final;
    end if;

    if (NEW.qt_idade < 20) or (NEW.qt_idade > 79) then
        CALL wheb_mensagem_pck.exibir_mensagem_abort(228324);
    end if;

    if (NEW.cd_pessoa_fisica is null) and (NEW.nr_atendimento is not null) then
        NEW.cd_pessoa_fisica := obter_pessoa_atendimento(NEW.nr_atendimento,'C');
    end if;

    select	obter_sexo_pf(NEW.cd_pessoa_fisica,'C')
    into STRICT	ie_sexo_w
;

    BEGIN
        EXEC_W := 'BEGIN OBTER_ESC_FRAMINGHAM_UPDAT_MD(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11); END; ';

        EXECUTE EXEC_W USING  IN ie_sexo_w, 
                                        IN NEW.IE_ESC_ORIGINAL, 
                                        IN NEW.qt_idade, 
                                        IN NEW.qt_colesterol, 
                                        IN NEW.ie_fumante, 
                                        IN NEW.qt_HDL, 
                                        IN NEW.ie_trat_pas,
                                        IN NEW.qt_pa_sistolica, 
                                        IN NEW.IE_DIABETES,  
                                        OUT qt_pontuacao_w, 
                                        OUT qt_risco_w;
    exception
        when others then
           qt_pontuacao_w := null;
           qt_risco_w     := null;
    end;

    NEW.qt_pontuacao := qt_pontuacao_w;
    NEW.qt_risco     := qt_risco_w;
<<Final>>
qt_reg_w	:= 0;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_escala_framingham_update() FROM PUBLIC;

CREATE TRIGGER escala_framingham_update
	BEFORE INSERT OR UPDATE ON escala_framingham FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_escala_framingham_update();

