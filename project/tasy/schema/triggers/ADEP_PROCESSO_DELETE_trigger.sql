-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS adep_processo_delete ON adep_processo CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_adep_processo_delete() RETURNS trigger AS $BODY$
declare
ds_log_w            log_tasy.ds_log%type;
pragma autonomous_transaction;

c01 CURSOR FOR
SELECT  a.nr_sequencia,
        a.nr_seq_material, 
        a.nr_seq_solucao, 
        to_char(a.dt_horario, 'dd/mm/yyyy hh24:mi:ss') dt_horario,
        a.nr_prescricao, 
        a.nr_seq_processo, 
        a.ie_agrupador,
        to_char(a.dt_atualizacao, 'dd/mm/yyyy hh24:mi:ss') dt_atualizacao
from    prescr_mat_hor a
where   a.nr_seq_processo = OLD.nr_sequencia;

BEGIN

ds_log_w := substr('(OLD\NEW)' || chr(10) ||
            'Processo: '        || OLD.nr_sequencia    || ' \ ' || NEW.nr_sequencia ||chr(10) ||
            'Prescr: '          || OLD.nr_prescricao   || ' \ ' || NEW.nr_prescricao || chr(10) ||
            'Seq Sol: '         || OLD.nr_seq_solucao  || ' \ ' || OLD.nr_seq_solucao || chr(10) ||
            'Seq Hor: '         || OLD.nr_seq_horario  || ' \ ' || OLD.nr_seq_horario || chr(10) ||
            'Seq Mat: '         || OLD.nr_seq_material || ' \ ' || OLD.nr_seq_material || chr(10) ||
            'Etapa: '           || OLD.nr_etapa        || ' \ ' || OLD.nr_etapa || chr(10) ||
            'Atendimento: '     || OLD.nr_atendimento  || ' \ ' || OLD.nr_atendimento || chr(10) ||
            'Dt Atualizacao: '  || to_char(OLD.dt_atualizacao, 'dd/mm/yyyy hh24:mi:ss')  || ' \ ' || to_char(OLD.dt_atualizacao, 'dd/mm/yyyy hh24:mi:ss') || chr(10) ||
            'Dt Processo: '     || to_char(OLD.dt_processo, 'dd/mm/yyyy hh24:mi:ss')     || ' \ ' || to_char(OLD.dt_processo, 'dd/mm/yyyy hh24:mi:ss') || chr(10) ||
            'Stack: '           || substr(dbms_utility.format_call_stack,1,1500),1,2000);

CALL gravar_log_tasy(896, substr(ds_log_w,1,2000), OLD.nm_usuario);
commit;

for c01_w in c01
loop

ds_log_w := substr('Seq Hor: '         || c01_w.nr_sequencia || chr(10) ||
            'Seq Mat: '         || c01_w.nr_seq_material || chr(10) ||
            'Seq Sol: '         || c01_w.nr_seq_solucao || chr(10) ||
            'Dt_horario: '      || c01_w.dt_horario || chr(10) ||
            'Prescr: '          || c01_w.nr_prescricao || chr(10) ||
            'Processo: '        || c01_w.nr_seq_processo || chr(10) ||
            'Ie_agrupador: '    || c01_w.ie_agrupador || chr(10) ||
            'Dt Atualizacao: '  || c01_w.dt_atualizacao,1,2000);

CALL gravar_log_tasy(897, substr(ds_log_w,1,2000), OLD.nm_usuario);
commit;

end loop;

RETURN OLD;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_adep_processo_delete() FROM PUBLIC;

CREATE TRIGGER adep_processo_delete
	BEFORE DELETE ON adep_processo FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_adep_processo_delete();

