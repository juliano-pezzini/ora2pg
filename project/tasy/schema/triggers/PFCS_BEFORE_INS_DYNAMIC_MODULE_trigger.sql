-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pfcs_before_ins_dynamic_module ON pfcs_dynamic_module CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pfcs_before_ins_dynamic_module() RETURNS trigger AS $BODY$
DECLARE
ie_wheb_w               smallint := PFCS_PCK_CONSTANTS.IE_TRUE;
nr_seq_dynamic_w        pfcs_dynamic_module.nr_sequencia%type;

BEGIN
    if (coalesce(wheb_usuario_pck.get_ie_executar_trigger, PFCS_PCK_CONSTANTS.IE_YES_BR) = PFCS_PCK_CONSTANTS.IE_YES_BR)  then
        select  case check_philips_database()
                    when PFCS_PCK_CONSTANTS.IE_YES_BR then PFCS_PCK_CONSTANTS.IE_TRUE
                    else PFCS_PCK_CONSTANTS.IE_FALSE
                end
        into STRICT    ie_wheb_w
;

        if (ie_wheb_w = PFCS_PCK_CONSTANTS.IE_FALSE) then
            select  coalesce(min(m.nr_sequencia) - 1, 9999999999)
            into STRICT    nr_seq_dynamic_w
            from    pfcs_dynamic_module m
            where   nr_sequencia > 99999;

            NEW.nr_sequencia := nr_seq_dynamic_w;
        end if;
    end if;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pfcs_before_ins_dynamic_module() FROM PUBLIC;

CREATE TRIGGER pfcs_before_ins_dynamic_module
	BEFORE INSERT ON pfcs_dynamic_module FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pfcs_before_ins_dynamic_module();

