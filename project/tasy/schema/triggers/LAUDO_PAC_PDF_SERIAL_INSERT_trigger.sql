-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS laudo_pac_pdf_serial_insert ON laudo_paciente_pdf_serial CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_laudo_pac_pdf_serial_insert() RETURNS trigger AS $BODY$
declare

acao_w                 varchar(11);
total_err_w            smallint;
qt_reg_w		       smallint;
nr_seq_laudo_w         bigint;
nr_prescricao_w        bigint;
nr_seq_prescricao_w    integer;
nm_usuario_liberacao_w varchar(15);

c01 CURSOR FOR
SELECT nr_prescricao, nr_seq_prescricao, nm_usuario_liberacao
  from laudo_paciente
 where nr_sequencia = nr_seq_laudo_w;

BEGIN
  if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
    Goto Final;
  end if;

  nr_seq_laudo_w := NEW.nr_seq_laudo;

  If ((Wheb_Usuario_Pck.Is_Evento_Ativo(766) = 'S') and (NEW.ds_complemento = 'PEPUNIMEDW')) Then
    OPEN c01;
      LOOP
        FETCH c01 INTO
          nr_prescricao_w,
          nr_seq_prescricao_w,
          nm_usuario_liberacao_w;
        EXIT WHEN NOT FOUND; /* apply on c01 */
        BEGIN
          If (nm_usuario_liberacao_w is not null) Then
              acao_w := 'Registro';

              select count(1) 
                into STRICT total_err_w 
                from prescr_proced_info_ext 
               where cd_mensagem_ext = 'PEPUNIMEDW'
                 and nr_prescricao = nr_prescricao_w
                 and nr_seq_prescr = nr_seq_prescricao_w;

              if (total_err_w > 0) then
                  delete from prescr_proced_info_ext
                   where cd_mensagem_ext = 'PEPUNIMEDW'
                     and nr_prescricao = nr_prescricao_w
                     and nr_seq_prescr = nr_seq_prescricao_w;
              end if;

              CALL Integrar_Unimed_Rs_Ws(766, nr_prescricao_w, nr_seq_prescricao_w, nm_usuario_liberacao_w, Acao_W);
          End If;
        END;
      END LOOP;
    CLOSE c01;
  End If;

<<Final>>
qt_reg_w	:= 0;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_laudo_pac_pdf_serial_insert() FROM PUBLIC;

CREATE TRIGGER laudo_pac_pdf_serial_insert
	AFTER INSERT ON laudo_paciente_pdf_serial FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_laudo_pac_pdf_serial_insert();

