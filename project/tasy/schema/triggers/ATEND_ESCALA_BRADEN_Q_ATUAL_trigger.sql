-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS atend_escala_braden_q_atual ON atend_escala_braden_q CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_atend_escala_braden_q_atual() RETURNS trigger AS $BODY$
declare
ds_sql_w           varchar(4000);
qt_reg_w         smallint;
qt_ponto_w       smallint;
ds_erro_w        varchar(4000);
ds_parametros_w  varchar(4000);
BEGIN
  BEGIN
    if ( NEW.nr_hora is null ) or ( NEW.dt_avaliacao <> OLD.dt_avaliacao ) then
        NEW.nr_hora := (to_char(round(NEW.dt_avaliacao, 'hh24'), 'hh24'))::numeric;
    end if;

    if ( wheb_usuario_pck.get_ie_executar_trigger = 'N' ) then
        goto final;
    end if;
    BEGIN
        ds_sql_w := 'call obter_score_escala_brad_q_md(:1,:2,:3,:4,:5,:6,:7) into :result';
        EXECUTE ds_sql_w using in NEW.ie_percepcao_sensorial,
									   in NEW.ie_umidade, 
									   in NEW.ie_atividade_fisica, 
									   in NEW.ie_mobilidade, 
									   in NEW.ie_nutricao, 
									   in NEW.ie_friccao_cisalhamento, 
									   in NEW.ie_perfusao, 
									   out qt_ponto_w;

    exception
        when others then
            ds_erro_w := substr(sqlerrm,1,4000);
            ds_parametros_w := substr(':new.nr_atendimento: '||NEW.nr_atendimento||'-new.ie_percepcao_sensorial: '||NEW.ie_percepcao_sensorial||'-new.ie_umidade: '||NEW.ie_umidade||'-:new.ie_atividade_fisica: '||NEW.ie_atividade_fisica||
								'-:new.ie_mobilidade: '||NEW.ie_mobilidade||'-:new.ie_nutricao: '||NEW.ie_nutricao||'-:new.ie_friccao_cisalhamento: '||NEW.ie_friccao_cisalhamento||'-:new.ie_perfusao: '||NEW.ie_perfusao|| 
								'-qt_ponto_w: '|| qt_ponto_w,1,4000);
            CALL gravar_log_medical_device('ATEND_ESCALA_BRADEN_Q_ATUAL', 'OBTER_SCORE_ESCALA_BRAD_Q_MD', ds_parametros_w, ds_erro_w, NEW.nm_usuario, 'N');
    end;
	
	NEW.qt_ponto := coalesce(qt_ponto_w, 0);

    << final >>
	
	qt_reg_w := 0;
  END;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_atend_escala_braden_q_atual() FROM PUBLIC;

CREATE TRIGGER atend_escala_braden_q_atual
	BEFORE INSERT OR UPDATE ON atend_escala_braden_q FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_atend_escala_braden_q_atual();

