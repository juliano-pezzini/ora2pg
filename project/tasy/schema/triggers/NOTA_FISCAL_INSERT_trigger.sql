-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS nota_fiscal_insert ON nota_fiscal CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_nota_fiscal_insert() RETURNS trigger AS $BODY$
declare

nr_nota_fiscal_w		nota_fiscal.nr_nota_fiscal%type;
nr_seq_produto_w		produto_financeiro.nr_sequencia%type;
nr_seq_grupo_prod_w		grupo_prod_financ.nr_seq_grupo_sup%type;
ie_pais_w				valor_dominio.vl_dominio%type;
ie_operacao_fiscal_w	operacao_nota.ie_operacao_fiscal%type;
cd_natureza_operacao_w	natureza_operacao.cd_natureza_operacao%type;
cd_setor_digitacao_w	setor_atendimento.cd_setor_atendimento%type;
cd_cgc_scp_w			nota_fiscal.cd_cgc_emitente%type;		
ie_entrada_saida_w		operacao_estoque.ie_entrada_saida%type;
ie_recusa_w				operacao_nota.ie_recusa%type;
cd_operacao_estoque_w	operacao_nota.cd_operacao_estoque%type;
ie_considerar_dia_mes_w operacao_nota.ie_considerar_dia_mes%type;

nr_dia_limite_lanc_nota_w integer;

dt_util_limite_lanc_nota_w	timestamp;
count_w				bigint;
ie_status_w  bigint;

ie_meio_pagamento_w		nota_fiscal.ie_meio_pagamento%type;
ds_outro_meio_pagamento_w	nota_fiscal.ds_outro_meio_pagamento%type;

ie_nf_eletronica_w		operacao_nota.ie_nf_eletronica%type;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

if (TG_OP = 'INSERT') then
  NEW.ds_stack := substr(dbms_utility.format_call_stack,1,2000);
  select coalesce(max(ie_considerar_dia_mes),'N')	
    into STRICT ie_considerar_dia_mes_w
	  from operacao_nota
	 where cd_operacao_nf = NEW.cd_operacao_nf;
	
  if (ie_considerar_dia_mes_w = 'S') then
    nr_dia_limite_lanc_nota_w := obter_valor_param_usuario(40, 490, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento);

    dt_util_limite_lanc_nota_w:= 	obter_dia_util_mes(NEW.cd_estabelecimento, LOCALTIMESTAMP, nr_dia_limite_lanc_nota_w);

    if  ((coalesce(trunc(dt_util_limite_lanc_nota_w), trunc(LOCALTIMESTAMP)) < trunc(LOCALTIMESTAMP)) and (trunc(NEW.dt_emissao) < trunc(LOCALTIMESTAMP, 'mm'))) then
        CALL wheb_mensagem_pck.exibir_mensagem_abort(1075164);
    end if;
  end if;

	if (NEW.cd_cgc is null) and (NEW.cd_pessoa_fisica is null) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266257);
		--'Para emissao da nota tem que ter um CGC ou pessoa fisica informada');

	end if;

	if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
		cd_setor_digitacao_w := coalesce(wheb_usuario_pck.get_cd_setor_atendimento,obter_setor_usuario(NEW.nm_usuario));
		if (coalesce(cd_setor_digitacao_w,0) > 0) then
			NEW.cd_setor_digitacao := cd_setor_digitacao_w;
		end if;
	end if;

	if ('pt_BR' = coalesce(pkg_i18n.get_user_locale, 'pt_BR')) then
		BEGIN
			select	(NEW.nr_nota_fiscal)::numeric
			into STRICT	nr_nota_fiscal_w
			;

			NEW.nr_nota_fiscal := nr_nota_fiscal_w;

		exception when data_exception then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(266258);
			--'Nao e permitido informar caracteres alfanumericos no numero da nota fiscal.');

		end;
	end if;

	SELECT * FROM obter_produto_financeiro(NEW.cd_estabelecimento, null, null, nr_seq_produto_w, null, null, nr_seq_grupo_prod_w) INTO STRICT nr_seq_produto_w, nr_seq_grupo_prod_w;

	if (coalesce(nr_seq_grupo_prod_w,0) > 0) then
		NEW.nr_seq_grupo_prod := nr_seq_grupo_prod_w;
	end if;
	
	if (NEW.IE_TIPO_NOTA = 'EF') then
		NEW.cd_cgc := OBTER_CGC_ESTABELECIMENTO(NEW.cd_estabelecimento);
	end if;
	
	if (NEW.cd_estabelecimento is not null) and (NEW.ie_tipo_nota in ('SD', 'SE', 'SF', 'ST', 'EP')) then
		
		select 	max(cd_operacao_estoque),
				max(ie_recusa)
		into STRICT	cd_operacao_estoque_w,
				ie_recusa_w
		from 	operacao_nota
		where 	cd_operacao_nf = NEW.cd_operacao_nf;
		
		select 	max(ie_entrada_saida)
		into STRICT 	ie_entrada_saida_w
		from 	operacao_estoque
		where 	cd_operacao_estoque = cd_operacao_estoque_w;
										
		if (ie_entrada_saida_w = 'S') or (ie_recusa_w = 'S') then	
			
			select max(obter_cgc_estabelecimento(cd_estab_socio_ost_scp))
			into STRICT cd_cgc_scp_w
			from estabelecimento
			where cd_estabelecimento = NEW.cd_estabelecimento
			and ie_scp = 'S';
			
			if (cd_cgc_scp_w is not null) then
				NEW.cd_cgc_emitente := cd_cgc_scp_w;
			end if;
			
		end if;
	end if;
	
	
end if;

if (TG_OP = 'UPDATE') then
	if (OLD.dt_atualizacao_estoque is null
	    and NEW.dt_atualizacao_estoque is not null) then
		select 	count(*)
		into STRICT 	ie_status_w
		from 	NOTA_FISCAL_ITEM
		where 	NR_SEQUENCIA = NEW.nr_sequencia 
		and 	obter_bloq_canc_proj_rec(nr_seq_proj_rec) > 0  LIMIT 1;

		if (ie_status_w > 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1144309);
		end if;
	end if;
end if;

ie_pais_w	:=	coalesce(pkg_i18n.get_user_locale, 'pt_BR');

if (ie_pais_w = 'es_MX') then
	BEGIN
	BEGIN
	select	cd_natureza_operacao
	into STRICT	cd_natureza_operacao_w
	from	natureza_operacao
	where	cd_natureza_operacao = NEW.cd_natureza_operacao;
	exception
	when others then
		NEW.cd_natureza_operacao	:=	null;
	end;

	if (NEW.cd_operacao_nf > 0) and (coalesce(NEW.cd_natureza_operacao,0) = 0) then
		BEGIN
		select	coalesce(ie_operacao_fiscal,'E')
		into STRICT	ie_operacao_fiscal_w
		from	operacao_nota
		where	cd_operacao_nf = NEW.cd_operacao_nf;
		
		select	coalesce(max(cd_natureza_operacao),0)
		into STRICT	cd_natureza_operacao_w
		from	natureza_operacao
		where	ie_entrada_saida = ie_operacao_fiscal_w
		and	ie_situacao = 'A';
		
		if (cd_natureza_operacao_w = 0) then
		
			select	coalesce(max(cd_natureza_operacao),0) + 1
			into STRICT	cd_natureza_operacao_w
			from	natureza_operacao;
			
			insert into natureza_operacao(
				cd_natureza_operacao,
				ds_natureza_operacao,
				ie_entrada_saida,
				ie_situacao,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_transferencia_estab,
				ie_integra_contas_pagar,
				ie_integra_contas_receber)
			values(	cd_natureza_operacao_w,
				CASE WHEN ie_operacao_fiscal_w='S',WHEB_MENSAGEM_PCK.get_texto(312467), WHEB_MENSAGEM_PCK.get_texto(312468)),  --'Saida' THEN 'Entrada'				ie_operacao_fiscal_w WHEN ie_operacao_fiscal_w='A' THEN				LOCALTIMESTAMP WHEN ie_operacao_fiscal_w=NEW.nm_usuario THEN 				LOCALTIMESTAMP WHEN ie_operacao_fiscal_w=NEW.nm_usuario THEN 				'S' WHEN ie_operacao_fiscal_w='S' THEN 				'S' END;
		end if;
		
		NEW.cd_natureza_operacao := cd_natureza_operacao_w;		
		end;
	end if;
	end;
end if;

BEGIN
	select 	ie_nf_eletronica
	into STRICT	ie_nf_eletronica_w
	from 	operacao_nota
	where 	cd_operacao_nf = NEW.cd_operacao_nf;
	
exception
when no_data_found or too_many_rows then
	ie_nf_eletronica_w := null;
end;

if (TG_OP = 'INSERT' and (coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'pt_BR') and (NEW.ie_tipo_nota in ('SD','SE','SF','ST')) and (ie_nf_eletronica_w = 'V')
	and (NEW.ie_meio_pagamento is null) and (NEW.ds_outro_meio_pagamento is null)) then
	
	SELECT * FROM fis_get_means_of_payment(NEW.nr_interno_conta, NEW.nr_seq_protocolo, NEW.nr_seq_lote_prot, NEW.cd_cgc, NEW.cd_pessoa_fisica, NEW.cd_operacao_nf, ie_meio_pagamento_w, ds_outro_meio_pagamento_w) INTO STRICT ie_meio_pagamento_w, ds_outro_meio_pagamento_w;
	
	if (ie_meio_pagamento_w is not null) then
		NEW.ie_meio_pagamento := ie_meio_pagamento_w;
		NEW.ds_outro_meio_pagamento := ds_outro_meio_pagamento_w;
	end if;
	
end if;


CALL fis_refatoracao_nf_pck.fis_vinc_nf_cancel_rf(	NEW.nr_interno_conta,
						NEW.nr_seq_protocolo,
						NEW.nr_seq_far_venda,
						NEW.nr_sequencia);

<<Final>>
count_w	:= 0;

  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_nota_fiscal_insert() FROM PUBLIC;

CREATE TRIGGER nota_fiscal_insert
	BEFORE INSERT OR UPDATE ON nota_fiscal FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_nota_fiscal_insert();

