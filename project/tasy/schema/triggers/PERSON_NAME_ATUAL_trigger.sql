-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS person_name_atual ON person_name CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_person_name_atual() RETURNS trigger AS $BODY$
DECLARE
ie_param_10_w    varchar(1);
qt_caracter_w    bigint;
qt_regra_atrib_w bigint;
ds_locale_w      user_locale.ds_locale%type;
reg_integracao_p gerar_int_padrao.reg_integracao;
NR_PARAM_277_W   bigint;
nr_cpf_w pessoa_fisica.nr_cpf %type;
BEGIN
  BEGIN
  if (wheb_usuario_pck.get_ie_executar_trigger = 'S' ) then
    if (wheb_usuario_pck.get_cd_funcao in (-2,4,5,32,230)) then
      ie_param_10_w := Obter_Param_Usuario(5, 10, obter_perfil_ativo, NEW.nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 0), ie_param_10_w);
      NR_PARAM_277_W := coalesce(OBTER_SOMENTE_NUMERO(OBTER_VALOR_PARAM_USUARIO(5, 277, OBTER_PERFIL_ATIVO, NEW.NM_USUARIO, coalesce(WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, 0))), 0);

      ds_locale_w := obtain_user_locale(NEW.nm_usuario);

      NEW.ds_given_name := eliminar_caracter_esp_person(NEW.ds_given_name, ds_locale_w);
      NEW.ds_family_name := eliminar_caracter_esp_person(NEW.ds_family_name, ds_locale_w);
      NEW.ds_component_name_1 := eliminar_caracter_esp_person(NEW.ds_component_name_1, ds_locale_w);
      NEW.ds_component_name_2 := eliminar_caracter_esp_person(NEW.ds_component_name_2, ds_locale_w);
      NEW.ds_component_name_3 := eliminar_caracter_esp_person(NEW.ds_component_name_3, ds_locale_w);

      if (ie_param_10_w = 'S') then
        NEW.ds_given_name := INITCAP(NEW.ds_given_name);
        NEW.ds_family_name := INITCAP(NEW.ds_family_name);
        NEW.ds_component_name_1 := INITCAP(NEW.ds_component_name_1);
        NEW.ds_component_name_2 := INITCAP(NEW.ds_component_name_2);
        NEW.ds_component_name_3 := INITCAP(NEW.ds_component_name_3);
      elsif (ie_param_10_w = 'T') then
        NEW.ds_given_name := upper(NEW.ds_given_name);
        NEW.ds_family_name := upper(NEW.ds_family_name);
        NEW.ds_component_name_1 := upper(NEW.ds_component_name_1);
        NEW.ds_component_name_2 := upper(NEW.ds_component_name_2);
        NEW.ds_component_name_3 := upper(NEW.ds_component_name_3);
      end if;

	    select coalesce(length(NEW.ds_given_name),0)+coalesce(length(NEW.ds_family_name),0)+coalesce(length(NEW.ds_component_name_1),0)+coalesce(length(NEW.ds_component_name_2),0)+coalesce(length(NEW.ds_component_name_3),0)
        into STRICT  qt_caracter_w
;

      IF (NR_PARAM_277_W > 0
      AND QT_CARACTER_W > 0
      AND QT_CARACTER_W < NR_PARAM_277_W) THEN
        CALL WHEB_MENSAGEM_PCK.EXIBIR_MENSAGEM_ABORT(1112273);
      END IF;

      if (TG_OP = 'UPDATE') then
        BEGIN
        select  cd_pessoa_fisica,
          nr_prontuario,
          coalesce(ie_funcionario,'N'),
          nr_cpf
        into STRICT  reg_integracao_p.cd_pessoa_fisica,
          reg_integracao_p.nr_prontuario,
          reg_integracao_p.ie_funcionario,
          nr_cpf_w
        from  pessoa_fisica
        where  nr_seq_person_name = NEW.nr_sequencia;
        exception
        when others then
          reg_integracao_p.cd_pessoa_fisica  := null;
          reg_integracao_p.nr_prontuario    := null;
          reg_integracao_p.ie_funcionario    := null;
        end;

        reg_integracao_p.ie_operacao    := 'A';

        if nr_cpf_w is not null then
           reg_integracao_p.ie_possui_cpf := 'S';
        end if;

        SELECT CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'S' END 
          INTO STRICT reg_integracao_p.ie_pessoa_atend
          FROM pessoa_fisica_aux
         WHERE cd_pessoa_fisica = reg_integracao_p.cd_pessoa_fisica
           AND nr_primeiro_atend IS NOT NULL;

        if (wheb_usuario_pck.get_ie_lote_contabil = 'N') then
          reg_integracao_p := gerar_int_padrao.gravar_integracao('12', reg_integracao_p.cd_pessoa_fisica, NEW.nm_usuario, reg_integracao_p);
        end if;
      end if;

      select  count(*)
      into STRICT  qt_regra_atrib_w
      from  tabela_atrib_regra
      where  nm_atributo = 'NR_SEQ_PERSON_NAME'
      and    nm_tabela = 'PESSOA_FISICA'
      and    coalesce(cd_estabelecimento,wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento
      and    coalesce(cd_perfil,obter_perfil_ativo) = obter_perfil_ativo
      and    ((coalesce(cd_setor_atendimento,wheb_usuario_pck.get_cd_setor_atendimento) = wheb_usuario_pck.get_cd_setor_atendimento) or (wheb_usuario_pck.get_cd_setor_atendimento is null))
      and    coalesce(nm_usuario_param,wheb_usuario_pck.get_nm_usuario) = wheb_usuario_pck.get_nm_usuario
      and    upper(ds_regra) = '@REMOVER_NUMERICO';

      if (qt_regra_atrib_w > 0) then
        NEW.ds_given_name       := elimina_numeros(NEW.ds_given_name);
        NEW.ds_family_name     := elimina_numeros(NEW.ds_family_name);
        NEW.ds_component_name_1   := elimina_numeros(NEW.ds_component_name_1);
        NEW.ds_component_name_2   := elimina_numeros(NEW.ds_component_name_2);
        NEW.ds_component_name_3   := elimina_numeros(NEW.ds_component_name_3);
      end if;
    end if;
  end if;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_person_name_atual() FROM PUBLIC;

CREATE TRIGGER person_name_atual
	BEFORE INSERT OR UPDATE ON person_name FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_person_name_atual();

