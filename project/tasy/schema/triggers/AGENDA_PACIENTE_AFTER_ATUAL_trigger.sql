-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS agenda_paciente_after_atual ON agenda_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_agenda_paciente_after_atual() RETURNS trigger AS $BODY$
declare

cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
ie_tipo_atendimento_w		atendimento_paciente.ie_tipo_atendimento%type;
reg_integracao_w			gerar_int_padrao.reg_integracao;
cd_agenda_externa_w 		agenda.cd_agenda_externa%type;
cd_tipo_agenda_w			agenda.cd_tipo_agenda%type;

ie_gerar_consentimento_w	varchar(1);
count_w	bigint;

qt_tipo_evento_w     bigint;
qt_evento_tarefa_w   bigint;								
BEGIN
  BEGIN
if (NEW.ie_status_agenda <> 'L') then
   if (wheb_usuario_pck.get_ie_executar_trigger = 'N') then
      goto final;
   end if;


	BEGIN
   
		if (NEW.ie_status_agenda <> 'L') then
			select max(cd_tipo_agenda) cd_tipo_agenda,
				   max(cd_estabelecimento) cd_estabelecimento,
				   max(cd_agenda_externa)
			 into STRICT cd_tipo_agenda_w,
				  cd_estabelecimento_w,
				  cd_agenda_externa_w
			 from agenda a
			where a.cd_agenda = NEW.cd_agenda;
		end if;
	
	exception
		when others then
		null;
	end;

   select	count(b.nr_sequencia)
   into STRICT	count_w
   from	intpd_eventos a,
         intpd_eventos_sistema b
   where	a.nr_sequencia = b.nr_seq_evento
   and		a.ie_evento = 180
   and		a.ie_situacao = 'A'
   and		b.ie_situacao = 'A'  LIMIT 1;

   if (coalesce(count_w,0) > 0) and (NEW.ie_status_agenda <> 'L') and (NEW.nr_seq_proc_interno is not null) and (NEW.dt_cancelamento is null) and (NEW.nm_paciente is not null) and (NEW.dt_integracao is null) and (obter_tipo_agenda(NEW.cd_agenda) = 2) then
      BEGIN
      select	max(ie_tipo_atendimento)
      into STRICT	ie_tipo_atendimento_w
      from	atendimento_paciente
      where	nr_atendimento = NEW.nr_atendimento;

      reg_integracao_w.ie_operacao := 'A';
      reg_integracao_w.cd_estab_documento := cd_estabelecimento_w;
      reg_integracao_w.cd_convenio := NEW.cd_convenio;
      reg_integracao_w.cd_categoria := NEW.cd_categoria;
      reg_integracao_w.cd_procedimento := NEW.cd_procedimento;
      reg_integracao_w.nr_seq_proc_interno := NEW.nr_seq_proc_interno;
      reg_integracao_w.cd_agenda_externa	 := cd_agenda_externa_w;
      reg_integracao_w.ie_tipo_atendimento := ie_tipo_atendimento_w;

      if (wheb_usuario_pck.get_ie_lote_contabil = 'N') then
         reg_integracao_w := gerar_int_padrao.gravar_integracao('180', NEW.nr_sequencia, NEW.nm_usuario, reg_integracao_w);
      end if;
      end;
   end if;

   select	count(b.nr_sequencia)
   into STRICT	count_w
   from	intpd_eventos a,
         intpd_eventos_sistema b
   where	a.nr_sequencia = b.nr_seq_evento
   and		a.ie_evento = 148
   and		a.ie_situacao = 'A'
   and		b.ie_situacao = 'A'  LIMIT 1;

   if (coalesce(count_w,0) > 0) and (NEW.ie_status_agenda = 'A') and (NEW.nr_seq_proc_interno is not null) and (NEW.dt_cancelamento is null) and (coalesce(NEW.dt_integracao,LOCALTIMESTAMP) = coalesce(OLD.dt_integracao,LOCALTIMESTAMP)) and (NEW.nr_atendimento is not null) and (obter_tipo_agenda(NEW.cd_agenda) = 2) then
      BEGIN		
      if (NEW.ie_status_agenda <> OLD.ie_status_agenda) or (NEW.nr_seq_proc_interno <> OLD.nr_seq_proc_interno) or (NEW.cd_pessoa_fisica <> OLD.cd_pessoa_fisica) or (NEW.nm_paciente <> OLD.nm_paciente) or (NEW.nr_atendimento <> OLD.nr_atendimento) or (NEW.dt_agenda <> OLD.dt_agenda) or (NEW.hr_inicio <> OLD.hr_inicio) or (NEW.cd_procedimento <> OLD.cd_procedimento) or (NEW.cd_medico <> OLD.cd_medico) or (NEW.nr_minuto_duracao <> OLD.nr_minuto_duracao) or (NEW.cd_convenio <> OLD.cd_convenio) then
         BEGIN			

         select	count(1)
         into STRICT	count_w
         from	prescr_medica a,
               prescr_procedimento b
         where	a.nr_prescricao = b.nr_prescricao
         and		b.nr_seq_agenda = NEW.nr_sequencia
         and		a.dt_liberacao is not null;

         if (coalesce(count_w,0) > 0) then
            BEGIN
            select	max(ie_tipo_atendimento)
            into STRICT	ie_tipo_atendimento_w
            from	atendimento_paciente
            where	nr_atendimento = NEW.nr_atendimento;

            reg_integracao_w.ie_operacao := 'A';
            reg_integracao_w.cd_estab_documento := cd_estabelecimento_w;
            reg_integracao_w.cd_convenio := NEW.cd_convenio;
            reg_integracao_w.cd_categoria := NEW.cd_categoria;
            reg_integracao_w.cd_procedimento := NEW.cd_procedimento;
            reg_integracao_w.nr_seq_proc_interno := NEW.nr_seq_proc_interno;
            reg_integracao_w.cd_agenda_externa	 := cd_agenda_externa_w;
            reg_integracao_w.ie_tipo_atendimento := ie_tipo_atendimento_w;

            if (wheb_usuario_pck.get_ie_lote_contabil = 'N') then
               reg_integracao_w := gerar_int_padrao.gravar_integracao('148', NEW.nr_sequencia, NEW.nm_usuario, reg_integracao_w);
            end if;
            end;
         end if;
         end;
      end if;
      end;
   end if;

   select	count(b.nr_sequencia)
   into STRICT	count_w
   from	intpd_eventos a,
         intpd_eventos_sistema b
   where	a.nr_sequencia = b.nr_seq_evento
   and		a.ie_evento = 149
   and		a.ie_situacao = 'A'
   and		b.ie_situacao = 'A'  LIMIT 1;

   if (coalesce(count_w,0) > 0) and (NEW.ie_status_agenda = 'C') and (OLD.ie_status_agenda <> NEW.ie_status_agenda) and (NEW.nr_seq_proc_interno is not null) and (obter_tipo_agenda(NEW.cd_agenda) = 2) then
      BEGIN
      select	count(1)
      into STRICT	count_w
      from	prescr_medica a,
            prescr_procedimento b
      where	a.nr_prescricao = b.nr_prescricao
      and		b.nr_seq_agenda = NEW.nr_sequencia
      and		a.dt_liberacao is not null;

      if (coalesce(count_w,0) = 0) then
         BEGIN
         select	max(ie_tipo_atendimento)
         into STRICT	ie_tipo_atendimento_w
         from	atendimento_paciente
         where	nr_atendimento = NEW.nr_atendimento;

         reg_integracao_w.ie_operacao := 'A';
         reg_integracao_w.cd_estab_documento := cd_estabelecimento_w;
         reg_integracao_w.cd_convenio := NEW.cd_convenio;
         reg_integracao_w.cd_categoria := NEW.cd_categoria;
         reg_integracao_w.cd_procedimento := NEW.cd_procedimento;
         reg_integracao_w.nr_seq_proc_interno := NEW.nr_seq_proc_interno;
         reg_integracao_w.cd_agenda_externa := cd_agenda_externa_w;
         reg_integracao_w.ie_tipo_atendimento := ie_tipo_atendimento_w;

         reg_integracao_w := gerar_int_padrao.gravar_integracao('149', NEW.nr_sequencia, NEW.nm_usuario, reg_integracao_w);
         end;
      end if;
      end;
   end if;

	if (cd_tipo_agenda_w	= 2) and (NEW.ie_status_agenda = 'N') and (NEW.cd_pessoa_fisica is not null) and
		((NEW.cd_procedimento is not null and (NEW.cd_procedimento <> OLD.cd_procedimento or NEW.ie_origem_proced <> OLD.ie_origem_proced or OLD.cd_procedimento is null)) or (NEW.nr_seq_proc_interno is not null and (OLD.nr_seq_proc_interno <> NEW.nr_seq_proc_interno or OLD.nr_Seq_proc_interno is null))) then
		
		ie_gerar_consentimento_w := Obter_Param_Usuario(820, 463, obter_perfil_ativo, NEW.nm_usuario, cd_estabelecimento_w, ie_gerar_consentimento_w);
		/*
		S - Agendamento ou Proc. Adicional
		N - Nao gera
		A - Somente Agendamento
		P - Somente Proc. Adicional
		*/


		if (ie_gerar_consentimento_w = 'S' or ie_gerar_consentimento_w = 'A') then
			
				CALL agendas_inserir_consentimentos(
						cd_tipo_agenda_w,
						NEW.nr_sequencia,
						NEW.cd_procedimento,
						NEW.ie_origem_proced,
						NEW.nr_seq_proc_interno,
						NEW.cd_pessoa_fisica,
						NEW.cd_medico,
						cd_estabelecimento_w,
						NEW.nr_atendimento,
						NEW.ie_agenda_web);
		end if;	
	end if;
	
    ------------------------------WSuite Patient Portal - Routine for entering tasks in the patient preparation table---------------------

        select coalesce(max(1),0)
          into STRICT qt_evento_tarefa_w
          from wsuite_preparacao_paciente pp
         where pp.nr_seq_agenda = NEW.nr_sequencia
           and pp.ie_tipo_agenda in (1,2);

        select  coalesce(max(1),0)
          into STRICT qt_tipo_evento_w
          from wsuite_cad_prep_pac_evento pe
         where pe.ie_tipo_evento = 'AEX'
           and pe.ie_situacao = 'A';

        if (NEW.ie_status_agenda in ('CN','M','N','RE') and qt_evento_tarefa_w = 0 and qt_tipo_evento_w > 0) then

            CALL wsuite_gerar_prep_paciente('AEX',NEW.nr_sequencia,NEW.nm_usuario,cd_tipo_agenda_w,cd_estabelecimento_w, NEW.cd_pessoa_fisica);

        end if;

    ----------------------------------------------------------------------------------------------------------------------------------------

																																	
   <<final>>

   count_w := 0;
end if;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_agenda_paciente_after_atual() FROM PUBLIC;

CREATE TRIGGER agenda_paciente_after_atual
	AFTER INSERT OR UPDATE ON agenda_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_agenda_paciente_after_atual();

