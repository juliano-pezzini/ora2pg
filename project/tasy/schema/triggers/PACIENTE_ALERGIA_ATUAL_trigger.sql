-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS paciente_alergia_atual ON paciente_alergia CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_paciente_alergia_atual() RETURNS trigger AS $BODY$
declare

nr_seq_evento_w		bigint;
cd_estabelecimento_w	smallint;
qt_idade_w		bigint;

C01 CURSOR FOR
	SELECT	nr_seq_evento
	from	regra_envio_sms
	where	((cd_estabelecimento_w = 0) or (cd_estabelecimento	= cd_estabelecimento_w))
	and	ie_evento_disp		= 'PARD'
	and	qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999)
	and	coalesce(ie_situacao,'A') = 'A'
	and	((nr_seq_tipo_alergia is null) or (nr_seq_tipo_alergia = NEW.nr_seq_tipo));
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger	= 'S')  then

if (NEW.ie_data_inicio = '2')then
	NEW.dt_inicio := NEW.dt_mes_ano_inicio;
elsif (NEW.ie_data_inicio = '3')then
	NEW.dt_inicio := PKG_DATE_UTILS.get_Date(NEW.qt_ano_inicio,1,1);
end if;

cd_estabelecimento_w	:= obter_estabelecimento_ativo;

if (NEW.nr_atendimento is not null) then
	NEW.cd_setor_atendimento := obter_setor_atendimento(NEW.nr_atendimento);
end if;

if (coalesce(OLD.DT_REGISTRO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_REGISTRO) and (NEW.DT_REGISTRO is not null) then
	NEW.ds_utc		:= obter_data_utc(NEW.DT_REGISTRO, 'HV');
end if;

if (coalesce(OLD.DT_LIBERACAO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_LIBERACAO) and (NEW.DT_LIBERACAO is not null) then
	NEW.ds_utc_atualizacao	:= obter_data_utc(NEW.DT_LIBERACAO,'HV');
end if;

if (NEW.nr_seq_tipo is not null) and (NEW.dt_fim is not null) and (OLD.dt_fim is null or OLD.dt_fim <> NEW.dt_fim)
	then
		NEW.nm_usuario_termino := wheb_usuario_pck.get_nm_usuario;
end if;

if (NEW.dt_fim is null) and (OLD.dt_fim is not null)then
	NEW.nm_usuario_termino := '';
end if;

if (NEW.dt_liberacao is not null) and (OLD.dt_liberacao is null) then
	qt_idade_w	:= coalesce(obter_idade_pf(NEW.cd_pessoa_fisica,LOCALTIMESTAMP,'A'),0);

	BEGIN
	open C01;
	loop
	fetch C01 into
		nr_seq_evento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN
		CALL gerar_evento_paciente_trigger(nr_seq_evento_w,NEW.nr_atendimento,NEW.cd_pessoa_fisica,null,NEW.nm_usuario,null,NEW.dt_liberacao,null,NEW.nr_seq_tipo);
		end;
	end loop;
	close C01;

	exception
		when others then
		null;
	end;
end if;

end if;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_paciente_alergia_atual() FROM PUBLIC;

CREATE TRIGGER paciente_alergia_atual
	BEFORE INSERT OR UPDATE ON paciente_alergia FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_paciente_alergia_atual();

