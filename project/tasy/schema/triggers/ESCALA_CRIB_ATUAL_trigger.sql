-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS escala_crib_atual ON escala_crib CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_escala_crib_atual() RETURNS trigger AS $BODY$
declare
  qt_reg_w    smallint;
  sql_w       varchar(200);
  qt_pontos_w smallint;
  ds_erro_w   varchar(4000);
  ds_parametro_w  varchar(4000);
BEGIN
  BEGIN
  if (NEW.nr_hora is null) or (NEW.DT_AVALIACAO <> OLD.DT_AVALIACAO) then
	BEGIN
	  NEW.nr_hora := (to_char(round(NEW.DT_AVALIACAO,'hh24'),'hh24'))::numeric;
	end;
  end if;

  if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
  end if;

  /** Medical Device **/

  BEGIN
    sql_w := 'call OBTER_SCORE_ESCALA_CRIB_MD(:1, :2, :3, :4, :5, :6) into :qt_pontos_w';
    EXECUTE sql_w using in NEW.ie_peso_nascimento,
			                      in NEW.ie_idade_gestacional,
			                      in NEW.ie_malform_congenita,
			                      in NEW.ie_be_max,
                            in NEW.ie_fio2_min,
                            in NEW.ie_fio2_max,			
                            out qt_pontos_w;
  exception
    when others then
      qt_pontos_w := 0;
      ds_erro_w := sqlerrm;
      ds_parametro_w := ':new.nr_atendimento: ' || NEW.nr_atendimento || ' - :new.ie_situacao: ' || NEW.ie_situacao || ' - :new.cd_profissional: ' || NEW.cd_profissional;
      ds_parametro_w := ds_parametro_w || ' - :new.ie_idade_gestacional: ' || NEW.ie_idade_gestacional || ' - :new.ie_malform_congenita: ' || NEW.ie_malform_congenita || ' - :new.ie_be_max: ' || NEW.ie_be_max || ' - :new.ie_fio2_min: ' || NEW.ie_fio2_min || ' - :new.ie_fio2_max: ' || NEW.ie_fio2_max || ' - qt_pontos_w: ' || qt_pontos_w;
      CALL gravar_log_medical_device('ESCALA_CRIB_ATUAL', 'OBTER_SCORE_ESCALA_CRIB_MD', ds_parametro_w, ds_erro_w, wheb_usuario_pck.get_nm_usuario, 'N');
  end;

  NEW.qt_pontos := qt_pontos_w;

  <<Final>>
  qt_reg_w := 0;

  END;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_escala_crib_atual() FROM PUBLIC;

CREATE TRIGGER escala_crib_atual
	BEFORE INSERT OR UPDATE ON escala_crib FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_escala_crib_atual();

