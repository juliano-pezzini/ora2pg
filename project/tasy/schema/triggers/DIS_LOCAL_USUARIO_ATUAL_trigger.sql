-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS dis_local_usuario_atual ON dis_regra_local_usuario CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_dis_local_usuario_atual() RETURNS trigger AS $BODY$
declare

qt_existe_w		bigint;

pragma autonomous_transaction;

BEGIN
if (TG_OP = 'INSERT') and (gerar_int_dankia_pck.get_ie_int_dankia = 'S') then
	CALL gerar_int_dankia_pck.dankia_permissao_usuario_local(NEW.nm_usuario_regra, NEW.cd_local_estoque, 'I');
	select	count(1)
	into STRICT	qt_existe_w
	from	dis_regra_local_usuario
	where	nm_usuario_regra = NEW.nm_usuario_regra
	and	nr_sequencia <> NEW.nr_sequencia;
	if (qt_existe_w = 0) then
		CALL gerar_int_dankia_pck.dankia_inserir_funcionario(NEW.nm_usuario_regra, 'I');
	end if;
elsif (TG_OP = 'DELETE') and (gerar_int_dankia_pck.get_ie_int_dankia = 'S') then
	CALL gerar_int_dankia_pck.dankia_permissao_usuario_local(OLD.nm_usuario_regra, OLD.cd_local_estoque, 'E');
	select	count(1)
	into STRICT	qt_existe_w
	from	dis_regra_local_usuario
	where	nm_usuario_regra = OLD.nm_usuario_regra
	and		nr_sequencia <> OLD.nr_sequencia;
	if (qt_existe_w = 0) then
		CALL gerar_int_dankia_pck.dankia_inserir_funcionario(OLD.nm_usuario_regra, 'E');
	end if;
elsif (TG_OP = 'UPDATE') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(403431);
end if;

commit;

IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_dis_local_usuario_atual() FROM PUBLIC;

CREATE TRIGGER dis_local_usuario_atual
	BEFORE INSERT OR UPDATE OR DELETE ON dis_regra_local_usuario FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_dis_local_usuario_atual();

