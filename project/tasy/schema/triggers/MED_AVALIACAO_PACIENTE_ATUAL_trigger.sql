-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS med_avaliacao_paciente_atual ON med_avaliacao_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_med_avaliacao_paciente_atual() RETURNS trigger AS $BODY$
DECLARE
qt_reg_w	smallint;	
qt_hora_w	double precision;
ie_tipo_w			varchar(10);

BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger	= 'N') or
	(OLD.nr_seq_assinatura is null AND NEW.nr_seq_assinatura is not null) then
	goto Final;
end if;

if (coalesce(OLD.DT_AVALIACAO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_AVALIACAO) and (NEW.DT_AVALIACAO is not null) then
	NEW.ds_utc		:= obter_data_utc(NEW.DT_AVALIACAO, 'HV');	
end if;

if (coalesce(OLD.DT_LIBERACAO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_LIBERACAO) and (NEW.DT_LIBERACAO is not null) then
	NEW.ds_utc_atualizacao	:= obter_data_utc(NEW.DT_LIBERACAO,'HV');
end if;

qt_hora_w := Obter_Param_Usuario(281, 976, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, 0, qt_hora_w);

if (coalesce(qt_hora_w,-1)  < 0 ) then
	select	coalesce(max(QT_HORAS_PASSADO_AVAL),-1)
	into STRICT	qt_hora_w
	from	parametro_medico
	where	cd_estabelecimento	= wheb_usuario_pck.get_cd_estabelecimento;
end if;


if (qt_hora_w >= 0) and
	(NEW.dt_avaliacao < (LOCALTIMESTAMP - qt_hora_w/24)) then
	--A data da avaliacao nao pode ser menor que '|| to_char(qt_hora_w)||' hora(s) em relacao a data atual.#@#@');

	CALL Wheb_mensagem_pck.exibir_mensagem_abort(262184, 'QT_EXAME='||to_char(qt_hora_w));
end if;


if (NEW.dt_liberacao is null) then
	ie_tipo_w := 'AV';
elsif (OLD.dt_liberacao is null) and (NEW.dt_liberacao is not null) then
	ie_tipo_w := 'XAV';
end if;
		
if ((coalesce(NEW.cd_pessoa_fisica,0) > 0) and (ie_tipo_w	is not null)) then	
	CALL Gerar_registro_pendente_PEP(ie_tipo_w, NEW.nr_sequencia, NEW.cd_pessoa_fisica, NEW.nr_atendimento, NEW.nm_usuario,
								null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,NEW.nr_seq_item_pront);	
end if;

if (OLD.dt_liberacao is null) and (NEW.dt_liberacao is not null) then
	CALL send_bundle_integration(NEW.nr_atendimento, NEW.nr_sequencia, NEW.dt_liberacao,
							NEW.nr_seq_tipo_avaliacao, NEW.dt_atualizacao, NEW.dt_avaliacao);
end if;

<<Final>>
qt_reg_w	:= 0;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_med_avaliacao_paciente_atual() FROM PUBLIC;

CREATE TRIGGER med_avaliacao_paciente_atual
	BEFORE INSERT OR UPDATE ON med_avaliacao_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_med_avaliacao_paciente_atual();

