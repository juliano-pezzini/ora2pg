-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS medico_update ON medico CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_medico_update() RETURNS trigger AS $BODY$
declare
 
nr_seq_conselho_w		bigint;
ie_atualiza_vinculo_w		varchar(1);
nm_pessoa_fisica_w		pessoa_fisica.nm_pessoa_fisica%type;
qt_registro_w			bigint;
 
BEGIN 
 
ie_atualiza_vinculo_w	:= coalesce(obter_valor_param_usuario(4, 95, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento),'S');
 
 
if (NEW.NR_CRM is not null) then 
	BEGIN 
 
	/*  
	Comentado este bloco e o bloco posterior ao UPDATE, porque o campo nr_seq_conselho, na função Cadastro Médico, ao utilizar o Shift + F8, diz que pode ser CRO e CRF, além do CRM. 
	Então, não pode ser setado somente para o CRM. 
	Ricardo e Fabrício cientes. 
	Heckmann	OS 263504 
	 
	select	nvl(max(nr_sequencia),0) 
	into	nr_seq_conselho_w 
	from 	conselho_profissional 
	where 	upper(sg_conselho) = 'CRM'; 
	*/
 
	 
	update	pessoa_fisica 
	set	DS_CODIGO_PROF		= substr(NEW.NR_CRM,1,15) 
	where	cd_pessoa_fisica	= NEW.cd_pessoa_fisica;
	 
	/* 
	if	(nr_seq_conselho_w <> 0) then 
		update	pessoa_fisica 
		set	nr_seq_conselho		= nr_seq_conselho_w 
		where	cd_pessoa_fisica	= :new.cd_pessoa_fisica; 
	end if; 
	*/
 
	 
	 
	end;
end if;
 
if (ie_atualiza_vinculo_w <> 'X') then 
	if (coalesce(NEW.IE_VINCULO_MEDICO,0) <> coalesce(OLD.IE_VINCULO_MEDICO,0)) and (NEW.IE_VINCULO_MEDICO is not null) and 
		((ie_atualiza_vinculo_w = 'S') or (not TG_OP = 'INSERT')) then 
		 
		insert into medico_vinculo(NR_SEQUENCIA, 
						DT_ATUALIZACAO, 
						NM_USUARIO, 
						DT_ATUALIZACAO_NREC, 
						NM_USUARIO_NREC, 
						CD_MEDICO, 
						IE_VINCULO_MEDICO, 
						DT_ADMISSAO) 
		values (nextval('medico_vinculo_seq'), 
						LOCALTIMESTAMP, 
						NEW.nm_usuario, 
						LOCALTIMESTAMP, 
						NEW.nm_usuario, 
						NEW.cd_pessoa_fisica, 
						NEW.IE_VINCULO_MEDICO, 
						LOCALTIMESTAMP);
 
	end if;	
end if;
 
 
if (NEW.ie_situacao = 'I') then 
	update	agenda_medico 
	set	ie_situacao 	= 'I' 
	where	cd_medico	= NEW.cd_pessoa_fisica;
end if;
 
if (coalesce(NEW.nm_guerra,'X') <> coalesce(OLD.nm_guerra,'X')) then 
	select 	count(1) 
	into STRICT	qt_registro_w 
	from 	pls_web_param_guia_medico;
	 
	if (qt_registro_w > 0) then 
		select	SUBSTR(OBTER_NOME_PF(cd_pessoa_fisica), 0, 255) 
		into STRICT	nm_pessoa_fisica_w 
		from	pessoa_fisica 
		where	cd_pessoa_fisica = NEW.cd_pessoa_fisica;
		 
		CALL pls_atualiza_nome_busca_guia(	NEW.cd_pessoa_fisica,	 
						null,			 
						null,		 
						null,			 
						nm_pessoa_fisica_w,		 
						NEW.nm_guerra);			
	end if;
end if;
 
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_medico_update() FROM PUBLIC;

CREATE TRIGGER medico_update
	BEFORE INSERT OR UPDATE ON medico FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_medico_update();

