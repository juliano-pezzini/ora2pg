-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS escala_odi_atual ON escala_odi CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_escala_odi_atual() RETURNS trigger AS $BODY$
DECLARE
    sql_w           varchar(200);
    pr_resultado_w  double precision;
    qt_reg_w	    smallint;
    ds_erro_w      varchar(4000);
    ds_parametro_w varchar(4000);
BEGIN
  BEGIN

    if (wheb_usuario_pck.get_ie_executar_trigger	= 'N') then
        goto Final;
    end if;

    IF ( NEW.nr_hora IS NULL ) OR ( NEW.dt_avaliacao <> OLD.dt_avaliacao ) THEN
        BEGIN
            NEW.nr_hora := (to_char(round(NEW.dt_avaliacao, 'hh24'), 'hh24'))::numeric;
        END;
    END IF;

    --- Inicio MD 
	BEGIN
    sql_w := 'CALL OBTER_ESCALA_ODI_MD(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10) INTO :pr_resultado_w';

    EXECUTE sql_w
    USING IN NEW.qt_dor, IN NEW.qt_cuidado_pessoal, IN NEW.qt_levantamento, 
          IN NEW.qt_marcha, NEW.qt_sentar, IN NEW.qt_ficar_em_pe, 
          IN NEW.qt_dormir, NEW.qt_vida_social, IN NEW.qt_sexualidade,
          IN NEW.qt_viagem, OUT pr_resultado_w;
    EXCEPTION
    WHEN OTHERS THEN
      pr_resultado_w := null;
      ds_erro_w := sqlerrm;
      ds_parametro_w := ':new.nr_atendimento: ' || NEW.nr_atendimento || ' - :new.ie_situacao: ' || NEW.ie_situacao || ' - :new.cd_profissional: ' || NEW.cd_profissional;
      ds_parametro_w := ds_parametro_w || ' - :new.qt_dor: ' || NEW.qt_dor || ' - :new.qt_cuidado_pessoal: ' || NEW.qt_cuidado_pessoal || ' - :new.qt_levantamento: ' || NEW.qt_levantamento;
      ds_parametro_w := ds_parametro_w || ' - :new.qt_marcha: ' || NEW.qt_marcha || ' - :new.qt_sentar: ' || NEW.qt_sentar || ' - :new.qt_ficar_em_pe: ' || NEW.qt_ficar_em_pe;
      ds_parametro_w := ds_parametro_w || ' - :new.qt_dormir: ' || NEW.qt_dormir || ' - :new.qt_vida_social: ' || NEW.qt_vida_social || ' - :new.qt_sexualidade: ' || NEW.qt_sexualidade || ' - :new.qt_viagem: ' || NEW.qt_viagem || ' - pr_resultado_w: ' || pr_resultado_w;
      CALL gravar_log_medical_device('ESCALA_ODI_ATUAL', 'OBTER_ESCALA_ODI_MD', ds_parametro_w, ds_erro_w, wheb_usuario_pck.get_nm_usuario, 'N');
    END;
    NEW.pr_resultado := pr_resultado_w;
    --- Fim MD
<<Final>>
qt_reg_w	:= 0;
  END;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_escala_odi_atual() FROM PUBLIC;

CREATE TRIGGER escala_odi_atual
	BEFORE INSERT OR UPDATE ON escala_odi FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_escala_odi_atual();

