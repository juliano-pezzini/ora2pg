-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS alteracao_vencimento_befinsert ON alteracao_vencimento CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_alteracao_vencimento_befinsert() RETURNS trigger AS $BODY$
declare

nt_seq_alt_venc_w	bigint;
ie_processo_camara_w		pls_parametros_camara.ie_processo_camara%type;
nr_titulo_receber_w			pls_titulo_lote_camara.nr_titulo_receber%type;
nr_seq_lote_w				pls_titulo_lote_camara.nr_sequencia%type;
cd_estabelecimento_w		titulo_receber.cd_estabelecimento%type;
ie_tipo_data_cr_w			pls_lote_camara_comp.ie_tipo_data_cr%type;	
vl_valor_altera_venc_w		double precision;
vl_saldo_titulo_w			titulo_receber.vl_saldo_titulo%type;
dt_hora_w		timestamp;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
select	max(a.cd_estabelecimento),
		max(a.vl_saldo_titulo)
into STRICT	cd_estabelecimento_w,
		vl_saldo_titulo_w
from	titulo_receber a
where	a.nr_titulo = NEW.nr_titulo;

/*OS 1555588 - Como e um valor, fiz da mesma forma que o parametro 148 na proc consistir_calcular_cot_compra*/


BEGIN
	select	coalesce(max(obter_valor_param_usuario(801,214, obter_perfil_ativo, NEW.nm_usuario, obter_estabelecimento_ativo)),0)
	into STRICT	vl_valor_altera_venc_w
	;
exception when others then
	vl_valor_altera_venc_w := 0;
end;

if (coalesce(vl_valor_altera_venc_w,0) > 0) and (vl_saldo_titulo_w > coalesce(vl_valor_altera_venc_w,0)) then
	--Nao sera possivel alterar o vencimento do titulo. O saldo e maior que o valor mimino informado no parametro 214. Vl saldo: #@vl_saldo_titulo_w#@ Vl parametro: #@vl_valor_altera_venc_w#@

	CALL wheb_mensagem_pck.exibir_mensagem_abort(995290,	'vl_saldo_titulo_w=' || campo_mascara_virgula(vl_saldo_titulo_w) ||
									';VL_VALOR_ALTERA_VENC_W=' || campo_mascara_virgula(vl_valor_altera_venc_w));
end if;
/*FIM OS 1555588 */



if (cd_estabelecimento_w is not null) then
	
	/*verificar se o titulo que esta recebendo a baixa esta em um lote de camra de compensacao que nao esta baixado.*/


	select	count(a.nr_titulo_receber),
			max(b.nr_sequencia),
			max(b.ie_tipo_data_cr)
	into STRICT	nr_titulo_receber_w,
			nr_seq_lote_w,
			ie_tipo_data_cr_w
	from	pls_titulo_lote_camara a,
			pls_lote_camara_comp b
	where	a.nr_seq_lote_camara	= b.nr_sequencia
	and		a.nr_titulo_receber		= NEW.nr_titulo;	
	
	select	max(a.ie_processo_camara)
	into STRICT	ie_processo_camara_w
	from	pls_parametros_camara a
	where 	cd_estabelecimento = cd_estabelecimento_w;

	if (coalesce(ie_processo_camara_w,'CO') = 'CA') and (nr_titulo_receber_w > 0) and (ie_tipo_data_cr_w = 'V') then /*se  o processo camara de compensacao for regime de caixa e o titulo estiver na camara e o tipo de data for vencimento*/

		
		/*verifica se a rotina que esta efetuando a baixa e a rotina que baixa pela camara. Se nao for, deve consistir.*/


		CALL wheb_mensagem_pck.exibir_mensagem_abort(335816,	'NR_SEQ_LOTE_W=' || nr_seq_lote_w ||
									';NR_TITULO_W=' || NEW.nr_titulo);
	end if;
end if;

/*OS 2869560, o delphi nao lanca horas no dt_alteracao. Essa hora  precisa ser lancada devido na rotina gerar_bloqueto_tit_rec verificar se a data da alteracao e apos a ultima via/emissao do boleto para nova geracoa*/


BEGIN
if (to_char(NEW.dt_alteracao,'hh24:mi:ss') = '00:00:00') then
	dt_hora_w := NEW.dt_atualizacao;
	NEW.dt_alteracao := to_date(to_char(NEW.dt_alteracao,'dd/MM/yyyy')||' '||to_char(dt_hora_w,'hh24:mi:ss'), 'dd/MM/yyyy hh24:mi:ss');
end if;
exception
	when data_exception then
		NEW.dt_alteracao := NEW.dt_alteracao;
	when others then
		NEW.dt_alteracao := NEW.dt_alteracao;
end;

BEGIN
if (to_char(NEW.dt_vencimento,'hh24:mi:ss') = '00:00:00') then
	dt_hora_w := NEW.dt_atualizacao;
	NEW.dt_vencimento := to_date(to_char(NEW.dt_vencimento,'dd/MM/yyyy')||' '||to_char(dt_hora_w,'hh24:mi:ss'), 'dd/MM/yyyy hh24:mi:ss');
end if;
exception
	when data_exception then
		NEW.dt_vencimento := NEW.dt_vencimento;
	when others then
		NEW.dt_vencimento := NEW.dt_vencimento;
end;

select	coalesce(max(a.nr_sequencia),0) + 1
into STRICT	nt_seq_alt_venc_w
from	w_alteracao_vencimento a
where	a.nr_titulo		= NEW.nr_titulo;

insert	into w_alteracao_vencimento(dt_alteracao,
	dt_atualizacao,
	dt_atualizacao_nrec,
	ie_calc_juros_multa,
	nm_usuario,
	nm_usuario_nrec,
	nr_seq_alt_venc,
	nr_sequencia,
	nr_titulo,
	vl_juros,
	vl_multa)
values (NEW.dt_vencimento,
	LOCALTIMESTAMP,
	LOCALTIMESTAMP,
	NEW.ie_calc_juros_multa,
	NEW.nm_usuario,
	NEW.nm_usuario,
	NEW.nr_sequencia,
	nt_seq_alt_venc_w,
	NEW.nr_titulo,
	NEW.vl_juros,
	NEW.vl_multa);

end if;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_alteracao_vencimento_befinsert() FROM PUBLIC;

CREATE TRIGGER alteracao_vencimento_befinsert
	BEFORE INSERT ON alteracao_vencimento FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_alteracao_vencimento_befinsert();

