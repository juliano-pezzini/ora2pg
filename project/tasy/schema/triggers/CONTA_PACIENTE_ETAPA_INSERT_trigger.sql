-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS conta_paciente_etapa_insert ON conta_paciente_etapa CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_conta_paciente_etapa_insert() RETURNS trigger AS $BODY$
DECLARE
 
dt_periodo_inicial_w	timestamp;
ie_receb_automatico_w  varchar(3);
dt_periodo_final_w	timestamp;
nr_seq_evento_w		bigint;
nr_atendimento_w	bigint;
cd_pessoa_fisica_w	varchar(10);
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
ie_receb_mesma_etapa_w	varchar(1);
nr_seq_ultima_etapa_w	conta_paciente_etapa.nr_seq_etapa%type;
 
C01 CURSOR FOR 
	SELECT	nr_seq_evento 
	from	regra_envio_sms 
	where	cd_estabelecimento	= cd_estabelecimento_w 
	and	ie_evento_disp = 'IEC' 
	and (coalesce(nr_seq_etapa,NEW.NR_SEQ_ETAPA) = NEW.NR_SEQ_ETAPA) 
	and (coalesce(nr_seq_motivo_dev, coalesce(NEW.nr_seq_motivo_dev,0)) = coalesce(NEW.nr_seq_motivo_dev,0)) 
	and	coalesce(ie_situacao,'A') = 'A' 
	order by 
		coalesce(nr_seq_etapa,0), 
		coalesce(nr_seq_motivo_dev,0);
 
PRAGMA autonomous_transaction;
BEGIN
  BEGIN 
 
NEW.ie_status := 'P';
 
select	coalesce(max(ie_receb_automatico),'N'), 
	coalesce(max(ie_receb_mesma_etapa),'N') 
into STRICT	ie_receb_automatico_w, 
	ie_receb_mesma_etapa_w 
from	fatur_etapa 
where	nr_sequencia = NEW.nr_seq_etapa;
 
SELECT	MAX(dt_periodo_inicial), 
  	MAX(dt_periodo_final), 
	MAX(cd_estabelecimento), 
	max(nr_atendimento) 
INTO STRICT	dt_periodo_inicial_w, 
  	dt_periodo_final_w, 
	cd_estabelecimento_w, 
	nr_atendimento_w 
FROM	conta_paciente 
WHERE 	nr_interno_conta	= NEW.nr_interno_conta;
 
select 	max(cd_pessoa_fisica) 
into STRICT	cd_pessoa_fisica_w 
from 	atendimento_paciente 
where 	nr_atendimento = nr_atendimento_w;
 
nr_seq_ultima_etapa_w	:= 0;
 
if (ie_receb_mesma_etapa_w = 'S') then 
	nr_seq_ultima_etapa_w	:= somente_numero(obter_conta_paciente_etapa(NEW.nr_interno_conta,'C'));
end if;
 
IF ((ie_receb_automatico_w = 'S') or (coalesce(nr_seq_ultima_etapa_w,0) = NEW.nr_seq_etapa)) THEN 
  BEGIN 
	NEW.dt_recebimento := LOCALTIMESTAMP;
	NEW.nm_usuario_recebimento := coalesce(wheb_usuario_pck.get_nm_usuario,'Tasy');
	NEW.ie_status := 'R';
	END;
END IF;	
 
IF (dt_periodo_inicial_w IS NOT NULL) THEN 
	NEW.dt_periodo_inicial	:= dt_periodo_inicial_w;
END IF;
 
IF (dt_periodo_final_w IS NOT NULL) THEN 
	NEW.dt_periodo_final	:= dt_periodo_final_w;
END IF;
 
IF (NEW.nr_interno_conta IS NOT NULL) THEN 
	BEGIN 
	NEW.vl_conta	:= coalesce(obter_valor_conta(NEW.nr_interno_conta,0),0);
	EXCEPTION 
		WHEN OTHERS THEN 
		NEW.vl_conta	:= 0;
	END;
END IF;
 
open C01;
	loop 
	fetch C01 into	 
		nr_seq_evento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN		 
		CALL gerar_evento_paciente(nr_seq_evento_w,nr_atendimento_w,cd_pessoa_fisica_w,null,wheb_usuario_pck.get_nm_usuario,null);		
		end;
	end loop;
close C01;
	 
COMMIT;
 
  END;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_conta_paciente_etapa_insert() FROM PUBLIC;

CREATE TRIGGER conta_paciente_etapa_insert
	BEFORE INSERT ON conta_paciente_etapa FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_conta_paciente_etapa_insert();

