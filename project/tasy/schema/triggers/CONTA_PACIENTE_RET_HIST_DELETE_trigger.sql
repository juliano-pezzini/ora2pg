-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS conta_paciente_ret_hist_delete ON conta_paciente_ret_hist CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_conta_paciente_ret_hist_delete() RETURNS trigger AS $BODY$
declare

dt_baixa_w			timestamp;

ie_acao_w		smallint;
vl_historico_w		double precision;

vl_pendente_w		double precision;
vl_reapresentacao_w	double precision;
vl_glosa_devida_w	double precision;
vl_glosa_indevida_w	double precision;
vl_nao_auditado_w	double precision;
vl_recebido_w		double precision;
vl_inicial_w		double precision;
vl_perdas_w		double precision;

BEGIN

if (OLD.nr_seq_lote_audit is not null) then
	select	dt_baixa
	into STRICT	dt_baixa_w
	from	lote_audit_tit_rec
	where	nr_sequencia = OLD.nr_seq_lote_audit;

	if (dt_baixa_w is not null) then
		--r.aise_application_error(-20011,' Histórico já está vinculado a um lote. Não pode ser excluído !');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(263288);
	end if;
end if;

select	ie_acao
into STRICT	ie_acao_w
from	hist_audit_conta_paciente
where	nr_sequencia = OLD.nr_seq_hist_audit;

select 	vl_pendente,
	vl_reapresentacao,
	vl_glosa_devida,
	vl_glosa_indevida,
	vl_nao_auditado,
	vl_recebido,
	vl_inicial,
	vl_perdas
into STRICT	vl_pendente_w,
	vl_reapresentacao_w,
	vl_glosa_devida_w,
	vl_glosa_indevida_w,
	vl_nao_auditado_w,
	vl_recebido_w,
	vl_inicial_w,
	vl_perdas_w
from	conta_paciente_retorno
where	nr_sequencia = OLD.nr_seq_conpaci_ret;

vl_pendente_w 		:= vl_pendente_w + OLD.vl_historico;

if (ie_acao_w <> 8) then -- afstringari 179913 22/01/2010
	if (ie_acao_w = 0) then
		vl_nao_auditado_w	:= vl_nao_auditado_w - OLD.vl_historico;
	elsif (ie_acao_w = 1) then
		vl_recebido_w		:= vl_recebido_w - OLD.vl_historico;
	elsif (ie_acao_w = 2) then
		vl_reapresentacao_w	:= vl_reapresentacao_w - OLD.vl_historico;
	elsif (ie_acao_w = 3) then
		vl_glosa_devida_w	:= vl_glosa_devida_w - OLD.vl_historico;
	elsif (ie_acao_w = 4) then
		vl_glosa_indevida_w	:= vl_glosa_indevida_w - OLD.vl_historico;
	elsif (ie_acao_w = 5) then
		vl_pendente_w 		:= vl_pendente_w - (OLD.vl_historico * 2);
		vl_inicial_w		:= vl_inicial_w  - OLD.vl_historico;
	elsif (ie_acao_w = 7) then
		vl_perdas_w		:= vl_perdas_w - OLD.vl_historico;
	end if;

end if;


update	conta_paciente_retorno
set	vl_pendente 		= vl_pendente_w,
	vl_reapresentacao	= vl_reapresentacao_w,
	vl_glosa_devida		= vl_glosa_devida_w,
	vl_glosa_indevida	= vl_glosa_indevida_w,
	vl_nao_auditado 	= vl_nao_auditado_w,
	vl_recebido		= vl_recebido_w,
	vl_inicial		= vl_inicial_w,
	vl_perdas		= vl_perdas_w
where	nr_sequencia 		= OLD.nr_seq_conpaci_ret;

update	convenio_retorno_glosa
set	nr_seq_conpaci_ret_hist  = NULL
where	nr_seq_conpaci_ret_hist = OLD.nr_sequencia;

RETURN OLD;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_conta_paciente_ret_hist_delete() FROM PUBLIC;

CREATE TRIGGER conta_paciente_ret_hist_delete
	AFTER DELETE ON conta_paciente_ret_hist FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_conta_paciente_ret_hist_delete();

