-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS unidade_atendimento_update ON unidade_atendimento CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_unidade_atendimento_update() RETURNS trigger AS $BODY$
DECLARE

nr_sequencia_w			bigint;
ie_mudou_status_w			varchar(01);
ie_paciente_isolado_w		varchar(01);
nr_acompanhante_w		bigint;
cd_pessoa_fisica_w		varchar(10);
dt_nascimento_w			timestamp;
dt_obito_w			timestamp;
qt_idade_w			bigint;
qt_registro_w			bigint;
nr_atendimento_w			bigint;
nr_seq_hist_w			bigint;
nm_usuario_w			varchar(15);
ie_grupo_w			varchar(1);

nr_seq_unid_status_p312_w		bigint;
ie_status_unidade_p312_w		varchar(15) := null;
ie_status_unid_p312_w		varchar(15);
ie_utiliza_portaria_w			varchar(1);
qt_classif_w			bigint;
qt_existe_classif_w			bigint;
ie_classif_p312_w			varchar(05);
qt_itens_w			integer;
qt_reg_w				smallint;
ds_observacao_w			varchar(255);
dt_alta_w				timestamp;
ds_origem_w			varchar(1800);
Ie_reg_Atepacu_w			varchar(1);
ds_unidade_log_w			varchar(4000);
ie_gera_eritel_w			varchar(3);
cd_estabelecimento_w		integer;
cd_pessoa_reserva_w		varchar(10);
nm_pac_reserva_w		varchar(255);
nr_seq_vaga_w			bigint;
cd_paciente_reserva_w		varchar(10);
ie_per_reserva_gv_reservado_w	varchar(1);
nr_atendimento_ww		bigint;
nr_atend_w			bigint;
ie_inativa_leito_w		varchar(1);
ie_consiste_leito_hig_alta_w	varchar(1);
nr_internacao_w			bigint;
ie_serv_aguardando_checklist_w	varchar(1);
ie_serv_aguard_hig_w	varchar(1);
ie_isola_leito_w	varchar(1);
ie_pac_isolado_w	varchar(1);

nr_seq_higienizacao_w	bigint;
nr_seq_gv_w		bigint;
ie_atualizar_gv_w	varchar(1) := 'N';

ie_atualizar_sts_gv_w varchar(1) := 'N';
nm_paciente_w		varchar(200);
cd_pessoa_atend_ant_w	varchar(15);
cd_pessoa_fisica_atual_w	varchar(15);
nr_seq_hist_update_w	bigint;
ie_consistir_idade_w		varchar(1);
ie_alojamento_w 		varchar(1);
nr_atendimento_acomp_temp_w	unidade_atendimento.nr_atendimento%type;
cd_paciente_reserva_temp_w	unidade_atendimento.cd_paciente_reserva%type;
nm_paciente_reserva_temp_w	unidade_atendimento.nm_pac_reserva%type;
dt_first_history_w	timestamp;
nm_first_history_w		unidade_atend_hist.nm_usuario%type;
BEGIN
  BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger = 'N')  then
	goto Final;
end if;

if (obter_funcao_ativa = 44) and -- se a funcao ativa e a ocupacao hospitalar
	(NEW.ie_status_unidade = 'G') and -- se o novo status e aguardando higienizacao
	(OLD.ie_status_unidade	= 'O') and -- se o status anterior e isolamento (sem o paciente no leito)
	(NEW.ie_higienizacao = 'N') then -- se o higienizacao esta como "Nao controla"
	NEW.ie_status_unidade := 'L'; -- poe o status para Livre.
end if;

if (NEW.ie_status_unidade <> 'R') and (OLD.ie_status_unidade	= 'R') and (OLD.cd_paciente_reserva is not null) and (OLD.nr_internacao_aghos is not null) then

	if (NEW.ie_status_unidade = 'P') then

		BEGIN
			select	nr_internacao
			into STRICT	nr_internacao_w
			from	solicitacao_tasy_aghos
			where	nr_internacao = NEW.nr_internacao_aghos
			and	nr_atendimento = NEW.nr_atendimento  LIMIT 1;
		exception
			when	no_data_found then
				nr_internacao_w := 1;
			when	others then
				nr_internacao_w := null;
		end;

		if (nr_internacao_w is null) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(228964, 'PACIENTE='	|| substr(obter_nome_pf(OLD.cd_paciente_reserva), 1, 80) || ';' ||
									'INTERNACAO='	|| NEW.nr_internacao_aghos);
		else
			NEW.cd_paciente_reserva := null;
			NEW.nr_internacao_aghos := null;
		end if;

	else
		CALL wheb_mensagem_pck.exibir_mensagem_abort(228964, 'PACIENTE='	|| substr(obter_nome_pf(OLD.cd_paciente_reserva), 1, 80) || ';' ||
								'INTERNACAO='	|| NEW.nr_internacao_aghos);
	end if;
end if;

if	((NEW.ie_status_unidade	= 'L' AND OLD.ie_status_unidade	= 'R') or
	(NEW.ie_situacao	= 'I' AND OLD.ie_situacao	= 'A')) and (NEW.cd_paciente_reserva is not null) then
	NEW.cd_paciente_reserva	:= null;
	NEW.nm_usuario_reserva		:= null;
	NEW.nm_pac_reserva		:= null;
end if;

if (NEW.nr_atendimento is not null) and (OLD.nr_atendimento is not null) and (NEW.nr_atendimento	<> OLD.nr_atendimento) then
	
	select  max(cd_pessoa_fisica)
	into STRICT	cd_pessoa_atend_ant_w
	from	atendimento_paciente
	where	nr_atendimento = OLD.nr_atendimento;
	
	select  max(cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_atual_w
	from	atendimento_paciente
	where	nr_atendimento = NEW.nr_atendimento;
	
	if (cd_pessoa_fisica_atual_w <> cd_pessoa_atend_ant_w) then -- Confirmar se nao se trata de um agrupamento de atendimentos do mesmo paciente.
			--'Esta unidade ja possui um atendimento vinculado. Nao pode estar vinculada a um novo atendimento.

		CALL wheb_mensagem_pck.exibir_mensagem_abort(182885);
	end if;
end if;

if ( NEW.ie_status_unidade <> OLD.ie_status_unidade) and ( NEW.nr_atendimento is not null) and ( OLD.ie_status_unidade = 'P') and ( NEW.ie_status_unidade = 'L') then
	--'Nao e possivel  colocar para Livre um leito que possui atendimento!'

		insert into log_mov(	DT_ATUALIZACAO,
				NM_USUARIO,
				CD_LOG,
				DS_LOG)
		values (	LOCALTIMESTAMP,
				NEW.nm_usuario,
				55833,
				' '||SUBSTR(OBTER_DESC_EXPRESSAO(326147), 1, 4000)||' '||NEW.nr_atendimento||
				' '||SUBSTR(OBTER_DESC_EXPRESSAO(298359), 1, 4000)||'/'||SUBSTR(OBTER_DESC_EXPRESSAO(705911), 1, 4000)||': '||NEW.cd_setor_atendimento||'/'||NEW.cd_unidade_basica||'/'||NEW.cd_unidade_compl||
				' '||SUBSTR(OBTER_DESC_EXPRESSAO(298822), 1, 4000)||': '|| ds_origem_w);
	
end if;

if ( NEW.ie_status_unidade <> OLD.ie_status_unidade) and ( NEW.nr_atendimento is not null) and ( OLD.ie_status_unidade = 'P') and ( NEW.ie_status_unidade = 'O') then
	--'Nao e possivel realizar o isolamento de um leito que possui paciente!'

	CALL wheb_mensagem_pck.exibir_mensagem_abort(261037);
end if;

if ( NEW.ie_status_unidade <> OLD.ie_status_unidade) and ( NEW.nr_atendimento is not null) and ( OLD.ie_status_unidade = 'P') and ( NEW.ie_status_unidade = 'G') then
	--'Nao e possivel colocar um leito em Aguardando Higienizacao, quando existe paciente no mesmo!'

	CALL wheb_mensagem_pck.exibir_mensagem_abort(272433);
end if;

ie_consiste_leito_hig_alta_w := Obter_param_Usuario(3111, 243, obter_perfil_ativo, NEW.nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_consiste_leito_hig_alta_w);
ie_serv_aguardando_checklist_w := Obter_param_Usuario(44, 273, obter_perfil_ativo, NEW.nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_serv_aguardando_checklist_w);
ie_serv_aguard_hig_w := Obter_param_Usuario(44, 274, obter_perfil_ativo, NEW.nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_serv_aguard_hig_w);

if (ie_consiste_leito_hig_alta_w = 'S') and
	((OLD.ie_status_unidade = 'A') or /*Verifica se  o status antigo e 'Em processo de alta'*/
	 (OLD.ie_status_unidade = 'H')) and /*Verifica se  o status antigo e 'Em higienizacao'*/
	(NEW.ie_status_unidade = 'P') then
	select	max(nr_atend_alta)
	into STRICT	nr_atend_w
	from	atendimento_paciente
	where	nr_atendimento	= NEW.nr_atendimento;

	select   max(nr_atendimento)
	into STRICT	 nr_atendimento_ww
	from	 unidade_atend_hist
	where	 NEW.nr_seq_interno 		= nr_seq_unidade
	and	 nr_sequencia			= (SELECT   max(x.nr_sequencia) 
						  from	    unidade_atend_hist x
						  where	    NEW.nr_seq_interno		= x.nr_seq_unidade
						  and	    x.nr_atendimento is not null);
	
	if	((OLD.nr_atendimento	<> nr_atend_w) or coalesce(nr_atend_w,0) = 0) and (NEW.nr_atendimento 	<> nr_atendimento_ww) then -- Nao vai aparecer a mensagem caso se trate de um estorno!
		if (OLD.ie_status_unidade = 'A') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(215401); --Esta Unidade esta em processo de alta, favor entrar em contato com o setor de TI'
		end if;
		
		if (OLD.ie_status_unidade = 'H') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(220216); --Esta Unidade esta em higienizacao, favor entrar em contato com o setor de TI'
		end if;
	end if;
end if;

select	max(cd_estabelecimento_base)
into STRICT	cd_estabelecimento_w
from	setor_atendimento
where	cd_setor_atendimento = NEW.cd_setor_atendimento;

select 	coalesce(max(ie_per_reserva_gv_reservado),'N'),
	coalesce(max(IE_CONSISTIR_IDADE),'N')
into STRICT	ie_per_reserva_gv_reservado_w,
	ie_consistir_idade_w
from	parametro_atendimento
where	cd_estabelecimento = cd_estabelecimento_w;

/*Edilson em 29/03/05 OS 16677*/


if (NEW.ie_status_unidade = 'P') and (NEW.nr_atendimento is null) and (OLD.nr_atendimento is not null) then
	NEW.ie_status_unidade	:= 'L';
end if;

if (NEW.ie_inativar_leito_temp = 'S') and (NEW.ie_temporario = 'S') and (NEW.ie_status_unidade <> OLD.ie_status_unidade) and (NEW.ie_status_unidade = 'L') and (NEW.nr_seq_unid_bloq is null) then
	NEW.ie_situacao := 'I';
end if;

if (NEW.ie_status_unidade <> 'H') then
	NEW.qt_tempo_prev_higien	:= null;
end if;

if 	(OLD.ie_status_unidade = 'P' AND NEW.ie_status_unidade = 'P') and /* se o status ja era 'P', e continua igual */
	(OLD.ie_situacao <> 'I' AND NEW.ie_situacao = 'I') then           /*  e a situacao era ativa, e esta passando para inativa */


	select 	substr(obter_pessoa_atendimento(OLD.nr_atendimento, 'N'),1,200)
	into STRICT	nm_paciente_w
	;

	--'Nao e possivel inativar o leito X*, pois o paciente "Y", atendimento "Z" esta  alocado no mesmo.'

	CALL wheb_mensagem_pck.exibir_mensagem_abort(268810,	'CD_UNIDADE='||OLD.cd_unidade_basica||' '||OLD.cd_unidade_compl|| ';' ||
							'NM_PACIENTE='||nm_paciente_w|| ';' ||
							'NR_ATENDIMENTO='||OLD.nr_atendimento);
end if;	

if 	(OLD.ie_situacao = 'I' AND NEW.ie_situacao = 'I') and                  /* se a situacao ja era inativa, e continua igual */

	(OLD.ie_status_unidade <> 'P' AND NEW.ie_status_unidade = 'P') then    /* se o status era <> 'P', e esta passando para 'P' */
	--'O leito X* esta inativo, nao pode receber um paciente.'

	wheb_mensagem_pck.exibir_mensagem_abort(268811,'CD_UNIDADE='||OLD.cd_unidade_basica||' '||OLD.cd_unidade_compl);	
end if;

if (NEW.nr_atendimento is not null) and (NEW.nr_atendimento <> OLD.nr_atendimento) and (NEW.ie_status_unidade = 'P') and (OLD.ie_status_unidade = 'H') then
	--'Esse leito nao pode receber um paciente pois esta em Higienizacao.

	CALL wheb_mensagem_pck.exibir_mensagem_abort(210478);
		
end if;

if (NEW.ie_status_unidade <> OLD.ie_status_unidade) then
	NEW.ie_status_ant_unidade := OLD.ie_status_unidade;
	
	select	coalesce(max(nr_seq_higienizacao),1)
	into STRICT	nr_seq_higienizacao_w
	from	unidade_hig_hist
	where	nr_seq_unidade = NEW.nr_seq_interno
	and		ie_status_unidade = 'L';
	
	if (NEW.ie_status_unidade = 'L') then
		nr_seq_higienizacao_w 	:= nr_seq_higienizacao_w + 1;
	end if;

	if	((coalesce(nr_seq_higienizacao_w,0) > 0) and (coalesce(NEW.nr_seq_interno,0) > 0)) then
		insert	into unidade_hig_hist(
						nr_sequencia,
						dt_atualizacao, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						nr_seq_unidade, 
						dt_historico, 
						ie_status_unidade, 
						nr_seq_higienizacao, 
						nr_atendimento)
					values (nextval('unidade_hig_hist_seq'),
						LOCALTIMESTAMP,
						NEW.nm_usuario,
						LOCALTIMESTAMP,
						NEW.nm_usuario,
						NEW.nr_seq_interno,
						LOCALTIMESTAMP,
						NEW.ie_status_unidade,
						nr_seq_higienizacao_w,
						coalesce(NEW.nr_atendimento,null)
						);
	end if;	
end if;

if (NEW.ie_status_unidade <> OLD.ie_status_unidade) and (NEW.ie_status_unidade = 'P') then
	NEW.IE_TIPO_RESERVA := null;
end if;

cd_paciente_reserva_w	:= NEW.cd_paciente_reserva;

if	((NEW.ie_status_unidade = 'L') and (NEW.cd_paciente_reserva is null) and (NEW.nm_pac_reserva is null)) or
	(NEW.ie_status_unidade = 'L' AND ie_per_reserva_gv_reservado_w = 'S') then
	BEGIN
	NEW.nr_atendimento		:= null;
	NEW.dt_entrada_unidade		:= null;
	NEW.cd_paciente_reserva	:= null;
	NEW.nm_pac_reserva		:= null;
	NEW.nm_usuario_reserva		:= null;
	NEW.cd_motivo_interdicao	:= null;
	NEW.nr_atendimento_acomp	:= null;
	
	cd_pessoa_reserva_w	:= OBTER_NOME_PF_RESERVA_GV(NEW.cd_unidade_basica,NEW.cd_unidade_compl,NEW.cd_setor_atendimento);
	nm_pac_reserva_w	:= null;
	
	if (cd_pessoa_reserva_w is null) then
		select 	max(nm_pac_reserva)
		into STRICT	nm_pac_reserva_w
		from	fila_espera_reserva
		where	nr_sequencia = (SELECT  coalesce(min(nr_sequencia),0)
					from	fila_espera_reserva
					where	ie_status  = 'R'
					and	cd_unidade_basica = NEW.cd_unidade_basica
					and	cd_unidade_compl = NEW.cd_unidade_compl
					and	cd_setor_atendimento = NEW.cd_setor_atendimento);
	end if;
	
	update	fila_espera_reserva
	set	ie_status = 'U'
	where (cd_pessoa_reserva = cd_pessoa_reserva_w or nm_pac_reserva = nm_pac_reserva_w)
	and 	ie_status = 'R';
	
	
	if	((cd_pessoa_reserva_w <> 'X') or (cd_pessoa_reserva_w is null and nm_pac_reserva_w is not null))and (ie_per_reserva_gv_reservado_w = 'S') then
		BEGIN

	--	select 	max(cd_pessoa_fisica)

	--	into	cd_pessoa_reserva_w

	--	from	gestao_vaga

	--	where	nr_sequencia = nr_seq_vaga_w;

		
		NEW.ie_status_unidade		:= 'R';
		NEW.cd_paciente_reserva	:= cd_pessoa_reserva_w;	
		NEW.nm_usuario_reserva		:= NEW.nm_usuario;
		NEW.nm_pac_reserva		:= nm_pac_reserva_w;
		end;
	end if;
	end;
end if;

if (OLD.ie_status_unidade = 'I') and (NEW.ie_status_unidade <> 'I') and (OLD.ie_interditado_radiacao = 'S') then
	NEW.ie_interditado_radiacao := 'N';
end if;

if (NEW.nr_atendimento is not null) and (OLD.nr_atendimento is null) then
	if (NEW.qt_idade_minima is not null) or (NEW.qt_idade_maxima is not null) then
		BEGIN
		if (obter_funcao_ativa not in (916,3111,3113)) or (ie_consistir_idade_w <> 'A') then
			select	a.cd_pessoa_fisica,
				b.dt_nascimento,
				coalesce(b.dt_obito,LOCALTIMESTAMP),
				a.cd_estabelecimento
			into STRICT	cd_pessoa_fisica_w,
				dt_nascimento_w,
				dt_obito_w,
				cd_estabelecimento_w
			from	pessoa_fisica b,
				atendimento_paciente a
			where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
			and	a.nr_atendimento	= NEW.nr_atendimento;
			
			select	obter_idade(dt_nascimento_w,dt_obito_w,'A')
			into STRICT	qt_idade_w
			;

			if (NEW.qt_idade_minima is not null) and (NEW.qt_idade_minima > qt_idade_w) then
				--'A idade minima permitida para o leito e '||to_char(:new.qt_idade_minima)||' ano(s).

				CALL wheb_mensagem_pck.exibir_mensagem_abort(182886,'QT_IDADE_MINIMA='||NEW.qt_idade_minima);
			end if;

			if (NEW.qt_idade_maxima is not null) and (NEW.qt_idade_maxima < qt_idade_w) then
				--'A idade maxima permitida para o leito e '||to_char(:new.qt_idade_maxima)||' ano(s).

				CALL wheb_mensagem_pck.exibir_mensagem_abort(182887,'QT_IDADE_MAXIMA='||NEW.qt_idade_maxima);
			end if;
		end if;
		
		end;
	end if;
	ds_origem_w := substr(dbms_utility.format_call_stack,1,1800);
	insert into log_mov(	DT_ATUALIZACAO,
				NM_USUARIO,
				CD_LOG,
				DS_LOG)
		values (	LOCALTIMESTAMP,
				NEW.nm_usuario,
				55829,
				' '||SUBSTR(OBTER_DESC_EXPRESSAO(326147), 1, 4000)||' '||NEW.nr_atendimento||
				' '||SUBSTR(OBTER_DESC_EXPRESSAO(298359), 1, 4000)||'/'||SUBSTR(OBTER_DESC_EXPRESSAO(705911), 1, 4000)||': '||NEW.cd_setor_atendimento||'/'||NEW.cd_unidade_basica||'/'||NEW.cd_unidade_compl||
				' '||SUBSTR(OBTER_DESC_EXPRESSAO(298822), 1, 4000)||': '|| ds_origem_w
				);
	
	
	
end if;

if (NEW.ie_status_unidade = 'L')
and	((OLD.ie_status_unidade <> 'L') or (OLD.ie_status_unidade is null))
and (NEW.nr_atendimento is not null) then
				
	-- 'O Leito nao pode ir para o status "Livre" enquanto estiver vinculado a um atendimento!

	CALL wheb_mensagem_pck.exibir_mensagem_abort(182884);
	
end if;

if	((NEW.cd_paciente_reserva is null AND OLD.cd_paciente_reserva is not null) or
	 (NEW.nm_pac_reserva is null AND OLD.nm_pac_reserva is not null)) and (NEW.ds_observacao is not null) then
	NEW.ds_observacao		:= null;	
end if;

if (NEW.cd_convenio_reserva is null) and (OLD.cd_convenio_reserva is not null) and (NEW.ds_observacao is not null) then
	NEW.ds_observacao		:= null;
end if;

if 	((NEW.cd_paciente_reserva is null AND OLD.cd_paciente_reserva is not null) or
	 (NEW.nm_pac_reserva is null AND OLD.nm_pac_reserva is not null) 		or
	 (NEW.cd_convenio_reserva is null AND OLD.cd_convenio_reserva is not null)) and (NEW.nr_seq_motivo_reserva is not null) then	
	NEW.nr_seq_motivo_reserva := null;	
end if;

/* Matheus OS 57361 em 18/06/2007 */


select	count(*)
into STRICT	qt_registro_w
from	unidade_atend_prev;

if (qt_registro_w > 0) then
	BEGIN
	/* Matheus OS 64383 06/08/2007 este select*/


	select	coalesce(max(ie_paciente_isolado),'N')
	into STRICT	ie_paciente_isolado_w
	from	atendimento_paciente
	where	nr_atendimento = OLD.nr_atendimento;
	if (NEW.ie_status_unidade	<> OLD.ie_status_unidade) and
		((OLD.ie_status_unidade 	= 'O') or (ie_paciente_isolado_w = 'S')) then
		CALL Man_gerar_OS_Planej_Evento(NEW.cd_setor_atendimento, NEW.cd_unidade_basica, NEW.cd_unidade_compl, 'L');
	elsif (NEW.ie_status_unidade	<> OLD.ie_status_unidade) and (NEW.ie_status_unidade in ('L','H','A')) then 	/* Matheus OS 57361 21/06/07 Acrescentado Higienizacao e processo de alta*/
	
		CALL Man_gerar_OS_Planej_Evento(NEW.cd_setor_atendimento, NEW.cd_unidade_basica, NEW.cd_unidade_compl, 'B');
	end	if;
	end;
end if;

if (NEW.ie_situacao		<> OLD.ie_situacao) or (NEW.ie_temporario		<> OLD.ie_temporario) or (coalesce(NEW.cd_motivo_interdicao,0)	<> coalesce(OLD.cd_motivo_interdicao,0)) or (NEW.ie_status_unidade	<> OLD.ie_status_unidade) then
	
	select	nextval('unidade_atend_hist_seq')
	into STRICT	nr_sequencia_w
	;
	
	if (NEW.nr_atendimento is null) then
		select	max(nr_sequencia)
		into STRICT	nr_seq_hist_w
		from	unidade_atend_hist
		where	nr_seq_unidade = NEW.nr_seq_interno
		and	dt_historico = (SELECT	max(dt_historico)
					from	unidade_atend_hist
					where	nr_seq_unidade	= NEW.nr_seq_interno);
		
		select	max(nr_atendimento)
		into STRICT	nr_atendimento_w
		from	unidade_atend_hist
		where	nr_sequencia = nr_seq_hist_w;
	else
		nr_atendimento_w:= NEW.nr_atendimento;
	end if;
	
	nm_usuario_w	:= NEW.nm_usuario;
	if (NEW.nm_usuario_higienizacao is not null) and
		((NEW.ie_status_unidade = 'H') or (OLD.ie_status_unidade = 'H')) then
		nm_usuario_w	:= NEW.nm_usuario_higienizacao;
	end if;

	if (NEW.ds_observacao <> OLD.ds_observacao) or
		(NEW.ds_observacao is not null AND OLD.ds_observacao is null) then
		ds_observacao_w	:= NEW.ds_observacao;	
	else
		ds_observacao_w := '';
	end if;	
		
	select	max(nr_sequencia)
	into STRICT	nr_seq_hist_update_w
	from	unidade_atend_hist	
	where	nr_seq_unidade = NEW.nr_seq_interno
	and		dt_fim_historico is null;
	
	select 	max(nr_atendimento)
	into STRICT	nr_atendimento_w
	from 	atendimento_paciente
	where 	nr_atendimento = nr_atendimento_w;

	insert into unidade_atend_hist(nr_sequencia, nr_seq_unidade, dt_historico,
		dt_atualizacao, nm_usuario, ie_situacao,
		ie_status_unidade, cd_motivo_interdicao,
		ie_temporario, dt_fim_historico, nr_atendimento, ds_observacao,nm_usuario_nrec, cd_funcao, nr_seq_mot_isol )
	values (nr_sequencia_w, NEW.nr_seq_interno, LOCALTIMESTAMP,
		LOCALTIMESTAMP, coalesce(nm_usuario_w, 'TASY'), NEW.ie_situacao,
		coalesce(NEW.ie_status_unidade,'L'), CASE WHEN NEW.ie_status_unidade='I' THEN NEW.cd_motivo_interdicao  ELSE null END ,
		NEW.ie_temporario, null, CASE WHEN NEW.ie_status_unidade='R' THEN null WHEN NEW.ie_status_unidade='I' THEN null  ELSE nr_atendimento_w END , ds_observacao_w,NEW.nm_usuario, obter_funcao_ativa,
		NEW.nr_seq_mot_isol);

	update	unidade_atend_hist
	set		dt_fim_historico 	= LOCALTIMESTAMP,
			nm_usuario 			= NEW.nm_usuario,
			cd_funcao_fim 		= obter_funcao_ativa
	where	nr_seq_unidade 		= NEW.nr_seq_interno
	and		dt_fim_historico 	is null
	and		((NEW.ie_status_unidade <> OLD.ie_status_unidade)
	or (NEW.ie_situacao	<> OLD.ie_situacao)
	or (NEW.ie_temporario	<> OLD.ie_temporario)
	or (coalesce(NEW.cd_motivo_interdicao,0) <> coalesce(OLD.cd_motivo_interdicao,0)))
	and		nr_sequencia		= nr_seq_hist_update_w;
	if (OLD.ie_status_unidade is not null) and (NEW.ie_status_unidade is not null) and (OLD.ie_status_unidade <> 'G')	and (NEW.ie_status_unidade = 'G') 	then	
		NEW.dt_aguard_higienizacao := LOCALTIMESTAMP;	
	elsif (coalesce(OLD.nr_atendimento,0) <> 0) and (coalesce(NEW.nr_atendimento,0) = 0) then
		NEW.dt_aguard_higienizacao := null;		
	end if;
end if;

if	((NEW.dt_higienizacao <> OLD.dt_higienizacao) or (OLD.dt_higienizacao is null)) and (NEW.dt_higienizacao is not null) and (NEW.dt_inicio_higienizacao is not null) then
	select	nextval('unid_atend_higienizacao_seq')
	into STRICT	nr_sequencia_w
	;
	insert	into unid_atend_higienizacao(nr_sequencia, nr_seq_unidade,
		dt_atualizacao, nm_usuario,
		dt_inicio, dt_fim, ie_tipo_limpeza, nm_usuario_nrec, dt_atualizacao_nrec)
	values (nr_sequencia_w, NEW.nr_seq_interno,
		NEW.dt_atualizacao,	NEW.nm_usuario, 
		NEW.dt_inicio_higienizacao, NEW.dt_higienizacao, NEW.ie_tipo_limpeza, NEW.nm_usuario, LOCALTIMESTAMP);
end if;

select max(nr_atendimento_acomp),
       max(cd_paciente_reserva),
       max(nm_paciente_reserva)
into STRICT   nr_atendimento_acomp_temp_w,
       cd_paciente_reserva_temp_w,
       nm_paciente_reserva_temp_w
from   w_unid_atend_temp
where  nr_seq_interno = NEW.nr_seq_interno;

if (nr_atendimento_acomp_temp_w is not null) and (NEW.nr_atendimento_acomp is null) then
   update	atendimento_acompanhante
   set		dt_saida	   = LOCALTIMESTAMP
   where	nr_atendimento	   = nr_atendimento_acomp_temp_w
   and (cd_pessoa_fisica  = cd_paciente_reserva_temp_w or nm_acompanhante = nm_paciente_reserva_temp_w)
   and		dt_saida is null;
end if;

if (coalesce(NEW.nr_atendimento_acomp,0) <> coalesce(OLD.nr_atendimento_acomp,0)) then
	if (NEW.nr_atendimento_acomp is not null) and (OLD.nr_atendimento_acomp is null) then


		select	coalesce(max(nr_acompanhante),0) + 1
		into STRICT	nr_acompanhante_w
		from	atendimento_acompanhante
		where	nr_atendimento	= NEW.nr_atendimento_acomp;
		
		select	max(ie_alojamento)
		into STRICT	ie_alojamento_w
		from	atendimento_acompanhante
		where	nr_atendimento	= NEW.nr_atendimento_acomp;
		
		select 	count(*)
		into STRICT	qt_itens_w
		from	atendimento_acompanhante
		where	nr_atendimento = NEW.nr_atendimento_acomp
		and	dt_acompanhante = LOCALTIMESTAMP;
		if (qt_itens_w = 0) then
		
		    select  count(*)
		    into STRICT    qt_itens_w
		    from    atendimento_acompanhante
		    where   nr_atendimento    = NEW.nr_atendimento_acomp
		    and     cd_pessoa_fisica  = NEW.cd_paciente_reserva
		    and     dt_saida is null;
		
			if (coalesce(qt_itens_w,0) = 0)then			
				insert into atendimento_acompanhante(
							 nr_atendimento,
							 dt_acompanhante,
							 nr_acompanhante,
							 dt_atualizacao, 
							 nm_usuario, 
							 cd_pessoa_fisica,
							 nr_seq_interno,
							 dt_atualizacao_nrec,
							 nm_usuario_nrec,
							 nm_acompanhante,
							 ie_alojamento)
				values (	NEW.nr_atendimento_acomp, 
							LOCALTIMESTAMP, 
							nr_acompanhante_w,
							LOCALTIMESTAMP, 
							NEW.nm_usuario, 
							NEW.cd_paciente_reserva,
							NEW.nr_seq_interno,
							LOCALTIMESTAMP,
							NEW.nm_usuario,
							NEW.nm_pac_reserva,
							ie_alojamento_w);
			end if;
		end if;					
		
	
	elsif (NEW.nr_atendimento_acomp is null) and (OLD.nr_atendimento_acomp is not null) then
		update	atendimento_acompanhante
		set	dt_saida	= LOCALTIMESTAMP
		where	nr_atendimento	= OLD.nr_atendimento_acomp
		and (cd_pessoa_fisica	= OLD.cd_paciente_reserva or nm_acompanhante = OLD.nm_pac_reserva)
		and	dt_saida is null;
	end if;
end if;

/*if	(:new.nr_atendimento is null) and
	(:old.nr_atendimento is not null) then
	avisar_higienizacao_camareira(:new.cd_setor_atendimento, :new.cd_unidade_basica, :new.cd_unidade_compl);
end if;*/


if	((coalesce(OLD.cd_paciente_reserva,-1) <> coalesce(NEW.cd_paciente_reserva,-1)) and (NEW.cd_paciente_reserva is not null)) or
	((coalesce(OLD.nm_pac_reserva,-1) <> coalesce(NEW.nm_pac_reserva,-1)) and (NEW.nm_pac_reserva is not null)) then
	insert into reserva_leito_hist(
		nr_sequencia,
		cd_pessoa_fisica,
 		dt_reserva,
 		nm_usuario_reserva,
		nr_seq_interno,
		NM_USUARIO,
		nm_pac_reserva)
	values (
		nextval('reserva_leito_hist_seq'),
		NEW.cd_paciente_reserva,
		LOCALTIMESTAMP,
		NEW.nm_usuario_reserva,
		NEW.nr_seq_interno,
		NEW.NM_USUARIO,
		NEW.nm_pac_reserva);
end if;

if (coalesce(OLD.cd_convenio_reserva,-1) <> coalesce(NEW.cd_convenio_reserva,-1)) and (NEW.cd_convenio_reserva is not null) then
	insert into reserva_leito_hist(
		nr_sequencia,
		cd_convenio,
 		dt_reserva,
 		nm_usuario_reserva,
		nr_seq_interno,
		NM_USUARIO,
		nm_pac_reserva)
	values (
		nextval('reserva_leito_hist_seq'),
		NEW.cd_convenio_reserva,
		LOCALTIMESTAMP,
		NEW.nm_usuario_reserva,
		NEW.nr_seq_interno,
		NEW.NM_USUARIO,
		NEW.nm_pac_reserva);
end if;

if	((coalesce(OLD.cd_paciente_reserva,-1) <> coalesce(NEW.cd_paciente_reserva,-1)) and (NEW.cd_paciente_reserva is null)) and
	((coalesce(OLD.nm_pac_reserva,-1) <> coalesce(NEW.nm_pac_reserva,-1)) and (NEW.nm_pac_reserva is null)) and (OLD.nm_usuario_reserva is not null) then
	insert into reserva_leito_hist(
		nr_sequencia,
		cd_pessoa_fisica,
 		dt_reserva,
 		nm_usuario_reserva,
		nr_seq_interno,
		dt_liberacao,
		NM_USUARIO,
		nm_pac_reserva)
	values (
		nextval('reserva_leito_hist_seq'),
		OLD.cd_paciente_reserva,
		LOCALTIMESTAMP,
		OLD.nm_usuario_reserva,
		OLD.nr_seq_interno,
		LOCALTIMESTAMP,
		NEW.NM_USUARIO,
		OLD.nm_pac_reserva);
end if;

if (coalesce(OLD.cd_convenio_reserva,-1) <> coalesce(NEW.cd_convenio_reserva,-1)) and (NEW.cd_convenio_reserva is null)  and (OLD.nm_usuario_reserva is not null) then
	insert into reserva_leito_hist(
		nr_sequencia,
		cd_convenio,
 		dt_reserva,
 		nm_usuario_reserva,
		nr_seq_interno,
		NM_USUARIO,
		dt_liberacao,
		nm_pac_reserva)
	values (
		nextval('reserva_leito_hist_seq'),
		OLD.cd_convenio_reserva,
		LOCALTIMESTAMP,
		OLD.nm_usuario_reserva,
		OLD.nr_seq_interno,
		NEW.NM_USUARIO,
		LOCALTIMESTAMP,
		OLD.nm_pac_reserva);
end if;


/* PORTARIA N 312 - Jerusa OS 90025 - 05/05/2008 */


/* Parametro[92] - Utiliza portaria n 312 (Menu do sistema) */


select	coalesce(max(obter_valor_param_usuario(0, 92, obter_perfil_ativo, NEW.nm_usuario, 0)), 'N')
into STRICT	ie_utiliza_portaria_w
;

if (ie_utiliza_portaria_w = 'S') then
	BEGIN

	select	count(*)
	into STRICT	qt_existe_classif_w
	from	unidade_atend_classif_p312
	where	nr_seq_unid_atend = NEW.nr_seq_interno;

	if (qt_existe_classif_w > 0) then
		BEGIN
		/* Classificacao da unidade de atendimento */


		if (NEW.ie_temporario = 'S') and (OLD.ie_temporario = 'N') then
			BEGIN
			select	count(*)
			into STRICT	qt_classif_w
			from	unidade_atend_classif_p312
			where	nr_seq_unid_atend = NEW.nr_seq_interno
			and	ie_classif_p312 in (4,5)
			and	dt_fim_classif is null;

			if (qt_classif_w > 0) then
				update	unidade_atend_classif_p312
				set	dt_fim_classif	= LOCALTIMESTAMP,
					nm_usuario	= NEW.nm_usuario
				where	nr_seq_unid_atend = NEW.nr_seq_interno
				and	ie_classif_p312 in (4,5)
				and	dt_fim_classif is null;
			end if;

			insert into unidade_atend_classif_p312(nr_sequencia,
				nr_seq_unid_atend,
				ie_classif_p312,
				dt_inicio_classif,
				dt_atualizacao,
				nm_usuario)
			values (nextval('unidade_atend_classif_p312_seq'),
				NEW.nr_seq_interno,
				22,
				LOCALTIMESTAMP,
				LOCALTIMESTAMP,
				NEW.nm_usuario);
			end;
		elsif (NEW.ie_temporario = 'N') then
			BEGIN
			if (OLD.ie_temporario = 'S') then
				BEGIN
				select	count(*)
				into STRICT	qt_classif_w
				from	unidade_atend_classif_p312
				where	nr_seq_unid_atend = NEW.nr_seq_interno
				and	ie_classif_p312 = 22
				and	dt_fim_classif is null;
		
				if (qt_classif_w > 0) then
					update	unidade_atend_classif_p312
					set	dt_fim_classif	= LOCALTIMESTAMP,
						nm_usuario	= NEW.nm_usuario
					where	nr_seq_unid_atend = NEW.nr_seq_interno
					and	ie_classif_p312 = 22
					and	dt_fim_classif is null;
				end if;
				end;
			end if;
			if (NEW.ie_situacao = 'A') then
				BEGIN
				if (OLD.ie_temporario = 'N') and (OLD.ie_situacao = 'I') then
					BEGIN
					select	count(*)
					into STRICT	qt_classif_w
					from	unidade_atend_classif_p312
					where	nr_seq_unid_atend = NEW.nr_seq_interno
					and	ie_classif_p312 = 4
					and	dt_fim_classif is null;
	
					if (qt_classif_w > 0) then
						update	unidade_atend_classif_p312
						set	dt_fim_classif	= LOCALTIMESTAMP,
							nm_usuario	= NEW.nm_usuario
						where	nr_seq_unid_atend = NEW.nr_seq_interno
						and	ie_classif_p312 = 4
						and	dt_fim_classif is null;
					end if;
					end;
				end if;
			
				select	count(*)
				into STRICT	qt_classif_w
				from	unidade_atend_classif_p312
				where	nr_seq_unid_atend = NEW.nr_seq_interno
				and	ie_classif_p312 in (4,5)
				and	dt_fim_classif is not null;

				if (qt_classif_w > 0) then
					insert into unidade_atend_classif_p312(nr_sequencia,
						nr_seq_unid_atend,
						ie_classif_p312,
						dt_inicio_classif,
						dt_atualizacao,
						nm_usuario)
					SELECT	nextval('unidade_atend_classif_p312_seq'),
						NEW.nr_seq_interno,
						vl_dominio,
						LOCALTIMESTAMP,
						LOCALTIMESTAMP,
						NEW.nm_usuario
					from	valor_dominio_v
					where	cd_dominio = 2175
					and	vl_dominio in (4,5);
				end if;
				end;
			elsif (NEW.ie_situacao = 'I') then
				BEGIN
				if (OLD.ie_temporario = 'N') and (OLD.ie_situacao = 'A') then
					BEGIN
					select	count(*)
					into STRICT	qt_classif_w
					from	unidade_atend_classif_p312
					where	nr_seq_unid_atend = NEW.nr_seq_interno
					and	ie_classif_p312 in (4,5)
					and	dt_fim_classif is null;

					if (qt_classif_w > 0) then
						update	unidade_atend_classif_p312
						set	dt_fim_classif	= LOCALTIMESTAMP,
							nm_usuario	= NEW.nm_usuario
						where	nr_seq_unid_atend = NEW.nr_seq_interno
						and	ie_classif_p312 in (4,5)
						and	dt_fim_classif is null;
					end if;
					end;
				end if;

				select	count(*)
				into STRICT	qt_classif_w
				from	unidade_atend_classif_p312
				where	nr_seq_unid_atend = NEW.nr_seq_interno
				and	ie_classif_p312 = 4
				and	dt_fim_classif is not null;

				if (qt_classif_w > 0) then
					insert into unidade_atend_classif_p312(nr_sequencia,
						nr_seq_unid_atend,
						ie_classif_p312,
						dt_inicio_classif,
						dt_atualizacao,
						nm_usuario)
					values (nextval('unidade_atend_classif_p312_seq'),
						NEW.nr_seq_interno,
						4,
						LOCALTIMESTAMP,
						LOCALTIMESTAMP,
						NEW.nm_usuario);
				end if;
				end;
			end if;		
			end;
		end if;
		end;
	end if;

	/* Status da unidade de atendimento */


	if (NEW.ie_situacao = 'I') or (NEW.ie_status_unidade in ('I', 'O', 'L', 'M', 'P', 'E')) or (NEW.nr_atendimento is not null) then
		BEGIN
		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_unid_status_p312_w
		from	unidade_atend_status_p312
		where	nr_seq_unid_atend = NEW.nr_seq_interno
		and	dt_final is null;
	
		if (NEW.ie_status_unidade = 'L') and (NEW.ie_situacao <> 'I') then
			ie_status_unidade_p312_w	:= 'LV';
		elsif	((NEW.ie_status_unidade in ('I', 'O', 'E')) and (NEW.ie_situacao <> 'I')) then
			ie_status_unidade_p312_w	:= 'LB';
		elsif (NEW.ie_status_unidade in ('M', 'P')) or (NEW.nr_atendimento is not null) and (NEW.ie_situacao <> 'I') then
			ie_status_unidade_p312_w	:= 'LO';
		end if;

		if (NEW.ie_situacao = 'I') then
			ie_status_unidade_p312_w	:= 'LD';
		end if;
	
		ie_status_unid_p312_w	:= ' ';
		if (nr_seq_unid_status_p312_w > 0) then
			BEGIN
			select	ie_status_unidade
			into STRICT	ie_status_unid_p312_w
			from	unidade_atend_status_p312
			where	nr_sequencia = nr_seq_unid_status_p312_w
			and	dt_final is null;
	
			if (ie_status_unidade_p312_w is not null) and (ie_status_unidade_p312_w <> ie_status_unid_p312_w) then
				update	unidade_atend_status_p312
				set	dt_final = LOCALTIMESTAMP
				where	nr_sequencia = nr_seq_unid_status_p312_w;
			end if;
			end;
		end if;

		if (ie_status_unidade_p312_w is not null) and (ie_status_unidade_p312_w <> ie_status_unid_p312_w) then
			insert into unidade_atend_status_p312(
				nr_sequencia,
				ie_status_unidade,
				dt_final,
				dt_inicio,
				dt_atualizacao,
				nm_usuario,
				nr_seq_unid_atend)
			values (
				nextval('unidade_atend_status_p312_seq'),
				ie_status_unidade_p312_w,
				null,
				LOCALTIMESTAMP,
				LOCALTIMESTAMP,
				NEW.nm_usuario,
				NEW.nr_seq_interno);
		end if;
		end;
	end if;
	end;
end if;

if (coalesce(NEW.nr_atendimento,0) <> OLD.nr_atendimento) then

	select	max(dt_alta) --Sair dos grupos apenas ao receber alta
	into STRICT	dt_alta_w
	from	atendimento_paciente
	where	nr_atendimento	= OLD.nr_atendimento;
	
	
	select	coalesce(max('S'),'N')
	into STRICT	ie_grupo_w
	from	pac_grupo_atend
	where	nr_atendimento = OLD.nr_atendimento;
	
	if (ie_grupo_w = 'S') and (dt_alta_w is not null )then
		update	pac_grupo_atend
		set	dt_saida 	= LOCALTIMESTAMP,
			nm_usuario	= NEW.nm_usuario
		where	nr_atendimento 	= OLD.nr_atendimento;
	end if;

end if;

ie_inativa_leito_w := 	Obter_Valor_Param_Usuario(1,23, obter_perfil_ativo, NEW.nm_usuario,0);

if (ie_inativa_leito_w = 'S') and (NEW.ie_status_unidade = 'I') and (obter_funcao_ativa = 1) then
	NEW.ie_situacao := 'I';
end if;

ie_gera_eritel_w := 	Obter_Valor_Param_Usuario(3111,109, obter_perfil_ativo, NEW.nm_usuario,0);
if	((ie_gera_eritel_w = 'S') or (ie_gera_eritel_w = 'APT')) and (coalesce(NEW.IE_STATUS_UNIDADE, 'X') = 'A') and (NEW.nr_atendimento is null ) and (OLD.nr_atendimento is not null) then
	CALL Insere_W_integracao_eritel(NEW.cd_setor_atendimento,
					NEW.cd_unidade_basica,
					NEW.cd_unidade_compl,
					OLD.nr_atendimento,
					'N',
					NEW.nm_usuario,
					cd_estabelecimento_w);

end if;


ds_origem_w := substr(dbms_utility.format_call_stack,1,1800);
ds_unidade_log_w := substr(SUBSTR(OBTER_DESC_EXPRESSAO(724202), 1, 4000)||' '||ds_origem_w||' - '||SUBSTR(OBTER_DESC_EXPRESSAO(325836), 1, 4000)||':'||NEW.nr_atendimento
		||' '||SUBSTR(OBTER_DESC_EXPRESSAO(298359), 1, 4000)||':'||NEW.cd_setor_atendimento
		||' '||SUBSTR(OBTER_DESC_EXPRESSAO(341592), 1, 4000)||NEW.cd_unidade_basica
		||' '||SUBSTR(OBTER_DESC_EXPRESSAO(341593), 1, 4000)||NEW.cd_unidade_compl
		||' '||SUBSTR(OBTER_DESC_EXPRESSAO(646538), 1, 4000)||':'||PKG_DATE_FORMATERS_TZ.TO_VARCHAR(NEW.dt_entrada_unidade, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)
		||' '||SUBSTR(OBTER_DESC_EXPRESSAO(326269), 1, 4000)||':'||NEW.ie_status_unidade
		||' '||SUBSTR(OBTER_DESC_EXPRESSAO(328225), 1, 4000)||':'||NEW.nm_usuario
		||' '||SUBSTR(OBTER_DESC_EXPRESSAO(345366), 1, 4000)||':'||substr(obter_desc_funcao(obter_funcao_ativa),1,30)
        ||' '||SUBSTR(OBTER_DESC_EXPRESSAO(330290), 1, 4000)||':'||substr(OBTER_DESC_PERFIL(obter_perfil_ativo),1,30)
        ||' '||SUBSTR(OBTER_DESC_EXPRESSAO(328225), 1, 4000)||':'||substr(obter_usuario_ativo,1,30)
        ,1,4000);

insert 	into log_mov(DT_ATUALIZACAO,
		 NM_USUARIO, 
		 CD_LOG, 
		 DS_LOG)
	values (LOCALTIMESTAMP, 
		 NEW.nm_usuario, 
		 55839,
		 ds_unidade_log_w);


if (OLD.nr_atendimento is not null) and (NEW.nr_atendimento is null) then
	NEW.nr_atendimento_ant	:= OLD.nr_atendimento;
end if;

if (OLD.ie_status_unidade is not null) and (OLD.ie_status_unidade <> NEW.ie_status_unidade) then
	CALL gerar_higienizacao_unid_status(LOCALTIMESTAMP, NEW.nm_usuario, null, 'ASL', NEW.nr_seq_interno, OLD.ie_status_unidade, NEW.ie_status_unidade, NEW.cd_setor_atendimento, null, null, NEW.ie_higienizacao);
end if;

if (OLD.ie_situacao  = 'I' and NEW.ie_situacao = 'A') and
   ((NEW.cd_paciente_reserva is not null) or (NEW.nm_pac_reserva is not null)) then
	NEW.cd_paciente_reserva	:= null;
	NEW.nm_pac_reserva		:= null;
	NEW.nm_usuario_reserva		:= null;
end if;

if (ie_serv_aguardando_checklist_w  = 'S') and (NEW.ie_status_unidade = 'A') and (OLD.ie_status_unidade <> 'A') then
	update	sl_unid_atend
	set		ie_status_serv = 'E'
	where	nr_sequencia   = (	SELECT max(nr_sequencia)
								from	sl_unid_atend
								where	nr_seq_unidade = NEW.nr_seq_interno
								and		ie_status_serv <> 'E'
							 );
end if;
							
if (ie_serv_aguard_hig_w = 'S') and (NEW.ie_status_unidade = 'G') and (OLD.ie_status_unidade <> 'G') then
	update	sl_unid_atend
	set		ie_status_serv = 'P'
	where	nr_sequencia   = (	SELECT max(nr_sequencia)
								from	sl_unid_atend
								where	nr_seq_unidade = NEW.nr_seq_interno
								and		ie_status_serv <> 'E');
end if;
	

if	(NEW.ie_status_unidade = 'O' AND OLD.ie_status_unidade <> 'O') or
	(NEW.ie_status_unidade <> 'O' AND OLD.ie_status_unidade = 'O')	then
		ds_origem_w := substr(dbms_utility.format_call_stack,1,1800);
	insert into log_mov(	DT_ATUALIZACAO,
				NM_USUARIO,
				CD_LOG,
				DS_LOG)
		values (	LOCALTIMESTAMP,
				NEW.nm_usuario,
				55830,
				substr(' '||SUBSTR(OBTER_DESC_EXPRESSAO(298822), 1, 4000)||': '|| ds_origem_w||
				' '||SUBSTR(OBTER_DESC_EXPRESSAO(298829), 1, 4000)||': '||OLD.ie_status_unidade||
				' '||SUBSTR(OBTER_DESC_EXPRESSAO(735512), 1, 4000)||': '||NEW.ie_status_unidade||
				' '||SUBSTR(OBTER_DESC_EXPRESSAO(298359), 1, 4000)||'/'||SUBSTR(OBTER_DESC_EXPRESSAO(705911), 1, 4000)||': '||NEW.cd_setor_atendimento||'/'||NEW.cd_unidade_basica||'/'||NEW.cd_unidade_compl,1,2000)
				);

end if;

if (NEW.ie_status_unidade = 'H') and (OLD.ie_status_unidade = 'P')	then
		ds_origem_w := substr(dbms_utility.format_call_stack,1,1800);
	insert into log_tasy(	DT_ATUALIZACAO,
				NM_USUARIO,
				CD_LOG,
				DS_LOG)
		values (	LOCALTIMESTAMP,
				NEW.nm_usuario,
				55831,
				substr(' '||SUBSTR(OBTER_DESC_EXPRESSAO(298822), 1, 4000)||': '|| ds_origem_w||
				' '||SUBSTR(OBTER_DESC_EXPRESSAO(298829), 1, 4000)||': '||OLD.ie_status_unidade||
				' '||SUBSTR(OBTER_DESC_EXPRESSAO(735512), 1, 4000)||': '||NEW.ie_status_unidade||
				' '||SUBSTR(OBTER_DESC_EXPRESSAO(298359), 1, 4000)||'/'||SUBSTR(OBTER_DESC_EXPRESSAO(705911), 1, 4000)||': '||NEW.cd_setor_atendimento||'/'||NEW.cd_unidade_basica||'/'||NEW.cd_unidade_compl,1,2000)
				);
end if;		

if (NEW.ie_status_unidade = 'L') and (OLD.ie_status_unidade = 'P')	then
		ds_origem_w := substr(dbms_utility.format_call_stack,1,1800);
	insert into log_tasy(	DT_ATUALIZACAO,
				NM_USUARIO,
				CD_LOG,
				DS_LOG)
		values (	LOCALTIMESTAMP,
				NEW.nm_usuario,
				55847,
				substr(' '||SUBSTR(OBTER_DESC_EXPRESSAO(298822), 1, 4000)||': '|| ds_origem_w||
				' '||SUBSTR(OBTER_DESC_EXPRESSAO(298829), 1, 4000)||': '||OLD.ie_status_unidade||
				' '||SUBSTR(OBTER_DESC_EXPRESSAO(735512), 1, 4000)||': '||NEW.ie_status_unidade||
				' '||SUBSTR(OBTER_DESC_EXPRESSAO(298359), 1, 4000)||'/'||SUBSTR(OBTER_DESC_EXPRESSAO(705911), 1, 4000)||': '||NEW.cd_setor_atendimento||'/'||NEW.cd_unidade_basica||'/'||NEW.cd_unidade_compl,1,2000)
				);
end if;	


ie_atualizar_gv_w := Obter_param_Usuario(44, 279, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo, ie_atualizar_gv_w);

if (ie_atualizar_gv_w = 'S') and (NEW.ie_status_unidade = 'H') then

	select 	min(nr_sequencia)
	into STRICT	nr_seq_gv_w
	from	gestao_vaga
	where	cd_setor_desejado = NEW.cd_setor_atendimento
	and	cd_unidade_basica = NEW.cd_unidade_basica
	and	cd_unidade_compl  = NEW.cd_unidade_compl
	and	dt_prevista = (	SELECT 	min(dt_prevista)
						from	gestao_vaga
						where	cd_setor_desejado = NEW.cd_setor_atendimento
						and	cd_unidade_basica = NEW.cd_unidade_basica
						and	cd_unidade_compl  = NEW.cd_unidade_compl
						and	dt_prevista >= LOCALTIMESTAMP
						and	ie_status not in ('L','D','C'));-- Desistiu, Cancelada
	
	if (coalesce(nr_seq_gv_w,0) > 0) then
		
		update	gestao_vaga
		set	ie_status = 'L'
		where	nr_sequencia = nr_seq_gv_w;
		
	end if;
end if;


--mmmacedo 603149

ie_atualizar_sts_gv_w  := Obter_param_Usuario(1002, 143, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo, ie_atualizar_sts_gv_w );

if (ie_atualizar_sts_gv_w = 'S') and (NEW.dt_inicio_higienizacao is not null) and (OLD.dt_higienizacao is null) and (NEW.dt_higienizacao is not null) then

	select 	min(nr_sequencia)
	into STRICT	nr_seq_gv_w
	from	gestao_vaga
	where	cd_setor_desejado = NEW.cd_setor_atendimento
	and	cd_unidade_basica = NEW.cd_unidade_basica
	and	cd_unidade_compl  = NEW.cd_unidade_compl
	and	dt_prevista = (	SELECT 	min(dt_prevista)
						from	gestao_vaga
						where	cd_setor_desejado = NEW.cd_setor_atendimento
						and	cd_unidade_basica = NEW.cd_unidade_basica
						and	cd_unidade_compl  = NEW.cd_unidade_compl
						and	dt_prevista >= LOCALTIMESTAMP
						and	ie_status not in ('N','D','C'));-- Negada, Desistiu, Cancelada
				
	if (coalesce(nr_seq_gv_w,0) > 0) then
		
		update	gestao_vaga
		set	ie_status = 'N'
		where	nr_sequencia = nr_seq_gv_w;
		
	end if;
end if;

--Tiago Braz 568695

ie_isola_leito_w := Obter_param_Usuario(3111, 298, obter_perfil_ativo, NEW.nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_isola_leito_w);

if (ie_isola_leito_w = 'S') and (OLD.ie_status_unidade = 'P') and (NEW.ie_status_unidade <> 'O') then
	
	select	max(ie_paciente_isolado)
	into STRICT	ie_pac_isolado_w
	from	atendimento_paciente
	where	nr_atendimento = OLD.nr_atendimento;
	
	if (ie_pac_isolado_w = 'S') then
		NEW.ie_status_unidade		:= 'O';
	end if;	
end if;


if (OLD.ie_higienizacao is not null) and (NEW.ie_higienizacao is not null) and (OLD.ie_higienizacao <> NEW.ie_higienizacao) then
	
	insert into log_mov(dt_atualizacao,
			cd_log, 
			nm_usuario, 
			ds_log)	
	values (	LOCALTIMESTAMP,
			4567,
			NEW.nm_usuario,
			SUBSTR(wheb_mensagem_pck.get_texto(549680, 'NM_USUARIO='||NEW.nm_usuario||';OLD_IE_HIGIEN='||OLD.ie_higienizacao||';NEW_IE_HIGIEN='||NEW.ie_higienizacao), 1, 4000)
			);
end if;

if (OLD.ie_status_unidade = 'O') and (NEW.ie_status_unidade <> 'O') then
	CALL gerar_higienizacao_leito_unid(LOCALTIMESTAMP, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento,'LPI', NEW.nr_seq_interno, null);
end if;

IF (OLD.ie_status_unidade = 'R') AND (NEW.ie_status_unidade = 'L') THEN
	CALL gerar_higienizacao_leito_unid(LOCALTIMESTAMP, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento,'LLR', NEW.nr_seq_interno, NULL);
END IF;

if (OLD.ie_situacao <> NEW.ie_situacao) then
	if (NEW.ie_situacao = 'A') then
		CALL gerar_evento_est_atend(NEW.nm_usuario,cd_estabelecimento_w,'ALE', NEW.nr_seq_interno);
	elsif (NEW.ie_situacao = 'I') then
		CALL gerar_evento_est_atend(NEW.nm_usuario,cd_estabelecimento_w,'ILE', NEW.nr_seq_interno);
	end if;
end if;

if (OLD.ie_status_unidade <> 'H') and (NEW.ie_status_unidade = 'G') then
	NEW.dt_inicio_higienizacao := null;
	NEW.dt_higienizacao := null;
	NEW.nm_usuario_higienizacao := null;
	NEW.nm_usuario_fim_higienizacao := null;
end if;

if (NEW.dt_atualizacao_nrec is null) then
	select 	max(dt_atualizacao),
		max(nm_usuario)
	into STRICT	dt_first_history_w,
		nm_first_history_w
	from 	unidade_atend_hist
	where	nr_sequencia = (SELECT  min(nr_sequencia)
				from	unidade_atend_hist	
				where 	nr_seq_unidade = NEW.nr_seq_interno);
	
	if (dt_first_history_w is not null) then
		NEW.dt_atualizacao_nrec := dt_first_history_w;
		NEW.nm_usuario_nrec 	 := nm_first_history_w;
	end if;
end if;

<<Final>>
qt_reg_w	:= 0;
  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_unidade_atendimento_update() FROM PUBLIC;

CREATE TRIGGER unidade_atendimento_update
	BEFORE UPDATE ON unidade_atendimento FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_unidade_atendimento_update();

