-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS evento_paciente_insert ON hd_dialise_evento CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_evento_paciente_insert() RETURNS trigger AS $BODY$
DECLARE

nr_seq_evento_pac_w		bigint;
nr_atendimento_w			bigint;
cd_setor_atendimento_w		bigint;
cd_estabelecimento_w		bigint;
nr_sequencia_w			bigint;
nr_seq_tipo_nao_conformidade_w  	bigint;

BEGIN

if (NEW.nr_seq_dialise_peritonial is null) then
	nr_seq_evento_pac_w := 0;
	
	select	coalesce(nr_seq_evento_pac,0),
		coalesce(nr_seq_tipo_nao_conformidade,0)
	into STRICT	nr_seq_evento_pac_w,
		nr_seq_tipo_nao_conformidade_w
	from	HD_TIPO_EVENTO
	where	nr_sequencia = NEW.nr_seq_tipo_evento;

	if (nr_seq_evento_pac_w > 0) then
		select	coalesce(nr_atendimento,0),
			coalesce(obter_setor_atendimento(nr_atendimento),0)
		into STRICT	nr_atendimento_w,
			cd_setor_atendimento_w
		from	hd_dialise
		where	nr_sequencia = NEW.nr_seq_dialise;
		
		select 	coalesce(cd_estabelecimento,0)
		into STRICT	cd_estabelecimento_w
		from   	hd_unidade_dialise
		where  	nr_sequencia = NEW.nr_seq_unid_dialise;
		
		select	nextval('qua_evento_paciente_seq')
		into STRICT	nr_sequencia_w
		;


		insert into qua_evento_paciente(
			nr_sequencia,
			cd_estabelecimento,
			dt_atualizacao,
			nm_usuario,
			nr_atendimento,
			nr_seq_evento,
			dt_evento,
			ds_evento,
			cd_setor_atendimento,
			dt_cadastro,
			nm_usuario_origem,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nm_usuario_reg,
			nr_seq_classif_evento,
			dt_liberacao,
			cd_pessoa_fisica,
			ie_situacao,
			ie_status,
			ie_origem,
			nr_seq_tipo_evento,
			ie_tipo_evento,
			cd_funcao_ativa
			)
		values (
			nr_sequencia_w,
			cd_estabelecimento_w,
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			nr_atendimento_w,
			nr_seq_evento_pac_w,
			LOCALTIMESTAMP,
			substr(wheb_mensagem_pck.get_texto(305932),1,100),
			cd_setor_atendimento_w,
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			NEW.nm_usuario,
			null,
			LOCALTIMESTAMP,
			obter_pessoa_atendimento(nr_atendimento_w,'C'),
			'A',
			'1',
			'S',
			NEW.nr_seq_tipo_evento,
			'E',
			obter_funcao_ativa
			);	
			
		if (nr_seq_tipo_nao_conformidade_w > 0) then
			CALL qua_gerar_nao_conformidade(	nr_sequencia_w,
							nr_seq_tipo_nao_conformidade_w,
							cd_estabelecimento_w,
							obter_pessoa_atendimento(nr_atendimento_w,'C'),
							LOCALTIMESTAMP,
							'S',
							NEW.nm_usuario,
							'N');
							
		end if;
	end if;
end if;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_evento_paciente_insert() FROM PUBLIC;

CREATE TRIGGER evento_paciente_insert
	AFTER INSERT ON hd_dialise_evento FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_evento_paciente_insert();

