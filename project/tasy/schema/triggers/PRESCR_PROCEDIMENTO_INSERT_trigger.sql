-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS prescr_procedimento_insert ON prescr_procedimento CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_prescr_procedimento_insert() RETURNS trigger AS $BODY$
declare
ie_solicitacao_w			varchar(1);
ie_situacao_lab_w			varchar(1);
nr_seq_unidade_w			bigint;
ds_setor_atendimento_w		varchar(100);
nr_atendimento_w			bigint;
ie_tipo_atendimento_w		smallint;
ie_tipo_convenio_w			smallint;
cd_convenio_w				integer;
cd_estab_w					smallint;
cd_setor_atend_w			integer;
cd_procedimento_w			bigint;
ie_origem_proced_w			bigint;
ds_erro_w					varchar(255);
nr_seq_proc_interno_w		bigint;
cd_setor_atendimento_w		bigint;
cd_categoria_w				varchar(10);
varmatexame_w				varchar(1);
ie_num_acesso_dicom_w		varchar(15);
ds_identificador_dicom_w	varchar(10);
ie_situacao_w				varchar(1);
ds_procedimento_w			procedimento.ds_procedimento%TYPE;
qt_mat_exame_w				integer;
cd_pessoa_fisica_w			varchar(10);
ie_exige_liberacao_w		varchar(1);
cd_especialidade_w			varchar(50);
cd_setor_prescr_w			integer;
cd_estabelecimento_w		smallint;
cd_material_old_w			varchar(20);
ie_exame_regra_edicao_w		varchar(1);
ie_urgente_w				varchar(1);
qt_regra_urgencia_exame_w	bigint;
cd_setor_entrega_w			integer;
cd_cbo_w					varchar(6)	:= '0';
ds_retorno_fpo_w			varchar(255) 	:= 'X';
ie_consiste_fpo_prescr_w	varchar(15) 	:= 'N';
dt_prescricao_w				timestamp;
qt_exames_prescr_w			bigint;
qt_max_exames_prescr_w		bigint;
ie_copia_guia_senha_w		varchar(1);
nr_doc_convenio_w			varchar(20);
cd_senha_w					varchar(20);
dt_consiste_FPO_w			timestamp;
nr_seq_proc_interno_aux_w	bigint;
ie_lib_w					varchar(10);
dt_liberacao_w				timestamp;
qt_ocorrencia_int_proc_w	bigint;
ie_operacao_int_proc_w		varchar(1);
ie_24_h_proc_w				varchar(1);
VarIe_Controla_Adm_w		varchar(1);
ie_permite_guia_senha_atend_w	varchar(1);	
cd_plano_convenio_w			varchar(10);
ie_permite_proc_adic_final_w	varchar(1) := 'S';	
data_termino_w			timestamp;
cd_procedencia_w		integer;
cd_procedimento_tuss_w		bigint;
nr_seq_material_w			bigint;

VarAtualDataPrevResult_w	varchar(1);
cd_setor_atual_usuario_w	integer;
cd_setor_col_w			varchar(255);
cd_setor_entrega_ww		varchar(255):= null;
cd_setor_atendimento_ww		varchar(255);
qt_dia_entrega_w		numeric(20);
ie_emite_mapa_w			varchar(255);
ds_hora_fixa_w			varchar(255);
ie_data_resultado_w		varchar(255);
ie_dia_semana_final_w 		bigint;
ie_forma_atual_dt_result_w	exame_lab_regra_setor.ie_atul_data_result%type;
qt_min_atraso_w		    	bigint;
qt_min_entrega_w		bigint;
ie_atualizar_recoleta_w		varchar(255);
dt_resultado_w			timestamp := null;
ie_dia_semana_upd_w		smallint;

cd_funcao_origem_w		prescr_medica.cd_funcao_origem%type;

ie_atualiza_setor_exame_lab_w	lab_parametro.ie_atualiza_setor_exame_lab%type;

IE_AUTORIZACAO_PROC_W   lab_parametro.IE_AUTORIZACAO_PROC%type;


c02 CURSOR FOR
	SELECT	b.cd_material_exame
	from	material_exame_lab b,
		exame_lab_material a
	where	a.nr_seq_material	= b.nr_sequencia
	  and	a.nr_seq_exame		= NEW.nr_seq_exame
	  and (b.cd_material_exame	= coalesce(NEW.cd_material_exame, b.cd_material_exame) or (qt_mat_exame_w = 0))
	  and	a.ie_situacao 		= 'A'
	order by a.ie_prioridade;
c03 CURSOR FOR
	SELECT	ie_exige_liberacao
	from	regra_proced_liberacao
	where	((cd_procedimento is null) or (cd_procedimento = NEW.cd_procedimento))
	and	((nr_seq_proc_interno is null) or (nr_seq_proc_interno = NEW.nr_seq_proc_interno))
	and	((ie_tipo_atendimento is null) or (ie_tipo_atendimento = ie_tipo_atendimento_w))
	and	((cd_setor_atendimento is null) or (cd_setor_atendimento = cd_setor_atendimento_w))
	and	((cd_area_procedimento is null) or (cd_area_procedimento = obter_area_procedimento(NEW.cd_procedimento, NEW.ie_origem_proced)))
	and	((cd_especialidade is null) or (cd_especialidade = obter_especialidade_proced(NEW.cd_procedimento, NEW.ie_origem_proced)))
	and	((cd_grupo_proc is null) or (cd_grupo_proc = obter_grupo_procedimento(NEW.cd_procedimento, NEW.ie_origem_proced, 'C')));
c04 CURSOR FOR
	SELECT	a.cd_cbo
	from    sus_cbo                 b,
		sus_cbo_pessoa_fisica   a
	where   sus_obter_secbo_compativel(coalesce(NEW.cd_medico_exec,NEW.cd_profissional), NEW.cd_procedimento, NEW.ie_origem_proced, LOCALTIMESTAMP, a.cd_cbo, 0) = 'S'
	and     cd_pessoa_fisica        = coalesce(NEW.cd_medico_exec, NEW.cd_profissional)
	and     a.cd_cbo        	= b.cd_cbo
	order by a.nr_seq_apres desc,a.cd_cbo;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'N') then
	goto final;
end if;

if (NEW.nr_seq_exame = 0) then
	NEW.nr_seq_exame	:= null;
end if;

if (coalesce(NEW.nr_seq_exame,0) <> 0) and (NEW.cd_motivo_baixa is null) then
	NEW.cd_motivo_baixa := 0;
end if;

if (coalesce(NEW.nr_ocorrencia,0) = 0) then
	NEW.nr_ocorrencia := 1;
end if;

if (NEW.ie_suspenso is null) then
	NEW.ie_suspenso := 'N';
end if;

if (NEW.nr_sequencia = 0) and (cd_funcao_origem_w	<> 2314) then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(182650);
end if;

if (cd_plano_convenio_w is null) then
    cd_plano_convenio_w := 0;
end if;

ie_copia_guia_senha_w := Obter_Param_Usuario(916, 835, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_copia_guia_senha_w);

select	coalesce(max(obter_convenio_atendimento(nr_atendimento)),0),
		max(cd_estabelecimento),
		max(nr_atendimento),
		coalesce(max(cd_estabelecimento),1),
		max(cd_pessoa_fisica),
		max(obter_especialidade_medico(cd_prescritor, 'C')),
		max(cd_setor_atendimento),		
		max(dt_inicio_prescr),
		max(cd_setor_entrega),
		max(nr_doc_conv),
		max(cd_senha),
		max(cd_funcao_origem)
into STRICT	cd_convenio_w,
		cd_estabelecimento_w,
		nr_atendimento_w,
		cd_estab_w,
		cd_pessoa_fisica_w,
		cd_especialidade_w,
		cd_setor_prescr_w,
		dt_prescricao_w,
		cd_setor_entrega_w,
		nr_doc_convenio_w,
		cd_senha_w,
		cd_funcao_origem_w
from	prescr_medica
where	nr_prescricao = NEW.nr_prescricao;

ie_lib_w	:= lab_obter_se_exame_lib(NEW.nr_seq_exame,obter_estabelecimento_ativo);

qt_max_exames_prescr_w := (obter_valor_conv_estab(cd_convenio_w, cd_estabelecimento_w, 'QT_EXAME_PRESCR'))::numeric;
if (qt_max_exames_prescr_w > 0) then
	qt_exames_prescr_w := coalesce(obter_qt_exames_prescricao(NEW.nr_prescricao),0);
	If (qt_exames_prescr_w >= qt_max_exames_prescr_w) and (cd_funcao_origem_w	<> 2314) then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(182651, 'QT_EXAMES=' || qt_exames_prescr_w);
	end if;
end if;

if (NEW.ie_tipo_proced is null) and (NEW.nr_seq_proc_interno is not null) then
	select	max(ie_tipo)
	into STRICT		NEW.ie_tipo_proced
	from		proc_interno
	where	nr_sequencia	= NEW.nr_seq_proc_interno;
elsif (NEW.ie_tipo_proced is null) then
	NEW.ie_tipo_proced	:= 'O';
end if;

NEW.ie_status_execucao := '10';



if (NEW.nr_seq_interno is null) then
	select nextval('prescr_procedimento_seq')
	into STRICT	NEW.nr_seq_interno
	;
end if;

-- Foi adicionado a verificacao do parametro 1078, da REP, pois nao estava mais obedecendo a data prevista de acordo com a data escolhida na rotina.

if (NEW.dt_prev_execucao is not null) and (dt_prescricao_w is not null) and (NEW.dt_prev_execucao < dt_prescricao_w) and (coalesce(NEW.ie_urgencia,'N')	<> 'S') then
	VarIe_Controla_Adm_w := wheb_assist_pck.obterValorParametroREP(1078, VarIe_Controla_Adm_w);		
	if (VarIe_Controla_Adm_w = 'S') then
		NEW.dt_prev_execucao	:= dt_prescricao_w;
	end if;
end if;	

select	max(ie_situacao)
into STRICT	ie_situacao_w
from	setor_atendimento
where	cd_setor_atendimento = NEW.cd_setor_atendimento;

if (ie_situacao_w = 'I') then
	NEW.cd_setor_atendimento	:= null;
end if;

if (NEW.cd_setor_atendimento is not null) then
	BEGIN
	select	coalesce(min(nr_seq_interno),0)
	into STRICT		nr_seq_unidade_w
	from		unidade_atendimento
	where	cd_setor_atendimento = NEW.cd_setor_atendimento;
	if (nr_seq_unidade_w = 0) then
		select	max(ds_setor_atendimento)
		into STRICT	ds_setor_atendimento_w
		from	setor_atendimento
		where	cd_setor_atendimento	= NEW.cd_setor_atendimento;
		if (obter_funcao_ativa <> 2314) and (cd_funcao_origem_w	<> 2314) then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(182652, 'DS_SETOR=' || ds_setor_atendimento_w);
		end if;
	end if;
	end;
end if;
if (NEW.nr_seq_exame is not null) then
	select	coalesce(max(ie_solicitacao),'N'),
			coalesce(max(ie_situacao),'A')
	into STRICT		ie_solicitacao_w,
			ie_situacao_lab_w
	from		exame_laboratorio
	where	nr_seq_exame = NEW.nr_seq_exame;
	if (ie_solicitacao_w <> 'S') and (cd_funcao_origem_w	<> 2314) then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(182653, 'NR_SEQ_EXAME=' || NEW.nr_seq_exame);
	elsif (ie_situacao_lab_w <> 'A') and (cd_funcao_origem_w	<> 2314) then
		CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(172737, 'EXAME='||NEW.nr_seq_exame);
	else
		select 	count(*)
		into STRICT		qt_mat_exame_w
		from 	material_exame_lab b,
				exame_lab_material a
		where 	b.nr_sequencia 		= a.nr_seq_material
		and 		a.ie_situacao 		=  'A'
		and 		b.cd_material_exame 	= NEW.cd_material_exame
		and 		a.nr_seq_exame 		= NEW.nr_seq_exame;
		cd_material_old_w := NEW.cd_material_exame;
		varmatexame_w := wheb_assist_pck.obterValorParametroREP(88, varmatexame_w);
		if (varmatexame_w = 'S') then
			open c02;
			loop
				fetch c02 into NEW.cd_material_exame;
				exit;
			end loop;
			close c02;
		end if;

		if (coalesce(obter_dados_exame_lab_rep(
					obter_perfil_ativo,
					cd_especialidade_w,
					cd_setor_prescr_w,
					NEW.nr_seq_exame,
					cd_estabelecimento_w,
					'N'), 'PL') = 'V') and (cd_material_old_w is null) then
			NEW.cd_material_exame := null;
		elsif (varmatexame_w = 'S') and (NEW.cd_material_exame is null) and (cd_funcao_origem_w	<> 2314) then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(182655, 'NR_SEQ_EXAME=' || NEW.nr_seq_exame);
		end if;
		if (coalesce(nr_atendimento_w, 0) > 0) then
			BEGIN
			select	a.ie_tipo_convenio,
					a.ie_tipo_atendimento,
					b.cd_convenio,
					b.cd_categoria,
					a.cd_estabelecimento,
					b.cd_plano_convenio,
					coalesce(a.cd_procedencia,0)
			into STRICT		ie_tipo_convenio_w,
					ie_tipo_atendimento_w,
					cd_convenio_w,
					cd_categoria_w,
					cd_estab_w,
					cd_plano_convenio_w,
					cd_procedencia_w
			from		atend_categoria_convenio b,
					atendimento_paciente a
			where		a.nr_atendimento	= nr_atendimento_w
			and		b.nr_atendimento	= a.nr_atendimento
			and		b.nr_seq_interno	= obter_atecaco_atendimento(a.nr_atendimento);
			exception
				when no_data_found then
				if (cd_funcao_origem_w	<> 2314) then
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(182657);
				end if;
			end;
			ie_exame_regra_edicao_w := wheb_assist_pck.obterValorParametroREP(666, ie_exame_regra_edicao_w);		
			if (ie_exame_regra_edicao_w = 'S') then
				SELECT * FROM obter_exame_lab_convenio(NEW.nr_seq_exame, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estab_w, ie_tipo_convenio_w, NEW.nr_seq_proc_interno, NEW.cd_material_exame, cd_plano_convenio_w, cd_setor_atend_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w) INTO STRICT cd_setor_atend_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w;
			end if;
			if (nr_seq_proc_interno_aux_w > 0) then
				NEW.nr_seq_proc_interno := nr_seq_proc_interno_aux_w;
			end if;
			if (coalesce(cd_procedimento_w,0) > 0) then
				NEW.cd_procedimento	:= cd_procedimento_w;
				NEW.ie_origem_proced	:= ie_origem_proced_w;
			end if;
		end if;
		if (NEW.cd_material_exame is not null) then
			NEW.nr_seq_frasco := lab_seq_obter_frasco_exame(NEW.nr_seq_exame,NEW.cd_material_exame, null);
		end if;
	end if;
	if (Obter_Funcao_Ativa = 950 AND NEW.dt_resultado is null) then
		--VarAtualDataPrevResult_w	:= wheb_assist_pck.obterParametroFuncao(924,265); 

		cd_setor_atual_usuario_w	:= obter_setor_usuario(NEW.nm_usuario);
		SELECT * FROM obter_setor_exame_lab(	NEW.nr_prescricao, NEW.nr_seq_exame, cd_setor_atual_usuario_w, NEW.cd_material_exame, null, 'S', cd_setor_atendimento_ww, cd_setor_col_w, cd_setor_entrega_ww, qt_dia_entrega_w, ie_emite_mapa_w, ds_hora_fixa_w, ie_data_resultado_w, qt_min_entrega_w, ie_atualizar_recoleta_w, coalesce(NEW.ie_urgencia,'N'), ie_dia_semana_final_w, ie_forma_atual_dt_result_w, qt_min_atraso_w) INTO STRICT cd_setor_atendimento_ww, cd_setor_col_w, cd_setor_entrega_ww, qt_dia_entrega_w, ie_emite_mapa_w, ds_hora_fixa_w, ie_data_resultado_w, qt_min_entrega_w, ie_atualizar_recoleta_w, ie_dia_semana_final_w, ie_forma_atual_dt_result_w, qt_min_atraso_w;

		--atualiza_dt_realizacao_exame(:new.nr_seq_exame,:new.nr_prescricao,dt_prev_execucao_w,dt_prev_execucao_w); 


		--dt_resultado_w	:= null; 


		if (ds_hora_fixa_w is not null) then 

			select	(coalesce(dt_entrada_unidade,dt_prescricao) + (ds_hora_fixa_w/24)) + qt_dia_entrega_w + (CASE WHEN qt_min_entrega_w=0 THEN 0  ELSE qt_min_entrega_w/1440 END ) 
			into STRICT	NEW.dt_resultado
			from	prescr_medica 
			where 	nr_prescricao = NEW.nr_prescricao;
		else 
			select	coalesce(dt_entrada_unidade,dt_prescricao) + qt_dia_entrega_w  + (CASE WHEN qt_min_entrega_w=0 THEN 0  ELSE qt_min_entrega_w/1440 END ) 
			into STRICT	NEW.dt_resultado
			from 	prescr_medica 
			where 	nr_prescricao = NEW.nr_prescricao;
		end if;
		if (ie_dia_semana_final_w > 0) then  
			ie_dia_semana_upd_w	:= pkg_date_utils.get_WeekDay(NEW.dt_resultado);
			while(ie_dia_semana_upd_w <> ie_dia_semana_final_w) loop 
				NEW.dt_resultado := NEW.dt_resultado + 1;
				ie_dia_semana_upd_w	:= pkg_date_utils.get_WeekDay(NEW.dt_resultado);
			end loop;
		end if;
	end if;
else
	dt_resultado_w := obter_entrega_laudo(NEW.nr_prescricao, NEW.dt_prev_execucao, NEW.nr_seq_proc_interno, NEW.cd_procedimento, NEW.ie_origem_proced, NEW.cd_setor_atendimento, NEW.nm_usuario, dt_resultado_w);
	if (dt_resultado_w is not null) then
		NEW.dt_resultado := dt_resultado_w;
	end if;	
end if;
if (NEW.nr_acesso_dicom is null) then

	select	coalesce(max(ie_num_acesso_dicom),'SI'),
		coalesce(max(ds_identificador_dicom),'')
	into STRICT	ie_num_acesso_dicom_w,
		ds_identificador_dicom_w
	from	parametro_medico
	where	cd_estabelecimento	= cd_estab_w;
	if (ie_num_acesso_dicom_w = 'MP') then

		NEW.nr_acesso_dicom	:=obter_pixeon_accession_number(NEW.nr_prescricao, NEW.cd_procedimento, NEW.ie_origem_proced);
	elsif (ie_num_acesso_dicom_w = 'SI') then
		NEW.nr_acesso_dicom		:= ds_identificador_dicom_w || NEW.nr_seq_interno;
	elsif (ie_num_acesso_dicom_w = 'PR') then
		NEW.nr_acesso_dicom		:= ds_identificador_dicom_w || NEW.nr_prescricao;
	end if;
end if;

CALL gerar_regra_prontuario(nr_atendimento_w, NEW.cd_setor_atendimento, NEW.cd_procedimento, NEW.ie_origem_proced, NEW.nm_usuario);
if (nr_atendimento_w	= 0) then
	nr_atendimento_w	:= null;
end if;

CALL gerar_regra_prontuario_gestao(ie_tipo_atendimento_w, cd_estab_w, nr_atendimento_w, cd_pessoa_fisica_w, NEW.nm_usuario, null, NEW.cd_procedimento, NEW.ie_origem_proced, null, null, null, null);
select	max(a.ie_tipo_atendimento),
		max(b.cd_setor_atendimento)
into STRICT		ie_tipo_atendimento_w,
		cd_setor_atendimento_w
from		prescr_medica b,
		atendimento_paciente a
where	b.nr_atendimento	= a.nr_atendimento
and		b.nr_prescricao 	= NEW.nr_prescricao;
open c03;
loop
fetch c03 into
	ie_exige_liberacao_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
	BEGIN
	if (coalesce(ie_exige_liberacao_w,'N') = 'S') then
		BEGIN
		NEW.ie_exige_liberacao := 'S';
		exit;
		end;
	end if;
	end;
end loop;
close c03;
if (NEW.cd_material_exame is not null) and (NEW.nr_seq_exame is null) then
	NEW.cd_material_exame := null;
end if;
if (NEW.nr_seq_exame is not null) then
	select	count(*)
	into STRICT	qt_regra_urgencia_exame_w
	from 	regra_urgencia_exame;
	if (qt_regra_urgencia_exame_w > 0) then
		ie_urgente_w := obter_se_exame_urgente_regra(cd_estabelecimento_w,
														cd_setor_entrega_w, 
														NEW.nr_seq_exame,
														NEW.nr_prescricao,
														NEW.nr_sequencia,
														NEW.cd_procedimento,
														NEW.ie_origem_proced,
														NEW.nr_seq_proc_interno);
		if (ie_urgente_w is not null) then
			NEW.ie_urgencia := ie_urgente_w;
		end if;
	end if;
end if;

if (NEW.ie_origem_proced	= 7) then
	BEGIN
	BEGIN
	select	coalesce(max(ie_consiste_fpo_prescr),'N')
	into STRICT	ie_consiste_fpo_prescr_w
	from	parametro_faturamento
	where	cd_estabelecimento	= wheb_usuario_pck.get_cd_estabelecimento;
	exception
	when others then
		ie_consiste_fpo_prescr_w := 'N';
	end;
	if (ie_consiste_fpo_prescr_w <> 'N') then
		BEGIN	
		open c04;
		loop
		fetch c04 into	
			cd_cbo_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
		end loop;
		close c04;	
		exception
		when others then
			cd_cbo_w := '0';
		end;
		if (NEW.dt_baixa is not null) then
			dt_consiste_FPO_w := NEW.dt_baixa;
		elsif (dt_prescricao_w is not null) then		
			dt_consiste_FPO_w := dt_prescricao_w;
		else	
			dt_consiste_FPO_w := NEW.dt_prev_execucao;
		end if;
		ds_retorno_fpo_w := sus_consiste_fpo_unif(dt_consiste_FPO_w, NEW.cd_procedimento, NEW.ie_origem_proced, NEW.qt_procedimento, nr_atendimento_w, wheb_usuario_pck.get_cd_estabelecimento, ie_tipo_atendimento_w, coalesce(cd_cbo_w,'0'), ie_consiste_fpo_prescr_w, ds_retorno_fpo_w, NEW.cd_setor_atendimento, cd_procedencia_w, NEW.nm_usuario);
		if (coalesce(ds_retorno_fpo_w,'X') <> 'X') and (cd_funcao_origem_w	<> 2314) then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(182658, 'DS_RETORNO=' || ds_retorno_fpo_w);
		end if;
	end if;
	end;
end if;

if (ie_copia_guia_senha_w = 'S') then
	if (nr_doc_convenio_w is not null) then
		NEW.nr_doc_convenio := nr_doc_convenio_w;
	end if;
	if (cd_senha_w is not null) then
		NEW.cd_senha := cd_senha_w;
	end if;
end if;

if	(Obter_Funcao_Ativa = 916 AND ie_lib_w = 'N') and (cd_funcao_origem_w	<> 2314) then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(193135);
end if;	

/*obter_param_usuario(900, 521, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_permite_proc_adic_final_w);


if 	 (ie_permite_proc_adic_final_w = 'N') then
	select max(dt_termino)
	into   data_termino_w
	from   cirurgia
	where  nr_prescricao = :new.nr_prescricao;


	if	(ie_permite_proc_adic_final_w = 'N') and
		(data_termino_w is not null) then
		wheb_mensagem_pck.Exibir_Mensagem_Abort(237037);
	end if;
end if;*/



if (NEW.cd_intervalo = '#SIP#') then
	NEW.cd_intervalo := null;
end if;

CALL gerar_regra_frasco_pato(null,NEW.nr_prescricao,null,NEW.cd_procedimento,NEW.ie_origem_proced,null,NEW.cd_setor_atendimento,'L',NEW.nm_usuario);

NEW.ds_stack	:= substr(NEW.cd_procedimento  || ' - ' || NEW.nr_seq_rotina || ' - ' || dbms_utility.format_call_stack,1,2000);
NEW.dt_atualizacao_nrec	:= LOCALTIMESTAMP;
NEW.CD_FUNCAO_ORIGEM		:= obter_funcao_ativa;


if (NEW.cd_intervalo	is not null) then
	select	max(ie_operacao),
			coalesce(max(ie_24_h),'N'),
			coalesce(max(qt_operacao),0)
	into STRICT		ie_operacao_int_proc_w,
			ie_24_h_proc_w,
			qt_ocorrencia_int_proc_w
	from		intervalo_prescricao
	where	cd_intervalo = NEW.cd_intervalo;
end if;

if (ie_operacao_int_proc_w = 'H') and (ie_24_h_proc_w = 'S') and (qt_ocorrencia_int_proc_w > 24) and (NEW.dt_proxima_dose is null) and (NEW.dt_prev_execucao is not null) then
	VarIe_Controla_Adm_w := wheb_assist_pck.obterValorParametroREP(1078, VarIe_Controla_Adm_w);			
	if (VarIe_Controla_Adm_w = 'S') then
		NEW.dt_proxima_dose := NEW.dt_prev_execucao + (qt_ocorrencia_int_proc_w/24);	
	end if;
end if;

if	((coalesce(NEW.nr_seq_proc_interno,0) > 0) and (coalesce(NEW.nr_seq_exame,0) = 0)) then
	cd_procedimento_tuss_w:= Define_procedimento_TUSS(cd_estabelecimento_w,  NEW.nr_seq_proc_interno, coalesce(NEW.cd_convenio, cd_convenio_w), coalesce(NEW.cd_categoria, cd_categoria_w),
	  						ie_tipo_atendimento_w, NEW.dt_prev_execucao, NEW.cd_procedimento, NEW.ie_origem_proced, 0, cd_setor_atendimento_w, null);
	if (cd_procedimento_tuss_w > 0) then
		NEW.cd_proced_tuss:= cd_procedimento_tuss_w;
	end if;
end if;

if	((coalesce(NEW.nr_seq_proc_interno,0) = 0) and (coalesce(NEW.nr_seq_exame,0) > 0)) then	

	select	coalesce(max(nr_sequencia), Obter_Material_Exame_Lab(null, NEW.cd_material_exame, 1))
	into STRICT	nr_seq_material_w
	from 	material_exame_lab
	where	cd_material_exame = NEW.cd_material_exame;
	if ((cd_categoria_w is null) and (coalesce(nr_atendimento_w,0) > 0)) then
		select	max(b.cd_categoria)
		into STRICT	cd_categoria_w
		from		atend_categoria_convenio b
		where	b.nr_atendimento	= nr_atendimento_w
		and		b.nr_seq_interno	= obter_atecaco_atendimento(nr_atendimento_w);
	end if;

	cd_procedimento_tuss_w := define_proc_tuss_exame(NEW.nr_seq_exame,
			coalesce(NEW.cd_convenio, cd_convenio_w), 
			coalesce(NEW.cd_categoria, cd_categoria_w), 
			nr_seq_material_w, 
			0);
	if (cd_procedimento_tuss_w > 0) then
		NEW.cd_proced_tuss := cd_procedimento_tuss_w;
	end if;
end if;

BEGIN
    select	coalesce(ie_atualiza_setor_exame_lab, 'N'),
            	IE_AUTORIZACAO_PROC
    into STRICT	ie_atualiza_setor_exame_lab_w,
            	IE_AUTORIZACAO_PROC_W
    from	lab_parametro
    where	cd_estabelecimento = cd_estabelecimento_w;
exception
    when no_data_found then
    ie_atualiza_setor_exame_lab_w := 'N';
end;

if (ie_atualiza_setor_exame_lab_w = 'S') and (NEW.nr_seq_exame is not null) and (NEW.cd_material_exame is not null) then
	NEW.cd_setor_atendimento	:= coalesce(obter_setor_atend_proc_lab(cd_estabelecimento_w,cd_procedimento_w,ie_origem_proced_w, null,NEW.cd_setor_atendimento,null,NEW.nr_seq_exame, nr_atendimento_w), NEW.cd_setor_atendimento);
end if;

if (NEW.ie_autorizacao is null)   and (NEW.nr_seq_exame is not null)	and (IE_AUTORIZACAO_PROC_W is not null)then
    NEW.ie_autorizacao := IE_AUTORIZACAO_PROC_W;
end if;
<<final>>
null;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_prescr_procedimento_insert() FROM PUBLIC;

CREATE TRIGGER prescr_procedimento_insert
	BEFORE INSERT ON prescr_procedimento FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_prescr_procedimento_insert();

