-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS gestao_vaga_atual ON gestao_vaga CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_gestao_vaga_atual() RETURNS trigger AS $BODY$
declare

isInsertorUpdate_w varchar(10);

BEGIN

if (coalesce(wheb_usuario_pck.get_ie_executar_trigger,'S') = 'S') then
  CALL consistir_classif_med_retag(NEW.nr_seq_classif_medico, NEW.cd_medico, NEW.nm_usuario,NEW.cd_estabelecimento);

  if (NEW.nr_seq_agenda <> OLD.nr_seq_agenda and NEW.nr_seq_agenda is not null) or (NEW.cd_tipo_agenda <> OLD.cd_tipo_agenda and NEW.cd_tipo_agenda is not null) then
	CALL gravar_log_tasy(8415,'nr_seq_agenda = ' || NEW.nr_seq_agenda || ' cd_tipo_agenda= ' || NEW.cd_tipo_agenda || ' callstack= ' || dbms_utility.format_call_stack, NEW.nm_usuario);
  end if;
end if;

if (TG_OP = 'INSERT') then
	isInsertorUpdate_w := 'INSERT';
else
	isInsertorUpdate_w := 'UPDATE';
end if;

INSERT INTO ADT_STACK(
            nr_sequencia,
			DT_ATUALIZACAO,
			NM_USUARIO,
			DT_ATUALIZACAO_NREC,
            NM_USUARIO_NREC,
            NM_TABELA,
			DS_CHAVE_SIMPLES,
			DS_STACK,
			DS_ACAO
		)
		VALUES (
            nextval('adt_stack_seq'),
			LOCALTIMESTAMP,
			wheb_usuario_pck.get_nm_usuario,
            LOCALTIMESTAMP,
            wheb_usuario_pck.get_nm_usuario,
			'GESTAO_VAGA',
			 to_char(NEW.nr_sequencia),
            ('cd_pessoa_fisica: '||NEW.cd_pessoa_fisica||' nr.atendimento: '||NEW.nr_atendimento||
            ' ie_status: '||NEW.ie_status||' perfil: '||wheb_usuario_pck.get_cd_perfil||' funcao: '||wheb_usuario_pck.get_cd_funcao||' Stack: '||substr(dbms_utility.format_call_stack,1,3500)),
			isInsertorUpdate_w
		);
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_gestao_vaga_atual() FROM PUBLIC;

CREATE TRIGGER gestao_vaga_atual
	BEFORE INSERT OR UPDATE ON gestao_vaga FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_gestao_vaga_atual();

