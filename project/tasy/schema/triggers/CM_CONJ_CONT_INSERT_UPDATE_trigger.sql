-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS cm_conj_cont_insert_update ON cm_conjunto_cont CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_cm_conj_cont_insert_update() RETURNS trigger AS $BODY$
declare

qt_registro_w			bigint;
qt_registro_unico_w		bigint;
ie_controla_lav_conj_w   	varchar(1);
ie_controla_lav_item_w		varchar(1);
ie_permite_esterilizacao_w	funcao_param_usuario.vl_parametro%type;
nm_conjunto_w			cm_conjunto.nm_conjunto%type;
ie_permite_sem_expurgo_w	funcao_param_usuario.vl_parametro%type;
nr_seq_expurgo_w		cm_expurgo_retirada.nr_sequencia%type;
pragma autonomous_transaction;
BEGIN
  BEGIN

ie_permite_esterilizacao_w := obter_param_usuario(406, 180, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_permite_esterilizacao_w);
ie_permite_sem_expurgo_w := obter_param_usuario(406, 247, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_permite_sem_expurgo_w);

if (wheb_usuario_pck.get_ie_executar_trigger	= 'S')  then

    if (NEW.nr_seq_conjunto is null and NEW.nr_seq_item is null) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1051031);
        /*Favor informar o conjunto ou o item que deseja receber.*/


    end if;

    if (NEW.nr_seq_conjunto is not null and NEW.nr_seq_item is not null) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1051032);
        /*Favor informar somente o conjunto ou o item que deseja receber.*/


    end if;

    if (TG_OP = 'INSERT') then

        if (NEW.nr_seq_conjunto is not null) then
            
            select 	count(*) 
            into STRICT	qt_registro_unico_w
            from 	cm_item 
            where 	nr_sequencia in (SELECT nr_seq_item from cm_conjunto_item where nr_seq_conjunto = NEW.nr_seq_conjunto) 
            and 	ie_unico = 'S';

            select	count(*)
            into STRICT	qt_registro_w
            from	cm_conjunto_cont
            where	ie_status_conjunto not in (10,6)
            and  	nr_seq_conjunto = NEW.nr_seq_conjunto;

            if (qt_registro_w > 0 and qt_registro_unico_w > 0) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(1051033);
                /*Este conjunto ja esta em processo de esterilizacao. Nao e permitido registra lo em duplicidade.*/


            end if;

        end if;

        if (NEW.nr_seq_item is not null) then
    
            select 	count(*) 
            into STRICT	qt_registro_unico_w
            from 	cm_item 
            where 	nr_sequencia = NEW.nr_seq_item 
            and 	ie_unico = 'S';

            if (qt_registro_unico_w = 0) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(1169951);
                /*Codigo nao encontrado.*/


            end if;

            select	count(*)
            into STRICT	qt_registro_w
            from	cm_conjunto_cont
            where	ie_status_conjunto not in (10,6)
            and	    nr_seq_item = NEW.nr_seq_item
            and     nr_sequencia <> NEW.nr_sequencia;

            if (qt_registro_w > 0) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(1051033);
                /*Este conjunto ja esta em processo de esterilizacao. Nao e permitido registra lo em duplicidade.*/


            end if;
        end if;

        if (NEW.nr_seq_conjunto is not null)then
            select	coalesce(ie_controla_processo_lav,'N') 
                into STRICT	ie_controla_lav_conj_w
                from	cm_conjunto
                where	nr_sequencia = NEW.nr_seq_conjunto;
        end if;	
        if (NEW.nr_seq_item is not null)then
                select	coalesce(ie_controla_processo_lav,'N')
                    into STRICT	ie_controla_lav_item_w
                    from	cm_item
                    where	nr_sequencia = NEW.nr_seq_item;
        end if;

        if (NEW.nr_seq_ciclo_lav is not null )then
            NEW.ie_processo_limpeza := 'S';
            else if (NEW.ie_processo_limpeza is null) then
                NEW.ie_processo_limpeza := 'N';
            end if;	
        end if;

        
        if (NEW.nr_seq_ciclo is not null) then
            if((ie_controla_lav_conj_w = 'S' or ie_controla_lav_item_w = 'S') and ie_permite_esterilizacao_w = 'N' and NEW.ie_processo_limpeza = 'N')then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(1118085);
                /*Conjunto controla processo de lavacao. E necessario passar pelo ciclo de lavacao antes do ciclo de esterilizacao.*/


            end if;
        end if;	

        if (NEW.nr_seq_conjunto is not null) then
        BEGIN
            select  nm_conjunto
            into STRICT    nm_conjunto_w
            from    cm_conjunto
            where   nr_sequencia = NEW.nr_seq_conjunto
            and     ie_situacao  = 'I';
            exception when others then
                nm_conjunto_w := null;
            end;
            if (nm_conjunto_w is not null) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(1142754, 'NR_SEQUENCIA=' || NEW.nr_seq_conjunto || ';' || 'DS_CONJUNTO=' || nm_conjunto_w);
                /*O conjunto selecionado, #@NR_SEQUENCIA#@ -  #@DS_CONJUNTO#@, esta inativo. Favor verificar o respectivo cadastro.*/


           end if;
        end if;	

    end if;

	if (NEW.nr_seq_ciclo_lav is not null) and (ie_permite_sem_expurgo_w = 'N') then		
		if (NEW.nr_seq_conjunto is not null) then
			select 	max(nr_sequencia)
			into STRICT   	nr_seq_expurgo_w
			from 	cm_expurgo_retirada
			where 	nr_seq_conjunto = NEW.nr_seq_conjunto;
			
			if (nr_seq_expurgo_w is null) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(1214784);
			end if;
			
		elsif (NEW.nr_seq_item is not null) then
			select 	max(nr_sequencia)
			into STRICT   	nr_seq_expurgo_w
			from 	cm_expurgo_retirada
			where 	nr_seq_item = NEW.nr_seq_item;
			
			if (nr_seq_expurgo_w is null) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(1214785);
			end if;
		end if;
	end if;

    if (NEW.nr_seq_conjunto is not null and NEW.nr_seq_ciclo is not null and OLD.nr_seq_ciclo is null) then
        BEGIN
            select  nm_conjunto
            into STRICT    nm_conjunto_w
            from    cm_conjunto
            where   nr_sequencia = NEW.nr_seq_conjunto
            and     ie_situacao  = 'I';
            exception when others then
                nm_conjunto_w := null;
            end;
           if (nm_conjunto_w is not null) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(1142754, 'NR_SEQUENCIA=' || NEW.nr_seq_conjunto || ';' || 'DS_CONJUNTO=' || nm_conjunto_w);
                /*O conjunto selecionado, #@NR_SEQUENCIA#@ -  #@DS_CONJUNTO#@, esta inativo. Favor verificar o respectivo cadastro.*/


           end if;

    end if;	

    if (NEW.nr_seq_conjunto is not null)then
            select	coalesce(ie_controla_processo_lav,'N') 
                into STRICT	ie_controla_lav_conj_w
                from	cm_conjunto
                where	nr_sequencia = NEW.nr_seq_conjunto;
    end if;

    if (NEW.nr_seq_item is not null)then
            select	coalesce(ie_controla_processo_lav,'N')   
                into STRICT	ie_controla_lav_item_w
                from	cm_item
                where	nr_sequencia = NEW.nr_seq_item;
    end if;

    if (coalesce(NEW.nr_seq_ciclo_lav,0) <> coalesce(OLD.nr_seq_ciclo_lav,0)) then
        NEW.ie_processo_limpeza := 'S';
    end if;
        
    if (coalesce(NEW.nr_seq_ciclo,0) <> coalesce(OLD.nr_seq_ciclo,0)) then
        if((ie_controla_lav_conj_w = 'S' or ie_controla_lav_item_w = 'S') and ie_permite_esterilizacao_w = 'N' and NEW.ie_processo_limpeza = 'N')then
            CALL wheb_mensagem_pck.exibir_mensagem_abort(1118085);
            /*Conjunto controla processo de lavacao. e necessario passar pelo ciclo de lavacao antes do ciclo de esterilizacao.*/


        end if;
    end if;	

    
    if (coalesce(NEW.nr_seq_conjunto,0) <> coalesce(OLD.nr_seq_conjunto,0) and coalesce(NEW.nr_seq_conjunto,0) <> 0) then
        NEW.nm_conjunto_aux := substr(cme_obter_nome_conjunto(NEW.nr_seq_conjunto),1,200);
        NEW.ds_classificacao_aux := substr(cme_obter_desc_classif_conj2(NEW.nr_seq_conjunto),1,200);
        NEW.ds_cor_conjunto_aux := substr(cme_obter_cor_conjunto(NEW.nr_seq_conjunto),1,15);
    end if;

    if (coalesce(NEW.nr_seq_ciclo,0) <> coalesce(OLD.nr_seq_ciclo,0)) then
        if (coalesce(NEW.nr_seq_ciclo,0) > 0) then
            NEW.nr_ciclo_aux := substr(cm_obter_nr_ciclo(NEW.nr_seq_ciclo),1,10);
            NEW.ds_equipamento := substr(obter_dados_ciclo(NEW.nr_seq_ciclo,'E'),1,80);
        else
            NEW.nr_ciclo_aux := NEW.nr_seq_ciclo;
            NEW.ds_equipamento := null;
        end if;
    end if;

    if (coalesce(NEW.ie_status_conjunto,0) <> coalesce(OLD.ie_status_conjunto,0)) then
        NEW.ds_status_conjunto_aux := substr(obter_valor_dominio(403,NEW.ie_status_conjunto),1,200);
    end if;

    if (coalesce(NEW.nr_seq_embalagem,0) <> coalesce(OLD.nr_seq_embalagem,0)) then
        NEW.ds_embalagem_aux := substr(cme_obter_classif_embalagem(NEW.nr_seq_embalagem),1,50);
    end if;

    if (coalesce(NEW.cd_local_estoque,0) <> coalesce(OLD.cd_local_estoque,0)) then
        NEW.ds_local_estoque_aux := substr(obter_desc_local_estoque(NEW.cd_local_estoque),1,40);
    end if;

    if (coalesce(NEW.cd_pessoa_fisica,'X') <> coalesce(OLD.cd_pessoa_fisica,'X')) then
        NEW.nm_pessoa_fisica_aux := substr(obter_nome_pf(NEW.cd_pessoa_fisica),1,60);
    end if;

    if (coalesce(NEW.cd_setor_atend_orig,0) <> coalesce(OLD.cd_setor_atend_orig,0)) then
        NEW.ds_setor_atend_orig_aux := substr(obter_nome_setor(NEW.cd_setor_atend_orig),1,255);
    end if;

    if (coalesce(NEW.cd_setor_atend_dest,0) <> coalesce(OLD.cd_setor_atend_dest,0)) then
        NEW.ds_setor_requisicao_aux := substr(obter_nome_setor(NEW.cd_setor_atend_dest),1,255);
    end if;

    if (coalesce(NEW.cd_cgc,'X') <> coalesce(OLD.cd_cgc,'X')) then
        NEW.ds_razao_social_aux := substr(obter_razao_social(NEW.cd_cgc),1,80);
    end if;

    if (coalesce(NEW.cd_pessoa_resp,'X') <> coalesce(OLD.cd_pessoa_resp,'X'))then
        NEW.nm_pessoa_resp_aux := substr(obter_nome_pessoa_fisica(NEW.cd_pessoa_resp, null),1,60);
    end if;

    if (coalesce(NEW.cd_medico,'X') <> coalesce(OLD.cd_medico,'X')) then
        NEW.nm_medico_aux := substr(obter_nome_medico(NEW.cd_medico,'G'),1,255);
    end if;
end if;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_cm_conj_cont_insert_update() FROM PUBLIC;

CREATE TRIGGER cm_conj_cont_insert_update
	BEFORE INSERT OR UPDATE ON cm_conjunto_cont FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_cm_conj_cont_insert_update();

