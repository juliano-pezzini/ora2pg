-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS movto_cartao_cr_baixa_after ON movto_cartao_cr_baixa CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_movto_cartao_cr_baixa_after() RETURNS trigger AS $BODY$
declare

qt_reg_w                bigint;
reg_integracao_p        gerar_int_padrao.reg_integracao;

cd_estabelecimento_w	ctb_documento.cd_estabelecimento%type;
vl_movimento_w		ctb_documento.vl_movimento%type;
ie_contab_cartao_cr_w	parametro_contas_receber.ie_contab_cartao_cr%type;

c01 CURSOR FOR
	SELECT	a.nm_atributo
	from	atributo_contab a
	where 	a.cd_tipo_lote_contab = 5
	and 	a.nm_atributo in ('VL_BAIXA_CARTAO_CR', 'VL_DESP_EQUIP_CARTAO_CR', 'VL_DESPESA_CARTAO_CR');

c01_w		c01%rowtype;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
select  count(*)
into STRICT    qt_reg_w
from    intpd_fila_transmissao
where   nr_seq_documento        = to_char(NEW.nr_sequencia)
and     to_char(dt_atualizacao, 'dd/mm/yyyy hh24:mi:ss') = to_char(LOCALTIMESTAMP,'dd/mm/yyyy hh24:mi:ss')
and     ie_evento       in ('324');


if (qt_reg_w    = 0) then
        reg_integracao_p := gerar_int_padrao.gravar_integracao('324', NEW.nr_sequencia, NEW.nm_usuario, reg_integracao_p);
end if;

if (TG_OP = 'INSERT') then
	/* Grava o agendamento da informacao para atualizacao do fluxo de caixa. */


	CALL gravar_agend_fluxo_caixa(NEW.nr_seq_movto,NEW.nr_seq_parcela,'CCB',NEW.dt_baixa,'I',NEW.nm_usuario);
elsif (TG_OP = 'UPDATE') then
	/* Grava o agendamento da informacao para atualizacao do fluxo de caixa. */


	CALL gravar_agend_fluxo_caixa(NEW.nr_seq_movto,NEW.nr_seq_parcela,'CCB',NEW.dt_baixa,'A',NEW.nm_usuario);
end if;

select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	movto_cartao_cr
where	nr_sequencia = NEW.nr_seq_movto;

BEGIN
select	coalesce(ie_contab_cartao_cr, 'CB')
into STRICT	ie_contab_cartao_cr_w
from	parametro_contas_receber
where	cd_estabelecimento	= cd_estabelecimento_w;
exception when others then
        ie_contab_cartao_cr_w := 'CB';
end;

BEGIN
select  CASE WHEN a.ie_ctb_online='S' THEN  coalesce(a.ie_contab_cartao_cr, 'CB')  ELSE ie_contab_cartao_cr_w END
into STRICT    ie_contab_cartao_cr_w
from    ctb_param_lote_contas_rec a
where   a.cd_empresa = obter_empresa_estab(cd_estabelecimento_w)
and     coalesce(a.cd_estab_exclusivo, cd_estabelecimento_w) = cd_estabelecimento_w;
exception when others then
        null;
end;

if (TG_OP = 'INSERT') and (ie_contab_cartao_cr_w = 'CR') and (coalesce(NEW.nr_seq_trans_financ, 0) <> 0) then

open c01;
loop
fetch c01 into	
	c01_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	BEGIN
	
	vl_movimento_w  :=      case	c01_w.nm_atributo
				when	'VL_BAIXA_CARTAO_CR'      then NEW.vl_baixa
				when	'VL_DESP_EQUIP_CARTAO_CR' then NEW.vl_desp_equip
				when	'VL_DESPESA_CARTAO_CR'    then NEW.vl_despesa
				else
					null
				end;
	
	if (coalesce(vl_movimento_w, 0) <> 0) then
		CALL ctb_concil_financeira_pck.ctb_gravar_documento(	cd_estabelecimento_w,
									NEW.dt_baixa,
									5,
									NEW.nr_seq_trans_financ,
									44,
									NEW.nr_seq_movto,
									NEW.nr_sequencia,
									0,
									vl_movimento_w,
									'MOVTO_CARTAO_CR_BAIXA',
									c01_w.nm_atributo,
									NEW.nm_usuario);
	end if;

	end;
end loop;
close c01;
end if;

end if;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_movto_cartao_cr_baixa_after() FROM PUBLIC;

CREATE TRIGGER movto_cartao_cr_baixa_after
	AFTER INSERT OR UPDATE ON movto_cartao_cr_baixa FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_movto_cartao_cr_baixa_after();

