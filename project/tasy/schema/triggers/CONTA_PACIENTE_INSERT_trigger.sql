-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS conta_paciente_insert ON conta_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_conta_paciente_insert() RETURNS trigger AS $BODY$
DECLARE


ie_atualiza_tipo_guia_w		boolean;
ie_tipo_guia_w			varchar(2);
cd_responsavel_w		varchar(10);
qt_atendimento_cancelado_w	bigint;
ie_tipo_guia_padrao_w		varchar(2);
qt_prescricao_w			bigint;
dt_prev_protocolo_w		timestamp;

pragma autonomous_transaction;

BEGIN
If (NEW.nr_atendimento is not null) then
	select	count(*)
	into STRICT	qt_atendimento_cancelado_w
	from	atendimento_paciente
	where	nr_atendimento = NEW.nr_atendimento
	and	dt_cancelamento is not null;
	
	If (qt_atendimento_cancelado_w > 0) then
		--R.aise_application_error(-20011,'Não é possível criar conta para um atendimento cancelado!'||'#@#@');

		--wheb_mensagem_pck.exibir_mensagem_abort(263287);

		CALL wheb_mensagem_pck.exibir_mensagem_abort(263287,'NR_ATEND=' || NEW.nr_atendimento);

	End if;
End if;

ie_atualiza_tipo_guia_w	:= (Obter_Valor_Param_Usuario(67,251,obter_perfil_ativo,NEW.nm_usuario,0) =  'S');
if (NEW.ie_tipo_guia is null) and (ie_atualiza_tipo_guia_w) then
	
	select	max(ie_tipo_guia)
	into STRICT	ie_tipo_guia_w
	from	atend_categoria_convenio
	where	nr_atendimento	= NEW.nr_atendimento
	and	cd_convenio	= NEW.cd_convenio_parametro
	and	cd_categoria	= NEW.cd_categoria_parametro;
	
	NEW.ie_tipo_guia := ie_tipo_guia_w;
	
end if;

ie_tipo_guia_padrao_w	:= coalesce(Obter_Valor_Param_Usuario(67,580,obter_perfil_ativo,NEW.nm_usuario,NEW.cd_estabelecimento),'0');

if (ie_tipo_guia_padrao_w <> '0') then

	select	count(*)
	into STRICT	qt_prescricao_w
	from	prescr_medica
	where	nr_atendimento = NEW.nr_atendimento;
	
	if (qt_prescricao_w > 0) then
	
		NEW.ie_tipo_guia := ie_tipo_guia_padrao_w;
		
	end if;
	
end if;

if (NEW.cd_convenio_calculo is null) and (NEW.cd_categoria_calculo is null) then
	NEW.cd_categoria_calculo 	:= NEW.cd_categoria_parametro;
	NEW.cd_convenio_calculo	:= NEW.cd_convenio_parametro;
end if;

if (NEW.nm_usuario_original is null) then
	NEW.nm_usuario_original:= coalesce(wheb_usuario_pck.get_nm_usuario,'Tasy');
end if;

cd_responsavel_w := NEW.cd_responsavel;

cd_responsavel_w := obter_responsavel_conta(NEW.nr_interno_conta, NEW.nr_atendimento, NEW.cd_estabelecimento, NEW.nm_usuario, cd_responsavel_w);
if (cd_responsavel_w is not null) then
	NEW.cd_responsavel := cd_responsavel_w;
end if;


NEW.nr_seq_apresentacao := obter_seq_apresent_conta(	NEW.nr_atendimento,
							NEW.ie_tipo_atend_conta,
							NEW.cd_convenio_parametro,
							NEW.cd_estabelecimento);
							

NEW.dt_prev_protocolo	:= OBTER_PREV_CONTA_PROT(	NEW.nr_atendimento, NEW.nr_interno_conta, NEW.ie_tipo_atend_conta,
							NEW.cd_estabelecimento, NEW.cd_convenio_parametro, NEW.dt_periodo_inicial);


commit;

RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_conta_paciente_insert() FROM PUBLIC;

CREATE TRIGGER conta_paciente_insert
	BEFORE INSERT ON conta_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_conta_paciente_insert();

