-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS escala_improve_bled_atual ON escala_improve_bleeding CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_escala_improve_bled_atual() RETURNS trigger AS $BODY$
declare
ie_idade bigint := 0;
ie_genero bigint := 0;
ie_funcao_renal bigint := 0;
ie_funcao_figado bigint := 0;
ie_contagem_plaquetas bigint := 0;
ie_admissao_uti bigint := 0;
ie_cateter_venoso bigint := 0;
ie_ulcera bigint := 0;
ie_sangramento_previo bigint := 0;
ie_doenca_reumatica bigint := 0;
ie_malignidade bigint := 0;
qt_score bigint := 0;

BEGIN

  if coalesce(NEW.ie_idade,OLD.ie_idade) = 1 then
        ie_idade := 1.5;
        qt_score := ie_idade;
  elsif coalesce(NEW.ie_idade,OLD.ie_idade) = 2 then
        ie_idade := 3.5;
        qt_score := ie_idade;
  end if;

  if coalesce(NEW.ie_genero,OLD.ie_genero) = 1 then 
        ie_genero := 1;
        qt_score := qt_score + ie_genero;
  end if;

  if coalesce(NEW.ie_funcao_renal,OLD.ie_funcao_renal) = 2 then
        ie_funcao_renal := 2.5;
        qt_score := qt_score + ie_funcao_renal;
  elsif coalesce(NEW.ie_funcao_renal,OLD.ie_funcao_renal) = 1 THEN
        ie_funcao_renal := 1;
        qt_score := qt_score + ie_funcao_renal;
  end if;

  if coalesce(NEW.ie_funcao_figado,OLD.ie_funcao_figado) = 1 then
        ie_funcao_figado := 2.5;
        qt_score := qt_score + ie_funcao_figado;
  end if;

  if coalesce(NEW.ie_contagem_plaquetas,OLD.ie_contagem_plaquetas) = 1 then
        ie_contagem_plaquetas := 4;
        qt_score := qt_score + ie_contagem_plaquetas;
  end if;

  if coalesce(NEW.ie_admissao_uti,OLD.ie_admissao_uti) = 'S' then
        ie_admissao_uti := 2.5;
        qt_score := qt_score + ie_admissao_uti;
  end if;

  if coalesce(NEW.ie_cateter_venoso,OLD.ie_cateter_venoso) = 'S' then
        ie_cateter_venoso := 2;
        qt_score := qt_score + ie_cateter_venoso;
  end if;

  if coalesce(NEW.ie_ulcera,OLD.ie_ulcera) = 'S' then
        ie_ulcera := 4.5;
        qt_score := qt_score + ie_ulcera;
  end if;

  if coalesce(NEW.ie_sangramento_previo,OLD.ie_sangramento_previo) = 'S' then
        ie_sangramento_previo := 4;
        qt_score := qt_score + ie_sangramento_previo;
  end if;

  if coalesce(NEW.ie_doenca_reumatica,OLD.ie_doenca_reumatica) = 'S' then
        ie_doenca_reumatica := 2;
        qt_score := qt_score + ie_doenca_reumatica;
  end if;

  if coalesce(NEW.ie_malignidade,OLD.ie_malignidade) = 'S' then
        ie_malignidade := 2;
        qt_score := qt_score + ie_malignidade;
  end if;

  NEW.qt_score := qt_score;	

RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_escala_improve_bled_atual() FROM PUBLIC;

CREATE TRIGGER escala_improve_bled_atual
	BEFORE INSERT OR UPDATE ON escala_improve_bleeding FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_escala_improve_bled_atual();

