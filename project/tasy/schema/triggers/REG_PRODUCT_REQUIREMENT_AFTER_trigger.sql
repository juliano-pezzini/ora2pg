-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS reg_product_requirement_after ON reg_product_requirement CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_reg_product_requirement_after() RETURNS trigger AS $BODY$
declare

  ie_tipo_alteracao_w reg_product_req_hist.ie_tipo_alteracao%type;

BEGIN

  if (OLD.dt_aprovacao is null and NEW.dt_aprovacao is not null) or (OLD.ie_situacao = 'I' and NEW.ie_situacao = 'A') then
    ie_tipo_alteracao_w := 'I';
  elsif (OLD.ie_situacao = 'A' and NEW.ie_situacao = 'I') then
    ie_tipo_alteracao_w := 'E';
  elsif (NEW.dt_aprovacao is not null) then
    ie_tipo_alteracao_w := 'A';
  end if;

  if (ie_tipo_alteracao_w is not null
	and wheb_usuario_pck.get_ie_executar_trigger = 'S') then

    insert into reg_product_req_hist(nr_sequencia,
       cd_code,
       dt_atualizacao,
       nm_usuario,
       dt_atualizacao_nrec,
       nm_usuario_nrec,
       ds_title,
       ds_description,
       dt_aprovacao,
       nr_seq_apresentacao,
       nr_customer_requirement,
       ie_situacao,
       nm_usuario_aprovacao,
       cd_versao,
       nr_seq_reg_version_rev,
       dt_liberacao_dev,
       dt_liberacao_vv,
       nr_seq_idioma,
       nm_analista_liberou,
       nm_liberou_vv,
       dt_liberou_ger_vv,
       nm_liberou_ger_vv,
       ds_description_pr,
       nr_seq_product_req,
       cd_prs_id,
       nr_seq_product_sup,
       ie_tipo_alteracao,
       dt_inativacao,
       nm_usuario_inativacao,
       ds_motivo_inativacao,
       dt_liberacao,
       nm_usuario_liberacao,
       dt_inclusao_hist,
       dt_revisao,
       ie_tipo_revisao,
       nr_seq_revisao,
       ie_clinico,
       nr_seq_ordem_serv,
       ds_racional_clinico,
       ie_aprovacao_espec,
       nr_seq_intencao_uso,
       nr_seq_analise_impacto)
    values (nextval('reg_product_req_hist_seq'),
       NEW.cd_code,
       NEW.dt_atualizacao,
       NEW.nm_usuario,
       NEW.dt_atualizacao_nrec,
       NEW.nm_usuario_nrec,
       NEW.ds_title,
       NEW.ds_description,
       NEW.dt_aprovacao,
       NEW.nr_seq_apresentacao,
       NEW.nr_customer_requirement,
       NEW.ie_situacao,
       NEW.nm_usuario_aprovacao,
       NEW.cd_versao,
       null,
       NEW.dt_liberacao_dev,
       NEW.dt_liberacao_vv,
       NEW.nr_seq_idioma,
       NEW.nm_analista_liberou,
       NEW.nm_liberou_vv,
       NEW.dt_liberou_ger_vv,
       NEW.nm_liberou_ger_vv,
       NEW.ds_description_pr,
       NEW.nr_sequencia,
       NEW.cd_prs_id,
       NEW.nr_seq_product_sup,
       ie_tipo_alteracao_w,
       NEW.dt_inativacao,
       NEW.nm_usuario_inativacao,
       NEW.ds_motivo_inativacao,
       NEW.dt_liberacao,
       NEW.nm_usuario_liberacao,
       LOCALTIMESTAMP,
       NEW.dt_revisao,
       NEW.ie_tipo_revisao,
       NEW.nr_seq_revisao,
       NEW.ie_clinico,
       NEW.nr_seq_ordem_serv,
       NEW.ds_racional_clinico,
       NEW.ie_aprovacao_espec,
       NEW.nr_seq_intencao_uso,
       NEW.nr_seq_analise_impacto);

  end if;

RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_reg_product_requirement_after() FROM PUBLIC;

CREATE TRIGGER reg_product_requirement_after
	AFTER UPDATE ON reg_product_requirement FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_reg_product_requirement_after();

