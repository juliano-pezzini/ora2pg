-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS rop_lote_movto_atual ON rop_lote_movto CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_rop_lote_movto_atual() RETURNS trigger AS $BODY$
declare

ie_tipo_operacao_w		varchar(1);
ie_entrada_saida_w			varchar(1);
qt_saldo_w			double precision;
nr_seq_roupa_w			bigint;
qt_roupa_w			double precision;
qt_saldo_ww			double precision := 0;
qt_saldo_www			double precision := 0;
qt_existe_w			bigint;
qt_existe_destino_w		bigint;
qt_roupa_cadastro_w		double precision;
ie_operacao_w			varchar(80);

c01 CURSOR FOR
SELECT	nr_seq_roupa,
	qt_roupa,
	rop_obter_dados_operacao(NEW.nr_seq_operacao, 'T')
from	rop_movto_roupa
where	nr_seq_lote = NEW.nr_Sequencia
and	qt_roupa is not null;

BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
	select	ie_tipo_operacao,
		ie_entrada_saida
	into STRICT	ie_tipo_operacao_w,
		ie_entrada_saida_w
	from	rop_operacao
	where	nr_sequencia = NEW.nr_seq_operacao;

/* so atualiza quando libera o lote e se a operacao do movimento tiver algum tipo informado*/


if (OLD.dt_liberacao is null) and (NEW.dt_liberacao is not null) and (ie_tipo_operacao_w is not null) then
	BEGIN

	open C01;
	loop
	fetch C01 into
		nr_seq_roupa_w,
		qt_roupa_w,
		ie_operacao_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN

		select	count(*)
		into STRICT	qt_existe_w
		from	rop_saldo_roupa
		where	nr_seq_local = NEW.nr_seq_local
		and	dt_mesano_referencia = trunc(LOCALTIMESTAMP,'mm')
		and	nr_seq_roupa = nr_seq_roupa_w;

		select	sum(qt_saldo)
		into STRICT	qt_existe_destino_w
		from	rop_saldo_roupa
		where	nr_seq_local = NEW.nr_seq_local_orig_dest
		and	dt_mesano_referencia = trunc(LOCALTIMESTAMP,'mm')
		and	nr_seq_roupa = nr_seq_roupa_w;

		select	coalesce(sum(qt_saldo),0)
		into STRICT	qt_saldo_w
		from	rop_saldo_roupa
		where	nr_seq_local = NEW.nr_seq_local
		and	dt_mesano_referencia = trunc(LOCALTIMESTAMP,'mm')
		and	nr_seq_roupa = nr_seq_roupa_w;

		select	coalesce(sum(qt_roupa),0)
		into STRICT	qt_roupa_cadastro_w
		from	rop_roupa
		where	nr_sequencia = nr_seq_roupa_w;

		/*Se nao existe na tabela de saldo, faz insert*/


		if (qt_existe_w = 0) then
			BEGIN
			if (ie_entrada_saida_w = 'E') then

				if (ie_tipo_operacao_w in (0,1,4)) then
					qt_saldo_ww := qt_roupa_w;
				elsif (ie_tipo_operacao_w  = 2) then
					qt_saldo_ww := qt_roupa_cadastro_w;
				end if;

				insert into rop_saldo_roupa(
					nr_seq_roupa,
					nr_seq_local,
					dt_mesano_referencia,
					qt_saldo)
				values (	nr_seq_roupa_w,
					NEW.nr_seq_local,
					trunc(LOCALTIMESTAMP,'mm'),
					qt_saldo_ww);

			elsif (ie_entrada_saida_w = 'S') then

				if (ie_tipo_operacao_w in (0,1,3)) then
					qt_saldo_ww := qt_roupa_w * -1;
				elsif (ie_tipo_operacao_w = 2) then
					qt_saldo_ww := qt_roupa_cadastro_w;
				end if;

				insert into rop_saldo_roupa(
					nr_seq_roupa,
					nr_seq_local,
					dt_mesano_referencia,
					qt_saldo)
				values (	nr_seq_roupa_w,
					NEW.nr_seq_local,
					trunc(LOCALTIMESTAMP,'mm'),
					qt_saldo_ww);

				if (ie_operacao_w = 'TS') and (NEW.nr_seq_local_orig_dest > 0) then
					BEGIN

					select	count(*)
					into STRICT	qt_existe_w
					from	rop_saldo_roupa
					where	nr_seq_local = NEW.nr_seq_local_orig_dest
					and	dt_mesano_referencia = trunc(LOCALTIMESTAMP,'mm')
					and	nr_seq_roupa = nr_seq_roupa_w;

					if (qt_existe_w = 0) then
						insert into rop_saldo_roupa(
							nr_seq_roupa,
							nr_seq_local,
							dt_mesano_referencia,
							qt_saldo)
						values (	nr_seq_roupa_w,
							NEW.nr_seq_local_orig_dest,
							trunc(LOCALTIMESTAMP,'mm'),
							qt_roupa_w);
					else
						qt_saldo_www := qt_roupa_w + qt_existe_destino_w;

						update	rop_saldo_roupa
						set	qt_saldo = qt_saldo_www
						where	nr_seq_local = NEW.nr_seq_local_orig_dest
						and	dt_mesano_referencia = trunc(LOCALTIMESTAMP,'mm')
						and	nr_seq_roupa = nr_seq_roupa_w;
					end if;

					end;
				end if;
			end if;
			end;
		/*Senao, faz update*/


		else
			BEGIN
			if (ie_entrada_saida_w = 'E') then

				if (ie_tipo_operacao_w in (0,1,4)) then
					qt_saldo_ww := qt_saldo_w + qt_roupa_w;
				elsif (ie_tipo_operacao_w  = 2) then
					qt_saldo_ww := qt_roupa_cadastro_w;
				end if;

				update	rop_saldo_roupa
				set	qt_saldo = qt_saldo_ww
				where	nr_seq_local = NEW.nr_seq_local
				and	dt_mesano_referencia = trunc(LOCALTIMESTAMP,'mm')
				and	nr_seq_roupa = nr_seq_roupa_w;
				
				if (ie_operacao_w = 'TS') and (NEW.nr_seq_local_orig_dest > 0) then
					BEGIN
						qt_saldo_www := qt_existe_destino_w - qt_roupa_w;

						update	rop_saldo_roupa
						set	qt_saldo = qt_saldo_www
						where	nr_seq_local = NEW.nr_seq_local_orig_dest
						and	dt_mesano_referencia = trunc(LOCALTIMESTAMP,'mm')
						and	nr_seq_roupa = nr_seq_roupa_w;
					end;
				end if;
				
			elsif (ie_entrada_saida_w = 'S') then

				if (ie_tipo_operacao_w in (0,1,3)) then
					qt_saldo_ww := qt_saldo_w - qt_roupa_w;
				elsif (ie_tipo_operacao_w  = 2) then
					qt_saldo_ww := qt_roupa_cadastro_w;
				end if;

				update	rop_saldo_roupa
				set	qt_saldo = qt_saldo_ww
				where	nr_seq_local = NEW.nr_seq_local
				and	dt_mesano_referencia = trunc(LOCALTIMESTAMP,'mm')
				and	nr_seq_roupa = nr_seq_roupa_w;

				if (ie_operacao_w = 'TS') and (NEW.nr_seq_local_orig_dest > 0) then
					BEGIN

					select	count(*)
					into STRICT	qt_existe_w
					from	rop_saldo_roupa
					where	nr_seq_local = NEW.nr_seq_local_orig_dest
					and	dt_mesano_referencia = trunc(LOCALTIMESTAMP,'mm')
					and	nr_seq_roupa = nr_seq_roupa_w;

					if (qt_existe_w = 0) then
						insert into rop_saldo_roupa(
							nr_seq_roupa,
							nr_seq_local,
							dt_mesano_referencia,
							qt_saldo)
						values (	nr_seq_roupa_w,
							NEW.nr_seq_local_orig_dest,
							trunc(LOCALTIMESTAMP,'mm'),
							qt_roupa_w);
					else
						qt_saldo_www := qt_roupa_w + qt_existe_destino_w;

						update	rop_saldo_roupa
						set	qt_saldo = qt_saldo_www
						where	nr_seq_local = NEW.nr_seq_local_orig_dest
						and	dt_mesano_referencia = trunc(LOCALTIMESTAMP,'mm')
						and	nr_seq_roupa = nr_seq_roupa_w;
					end if;

					end;
				end if;
			end if;
			end;
		end if;
		end;
	end loop;
	close C01;

	end;
end if;
end if;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_rop_lote_movto_atual() FROM PUBLIC;

CREATE TRIGGER rop_lote_movto_atual
	BEFORE INSERT OR UPDATE ON rop_lote_movto FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_rop_lote_movto_atual();

