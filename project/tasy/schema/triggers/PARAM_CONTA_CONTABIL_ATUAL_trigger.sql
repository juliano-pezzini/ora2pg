-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS param_conta_contabil_atual ON parametros_conta_contabil CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_param_conta_contabil_atual() RETURNS trigger AS $BODY$
declare

ds_erro_w				varchar(2000);
cd_estabelecimento_w	smallint;
cd_empresa_w			smallint;

ds_receita_w			varchar(40);
ds_estoque_w			varchar(40);
ds_despesa_w			varchar(40);
ds_gratuidade_w			varchar(40);	
ds_desp_pre_fatur_w		varchar(40);
ds_redut_receita_w 		varchar(40);
ds_passag_direta_w 		varchar(40);
ds_rec_pacote_w	   		varchar(40);
BEGIN
  BEGIN

if (obter_bloq_canc_proj_rec(NEW.nr_seq_proj_rec) > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1144309);  -- Registro associado a um projeto bloqueado ou cancelado. 
end if;

ds_receita_w		:= substr(wheb_mensagem_pck.get_texto(304171,''),1,40);
ds_estoque_w		:= substr(wheb_mensagem_pck.get_texto(304174,''),1,40);
ds_despesa_w		:= substr(wheb_mensagem_pck.get_texto(304175,''),1,40);
ds_gratuidade_w		:= substr(wheb_mensagem_pck.get_texto(354047,''),1,40);
ds_desp_pre_fatur_w := substr(wheb_mensagem_pck.get_texto(354048,''),1,40);
ds_redut_receita_w  := substr(wheb_mensagem_pck.get_texto(354049,''),1,40);
ds_passag_direta_w  := substr(wheb_mensagem_pck.get_texto(354050,''),1,40);
ds_rec_pacote_w	    := substr(wheb_mensagem_pck.get_texto(354051,''),1,40);



if (NEW.cd_empresa is null) then
	BEGIN
	cd_estabelecimento_w	:= coalesce(NEW.cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento);
	
	BEGIN
	select	cd_empresa
	into STRICT	cd_empresa_w
	from	estabelecimento
	where	cd_estabelecimento = cd_estabelecimento_w;	
	exception when others then
		cd_empresa_w	:= null;
	end;
	
	NEW.cd_empresa	:= cd_empresa_w;
	end;
end if;

CALL ctb_consistir_conta_titulo(NEW.cd_conta_receita, 			ds_receita_w);
CALL ctb_consistir_conta_titulo(NEW.cd_conta_estoque, 			ds_estoque_w);
CALL ctb_consistir_conta_titulo(NEW.cd_conta_despesa, 			ds_despesa_w);
CALL ctb_consistir_conta_titulo(NEW.cd_conta_gratuidade, 		ds_gratuidade_w);
CALL ctb_consistir_conta_titulo(NEW.cd_conta_desp_pre_fatur, 	ds_desp_pre_fatur_w);
CALL ctb_consistir_conta_titulo(NEW.cd_conta_redut_receita, 	ds_redut_receita_w);
CALL ctb_consistir_conta_titulo(NEW.cd_conta_passag_direta, 	ds_passag_direta_w);
CALL ctb_consistir_conta_titulo(NEW.cd_conta_rec_pacote, 		ds_rec_pacote_w);

ctb_consistir_conta_estab(NEW.cd_estabelecimento, NEW.cd_conta_receita, 			ds_receita_w);
ctb_consistir_conta_estab(NEW.cd_estabelecimento, NEW.cd_conta_estoque, 			ds_estoque_w);
ctb_consistir_conta_estab(NEW.cd_estabelecimento, NEW.cd_conta_despesa, 			ds_despesa_w);
ctb_consistir_conta_estab(NEW.cd_estabelecimento, NEW.cd_conta_gratuidade, 		ds_gratuidade_w);
ctb_consistir_conta_estab(NEW.cd_estabelecimento, NEW.cd_conta_desp_pre_fatur, 	ds_desp_pre_fatur_w);
ctb_consistir_conta_estab(NEW.cd_estabelecimento, NEW.cd_conta_redut_receita, 	ds_redut_receita_w);
ctb_consistir_conta_estab(NEW.cd_estabelecimento, NEW.cd_conta_passag_direta, 	ds_passag_direta_w);
ctb_consistir_conta_estab(NEW.cd_estabelecimento, NEW.cd_conta_rec_pacote, 		ds_rec_pacote_w);


ds_erro_w := con_consiste_vigencia_conta(NEW.cd_conta_receita, NEW.dt_inicio_vigencia, NEW.dt_fim_vigencia, ds_erro_w);
if (ds_erro_w is not null) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(184609,'DS_ERRO_W=' || ds_erro_w);
end if;

ds_erro_w := con_consiste_vigencia_conta(NEW.cd_conta_estoque, NEW.dt_inicio_vigencia, NEW.dt_fim_vigencia, ds_erro_w);
if (ds_erro_w is not null) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(184609,'DS_ERRO_W=' || ds_erro_w);
end if;

ds_erro_w := con_consiste_vigencia_conta(NEW.cd_conta_despesa, NEW.dt_inicio_vigencia, NEW.dt_fim_vigencia, ds_erro_w);
if (ds_erro_w is not null) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(184609,'DS_ERRO_W=' || ds_erro_w);
end if;

ds_erro_w := con_consiste_vigencia_conta(NEW.cd_conta_gratuidade, NEW.dt_inicio_vigencia, NEW.dt_fim_vigencia, ds_erro_w);
if (ds_erro_w is not null) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(184609,'DS_ERRO_W=' || ds_erro_w);
end if;

ds_erro_w := con_consiste_vigencia_conta(NEW.cd_conta_desp_pre_fatur, NEW.dt_inicio_vigencia, NEW.dt_fim_vigencia, ds_erro_w);
if (ds_erro_w is not null) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(184609,'DS_ERRO_W=' || ds_erro_w);
end if;

ds_erro_w := con_consiste_vigencia_conta(NEW.cd_conta_redut_receita, NEW.dt_inicio_vigencia, NEW.dt_fim_vigencia, ds_erro_w);
if (ds_erro_w is not null) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(184609,'DS_ERRO_W=' || ds_erro_w);
end if;

ds_erro_w := con_consiste_vigencia_conta(NEW.cd_conta_passag_direta, NEW.dt_inicio_vigencia, NEW.dt_fim_vigencia, ds_erro_w);
if (ds_erro_w is not null) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(184609,'DS_ERRO_W=' || ds_erro_w);
end if;

ds_erro_w := con_consiste_vigencia_conta(NEW.cd_conta_rec_pacote, NEW.dt_inicio_vigencia, NEW.dt_fim_vigencia, ds_erro_w);
if (ds_erro_w is not null) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(184609,'DS_ERRO_W=' || ds_erro_w);
end if;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_param_conta_contabil_atual() FROM PUBLIC;

CREATE TRIGGER param_conta_contabil_atual
	BEFORE INSERT OR UPDATE ON parametros_conta_contabil FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_param_conta_contabil_atual();

