-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS evolucao_paciente_aftupd ON evolucao_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_evolucao_paciente_aftupd() RETURNS trigger AS $BODY$
declare

ie_integrar_gerint_w			tipo_evolucao.ie_integrar_gerint%type;
ie_regulacao_gerint_w			parametro_atendimento.ie_regulacao_gerint%type;
nr_protocolo_solicitacao_w		gerint_solic_internacao.nr_protocolo_solicitacao%type;
ds_sep_bv_w						varchar(50);

BEGIN

	--Valida se a evolução informada gera evento para integração do Gerint.
	select	coalesce(max(ie_integrar_gerint),'N')
	into STRICT	ie_integrar_gerint_w
	from	tipo_evolucao
	where	cd_tipo_evolucao = NEW.IE_EVOLUCAO_CLINICA;

	if (ie_integrar_gerint_w = 'S') then
		--Verifica se utiliza regulação de leitos para o estado do Rio Grande do Sul.
		select	coalesce(max(ie_regulacao_gerint),'N')
		into STRICT	ie_regulacao_gerint_w
		from	parametro_atendimento
		where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

		select	max(nr_protocolo_solicitacao)
		into STRICT	nr_protocolo_solicitacao_w
		from	gerint_solic_internacao
		where	nr_atendimento = NEW.nr_atendimento
		and		ie_situacao <> 'L'; --Alta Gerada
		if ((OLD.dt_liberacao is null AND NEW.dt_liberacao is not null) and (ie_regulacao_gerint_w = 'S') and (nr_protocolo_solicitacao_w is not null)) then

			ds_sep_bv_w	:=	obter_separador_bv;

			CALL exec_sql_dinamico_bv('TASY', Gerint_desc_de_para('QUERY'), 	'nm_usuario_p='					|| NEW.nm_usuario  						|| ds_sep_bv_w ||
																		'cd_estabelecimento_p=' 		|| wheb_usuario_pck.get_cd_estabelecimento 	|| ds_sep_bv_w ||
																		'id_evento_p=' 					|| '10'				 						|| ds_sep_bv_w ||
																		'nr_atendimento_p=' 			|| NEW.nr_atendimento 						|| ds_sep_bv_w ||
																		'ie_leito_extra_p=' 			|| null										|| ds_sep_bv_w ||
																		'dt_alta_p=' 					|| null 									|| ds_sep_bv_w ||
																		'ds_motivo_alta_p=' 			|| null 									|| ds_sep_bv_w ||
																		'ds_justif_transferencia_p='	|| null 									|| ds_sep_bv_w ||
																		'nr_seq_solic_internacao_p=' 	|| null 									|| ds_sep_bv_w ||
																		'nr_seq_leito_p=' 				|| null										|| ds_sep_bv_w ||
																		'ds_ident_leito_p='				|| null										|| ds_sep_bv_w ||
																		'nr_seq_classif_p=' 			|| null										|| ds_sep_bv_w ||
																		'ie_status_unidade_p=' 			|| null										|| ds_sep_bv_w ||
																		'nr_cpf_paciente_p=' 			|| null										|| ds_sep_bv_w ||
																		'nr_cartao_sus_p=' 				|| null										|| ds_sep_bv_w ||
																		'cd_cid_p='						|| null										|| ds_sep_bv_w ||
																		'cd_evolucao_p='				||NEW.cd_evolucao);
			--Gerar_evento_gerint(:new.nm_usuario,wheb_usuario_pck.get_cd_estabelecimento,10,:new.nr_atendimento,null,null,null,null,null,null,null,null,null,null);
		end if;
	end if;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_evolucao_paciente_aftupd() FROM PUBLIC;

CREATE TRIGGER evolucao_paciente_aftupd
	AFTER UPDATE ON evolucao_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_evolucao_paciente_aftupd();

