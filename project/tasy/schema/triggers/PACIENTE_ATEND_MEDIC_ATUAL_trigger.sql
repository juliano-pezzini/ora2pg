-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS paciente_atend_medic_atual ON paciente_atend_medic CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_paciente_atend_medic_atual() RETURNS trigger AS $BODY$
declare
nr_seq_paciente_w		bigint;
nr_seq_pend_Agenda_w	bigint;
qt_reg_w			bigint;
ie_via_aplicacao_w		varchar(5);
ds_restricao_medic_onc_w 	varchar(100);
pr_reducao_w    bigint;

BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'N')  then
	goto Final;
end if;

if (TG_OP = 'INSERT')  or (NEW.cd_material <> OLD.cd_material) then
	
	select obter_se_restricao_medic_onc(NEW.cd_material)
	into STRICT ds_restricao_medic_onc_w
	;
	
	if (ds_restricao_medic_onc_w is not null) and (NEW.nr_seq_prot_med is null) and (NEW.nr_seq_solucao is null) and (NEW.nr_seq_diluicao is null) then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(ds_restricao_medic_onc_w);
	end if;
	
	CALL Consiste_Regra_Mat_quimio(NEW.cd_material);
end if;


select	max(nr_seq_paciente),
	max(nr_seq_pend_Agenda)
into STRICT	nr_seq_paciente_w,
	nr_seq_pend_Agenda_w
from	paciente_atendimento
where	nr_seq_atendimento = NEW.nr_seq_atendimento;

if (NEW.dt_cancelamento is null) then
	CALL Abortar_Se_Protoc_Inativo(nr_seq_paciente_w);
end if;


if (NEW.pr_reducao is not null) and (coalesce(NEW.pr_reducao,0) <> coalesce(OLD.pr_reducao,0))  and (coalesce(NEW.QT_DOSE_PRESCRICAO,0) = coalesce(OLD.QT_DOSE_PRESCRICAO,0))then
    pr_reducao_w := 100;
    if (OLD.pr_reducao > 0) then
        pr_reducao_w := OLD.pr_reducao;
    end if;
	NEW.QT_DOSE_PRESCRICAO := (((coalesce(NEW.pr_reducao,100) * coalesce(NEW.QT_DOSE_PRESCRICAO,0)) / pr_reducao_w));
	
end if;


if (TG_OP = 'INSERT') then
	
	update	qt_pendencia_agenda
	set	ie_alt_medicamento = 'S'
	where	nr_sequencia = nr_seq_pend_Agenda_w;
	
elsif (not TG_OP = 'INSERT') and
      ((coalesce(OLD.cd_material,0)	    	<> 	coalesce(NEW.cd_material,0)) or (coalesce(OLD.CD_INTERVALO,'XxX') 	<> 	coalesce(NEW.CD_INTERVALO,'XxX')) or (coalesce(OLD.qt_dose,0) 	    	<> 	coalesce(NEW.qt_dose,0)) or (coalesce(OLD.qt_hora_aplicacao,0) 	<> 	coalesce(NEW.qt_hora_aplicacao,0)) or (coalesce(OLD.qt_min_aplicacao,0) 	<> 	coalesce(NEW.qt_min_aplicacao,0))) then

	update	qt_pendencia_agenda
	set	ie_alt_medicamento = 'S'
	where	nr_sequencia = nr_seq_pend_Agenda_w;

end if;

if (TG_OP = 'INSERT') and (NEW.IE_VIA_APLICACAO is null) then
	
	select	max(ie_via_aplicacao)
	into STRICT	ie_via_aplicacao_w
	from	material
	where	cd_material = NEW.CD_MATERIAL;
	
	if (ie_via_aplicacao_w is not null) then
		NEW.IE_VIA_APLICACAO := ie_via_aplicacao_w;
	end if;
	
end if;

if (NEW.cd_unid_medida_ref is null) then
	NEW.cd_unid_medida_ref := NEW.cd_unid_med_prescr;
end if;

if (NEW.qt_dose_ref is null) then
	NEW.qt_dose_ref := NEW.qt_dose_prescricao;
end if;

<<Final>>
qt_reg_w	:= 0;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_paciente_atend_medic_atual() FROM PUBLIC;

CREATE TRIGGER paciente_atend_medic_atual
	BEFORE INSERT OR UPDATE ON paciente_atend_medic FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_paciente_atend_medic_atual();

