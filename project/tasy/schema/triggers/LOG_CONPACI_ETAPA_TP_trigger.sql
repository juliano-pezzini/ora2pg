-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS log_conpaci_etapa_tp ON log_conpaci_etapa CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_log_conpaci_etapa_tp() RETURNS trigger AS $BODY$
DECLARE nr_seq_w bigint;ds_s_w   varchar(1);ds_c_w   varchar(1);ds_w	   varchar(1);ie_log_w varchar(1);BEGIN BEGIN ds_s_w := to_char(OLD.NR_SEQUENCIA);  ds_c_w:=null;SELECT * FROM gravar_log_alteracao(substr(OLD.CD_PESSOA_EXEC,1,4000), substr(NEW.CD_PESSOA_EXEC,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_PESSOA_EXEC', ie_log_w, ds_w, 'LOG_CONPACI_ETAPA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_OBSERVACAO,1,4000), substr(NEW.DS_OBSERVACAO,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_OBSERVACAO', ie_log_w, ds_w, 'LOG_CONPACI_ETAPA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_SETOR_ATENDIMENTO,1,4000), substr(NEW.CD_SETOR_ATENDIMENTO,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_SETOR_ATENDIMENTO', ie_log_w, ds_w, 'LOG_CONPACI_ETAPA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(to_char(OLD.DT_ETAPA,'dd/mm/yyyy hh24:mi:ss'), to_char(NEW.DT_ETAPA,'dd/mm/yyyy hh24:mi:ss'), NEW.nm_usuario, nr_seq_w, 'DT_ETAPA', ie_log_w, ds_w, 'LOG_CONPACI_ETAPA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(to_char(OLD.DT_FIM_ETAPA,'dd/mm/yyyy hh24:mi:ss'), to_char(NEW.DT_FIM_ETAPA,'dd/mm/yyyy hh24:mi:ss'), NEW.nm_usuario, nr_seq_w, 'DT_FIM_ETAPA', ie_log_w, ds_w, 'LOG_CONPACI_ETAPA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(to_char(OLD.DT_PERIODO_FINAL,'dd/mm/yyyy hh24:mi:ss'), to_char(NEW.DT_PERIODO_FINAL,'dd/mm/yyyy hh24:mi:ss'), NEW.nm_usuario, nr_seq_w, 'DT_PERIODO_FINAL', ie_log_w, ds_w, 'LOG_CONPACI_ETAPA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(to_char(OLD.DT_PERIODO_INICIAL,'dd/mm/yyyy hh24:mi:ss'), to_char(NEW.DT_PERIODO_INICIAL,'dd/mm/yyyy hh24:mi:ss'), NEW.nm_usuario, nr_seq_w, 'DT_PERIODO_INICIAL', ie_log_w, ds_w, 'LOG_CONPACI_ETAPA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(to_char(OLD.DT_RECEBIMENTO,'dd/mm/yyyy hh24:mi:ss'), to_char(NEW.DT_RECEBIMENTO,'dd/mm/yyyy hh24:mi:ss'), NEW.nm_usuario, nr_seq_w, 'DT_RECEBIMENTO', ie_log_w, ds_w, 'LOG_CONPACI_ETAPA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_ETAPA_CRITICA,1,4000), substr(NEW.IE_ETAPA_CRITICA,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_ETAPA_CRITICA', ie_log_w, ds_w, 'LOG_CONPACI_ETAPA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_ETAPA_PROTOCOLO,1,4000), substr(NEW.IE_ETAPA_PROTOCOLO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_ETAPA_PROTOCOLO', ie_log_w, ds_w, 'LOG_CONPACI_ETAPA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_LOTE_BARRAS,1,4000), substr(NEW.NR_LOTE_BARRAS,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_LOTE_BARRAS', ie_log_w, ds_w, 'LOG_CONPACI_ETAPA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQ_CONTA_ORIGEM,1,4000), substr(NEW.NR_SEQ_CONTA_ORIGEM,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQ_CONTA_ORIGEM', ie_log_w, ds_w, 'LOG_CONPACI_ETAPA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQ_ETAPA,1,4000), substr(NEW.NR_SEQ_ETAPA,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQ_ETAPA', ie_log_w, ds_w, 'LOG_CONPACI_ETAPA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQ_MOTIVO_DEV,1,4000), substr(NEW.NR_SEQ_MOTIVO_DEV,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQ_MOTIVO_DEV', ie_log_w, ds_w, 'LOG_CONPACI_ETAPA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQ_PROTOCOLO,1,4000), substr(NEW.NR_SEQ_PROTOCOLO,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQ_PROTOCOLO', ie_log_w, ds_w, 'LOG_CONPACI_ETAPA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.VL_CONTA,1,4000), substr(NEW.VL_CONTA,1,4000), NEW.nm_usuario, nr_seq_w, 'VL_CONTA', ie_log_w, ds_w, 'LOG_CONPACI_ETAPA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_PESSOA_FISICA,1,4000), substr(NEW.CD_PESSOA_FISICA,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_PESSOA_FISICA', ie_log_w, ds_w, 'LOG_CONPACI_ETAPA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;   exception when others then ds_w:= '1'; end;   END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_log_conpaci_etapa_tp() FROM PUBLIC;

CREATE TRIGGER log_conpaci_etapa_tp
	AFTER UPDATE ON log_conpaci_etapa FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_log_conpaci_etapa_tp();

