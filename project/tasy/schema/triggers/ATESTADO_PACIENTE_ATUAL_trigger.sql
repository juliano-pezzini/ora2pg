-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS atestado_paciente_atual ON atestado_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_atestado_paciente_atual() RETURNS trigger AS $BODY$
declare

/* envio de email de acordo com OS 1772780 será via codigo fonte pois terá um relatório
nr_seq_evento_w		number(10);
cd_estabelecimento_w	number(4);
cd_pessoa_fisica_w	varchar2(10);
qt_idade_w		number(10);

Cursor C01 is
	select	nr_seq_evento 
	from	regra_envio_sms
	where	((cd_estabelecimento_w = 0) or (cd_estabelecimento = cd_estabelecimento_w))
	and	ie_evento_disp = 'LATE'
	and	qt_idade_w between nvl(qt_idade_min,0) and nvl(qt_idade_max,9999)
	and	nvl(ie_situacao,'A') = 'A';*/


BEGIN
--cd_estabelecimento_w := obter_estabelecimento_ativo;


if (coalesce(OLD.DT_ATESTADO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_ATESTADO) and (NEW.DT_ATESTADO is not null) then
	NEW.ds_utc		:= obter_data_utc(NEW.DT_ATESTADO, 'HV');	
end if;

if (coalesce(OLD.DT_LIBERACAO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_LIBERACAO) and (NEW.DT_LIBERACAO is not null) then
	NEW.ds_utc_atualizacao	:= obter_data_utc(NEW.DT_LIBERACAO,'HV');
end if;

/*envio de email de acordo com OS 1772780 será via codigo fonte pois terá um relatório
if	(:new.dt_liberacao is not null) and
	(:old.dt_liberacao is null) then
	cd_pessoa_fisica_w := obter_pessoa_atendimento(:new.nr_atendimento,'C');
	qt_idade_w := nvl(obter_idade_pf(cd_pessoa_fisica_w,sysdate,'A'),0);

	begin
	open C01;
	loop
	fetch C01 into	
		nr_seq_evento_w;
	exit when C01%notfound;
		begin
			--gerar_evento_paciente_trigger(nr_seq_evento_w,:new.nr_atendimento,cd_pessoa_fisica_w,null,:new.nm_usuario,null,:new.dt_liberacao);

		end;
	end loop;
	close C01;
	
	exception
		when others then
		null;
	end;
end if;*/

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_atestado_paciente_atual() FROM PUBLIC;

CREATE TRIGGER atestado_paciente_atual
	BEFORE INSERT OR UPDATE ON atestado_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_atestado_paciente_atual();

