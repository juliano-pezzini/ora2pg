-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS atend_categ_convenio_befupdate ON atend_categoria_convenio CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_atend_categ_convenio_befupdate() RETURNS trigger AS $BODY$
DECLARE

ie_permite_guia_senha_atend_w	varchar(1);
ie_plano_w			smallint;
ie_entrada_vigencia_w 		varchar(1);
dt_entrada_w			timestamp;

BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger	= 'S') then

select	max(dt_entrada)
into STRICT	dt_entrada_w
from	atendimento_paciente
where	nr_atendimento	= NEW.nr_atendimento;

ie_entrada_vigencia_w := Obter_param_Usuario(916, 637, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_entrada_vigencia_w);
ie_permite_guia_senha_atend_w := Obter_Param_Usuario(916, 1018, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_permite_guia_senha_atend_w);

if (ie_entrada_vigencia_w = 'S') and (dt_entrada_w < NEW.dt_inicio_vigencia) then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort( 262357 , 'DT_ENTRADA='||to_char(dt_entrada_w,'dd/mm/yyyy hh24:mi:ss')||';DT_VIGENCIA='||to_char(NEW.dt_inicio_vigencia,'dd/mm/yyyy hh24:mi:ss'));
end if;

if (ie_permite_guia_senha_atend_w = 'N') and
	((NEW.nr_doc_convenio is not null) or (NEW.cd_senha is not null)) then
	if (to_char(NEW.nr_atendimento) = NEW.nr_doc_convenio) then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(223884);
	end if;
	
	if (to_char(NEW.nr_atendimento) = NEW.cd_senha) then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(223885);
	end if;	
end if;

if ('00/00/0000 00:00:00' = to_char(NEW.dt_validade_carteira,'dd/mm/yyyy hh24:mi:ss')) then
	NEW.dt_validade_carteira := null;
end if;

if (OLD.IE_LIB_DIETA <> NEW.IE_LIB_DIETA) then
	NEW.dt_atualizacao := LOCALTIMESTAMP;
	NEW.nm_usuario := wheb_usuario_pck.get_nm_usuario;
end if;

select 	coalesce(max(1), 0)
into STRICT 	ie_plano_w
from 	convenio_plano
where 	cd_plano = NEW.cd_plano_convenio;

if (ie_plano_w = 0) then
	NEW.cd_plano_convenio := null;
end if;

end if;

RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_atend_categ_convenio_befupdate() FROM PUBLIC;

CREATE TRIGGER atend_categ_convenio_befupdate
	BEFORE UPDATE ON atend_categoria_convenio FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_atend_categ_convenio_befupdate();

