-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS subject_biometrics_atual ON pessoa_fisica_biometria CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_subject_biometrics_atual() RETURNS trigger AS $BODY$
DECLARE
    rc_usuario_biometria        pessoa_fisica_biometria%rowtype;
BEGIN
    rc_usuario_biometria.DS_BIOMETRIA :=NEW.DS_BIOMETRIA;
    rc_usuario_biometria.NR_SEQUENCIA :=NEW.NR_SEQUENCIA;
    rc_usuario_biometria.CD_PESSOA_FISICA :=NEW.CD_PESSOA_FISICA;
    IF
            TG_OP = 'INSERT'
    THEN
            INSERT INTO SUBJECT_BIOMETRICS(ID_SUBJECT, DS_HASH, DS_SALT)
            SELECT SUB.ID, GET_MD5_HASH_VALUE(rc_usuario_biometria.DS_BIOMETRIA), GET_MD5_HASH_VALUE(TO_CHAR(rc_usuario_biometria.NR_SEQUENCIA))
            FROM usuario USR
            INNER JOIN SUBJECT SUB ON (USR.NM_USUARIO = SUB.DS_LOGIN)
            WHERE USR.IE_SITUACAO = 'A'
            AND rc_usuario_biometria.CD_PESSOA_FISICA = usr.CD_PESSOA_FISICA;

    ELSIF
            TG_OP = 'UPDATE'
    THEN
            DELETE FROM subject_biometrics
            WHERE EXISTS (SELECT 1 FROM usuario USR
            INNER JOIN SUBJECT SUB ON (USR.NM_USUARIO = SUB.DS_LOGIN)
            WHERE USR.NM_USUARIO = rc_usuario_biometria.CD_PESSOA_FISICA
            AND subject_biometrics.DS_SALT = GET_MD5_HASH_VALUE(TO_CHAR(rc_usuario_biometria.NR_SEQUENCIA))
            AND subject_biometrics.ID_SUBJECT = SUB.ID
            AND rc_usuario_biometria.CD_PESSOA_FISICA = usr.CD_PESSOA_FISICA);
            INSERT INTO SUBJECT_BIOMETRICS(ID_SUBJECT, DS_HASH, DS_SALT)
            SELECT SUB.ID, GET_MD5_HASH_VALUE(rc_usuario_biometria.DS_BIOMETRIA), GET_MD5_HASH_VALUE(TO_CHAR(rc_usuario_biometria.NR_SEQUENCIA))
            FROM usuario USR
            INNER JOIN SUBJECT SUB ON (USR.NM_USUARIO = SUB.DS_LOGIN)
            WHERE USR.IE_SITUACAO = 'A'
            AND rc_usuario_biometria.CD_PESSOA_FISICA = usr.CD_PESSOA_FISICA;
    ELSE
            DELETE FROM subject_biometrics
            WHERE EXISTS (SELECT 1 FROM usuario USR
            INNER JOIN SUBJECT SUB ON (USR.NM_USUARIO = SUB.DS_LOGIN)
            WHERE USR.NM_USUARIO = rc_usuario_biometria.CD_PESSOA_FISICA
            AND subject_biometrics.DS_SALT = GET_MD5_HASH_VALUE(TO_CHAR(rc_usuario_biometria.NR_SEQUENCIA))
            AND subject_biometrics.ID_SUBJECT = SUB.ID
            AND rc_usuario_biometria.CD_PESSOA_FISICA = usr.CD_PESSOA_FISICA);
    END IF;

IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_subject_biometrics_atual() FROM PUBLIC;

CREATE TRIGGER subject_biometrics_atual
	BEFORE INSERT OR UPDATE OR DELETE OF nr_sequencia,cd_pessoa_fisica,ds_biometria ON pessoa_fisica_biometria FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_subject_biometrics_atual();

