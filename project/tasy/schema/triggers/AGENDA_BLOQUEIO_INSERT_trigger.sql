-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS agenda_bloqueio_insert ON agenda_bloqueio CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_agenda_bloqueio_insert() RETURNS trigger AS $BODY$
DECLARE
dt_atualizacao 	timestamp	:= LOCALTIMESTAMP;
cd_tipo_agenda_w	agenda.cd_tipo_agenda%type;
cd_estabelecimento_w    agenda.cd_estabelecimento%type;
ie_forma_excluir_exame_w    parametro_agenda.ie_forma_excluir_exame%type;
ie_forma_excluir_servico_w    parametro_agenda.ie_forma_excluir_servico%type;
ie_forma_excluir_consulta_w    parametro_agenda.ie_forma_excluir_consulta%type;
dt_inicial_w    agenda_bloqueio.dt_inicial%type;
dt_final_w    agenda_bloqueio.dt_final%type;
BEGIN
  BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger = 'N') then
    RETURN NEW;
end if;
BEGIN

SELECT max(cd_tipo_agenda),
       max(cd_estabelecimento)
INTO STRICT   cd_tipo_agenda_w,
       cd_estabelecimento_w
FROM   agenda
WHERE  cd_agenda = NEW.cd_agenda;

SELECT max(coalesce(ie_forma_excluir_servico, 'N')),
       max(coalesce(ie_forma_excluir_exame, 'N')),
       max(coalesce(ie_forma_excluir_consulta, 'N'))
INTO STRICT   ie_forma_excluir_servico_w,
       ie_forma_excluir_exame_w,
       ie_forma_excluir_consulta_w
FROM   parametro_agenda
WHERE  cd_estabelecimento = cd_estabelecimento_w;

if ((cd_tipo_agenda_w in ('3', '4') and ie_forma_excluir_consulta_w = 'N') or (cd_tipo_agenda_w = '5' and ie_forma_excluir_servico_w = 'N')) then

	delete	from agenda_consulta
	where	trunc(dt_agenda) between NEW.dt_inicial and NEW.dt_final
	and	cd_agenda	= NEW.cd_agenda
	and	ie_status_agenda = 'L';

elsif (cd_tipo_agenda_w = '2' and ie_forma_excluir_exame_w = 'N') then

	delete from agenda_paciente
	where	trunc(dt_agenda) between NEW.dt_inicial and NEW.dt_final
	and	cd_agenda	= NEW.cd_agenda
	and	ie_status_agenda = 'L';

end if;

dt_inicial_w := LEAST(NEW.dt_inicial,OLD.dt_inicial);
dt_final_w := GREATEST(NEW.dt_final,OLD.dt_final);

if (dt_inicial_w is null) then
  dt_inicial_w := coalesce(NEW.dt_inicial,OLD.dt_inicial);
end if;

if (dt_final_w is null) then
  dt_final_w := coalesce(NEW.dt_final,OLD.dt_final);
end if;

DELETE	FROM agenda_controle_horario
WHERE	dt_agenda >= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(LOCALTIMESTAMP)
AND	dt_agenda BETWEEN dt_inicial_w AND dt_final_w
AND	cd_agenda	= NEW.cd_agenda;
	
exception
	when others then
      	dt_atualizacao := LOCALTIMESTAMP;
end;
	
  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_agenda_bloqueio_insert() FROM PUBLIC;

CREATE TRIGGER agenda_bloqueio_insert
	AFTER INSERT OR UPDATE ON agenda_bloqueio FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_agenda_bloqueio_insert();

