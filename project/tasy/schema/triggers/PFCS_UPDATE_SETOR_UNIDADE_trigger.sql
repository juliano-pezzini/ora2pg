-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pfcs_update_setor_unidade ON pfcs_location CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pfcs_update_setor_unidade() RETURNS trigger AS $BODY$
DECLARE
nm_user_w                   unidade_atendimento.nm_usuario%type;

cd_external_unit_w          setor_atendimento.cd_setor_externo%type;
cd_unit_w                   setor_atendimento.cd_setor_atendimento%type;
cd_establishment_w          setor_atendimento.cd_estabelecimento%type;
cd_unit_classification_w    setor_atendimento.cd_classif_setor%type;
ds_unit_w                   setor_atendimento.ds_setor_atendimento%type;
ie_hospital_occupancy_w     setor_atendimento.ie_ocup_hospitalar%type;
ie_stepdown_w               setor_atendimento.ie_semi_intensiva%type;
ie_pacu_w                   setor_atendimento.ie_rpa%type;

cd_tipo_acomodacao_w        tipo_acomodacao.cd_tipo_acomodacao%type;

nr_seq_interno_w            unidade_atendimento.nr_seq_interno%type;
ie_bed_status_w             unidade_atendimento.ie_status_unidade%type;
ie_situation_w              unidade_atendimento.ie_situacao%type;
ie_operation_room_w         unidade_atendimento.ie_exibir_cc%type;
ds_room_w                   unidade_atendimento.cd_unidade_basica%type;
ds_bed_w                    unidade_atendimento.cd_unidade_compl%type;
ds_timezone_offset_w        establishment_locale.nm_timezone_database%type;

ds_log_w                    pfcs_org_structure_log.ds_log%type;
qt_reg_w                    smallint;
cd_type_w                   pfcs_location.cd_type%type;

/*
    Trigger responsible for inserting units and beds when needed.
    Information will come from PFCS_LOCATION table.

    Some fields are being populated ONLY because they are mandatory, so it is advised to be careful when creating links between
    other tables with the ones being used within this trigger.
*/
BEGIN
    if (coalesce(wheb_usuario_pck.get_ie_executar_trigger,'S') = 'N')  then
        goto Final;
    end if;

    nm_user_w := PFCS_PCK_CONSTANTS.NM_USER_PFCS;
    ie_hospital_occupancy_w := PFCS_PCK_CONSTANTS.IE_YES_BR;
    ie_situation_w := PFCS_PCK_CONSTANTS.IE_ACTIVE;

    ds_room_w := substr(NEW.ds_room,1,10);
    ds_bed_w := substr(NEW.ds_bed,1,10);
    cd_type_w := upper(NEW.cd_type);
    cd_external_unit_w := NEW.cd_department;

    -- Getting the establishment code
    select max(cd_estabelecimento)
    into STRICT cd_establishment_w
    from pfcs_organization
    where nr_sequencia = NEW.nr_seq_organization;

    if (cd_establishment_w is not null) then
        CALL wheb_usuario_pck.set_cd_estabelecimento(cd_establishment_w);
        CALL wheb_usuario_pck.set_nm_usuario(PFCS_PCK_CONSTANTS.NM_USER_PFCS);

        select  coalesce(max(TZ_OFFSET(ds_timezone)),TZ_OFFSET(SESSIONTIMEZONE))
        into STRICT    ds_timezone_offset_w
        from    establishment_locale
        where   cd_estabelecimento = cd_establishment_w;

        CALL pkg_i18n.set_estab_timezone(ds_timezone_offset_w);

        -- http://hl7.org/fhir/valueset-location-status.html
        if (upper(NEW.si_status) in (PFCS_PCK_CONSTANTS.SI_STATUS_ACTIVE, PFCS_PCK_CONSTANTS.SI_STATUS_INACTIVE)) then
            ie_situation_w := substr(upper(NEW.si_status), 1, 1);
        elsif (upper(NEW.si_status) = PFCS_PCK_CONSTANTS.SI_STATUS_SUSPENDED) then
            NEW.si_status := PFCS_PCK_CONSTANTS.SI_STATUS_ACTIVE;
            NEW.cd_operational_status := 'C';
        end if;

        ie_bed_status_w     := pfcs_get_bed_mapping(NEW.cd_operational_status, 'F');
        ds_unit_w           := substr(regexp_substr(NEW.id_location,'(^|.)([^.]*)', 1), 1);

        /* http://hl7.org/fhir/v3/ServiceDeliveryLocationRoleType/vs.html
        - Table: valor_dominio / cd_dominio = 1
            1 = Emergency Department
            2 = Surgical Center
            3 = Hospitalization Unit (MedSurg)
            4 = Intensive Care Unit
            9 = Pediatric Unit */
        cd_unit_classification_w :=
            CASE
                WHEN cd_type_w IN ('ER', 'ETU') THEN '1'
                WHEN cd_type_w IN ('NS', 'CRS', 'OMS', 'SU', 'PLS', 'OR', 'RPA', 'PACU') THEN '2'
                --WHEN cd_type_w IN ('ACU', 'MEDSURG', 'HU', 'RHU') THEN '3'
                WHEN cd_type_w IN ('PCU', 'TCU', 'ICU', 'PEDICU', 'PEDNICU') THEN '4'
                WHEN cd_type_w IN ('PEDU') THEN '9'
                WHEN cd_type_w IN ('PTRES') THEN '8'
                ELSE '3'
            END;

        if (cd_type_w in ('PCU', 'TCU')) then
            ie_stepdown_w := PFCS_PCK_CONSTANTS.IE_YES_BR;
        end if;
        -- you cannot consider types 2 and 8 in the general hospital occupancy by default
        if (cd_unit_classification_w in ('2', '8')) then
            ie_hospital_occupancy_w := 'N';
            if (cd_type_w in ('RPA', 'PACU')) then
                ie_pacu_w := PFCS_PCK_CONSTANTS.IE_YES_BR;
            end if;
            if (cd_type_w = 'OR') then
                ie_operation_room_w := PFCS_PCK_CONSTANTS.IE_YES_BR;
            end if;
        end if;

        -- Checking if the unit already exists
        if (position('@' in ds_unit_w) > 0) then -- Tasy Integration
            ds_unit_w := substr(regexp_substr(ds_unit_w, '(^|@)([^@]*)', 2), 2);

            select coalesce(max(cd_setor_atendimento),0)
            into STRICT cd_unit_w
            from setor_atendimento
            where cd_setor_externo = cd_external_unit_w
                and cd_estabelecimento = cd_establishment_w
                and cd_setor_externo is not null;

            NEW.ds_department := ds_unit_w;
        else
            select coalesce(max(cd_setor_atendimento),0)
            into STRICT cd_unit_w
            from setor_atendimento
            where upper(ds_setor_atendimento) = upper(ds_unit_w)
                and cd_estabelecimento = cd_establishment_w;
        end if;


        IF TG_OP = 'INSERT' THEN
            if (cd_unit_w = 0) then
                /************* SETOR_ATENDIMENTO *************/

                select (coalesce(max(cd_setor_atendimento),0)+1)
                into STRICT cd_unit_w
                from setor_atendimento;

                insert into
                setor_atendimento(
                    CD_ESTABELECIMENTO_BASE,
                    CD_ESTABELECIMENTO,
                    CD_SETOR_ATENDIMENTO,
                    CD_SETOR_EXTERNO,
                    CD_CLASSIF_SETOR,
                    DS_SETOR_ATENDIMENTO,
                    DT_ATUALIZACAO,
                    DT_ATUALIZACAO_NREC,
                    IE_ADEP,
                    IE_CIH,
                    IE_CONTA,
                    IE_ESTERILIZACAO,
                    IE_LOC_PEP,
                    IE_OCUP_HOSPITALAR,
                    IE_PROPRIO,
                    IE_SITUACAO,
                    NM_UNIDADE_BASICA,
                    NM_USUARIO,
                    NM_USUARIO_NREC,
                    DS_DESCRICAO,
                    IE_SEMI_INTENSIVA,
                    IE_RPA
                ) values (
                    cd_establishment_w,
                    cd_establishment_w,
                    cd_unit_w,
                    cd_external_unit_w,
                    cd_unit_classification_w,
                    ds_unit_w,
                    LOCALTIMESTAMP,
                    LOCALTIMESTAMP,
                    'N',
                    'S',
                    'S',
                    'N',
                    'S',
                    ie_hospital_occupancy_w,
                    'S',
                    'A',
                    ' ',
                    nm_user_w,
                    nm_user_w,
                    cd_type_w,
                    ie_stepdown_w,
                    ie_pacu_w
                );

                ds_log_w := (
                    concat('cd_setor_atendimento: ',    cd_unit_w)                  || CHR(10) ||
                    concat('ds_setor_atendimento: ',    ds_unit_w)                  || CHR(10) ||
                    concat('ds_classif_setor: ',        cd_unit_classification_w)   || CHR(10) ||
                    concat('cd_estabelecimento_base: ', cd_establishment_w)         || CHR(10) ||
                    concat('cd_estabelecimento: ',      cd_establishment_w)         || CHR(10) ||
                    concat('ie_situacao: ',             'A')                        || CHR(10) ||
                    concat('ie_semi_intensiva: ',       coalesce(ie_stepdown_w, 'null'))
                );
                CALL pfcs_log_pck.pfcs_insert_org_struc_log(
                    ie_type_p => 'INSERT',
                    nm_table_p => 'SETOR_ATENDIMENTO',
                    ds_log_p => ds_log_w,
                    nm_usuario_p => nm_user_w
                );
            end if;

            /************* TIPO_ACOMODACAO *************/

            select coalesce(max(cd_tipo_acomodacao),0)
            into STRICT cd_tipo_acomodacao_w
            from tipo_acomodacao;

            if (cd_tipo_acomodacao_w = 0) then
                cd_tipo_acomodacao_w := cd_tipo_acomodacao_w + 1;

                insert into
                tipo_acomodacao(
                    CD_TIPO_ACOMODACAO,
                    DS_TIPO_ACOMODACAO,
                    NM_USUARIO,
                    NM_USUARIO_NREC,
                    IE_SITUACAO,
                    DT_ATUALIZACAO,
                    DT_ATUALIZACAO_NREC,
                    CD_NIVEL_ACOMODACAO
                ) values (
                    cd_tipo_acomodacao_w,
                    'PFCS',
                    nm_user_w,
                    nm_user_w,
                    'A',
                    LOCALTIMESTAMP,
                    LOCALTIMESTAMP,
                    4
                );
            end if;

            /************* UNIDADE_ATENDIMENTO *************/

            select coalesce(max(nr_seq_interno),0)
            into STRICT nr_seq_interno_w
            from unidade_atendimento
            where cd_setor_atendimento = cd_unit_w
                and cd_unidade_basica = ds_room_w
                and cd_unidade_compl = ds_bed_w;

            if (nr_seq_interno_w = 0) then
                select (coalesce(max(nr_seq_interno), 0) + 1)
                into STRICT nr_seq_interno_w
                from unidade_atendimento;

                insert into
                unidade_atendimento(
                    CD_UNIDADE_BASICA,
                    CD_UNIDADE_COMPL,
                    CD_SETOR_ATENDIMENTO,
                    CD_TIPO_ACOMODACAO,
                    DT_CRIACAO,
                    IE_SITUACAO,
                    DT_ATUALIZACAO,
                    DT_ATUALIZACAO_NREC,
                    NM_USUARIO,
                    NM_USUARIO_NREC,
                    IE_TEMPORARIO,
                    NR_SEQ_LOCATION,
                    NR_SEQ_INTERNO,
                    IE_STATUS_UNIDADE,
                    IE_EXIBIR_CC
                ) values (
                    ds_room_w,
                    ds_bed_w,
                    cd_unit_w,
                    cd_tipo_acomodacao_w,
                    LOCALTIMESTAMP,
                    ie_situation_w,
                    LOCALTIMESTAMP,
                    LOCALTIMESTAMP,
                    nm_user_w,
                    nm_user_w,
                    'N',
                    NEW.nr_sequencia,
                    nr_seq_interno_w,
                    ie_bed_status_w,
                    ie_operation_room_w
                );

                ds_log_w := (
                    concat('nr_seq_location: ',         NEW.nr_sequencia)          || CHR(10) ||
                    concat('nr_seq_interno: ',          nr_seq_interno_w)           || CHR(10) ||
                    concat('cd_unidade_basica: ',       ds_room_w)                  || CHR(10) ||
                    concat('cd_unidade_compl: ',        ds_bed_w)                   || CHR(10) ||
                    concat('cd_setor_atendimento: ',    cd_unit_w)                  || CHR(10) ||
                    concat('ie_situacao: ',             ie_situation_w)             || CHR(10) ||
                    concat('ie_temporario: ',           'N')                        || CHR(10) ||
                    concat('ie_status_unidade: ',       coalesce(ie_bed_status_w, 'null'))
                );
                CALL pfcs_log_pck.pfcs_insert_org_struc_log(
                    ie_type_p => 'INSERT',
                    nm_table_p => 'UNIDADE_ATENDIMENTO',
                    ds_log_p => ds_log_w,
                    nm_usuario_p => nm_user_w
                );
            end if;
        END IF;


        IF TG_OP = 'UPDATE' THEN
            update unidade_atendimento set
                DT_ATUALIZACAO = LOCALTIMESTAMP,
                NM_USUARIO = nm_user_w,
                IE_STATUS_UNIDADE = ie_bed_status_w,
                IE_SITUACAO = ie_situation_w
            where nr_seq_location = NEW.nr_sequencia
                and (
                    ie_status_unidade <> ie_bed_status_w
                    or ie_situacao <> ie_situation_w
                );
        END IF;

        if (cd_external_unit_w is not null) then
            update setor_atendimento set
                DT_ATUALIZACAO = LOCALTIMESTAMP,
                NM_USUARIO = nm_user_w,
                DS_SETOR_ATENDIMENTO = ds_unit_w,
                CD_CLASSIF_SETOR = cd_unit_classification_w,
                IE_SEMI_INTENSIVA = ie_stepdown_w
            where cd_setor_atendimento = cd_unit_w
                and (
                    cd_classif_setor <> cd_unit_classification_w
                    or coalesce(ie_semi_intensiva,PFCS_PCK_CONSTANTS.IE_NO) <> coalesce(ie_stepdown_w,PFCS_PCK_CONSTANTS.IE_NO)
                    or ds_setor_atendimento <> ds_unit_w
                );
        end if;
    end if;

<<Final>>
qt_reg_w := 0;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pfcs_update_setor_unidade() FROM PUBLIC;

CREATE TRIGGER pfcs_update_setor_unidade
	BEFORE INSERT OR UPDATE ON pfcs_location FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pfcs_update_setor_unidade();

