-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS paciente_atendimento_update ON paciente_atendimento CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_paciente_atendimento_update() RETURNS trigger AS $BODY$
DECLARE
qt_altura_w		integer;
qt_redutor_sc_w		double precision;
qt_agenda_quimio_w	bigint;
cd_pessoa_atend_w	varchar(10);
cd_pessoa_qui_w		varchar(10);
ie_permite_alterar_w	varchar(1);
ie_setar_data_real_w 	varchar(1);
ie_substituir_w 		varchar(1);
ie_cancela_prescr_w	varchar(1);
ds_log_w			varchar(1500);
ds_liberacao_w 		varchar(255);
nr_seq_agequi_w		bigint;
ie_status_agenda_w	varchar(15);
nr_seq_pend_agenda_w	bigint;
dt_agenda_w		timestamp;
nr_seq_pac_se_w		atendimento_paciente.nr_seq_pac_senha_fila%type;
ie_cancelar_agend_w 	varchar(1) := 'N';

BEGIN

ie_permite_alterar_w := Obter_Param_Usuario(3130, 342, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_permite_alterar_w);
ie_cancela_prescr_w := Obter_Param_Usuario(3130, 352, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_cancela_prescr_w);
ie_substituir_w := obter_param_usuario(3130, 150, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_substituir_w);
ie_setar_data_real_w := obter_param_usuario(3130, 54, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_setar_data_real_w);
ie_cancelar_agend_w := Obter_Param_Usuario(281, 1255, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_cancelar_agend_w);


if (ie_permite_alterar_w = 'N') and (NEW.dt_inicio_adm is not null) and (OLD.dt_prevista is not null) and (OLD.dt_prevista <> NEW.dt_prevista) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(197783);
end if;

if (ie_permite_alterar_w = 'N') and (NEW.dt_inicio_adm is not null) and (OLD.dt_real is not null) and (NEW.dt_real	<> OLD.dt_real) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(197784);
end if;
	
if (NEW.ie_exige_liberacao = 'S') and (OLD.ie_exige_liberacao = 'N') and (coalesce(NEW.dt_real,LOCALTIMESTAMP) < LOCALTIMESTAMP) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(197785);
end if;

if (NEW.nr_atendimento is not null) and (NEW.nr_atendimento	<> coalesce(OLD.nr_atendimento,0)) then
	select	max(cd_pessoa_fisica)
	into STRICT	cd_pessoa_atend_w
	from	atendimento_paciente
	where	nr_atendimento	= NEW.nr_atendimento;
	
	select	max(cd_pessoa_fisica)
	into STRICT	cd_pessoa_qui_w
	from	paciente_setor
	where	nr_seq_paciente	= NEW.nr_seq_paciente;
	
	if (cd_pessoa_atend_w is not null) and (cd_pessoa_qui_w is not null) and (cd_pessoa_atend_w	<> cd_pessoa_qui_w) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(197786);
	end if;
end if;

if (coalesce(ie_substituir_w,'S') = 'S') and (NEW.nr_atendimento is not null) and (NEW.nr_atendimento <> coalesce(OLD.nr_atendimento,0)) then
	update	can_ordem_prod
	set	nr_atendimento	= NEW.nr_atendimento
	where	nr_prescricao	= NEW.nr_prescricao;
end if;

if (NEW.ie_exige_liberacao not in ('N','S')) then --This field request only S or N
	ds_liberacao_w := obter_desc_expressao(292540);
	CALL wheb_mensagem_pck.exibir_mensagem_abort(997925,'field='|| ds_liberacao_w);
end if;

if (NEW.ie_exige_liberacao = 'S') and (OLD.ie_exige_liberacao = 'N') and (NEW.nr_prescricao is not null) then
	
	if (coalesce(ie_cancela_prescr_w,'S') = 'S') then
		update	prescr_medica
		set	dt_suspensao		= LOCALTIMESTAMP,
			nm_usuario_susp		= NEW.nm_usuario
		where	nr_prescricao	= NEW.nr_prescricao;
	end if;
	
	update	can_ordem_prod
	set	ie_suspensa	= 'S'
	where	nr_prescricao	= NEW.nr_prescricao;
	
elsif (NEW.ie_exige_liberacao = 'N') and (OLD.ie_exige_liberacao = 'S') and (NEW.nr_prescricao is not null) then
	update	prescr_medica
	set	dt_suspensao	 = NULL,
		nm_usuario_susp	 = NULL
	where	nr_prescricao	= NEW.nr_prescricao;

	update	can_ordem_prod
	set	ie_suspensa	= 'N'
	where	nr_prescricao	= NEW.nr_prescricao;
end if;

if (OLD.ie_exige_liberacao = 'N') and (NEW.ie_exige_liberacao <> OLD.ie_exige_liberacao) then
	NEW.nm_usuario_check_lib	:= NEW.nm_usuario;
	NEW.dt_check_lib		:= LOCALTIMESTAMP;
end if;	

if (OLD.dt_inicio_adm is null) and (NEW.dt_inicio_adm is not null) then
	NEW.nm_usuario_inicio_adm := NEW.nm_usuario;
end if;

if (OLD.dt_fim_adm is null) and (NEW.dt_fim_adm is not null) then
	NEW.nm_usuario_fim_adm	:= NEW.nm_usuario;
end if;

if (OLD.ie_exige_liberacao = 'S') and (NEW.ie_exige_liberacao <> OLD.ie_exige_liberacao) then
	NEW.nm_usuario_check_lib	:= null;
	NEW.dt_check_lib		:= null;
end if;

if (ie_setar_data_real_w = 'S') and (OLD.nr_prescricao is null) and (NEW.nr_prescricao is not null) and (obter_funcao_ativa = 3130)	then
	NEW.dt_real := LOCALTIMESTAMP;
End if;

select	count(*)
into STRICT	qt_agenda_quimio_w
from	agenda_quimio
where	nr_seq_atendimento	= NEW.nr_seq_atendimento
and	coalesce(ie_status_agenda, 'N')	<> 'C';

if (qt_agenda_quimio_w> 0) then
	if (NEW.nr_seq_local is not null) and (coalesce(NEW.nr_seq_local, 0)	<> coalesce(OLD.nr_seq_local, 0)) then
		update	agenda_quimio
		set	nr_seq_local		= NEW.nr_seq_local,
			nm_usuario		= NEW.nm_usuario,
			dt_atualizacao		= LOCALTIMESTAMP
		where	nr_seq_atendimento	= NEW.nr_seq_atendimento
		and	ie_status_agenda not in ('C','S','F');
		
		update 	agenda_quimio_marcacao a
		set	nr_seq_local		= NEW.nr_seq_local,
			nm_usuario		= NEW.nm_usuario,
			dt_atualizacao		= LOCALTIMESTAMP
		where	nr_seq_atendimento	= NEW.nr_seq_atendimento
		and	ie_gerado = 'S'
		and	exists (SELECT 1 from agenda_quimio  b
				where	a.nr_seq_atendimento = b.nr_seq_atendimento
				and	a.nr_seq_pend_agenda = b.nr_seq_pend_agenda
				and	ie_status_agenda not in ('C','S','F'));
	end if;
	if (OLD.dt_real is not null) and (NEW.dt_real is not null) and (NEW.dt_real	<> OLD.dt_real) then
		update	agenda_quimio
		set	dt_agenda		= NEW.dt_real,
			nm_usuario		= NEW.nm_usuario,
			dt_atualizacao		= LOCALTIMESTAMP
		where	nr_seq_atendimento	= NEW.nr_seq_atendimento
		and	ie_status_agenda not in ('C','S','F');
		
       	update	agenda_quimio_marcacao
		set		dt_agenda		= NEW.dt_real,
				nm_usuario		= NEW.nm_usuario,
				dt_atualizacao		= LOCALTIMESTAMP
		where	nr_seq_atendimento	= NEW.nr_seq_atendimento;
		
	end if;
	if	((OLD.nr_atendimento is null AND NEW.nr_atendimento is not null) or		
		(OLD.nr_atendimento is not null AND NEW.nr_atendimento is null)) and (OLD.ds_observacao = NEW.ds_observacao) then
		update	agenda_quimio
		set	nr_atendimento	= NEW.nr_atendimento,
			nm_usuario		= NEW.nm_usuario,
			dt_atualizacao		= LOCALTIMESTAMP
		where	nr_seq_atendimento	= NEW.nr_seq_atendimento
		and	ie_status_agenda not in ('C','S','F');
	end if;
end if;	
	

/*if 	((:new.dt_prevista is not null) and 
	(:old.dt_prevista is not null)) or
	((:new.dt_real is not null) and
	(:old.dt_real is not null)) and
	((:old.dt_prevista <> :new.dt_prevista) or
	(:old.dt_real <> :new.dt_real)) and
	(obter_funcao_ativa = 865)then 
	:new.nm_usuario_alter_data_prev :=  :new.nm_usuario;
	:new.dt_alter_data_prev := :new.dt_atualizacao;	*/


if 	((NEW.dt_prevista is not null) and (OLD.dt_prevista is not null) and (OLD.dt_prevista <> NEW.dt_prevista)) or
	((NEW.dt_real is not null) and (OLD.dt_real is not null) and (OLD.dt_real <> NEW.dt_real))then
	NEW.nm_usuario_alter_data_prev := NEW.nm_usuario;
	NEW.dt_alter_data_prev 		:= NEW.dt_atualizacao;	
	
	ds_log_w := 	substr(obter_desc_expressao(287659) || ' ' ||NEW.ds_dia_ciclo||chr(13)||chr(10)||
					obter_desc_expressao(284890) || ' ' ||NEW.nr_ciclo||chr(13)||chr(10)|| 
					obter_desc_expressao(711343) || ' ' ||NEW.nr_seq_atendimento||chr(13)||chr(10)||
					obter_desc_expressao(737036) || ' ' ||NEW.nr_seq_paciente||chr(13)||chr(10)||
					'Data antiga: '||OLD.dt_prevista||chr(13)||chr(10)||
					'Data nova: '||NEW.dt_prevista||chr(13)||chr(10)||
					'Data real antiga: '||OLD.dt_real||chr(13)||chr(10)||
					'Data real nova: '||NEW.dt_real||chr(13)||chr(10)||
					obter_desc_expressao(298822) || ' ' ||dbms_utility.format_call_stack,1,1500);
	
	insert into log_mov(NM_USUARIO,
							DT_ATUALIZACAO, 
							DS_LOG, 
							CD_LOG)
					values (NEW.nm_usuario,
							LOCALTIMESTAMP,
							ds_log_w,
							14458);	
end if;

if (OLD.dt_cancelamento is null) and (NEW.dt_cancelamento is not null)	then

	select	max(nr_sequencia),
		max(ie_status_agenda),
		max(nr_seq_pend_agenda),
		max(dt_agenda)
	into STRICT	nr_seq_agequi_w,
		ie_status_agenda_w,
		nr_seq_pend_agenda_w,
		dt_agenda_w
	from	agenda_quimio
	where	nr_seq_atendimento	= NEW.nr_seq_atendimento;

	if (nr_seq_agequi_w	> 0) and (ie_status_agenda_w	<> 'C') then

		update	agenda_quimio
		set	ie_status_agenda	= ie_status_agenda_w,
			dt_cancelada		= LOCALTIMESTAMP,
			nr_seq_mot_cancelamento  = NULL,
			nm_usuario		= NEW.nm_usuario,
			dt_atualizacao		= LOCALTIMESTAMP,
			nm_usuario_cancel	= NEW.nm_usuario,
			ds_motivo_status         = NULL
		where	nr_sequencia		= nr_seq_agequi_w;

    
    if (ie_cancelar_agend_w <> 'R') then
    
		delete	FROM agenda_quimio_marcacao
		where	nr_seq_pend_agenda	= nr_seq_pend_agenda_w
		and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_Agenda)	= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_w);
    
    end if;
	
	end if;

end if;

if (NEW.nr_atendimento is not null) and (NEW.nr_atendimento	<> coalesce(OLD.nr_atendimento,0)) then
	select 	NR_SEQ_PAC_SENHA_FILA
	into STRICT	nr_seq_pac_se_w
	from 	atendimento_paciente
	where	nr_atendimento = NEW.nr_atendimento;
	
	if (nr_seq_pac_se_w > 0) then
		NEW.nr_seq_pac_senha_fila := nr_seq_pac_se_w;
	end if;
end if;

RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_paciente_atendimento_update() FROM PUBLIC;

CREATE TRIGGER paciente_atendimento_update
	BEFORE INSERT OR UPDATE ON paciente_atendimento FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_paciente_atendimento_update();

