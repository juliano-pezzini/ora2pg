-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS agenda_paciente_after_update ON agenda_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_agenda_paciente_after_update() RETURNS trigger AS $BODY$
declare
qt_tempo_regra_w     		wl_regra_item.qt_tempo_regra%type;
qt_tempo_normal_w			wl_regra_item.qt_tempo_normal%type;
nr_seq_regra_w				wl_regra_item.nr_sequencia%type;
ie_escala_w					wl_regra_item.ie_escala%type;
qt_tarefa_w	                bigint;
ie_se_regra_geracao_w       varchar(1);
ie_proced_cih_w             varchar(1) := 'N';

C01 CURSOR FOR
  SELECT  coalesce(b.qt_tempo_regra, 0),
      coalesce(b.qt_tempo_normal, 0),
      coalesce(b.nr_sequencia, 0)
  FROM wl_regra_worklist a, wl_regra_item b
LEFT OUTER JOIN wl_regra_geracao c ON (b.nr_sequencia = c.nr_seq_regra_item)
WHERE a.nr_sequencia = b.nr_seq_regra  and b.ie_situacao = 'A' and c.cd_setor_atendimento is null and b.ie_opcao_wl = 'H' and a.nr_seq_item = (  SELECT  max(x.nr_sequencia)
                from  wl_item x
                where  x.nr_sequencia = a.nr_seq_item
                and    x.cd_categoria = 'IH'
                and    x.ie_situacao = 'A');
BEGIN
  BEGIN
if (coalesce(wheb_usuario_pck.get_ie_executar_trigger, 'S') = 'S') then
BEGIN
select ie_proced_cih
into STRICT ie_proced_cih_w
from proc_interno
where nr_sequencia = NEW.nr_seq_proc_interno;
exception
when others then
    ie_proced_cih_w := 'N';
end;

if (ie_proced_cih_w = 'S' and NEW.nr_atendimento is not null) then
        open C01;
		loop
		fetch C01 into           
			qt_tempo_regra_w,
            qt_tempo_normal_w,
            nr_seq_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			BEGIN

            select	count(*)
            into STRICT	qt_tarefa_w
            from	wl_worklist
            where	nr_atendimento = NEW.nr_atendimento  
            and     nr_seq_regra = nr_seq_regra_w
            and     dt_final_real is null;

            select obter_se_regra_geracao(nr_seq_regra_w, null, null)
            into STRICT ie_se_regra_geracao_w
;

			if (ie_se_regra_geracao_w = 'S' and qt_tarefa_w = 0) then
                CALL wl_gerar_finalizar_tarefa('IH','I',NEW.nr_atendimento,NEW.cd_pessoa_fisica,NEW.nm_usuario,LOCALTIMESTAMP+(qt_tempo_normal_w/24),'N',null,null,null,null,null,null,null,null,null,nr_seq_regra_w,null,null,null,null,null,null,null,LOCALTIMESTAMP,null,null,null,null,null,null);
			end if;
			
			end;
		end loop;
		close C01;
end if;
end if;
  END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_agenda_paciente_after_update() FROM PUBLIC;

CREATE TRIGGER agenda_paciente_after_update
	AFTER UPDATE ON agenda_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_agenda_paciente_after_update();

