-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pessoa_fisica_taxa_atual ON pessoa_fisica_taxa CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pessoa_fisica_taxa_atual() RETURNS trigger AS $BODY$
declare

qt_eventos_w		bigint	:= 0;
nr_seq_interno_w	bigint;
ie_cascade_w		varchar(1);
ie_operacao_w		varchar(1);
ds_stack_w		varchar(4000);

procedure agendar_envio_convenio(
		nr_seq_interno_p	bigint,
		ie_operacao_p		text,
		nm_usuario_p		text) is

reg_integracao_p	gerar_int_padrao.reg_integracao;
nr_sequencia_w		varchar(255);

c01 CURSOR FOR
SELECT	a.cd_pessoa_fisica,
	b.nr_seq_episodio,
	c.nr_atendimento,
	c.cd_convenio,
	c.cd_categoria,
	c.nr_seq_interno
from	episodio_paciente a,
	atendimento_paciente b,
	atend_categoria_convenio c
where	a.nr_sequencia = b.nr_seq_episodio
and	b.nr_atendimento = c.nr_atendimento
and	obter_se_atendimento_fechado(b.nr_atendimento) = 'N'
and	obter_se_atendimento_alta(b.nr_atendimento) = 'N'
and	a.dt_fim_episodio is null
and	a.dt_cancelamento is null
and	b.dt_cancelamento is null
and	b.dt_fim_conta is null
and	b.dt_alta is null
and	exists (	SELECT	1
		from	atend_paciente_unidade x
		where	x.nr_atendimento = b.nr_atendimento)
and	c.nr_seq_interno = nr_seq_interno_p;

c01_w	c01%rowtype;

pragma autonomous_transaction;
BEGIN
  BEGIN
open c01;
loop
fetch c01 into	
	c01_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	BEGIN
	reg_integracao_p.nr_atendimento		:= c01_w.nr_atendimento;
	reg_integracao_p.cd_pessoa_fisica	:= c01_w.cd_pessoa_fisica;			
	reg_integracao_p.ie_status		:= 'P';
	
	reg_integracao_p.ie_operacao		:= ie_operacao_p;
	
	nr_sequencia_w			:= 	c01_w.nr_atendimento || ish_param_pck.get_separador ||
						c01_w.nr_seq_interno || ish_param_pck.get_separador || 
						c01_w.nr_seq_episodio;
	
	reg_integracao_p := gerar_int_padrao.gravar_integracao('135', nr_sequencia_w, nm_usuario_p, reg_integracao_p);
	end;
end loop;
close c01;
commit;
end;

BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
	BEGIN
	select	dbms_utility.format_call_stack
	into STRICT	ds_stack_w
	;
	
	
	if (position('ATEND_CATEG_CONV_DELETE_TAXA' in ds_stack_w) = 0) and (position('CANCELAR_ATENDIMENTO_PACIENTE' in ds_stack_w) = 0) then
		BEGIN
		select	1
		into STRICT	qt_eventos_w
		from	intpd_eventos
		where	ie_evento	= '135'
		and	ie_situacao	= 'A'  LIMIT 1;
		exception
		when others then
			qt_eventos_w	:= 0;
		end;
		
		nr_seq_interno_w	:=	coalesce(NEW.nr_seq_atecaco, OLD.nr_seq_atecaco);
		
		BEGIN
		select	'N'
		into STRICT	ie_cascade_w
		from	atend_categoria_convenio
		where	nr_seq_interno = nr_seq_interno_w;
		exception
		when others then
			ie_cascade_w	:=	'S';
		end;
		
		if (TG_OP = 'DELETE') and (ie_cascade_w = 'S') then
			ie_operacao_w	:= 'E';
		else
			ie_operacao_w	:= 'A';
		end if;

		agendar_envio_convenio(nr_seq_interno_w, ie_operacao_w, coalesce(NEW.nm_usuario, OLD.nm_usuario));
	end if;
	end;
end if;

  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pessoa_fisica_taxa_atual() FROM PUBLIC;

CREATE TRIGGER pessoa_fisica_taxa_atual
	AFTER INSERT OR UPDATE OR DELETE ON pessoa_fisica_taxa FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pessoa_fisica_taxa_atual();

