-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pls_mat_unimed_fed_sc_update ON pls_mat_unimed_fed_sc CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pls_mat_unimed_fed_sc_update() RETURNS trigger AS $BODY$
BEGIN
if (NEW.cd_material <> OLD.cd_material) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterado o código do material, de ' || OLD.cd_material || ', para ' || NEW.cd_material || '. ', 
		'CD_MATERIAL', 
		OLD.cd_material, 
		NEW.cd_material);
end if;
 
if (NEW.ds_material <> OLD.ds_material) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterada descrição do material, de ' || OLD.ds_material || ', para ' || NEW.ds_material || '. ', 
		'DS_MATERIAL', 
		OLD.ds_material, 
		NEW.ds_material);
end if;
 
if (NEW.ds_nome_comercial <> OLD.ds_nome_comercial) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterado o nome comercial, de ' || OLD.ds_nome_comercial || ', para ' || NEW.ds_nome_comercial || '. ', 
		'DS_NOME_COMERCIAL', 
		OLD.ds_nome_comercial, 
		NEW.ds_nome_comercial);
end if;
 
if (NEW.ds_fabricante <> OLD.ds_fabricante) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterado o fabricante, de ' || OLD.ds_fabricante || ', para ' || NEW.ds_fabricante || '. ', 
		'DS_FABRICANTE', 
		OLD.ds_fabricante, 
		NEW.ds_fabricante);
end if;
 
if (NEW.ie_unidade_utilizacao <> OLD.ie_unidade_utilizacao) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterada a unidade de medida, de ' || OLD.ie_unidade_utilizacao || ', para ' || NEW.ie_unidade_utilizacao || '. ', 
		'IE_UNIDADE_UTILIZACAO', 
		OLD.ie_unidade_utilizacao, 
		NEW.ie_unidade_utilizacao);
end if;
 
if (NEW.cd_grupo_estoque <> OLD.cd_grupo_estoque) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterado o grupo de estoque, de ' || OLD.cd_grupo_estoque || ', para ' || NEW.cd_grupo_estoque || '. ', 
		'CD_GRUPO_ESTOQUE', 
		OLD.cd_grupo_estoque, 
		NEW.cd_grupo_estoque);
end if;
 
if (NEW.cd_brasindice <> OLD.cd_brasindice) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterado o brasíndice, de ' || OLD.cd_brasindice || ', para ' || NEW.cd_brasindice || '. ', 
		'CD_BRASINDICE', 
		OLD.cd_brasindice, 
		NEW.cd_brasindice);
end if;
 
if (NEW.cd_simpro <> OLD.cd_simpro) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterado o código simpro, de ' || OLD.cd_simpro || ', para ' || NEW.cd_simpro || '. ', 
		'CD_SIMPRO', 
		OLD.cd_simpro, 
		NEW.cd_simpro);
end if;
 
if (NEW.ie_moeda <> OLD.ie_moeda) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterada a moeda, de ' || OLD.ie_moeda || ', para ' || NEW.ie_moeda || '. ', 
		'IE_MOEDA', 
		OLD.ie_moeda, 
		NEW.ie_moeda);
end if;
 
if (NEW.ie_origem <> OLD.ie_origem) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterada a origem, de ' || OLD.ie_origem || ', para ' || NEW.ie_origem || '. ', 
		'IE_ORIGEM', 
		OLD.ie_origem, 
		NEW.ie_origem);
end if;
 
if (NEW.ds_observacao <> OLD.ds_observacao) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterada a observação, de ' || OLD.ds_observacao || ', para ' || NEW.ds_observacao || '. ', 
		'DS_OBSERVACAO', 
		OLD.ds_observacao, 
		NEW.ds_observacao);
end if;
 
if (NEW.ie_lista <> OLD.ie_lista) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterada a lista, de ' || OLD.ie_lista || ', para ' || NEW.ie_lista || '. ', 
		'IE_LISTA', 
		OLD.ie_lista, 
		NEW.ie_lista);
end if;
 
if (NEW.cd_tiss <> OLD.cd_tiss) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterado o código tiss, de ' || OLD.cd_tiss || ', para ' || NEW.cd_tiss || '. ', 
		'CD_TISS', 
		OLD.cd_tiss, 
		NEW.cd_tiss);
end if;
 
if (NEW.ie_tipo <> OLD.ie_tipo) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterado o tipo, de ' || OLD.ie_tipo || ', para ' || NEW.ie_tipo || '. ', 
		'IE_TIPO', 
		OLD.ie_tipo, 
		NEW.ie_tipo);
end if;
 
if (NEW.ds_grupo_estoque <> OLD.ds_grupo_estoque) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterada descrição do grupo de estoque do material, de ' || OLD.ds_grupo_estoque || ', para ' || NEW.ds_grupo_estoque || '. ', 
		'DS_GRUPO_ESTOQUE', 
		OLD.ds_grupo_estoque, 
		NEW.ds_grupo_estoque);
end if;
 
if (NEW.ds_fabricante <> OLD.ds_fabricante) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterada descrição do fabricante do material, de ' || OLD.ds_fabricante || ', para ' || NEW.ds_fabricante || '. ', 
		'DS_FABRICANTE', 
		OLD.ds_fabricante, 
		NEW.ds_fabricante);
end if;
 
if (NEW.cd_anvisa <> OLD.cd_anvisa) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterado o código ANVISA do material, de ' || OLD.cd_anvisa || ', para ' || NEW.cd_anvisa || '. ', 
		'CD_ANVISA', 
		OLD.cd_anvisa, 
		NEW.cd_anvisa);
end if;
 
if (NEW.dt_validade_anvisa <> OLD.dt_validade_anvisa) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterado a data de válide ANVISA do material, de ' || OLD.dt_validade_anvisa || ', para ' || NEW.dt_validade_anvisa || '. ', 
		'DT_VALIDADE_ANVISA', 
		OLD.dt_validade_anvisa, 
		NEW.dt_validade_anvisa);
end if;
 
if (NEW.ie_unid_compra <> OLD.ie_unid_compra) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterado a unidade de compra do material, de ' || OLD.ie_unid_compra || ', para ' || NEW.ie_unid_compra || '. ', 
		'IE_UNID_COMPRA', 
		OLD.ie_unid_compra, 
		NEW.ie_unid_compra);
end if;
 
if (NEW.qt_embalagem <> OLD.qt_embalagem) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterado a quantidade do material na embalagem, de ' || OLD.qt_embalagem || ', para ' || NEW.qt_embalagem || '. ', 
		'QT_EMBALAGEM', 
		OLD.qt_embalagem, 
		NEW.qt_embalagem);
end if;
 
if (NEW.ie_unid_embalagem <> OLD.ie_unid_embalagem) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterado a unidade de compra do material, de ' || OLD.ie_unid_embalagem || ', para ' || NEW.ie_unid_embalagem || '. ', 
		'IE_UNID_EMBALAGEM', 
		OLD.ie_unid_embalagem, 
		NEW.ie_unid_embalagem);
end if;
 
if (NEW.qt_utilizacao <> OLD.qt_utilizacao) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterado a quantidade de utilização, de ' || OLD.qt_utilizacao || ', para ' || NEW.qt_utilizacao || '. ', 
		'QT_UTILIZACAO', 
		OLD.qt_utilizacao, 
		NEW.qt_utilizacao);
end if;
 
if (NEW.qt_fracao <> OLD.qt_fracao) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterado a quantidade do material a ser fracionada, de ' || OLD.qt_fracao || ', para ' || NEW.qt_fracao || '. ', 
		'QT_FRACAO', 
		OLD.qt_fracao, 
		NEW.qt_fracao);
end if;
 
if (NEW.ie_unid_fracao <> OLD.ie_unid_fracao) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterado a unidade de fracionamento, de ' || OLD.ie_unid_fracao || ', para ' || NEW.ie_unid_fracao || '. ', 
		'IE_UNID_FRACAO', 
		OLD.ie_unid_fracao, 
		NEW.ie_unid_fracao);
end if;
 
if (NEW.ie_fracionar <> OLD.ie_fracionar) then 
	insert into	pls_mat_uni_fed_sc_log(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		dt_alteracao, 
		nr_seq_material_fed, 
		ds_log, 
		nm_campo, 
		vl_anterior, 
		vl_atual) 
	values (nextval('pls_mat_uni_fed_sc_log_seq'), 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		NEW.nm_usuario, 
		LOCALTIMESTAMP, 
		LOCALTIMESTAMP, 
		OLD.nr_sequencia, 
		'Alterado a informação se o material deve ou não ser fracionado, de ' || OLD.ie_fracionar || ', para ' || NEW.ie_fracionar || '. ', 
		'IE_FRACIONAR', 
		OLD.ie_fracionar, 
		NEW.ie_fracionar);
end if;
 
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pls_mat_unimed_fed_sc_update() FROM PUBLIC;

CREATE TRIGGER pls_mat_unimed_fed_sc_update
	BEFORE UPDATE ON pls_mat_unimed_fed_sc FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pls_mat_unimed_fed_sc_update();

