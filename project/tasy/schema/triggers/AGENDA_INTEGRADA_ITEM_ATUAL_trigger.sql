-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS agenda_integrada_item_atual ON agenda_integrada_item CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_agenda_integrada_item_atual() RETURNS trigger AS $BODY$
DECLARE

qt_pontos_w			  preco_amb.qt_pontuacao%type;
cd_estabelecimento_w	smallint;
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
dt_inicio_agendamento_w	timestamp;
cd_plano_w		varchar(10);
vl_procedimento_w		double precision;
vl_aux_w			double precision;
ds_aux_w		varchar(10);
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
cd_convenio_ww		integer;
cd_categoria_ww		varchar(10);
cd_plano_ww		varchar(10);
ie_tipo_convenio_w	smallint;
ie_regra_w		integer;
ie_glosa_w		varchar(1);
cd_usuario_convenio_w	varchar(30);
qt_idade_w		smallint;
dt_nascimento_w		timestamp;
ie_Sexo_w		varchar(1);
cd_pessoa_fisica_w	varchar(10);
CD_EDICAO_AMB_w         integer;
VL_LANC_AUTOM_W         double precision;
ie_calcula_lanc_auto_w	varchar(1);
ie_atualiza_medico_req_w varchar(1);
vl_custo_operacional_w	double precision;
vl_anestesista_w		double precision;
vl_medico_w		double precision;
vl_auxiliares_w		double precision;
vl_materiais_w		double precision;
cd_medico_item_w	varchar(10);
ie_tipo_Atendimento_w	smallint;
nr_seq_ageint_w		bigint;
cd_conv_item_w		integer;
cd_categ_item_w		varchar(10);
cd_plano_item_w		varchar(10);
nr_seq_regra_w		bigint;
nr_minuto_duracao_w	bigint;
ie_resp_autor_w		varchar(10);
cd_medico_solicitante_w varchar(10);

ie_edicao_w                  varchar(1);
cd_edicao_ajuste_w      bigint;
qt_item_edicao_w         bigint;
cd_estab_agenda_w	integer;
ie_perm_agenda_w	varchar(1)	:= 'S';
qt_estab_user_w		bigint;
ie_estab_usuario_w	varchar(1);
nm_paciente_w		varchar(60);
cd_paciente_agenda_w	varchar(10);
nm_paciente_agenda_w	varchar(60);
ie_pacote_w		varchar(1);
ie_inserir_prof_w	varchar(1);
ds_erro_w		varchar(255);
dt_nascimento_Ww	timestamp;
ie_utiliza_regra_tempo_w varchar(1);
nr_minuto_duracao_ww	bigint;
ie_bloq_glosa_part_w	varchar(1);
nr_seq_cobertura_w	bigint;
ie_calc_glosa_atend_w	varchar(1);
ie_consiste_anest_w	varchar(1);
cd_convenio_glosa_w	bigint;
cd_categoria_glosa_w	varchar(10);
ie_conv_cat_regra_w	varchar(1);

cd_convenio_part_w	integer;
cd_categoria_part_w	varchar(10);
vl_procedimento_part_w	double precision;
ie_vl_particular_w	varchar(1);
nr_seq_ajuste_proc_w	bigint;
cd_paciente_w		varchar(10);
ie_multimed_w		varchar(1);
cd_empresa_w		agenda_integrada.cd_empresa%type;
ie_dia_semana_w		smallint;	

pr_glosa_w			double precision;
vl_glosa_w			double precision;
ie_regra_arredondamento_tx_w	varchar(1):= 'N';
ie_tipo_rounded_w		varchar(1);
ie_regra_arred_IPE_w		varchar(1):= 'N';
IE_CALCULA_GLOSA_w			parametro_Agenda_integrada.ie_calcula_glosa%type;
ie_return_w varchar(1);
ie_param_422_w  varchar(1);
ie_forma_agendamento_w	agenda_integrada.ie_forma_agendamento%type;
nr_seq_agrupamento_w	agrupamento_agenda.nr_sequencia%type;
ie_ignorar_regra_lib_proc_w	parametro_agenda_integrada.ie_ignorar_regra_lib_proc%type;
QT_REG_W		smallint;
ie_param_444_w               varchar(1) := '';
ie_excluir_valor             varchar(1) := 'N';
NR_SEQUENCIA_URA_W AGEINT_DADOS_URA.NR_SEQUENCIA%TYPE;
dt_agenda_w		timestamp;
vl_item_ageint_w double precision;

C01 CURSOR FOR
	SELECT	a.cd_medico,
		c.cd_estabelecimento,
		ageint_obter_se_regra_med_ex(a.cd_medico, c.cd_Agenda, NEW.nr_seq_proc_interno, NEW.nr_seq_agenda_int, cd_procedimento_w, ie_origem_proced_w)
	from    agenda c,
		pessoa_fisica b,
		agenda_medico a
	where   Obter_Se_Ageint_Item_Trigger(a.cd_agenda, NEW.nr_seq_agenda_int, c.cd_estabelecimento, NEW.nr_seq_proc_interno, NEW.cd_Especialidade, 

NEW.cd_medico, a.cd_medico, cd_procedimento_w, ie_origem_proced_w,NEW.nr_sequencia, qt_idade_w) = 'S'
	and     a.cd_medico    			= b.cd_pessoa_fisica
	and	c.cd_agenda			= a.cd_agenda
	and	coalesce(c.ie_agenda_integrada,'N')	= 'S'
	and     a.ie_situacao  			= 'A'
	and	c.ie_situacao			= 'A'
	and	c.cd_tipo_Agenda = 2
	and	((qt_idade_w	>= coalesce(qt_idade_min,0)
	and	qt_idade_w	<= coalesce(qt_idade_max,999))
	or	qt_idade_w = 0);
BEGIN
  BEGIN

if wheb_usuario_pck.get_ie_executar_trigger = 'N' then
    goto finalize;
end if;

ie_consiste_anest_w := obter_param_usuario(869, 264, obter_perfil_ativo, NEW.nm_usuario, 0, ie_consiste_anest_w);
ie_conv_cat_regra_w := obter_param_usuario(869, 297, obter_perfil_ativo, NEW.nm_usuario, obter_estabelecimento_ativo, ie_conv_cat_regra_w);
ie_vl_particular_w := obter_param_usuario(869, 331, obter_perfil_ativo, NEW.nm_usuario, obter_estabelecimento_ativo, ie_vl_particular_w);
ie_multimed_w := obter_param_usuario(0, 198, obter_perfil_ativo, NEW.nm_usuario, obter_estabelecimento_ativo, ie_multimed_w);
ie_param_444_w := obter_param_usuario(869, 444, obter_perfil_ativo, NEW.nm_usuario, 0, ie_param_444_w);

if (NEW.ie_tipo_agendamento = 'E') and (NEW.ie_autor_agenda_exame is null) and
	((NEW.nr_seq_proc_interno <> OLD.nr_seq_proc_interno) or
	TG_OP = 'INSERT') then

	NEW.ie_autor_agenda_exame := obter_regra_atributo(obter_estabelecimento_ativo, obter_perfil_ativo, NEW.nm_usuario, 'AGENDA_INTEGRADA_ITEM', 'IE_AUTOR_AGENDA_EXAME', 'V', '', 0, 0, 869, null, obter_setor_ativo);
elsif (NEW.ie_tipo_agendamento <> 'E') then

	NEW.ie_autor_agenda_exame := '';

end if;

select	coalesce(max(IE_CALCULA_GLOSA),'N'),
	coalesce(max(IE_IGNORAR_REGRA_LIB_PROC),'N')
into STRICT	IE_CALCULA_GLOSA_w,
	ie_ignorar_regra_lib_proc_w
from	parametro_Agenda_integrada
where	coalesce(cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento)	= wheb_usuario_pck.get_cd_estabelecimento;

if (ie_consiste_anest_w = 'S') then
	if (coalesce(NEW.ie_anestesia,'N')	= 'S') and (coalesce(NEW.nr_seq_proc_interno,0) > 0) then
		select	coalesce(max(nr_minuto_duracao),0)
		into STRICT	nr_minuto_duracao_w
		from	ageint_tempo_exame_anest
		where	nr_seq_proc_interno	= NEW.nr_seq_proc_interno
		and 	coalesce(cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento;
		
		if (nr_minuto_duracao_w	> 0) then
			NEW.nr_minuto_duracao	:= nr_minuto_duracao_w;
		end if;
	end if;
end if;

select	coalesce(max(Obter_Valor_Param_Usuario(869, 7, Obter_Perfil_Ativo, NEW.nm_usuario, 0)), 'S'),
	coalesce(max(Obter_Valor_Param_Usuario(869, 81, Obter_Perfil_Ativo, NEW.nm_usuario, 0)), 'N'),
	coalesce(max(Obter_Valor_Param_Usuario(869, 178, Obter_Perfil_Ativo, NEW.nm_usuario, 0)), 'N')
into STRICT	ie_calcula_lanc_auto_w,
	ie_atualiza_medico_req_w,
	ie_utiliza_regra_tempo_w
;

ie_bloq_glosa_part_w := obter_param_usuario(869, 187, obter_perfil_ativo, NEW.nm_usuario, 0, ie_bloq_glosa_part_w);
ie_calc_glosa_atend_w := obter_param_usuario(869, 262, obter_perfil_ativo, NEW.nm_usuario, 0, ie_calc_glosa_atend_w);
ie_param_422_w := obter_param_usuario(869, 422, obter_perfil_ativo, NEW.nm_usuario, 0, ie_param_422_w);

BEGIN
select	cd_estabelecimento,
	cd_convenio,
	cd_categoria,
	dt_inicio_agendamento,
	cd_plano,
	cd_usuario_convenio,
	cd_pessoa_fisica,
	ie_tipo_Atendimento,
	dt_nascimento,
	nr_sequencia,
	nm_paciente,
	cd_medico_solicitante,
	cd_pessoa_fisica,
	cd_empresa,
	ie_forma_agendamento
into STRICT	cd_estabelecimento_w,
	cd_convenio_ww,
	cd_categoria_ww,
	dt_inicio_agendamento_w,
	cd_plano_ww, 
	cd_usuario_convenio_w,
	cd_pessoa_fisica_w,
	ie_tipo_Atendimento_w,
	dt_nascimento_w,
	nr_seq_ageint_w,
	nm_paciente_w,
	cd_medico_solicitante_w,
	cd_paciente_w,
	cd_empresa_w,
	ie_forma_agendamento_w
from	agenda_integrada
where	nr_sequencia	= NEW.nr_seq_agenda_int;
exception
when others then
	nr_seq_ageint_w	:= null;
end;

ie_dia_semana_w := obter_cod_dia_semana(coalesce(Obter_Horario_item_Ageint(NEW.nr_seq_agenda_cons,NEW.nr_seq_agenda_exame,NEW.nr_sequencia),qt_obter_horario_agendado(NEW.nr_sequencia)));

if (coalesce(ie_utiliza_regra_tempo_w,'N') = 'S') then
	nr_minuto_duracao_ww := Obter_Tempo_Padrao_Ageint(
					NEW.nr_seq_proc_interno, null, null, null, null, cd_pessoa_fisica_w, nr_minuto_duracao_ww, NEW.ie_lado, cd_convenio_ww, cd_categoria_ww, cd_plano_ww, null, ie_dia_semana_w);
end if;

if (TG_OP = 'INSERT') and (ie_forma_agendamento_w is not null) and (OLD.ie_forma_agendamento is null) and (NEW.ie_forma_agendamento is null) then
	NEW.ie_forma_agendamento := ie_forma_agendamento_w;
end if;

if (coalesce(ie_utiliza_regra_tempo_w,'N') = 'S') and (coalesce(NEW.nr_seq_proc_interno,0) > 0) and (coalesce(nr_minuto_duracao_ww,0) > 0) and (coalesce(NEW.nr_minuto_duracao,0)	= 0) then
	BEGIN
	NEW.nr_minuto_duracao	:= nr_minuto_duracao_ww;
	end;	
end if;	

if	(NEW.nr_seq_agenda_exame is not null AND OLD.nr_seq_agenda_exame is null) or
	(OLD.nr_seq_agenda_exame is not null AND NEW.nr_seq_agenda_exame <> OLD.nr_seq_agenda_exame) then
	select	max(cd_pessoa_fisica),
		max(nm_paciente)
	into STRICT	cd_paciente_agenda_w,
		nm_paciente_agenda_w
	from	agenda_paciente
	where	nr_sequencia	= NEW.nr_seq_agenda_exame;
	
	if	(cd_pessoa_fisica_w is not null AND cd_pessoa_fisica_w	<> cd_paciente_Agenda_w) or
		((nm_paciente_w is not null) and (cd_pessoa_fisica_w is null) and (nm_paciente_w <> nm_paciente_agenda_w)) then
		CALL ageint_gravar_log_trigger(NEW.nr_seq_agenda_int, 
								NEW.nr_sequencia, 
								NEW.nr_seq_agenda_exame, 
								'N', 
								wheb_mensagem_pck.get_texto(306959, 'CD_PESSOA_FISICA_W=' || cd_pessoa_fisica_w || ';' ||
																	'NM_PACIENTE_W=' || nm_paciente_w || ';' ||
																	'CD_PACIENTE_AGENDA_W=' || cd_paciente_agenda_w || ';' ||
																	'NM_PACIENTE_AGENDA_W=' || nm_paciente_agenda_w || ';' ||
																	'DT_ATUAL=' || to_char(LOCALTIMESTAMP,'dd/mm/yyyy hh24:mi:ss') || ';' ||
																	'NM_USUARIO=' || NEW.nm_usuario),
								-- Agenda exame-codigo ag int:#@CD_PESSOA_FISICA_W#@,nome ag int:#@NM_PACIENTE_W#@/codigo ag exame:#@CD_PACIENTE_AGENDA_W#@,nome ag exame:#@NM_PACIENTE_AGENDA_W#@, data:#@DT_ATUAL#@, usuario:#@NM_USUARIO#@
								NEW.nm_usuario);	
	end if;
end if;

ie_estab_usuario_w	:= coalesce(Obter_Valor_Param_Usuario(869, 1, obter_perfil_ativo, NEW.nm_usuario, cd_estabelecimento_w), 'S');

select	max(cd_convenio),
	max(cd_categoria),
	max(cd_plano)
into STRICT	cd_conv_item_w,
	cd_categ_item_w,
	cd_plano_item_w
from	agenda_integrada_conv_item
where	nr_seq_agenda_item	= NEW.nr_sequencia;

if (cd_conv_item_w is not null) then
	cd_convenio_ww	:= cd_conv_item_w;
	cd_categoria_ww	:= cd_categ_item_w;
	cd_plano_ww	:= cd_plano_item_w;
end if;

if (NEW.cd_estabelecimento is not null) then
	cd_estabelecimento_w	:= NEW.cd_estabelecimento;
end if;

cd_procedimento_w	:= NEW.cd_procedimento;
ie_origem_proced_w	:= NEW.ie_origem_proced;

if (nr_seq_ageint_w is not null) and (coalesce(NEW.ie_pacote, 'N')	= 'N') then
	if (cd_pessoa_fisica_w is not null) then
		select	max(ie_Sexo),
			max(dt_nascimento)
		into STRICT	ie_Sexo_w,
			dt_nascimento_ww
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
	end if;
	if (dt_nascimento_W is null) then
		dt_nascimento_W	:= dt_nascimento_Ww;
	end if;

	qt_idade_w	:= obter_idade(dt_nascimento_w, LOCALTIMESTAMP, 'A');

	select	max(ie_tipo_convenio)
	into STRICT	ie_tipo_convenio_w
	from	convenio
	where	cd_convenio	= cd_convenio_ww;

	
	if (NEW.nr_seq_proc_interno is not null) and
		((OLD.nr_seq_proc_interno is null) or (OLD.cd_procedimento <> NEW.cd_procedimento) or
		(OLD.nr_seq_proc_interno is not null AND OLD.nr_seq_proc_interno <> NEW.nr_seq_proc_interno)) then
		
		SELECT * FROM obter_proc_tab_interno_conv(
						NEW.nr_seq_proc_interno, cd_estabelecimento_w, cd_convenio_ww, cd_categoria_ww, cd_plano_ww, null, cd_procedimento_w, ie_origem_proced_w, null, LOCALTIMESTAMP, null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;

		SELECT 	coalesce(max(1),0)
		into STRICT	qt_reg_w
		FROM 	procedimento
		where 	cd_procedimento = cd_procedimento_w
		and	ie_origem_proced = ie_origem_proced_w;
		if (qt_reg_w > 0) then
			NEW.cd_procedimento	:= cd_procedimento_w;
			NEW.ie_origem_proced	:= ie_origem_proced_w;
		end if;
	end if;
	
	select	max(nr_seq_cobertura)
	into STRICT	nr_seq_cobertura_w
	from	agenda_integrada
	where	nr_sequencia = NEW.nr_seq_agenda_int;

	if (NEW.nr_seq_agenda_cons is not null) then
	
		select max(dt_agenda)
		into STRICT dt_agenda_w
		from agenda_consulta
	   where nr_sequencia = NEW.nr_seq_agenda_cons;	
	
	elsif (NEW.nr_seq_agenda_exame is not null) then	
	
	  select max(hr_inicio)
		into STRICT dt_agenda_w
		from agenda_paciente 
	   where nr_sequencia = NEW.nr_seq_agenda_exame;	
	
	end if;
	if (NEW.nr_seq_proc_interno is not null) and
		((((OLD.nr_seq_proc_interno is null) or
		(OLD.nr_seq_proc_interno is not null AND OLD.nr_seq_proc_interno <> NEW.nr_seq_proc_interno)) or
		((OLD.cd_estabelecimento is null AND NEW.cd_estabelecimento is not null) or
		(OLD.cd_estabelecimento is not null AND OLD.cd_estabelecimento <> NEW.cd_estabelecimento)) or
		((NEW.dt_transferencia is not null) and
		((OLD.dt_transferencia is null) or
		(OLD.dt_transferencia is not null AND NEW.dt_transferencia	<> OLD.dt_Transferencia)))) or
		((coalesce(OLD.nr_seq_agenda_cons,0) <> coalesce(NEW.nr_seq_agenda_cons,0)) or (coalesce(OLD.nr_seq_agenda_exame,0) <> coalesce(NEW.nr_seq_agenda_exame,0)))) then
		

		ie_return_w := ageint_obter_se_proc_inter(NEW.nr_seq_proc_interno, dt_nascimento_W);
		
		if (ie_param_422_w = 'N') or (ie_return_w <> 'X') then
		
			if (ie_return_w = 'X') then
				NEW.ie_necessita_internacao	:= 'N';
			else
				NEW.ie_necessita_internacao	:= ie_return_w;
			end if;
			
		end if;
		
		/* Restricao de localidade colocado pois para a alemanha nao deve considerar consistencia dos planos ao gerar a agenda SO-1730150*/

		if	(((cd_conv_item_w is not null AND ie_multimed_w = 'S') or (ie_multimed_w = 'N')) and (coalesce((pkg_i18n.get_user_locale), 'pt_BR') not in ('de_DE', 'de_AT', 'ja_JP'))) then
			SELECT * FROM ageint_consiste_plano_conv(
						null, cd_convenio_ww, cd_procedimento_w, ie_origem_proced_w, LOCALTIMESTAMP, 1, coalesce(ie_tipo_Atendimento_w,0), cd_plano_ww, null, ds_erro_w, 0, null, ie_regra_w, null, nr_seq_regra_w, NEW.nr_Seq_proc_interno, cd_categoria_ww, cd_estabelecimento_w, null, ie_Sexo_w, ie_glosa_w, cd_edicao_ajuste_w, nr_seq_cobertura_w, cd_convenio_glosa_w, cd_categoria_glosa_w, cd_paciente_w, cd_empresa_w, pr_glosa_w, vl_glosa_w) INTO STRICT ds_erro_w, ie_regra_w, nr_seq_regra_w, ie_glosa_w, cd_edicao_ajuste_w, cd_convenio_glosa_w, cd_categoria_glosa_w, pr_glosa_w, vl_glosa_w;
		
						
						
			ie_edicao_w	:= ageint_obter_se_proc_conv(cd_estabelecimento_w, cd_convenio_ww, cd_categoria_ww, LOCALTIMESTAMP, cd_procedimento_W, ie_origem_proced_w, NEW.nr_Seq_proc_interno, ie_tipo_atendimento_w);
		
			ie_pacote_w	:= obter_Se_pacote_convenio(cd_procedimento_w, ie_origem_proced_w, cd_convenio_ww, cd_estabelecimento_w);
	
				  
			if (ie_edicao_w 				= 'N') and (coalesce(cd_edicao_ajuste_w,0) 	= 0) and (coalesce(ie_glosa_w,'L') 		= 'L') and (ie_pacote_w				= 'N') then
				ie_glosa_w        			:= 'T';
			end if;
	
					      
			if (ie_edicao_w 				= 'N') and (coalesce(cd_edicao_ajuste_w,0) 	> 0) and (coalesce(ie_glosa_w,'L') 		= 'L') and (ie_pacote_w				= 'N') then
			
				select   count(*)
				into STRICT     qt_item_edicao_w
				from     preco_amb
				where    cd_edicao_amb = cd_edicao_ajuste_w
				and      cd_procedimento = cd_procedimento_w
				and      ie_origem_proced = ie_origem_proced_w;
						
				if (qt_item_edicao_w = 0) then
					    ie_glosa_w :=    'G';
				end if;
					
			end if;
			
			NEW.ie_autorizacao	:= 'L';
			if	((ie_Regra_w in (1,2,5)) or
				(ie_Regra_w = 8 AND ie_bloq_glosa_part_w = 'N')) then
				NEW.ie_autorizacao	:= 'B';
			elsif (ie_Regra_w in (3,6,7)) then
				select 	coalesce(max(ie_resp_autor),'H')
				into STRICT	ie_resp_autor_w
				from 	regra_convenio_plano
				where 	nr_sequencia = nr_seq_regra_w;
				if (ie_resp_autor_w	= 'H') then
					NEW.ie_autorizacao	:= 'PAH';
				elsif (ie_resp_autor_w	= 'P') then
					NEW.ie_autorizacao	:= 'PAP';
				end if;
			end if;
						
			if (ie_glosa_w in ('G','T','D','F')) then
				NEW.ie_autorizacao	:= 'B';
			end if;
			
			if 	ie_glosa_w = 'E' and
				coalesce(ie_param_444_w,'N') = 'N' and
				ie_tipo_convenio_w = '1' then
				ie_excluir_valor := 'S';
			end if;
					
			IF (ie_excluir_valor = 'S') OR
				(((((coalesce(ie_Regra_w,0) not in (1,2,5)) or (coalesce(ie_glosa_w,'') not in ('T','E','R','B','H','Z',''))) and (ie_tipo_convenio_w <> 1) and (ie_calc_glosa_atend_w = 'N')) or				
				((ie_calc_glosa_atend_w = 'S') 	and (ie_tipo_convenio_w <> 1) 	and
				 ((coalesce(ie_glosa_w,'') not in ('T','G','P')) or (ie_glosa_w is null)))) and
				((IE_CALCULA_GLOSA_w = 'N') or
				((IE_CALCULA_GLOSA_w = 'S') and (coalesce(ie_glosa_w,'') not in ('P','R') or (ie_glosa_w is null))))) then				
				vl_procedimento_w	:= 0;				
				
			else	
				if (ie_glosa_w	in ('P','R') and					
					IE_CALCULA_GLOSA_w = 'S') then
					SELECT * FROM Define_Preco_Procedimento(
						CD_ESTABELECIMENTO_w, cd_convenio_ww, cd_categoria_ww, coalesce(dt_agenda_w,coalesce(NEW.dt_transferencia,dt_inicio_agendamento_w)), CD_PROCEDIMENTO_w, 0, coalesce(ie_tipo_Atendimento_w,0), 0, NEW.cd_medico, --medico
						0, 0, 0, NEW.nr_seq_proc_interno, null, --usuario convenio
						cd_plano_w, 0, 0, null, VL_PROCEDIMENTO_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, qt_pontos_w, CD_EDICAO_AMB_w, ds_aux_w, nr_seq_ajuste_proc_w, 0, null, 0, 'N', null, null, null, null, null, NEW.cd_especialidade, null, null, null, null, null, null, null, null, null, null) INTO STRICT VL_PROCEDIMENTO_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, qt_pontos_w, CD_EDICAO_AMB_w, ds_aux_w, nr_seq_ajuste_proc_w;

					if (ie_glosa_w = 'P') then
						vl_glosa_w:= vl_procedimento_w * pr_glosa_w / 100;
						
						/* ROTINA DE ARREDONDAMENTO, USADO PELO CONVeNIO IPE   --->>    INICIO  <<----- */

						BEGIN
						select 	coalesce(max(ie_regra_arredondamento_tx),'N')
						into STRICT	ie_regra_arredondamento_tx_w
						from 	parametro_faturamento
						where 	cd_estabelecimento = cd_estabelecimento_w;
						exception
							when others then
								ie_regra_arredondamento_tx_w:= 'N';
						end;	

						if (ie_regra_arredondamento_tx_w = 'S')then

							select	max(ie_arredondamento)
							into STRICT	ie_tipo_rounded_w
							from	convenio_estabelecimento
							where	cd_convenio	  	= cd_convenio_w
							and	cd_estabelecimento	= cd_estabelecimento_w;

							if (ie_tipo_rounded_w = 'R') then

								select 	obter_regra_arredondamento(cd_convenio_ww, cd_categoria_ww, cd_procedimento_w, ie_origem_proced_w, cd_estabelecimento_w,
										coalesce(LOCALTIMESTAMP,LOCALTIMESTAMP), 'P', 1)
								into STRICT	ie_tipo_rounded_w
								;
								
								ie_regra_arred_IPE_w:= 'S';

							end if;

							if (ie_tipo_rounded_w is not null) and (ie_regra_arred_IPE_w = 'S') then

								vl_glosa_w := arredondamento(vl_glosa_w, 2, ie_tipo_rounded_w);
								
							else
								ie_regra_arred_IPE_w:= 'N';
							end if;

						end if;
						if (vl_glosa_w	> 0)  then
							vl_procedimento_w	:= vl_procedimento_w - vl_glosa_w;
						end if;	
					else
						vl_procedimento_w:= vl_glosa_w;
					end if;									
				else
					if (ie_tipo_convenio_w <> 1) then
						select	max(cd_convenio_partic),
							max(cd_categoria_partic)
						into STRICT	cd_convenio_w,
							cd_categoria_w
						from	parametro_faturamento
						where	cd_estabelecimento	= cd_estabelecimento_w;
						
						if (ie_conv_cat_regra_w = 'S') and (coalesce(cd_convenio_glosa_w, 0) <> 0) then						
							cd_convenio_w	:= coalesce(cd_convenio_glosa_w,cd_convenio_w);
							cd_categoria_w	:= coalesce(cd_categoria_glosa_w,cd_categoria_w);					
						end if;

					end if;
					
					if (cd_convenio_w  is null) then
						cd_convenio_w	:= cd_convenio_ww;
						cd_Categoria_w	:= cd_categoria_ww;
						cd_plano_w	:= cd_plano_ww;
					end if;	
						SELECT * FROM Define_Preco_Procedimento(
							CD_ESTABELECIMENTO_w, cd_convenio_w, cd_categoria_w, coalesce(dt_agenda_w,coalesce(NEW.dt_transferencia,dt_inicio_agendamento_w)), CD_PROCEDIMENTO_w, 0, coalesce(ie_tipo_Atendimento_w,0), 0, NEW.cd_medico, --medico
							0, 0, 0, NEW.nr_seq_proc_interno, null, --usuario convenio
							cd_plano_w, 0, 0, null, VL_PROCEDIMENTO_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, qt_pontos_w, CD_EDICAO_AMB_w, ds_aux_w, nr_seq_ajuste_proc_w, 0, null, 0, 'N', null, null, null, null, null, NEW.cd_especialidade, null, null, null, null, null, null, null, null, null, null) INTO STRICT VL_PROCEDIMENTO_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, qt_pontos_w, CD_EDICAO_AMB_w, ds_aux_w, nr_seq_ajuste_proc_w;
						
						
					if ie_excluir_valor = 'S' then
						vl_lanc_autom_w := 0;
					else	
						if (ie_calcula_lanc_auto_w	<> 'N') then											
							--vl_lanc_autom_w	:= obter_valor_regra_lanc_aut(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, ie_origem_proced_w,:new.nr_seq_proc_interno, 34, 'T');						
							vl_lanc_autom_w := ageint_Calcular_Lanc_Aut(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, LOCALTIMESTAMP, null, cd_procedimento_w, ie_origem_proced_w, null, null, qt_idade_w, null, null, NEW.nr_seq_proc_interno, ie_tipo_atendimento_w, null, cd_usuario_convenio_w, cd_plano_w, null, null, 4, null, cd_edicao_amb_w, vl_lanc_autom_w);
						end if;
					end if;
				end if;
			end if;
			if ie_excluir_valor = 'S' then
				NEW.vl_item := 0;
			else
				if (coalesce(NEW.ie_gerado_orc,'N') = 'N') then
					if (ie_calcula_lanc_auto_w = 'S') then
						NEW.vl_item			:= vl_procedimento_w + coalesce(VL_LANC_AUTOM_W,0);
					else
						NEW.vl_item			:= vl_procedimento_w;
					end if;
				end if;			
			end if;
			
			NEW.ie_Regra			:= ie_Regra_w;
			NEW.ie_glosa			:= ie_glosa_w;
			
			if (ie_ignorar_regra_lib_proc_w = 'S') and (coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'es_MX') then
				BEGIN
				NEW.ie_Regra			:= 4;
				NEW.ie_glosa			:= 'L';
				NEW.ie_autorizacao		:= 'L';
				end;
			end if;
			
			NEW.vl_custo_operacional	:= vl_custo_operacional_w;
			NEW.vl_anestesista		:= vl_anestesista_w;
			NEW.vl_medico			:= vl_medico_w;
			NEW.vl_auxiliares		:= vl_auxiliares_w;
			NEW.vl_materiais		:= vl_materiais_w;
			NEW.vl_lanc_auto		:= VL_LANC_AUTOM_W;
			NEW.nr_seq_regra		:= nr_seq_regra_w;
			
			
			if (ie_vl_particular_w = 'S') then
			
				SELECT * FROM obter_convenio_particular(cd_estabelecimento_w, cd_convenio_part_w, cd_categoria_part_w) INTO STRICT cd_convenio_part_w, cd_categoria_part_w;
			
				if ie_excluir_valor = 'S' then
					vl_procedimento_part_w := 0;
				else
					SELECT * FROM Define_Preco_Procedimento(
						CD_ESTABELECIMENTO_w, cd_convenio_part_w, cd_categoria_part_w, coalesce(dt_agenda_w,coalesce(NEW.dt_transferencia,dt_inicio_agendamento_w)), CD_PROCEDIMENTO_w, 0, coalesce(ie_tipo_Atendimento_w,0), 0, NEW.cd_medico, --medico
						0, 0, 0, NEW.nr_seq_proc_interno, null, --usuario convenio
						null, 0, 0, null, VL_PROCEDIMENTO_part_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, qt_pontos_w, CD_EDICAO_AMB_w, ds_aux_w, nr_seq_ajuste_proc_w, 0, null, 0, 'N', null, null, null, null, null, NEW.cd_especialidade, null, null, null, null, null, null, null, null, null, null) INTO STRICT VL_PROCEDIMENTO_part_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, qt_pontos_w, CD_EDICAO_AMB_w, ds_aux_w, nr_seq_ajuste_proc_w;
				end if;
					
				NEW.vl_item_particular	:= VL_PROCEDIMENTO_part_w;
			end if;
		end if;	
	end if;

	if (NEW.ie_tipo_agendamento = 'E') then
		delete 	FROM ageint_medico_item
		where	nr_seq_item	= NEW.nr_sequencia;

		open C01;
		loop
		fetch C01 into	
			cd_medico_item_w,
			cd_estab_agenda_w,
			ie_inserir_prof_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			BEGIN
			ie_perm_agenda_w := 'S';
			if (ie_estab_usuario_w	= 'S') or (ie_estab_usuario_w	= 'C') then
				if (cd_estab_agenda_w	<> cd_estabelecimento_w) then
					ie_perm_agenda_w	:= 'N';
				end if;
			elsif (ie_estab_usuario_w	= 'N') or (ie_estab_usuario_w	= 'T') then
				select	count(*)
				into STRICT	qt_estab_user_w
				from	usuario_estabelecimento
				where	nm_usuario_param	= NEW.nm_usuario
				and	cd_estabelecimento	= cd_estab_agenda_w;
				if (qt_estab_user_w	= 0) then
					ie_perm_agenda_w	:= 'N';
				end if;
			end if;
			if (ie_perm_agenda_w	= 'S') then
				insert into ageint_medico_item(nr_sequencia,
					nr_seq_item,
					cd_pessoa_fisica,
					nm_usuario,
					dt_Atualizacao,
					nm_usuario_nrec,
					dt_Atualizacao_nrec,
					ie_inserir_prof)
				values (nextval('ageint_medico_item_seq'),
					NEW.nr_sequencia,
					cd_medico_item_w,
					NEW.nm_usuario,
					LOCALTIMESTAMP,
					NEW.nm_usuario,
					LOCALTIMESTAMP,
					ie_inserir_prof_w);
			end if;
			end;
		end loop;
		close C01;
	end if;

	if (OLD.nr_seq_proc_interno is not null) and (NEW.nr_seq_proc_interno	<> OLD.nr_seq_proc_interno) then
		delete	FROM ageint_exame_Associado
		where	nr_Seq_Ageint_item	= NEW.nr_seq_proc_interno;
	end if;

	if (OLD.nr_sequencia is not null) and (NEW.nr_seq_proc_interno	<> OLD.nr_seq_proc_interno) then
		delete 	FROM ageint_exame_associado
		where	nr_seq_ageint_item	= NEW.nr_Sequencia;
	end if;
	
	if (ageint_obter_se_colonoscopia(NEW.nr_seq_proc_interno,NEW.nr_seq_agenda_int, cd_estabelecimento_w) = 'S') then
		NEW.ie_tipo_exame_proc	:= 'C';
	end if;
	
	
	 if	((OLD.dt_transferencia is not null AND NEW.dt_transferencia <> OLD.dt_transferencia) or
		(OLD.dt_transferencia is null AND NEW.dt_transferencia is not null)) and OLD.nr_sequencia is not null	then

         insert into ageint_valor_hist(  nr_sequencia,
                                         dt_atualizacao,
                                         nm_usuario,
                                         dt_atualizacao_nrec,
                                         nm_usuario_nrec,
                                         vl_item,
                                         nr_seq_ageint_item,
                                         dt_historico)
                                 values (nextval('ageint_valor_hist_seq'),
                                         LOCALTIMESTAMP,
                                         NEW.nm_usuario,
                                         LOCALTIMESTAMP,
                                         NEW.nm_usuario,
                                         coalesce(OLD.vl_item,0),
                                         NEW.nr_sequencia,
                                         LOCALTIMESTAMP);
	end if;
	
	if (ie_atualiza_medico_req_w = 'S') and (NEW.ie_tipo_agendamento <> 'C') and (NEW.cd_medico_req is null) and (cd_medico_solicitante_w is not null) then
		NEW.cd_medico_req := cd_medico_solicitante_w;
	end if;

end if;

if (NEW.nr_seq_agrupamento is null) and (NEW.nr_seq_proc_interno is not null) then
	nr_seq_agrupamento_w	:= ageint_obter_agrup_agenda(NEW.nr_seq_proc_interno, NEW.cd_procedimento, NEW.ie_origem_proced, wheb_usuario_pck.get_cd_estabelecimento);
	if (coalesce(nr_seq_agrupamento_w,0) > 0) then
		NEW.nr_Seq_agrupamento	:= nr_seq_agrupamento_w;
	end if;
end if;

  IF (NEW.NM_USUARIO IS NOT NULL) THEN
     BEGIN
       SELECT MAX(ADU.NR_SEQUENCIA)
         INTO STRICT NR_SEQUENCIA_URA_W
         FROM AGEINT_DADOS_URA ADU
        WHERE ADU.ID_OPERADOR = NEW.NM_USUARIO
          AND ADU.IE_STATUS = 'E';

       NEW.NR_SEQ_DADOS_URA := NR_SEQUENCIA_URA_W;
     EXCEPTION
       WHEN no_data_found THEN
            NULL;
     END;
  END IF;
  <<finalize>>
null;

if (NEW.ie_retorno is null) then
	NEW.ie_retorno	:= 'N';
end if;

  END;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_agenda_integrada_item_atual() FROM PUBLIC;

CREATE TRIGGER agenda_integrada_item_atual
	BEFORE INSERT OR UPDATE ON agenda_integrada_item FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_agenda_integrada_item_atual();

