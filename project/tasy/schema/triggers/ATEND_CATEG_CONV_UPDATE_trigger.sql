-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS atend_categ_conv_update ON atend_categoria_convenio CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_atend_categ_conv_update() RETURNS trigger AS $BODY$
declare
ie_categ_lib_w		varchar(1);
ie_conv_lib_w		varchar(1);
qt_aih_w		integer;
qt_laudo_aih_w		integer;
ie_tipo_convenio_w	smallint;
ie_troca_conv_at_aih_laudo_w	varchar(15) := 'N';
qt_crm_atendimentos_w		bigint;
ie_integracao_dynamics_w	varchar(1);
BEGIN
  BEGIN 
/* Rafael em 30/4/8 OS91546 */
 
if	(OLD.cd_categoria is null AND NEW.cd_categoria is not null) or 
	((OLD.cd_categoria is not null) and (NEW.cd_categoria is not null) and (OLD.cd_categoria <> NEW.cd_categoria)) then 
	 
	select	obter_se_categoria_lib_estab(obter_estab_atend(NEW.nr_atendimento),NEW.cd_convenio,NEW.cd_categoria) 
	into STRICT	ie_categ_lib_w 
	;
 
	if (ie_categ_lib_w = 'N') then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(206605);
		/*Esta categoria não está liberada para o estabelecimento do atendimento, favor verificar.*/
 
	end if;	
 
end if;
/* Fim Rafael em 30/4/8 OS91546 */
 
 
 
/* Fabrício em 05/09/2008 OS 107386*/
 
if	(OLD.cd_convenio is null AND NEW.cd_convenio is not null) or 
	((OLD.cd_convenio is not null) and (NEW.cd_convenio is not null) and (OLD.cd_convenio <> NEW.cd_convenio)) then 
	 
	 select	coalesce(max('S'),'N') 
	 into STRICT	ie_conv_lib_w 
	 from 	convenio a 
	 where 	exists (SELECT 	1 
			from 	convenio_estabelecimento b 
			where 	b.cd_estabelecimento = obter_estab_atend(NEW.nr_atendimento) 
			and 	b.cd_convenio = a.cd_convenio) 
	and 	a.ie_situacao = 'A' 
	and 	a.cd_convenio = NEW.cd_convenio;
 
	if (ie_conv_lib_w = 'N') then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(206609);
		/*Este convênio não está liberado para o estabelecimento do atendimento, favor verificar.*/
 
	end if;	
 
end if;
/* Fim Fabrício em 05/09/2008 OS 107386*/
 
 
ie_tipo_convenio_w	:= obter_tipo_convenio(OLD.cd_convenio);
 
if (ie_tipo_convenio_w = 3) then 
	BEGIN 
	/*André 05/11/2008 OS115792*/
 
	select count(*) 
	into STRICT  qt_aih_w 
	from  sus_aih_unif 
	where  nr_atendimento = NEW.nr_atendimento;
 
	select count(*) 
	into STRICT  qt_laudo_aih_w 
	from  sus_laudo_paciente 
	where  nr_atendimento = NEW.nr_atendimento;
	 
	BEGIN 
	select	coalesce(max(ie_troca_conv_atend_aih_laudo),'N') 
	into STRICT	ie_troca_conv_at_aih_laudo_w 
	from	parametro_faturamento 
	where	cd_estabelecimento = obter_estab_atend(NEW.nr_atendimento);	
	exception 
	when others then 
		ie_troca_conv_at_aih_laudo_w := 'N';
	end;
	 
	if (OLD.cd_convenio <> NEW.cd_convenio) and 
	    ((qt_aih_w > 0) or (qt_laudo_aih_w > 0)) and (ie_troca_conv_at_aih_laudo_w = 'N') then 
	    BEGIN 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(206610);
	    /*Não é permitido alterar o convênio de um atendimento SUS se o mesmo possuir AIH ou laudo!*/
 
	    end;
	end if;
	end;
end if;
/*André 05/11/2008 OS115792*/
 
 
select	coalesce(max(ie_integracao_dynamics),'N') 
into STRICT	ie_integracao_dynamics_w 
from	parametro_atendimento 
where	cd_estabelecimento = obter_estab_atend(NEW.nr_atendimento);
 
-- Atualiza tabela de integração CRM_ATENDIMENTOS 
if (ie_integracao_dynamics_w = 'S') then 
	select	count(*) 
	into STRICT	qt_crm_atendimentos_w 
	from	crm_atendimentos 
	where	nr_atendimento = NEW.nr_atendimento;
 
	if (qt_crm_atendimentos_w > 0) and 
		((OLD.cd_convenio <> NEW.cd_convenio) or (OLD.cd_categoria <> NEW.cd_categoria) or (OLD.cd_plano_convenio <> NEW.cd_plano_convenio)) then 
		update	crm_atendimentos 
		set	ds_convenio 	= substr(obter_nome_convenio(NEW.cd_convenio),1,255), 
			ds_categoria 	= substr(obter_categoria_convenio(NEW.cd_convenio,NEW.cd_categoria),1,80), 
			ds_plano_convenio = substr(Obter_Desc_Plano_Conv(NEW.cd_convenio,NEW.cd_plano_convenio),1,80), 
			ie_status	= 2, 
			dt_atualizacao	= LOCALTIMESTAMP, 
			nm_usuario	= NEW.nm_usuario 
		where	nr_atendimento 	= NEW.nr_atendimento;
	end if;
end if;
 
  END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_atend_categ_conv_update() FROM PUBLIC;

CREATE TRIGGER atend_categ_conv_update
	BEFORE UPDATE ON atend_categoria_convenio FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_atend_categ_conv_update();

