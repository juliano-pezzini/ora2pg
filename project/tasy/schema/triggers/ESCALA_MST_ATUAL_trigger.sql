-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS escala_mst_atual ON escala_mst CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_escala_mst_atual() RETURNS trigger AS $BODY$
declare
qt_reg_w	smallint;
qt_pontos_w	integer;
qt_pontuacao_w	bigint;
 
 
nr_seq_evento_w		bigint;
cd_estabelecimento_w	smallint;
cd_pessoa_fisica_w	varchar(10);
qt_idade_w			bigint;
 
C01 CURSOR FOR 
	SELECT	nr_seq_evento 
	from	regra_envio_sms 
	where	ie_evento_disp		= 'LMST' 
	and	qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999) 
	and	coalesce(ie_situacao,'A') = 'A';
BEGIN
  BEGIN 
 
 
if (NEW.nr_hora is null) or (NEW.DT_AVALIACAO <> OLD.DT_AVALIACAO) then 
	BEGIN  
	NEW.nr_hora	:= (to_char(round(NEW.DT_AVALIACAO,'hh24'),'hh24'))::numeric;
	end;
end if;
if (wheb_usuario_pck.get_ie_executar_trigger	= 'N') then 
	goto Final;
end if;
 
if (NEW.ie_perda_peso <> 'S') then 
	NEW.ie_peso_perdido	:= null;
end if;
 
qt_pontos_w	:= 0;
 
if (NEW.ie_perda_peso = 'NC') then 
	qt_pontos_w	:= qt_pontos_w + 2;
elsif (NEW.ie_perda_peso = 'S') then 
	qt_pontos_w	:= qt_pontos_w + NEW.ie_peso_perdido;
end if;
 
if (NEW.ie_mal_alimentacao = 'S') then 
	qt_pontos_w	:= qt_pontos_w + 1;
end if;
 
NEW.qt_pontuacao	:= qt_pontos_w;
 
 
if (NEW.dt_liberacao is not null) and (OLD.dt_liberacao is null) and (NEW.QT_PONTUACAO	>= 1)then 
	cd_pessoa_fisica_w	:= obter_pessoa_atendimento(NEW.nr_atendimento,'C');
	qt_idade_w	:= coalesce(obter_idade_pf( cd_pessoa_fisica_w,LOCALTIMESTAMP,'A'),0);
	 
	BEGIN 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_evento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN 
		CALL gerar_evento_paciente_trigger( nr_seq_evento_w,NEW.nr_atendimento,cd_pessoa_fisica_w,null,NEW.nm_usuario,null,NEW.dt_liberacao,NEW.qt_pontuacao );
		end;
	end loop;		
	close C01;
	 
	exception 
		when others then 
		null;
	end;
end if;	
 
<<Final>> 
qt_reg_w	:= 0;
  END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_escala_mst_atual() FROM PUBLIC;

CREATE TRIGGER escala_mst_atual
	BEFORE INSERT OR UPDATE ON escala_mst FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_escala_mst_atual();

