-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS atendimento_perda_ganho_atual ON atendimento_perda_ganho CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_atendimento_perda_ganho_atual() RETURNS trigger AS $BODY$
declare

json_aux_bb philips_json;
envio_integracao_bb text;
retorno_integracao_bb text;
v_cell_label_id varchar(32);
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then

  if (coalesce(OLD.DT_MEDIDA,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_MEDIDA) and (NEW.DT_MEDIDA is not null) then
    NEW.ds_utc		:= obter_data_utc(NEW.DT_MEDIDA, 'HV');	
  end if;

  if (coalesce(OLD.DT_LIBERACAO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_LIBERACAO) and (NEW.DT_LIBERACAO is not null) then
    NEW.ds_utc_atualizacao	:= obter_data_utc(NEW.DT_LIBERACAO,'HV');
  end if;
  if (OBTER_SE_INTEGRACAO_ATIVA(970, 245) = 'S') then
    BEGIN
      SELECT
        CASE
        WHEN(IE_VARIAVEL = 1 AND IE_PERDA_GANHO = 'P') THEN
            'fa071f65005c4c6c855b93fa010012b7'
          ELSE null
          END cell_label_id
      INTO STRICT v_cell_label_id
      FROM 
        ALGORITMOS_VAR_PERDA_GANHO
      WHERE 
        nr_seq_tipo = NEW.nr_seq_tipo;
    EXCEPTION
        WHEN no_data_found THEN
          v_cell_label_id := null;
    END;

    IF (OLD.DT_LIBERACAO is NULL) AND (NEW.DT_LIBERACAO is not NULL) AND (v_cell_label_id is not NULL) THEN

        json_aux_bb := philips_json();
        json_aux_bb.put('typeID', 'IOFS');
        json_aux_bb.put('messageDateTime', TO_CHAR((CURRENT_TIMESTAMP AT TIME ZONE 'UTC'), 'MM-DD-YYYY HH24:MI:SS.SSSSS'));
        json_aux_bb.put('objectID', 'ce1c28959d1c4cff990bbb9616c17110');
        json_aux_bb.put('name', 'Output (ml)');
        json_aux_bb.put('objectIDCol', 'FC' || LPAD('D' || NEW.NR_SEQUENCIA, 30, 0));
        json_aux_bb.put('patientHealthSystemStayID', LPAD(NEW.NR_ATENDIMENTO, 32, 0));
        json_aux_bb.put('columnDate', TO_CHAR(f_extract_utc_bb(NEW.DT_MEDIDA), 'YYYY-MM-DD"T"HH24:MI'));
        json_aux_bb.put('columnDateGMTOffset', '0');
        json_aux_bb.put('cellLabelID',    v_cell_label_id);
        json_aux_bb.put('cellTypeCatID',  'ce1c28959d1c4cff990bbb9616c17110');
        json_aux_bb.put('objectIDCell',   'C1' || LPAD('D' || NEW.NR_SEQUENCIA, 30, 0));
        json_aux_bb.put('resultStatusID', '9ef5ea20a97045fcb26dc3fcb86b6c24');
        json_aux_bb.put('valueNumeric',   TO_CHAR(NEW.QT_VOLUME));

        dbms_lob.createtemporary(envio_integracao_bb, TRUE);
        json_aux_bb.(envio_integracao_bb);

        SELECT BIFROST.SEND_INTEGRATION_CONTENT('Blackboard_Perda_Urina',envio_integracao_bb,wheb_usuario_pck.get_nm_usuario) into STRICT retorno_integracao_bb;

    END IF;

    IF (OLD.dt_inativacao is NULL) AND (NEW.dt_inativacao is not NULL) AND (v_cell_label_id is not NULL) THEN
        CALL p_cancelar_flowsheet(NEW.nr_sequencia, NEW.nr_atendimento, 'D');
    END IF;
  end if;
end if;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_atendimento_perda_ganho_atual() FROM PUBLIC;

CREATE TRIGGER atendimento_perda_ganho_atual
	BEFORE INSERT OR UPDATE ON atendimento_perda_ganho FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_atendimento_perda_ganho_atual();

