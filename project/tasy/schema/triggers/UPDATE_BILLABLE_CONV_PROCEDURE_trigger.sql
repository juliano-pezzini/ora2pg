-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS update_billable_conv_procedure ON episodio_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_update_billable_conv_procedure() RETURNS trigger AS $BODY$
declare

nr_interno_conta_w	conta_paciente.nr_interno_conta%type;
cd_procedimento_w	procedimento_paciente.cd_procedimento%type;
ie_origem_proced_w      procedimento_paciente.ie_origem_proced%type;

ie_alt_procedimento_w varchar(2);

pragma autonomous_transaction;

c01 CURSOR FOR
	SELECT	nr_sequencia,
		dt_procedimento,
		nr_seq_proc_interno,
		nr_prescricao,
		cd_procedimento,
		ie_origem_proced,
		cd_setor_atendimento,
		dt_conta,
		cd_convenio,
		nr_interno_conta
	from	procedimento_paciente
	where	nr_interno_conta	= nr_interno_conta_w;
BEGIN
  BEGIN
    BEGIN
		select 	nr_interno_conta into STRICT nr_interno_conta_w
		from 	conta_paciente
		where 	nr_atendimento = obter_atendimento_episodio(NEW.nr_sequencia)
		and	ie_status_acerto   = 1;
		exception
		when others then
			nr_interno_conta_w:= null;
    end;

	
	if coalesce(wheb_usuario_pck.get_ie_executar_trigger, 'S') = 'S' then
	BEGIN
		ie_alt_procedimento_w := obter_param_usuario(916, 1236, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.Get_cd_estabelecimento, ie_alt_procedimento_w);
		
		
		if (OLD.NR_SEQ_TIPO_EPISODIO <> NEW.NR_SEQ_TIPO_EPISODIO) and (coalesce(ie_alt_procedimento_w,'N') = 'S') Then
			BEGIN
				for r_C01 in c01 loop
					BEGIN
						SELECT * FROM obter_proc_tab_interno(
									r_C01.nr_seq_proc_interno, r_C01.nr_prescricao, obter_atendimento_episodio(NEW.nr_sequencia), r_C01.nr_interno_conta, cd_procedimento_w, ie_origem_proced_w, r_C01.cd_setor_atendimento, r_C01.dt_conta) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
						
						if (cd_procedimento_w <> 0) then

							update	procedimento_paciente
							set	cd_procedimento			= cd_procedimento_w,
								ie_origem_proced		= ie_origem_proced_w
							where	nr_sequencia		= r_C01.nr_sequencia;

							CALL atualiza_preco_procedimento(r_C01.nr_sequencia ,r_C01.cd_convenio,NEW.nm_usuario);

						end if;
					end;
				end loop;
			end;
		end if;
		commit;
	end;
	end if;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_update_billable_conv_procedure() FROM PUBLIC;

CREATE TRIGGER update_billable_conv_procedure
	AFTER UPDATE ON episodio_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_update_billable_conv_procedure();

