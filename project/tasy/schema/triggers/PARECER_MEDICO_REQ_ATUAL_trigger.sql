-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS parecer_medico_req_atual ON parecer_medico_req CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_parecer_medico_req_atual() RETURNS trigger AS $BODY$
declare

qt_idade_w					bigint;
cd_estabelecimento_w		smallint := obter_estabelecimento_ativo;
cd_setor_paciente_w			bigint	:= 0;
nr_seq_evento_w				bigint;

nr_seq_tipo_parecer_ww      regra_envio_sms.nr_seq_tipo_parecer%type;
qt_tempo_normal_w			wl_regra_item.qt_tempo_normal%type;
nr_seq_regra_w				wl_regra_item.nr_sequencia%type;
qt_pendencias_w				bigint;
nr_seq_tipo_adm_fat_atd_w	atendimento_paciente.nr_seq_tipo_admissao_fat%type;
ie_tipo_atendimento_w		atendimento_paciente.ie_tipo_atendimento%type;
nr_seq_episodio_w			atendimento_paciente.nr_seq_episodio%type;

qt_reg_w					smallint;

C01 CURSOR FOR
    SELECT
        nr_seq_evento
    from (
        SELECT
            1 cd,
            nr_seq_evento
        from
            regra_envio_sms
        where
            cd_estabelecimento = cd_estabelecimento_w
            and ie_evento_disp = 'LPPEP'
            and qt_idade_w between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 9999)
            and coalesce(cd_setor_atendimento, cd_setor_paciente_w) = cd_setor_paciente_w
            and coalesce(ie_situacao, 'A') = 'A'
            and nr_seq_tipo_parecer = NEW.nr_seq_tipo_parecer

union

        select
            2 cd,
            nr_seq_evento
        from
            regra_envio_sms
        where
            cd_estabelecimento = cd_estabelecimento_w
            and ie_evento_disp = 'LPPEP'
            and qt_idade_w between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 9999)
            and coalesce(cd_setor_atendimento, cd_setor_paciente_w) = cd_setor_paciente_w
            and coalesce(ie_situacao, 'A') = 'A'
            and coalesce(nr_seq_tipo_parecer, coalesce(NEW.nr_seq_tipo_parecer, - 1)) = coalesce(NEW.nr_seq_tipo_parecer, - 1)
    ) alias11 LIMIT 1;

C02 CURSOR FOR

	SELECT	coalesce(b.qt_tempo_normal, 0),
			coalesce(b.nr_sequencia, 0)
	from 	wl_regra_worklist a,
			wl_regra_item b
	where	a.nr_sequencia = b.nr_seq_regra
	and		b.ie_situacao = 'A'
	and		nr_seq_tipo_parecer = NEW.nr_seq_tipo_parecer
	and		a.nr_seq_item = (	SELECT	max(x.nr_sequencia)
								from	wl_item x
								where	x.nr_sequencia = a.nr_seq_item
								and		x.cd_categoria = 'DL'
								and		x.ie_situacao = 'A');
BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

if (coalesce(OLD.DT_ATUALIZACAO_NREC,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_ATUALIZACAO_NREC) and (NEW.DT_ATUALIZACAO_NREC is not null) then
	NEW.ds_utc		:= obter_data_utc(NEW.DT_ATUALIZACAO_NREC, 'HV');
end if;

if (coalesce(OLD.DT_LIBERACAO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_LIBERACAO) and (NEW.DT_LIBERACAO is not null) then
	NEW.ds_utc_atualizacao	:= obter_data_utc(NEW.DT_LIBERACAO,'HV');
end if;

if (NEW.dt_liberacao is not null) and (OLD.dt_liberacao is null) and (NEW.CD_PESSOA_PARECER is not null) then
	qt_idade_w	:= coalesce(obter_idade_pf(NEW.cd_pessoa_fisica,LOCALTIMESTAMP,'A'),0);
	if (NEW.nr_Atendimento is not null) then
		cd_setor_paciente_w	:= obter_setor_Atendimento(NEW.nr_Atendimento);
	end if;
	
	open C01;
	loop
	fetch C01 into	
       nr_seq_evento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN
            CALL gerar_evento_paciente(nr_seq_evento_w,NEW.nr_atendimento,NEW.cd_pessoa_fisica,null,NEW.nm_usuario,null,null,null,null,NEW.cd_medico,NEW.CD_PESSOA_PARECER, null, null,null,null,'N',null,ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(LOCALTIMESTAMP),null,null,null,null,
                                  NEW.cd_especialidade_dest,NEW.cd_especialidade,NEW.nr_seq_tipo_parecer,NEW.nr_seq_equipe_dest,'S');
		end;
	end loop;
	close C01;
	
end if;

-- WorkList AtePac_WL (357)


if (NEW.ie_situacao = 'I') then

	select	count(*)
	into STRICT	qt_pendencias_w
	from	wl_worklist
	where	nr_parecer = NEW.nr_parecer;
	
	if (qt_pendencias_w > 0) then
		CALL wl_gerar_finalizar_tarefa('DL', 'F', null, null, NEW.nm_usuario, LOCALTIMESTAMP,'N',null,null,null,null,null,null,null, NEW.nr_parecer );
	
	end if;
end if;

if (NEW.dt_liberacao is not null) and (OLD.dt_liberacao is null) and (NEW.nr_seq_tipo_parecer is not null)then
	
	if (NEW.nr_atendimento is not null) then
	
		select	max(nr_seq_tipo_admissao_fat),
				max(ie_tipo_atendimento),
				max(nr_seq_episodio)
		into STRICT	nr_seq_tipo_adm_fat_atd_w,
				ie_tipo_atendimento_w,
				nr_seq_episodio_w
		from	atendimento_paciente
		where	nr_atendimento = NEW.nr_atendimento;
	
	end if;
	
	open C02;
	loop
	fetch C02 into
		qt_tempo_normal_w,
		nr_seq_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		BEGIN
				
			if (qt_tempo_normal_w > 0 and obter_se_regra_geracao(nr_seq_regra_w,nr_seq_episodio_w,nr_seq_tipo_adm_fat_atd_w) = 'S') then
				-- Gera Tarefa no Worklist para diagnostico de admissao

				CALL wl_gerar_finalizar_tarefa('DL','I',NEW.nr_atendimento,NEW.cd_pessoa_fisica,NEW.nm_usuario,(LOCALTIMESTAMP+(qt_tempo_normal_w/24)),'N',
									null,null,null,null,null,null,null,NEW.nr_parecer,null,nr_seq_regra_w,null,null,null,null,null,null,null,NEW.dt_liberacao,nr_seq_episodio_w);
			end if;
		end;
	end loop;
	close C02;
	
end if;

<<Final>>
qt_reg_w	:= 0;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_parecer_medico_req_atual() FROM PUBLIC;

CREATE TRIGGER parecer_medico_req_atual
	BEFORE INSERT OR UPDATE ON parecer_medico_req FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_parecer_medico_req_atual();

