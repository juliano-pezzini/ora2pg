-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pls_analise_conta_atual ON pls_analise_conta CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pls_analise_conta_atual() RETURNS trigger AS $BODY$
declare
qt_conta_fechada_w	integer;
ie_status_lote_w	pls_lote_protocolo_conta.ie_status%type;
ds_observacao_w		varchar(4000);
qt_registro_w		integer;

BEGIN

--Se análise estava cancelada e por alguma razão teve seu status alterado

if ( ( coalesce(NEW.ie_status,'X')) <> 'C' and OLD.ie_status = 'C') then



	ds_observacao_w := ' Status da análise era '||OLD.ie_status||' e foi alterado para: '||NEW.ie_status;
	


	insert into pls_hist_analise_conta(	ds_observacao,dt_atualizacao, dt_atualizacao_nrec,
						ie_tipo_historico, ie_tipo_item, nm_usuario,
						nm_usuario_nrec, nr_seq_analise, nr_seq_conta,
						nr_seq_conta_glosa, nr_seq_conta_mat, nr_seq_conta_proc,
						nr_seq_glosa, nr_seq_grupo, nr_seq_item,nr_seq_ocor_benef,
						nr_seq_ocorrencia, nr_seq_proc_partic, nr_sequencia,
						ds_call_stack)
				values (	ds_observacao_w ,LOCALTIMESTAMP,LOCALTIMESTAMP,
						'1',null,NEW.nm_usuario,
						NEW.nm_usuario,NEW.nr_sequencia,null,
						null,null,null,
						null, null,null,null,
						null,null,nextval('pls_hist_analise_conta_seq'),
						dbms_utility.format_call_stack);

end if;

if	(NEW.ie_status = 'T' AND OLD.ie_status	!= 'T') and (NEW.dt_final_analise	is null) then
	BEGIN
	insert into pls_hist_analise_conta(	ds_observacao,dt_atualizacao, dt_atualizacao_nrec,
						ie_tipo_historico, ie_tipo_item, nm_usuario,
						nm_usuario_nrec, nr_seq_analise, nr_seq_conta,
						nr_seq_conta_glosa, nr_seq_conta_mat, nr_seq_conta_proc,
						nr_seq_glosa, nr_seq_grupo, nr_seq_item,nr_seq_ocor_benef,
						nr_seq_ocorrencia, nr_seq_proc_partic, nr_sequencia,
						ds_call_stack)
				values (	'Sem data Final ',LOCALTIMESTAMP,LOCALTIMESTAMP,
						'1',null,NEW.nm_usuario,
						NEW.nm_usuario,NEW.nr_sequencia,null,
						null,null,null,
						null, null,null,null,
						null,null,nextval('pls_hist_analise_conta_seq'),
						dbms_utility.format_call_stack);
	end;
end if;

if	(NEW.ie_status = 'T' AND OLD.ie_status	!= 'T') then
	BEGIN
	insert into pls_hist_analise_conta(	ds_observacao,dt_atualizacao, dt_atualizacao_nrec,
						ie_tipo_historico, ie_tipo_item, nm_usuario,
						nm_usuario_nrec, nr_seq_analise, nr_seq_conta,
						nr_seq_conta_glosa, nr_seq_conta_mat, nr_seq_conta_proc,
						nr_seq_glosa, nr_seq_grupo, nr_seq_item,nr_seq_ocor_benef,
						nr_seq_ocorrencia, nr_seq_proc_partic, nr_sequencia,
						ds_call_stack)
				values (	'Análise encerrada ',LOCALTIMESTAMP,LOCALTIMESTAMP,
						'1',null,NEW.nm_usuario,
						NEW.nm_usuario,NEW.nr_sequencia,null,
						null,null,null,
						null, null,null,null,
						null,null,nextval('pls_hist_analise_conta_seq'),
						dbms_utility.format_call_stack);
	end;
end if;

select	count(1)
into STRICT	qt_conta_fechada_w
from	pls_conta
where	nr_seq_analise = NEW.nr_sequencia
and	ie_status = 'F';

if (NEW.ie_status != 'T') and (qt_conta_fechada_w > 0) and (NEW.ie_status <> OLD.ie_status) then
	insert into pls_hist_analise_conta(	ds_observacao,dt_atualizacao, dt_atualizacao_nrec,
						ie_tipo_historico, ie_tipo_item, nm_usuario,
						nm_usuario_nrec, nr_seq_analise, nr_seq_conta,
						nr_seq_conta_glosa, nr_seq_conta_mat, nr_seq_conta_proc,
						nr_seq_glosa, nr_seq_grupo, nr_seq_item,nr_seq_ocor_benef,
						nr_seq_ocorrencia, nr_seq_proc_partic, nr_sequencia,
						ds_call_stack)
				values (	'Análise aberta com contas fechadas ',LOCALTIMESTAMP,LOCALTIMESTAMP,
						'1',null,NEW.nm_usuario,
						NEW.nm_usuario,NEW.nr_sequencia,null,
						null,null,null,
						null, null,null,null,
						null,null,nextval('pls_hist_analise_conta_seq'),
						dbms_utility.format_call_stack);
end if;

if (NEW.ie_status = 'T') and (NEW.ie_pre_analise = 'S') and (OLD.ie_pre_analise != 'S') then
	insert into pls_hist_analise_conta(	ds_observacao,dt_atualizacao, dt_atualizacao_nrec,
						ie_tipo_historico, ie_tipo_item, nm_usuario,
						nm_usuario_nrec, nr_seq_analise, nr_seq_conta,
						nr_seq_conta_glosa, nr_seq_conta_mat, nr_seq_conta_proc,
						nr_seq_glosa, nr_seq_grupo, nr_seq_item,nr_seq_ocor_benef,
						nr_seq_ocorrencia, nr_seq_proc_partic, nr_sequencia,
						ds_call_stack)
				values (	'Retorno da análise para pré-análise ',LOCALTIMESTAMP,LOCALTIMESTAMP,
						'1',null,NEW.nm_usuario,
						NEW.nm_usuario,NEW.nr_sequencia,null,
						null,null,null,
						null, null,null,null,
						null,null,nextval('pls_hist_analise_conta_seq'),
						dbms_utility.format_call_stack);
end if;

select	max(ie_status)
into STRICT	ie_status_lote_w
from	pls_lote_protocolo_conta
where	nr_sequencia = NEW.nr_seq_lote_protocolo;

-- Caso a análise entre em um lote "Aguardando guia" mas a análise não esteja com esse status.

if (NEW.ie_status <> OLD.ie_status) and (NEW.ie_status <> 'X') and (ie_status_lote_w = 'G') then
	insert into pls_hist_analise_conta(	ds_observacao,dt_atualizacao, dt_atualizacao_nrec,
						ie_tipo_historico, ie_tipo_item, nm_usuario,
						nm_usuario_nrec, nr_seq_analise, nr_seq_conta,
						nr_seq_conta_glosa, nr_seq_conta_mat, nr_seq_conta_proc,
						nr_seq_glosa, nr_seq_grupo, nr_seq_item,nr_seq_ocor_benef,
						nr_seq_ocorrencia, nr_seq_proc_partic, nr_sequencia,
						ds_call_stack)
				values (	'Análise com status diferente de Aguardando guia em lote Aguardando guia ',LOCALTIMESTAMP,LOCALTIMESTAMP,
						'1',null,NEW.nm_usuario,
						NEW.nm_usuario,NEW.nr_sequencia,null,
						null,null,null,
						null, null,null,null,
						null,null,nextval('pls_hist_analise_conta_seq'),
						dbms_utility.format_call_stack);
end if;

select 	count(1)
into STRICT	qt_registro_w
from 	pls_cta_analise_cons c
where 	c.ie_status != 'F';

if (qt_registro_w > 0) and (OLD.ie_status = 'D') and (NEW.ie_status != 'D') then
	insert into pls_hist_analise_conta(	ds_observacao,dt_atualizacao, dt_atualizacao_nrec,
						ie_tipo_historico, ie_tipo_item, nm_usuario,
						nm_usuario_nrec, nr_seq_analise, nr_seq_conta,
						nr_seq_conta_glosa, nr_seq_conta_mat, nr_seq_conta_proc,
						nr_seq_glosa, nr_seq_grupo, nr_seq_item,nr_seq_ocor_benef,
						nr_seq_ocorrencia, nr_seq_proc_partic, nr_sequencia,
						ds_call_stack)
				values (	'Análise pendente de processamento com status liberado para auditoria ',LOCALTIMESTAMP,LOCALTIMESTAMP,
						'1',null,NEW.nm_usuario,
						NEW.nm_usuario,NEW.nr_sequencia,null,
						null,null,null,
						null, null,null,null,
						null,null,nextval('pls_hist_analise_conta_seq'),
						dbms_utility.format_call_stack);
end if;

-- somente atualizacao

if (TG_OP = 'UPDATE') then
	if	(NEW.ie_status != 'T' AND OLD.ie_status	= 'T') then
		
		insert into pls_hist_analise_conta(	ds_observacao,dt_atualizacao, dt_atualizacao_nrec,
							ie_tipo_historico, ie_tipo_item, nm_usuario,
							nm_usuario_nrec, nr_seq_analise, nr_seq_conta,
							nr_seq_conta_glosa, nr_seq_conta_mat, nr_seq_conta_proc,
							nr_seq_glosa, nr_seq_grupo, nr_seq_item,nr_seq_ocor_benef,
							nr_seq_ocorrencia, nr_seq_proc_partic, nr_sequencia,
							ds_call_stack)
					values (	'Análise reaberta ',LOCALTIMESTAMP,LOCALTIMESTAMP,
							'24',null,NEW.nm_usuario,
							NEW.nm_usuario,NEW.nr_sequencia,null,
							null,null,null,
							null, null,null,null,
							null,null,nextval('pls_hist_analise_conta_seq'),
							dbms_utility.format_call_stack);

	end if;
end if;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pls_analise_conta_atual() FROM PUBLIC;

CREATE TRIGGER pls_analise_conta_atual
	BEFORE INSERT OR UPDATE ON pls_analise_conta FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pls_analise_conta_atual();

