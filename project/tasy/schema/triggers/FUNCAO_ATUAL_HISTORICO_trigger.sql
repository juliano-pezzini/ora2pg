-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS funcao_atual_historico ON funcao CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_funcao_atual_historico() RETURNS trigger AS $BODY$
declare

ds_expressao_br_w	DIC_EXPRESSAO.ds_expressao_br%type;	
cd_expressao_w		DIC_EXPRESSAO.cd_expressao%type;	
nm_coluna_desc_w	varchar(50);
nm_coluna_exp_w		varchar(50);
BEGIN
  BEGIN

BEGIN 
IF (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
	if	((NEW.CD_EXP_FUNCAO is not null or 
		 OLD.CD_EXP_FUNCAO is not null) and
		 (not (( NEW.cd_funcao between 40000 and 49999 ) or ( NEW.cd_funcao between 70000 and 79999 )))) then 	 
		nm_coluna_desc_w	:= 'DS_FUNCAO';
		nm_coluna_exp_w		:= 'CD_EXP_FUNCAO';
		cd_expressao_w		:= NEW.CD_EXP_FUNCAO;
		ds_expressao_br_w	:= obter_desc_expressao_br(cd_expressao_w);
		NEW.ds_funcao 	:= ds_expressao_br_w;
	end if;
end if;
exception when others then 
	-- Caso a expressao nao couber no campo, avisa usuario 

	if (SQLSTATE = -6502) then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(290787, 'CD_EXPRESSAO_P='||cd_expressao_w|| 
								';DS_ATRIBUTO_P='||nm_coluna_desc_w|| 
								';NM_ATRIBUTO_EXP_P='||nm_coluna_exp_w);
	end if;
end;

if (TG_OP = 'INSERT') then
	BEGIN
	insert into funcao_historico(
		cd_funcao,
		ds_funcao,
		ie_situacao_old,
		ie_situacao_new,
		ie_situacao_swing_old,
		ie_situacao_swing_new,
		ie_acao,
		nm_usuario,
		dt_atualizacao)
	values (
		NEW.cd_funcao,
		NEW.ds_funcao,
		null,
		NEW.ie_situacao,
		null,
		NEW.ie_situacao_swing,
		'I',
		NEW.nm_usuario,
		LOCALTIMESTAMP);
	end;
elsif (TG_OP = 'UPDATE') then
	BEGIN
	insert into funcao_historico(
		cd_funcao,
		ds_funcao,
		ie_situacao_old,
		ie_situacao_new,
		ie_situacao_swing_old,
		ie_situacao_swing_new,
		ie_acao,
		nm_usuario,
		dt_atualizacao)
	values (
		NEW.cd_funcao,
		NEW.ds_funcao,
		OLD.ie_situacao,
		NEW.ie_situacao,
		OLD.ie_situacao_swing,
		NEW.ie_situacao_swing,
		'U',
		NEW.nm_usuario,
		LOCALTIMESTAMP);
	end;
end if;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_funcao_atual_historico() FROM PUBLIC;

CREATE TRIGGER funcao_atual_historico
	BEFORE INSERT OR UPDATE ON funcao FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_funcao_atual_historico();

