-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS iscv_pessoa_fisica_update ON pessoa_fisica CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_iscv_pessoa_fisica_update() RETURNS trigger AS $BODY$
declare

ds_sep_bv_w		varchar(100)	:= obter_separador_bv;
nr_atendimento_w	atendimento_paciente.nr_atendimento%type;

	/* Verifica se existe alguma integracao cadastrada para o dominio 17, para certificar que ha o que ser procurado, para ai entao executar todas as verificacoes. */


	function permiteIntegrarISCV
	return boolean is
	qt_resultado_w	bigint;

	BEGIN	
	select	count(*) qt_resultado
	into STRICT	qt_resultado_w
	from 	regra_proc_interno_integra
	where	ie_tipo_integracao = 17; --Dominio criado para a integracao

	return qt_resultado_w > 0;
	end;


	function permiteIntegrar return boolean is	--Verificar se ha algum procedimento interno que deva integrar
	ds_retorno_w		varchar2(1);
	BEGIN
	if	permiteIntegrarISCV() then
		nr_atendimento_w := obter_atendimento_paciente(NEW.cd_pessoa_fisica, obter_estabelecimento_ativo);

		select	coalesce(max(Obter_Se_Integr_Proc_Interno(pp.nr_seq_proc_interno, 17,null,pp.ie_lado,coalesce(pm.cd_estabelecimento,wheb_usuario_pck.get_cd_estabelecimento))),'N') ie_permite_proc_integ
		into STRICT	ds_retorno_w
		from	prescr_procedimento pp,
				prescr_medica pm
		where	pm.nr_atendimento = nr_atendimento_w
		and		pp.nr_seq_proc_interno is not null
		and		pp.nr_sequencia = pm.nr_prescricao;
		
		if (ds_retorno_w = 'N') then
			
			select	coalesce(max(Obter_Se_Integr_Proc_Interno(nr_seq_proc_interno, 17,null,ie_lado,wheb_usuario_pck.get_cd_estabelecimento)),'N') ie_permite_proc_integ
			into STRICT	ds_retorno_w
			from	agenda_paciente
			where	nr_seq_proc_interno is not null
			and		nr_atendimento = nr_atendimento_w;
			
			if (ds_retorno_w = 'N') then
				select	coalesce(max(Obter_Se_Integr_Proc_Interno(app.nr_seq_proc_interno, 17,null,app.ie_lado,wheb_usuario_pck.get_cd_estabelecimento)),'N') ie_permite_proc_integ
				into STRICT	ds_retorno_w
				from	agenda_paciente ap,
						agenda_paciente_proc app
				where	ap.nr_seq_proc_interno is not null
				and		ap.nr_atendimento = nr_atendimento_w
				and		ap.nr_sequencia = app.nr_sequencia;
			end if;
			
			if (ds_retorno_w = 'N') then
				select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ds_retorno_w
				from	prescr_medica a,
						prescr_procedimento b,
						atendimento_paciente c
				where	a.nr_prescricao = b.nr_prescricao
				and		a.nr_atendimento = c.nr_atendimento
				and		c.cd_pessoa_fisica = NEW.cd_pessoa_fisica
				and exists (SELECT	1
						from	regra_proc_interno_integra x
						where	x.nr_seq_proc_interno = b.nr_seq_proc_interno
						and	x.ie_tipo_integracao = 17
						and	coalesce(x.ie_tipo_proc_integr,0) = 0
						and	coalesce(x.cd_estabelecimento, coalesce(wheb_usuario_pck.get_cd_estabelecimento,0)) = coalesce(wheb_usuario_pck.get_cd_estabelecimento,0));
						
			end if;
		end if;

		return ds_retorno_w = 'S';
	else
		return false;
	end if;

	end;
BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger	= 'S')  then
	if	((OLD.nm_pessoa_fisica <> NEW.nm_pessoa_fisica)
	or (OLD.nr_seq_person_name   <> NEW.nr_seq_person_name )
	or (OLD.cd_estabelecimento <> NEW.cd_estabelecimento)
	or (OLD.nr_seq_cor_pele <> NEW.nr_seq_cor_pele)
	or (OLD.dt_nascimento <> NEW.dt_nascimento)
	or (OLD.ie_sexo <> NEW.ie_sexo))
	and	permiteIntegrar() then
		CALL gravar_agend_integracao(746, 'cd_pessoa_fisica=' || NEW.cd_pessoa_fisica || ds_sep_bv_w, Obter_Setor_Atendimento(obter_atendimento_paciente(NEW.cd_pessoa_fisica, obter_estabelecimento_ativo)));
	end if;
end if;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_iscv_pessoa_fisica_update() FROM PUBLIC;

CREATE TRIGGER iscv_pessoa_fisica_update
	AFTER INSERT OR UPDATE ON pessoa_fisica FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_iscv_pessoa_fisica_update();

