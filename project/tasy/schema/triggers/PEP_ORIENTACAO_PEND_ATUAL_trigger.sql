-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pep_orientacao_pend_atual ON pep_orientacao_geral CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pep_orientacao_pend_atual() RETURNS trigger AS $BODY$
declare

PRAGMA AUTONOMOUS_TRANSACTION;

qt_reg_w	               smallint;
ie_tipo_w		            varchar(10);
cd_pessoa_fisica_w	varchar(30);
nr_atendimento_w    bigint;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

if (TG_OP = 'INSERT') or (TG_OP = 'UPDATE') then
	
	if (NEW.dt_liberacao is null) then
		ie_tipo_w := 'OGL';
	elsif (OLD.dt_liberacao is null) and (NEW.dt_liberacao is not null) then
				ie_tipo_w := 'XOGL';
	end if;
	nr_atendimento_w 		:= NEW.nr_atendimento;
	cd_pessoa_fisica_w	:=	NEW.cd_pessoa_fisica;
	
	if	((nr_atendimento_w is null) or (cd_pessoa_fisica_w is null)) and (NEW.nr_seq_consulta is not null) then
		select	max(a.nr_atendimento),
					max(a.cd_pessoa_fisica)
		into STRICT	   nr_atendimento_w,
					cd_pessoa_fisica_w
		from     oft_consulta a where a.nr_sequencia = NEW.nr_seq_consulta;
	end if;	
	
	BEGIN
	if	((cd_pessoa_fisica_w is not null) or (nr_atendimento_w is not null)) and (ie_tipo_w	is not null) then
    CALL Gerar_registro_pendente_PEP(
      cd_tipo_registro_p => ie_tipo_w,
      nr_sequencia_registro_p => NEW.nr_sequencia,
      cd_pessoa_fisica_p => cd_pessoa_fisica_w,
      nr_atendimento_p => nr_atendimento_w,
      nm_usuario_p => NEW.nm_usuario,
      nr_atend_cons_pepa_p=> NEW.nr_seq_atend_cons_pepa
    );
	end if;
	exception
		when others then
		null;
	end;		

elsif (TG_OP = 'DELETE') then
			delete 	from pep_item_pendente
			where 	IE_TIPO_REGISTRO = 'OGL'
			and	      nr_seq_registro = OLD.nr_sequencia
			and	      coalesce(IE_TIPO_PENDENCIA,'L')	= 'L';
	
			commit;
end if;	

commit;


<<Final>>
qt_reg_w	:= 0;
  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pep_orientacao_pend_atual() FROM PUBLIC;

CREATE TRIGGER pep_orientacao_pend_atual
	AFTER INSERT OR UPDATE OR DELETE ON pep_orientacao_geral FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pep_orientacao_pend_atual();

