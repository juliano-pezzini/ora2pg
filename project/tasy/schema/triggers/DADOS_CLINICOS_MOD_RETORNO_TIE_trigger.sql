-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS dados_clinicos_mod_retorno_tie ON dados_clinicos_mod_retorno CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_dados_clinicos_mod_retorno_tie() RETURNS trigger AS $BODY$
DECLARE
    SUBTYPE one_char IS varchar(1);
    SUBTYPE sixteen_char IS varchar(16);
    SUBTYPE eighteen_char IS varchar(18);
    data_w                  text;
    c_nr_integration_code   CONSTANT integer := 1172;
    char_s_c                CONSTANT one_char := 'S';
    codigoprestador_c       CONSTANT eighteen_char := '"codigoPrestador":';
    codigocliente_c         CONSTANT sixteen_char := '"codigoCliente":';
    one_number_c            CONSTANT integer := 1;
    json_open_brace_c       CONSTANT one_char := '{';
    json_closed_brace_c     CONSTANT one_char := '}';
    json_comma_c            CONSTANT one_char := ',';
    quotation_mark_c        CONSTANT one_char := '"';
    C_SUCESS_W	   	    Constant varchar(15) := 'sucesso';
BEGIN
  BEGIN
    BEGIN
        IF (wheb_usuario_pck.get_ie_executar_trigger = char_s_c ) THEN
            IF ( coalesce(NEW.nr_carteira, one_number_c) <> coalesce(OLD.nr_carteira, one_number_c) ) AND (position(C_SUCESS_W in LOWER(NEW.ds_status)) > 0 or NEW.nr_sequencia_autor is not null) THEN
                data_w := json_open_brace_c;
                data_w := data_w
                          || codigoprestador_c
                          || quotation_mark_c
                          || NEW.cd_prestador
                          || quotation_mark_c
                          || json_comma_c;

                data_w := data_w
                          || codigocliente_c
                          || quotation_mark_c
                          || NEW.nr_carteira
                          || quotation_mark_c;

                data_w := data_w || json_closed_brace_c;
                CALL execute_bifrost_integration(c_nr_integration_code, data_w);
            END IF;

        END IF;

    EXCEPTION
        WHEN no_data_found THEN
            NULL;
    END;
  END;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_dados_clinicos_mod_retorno_tie() FROM PUBLIC;

CREATE TRIGGER dados_clinicos_mod_retorno_tie
	AFTER INSERT ON dados_clinicos_mod_retorno FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_dados_clinicos_mod_retorno_tie();

