-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS agenda_consulta_update ON agenda_consulta CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_agenda_consulta_update() RETURNS trigger AS $BODY$
declare

_ora2pg_r RECORD;
atrib_oldvalue_w		varchar(255);
atrib_newvalue_w		varchar(255);
ie_pf_w				varchar(1) := 'N';
nr_seq_tipo_consulta_w 		bigint;
ds_erro_w			varchar(255);
ie_regra_glosa_conv_W		varchar(1);
ie_glosa_w			varchar(1) := '';
ie_regra_w			integer;
ie_edicao_w                  	varchar(1);
ie_pacote_w			varchar(1);
cd_edicao_ajuste_w      	bigint;
qt_item_edicao_w         	bigint;
nr_seq_regra_w			bigint;
ds_irrelevante_w		varchar(255);
nr_seq_pac_senha_fila_w		bigint;
cd_tipo_agenda_w		bigint;
qt_reg_w			bigint;
qt_faltas_permitidas_w          bigint;
qt_faltas_contabilizadas_w      bigint;
ds_expressao_w                  varchar(100);
nr_seq_atend_futuro_ww		bigint;
ie_status_agenda_confirmado_w	varchar(3);
nr_status_atend_futuro_w	varchar(10);
cd_especialidade_w			bigint;
ds_mensagem_w			varchar(4000);
ie_permite_w			varchar(1);
ie_param_505				varchar(1);
ie_param_84				varchar(10);
ie_param_64_servicos_w				varchar(10);
ie_funcao_ativa_w			bigint;
BEGIN
  BEGIN
NEW.dt_atualizacao := LOCALTIMESTAMP;

ie_regra_glosa_conv_w	:=	Obter_Valor_Param_Usuario(866, 168, Obter_Perfil_Ativo, NEW.nm_usuario, 0);
nr_status_atend_futuro_w := Obter_Valor_Param_Usuario(10000,3, Obter_Perfil_Ativo, NEW.nm_usuario, 0);
ie_status_agenda_confirmado_w := Obter_Valor_Param_Usuario(870,24, Obter_Perfil_Ativo, NEW.nm_usuario, 0);

ie_param_505 := Obter_param_Usuario(821, 505, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_param_505);
ie_param_84 := Obter_param_Usuario(821, 84, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_param_84);

ie_param_64_servicos_w := Obter_param_Usuario(866, 64, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_param_64_servicos_w);

ie_funcao_ativa_w	:= obter_funcao_ativa;

if (wheb_usuario_pck.get_ie_executar_trigger	= 'S')  then


	select	max(cd_tipo_agenda),
			max(cd_especialidade)
	into STRICT	cd_tipo_agenda_w,
			cd_especialidade_w			
	from	agenda
	where	cd_agenda = NEW.cd_agenda;

	if (OLD.nr_atendimento is not null) and (NEW.nr_atendimento is null) then
		insert into log_mov(dt_atualizacao,
					nm_usuario,
					ds_log,
					cd_log)
				values (LOCALTIMESTAMP,
					NEW.nm_usuario,
					' ' || wheb_mensagem_pck.get_texto(791430) || ' ' || OLD.nr_atendimento || ' ' || wheb_mensagem_pck.get_texto(791436) || ': ' ||NEW.nr_atendimento||
					' Stack: '||substr(dbms_utility.format_call_stack,1,1800),
					87452);
	end if;					

	if (OLD.nr_atendimento is null) and (NEW.nr_atendimento is not null) then
		
		insert into log_mov(dt_atualizacao,
					nm_usuario,
					ds_log,
					cd_log)
				values (LOCALTIMESTAMP,
					NEW.nm_usuario,
					' ' || wheb_mensagem_pck.get_texto(791430) || ' ' || OLD.nr_atendimento || ' ' || wheb_mensagem_pck.get_texto(791436) || ': ' || NEW.nr_atendimento||
					' ' || wheb_mensagem_pck.get_texto(791437) || ': ' || OLD.ie_status_agenda || ' ' || wheb_mensagem_pck.get_texto(791438) || ': ' || NEW.ie_status_agenda||
					' Stack: '||substr(dbms_utility.format_call_stack,1,1600),
					87453);
		
	end if;
	
	if (OLD.cd_pessoa_fisica is not null) and (NEW.cd_pessoa_fisica is not null) and (OLD.cd_pessoa_fisica <> NEW.cd_pessoa_fisica) then -- paciente (pf)

		ie_pf_w := 'S';
		
		atrib_oldvalue_w := substr(obter_nome_pf(OLD.cd_pessoa_fisica),1,60);
		atrib_newvalue_w := substr(obter_nome_pf(NEW.cd_pessoa_fisica),1,60);

		CALL gerar_agenda_consulta_hist(NEW.cd_agenda,NEW.nr_sequencia,'P',NEW.nm_usuario, obter_desc_expressao(727644) || ' ' || atrib_oldvalue_w || ' ' || obter_desc_expressao(618484) || ' ' || atrib_newvalue_w || ' - ' || obter_desc_expressao(726474) ||': '||substr(dbms_utility.format_call_stack,1,1800), OLD.cd_pessoa_fisica, atrib_oldvalue_w, OLD.dt_agenda);
	end if;

	if (ie_pf_w <> 'S') and (OLD.nm_paciente is not null) and (NEW.nm_paciente is not null) and (OLD.nm_paciente <> NEW.nm_paciente) then -- paciente (nao pf)
		
		atrib_oldvalue_w := substr(OLD.nm_paciente,1,60);
		atrib_newvalue_w := substr(NEW.nm_paciente,1,60);

		CALL gerar_agenda_consulta_hist(NEW.cd_agenda,NEW.nr_sequencia,'P',NEW.nm_usuario, obter_desc_expressao(727644) || ' ' || atrib_oldvalue_w || ' ' || obter_desc_expressao(618484) || ' ' || atrib_newvalue_w || ' - ' || obter_desc_expressao(726474) || ': '||substr(dbms_utility.format_call_stack,1,1800), OLD.cd_pessoa_fisica, atrib_oldvalue_w, OLD.dt_agenda);
	end if;

	if (OLD.cd_procedimento is not null) and (NEW.cd_procedimento is not null) and (OLD.cd_procedimento <> NEW.cd_procedimento) then -- exame
		
		atrib_oldvalue_w := substr(obter_exame_agenda(OLD.cd_procedimento, OLD.ie_origem_proced, OLD.nr_seq_proc_interno),1,60);
		atrib_newvalue_w := substr(obter_exame_agenda(NEW.cd_procedimento, NEW.ie_origem_proced, NEW.nr_seq_proc_interno),1,60);

		CALL gerar_agenda_consulta_hist(NEW.cd_agenda,NEW.nr_sequencia,'E',NEW.nm_usuario, obter_desc_expressao(727654) || ' ' || atrib_oldvalue_w || ' ' || obter_desc_expressao(618484) || ' ' || atrib_newvalue_w, OLD.cd_pessoa_fisica, OLD.nm_paciente, OLD.dt_agenda);
	end if;

	if (OLD.cd_medico is not null) and (NEW.cd_medico is not null) and (OLD.cd_medico <> NEW.cd_medico) then -- requisitante
		
		atrib_oldvalue_w := substr(obter_nome_medico(OLD.cd_medico,'NC'),1,60);
		atrib_newvalue_w := substr(obter_nome_medico(NEW.cd_medico,'NC'),1,60);

		CALL gerar_agenda_consulta_hist(NEW.cd_agenda,NEW.nr_sequencia,'MR',NEW.nm_usuario, obter_desc_expressao(727658) || ' ' || atrib_oldvalue_w || ' ' || obter_desc_expressao(618484) || ' ' || atrib_newvalue_w, OLD.cd_pessoa_fisica, OLD.nm_paciente, OLD.dt_agenda);
	end if;

	/*
	if	(:old.cd_medico_exec is not null) and
		(:new.cd_medico_exec is not null) and
		(:old.cd_medico_exec <> :new.cd_medico_exec) then -- executor
		
		atrib_oldvalue_w := substr(obter_nome_medico(:old.cd_medico_exec,'NC'),1,60);
		atrib_newvalue_w := substr(obter_nome_medico(:new.cd_medico_exec,'NC'),1,60);

		gerar_agenda_consulta_hist(:new.cd_agenda,:new.nr_sequencia,'ME',:new.nm_usuario,'Executor de ' || atrib_oldvalue_w || ' para ' || atrib_newvalue_w, :old.cd_pessoa_fisica, :old.nm_paciente, :old.dt_agenda);
	end if;
	*/


	if (OLD.nr_atendimento is null) and (NEW.nr_atendimento is not null) and (NEW.nr_seq_pac_senha_fila is null) then
		
		select	max(nr_seq_pac_senha_fila)
		into STRICT	nr_seq_pac_senha_fila_w
		from	atendimento_paciente
		where	nr_atendimento = NEW.nr_atendimento;
		
		if (coalesce(nr_seq_pac_senha_fila_w,0) > 0) then
			NEW.nr_seq_pac_senha_fila := nr_seq_pac_senha_fila_w;
		end if;
	end if;

	if (coalesce(NEW.nr_seq_fitness,0) > 0) and (OLD.ie_status_agenda is not null) and (NEW.ie_status_agenda is not null) and (OLD.ie_status_agenda <> NEW.ie_status_agenda) and (NEW.ie_status_agenda = 'A') then -- Aguardando
		
		update	hfp_paciente
		set	ie_status = 'C',  -- Altera status paciente para 'Aguardando Consulta' na fun??o Health Fitness Program
			nm_usuario = NEW.nm_usuario,	
			dt_atualizacao = LOCALTIMESTAMP
		where	nr_sequencia = NEW.nr_seq_fitness;
	end if;	
	
	if (OLD.ie_status_agenda is not null) and (NEW.ie_status_agenda is not null) and (OLD.ie_status_agenda <> NEW.ie_status_agenda) and (NEW.ie_status_agenda = 'C') then -- cancelamento
		
		BEGIN
		delete 	FROM agenda_controle_integra
		where	cd_tipo_agenda 	= cd_tipo_agenda_w
		and		nr_seq_agenda	= NEW.nr_sequencia;
		exception
			when others then
			null;
		end;
		
		atrib_oldvalue_w := substr(obter_valor_dominio(83,OLD.ie_status_agenda),1,255);
		atrib_newvalue_w := substr(obter_valor_dominio(83,NEW.ie_status_agenda),1,255);

		CALL gerar_agenda_consulta_hist(NEW.cd_agenda,NEW.nr_sequencia,'SC',NEW.nm_usuario, obter_desc_expressao(727676) || ' ' || atrib_oldvalue_w || ' ' || obter_desc_expressao(618484) || ' ' || atrib_newvalue_w, OLD.cd_pessoa_fisica, SUBSTR(OLD.nm_paciente,1,60), OLD.dt_agenda);
		
		--insere o protocolo de cancelamento

		CALL INSERIR_EXCLUIR_PROTOC_CANC(NEW.nr_sequencia, null, 'I', NEW.nm_usuario);
	end if;

	if (OLD.ie_status_agenda is not null) and (NEW.ie_status_agenda is not null) and (OLD.ie_status_agenda <> NEW.ie_status_agenda) and (NEW.ie_status_agenda = 'B') then -- bloqueio
		
		atrib_oldvalue_w := substr(obter_valor_dominio(83,OLD.ie_status_agenda),1,255);
		atrib_newvalue_w := substr(obter_valor_dominio(83,NEW.ie_status_agenda),1,255);

		CALL gerar_agenda_consulta_hist(NEW.cd_agenda,NEW.nr_sequencia,'SB',NEW.nm_usuario, obter_desc_expressao(727676) || ' ' || atrib_oldvalue_w || ' ' || obter_desc_expressao(618484) || ' ' || atrib_newvalue_w, OLD.cd_pessoa_fisica, OLD.nm_paciente, OLD.dt_agenda);
	end if;
	
	if (OLD.ie_status_agenda is not null) and (NEW.ie_status_agenda is not null) and (OLD.ie_status_agenda <> NEW.ie_status_agenda) and (OLD.ie_status_agenda = 'B') then -- bloqueio
		
		atrib_oldvalue_w := substr(obter_valor_dominio(83,OLD.ie_status_agenda),1,255);
		atrib_newvalue_w := substr(obter_valor_dominio(83,NEW.ie_status_agenda),1,255);

		CALL gerar_agenda_consulta_hist(NEW.cd_agenda,NEW.nr_sequencia,'DB',NEW.nm_usuario, obter_desc_expressao(727676) || ' ' || atrib_oldvalue_w || ' ' || obter_desc_expressao(618484) || ' ' || atrib_newvalue_w, OLD.cd_pessoa_fisica, OLD.nm_paciente, OLD.dt_agenda);
	end if;
	
	if (OLD.ie_status_agenda is not null) and (NEW.ie_status_agenda is not null) and (OLD.ie_status_agenda <> NEW.ie_status_agenda) and
		((NEW.ie_status_agenda = 'F') or (NEW.ie_status_agenda = 'I')) then
		
		atrib_oldvalue_w := substr(obter_valor_dominio(83,OLD.ie_status_agenda),1,255);
		atrib_newvalue_w := substr(obter_valor_dominio(83,NEW.ie_status_agenda),1,255);

		CALL gerar_agenda_consulta_hist(NEW.cd_agenda,NEW.nr_sequencia,'ST',NEW.nm_usuario, obter_desc_expressao(727676) || ' ' || atrib_oldvalue_w || ' ' || obter_desc_expressao(618484) || ' ' || atrib_newvalue_w|| ' ' || obter_desc_expressao(293478) || ' ('||substr(obter_desc_motivo_falta_ag(NEW.nr_seq_motivo_falta),1,255)||') '||NEW.ds_motivo_status, OLD.cd_pessoa_fisica, OLD.nm_paciente, OLD.dt_agenda);
	end if;
	
	if (OLD.ie_status_agenda is not null) and (NEW.ie_status_agenda is not null) and (OLD.ie_status_agenda <> NEW.ie_status_agenda) and (OLD.ie_status_agenda = 'C') and (NEW.ie_status_agenda = 'N') then -- Reverter cancelamento
		
		atrib_oldvalue_w := substr(obter_valor_dominio(83,OLD.ie_status_agenda),1,255);
		atrib_newvalue_w := substr(obter_valor_dominio(83,NEW.ie_status_agenda),1,255);

		CALL gerar_agenda_consulta_hist(NEW.cd_agenda,NEW.nr_sequencia,'SRC',NEW.nm_usuario, obter_desc_expressao(727676) || ' ' || atrib_oldvalue_w || ' ' || obter_desc_expressao(618484) || ' ' || atrib_newvalue_w, OLD.cd_pessoa_fisica, OLD.nm_paciente, OLD.dt_agenda);
		
		-- exclui o protocolo de  cancelamento

		CALL INSERIR_EXCLUIR_PROTOC_CANC(NEW.nr_sequencia, null, 'E', NEW.nm_usuario);
	end if;
	
	if (OLD.nr_minuto_duracao is not null) and (NEW.nr_minuto_duracao is not null) and (OLD.nr_minuto_duracao <> NEW.nr_minuto_duracao) then -- duracao
		
		atrib_oldvalue_w := OLD.nr_minuto_duracao;
		atrib_newvalue_w := NEW.nr_minuto_duracao;

		CALL gerar_agenda_consulta_hist(NEW.cd_agenda,NEW.nr_sequencia,'D',NEW.nm_usuario, obter_desc_expressao(728026) || ' ' || atrib_oldvalue_w || ' ' || obter_desc_expressao(727684) || ' ' || atrib_newvalue_w || ' ' || obter_desc_expressao(619557), coalesce(OLD.cd_pessoa_fisica,NEW.cd_pessoa_fisica), coalesce(OLD.nm_paciente,NEW.nm_paciente), OLD.dt_agenda);
	end if;

	if (OLD.ie_status_agenda is not null) and (NEW.ie_status_agenda is not null) and (OLD.ie_status_agenda <> NEW.ie_status_agenda) and
		((OLD.ie_status_agenda <> 'N') or (OLD.nm_usuario_acesso is null)) and (OLD.ie_status_agenda <> 'B') and (OLD.ie_status_agenda <> 'R') and (OLD.ie_status_agenda <> 'S') and
		((OLD.ie_status_agenda <> 'A') or (OLD.nm_usuario_acesso is null)) and (NEW.ie_status_agenda = 'L') then
		
		/*r1ai1se_1appli1cation_err1or(-20011,	'N?o ? poss?vel modificar para livre o status de um agendamento j? marcado anteriormente!' || chr(10) ||
						'Caso, por algum motivo,  este agendamento n?o ocorrer? mais e voc? deseja liberar este hor?rio para que um novo paciente possa ser agendado,  recomenda-se cancelar o mesmo.#@#@');*/

		CALL Wheb_mensagem_pck.exibir_mensagem_abort(218754);				
	end if;
	
	if (cd_tipo_agenda_w = 5) then
		if (OLD.ie_status_agenda is not null) and (NEW.ie_status_agenda is not null) and (OLD.ie_status_agenda <> NEW.ie_status_agenda) and (OLD.ie_status_agenda not in ('C','B')) and (NEW.ie_status_agenda not in ('C','B','L','F','I')) then
		
			atrib_oldvalue_w := substr(obter_valor_dominio(83,OLD.ie_status_agenda),1,255);
			atrib_newvalue_w := substr(obter_valor_dominio(83,NEW.ie_status_agenda),1,255);
	
			CALL gerar_agenda_consulta_hist(NEW.cd_agenda,NEW.nr_sequencia,'ST',NEW.nm_usuario, obter_desc_expressao(727676) || ' ' || atrib_oldvalue_w || ' ' || obter_desc_expressao(618484) || ' ' || atrib_newvalue_w, NEW.cd_pessoa_fisica, SUBSTR(NEW.nm_paciente,1,60), OLD.dt_agenda);
		end if;
		
		if (OLD.ie_status_agenda is not null) and (NEW.ie_status_agenda is not null) and (OLD.ie_status_agenda = 'B') and (NEW.ie_status_agenda = 'L') then -- reverter bloqueio
	
			atrib_oldvalue_w := substr(obter_valor_dominio(83,OLD.ie_status_agenda),1,255);
			atrib_newvalue_w := substr(obter_valor_dominio(83,NEW.ie_status_agenda),1,255);
	
			CALL gerar_agenda_consulta_hist(NEW.cd_agenda,NEW.nr_sequencia,'RB',NEW.nm_usuario, obter_desc_expressao(727676) || ' ' || atrib_oldvalue_w || ' ' || obter_desc_expressao(618484) || ' ' || atrib_newvalue_w, NEW.cd_pessoa_fisica, SUBSTR(NEW.nm_paciente,1,60), OLD.dt_agenda);
		end if;
		
		if (NEW.ds_observacao is not null) and
			((NEW.ds_observacao <> OLD.ds_observacao) or (OLD.ds_observacao is null)) and (NEW.ie_status_agenda <> 'L') then
		
			atrib_oldvalue_w := substr(OLD.ds_observacao,1,255);
			atrib_newvalue_w := substr(NEW.ds_observacao,1,255);
	
			CALL gerar_agenda_consulta_hist(NEW.cd_agenda,NEW.nr_sequencia,'AO',NEW.nm_usuario, obter_desc_expressao(727690) || ' ' || atrib_oldvalue_w || ' ' || obter_desc_expressao(618484) || ' ' || atrib_newvalue_w, OLD.cd_pessoa_fisica, OLD.nm_paciente, OLD.dt_agenda);
		end if;
		
		if (OLD.nr_seq_status_pac is not null) and (NEW.nr_seq_status_pac is not null) and (OLD.nr_seq_status_pac <> NEW.nr_seq_status_pac) then
		
			atrib_oldvalue_w := substr(obter_desc_status_pac_ag(OLD.nr_seq_status_pac),1,255);
			atrib_newvalue_w := substr(obter_desc_status_pac_ag(NEW.nr_seq_status_pac),1,255);
	
			CALL gerar_agenda_consulta_hist(NEW.cd_agenda,NEW.nr_sequencia,'SP',NEW.nm_usuario, obter_desc_expressao(727948) || ' ' || atrib_oldvalue_w || ' ' || obter_desc_expressao(618484) || ' ' || atrib_newvalue_w, NEW.cd_pessoa_fisica, SUBSTR(NEW.nm_paciente,1,60), OLD.dt_agenda);
		end if;
		
	end if;
	
	if	((ie_regra_glosa_conv_w = 'S') and (NEW.ie_status_agenda not in ('L','C','B'))) and
		(((NEW.cd_convenio <> OLD.cd_convenio) or (OLD.cd_convenio is null)) or
		((NEW.cd_categoria <> OLD.cd_categoria) or (OLD.cd_categoria is null)) or
		((NEW.cd_plano <> OLD.cd_plano) or (OLD.cd_plano is null)) or
		((NEW.cd_plano <> OLD.cd_plano) or (OLD.cd_plano is null)) or
		((NEW.nr_seq_proc_interno <> OLD.nr_seq_proc_interno) or (OLD.nr_seq_proc_interno is null)) or
		((NEW.cd_procedimento <> OLD.cd_procedimento) or (OLD.cd_procedimento is null))) and
		((NEW.nr_seq_proc_interno is not null) or (NEW.cd_procedimento is not null)) then		
		
		
		SELECT * FROM ageint_consiste_plano_conv(
					null, NEW.cd_convenio, NEW.cd_procedimento, NEW.ie_origem_proced, LOCALTIMESTAMP, 1, coalesce(NEW.ie_tipo_Atendimento,0), NEW.cd_plano, null, ds_erro_w, NEW.cd_setor_atendimento, NEW.nr_seq_exame, ie_regra_w, NEW.nr_sequencia, nr_seq_regra_w, NEW.nr_seq_proc_interno, NEW.cd_categoria, null, null, null, ie_glosa_w, cd_edicao_ajuste_w, null, ds_irrelevante_w, ds_irrelevante_w, NEW.cd_pessoa_fisica, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w) INTO STRICT ds_erro_w, ie_regra_w, nr_seq_regra_w, ie_glosa_w, cd_edicao_ajuste_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w;
					
					
		ie_edicao_w	:= ageint_obter_se_proc_conv(null, NEW.cd_convenio, NEW.cd_categoria, LOCALTIMESTAMP, NEW.cd_procedimento, NEW.ie_origem_proced, NEW.nr_Seq_proc_interno, coalesce(NEW.ie_tipo_Atendimento,0));

		ie_pacote_w	:= obter_Se_pacote_convenio(NEW.cd_procedimento, NEW.ie_origem_proced, NEW.cd_convenio, null);

			
		if (ie_edicao_w 			= 'N') and (coalesce(cd_edicao_ajuste_w,0) 	= 0) and (ie_pacote_w			= 'N') then
			ie_glosa_w        := 'T';
		end if;

				
		if (ie_edicao_w 			= 'N') and (coalesce(cd_edicao_ajuste_w,0) 	> 0) and (ie_pacote_w			= 'N') then
		
			select   count(*)
			into STRICT     qt_item_edicao_w
			from     preco_amb
			where    cd_edicao_amb = cd_edicao_ajuste_w
			and      cd_procedimento = NEW.cd_procedimento
			and      ie_origem_proced = NEW.ie_origem_proced;
					
			if (qt_item_edicao_w = 0) then
				    ie_glosa_w :=    'G';
			end if;
				
		end if;
		NEW.ie_glosa		:=	ie_glosa_w;
		NEW.ie_regra		:=	ie_regra_w;
		NEW.nr_seq_regra	:=	nr_seq_regra_w;	
	
	end if;
	
	if (NEW.ie_status_agenda <> 'C' and NEW.cd_pessoa_fisica is not null and coalesce(NEW.cd_pessoa_fisica,'0') <> coalesce(OLD.cd_pessoa_fisica,'0')) then
		if (Obter_Se_Perm_PF_Classif(wheb_usuario_pck.get_cd_funcao,NEW.cd_agenda,NEW.cd_pessoa_fisica,LOCALTIMESTAMP)	= 'N') then
			CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(190239);
			--'Esse paciente possui alguma classificacao nao permitida para essa funcao.

		end if;
	end if;

	if (NEW.nr_seq_oftalmo is not null) then
	
	select	max(nr_seq_tipo_consulta) 
	into STRICT	nr_seq_tipo_consulta_w
	from 	agenda_classif 
	where 	cd_classificacao = NEW.ie_classif_agenda;
	
	if (nr_seq_tipo_consulta_w is not null) then
		update 	oft_consulta
		set	nr_seq_tipo_consulta = nr_seq_tipo_consulta_w	
		where	nr_sequencia = NEW.nr_seq_oftalmo;
	end if;
	end if;
	
	if (cd_tipo_agenda_w <> 5) and (coalesce(NEW.ds_observacao, 'XPTO') <> coalesce(OLD.ds_observacao,'XPTO')) and (NEW.ie_status_agenda <> 'L') then
		
		atrib_oldvalue_w := substr(OLD.ds_observacao,1,255);
		atrib_newvalue_w := substr(NEW.ds_observacao,1,255);

		CALL gerar_agenda_consulta_hist(NEW.cd_agenda,NEW.nr_sequencia,'AO',NEW.nm_usuario, obter_desc_expressao(727690) || ' ' || atrib_oldvalue_w || ' ' || obter_desc_expressao(618484) || ' ' || atrib_newvalue_w, OLD.cd_pessoa_fisica, OLD.nm_paciente, OLD.dt_agenda);
	end if;
	
	if (OLD.cd_convenio is not null) and (NEW.cd_convenio is not null) and (OLD.cd_convenio <> NEW.cd_convenio) then
		atrib_oldvalue_w := substr(Obter_desc_convenio(OLD.cd_convenio),1,255);
		atrib_newvalue_w := substr(Obter_desc_convenio(NEW.cd_convenio),1,255);

		CALL gerar_agenda_consulta_hist(NEW.cd_agenda,NEW.nr_sequencia,'AC',NEW.nm_usuario, obter_desc_expressao(315101) || ' ' || atrib_oldvalue_w || ' ' || obter_desc_expressao(618484) || ' ' || atrib_newvalue_w, OLD.cd_pessoa_fisica, OLD.nm_paciente, OLD.dt_agenda);
	end if;

	if (OLD.qt_total_secao is not null) and (NEW.qt_total_secao is not null) and (OLD.qt_total_secao <> NEW.qt_total_secao) then
		atrib_oldvalue_w := substr(OLD.qt_total_secao,1,255);
		atrib_newvalue_w := substr(NEW.qt_total_secao,1,255);
		CALL gerar_agenda_consulta_hist(NEW.cd_agenda,NEW.nr_sequencia,'ATS',NEW.nm_usuario, obter_desc_expressao(326891) || ' ' || atrib_oldvalue_w || ' ' || obter_desc_expressao(618484) || ' ' || atrib_newvalue_w, OLD.cd_pessoa_fisica, OLD.nm_paciente, OLD.dt_agenda);
	end if;

	if (OLD.nr_secao is not null) and (NEW.nr_secao is not null) and (OLD.nr_secao <> NEW.nr_secao) then
		atrib_oldvalue_w := substr(OLD.nr_secao,1,255);
		atrib_newvalue_w := substr(NEW.nr_secao,1,255);

		CALL gerar_agenda_consulta_hist(NEW.cd_agenda,NEW.nr_sequencia,'ASA',NEW.nm_usuario, obter_desc_expressao(298351) || ' ' || atrib_oldvalue_w || ' ' || obter_desc_expressao(618484) || ' ' || atrib_newvalue_w, OLD.cd_pessoa_fisica, OLD.nm_paciente, OLD.dt_agenda);
	end if;
		
/*	if	(obter_funcao_ativa = 821) and
		((:new.nm_paciente is not null) and
		(:old.nm_paciente is not null)) and
		((:new.cd_pessoa_fisica is not null) and
		(:old.cd_pessoa_fisica is not null)) and
		(upper(:new.nm_paciente) <> upper(:old.nm_paciente)) then
		--O nome do paciente ? divergente do c?digo de pessoa informado, verifique!

		Wheb_mensagem_pck.exibir_mensagem_abort(224161);				
	end if;*/

	
	/*Atualiza o status do ciclo de atendimento da medicina preventiva para Agendado ap?s agendar na agenda integrada*/


	if	(OLD.nr_seq_partic_ciclo_item is null AND NEW.nr_seq_partic_ciclo_item is not null) then
		update	mprev_partic_ciclo_item
		set	ie_status		= 'A',
			dt_atualizacao_nrec	= LOCALTIMESTAMP,
			nm_usuario_nrec		= NEW.nm_usuario
		where	nr_sequencia	= NEW.nr_seq_partic_ciclo_item
		and	ie_status	= 'P';
	end if;
	
	
	if	((OLD.nr_seq_partic_ciclo_item is not null) or (NEW.nr_seq_partic_ciclo_item is not null)) and (OLD.ie_status_agenda <> NEW.ie_status_agenda) then
		
		/*Altera o status do ciclo de atendimento para Realizado ap?s atualizar o status da agenda_consulta para Executada*/


		if (NEW.ie_status_agenda = 'E') then
			update	mprev_partic_ciclo_item
			set	ie_status		= 'R',
				dt_atualizacao_nrec	= LOCALTIMESTAMP,
				nm_usuario_nrec		= NEW.nm_usuario
			where	nr_sequencia	= coalesce(NEW.nr_seq_partic_ciclo_item,OLD.nr_seq_partic_ciclo_item);
		end if;
		
		/*Alterar o status do ciclo de atendimento para Pendente ap?s atualizar o status da agenda de consulta para Cancelado*/


		if (NEW.ie_status_agenda = 'C') then
			if (NEW.IE_TRANSFERIDO = 'S') then
				update	mprev_partic_ciclo_item
				set	dt_atualizacao_nrec	= LOCALTIMESTAMP,
					nm_usuario_nrec		= NEW.nm_usuario
				where	nr_sequencia	= coalesce(NEW.nr_seq_partic_ciclo_item,OLD.nr_seq_partic_ciclo_item);
			else
				update	mprev_partic_ciclo_item
				set	ie_status		= 'P',
					dt_atualizacao_nrec	= LOCALTIMESTAMP,
					nm_usuario_nrec		= NEW.nm_usuario
				where	nr_sequencia	= coalesce(NEW.nr_seq_partic_ciclo_item,OLD.nr_seq_partic_ciclo_item);
			end if;
		end if;
		
		/*Alterar o status do ciclo de atendimento para Pendente ap?s atualizar o status da agenda de consulta para Falta*/


		if (NEW.ie_status_agenda = 'F') or (NEW.ie_status_agenda = 'I')then
			update	mprev_partic_ciclo_item
			set	ie_status		= 'P',
				dt_atualizacao_nrec	= LOCALTIMESTAMP,
				nm_usuario_nrec		= NEW.nm_usuario
			where	nr_sequencia	= coalesce(NEW.nr_seq_partic_ciclo_item,OLD.nr_seq_partic_ciclo_item);
		end if;
		
	end if;
	
	/*Tratamentos para os agendamentos realizados pela HDM - Capta??o*/


	if (OLD.nr_seq_captacao is null) and (NEW.nr_seq_captacao is not null) then
		/* Muda o status para triagem */


		update	mprev_captacao
		set	ie_status		= 'T',
			dt_atualizacao_nrec	= LOCALTIMESTAMP,
			nm_usuario_nrec		= NEW.nm_usuario
		where	nr_sequencia	= NEW.nr_seq_captacao;
	end if;
	
        if (NEW.nr_seq_captacao is not null) and (OLD.ie_status_agenda <> NEW.ie_status_agenda) then	

                if (NEW.ie_status_agenda in ('F','I')) then
                        ds_expressao_w := obter_desc_expressao(870116);
                elsif (NEW.ie_status_agenda = 'C') then
                        ds_expressao_w := obter_desc_expressao(870114);
                end if;

		/*Altera o status da captacao para Pendente apos atualizar o status da agenda_consulta para Falta*/


		if (NEW.ie_status_agenda in ('F','I','C')) then
                        --[11] - Numero maximo de agendamentos cancelados ou com falta para que a captao seja cancelada.

			qt_faltas_permitidas_w	:=	 somente_numero(Obter_Valor_Param_Usuario(10155, 11, Obter_Perfil_Ativo, NEW.nm_usuario, 0));
	
			qt_faltas_contabilizadas_w	:= somente_numero(mprev_obter_dados_captacao(NEW.nr_seq_captacao, LOCALTIMESTAMP, 'QCF')) + 1;
	
			if (qt_faltas_permitidas_w > 0 ) and (qt_faltas_contabilizadas_w >= qt_faltas_permitidas_w) then
					update	mprev_captacao
					set	ie_status		= 'C',
							dt_atualizacao_nrec	= LOCALTIMESTAMP,
							nm_usuario_nrec		= NEW.nm_usuario,
							DS_OBS_CAPTACAO		= DS_OBS_CAPTACAO||' '||ds_expressao_w||' '||PKG_DATE_FORMATERS.TO_VARCHAR(NEW.dt_agenda, 'short', wheb_usuario_pck.get_cd_estabelecimento, NEW.nm_usuario)
					where	nr_sequencia	= NEW.nr_seq_captacao;
			else
					update	mprev_captacao
					set	ie_status		= 'P',
							dt_atualizacao_nrec	= LOCALTIMESTAMP,
							nm_usuario_nrec		= NEW.nm_usuario,
							DS_OBS_CAPTACAO		= DS_OBS_CAPTACAO||' '||ds_expressao_w||' '||PKG_DATE_FORMATERS.TO_VARCHAR(NEW.dt_agenda, 'short', wheb_usuario_pck.get_cd_estabelecimento, NEW.nm_usuario)
					where	nr_sequencia	= NEW.nr_seq_captacao;
			end if;

		end if;
		
	end if;
	
	if (ie_param_505 = 'S' and NEW.cd_pessoa_fisica is not null) then
	
		SELECT * FROM VALIDA_REGRA_ESPEC_MED_PREV(
				coalesce(NEW.cd_especialidade,cd_especialidade_w), NEW.ie_tipo_Atendimento, Obter_Tipo_Convenio(NEW.cd_convenio), NEW.cd_convenio, NEW.cd_pessoa_fisica) INTO STRICT _ora2pg_r;
 ds_mensagem_w := _ora2pg_r.DS_MENSAGEM_P; ie_permite_w
				 := _ora2pg_r.IE_PERMITE_P;
		if (ie_permite_w = 'N') then
			if (ds_mensagem_w is not null) then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(ds_mensagem_w);
			end if;	
		end if;
	
	end if;
	
	select	max(nr_seq_atend_futuro)
	into STRICT		nr_seq_atend_futuro_ww
	from		agenda_consulta_adic
	where	nr_seq_agenda = NEW.nr_sequencia;


	if (nr_seq_atend_futuro_ww is not null) and (NEW.cd_pessoa_fisica is not null) and (OLD.ie_status_agenda = 'PA') and (NEW.ie_status_agenda = ie_status_agenda_confirmado_w) then
		BEGIN

		if (nr_status_atend_futuro_w is not null) then
			update	atend_pac_futuro
			set	nr_seq_status = nr_status_atend_futuro_w
			where	nr_sequencia = nr_seq_atend_futuro_ww;
		end if;

		exception
		when others then
			nr_status_atend_futuro_w := '';
		end;
	end if;
	
	if ((ie_funcao_ativa_w = 821 and ie_param_84 = 'N') or (ie_funcao_ativa_w = 866 and ie_param_64_servicos_w = 'N')) and (OLD.cd_pessoa_fisica is not null) and (NEW.cd_pessoa_fisica <> OLD.cd_pessoa_fisica) then
	
		CALL wheb_mensagem_pck.exibir_mensagem_abort(11802);
	
	end if;
	
end if;

if (NEW.NR_SEQ_LISTA_ESPERA is not null and OLD.NR_SEQ_LISTA_ESPERA is null) then
	SELECT	count(*)
	into STRICT	qt_reg_w
	from	ag_lista_espera_estagio
	where	IE_SITUACAO = 'A'
	and		ie_acao = 'AG';
	
	if (qt_reg_w > 0) then		
		select	count(*)
		into STRICT	qt_reg_w
		from	ag_lista_esp_estagio_ant a,
				agenda_lista_espera b
		where	a.nr_seq_estagio = (SELECT	c.nr_sequencia
									from	ag_lista_espera_estagio c
									where	c.IE_SITUACAO = 'A'
									and		c.ie_acao = 'AG')
		and		a.nr_seq_estagio_ant = b.nr_seq_estagio							
		and		b.nr_sequencia = NEW.nr_seq_lista_espera;
	
		if (qt_reg_w > 0) then		
			update	AGENDA_LISTA_ESPERA b
			set		b.nr_seq_estagio = (SELECT	nr_sequencia
									  from		ag_lista_espera_estagio a
									  where		a.IE_SITUACAO = 'A'
									  and		a.ie_acao = 'AG')
			where	b.nr_sequencia = NEW.NR_SEQ_LISTA_ESPERA;			
		end if;		
	end if;	
end if;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_agenda_consulta_update() FROM PUBLIC;

CREATE TRIGGER agenda_consulta_update
	BEFORE UPDATE ON agenda_consulta FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_agenda_consulta_update();

