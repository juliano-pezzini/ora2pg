-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS acompanhante_paciente_insert ON acompanhante_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_acompanhante_paciente_insert() RETURNS trigger AS $BODY$
DECLARE
ie_gerar_controle_acomp_w	varchar(1);
nr_controle_novo_w		acompanhante_paciente.nr_controle%type;
nr_controle_unico_w		varchar(2);
ds_origem_w			varchar(1800);
pragma autonomous_transaction;
BEGIN
  BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger	= 'S')  then	
	ie_gerar_controle_acomp_w := Obter_Param_Usuario(8014, 36, obter_perfil_ativo, NEW.nm_usuario, 0, ie_gerar_controle_acomp_w);
	nr_controle_unico_w := Obter_Param_Usuario(8014, 119, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, nr_controle_unico_w);

	BEGIN

		if (ie_gerar_controle_acomp_w = 'S') then	
		
			if (nr_controle_unico_w = 'S') then
				select	nextval('controle_visita_unico_seq')
				into STRICT	nr_controle_novo_w
				;
			else
				select	coalesce(max(somente_numero(nr_controle)),0) + 1
				into STRICT	nr_controle_novo_w
				from	acompanhante_paciente;
			end if;
			NEW.nr_controle := nr_controle_novo_w;		
		end if;
		
		ds_origem_w := substr(dbms_utility.format_call_stack,1,1800);
		
		insert into log_mov(
			dt_atualizacao,
			nm_usuario,
			cd_log,
			ds_log)
		values (	LOCALTIMESTAMP,
			'Tasy',
			131712,
			'obter_perfil_ativo: '||obter_perfil_ativo||
			' - :new.nm_usuario: '||NEW.nm_usuario||
			' - :new.nr_controle: '||NEW.nr_controle||
			' - Stack: ' || ds_origem_w);

		select	nextval('controle_visita_seq')
		into STRICT	NEW.nr_controle_acesso
		;
		
	exception
		when	others then
			null;
	end;

	commit;
end if;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_acompanhante_paciente_insert() FROM PUBLIC;

CREATE TRIGGER acompanhante_paciente_insert
	BEFORE INSERT ON acompanhante_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_acompanhante_paciente_insert();

