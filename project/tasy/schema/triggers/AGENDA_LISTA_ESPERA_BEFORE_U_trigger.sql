-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS agenda_lista_espera_before_u ON agenda_lista_espera CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_agenda_lista_espera_before_u() RETURNS trigger AS $BODY$
DECLARE
qt_reg_w	bigint;
nr_seq_estagio_w	bigint;
nr_seq_estagio_ant_w	bigint;
nr_seq_lista_espera_w	bigint;
pragma autonomous_transaction;

BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

if (OLD.IE_STATUS_ESPERA <> 'C') and (NEW.IE_STATUS_ESPERA = 'C') then

	SELECT	count(*)
	into STRICT	qt_reg_w
	from	ag_lista_espera_estagio
  where  IE_SITUACAO = 'A'
  and    ie_acao = 'C';

  if (qt_reg_w > 0) then
    select  count(*)
    into STRICT  qt_reg_w
    from  ag_lista_esp_estagio_ant a,
        agenda_lista_espera b
    where  a.nr_seq_estagio = (SELECT  c.nr_sequencia
                  from  ag_lista_espera_estagio c
                  where  c.IE_SITUACAO = 'A'
                  and    c.ie_acao = 'AG')
    and    a.nr_seq_estagio_ant = b.nr_seq_estagio
    and    b.nr_sequencia = NEW.nr_sequencia;

    if (qt_reg_w > 0) then
      SELECT  max(nr_sequencia )
      into STRICT  nr_seq_estagio_w
      from  ag_lista_espera_estagio b
      where  b.IE_SITUACAO = 'A'
      and    b.ie_acao = 'C';

      if (nr_seq_estagio_w is not null) then
        NEW.nr_seq_estagio := nr_seq_estagio_w;
      end if;
    end if;
  end if;
end if;

if (OLD.NR_SEQ_ESTAGIO <> NEW.NR_SEQ_ESTAGIO) or (OLD.NR_SEQ_ESTAGIO is null and NEW.NR_SEQ_ESTAGIO is not null) then

    insert into AGENDA_LISTA_ESPERA_LOG(NR_SEQUENCIA,DT_ATUALIZACAO, NM_USUARIO, DT_ATUALIZACAO_NREC, NM_USUARIO_NREC, NR_SEQ_ESTAGIO, NR_SEQ_ESTAGIO_ANT, NR_SEQ_LISTA_ESPERA)
    values (nextval('agenda_lista_espera_log_seq'),
        LOCALTIMESTAMP,
        obter_usuario_ativo,
        LOCALTIMESTAMP,
        obter_usuario_ativo,
        NEW.nr_seq_estagio,
        OLD.NR_SEQ_ESTAGIO,
        NEW.NR_SEQUENCIA);



end if;

if (OLD.IE_STATUS_ESPERA <> NEW.IE_STATUS_ESPERA) or (OLD.IE_STATUS_ESPERA is null and NEW.IE_STATUS_ESPERA is not null) then
      CALL envia_lista_espera_integracao(NEW.NR_SEQUENCIA, 'S ', null, NEW.IE_STATUS_ESPERA );
end if;

<<Final>>
qt_reg_w := 0;

commit;

RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_agenda_lista_espera_before_u() FROM PUBLIC;

CREATE TRIGGER agenda_lista_espera_before_u
	BEFORE UPDATE ON agenda_lista_espera FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_agenda_lista_espera_before_u();

