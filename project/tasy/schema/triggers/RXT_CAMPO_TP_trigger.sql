-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS rxt_campo_tp ON rxt_campo CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_rxt_campo_tp() RETURNS trigger AS $BODY$
DECLARE nr_seq_w bigint;ds_s_w   varchar(1);ds_c_w   varchar(1);ds_w	   varchar(1);ie_log_w varchar(1);BEGIN BEGIN ds_s_w := to_char(OLD.NR_SEQUENCIA);  ds_c_w:=null;SELECT * FROM gravar_log_alteracao(substr(OLD.NR_APLICACOES,1,4000), substr(NEW.NR_APLICACOES,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_APLICACOES', ie_log_w, ds_w, 'RXT_CAMPO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQ_ENE_FOTONS,1,4000), substr(NEW.NR_SEQ_ENE_FOTONS,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQ_ENE_FOTONS', ie_log_w, ds_w, 'RXT_CAMPO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_X1,1,4000), substr(NEW.QT_X1,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_X1', ie_log_w, ds_w, 'RXT_CAMPO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_X2,1,4000), substr(NEW.QT_X2,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_X2', ie_log_w, ds_w, 'RXT_CAMPO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_Y1,1,4000), substr(NEW.QT_Y1,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_Y1', ie_log_w, ds_w, 'RXT_CAMPO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_Y2,1,4000), substr(NEW.QT_Y2,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_Y2', ie_log_w, ds_w, 'RXT_CAMPO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_ANGULO_GANTRY,1,4000), substr(NEW.QT_ANGULO_GANTRY,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_ANGULO_GANTRY', ie_log_w, ds_w, 'RXT_CAMPO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_ANGULO_COLIMADOR,1,4000), substr(NEW.QT_ANGULO_COLIMADOR,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_ANGULO_COLIMADOR', ie_log_w, ds_w, 'RXT_CAMPO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_ANGULO_MESA,1,4000), substr(NEW.QT_ANGULO_MESA,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_ANGULO_MESA', ie_log_w, ds_w, 'RXT_CAMPO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_CAMPO,1,4000), substr(NEW.DS_CAMPO,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_CAMPO', ie_log_w, ds_w, 'RXT_CAMPO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_OBSERVACAO,1,4000), substr(NEW.DS_OBSERVACAO,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_OBSERVACAO', ie_log_w, ds_w, 'RXT_CAMPO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQ_ENERGIA_RAD,1,4000), substr(NEW.NR_SEQ_ENERGIA_RAD,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQ_ENERGIA_RAD', ie_log_w, ds_w, 'RXT_CAMPO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_DOSE_TOTAL,1,4000), substr(NEW.QT_DOSE_TOTAL,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_DOSE_TOTAL', ie_log_w, ds_w, 'RXT_CAMPO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_DOSE_DIARIA,1,4000), substr(NEW.QT_DOSE_DIARIA,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_DOSE_DIARIA', ie_log_w, ds_w, 'RXT_CAMPO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_TAM_X,1,4000), substr(NEW.QT_TAM_X,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_TAM_X', ie_log_w, ds_w, 'RXT_CAMPO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_TAM_Y,1,4000), substr(NEW.QT_TAM_Y,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_TAM_Y', ie_log_w, ds_w, 'RXT_CAMPO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQ_CAMPO,1,4000), substr(NEW.NR_SEQ_CAMPO,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQ_CAMPO', ie_log_w, ds_w, 'RXT_CAMPO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_DOSE_MONITOR,1,4000), substr(NEW.QT_DOSE_MONITOR,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_DOSE_MONITOR', ie_log_w, ds_w, 'RXT_CAMPO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQ_POSICAO,1,4000), substr(NEW.NR_SEQ_POSICAO,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQ_POSICAO', ie_log_w, ds_w, 'RXT_CAMPO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_TIPO_X,1,4000), substr(NEW.IE_TIPO_X,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_TIPO_X', ie_log_w, ds_w, 'RXT_CAMPO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_TIPO_Y,1,4000), substr(NEW.IE_TIPO_Y,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_TIPO_Y', ie_log_w, ds_w, 'RXT_CAMPO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_SSD,1,4000), substr(NEW.QT_SSD,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_SSD', ie_log_w, ds_w, 'RXT_CAMPO', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;   exception when others then ds_w:= '1'; end;   END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_rxt_campo_tp() FROM PUBLIC;

CREATE TRIGGER rxt_campo_tp
	AFTER UPDATE ON rxt_campo FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_rxt_campo_tp();

