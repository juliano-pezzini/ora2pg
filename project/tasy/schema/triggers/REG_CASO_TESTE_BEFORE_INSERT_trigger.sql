-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS reg_caso_teste_before_insert ON reg_caso_teste CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_reg_caso_teste_before_insert() RETURNS trigger AS $BODY$
declare

  nr_seq_intencao_uso_w bigint;
  ds_prefixo_w varchar(15);
  nr_seq_ct_w bigint;

BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

--Caso de teste de validacao

if (NEW.ie_tipo_documento = 'V') then

nr_seq_intencao_uso_w := coalesce(NEW.nr_seq_intencao_uso,2);

  if (NEW.nr_seq_customer is not null ) then
	select	max(iu.nr_sequencia)
	into STRICT nr_seq_intencao_uso_w
	from reg_area_customer ac,
	     reg_features_customer fc,
	     reg_intencao_uso iu,
	     reg_customer_requirement cr
	where ac.nr_sequencia = fc.nr_seq_area_customer
	and ac.nr_seq_intencao_uso = iu.nr_sequencia
	and fc.nr_sequencia = cr.nr_seq_features
	and cr.nr_sequencia = NEW.nr_seq_customer;
	
	select	max(iu.ds_prefixo)
	into STRICT	ds_prefixo_w
	from	reg_intencao_uso iu
	where	iu.nr_sequencia = nr_seq_intencao_uso_w;
  end if;

  if (NEW.nr_seq_customer is not null and
	nr_seq_intencao_uso_w is not null and
	nr_seq_intencao_uso_w <> 2
     --:new.nr_seq_intencao_uso is not null and

     --:new.nr_seq_intencao_uso <> 2

     ) then

    --select iu.nr_sequencia, iu.ds_prefixo

    --  into nr_seq_intencao_uso_w, ds_prefixo_w

    --  from reg_customer_requirement urs, reg_intencao_uso iu

   --  where urs.nr_sequencia = :new.nr_seq_customer

   --    and urs.nr_seq_intencao_uso = iu.nr_sequencia;


    select coalesce(max(obter_somente_numero(cd_ct_id)), 0) + 1
      into STRICT nr_seq_ct_w
      from reg_caso_teste a
     where a.nr_seq_intencao_uso = nr_seq_intencao_uso_w
       and a.ie_tipo_documento = 'V'
       and nr_seq_customer is not null;

    NEW.cd_ct_id := coalesce(ds_prefixo_w, nr_seq_intencao_uso_w) || '_TCVAL_' || nr_seq_ct_w;


  elsif (NEW.nr_seq_customer is not null and
        nr_seq_intencao_uso_w is not null and
        nr_seq_intencao_uso_w = 2) then

    NEW.cd_ct_id            := 'TASY_VTC_' || NEW.nr_sequencia;
    --:new.nr_seq_intencao_uso := 2;


    end if;


end if;

--Caso de teste de verificacao

if (NEW.ie_tipo_documento = 'T') then

nr_seq_intencao_uso_w := coalesce(NEW.nr_seq_intencao_uso,2);

  if (NEW.nr_seq_product is not null and NEW.nr_seq_intencao_uso is not null) then

	select max(iu.nr_sequencia)
      into STRICT nr_seq_intencao_uso_w
      from reg_product_requirement prs,
           reg_intencao_uso iu
     where prs.nr_sequencia = NEW.nr_seq_product
       and prs.nr_seq_intencao_uso = iu.nr_sequencia;

       select	max(iu.ds_prefixo)
       into STRICT	ds_prefixo_w
       from	reg_intencao_uso iu
       where	iu.nr_sequencia = nr_seq_intencao_uso_w;

   end if;

if (NEW.nr_seq_product is not null and
        nr_seq_intencao_uso_w is not null and
        nr_seq_intencao_uso_w <> 2) then

    select coalesce(max(obter_somente_numero(cd_ct_id)), 0) + 1
      into STRICT nr_seq_ct_w
      from reg_caso_teste a
     where a.nr_seq_intencao_uso = nr_seq_intencao_uso_w
       and a.ie_tipo_documento = 'T'
       and nr_seq_product is not null;

    NEW.cd_ct_id := coalesce(ds_prefixo_w, nr_seq_intencao_uso_w) || '_TCVER_' || nr_seq_ct_w;

  elsif (NEW.nr_seq_product is not null and (nr_seq_intencao_uso_w is not null and
        nr_seq_intencao_uso_w = 2) or NEW.nr_seq_intencao_uso is null ) then

    NEW.cd_ct_id            := 'TASY_TC_' || NEW.nr_sequencia;
    --:new.nr_seq_intencao_uso := 2;


  end if;
end if;
--necessario para atribuir intencao de uso para quando esta inserindo pela funcao antiga


<<Final>>

NEW.nr_seq_intencao_uso := nr_seq_intencao_uso_w;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_reg_caso_teste_before_insert() FROM PUBLIC;

CREATE TRIGGER reg_caso_teste_before_insert
	BEFORE INSERT ON reg_caso_teste FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_reg_caso_teste_before_insert();

