-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS prescr_procedimento_bb ON prescr_procedimento CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_prescr_procedimento_bb() RETURNS trigger AS $BODY$
DECLARE
  nr_seq_resultado exame_lab_resultado.nr_seq_resultado%TYPE;
  dt_resultado exame_lab_resultado.dt_resultado%TYPE;
  nr_atendimento exame_lab_resultado.nr_atendimento%TYPE;
BEGIN
  BEGIN
  IF (wheb_usuario_pck.get_ie_executar_trigger = 'S') THEN
    IF (OBTER_SE_INTEGRACAO_ATIVA(971, 245) = 'S') THEN
      IF (coalesce(OLD.ie_status_atend, 0) < 40 AND (NEW.ie_status_atend >= 40)) THEN

        BEGIN
      
          SELECT nr_seq_resultado, dt_resultado, nr_atendimento 
          INTO STRICT nr_seq_resultado, dt_resultado, nr_atendimento
          FROM exame_lab_resultado
          WHERE nr_prescricao = NEW.nr_prescricao;

        EXCEPTION 
          WHEN others
            THEN NULL;
        END;

        IF (nr_seq_resultado IS NOT NULL) THEN
        
          CALL p_integrar_exames_bb(
            nr_seq_resultado_p  =>  nr_seq_resultado,
            dt_resultado_p      =>  dt_resultado,
            nr_atendimento_p    =>  nr_atendimento,
            ie_tipo_exame_p     =>  'I'
          );

        END IF;

      END IF;

      IF (
          (coalesce(OLD.ie_status_atend, 0) >= 40 AND coalesce(NEW.ie_status_atend, 0) < 40) OR (coalesce(OLD.ie_status_atend, 0) >= 40 AND OLD.dt_cancelamento IS NULL AND NEW.dt_cancelamento IS NOT NULL)
        ) THEN
        
        BEGIN
        
          SELECT nr_seq_resultado, dt_resultado, nr_atendimento 
          INTO STRICT nr_seq_resultado, dt_resultado, nr_atendimento
          FROM exame_lab_resultado
          WHERE nr_prescricao = NEW.nr_prescricao;

        EXCEPTION 
          WHEN others
            THEN NULL;
        END;

        IF (nr_seq_resultado IS NOT NULL) THEN
        
          CALL p_integrar_exames_bb(
            nr_seq_resultado_p  =>  nr_seq_resultado,
            dt_resultado_p      =>  dt_resultado,
            nr_atendimento_p    =>  nr_atendimento,
            ie_tipo_exame_p     =>  'D'
          );

        END IF;

      END IF;
    END IF;
  END IF;
  END;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_prescr_procedimento_bb() FROM PUBLIC;

CREATE TRIGGER prescr_procedimento_bb
	AFTER UPDATE ON prescr_procedimento FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_prescr_procedimento_bb();

