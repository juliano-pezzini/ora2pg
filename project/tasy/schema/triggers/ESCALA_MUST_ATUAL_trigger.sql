-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS escala_must_atual ON escala_must CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_escala_must_atual() RETURNS trigger AS $BODY$
declare
 
qt_pontuacao_imc_w				smallint;
qt_pontuacao_perc_perda_peso_w	smallint;
qt_reg_w	smallint;
qt_pontuacao_w	bigint;
 
 
nr_seq_evento_w		bigint;
cd_estabelecimento_w	smallint;
cd_pessoa_fisica_w	varchar(10);
qt_idade_w			bigint;
 
 
 
C01 CURSOR FOR 
	SELECT	nr_seq_evento 
	from	regra_envio_sms 
	where	((cd_estabelecimento_w = 0) or (cd_estabelecimento	= cd_estabelecimento_w)) 
	and	ie_evento_disp		= 'LMUS' 
	and	qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999) 
	and	coalesce(ie_situacao,'A') = 'A';
BEGIN
  BEGIN 
 
cd_estabelecimento_w	:= obter_estabelecimento_ativo;
if (NEW.nr_hora is null) or (NEW.DT_AVALIACAO <> OLD.DT_AVALIACAO) then 
	BEGIN  
	NEW.nr_hora	:= (to_char(round(NEW.DT_AVALIACAO,'hh24'),'hh24'))::numeric;
	end;
end if;
 
 
if (wheb_usuario_pck.get_ie_executar_trigger	= 'N') then 
	goto Final;
end if;
 
 
BEGIN 
NEW.qt_imc := dividir(NEW.qt_peso_atual, power(dividir(NEW.qt_altura_cm,100),2));
NEW.qt_perc_perda_peso := (dividir((NEW.qt_peso_habitual - NEW.qt_peso_atual), NEW.qt_peso_habitual) * 100);
exception 
when others then 
	NEW.qt_imc	:= 0;
	NEW.qt_perc_perda_peso	:= 0;
end;
 
if (NEW.qt_imc > 20) then 
	qt_pontuacao_imc_w := 0;
elsif (NEW.qt_imc < 18.5) then 
	qt_pontuacao_imc_w := 2;
else 
	qt_pontuacao_imc_w := 1;
end if;
qt_pontuacao_w	:= 0;
 
if (NEW.IE_REDUCAO_ALIMENTAR	= 'S') then 
	qt_pontuacao_w	:= 2;
end if;
if (NEW.qt_perc_perda_peso < 5) then 
	qt_pontuacao_perc_perda_peso_w := 0;
elsif (NEW.qt_perc_perda_peso > 10) then 
	qt_pontuacao_perc_perda_peso_w := 2;
else 
	qt_pontuacao_perc_perda_peso_w := 1;
end if;
 
NEW.qt_pontuacao := qt_pontuacao_imc_w + qt_pontuacao_perc_perda_peso_w + qt_pontuacao_w;
 
if (NEW.dt_liberacao is not null) and (OLD.dt_liberacao is null) and (NEW.QT_PONTUACAO	>= 1)then 
	cd_pessoa_fisica_w	:= obter_pessoa_atendimento(NEW.nr_atendimento,'C');
	qt_idade_w	:= coalesce(obter_idade_pf(cd_pessoa_fisica_w,LOCALTIMESTAMP,'A'),0);
	 
	BEGIN 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_evento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN 
		CALL gerar_evento_paciente_trigger(nr_seq_evento_w,NEW.nr_atendimento,cd_pessoa_fisica_w,null,NEW.nm_usuario,null,NEW.dt_liberacao,NEW.qt_pontuacao);
		end;
	end loop;
	close C01;
	 
	exception 
		when others then 
		null;
	end;
	 
	 
end if;	
 
<<Final>> 
qt_reg_w	:= 0;
 
  END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_escala_must_atual() FROM PUBLIC;

CREATE TRIGGER escala_must_atual
	BEFORE INSERT OR UPDATE ON escala_must FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_escala_must_atual();

