-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS sup_int_mat_marca_atual ON sup_int_mat_marca CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_sup_int_mat_marca_atual() RETURNS trigger AS $BODY$
declare

nr_sequencia_w			marca.nr_sequencia%type;
nr_seq_material_marca_w		material_marca.nr_sequencia%type := 0;
cd_material_w			material.cd_material%type;
qt_existe_erros_w		bigint;

BEGIN

if (NEW.ie_forma_integracao = 'R') then

	NEW.dt_leitura	:= LOCALTIMESTAMP;

	CALL consiste_sup_int_mat_marca(	NEW.nr_sequencia,
					NEW.cd_material,
					NEW.cd_unidade_medida,
					NEW.ie_padronizado,
					NEW.nr_seq_status_aval,
					NEW.nm_usuario );

	select	count(*)
	into STRICT	qt_existe_erros_w
	from	sup_int_marca_consist
	where	nr_sequencia = NEW.nr_sequencia
	and	ie_integracao = '1';

	if (qt_existe_erros_w = 0) then

		if (TG_OP = 'UPDATE') then

			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_material_marca_w
			from	material_marca
			where	cd_sistema_ant = to_char(NEW.nr_sequencia);

		end if;

		if (nr_seq_material_marca_w = 0) then

			select 	max(nr_sequencia)
			into STRICT	nr_sequencia_w
			from 	marca
			where	cd_sistema_ant = to_char(NEW.nr_sequencia);

			select 	max(cd_material)
			into STRICT	cd_material_w
			from 	material
			where 	cd_sistema_ant = to_char(NEW.cd_material);

			insert into material_marca(
				nr_sequencia,
				cd_material,
				qt_prioridade,
				ie_situacao,
				nr_registro_anvisa,
				dt_validade_reg_anvisa,
				cd_cnpj,
				dt_reprovacao,
				nm_usuario_reprovacao,
				ds_observacao,
				cd_referencia,
				qt_conv_compra_est,
				cd_unidade_medida,
				nr_certificado_aprovacao,
				dt_validade_certificado_aprov,
				ie_padronizado,
				nr_seq_status_aval,
				ds_justificativa_padrao,
				ie_vigente_anvisa,
				cd_sistema_ant,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec)
			values (	nr_sequencia_w,
				cd_material_w,
				NEW.qt_prioridade,
				CASE WHEN NEW.ie_situacao='I' THEN NEW.ie_situacao  ELSE 'A' END ,
				NEW.nr_registro_anvisa,
				NEW.dt_validade_reg_anvisa,
				NEW.cd_cnpj,
				NEW.dt_reprovacao,
				NEW.nm_usuario_reprovacao,
				NEW.ds_observacao,
				NEW.cd_referencia,
				NEW.qt_conv_compra_est,
				NEW.cd_unidade_medida,
				NEW.nr_certificado_aprovacao,
				NEW.dt_validade_certificado_aprov,
				NEW.ie_padronizado,
				NEW.nr_seq_status_aval,
				NEW.ds_justificativa_padrao,
				NEW.ie_vigente_anvisa,
				NEW.nr_sequencia,
				NEW.dt_atualizacao,
				NEW.nm_usuario,
				NEW.dt_atualizacao_nrec,
				NEW.nm_usuario_nrec);

			NEW.dt_confirma_integracao := LOCALTIMESTAMP;
			NEW.cd_sistema_ant := nr_sequencia_w;

		else

			select 	max(cd_material)
			into STRICT	cd_material_w
			from 	material
			where 	cd_sistema_ant = NEW.cd_material;

			update	material_marca
			set	cd_material = cd_material_w,
				qt_prioridade = NEW.qt_prioridade,
				ie_situacao = NEW.ie_situacao,
				nr_registro_anvisa = NEW.nr_registro_anvisa,
				dt_validade_reg_anvisa = NEW.dt_validade_reg_anvisa,
				cd_cnpj = NEW.cd_cnpj,
				dt_reprovacao = NEW.dt_reprovacao,
				nm_usuario_reprovacao = NEW.nm_usuario_reprovacao,
				ds_observacao = NEW.ds_observacao,
				cd_referencia = NEW.cd_referencia,
				qt_conv_compra_est = NEW.qt_conv_compra_est,
				cd_unidade_medida = NEW.cd_unidade_medida,
				nr_certificado_aprovacao = NEW.nr_certificado_aprovacao,
				dt_validade_certificado_aprov = NEW.dt_validade_certificado_aprov,
				ie_padronizado = NEW.ie_padronizado,
				nr_seq_status_aval = NEW.nr_seq_status_aval,
				ds_justificativa_padrao = NEW.ds_justificativa_padrao,
				ie_vigente_anvisa = NEW.ie_vigente_anvisa,
				cd_sistema_ant = NEW.cd_sistema_ant,
				dt_atualizacao = NEW.dt_atualizacao,
				nm_usuario = NEW.nm_usuario,
				dt_atualizacao_nrec = NEW.dt_atualizacao_nrec,
				nm_usuario_nrec = NEW.nm_usuario
			where	cd_sistema_ant = NEW.nr_sequencia;

		end if;

	end if;

end if;

RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_sup_int_mat_marca_atual() FROM PUBLIC;

CREATE TRIGGER sup_int_mat_marca_atual
	BEFORE INSERT OR UPDATE ON sup_int_mat_marca FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_sup_int_mat_marca_atual();

