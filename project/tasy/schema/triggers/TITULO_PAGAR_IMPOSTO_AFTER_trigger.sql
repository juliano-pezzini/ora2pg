-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS titulo_pagar_imposto_after ON titulo_pagar_imposto CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_titulo_pagar_imposto_after() RETURNS trigger AS $BODY$
declare

vl_movimento_w			ctb_documento.vl_movimento%type;
cd_estabelecimento_w		ctb_documento.cd_estabelecimento%type;
ie_contab_prov_tributo_w	parametros_contas_pagar.ie_contab_prov_tributo%type;
vl_titulo_w			titulo_pagar.vl_titulo%type;
nr_seq_trans_financ_w		ctb_documento.nr_seq_trans_financ%type;
nr_seq_trans_fin_contab_w	titulo_pagar.nr_seq_trans_fin_contab%type;
nr_seq_info_w			ctb_documento.nr_seq_info%type;	
nm_tabela_w			ctb_documento.nm_tabela%type;	
nr_documento_w			ctb_documento.nr_documento%type;
nr_seq_doc_compl_w		ctb_documento.nr_seq_doc_compl%type;
nr_seq_baixa_w			titulo_pagar_baixa.nr_sequencia%type;
dt_movimento_w			ctb_documento.dt_competencia%type;
ie_contab_prov_cp_w		tributo.ie_contab_prov_cp%type;
nr_doc_analitico_w		ctb_documento.nr_doc_analitico%type;
nr_seq_proj_rec_w       ctb_documento.nr_seq_proj_rec%type;

c01 CURSOR FOR
	SELECT	a.nm_atributo,
		a.cd_tipo_lote_contab
	from	atributo_contab a
	where 	a.cd_tipo_lote_contab = 7
	and 	a.nm_atributo in ( 'VL_TRANSF_TRIBUTO', 'VL_PROV_TRIBUTO')
	
union all

	SELECT	a.nm_atributo,
		18 cd_tipo_lote_contab
	from	atributo_contab a
	where 	a.cd_tipo_lote_contab = 7
	and 	a.nm_atributo in ( 'VL_PROV_TRIBUTO');

c01_w		c01%rowtype;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
select	cd_estabelecimento,
	vl_titulo,
	nr_seq_trans_fin_contab,
        nr_seq_proj_rec
into STRICT	cd_estabelecimento_w,
	vl_titulo_w,
	nr_seq_trans_fin_contab_w,
    nr_seq_proj_rec_w
from	titulo_pagar
where	nr_titulo = NEW.nr_titulo;

BEGIN
select  coalesce(ie_contab_prov_tributo, 'N')
into STRICT    ie_contab_prov_tributo_w
from    parametros_contas_pagar
where   cd_estabelecimento = cd_estabelecimento_w;
exception when others then
        ie_contab_prov_tributo_w := 'N';
end;

BEGIN
select  CASE WHEN a.ie_ctb_online='S' THEN  coalesce(a.ie_contab_prov_tributo, 'N')  ELSE ie_contab_prov_tributo_w END
into STRICT    ie_contab_prov_tributo_w
from    ctb_param_lote_contas_pag a
where   a.cd_empresa = obter_empresa_estab(cd_estabelecimento_w)
and     coalesce(a.cd_estab_exclusivo, cd_estabelecimento_w) = cd_estabelecimento_w;
exception when others then
        null;
end;

if (ie_contab_prov_tributo_w = 'S') then
	BEGIN
	
	open c01;
	loop
	fetch c01 into	
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		BEGIN
		vl_movimento_w:= 0;
		if (c01_w.cd_tipo_lote_contab = 7) then
			BEGIN
			
			BEGIN
			select	a.dt_baixa
			into STRICT	dt_movimento_w
			from	titulo_pagar_baixa a
			where	a.nr_titulo = NEW.nr_titulo
			and	a.nr_sequencia = NEW.nr_seq_baixa;
			
			exception
			when others then
				nr_seq_baixa_w:= null;
			end;

			if (c01_w.nm_atributo = 'VL_TRANSF_TRIBUTO') then
				BEGIN
						
				if (coalesce(nr_seq_baixa_w,0) <> 0) then
					BEGIN
					
					BEGIN
					
					select	nr_seq_trans_imp
					into STRICT	nr_seq_trans_fin_contab_w
					from	tributo
					where 	cd_tributo = NEW.cd_tributo;
					
					exception
					when others then
						nr_seq_trans_fin_contab_w:= null;
					end;
					
					vl_movimento_w			:= vl_titulo_w;
					nr_seq_trans_financ_w		:= nr_seq_trans_fin_contab_w;
					nr_seq_info_w			:= 13;
					nm_tabela_w			:= 'TITULO_PAGAR_BAIXA';
					nr_documento_w			:= NEW.nr_titulo;
					nr_seq_doc_compl_w		:= NEW.nr_seq_baixa;
					nr_doc_analitico_w		:= NEW.nr_sequencia;			
					
					end;
				end if;
				
				end;
			elsif (c01_w.nm_atributo = 'VL_PROV_TRIBUTO') then
				BEGIN
				
				vl_movimento_w		:= NEW.vl_imposto;
				nr_seq_trans_financ_w	:= nr_seq_trans_fin_contab_w;
				nr_seq_info_w		:= 59;
				nm_tabela_w		:= 'TITULO_PAGAR_IMPOSTO';
				nr_documento_w		:= NEW.nr_titulo;
				nr_seq_doc_compl_w	:= NEW.nr_seq_baixa;
				nr_doc_analitico_w	:= NEW.nr_sequencia;
				dt_movimento_w		:= NEW.dt_imposto;
				
				end;
			end if;
			end;
		elsif (c01_w.cd_tipo_lote_contab = 18) then
			BEGIN
			
			if (c01_w.nm_atributo = 'VL_PROV_TRIBUTO') then
				BEGIN
				
				BEGIN
					
				select	ie_contab_prov_cp
				into STRICT	ie_contab_prov_cp_w
				from	tributo
				where 	cd_tributo = NEW.cd_tributo;
				
				exception
				when others then
					ie_contab_prov_cp_w:= null;
				end;
				
				if (coalesce(ie_contab_prov_cp_w, 'X') = 'S') then
					BEGIN
					
					BEGIN
					
					select	nr_seq_trans_fin,
						dt_baixa
					into STRICT	nr_seq_trans_financ_w,
						dt_movimento_w
					from	titulo_pagar_baixa
					where	nr_titulo = NEW.nr_titulo
					and	nr_sequencia = NEW.nr_seq_baixa;
					
					exception
					when others then
						nr_seq_trans_financ_w:= null;
						dt_movimento_w:= null;
					end;
					
					vl_movimento_w		:= NEW.vl_imposto;
					nr_seq_info_w		:= 59;
					nm_tabela_w		:= 'TITULO_PAGAR_IMPOSTO';
					nr_documento_w		:= NEW.nr_titulo;
					nr_seq_doc_compl_w	:= NEW.nr_seq_baixa;
					nr_doc_analitico_w	:= NEW.nr_sequencia;
					
					
					end;
				end if;
				
				end;
			end if;
			
			end;
		end if;
		
		if (coalesce(vl_movimento_w, 0) <> 0) then
			BEGIN
			
			CALL ctb_concil_financeira_pck.ctb_gravar_documento(	cd_estabelecimento_w,
										dt_movimento_w,
										c01_w.cd_tipo_lote_contab,
										nr_seq_trans_financ_w,
										nr_seq_info_w,
										nr_documento_w,
										nr_seq_doc_compl_w,
										nr_doc_analitico_w,
										vl_movimento_w,
										nm_tabela_w,
										c01_w.nm_atributo,
										NEW.nm_usuario,
										'P',
										null,
										nr_seq_proj_rec_w);
			
			end;
		end if;
		
		end;
	end loop;
	close c01;
	
	
	end;
end if;
end if;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_titulo_pagar_imposto_after() FROM PUBLIC;

CREATE TRIGGER titulo_pagar_imposto_after
	AFTER INSERT ON titulo_pagar_imposto FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_titulo_pagar_imposto_after();

