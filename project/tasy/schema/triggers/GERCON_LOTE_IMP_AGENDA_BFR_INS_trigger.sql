-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS gercon_lote_imp_agenda_bfr_ins ON gercon_lote_imp_agenda CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_gercon_lote_imp_agenda_bfr_ins() RETURNS trigger AS $BODY$
declare
	cd_pessoa_fisica_w gercon_lote_imp_agenda.cd_pessoa_fisica%type;
BEGIN
	NEW.nm_usuario := wheb_usuario_pck.get_nm_usuario;
	NEW.nm_usuario_nrec := wheb_usuario_pck.get_nm_usuario;

	select	nextval('gercon_lote_imp_agenda_seq')
	into STRICT	NEW.nr_sequencia
	;

	NEW.dt_atualizacao := LOCALTIMESTAMP;
	NEW.dt_atualizacao_nrec := LOCALTIMESTAMP;

	select	coalesce(max(cd_pessoa_fisica),'0')
	into STRICT	cd_pessoa_fisica_w
	from	pessoa_fisica
	where	nr_cpf = coalesce(NEW.nr_cpf,'0')
	and		nr_cpf <> '0';


	if (cd_pessoa_fisica_w = '0') then
		BEGIN

			select	nextval('pessoa_fisica_seq')
			into STRICT	cd_pessoa_fisica_w
			;

			insert into pessoa_fisica(	CD_PESSOA_FISICA,
										NR_CARTAO_NAC_SUS,
										NM_PESSOA_FISICA,
										NR_CPF,
										DT_NASCIMENTO,
										IE_SEXO,
										IE_ESTADO_CIVIL,
										NR_SEQ_COR_PELE,
										CD_NACIONALIDADE,
										IE_TIPO_PESSOA,
										DT_ATUALIZACAO,
										DT_ATUALIZACAO_NREC,
										NM_USUARIO
										)
							values (	cd_pessoa_fisica_w,
										NEW.nr_cartao_sus,
										NEW.nm_paciente,
										NEW.nr_cpf,
										to_date(NEW.dt_nascimento),
										substr(coalesce(upper(NEW.ie_sexo),'I'),1,1),
										obter_conversao_externa_int(null,'PESSOA_FISICA','DS_ESTADO_CIVIL',coalesce(NEW.DS_ESTADO_CIVIL,''),'GERCON'),
										obter_conversao_externa_int(null,'PESSOA_FISICA','DS_RACA',coalesce(NEW.DS_RACA,''),'GERCON'),
										obter_conversao_externa_int(null,'PESSOA_FISICA','DS_NACIONALIDADE',coalesce(NEW.DS_NACIONALIDADE, ''),'GERCON'),
										2,
										LOCALTIMESTAMP,
										LOCALTIMESTAMP,
										wheb_usuario_pck.get_nm_usuario
										);

			insert into compl_pessoa_fisica(	CD_PESSOA_FISICA,
												DS_ENDERECO,
												NR_ENDERECO,
												DS_COMPLEMENTO,
												DS_BAIRRO,
												CD_MUNICIPIO_IBGE,
												DS_MUNICIPIO,
												CD_CEP,
												NM_CONTATO,
												NR_SEQUENCIA,
												IE_TIPO_COMPLEMENTO,
												NM_USUARIO,
												DT_ATUALIZACAO,
												DT_ATUALIZACAO_NREC
												)
									values (	cd_pessoa_fisica_w,
												NEW.ds_logradouro,
												NEW.nr_logradouro,
												NEW.ds_complemento,
												NEW.ds_bairro,
												NEW.nr_endereco_ibge,
												NEW.ds_municipio,
												NEW.cd_cep,
												NEW.nm_paciente,
												1,
												1,
												wheb_usuario_pck.get_nm_usuario,
												LOCALTIMESTAMP,
												LOCALTIMESTAMP
												);

		end;
	end if;
	NEW.cd_pessoa_fisica := cd_pessoa_fisica_w;

	select	coalesce(max(cd_pessoa_fisica),'')
	into STRICT	cd_pessoa_fisica_w
	from	pessoa_fisica
	where	nr_cpf = coalesce(NEW.nr_cpf_profissional,0)
	and		nr_cpf <> '0';

	NEW.cd_profissional := cd_pessoa_fisica_w;

RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_gercon_lote_imp_agenda_bfr_ins() FROM PUBLIC;

CREATE TRIGGER gercon_lote_imp_agenda_bfr_ins
	BEFORE INSERT ON gercon_lote_imp_agenda FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_gercon_lote_imp_agenda_bfr_ins();

