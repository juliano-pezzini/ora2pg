-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS captura_imagem_logs ON prescr_proc_captura_img CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_captura_imagem_logs() RETURNS trigger AS $BODY$
DECLARE

nr_sequencia_w bigint;

BEGIN

  SELECT nextval('prescr_proc_captura_log_seq')
  INTO STRICT nr_sequencia_w
;

  IF (TG_OP = 'INSERT') THEN
  BEGIN
    INSERT INTO prescr_proc_captura_log(NR_SEQUENCIA,
                                        DS_CALL_STACK,
                                        DT_ATUALIZACAO,
                                        NM_USUARIO,
                                        DT_ATUALIZACAO_NREC,
                                        NM_USUARIO_NREC,
                                        NR_PRESCRICAO,
                                        NR_SEQ_PRESCRICAO,
                                        NR_SEQ_CAPTURA_IMAGEM,
                                        DS_OPERACAO)
    VALUES (nr_sequencia_w,
           substr(dbms_utility.format_call_stack,1,3000),
           LOCALTIMESTAMP,
           NEW.nm_usuario,
           LOCALTIMESTAMP,
           NEW.nm_usuario,
           NEW.nr_prescricao,
           NEW.nr_sequencia_prescricao,
           NEW.nr_seq_captura,
           'INSERT');
  END;
  ELSIF (TG_OP = 'UPDATE') THEN
  BEGIN
    INSERT INTO prescr_proc_captura_log(NR_SEQUENCIA,
                                        DS_CALL_STACK,
                                        DT_ATUALIZACAO,
                                        NM_USUARIO,
                                        DT_ATUALIZACAO_NREC,
                                        NM_USUARIO_NREC,
                                        NR_PRESCRICAO,
                                        NR_SEQ_PRESCRICAO,
                                        NR_SEQ_CAPTURA_IMAGEM,
                                        DS_OPERACAO)
    VALUES (nr_sequencia_w,
           substr(dbms_utility.format_call_stack,1,3000),
           LOCALTIMESTAMP,
           NEW.nm_usuario,
           LOCALTIMESTAMP,
           NEW.nm_usuario,
           NEW.nr_prescricao,
           NEW.nr_sequencia_prescricao,
           NEW.nr_seq_captura,
           'UPDATE');
  END;
  ELSE
  BEGIN
    INSERT INTO prescr_proc_captura_log(NR_SEQUENCIA,
                                        DS_CALL_STACK,
                                        DT_ATUALIZACAO,
                                        NM_USUARIO,
                                        DT_ATUALIZACAO_NREC,
                                        NM_USUARIO_NREC,
                                        NR_PRESCRICAO,
                                        NR_SEQ_PRESCRICAO,
                                        NR_SEQ_CAPTURA_IMAGEM,
                                        DS_OPERACAO)
    VALUES (nr_sequencia_w,
           substr(dbms_utility.format_call_stack,1,3000),
           LOCALTIMESTAMP,
           OLD.nm_usuario,
           LOCALTIMESTAMP,
           OLD.nm_usuario,
           OLD.nr_prescricao,
           OLD.nr_sequencia_prescricao,
           OLD.nr_seq_captura,
           'DELETE');
  END;
  END IF;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_captura_imagem_logs() FROM PUBLIC;

CREATE TRIGGER captura_imagem_logs
	BEFORE INSERT OR UPDATE OR DELETE ON prescr_proc_captura_img FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_captura_imagem_logs();

