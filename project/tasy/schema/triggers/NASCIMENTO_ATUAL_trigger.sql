-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS nascimento_atual ON nascimento CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_nascimento_atual() RETURNS trigger AS $BODY$
declare
qt_reg_w		bigint;
cd_estabelecimento_w	bigint;
nr_seq_evento_w		bigint;
nr_counter_w     bigint;
nr_birth_seq_w      bigint;
cd_pessoa_fisica_w	pessoa_fisica.cd_pessoa_fisica%type;
C01 CURSOR FOR
	SELECT	nr_seq_evento
	from	regra_envio_sms
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	ie_evento_disp = 'ARNV'
	and	coalesce(ie_situacao,'A') = 'A';
BEGIN
  BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger	= 'S')  then
if 	((OLD.DT_INATIVACAO is null) and (NEW.DT_INATIVACAO is not null) and (OLD.nr_dnv is not null)) then
	
	update	REGRA_NUMERACAO_DEC_ITEM a
	set		IE_DISPONIVEL = 'S'
	where	nr_declaracao	= OLD.nr_dnv
	and	exists (	
	SELECT	1
	from	regra_numeracao_declaracao b
	where	a.NR_SEQ_REGRA_NUM	= b.nr_sequencia
	and	b.ie_situacao	= 'A'
	and	b.ie_tipo_numeracao	= 'DNV');

end if;

if (coalesce(OLD.DT_ATUALIZACAO,LOCALTIMESTAMP + interval '10 days') <> NEW.DT_ATUALIZACAO) and (NEW.DT_ATUALIZACAO is not null) then
	NEW.ds_utc				:= obter_data_utc(NEW.DT_ATUALIZACAO, 'HV');	
end if;

if (coalesce(NEW.NR_DNV,'0')	<> coalesce(OLD.NR_DNV,'0')) and (length(somente_numero(NEW.NR_DNV))	= length(NEW.NR_DNV)) then
	
	
	BEGIN
	update	REGRA_NUMERACAO_DEC_ITEM a
	set	IE_DISPONIVEL = 'S'
	where	nr_declaracao	= OLD.nr_dnv
	and		ie_disponivel <> 'C'
	and	exists (	SELECT	1
				from	regra_numeracao_declaracao b
				where	a.NR_SEQ_REGRA_NUM	= b.nr_sequencia
				and	b.ie_situacao	= 'A'
				and	b.ie_tipo_numeracao	= 'DNV');
	exception
		when others then
		null;
	end;
	
	select	count(*)
	into STRICT	qt_reg_w
	from	regra_numeracao_declaracao a,
		REGRA_NUMERACAO_DEC_ITEM b
	where	a.nr_sequencia	= b.NR_SEQ_REGRA_NUM	
	and	nr_declaracao	= NEW.nr_dnv
	and	IE_DISPONIVEL	<> 'S'
	and	a.ie_situacao	= 'A'
	and	a.ie_tipo_numeracao	= 'DNV';
			
	if (qt_reg_w	> 0)  then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(264504);
	end if;
	
	select	count(*)
	into STRICT	qt_reg_w
	from	regra_numeracao_declaracao a,
		REGRA_NUMERACAO_DEC_ITEM b
	where	a.nr_sequencia	= b.NR_SEQ_REGRA_NUM	
	and	a.ie_situacao	= 'A'
	and	a.ie_tipo_numeracao	= 'DNV';
	
	if (qt_reg_w	> 0) then
	
		select	count(*)
		into STRICT	qt_reg_w
		from	regra_numeracao_declaracao a,
			REGRA_NUMERACAO_DEC_ITEM b
		where	a.nr_sequencia	= b.NR_SEQ_REGRA_NUM	
		and	a.ie_situacao	= 'A'
		and	a.ie_tipo_numeracao	= 'DNV'
		and	nr_declaracao	= NEW.nr_dnv;
		
		if (qt_reg_w	= 0) then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(264505);
		end if;
	
	end if;
	
	update	REGRA_NUMERACAO_DEC_ITEM a
	set	IE_DISPONIVEL = 'N'
	where	nr_declaracao	= NEW.nr_dnv
	and	exists (	SELECT	1
				from	regra_numeracao_declaracao b
				where	a.NR_SEQ_REGRA_NUM	= b.nr_sequencia
				and	b.ie_situacao	= 'A'
				and	b.ie_tipo_numeracao	= 'DNV');
				
		
	cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;
	
	if (NEW.IE_UNICO_NASC_VIVO = 'S') then
		open C01;
		loop
		fetch C01 into	
			nr_seq_evento_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */		
			CALL gerar_evento_paciente(nr_seq_evento_w,NEW.NR_ATENDIMENTO, OBTER_PESSOA_ATENDIMENTO(NEW.NR_ATENDIMENTO, 'C'),null,wheb_usuario_pck.get_nm_usuario,
			   null, null, null, null, null, null, null, null, null, null, 'N');
		end loop;
		close C01;	
	end if;		
end if;

if ( TG_OP = 'INSERT' ) then
	if (coalesce((pkg_i18n.get_user_locale()), 'pt_BR') = 'de_AT') then
			
		SELECT
			coalesce(MAX(nr_birth_number), 0) + 1 into STRICT NEW.nr_birth_number
		FROM
			nascimento
		WHERE
		EXTRACT(YEAR FROM dt_nascimento) = EXTRACT(YEAR FROM NEW.dt_nascimento);
		
	end if;

	if (NEW.cd_pessoa_fisica = '0') then
		select	coalesce(max(cd_pessoa_fisica),'')
		into STRICT	cd_pessoa_fisica_w
		from	atendimento_paciente
		where	nr_atendimento = NEW.nr_atendimento;
		
		NEW.cd_pessoa_fisica := cd_pessoa_fisica_w;

	end if;

end if;
end if;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_nascimento_atual() FROM PUBLIC;

CREATE TRIGGER nascimento_atual
	BEFORE INSERT OR UPDATE ON nascimento FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_nascimento_atual();

