-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pfcs_update_estabelecimento ON pfcs_organization CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pfcs_update_estabelecimento() RETURNS trigger AS $BODY$
DECLARE
-- Constants
nm_user_w               estabelecimento.nm_usuario%type     := 'PFCS';

-- Dynamic variables
tasy_licenca_seq_w      tasy_licenca.nr_sequencia%type;
cd_establishment_w      estabelecimento.cd_estabelecimento%type;
cd_company_w            empresa.cd_empresa%type;
cd_cgc_base_w           empresa.cd_base_cgc%type;
cd_cgc_w                pessoa_juridica.cd_cgc%type;
cd_tipo_pessoa_w        pessoa_juridica.cd_tipo_pessoa%type;
ds_log_w                pfcs_org_structure_log.ds_log%type;
ie_situation_w          varchar(1) := 'A';
qt_reg_w                smallint;

/*
    This trigger is responsible for inserting a new establishment on table "ESTABELECIMENTO" or updating an existing one.
    It will also insert or update, when needed, data on table "EMPRESA", since "ESTABELECIMENTO" is linked to it.
    The necessary information will come from the integration table PFCS_ORGANIZATION.

    Some fields are being populated ONLY because they are mandatory, so it is not advised to use them when creating queries.
    The only fields that are safe to use are: cd_empresa and cd_estabelecimento.
*/
BEGIN
    if (coalesce(wheb_usuario_pck.get_ie_executar_trigger,'S') = 'N')  then
        goto Final;
    end if;

    CALL wheb_usuario_pck.set_nm_usuario(nm_user_w);
    /* Needed configuration
        select vl_parametro
        from funcao_param_usuario
        where upper(nm_usuario_param) = 'PFCS'
            and cd_funcao = 6
            and nr_sequencia = 9;
    */
    if (NEW.si_status is not null) then
        ie_situation_w :=
        CASE
            WHEN NEW.si_status = '1' THEN 'A'
            WHEN NEW.si_status = '0' THEN 'I'
        END;
    end if;

    cd_cgc_base_w := to_char(NEW.nr_sequencia);
    cd_cgc_w := to_char(NEW.nr_sequencia);

    IF TG_OP = 'INSERT' THEN
        -- Check if it is a company (there is no superior organization)
        if (NEW.nr_seq_organization_sup is null) then
            /************* EMPRESA *************/

            select (coalesce(max(cd_empresa),0)+1)
            into STRICT cd_company_w
            from empresa;

            insert into
            empresa(
                CD_BASE_CGC,
                CD_EMPRESA,
                DS_NOME_CURTO,
                IE_CLASSIF_CONTA,
                IE_CONSISTE_MASCARA_CONTABIL,
                IE_CONTRAPARTIDA,
                IE_FECHA_ESTAB,
                IE_SISTEMA_CTB,
                IE_SITUACAO,
                NM_RAZAO_SOCIAL,
                QT_MES_FIM_EXERCICIO,
                QT_NIVEL_FLUXO,
                NM_USUARIO,
                NM_USUARIO_NREC,
                DT_ATUALIZACAO,
                DT_ATUALIZACAO_NREC
            ) values (
                cd_cgc_base_w,
                cd_company_w,
                substr(NEW.id_organization,1,50),
                'N',
                'N',
                'N',
                'N',
                'N',
                ie_situation_w,
                NEW.name,
                12,
                4,
                nm_user_w,
                nm_user_w,
                LOCALTIMESTAMP,
                LOCALTIMESTAMP
            );

            ds_log_w := (
                concat('cd_empresa: ',              cd_company_w || CHR(10))
                || concat('cd_base_cgc: ',          cd_cgc_base_w || CHR(10))
                || concat('nm_razao_social: ',      NEW.name || CHR(10))
                || concat('ds_nome_curto: ',        substr(NEW.id_organization,1,50) || CHR(10))
                || concat('ie_situacao: ',          ie_situation_w)
            );
            CALL pfcs_log_pck.pfcs_insert_org_struc_log(
                ie_type_p => 'INSERT',
                nm_table_p => 'EMPRESA',
                ds_log_p => ds_log_w,
                nm_usuario_p => nm_user_w
            );
        else
        -- else if it is an establishment (it is inside a company)
            select max(cd_empresa)
            into STRICT cd_company_w
            from empresa
            where cd_base_cgc = to_char(NEW.nr_seq_organization_sup);

            -- Check if there is a company
            if (cd_company_w is not null) then
                /************* TIPO_PESSOA_JURIDICA *************/

                select coalesce(max(cd_tipo_pessoa),0)
                into STRICT cd_tipo_pessoa_w
                from tipo_pessoa_juridica;

                if (cd_tipo_pessoa_w = 0) then
                    cd_tipo_pessoa_w := cd_tipo_pessoa_w + 1;

                    insert into
                    tipo_pessoa_juridica(
                        IE_ATUALIZA_PJ,
                        DT_ATUALIZACAO,
                        DT_ATUALIZACAO_NREC,
                        IE_SITUACAO,
                        DS_TIPO_PESSOA,
                        CD_TIPO_PESSOA,
                        NM_USUARIO,
                        NM_USUARIO_NREC
                    ) values (
                        'S',
                        LOCALTIMESTAMP,
                        LOCALTIMESTAMP,
                        'A',
                        'Hospital',
                        cd_tipo_pessoa_w,
                        nm_user_w,
                        nm_user_w
                    );
                end if;

                /************* PESSOA_JURIDICA *************/

                insert into
                pessoa_juridica(
                    CD_CGC,
                    DS_RAZAO_SOCIAL,
                    NM_FANTASIA,
                    CD_CEP,
                    DS_ENDERECO,
                    IE_SITUACAO,
                    SG_ESTADO,
                    DT_ATUALIZACAO,
                    DT_ATUALIZACAO_NREC,
                    NM_USUARIO,
                    NM_USUARIO_NREC,
                    CD_TIPO_PESSOA, -- FK TIPO_PESSOA_JURIDICA
                    IE_PROD_FABRIC,
                    DS_MUNICIPIO
                ) values (
                    cd_cgc_w,
                    NEW.name,
                    substr(NEW.name,1,80),
                    ' ',
                    ' ',
                    ie_situation_w,
                    ' ',
                    LOCALTIMESTAMP,
                    LOCALTIMESTAMP,
                    nm_user_w,
                    nm_user_w,
                    cd_tipo_pessoa_w,
                    'N',
                    ' '
                );

                /************* TASY_LICENCA *************/

                select coalesce(max(nr_sequencia),0)
                into STRICT tasy_licenca_seq_w
                from tasy_licenca;

                if (tasy_licenca_seq_w = 0) then
                    select
                    nextval('tasy_licenca_seq')
                    into STRICT tasy_licenca_seq_w
;

                    insert into
                    tasy_licenca(
                        NR_SEQUENCIA,
                        DS_LICENCA,
                        DT_ATUALIZACAO,
                        NM_USUARIO,
                        NM_USUARIO_BANCO,
                        NM_SENHA_BANCO,
                        NM_USUARIO_AVISO,
                        IE_ACAO_EXCESSO,
                        QT_USUARIO,
                        CD_LICENCA
                    ) values (
                        tasy_licenca_seq_w,
                        'PFCS',
                        LOCALTIMESTAMP,
                        nm_user_w,
                        ' ',
                        ' ',
                        nm_user_w,
                        'A',
                        99999,
                        '99999'
                    );
                end if;

                /************* ESTABELECIMENTO *************/

                select (coalesce(max(cd_estabelecimento),0)+1)
                into STRICT cd_establishment_w
                from estabelecimento;

                insert into
                estabelecimento(
                    CD_CGC, -- FK PESSOA_JURIDICA
                    CD_ESTABELECIMENTO,
                    CD_EMPRESA,
                    NM_FANTASIA_ESTAB,
                    DT_ATUALIZACAO,
                    DT_ATUALIZACAO_NREC,
                    DT_REF_CONTROLE_TERC,
                    IE_ANS,
                    IE_RAZAO_FANTASIA,
                    IE_SERV_LEITO,
                    IE_SITUACAO,
                    NM_USUARIO,
                    NM_USUARIO_NREC,
                    NR_SEQ_LICENCA, -- FK TASY_LICENCA
                    PR_ICMS_ESTADO
                ) values (
                    cd_cgc_w,
                    cd_establishment_w,
                    cd_company_w,
                    substr(NEW.name,1,50),
                    LOCALTIMESTAMP,
                    LOCALTIMESTAMP,
                    LOCALTIMESTAMP,
                    'N',
                    'R',
                    'N',
                    ie_situation_w,
                    nm_user_w,
                    nm_user_w,
                    tasy_licenca_seq_w,
                    17
                );

                ds_log_w := (
                    concat('cd_cgc: ',                  cd_cgc_w                || CHR(10))
                    || concat('cd_estabelecimento: ',   cd_establishment_w      || CHR(10))
                    || concat('cd_empresa: ',           cd_company_w            || CHR(10))
                    || concat('nm_fantasia_estab: ',    substr(NEW.name,1,50)  || CHR(10))
                    || concat('ie_situacao: ',          ie_situation_w)
                );
                CALL pfcs_log_pck.pfcs_insert_org_struc_log(
                    ie_type_p => 'INSERT',
                    nm_table_p => 'ESTABELECIMENTO',
                    ds_log_p => ds_log_w,
                    nm_usuario_p => nm_user_w
                );

                NEW.cd_estabelecimento := cd_establishment_w; --> Link Between ESTABELECIMENTO and PFCS_ORGANIZATION
            end if;
        end if;
    END IF;


    IF TG_OP = 'UPDATE' THEN
        if (OLD.nr_seq_organization_sup is not null AND NEW.nr_seq_organization_sup is null) then
            NEW.nr_seq_organization_sup := OLD.nr_seq_organization_sup;
        end if;

        if (NEW.nr_seq_organization_sup is null) then
            update empresa set
                IE_SITUACAO = ie_situation_w,
                DT_ATUALIZACAO = LOCALTIMESTAMP,
                NM_RAZAO_SOCIAL = NEW.name,
                NM_USUARIO = nm_user_w
            where cd_base_cgc = cd_cgc_base_w;
        else
            update pessoa_juridica set
                DS_RAZAO_SOCIAL = NEW.name,
                NM_FANTASIA = substr(NEW.name,1,80),
                IE_SITUACAO = ie_situation_w,
                DT_ATUALIZACAO = LOCALTIMESTAMP,
                NM_USUARIO = nm_user_w
            where cd_cgc = cd_cgc_w;

            update estabelecimento set
                NM_FANTASIA_ESTAB = substr(NEW.name,1,50),
                IE_SITUACAO = ie_situation_w,
                DT_ATUALIZACAO = LOCALTIMESTAMP,
                NM_USUARIO = nm_user_w
            where cd_cgc = cd_cgc_w;
        end if;
    END IF;
<<Final>>
qt_reg_w := 0;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pfcs_update_estabelecimento() FROM PUBLIC;

CREATE TRIGGER pfcs_update_estabelecimento
	BEFORE INSERT OR UPDATE ON pfcs_organization FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pfcs_update_estabelecimento();

