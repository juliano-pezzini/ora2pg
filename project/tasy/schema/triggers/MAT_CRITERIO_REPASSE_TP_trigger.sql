-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS mat_criterio_repasse_tp ON mat_criterio_repasse CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_mat_criterio_repasse_tp() RETURNS trigger AS $BODY$
DECLARE nr_seq_w bigint;ds_s_w   varchar(1);ds_c_w   varchar(1);ds_w	   varchar(1);ie_log_w varchar(1);BEGIN BEGIN ds_s_w := to_char(OLD.NR_SEQUENCIA);  ds_c_w:=null; ds_w:=substr(NEW.CD_ESPECIALIDADE,1,500);SELECT * FROM gravar_log_alteracao(substr(OLD.CD_ESPECIALIDADE,1,4000), substr(NEW.CD_ESPECIALIDADE,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_ESPECIALIDADE', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;  ds_w:=substr(NEW.IE_CLINICA,1,500);SELECT * FROM gravar_log_alteracao(substr(OLD.IE_CLINICA,1,4000), substr(NEW.IE_CLINICA,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_CLINICA', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_PACOTE,1,4000), substr(NEW.IE_PACOTE,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_PACOTE', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.TX_REPASSE,1,4000), substr(NEW.TX_REPASSE,1,4000), NEW.nm_usuario, nr_seq_w, 'TX_REPASSE', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_GRUPO_MATERIAL,1,4000), substr(NEW.CD_GRUPO_MATERIAL,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_GRUPO_MATERIAL', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_TABELA_PRECO,1,4000), substr(NEW.CD_TABELA_PRECO,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_TABELA_PRECO', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_EDICAO_AMB,1,4000), substr(NEW.CD_EDICAO_AMB,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_EDICAO_AMB', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_SUBGRUPO_MATERIAL,1,4000), substr(NEW.CD_SUBGRUPO_MATERIAL,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_SUBGRUPO_MATERIAL', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_CONVENIO_CALC,1,4000), substr(NEW.CD_CONVENIO_CALC,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_CONVENIO_CALC', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_CATEGORIA_CALC,1,4000), substr(NEW.CD_CATEGORIA_CALC,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_CATEGORIA_CALC', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_MEDICO,1,4000), substr(NEW.CD_MEDICO,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_MEDICO', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_CLASSE_MATERIAL,1,4000), substr(NEW.CD_CLASSE_MATERIAL,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_CLASSE_MATERIAL', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_MATERIAL,1,4000), substr(NEW.CD_MATERIAL,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_MATERIAL', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_CONVENIO,1,4000), substr(NEW.CD_CONVENIO,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_CONVENIO', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_SETOR_ATENDIMENTO,1,4000), substr(NEW.CD_SETOR_ATENDIMENTO,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_SETOR_ATENDIMENTO', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.VL_REPASSE,1,4000), substr(NEW.VL_REPASSE,1,4000), NEW.nm_usuario, nr_seq_w, 'VL_REPASSE', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_TIPO_ATENDIMENTO,1,4000), substr(NEW.IE_TIPO_ATENDIMENTO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_TIPO_ATENDIMENTO', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_CARATER_INTER_SUS,1,4000), substr(NEW.IE_CARATER_INTER_SUS,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_CARATER_INTER_SUS', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_TIPO_CONVENIO,1,4000), substr(NEW.IE_TIPO_CONVENIO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_TIPO_CONVENIO', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_MUNICIPIO_IBGE,1,4000), substr(NEW.CD_MUNICIPIO_IBGE,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_MUNICIPIO_IBGE', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(to_char(OLD.DT_VIGENCIA_INICIAL,'dd/mm/yyyy hh24:mi:ss'), to_char(NEW.DT_VIGENCIA_INICIAL,'dd/mm/yyyy hh24:mi:ss'), NEW.nm_usuario, nr_seq_w, 'DT_VIGENCIA_INICIAL', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(to_char(OLD.DT_VIGENCIA_FINAL,'dd/mm/yyyy hh24:mi:ss'), to_char(NEW.DT_VIGENCIA_FINAL,'dd/mm/yyyy hh24:mi:ss'), NEW.nm_usuario, nr_seq_w, 'DT_VIGENCIA_FINAL', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_ATEND_RETORNO,1,4000), substr(NEW.IE_ATEND_RETORNO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_ATEND_RETORNO', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_REPASSE_CALC,1,4000), substr(NEW.IE_REPASSE_CALC,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_REPASSE_CALC', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_MED_EXEC_PROC_PRINC,1,4000), substr(NEW.CD_MED_EXEC_PROC_PRINC,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_MED_EXEC_PROC_PRINC', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_SITUACAO,1,4000), substr(NEW.IE_SITUACAO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_SITUACAO', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_TAB_PRECO_CALC,1,4000), substr(NEW.CD_TAB_PRECO_CALC,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_TAB_PRECO_CALC', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_CGC_FORNECEDOR,1,4000), substr(NEW.CD_CGC_FORNECEDOR,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_CGC_FORNECEDOR', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_FORMA_CALCULO,1,4000), substr(NEW.IE_FORMA_CALCULO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_FORMA_CALCULO', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_CGC_PRESTADOR,1,4000), substr(NEW.CD_CGC_PRESTADOR,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_CGC_PRESTADOR', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_REGRA_MEDICO,1,4000), substr(NEW.IE_REGRA_MEDICO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_REGRA_MEDICO', ie_log_w, ds_w, 'MAT_CRITERIO_REPASSE', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;   exception when others then ds_w:= '1'; end;   END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_mat_criterio_repasse_tp() FROM PUBLIC;

CREATE TRIGGER mat_criterio_repasse_tp
	AFTER UPDATE ON mat_criterio_repasse FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_mat_criterio_repasse_tp();

