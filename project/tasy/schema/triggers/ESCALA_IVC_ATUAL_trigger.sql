-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS escala_ivc_atual ON escala_ivc CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_escala_ivc_atual() RETURNS trigger AS $BODY$
declare
 
qt_pontuacao_w bigint;
 
BEGIN 
 
CALL Consiste_Liberacao_Escala(180);
 
qt_pontuacao_w := 0;
 
--------------------------------------------- IDADE --------------------------------------------- 
 
if (NEW.IE_IDADE = 'A') then 
	qt_pontuacao_w := 0;
elsif (NEW.IE_IDADE = 'B') then 
	qt_pontuacao_w := 1;
elsif (NEW.IE_IDADE = 'C') then 
	qt_pontuacao_w := 3;
end if;
 
--------------------------------------------- AUTO-PERCEPÇÃO DA SAÚDE --------------------------------------------- 
 
if (NEW.IE_COMP_IDADE = 'R') then 
	qt_pontuacao_w := qt_pontuacao_w + 1;
end if;
 
--------------------------------------------- ATIVIDADES DE VIDA DIÁRIA --------------------------------------------- 
--------------------------------------------- AVD Instrumental --------------------------------------------- 
 
if (NEW.IE_SAUDE_COMPRAS = 'S') then 
	qt_pontuacao_w := qt_pontuacao_w + 4;
elsif (NEW.IE_SAUDE_CONTAS = 'S') then 
	qt_pontuacao_w := qt_pontuacao_w + 4;
elsif (NEW.IE_SAUDE_TRABALHO = 'S') then 
	qt_pontuacao_w := qt_pontuacao_w + 4;
end if;
 
--------------------------------------------- AVD Básica --------------------------------------------- 
 
if (NEW.IE_SAUDE_BANHO = 'S') then 
	qt_pontuacao_w := qt_pontuacao_w + 6;
end if;
 
--------------------------------------------- COGNIÇÃO --------------------------------------------- 
 
if (NEW.IE_ESQUECIDO = 'S') then 
	qt_pontuacao_w := qt_pontuacao_w + 1;
end if;
 
if (NEW.IE_PIORA_ESQ = 'S') then 
	qt_pontuacao_w := qt_pontuacao_w + 1;
end if;
 
if (NEW.IE_ATIVIDADE_ESQ = 'S') then 
	qt_pontuacao_w := qt_pontuacao_w + 2;
end if;
 
--------------------------------------------- HUMOR --------------------------------------------- 
 
if (NEW.IE_DESANIMO = 'S') then 
	qt_pontuacao_w := qt_pontuacao_w + 2;
end if;
 
if (NEW.IE_PERDA_INTERESSE = 'S') then 
	qt_pontuacao_w := qt_pontuacao_w + 2;
end if;
 
--------------------------------------------- MOBILIDADE --------------------------------------------- 
--------------------------------------------- Alcance, preensão e pinça --------------------------------------------- 
 
if (NEW.IE_INCAPAZ_ELEVAR = 'S') then 
	qt_pontuacao_w := qt_pontuacao_w + 1;
end if;
 
if (NEW.IE_INCAPAZ_SEGURAR = 'S') then 
	qt_pontuacao_w := qt_pontuacao_w + 1;
end if;
 
--------------------------------------------- Capacidade aeróbica e / ou muscular --------------------------------------------- 
 
if (NEW.IE_COND_MOBILIDADE = 'S') then 
	qt_pontuacao_w := qt_pontuacao_w + 2;
end if;
 
--------------------------------------------- Marcha --------------------------------------------- 
 
if (NEW.IE_DIFICULDADE = 'S') then 
	qt_pontuacao_w := qt_pontuacao_w + 2;
end if;
 
if (NEW.IE_QUEDA = 'S') then 
	qt_pontuacao_w := qt_pontuacao_w + 2;
end if;
 
--------------------------------------------- Continencia esfincteriana --------------------------------------------- 
 
if (NEW.IE_PERDA_URINA = 'S') then 
	qt_pontuacao_w := qt_pontuacao_w + 2;
end if;
 
--------------------------------------------- COMUNICAÇÃO --------------------------------------------- 
--------------------------------------------- Visão --------------------------------------------- 
 
if (NEW.IE_PROB_VISAO = 'S') then 
	qt_pontuacao_w := qt_pontuacao_w + 2;
end if;
 
--------------------------------------------- Audição --------------------------------------------- 
 
if (NEW.IE_PROB_AUDIT = 'S') then 
	qt_pontuacao_w := qt_pontuacao_w + 2;
end if;
 
--------------------------------------------- COMORBIDADES MULTIPLAS --------------------------------------------- 
 
if (NEW.IE_COND_COMORBIDADE = 'S') then 
	qt_pontuacao_w := qt_pontuacao_w + 4;
end if;
 
NEW.QT_PONTOS := qt_pontuacao_w;
 
 
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_escala_ivc_atual() FROM PUBLIC;

CREATE TRIGGER escala_ivc_atual
	BEFORE INSERT OR UPDATE ON escala_ivc FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_escala_ivc_atual();

