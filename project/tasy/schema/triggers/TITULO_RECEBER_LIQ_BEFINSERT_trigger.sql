-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS titulo_receber_liq_befinsert ON titulo_receber_liq CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_titulo_receber_liq_befinsert() RETURNS trigger AS $BODY$
declare

ie_baixa_lote_contab_w		varchar(2)	:= 'S';
cd_estabelecimento_w		integer;
qt_registro_w			bigint;
nr_lote_contabil_w			bigint;
nr_seq_protocolo_w		bigint;
nr_interno_conta_w			bigint;
cd_empresa_w			smallint;
dt_fechamento_w			timestamp		:= null;
nr_recibo_w			bigint;
ie_tipo_titulo_w			varchar(255);
ie_baixa_tit_conta_w		varchar(255);
cd_convenio_w			integer;
ie_movto_trans_fin_w		bigint;
ie_estorna_baixa_rep_w		varchar(10);
cont_w				bigint;
ie_banco_w			varchar(1);
ie_movto_bco_cobr_escrit_w		varchar(1);
ie_controle_perdas_w		varchar(1);
ie_tipo_consistencia_w		integer;
cd_portador_w			bigint;
ie_baixa_titulo_receber_w		varchar(1);
ds_portador_w			varchar(255);
ie_baixa_tit_encontro_conta_w	varchar(1);
count_w				bigint;
ie_baixa_encontro_contas_w		bigint;
nr_seq_encontro_contas_w		lote_encontro_contas.nr_sequencia%type;
ie_origem_baixa_w			varchar(2)	:= '';
nr_seq_banco_w			movto_trans_financ.nr_seq_banco%type;
nr_seq_caixa_w			movto_trans_financ.nr_seq_caixa%type;
qt_tit_pagar_w			bigint;
cd_tipo_lote_contabil_w		lote_contabil.cd_tipo_lote_contabil%type;
dt_limite_desconto_w		titulo_receber.dt_limite_desconto%type;
ie_processo_camara_w		pls_parametros_camara.ie_processo_camara%type;
nr_titulo_receber_w			pls_titulo_lote_camara.nr_titulo_receber%type;
nr_seq_lote_w				pls_titulo_lote_camara.nr_sequencia%type;
ie_baixa_camara_compensacao_w	bigint;
dt_emissao_w				titulo_receber.dt_emissao%type;
ie_permite_baixa_ant_atual_w		varchar(1);
ie_origem_titulo_w			titulo_receber.ie_origem_titulo%type;


ie_baixa_lote_cr_w				parametro_controle_banc.ie_baixa_lote_cr%type;	
ie_gerar_movto_bco_baixa_w		parametro_contas_receber.ie_gerar_movto_bco_baixa%type;
nr_seq_parametro_cont_w			bigint;
nr_lote_contab_gerado_w			lote_contabil.nr_lote_contabil%type;
nr_seq_classif_lote_w			lote_contabil_parametro.vl_parametro%type;
ds_tipo_lote_w					varchar(255);
dt_referencia_w					timestamp;
nr_seq_classif_w				banco_estabelecimento.nr_seq_classif%type;
dt_pagamento_previsto_w			titulo_receber.dt_pagamento_previsto%type;
nr_seq_mensalidade_w			titulo_receber.nr_seq_mensalidade%type;
ie_indice_correcao_w			pls_mensalidade.ie_indice_correcao%type;
BEGIN
  BEGIN

if (coalesce(wheb_usuario_pck.get_ie_executar_trigger,'S')	= 'S')  then

select	max(ie_tipo_titulo),
	obter_convenio_tit_rec(max(nr_titulo))
into STRICT	ie_tipo_titulo_w,
	cd_convenio_w
from	titulo_receber
where	nr_titulo	= NEW.nr_titulo;

select	max(a.ie_banco)
into STRICT	ie_banco_w
from	transacao_financeira a
where	a.nr_sequencia	= NEW.nr_seq_trans_fin;

select	max(ie_tipo_consistencia)
into STRICT	ie_tipo_consistencia_w
from	tipo_recebimento
where	cd_tipo_recebimento = NEW.cd_tipo_recebimento;

select	max(cd_estabelecimento),
	max(nr_interno_conta),
	max(cd_portador),
	max(dt_limite_desconto),
	max(dt_emissao),
	max(ie_origem_titulo),
	max(dt_pagamento_previsto),
	max(nr_seq_mensalidade)
into STRICT	cd_estabelecimento_w,
	nr_interno_conta_w,
	cd_portador_w,
	dt_limite_desconto_w,
	dt_emissao_w,
	ie_origem_titulo_w,
	dt_pagamento_previsto_w,
	nr_seq_mensalidade_w
from	titulo_receber
where	nr_titulo	= NEW.nr_titulo;

select	max(ie_baixa_lote_contab),
	coalesce(max(ie_baixa_tit_conta), 'S'),
	max(ie_movto_bco_cobr_escrit),
	max(ie_controle_perdas),
	coalesce(max(ie_baixa_tit_encontro_conta),'S'),
	coalesce(max(ie_gerar_movto_bco_baixa),'N')
into STRICT	ie_baixa_lote_contab_w,
	ie_baixa_tit_conta_w,
	ie_movto_bco_cobr_escrit_w,
	ie_controle_perdas_w,
	ie_baixa_tit_encontro_conta_w,
	ie_gerar_movto_bco_baixa_w
from	parametro_contas_receber
where 	cd_estabelecimento	= cd_estabelecimento_w;


if (ie_banco_w <> 'N') and /* ahoffelder - os 393313 - 12/12/2011 - nao consistir se a tf nao entra no banco */

	(ie_tipo_titulo_w <> '9') and /* se o titulo for de desconto em folha, nao entra no movimento bancario porque a empresa responsavel faz a baixa */

	((NEW.nr_seq_cobranca is null) or (ie_movto_bco_cobr_escrit_w <> 'C')) then
	CALL consiste_movto_banco(NEW.nr_seq_conta_banco,NEW.dt_recebimento);
end if;

ie_estorna_baixa_rep_w := obter_param_usuario(801, 128, obter_perfil_ativo, NEW.nm_usuario, cd_estabelecimento_w, ie_estorna_baixa_rep_w);

if (coalesce(ie_estorna_baixa_rep_w, 'S') = 'N') and (coalesce(nr_interno_conta_w, 0) > 0) then

	select	count(*)
	into STRICT	cont_w
	from (
		SELECT	b.nr_sequencia,
			b.vl_original_repasse,
			b.vl_repasse
		from	procedimento_repasse b,
			procedimento_paciente a,
			repasse_terceiro c
		where	a.nr_sequencia		= b.nr_seq_procedimento
		and	a.nr_interno_conta		= nr_interno_conta_w
		and	c.nr_repasse_terceiro	= b.nr_repasse_terceiro
		and	c.ie_status		= 'F'
		and	b.ie_status		in ('A','D')
		) alias6;

	if (NEW.vl_recebido < 0) and (cont_w > 0) then
		/* sem permissao para estornar baixa de titulos com repasse fechado! */


		CALL wheb_mensagem_pck.exibir_mensagem_abort(200845);
	end if;

end if;

if (cd_estabelecimento_w is not null) then

	if (fin_obter_se_mes_aberto(cd_estabelecimento_w, NEW.dt_recebimento,'CR',null,cd_convenio_w,null, NEW.nr_seq_retorno) = 'N') then
		/* nao e possivel baixar o titulo com esta data pois este mes/dia de referencia financeiro ja esta fechado! */


		CALL wheb_mensagem_pck.exibir_mensagem_abort(200846);
	end if;

	/* Projeto Davita  - Nao deixa gerar movimento contabil apos fechamento  da data */


	CALL philips_contabil_pck.valida_se_dia_fechado(OBTER_EMPRESA_ESTAB(cd_estabelecimento_w),NEW.dt_recebimento);
	
	if (ie_baixa_tit_conta_w = 'N')  and (nr_interno_conta_w is not null) then
		select	max(nr_seq_protocolo)
		into STRICT	nr_seq_protocolo_w
		from	conta_paciente
		where	nr_interno_conta	= nr_interno_conta_w;
		if (nr_seq_protocolo_w is null) then
			/* a conta nr_interno_conta_w nao esta em protocolo! verifique os parametros do contas a receber. */


			CALL wheb_mensagem_pck.exibir_mensagem_abort(200847,'NR_INTERNO_CONTA_W=' || nr_interno_conta_w);
		end if;
	end if;

	select	max(cd_empresa)
	into STRICT	cd_empresa_w
	from	estabelecimento
	where	cd_estabelecimento = cd_estabelecimento_w;

	/* ahoffelder - os 325513 - 17/06/2011 - a consistencia ja e feita na movto_trans_financ_insert */


	select	count(*)
	into STRICT	ie_movto_trans_fin_w
	from	v$session
	where	audsid		= (SELECT userenv('sessionid') )
	and	upper(action) 	= 'ATUALIZAR_TRANSACAO_FINANCEIRA';

	if (cd_empresa_w is not null) and (coalesce(ie_movto_trans_fin_w,0) = 0) then

		cd_tipo_lote_contabil_w := 5;
			
		if (NEW.nr_seq_conta_banco is not null) and (ie_banco_w <> 'N') then
			cd_tipo_lote_contabil_w := 18;
		end if;

		if (ie_origem_titulo_w = 3) then
			cd_tipo_lote_contabil_w := 39;
		end if;	
		
		
		if (ie_baixa_lote_contab_w = 'N') then
			
			select	count(*)
			into STRICT	qt_registro_w
			from 	ctb_mes_ref
			where	cd_empresa = cd_empresa_w
			and	substr(ctb_obter_se_mes_fechado(nr_sequencia,cd_estabelecimento_w),1,1) = 'F'
                	and	trunc(dt_referencia,'month') = trunc(NEW.dt_recebimento,'month');

			if (qt_registro_w > 0) then
				/* o mes de referencia na contabilidade para esta data de baixa (:new.dt_recebimento) ja foi fechado! */


				CALL wheb_mensagem_pck.exibir_mensagem_abort(200848,'DT_RECEBIMENTO_W=' || NEW.dt_recebimento);
			end if;

		elsif (ie_baixa_lote_contab_w = 'L') then

			select	coalesce(max(nr_lote_contabil), 0)
			into STRICT	nr_lote_contabil_w
			from 	lote_contabil a
			where	a.cd_estabelecimento 	= cd_estabelecimento_w
			and	trunc(a.dt_referencia,'dd')	= trunc(NEW.dt_recebimento,'dd')
			and	a.cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w /* francisco - os 174526 - 23/10/2009 - faltava restringir tipo do lote contas a receber */

			and (a.nr_lote_contabil = NEW.nr_lote_contabil or coalesce(NEW.nr_lote_contabil,0) = 0)
			and	exists (	SELECT	1
						from	movimento_contabil z
						where	z.nr_lote_contabil	= a.nr_lote_contabil);

			if (nr_lote_contabil_w > 0) then
				/* ja foi gerado lote contabil para esta data de baixa!
				lote contabil: nr_lote_contabil_w
				titulo: :new.nr_titulo
				dt recebimento: to_char(:new.dt_recebimento, 'dd/mm/yyyy') */

				CALL wheb_mensagem_pck.exibir_mensagem_abort(200849,	'NR_LOTE_CONTABIL_W=' || nr_lote_contabil_w ||
										';NR_TITULO_W=' || NEW.nr_titulo ||
										';DT_RECEBIMENTO_W=' || to_char(NEW.dt_recebimento, 'dd/mm/yyyy'));
			end if;
			
		elsif (ie_baixa_lote_contab_w = 'M') then
		
			select	coalesce(max(nr_lote_contabil), 0)
			into STRICT	nr_lote_contabil_w
			from 	lote_contabil a
			where	a.cd_estabelecimento 	= cd_estabelecimento_w
			and	trunc(a.dt_referencia,'dd')	>= trunc(NEW.dt_recebimento,'dd')
			and	trunc(a.dt_referencia,'month')	= trunc(NEW.dt_recebimento,'month')
			and	a.cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w /* francisco - os 174526 - 23/10/2009 - faltava restringir tipo do lote contas a receber */

			and (a.nr_lote_contabil = NEW.nr_lote_contabil or coalesce(NEW.nr_lote_contabil,0) = 0)
			and	exists (	SELECT	1
						from	movimento_contabil z
						where	z.nr_lote_contabil	= a.nr_lote_contabil);

			if (nr_lote_contabil_w > 0) then
				/* ja foi gerado lote contabil para esta data de baixa!
				lote contabil: nr_lote_contabil_w
				titulo: :new.nr_titulo
				dt recebimento: to_char(:new.dt_recebimento, 'dd/mm/yyyy') */

				CALL wheb_mensagem_pck.exibir_mensagem_abort(200849,	'NR_LOTE_CONTABIL_W=' || nr_lote_contabil_w ||
										';NR_TITULO_W=' || NEW.nr_titulo ||
										';DT_RECEBIMENTO_W=' || to_char(NEW.dt_recebimento, 'dd/mm/yyyy'));
			end if;

		elsif (ie_baixa_lote_contab_w = 'F') then

			select	count(*)
			into STRICT	qt_registro_w
			from 	ctb_mes_ref
			where	cd_empresa = cd_empresa_w
                		and	trunc(dt_referencia,'month') = trunc(NEW.dt_recebimento,'month');

			if (qt_registro_w > 0) then
				/* ja existe mes de referencia na contabilidade para esta data de baixa (:new.dt_recebimento). */


				CALL wheb_mensagem_pck.exibir_mensagem_abort(200850,'DT_RECEBIMENTO_W=' || NEW.dt_recebimento);
			end if;

		elsif (ie_baixa_lote_contab_w = 'D') and (NEW.nr_seq_movto_trans_fin is null) and (NEW.nr_seq_caixa_rec is null) then

			select	coalesce(max(nr_lote_contabil), 0)
			into STRICT	nr_lote_contabil_w
			from 	lote_contabil a
			where	a.cd_estabelecimento 	= cd_estabelecimento_w
			and	trunc(a.dt_referencia,'dd')	= trunc(NEW.dt_recebimento,'dd')
			and	a.cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w /* francisco - os 174526 - 23/10/2009 - faltava restringir tipo do lote contas a receber */

			and	exists (	SELECT	1
						from	movimento_contabil z
						where	z.nr_lote_contabil	= a.nr_lote_contabil);

			if (nr_lote_contabil_w > 0) then
				/* ja foi gerado lote contabil para esta data de baixa!
				lote contabil: nr_lote_contabil_w
				titulo: :new.nr_titulo
				dt recebimento: to_char(:new.dt_recebimento, 'dd/mm/yyyy') */

				CALL wheb_mensagem_pck.exibir_mensagem_abort(200849,	'NR_LOTE_CONTABIL_W=' || nr_lote_contabil_w ||
										';NR_TITULO_W=' || NEW.nr_titulo ||
										';DT_RECEBIMENTO_W=' || to_char(NEW.dt_recebimento, 'dd/mm/yyyy'));
			end if;

		end if;

	end if;	
	
	/* 1700588 - Inicio da consistencia de movimento bancario na baixa, que atualmente so faz na movto_trans_financ_insert, e deixa o processo pela metade, o titulo baixado, sem movimentar o banco*/


	/*OS 1705851 - Titulo de OPS mensalidade (origem 3) nao estava consitindo, pois o cd_tipo_lote_contabil eh setado como 39 acima*/


	if (NEW.nr_seq_conta_banco is not null) then
		cd_tipo_lote_contabil_w := 18;
	end if;
	
	if (ie_gerar_movto_bco_baixa_w = 'S') and (NEW.nr_seq_conta_banco is not null) and (cd_tipo_lote_contabil_w = 18) then

		select	max(nr_seq_classif)
		into STRICT	nr_seq_classif_w
		from	banco_estabelecimento
		where	nr_sequencia	= NEW.nr_seq_conta_banco;
	
		select	max(a.ie_baixa_lote_cr)
		into STRICT	ie_baixa_lote_cr_w
		from	parametro_controle_banc a
		where	a.cd_estabelecimento	= cd_estabelecimento_w;
		
		/*Igual faz na movto_trans_financ_insert*/


		nr_seq_parametro_cont_w	:= 2;
		
		if (ie_baixa_lote_cr_w = 'N') then
	
			select	count(*)
			into STRICT	qt_registro_w
			from 	ctb_mes_ref
			where	cd_empresa							= cd_empresa_w
			and		substr(ctb_obter_se_mes_fechado(nr_sequencia,cd_estabelecimento_w),1,1)	= 'F'
			and		trunc(dt_referencia,'month')						= trunc(NEW.dt_recebimento,'month');

			if (qt_registro_w > 0) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(183677,'DT_TRANSACAO_P='||NEW.dt_recebimento);
			end if;
		
		elsif (ie_baixa_lote_cr_w = 'L') then
			select	count(*),
					max(a.nr_lote_contabil),
					substr(ctb_obter_desc_tipo_lote(max(a.cd_tipo_lote_contabil)),1,255),
					max(a.dt_referencia)
			into STRICT	qt_registro_w,
					nr_lote_contab_gerado_w,
					ds_tipo_lote_w,
					dt_referencia_w
			from 	lote_contabil a
			where	a.cd_estabelecimento	= cd_estabelecimento_w
			and		trunc(a.dt_referencia,'dd')		= trunc(NEW.dt_recebimento,'dd')
			and		a.dt_geracao_lote	is not null
			and		a.cd_tipo_lote_contabil			= cd_tipo_lote_contabil_w
			and	exists (
					SELECT	1
					from	movimento_contabil z
					where	z.nr_lote_contabil	= a.nr_lote_contabil
					);

			if (qt_registro_w > 0) then

				select	coalesce(max(vl_parametro),0)
				into STRICT	nr_seq_classif_lote_w
				from	lote_contabil_parametro
				where	nr_lote_contabil	= nr_lote_contab_gerado_w
				and		nr_seq_parametro	= nr_seq_parametro_cont_w;
				
				if (coalesce(nr_seq_classif_lote_w,0) = 0) then

					select 	coalesce(max(a.nr_documento),0)
					into STRICT	nr_seq_classif_lote_w
					from	lote_contabil_param_item a
					where	nr_lote_contabil	= nr_lote_contab_gerado_w
					and		nr_seq_parametro	= nr_seq_parametro_cont_w;
				
				end if;


				if (nr_seq_classif_lote_w = 0) or (nr_seq_classif_lote_w = nr_seq_classif_w) then
					/*Ja foi gerado lote contabil para esta data de baixa.*/


					CALL wheb_mensagem_pck.exibir_mensagem_abort(183678,'NR_LOTE_P='||nr_lote_contab_gerado_w||';ds_tipo_p='||ds_tipo_lote_w||';dt_referencia_p='||dt_referencia_w);
				end if;
			end if;
			
		elsif (ie_baixa_lote_cr_w = 'M') then
		
			select	count(*),
					max(a.nr_lote_contabil),
					substr(ctb_obter_desc_tipo_lote(max(a.cd_tipo_lote_contabil)),1,255),
					max(a.dt_referencia)
			into STRICT	qt_registro_w,
					nr_lote_contab_gerado_w,
					ds_tipo_lote_w,
					dt_referencia_w
			from 	lote_contabil a
			where	a.cd_estabelecimento	= cd_estabelecimento_w
			and		trunc(a.dt_referencia,'dd')		>= trunc(NEW.dt_recebimento,'dd')
			and		trunc(a.dt_referencia,'month')		= trunc(NEW.dt_recebimento,'month')
			and		a.dt_geracao_lote	is not null
			and		a.cd_tipo_lote_contabil			= cd_tipo_lote_contabil_w
			and		exists (
					SELECT	1
					from	movimento_contabil z
					where	z.nr_lote_contabil	= a.nr_lote_contabil
					);

			if (qt_registro_w > 0) then

				select	coalesce(max(vl_parametro),0)
				into STRICT	nr_seq_classif_lote_w
				from	lote_contabil_parametro
				where	nr_lote_contabil	= nr_lote_contab_gerado_w
				and	nr_seq_parametro	= nr_seq_parametro_cont_w;
				
				if (coalesce(nr_seq_classif_lote_w,0) = 0) then

					select 	coalesce(max(a.nr_documento),0)
					into STRICT	nr_seq_classif_lote_w
					from	lote_contabil_param_item a
					where	nr_lote_contabil	= nr_lote_contab_gerado_w
					and		nr_seq_parametro	= nr_seq_parametro_cont_w;
				
				end if;



				if (nr_seq_classif_lote_w = 0) or (nr_seq_classif_lote_w = nr_seq_classif_w) then
					/*Ja foi gerado lote contabil para esta data de baixa.*/


					CALL wheb_mensagem_pck.exibir_mensagem_abort(183678,'NR_LOTE_P='||nr_lote_contab_gerado_w||';ds_tipo_p='||ds_tipo_lote_w||';dt_referencia_p='||dt_referencia_w);
				end if;
			end if;

		elsif (ie_baixa_lote_cr_w = 'F') then

			select	count(*)
			into STRICT	qt_registro_w
			from 	ctb_mes_ref
			where	cd_empresa		= cd_empresa_w
			and		trunc(dt_referencia,'month')	= trunc(NEW.dt_recebimento,'month');

			if (qt_registro_w > 0) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(183679,'DT_TRANSACAO_P=' || NEW.dt_recebimento);
			end if;

		end if;
	
	end if;
	
end if;

if (coalesce(ie_baixa_tit_encontro_conta_w,'S') = 'N') then

	select	count(*)
	into STRICT	ie_baixa_encontro_contas_w
	from	v$session
	where	audsid		= (SELECT userenv('sessionid') )
	and (upper(action) = 'BAIXAR_LOTE_ENCONTRO_CONTAS' or
		upper(action) = 'ESTORNAR_LOTE_ENCONTRO_CONTAS' or
		upper(action) = 'ESTORNAR_PESSOA_ENC_CONTAS' or
		upper(action) = 'BAIXAR_TITULOS_COBRANCA_ESCRIT' or
		upper(action) = 'BAIXAR_ENC_CONTAS_ABATIMENTO');
	
	if (ie_baixa_encontro_contas_w = 0) then --Nao consistir se a baixa for do encontro de contas
		select	max(c.nr_sequencia)
		into STRICT	nr_seq_encontro_contas_w
		from	encontro_contas_item a,
			pessoa_encontro_contas b,
			lote_encontro_contas c
		where	a.nr_titulo_receber	= NEW.nr_titulo
		and	a.nr_seq_pessoa		= b.nr_sequencia
		and	b.nr_seq_lote		= c.nr_sequencia
		and	c.dt_cancelamento	is null;
		
		if (coalesce(nr_seq_encontro_contas_w,0) <> 0) then
			/*Nao e permitido registrar baixa para titulos que estao em Encontro de Contas!
			Lote de encontro de contas: nr_seq_encontro_contas
			Titulo: nr_titulo */

			CALL wheb_mensagem_pck.exibir_mensagem_abort(288363,	'NR_SEQ_ENCONTRO_CONTAS=' || nr_seq_encontro_contas_w ||
									';NR_TITULO=' || NEW.nr_titulo);
		end if;
	end if;
end if;

if (cd_estabelecimento_w is not null) then
	
	/*verificar se o titulo que esta recebendo a baixa esta em um lote de camra de compensacao que nao esta baixado.*/


	select	count(a.nr_titulo_receber),
		max(b.nr_sequencia)
	into STRICT	nr_titulo_receber_w,
		nr_seq_lote_w
	from	pls_titulo_lote_camara a,
		pls_lote_camara_comp b
	where	a.nr_seq_lote_camara	= b.nr_sequencia
	and	a.nr_titulo_receber		= NEW.nr_titulo;	
	
	select	coalesce(max(a.ie_processo_camara),'CO')
	into STRICT	ie_processo_camara_w
	from	pls_parametros_camara a
	where 	cd_estabelecimento = cd_estabelecimento_w;

	if (ie_processo_camara_w = 'CA') and	-- processo camara de compensacao for regime de caixa
		(nr_titulo_receber_w > 0) and		-- titulo estiver na camara
		(coalesce(NEW.vl_glosa,0) = 0) then 	-- nao ter valor de glosa
		
		/*verifica se a rotina que esta efetuando a baixa e a rotina que baixa pela camara. Se nao for, deve consistir.*/


		select	count(*)
		into STRICT	ie_baixa_camara_compensacao_w
		from	v$session
		where	audsid			= (SELECT userenv('sessionid') )
		and (upper(action) 	= 'PLS_BAIXAR_LOTE_CAMARA_COMP' or
				 upper(action)  = 'PLS_ESTORNAR_LOTE_CAMARA_COMP');
			
		if (ie_baixa_camara_compensacao_w = 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(335779,	'NR_SEQ_LOTE_W=' || nr_seq_lote_w ||';NR_TITULO_W=' || NEW.nr_titulo);
		end if;
	end if;
end if;


if (NEW.nr_seq_caixa_rec is not null) then
	select	max(dt_fechamento),
		max(nr_recibo)
	into STRICT	dt_fechamento_w,
		nr_recibo_w
	from	caixa_receb
	where	nr_sequencia	= NEW.nr_seq_caixa_rec;

	if (dt_fechamento_w is not null) then
		/* nao e possivel inserir um novo titulo!
		o recibo nr_recibo_w ja foi fechado! */

		CALL wheb_mensagem_pck.exibir_mensagem_abort(200851,'NR_RECIBO_W=' || nr_recibo_w);
	end if;
end if;

/* tratar lotes contabeis - performance */


if (NEW.nr_lote_contab_pro_rata is null) then
	NEW.nr_lote_contab_pro_rata	:= 0;
end if;

if (NEW.nr_lote_contab_antecip is null) then
	NEW.nr_lote_contab_antecip	:= 0;
end if;

if (NEW.nr_lote_contabil is null) then
	NEW.nr_lote_contabil	:= 0;
end if;

if (ie_controle_perdas_w = 'S') and (ie_tipo_consistencia_w = 9) and (obter_funcao_ativa = 801) and (NEW.ie_tipo_perda is null) and (NEW.nr_seq_liq_origem is null) then
	/*as baixas por perdas devem ser efetuadas na pasta geracao de baixas por perdas.*/


	CALL wheb_mensagem_pck.exibir_mensagem_abort(217429);
end if;

select	max(ds_portador),
	coalesce(max(ie_baixa_titulo_receber),'S')
into STRICT	ds_portador_w,
	ie_baixa_titulo_receber_w
from	portador
where	cd_portador = cd_portador_w;

if (ie_baixa_titulo_receber_w = 'N') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(226887, 	'NR_TITULO=' || NEW.nr_titulo || ';' ||
							'DS_PORTADOR=' || ds_portador_w);
end if;

/* Controle Bancario e Tesouraria */


select	max(a.nr_seq_banco),
	max(a.nr_seq_caixa)
into STRICT 	nr_seq_banco_w,
	nr_seq_caixa_w
from 	movto_trans_financ a
where 	a.nr_sequencia	= NEW.nr_seq_movto_trans_fin;

/* abatimento */


select	count(*)
into STRICT	qt_tit_pagar_w
from	titulo_pagar_baixa a
where	a.nr_seq_baixa_rec	= NEW.nr_sequencia
and	a.nr_tit_receber	= NEW.nr_titulo;

if (NEW.nr_seq_liq_origem is not null) then
	ie_origem_baixa_w	:= 'ET';
elsif (coalesce(qt_tit_pagar_w,0)	> 0) then
	ie_origem_baixa_w	:= 'AB';
elsif (NEW.nr_bordero is not null) then
	ie_origem_baixa_w	:= 'BR';
elsif (NEW.nr_seq_movto_trans_fin is not null) and (nr_seq_banco_w is not null) then
	ie_origem_baixa_w	:= 'CB';
elsif (NEW.nr_seq_cobranca is not null) then
	ie_origem_baixa_w	:= 'CE';
elsif (NEW.nr_seq_retorno is not null) then
	ie_origem_baixa_w	:= 'CR';
elsif (NEW.nr_adiantamento is not null) then	
	ie_origem_baixa_w	:= 'DA';
elsif (NEW.nr_seq_deposito_ident is not null) then
	ie_origem_baixa_w	:= 'DI';
elsif (NEW.nr_seq_lote_hist_guia is not null) then
	ie_origem_baixa_w	:= 'GR';
elsif (NEW.nr_seq_negociacao_cr is not null) then
	ie_origem_baixa_w	:= 'NR';
elsif (NEW.nr_seq_caixa_rec is not null) then
	ie_origem_baixa_w	:= 'RC';
elsif (NEW.nr_repasse_terceiro is not null) then
	ie_origem_baixa_w	:= 'RT';
elsif (NEW.nr_seq_lote_enc_contas is not null) then
	ie_origem_baixa_w	:= 'EC';
elsif (NEW.nr_seq_movto_trans_fin is not null) and (nr_seq_caixa_w is not null) then
	ie_origem_baixa_w	:= 'TS';
else
	ie_origem_baixa_w	:= 'MR';
end if;	

if (ie_origem_baixa_w is not null) then
	NEW.ie_origem_baixa	:= ie_origem_baixa_w;
end if;

if (dt_emissao_w is not null) and (NEW.dt_recebimento is not null) then
																								/*apenas se nao for baixa de estorno*/


	if ( to_date(to_char(NEW.dt_recebimento,'dd/mm/yyyy'),'dd/mm/yyyy') < to_date(to_char(dt_emissao_w,'dd/mm/yyyy'),'dd/mm/yyyy')) and (NEW.nr_seq_liq_origem is null)  then
		/*A data de recebimento nao pode ser menor do que a data de emissao do titulo!*/


		CALL wheb_mensagem_pck.exibir_mensagem_abort(337608, 'DT_RECEBIMENTO_W=' || NEW.dt_recebimento || ';' ||
															'DT_EMISSAO_W=' || dt_emissao_w || ';' ||
															'NR_TITULO_W=' || NEW.nr_titulo );
	end if;

end if;

ie_permite_baixa_ant_atual_w := obter_param_usuario(801, 203, obter_perfil_ativo, NEW.nm_usuario, cd_estabelecimento_w, ie_permite_baixa_ant_atual_w);

if ( coalesce(ie_permite_baixa_ant_atual_w,'S') = 'N') then

	if ( trunc(NEW.dt_recebimento) < trunc(LOCALTIMESTAMP) ) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(352082);
	end if;

end if;

/*OS 1811433 - Calcular indice de correcao monetaria*/


BEGIN
NEW.vl_correcao_monetaria := 0;
if (nr_seq_mensalidade_w is not null) then

	select	max(ie_indice_correcao)
	into STRICT	ie_indice_correcao_w
	from	pls_mensalidade
	where	nr_sequencia = nr_seq_mensalidade_w;
	
	if (ie_indice_correcao_w is not null) then

		NEW.vl_correcao_monetaria := coalesce(obter_valor_correcao_monet( ie_indice_correcao_w,
																  NEW.vl_recebido,
																  dt_pagamento_previsto_w,
																  NEW.dt_recebimento),0);
	end if;
									
end if;
exception when others then
	NEW.vl_correcao_monetaria := 0;
end;
/*OS 1811433  FIM*/



NEW.DS_STACK := substr('CallStack Insert: ' || substr(dbms_utility.format_call_stack,1,3980),1,4000);

end if;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_titulo_receber_liq_befinsert() FROM PUBLIC;

CREATE TRIGGER titulo_receber_liq_befinsert
	BEFORE INSERT ON titulo_receber_liq FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_titulo_receber_liq_befinsert();

