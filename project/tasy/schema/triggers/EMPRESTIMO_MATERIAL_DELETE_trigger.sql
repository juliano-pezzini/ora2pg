-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS emprestimo_material_delete ON emprestimo_material CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_emprestimo_material_delete() RETURNS trigger AS $BODY$
declare

ie_erro_w			varchar(255);
ie_tipo_w			varchar(1);
ie_acao_w			varchar(1);
cd_estabelecimento_w		integer;
ie_estoque_lote_w		varchar(1);
dt_mesano_referencia_w		timestamp;
cd_local_estoque_w		integer;
qt_movimentos_lote_w		bigint;
ie_disp_emprestimo_lib_w	parametro_estoque.ie_disp_emprestimo_lib%type;

pragma autonomous_transaction;

BEGIN
select	cd_estabelecimento,
	ie_tipo
into STRICT	cd_estabelecimento_w,
	ie_tipo_w
from	emprestimo
where	nr_emprestimo		= OLD.nr_emprestimo;

select	substr(obter_se_material_estoque_lote(cd_estabelecimento_w, OLD.cd_material),1,1)
into STRICT	ie_estoque_lote_w
;

select	max(ie_disp_emprestimo_lib)
into STRICT	ie_disp_emprestimo_lib_w
from	parametro_estoque
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

if (coalesce(OLD.ie_atualiza_estoque,'X') = 'S') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(450415);
end if;

if (ie_estoque_lote_w = 'S') and (OLD.nr_seq_lote is not null) and (OLD.ds_lote_fornec is not null) then
	BEGIN
	select	count(*)
	into STRICT	qt_movimentos_lote_w
	from	movimento_estoque
	where	nr_seq_lote_fornec = OLD.nr_seq_lote;

	if (ie_tipo_w = 'E') and (qt_movimentos_lote_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(252985);
	end if;

	if (OLD.dt_validade_material is not null) and (ie_disp_emprestimo_lib_w <> 'S') then
		BEGIN
		select	cd_local_estoque,
			trunc(LOCALTIMESTAMP,'month')
		into STRICT	cd_local_estoque_w,
			dt_mesano_referencia_w
		from	emprestimo
		where	nr_emprestimo		= OLD.nr_emprestimo;

		ie_acao_w	:= '2';
		if (ie_tipo_w = 'S') then
			ie_acao_w	:= '1';
		end if;

		ie_erro_w := atualizar_saldo_lote(
				cd_estabelecimento_w, cd_local_estoque_w, OLD.cd_material, dt_mesano_referencia_w, OLD.nr_seq_lote, 0, OLD.qt_emprestimo, ie_acao_w, OLD.nm_usuario, ie_erro_w);

		end;
	end if;
	end;
end if;
commit;
RETURN OLD;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_emprestimo_material_delete() FROM PUBLIC;

CREATE TRIGGER emprestimo_material_delete
	BEFORE DELETE ON emprestimo_material FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_emprestimo_material_delete();

