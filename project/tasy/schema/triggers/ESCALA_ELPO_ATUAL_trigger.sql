-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS escala_elpo_atual ON escala_elpo CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_escala_elpo_atual() RETURNS trigger AS $BODY$
declare
qt_reg_w	     smallint;
sql_w            varchar(200);
qt_pontuacao_w   smallint;
ds_erro_w      varchar(4000);
ds_parametro_w varchar(4000);
BEGIN
  BEGIN

 if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	  goto Final;
  end if;

--- Inicio MD 1
  BEGIN
  sql_w := 'CALL OBTER_SCORE_ESCALA_ELPO_MD(:1, :2, :3, :4, :5, :6, :7) INTO :qt_pontuacao_w';

  
  EXECUTE sql_w USING IN NEW.IE_TIPO_POS_CIR, IN NEW.IE_TEMPO_CIR, IN NEW.IE_TIPO_ANESTESIA,
                                IN NEW.IE_SUP_SUPORTE, IN NEW.IE_POS_MEMBROS, IN NEW.IE_COMORBIDADES, IN NEW.IE_FAIXA_IDADE, 
                                OUT qt_pontuacao_w;
  EXCEPTION
  WHEN OTHERS THEN
    qt_pontuacao_w := NULL;
    ds_erro_w := sqlerrm;
    ds_parametro_w := ':new.nr_atendimento: ' || NEW.nr_atendimento || ' - :new.ie_situacao: ' || NEW.ie_situacao || ' - :new.cd_profissional: ' || NEW.cd_profissional;
    ds_parametro_w := ds_parametro_w || ' - :new.IE_TIPO_POS_CIR: ' || NEW.IE_TIPO_POS_CIR || ' - :new.IE_TIPO_POS_CIR: ' || NEW.IE_TIPO_POS_CIR || ' - :new.IE_TIPO_ANESTESIA: ' || NEW.IE_TIPO_ANESTESIA;
    ds_parametro_w := ds_parametro_w || ' - :new.IE_SUP_SUPORTE: ' || NEW.IE_SUP_SUPORTE || ' - :new.IE_POS_MEMBROS: ' || NEW.IE_POS_MEMBROS || ' - :new.IE_COMORBIDADES: ' || NEW.IE_COMORBIDADES || ' - :new.IE_FAIXA_IDADE: ' || NEW.IE_FAIXA_IDADE;
    ds_parametro_w := ds_parametro_w || ' - qt_pontuacao_w: ' || qt_pontuacao_w;
    CALL gravar_log_medical_device('ESCALA_ELPO_ATUAL', 'OBTER_SCORE_ESCALA_ELPO_MD', ds_parametro_w, ds_erro_w, wheb_usuario_pck.get_nm_usuario, 'N');
  END;
  NEW.qt_pontuacao	:= qt_pontuacao_w;

--- Fim MD 1
<<Final>>
qt_reg_w := 0;
  END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_escala_elpo_atual() FROM PUBLIC;

CREATE TRIGGER escala_elpo_atual
	BEFORE INSERT OR UPDATE ON escala_elpo FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_escala_elpo_atual();

