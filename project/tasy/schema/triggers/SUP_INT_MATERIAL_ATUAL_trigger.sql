-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS sup_int_material_atual ON sup_int_material CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_sup_int_material_atual() RETURNS trigger AS $BODY$
declare
qt_existe_erros_w		bigint;
cd_material_w		integer;
qt_existe_w		bigint := 0;
cd_grupo_material_w	smallint;
BEGIN
  BEGIN 
if (NEW.cd_classe_material is not null) then 
	BEGIN 
	select	coalesce(max(a.cd_grupo_material),0) 
	into STRICT	cd_grupo_material_w 
	from	grupo_material a, 
		subgrupo_material b, 
		classe_material c 
	where	a.cd_grupo_material = b.cd_grupo_material 
	and	b.cd_subgrupo_material = c.cd_subgrupo_material 
	and	c.cd_classe_material = NEW.cd_classe_material;
	 
	if (cd_grupo_material_w > 0) then 
		select	count(*) 
		into STRICT	qt_existe_w 
		from	sup_parametro_integracao a, 
			sup_int_regra_material b 
		where	a.nr_sequencia = b.nr_seq_integracao 
		and	a.ie_evento = 'CM' 
		and	a.ie_forma = 'R' 
		and	a.ie_situacao = 'A' 
		and	b.ie_situacao = 'A' 
		and	b.cd_grupo_material = cd_grupo_material_w;
		 
		 
	end if;
	end;
elsif (TG_OP = 'UPDATE') then 
	BEGIN 
	select	coalesce(max(cd_material),0) 
	into STRICT	cd_material_w 
	from	material 
	where	substr(obter_dados_material_estab(cd_material, NEW.cd_estabelecimento,'CSA'),1,20) = NEW.cd_material;
	 
	if (cd_material_w > 0) then 
		qt_existe_w	:=	1;
	end if;
	 
	cd_material_w	:=	null;
	end;
end if;
 
if (TG_OP = 'UPDATE') and (coalesce(OLD.cd_sistema_ant,'X') = 'X') and (coalesce(NEW.cd_sistema_ant,'X') <> 'X') and (NEW.ie_forma_integracao = 'E') then 
	BEGIN 
	update	material 
	set	cd_sistema_ant = NEW.cd_sistema_ant, 
		nm_usuario = 'INTEGR_TASY', 
		dt_atualizacao = LOCALTIMESTAMP 
	where	cd_material = NEW.cd_material 
	and	coalesce(cd_sistema_ant,'X') = 'X';	
	end;
elsif (qt_existe_w > 0) and (NEW.dt_liberacao is not null) and (NEW.dt_confirma_integracao is null) and (NEW.ie_forma_integracao = 'R') then 
 
	NEW.dt_leitura	:= LOCALTIMESTAMP;
 
	CALL consiste_sup_int_material( 
			NEW.nr_sequencia, 
			NEW.cd_material_generico, 
			NEW.cd_material_estoque, 
			NEW.cd_material_conta, 
			NEW.cd_classe_material, 
			NEW.cd_unidade_medida_compra, 
			NEW.cd_unidade_medida_estoque, 
			NEW.cd_unidade_medida_consumo, 
			NEW.cd_unidade_medida_solic, 
			NEW.nr_seq_localizacao, 
			NEW.nr_seq_familia, 
			NEW.ie_via_aplicacao, 
			NEW.ie_tipo_material, 
			NEW.cd_estabelecimento);
 
	select	count(*) 
	into STRICT	qt_existe_erros_w 
	from	sup_int_material_consist 
	where	nr_sequencia = NEW.nr_sequencia;
 
	if (qt_existe_erros_w = 0) then 
		BEGIN 
		 
		 
		cd_material_w := gerar_material_integracao( 
			NEW.cd_material, 'INTEGR_TASY', NEW.cd_estabelecimento, NEW.cd_classe_material, NEW.cd_material_conta, NEW.cd_material_estoque, NEW.cd_material_generico, NEW.cd_sistema_ant, NEW.cd_unidade_medida_compra, NEW.cd_unidade_medida_consumo, NEW.cd_unidade_medida_estoque, NEW.cd_unidade_medida_solic, NEW.ds_material, NEW.ds_reduzida, NEW.ie_baixa_estoq_pac, NEW.ie_cobra_paciente, NEW.ie_consignado, NEW.ie_disponivel_mercado, NEW.ie_inf_ultima_compra, NEW.ie_prescricao, NEW.ie_preco_compra, NEW.ie_tipo_material, NEW.ie_padronizado, NEW.ie_situacao, NEW.ie_obrig_via_aplicacao, NEW.ie_receita, NEW.ie_material_estoque, NEW.ie_via_aplicacao, NEW.qt_conv_compra_estoque, NEW.qt_conv_estoque_consumo, NEW.qt_minimo_multiplo_solic, NEW.qt_dia_estoque_minimo, NEW.qt_dias_validade, NEW.qt_dia_interv_ressup, NEW.qt_dia_ressup_forn, NEW.nr_seq_localizacao, NEW.nr_seq_familia, NEW.cd_fabricante, NEW.nr_doc_externo, NEW.ie_catalogo, NEW.ie_curva_xyz, NEW.cd_ncm, cd_material_w);
		exception 
		when others then 
			BEGIN 
			cd_material_w	:=	null;
			CALL grava_sup_int_material_consist(NEW.nr_sequencia,substr(sqlerrm,1,255));
			end;
		end;
 
		if (cd_material_w is not null) then 
			BEGIN 
			 
			if (NEW.ds_espec_tecnica is not null) then 
		 
				insert into material_espec_tecnica( 
					nr_sequencia, 
					cd_material, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					ds_espec_tecnica) 
				values (	nextval('material_espec_tecnica_seq'), 
					cd_material_w, 
					LOCALTIMESTAMP, 
					NEW.nm_usuario, 
					LOCALTIMESTAMP, 
					NEW.nm_usuario, 
					NEW.ds_espec_tecnica);
				 
			end if;
			 
			 
			NEW.dt_confirma_integracao	:= LOCALTIMESTAMP;
			NEW.cd_sistema_ant	:= cd_material_w;
			end;
		end if;
	end if;
end if;
 
  END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_sup_int_material_atual() FROM PUBLIC;

CREATE TRIGGER sup_int_material_atual
	BEFORE INSERT OR UPDATE ON sup_int_material FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_sup_int_material_atual();

