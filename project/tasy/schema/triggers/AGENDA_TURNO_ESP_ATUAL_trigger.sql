-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS agenda_turno_esp_atual ON agenda_turno_esp CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_agenda_turno_esp_atual() RETURNS trigger AS $BODY$
DECLARE
dt_atualizacao 	timestamp	:= LOCALTIMESTAMP;
ie_manter_livres_w	varchar(3);
BEGIN
  BEGIN
BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then

if (NEW.ie_horario_adicional is null) then
	NEW.ie_horario_adicional	:= 'N';
end if;

select	coalesce(max(ie_forma_excluir_consulta),'N')
into STRICT	ie_manter_livres_w
from	parametro_agenda;

if (ie_manter_livres_w	= 'N') then
	delete	from agenda_consulta
	where	dt_agenda between NEW.hr_inicial and NEW.hr_final
	and	ie_status_agenda = 'L'
	and	cd_agenda	 = NEW.cd_agenda;
end if;

if (NEW.dt_Agenda_fim is not null) then
	delete	from agenda_controle_horario
	where	dt_agenda >= trunc(LOCALTIMESTAMP)
	and	dt_agenda between trunc(NEW.dt_Agenda) and trunc(NEW.dt_Agenda_fim) + 86399 / 86400
	and	cd_agenda	 = NEW.cd_agenda;
	
	if (OLD.dt_agenda_fim is not null) then
			delete from agenda_controle_horario
			where dt_agenda >= trunc(LOCALTIMESTAMP)
			and	dt_agenda between trunc(OLD.dt_agenda) and trunc(OLD.dt_agenda_fim) + 86399 / 86400
			and	cd_agenda = OLD.cd_agenda;
	end if;
	
else
	delete	from agenda_controle_horario
	where	dt_agenda >= trunc(LOCALTIMESTAMP)
	and	dt_agenda >= trunc(NEW.dt_Agenda)
	and	cd_agenda	 = NEW.cd_agenda;
	
	if (OLD.dt_agenda is not null) then
			delete from agenda_controle_horario
			where dt_agenda >= trunc(LOCALTIMESTAMP)
			and	dt_agenda >= trunc(OLD.dt_agenda)
			and	cd_agenda = OLD.cd_agenda;
	end if;
	
end if;
end if;

exception
	when others then
      	dt_atualizacao := LOCALTIMESTAMP;
end;
  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_agenda_turno_esp_atual() FROM PUBLIC;

CREATE TRIGGER agenda_turno_esp_atual
	BEFORE INSERT OR UPDATE ON agenda_turno_esp FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_agenda_turno_esp_atual();

