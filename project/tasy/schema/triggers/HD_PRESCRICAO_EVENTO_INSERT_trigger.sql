-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS hd_prescricao_evento_insert ON hd_prescricao_evento CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_hd_prescricao_evento_insert() RETURNS trigger AS $BODY$
DECLARE

cd_setor_atendimento_w		bigint;
nr_seq_atend_w			bigint;
nr_seq_tipo_w			bigint;
cd_perfil_w			integer;
ie_todas_gp_w			varchar(2);
dt_medicao_w			timestamp;
nr_atendimento_w			bigint;

c01 CURSOR FOR
SELECT	nr_seq_tipo
from	prescr_sol_perda_ganho
where	ie_evento		= CASE WHEN NEW.ie_evento='IT' THEN  45  ELSE CASE WHEN NEW.ie_evento='DT' THEN  46  ELSE 0 END  END
and	coalesce(ie_tipo_solucao,1)	= obter_tipo_dialise(NEW.nr_prescricao, NEW.nr_seq_solucao)
and	coalesce(ie_gerar_evento_solucao,'S') = 'S'
and	((cd_material is null) or (cd_material in (	SELECT	a.cd_material
					from	prescr_material a
					where	a.nr_sequencia_solucao	= NEW.nr_seq_solucao
					and	a.nr_prescricao		= NEW.nr_prescricao)))
and	((cd_setor_Atendimento is null) or (cd_setor_Atendimento	= cd_setor_atendimento_w))
and	((cd_perfil is null) or (cd_perfil = cd_perfil_w));

BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then

if (NEW.qt_volume is not null or NEW.qt_vol_drenagem is not null) then

	ie_todas_gp_w := Obter_Param_Usuario(1113, 403, obter_perfil_ativo, NEW.nm_usuario, 0, ie_todas_gp_w);

	select	max(cd_setor_atendimento),
		max(cd_perfil_ativo),
		max(nr_atendimento)
	into STRICT	cd_setor_atendimento_w,
		cd_perfil_w,
		nr_atendimento_w
	from	prescr_medica
	where	nr_prescricao	= NEW.nr_prescricao;

	dt_medicao_w := NEW.dt_evento;

	if (ie_todas_gp_w = 'N') then
	
		select	max(nr_seq_tipo)
		into STRICT	nr_seq_tipo_w
		from	prescr_sol_perda_ganho
		where	ie_evento		= CASE WHEN NEW.ie_evento='IT' THEN  45  ELSE CASE WHEN NEW.ie_evento='DT' THEN  46  ELSE 0 END  END
		and	coalesce(ie_tipo_solucao,1)	= obter_tipo_dialise(NEW.nr_prescricao, NEW.nr_seq_solucao)
		and	coalesce(ie_gerar_evento_solucao,'S') = 'S'
		and	((cd_material is null) or (cd_material in (	SELECT	a.cd_material
							from	prescr_material a
							where	a.nr_sequencia_solucao	= NEW.nr_seq_solucao
							and	a.nr_prescricao		= NEW.nr_prescricao)))
		and	((cd_setor_Atendimento is null) or (cd_setor_Atendimento	= cd_setor_atendimento_w))
		and	((cd_perfil is null) or (cd_perfil = cd_perfil_w));
		
		if (nr_seq_tipo_w is not null) then
		
			select	nextval('atendimento_perda_ganho_seq')
			into STRICT	nr_seq_atend_w
			;
			
			insert into atendimento_perda_ganho(nr_sequencia,
				nr_atendimento,
				dt_atualizacao,
				nm_usuario,
				nr_seq_tipo,
				qt_volume,
				dt_medida,
				cd_setor_atendimento,
				ie_origem,
				dt_referencia,
				cd_profissional,
				ie_situacao,
				dt_liberacao,
				dt_apap,
				qt_ocorrencia,
				nr_seq_evento_hd)
			values (nr_seq_atend_w,
				nr_atendimento_w,
				LOCALTIMESTAMP,
				NEW.nm_usuario,
				nr_seq_tipo_w,
				CASE WHEN NEW.ie_evento='DT' THEN  NEW.qt_vol_drenagem  ELSE NEW.qt_volume END ,				
				coalesce(dt_medicao_w,LOCALTIMESTAMP),
				cd_setor_atendimento_w,
				'S',
				LOCALTIMESTAMP,
				NEW.cd_pessoa_evento,
				'A',
				LOCALTIMESTAMP,
				coalesce(dt_medicao_w,LOCALTIMESTAMP),
				1,
				NEW.nr_sequencia);
		end if;
	else
		
		open C01;
		loop
		fetch C01 into	
			nr_seq_tipo_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			
			select	nextval('atendimento_perda_ganho_seq')
			into STRICT	nr_seq_atend_w
			;
			
			insert into atendimento_perda_ganho(nr_sequencia,
				nr_atendimento,
				dt_atualizacao,
				nm_usuario,
				nr_seq_tipo,
				qt_volume,
				dt_medida,
				cd_setor_atendimento,
				ie_origem,
				dt_referencia,
				cd_profissional,
				ie_situacao,
				dt_liberacao,
				dt_apap,
				qt_ocorrencia,
				nr_seq_evento_hd)
			values (nr_seq_atend_w,
				nr_atendimento_w,
				LOCALTIMESTAMP,
				NEW.nm_usuario,
				nr_seq_tipo_w,
				CASE WHEN NEW.ie_evento='DT' THEN  NEW.qt_vol_drenagem  ELSE NEW.qt_volume END ,				
				coalesce(dt_medicao_w,LOCALTIMESTAMP),
				cd_setor_atendimento_w,
				'S',
				LOCALTIMESTAMP,
				NEW.cd_pessoa_evento,
				'A',
				LOCALTIMESTAMP,
				coalesce(dt_medicao_w,LOCALTIMESTAMP),
				1,
				NEW.nr_sequencia);
		end loop;
		close C01;
	end if;
	
end if;
end if;

RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_hd_prescricao_evento_insert() FROM PUBLIC;

CREATE TRIGGER hd_prescricao_evento_insert
	AFTER INSERT ON hd_prescricao_evento FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_hd_prescricao_evento_insert();

