-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pessoa_fisica_insert ON pessoa_fisica CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pessoa_fisica_insert() RETURNS trigger AS $BODY$
declare

  nr_identidade_w           varchar(20);
  nr_cartao_nac_sus_w       varchar(20);
  ie_permite_pontuacao_rg_w varchar(1);
  ds_given_name_w           person_name.ds_given_name%type;
  ds_component_name_1_w     person_name.ds_component_name_1%type;
  ds_family_name_w          person_name.ds_family_name%type;
  cd_pessoa_fisica_w        varchar(10);
  nm_pessoa_montar_w        pessoa_fisica.nm_pessoa_fisica%type;
  NR_PARAM_277_W            bigint;

  ds_nls_territory_w		    varchar(64);
  ds_hash_new_w             pessoa_fisica_exc.ds_hash%type;
  ds_hash_exc_w             pessoa_fisica_exc.ds_hash%type;
  nr_seq_hash_exc_w         pessoa_fisica_exc.nr_sequencia%type;
  ds_text_w                 varchar(500);
BEGIN
  BEGIN

/* Esta deve ser sempre a primeira rotina da trigger */


if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
if (NEW.nm_primeiro_nome is not null) or (NEW.nr_seq_person_name is not null) then
	if (NEW.nr_seq_person_name is not null) then
		BEGIN
		select 	max(ds_given_name),
				max(ds_component_name_1),
				max(ds_family_name)
		into STRICT	ds_given_name_w,
				ds_component_name_1_w,
				ds_family_name_w
		from	person_name
		where	nr_sequencia = NEW.nr_seq_person_name
		and		ds_type	= 'main';
		
		NEW.nm_primeiro_nome := coalesce(ds_given_name_w,NEW.nm_primeiro_nome);
		NEW.nm_sobrenome_pai := coalesce(ds_family_name_w,NEW.nm_sobrenome_pai);
		NEW.nm_sobrenome_mae := coalesce(ds_component_name_1_w,NEW.nm_sobrenome_mae);
		end;
	end if;

  if (philips_param_pck.get_cd_pais() = 3) then
    nm_pessoa_montar_w := substr(montar_nm_pessoa_fisica(null,null,null,null, NEW.nm_usuario, NEW.nr_seq_person_name),1,60);
  else
    nm_pessoa_montar_w := substr(montar_nm_pessoa_fisica(null,NEW.nm_primeiro_nome,NEW.nm_sobrenome_pai,NEW.nm_sobrenome_mae, NEW.nm_usuario, NEW.nr_seq_person_name),1,60);
  end if;

  if (trim(both nm_pessoa_montar_w) is  not null) then
    NEW.nm_pessoa_fisica	:= nm_pessoa_montar_w;
  end if;
end if;

ie_permite_pontuacao_rg_w	:= coalesce(Obter_Valor_Param_Usuario(0, 184, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento), 'N');
  NR_PARAM_277_W := coalesce(OBTER_SOMENTE_NUMERO(OBTER_VALOR_PARAM_USUARIO(5, 277, OBTER_PERFIL_ATIVO, NEW.NM_USUARIO, NEW.CD_ESTABELECIMENTO)), 0);
-- Edgar 14/01/2005, OS 14182, fiz a trigger


NEW.nm_pessoa_fisica		:= trim(both NEW.nm_pessoa_fisica);
while(position('  ' in NEW.nm_pessoa_fisica) > 0) loop
	NEW.nm_pessoa_fisica	:= replace(NEW.nm_pessoa_fisica, '  ', ' ');
end loop;

  IF (NR_PARAM_277_W > 0
  AND LENGTH(NEW.NM_PESSOA_FISICA) < NR_PARAM_277_W) THEN
    CALL WHEB_MENSAGEM_PCK.EXIBIR_MENSAGEM_ABORT(1112273);
  END IF;

nr_identidade_w		:= '';

if (coalesce(ie_permite_pontuacao_rg_w,'N') = 'N') then
	if (NEW.NR_IDENTIDADE is not null) then /* Elemar inclui o if por que dava erro */

		NEW.NR_IDENTIDADE	:= upper(NEW.NR_IDENTIDADE);
		for	i in 1..length(NEW.NR_IDENTIDADE) loop		-- validar identidade, somente letras e numeros
			if (position(substr(NEW.NR_IDENTIDADE, i, 1) in '0123456789ABCDEFGHIJKLMNOPQRSTUVXWYV') > 0) then
				nr_identidade_w		:= nr_identidade_w || substr(NEW.NR_IDENTIDADE, i, 1);
			end if;
		
		end loop;
		NEW.NR_IDENTIDADE	:= nr_identidade_w;
	end if;
end if;

/* Marcus em 04/12/06 OS445904 */


if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'pt_BR') then
	if (NEW.ds_senha is null) then
		select	obter_senha_pf(NEW.dt_nascimento)
		into STRICT	NEW.ds_senha
		;
	end if;
elsif (NEW.ds_senha is not null) then
	NEW.ds_senha := null;
end if;

/* Coelho em 02/01/07 	OS45273 */


if ( (NEW.nm_pessoa_fisica	<> OLD.nm_pessoa_fisica) or (OLD.ds_fonetica is null )) then
	NEW.ds_fonetica := gera_fonetica(NEW.nm_pessoa_fisica,'N');
end if;

/* Fernando 02/08/07 */


if (NEW.dt_nascimento > LOCALTIMESTAMP) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(194547);
	/*Data de nascimento invalida!*/


end	if;

if (NEW.dt_nascimento is not null) then
	NEW.dt_nascimento	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(NEW.dt_nascimento);
end if;

/* Oraci em 26/12/2007 OS77737 */


if (NEW.nm_pessoa_fisica_sem_acento is null) or (NEW.nm_pessoa_fisica <> OLD.nm_pessoa_fisica) or (NEW.nm_social <> OLD.nm_social) then
  BEGIN
       if (obter_se_nome_social <> 'N') then
		   NEW.nm_pessoa_fisica_sem_acento	:= coalesce(elimina_acentuacao(NEW.nm_social), elimina_acentuacao(NEW.nm_pessoa_fisica));
       else
           NEW.nm_pessoa_fisica_sem_acento	:= elimina_acentuacao(NEW.nm_pessoa_fisica);
      end if;
  end;	
end if;

/* Oraci em 11/01/2008 OS78875*/


if (NEW.nr_prontuario is not null) and (OLD.nr_prontuario is null) then
	NEW.dt_geracao_pront :=  LOCALTIMESTAMP;
	/*insert into logxxx_tasy(	DT_ATUALIZACAO,
				NM_USUARIO,
				CD_LOG,
				DS_LOG)
	values		(	sysdate,
				:new.nm_usuario,
				55777,
				'PF: ' || :new.cd_pessoa_fisica || chr(13) ||
				'Pessoa_Fisica_Insert'  || chr(13) ||
				':old.nr_prontuario=' || :old.nr_prontuario || chr(13) ||
				':new.nr_prontuario=' || :new.nr_prontuario || chr(13) ||
				':old.dt_geracao_pront=' || :old.dt_geracao_pront || chr(13) ||
				':new.dt_geracao_pront=' || :new.dt_geracao_pront);*/

elsif (NEW.nr_prontuario is null) and (OLD.nr_prontuario is not null) then
	NEW.dt_geracao_pront :=  null;	

	/*insert into logxxx_tasy(	DT_ATUALIZACAO,
				NM_USUARIO,
				CD_LOG,
				DS_LOG)
	values		(	sysdate,
				:new.nm_usuario,
				55777,
				'PF: ' || :new.cd_pessoa_fisica || chr(13) ||
				'Pessoa_Fisica_Insert'  || chr(13) ||
				':old.nr_prontuario=' || :old.nr_prontuario || chr(13) ||
				':new.nr_prontuario=' || :new.nr_prontuario || chr(13) ||
				':old.dt_geracao_pront=' || :old.dt_geracao_pront || chr(13) ||
				':new.dt_geracao_pront=' || :new.dt_geracao_pront);*/

end if;

if (NEW.nr_cartao_nac_sus is not null) then
	BEGIN
	select	(NEW.nr_cartao_nac_sus)::numeric
	into STRICT	nr_cartao_nac_sus_w
	;
	exception when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(194548);
		/*Nao e permitido informar caracteres alfanumericos no numero do cartao SUS.*/


	end;
end if;

/*       Coelho 03/07/2008 OS95248 */


NEW.nm_pessoa_pesquisa	:= padronizar_nome(NEW.nm_pessoa_fisica);

if ('00/00/0000 00:00:00' = to_char(NEW.dt_obito,'dd/mm/yyyy hh24:mi:ss')) then
	NEW.dt_obito := null;
end if;

NEW.nm_abreviado	:= pls_gerar_nome_abreviado(NEW.nm_pessoa_fisica);

if (upper(NEW.cd_pessoa_fisica) = '@SEQUENCE') then
	BEGIN
		select	nextval('pessoa_fisica_seq')
		into STRICT	cd_pessoa_fisica_w
		;
		NEW.cd_pessoa_fisica := cd_pessoa_fisica_w;
	end;
end if;

if (NEW.nm_pessoa_fisica is not null ) then
  CALL check_patient_deletion_hash(NEW.nm_pessoa_fisica, NEW.dt_nascimento, NEW.cd_pessoa_mae, NEW.nm_usuario);
end if;
end if;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pessoa_fisica_insert() FROM PUBLIC;

CREATE TRIGGER pessoa_fisica_insert
	BEFORE INSERT ON pessoa_fisica FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pessoa_fisica_insert();

