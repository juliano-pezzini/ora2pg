-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS hd_dializador_before_insert ON hd_dializador CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_hd_dializador_before_insert() RETURNS trigger AS $BODY$
DECLARE
    bloq_cad_dialisador_w     varchar(1);
    nr_seq_tratamento_ativo_w paciente_tratamento.nr_sequencia%TYPE;
    dt_obito_pac_w            pessoa_fisica.dt_obito%TYPE;

BEGIN

    bloq_cad_dialisador_w := obter_param_usuario(7009, 284, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo, bloq_cad_dialisador_w);

    IF bloq_cad_dialisador_w = 'S' THEN
        BEGIN
            SELECT max(nr_sequencia)
              INTO STRICT nr_seq_tratamento_ativo_w
              FROM paciente_tratamento
             WHERE cd_pessoa_fisica = NEW.cd_pessoa_fisica
               AND (dt_final_tratamento IS NULL or dt_final_tratamento > LOCALTIMESTAMP);
        if (nr_seq_tratamento_ativo_w is null) then
                CALL Wheb_mensagem_pck.exibir_mensagem_abort(1130131);
			end if;
        END;

        SELECT max(dt_obito) INTO STRICT dt_obito_pac_w FROM pessoa_fisica WHERE cd_pessoa_fisica = NEW.cd_pessoa_fisica;
        IF dt_obito_pac_w IS NOT NULL THEN
            CALL Wheb_mensagem_pck.exibir_mensagem_abort(1130132);
        END IF;
    END IF;

RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_hd_dializador_before_insert() FROM PUBLIC;

CREATE TRIGGER hd_dializador_before_insert
	BEFORE INSERT ON hd_dializador FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_hd_dializador_before_insert();

