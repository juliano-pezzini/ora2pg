-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS ish_atend_paciente_aftupd ON atendimento_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_ish_atend_paciente_aftupd() RETURNS trigger AS $BODY$
declare

reg_integracao_w		gerar_int_padrao.reg_integracao;
reg_integracao_transf_w	gerar_int_padrao.reg_integracao;
ds_stack_w		varchar(4000);
qt_reg_w			bigint;
nr_atendimento_w		atendimento_paciente.nr_atendimento%type;
nr_seq_episodio_w		atendimento_paciente.nr_seq_episodio%type;

ie_tipo_atendimento_w	atendimento_paciente.ie_tipo_atendimento%type;
ie_integrar_w		varchar(1);
nr_seq_documento_w	intpd_fila_transmissao.nr_seq_documento%type;
nr_seq_atepacu_adm_w	atend_paciente_unidade.nr_seq_interno%type;
ie_tipo_kv_new_w		tipo_admissao_fat.ie_tipo_kv%type;
ie_tipo_kv_old_w		tipo_admissao_fat.ie_tipo_kv%type;
ie_status_w		intpd_fila_transmissao.ie_status%type;
nr_Seq_fila_w		intpd_fila_transmissao.nr_sequencia%type;
ds_separador_w		varchar(10)	:= ish_param_pck.get_separador;

c01 CURSOR FOR
SELECT	a.nr_atendimento,
	a.nr_seq_interno,
	a.cd_convenio
from	atend_categoria_convenio a
where	a.nr_atendimento	= nr_atendimento_w;
/*and	not exists(	select	1
		from	atendimento_paciente x,
			atend_categoria_convenio y
		where	x.nr_atendimento = y.nr_atendimento
		and	x.dt_cancelamento is null
		and	x.nr_seq_episodio = nr_seq_episodio_w
		and	y.cd_convenio = a.cd_convenio);*/


c01_w	c01%rowtype;

c02 CURSOR FOR
SELECT	nr_atendimento,
	nr_seq_interno
from	atend_paciente_unidade
where	nr_atendimento	= NEW.nr_atendimento
and	nr_seq_interno > nr_seq_atepacu_adm_w
order by nr_seq_interno desc;

c02_w	c02%rowtype;

/*
cursor	c03 is
select	nr_sequencia,
	nr_atendimento
from	atendimento_paciente_inf
where	nr_atendimento	= nr_atendimento_w;

c03_w	c03%rowtype;*/

BEGIN
  BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
	BEGIN
	
	if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') in ('de_DE', 'de_AT')) then
	
		update	pessoa_fisica
		set		dt_atualizacao	= LOCALTIMESTAMP,
				nm_usuario		= NEW.nm_usuario
		where	pessoa_fisica.cd_pessoa_fisica = NEW.cd_pessoa_fisica;
		
	end if;

	ie_integrar_w	:=	'N';

	if (TG_OP = 'DELETE') and (OLD.nr_seq_episodio is not null) then
		ie_integrar_w	:=	'S';
	else
		BEGIN
		BEGIN
		select	'S'
		into STRICT	ie_integrar_w
		from	atend_paciente_unidade
		where	nr_atendimento	= NEW.nr_atendimento  LIMIT 1;
		exception
		when others then
			ie_integrar_w	:=	'N';
		end;

		if (NEW.nr_seq_episodio is null) then
			ie_integrar_w	:=	'N';
		end if;
		end;
	end if;

	if (ie_integrar_w = 'S') then		
		BEGIN
		ie_tipo_atendimento_w	:=	coalesce(NEW.ie_tipo_atendimento, OLD.ie_tipo_atendimento);
		
		select	dbms_utility.format_call_stack
		into STRICT	ds_stack_w
		;
		
		if (position('ATUALIZAR_ATEND_PAC_GER' in ds_stack_w) = 0) and (position('ALTA' in ds_stack_w) = 0) and --nao envia quando eh disparado por alguma rotina de ..alta
			(position('GERAR_INTERNACAO_ATENDIMENTO' in ds_stack_w) = 0) and (position('GERAR_SENHA_ATENDIMENTO_CASE' in ds_stack_w) = 0) then 	--nao enviar quando o novo case for gerado pelo processo de troca do tipo do case (botao internal bpa / admit na eup)
												--para o ish deve ser enviado somente a troca do tipo, o novo case e movimentacao nao precisam ser enviados.

			reg_integracao_w.ie_operacao		:=	'X';
			
			if	((TG_OP = 'UPDATE') and (position('EXCLUIR_ATENDIMENTO' in ds_stack_w) = 0)) then
				BEGIN
				if (OLD.dt_cancelamento is null) and (NEW.dt_cancelamento is not null) then
					reg_integracao_w.ie_operacao		:=	'E';
				else
					reg_integracao_w.ie_operacao		:=	'A';
				end if;
				end;
			elsif (TG_OP = 'DELETE') then
				reg_integracao_w.ie_operacao		:=	'E';
			end if;
		
			reg_integracao_w.cd_pessoa_fisica	:=	coalesce(NEW.cd_pessoa_fisica, OLD.cd_pessoa_fisica);
			reg_integracao_w.nr_atendimento	:=	coalesce(NEW.nr_atendimento, OLD.nr_atendimento);
			
			if	(reg_integracao_w.ie_operacao = 'E' AND OLD.nr_seq_episodio is not null) then
				BEGIN
				nr_seq_atepacu_adm_w	:=	obter_atepacu_paciente(reg_integracao_w.nr_atendimento, 'P');

				--exclusao das movimentacoes

				open c02;
				loop
				fetch c02 into	
					c02_w;
				EXIT WHEN NOT FOUND; /* apply on c02 */
					BEGIN
					reg_integracao_transf_w.ie_operacao		:=	reg_integracao_w.ie_operacao;
					reg_integracao_transf_w.cd_pessoa_fisica	:=	reg_integracao_w.cd_pessoa_fisica;
					reg_integracao_transf_w.nr_atendimento	:=	reg_integracao_w.nr_atendimento;
					reg_integracao_transf_w.ie_saida_unidade	:=	'N';
					reg_integracao_transf_w.ie_tipo_movimentacao	:=	'T';
					
					reg_integracao_transf_w := gerar_int_padrao.gravar_integracao('118', c02_w.nr_seq_interno, coalesce(NEW.nm_usuario, OLD.nm_usuario), reg_integracao_transf_w);				
					end;
				end loop;
				close c02;
				end;

				nr_atendimento_w	:= coalesce(NEW.nr_atendimento, OLD.nr_atendimento);
				nr_seq_episodio_w	:= coalesce(NEW.nr_seq_episodio, OLD.nr_seq_episodio);

				--exclusao dos treatment certificate						

				reg_integracao_transf_w.ie_operacao			:= reg_integracao_w.ie_operacao;
				reg_integracao_transf_w.nr_seq_tipo_admissao_fat	:= coalesce(NEW.nr_seq_tipo_admissao_fat, OLD.nr_seq_tipo_admissao_fat);
				reg_integracao_transf_w.cd_pessoa_fisica		:= reg_integracao_w.cd_pessoa_fisica;
				reg_integracao_transf_w.nr_atendimento		:= nr_atendimento_w;
				reg_integracao_transf_w := gerar_int_padrao.gravar_integracao('403', reg_integracao_transf_w.nr_atendimento, coalesce(obter_usuario_ativo, coalesce(NEW.nm_usuario, OLD.nm_usuario)), reg_integracao_transf_w);
				reg_integracao_transf_w.nr_seq_tipo_admissao_fat	:= null;

				--exclusao dos convenios

				open c01;
				loop
				fetch c01 into
					c01_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */
					BEGIN
					
					--Se o convenio nao esta em um outro atendimento nao cancelado, entao agenda a exclusao do convenio, caso contrario nao agenda, pois no ISH eh por case.

					if (OBTER_SE_CONVENIO_EPISODIO(c01_w.cd_convenio, nr_seq_episodio_w, c01_w.nr_atendimento) = 'N') then
					
						reg_integracao_transf_w.ie_operacao		:= reg_integracao_w.ie_operacao;	
						reg_integracao_transf_w.nr_seq_agrupador	:= nr_atendimento_w;
						reg_integracao_transf_w.nr_atendimento		:= nr_atendimento_w;
						nr_seq_documento_w				:= nr_atendimento_w || ds_separador_w || c01_w.nr_seq_interno || ds_separador_w || OLD.nr_seq_episodio;
						
						reg_integracao_transf_w := gerar_int_padrao.gravar_integracao('135', nr_seq_documento_w, NEW.nm_usuario, reg_integracao_transf_w);
					end if;
					
					end;
				end loop;
				close c01;

				nr_seq_documento_w	:= NEW.nr_atendimento || ds_separador_w ||'%';
	
				update	intpd_fila_transmissao
				set	ie_status 	= 'S',
					ds_log		= 'CANCELED BY ENCOUNTER CANCELLATION PROCESS!'
				where	ie_status 	= 'A'
				and	ie_evento 	= '135'
				and	nr_seq_documento like nr_seq_documento_w;
			end if;

			if (reg_integracao_w.ie_operacao <> 'X') then		
				if (get_case_encounter_type(coalesce(NEW.nr_seq_episodio, OLD.nr_seq_episodio), null, reg_integracao_w.nr_atendimento, ie_tipo_atendimento_w) = '1') then				
					reg_integracao_w := gerar_int_padrao.gravar_integracao('106', coalesce(NEW.nr_seq_episodio,OLD.nr_seq_episodio), coalesce(obter_usuario_ativo,OLD.nm_usuario), reg_integracao_w);
				else
					reg_integracao_w := gerar_int_padrao.gravar_integracao('120', reg_integracao_w.nr_atendimento, coalesce(obter_usuario_ativo,OLD.nm_usuario), reg_integracao_w);
				end if;
			end if;
			
			if (NEW.nr_seq_tipo_admissao_fat is not null) and (OLD.nr_seq_tipo_admissao_fat is not null) and (NEW.nr_seq_tipo_admissao_fat <> OLD.nr_seq_tipo_admissao_fat) and
				not(OLD.ie_status_atendimento = 'C' and NEW.ie_status_atendimento = 'C') then
				
				select	coalesce(max(ie_tipo_kv),'N')
				into STRICT	ie_tipo_kv_old_w
				from	tipo_admissao_fat
				where	nr_sequencia	= OLD.nr_seq_tipo_admissao_fat;
				
				select	coalesce(max(ie_tipo_kv),'N')
				into STRICT	ie_tipo_kv_new_w
				from	tipo_admissao_fat
				where	nr_sequencia	= NEW.nr_seq_tipo_admissao_fat;
				
				if (ie_tipo_kv_old_w = 'S') and (ie_tipo_kv_new_w = 'N') then
				
					reg_integracao_transf_w.ie_operacao			:= 'E';
					reg_integracao_transf_w.nr_seq_tipo_admissao_fat	:= NEW.nr_seq_tipo_admissao_fat;
					reg_integracao_transf_w.cd_pessoa_fisica		:= reg_integracao_w.cd_pessoa_fisica;
					reg_integracao_transf_w.nr_atendimento		:= coalesce(NEW.nr_atendimento, OLD.nr_atendimento);	
					
					reg_integracao_transf_w := gerar_int_padrao.gravar_integracao('403', reg_integracao_transf_w.nr_atendimento, coalesce(obter_usuario_ativo, coalesce(NEW.nm_usuario, OLD.nm_usuario)), reg_integracao_transf_w);
					
				end if;
			end if;
			
		end if;
				
		if (NEW.nr_seq_episodio is not null) and (NEW.nr_atendimento_mae is not null) then
			nr_atendimento_w	:= NEW.nr_atendimento;

			open c01;
			loop
			fetch c01 into
				c01_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
				reg_integracao_w.ie_operacao		:= 'I';			
				reg_integracao_w.nr_seq_agrupador	:= NEW.nr_atendimento;
				reg_integracao_w.nr_atendimento		:= NEW.nr_atendimento;
				nr_seq_documento_w			:= NEW.nr_atendimento || ds_separador_w || c01_w.nr_seq_interno || ds_separador_w || NEW.nr_seq_episodio;
				
				reg_integracao_w := gerar_int_padrao.gravar_integracao('135', nr_seq_documento_w, NEW.nm_usuario, reg_integracao_w);				
			end loop;
			close c01;			
		end if;		
		end;
	end if;
	end;
end if;

  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_ish_atend_paciente_aftupd() FROM PUBLIC;

CREATE TRIGGER ish_atend_paciente_aftupd
	AFTER UPDATE OR DELETE ON atendimento_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_ish_atend_paciente_aftupd();

