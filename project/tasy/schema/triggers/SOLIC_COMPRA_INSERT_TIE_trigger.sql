-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS solic_compra_insert_tie ON solic_compra CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_solic_compra_insert_tie() RETURNS trigger AS $BODY$
declare
  ds_retorno_integracao_w    text;
  json_w                     philips_json;
  json_data_w                text;
BEGIN
  if (coalesce(wheb_usuario_pck.get_ie_executar_trigger,'S') = 'S') then
    if (wheb_usuario_pck.get_nm_usuario is not null) then
      json_w := philips_json();

      json_w.put('id', NEW.NR_SOLIC_COMPRA);
      json_w.put('establishment', NEW.CD_ESTABELECIMENTO);
      json_w.put('requester', NEW.CD_PESSOA_SOLICITANTE);
      json_w.put('stockLocation', NEW.CD_LOCAL_ESTOQUE);
      json_w.put('costCenter', NEW.CD_CENTRO_CUSTO);
      json_w.put('generalLedgerAccount', NEW.CD_CONTA_CONTABIL);
      json_w.put('careDepartment', NEW.CD_SETOR_ATENDIMENTO);
      json_w.put('releaseDate', NEW.DT_LIBERACAO);
      json_w.put('authorizationDate', NEW.DT_AUTORIZACAO);
      json_w.put('notifyMaterialArrival', NEW.IE_AVISO_CHEGADA);
      json_w.put('urgent', NEW.IE_URGENTE);
      json_w.put('buyer', NEW.CD_COMPRADOR_RESP);
      json_w.put('type', NEW.IE_TIPO_SOLICITACAO);
      json_w.put('requestDate', NEW.DT_SOLICITACAO_COMPRA);
      json_w.put('status = "A"', NEW.IE_SITUACAO);
      json_w.put('notifyPurchaseOrderApproval', NEW.IE_AVISO_APROV_OC);
      json_w.put('lastUpdate', NEW.DT_ATUALIZACAO);
      json_w.put('lastUpdateBy', NEW.NM_USUARIO);

      dbms_lob.createtemporary(json_data_w, true);
      json_w.(json_data_w);

      ds_retorno_integracao_w := bifrost.send_integration_content('purchaserequest.send', json_data_w, wheb_usuario_pck.get_nm_usuario);

    end if;
  end if;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_solic_compra_insert_tie() FROM PUBLIC;

CREATE TRIGGER solic_compra_insert_tie
	AFTER INSERT ON solic_compra FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_solic_compra_insert_tie();

