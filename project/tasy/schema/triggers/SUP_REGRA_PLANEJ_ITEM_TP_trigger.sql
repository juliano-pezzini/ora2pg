-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS sup_regra_planej_item_tp ON sup_regra_planej_item CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_sup_regra_planej_item_tp() RETURNS trigger AS $BODY$
DECLARE nr_seq_w bigint;ds_s_w   varchar(1);ds_c_w   varchar(1);ds_w	   varchar(1);ie_log_w varchar(1);BEGIN BEGIN ds_s_w := to_char(OLD.NR_SEQUENCIA);  ds_c_w:=null;SELECT * FROM gravar_log_alteracao(substr(OLD.QT_FALTA_PRIM_ENTREGA,1,4000), substr(NEW.QT_FALTA_PRIM_ENTREGA,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_FALTA_PRIM_ENTREGA', ie_log_w, ds_w, 'SUP_REGRA_PLANEJ_ITEM', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_ENTREGA,1,4000), substr(NEW.QT_ENTREGA,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_ENTREGA', ie_log_w, ds_w, 'SUP_REGRA_PLANEJ_ITEM', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_TOT_COMPRA,1,4000), substr(NEW.QT_TOT_COMPRA,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_TOT_COMPRA', ie_log_w, ds_w, 'SUP_REGRA_PLANEJ_ITEM', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_EST_ATUAL,1,4000), substr(NEW.QT_EST_ATUAL,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_EST_ATUAL', ie_log_w, ds_w, 'SUP_REGRA_PLANEJ_ITEM', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_ENTREGA_PREV,1,4000), substr(NEW.QT_ENTREGA_PREV,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_ENTREGA_PREV', ie_log_w, ds_w, 'SUP_REGRA_PLANEJ_ITEM', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_COMPRA_AJUSTADA,1,4000), substr(NEW.QT_COMPRA_AJUSTADA,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_COMPRA_AJUSTADA', ie_log_w, ds_w, 'SUP_REGRA_PLANEJ_ITEM', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_EST_PREV_ENTREGA,1,4000), substr(NEW.QT_EST_PREV_ENTREGA,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_EST_PREV_ENTREGA', ie_log_w, ds_w, 'SUP_REGRA_PLANEJ_ITEM', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.VL_PRECO_UNITARIO,1,4000), substr(NEW.VL_PRECO_UNITARIO,1,4000), NEW.nm_usuario, nr_seq_w, 'VL_PRECO_UNITARIO', ie_log_w, ds_w, 'SUP_REGRA_PLANEJ_ITEM', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_MATERIAL,1,4000), substr(NEW.CD_MATERIAL,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_MATERIAL', ie_log_w, ds_w, 'SUP_REGRA_PLANEJ_ITEM', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_CONSUMO_DIARIO,1,4000), substr(NEW.QT_CONSUMO_DIARIO,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_CONSUMO_DIARIO', ie_log_w, ds_w, 'SUP_REGRA_PLANEJ_ITEM', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_ESTOQUE_MINIMO,1,4000), substr(NEW.QT_ESTOQUE_MINIMO,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_ESTOQUE_MINIMO', ie_log_w, ds_w, 'SUP_REGRA_PLANEJ_ITEM', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.QT_CONS_PREV,1,4000), substr(NEW.QT_CONS_PREV,1,4000), NEW.nm_usuario, nr_seq_w, 'QT_CONS_PREV', ie_log_w, ds_w, 'SUP_REGRA_PLANEJ_ITEM', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;   exception when others then ds_w:= '1'; end;   END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_sup_regra_planej_item_tp() FROM PUBLIC;

CREATE TRIGGER sup_regra_planej_item_tp
	AFTER UPDATE ON sup_regra_planej_item FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_sup_regra_planej_item_tp();

