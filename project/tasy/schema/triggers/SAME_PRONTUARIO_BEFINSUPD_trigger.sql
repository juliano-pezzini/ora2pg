-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS same_prontuario_befinsupd ON same_prontuario CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_same_prontuario_befinsupd() RETURNS trigger AS $BODY$
declare
qt_reg_w		smallint;
qt_reg_etapa_w		bigint;
ie_tipo_atend_pront_w	varchar(1);
ie_atend_internado_w	varchar(1);
ie_tipo_atendimento_w	smallint;
ie_exige_dtinicio_w	varchar(1);
 
pragma autonomous_transaction;
BEGIN 
if (wheb_usuario_pck.get_ie_executar_trigger	= 'N') then 
	goto Final;
end if;
 
ie_exige_dtinicio_w := obter_param_usuario(941, 236, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_exige_dtinicio_w);
 
if (NEW.dt_periodo_inicial is not null) or (NEW.dt_periodo_final is not null) then 
	if (ie_exige_dtinicio_w = 'S') then  					--Exige somente data de inicio 
		if (NEW.dt_periodo_inicial is null) then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(283874);
		end if;								--Exige data de início e data de fim	Caso tenha sido informada somente uma ou outra gera um erro, pois neste caso é necessário informar as duas. 
	elsif (NEW.dt_periodo_inicial is not null and NEW.dt_periodo_final is null) or (NEW.dt_periodo_final is not null and NEW.dt_periodo_inicial is null) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(264175);
	end if;
end if;
 
select	count(*) 
into STRICT	qt_reg_etapa_w 
from	fatur_etapa_alta 
where	ie_evento in ('G','S');
 
if (NEW.nr_atendimento is not null) and (qt_reg_etapa_w > 0) then 
 
	if (TG_OP = 'INSERT') then 
		CALL gerar_etapa_prontuario(NEW.nr_atendimento, NEW.ie_status, 'G', NEW.nm_usuario);
	end if;
	 
	if (TG_OP = 'UPDATE') and (NEW.ie_status <> OLD.ie_status) then 
		CALL gerar_etapa_prontuario(NEW.nr_atendimento, NEW.ie_status, 'S', NEW.nm_usuario);
	end if;
	 
end if;
 
if (TG_OP = 'INSERT') then 
	 
	ie_tipo_atend_pront_w := obter_param_usuario(941, 162, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_tipo_atend_pront_w);
	 
	if (ie_tipo_atend_pront_w = 'S') then 
		 
		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
		into STRICT	ie_atend_internado_w 
		from	atendimento_paciente 
		where	cd_pessoa_fisica = NEW.cd_pessoa_fisica 
		and	ie_tipo_atendimento = 1;
		 
		if (ie_atend_internado_w = 'S') then 
			NEW.ie_tipo_atend_prontuario := 1;
		elsif (NEW.nr_atendimento is not null) then 
		 
			select	coalesce(max(ie_tipo_atendimento),8) 
			into STRICT	ie_tipo_atendimento_w 
			from	atendimento_paciente 
			where	nr_atendimento = NEW.nr_atendimento;
			 
			NEW.ie_tipo_atend_prontuario := ie_tipo_atendimento_w;
			 
		else 
			NEW.ie_tipo_atend_prontuario := 8;
		end if;	
	end if;
end if;
 
<<Final>> 
qt_reg_w	:= 0;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_same_prontuario_befinsupd() FROM PUBLIC;

CREATE TRIGGER same_prontuario_befinsupd
	BEFORE INSERT OR UPDATE ON same_prontuario FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_same_prontuario_befinsupd();

