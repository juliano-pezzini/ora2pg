-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS procedimento_atual ON procedimento CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_procedimento_atual() RETURNS trigger AS $BODY$
declare

  vl_tam_max_proc_w CONSTANT bigint := 240;

  qt_reg_w                   bigint;

  ie_consiste_inativacao_w   varchar(1);

  nr_seq_combinacao_w        pls_combinacao_item_cta.nr_sequencia%type;

  ie_origem_proced_w         procedimento.ie_origem_proced%type;

  cd_procedimento_w          procedimento.cd_procedimento%type;

BEGIN


--Foi necessário utilizar a trigger na deleção de registros, então o que a trigger tratava antes, deixamos intocado, não fazendo no evento de deletar.
if (not TG_OP = 'DELETE') then


  if billing_i18n_pck.obter_se_ds_proc_255 = 'N' then

    NEW.ds_procedimento :=  substr(STR1 => NEW.ds_procedimento
                                   ,POS  => 1
                                   ,LEN  => vl_tam_max_proc_w);

  end if;



  ie_consiste_inativacao_w:= coalesce(Obter_valor_param_usuario(25,14,obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, WHEB_USUARIO_PCK.get_cd_estabelecimento),'N');



  if (length(NEW.cd_procedimento) > 15) then

    --r.aise_application_error(-20001,'O tamanho máximo do codigo do procedimento é de 15 digitos!');
    CALL wheb_mensagem_pck.exibir_mensagem_abort(263422);

  end if;



  if (NEW.ds_procedimento_pesquisa is null) or (NEW.ds_procedimento <> OLD.ds_procedimento ) then

    NEW.ds_procedimento_pesquisa  := upper(elimina_acentuacao(NEW.ds_procedimento));

  end if;



  if (ie_consiste_inativacao_w = 'S') and (TG_OP = 'UPDATE') and (NEW.ie_situacao = 'I') and   --Registro de exclusão
    (OLD.ie_situacao = 'A') then



    select   count(*)

    into STRICT  qt_reg_w

    from   proc_interno

    where   cd_procedimento  = NEW.cd_procedimento

    and   ie_origem_proced = NEW.ie_origem_proced

    and  ie_situacao   = 'A';



    if (qt_reg_w > 0) then

      --R.aise_application_error(-20011,'Não é possível inativar o procedimento, pois o mesmo está vinculado à um procedimento interno que está ativo');
      CALL wheb_mensagem_pck.exibir_mensagem_abort(263423);

    else

      select   count(*)

      into STRICT  qt_reg_w

      from   proc_interno_conv a,

        proc_interno    b

      where   a.nr_seq_proc_interno = b.nr_sequencia

      and   a.cd_procedimento  = NEW.cd_procedimento

      and   a.ie_origem_proced = NEW.ie_origem_proced

      and  a.ie_situacao   = 'A'

      and  b.ie_situacao   = 'A';



      if (qt_reg_w > 0) then

        --R.aise_application_error(-20011,'Não é possível inativar o procedimento, pois o mesmo está vinculado à um procedimento interno que está ativo');
        CALL wheb_mensagem_pck.exibir_mensagem_abort(263423);

      end  if;

    end if;

  end if;

end if;



if (TG_OP = 'DELETE' or TG_OP = 'UPDATE') then



  -- se for apagar o registro
  if (TG_OP = 'DELETE') then

    ie_origem_proced_w  := OLD.ie_origem_proced;

    cd_procedimento_w  := OLD.cd_procedimento;



  else

    ie_origem_proced_w  := NEW.ie_origem_proced;

    cd_procedimento_w  := NEW.cd_procedimento;

  end if;



  CALL pls_gerencia_upd_obj_pck.marcar_para_atualizacao(  'PLS_ESTRUTURA_OCOR_TM', wheb_usuario_pck.get_nm_usuario,

                'cd_procedimento_p=' || cd_procedimento_w||',ie_origem_proced_p='||ie_origem_proced_w);



end if;



IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_procedimento_atual() FROM PUBLIC;

CREATE TRIGGER procedimento_atual
	BEFORE INSERT OR UPDATE OR DELETE ON procedimento FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_procedimento_atual();

