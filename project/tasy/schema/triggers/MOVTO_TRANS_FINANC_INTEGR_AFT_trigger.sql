-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS movto_trans_financ_integr_aft ON movto_trans_financ CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_movto_trans_financ_integr_aft() RETURNS trigger AS $BODY$
declare

qt_reg_w	bigint;
reg_integracao_p		gerar_int_padrao.reg_integracao;

BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger	= 'S')  then

	if (NEW.dt_fechamento_lote is not null) then

		select  count(*)
		   into STRICT    qt_reg_w
		   from    intpd_fila_transmissao
		   where   nr_seq_documento                = to_char(NEW.nr_sequencia)
		   and     to_char(dt_atualizacao, 'dd/mm/yyyy hh24:mi:ss') = to_char(LOCALTIMESTAMP,'dd/mm/yyyy hh24:mi:ss')
		   and		ie_evento in ('33','29', '326');
		
		   if (qt_reg_w = 0) then
				reg_integracao_p := gerar_int_padrao.gravar_integracao('33', NEW.nr_sequencia, NEW.nm_usuario, reg_integracao_p); --Enviar cadastros financeiros  antes, cfme OS 1343067.
				reg_integracao_p := gerar_int_padrao.gravar_integracao('326', NEW.nr_sequencia, NEW.nm_usuario, reg_integracao_p);
				reg_integracao_p := gerar_int_padrao.gravar_integracao('29', NEW.nr_sequencia, NEW.nm_usuario, reg_integracao_p);
		   end if;	

	end if;

	if (NEW.nr_seq_saldo_banco is not null) then
		select  count(*)
		into STRICT qt_reg_w
		from intpd_fila_transmissao
		where nr_seq_documento = to_char(NEW.nr_sequencia)
		and to_char(dt_atualizacao, 'dd/mm/yyyy hh24:mi:ss') = to_char(LOCALTIMESTAMP,'dd/mm/yyyy hh24:mi:ss')
		and ie_evento in ('326');

		if (qt_reg_w = 0) then
			reg_integracao_p := gerar_int_padrao.gravar_integracao('326', NEW.nr_sequencia, NEW.nm_usuario, reg_integracao_p);
		end if;	
	end if;


	if (TG_OP = 'INSERT') then
		/* Grava o agendamento da informacao para atualizacao do fluxo de caixa. */


		CALL gravar_agend_fluxo_caixa(NEW.nr_sequencia,null,'CBT',NEW.dt_transacao,'I',NEW.nm_usuario);
		if (NEW.nr_seq_banco is not null) then
			CALL gravar_agend_fluxo_caixa(NEW.nr_sequencia,NEW.nr_seq_banco,'CBS',NEW.dt_transacao,'I',NEW.nm_usuario);
		end if;
	elsif (TG_OP = 'UPDATE') then
		/* Grava o agendamento da informacao para atualizacao do fluxo de caixa. */


		CALL gravar_agend_fluxo_caixa(NEW.nr_sequencia,null,'CBT',NEW.dt_transacao,'A',NEW.nm_usuario);
		if (NEW.nr_seq_banco is not null) then
			CALL gravar_agend_fluxo_caixa(NEW.nr_sequencia,NEW.nr_seq_banco,'CBS',NEW.dt_transacao,'A',NEW.nm_usuario);
		end if;
	end if;
end if;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_movto_trans_financ_integr_aft() FROM PUBLIC;

CREATE TRIGGER movto_trans_financ_integr_aft
	AFTER INSERT OR UPDATE ON movto_trans_financ FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_movto_trans_financ_integr_aft();

