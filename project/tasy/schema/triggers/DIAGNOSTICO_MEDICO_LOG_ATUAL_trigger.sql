-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS diagnostico_medico_log_atual ON diagnostico_medico CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_diagnostico_medico_log_atual() RETURNS trigger AS $BODY$
declare
nr_sequencia_new_w   			diagnostico_doenca_hist.nr_sequencia%type;
cd_pessoa_fisica_atend_w		atendimento_paciente.cd_pessoa_fisica%type;
cd_doenca_w						diagnostico_doenca.cd_doenca%type;
ie_status_w						diagnostico_doenca_hist.ie_status%type;			

BEGIN

if (NEW.ie_tipo_diagnostico <> OLD.ie_tipo_diagnostico) then
	BEGIN
	select coalesce(nextval('diagnostico_doenca_hist_seq'), 1)
	into STRICT nr_sequencia_new_w
	;
	
	select cd_pessoa_fisica
	into STRICT cd_pessoa_fisica_atend_w
	from atendimento_paciente
	where nr_atendimento = NEW.nr_atendimento;
	
	select coalesce(max(cd_doenca), '0')
	into STRICT cd_doenca_w
	from diagnostico_doenca
	where dt_diagnostico = NEW.dt_diagnostico
	and nr_atendimento = NEW.nr_atendimento;
	
	if (cd_doenca_w <> '0') then
		BEGIN

		if NEW.ie_tipo_diagnostico = 1 then
			ie_status_w := obter_diagnostico_status('PR');
		else
			ie_status_w := obter_diagnostico_status('D');
		end if;
		
		insert into diagnostico_doenca_hist(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			ie_status,
			ds_observacao,
			cd_pessoa_fisica,									
			cd_responsavel,
			cd_doenca,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_diagnostico,
			nr_atendimento)
		values (
			nr_sequencia_new_w,
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			ie_status_w,
			NEW.ds_diagnostico,
			cd_pessoa_fisica_atend_w,
			NEW.cd_medico,
			cd_doenca_w,
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			NEW.dt_diagnostico,
			NEW.nr_atendimento);
		end;
	end if;
	end;
end if;	
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_diagnostico_medico_log_atual() FROM PUBLIC;

CREATE TRIGGER diagnostico_medico_log_atual
	AFTER UPDATE ON diagnostico_medico FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_diagnostico_medico_log_atual();

