-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS titulo_pagar_baixa_insert ON titulo_pagar_baixa CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_titulo_pagar_baixa_insert() RETURNS trigger AS $BODY$
DECLARE

vl_saldo_juros_w              double precision;
vl_saldo_multa_w              double precision;
cd_estabelecimento_w          integer;
ie_altera_valor_tit_escrit_w  varchar(1);
qt_registro_w                 integer;
dt_emissao_w                  timestamp;
vl_movimento_w                ctb_documento.vl_movimento%type;
ie_tipo_titulo_w              titulo_pagar.ie_tipo_titulo%type;
vl_nota_credito_w             bordero_nc_nota_credito.vl_nota_credito%type;
nm_tabela_w                   ctb_documento.nm_tabela%type;
dt_baixa_origem_w             titulo_pagar_baixa.dt_baixa%type;
ie_contab_tit_interc_cancel_w pls_parametro_contabil.ie_contab_tit_interc_cancel%type;
ie_concil_contab_w            pls_visible_false.ie_concil_contab%type;
ie_contab_cp_no_cb_w          ctb_param_lote_cont_banco.ie_contab_cp_no_cb%type;
ie_situacao_ctb_w             ctb_documento.ie_situacao_ctb%type;
nr_seq_proj_rec_w             ctb_documento.nr_seq_proj_rec%type;
ie_contab_trans_fin_baixa_w   ctb_param_lote_contas_pag.ie_contab_trans_fin_baixa%type;
nr_seq_trans_fin_baixa_w      titulo_pagar.nr_seq_trans_fin_baixa%type;
ie_contab_classif_baixa_w     parametros_contas_pagar.ie_contab_classif_baixa%type;

c01 CURSOR FOR
SELECT a.nm_atributo,
       7 cd_tipo_lote_contab
from   atributo_contab a
where  a.cd_tipo_lote_contab = 7
and    a.nm_atributo in ('VL_BAIXA',
                         'VL_DESCONTOS',
                         'VL_OUTRAS_DEDUCOES',
                         'VL_JUROS',
                         'VL_MULTA',
                         'VL_OUTROS_ACRESCIMOS',
                         'VL_PAGO',
                         'VL_INSS',
                         'VL_IMPOSTO_MUNIC',
                         'VL_OUTRAS_DESPESAS',
                         'VL_BAIXA_SEM_TRIB',
                         'VL_NOTA_CREDITO',
                         'VL_CAMBIAL_ATIVO',
                         'VL_CAMBIAL_PASSIVO')
and    ie_contab_cp_no_cb_w = 'N'

union all

SELECT a.nm_atributo,
       18 cd_tipo_lote_contab
from   atributo_contab a
where  a.cd_tipo_lote_contab = 7
and    a.nm_atributo in ('VL_BAIXA',
                         'VL_DESCONTOS',
                         'VL_OUTRAS_DEDUCOES',
                         'VL_JUROS',
                         'VL_MULTA',
                         'VL_OUTROS_ACRESCIMOS',
                         'VL_INSS',
                         'VL_IMPOSTO_MUNIC',
                         'VL_IMPOSTO_BAIXA',
                         'VL_OUTRAS_DESPESAS',
                         'VL_CAMBIAL_ATIVO',
                         'VL_CAMBIAL_PASSIVO')
and    ie_contab_cp_no_cb_w = 'S'

union all

select a.nm_atributo,
       36 cd_tipo_lote_contab
from   atributo_contab a
where  a.cd_tipo_lote_contab = 36
and    a.nm_atributo = 'VL_PAGO'
and    NEW.nr_seq_lote_enc_contas is null
and    NEW.nr_seq_pls_lote_camara is null
and    ie_concil_contab_w = 'S'
and    exists (select 1
              from   titulo_pagar x,
                     ptu_fatura y
              where  x.nr_titulo = y.nr_titulo
              and    x.nr_titulo = NEW.nr_titulo
              and    coalesce(x.ie_status, 'D') = 'D'
              and    x.ie_origem_titulo = '16'
              and    ((x.ie_situacao != 'C') or (ie_contab_tit_interc_cancel_w = 'S'))
              
union all

              select 1
              from   titulo_pagar x,
                     ptu_fatura y
              where  x.nr_titulo = y.nr_titulo_ndc
              and    x.nr_titulo = NEW.nr_titulo
              and    coalesce(x.ie_status, 'D') = 'D'
              and    x.ie_origem_titulo = '16'
              and    ((x.ie_situacao != 'C') or (ie_contab_tit_interc_cancel_w = 'S')))

union all

select a.nm_atributo,
       37 cd_tipo_lote_contab
from   atributo_contab a
where  a.cd_tipo_lote_contab = 37
and    a.nm_atributo in ('VL_PAGO', 'VL_PAG_GLOSA')
and    coalesce(NEW.nr_seq_pls_lote_camara, 0) = 0
and    coalesce(NEW.nr_seq_lote_enc_contas, 0) = 0
and    ie_concil_contab_w = 'S'
and    exists (select 1
              from   titulo_pagar x
              where  x.nr_titulo = NEW.nr_titulo
              and    x.ie_origem_titulo = '19'
              and    ((x.nr_seq_pls_lote_contest is not null) or (x.nr_seq_pls_lote_disc is not null)));

c01_w c01%rowtype;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
    if (TG_OP = 'INSERT') then
        select vl_saldo_juros,
               vl_saldo_multa,
               dt_emissao,
               ie_tipo_titulo,
               nr_seq_proj_rec
        into STRICT   vl_saldo_juros_w,
               vl_saldo_multa_w,
               dt_emissao_w,
               ie_tipo_titulo_w,
               nr_seq_proj_rec_w
        from   titulo_pagar
        where  nr_titulo = NEW.nr_titulo;

        if (trunc(NEW.dt_baixa, 'dd') < trunc(dt_emissao_w, 'dd')) then
            CALL wheb_mensagem_pck.exibir_mensagem_abort(471997);
        end if;

        vl_saldo_juros_w := vl_saldo_juros_w - NEW.vl_juros;
        vl_saldo_multa_w := vl_saldo_multa_w - NEW.vl_multa;

        if (vl_saldo_juros_w < 0) then
            vl_saldo_juros_w := 0;
        end if;

        if (vl_saldo_multa_w < 0) then
            vl_saldo_multa_w := 0;
        end if;

        update  titulo_pagar
        set     vl_saldo_juros = vl_saldo_juros_w,
                vl_saldo_multa = vl_saldo_multa_w
        where   nr_titulo = NEW.nr_titulo;

        /* nao deixar salvar se tem registro na titulo_pagar_baixa vinculado ao titulo */


        select  max(cd_estabelecimento)
        into STRICT    cd_estabelecimento_w
        from    titulo_pagar
        where   nr_titulo       = NEW.nr_titulo;

        BEGIN
            select x.ie_contab_cp_no_cb
            into STRICT   ie_contab_cp_no_cb_w
            from (SELECT CASE WHEN a.ie_ctb_online='S' THEN  coalesce(a.ie_contab_cp_no_cb, 'N')  ELSE 'N' END  ie_contab_cp_no_cb
                    from   ctb_param_lote_cont_banco a
                    where  a.cd_empresa = obter_empresa_estab(cd_estabelecimento_w)
                    and    coalesce(a.cd_estab_exclusivo, cd_estabelecimento_w) = cd_estabelecimento_w
                    order  by(coalesce(a.cd_estab_exclusivo, 0)) desc) x LIMIT 1;
        exception
            when others then
                ie_contab_cp_no_cb_w := 'N';
        end;

        BEGIN
        select  coalesce(max(ie_concil_contab), 'N')
        into STRICT    ie_concil_contab_w
        from    pls_visible_false
        where   cd_estabelecimento = cd_estabelecimento_w;
        exception when others then
                ie_concil_contab_w := 'N';
        end;

        BEGIN
            select coalesce(ie_altera_valor_tit_escrit, 'N')
            into STRICT   ie_altera_valor_tit_escrit_w
            from   parametros_contas_pagar
            where  cd_estabelecimento = cd_estabelecimento_w;
        exception
            when others then
                ie_altera_valor_tit_escrit_w := 'N';
        end;

        if (ie_altera_valor_tit_escrit_w = 'N') then

            select count(*)
            into STRICT   qt_registro_w
            from   banco_escritural b,
                   titulo_pagar_escrit a
            where  b.nr_sequencia = a.nr_seq_escrit
            and    b.ie_remessa_retorno = 'R'
            and    a.nr_titulo = NEW.nr_titulo;

            if (qt_registro_w > 0) then
                /* Se a baixa nao foi feita pelo pagamento escritural.. */


                if (NEW.nr_seq_escrit is null) then
                    CALL wheb_mensagem_pck.exibir_mensagem_abort(231370, 'NR_TITULO=' || NEW.nr_titulo);
                    /* 'Titulo ja vinculado a uma remessa de pagamento escritural.' || chr(13) ||  'O mesmo so pode ser baixado pela funcao "Pagamento escritural",' || chr(13) || 'Titulo: ' || ); */


                end if;
            end if;
        end if;

        select coalesce(max(ie_contab_tit_interc_cancel), 'S')
        into STRICT   ie_contab_tit_interc_cancel_w
        from   pls_parametro_contabil
        where  cd_estabelecimento = cd_estabelecimento_w;

        CALL philips_contabil_pck.set_estabelecimento(cd_estabelecimento_w);
        CALL philips_contabil_pck.set_nr_seq_trans_fin(NEW.nr_seq_trans_fin);
        CALL philips_contabil_pck.set_dt_baixa(NEW.dt_baixa);
        atualizar_imposto_tit_pagar(NEW.nr_titulo, NEW.nr_sequencia, NEW.vl_baixa, NEW.nm_usuario, NEW.nr_seq_baixa_origem);
        CALL philips_contabil_pck.set_estabelecimento(null);
        CALL philips_contabil_pck.set_nr_seq_trans_fin(null);
        CALL philips_contabil_pck.set_dt_baixa(null);

        /* Grava o agendamento da informacao para atualizacao do fluxo de caixa. */


        CALL gravar_agend_fluxo_caixa(NEW.nr_titulo, NEW.nr_sequencia, 'TPB', NEW.dt_baixa, 'I', NEW.nm_usuario);

        open c01;
        loop
            fetch c01
                into c01_w;
            EXIT WHEN NOT FOUND; /* apply on c01 */
            BEGIN

                nm_tabela_w         := 'TITULO_PAGAR_BAIXA_CONTAB_V';
                vl_movimento_w      := 0;
                ie_situacao_ctb_w   := 'P';
                nr_seq_trans_fin_baixa_w := NEW.nr_seq_trans_fin;

                if (c01_w.cd_tipo_lote_contab = 7) then
                    BEGIN
                        if (c01_w.nm_atributo = 'VL_NOTA_CREDITO') then
                            BEGIN
                                vl_nota_credito_w := 0;
                                BEGIN

                                    select vl_nota_credito
                                    into STRICT   vl_nota_credito_w
                                    from   titulo_pagar c,
                                           bordero_nc b,
                                           bordero_nc_nota_credito a
                                    where  a.nr_seq_bordero = b.nr_sequencia
                                    and    b.nr_sequencia = c.nr_seq_bordero_nc
                                    and    c.nr_titulo = NEW.nr_titulo
                                    and    c.ie_tipo_titulo = '21';

                                exception
                                    when others then
                                        vl_nota_credito_w := 0;
                                end;
                                nm_tabela_w := 'TITULO_PAGAR_BAIXA_CONTAB_V';

                            end;
                        end if;

                        if (c01_w.nm_atributo = 'VL_OUTRAS_DESPESAS') then
                            BEGIN
                                nm_tabela_w := 'TITULO_PAGAR_BAIXA';
                            end;
                        elsif (c01_w.nm_atributo = 'VL_BAIXA_SEM_TRIB') then
                            BEGIN
                                nm_tabela_w := 'TITULO_PAGAR';
                            end;
                        elsif (c01_w.nm_atributo = 'VL_IMPOSTO_BAIXA') then
                            BEGIN
                                ie_situacao_ctb_w := 'N';
                            end;
                        end if;

                        vl_movimento_w:= case c01_w.nm_atributo
                                        when 'VL_BAIXA' then NEW.vl_baixa
                                        when 'VL_DESCONTOS' then NEW.vl_descontos
                                        when 'VL_OUTRAS_DEDUCOES'  then NEW.vl_outras_deducoes
                                        when 'VL_JUROS'  then NEW.vl_juros
                                        when 'VL_MULTA'  then NEW.vl_multa
                                        when 'VL_OUTROS_ACRESCIMOS'  then NEW.vl_outros_acrescimos
                                        when 'VL_PAGO'  then NEW.vl_pago
                                        when 'VL_INSS'  then NEW.vl_inss
                                        when 'VL_IMPOSTO_MUNIC'  then NEW.vl_imposto_munic
                                        when 'VL_IMPOSTO_BAIXA'  then NEW.vl_imposto
                                        when 'VL_BAIXA_SEM_TRIB'  then NEW.vl_baixa - coalesce(NEW.vl_imposto,0)
                                        when 'VL_OUTRAS_DESPESAS'  then NEW.vl_outras_despesas
                                        when 'VL_NOTA_CREDITO' then (vl_nota_credito_w * sign(NEW.vl_baixa))
                                        when 'VL_CAMBIAL_ATIVO' then NEW.vl_cambial_ativo
                                        when 'VL_CAMBIAL_PASSIVO' then NEW.vl_cambial_passivo
                                        end;
                        BEGIN
                            select  ie_contab_trans_fin_baixa
                            into STRICT    ie_contab_trans_fin_baixa_w
                            from    ctb_param_lote_contas_pag
                            where   cd_empresa    = obter_empresa_estab(cd_estabelecimento_w)
                            and     coalesce(cd_estab_exclusivo, cd_estabelecimento_w) = cd_estabelecimento_w  LIMIT 1;
                        exception
                            when no_data_found then
                                 ie_contab_trans_fin_baixa_w := 'N';
                            when too_many_rows then
                                 ie_contab_trans_fin_baixa_w := 'N';
                        end;


                        if (ie_contab_trans_fin_baixa_w = 'S') and (c01_w.nm_atributo  in ('VL_BAIXA', 'VL_PAGO')) and (coalesce(NEW.nr_seq_escrit,0) <> 0) then

                                BEGIN
                                    select  nr_seq_trans_fin_baixa
                                    into STRICT    nr_seq_trans_fin_baixa_w
                                    from    titulo_pagar 
                                    where   nr_titulo = NEW.nr_titulo;
                                exception
                                    when    no_data_found then
                                            ie_contab_trans_fin_baixa_w := 'N';
                                    when    too_many_rows then
                                            ie_contab_trans_fin_baixa_w := 'N';
                                end;

                        end if;
                    end;
                elsif (c01_w.cd_tipo_lote_contab = 18) then
                    BEGIN
                        nm_tabela_w := 'TITULO_PAGAR_BAIXA_CONTAB_V';

                        vl_movimento_w  := case c01_w.nm_atributo
                                        when 'VL_BAIXA' then NEW.vl_baixa
                                        when 'VL_CAMBIAL_ATIVO' then NEW.vl_cambial_ativo
                                        when 'VL_CAMBIAL_PASSIVO' then NEW.vl_cambial_passivo
                                        when 'VL_DESCONTOS' then NEW.vl_descontos
                                        when 'VL_IMPOSTO_BAIXA'  then NEW.vl_imposto
                                        when 'VL_IMPOSTO_MUNIC'  then NEW.vl_imposto_munic
                                        when 'VL_INSS'  then NEW.vl_inss
                                        when 'VL_JUROS'  then NEW.vl_juros
                                        when 'VL_MULTA'  then NEW.vl_multa
                                        when 'VL_OUTRAS_DEDUCOES'  then NEW.vl_outras_deducoes
                                        when 'VL_OUTRAS_DESPESAS'  then NEW.vl_outras_despesas
                                        when 'VL_OUTROS_ACRESCIMOS'  then NEW.vl_outros_acrescimos
                                        end;

                    end;
                elsif (c01_w.cd_tipo_lote_contab = 36) then
                    vl_movimento_w := NEW.vl_baixa;
                    nm_tabela_w    := 'TITULO_PAGAR_BAIXA';
                elsif (c01_w.cd_tipo_lote_contab = 37) then
                    vl_movimento_w  :=      case c01_w.nm_atributo
                                            when 'VL_PAGO' then NEW.vl_descontos --* nr_multiplicador_w
                                            when 'VL_PAG_GLOSA' then NEW.vl_baixa --* nr_multiplicador_w
                                            end;
                    nm_tabela_w    := 'TITULO_PAGAR_BAIXA';
                end if;

                if (coalesce(vl_movimento_w, 0) <> 0) then
                    BEGIN
                        BEGIN
                            select ie_contab_classif_baixa
                            into STRICT ie_contab_classif_baixa_w
                            from parametros_contas_pagar
                            where cd_estabelecimento = cd_estabelecimento_w;
                            exception
                                 when no_data_found then
                                      ie_contab_trans_fin_baixa_w := 'N';
                                 when too_many_rows then
                                      ie_contab_trans_fin_baixa_w := 'N';
                        end;

                    if (ie_contab_classif_baixa_w = 'T' and ie_tipo_titulo_w in ('0', '1')) then
                       ie_situacao_ctb_w := 'N';
                    end if;


                        CALL ctb_concil_financeira_pck.ctb_gravar_documento(cd_estabelecimento_w,
                                                                       NEW.dt_baixa,
                                                                       c01_w.cd_tipo_lote_contab,
                                                                       nr_seq_trans_fin_baixa_w,
                                                                       13,
                                                                       NEW.nr_titulo,
                                                                       NEW.nr_sequencia,
                                                                       null,
                                                                       vl_movimento_w,
                                                                       nm_tabela_w,
                                                                       c01_w.nm_atributo,
                                                                       NEW.nm_usuario,
                                                                       ie_situacao_ctb_w,
                                                                       null,
                                                                       nr_seq_proj_rec_w);

                    end;
                end if;

            end;
        end loop;
        close c01;

    elsif (TG_OP = 'UPDATE') then
        /* Grava o agendamento da informacao para atualizacao do fluxo de caixa. */


        CALL gravar_agend_fluxo_caixa(NEW.nr_titulo, NEW.nr_sequencia, 'TPB', NEW.dt_baixa, 'A', NEW.nm_usuario);
    end if;
end if;

  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_titulo_pagar_baixa_insert() FROM PUBLIC;

CREATE TRIGGER titulo_pagar_baixa_insert
	AFTER INSERT OR UPDATE ON titulo_pagar_baixa FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_titulo_pagar_baixa_insert();

