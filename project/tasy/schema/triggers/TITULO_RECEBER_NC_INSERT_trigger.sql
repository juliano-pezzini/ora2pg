-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS titulo_receber_nc_insert ON titulo_receber_nc CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_titulo_receber_nc_insert() RETURNS trigger AS $BODY$
declare

cd_estabelecimento_w		ctb_documento.cd_estabelecimento%type;
dt_movimento_w          	ctb_documento.dt_competencia%type;
nr_seq_trans_financ_w   	ctb_documento.nr_seq_trans_financ%type;
nr_documento_w          	ctb_documento.nr_documento%type;
nr_seq_doc_compl_w      	ctb_documento.nr_seq_doc_compl%type;
nr_seq_proj_rec_w           ctb_documento.nr_seq_proj_rec%type := null;
ie_lib_caixa_w          	titulo_receber_liq.ie_lib_caixa%type;
ie_contab_tit_cancelado_w	parametro_contas_receber.ie_contab_tit_cancelado%type;
ie_concil_contab_w		pls_visible_false.ie_concil_contab%type;
nr_multiplicador_w		smallint := 1;

c01 CURSOR FOR
	SELECT 	a.cd_tipo_lote_contab,
		34 nr_seq_info_ctb,
		'TITULO_RECEBER_LIQ' nm_tabela,
		a.nm_atributo nm_atributo
	from	atributo_contab a
	where 	a.cd_tipo_lote_contab = 5
	and	a.nm_atributo = 'VL_NOTA_CREDITO'
	
union all

	SELECT 	a.cd_tipo_lote_contab,
		14 nr_seq_info_ctb,
		'TITULO_RECEBER_NC' nm_tabela,
		a.nm_atributo nm_atributo
	from	atributo_contab a
	where 	a.cd_tipo_lote_contab = 39
	and	a.nm_atributo = 'VL_NOTA_CREDITO'
	and	ie_concil_contab_w = 'S'
	and	exists ( select	1
			 from 	titulo_receber_liq y
			 where  y.nr_seq_lote_enc_contas is null
			 and    y.nr_seq_pls_lote_camara is null
			 and	coalesce(y.ie_lib_caixa, 'S') = 'S'
			 and	y.nr_titulo 	= NEW.nr_titulo_rec
			 and	y.nr_sequencia	= NEW.nr_seq_liq
			 and	exists	(select	1
					from	titulo_receber x
					where	x.nr_titulo	= y.nr_titulo
					and	x.ie_pls	= 'S'
					and	x.ie_origem_titulo = '3'
					and	((x.ie_situacao	<> '3' or ie_contab_tit_cancelado_w = 'S')
					or (x.ie_situacao = '3' and y.vl_rec_maior <> 0))));

	vet_c01 c01%rowtype;
BEGIN
  BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
BEGIN
select  b.cd_estabelecimento,
        a.dt_recebimento,
        a.nr_seq_trans_fin,
        a.nr_titulo,
        a.nr_sequencia,
        a.ie_lib_caixa,
        CASE WHEN a.ie_acao='I' THEN  1  ELSE -1 END ,
		b.nr_seq_proj_rec
into STRICT    cd_estabelecimento_w,
        dt_movimento_w,
        nr_seq_trans_financ_w,
        nr_documento_w,
        nr_seq_doc_compl_w,
        ie_lib_caixa_w,
	nr_multiplicador_w,
		nr_seq_proj_rec_w
from	titulo_receber_liq a,
        titulo_receber b
where	a.nr_titulo = b.nr_titulo
AND	a.nr_sequencia = NEW.nr_seq_liq
and     a.nr_titulo = NEW.nr_titulo_rec;
exception when others then
	nr_seq_trans_financ_w	:= null;
end;

BEGIN
select 	coalesce(max(ie_contab_tit_cancelado), 'S')
into STRICT    ie_contab_tit_cancelado_w
from    parametro_contas_receber
where   cd_estabelecimento      = cd_estabelecimento_w;
exception
when others then
	ie_contab_tit_cancelado_w := 'S';
end;

BEGIN
select	coalesce(max(ie_concil_contab), 'N')
into STRICT	ie_concil_contab_w
from	pls_visible_false
where	cd_estabelecimento = cd_estabelecimento_w;
exception when others then
	ie_concil_contab_w := 'N';
end;

if (coalesce(NEW.vl_nota_credito, 0) <> 0 and coalesce(nr_seq_trans_financ_w,0) <> 0 and coalesce(ie_lib_caixa_w, 'S') = 'S') then
        BEGIN
        
	open c01;
	loop
	fetch c01 into
		vet_c01;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	BEGIN

        CALL ctb_concil_financeira_pck.ctb_gravar_documento(       cd_estabelecimento_w,
                                                                dt_movimento_w,
                                                                vet_c01.cd_tipo_lote_contab,
                                                                nr_seq_trans_financ_w,
                                                                vet_c01.nr_seq_info_ctb,
                                                                nr_documento_w,
                                                                nr_seq_doc_compl_w,
                                                                NEW.nr_sequencia,
                                                                NEW.vl_nota_credito * nr_multiplicador_w,
                                                                vet_c01.nm_tabela,
                                                                vet_c01.nm_atributo,
                                                                NEW.nm_usuario,
                                                                'P',
                                                                null,
                                                                nr_seq_proj_rec_w);

	end;
	end loop;
	close c01;
        end;
end if;

if (TG_OP = 'UPDATE') then
	if (NEW.vl_nota_credito <> OLD.vl_nota_credito)   then
		/* Projeto Davita  - Nao deixa gerar movimento contabil apos fechamento  da data */


		CALL philips_contabil_pck.valida_se_dia_fechado(OBTER_EMPRESA_ESTAB(cd_estabelecimento_w),dt_movimento_w);
	end if;
else 	if (TG_OP = 'INSERT') then
		/* Projeto Davita  - Nao deixa gerar movimento contabil apos fechamento  da data */


		CALL philips_contabil_pck.valida_se_dia_fechado(OBTER_EMPRESA_ESTAB(cd_estabelecimento_w),dt_movimento_w);
	end if;
end if;
end if;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_titulo_receber_nc_insert() FROM PUBLIC;

CREATE TRIGGER titulo_receber_nc_insert
	BEFORE INSERT OR UPDATE ON titulo_receber_nc FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_titulo_receber_nc_insert();

