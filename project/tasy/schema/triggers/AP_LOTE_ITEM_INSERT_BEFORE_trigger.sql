-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS ap_lote_item_insert_before ON ap_lote_item CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_ap_lote_item_insert_before() RETURNS trigger AS $BODY$
declare
BEGIN
  BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger	= 'S')  then
	SELECT * FROM substituir_lote_item_convenio(	nr_seq_lote_p => NEW.nr_seq_lote, cd_material_p => NEW.cd_material, nr_seq_mat_hor_p => NEW.nr_seq_mat_hor, cd_material_subst_p => NEW.cd_material, ie_item_substituido_p => NEW.ie_item_substituido) INTO STRICT cd_material_subst_p => NEW.cd_material, ie_item_substituido_p => NEW.ie_item_substituido;
end if;
exception
	when others then
	CALL grava_log_tasy(88878,substr(SQLERRM(SQLSTATE) || DBMS_UTILITY.FORMAT_ERROR_BACKTRACE,1,2000), NEW.nr_seq_lote);

  END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_ap_lote_item_insert_before() FROM PUBLIC;

CREATE TRIGGER ap_lote_item_insert_before
	BEFORE INSERT ON ap_lote_item FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_ap_lote_item_insert_before();

