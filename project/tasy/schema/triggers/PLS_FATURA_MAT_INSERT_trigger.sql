-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pls_fatura_mat_insert ON pls_fatura_mat CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pls_fatura_mat_insert() RETURNS trigger AS $BODY$
declare
 
nr_seq_conta_w		pls_conta.nr_sequencia%type;
ie_cancelamento_w	pls_fatura.ie_cancelamento%type;
nr_seq_lote_disc_w	pls_conta_pos_estabelecido.nr_seq_lote_disc%type;
nr_seq_lote_fat_w	pls_lote_faturamento.nr_sequencia%type;
 
BEGIN 
if (coalesce(wheb_usuario_pck.get_ie_lote_contabil,'N') = 'N') and (coalesce(wheb_usuario_pck.get_ie_atualizacao_contabil,'N') = 'N') then 
	if	((coalesce(NEW.vl_faturado_ndc,0) < 0) and (coalesce(NEW.vl_faturado_ndc,0) <> coalesce(OLD.vl_faturado_ndc,0))) or 
		((coalesce(NEW.vl_faturado,0) < 0) and (coalesce(NEW.vl_faturado,0) <> coalesce(OLD.vl_faturado,0))) then 
		select	max(a.ie_cancelamento) 
		into STRICT	ie_cancelamento_w 
		from	pls_fatura_conta c, 
			pls_fatura_evento b, 
			pls_fatura a 
		where	a.nr_sequencia	= b.nr_seq_fatura 
		and	b.nr_sequencia	= c.nr_seq_fatura_evento 
		and	c.nr_sequencia	= NEW.nr_seq_fatura_conta;
		 
		if (ie_cancelamento_w is null) and (coalesce(NEW.nr_lote_contabil,0) = 0) then 
			select	max(nr_seq_conta) 
			into STRICT	nr_seq_conta_w 
			from	pls_conta_mat 
			where	nr_sequencia	= NEW.nr_seq_conta_mat;
			 
			CALL wheb_mensagem_pck.exibir_mensagem_abort( 281537,	'NR_SEQ_CONTA=' || nr_seq_conta_w || ';' || 
										'NR_SEQ_CONTA_POS=' || NEW.nr_seq_conta_pos_estab );
		end if;
	end if;
	 
	select	max(nr_seq_lote_disc) 
	into STRICT	nr_seq_lote_disc_w 
	from	pls_conta_pos_estabelecido 
	where	nr_sequencia	= NEW.nr_seq_conta_pos_estab;
	 
	if (nr_seq_lote_disc_w is null) then 
		select	max(nr_seq_lote_disc) 
		into STRICT	nr_seq_lote_disc_w 
		from	pls_conta_pos_mat 
		where	nr_sequencia	= NEW.nr_seq_pos_mat;
	end if;
	 
	if (nr_seq_lote_disc_w is null) then 
		select	max(x.nr_sequencia) 
		into STRICT	nr_seq_lote_fat_w 
		from	pls_fatura_conta	c, 
			pls_fatura_evento	b, 
			pls_lote_faturamento	x, 
			pls_fatura		a			 
		where	a.nr_sequencia	= b.nr_seq_fatura 
		and	b.nr_sequencia	= c.nr_seq_fatura_evento 
		and	x.nr_sequencia	= a.nr_seq_lote 
		and	c.nr_sequencia	= NEW.nr_seq_fatura_conta 
		and	a.ie_cancelamento is null 
		and	x.nr_seq_lote_disc is not null;
		 
		if (nr_seq_lote_fat_w is not null) then			 
			CALL wheb_mensagem_pck.exibir_mensagem_abort( 290979,	'NR_SEQ_LOTE_FAT=' || nr_seq_lote_fat_w || ';' || 
										'NR_SEQ_LOTE_DISC=' || nr_seq_lote_disc_w || ';' || 
										'NR_SEQ_POS_ESTAB=' || NEW.nr_seq_conta_pos_estab );
		end if;
	end if;
end if;
 
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pls_fatura_mat_insert() FROM PUBLIC;

CREATE TRIGGER pls_fatura_mat_insert
	BEFORE INSERT OR UPDATE ON pls_fatura_mat FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pls_fatura_mat_insert();

