-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS usuario_controle_atual ON usuario_controle CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_usuario_controle_atual() RETURNS trigger AS $BODY$
DECLARE

qt_min_w			double precision;
qt_min_normal_w		double precision;
dt_admissao_w			timestamp;
qt_dia_semana_w		bigint;
cd_estabelecimento_w		bigint;
qt_feriado_w			bigint;
ie_funcionario_w		varchar(01);
sql_query_w				varchar(4000);
ds_dt_entrada_w			varchar(4000);
ds_dt_saida_w			varchar(4000);
ds_qt_diferenca_w		varchar(4000);
vl_param_59_w			varchar(1);

BEGIN

if	((user = 'CORP' or user = 'TASY')
	and	wheb_usuario_pck.get_cd_setor_atendimento in (2,4,7)) then

	vl_param_59_w := Obter_Param_Usuario_padrao(296, 59, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento);

	sql_query_w :=
	'select	max(dt_entrada)
	from	usuario_controle
	where	nm_usuario = :nm_usuario';

	ds_dt_entrada_w := obter_valor_dinamico_char_bv(sql_query_w, 'nm_usuario=' || NEW.nm_usuario, ds_dt_entrada_w);

	if (ds_dt_entrada_w is not null) then
		BEGIN

			sql_query_w :=
			'select	max(u.dt_saida)
			from	usuario_controle u
			where	u.nm_usuario = :nm_usuario
			and		u.dt_entrada =	(
										select	max(dt_entrada)
										from	usuario_controle
										where	nm_usuario = :nm_usuario
									)';

			ds_dt_saida_w := obter_valor_dinamico_char_bv(sql_query_w, 'nm_usuario=' || NEW.nm_usuario, ds_dt_saida_w);

			sql_query_w :=
			'select	max(u.qt_min_nreg)
			from	usuario_controle u
			where	u.nm_usuario = :nm_usuario
			and		u.dt_entrada =	(
										select	max(dt_entrada)
										from	usuario_controle
										where	nm_usuario = :nm_usuario
									)';

			ds_qt_diferenca_w := obter_valor_dinamico_char_bv(sql_query_w, 'nm_usuario=' || NEW.nm_usuario, ds_qt_diferenca_w);

			if	((ds_dt_saida_w is null or ds_qt_diferenca_w <> 0)
				and vl_param_59_w = 'S'
				and TG_OP = 'INSERT') then
				BEGIN
					select	pkg_date_formaters.to_varchar(	ds_dt_entrada_w,
										pkg_date_formaters.localize_mask(	'shortThreeLetterMonth',
														pkg_date_formaters.getUserLanguageTag(	wheb_usuario_pck.get_cd_estabelecimento,
																			wheb_usuario_pck.get_nm_usuario
																			)
														),
										wheb_usuario_pck.get_cd_estabelecimento)
					into STRICT	ds_dt_entrada_w
					;
					CALL wheb_mensagem_pck.exibir_mensagem_abort(1056384, 'DT_ENTRADA=' || ds_dt_entrada_w);
				end;
			end if;
		end;
	end if;
end if;

select max(coalesce(ie_funcionario,'N')),
	max(a.cd_estabelecimento)
into STRICT	ie_funcionario_w,
	cd_estabelecimento_w
from 	pessoa_fisica b,
	usuario a
where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
and	a.nm_usuario 		= NEW.nm_usuario;

if (ie_funcionario_w = 'N') then
	qt_min_normal_w	:= 480;
else
	qt_min_normal_w	:= 528;
end if;

select	Campo_Numerico(Obter_Cod_Dia_Semana(NEW.dt_referencia))
into STRICT	qt_dia_semana_w
;

select	count(*)
into STRICT	qt_feriado_w
from	feriado
where	cd_estabelecimento	= cd_estabelecimento_w
and	dt_feriado		= NEW.dt_referencia;
if (qt_dia_semana_w in (1,7)) or (qt_feriado_w > 0) then
	qt_min_normal_w		:= 0;
end if;

qt_min_w	:= NEW.qt_min_total - NEW.qt_min_intervalo;
if (qt_min_w > qt_min_normal_w) then
	NEW.qt_min_normal	:= qt_min_normal_w;
	NEW.qt_min_extra	:= qt_min_w - qt_min_normal_w;
else
	NEW.qt_min_normal	:= qt_min_w;
	NEW.qt_min_extra	:= 0;
end if;

RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_usuario_controle_atual() FROM PUBLIC;

CREATE TRIGGER usuario_controle_atual
	BEFORE INSERT OR UPDATE ON usuario_controle FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_usuario_controle_atual();

