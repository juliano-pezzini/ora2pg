-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS atend_escala_capurro_atual ON escala_capurro CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_atend_escala_capurro_atual() RETURNS trigger AS $BODY$
declare

exec_w               	varchar(200);
qt_dias_w            	bigint;
qt_semanas_w         	bigint;
qt_reg_w             	bigint;
cd_estabelecimento_w 	bigint;
ie_ig_capurro_w      	varchar(5);
ds_erro_w				varchar(4000);
ds_parametros_w			varchar(4000);
BEGIN
  BEGIN
	if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
		goto Final;
	end if;

	BEGIN
		exec_w := 'begin calcula_escala_capurro_md(:1,:2,:3,:4,:5,:6,:7); end;';

		EXECUTE exec_w using in NEW.qt_textura_pele,
									   in NEW.qt_pregas_plantares, 
									   in NEW.qt_glandula_mamaria, 
									   in NEW.qt_formacao_mamilo, 
									   in NEW.qt_formato_orelha,  
									   out qt_dias_w, 
									   out qt_semanas_w;
    exception
	    when others then
            ds_erro_w := substr(sqlerrm, 1, 4000);
            ds_parametros_w := 	substr( ':new.nr_atendimento: '||NEW.nr_atendimento||'-:new.nr_atend_rn: '||NEW.nr_atend_rn||'-new.qt_textura_pele: '||NEW.qt_textura_pele||'-:new.qt_pregas_plantares: '||NEW.qt_pregas_plantares||
										'-:new.qt_glandula_mamaria: '||NEW.qt_glandula_mamaria||'-:new.qt_formacao_mamilo: '||NEW.qt_formacao_mamilo||'- :new.qt_formato_orelha: '||NEW.qt_formato_orelha||
										'-qt_dias_w: '||qt_dias_w||'-qt_semanas_w: '||qt_semanas_w, 1, 4000);
            CALL gravar_log_medical_device('ATEND_ESCALA_CAPURRO_ATUAL', 'CALCULA_ESCALA_CAPURRO_MD', ds_parametros_w, ds_erro_w, NEW.nm_usuario, 'N');
			qt_dias_w    := null;
			qt_semanas_w := null;
	end;

	NEW.qt_dias    := qt_dias_w;
	NEW.qt_semanas	:= qt_semanas_w;

	if (coalesce(OLD.dt_avaliacao,LOCALTIMESTAMP + interval '10 days') <> NEW.dt_avaliacao) and (NEW.dt_avaliacao is not null) then
		NEW.ds_utc		:= obter_data_utc(NEW.dt_avaliacao, 'HV');
	end if;

	if (coalesce(OLD.dt_liberacao,LOCALTIMESTAMP + interval '10 days') <> NEW.dt_liberacao) and (NEW.dt_liberacao is not null) then
		NEW.ds_utc_atualizacao	:= obter_data_utc(NEW.dt_liberacao,'HV');
	end if;

	select	max(cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from	atendimento_paciente
	where	nr_atendimento	= NEW.nr_atendimento;

	select	count(*)
	into STRICT	qt_reg_w
	from	nascimento
	where	nr_atendimento = NEW.nr_atendimento;

	select	coalesce(max(ie_ig_capurro),'N')
	into STRICT	ie_ig_capurro_w
	from	parametro_medico
	where	cd_estabelecimento	= cd_estabelecimento_w;

	if (qt_reg_w > 0) and (ie_ig_capurro_w = 'S') then
		update	nascimento
		set	qt_sem_ig = NEW.qt_semanas,
			qt_dia_ig = NEW.qt_dias
		where	nr_atendimento = NEW.nr_atendimento;
	end if;

	<<Final>>
	qt_reg_w	:= 0;
  END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_atend_escala_capurro_atual() FROM PUBLIC;

CREATE TRIGGER atend_escala_capurro_atual
	BEFORE INSERT OR UPDATE ON escala_capurro FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_atend_escala_capurro_atual();

