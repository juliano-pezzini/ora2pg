-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pessoa_classif_atual ON pessoa_classif CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pessoa_classif_atual() RETURNS trigger AS $BODY$
declare

nm_pessoa_fisica_w		varchar(60);
cd_pessoa_fisica_w		varchar(10);
ds_mensagem_w			varchar(4000);
ds_classif_ant_w		varchar(80);
ds_classif_atual_w		varchar(80);
nm_usuario_w			usuario.nm_usuario%type;
ie_allow_exec_trigger_w		varchar(2);
exp_include_classif_person_w	integer;
exp_classification_w		integer;
exp_change_classif_person_w	integer;
exp_previous_classification_w	integer;
exp_current_classificacation_w	integer;
exp_exclusion_classif_person_w	integer;


BEGIN

ie_allow_exec_trigger_w	:= 'S';
exp_include_classif_person_w := 298872;
exp_classification_w := 298873;
exp_change_classif_person_w := 298875;
exp_previous_classification_w := 298876;
exp_current_classificacation_w := 298879;
exp_exclusion_classif_person_w := 298880;
if (wheb_usuario_pck.get_ie_executar_trigger = ie_allow_exec_trigger_w) then
	if	(((TG_OP = 'UPDATE') or (TG_OP = 'DELETE')) and (NEW.cd_pessoa_fisica is not null)) then
		BEGIN
		select	max(nm_pessoa_fisica),
			max(cd_pessoa_fisica)
		into STRICT	nm_pessoa_fisica_w,
			cd_pessoa_fisica_w
		from	pessoa_fisica
		where	cd_pessoa_fisica = OLD.cd_pessoa_fisica;

		select	max(ds_classificacao)
		into STRICT	ds_classif_ant_w
		from	classif_pessoa
		where	nr_sequencia = OLD.nr_seq_classif;
		end;
	end if;

	if	(((TG_OP = 'INSERT') or (TG_OP = 'UPDATE')) and (NEW.cd_pessoa_fisica is not null)) then
		BEGIN
		select	max(nm_pessoa_fisica),
			max(cd_pessoa_fisica)
		into STRICT	nm_pessoa_fisica_w,
			cd_pessoa_fisica_w
		from	pessoa_fisica
		where	cd_pessoa_fisica = NEW.cd_pessoa_fisica;
		
		select	max(ds_classificacao)
		into STRICT	ds_classif_atual_w
		from	classif_pessoa
		where	nr_sequencia = NEW.nr_seq_classif;
		end;
	end if;

	if (TG_OP = 'INSERT') then
		ds_mensagem_w := Wheb_mensagem_pck.get_texto(exp_include_classif_person_w) || chr(13) || chr(10) ||
				Wheb_mensagem_pck.get_texto(exp_classification_w) || ' ' || ds_classif_atual_w;
	elsif (TG_OP = 'UPDATE') then
		ds_mensagem_w := Wheb_mensagem_pck.get_texto(exp_change_classif_person_w) || chr(13) || chr(10) ||
				Wheb_mensagem_pck.get_texto(exp_previous_classification_w) || ' ' || ds_classif_ant_w || chr(13) || chr(10) ||
				Wheb_mensagem_pck.get_texto(exp_current_classificacation_w) || ' ' || ds_classif_atual_w;
	elsif (TG_OP = 'DELETE') then
		ds_mensagem_w := Wheb_mensagem_pck.get_texto(exp_exclusion_classif_person_w) || chr(13) || chr(10) ||
				Wheb_mensagem_pck.get_texto(exp_previous_classification_w) || ' ' || ds_classif_ant_w;	
	end if;

	if (nm_usuario_w is null) then
		nm_usuario_w := coalesce(NEW.nm_usuario, OLD.nm_usuario);
	end if;

	if (NEW.cd_pessoa_fisica is not null) then
		insert into pessoa_fisica_historico(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nm_pessoa_fisica,
					cd_pessoa_fisica,
					dt_liberacao,
					ds_historico)
				values (	nextval('pessoa_fisica_historico_seq'),
					LOCALTIMESTAMP,
					coalesce(nm_usuario_w,NEW.nm_usuario),
					LOCALTIMESTAMP,
					coalesce(nm_usuario_w,NEW.nm_usuario),
					nm_pessoa_fisica_w,
					cd_pessoa_fisica_w,
					LOCALTIMESTAMP,
					ds_mensagem_w);
	end if;
end if;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pessoa_classif_atual() FROM PUBLIC;

CREATE TRIGGER pessoa_classif_atual
	BEFORE INSERT OR UPDATE OR DELETE ON pessoa_classif FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pessoa_classif_atual();

