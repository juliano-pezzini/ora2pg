-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS tx_receptor_update ON tx_receptor CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_tx_receptor_update() RETURNS trigger AS $BODY$
declare
qt_registro_w			integer;
nr_seq_tratamento_w		bigint;
cd_estabelecimento_w		integer;
nr_seq_motivo_fim_tratamento_w	bigint;
nr_seq_motivo_fim_transp_w 	bigint;
nr_seq_tranp_transpl_w		bigint;
qt_reg_w	smallint;
ie_finaliza_pre_transp_w	varchar(1);
BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

ie_finaliza_pre_transp_w := obter_param_usuario(7006, 24, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_finaliza_pre_transp_w);

if (NEW.dt_transplante is not null) and (OLD.dt_transplante is null) then

	cd_estabelecimento_w	:= tx_obter_estab_receptor(NEW.nr_sequencia);

	select 	coalesce(max(nr_seq_motivo_fim_tratamento),0),
		coalesce(max(nr_seq_motivo_fim_trat_transp),0)
	into STRICT	nr_seq_motivo_fim_tratamento_w,
		nr_seq_motivo_fim_transp_w
	from 	tx_parametros
	where	cd_estabelecimento = coalesce(cd_estabelecimento_w,cd_estabelecimento);

	select 	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_tratamento_w
	from   	paciente_tratamento
	where  	ie_tratamento = 'TX'
	and	nr_seq_receptor = NEW.nr_sequencia;

	if (nr_seq_tratamento_w > 0) and (nr_seq_motivo_fim_tratamento_w > 0) then

		update 	paciente_tratamento
		set	dt_final_tratamento = LOCALTIMESTAMP,
			nr_seq_motivo_fim = nr_seq_motivo_fim_tratamento_w
		where	nr_sequencia  = nr_seq_tratamento_w;
	end if;


	if (ie_finaliza_pre_transp_w = 'N') then

		select  nextval('paciente_tratamento_seq')
		into STRICT	nr_seq_tranp_transpl_w
		;

		insert into paciente_tratamento(nr_sequencia,
						cd_pessoa_fisica,
						ie_tratamento,
						dt_inicio_tratamento,
						dt_final_tratamento,
						ds_motivo_fim,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ds_observacao,
						nr_seq_motivo_fim,
						nr_seq_receptor)
				values (nr_seq_tranp_transpl_w,
						NEW.cd_pessoa_fisica,
						'TR',
						NEW.dt_transplante,
						null,
						null,
						LOCALTIMESTAMP,
						NEW.nm_usuario,
						LOCALTIMESTAMP,
						NEW.nm_usuario,
						null,
						null,
						NEW.nr_sequencia);

		if (nr_seq_motivo_fim_transp_w > 0) then

			update 	paciente_tratamento
			set	dt_final_tratamento = LOCALTIMESTAMP,
				nr_seq_motivo_fim = nr_seq_motivo_fim_transp_w
			where	nr_sequencia  = nr_seq_tranp_transpl_w;

		end if;
	end if;

	insert into paciente_tratamento(nr_sequencia,
					cd_pessoa_fisica,
					ie_tratamento,
					dt_inicio_tratamento,
					dt_final_tratamento,
					ds_motivo_fim,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ds_observacao,
					nr_seq_motivo_fim,
					nr_seq_receptor)
			values (nextval('paciente_tratamento_seq'),
					NEW.cd_pessoa_fisica,
					'PT',
					NEW.dt_transplante,
					null,
					null,
					LOCALTIMESTAMP,
					NEW.nm_usuario,
					LOCALTIMESTAMP,
					NEW.nm_usuario,
					null,
					null,
					NEW.nr_sequencia);

end if;

if (NEW.dt_transplante is null) and (OLD.dt_transplante is not null) then

	select 	count(*)
	into STRICT	qt_registro_w
	from 	paciente_tratamento
	where 	ie_tratamento in ('PT','TR')
	and	nr_seq_receptor	= NEW.nr_sequencia;

	if (qt_registro_w > 0) then
		--rase_application_error(-20011,'Existem tratamentos de transplante e pós transplante para o receptor. ' || chr(10) || 'A data de transplante não pode ser retirada #@#@');
		CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(232949);
	end if;

end if;
<<Final>>
qt_reg_w	:= 0;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_tx_receptor_update() FROM PUBLIC;

CREATE TRIGGER tx_receptor_update
	BEFORE UPDATE ON tx_receptor FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_tx_receptor_update();

