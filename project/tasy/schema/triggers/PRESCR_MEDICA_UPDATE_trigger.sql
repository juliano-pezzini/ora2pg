-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS prescr_medica_update ON prescr_medica CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_prescr_medica_update() RETURNS trigger AS $BODY$
declare
ie_tipo_atendimento_w		integer;
cd_convenio_w				convenio.cd_convenio%type;
cd_categoria_w				categoria_convenio.cd_categoria%type;
cd_setor_ps_w				integer;
qt_setor_int_w				integer;
dt_entrada_w				timestamp;
nr_seq_exame_w				bigint;
cd_material_exame_w			varchar(20);
nr_seq_mat_w				bigint;
qt_coleta_w					smallint;
qt_medico_w					bigint;
cd_estabelecimento_w		smallint;
nr_seq_grupo_w				bigint;
ie_padrao_amostra_w			varchar(5);
VarObrigaMedico_w			varchar(1);
cd_barras_w					varchar(30);
qt_volume_padrao_w			integer;
qt_tempo_padrao_w			real;
nr_seq_origem_w				integer;
nr_seq_prescr_w				integer;
nr_seq_prescr_proc_mat_w	bigint;
ie_sexo_w					varchar(1);
cd_perfil_ativo_w			integer;
ds_maq_user_w				varchar(80);
ie_prescr_rn_w				varchar(1);
ds_prescr_rn_w				varchar(255);
qt_reg_w					smallint;
ie_atualiza_estab_w			varchar(03);
ds_origem_w					varchar(1800);
hr_prescr_copia_w			varchar(10);
cd_pessoa_cirurgia_w		varchar(10);
ie_vincula_atend_w			varchar(10);
nr_seq_interno_w			bigint;
ie_integracao_ativa_w		varchar(1);
ie_considera_minuto_w		varchar(1);
ie_nova_prescr_val_w		varchar(1);
ie_exclui_atend_prescr_w	varchar(1);
dt_rep_pt_w					timestamp;
dt_rep_pt2_w				timestamp;
dt_prim_setor_w				timestamp;
ie_inicia_dia_plano_w		varchar(1);
ie_atualiza_w				varchar(1);
ie_atualizar_data_hemodi_w	varchar(1);
ie_calcula_validade_hem_w	varchar(1);
nr_seq_status_padrao_oft_w	bigint	:= null;
ie_permite_guia_senha_atend_w	varchar(1);
ie_recalc_val_w				varchar(1);
ds_stack_w					varchar(2000);
ds_alteracao_w				varchar(1800);
ie_tipo_lib_w				varchar(1) := 'M';
dt_liberacao_w				timestamp := LOCALTIMESTAMP;
cont_w						bigint;
qt_exame_lab_w				bigint := 0;
reg_integracao_w			gerar_int_padrao.reg_integracao;
ds_param_integ_hl7_w		varchar(2000);

c01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_exame,
		a.cd_material_exame,
		b.nr_seq_grupo,
		a.nr_seq_origem
	from	prescr_procedimento a,
		exame_laboratorio b
	where 	a.nr_prescricao = NEW.nr_prescricao
	  and 	a.nr_seq_exame 	= b.nr_seq_exame
	  and 	a.nr_seq_exame 	is not null;

c02 CURSOR FOR
	SELECT	distinct
		b.nr_sequencia,
		coalesce(c.qt_coleta,1),
		coalesce(b.qt_volume_padrao,0),
		coalesce(b.qt_tempo_padrao,0)
	from	exame_lab_material c,
		material_exame_lab b
	where 	cd_material_exame_w = b.cd_material_exame
	  and 	c.nr_seq_material = b.nr_sequencia
	  and 	c.nr_seq_exame = nr_seq_exame_w
	  and (b.ie_volume_tempo = 'S' or coalesce(c.qt_coleta,1) > 0)
	  and 	not exists (	SELECT 	1
							from 	material_exame_lab y,
								prescr_proc_material x
							where 	x.nr_prescricao = NEW.nr_prescricao
							and 	x.nr_seq_material = y.nr_sequencia
							and 	((x.nr_seq_grupo = nr_seq_grupo_w) or (ie_padrao_amostra_w in ('PM','PM11','PM13')))
							and 	y.cd_material_exame = cd_material_exame_w);

c03 CURSOR FOR  --diagnostika anatomo
	SELECT	nr_seq_interno
	from	prescr_procedimento
	where 	nr_prescricao = NEW.nr_prescricao
	and 	nr_seq_proc_interno is not null
	and	obter_se_integr_proc_interno(nr_seq_proc_interno,1,1,ie_lado,NEW.cd_estabelecimento) = 'S'
	and	cd_cgc_laboratorio = '55578504000185';

c04 CURSOR FOR  --diagnostika colpo
	SELECT	nr_seq_interno
	from	prescr_procedimento
	where 	nr_prescricao = NEW.nr_prescricao
	and 	nr_seq_proc_interno is not null
	and	obter_se_integr_proc_interno(nr_seq_proc_interno,1,2,ie_lado,NEW.cd_estabelecimento) = 'S'
	and	cd_cgc_laboratorio = '55578504000185';

c05 CURSOR FOR
	SELECT	a.cd_procedimento,
		a.nr_seq_exame,
		a.nr_seq_interno
	from	prescr_procedimento a,
		exame_laboratorio b
	where 	a.nr_prescricao = NEW.nr_prescricao
	  and 	a.dt_suspensao 	is null
	  and 	a.nr_seq_exame 	is not null
	  and 	a.nr_seq_exame 	= b.nr_seq_exame
	  and 	b.ie_anatomia_patologica = 'S';
BEGIN
  BEGIN

BEGIN
ie_atualiza_estab_w := Obter_Param_Usuario(-15, 6, obter_perfil_ativo, NEW.nm_usuario, 0, ie_atualiza_estab_w);

CALL wheb_assist_pck.set_informacoes_usuario(NEW.cd_estabelecimento,obter_perfil_ativo,NEW.nm_usuario);

ie_atualizar_data_hemodi_w := wheb_assist_pck.obterValorParametroREP(972, ie_atualizar_data_hemodi_w);
ie_calcula_validade_hem_w := wheb_assist_pck.obterValorParametroREP(1016, ie_calcula_validade_hem_w);

ie_nova_prescr_val_w := wheb_assist_pck.obterValorParametroREP(753, ie_nova_prescr_val_w);
if (NEW.ie_prescr_emergencia = 'S') then
	if (ie_nova_prescr_val_w = 'S') then
		ie_nova_prescr_val_w	:= 'N';
	end if;
end if;

ie_considera_minuto_w := wheb_assist_pck.obterValorParametroREP(689, ie_considera_minuto_w);
if (ie_considera_minuto_w = 'D') then
	select	coalesce(max(ie_minutos_rep),'S')
	into STRICT	ie_considera_minuto_w
	from	setor_atendimento
	where	cd_setor_atendimento = NEW.cd_setor_atendimento;
end if;

exception
when others then
	ie_atualiza_estab_w	:= 'N';
end;

if (NEW.nr_controle is not null) and (OLD.nr_controle is null) then

	NEW.dt_controle_prescr := LOCALTIMESTAMP;

end if;

if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;
if (to_char(NEW.dt_primeiro_horario,'ss') <> '00') then
	NEW.dt_primeiro_horario	:= trunc(NEW.dt_primeiro_horario,'mi') + 1/1440;
end if;

if (NEW.ie_recem_nato = 'S') then
	SELECT * FROM obter_se_pf_prescr_rn(NEW.cd_estabelecimento, NEW.cd_pessoa_fisica, NEW.nm_usuario, ie_prescr_rn_w, ds_prescr_rn_w) INTO STRICT ie_prescr_rn_w, ds_prescr_rn_w;
	if (ie_prescr_rn_w = 'N') then
		-- #@DS_MENSAGEM#@

		CALL Wheb_mensagem_pck.exibir_mensagem_abort(173258, 'DS_MENSAGEM=' || ds_prescr_rn_w);
	end if;
end if;

if	((NEW.cd_medico <> OLD.cd_medico) or
	 (NEW.cd_medico is null AND OLD.cd_medico is not null)) then

	ds_stack_w := substr(dbms_utility.format_call_stack,1,1800);
	-- Excluir o log da trigger apos encontrar o dano da OS 1378860 - Solicitacao feita pela analista Claudiomar


	CALL gravar_log_tasy(10007, substr('PRESCR_MEDICA_UPDATE ALTERACAO MEDICO :new.nr_prescricao : ' || NEW.nr_prescricao
						|| ' :new.cd_medico : ' || NEW.cd_medico
						|| ' :old.cd_medico : ' || OLD.cd_medico
						|| ' ds_stack_w : ' || ds_stack_w,1,1800), NEW.nm_usuario);

	if (NEW.cd_medico is not null) then
		CALL Consistir_impedimento_pf(NEW.cd_medico,'REP',NEW.nm_usuario);
	end if;
end if;

if	(NEW.cd_prescritor is not null AND OLD.cd_prescritor is null) or
	(NEW.cd_prescritor is not null AND OLD.cd_prescritor <> NEW.cd_prescritor) then
	CALL Consistir_impedimento_pf(NEW.cd_prescritor,'REP',NEW.nm_usuario);
end if;

if (NEW.dt_liberacao_farmacia is not null) and (OLD.dt_liberacao_farmacia is not null) and (NEW.dt_liberacao_farmacia <> OLD.dt_liberacao_farmacia) then
	NEW.dt_liberacao_farmacia	:= OLD.dt_liberacao_farmacia;
end if;

if (NEW.dt_liberacao is not null) and (OLD.dt_liberacao is null) then
	BEGIN

	select	coalesce(max('S'),'N')
	into STRICT	ie_integracao_ativa_w
	from 	empresa_integr_dados where	nr_seq_empresa_integr = 13
	and 	ie_situacao = 'A' LIMIT 1;

	if (ie_integracao_ativa_w = 'S') then
		open c03;
		loop
		fetch c03 into
			nr_seq_interno_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			BEGIN
			CALL gerar_dados_diagnostika(NEW.nr_prescricao, nr_seq_interno_w, 1, NEW.nm_usuario);--gera xml diagnostika anatomo
			end;
		end loop;
		close c03;

		open c04;
		loop
		fetch c04 into
			nr_seq_interno_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
			BEGIN
			CALL gerar_dados_diagnostika(NEW.nr_prescricao, nr_seq_interno_w, 2, NEW.nm_usuario);--gera xml diagnostika colpo
			end;
		end loop;
		close c04;
	end if;

	end;
end if;

if (wheb_usuario_pck.is_evento_ativo(288) = 'S') and
		(((obter_valor_param_usuario(924, 1179, wheb_usuario_pck.Get_cd_perfil, wheb_usuario_pck.Get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento) = 'S') and (OLD.dt_liberacao_medico is null and NEW.dt_liberacao_medico is not null)) or
		((OLD.dt_liberacao is null and NEW.dt_liberacao is not null) and (obter_valor_param_usuario(924, 1179, wheb_usuario_pck.Get_cd_perfil, wheb_usuario_pck.Get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento) <> 'S'))) then
	CALL integrar_softlab_ws(288, NEW.cd_pessoa_fisica, NEW.nr_prescricao, null, null, NEW.nm_usuario, 1, 'N');
end if;

if	(NEW.dt_liberacao is not null AND OLD.dt_liberacao is null) or
	((NEW.dt_liberacao is null) and (NEW.dt_liberacao_medico is not null) and (OLD.dt_liberacao_medico is null)) then
	if (coalesce(NEW.nr_seq_consulta_oft,0) > 0) then
		nr_seq_status_padrao_oft_w := Obter_Param_Usuario(3010, 72, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, nr_seq_status_padrao_oft_w);
		if (coalesce(nr_seq_status_padrao_oft_w,0) > 0) then
			BEGIN

			update	oft_consulta
			set		nr_seq_status		=	CASE WHEN nr_seq_status_padrao_oft_w = NULL THEN nr_seq_status  ELSE nr_seq_status_padrao_oft_w END
			where	nr_sequencia		=	NEW.nr_seq_consulta_oft;

			exception
			when others then
				nr_seq_status_padrao_oft_w := null;
			end;
		end if;
	end if;
end if;

if (to_char(NEW.dt_prescricao,'dd/mm/yyyy') = '30/12/1899') then
	--A data da prescricao informada nao e valida. #@DT_PRESCRICAO#@

	CALL Wheb_mensagem_pck.exibir_mensagem_abort(173273, 'DT_PRESCRICAO=' || to_char(NEW.dt_prescricao,'dd/mm/yyyy hh24:mi:ss'));
end if;

if (OLD.nr_atendimento is null) and (NEW.nr_atendimento is not null) then
	update	can_ordem_prod
	set	nr_atendimento	= NEW.nr_atendimento
	where	nr_prescricao	= NEW.nr_prescricao
	and	nr_atendimento is null;
end if;

select	count(*)
into STRICT	qt_medico_w
from	medico where		cd_pessoa_fisica	= NEW.cd_medico LIMIT 1;

if	((qt_medico_w = 0) and
	 ((OLD.cd_medico <> NEW.cd_medico) or 
	  (OLD.cd_medico is not null AND NEW.cd_medico is null))) then

	VarObrigaMedico_w := wheb_assist_pck.obterValorParametroREP(1037, VarObrigaMedico_w);
	if (VarObrigaMedico_w = 'S') then
		--A pessoa informada no campo Medico nao esta cadastrada como medico.

		CALL Wheb_mensagem_pck.exibir_mensagem_abort(173291);
	end if;
end if;

if	((OLD.dt_liberacao is not null) or (OLD.dt_liberacao_medico is not null)) and (OLD.nr_atendimento is not null) and (NEW.nr_atendimento is null) then
	ie_exclui_atend_prescr_w := obter_param_usuario(924, 1075, wheb_usuario_pck.Get_cd_perfil, wheb_usuario_pck.Get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_exclui_atend_prescr_w);
	if (coalesce(ie_exclui_atend_prescr_w,'N') = 'N') then
		--Uma prescricao liberada nao pode ser desvinculada de seu atendimento.

		CALL Wheb_mensagem_pck.exibir_mensagem_abort(173292);
	end if;
end if;

if (NEW.cd_estabelecimento is not null) and (NEW.nr_atendimento is not null) and (coalesce(OLD.nr_atendimento,0) <> NEW.nr_atendimento) and (ie_atualiza_estab_w = 'N') then
	select	cd_estabelecimento
	into STRICT	cd_estabelecimento_w
	from	atendimento_paciente
	where	nr_atendimento = NEW.nr_atendimento;

	if (cd_estabelecimento_w <> NEW.cd_estabelecimento) then
		--O estabelecimento da prescricao nao pode ser diferente do estabelecimento do atendimento. (Parametro [6] da funcao "Transferencia de gastos")

		CALL Wheb_mensagem_pck.exibir_mensagem_abort(173297);
	end if;
end if;

if (NEW.cd_setor_atendimento is null) and (NEW.nr_atendimento is not null) then
	select	coalesce(max(ie_tipo_atendimento),0)
	into STRICT	ie_tipo_atendimento_w
	from	atendimento_paciente
	where	nr_atendimento	= NEW.nr_atendimento;

	if (ie_tipo_atendimento_w = 3) then
		select	max(a.cd_setor_atendimento)
		into STRICT	cd_setor_ps_w
		from	setor_atendimento b,
				atend_paciente_unidade a
		where	a.nr_atendimento		= NEW.nr_atendimento
		and		a.cd_setor_atendimento	= b.cd_setor_atendimento
		and		b.cd_classif_setor		= 1;

		if (cd_setor_ps_w is not null) then
			select	count(*)
			into STRICT	qt_setor_int_w
			from	setor_atendimento b,
					atend_paciente_unidade a where		a.nr_atendimento		= NEW.nr_atendimento
			and		a.cd_setor_atendimento	= b.cd_setor_atendimento
			and		b.cd_classif_setor		in (3,4,8) LIMIT 1;

			if (qt_setor_int_w = 0) then
				NEW.cd_setor_atendimento	:= cd_setor_ps_w;
			end if;
		end if;
	end if;
end if;

if (NEW.cd_setor_atendimento is null) and (OLD.nr_atendimento is null) and (NEW.nr_atendimento is not null) then
	ie_vincula_atend_w := wheb_assist_pck.obterValorParametroREP(100, ie_vincula_atend_w);
	if (ie_vincula_atend_w = 'S') then
		NEW.cd_setor_atendimento	:= Obter_setor_atendimento(NEW.nr_atendimento);
	end if;
end if;

if (NEW.cd_setor_atendimento is not null) and (NEW.cd_setor_atendimento <> OLD.cd_setor_atendimento) then
	BEGIN
	ds_origem_w := substr(dbms_utility.format_call_stack,1,1800);
	update	ap_lote
	set	cd_setor_ant		= OLD.cd_setor_atendimento
	where	nr_prescricao		= NEW.nr_prescricao
	and	ie_status_lote		= 'G';

	update	ap_lote
	set	cd_setor_atendimento	= NEW.cd_setor_atendimento
	where	nr_prescricao		= NEW.nr_prescricao
	and	ie_status_lote 		= 'G';
	CALL fleury_limpa_validacao_item(NEW.nr_prescricao, null);

	end;
end if;

if (NEW.dt_suspensao is not null) and (OLD.dt_suspensao is null) then
	BEGIN
	ds_maq_user_w	:= substr(obter_inf_sessao(0) ||' - ' || obter_inf_sessao(1),1,80);

	cd_perfil_ativo_w	:= obter_perfil_ativo;

	update	ap_lote
	set	dt_cancelamento		= NEW.dt_suspensao,
		nm_usuario_cancelamento	= NEW.nm_usuario_susp,
		ds_maquina_cancelamento 	= ds_maq_user_w,
		cd_perfil_cancel		= cd_perfil_ativo_w,
		ie_status_lote		= 'C'
	where	nr_prescricao		= NEW.nr_prescricao
	and	ie_status_lote in ('G','A','D','E');
	end;
end if;

if (NEW.dt_liberacao is not null) and (OLD.dt_liberacao is null) then
	NEW.dt_emissao_farmacia        := null;
end if;

if (OLD.dt_liberacao is null) and (NEW.dt_liberacao is not null) then
	CALL gerar_status_solucao(NEW.nr_prescricao, coalesce(NEW.dt_inicio_prescr,LOCALTIMESTAMP),NEW.nm_usuario, NEW.cd_funcao_origem, NEW.nr_horas_validade);
end if;

if (OLD.dt_liberacao_medico is null) and
	((coalesce(NEW.cd_funcao_origem,924) <> 950) or (coalesce(NEW.ie_prescr_emergencia,'N') = 'S')) then

	 hr_prescr_copia_w := wheb_assist_pck.obterValorParametroREP(532, hr_prescr_copia_w);
	if	((hr_prescr_copia_w is null) or (to_char(NEW.dt_primeiro_horario,'hh24:mi') <> hr_prescr_copia_w)) then


		if (ie_nova_prescr_val_w = 'N') or
			((NEW.nr_horas_validade <> OLD.nr_horas_validade AND OLD.nr_horas_validade is not null) or
			  ((NEW.dt_primeiro_horario <> OLD.dt_primeiro_horario) or (NEW.dt_primeiro_horario is null))) then
			if (NEW.dt_primeiro_horario is not null) then
				if (to_char(NEW.dt_primeiro_horario,'hh24:mi') < to_char(NEW.dt_prescricao,'hh24:mi')) then
					NEW.dt_inicio_prescr := to_date(to_char(NEW.dt_prescricao+1,'dd/mm/yyyy') || ' ' || to_char(NEW.dt_primeiro_horario,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
				else
					NEW.dt_inicio_prescr := to_date(to_char(NEW.dt_prescricao,'dd/mm/yyyy') || ' ' || to_char(NEW.dt_primeiro_horario,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
				end if;
			else
				NEW.dt_inicio_prescr := NEW.dt_prescricao;
			end if;

		elsif	(NEW.dt_prescricao <> OLD.dt_prescricao AND OLD.dt_prescricao is not null) then
			if (NEW.dt_primeiro_horario is not null) then
				NEW.dt_inicio_prescr := to_date(to_char(NEW.dt_prescricao,'dd/mm/yyyy') || ' ' || to_char(NEW.dt_primeiro_horario,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
			else
				NEW.dt_inicio_prescr := NEW.dt_prescricao;
			end if;
		end if;

	else

		if (ie_nova_prescr_val_w = 'N') or
			((NEW.nr_horas_validade <> OLD.nr_horas_validade AND OLD.nr_horas_validade is not null) or
			  ((NEW.dt_primeiro_horario <> OLD.dt_primeiro_horario) or (NEW.dt_primeiro_horario is null))) then
			if (NEW.dt_primeiro_horario is not null) then
				NEW.dt_inicio_prescr := to_date(to_char(NEW.dt_prescricao,'dd/mm/yyyy') || ' ' || to_char(NEW.dt_primeiro_horario,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
			else
				NEW.dt_inicio_prescr := NEW.dt_prescricao;
			end if;
		elsif	(NEW.dt_prescricao <> OLD.dt_prescricao AND OLD.dt_prescricao is not null) then
			if (NEW.dt_primeiro_horario is not null) then --OS195107
				NEW.dt_inicio_prescr := to_date(to_char(NEW.dt_prescricao,'dd/mm/yyyy') || ' ' || to_char(NEW.dt_primeiro_horario,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
			else
				NEW.dt_inicio_prescr := NEW.dt_prescricao;
			end if;
		end if;
	end if;
end if;

if (ie_nova_prescr_val_w = 'N') or
	(NEW.nr_horas_validade <> OLD.nr_horas_validade AND OLD.nr_horas_validade is not null) or
	  ((NEW.dt_primeiro_horario <> OLD.dt_primeiro_horario) or (NEW.dt_primeiro_horario is null)) then

	if (coalesce(NEW.ie_hemodialise,'N') not in ('E','S')) or (ie_calcula_validade_hem_w	= 'S') then
		NEW.dt_validade_prescr := NEW.dt_inicio_prescr + coalesce(NEW.nr_horas_validade,24) / 24;
		if (ie_considera_minuto_w = 'S') then
			NEW.dt_validade_prescr := trunc(NEW.dt_validade_prescr,'mi') - 1/86400;
		else
			NEW.dt_validade_prescr := trunc(NEW.dt_validade_prescr,'hh24') - 1/86400;
		end if;
	elsif (ie_atualizar_data_hemodi_w = 'S') and (coalesce(OLD.nr_horas_validade,0) = coalesce(NEW.nr_horas_validade,0)) and (OLD.dt_inicio_prescr	= NEW.dt_inicio_prescr) and (OLD.dt_validade_prescr is null) and (NEW.dt_validade_prescr is not null) then

		NEW.dt_validade_prescr := NEW.dt_validade_prescr;
	else
		NEW.dt_validade_prescr := null;
	end if;
elsif	(NEW.dt_prescricao <> OLD.dt_prescricao AND OLD.dt_prescricao is not null) then

	if (coalesce(NEW.ie_hemodialise,'N') not in ('E','S')) or (ie_calcula_validade_hem_w	= 'S') then
		NEW.dt_validade_prescr := NEW.dt_inicio_prescr + coalesce(NEW.nr_horas_validade,24) / 24;
		if (ie_considera_minuto_w = 'S') then
			NEW.dt_validade_prescr := trunc(NEW.dt_validade_prescr,'mi') - 1/86400;
		else
			NEW.dt_validade_prescr := trunc(NEW.dt_validade_prescr,'hh24') - 1/86400;
		end if;
	elsif (ie_atualizar_data_hemodi_w = 'S') and (coalesce(OLD.nr_horas_validade,0) = coalesce(NEW.nr_horas_validade,0)) and (OLD.dt_inicio_prescr	= NEW.dt_inicio_prescr) and (OLD.dt_validade_prescr is null) and (NEW.dt_validade_prescr is not null) then

		NEW.dt_validade_prescr := NEW.dt_validade_prescr;
	else
		NEW.dt_validade_prescr := null;
	end if;
end if;

/*Almir em 28/01/08 OS80755 */


if (OLD.dt_liberacao is null) and (NEW.dt_liberacao is not null) then
	NEW.nm_usuario_lib_enf        := NEW.nm_usuario;
end if;

if (OLD.nr_seq_transcricao is null) and (NEW.nr_seq_transcricao is not null) then

	update	transcricao_prescricao
	set	ie_status	= 'E'
	where	nr_sequencia	= NEW.nr_seq_transcricao;

end if;

if	((OLD.dt_liberacao_medico is not null) or (OLD.dt_liberacao is not null)) and (OLD.cd_setor_atendimento <> NEW.cd_setor_atendimento) and (coalesce(OLD.ie_adep,'S') = 'E')then
	BEGIN
	NEW.ie_adep := 'N';
	end;
end if;

select	max(hr_inicio_prescricao)
into STRICT	dt_prim_setor_w
from	setor_atendimento
where	cd_setor_atendimento = NEW.cd_setor_atendimento;

if (dt_prim_setor_w is not null) and
	((NEW.nr_horas_validade	<> OLD.nr_horas_validade) or (NEW.dt_inicio_prescr		<> OLD.dt_inicio_prescr) or (coalesce(NEW.cd_setor_atendimento,0) <> coalesce(OLD.cd_setor_atendimento,0))) then

	select	coalesce(max(vl_parametro),max(vl_parametro_padrao))
	into STRICT	ie_inicia_dia_plano_w
	from	funcao_parametro
	where	cd_funcao	= 950
	and	nr_sequencia	= 66;

	dt_rep_pt_w		:= trunc(NEW.dt_inicio_prescr);

	dt_prim_setor_w		:= to_date(to_char(NEW.dt_inicio_prescr,'dd/mm/yyyy') || ' ' || to_char(dt_prim_setor_w,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');

	if (NEW.dt_inicio_prescr	< dt_prim_setor_w) then
		dt_rep_pt_w	:= trunc(NEW.dt_inicio_prescr - 1);
		if (NEW.dt_validade_prescr > dt_prim_setor_w) then
			dt_rep_pt2_w	:= (dt_rep_pt_w + 1);
		else
			dt_rep_pt2_w	:= null;
		end if;
	elsif (NEW.nr_horas_validade	> 24) then
		dt_rep_pt2_w	:= (dt_rep_pt_w + 1);
	else
		dt_rep_pt2_w	:= null;
	end if;

	if (ie_inicia_dia_plano_w = 'N') then
		dt_rep_pt_w := dt_rep_pt_w + 1;
		if (dt_rep_pt2_w is not null) then
			dt_rep_pt2_w := dt_rep_pt2_w + 1;
		end if;
	end if;

	NEW.dt_rep_pt	:= dt_rep_pt_w;
	NEW.dt_rep_pt2	:= dt_rep_pt2_w;

	update	prescr_dieta
	set	dt_rep_pt	= NEW.dt_rep_pt,
		dt_rep_pt2	= NEW.dt_rep_pt2
	where	nr_prescricao	= NEW.nr_prescricao;

elsif (NEW.dt_rep_pt is null) and (NEW.dt_rep_pt2 is null) then

	NEW.dt_rep_pt	:= trunc(coalesce(NEW.dt_inicio_prescr,NEW.dt_prescricao));
	NEW.dt_rep_pt2	:= trunc(coalesce(NEW.dt_validade_prescr,NEW.dt_prescricao));

end if;

if (NEW.nr_horas_validade <> OLD.nr_horas_validade) and (NEW.Dt_liberacao_medico	is not null) and (obter_funcao_ativa <> 252) then

	ie_recalc_val_w := wheb_assist_pck.obterValorParametroREP(722, ie_recalc_val_w);
	if (ie_recalc_val_w = 'N') then
		-- Voce nao pode alterar a validade desta prescricao pois a mesma ja esta liberada!

		CALL Wheb_mensagem_pck.exibir_mensagem_abort(185128);
	end if;
end if;

if	((NEW.nr_doc_conv is not null) or (NEW.cd_senha is not null)) then
	ie_permite_guia_senha_atend_w := wheb_assist_pck.obterValorParametroREP(1018, ie_permite_guia_senha_atend_w);
	if (ie_permite_guia_senha_atend_w = 'N') then

		if (obter_se_somente_numero(NEW.nr_doc_conv) = 'S') then
			if (NEW.nr_atendimento = somente_numero(NEW.nr_doc_conv)) then
				-- O numero da Guia nao pode ser igual ao numero do Atendimento.

				CALL Wheb_mensagem_pck.exibir_mensagem_abort(223884);
			end if;
		end if;

		if (obter_se_somente_numero(NEW.cd_senha) = 'S') then
			if (NEW.nr_atendimento = somente_numero(NEW.cd_senha)) then
				-- O numero da Senha nao pode ser igual ao numero do Atendimento.

				CALL Wheb_mensagem_pck.exibir_mensagem_abort(223885);
			end if;
		end if;
	end if;
end if;

if (NEW.dt_emissao_farmacia is null) and (OLD.dt_emissao_farmacia is not null) then
	ds_stack_w := substr(dbms_utility.format_call_stack,1,1800);

	CALL gravar_log_tasy(18,obter_desc_expressao(296208)/*'Prescr = '*/
 ||' = '|| NEW.nr_prescricao || ' | Call stack = ' || ds_stack_w,NEW.nm_usuario);
end if;

if (coalesce(NEW.dt_entrega, NEW.dt_prescricao) < NEW.dt_prescricao) then
	-- A data de entrega nao pode ser menor que a data da prescricao.

	--  Data de entrega: #@DT_ENTREGA#@

	--  Data da prescricao: #@DT_PRESCRICAO#@

	CALL Wheb_mensagem_pck.exibir_mensagem_abort(267493, 'DT_ENTREGA='||to_char(NEW.dt_entrega, 'dd/mm/yyyy hh24:mi:ss')||';DT_PRESCRICAO='||to_char(NEW.dt_prescricao, 'dd/mm/yyyy hh24:mi:ss'));
end if;

if (NEW.dt_entrada_unidade <> OLD.dt_entrada_unidade) then
	ds_alteracao_w := substr(ds_alteracao_w || ' dt_entrada_unidade(' || to_char(OLD.dt_entrada_unidade, 'dd/mm/yyyy hh24:mi:ss') || '/' || to_char(NEW.dt_entrada_unidade, 'dd/mm/yyyy hh24:mi:ss') ||'); ',1,1800);
end if;

if (coalesce(NEW.cd_setor_atendimento,0) <> coalesce(OLD.cd_setor_atendimento,0)) then
	ds_alteracao_w := substr(ds_alteracao_w || ' cd_setor_atendimento(' || coalesce(OLD.cd_setor_atendimento,'0') || '/' || coalesce(NEW.cd_setor_atendimento,'0')||'); ',1,1800);
end if;

if (coalesce(NEW.cd_estabelecimento,0) <> coalesce(OLD.cd_estabelecimento,0)) then
	ds_alteracao_w := substr(ds_alteracao_w || ' cd_estabelecimento(' || coalesce(OLD.cd_estabelecimento,'0') || '/' || coalesce(NEW.cd_estabelecimento,'0')||'); ',1,1800);
end if;

if (OLD.dt_liberacao_farmacia is null) and (NEW.dt_liberacao_farmacia is not null) then
	ds_alteracao_w := substr(ds_alteracao_w || ' dt_liberacao_farmacia: ' || to_char(NEW.dt_liberacao_farmacia, 'dd/mm/yyyy hh24:mi:ss'),1,1800);
end if;

if (coalesce(NEW.dt_primeiro_horario,LOCALTIMESTAMP) <> coalesce(OLD.dt_primeiro_horario,LOCALTIMESTAMP)) then
	ds_alteracao_w := substr(ds_alteracao_w || ' dt_primeiro_horario(' || to_char(OLD.dt_primeiro_horario,'dd/mm/yyyy hh24:mi:ss') || '/' || to_char(NEW.dt_primeiro_horario,'dd/mm/yyyy hh24:mi:ss')||'); ',1,1800);
end if;

if (coalesce(NEW.dt_prescricao, LOCALTIMESTAMP) <> coalesce(OLD.dt_prescricao, LOCALTIMESTAMP)) then
	ds_alteracao_w := substr(ds_alteracao_w || ' dt_prescricao(' || to_char(OLD.dt_prescricao,'dd/mm/yyyy hh24:mi:ss') || '/' || to_char(NEW.dt_prescricao,'dd/mm/yyyy hh24:mi:ss')||'); ',1,1800);
end if;

if (OLD.dt_suspensao is null) and (NEW.dt_suspensao is not null) then
	ds_alteracao_w := substr(ds_alteracao_w || ' dt_suspensao: ' || to_char(NEW.dt_suspensao, 'dd/mm/yyyy hh24:mi:ss'),1,1800);
end if;

if (coalesce(OLD.nr_atendimento,0) <> coalesce(NEW.nr_atendimento,0)) then
	ds_alteracao_w := substr(ds_alteracao_w || ' nr_atendimento(OLD/NEW): (' || OLD.nr_atendimento || '/' || NEW.nr_atendimento || ')',1,1800);
end if;

if (coalesce(NEW.dt_liberacao, LOCALTIMESTAMP - interval '1 days') <> coalesce(OLD.dt_liberacao, LOCALTIMESTAMP - interval '1 days')) then
	ds_alteracao_w := substr(ds_alteracao_w || ' dt_liberacao(' || to_char(OLD.dt_liberacao,'dd/mm/yyyy hh24:mi:ss') || '/' || to_char(NEW.dt_liberacao,'dd/mm/yyyy hh24:mi:ss')||'); ',1,1800);
end if;

if (coalesce(NEW.nm_usuario_lib_enf,'null') <> coalesce(OLD.nm_usuario_lib_enf,'null')) then
	ds_alteracao_w := substr(ds_alteracao_w || ' nm_usuario_lib_enf(' || coalesce(OLD.nm_usuario_lib_enf,'null') || '/' || coalesce(NEW.nm_usuario_lib_enf,'null')||'); ',1,1800);
end if;

if (coalesce(OLD.nr_horas_validade,0) <> coalesce(NEW.nr_horas_validade,0)) then
	ds_alteracao_w := substr(ds_alteracao_w || ' nr_horas_validade(old/new): (' || OLD.nr_horas_validade || '/' || NEW.nr_horas_validade || ')',1,1800);
end if;

if (coalesce(NEW.dt_validade_prescr, LOCALTIMESTAMP) <> coalesce(OLD.dt_validade_prescr, LOCALTIMESTAMP)) then
	ds_alteracao_w := substr(ds_alteracao_w || ' dt_validade_prescr(old/new): (' || to_char(OLD.dt_validade_prescr,'dd/mm/yyyy hh24:mi:ss') || '/' || to_char(NEW.dt_validade_prescr,'dd/mm/yyyy hh24:mi:ss')||'); ',1,1800);
end if;

if (coalesce(NEW.dt_inicio_analise_farm, LOCALTIMESTAMP - interval '1 days') <> coalesce(OLD.dt_inicio_analise_farm, LOCALTIMESTAMP - interval '1 days')) then
	ds_alteracao_w := substr(ds_alteracao_w || ' dt_inicio_analise_farm(' || to_char(OLD.dt_inicio_analise_farm,'dd/mm/yyyy hh24:mi:ss') || '/' || to_char(NEW.dt_inicio_analise_farm,'dd/mm/yyyy hh24:mi:ss')||'); ',1,1800);
end if;

if (coalesce(NEW.nm_usuario_analise_farm, 'null') <> coalesce(OLD.nm_usuario_analise_farm, 'null')) then
	ds_alteracao_w := substr(ds_alteracao_w || ' nm_usuario_analise_farm(' || coalesce(OLD.nm_usuario_analise_farm,'null') || '/' || coalesce(NEW.nm_usuario_analise_farm,'null')||'); ',1,1800);
end if;

if (coalesce(NEW.ds_itens_prescr,'null') <> coalesce(OLD.ds_itens_prescr,'null')) then
	ds_alteracao_w := substr(ds_alteracao_w || ' ds_itens_prescr(' || coalesce(OLD.ds_itens_prescr,'null') || '/' || coalesce(NEW.ds_itens_prescr,'null')||'); ',1,1800);
end if;

if (ds_alteracao_w is not null) then
	ds_alteracao_w := obter_desc_expressao(296208)/*'Prescricao - '*/
 ||' - '|| NEW.nr_prescricao || ' - ' || ';Func=' || obter_funcao_ativa || ' - ' || ds_alteracao_w || ' - ' || substr(dbms_utility.format_call_stack,1,1800);
    CALL gravar_log_tasy(-5, substr(ds_alteracao_w,1,1800), NEW.nm_usuario);
end if;

select	count(b.nr_sequencia)
into STRICT	cont_w
from	intpd_eventos a,
		intpd_eventos_sistema b
where	a.nr_sequencia = b.nr_seq_evento
and		a.ie_evento = 143
and		a.ie_situacao = 'A'
and		b.ie_situacao = 'A'  LIMIT 1;

if ((cont_w = 1) and (NEW.dt_liberacao is not null) and (OLD.dt_liberacao is null)) then

	select Count(1)
	into STRICT qt_exame_lab_w
	from exame_laboratorio a, prescr_procedimento b
	where b.nr_prescricao = NEW.nr_prescricao
	and b.dt_suspensao is null
	and b.nr_seq_exame is not null
	and a.ie_anatomia_patologica = 'N'
	and a.nr_seq_exame = b.nr_seq_exame;

	if (qt_exame_lab_w > 0) then

		select	max(ie_tipo_atendimento),
			max(obter_convenio_atendimento(nr_atendimento)),
			max(obter_categoria_atendimento(nr_atendimento)),
			max(cd_estabelecimento)
		into STRICT	ie_tipo_atendimento_w,
			cd_convenio_w,
			cd_categoria_w,
			cd_estabelecimento_w
		from	atendimento_paciente
		where	nr_atendimento = NEW.nr_atendimento;

		reg_integracao_w.cd_estab_documento := cd_estabelecimento_w;
		reg_integracao_w.cd_convenio := cd_convenio_w;
		reg_integracao_w.cd_categoria := cd_categoria_w;
		reg_integracao_w.ie_tipo_atendimento := ie_tipo_atendimento_w;
		reg_integracao_w := gerar_int_padrao.gravar_integracao('143', NEW.nr_prescricao, NEW.nm_usuario, reg_integracao_w);

	end if;
end if;

select	count(b.nr_sequencia)
into STRICT	cont_w
from	intpd_eventos a,
		intpd_eventos_sistema b
where	a.nr_sequencia = b.nr_seq_evento
and		a.ie_evento = 174
and		a.ie_situacao = 'A'
and		b.ie_situacao = 'A'  LIMIT 1;

if ((cont_w = 1) and (NEW.dt_liberacao is not null) and (OLD.dt_liberacao is null)) then

	select	max(ie_tipo_atendimento),
		max(obter_convenio_atendimento(nr_atendimento)),
		max(obter_categoria_atendimento(nr_atendimento)),
		max(cd_estabelecimento)
	into STRICT	ie_tipo_atendimento_w,
		cd_convenio_w,
		cd_categoria_w,
		cd_estabelecimento_w
	from	atendimento_paciente
	where	nr_atendimento = NEW.nr_atendimento;

	for c_05_w in c05 loop

		reg_integracao_w.cd_estab_documento := cd_estabelecimento_w;
		reg_integracao_w.cd_convenio := cd_convenio_w;
		reg_integracao_w.cd_categoria := cd_categoria_w;
		reg_integracao_w.cd_procedimento := c_05_w.cd_procedimento;
		reg_integracao_w.nr_seq_exame := c_05_w.nr_seq_exame;
		reg_integracao_w.ie_tipo_atendimento := ie_tipo_atendimento_w;
		reg_integracao_w := gerar_int_padrao.gravar_integracao('174', c_05_w.nr_seq_interno, NEW.nm_usuario, reg_integracao_w);

	end loop;
end if;

<<Final>>
qt_reg_w	:= 0;
  END;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_prescr_medica_update() FROM PUBLIC;

CREATE TRIGGER prescr_medica_update
	BEFORE UPDATE ON prescr_medica FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_prescr_medica_update();

