-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS titulo_pagar_update ON titulo_pagar CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_titulo_pagar_update() RETURNS trigger AS $BODY$
declare

qt_reg_w			smallint;
ie_moeda_dif_w		varchar(100);
cd_moeda_padrao_w	bigint;
dt_contabil_new_w		timestamp;
dt_contabil_old_w		timestamp;
ie_titulo_nf_w		varchar(50);
ie_cancel_tit_a600_w	varchar(2);
nr_seq_lote_camara_w	pls_lote_camara_comp.nr_sequencia%type;
dt_baixa_w		titulo_pagar_baixa.dt_baixa%type;
nr_sequencia_w		proj_desp_viagem_mes.nr_sequencia%type;
nr_seq_viagem_w		via_relat_desp.nr_seq_viagem%type;
ds_call_stack_w		varchar(2000);

C01 CURSOR FOR
	SELECT	nr_seq_viagem
	from	via_relat_desp
	where	nr_seq_fech_proj = nr_sequencia_w;
BEGIN
  BEGIN

if (obter_bloq_canc_proj_rec(NEW.nr_seq_proj_rec) > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1144309);  -- Registro associado a um projeto bloqueado ou cancelado. 
end if;

if (coalesce(wheb_usuario_pck.get_ie_lote_contabil,'N') = 'N') and (coalesce(wheb_usuario_pck.get_ie_atualizacao_contabil,'N') = 'N') then
	ie_titulo_nf_w := obter_param_usuario(5511, 4, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_titulo_nf_w);

	if (coalesce(ie_titulo_nf_w,'N') = 'S') then

		select	coalesce(max(a.dt_entrada_saida),NEW.dt_contabil),
			coalesce(max(a.dt_entrada_saida),OLD.dt_contabil)
		into STRICT	dt_contabil_new_w,
			dt_contabil_old_w
		from	nota_fiscal a
		where	a.nr_sequencia	= NEW.nr_seq_nota_fiscal;

	else
		dt_contabil_new_w		:= NEW.dt_contabil;
		dt_contabil_old_w		:= OLD.dt_contabil;	
	end if;

	select	max(coalesce(ie_moeda_dif, 'S')),
		max(cd_moeda_padrao)
	into STRICT	ie_moeda_dif_w,
		cd_moeda_padrao_w
	from	parametros_contas_pagar
	where	cd_estabelecimento	= NEW.cd_estabelecimento;

	if (ie_moeda_dif_w = 'N') and (cd_moeda_padrao_w <> NEW.cd_moeda) then
		--r.aise_application_error(-20011, 'A moeda nao pode ser alterada para moeda diferente da moeda padrao!');

		CALL wheb_mensagem_pck.exibir_mensagem_abort(267337);
	end if;

	if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
		goto Final;
	end if;
	if (NEW.vl_saldo_titulo < 0) or (NEW.vl_titulo < 0) then
		--r.aise_application_error(-20011, 'O valor do titulo nao pode ser negativo!');

		CALL wheb_mensagem_pck.exibir_mensagem_abort(267338);
	end if;

	if	(NEW.cd_cgc is null AND NEW.cd_pessoa_fisica is null)
		or
		(NEW.cd_cgc is not null AND NEW.cd_pessoa_fisica is not null) then
		--R.AISE_APPLICATION_ERROR(-20011, 'O titulo deve ser de uma pessoa fisica ou juridica!');

		CALL wheb_mensagem_pck.exibir_mensagem_abort(267339);
	end if;

	/* Alteracao da data emissao */


	if	((fin_obter_se_mes_aberto(NEW.cd_estabelecimento, NEW.dt_emissao,'CP',NEW.ie_tipo_titulo,null,null,null) = 'N') or (fin_obter_se_mes_aberto(NEW.cd_estabelecimento, OLD.dt_emissao,'CP',NEW.ie_tipo_titulo,null,null,null) = 'N')) and (OLD.dt_emissao <> NEW.dt_emissao) then
		--R.aise_application_error(-20011, 'O mes/dia financeiro do titulo ja esta fechado! Nao e possivel alterar a data de emissao.');

		CALL wheb_mensagem_pck.exibir_mensagem_abort(267340);
	end if;
	
	if (trunc(OLD.dt_emissao,'dd') <> trunc(NEW.dt_emissao,'dd')) and (trunc(NEW.dt_emissao,'dd') > trunc(NEW.dt_vencimento_atual,'dd')) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(471952);
	end if;
		
	if (NEW.dt_liquidacao is not null) and (trunc(OLD.dt_liquidacao,'dd') <> trunc(NEW.dt_liquidacao,'dd')) and (trunc(NEW.dt_liquidacao,'dd') < trunc(NEW.dt_emissao,'dd')) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(471972);
	end if;	

	/* Alteracao da data contabil */


	if	((fin_obter_se_mes_aberto(NEW.cd_estabelecimento, NEW.dt_contabil,'CP',NEW.ie_tipo_titulo,null,null,null) = 'N') or (fin_obter_se_mes_aberto(NEW.cd_estabelecimento, OLD.dt_contabil,'CP',NEW.ie_tipo_titulo,null,null,null) = 'N')) and (OLD.dt_contabil <> NEW.dt_contabil) then
		--R.aise_application_error(-20011, 'O mes/dia financeiro do titulo ja esta fechado! Nao e possivel alterar a data contabil.');

		CALL wheb_mensagem_pck.exibir_mensagem_abort(267341);
	end if;

	/* Cancelamento */


	if	(((dt_contabil_new_w is not null) and (fin_obter_se_mes_aberto(NEW.cd_estabelecimento, dt_contabil_new_w, 'CP',NEW.ie_tipo_titulo,null,null,null) = 'N')) or
		 ((dt_contabil_old_w is not null) and (fin_obter_se_mes_aberto(NEW.cd_estabelecimento, dt_contabil_old_w, 'CP',NEW.ie_tipo_titulo,null,null,null) = 'N'))) and (NEW.ie_situacao = 'C') and (OLD.ie_situacao <> NEW.ie_situacao) then
		--R.aise_application_error(-20011, 'O mes/dia financeiro do titulo ja esta fechado! Nao e possivel cancelar o mesmo.');

		CALL wheb_mensagem_pck.exibir_mensagem_abort(267342);
	end if;
	
	if (	dt_contabil_new_w	<>	dt_contabil_old_w) then
		/* Projeto Davita  - Nao deixa gerar movimento contabil apos fechamento  da data */


		CALL philips_contabil_pck.valida_se_dia_fechado(OBTER_EMPRESA_ESTAB(NEW.cd_estabelecimento),dt_contabil_new_w);
	end if;	

	/* Consistir data de vencimento */


	if (NEW.dt_vencimento_atual <> OLD.dt_vencimento_atual) then
		CALL CONSISTIR_REGRA_DATA_VENC_CP(NEW.cd_estabelecimento, NEW.dt_inclusao, NEW.dt_vencimento_atual, NEW.nm_usuario);
	end if;
	
	--aldellandrea

	if (NEW.ie_origem_titulo = '19') and (NEW.ie_situacao = 'C')then
		
		select	max(coalesce(ie_permite_canc_tit_vinc_a600, 'S'))
		into STRICT	ie_cancel_tit_a600_w
		from	pls_parametros_camara
		where	cd_estabelecimento = NEW.cd_estabelecimento;
		
		if (ie_cancel_tit_a600_w = 'N') then
			
			select  max(y.nr_sequencia)
			into STRICT	nr_seq_lote_camara_w
			from 	pls_titulo_lote_camara z,
				pls_lote_camara_comp x,
				ptu_camara_compensacao y
			where 	x.nr_sequencia 		= y.nr_seq_lote_camara
			and 	x.nr_sequencia 		= z.nr_seq_lote_camara
			and 	z.nr_titulo_pagar  	= NEW.nr_titulo;
			
			if (nr_seq_lote_camara_w is not null) then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(373291, 'NR_TITULO=' || NEW.nr_titulo ||
										';NR_LOTE=' || nr_seq_lote_camara_w);
			end if;	
			
		end if;
	end if;
	--fim

	/*Tratamento para atualizar a gestao de viagens*/


	if (NEW.ie_situacao = 'L') then
		BEGIN
		
		BEGIN
		select	max(dt_baixa)
		into STRICT	dt_baixa_w
		from	titulo_pagar_baixa
		where	nr_titulo = NEW.nr_titulo;
		exception
		when others then
			dt_baixa_w := null;
		end;
		
		if (dt_baixa_w is not null) then
			BEGIN
			BEGIN
			select	nr_sequencia
			into STRICT	nr_sequencia_w
			from	proj_desp_viagem_mes
			where	nr_titulo = NEW.nr_titulo  LIMIT 1;
			exception
			when others then
				nr_sequencia_w := null;
			end;
			
			if (nr_sequencia_w is not null) then
				BEGIN
				open C01;
				loop
				fetch C01 into	
					nr_seq_viagem_w;
				EXIT WHEN NOT FOUND; /* apply on C01 */
					BEGIN
					
					BEGIN
					update	via_viagem
					set	ie_etapa_viagem = '6',
						nm_usuario_fim_viagem = NEW.nm_usuario,
						dt_fim_viagem = dt_baixa_w,
						dt_baixa_titulo = dt_baixa_w,
						nm_usuario = NEW.nm_usuario,
						dt_atualizacao = LOCALTIMESTAMP
					where	nr_sequencia = nr_seq_viagem_w;										
					exception
					when others then
						nr_seq_viagem_w := null;
					end;
					
					end;
				end loop;
				close C01;
				end;
			end if;
			
			end;
		end if;
		
		end;
	end if;
	
	/*OS 1458006 - Gravar log de alteracao para o campo NR_SEQ_TRANS_FIN_BAIXA.
	Log para auxiliar o Suporte. Qualquer excessao aqui dentro nao disparar.*/

	BEGIN
		if (NEW.nr_seq_trans_fin_baixa <> OLD.nr_seq_trans_fin_baixa) then
		
			ds_call_stack_w := substr('Old value: '||OLD.nr_seq_trans_fin_baixa||' New value: '||NEW.nr_seq_trans_fin_baixa||' CallStack Update: ' || substr(dbms_utility.format_call_stack,1,1950),1,2000);
		
			if (ds_call_stack_w is not null) then
		
				insert into log_tasy( cd_log,
									   ds_log,
									   nm_usuario,	
									   dt_atualizacao )
							values ( 75395,
									   ds_call_stack_w,
									   NEW.nm_usuario,
									   LOCALTIMESTAMP ); 		
			end if;				
		
		end if;
	exception when others then
		null;
	end;
	
end if;

<<Final>>

qt_reg_w	:= 0;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_titulo_pagar_update() FROM PUBLIC;

CREATE TRIGGER titulo_pagar_update
	BEFORE UPDATE ON titulo_pagar FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_titulo_pagar_update();

