-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS atendimento_alta_update ON atendimento_alta CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_atendimento_alta_update() RETURNS trigger AS $BODY$
declare
ie_status_pa_w	varchar(15);
qt_reg_w	smallint;
ie_liberar_desfecho_w varchar(1);

BEGIN

select coalesce(max(ie_liberar_desfecho),'N')
into STRICT   ie_liberar_desfecho_w
from   parametro_medico
where  cd_estabelecimento = obter_estabelecimento_ativo;

if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  or ((NEW.ie_tipo_orientacao = 'P') and (NEW.dt_liberacao is null) and (ie_liberar_desfecho_w = 'S')) then
	goto Final;
end if;

if (NEW.ie_desfecho <> 'T') and (NEW.ie_tipo_orientacao = 'P') then

	update	atendimento_paciente
	set	dt_lib_medico	= LOCALTIMESTAMP
	where	nr_atendimento	= NEW.nr_atendimento
	and	dt_lib_medico is null;
end if;

if (NEW.ie_desfecho = 'I') then

	select 	coalesce(max(ie_status_pa),'NA')
	into STRICT	ie_status_pa_w
	from	atendimento_paciente
	where	nr_atendimento	= NEW.nr_atendimento;
	
	if (ie_status_pa_w not in ('AL','PL')) then
	
		update	atendimento_paciente
		set	ie_status_pa = 'IN'
		where	nr_atendimento	= NEW.nr_atendimento;
		
		CALL gravar_atend_status_pa(NEW.nr_atendimento,'IN',NEW.nm_usuario);
		
	end if;
	
end if;

if (NEW.dt_liberacao is not null)	and (OLD.dt_liberacao is null) and (NEW.nr_Atendimento is not null) then
	
	CALL executar_evento_agenda_atend(NEW.nr_Atendimento,'LOP',obter_estab_atend(NEW.nr_Atendimento),NEW.nm_usuario);
end if;

if (OLD.dt_inativacao is null and NEW.dt_inativacao is not null and NEW.cd_evolucao is not null) then
	delete from clinical_note_soap_data where cd_evolucao = NEW.cd_evolucao and ie_med_rec_type = 'DSCHRG_INSTR'  and ie_stage = 1  and ie_soap_type = 'P' and nr_seq_med_item = NEW.nr_sequencia;
end if;

<<Final>>
qt_reg_w	:= 0;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_atendimento_alta_update() FROM PUBLIC;

CREATE TRIGGER atendimento_alta_update
	AFTER UPDATE ON atendimento_alta FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_atendimento_alta_update();

