-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS autorizacao_cirurgia_update ON autorizacao_cirurgia CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_autorizacao_cirurgia_update() RETURNS trigger AS $BODY$
DECLARE

nr_doc_convenio_w	varchar(40);
nr_seq_autorizacao_w	bigint;
nr_atendimento_w		bigint;
cd_convenio_w		bigint;
nr_seq_estagio_w		bigint;
nr_sequencia_autor_w	bigint;
ie_lib_materiais_esp_w	varchar(1)	:= 'N';
ie_atualizar_qts_w		varchar(2)	:= 'N';
ie_permite_desf_auto_w	varchar(255)	:= 'N';
ie_atualiza_mat_especial_w		varchar(15) := 'N';
qt_reg_w			smallint;
cont_w			bigint;
ie_atualiza_autor_conv_w	varchar(40);
ds_estagio_w		varchar(255);
dt_agenda_w		timestamp;
nr_seq_estagio_param_w	bigint;
ie_autorzao_nao_lib_w	varchar(10);
BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'N')  then
	goto Final;
end if;

ie_atualiza_autor_conv_w := Obter_Param_Usuario(3006, 026, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_atualiza_autor_conv_w);
ie_autorzao_nao_lib_w := Obter_Param_Usuario(3006, 072, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_autorzao_nao_lib_w);
ie_atualiza_mat_especial_w := Obter_Param_Usuario(3004, 158, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_atualiza_mat_especial_w);

nr_seq_estagio_param_w := coalesce((obter_valor_param_usuario(3006, 51, obter_perfil_ativo, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento))::numeric ,0);

if (coalesce(ie_atualiza_autor_conv_w,'N') = 'N') or
	(NEW.dt_autorizacao is null AND OLD.dt_autorizacao is not null)then
	nr_seq_estagio_param_w := 0;
end if;

select	coalesce(max(nr_sequencia),0)
into STRICT	nr_seq_estagio_w
from	estagio_autorizacao
where	ie_interno		= CASE WHEN NEW.dt_autorizacao IS NULL THEN  '1'  ELSE '10' END
and	ie_situacao		= 'A'
and	coalesce(ie_parcial,'N') 	= 'N'
and	OBTER_EMPRESA_ESTAB(wheb_usuario_pck.get_cd_estabelecimento) = cd_empresa;

select	coalesce(max(ie_lib_materiais_esp),'N')
into STRICT	ie_lib_materiais_esp_w
from	parametro_faturamento
where	cd_estabelecimento	= NEW.cd_estabelecimento;

if (coalesce(ie_autorzao_nao_lib_w,'S') = 'N') and (OLD.IE_ESTAGIO_AUTOR <> '3') and (NEW.IE_ESTAGIO_AUTOR = '3') and (OLD.DT_LIBERACAO is null) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(324489);
end if;

if	((coalesce(ie_lib_materiais_esp_w,'N') = 'N') or (coalesce(ie_atualiza_autor_conv_w,'N') = 'S'))and
	((coalesce(NEW.nr_atendimento,0) > 0) or (coalesce(NEW.nr_seq_agenda,0) > 0) or (coalesce(NEW.cd_pessoa_fisica,0) > 0)) and
	((OLD.dt_autorizacao is null AND NEW.dt_autorizacao is not null) or (NEW.dt_autorizacao is null) and (OLD.dt_autorizacao is not null))then

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_sequencia_autor_w
	from	autorizacao_convenio
	where	nr_seq_autor_cirurgia	= NEW.nr_sequencia;


	if (nr_sequencia_autor_w > 0) then

		if (nr_seq_estagio_w > 0) then
			if (coalesce(ie_atualiza_autor_conv_w,'N') = 'S') then
				update	autorizacao_convenio
				set	nr_seq_estagio	= CASE WHEN nr_seq_estagio_param_w=0 THEN nr_seq_estagio_w  ELSE nr_seq_estagio_param_w END ,
					cd_autorizacao	= coalesce(cd_autorizacao,NEW.nr_doc_convenio),
					cd_senha	= coalesce(cd_senha,NEW.cd_senha),
					nr_prescricao 	= coalesce(nr_prescricao,NEW.nr_prescricao),
					nm_usuario	= NEW.nm_usuario,
					dt_atualizacao  = LOCALTIMESTAMP
				where	nr_sequencia	= nr_sequencia_autor_w;
			end if;
		ie_atualizar_qts_w := Obter_Param_Usuario(3004, 17, obter_perfil_ativo, NEW.nm_usuario, coalesce(NEW.cd_estabelecimento,0), ie_atualizar_qts_w);
		if (ie_atualizar_qts_w = 'S') then
			BEGIN
			update  autorizacao_convenio
                        set	qt_dia_autorizado = qt_dia_solicitado,
				nm_usuario	  = NEW.nm_usuario,
				dt_atualizacao	  = LOCALTIMESTAMP
			where  	coalesce(qt_dia_autorizado,0) = 0
                        and    	nr_sequencia		= nr_sequencia_autor_w;

			update  procedimento_autorizado
                        set    	qt_autorizada = coalesce(qt_solicitada,0),
				dt_atualizacao	= LOCALTIMESTAMP,
				nm_usuario	= NEW.nm_usuario
                        where  	coalesce(qt_autorizada,0)	= 0
                        and    	nr_sequencia_autor  	= nr_sequencia_autor_w;

			update  material_autorizado
                        set    	qt_autorizada = coalesce(qt_solicitada,0),
				dt_atualizacao	= LOCALTIMESTAMP,
				nm_usuario	= NEW.nm_usuario
                        where  	coalesce(qt_autorizada,0) 	= 0
                        and    	nr_sequencia_autor  	= nr_sequencia_autor_w;
			end;
		end if;


		end if;

	elsif	((OLD.dt_autorizacao is null) and (NEW.dt_autorizacao is not null) and (ie_atualiza_mat_especial_w = 'N')) then

		nr_seq_autorizacao_w	:= null;
		if (coalesce(NEW.nr_atendimento,0) > 0) then
			select	coalesce(max(nr_seq_autorizacao),0) + 1
			into STRICT	nr_seq_autorizacao_w
			from	autorizacao_convenio
			where	nr_atendimento	= NEW.nr_atendimento;

			select	nr_doc_convenio,
				cd_convenio
			into STRICT	nr_doc_convenio_w,
				cd_convenio_w
			from	atend_categoria_convenio
			where	nr_atendimento			= NEW.nr_atendimento
			and	obter_atecaco_atendimento(nr_atendimento) = nr_seq_interno;

		elsif (coalesce(NEW.nr_seq_agenda,0) > 0) then

			select	nr_atendimento,
				cd_convenio,
				nr_doc_convenio,
				dt_agenda
			into STRICT	nr_atendimento_w,
				cd_convenio_w,
				nr_doc_convenio_w,
				dt_agenda_w
			from	agenda_paciente
			where	nr_sequencia	= NEW.nr_seq_agenda;

		end if;

		if (coalesce(cd_convenio_w,0) > 0) then

			insert	into autorizacao_convenio(NR_ATENDIMENTO ,
			NR_SEQ_AUTORIZACAO,
			CD_CONVENIO,
			CD_AUTORIZACAO,
			DT_AUTORIZACAO,
			DT_INICIO_VIGENCIA,
			DT_ATUALIZACAO,
			NM_USUARIO,
			DT_FIM_VIGENCIA,
			NM_RESPONSAVEL,
			DS_OBSERVACAO,
			CD_SENHA,
			CD_PROCEDIMENTO_PRINCIPAL,
			IE_ORIGEM_PROCED,
			DT_PEDIDO_MEDICO,
			CD_MEDICO_SOLICITANTE,
			IE_TIPO_GUIA,
			QT_DIA_AUTORIZADO,
			NR_PRESCRICAO,
			DT_ENVIO,
			DT_RETORNO,
			NR_SEQ_ESTAGIO,
			IE_TIPO_AUTORIZACAO,
			IE_TIPO_DIA,
			CD_TIPO_ACOMODACAO,
			NR_SEQ_AUTOR_CIRURGIA,
			DS_INDICACAO,
			DT_GERACAO_CIH,
			NR_SEQUENCIA,
			NR_SEQ_AGENDA,
			dt_agenda,
      dt_atualizacao_nrec,
      nm_usuario_nrec)
		values (NEW.nr_atendimento,
			nr_seq_autorizacao_w,
			cd_convenio_w,
			nr_doc_convenio_w,
			LOCALTIMESTAMP,
			null,
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			null,
			NEW.nm_usuario_pedido,
			NEW.ds_observacao,
			null,
			null,--:new.cd_procedimento
			null,--:new.ie_origem_proced
			NEW.dt_pedido,
			NEW.cd_requisitante,
			5,
			null,
			NEW.nr_prescricao,
			null,
			null,
			nr_seq_estagio_w,
			5,
			'C',
			null,
			NEW.nr_sequencia,
			null,
			null,
			nextval('autorizacao_convenio_seq'),
			NEW.nr_seq_agenda,
			dt_agenda_w,
      LOCALTIMESTAMP,
      NEW.nm_usuario);
		end if;

	end if;
end if;

ie_permite_desf_auto_w := Obter_Param_Usuario(3006, 13, obter_perfil_ativo, NEW.nm_usuario, coalesce(NEW.cd_estabelecimento,0), ie_permite_desf_auto_w);


if (coalesce(ie_lib_materiais_esp_w,'N') = 'N') and
	((coalesce(NEW.nr_atendimento,0) > 0) or (coalesce(NEW.nr_seq_agenda,0) > 0)) and
	(OLD.dt_autorizacao is not null AND NEW.dt_autorizacao is null) and (coalesce(ie_permite_desf_auto_w,'N') = 'N') then

	select	count(*)
	into STRICT	cont_w
	from	autorizacao_convenio
	where	nr_seq_autor_cirurgia				= NEW.nr_sequencia
	and	obter_estagio_autor(nr_seq_estagio, 'C')	= 10;

	if (coalesce(cont_w,0) > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(194717);
	end if;
end if;

select	obter_valor_dominio(3116,NEW.ie_estagio_autor)
into STRICT	ds_estagio_w
;

if (ds_estagio_w is not null) and (OLD.ie_estagio_autor <> NEW.ie_estagio_autor) then
	insert into autorizacao_cirurgia_hist(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_seq_autor_cirurgia,
			ds_historico,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_liberacao,
			nm_usuario_lib)
		values (	nextval('autorizacao_cirurgia_hist_seq'),
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			NEW.nr_sequencia,
			ds_estagio_w,
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			LOCALTIMESTAMP,
			NEW.nm_usuario);
end if;

<<Final>>
qt_reg_w	:= 0;

RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_autorizacao_cirurgia_update() FROM PUBLIC;

CREATE TRIGGER autorizacao_cirurgia_update
	AFTER UPDATE ON autorizacao_cirurgia FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_autorizacao_cirurgia_update();

