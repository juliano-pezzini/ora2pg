-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS atendimento_paciente_insert ON atendimento_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_atendimento_paciente_insert() RETURNS trigger AS $BODY$
declare
nr_prontuario_w    bigint;
ie_prontuario_w    varchar(01);
ie_data_futura_w    varchar(01);
qt_registro_w    bigint;
cd_medico_w    bigint;
ds_erro_w    varchar(500);
ie_gerar_w    varchar(01);
qt_validade_w    double precision;
ie_vincular_w    varchar(01);
nr_prescricao_w    bigint;
ie_gerar_ccih_w    varchar(1);
ds_perfil_w    varchar(30);
qt_dias_w    integer;
ie_permissao_aten_w  varchar(1);
qt_disp_diaria_w    bigint;
nr_seq_troca_w    bigint;
nr_seq_orcamento_w  bigint;
ie_vincular_orcamento_w  varchar(1);
dt_alta_institucional_w  timestamp;
ie_prontuario_anual_w  varchar(10);
ie_gera_prontuario_w  varchar(1);
ie_gerar_anual_w    varchar(1);
ie_forma_gerar_w    varchar(1);
ie_gera_pront_rn_w   varchar(1);
qt_medico_ativo_w      integer;
qt_medico_w        integer;
Ie_permite_pessoa_resp_w  varchar(1);
ie_gerar_acesso_atend_w    varchar(1);
ie_tipo_atend_pront_w  varchar(1);
ie_escolhe_especialidade_w  varchar(1);
qt_especialidade_w    bigint;
cd_especialidade_w    bigint;
ie_perm_data_menor_nasc_w  varchar(1);
dt_nasc_paciente_w    timestamp;
ie_integracao_aghos_w    varchar(1);
ie_integra_regul_w    varchar(1);
nr_seq_solici_aghos_w    bigint;
nr_internacao_w      bigint;
nr_seq_pac_visita_w    bigint;
ie_atend_sem_autorizacao_w  varchar(1);
nm_pessoa_fisica_w    varchar(60);
ie_inicia_atend_vinc_senha_w  varchar(1);
ie_mostra_erro_aghos_w    varchar(1);
ds_sqlerror_w      varchar(2000);
ds_erro_aghos_w      varchar(2000);
qt_dias_dispensa_w    bigint;
cd_pessoa_usuario_w    varchar(10);
ie_vincular_senha_w    varchar(1);
VarRestringInformacoes_w  varchar(255);
ie_regra_gerar_pac_vacina_w  varchar(1);
ie_solic_aghos_w    varchar(1);
nr_grupo_medico_novo_w    bigint;
nr_seq_regulacao_w    bigint;
ie_vinculo_medico_ref_w  smallint;
ie_possui_autor_gerint_w  varchar(1);
ie_admission_diagnosis_w  varchar(1);
qt_tempo_regra_w     wl_regra_item.qt_tempo_regra%type;
cd_tipo_evolucao_w    wl_regra_item.ie_evolucao_clinica%type;
qt_tempo_atraso_w    wl_regra_item.qt_tempo_atraso%type;
qt_tempo_normal_w    wl_regra_item.qt_tempo_normal%type;
ie_opcao_wl_w      wl_regra_item.ie_opcao_wl%type;
qt_regra_escalas_w  bigint;
nr_seq_regra_w    wl_regra_item.nr_sequencia%type;
ie_escala_w      wl_regra_item.ie_escala%type;
ie_tipo_diagnostico_w    wl_regra_item.ie_tipo_diagnostico%type;
nm_tabela_w    vice_escala.nm_tabela%type;
ie_classif_diag_w  wl_regra_item.ie_classif_diag%type;
ie_cons_episodio_w    varchar(1);
ie_usa_case_w      varchar(1);
ATEND_PACIENTE_ADIC_W ATEND_PACIENTE_ADIC%ROWTYPE;
IE_MOTIVO_SEM_CPF_W   PESSOA_FISICA_AUX.IE_MOTIVO_SEM_CPF%TYPE;
IE_CONTROL_EXT_W      PESSOA_FISICA_AUX.IE_CONTROL_EXT%TYPE;

c01 CURSOR FOR
  SELECT  'S'
  from  regra_prontuario
  where  cd_estabelecimento            = NEW.cd_estabelecimento
  and  coalesce(ie_clinica, coalesce(NEW.ie_clinica,0))        = coalesce(NEW.ie_clinica,0)
  and  coalesce(ie_tipo_atendimento, NEW.ie_tipo_atendimento)    = NEW.ie_tipo_atendimento
  and  ie_tipo_regra            = 1;

c02 CURSOR FOR
  SELECT  qt_dias
  from   regra_dispensa_diaria
  where   coalesce(ie_tipo_atendimento, NEW.ie_tipo_atendimento) = NEW.ie_tipo_atendimento
  and   coalesce(ie_carater_inter_sus, coalesce(NEW.ie_carater_inter_sus,'0')) = coalesce(NEW.ie_carater_inter_sus,'0')
  and   NEW.dt_entrada between ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(NEW.dt_entrada, coalesce(hr_inicio, '00:00')) and
            ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(NEW.dt_entrada, coalesce(hr_final, '00:00'))
  and   ie_situacao = 'A'
  order by coalesce(ie_tipo_atendimento,0),
    coalesce(ie_carater_inter_sus, '0');
c03 CURSOR FOR
  SELECT  'S'
  from  regra_gerar_pac_vacina
  where  coalesce(ie_situacao,'A')           = 'A'
  and  coalesce(cd_estabelecimento, NEW.cd_estabelecimento)  = NEW.cd_estabelecimento
  and  coalesce(ie_tipo_atendimento, NEW.ie_tipo_atendimento)  = NEW.ie_tipo_atendimento;

c04 CURSOR FOR
  SELECT  coalesce(b.qt_tempo_regra, 0),
      coalesce(b.qt_tempo_normal, 0),
      coalesce(b.nr_sequencia, 0),
      coalesce(b.ie_escala, ''),
      b.ie_opcao_wl,
      (SELECT  max(nm_tabela)
      from  vice_escala
      where  ie_escala = b.ie_escala)
  FROM wl_regra_worklist a, wl_regra_item b
LEFT OUTER JOIN wl_regra_geracao c ON (b.nr_sequencia = c.nr_seq_regra_item)
WHERE a.nr_sequencia = b.nr_seq_regra  and b.ie_situacao = 'A' and c.cd_setor_atendimento is null and a.nr_seq_item = (  select  max(x.nr_sequencia)
                from  wl_item x
                where  x.nr_sequencia = a.nr_seq_item
                and    x.cd_categoria = 'S'
                and    x.ie_situacao = 'A');

c06 CURSOR FOR
  SELECT  coalesce(a.nr_sequencia, 0),
      coalesce(b.qt_tempo_regra, 0),
      coalesce(b.qt_tempo_normal, 0),
      coalesce(b.qt_tempo_atraso, 0),
      coalesce(b.nr_sequencia, 0),
      b.ie_opcao_wl
  from   wl_regra_worklist a,
      wl_regra_item b
  where  a.nr_sequencia = b.nr_seq_regra
  and    b.ie_situacao = 'A'
  and    a.nr_seq_item = (  SELECT  max(x.nr_sequencia)
                from  wl_item x
                where  x.nr_sequencia = a.nr_seq_item
                and    x.cd_categoria = 'ED'
                and    x.ie_situacao = 'A');

c07 CURSOR FOR
  SELECT  coalesce(b.qt_tempo_normal, 0),
      coalesce(b.nr_sequencia, 0),
      b.ie_tipo_diagnostico,
      b.ie_classif_diag
  from   wl_regra_worklist a,
      wl_regra_item b
  where  a.nr_sequencia = b.nr_seq_regra
  and    b.ie_situacao = 'A'
  and    a.nr_seq_item = (  SELECT  max(x.nr_sequencia)
                from  wl_item x
                where  x.nr_sequencia = a.nr_seq_item
                and    x.cd_categoria = 'DG'
                and    x.ie_situacao = 'A');

c08 CURSOR FOR
  SELECT  b.ie_evolucao_clinica,
      b.ie_opcao_wl,
      coalesce(b.qt_tempo_regra, 0),
      coalesce(b.qt_tempo_normal, 0),
      coalesce(b.qt_tempo_atraso, 0),
      coalesce(b.nr_sequencia, 0)
  from   wl_regra_worklist a,
      wl_regra_item b
  where  a.nr_sequencia = b.nr_seq_regra
  and    b.ie_situacao = 'A'
  and    a.nr_seq_item = (  SELECT  max(x.nr_sequencia)
                from  wl_item x
                where  x.nr_sequencia = a.nr_seq_item
                and    x.cd_categoria = 'CN'
                and    x.ie_situacao = 'A');

c09 CURSOR FOR
  SELECT  b.ie_opcao_wl,
      coalesce(b.qt_tempo_regra, 0),
      coalesce(b.qt_tempo_normal, 0),
      coalesce(b.qt_tempo_atraso, 0),
      coalesce(b.nr_sequencia, 0)
  from   wl_regra_worklist a,
      wl_regra_item b
  where  a.nr_sequencia = b.nr_seq_regra
  and    b.ie_situacao = 'A'
  and    a.nr_seq_item = (  SELECT  max(x.nr_sequencia)
                from  wl_item x
                where  x.nr_sequencia = a.nr_seq_item
                and    x.cd_categoria = 'WO'
                and    x.ie_situacao = 'A');

c10 CURSOR FOR
  SELECT  coalesce(b.qt_tempo_normal, 0) ,
      coalesce(b.nr_sequencia, 0)
  from   wl_regra_worklist a,
      wl_regra_item b
  where  a.nr_sequencia = b.nr_seq_regra
  and    b.ie_situacao = 'A'
  and    a.nr_seq_item = (  SELECT  max(x.nr_sequencia)
                from  wl_item x
                where  x.nr_sequencia = a.nr_seq_item
                and    x.cd_categoria = 'ML'
                and    x.ie_situacao = 'A')
  and    coalesce(b.ie_tipo_pend_carta,'N') = 'N';
BEGIN
  BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger	= 'S')  then
ie_escolhe_especialidade_w := obter_param_usuario(916, 909, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_escolhe_especialidade_w);
ie_perm_data_menor_nasc_w := obter_param_usuario(916, 990, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_perm_data_menor_nasc_w);
VarRestringInformacoes_w := obter_param_usuario(916, 1097, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, VarRestringInformacoes_w);

ie_inicia_atend_vinc_senha_w := obter_param_usuario(10021, 68, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_inicia_atend_vinc_senha_w);

dt_nasc_paciente_w := to_date(obter_dados_pf(NEW.cd_pessoa_fisica,'DN'),'dd/mm/yyyy');

if (NEW.dt_entrada > LOCALTIMESTAMP) then
  BEGIN

  ie_data_futura_w := obter_param_usuario(916, 52, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_data_futura_w);

  if (ie_data_futura_w = 'N') then
    CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(198278);

  end if;
  end;
elsif (NEW.dt_entrada < LOCALTIMESTAMP - interval '999999 days') then
  CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(198279);

elsif (NEW.dt_entrada < dt_nasc_paciente_w and ie_perm_data_menor_nasc_w = 'N') then
  CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(215575);
end if;

if (NEW.cd_medico_resp is not null) then

  select  nextval('atendimento_troca_medico_seq')
  into STRICT  nr_seq_troca_w
;

  select  count(*) qt_especialidade
  into STRICT  qt_especialidade_w
  from  especialidade_medica b,
    medico_especialidade a
  where  a.cd_especialidade  = b.cd_especialidade
  and  a.cd_pessoa_fisica  = NEW.cd_medico_resp;

  If (qt_especialidade_w > 1) and (ie_escolhe_especialidade_w = 'S') then
    cd_especialidade_w := null;
  end if;

  if (qt_especialidade_w = 1) then
    cd_especialidade_w := obter_especialidade_medico(NEW.cd_medico_resp,'C');
  end if;

  if  (qt_especialidade_w = 0 AND ie_escolhe_especialidade_w = 'O') then
    CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(210182);
  end if;

  insert into atendimento_troca_medico(
    nr_sequencia,
    nr_atendimento,
    dt_atualizacao,
    nm_usuario,
    dt_troca,
    cd_medico_anterior,
    cd_medico_atual,
    ie_forma_aviso,
    cd_setor_atendimento,
    ie_tipo_atendimento,
    nr_seq_classif_medico,
    cd_especialidade,
    nm_usuario_nrec,
    dt_atualizacao_nrec)
  values (
    nr_seq_troca_w,
    NEW.nr_atendimento,
    LOCALTIMESTAMP,
    NEW.nm_usuario,
    LOCALTIMESTAMP,
    NEW.cd_medico_resp,
    NEW.cd_medico_resp,
    'T',
    null,
    NEW.ie_tipo_atendimento,
    NEW.nr_seq_classif_medico,
    cd_especialidade_w,
    NEW.nm_usuario,
    LOCALTIMESTAMP);
end if;

IF (NEW.cd_medico_resp is not null ) THEN

  select  coalesce(max(nr_seq_grupo),0)
  into STRICT  nr_grupo_medico_novo_w
  from  med_pac_grupo
  where  cd_pessoa_fisica = NEW.cd_medico_resp;

  if (nr_grupo_medico_novo_w <> 0) then

    update  pac_grupo_atend
    set  dt_saida = LOCALTIMESTAMP,
      nm_usuario = NEW.nm_usuario
    where  cd_pessoa_fisica = NEW.cd_pessoa_fisica
    and  dt_saida is null;

      if (nr_grupo_medico_novo_w <> 0) then
        BEGIN
        insert into pac_grupo_atend(
          nr_sequencia,
          dt_atualizacao,
          nm_usuario,
          nr_seq_grupo,
          nr_atendimento,
          ie_situacao,
          dt_entrada,
          cd_pessoa_fisica)
        SELECT  nextval('pac_grupo_atend_seq'),
          LOCALTIMESTAMP,
          NEW.nm_usuario,
          nr_grupo_medico_novo_w,
          NEW.nr_atendimento,
          'A',
          LOCALTIMESTAMP,
          NEW.cd_pessoa_fisica

        where  not exists (  SELECT  1
              from  pac_grupo_atend
              where  nr_atendimento   = NEW.nr_atendimento
              and  nr_seq_grupo  = nr_grupo_medico_novo_w
              and  dt_saida is null
              
union

              select  1
              from  pac_grupo_atend
              where  cd_pessoa_fisica   = NEW.cd_pessoa_fisica
              and  nr_seq_grupo    = nr_grupo_medico_novo_w
              and  dt_saida is null);
        end;
      end if;
  end if;
END IF;

select  obter_valor_param_usuario(0,32,0,NEW.nm_usuario,NEW.cd_estabelecimento)
into STRICT  ie_prontuario_w
;

select  obter_valor_param_usuario(0,56,0,NEW.nm_usuario,NEW.cd_estabelecimento)
into STRICT  ie_gerar_ccih_w
;


ds_perfil_w := obter_param_usuario(916, 132, 0, NEW.nm_usuario, NEW.cd_estabelecimento, ds_perfil_w);
BEGIN
qt_dias_w := obter_param_usuario(916, 133, 0, NEW.nm_usuario, NEW.cd_estabelecimento, qt_dias_w);
exception
when others then
  qt_dias_w := null;
end;

if (ds_perfil_w is not null) and (qt_dias_w is not null) and
  ((VarRestringInformacoes_w = '' or VarRestringInformacoes_w is null) or (obter_se_contido(NEW.ie_tipo_atendimento, VarRestringInformacoes_w) = 'N')) then
  CALL enviar_comunic_resp_cih(NEW.nr_atendimento, NEW.cd_pessoa_fisica, ds_perfil_w, qt_dias_w, NEW.nm_usuario, NEW.cd_estabelecimento);
end  if;



nr_prontuario_w  := coalesce(obter_prontuario_pf(NEW.cd_estabelecimento, NEW.cd_pessoa_fisica),0);

select  max(dt_alta_institucional)
into STRICT  dt_alta_institucional_w
from  pessoa_fisica
where  cd_pessoa_fisica  = NEW.cd_pessoa_fisica;

if (dt_alta_institucional_w is not null) then
  CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(198280);

end if;


ds_erro_w  := '';

if (coalesce(NEW.ie_clinica, 0) > 0) then

  ds_erro_w := consiste_clinica_tipo_atend(NEW.cd_estabelecimento, NEW.ie_clinica, NEW.ie_tipo_atendimento, NEW.nr_seq_regra_funcao, coalesce(wheb_usuario_pck.get_cd_setor_atendimento,obter_setor_usuario(NEW.nm_usuario)), ds_erro_w);
  if (ds_erro_w is not null) or (ds_erro_w <> '') then
    CALL Wheb_mensagem_pck.exibir_mensagem_abort(198281, 'DS_ERRO_W='||ds_erro_w);
  end if;
end if;


select  count(*)
into STRICT  qt_medico_w
from  medico
where  cd_pessoa_fisica = NEW.cd_medico_resp;

select  count(*)
into STRICT  qt_medico_ativo_w
from  medico
where  cd_pessoa_fisica = NEW.cd_medico_resp
and  coalesce(ie_situacao,'A') = 'A';


if (qt_medico_w > 0) and (qt_medico_ativo_w = 0) and (NEW.cd_medico_resp is not null) then
  Ie_permite_pessoa_resp_w := obter_param_usuario(916, 789, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, Ie_permite_pessoa_resp_w);
  if (Ie_permite_pessoa_resp_w <> 'S') then
    CALL Wheb_mensagem_pck.exibir_mensagem_abort(198282, 'NR_ATENDIMENTO='||NEW.nr_atendimento);

  end if;
end if;

ie_gerar_acesso_atend_w := obter_param_usuario(916, 819, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_gerar_acesso_atend_w);

if (ie_gerar_acesso_atend_w = 'S') then
  CALL consistir_pep_acesso_atend(NEW.nr_atendimento,NEW.cd_pessoa_fisica);
end if;



if (nr_prontuario_w = 0) then
  BEGIN
  insert into log_atendimento(
    dt_atualizacao,
    nm_usuario,
    cd_log,
    nr_atendimento,
    ds_log)
  values (LOCALTIMESTAMP,
    NEW.nm_usuario,
    1,
    NEW.nr_atendimento,
    wheb_mensagem_pck.get_texto(803179) || ': ' || chr(13) ||
    wheb_mensagem_pck.get_texto(803183) || ' ' || chr(13) ||
    wheb_mensagem_pck.get_texto(301081) || ' ' || NEW.cd_pessoa_fisica || chr(13) ||
    wheb_mensagem_pck.get_texto(800315) || ': ' || NEW.nr_atendimento || chr(13) ||
    'Obj: atendimento_paciente_insert' || chr(13) ||
    wheb_mensagem_pck.get_texto(802054) || ' ' || NEW.ie_tipo_atendimento || chr(13) ||
    wheb_mensagem_pck.get_texto(803181) || ' ' || NEW.ie_clinica);
  exception
  when others then
    null;
  end;
  ie_prontuario_anual_w  := obter_param_usuario(916, 523, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_prontuario_anual_w );
  ie_gera_prontuario_w := obter_param_usuario(916, 533, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_gera_prontuario_w);
  ie_gera_pront_rn_w := obter_param_usuario(916, 672, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_gera_pront_rn_w);
  ie_gerar_w    := 'N';
  ie_gerar_anual_w  := 'N';
  if (NEW.ie_tipo_atendimento = 1) and ( ie_prontuario_anual_w  = 'N') and (ie_gera_prontuario_w = 'S') then
    ie_gerar_w  := 'S';
  elsif ( ie_prontuario_w = 'N') and ( ie_prontuario_anual_w  = 'N') then
    ie_gerar_w  := 'S';
  elsif (ie_prontuario_w = 'R') then
    open c01;
    loop
    fetch c01 into ie_gerar_w;
    EXIT WHEN NOT FOUND; /* apply on c01 */
    end loop;
    close c01;
  elsif ( ie_prontuario_anual_w  = 'S') then
    ie_gerar_anual_w := 'S';
    ie_gerar_w   := 'S';
  end if;

  if (NEW.nr_atendimento_mae is not null) and (ie_gera_pront_rn_w = 'N') then
    ie_gerar_w   := 'N';
  end if;

  if (ie_gerar_w = 'S') then

    if (ie_gerar_anual_w = 'S') then
      ie_forma_gerar_w := obter_param_usuario(5, 24, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_forma_gerar_w);

      if (ie_forma_gerar_w <> 'N') then
        nr_prontuario_w := gerar_prontuario_anual(ie_forma_gerar_w, NEW.nm_usuario, nr_prontuario_w);

        update pessoa_fisica
        set    nr_prontuario = nr_prontuario_w
        where  cd_pessoa_fisica = NEW.cd_pessoa_fisica;
      end if;

    else
      nr_prontuario_w := gerar_prontuario_pac(NEW.cd_estabelecimento, NEW.cd_pessoa_fisica, 'N', NEW.nm_usuario, nr_prontuario_w);
    end if;
    BEGIN
    insert into log_atendimento(
      dt_atualizacao,
      nm_usuario,
      cd_log,
      nr_atendimento,
      ds_log)
    values (LOCALTIMESTAMP,
      NEW.nm_usuario,
      1,
      NEW.nr_atendimento,
      wheb_mensagem_pck.get_texto(803179) || ': ' || chr(13) ||
      wheb_mensagem_pck.get_texto(803180) || ' ' || nr_prontuario_w || chr(13) ||
      wheb_mensagem_pck.get_texto(301081) || ' ' || NEW.cd_pessoa_fisica || chr(13) ||
      wheb_mensagem_pck.get_texto(800315) || ': ' || NEW.nr_atendimento || chr(13) ||
      'Obj: atendimento_paciente_insert' || chr(13) ||
      wheb_mensagem_pck.get_texto(802054) || ' ' || NEW.ie_tipo_atendimento || chr(13) ||
      wheb_mensagem_pck.get_texto(803181) || ' ' || NEW.ie_clinica);
    exception
    when others then
      null;
    end;
  end if;
end if;


if  ((ie_gerar_ccih_w = 'S' AND NEW.ie_tipo_atendimento = 1) or
  ((ie_gerar_ccih_w = 'E') and (NEW.ie_tipo_atendimento in (1,7))) or
   ((ie_gerar_ccih_w = 'A') and (NEW.ie_tipo_atendimento in (1,8))) or (ie_gerar_ccih_w = 'T')) then
  CALL ccih_gerar_ficha_ocorrencia(NEW.nr_atendimento,NEW.dt_entrada, NEW.cd_medico_resp, NEW.nm_usuario,'N',NEW.ie_clinica);
end if;


select  obter_se_assumir_paciente(NEW.cd_medico_resp, NEW.cd_estabelecimento)
into STRICT  ie_permissao_aten_w
;

if (ie_permissao_aten_w = 'N') then
  CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(198283);

end if;

if (NEW.nr_seq_pac_senha_fila is not null) then
  update  paciente_senha_fila
  set  dt_vinculacao_senha   = LOCALTIMESTAMP,
    nm_usuario    = coalesce(NEW.nm_usuario, wheb_usuario_pck.get_nm_usuario),
    nm_paciente    = CASE WHEN NEW.cd_pessoa_fisica = NULL THEN substr(obter_nome_pf(NEW.cd_pessoa_fisica),1,255)  ELSE null END ,
    cd_pessoa_fisica   = NEW.cd_pessoa_fisica
  where  nr_sequencia     = NEW.nr_seq_pac_senha_fila;

  if (ie_inicia_atend_vinc_senha_w = 'S') then
    CALL iniciar_finalizar_atend_senha(NEW.nr_seq_pac_senha_fila, 'I', NEW.nm_usuario, NEW.cd_estabelecimento, 'N');
  end if;

  ie_vincular_senha_w := obter_param_usuario(916, 1089, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_vincular_senha_w);
  if (ie_vincular_senha_w = 'C')  then

    insert into senhas_atendimento(
      nr_sequencia,
      nr_seq_pac_senha_fila,
      nr_atendimento,
      dt_atualizacao,
      nm_usuario,
      dt_atualizacao_nrec,
      nm_usuario_nrec
    ) values (  nextval('senhas_atendimento_seq'),
      NEW.nr_seq_pac_senha_fila,
      NEW.nr_atendimento,
      LOCALTIMESTAMP,
      NEW.nm_usuario,
      LOCALTIMESTAMP,
      NEW.nm_usuario);
  end if;

end if;

select  count(*)
into STRICT  qt_disp_diaria_w
from  dispensa_cob_diaria
where  cd_pessoa_fisica  = NEW.cd_pessoa_fisica
and  cd_estabelecimento  = NEW.cd_estabelecimento
and  nr_atendimento    is null;

if (qt_disp_diaria_w > 0) then
  update  dispensa_cob_diaria
  set  nr_atendimento    = NEW.nr_atendimento
  where  cd_pessoa_fisica  = NEW.cd_pessoa_fisica
  and  cd_estabelecimento  = NEW.cd_estabelecimento
  and  nr_atendimento    is null;
end if;


qt_dias_dispensa_w:= 0;
open C02;
loop
fetch C02 into
  qt_dias_dispensa_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
  BEGIN
  qt_dias_dispensa_w:= qt_dias_dispensa_w;
  end;
end loop;
close C02;

if (qt_dias_dispensa_w > 0) then

  select   coalesce(max(cd_pessoa_fisica),NEW.cd_pessoa_fisica)
  into STRICT  cd_pessoa_usuario_w
  from   usuario
  where   nm_usuario = NEW.nm_usuario;

  insert into dispensa_cob_diaria(nr_sequencia,
    cd_estabelecimento,
    cd_pessoa_fisica,
    dt_atualizacao,
    nm_usuario,
    dt_atualizacao_nrec,
    nm_usuario_nrec,
    dt_inicio,
    dt_fim,
    cd_pessoa_resp,
    nr_atendimento,
    dt_liberacao,
    ds_justificativa)
  values (nextval('dispensa_cob_diaria_seq'),
    NEW.cd_estabelecimento,
    NEW.cd_pessoa_fisica,
    LOCALTIMESTAMP,
    NEW.nm_usuario,
    LOCALTIMESTAMP,
    NEW.nm_usuario,
    NEW.dt_entrada,
    NEW.dt_entrada + qt_dias_dispensa_w,
    cd_pessoa_usuario_w,
    NEW.nr_atendimento,
    LOCALTIMESTAMP,
    wheb_mensagem_pck.get_texto(795787));
end if;


CALL gerar_regra_prontuario_gestao(NEW.ie_tipo_atendimento, NEW.cd_estabelecimento, NEW.nr_atendimento, NEW.cd_pessoa_fisica, NEW.nm_usuario, null, null, null, NEW.ie_clinica, null, null, null);
ie_tipo_atend_pront_w := obter_param_usuario(941, 162, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_tipo_atend_pront_w);

if (ie_tipo_atend_pront_w = 'S') then
  update  same_prontuario
  set  ie_tipo_atend_prontuario = NEW.ie_tipo_atendimento
  where  nr_atendimento = NEW.nr_atendimento
  and  ie_tipo_atend_prontuario <> 1;
end if;

ie_vincular_orcamento_w  := coalesce(obter_valor_param_usuario(916,271,obter_perfil_ativo,NEW.nm_usuario,0),'N');

if (ie_vincular_orcamento_w = 'S') then
  select  coalesce(max(nr_sequencia_orcamento),0)
  into STRICT  nr_seq_orcamento_w
  from  orcamento_paciente
  where  cd_pessoa_fisica  = NEW.cd_pessoa_fisica
  and  nr_atendimento  is null;

  if (nr_seq_orcamento_w  > 0) then
    update  orcamento_paciente
    set  nr_atendimento    = NEW.nr_atendimento
    where  nr_sequencia_orcamento  = nr_seq_orcamento_w;
  end if;

elsif (ie_vincular_orcamento_w = 'C') then
  select  coalesce(max(nr_sequencia_orcamento),0)
  into STRICT  nr_seq_orcamento_w
  from  orcamento_paciente
  where  cd_pessoa_fisica  = NEW.cd_pessoa_fisica
  and  ie_clinica    = NEW.ie_clinica
  and  ie_tipo_atendimento  = NEW.ie_tipo_atendimento
  and  nr_atendimento  is null;

  if (nr_seq_orcamento_w  > 0) then
    update  orcamento_paciente
    set  nr_atendimento    = NEW.nr_atendimento
    where  nr_sequencia_orcamento  = nr_seq_orcamento_w;
  end if;
end if;

if (NEW.ie_carater_inter_sus is null) then

  BEGIN
  insert into log_atendimento(
    dt_atualizacao,
    nm_usuario,
    cd_log,
    nr_atendimento,
    ds_log)
  values (LOCALTIMESTAMP,
    NEW.nm_usuario,
    2,
    NEW.nr_atendimento,
    wheb_mensagem_pck.get_texto(803155) || ': ' || chr(13) ||
    upper(wheb_mensagem_pck.get_texto(301081)) || ' ' || NEW.cd_pessoa_fisica || chr(13) ||
    upper(wheb_mensagem_pck.get_texto(800315)) || ': ' || NEW.nr_atendimento || chr(13) ||
    'OBJ: ATENDIMENTO_PACIENTE_INSERT ' || chr(13) ||
    wheb_mensagem_pck.get_texto(803152) || ': ' || obter_perfil_ativo || chr(13) ||
    wheb_mensagem_pck.get_texto(796343) || ': ' || NEW.cd_estabelecimento || chr(13) ||
    'IE_CARATER_INTER_SUS ' || wheb_mensagem_pck.get_texto(803159) || ' ' || chr(13));
  exception
  when others then
    null;
  end;

end if;

if (NEW.ie_paciente_isolado = 'S') then
  insert into atend_paciente_hist(nr_sequencia,
    nr_atendimento,
    cd_pessoa_fisica,
    dt_inicial,
    dt_final,
    ie_evento,
    nm_usuario,
    dt_atualizacao,
    nm_usuario_nrec,
    dt_atualizacao_nrec)
  values (nextval('atend_paciente_hist_seq'),
    NEW.nr_atendimento,
    NEW.cd_pessoa_fisica,
    LOCALTIMESTAMP,
    null,
    'I',
    NEW.nm_usuario,
    LOCALTIMESTAMP,
    NEW.nm_usuario,
    LOCALTIMESTAMP);
end  if;

select  max(nr_sequencia)
into STRICT  nr_seq_pac_visita_w
from  atendimento_visita
where  cd_pessoa_fisica  = NEW.cd_pessoa_fisica
and  ie_paciente    = 'S'
and  nr_atendimento is null
and  ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(NEW.dt_entrada) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada);


if (coalesce(nr_seq_pac_visita_w,0) > 0) then
  update  atendimento_visita
  set  nr_atendimento  = NEW.nr_atendimento
  where  nr_sequencia  = nr_seq_pac_visita_w;
end if;

open C03;
loop
fetch C03 into
  ie_regra_gerar_pac_vacina_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
  BEGIN
  CALL Inserir_pac_lista_espera_atend(NEW.nr_atendimento, NEW.cd_estabelecimento, NEW.cd_pessoa_fisica, NEW.nm_usuario);
  end;
end loop;
close C03;


ie_integracao_aghos_w := obter_dados_param_atend(NEW.cd_estabelecimento, 'AG');


select  coalesce(max(ie_integracao_ativa),'N')
into STRICT  ie_integra_regul_w
from  regulacao_parametro;

if (NEW.ie_tipo_atendimento = 1) and (NEW.ie_tipo_convenio = 3) then

  ie_atend_sem_autorizacao_w := obter_param_usuario(916, 1008, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_atend_sem_autorizacao_w);

  if (ie_integra_regul_w = 'S') then

    select  max(nr_sequencia)
    into STRICT  nr_seq_regulacao_w
    from  regulacao_atendimento
    where  cd_pessoa_fisica  = NEW.cd_pessoa_fisica
    and  ((ie_status_regulacao = '13') or
       (ie_status_regulacao = '5' AND cd_cnes_executante is null))
    and  nr_atendimento is null;

    if (coalesce(nr_seq_regulacao_w,0) > 0) then
      CALL reg_internar_paciente(nr_seq_regulacao_w, NEW.nr_atendimento, NEW.cd_medico_resp, NEW.nm_usuario);
    end if;
  end if;


  if (obter_dados_param_atend(NEW.cd_estabelecimento,'GI') = 'S') and (NEW.ie_tipo_atendimento = 1) and (NEW.ie_tipo_convenio = 3) then

    select  CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
    into STRICT  ie_possui_autor_gerint_w
    from  gerint_solic_internacao
    where  cd_pessoa_fisica = NEW.cd_pessoa_fisica
    and    ie_situacao = 'A'
    and    nr_protocolo_solicitacao is not null
    and    nr_atendimento is null;

    if (ie_possui_autor_gerint_w = 'N') and (ie_atend_sem_autorizacao_w = 'N') then
      CALL Wheb_mensagem_pck.exibir_mensagem_abort(988519);
    end if;

  end if;


  if (ie_integracao_aghos_w = 'S') then

    ie_mostra_erro_aghos_w := obter_param_usuario(916, 1068, obter_perfil_ativo, NEW.nm_usuario, NEW.cd_estabelecimento, ie_mostra_erro_aghos_w);

    nm_pessoa_fisica_w  := substr(obter_nome_pf(NEW.cd_pessoa_fisica),1,60);

    select  max(nr_internacao)
    into STRICT  nr_internacao_w
    from  solicitacao_tasy_aghos
    where  ((cd_pessoa_fisica = NEW.cd_pessoa_fisica)
    or (nm_paciente = nm_pessoa_fisica_w))
    and  ie_situacao = 'AU'
    and  nr_atendimento is null;

    if (nr_internacao_w is null) then

      select   CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
      into STRICT  ie_solic_aghos_w
      from    solicitacao_tasy_aghos
      where  nr_atendimento = NEW.nr_atendimento
      and    ie_situacao = 'I';

      If (ie_atend_sem_autorizacao_w = 'N') and (ie_solic_aghos_w = 'N') then
        CALL Wheb_mensagem_pck.exibir_mensagem_abort(222091);
      end if;
    else
      BEGIN
        CALL Aghos_internacao_solicitacao(nr_internacao_w, NEW.nr_atendimento, NEW.nm_usuario, NEW.cd_estabelecimento);
      exception
        when  others then
          BEGIN
          if (ie_mostra_erro_aghos_w = 'S') then

            ds_sqlerror_w := sqlerrm;
            ds_erro_aghos_w := substr(Ajusta_mensagem_erro_aghos(ds_sqlerror_w), 1, 2000);

            If (ds_erro_aghos_w is not null) then
              CALL wheb_mensagem_pck.exibir_mensagem_abort(228493, 'DS_MENSAGEM=' || ds_erro_aghos_w);
            else
              CALL wheb_mensagem_pck.exibir_mensagem_abort(228493, 'DS_MENSAGEM=' || ds_sqlerror_w);
            end if;

          end if;
          end;
      end;
    end if;
  end if;
end if;


if (NEW.CD_MEDICO_REFERIDO is not null) then

  INSERT INTO PF_MEDICO_EXTERNO(
    NR_SEQUENCIA,
    DT_ATUALIZACAO,
    NM_USUARIO,
    DT_ATUALIZACAO_NREC,
    NM_USUARIO_NREC,
    CD_MEDICO,
    CD_PESSOA_FISICA)
  SELECT  nextval('pf_medico_externo_seq'),
    LOCALTIMESTAMP,
    NEW.nm_usuario,
    LOCALTIMESTAMP,
    NEW.nm_usuario,
    NEW.CD_MEDICO_REFERIDO,
    NEW.cd_pessoa_fisica
  FROM  MEDICO
  where  CD_PESSOA_FISICA = NEW.CD_MEDICO_REFERIDO
  and     IE_VINCULO_MEDICO = 14
  and     not exists (  SELECT  1
        from   PF_MEDICO_EXTERNO x
        where   x.CD_MEDICO = NEW.CD_MEDICO_REFERIDO
        and   x.CD_PESSOA_FISICA = NEW.cd_pessoa_fisica);

  if (NEW.nr_seq_episodio is not null) then

    update	episodio_paciente
    set	cd_medico_referido = coalesce(cd_medico_referido,NEW.cd_medico_referido),
	cd_estabelecimento = coalesce(cd_estabelecimento,NEW.cd_estabelecimento)
    where   nr_sequencia = NEW.nr_seq_episodio;

  end if;

end if;

CALL gerar_reconciliacao_paciente(NEW.nm_usuario, NEW.nr_atendimento, coalesce(obter_perfil_ativo,NEW.cd_perfil_ativo), 'E', 'N', null,'N');

select  (CASE WHEN NEW.nr_atendimento_mae IS NOT NULL THEN 'N' ELSE 'S' END)
into STRICT  ie_cons_episodio_w
;

open c06;
loop
fetch c06 into
  qt_registro_w,
  qt_tempo_regra_w,
  qt_tempo_normal_w,
  qt_tempo_atraso_w,
  nr_seq_regra_w,
  ie_opcao_wl_w;
EXIT WHEN NOT FOUND; /* apply on c06 */
  BEGIN
    if (NEW.dt_alta is null and NEW.dt_previsto_alta is null and obter_se_regra_geracao(nr_seq_regra_w,NEW.nr_seq_episodio,NEW.nr_seq_tipo_admissao_fat) = 'S') then

      if (qt_tempo_regra_w > 0 and ie_opcao_wl_w = 'D') then
        CALL wl_gerar_finalizar_tarefa('ED','I',NEW.nr_atendimento,NEW.cd_pessoa_fisica,NEW.nm_usuario,NEW.dt_entrada+(qt_tempo_regra_w/24),'N',null,null,null,null,null,null,null,null,null,nr_seq_regra_w,null,null,null,null,null,null,null,NEW.dt_entrada,NEW.nr_seq_episodio,null,null,null,null,ie_cons_episodio_w);
      elsif (qt_tempo_normal_w > 0 and (ie_opcao_wl_w = 'A' or ie_opcao_wl_w = 'E')) then
        CALL wl_gerar_finalizar_tarefa('ED','I',NEW.nr_atendimento,NEW.cd_pessoa_fisica,NEW.nm_usuario,NEW.dt_entrada+(qt_tempo_normal_w/24),'N',null,null,null,null,null,null,null,null,null,nr_seq_regra_w,null,null,null,null,null,null,null,NEW.dt_entrada,NEW.nr_seq_episodio,null,null,null,null,ie_cons_episodio_w);
      end if;
    end if;
  end;
end loop;
close c06;

qt_tempo_regra_w :=0;

open c04;
loop
fetch c04 into
  qt_tempo_regra_w,
  qt_tempo_normal_w,
  nr_seq_regra_w,
  ie_escala_w,
  ie_opcao_wl_w,
  nm_tabela_w;
EXIT WHEN NOT FOUND; /* apply on c04 */
  BEGIN
  if (obter_se_regra_geracao(nr_seq_regra_w,NEW.nr_seq_episodio,NEW.nr_seq_tipo_admissao_fat) = 'S') then

    if (qt_tempo_normal_w > 0 and (ie_opcao_wl_w = 'A' or ie_opcao_wl_w = 'E')) then
      CALL wl_gerar_finalizar_tarefa('S','I',NEW.nr_atendimento,NEW.cd_pessoa_fisica,NEW.nm_usuario,NEW.dt_entrada+(qt_tempo_normal_w/24),'N',null,null,null,null,null,null,ie_escala_w,null,null,nr_seq_regra_w,null,null,null,null,null,nm_tabela_w,null,NEW.dt_entrada,NEW.nr_seq_episodio,null,null,null,null,ie_cons_episodio_w);
    elsif (qt_tempo_regra_w > 0 and ie_opcao_wl_w = 'D') then
      CALL wl_gerar_finalizar_tarefa('S','I',NEW.nr_atendimento,NEW.cd_pessoa_fisica,NEW.nm_usuario,NEW.dt_entrada+(qt_tempo_regra_w/24),'N',null,null,null,null,null,null,ie_escala_w,null,null,nr_seq_regra_w,null,null,null,null,null,nm_tabela_w,null,NEW.dt_entrada,NEW.nr_seq_episodio,null,null,null,null,ie_cons_episodio_w);
    end if;
  end if;
  end;
end loop;
close c04;

open c07;
loop
fetch c07 into
  qt_tempo_normal_w,
  nr_seq_regra_w,
  ie_tipo_diagnostico_w,
  ie_classif_diag_w;
EXIT WHEN NOT FOUND; /* apply on c07 */
  BEGIN
    if (qt_tempo_normal_w > 0 and (ie_tipo_diagnostico_w > 0 or ie_classif_diag_w is not null) and obter_se_regra_geracao(nr_seq_regra_w,NEW.nr_seq_episodio,NEW.nr_seq_tipo_admissao_fat) = 'S') then

      CALL wl_gerar_finalizar_tarefa('DG','I',NEW.nr_atendimento,NEW.cd_pessoa_fisica,NEW.nm_usuario,NEW.dt_entrada+(qt_tempo_normal_w/24),'N',null,null,null,null,null,null,null,null,null,nr_seq_regra_w,ie_tipo_diagnostico_w,null,null,null,null,null,null,NEW.dt_entrada,NEW.nr_seq_episodio,null,null,null,null,ie_cons_episodio_w, ie_classif_diag_w);
    end if;
  end;
end loop;
close c07;

open c08;
loop
fetch c08 into
  cd_tipo_evolucao_w,
  ie_opcao_wl_w,
  qt_tempo_regra_w,
  qt_tempo_normal_w,
  qt_tempo_atraso_w,
  nr_seq_regra_w;
EXIT WHEN NOT FOUND; /* apply on c08 */
  BEGIN
    if (obter_se_regra_geracao(nr_seq_regra_w,NEW.nr_seq_episodio,NEW.nr_seq_tipo_admissao_fat) = 'S') then

      if (qt_tempo_regra_w > 0 and ie_opcao_wl_w = 'D') then
        CALL wl_gerar_finalizar_tarefa('CN','I',NEW.nr_atendimento,NEW.cd_pessoa_fisica,NEW.nm_usuario,NEW.dt_entrada+(qt_tempo_regra_w/24),'N', cd_tipo_evolucao_w, null,null,null,null,null,null,null,null,nr_seq_regra_w,null,null,null,null,null,null,null,NEW.dt_entrada,NEW.nr_seq_episodio,null,null,null,null,ie_cons_episodio_w);
      elsif (qt_tempo_normal_w > 0 and (ie_opcao_wl_w = 'A' or ie_opcao_wl_w = 'E')) then
        CALL wl_gerar_finalizar_tarefa('CN','I',NEW.nr_atendimento,NEW.cd_pessoa_fisica,NEW.nm_usuario,NEW.dt_entrada+(qt_tempo_normal_w/24),'N', cd_tipo_evolucao_w, null,null,null,null,null,null,null,null,nr_seq_regra_w,null,null,null,null,null,null,null,NEW.dt_entrada,NEW.nr_seq_episodio,null,null,null,null,ie_cons_episodio_w);
      end if;
    end if;
  end;
end loop;
close c08;

open c09;
loop
fetch c09 into
  ie_opcao_wl_w,
  qt_tempo_regra_w,
  qt_tempo_normal_w,
  qt_tempo_atraso_w,
  nr_seq_regra_w;
EXIT WHEN NOT FOUND; /* apply on c09 */
  BEGIN
    if (obter_se_regra_geracao(nr_seq_regra_w,NEW.nr_seq_episodio,NEW.nr_seq_tipo_admissao_fat) = 'S') then

      if (qt_tempo_regra_w > 0 and ie_opcao_wl_w = 'D') then
        CALL wl_gerar_finalizar_tarefa('WO','I',NEW.nr_atendimento,NEW.cd_pessoa_fisica,NEW.nm_usuario,NEW.dt_entrada+(qt_tempo_regra_w/24),'N', null,null,null,null,null,null,null,null,null,nr_seq_regra_w,null,null,null,null,null,null,null,NEW.dt_entrada,NEW.nr_seq_episodio,null,null,null,null,ie_cons_episodio_w);
      elsif (qt_tempo_normal_w > 0 and (ie_opcao_wl_w = 'A' or ie_opcao_wl_w = 'E')) then
        CALL wl_gerar_finalizar_tarefa('WO','I',NEW.nr_atendimento,NEW.cd_pessoa_fisica,NEW.nm_usuario,NEW.dt_entrada+(qt_tempo_normal_w/24),'N', null,null,null,null,null,null,null,null,null,nr_seq_regra_w,null,null,null,null,null,null,null,NEW.dt_entrada,NEW.nr_seq_episodio,null,null,null,null,ie_cons_episodio_w);
      end if;
    end if;
  end;
end loop;
close c09;

open c10;
loop
fetch c10 into
  qt_tempo_normal_w,
  nr_seq_regra_w;
EXIT WHEN NOT FOUND; /* apply on c10 */
  BEGIN
    if (obter_se_regra_geracao(nr_seq_regra_w,NEW.nr_seq_episodio,NEW.nr_seq_tipo_admissao_fat) = 'S') then

      CALL wl_gerar_finalizar_tarefa('ML','I',NEW.nr_atendimento,NEW.cd_pessoa_fisica,NEW.nm_usuario,NEW.dt_entrada+(qt_tempo_normal_w/24),'N', null,null,null,null,null,null,null,null,null,nr_seq_regra_w,null,null,null,null,null,null,null,NEW.dt_entrada,NEW.nr_seq_episodio,null,null,null,null,ie_cons_episodio_w);
    end if;
  end;
end loop;
close c10;

BEGIN
  SELECT PFA.IE_MOTIVO_SEM_CPF,
         PFA.IE_CONTROL_EXT
    INTO STRICT IE_MOTIVO_SEM_CPF_W,
         IE_CONTROL_EXT_W
    FROM PESSOA_FISICA_AUX PFA
   WHERE PFA.CD_PESSOA_FISICA = NEW.CD_PESSOA_FISICA  LIMIT 1;

  BEGIN
    SELECT APA.*
      INTO STRICT ATEND_PACIENTE_ADIC_W
      FROM ATEND_PACIENTE_ADIC APA
     WHERE APA.NR_ATENDIMENTO = NEW.NR_ATENDIMENTO;
  EXCEPTION
    WHEN no_data_found THEN
         ATEND_PACIENTE_ADIC_W := NULL;
  END;

  ATEND_PACIENTE_ADIC_W.NR_ATENDIMENTO    := NEW.NR_ATENDIMENTO;
  ATEND_PACIENTE_ADIC_W.IE_MOTIVO_SEM_CPF := IE_MOTIVO_SEM_CPF_W;
  ATEND_PACIENTE_ADIC_W.IE_CONTROLE_EXT   := IE_CONTROL_EXT_W;
  ATEND_PACIENTE_ADIC_W.CD_PESSOA_FISICA  := NEW.CD_PESSOA_FISICA;
  ATEND_PACIENTE_ADIC_W.DT_ATUALIZACAO    := LOCALTIMESTAMP;
  ATEND_PACIENTE_ADIC_W.NM_USUARIO        := NEW.NM_USUARIO;

  IF (ATEND_PACIENTE_ADIC_W.NM_USUARIO_NREC IS NULL) THEN
     ATEND_PACIENTE_ADIC_W.NM_USUARIO_NREC := ATEND_PACIENTE_ADIC_W.NM_USUARIO;
  END IF;

  IF (ATEND_PACIENTE_ADIC_W.DT_ATUALIZACAO_NREC IS NULL) THEN
     ATEND_PACIENTE_ADIC_W.DT_ATUALIZACAO_NREC := ATEND_PACIENTE_ADIC_W.DT_ATUALIZACAO;
  END IF;

  IF (ATEND_PACIENTE_ADIC_W.NR_SEQUENCIA IS NULL) THEN
     SELECT nextval('atend_paciente_adic_seq')
       INTO STRICT ATEND_PACIENTE_ADIC_W.NR_SEQUENCIA
;

     INSERT INTO ATEND_PACIENTE_ADIC
     VALUES (ATEND_PACIENTE_ADIC_W.*);
  ELSE
     UPDATE ATEND_PACIENTE_ADIC APA
        SET ROW = ATEND_PACIENTE_ADIC_W
      WHERE APA.NR_SEQUENCIA = ATEND_PACIENTE_ADIC_W.NR_SEQUENCIA;
  END IF;
EXCEPTION
  WHEN no_data_found THEN
       NULL;
END;

UPDATE pessoa_fisica_aux
 SET nr_primeiro_atend = NEW.nr_atendimento
WHERE cd_pessoa_fisica = NEW.cd_pessoa_fisica
 AND nr_primeiro_atend IS NULL;

if ((NEW.dt_previsto_alta is not null) or (NEW.ie_probabilidade_alta is not null)) then
	insert into encounter_discharge_prob(
			NR_SEQUENCIA,
			DT_ATUALIZACAO,
			NM_USUARIO,
			DT_ATUALIZACAO_NREC,
			NM_USUARIO_NREC,
			DT_PROBABILIDADE_ALTA,
			IE_PROBABILIDADE_ALTA,
			NR_ATENDIMENTO)
		values (	nextval('encounter_discharge_prob_seq'),
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			LOCALTIMESTAMP,
			NEW.nm_usuario,
			NEW.dt_previsto_alta,
			NEW.ie_probabilidade_alta,
			NEW.nr_atendimento
			);
end if;

if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'ja_JP') then
  CALL GENERATE_CPOE_SLIP_NUMBER(NEW.nr_atendimento,NEW.ie_tipo_atendimento,NEW.cd_pessoa_fisica,null,null,NEW.nm_usuario);
end if;

end if;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_atendimento_paciente_insert() FROM PUBLIC;

CREATE TRIGGER atendimento_paciente_insert
	AFTER INSERT ON atendimento_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_atendimento_paciente_insert();

