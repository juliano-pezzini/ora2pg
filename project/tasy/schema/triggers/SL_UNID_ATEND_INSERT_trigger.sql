-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS sl_unid_atend_insert ON sl_unid_atend CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_sl_unid_atend_insert() RETURNS trigger AS $BODY$
declare

cd_pessoa_destino_w 	varchar(30);
ie_dbms_alert_w		varchar(1);

BEGIN

ie_dbms_alert_w := Obter_param_Usuario(75, 63, obter_perfil_ativo, coalesce(NEW.nm_usuario,'Tasy'), wheb_usuario_pck.get_cd_estabelecimento, ie_dbms_alert_w);

if (NEW.cd_setor_higienizacao is null) then

	select	distinct min(f.cd_pessoa_fisica)
	into STRICT	cd_pessoa_destino_w
	FROM escala_grupo g, escala_diaria_adic f, escala_diaria d, escala_classif c, escala e
LEFT OUTER JOIN escala_setor h ON (e.nr_sequencia = h.nr_seq_escala)
WHERE c.nr_sequencia = g.nr_seq_classif and g.nr_sequencia = e.nr_seq_grupo and e.nr_sequencia = d.nr_seq_escala and f.nr_seq_escala_diaria = d.nr_sequencia  and obter_tipo_classif_escala(e.nr_sequencia) = 'S' and LOCALTIMESTAMP between dt_inicio and dt_fim and substr(obter_se_prof_ocup_livre(f.cd_pessoa_fisica,trunc(LOCALTIMESTAMP)),1,1) = 'L' and ((exists ( SELECT	1
			   from		escala_setor h
			   where	h.nr_seq_escala = e.nr_sequencia
			   and		h.cd_setor_atendimento in (select cd_setor_atendimento from unidade_atendimento where nr_seq_interno = NEW.nr_seq_unidade)))
			   or (h.cd_setor_atendimento is null)) order by substr(sl_obter_ult_serv_prof(f.cd_pessoa_fisica,LOCALTIMESTAMP, null, 'DI'),1,90);

else

	select	distinct min(f.cd_pessoa_fisica)
	into STRICT	cd_pessoa_destino_w
	FROM escala_grupo g, escala_diaria_adic f, escala_diaria d, escala_classif c, escala e
LEFT OUTER JOIN escala_setor h ON (e.nr_sequencia = h.nr_seq_escala)
WHERE c.nr_sequencia = g.nr_seq_classif and g.nr_sequencia = e.nr_seq_grupo and e.nr_sequencia = d.nr_seq_escala and f.nr_seq_escala_diaria = d.nr_sequencia  and obter_tipo_classif_escala(e.nr_sequencia) = 'S' and LOCALTIMESTAMP between dt_inicio and dt_fim and substr(obter_se_prof_ocup_livre(f.cd_pessoa_fisica,trunc(LOCALTIMESTAMP)),1,1) = 'L' and ((exists ( SELECT	1
			   from		escala_setor h
			   where	h.nr_seq_escala = e.nr_sequencia
			   and		h.cd_setor_atendimento = NEW.cd_setor_higienizacao))
			   or (h.cd_setor_atendimento is null)) order by substr(sl_obter_ult_serv_prof(f.cd_pessoa_fisica,LOCALTIMESTAMP, null, 'DI'),1,90);

end if;

if (cd_pessoa_destino_w is not null) then
	NEW.cd_prof_previsto := cd_pessoa_destino_w;
end if;

If (ie_dbms_alert_w = 'S') then
	CALL Gestao_Serv_leito_alert_signal(coalesce(NEW.nm_usuario,'Tasy'));
End if;

RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_sl_unid_atend_insert() FROM PUBLIC;

CREATE TRIGGER sl_unid_atend_insert
	BEFORE INSERT ON sl_unid_atend FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_sl_unid_atend_insert();

