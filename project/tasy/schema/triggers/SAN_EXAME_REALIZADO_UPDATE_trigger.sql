-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS san_exame_realizado_update ON san_exame_realizado CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_san_exame_realizado_update() RETURNS trigger AS $BODY$
declare
qt_minima_w			double precision;
qt_maxima_w			double precision;
nr_seq_impedimento_w		bigint;
ie_resultado_w			varchar(2);
nr_seq_doacao_w			bigint;
qt_impedimentos_w		smallint;
ie_fator_rh_w			varchar(1);
ie_tipo_sangue_w		varchar(1);
nr_seq_reserva_w		bigint;
nr_seq_transfusao_w		bigint;
cd_pessoa_fisica_w		varchar(10) := 'X';
ie_origem_w			varchar(1);
cd_tipo_resultado_w		varchar(5);

qt_procedimento_w		double precision;

ds_log_w			varchar(2000);
nr_seq_doacao_tmp_w		bigint;
nr_amostra_w			bigint;
nr_seq_res_prod_w		bigint;
ds_resultado_w			varchar(255);
excluir_todos_proc_w		varchar(1);
ie_verifica_liberacao_w		varchar(1);
ie_atualiza_nulo_w		varchar(1);
ie_tipo_sangue_pf_w		varchar(255);
ie_subgrupo_abo_w		san_exame.ie_subgrupo_abo%type;
ds_result_sub_abo_w		san_exame_realizado.ds_resultado%type;
nr_seq_subgrupo_w		subtipo_sanguineo.nr_sequencia%type;
BEGIN
  BEGIN

excluir_todos_proc_w := obter_param_usuario(450, 257, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, excluir_todos_proc_w);
ie_verifica_liberacao_w := obter_param_usuario(450, 334, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_verifica_liberacao_w);

if (OLD.nr_seq_propaci is not null) and (NEW.nr_seq_propaci is null) then
	select	coalesce(max(qt_procedimento),0)
	into STRICT	qt_procedimento_w
	from	procedimento_paciente
	where	nr_sequencia = OLD.nr_seq_propaci;

	if (qt_procedimento_w > 1) and (excluir_todos_proc_w = 'N') then
		update	procedimento_paciente
		set	qt_procedimento = qt_procedimento - 1
		where	nr_sequencia = OLD.nr_seq_propaci;
	else
		BEGIN
		delete	FROM procedimento_paciente
		where	nr_sequencia = OLD.nr_seq_propaci;
		exception
			when others then
				NEW.nr_seq_propaci := NEW.nr_seq_propaci;
		end;
	end if;
else
	select	coalesce(max(nr_seq_doacao),0),
		coalesce(max(nr_seq_reserva),0),
		coalesce(max(nr_seq_transfusao),0),
		coalesce(max(ie_origem),'X'),
		coalesce(max(nr_seq_res_prod),0)
	into STRICT	nr_seq_doacao_w,
		nr_seq_reserva_w,
		nr_seq_transfusao_w,
		ie_origem_w,
		nr_seq_res_prod_w
	from	san_exame_lote
	where	nr_sequencia = NEW.nr_seq_exame_lote;

	if (nr_seq_res_prod_w > 0) then
		select 	coalesce(max(nr_seq_reserva),0)
		into STRICT	nr_seq_reserva_w
		from	san_reserva_prod
		where	nr_sequencia = nr_seq_res_prod_w;
	end if;

	select 	coalesce(max(ie_atualiza_nulo),'N')
	into STRICT	ie_atualiza_nulo_w
	from	san_parametro
	where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

	select	qt_minima,
		qt_maxima,
		nr_seq_impedimento,
		ie_resultado,
		ie_tipo_sangue,
		ie_subgrupo_abo,
		ie_fator_rh,
		cd_tipo_resultado
	into STRICT	qt_minima_w,
		qt_maxima_w,
		nr_seq_impedimento_w,
		ie_resultado_w,
		ie_tipo_sangue_w,
		ie_subgrupo_abo_w,
		ie_fator_rh_w,
		cd_tipo_resultado_w
	from	san_exame
	where	nr_sequencia = NEW.nr_seq_exame;

	if (nr_seq_doacao_w <> 0) then
		if (ie_resultado_w = 'D') then
			NEW.vl_resultado := null;
		elsif (ie_resultado_w = 'N') then
			NEW.ds_resultado := null;
		end if;
		if (nr_seq_impedimento_w is not null) then
			if (((OLD.vl_resultado > qt_maxima_w) or (OLD.vl_resultado < qt_minima_w)) and
		   	   (NEW.vl_resultado <= qt_maxima_w AND NEW.vl_resultado >= qt_minima_w)) or (cd_tipo_resultado_w = 1356 and (OLD.ds_resultado = 'Positivo' or OLD.ds_resultado = 'Indeterminado') and
			    NEW.ds_resultado <> 'Positivo' and NEW.ds_resultado <> 'Indeterminado') or (cd_tipo_resultado_w = 1357 and (OLD.ds_resultado = 'Reagente' or OLD.ds_resultado = 'Indeterminado') and
			    NEW.ds_resultado <> 'Reagente' and NEW.ds_resultado <> 'Indeterminado') then

				update	san_questionario
				set	ie_impede_doacao = 'N'
				where	nr_seq_impedimento = nr_seq_impedimento_w
				and 	nr_seq_doacao = nr_seq_doacao_w;

			end if;
			if ((NEW.vl_resultado > qt_maxima_w) or (NEW.vl_resultado < qt_minima_w)) or (cd_tipo_resultado_w = 1356 and (NEW.ds_resultado = 'Positivo' or NEW.ds_resultado = 'Indeterminado')) or (cd_tipo_resultado_w = 1357 and (NEW.ds_resultado = 'Reagente' or NEW.ds_resultado = 'Indeterminado')) then
				BEGIN
				insert into san_doacao_impedimento(nr_seq_doacao, nr_seq_impedimento, dt_atualizacao, nm_usuario)
								    values (nr_seq_doacao_w, nr_seq_impedimento_w, LOCALTIMESTAMP, NEW.nm_usuario);
				exception
					when others then
						nr_seq_impedimento_w := null;
				end;
			end if;
		end if;
	end if;

	if	((((nr_seq_transfusao_w <> 0) or (nr_seq_reserva_w <> 0 AND nr_seq_res_prod_w = 0)) and (ie_origem_w in ('R','T','X'))) or (nr_seq_doacao_w <> 0)) and
		((ie_tipo_sangue_w = 'S') or (ie_fator_rh_w = 'S') or (ie_subgrupo_abo_w = 'S')) then
		if (nr_seq_transfusao_w <> 0) then
			select cd_pessoa_fisica
			into STRICT cd_pessoa_fisica_w
			from san_transfusao
			where nr_sequencia = nr_seq_transfusao_w;
		elsif (nr_seq_reserva_w <> 0) then
			select cd_pessoa_fisica
			into STRICT cd_pessoa_fisica_w
			from san_reserva
			where nr_sequencia = nr_seq_reserva_w;
		elsif (nr_seq_doacao_w <> 0) then
			select cd_pessoa_fisica
			into STRICT cd_pessoa_fisica_w
			from san_doacao
			where nr_sequencia = nr_seq_doacao_w;
		end if;


		if (cd_pessoa_fisica_w <> 'X') then
			BEGIN
				ds_resultado_w	:= NEW.ds_resultado;
				--Os273189 clicente utiliza no o dominío Positivo/Negativo
				if (ie_fator_rh_w = 'S') then
					if (ds_resultado_w = 'Negativo') or (ds_resultado_w = 'NEG')  then
						ds_resultado_w := '-';
					elsif (ds_resultado_w = 'POS') or (ds_resultado_w = 'Positivo') then
						ds_resultado_w := '+';
					elsif (ie_atualiza_nulo_w = 'S') and (ds_resultado_w <> '+') and (ds_resultado_w <> '-') then
						ds_resultado_w := '';
					end if;
				end if;

				ie_tipo_sangue_pf_w := NEW.ds_resultado;
				if (ie_tipo_sangue_w = 'S') then
					if (NEW.ds_resultado in ('A','B','AB','O')) then
						ie_tipo_sangue_pf_w := NEW.ds_resultado;
					elsif (ie_atualiza_nulo_w = 'S') then
						ie_tipo_sangue_pf_w := '';
					end if;
				end if;

				--Atualiza o subgrupo ABO do cadastro do paciente. Os subgrupos possíveis estão listados na consistência
				ds_result_sub_abo_w := NEW.ds_resultado;
				if (ie_subgrupo_abo_w = 'S') then
					select	max(nr_sequencia)
					into STRICT	nr_seq_subgrupo_w
					from	subtipo_sanguineo
					where	ds_subtipo = substr(ds_result_sub_abo_w, 1, 20);
				end if;

				if (NEW.ds_resultado is not null) and
				   ((ie_verifica_liberacao_w = 'S' AND NEW.dt_liberacao is not null) or (ie_verifica_liberacao_w = 'N'))  then
					update	pessoa_fisica
					set	ie_tipo_sangue = CASE WHEN ie_tipo_sangue_w='S' THEN  ie_tipo_sangue_pf_w  ELSE ie_tipo_sangue END ,
						ie_fator_rh = CASE WHEN ie_fator_rh_w='S' THEN  ds_resultado_w  ELSE ie_fator_rh END ,
						ie_subtipo_sanguineo = CASE WHEN ie_subgrupo_abo_w='S' THEN  nr_seq_subgrupo_w  ELSE ie_subtipo_sanguineo END
					where 	cd_pessoa_fisica = cd_pessoa_fisica_w;
				end if;
			exception
			when others then
				cd_pessoa_fisica_w := 'X';
			end;

		end if;
	end if;
end if;


if (NEW.ds_resultado <> OLD.ds_resultado) or
	(OLD.ds_resultado is null AND NEW.ds_resultado is not null) then

	select  nr_seq_doacao,
		nr_amostra
	into STRICT	nr_seq_doacao_tmp_w,
		nr_amostra_w
	from	san_exame_lote
	where	nr_sequencia = NEW.nr_seq_exame_lote;


	ds_log_w := wheb_mensagem_pck.get_texto(793672,
					'NR_SEQ_DOACAO_TMP='||to_char(nr_seq_doacao_tmp_w)||
					';NR_AMOSTRA='||nr_amostra_w||
					';DS_EXAME='||obter_descricao_padrao('SAN_EXAME','DS_EXAME',NEW.nr_seq_exame)||
					';DS_RESULTADO='||NEW.ds_resultado);
	ds_log_w := substr(ds_log_w||'  |  '||'Stack : '||dbms_utility.format_call_stack,1,4000);

	CALL gravar_log_tasy(701, ds_log_w , NEW.nm_usuario);

end if;


  END;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_san_exame_realizado_update() FROM PUBLIC;

CREATE TRIGGER san_exame_realizado_update
	BEFORE UPDATE ON san_exame_realizado FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_san_exame_realizado_update();

