-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS laudo_paciente_insert ON laudo_paciente CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_laudo_paciente_insert() RETURNS trigger AS $BODY$
declare	
nr_seq_status_pato_w	bigint;
nr_seq_proc_w bigint;
cd_pessoa_fisica_w	varchar(10);
ie_vincula_proced_w varchar(1);
ie_modifica_laudo_liberado_w varchar(1);
qt_reg_w    			  smallint;
BEGIN

/*if	(:new.dt_cancelamento is null) and 
	(:new.dt_liberacao is not null) and
	(:new.nr_prescricao > 0) and
	(:new.nr_seq_prescricao > 0) then
	Update	prescr_procedimento a
	set	a.ie_status_execucao = '40'
	where	a.nr_prescricao = :new.nr_prescricao
	and	a.nr_sequencia	= :new.nr_seq_prescricao;
end if;*/

IF (wheb_usuario_pck.get_ie_executar_trigger  = 'N') THEN
   GOTO Final;
END IF;

if((NEW.nr_seq_proc is null)
	and (NEW.nr_prescricao is not null)
	and (NEW.nr_seq_prescricao is not null)
	and (wheb_usuario_pck.get_cd_funcao = 945)) then
	
	select coalesce(max(nr_sequencia),0)
	into STRICT nr_seq_proc_w
	from procedimento_paciente
	where nr_prescricao = NEW.nr_prescricao
	and   nr_sequencia_prescricao = NEW.nr_seq_prescricao;
	
	if ( nr_seq_proc_w > 0) then
		NEW.nr_seq_proc := nr_seq_proc_w;
	end if;
	
end if;

if (NEW.cd_pessoa_fisica is null) and (NEW.nr_atendimento is not null) then
	select	max(cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_w
	from	atendimento_paciente
	where	nr_atendimento = NEW.nr_atendimento;
	
	NEW.cd_pessoa_fisica := cd_pessoa_fisica_w;
	
end if;

if (NEW.nr_seq_superior is null) and --Laudo em digitacao
	(NEW.dt_aprovacao is null) and (NEW.dt_seg_aprovacao is null) and (NEW.dt_liberacao is null) and (NEW.dt_cancelamento is null) then
	
	if (NEW.ie_status_laudo <> 'LM')  or (NEW.ie_status_laudo is null) then
		NEW.ie_status_laudo := 'LD';
	end if;
	
elsif (NEW.nr_seq_superior is null) and --Laudo aprovacao parcial
	(NEW.dt_aprovacao is not null) and (NEW.dt_seg_aprovacao is null) and (NEW.dt_liberacao is null) and (NEW.dt_cancelamento is null) then
	
	NEW.ie_status_laudo := 'LAP';

elsif (NEW.nr_seq_superior is null) and --Laudo liberado
	(NEW.dt_liberacao is not null) and (NEW.dt_cancelamento is null) then

							  

select 	Max(coalesce(ie_modifica_laudo_liberado,'N'))
	into STRICT	ie_modifica_laudo_liberado_w
	from	prescr_medica a,
			parametro_integracao_pacs b
	where   a.cd_estabelecimento = b.cd_estabelecimento
	and		a.nr_prescricao = NEW.nr_prescricao;

  if (ie_modifica_laudo_liberado_w = 'N') then
    NEW.ie_status_laudo := 'LL';
  end if;

elsif (NEW.nr_seq_superior is null) and --Laudo cancelado
	(NEW.dt_cancelamento is not null) then
	
	NEW.ie_status_laudo := 'LC';

elsif (NEW.nr_seq_superior is not null) and --Adendo em digitacao
	(NEW.dt_aprovacao is null) and (NEW.dt_seg_aprovacao is null) and (NEW.dt_liberacao is null) and (NEW.dt_cancelamento is null) then
	
	NEW.ie_status_laudo := 'AD';
	
elsif (NEW.nr_seq_superior is not null) and --Adendo aprovacao parcial
	(NEW.dt_aprovacao is not null) and (NEW.dt_seg_aprovacao is null) and (NEW.dt_liberacao is null) and (NEW.dt_cancelamento is null) then
	
	NEW.ie_status_laudo := 'AAP';

elsif (NEW.nr_seq_superior is not null) and --Adendo liberado
	(NEW.dt_liberacao is not null) and (NEW.dt_cancelamento is null) then

	NEW.ie_status_laudo := 'AL';
	
elsif (NEW.nr_seq_superior is not null) and --Andendo cancelado
	(NEW.dt_cancelamento is not null) then

	NEW.ie_status_laudo := 'AC';
	
end if;

/*select 	max(nr_sequencia)
into	nr_seq_status_pato_w
from	PROCED_PATOLOGIA_STATUS
where	IE_STATUS_PATOLOGIA = 'LP';	

if (:new.nr_prescricao is not null) and (:new.nr_seq_prescricao is not null) then
	if (nr_seq_status_pato_w is not null) then
		update 	prescr_procedimento
		set	nr_seq_status_pato = nr_seq_status_pato_w
		where	nr_prescricao = :new.nr_prescricao
		and	nr_sequencia = :new.nr_seq_prescricao;
	end if;
end if; */

<<Final>>
qt_reg_w :=0;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_laudo_paciente_insert() FROM PUBLIC;

CREATE TRIGGER laudo_paciente_insert
	BEFORE INSERT ON laudo_paciente FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_laudo_paciente_insert();

