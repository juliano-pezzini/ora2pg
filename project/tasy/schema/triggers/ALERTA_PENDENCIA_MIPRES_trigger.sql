-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS alerta_pendencia_mipres ON prescr_mipres CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_alerta_pendencia_mipres() RETURNS trigger AS $BODY$
declare

pragma autonomous_transaction;
nm_usuario_w    		varchar(255);
nr_seq_evento_w			bigint;
ds_item_description_w	varchar(255);
nm_medico_w    			varchar(255);
cd_item_w				varchar(255);

C01 CURSOR FOR
	SELECT nr_seq_evento
	from regra_envio_sms
	where ie_evento_disp = 'MIPRES'
	and	coalesce(ie_situacao,'A') = 'A'
	and	obter_regra_alerta_mipres(nr_sequencia, NEW.ie_tipo_item_presc) = 'S';

BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger = 'S')  then
	if (NEW.nr_seq_superior is null) then
		nm_usuario_w :=  coalesce(wheb_usuario_pck.get_nm_usuario,'SYSTEM');
		open C01;
		loop
		fetch C01 into
			nr_seq_evento_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			BEGIN
				ds_item_description_w := get_mipres_item_description(NEW.nr_seq_item_cpoe,NEW.nr_prescricao,NEW.nr_seq_item_presc,NEW.nr_seq_receita_amb,NEW.nr_seq_item_receita_amb,NEW.ie_tipo_item_presc);
				nm_medico_w := obter_dados_prescricao(NEW.nr_prescricao, 'NP');
				cd_item_w := get_mipres_item_code(NEW.nr_seq_item_cpoe, NEW.nr_prescricao, NEW.nr_seq_item_presc, NEW.nr_seq_receita_amb, NEW.nr_seq_item_receita_amb, NEW.ie_tipo_item_presc);
				CALL gerar_evento_paciente(nr_seq_evento_w, NEW.nr_atendimento, NEW.cd_pessoa_fisica, null, nm_usuario_w, null, null, 'S', null, null, null, null, null, null, null, 'S', null, LOCALTIMESTAMP, null, null, null, null, null, null, null, null, 'N', null, null, NEW.nr_prescricao, cd_item_w, ds_item_description_w, nm_medico_w);
				CALL enviar_evento_paciente('S');
			end;
		end loop;
		close C01;
	end if;
end if;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_alerta_pendencia_mipres() FROM PUBLIC;

CREATE TRIGGER alerta_pendencia_mipres
	AFTER INSERT ON prescr_mipres FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_alerta_pendencia_mipres();

