-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS cot_compra_forn_item_after ON cot_compra_forn_item CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_cot_compra_forn_item_after() RETURNS trigger AS $BODY$
DECLARE

nr_seq_autor_cir_w		cot_compra.nr_seq_autor_cir%type;
cd_tributo_tributo_w	tributo.cd_tributo%type;
pr_aliquota_tributo_w	tributo_conta_pagar.pr_aliquota%type;
ie_param_w				varchar(1);
qt_registro_w			integer;
ie_desc_nf_w		tributo.ie_desc_nf%type;
vl_tributo_w		cot_compra_forn_item_tr.vl_tributo%type;

/* Ha tributos ATIVOS e com incidencia no ITEM que NAO possuem 
   tributo_conta_pagar, para estes NAO serao gerados tributos 
   por NAO haver aliquota cadastrada */
 	
C02 CURSOR FOR	
	SELECT	a.cd_tributo,
		b.pr_aliquota,
		a.ie_desc_nf
	FROM	tributo a,
		tributo_conta_pagar b
	WHERE	a.IE_SITUACAO = 'A'
	AND	a.IE_CORPO_ITEM = 'I'
	AND	a.cd_tributo = b.cd_tributo
	and	coalesce(b.cd_estabelecimento,wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento
	and	LOCALTIMESTAMP between coalesce(b.dt_inicio_vigencia, LOCALTIMESTAMP) and coalesce(fim_dia(b.dt_fim_vigencia), LOCALTIMESTAMP)
	and     obter_se_estrutura_mat(b.cd_grupo_material, b.cd_subgrupo_material, b.cd_classe_material, b.cd_material, NEW.cd_material, 'S') = 'S'
	order by b.nr_sequencia;
BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then

	ie_param_w := obter_param_usuario(915, 189, wheb_usuario_pck.get_cd_perfil, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_param_w);
	if (ie_param_w = 'S') then
	open C02;
	loop
	fetch C02 into	
		cd_tributo_tributo_w,
		pr_aliquota_tributo_w,
		ie_desc_nf_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		BEGIN
		
		select	count(1)
		into STRICT	qt_registro_w
		from	cot_compra_forn_item_tr
		where	nr_seq_cot_item_forn = NEW.nr_sequencia
		and	nr_cot_compra = NEW.nr_cot_compra
		and	cd_tributo = cd_tributo_tributo_w;
		
		if (NEW.vl_unitario_material > 0) then
		
			if (ie_desc_nf_w = 'S') then
				vl_tributo_w := dividir(pr_aliquota_tributo_w, 100) * ((NEW.qt_material * NEW.vl_unitario_material) - coalesce(NEW.vl_desconto,0));
			else
				vl_tributo_w := dividir(pr_aliquota_tributo_w, 100) * (NEW.qt_material * NEW.vl_unitario_material);
			end if;

			if (qt_registro_w = 0) then
				insert into cot_compra_forn_item_tr(
					nr_cot_compra,
					nr_item_cot_compra,
					cd_cgc_fornecedor,
					cd_tributo,
					pr_tributo,
					vl_tributo,
					dt_atualizacao,
					nm_usuario,
					ds_observacao,
					nr_sequencia,
					nr_seq_cot_item_forn,
					dt_atualizacao_nrec,
					nm_usuario_nrec)
				values (	
					NEW.nr_cot_compra,
					NEW.nr_item_cot_compra,
					NEW.cd_cgc_fornecedor,
					cd_tributo_tributo_w,
					pr_aliquota_tributo_w,
					vl_tributo_w,
					LOCALTIMESTAMP,
					NEW.nm_usuario,
					null,
					nextval('cot_compra_forn_item_tr_seq'),
					NEW.nr_sequencia,
					LOCALTIMESTAMP,
					NEW.nm_usuario);
			else
				
				UPDATE cot_compra_forn_item_tr
				SET	   pr_tributo = pr_aliquota_tributo_w,
					   vl_tributo = vl_tributo_w
				WHERE  nr_cot_compra      = NEW.nr_cot_compra
				AND	   nr_item_cot_compra = NEW.nr_item_cot_compra
				AND	   cd_tributo		  = cd_tributo_tributo_w;
			end if;
		
		else
			delete	FROM cot_compra_forn_item_tr
			where	nr_seq_cot_item_forn = NEW.nr_sequencia
			and	nr_cot_compra = NEW.nr_cot_compra
			and	cd_tributo = cd_tributo_tributo_w;
			
		end if;
		
		end;
	end loop;
	close C02;
	end if;

end if;
RETURN NEW;
END;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_cot_compra_forn_item_after() FROM PUBLIC;

CREATE TRIGGER cot_compra_forn_item_after
	AFTER INSERT OR UPDATE ON cot_compra_forn_item FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_cot_compra_forn_item_after();

