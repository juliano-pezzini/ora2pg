-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS patient_dpc_treatment_update ON patient_dpc_treatment CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_patient_dpc_treatment_update() RETURNS trigger AS $BODY$
BEGIN
declare
    cd_combination_surgery_w dpc_treatment.cd_combination_surgery%type;
    cd_mdc_w dpc_treatment.cd_mdc%type;
    cd_classification_w dpc_treatment.cd_classification%type;
    nr_seq_edition_w dpc_treatment.nr_seq_edition%type;
    nr_seq_dpc_surgery_w dpc_surgery.nr_sequencia%type;
    nr_seq_pat_dpc_surg_w patient_dpc_surgery.nr_seq_patient_dpc%type;

BEGIN
if (NEW.nr_seq_dpc_treat_1 is not null) then
	BEGIN
		select 	cd_combination_surgery,
			cd_mdc , 
			cd_classification,
			nr_seq_edition
                into STRICT 	cd_combination_surgery_w,
			cd_mdc_w,
			cd_classification_w,
			nr_seq_edition_w
		from	dpc_treatment
		where	nr_sequencia = NEW.nr_seq_dpc_treat_1;
        	
	end;
end if;

if (cd_combination_surgery_w is not null)then
	BEGIN

	select	max(a.nr_sequencia)
	into STRICT 	nr_seq_dpc_surgery_w
	from	dpc_surgery a
	where	a.nr_seq_edition = nr_seq_edition_w
	and	a.cd_mdc = cd_mdc_w
	and	a.cd_classification = cd_classification_w
	and	((a.cd_k_surgery_1 = cd_combination_surgery_w) or (a.cd_k_surgery_2 = cd_combination_surgery_w)or (a.cd_k_surgery_3 = cd_combination_surgery_w) or (a.cd_k_surgery_4 = cd_combination_surgery_w) or (a.cd_k_surgery_5 = cd_combination_surgery_w));

	if (nr_seq_dpc_surgery_w is not null) then
		select 	max(nr_sequencia)
		into STRICT 	nr_seq_pat_dpc_surg_w
		from	patient_dpc_surgery 
		where 	nr_seq_patient_dpc = NEW.nr_seq_patient_dpc;
	
		if (nr_seq_pat_dpc_surg_w is null) then
			BEGIN
			    insert into patient_dpc_surgery(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_patient_dpc,
					nr_seq_dpc_surgery,
					ie_situacao)
			    values (	nextval('patient_dpc_surgery_seq'),
					LOCALTIMESTAMP,
					NEW.nm_usuario,
					LOCALTIMESTAMP,
					NEW.nm_usuario,
					NEW.nr_seq_patient_dpc,
					nr_seq_dpc_surgery_w,
					'A');
			end;
		else
			BEGIN
			update patient_dpc_surgery p
			set    p.nr_seq_dpc_surgery = nr_seq_dpc_surgery_w
			where  p.nr_seq_patient_dpc= NEW.nr_seq_patient_dpc
			and    p.nr_sequencia = nr_seq_pat_dpc_surg_w;
			end;
		end if;
	end if;
	end;
end if;
end;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_patient_dpc_treatment_update() FROM PUBLIC;

CREATE TRIGGER patient_dpc_treatment_update
	BEFORE INSERT OR UPDATE ON patient_dpc_treatment FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_patient_dpc_treatment_update();

