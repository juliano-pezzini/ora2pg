-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS ordem_compra_afterupdate ON ordem_compra CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_ordem_compra_afterupdate() RETURNS trigger AS $BODY$
declare
qt_existe_w			bigint;
ie_momento_integ_w		varchar(1);
nr_seq_integracao_w		bigint;
nr_seq_regra_w			bigint;

pragma autonomous_transaction;	

BEGIN

select	count(*)
into STRICT	qt_existe_w
from	sup_parametro_integracao a
where	a.ie_evento = 'OC'
and	a.ie_forma = 'E'
and	a.ie_situacao = 'A'
and	exists (SELECT	1
		from	sup_int_regra_oc x
		where	x.nr_seq_integracao = a.nr_sequencia
		and	ie_situacao = 'A');

if (qt_existe_w > 0) then
	BEGIN

	select	max(nr_sequencia)
	into STRICT	nr_seq_integracao_w
	from	sup_parametro_integracao a
	where	a.ie_evento = 'OC'
	and	a.ie_forma = 'E'
	and	a.ie_situacao = 'A';

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_regra_w
	from	sup_int_regra_oc
	where	nr_seq_integracao = nr_seq_integracao_w
	and	cd_local_entrega = NEW.cd_local_entrega
	and	ie_situacao = 'A';

	if (nr_seq_regra_w <> 0) then
		BEGIN

		select	coalesce(max(ie_lib_aprov),'L')
		into STRICT	ie_momento_integ_w
		from	sup_int_regra_oc
		where	nr_sequencia = nr_seq_regra_w;

		end;
	else
		BEGIN
		
		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_regra_w
		from	sup_int_regra_oc
		where	nr_seq_integracao = nr_seq_integracao_w
		and	ie_situacao = 'A';

		select	coalesce(max(ie_lib_aprov),'L')
		into STRICT	ie_momento_integ_w
		from	sup_int_regra_oc
		where	nr_sequencia = nr_seq_regra_w;

		end;
	end if;

	if	((ie_momento_integ_w = 'A') and (OLD.dt_aprovacao is null) and (NEW.dt_aprovacao is not null)) or
		((ie_momento_integ_w = 'L') and (OLD.dt_liberacao is null) and (NEW.dt_liberacao is not null)) then
		BEGIN

		envia_sup_int_oc(
			nr_seq_regra_w,
			NEW.nr_ordem_compra,
			NEW.cd_estabelecimento,
			NEW.cd_cgc_fornecedor,
			NEW.cd_condicao_pagamento,
			NEW.cd_comprador,
			NEW.dt_ordem_compra,
			NEW.cd_moeda,
			NEW.cd_pessoa_solicitante,
			NEW.cd_cgc_transportador,
			NEW.ie_frete,
			NEW.vl_frete,
			NEW.pr_desconto,
			NEW.pr_desc_pgto_antec,
			NEW.pr_juros_negociado,
			NEW.ds_pessoa_contato,
			NEW.ds_observacao,
			NEW.cd_local_entrega,
			NEW.dt_entrega,
			NEW.ie_aviso_chegada,
			NEW.vl_despesa_acessoria,
			NEW.nr_seq_subgrupo_compra,
			NEW.pr_desc_financeiro,
			NEW.cd_pessoa_fisica,
			NEW.ie_urgente,
			NEW.nr_seq_forma_pagto,
			NEW.nr_documento_externo,
			NEW.vl_desconto,
			NEW.cd_centro_custo,
			NEW.nm_usuario,
			'','','',NEW.nm_usuario);

		end;
	end if;

	end;
end if;

if (OLD.dt_aprovacao is null and NEW.dt_aprovacao is not null) then
BEGIN

	select	count(*)
	into STRICT	qt_existe_w
	from	cliente_integracao
	where	NR_SEQ_INF_INTEGRACAO = 1510
	and	IE_SITUACAO = 'A';
		
	if (qt_existe_w > 0) then
	BEGIN
		CALL gravar_agend_integracao(819, 'NR_ORDEM_COMPRA_P=' || NEW.nr_ordem_compra
		|| ';CD_ESTABELECIMENTO_P=' || wheb_usuario_pck.get_cd_estabelecimento() || ';');
	end;
	end if;
end;
end if;

if (NEW.DT_BAIXA is not null) then
	CALL reagendar_item_oc_fluxo(NEW.nr_ordem_compra, 'OC', 'A', NEW.nm_usuario);
	CALL reagendar_vencimento_oc_fluxo(NEW.nr_ordem_compra, 'OC', 'A', NEW.nm_usuario);	
end if;

commit;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_ordem_compra_afterupdate() FROM PUBLIC;

CREATE TRIGGER ordem_compra_afterupdate
	AFTER UPDATE ON ordem_compra FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_ordem_compra_afterupdate();

