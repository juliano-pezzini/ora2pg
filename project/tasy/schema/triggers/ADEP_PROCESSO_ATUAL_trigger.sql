-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS adep_processo_atual ON adep_processo CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_adep_processo_atual() RETURNS trigger AS $BODY$
declare
ie_status_processo_w	varchar(15)	:= 'X';
ie_grava_log_gedipa_w	varchar(1);
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;

BEGIN

if (TG_OP = 'INSERT') then
	NEW.ds_stack	:= substr(dbms_utility.format_call_stack,1,2000);
end if;

if (wheb_usuario_pck.get_ie_executar_trigger	= 'S')  then

	select	max(a.cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from	prescr_medica	a
	where	nr_prescricao	= NEW.nr_prescricao;
	
	select	coalesce(max(ie_grava_log_gedipa),'N')
	into STRICT	ie_grava_log_gedipa_w
	from	parametros_farmacia
	where	cd_estabelecimento = coalesce(cd_estabelecimento_w,wheb_usuario_pck.get_cd_estabelecimento);

	if (NEW.nr_seq_processo is null) and (NEW.dt_processo is not null) and (OLD.dt_processo is null) then
		ie_status_processo_w	:= 'G';	
	end if;
	
	if (ie_status_processo_w <> 'X') then
		NEW.ie_status_processo	:= ie_status_processo_w;
		
	end if;
	
	if (ie_grava_log_gedipa_w = 'S') then
		if (OLD.dt_horario_processo <> NEW.dt_horario_processo) then
			insert into LOG_GEDIPA(
				NR_SEQUENCIA,
				DT_LOG,
				NR_LOG,
				NM_OBJETO_EXECUCAO,
				NM_OBJETO_CHAMADO,
				DS_PARAMETROS,
				DS_LOG,
				NR_SEQ_PROCESSO)
			values (
				nextval('log_gedipa_seq'),
				LOCALTIMESTAMP,
				2200,
				'ADEP_PROCESSO_ATUAL',
				null,
				substr('DT_HORARIO_PROCESSO Anterior= ' || to_char(OLD.dt_horario_processo, 'dd/mm/yyyy hh24:mi:ss') || chr(10) ||
				'DT_HORARIO_PROCESSO Novo= ' || to_char(NEW.dt_horario_processo, 'dd/mm/yyyy hh24:mi:ss'),1,2000),
				substr(dbms_utility.format_call_stack,1,1500),
				NEW.nr_sequencia);
		end if;
	
		if (OLD.dt_cancelamento is null) and (NEW.dt_cancelamento is not null) then	

			insert into LOG_GEDIPA(
				NR_SEQUENCIA,
				DT_LOG,
				NR_LOG,
				NM_OBJETO_EXECUCAO,
				NM_OBJETO_CHAMADO,
				DS_PARAMETROS,
				DS_LOG,
				NR_SEQ_PROCESSO)
			values (
				nextval('log_gedipa_seq'),
				LOCALTIMESTAMP,
				2200,
				'ADEP_PROCESSO_ATUAL',
				null,
				null,
				substr(dbms_utility.format_call_stack,1,1500),
				NEW.nr_sequencia);
			
		end if;
		
	end if;
		
	/*
	if	(updating) and
		(nvl(:new.cd_local_estoque,0) <> nvl(:old.cd_local_estoque,0)) then
		
		insert into LOG_GEDIPA(
			NR_SEQUENCIA,
			DT_LOG,
			NR_LOG,
			NM_OBJETO_EXECUCAO,
			NM_OBJETO_CHAMADO,
			DS_PARAMETROS,
			DS_LOG)
		values(
			LOG_GEDIPA_seq.nextval,
			sysdate,
			2000,
			'ADEP_PROCESSO_ATUAL',
			null,
			null,
			substr('Processo: ' || :new.nr_sequencia || ' / Local: ' || :old.cd_local_estoque ||' / ' || :new.cd_local_estoque || '  ' ||substr(dbms_utility.format_call_stack,1,1500),1,2000));

	end if;
	
	if	(updating) and
		(:old.dt_preparo is null) and
		(:new.dt_preparo is not null) then

		insert into LOG_GEDIPA(
			NR_SEQUENCIA,
			DT_LOG,
			NR_LOG,
			NM_OBJETO_EXECUCAO,
			NM_OBJETO_CHAMADO,
			DS_PARAMETROS,
			DS_LOG,
			NR_SEQ_PROCESSO)
		values(
			LOG_GEDIPA_seq.nextval,
			sysdate,
			2001,
			'ADEP_PROCESSO_ATUAL',
			null,
			null,
			substr(dbms_utility.format_call_stack,1,1500),
			:new.nr_sequencia);
	end if;
	*/

	
end if;

RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_adep_processo_atual() FROM PUBLIC;

CREATE TRIGGER adep_processo_atual
	BEFORE INSERT OR UPDATE ON adep_processo FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_adep_processo_atual();

