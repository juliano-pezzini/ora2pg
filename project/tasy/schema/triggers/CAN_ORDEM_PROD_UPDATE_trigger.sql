-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS can_ordem_prod_update ON can_ordem_prod CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_can_ordem_prod_update() RETURNS trigger AS $BODY$
declare
nr_atendimento_w			bigint;
qt_reg_w					smallint;
ds_origem_w					varchar(4000);
ie_consiste_dt_preparo_w	varchar(1);
ie_consiste_movimentacao_w	varchar(1);
ie_possui_nota_w			varchar(1);
cd_pessoa_fisica_w			pessoa_fisica.cd_pessoa_fisica%type;
cd_pessoa_fisica_atend_w			pessoa_fisica.cd_pessoa_fisica%type;

pragma autonomous_transaction;

BEGIN

ie_consiste_dt_preparo_w := Obter_Param_Usuario(3130, 289, obter_perfil_ativo, NEW.nm_usuario, 0, ie_consiste_dt_preparo_w);
ie_consiste_movimentacao_w := Obter_Param_Usuario(3130, 340, obter_perfil_ativo, NEW.nm_usuario, 0, ie_consiste_movimentacao_w);

if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

if (ie_consiste_movimentacao_w = 'S') and (NEW.nr_seq_etapa_prod <> OLD.nr_seq_etapa_prod) then
	select	coalesce(max('S'),'N')
	into STRICT	ie_possui_nota_w
	from	transf_ordem_prod a,
			nota_fiscal b,
			nota_fiscal_item c
	where	b.nr_sequencia = c.nr_sequencia
	and		a.nr_ordem_compra = b.nr_ordem_compra
	and		a.nr_seq_ordem_prod = NEW.nr_sequencia
	and		substr(obter_se_nota_entrada_saida(b.nr_sequencia),1,1) = 'E';

	if (ie_possui_nota_w = 'S') then
		CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(196854);
	end if;
end if;

if (ie_consiste_dt_preparo_w = 'S') then
	if (NEW.dt_inicio_preparo is null) and (NEW.dt_fim_preparo is not null) then
		CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(176187);
	end if;

	if (NEW.dt_inicio_preparo > NEW.dt_fim_preparo) and (NEW.dt_fim_preparo is not null) then
		CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(176189 );
	end if;
end if;

if (NEW.dt_inicio_preparo is null) and (NEW.dt_fim_preparo is not null) then
	NEW.dt_inicio_preparo := LOCALTIMESTAMP;
end if;

if (NEW.nr_prescricao is not null) and (NEW.nr_atendimento is null) then
	select	coalesce(max(nr_atendimento),0)
	into STRICT	nr_atendimento_w
	from	prescr_medica
	where	nr_prescricao	= NEW.nr_prescricao;

	if (nr_atendimento_w > 0) then
		NEW.nr_atendimento	:= nr_atendimento_w;
	end if;
end if;

if (NEW.ie_cancelada = 'S') and (OLD.ie_cancelada = 'N') then
	NEW.dt_cancelamento	:= LOCALTIMESTAMP;
	NEW.nm_usuario_cancel	:= NEW.nm_usuario;
elsif (NEW.ie_cancelada = 'N') and (OLD.ie_cancelada = 'S') then
	NEW.dt_cancelamento	:= null;
	NEW.nm_usuario_cancel	:= null;
end if;

if (NEW.ie_suspensa = 'S') and (OLD.ie_suspensa = 'N') then
	NEW.dt_suspensao	:= LOCALTIMESTAMP;
	NEW.nm_usuario_susp	:= NEW.nm_usuario;
elsif (NEW.ie_suspensa = 'N') and (OLD.ie_suspensa = 'S') then
	NEW.dt_suspensao	:= null;
	NEW.nm_usuario_susp	:= null;
end if;

--Adicionado na OS 980082, pois havia casos onde o usuario alterava a pessoa fisica, ficando em desconformidade com a prescricao
if (NEW.cd_pessoa_fisica is not null) and (NEW.nr_prescricao is not null) and (NEW.cd_pessoa_fisica <> OLD.cd_pessoa_fisica) then
	select	coalesce(max(cd_pessoa_fisica),0)
	into STRICT	cd_pessoa_fisica_w
	from	prescr_medica
	where	nr_prescricao	= NEW.nr_prescricao;

	if (cd_pessoa_fisica_w <> 0) then
		if (NEW.cd_pessoa_fisica <> cd_pessoa_fisica_w) then
			--Mensagem: O paciente informado não é mesmo paciente da prescrição.
			CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(387253);
		end if;
	end if;
end if;

if (NEW.nr_atendimento is not null) and (NEW.cd_pessoa_fisica is not null) then

	select  max(cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_atend_w
	from 	atendimento_paciente
	where	nr_atendimento = NEW.nr_atendimento;

	if (NEW.cd_pessoa_fisica <> coalesce(cd_pessoa_fisica_atend_w,NEW.cd_pessoa_fisica)) then
		CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(1005227);
	end if;
end if;

<<Final>>
qt_reg_w	:= 0;

/*
if 	((:new.ie_medic_paciente is not null) and
	(:old.ie_medic_paciente is null))  or
	((:new.ie_medic_paciente is null) and
	(:old.ie_medic_paciente is not null))  then
	ds_origem_w := substr(dbms_utility.format_call_stack,1,1800);

	insert	into logx_tasy (
		dt_atualizacao,
		nm_usuario,
		cd_log,
		ds_log)
	values 	(sysdate,
		:new.nm_usuario,
		18910,
		substr(	'; funcao_ativa='		||to_char(wheb_usuario_pck.get_cd_funcao) ||
			'; usuário='			||:new.nm_usuario||
			'; ie_medic_paciente='		||:new.ie_medic_paciente||
			'; perfil='			||to_char(wheb_usuario_pck.get_cd_perfil) ||
			'nr_sequencia='||:new.nr_sequencia||ds_origem_w,1,2000));
end if;

if 	(:old.nr_seq_etapa_prod is not null) and
	(:new.nr_seq_etapa_prod <> :old.nr_seq_etapa_prod) then
	insert	into logx_tasy (
		dt_atualizacao,
		nm_usuario,
		cd_log,
		ds_log)
	values 	(sysdate,
		:new.nm_usuario,
		18999,
		substr(	'; funcao_ativa='		||to_char(wheb_usuario_pck.get_cd_funcao) ||
		'; etapa antiga='||:old.nr_seq_etapa_prod||
		'; modificada para='||:new.nr_seq_etapa_prod||
		'; usuário='			||:new.nm_usuario||
		'; ie_medic_paciente='		||:new.ie_medic_paciente||
		'; perfil='			||to_char(wheb_usuario_pck.get_cd_perfil) ||
		'nr_sequencia='||:new.nr_sequencia||ds_origem_w,1,2000));
end if;

if 	(:new.dt_fim_preparo is not null) and
	(:old.dt_fim_preparo is null) then
	ds_origem_w := substr(dbms_utility.format_call_stack,1,1800);

	insert	into logx_tasy (
		dt_atualizacao,
		nm_usuario,
		cd_log,
		ds_log)
	values 	(sysdate,
		:new.nm_usuario,
		18999,
		substr(	'; funcao_ativa='		||to_char(wheb_usuario_pck.get_cd_funcao) ||
			'; usuário='			||:new.nm_usuario||
			'; ie_medic_paciente='		||:new.ie_medic_paciente||
			'; perfil='			||to_char(wheb_usuario_pck.get_cd_perfil) ||
			'nr_sequencia='||:new.nr_sequencia||ds_origem_w,1,2000));
end if;

if 	((:old.dt_fim_preparo is not null) and (:new.dt_fim_preparo is null)) or
	((:old.dt_inicio_preparo is not null) and (:new.dt_inicio_preparo is null)) or
	((:old.dt_administracao is not null) and (:new.dt_administracao is null)) or
	((:old.dt_inicio_preparo is not null) and (:new.dt_inicio_preparo is null)) or
	((:old.dt_cancelamento is not null) and (:new.dt_cancelamento is null)) or
	((:old.dt_checagem is not null) and (:new.dt_checagem is null)) or
	((:old.dt_devolucao is not null) and (:new.dt_devolucao is null)) then
	begin
	ds_origem_w := substr(dbms_utility.format_call_stack,1,1800);
	insert	into logx_tasy 	(dt_atualizacao, nm_usuario, cd_log, ds_log)
		values 		(sysdate, :new.nm_usuario, 366544,
				 ':old.dt_fim_preparo='		||:old.dt_fim_preparo||
					';:new.dt_fim_preparo'		||:new.dt_fim_preparo||
					'; new.dt_administracao='	||:new.dt_administracao||
					'; old.dt_administracao='	||:old.dt_administracao||
					'; new.dt_inicio_preparo='	||:new.dt_inicio_preparo||
					'; old.dt_inicio_preparo='	||:old.dt_inicio_preparo||
					'; old.dt_cancelamento='	||:old.dt_cancelamento||
					'; new.dt_cancelamento='	||:new.dt_cancelamento||
					'; old.dt_checagem='		||:old.dt_checagem||
					'; new.dt_checagem='		||:new.dt_checagem||
					'; old.dt_devolucao='		||:old.dt_devolucao||
					'; new.dt_devolucao='		||:new.dt_devolucao||
					'; nr_sequencia='		||:new.nr_sequencia||
					'; funcao_ativa='		||to_char(wheb_usuario_pck.get_cd_funcao) ||
					'; usuário='			||:new.nm_usuario||
					'; perfil='			||to_char(wheb_usuario_pck.get_cd_perfil) ||
					'; Stack='			||substr(ds_origem_w,1,1000));
	exception
	when others then
		ds_origem_w	:= '';
	end;
end if;

if 	((:old.dt_fim_preparo is null) and (:new.dt_fim_preparo is not null)) or
	((:old.dt_inicio_preparo is null) and (:new.dt_inicio_preparo is not null)) or
	((:old.dt_administracao is null) and (:new.dt_administracao is not null)) or
	((:old.dt_inicio_preparo is null) and (:new.dt_inicio_preparo is not null)) or
	((:old.dt_cancelamento is null) and (:new.dt_cancelamento is not null)) or
	((:old.dt_checagem is null) and (:new.dt_checagem is not null)) or
	((:old.dt_devolucao is null) and (:new.dt_devolucao is not null)) then
	begin
	ds_origem_w := substr(dbms_utility.format_call_stack,1,1800);
	insert	into logx_tasy 	(dt_atualizacao, nm_usuario, cd_log, ds_log)
		values 		(sysdate, :new.nm_usuario, 366544,
				 ':old.dt_fim_preparo='		||:old.dt_fim_preparo||
					';:new.dt_fim_preparo'		||:new.dt_fim_preparo||
					'; new.dt_administracao='	||:new.dt_administracao||
					'; old.dt_administracao='	||:old.dt_administracao||
					'; new.dt_inicio_preparo='	||:new.dt_inicio_preparo||
					'; old.dt_inicio_preparo='	||:old.dt_inicio_preparo||
					'; old.nm_usuario_fim_prep='	||:old.nm_usuario_fim_prep||
					'; new.nm_usuario_fim_prep='	||:new.nm_usuario_fim_prep||
					'; old.dt_cancelamento='	||:old.dt_cancelamento||
					'; new.dt_cancelamento='	||:new.dt_cancelamento||
					'; old.dt_checagem='		||:old.dt_checagem||
					'; new.dt_checagem='		||:new.dt_checagem||
					'; old.dt_devolucao='		||:old.dt_devolucao||
					'; new.dt_devolucao='		||:new.dt_devolucao||
					'; nr_sequencia='		||:new.nr_sequencia||
					'; funcao_ativa='		||to_char(wheb_usuario_pck.get_cd_funcao) ||
					'; usuário='			||:new.nm_usuario||
					'; perfil='			||to_char(wheb_usuario_pck.get_cd_perfil) ||
					'; Stack='			||substr(ds_origem_w,1,1000));
	exception
	when others then
		ds_origem_w	:= '';
	end;
end if;
*/
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_can_ordem_prod_update() FROM PUBLIC;

CREATE TRIGGER can_ordem_prod_update
	BEFORE UPDATE ON can_ordem_prod FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_can_ordem_prod_update();

