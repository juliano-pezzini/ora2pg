-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pls_conta_delete ON pls_conta CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pls_conta_delete() RETURNS trigger AS $BODY$
declare
Ds_aplicacao			varchar(50);
ds_log_w			varchar(1500);
ie_aplicacao_tasy_w		varchar(1);
nr_protocolo_prestador_w	pls_protocolo_conta.nr_protocolo_prestador%type;
nr_seq_prestador_prot_w		pls_protocolo_conta.nr_seq_prestador%type;
nr_seq_lote_conta_w		pls_protocolo_conta.nr_seq_lote_conta%type;
nr_protocolo_w			pls_protocolo_conta.nr_sequencia%type;
cd_estabelecimento_w		pls_protocolo_conta.cd_estabelecimento%type;
ie_permi_apres_exclui_w		pls_parametros.ie_permi_apres_exclui%type;
BEGIN
  BEGIN
if (pls_se_aplicacao_tasy = 'S') then
	Ds_aplicacao 		:= 'Aplicacao TASY ;';
	ie_aplicacao_tasy_w	:= 'S';
else
	Ds_aplicacao 		:= 'Banco ;';
	ie_aplicacao_tasy_w	:= 'N';
end if;

BEGIN
	select 	a.nr_seq_prestador,
		a.nr_seq_lote_conta,
		a.nr_protocolo_prestador,
		a.nr_sequencia,
		a.cd_estabelecimento
	into STRICT	nr_seq_prestador_prot_w,
		nr_seq_lote_conta_w,
		nr_protocolo_prestador_w,
		nr_protocolo_w,
		cd_estabelecimento_w
	from   	pls_protocolo_conta a
	where  	a.nr_sequencia  = OLD.nr_seq_protocolo;
exception
when others then
	nr_seq_prestador_prot_w := null;
	nr_seq_lote_conta_w := null;
	nr_protocolo_prestador_w := null;
	nr_protocolo_w := null;
end;

ds_log_w := substr(pls_obter_detalhe_exec(false),1,1500);

insert into pls_conta_exclusao(nr_sequencia,
	nm_usuario,
	nm_usuario_nrec,
	dt_atualizacao,
	dt_atualizacao_nrec,
	ds_funcao_ativa,
	ie_aplicacao_tasy,
	nm_maquina,
	ds_log,
	ds_log_call,
	nr_seq_prestador_prot,
	nr_seq_prestador_exec,
	nr_seq_lote_conta,
	nr_seq_conta,
	nr_seq_segurado,
	nr_seq_protocolo_origem,
	cd_guia_referencia,
	nr_protocolo_prestador,
	nr_seq_protocolo,
	cd_estabelecimento)
values (nextval('pls_conta_exclusao_seq'),
	substr(coalesce(wheb_usuario_pck.get_nm_usuario,'Usuário não identificado '),1,14),
	substr(coalesce(wheb_usuario_pck.get_nm_usuario,'Usuário não identificado '),1,14),
	LOCALTIMESTAMP,
	LOCALTIMESTAMP,
	obter_funcao_ativa,
	ie_aplicacao_tasy_w,
	wheb_usuario_pck.get_machine,
	Ds_aplicacao	||' Seq.: ' || to_char(OLD.nr_sequencia) || '; Seq. protocolo: ' || to_char(OLD.nr_seq_protocolo) || '; ' || ' Beneficiario: ' || to_char(OLD.nr_seq_segurado)
			||'; Seq. Prot. original '||to_char(OLD.nr_seq_protocolo_origem)||'; Seq. prestador exec '||to_char(OLD.nr_seq_prestador_exec)||'; CD guia '||OLD.cd_guia
			||'; Guia referência '||OLD.cd_guia_referencia,
	ds_log_w,
	nr_seq_prestador_prot_w,
	OLD.nr_seq_prestador_exec,
	nr_seq_lote_conta_w,
	OLD.nr_sequencia,
	OLD.nr_seq_segurado,
	OLD.nr_seq_protocolo_origem,
	OLD.cd_guia,
	nr_protocolo_prestador_w,
	nr_protocolo_w,
	OLD.cd_estabelecimento);

if (OLD.nr_seq_guia	is not null) and (OLD.ie_origem_conta	= 'T') then

	select	max(ie_permi_apres_exclui)
	into STRICT	ie_permi_apres_exclui_w
	from	pls_parametros
	where	cd_estabelecimento	= cd_estabelecimento_w;

	if (ie_permi_apres_exclui_w	= 'S') then
		delete 	FROM pls_apres_automatica_guia
		where	nr_seq_conta = OLD.nr_sequencia;
	end if;

	update	pls_guia_plano
	set	ie_pagamento_automatico = 'PA',
		ie_status 		= '1'
	where	nr_sequencia		= OLD.nr_seq_guia
	and	ie_pagamento_automatico	= 'CG';
end if;

  END;
RETURN OLD;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pls_conta_delete() FROM PUBLIC;

CREATE TRIGGER pls_conta_delete
	BEFORE DELETE ON pls_conta FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pls_conta_delete();

