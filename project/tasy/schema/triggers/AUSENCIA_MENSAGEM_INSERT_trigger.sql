-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS ausencia_mensagem_insert ON ausencia_mensagem CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_ausencia_mensagem_insert() RETURNS trigger AS $BODY$
DECLARE

ds_comunicado_w			varchar(2000);
nr_sequencia_w			bigint;
dt_inicio_w			timestamp;
dt_fim_w			timestamp;
ie_geraL_w			varchar(1)	:= 'N';
nr_seq_classif_w		bigint;

expressao1_w	varchar(255) := obter_texto_tasy(880715, null);
expressao2_w	varchar(255) := obter_texto_tasy(880716, null);
expressao3_w	varchar(255) := obter_texto_tasy(880717, null);
expressao4_w	varchar(255) := obter_texto_tasy(880718, null);

BEGIN


if (NEW.cd_perfil_dest is null) and (NEW.nm_usuario_dest is null) and (NEW.nr_seq_grupo_usuario is null) then
	ie_geral_w	:= 'S';
end if;


select	dt_inicio,
	dt_fim
into STRICT	dt_inicio_w,
	dt_fim_w
from	ausencia_tasy
where	nr_sequencia	= NEW.nr_seq_ausencia;

select	nextval('comunic_interna_seq')
into STRICT	nr_sequencia_w
;

select obter_classif_comunic('F')
into STRICT	nr_seq_classif_w
;

ds_comunicado_w			:= 	expressao1_w || ' ' ||
				PKG_DATE_FORMATERS.to_varchar(dt_inicio_w,'timestamp',wheb_usuario_pck.get_cd_estabelecimento,wheb_usuario_pck.get_nm_usuario) ||
				' ' || expressao2_w || ' ' || PKG_DATE_FORMATERS.to_varchar(dt_fim_w,'timestamp',wheb_usuario_pck.get_cd_estabelecimento,wheb_usuario_pck.get_nm_usuario) ||
				' ' || expressao3_w || ' ' ||
				NEW.ds_mensagem;


insert	into comunic_interna(dt_comunicado,
	ds_titulo,
	ds_comunicado,
	nm_usuario,
	dt_atualizacao,
	ie_geral,
	nm_usuario_destino,
	cd_perfil,
	nr_sequencia,
	nr_seq_classif,
	ie_gerencial,
	ds_grupo,
	dt_liberacao)
values (LOCALTIMESTAMP,
	expressao4_w,
	ds_comunicado_w,
	NEW.nm_usuario,
	LOCALTIMESTAMP,
	ie_geral_w,
	NEW.nm_usuario_dest || ',',
	NEW.cd_perfil_dest,
	nr_sequencia_w,
	nr_seq_classif_w,
	'N',
	NEW.nr_seq_grupo_usuario,
	LOCALTIMESTAMP);


RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_ausencia_mensagem_insert() FROM PUBLIC;

CREATE TRIGGER ausencia_mensagem_insert
	AFTER INSERT ON ausencia_mensagem FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_ausencia_mensagem_insert();

