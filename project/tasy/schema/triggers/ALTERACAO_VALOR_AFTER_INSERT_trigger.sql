-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS alteracao_valor_after_insert ON alteracao_valor CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_alteracao_valor_after_insert() RETURNS trigger AS $BODY$
declare

cd_agencia_bancaria_w   banco_estabelecimento.cd_agencia_bancaria%type;
cd_banco_w              banco_estabelecimento.cd_banco%type;
cd_camara_compensacao_w pessoa_fisica_conta.cd_camara_compensacao%type;
cd_centro_custo_desc_w  titulo_receber_liq_desc.cd_centro_custo%type;
cd_cgc_w                titulo_receber.cd_cgc%type;
cd_estabelecimento_w    ctb_documento.cd_estabelecimento%type;
cd_pessoa_fisica_w      titulo_receber.cd_pessoa_fisica%type;
ie_desc_previsto_w      varchar(1);
ie_digito_conta_w       banco_estabelecimento.ie_digito_conta%type;
ie_entrada_confirmada_w titulo_receber.ie_entrada_confirmada%type;
ie_juros_multa_w        varchar(1);
ie_retorno_w            bigint;
ie_tipo_ocorrencia_w    bigint;
nr_conta_w              banco_estabelecimento.cd_conta%type;
nr_multiplicador_w      smallint;
nr_seq_conta_banco_w    titulo_receber.nr_seq_conta_banco%type;
nr_seq_motivo_desc_w    titulo_receber_liq_desc.nr_seq_motivo_desc%type;
vl_desc_previsto_w      titulo_receber.vl_desc_previsto%type;
vl_titulo_w				titulo_receber.vl_titulo%type;
nr_seq_proj_rec_w       ctb_documento.nr_seq_proj_rec%type;

c01 CURSOR FOR
        SELECT  cd_banco,
                cd_agencia_bancaria,
                nr_conta,
                nr_digito_conta,
                cd_camara_compensacao
        from    pessoa_fisica_conta
        where   cd_pessoa_fisica        = cd_pessoa_fisica_w

union

        SELECT  cd_banco,
                cd_agencia_bancaria,
                nr_conta,
                nr_digito_conta,
                cd_camara_compensacao
        from    pessoa_juridica_conta
        where   cd_cgc  = cd_cgc_w;

        
c02 CURSOR FOR
        SELECT  a.nm_atributo,
                a.cd_tipo_lote_contab
        from    atributo_contab a
        where   a.cd_tipo_lote_contab = 5
        and     a.nm_atributo in ( 'VL_ALTERACAO');

c02_w   c02%rowtype;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then
select  max(a.ie_entrada_confirmada),
        max(a.cd_pessoa_fisica),
        max(a.cd_cgc),
        max(a.nr_seq_conta_banco),
        max(a.vl_desc_previsto),
		max(a.vl_titulo)
into STRICT    ie_entrada_confirmada_w,
        cd_pessoa_fisica_w,
        cd_cgc_w,
        nr_seq_conta_banco_w,
        vl_desc_previsto_w,
		vl_titulo_w
from    titulo_receber a
where   a.nr_titulo = NEW.nr_titulo;

/*Se o titulo ja foi incluido em cobranca escritural e a alteracao diminuir o valor, deve fazer o insert*/


if (ie_entrada_confirmada_w = 'C') and (NEW.ie_aumenta_diminui = 'D') then

        if ( (coalesce(NEW.vl_anterior,0) - coalesce(NEW.vl_alteracao,0)) = 0 ) then
                /*Tipo de ocorrencia 2 pois esta zerando o saldo do titulo.*/


                ie_tipo_ocorrencia_w := 2;
        else
                /*Tipo de ocorrencia 4 pois se trata de concessao de desconto.*/


                ie_tipo_ocorrencia_w := 4;
        end if;
        BEGIN
        select  a.cd_banco,
                a.cd_agencia_bancaria,
                a.cd_conta,
                a.ie_digito_conta
        into STRICT    cd_banco_w,
                cd_agencia_bancaria_w,
                nr_conta_w,
                ie_digito_conta_w
        from    banco_estabelecimento a
        where   a.nr_sequencia = nr_seq_conta_banco_w;
        exception when others then
                ie_retorno_w    := 0;
        end;

        if (ie_retorno_w = 0) then
                open c01;
                loop
                fetch c01 into
                        cd_banco_w,
                        cd_agencia_bancaria_w,
                        nr_conta_w,
                        ie_digito_conta_w,
                        cd_camara_compensacao_w;
                EXIT WHEN NOT FOUND; /* apply on c01 */
                        cd_banco_w      := cd_banco_w;
                end loop;
                close c01;
        end if;

        ie_desc_previsto_w := obter_param_usuario(815, 9, obter_perfil_ativo, NEW.nm_usuario, obter_estabelecimento_ativo, ie_desc_previsto_w);
        ie_juros_multa_w := obter_param_usuario(815, 16, obter_perfil_ativo, NEW.nm_usuario, obter_estabelecimento_ativo, ie_juros_multa_w);

        select  max(a.cd_centro_custo),
                        max(a.nr_seq_motivo_desc)
        into STRICT    cd_centro_custo_desc_w,
                        nr_seq_motivo_desc_w
        from    titulo_receber_liq_desc a
        where   a.nr_titulo             = NEW.nr_titulo
        and             a.nr_bordero    is null
        and             a.nr_seq_liq    is null;

        insert  into    titulo_receber_instr(      
                                nr_seq_cobranca,
                                nr_titulo,
                                vl_cobranca,
                                dt_atualizacao,
                                nm_usuario,
                                cd_banco,
                                cd_agencia_bancaria,
                                nr_conta,
                                cd_moeda,
                                ie_digito_conta,
                                cd_camara_compensacao,
                                vl_desconto,
                                vl_desc_previsto,
                                vl_acrescimo,
                                nr_sequencia,
                                vl_despesa_bancaria,
                                vl_saldo_inclusao,
                                qt_dias_instrucao,
                                cd_ocorrencia,
                                ie_instrucao_enviada,
                                nr_seq_motivo_desc,
                                cd_centro_custo_desc,
                                vl_juros,
                                vl_multa,
                                ie_selecionado)
                values  (               
                                null,
                                NEW.nr_titulo,
                                CASE WHEN ie_tipo_ocorrencia_w=4 THEN  vl_titulo_w  ELSE (coalesce(NEW.vl_anterior,0) - coalesce(NEW.vl_alteracao,0)) END ,
                                LOCALTIMESTAMP,
                                NEW.nm_usuario,
                                cd_banco_w,
                                cd_agencia_bancaria_w,
                                nr_conta_w,
                                NEW.cd_moeda,
                                ie_digito_conta_w,
                                cd_camara_compensacao_w,
                                CASE WHEN ie_tipo_ocorrencia_w=4 THEN (coalesce(NEW.vl_anterior,0) - coalesce(NEW.vl_alteracao,0))  ELSE CASE WHEN ie_desc_previsto_w='S' THEN  coalesce(vl_desc_previsto_w,0) END  + coalesce((obter_dados_titulo_receber(NEW.nr_titulo,'VNC'))::numeric ,0) END ,
                                CASE WHEN ie_desc_previsto_w='S' THEN  coalesce(vl_desc_previsto_w,0)  ELSE 0 END ,
                                0,
                                nextval('titulo_receber_instr_seq'),
                                0,
                                (coalesce(NEW.vl_anterior,0) - coalesce(NEW.vl_alteracao,0)),
                                null,
                                substr(obter_ocorrencia_envio_cre(ie_tipo_ocorrencia_w,cd_banco_w),1,3),
                                'N',
                                nr_seq_motivo_desc_w,
                                cd_centro_custo_desc_w,
                                CASE WHEN ie_juros_multa_w='S' THEN (obter_juros_multa_titulo(NEW.nr_titulo,LOCALTIMESTAMP,'R','J'))::numeric   ELSE null END ,
                                CASE WHEN ie_juros_multa_w='S' THEN (obter_juros_multa_titulo(NEW.nr_titulo,LOCALTIMESTAMP,'R','M'))::numeric   ELSE null END ,
                                'N');
end if;


if (coalesce(NEW.nr_titulo, 0) <> 0) then
        BEGIN
        
        select  cd_estabelecimento, nr_seq_proj_rec
        into STRICT    cd_estabelecimento_w, nr_seq_proj_rec_w
        from    titulo_receber
        where   nr_titulo = NEW.nr_titulo;
        exception
                when no_data_found then
                        cd_estabelecimento_w := null;
                        nr_seq_proj_rec_w := null;
                when too_many_rows then
                        cd_estabelecimento_w := null;
                        nr_seq_proj_rec_w := null;

        nr_multiplicador_w := 1;
        if (NEW.ie_aumenta_diminui <> 'A') then
                BEGIN
                nr_multiplicador_w:= -1;
                end;
        end if;

        open c02;
        loop
        fetch c02 into
                c02_w;
        EXIT WHEN NOT FOUND; /* apply on c02 */
                BEGIN

                if (coalesce(NEW.vl_alteracao, 0) <> 0) and (coalesce(NEW.nr_seq_trans_fin,0) <> 0)  then
                        BEGIN
                        
                        CALL ctb_concil_financeira_pck.ctb_gravar_documento(       cd_estabelecimento_w,
                                                                                trunc(NEW.dt_alteracao),
                                                                                c02_w.cd_tipo_lote_contab,
                                                                                NEW.nr_seq_trans_fin,
                                                                                54,
                                                                                NEW.nr_titulo,
                                                                                NEW.nr_sequencia,
                                                                                0,
                                                                                NEW.vl_alteracao * nr_multiplicador_w,
                                                                                'ALTERACAO_VALOR',
                                                                                c02_w.nm_atributo,
                                                                                NEW.nm_usuario,
                                                                                'P',
                                                                                null,
                                                                                nr_seq_proj_rec_w);

                        end;
                end if;

                end;
        end loop;
        close c02;
        end;
end if;
end if;

  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_alteracao_valor_after_insert() FROM PUBLIC;

CREATE TRIGGER alteracao_valor_after_insert
	AFTER INSERT ON alteracao_valor FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_alteracao_valor_after_insert();

