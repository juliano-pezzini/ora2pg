-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS opdm_med_dev_reg_data_tp ON opdm_med_dev_reg_data CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_opdm_med_dev_reg_data_tp() RETURNS trigger AS $BODY$
DECLARE nr_seq_w bigint;ds_s_w   varchar(1);ds_c_w   varchar(1);ds_w	   varchar(1);ie_log_w varchar(1);BEGIN BEGIN ds_s_w := to_char(OLD.NR_SEQUENCIA);  ds_c_w:=null;SELECT * FROM gravar_log_alteracao(substr(OLD.IE_SITUACAO,1,4000), substr(NEW.IE_SITUACAO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_SITUACAO', ie_log_w, ds_w, 'OPDM_MED_DEV_REG_DATA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQ_OPDM_TASY,1,4000), substr(NEW.NR_SEQ_OPDM_TASY,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQ_OPDM_TASY', ie_log_w, ds_w, 'OPDM_MED_DEV_REG_DATA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_MDRD_EU_FILENAME,1,4000), substr(NEW.DS_MDRD_EU_FILENAME,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_MDRD_EU_FILENAME', ie_log_w, ds_w, 'OPDM_MED_DEV_REG_DATA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_REG_AUTHORITY,1,4000), substr(NEW.DS_REG_AUTHORITY,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_REG_AUTHORITY', ie_log_w, ds_w, 'OPDM_MED_DEV_REG_DATA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_APP_REGULATION_CODE,1,4000), substr(NEW.DS_APP_REGULATION_CODE,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_APP_REGULATION_CODE', ie_log_w, ds_w, 'OPDM_MED_DEV_REG_DATA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_REGISTERED_COUNTRY,1,4000), substr(NEW.DS_REGISTERED_COUNTRY,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_REGISTERED_COUNTRY', ie_log_w, ds_w, 'OPDM_MED_DEV_REG_DATA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_STATUS,1,4000), substr(NEW.DS_STATUS,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_STATUS', ie_log_w, ds_w, 'OPDM_MED_DEV_REG_DATA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_CE_CERTIFICATE,1,4000), substr(NEW.CD_CE_CERTIFICATE,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_CE_CERTIFICATE', ie_log_w, ds_w, 'OPDM_MED_DEV_REG_DATA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(to_char(OLD.DT_CE_CERTIFICATE_ISSUE,'dd/mm/yyyy hh24:mi:ss'), to_char(NEW.DT_CE_CERTIFICATE_ISSUE,'dd/mm/yyyy hh24:mi:ss'), NEW.nm_usuario, nr_seq_w, 'DT_CE_CERTIFICATE_ISSUE', ie_log_w, ds_w, 'OPDM_MED_DEV_REG_DATA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(to_char(OLD.DT_CE_CERTIFICATE_VALID_UNTIL,'dd/mm/yyyy hh24:mi:ss'), to_char(NEW.DT_CE_CERTIFICATE_VALID_UNTIL,'dd/mm/yyyy hh24:mi:ss'), NEW.nm_usuario, nr_seq_w, 'DT_CE_CERTIFICATE_VALID_UNTIL', ie_log_w, ds_w, 'OPDM_MED_DEV_REG_DATA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_DECLAR_CONF_DOC_NUMBER,1,4000), substr(NEW.DS_DECLAR_CONF_DOC_NUMBER,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_DECLAR_CONF_DOC_NUMBER', ie_log_w, ds_w, 'OPDM_MED_DEV_REG_DATA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(to_char(OLD.DT_FIRST_CONFORMITY,'dd/mm/yyyy hh24:mi:ss'), to_char(NEW.DT_FIRST_CONFORMITY,'dd/mm/yyyy hh24:mi:ss'), NEW.nm_usuario, nr_seq_w, 'DT_FIRST_CONFORMITY', ie_log_w, ds_w, 'OPDM_MED_DEV_REG_DATA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_MEDICAL_DEVICE_CLASS,1,4000), substr(NEW.DS_MEDICAL_DEVICE_CLASS,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_MEDICAL_DEVICE_CLASS', ie_log_w, ds_w, 'OPDM_MED_DEV_REG_DATA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_NOTIFIED_BODY,1,4000), substr(NEW.DS_NOTIFIED_BODY,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_NOTIFIED_BODY', ie_log_w, ds_w, 'OPDM_MED_DEV_REG_DATA', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;   exception when others then ds_w:= '1'; end;   END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_opdm_med_dev_reg_data_tp() FROM PUBLIC;

CREATE TRIGGER opdm_med_dev_reg_data_tp
	AFTER UPDATE ON opdm_med_dev_reg_data FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_opdm_med_dev_reg_data_tp();

