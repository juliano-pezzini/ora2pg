-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS terceiro_atual ON terceiro CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_terceiro_atual() RETURNS trigger AS $BODY$
DECLARE
qt_reg_w				bigint;
cont_w					bigint;
ie_alt_terc_repasse_w	varchar(255);
ds_conta_contabil_cr_w	varchar(40);
ds_conta_contabil_cp_w	varchar(40);
ds_erro_w				varchar(2000);

BEGIN
if (wheb_usuario_pck.get_ie_executar_trigger	= 'N')  then
	goto Final;
end if;

if (NEW.cd_cgc is not null) and (NEW.cd_pessoa_fisica is not null) then
	--ra.ise_application_error(-20011, 'O terceiro só pode ter uma pessoa física ou uma pessoa jurídica informada!' || chr(13) ||
	--				'Não é possível ter um terceiro com uma pessoa física e uma pessoa jurídica ao mesmo tempo.');
	CALL wheb_mensagem_pck.exibir_mensagem_abort(176282);
end if;
if (NEW.cd_cgc is null) and (NEW.cd_pessoa_fisica is null) then
	--r.aise_application_error(-20011, 'O terceiro deve ter uma pessoa física ou uma pessoa jurídica informada!');
	CALL wheb_mensagem_pck.exibir_mensagem_abort(176283);

end if;

select	coalesce(max(ie_alt_terc_repasse),'S')
into STRICT	ie_alt_terc_repasse_w
from	parametro_repasse
where	cd_estabelecimento		= NEW.cd_estabelecimento;

if (ie_alt_terc_repasse_w = 'N') and
	(
		(coalesce(NEW.cd_cgc, 'X') <> coalesce(OLD.cd_cgc,'X'))  or (coalesce(NEW.cd_pessoa_fisica, 'X') <> coalesce(OLD.cd_pessoa_fisica,'X'))
	)  then

	select	count(*)
	into STRICT	cont_w
	from	repasse_terceiro
	where	nr_seq_terceiro	= NEW.nr_sequencia;

	if (cont_w > 0) then
		--r.aise_application_error(-20011, 'Este terceiro já possui repasses gerados! Não é possível alterar a pessoa dest terceiro');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(176287);
	end if;
end if;

ds_conta_contabil_cr_w		:= substr(wheb_mensagem_pck.get_texto(354099,''),1,40);
ds_conta_contabil_cp_w		:= substr(wheb_mensagem_pck.get_texto(354098,''),1,40);

CALL ctb_consistir_conta_titulo(NEW.cd_conta_contabil, ds_conta_contabil_cp_w);
CALL ctb_consistir_conta_titulo(NEW.cd_conta_contabil_cr, ds_conta_contabil_cr_w);

ctb_consistir_conta_estab(NEW.cd_estabelecimento, NEW.cd_conta_contabil, ds_conta_contabil_cp_w);
ctb_consistir_conta_estab(NEW.cd_estabelecimento, NEW.cd_conta_contabil_cr, ds_conta_contabil_cr_w);
/*
con_consiste_vigencia_conta(:new.cd_conta_contabil, :new.dt_inicio_vigencia, :new.dt_fim_vigencia, ds_erro_w);
if	(ds_erro_w is not null) then
	wheb_mensagem_pck.exibir_mensagem_abort(184609,'DS_ERRO_W=' || ds_erro_w);
end if;

con_consiste_vigencia_conta(:new.cd_conta_contabil_cr, :new.dt_inicio_vigencia, :new.dt_fim_vigencia, ds_erro_w);
if	(ds_erro_w is not null) then
	wheb_mensagem_pck.exibir_mensagem_abort(184609,'DS_ERRO_W=' || ds_erro_w);
end if;*/
<<Final>>
qt_reg_w	:= 0;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_terceiro_atual() FROM PUBLIC;

CREATE TRIGGER terceiro_atual
	BEFORE INSERT OR UPDATE ON terceiro FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_terceiro_atual();

