-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS pls_cp_cta_eproc_tp ON pls_cp_cta_eproc CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_pls_cp_cta_eproc_tp() RETURNS trigger AS $BODY$
DECLARE nr_seq_w bigint;ds_s_w   varchar(1);ds_c_w   varchar(1);ds_w	   varchar(1);ie_log_w varchar(1);BEGIN BEGIN ds_s_w := to_char(OLD.NR_SEQUENCIA);  ds_c_w:=null;SELECT * FROM gravar_log_alteracao(substr(OLD.CD_MOEDA_CH_CO,1,4000), substr(NEW.CD_MOEDA_CH_CO,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_MOEDA_CH_CO', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.VL_FILME,1,4000), substr(NEW.VL_FILME,1,4000), NEW.nm_usuario, nr_seq_w, 'VL_FILME', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_MOEDA_FILME,1,4000), substr(NEW.CD_MOEDA_FILME,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_MOEDA_FILME', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_MOEDA_ANESTESISTA,1,4000), substr(NEW.CD_MOEDA_ANESTESISTA,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_MOEDA_ANESTESISTA', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_CH_PADRAO_ANESTESISTA,1,4000), substr(NEW.IE_CH_PADRAO_ANESTESISTA,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_CH_PADRAO_ANESTESISTA', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.TX_AJUSTE_CH_HONOR,1,4000), substr(NEW.TX_AJUSTE_CH_HONOR,1,4000), NEW.nm_usuario, nr_seq_w, 'TX_AJUSTE_CH_HONOR', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.TX_AJUSTE_CUSTO_OPER,1,4000), substr(NEW.TX_AJUSTE_CUSTO_OPER,1,4000), NEW.nm_usuario, nr_seq_w, 'TX_AJUSTE_CUSTO_OPER', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.TX_AJUSTE_FILME,1,4000), substr(NEW.TX_AJUSTE_FILME,1,4000), NEW.nm_usuario, nr_seq_w, 'TX_AJUSTE_FILME', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.TX_AJUSTE_PARTIC,1,4000), substr(NEW.TX_AJUSTE_PARTIC,1,4000), NEW.nm_usuario, nr_seq_w, 'TX_AJUSTE_PARTIC', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.VL_MEDICO,1,4000), substr(NEW.VL_MEDICO,1,4000), NEW.nm_usuario, nr_seq_w, 'VL_MEDICO', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQ_EDICAO_TUSS,1,4000), substr(NEW.NR_SEQ_EDICAO_TUSS,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQ_EDICAO_TUSS', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.VL_CH_HONORARIOS,1,4000), substr(NEW.VL_CH_HONORARIOS,1,4000), NEW.nm_usuario, nr_seq_w, 'VL_CH_HONORARIOS', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.VL_AUXILIARES,1,4000), substr(NEW.VL_AUXILIARES,1,4000), NEW.nm_usuario, nr_seq_w, 'VL_AUXILIARES', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.VL_ANESTESISTA,1,4000), substr(NEW.VL_ANESTESISTA,1,4000), NEW.nm_usuario, nr_seq_w, 'VL_ANESTESISTA', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.VL_CUSTO_OPERACIONAL,1,4000), substr(NEW.VL_CUSTO_OPERACIONAL,1,4000), NEW.nm_usuario, nr_seq_w, 'VL_CUSTO_OPERACIONAL', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.VL_MATERIAIS,1,4000), substr(NEW.VL_MATERIAIS,1,4000), NEW.nm_usuario, nr_seq_w, 'VL_MATERIAIS', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_NAO_GERA_TX_INTER,1,4000), substr(NEW.IE_NAO_GERA_TX_INTER,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_NAO_GERA_TX_INTER', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_AUTOGERADO,1,4000), substr(NEW.IE_AUTOGERADO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_AUTOGERADO', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_OBSERVACAO,1,4000), substr(NEW.DS_OBSERVACAO,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_OBSERVACAO', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DT_FIM_VIGENCIA,1,4000), substr(NEW.DT_FIM_VIGENCIA,1,4000), NEW.nm_usuario, nr_seq_w, 'DT_FIM_VIGENCIA', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DT_FIM_VIGENCIA_REF,1,4000), substr(NEW.DT_FIM_VIGENCIA_REF,1,4000), NEW.nm_usuario, nr_seq_w, 'DT_FIM_VIGENCIA_REF', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DT_INICIO_VIGENCIA,1,4000), substr(NEW.DT_INICIO_VIGENCIA,1,4000), NEW.nm_usuario, nr_seq_w, 'DT_INICIO_VIGENCIA', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DT_INICIO_VIGENCIA_REF,1,4000), substr(NEW.DT_INICIO_VIGENCIA_REF,1,4000), NEW.nm_usuario, nr_seq_w, 'DT_INICIO_VIGENCIA_REF', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQ_CP_COMBINADA,1,4000), substr(NEW.NR_SEQ_CP_COMBINADA,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQ_CP_COMBINADA', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_EDICAO_AMB,1,4000), substr(NEW.CD_EDICAO_AMB,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_EDICAO_AMB', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQ_CBHPM_EDICAO,1,4000), substr(NEW.NR_SEQ_CBHPM_EDICAO,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQ_CBHPM_EDICAO', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.TX_AJUSTE_GERAL,1,4000), substr(NEW.TX_AJUSTE_GERAL,1,4000), NEW.nm_usuario, nr_seq_w, 'TX_AJUSTE_GERAL', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_PRECO_INFORMADO,1,4000), substr(NEW.IE_PRECO_INFORMADO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_PRECO_INFORMADO', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.VL_PROC_NEGOCIADO,1,4000), substr(NEW.VL_PROC_NEGOCIADO,1,4000), NEW.nm_usuario, nr_seq_w, 'VL_PROC_NEGOCIADO', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.VL_CH_CUSTO_OPER,1,4000), substr(NEW.VL_CH_CUSTO_OPER,1,4000), NEW.nm_usuario, nr_seq_w, 'VL_CH_CUSTO_OPER', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_MOEDA_CH_MEDICO,1,4000), substr(NEW.CD_MOEDA_CH_MEDICO,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_MOEDA_CH_MEDICO', ie_log_w, ds_w, 'PLS_CP_CTA_EPROC', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;   exception when others then ds_w:= '1'; end;   END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_pls_cp_cta_eproc_tp() FROM PUBLIC;

CREATE TRIGGER pls_cp_cta_eproc_tp
	AFTER UPDATE ON pls_cp_cta_eproc FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_pls_cp_cta_eproc_tp();

