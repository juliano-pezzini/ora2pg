-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS opdm_base_model_tp ON opdm_base_model CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_opdm_base_model_tp() RETURNS trigger AS $BODY$
DECLARE nr_seq_w bigint;ds_s_w   varchar(1);ds_c_w   varchar(1);ds_w	   varchar(1);ie_log_w varchar(1);BEGIN BEGIN ds_s_w := to_char(OLD.NR_SEQUENCIA);  ds_c_w:=null;SELECT * FROM gravar_log_alteracao(substr(OLD.IE_SITUACAO,1,4000), substr(NEW.IE_SITUACAO,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_SITUACAO', ie_log_w, ds_w, 'OPDM_BASE_MODEL', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NR_SEQ_OPDM_TASY,1,4000), substr(NEW.NR_SEQ_OPDM_TASY,1,4000), NEW.nm_usuario, nr_seq_w, 'NR_SEQ_OPDM_TASY', ie_log_w, ds_w, 'OPDM_BASE_MODEL', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_MODEL_DESCRIPTION,1,4000), substr(NEW.DS_MODEL_DESCRIPTION,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_MODEL_DESCRIPTION', ie_log_w, ds_w, 'OPDM_BASE_MODEL', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_COMPANY_PREFIX,1,4000), substr(NEW.DS_COMPANY_PREFIX,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_COMPANY_PREFIX', ie_log_w, ds_w, 'OPDM_BASE_MODEL', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.CD_GS1_GLOBAL_MODEL,1,4000), substr(NEW.CD_GS1_GLOBAL_MODEL,1,4000), NEW.nm_usuario, nr_seq_w, 'CD_GS1_GLOBAL_MODEL', ie_log_w, ds_w, 'OPDM_BASE_MODEL', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_ACTIVE_DEVICE,1,4000), substr(NEW.IE_ACTIVE_DEVICE,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_ACTIVE_DEVICE', ie_log_w, ds_w, 'OPDM_BASE_MODEL', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.NM_ENGINEERING_RESP_ORG,1,4000), substr(NEW.NM_ENGINEERING_RESP_ORG,1,4000), NEW.nm_usuario, nr_seq_w, 'NM_ENGINEERING_RESP_ORG', ie_log_w, ds_w, 'OPDM_BASE_MODEL', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_LEGAL_MANUFACTURER,1,4000), substr(NEW.DS_LEGAL_MANUFACTURER,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_LEGAL_MANUFACTURER', ie_log_w, ds_w, 'OPDM_BASE_MODEL', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_AUTHORIZED_REPRESENTATIVE,1,4000), substr(NEW.DS_AUTHORIZED_REPRESENTATIVE,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_AUTHORIZED_REPRESENTATIVE', ie_log_w, ds_w, 'OPDM_BASE_MODEL', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.IE_SOFTWARE_PRODUCT,1,4000), substr(NEW.IE_SOFTWARE_PRODUCT,1,4000), NEW.nm_usuario, nr_seq_w, 'IE_SOFTWARE_PRODUCT', ie_log_w, ds_w, 'OPDM_BASE_MODEL', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w; SELECT * FROM gravar_log_alteracao(substr(OLD.DS_TYPE_DEVICE,1,4000), substr(NEW.DS_TYPE_DEVICE,1,4000), NEW.nm_usuario, nr_seq_w, 'DS_TYPE_DEVICE', ie_log_w, ds_w, 'OPDM_BASE_MODEL', ds_s_w, ds_c_w) INTO STRICT nr_seq_w, ie_log_w;   exception when others then ds_w:= '1'; end;   END;
RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_opdm_base_model_tp() FROM PUBLIC;

CREATE TRIGGER opdm_base_model_tp
	AFTER UPDATE ON opdm_base_model FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_opdm_base_model_tp();

