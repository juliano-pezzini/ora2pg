-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS prescr_med_insert_update_after ON prescr_medica CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_prescr_med_insert_update_after() RETURNS trigger AS $BODY$
declare

c_zero_date constant timestamp := to_date('01-01-01 00:00:00', 'dd-mm-yy hh24:mi:ss');

ds_log_w			varchar(2000);
BEGIN
  BEGIN

if (coalesce(NEW.dt_inicio_prescr, c_zero_date) <> coalesce(OLD.dt_inicio_prescr, c_zero_date)) then
	ds_log_w	:= substr(ds_log_w || ' dt_inicio_prescr(' || coalesce(to_char(OLD.dt_inicio_prescr,'dd/mm/yyyy hh24:mi:ss'),'<NULL>') || '/' || coalesce(to_char(NEW.dt_inicio_prescr,'dd/mm/yyyy hh24:mi:ss'),'<NULL>')||'); ',1,2000);
end if;

if (coalesce(NEW.dt_validade_prescr, c_zero_date) <> coalesce(OLD.dt_validade_prescr, c_zero_date)) then
	ds_log_w	:= substr(ds_log_w || ' dt_validade_prescr(' || coalesce(to_char(OLD.dt_validade_prescr,'dd/mm/yyyy hh24:mi:ss'),'<NULL>') || '/' || coalesce(to_char(NEW.dt_validade_prescr,'dd/mm/yyyy hh24:mi:ss'),'<NULL>')||'); ',1,2000);
end if;

if (coalesce(NEW.dt_liberacao_farmacia, c_zero_date) <> coalesce(OLD.dt_liberacao_farmacia, c_zero_date)) then
	ds_log_w	:= substr(ds_log_w || ' dt_liberacao_farmacia(' || coalesce(to_char(OLD.dt_liberacao_farmacia,'dd/mm/yyyy hh24:mi:ss'),'<NULL>') || '/' || coalesce(to_char(NEW.dt_liberacao_farmacia,'dd/mm/yyyy hh24:mi:ss'),'<NULL>')||'); ',1,2000);
end if;

if (coalesce(NEW.dt_liberacao_medico, c_zero_date) <> coalesce(OLD.dt_liberacao_medico, c_zero_date)) then
	ds_log_w	:= substr(ds_log_w || ' dt_liberacao_medico(' || coalesce(to_char(OLD.dt_liberacao_medico,'dd/mm/yyyy hh24:mi:ss'),'<NULL>') || '/' || coalesce(to_char(NEW.dt_liberacao_medico,'dd/mm/yyyy hh24:mi:ss'),'<NULL>')||'); ',1,2000);
end if;

if (coalesce(NEW.dt_liberacao, c_zero_date) <> coalesce(OLD.dt_liberacao, c_zero_date)) then
	ds_log_w	:= substr(ds_log_w || ' dt_liberacao(' || coalesce(to_char(OLD.dt_liberacao,'dd/mm/yyyy hh24:mi:ss'),'<NULL>') || '/' || coalesce(to_char(NEW.dt_liberacao,'dd/mm/yyyy hh24:mi:ss'),'<NULL>')||'); ',1,2000);
end if;

if (coalesce(NEW.dt_prescricao, c_zero_date) <> coalesce(OLD.dt_prescricao, c_zero_date)) then
	ds_log_w	:= substr(ds_log_w || ' dt_prescricao(' || coalesce(to_char(OLD.dt_prescricao,'dd/mm/yyyy hh24:mi:ss'),'<NULL>') || '/' || coalesce(to_char(NEW.dt_prescricao,'dd/mm/yyyy hh24:mi:ss'),'<NULL>')||'); ',1,2000);
end if;

if (coalesce(NEW.cd_setor_atendimento, 0) <> coalesce(OLD.cd_setor_atendimento, 0)) then
	ds_log_w := substr(ds_log_w || ' cd_setor_atendimento(' || coalesce(OLD.cd_setor_atendimento,0) || '/' || coalesce(NEW.cd_setor_atendimento,0)||'); ',1,2000);
end if;

if (ds_log_w is not null) then
	
	ds_log_w	:= substr(' nr_atendimento(' || coalesce(OLD.nr_atendimento,0) || '/' || coalesce(NEW.nr_atendimento,0)||'); ' || ds_log_w,1,2000);
	
	ds_log_w	:= substr(' nr_prescricao(' || coalesce(OLD.nr_prescricao,0) || '/' || coalesce(NEW.nr_prescricao,0)||'); ' || ds_log_w ,1,2000);

	if (coalesce(OLD.nr_prescricao, 0) > 0) then
		ds_log_w := substr('Alteracoes(old/new) = ' || ds_log_w,1,2000);
	else
		ds_log_w := substr('Criacao(old/new) = ' || ds_log_w,1,2000);
	end if;

	ds_log_w := substr(ds_log_w ||' FUNCAO('||to_char(obter_funcao_ativa)||'); PERFIL('||to_char(obter_perfil_ativo)||')',1,2000);
	
	CALL gerar_log_prescricao(NEW.nr_prescricao, null, null, null, null, ds_log_w, NEW.nm_usuario, null, 'N');
end if;

exception
when others then
null;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_prescr_med_insert_update_after() FROM PUBLIC;

CREATE TRIGGER prescr_med_insert_update_after
	AFTER INSERT OR UPDATE ON prescr_medica FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_prescr_med_insert_update_after();

