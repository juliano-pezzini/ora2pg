-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS agenda_pac_int_opme_log_atual ON agenda_pac_int_opme_log CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_agenda_pac_int_opme_log_atual() RETURNS trigger AS $BODY$
declare

qt_existe_integrada_w 		bigint;
qt_existe_atend_w		bigint;
ie_opme_integracao_w		varchar(1);
qt_existe_opme_w		bigint;
nr_cirurgia_w			bigint;
nr_seq_pac_int_opme_w		bigint;

BEGIN

if (NEW.nr_seq_agenda is not null) and (NEW.nr_atendimento is null)  then
	select 	max(nr_cirurgia)
	into STRICT	nr_cirurgia_w
	from 	agenda_paciente
	where 	nr_sequencia = NEW.nr_seq_agenda;

end if;

if	((NEW.nr_atendimento is null)  and (NEW.nr_seq_agenda is not null) and (coalesce(nr_cirurgia_w,0) = 0) and
	((NEW.cd_evento_log = '2') or (NEW.cd_evento_log = '92'))) then

	select	count(*)
	into STRICT	qt_existe_opme_w
	from	agenda_pac_opme
	where	nr_seq_agenda = NEW.nr_seq_agenda;

	select	count(*)
	into STRICT	qt_existe_integrada_w
	from	agenda_integrada_item
	where	nr_seq_agenda_exame = NEW.nr_seq_agenda;

	select 	max(ie_opme_integracao)
	into STRICT	ie_opme_integracao_w
	from	agenda_paciente
	where	nr_sequencia = NEW.nr_seq_agenda;

	if	((coalesce(qt_existe_opme_w,0) > 0) and (coalesce(qt_existe_integrada_w,0) > 0) and (coalesce(ie_opme_integracao_w,'N') = 'S') and
		((NEW.cd_evento_log = '2') or (NEW.cd_evento_log = '92'))) then
		BEGIN
		if (NEW.nr_seq_agenda is not null) then
			BEGIN
			CALL gravar_agend_integracao(46,'nr_sequencia=' || NEW.nr_seq_agenda || ';');

			insert into agenda_pac_int_opme_log(
					nr_sequencia,		dt_atualizacao,
					nm_usuario,		dt_atualizacao_nrec,
					nm_usuario_nrec,	nr_seq_agenda,
					ds_descricao,		cd_evento_log,
					nr_atendimento)
			values (	nextval('agenda_pac_int_opme_log_seq'),	LOCALTIMESTAMP + interval '2 days'/86400,
					NEW.nm_usuario,	LOCALTIMESTAMP,
					NEW.nm_usuario,	NEW.nr_seq_Agenda,
					NEW.ds_descricao,	'60',
					'');

			end;
		end if;
		end;
	end if;
end if;

if	((NEW.nr_atendimento is not null)  and (NEW.nr_seq_agenda is null) and (coalesce(nr_cirurgia_w,0) = 0) and
	((NEW.cd_evento_log = '2') or (NEW.cd_evento_log = '92'))) then
	BEGIN

	select	count(*)
	into STRICT	qt_existe_atend_w
	from	atend_pac_int_opme
	where	nr_atendimento = NEW.nr_atendimento;

	if (coalesce(qt_existe_atend_w,0) > 0) then
		BEGIN
		CALL gravar_agend_integracao(46,'nr_atendimento=' || NEW.nr_atendimento || ';');

		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_pac_int_opme_w
		from	atend_pac_int_opme
		where	nr_atendimento = NEW.nr_atendimento
		and	trunc(dt_atualizacao) = trunc(LOCALTIMESTAMP);

		if (nr_seq_pac_int_opme_w = 0) then

			select	max(nr_sequencia)
			into STRICT	nr_seq_pac_int_opme_w
			from	atend_pac_int_opme
			where	nr_atendimento = NEW.nr_atendimento
			order by dt_atualizacao desc;

		end if;

		insert into agenda_pac_int_opme_log(
				nr_sequencia,		dt_atualizacao,
				nm_usuario,		dt_atualizacao_nrec,
				nm_usuario_nrec,	nr_seq_agenda,
				ds_descricao,		cd_evento_log,
				nr_atendimento,		nr_seq_atend_opme)
		values (	nextval('agenda_pac_int_opme_log_seq'),	LOCALTIMESTAMP + interval '2 days'/86400,
				NEW.nm_usuario,	LOCALTIMESTAMP,
				NEW.nm_usuario,	'',
				NEW.ds_descricao,	'60',
				NEW.nr_atendimento,	nr_seq_pac_int_opme_w);
		end;
	end if;

	end;
end if;


RETURN NEW;
end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_agenda_pac_int_opme_log_atual() FROM PUBLIC;

CREATE TRIGGER agenda_pac_int_opme_log_atual
	BEFORE INSERT OR UPDATE ON agenda_pac_int_opme_log FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_agenda_pac_int_opme_log_atual();

