-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS san_producao_update ON san_producao CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_san_producao_update() RETURNS trigger AS $BODY$
declare
qt_procedimento_w		double precision;
nr_seq_reserva_w		bigint;
nr_sequencia_w			bigint;
qt_reg_w			smallint;
ie_alterar_usuario_w		varchar(10);
cd_pessoa_fisica_w		varchar(10);	
dt_emprestimo_w			timestamp;
ie_consite_data_emp_w		varchar(1);
excluir_todos_proc_w		varchar(1);
ie_realiza_nat_w		varchar(1);
nr_seq_reserva_transf_old_w	bigint;
ie_status_hemocomp_res_w	varchar(15);
 
 
BEGIN 
if (wheb_usuario_pck.get_ie_executar_trigger	= 'N') then 
	goto Final;
end if;
 
 
ie_alterar_usuario_w := obter_param_usuario(450, 72, obter_perfil_ativo, wheb_usuario_pck.GET_NM_USUARIO, 0, ie_alterar_usuario_w);
ie_consite_data_emp_w := obter_param_usuario(450, 91, obter_perfil_ativo, wheb_usuario_pck.GET_NM_USUARIO, 0, ie_consite_data_emp_w);
excluir_todos_proc_w := obter_param_usuario(450, 257, obter_perfil_ativo, Wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, excluir_todos_proc_w);
/*Parâmetro Hemoterapia, [489] - Status do hemocomponente na reserva após cancelar seu uso na transfusão */
 
ie_status_hemocomp_res_w := obter_param_usuario(450, 489, obter_perfil_ativo, Wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_status_hemocomp_res_w);
 
if (ie_consite_data_emp_w = 'N') and (NEW.nr_seq_emp_ent is not null) and (NEW.dt_utilizacao is not null) and (NEW.dt_utilizacao <> coalesce(OLD.dt_utilizacao,LOCALTIMESTAMP - interval '1 days')) then 
	 
	select 	max(dt_emprestimo) 
	into STRICT	dt_emprestimo_w 
	from 	san_emprestimo 
	where	nr_sequencia = NEW.nr_seq_emp_ent;
	 
	if (NEW.dt_utilizacao < dt_emprestimo_w) then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(192250);
	 
	end if;	
end if;
 
if (NEW.nr_seq_transfusao is not null) and (OLD.nr_seq_transfusao is null) then 
	select	coalesce(max(nr_seq_reserva),0) 
	into STRICT	nr_seq_reserva_w 
	from	san_transfusao 
	where	nr_sequencia = NEW.nr_seq_transfusao;
 
	if (nr_seq_reserva_w <> 0) then 
		update san_exame_lote 
		set 	nr_seq_producao = NEW.nr_sequencia, 
			ie_origem = 'T' 
		where nr_seq_res_prod = (SELECT max(nr_sequencia) 
					 from san_reserva_prod 
					 where nr_seq_reserva	= nr_seq_reserva_w 
					  and nr_seq_producao	= NEW.nr_sequencia);
	end if;
	 
	 
	if (ie_alterar_usuario_w = 'S') then 
		cd_pessoa_fisica_w := Obter_Dados_Usuario_Opcao(wheb_usuario_pck.GET_NM_USUARIO,'C');
	else 
		cd_pessoa_fisica_w := NEW.cd_pf_realizou;
	end if;
	 
	if (cd_pessoa_fisica_w = '') then 
		cd_pessoa_fisica_w := NEW.cd_pf_realizou;
	end if;
	 
	select	max(ie_realiza_nat) 
	into STRICT	ie_realiza_nat_w 
	from	san_doacao a 
	where	a.nr_sequencia = NEW.nr_seq_doacao;
	 
	 
	CALL gerar_exame_realizado(2, NEW.nr_sequencia, null, cd_pessoa_fisica_w, NEW.nm_usuario, 
				 NEW.ie_irradiado, NEW.ie_lavado, NEW.ie_filtrado, NEW.ie_aliquotado,NEW.nr_seq_derivado, NEW.nr_seq_doacao, null, ie_realiza_nat_w, NEW.ie_aferese, wheb_usuario_pck.get_cd_estabelecimento);
elsif (NEW.nr_seq_reserva is not null AND OLD.nr_seq_reserva is null) or 
	((NEW.nr_seq_reserva is not null) and (OLD.nr_seq_reserva is not null) and (NEW.nr_seq_reserva <> OLD.nr_seq_reserva)) then 
	 
	select	max(ie_realiza_nat) 
	into STRICT	ie_realiza_nat_w 
	from	san_doacao a 
	where	a.nr_sequencia = NEW.nr_seq_doacao;
	 
	CALL gerar_exame_realizado(9, NEW.nr_sequencia, NEW.nr_seq_reserva, cd_pessoa_fisica_w, NEW.nm_usuario, 
				 NEW.ie_irradiado, NEW.ie_lavado, NEW.ie_filtrado, NEW.ie_aliquotado,NEW.nr_seq_derivado, NEW.nr_seq_doacao, null, ie_realiza_nat_w, NEW.ie_aferese, wheb_usuario_pck.get_cd_estabelecimento);
				 
elsif (NEW.nr_seq_transfusao is null) and (OLD.nr_seq_transfusao is not null) then 
	 
	NEW.ds_justificativa := null;
	 
	delete FROM san_exame_lote 
	where nr_seq_producao = NEW.nr_sequencia 
	 and ie_origem = 'T' 
	 and nr_seq_res_prod is null;
 
	if (NEW.nr_seq_doacao is not null) then 
		update	san_exame_realizado a 
		set	nr_seq_propaci  = NULL 
		where	a.nr_seq_exame_lote in (	SELECT nr_sequencia 
						from san_exame_lote x 
						where nr_seq_doacao = NEW.nr_seq_doacao) 
		 and	a.nr_seq_propaci is not null;
		  
	elsif (NEW.nr_seq_emp_ent is not null) then 
		update	san_exame_realizado a 
		set	nr_seq_propaci  = NULL 
		where	a.nr_seq_exame_lote in (	SELECT nr_sequencia 
						from san_exame_lote x 
						where nr_seq_producao = NEW.nr_sequencia) 
		 and	a.nr_seq_propaci is not null;
	end if;
 
	update san_exame_realizado 
	set	nr_seq_propaci  = NULL 
	where	nr_seq_propaci is not null 
	 and	nr_seq_exame_lote in (	SELECT nr_sequencia 
					from san_exame_lote 
					where nr_seq_res_prod in (	select nr_sequencia 
									from san_reserva_prod 
									where nr_seq_producao = NEW.nr_sequencia));
elsif	(NEW.nr_seq_reserva is null AND OLD.nr_seq_reserva is not null) then 
	delete FROM san_exame_lote 
	where nr_seq_producao = NEW.nr_sequencia 
	 and nr_seq_reserva = OLD.nr_seq_reserva;
 
	update	san_exame_realizado a 
	set	nr_seq_propaci  = NULL 
	where	a.nr_seq_exame_lote = (	SELECT nr_sequencia 
					from san_exame_lote x 
					where nr_seq_doacao = NEW.nr_seq_doacao) 
	 and	a.nr_seq_propaci is not null;
end if;
 
if (NEW.nr_seq_transfusao is null) and (OLD.nr_seq_transfusao is not null) then 
	 
	select	max(nr_seq_reserva) 
	into STRICT	nr_seq_reserva_transf_old_w 
	from 	san_transfusao 
	where	nr_sequencia = OLD.nr_seq_transfusao;
	 
	update san_reserva_prod 
	set	ie_status = ie_status_hemocomp_res_w, 
		nr_seq_propaci  = NULL	 
	where nr_seq_producao = NEW.nr_sequencia 
	and nr_seq_reserva = nr_seq_reserva_transf_old_w;
 
	if (NEW.nr_seq_propaci is not null) then 
		NEW.nr_seq_propaci := null;
	end if;
end if;
 
if (OLD.nr_seq_propaci is not null) and (NEW.nr_seq_propaci is null) then 
	select coalesce(max(qt_procedimento),0) 
	into STRICT	qt_procedimento_w 
	from procedimento_paciente 
	where nr_sequencia = OLD.nr_seq_propaci;
 
	if (qt_procedimento_w > 1) and (excluir_todos_proc_w = 'N') then 
		update procedimento_paciente 
		set qt_procedimento = qt_procedimento - 1 
		where nr_sequencia = OLD.nr_seq_propaci;
 
		update procedimento_paciente 
		set qt_procedimento = qt_procedimento - 1 
		where nr_seq_proc_princ = OLD.nr_seq_propaci;
		 
		update material_atend_paciente 
		set qt_material = qt_material - 1 
		where nr_seq_proc_princ = OLD.nr_seq_propaci;
	else 
		delete FROM procedimento_paciente 
		where nr_seq_proc_princ = OLD.nr_seq_propaci;
		 
		delete FROM material_atend_paciente 
		where nr_seq_proc_princ = OLD.nr_seq_propaci;
		 
		delete FROM procedimento_paciente 
		where nr_sequencia = OLD.nr_seq_propaci;
	end if;
end if;
 
if (NEW.nr_seq_equipo > 0) and (OLD.nr_seq_equipo <> NEW.nr_seq_equipo) then 
	CALL san_gravar_log_equipamento(NEW.nr_sequencia, NEW.nr_seq_equipo, NEW.nm_usuario);
end if;
 
<<Final>> 
qt_reg_w	:= 0;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_san_producao_update() FROM PUBLIC;

CREATE TRIGGER san_producao_update
	BEFORE UPDATE ON san_producao FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_san_producao_update();

