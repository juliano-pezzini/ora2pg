-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS atend_categoria_conv_ish_atual ON atend_categoria_convenio CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_atend_categoria_conv_ish_atual() RETURNS trigger AS $BODY$
declare
reg_integracao_p	gerar_int_padrao.reg_integracao;
nr_sequencia_w		varchar(35);
ie_gravar_w		varchar(1);
qt_eventos_w		bigint	:= 0;
ie_inserindo_conv_w	bigint	:= 0;
BEGIN
  BEGIN

if (wheb_usuario_pck.get_ie_executar_trigger = 'S') then

	/* Verificar se existe cadastrado pelo menos um evento 135 - Enviar dados do convênio do atendimento do paciente */

	BEGIN
	select	1
	into STRICT	qt_eventos_w
	from	intpd_eventos
	where	ie_evento	= '135'
	and	ie_situacao	= 'A'  LIMIT 1;
	exception
	when others then
		qt_eventos_w	:= 0;
	end;

	select	count(*)
	into STRICT	ie_inserindo_conv_w
	from	v$session
	where	audsid		= (SELECT userenv('sessionid') )
	and	upper(action) 	= 'INTPD_INSERIR_ATEND_CONVENIO';

	if (qt_eventos_w > 0) and (ie_inserindo_conv_w = 0) then

		if (TG_OP = 'INSERT') then

			reg_integracao_p.ie_operacao		:= 'I';
			reg_integracao_p.nr_seq_agrupador	:= NEW.nr_atendimento;
			reg_integracao_p.ie_status		:= 'P';
			nr_sequencia_w				:= NEW.nr_seq_interno;
			reg_integracao_p := gerar_int_padrao.gravar_integracao('135', nr_sequencia_w, NEW.nm_usuario, reg_integracao_p);

		elsif (TG_OP = 'UPDATE') then

			nr_sequencia_w				:= NEW.nr_seq_interno;
			reg_integracao_p.nr_seq_agrupador	:= NEW.nr_atendimento;
			reg_integracao_p.ie_status		:= 'P';
			reg_integracao_p.ie_operacao		:= 'A';

			ie_gravar_w	:= 'S';

			BEGIN --verificar se o item já não está como pendente na operacao 'I - insert'
			select	'N'
			into STRICT	ie_gravar_w
			from	intpd_fila_transmissao
			where	nr_seq_documento	= NEW.nr_seq_interno
			and	ie_evento	= '135'
			and	ie_status		in ('A','P')
			and	ie_operacao		= 'I'  LIMIT 1;
			exception
			when others then
				ie_gravar_w	:= 'S';
			end;

			if (ie_gravar_w = 'S') then
				reg_integracao_p := gerar_int_padrao.gravar_integracao('135', nr_sequencia_w, NEW.nm_usuario, reg_integracao_p);
			end if;

		elsif (TG_OP = 'DELETE') then

			reg_integracao_p.ie_operacao		:= 'E';
			reg_integracao_p.ie_status		:= 'P';
			reg_integracao_p.nr_seq_agrupador	:= OLD.nr_atendimento;
			nr_sequencia_w				:= OLD.nr_seq_interno;
			reg_integracao_p := gerar_int_padrao.gravar_integracao('135', nr_sequencia_w, OLD.nm_usuario, reg_integracao_p);

		end if;
	end if;
end if;

  END;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

end
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_atend_categoria_conv_ish_atual() FROM PUBLIC;

CREATE TRIGGER atend_categoria_conv_ish_atual
	AFTER INSERT OR UPDATE OR DELETE ON atend_categoria_convenio FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_atend_categoria_conv_ish_atual();

