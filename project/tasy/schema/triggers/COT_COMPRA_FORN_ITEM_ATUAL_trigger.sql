-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS cot_compra_forn_item_atual ON cot_compra_forn_item CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_cot_compra_forn_item_atual() RETURNS trigger AS $BODY$
DECLARE

cd_tributo_w			integer;
pr_tributo_w			double precision;
qt_registro_w			integer;
vl_tributo_w			double precision;
nr_seq_autor_cir_w		cot_compra.nr_seq_autor_cir%type;
vl_total_w			cot_compra_forn_item.vl_unitario_material%type;
ie_param_190_w			varchar(15);

C01 CURSOR FOR
	SELECT	cd_tributo,
		pr_tributo
	from	cot_compra_forn_item_tr
	where	nr_seq_cot_item_forn = NEW.nr_sequencia
	and	coalesce(pr_tributo,0) > 0;
BEGIN
  BEGIN

ie_param_190_w := obter_param_usuario(915, 190, wheb_usuario_pck.get_cd_perfil, NEW.nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_param_190_w);

/*Para atualizar o valor unitario inicial da cotação*/

if (NEW.vl_unitario_material is not null) and (NEW.vl_unitario_inicial is null) and (coalesce(NEW.vl_unitario_material,0) <> coalesce(NEW.vl_unitario_inicial,0)) then
	NEW.vl_unitario_inicial	:= NEW.vl_unitario_material;
end if;

if (NEW.vl_unitario_material > 0) and (NEW.qt_material > 0 ) then
	BEGIN
	vl_total_w := NEW.vl_unitario_material * NEW.qt_material;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(512549);
		/*O sistema não conseguiu salvar o registro porque a multiplicação da quantidade do item com o valor unitário informado está com valor muito alto. Verifique se você está informando uma quantidade ou um valor correto para esse item.*/

	end;
end if;


BEGIN
select	nr_seq_autor_cir
into STRICT	nr_seq_autor_cir_w
from	cot_compra
where	nr_cot_compra = NEW.nr_cot_compra;
exception
when others then
	nr_seq_autor_cir_w := null;
end;

select	count(*)
into STRICT	qt_registro_w
from	cot_compra_forn_item_tr
where	nr_seq_cot_item_forn = NEW.nr_sequencia;
if (qt_registro_w > 0) then
	BEGIN
	OPEN C01;
	LOOP
	FETCH C01 INTO
		cd_tributo_w,
		pr_tributo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN

		if (ie_param_190_w = 'S') then
			vl_tributo_w	:= dividir(pr_tributo_w, 100) * ((NEW.qt_material * NEW.vl_unitario_material) + coalesce(NEW.VL_FRETE_RATEIO,0));
		else
			vl_tributo_w	:= dividir(pr_tributo_w, 100) * (NEW.qt_material * NEW.vl_unitario_material);
		end if;

		update	cot_compra_forn_item_tr
		set	vl_tributo	= vl_tributo_w
		where	nr_seq_cot_item_forn = NEW.nr_sequencia
		and	cd_tributo	= cd_tributo_w;
		end;
	END LOOP;
	CLOSE C01;
	end;
end if;

/*Essa mensagem é apenas para o portal de compras web, por isso tem o IF do CNPJ = Usuario
Serve para os casos em que o fornecedor está conseguindo alterar o material, e nós nao conseguimos reproduzir.
Essa trigger vai bloquear esses casos*/
if (TG_OP = 'UPDATE') and (coalesce(nr_seq_autor_cir_w,0) = 0) and (NEW.nm_usuario = NEW.cd_cgc_fornecedor) and (NEW.cd_material <> OLD.cd_material) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(438811); /*Não é permitido alterar o material.*/
end if;


NEW.nr_seq_status_marca	:= obter_dados_marca_material(NEW.ds_marca, NEW.cd_material,'C');
NEW.dt_status_marca		:= obter_data_marca_material(NEW.ds_marca, NEW.cd_material);




  END;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_cot_compra_forn_item_atual() FROM PUBLIC;

CREATE TRIGGER cot_compra_forn_item_atual
	BEFORE INSERT OR UPDATE ON cot_compra_forn_item FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_cot_compra_forn_item_atual();

