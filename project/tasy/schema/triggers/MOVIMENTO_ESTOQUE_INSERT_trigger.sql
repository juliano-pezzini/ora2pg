-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';

DROP TRIGGER IF EXISTS movimento_estoque_insert ON movimento_estoque CASCADE;
CREATE OR REPLACE FUNCTION trigger_fct_movimento_estoque_insert() RETURNS trigger AS $BODY$
declare
qt_existe_regra_email_w		bigint;
cd_unidade_medida_estoque_w	varchar(30);
qt_conv_estoque_consumo_w	double precision;
qt_estoque_w			double precision;
qt_consulta_estoque_consig_w	double precision;
qt_consulta_estoque_w		double precision;
qt_estoque_consumo_w		double precision;
nr_movimento_estoque_w		bigint;
ie_erro_w				varchar(1);
ie_erro_ww			varchar(1);
ds_erro_w			varchar(255);
ds_erro_ww			varchar(255);
dt_mesano_vigente_w		timestamp;
dt_mesano_referencia_w		timestamp;
cd_centro_conta_w		centro_custo.cd_centro_custo%type;
ie_consignado_w			varchar(1);
ie_atualiza_local_direto_w		varchar(1);
ie_tipo_local_w			varchar(5);
ie_tipo_requisicao_w		varchar(5);
ie_material_estoque_w		varchar(1);
ie_oper_consignado_w		varchar(1);
ie_atualiza_consignado_w		boolean;
ds_material_w			varchar(255);
ie_bloqueio_inventario_w		varchar(1);
cd_funcao_ativa_w			integer;
cd_perfil_ativo_w			integer;
ie_estoque_lote_w			varchar(1);
cd_estab_local_w			smallint;
ie_vigencia_conta_w		varchar(1);
cd_operacao_cons_paciente_w	smallint;
cd_operacao_devol_paciente_w	smallint;
ie_centro_inventario_w		varchar(1);
ie_centro_perda_w			varchar(1);
cd_centro_local_w			integer;
ie_oper_lib_usuario_w		varchar(1);
ie_consiste_cadastro_estab_w	varchar(1);
ie_existe_cadastro_estab_w		varchar(1);
ie_movto_consig_w			varchar(1);
ie_consumo_w			varchar(1);
qt_existe_saldo_lote_w		bigint;
qt_estoque_lote_w			double precision;
ie_entrada_saida_w			varchar(1);
qt_estoque_ww			movimento_estoque.qt_estoque%type;
nr_emprestimo_w			bigint;
ie_tipo_perda_w			operacao_estoque.ie_tipo_perda%type;
cd_empresa_w        	estabelecimento.cd_empresa%type;
BEGIN
  BEGIN
    if (coalesce(wheb_usuario_pck.get_ie_executar_trigger, 'S') = 'S') then
        BEGIN
            ie_erro_w	:= 'N';

            BEGIN
                select a.cd_empresa
                into STRICT cd_empresa_w
                from estabelecimento a
                where a.cd_estabelecimento = NEW.cd_estabelecimento;

                CALL philips_contabil_pck.valida_se_dia_fechado(cd_empresa_w, coalesce(NEW.dt_processo, NEW.dt_movimento_estoque));
            end;

            NEW.ds_stack := substr(dbms_utility.format_call_stack,1,2000);

            BEGIN
            select	coalesce(obter_funcao_ativa,0),
                coalesce(obter_perfil_ativo,0)
            into STRICT	cd_funcao_ativa_w,
                cd_perfil_ativo_w
;
            exception
                when others then
                cd_funcao_ativa_w	:= 0;
                cd_perfil_ativo_w	:= 0;
            end;
            NEW.cd_funcao	:= cd_funcao_ativa_w;
            NEW.cd_perfil	:= cd_perfil_ativo_w;
            NEW.ds_maquina	:= substr(wheb_usuario_pck.get_nm_estacao,1,80);

            if (NEW.cd_material_estoque is null) then
                select	coalesce(cd_material_estoque,NEW.cd_material)
                into STRICT	NEW.cd_material_estoque
                from	material
                where	cd_material 	= NEW.cd_material;
            end if;

            select	coalesce(max(cd_estabelecimento), 0),
                coalesce(max(ie_tipo_local), 'X'),
                coalesce(max(ie_centro_inventario), 'N'),
                coalesce(max(cd_centro_custo), 0),
                coalesce(max(ie_centro_perda),'N')
            into STRICT	cd_estab_local_w,
                ie_tipo_local_w,
                ie_centro_inventario_w,
                cd_centro_local_w,
                ie_centro_perda_w
            from	local_estoque
            where	cd_local_estoque = NEW.cd_local_estoque;

            if (cd_estab_local_w > 0) and (cd_estab_local_w <> NEW.cd_estabelecimento) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(174096);
                /*r.aise_application_error(-20011,'O estabelecimento do Local de estoque e diferente do' || chr(13) || chr(10) ||
                                'estabelecimento do movimento de estoque. Avise o Administrador do Sistema');*/

            end if;

            select	coalesce(max(ie_estoque_lote),'N')
            into STRICT	ie_estoque_lote_w
            from	material_estab
            where	cd_material = NEW.cd_material_estoque
            and	cd_estabelecimento = NEW.cd_estabelecimento;

            if (ie_estoque_lote_w = 'S') and (NEW.nr_seq_lote_fornec is null) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(174103,'CD_MATERIAL_ESTOQUE='||NEW.cd_material_estoque);
                /*r.aise_application_error(-20011,'Este material tem estoque por lote fornecedor.' || chr(13) ||
                                'Somente pode ser movimentado por barras do lote. (' || :new.cd_material_estoque || ')' || chr(13));*/

            end if;

            select	coalesce(obter_se_oper_liberado_usuario(NEW.cd_operacao_estoque, NEW.cd_material, NEW.cd_local_estoque, NEW.nm_usuario), 'S')
            into STRICT	ie_oper_lib_usuario_w
;

            if (ie_oper_lib_usuario_w = 'N') then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(174109,'CD_MATERIAL='||NEW.cd_material);
                /*r.aise_application_error(-20011,	'Voce nao tem permissao de efetuar movimentos do material ' || :new.cd_material || ' com  essa operacao de estoque.');*/


            end if;

            if (NEW.dt_processo is null) then
                BEGIN

                BEGIN
                select	substr(obter_dados_material_estab(cd_material,NEW.cd_estabelecimento,'UME'),1,30) cd_unidade_medida_estoque,
                            qt_conv_estoque_consumo,
                    ie_consignado,
                    substr(obter_se_material_estoque(NEW.cd_estabelecimento, 0, cd_material),1,1)
                into STRICT	cd_unidade_medida_estoque_w ,
                    qt_conv_estoque_consumo_w,
                    ie_consignado_w,
                    ie_material_estoque_w
                from	material
                where	cd_material = NEW.cd_material_estoque;
                exception
                    when no_data_found then
                    CALL wheb_mensagem_pck.exibir_mensagem_abort(174124,'CD_MATERIAL_ESTOQUE='||NEW.cd_material_estoque);
                    /*r.aise_application_error(-20011,'nao encontrado material ' || :new.cd_material_estoque);*/


                end;

                select	max(dt_mesano_vigente),
                    max(ie_atualiza_local_direto),
                    coalesce(max(ie_consiste_cad_mat_estab),'N')
                into STRICT	dt_mesano_vigente_w,
                    ie_atualiza_local_direto_w,
                    ie_consiste_cadastro_estab_w
                from	parametro_estoque
                where	cd_estabelecimento	= NEW.cd_estabelecimento;

                if (ie_consiste_cadastro_estab_w = 'S') then
                    BEGIN
                    select	coalesce(max('S'),'N')
                    into STRICT	ie_existe_cadastro_estab_w
                    from	material_estab
                    where	cd_material = NEW.cd_material
                    and	cd_estabelecimento = NEW.cd_estabelecimento;

                    if (ie_existe_cadastro_estab_w = 'N') then
                        CALL wheb_mensagem_pck.exibir_mensagem_abort(174130,'CD_MATERIAL='||NEW.cd_material);
                        /*r.aise_application_error(-20011,'Nao encontrado cadastro do material ' || :new.cd_material || ' no estabelecimento.');*/


                    end if;
                    end;
                end if;

                select	max(coalesce(ie_consignado,0)),
                    coalesce(max(ie_tipo_requisicao),'0'),
                    max(ie_consumo),
                    coalesce(max(ie_tipo_perda),'X')
                into STRICT	ie_oper_consignado_w,
                    ie_tipo_requisicao_w,
                    ie_consumo_w,
                    ie_tipo_perda_w
                from	operacao_estoque
                where	cd_operacao_estoque	=  NEW.cd_operacao_estoque;

                if (NEW.dt_movimento_estoque	> LOCALTIMESTAMP) then
                    NEW.dt_mesano_referencia 	:= pkg_date_utils.start_of(LOCALTIMESTAMP,'MONTH',0);
                elsif (NEW.dt_movimento_estoque	<= pkg_date_utils.get_datetime(pkg_date_utils.end_of(dt_mesano_vigente_w, 'MONTH', 0), dt_mesano_vigente_w)) then
                    NEW.dt_mesano_referencia 	:= dt_mesano_vigente_w;
                else	NEW.dt_mesano_referencia 	:= pkg_date_utils.start_of(NEW.dt_movimento_estoque,'MONTH',0);
                end if;

                if (NEW.qt_movimento is null) then
                    NEW.qt_movimento := 0;
                end if;

                if (qt_conv_estoque_consumo_w is null) then
                    qt_estoque_w := NEW.qt_movimento;
                    qt_conv_estoque_consumo_w := 1;
                end if;

                if (NEW.ie_origem_documento in (5,15)) then
                    qt_conv_estoque_consumo_w       := 1;
                elsif (NEW.ie_origem_documento = '1') then
                    BEGIN
                    select	nr_emprestimo
                    into STRICT	nr_emprestimo_w
                    from	nota_fiscal_item
                    where	nr_sequencia = NEW.nr_seq_tab_orig
                    and	nr_item_nf = NEW.nr_sequencia_item_docto;
                    exception
                    when others then
                        nr_emprestimo_w	:=	null;
                    end;	

                end if;	

                if (NEW.ie_origem_documento not in ('1','11')) then
                    qt_estoque_w 		:= obter_quantidade_convertida(NEW.cd_material_estoque, NEW.qt_movimento, NEW.cd_unidade_med_mov, 'UME');/*sidnei - os-321779(:new.qt_movimento / qt_conv_estoque_consumo_w);*/

                    NEW.qt_estoque		:= qt_estoque_w;
                end if;

                NEW.cd_unidade_medida_estoque	:= cd_unidade_medida_estoque_w;
                NEW.cd_material_estoque		:= NEW.cd_material_estoque;

                

                /* atualizacao do centro de custo para inventarios, atualiza com o centro do local de estoque*/


                if (ie_tipo_requisicao_w = '5') and (NEW.cd_centro_custo is null) and (cd_centro_local_w > 0) and (ie_centro_inventario_w = 'S') then
                    NEW.cd_centro_custo	:= cd_centro_local_w;
                end if;

                if (NEW.cd_centro_custo is null) and (ie_centro_perda_w = 'S') and (cd_centro_local_w > 0) and (ie_tipo_perda_w <> 'X') then
                    NEW.cd_centro_custo	:= cd_centro_local_w;
                end if;

                /* atualizacao do centro de custo na prescricao */


                if (NEW.ie_origem_documento = 3) and (NEW.cd_centro_custo is null) then
                    select	max(cd_centro_custo)
                    into STRICT 	NEW.cd_centro_custo
                    from 	setor_atendimento
                    where 	cd_setor_atendimento = NEW.cd_setor_atendimento;
                end if;

                if (NEW.ie_origem_documento = '10') and (NEW.cd_centro_custo is null) and (NEW.cd_setor_atendimento is not null) and (ie_consumo_w in ('A','D')) then
                    select	max(cd_centro_custo)
                    into STRICT 	NEW.cd_centro_custo
                    from 	setor_atendimento
                    where 	cd_setor_atendimento = NEW.cd_setor_atendimento;
                end if;

                if (NEW.cd_centro_custo is not null) and (NEW.cd_conta_contabil is null) then
                    BEGIN
                    cd_centro_conta_w	:=	NEW.cd_centro_custo;

                    SELECT * FROM define_conta_material(
                        NEW.cd_estabelecimento, NEW.cd_material, 3, 0, 0, 0, 0, 0, 0, 0, NEW.cd_local_estoque, NEW.cd_operacao_estoque, trunc(NEW.dt_movimento_estoque), NEW.cd_conta_contabil, cd_centro_conta_w, null) INTO STRICT NEW.cd_conta_contabil, cd_centro_conta_w;
                    end;
                end if;

                /*consistencia da vigencia da conta contabil*/


                if (NEW.cd_conta_contabil is not null) then
                    select	substr(obter_se_conta_vigente(NEW.cd_conta_contabil, NEW.dt_movimento_estoque),1,1)
                    into STRICT	ie_vigencia_conta_w
;
                    if (ie_vigencia_conta_w = 'N') then
                        CALL wheb_mensagem_pck.exibir_mensagem_abort(174133);
                        /*r.aise_application_error(-20011,'A conta contabil esta fora da data de vigencia.');*/


                    end if;
                end if;

                /* alteracao abaixao enviada apra testes no pro, itamar esta  testando*/


                if	(ie_consignado_w = '1' AND NEW.cd_fornecedor is null) then
                    BEGIN
                    CALL wheb_mensagem_pck.exibir_mensagem_abort(174135);
                    /*r.aise_application_error(-20011,'Este item eh consignado e exige a informacao do fornecedor.');*/


                    end;
                end if;

                /* identificar se deve atualizar a tabela de consignados */


                ie_atualiza_consignado_w	:= (ie_oper_consignado_w <> '0') and
                                ((ie_consignado_w = '1') or
                                (ie_consignado_w = '2' AND NEW.cd_fornecedor is not null));

                /* define que local de passagem direta (tipo 8) nao atualiza estoque */


                if (ie_tipo_local_w = '8') and (ie_atualiza_local_direto_w = 'N') 	 then
                    ie_material_estoque_w	:= 'N';
                end if;

                /*caso especifico para quando:
                    - se for para baixar do consignado
                    - se lancado por lote de fornecedor
                    - se o material for tipo ambos
                    - se nao tem saldo do consignado
                    - se tem saldo do normal
                    - e se nao for um inventario
                isso para nao dar erro que nao existe saldo para o consignado quando tiver no saldo normal*/


                select	ie_entrada_saida
                into STRICT	ie_entrada_saida_w
                from	operacao_estoque
                where	cd_operacao_estoque = NEW.cd_operacao_estoque;		

                /* 987003 - nao deve fazer essa troca automatica
                if	(ie_tipo_requisicao_w in ('1','3','4','9')) and
                    (ie_atualiza_consignado_w) and
                    (:new.nr_seq_lote_fornec is not null) and
                    (:new.cd_fornecedor is not null) and
                    (ie_consignado_w = '2') and
                    (((:new.cd_acao = '1') and (ie_entrada_saida_w = 'S')) or ((:new.cd_acao = '2') and (ie_entrada_saida_w = 'E'))) then
                    begin
                    select	nvl(max(obter_saldo_estoque_consig(
                            :new.cd_estabelecimento,
                            :new.cd_fornecedor,
                            :new.cd_material_estoque,
                            :new.cd_local_estoque)), 0)
                    into	qt_consulta_estoque_consig_w
                    from	dual;

                    select	nvl(max(obter_saldo_disp_estoque(
                            :new.cd_estabelecimento,
                            :new.cd_material_estoque,
                            :new.cd_local_estoque,
                            :new.dt_mesano_referencia)),0)
                    into	qt_consulta_estoque_w
                    from	dual;
                    
                    if	(qt_consulta_estoque_consig_w < :new.qt_estoque) and
                        (qt_consulta_estoque_w >= :new.qt_estoque) then
                        begin
                        begin
                        select	cd_operacao_cons_paciente,
                            cd_operacao_devol_paciente
                        into	cd_operacao_cons_paciente_w,
                            cd_operacao_devol_paciente_w
                        from	parametro_estoque
                        where	cd_estabelecimento = :new.cd_estabelecimento;
                        exception
                            when others then
                            wheb_mensagem_pck.exibir_mensagem_abort(174136);
                                --r.aise_application_error(-20011,'Falta operacoes consumo e/ou devolucao nos Parametros de estoque.');

                        end;

                        ie_atualiza_consignado_w		:= false;
                        :new.cd_operacao_estoque		:= cd_operacao_cons_paciente_w;
                        if	(:new.cd_acao = '2') then
                            :new.cd_operacao_estoque	:= cd_operacao_devol_paciente_w;
                        end if;
                        end;

                    end if;
                    end;
                end if;
                */


                if (ie_atualiza_consignado_w) then
                    ie_movto_consig_w := 'S';
                else
                    ie_movto_consig_w := 'N';
                end if;

                /* verificar se material nao esta bloqueado para inventario */


                ie_bloqueio_inventario_w := sup_verifica_bloqueio_mat_inv(	NEW.cd_estabelecimento, NEW.dt_mesano_referencia, NEW.cd_local_estoque, NEW.cd_material_estoque, NEW.cd_fornecedor, ie_movto_consig_w, ie_bloqueio_inventario_w);

                if (ie_bloqueio_inventario_w = 'S') then
                    BEGIN
                    select	ds_material
                    into STRICT	ds_material_w
                    from	material
                    where	cd_material = NEW.cd_material_estoque;
                    CALL wheb_mensagem_pck.exibir_mensagem_abort(174138,'DS_MATERIAL='||ds_material_w);
                    /*r.aise_application_error(-20011,'Bloqueado p/inventario: ' || ds_material_w);*/


                    end;
                end if;

                /* define se o movimento foi de consignado ou normal*/


                NEW.ie_movto_consignado 	:= 'N';
                if (ie_atualiza_consignado_w) then
                    NEW.ie_movto_consignado 	:= 'C';
                end if;

                ie_erro_ww 	:= 'N';
                ds_erro_w	:= null;
                ds_erro_ww	:= null;

                /* 	atualiza saldo */


                if (ie_material_estoque_w = 'S') and (not ie_atualiza_consignado_w) then
                    BEGIN
                    SELECT * FROM atualizar_saldo(
                        NEW.cd_estabelecimento, NEW.cd_local_estoque, NEW.cd_material_estoque, NEW.dt_mesano_referencia, NEW.cd_operacao_estoque, NEW.qt_estoque, NEW.cd_acao, NEW.nm_usuario, ie_erro_w, ds_erro_w) INTO STRICT ie_erro_w, ds_erro_w;

                    if (ie_erro_w = 'S') then
                        ie_erro_ww := 'S';
                        ds_erro_ww := coalesce(ds_erro_ww, ds_erro_w);
                    end if;

                    if (NEW.nr_seq_lote_fornec is not null) and (ie_estoque_lote_w = 'S') and (nr_emprestimo_w is null) then
                        BEGIN
                        ie_erro_w := atualizar_saldo_lote(
                            NEW.cd_estabelecimento, NEW.cd_local_estoque, NEW.cd_material_estoque, NEW.dt_mesano_referencia, NEW.nr_seq_lote_fornec, NEW.cd_operacao_estoque, NEW.qt_estoque, NEW.cd_acao, NEW.nm_usuario, ie_erro_w);

                        if (ie_erro_w = 'S') then
                            ie_erro_ww := 'S';
                            /* 799531 - Falha na atualizacao do saldo do lote.*/


                            ds_erro_ww := coalesce(ds_erro_ww, wheb_mensagem_pck.get_texto(799531));
                        end if;
                        end;
                    end if;

                    if (ie_tipo_requisicao_w = '5') and (NEW.ie_origem_documento <> '15') then			
                        CALL sup_atualizar_saldo_invent(
                            NEW.cd_estabelecimento,
                            NEW.dt_mesano_referencia,
                            NEW.cd_local_estoque,
                            NEW.cd_material_estoque,
                            1,
                            0,
                            NEW.qt_estoque,
                            NEW.nm_usuario);
                    end if;

                    dt_mesano_referencia_w	:=	pkg_date_utils.add_month(NEW.dt_mesano_referencia, 1, 0);

                    while(dt_mesano_referencia_w <= pkg_date_utils.start_of(LOCALTIMESTAMP,'MONTH',0)) loop 
                        BEGIN
                        
                        BEGIN
                        select	NEW.qt_estoque
                        into STRICT	qt_estoque_ww
                        from	saldo_estoque
                        where	cd_estabelecimento	= NEW.cd_estabelecimento
                        and	cd_local_estoque	= NEW.cd_local_estoque
                        and	cd_material		= NEW.cd_material_estoque
                        and	dt_mesano_referencia 	= dt_mesano_referencia_w;
                        exception
                        when others then
                            qt_estoque_ww	:=	0;
                        end;

                        SELECT * FROM atualizar_saldo(
                            NEW.cd_estabelecimento, NEW.cd_local_estoque, NEW.cd_material_estoque, dt_mesano_referencia_w, NEW.cd_operacao_estoque, qt_estoque_ww,  -- alterado para que nao seja acumulada a quantidade do movimento com o saldo atual ao atualizar o saldo do mes futuro,
                            NEW.cd_acao, NEW.nm_usuario, ie_erro_w, ds_erro_w) INTO STRICT ie_erro_w, ds_erro_w;

                        if (ie_erro_w = 'S') then
                            ie_erro_ww := 'S';
                            ds_erro_ww := coalesce(ds_erro_ww, ds_erro_w);
                        end if;

                        if (NEW.nr_seq_lote_fornec is not null) and (ie_estoque_lote_w = 'S') and (nr_emprestimo_w is null) then
                            BEGIN
                            BEGIN
                            select	NEW.qt_estoque
                            into STRICT	qt_estoque_lote_w
                            from	saldo_estoque_lote
                            where	cd_material = NEW.cd_material_estoque
                            and	cd_local_estoque = NEW.cd_local_estoque
                            and	cd_estabelecimento = NEW.cd_estabelecimento
                            and	nr_seq_lote = NEW.nr_seq_lote_fornec
                            and	dt_mesano_referencia = dt_mesano_referencia_w;				
                            exception
                            when others then
                                qt_estoque_lote_w	:=	0;
                            end;

                            ie_erro_w := atualizar_saldo_lote(
                                NEW.cd_estabelecimento, NEW.cd_local_estoque, NEW.cd_material_estoque, dt_mesano_referencia_w, NEW.nr_seq_lote_fornec, NEW.cd_operacao_estoque, qt_estoque_lote_w,  -- alterado para que nao seja acumulada a quantidade do movimento com o saldo atual ao atualizar o saldo do mes futuro,
                                NEW.cd_acao, NEW.nm_usuario, ie_erro_w);

                            if (ie_erro_w = 'S') then
                                ie_erro_ww := 'S';
                                /* 799531 - Falha na atualizacao do saldo do lote.*/


                                ds_erro_ww := coalesce(ds_erro_ww, wheb_mensagem_pck.get_texto(799531));
                            end if;
                            end;
                        end if;

                        /*
                        if	(ie_tipo_requisicao_w = '5') then
                            sup_atualizar_saldo_invent(
                                :new.cd_estabelecimento,
                                dt_mesano_referencia_w,
                                :new.cd_local_estoque,
                                :new.cd_material_estoque,
                                1,
                                0,
                                :new.qt_estoque,
                                :new.nm_usuario);
                        end if;
                        */


                        dt_mesano_referencia_w	:=	pkg_date_utils.add_month(dt_mesano_referencia_w, 1, 0);
                        end;
                    end loop;
                    end;

                    /*tratamento para quando ocorre erro de atualizacao do saldo do lote e a atualizacao do saldo do material fica ok*/


                    if (ie_erro_ww = 'S') then
                        ie_erro_w := 'S';
                        ds_erro_w := ds_erro_ww;
                    end if;

                    if (ie_erro_w  = 'S') then
                        NEW.ds_consistencia	:= ds_erro_w;
                    elsif (ie_erro_w  = 'N') then
                        NEW.dt_processo	:= LOCALTIMESTAMP;
                    end if;
                end if;

                /*  consignado         */


                /* tratar os dois casos */


                if (ie_material_estoque_w = 'S') and (ie_atualiza_consignado_w) then
                    BEGIN		
                        ie_erro_w := atualizar_saldo_consig(
                        NEW.cd_estabelecimento, NEW.cd_local_estoque, NEW.cd_fornecedor, NEW.cd_material_estoque, NEW.dt_mesano_referencia, NEW.cd_operacao_estoque, NEW.qt_estoque, NEW.cd_acao, NEW.nm_usuario, ie_erro_w);

                    if (ie_erro_w = 'S') then
                        ie_erro_ww := 'S';
                    end if;

                    if (NEW.nr_seq_lote_fornec is not null) and (ie_estoque_lote_w = 'S') then
                        ie_erro_w := atualizar_saldo_consig_lote(
                            NEW.cd_estabelecimento, NEW.cd_local_estoque, NEW.cd_fornecedor, NEW.cd_material_estoque, NEW.dt_mesano_referencia, NEW.nr_seq_lote_fornec, NEW.cd_operacao_estoque, NEW.qt_estoque, NEW.cd_acao, NEW.nm_usuario, ie_erro_w);

                        if (ie_erro_w = 'S') then
                            ie_erro_ww := 'S';
                        end if;
                    end if;

                    if (ie_material_estoque_w = 'S') and (ie_tipo_requisicao_w = '5') and (NEW.ie_origem_documento <> '15') then			
                    CALL sup_atualizar_saldo_invent(
                        NEW.cd_estabelecimento,
                        NEW.dt_mesano_referencia,
                        NEW.cd_local_estoque,
                        NEW.cd_material_estoque,
                        1,
                        0,
                        NEW.qt_estoque,
                        NEW.nm_usuario,
                        NEW.cd_fornecedor);
                    end if;

                    dt_mesano_referencia_w	:=	pkg_date_utils.add_month(NEW.dt_mesano_referencia, 1, 0);

                    while(dt_mesano_referencia_w <= pkg_date_utils.start_of(LOCALTIMESTAMP,'MONTH',0)) loop 
                        BEGIN			
                        BEGIN		
                        select	NEW.qt_estoque
                        into STRICT	qt_estoque_ww
                        from	fornecedor_mat_consignado
                        where	cd_fornecedor		= NEW.cd_fornecedor
                        and	cd_local_estoque	= NEW.cd_local_estoque
                        and	cd_material		= NEW.cd_material_estoque
                        and	dt_mesano_referencia	=dt_mesano_referencia_w;			
                        exception
                        when others then
                            qt_estoque_ww	:=	0;
                        end;

                        ie_erro_w := atualizar_saldo_consig(
                            NEW.cd_estabelecimento, NEW.cd_local_estoque, NEW.cd_fornecedor, NEW.cd_material_estoque, dt_mesano_referencia_w, NEW.cd_operacao_estoque, qt_estoque_ww, -- alterado para que nao seja acumulada a quantidade do movimento com o saldo atual ao atualizar o saldo do mes futuro,
                            NEW.cd_acao, NEW.nm_usuario, ie_erro_w);

                        if (ie_erro_w = 'S') then
                            ie_erro_ww := 'S';
                        end if;

                        if (NEW.nr_seq_lote_fornec is not null) and (ie_estoque_lote_w = 'S') then

                            BEGIN
                            select	NEW.qt_estoque
                            into STRICT	qt_estoque_lote_w
                            from	fornecedor_mat_consig_lote
                            where	cd_material = NEW.cd_material_estoque
                            and	cd_local_estoque = NEW.cd_local_estoque
                            and	cd_estabelecimento = NEW.cd_estabelecimento
                            and	nr_seq_lote = NEW.nr_seq_lote_fornec
                            and	cd_fornecedor = NEW.cd_fornecedor
                            and	dt_mesano_referencia = dt_mesano_referencia_w;				
                            exception
                            when others then
                                qt_estoque_lote_w	:=	0;
                            end;				

                            ie_erro_w := atualizar_saldo_consig_lote(
                                NEW.cd_estabelecimento, NEW.cd_local_estoque, NEW.cd_fornecedor, NEW.cd_material_estoque, dt_mesano_referencia_w, NEW.nr_seq_lote_fornec, NEW.cd_operacao_estoque, qt_estoque_lote_w, -- alterado para que nao seja acumulada a quantidade do movimento com o saldo atual ao atualizar o saldo do mes futuro,
                                NEW.cd_acao, NEW.nm_usuario, ie_erro_w);

                            if (ie_erro_w = 'S') then
                                ie_erro_ww := 'S';
                            end if;
                        end if;

                        dt_mesano_referencia_w	:=	pkg_date_utils.add_month(dt_mesano_referencia_w, 1, 0);
                        end;
                    end loop;

                    if (ie_erro_ww = 'S') then
                        ie_erro_w := 'S';
                    end if;

                    if (ie_erro_w  = 'S') then
                        NEW.ds_consistencia	:= ds_erro_w;
                    elsif (ie_erro_w  = 'N') then
                        NEW.dt_processo := LOCALTIMESTAMP;
                    end if;
                    end;
                end if;

                select	count(*)
                into STRICT	qt_existe_regra_email_w
                from	regra_envio_email_material
                where	ie_tipo_mensagem = 6;

                if (qt_existe_regra_email_w > 0) then
                    BEGIN
                    CALL gerar_email_movto_material(
                        NEW.nr_movimento_estoque,
                        NEW.cd_material,
                        NEW.cd_acao,
                        NEW.cd_operacao_estoque,
                        NEW.ie_origem_documento,
                        NEW.cd_local_estoque,
                        NEW.cd_local_estoque_destino,
                        NEW.cd_setor_atendimento,
                        NEW.dt_movimento_estoque,
                        NEW.qt_movimento,
                        NEW.qt_estoque,
                        NEW.cd_estabelecimento,
                        NEW.nm_usuario);
                    exception
                    when others then
                        qt_existe_regra_email_w := 0;
                    end;
                end if;
                end;
            end if;
        end;
    end if;
  END;
RETURN NEW;
end;
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION trigger_fct_movimento_estoque_insert() FROM PUBLIC;

CREATE TRIGGER movimento_estoque_insert
	BEFORE INSERT ON movimento_estoque FOR EACH ROW
	EXECUTE PROCEDURE trigger_fct_movimento_estoque_insert();

