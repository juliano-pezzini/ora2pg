-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_titulo_receber_mens ( nr_seq_mensalidade_p bigint, dt_emissao_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_cgc_w			varchar(30);
cd_conta_contabil_w		varchar(20);
cd_pessoa_fisica_w		varchar(10);
ie_forma_pagamento_w		varchar(10);
vl_classif_total_w		double precision	:= 0;
vl_mensalidade_w		double precision;
vl_classificacao_w		double precision;
cd_moeda_padrao_w		bigint;
cd_condicao_pagamento_w		bigint;
nr_seq_tit_w			bigint;
cd_conta_financ_w		bigint;
nr_seq_classif_w		bigint;
nr_titulo_w			bigint;
cd_portador_w			bigint;
cd_tipo_portador_w		bigint;
cd_estab_financeiro_w		bigint;
nr_seq_contrato_w		bigint;
dt_vencimento_w			timestamp;
ds_observacao_w			varchar(255)	:= '';
ie_origem_titulo_w		varchar(10)	:= null;
cd_tipo_taxa_juros_w		bigint	:= null;
cd_tipo_taxa_multa_w		bigint	:= null;
nr_seq_conta_banco_w		bigint	:= null;
nr_seq_reajuste_w		bigint;
tx_juros_w			double precision	:= null;
tx_multa_w			double precision	:= null;
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;
ds_oficio_ans_W			varchar(255);
nr_protocolo_ans_w		varchar(60);
ie_indice_reajuste_w		varchar(1);
nr_seq_pagador_w		bigint;
NR_SEQ_PAGADOR_FIN_w		bigint;
tx_reajuste_w			double precision;
dt_mesano_referencia_w		timestamp;
ds_erro_w			varchar(4000);
ie_tipo_titulo_w		varchar(5);
ie_tipo_item_w			varchar(3);
ie_acao_venc_nao_util_w		varchar(1);
nr_seq_trans_fin_baixa_w	bigint;
qt_dia_w			bigint;
qt_feriado_w			bigint;
nr_seq_tipo_lanc_w		bigint;
nr_seq_carteira_cobr_w		bigint;
nr_seq_forma_cobranca_w		bigint;
cd_conta_financ_item_w		bigint;
nr_seq_trans_fin_baixa_mens_w	bigint;
nr_seq_trans_fin_con_mens_w	bigint;
cd_cgc_compl_w			varchar(14);
cd_pf_compl_w			varchar(10);
ie_situacao_w			varchar(1);
nr_seq_pagador_compl_w		bigint;
nr_seq_contrato_ww		bigint;
cd_serie_w			varchar(5);
nr_parcela_w			smallint;
qt_dias_parcela_w		integer;
tx_fracao_parcela_w		double precision;
tx_acrescimo_w			double precision;
ie_dia_semana_w			varchar(2);
DT_PARCELA_W			timestamp;
nr_ult_parcela_w		smallint	:= 0;
vl_parcela_w			double precision	:= 0;
vl_total_w			double precision	:= 0;
ie_tipo_acrescimo_w		varchar(2)	:= 'P';
vl_base_juros_w			double precision;
qt_vencimentos_w		bigint;
ie_bloqueto_deb_auto_w		varchar(4000);
vl_titulo_w			double precision;
vl_multa_fixo_w			double precision;
dt_emissao_w			timestamp;
nr_seq_classe_tit_mens_w	classe_titulo_receber.nr_sequencia%type;
ds_servico_w			varchar(255);
vl_coparticipacao_w		double precision;
nm_beneficiario_w		varchar(255);
cd_usuario_plano_w		varchar(255);
dt_mensagem_w			timestamp;
ds_prestador_w			varchar(23);
nr_seq_segurado_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_area_w			bigint;
cd_especialidade_w		bigint;
cd_grupo_w			bigint;
ie_origem_proced_ww		bigint;
cd_banco_w			pls_contrato_pagador_fin.cd_banco%type;
dt_dia_vencimento_w		pls_contrato_pagador_fin.dt_dia_vencimento%type;
nr_seq_regra_internacao_w	bigint;
ds_servico_dest_w		pls_conv_serv_extrat_mens.ds_servico_dest%type;
ie_baixar_mens_adiant_w		pls_parametros_cr.ie_baixar_mens_adiant%type;
qt_titulos_gerados_w		integer;
nr_seq_regra_conv_w		integer;
tx_desconto_w			pls_regra_desc_tit_mens.tx_desconto%type;
cd_pf_estipulante_w		pls_contrato.cd_pf_estipulante%type;
cd_cgc_estipulante_w		pls_contrato.cd_cgc_estipulante%type;
cd_pessoa_fisica_ww		pessoa_fisica.cd_pessoa_fisica%type;
qt_coop_w			bigint;
ie_cooperado_w			varchar(1);
vl_tributo_w			pls_mensalidade_trib.vl_tributo%type;
ie_retencao_w			pls_mensalidade_trib.ie_retencao%type;
cd_pf_prest_w			pls_prestador.cd_pessoa_fisica%type;
cd_cgc_prest_w			pls_prestador.cd_cgc%type;
qt_coop_prest_w			integer;
ie_prest_exec_w			varchar(1);
ie_gerar_tributo_nf_mens_w	pls_parametros.ie_gerar_tributo_nf_mens%type;
nr_seq_mens_trib_w		pls_mensalidade_trib.nr_sequencia%type;
cd_tributo_w			tributo.cd_tributo%type;
nr_seq_trans_prov_trib_rec_w	tributo.nr_seq_trans_prov_trib_rec%type;
ie_linha_digitavel_w		varchar(10);
qt_dias_venc_mens_w		pls_parametros.qt_dias_venc_mens%type;
ie_primeira_mensalidade_w	pls_lote_mensalidade.ie_primeira_mensalidade%type;
qt_titulo_mens_w		bigint;

C03 CURSOR FOR
	SELECT	nr_parcela,
		qt_dias_parcela,
		tx_fracao_parcela,
		coalesce(tx_acrescimo,0),
		ie_dia_semana
	from	parcela
	where	cd_condicao_pagamento = cd_condicao_pagamento_w
	order by nr_parcela;

c04 CURSOR FOR
	SELECT	substr(coalesce(pls_obter_conv_serv_extratmens(c.nr_sequencia,coalesce(b.cd_procedimento_internacao, c.cd_procedimento), coalesce(b.ie_origem_proced_internacao,c.ie_origem_proced),null,e.dt_referencia,a.nr_seq_segurado,d.nr_seq_prestador_exec),coalesce(obter_desc_procedimento(b.cd_procedimento_internacao, b.ie_origem_proced_internacao),pls_obter_dados_conta_proc(b.nr_seq_conta_proc,'D'))),1,255) ds_procedimento,	
		b.vl_coparticipacao,
		substr(pls_obter_dados_segurado(a.nr_seq_segurado,'N'),1,255) nm_segurado,
		substr(pls_obter_dados_segurado(a.nr_seq_segurado,'C'),1,255) cd_usuario_plano,
		c.dt_procedimento dt_mensagem
	from	pls_conta d,
		pls_conta_proc c,
		pls_conta_coparticipacao b,
		pls_mensalidade_segurado a,
		pls_mensalidade e
	where	b.nr_seq_conta_proc	= c.nr_sequencia
	and	b.nr_seq_conta		= d.nr_sequencia
	and	e.nr_sequencia		= a.nr_seq_mensalidade
	and	a.nr_sequencia		= b.nr_seq_mensalidade_seg
	and	e.nr_sequencia		= nr_seq_mensalidade_p
	and	((nr_seq_regra_internacao_w = 0) or ((nr_seq_regra_internacao_w > 0) and exists (SELECT 1
												from	pls_conta x
												where	x.nr_sequencia = d.nr_seq_conta_princ
												and	x.ie_tipo_guia <> 5)))
	
union all

	select	substr(coalesce(pls_obter_conv_serv_extratmens(null,b.cd_procedimento_internacao, b.ie_origem_proced_internacao,null,e.dt_referencia,a.nr_seq_segurado,d.nr_seq_prestador_exec),coalesce(obter_desc_procedimento(b.cd_procedimento_internacao, b.ie_origem_proced_internacao),pls_obter_dados_conta_mat(b.nr_seq_conta_mat,'D'))),1,255) ds_procedimento,
		b.vl_coparticipacao,
		substr(pls_obter_dados_segurado(a.nr_seq_segurado,'N'),1,255) nm_segurado,
		substr(pls_obter_dados_segurado(a.nr_seq_segurado,'C'),1,255) cd_usuario_plano,
		c.dt_liberacao dt_mensagem
	from	pls_conta d,
		pls_conta_mat c,
		pls_conta_coparticipacao b,
		pls_mensalidade_segurado a,
		pls_mensalidade e
	where	b.nr_seq_conta_mat	= c.nr_sequencia
	and	b.nr_seq_conta		= d.nr_sequencia
	and	a.nr_sequencia		= b.nr_seq_mensalidade_seg
	and	e.nr_sequencia		= a.nr_seq_mensalidade
	and	e.nr_sequencia		= nr_seq_mensalidade_p
	and	((nr_seq_regra_internacao_w = 0) or ((nr_seq_regra_internacao_w > 0) and exists (select 1
												from	pls_conta x
												where	x.nr_sequencia = d.nr_seq_conta_princ
												and	x.ie_tipo_guia <> 5)))
	
union all

	select	substr(coalesce(pls_obter_conv_serv_extratmens(b.nr_seq_conta_proc,b.cd_procedimento_internacao, b.ie_origem_proced_internacao,null,e.dt_referencia,a.nr_seq_segurado,d.nr_seq_prestador_exec),obter_descricao_procedimento(b.cd_procedimento_internacao, b.ie_origem_proced_internacao)),1,255) ds_procedimento,
		b.vl_coparticipacao,
		substr(pls_obter_dados_segurado(a.nr_seq_segurado,'N'),1,255) nm_segurado,
		substr(pls_obter_dados_segurado(a.nr_seq_segurado,'C'),1,255) cd_usuario_plano,
		clock_timestamp() dt_mensagem
	from	pls_conta d,
		pls_conta_coparticipacao b,
		pls_mensalidade_segurado a,
		pls_mensalidade	e
	where	coalesce(b.nr_seq_conta_proc::text, '') = ''
	and	coalesce(b.nr_seq_conta_mat::text, '') = ''
	and	b.nr_seq_conta		= d.nr_sequencia
	and	a.nr_sequencia		= b.nr_seq_mensalidade_seg
	and	e.nr_sequencia		= a.nr_seq_mensalidade
	and	e.nr_sequencia		= nr_seq_mensalidade_p
	and	((nr_seq_regra_internacao_w = 0) or ((nr_seq_regra_internacao_w > 0) and exists (select 1
												from	pls_conta x
												where	x.nr_sequencia = d.nr_seq_conta_princ
												and	x.ie_tipo_guia <> 5)))
	
union all

	select	coalesce(ds_servico_dest_w,obter_descricao_procedimento(b.cd_procedimento_internacao, b.ie_origem_proced_internacao)),
		b.vl_coparticipacao,
		substr(pls_obter_dados_segurado(a.nr_seq_segurado,'N'),1,255) nm_segurado,
		substr(pls_obter_dados_segurado(a.nr_seq_segurado,'C'),1,255) cd_usuario_plano,
		d.dt_atendimento_referencia dt_mensagem
	from	pls_conta d,
		pls_conta_coparticipacao b,
		pls_mensalidade_segurado a
	where	b.nr_seq_conta = d.nr_sequencia
	and	a.nr_sequencia		= b.nr_seq_mensalidade_seg
	and	a.nr_seq_mensalidade	= nr_seq_mensalidade_p
	and	((nr_seq_regra_internacao_w > 0) and exists (	select	1
								from	pls_conta x
								where	x.nr_sequencia = d.nr_seq_conta_princ
								and	x.ie_tipo_guia = 5));

c05 CURSOR FOR
	SELECT	distinct
		nm_segurado,
		cd_usuario_plano,
		dt_mensagem,
		ds_servico,
		ds_prestador,
		nr_seq_segurado
	from	(SELECT	substr(pls_obter_dados_segurado(a.nr_seq_segurado,'N'),1,255) nm_segurado,
			substr(pls_obter_dados_segurado(a.nr_seq_segurado,'C'),1,255) cd_usuario_plano,
			c.dt_procedimento dt_mensagem,
			coalesce(substr(pls_obter_conv_serv_extratmens(c.nr_sequencia,c.cd_procedimento,c.ie_origem_proced,null,f.dt_referencia,a.nr_seq_segurado,d.nr_seq_prestador_exec),1,32),substr(obter_descricao_procedimento(c.cd_procedimento,c.ie_origem_proced),1,32)) ds_servico,
			substr(pls_obter_dados_prestador(e.nr_sequencia,'N'),1,23) ds_prestador,
			a.nr_seq_segurado,
			b.nr_sequencia nr_seq_conta_coparticipacao
		from	pls_prestador			e,
			pls_conta			d,
			pls_conta_proc			c,
			pls_conta_coparticipacao	b,
			pls_mensalidade_segurado	a,
			pls_mensalidade			f
		where	d.nr_seq_prestador_exec		= e.nr_sequencia
		and	c.nr_seq_conta			= d.nr_sequencia
		and	b.nr_seq_conta_proc		= c.nr_sequencia
		and	a.nr_sequencia			= b.nr_seq_mensalidade_seg
		and	f.nr_sequencia			= a.nr_seq_mensalidade
		and	f.nr_sequencia			= nr_seq_mensalidade_p
		and	((nr_seq_regra_internacao_w = 0) or ((nr_seq_regra_internacao_w > 0) and exists (select 1
													from	pls_conta x
													where	x.nr_sequencia = d.nr_seq_conta_princ
													and	x.ie_tipo_guia <> 5)))
		
union

		select	substr(pls_obter_dados_segurado(a.nr_seq_segurado,'N'),1,255) nm_segurado,
			substr(pls_obter_dados_segurado(a.nr_seq_segurado,'C'),1,255) cd_usuario_plano,
			d.dt_atendimento_referencia dt_mensagem,
			coalesce(substr(pls_obter_conv_serv_extratmens(b.nr_seq_conta_proc,b.cd_procedimento_internacao, b.ie_origem_proced_internacao,null,f.dt_referencia,a.nr_seq_segurado,d.nr_seq_prestador_exec),1,32),coalesce(substr(obter_descricao_procedimento(b.cd_procedimento_internacao, b.ie_origem_proced_internacao),1,32),coalesce(substr(pls_obter_dados_conta_proc(b.nr_seq_conta_proc,'D'),1,255),substr(pls_obter_dados_conta_mat(b.nr_seq_conta_mat,'D'),1,255)))) ds_servico,
			substr(pls_obter_dados_prestador(e.nr_sequencia,'N'),1,23) ds_prestador,
			a.nr_seq_segurado,
			b.nr_sequencia
		from	pls_prestador			e,
			pls_conta			d,
			pls_conta_coparticipacao	b,
			pls_mensalidade_segurado	a,
			pls_mensalidade			f
		where	d.nr_seq_prestador_exec		= e.nr_sequencia
		and	b.nr_seq_conta			= d.nr_sequencia
		and	coalesce(b.nr_seq_conta_proc::text, '') = ''
		and	coalesce(b.nr_seq_conta_mat::text, '') = ''
		and	a.nr_sequencia			= b.nr_seq_mensalidade_seg
		and	f.nr_sequencia			= a.nr_seq_mensalidade
		and	f.nr_sequencia			= nr_seq_mensalidade_p
		and	((nr_seq_regra_internacao_w = 0) or ((nr_seq_regra_internacao_w > 0) and exists (select 1
													from	pls_conta x
													where	x.nr_sequencia = d.nr_seq_conta_princ
													and	x.ie_tipo_guia <> 5)))
		
union

			select	substr(pls_obter_dados_segurado(a.nr_seq_segurado,'N'),1,255) nm_segurado,
			substr(pls_obter_dados_segurado(a.nr_seq_segurado,'C'),1,255) cd_usuario_plano,
			d.dt_atendimento_referencia dt_mensagem,
			coalesce(ds_servico_dest_w,obter_descricao_procedimento(b.cd_procedimento_internacao, b.ie_origem_proced_internacao)),
			substr(pls_obter_dados_prestador(e.nr_sequencia,'N'),1,23) ds_prestador,
			a.nr_seq_segurado,
			b.nr_sequencia nr_seq_conta_coparticipacao
		from	pls_prestador			e,
			pls_conta			d,
			pls_conta_coparticipacao	b,
			pls_mensalidade_segurado	a
		where	d.nr_seq_prestador_exec		= e.nr_sequencia
		and	b.nr_seq_conta			= d.nr_sequencia
		and	a.nr_sequencia			= b.nr_seq_mensalidade_seg
		and	a.nr_seq_mensalidade		= nr_seq_mensalidade_p
		and	((nr_seq_regra_internacao_w > 0) and exists (	select	1
									from	pls_conta x
									where	x.nr_sequencia = d.nr_seq_conta_princ
									and	x.ie_tipo_guia = 5))) alias51;

C06 CURSOR( nr_seq_mensalidade_pc	pls_mensalidade.nr_sequencia%type) FOR
	SELECT	f.cd_procedimento,
		f.ie_origem_proced
	from	pls_prestador			h,
		pls_conta_proc			f,
		pls_conta_medica_resumo		e,
		pls_conta			d,
		pls_mensalidade_seg_item	c,
		pls_mensalidade_segurado	b,
		pls_mensalidade			a
	where	d.nr_seq_prestador_exec		= h.nr_sequencia
	and	f.nr_sequencia			= e.nr_seq_conta_proc
	and	d.nr_sequencia			= e.nr_seq_conta
	and	d.nr_sequencia			= c.nr_seq_conta
	and	b.nr_sequencia			= c.nr_seq_mensalidade_seg
	and	a.nr_sequencia			= b.nr_seq_mensalidade
	and	a.nr_sequencia			= nr_seq_mensalidade_pc
	and	not exists (	SELECT		1
				from		pls_conta_coparticipacao x
				where		x.nr_seq_conta		= d.nr_sequencia
				and		x.nr_seq_conta_proc	= e.nr_seq_conta_proc
				
union

				select		1
				from		pls_conta_coparticipacao x
				where		x.nr_seq_conta		= d.nr_sequencia
				and		x.nr_seq_conta_mat	= e.nr_seq_conta_mat)
	group by
		f.cd_procedimento,
		f.ie_origem_proced;

C07 CURSOR( nr_seq_mensalidade_pc	pls_mensalidade.nr_sequencia%type) FOR
	SELECT	distinct substr(pls_obter_dados_segurado(d.nr_seq_segurado,'N'),1,255) nm_segurado,
		substr(pls_obter_dados_segurado(d.nr_seq_segurado,'C'),1,255) cd_usuario_plano,
		e.dt_item dt_mensagem,
		coalesce(g.ds_servico_dest,substr(obter_descricao_procedimento(f.cd_procedimento,f.ie_origem_proced),1,32)) ds_servico,
		substr(pls_obter_dados_prestador(h.nr_sequencia,'N'),1,23) ds_prestador,
		b.nr_seq_segurado nr_seq_segurado,
		a.dt_referencia dt_referencia,
		coalesce(g.ie_benef_cooperado,'A') ie_benef_cooperado,
		d.nr_seq_prestador_exec nr_seq_prestador_exec,
		coalesce(g.ie_prestador_exec_cooperado,'A') ie_prestador_exec_cooperado
	from	pls_prestador			h,
		pls_conv_serv_extrat_mens	g,
		pls_conta_proc			f,
		pls_conta_medica_resumo		e,
		pls_conta			d,
		pls_mensalidade_seg_item	c,
		pls_mensalidade_segurado	b,
		pls_mensalidade			a
	where	d.nr_seq_prestador_exec		= h.nr_sequencia
	and	f.nr_sequencia			= e.nr_seq_conta_proc
	and	d.nr_sequencia			= e.nr_seq_conta
	and	d.nr_sequencia			= c.nr_seq_conta
	and	b.nr_sequencia			= c.nr_seq_mensalidade_seg
	and	a.nr_sequencia			= b.nr_seq_mensalidade
	and	a.nr_sequencia			= nr_seq_mensalidade_pc
	and	coalesce(g.nr_seq_material,1)	= coalesce(g.nr_seq_material,1)
	and	coalesce(g.cd_procedimento,1)	= coalesce(g.cd_procedimento,1)
	and	coalesce(g.ie_origem_proced,1)	= coalesce(g.ie_origem_proced,1)
	and	coalesce(g.ie_atend_internacao,'N') = 'N'
	and	((nr_seq_regra_internacao_w = 0) or ((nr_seq_regra_internacao_w > 0) and exists (SELECT 1
												from	pls_conta x
												where	x.nr_sequencia = d.nr_seq_conta_princ
												and	x.ie_tipo_guia <> 5)))
	and exists(	select	1
			from	pls_conv_serv_extrat_mens	h
			where	h.nr_sequencia			= g.nr_sequencia
			and	((coalesce(h.cd_procedimento::text, '') = '') or (h.cd_procedimento = cd_procedimento_w)
			and (coalesce(h.ie_origem_proced,ie_origem_proced_ww) = ie_origem_proced_ww))	
			and	((coalesce(h.cd_area_procedimento::text, '') = '') or (h.cd_area_procedimento	= cd_area_w))
			and	((coalesce(h.cd_especialidade::text, '') = '') or (h.cd_especialidade		= cd_especialidade_w))
			and	((coalesce(h.cd_grupo_proc::text, '') = '') or (h.cd_grupo_proc		= cd_grupo_w))
			and	((coalesce(h.ie_tipo_despesa::text, '') = '') or (h.ie_tipo_despesa		= f.ie_tipo_despesa)))
	and	not exists (	select	1
				from	pls_conta_coparticipacao x
				where	x.nr_seq_conta		= d.nr_sequencia
				and	x.nr_seq_conta_proc	= e.nr_seq_conta_proc
				
union

				select	1
				from	pls_conta_coparticipacao x
				where	x.nr_seq_conta		= d.nr_sequencia
				and	x.nr_seq_conta_mat	= e.nr_seq_conta_mat);

C08 CURSOR FOR
	SELECT	nr_titulo,
		ie_tipo_titulo
	from	titulo_receber
	where	nr_seq_mensalidade = nr_seq_mensalidade_p
	order by 1;

C09 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_conv_inf_fin_pag a
	where (coalesce(a.cd_tipo_portador_atual::text, '') = '' or a.cd_tipo_portador_atual = cd_tipo_portador_w)
	and (coalesce(a.cd_portador_atual::text, '') = '' or a.cd_portador_atual = cd_portador_w)
	and (coalesce(a.nr_seq_conta_banco_atual::text, '') = '' or a.nr_seq_conta_banco_atual = nr_seq_conta_banco_w)
	and (coalesce(a.nr_seq_carteira_cobr_atual::text, '') = '' or a.nr_seq_carteira_cobr_atual = nr_seq_carteira_cobr_w)
	and (coalesce(a.ie_lote_primeira_mens,'A') = 'A' or a.ie_lote_primeira_mens = ie_primeira_mensalidade_w)
	and	((a.ie_tipo_estipulante = 'A') or (a.ie_tipo_estipulante = 'PF' and (cd_pf_estipulante_w IS NOT NULL AND cd_pf_estipulante_w::text <> '')) or (a.ie_tipo_estipulante = 'PJ' and (cd_cgc_estipulante_w IS NOT NULL AND cd_cgc_estipulante_w::text <> '')))
	order by	coalesce(nr_seq_carteira_cobr_atual,0),
			coalesce(nr_seq_conta_banco_atual,0),
			coalesce(cd_portador_atual,0),
			coalesce(cd_tipo_portador_atual,0),
			coalesce(a.ie_lote_primeira_mens,' ');

C10 CURSOR FOR
	SELECT	vl_tributo,
		ie_retencao,
		cd_tributo,
		nr_sequencia nr_seq_mens_trib
	from	pls_mensalidade_trib
	where	nr_seq_mensalidade = nr_seq_mensalidade_p;

BEGIN
ie_tipo_titulo_w := Obter_Valor_Param_Usuario(801,77, Obter_perfil_Ativo, nm_usuario_p, 0);
dt_emissao_w	:= dt_emissao_p; --Se o cliente quiser SYSDATE, configurar na OPS - Gestao de Operadoras / Parametros OPS / Mensalidade, 'Data padrao para emissao da nota fiscal e titulo'.
if (coalesce(ie_tipo_titulo_w::text, '') = '') then
	ie_tipo_titulo_w	:= '1';
end if;

select	a.nr_seq_pagador,
	b.dt_mesano_referencia,
	a.nr_seq_pagador_fin,
	(select	count(1)
	from	titulo_receber x
	where	a.nr_sequencia = x.nr_seq_mensalidade)
into STRICT	nr_seq_pagador_w,
	dt_mesano_referencia_w,
	nr_seq_pagador_fin_w,
	qt_titulo_mens_w
from	pls_mensalidade		a,
	pls_lote_mensalidade	b
where	a.nr_seq_lote	= b.nr_sequencia
and	a.nr_sequencia	= nr_seq_mensalidade_p;

if (qt_titulo_mens_w = 0) then
	begin
	select	a.ie_forma_pagamento,
		b.vl_mensalidade,
		cd_cgc,
		cd_pessoa_fisica,
		d.cd_condicao_pagamento,
		coalesce(a.ie_acao_nao_util,'M'),
		d.nr_seq_forma_cobranca,
		c.nr_seq_contrato,
		coalesce(a.ie_tipo_acrescimo,'P'),
		substr(b.nr_serie_mensalidade,1,5),
		d.cd_tipo_portador,
		d.cd_portador,
		d.nr_seq_conta_banco,
		d.nr_seq_carteira_cobr,
		coalesce(b.cd_banco,d.cd_banco),
		trunc(dt_vencimento,'dd'),
		coalesce(d.dt_dia_vencimento,0),
		coalesce(d.ie_linha_digitavel, 'S'),
		(	select	coalesce(x.ie_primeira_mensalidade, 'N')
			from	pls_lote_mensalidade x
			where	x.nr_sequencia = b.nr_seq_lote)
	into STRICT	ie_forma_pagamento_w,
		vl_mensalidade_w,
		cd_cgc_w,
		cd_pessoa_fisica_w,
		cd_condicao_pagamento_w,
		ie_acao_venc_nao_util_w,
		nr_seq_forma_cobranca_w,
		nr_seq_contrato_ww,
		ie_tipo_acrescimo_w,
		cd_serie_w,
		cd_tipo_portador_w,
		cd_portador_w,
		nr_seq_conta_banco_w,
		nr_seq_carteira_cobr_w,
		cd_banco_w,
		dt_vencimento_w,
		dt_dia_vencimento_w,
		ie_linha_digitavel_w,
		ie_primeira_mensalidade_w
	from	pls_mensalidade			b,
		pls_contrato_pagador		c,
		pls_contrato_pagador_fin	d,
		condicao_pagamento		a
	where	b.nr_seq_pagador	= c.nr_sequencia
	and	d.nr_seq_pagador	= c.nr_sequencia
	and	a.cd_condicao_pagamento	= d.cd_condicao_pagamento
	and	b.nr_sequencia		= nr_seq_mensalidade_p
	and	d.nr_sequencia		= nr_seq_pagador_fin_w;
	exception
	when others then
		select	wheb_mensagem_pck.get_texto(304548) || b.nr_sequencia ||' - '|| obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc) || wheb_mensagem_pck.get_texto(304549)||c.nr_contrato||'.'
		into STRICT	ds_erro_w
		from	pls_mensalidade		a,
			pls_contrato_pagador	b,
			pls_contrato		c
		where	a.nr_seq_pagador	= b.nr_sequencia
		and	b.nr_seq_contrato	= c.nr_sequencia
		and	a.nr_sequencia		= nr_seq_mensalidade_p;
		
		CALL wheb_mensagem_pck.exibir_mensagem_abort(176707,'DS_ERRO=' || ds_erro_w);
	end;

	open C10;
	loop
	fetch C10 into	
		vl_tributo_w,
		ie_retencao_w,
		cd_tributo_w,
		nr_seq_mens_trib_w;
	EXIT WHEN NOT FOUND; /* apply on C10 */
		begin
		if (ie_retencao_w = 'S') then
			vl_mensalidade_w := vl_mensalidade_w + vl_tributo_w;
		elsif (ie_retencao_w = 'D') then
			vl_mensalidade_w := vl_mensalidade_w - vl_tributo_w;
		end if;
		end;
	end loop;
	close C10;

	select	max(c.cd_pf_estipulante),
		max(c.cd_cgc_estipulante)
	into STRICT	cd_pf_estipulante_w,
		cd_cgc_estipulante_w
	from	pls_mensalidade		a,
		pls_contrato_pagador	b,
		pls_contrato		c
	where	a.nr_seq_pagador	= b.nr_sequencia
	and	c.nr_sequencia		= b.nr_seq_contrato
	and	a.nr_sequencia		= nr_seq_mensalidade_p;

	begin
	select	coalesce(max(a.tx_desconto),0) tx_desconto
	into STRICT	tx_desconto_w
	from	pls_regra_desc_tit_mens a
	where	((a.nr_seq_pagador	= nr_seq_pagador_w) or (coalesce(a.nr_seq_pagador::text, '') = ''))
	and	((a.nr_seq_forma_cobranca = nr_seq_forma_cobranca_w) or (coalesce(a.nr_seq_forma_cobranca::text, '') = ''))
	and	((coalesce(a.ie_tipo_estipulante,'A') = 'A') or
		 ((coalesce(a.ie_tipo_estipulante,'A') = 'PF') and (cd_pf_estipulante_w IS NOT NULL AND cd_pf_estipulante_w::text <> '')) or 
		 ((coalesce(a.ie_tipo_estipulante,'A') = 'PJ') and (cd_cgc_estipulante_w IS NOT NULL AND cd_cgc_estipulante_w::text <> '')));
	exception
		when others then
		tx_desconto_w		:= 0;
	end;

	begin
	select	max(nr_parcela)
	into STRICT	nr_ult_parcela_w
	from	parcela
	where	cd_condicao_pagamento = cd_condicao_pagamento_w;
	exception
		when others then
		nr_ult_parcela_w	:= 1;
	end;

	select	max(cd_tipo_taxa_juro),
		max(pr_juro_padrao),
		max(cd_tipo_taxa_multa),
		max(pr_multa_padrao),
		max(vl_multa)
	into STRICT	cd_tipo_taxa_juros_w,
		tx_juros_w,
		cd_tipo_taxa_multa_w,
		tx_multa_w,
		vl_multa_fixo_w
	from	pls_contrato_juros_multa
	where	nr_seq_contrato	= nr_seq_contrato_ww;

	begin
	select	cd_moeda_padrao,
		nr_seq_trans_fin_baixa
	into STRICT	cd_moeda_padrao_w,
		nr_seq_trans_fin_baixa_w
	from	parametro_contas_receber
	where	cd_estabelecimento = cd_estabelecimento_p;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(176708);
	end;

	if (cd_cgc_w <> '') then
		cd_pessoa_fisica_w := '';
	end if;

	select	coalesce(cd_estab_financeiro, cd_estabelecimento)
	into STRICT	cd_estab_financeiro_w
	from	estabelecimento
	where	cd_estabelecimento	= cd_estabelecimento_p;

	begin	

	select	coalesce(cd_tipo_taxa_juros_w,cd_tipo_taxa_juro),
		coalesce(tx_juros_w,pr_juro_padrao),
		coalesce(cd_tipo_taxa_multa_w,cd_tipo_taxa_multa),
		coalesce(tx_multa_w,pr_multa_padrao),
		coalesce(ie_origem_titulo,3),
		coalesce(nr_seq_conta_banco_w,nr_seq_conta_banco),
		coalesce(cd_tipo_portador_w,cd_tipo_portador),
		coalesce(cd_portador_w,cd_portador),
		nr_seq_trans_fin_baixa_mens,
		nr_seq_trans_fin_con_mens,
		coalesce(ie_bloqueto_deb_auto,'N'),
		nr_seq_classe_tit_mens,
		coalesce(ie_gerar_tributo_nf_mens, 'N'),
		coalesce(qt_dias_venc_mens, 0)
		/*nvl(cd_conta_financ_mensalidade,0)*/

	into STRICT	cd_tipo_taxa_juros_w,
		tx_juros_w,
		cd_tipo_taxa_multa_w,
		tx_multa_w,
		ie_origem_titulo_w,
		nr_seq_conta_banco_w,
		cd_tipo_portador_w,
		cd_portador_w,
		nr_seq_trans_fin_baixa_mens_w,
		nr_seq_trans_fin_con_mens_w,
		ie_bloqueto_deb_auto_w,
		nr_seq_classe_tit_mens_w,
		ie_gerar_tributo_nf_mens_w,
		qt_dias_venc_mens_w
		/*cd_conta_financ_w*/

	from	pls_parametros
	where	cd_estabelecimento = cd_estabelecimento_p;
	exception
		when no_data_found then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(176709);
	end;

	select	coalesce(max(a.nr_seq_reajuste),0)
	into STRICT	nr_seq_reajuste_w
	from	pls_mensalidade_seg_item a,
		pls_mensalidade_segurado b
	where	a.nr_seq_mensalidade_seg = b.nr_sequencia
	and	b.nr_seq_mensalidade	= nr_seq_mensalidade_p;

	if (nr_seq_reajuste_w <> 0) then
		select	pls_obter_dados_lote_reajuste(nr_seq_reajuste_w,'P'),
			pls_obter_dados_lote_reajuste(nr_seq_reajuste_w,'IR'),
			pls_obter_dados_lote_reajuste(nr_seq_reajuste_w,'DI'),
			pls_obter_dados_lote_reajuste(nr_seq_reajuste_w,'DF'),
			pls_obter_dados_lote_reajuste(nr_seq_reajuste_w,'OA'),
			pls_obter_dados_lote_reajuste(nr_seq_reajuste_w,'PA')
		into STRICT	tx_reajuste_w,
			ie_indice_reajuste_w,
			dt_periodo_inicial_w,
			dt_periodo_final_w,
			ds_oficio_ans_w,
			nr_protocolo_ans_w
		;

		ds_observacao_w := wheb_mensagem_pck.get_texto(304550) || tx_reajuste_w || wheb_mensagem_pck.get_texto(304551) ||
				pls_obter_desc_indice_reaj(ie_indice_reajuste_w);
		if (ie_indice_reajuste_w = '1') then
			ds_observacao_w := ds_observacao_w || wheb_mensagem_pck.get_texto(304586) || ds_oficio_ans_w ||
					wheb_mensagem_pck.get_texto(304587) || nr_protocolo_ans_w || wheb_mensagem_pck.get_texto(304589) ||
					obter_data_extenso(dt_periodo_inicial_w,1) || ' a ' || obter_data_extenso(dt_periodo_final_w,1) || '.';
		end if;
	end if;

	if (nr_seq_forma_cobranca_w = 1) then
		ie_tipo_titulo_w := '1';
	elsif (nr_seq_forma_cobranca_w = 2) then
		ie_tipo_titulo_w := '10';
	elsif (nr_seq_forma_cobranca_w = 3) then
		ie_tipo_titulo_w := '11';
	elsif (nr_seq_forma_cobranca_w = 4) then
		ie_tipo_titulo_w := '9';
	end if;

	if (ie_tipo_acrescimo_w	= 'B') then
		vl_base_juros_w	:= obter_base_acresc_cond_pagto(cd_condicao_pagamento_w,vl_mensalidade_w);
	end if;

	begin
	select	count(1),
		ds_servico_dest
	into STRICT	nr_seq_regra_internacao_w,
		ds_servico_dest_w
	from	pls_conv_serv_extrat_mens
	where	coalesce(ie_atend_internacao,'N') = 'S'
	group by
		ds_servico_dest;
	exception
	when others then
		nr_seq_regra_internacao_w := 0;
		ds_servico_dest_w	:= null;
	end;

	if (ie_forma_pagamento_w <> 1) then --Se nao for a vista
		if (coalesce(vl_mensalidade_w,0) = 0) then
			ie_situacao_w	:= '2';
		else
			ie_situacao_w	:= '1';
		end if;
		
		if (dt_vencimento_w < trunc(dt_emissao_w, 'dd')) or (dt_dia_vencimento_w = 0) then
			dt_vencimento_w	:= dt_emissao_w;
		end if;
		
		dt_vencimento_w	:= pls_obter_proximo_dia_util(dt_vencimento_w, ie_acao_venc_nao_util_w, cd_estabelecimento_p);
		
		select	count(1)
		into STRICT	qt_vencimentos_w
		from	parcela
		where	cd_condicao_pagamento	= cd_condicao_pagamento_w;
		
		if (qt_vencimentos_w = 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(186263,'DS_CONDICAO=' || substr(obter_desc_cond_pagto(cd_condicao_pagamento_w), 1, 255));
		end if;
		
		open c03;
		loop
		fetch c03 into
			nr_parcela_w,
			qt_dias_parcela_w,
			tx_fracao_parcela_w,
			tx_acrescimo_w,
			ie_dia_semana_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin
			dt_parcela_w	:= null;
			vl_parcela_w	:= null;
			
			if (ie_forma_pagamento_w <> 10) then
				dt_parcela_w := define_data_parcela(	dt_vencimento_w, qt_dias_parcela_w, cd_estabelecimento_p, dt_parcela_w, ie_acao_venc_nao_util_w);
				
				vl_parcela_w	:= ((vl_mensalidade_w * tx_fracao_parcela_w) / 100);
				vl_total_w	:= vl_total_w + vl_parcela_w;
				
				if (nr_parcela_w = nr_ult_parcela_w) and (vl_total_w <> vl_mensalidade_w) then
					vl_parcela_w	:= vl_parcela_w + (vl_mensalidade_w - vl_total_w);
				end if;
				
				if (ie_tipo_acrescimo_w = 'P') then
					vl_parcela_w	:= vl_parcela_w + ((vl_parcela_w * tx_acrescimo_w) / 100);
				elsif (ie_tipo_acrescimo_w = 'B') then
					vl_parcela_w	:= vl_parcela_w + ((vl_base_juros_w * tx_acrescimo_w) / 100);
				end if;
				
				/* Dia fixo mes "baseado no campo dias da parcela"*/

				if (ie_forma_pagamento_w = 7) THEN
					if ((substr(to_char(dt_vencimento_w, 'dd/mm/yyyy'),1,2))::numeric  < qt_dias_parcela_w) then
						dt_parcela_w := to_char(qt_dias_parcela_w) ||'/'||to_char(dt_vencimento_w,'mm/yyyy');
					else
						dt_parcela_w := to_char(qt_dias_parcela_w) ||'/'||to_char(add_months(dt_vencimento_w, 1),'mm/yyyy');
					end if;
					
					if (coalesce(ie_dia_semana_w,'0') <> '0') then
						dt_parcela_w	:= obter_vencimento_dia_semana(dt_parcela_w,ie_dia_semana_w,cd_estabelecimento_p);
					end if;
				end if;
				
				/* (Ultimo dia do mes) */

				if (ie_forma_pagamento_w = 11) then
					dt_parcela_w := last_day(add_months(dt_vencimento_w,nr_parcela_w-1));
				end if;
				
				/* Ultimo dia da quinzena do proximo mes*/

				if (ie_forma_pagamento_w = 12) then
					dt_parcela_w	:= dt_vencimento_w;
					if ((to_char(dt_parcela_w,'dd'))::numeric  <= 15) then
						dt_parcela_w	:= to_date('15/' || to_char(add_months(dt_parcela_w,1),'mm/yyyy'),'dd/mm/yyyy');
					else
					dt_parcela_w	:= last_day(add_months(dt_parcela_w,1));
					end if;
				end if;
			end if;
			
			if (qt_dias_venc_mens_w > 0) then
				if	(trunc(dt_vencimento_w,'dd') <= (trunc(clock_timestamp(),'dd') + qt_dias_venc_mens_w)) then
					dt_vencimento_w	:= clock_timestamp() + qt_dias_venc_mens_w;
					
					dt_vencimento_w	:= pls_obter_proximo_dia_util(dt_vencimento_w, ie_acao_venc_nao_util_w, cd_estabelecimento_p);
				end if;
			end if;
			
			if (coalesce(coalesce(vl_parcela_w,vl_mensalidade_w),0) < 0) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort( 214473, 'NM_PAGADOR=' ||pls_obter_dados_pagador(nr_seq_pagador_w,'N') || ';NR_SEQ_MENSALIDADE='|| nr_seq_mensalidade_p );
			end if;
			
			select	nextval('titulo_seq')
			into STRICT	nr_titulo_w
			;
			
			open C09;
			loop
			fetch C09 into
				nr_seq_regra_conv_w;
			EXIT WHEN NOT FOUND; /* apply on C09 */
			end loop;
			close C09;
			
			if (coalesce(nr_seq_regra_conv_w,0) > 0) then
				select	cd_tipo_portador,
					cd_portador,
					nr_seq_conta_banco,
					nr_seq_carteira_cobr
				into STRICT	cd_tipo_portador_w,
					cd_portador_w,
					nr_seq_conta_banco_w,
					nr_seq_carteira_cobr_w
				from	pls_regra_conv_inf_fin_pag
				where	nr_sequencia = nr_seq_regra_conv_w;
			end if;
			
			insert into titulo_receber(nr_titulo, cd_estabelecimento, dt_atualizacao,
				nm_usuario, dt_emissao, dt_vencimento,
				dt_pagamento_previsto, vl_titulo, vl_saldo_titulo,
				cd_moeda, cd_portador, cd_tipo_portador,
				ie_situacao, ie_tipo_emissao_titulo, ie_origem_titulo,
				ie_tipo_titulo, ie_tipo_inclusao, cd_pessoa_fisica,
				cd_cgc, tx_juros, cd_tipo_taxa_juro,
				tx_multa, cd_tipo_taxa_multa, nr_seq_conta_banco,
				cd_estab_financeiro, ds_observacao_titulo, nr_seq_mensalidade,
				ie_pls,	nr_seq_trans_fin_contab, nr_seq_trans_fin_baixa,
				nm_usuario_orig, dt_inclusao, vl_saldo_juros,
				vl_saldo_multa, tx_desc_antecipacao, nr_seq_carteira_cobr,
				cd_serie, nr_seq_pagador, vl_multa_fixo,
				nr_seq_classe, cd_banco, dt_limite_desconto)
			values (nr_titulo_w, cd_estabelecimento_p, clock_timestamp(),
				nm_usuario_p, dt_emissao_w, coalesce(dt_parcela_w,dt_vencimento_w),
				coalesce(dt_parcela_w,dt_vencimento_w), coalesce(vl_parcela_w,vl_mensalidade_w), coalesce(vl_parcela_w,vl_mensalidade_w),
				cd_moeda_padrao_w, cd_portador_w, cd_tipo_portador_w,
				ie_situacao_w, 1, coalesce(ie_origem_titulo_w,1),
				ie_tipo_titulo_w, '2', cd_pessoa_fisica_w,
				cd_cgc_w, coalesce(tx_juros_w,0), coalesce(cd_tipo_taxa_juros_w,0),
				coalesce(tx_multa_w,0), coalesce(cd_tipo_taxa_multa_w,0), coalesce(nr_seq_conta_banco_w,0),
				cd_estab_financeiro_w, ds_observacao_w, nr_seq_mensalidade_p,
				'S', coalesce(nr_seq_trans_fin_con_mens_w, nr_seq_trans_fin_baixa_w), coalesce(nr_seq_trans_fin_baixa_mens_w, nr_seq_trans_fin_baixa_w),
				nm_usuario_p, clock_timestamp(), 0,
				0, tx_desconto_w, nr_seq_carteira_cobr_w,
				cd_serie_w, nr_seq_pagador_w, vl_multa_fixo_w,
				nr_seq_classe_tit_mens_w, cd_banco_w, coalesce(dt_parcela_w,dt_vencimento_w));
			
			nr_seq_classif_w	:= 0;
			vl_classif_total_w	:= 0;
			
			begin
			select	max(nr_sequencia)
			into STRICT	nr_seq_pagador_compl_w
			from	pls_contrato_pagador
			where	nr_seq_pagador_compl	= nr_seq_pagador_w;
			exception
			when others then
				nr_seq_pagador_compl_w	:= null;
			end;
			
			if (nr_seq_pagador_compl_w IS NOT NULL AND nr_seq_pagador_compl_w::text <> '') then
				select	max(cd_pessoa_fisica),
					max(cd_cgc)
				into STRICT	cd_pf_compl_w,
					cd_cgc_compl_w
				from	pls_contrato_pagador
				where	nr_sequencia	= nr_seq_pagador_compl_w;
				
				insert into titulo_receber_resp_pgto(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_titulo,
					dt_inicio_vigencia,
					cd_cgc,
					cd_pessoa_fisica)
				values (nextval('titulo_receber_resp_pgto_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_titulo_w,
					clock_timestamp(),
					cd_cgc_compl_w,
					cd_pf_compl_w);
			end if;
			
			CALL pls_titulo_receber_classi_mens(nr_seq_mensalidade_p, nr_titulo_w, vl_mensalidade_w, 'N', cd_estabelecimento_p, nm_usuario_p);
			
			if (coalesce(ie_gerar_tributo_nf_mens_w, 'N') = 'S') then
				for r_c10_w in c10 loop
					begin
					select	max(nr_seq_trans_prov_trib_rec)
					into STRICT	nr_seq_trans_prov_trib_rec_w
					from	tributo
					where	cd_tributo	= r_c10_w.cd_tributo;

					insert	into titulo_receber_trib(nr_sequencia,
						cd_tributo,
						tx_tributo,
						vl_tributo,
						vl_base_calculo,
						dt_atualizacao,
						nm_usuario,
						nr_titulo,
						nr_seq_mens_trib,
						vl_saldo,
						vl_trib_nao_retido,
						vl_base_nao_retido,
						vl_trib_adic,
						vl_base_adic,
						ie_origem_tributo,
						nr_seq_trans_financ,
						nr_lote_contabil)
					SELECT	nextval('titulo_receber_trib_seq'),
						cd_tributo,
						tx_tributo,
						vl_tributo,
						vl_base_calculo,
						clock_timestamp(),
						nm_usuario_p,
						nr_titulo_w,
						r_c10_w.nr_seq_mens_trib,
						vl_tributo,
						vl_trib_nao_retido,
						vl_base_nao_retido,
						vl_trib_adic,
						vl_base_adic,
						ie_origem_tributo,
						nr_seq_trans_prov_trib_rec_w,
						0
					from	pls_mensalidade_trib
					where	nr_sequencia	= r_c10_w.nr_seq_mens_trib;
					end;
				end loop;
			else
				CALL gerar_imposto_tit_rec(nr_titulo_w, nm_usuario_p); /* Gerar os tributos do titulo */
			end if;
			
			open	c04;
			loop
			fetch	c04 into
				ds_servico_w,
				vl_coparticipacao_w,
				nm_beneficiario_w,
				cd_usuario_plano_w,
				dt_mensagem_w;
			EXIT WHEN NOT FOUND; /* apply on c04 */
				CALL gerar_titulo_receber_mens_ops(	nr_titulo_w,
								'I',
								wheb_mensagem_pck.get_texto(304590),
								dt_mensagem_w,
								cd_usuario_plano_w,
								nm_beneficiario_w,
								null,
								null,
								null,
								ds_servico_w,
								vl_coparticipacao_w,
								null,
								'T',
								nm_usuario_p,
								'S');
			end	loop;
			close	c04;
			
			open	c05;
			loop
			fetch	c05 into
				nm_beneficiario_w,
				cd_usuario_plano_w,
				dt_mensagem_w,
				ds_servico_w,
				ds_prestador_w,
				nr_seq_segurado_w;
			EXIT WHEN NOT FOUND; /* apply on c05 */
				CALL gerar_titulo_receber_mens_ops(	nr_titulo_w,
								'SC',
								wheb_mensagem_pck.get_texto(304591),
								dt_mensagem_w,
								cd_usuario_plano_w,
								nm_beneficiario_w,
								null,
								null,
								null,
								ds_servico_w,
								null,
								ds_prestador_w,
								'T',
								nm_usuario_p,
								'N');
			end	loop;
			close	c05;
			
			for r_c06_w in C06(nr_seq_mensalidade_p) loop
				begin
				cd_procedimento_w	:= r_c06_w.cd_procedimento;
				ie_origem_proced_w	:= r_c06_w.ie_origem_proced;
				SELECT * FROM pls_obter_estrut_proc( cd_procedimento_w, ie_origem_proced_w, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_ww ) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_ww;
				
				for r_c07_w in C07(nr_seq_mensalidade_p) loop
					begin
					select	max(cd_pessoa_fisica)
					into STRICT	cd_pessoa_fisica_ww
					from	pls_segurado
					where	nr_sequencia = r_c07_w.nr_seq_segurado;

					select	count(1)
					into STRICT	qt_coop_w
					from	pls_cooperado
					where	cd_pessoa_fisica = cd_pessoa_fisica_ww
					and	ie_status = 'A'
					and	dt_inclusao <= r_c07_w.dt_referencia;
				
					if (qt_coop_w > 0) then
						ie_cooperado_w := 'C';
					else
						ie_cooperado_w := 'N';
					end if;

					if (r_c07_w.nr_seq_prestador_exec IS NOT NULL AND r_c07_w.nr_seq_prestador_exec::text <> '') then
						select	max(cd_pessoa_fisica),
							max(cd_cgc)
						into STRICT	cd_pf_prest_w,
							cd_cgc_prest_w
						from	pls_prestador
						where	nr_sequencia = r_c07_w.nr_seq_prestador_exec;

						if (cd_pf_prest_w IS NOT NULL AND cd_pf_prest_w::text <> '') then
							select	count(1)
							into STRICT	qt_coop_prest_w
							from	pls_cooperado
							where	cd_pessoa_fisica = cd_pf_prest_w
							and	ie_status = 'A'
							and	dt_inclusao <= r_c07_w.dt_referencia;
						elsif (cd_cgc_prest_w IS NOT NULL AND cd_cgc_prest_w::text <> '') then
							select	count(1)
							into STRICT	qt_coop_prest_w
							from	pls_cooperado
							where	cd_cgc = cd_cgc_prest_w
							and	ie_status = 'A'
							and	dt_inclusao <= r_c07_w.dt_referencia;
						end if;
						
						if (qt_coop_prest_w > 0) then
							ie_prest_exec_w := 'C';
						else
							ie_prest_exec_w := 'N';
						end if;
					else
						ie_prest_exec_w := 'A';
					end if;
					
					if	((r_c07_w.ie_benef_cooperado = 'A') or (ie_cooperado_w = r_c07_w.ie_benef_cooperado)) and
						((r_c07_w.ie_prestador_exec_cooperado = 'A') or (ie_prest_exec_w = r_c07_w.ie_prestador_exec_cooperado) or (ie_prest_exec_w = 'A')) then
						CALL gerar_titulo_receber_mens_ops(	nr_titulo_w,
									'SC',
									wheb_mensagem_pck.get_texto(304591),
									r_c07_w.dt_mensagem,
									r_c07_w.cd_usuario_plano,
									r_c07_w.nm_segurado,
									null,
									null,
									null,
									r_c07_w.ds_servico,
									null,
									r_c07_w.ds_prestador,
									'T',
									nm_usuario_p,
									'N');
					end if;
					end;
				end loop;
				end;
			end loop;

			/*Gerar mensagens para os itens pagos da mensalidade que nao possuem coparticipacao. */

			CALL pls_gerar_tit_rec_mens_pag(nr_titulo_w, nr_seq_mensalidade_p, nm_usuario_p);
			end;
		end loop;
		close c03;
	else
		dt_vencimento_w	:= dt_emissao_w;
		
		if (coalesce(vl_mensalidade_w, 0) = 0) then
			ie_situacao_w	:= '2';
		else
			ie_situacao_w	:= '1';
		end if;
		
		dt_vencimento_w	:= pls_obter_proximo_dia_util(dt_vencimento_w, ie_acao_venc_nao_util_w, cd_estabelecimento_p);
		
		open C09;
		loop
		fetch C09 into
			nr_seq_regra_conv_w;
		EXIT WHEN NOT FOUND; /* apply on C09 */
		end loop;
		close C09;
		
		if (coalesce(nr_seq_regra_conv_w,0) > 0) then
			select	cd_tipo_portador,
				cd_portador,
				nr_seq_conta_banco,
				nr_seq_carteira_cobr
			into STRICT	cd_tipo_portador_w,
				cd_portador_w,
				nr_seq_conta_banco_w,
				nr_seq_carteira_cobr_w
			from	pls_regra_conv_inf_fin_pag
			where	nr_sequencia = nr_seq_regra_conv_w;
		end if;
		
		select	nextval('titulo_seq')
		into STRICT	nr_titulo_w
		;
		
		if (qt_dias_venc_mens_w > 0) then
			if	(trunc(dt_vencimento_w,'dd') <= (trunc(clock_timestamp(),'dd') + qt_dias_venc_mens_w)) then
				dt_vencimento_w	:= clock_timestamp() + qt_dias_venc_mens_w;

				dt_vencimento_w	:= pls_obter_proximo_dia_util(dt_vencimento_w, ie_acao_venc_nao_util_w, cd_estabelecimento_p);
			end if;
		end if;
		
		insert into titulo_receber(nr_titulo, cd_estabelecimento, dt_atualizacao,
			nm_usuario, dt_emissao, dt_vencimento,
			dt_pagamento_previsto, vl_titulo, vl_saldo_titulo,
			cd_moeda, cd_portador, cd_tipo_portador,
			ie_situacao, ie_tipo_emissao_titulo, ie_origem_titulo,
			ie_tipo_titulo, ie_tipo_inclusao, cd_pessoa_fisica,
			cd_cgc, tx_juros, cd_tipo_taxa_juro,
			tx_multa, cd_tipo_taxa_multa, nr_seq_conta_banco,
			cd_estab_financeiro, ds_observacao_titulo, nr_seq_mensalidade,
			ie_pls, nr_seq_trans_fin_contab, nr_seq_trans_fin_baixa,
			nm_usuario_orig, dt_inclusao, vl_saldo_juros,
			vl_saldo_multa, tx_desc_antecipacao, cd_serie,
			nr_seq_pagador, vl_multa_fixo, nr_seq_classe,
			nr_seq_carteira_cobr, cd_banco, dt_limite_desconto)
		values (nr_titulo_w, cd_estabelecimento_p, clock_timestamp(),
			nm_usuario_p, dt_emissao_w, dt_vencimento_w,
			dt_vencimento_w, vl_mensalidade_w, vl_mensalidade_w,
			cd_moeda_padrao_w, cd_portador_w, cd_tipo_portador_w,
			ie_situacao_w, 1, coalesce(ie_origem_titulo_w,1),
			ie_tipo_titulo_w, '2', cd_pessoa_fisica_w,
			cd_cgc_w, coalesce(tx_juros_w,0), coalesce(cd_tipo_taxa_juros_w,0),
			coalesce(tx_multa_w,0), coalesce(cd_tipo_taxa_multa_w,0), coalesce(nr_seq_conta_banco_w,0),
			cd_estab_financeiro_w, ds_observacao_w, nr_seq_mensalidade_p,
			'S', coalesce(nr_seq_trans_fin_baixa_w, nr_seq_trans_fin_con_mens_w), coalesce(nr_seq_trans_fin_baixa_mens_w, nr_seq_trans_fin_baixa_w),
			nm_usuario_p, clock_timestamp(), 0,
			0, tx_desconto_w, cd_serie_w,
			nr_seq_pagador_w, vl_multa_fixo_w, nr_seq_classe_tit_mens_w,
			nr_seq_carteira_cobr_w, cd_banco_w, dt_vencimento_w);
		
		nr_seq_classif_w	:= 0;
		vl_classif_total_w	:= 0;
		
		begin
		select	max(nr_sequencia)
		into STRICT	nr_seq_pagador_compl_w
		from	pls_contrato_pagador
		where	nr_seq_pagador_compl	= nr_seq_pagador_w;
		exception
		when others then
			nr_seq_pagador_compl_w	:= null;
		end;
		
		if (nr_seq_pagador_compl_w IS NOT NULL AND nr_seq_pagador_compl_w::text <> '') then
			select	max(cd_pessoa_fisica),
				max(cd_cgc)
			into STRICT	cd_pf_compl_w,
				cd_cgc_compl_w
			from	pls_contrato_pagador
			where	nr_sequencia	= nr_seq_pagador_compl_w;
			
			insert into titulo_receber_resp_pgto(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_titulo,
				dt_inicio_vigencia,
				cd_cgc,
				cd_pessoa_fisica)
			values (nextval('titulo_receber_resp_pgto_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_titulo_w,
				clock_timestamp(),
				cd_cgc_compl_w,
				cd_pf_compl_w);
		end if;
		
		CALL pls_titulo_receber_classi_mens(nr_seq_mensalidade_p, nr_titulo_w, vl_mensalidade_w, 'N', cd_estabelecimento_p, nm_usuario_p);
		
		if (coalesce(ie_gerar_tributo_nf_mens_w, 'N') = 'S') then
			for r_c10_w in c10 loop
				begin
				select	max(nr_seq_trans_prov_trib_rec)
				into STRICT	nr_seq_trans_prov_trib_rec_w
				from	tributo
				where	cd_tributo	= r_c10_w.cd_tributo;

				insert	into titulo_receber_trib(nr_sequencia,
					cd_tributo,
					tx_tributo,
					vl_tributo,
					vl_base_calculo,
					dt_atualizacao,
					nm_usuario,
					nr_titulo,
					nr_seq_mens_trib,
					vl_saldo,
					vl_trib_nao_retido,
					vl_base_nao_retido,
					vl_trib_adic,
					vl_base_adic,
					ie_origem_tributo,
					nr_seq_trans_financ,
					nr_lote_contabil)
				SELECT	nextval('titulo_receber_trib_seq'),
					cd_tributo,
					tx_tributo,
					vl_tributo,
					vl_base_calculo,
					clock_timestamp(),
					nm_usuario_p,
					nr_titulo_w,
					r_c10_w.nr_seq_mens_trib,
					vl_tributo,
					vl_trib_nao_retido,
					vl_base_nao_retido,
					vl_trib_adic,
					vl_base_adic,
					ie_origem_tributo,
					nr_seq_trans_prov_trib_rec_w,
					0
				from	pls_mensalidade_trib
				where	nr_sequencia	= r_c10_w.nr_seq_mens_trib;
				end;
			end loop;
		else
			CALL gerar_imposto_tit_rec(nr_titulo_w, nm_usuario_p); /* Gerar os tributos do titulo */
		end if;

		open c04;
		loop
		fetch c04 into
			ds_servico_w,
			vl_coparticipacao_w,
			nm_beneficiario_w,
			cd_usuario_plano_w,
			dt_mensagem_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
			CALL gerar_titulo_receber_mens_ops(	nr_titulo_w,
							'I',
							wheb_mensagem_pck.get_texto(304590),
							dt_mensagem_w,
							cd_usuario_plano_w,
							nm_beneficiario_w,
							null,
							null,
							null,
							ds_servico_w,
							vl_coparticipacao_w,
							null,
							'T',
							nm_usuario_p,
							'S');
		end loop;
		close c04;
		
		open c05;
		loop
		fetch c05 into
			nm_beneficiario_w,
			cd_usuario_plano_w,
			dt_mensagem_w,
			ds_servico_w,
			ds_prestador_w,
			nr_seq_segurado_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */
			CALL gerar_titulo_receber_mens_ops(	nr_titulo_w,
							'SC',
							wheb_mensagem_pck.get_texto(304591),
							dt_mensagem_w,
							cd_usuario_plano_w,
							nm_beneficiario_w,
							null,
							null,
							null,
							ds_servico_w,
							null,
							ds_prestador_w,
							'T',
							nm_usuario_p,
							'N');
		end loop;
		close c05;
		
		for r_c06_w in C06(nr_seq_mensalidade_p) loop
			begin
			cd_procedimento_w	:= r_c06_w.cd_procedimento;
			ie_origem_proced_w	:= r_c06_w.ie_origem_proced;
			SELECT * FROM pls_obter_estrut_proc( cd_procedimento_w, ie_origem_proced_w, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_ww ) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_ww;
			
			for r_c07_w in C07(nr_seq_mensalidade_p) loop
				begin
				select	max(cd_pessoa_fisica)
				into STRICT	cd_pessoa_fisica_ww
				from	pls_segurado
				where	nr_sequencia = r_c07_w.nr_seq_segurado;

				select	count(1)
				into STRICT	qt_coop_w
				from	pls_cooperado
				where	cd_pessoa_fisica = cd_pessoa_fisica_ww
				and	ie_status = 'A'
				and	dt_inclusao <= r_c07_w.dt_referencia;
			
				if (qt_coop_w > 0) then
					ie_cooperado_w := 'C';
				else
					ie_cooperado_w := 'N';
				end if;

				if (r_c07_w.nr_seq_prestador_exec IS NOT NULL AND r_c07_w.nr_seq_prestador_exec::text <> '') then
					select	max(cd_pessoa_fisica),
						max(cd_cgc)
					into STRICT	cd_pf_prest_w,
						cd_cgc_prest_w
					from	pls_prestador
					where	nr_sequencia = r_c07_w.nr_seq_prestador_exec;

					if (cd_pf_prest_w IS NOT NULL AND cd_pf_prest_w::text <> '') then
						select	count(1)
						into STRICT	qt_coop_prest_w
						from	pls_cooperado
						where	cd_pessoa_fisica = cd_pf_prest_w
						and	ie_status = 'A'
						and	dt_inclusao <= r_c07_w.dt_referencia;
					elsif (cd_cgc_prest_w IS NOT NULL AND cd_cgc_prest_w::text <> '') then
						select	count(1)
						into STRICT	qt_coop_prest_w
						from	pls_cooperado
						where	cd_cgc = cd_cgc_prest_w
						and	ie_status = 'A'
						and	dt_inclusao <= r_c07_w.dt_referencia;
					end if;
					
					if (qt_coop_prest_w > 0) then
						ie_prest_exec_w := 'C';
					else
						ie_prest_exec_w := 'N';
					end if;
				else
					ie_prest_exec_w := 'A';
				end if;
				
				if	((r_c07_w.ie_benef_cooperado = 'A') or (ie_cooperado_w = r_c07_w.ie_benef_cooperado)) and
					((r_c07_w.ie_prestador_exec_cooperado = 'A') or (ie_prest_exec_w = r_c07_w.ie_prestador_exec_cooperado) or (ie_prest_exec_w = 'A')) then
					CALL gerar_titulo_receber_mens_ops(	nr_titulo_w,
									'SC',
									wheb_mensagem_pck.get_texto(304591),
									r_c07_w.dt_mensagem,
									r_c07_w.cd_usuario_plano,
									r_c07_w.nm_segurado,
									null,
									null,
									null,
									r_c07_w.ds_servico,
									null,
									r_c07_w.ds_prestador,
									'T',
									nm_usuario_p,
									'N');
				end if;
				end;
			end loop;
			end;
		end loop;
	end if;

	select	coalesce(max(ie_baixar_mens_adiant),'N')
	into STRICT	ie_baixar_mens_adiant_w
	from	pls_parametros_cr a
	where	a.cd_estabelecimento	= cd_estabelecimento_p;

	qt_titulos_gerados_w	:= 0;
	for r_c08_w in C08 loop
		begin
		qt_titulos_gerados_w	:= qt_titulos_gerados_w + 1;
		
		CALL Atualizar_Saldo_Tit_Rec(r_c08_w.nr_titulo, nm_usuario_p);
		
		select	max(vl_titulo)
		into STRICT	vl_titulo_w
		from	titulo_receber
		where	nr_titulo	= r_c08_w.nr_titulo;
		
		if (vl_titulo_w = 0) then
			update	titulo_receber
			set	dt_liquidacao	= dt_vencimento
			where	nr_titulo	= r_c08_w.nr_titulo;
		else
			CALL pls_baixar_mens_adiant(r_c08_w.nr_titulo,cd_pessoa_fisica_w,cd_cgc_w,nr_seq_contrato_ww,ie_baixar_mens_adiant_w,cd_estabelecimento_p,nr_seq_mensalidade_p,nm_usuario_p);
		end if;
		
		if	(ie_linha_digitavel_w = 'S' and
			((r_c08_w.ie_tipo_titulo = '1') or
			(r_c08_w.ie_tipo_titulo = '10' AND ie_bloqueto_deb_auto_w = 'S'))) then
			CALL gerar_bloqueto_tit_rec(r_c08_w.nr_titulo, 'OPSMS');
		end if;
		
		end;
	end loop;

	if (qt_titulos_gerados_w > 1) then
		update	pls_mensalidade
		set	ie_varios_titulos	= 'S'
		where	nr_sequencia		= nr_seq_mensalidade_p;
	end if;

	update	pls_contrato_pagador
	set	ie_primeira_mensalidade_gerada = 'S'
	where	nr_sequencia	= nr_seq_pagador_w
	and	coalesce(ie_primeira_mensalidade_gerada,'N') <> 'S';
end if;

--commit;

/* Nao pode dar commit nesta procedure */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_titulo_receber_mens ( nr_seq_mensalidade_p bigint, dt_emissao_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

