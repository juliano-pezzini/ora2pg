-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gravar_estoque_requisicao_lib ( nr_requisicao_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_saldo_estoque_w		item_requisicao_material.qt_saldo_estoque%type;
qt_saldo_estoque_dest_w		item_requisicao_material.qt_saldo_estoque_dest%type;
ie_consignado_w			varchar(1);
cd_material_w			bigint;
cd_estabelecimento_w		smallint;
cd_cgc_fornecedor_w		varchar(14);
cd_local_estoque_w		smallint;
cd_local_estoque_destino_w		smallint;
nr_sequencia_w			integer;
ds_erro_w			varchar(8000);
ds_erro_ww			varchar(300);

c01 CURSOR FOR
SELECT	nr_sequencia,
	cd_material,
	cd_cgc_fornecedor
from	item_Requisicao_material
where	nr_requisicao = nr_requisicao_p
and	(cd_estabelecimento_w IS NOT NULL AND cd_estabelecimento_w::text <> '');


BEGIN

select 	a.ie_consignado,
	cd_local_estoque,
	cd_local_estoque_destino
into STRICT	ie_consignado_w,
	cd_local_estoque_w,
	cd_local_estoque_destino_w
from 	operacao_estoque a,
	requisicao_material b
where 	b.nr_requisicao = nr_requisicao_p
and	a.cd_operacao_estoque = b.cd_operacao_estoque;

select	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	local_estoque
where	cd_local_estoque = cd_local_estoque_w;

open C01;
loop
fetch C01 into	
	nr_sequencia_w,
	cd_material_w,
	cd_cgc_fornecedor_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	CALL grava_log_tasy(202, 'cd_material_w'|| cd_material_w || 'nr_requisicao_p' || nr_requisicao_p
	|| 'cd_local_estoque_w ' || cd_local_estoque_w, nm_usuario_p);

    begin
        if (ie_consignado_w <> '0') then
            qt_saldo_estoque_w := obter_saldo_total_disp_estoque(
                                        cd_material_p			=> cd_material_w,
                                        cd_local_estoque_p		=> cd_local_estoque_w,
                                        cd_estabelecimento_p	=> cd_estabelecimento_w,
                                        cd_cgc_fornecedor_p		=> cd_cgc_fornecedor_w,
                                        ie_soma_saldo_consig_p	=> 'S');
        else
            qt_saldo_estoque_w := obter_saldo_total_disp_estoque(
                                        cd_material_p			=> cd_material_w,
                                        cd_local_estoque_p		=> cd_local_estoque_w,
                                        cd_estabelecimento_p	=> cd_estabelecimento_w,
                                        ie_soma_saldo_consig_p	=> 'N');
        end if;	

        if (coalesce(cd_local_estoque_destino_w,0) > 0) then
            begin
            if (ie_consignado_w <> '0') then
                qt_saldo_estoque_dest_w := obter_saldo_total_disp_estoque(
                                        cd_material_p			=> cd_material_w,
                                        cd_local_estoque_p		=> cd_local_estoque_destino_w,
                                        cd_estabelecimento_p	=> cd_estabelecimento_w,
                                        cd_cgc_fornecedor_p		=> cd_cgc_fornecedor_w,
                                        ie_soma_saldo_consig_p	=> 'S');
            else
                qt_saldo_estoque_dest_w := obter_saldo_total_disp_estoque(
                                        cd_material_p			=> cd_material_w,
                                        cd_local_estoque_p		=> cd_local_estoque_destino_w,
                                        cd_estabelecimento_p	=> cd_estabelecimento_w,
                                        ie_soma_saldo_consig_p	=> 'N');
            end if;
            end;
        end if;
    exception
    when no_data_found then
        ds_erro_ww := substr(SQLERRM(SQLSTATE),1,300);
        ds_erro_w := substr((ds_erro_w || cd_material_w || ', '),1,2000);
    end;

    if (coalesce(ds_erro_w::text, '') = '') then
        update	item_requisicao_material
        set	qt_saldo_estoque_dest = qt_saldo_estoque_dest_w,
            qt_saldo_estoque = qt_saldo_estoque_w
        where	nr_requisicao = nr_requisicao_p
        and	nr_sequencia = nr_sequencia_w;
    end if;
	end;
end loop;
close c01;

if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
    ds_erro_w := substr(ds_erro_w, 1, length(ds_erro_w) - 2);
    ds_erro_w := substr(Wheb_mensagem_pck.get_texto(1140628, 'CD_ESTABELECIMENTO_W=' || cd_estabelecimento_w || ';DS_ERRO_W=' || ds_erro_w || ';DS_ERRO_WW=' || ds_erro_ww),1,2000);
    CALL Wheb_mensagem_pck.exibir_mensagem_abort(ds_erro_w);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_estoque_requisicao_lib ( nr_requisicao_p bigint, nm_usuario_p text) FROM PUBLIC;

