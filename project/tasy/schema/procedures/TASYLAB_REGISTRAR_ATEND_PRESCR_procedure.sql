-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tasylab_registrar_atend_prescr ( nr_seq_lote_p bigint, cd_pessoa_fisica_p text, --cd_medico_resp_p				varchar2,
 nr_seq_externo_p bigint, dt_entrada_p timestamp, nr_prescricao_origem_p bigint, dt_nascimento_resp_p timestamp, nm_pessoa_fisica_resp_p text, ie_sexo_resp_p text, nr_ddd_celular_resp_p text, nr_telefone_celular_resp_p text, nr_cpf_resp_p text, nr_identidade_resp_p text, ie_tipo_pessoa_resp_p bigint, cd_cep_resid_p text, ds_endereco_resid_p text, nr_endereco_resid_p bigint, ds_bairro_resid_p text, ds_complemento_resid_p text, ds_municipio_resid_p text, sg_estado_resid_p text, ds_email_resid_p text, nm_contato_mae_p text, dt_entrega_p timestamp, --cd_medico_resp_p	varchar2,
 qt_peso_p bigint, qt_altura_cm_p bigint, dt_prescricao_p timestamp, dt_mestruacao_p timestamp, ds_observacao_p text, cd_erro_p INOUT bigint, ds_erro_p INOUT text, nr_atendimento_p INOUT bigint, nr_prescricao_p INOUT bigint, ie_liberacao_p INOUT text) AS $body$
DECLARE


/*
Erros
Dom√≠nio - 6846
*/
nr_sequencia_tasylab_w	lab_tasylab_cliente.nr_sequencia%type;

nr_atendimento_w		atendimento_paciente.nr_atendimento%type;

cd_pessoa_responsavel_w	pessoa_fisica.cd_pessoa_fisica%type;

nr_prescricao_w			prescr_medica.nr_prescricao%type;
dt_liberacao_w			prescr_medica.dt_liberacao%type;


BEGIN

cd_erro_p	:= 0;

CALL tasy_atualizar_dados_sessao(nr_seq_externo_p);

select	max(a.nr_sequencia)
into STRICT	nr_sequencia_tasylab_w
from	lab_tasylab_cliente a
where	nr_seq_externo = nr_seq_externo_p;

if (coalesce(nr_prescricao_origem_p::text, '') = '') then
	cd_erro_p	:= 6;
elsif (coalesce(nr_sequencia_tasylab_w::text, '') = '') then
	cd_erro_p	:= 7;
end if;

if (cd_erro_p = 0) then

	select	max(a.nr_prescricao)
	into STRICT	nr_prescricao_w
	from	lab_tasylab_cli_prescr a
	where	1 = 1
	--and	nvl(a.nr_seq_lote,nvl(nr_seq_lote_p,0)) = nvl(nr_seq_lote_p,0)
	and	a.nr_prescricao_origem = nr_prescricao_origem_p
	and	a.nr_seq_tasylab_cli = nr_sequencia_tasylab_w;

	if (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then

		select	max(a.nr_atendimento),
				max(a.dt_liberacao)
		into STRICT	nr_atendimento_w,
				dt_liberacao_w
		from	prescr_medica a
		where	a.nr_prescricao = nr_prescricao_w;

		nr_atendimento_p	:= nr_atendimento_w;
		nr_prescricao_p		:= nr_prescricao_w;

		ie_liberacao_p	:= 'N';
		if (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then
			ie_liberacao_p		:= 'S';
		end if;

	end if;

	if (coalesce(nr_prescricao_p::text, '') = '') then

		if (nm_pessoa_fisica_resp_p IS NOT NULL AND nm_pessoa_fisica_resp_p::text <> '') then
			SELECT * FROM tasylab_cadastrar_paciente(	nm_pessoa_fisica_resp_p, dt_nascimento_resp_p, ie_sexo_resp_p, nr_ddd_celular_resp_p, nr_telefone_celular_resp_p, nr_cpf_resp_p, nr_identidade_resp_p, ie_tipo_pessoa_resp_p, nm_contato_mae_p, nr_seq_externo_p, cd_erro_p, ds_erro_p, cd_pessoa_responsavel_w) INTO STRICT cd_erro_p, ds_erro_p, cd_pessoa_responsavel_w;

			if (cd_erro_p = 0) then
				SELECT * FROM tasylab_cadastrar_compl_pf(	cd_pessoa_responsavel_w, cd_cep_resid_p, ds_endereco_resid_p, nr_endereco_resid_p, ds_bairro_resid_p, ds_complemento_resid_p, ds_municipio_resid_p, sg_estado_resid_p, ds_email_resid_p, nm_contato_mae_p, nr_seq_externo_p, cd_erro_p, ds_erro_p) INTO STRICT cd_erro_p, ds_erro_p;
			end if;
		end if;

		if (cd_erro_p = 0) and (coalesce(nr_atendimento_w::text, '') = '') then
			SELECT * FROM tasylab_registrar_atendimento(	cd_pessoa_fisica_p, nr_sequencia_tasylab_w, dt_entrada_p, cd_pessoa_responsavel_w, cd_erro_p, ds_erro_p, nr_atendimento_w) INTO STRICT cd_erro_p, ds_erro_p, nr_atendimento_w;
			nr_atendimento_p	:= nr_atendimento_w;
		end if;

		if (cd_erro_p = 0) then

			SELECT * FROM tasylab_registrar_prescricao(	nr_sequencia_tasylab_w, nr_atendimento_w, nr_seq_lote_p, nr_prescricao_origem_p, dt_entrega_p, cd_pessoa_fisica_p, nr_seq_externo_p, qt_peso_p, qt_altura_cm_p, dt_prescricao_p, dt_mestruacao_p, ds_observacao_p, cd_erro_p, ds_erro_p, nr_prescricao_p
											) INTO STRICT cd_erro_p, ds_erro_p, nr_prescricao_p
											;

			--OS727249 - Ivan
			--if	(cd_erro_p = 0) then
			--	commit;
			--end if;
		end if;

	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tasylab_registrar_atend_prescr ( nr_seq_lote_p bigint, cd_pessoa_fisica_p text,  nr_seq_externo_p bigint, dt_entrada_p timestamp, nr_prescricao_origem_p bigint, dt_nascimento_resp_p timestamp, nm_pessoa_fisica_resp_p text, ie_sexo_resp_p text, nr_ddd_celular_resp_p text, nr_telefone_celular_resp_p text, nr_cpf_resp_p text, nr_identidade_resp_p text, ie_tipo_pessoa_resp_p bigint, cd_cep_resid_p text, ds_endereco_resid_p text, nr_endereco_resid_p bigint, ds_bairro_resid_p text, ds_complemento_resid_p text, ds_municipio_resid_p text, sg_estado_resid_p text, ds_email_resid_p text, nm_contato_mae_p text, dt_entrega_p timestamp,  qt_peso_p bigint, qt_altura_cm_p bigint, dt_prescricao_p timestamp, dt_mestruacao_p timestamp, ds_observacao_p text, cd_erro_p INOUT bigint, ds_erro_p INOUT text, nr_atendimento_p INOUT bigint, nr_prescricao_p INOUT bigint, ie_liberacao_p INOUT text) FROM PUBLIC;

