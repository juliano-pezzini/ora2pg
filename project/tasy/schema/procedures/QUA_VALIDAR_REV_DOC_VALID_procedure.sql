-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE qua_validar_rev_doc_valid ( nr_seq_revisao_p bigint, cd_pessoa_validacao_p text, dt_validacao_p timestamp, nm_usuario_p text) AS $body$
DECLARE


qt_existe_w		integer;
qt_existe_usu_valid_w		integer;
nr_seq_valid_w		bigint;
cd_pessoa_doc_w		varchar(10);
cd_cargo_w		bigint;
nr_seq_ordem_w		bigint;
nm_user_w		varchar(50);
sequence_document_w bigint;


BEGIN

select	max(nr_seq_ordem_serv)
into STRICT	nr_seq_ordem_w
from	qua_doc_revisao
where	nr_sequencia = nr_seq_revisao_p;

select	count(*)
into STRICT	qt_existe_w
from	qua_doc_revisao_validacao
where	nr_seq_doc_revisao		= nr_seq_revisao_p
and	coalesce(dt_validacao::text, '') = '';

select	max(a.cd_cargo)
into STRICT	cd_cargo_w
from	pessoa_fisica a,
	usuario b
where	a.cd_pessoa_fisica 	= b.cd_pessoa_fisica
and	b.nm_usuario 	= nm_usuario_p;

select	username
into STRICT	nm_user_w
from	user_users;

/*Se no existir mais de um validador faz o processo normal*/

if (qt_existe_w = 0) then
	begin
	update	qua_doc_revisao
	set	dt_atualizacao		= clock_timestamp(), 
		nm_usuario		= nm_usuario_p, 
		dt_validacao		= dt_validacao_p
	where	nr_sequencia 		= nr_seq_revisao_p;
	end;
else
	begin
	/*Se existir mais de um validador, busca a sequencia de validao da pessoa que est validando*/

	select	count(*),
		max(nr_sequencia)
	into STRICT	qt_existe_w,
		nr_seq_valid_w
	from	qua_doc_revisao_validacao
	where	nr_seq_doc_revisao	= nr_seq_revisao_p
	and	((cd_pessoa_validacao	= cd_pessoa_validacao_p) or (cd_cargo		= cd_cargo_w))
	and	coalesce(dt_validacao::text, '') = '';
	
	if (qt_existe_w > 0) and (coalesce(nr_seq_valid_w,0) > 0) then
		update	qua_doc_revisao_validacao
		set	dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p, 
			dt_validacao	= dt_validacao_p
		where	nr_sequencia 	= nr_seq_valid_w;
		
		/*V se existe alguma validao pendente ainda, seno, valida o documento*/

		select	count(*)
		into STRICT	qt_existe_w
		from	qua_doc_revisao_validacao
		where	nr_seq_doc_revisao	= nr_seq_revisao_p
		and	coalesce(dt_validacao::text, '') = '';
		
		select	count(*) 
		into STRICT 	qt_existe_usu_valid_w
		from 	qua_doc_revisao 
		where 	nr_sequencia = nr_seq_revisao_p 
		and 	coalesce(dt_validacao::text, '') = '' 
		and 	cd_pessoa_validacao = cd_pessoa_validacao_p;

		if (qt_existe_w = 0) and ((qt_existe_usu_valid_w > 0) or (nm_user_w != 'CORP'))then
			begin
        update	qua_doc_revisao
        set	dt_atualizacao		= clock_timestamp(), 
          nm_usuario		= nm_usuario_p, 
          dt_validacao		= dt_validacao_p
        where	nr_sequencia 		= nr_seq_revisao_p;

        select	coalesce(max(a.nr_seq_doc),0)
        into STRICT	  sequence_document_w
        from	  qua_doc_revisao a
        where	  a.nr_sequencia = nr_seq_revisao_p;

        CALL qua_gerar_envio_comunicacao(sequence_document_w,
                                    '0',
                                    nm_usuario_p,
                                    '16',
                                    wheb_usuario_pck.get_cd_estabelecimento,
                                    null,
                                    null,
                                    'N');
			
			end;
		end if;
	end if;	
	end;	
end if;

select	count(*)
into STRICT	qt_existe_w
from	qua_doc_revisao_validacao
where	nr_seq_doc_revisao	= nr_seq_revisao_p
and	coalesce(dt_validacao::text, '') = '';
		
if (qt_existe_w = 0 and (nr_seq_ordem_w IS NOT NULL AND nr_seq_ordem_w::text <> '')) then
	CALL Qua_Inserir_Hist_Validacao(nm_usuario_p,  wheb_mensagem_pck.get_texto(669984), nr_seq_ordem_w);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE qua_validar_rev_doc_valid ( nr_seq_revisao_p bigint, cd_pessoa_validacao_p text, dt_validacao_p timestamp, nm_usuario_p text) FROM PUBLIC;

