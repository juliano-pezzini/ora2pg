-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tre_gerar_desistencia (nr_seq_candidato_p bigint, nr_seq_motivo_p bigint, nm_usuario_p text, ie_tipo_p text, dt_encerramento_p timestamp, cd_estabelecimento_p bigint, ds_observacao_p text) AS $body$
DECLARE



nr_seq_evento_w		bigint;
cd_pessoa_fisica_w	varchar(10);
dt_inicio_w		timestamp;
dt_fim_w		timestamp;
dt_fim_real_w		timestamp;
nr_seq_inscrito_w	bigint;
ds_motivo_desistencia_w	varchar(90);

BEGIN

	/* Tipos

	C - Candidato
	I - Inscrito

	*/
if (ie_tipo_p = 'C') then

	update	tre_candidato
	set	dt_desistencia			= dt_encerramento_p,
		nr_seq_motivo_desistencia 	= nr_seq_motivo_p,
		dt_atualizacao			= clock_timestamp(),
		ie_cancelamento			= 'S',
		nm_usuario			= nm_usuario_p,
		ds_observacao		= ds_observacao_p
	where	nr_sequencia			= nr_seq_candidato_p;

elsif (ie_tipo_p = 'I') then

	update	tre_inscrito
	set	dt_desistencia			= dt_encerramento_p,
		nr_seq_motivo_desistencia 	= nr_seq_motivo_p,
		dt_atualizacao			= clock_timestamp(),
		nm_usuario			= nm_usuario_p,
		ds_observacao		= ds_observacao_p
	where	nr_sequencia			= nr_seq_candidato_p;


	select	max(nr_seq_evento),
		max(cd_pessoa_fisica)
	into STRICT	nr_seq_evento_w,
		cd_pessoa_fisica_w
	from	tre_inscrito
	where	nr_sequencia = nr_seq_candidato_p;

	select	max(dt_inicio),
		max(dt_fim),
		max(dt_fim_real)
	into STRICT	dt_inicio_w,
		dt_fim_w,
		dt_fim_real_w
	from	tre_evento
	where	nr_sequencia = nr_seq_evento_w;

	select	max(ds_motivo_desistencia)
	into STRICT	ds_motivo_desistencia_w
	from	tre_motivo_desistencia
	where	nr_sequencia = nr_seq_motivo_p;

	if (dt_fim_w < dt_fim_real_w) and (dt_fim_real_w IS NOT NULL AND dt_fim_real_w::text <> '') then
		dt_fim_w := dt_fim_real_w;
	end if;

	if (dt_encerramento_p > dt_inicio_w) then
		dt_inicio_w := dt_encerramento_p;
	end if;

	while(dt_inicio_w <= dt_fim_w) loop
		begin

		select	coalesce(max(b.nr_sequencia),0)
		into STRICT	nr_seq_inscrito_w
		from	tre_inscrito b,
			tre_evento c
		where	b.nr_seq_evento = c.nr_sequencia
		and	c.nr_sequencia = nr_seq_evento_w
		and	b.cd_pessoa_fisica = cd_pessoa_fisica_w
		and	((tre_valida_se_dia_curso(c.nr_sequencia,fim_dia(dt_inicio_w)) = 'S') or ((tre_obter_dados_pac_dia(b.nr_sequencia,dt_inicio_w,'CA'))::numeric  > 0))
		and (substr(tre_obter_se_data_fim_valida(dt_inicio_w,c.nr_sequencia,c.dt_fim_real,c.dt_fim),1,1) = 'S')
		and	fim_dia(dt_inicio_w) >= c.dt_inicio
		and (obter_se_feriado(cd_estabelecimento_p, dt_inicio_w) = 0)
		and (substr(tre_obter_dados_pac_dia(b.nr_sequencia,dt_inicio_w,'SP'),1,2) = 'N')
		and	not exists (	SELECT	1
					from	tre_agenda v
					where	v.nr_sequencia = c.nr_seq_agenda
					and	(v.DT_CANCELAMENTO IS NOT NULL AND v.DT_CANCELAMENTO::text <> ''));

		if (nr_seq_inscrito_w > 0) then
			CALL tre_insere_falta_curso(nr_seq_inscrito_w,dt_inicio_w,'I',ds_motivo_desistencia_w,nm_usuario_p,cd_estabelecimento_p);
		end if;


		dt_inicio_w := dt_inicio_w + 1;
		end;
	end loop;



end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tre_gerar_desistencia (nr_seq_candidato_p bigint, nr_seq_motivo_p bigint, nm_usuario_p text, ie_tipo_p text, dt_encerramento_p timestamp, cd_estabelecimento_p bigint, ds_observacao_p text) FROM PUBLIC;

