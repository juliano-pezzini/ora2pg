-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE mprev_inserir_pessoa_filtrada ( nr_seq_pop_alvo_pessoa_p bigint, nr_seq_regra_cubo_p bigint, nm_usuario_p text, nm_usuario_logado_p text, cd_estabelecimento_logado_p text, msg_programa_campanha_p INOUT text) AS $body$
DECLARE


					
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Inserir as pessoas da pesquisa de populacao alvo diretamente nos programas e campanhas selecionados
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta: 
[  ]  Objetos do dicionario [ X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_programa_w	    mprev_programa.nr_sequencia%type	:= null;
nr_seq_campanha_w	    mprev_campanha.nr_sequencia%type	:= null;
nr_seq_participante_w	mprev_participante.nr_sequencia%type := null;
nr_seq_populacao_alvo_w mprev_populacao_alvo.nr_sequencia%type;
cd_pessoa_fisica_w      mprev_pop_alvo_pessoa.cd_pessoa_fisica%type;
nm_usuario_w            mprev_pop_alvo_pessoa.nm_usuario%type;
ie_incluso_w		    varchar(1);
nm_incluso_w		    varchar(255);
ds_mensagem_retorno_w	varchar(255);
ie_tipo_mensagem_w	    varchar(1);
qt_programa_partic_w	smallint;
qt_campanha_partic_w	smallint;
qt_registro_w	        bigint	:= 0;
ie_momento_envio_w      mprev_regra_envio_mensagem.ie_momento_envio%type;
nr_seq_envio_mens_w     mprev_regra_cubo.nr_seq_envio_mens%type;
nm_regra_w              mprev_regra_cubo.nm_regra%type;


BEGIN

   /*RN2 - buscar o participante do registro da populacao-alvo*/

   select  cd_pessoa_fisica, nm_usuario, nr_seq_populacao_alvo
   into STRICT    cd_pessoa_fisica_w, nm_usuario_w, nr_seq_populacao_alvo_w
   from  mprev_pop_alvo_pessoa
   where   nr_sequencia = nr_seq_pop_alvo_pessoa_p;

   /*buscar programa/captacao direto da regra que esta vinculada a pesquisa*/

   select nr_seq_programa, nr_seq_campanha
   into STRICT   nr_seq_programa_w, nr_seq_campanha_w
   from   mprev_regra_cubo
   where  nr_sequencia = nr_seq_regra_cubo_p;

   if (nr_seq_programa_w IS NOT NULL AND nr_seq_programa_w::text <> '') or (nr_seq_campanha_w IS NOT NULL AND nr_seq_campanha_w::text <> '') then
            
             /* regra de negocio 3 - RN3 */

             /* Verifica se o programa esta vigente*/

             select	count(*)
             into STRICT	qt_programa_partic_w
             from	mprev_programa a
             where 	a.nr_sequencia = nr_seq_programa_w	
             and 	clock_timestamp() not between pkg_date_utils.start_of(a.dt_inicio_programa, 'DAY') and pkg_date_utils.end_of(coalesce(a.dt_exclusao,clock_timestamp()), 'DAY');

             /* Verifica se a campanha esta vigente */

             select	count(*)
             into STRICT	qt_campanha_partic_w
             from	mprev_campanha a
             where 	a.nr_sequencia = nr_seq_campanha_w	
             and 	clock_timestamp() not between pkg_date_utils.start_of(a.dt_inicio, 'DAY') and pkg_date_utils.end_of(coalesce(a.dt_termino,clock_timestamp()), 'DAY');

              /*finalizar o programa e inserir na tabela de logs*/

             if (qt_programa_partic_w > 0) then
                 msg_programa_campanha_p := obter_desc_expressao(946077);
                /*Aqui colocar o insert da tabela mprev_validacao_partic e sair da rotina*/

                
                insert into MPREV_VALIDACAO_PARTIC(nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, cd_pessoa_fisica, ds_mensagem, ie_tipo_mensagem, nr_seq_pop_alvo)
                values (nextval('mprev_validacao_partic_seq'), clock_timestamp(), nm_usuario_logado_p, clock_timestamp(), nm_usuario_logado_p, cd_pessoa_fisica_w, msg_programa_campanha_p, 'A', nr_seq_populacao_alvo_w);

             elsif (qt_campanha_partic_w > 0) then
                msg_programa_campanha_p := obter_desc_expressao(946075);

                insert into MPREV_VALIDACAO_PARTIC(nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, cd_pessoa_fisica, ds_mensagem, ie_tipo_mensagem, nr_seq_pop_alvo)
                values (nextval('mprev_validacao_partic_seq'), clock_timestamp(), nm_usuario_logado_p, clock_timestamp(), nm_usuario_logado_p, cd_pessoa_fisica_w, msg_programa_campanha_p, 'A', nr_seq_populacao_alvo_w);

             else    
                /* regra de negocio 5 - RN5 */

                /* valida a situacao do participante antes de incluir */

                select 	max(nr_sequencia)
                into STRICT	nr_seq_participante_w
                from 	mprev_participante
                where 	cd_pessoa_fisica = cd_pessoa_fisica_w;

                 /* Verifica se ja esta ativo no programa*/

                 select	count(*)
                 into STRICT	qt_programa_partic_w
                 from	mprev_programa_partic x
                 where 	x.nr_seq_programa = nr_seq_programa_w	
                 and 	clock_timestamp() between x.dt_inclusao and coalesce(x.dt_exclusao,clock_timestamp())
                 and   	x.nr_seq_participante = nr_seq_participante_w;
                            
                 /* Verifica se ja esta ativo na campanha*/

                 select	count(*)
                 into STRICT	qt_campanha_partic_w
                 from	mprev_campanha_partic x
                 where 	x.nr_seq_campanha = nr_seq_campanha_w	
                 and 	clock_timestamp() between x.dt_inclusao and coalesce(x.dt_exclusao,clock_timestamp())
                 and   	x.nr_seq_participante = nr_seq_participante_w;

                if (qt_programa_partic_w > 0) then
                    msg_programa_campanha_p := obter_desc_expressao(1062911);
                   insert into MPREV_VALIDACAO_PARTIC(nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, cd_pessoa_fisica, ds_mensagem, ie_tipo_mensagem, nr_seq_pop_alvo)
                   values (nextval('mprev_validacao_partic_seq'), clock_timestamp(), nm_usuario_logado_p, clock_timestamp(), nm_usuario_logado_p, cd_pessoa_fisica_w, msg_programa_campanha_p, 'A', nr_seq_populacao_alvo_w);

              
                 elsif (qt_campanha_partic_w > 0) then
                    msg_programa_campanha_p := obter_desc_expressao(1062913);
                  insert into MPREV_VALIDACAO_PARTIC(nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, cd_pessoa_fisica, ds_mensagem, ie_tipo_mensagem, nr_seq_pop_alvo)
                values (nextval('mprev_validacao_partic_seq'), clock_timestamp(), nm_usuario_logado_p, clock_timestamp(), nm_usuario_logado_p, cd_pessoa_fisica_w, msg_programa_campanha_p, 'A', nr_seq_populacao_alvo_w);

                 else
                   /* regra de negocio 4 - RN4 */

                   /* se retornar consistencia, inserir na tabela MPREV_VALIDACAO_PARTICIPANTE e nao incluir participante no programa ou campanha */

   
                   SELECT * FROM mprev_consiste_situacao_part(null, cd_pessoa_fisica_w, cd_estabelecimento_logado_p, 'I', ds_mensagem_retorno_w, ie_tipo_mensagem_w) INTO STRICT ds_mensagem_retorno_w, ie_tipo_mensagem_w;


                   /*Se caso retornar alguma consistenca incluir na tabela MPREV_VALIDACAO_PARTICIPANTE*/

                   if (ie_tipo_mensagem_w = 'A' or ie_tipo_mensagem_w = 'B') then
                     insert into MPREV_VALIDACAO_PARTIC(nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, cd_pessoa_fisica, ds_mensagem, ie_tipo_mensagem, nr_seq_pop_alvo)
                     values (nextval('mprev_validacao_partic_seq'), clock_timestamp(), nm_usuario_logado_p, clock_timestamp(), nm_usuario_logado_p, cd_pessoa_fisica_w, ds_mensagem_retorno_w, ie_tipo_mensagem_w, nr_seq_populacao_alvo_w);
                   
                   else  
                   
                       /*Inserir participante ie_incluso_w e ie_incluso_w sao retornos da procedure*/

                       SELECT * FROM mprev_insere_particip_direto( 
                        cd_pessoa_fisica_w, nr_seq_programa_w, nr_seq_campanha_w, nm_usuario_logado_p, ie_incluso_w, nm_incluso_w, clock_timestamp()) INTO STRICT ie_incluso_w, nm_incluso_w;
    
                        update	mprev_pop_alvo_pessoa
                        set	ie_selecionada	 	= 'S',
                            nm_usuario 		    = nm_usuario_logado_p,
                            dt_atualizacao 		= clock_timestamp()
                        where	nr_sequencia    = nr_seq_pop_alvo_pessoa_p;

                        delete
                        from   mprev_validacao_partic
                        where  nr_seq_pop_alvo = nr_seq_populacao_alvo_w
                        and    cd_pessoa_fisica = cd_pessoa_fisica_w;

                        select coalesce(nr_seq_envio_mens, 0), coalesce(nm_regra, '')
                        into STRICT   nr_seq_envio_mens_w , nm_regra_w
                        from   mprev_regra_cubo
                        where  nr_sequencia = (SELECT nr_seq_regra_cubo 
                                                from   mprev_populacao_alvo 
                                                where  nr_sequencia = nr_seq_populacao_alvo_w);

                        if (nr_seq_envio_mens_w > 0) then
                          select max(ie_momento_envio)
                          into STRICT   ie_momento_envio_w
                          from   mprev_regra_envio_mensagem
                          where  nr_sequencia = nr_seq_envio_mens_w;

                          if (ie_momento_envio_w = 'IF') then 
                              CALL mprev_enviar_email_sms(cd_pessoa_fisica_w , nr_seq_envio_mens_w, nm_regra_w, '5210', nm_usuario_logado_p);
                          end if;
                        end if;
                 end if;

              end if;

             end if;
        end if;

   /*RN6 - Populacao alvo liberar apos 'Incluir pessoas filtradas no programa ou campanha' */

   select count(*)
   into STRICT qt_registro_w
   from mprev_pop_alvo_pessoa 
   where nr_seq_populacao_alvo = nr_seq_populacao_alvo_w
   and ie_selecionada = 'N';
    	
   if (qt_registro_w = 0) then
	   update  mprev_populacao_alvo
       set	   dt_liberacao    = clock_timestamp(),
               nm_usuario	   = nm_usuario_logado_p,
               dt_atualizacao  = clock_timestamp()
       where   nr_sequencia	   = nr_seq_populacao_alvo_w;
   end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_inserir_pessoa_filtrada ( nr_seq_pop_alvo_pessoa_p bigint, nr_seq_regra_cubo_p bigint, nm_usuario_p text, nm_usuario_logado_p text, cd_estabelecimento_logado_p text, msg_programa_campanha_p INOUT text) FROM PUBLIC;

