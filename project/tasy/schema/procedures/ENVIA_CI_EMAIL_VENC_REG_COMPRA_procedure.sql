-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE envia_ci_email_venc_reg_compra ( cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
 
nr_sequencia_w				bigint;
nr_seq_licitacao_w				bigint;
cd_reg_compra_w				varchar(100);
dt_inicio_vigencia_w			varchar(10);
dt_fim_vigencia_w				varchar(10);
cd_pessoa_resp_w				varchar(10);
ds_pessoa_resp_w				varchar(100);
ie_email_w				varchar(1);
ie_comunic_interna_w			varchar(1);
ds_email_destino_w				varchar(255);
nm_usuario_destino_w			varchar(15);
nr_seq_regra_ci_w				bigint;
ds_titulo_w				varchar(255);
ds_comunicado_w				varchar(4000);
nr_seq_comunic_w				bigint;
nr_seq_classif_w				bigint;
cd_perfil_w				varchar(10);
ie_ci_lida_w				varchar(1);
nr_seq_regra_email_w			bigint;
ds_erro_w				varchar(255);
ds_email_origem_w				varchar(255);
nm_usuario_w				varchar(15);
ds_email_remetente_w			varchar(255);
/* Se tiver setor na regra, envia CI para os setores */
ds_setor_adicional_w          		varchar(2000) := '';
/* Campos da regra Usuário da Regra */
cd_setor_regra_usuario_w			integer;
cd_perfil_ativo_w				integer;

c01 CURSOR FOR 
SELECT	a.nr_sequencia, 
	a.nr_seq_licitacao, 
	a.cd_reg_compra, 
	to_char(a.dt_inicio_vigencia,'dd/mm/yyyy'), 
	to_char(a.dt_fim_vigencia,'dd/mm/yyyy'), 
	b.cd_pessoa_resp, 
	substr(obter_nome_pf(b.cd_pessoa_resp),1,100) ds_pessoa_resp, 
	b.ie_email, 
	b.ie_comunic_interna, 
	substr(obter_dados_usuario_opcao(obter_usuario_pf(b.cd_pessoa_resp),'E'),1,255) ds_email_destino, 
	substr(obter_usuario_pf(b.cd_pessoa_resp),1,15) ds_email_destino 
from	reg_compra a, 
	reg_compra_responsaveis b 
where	a.nr_sequencia = b.nr_seq_reg_compra 
and	trunc(a.dt_fim_vigencia,'dd') - b.qt_dias_aviso = trunc(clock_timestamp(),'dd');

c05 CURSOR FOR 
SELECT	coalesce(a.cd_setor_atendimento,0) cd_setor_atendimento 
from	regra_envio_comunic_usu a 
where	a.nr_seq_evento = nr_seq_regra_ci_w;


BEGIN 
 
begin 
select	obter_perfil_ativo 
into STRICT	cd_perfil_ativo_w
;
exception when others then 
	cd_perfil_ativo_w	:= 0;
end;
 
select	coalesce(max(b.nr_sequencia),0) 
into STRICT	nr_seq_regra_ci_w 
from	regra_envio_comunic_compra a, 
	regra_envio_comunic_evento b 
where	a.nr_sequencia = b.nr_seq_regra 
and	a.cd_estabelecimento = cd_estabelecimento_p 
and	a.cd_funcao = 953 
and	b.cd_evento = 48 
and	b.ie_situacao = 'A' 
and	substr(obter_se_envia_ci_regra_compra(b.nr_sequencia,0,'OC',cd_perfil_ativo_w,nm_usuario_p,null),1,1) = 'S';
 
select	coalesce(max(a.nr_sequencia),0) 
into STRICT	nr_seq_regra_email_w 
from	regra_envio_email_compra a 
where	a.cd_estabelecimento = cd_estabelecimento_p 
and	a.ie_tipo_mensagem = 47 
and	a.ie_situacao = 'A';
 
if	((nr_seq_regra_ci_w > 0) or (nr_seq_regra_email_w > 0)) then 
 
	open C01;
	loop 
	fetch C01 into	 
		nr_sequencia_w, 
		nr_seq_licitacao_w, 
		cd_reg_compra_w, 
		dt_inicio_vigencia_w, 
		dt_fim_vigencia_w, 
		cd_pessoa_resp_w, 
		ds_pessoa_resp_w, 
		ie_email_w, 
		ie_comunic_interna_w, 
		ds_email_destino_w, 
		nm_usuario_destino_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		if (nr_seq_regra_ci_w > 0) and (ie_comunic_interna_w = 'S') and (nm_usuario_destino_w IS NOT NULL AND nm_usuario_destino_w::text <> '') then 
			 
			open C05;
			loop 
			fetch C05 into	 
				cd_setor_regra_usuario_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin 
				if (cd_setor_regra_usuario_w <> 0) and (obter_se_contido_char(cd_setor_regra_usuario_w, ds_setor_adicional_w) = 'N') then 
					ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',',1,2000);
				end if;
				end;
			end loop;
			close C05;
 
			select	max(substr(ds_titulo,1,80)), 
				max(cd_perfil), 
				coalesce(max(ie_ci_lida),'N'), 
				max(substr( 
					replace_macro( 
					replace_macro( 
					replace_macro( 
					replace_macro( 
					replace_macro( 
					replace_macro(ds_comunicacao, 
						'@ds_pessoa_resp', ds_pessoa_resp_w), 
						'@nr_licitacao', cd_reg_compra_w), 
						'@nr_seq_licitacao', nr_seq_licitacao_w), 
						'@nr_sequencia', nr_sequencia_w), 
						'@dt_inicio_vigencia', dt_inicio_vigencia_w), 
						'@dt_fim_vigencia', dt_fim_vigencia_w),1,4000)) ds_comunicacao				 
			into STRICT	ds_titulo_w, 
				cd_perfil_w, 
				ie_ci_lida_w, 
				ds_comunicado_w				 
			from	regra_envio_comunic_evento 
			where	nr_sequencia = nr_seq_regra_ci_w;
			 
			select	obter_classif_comunic('F') 
			into STRICT	nr_seq_classif_w 
			;	
			 
			select	nextval('comunic_interna_seq') 
			into STRICT	nr_seq_comunic_w 
			;
			 
			if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then 
				cd_perfil_w := cd_perfil_w ||',';
			end if;
			 
			insert into comunic_interna( 
				dt_comunicado, 
				ds_titulo, 
				ds_comunicado, 
				nm_usuario, 
				dt_atualizacao, 
				ie_geral, 
				nm_usuario_destino, 
				nr_sequencia, 
				ie_gerencial, 
				nr_seq_classif, 
				dt_liberacao, 
				ds_perfil_adicional, 
				ds_setor_adicional) 
			values (	clock_timestamp(), 
				ds_titulo_w, 
				ds_comunicado_w, 
				nm_usuario_p, 
				clock_timestamp(), 
				'N', 
				nm_usuario_destino_w, 
				nr_seq_comunic_w, 
				'N', 
				nr_seq_classif_w, 
				clock_timestamp(), 
				cd_perfil_w, 
				ds_setor_adicional_w);
 
			if (ie_ci_lida_w = 'S') then 
				insert into comunic_interna_lida(nr_sequencia,nm_usuario,dt_atualizacao)values (nr_seq_comunic_w,nm_usuario_p,clock_timestamp());
			end if;
			 
			insert into reg_compra_historico(			 
				nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				nr_seq_reg_compra, 
				ds_historico, 
				ie_origem, 
				dt_liberacao, 
				nm_usuario_lib) 
			values (	nextval('reg_compra_historico_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_sequencia_w, 
				wheb_mensagem_pck.get_Texto(313069, 'DS_PESSOA_RESP_W='|| DS_PESSOA_RESP_W), /*'Foi enviado comunicação interna para ' || ds_pessoa_resp_w || ', avisando o vencimento da vigência deste registro de preço.',*/ 
				'S', 
				clock_timestamp(), 
				nm_usuario_p);
		end if;
		 
		if (nr_seq_regra_email_w > 0) and (ie_email_w = 'S') and (ds_email_destino_w IS NOT NULL AND ds_email_destino_w::text <> '') then 
			 
			select	max(substr( 
					replace_macro( 
					replace_macro( 
					replace_macro( 
					replace_macro( 
					replace_macro( 
					replace_macro(ds_assunto, 
						'@ds_pessoa_resp', ds_pessoa_resp_w), 
						'@nr_licitacao', cd_reg_compra_w), 
						'@nr_seq_licitacao', nr_seq_licitacao_w), 
						'@nr_sequencia', nr_sequencia_w), 
						'@dt_inicio_vigencia', dt_inicio_vigencia_w), 
						'@dt_fim_vigencia', dt_fim_vigencia_w),1,4000)), 
				max(substr( 
					replace_macro( 
					replace_macro( 
					replace_macro( 
					replace_macro( 
					replace_macro( 
					replace_macro(ds_mensagem_padrao, 
						'@ds_pessoa_resp', ds_pessoa_resp_w), 
						'@nr_licitacao', cd_reg_compra_w), 
						'@nr_seq_licitacao', nr_seq_licitacao_w), 
						'@nr_sequencia', nr_sequencia_w), 
						'@dt_inicio_vigencia', dt_inicio_vigencia_w), 
						'@dt_fim_vigencia', dt_fim_vigencia_w),1,4000)) 
			into STRICT	ds_titulo_w, 
				ds_comunicado_w 
			from	regra_envio_email_compra 
			where	nr_sequencia = nr_seq_regra_email_w;
 
			select	coalesce(max(ds_email_remetente),'X') 
			into STRICT	ds_email_remetente_w 
			from	regra_envio_email_compra 
			where	nr_sequencia = nr_seq_regra_email_w;
 
			select	ds_email, 
				obter_usuario_pf(cd_responsavel_compras) 
			into STRICT	ds_email_origem_w, 
				nm_usuario_w 
			from	parametro_compras 
			where	cd_estabelecimento = cd_estabelecimento_p;
 
			if (ds_email_remetente_w <> 'X') then 
				ds_email_origem_w	:= ds_email_remetente_w;
			end if;
			 
			if (ds_comunicado_w IS NOT NULL AND ds_comunicado_w::text <> '') and (ds_email_destino_w IS NOT NULL AND ds_email_destino_w::text <> '') and (ds_email_origem_w IS NOT NULL AND ds_email_origem_w::text <> '') and (nm_usuario_w IS NOT NULL AND nm_usuario_w::text <> '') then 
				begin 
					CALL enviar_email(ds_titulo_w, ds_comunicado_w, ds_email_origem_w, ds_email_destino_w, nm_usuario_w, 'M');
					 
					insert into reg_compra_historico(			 
						nr_sequencia, 
						dt_atualizacao, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						nr_seq_reg_compra, 
						ds_historico, 
						ie_origem, 
						dt_liberacao, 
						nm_usuario_lib) 
					values (	nextval('reg_compra_historico_seq'), 
						clock_timestamp(), 
						nm_usuario_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						nr_sequencia_w, 
						wheb_mensagem_pck.get_Texto(313070, 'DS_PESSOA_RESP_W='|| DS_PESSOA_RESP_W), /*'Foi enviado e-mail para ' || ds_pessoa_resp_w || ', avisando o vencimento da vigência deste registro de preço.',*/ 
						'S', 
						clock_timestamp(), 
						nm_usuario_p);
				exception when others then					 
					ds_erro_w	:= sqlerrm(SQLSTATE);
					insert into reg_compra_historico(			 
						nr_sequencia, 
						dt_atualizacao, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						nr_seq_reg_compra, 
						ds_historico, 
						ie_origem, 
						dt_liberacao, 
						nm_usuario_lib) 
					values (	nextval('reg_compra_historico_seq'), 
						clock_timestamp(), 
						nm_usuario_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						nr_sequencia_w, 
						wheb_mensagem_pck.get_texto(313073,'DS_PESSOA_RESP_W='|| DS_PESSOA_RESP_W ||';DS_ERRO_W='|| DS_ERRO_W), /*'Não foi possível enviar e-mail para ' || ds_pessoa_resp_w || ', referente ao vencimento da vigência deste registro de preço.' || chr(13) || chr(10) || 'Erro: ' || ds_erro_w,*/ 
						'S', 
						clock_timestamp(), 
						nm_usuario_p);					
				end;
			end if;		
		end if;
		end;
	end loop;
	close C01;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE envia_ci_email_venc_reg_compra ( cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

