-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importar_compl_pf (cd_pessoa_fisica_p text, ie_tipo_complemento_p bigint, nm_usuario_p text, nm_contato_p text, ds_endereco_p text, cd_cep_p text, nr_endereco_p bigint, ds_complemento_p text, ds_bairro_p text, ds_municipio_p text, sg_estado_p text, nr_telefone_p text, nr_ramal_p bigint, ds_observacao_p text, ds_email_p text, cd_empresa_refer_p bigint, cd_profissao_p bigint, nr_identidade_p text, nr_cpf_p text, cd_municipio_ibge_p text, ds_setor_trabalho_p text, ds_horario_trabalho_p text, nr_matricula_trabalho_p text, nr_seq_parentesco_p bigint, ds_fone_adic_p text, ds_fax_p text, cd_pessoa_fisica_ref_p text, nr_seq_pais_p bigint, ds_fonetica_p text, cd_tipo_logradouro_p text, nr_ddd_telefone_p text, nr_ddi_telefone_p text, nr_ddi_fax_p text, nr_ddd_fax_p text) AS $body$
DECLARE


/*ie_tipo_complemento_p		1 - Residencial
						2 - Comercial
						3 - do Responsável
						4 - do Pai
						5 - da Mãe
						6 - do Conjuge
						7 - Comercial 2

sg_estado_p
						AC - Acre
						AL - Alagoas
						AM - Amazonas
						AP - Amapá
						BA - Bahia
						CE - Ceará
						DF - Distrito Federal
						ES - Espirito Santo
						GO - Goiás
						IN - Outros(Internacional)
						MA - Maranhão
						MG - Minas Gerais
						MS - Mato Grosso do Sul
						MT - Mato Grosso
						PA - Pará
						PB - Paraiba
						PE - Pernambuco
						PI - Piauí
						PR - Paraná
						RJ - Rio de Janeiro
						RN - Rio Grande do Norte
						RO - Rondonia
						RR - Roraima
						RS - Rio Grande do Sul
						SC - Santa Catarina
						SE - Sergipe
						SP - São Paulo
						TO - Tocantins

*/
qt_sg_estado_w				bigint;
qt_tipo_complemento_w		bigint;
cd_pessoa_fisica_w			varchar(10);
nr_sequencia_compl_w		bigint;


BEGIN

if (sg_estado_p IS NOT NULL AND sg_estado_p::text <> '')	then
	select	count(b.vl_dominio)
	into STRICT	qt_sg_estado_w
	from	dominio a,
		valor_dominio b
	where	a.cd_dominio	= b.cd_dominio
	and	a.cd_dominio	= 50
	and	b.vl_dominio	= sg_estado_p;
else
	qt_sg_estado_w := 1;
end if;

if (ie_tipo_complemento_p IS NOT NULL AND ie_tipo_complemento_p::text <> '')	then
	select	count(b.vl_dominio)
	into STRICT	qt_tipo_complemento_w
	from	dominio a,
		valor_dominio b
	where	a.cd_dominio	= b.cd_dominio
	and	a.cd_dominio	= 8
	and	b.vl_dominio	= ie_tipo_complemento_p;
else
	qt_tipo_complemento_w := 1;
end if;

select	max(cd_pessoa_fisica)
into STRICT	cd_pessoa_fisica_w
from	pessoa_fisica
where	cd_pessoa_fisica = cd_pessoa_fisica_p;

if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
	if (qt_sg_estado_w			= 1) and (qt_tipo_complemento_w		= 1) then

		select (coalesce(max(nr_sequencia),0)+1)
		into STRICT 	nr_sequencia_compl_w
		from 	compl_pessoa_fisica
		where 	cd_pessoa_fisica = cd_pessoa_fisica_w;

		Begin
		insert into compl_pessoa_fisica(
			cd_pessoa_fisica,
			nr_sequencia,
			ie_tipo_complemento,
			dt_atualizacao,
			nm_usuario,
			nm_contato,
			ds_endereco,
			cd_cep,
			nr_endereco,
			ds_complemento,
			ds_bairro,
			ds_municipio,
			sg_estado,
			nr_telefone,
			nr_ramal,
			ds_observacao,
			ds_email,
			cd_empresa_refer,
			cd_profissao,
			nr_identidade,
			nr_cpf,
			cd_municipio_ibge,
			ds_setor_trabalho,
			ds_horario_trabalho,
			nr_matricula_trabalho,
			nr_seq_parentesco,
			ds_fone_adic,
			ds_fax,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_pessoa_fisica_ref,
			nr_seq_pais,
			ds_fonetica,
			cd_tipo_logradouro,
			nr_ddd_telefone,
			nr_ddi_telefone,
			nr_ddi_fax,
			nr_ddd_fax)
		values (
			cd_pessoa_fisica_w,
			nr_sequencia_compl_w,
			ie_tipo_complemento_p,
			clock_timestamp(),
			nm_usuario_p,
			nm_contato_p,
			ds_endereco_p,
			cd_cep_p,
			nr_endereco_p,
			ds_complemento_p,
			ds_bairro_p,
			ds_municipio_p,
			sg_estado_p,
			nr_telefone_p,
			nr_ramal_p,
			ds_observacao_p,
			ds_email_p,
			cd_empresa_refer_p,
			cd_profissao_p,
			nr_identidade_p,
			nr_cpf_p,
			cd_municipio_ibge_p,
			ds_setor_trabalho_p,
			ds_horario_trabalho_p,
			nr_matricula_trabalho_p,
			nr_seq_parentesco_p,
			ds_fone_adic_p,
			ds_fax_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_pessoa_fisica_ref_p,
			nr_seq_pais_p,
			ds_fonetica_p,
			cd_tipo_logradouro_p,
			nr_ddd_telefone_p,
			nr_ddi_telefone_p,
			nr_ddi_fax_p,
			nr_ddd_fax_p);

		exception
		when others then
			null;
		end;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importar_compl_pf (cd_pessoa_fisica_p text, ie_tipo_complemento_p bigint, nm_usuario_p text, nm_contato_p text, ds_endereco_p text, cd_cep_p text, nr_endereco_p bigint, ds_complemento_p text, ds_bairro_p text, ds_municipio_p text, sg_estado_p text, nr_telefone_p text, nr_ramal_p bigint, ds_observacao_p text, ds_email_p text, cd_empresa_refer_p bigint, cd_profissao_p bigint, nr_identidade_p text, nr_cpf_p text, cd_municipio_ibge_p text, ds_setor_trabalho_p text, ds_horario_trabalho_p text, nr_matricula_trabalho_p text, nr_seq_parentesco_p bigint, ds_fone_adic_p text, ds_fax_p text, cd_pessoa_fisica_ref_p text, nr_seq_pais_p bigint, ds_fonetica_p text, cd_tipo_logradouro_p text, nr_ddd_telefone_p text, nr_ddi_telefone_p text, nr_ddi_fax_p text, nr_ddd_fax_p text) FROM PUBLIC;

