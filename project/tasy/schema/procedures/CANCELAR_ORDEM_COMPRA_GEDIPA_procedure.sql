-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cancelar_ordem_compra_gedipa ( nr_ordem_compra_p bigint, nr_seq_motivo_cancel_p bigint, ie_nova_solic_p text, ie_nova_cotacao_p text, ie_mantem_forn_cot_p text, nm_usuario_p text, ds_observacao_p text, ie_cancela_processo_p text, nr_cot_compra_p INOUT bigint) AS $body$
DECLARE

 
nr_sequencia_w			bigint;
nr_seq_classif_w			bigint;
nm_usuario_w			varchar(255);
ds_observacao_w			varchar(4000);
ds_motivo_cancel_w		varchar(80);
ie_somente_pagto_w		varchar(01);
nr_titulo_pagar_w			bigint;
nr_titulo_imposto_w			bigint;
cd_perfil_w			integer;
cd_estabelecimento_w		smallint;
nr_seq_item_entrega_w		bigint;
nr_item_oci_w			integer;
nr_solic_compra_w			bigint;
ie_solic_exportada_w		smallint;
nr_solic_compra_ordem_w		bigint;
nr_item_solic_compra_ordem_w	integer;
qt_saldo_entrega_w		double precision;
qt_existe_item_w			integer;
nr_item_solic_compra_entr_w		integer;
nr_item_solic_compra_w		integer;
dt_prevista_entrega_w		timestamp;
nr_solic_compra_ordem_ant_w	bigint;
nr_documento_externo_w		bigint;
nr_seq_regra_w			bigint;
ds_titulo_w			varchar(80);
ds_comunic_w			varchar(4000);
qt_regra_usuario_w			bigint;
nm_usuario_destino_w		varchar(255);
nr_seq_comunic_w			bigint;
dt_aprovacao_w			timestamp;
cd_setor_atendimento_w		integer;
qt_existe_w			bigint;
qt_existe_lib			bigint;
ds_email_comprador_w		varchar(255);
nm_comprador_w			varchar(100);
ds_razao_social_w			varchar(100);
nm_fantasia_w			varchar(100);
ds_assunto_w			varchar(255);
ds_mensagem_w			varchar(2000);
ds_email_compras_w		varchar(255);
cd_comprador_w			varchar(10);
ie_usuario_w			varchar(3);
ds_email_origem_w			varchar(255);
ds_usuario_origem_w		varchar(255);
ds_usuario_comprador_w		varchar(255);
ds_email_adicional_w		varchar(2000);
nr_cot_compra_w			bigint;
cd_perfil_dispara_w			integer;
cd_perfil_ww			varchar(10);
ie_ci_lida_w			varchar(1);
cd_local_estoque_w		bigint;
ie_momento_envio_w		varchar(1);
ds_email_remetente_w		varchar(255);
/* Se tiver setor na regra, envia CI para os setores */
ds_setor_adicional_w          	varchar(2000) := '';
/* Campos da regra Usuário da Regra */
cd_setor_regra_usuario_w		integer;

c01 CURSOR FOR 
SELECT	a.ie_somente_pagto, 
	b.nr_titulo_pagar 
from	ordem_compra_venc b, 
	ordem_compra a 
where 	a.nr_ordem_compra 	= b.nr_ordem_compra 
and	a.nr_ordem_compra 	= nr_ordem_compra_p;

c02 CURSOR FOR 
SELECT	Obter_Titulo_Imposto(a.nr_sequencia) 
from	titulo_pagar_imposto a, 
	titulo_pagar b 
where	a.nr_titulo	= b.nr_titulo 
and	a.nr_titulo	= nr_titulo_pagar_w 
and	Obter_Titulo_Imposto(a.nr_sequencia) <> 0;

c03 CURSOR FOR 
SELECT	a.nr_sequencia, 
	a.nr_item_oci, 
	coalesce(a.qt_prevista_entrega,0) - coalesce(a.qt_real_entrega,0), 
	a.dt_prevista_entrega, 
	b.nr_solic_compra, 
	b.nr_item_solic_compra 
from	ordem_compra_item b, 
	ordem_compra_item_entrega a 
where	a.nr_ordem_compra = b.nr_ordem_compra 
and	a.nr_item_oci = b.nr_item_oci 
and	coalesce(a.dt_cancelamento::text, '') = '' 
and (coalesce(a.qt_prevista_entrega,0) > coalesce(qt_real_entrega,0) or coalesce(qt_real_entrega,0) = 0) 
and	coalesce(a.ie_status_exportar::text, '') = '' 
and	a.nr_ordem_compra = nr_ordem_compra_p;

c04 CURSOR FOR 
SELECT	b.nr_sequencia, 
	b.cd_perfil 
from	regra_envio_comunic_compra a, 
	regra_envio_comunic_evento b 
where	a.nr_sequencia = b.nr_seq_regra 
and	a.cd_funcao = 917 
and	b.cd_evento = 13 
and	b.ie_situacao = 'A' 
and	a.cd_estabelecimento = cd_estabelecimento_w 
and	((cd_setor_atendimento_w IS NOT NULL AND cd_setor_atendimento_w::text <> '' AND b.cd_setor_destino = cd_setor_atendimento_w) or 
	((coalesce(cd_setor_atendimento_w::text, '') = '') and (coalesce(b.cd_setor_destino::text, '') = '')) or (coalesce(b.cd_setor_destino::text, '') = '')) 
and	substr(obter_se_envia_ci_regra_compra(b.nr_sequencia,nr_ordem_compra_p,'OC',obter_perfil_ativo,nm_usuario_p,null),1,1) = 'S';

c05 CURSOR FOR 
SELECT	coalesce(a.cd_setor_atendimento,0) cd_setor_atendimento 
from	regra_envio_comunic_usu a 
where	a.nr_seq_evento = nr_seq_regra_w;


BEGIN 
 
if (nr_cot_compra_p IS NOT NULL AND nr_cot_compra_p::text <> '') then 
	select	count(*) 
	into STRICT	qt_existe_w 
	from	cot_compra 
	where	nr_cot_compra = nr_cot_compra_p;
	if (qt_existe_w = 0) then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(188137,'NR_COT_COMPRA=' || nr_cot_compra_p);
	end if;
end if;
 
ds_observacao_w :=	substr(WHEB_MENSAGEM_PCK.get_texto(298422, 
				'NM_USUARIO_W='||nm_usuario_p|| 
				';DT_CANCELAMENTO_W='||to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss')|| 
				';DS_MOTIVO_CANCEL_W='||ds_motivo_cancel_w|| 
				';DS_OBSERVACAO_W='||ds_observacao_p),1,4000);
		 
			/*Esta ordem de compra foi cancelada pelo usuário #@NM_USUARIO_W#@ em #@DT_CANCELAMENTO_W#@ pelo motivo: #@DS_MOTIVO_CANCEL_W#@. 
			Observação: #@DS_OBSERVACAO_W#@.*/
 
			 
select	count(*) 
into STRICT 	qt_existe_lib 
from	ordem_compra 
where	nr_ordem_compra = nr_ordem_compra_p 
and	coalesce(dt_liberacao::text, '') = '';
 
if (qt_existe_lib = 0 ) then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(188138,'NR_ORDEM=' || nr_ordem_compra_p);
end if;	
 
update	ordem_compra 
set	nr_seq_motivo_cancel	= nr_seq_motivo_cancel_p, 
	nm_usuario		= nm_usuario_p, 
	ds_observacao		= substr(ds_observacao,1,2000) || chr(13) || substr(ds_observacao_w,1,2000) 
where	nr_ordem_compra		= nr_ordem_compra_p;
 
 
update	prescr_mat_hor p 
set	p.ie_transferido 	= 'N', 
	p.nr_ordem_compra 	 = NULL 
where	coalesce(p.dt_emissao_farmacia::text, '') = '' 
and	p.nr_ordem_compra = 	nr_ordem_compra_p 
and	coalesce(p.ie_transferido,'S') = 'S';
 
update	prescr_mat_hor r 
set	r.ie_transferido	= 'N', 
	r.nr_ordem_compra	 = NULL 
where	(r.dt_emissao_farmacia IS NOT NULL AND r.dt_emissao_farmacia::text <> '') 
and	r.nr_ordem_compra = 	nr_ordem_compra_p 
and	coalesce(r.ie_transferido,'S') = 'S';
 
 
/*Fabio 22/11/2006 - Tirei o dt_baixa do update acima e fiz o processo de baixa abaixo*/
 
CALL Baixar_ordem_compra(nr_ordem_compra_p, null, null, nm_usuario_p);
 
nr_cot_compra_w := nr_cot_compra_p;
 
if (ie_nova_cotacao_p = 'S') then 
	gerar_nova_cotacao_OC(	nr_ordem_compra_p, null, null, ie_mantem_forn_cot_p, nm_usuario_p, nr_cot_compra_w);
end if;
 
nr_solic_compra_w			:= 0;
nr_solic_compra_ordem_ant_w	:= 0;
open C03;
loop 
fetch C03 into 
	nr_seq_item_entrega_w, 
	nr_item_oci_w, 
	qt_saldo_entrega_w, 
	dt_prevista_entrega_w, 
	nr_solic_compra_ordem_w, 
	nr_item_solic_compra_ordem_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin 
	/*Se for ordem do ME, vamos identificar as entregas para o envio ao ME*/
 
	select	coalesce(max(nr_documento_externo),0) 
	into STRICT	nr_documento_externo_w 
	from	ordem_compra 
	where	nr_ordem_compra = nr_ordem_compra_p 
	and	coalesce(nr_seq_agenda_pac::text, '') = '';
 
	if (nr_documento_externo_w > 0) then 
		update	ordem_compra_item_entrega 
		set	ie_status_exportar = '0' 
		where	nr_sequencia = nr_seq_item_entrega_w;
	end if;
 
	/* Se tiver solicitação, o sistema gera nova solicitação para os itens cancelados*/
 
	if (ie_nova_solic_p = 'S') and (nr_solic_compra_ordem_w IS NOT NULL AND nr_solic_compra_ordem_w::text <> '') then 
		begin 
		if (nr_solic_compra_ordem_w <> nr_solic_compra_ordem_ant_w) then 
			select	nextval('solic_compra_seq') 
			into STRICT	nr_solic_compra_w 
			;
 
			insert into solic_compra( 
				nr_solic_compra,		cd_estabelecimento, 
				dt_solicitacao_compra,	dt_atualizacao, 
				nm_usuario,		ie_situacao, 
				cd_pessoa_solicitante,	cd_local_estoque, 
				cd_centro_custo,		cd_conta_contabil, 
				cd_setor_atendimento,	ds_observacao, 
				dt_liberacao,		cd_pessoa_autoriza, 
				dt_autorizacao,		dt_impressao, 
				ie_aviso_chegada,		nr_seq_ordem_serv, 
				nr_seq_motivo_cancel,	ie_aviso_aprov_oc, 
				ie_urgente,		ie_tipo_solicitacao, 
				ie_comodato,		ie_semanal, 
				nm_usuario_nrec,	dt_atualizacao_nrec) 
			SELECT	nr_solic_compra_w,		cd_estabelecimento, 
				dt_solicitacao_compra,	clock_timestamp(), 
				nm_usuario_p,		ie_situacao, 
				cd_pessoa_solicitante,	cd_local_estoque, 
				cd_centro_custo,		cd_conta_contabil, 
				cd_setor_atendimento,	substr(ds_observacao || Wheb_mensagem_pck.get_Texto(298426), 1, 255), 
				dt_liberacao,		cd_pessoa_autoriza, 
				dt_autorizacao,		dt_impressao, 
				ie_aviso_chegada,		nr_seq_ordem_serv, 
				nr_seq_motivo_cancel,	ie_aviso_aprov_oc, 
				ie_urgente,		0, 
				ie_comodato,		ie_semanal, 
				nm_usuario_p,		clock_timestamp() 
			from	solic_compra 
			where	nr_solic_compra = nr_solic_compra_ordem_w;
 
		nr_solic_compra_ordem_ant_w	:= nr_solic_compra_ordem_w;
		end if;
		 
		/*Identifico se ja existe o item da solic de referencia na nova solicitacao*/
 
		select	count(*) 
		into STRICT	qt_existe_item_w 
		from	solic_compra_item 
		where	nr_solic_compra		= nr_solic_compra_w 
		and	nr_solic_compra_ref		= nr_solic_compra_ordem_w 
		and	nr_item_solic_compra_ref	= nr_item_solic_compra_ordem_w;
 
		if (qt_existe_item_w = 0) then 
			select	coalesce(max(nr_item_solic_compra), 0) + 1 
			into STRICT	nr_item_solic_compra_w 
			from	solic_compra_item 
			where	nr_solic_compra = nr_solic_compra_w;
			 
			select	cd_local_estoque 
			into STRICT	cd_local_estoque_w 
			from	solic_compra 
			where	nr_solic_compra = nr_solic_compra_w;
 
			insert into solic_compra_item( 
				nr_solic_compra,		nr_item_solic_compra, 
				nr_solic_compra_ref,	nr_item_solic_compra_ref, 
				cd_material,		cd_unidade_medida_compra, 
				qt_material,		dt_atualizacao, 
				nm_usuario,		ie_situacao, 
				ds_material_direto,		ds_observacao, 
				dt_solic_item,		nr_seq_aprovacao, 
				dt_autorizacao,		vl_unit_previsto, 
				ie_geracao,		nr_seq_proj_rec, 
				qt_conv_compra_est_orig, 
				qt_saldo_disp_estoque) 
			SELECT	nr_solic_compra_w,		nr_item_solic_compra_w, 
				nr_solic_compra_ordem_w,	nr_item_solic_compra_ordem_w, 
				cd_material,		cd_unidade_medida_compra, 
				qt_saldo_entrega_w,	clock_timestamp(), 
				nm_usuario_p,		ie_situacao, 
				ds_material_direto,	Wheb_mensagem_pck.get_Texto(298426), 
				dt_prevista_entrega_w,	nr_seq_aprovacao, 
				dt_autorizacao,		vl_unit_previsto, 
				ie_geracao,		nr_seq_proj_rec, 
				obter_dados_material(cd_material,'QCE'), 
				obter_saldo_disp_estoque(cd_estabelecimento_w, cd_material, cd_local_estoque_w, trunc(clock_timestamp(),'mm')) 
			from	solic_compra_item 
			where	nr_solic_compra		= nr_solic_compra_ordem_w 
			and	nr_item_solic_compra	= nr_item_solic_compra_ordem_w;
		else 
			update	solic_compra_item 
			set	qt_material		= qt_material + qt_saldo_entrega_w 
			where	nr_solic_compra		= nr_solic_compra_w 
			and	nr_solic_compra_ref		= nr_solic_compra_ordem_w 
			and	nr_item_solic_compra_ref	= nr_item_solic_compra_ordem_w;
		end if;
 
		select	coalesce(max(nr_item_solic_compra_entr), 0) + 1 
		into STRICT	nr_item_solic_compra_entr_w 
		from	solic_compra_item_entrega 
		where	nr_solic_compra = nr_solic_compra_w 
		and	nr_item_solic_compra = nr_item_solic_compra_w;
 
		insert into solic_compra_item_entrega( 
			nr_solic_compra, 
			nr_item_solic_compra, 
			nr_item_solic_compra_entr, 
			qt_entrega_solicitada, 
			dt_entrega_solicitada, 
			dt_atualizacao, 
			nm_usuario) 
		values (	nr_solic_compra_w, 
			nr_item_solic_compra_w, 
			nr_item_solic_compra_entr_w, 
			qt_saldo_entrega_w, 
			dt_prevista_entrega_w, 
			clock_timestamp(), 
			nm_usuario_p);
 
		/*Se for ordem do ME, vamos identificar a solicitação para enviar novamente*/
 
		if (nr_documento_externo_w > 0) then 
			update	solic_compra 
			set	ie_forma_exportar = '0' 
			where	nr_solic_compra = nr_solic_compra_w;
		end if;
 
		/*Faz o update no item da ordem, identificando a nova solicitação gerada*/
 
		update	ordem_compra_item 
		set	nr_solic_compra_cancel	= nr_solic_compra_w 
		where	nr_ordem_compra		= nr_ordem_compra_p 
		and	nr_item_oci		= nr_item_oci_w 
		and	coalesce(nr_solic_compra_cancel::text, '') = '';
 
 
		end;
	end if;
	end;
end loop;
close c03;
 
/*Cancelar os titulos da OC*/
 
open C01;
loop 
fetch C01 into 
	ie_somente_pagto_w, 
	nr_titulo_pagar_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
 
	if (ie_somente_pagto_w = 'S') and (nr_titulo_pagar_w IS NOT NULL AND nr_titulo_pagar_w::text <> '') then 
		begin 
		CALL cancelar_titulo_pagar(nr_titulo_pagar_w,nm_usuario_p, clock_timestamp());
 
		open c02;
		loop 
		fetch c02 into 
			nr_titulo_imposto_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			if (nr_titulo_imposto_w IS NOT NULL AND nr_titulo_imposto_w::text <> '') then 
				CALL cancelar_titulo_pagar(nr_titulo_imposto_w,nm_usuario_p, clock_timestamp());
			end if;
		end loop;
		close c02;
		end;
	end if;
 
end loop;
close C01;
 
select	cd_estabelecimento, 
	cd_setor_atendimento 
into STRICT	cd_estabelecimento_w, 
	cd_setor_atendimento_w 
from	ordem_compra 
where	nr_ordem_compra = nr_ordem_compra_p;
 
 
/*Comunicacao interna*/
 
select	substr(obter_usuario_pessoa(cd_pessoa_solicitante) || ',' || 
	obter_usuario_pessoa(obter_pessoa_delegacao(cd_pessoa_solicitante, 'RC', clock_timestamp())),1,255), 
	substr(obter_nome_pf_pj(cd_comprador,null),1,100) nm_comprador, 
	substr(obter_nome_pf_pj(null,cd_cgc_fornecedor),1,100) ds_razao_social, 
	substr(obter_dados_pf_pj(null,cd_cgc_fornecedor,'F'),1,100) nm_fantasia, 
	coalesce(cd_comprador,'X') 
into STRICT	nm_usuario_w, 
	nm_comprador_w, 
	ds_razao_social_w, 
	nm_fantasia_w, 
	cd_comprador_w 
from	ordem_compra 
where	nr_ordem_compra = nr_ordem_compra_p;
 
if (cd_comprador_w <> 'X') then 
	select	ds_email, 
		nm_guerra 
	into STRICT	ds_email_comprador_w, 
		ds_usuario_comprador_w 
	from	comprador 
	where	cd_pessoa_fisica		= cd_comprador_w 
	and	cd_estabelecimento		= cd_estabelecimento_w;
end if;
 
select	ds_motivo 
into STRICT	ds_motivo_cancel_w 
from	motivo_cancel_sc_oc 
where	nr_sequencia = nr_seq_motivo_cancel_p;
 
select	coalesce(max(cd_perfil_comunic_cancel),0), 
	max(ds_email) 
into STRICT	cd_perfil_w, 
	ds_email_compras_w 
from	parametro_compras 
where	cd_estabelecimento = cd_estabelecimento_w;
 
select	obter_classif_comunic('F') 
into STRICT	nr_seq_classif_w
;
 
select	nextval('comunic_interna_seq') 
into STRICT	nr_sequencia_w
;
 
insert into comunic_interna( 
	cd_estab_destino,			dt_comunicado,			ds_titulo, 
	ds_comunicado,			nm_usuario,			dt_atualizacao, 
	ie_geral,				nm_usuario_destino,		nr_sequencia, 
	ie_gerencial,			nr_seq_classif,			dt_liberacao, 
	ds_perfil_adicional) 
values (cd_estabelecimento_w,		clock_timestamp(),				Wheb_mensagem_pck.get_Texto(298427, 'NR_ORDEM_COMPRA_P='||nr_ordem_compra_p), 
	substr(ds_observacao_w,1,4000),			Wheb_mensagem_pck.get_Texto(298428),			clock_timestamp(), 
	'N',				nm_usuario_w || ',',			nr_sequencia_w, 
	'N',				nr_seq_classif_w,			clock_timestamp(), 
	CASE WHEN cd_perfil_w=0 THEN ''  ELSE cd_perfil_w ||', ' END );
	 
select	dt_aprovacao 
into STRICT	dt_aprovacao_w 
from	ordem_compra 
where	nr_ordem_compra = nr_ordem_compra_p;
 
CALL sup_cancela_email_pendente(null,nr_ordem_compra_p,'OC',cd_estabelecimento_w,nm_usuario_p);
 
open C04;
loop 
fetch C04 into 
	nr_seq_regra_w, 
	cd_perfil_ww;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin 
 
	select	count(*) 
	into STRICT	qt_regra_usuario_w 
	from	regra_envio_comunic_compra a, 
		regra_envio_comunic_evento b, 
		regra_envio_comunic_usu c 
	where	a.nr_sequencia = b.nr_seq_regra 
	and	b.nr_sequencia = c.nr_seq_evento 
	and	b.nr_sequencia = nr_seq_regra_w;
 
	select	coalesce(ie_ci_lida,'N') 
	into STRICT	ie_ci_lida_w 
	from 	regra_envio_comunic_evento 
	where 	nr_sequencia = nr_seq_regra_w;
 
	if (qt_regra_usuario_w > 0) then 
	 
		open C05;
		loop 
		fetch C05 into	 
			cd_setor_regra_usuario_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin 
			if (cd_setor_regra_usuario_w <> 0) and (obter_se_contido_char(cd_setor_regra_usuario_w, ds_setor_adicional_w) = 'N') then 
				ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',',1,2000);
			end if;
			end;
		end loop;
		close C05;
 
		nm_usuario_destino_w	:= '';
		nm_usuario_destino_w	:= obter_usuarios_comunic_compras(nr_ordem_compra_p,null,13,nr_seq_regra_w,'');
		ds_titulo_w		:= '';
		ds_comunic_w		:= '';
 
		select	substr(obter_dados_regra_com_compra(nr_ordem_compra_p, null, 917, 13 ,nr_seq_regra_w,'T'),1,2000) ds_titulo, 
			substr(replace(obter_dados_regra_com_compra(nr_ordem_compra_p, null, 917, 13, nr_seq_regra_w,'M'),'@motivo',ds_motivo_cancel_w),1,2000) ds_comunicacao 
		into STRICT	ds_titulo_w, 
			ds_comunic_w 
		;
 
		if (nm_usuario_destino_w IS NOT NULL AND nm_usuario_destino_w::text <> '') then 
 
			select	nextval('comunic_interna_seq') 
			into STRICT	nr_seq_comunic_w 
			;
			 
			if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then 
				cd_perfil_w := cd_perfil_w ||',';
			end if;
 
			insert	into comunic_interna( 
				cd_estab_destino,				dt_comunicado,				ds_titulo, 
				ds_comunicado,				nm_usuario,				dt_atualizacao, 
				ie_geral,					nm_usuario_destino,			nr_sequencia, 
				ie_gerencial,				nr_seq_classif,				dt_liberacao, 
				ds_perfil_adicional,			ds_setor_adicional) 
			values (	cd_estabelecimento_w,			clock_timestamp(),					ds_titulo_w, 
				ds_comunic_w,				nm_usuario_p,				clock_timestamp(), 
				'N',					nm_usuario_destino_w,			nr_seq_comunic_w, 
				'N',					nr_seq_classif_w,				clock_timestamp(), 
				cd_perfil_w,				ds_setor_adicional_w);
 
			/*Para que a comunicação seja gerada como lida ao próprio usuário */
 
			if (ie_ci_lida_w = 'S') then 
				insert into comunic_interna_lida(nr_sequencia,nm_usuario,dt_atualizacao)values (nr_seq_comunic_w,nm_usuario_p,clock_timestamp());
			end if;	
 
		end if;
	end if;
	end;
end loop;
close C04;
 
select	coalesce(max(nr_sequencia),0), 
	max(replace(ds_email_adicional,',',';')), 
	coalesce(max(ds_email_remetente),'X'), 
	max(cd_perfil_disparar), 
	coalesce(max(ie_momento_envio),'I') 
into STRICT	nr_seq_regra_w, 
	ds_email_adicional_w, 
	ds_email_remetente_w, 
	cd_perfil_dispara_w, 
	ie_momento_envio_w 
from	regra_envio_email_compra 
where	ie_tipo_mensagem = 23 
and	ie_situacao = 'A' 
and	cd_estabelecimento = cd_estabelecimento_w 
and	obter_se_envia_email_regra(nr_ordem_compra_p, 'OC', 23, cd_estabelecimento_w) = 'S';
 
if (nr_seq_regra_w > 0) and 
	((coalesce(cd_perfil_dispara_w::text, '') = '') or 
	(cd_perfil_dispara_w IS NOT NULL AND cd_perfil_dispara_w::text <> '' AND cd_perfil_dispara_w = obter_perfil_ativo)) then 
	begin 
 
	select	ds_assunto, 
		ds_mensagem_padrao 
	into STRICT	ds_assunto_w, 
		ds_mensagem_w 
	from	regra_envio_email_compra 
	where	nr_sequencia = nr_seq_regra_w;
	 
	ds_assunto_w := substr(replace_macro(ds_assunto_w, '@ordem', nr_ordem_compra_p), 1, 255);
	ds_assunto_w := substr(replace_macro(ds_assunto_w, '@comprador', nm_comprador_w), 1, 255);
	ds_assunto_w := substr(replace_macro(ds_assunto_w, '@motivo', ds_motivo_cancel_w), 1, 255);
	ds_assunto_w := substr(replace_macro(ds_assunto_w, '@observacao', ds_observacao_p), 1, 255);
	ds_assunto_w := substr(replace_macro(ds_assunto_w, '@fantasia_pj', nm_fantasia_w), 1, 255);
	ds_assunto_w := substr(replace_macro(ds_assunto_w, '@razao_pj', ds_razao_social_w), 1, 255);
	ds_assunto_w := substr(ds_assunto_w, 1, 255);
	 
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w, '@ordem', nr_ordem_compra_p), 1, 2000);
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w, '@comprador', nm_comprador_w), 1, 2000);
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w, '@motivo', ds_motivo_cancel_w), 1, 2000);
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w, '@observacao', ds_observacao_p), 1, 2000);
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w, '@fantasia_pj', nm_fantasia_w), 1, 2000);
	ds_mensagem_w := substr(replace_macro(ds_mensagem_w, '@razao_pj', ds_razao_social_w), 1, 2000);
	ds_mensagem_w := substr(ds_mensagem_w, 1, 2000);
 
	select	coalesce(max(ie_usuario),'U') 
	into STRICT	ie_usuario_w 
	from	regra_envio_email_compra 
	where	nr_sequencia = nr_seq_regra_w;
 
	if (ie_usuario_w = 'U') then --Usuario 
		select	ds_email, 
			nm_usuario 
		into STRICT	ds_email_origem_w, 
			ds_usuario_origem_w 
		from	usuario 
		where	nm_usuario = nm_usuario_p;
	elsif (ie_usuario_w = 'C') then --Setor compras 
		select	ds_email 
		into STRICT	ds_email_origem_w 
		from	parametro_compras 
		where	cd_estabelecimento = cd_estabelecimento_w;
 
		select	coalesce(ds_fantasia,ds_razao_social) 
		into STRICT	ds_usuario_origem_w 
		from	estabelecimento_v 
		where	cd_estabelecimento = cd_estabelecimento_w;
	elsif (ie_usuario_w = 'O') then --Comprador 
		ds_email_origem_w		:= ds_email_comprador_w;
		ds_usuario_origem_w	:= ds_usuario_comprador_w;
	end if;
 
	if (ds_email_adicional_w IS NOT NULL AND ds_email_adicional_w::text <> '') then 
		ds_email_comprador_w := ds_email_comprador_w || ';' || ds_email_adicional_w;
	end if;
 
	if (ds_email_remetente_w <> 'X') then 
		ds_email_origem_w	:= ds_email_remetente_w;
	end if;
 
	select	count(*) 
	into STRICT	qt_existe_w 
	 
	where 	obter_se_envia_email_internet(23,null,cd_estabelecimento_w,nr_ordem_compra_p) = 'S' 
	and	obter_se_envia_email_ordem(23,nr_ordem_compra_p,cd_estabelecimento_w) = 'S';
 
	if (qt_existe_w > 0) then 
		begin 
 
		if (ie_momento_envio_w = 'A') then 
			begin 
 
			CALL sup_grava_envio_email( 
				'OC', 
				'23', 
				nr_ordem_compra_p, 
				null, 
				null, 
				ds_email_comprador_w, 
				ds_usuario_origem_w, 
				ds_email_origem_w, 
				ds_assunto_w, 
				ds_mensagem_w, 
				cd_estabelecimento_w, 
				nm_usuario_p);
 
			end;
		else 
			begin 
			CALL enviar_email(ds_assunto_w,ds_mensagem_w,ds_email_origem_w,ds_email_comprador_w,ds_usuario_origem_w,'M');
			exception when others then 
				ds_assunto_w := '';
			end;
		end if;
 
		end;
	end if;
	end;
end if;
 
if (ie_cancela_processo_p = 'S') then 
	CALL cancelar_processo_compra(nr_ordem_compra_p,nr_seq_motivo_cancel_p,nm_usuario_p,ds_observacao_p);
end if;
 
CALL inserir_historico_ordem_compra( 
	nr_ordem_compra_p, 
	'S', 
	Wheb_mensagem_pck.get_Texto(298430), 
	WHEB_MENSAGEM_PCK.get_texto(298431, 
		'DS_MOTIVO_CANCEL_W='||ds_motivo_cancel_w|| 
		';DS_OBSERVACAO_P='||substr(ds_observacao_p,1,2000)), 
	nm_usuario_p);
 
	 
nr_cot_compra_p := nr_cot_compra_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cancelar_ordem_compra_gedipa ( nr_ordem_compra_p bigint, nr_seq_motivo_cancel_p bigint, ie_nova_solic_p text, ie_nova_cotacao_p text, ie_mantem_forn_cot_p text, nm_usuario_p text, ds_observacao_p text, ie_cancela_processo_p text, nr_cot_compra_p INOUT bigint) FROM PUBLIC;

