-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_reajuste_sca ( nm_usuario_p text, nr_seq_reajuste_p bigint, ie_commit_p text, cd_estabelecimento_p text) AS $body$
DECLARE

 
dt_reajuste_w			timestamp;
pr_reajuste_w			double precision;
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;
nr_seq_contrato_w		bigint;
dt_autorizacao_ans_w		timestamp;
pr_deflator_w			double precision;
nr_seq_preco_w			bigint;
vl_preco_w			double precision;
vl_preco_nao_subsid_base_w	double precision;
vl_base_w			double precision;
nr_seq_reajuste_w		double precision;
vl_reajuste_nao_subsidiado_w	double precision;
vl_reajustado_w			double precision;
nr_sequencia_w			bigint;
qt_registros_w			bigint;
vl_reajuste_w			double precision;
qt_regras_w			bigint;
nr_seq_tabela_w			bigint;
nr_seq_reaj_preco_w		bigint;
ie_truncar_valor_reajuste_w	varchar(1);
vl_minimo_atual_w		double precision;
vl_minimo_w			double precision;

C01 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.nr_seq_tabela 
	from	pls_reajuste_tabela	a, 
		pls_tabela_preco 	b 
	where	nr_seq_reajuste	= nr_seq_reajuste_p 
	and	a.nr_seq_tabela	= b.nr_sequencia 
	and	coalesce(a.dt_liberacao::text, '') = '';

C02 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		coalesce(a.vl_preco_atual,coalesce(a.vl_preco_inicial,0)), 
		coalesce(a.vl_preco_nao_subsid_atual,0), 
		coalesce(a.vl_minimo,0) 
	from	pls_plano_preco a 
	where	a.nr_seq_tabela	= nr_seq_tabela_w 
	and	not exists (SELECT	1 
				from	pls_reajuste_preco x 
				where	x.nr_seq_preco		= a.nr_sequencia 
				and	x.nr_seq_reajuste	= nr_seq_reajuste_p);


BEGIN	 
 
select	coalesce(tx_reajuste,0), 
	trunc(dt_reajuste), 
	coalesce(dt_periodo_inicial,trunc(dt_reajuste,'month')), 
	coalesce(dt_periodo_final,last_day(dt_reajuste)), 
	nr_seq_contrato, 
	dt_autorizacao_ans, 
	coalesce(tx_deflator,0) 
into STRICT	pr_reajuste_w, 
	dt_reajuste_w, 
	dt_periodo_inicial_w, 
	dt_periodo_final_w, 
	nr_seq_contrato_w, 
	dt_autorizacao_ans_w, 
	pr_deflator_w 
from	pls_reajuste 
where	nr_sequencia	= nr_seq_reajuste_p;
 
open C01;
loop 
fetch C01 into	 
	nr_sequencia_w, 
	nr_seq_tabela_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	select	count(*) 
	into STRICT	qt_regras_w 
	from	pls_plano_preco 
	where	nr_seq_tabela	= nr_seq_tabela_w;
	 
	if (qt_regras_w > 0) then 
	open C02;
	loop 
	fetch C02 into	 
		nr_seq_preco_w, 
		vl_preco_w,	 
		vl_preco_nao_subsid_base_w, 
		vl_minimo_atual_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		select	max(nr_sequencia) 
		into STRICT	nr_seq_reajuste_w 
		from	pls_reajuste_preco 
		where	nr_seq_preco	= nr_seq_preco_w 
		and	dt_reajuste	= (	SELECT	max(dt_reajuste) 
						from	pls_reajuste_preco 
						where	nr_seq_preco	= nr_seq_preco_w);
						 
		select	coalesce(ie_truncar_valor_reajuste,'N') 
		into STRICT	ie_truncar_valor_reajuste_w 
		from	pls_parametros 
		where	cd_estabelecimento	= cd_estabelecimento_p;
		 
		if (nr_seq_reajuste_w > 0) then 
			if (ie_truncar_valor_reajuste_w = 'N') then 
				select (coalesce(vl_reajustado,0) / 100) * pr_reajuste_w, 
					vl_reajustado, 
					(coalesce(vl_preco_nao_subsidiado,0) / 100) * pr_reajuste_w, 
					(coalesce(vl_minimo,0) / 100) * pr_reajuste_w 
				into STRICT	vl_reajuste_w, 
					vl_reajustado_w, 
					vl_reajuste_nao_subsidiado_w, 
					vl_minimo_w 
				from	pls_reajuste_preco 
				where	nr_sequencia	= nr_seq_reajuste_w;
			else 
				select	trunc((coalesce(vl_reajustado,0) / 100) * pr_reajuste_w,2), 
					vl_reajustado, 
					trunc((coalesce(vl_preco_nao_subsidiado,0) / 100) * pr_reajuste_w,2), 
					trunc((coalesce(vl_minimo,0) / 100) * pr_reajuste_w,2) 
				into STRICT	vl_reajuste_w, 
					vl_reajustado_w, 
					vl_reajuste_nao_subsidiado_w, 
					vl_minimo_w 
				from	pls_reajuste_preco 
				where	nr_sequencia	= nr_seq_reajuste_w;
			end if;
			 
			vl_base_w	:= vl_reajustado_w;
		else 
			if (ie_truncar_valor_reajuste_w = 'N') then 
				select (vl_preco_w / 100) * pr_reajuste_w, 
					(vl_preco_nao_subsid_base_w / 100) * pr_reajuste_w, 
					(vl_minimo_atual_w / 100) * pr_reajuste_w 
				into STRICT	vl_reajuste_w, 
					vl_reajuste_nao_subsidiado_w, 
					vl_minimo_w 
				;
			else 
				select	trunc((vl_preco_w / 100) * pr_reajuste_w,2), 
					trunc((vl_preco_nao_subsid_base_w / 100) * pr_reajuste_w,2), 
					trunc((vl_minimo_atual_w / 100) * pr_reajuste_w,2) 
				into STRICT	vl_reajuste_w, 
					vl_reajuste_nao_subsidiado_w, 
					vl_minimo_w 
				;
			end if;			
			 
			vl_minimo_w	:= coalesce(vl_minimo_w,0);
			vl_base_w	:= vl_preco_w;
		end if;
		 
		select	nextval('pls_reajuste_preco_seq') 
		into STRICT	nr_seq_reaj_preco_w 
		;
		 
		insert into pls_reajuste_preco(nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			dt_reajuste, 
			nr_seq_preco, 
			nr_seq_reajuste, 
			vl_base, 
			pr_reajustado, 
			vl_reajustado, 
			nr_seq_tabela, 
			dt_periodo_inicial, 
			dt_periodo_final, 
			dt_autorizacao_ans, 
			vl_preco_nao_subsidiado, 
			vl_preco_nao_subsid_base, 
			vl_minimo, 
			vl_minimo_base) 
		values (nr_seq_reaj_preco_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			dt_reajuste_w, 
			nr_seq_preco_w, 
			nr_seq_reajuste_p, 
			vl_base_w, 
			pr_reajuste_w, 
			vl_base_w + vl_reajuste_w, 
			nr_sequencia_w, 
			dt_periodo_inicial_w, 
			dt_periodo_final_w, 
			dt_autorizacao_ans_w, 
			vl_preco_nao_subsid_base_w + vl_reajuste_nao_subsidiado_w, 
			vl_preco_nao_subsid_base_w, 
			vl_minimo_atual_w + vl_minimo_w, 
			vl_minimo_atual_w);
		end;
	end loop;
	close C02;
	end if;
	end;
end loop;
close C01;
	 
if (coalesce(ie_commit_p,'S') = 'S') then 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_reajuste_sca ( nm_usuario_p text, nr_seq_reajuste_p bigint, ie_commit_p text, cd_estabelecimento_p text) FROM PUBLIC;

