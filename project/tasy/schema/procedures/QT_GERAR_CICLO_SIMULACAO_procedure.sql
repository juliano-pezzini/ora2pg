-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (ds_dias_aplicacao	varchar(6));


CREATE OR REPLACE PROCEDURE qt_gerar_ciclo_simulacao (nr_seq_paciente_p bigint, dt_inicio_p timestamp, nr_seq_protocolo_p bigint, nr_ciclo_inicial_p bigint, nr_ciclo_final_p bigint, nr_dia_inicial_p bigint, nr_dia_final_p bigint, nr_atendimento_p bigint, qt_peso_p bigint, nm_usuario_p text, ie_gera_data_real_p text, ie_consiste_dia_util_p text) AS $body$
DECLARE

 
 
i 			integer;
y 			integer;
k 			integer	:= 1;
z 			integer;
x			varchar(1);
r			integer := 1;
cd_material_w		integer;
cd_unidade_medida_w	varchar(30);
qt_dose_w		double precision;
ie_via_aplicacao_w		varchar(5);
ds_recomendacao_w	varchar(2000);
nr_agrupamento_w		double precision;
ds_dias_aplicacao_w	varchar(255);
ds_ciclos_aplicacao_w	varchar(255);

cd_material_ww		integer;
cd_unidade_medida_ww	varchar(30);
qt_dose_ww		double precision;
ie_via_aplicacao_ww	varchar(5);
ds_recomendacao_ww	varchar(2000);
nr_agrupamento_ww	double precision;
ds_dias_aplicacao_ww	varchar(255);
ds_observacao_w		varchar(255);
ds_observacao_ww		varchar(255);

nr_seq_diluicao_w		bigint;
ds_valido_dias_w 		varchar(13)	:= '0123456789D,-';
ds_valido_ciclos_w		varchar(13)	:= '0123456789C,';
ds_texto_w		varchar(255);
type vetor is table of campos index by integer;
dias_w			vetor;
posicao_w		smallint;
dia_w			varchar(5);
dt_prevista_w		timestamp;
dt_real_w			timestamp;
nr_seq_atendimento_w	bigint;
nr_seq_material_w		bigint;
nr_seq_material_ww	bigint;
nr_seq_mat_w		bigint;
nr_seq_mat_dil_w		bigint;
cont_w			bigint;
qt_min_aplicacao_w	smallint;
qt_hora_aplicacao_w	smallint;
qt_hora_aplicacao_ww	smallint;
ie_bomba_infusao_w	varchar(1);
qt_min_aplicacao_ww	smallint;
ie_bomba_infusao_ww	varchar(1);
cd_intervalo_w		varchar(7);
cd_intervalo_ww		varchar(7);
ie_dia_util_w		varchar(1);
cd_estabelecimento_w	smallint;
qt_count_w		bigint;
qt_nao_util_w		smallint	:= 0;	
qt_dias_intervalo_w		smallint;	
dt_inicio_w		timestamp;
dt_inicio_ww		timestamp;
qt_dias_util_w		smallint;
qt_dias_util_ww		smallint;
qt_material_w		bigint;
nr_dia_inicial_w		varchar(15);
nr_dia_final_w		varchar(10);
ie_generico_w		varchar(1);
nr_seq_interno_w		bigint;
nr_seq_interno_ww		bigint;
nr_seq_int_prot_medic_w 	bigint;
vl_parametro_w		varchar(5)	:= 'N';
qt_registro_w		bigint;
ie_tem_prescricao_w	varchar(1);
ie_exige_liberacao_w	varchar(1);
ie_laudo_quimio_w		varchar(1);
cd_pessoa_fisica_w	varchar(10);
nr_atendimento_w		bigint;
ie_tipo_convenio_w		smallint;
ie_se_necessario_w	varchar(1);
ie_aplic_lenta_w    	varchar(1);
ie_urgencia_w      	varchar(1);
ie_aplic_bolus_w		varchar(1);
ie_se_necessario_ww	varchar(1);
ie_aplic_lenta_ww    	varchar(1);
ie_urgencia_ww     	varchar(1);
ie_aplic_bolus_ww		varchar(1);
cd_unid_med_prescr_w	varchar(30);
qt_dose_prescr_w		double precision;
cd_material_convertido_w 	bigint;
cd_convenio_w		integer;
ie_gerar_autor_w		varchar(1)	:= 'N';
qt_reg_w			bigint;
ie_pre_medicacao_w	varchar(1);
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_seq_proc_interno_w	bigint;
qt_procedimento_w		double precision;
ie_lado_w		varchar(10);
nr_seq_procedimento_w	integer;
ie_consiste_dia_prim_ciclo_w	varchar(10);
nr_seq_solucao_w		bigint;
ie_tipo_dosagem_w		varchar(3);
qt_dosagem_w		double precision;
qt_solucao_total_w 		double precision;
qt_tempo_aplicacao_w	double precision;
nr_etapas_w		smallint;
--ie_bomba_infusao_w	varchar2(1); 
ie_esquema_alternado_w	varchar(1);
ie_calc_aut_w 		varchar(1);
ie_acm_w		varchar(1);
qt_hora_fase_w		double precision;
ds_solucao_w		varchar(100);
ds_orientacao_w		varchar(255);
--ie_se_necessario_w	varchar2(1); 
ie_solucao_pca_w		varchar(1);
ie_tipo_analgesia_w	varchar(15);
ie_pca_modo_prog_w 	varchar(15);
qt_dose_inicial_pca_w	double precision;
qt_vol_infusao_pca_w	double precision;
qt_bolus_pca_w		double precision;
qt_intervalo_bloqueio_w	double precision;
qt_limite_quatro_hora_w	double precision;
qt_dose_ataque_w 		double precision;
ie_tipo_sol_w		varchar(5);
dt_atual_w		timestamp	:= clock_timestamp();
dt_atualizacao_nrec_w	timestamp;
qt_auc_w			real;
ie_agrupador_w     	smallint;
ie_pre_medicao_w 		varchar(1);
qt_tempo_medic_w		bigint;		
pr_reducao_w		bigint;
ie_separar_w		varchar(1)	:= 'N';
nr_seq_paciente_w		bigint;
ie_gerar_solucao_w		varchar(1);
qt_mg_carboplatina_w	double precision;
qt_clearance_creatinina_w	 double precision;
qt_creatinina_w		real;
ds_dias_gerados_w		varchar(4000)	:= null;
nr_seq_evento_w		bigint;
cd_grupo_material_w	bigint;
cd_subgrupo_material_w	bigint;
cd_classe_material_w	bigint;
ie_regra_diluicao_cad_mat_w	varchar(1);
cd_estab_usuario_w	smallint;
cd_protocolo_w			bigint;
nr_seq_medicacao_w		bigint;

c01 CURSOR FOR 
	SELECT	CASE WHEN ie_generico_w='S' THEN coalesce(b.cd_material_generico,a.cd_material)  ELSE a.cd_material END , 
		a.qt_dose, 
		a.ds_recomendacao, 
		a.ds_dias_aplicacao, 
		a.ds_ciclos_aplicacao, 
		a.cd_intervalo, 
		nr_agrupamento, 
		a.ie_bomba_infusao, 
		a.qt_hora_aplicacao, 
		a.qt_min_aplicacao 
	from	material b, 
		paciente_prot_medic_sim a 
	where	a.cd_material		= b.cd_material 
	and	a.nr_seq_paciente	= nr_seq_paciente_p 
	and	coalesce(a.nr_seq_diluicao::text, '') = '' 
	and	coalesce(a.nr_seq_solucao::text, '') = '';

c03 CURSOR FOR 
	SELECT	a.cd_procedimento, 
		a.ds_dias_aplicacao, 
		a.cd_intervalo 
	from	paciente_prot_proc_sim a 
	where	a.nr_seq_paciente = nr_seq_paciente_p 
	order by nr_agrupamento;

 
c04 CURSOR FOR 
	SELECT	a.ds_dias_aplicacao, 
		a.ds_ciclos_aplicacao, 
		a.ds_solucao, 
		a.nr_seq_solucao, 
		ie_esquema_alternado, 
		ie_calc_aut, 
		ie_acm, 
		qt_tempo_aplicacao 
	from	paciente_prot_soluc_sim a 
	where	a.nr_seq_paciente = nr_seq_paciente_p 
	order by nr_agrupamento;

	procedure registrar_dia_gerado(dt_dia_p	timestamp, nr_ciclo_p bigint, ds_dia_ciclo_p text) is 
	;
BEGIN
	 
	ds_dias_gerados_w	:= substr(ds_dias_gerados_w||WHEB_MENSAGEM_PCK.get_texto(280707)||nr_ciclo_p|| WHEB_MENSAGEM_PCK.get_texto(280708)||ds_dia_ciclo_p||WHEB_MENSAGEM_PCK.get_texto(280709)||to_char(dt_dia_p,'dd/mm/yyyy hh24:mi:ss') ||chr(13)||chr(10),1,4000);	
	end;
 
 
begin 
cd_estab_usuario_w	:= wheb_usuario_pck.get_cd_estabelecimento;
nr_atendimento_w	:= null;
if (nr_atendimento_p > 0) then 
	begin 
	nr_atendimento_w	:= nr_atendimento_p;
	select	max(ie_tipo_convenio), 
		max(obter_convenio_atendimento(nr_atendimento)) 
	into STRICT	ie_tipo_convenio_w, 
		cd_convenio_w 
	from	atendimento_paciente 
	where	nr_atendimento	= nr_atendimento_w;
	end;
end if;
 
ie_generico_w := obter_param_usuario(281, 136, obter_perfil_ativo, nm_usuario_p, cd_estab_usuario_w, ie_generico_w);
ie_laudo_quimio_w := obter_param_usuario(281, 134, obter_perfil_ativo, nm_usuario_p, cd_estab_usuario_w, ie_laudo_quimio_w);
ie_consiste_dia_prim_ciclo_w := obter_param_usuario(281, 617, obter_perfil_ativo, nm_usuario_p, cd_estab_usuario_w, ie_consiste_dia_prim_ciclo_w);
ie_separar_w := obter_param_usuario(281, 825, obter_perfil_ativo, nm_usuario_p, cd_estab_usuario_w, ie_separar_w);
 
 
nr_dia_inicial_w	:= 'D'|| to_char(nr_dia_inicial_p);
if (nr_dia_final_p IS NOT NULL AND nr_dia_final_p::text <> '') then 
	nr_dia_final_w		:= 'D'|| to_char(nr_dia_final_p);
end if;
 
select	coalesce(max(coalesce(a.qt_dias_intervalo,b.nr_dias_intervalo)),0), 
	max(a.cd_pessoa_fisica), 
	max(a.qt_auc), 
	max(a.qt_tempo_medic), 
	max(a.pr_reducao) 
into STRICT	qt_dias_intervalo_w, 
	cd_pessoa_fisica_w, 
	qt_auc_w, 
	qt_tempo_medic_w, 
	pr_reducao_w 
FROM paciente_setor_sim a
LEFT OUTER JOIN protocolo_medicacao b ON (a.cd_protocolo = b.cd_protocolo AND a.nr_seq_medicacao = b.nr_sequencia)
WHERE a.nr_sequencia		= nr_seq_paciente_p;
 
select 	max(cd_protocolo), 
	max(nr_seq_medicacao) 
into STRICT	cd_protocolo_w, 
	nr_seq_medicacao_w 
from	paciente_setor 
where	nr_seq_paciente = nr_seq_paciente_p;
 
if (ie_laudo_quimio_w = 'S') and (ie_tipo_convenio_w = 3) then 
	select	substr(obter_se_laudo_vigente(cd_pessoa_fisica_w,dt_inicio_p,1),1,1) 
	into STRICT	ie_laudo_quimio_w 
	;
	if (ie_laudo_quimio_w = 'N') then 
		CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280710);
	end if;
end if;
dt_inicio_w	:= dt_inicio_p;
if (nr_dia_inicial_p	> 0) then 
	dt_inicio_w	:= dt_inicio_p - nr_dia_inicial_p;
end if;
 
select	coalesce(max(b.cd_estabelecimento),1) 
into STRICT	cd_estabelecimento_w 
from	paciente_setor_sim		b, 
	paciente_atendimento_sim	a 
where	a.nr_seq_paciente		= b.nr_sequencia 
and	a.nr_sequencia	= nr_seq_paciente_p;
 
select	coalesce(obter_valor_param_usuario(281, 142, obter_perfil_ativo, nm_usuario_p, coalesce(cd_estab_usuario_w,cd_estabelecimento_w)),'N') 
into STRICT	vl_parametro_w
;
 
if (vl_parametro_w	= 'S') then 
	CALL consiste_onco_laudo_apac(dt_inicio_p, nr_seq_paciente_p, nr_ciclo_inicial_p, nr_ciclo_final_p, nr_dia_inicial_p, nr_dia_final_p, cd_estabelecimento_w, nm_usuario_p);
end if;
 
ie_gerar_autor_w := obter_param_usuario(281, 385, obter_perfil_ativo, nm_usuario_p, coalesce(cd_estab_usuario_w,cd_estabelecimento_w), ie_gerar_autor_w);
 
for i in nr_ciclo_inicial_p..nr_ciclo_final_p loop 
	begin 
	qt_nao_util_w	:= 0;
	open c01;
	loop 
	fetch c01 into 
		cd_material_w, 
		qt_dose_w, 
		ds_recomendacao_w, 
		ds_dias_aplicacao_w, 
		ds_ciclos_aplicacao_w, 
		cd_intervalo_w, 
		nr_agrupamento_w, 
		ie_bomba_infusao_w, 
		qt_hora_aplicacao_w, 
		qt_min_aplicacao_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		 
		select	coalesce(max(cd_material_comercial),0) 
		into STRICT	cd_material_convertido_w 
		from	conversao_medic_onco 
		where	cd_material_generico = cd_material_w 
		and	((ie_tipo_convenio = coalesce(ie_tipo_convenio_w,0)) or (coalesce(ie_tipo_convenio::text, '') = '')) 
		and	((cd_convenio = coalesce(cd_convenio_w,0)) or (coalesce(cd_convenio::text, '') = '')) 
		and	ie_situacao = 'A';
		 
		if (cd_material_convertido_w > 0) then 
			cd_material_w := cd_material_convertido_w;
		end if;
		 
		if (ds_ciclos_aplicacao_w IS NOT NULL AND ds_ciclos_aplicacao_w::text <> '') then 
			ds_ciclos_aplicacao_w	:= replace(ds_ciclos_aplicacao_w,' ','');
			ds_texto_w		:= '';
			for y in 1..length(ds_ciclos_aplicacao_w) loop 
				x	:= substr(upper(ds_ciclos_aplicacao_w), y, 1);	
				if (position(x in ds_valido_ciclos_w) > 0) then 
					ds_texto_w	:= ds_texto_w || x;
				else 
					CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280712, 'CD_MATERIAL='|| cd_material_w);
				end if;
			end loop;
			ds_ciclos_aplicacao_w	:= ds_texto_w;
			ds_ciclos_aplicacao_w	:= ',' || ds_ciclos_aplicacao_w || ',';
		end if;
		 
		ds_dias_aplicacao_w	:= replace(ds_dias_aplicacao_w,' ','');
		ds_texto_w		:= '';
		for y in 1..length(ds_dias_aplicacao_w) loop 
			x	:= substr(upper(ds_dias_aplicacao_w), y, 1);	
			if (position(x in ds_valido_dias_w) > 0) then 
				ds_texto_w	:= ds_texto_w || x;
			else 
				CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280715, 'CD_MATERIAL='|| cd_material_w);
			end if;
		end loop;
		ds_dias_aplicacao_w	:= ds_texto_w;
		z	:= 0;
		ds_dias_aplicacao_w	:= ds_dias_aplicacao_w ||',';
		cont_w	:= 0;
		dias_w.delete;
		while	(ds_dias_aplicacao_w IS NOT NULL AND ds_dias_aplicacao_w::text <> '') loop 
			begin 
			posicao_w	:= position(',' in ds_dias_aplicacao_w);
			z := z + 1;
			dias_w[z].ds_dias_aplicacao	:= substr(ds_dias_aplicacao_w,1,posicao_w - 1);
			ds_dias_aplicacao_w		:= substr(ds_dias_aplicacao_w,posicao_w + 1,length(ds_dias_aplicacao_w));
			cont_w	:= cont_w + 1;
			if (cont_w > 100) then 
				exit;
			end if;
			end;
		end loop;
		 
		r		:= 1;
		k		:= 1;
		qt_count_w	:= dias_w.count;
		while(r <= qt_count_w) loop 
			begin 
			 
			 
			 
			begin 
			dia_w	:= dias_w[k].ds_dias_aplicacao;
			dia_w	:= substr(dia_w,2,length(dia_w));
			dia_w	:= dia_w + qt_nao_util_w; /* Soma o dia do ciclo mais a quantidade de dias não úteis*/
			exception 
				when others then 
				CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280716, 'CD_MATERIAL='|| cd_material_w);
			end;
					 
			if	((coalesce(ds_ciclos_aplicacao_w::text, '') = '') or (position(',C'||i||',' in ds_ciclos_aplicacao_w) > 0 )) and ((campo_numerico(dia_w) IS NOT NULL AND (campo_numerico(dia_w))::text <> '')) and (somente_numero_real(nr_dia_inicial_w) <= somente_numero_real(dias_w[k].ds_dias_aplicacao)) and 
				((coalesce(nr_dia_final_p::text, '') = '') or (somente_numero_real(nr_dia_final_w) >= somente_numero_real(dias_w[k].ds_dias_aplicacao))) then 
				dt_prevista_w := dt_inicio_w + (dia_w)::numeric;
				if (dt_prevista_w < clock_timestamp()) and (position('-' in somente_numero_real(dias_w[k].ds_dias_aplicacao)) = 0) then 
					dt_prevista_w	:= clock_timestamp(); /* Felipe - OS 31185 Se a data gerada do ciclo for menos que sysdate a data recebe sysdate */
				end if;	
 
				 
				if (i	> nr_ciclo_inicial_p)	and (ie_consiste_dia_prim_ciclo_w	= 'S')then 
					nr_dia_inicial_w	:= -99999999;
				end if;
				r	:= r + 1;
				if (r > 100) then 
					CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280717);			
				end if;
 
				if (ie_gera_data_real_p	= 'S') then 
					dt_real_w	:= dt_prevista_w;
				end if;
				 
				ie_dia_util_w	:=	'S';
				if (ie_consiste_dia_util_p = 'S') then 
					select	obter_se_dia_util_oncologia(dt_prevista_w, cd_estabelecimento_w, nm_usuario_p,null,cd_protocolo_w,nr_seq_medicacao_w) 
					into STRICT	ie_dia_util_w 
					;
				end if;
				if (ie_dia_util_w		= 'S') then 
					begin 
 
					select	coalesce(max(nr_sequencia),0) , 
						max(dt_atualizacao_nrec) 
					into STRICT	nr_seq_atendimento_w, 
						dt_atualizacao_nrec_w 
					from	paciente_atendimento_sim 
					where	nr_seq_paciente	= nr_seq_paciente_p 
					and	nr_ciclo	= i 
					and	ds_dia_ciclo	= dias_w[k].ds_dias_aplicacao;
			--		and	((ie_exige_liberacao	= 'N') or (ie_separar_w	= 'N')); 
					--and	dt_cancelamento is null; 
 
					if (nr_seq_atendimento_w = 0) then 
						dt_atualizacao_nrec_w	:= dt_atual_w;
						select	nextval('paciente_atendimento_sim_seq') 
						into STRICT	nr_seq_atendimento_w 
						;
											 
						select 	qt_mg_carboplatina, 
							qt_clearance_creatinina, 
							qt_creatinina 
						into STRICT	qt_mg_carboplatina_w, 
							qt_clearance_creatinina_w, 
							qt_creatinina_w 
						from  paciente_setor_sim 
						where	nr_sequencia = nr_seq_paciente_p;
 
						insert into paciente_atendimento_sim( 
							nr_sequencia, 
							nr_seq_paciente, 
							nr_ciclo, 
							ds_dia_ciclo, 
							dt_prevista, 
							dt_real, 
							dt_atualizacao, 
							nm_usuario, 
							nr_seq_protocolo,	 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							qt_tempo_medic) 
						values (	nr_seq_atendimento_w, 
							nr_seq_paciente_p, 
							i, 
							dias_w[k].ds_dias_aplicacao, 
							dt_prevista_w, 
							dt_real_w, 
							dt_atual_w, 
							nm_usuario_p, 
							nr_seq_protocolo_p, 
							dt_atual_w, 
							nm_usuario_p, 
							qt_tempo_medic_w);	
					end if;
						registrar_dia_gerado(dt_prevista_w,i,dias_w[k].ds_dias_aplicacao);
					select	coalesce(max(nr_seq_material),0) + 1 
					into STRICT	nr_seq_material_w 
					from	paciente_atend_medic_sim 
					where	nr_seq_atendimento = nr_seq_atendimento_w;
					 
					select	coalesce(max(nr_seq_interno),0) + 1 
					into STRICT	nr_seq_interno_w 
					from	paciente_atend_medic_sim 
					where	nr_seq_atendimento = nr_seq_atendimento_w;
					 
					select	count(*) 
					into STRICT	qt_registro_w 
					from	paciente_atend_medic_sim a 
					where	a.nr_seq_atendimento	=	nr_seq_atendimento_w 
					and	a.cd_material		=	cd_material_w 
					and	a.qt_dose		=	qt_dose_w 
					and	a.cd_intervalo		=	cd_intervalo_w 
					and	a.ds_recomendacao	=	ds_recomendacao_w;
			 
					if (qt_registro_w = 0) and (dt_atualizacao_nrec_w	= dt_atual_w)then 
						begin 
						insert into paciente_atend_medic_sim( 
							nr_seq_atendimento, 
							nr_seq_material, 
							cd_material, 
							dt_atualizacao, 
							nm_usuario, 
							nr_agrupamento, 
							qt_dose, 
							ds_recomendacao, 
							qt_min_aplicacao, 
							cd_intervalo, 
							qt_hora_aplicacao, 
							ie_cancelada, 
							dt_atualizacao_nrec, 
							ie_bomba_infusao, 
							nm_usuario_nrec, 
							nr_seq_interno) 
						values (	nr_seq_atendimento_w, 
							nr_seq_material_w, 
							cd_material_w, 
							clock_timestamp(), 
							nm_usuario_p, 
							nr_agrupamento_w, 
							qt_dose_w, 
							ds_recomendacao_w, 
							qt_min_aplicacao_w, 
							cd_intervalo_w, 
							qt_hora_aplicacao_w, 
							'N', 
							clock_timestamp(), 
							ie_bomba_infusao_w, 
							nm_usuario_p, 
							nr_seq_interno_w);
							 
						end;
					end if;
					 
 
					k	:= k + 1;
					end;
				else	 
					qt_count_w	:= qt_count_w + 1;
					qt_nao_util_w	:= qt_nao_util_w + 1;
				end if;
			else 
				r	:= r + 1;
				k	:= k + 1;
			end if;
			end;
		end loop;	
		end;
	end loop;
	close c01;
	 
	end;
 
	open c03;
	loop 
	fetch c03 into	 
		cd_procedimento_w, 
		ds_dias_aplicacao_w, 
		cd_intervalo_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin 
		ds_dias_aplicacao_w	:= replace(ds_dias_aplicacao_w,' ','');
		ds_texto_w		:= '';
		for y in 1..length(ds_dias_aplicacao_w) loop 
			x	:= substr(upper(ds_dias_aplicacao_w), y, 1);	
			if (position(x in ds_valido_dias_w) > 0) then 
				ds_texto_w	:= ds_texto_w || x;
			else 
				CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280718, 'CD_MATERIAL='|| cd_material_w);
			end if;
		end loop;
		ds_dias_aplicacao_w	:= ds_texto_w;
		z	:= 0;
		ds_dias_aplicacao_w	:= ds_dias_aplicacao_w ||',';
		cont_w	:= 0;
		dias_w.delete;
		while	(ds_dias_aplicacao_w IS NOT NULL AND ds_dias_aplicacao_w::text <> '') loop 
			begin 
			posicao_w	:= position(',' in ds_dias_aplicacao_w);
			z := z + 1;
			dias_w[z].ds_dias_aplicacao	:= substr(ds_dias_aplicacao_w,1,posicao_w - 1);
			ds_dias_aplicacao_w		:= substr(ds_dias_aplicacao_w,posicao_w + 1,length(ds_dias_aplicacao_w));
			cont_w	:= cont_w + 1;
			if (cont_w > 100) then 
				exit;
			end if;
			end;
		end loop;
		 
		r		:= 1;
		k		:= 1;
		qt_count_w	:= dias_w.count;
		while(r <= qt_count_w) loop 
			begin 
			dia_w	:= dias_w[k].ds_dias_aplicacao;
			dia_w	:= substr(dia_w,2,length(dia_w));
			 
			dia_w	:= dia_w + qt_nao_util_w; /* Soma o dia do ciclo mais a quantidade de dias não úteis*/
			 
			if ((campo_numerico(dia_w) IS NOT NULL AND (campo_numerico(dia_w))::text <> '')) and (somente_numero_real(nr_dia_inicial_w) <= somente_numero_real(dias_w[k].ds_dias_aplicacao)) and 
				((coalesce(nr_dia_final_p::text, '') = '') or (somente_numero_real(nr_dia_final_w) >= somente_numero_real(dias_w[k].ds_dias_aplicacao))) then 
				dt_prevista_w := dt_inicio_w + (dia_w)::numeric;
				if (dt_prevista_w < clock_timestamp()) and (position('-' in somente_numero_real(dias_w[k].ds_dias_aplicacao)) = 0) then 
					dt_prevista_w	:= clock_timestamp(); /* Felipe - OS 31185 Se a data gerada do ciclo for menos que sysdate a data recebe sysdate */
				end if;			
						 
					 
				r	:= r + 1;
				if (r > 100) then 
					CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280717);			
				end if;
 
				if (ie_gera_data_real_p	= 'S') then 
					dt_real_w	:= dt_prevista_w;
				end if;
				 
				ie_dia_util_w	:=	'S';
				if (ie_consiste_dia_util_p = 'S') then 
					select	obter_se_dia_util_oncologia(dt_prevista_w, cd_estabelecimento_w, nm_usuario_p,null,cd_protocolo_w,nr_seq_medicacao_w) 
					into STRICT	ie_dia_util_w 
					;
				end if;
 
				if (ie_dia_util_w		= 'S') then 
					begin 
 
					select	coalesce(max(nr_sequencia),0) 
					into STRICT	nr_seq_atendimento_w 
					from	paciente_atendimento_sim 
					where	nr_seq_paciente	= nr_seq_paciente_p 
					and	nr_ciclo	= i 
					and	ds_dia_ciclo	= dias_w[k].ds_dias_aplicacao;
--					and	((ie_exige_liberacao	= 'N') or (ie_separar_w	= 'N')) 
--					and	dt_cancelamento is null; 
 
					if (nr_seq_atendimento_w = 0) then 
					 
						select	nextval('paciente_atendimento_sim_seq') 
						into STRICT	nr_seq_atendimento_w 
						;
						 
						select 	qt_mg_carboplatina, 
							qt_clearance_creatinina, 
							qt_creatinina 
						into STRICT	qt_mg_carboplatina_w, 
							qt_clearance_creatinina_w, 
							qt_creatinina_w 
						from  paciente_setor_sim 
						where	nr_sequencia = nr_seq_paciente_p;
 
						insert into paciente_atendimento_sim( 
							nr_sequencia, 
							nr_seq_paciente, 
							nr_ciclo, 
							ds_dia_ciclo, 
							dt_prevista, 
							dt_real, 
							dt_atualizacao, 
							nm_usuario, 
							nr_seq_protocolo, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec 
							) 
						values (	nr_seq_atendimento_w, 
							nr_seq_paciente_p, 
							i, 
							dias_w[k].ds_dias_aplicacao, 
							dt_prevista_w, 
							dt_real_w, 
							clock_timestamp(), 
							nm_usuario_p, 
							nr_seq_protocolo_p,							 
							clock_timestamp(), 
							nm_usuario_p);	
							registrar_dia_gerado(dt_prevista_w,i,dias_w[k].ds_dias_aplicacao);
					 
						end if;				
					k	:= k + 1;
					end;
				else	 
					qt_count_w	:= qt_count_w + 1;
					qt_nao_util_w	:= qt_nao_util_w + 1;
				end if;
			else 
				r	:= r + 1;
				k	:= k + 1;
			end if;
			end;
		end loop;
		 
 
		end;
	end loop;
	close c03;
	 
	 
	open c04;
	loop 
	fetch c04 into	 
		ds_dias_aplicacao_w, 
		ds_ciclos_aplicacao_w, 
		ds_solucao_w, 
		nr_seq_solucao_w, 
		ie_esquema_alternado_w, 
		ie_calc_aut_w, 
		ie_acm_w, 
		qt_tempo_aplicacao_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin 
		if (ds_ciclos_aplicacao_w IS NOT NULL AND ds_ciclos_aplicacao_w::text <> '') then 
			ds_ciclos_aplicacao_w	:= replace(ds_ciclos_aplicacao_w,' ','');
			ds_texto_w		:= '';
			for y in 1..length(ds_ciclos_aplicacao_w) loop 
				x	:= substr(upper(ds_ciclos_aplicacao_w), y, 1);	
				if (position(x in ds_valido_ciclos_w) > 0) then 
					ds_texto_w	:= ds_texto_w || x;
				else 
					CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280720, 'CD_MATERIAL=' || cd_material_w);
				end if;
			end loop;
			ds_ciclos_aplicacao_w	:= ds_texto_w;
			ds_ciclos_aplicacao_w	:= ',' || ds_ciclos_aplicacao_w || ',';
		end if;
		 
		ds_dias_aplicacao_w	:= replace(ds_dias_aplicacao_w,' ','');
		ds_texto_w		:= '';
		for y in 1..length(ds_dias_aplicacao_w) loop 
			x	:= substr(upper(ds_dias_aplicacao_w), y, 1);	
			if (position(x in ds_valido_dias_w) > 0) then 
				ds_texto_w	:= ds_texto_w || x;
			else 
				CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280719, 'DS_SOLUCAO=' ||ds_solucao_w);
			end if;
		end loop;
		ds_dias_aplicacao_w	:= ds_texto_w;
		z	:= 0;
		ds_dias_aplicacao_w	:= ds_dias_aplicacao_w ||',';
		cont_w	:= 0;
		dias_w.delete;
		while	(ds_dias_aplicacao_w IS NOT NULL AND ds_dias_aplicacao_w::text <> '') loop 
			begin 
			posicao_w	:= position(',' in ds_dias_aplicacao_w);
			z := z + 1;
			dias_w[z].ds_dias_aplicacao	:= substr(ds_dias_aplicacao_w,1,posicao_w - 1);
			ds_dias_aplicacao_w		:= substr(ds_dias_aplicacao_w,posicao_w + 1,length(ds_dias_aplicacao_w));
			cont_w	:= cont_w + 1;
			if (cont_w > 100) then 
				exit;
			end if;
			end;
		end loop;
		 
		r		:= 1;
		k		:= 1;
		qt_count_w	:= dias_w.count;
		while(r <= qt_count_w) loop 
			begin 
			dia_w	:= dias_w[k].ds_dias_aplicacao;
			dia_w	:= substr(dia_w,2,length(dia_w));
			 
			dia_w	:= dia_w + qt_nao_util_w; /* Soma o dia do ciclo mais a quantidade de dias não úteis*/
			 
			if	((coalesce(ds_ciclos_aplicacao_w::text, '') = '') or (position(',C'||i||',' in ds_ciclos_aplicacao_w) > 0 )) and ((campo_numerico(dia_w) IS NOT NULL AND (campo_numerico(dia_w))::text <> '')) and (somente_numero_real(nr_dia_inicial_w) <= somente_numero_real(dias_w[k].ds_dias_aplicacao)) and 
				((coalesce(nr_dia_final_p::text, '') = '') or (somente_numero_real(nr_dia_final_w) >= somente_numero_real(dias_w[k].ds_dias_aplicacao))) then 
				dt_prevista_w := dt_inicio_w + (dia_w)::numeric;
				if (dt_prevista_w < clock_timestamp()) and (position('-' in somente_numero_real(dias_w[k].ds_dias_aplicacao)) = 0) then 
					dt_prevista_w	:= clock_timestamp(); /* Felipe - OS 31185 Se a data gerada do ciclo for menos que sysdate a data recebe sysdate */
				end if;			
						 
					 
				r	:= r + 1;
				if (r > 100) then 
					CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280717);			
				end if;
 
				if (ie_gera_data_real_p	= 'S') then 
					dt_real_w	:= dt_prevista_w;
				end if;
				 
				ie_dia_util_w	:=	'S';
				if (ie_consiste_dia_util_p = 'S') then 
					select	obter_se_dia_util_oncologia(dt_prevista_w, cd_estabelecimento_w, nm_usuario_p,null,cd_protocolo_w,nr_seq_medicacao_w) 
					into STRICT	ie_dia_util_w 
					;
				end if;
 
				if (ie_dia_util_w		= 'S') then 
					begin 
 
					select	coalesce(max(nr_sequencia),0) 
					into STRICT	nr_seq_atendimento_w 
					from	paciente_atendimento_sim 
					where	nr_seq_paciente	= nr_seq_paciente_p 
					and	nr_ciclo	= i 
					and	ds_dia_ciclo	= dias_w[k].ds_dias_aplicacao;
--					and	((ie_exige_liberacao	= 'N') or (ie_separar_w	= 'N')) 
--					and	dt_cancelamento is null; 
 
					if (nr_seq_atendimento_w = 0) then 
						begin 
						 
						select	nextval('paciente_atendimento_sim_seq') 
						into STRICT	nr_seq_atendimento_w 
						;
						 
						select 	qt_mg_carboplatina, 
							qt_clearance_creatinina, 
							qt_creatinina 
						into STRICT	qt_mg_carboplatina_w, 
							qt_clearance_creatinina_w, 
							qt_creatinina_w 
						from  paciente_setor_sim 
						where	nr_sequencia = nr_seq_paciente_p;
 
						insert into paciente_atendimento_sim( 
							nr_sequencia, 
							nr_seq_paciente, 
							nr_ciclo, 
							ds_dia_ciclo, 
							dt_prevista, 
							dt_real, 
							dt_atualizacao, 
							nm_usuario, 
							nr_seq_protocolo, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec) 
						values (	nr_seq_atendimento_w, 
							nr_seq_paciente_p, 
							i, 
							dias_w[k].ds_dias_aplicacao, 
							dt_prevista_w, 
							dt_real_w, 
							clock_timestamp(), 
							nm_usuario_p, 
							nr_seq_protocolo_p, 
							clock_timestamp(), 
							nm_usuario_p);
 
						registrar_dia_gerado(dt_prevista_w,i,dias_w[k].ds_dias_aplicacao);
							end;
					end if;
					 
					 
					insert into paciente_atend_soluc_sim( 
							nr_seq_atendimento, 
							nr_seq_solucao, 
							nr_agrupamento, 
							dt_atualizacao, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							qt_tempo_aplicacao, 
							ie_bomba_infusao, 
							ie_esquema_alternado, 
							ie_calc_aut, 
							ie_acm) 
					values (		nr_seq_atendimento_w, 
							nr_seq_solucao_w, 
							nr_agrupamento_w, 
							clock_timestamp(), 
							nm_usuario_p, 
							clock_timestamp(), 
							nm_usuario_p, 
							qt_tempo_aplicacao_w, 
							ie_bomba_infusao_w, 
							ie_esquema_alternado_w, 
							ie_calc_aut_w, 
							ie_acm_w);					
					 
					k	:= k + 1;
					end;
				else	 
					qt_count_w	:= qt_count_w + 1;
					qt_nao_util_w	:= qt_nao_util_w + 1;
				end if;
			else 
				r	:= r + 1;
				k	:= k + 1;
			end if;
			end;
		end loop;
		 
 
		end;
	end loop;
	close c04;
	 
	/* Francisco - OS 129072 - 14/03/2009 - Gerar autorizacao convenio */
 
	if (ie_gerar_autor_w = 'S') or (ie_gerar_autor_w = 'T') then 
		CALL gerar_autor_conv_quimioterapia(nr_seq_paciente_p,i,nm_usuario_p,'N');
	end if;
	 
	dt_inicio_w	:= dt_inicio_w + qt_dias_intervalo_w;
	 
end loop;
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE qt_gerar_ciclo_simulacao (nr_seq_paciente_p bigint, dt_inicio_p timestamp, nr_seq_protocolo_p bigint, nr_ciclo_inicial_p bigint, nr_ciclo_final_p bigint, nr_dia_inicial_p bigint, nr_dia_final_p bigint, nr_atendimento_p bigint, qt_peso_p bigint, nm_usuario_p text, ie_gera_data_real_p text, ie_consiste_dia_util_p text) FROM PUBLIC;

