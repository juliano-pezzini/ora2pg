-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE con_consiste_troca_plano ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE



qt_consistencia_w		bigint;
qt_existe_vigencia_w	integer;
cd_conta_origem_w	varchar(20);
cd_conta_destino_w	varchar(20);
dt_inicio_vigencia_w	timestamp;
dt_fim_vigencia_w		timestamp;
dt_troca_prevista_w	timestamp;


c01 CURSOR FOR
SELECT	b.dt_troca_prevista,
	a.cd_conta_origem,
	a.cd_conta_destino
from	ctb_troca_plano b,
	ctb_troca_plano_conta a
where	a.nr_seq_troca = b.nr_sequencia
and	a.nr_seq_troca = nr_sequencia_p;


BEGIN

select	count(*)
into STRICT	qt_consistencia_w
from	ctb_troca_plano
where	nr_sequencia = nr_sequencia_p
and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
if (qt_consistencia_w = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(282043);
end if;

select	count(*)
into STRICT	qt_consistencia_w
from	ctb_troca_plano_conta
where	nr_seq_troca = nr_sequencia_p;
if (qt_consistencia_w = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(282044);
end if;

delete
from	ctb_troca_plano_consist
where	nr_seq_troca = nr_sequencia_p;

update	ctb_troca_plano
set	dt_consistencia  = NULL
where	nr_sequencia = nr_sequencia_p;

open C01;
loop
fetch C01 into
	dt_troca_prevista_w,
	cd_conta_origem_w,
	cd_conta_destino_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	/*Consistencias da conta de origem*/

	select	count(*)
	into STRICT	qt_existe_vigencia_w
	from	conta_contabil
	where	cd_conta_contabil = cd_conta_origem_w
	and	(dt_inicio_vigencia IS NOT NULL AND dt_inicio_vigencia::text <> '')
	and	(dt_fim_vigencia IS NOT NULL AND dt_fim_vigencia::text <> '');

	if (qt_existe_vigencia_w = 0) then
		begin
		insert into ctb_troca_plano_consist(
				nr_sequencia,				nr_seq_troca,
				dt_atualizacao,				nm_usuario,
				dt_atualizacao_nrec,			nm_usuario_nrec,
				nm_tabela,				nm_atributo,
				cd_conta_contabil,
				ds_consistencia)
			values (nextval('ctb_troca_plano_consist_seq'),		nr_sequencia_p,
				clock_timestamp(),					nm_usuario_p,
				clock_timestamp(),					nm_usuario_p,
				'CONTA_CONTABIL',			'CD_CONTA_CONTABIL',
				cd_conta_origem_w,
				WHEB_MENSAGEM_PCK.get_texto(282054,null));
		end;
	elsif (qt_existe_vigencia_w > 0) then
		begin
		select	dt_inicio_vigencia,
			dt_fim_vigencia
		into STRICT	dt_inicio_vigencia_w,
			dt_fim_vigencia_w
		from	conta_contabil
		where	cd_conta_contabil = cd_conta_origem_w;

		if (dt_fim_vigencia_w > dt_troca_prevista_w) then
			insert into ctb_troca_plano_consist(
				nr_sequencia,				nr_seq_troca,
				dt_atualizacao,				nm_usuario,
				dt_atualizacao_nrec,			nm_usuario_nrec,
				nm_tabela,				nm_atributo,
				cd_conta_contabil,
				ds_consistencia)
			values ( nextval('ctb_troca_plano_consist_seq'),		nr_sequencia_p,
				clock_timestamp(),					nm_usuario_p,
				clock_timestamp(),					nm_usuario_p,
				'CONTA_CONTABIL',			'CD_CONTA_CONTABIL',
				cd_conta_origem_w,
				WHEB_MENSAGEM_PCK.get_texto(282055,null));
		end if;
		end;
	end if;

	/*Consistencias das tabelas que tenham a conta de origem*/

	select	count(*)
	into STRICT	qt_existe_vigencia_w
	from	parametros_conta_contabil
	where	(dt_inicio_vigencia IS NOT NULL AND dt_inicio_vigencia::text <> '')
	and	(dt_fim_vigencia IS NOT NULL AND dt_fim_vigencia::text <> '')
	and	dt_fim_vigencia > dt_troca_prevista_w
	and	cd_conta_receita = cd_conta_origem_w;

	if (qt_existe_vigencia_w > 0) then
		insert into ctb_troca_plano_consist(
			nr_sequencia,				nr_seq_troca,
			dt_atualizacao,				nm_usuario,
			dt_atualizacao_nrec,			nm_usuario_nrec,
			nm_tabela,				nm_atributo,
			cd_conta_contabil,
			ds_consistencia)
		values ( nextval('ctb_troca_plano_consist_seq'),		nr_sequencia_p,
			clock_timestamp(),					nm_usuario_p,
			clock_timestamp(),					nm_usuario_p,
			'PARAMETROS_CONTA_CONTABIL',		'CD_CONTA_RECEITA',
			cd_conta_origem_w,
			WHEB_MENSAGEM_PCK.get_texto(282056,null));
	end if;

	select	count(*)
	into STRICT	qt_existe_vigencia_w
	from	parametros_conta_contabil
	where	(dt_inicio_vigencia IS NOT NULL AND dt_inicio_vigencia::text <> '')
	and	(dt_fim_vigencia IS NOT NULL AND dt_fim_vigencia::text <> '')
	and	dt_fim_vigencia > dt_troca_prevista_w
	and	cd_conta_estoque = cd_conta_origem_w;
	if (qt_existe_vigencia_w > 0) then
		insert into ctb_troca_plano_consist(
			nr_sequencia,				nr_seq_troca,
			dt_atualizacao,				nm_usuario,
			dt_atualizacao_nrec,			nm_usuario_nrec,
			nm_tabela,				nm_atributo,
			cd_conta_contabil,
			ds_consistencia)
		values ( nextval('ctb_troca_plano_consist_seq'),		nr_sequencia_p,
			clock_timestamp(),					nm_usuario_p,
			clock_timestamp(),					nm_usuario_p,
			'PARAMETROS_CONTA_CONTABIL',		'CD_CONTA_ESTOQUE',
			cd_conta_origem_w,
			WHEB_MENSAGEM_PCK.get_texto(282056,null));
	end if;

	select	count(*)
	into STRICT	qt_existe_vigencia_w
	from	parametros_conta_contabil
	where	(dt_inicio_vigencia IS NOT NULL AND dt_inicio_vigencia::text <> '')
	and	(dt_fim_vigencia IS NOT NULL AND dt_fim_vigencia::text <> '')
	and	dt_fim_vigencia > dt_troca_prevista_w
	and	cd_conta_passag_direta = cd_conta_origem_w;
	if (qt_existe_vigencia_w > 0) then
		insert into ctb_troca_plano_consist(
			nr_sequencia,				nr_seq_troca,
			dt_atualizacao,				nm_usuario,
			dt_atualizacao_nrec,			nm_usuario_nrec,
			nm_tabela,				nm_atributo,
			cd_conta_contabil,
			ds_consistencia)
		values ( nextval('ctb_troca_plano_consist_seq'),		nr_sequencia_p,
			clock_timestamp(),					nm_usuario_p,
			clock_timestamp(),					nm_usuario_p,
			'PARAMETROS_CONTA_CONTABIL',		'CD_CONTA_PASSAG_DIRETA',
			cd_conta_origem_w,
			WHEB_MENSAGEM_PCK.get_texto(282056,null));
	end if;

	select	count(*)
	into STRICT	qt_existe_vigencia_w
	from	trans_financ_contab
	where	(dt_inicio_vigencia IS NOT NULL AND dt_inicio_vigencia::text <> '')
	and	(dt_fim_vigencia IS NOT NULL AND dt_fim_vigencia::text <> '')
	and	dt_fim_vigencia > dt_troca_prevista_w
	and	cd_conta_contabil = cd_conta_origem_w;
	if (qt_existe_vigencia_w > 0) then
		insert into ctb_troca_plano_consist(
			nr_sequencia,				nr_seq_troca,
			dt_atualizacao,				nm_usuario,
			dt_atualizacao_nrec,			nm_usuario_nrec,
			nm_tabela,				nm_atributo,
			cd_conta_contabil,
			ds_consistencia)
		values ( nextval('ctb_troca_plano_consist_seq'),		nr_sequencia_p,
			clock_timestamp(),					nm_usuario_p,
			clock_timestamp(),					nm_usuario_p,
			'TRANS_FINANC_CONTAB',			'CD_CONTA_CONTABIL',
			cd_conta_origem_w,
			WHEB_MENSAGEM_PCK.get_texto(282057,null));
	end if;

	/*Consistencias da conta de destino*/

	select	count(*)
	into STRICT	qt_existe_vigencia_w
	from	conta_contabil
	where	cd_conta_contabil = cd_conta_destino_w
	and	(dt_inicio_vigencia IS NOT NULL AND dt_inicio_vigencia::text <> '')
	and	(dt_fim_vigencia IS NOT NULL AND dt_fim_vigencia::text <> '');

	if (qt_existe_vigencia_w = 0) then
		begin

		insert into ctb_troca_plano_consist(
				nr_sequencia,			nr_seq_troca,
				dt_atualizacao,			nm_usuario,
				dt_atualizacao_nrec,		nm_usuario_nrec,
				nm_tabela,			nm_atributo,
				cd_conta_contabil,
				ds_consistencia)
			values ( nextval('ctb_troca_plano_consist_seq'),	nr_sequencia_p,
				clock_timestamp(),				nm_usuario_p,
				clock_timestamp(),				nm_usuario_p,
				'CONTA_CONTABIL',		'CD_CONTA_CONTABIL',
				cd_conta_destino_w,
				WHEB_MENSAGEM_PCK.get_texto(282054,null));
		end;

	elsif (qt_existe_vigencia_w > 0) then
		begin
		select	dt_inicio_vigencia,
			dt_fim_vigencia
		into STRICT	dt_inicio_vigencia_w,
			dt_fim_vigencia_w
		from	conta_contabil
		where	cd_conta_contabil = cd_conta_destino_w;

		if (dt_inicio_vigencia_w < dt_troca_prevista_w) then
			insert into ctb_troca_plano_consist(
				nr_sequencia,			nr_seq_troca,
				dt_atualizacao,			nm_usuario,
				dt_atualizacao_nrec,		nm_usuario_nrec,
				nm_tabela,			nm_atributo,
				cd_conta_contabil,
				ds_consistencia)
			values ( nextval('ctb_troca_plano_consist_seq'),	nr_sequencia_p,
				clock_timestamp(),				nm_usuario_p,
				clock_timestamp(),				nm_usuario_p,
				'CONTA_CONTABIL',		'CD_CONTA_CONTABIL',
				cd_conta_destino_w,
				WHEB_MENSAGEM_PCK.get_texto(282058,null));
		end if;
		end;
	end if;

	/*Consistencias das tabelas que tenham a conta de destino*/

	select	count(*)
	into STRICT	qt_existe_vigencia_w
	from	parametros_conta_contabil
	where	(dt_inicio_vigencia IS NOT NULL AND dt_inicio_vigencia::text <> '')
	and	(dt_fim_vigencia IS NOT NULL AND dt_fim_vigencia::text <> '')
	and	dt_inicio_vigencia < dt_troca_prevista_w
	and	cd_conta_receita = cd_conta_destino_w;
	if (qt_existe_vigencia_w > 0) then
		insert into ctb_troca_plano_consist(
			nr_sequencia,				nr_seq_troca,
			dt_atualizacao,				nm_usuario,
			dt_atualizacao_nrec,			nm_usuario_nrec,
			nm_tabela,				nm_atributo,
			cd_conta_contabil,
			ds_consistencia)
		values ( nextval('ctb_troca_plano_consist_seq'),		nr_sequencia_p,
			clock_timestamp(),					nm_usuario_p,
			clock_timestamp(),					nm_usuario_p,
			'PARAMETROS_CONTA_CONTABIL',		'CD_CONTA_RECEITA',
			cd_conta_origem_w,
			WHEB_MENSAGEM_PCK.get_texto(282059,null));
	end if;

	select	count(*)
	into STRICT	qt_existe_vigencia_w
	from	parametros_conta_contabil
	where	(dt_inicio_vigencia IS NOT NULL AND dt_inicio_vigencia::text <> '')
	and	(dt_fim_vigencia IS NOT NULL AND dt_fim_vigencia::text <> '')
	and	dt_inicio_vigencia < dt_troca_prevista_w
	and	cd_conta_estoque = cd_conta_destino_w;
	if (qt_existe_vigencia_w > 0) then
		insert into ctb_troca_plano_consist(
			nr_sequencia,				nr_seq_troca,
			dt_atualizacao,				nm_usuario,
			dt_atualizacao_nrec,			nm_usuario_nrec,
			nm_tabela,				nm_atributo,
			cd_conta_contabil,
			ds_consistencia)
		values ( nextval('ctb_troca_plano_consist_seq'),		nr_sequencia_p,
			clock_timestamp(),					nm_usuario_p,
			clock_timestamp(),					nm_usuario_p,
			'PARAMETROS_CONTA_CONTABIL',		'CD_CONTA_ESTOQUE',
			cd_conta_origem_w,
			WHEB_MENSAGEM_PCK.get_texto(282059,null));
	end if;

	select	count(*)
	into STRICT	qt_existe_vigencia_w
	from	parametros_conta_contabil
	where	(dt_inicio_vigencia IS NOT NULL AND dt_inicio_vigencia::text <> '')
	and	(dt_fim_vigencia IS NOT NULL AND dt_fim_vigencia::text <> '')
	and	dt_inicio_vigencia < dt_troca_prevista_w
	and	cd_conta_passag_direta = cd_conta_destino_w;
	if (qt_existe_vigencia_w > 0) then
		insert into ctb_troca_plano_consist(
			nr_sequencia,				nr_seq_troca,
			dt_atualizacao,				nm_usuario,
			dt_atualizacao_nrec,			nm_usuario_nrec,
			nm_tabela,				nm_atributo,
			cd_conta_contabil,
			ds_consistencia)
		values ( nextval('ctb_troca_plano_consist_seq'),		nr_sequencia_p,
			clock_timestamp(),					nm_usuario_p,
			clock_timestamp(),					nm_usuario_p,
			'PARAMETROS_CONTA_CONTABIL',		'CD_CONTA_PASSAG_DIRETA',
			cd_conta_origem_w,
			WHEB_MENSAGEM_PCK.get_texto(282059,null));
	end if;

	select	count(*)
	into STRICT	qt_existe_vigencia_w
	from	trans_financ_contab
	where	(dt_inicio_vigencia IS NOT NULL AND dt_inicio_vigencia::text <> '')
	and	(dt_fim_vigencia IS NOT NULL AND dt_fim_vigencia::text <> '')
	and	dt_inicio_vigencia < dt_troca_prevista_w
	and	cd_conta_contabil = cd_conta_destino_w;
	if (qt_existe_vigencia_w > 0) then
		insert into ctb_troca_plano_consist(
			nr_sequencia,				nr_seq_troca,
			dt_atualizacao,				nm_usuario,
			dt_atualizacao_nrec,			nm_usuario_nrec,
			nm_tabela,				nm_atributo,
			cd_conta_contabil,
			ds_consistencia)
		values ( nextval('ctb_troca_plano_consist_seq'),	nr_sequencia_p,
			clock_timestamp(),				nm_usuario_p,
			clock_timestamp(),				nm_usuario_p,
			'TRANS_FINANC_CONTAB',		'CD_CONTA_CONTABIL',
			cd_conta_origem_w,
			wheb_mensagem_pck.get_texto(282060,null));
	end if;

	end;
end loop;
close c01;


select	count(*)
into STRICT	qt_consistencia_w
from	ctb_troca_plano_consist
where	nr_seq_troca = nr_sequencia_p;
if (qt_consistencia_w = 0) then
	update	ctb_troca_plano
	set	dt_consistencia = clock_timestamp(),
		nm_usuario = nm_usuario_p
	where	nr_sequencia = nr_sequencia_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE con_consiste_troca_plano ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

