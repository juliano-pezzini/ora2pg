-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_21_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) AS $body$
DECLARE


_ora2pg_r RECORD;
nr_index_sel_w				integer;
ie_registro_valido_w			varchar(1);
tb_seq_selecao_w			pls_util_cta_pck.t_number_table;
tb_valido_w				pls_util_cta_pck.t_varchar2_table_1;
tb_observacao_w				pls_util_cta_pck.t_varchar2_table_4000;

-- Informações da validação de situação inativa do prestador
C01 CURSOR(	nr_seq_oc_cta_comb_pc	pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	ie_data_tipo_envio_rec,
		ie_tipo_data_envio,
		qt_dias_envio
	from	pls_oc_cta_val_dt_rec
	where	nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_pc;

--Cursor com as contas selecionadas que irão gerar as ocorrências
C02 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_imp.nr_id_transacao%type) FOR
	SELECT	conta.nr_sequencia			nr_seq_conta,
		trunc(prot.dt_recebimento_conv)		dt_recebimento_conv,
		trunc(prot.dt_transacao)		dt_transacao,
		trunc(prot.dt_mes_competencia_conv)	dt_mes_competencia_conv,
		trunc(conta.dt_emissao_guia)		dt_emissao_guia,
		trunc(conta.dt_atendimento_conv)	dt_atendimento_conv,
		trunc(conta.dt_inicio_faturamento)	dt_inicio_faturamento,
		trunc(conta.dt_fim_faturamento)		dt_fim_faturamento
	from	pls_conta_imp		conta,
		pls_protocolo_conta_imp	prot
	where	exists (	SELECT 1
				from	pls_oc_cta_selecao_imp	sel
				where	sel.nr_id_transacao 	= nr_id_transacao_pc
				and  	sel.ie_valido 		= 'S'
				and  	sel.nr_seq_conta 	= conta.nr_sequencia)
	and	prot.nr_sequencia 	= conta.nr_seq_protocolo;
BEGIN
-- Deve exisitr informação da regra para executar a validação
if (nr_seq_combinada_p IS NOT NULL AND nr_seq_combinada_p::text <> '') and (nr_id_transacao_p IS NOT NULL AND nr_id_transacao_p::text <> '')  then

	-- Buscar os dados da regra de validação conforme montado pelo usuário.
	for	r_C01_w in C01(nr_seq_combinada_p) loop
		-- Devem ser verificadas as informações conforme o cadastro da regra de validação.
		-- Caso a informação da quantidade de dias não seja informada, gera a ocorrência para todas as contas.
		-- Desta forma se torna mais fácil identificar que o cliente tem problemas no cadastro da regra dele.
		if (r_C01_w.qt_dias_envio IS NOT NULL AND r_C01_w.qt_dias_envio::text <> '') then
			-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
			CALL pls_ocor_imp_pck.atualiza_campo_auxiliar('V', 'N', nr_id_transacao_p, null);
			--limpa as variáveis
			SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;
			nr_index_sel_w := 0;
			--Abre o cursor das contas
			for r_C02_w in C02(nr_id_transacao_p) loop

				ie_registro_valido_w := 'A';
				-- Data de recebimento do protocolo.
				if (r_C01_w.ie_data_tipo_envio_rec = 'R') then
					-- A data de emissão da conta.
					if (r_C01_w.ie_tipo_data_envio = 'EM') then
						--Data de recebimento x Data de emissao da guia
						if	(((r_C02_w.dt_recebimento_conv - r_C02_w.dt_emissao_guia) >= r_C01_w.qt_dias_envio) and (ie_registro_valido_w != 'N')) then
							ie_registro_valido_w := 'S';
						else
							ie_registro_valido_w := 'N';
						end if;
					-- (A data de atendimento informada na conta) ou (Data de atendimento referência informada na conta)
					elsif (r_C01_w.ie_tipo_data_envio = 'AT' or r_C01_w.ie_tipo_data_envio = 'AR') then
						--Data de recebimento x Data de atendimento da conta
						if	(((r_C02_w.dt_recebimento_conv - r_C02_w.dt_atendimento_conv) >= r_C01_w.qt_dias_envio) and (ie_registro_valido_w != 'N')) then
							ie_registro_valido_w := 'S';
						else
							ie_registro_valido_w := 'N';
						end if;
					-- A data de entrada na internação informaada para a conta.
					elsif (r_C01_w.ie_tipo_data_envio = 'E') then
						--Data de recebimento x Data de inicio faturamento
						if	(((r_C02_w.dt_recebimento_conv - r_C02_w.dt_inicio_faturamento) >= r_C01_w.qt_dias_envio) and (ie_registro_valido_w != 'N')) then
							ie_registro_valido_w := 'S';
						else
							ie_registro_valido_w := 'N';
						end if;
					-- A data de alta da internação.
					elsif (r_C01_w.ie_tipo_data_envio = 'A') then
						--Data de recebimento x Data de fim faturamento
						if	(((r_C02_w.dt_recebimento_conv - r_C02_w.dt_fim_faturamento) >= r_C01_w.qt_dias_envio) and (ie_registro_valido_w != 'N')) then
							ie_registro_valido_w := 'S';
						else
							ie_registro_valido_w := 'N';
						end if;
					end if;
				-- Data do protocolo
				elsif (r_C01_w.ie_data_tipo_envio_rec = 'P') then
					-- A data de emissão da conta.
					if (r_C01_w.ie_tipo_data_envio = 'EM') then
						--Data do protocolo x Data de emissão da guia
						if	(((r_C02_w.dt_transacao - r_C02_w.dt_emissao_guia) >= r_C01_w.qt_dias_envio) and (ie_registro_valido_w != 'N')) then
							ie_registro_valido_w := 'S';
						else
							ie_registro_valido_w := 'N';
						end if;
					-- (A data de atendimento informada na conta.) ou ( A data de atendimento referência informada na conta.)
					elsif (r_C01_w.ie_tipo_data_envio = 'AT' or r_C01_w.ie_tipo_data_envio = 'AR') then
						--Data do protocolo x Data de atendimento da conta
						if	(((r_C02_w.dt_transacao - r_C02_w.dt_atendimento_conv) >= r_C01_w.qt_dias_envio) and (ie_registro_valido_w != 'N')) then
							ie_registro_valido_w := 'S';
						else
							ie_registro_valido_w := 'N';
						end if;
					-- A data de entrada na internação informada para a conta.
					elsif (r_C01_w.ie_tipo_data_envio = 'E') then
						--Data do protocolo x Data de inicio faturamento
						if	(((r_C02_w.dt_transacao - r_C02_w.dt_inicio_faturamento) >= r_C01_w.qt_dias_envio) and (ie_registro_valido_w != 'N')) then
							ie_registro_valido_w := 'S';
						else
							ie_registro_valido_w := 'N';
						end if;
					-- A data de alta da internação.
					elsif (r_C01_w.ie_tipo_data_envio = 'A') then
						--Data do protocolo x Data de fim faturamento
						if	(((r_C02_w.dt_transacao - r_C02_w.dt_fim_faturamento) >= r_C01_w.qt_dias_envio) and (ie_registro_valido_w != 'N')) then
							ie_registro_valido_w := 'S';
						else
							ie_registro_valido_w := 'N';
						end if;
					end if;
				-- Data de competência do protocolo
				elsif (r_C01_w.ie_data_tipo_envio_rec = 'C') then
					-- A data de emissão da conta.
					if (r_C01_w.ie_tipo_data_envio = 'EM') then
						--Data de competência x Data de emissão da guia
						if	(((r_C02_w.dt_mes_competencia_conv - r_C02_w.dt_emissao_guia) >= r_C01_w.qt_dias_envio) and (ie_registro_valido_w != 'N')) then
							ie_registro_valido_w := 'S';
						else
							ie_registro_valido_w := 'N';
						end if;
					-- (A data de atendimento informada na conta.) ou (A data de atendimento referência informada na conta.)
					elsif (r_C01_w.ie_tipo_data_envio = 'AT' or r_C01_w.ie_tipo_data_envio = 'AR') then
						--Data de competência x Data de atendimento
						if	(((r_C02_w.dt_mes_competencia_conv - r_C02_w.dt_atendimento_conv) >= r_C01_w.qt_dias_envio) and (ie_registro_valido_w != 'N')) then
							ie_registro_valido_w := 'S';
						else
							ie_registro_valido_w := 'N';
						end if;
					-- A data de entrada na internação informada para a conta.
					elsif (r_C01_w.ie_tipo_data_envio = 'E') then
						--Data de competência x Data de inicio faturamento
						if	(((r_C02_w.dt_mes_competencia_conv - r_C02_w.dt_inicio_faturamento) >= r_C01_w.qt_dias_envio) and (ie_registro_valido_w != 'N')) then
							ie_registro_valido_w := 'S';
						else
							ie_registro_valido_w := 'N';
						end if;
					-- A data de alta da internação.
					elsif (r_C01_w.ie_tipo_data_envio = 'A') then
						--Data de competência x Data de fim faturamento
						if	(((r_C02_w.dt_mes_competencia_conv - r_C02_w.dt_fim_faturamento) >= r_C01_w.qt_dias_envio) and (ie_registro_valido_w != 'N')) then
							ie_registro_valido_w := 'S';
						else
							ie_registro_valido_w := 'N';
						end if;
					end if;
				end if;

				if (ie_registro_valido_w = 'S') then

					tb_seq_selecao_w(nr_index_sel_w) := r_C02_w.nr_seq_conta;
					tb_observacao_w(nr_index_sel_w)  := null;
					tb_valido_w(nr_index_sel_w) 	 := 'S';

					if (nr_index_sel_w >= pls_cta_consistir_pck.qt_registro_transacao_w ) then

						--Grava o que restar nas variáveis na tabela
						CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w, tb_valido_w,
												tb_observacao_w, nr_id_transacao_p,
												'SEQ_CONTA');
						--limpa as variáveis
						SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;

						nr_index_sel_w		:= 0;
					else
						nr_index_sel_w := nr_index_sel_w + 1;
					end if;
				end if;
			end loop; --C02
		end if;
	end loop; -- C01
	--Grava o que restar nas variáveis na tabela
	CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w, tb_valido_w,
							tb_observacao_w, nr_id_transacao_p,
							'SEQ_CONTA');

	-- seta os registros que serão válidos ou inválidos após o processamento
	CALL pls_ocor_imp_pck.atualiza_campo_valido('V', 'N',
						ie_regra_excecao_p, null,
						nr_id_transacao_p, null);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_21_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) FROM PUBLIC;

