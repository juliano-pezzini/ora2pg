-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ratear_valores_pacote (nr_atendimento_p bigint, ie_consiste_rateio_p text, cd_convenio_p bigint, nm_usuario_p text, nr_interno_conta_p bigint default null) AS $body$
DECLARE


nr_seq_proc_pacote_w		bigint;
nr_sequencia_w			bigint;
nr_seq_proc_w			bigint;
vl_material_w			double precision;
vl_material_orig_w		double precision;
vl_material_pacote_w		double precision;
vl_materiais_w			double precision;
qt_materiais_w			double precision;

qt_itens_pacote_w		double precision;
qt_item_w			double precision;
vl_max_item_w			double precision;
nr_seq_item_w			bigint;

ie_origem_proced_w		bigint;
vl_procedimento_w		double precision;
vl_procedimento_pacote_w	double precision;
vl_procedimentos_w		double precision;

qt_procedimentos_w		double precision;
qt_proc_nao_ratear_w		double precision;

vl_medico_w			double precision;
vl_anestesista_w		double precision;
vl_materiaisp_w			double precision;
vl_auxiliares_w			double precision;
vl_custo_operacional_w		double precision;

vl_pacote_w			double precision;
vl_total_w			double precision;
vl_proc_original_w		double precision;
vl_proc_nao_ratear_w		double precision;
vl_total_proc_nao_ratear_w	double precision;

ie_ratear_repasse_w		varchar(2);
nr_interno_conta_w		bigint;

vl_original_proc_w		double precision;
vl_original_medico_w		double precision;

qt_regra_rateio_w		double precision;
vl_regra_rateio_w		double precision;

vl_proc_sem_rateio_w		double precision;

ie_maior_valor_w		varchar(1)	:= 'S';
cd_mat_dif_w			bigint;
vl_mat_dif_w			double precision;
nr_seq_mat_dif_w		bigint;

ie_ratear_valor_orig_w		varchar(1);
vl_tab_original_w		double precision;
qt_mat_div_w			double precision;
qt_mat_dev_w			bigint;
ie_atualizou_mat_w		varchar(1);

qt_regra_mat_rateio_w		double precision;
vl_regra_mat_rateio_w		double precision;
vl_rateio_w			double precision;
ie_recalcula_proc_rateio_w	parametro_faturamento.ie_recalcula_proc_rateio%type	:= 'N';

c010 CURSOR FOR
SELECT	nr_seq_procedimento,
	ie_ratear_repasse
from	conta_paciente c,
	procedimento_paciente b,
	atendimento_pacote a
where	a.nr_atendimento	= nr_atendimento_p
and	a.cd_convenio		= cd_convenio_p
and	a.nr_seq_procedimento	= b.nr_sequencia
and	b.nr_interno_conta	= c.nr_interno_conta
and 	((coalesce(nr_interno_conta_p::text, '') = '' and c.ie_status_acerto = 1)
	or (c.nr_interno_conta = nr_interno_conta_p))
and	(nr_seq_procedimento IS NOT NULL AND nr_seq_procedimento::text <> '');

c020 CURSOR FOR
SELECT 	nr_sequencia,
	vl_material,
	vl_tabela_original,
	coalesce(qt_material,0)
from 	conta_paciente b,
	material_atend_paciente a
where	a.nr_seq_proc_pacote	= nr_seq_proc_pacote_w
and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
and	a.nr_interno_conta	= b.nr_interno_conta
and 	((coalesce(nr_interno_conta_p::text, '') = '' and b.ie_status_acerto = 1)
	or (b.nr_interno_conta = nr_interno_conta_p))
and	vl_material		<> 0
and	vl_materiais_w		<> 0
and	coalesce(a.ie_ratear_item,'S') = 'S';

c030 CURSOR FOR
SELECT 	nr_sequencia,
	ie_origem_proced,
	coalesce(vl_procedimento, 0),
	coalesce(vl_medico, 0),
	coalesce(vl_anestesista, 0),
	coalesce(vl_materiais, 0),
	coalesce(vl_auxiliares, 0),
	coalesce(vl_custo_operacional, 0)
FROM conta_paciente b, procedimento_paciente a
LEFT OUTER JOIN regra_honorario c ON (a.ie_responsavel_credito = c.cd_regra)
WHERE a.nr_seq_proc_pacote	= nr_seq_proc_pacote_w and coalesce(a.cd_motivo_exc_conta::text, '') = '' and a.nr_interno_conta	= b.nr_interno_conta and ((coalesce(nr_interno_conta_p::text, '') = '' and b.ie_status_acerto = 1)
	or (b.nr_interno_conta = nr_interno_conta_p)) and a.nr_sequencia		<> a.nr_seq_proc_pacote and vl_procedimento		<> 0 and vl_procedimentos_w	<> 0 and coalesce(a.ie_ratear_item,'S') = 'S'  and (coalesce(c.ie_repassa_medico, 'N')	= 'N' or 		-- Edgar 23/11/2005, OS 25317
	ie_ratear_repasse_w		= 'S') order by coalesce(vl_procedimento,0);

c040 CURSOR FOR
SELECT	nr_sequencia,
	ie_origem_proced,
	coalesce(vl_procedimento, 0),
	coalesce(vl_medico, 0),
	coalesce(vl_anestesista, 0),
	coalesce(vl_materiais, 0),
	coalesce(vl_auxiliares, 0),
	coalesce(vl_custo_operacional, 0)
from 	regra_honorario c,
	conta_paciente b,
	procedimento_paciente a
where	a.nr_seq_proc_pacote	= nr_seq_proc_pacote_w
and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
and	a.nr_interno_conta	= b.nr_interno_conta
and 	((coalesce(nr_interno_conta_p::text, '') = '' and b.ie_status_acerto = 1)
	or (b.nr_interno_conta = nr_interno_conta_p))
and	a.vl_procedimento	<> 0
and	a.nr_sequencia		<> a.nr_seq_proc_pacote
and	a.ie_responsavel_credito = c.cd_regra
and 	coalesce(a.ie_ratear_item,'S') = 'S'
and	ie_ratear_repasse_w	= 'N'
and	c.ie_repassa_medico	<> 'N';

c050 CURSOR FOR
SELECT	nr_sequencia,
	ie_origem_proced,
	coalesce(vl_procedimento, 0),
	coalesce(vl_medico, 0),
	coalesce(vl_anestesista, 0),
	coalesce(vl_materiais, 0),
	coalesce(vl_auxiliares, 0),
	coalesce(vl_custo_operacional, 0)
FROM conta_paciente b, procedimento_paciente a
LEFT OUTER JOIN regra_honorario c ON (a.ie_responsavel_credito = c.cd_regra)
WHERE a.nr_seq_proc_pacote	= nr_seq_proc_pacote_w and coalesce(a.cd_motivo_exc_conta::text, '') = '' and a.nr_interno_conta	= b.nr_interno_conta and ((coalesce(nr_interno_conta_p::text, '') = '' and b.ie_status_acerto = 1)
	or (b.nr_interno_conta = nr_interno_conta_p)) and a.vl_procedimento	<> 0 and a.nr_sequencia		<> a.nr_seq_proc_pacote  and coalesce(a.ie_ratear_item,'S') = 'N';

c060 CURSOR FOR
	SELECT  cd_material,
		sum(a.vl_tabela_original)
	from	conta_paciente b,
		material_atend_paciente a
	where	a.nr_seq_proc_pacote    = nr_seq_proc_pacote_w
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.nr_interno_conta      = b.nr_interno_conta
	and 	((coalesce(nr_interno_conta_p::text, '') = '' and b.ie_status_acerto = 1)
		or (b.nr_interno_conta = nr_interno_conta_p))
	and 	coalesce(a.ie_ratear_item,'S') = 'S'
	group by cd_material
	having sum(a.vl_tabela_original) <> 0
	order by 2;

c070 CURSOR FOR
	SELECT  a.cd_material,
		sum(a.vl_material) vl_material
	from	material_atend_paciente a,
		conta_paciente b
	where	a.nr_interno_conta      = b.nr_interno_conta
	and	b.nr_atendimento	= nr_atendimento_p
	and	a.nr_seq_proc_pacote    = nr_seq_proc_pacote_w
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and 	((coalesce(nr_interno_conta_p::text, '') = '' and b.ie_status_acerto = 1)
		or (b.nr_interno_conta = nr_interno_conta_p))
	and 	coalesce(a.ie_ratear_item,'S') = 'S'
	group by a.cd_material
	order by vl_material desc;

c080 CURSOR FOR
	SELECT 	nr_sequencia,
		b.cd_convenio_parametro
	from 	conta_paciente b,
		procedimento_paciente a
	where	a.nr_seq_proc_pacote	= nr_seq_proc_pacote_w
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.nr_interno_conta	= b.nr_interno_conta
	and 	((coalesce(nr_interno_conta_p::text, '') = '' and b.ie_status_acerto = 1)
		or (b.nr_interno_conta = nr_interno_conta_p))
	and	a.nr_sequencia		<> a.nr_seq_proc_pacote
	and	coalesce(a.ie_valor_informado,'N') ='N';

BEGIN

ie_maior_valor_w	:= coalesce(obter_valor_param_usuario(67, 426, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'S');
ie_ratear_valor_orig_w	:= coalesce(obter_valor_param_usuario(67, 561, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');

begin
	select	coalesce(max(ie_recalcula_proc_rateio),'N')
	into STRICT	ie_recalcula_proc_rateio_w
	from	parametro_faturamento
	where	cd_estabelecimento	= wheb_usuario_pck.get_cd_estabelecimento;
exception
when others then
	ie_recalcula_proc_rateio_w:='N';
end;


OPEN C010; -- LISTA OS PACOTES
LOOP
FETCH C010 into
	nr_seq_proc_pacote_w,
	ie_ratear_repasse_w;
EXIT WHEN NOT FOUND; /* apply on C010 */
	begin

	if (ie_recalcula_proc_rateio_w = 'S') then
		for R080 in C080 loop
			CALL atualiza_preco_procedimento(R080.nr_sequencia, R080.cd_convenio_parametro, nm_usuario_p);
		end loop;
	end if;

	select	max(nr_interno_conta)
	into STRICT	nr_interno_conta_w
	from	procedimento_paciente
	where	nr_sequencia	= nr_seq_proc_pacote_w;

	CALL Gerar_Log_Pacote(nr_interno_conta_w, nr_seq_proc_pacote_w, Wheb_mensagem_pck.get_texto(799530), nm_usuario_p,null,null);

	select	coalesce(sum(qt_item_pacote),0)
	into STRICT	qt_item_w
	from (SELECT	count(*) qt_item_pacote
		from	procedimento_paciente a
		where	a.nr_sequencia		<> coalesce(a.nr_seq_proc_pacote, a.nr_sequencia)
		and	a.nr_atendimento	= nr_atendimento_p
		and	a.nr_interno_conta	= nr_interno_conta_w
		and	coalesce(a.nr_seq_proc_pacote, a.nr_sequencia) = nr_seq_proc_pacote_w
		and	exists (select	1
			from	proc_paciente_valor b
			where	b.nr_seq_procedimento	= a.nr_sequencia
			and	1			= b.ie_tipo_valor
			and	coalesce(a.vl_procedimento,0) <> coalesce(b.vl_procedimento,0))
		
union

		SELECT	count(*) qt_item_pacote
		from	material_atend_paciente a
		where	a.nr_sequencia		<> coalesce(a.nr_seq_proc_pacote, a.nr_sequencia)
		and	a.nr_atendimento	= nr_atendimento_p
		and	a.nr_interno_conta	= nr_interno_conta_w
		and	coalesce(a.nr_seq_proc_pacote, a.nr_sequencia)	= nr_seq_proc_pacote_w
		and	coalesce(a.vl_tabela_original,a.vl_material)		<> a.vl_material) alias12
	where	ie_consiste_rateio_p	= 'S';

/*	if	(qt_item_w > 0) then
		--Pacote ja rateado. Para ratear e necessario desfazer o pacote !

	end if; */
	begin
	select	coalesce(sum(coalesce(vl_procedimento,0)),0)
	into STRICT	vl_pacote_w
	from	conta_paciente b,
			procedimento_paciente a
	where		a.nr_sequencia			= nr_seq_proc_pacote_w
	and		coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and		a.nr_interno_conta		= b.nr_interno_conta
	and 		((coalesce(nr_interno_conta_p::text, '') = '' and b.ie_status_acerto = 1)
			or (b.nr_interno_conta = nr_interno_conta_p));

	exception
		when others then
			vl_pacote_w		:= 0;
	end;

	if (ie_ratear_valor_orig_w = 'N') then
		begin
		select	coalesce(sum(coalesce(vl_material,0)),0),
			count(*)
		into STRICT	vl_materiais_w,
			qt_materiais_w
		from 	conta_paciente b,
			material_atend_paciente a
		where	a.nr_seq_proc_pacote	= nr_seq_proc_pacote_w
		and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
		and	a.nr_interno_conta	= b.nr_interno_conta
		and	a.vl_material		<> 0
		and 	((coalesce(nr_interno_conta_p::text, '') = '' and b.ie_status_acerto = 1)
			or (b.nr_interno_conta = nr_interno_conta_p));
		exception
			when others then
				vl_materiais_w	:= 0;
				qt_materiais_w	:= 0;
		end;

		begin
		select	coalesce(sum(coalesce(vl_procedimento,0)),0),
			count(*)
		into STRICT	vl_procedimentos_w,
			qt_procedimentos_w
		from 	conta_paciente b,
			procedimento_paciente a
		where	a.nr_seq_proc_pacote	= nr_seq_proc_pacote_w
		and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
		and	a.nr_interno_conta	= b.nr_interno_conta
		and 	((coalesce(nr_interno_conta_p::text, '') = '' and b.ie_status_acerto = 1)
			or (b.nr_interno_conta = nr_interno_conta_p))
		and	a.vl_procedimento	<> 0
		and	a.nr_sequencia		<> a.nr_seq_proc_pacote;
		exception
			when others then
				vl_procedimentos_w	:= 0;
				qt_procedimentos_w	:= 0;
		end;

	elsif (ie_ratear_valor_orig_w = 'S') then

		begin
		select	coalesce(sum(coalesce(vl_tabela_original, coalesce(vl_material,0))),0),
			count(*)
		into STRICT	vl_materiais_w,
			qt_materiais_w
		from 	conta_paciente b,
			material_atend_paciente a
		where	a.nr_seq_proc_pacote	= nr_seq_proc_pacote_w
		and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
		and	a.nr_interno_conta	= b.nr_interno_conta
		and	a.vl_material		<> 0
		and 	((coalesce(nr_interno_conta_p::text, '') = '' and b.ie_status_acerto = 1)
			or (b.nr_interno_conta = nr_interno_conta_p));
		exception
			when others then
				vl_materiais_w	:= 0;
				qt_materiais_w	:= 0;
		end;

		begin
		select	coalesce(sum(coalesce(c.vl_procedimento, coalesce(a.vl_procedimento,0))),0),
			count(*)
		into STRICT	vl_procedimentos_w,
			qt_procedimentos_w
		FROM conta_paciente b, procedimento_paciente a
LEFT OUTER JOIN proc_paciente_valor c ON (a.nr_sequencia = c.nr_seq_procedimento AND 1 = c.ie_tipo_valor)
WHERE a.nr_seq_proc_pacote	= nr_seq_proc_pacote_w and coalesce(a.cd_motivo_exc_conta::text, '') = '' and a.nr_interno_conta	= b.nr_interno_conta   and ((coalesce(nr_interno_conta_p::text, '') = '' and b.ie_status_acerto = 1)
			or (b.nr_interno_conta = nr_interno_conta_p)) and a.vl_procedimento	<> 0 and a.nr_sequencia		<> a.nr_seq_proc_pacote;
		exception
			when others then
				vl_procedimentos_w	:= 0;
				qt_procedimentos_w	:= 0;
		end;

	end if;

	 -- procedimentos que nao serao rateados (Regra para nao ratear)
	begin
	select	coalesce(sum(coalesce(vl_procedimento,0)),0),
		count(*)
	into STRICT	vl_regra_rateio_w,
		qt_regra_rateio_w
	from 	conta_paciente b,
		procedimento_paciente a
	where	a.nr_seq_proc_pacote	= nr_seq_proc_pacote_w
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.nr_interno_conta	= b.nr_interno_conta
	and 	((coalesce(nr_interno_conta_p::text, '') = '' and b.ie_status_acerto = 1)
		or (b.nr_interno_conta = nr_interno_conta_p))
	and 	coalesce(a.ie_ratear_item,'S') = 'N'
  	and	a.vl_procedimento	<> 0
	and	a.nr_sequencia		<> a.nr_seq_proc_pacote;
	exception
		when others then
			vl_regra_rateio_w	:= 0;
			qt_regra_rateio_w	:= 0;
	end;

	/*materiais que nao serao rateados(Regra para nao ratear)*/

	begin
	select	coalesce(sum(coalesce(vl_material,0)),0),
		count(*)
	into STRICT	vl_regra_mat_rateio_w,
		qt_regra_mat_rateio_w
	from 	conta_paciente b,
		material_atend_paciente a
	where	a.nr_seq_proc_pacote	= nr_seq_proc_pacote_w
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and	a.nr_interno_conta	= b.nr_interno_conta
	and 	((coalesce(nr_interno_conta_p::text, '') = '' and b.ie_status_acerto = 1)
		or (b.nr_interno_conta = nr_interno_conta_p))
	and 	coalesce(a.ie_ratear_item,'S') = 'N'
  	and	a.vl_material		<> 0
	and	a.nr_sequencia		<> a.nr_seq_proc_pacote;
	exception
		when others then
			vl_regra_mat_rateio_w	:= 0;
			qt_regra_mat_rateio_w	:= 0;
	end;

	-- Edgar 23/11/2005, OS 25317, procedimentos repasse que nao deve ser rateados, INICIO DO TRATAMENTO DE PROC PARA NAO RATEAR
	qt_proc_nao_ratear_w		:= 0;
	vl_total_proc_nao_ratear_w	:= 0;

	open c040; -- procedimentos do pacote que podem ser rateados, mas que nao rateiam repasse
	loop
	fetch c040 into
		nr_sequencia_w,
		ie_origem_proced_w,
		vl_proc_nao_ratear_w,
		vl_medico_w,
		vl_anestesista_w,
		vl_materiaisp_w,
		vl_auxiliares_w,
		vl_custo_operacional_w;
	EXIT WHEN NOT FOUND; /* apply on c040 */

		qt_proc_nao_ratear_w		:= qt_proc_nao_ratear_w + 1;
		vl_total_proc_nao_ratear_w	:= vl_proc_nao_ratear_w + vl_total_proc_nao_ratear_w;

		delete	from proc_paciente_valor
		where	nr_seq_procedimento	= nr_sequencia_w
		and	ie_tipo_valor		= 1;

		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT 	nr_seq_proc_w
		from	proc_paciente_valor
		where	nr_seq_procedimento 	= nr_sequencia_w;

		insert into proc_paciente_valor(nr_seq_procedimento,
			 nr_sequencia,
			 ie_tipo_valor,
			 dt_atualizacao,
			 nm_usuario,
			 vl_procedimento,
			 vl_medico,
			 vl_anestesista,
			 vl_materiais,
			 vl_auxiliares,
			 vl_custo_operacional)
		values (nr_sequencia_w,
			nr_seq_proc_w,
			1,
			clock_timestamp(),
			nm_usuario_p,
			vl_proc_nao_ratear_w,
			vl_medico_w,
			vl_anestesista_w,
			vl_materiaisp_w,
			vl_auxiliares_w,
			vl_custo_operacional_w);
	end loop;
	close c040; -- procedimentos do pacote que nao rateiam repasse
	open c050; -- procedimentos do pacote que nao rateiam
	loop
	fetch c050 into
		nr_sequencia_w,
		ie_origem_proced_w,
		vl_proc_nao_ratear_w,
		vl_medico_w,
		vl_anestesista_w,
		vl_materiaisp_w,
		vl_auxiliares_w,
		vl_custo_operacional_w;
	EXIT WHEN NOT FOUND; /* apply on c050 */

		delete	from proc_paciente_valor
		where	nr_seq_procedimento	= nr_sequencia_w
		and	ie_tipo_valor		= 1;

		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT 	nr_seq_proc_w
		from	proc_paciente_valor
		where	nr_seq_procedimento 	= nr_sequencia_w;

		insert into proc_paciente_valor(nr_seq_procedimento,
			 nr_sequencia,
			 ie_tipo_valor,
			 dt_atualizacao,
			 nm_usuario,
			 vl_procedimento,
			 vl_medico,
			 vl_anestesista,
			 vl_materiais,
			 vl_auxiliares,
			 vl_custo_operacional)
		values (nr_sequencia_w,
			nr_seq_proc_w,
			1,
			clock_timestamp(),
			nm_usuario_p,
			vl_proc_nao_ratear_w,
			vl_medico_w,
			vl_anestesista_w,
			vl_materiaisp_w,
			vl_auxiliares_w,
			vl_custo_operacional_w);

	end loop;
	close c050;

	vl_proc_sem_rateio_w	:= vl_procedimentos_w;
	vl_total_w		:= vl_materiais_w + vl_procedimentos_w;
	qt_itens_pacote_w	:= qt_procedimentos_w + qt_materiais_w;
	vl_procedimentos_w	:= vl_procedimentos_w - vl_total_proc_nao_ratear_w - vl_regra_rateio_w;
	qt_procedimentos_w	:= qt_procedimentos_w - qt_proc_nao_ratear_w - qt_regra_rateio_w;
	vl_materiais_w		:= vl_materiais_w - vl_regra_mat_rateio_w;
	qt_materiais_w		:= qt_materiais_w - qt_regra_mat_rateio_w;

	-- Edgar 23/11/2005, OS 25317,

	-- procedimentos repasse que nao deve ser rateados, FIM DO TRATAMENTO DE PROC PARA NAO RATEAR
	if (qt_itens_pacote_w = 0) then

		vl_procedimentos_w 	:= vl_pacote_w;

		select	coalesce(vl_procedimento, 0),
			coalesce(vl_medico, 0),
			coalesce(vl_anestesista, 0),
			coalesce(vl_materiais, 0),
			coalesce(vl_auxiliares, 0),
			coalesce(vl_custo_operacional, 0)
		into STRICT 	vl_procedimento_w,
			vl_medico_w,
			vl_anestesista_w,
			vl_materiaisp_w,
			vl_auxiliares_w,
			vl_custo_operacional_w
		from	procedimento_paciente
		where	nr_sequencia	= nr_seq_proc_pacote_w;

		update	procedimento_paciente
		set	vl_procedimento		= vl_procedimento_w,
			vl_medico		= vl_medico_w,
			vl_anestesista		= vl_anestesista_w,
			vl_materiais		= vl_materiaisp_w,
			vl_auxiliares		= vl_auxiliares_w,
			vl_custo_operacional 	= vl_custo_operacional_w
		where	nr_seq_proc_pacote 	= nr_seq_proc_pacote_w
		and	nr_sequencia		<> nr_seq_proc_pacote_w;

		if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
	end if;

	if (vl_total_w  = 0) or (vl_pacote_w = 0) then
		goto final;
	end if;

	vl_material_pacote_w := (dividir(vl_materiais_w, vl_total_w - vl_total_proc_nao_ratear_w - vl_regra_mat_rateio_w) *
						(vl_pacote_w - vl_total_proc_nao_ratear_w - vl_regra_mat_rateio_w));

	/*VALOR DO PACOTE  - VALORES DOS MATERIAIS DO PACOTE - VALORES DE PROC QUE NAO RATEIAM REPASSE - VALORES DE PROC QUE NAO RATEIAM ( REGRA)  - VALORES DE MAT QUE NAO RATEIAM (REGRA)*/

	vl_procedimento_pacote_w	:= vl_pacote_w - vl_material_pacote_w - vl_total_proc_nao_ratear_w - vl_regra_rateio_w - vl_regra_mat_rateio_w;

	if (vl_procedimentos_w = 0) then -- OS 161206 Fabricio em 25/08  Inclui esse bloco do IF e suas atribuicoes
		vl_procedimento_pacote_w	:= vl_proc_sem_rateio_w;
		vl_material_pacote_w		:= vl_pacote_w - vl_proc_sem_rateio_w - vl_regra_mat_rateio_w;
	end if;


	if (vl_procedimento_pacote_w < 0) then
		/*SITUACAO EM QUE EXISTE UM VALOR ALTO DE PROCEDIMENTOS QUE NAO PODEM SER RATEADOS, SOMADOS
		A UM VALOR ALTO DE MATERIAIS, QUE AO FINAL ULTRAPASSAM O VALOR DO PACOTE. A DIFERENCA FAZ COM QUE O VALOR DE PROCEDIMENTO PACOTE FIQUE NEGATIVO.
		A SOLUCAO ENCONTRADA FOI JUNTAR OS VALORES DE PROCEDIMENTOS E MATERIAIS PARA E DILUIR ESTE TOTAL NOS DOIS*/
		vl_rateio_w		:= vl_procedimento_pacote_w + vl_material_pacote_w;
		vl_material_pacote_w	:= dividir(vl_rateio_w * vl_materiais_w, (vl_materiais_w + vl_procedimentos_w));  -- proporcao de valor para mat
		vl_procedimento_pacote_w:= vl_rateio_w - vl_material_pacote_w; -- proporcao de valor para proc
	end if;

	vl_total_w	:= 0;
	qt_item_w	:= 0;
	vl_max_item_w	:= 0;
	nr_seq_item_w	:= 0;

	OPEN C020; /*ATUALIZA OS MATERIAIS DO PACOTE QUE PODEM SER RATEADOS*/
	LOOP
	FETCH C020 into
	 	nr_sequencia_w,
		vl_material_w,
		vl_tab_original_w,
		qt_mat_div_w;
	EXIT WHEN NOT FOUND; /* apply on C020 */
		begin

		vl_material_orig_w	:= vl_material_w;

		if (ie_ratear_valor_orig_w = 'S') then
			vl_material_w	:= coalesce(vl_tab_original_w, vl_material_w);
		end if;

		qt_item_w	:= qt_item_w + 1;

		if (vl_material_w > vl_max_item_w) then
			nr_seq_item_w	:= nr_sequencia_w;
			vl_max_item_w	:= vl_material_w;
		end if;

		if (ie_maior_valor_w = 'M') and (qt_mat_div_w > 0) then
			vl_material_w	:= dividir(vl_material_w, qt_mat_div_w);
		end if;

		vl_material_w	:= vl_material_w * (vl_material_pacote_w / vl_materiais_w);

		if (ie_maior_valor_w = 'M') and (qt_mat_div_w > 0) then
			vl_material_w	:= vl_material_w * qt_mat_div_w;
		end if;

		vl_total_w	:= vl_total_w + vl_material_w;
		update	material_atend_paciente
		set	vl_tabela_original	= CASE WHEN vl_tabela_original = NULL THEN  vl_material_orig_w  ELSE vl_tabela_original END ,
			vl_material		= vl_material_w
		where	nr_sequencia		= nr_sequencia_w;

		end;
	END LOOP;
	CLOSE C020;

	nr_seq_mat_dif_w	:= null;
	ie_atualizou_mat_w	:= 'N';

	if (ie_maior_valor_w = 'M') then

		open C070;
		loop
		fetch C070 into
			cd_mat_dif_w,
			vl_mat_dif_w;
		EXIT WHEN NOT FOUND; /* apply on C070 */
			begin

			if (ie_atualizou_mat_w = 'N') then

				qt_mat_dev_w	:= 0;

				select  count(*)
				into STRICT	qt_mat_dev_w
				from	material_atend_paciente a,
					conta_paciente b
				where	a.nr_interno_conta      = b.nr_interno_conta
				and	b.nr_atendimento	= nr_atendimento_p
				and	a.nr_seq_proc_pacote    = nr_seq_proc_pacote_w
				and 	a.cd_material		= cd_mat_dif_w
				and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
				and 	((coalesce(nr_interno_conta_p::text, '') = '' and b.ie_status_acerto = 1)
					or (b.nr_interno_conta = nr_interno_conta_p))
				and	a.qt_material < 0;

				if (qt_mat_dev_w = 0) then

					select	max(nr_sequencia)
					into STRICT	nr_seq_mat_dif_w
					from	conta_paciente b,
						material_atend_paciente a
					where	a.nr_interno_conta      = b.nr_interno_conta
					and	b.nr_atendimento	= nr_atendimento_p
					and	a.nr_seq_proc_pacote    = nr_seq_proc_pacote_w
					and 	a.cd_material		= cd_mat_dif_w
					and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
					and 	((coalesce(nr_interno_conta_p::text, '') = '' and b.ie_status_acerto = 1)
						or (b.nr_interno_conta = nr_interno_conta_p))
					and	vl_material + (vl_material_pacote_w - vl_total_w) > 0;

					if (coalesce(nr_seq_mat_dif_w,0) > 0) then
						update	material_atend_paciente
						set	vl_material	= vl_material + (vl_material_pacote_w - vl_total_w)
						where	nr_sequencia	= nr_seq_mat_dif_w;

						ie_atualizou_mat_w	:= 'S';
					end if;

				end if;

			end if;

			end;
		end loop;
		close C070;

	end if;

	if (coalesce(nr_seq_mat_dif_w,0) = 0) then

		if (ie_maior_valor_w = 'S') then

			update	material_atend_paciente
			set	vl_material	= vl_material + (vl_material_pacote_w - vl_total_w)
			where	nr_sequencia	= nr_seq_item_w;
		else
			-- Pegar o Maior que nao tenha devolucao.
			nr_seq_mat_dif_w:= null;

			open C060; -- soma dos valores de tabela dos materiais que podem ser rateados
			loop
			fetch C060 into
				cd_mat_dif_w,
				vl_mat_dif_w;
			EXIT WHEN NOT FOUND; /* apply on C060 */
				begin

				select	coalesce(max(nr_sequencia),nr_seq_item_w)
				into STRICT	nr_seq_mat_dif_w
				from	conta_paciente b,
					material_atend_paciente a
				where	a.nr_seq_proc_pacote    = nr_seq_proc_pacote_w
				and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
				and	a.nr_interno_conta      = b.nr_interno_conta
				and 	((coalesce(nr_interno_conta_p::text, '') = '' and b.ie_status_acerto = 1)
					or (b.nr_interno_conta = nr_interno_conta_p))
				and 	a.cd_material = cd_mat_dif_w;

				end;
			end loop;
			close C060;

			update	material_atend_paciente
			set	vl_material	= vl_material + (vl_material_pacote_w - vl_total_w)
			where	nr_sequencia	= coalesce(nr_seq_mat_dif_w, nr_seq_item_w);

		end if;

	end if;

	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

	vl_total_w				:= 0;
	qt_item_w				:= 0;

	OPEN C030; -- ATUALIZA OS PROCEDIMENTOS QUE PODEM SER RATEADOS,QUE NAO RATEIAM REPASSE OU QUE PACOTE RATEIA REPASSE
	LOOP
	FETCH C030 into
	 	nr_sequencia_w,
		ie_origem_proced_w,
		vl_procedimento_w,
		vl_medico_w,
		vl_anestesista_w,
		vl_materiaisp_w,
		vl_auxiliares_w,
		vl_custo_operacional_w;
	EXIT WHEN NOT FOUND; /* apply on C030 */
		begin

		select 	coalesce(max(vl_procedimento),vl_procedimento_w),
			coalesce(max(vl_medico),vl_medico_w)
		into STRICT	vl_original_proc_w,
			vl_original_medico_w
		from 	proc_paciente_valor
		where 	nr_seq_procedimento	= nr_sequencia_w
		and	ie_tipo_valor		= 1;

		delete	from proc_paciente_valor
		where	nr_seq_procedimento	= nr_sequencia_w
		and	ie_tipo_valor		= 1;

		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT 	nr_seq_proc_w
		from	proc_paciente_valor
		where	nr_seq_procedimento 	= nr_sequencia_w;

		insert into proc_paciente_valor(
			 nr_seq_procedimento	,
			 nr_sequencia           ,
			 ie_tipo_valor          ,
			 dt_atualizacao         ,
			 nm_usuario             ,
			 vl_procedimento        ,
			 vl_medico              ,
			 vl_anestesista         ,
			 vl_materiais           ,
			 vl_auxiliares          ,
			 vl_custo_operacional   )
		values (
			nr_sequencia_w,
			nr_seq_proc_w,
			1,
			clock_timestamp(),
			nm_usuario_p,
			vl_original_proc_w,   --vl_procedimento_w   substitui pela variavel  vl_original_proc_w
			vl_original_medico_w,
			vl_anestesista_w,
			vl_materiaisp_w,
			vl_auxiliares_w,
			vl_custo_operacional_w);

		qt_item_w			:= qt_item_w + 1;
		vl_proc_original_w		:= vl_procedimento_w;

		if (ie_ratear_valor_orig_w = 'S') then /*Ao ratear o pacote, considerar sempre o valor original dos itens para base de calculo*/
			vl_procedimento_w := vl_original_proc_w;
		end if;

		if (qt_item_w = qt_Procedimentos_w) then
			vl_procedimento_w	:= vl_procedimento_pacote_w  - vl_total_w;
		else
			vl_procedimento_w	:= vl_procedimento_w * (vl_procedimento_pacote_w / vl_procedimentos_w);
		end if;

		vl_total_w			:= vl_total_w + vl_procedimento_w;
		vl_medico_w			:= vl_medico_w * (vl_procedimento_w / vl_proc_original_w);
		vl_anestesista_w		:= vl_anestesista_w * (vl_procedimento_w / vl_proc_original_w);
		vl_materiaisp_w			:= vl_materiaisp_w * (vl_procedimento_w / vl_proc_original_w);
		vl_auxiliares_w			:= vl_auxiliares_w * (vl_procedimento_w / vl_proc_original_w);
		vl_custo_operacional_w		:= vl_procedimento_w - (vl_medico_w + vl_anestesista_w + vl_materiaisp_w + vl_auxiliares_w);

		update	procedimento_paciente
		set 	vl_procedimento		= vl_procedimento_w,
			vl_medico		= vl_medico_w,
			vl_anestesista		= vl_anestesista_w,
			vl_materiais		= vl_materiaisp_w,
			vl_auxiliares		= vl_auxiliares_w,
			vl_custo_operacional 	= vl_custo_operacional_w
		where	nr_sequencia		= nr_sequencia_w;

		if (ie_origem_proced_w <> 4) then /* Elemar 23/07/2003 inclui o if para HVC */
			update	procedimento_participante
			set	vl_conta	= vl_conta * (vl_procedimento_w / vl_proc_original_w)
			where	nr_sequencia	= nr_sequencia_w;

		end if;
		end;
	END LOOP;
	CLOSE C030;
	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
	end;
<<final>>
	null;

	update	atendimento_pacote
	set	ie_rateado		= 'S'
	where	nr_seq_procedimento	= nr_seq_Proc_pacote_w;

END LOOP;
close c010;

if (2 = philips_param_pck.get_cd_pais) and -- 2 = Mexico
	(nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then
	CALL gerar_proc_conta_excedente(nr_interno_conta_w, nm_usuario_p);
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ratear_valores_pacote (nr_atendimento_p bigint, ie_consiste_rateio_p text, cd_convenio_p bigint, nm_usuario_p text, nr_interno_conta_p bigint default null) FROM PUBLIC;

