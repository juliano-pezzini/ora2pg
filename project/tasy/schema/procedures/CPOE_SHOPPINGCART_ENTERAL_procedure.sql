-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_shoppingcart_enteral (nr_sequencia_p bigint, ie_retrogrado_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


qt_count_w	bigint;
ie_return_value_w	varchar(1);
ie_continuo_w	varchar(1);
ds_alergia_w	varchar(4000);
ie_severidade_w	paciente_alergia.ie_intensidade%type;
nr_seq_reacao_w	paciente_alergia.nr_seq_reacao%type;
nr_seq_ficha_tecnica_w	paciente_alergia.nr_seq_ficha_tecnica%type;

ds_erro_w	varchar(4000);
ds_mensagem_w	varchar(4000);
ie_abortar_w	varchar(30);
dt_fim_w		cpoe_dieta.dt_fim%type;

c01 CURSOR FOR
SELECT  a.*, obter_setor_atendimento(nr_atendimento) cd_setor_atend
from 	cpoe_dieta a
where	nr_sequencia = nr_sequencia_p;

BEGIN

ds_retorno_p := 'S';

if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') then
	for r_c01_w in C01
	loop
	
		-- CAMPOS OBRIGATORIOS
		if (coalesce(r_c01_w.cd_material::text, '') = '' or coalesce(r_c01_w.cd_intervalo::text, '') = '' or coalesce(r_c01_w.dt_inicio::text, '') = '' or coalesce(r_c01_w.ie_duracao::text, '') = ''
				or coalesce(r_c01_w.ie_via_aplicacao::text, '') = '' or coalesce(r_c01_w.qt_dose::text, '') = '' or coalesce(r_c01_w.cd_unidade_medida_dose::text, '') = '' or coalesce(r_c01_w.ie_continuo::text, '') = '') then
			ds_retorno_p := 'N';
			goto return_value;
		end if;

		if (cpoe_shoppingcart_vigencia(r_c01_w.cd_intervalo, r_c01_w.ie_administracao, r_c01_w.dt_inicio,
								r_c01_w.ie_urgencia, r_c01_w.ie_duracao,r_c01_w.dt_fim, r_c01_w.ie_evento_unico, ie_retrogrado_p) = 'S') then
			ds_retorno_p := 'N';
			goto return_value;
		end if;
		-- FIM CAMPOS OBRIGATORIOS


		-- OPEN DETAIL		
		if (r_c01_w.ie_continuo = 'C' and coalesce(r_c01_w.qt_tempo_aplic::text, '') = '') then
			ds_retorno_p := 'N';
			goto return_value;
		elsif (r_c01_w.ie_continuo = 'I' and coalesce(r_c01_w.qt_hora_fase::text, '') = '') then
			ds_retorno_p := 'N';
			goto return_value;
		end if;
		-- FIM OPEN DETAIL


		-- CUSTOM VALIDATOR
		if ((r_c01_w.cd_material IS NOT NULL AND r_c01_w.cd_material::text <> '') and coalesce(r_c01_w.qt_dose,0) = 0) then
			ds_retorno_p := 'N';
			goto return_value;
		end if;		
		-- FIM CUSTOM VALIDATOR


		-- BEFORE PERFORM	
		SELECT * FROM cpoe_consist_regra_prescr_mat(r_c01_w.nr_atendimento, r_c01_w.cd_material, 'N', r_c01_w.ie_via_aplicacao, Obter_Tipo_Atendimento(r_c01_w.nr_atendimento), r_c01_w.cd_setor_atend, obter_perfil_ativo, Obter_Convenio_Atendimento(r_c01_w.nr_atendimento), wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, r_c01_w.cd_pessoa_fisica, r_c01_w.dt_inicio, ds_erro_w, ds_mensagem_w, ie_abortar_w, r_c01_w.cd_intervalo, r_c01_w.ie_duracao) INTO STRICT ds_erro_w, ds_mensagem_w, ie_abortar_w;

		if (ds_erro_w = 'S' and ie_abortar_w <> 'X') then
			if (ie_abortar_w = 'S') then
				ds_retorno_p := 'N';
				goto return_value;
			end if;		
		end if;
		-- FIM BEFORE PERFORM


		-- INCONSISTENCIA DA CPOE (BARRA VERMELHA)		
		if ((r_c01_w.dt_fim IS NOT NULL AND r_c01_w.dt_fim::text <> '') or coalesce(r_c01_w.ie_continuo,'N') = 'C') then
			ie_continuo_w := 'S';
		end if;
		
		if (coalesce(ie_continuo_w,'N') <> 'S') then
			dt_fim_w := (r_c01_w.dt_inicio + 1);
		else
			dt_fim_w := r_c01_w.dt_fim;
		end if;

		--DUPLICIDADE
		select	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END  ie_duplicado
		into STRICT	ie_return_value_w
		from	cpoe_dieta a
		where	a.nr_sequencia <> r_c01_w.nr_sequencia
		and		obter_se_cpoe_regra_duplic('E', wheb_usuario_pck.get_cd_perfil, r_c01_w.cd_setor_atend) = 'S'
		and		((nr_atendimento = r_c01_w.nr_atendimento) or (cd_pessoa_fisica = r_c01_w.cd_pessoa_fisica and coalesce(nr_atendimento::text, '') = ''))
		and		a.cd_material = r_c01_w.cd_material
		and		a.ie_tipo_dieta = 'E'	
		and		(((dt_lib_suspensao IS NOT NULL AND dt_lib_suspensao::text <> '') and (dt_suspensao > clock_timestamp())) or (coalesce(dt_lib_suspensao::text, '') = ''))
		and 	((dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') or (nm_usuario = wheb_usuario_pck.get_nm_usuario))
		and 	((a.dt_inicio between r_c01_w.dt_inicio and dt_fim_w) or (a.dt_fim between r_c01_w.dt_inicio and dt_fim_w) or (coalesce(a.dt_fim::text, '') = '' and a.dt_inicio < r_c01_w.dt_inicio) or (a.dt_fim > dt_fim_w and a.dt_inicio < r_c01_w.dt_inicio) or	
				 (((a.dt_inicio >  r_c01_w.dt_inicio) and (coalesce(ie_continuo_w,'N') = 'S')) or ((coalesce(ie_continuo_w,'N') = 'N') and (r_c01_w.dt_inicio <= a.dt_inicio)  and dt_fim_w > a.dt_inicio)) or (a.ie_retrogrado = 'S' and coalesce(a.dt_liberacao::text, '') = ''));

		if (ie_return_value_w = 'S') then
			ds_retorno_p := 'N';
			goto return_value;
		end if;

		--ALERGIA
		SELECT * FROM cpoe_verifica_se_pac_alergico(r_c01_w.cd_pessoa_fisica, r_c01_w.cd_material, ie_return_value_w, ds_alergia_w, ie_severidade_w, nr_seq_reacao_w, 'N', nr_seq_ficha_tecnica_w) INTO STRICT ie_return_value_w, ds_alergia_w, ie_severidade_w, nr_seq_reacao_w, nr_seq_ficha_tecnica_w;
		
		if (ie_return_value_w = 'S') then
			ds_retorno_p := 'N';
			goto return_value;
		end if;

		--NAO PADRONIZADO
		if (cpoe_obter_se_mat_padronizado(wheb_usuario_pck.get_cd_estabelecimento, r_c01_w.cd_material, r_c01_w.ie_medicacao_paciente) = 'N') then
			ds_retorno_p := 'N';
			goto return_value;
		end if;

		--LACTANTE
		if (obter_se_permite_lactante(r_c01_w.nr_atendimento, r_c01_w.cd_material) = 'N') then
			ds_retorno_p := 'N';
			goto return_value;
		end if;

		-- FIM INCONSISTENCIA DA CPOE (BARRA VERMELHA)
	end loop;
end if;

<<return_value>>
 null;
exception when others then
	CALL gravar_log_cpoe(substr('CPOE_SHOPPINGCART_ENTERAL EXCEPTION:'|| substr(to_char(sqlerrm),1,2000) || '//nr_sequencia_p: '|| nr_sequencia_p,1,40000));
	ds_retorno_p := 'N';
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_shoppingcart_enteral (nr_sequencia_p bigint, ie_retrogrado_p text, ds_retorno_p INOUT text) FROM PUBLIC;

