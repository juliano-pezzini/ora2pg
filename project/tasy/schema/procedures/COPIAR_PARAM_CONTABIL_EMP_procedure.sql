-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copiar_param_contabil_emp ( cd_empresa_origem_p bigint, cd_empresa_destino_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  ]  Objetos do dicionario [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
-------------------------------------------------------------------------------------------------------------------

Referencias:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_observacao_w				varchar(255);
qt_registro_w				bigint	:= 0;
cd_conta_receita_w			parametros_conta_contabil.cd_conta_receita%type;
cd_conta_estoque_w			parametros_conta_contabil.cd_conta_estoque%type;
cd_conta_passag_direta_w		parametros_conta_contabil.cd_conta_passag_direta%type;
cd_conta_despesa_w			parametros_conta_contabil.cd_conta_despesa%type;
cd_conta_rec_pacote_w			parametros_conta_contabil.cd_conta_rec_pacote%type;
cd_conta_desp_pre_fatur_w		parametros_conta_contabil.cd_conta_desp_pre_fatur%type;
cd_conta_ajuste_prod_w			parametros_conta_contabil.cd_conta_ajuste_prod%type;
cd_conta_redut_receita_w		parametros_conta_contabil.cd_conta_redut_receita%type;
cd_conta_gratuidade_w			parametros_conta_contabil.cd_conta_gratuidade%type;
cd_conta_perda_pre_fat_w		parametros_conta_contabil.cd_conta_perda_pre_fat%type;
cd_conta_subvencao_w			parametros_conta_contabil.cd_conta_subvencao%type;
cd_conta_estoque_terc_w			parametros_conta_contabil.cd_conta_estoque_terc%type;
qt_reg_origem_w				bigint;
qt_reg_dest_w				bigint;
nr_seq_grupo_w				grupo_empresa.nr_sequencia%type;
cd_sequencia_param_ref_w		parametros_conta_contabil.cd_sequencia_param_ref%type;

c01 CURSOR FOR
	SELECT	a.cd_conta_receita,
		a.cd_conta_estoque,
		a.cd_conta_passag_direta,
		a.cd_grupo_material,
		a.cd_subgrupo_material,
		a.cd_classe_material,
		a.cd_material,
		a.cd_area_proced,
		a.cd_especial_proced,
		a.cd_grupo_proced,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.cd_conta_despesa,
		a.cd_setor_atendimento,
		a.ie_tipo_atendimento,
		a.ie_classif_convenio,
		a.cd_convenio,
		a.ie_clinica,
		a.cd_local_estoque,
		a.dt_inicio_vigencia,
		a.dt_fim_vigencia,
		a.ds_observacao,
		a.cd_categoria_convenio,
		a.ie_tipo_convenio,
		a.cd_plano,
		a.cd_conta_rec_pacote,
		a.ie_tipo_centro,
		a.ie_tipo_tributo_item,
		a.ie_complexidade_sus,
		a.ie_tipo_financ_sus,
		a.cd_historico,
		a.ie_consiste_proc_princ_aih,
		a.cd_operacao_nf,
		a.ie_situacao_conta_pac,
		a.cd_natureza_operacao,
		a.cd_empresa,
		a.nr_seq_motivo_solic,
		a.cd_conta_desp_pre_fatur,
		a.cd_conta_ajuste_prod,
		a.cd_conta_redut_receita,
		a.cd_conta_estoque_terc,
		a.cd_conta_subvencao,
		a.cd_conta_perda_pre_fat,
		a.cd_conta_gratuidade,
		a.cd_sequencia_parametro,
		a.nr_seq_proc_interno,
		a.nr_seq_regra_valor,
        a.nr_seq_familia
	from	parametros_conta_contabil a
	where	coalesce(a.cd_estabelecimento::text, '') = ''
	and	a.dt_inicio_vigencia <= clock_timestamp()
	and	((a.dt_fim_vigencia >= clock_timestamp()) or (coalesce(a.dt_fim_vigencia::text, '') = ''))
	and	a.cd_empresa	= cd_empresa_origem_p;

vet01	C01%RowType;


BEGIN

select	count(1)
into STRICT	qt_reg_origem_w
from	parametros_conta_contabil a
where	coalesce(a.cd_estabelecimento::text, '') = ''
and	a.dt_inicio_vigencia <= clock_timestamp()
and	((a.dt_fim_vigencia >= clock_timestamp()) or (coalesce(a.dt_fim_vigencia::text, '') = ''))
and	a.cd_empresa	= cd_empresa_origem_p;

select	count(1)
into STRICT	qt_reg_dest_w
from	parametros_conta_contabil a
where	coalesce(a.cd_estabelecimento::text, '') = ''
and	a.cd_empresa = cd_empresa_destino_p;

ds_observacao_w		:= wheb_mensagem_pck.get_texto(299137,	'DT_DUPLIC=' || to_char(clock_timestamp(),'dd/mm/yyyy hh24:mi:ss') || ';' ||
								'NM_DUPLIC=' || nm_usuario_p || ';' ||
								'NM_ESTAB=' || null);

if	((dividir((qt_reg_dest_w * 100),qt_reg_origem_w) <= 10)  and (qt_reg_origem_w > 0)) then
	begin

	open C01;
	loop
	fetch C01 into
		vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		qt_registro_w	:= qt_registro_w + 1;

		cd_conta_receita_w		:= obter_conta_empresa_ref(cd_empresa_destino_p, vet01.cd_conta_receita);
		cd_conta_estoque_w		:= obter_conta_empresa_ref(cd_empresa_destino_p, vet01.cd_conta_estoque);
		cd_conta_passag_direta_w	:= obter_conta_empresa_ref(cd_empresa_destino_p, vet01.cd_conta_passag_direta);
		cd_conta_despesa_w		:= obter_conta_empresa_ref(cd_empresa_destino_p, vet01.cd_conta_despesa);
		cd_conta_rec_pacote_w		:= obter_conta_empresa_ref(cd_empresa_destino_p, vet01.cd_conta_rec_pacote);
		cd_conta_desp_pre_fatur_w	:= obter_conta_empresa_ref(cd_empresa_destino_p, vet01.cd_conta_desp_pre_fatur);
		cd_conta_ajuste_prod_w		:= obter_conta_empresa_ref(cd_empresa_destino_p, vet01.cd_conta_ajuste_prod);
		cd_conta_redut_receita_w	:= obter_conta_empresa_ref(cd_empresa_destino_p, vet01.cd_conta_redut_receita);
		cd_conta_gratuidade_w		:= obter_conta_empresa_ref(cd_empresa_destino_p, vet01.cd_conta_gratuidade);
		cd_conta_perda_pre_fat_w	:= obter_conta_empresa_ref(cd_empresa_destino_p, vet01.cd_conta_perda_pre_fat);
		cd_conta_subvencao_w		:= obter_conta_empresa_ref(cd_empresa_destino_p, vet01.cd_conta_subvencao);
		cd_conta_estoque_terc_w		:= obter_conta_empresa_ref(cd_empresa_destino_p, vet01.cd_conta_estoque_terc);
		nr_seq_grupo_w			:= holding_pck.get_grupo_emp_usuario(cd_empresa_origem_p);

		if (coalesce(nr_seq_grupo_w,0) > 0) then
			cd_sequencia_param_ref_w := vet01.cd_sequencia_parametro;
		else
			cd_sequencia_param_ref_w := null;
		end if;

		insert into parametros_conta_contabil(cd_sequencia_parametro,
			cd_conta_receita,
			cd_conta_estoque,
			cd_conta_passag_direta,
			cd_grupo_material,
			cd_subgrupo_material,
			cd_classe_material,
			cd_material,
			cd_area_proced,
			cd_especial_proced,
			cd_grupo_proced,
			cd_procedimento,
			nm_usuario,
			dt_atualizacao,
			ie_origem_proced,
			cd_conta_despesa,
			cd_setor_atendimento,
			ie_tipo_atendimento,
			ie_classif_convenio,
			cd_convenio,
			ie_clinica,
			cd_local_estoque,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_inicio_vigencia,
			dt_fim_vigencia,
			ds_observacao,
			cd_categoria_convenio,
			ie_tipo_convenio,
			cd_plano,
			cd_conta_rec_pacote,
			ie_tipo_centro,
			ie_tipo_tributo_item,
			ie_complexidade_sus,
			ie_tipo_financ_sus,
			cd_historico,
			ie_consiste_proc_princ_aih,
			cd_operacao_nf,
			ie_situacao_conta_pac,
			cd_natureza_operacao,
			cd_empresa,
			nr_seq_motivo_solic,
			cd_conta_desp_pre_fatur,
			cd_conta_ajuste_prod,
			cd_conta_redut_receita,
			cd_conta_gratuidade,
			cd_conta_perda_pre_fat,
			cd_conta_subvencao,
			cd_conta_estoque_terc,
			cd_sequencia_param_ref,
			nr_seq_proc_interno,
			nr_seq_regra_valor,
            nr_seq_familia)
		values (nextval('parametros_conta_contabil_seq'),
			cd_conta_receita_w,
			cd_conta_estoque_w,
			cd_conta_passag_direta_w,
			vet01.cd_grupo_material,
			vet01.cd_subgrupo_material,
			vet01.cd_classe_material,
			vet01.cd_material,
			vet01.cd_area_proced,
			vet01.cd_especial_proced,
			vet01.cd_grupo_proced,
			vet01.cd_procedimento,
			nm_usuario_p,
			clock_timestamp(),
			vet01.ie_origem_proced,
			cd_conta_despesa_w,
			vet01.cd_setor_atendimento,
			vet01.ie_tipo_atendimento,
			vet01.ie_classif_convenio,
			vet01.cd_convenio,
			vet01.ie_clinica,
			vet01.cd_local_estoque,
			clock_timestamp(),
			nm_usuario_p,
			vet01.dt_inicio_vigencia,
			vet01.dt_fim_vigencia,
			substr(ds_observacao_w || chr(13) || chr(10) || vet01.ds_observacao,1,255),
			vet01.cd_categoria_convenio,
			vet01.ie_tipo_convenio,
			vet01.cd_plano,
			cd_conta_rec_pacote_w,
			vet01.ie_tipo_centro,
			vet01.ie_tipo_tributo_item,
			vet01.ie_complexidade_sus,
			vet01.ie_tipo_financ_sus,
			vet01.cd_historico,
			vet01.ie_consiste_proc_princ_aih,
			vet01.cd_operacao_nf,
			vet01.ie_situacao_conta_pac,
			vet01.cd_natureza_operacao,
			cd_empresa_destino_p,
			vet01.nr_seq_motivo_solic,
			cd_conta_desp_pre_fatur_w,
			cd_conta_ajuste_prod_w,
			cd_conta_redut_receita_w,
			cd_conta_gratuidade_w,
			cd_conta_perda_pre_fat_w,
			cd_conta_subvencao_w,
			cd_conta_estoque_terc_w,
			cd_sequencia_param_ref_w,
			vet01.nr_seq_proc_interno,
			vet01.nr_seq_regra_valor,
            vet01.nr_seq_familia);

		if (qt_registro_w >= 100) then
			qt_registro_w	:= 0;
			commit;
		end if;

		end;
	end loop;
	close C01;

	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copiar_param_contabil_emp ( cd_empresa_origem_p bigint, cd_empresa_destino_p bigint, nm_usuario_p text) FROM PUBLIC;

