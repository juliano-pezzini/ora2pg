-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_ficha_ocorrencia_import (nr_atendimento_p bigint, cd_medico_resp_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
 
-- Parametros buscados da função ficha de ocorrencia 
ie_importar_medic_w		varchar(1);
ie_importar_propaci_w		varchar(1);
ie_vincular_medic_conta_w	varchar(1);

-- Verifica se já não há registros 
ie_existe_cirurgia_w		varchar(1);
ie_existe_cultura_w		varchar(1);
ie_existe_medicamento_w		varchar(1);
ie_existe_procedimento_w	varchar(1);

ds_erro_w			varchar(500);
nr_ficha_ocorrencia_w		bigint;
		
dt_diagnostico_w		timestamp;
cd_medico_w			varchar(10);
cd_doenca_w			varchar(10);
cd_tipo_evolucao_w		bigint;

ie_utiliza_medico_atend_w	varchar(1);
cd_medico_resp_w		varchar(10);
ie_clinica_w			integer;


BEGIN 
if (coalesce(nr_atendimento_p,0) > 0) then 
	select	max(ie_clinica) 
	into STRICT	ie_clinica_w 
	from	atendimento_paciente 
	where	nr_atendimento = nr_atendimento_p;
	 
	CALL ccih_gerar_ficha_ocorrencia(nr_atendimento_p,null,cd_medico_resp_p, nm_usuario_p,'N',ie_clinica_w);
 
	select 	max(nr_ficha_ocorrencia) 
	into STRICT	nr_ficha_ocorrencia_w 
	from 	cih_ficha_ocorrencia 
	where 	nr_atendimento = nr_atendimento_p;
 
 
	if (nr_ficha_ocorrencia_w IS NOT NULL AND nr_ficha_ocorrencia_w::text <> '') then 
 
		select	obter_tipo_evol_motivo_alta(cd_motivo_alta) 
		into STRICT	cd_tipo_evolucao_w 
		from	atendimento_paciente 
		where	nr_atendimento 	= nr_atendimento_p;
 
		if (cd_tipo_evolucao_w IS NOT NULL AND cd_tipo_evolucao_w::text <> '') then 
 
			update	cih_ficha_ocorrencia 
			set	cd_tipo_evolucao= cd_tipo_evolucao_w 
			where	nr_ficha_ocorrencia =	nr_ficha_ocorrencia_w;
			 
		end if;
		 
		select 	max(dt_diagnostico) 
		into STRICT	dt_diagnostico_w 
		from	diagnostico_doenca 
		where	nr_atendimento = nr_atendimento_p;
		 
		 
		if (dt_diagnostico_w IS NOT NULL AND dt_diagnostico_w::text <> '') then 
		 
			select 	max(cd_doenca), 
				max(Obter_medico_diagnostico(nr_atendimento_p, dt_diagnostico_w,'C')) 
			into STRICT	cd_doenca_w, 
				cd_medico_w 
			from	diagnostico_doenca 
			where	nr_atendimento 	 = nr_atendimento_p 
			and	dt_diagnostico 		= dt_diagnostico_w;
			 
			 
			select	obter_tipo_evol_motivo_alta(cd_motivo_alta) 
			into STRICT	cd_tipo_evolucao_w 
			from	atendimento_paciente 
			where	nr_atendimento 	= nr_atendimento_p;
			 
			if ((cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') or (cd_doenca_w IS NOT NULL AND cd_doenca_w::text <> ''))then 
			 
				update	cih_ficha_ocorrencia 
				set	cd_medico	= cd_medico_w, 
					cd_doenca_cid	= cd_doenca_w 
				where	nr_ficha_ocorrencia =	nr_ficha_ocorrencia_w;
 
			end if;
			 
		end if;
		 
		 
		select	Obter_Valor_Param_Usuario(7043,7,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p) 
		into STRICT	ie_utiliza_medico_atend_w 
		;
		 
		if (ie_utiliza_medico_atend_w = 'S') then 
			 
			select max(cd_medico_resp) 
			into STRICT	cd_medico_resp_w 
			from 	atendimento_paciente 
			where 	nr_atendimento = nr_atendimento_p;
		 
			update	cih_ficha_ocorrencia 
			set	cd_medico	= cd_medico_resp_w 
			where	nr_ficha_ocorrencia =	nr_ficha_ocorrencia_w;
		 
		end if;
		 
		 
		 
		 
		-- Importar Cirurgia 
		ie_importar_medic_w := obter_param_usuario(936, 11, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_importar_medic_w);
		ie_importar_propaci_w := obter_param_usuario(936, 23, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_importar_propaci_w);
		ds_erro_w := CIH_Importar_Cirurgia(nr_ficha_ocorrencia_w, nm_usuario_p, ie_importar_medic_w, ie_importar_propaci_w, null, ds_erro_w);
		if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') or (ds_erro_w <> '') then		 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(193795, 'DS_ERRO='||ds_erro_w);	
		end if;
 
		-- Importar Cultura 
		CALL CIH_Importar_Cultura(nr_ficha_ocorrencia_w,nm_usuario_p);
 
		-- Importar Medicamento	 
		ie_vincular_medic_conta_w := obter_param_usuario(936, 23, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_vincular_medic_conta_w);
		CALL CIH_Importar_Medicamento(nr_ficha_ocorrencia_w,nm_usuario_p,ie_vincular_medic_conta_w,null);	
		 
		-- Importar Procedimento 
		CALL cih_importar_procedimentos(nr_ficha_ocorrencia_w, nm_usuario_p);	
		 
	end if;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_ficha_ocorrencia_import (nr_atendimento_p bigint, cd_medico_resp_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

