-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_gerar_proc_assoc ( nr_seq_ageint_p bigint, nr_seq_Ageint_item_p bigint, nr_seq_proc_interno_p bigint, nm_usuario_p text, nr_seq_grupo_p bigint) AS $body$
DECLARE


nr_seq_proc_interno_w	bigint;
qt_pontos_w			preco_amb.qt_pontuacao%type;
cd_convenio_w		integer;
cd_convenio_ww		integer;
cd_convenio_aux_w	integer;
qt_idade_pac_w		double precision;
qt_exame_assoc_w	bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
cd_categoria_w		varchar(10);
cd_categoria_aux_w	varchar(10);
cd_plano_w		varchar(10);
cd_plano_aux_w		varchar(10);
cd_categoria_ww		varchar(10);
cd_plano_ww		varchar(10);
ie_tipo_Atendimento_w	smallint;
cd_usuario_convenio_w	varchar(30);
ds_aux_w		varchar(10);
ie_regra_w		integer;
nr_seq_regra_w		bigint;
ie_glosa_w		varchar(1);
vl_aux_w		double precision;
ie_sexo_w		varchar(1);
cd_pessoa_fisica_w	varchar(10);
qt_idade_w		smallint;
dt_nascimento_w		timestamp;
cd_estabelecimento_w	integer;
ie_agenda_integrada_w	varchar(1)	:= 'N';
CD_EDICAO_AMB_w		integer;
VL_PROCEDIMENTO_w	double precision	:= 0;
ie_tipo_convenio_w	smallint;
ie_edicao_w		varchar(1);
ie_pacote_w		varchar(1);
qt_item_edicao_w	bigint;
cd_edicao_ajuste_w	bigint;
ie_tipo_agendamento_w	varchar(15);

ie_resp_autor_w		varchar(10);
ie_autorizacao_w	varchar(3);

ie_lanc_adic_orc_w	varchar(1)	:= 'N';
nr_seq_regra_assoc_w	bigint;
ds_retorno_w		varchar(255);
nr_seq_grupo_w		bigint;

cd_convenio_part_w	integer;
cd_categoria_part_w	varchar(10);
vl_procedimento_part_w	double precision;
ie_vl_particular_w	varchar(1);
ie_calc_glosa_atend_w	varchar(1);
nr_seq_ajuste_proc_w	bigint;
pr_glosa_w				double precision;
vl_glosa_w				double precision;
ie_regra_arredondamento_tx_w	varchar(1):= 'N';
ie_tipo_rounded_w		varchar(1);
ie_regra_arred_IPE_w		varchar(1):= 'N';
IE_CALCULA_GLOSA_w			parametro_Agenda_integrada.ie_calcula_glosa%type;
ie_param_444_w               varchar(1) := '';
ie_excluir_valor             varchar(1) := 'N';

c01 CURSOR FOR
	SELECT	coalesce(nr_seq_proc_int_adic,0),
		cd_procedimento,
		ie_origem_proced,
		coalesce(ie_agenda_integrada, 'N'),
		coalesce(ie_tipo_agendamento, 'E')
	from	proc_int_proc_prescr
	where	nr_seq_proc_interno	= nr_seq_proc_interno_p
	and 	coalesce(cd_convenio,cd_convenio_w) = cd_convenio_w
	and (coalesce(cd_convenio_excluir::text, '') = '' or cd_convenio_excluir <> cd_convenio_w)
	and	Obter_conv_excluir_proc_assoc(nr_sequencia, cd_convenio_w)	= 'S'
	and	coalesce(ie_somente_agenda_cir,'N') = 'N'
	/*and	((a.cd_medico_prescritor is null) or
		 (a.cd_medico_prescritor = p.cd_medico_exec))
	and	((a.cd_medico_excluir is null) or
		 (a.cd_medico_excluir <> p.cd_medico_exec))*/
	and	(((coalesce(qt_idade_pac_w::text, '') = '') or (coalesce(qt_idade_min::text, '') = '' and coalesce(qt_idade_max::text, '') = '')) or
		((qt_idade_pac_w IS NOT NULL AND qt_idade_pac_w::text <> '') and (qt_idade_pac_w between coalesce(qt_idade_min,qt_idade_pac_w) and
		coalesce(qt_idade_max,qt_idade_pac_w))))
	and Obter_se_proc_interno_ativo(nr_seq_proc_int_adic) = 'A';


BEGIN

select	coalesce(max(IE_CALCULA_GLOSA),'N')
into STRICT	IE_CALCULA_GLOSA_w
from	parametro_Agenda_integrada
where	coalesce(cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento)	= wheb_usuario_pck.get_cd_estabelecimento;

select	max(a.cd_convenio),
	max(a.cd_categoria),
	max(a.cd_plano),
	max(obter_idade_pf(a.cd_pessoa_fisica, clock_timestamp(), 'A')),
	max(a.ie_tipo_Atendimento),
	max(cd_usuario_convenio_w),
	max(a.cd_pessoa_fisica),
	max(a.cd_estabelecimento),
	max(b.ie_tipo_convenio)
into STRICT	cd_convenio_w,
	cd_categoria_w,
	cd_plano_w,
	qt_idade_pac_w,
	ie_tipo_Atendimento_w,
	cd_usuario_convenio_w,
	cd_pessoa_fisica_w,
	cd_estabelecimento_w,
	ie_tipo_convenio_w
from	agenda_integrada a,
	convenio b
where	a.nr_sequencia	= nr_seq_ageint_p
and	a.cd_convenio	= b.cd_convenio;

ie_calc_glosa_atend_w := obter_param_usuario(869, 262, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_calc_glosa_atend_w);

if (nr_seq_grupo_p	= 0) then
	nr_seq_grupo_w	:= null;
end if;

ie_lanc_adic_orc_w := Obter_Param_Usuario(869, 115, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_lanc_adic_orc_w);
ie_vl_particular_w := Obter_Param_Usuario(869, 331, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_vl_particular_w);
ie_param_444_w := obter_param_usuario(869, 444, obter_perfil_ativo, nm_usuario_p, 0, ie_param_444_w);

if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		select	max(ie_Sexo),
			max(dt_nascimento)
		into STRICT	ie_Sexo_w,
			dt_nascimento_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
	end if;

	qt_idade_w	:= obter_idade(dt_nascimento_w, clock_timestamp(), 'A');

select	max(cd_convenio),
	max(cd_categoria),
	max(cd_plano)
into STRICT	cd_convenio_ww,
	cd_categoria_ww,
	cd_plano_ww
from	agenda_integrada_conv_item
where	nr_seq_agenda_item	= nr_seq_Ageint_item_p;

if (cd_convenio_ww IS NOT NULL AND cd_convenio_ww::text <> '') then
	cd_convenio_w	:= cd_convenio_ww;
	cd_categoria_w	:= cd_categoria_ww;
	cd_plano_w	:= cd_plano_ww;
end if;

/*insert into log_atendimento (dt_atualizacao, nm_usuario, cd_log, ds_log)
	values (sysdate, nm_usuario_p, 9, qt_idade_pac_w || ' - ' || cd_convenio_w || ' - ' || nr_seq_proc_interno_p);*/
open c01;
loop
fetch c01 into
	nr_seq_proc_interno_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	ie_agenda_integrada_w,
	ie_tipo_agendamento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	
	/*insert into log_atendimento (dt_atualizacao, nm_usuario, cd_log, ds_log)
		values (sysdate, nm_usuario_p, 9, nr_seq_proc_interno_w);*/
	
	if (nr_seq_proc_interno_w	> 0) then
		select	count(*)
		into STRICT	qt_exame_assoc_w
		from	ageint_Exame_associado
		where	nr_seq_proc_interno	= nr_seq_proc_interno_w
		and	nr_seq_Ageint_item	= nr_seq_ageint_item_p;
		
		if (coalesce(cd_procedimento_w::text, '') = '') or (coalesce(ie_origem_proced_w::text, '') = '') then
			SELECT * FROM obter_proc_tab_interno_conv(
						nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
		end if;
			
		if (ie_agenda_integrada_w	= 'N') then
		
			SELECT * FROM Consiste_Plano_mat_proc(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, coalesce(ie_tipo_Atendimento_w,0), 0, 0, null, nr_Seq_proc_interno_w, ds_aux_w, ds_aux_w, ie_regra_w, nr_seq_regra_w) INTO STRICT ds_aux_w, ds_aux_w, ie_regra_w, nr_seq_regra_w;
			SELECT * FROM obter_regra_Ajuste_proc(
						cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, coalesce(ie_tipo_Atendimento_w,0), null, null, null, qt_idade_w, NULL, nr_Seq_proc_interno_w, cd_usuario_convenio_w, cd_plano_w, null, null, ie_sexo_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, ds_aux_w, ie_glosa_w, vl_aux_w, vl_aux_w, cd_edicao_ajuste_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, pr_glosa_w, vl_glosa_w, vl_aux_w, null, null, ds_aux_w, vl_aux_w, ds_aux_w, vl_aux_w, null, null, null, null, null, null, null, null, vl_aux_w, null, null, null, null, null, null, null, null, null, null) INTO STRICT vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, ds_aux_w, ie_glosa_w, vl_aux_w, vl_aux_w, cd_edicao_ajuste_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, pr_glosa_w, vl_glosa_w, vl_aux_w, ds_aux_w, vl_aux_w, ds_aux_w, vl_aux_w, vl_aux_w;

			ie_autorizacao_w	:= null;
			if (ie_regra_w in (3,6,7)) then
				select 	coalesce(max(ie_resp_autor),'H')
				into STRICT	ie_resp_autor_w
				from 	regra_convenio_plano
				where 	nr_sequencia = nr_seq_regra_w;
				if (ie_resp_autor_w	= 'H') then
					ie_autorizacao_w	:= 'PAH';
				elsif (ie_resp_autor_w	= 'P') then
					ie_autorizacao_w	:= 'PAP';
				end if;
			end if;
						
			ie_edicao_w	:= ageint_obter_se_proc_conv(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, clock_timestamp(), cd_procedimento_W, ie_origem_proced_w, nr_Seq_proc_interno_w, ie_tipo_atendimento_w);
		
			ie_pacote_w	:= obter_Se_pacote_convenio(cd_procedimento_w, ie_origem_proced_w, cd_convenio_w, cd_estabelecimento_w);
	 		
			if (ie_edicao_w 				= 'N') and (coalesce(cd_edicao_ajuste_w,0) 	= 0) and (coalesce(ie_glosa_w,'L') 		= 'L') and (ie_pacote_w				= 'N') then
				ie_glosa_w        			:= 'T';
			end if;
	
					      
			if (ie_edicao_w 				= 'N') and (coalesce(cd_edicao_ajuste_w,0) 	> 0) and (coalesce(ie_glosa_w,'L') 		= 'L') and (ie_pacote_w				= 'N') then
			
				select   count(*)
				into STRICT       qt_item_edicao_w
				from      preco_amb
				where   cd_edicao_amb = cd_edicao_ajuste_w
				and       cd_procedimento = cd_procedimento_w
				and       ie_origem_proced = ie_origem_proced_w;
						
				if (qt_item_edicao_w = 0) then
					    ie_glosa_w :=    'G';
				end if;
					
			end if;
			
			if 	ie_glosa_w = 'E' and
				coalesce(ie_param_444_w,'N') = 'N' and
				ie_tipo_convenio_w = '1' then
				ie_excluir_valor := 'S';
			end if;
			
			cd_convenio_aux_w	:= cd_convenio_w;
			cd_categoria_aux_w	:= cd_categoria_w;
			cd_plano_aux_w		:= cd_plano_w;
							
			if (ie_excluir_valor = 'S') OR
				(((((coalesce(ie_Regra_w,0) not in (1,2,5)) or (coalesce(ie_glosa_w,'') not in ('T','E','R','B','H','Z',''))) and (ie_tipo_convenio_w <> 1) and (ie_calc_glosa_atend_w = 'N')) or				
					((ie_calc_glosa_atend_w = 'S') 	and (ie_tipo_convenio_w <> 1) 	and
					 ((coalesce(ie_glosa_w,'') not in ('T','G','P')) or (coalesce(ie_glosa_w::text, '') = '')))) and (IE_CALCULA_GLOSA_w = 'N' or (IE_CALCULA_GLOSA_w = 'S' and (coalesce(ie_glosa_w,'') not in ('P','R') or (coalesce(ie_glosa_w::text, '') = ''))))) then
				 vl_procedimento_w	:= 0;
			else				
				if (ie_glosa_w	in ('P','R') and
					IE_CALCULA_GLOSA_w = 'S') then
					SELECT * FROM Define_Preco_Procedimento(
							CD_ESTABELECIMENTO_w, cd_convenio_w, cd_categoria_w, clock_timestamp(), CD_PROCEDIMENTO_w, 0, coalesce(ie_tipo_Atendimento_w,0), 0, null, --medico
							0, 0, 0, nr_seq_proc_interno_w, null, --usuario convenio
							cd_plano_w, 0, 0, null, VL_PROCEDIMENTO_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, qt_pontos_w, CD_EDICAO_AMB_w, ds_aux_w, nr_seq_ajuste_proc_w, 0, null, 0, 'N', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null) INTO STRICT VL_PROCEDIMENTO_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, qt_pontos_w, CD_EDICAO_AMB_w, ds_aux_w, nr_seq_ajuste_proc_w;
					if (ie_glosa_w = 'P') then
						vl_glosa_w:= vl_procedimento_w * pr_glosa_w / 100;
						
						/* ROTINA DE ARREDONDAMENTO, USADO PELO CONVENIO IPE   --->>    INICIO  <<----- */

						begin
						select 	coalesce(max(ie_regra_arredondamento_tx),'N')
						into STRICT	ie_regra_arredondamento_tx_w
						from 	parametro_faturamento
						where 	cd_estabelecimento = cd_estabelecimento_w;
						exception
							when others then
								ie_regra_arredondamento_tx_w:= 'N';
						end;	

						if (ie_regra_arredondamento_tx_w = 'S')then

							select	max(ie_arredondamento)
							into STRICT	ie_tipo_rounded_w
							from	convenio_estabelecimento
							where	cd_convenio	  	= cd_convenio_w
							and	cd_estabelecimento	= cd_estabelecimento_w;

							if (ie_tipo_rounded_w = 'R') then

								select 	obter_regra_arredondamento(cd_convenio_w, cd_categoria_w, cd_procedimento_w, ie_origem_proced_w, cd_estabelecimento_w,
										coalesce(clock_timestamp(),clock_timestamp()), 'P', 1)
								into STRICT	ie_tipo_rounded_w
								;
								
								ie_regra_arred_IPE_w:= 'S';

							end if;

							if (ie_tipo_rounded_w IS NOT NULL AND ie_tipo_rounded_w::text <> '') and (ie_regra_arred_IPE_w = 'S') then

								vl_glosa_w := arredondamento(vl_glosa_w, 2, ie_tipo_rounded_w);
								
							else
								ie_regra_arred_IPE_w:= 'N';
							end if;

						end if;
						if (vl_glosa_w	> 0)  then
							vl_procedimento_w	:= vl_procedimento_w - vl_glosa_w;
						end if;	
					else
						vl_procedimento_w:= vl_glosa_w;
					end if;
				else
					if (ie_tipo_convenio_w <> 1) then
						select	max(cd_convenio_partic),
							max(cd_categoria_partic)
						into STRICT	cd_convenio_w,
							cd_categoria_w
						from	parametro_faturamento
						where	cd_estabelecimento	= cd_estabelecimento_w;
						
						if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') then
							select	max(cd_plano)
							into STRICT	cd_plano_w
							from	convenio_plano
							where	cd_convenio	= cd_convenio_w
							and	ie_situacao	= 'A';
						end if;
					end if;		
					SELECT * FROM Define_Preco_Procedimento(
							CD_ESTABELECIMENTO_w, cd_convenio_w, cd_categoria_w, clock_timestamp(), CD_PROCEDIMENTO_w, 0, coalesce(ie_tipo_Atendimento_w,0), 0, null, --medico
							0, 0, 0, nr_seq_proc_interno_w, null, --usuario convenio
							cd_plano_w, 0, 0, null, VL_PROCEDIMENTO_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, qt_pontos_w, CD_EDICAO_AMB_w, ds_aux_w, nr_seq_ajuste_proc_w, 0, null, 0, 'N', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null) INTO STRICT VL_PROCEDIMENTO_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, qt_pontos_w, CD_EDICAO_AMB_w, ds_aux_w, nr_seq_ajuste_proc_w;
				end if;
			END IF;
			
			if (ie_vl_particular_w = 'S') then
				
				SELECT * FROM obter_convenio_particular(cd_estabelecimento_w, cd_convenio_part_w, cd_categoria_part_w) INTO STRICT cd_convenio_part_w, cd_categoria_part_w;
			
				SELECT * FROM Define_Preco_Procedimento(
						CD_ESTABELECIMENTO_w, cd_convenio_part_w, cd_categoria_part_w, clock_timestamp(), CD_PROCEDIMENTO_w, 0, coalesce(ie_tipo_Atendimento_w,0), 0, null, --medico
						0, 0, 0, nr_seq_proc_interno_w, null, --usuario convenio
						null, 0, 0, null, vl_procedimento_part_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, qt_pontos_w, CD_EDICAO_AMB_w, ds_aux_w, nr_seq_ajuste_proc_w, 0, null, 0, 'N', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null) INTO STRICT vl_procedimento_part_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, qt_pontos_w, CD_EDICAO_AMB_w, ds_aux_w, nr_seq_ajuste_proc_w;
				
			end if;
			
			if (qt_exame_assoc_w	= 0) then
			
				if ie_excluir_valor = 'S' then
				   VL_PROCEDIMENTO_w := 0;
				   vl_procedimento_part_w := 0;
				end if;
				
				insert into ageint_exame_associado(nr_sequencia,
					nr_seq_ageint_item,
					nr_seq_proc_interno,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_procedimento,
					ie_origem_proced,
					ie_regra,
					ie_glosa,
					vl_exame,
					ie_autorizacao,
					vl_exame_particular)
				values (nextval('ageint_exame_associado_seq'),
					nr_Seq_ageint_item_p,
					nr_seq_proc_interno_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_procedimento_w,
					ie_origem_proced_w,
					ie_regra_w,
					ie_glosa_w,
					VL_PROCEDIMENTO_w,
					ie_autorizacao_w,
					vl_procedimento_part_w);
			end if;
		else
			SELECT * FROM Ageint_Consistir_Regra_Ex_Adic(nr_seq_ageint_p, nr_seq_proc_interno_w, cd_estabelecimento_w, nm_usuario_p, nr_seq_regra_assoc_w, ds_retorno_w) INTO STRICT nr_seq_regra_assoc_w, ds_retorno_w;
			
			if (coalesce(ds_retorno_w::text, '') = '') then
				insert into agenda_integrada_item(nr_sequencia,
						nr_seq_agenda_int,
						nm_usuario,
						dt_atualizacao,
						nm_usuario_nrec,
						dt_atualizacao_nrec,
						nr_seq_proc_interno,
						cd_procedimento,
						ie_origem_proced,
						ie_tipo_agendamento,
						nr_seq_grupo_selec)
					values (nextval('agenda_integrada_item_seq'),
						nr_seq_ageint_p,
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nr_seq_proc_interno_w,
						cd_procedimento_w,
						ie_origem_proced_w,
						ie_tipo_agendamento_w,
						nr_seq_grupo_w);
			end if;
		end if;
	end if;
	end;
end loop;
close c01;

if (ie_lanc_adic_orc_w = 'S') then

	select	max(cd_procedimento),
		max(ie_origem_proced),
		max(nr_seq_proc_interno)
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_proc_interno_w
	from	agenda_integrada_item
	where	nr_sequencia =  nr_seq_Ageint_item_p;
	
		SELECT * FROM Define_Preco_Procedimento(
					CD_ESTABELECIMENTO_w, cd_convenio_w, cd_categoria_w, clock_timestamp(), CD_PROCEDIMENTO_w, 0, coalesce(ie_tipo_Atendimento_w,0), 0, null, --medico
					0, 0, 0, nr_seq_proc_interno_w, null, --usuario convenio
					cd_plano_w, 0, 0, null, VL_PROCEDIMENTO_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, qt_pontos_w, CD_EDICAO_AMB_w, ds_aux_w, nr_seq_ajuste_proc_w, 0, null, 0, 'N', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null) INTO STRICT VL_PROCEDIMENTO_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, qt_pontos_w, CD_EDICAO_AMB_w, ds_aux_w, nr_seq_ajuste_proc_w;

	CALL ageint_Gerar_Lanc_Aut_Orc(cd_estabelecimento_w,
					cd_convenio_w,
					cd_categoria_w,
					clock_timestamp(),
					null,
					null,
					null,
					null,
					null,
					qt_idade_pac_w,
					null,
					null,
					nr_seq_proc_interno_p,
					ie_tipo_atendimento_w,
					null,
					cd_usuario_convenio_w,
					cd_plano_w,
					null,
					null,
					null,
					cd_edicao_amb_w,
					nr_seq_ageint_item_p,
					nm_usuario_p,
					ie_sexo_w);

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_gerar_proc_assoc ( nr_seq_ageint_p bigint, nr_seq_Ageint_item_p bigint, nr_seq_proc_interno_p bigint, nm_usuario_p text, nr_seq_grupo_p bigint) FROM PUBLIC;

