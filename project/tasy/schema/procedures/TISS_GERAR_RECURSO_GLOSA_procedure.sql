-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_gerar_recurso_glosa (nr_seq_lote_hist_p lote_audit_hist.nr_sequencia%type, nm_usuario_p tiss_recurso_glosa_prot.nm_usuario%type) AS $body$
DECLARE


cd_convenio_w			lote_auditoria.cd_convenio%type;
cd_estabelecimento_w	lote_auditoria.cd_estabelecimento%type;
cd_cgc_prest_w			estabelecimento.cd_cgc%type;

nr_seq_prot_recurso_w	tiss_recurso_glosa_prot.nr_sequencia%type;
cd_prestador_w			tiss_recurso_glosa_prot.cd_prestador%type;
nm_prestador_w			tiss_recurso_glosa_prot.nm_prestador%type;

nr_seq_lote_hist_w      lote_audit_hist.nr_sequencia%type := nr_seq_lote_hist_p;
nm_usuario_w            tiss_recurso_glosa_prot.nm_usuario%type := nm_usuario_p;

nr_protocolo_w			       	tiss_recurso_glosa_prot.nr_protocolo%type;
nr_protocolo_dem_conta_w		tiss_dem_lote.nr_protocolo%type;
cd_interno_w			        convenio_prestador.cd_prestador_convenio%type;
vl_recursado_w			        tiss_recurso_glosa_item.vl_recursado%type;
vl_recursado_guia_w		        tiss_recurso_glosa_guia.vl_recursado_guia%type;
count_w				            integer;
ie_gerar_lote_rec_tiss_w        tiss_parametros_convenio.ie_gerar_lote_rec_tiss%type;
nr_lote_w                      	tiss_recurso_glosa_prot.nr_lote%type;

co_nr_protocolo_limite      constant integer := 12;
ds_protocolos_sem_tiss_w    varchar(3000);

c01 CURSOR FOR
SELECT	a.nr_seq_protocolo nr_seq_protocolo_w,
		coalesce(substr(c.nr_protocolo,1,co_nr_protocolo_limite), 
				pc.nr_seq_doc_convenio,
				to_char(pc.nr_seq_protocolo)) nr_lote_w,
		c.cd_interno_cab cd_interno_envio_w,
		c.nr_sequencia nr_seq_prot_guia_w
from	conta_paciente a,
	lote_audit_hist_guia b,
	tiss_protocolo_guia c,
	protocolo_convenio pc
where	b.nr_interno_conta      = a.nr_interno_conta
and	b.nr_seq_lote_hist	 		= nr_seq_lote_hist_p
and     pc.nr_seq_protocolo     = c.nr_seq_protocolo
and	pc.nr_seq_protocolo 	 	= a.nr_seq_protocolo
group by a.nr_seq_protocolo, 
        coalesce(substr(c.nr_protocolo,1,co_nr_protocolo_limite), 
				pc.nr_seq_doc_convenio,
				to_char(pc.nr_seq_protocolo)),
        c.cd_interno_cab,
		c.nr_sequencia;

row_c01 c01%rowtype;


BEGIN

delete	from tiss_recurso_glosa_prot
where	nr_seq_lote_hist	= nr_seq_lote_hist_w;
commit;

select	max(a.cd_convenio),
	max(a.cd_estabelecimento)
into STRICT	cd_convenio_w,
	cd_estabelecimento_w
from	lote_auditoria a
	join lote_audit_hist b on b.nr_sequencia = nr_seq_lote_hist_w and b.nr_seq_lote_audit = a.nr_sequencia;

select	coalesce(max(ie_gerar_lote_rec_tiss),'L')
into STRICT	ie_gerar_lote_rec_tiss_w
from	tiss_parametros_convenio
where	cd_estabelecimento = cd_estabelecimento_w -- ambos estabelecimento e convenio vem do lote_auditoria
and	cd_convenio	   = cd_convenio_w;

select	max(cd_cgc)
into STRICT	cd_cgc_prest_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_w;

/*Buscar os protocolos existentes na analise GRG para recurso*/

for row_c01 in c01 loop
	if (coalesce(row_c01.nr_lote_w,'X') = 'X') then
        	if (coalesce(ds_protocolos_sem_tiss_w::text, '') = '') then
            		ds_protocolos_sem_tiss_w := row_c01.nr_seq_protocolo_w;
        	else
            		ds_protocolos_sem_tiss_w := ds_protocolos_sem_tiss_w || ', ' || row_c01.nr_seq_protocolo_w;
        	end if;
	end if;	

	select	max(nr_protocolo_receb)
	into STRICT	nr_protocolo_w
	from	tiss_protocolo_envio_ret
	where	nr_seq_protocolo	= row_c01.nr_seq_protocolo_w;
	
	select 	coalesce(max(nr_protocolo_receb), nr_protocolo_w)
	into STRICT	nr_protocolo_w
	from 	tiss_protocolo_envio_ret
	where	nr_seq_protocolo = row_c01.nr_seq_protocolo_w
	and		nr_seq_tiss_prot_guia = row_c01.nr_seq_prot_guia_w
	and		nr_lote_prestador = row_c01.nr_lote_w;

	select	coalesce(max(nr_lote),nr_protocolo_w)
	into STRICT	nr_protocolo_w
	from	tiss_situacao_protocolo
	where 	nr_seq_protocolo = row_c01.nr_seq_protocolo_w;

	if (coalesce(nr_protocolo_w::text, '') = '') then
	
		begin
		select	substr(d.nr_protocolo ,1,12)
		into STRICT	nr_protocolo_dem_conta_w
		from	tiss_cabecalho a,
			tiss_demonstrativo b,
			tiss_dem_fatura c,
			tiss_dem_lote d
		where	a.nr_sequencia	= b.nr_seq_cabecalho
		and	b.nr_sequencia		= c.nr_seq_demonstrativo
		and	c.nr_sequencia		= d.nr_seq_fatura
		and	a.nr_seq_lote_hist	= nr_seq_lote_hist_p
		and	d.nr_lote			= row_c01.nr_seq_protocolo_w  LIMIT 1;
		exception
		when no_data_found or too_many_rows then
			begin
			select	substr(d.nr_protocolo ,1,12)
			into STRICT	nr_protocolo_dem_conta_w
			from	tiss_cabecalho a,
				tiss_demonstrativo b,
				tiss_dem_fatura c,
				tiss_dem_lote d,
				convenio_retorno e
			where	a.nr_sequencia	= b.nr_seq_cabecalho
			and	b.nr_sequencia		= c.nr_seq_demonstrativo
			and	c.nr_sequencia		= d.nr_seq_fatura
			and	(a.nr_seq_retorno IS NOT NULL AND a.nr_seq_retorno::text <> '')
			and	a.nr_seq_retorno	= e.nr_sequencia
			and	e.cd_convenio		= cd_convenio_w
			and	d.nr_lote			= row_c01.nr_lote_w --Considera o lote do TISS para o protocolo.
			and	exists (SELECT	1
				from	convenio_retorno_item x,
				conta_paciente y
				where	x.nr_seq_retorno	= e.nr_sequencia
				and	x.nr_interno_conta		= y.nr_interno_conta
				and	y.nr_seq_protocolo		= row_c01.nr_seq_protocolo_w)  LIMIT 1;
			exception
			when no_data_found or too_many_rows then
				nr_protocolo_dem_conta_w	:= null;
			end;
		end;
		
		nr_protocolo_w	:= coalesce( nr_protocolo_dem_conta_w, nr_protocolo_w );
	end if;

	--Se nao possui o numero do protocolo da operadora no protocolo, entao busca o doc convenio da analise.
	if (coalesce(nr_protocolo_w::text, '') = '') then
		select	substr(nr_doc_convenio,1, co_nr_protocolo_limite)
		into STRICT	nr_protocolo_w
		from	lote_audit_hist
		where	nr_sequencia	= nr_seq_lote_hist_w;
	end if;

	select	Coalesce(row_c01.cd_interno_envio_w,max(TISS_OBTER_CODIGO_PRESTADOR(cd_convenio_w, cd_estabelecimento_w, null, cd_cgc_prest_w, null, 'CI', clock_timestamp(), null,null)))
	into STRICT	cd_interno_w
	;		

	if (coalesce(cd_interno_w,'XY') <> 'XY') then
		cd_prestador_w	:= substr(cd_interno_w,1,14);
	else
		cd_prestador_w	:= cd_cgc_prest_w;
	end if;

	select	max(obter_nome_pf_pj(null,cd_cgc_prest_w))
	into STRICT	nm_prestador_w
	;	

	select	nextval('tiss_recurso_glosa_prot_seq')
	into STRICT	nr_seq_prot_recurso_w
	;

	if (ie_gerar_lote_rec_tiss_w = 'S') then
		nr_lote_w := nr_seq_prot_recurso_w;
	else
		nr_lote_w := row_c01.nr_lote_w;
	end if;

	insert into tiss_recurso_glosa_prot(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_lote_rec_glosa,
		ie_objeto_recurso,
		cd_prestador,
		nm_prestador,
		nr_lote,
		nr_protocolo,
		nr_seq_protocolo,
		nr_seq_lote_hist,
		cd_convenio)
	values (nr_seq_prot_recurso_w,
		clock_timestamp(),
		nm_usuario_w,
		clock_timestamp(),
		nm_usuario_w,
		nr_seq_prot_recurso_w,
		'2',
		cd_prestador_w,
		tiss_eliminar_caractere(nm_prestador_w),
		nr_lote_w,
		coalesce(nr_protocolo_w, row_c01.nr_seq_protocolo_w),
		row_c01.nr_seq_protocolo_w,
		nr_seq_lote_hist_w,
		cd_convenio_w);

	CALL TISS_GERAR_RECURSO_GLOSA_GUIA(nr_seq_lote_hist_w, nm_usuario_w, row_c01.nr_seq_protocolo_w, nr_seq_prot_recurso_w, nr_lote_w);

	select	count(1)
	into STRICT	count_w
	from	tiss_recurso_glosa_guia
	where	nr_seq_rec_prot = nr_seq_prot_recurso_w;

	if (count_w = 0) then
		delete 	from tiss_recurso_glosa_prot
		where	nr_sequencia = nr_seq_prot_recurso_w;
	else	
		select	sum(a.vl_recursado)
		into STRICT	vl_recursado_w
		from	tiss_recurso_glosa_item a
                join tiss_recurso_glosa_guia b
                on b.nr_sequencia		= a.nr_seq_rec_guia
                and	b.nr_seq_rec_prot	= nr_seq_prot_recurso_w
                and	coalesce(b.nr_seq_motivo_glosa::text, '') = '';

		select	sum(vl_recursado_guia)
		into STRICT	vl_recursado_guia_w
		from	tiss_recurso_glosa_guia
		where	nr_seq_rec_prot		= nr_seq_prot_recurso_w
		and	(nr_seq_motivo_glosa IS NOT NULL AND nr_seq_motivo_glosa::text <> '');

		update	tiss_recurso_glosa_prot
		set	vl_total_recursado	= coalesce(vl_recursado_w,0) + coalesce(vl_recursado_guia_w,0)
		where	nr_sequencia		= nr_seq_prot_recurso_w;
	end if;
end loop;

if (ds_protocolos_sem_tiss_w IS NOT NULL AND ds_protocolos_sem_tiss_w::text <> '') then
        CALL wheb_mensagem_pck.exibir_mensagem_abort(346113,'SEQ_PROTOCOLO=' || ds_protocolos_sem_tiss_w);	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_gerar_recurso_glosa (nr_seq_lote_hist_p lote_audit_hist.nr_sequencia%type, nm_usuario_p tiss_recurso_glosa_prot.nm_usuario%type) FROM PUBLIC;

