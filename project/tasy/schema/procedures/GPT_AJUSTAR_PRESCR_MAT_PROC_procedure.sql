-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gpt_ajustar_prescr_mat_proc ( nr_prescricao_p prescr_medica.nr_prescricao%type, nr_sequencia_procedimento_p prescr_procedimento.nr_sequencia%type, cd_perfil_p perfil.cd_perfil%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


nr_ocorrencia_w				prescr_material.nr_ocorrencia%type;
nr_sequencia_material_w		prescr_material.nr_sequencia%type;
cd_material_w				prescr_material.cd_material%type;
qt_unitaria_w				prescr_material.qt_unitaria%type;
qt_material_w				prescr_material.qt_material%type;
qt_dose_especial_w			prescr_material.qt_dose_especial%type;
ds_dose_diferenciada_w		prescr_material.ds_dose_diferenciada%type;
ie_origem_inf_w				prescr_material.ie_origem_inf%type;
qt_dispensar_w				prescr_material.qt_total_dispensar%type;
qt_dose_w					prescr_material.qt_dose%type;
ie_acm_w					prescr_material.ie_acm%type;
ie_via_aplicacao_w			prescr_material.ie_via_aplicacao%type;
cd_unidade_medida_dose_w	prescr_material.cd_unidade_medida_dose%type;
ds_horarios_w				prescr_material.ds_horarios%type;
ds_horarios2_w				prescr_material.ds_horarios%type;
ie_regra_disp_w				prescr_material.ie_regra_disp%type;
qt_hora_intervalo_w			prescr_material.qt_hora_intervalo%type;
qt_min_intervalo_w			prescr_material.qt_min_intervalo%type;
ie_se_necessario_mat_w		prescr_material.ie_se_necessario%type;
qt_unitaria_param_1030_w	prescr_material.qt_unitaria%type;
qt_conversao_dose_w			prescr_material.qt_conversao_dose%type;
ie_checar_adep_w			prescr_material.ie_checar_adep%type;
ie_alterou_dose_dil_w		prescr_material.ie_alterou_dose_dil%type;
qt_dia_prim_hor_w			prescr_material.qt_dia_prim_hor%type;
nr_seq_mat_cpoe_w			prescr_material.nr_seq_mat_cpoe%type;

dt_primeiro_horario_w		prescr_medica.dt_primeiro_horario%type;
nr_horas_validade_w			prescr_medica.nr_horas_validade%type;
cd_estabelecimento_w		prescr_medica.cd_estabelecimento%type;
nm_usuario_original_w		prescr_medica.nm_usuario_original%type;
dt_inicio_prescr_w			prescr_medica.dt_inicio_prescr%type;
cd_funcao_ativa_w			prescr_medica.cd_funcao_origem%type;

cd_intervalo_w				intervalo_prescricao.cd_intervalo%type;
ie_agora_w					intervalo_prescricao.ie_agora%type;

ds_horarios_procedimento_w	prescr_procedimento.ds_horarios%type;
dt_prev_execucao_w			prescr_procedimento.dt_prev_execucao%type;
cd_procedimento_w			prescr_procedimento.cd_procedimento%type;
nr_seq_interno_proc_w		prescr_procedimento.nr_seq_interno%type;
cd_intervalo_proc_w			prescr_procedimento.cd_intervalo%type;
dt_prev_execucao_proc_w		prescr_procedimento.dt_prev_execucao%type;
ds_horarios_proc_w			prescr_procedimento.ds_horarios%type;
ie_se_necessario_proc_w		prescr_procedimento.ie_se_necessario%type;
ie_acm_proc_w				prescr_procedimento.ie_acm%type;
ie_urgencia_proc_w			prescr_procedimento.ie_urgencia%type;
qt_procedimento_w			prescr_procedimento.qt_procedimento%type;
nr_seq_proc_interno_w		prescr_procedimento.nr_seq_proc_interno%type;

qt_dose_item_prescr_w		w_item_prescr.qt_dose%type;

ie_multiplica_at_w			varchar(1);
ie_atualiza_proc_assoc_w	varchar(1);
ie_atualiza_dados_w			varchar(1);
ds_erro_w					varchar(255);
qt_horarios_liberados_w		bigint;
	
c01 CURSOR FOR
SELECT	coalesce(b.cd_intervalo, a.cd_intervalo),
		coalesce(b.nr_sequencia, 0),
		coalesce(a.ie_acm, 'N'),
		coalesce(b.ie_se_necessario, 'N'),
		a.dt_prev_execucao,
		a.qt_hora_intervalo,
		a.qt_min_intervalo,
		coalesce(b.cd_material, 0),
		coalesce(b.qt_unitaria, 0),
		coalesce(b.qt_material, 0),
		coalesce(b.qt_dose_especial, 0),
		b.ds_dose_diferenciada,
		coalesce(b.ie_origem_inf, '1'),
		b.ie_via_aplicacao,
		b.cd_unidade_medida_dose,
		a.cd_procedimento,
		substr(a.ds_horarios, 1, 255),
		b.qt_dose,
		a.nr_seq_proc_interno,
		coalesce(b.qt_conversao_dose, 0),
		coalesce(b.ie_checar_adep, 'N'),
		coalesce(b.ie_alterou_dose_dil, 'X'),
		CASE WHEN coalesce(a.nr_seq_proc_interno, 0)=0 THEN  null  ELSE (obter_info_w_item_prescr(a.nr_prescricao, b.nr_sequencia, 'PI', 'D'))::numeric  END ,
		b.nr_seq_mat_cpoe
from	prescr_procedimento a,
		prescr_material b
where	a.nr_sequencia	= b.nr_sequencia_proc
and		a.nr_prescricao = b.nr_prescricao
and		b.nr_prescricao = nr_prescricao_p
and		a.nr_sequencia  = nr_sequencia_procedimento_p
and		b.ie_agrupador = 5;

c02 CURSOR FOR
SELECT	nr_seq_interno,
		cd_intervalo,
		dt_prev_execucao,
		ds_horarios,
		ie_se_necessario,
		ie_acm,
		ie_urgencia,
		qt_procedimento
from	prescr_procedimento
where	nr_sequencia = nr_sequencia_procedimento_p
and		nr_prescricao = nr_prescricao_p;

procedure atualizar_cpoe_associados is
;
BEGIN

	update	cpoe_material a
	set		a.ds_horarios = coalesce(ds_horarios_procedimento_w, ds_horarios_w),
			a.nr_ocorrencia = nr_ocorrencia_w,
			a.hr_prim_horario = to_char(dt_prev_execucao_w, 'hh24:mi'),
			a.dt_inicio = dt_prev_execucao_w,
			a.nm_usuario = nm_usuario_p,
			a.dt_atualizacao = clock_timestamp()
	where	a.nr_sequencia = nr_seq_mat_cpoe_w
	and		(a.nr_seq_procedimento IS NOT NULL AND a.nr_seq_procedimento::text <> '');
	
end;

begin

	select	max(a.cd_estabelecimento),
			max(a.nm_usuario_original),
			max(a.dt_primeiro_horario),
			max(a.nr_horas_validade),
			max(a.dt_inicio_prescr)
	into STRICT	cd_estabelecimento_w,
			nm_usuario_original_w,
			dt_primeiro_horario_w,
			nr_horas_validade_w,
			dt_inicio_prescr_w
	from	prescr_medica a
	where	nr_prescricao = nr_prescricao_p;

	cd_funcao_ativa_w	:= obter_funcao_ativa;

	ie_atualiza_proc_assoc_w := obter_param_usuario(924, 1030, cd_perfil_p, nm_usuario_original_w, cd_estabelecimento_w, ie_atualiza_proc_assoc_w);
	ie_multiplica_at_w := obter_param_usuario(924, 1054, cd_perfil_p, nm_usuario_original_w, cd_estabelecimento_w, ie_multiplica_at_w);

	open c01;
	loop
	fetch c01 into
		cd_intervalo_w,
		nr_sequencia_material_w,
		ie_acm_w,
		ie_se_necessario_mat_w,
		dt_prev_execucao_w,
		qt_hora_intervalo_w,
		qt_min_intervalo_w,
		cd_material_w,
		qt_unitaria_w,
		qt_material_w,
		qt_dose_especial_w,
		ds_dose_diferenciada_w,
		ie_origem_inf_w,
		ie_via_aplicacao_w,
		cd_unidade_medida_dose_w,
		cd_procedimento_w,
		ds_horarios_procedimento_w,
		qt_dose_w,
		nr_seq_proc_interno_w,
		qt_conversao_dose_w,
		ie_checar_adep_w,
		ie_alterou_dose_dil_w,
		qt_dose_item_prescr_w,
		nr_seq_mat_cpoe_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

		ie_atualiza_dados_w := 'N';
		
		select	count(dt_lib_horario)
		into STRICT	qt_horarios_liberados_w
		from	prescr_mat_hor a
		where	nr_prescricao = nr_prescricao_p
		and		a.nr_seq_material = nr_sequencia_material_w;

		if (coalesce(ie_checar_adep_w, 'N') = 'N' and
			qt_horarios_liberados_w = 0) then

			ie_atualiza_dados_w := 'S';

		elsif (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then

			select	coalesce(max(ie_agora),'N')
			into STRICT	ie_agora_w	
			from	intervalo_prescricao
			where	cd_intervalo = cd_intervalo_w;
				
			if (ie_agora_w = 'S') then
				ie_atualiza_dados_w := 'S';
			end if;
		end if;

		if (ie_atualiza_dados_w = 'S') then

			qt_material_w := 0;
			nr_ocorrencia_w := 0;
			
			SELECT * FROM calcular_horario_prescricao(nr_prescricao_p => nr_prescricao_p, cd_intervalo_p => cd_intervalo_w, dt_prim_horario_presc_p => dt_primeiro_horario_w, dt_hora_inicio_p => to_date(to_char(dt_prev_execucao_w, 'hh24:mi'), 'hh24:mi'), nr_hora_validade_p => nr_horas_validade_w, cd_material_p => cd_procedimento_w, qt_hora_intervalo_p => qt_hora_intervalo_w, qt_min_intervalo_p => qt_min_intervalo_w, nr_intervalo_p => nr_ocorrencia_w, ds_horarios_p => ds_horarios_w, ds_horarios2_p => ds_horarios2_w, ie_solucao_p => 'N', ds_dose_diferenciada_p => null) INTO STRICT nr_intervalo_p => nr_ocorrencia_w, ds_horarios_p => ds_horarios_w, ds_horarios2_p => ds_horarios2_w;
	
			ds_horarios_w := ds_horarios_w || ds_horarios2_w;

			if (qt_dose_w > 0) then
			
				if (obter_conversao_unid_med(cd_material_w, cd_unidade_medida_dose_w) = 0) then
					qt_unitaria_w := qt_dose_w;
				else
					qt_unitaria_w := qt_dose_w / coalesce(obter_conversao_unid_med(cd_material_w, cd_unidade_medida_dose_w), 1);
				end if;
			end if;

			SELECT * FROM obter_quant_dispensar(	cd_estabelecimento_p => cd_estabelecimento_w, cd_material_p => cd_material_w, nr_prescricao_p => nr_prescricao_p, nr_sequencia_p => nr_sequencia_material_w, cd_intervalo_p => cd_intervalo_w, ie_via_aplicacao_p => ie_via_aplicacao_w, qt_unitaria_p => qt_unitaria_w, qt_dose_esp_p => qt_dose_especial_w, nr_ocorrencia_p => nr_ocorrencia_w, ds_dose_dif_p => ds_dose_diferenciada_w, ie_origem_inf_p => ie_origem_inf_w, cd_unid_med_dose_p => cd_unidade_medida_dose_w, qt_dias_p => 1, qt_material_p => qt_material_w,  -- in out
									qt_dispensar_p => qt_dispensar_w,  -- out
									ie_regra_disp_p => ie_regra_disp_w,  -- out
									ds_erro_p => ds_erro_w,  -- out
									ie_se_necessario_p => ie_se_necessario_mat_w, ie_acm_p => ie_acm_w) INTO STRICT qt_material_p => qt_material_w, 
									qt_dispensar_p => qt_dispensar_w, 
									ie_regra_disp_p => ie_regra_disp_w, 
									ds_erro_p => ds_erro_w;

			if (ie_multiplica_at_w	= 'S' and
				ie_alterou_dose_dil_w in ('S','X')) then

				select	max(qt_procedimento)
				into STRICT	qt_procedimento_w
				from	prescr_procedimento
				where	nr_prescricao = nr_prescricao_p
				and		nr_sequencia  = nr_sequencia_procedimento_p;
				
				if (qt_dose_item_prescr_w IS NOT NULL AND qt_dose_item_prescr_w::text <> '') and (qt_dose_item_prescr_w > 0) and (ie_alterou_dose_dil_w = 'X') then

					qt_dose_w := qt_dose_item_prescr_w;
				else
					select	coalesce(max(qt_dose),qt_dose_w)
					into STRICT	qt_dose_w
					from	proc_int_mat_prescr
					where	nr_seq_proc_interno = nr_seq_proc_interno_w
					and		cd_material = cd_material_w;
				end if;

				qt_dose_w := qt_dose_w * qt_procedimento_w;

				if (qt_dose_w > 0) and (qt_conversao_dose_w > 0) then
				
					begin
						qt_unitaria_param_1030_w := qt_dose_w / qt_conversao_dose_w;
						qt_material_w := 0;
					
						SELECT * FROM obter_quant_dispensar(	cd_estabelecimento_p => cd_estabelecimento_w, cd_material_p => cd_material_w, nr_prescricao_p => nr_prescricao_p, nr_sequencia_p => nr_sequencia_material_w, cd_intervalo_p => cd_intervalo_w, ie_via_aplicacao_p => ie_via_aplicacao_w, qt_unitaria_p => qt_unitaria_param_1030_w, qt_dose_esp_p => qt_dose_especial_w, nr_ocorrencia_p => nr_ocorrencia_w, ds_dose_dif_p => ds_dose_diferenciada_w, ie_origem_inf_p => ie_origem_inf_w, cd_unid_med_dose_p => cd_unidade_medida_dose_w, qt_dias_p => 1, qt_material_p => qt_material_w,  -- in out
												qt_dispensar_p => qt_dispensar_w,  -- out
												ie_regra_disp_p => ie_regra_disp_w,  -- out
												ds_erro_p => ds_erro_w,  -- out
												ie_se_necessario_p => ie_se_necessario_mat_w, ie_acm_p => ie_acm_w) INTO STRICT qt_material_p => qt_material_w, 
												qt_dispensar_p => qt_dispensar_w, 
												ie_regra_disp_p => ie_regra_disp_w, 
												ds_erro_p => ds_erro_w;
					exception when others then
						qt_unitaria_param_1030_w := qt_unitaria_w;
						qt_material_w := qt_unitaria_w;
					end;
				
				end if;

			end if;

			if (pkg_date_utils.start_of(source => dt_inicio_prescr_w, date_field => 'dd') < pkg_date_utils.start_of(source => dt_prev_execucao_w, date_field => 'dd')) then
				qt_dia_prim_hor_w := 1;
			else
				qt_dia_prim_hor_w := 0;
			end if;

			update	prescr_material a
			set		a.hr_prim_horario = to_char(dt_prev_execucao_w, 'hh24:mi'),
					a.qt_hora_intervalo = qt_hora_intervalo_w,
					a.qt_min_intervalo = qt_min_intervalo_w,
					a.ds_horarios = coalesce(ds_horarios_procedimento_w, ds_horarios_w),
					a.nr_ocorrencia = nr_ocorrencia_w,
					a.qt_total_dispensar = qt_dispensar_w,
					a.qt_material = qt_material_w,
					a.qt_dose = qt_dose_w,
					a.qt_dia_prim_hor = qt_dia_prim_hor_w,
					a.ie_gerar_horario = CASE WHEN a.ie_gerar_horario='N' THEN  'S'  ELSE a.ie_gerar_horario END ,
					a.nm_usuario = nm_usuario_p,
					a.dt_atualizacao = clock_timestamp()
			where	coalesce(a.ie_intervalo_dif, 'N') <> 'S'
			and		a.nr_sequencia = nr_sequencia_material_w
			and		a.nr_prescricao = nr_prescricao_p;
			
			CALL ajustar_prescr_material(nr_prescricao_p => nr_prescricao_p,
									nr_sequencia_p => nr_sequencia_material_w,
									ie_atualiza_regra_disp_p => 'N');
									
			if (nr_seq_mat_cpoe_w IS NOT NULL AND nr_seq_mat_cpoe_w::text <> '') then
				atualizar_cpoe_associados;
			end if;

		end if;

	end loop;
	close c01;

	if (ie_atualiza_proc_assoc_w = 'S') then

		open c02;
		loop
		fetch c02 into	
			nr_seq_interno_proc_w,
			cd_intervalo_proc_w,
			dt_prev_execucao_proc_w,
			ds_horarios_proc_w,
			ie_se_necessario_proc_w,
			ie_acm_proc_w,
			ie_urgencia_proc_w,
			qt_procedimento_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin

				if (coalesce(nr_seq_interno_proc_w,0) > 0) then
					update	prescr_procedimento a
					set		a.cd_intervalo = cd_intervalo_proc_w,
							a.dt_prev_execucao = dt_prev_execucao_proc_w,
							a.ds_horarios = ds_horarios_proc_w,
							a.ie_se_necessario = ie_se_necessario_proc_w,
							a.ie_acm = ie_acm_proc_w,
							a.ie_urgencia = ie_urgencia_proc_w,
							a.qt_procedimento = qt_procedimento_w
					where	a.nr_seq_proc_princ = nr_seq_interno_proc_w;
				end if;

			end;
		end loop;
		close c02;

	end if;

	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then
		commit;
	end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gpt_ajustar_prescr_mat_proc ( nr_prescricao_p prescr_medica.nr_prescricao%type, nr_sequencia_procedimento_p prescr_procedimento.nr_sequencia%type, cd_perfil_p perfil.cd_perfil%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

