-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_reajuste_preco ( nr_seq_reajuste_p bigint, ie_opcao_p text, ie_commit_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
qt_idade_inicial_w		integer;
qt_idade_final_w		integer;
qt_regras_w			integer;
qt_registros_w			bigint;
nr_seq_preco_w			bigint;
nr_seq_reajuste_w		bigint;
nr_seq_reaj_periodo_w		bigint;
nr_contrato_w			bigint;
nr_seq_contrato_w		bigint;
nr_sequencia_w			bigint;
nr_seq_tabela_w			bigint;
vl_reajustado_w			double precision;
vl_reajuste_w			double precision;
vl_preco_w			double precision;
vl_base_w			double precision;
pr_reajuste_w			double precision;
tx_reajuste_lote_w		pls_reajuste.tx_reajuste%type;
tx_reajuste_tabela_w		pls_reajuste_tabela.tx_reajuste%type;
dt_reajuste_ant_w		timestamp;
dt_reajuste_w			timestamp;
dt_ult_reajuste_w		timestamp;
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;
ie_truncar_valor_reajuste_w	varchar(1);
ie_tabela_contrato_w		varchar(1);
ie_tipo_contratacao_w		varchar(2);
ds_contrato_w			varchar(255);
ds_erro_w			varchar(4000) := '';
ds_inconsistencia_w		varchar(4000) := '';
dt_autorizacao_ans_w		timestamp;
pr_deflator_w			pls_reajuste.tx_deflator%type;
vl_reajuste_nao_subsidiado_w	double precision	:= 0;
vl_preco_nao_subsid_base_w	double precision	:= 0;
qt_contrato_tabela_w		bigint;
vl_minimo_w			double precision;
vl_minimo_atual_w		double precision;
nr_seq_intercambio_w		bigint;
nr_seq_contrato_inter_w		bigint;
vl_adaptacao_base_w		double precision;
vl_adaptacao_w			double precision;
ie_aplicacao_reajuste_w		varchar(2);
nr_seq_reaj_preco_w		bigint;
nr_contrato_reaj_w		bigint;

c01 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		b.nr_sequencia, 
		b.nr_contrato, 
		c.ie_tipo_contratacao, 
		b.nr_seq_contrato_inter, 
		a.tx_reajuste 
	from	pls_reajuste_tabela a, 
		pls_tabela_preco b, 
		pls_plano c 
	where	a.nr_seq_tabela		= b.nr_sequencia 
	and	c.nr_sequencia		= b.nr_seq_plano 
	and	a.nr_seq_reajuste	= nr_seq_reajuste_p 
	and	coalesce(a.dt_liberacao::text, '') = '';

c02 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.qt_idade_inicial, 
		a.qt_idade_final, 
		coalesce(a.vl_preco_atual,coalesce(a.vl_preco_inicial,0)), 
		coalesce(a.vl_preco_nao_subsid_atual,0), 
		coalesce(a.vl_minimo,0), 
		coalesce(a.vl_adaptacao,0) 
	from	pls_plano_preco a 
	where	a.nr_seq_tabela	= nr_seq_tabela_w 
	and	not exists (SELECT	1 
				from	pls_reajuste_preco x 
				where	x.nr_seq_preco		= a.nr_sequencia 
				and	x.nr_seq_reajuste	= nr_seq_reajuste_p);


BEGIN 
 
select	coalesce(tx_reajuste,0), 
	trunc(dt_reajuste), 
	coalesce(dt_periodo_inicial,trunc(dt_reajuste,'month')), 
	coalesce(dt_periodo_final,last_day(dt_reajuste)), 
	nr_seq_contrato, 
	dt_autorizacao_ans, 
	coalesce(tx_deflator,0), 
	nr_seq_intercambio, 
	ie_aplicacao_reajuste 
into STRICT	tx_reajuste_lote_w, 
	dt_reajuste_w, 
	dt_periodo_inicial_w, 
	dt_periodo_final_w, 
	nr_seq_contrato_w, 
	dt_autorizacao_ans_w, 
	pr_deflator_w, 
	nr_seq_intercambio_w, 
	ie_aplicacao_reajuste_w 
from	pls_reajuste 
where	nr_sequencia	= nr_seq_reajuste_p;
 
select	count(1) 
into STRICT	qt_registros_w 
from	pls_reajuste_tabela 
where	nr_seq_reajuste	= nr_seq_reajuste_p;
 
if (qt_registros_w = 0) then 
	CALL pls_inserir_tabela_reajuste(nr_seq_reajuste_p, null, nm_usuario_p);
end if;
 
if (ie_opcao_p = 'C') then 
	SELECT * FROM pls_consistir_tabela_preco(nr_seq_reajuste_p, ds_inconsistencia_w, ds_erro_w) INTO STRICT ds_inconsistencia_w, ds_erro_w;
	 
	if (coalesce(length(ds_erro_w),0) > 0) then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 186811, 'DS_TABELAS='||ds_erro_w);
		--Tabelas já calculadas e não liberadas em outro reajuste. Verifique! Tabela(s): ' || ds_erro_w 
	end if;
else 
	tx_reajuste_lote_w	:= pr_deflator_w;
end if;
 
open c01;
loop 
fetch c01 into 
	nr_sequencia_w, 
	nr_seq_tabela_w, 
	nr_contrato_w, 
	ie_tipo_contratacao_w, 
	nr_seq_contrato_inter_w, 
	tx_reajuste_tabela_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	pr_reajuste_w	:= coalesce(tx_reajuste_tabela_w,tx_reajuste_lote_w);
	 
	select	count(1) 
	into STRICT	qt_contrato_tabela_w 
	from	pls_tabela_preco a 
	where	a.nr_sequencia	= nr_seq_tabela_w 
	and	a.nr_contrato	= nr_contrato_w;
	 
	if (ie_tipo_contratacao_w <> 'I') and (qt_contrato_tabela_w > 1) then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 186809, null);
		--Existem contratos com a mesma tabela de preço. Reajuste não pode ser calculado! 
	end if;
	 
	select	max(nr_contrato) 
	into STRICT	nr_contrato_reaj_w 
	from	pls_contrato 
	where	nr_sequencia	= nr_seq_contrato_w;
	 
	if (ie_tipo_contratacao_w <> 'I') and 
		(((coalesce(nr_contrato_w::text, '') = '') and (coalesce(nr_seq_contrato_inter_w::text, '') = '')) or 
		((nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '' AND nr_seq_contrato_w <> nr_contrato_w) or 
		(nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '' AND nr_seq_intercambio_w <> nr_seq_contrato_inter_w))) then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 186812, 'NR_SEQ_TABELA='||nr_seq_tabela_w||';NR_CONTRATO='||nr_contrato_reaj_w);
		--Existem tabelas que não são do contrato. Verifique! Tabela: ||nr_seq_tabela_w 
	end if;
	 
	select	count(1) 
	into STRICT	qt_regras_w 
	from	pls_plano_preco 
	where	nr_seq_tabela	= nr_seq_tabela_w;
	 
	if (qt_regras_w > 0) then 
		open c02;
		loop 
		fetch c02 into 
			nr_seq_preco_w, 
			qt_idade_inicial_w, 
			qt_idade_final_w, 
			vl_preco_w, 
			vl_preco_nao_subsid_base_w, 
			vl_minimo_atual_w, 
			vl_adaptacao_base_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin 
			 
			select	max(nr_sequencia) 
			into STRICT	nr_seq_reajuste_w 
			from	pls_reajuste_preco 
			where	nr_seq_preco	= nr_seq_preco_w 
			and	dt_reajuste	= (	SELECT	max(dt_reajuste) 
							from	pls_reajuste_preco 
							where	nr_seq_preco	= nr_seq_preco_w 
							and	dt_reajuste	<= dt_reajuste_w);
			 
			select	coalesce(ie_truncar_valor_reajuste,'N') 
			into STRICT	ie_truncar_valor_reajuste_w 
			from	pls_parametros 
			where	cd_estabelecimento	= cd_estabelecimento_p;
			 
			if (coalesce(nr_seq_reajuste_w,0) > 0) then 
				if (ie_truncar_valor_reajuste_w = 'N') then 
					select (coalesce(vl_reajustado,0) / 100) * pr_reajuste_w, 
						vl_reajustado, 
						dt_reajuste, 
						(coalesce(vl_preco_nao_subsidiado,0) / 100) * pr_reajuste_w, 
						(coalesce(vl_minimo,0) / 100) * pr_reajuste_w, 
						(vl_adaptacao / 100) * pr_reajuste_w 
					into STRICT	vl_reajuste_w, 
						vl_reajustado_w, 
						dt_ult_reajuste_w, 
						vl_reajuste_nao_subsidiado_w, 
						vl_minimo_w, 
						vl_adaptacao_w 
					from	pls_reajuste_preco 
					where	nr_sequencia	= nr_seq_reajuste_w;
				else 
					select	trunc((coalesce(vl_reajustado,0) / 100) * pr_reajuste_w,2), 
						vl_reajustado, 
						dt_reajuste, 
						trunc((coalesce(vl_preco_nao_subsidiado,0) / 100) * pr_reajuste_w,2), 
						trunc((coalesce(vl_minimo,0) / 100) * pr_reajuste_w,2), 
						trunc((vl_adaptacao / 100) * pr_reajuste_w,2) 
					into STRICT	vl_reajuste_w, 
						vl_reajustado_w, 
						dt_ult_reajuste_w, 
						vl_reajuste_nao_subsidiado_w, 
						vl_minimo_w, 
						vl_adaptacao_w 
					from	pls_reajuste_preco 
					where	nr_sequencia	= nr_seq_reajuste_w;
				end if;
				 
				vl_base_w	:= vl_reajustado_w;
			else 
				if (ie_truncar_valor_reajuste_w = 'N') then 
					select (vl_preco_w / 100) * pr_reajuste_w, 
						(vl_preco_nao_subsid_base_w / 100) * pr_reajuste_w, 
						(vl_minimo_atual_w / 100) * pr_reajuste_w, 
						(vl_adaptacao_base_w / 100) * pr_reajuste_w 
					into STRICT	vl_reajuste_w, 
						vl_reajuste_nao_subsidiado_w, 
						vl_minimo_w, 
						vl_adaptacao_w 
					;
				else 
					select	trunc((vl_preco_w / 100) * pr_reajuste_w,2), 
						trunc((vl_preco_nao_subsid_base_w / 100) * pr_reajuste_w,2), 
						trunc((vl_minimo_atual_w / 100) * pr_reajuste_w,2), 
						trunc((vl_adaptacao_base_w / 100) * pr_reajuste_w,2) 
					into STRICT	vl_reajuste_w, 
						vl_reajuste_nao_subsidiado_w, 
						vl_minimo_w, 
						vl_adaptacao_w 
					;
				end if;
				 
				vl_base_w	:= vl_preco_w;
			end if;
			 
			vl_minimo_w	:= coalesce(vl_minimo_w,0);
			vl_adaptacao_w	:= coalesce(vl_adaptacao_w,0);
			 
			if (coalesce(vl_adaptacao_w,0) = 0) then 
				vl_adaptacao_w	:= trunc((vl_adaptacao_base_w / 100) * pr_reajuste_w,2);
			end if;
			 
			select	nextval('pls_reajuste_preco_seq') 
			into STRICT	nr_seq_reaj_preco_w 
			;
			 
			insert	into	pls_reajuste_preco(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				dt_reajuste, 
				nr_seq_preco, 
				nr_seq_reajuste, 
				vl_base, 
				pr_reajustado, 
				vl_reajustado, 
				nr_seq_tabela, 
				dt_periodo_inicial, 
				dt_periodo_final, 
				dt_autorizacao_ans, 
				vl_preco_nao_subsidiado, 
				vl_preco_nao_subsid_base, 
				vl_minimo, 
				vl_minimo_base, 
				vl_adaptacao_base, 
				vl_adaptacao) 
			values (nr_seq_reaj_preco_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				dt_reajuste_w, 
				nr_seq_preco_w, 
				nr_seq_reajuste_p, 
				vl_base_w, 
				pr_reajuste_w, 
				vl_base_w + vl_reajuste_w, 
				nr_sequencia_w, 
				dt_periodo_inicial_w, 
				dt_periodo_final_w, 
				dt_autorizacao_ans_w, 
				vl_preco_nao_subsid_base_w + vl_reajuste_nao_subsidiado_w, 
				vl_preco_nao_subsid_base_w, 
				vl_minimo_atual_w + vl_minimo_w, 
				vl_minimo_atual_w, 
				vl_adaptacao_base_w, 
				vl_adaptacao_base_w + vl_adaptacao_w);
			end;
		end loop;
		close c02;
	end if;
	end;
end loop;
close c01;
 
if (ie_aplicacao_reajuste_w in ('G','S')) then 
	CALL pls_gerar_reajuste_sca(nm_usuario_p, nr_seq_reajuste_p, 'N', cd_estabelecimento_p);
end if;
 
update	pls_reajuste 
set	ie_status	= '3', 
	nm_usuario	= nm_usuario_p, 
	dt_atualizacao	= clock_timestamp() 
where	nr_sequencia	= nr_seq_reajuste_p;
 
if (coalesce(ie_commit_p,'S') = 'S') then 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_reajuste_preco ( nr_seq_reajuste_p bigint, ie_opcao_p text, ie_commit_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

