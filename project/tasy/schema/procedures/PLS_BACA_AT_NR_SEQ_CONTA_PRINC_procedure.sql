-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_baca_at_nr_seq_conta_princ () AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade:	Popular o campo nr_seq_conta_princ da tabela pls_conta. 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
------------------------------------------------------------------------------------------------------------------- 
Pontos de atenção: 
 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
c01 CURSOR(	nr_seq_reg_ini_pc	pls_conta.nr_sequencia%type, 
		nr_seq_reg_fim_pc	pls_conta.nr_sequencia%type) FOR 
	SELECT	nr_sequencia, 
		coalesce(pls_obter_conta_principal(cd_guia,nr_seq_analise,nr_seq_segurado,nr_seq_prestador),nr_sequencia) 
	from	pls_conta 
	where	nr_sequencia between nr_seq_reg_ini_pc and nr_seq_reg_fim_pc;

nr_seq_reg_min_w		pls_conta.nr_sequencia%type;
nr_seq_reg_max_w		pls_conta.nr_sequencia%type;

nr_seq_reg_ini_w		pls_conta.nr_sequencia%type;
nr_seq_reg_fim_w		pls_conta.nr_sequencia%type;
qt_registro_update_w		integer;

tb_nr_sequencia_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_conta_princ_w		pls_util_cta_pck.t_number_table;
ie_finaliza_processo_w		varchar(1);


BEGIN 
-- evita a execução de algumas triggers 
CALL wheb_usuario_pck.set_ie_executar_trigger('N');
 
qt_registro_update_w := 500;
ie_finaliza_processo_w := 'N';
 
-- busca os limites da tabela 
select	min(nr_sequencia) nr_seq_min, 
	max(nr_sequencia) nr_seq_max 
into STRICT	nr_seq_reg_min_w, 
	nr_seq_reg_max_w 
from 	pls_conta;
 
-- seta os limites iniciais 
nr_seq_reg_ini_w := nr_seq_reg_min_w;
nr_seq_reg_fim_w := nr_seq_reg_ini_w + qt_registro_update_w;
 
loop 
	tb_nr_sequencia_w.delete;
	tb_nr_seq_conta_princ_w.delete;
	 
	open c01(nr_seq_reg_ini_w, nr_seq_reg_fim_w);
	fetch c01 bulk collect into 
		tb_nr_sequencia_w, 
		tb_nr_seq_conta_princ_w;
	close c01;
	 
	if (tb_nr_sequencia_w.count > 0) then 
		-- manda os dados para atualizar no banco 
		-- só informa null no campo e deixa a trigger setar o valor correto para o campo 
		forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last			 
			update 	pls_conta set 
				nr_seq_conta_princ = tb_nr_seq_conta_princ_w(i) 
			where	nr_sequencia = tb_nr_sequencia_w(i);
		commit;
	end if;
	 
	-- calcula os novos intervalos 
	nr_seq_reg_ini_w := nr_seq_reg_fim_w + 1;
	nr_seq_reg_fim_w := nr_seq_reg_ini_w + qt_registro_update_w;
	 
	-- se o início ainda não ultrassou a última sequencia da tabela executa novamente 
	if (nr_seq_reg_ini_w <= nr_seq_reg_max_w) then 
		ie_finaliza_processo_w := 'N';
	else 
		ie_finaliza_processo_w := 'S';
	end if;
	 
	exit when ie_finaliza_processo_w = 'S';
end loop;
 
CALL wheb_usuario_pck.set_ie_executar_trigger('S');
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_baca_at_nr_seq_conta_princ () FROM PUBLIC;

