-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function phi_validar_usuario_periodo as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE phi_validar_usuario_periodo ( nm_usuario_grupo_p text, dt_inicio_p timestamp, dt_fim_p timestamp, nr_sequencia_p bigint) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'CALL phi_validar_usuario_periodo_atx ( ' || quote_nullable(nm_usuario_grupo_p) || ',' || quote_nullable(dt_inicio_p) || ',' || quote_nullable(dt_fim_p) || ',' || quote_nullable(nr_sequencia_p) || ' )';
	PERFORM * FROM dblink(v_conn_str, v_query) AS p (ret boolean);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE phi_validar_usuario_periodo_atx ( nm_usuario_grupo_p text, dt_inicio_p timestamp, dt_fim_p timestamp, nr_sequencia_p bigint) AS $body$
DECLARE


nr_sequencia_w		bigint;
ds_diretoria_w		varchar(255);
ds_gerencia_w		varchar(255);
ds_grupo_w		varchar(255);
dt_inicio_w		timestamp;
dt_fim_w		timestamp;
BEGIN

select	max(nr_sequencia)
into STRICT	nr_sequencia_w
from	gerencia_wheb_grupo_usu
where	nm_usuario_grupo = nm_usuario_grupo_p
and	coalesce(ie_emprestimo,'N') = 'N'
and	((coalesce(dt_fim::text, '') = '' and (coalesce(dt_fim_p::text, '') = '' or dt_inicio <= dt_fim_p)) or (coalesce(dt_fim_p::text, '') = '' and dt_inicio >= dt_inicio_p))
and	nr_sequencia <> coalesce(nr_sequencia_p,0)  LIMIT 1;

if (coalesce(nr_sequencia_w::text, '') = '') then
	select	max(b.nr_sequencia)
	into STRICT	nr_sequencia_w
	from	gerencia_wheb_grupo_usu b,
		(WITH RECURSIVE cte AS (

		SELECT	dt_inicio_p + (level-1) dt_base_vigencia
		
		dt_inicio_p + (level-1) <= dt_fim_p
		  UNION ALL

		SELECT	dt_inicio_p + (level-1) dt_base_vigencia
		
		dt_inicio_p + (level-1) <= dt_fim_p
		 JOIN cte c ON ()

) SELECT * FROM cte;
) a
	where	b.nm_usuario_grupo = nm_usuario_grupo_p
	and	coalesce(b.ie_emprestimo,'N') = 'N'
	and	a.dt_base_vigencia between b.dt_inicio and b.dt_fim
	and	b.nr_sequencia <> coalesce(nr_sequencia_p,0)  LIMIT 1;
end if;

if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
	begin
	select	a.ds_diretoria,
		substr(obter_desc_expressao(b.cd_exp_gerencia,b.ds_gerencia),1,255) ds_gerencia,
		substr(obter_desc_expressao(c.cd_exp_grupo,c.ds_grupo),1,255) ds_grupo,
		d.dt_inicio,
		d.dt_fim
	into STRICT	ds_diretoria_w,
		ds_gerencia_w,
		ds_grupo_w,
		dt_inicio_w,
		dt_fim_w
	FROM gerencia_wheb_grupo_usu d, gerencia_wheb_grupo c, gerencia_wheb b
LEFT OUTER JOIN diretoria_philips a ON (b.nr_seq_diretoria = a.nr_sequencia)
WHERE b.nr_sequencia = c.nr_seq_gerencia and c.nr_sequencia = d.nr_seq_grupo and d.nr_sequencia = nr_sequencia_w;

	--The user is already in a main group in the given period and overlapping is not allowed.
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1174419,'DS_DIRETORIA=' || ds_diretoria_w || ';DS_GERENCIA=' || ds_gerencia_w || ';DS_GRUPO=' || ds_grupo_w ||
							';DT_INICIO=' || to_char(dt_inicio_w,'dd/mm/yyyy') || ';DT_FIM=' || to_char(dt_fim_w,'dd/mm/yyyy'));
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE phi_validar_usuario_periodo ( nm_usuario_grupo_p text, dt_inicio_p timestamp, dt_fim_p timestamp, nr_sequencia_p bigint) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE phi_validar_usuario_periodo_atx ( nm_usuario_grupo_p text, dt_inicio_p timestamp, dt_fim_p timestamp, nr_sequencia_p bigint) FROM PUBLIC;

