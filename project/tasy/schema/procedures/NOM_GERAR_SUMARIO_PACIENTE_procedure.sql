-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE nom_gerar_sumario_paciente ( dt_sumario_p timestamp, ds_oid_identificador_p text, ds_identificador_p text, cd_curp_paciente_p text, cd_hosp_destino_p text, cd_prof_destino_p text, nm_prof_destino_p text, cd_hosp_origem_p text, nm_hosp_origem_p text, cd_prof_solic_p text, nm_prof_solic_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro INOUT text, nr_sequencia_p INOUT bigint) AS $body$
DECLARE

ie_existe_w					bigint;
cd_cgc_origem_w				pessoa_juridica.cd_cgc%type;
cd_cgc_destino_w			pessoa_juridica.cd_cgc%type;
cd_pessoa_fisica_solic_w	pessoa_fisica.cd_pessoa_fisica%type;
cd_pessoa_fisica_origem_w	pessoa_fisica.cd_pessoa_fisica%type;
cd_pessoa_fisica_pac_w		pessoa_fisica.cd_pessoa_fisica%type;
nr_sequencia_w				imp_sumario_paciente.nr_sequencia%type;



BEGIN

	ds_erro	:= null;

	select	count(*)
	into STRICT	ie_existe_w
	from 	imp_sumario_paciente
	where	ds_oid_identificador = ds_oid_identificador_p
	and		ds_identificador = ds_identificador_p;

	if (ie_existe_w > 0 ) then
		ds_erro := obter_desc_expressao(882546) || ';' ||  ds_erro;
	end if;

	select	count(*)
	into STRICT	ie_existe_w
	from	estabelecimento e, pessoa_juridica pj, cat_clues c
	where	e.cd_estabelecimento = cd_estabelecimento_p
	and		e.cd_cgc = pj.cd_cgc
	and		pj.cd_internacional = c.cd_clues
	and		c.cd_clues = cd_hosp_destino_p;

	if (ie_existe_w = 0 ) then
		ds_erro := obter_desc_expressao(882566) || ';' ||  ds_erro;
	end if;

	select	count(*)
	into STRICT	ie_existe_w
	from	pessoa_fisica
	where  cd_curp = cd_curp_paciente_p;

	if (ie_existe_w = 0) then
		ds_erro := obter_desc_expressao(882568) || ';' ||  ds_erro;
	end if;

	if (coalesce(ds_erro::text, '') = '') then

		select	max(pj.cd_cgc)
		into STRICT	cd_cgc_origem_w
		from	estabelecimento e,
				pessoa_juridica pj,
				cat_clues c
		where	e.cd_estabelecimento = cd_estabelecimento_p
		and		e.cd_cgc = pj.cd_cgc
		and		pj.cd_internacional = c.cd_clues
		and		c.cd_clues = cd_hosp_origem_p;

		select	max(pj.cd_cgc)
		into STRICT	cd_cgc_destino_w
		from	estabelecimento e,
				pessoa_juridica pj,
				cat_clues c
		where	e.cd_estabelecimento = cd_estabelecimento_p
		and		e.cd_cgc = pj.cd_cgc
		and		pj.cd_internacional = c.cd_clues
		and		c.cd_clues = cd_hosp_destino_p;

		select	max(cd_pessoa_fisica)
		into STRICT	cd_pessoa_fisica_solic_w
		from	pessoa_fisica
		where	cd_curp = cd_prof_solic_p;

		select	max(cd_pessoa_fisica)
		into STRICT	cd_pessoa_fisica_origem_w
		from	pessoa_fisica
		where	cd_curp = cd_prof_destino_p;

		select	max(cd_pessoa_fisica)
		into STRICT	cd_pessoa_fisica_pac_w
		from	pessoa_fisica
		where	cd_curp = cd_curp_paciente_p;

		select 	nextval('imp_sumario_paciente_seq')
		into STRICT	nr_sequencia_w
		;

		insert into imp_sumario_paciente(
										nr_sequencia,
										cd_estabelecimento,
										dt_atualizacao,
										nm_usuario,
										dt_atualizacao_nrec,
										nm_usuario_nrec,
										ie_tipo_sumario,
										cd_pessoa_fisica,
										dt_sumario,
										cd_hosp_origem,
										nm_hosp_origem,
										cd_prof_solic,
										nm_prof_solic,
										cd_hosp_destino,
										cd_prof_destino,
										nm_prof_destino,
										ds_oid_identificador,
										ds_identificador)
								values (
										nr_sequencia_w,
										cd_estabelecimento_p,
										clock_timestamp(),
										nm_usuario_p,
										clock_timestamp(),
										nm_usuario_p,
										'NOM',
										cd_pessoa_fisica_pac_w,
										dt_sumario_p,
										cd_cgc_origem_w,
										nm_hosp_origem_p,
										cd_pessoa_fisica_solic_w,
										nm_prof_solic_p,
										cd_cgc_destino_w,
										cd_pessoa_fisica_origem_w,
										nm_prof_destino_p,
										ds_oid_identificador_p,
										ds_identificador_p);

		nr_sequencia_p	:= nr_sequencia_w;

		commit;

	end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nom_gerar_sumario_paciente ( dt_sumario_p timestamp, ds_oid_identificador_p text, ds_identificador_p text, cd_curp_paciente_p text, cd_hosp_destino_p text, cd_prof_destino_p text, nm_prof_destino_p text, cd_hosp_origem_p text, nm_hosp_origem_p text, cd_prof_solic_p text, nm_prof_solic_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro INOUT text, nr_sequencia_p INOUT bigint) FROM PUBLIC;

