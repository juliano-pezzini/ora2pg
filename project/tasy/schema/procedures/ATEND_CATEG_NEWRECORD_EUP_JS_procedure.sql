-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atend_categ_newrecord_eup_js ( ie_tipo_convenio_p bigint, cd_medico_resp_p text, nr_doc_convenio_p text, cd_convenio_chamada_p bigint, cd_categ_p text, cd_pessoa_fisica_p text, dt_entrada_p timestamp, nr_atendimento_p bigint, ie_tipo_atendimento_p bigint, qt_convenio_p bigint, nm_usuario_p text, ds_msg_abort_p INOUT text, ie_tipo_guia_p INOUT text, dt_inicio_vigencia_p INOUT timestamp, cd_empresa_p INOUT bigint, cd_convenio_p INOUT bigint, nr_doc_conv_retorno_p INOUT text, cd_categoria_p INOUT text, cd_tipo_acomod_regra_p INOUT bigint, cd_cep_pessoa_p INOUT bigint) AS $body$
DECLARE


cd_estabelecimento_w 		smallint;	
ie_permite_mais_conv_w		varchar(1);	
--ie_tipo_guia_w			varchar2(5);	
qt_tipo_guia_w			bigint;	
ie_cod_usu_tab_interna_w	varchar(2);
dt_inicio_vig_w			timestamp;
ie_tipo_empresa_w		varchar(2);
ie_dados_conv_cartao_fidel_w	varchar(1);
ie_atualiza_cep_w		varchar(1);
cd_cep_pessoa_w			varchar(255);
cd_cep_pessoa_int_w		varchar(255);
ie_automat_sus_tipo_conv_w	varchar(1);
cd_convenio_sus_w		integer;
ie_clinica_w		atendimento_paciente.ie_clinica%type;


BEGIN

/*  
ESTE PROCEDURE E UTILIZADA NO EVENTO NEWRECORD DA ATEND_CATEGORIA_CONVENIO, PASTA COMPLETO E EXAMES/PROCED

colocar todas as consistencias antes do <<final>> pois se tiver msg de abort, nao fara mais nenhuma verificacao e sai da procedure
*/
cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;

ie_atualiza_cep_w := Obter_param_Usuario(916, 86, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualiza_cep_w);
ie_tipo_empresa_w := Obter_param_Usuario(916, 128, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_tipo_empresa_w);
ie_automat_sus_tipo_conv_w := Obter_param_Usuario(916, 336, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_automat_sus_tipo_conv_w);
ie_permite_mais_conv_w := Obter_param_Usuario(916, 455, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_permite_mais_conv_w);
ie_cod_usu_tab_interna_w := Obter_param_Usuario(916, 952, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_cod_usu_tab_interna_w);
ie_dados_conv_cartao_fidel_w := Obter_param_Usuario(916, 997, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_dados_conv_cartao_fidel_w);

ds_msg_abort_p := atend_categ_newrec_abort_eup(ie_permite_mais_conv_w, qt_convenio_p, nm_usuario_p, ds_msg_abort_p);

if (ds_msg_abort_p IS NOT NULL AND ds_msg_abort_p::text <> '') then
	goto final;
end if;

if (coalesce(ie_tipo_atendimento_p,0) > 0) then

	select	max(ie_clinica)
	into STRICT	ie_clinica_w
	from 	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;

	select	count(*)
	into STRICT	qt_tipo_guia_w
        from	tipo_guia_atend
        where	ie_tipo_atendimento = ie_tipo_atendimento_p
		and (coalesce(ie_clinica,0) = coalesce(ie_clinica_w,0) or coalesce(ie_clinica::text, '') = '')
        and 	ie_guia_padrao = 'S';
	
	if (qt_tipo_guia_w > 0) then
		select	max(ie_tipo_guia)
		into STRICT	ie_tipo_guia_p
		from	tipo_guia_atend
		where	ie_tipo_atendimento = ie_tipo_atendimento_p
		and (coalesce(ie_clinica,0) = coalesce(ie_clinica_w,0) or coalesce(ie_clinica::text, '') = '') 
		and 	ie_guia_padrao = 'S'
		and     cd_estabelecimento = cd_estabelecimento_w;
		
		if (coalesce(ie_tipo_guia_p::text, '') = '') then
			select	max(ie_tipo_guia)
			into STRICT	ie_tipo_guia_p
			from	tipo_guia_atend
			where	ie_tipo_atendimento = ie_tipo_atendimento_p
			and (coalesce(ie_clinica,0) = coalesce(ie_clinica_w,0) or coalesce(ie_clinica::text, '') = '')
			and 	ie_guia_padrao = 'S'
			and     coalesce(cd_estabelecimento::text, '') = '';

		end if;
	end if;
end if;

if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') in ('de_DE', 'de_AT')) then
	dt_inicio_vigencia_p := obter_data_nascto_pf(cd_pessoa_fisica_p) + 0.00001;
else
	select  max(dt_final_vigencia)
	into STRICT	dt_inicio_vig_w         
	from    atend_categoria_convenio        
	where   nr_atendimento = nr_atendimento_p
	and	dt_final_vigencia < to_date('31/12/9999','dd/mm/yyyy');

	if (coalesce(dt_inicio_vig_w::text, '') = '') then
		dt_inicio_vigencia_p := dt_entrada_p;
	else
		dt_inicio_vigencia_p := dt_inicio_vig_w + 0.00002;
	end if;
end if;

if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
	if (ie_tipo_empresa_w <> '0') and (ie_tipo_empresa_w <> 'C') then
		
		cd_empresa_p := obter_empresa_paciente(cd_pessoa_fisica_p, ie_tipo_empresa_w);
	elsif (ie_tipo_empresa_w = 'C') then
		
		select	max(cd_empresa_referencia)
		into STRICT	cd_empresa_p	
		from	pf_cartao_fidelidade
		where	cd_pessoa_fisica = cd_pessoa_fisica_p;
	end if;
end if;

if (coalesce(cd_convenio_chamada_p,0) > 0) then
	cd_convenio_p := cd_convenio_chamada_p;

	if (coalesce(nr_doc_convenio_p::text, '') = '') then
		nr_doc_conv_retorno_p := obter_guia_conv_atend(nr_atendimento_p, cd_convenio_p, cd_categ_p, ie_tipo_atendimento_p, cd_estabelecimento_w, ie_tipo_guia_p, nr_doc_conv_retorno_p, null, null);
	end if;
else
	if (ie_dados_conv_cartao_fidel_w = 'P') or (ie_dados_conv_cartao_fidel_w = 'S') then
		
		select  coalesce(max(b.cd_convenio),0),
			max(b.cd_categoria)
		into STRICT	cd_convenio_p,
			cd_categoria_p	
		from    param_cartao_fidelidade b,       
			cartao_fidelidade a          
                where   a.nr_sequencia = b.nr_seq_cartao 
                and	a.nr_sequencia = Obter_cartao_fidelidade_pf(cd_pessoa_fisica_p,'C');
		
		if (ie_dados_conv_cartao_fidel_w = 'S') and (cd_convenio_p = 0) then
			
			select  coalesce(max(b.cd_convenio),0),
                                max(b.cd_categoria)  
			into STRICT	cd_convenio_p,
				cd_categoria_p	
			from    param_cartao_fidelidade b,
				cartao_fidelidade a    
                        where	a.nr_sequencia = b.nr_seq_cartao 
			and     a.nr_sequencia = Obter_cartao_fidelidade_pf(cd_medico_resp_p,'C');
		
		end if;
	end if;
end if;

cd_tipo_acomod_regra_p := coalesce(obter_acomod_perfil_regra(obter_perfil_ativo),0);

if (ie_atualiza_cep_w <> 'N') then
	SELECT * FROM Obter_cep_convenio(cd_pessoa_fisica_p, cd_cep_pessoa_w, cd_cep_pessoa_int_w) INTO STRICT cd_cep_pessoa_w, cd_cep_pessoa_int_w;
	
	cd_cep_pessoa_p := coalesce(cd_cep_pessoa_w,cd_cep_pessoa_int_w);

end if;


if (ie_automat_sus_tipo_conv_w = 'S') and (coalesce(cd_convenio_p,0) = 0) and (ie_tipo_convenio_p = 3) then

	select	coalesce(max(cd_convenio_sus),0)	
	into STRICT	cd_convenio_sus_w
	from	parametro_faturamento
	where	cd_estabelecimento = cd_estabelecimento_w;
	
	if (cd_convenio_sus_w > 0) then
		cd_convenio_p := cd_convenio_sus_w;
	end if;
end if;

<<final>>

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atend_categ_newrecord_eup_js ( ie_tipo_convenio_p bigint, cd_medico_resp_p text, nr_doc_convenio_p text, cd_convenio_chamada_p bigint, cd_categ_p text, cd_pessoa_fisica_p text, dt_entrada_p timestamp, nr_atendimento_p bigint, ie_tipo_atendimento_p bigint, qt_convenio_p bigint, nm_usuario_p text, ds_msg_abort_p INOUT text, ie_tipo_guia_p INOUT text, dt_inicio_vigencia_p INOUT timestamp, cd_empresa_p INOUT bigint, cd_convenio_p INOUT bigint, nr_doc_conv_retorno_p INOUT text, cd_categoria_p INOUT text, cd_tipo_acomod_regra_p INOUT bigint, cd_cep_pessoa_p INOUT bigint) FROM PUBLIC;

