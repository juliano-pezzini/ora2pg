-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_aprov_result_int_usina ( nr_prescricao_p bigint, nr_sequencia_p bigint, nm_usuario_aprov_p text, dt_aprovacao_p timestamp, ds_erro_p INOUT text) AS $body$
DECLARE

nr_seq_result_w   bigint;
ie_status_receb_w  smallint;
ie_aprovar_todos_interf_w varchar(1);
ds_consistencia_w  varchar(4000);
qt_exames_consist_w  integer;

BEGIN
	BEGIN
	SELECT MAX(nr_seq_resultado)
		INTO STRICT nr_seq_result_w
		FROM exame_lab_resultado
	WHERE nr_prescricao = nr_prescricao_p;
	SELECT  coalesce(MAX(b.ie_status_receb),35),
		coalesce(MAX(b.ie_aprovar_todos_interf),'S')
		INTO STRICT 	ie_status_receb_w,
			ie_aprovar_todos_interf_w
	FROM 	lab_parametro b,
		prescr_medica a
	WHERE a.cd_estabelecimento = b.cd_estabelecimento
	AND a.nr_prescricao  = nr_prescricao_p;

ds_consistencia_w := '';
IF (ie_aprovar_todos_interf_w = 'N') THEN
	ds_consistencia_w := Consistir_Aprovacao_Exame(nr_prescricao_p, nr_sequencia_p, ds_consistencia_w);
	 IF (ds_consistencia_w <> '' AND ie_status_receb_w = 35) THEN
		ie_status_receb_w := 30;
	 END IF;
END IF;

IF (ie_status_receb_w = 35) THEN
	qt_exames_consist_w := consitir_valores_interf_aprov(nr_seq_result_w, nr_sequencia_p, qt_exames_consist_w);
	IF (qt_exames_consist_w > 0) THEN
		ie_status_receb_w := 30;
	END IF;
END IF;
	UPDATE  prescr_procedimento
	SET  ie_status_atend = ie_status_receb_w,
		dt_atualizacao  = clock_timestamp(),
		nm_usuario  = nm_usuario_aprov_p
	WHERE nr_prescricao  = nr_prescricao_p
	AND nr_sequencia  = nr_sequencia_p
	AND ie_status_atend  = 30;
	IF (ie_status_receb_w >= 35) THEN
		UPDATE  exame_lab_result_item
		SET dt_aprovacao  = dt_aprovacao_p,
			nm_usuario_aprovacao = nm_usuario_aprov_p,
			dt_atualizacao  = clock_timestamp(),
			nm_usuario  = nm_usuario_aprov_p
		WHERE nr_seq_resultado = nr_seq_result_w
		AND nr_seq_prescr  = nr_sequencia_p
		AND (nr_seq_material IS NOT NULL AND nr_seq_material::text <> '');
	END IF;
	EXCEPTION
	WHEN OTHERS THEN
		ds_erro_p := SUBSTR(SQLERRM,1,2000);
	END;
	COMMIT;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_aprov_result_int_usina ( nr_prescricao_p bigint, nr_sequencia_p bigint, nm_usuario_aprov_p text, dt_aprovacao_p timestamp, ds_erro_p INOUT text) FROM PUBLIC;

