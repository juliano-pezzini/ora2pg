-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_73 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE



/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Validar unidade de medida materiais, se a unidade (TISS) apresentada é a mesma cadastrada na pls_material,
considerando tiss_unidade_medida

-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Alterações:
------------------------------------------------------------------------------------------------------------------
jjkruk OS 728693
Alteração: Modificado SELECT do cursor
Motivo: Não gerar ocorrência quando cd_unidade_medida for null
------------------------------------------------------------------------------------------------------------------
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
dados_tb_selecao_w		pls_tipos_ocor_pck.dados_table_selecao_ocor;

C01 CURSOR(	nr_seq_oc_cta_comb_p	dados_regra_p.nr_sequencia%type) FOR
	SELECT	a.ie_valida_unidade_medida ie_valida_unidade_medida,
		a.ie_valida_unidade_medida_ptu ie_valida_unidade_medida_ptu
	from	pls_oc_cta_val_uni_med a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;

C02 CURSOR(	nr_id_transacao_pc		pls_oc_cta_selecao_ocor_v.nr_sequencia%type) FOR
	SELECT 	x.nr_sequencia,
		'S' ie_valido,
		'Unidade de medida informada diferente do cadastro do material' ds_observacao
	from	pls_oc_cta_selecao_ocor_v	x,
		pls_conta_mat_ocor_v		a
	where	x.ie_valido		= 'S'
	and	x.nr_id_transacao	= nr_id_transacao_pc
	and	a.nr_sequencia 		= x.nr_seq_conta_mat
	and	(a.cd_unidade_medida IS NOT NULL AND a.cd_unidade_medida::text <> '')
	and	(a.nr_seq_material IS NOT NULL AND a.nr_seq_material::text <> '')
	and	not exists (SELECT 	1
			from 		pls_material		b,
					tiss_unidade_medida	c,
					unidade_medida		d
			where		b.nr_sequencia		= a.nr_seq_material
			and		a.cd_unidade_medida	= c.cd_unidade_medida
			and		c.nr_sequencia		= d.nr_seq_medida_tiss
			and		d.cd_unidade_medida	= b.cd_unidade_medida);

C03 CURSOR(	nr_id_transacao_pc		pls_oc_cta_selecao_ocor_v.nr_sequencia%type) FOR
	SELECT 	x.nr_sequencia,
		'S' ie_valido,
		'Unidade de medida informada diferente do cadastro do material (PTU)' ds_observacao
	from	ptu_nota_servico		s,
		pls_oc_cta_selecao_ocor_v	x,
		pls_conta_mat_ocor_v		a
	where	x.ie_valido		= 'S'
	and	x.nr_id_transacao	= nr_id_transacao_pc
	and	a.nr_sequencia 		= x.nr_seq_conta_mat
	and	a.nr_sequencia		= s.nr_seq_conta_mat
	and	(s.unidade_medida IS NOT NULL AND s.unidade_medida::text <> '')
	and	(a.nr_seq_material IS NOT NULL AND a.nr_seq_material::text <> '')
	and	not exists (	SELECT 	1
				from 	pls_material_a900	d,
					pls_material_unimed	p
				where	d.nr_seq_material	= a.nr_seq_material
				and	p.cd_unidade_medida	= s.unidade_medida);


BEGIN
if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '')  then
	for r_C01_w in C01(dados_regra_p.nr_sequencia) loop
		if (r_C01_w.ie_valida_unidade_medida = 'S') then
			begin
				pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);
				-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
				CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);
				open c02(nr_id_transacao_p);
				loop
					fetch 	c02 bulk collect
					into	dados_tb_selecao_w.nr_seq_selecao,
						dados_tb_selecao_w.ie_valido,
						dados_tb_selecao_w.ds_observacao

					limit pls_util_cta_pck.qt_registro_transacao_w;
					exit when dados_tb_selecao_w.nr_seq_selecao.count = 0;

					CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
											'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);

				end loop;
				close c02;
			exception
			when others then
				if (c02%isopen) then
					close c02;
				end if;
				CALL pls_tipos_ocor_pck.trata_erro_sql_dinamico(dados_regra_p, sqlerrm, nr_id_transacao_p, nm_usuario_p);
			end;
			CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);
		end if;

		if (r_C01_w.ie_valida_unidade_medida_ptu = 'S') then
			begin
				pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);
				-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
				CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);
				open c03(nr_id_transacao_p);
				loop
					fetch 	c03 bulk collect
					into	dados_tb_selecao_w.nr_seq_selecao,
						dados_tb_selecao_w.ie_valido,
						dados_tb_selecao_w.ds_observacao

					limit pls_util_cta_pck.qt_registro_transacao_w;
					exit when dados_tb_selecao_w.nr_seq_selecao.count = 0;

					CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
											'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);

				end loop;
				close c03;
			exception
			when others then
				if (c03%isopen) then
					close c03;
				end if;
				CALL pls_tipos_ocor_pck.trata_erro_sql_dinamico(dados_regra_p, sqlerrm, nr_id_transacao_p, nm_usuario_p);
			end;
			CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);
		end if;

	end loop;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_73 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_selecao_ocor_cta.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

