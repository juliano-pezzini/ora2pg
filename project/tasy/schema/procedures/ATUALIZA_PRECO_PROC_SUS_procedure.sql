-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_preco_proc_sus ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_atualizacao_w        		timestamp			:= clock_timestamp();
dt_competencia_w        		timestamp 			:= clock_timestamp();
dt_comp_unif_w			timestamp;
vl_conta_partic_w			double precision 		:= 0;
vl_matmed_w             		double precision		:= 0;
vl_diaria_w             			double precision		:= 0;
vl_taxas_w              			double precision		:= 0;
vl_medico_w             		double precision		:= 0;
vl_sadt_w			double precision		:= 0;
vl_contraste_w			double precision		:= 0;
vl_gesso_w			double precision		:= 0;
vl_quimioterapia_w			double precision		:= 0;
vl_dialise_w			double precision		:= 0;
vl_tph_w				double precision		:= 0;
vl_filme_rx_w			double precision		:= 0;
vl_filme_ressonancia_w		double precision		:= 0;
vl_anestesia_w			double precision		:= 0;
vl_sadt_rx_w			double precision		:= 0;
vl_sadt_pc_w			double precision		:= 0;
vl_outros_w			double precision		:= 0;
vl_ato_medico_w			double precision		:= 0;
vl_ato_anestesista_w		double precision		:= 0;
vl_procedimento_w			double precision		:= 0;
qt_ato_medico_w         		bigint		:= 0;
qt_ato_anestesista_w    		bigint		:= 0;
cd_conta_contabil_w        		varchar(20);
cd_centro_custo_w      		bigint  		:= 0;
cd_estabelecimento_w      		smallint  		:= 0;
dt_entrada_w         			timestamp;
dt_alta_w         	  		timestamp;
ie_tipo_atendimento_w     		smallint    		:= 0;
dt_acerto_conta_w         		timestamp;
cd_convenio_w             		integer    		:= 0;
cd_categoria_w            		varchar(10);
cd_convenio_orig_w		integer			:= 0;
dt_conta_w                		timestamp 			:= clock_timestamp();
cd_setor_atendimento_w    		integer  		:= 0;
nr_lote_contabil_w        		bigint   		:= 0;
ie_valor_informado_w      		varchar(1);
nr_interno_conta_w			bigint;
cd_convenio_calculo_w     		integer;
cd_categoria_calculo_w    		varchar(10);
nr_atendimento_w	  		bigint;
cd_procedimento_w	  	bigint;
cd_proc_princ_w	  		bigint;
dt_procedimento_w	  		timestamp;
ie_origem_proced_w	  	bigint;
qt_procedimento_w			double precision		:= 0;
nr_cirurgia_w		  	bigint   := 0;
nr_doc_convenio_w         		varchar(20);
ie_guia_informada_w        		varchar(01);
vl_proc_orig_w            		double precision := 0;
vl_custo_oper_orig_w    		double precision := 0;
vl_anestesista_orig_w      		double precision := 0;
vl_medico_orig_w           		double precision := 0;
vl_materiais_orig_w        		double precision := 0;
vl_auxiliares_orig_w       		double precision := 0;
vl_custo_operacional_w    		double precision := 0;
vl_anestesista_w        		double precision := 0;
vl_materiais_w          		double precision := 0;
vl_auxiliares_w         		double precision := 0;
ie_tipo_convenio_w			smallint;
ie_tipo_convenio_aux_w		smallint;
ie_classif_convenio_w      		varchar(03);
cd_autorizacao_w			varchar(20);
nr_seq_autorizacao_w		bigint;
qt_autorizada_w    			double precision := 0;
cd_senha_w			varchar(20);
nm_responsavel_w			varchar(40);
ie_glosa_w			varchar(1);
cd_situacao_glosa_w		smallint := 0;
tx_procedimento_w         		double precision 	:= 100;
cd_faixa_etaria_w			smallint;
cd_pessoa_fisica_w         		varchar(10);
qt_faixa_etaria_w			bigint;
nr_seq_faixa_w			bigint;
ie_versao_w			varchar(20);
ie_tipo_servico_sus_w		smallint;
ie_tipo_ato_sus_w			smallint;
nr_seq_partic_w			bigint;
vl_participante_w			double precision	:= 0;
vl_medico_partic_w			double precision	:= 0;
qt_ponto_sus_w			smallint		:= 0;
ie_tipo_laudo_sus_w		smallint		:= 0;
nr_laudo_sus_w			smallint		:= 0;
nr_seq_regra_preco_w		bigint;
cd_tipo_acomodacao_w      		smallint;
ie_emite_conta_part_w      		varchar(3);
cd_regra_honor_part_w      		varchar(5);
vl_original_part_w			double precision	:= 0;
vl_adic_plant_w			double precision	:= 0;
vl_adic_plant_orig_w		double precision	:= 0;
ie_plantonista_w      		varchar(1);
cd_medico_executor_w   		varchar(10);
ie_tipo_atend_bpa_w		smallint		:= 0;
ie_classif_urg_emerg_w		smallint;
pr_adic_urg_emerg_w		double precision;
ie_carater_inter_sus_w		varchar(2);
ie_politraumatizado_w		varchar(1)		:= 'N';
pr_participante_w			double precision		:= 0;
cd_porte_w			smallint;
qt_anestesista_w			integer;
vl_sp_w				double precision;
ie_clinica_w			integer;
ds_log_w				varchar(2000);
qt_registros_w			integer	:= 0;
ie_conta_cancelada_w		varchar(1)	:= 'X';
nr_seq_proc_acerto_w		bigint	:= 0;

pr_glosa_w			double precision;
vl_glosa_w			double precision;
ie_altera_tipo_serv_w		varchar(1);
ie_gera_diaria_uti_w		varchar(1);
qt_consulta_w			smallint;

cd_usuario_convenio_w		varchar(40);
cd_plano_w			varchar(20);
cd_empresa_ref_w			bigint;
cd_motivo_exc_conta_ww		bigint;
ie_carater_inter_aih_w		varchar(2);
ie_gerar_partic_cigurg_w		varchar(01) := 'N';

ie_regra_hon_w			smallint;
cd_regra_honorario_orig_w		varchar(5);
cd_regra_honorario_w		varchar(5);
ie_conta_honorario_w		varchar(1);
ie_calcula_honorario_w		varchar(1)		:= 'S';
cd_cgc_honorario_w		varchar(14);
cd_cgc_prestador_w		varchar(14);
cd_pessoa_honorario_w		varchar(10);
nr_seq_criterio_w			bigint;
vl_medico_conta_w			double precision;
ie_intercorrencia_w			varchar(01);
qt_conv_sus_fixo_w		integer;
qt_regra_proc_adic_w		integer	:= 0;

ie_preco_informado_glosa_w		varchar(01);
vl_negociado_glosa_w		double precision;
nr_seq_proc_pacote_w		bigint;
ie_pacote_w			varchar(1):=	'A';

cd_cgc_partic_w			varchar(14);
cd_motivo_exc_conta_w		smallint;

cd_convenio_parametro_w		bigint;
cd_categoria_parametro_w		varchar(10);
ie_conv_calculo_honorario_w		varchar(01);

cd_proc_unif_w			bigint	:= 0;
vl_sa_unif_w			double precision	:= 0;
vl_sh_unif_w			double precision	:= 0;
vl_sp_unif_w			double precision	:= 0;
vl_sadt_unif_w			double precision	:= 0;
vl_total_hosp_unif_w		double precision	:= 0;
vl_total_amb_unif_w		double precision	:= 0;
qt_pontos_ato_unif_w		integer	:= 0;
qt_faixa_etaria_ww			bigint	:= 0;
qt_procedimento_ww		bigint	:=0;
qt_nasc_sai_alta_w			smallint	:= 1;
ie_autor_particular_w		varchar(1);
cd_convenio_glosa_ww		integer;
cd_categoria_glosa_ww		varchar(10);
nr_seq_ajuste_proc_ww		bigint;
vl_aux_w				double precision	:= 0;

ie_inc_proc_conta_w		varchar(15);
ie_inc_proc_conta_data_w		varchar(15);
ie_sexo_w			varchar(1);
ie_gerar_proc_adic_sus_w		varchar(15) := 'N';
cd_procedencia_w			integer;
ie_regra_tipo_atend_w		varchar(1):= 'A';
ie_doc_executor_w			smallint;
ie_status_acerto_w			smallint;
cd_cbo_w			varchar(06);
nr_seq_proc_interno_w		bigint;
ie_complexidade_sus_w		varchar(2);
ie_tipo_financ_sus_w		varchar(4);
nr_prescricao_w			bigint		:= 0;
cd_setor_atend_prescr_w    		integer  	:= 0;
nr_seq_cobertura_w		bigint;
nr_seq_classif_atend_w		bigint;
nr_seq_crit_honorario_w		bigint;
cd_dependente_w			smallint;
nr_seq_exame_w			bigint;
nr_seq_origem_w			bigint;
nr_seq_classif_medico_w		atendimento_paciente.nr_seq_classif_medico%type;

c01 CURSOR FOR
SELECT	nr_seq_partic
from	procedimento_participante
where	nr_sequencia = nr_sequencia_p
  and	ie_origem_proced_w <> 3;

BEGIN

begin
select	coalesce(b.ie_cancelamento,'X'),
	b.ie_status_acerto
into STRICT	ie_conta_cancelada_w,
	ie_status_acerto_w
from	conta_paciente		b,
	procedimento_paciente	a
where	a.nr_sequencia		= nr_sequencia_p
and	a.nr_interno_conta		= b.nr_interno_conta;
exception
	when others then
	ie_conta_cancelada_w	:= 'X';
end;

if (ie_conta_cancelada_w <> 'X' ) then
	goto final;
end if;

cd_faixa_etaria_w := null;

select 	coalesce(max(ie_altera_tipo_serv),'N'),
	coalesce(max(ie_gera_diaria_uti),'N'),
	coalesce(max(ie_gerar_partic_cigurg), 'N')
into STRICT	ie_altera_tipo_serv_w,
	ie_gera_diaria_uti_w,
	ie_gerar_partic_cigurg_w
from	sus_parametros;


/* Obter o Registro do Procedimento do Paciente */

begin
select 	cd_convenio,
		cd_categoria,
		ie_origem_proced,
		qt_procedimento,
		coalesce(nr_cirurgia,0),
		nr_atendimento,
		cd_procedimento,
		dt_procedimento,
     		coalesce(dt_conta, coalesce(dt_prescricao,dt_procedimento)),
		cd_setor_atendimento,
     		dt_acerto_conta,
		coalesce(nr_lote_contabil,0),
		coalesce(ie_valor_informado,'N'),
		nr_interno_conta,
		nr_doc_convenio,
		ie_guia_informada,
		coalesce(vl_custo_operacional,0),
		coalesce(vl_anestesista,0),
		coalesce(vl_medico,0),
		coalesce(vl_materiais,0),
		coalesce(vl_auxiliares,0),
		coalesce(vl_procedimento,0),
		coalesce(tx_procedimento,100),
		coalesce(ie_tipo_servico_sus,0),
		ie_tipo_ato_sus,
		coalesce(vl_adic_plant,0),
		cd_convenio,
		cd_medico_executor,
		ie_responsavel_credito,
		coalesce(ie_intercorrencia,'N'),
		cd_cgc_prestador,
		nr_seq_proc_pacote,
		cd_motivo_exc_conta,
		ie_doc_executor,
		cd_cbo,
		nr_seq_proc_interno,
		nr_prescricao,
		nr_seq_exame
into STRICT 		cd_convenio_w,
		cd_categoria_w,
		ie_origem_proced_w,
		qt_procedimento_w,
		nr_cirurgia_w,
		nr_atendimento_w,
		cd_procedimento_w,
		dt_procedimento_w,
     		dt_conta_w,
		cd_setor_atendimento_w,
     		dt_acerto_conta_w,
		nr_lote_contabil_w,
		ie_valor_informado_w,
		nr_interno_conta_w,
		nr_doc_convenio_w,
		ie_guia_informada_w,
		vl_custo_oper_orig_w,
		vl_anestesista_orig_w,
		vl_medico_orig_w,
		vl_materiais_orig_w,
		vl_auxiliares_orig_w,
		vl_proc_orig_w,
		tx_procedimento_w,
		ie_tipo_servico_sus_w,
		ie_tipo_ato_sus_w,
		vl_adic_plant_orig_w,
		cd_convenio_orig_w,
		cd_medico_executor_w,
		cd_regra_honorario_orig_w,
		ie_intercorrencia_w,
		cd_cgc_prestador_w,
		nr_seq_proc_pacote_w,
		cd_motivo_exc_conta_w,
		ie_doc_executor_w,
		cd_cbo_w,
		nr_seq_proc_interno_w,
		nr_prescricao_w,
		nr_seq_exame_w
from 		procedimento_paciente
where 		nr_sequencia	= nr_sequencia_p;
exception
     		when others then
		--Erro ao ler procedimento_paciente
  		CALL Wheb_mensagem_pck.exibir_mensagem_abort(186300);
end;

begin
select	ie_tipo_convenio
into STRICT	ie_tipo_convenio_aux_w
from	convenio
where	cd_convenio = cd_convenio_w  LIMIT 1;
exception
when others then
	ie_tipo_convenio_aux_w := 1;
end;

begin

select	cd_procedencia,
	coalesce((obter_dados_categ_conv(nr_atendimento,'OC'))::numeric ,0),
	coalesce(nr_seq_classif_medico,0)
into STRICT	cd_procedencia_w,
	nr_seq_origem_w,
	nr_seq_classif_medico_w
from 	atendimento_paciente
where 	nr_atendimento 	= nr_atendimento_w;
exception
    	when others then
      	cd_procedencia_w := 0;
	nr_seq_origem_w  := 0;
	nr_seq_classif_medico_w	:= 0;
end;

cd_empresa_ref_w	:= obter_dado_atend_cat_conv(nr_atendimento_w, dt_conta_w, cd_convenio_w, cd_categoria_w, 'E');
cd_plano_w		:= obter_dado_atend_cat_conv(nr_atendimento_w, dt_conta_w, cd_convenio_w, cd_categoria_w, 'P');
cd_usuario_convenio_w	:= obter_dado_atend_cat_conv(nr_atendimento_w, dt_conta_w, cd_convenio_w, cd_categoria_w, 'U');
nr_seq_cobertura_w	:= (obter_dados_categ_conv(nr_atendimento_w, 'COB'))::numeric;
cd_dependente_w		:= (obter_dados_categ_conv(nr_atendimento_w, 'DEP'))::numeric;

begin
select	nr_seq_classificacao
into STRICT	nr_seq_classif_atend_w
from	atendimento_paciente
where	nr_atendimento		= nr_atendimento_w  LIMIT 1;
exception
when others then
	nr_seq_classif_atend_w := null;
end;

/*  Somente para AIH
	Teste se o procedimento tem laudo e no caso de ter se existe proc duplo
	Neste caso nao calcula Valor
*/
if (ie_origem_proced_w = 2) 	then
	begin
	begin
	select 	ie_tipo_laudo_sus,
	     		nr_laudo_sus
	into STRICT		ie_tipo_laudo_sus_w,
			nr_laudo_sus_w
	from	sus_laudo_paciente
	where	nr_atendimento 		= nr_atendimento_w
	and 	cd_procedimento_solic	= cd_procedimento_w
	and	nr_interno_conta	= nr_interno_conta_w /* Felipe - OS29334 - Coloquei mais o teste pela conta*/
	and	ie_tipo_laudo_sus_w	<> 15; /* Felipe - OS34318 - O tipo de laudo 15 nao exporta e nem deve calcular

preco*/
	exception
     		when others then
			begin
			ie_tipo_laudo_sus_w		:= 99;
			nr_laudo_sus_w			:= 0;
			end;
	end;
	if (ie_tipo_laudo_sus_w <> 99) then
		begin

		/* Elemar/Ricardo - Foi alterado abaixo para testar pela conta e nao pelo atendimento.

Motivo: contas

canceladas */
		select 	distinct 99, 0
		into STRICT	ie_tipo_laudo_sus_w,
			nr_laudo_sus_w
		from 	procedimento_paciente
		where	nr_interno_conta 	= nr_interno_conta_w
		and	cd_procedimento 	= cd_procedimento_w
		and	nr_sequencia	< nr_sequencia_p
		and	coalesce(cd_motivo_exc_conta::text, '') = '';
		exception
     			when others then
				begin
          				nr_laudo_sus_w  := nr_laudo_sus_w;
				end;
		end;
	else if (cd_procedimento_w in (95001018,95002022)) then
		begin
		select	distinct ie_tipo_laudo_sus,
		     	nr_laudo_sus
		into STRICT	ie_tipo_laudo_sus_w,
			nr_laudo_sus_w
		from	sus_laudo_paciente a
		where 	a.nr_atendimento = nr_atendimento_w
		and	aih_validar_regra(13,a.cd_procedimento_solic) > 0
		and 	exists (SELECT	c.qt_nascidos_vivos
				from 	sus_aih c
				where 	c.nr_atendimento = a.nr_atendimento
				and 	c.qt_nascidos_vivos > 0)
		and	ie_tipo_laudo_sus = 	(select	max(ie_tipo_laudo_sus)
						from 	sus_laudo_paciente
						where 	nr_atendimento	= nr_atendimento_w
						and 	ie_tipo_laudo_sus in (0,1));
		exception
	     		when others then
				begin
				ie_tipo_laudo_sus_w		:= 99;
				nr_laudo_sus_w			:= 0;
				end;
		end;
	end if;
	end if;
	end;
end if;
/* Obter o Estabelecimento do Atendimento */

begin
select 	cd_estabelecimento,
	dt_entrada,
	coalesce(dt_alta,to_date('01/01/1900 00:00:00','dd/mm/yyyy hh24:mi:ss')),
	ie_tipo_atendimento,
	cd_pessoa_fisica,
	ie_tipo_atend_bpa,
	ie_carater_inter_sus,
	ie_clinica,
	obter_sexo_pf(cd_pessoa_fisica,'C')
into STRICT  	cd_estabelecimento_w,
	dt_entrada_w,
	dt_alta_w,
	ie_tipo_atendimento_w,
	cd_pessoa_fisica_w,
	ie_tipo_atend_bpa_w,
	ie_carater_inter_sus_w,
	ie_clinica_w,
	ie_sexo_w
from 	atendimento_paciente
where 	nr_atendimento = nr_atendimento_w;
exception
	when others then
	cd_estabelecimento_w	:= 1;
	ds_log_w		:= 'Atualiza_Preco_Proc_Sus(Obter o Estabelecimento do Atendimento)';
end;

select	coalesce(max(ie_conv_calculo_honorario), 'A'),
	coalesce(max(ie_gerar_proc_adic_sus),'N'),
	coalesce(max(ie_regra_tipo_atend),'A')
into STRICT	ie_conv_calculo_honorario_w,
	ie_gerar_proc_adic_sus_w,
	ie_regra_tipo_atend_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;

if (coalesce(ie_regra_tipo_atend_w,'A') = 'C') then
	begin
	select	coalesce(ie_tipo_atend_conta,ie_tipo_atendimento_w)
	into STRICT	ie_tipo_atendimento_w
	from 	conta_paciente
	where 	nr_interno_conta = nr_interno_conta_w;
	exception
		when others then
		ie_tipo_atendimento_w:= ie_tipo_atendimento_w;
	end;
end if;

if (nr_cirurgia_w > 0) and (ie_gerar_partic_cigurg_w = 'S') then
	begin

	CALL gerar_participante_proc(
				nr_cirurgia_w,
				cd_estabelecimento_w,
				nr_sequencia_p,
				cd_convenio_w,
				cd_categoria_w,
				cd_procedimento_w,
				ie_origem_proced_w,
				dt_conta_w,
				nm_usuario_p,
				ie_tipo_atendimento_w,
				cd_procedencia_w);
	end;
end if;

/* Obter o Classificacao do Hospital quanto a Urgencia e Emergencia */

begin
select cd_classificacao
into STRICT	ie_classif_urg_emerg_w
from 	sus_classificacao_hospital
where cd_estabelecimento 	= cd_estabelecimento_w;
/*  and nr_sequencia		= 1; Felipe OS 61857 - 04/07/2007 - Comentei pois para o Divina Providencia existe mais de um registro nesse

cadastro*/
exception
	when others then
          	ie_classif_urg_emerg_w := '0';
end;
/* Obter o Percentual dos procedimentos de Urgencia e Emergencia */

pr_adic_urg_emerg_w		:= 0;
if (ie_classif_urg_emerg_w	= '1') then
	pr_adic_urg_emerg_w	:= 20;
elsif (ie_classif_urg_emerg_w	= '2') then
	pr_adic_urg_emerg_w	:= 35;
elsif (ie_classif_urg_emerg_w	= '3') then
	pr_adic_urg_emerg_w	:= 50;
end if;
/* Saber se o carater eh de Urgencia */

if (ie_carater_inter_sus_w not in ('20','26','27','28','29')) then
	pr_adic_urg_emerg_w 		:= 0;
end if;
/* Para Ortese e Protese o percentual eh 0 */

if (pr_adic_urg_emerg_w > 0)  			and (cd_procedimento_w	not in (99042010, 99042029, 99080991)) then
	begin
	select CASE WHEN cd_grupo_sus='1' THEN  0  WHEN cd_grupo_sus='2' THEN  0 WHEN cd_grupo_sus='7' THEN  0 WHEN cd_grupo_sus='11' THEN  0 WHEN cd_grupo_sus='12' THEN  0  ELSE pr_adic_urg_emerg_w END
	into STRICT	pr_adic_urg_emerg_w
	from procedimento
	where cd_procedimento		= cd_procedimento_w
	  and ie_origem_proced		= ie_origem_proced_w;
	end;
end if;

/*  Felipe - 05/09/2007 - OS67398 - Comentei pois o SISAIH calculou o valor adicional para o codigo 99080010
Diaria de acompanhante grupo (5) tratamento diferenciado por procedimento
if	(pr_adic_Urg_Emerg_w > 0)  				and
	(cd_procedimento_w	in (99080010))	then
	pr_adic_Urg_Emerg_w	:= 0;
end if;
*/


/* Saber se o procedimento pode ter aplicado o Percentual de Urgencia e Emergencia */


/* nao vale para diaria de UTI(99080991) gerada como codigo do Tasy, que nao tem nas tabelas do SUS */




/* De acordo com solicitacao do Elias/HSA OS-13151 e portaria 2925 Julho/1998 diaria UTI nao aplica Perc.

*/

/* Elias mandou voltar
if	(pr_adic_Urg_Emerg_w > 0)  				and
	(cd_procedimento_w	in(99080991,96001038,96001020,96001011,96005033,96005025,
					96005017,96004037,96004029,96004010))	then
	pr_adic_Urg_Emerg_w	:= 0;
end if;
*/
if (pr_adic_urg_emerg_w > 0)  		and (cd_procedimento_w	<> 99080991)	then
	begin
	SELECT * FROM obter_proc_princ_sus(nr_atendimento_w, coalesce(nr_interno_conta_w,0), cd_proc_princ_w, ie_politraumatizado_w) INTO STRICT cd_proc_princ_w, ie_politraumatizado_w;
	select coalesce(max(pr_adic_urg_emerg_w),0)
	into STRICT	pr_adic_urg_emerg_w
	from sus_proced_urg_emerg
	where cd_procedimento		= cd_proc_princ_w
	  and ie_origem_proced		= ie_origem_proced_w;
	exception
		when others then
           	pr_adic_urg_emerg_w 	:= 0;
	end;
end if;

/* Elemar em 28/07/2004 dava erro ao aprovar exame do laboratorio
if (nvl(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
*/


/* Obter o tipo de acomodacao do convenio */

begin
select	coalesce(cd_tipo_acomodacao,0)
into STRICT		cd_tipo_acomodacao_w
from		atend_categoria_convenio_v
where		nr_atendimento		= nr_atendimento_w
and		cd_convenio			= cd_convenio_w
and		cd_categoria		= cd_categoria_w;
exception
     	when others then
          	cd_tipo_acomodacao_w	:= 0;
		ds_log_w		:= 'Atualiza_Preco_Proc_Sus(Obter o tipo de acomodacao do convenio)';
end;
/* Define a faixa etaria para BPA */

if (ie_origem_proced_w = 3) then
	begin
	cd_faixa_etaria_w := define_faixa_etaria(cd_pessoa_fisica_w, cd_faixa_etaria_w);
	select 	count(*)
	into STRICT	qt_faixa_etaria_w
	from	sus_proc_faixa_etaria
	where	cd_procedimento 	= cd_procedimento_w
	and	ie_origem_proced	= ie_origem_proced_w;
	if	qt_faixa_etaria_w 	= 0 then
		begin
		/* alterado de null para 0, pois deve existir faixa-0 nao especificada no cadastro de

faixas */

		/* com nulo, gera inconsistencia 505 no fechamento da conta os27742 adelson 27122005 */

		cd_faixa_etaria_w	:= 0;
		end;
	else
		begin
		/* Obter a faixa etaria BPA */

		select	nr_sequencia
		into STRICT	nr_seq_faixa_w
		from	sus_proc_faixa_etaria
		where	cd_procedimento 	= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w
		and	cd_faixa_etaria		= cd_faixa_etaria_w;
		exception
     			when others then
			cd_faixa_etaria_w	:= null;
			ds_log_w		:= 'Atualiza_Preco_Proc_Sus(Obter a faixa etaria BPA)';
		end;
	end if;
	end;
end if;

begin
select	coalesce(max(cd_setor_atendimento),0)
into STRICT	cd_setor_atend_prescr_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_w;
exception
when others then
	cd_setor_atend_prescr_w := 0;
end;

/* Obter glosa do procedimento */

SELECT * FROM glosa_procedimento(cd_estabelecimento_w, nr_atendimento_w, dt_procedimento_w, cd_procedimento_w, ie_origem_proced_w, qt_procedimento_w, cd_tipo_acomodacao_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, null, null, cd_usuario_convenio_w, cd_plano_w, ie_clinica_w, cd_empresa_ref_w, cd_medico_executor_w, ie_sexo_w, cd_convenio_w, cd_categoria_w, ie_tipo_convenio_w, ie_classif_convenio_w, cd_autorizacao_w, nr_seq_autorizacao_w, qt_autorizada_w, cd_senha_w, nm_responsavel_w, ie_glosa_w, cd_situacao_glosa_w, nr_seq_regra_preco_w, pr_glosa_w, vl_glosa_w, cd_motivo_exc_conta_ww, ie_preco_informado_glosa_w, vl_negociado_glosa_w, ie_autor_particular_w, cd_convenio_glosa_ww, cd_categoria_glosa_ww, nr_seq_ajuste_proc_ww, null, null, null, null, null, null, nr_seq_cobertura_w, cd_setor_atend_prescr_w, nr_seq_classif_atend_w, null, cd_dependente_w, nr_seq_origem_w, nr_seq_classif_medico_w) INTO STRICT cd_convenio_w, cd_categoria_w, ie_tipo_convenio_w, ie_classif_convenio_w, cd_autorizacao_w, nr_seq_autorizacao_w, qt_autorizada_w, cd_senha_w, nm_responsavel_w, ie_glosa_w, cd_situacao_glosa_w, nr_seq_regra_preco_w, pr_glosa_w, vl_glosa_w, cd_motivo_exc_conta_ww, ie_preco_informado_glosa_w, vl_negociado_glosa_w, ie_autor_particular_w, cd_convenio_glosa_ww, cd_categoria_glosa_ww, nr_seq_ajuste_proc_ww;
	
/* Obter preco do Procedimento */

vl_adic_plant_w	:= 0;
begin
if (ie_origem_proced_w	= 2) then
	select	count(1)
	into STRICT	qt_conv_sus_fixo_w
	from	convenio_sus_fixo
	where	cd_convenio	= cd_convenio_w
	and	(ie_versao_aih IS NOT NULL AND ie_versao_aih::text <> '')  LIMIT 1;
elsif (ie_origem_proced_w	= 3) then
	select	count(1)
	into STRICT	qt_conv_sus_fixo_w
	from	convenio_sus_fixo
	where	cd_convenio	= cd_convenio_w
	and	(ie_versao_bpa IS NOT NULL AND ie_versao_bpa::text <> '')  LIMIT 1;
end if;

if (qt_conv_sus_fixo_w	> 0) then
	SELECT * FROM define_preco_proc_sus_fixo(dt_procedimento_w, cd_procedimento_w, ie_origem_proced_w, cd_convenio_w, qt_ato_medico_w, qt_ato_anestesista_w, vl_matmed_w, vl_diaria_w, vl_taxas_w, vl_medico_w, vl_sadt_w, vl_contraste_w, vl_gesso_w, vl_quimioterapia_w, vl_dialise_w, vl_tph_w, vl_filme_rx_w, vl_filme_ressonancia_w, vl_anestesia_w, vl_sadt_rx_w, vl_sadt_pc_w, vl_outros_w, vl_ato_medico_w, vl_ato_anestesista_w, vl_procedimento_w, cd_porte_w, dt_competencia_w, ie_versao_w, vl_adic_plant_w) INTO STRICT qt_ato_medico_w, qt_ato_anestesista_w, vl_matmed_w, vl_diaria_w, vl_taxas_w, vl_medico_w, vl_sadt_w, vl_contraste_w, vl_gesso_w, vl_quimioterapia_w, vl_dialise_w, vl_tph_w, vl_filme_rx_w, vl_filme_ressonancia_w, vl_anestesia_w, vl_sadt_rx_w, vl_sadt_pc_w, vl_outros_w, vl_ato_medico_w, vl_ato_anestesista_w, vl_procedimento_w, cd_porte_w, dt_competencia_w, ie_versao_w, vl_adic_plant_w;
else
	SELECT * FROM define_preco_proc_sus(dt_procedimento_w, cd_procedimento_w, ie_origem_proced_w, cd_estabelecimento_w, qt_ato_medico_w, qt_ato_anestesista_w, vl_matmed_w, vl_diaria_w, vl_taxas_w, vl_medico_w, vl_sadt_w, vl_contraste_w, vl_gesso_w, vl_quimioterapia_w, vl_dialise_w, vl_tph_w, vl_filme_rx_w, vl_filme_ressonancia_w, vl_anestesia_w, vl_sadt_rx_w, vl_sadt_pc_w, vl_outros_w, vl_ato_medico_w, vl_ato_anestesista_w, vl_procedimento_w, cd_porte_w, dt_competencia_w, ie_versao_w, vl_adic_plant_w) INTO STRICT qt_ato_medico_w, qt_ato_anestesista_w, vl_matmed_w, vl_diaria_w, vl_taxas_w, vl_medico_w, vl_sadt_w, vl_contraste_w, vl_gesso_w, vl_quimioterapia_w, vl_dialise_w, vl_tph_w, vl_filme_rx_w, vl_filme_ressonancia_w, vl_anestesia_w, vl_sadt_rx_w, vl_sadt_pc_w, vl_outros_w, vl_ato_medico_w, vl_ato_anestesista_w, vl_procedimento_w, cd_porte_w, dt_competencia_w, ie_versao_w, vl_adic_plant_w;
end if;


/* Marcus/Bola 24/11/2005 os 25548 Santa Casa PG */

if (cd_medico_executor_w IS NOT NULL AND cd_medico_executor_w::text <> '') and (vl_medico_w = 0) and (vl_matmed_w > 0) and (ie_origem_proced_w = 2) and /* Felipe 21/09/2007 - OS69239*/
	(sus_obter_se_calc_pto_proc(cd_procedimento_w) = 'N') then
	vl_medico_w		:= vl_matmed_w;
	vl_matmed_w		:= 0;
end if;
if (ie_intercorrencia_w = 'S') then
	vl_medico_w		:= 0;
	vl_matmed_w		:= 0;
	vl_sadt_w		:= 0;
	vl_anestesia_w	:= 0;
	vl_procedimento_w	:= 0;
end if;

if (ie_classif_urg_emerg_w = '0' or
	 ie_gera_diaria_uti_w = 'S') 		and (cd_procedimento_w = 99080991) 	and (ie_origem_proced_w = 2) 		then
	SELECT * FROM obter_valor_uti_sus(ie_versao_w, qt_procedimento_w, vl_matmed_w, vl_sp_w, vl_sadt_w) INTO STRICT vl_matmed_w, vl_sp_w, vl_sadt_w;
end if;
end;
/* calculo adicional plantonista	*/

if (ie_origem_proced_w	= 3)		and (vl_adic_plant_w		> 0)		and (ie_tipo_atend_bpa_w in (14,15))	then
	begin
	ie_plantonista_w	:= 'N';
	begin
	select	a.ie_plantonista
	into STRICT		ie_plantonista_w
	from		medico_convenio a
	where		a.cd_convenio		= cd_convenio_w
	and		a.cd_pessoa_fisica	= cd_medico_executor_w;
	exception
     			when others then
			ie_plantonista_w	:= 'N';
	end;
	if (ie_plantonista_w	= 'S') then
		vl_adic_plant_w	:= (vl_adic_plant_w * qt_procedimento_w);
	else
		vl_adic_plant_w	:= 0;
	end if;
	end;
else
	vl_adic_plant_w	:= 0;
end if;
if (coalesce(qt_procedimento_w::text, '') = '') or (qt_procedimento_w < 0)     then
     qt_procedimento_w := 0;
end if;
qt_ato_medico_w		:= (qt_ato_medico_w 		* qt_procedimento_w);
qt_ato_anestesista_w	:= (qt_ato_anestesista_w 	* qt_procedimento_w);
if (cd_procedimento_w in (76400077,76400271,76400085)) then
	qt_procedimento_w	:= 1;
end if;

/*  Procedimento autorizado, deve ter no maximo 1 na quantidade
P/hosp. publico, pode solicitar qtd maior de 1 para determinados codigos de psiquiatria e cronicos
Elemar - 12/12/2005 - OS21836 Tirei o codigo 47810017 da listagem abaixo
Adelson - 12/02/2006 - OS29343/OS21836 Liberei o codigo 47810017 e demais para todos hospitais
	if	(ie_altera_tipo_serv_w = 'S') and ESSA LINHA esta COMENTADA FAZ TEMPO!
	if	(cd_procedimento_w in

(63001101,85500739,85500747,85500755,85500763,85500771,85500780,85500798,


85300713,85300721,85300730,85300748,85300756,85300764,85300772,99080010,99080011,
				89500083,89500091,89300106,89300092,98300016,98500015, 85500836,

85300829,47810017,
				63001594, 63001209)) then  Elemar - 24/04/2006 - OS29453 - Acrescentei os

codigos 63001594 e 63001209*/


/* Felipe - 29/06/2006 - Criei o cadastro 6 na pasta de Regras AIH, substituindo o tratamento dos codigos acima*/

if (nr_laudo_sus_w > 0) then
	if (aih_validar_regra(6,cd_procedimento_w)	> 0) then
		qt_procedimento_w	:= qt_procedimento_w;
	else
		qt_procedimento_w	:= 1;
	end if;
end if;

if (cd_procedimento_w = 95001018) then
	if (qt_nasc_sai_alta_w = 0) then
		qt_procedimento_w	:= 1;
	elsif (qt_nasc_sai_alta_w > 2) then
		qt_procedimento_w	:= 2;
	else
		qt_procedimento_w	:= qt_nasc_sai_alta_w;
	end if;
end if;

vl_matmed_w		:= (vl_matmed_w			* qt_procedimento_w);
vl_diaria_w		:= (vl_diaria_w			* qt_procedimento_w);
vl_taxas_w		:= (vl_taxas_w			* qt_procedimento_w);
vl_medico_w		:= (vl_medico_w			* qt_procedimento_w);
vl_sadt_w		:= (vl_sadt_w 			* qt_procedimento_w);
vl_tph_w		:= (vl_tph_w			* qt_procedimento_w);
vl_anestesia_w		:= (vl_anestesia_w		* qt_procedimento_w);
vl_contraste_w		:= (vl_contraste_w		* qt_procedimento_w);
vl_filme_rx_w		:= (vl_filme_rx_w		* qt_procedimento_w);
vl_gesso_w		:= (vl_gesso_w			* qt_procedimento_w);
vl_quimioterapia_w	:= (vl_quimioterapia_w		* qt_procedimento_w);
vl_dialise_w		:= (vl_dialise_w		* qt_procedimento_w);
vl_sadt_rx_w		:= (vl_sadt_rx_w		* qt_procedimento_w);
vl_sadt_pc_w		:= (vl_sadt_pc_w		* qt_procedimento_w);
vl_filme_ressonancia_w	:= (vl_filme_ressonancia_w	* qt_procedimento_w);
vl_outros_w		:= (vl_outros_w			* qt_procedimento_w);
vl_procedimento_w	:= (vl_procedimento_w		* qt_procedimento_w);

/* Felipe - 25/09/2007 - OS69497 - Manual do SUS 2006 pg 96 */

if (ie_tipo_ato_sus_w = 42) and (cd_procedimento_w in (99800195, 99800276, 99800314, 99800373)) then
	vl_medico_w	:= (vl_medico_w * (1 + (50/100)));
end if;


/*  Calcular Adicional de Urgencia e Emergencia para AIH */

if (pr_adic_urg_emerg_w > 0) and (ie_origem_proced_w = 2) 	then
	begin
	vl_matmed_w		:= (vl_matmed_w 		* (1 + (pr_adic_urg_emerg_w/100)));
	vl_diaria_w		:= (vl_diaria_w 		* (1 + (pr_adic_urg_emerg_w/100)));
	vl_medico_w		:= (vl_medico_w 		* (1 + (pr_adic_urg_emerg_w/100)));
	vl_sadt_w		:= (vl_sadt_w 		* (1 + (pr_adic_urg_emerg_w/100)));
	vl_anestesia_w	:= (vl_anestesia_w	* (1 + (pr_adic_urg_emerg_w/100)));
	vl_procedimento_w	:= (vl_procedimento_w	* (1 + (pr_adic_urg_emerg_w/100)));
	end;
end if;
if (tx_procedimento_w <> 100) 	and (ie_origem_proced_w = 3) 	then
	begin
	qt_ato_medico_w		:= trunc((tx_procedimento_w * qt_ato_medico_w)/100);
	qt_ato_anestesista_w	:= trunc((tx_procedimento_w * qt_ato_anestesista_w)/100);
	vl_medico_w			:= ((tx_procedimento_w * vl_medico_w)/100);
	vl_diaria_w			:= ((tx_procedimento_w * vl_diaria_w)/100);
	vl_taxas_w			:= ((tx_procedimento_w * vl_taxas_w)/100);
	vl_sadt_w			:= ((tx_procedimento_w * vl_sadt_w)/100);
	vl_tph_w			:= ((tx_procedimento_w * vl_tph_w)/100);
	vl_anestesia_w		:= ((tx_procedimento_w * vl_anestesia_w)/100);
	vl_contraste_w		:= ((tx_procedimento_w * vl_contraste_w)/100);
	vl_filme_rx_w		:= ((tx_procedimento_w * vl_filme_rx_w)/100);
	vl_gesso_w			:= ((tx_procedimento_w * vl_gesso_w)/100);
	vl_quimioterapia_w	:= ((tx_procedimento_w * vl_quimioterapia_w)/100);
	vl_dialise_w		:= ((tx_procedimento_w * vl_dialise_w)/100);
	vl_sadt_rx_w		:= ((tx_procedimento_w * vl_sadt_rx_w)/100);
	vl_sadt_pc_w		:= ((tx_procedimento_w * vl_sadt_pc_w)/100);
	vl_filme_ressonancia_w	:= ((tx_procedimento_w * vl_filme_ressonancia_w)/100);
	vl_outros_w			:= ((tx_procedimento_w * vl_outros_w)/100);
	vl_procedimento_w		:= ((tx_procedimento_w * vl_procedimento_w)/100);
	vl_matmed_w			:= ((tx_procedimento_w * vl_matmed_w)/100);
	end;
end if;
if (tx_procedimento_w <> 100) 	and (ie_origem_proced_w = 2) 	then
	vl_matmed_w			:= ((tx_procedimento_w * vl_matmed_w)/100);
end if;
if (ie_origem_proced_w = 2) 		and (ie_tipo_laudo_sus_w = 99) 		and (nr_laudo_sus_w = 0) 			and (ie_tipo_servico_sus_w in (4,7,6))	and (aih_validar_regra(5,cd_procedimento_w) <= 0) then
	begin
	vl_matmed_w			:= 0;
	vl_sadt_w			:= 0;
	vl_medico_w			:= 0;
	end;
end if;

/* */

if (ie_origem_proced_w = 2) and (aih_validar_regra(3,cd_procedimento_w) > 0) then
	select	coalesce(sum(qt_procedimento),0)
	into STRICT	qt_consulta_w
	from procedimento_paciente
	where nr_interno_conta	= nr_interno_conta_w
	  and cd_procedimento	= 25001019
	  and ie_origem_proced	= 2
	  and coalesce(cd_motivo_exc_conta::text, '') = '';

	if (qt_consulta_w > 0) then
		vl_matmed_w	:= vl_matmed_w * qt_consulta_w;
		vl_medico_w	:= vl_medico_w * qt_consulta_w;
		vl_sadt_w	:= vl_sadt_w   * qt_consulta_w;
	end if;
end if;

/* Felipe - 19/05/2007 - OS 56906
Existe alguns procedimentos que o valor do mesmo ja esta incluso em um outro codigo, por exemplo, o valor do "RX de punho" ja esta incluso
no "tratamento de punho", assim o RX nao pode ter valor e nem ser exportado para o SUS/BPA */
if	((ie_origem_proced_w in (3,7)) and (ie_tipo_atendimento_w <> 1)) then
	select	count(1)
	into STRICT	qt_registros_w
	from	sus_bpa_proc_compativel	b,
		procedimento_paciente	a
	where	b.cd_proc_faturado	= cd_procedimento_w
	and	b.ie_origem_faturado	in (3,7)
	and	a.cd_procedimento	= b.cd_proc_compativel
	and	a.ie_origem_proced	= b.ie_origem_compativel
	and	a.nr_interno_conta	= nr_interno_conta_w
	and	a.nr_atendimento	= nr_atendimento_w  LIMIT 1;

	if (qt_registros_w	> 0) then
		vl_procedimento_w	:= 0;
		vl_custo_operacional_w	:= 0;
		vl_anestesista_w	:= 0;
		vl_medico_w		:= 0;
		vl_auxiliares_w		:= 0;
		vl_materiais_w		:= 0;
	end if;
end if;

cd_proc_unif_w	:= sus_obter_procdepara(cd_procedimento_w, ie_origem_proced_w);
if (cd_proc_unif_w	> 0) then
	/* Obter os valores do procedimento unificado */

	SELECT * FROM sus_define_preco_proced(
		dt_procedimento_w, cd_proc_unif_w, 7, cd_estabelecimento_w, ie_tipo_atendimento_w, vl_sa_unif_w, vl_sh_unif_w, vl_sp_unif_w, vl_sadt_unif_w, vl_total_hosp_unif_w, vl_total_amb_unif_w, qt_pontos_ato_unif_w, vl_aux_w, vl_aux_w, vl_aux_w, dt_comp_unif_w) INTO STRICT vl_sa_unif_w, vl_sh_unif_w, vl_sp_unif_w, vl_sadt_unif_w, vl_total_hosp_unif_w, vl_total_amb_unif_w, qt_pontos_ato_unif_w, vl_aux_w, vl_aux_w, vl_aux_w, dt_comp_unif_w;
end if;

if (ie_tipo_ato_sus_w	= 57) then
	vl_matmed_w	:= vl_sadt_w;
	vl_sadt_w	:= 0;
end if;

/* Atualiza sus_valor_proc_paciente */

begin
	insert into sus_valor_proc_paciente(nr_sequencia, dt_atualizacao, nm_usuario,
		dt_competencia, qt_ato_medico, qt_ato_anestesista,
 		vl_matmed, vl_diaria, vl_taxas, vl_medico, vl_sadt,
		vl_contraste, vl_gesso, vl_quimioterapia, vl_dialise,
		vl_tph, vl_filme_rx, vl_filme_ressonancia, vl_anestesia,
		vl_sadt_rx, vl_sadt_pc, vl_outros, vl_ato_medico, vl_ato_anestesista,
		cd_faixa_etaria,ie_tipo_atend_bpa,ie_grupo_atend_bpa,
		vl_ato_sadt,vl_ponto_sp,vl_ponto_sadt,cd_porte_anestesico, ie_versao,
		vl_sp_unif, vl_sh_unif, vl_sadt_unif, vl_amb_unif, cd_proc_unif)
	values (nr_sequencia_p, dt_atualizacao_w, nm_usuario_p,
		dt_competencia_w, qt_ato_medico_w, qt_ato_anestesista_w,
		vl_matmed_w, vl_diaria_w, vl_taxas_w, vl_medico_w, vl_sadt_w,
		vl_contraste_w, vl_gesso_w, vl_quimioterapia_w, vl_dialise_w,
		vl_tph_w, vl_filme_rx_w, vl_filme_ressonancia_w, vl_anestesia_w,
		vl_sadt_rx_w, vl_sadt_pc_w, vl_outros_w, vl_ato_medico_w, vl_ato_anestesista_w,
		cd_faixa_etaria_w,null,null,0,0,0,cd_porte_w, ie_versao_w,
		vl_sp_unif_w, vl_sh_unif_w, vl_sadt_unif_w, vl_total_amb_unif_w, cd_proc_unif_w);
	exception
		when others then
		begin
			update 	sus_valor_proc_paciente
		 	set		dt_atualizacao		= dt_atualizacao_w,
					nm_usuario		= nm_usuario_p,
					dt_competencia		= dt_competencia_w,
					qt_ato_medico		= qt_ato_medico_w,
					qt_ato_anestesista	= qt_ato_anestesista_w,
					vl_matmed		= vl_matmed_w,
					vl_diaria		= vl_diaria_w,
					vl_taxas		= vl_taxas_w,
					vl_medico		= vl_medico_w,
					vl_sadt			= vl_sadt_w,
					vl_contraste		= vl_contraste_w,
					vl_gesso		= vl_gesso_w,
					vl_quimioterapia	= vl_quimioterapia_w,
					vl_dialise		= vl_dialise_w,
					vl_tph			= vl_tph_w,
					vl_filme_rx		= vl_filme_rx_w,
					vl_filme_ressonancia	= vl_filme_ressonancia_w,
					vl_anestesia		= vl_anestesia_w,
					vl_sadt_rx		= vl_sadt_rx_w,
					vl_sadt_pc		= vl_sadt_pc_w,
					vl_outros		= vl_outros_w,
					vl_ato_medico		= vl_ato_medico_w,
					vl_ato_anestesista	= vl_ato_anestesista_w,
					cd_faixa_etaria		= cd_faixa_etaria_w,
					cd_porte_anestesico	= cd_porte_w,
					ie_versao		= ie_versao_w,
					vl_sp_unif		= vl_sp_unif_w,
					vl_sh_unif		= vl_sh_unif_w,
					vl_sadt_unif		= vl_sadt_unif_w,
					vl_amb_unif		= vl_total_amb_unif_w,
					cd_proc_unif		= cd_proc_unif_w
 			where		nr_sequencia  		= nr_sequencia_p;
      			exception
           				when others then
			/* Felipe Martini 24/10/2007 Inicio */

			select	count(*)
			into STRICT	qt_faixa_etaria_ww
			from	sus_faixa_etaria_bpa
			where	cd_faixa_etaria		= cd_faixa_etaria_w;

			if (qt_faixa_etaria_ww = 0 and
				(cd_faixa_etaria_w IS NOT NULL AND cd_faixa_etaria_w::text <> '')) then
				-- Na funcao Execucao de Procedimentos BPA, nao ha cadastros para a faixa etaria: #@QT_FAIXA_ETARIA#@
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(186303,'QT_FAIXA_ETARIA=' || qt_faixa_etaria_w);
			end if;

			select	sum(qt_procedimento)
			into STRICT	qt_procedimento_ww
			from	procedimento_paciente
			where	nr_sequencia	= nr_sequencia_p;

			if (qt_procedimento_ww > 100) then
				-- Atendimento #@NR_ATENDIMENTO#@ Conta #@NR_INTERNO_CONTA#@ Nr Seq. #@NR_SEQUENCIA#@. esta com a quantidade #@QT_PROCEDIMENTO#@! Favor verificar!
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(186304,'NR_ATENDIMENTO=' || nr_atendimento_w || ';NR_INTERNO_CONTA=' || nr_interno_conta_w ||
										';NR_SEQUENCIA=' || nr_sequencia_p || ';QT_PROCEDIMENTO=' || qt_procedimento_ww);
			else
				-- Erro ao gravar sus_valor_proc_paciente! #@DS_ERRO#@
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(186305,'DS_ERRO=' || sqlerrm);
			end if;

			/* Felipe Martini 24/10/2007 Fim */

      	end;
end;
/* Obter contas do procedimento */

begin

	begin
	select	ie_complexidade,
		ie_tipo_financiamento
	into STRICT	ie_complexidade_sus_w,
		ie_tipo_financ_sus_w
	from	sus_procedimento
	where	cd_procedimento		= cd_procedimento_w
	and	ie_origem_proced	= ie_origem_proced_w  LIMIT 1;
	exception when others then
		ie_complexidade_sus_w	:= null;
		ie_tipo_financ_sus_w	:= null;
	end;
SELECT * FROM define_conta_procedimento(
	cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_w, 1, ie_clinica_w, cd_setor_atendimento_w, ie_classif_convenio_w, ie_tipo_atendimento_w, ie_tipo_convenio_aux_w, cd_convenio_w, cd_categoria_w, dt_entrada_w, cd_conta_contabil_w, cd_centro_custo_w, cd_plano_w, 'N', ie_complexidade_sus_w, ie_tipo_financ_sus_w, null, null, null, null, null, nr_seq_proc_interno_w) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
end;

select	max(coalesce(ie_inc_proc_conta,'N'))
into STRICT	ie_inc_proc_conta_w
from 	sus_parametros_aih
where	cd_estabelecimento = cd_estabelecimento_w;

select	max(coalesce(ie_inc_proc_conta_data,'N'))
into STRICT	ie_inc_proc_conta_data_w
from 	sus_parametros_apac
where	cd_estabelecimento = cd_estabelecimento_w;

/*      Identificar a conta paciente que o procedimento deve ser incluido */

if (ie_inc_proc_conta_w = 'S') and (ie_tipo_atendimento_w = 1) and (ie_status_acerto_w = 1) then
	begin
		begin
		select	max(nr_interno_conta)
		into STRICT	nr_interno_conta_w
		from	conta_paciente
		where	nr_atendimento = nr_atendimento_w
		and	dt_procedimento_w between dt_periodo_inicial and dt_periodo_final
		and	ie_status_acerto = 1
		and	coalesce(ie_cancelamento::text, '') = '';
		exception
			when others then
			nr_interno_conta_w := null;
			end;
	end;
elsif (ie_inc_proc_conta_data_w = 'S') and (sus_obter_se_proc_apac(nr_sequencia_p,cd_procedimento_w) = 'S') and (ie_status_acerto_w = 1) then
	begin
		begin
		select	max(nr_interno_conta)
		into STRICT	nr_interno_conta_w
		from	conta_paciente
		where	nr_atendimento = nr_atendimento_w
		and	dt_procedimento_w between dt_periodo_inicial and dt_periodo_final
		and	ie_status_acerto = 1
		and	coalesce(ie_cancelamento::text, '') = '';
		exception
			when others then
			nr_interno_conta_w := null;
			end;
	end;
end if;

if (coalesce(nr_interno_conta_w::text, '') = '') or (cd_convenio_w	<> cd_convenio_orig_w) then
	begin
	SELECT * FROM obter_conta_paciente(
			cd_estabelecimento_w, nr_atendimento_w, cd_convenio_w, cd_categoria_w, nm_usuario_p, dt_procedimento_w, dt_entrada_w, dt_alta_w, nr_doc_convenio_w, cd_setor_atendimento_w, null, dt_acerto_conta_w, nr_interno_conta_w, cd_convenio_calculo_w, cd_categoria_calculo_w) INTO STRICT dt_acerto_conta_w, nr_interno_conta_w, cd_convenio_calculo_w, cd_categoria_calculo_w;
	end;
end if;

begin
select	cd_convenio_parametro,
	cd_categoria_parametro
into STRICT	cd_convenio_parametro_w,
	cd_categoria_parametro_w
from	conta_paciente
where	nr_interno_conta	= nr_interno_conta_w;
exception
	when others then
		cd_convenio_parametro_w		:= null;
		cd_categoria_parametro_w	:= null;
end;


/* Obter regra dos honorarios */

select	count(1)
into STRICT	ie_regra_hon_w
from	convenio b,
	regra_honorario_criterio a
where 	a.cd_convenio = b.cd_convenio
and 	b.ie_tipo_convenio in (3,10)  LIMIT 1;

ie_pacote_w:= obter_se_pacote(nr_sequencia_p,nr_seq_proc_pacote_w);

if (ie_regra_hon_w > 0) and (ie_conv_calculo_honorario_w <> 'C') then
	SELECT * FROM obter_regra_honorario(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, ie_origem_proced_w, dt_procedimento_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, ie_tipo_servico_sus_w, ie_tipo_ato_sus_w, cd_medico_executor_w, cd_cgc_prestador_w, ie_pacote_w, ie_carater_inter_sus_w, cd_plano_w, cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w, null, null, null, ie_clinica_w, cd_empresa_ref_w, null, cd_procedencia_w, ie_doc_executor_w, cd_cbo_w, nr_seq_proc_interno_w, nr_seq_exame_w) INTO STRICT cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w;
else
	SELECT * FROM obter_regra_honorario(cd_estabelecimento_w, cd_convenio_parametro_w, cd_categoria_parametro_w, cd_procedimento_w, ie_origem_proced_w, dt_procedimento_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, ie_tipo_servico_sus_w, ie_tipo_ato_sus_w, cd_medico_executor_w, cd_cgc_prestador_w, ie_pacote_w, ie_carater_inter_sus_w, cd_plano_w, cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w, null, null, null, ie_clinica_w, cd_empresa_ref_w, null, cd_procedencia_w, ie_doc_executor_w, cd_cbo_w, nr_seq_proc_interno_w, nr_seq_exame_w) INTO STRICT cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w;
end if;

/*Felipe - OS 64980, 21/08/2007, os procedimentos de acerto devem permanecer com o Valor Informado checado*/

select	coalesce(max(nr_seq_proc_acerto),0)
into STRICT	nr_seq_proc_acerto_w
from	procedimento_paciente
where	nr_sequencia	= nr_sequencia_p;

if (ie_origem_proced_w	= 2) and (nr_seq_proc_acerto_w	= 0) then
	ie_valor_informado_w 		:= 'N';
end if;
if (ie_valor_informado_w = 'S') then
	vl_custo_operacional_w	:= vl_custo_oper_orig_w;
	vl_anestesista_w		:= vl_anestesista_orig_w;
	vl_medico_w			:= vl_medico_orig_w;
	vl_materiais_w		:= vl_materiais_orig_w;
	vl_auxiliares_w		:= vl_auxiliares_orig_w;
	vl_procedimento_w		:= vl_proc_orig_w;
	vl_adic_plant_w		:= vl_adic_plant_orig_w;
	cd_regra_honorario_w	:= cd_regra_honorario_orig_w;
else
	if (ie_origem_proced_w = 3) then
		begin
		if (coalesce(cd_medico_executor_w::text, '') = '') then
			vl_medico_w	:= 0;
		end if;
		vl_anestesista_w	:= 0;
		select 	count(*),
			max(nr_seq_partic)
		into STRICT	qt_anestesista_w,
			nr_seq_partic_w
		from 	funcao_medico b,
			procedimento_participante a
		where	a.nr_sequencia		= nr_sequencia_p
		  and	a.ie_funcao		= b.cd_funcao
		  and	b.ie_anestesista	= 'S';
		if (qt_anestesista_w = 1) then
			begin
			update	procedimento_participante
			set 	vl_participante		= vl_anestesia_w,
				vl_conta		= vl_anestesia_w,
				ie_responsavel_credito	= cd_regra_honorario_w
			where	nr_sequencia		= nr_sequencia_p
			  and	nr_seq_partic		= nr_seq_partic_w;
			end;
		else
			vl_anestesia_w		:= 0;
		end if;
		vl_materiais_w			:= 0;
		vl_auxiliares_w			:= 0;
		vl_custo_operacional_w		:= vl_procedimento_w - (vl_medico_w + vl_anestesia_w);
		end;
	end if;

	if (ie_origem_proced_w = 2) then
		vl_custo_operacional_w	:= vl_sadt_w;
		vl_anestesista_w		:= 0;
		vl_materiais_w		:= vl_matmed_w;
		vl_auxiliares_w		:= 0;
		vl_procedimento_w		:= vl_matmed_w + vl_sadt_w;
	end if;
end if;
if (vl_medico_w < 0 ) and (ie_valor_informado_w	= 'N') then
	vl_medico_w := 0;
end if;
if (vl_anestesista_w < 0 ) and (ie_valor_informado_w	= 'N') then
	vl_anestesista_w := 0;
end if;
if (vl_materiais_w < 0 ) and (ie_valor_informado_w	= 'N') then
	vl_materiais_w := 0;
end if;
if (vl_custo_operacional_w < 0 ) and (ie_valor_informado_w	= 'N') then
	vl_custo_operacional_w := 0;
end if;
if (vl_procedimento_w < 0 ) and (ie_valor_informado_w	= 'N') then
	vl_procedimento_w := 0;
end if;
if (vl_auxiliares_w < 0 ) and (ie_valor_informado_w	= 'N') then
	vl_auxiliares_w := 0;
end if;

if (ie_regra_hon_w		> 0) then
	if (ie_calcula_honorario_w = 'N')	then
		vl_medico_w 			:= 0;
		vl_procedimento_w		:= 0;
		vl_custo_operacional_w		:= 0;
		vl_anestesista_w		:= 0;
		vl_auxiliares_w			:= 0;
		vl_materiais_w			:= 0;
	end if;

	vl_medico_conta_w 			:= 0;
	if (ie_conta_honorario_w 		= 'S') 	then
		vl_medico_conta_w 		:= vl_medico_w;
	end if;
	if (ie_conta_honorario_w 		= 'T') 	then
		vl_procedimento_w		:= 0;
	elsif (vl_custo_operacional_w  > 0)	or (vl_anestesista_w > 0) 		or (vl_medico_w > 0)		or (vl_auxiliares_w > 0) 		or (vl_materiais_w > 0) 		or (vl_anestesia_w > 0) 		then
		vl_procedimento_w 		:= (vl_custo_operacional_w + vl_anestesista_w +
                	       			vl_medico_conta_w + vl_materiais_w + vl_auxiliares_w + vl_anestesia_w);
	end if;
	if (cd_cgc_honorario_w IS NOT NULL AND cd_cgc_honorario_w::text <> '') then
		cd_cgc_prestador_w		:= cd_cgc_honorario_w;
	end if;
end if;

/* Luiz F.M. - OS64743: Tratar exclusao do servico da conta */

if (ie_glosa_w = 'E') then
	cd_motivo_exc_conta_w	:= cd_motivo_exc_conta_ww;
end if;

/*      atualizar o procedimento do paciente com os valores */

begin
update 	procedimento_paciente
set 	vl_procedimento      	= vl_procedimento_w,
    	vl_custo_operacional 	= vl_custo_operacional_w,
    	vl_anestesista       	= vl_anestesista_w,
    	vl_medico            	= vl_medico_w,
    	vl_auxiliares        	= vl_auxiliares_w,
    	vl_materiais         	= vl_materiais_w,
    	dt_conta             	= dt_conta_w,
     	dt_acerto_conta	 	= dt_acerto_conta_w,
     	cd_conta_contabil    	= cd_conta_contabil_w,
	cd_centro_custo_receita	= CASE WHEN cd_centro_custo_w=0 THEN null  ELSE cd_centro_custo_w END ,
	cd_convenio			= cd_convenio_w,
	cd_categoria		= cd_categoria_w,
	cd_situacao_glosa		= 0,
	nr_lote_contabil		= nr_lote_contabil_w,
	ie_valor_informado	= ie_valor_informado_w,
	cd_procedimento_convenio= cd_procedimento_w,
	nr_interno_conta		= nr_interno_conta_w,
	vl_adic_plant		= vl_adic_plant_w,
	ie_responsavel_credito	= cd_regra_honorario_w,
	cd_motivo_exc_conta	= cd_motivo_exc_conta_w,
	cd_sequencia_parametro = philips_contabil_pck.get_parametro_conta_contabil
where 	nr_sequencia     	= nr_sequencia_p;
end;
open c01;
loop
fetch c01 into
	nr_seq_partic_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	cd_regra_honor_part_w	:= null;
	
	SELECT * FROM define_valor_participante(nr_sequencia_p, nr_seq_partic_w, nm_usuario_p, 0, vl_medico_w, vl_participante_w, qt_ponto_sus_w, ie_emite_conta_part_w, cd_regra_honor_part_w, vl_original_part_w, vl_conta_partic_w, pr_participante_w, cd_cgc_partic_w, null, null, nr_seq_crit_honorario_w, null) INTO STRICT vl_participante_w, qt_ponto_sus_w, ie_emite_conta_part_w, cd_regra_honor_part_w, vl_original_part_w, vl_conta_partic_w, pr_participante_w, cd_cgc_partic_w, nr_seq_crit_honorario_w;
	update procedimento_participante
	set	 vl_participante 		= 0,
		 vl_conta			= 0,
		 ie_emite_conta		= ie_emite_conta_part_w,
		 ie_responsavel_credito	= cd_regra_honor_part_w,
		 qt_ponto_sus		= qt_ponto_sus_w,
		 vl_ponto_sus		= 0,
		 nm_usuario			= nm_usuario_p,
		 cd_cgc			= cd_cgc_partic_w,
		 dt_atualizacao		= dt_atualizacao_w,
		 pr_procedimento		= pr_participante_w,
		 nr_seq_crit_honorario  =  nr_seq_crit_honorario_w
	where	 nr_sequencia		= nr_sequencia_p
	and	 nr_seq_partic		= nr_seq_partic_w;
	end;
end loop;
close c01;
if (ie_origem_proced_w = 2) 		and (cd_procedimento_w > 23999999) 	and (ie_tipo_servico_sus_w in (4,7,6)) 	then
	if (ie_tipo_ato_sus_w = 6) then
		update sus_valor_proc_paciente
		set	qt_ato_medico		= 0
		where		nr_sequencia  	= nr_sequencia_p;
	else
		update sus_valor_proc_paciente
	 	set	qt_ato_anestesista	= 0
		where	nr_sequencia  		= nr_sequencia_p;
	end if;
end if;

/* Teste que verifica se existe alguma regra de SUS gerar procedimento adicional */

select	count(1)
into STRICT	qt_regra_proc_adic_w
from	regra_ajuste_proc
where	ie_glosa = 'S'  LIMIT 1;
/*Se este parametro de faturamento estiver marcado, so gerar o procedimento se ouver convenio e categoria de glosa na Entrada Unica*/

if (coalesce(ie_gerar_proc_adic_sus_w,'N') = 'S') then
	begin

	begin
	select	count(1)
	into STRICT	qt_regra_proc_adic_w
	from	atend_categoria_convenio
	where	nr_atendimento = nr_atendimento_w
	and	(cd_convenio_glosa IS NOT NULL AND cd_convenio_glosa::text <> '')
	and	(cd_categoria_glosa IS NOT NULL AND cd_categoria_glosa::text <> '')  LIMIT 1;
	exception
	when others then
		qt_regra_proc_adic_w := qt_regra_proc_adic_w;
	end;

	end;
end if;

if (qt_regra_proc_adic_w	> 0) then
	CALL sus_gerar_procconta_extra(
			cd_estabelecimento_w,
			cd_convenio_w,
			cd_categoria_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			cd_pessoa_fisica_w,
			ie_carater_inter_sus_w,
			nr_interno_conta_w,
			cd_setor_atendimento_w,
			nr_sequencia_p,
			dt_procedimento_w,
			nm_usuario_p);
end if;

<<final>>

/* Incluido o select abaixo para ter algo apos o goto (precisa ter alguma linha de programa apos ele) */

select	count(1)
into STRICT	qt_registros_w
from	procedimento_paciente
where	nr_sequencia	= nr_sequencia_p  LIMIT 1;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_preco_proc_sus ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

