-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_pa_discharges ( cd_estabelecimento_p bigint, nm_usuario_p text ) AS $body$
DECLARE


nr_seq_indicator_w           pfcs_panel.nr_seq_indicator%TYPE := 139;
pfcs_panel_detail_seq_w      pfcs_panel_detail.nr_sequencia%type;
pfcs_panel_seq_w             pfcs_panel.nr_sequencia%TYPE;
qt_time_rule_p               pfcs_rule_ed_discharges.qt_time%TYPE := 0;

qt_discharges_w             numeric(20) := 0;
qt_delayed_discharges_w     numeric(20) := 0;
rule_pa_discharges_time_w   numeric(20) := 120; --default time
c01 CURSOR FOR
SELECT pfcs_get_human_name(pat.nr_sequencia, 'Patient') nm_patient,
    pfcs_get_patient_gender(pat.gender) gender,
    to_char(round(months_between(coalesce(pat.deceased_date, clock_timestamp()), pat.birthdate))) qt_patient_age,
    pat.patient_id  id_patient,
    CASE WHEN coalesce(sec.ds_setor_atendimento::text, '') = '' THEN  uni.cd_unidade_basica || '-' || uni.cd_unidade_compl  ELSE sec.ds_setor_atendimento || '-' || uni.cd_unidade_basica || '-' || uni.cd_unidade_compl END  ds_location,
    enc.cd_discharge_disposition ds_discharge_disposition,
    pfcs_get_code_status(pat.nr_sequencia, enc.nr_sequencia, 'S') code_status,
	coalesce(pfcs_get_checklist(enc.nr_sequencia, pat.nr_sequencia, 'MPL'),'') ds_care_status,
	coalesce(pfcs_get_checklist(enc.nr_sequencia, pat.nr_sequencia, 'TOOLTIP'),'') ds_checklist,
    pfcs_get_frequent_flyer(enc.nr_sequencia) flag_recur_pat,
    pfcs_get_lace_plus(enc.nr_sequencia, enc.nr_seq_organization) readmission_risk,
    pfcs_get_recurring_patient(pat.nr_sequencia) ds_recur_pat,
    enc.id_encounter nr_encounter_varchar,
    pat.birthdate,
    pfcs_get_human_name(pfcs_get_practitioner_seq(enc.nr_sequencia), 'Practitioner') nm_practioner,
    enc.period_start,
    ((clock_timestamp() - coalesce(ser.dt_authored_on, enc.period_start)) * 24 * 60) total_time,
    enc.cd_courtesy,
    pfcs_get_patient_diagnosis(enc.nr_sequencia) diagnosis,
    ser.dt_authored_on dt_solicitacao_alta,
    pfcs_get_edi_score(enc.nr_sequencia) nr_edi_score,
    sec.ds_setor_atendimento ds_department,
    substr(obter_valor_dominio(82, uni.ie_status_unidade), 1, 255) ds_status,
    uni.ie_status_unidade cd_status,
    uni.ie_temporario ie_temporary,
	pfcs_obs_contributor_pck.get_laceplus(enc.nr_sequencia) ds_readm_risk_contrb,
	pfcs_obs_contributor_pck.get_freqflyer_visits(enc.nr_sequencia) ds_recur_pat_adm_data,
	pfcs_obs_contributor_pck.get_freqflyer_comorbidities(enc.nr_sequencia) ds_recur_pat_comorbd,
	pfcs_obs_contributor_pck.get_freqflyer_visit_reason(enc.nr_sequencia) ds_recur_pat_reasons,
	pfcs_obs_contributor_pck.get_edi_vital_warnings(enc.nr_sequencia) ds_edi_vitals_warn,
	pfcs_obs_contributor_pck.get_edi_contributors(enc.nr_sequencia) ds_edi_contrb,
	enc.dt_expected_discharge dt_exp_discharge
FROM pfcs_service_request   ser,
    pfcs_encounter  enc,
    pfcs_patient    pat,
    unidade_atendimento uni,
    setor_atendimento   sec
WHERE upper(ser.cd_service) = 'E0405'
AND upper(ser.si_status) = 'ACTIVE'
AND upper(ser.si_intent) = 'PLAN'
AND enc.nr_seq_patient  = pat.nr_sequencia
AND enc.nr_sequencia = ser.nr_seq_encounter
AND uni.cd_setor_atendimento = sec.cd_setor_atendimento
and uni.nr_seq_location = coalesce(enc.nr_seq_location, pfcs_get_pat_location(pat.nr_sequencia, enc.nr_sequencia))
AND sec.cd_classif_setor = '1' --ED
AND pat.ie_active = '1'
AND (enc.period_start IS NOT NULL AND enc.period_start::text <> '')
AND coalesce(enc.period_end::text, '') = ''
AND sec.ie_situacao = 'A'
AND sec.ie_ocup_hospitalar <> 'N'
AND sec.cd_estabelecimento_base = cd_estabelecimento_p;

BEGIN
	select	coalesce(max(qt_time), 120) --default time
	  into STRICT	qt_time_rule_p
	  from	pfcs_rule_ed_discharges LIMIT 1;

FOR c01_w IN c01 LOOP
    qt_discharges_w := qt_discharges_w + 1;


    IF ( c01_w.total_time > qt_time_rule_p ) THEN
        qt_delayed_discharges_w := qt_delayed_discharges_w + 1;
    END IF;

    SELECT nextval('pfcs_panel_detail_seq')
    INTO STRICT pfcs_panel_detail_seq_w
;

    INSERT INTO pfcs_panel_detail(
        nr_sequencia,
        nm_usuario,
        dt_atualizacao,
        nm_usuario_nrec,
        dt_atualizacao_nrec,
        ie_situation,
        nr_seq_indicator,
        nr_seq_operational_level
    ) VALUES (
        pfcs_panel_detail_seq_w,
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        'T',
        nr_seq_indicator_w,
        cd_estabelecimento_p
    );

    INSERT INTO pfcs_detail_bed(
        nr_sequencia,
        nm_usuario,
        dt_atualizacao,
        nm_usuario_nrec,
        dt_atualizacao_nrec,
        nr_seq_detail,
        ds_location,
        ds_department,
        ds_status,
        cd_status,
        ie_temporary
    ) VALUES (
        nextval('pfcs_detail_bed_seq'),
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        pfcs_panel_detail_seq_w,
        c01_w.ds_location,
        c01_w.ds_department,
        c01_w.ds_status,
        c01_w.cd_status,
        c01_w.ie_temporary
    );

    INSERT INTO pfcs_detail_patient(
        nr_sequencia,
        nm_usuario,
        dt_atualizacao,
        nm_usuario_nrec,
        dt_atualizacao_nrec,
        nr_seq_detail,
        nr_encounter_varchar,
        dt_entrance,
        id_patient,
        nm_patient,
        ds_gender,
        dt_birthdate,
        ds_age_range,
        ds_symptoms,
        ds_dnr_status,
        qt_time_total_pa,
        ds_physician,
        ds_special_request,
        ds_discharge_disposition,
        qt_edi_score,
        ds_care_status,
        ds_checklist,
        ds_readmission_risk,
        ie_freq_flyer,
        ds_recurring_patient,
		ds_readm_risk_contrb,
		ds_rec_pat_adm_data,
		ds_rec_pat_comorbd,
		ds_rec_pat_reasons,
		ds_edi_vitals_warn,
		ds_edi_contrb,
		dt_expected_discharge
    ) VALUES (
        nextval('pfcs_detail_patient_seq'),
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        pfcs_panel_detail_seq_w,
        c01_w.nr_encounter_varchar,
        c01_w.period_start,
        c01_w.id_patient,
        c01_w.nm_patient,
        c01_w.gender,
        c01_w.birthdate,
        c01_w.qt_patient_age,
        c01_w.diagnosis,
        c01_w.code_status,
        c01_w.total_time,
        c01_w.nm_practioner,
        c01_w.cd_courtesy,
        c01_w.ds_discharge_disposition,
        c01_w.nr_edi_score,
        c01_w.ds_care_status,
        c01_w.ds_checklist,
        c01_w.readmission_risk,
        c01_w.flag_recur_pat,
        c01_w.ds_recur_pat,
		c01_w.ds_readm_risk_contrb,
		c01_w.ds_recur_pat_adm_data,
		c01_w.ds_recur_pat_comorbd,
		c01_w.ds_recur_pat_reasons,
		c01_w.ds_edi_vitals_warn,
		c01_w.ds_edi_contrb,
		c01_w.dt_exp_discharge
    );
END LOOP;

 := pfcs_pck.pfcs_generate_results(
    vl_indicator_p                  => qt_discharges_w, vl_indicator_aux_p              => qt_delayed_discharges_w, nr_seq_indicator_p              => nr_seq_indicator_w, nm_usuario_p                    => nm_usuario_p, nr_seq_operational_level_p      => cd_estabelecimento_p, nr_seq_panel_p                  => pfcs_panel_seq_w);

CALL pfcs_pck.pfcs_update_detail(
    nr_seq_indicator_p              => nr_seq_indicator_w,
    nr_seq_panel_p                  => pfcs_panel_seq_w,
    nr_seq_operational_level_p      => cd_estabelecimento_p,
    nm_usuario_p                    => nm_usuario_p);

CALL pfcs_pck.pfcs_activate_records(
    nr_seq_indicator_p              => nr_seq_indicator_w,
    nr_seq_operational_level_p      => cd_estabelecimento_p,
    nm_usuario_p                    => nm_usuario_p);

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_pa_discharges ( cd_estabelecimento_p bigint, nm_usuario_p text ) FROM PUBLIC;

