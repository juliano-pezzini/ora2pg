-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lic_gerar_processo_compras ( cd_estabelecimento_p bigint, nr_seq_licitacao_p bigint, nr_cot_compra_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
qt_existe_w			bigint;
ds_erro_w			varchar(255) := '';
ds_observacao_solic_w		varchar(2000);
ie_fechar_compras_lic_w		varchar(15);


BEGIN 
 
select	coalesce(ie_fechar_compras_lic,'N') 
into STRICT	ie_fechar_compras_lic_w 
from	parametro_compras 
where	cd_estabelecimento = cd_estabelecimento_p;
 
select	count(*) 
into STRICT	qt_existe_w 
from	cot_compra_item 
where	nr_cot_compra = nr_cot_compra_p 
and	lic_obter_tipo_compra(nr_seq_tipo_compra) = 'D';
 
if (qt_existe_w > 0) then 
	CALL lic_consiste_gerar_proc_compra(cd_estabelecimento_p,nr_cot_compra_p,nm_usuario_p);
	 
	if (ie_fechar_compras_lic_w = 'N') then	 
		begin 
		ds_observacao_solic_w := lic_gerar_compra_direta(cd_estabelecimento_p, nr_cot_compra_p, nm_usuario_p, ds_observacao_solic_w);
		exception 
		when others then 
			/*'Erro ao gerar compra direta (procedure LIC_GERAR_COMPRA_DIRETA) '*/
 
			ds_erro_w := substr(wheb_mensagem_pck.get_texto(303620) || SQLERRM(SQLSTATE),1,255);
		end;
	end if;
	 
	if (ie_fechar_compras_lic_w = 'M') then	 
		begin 
		ds_observacao_solic_w := lic_gerar_compra_direta_manter(cd_estabelecimento_p, nr_cot_compra_p, nm_usuario_p, ds_observacao_solic_w);
		exception 
		when others then 
			/*'Erro ao gerar compra direta (procedure LIC_GERAR_COMPRA_DIRETA_MANTER) '*/
 
			ds_erro_w := substr(wheb_mensagem_pck.get_texto(303622) || SQLERRM(SQLSTATE),1,255);
		end;
	end if;	
end if;
 
if (coalesce(ds_erro_w::text, '') = '') then 
 
	select	count(*) 
	into STRICT	qt_existe_w 
	from	cot_compra_item 
	where	nr_cot_compra = nr_cot_compra_p 
	and	lic_obter_tipo_compra(nr_seq_tipo_compra) = 'L';
 
	if (qt_existe_w > 0) then 
		 
		if (ie_fechar_compras_lic_w = 'N') then 
			begin 
			CALL lic_gerar_compra_licitacao(cd_estabelecimento_p,nr_cot_compra_p,nr_seq_licitacao_p,nm_usuario_p,ds_observacao_solic_w);
			exception 
			when others then 
				/*'Erro ao gerar compra licitação (procedure LIC_GERAR_COMPRA_LICITACAO) '*/
 
				ds_erro_w := substr(wheb_mensagem_pck.get_texto(303623) || SQLERRM(SQLSTATE),1,255);
			end;
		end if;
		 
		if (ie_fechar_compras_lic_w = 'M') then 
			begin 
			CALL lic_gerar_compra_licit_manter(cd_estabelecimento_p,nr_cot_compra_p,nr_seq_licitacao_p,nm_usuario_p,ds_observacao_solic_w);
			exception 
			when others then 
				/*'Erro ao gerar compra licitação (procedure LIC_GERAR_COMPRA_LICIT_MANTER) '*/
 
				ds_erro_w := substr( wheb_mensagem_pck.get_texto(303625) || SQLERRM(SQLSTATE),1,255);
			end;
		end if;
	end if;
end if;
 
if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then 
	CALL lic_estornar_processo_compras(nr_cot_compra_p,nm_usuario_p);
	CALL wheb_mensagem_pck.exibir_mensagem_abort(193436,'DS_ERRO_W='||ds_erro_w);
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lic_gerar_processo_compras ( cd_estabelecimento_p bigint, nr_seq_licitacao_p bigint, nr_cot_compra_p bigint, nm_usuario_p text) FROM PUBLIC;

