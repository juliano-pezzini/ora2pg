-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_conta_pos_cabecalho ( nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_discussao_p pls_contestacao_discussao.nr_sequencia%type, nm_usuario_p text) AS $body$
DECLARE



qt_conta_pos_w    		integer  := 0;
qt_cabecalho_rec_w  		integer  := 0;
nr_seq_conta_rec_w  		pls_conta_pos_cabecalho.nr_seq_conta_rec%type;
ie_tipo_conta_w			pls_conta.ie_tipo_conta%type;
ie_tipo_acomodacao_ptu_w	pls_conta.ie_tipo_acomodacao_ptu%type;
nr_seq_tipo_acomodacao_w	pls_conta.nr_seq_tipo_acomodacao%type;
tb_nr_sequencia_w		pls_util_cta_pck.t_number_table;
tb_nr_declaracao_w		pls_util_cta_pck.t_varchar2_table_20;
tb_cd_doenca_w			pls_util_cta_pck.t_varchar2_table_10;
tb_ie_indicador_dorn_w		pls_util_cta_pck.t_varchar2_table_2;
tb_ds_diagnostico_w		pls_util_cta_pck.t_varchar2_table_4000;
tb_ie_classificacao_w		pls_util_cta_pck.t_varchar2_table_2;

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Esta procedure e exclusiva para insercao do cabecalho de conta para faturamento.
Este cabecalho sera usado para alterar dados da conta apenas para faturamento, uma vez que a conta ja
foi paga e nao e possivel alterar a conta fechada.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[ X ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
c_cabecalho CURSOR(	nr_seq_conta_pc	pls_conta.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		nr_seq_conta
	from	pls_conta_pos_cabecalho
	where	nr_seq_conta	= nr_seq_conta_pc;
	
c_nasc_vivo CURSOR(nr_seq_conta_pc	pls_conta.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		nr_decl_nasc_vivo
	from	pls_diagnostico_nasc_vivo
	where	nr_seq_conta	= nr_seq_conta_pc;
	
c_obito CURSOR(nr_seq_conta_pc	pls_conta.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		cd_doenca,
		nr_declaracao_obito,
		ie_indicador_dorn
	from	pls_diagnost_conta_obito
	where	nr_seq_conta	= nr_seq_conta_pc;
	
c_diagnostico CURSOR(nr_seq_conta_pc	pls_conta.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		cd_doenca,
		ds_diagnostico,
		ie_classificacao
	from	pls_diagnostico_conta
	where	nr_seq_conta	= nr_seq_conta_pc;

BEGIN
if (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then
	select 	max(ie_tipo_conta),
		max(ie_tipo_acomodacao_ptu)
	into STRICT	ie_tipo_conta_w,
		ie_tipo_acomodacao_ptu_w
	from	pls_conta
	where	nr_sequencia	= nr_seq_conta_p;
	
	if (ie_tipo_conta_w	= 'A') then
		begin
		select 	min(nr_sequencia)
		into STRICT	nr_seq_tipo_acomodacao_w
		from	pls_tipo_acomodacao
		where	ie_tipo_acomodacao_ptu 	= ie_tipo_acomodacao_ptu_w
		and	ie_situacao 		= 'A';
		end;
	end if;
	

    select  count(1)
  	into STRICT  	qt_conta_pos_w
  	from  	pls_conta_pos_cabecalho
  	where  	nr_seq_conta   = nr_seq_conta_p
  	and  	((nr_seq_discussao = nr_seq_discussao_p) or (coalesce(nr_seq_discussao_p::text, '') = ''));

        select  max(nr_sequencia)
  	into STRICT  	nr_seq_conta_rec_w
  	from  	pls_rec_glosa_conta
  	where   nr_seq_conta = nr_seq_conta_p;

        select  count(1)
  	into STRICT  	qt_cabecalho_rec_w
  	from  	pls_conta_pos_cabecalho
  	where  	nr_seq_conta   = nr_seq_conta_p
  	and  	nr_seq_conta_rec = nr_seq_conta_rec_w;

  --Se nao tem gerado um cabecalho para essa conta ou se for recurso(e nao tiver cabecalho)
        if  	((qt_conta_pos_w  = 0) or ((nr_seq_conta_rec_w IS NOT NULL AND nr_seq_conta_rec_w::text <> '') and qt_cabecalho_rec_w = 0)) then

            if ( coalesce(nr_seq_conta_rec_w::text, '') = '') then
			delete	FROM pls_diagnos_nasc_viv_pos
      			where	nr_seq_conta  = nr_seq_conta_p;
			
			delete	FROM pls_diag_conta_obito_pos
      			where	nr_seq_conta  = nr_seq_conta_p;
			
			delete	FROM pls_diagnostico_conta_pos
      			where	nr_seq_conta  = nr_seq_conta_p;

      			delete	FROM pls_conta_pos_cabecalho
      			where	nr_seq_conta  = nr_seq_conta_p
      			and	((nr_seq_discussao = nr_seq_discussao_p) or (coalesce(nr_seq_discussao_p::text, '') = ''));
    		end if;

                insert into pls_conta_pos_cabecalho(nr_sequencia,
      			nm_usuario,
     			dt_atualizacao,
      			nm_usuario_nrec,
      			dt_atualizacao_nrec,
      			nr_seq_conta,
      			nr_seq_segurado,
      			cd_guia,
      			cd_guia_prestador,
      			cd_guia_referencia,
      			nr_seq_tipo_atendimento,
      			dt_alta,
      			nr_seq_saida_spsadt,
      			dt_entrada,
      			ie_tipo_consulta,
      			cd_excecao,
      			nr_seq_congenere,
      			dt_atendimento,
      			cd_medico_solicitante,
      			cd_medico_executor,
      			ie_carater_internacao,
      			ie_indicacao_acidente,
      			nr_seq_tipo_acomodacao,
      			nr_seq_clinica,
      			ie_regime_internacao,
      			cd_cooperativa,
      			ie_recem_nascido,
      			dt_recebimento_prot,
      			nr_seq_saida_consulta,
      			nr_seq_saida_int,
      			ie_tipo_guia,
      			dt_mes_competencia,
      			nr_protocolo_prestador,
      			dt_protocolo,
      			cd_senha,
      			nr_seq_prestador,
      			nr_seq_prestador_exec,
      			ie_tipo_segurado,
      			ie_origem_conta,
      			nr_seq_fatura,
      			nr_seq_nota_cobranca,
      			cd_senha_externa,
      			cd_usuario_plano_imp,
      			nr_seq_grau_partic,
      			ie_tipo_doenca,
      			ie_tipo_acomodacao_ptu,
      			ie_tipo_protocolo,
      			cd_estabelecimento,
      			nr_seq_discussao,
      			nr_seq_conta_rec,
				ie_regime_atendimento,
				ie_saude_ocupacional
				)
                SELECT  nextval('pls_conta_pos_cabecalho_seq'),
     			nm_usuario_p,
      			clock_timestamp(),
      			nm_usuario_p,
      			clock_timestamp(),
      			a.nr_sequencia,
      			a.nr_seq_segurado,
      			a.cd_guia,
      			a.cd_guia_prestador,
      			a.cd_guia_referencia,
      			a.nr_seq_tipo_atendimento,
      			a.dt_alta,
      			a.nr_seq_saida_spsadt,
      			a.dt_entrada,
      			a.ie_tipo_consulta,
      			a.cd_excecao,
      			a.nr_seq_congenere,
      			a.dt_atendimento_referencia,
      			a.cd_medico_solicitante,
      			a.cd_medico_executor,
      			a.ie_carater_internacao,
      			a.ie_indicacao_acidente,
      			coalesce(a.nr_seq_tipo_acomodacao,nr_seq_tipo_acomodacao_w),
      			a.nr_seq_clinica,
      			a.ie_regime_internacao,
     	 		a.cd_cooperativa,
      			a.ie_recem_nascido,
      			b.dt_recebimento,
      			a.nr_seq_saida_consulta,
     	 		a.nr_seq_saida_int,
      			a.ie_tipo_guia,
      			b.dt_mes_competencia,
      			b.nr_protocolo_prestador,
      			b.dt_atualizacao_nrec dt_protocolo,
      			a.cd_senha,
      			a.nr_seq_prestador,
      			a.nr_seq_prestador_exec,
      			a.ie_tipo_segurado,
      			a.ie_origem_conta,
      			a.nr_seq_fatura,
      			a.nr_seq_nota_cobranca,
      			a.cd_senha_externa,
      			a.cd_usuario_plano_imp,
      			a.nr_seq_grau_partic,
      			a.ie_tipo_doenca,
      			a.ie_tipo_acomodacao_ptu,
      			b.ie_tipo_protocolo,
      			a.cd_estabelecimento,
      			nr_seq_discussao_p,
      			nr_seq_conta_rec_w,
				a.ie_regime_atendimento,
				a.ie_saude_ocupacional
    		from  	pls_protocolo_conta b,
      			pls_conta a
    		where  a.nr_seq_protocolo = b.nr_sequencia
    		and  a.nr_sequencia  = nr_seq_conta_p;
  	end if;
	
	for r_c_cabecalho in c_cabecalho(nr_seq_conta_p) loop
		Open c_nasc_vivo(r_c_cabecalho.nr_seq_conta);
		loop
			tb_nr_sequencia_w.delete;
			tb_nr_declaracao_w.delete;
			
			fetch c_nasc_vivo bulk collect into tb_nr_sequencia_w, tb_nr_declaracao_w
			limit pls_util_cta_pck.qt_registro_transacao_w;
			
			exit when tb_nr_sequencia_w.count = 0;
			
			forall j in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
				insert	into	pls_diagnos_nasc_viv_pos(	dt_atualizacao, dt_atualizacao_nrec, nm_usuario,
						nm_usuario_nrec, nr_decl_nasc_vivo, nr_seq_cabecalho,
						nr_seq_conta, nr_sequencia, nr_seq_diag_nasc_vivo)
				values (	clock_timestamp(), clock_timestamp(), nm_usuario_p,
						nm_usuario_p, tb_nr_declaracao_w(j), r_c_cabecalho.nr_sequencia,
						r_c_cabecalho.nr_seq_conta, nextval('pls_diagnos_nasc_viv_pos_seq'), tb_nr_sequencia_w(j));
			commit;
		end loop;
		close c_nasc_vivo;
		
		Open c_obito(r_c_cabecalho.nr_seq_conta);
		loop
			tb_nr_sequencia_w.delete;
			tb_cd_doenca_w.delete;
			tb_nr_declaracao_w.delete;
			tb_ie_indicador_dorn_w.delete;
			
			fetch c_obito bulk collect into tb_nr_sequencia_w, tb_cd_doenca_w, tb_nr_declaracao_w, tb_ie_indicador_dorn_w
			limit pls_util_cta_pck.qt_registro_transacao_w;
			
			exit when tb_nr_sequencia_w.count = 0;
			
			forall j in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
				insert	into	pls_diag_conta_obito_pos(	cd_doenca, dt_atualizacao, dt_atualizacao_nrec,
						ie_indicador_dorn, nm_usuario, nm_usuario_nrec,
						nr_declaracao_obito, nr_seq_cabecalho, nr_seq_conta,
						nr_sequencia, nr_seq_diag_conta_obito)
				values (	tb_cd_doenca_w(j), clock_timestamp(), clock_timestamp(),
						tb_ie_indicador_dorn_w(j), nm_usuario_p, nm_usuario_p,
						tb_nr_declaracao_w(j), r_c_cabecalho.nr_sequencia, r_c_cabecalho.nr_seq_conta,
						nextval('pls_diag_conta_obito_pos_seq'), tb_nr_sequencia_w(j));
			commit;						
		end loop;
		close c_obito;
		
		Open c_diagnostico(r_c_cabecalho.nr_seq_conta);
		loop
			tb_nr_sequencia_w.delete;
			tb_cd_doenca_w.delete;
			tb_ds_diagnostico_w.delete;
			tb_ie_classificacao_w.delete;
			
			fetch c_diagnostico bulk collect into tb_nr_sequencia_w, tb_cd_doenca_w, tb_ds_diagnostico_w, tb_ie_classificacao_w
			limit pls_util_cta_pck.qt_registro_transacao_w;
			
			exit when tb_nr_sequencia_w.count = 0;
			
			forall j in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
				insert	into	pls_diagnostico_conta_pos(	cd_doenca, ds_diagnostico, dt_atualizacao,
						dt_atualizacao_nrec, ie_classificacao, nm_usuario,
						nm_usuario_nrec, nr_seq_cabecalho, nr_seq_conta,
						nr_seq_diagnostico_conta, nr_sequencia)
				values (	tb_cd_doenca_w(j), tb_ds_diagnostico_w(j), clock_timestamp(),
						clock_timestamp(), tb_ie_classificacao_w(j), nm_usuario_p,
						nm_usuario_p, r_c_cabecalho.nr_sequencia, r_c_cabecalho.nr_seq_conta,
						tb_nr_sequencia_w(j), nextval('pls_diagnostico_conta_pos_seq'));
			commit;
		end loop;
		close c_diagnostico;
	end loop;	
	
end if;
/* Sem commit, procedure interna */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_conta_pos_cabecalho ( nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_discussao_p pls_contestacao_discussao.nr_sequencia%type, nm_usuario_p text) FROM PUBLIC;

