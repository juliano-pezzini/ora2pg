-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_propaci_hemoterapia ( nr_prescricao_p bigint, nr_seq_proced_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_prod_w		bigint := null;
cd_proced_w		bigint := null;
ie_origem_proced_w	smallint := null;
nr_seq_derivado_w		bigint := null;

qt_proced_w		smallint := null;

cd_proced_ant_w		bigint := 0;
ie_origem_ant_w		smallint;
cd_estabelecimento_w	integer;
ie_tipo_atendimento_w	integer;
cont_w			integer;

nr_seq_lote_w		bigint := null;
nr_seq_exame_w		bigint := null;

nr_atend_w		bigint := null;
dt_prescr_w		timestamp;

cd_convenio_w		integer;
cd_categoria_w		varchar(10);
ie_tipo_convenio_w		smallint;

dt_ent_unidade_w		timestamp;
nr_seq_atepacu_w		bigint;

nr_sequencia_w		bigint;
ds_erro_w		varchar(2000) := '';
cd_cgc_prestador_w	varchar(14);
cd_cgc_consisitdo_w	varchar(14);
ie_medico_executor_w	varchar(30);
cd_setor_atendimento_w	bigint;

cd_medico_regra_w	varchar(10);
cd_setor_atend_w		integer;

nr_seq_reserva_w		bigint;
nr_seq_proc_interno_w	bigint;

cd_local_estoque_w		smallint;
ie_finalizar_trans_conta_w		varchar(1);
ie_gerar_conta_res_nao_util_w	varchar(1);
ie_regra_uso_w			varchar(1);
qt_excedida_w			integer	:= 0;
cd_profissional_w		varchar(10);
dt_passagem_w		timestamp;
qt_proced_exame_w	bigint;

nr_seq_classificacao_w	bigint;
nr_seq_proc_interno_regra_w	bigint;
qt_exames_conta_w		integer;
ie_origem_inf_w			varchar(1);
cd_cgc_laboratorio_w		varchar(14);

c001 CURSOR FOR 
SELECT	a.nr_sequencia, 
	b.cd_procedimento, 
	b.ie_origem_proced, 
	b.nr_sequencia, 
	b.nr_seq_proc_interno 
from	san_derivado b, 
	prescr_procedimento a 
where	a.nr_seq_derivado	= b.nr_sequencia 
and	a.nr_prescricao		= nr_prescricao_p 
and	a.nr_sequencia		= nr_seq_proced_p 
and	coalesce(ie_conta_adep,'N')	= 'S' 
order by b.cd_procedimento, 
	b.ie_origem_proced;


BEGIN 
 
select	max(cd_setor_atendimento), 
	max(nr_Atendimento) 
into STRICT	cd_setor_atendimento_w, 
	nr_atend_w 
from	prescr_medica 
where	nr_prescricao	= nr_prescricao_p;
 
begin 
select	max(dt_entrada), 
	max(clock_timestamp()) 
into STRICT	dt_ent_unidade_w, 
	dt_prescr_w 
from 	atendimento_paciente 
where	nr_atendimento	= nr_atend_w;
exception 
	when others then 
		-- Não foram encontrados dados para os parâmetros !	Sequência: #@NR_SEQ_PROCED#@ prescr: #@NR_PRESCRICAO#@ 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(191441,'NR_SEQ_PROCED=' || nr_seq_proced_p || ';NR_PRESCRICAO=' || nr_prescricao_p);
end;
 
select	a.cd_cgc, 
	a.cd_estabelecimento, 
	b.ie_tipo_atendimento, 
	b.nr_seq_classificacao 
into STRICT	cd_cgc_prestador_w, 
	cd_estabelecimento_w, 
	ie_tipo_atendimento_w, 
	nr_seq_classificacao_w 
from	estabelecimento a, 
	atendimento_paciente b 
where	a.cd_estabelecimento	= b.cd_estabelecimento 
and	b.nr_atendimento	= nr_atend_w;
 
select	max(cd_local_estoque) 
into STRICT	cd_local_estoque_w 
from	setor_atendimento 
where	cd_setor_atendimento	= cd_setor_atendimento_w;
 
select 	max(coalesce(ie_finalizar_trans_conta,'S')), 
	max(coalesce(ie_gerar_conta_res_nao_util,'N')), 
	max(coalesce(ie_regra_uso,'N')) 
into STRICT	ie_finalizar_trans_conta_w, 
	ie_gerar_conta_res_nao_util_w, 
	ie_regra_uso_w 
from 	san_parametro 
where 	cd_estabelecimento = cd_estabelecimento_w;
 
select	cd_convenio, 
	cd_categoria, 
	ie_tipo_convenio 
into STRICT	cd_convenio_w, 
	cd_categoria_w, 
	ie_tipo_convenio_w 
from	atendimento_paciente_v 
where	nr_atendimento = nr_atend_w;
 
if (dt_ent_unidade_w > clock_timestamp()) then /* rafael 1/3/8 -> tratar prescrições futuras */
 
	dt_passagem_w := dt_ent_unidade_w;
else 
	dt_passagem_w := clock_timestamp();
end if;
 
/* rafael em 21/2/8 os76992 */
 
begin 
select	max(nr_seq_interno) 
into STRICT	nr_seq_atepacu_w 
from 	atend_paciente_unidade 
where 	cd_setor_atendimento	= cd_setor_atendimento_w 
and	nr_atendimento 		= nr_atend_w 
and	trunc(dt_entrada_unidade,'dd')= trunc(dt_ent_unidade_w,'dd');
exception 
when others then 
	nr_seq_atepacu_w := 0;
end;		
 
if (coalesce(nr_seq_atepacu_w,0) = 0) then /* rafael em 21/2/8 os76992 incluído o if */
 
	CALL gerar_passagem_setor_atend(nr_atend_w, cd_setor_atendimento_w, dt_ent_unidade_w, 'S', nm_usuario_p);
end if;
 
select	max(nr_seq_interno) 
into STRICT	nr_seq_atepacu_w 
from	atend_paciente_unidade 
where	nr_atendimento 			= nr_atend_w 
and	cd_setor_atendimento		= cd_setor_atendimento_w 
and	trunc(dt_entrada_unidade,'dd')= trunc(dt_ent_unidade_w,'dd');
 
select	max(dt_entrada_unidade) 
into STRICT	dt_ent_unidade_w 
from	atend_paciente_unidade 
where	nr_seq_interno = nr_seq_atepacu_w;
 
open c001;
loop 
fetch c001 into 
	nr_seq_prod_w, 
	cd_proced_w, 
	ie_origem_proced_w, 
	nr_seq_derivado_w, 
	nr_seq_proc_interno_w;
EXIT WHEN NOT FOUND; /* apply on c001 */
 
	select	count(*) 
	into STRICT	cont_w 
	from	procedimento_paciente 
	where	cd_procedimento		= cd_proced_w 
	and	ie_origem_proced	= ie_origem_proced_w 
	and	nr_atendimento		= nr_atend_w 
	and	nr_prescricao		= nr_prescricao_p 
	and	nr_sequencia_prescricao	= nr_seq_proced_p;
	 
	if (cont_w	= 0) then 
		SELECT * FROM obter_san_proced_convenio(0, nr_seq_derivado_w, cd_estabelecimento_w, ie_tipo_atendimento_w, ie_tipo_convenio_w, cd_convenio_w, cd_categoria_w, cd_setor_atend_w, cd_proced_w, ie_origem_proced_w, 0, nr_seq_proc_interno_w, clock_timestamp(), nr_seq_proc_interno_regra_w, qt_exames_conta_w) INTO STRICT cd_setor_atend_w, cd_proced_w, ie_origem_proced_w, nr_seq_proc_interno_regra_w, qt_exames_conta_w;
 
		if (cd_proced_w IS NOT NULL AND cd_proced_w::text <> '') then 
			if (cd_proced_w <> cd_proced_ant_w) then 
				if (cd_proced_ant_w <> 0) then 
					update	procedimento_paciente 
					set	qt_procedimento = qt_proced_w 
					where	nr_sequencia = nr_sequencia_w;
 
					CALL gerar_lancamento_automatico(nr_atend_w,cd_local_estoque_w,34,nm_usuario_p,nr_sequencia_w,null,null,null,null,null);
					ds_erro_w := consiste_exec_procedimento(nr_sequencia_w, ds_erro_w);
					CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_w, nm_usuario_p);
				end if;
 
				qt_proced_w := 1;
				 
				if (coalesce(nr_prescricao_p,0) > 0) and (coalesce(nr_seq_prod_w,0) > 0) then 
					select	max(ie_origem_inf), 
						max(cd_cgc_laboratorio) 
					into STRICT	ie_origem_inf_w, 
						cd_cgc_laboratorio_w 
					from	prescr_procedimento 
					where	nr_prescricao = nr_prescricao_p 
					and	nr_sequencia = nr_seq_prod_w;
				end if;
 
				SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_atendimento_w, cd_proced_w, ie_origem_proced_w, ie_tipo_atendimento_w, null, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_consisitdo_w, cd_medico_regra_w, cd_profissional_w, null, coalesce(dt_prescr_w,dt_ent_unidade_w), nr_seq_classificacao_w, ie_origem_inf_w, cd_cgc_laboratorio_w, cd_setor_atendimento_w) INTO STRICT ie_medico_executor_w, cd_cgc_consisitdo_w, cd_medico_regra_w, cd_profissional_w;
 
				select	nextval('procedimento_paciente_seq') 
				into STRICT	nr_sequencia_w 
				;
 
				insert into procedimento_paciente(nr_sequencia, 
					nr_atendimento, 
					dt_entrada_unidade, 
					cd_procedimento, 
					dt_procedimento, 
					qt_procedimento, 
					dt_atualizacao, 
					nm_usuario, 
					cd_convenio, 
					cd_categoria, 
					dt_prescricao, 
					nr_prescricao, 
					nr_sequencia_prescricao, 
					cd_acao, 
					cd_setor_atendimento, 
					ie_origem_proced, 
					tx_procedimento, 
					nm_usuario_original, 
					nr_seq_atepacu, 
					ds_observacao, 
					ie_auditoria, 
					cd_cgc_prestador, 
					nr_seq_proc_interno, 
					cd_pessoa_fisica, 
					cd_medico_executor) 
				values (nr_sequencia_w, 
					nr_atend_w, 
					dt_ent_unidade_w, 
					cd_proced_w, 
					coalesce(dt_prescr_w,dt_ent_unidade_w), 
					qt_proced_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					cd_convenio_w, 
					cd_categoria_w, 
					dt_prescr_w, 
					nr_prescricao_p, 
					nr_seq_proced_p, 
					1, 
					cd_setor_atendimento_w, 
					ie_origem_proced_w, 
					100, 
					nm_usuario_p, 
					nr_seq_atepacu_w, 
					substr(wheb_mensagem_pck.get_texto(307538),1,255) || nr_prescricao_p||nr_seq_proced_p, 
					'N', 
					coalesce(cd_cgc_consisitdo_w, cd_cgc_prestador_w), nr_seq_proc_interno_w, 
					cd_profissional_w, 
					cd_medico_regra_w);
			else 
				qt_proced_w := qt_proced_w + 1;
			end if;
			 
		cd_proced_ant_w := cd_proced_w;
		 
		end if;
	end if;
end loop;
close c001;
 
if (cd_proced_ant_w <> 0) then 
	update	procedimento_paciente 
	set	qt_procedimento = qt_proced_w 
	where	nr_sequencia = nr_sequencia_w;
 
	ds_erro_w := consiste_exec_procedimento(nr_sequencia_w, ds_erro_w);
	CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_w, nm_usuario_p);
	CALL gerar_lancamento_automatico(nr_atend_w,cd_local_estoque_w,34,nm_usuario_p,nr_sequencia_w,null,null,null,null,null);
end if;
 
if (cd_proced_ant_w <> 0) then 
	if (ie_regra_uso_w	= 'S') then /* felipe - 05/10/2007 - os70567 */
 
		qt_excedida_w	:= coalesce((obter_se_uso_qtde_proc(nr_atend_w, cd_proced_ant_w, ie_origem_ant_w, qt_proced_w, cd_medico_regra_w, 
					cd_setor_atendimento_w, coalesce(dt_prescr_w,dt_ent_unidade_w), 2, 0, null,0,null,null,null, nr_seq_exame_w))::numeric ,0);
	end if;
	if (qt_excedida_w = 0) then 
		update	procedimento_paciente 
		set	qt_procedimento = qt_proced_w 
		where	nr_sequencia = nr_sequencia_w;
 
		ds_erro_w := consiste_exec_procedimento(nr_sequencia_w, ds_erro_w);
		CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_w, nm_usuario_p);
		CALL gerar_lancamento_automatico(nr_atend_w,cd_local_estoque_w,34,nm_usuario_p,nr_sequencia_w,null,null,null,null,null);
	end if;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_propaci_hemoterapia ( nr_prescricao_p bigint, nr_seq_proced_p bigint, nm_usuario_p text) FROM PUBLIC;

