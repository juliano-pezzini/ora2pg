-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_ordem_medica (( nr_atendimento_p bigint, nr_prescricao_p bigint, nr_prescricoes_p text, cd_material_p bigint, nr_seq_tipo_ordem_p bigint, ds_ordem_p text, nr_seq_solucao_p bigint, nr_seq_material_p bigint, cd_medico_p text, dt_ordem_p timestamp, nr_seq_horario_p bigint, cd_item_p bigint, nm_usuario_p text, nr_sequencia_p OUT bigint, ie_origem_ordem_p text default 'M', qt_vel_infusao_p bigint default null, nr_seq_cpoe_rp_p bigint default null ) is nr_prescricao_w bigint) AS $body$
DECLARE


dt_inicio_corte_w 	timestamp;					
ds_retorno_w 		varchar(1) := 'N';						
							

BEGIN

    dt_inicio_corte_w := pkg_date_utils.get_DateTime(dt_inicio_prescr_p, hr_corte_setor_p);

    if ((coalesce(nr_horas_validade_p,24) > 24) and (dt_ordem_p < dt_inicio_corte_w)) then
        
        ds_retorno_w := 'S';
    end if;

    return;

end;

begin

    ds_ordem_w	:= substr(ds_ordem_p,1,2000);

    if (coalesce(ie_origem_ordem_p::text, '') = '' or ie_origem_ordem_p = 'M') then
         
        if (coalesce(nr_seq_solucao_p::text, '') = '') and (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') and (coalesce(cd_item_p::text, '') = '') and (cd_material_p IS NOT NULL AND cd_material_p::text <> '') then
            cd_item_w	:= cd_material_p;	
        else
            cd_item_w	:= cd_item_p;
        end if;

        if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (coalesce(cd_material_p::text, '') = '') and (coalesce(nr_prescricoes_p::text, '') = '') then
            
            select	max(nr_atendimento),
                    max(nr_horas_validade),
                    max(cd_setor_atendimento),
                    max(dt_inicio_prescr)
            into STRICT	nr_atendimento_w,
                    nr_horas_validade_w,
                    cd_setor_atendimento_w,
                    dt_inicio_prescr_w
            from	prescr_medica
            where	nr_prescricao	= nr_prescricao_p;

            select	max(hr_inicio_prescricao)
            into STRICT	hr_corte_setor_w
            from	setor_atendimento
            where	cd_setor_atendimento = cd_setor_atendimento_w;

            select	nextval('prescr_medica_ordem_seq')
            into STRICT	nr_seq_ordem_w
;	

            insert into prescr_medica_ordem(nr_sequencia,
                nr_prescricao,
                dt_atualizacao,
                nm_usuario,
                dt_atualizacao_nrec,
                nm_usuario_nrec,
                nr_seq_material,
                nr_seq_solucao,
                nr_seq_ordem,
                ds_ordem,
                cd_medico,
                dt_ordem,
                nr_atendimento,
                qt_vel_infusao,
                nr_seq_cpoe_rp)
            values (nr_seq_ordem_w,
                nr_prescricao_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                nr_seq_material_p,
                nr_seq_solucao_p,
                nr_seq_tipo_ordem_p,
                ds_ordem_w,
                cd_medico_p,
                coalesce(dt_ordem_p,clock_timestamp()),
                nr_atendimento_w,
                qt_vel_infusao_p,
                nr_seq_cpoe_rp_p);

            nr_sequencia_p	:= nr_seq_ordem_w;

            ds_retorno_w := obterHorarioEspecialOrdem(nr_horas_validade_w, dt_inicio_prescr_w, hr_corte_setor_w, coalesce(dt_ordem_p,clock_timestamp()));

            CALL Gerar_horario_ordem(nr_seq_ordem_w, coalesce(dt_ordem_p,clock_timestamp()), nm_usuario_p, ds_retorno_w);

            if (coalesce(nr_seq_horario_p,0) > 0) or (coalesce(nr_seq_solucao_p::text, '') = '') then	
            
                select	max(dt_horario)
                into STRICT	dt_horario_w
                from	prescr_mat_hor
                where	nr_sequencia	= nr_seq_horario_p
                and	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

                select	nextval('prescr_mat_alteracao_seq')
                into STRICT	nr_seq_alteracao_w
;

                insert into prescr_mat_alteracao(nr_sequencia,
                    dt_atualizacao,
                    nm_usuario,
                    dt_atualizacao_nrec,
                    nm_usuario_nrec,
                    nr_prescricao,
                    nr_seq_prescricao,
                    nr_seq_horario,
                    dt_alteracao,
                    cd_pessoa_fisica,
                    ie_alteracao,
                    ds_justificativa,
                    ie_tipo_item,
                    dt_horario,
                    nr_atendimento,
                    cd_item)
                values (nr_seq_alteracao_w,
                    clock_timestamp(),
                    nm_usuario_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    nr_prescricao_p,
                    coalesce(nr_seq_material_p, nr_seq_solucao_p),
                    nr_seq_horario_p,
                    clock_timestamp(),
                    obter_dados_usuario_opcao(nm_usuario_p,'C'),
                    21,
                    ds_ordem_w,
                    CASE WHEN coalesce(nr_seq_solucao_p::text, '') = '' THEN 'M'  ELSE 'SOL' END ,
                    dt_horario_w,
                    nr_atendimento_p,
                    cd_item_w);
            end if;	
            if (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') then
                select	nextval('prescr_solucao_evento_seq')
                into STRICT	nr_sequencia_w
;

                insert into prescr_solucao_evento(nr_sequencia,
                    dt_atualizacao,
                    nm_usuario,
                    dt_atualizacao_nrec,
                    nm_usuario_nrec,
                    nr_prescricao,
                    nr_seq_solucao,
                    cd_pessoa_fisica,
                    ie_alteracao,
                    dt_alteracao,
                    ie_evento_valido,
                    nr_seq_motivo,
                    ds_observacao,
                    ie_tipo_solucao,
                    qt_dosagem)
                values (nr_sequencia_w,
                    clock_timestamp(),
                    nm_usuario_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    nr_prescricao_p,
                    nr_seq_solucao_p,
                    obter_dados_usuario_opcao(nm_usuario_p, 'C'),
                    19,
                    clock_timestamp(),
                    'S',
                    null,
                    ds_ordem_w,
                    1, 
                    qt_vel_infusao_p);
            end if;	

          else
        
            if (coalesce(nr_prescricao_p::text, '') = '') then
                ds_lista_w := nr_prescricoes_p;
            else
                ds_lista_w	:= nr_prescricao_p;
            end if;

            open C01;
            loop
            fetch C01 into	
                nr_prescricao_w;
            EXIT WHEN NOT FOUND; /* apply on C01 */

                if (coalesce(nr_seq_solucao_p::text, '') = '') then
                    select	max(nr_sequencia)
                    into STRICT	nr_seq_material_w
                    from	prescr_material
                    where	nr_prescricao	= nr_prescricao_w
                    and	cd_material	= cd_material_p;
                end if;

                select	max(nr_atendimento),
                        max(nr_horas_validade),
                        max(cd_setor_atendimento),
                        max(dt_inicio_prescr)
                into STRICT	nr_atendimento_w,
                        nr_horas_validade_w,
                        cd_setor_atendimento_w,
                        dt_inicio_prescr_w
                from	prescr_medica
                where	nr_prescricao	= nr_prescricao_p;

                select	max(hr_inicio_prescricao)
                into STRICT	hr_corte_setor_w
                from	setor_atendimento
                where	cd_setor_atendimento = cd_setor_atendimento_w;

                select	nextval('prescr_medica_ordem_seq')
                into STRICT	nr_seq_ordem_w
;

                insert into prescr_medica_ordem(nr_sequencia,
                    nr_prescricao,
                    dt_atualizacao,
                    nm_usuario,
                    dt_atualizacao_nrec,
                    nm_usuario_nrec,
                    nr_seq_material,
                    nr_seq_solucao,
                    nr_seq_ordem,
                    ds_ordem,
                    cd_medico,
                    dt_ordem,
                    nr_atendimento,
                    qt_vel_infusao,
                    nr_seq_cpoe_rp)
                values (nr_seq_ordem_w,
                    nr_prescricao_w,
                    clock_timestamp(),
                    nm_usuario_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    nr_seq_material_w,
                    nr_seq_solucao_p,
                    nr_seq_tipo_ordem_p,
                    ds_ordem_w,
                    cd_medico_p,
                    coalesce(dt_ordem_p,clock_timestamp()),
                    nr_atendimento_w,
                    qt_vel_infusao_p,
                    nr_seq_cpoe_rp_p);

                ds_retorno_w := obterHorarioEspecialOrdem(nr_horas_validade_w, dt_inicio_prescr_w, hr_corte_setor_w, coalesce(dt_ordem_p,clock_timestamp()));		

                CALL Gerar_horario_ordem(nr_seq_ordem_w, coalesce(dt_ordem_p,clock_timestamp()), nm_usuario_p, ds_retorno_w);

                if (coalesce(nr_seq_horario_p,0) > 0) and (coalesce(nr_seq_solucao_p::text, '') = '') then			
                    
                    select	max(dt_horario)
                    into STRICT	dt_horario_w
                    from	prescr_mat_hor
                    where	nr_sequencia	= nr_seq_horario_p
                    and	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

                    select	nextval('prescr_mat_alteracao_seq')
                    into STRICT	nr_seq_alteracao_w
;

                    insert into prescr_mat_alteracao(nr_sequencia,
                        dt_atualizacao,
                        nm_usuario,
                        dt_atualizacao_nrec,
                        nm_usuario_nrec,
                        nr_prescricao,
                        nr_seq_prescricao,
                        nr_seq_horario,
                        dt_alteracao,
                        cd_pessoa_fisica,
                        ie_alteracao,
                        ds_justificativa,
                        ie_tipo_item,
                        dt_horario,
                        nr_atendimento,
                        cd_item)
                    values (nr_seq_alteracao_w,
                        clock_timestamp(),
                        nm_usuario_p,
                        clock_timestamp(),
                        nm_usuario_p,
                        nr_prescricao_w,
                        coalesce(nr_seq_material_w, nr_seq_solucao_p),
                        nr_seq_horario_p,
                        clock_timestamp(),
                        obter_dados_usuario_opcao(nm_usuario_p,'C'),
                        21,
                        ds_ordem_w,
                        CASE WHEN coalesce(nr_seq_solucao_p::text, '') = '' THEN 'M'  ELSE 'SOL' END ,
                        dt_horario_w,
                        nr_atendimento_p,
                        cd_item_w);
                end if;	
                if (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') then
                    select	nextval('prescr_solucao_evento_seq')
                    into STRICT	nr_sequencia_w
;

                    insert into prescr_solucao_evento(nr_sequencia,
                        dt_atualizacao,
                        nm_usuario,
                        dt_atualizacao_nrec,
                        nm_usuario_nrec,
                        nr_prescricao,
                        nr_seq_solucao,
                        cd_pessoa_fisica,
                        ie_alteracao,
                        dt_alteracao,
                        ie_evento_valido,
                        nr_seq_motivo,
                        ds_observacao,
                        ie_tipo_solucao,
						qt_dosagem)
                    values (nr_sequencia_w,
                        clock_timestamp(),
                        nm_usuario_p,
                        clock_timestamp(),
                        nm_usuario_p,
                        nr_prescricao_w,
                        nr_seq_solucao_p,
                        obter_dados_usuario_opcao(nm_usuario_p, 'C'),
                        19,
                        clock_timestamp(),
                        'S',
                        null,
                        ds_ordem_w,
                        1, 
						qt_vel_infusao_p);
                end if;		

            end loop;
            close C01;
        end if;

    elsif ie_origem_ordem_p = 'G' then
        
        if ((nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and coalesce(nr_prescricoes_p::text, '') = '') then
            
            select	max(nr_atendimento),
                    max(nr_horas_validade),
                    max(cd_setor_atendimento),
                    max(dt_inicio_prescr)
            into STRICT	nr_atendimento_w,
                    nr_horas_validade_w,
                    cd_setor_atendimento_w,
                    dt_inicio_prescr_w
            from	prescr_medica
            where	nr_prescricao	= nr_prescricao_p;

            select	max(hr_inicio_prescricao)
            into STRICT	hr_corte_setor_w
            from	setor_atendimento
            where	cd_setor_atendimento = cd_setor_atendimento_w;

            select	nextval('prescr_medica_ordem_seq')
            into STRICT	nr_seq_ordem_w
;	

            insert into prescr_medica_ordem(nr_sequencia,
                nr_prescricao,
                dt_atualizacao,
                nm_usuario,
                dt_atualizacao_nrec,
                nm_usuario_nrec,
                nr_seq_ordem,
                ds_ordem,
                cd_medico,
                dt_ordem,
                nr_atendimento,
                nr_seq_gasoterapia,
                qt_vel_infusao,
                nr_seq_cpoe_rp)
            values (nr_seq_ordem_w,
                nr_prescricao_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                nr_seq_tipo_ordem_p,
                ds_ordem_w,
                cd_medico_p,
                coalesce(dt_ordem_p,clock_timestamp()),
                nr_atendimento_w,
                nr_seq_solucao_p,
                qt_vel_infusao_p,
                nr_seq_cpoe_rp_p); -- mesmo parametro passado anteriormente
            nr_sequencia_p	:= nr_seq_ordem_w;

            ds_retorno_w := obterHorarioEspecialOrdem(nr_horas_validade_w, dt_inicio_prescr_w, hr_corte_setor_w, coalesce(dt_ordem_p,clock_timestamp()));

            CALL Gerar_horario_ordem(nr_seq_ordem_w, coalesce(dt_ordem_p,clock_timestamp()), nm_usuario_p, ds_retorno_w);

            if (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') then
                select	nextval('prescr_solucao_evento_seq')
                into STRICT	nr_sequencia_w
;

                -- SALVAR EVENTO
                insert into prescr_gasoterapia_evento(nr_sequencia,
                    dt_atualizacao,
                    nm_usuario,
                    dt_atualizacao_nrec,
                    nm_usuario_nrec,
                    nr_seq_gasoterapia,
                    ie_evento,
                    dt_evento,
                    ie_evento_valido,
                    nr_seq_motivo,
                    nr_seq_assinatura,
                    nr_seq_horario,
                    ds_justificativa)
                values (nextval('prescr_gasoterapia_evento_seq'),
                    clock_timestamp(),
                    nm_usuario_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    nr_seq_solucao_p,
                    'OM',
                    clock_timestamp(),
                    'S',
                    null,
                    null,
                    null,
                    ds_ordem_w);
            end if;	

          else
        
            if (coalesce(nr_prescricao_p::text, '') = '') then
                ds_lista_w := nr_prescricoes_p;
            else
                ds_lista_w	:= nr_prescricao_p;
            end if;

            open C01;
            loop
            fetch C01 into	
                nr_prescricao_w;
            EXIT WHEN NOT FOUND; /* apply on C01 */

                select	max(nr_atendimento),
                        max(nr_horas_validade),
                        max(cd_setor_atendimento),
                        max(dt_inicio_prescr)
                into STRICT	nr_atendimento_w,
                        nr_horas_validade_w,
                        cd_setor_atendimento_w,
                        dt_inicio_prescr_w
                from	prescr_medica
                where	nr_prescricao	= nr_prescricao_p;

                select	max(hr_inicio_prescricao)
                into STRICT	hr_corte_setor_w
                from	setor_atendimento
                where	cd_setor_atendimento = cd_setor_atendimento_w;

                select	nextval('prescr_medica_ordem_seq')
                into STRICT	nr_seq_ordem_w
;

                insert into prescr_medica_ordem(nr_sequencia,
                    nr_prescricao,
                    dt_atualizacao,
                    nm_usuario,
                    dt_atualizacao_nrec,
                    nm_usuario_nrec,
                    nr_seq_ordem,
                    ds_ordem,
                    cd_medico,
                    dt_ordem,
                    nr_atendimento,
                    nr_seq_gasoterapia,
                    qt_vel_infusao,
                    nr_seq_cpoe_rp)
                values (nr_seq_ordem_w,
                    nr_prescricao_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    nr_seq_tipo_ordem_p,
                    ds_ordem_w,
                    cd_medico_p,
                    coalesce(dt_ordem_p,clock_timestamp()),
                    nr_atendimento_w,
                    nr_seq_solucao_p,
                    qt_vel_infusao_p,
                    nr_seq_cpoe_rp_p);

                ds_retorno_w := obterHorarioEspecialOrdem(nr_horas_validade_w, dt_inicio_prescr_w, hr_corte_setor_w, coalesce(dt_ordem_p,clock_timestamp()));		

                CALL Gerar_horario_ordem(nr_seq_ordem_w, coalesce(dt_ordem_p,clock_timestamp()), nm_usuario_p, ds_retorno_w);

                if (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') then
                    select	nextval('prescr_solucao_evento_seq')
                    into STRICT	nr_sequencia_w
;

                   -- SALVAR EVENTO
                   insert into prescr_gasoterapia_evento(nr_sequencia,
                        dt_atualizacao,
                        nm_usuario,
                        dt_atualizacao_nrec,
                        nm_usuario_nrec,
                        nr_seq_gasoterapia,
                        ie_evento,
                        dt_evento,
                        ie_evento_valido,
                        nr_seq_motivo,
                        nr_seq_assinatura,
                        nr_seq_horario,
                        ds_justificativa)
                    values (nextval('prescr_gasoterapia_evento_seq'),
                        clock_timestamp(),
                        nm_usuario_p,
                        clock_timestamp(),
                        nm_usuario_p,
                        nr_prescricao_p,
                        'OM',
                        clock_timestamp(),
                        'S',
                        null,
                        null,
                        null,
                        ds_ordem_w);
                end if;		

            end loop;
            close C01;
        end if;
    elsif ie_origem_ordem_p = 'DI' then --dialysis
        if ((nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and coalesce(nr_prescricoes_p::text, '') = '') then
            
            select	max(nr_atendimento),
                    max(nr_horas_validade),
                    max(cd_setor_atendimento),
                    max(dt_inicio_prescr)
            into STRICT	nr_atendimento_w,
                    nr_horas_validade_w,
                    cd_setor_atendimento_w,
                    dt_inicio_prescr_w
            from	prescr_medica
            where	nr_prescricao	= nr_prescricao_p;

            select	max(hr_inicio_prescricao)
            into STRICT	hr_corte_setor_w
            from	setor_atendimento
            where	cd_setor_atendimento = cd_setor_atendimento_w;

            select	nextval('prescr_medica_ordem_seq')
            into STRICT	nr_seq_ordem_w
;	

            insert into prescr_medica_ordem(nr_sequencia,
                nr_prescricao,
                dt_atualizacao,
                nm_usuario,
                dt_atualizacao_nrec,
                nm_usuario_nrec,
                nr_seq_ordem,
                ds_ordem,
                cd_medico,
                dt_ordem,
                nr_atendimento,
                nr_seq_solucao,
                qt_vel_infusao,
                nr_seq_cpoe_rp)
            values (nr_seq_ordem_w,
                nr_prescricao_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                nr_seq_tipo_ordem_p,
                ds_ordem_w,
                cd_medico_p,
                coalesce(dt_ordem_p,clock_timestamp()),
                nr_atendimento_w,
                nr_seq_solucao_p,
                qt_vel_infusao_p,
                nr_seq_cpoe_rp_p);

            nr_sequencia_p	:= nr_seq_ordem_w;

            ds_retorno_w := obterHorarioEspecialOrdem(nr_horas_validade_w, dt_inicio_prescr_w, hr_corte_setor_w, coalesce(dt_ordem_p,clock_timestamp()));

            CALL Gerar_horario_ordem(nr_seq_ordem_w, coalesce(dt_ordem_p,clock_timestamp()), nm_usuario_p, ds_retorno_w);

            if (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') then
                                
                insert into hd_prescricao_evento(nr_sequencia,
                        dt_atualizacao,
                        nm_usuario,
                        dt_atualizacao_nrec,
                        nm_usuario_nrec,
                        nr_seq_solucao,
                        nr_prescricao,
                        cd_pessoa_evento,
                        ie_evento,
                        dt_evento,
                        nr_seq_assinatura)
                    values (nextval('hd_prescricao_evento_seq'),
                        clock_timestamp(),
                        nm_usuario_p,
                        clock_timestamp(),
                        nm_usuario_p,
                        nr_seq_solucao_p,
                        nr_prescricao_p,
                        obter_dados_usuario_opcao(nm_usuario_p, 'C'),
                        'OM',
                        clock_timestamp(),
                        null); -- SALVAR EVENTO
            end if;	

          else
        
            if (coalesce(nr_prescricao_p::text, '') = '') then
                ds_lista_w := nr_prescricoes_p;
            else
                ds_lista_w	:= nr_prescricao_p;
            end if;

            open C01;
            loop
            fetch C01 into	
                nr_prescricao_w;
            EXIT WHEN NOT FOUND; /* apply on C01 */

                select	max(nr_atendimento),
                        max(nr_horas_validade),
                        max(cd_setor_atendimento),
                        max(dt_inicio_prescr)
                into STRICT	nr_atendimento_w,
                        nr_horas_validade_w,
                        cd_setor_atendimento_w,
                        dt_inicio_prescr_w
                from	prescr_medica
                where	nr_prescricao	= nr_prescricao_p;

                select	max(hr_inicio_prescricao)
                into STRICT	hr_corte_setor_w
                from	setor_atendimento
                where	cd_setor_atendimento = cd_setor_atendimento_w;

                select	nextval('prescr_medica_ordem_seq')
                into STRICT	nr_seq_ordem_w
;

                insert into prescr_medica_ordem(nr_sequencia,
                    nr_prescricao,
                    dt_atualizacao,
                    nm_usuario,
                    dt_atualizacao_nrec,
                    nm_usuario_nrec,
                    nr_seq_ordem,
                    ds_ordem,
                    cd_medico,
                    dt_ordem,
                    nr_atendimento,
                    nr_seq_solucao,
                    qt_vel_infusao,
                    nr_seq_cpoe_rp)
                values (nr_seq_ordem_w,
                    nr_prescricao_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    nr_seq_tipo_ordem_p,
                    ds_ordem_w,
                    cd_medico_p,
                    coalesce(dt_ordem_p,clock_timestamp()),
                    nr_atendimento_w,
                    nr_seq_solucao_p,
                    qt_vel_infusao_p,
                    nr_seq_cpoe_rp_p); -- mesmo parametro passado anteriormente
                    ds_retorno_w := obterHorarioEspecialOrdem(nr_horas_validade_w, dt_inicio_prescr_w, hr_corte_setor_w, coalesce(dt_ordem_p,clock_timestamp()));		

                    CALL Gerar_horario_ordem(nr_seq_ordem_w, coalesce(dt_ordem_p,clock_timestamp()), nm_usuario_p, ds_retorno_w);

                    if (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') then
                            
                        insert into hd_prescricao_evento(nr_sequencia,
                            dt_atualizacao,
                            nm_usuario,
                            dt_atualizacao_nrec,
                            nm_usuario_nrec,
                            nr_seq_solucao,
                            nr_prescricao,
                            cd_pessoa_evento,
                            ie_evento,
                            dt_evento,
                            nr_seq_assinatura)
                        values (nextval('hd_prescricao_evento_seq'),
                            clock_timestamp(),
                            nm_usuario_p,
                            clock_timestamp(),
                            nm_usuario_p,
                            nr_seq_solucao_p,
                            nr_prescricao_p,
                            obter_dados_usuario_opcao(nm_usuario_p, 'C'),
                            'OM',
                            clock_timestamp(),
                            null); -- SALVAR EVENTO
                    end if;		

            end loop;
            close C01;
        end if;
    elsif (ie_origem_ordem_p = 'E') then -- dieta enteral
        if ((nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and coalesce(nr_prescricoes_p::text, '') = '') then
            
            select	max(nr_atendimento),
                    max(nr_horas_validade),
                    max(cd_setor_atendimento),
                    max(dt_inicio_prescr)
            into STRICT	nr_atendimento_w,
                    nr_horas_validade_w,
                    cd_setor_atendimento_w,
                    dt_inicio_prescr_w
            from	prescr_medica
            where	nr_prescricao	= nr_prescricao_p;

            select	max(hr_inicio_prescricao)
            into STRICT	hr_corte_setor_w
            from	setor_atendimento
            where	cd_setor_atendimento = cd_setor_atendimento_w;

            select	nextval('prescr_medica_ordem_seq')
            into STRICT	nr_seq_ordem_w
;	

            insert into prescr_medica_ordem(nr_sequencia,
                    nr_prescricao,
                    dt_atualizacao,
                    nm_usuario,
                    dt_atualizacao_nrec,
                    nm_usuario_nrec,
                    nr_seq_ordem,
                    ds_ordem,
                    cd_medico,
                    dt_ordem,
                    nr_atendimento,
                    nr_seq_dieta_enteral,
                    qt_vel_infusao,
                    nr_seq_cpoe_rp)
            values (nr_seq_ordem_w,
                    nr_prescricao_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    nr_seq_tipo_ordem_p,
                    ds_ordem_w,
                    cd_medico_p,
                    coalesce(dt_ordem_p,clock_timestamp()),
                    nr_atendimento_w,
                    nr_seq_solucao_p,
                    qt_vel_infusao_p,
                    nr_seq_cpoe_rp_p);

            nr_sequencia_p	:= nr_seq_ordem_w;

            ds_retorno_w := obterHorarioEspecialOrdem(nr_horas_validade_w, dt_inicio_prescr_w, hr_corte_setor_w, coalesce(dt_ordem_p,clock_timestamp()));

            CALL Gerar_horario_ordem(nr_seq_ordem_w, coalesce(dt_ordem_p,clock_timestamp()), nm_usuario_p, ds_retorno_w);

            if (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') then
                select	nextval('prescr_solucao_evento_seq')
                into STRICT	nr_sequencia_w
;

                insert into prescr_solucao_evento(nr_sequencia,
                    dt_atualizacao,
                    nm_usuario,
                    dt_atualizacao_nrec,
                    nm_usuario_nrec,
                    nr_prescricao,
                    nr_seq_material,
                    cd_pessoa_fisica,
                    ie_alteracao,
                    dt_alteracao,
                    ie_evento_valido,
                    nr_seq_motivo,
                    ds_observacao,
                    ie_tipo_solucao,
                    qt_dosagem)
                values (nr_sequencia_w,
                    clock_timestamp(),
                    nm_usuario_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    nr_prescricao_p,
                    nr_seq_solucao_p,
                    obter_dados_usuario_opcao(nm_usuario_p, 'C'),
                    19,
                    clock_timestamp(),
                    'S',
                    null,
                    ds_ordem_w,
                    2, 
                    qt_vel_infusao_p);

            end if;

          else
        
            if (coalesce(nr_prescricao_p::text, '') = '') then
                ds_lista_w := nr_prescricoes_p;
            else
                ds_lista_w	:= nr_prescricao_p;
            end if;

            open C01;
            loop
            fetch C01 into	
                nr_prescricao_w;
            EXIT WHEN NOT FOUND; /* apply on C01 */

                select	max(nr_atendimento),
                        max(nr_horas_validade),
                        max(cd_setor_atendimento),
                        max(dt_inicio_prescr)
                into STRICT	nr_atendimento_w,
                        nr_horas_validade_w,
                        cd_setor_atendimento_w,
                        dt_inicio_prescr_w
                from	prescr_medica
                where	nr_prescricao	= nr_prescricao_p;

                select	max(hr_inicio_prescricao)
                into STRICT	hr_corte_setor_w
                from	setor_atendimento
                where	cd_setor_atendimento = cd_setor_atendimento_w;

                select	nextval('prescr_medica_ordem_seq')
                into STRICT	nr_seq_ordem_w
;

                insert into prescr_medica_ordem(nr_sequencia,
                    nr_prescricao,
                    dt_atualizacao,
                    nm_usuario,
                    dt_atualizacao_nrec,
                    nm_usuario_nrec,
                    nr_seq_ordem,
                    ds_ordem,
                    cd_medico,
                    dt_ordem,
                    nr_atendimento,
                    nr_seq_dieta_enteral,
                    qt_vel_infusao,
                    nr_seq_cpoe_rp)
                values (nr_seq_ordem_w,
                    nr_prescricao_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    nr_seq_tipo_ordem_p,
                    ds_ordem_w,
                    cd_medico_p,
                    coalesce(dt_ordem_p,clock_timestamp()),
                    nr_atendimento_w,
                    nr_seq_solucao_p,
                    qt_vel_infusao_p,
                    nr_seq_cpoe_rp_p);

                ds_retorno_w := obterHorarioEspecialOrdem(nr_horas_validade_w, dt_inicio_prescr_w, hr_corte_setor_w, coalesce(dt_ordem_p,clock_timestamp()));		

                CALL Gerar_horario_ordem(nr_seq_ordem_w, coalesce(dt_ordem_p,clock_timestamp()), nm_usuario_p, ds_retorno_w);

                if (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') then
                    select	nextval('prescr_solucao_evento_seq')
                    into STRICT	nr_sequencia_w
;

                    insert into prescr_solucao_evento(nr_sequencia,
                        dt_atualizacao,
                        nm_usuario,
                        dt_atualizacao_nrec,
                        nm_usuario_nrec,
                        nr_prescricao,
                        nr_seq_material,
                        cd_pessoa_fisica,
                        ie_alteracao,
                        dt_alteracao,
                        ie_evento_valido,
                        nr_seq_motivo,
                        ds_observacao,
                        ie_tipo_solucao,
						qt_dosagem)
                    values (nr_sequencia_w,
                        clock_timestamp(),
                        nm_usuario_p,
                        clock_timestamp(),
                        nm_usuario_p,
                        nr_prescricao_p,
                        nr_seq_solucao_p,
                        obter_dados_usuario_opcao(nm_usuario_p, 'C'),
                        19,
                        clock_timestamp(),
                        'S',
                        null,
                        ds_ordem_w,
                        2, 
						qt_vel_infusao_p);
               end if;		
            end loop;
            close C01;
        end if;
    elsif (ie_origem_ordem_p = 'P' or ie_origem_ordem_p = 'I') then -- npt
        if ((nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and coalesce(nr_prescricoes_p::text, '') = '') then
            
            select	max(nr_atendimento),
                    max(nr_horas_validade),
                    max(cd_setor_atendimento),
                    max(dt_inicio_prescr)
            into STRICT	nr_atendimento_w,
                    nr_horas_validade_w,
                    cd_setor_atendimento_w,
                    dt_inicio_prescr_w
            from	prescr_medica
            where	nr_prescricao	= nr_prescricao_p;

            select	max(hr_inicio_prescricao)
            into STRICT	hr_corte_setor_w
            from	setor_atendimento
            where	cd_setor_atendimento = cd_setor_atendimento_w;

            select	nextval('prescr_medica_ordem_seq')
            into STRICT	nr_seq_ordem_w
;	

            insert into prescr_medica_ordem(nr_sequencia,
                    nr_prescricao,
                    dt_atualizacao,
                    nm_usuario,
                    dt_atualizacao_nrec,
                    nm_usuario_nrec,
                    nr_seq_ordem,
                    ds_ordem,
                    cd_medico,
                    dt_ordem,
                    nr_atendimento,
                    nr_seq_nut_pac,
                    qt_vel_infusao,
                    nr_seq_cpoe_rp)
             values (nr_seq_ordem_w,
                    nr_prescricao_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    nr_seq_tipo_ordem_p,
                    ds_ordem_w,
                    cd_medico_p,
                    coalesce(dt_ordem_p,clock_timestamp()),
                    nr_atendimento_w,
                    nr_seq_solucao_p,
                    qt_vel_infusao_p,
                    nr_seq_cpoe_rp_p);

            nr_sequencia_p	:= nr_seq_ordem_w;

            ds_retorno_w := obterHorarioEspecialOrdem(nr_horas_validade_w, dt_inicio_prescr_w, hr_corte_setor_w, coalesce(dt_ordem_p,clock_timestamp()));

            CALL Gerar_horario_ordem(nr_seq_ordem_w, coalesce(dt_ordem_p,clock_timestamp()), nm_usuario_p, ds_retorno_w);

            if (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') then
                select	nextval('prescr_solucao_evento_seq')
                into STRICT	nr_sequencia_w
;

                select CASE WHEN ie_origem_ordem_p='P' THEN  6  ELSE CASE WHEN cpoe_obter_tipo_npt(obter_dados_usuario_opcao(nm_usuario_p, 'C'),nr_atendimento_w)='N' THEN 5 WHEN cpoe_obter_tipo_npt(obter_dados_usuario_opcao(nm_usuario_p, 'C'),nr_atendimento_w)='I' THEN 7 END  END                                
                into STRICT ie_tipo_dieta_sol_w 
;
                
                insert into prescr_solucao_evento(nr_sequencia,
                    dt_atualizacao,
                    nm_usuario,
                    dt_atualizacao_nrec,
                    nm_usuario_nrec,
                    nr_prescricao,
                    nr_seq_nut_neo,
                    cd_pessoa_fisica,
                    ie_alteracao,
                    dt_alteracao,
                    ie_evento_valido,
                    nr_seq_motivo,
                    ds_observacao,
                    ie_tipo_solucao,
                    qt_dosagem)
                values (nr_sequencia_w,
                    clock_timestamp(),
                    nm_usuario_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    nr_prescricao_p,
                    nr_seq_solucao_p,
                    obter_dados_usuario_opcao(nm_usuario_p, 'C'),
                    19,
                    clock_timestamp(),
                    'S',
                    null,
                    ds_ordem_w,
                    ie_tipo_dieta_sol_w, 
                    qt_vel_infusao_p);

            end if;

          else
        
            if (coalesce(nr_prescricao_p::text, '') = '') then
                ds_lista_w := nr_prescricoes_p;
            else
                ds_lista_w	:= nr_prescricao_p;
            end if;

            open C01;
            loop
            fetch C01 into	
                nr_prescricao_w;
            EXIT WHEN NOT FOUND; /* apply on C01 */

                select	max(nr_atendimento),
                        max(nr_horas_validade),
                        max(cd_setor_atendimento),
                        max(dt_inicio_prescr)
                into STRICT	nr_atendimento_w,
                        nr_horas_validade_w,
                        cd_setor_atendimento_w,
                        dt_inicio_prescr_w
                from	prescr_medica
                where	nr_prescricao	= nr_prescricao_p;

                select	max(hr_inicio_prescricao)
                into STRICT	hr_corte_setor_w
                from	setor_atendimento
                where	cd_setor_atendimento = cd_setor_atendimento_w;

                select	nextval('prescr_medica_ordem_seq')
                into STRICT	nr_seq_ordem_w
;

                insert into prescr_medica_ordem(nr_sequencia,
                    nr_prescricao,
                    dt_atualizacao,
                    nm_usuario,
                    dt_atualizacao_nrec,
                    nm_usuario_nrec,
                    nr_seq_ordem,
                    ds_ordem,
                    cd_medico,
                    dt_ordem,
                    nr_atendimento,
                    nr_seq_nut_pac,
                    qt_vel_infusao,
                    nr_seq_cpoe_rp)
                values (nr_seq_ordem_w,
                    nr_prescricao_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    nr_seq_tipo_ordem_p,
                    ds_ordem_w,
                    cd_medico_p,
                    coalesce(dt_ordem_p,clock_timestamp()),
                    nr_atendimento_w,
                    nr_seq_solucao_p,
                    qt_vel_infusao_p,
                    nr_seq_cpoe_rp_p); -- mesmo parametro passado anteriormente
                ds_retorno_w := obterHorarioEspecialOrdem(nr_horas_validade_w, dt_inicio_prescr_w, hr_corte_setor_w, coalesce(dt_ordem_p,clock_timestamp()));		

                CALL Gerar_horario_ordem(nr_seq_ordem_w, coalesce(dt_ordem_p,clock_timestamp()), nm_usuario_p, ds_retorno_w);

                if (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') then
                    select	nextval('prescr_solucao_evento_seq')
                    into STRICT	nr_sequencia_w
;

                    select CASE WHEN ie_origem_ordem_p='P' THEN 6  ELSE CASE WHEN cpoe_obter_tipo_npt(obter_dados_usuario_opcao(nm_usuario_p, 'C'),nr_atendimento_w)='N' THEN 5 WHEN cpoe_obter_tipo_npt(obter_dados_usuario_opcao(nm_usuario_p, 'C'),nr_atendimento_w)='I' THEN 7 END  END                                
                    into STRICT ie_tipo_dieta_sol_w
;

                    insert into prescr_solucao_evento(nr_sequencia,
                        dt_atualizacao,
                        nm_usuario,
                        dt_atualizacao_nrec,
                        nm_usuario_nrec,
                        nr_prescricao,
                        nr_seq_nut_neo,
                        cd_pessoa_fisica,
                        ie_alteracao,
                        dt_alteracao,
                        ie_evento_valido,
                        nr_seq_motivo,
                        ds_observacao,
                        ie_tipo_solucao,
						qt_dosagem)
                    values (nr_sequencia_w,
                        clock_timestamp(),
                        nm_usuario_p,
                        clock_timestamp(),
                        nm_usuario_p,
                        nr_prescricao_p,
                        nr_seq_solucao_p,
                        obter_dados_usuario_opcao(nm_usuario_p, 'C'),
                        19,
                        clock_timestamp(),
                        'S',
                        null,
                        ds_ordem_w,
                        ie_tipo_dieta_sol_w, 
						qt_vel_infusao_p);
               end if;		
            end loop;
            close C01;
        end if;

    elsif ie_origem_ordem_p = 'H' then --hemotherapy
        
        if ((nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and coalesce(nr_prescricoes_p::text, '') = '') then
            
            select	max(nr_atendimento),
                    max(nr_horas_validade),
                    max(cd_setor_atendimento),
                    max(dt_inicio_prescr)
            into STRICT	nr_atendimento_w,
                    nr_horas_validade_w,
                    cd_setor_atendimento_w,
                    dt_inicio_prescr_w
            from	prescr_medica
            where	nr_prescricao	= nr_prescricao_p;

            select	max(hr_inicio_prescricao)
            into STRICT	hr_corte_setor_w
            from	setor_atendimento
            where	cd_setor_atendimento = cd_setor_atendimento_w;

            select	nextval('prescr_medica_ordem_seq')
            into STRICT	nr_seq_ordem_w
;	

            insert into prescr_medica_ordem(nr_sequencia,
                nr_prescricao,
                dt_atualizacao,
                nm_usuario,
                dt_atualizacao_nrec,
                nm_usuario_nrec,
                nr_seq_ordem,
                ds_ordem,
                cd_medico,
                dt_ordem,
                nr_atendimento,
                nr_seq_hemoterapia,
                qt_vel_infusao,
                nr_seq_cpoe_rp)
            values (nr_seq_ordem_w,
                nr_prescricao_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                nr_seq_tipo_ordem_p,
                ds_ordem_w,
                cd_medico_p,
                coalesce(dt_ordem_p,clock_timestamp()),
                nr_atendimento_w,
                nr_seq_solucao_p,
                qt_vel_infusao_p,
                nr_seq_cpoe_rp_p); -- mesmo parametro passado anteriormente
            nr_sequencia_p	:= nr_seq_ordem_w;

            ds_retorno_w := obterHorarioEspecialOrdem(nr_horas_validade_w, dt_inicio_prescr_w, hr_corte_setor_w, coalesce(dt_ordem_p,clock_timestamp()));

            CALL Gerar_horario_ordem(nr_seq_ordem_w, coalesce(dt_ordem_p,clock_timestamp()), nm_usuario_p, ds_retorno_w);

            if (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') then
                select	nextval('prescr_solucao_evento_seq')
                into STRICT	nr_sequencia_w
;

                -- SALVAR EVENTO
                insert into prescr_solucao_evento(nr_sequencia,
                    dt_atualizacao,
                    nm_usuario,
                    dt_atualizacao_nrec,
                    nm_usuario_nrec,
                    nr_prescricao,
                    nr_seq_procedimento,
                    cd_pessoa_fisica,
                    ie_alteracao,
                    dt_alteracao,
                    ie_evento_valido,
                    nr_seq_motivo,
                    ds_observacao,
                    ie_tipo_solucao,
                    qt_dosagem)
                values (nr_sequencia_w,
                    clock_timestamp(),
                    nm_usuario_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    nr_prescricao_p,
                    nr_seq_solucao_p,
                    obter_dados_usuario_opcao(nm_usuario_p, 'C'),
                    19,
                    clock_timestamp(),
                    'S',
                    null,
                    ds_ordem_w,
                    3, 
                    qt_vel_infusao_p);
            end if;	

          else
        
            if (coalesce(nr_prescricao_p::text, '') = '') then
                ds_lista_w := nr_prescricoes_p;
            else
                ds_lista_w	:= nr_prescricao_p;
            end if;

            open C01;
            loop
            fetch C01 into	
                nr_prescricao_w;
            EXIT WHEN NOT FOUND; /* apply on C01 */

                select	max(nr_atendimento),
                        max(nr_horas_validade),
                        max(cd_setor_atendimento),
                        max(dt_inicio_prescr)
                into STRICT	nr_atendimento_w,
                        nr_horas_validade_w,
                        cd_setor_atendimento_w,
                        dt_inicio_prescr_w
                from	prescr_medica
                where	nr_prescricao	= nr_prescricao_p;

                select	max(hr_inicio_prescricao)
                into STRICT	hr_corte_setor_w
                from	setor_atendimento
                where	cd_setor_atendimento = cd_setor_atendimento_w;

                select	nextval('prescr_medica_ordem_seq')
                into STRICT	nr_seq_ordem_w
;

                insert into prescr_medica_ordem(nr_sequencia,
                    nr_prescricao,
                    dt_atualizacao,
                    nm_usuario,
                    dt_atualizacao_nrec,
                    nm_usuario_nrec,
                    nr_seq_ordem,
                    ds_ordem,
                    cd_medico,
                    dt_ordem,
                    nr_atendimento,
                    nr_seq_hemoterapia,
                    qt_vel_infusao,
                    nr_seq_cpoe_rp)
                values (nr_seq_ordem_w,
                    nr_prescricao_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    nr_seq_tipo_ordem_p,
                    ds_ordem_w,
                    cd_medico_p,
                    coalesce(dt_ordem_p,clock_timestamp()),
                    nr_atendimento_w,
                    nr_seq_solucao_p,
                    qt_vel_infusao_p,
                    nr_seq_cpoe_rp_p); -- mesmo parametro passado anteriormente
                    ds_retorno_w := obterHorarioEspecialOrdem(nr_horas_validade_w, dt_inicio_prescr_w, hr_corte_setor_w, coalesce(dt_ordem_p,clock_timestamp()));		

                    CALL Gerar_horario_ordem(nr_seq_ordem_w, coalesce(dt_ordem_p,clock_timestamp()), nm_usuario_p, ds_retorno_w);

                    if (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') then
                        select	nextval('prescr_solucao_evento_seq')
                        into STRICT	nr_sequencia_w
;

                       insert into prescr_solucao_evento(nr_sequencia,
                            dt_atualizacao,
                            nm_usuario,
                            dt_atualizacao_nrec,
                            nm_usuario_nrec,
                            nr_prescricao,
                            nr_seq_procedimento,
                            cd_pessoa_fisica,
                            ie_alteracao,
                            dt_alteracao,
                            ie_evento_valido,
                            nr_seq_motivo,
                            ds_observacao,
                            ie_tipo_solucao,
							qt_dosagem)
                        values (nr_sequencia_w,
                            clock_timestamp(),
                            nm_usuario_p,
                            clock_timestamp(),
                            nm_usuario_p,
                            nr_prescricao_p,
                            nr_seq_solucao_p,
                            obter_dados_usuario_opcao(nm_usuario_p, 'C'),
                            19,
                            clock_timestamp(),
                            'S',
                            null,
                            ds_ordem_w,
                            3, 
							qt_vel_infusao_p);
                    end if;		

            end loop;
            close C01;
        end if;

    end if;

    commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_ordem_medica (( nr_atendimento_p bigint, nr_prescricao_p bigint, nr_prescricoes_p text, cd_material_p bigint, nr_seq_tipo_ordem_p bigint, ds_ordem_p text, nr_seq_solucao_p bigint, nr_seq_material_p bigint, cd_medico_p text, dt_ordem_p timestamp, nr_seq_horario_p bigint, cd_item_p bigint, nm_usuario_p text, nr_sequencia_p OUT bigint, ie_origem_ordem_p text default 'M', qt_vel_infusao_p bigint default null, nr_seq_cpoe_rp_p bigint default null ) is nr_prescricao_w bigint) FROM PUBLIC;

