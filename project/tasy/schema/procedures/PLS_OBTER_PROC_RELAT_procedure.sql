-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_proc_relat ( qt_envio_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_process_p INOUT bigint) AS $body$
DECLARE


nr_seq_process_w			pls_relatorio.nr_seq_processamento%type;
tb_nr_seq_process_w			pls_util_cta_pck.t_number_table;
tb_nr_seq_parametros_w			pls_util_cta_pck.t_number_table;
qt_registro_w				bigint;

c01 CURSOR FOR
	SELECT	nr_seq_relatorio,
		nr_seq_parametros
	from (	SELECT	a.nr_sequencia	nr_seq_relatorio,
			b.nr_sequencia	nr_seq_parametros
		from	pls_relatorio		a,
			pls_relat_configuracao	b
		where	b.ie_origem		= a.ie_origem
		and	b.cd_estabelecimento	= a.cd_estabelecimento
		and	a.ie_status 		= '1'
		and	a.cd_estabelecimento	= cd_estabelecimento_p
		order by 1 asc ) alias0 LIMIT (qt_envio_p);

c02 CURSOR FOR
	SELECT	a.nr_sequencia	nr_seq_relatorio,
		b.nr_sequencia	nr_seq_parametros
	from	pls_relatorio		a,
		pls_relat_configuracao	b
	where	b.ie_origem		= a.ie_origem
	and	b.cd_estabelecimento	= a.cd_estabelecimento
	and	a.ie_status 		= '1'
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	order by 1 asc;


BEGIN

select	count(1)
into STRICT	qt_registro_w
from	pls_relatorio		a,
	pls_relat_configuracao	b
where	b.ie_origem		= a.ie_origem
and	b.cd_estabelecimento	= a.cd_estabelecimento
and	a.ie_status 		= '1'
and	a.cd_estabelecimento	= cd_estabelecimento_p;

--Verifica se tem relatorios pendentes
if (qt_registro_w > 0) then
	select	nextval('pls_relat_process_seq')
	into STRICT	nr_seq_process_w
	;

	--Limpa a tabela
	tb_nr_seq_process_w.delete;
	tb_nr_seq_parametros_w.delete;
	--Com limitador de quantidade para consulta
	if (coalesce(qt_envio_p,0) > 0) then
		--Abre cursor
		open c01;
		loop
		fetch c01 bulk collect into tb_nr_seq_process_w, tb_nr_seq_parametros_w
		limit pls_util_pck.qt_registro_transacao_w;
		exit when tb_nr_seq_process_w.count = 0;
			-- Se encontrou algum registro faz o update
			forall i in tb_nr_seq_process_w.first..tb_nr_seq_process_w.last
				update 	pls_relatorio
				set	ie_status 		= '2',
					nr_seq_processamento 	= nr_seq_process_w,
					nm_usuario		= nm_usuario_p
					--nr_seq_parametros	= tb_nr_seq_parametros_w(i)
				where	nr_sequencia		= tb_nr_seq_process_w(i);
			commit;

		end loop;
		close c01;
	--Sem limitador de quantidade
	else
		--Abre cursor
		open c02;
		loop
		fetch c02 bulk collect into tb_nr_seq_process_w, tb_nr_seq_parametros_w
		limit pls_util_pck.qt_registro_transacao_w;
		exit when tb_nr_seq_process_w.count = 0;
			-- Se encontrou algum registro faz o update
			forall i in tb_nr_seq_process_w.first..tb_nr_seq_process_w.last
				update 	pls_relatorio
				set	ie_status 		= '2',
					nr_seq_processamento 	= nr_seq_process_w,
					nm_usuario		= nm_usuario_p
--					nr_seq_parametros	= tb_nr_seq_parametros_w(i)
				where	nr_sequencia		= tb_nr_seq_process_w(i);
			commit;
		end loop;
		close c02;
	end if;
end if;
--Limpa a tabela
tb_nr_seq_process_w.delete;
--tb_nr_seq_parametros_w.delete;
--retorna sequencial de processamento
nr_seq_process_p := nr_seq_process_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_proc_relat ( qt_envio_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_process_p INOUT bigint) FROM PUBLIC;

