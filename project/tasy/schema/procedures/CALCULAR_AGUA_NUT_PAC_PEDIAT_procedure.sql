-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_agua_nut_pac_pediat ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_peso_w					double precision;
nr_seq_elem_agua_w			bigint;
qt_vol_total_w				double precision;
qt_aporte_hidrico_diario_w	double precision;
qt_elem_kg_dia_w			double precision;
qt_peso_calorico_w			double precision;
ie_unid_med_w				varchar(15);


BEGIN

select	qt_peso,
		qt_aporte_hidrico_diario,
		coalesce(qt_peso_calorico,0)
into STRICT	qt_peso_w,
		qt_aporte_hidrico_diario_w,
		qt_peso_calorico_w
from	Nut_pac
where	nr_sequencia = nr_sequencia_p;

/*Rotina para atualizar o volume do elemento do tipo água para ficar compatível com Aporte hídrico */

select	max(a.nr_sequencia),
		max(a.ie_unid_med)
into STRICT	nr_seq_elem_agua_w,
		ie_unid_med_w
from	nut_elemento b,
		nut_pac_elemento a
where	a.nr_seq_nut_pac	= nr_sequencia_p
and		a.nr_seq_elemento	= b.nr_sequencia
and		b.ie_tipo_elemento	= 'A'
and		b.ie_npt_pediatrica	= 'S';

if (nr_seq_elem_agua_w > 0) then
	begin
	select	coalesce(sum(obter_vol_elem_nut_pac(nr_sequencia)),0)
	into STRICT	qt_vol_total_w
	from	nut_pac_elemento
	where	nr_seq_nut_pac	= nr_sequencia_p;

	if (qt_aporte_hidrico_diario_w > qt_vol_total_w) then
		begin

		select	sum(qt_elem_kg_dia)
		into STRICT	qt_elem_kg_dia_w
		from	nut_pac_elemento
		where	nr_seq_nut_pac	= nr_sequencia_p
		and		nr_sequencia	= nr_seq_elem_agua_w;

		if (upper(ie_unid_med_w) = upper(OBTER_UNID_MED_USUA('Kg/d'))) or (coalesce(ie_unid_med_w::text, '') = '') then
			qt_elem_kg_dia_w	:= qt_elem_kg_dia_w + dividir((qt_aporte_hidrico_diario_w - qt_vol_total_w),qt_peso_w);
		elsif (upper(ie_unid_med_w) = upper(OBTER_UNID_MED_USUA('PC/d'))) then
			qt_elem_kg_dia_w	:= qt_elem_kg_dia_w + dividir((qt_aporte_hidrico_diario_w - qt_vol_total_w),qt_peso_calorico_w);
		elsif (upper(ie_unid_med_w) = upper(OBTER_UNID_MED_USUA('ml'))) then
			qt_elem_kg_dia_w	:= qt_elem_kg_dia_w + dividir(qt_aporte_hidrico_diario_w - qt_vol_total_w,qt_peso_w);
		end if;

		update	nut_pac_elemento
		set		qt_elem_kg_dia	=  coalesce(qt_elem_kg_dia_w,0)
		where	nr_seq_nut_pac	= nr_sequencia_p
		and		nr_sequencia	= nr_seq_elem_agua_w;

		end;
	elsif (qt_aporte_hidrico_diario_w < qt_vol_total_w) then
		begin
		select	sum(qt_elem_kg_dia)
		into STRICT	qt_elem_kg_dia_w
		from	nut_pac_elemento
		where	nr_seq_nut_pac	= nr_sequencia_p
		and		nr_sequencia	= nr_seq_elem_agua_w;

		if (upper(ie_unid_med_w) = upper(OBTER_UNID_MED_USUA('Kg/d'))) or (coalesce(ie_unid_med_w::text, '') = '') then
			qt_elem_kg_dia_w	:= qt_elem_kg_dia_w - (dividir((qt_vol_total_w - qt_aporte_hidrico_diario_w),qt_peso_w));
		elsif (upper(ie_unid_med_w) = upper(OBTER_UNID_MED_USUA('PC/d'))) then
			qt_elem_kg_dia_w	:= qt_elem_kg_dia_w - (dividir((qt_vol_total_w - qt_aporte_hidrico_diario_w),qt_peso_calorico_w));
		elsif (upper(ie_unid_med_w) = upper(OBTER_UNID_MED_USUA('ml'))) then
			qt_elem_kg_dia_w	:= qt_elem_kg_dia_w - (dividir((qt_vol_total_w - qt_aporte_hidrico_diario_w),qt_peso_w));
		end if;

		if (qt_elem_kg_dia_w < 0) then
			qt_elem_kg_dia_w	:= 0;
		end if;

		update	nut_pac_elemento
		set		qt_elem_kg_dia	= coalesce(qt_elem_kg_dia_w,0)
		where	nr_seq_nut_pac	= nr_sequencia_p
		and		nr_sequencia	= nr_seq_elem_agua_w;

		end;
	end if;
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_agua_nut_pac_pediat ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

