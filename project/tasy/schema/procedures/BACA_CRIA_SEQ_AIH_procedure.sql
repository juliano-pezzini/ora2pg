-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_cria_seq_aih () AS $body$
DECLARE

 
ds_comando_w	varchar(2000);

qt_existe_w	bigint;
nr_aih_w		bigint;
nr_sequencia_w	bigint;
qt_registros_w	bigint;

C01 CURSOR FOR 
SELECT	nr_aih 
from	sus_aih 
where	coalesce(nr_sequencia::text, '') = '';

C02 CURSOR FOR 
SELECT	nr_sequencia 
from	material_atend_paciente 
where	(nr_aih IS NOT NULL AND nr_aih::text <> '') 
and	coalesce(nr_seq_aih::text, '') = '';

C03 CURSOR FOR 
SELECT	nr_sequencia 
from	procedimento_paciente 
where	(nr_aih IS NOT NULL AND nr_aih::text <> '') 
and	coalesce(nr_seq_aih::text, '') = '';

C04 CURSOR FOR 
SELECT	nr_sequencia 
from	sus_aih_reg_civil 
where	(nr_aih IS NOT NULL AND nr_aih::text <> '') 
and	coalesce(nr_seq_aih::text, '') = '';

C05 CURSOR FOR 
SELECT	nr_sequencia 
from	sus_daih160 
where	(nr_aih IS NOT NULL AND nr_aih::text <> '') 
and	coalesce(nr_seq_aih::text, '') = '';

C06 CURSOR FOR 
SELECT	nr_sequencia 
from	sus_leito_movto 
where	(nr_aih IS NOT NULL AND nr_aih::text <> '') 
and	coalesce(nr_seq_aih::text, '') = '';

C07 CURSOR FOR 
SELECT	nr_seq_interno 
from	sus_laudo_paciente 
where	(nr_aih IS NOT NULL AND nr_aih::text <> '') 
and	coalesce(nr_seq_aih::text, '') = '';

 

BEGIN 
 
qt_registros_w := 0;
OPEN C01;
LOOP 
FETCH C01 into	nr_aih_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	qt_registros_w := qt_registros_w + 1;
	update	sus_aih 
	set	nr_sequencia	= 0 
	where	nr_aih		= nr_aih_w;
	if (qt_registros_w > 1000) then 
		qt_registros_w	:= 0;
		commit;
	end if;
	end;
END LOOP;
close c01;
commit;
 
lock table MATERIAL_ATEND_PACIENTE in exclusive mode;
ds_comando_w	:= 'Alter trigger MATERIAL_ATEND_PACIENTE_UPDATE disable';
CALL Exec_Sql_Dinamico('Disable trigger', ds_comando_w);
qt_registros_w := 0;
OPEN C02;
LOOP 
FETCH C02 into	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
	qt_registros_w := qt_registros_w + 1;
	update	material_atend_paciente 
	set	nr_seq_aih	= 0 
	where	nr_sequencia	= nr_sequencia_w;
	if (qt_registros_w > 1000) then 
		qt_registros_w	:= 0;
		commit;
	end if;
	end;
END LOOP;
close c02;
commit;
ds_comando_w	:= 'Alter trigger MATERIAL_ATEND_PACIENTE_UPDATE enable';
CALL Exec_Sql_Dinamico('Disable trigger', ds_comando_w);
 
lock table PROCEDIMENTO_PACIENTE in exclusive mode;
ds_comando_w	:= 'Alter trigger PROCEDIMENTO_PACIENTE_UPDATE disable';
CALL Exec_Sql_Dinamico('Disable trigger', ds_comando_w);
qt_registros_w := 0;
OPEN C03;
LOOP 
FETCH C03 into	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin 
	qt_registros_w := qt_registros_w + 1;
	update	procedimento_paciente 
	set	nr_seq_aih	= 0 
	where	nr_sequencia	= nr_sequencia_w;
	if (qt_registros_w > 1000) then 
		begin 
		qt_registros_w	:= 0;
		commit;
		end;
	end if;
	end;
END LOOP;
close c03;
commit;
 
ds_comando_w	:= 'Alter trigger PROCEDIMENTO_PACIENTE_UPDATE enable';
CALL Exec_Sql_Dinamico('Disable trigger', ds_comando_w);
 
 
lock table SUS_AIH_REG_CIVIL in exclusive mode;
ds_comando_w	:= 'Alter trigger SUS_AIH_REG_CIVIL_ATUAL disable';
CALL Exec_Sql_Dinamico('Disable trigger', ds_comando_w);
 
qt_registros_w := 0;
OPEN C04;
LOOP 
FETCH C04 into	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin 
	qt_registros_w := qt_registros_w + 1;
	update	sus_aih_reg_civil 
	set	nr_seq_aih	= 0 
	where	nr_sequencia	= nr_sequencia_w;
	if (qt_registros_w > 1000) then 
		qt_registros_w	:= 0;
		commit;
	end if;
	end;
END LOOP;
close c04;
commit;
 
ds_comando_w	:= 'Alter trigger SUS_AIH_REG_CIVIL_ATUAL enable';
CALL Exec_Sql_Dinamico('Disable trigger', ds_comando_w);
 
 
qt_registros_w := 0;
OPEN C05;
LOOP 
FETCH C05 into	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
	begin 
	qt_registros_w := qt_registros_w + 1;
	update	sus_daih160 
	set	nr_seq_aih	= 0 
	where	nr_sequencia	= nr_sequencia_w;
	if (qt_registros_w > 1000) then 
		qt_registros_w	:= 0;
		commit;
	end if;
	end;
END LOOP;
close c05;
commit;
 
qt_registros_w := 0;
OPEN C06;
LOOP 
FETCH C06 into	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C06 */
	begin 
	qt_registros_w := qt_registros_w + 1;
	update	sus_leito_movto 
	set	nr_seq_aih	= 0 
	where	nr_sequencia	= nr_sequencia_w;
	if (qt_registros_w > 1000) then 
		qt_registros_w	:= 0;
		commit;
	end if;
	end;
END LOOP;
close c06;
commit;
 
 
lock table SUS_LAUDO_PACIENTE in exclusive mode;
ds_comando_w	:= 'Alter trigger SUS_LAUDO_PACIENTE_UPDATE disable';
CALL Exec_Sql_Dinamico('Disable trigger', ds_comando_w);
 
qt_registros_w := 0;
OPEN C07;
LOOP 
FETCH C07 into	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C07 */
	begin 
	qt_registros_w := qt_registros_w + 1;
	update	sus_laudo_paciente 
	set	nr_seq_aih	= 0 
	where	nr_seq_interno	= nr_sequencia_w;
	if (qt_registros_w > 1000) then 
		begin 
		qt_registros_w	:= 0;
		commit;
		end;
	end if;
	end;
END LOOP;
close c07;
commit;
 
ds_comando_w	:= 'Alter trigger SUS_LAUDO_PACIENTE_UPDATE enable';
CALL Exec_Sql_Dinamico('Disable trigger', ds_comando_w);
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_cria_seq_aih () FROM PUBLIC;

