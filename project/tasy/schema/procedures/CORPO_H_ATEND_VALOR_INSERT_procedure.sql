-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE corpo_h_atend_valor_insert ( NR_SEQ_CH_ATEND_P bigint, NR_ATENDIMENTO_P text, NR_SEQ_GRAVIDADE_P bigint, IE_AMPUTADO_P text, AREAS_ID_P text, DS_OBSERVACAO_P text ) AS $body$
DECLARE
	

cd_pessoa_fisica_w atendimento_paciente.cd_pessoa_fisica%type;

area_id_w corpo_humano_imagens.area_id%type;
nr_seq_vinculo_atras_w corpo_humano_imagens.nr_seq_vinculo_atras%type;
nr_seq_vinculo_frente_w corpo_humano_imagens.nr_seq_vinculo_frente%type;

area_id_search_w corpo_humano_imagens.area_id%type;WITH RECURSIVE cte AS (


areas_id_cur CURSOR FOR
  SELECT regexp_substr(AREAS_ID_P,'[^/]+',1, level)  as AREA_ID_BASE
  (REGEXP_SUBSTR(AREAS_ID_P, '[^/]+', 1, LEVEL) IS NOT NULL AND (REGEXP_SUBSTR(AREAS_ID_P, '[^/]+', 1, LEVEL))::text <> '')  UNION ALL


areas_id_cur CURSOR FOR
  SELECT regexp_substr(AREAS_ID_P,'[^/]+',1, level)  as AREA_ID_BASE 
  (REGEXP_SUBSTR(AREAS_ID_P, '[^/]+', 1, LEVEL) IS NOT NULL AND (REGEXP_SUBSTR(AREAS_ID_P, '[^/]+', 1, LEVEL))::text <> '') JOIN cte c ON ()

) SELECT * FROM cte;
;

areas_id_insert_cur CURSOR FOR
  SELECT area_id from (
    SELECT area_id from corpo_humano_imagens where area_id like area_id_search_w

union

    select nr_seq_vinculo_atras area_id from corpo_humano_imagens where area_id like area_id_search_w
    
union

    select nr_seq_vinculo_frente area_id from corpo_humano_imagens where area_id like area_id_search_w
  ) alias0 where (area_id IS NOT NULL AND area_id::text <> '');
BEGIN

select cd_pessoa_fisica
into STRICT cd_pessoa_fisica_w
from atendimento_paciente
where nr_atendimento = NR_ATENDIMENTO_P;


  for areas_id in areas_id_cur loop

    area_id_search_w := areas_id.AREA_ID_BASE;

    for areas_id_ins in areas_id_insert_cur loop
    
      if (IE_AMPUTADO_P = 'S') then
        insert into CORPO_HUMANO_AMPUTADA(
            NR_SEQ_AMP, 
            CD_PESSOA_FISICA, 
            DT_ATUALIZACAO, 
            NM_USUARIO, 
            DT_ATUALIZACAO_NREC, 
            NM_USUARIO_NREC, 
            IE_SITUACAO, 
            NR_SEQ_ATEND,
            AREA_ID
          ) values (
            nextval('corpo_humano_amputada_seq'),
            cd_pessoa_fisica_w,
            clock_timestamp(),
            wheb_usuario_pck.get_nm_usuario(),
            clock_timestamp(),
            wheb_usuario_pck.get_nm_usuario(),
            'A',
            NR_SEQ_CH_ATEND_P,
            areas_id_ins.area_id
          );
      else
        insert into corpo_humano_atend_valor(
            NR_SEQUENCIA,
            AREA_ID,
            DT_ATUALIZACAO,
            NM_USUARIO,
            DT_ATUALIZACAO_NREC,
            NM_USUARIO_NREC,
            AREA_TYPE,
            AREA_COLOR_ID,
            NR_ATENDIMENTO,
            DS_OBSERVACAO,
            NR_SEQ_GRAVIDADE,
            NR_SEQ_ATEND
          ) values (
            nextval('corpo_humano_atend_valor_seq'),
            areas_id_ins.area_id,
            clock_timestamp(),
            wheb_usuario_pck.get_nm_usuario(),
            clock_timestamp(),
            wheb_usuario_pck.get_nm_usuario(),
            'MARKED',
            null, --OR NR_SEQ_GRAVIDADE
            NR_ATENDIMENTO_P,
            DS_OBSERVACAO_P,
            NR_SEQ_GRAVIDADE_P,
            NR_SEQ_CH_ATEND_P
          );
      end if;

    end loop;

  end loop;

  commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE corpo_h_atend_valor_insert ( NR_SEQ_CH_ATEND_P bigint, NR_ATENDIMENTO_P text, NR_SEQ_GRAVIDADE_P bigint, IE_AMPUTADO_P text, AREAS_ID_P text, DS_OBSERVACAO_P text ) FROM PUBLIC;

