-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_ocupacao_hospitalar ( dt_parametro_P timestamp, NM_USUARIO_P text) AS $body$
DECLARE


dt_parametro_fim_w			timestamp;
dt_parametro_w				timestamp;
dt_parametro_mes_w			timestamp;
dt_entrada_w				timestamp;
leito_utilizado_w			bigint;
dt_entrada_unidade_w		timestamp;
dt_Prim_entrada_unidade_w	timestamp;
dt_Ult_saida_unidade_w		timestamp;
dt_ult_saida_unidade_ww		timestamp;
dt_saida_unidade_w			timestamp;
dt_ultima_movimentacao_w	timestamp;
ie_considera_censo_passagem_w	varchar(1);
nr_atendimento_w			bigint;
nr_atendimento_ant_w		bigint;
cd_estabelecimento_w		smallint     := 1;
cd_setor_atendimento_w		integer;
cd_setor_atendimento_aux_w	integer;
cd_procedencia_w			integer;
ie_tipo_atendimento_w		smallint;
cd_pessoa_fisica_w			varchar(10);
cd_medico_w					varchar(10);
cd_unidade_basica_w			varchar(10);
cd_unidade_compl_w			varchar(10);
ie_status_unidade_w			varchar(03)  := 'L';
ie_status_paciente_w		varchar(03)  := 'L';
nr_altas_w					integer     := 0;
nr_pacientes_w				integer     := 0;
nr_paciente_unid_w			integer     := 0;
nr_admissoes_w				integer     := 0;
nr_Obitos_w					integer     := 0;
qt_Obito_p24h_w				integer     := 0;
nr_transf_Entrada_w			integer     := 0;
nr_Transf_Saida_w			integer     := 0;
qt_leito_livre_w			integer	  := 0;
ie_clinica_w				integer;
cd_convenio_w				integer;
cd_tipo_acomodacao_w		integer;
cd_motivo_alta_w			integer     := 0;
dt_saida_interno_w			timestamp;
dt_alta_w					timestamp;
ie_temporario_w				varchar(01);
ie_situacao_w				varchar(02);
ie_situacao_leito_w			varchar(02);
hr_alta_w					smallint	:= 0;
ie_clinica_alta_w			varchar(03);
ie_clinica_padrao_w			varchar(03)	:= 'L';
ie_status_hist_w			varchar(05);
ie_obito_w					varchar(01);
nr_seq_origem_w				bigint;
nr_seq_interno_w			bigint;
qt_admitido_alta_dia_w		bigint	:= 0;
cd_cid_principal_w			varchar(10);
ie_temp_w					varchar(01);
qt_base_ocup_w				bigint;
cd_procedimento_w			bigint;
ie_origem_proced_w			bigint;
nr_seq_hist_w				bigint;
nr_seq_queixa_w				bigint;
cd_estab_atend_w          	smallint;
cd_categoria_w				varchar(10);
nr_seq_forma_chegada_w		bigint;
nr_seq_indicacao_w			bigint;
cd_convenio_glosa_w			bigint;
cd_categoria_glosa_w		varchar(10);
nr_sequencia_w				bigint;
cd_empresa_w				bigint;
cd_empresa_estab_w			Eis_Ocupacao_Hospitalar.cd_empresa%type;
ie_cancelado_censo_w    	varchar(1);
qt_peso_w					atendimento_sinal_vital.qt_peso%type;
nr_seq_classificacao_w		bigint;
cd_grupo_w					bigint;
cd_subgrupo_w				bigint;
cd_forma_organizacao_w		bigint;
cd_grupo_proc_w				bigint;
cd_especialidade_proc_w		bigint;
cd_area_proc_w				bigint;
nr_transf_ent_interna_w		integer := 0;
nr_transf_ent_externa_w		integer := 0;
nr_transf_saida_interna_w	integer := 0;
nr_transf_saida_externa_w	integer := 0;
nr_seq_agrupamento_w		bigint;
nr_seq_agrupamento_aux_w	bigint;
ie_considera_tipo_acomod_w	varchar(1);
ie_carater_inter_sus_w		varchar(2);
ie_censo_passagem_setor_w	varchar(1);
ds_faixa_etaria_w			Eis_Ocupacao_Hospitalar.ds_faixa_etaria%type;
ds_idade_w					Eis_Ocupacao_Hospitalar.ds_idade%type;
cd_idade_w					Eis_Ocupacao_Hospitalar.cd_idade%type;
nm_pessoa_fisica_w			Eis_Ocupacao_Hospitalar.nm_pessoa_fisica%type;
nm_paciente_w				Eis_Ocupacao_Hospitalar.nm_paciente%type;
ds_grupo_w					Eis_Ocupacao_Hospitalar.ds_grupo%type;
ds_subgrupo_w				Eis_Ocupacao_Hospitalar.ds_subgrupo%type;
ds_forma_organizacao_w		Eis_Ocupacao_Hospitalar.ds_forma_organizacao%type;
ds_grupo_proc_w				Eis_Ocupacao_Hospitalar.ds_grupo_proc%type;
ds_area_proc_w				Eis_Ocupacao_Hospitalar.ds_area_proc%type;
ds_especialidade_proc_w		Eis_Ocupacao_Hospitalar.ds_especialidade_proc%type;
ds_proced_principal_w		Eis_Ocupacao_Hospitalar.ds_proced_principal%type;
ds_classif_atend_w			Eis_Ocupacao_Hospitalar.ds_classif_atend%type;
ds_estado_civil_w			Eis_Ocupacao_Hospitalar.ds_estado_civil%type;
nr_control_w				Eis_Ocupacao_Hospitalar.nr_control%type;
ie_sexo_w					Eis_Ocupacao_Hospitalar.ie_sexo%type;
ds_agrupamento_w			Eis_Ocupacao_Hospitalar.ds_agrupamento%type;
ds_queixa_w					Eis_Ocupacao_Hospitalar.ds_queixa%type;
ds_carater_atend_w			Eis_Ocupacao_Hospitalar.ds_carater_atend%type;
cd_categoria_cid_w			Eis_Ocupacao_Hospitalar.cd_categoria_cid%type;
ds_categoria_cid_w			Eis_Ocupacao_Hospitalar.ds_categoria_cid%type;
ie_leito_temp_w				varchar(10);
ds_cid_principal_w			Eis_Ocupacao_Hospitalar.ds_cid_principal%type;
cd_espec_medico_w			Eis_Ocupacao_Hospitalar.cd_espec_medico%type;
ie_tipo_convenio_w			Eis_Ocupacao_Hospitalar.ie_tipo_convenio%type;
ie_censo_inativo_w			varchar(1);
nr_pac_dia_w				Eis_Ocupacao_Hospitalar.nr_pac_dia%type;
qt_temp_w					Eis_Ocupacao_Hospitalar.qt_temp%type;
cd_especialidade_w			Eis_Ocupacao_Hospitalar.cd_especialidade%type;
ds_procedimento_w			Eis_Ocupacao_Hospitalar.ds_procedimento%type;
ds_estabelecimento_w		Eis_Ocupacao_Hospitalar.ds_estabelecimento%type;
ds_motivo_alta_w			Eis_Ocupacao_Hospitalar.ds_motivo_alta%type;
cd_classif_etaria_w			Eis_Ocupacao_Hospitalar.cd_classif_etaria%type;
ds_classif_etaria_w			Eis_Ocupacao_Hospitalar.ds_classif_etaria%type;
cd_estabelecimento_base_w 	SETOR_ATENDIMENTO.cd_estabelecimento_base%type;
cd_municipio_ibge_w 		Eis_Ocupacao_Hospitalar.cd_municipio_ibge%type;
ds_categoria_w				Eis_Ocupacao_Hospitalar.ds_categoria%type;
ds_forma_chegada_w			Eis_Ocupacao_Hospitalar.ds_forma_chegada%type;
ds_convenio_glosa_w			Eis_Ocupacao_Hospitalar.ds_convenio_glosa%type;
ds_categoria_glosa_w		Eis_Ocupacao_Hospitalar.ds_categoria_glosa%type;
ds_indicacao_w				Eis_Ocupacao_Hospitalar.ds_indicacao%type;

C01 CURSOR FOR
	SELECT a.cd_setor_atendimento,
			a.cd_unidade_basica,
			a.cd_unidade_compl,
			coalesce(a.ie_status_unidade,'L') ie_status_unidade,
			coalesce(a.ie_temporario,'N'),
			CASE WHEN coalesce(a.ie_situacao,'A')='A' THEN 'A'  ELSE obter_se_unidade_ativa_data(dt_parametro_p,a.nr_seq_interno) END ,
			a.nr_seq_interno,
			b.nr_seq_agrupamento,
			(SELECT coalesce(max(ds_agrupamento),wheb_mensagem_pck.get_texto(311189)) from agrupamento_setor x where x.nr_sequencia = b.nr_seq_agrupamento),
			b.cd_estabelecimento_base
	from	unidade_atendimento a,
			setor_atendimento b
	where	a.cd_setor_atendimento 	= b.cd_setor_atendimento
	and		b.cd_classif_setor 		in (3,4)
	and		((ie_considera_tipo_acomod_w = 'N') or (substr(obter_se_sem_acomodacao(a.cd_tipo_acomodacao),1,1) = 'N'))
	and		((ie_considera_censo_passagem_w = 'S' AND b.ie_ocup_hospitalar = 'S') or (ie_considera_censo_passagem_w = 'N'))
	and (coalesce(dt_criacao,dt_parametro_p) -1) <= dt_parametro_p
	order by
			a.cd_setor_atendimento,
			a.cd_unidade_basica,
			a.cd_unidade_compl;

C02 CURSOR FOR
	SELECT /*+ INDEX(B ATEPACU_I1) INDEX(a atepaci_pk) */			y.nr_atendimento,
			y.ie_tipo_atendimento,
			y.cd_procedencia,
			y.cd_estabelecimento,
			--substr(obter_nome_estabelecimento(a.cd_estabelecimento),1,80),
			y.cd_pessoa_fisica,
			y.cd_medico_resp,
			y.ie_clinica,
			y.cd_tipo_acomodacao,
			y.dt_entrada_unidade,
			coalesce(y.dt_saida_unidade, dt_parametro_fim_w + 1),
			coalesce(y.dt_alta, dt_parametro_fim_w + 1),
			y.cd_motivo_alta,
			y.dt_entrada,
			y.ie_clinica_alta,
			cd_cid_atend,
			y.dt_saida_interno,
			substr(obter_codigo_proced_princ(y.nr_atendimento,1),1,15),
			substr(obter_codigo_proced_princ(y.nr_atendimento,2),1,10),
			y.nr_seq_queixa,
			obter_categoria_atendimento(y.nr_atendimento),
			y.nr_seq_forma_chegada,
			y.nr_seq_indicacao,
			Obter_Convenio_Glosa_Atend(y.nr_atendimento),
			substr(obter_categoria_glosa_atend(y.nr_atendimento),1,10),
			substr(Obter_Empresa_Atend(y.nr_atendimento, 'A', 'C'), 1, 10),
			(SELECT cd_empresa from estabelecimento where cd_estabelecimento = y.cd_estabelecimento),
			substr(obter_qt_peso_sv(y.nr_atendimento),1,10),
			y.nr_seq_classificacao,
			y.ie_carater_inter_sus,
			substr(eis_obter_faixa_etaria((patient_age)::numeric ),1,50) ds_faixa_etaria,
			substr(lpad(patient_age,3,'0'),1,50) ds_idade,
			(patient_age)::numeric  cd_idade,
			obter_nome_pf(y.cd_medico_resp) nm_pessoa_fisica,
			obter_nome_pf(y.cd_pessoa_fisica) nm_paciente,
			(select ds_classificacao from classificacao_atendimento where nr_sequencia = y.NR_SEQ_CLASSIFICACAO) ds_classif_atend,
			substr(obter_valor_dominio(5, obter_dados_pf(y.cd_pessoa_fisica, 'EC')), 1, 15) ds_estado_civil,
			(select nr_seq_coordenadoria from sus_municipio where cd_municipio_ibge = y.cd_municipio_ibge) nr_control,
			coalesce(y.ie_sexo,'X'),
			substr(coalesce(obter_desc_queixa(y.nr_seq_queixa),wheb_mensagem_pck.get_texto(793287)),1,255),
			substr(coalesce(sus_obter_desc_carater_atend(y.ie_carater_inter_sus),wheb_mensagem_pck.get_texto(793287)),1,100),
			cd_cat_cid,
			obter_desc_categoria_cid(cd_cat_cid),
			Obter_Se_Unidade_Temp(y.cd_setor_atendimento, dt_Parametro_w, y.cd_unidade_basica, y.cd_unidade_compl),
			obter_desc_cid(obter_cid_atendimento(y.nr_atendimento, 'P')),
			obter_especialidade_medico(y.cd_medico_resp,'C')
	from (  select 	a.nr_atendimento,
					obter_cid_atendimento(a.nr_atendimento, 'P') cd_cid_atend,
					obter_categoria_cid(obter_cid_atendimento(a.nr_atendimento, 'P')) cd_cat_cid,
					z.cd_municipio_ibge,
					a.cd_medico_resp,
					b.cd_setor_atendimento,
					b.cd_unidade_basica, 
					b.cd_unidade_compl,
					a.ie_carater_inter_sus,
					a.nr_seq_queixa,
					w.ie_sexo,
					a.cd_pessoa_fisica,
					a.NR_SEQ_CLASSIFICACAO,
					a.cd_estabelecimento,
					trunc(pkg_date_utils.get_DiffDate(w.dt_nascimento, clock_timestamp(), 'YEAR')) patient_age,
					w.ie_estado_civil,
					a.nr_seq_indicacao,
					a.nr_seq_forma_chegada,
					b.dt_saida_interno,
					a.ie_clinica_alta,
					a.dt_entrada,
					a.cd_motivo_alta,
					a.dt_alta,
					b.dt_saida_unidade,
					b.dt_entrada_unidade,
					b.cd_tipo_acomodacao,
					a.ie_clinica,
					a.cd_procedencia,
					a.ie_tipo_atendimento
			FROM pessoa_fisica w, atend_paciente_unidade b, atendimento_paciente a
LEFT OUTER JOIN compl_pessoa_fisica z ON (a.cd_pessoa_fisica = z.cd_pessoa_fisica AND 1 = z.ie_tipo_complemento)
WHERE a.nr_atendimento = b.nr_atendimento and a.cd_pessoa_fisica = w.cd_pessoa_fisica and b.cd_setor_atendimento = cd_setor_atendimento_w   and b.cd_unidade_basica    = cd_unidade_basica_w and b.cd_unidade_compl     = cd_unidade_compl_w and b.dt_entrada_unidade   < dt_parametro_fim_w and b.dt_saida_interno 	>= dt_parametro_w and (((ie_cancelado_censo_w = 'N') and (coalesce(a.dt_cancelamento::text, '') = '')) or (ie_cancelado_censo_w = 'S')) and ( ie_censo_passagem_setor_w = 'N' or coalesce(b.ie_passagem_setor,'N') = 'N' ) and not exists (select	x.cd_motivo_alta
						from	motivo_alta x
						where	x.ie_censo_diario = 'N'
						and	a.cd_motivo_alta 	= x.cd_motivo_alta)
    	 ) y
	 order by 10 desc;

C09 CURSOR FOR
SELECT
		cd_estabelecimento,
		cd_setor_atendimento,
		cd_unidade_basica,
		cd_unidade_compl,
		ie_situacao,
		cd_pessoa_fisica,
		sum(nr_admissoes),
		sum(nr_altas),
		sum(nr_obitos),
		sum(nr_transf_entrada),
		sum(nr_transf_Saida),
		sum(nr_pacientes),
		ie_clinica,
		cd_convenio,
		sum(qt_leito_livre),
		cd_tipo_acomodacao,
		ie_tipo_atendimento,
		cd_procedencia,
		cd_medico,
		hr_alta,
		sum(qt_obito_apos24h),
		ie_clinica_alta,
		nr_seq_origem,
		sum(qt_admitido_alta_dia),
		cd_cid_principal,
		ie_temp,
		sum(coalesce(qt_base_ocup,0)),
		cd_procedimento,
		ie_origem_proced,
		cd_motivo_alta,
		nr_seq_queixa,
		cd_categoria,
		nr_seq_forma_chegada,
		dt_entrada,
		nr_seq_indicacao,
		cd_convenio_glosa,
		cd_categoria_glosa,
		sum(nr_transf_ent_interna),
		sum(nr_transf_ent_externa),
		sum(nr_transf_saida_interna),
		sum(nr_transf_saida_externa),
		nr_seq_classificacao,
		ie_sexo,
		cd_idade,
		ds_idade,
		nm_pessoa_fisica,
		ds_cid_principal,
		ie_carater_inter_sus,
		sum(CASE WHEN Obter_Se_Unidade_Temp(cd_setor_atendimento, dt_referencia, cd_unidade_basica, cd_unidade_compl)='N' THEN (CASE WHEN IE_SITUACAO='P' THEN nr_pacientes  ELSE 0 END )  ELSE (CASE WHEN coalesce(IE_SITUACAO::text, '') = '' THEN  0  ELSE nr_pacientes END ) END ),
		sum(CASE WHEN Obter_Se_Unidade_Temp(cd_setor_atendimento, dt_referencia, cd_unidade_basica, cd_unidade_compl)='S' THEN  1  ELSE 0 END ),
		obter_especialidade_medico(cd_medico,'C'),
		substr(obter_descricao_procedimento(cd_procedimento, ie_origem_proced),1,100),
		substr(obter_nome_estabelecimento(cd_estabelecimento),1,80),
		substr(obter_desc_motivo_alta(cd_motivo_alta),1,255),
		Obter_classif_etaria(cd_estabelecimento,cd_pessoa_fisica,'C'),
		obter_valor_dominio(1698, Obter_classif_etaria(cd_estabelecimento,cd_pessoa_fisica,'C')),
		substr(coalesce(obter_compl_pf(cd_pessoa_fisica,1,'CDM'),null),1,100),
		substr(obter_nome_convenio(cd_convenio)||' - '||obter_categoria_convenio(cd_convenio,cd_categoria),1,200),
		substr(coalesce(obter_desc_forma_chegada(nr_seq_forma_chegada),obter_texto_tasy(1098949,null)),1,255),
		substr(coalesce(obter_nome_convenio(cd_convenio_glosa),obter_texto_tasy(1098949,null)),1,100),
		substr(coalesce(obter_categoria_convenio(cd_convenio_glosa,cd_categoria_glosa),obter_texto_tasy(1098949,null)),1,200),
		substr(coalesce(OBTER_DESC_INDICACAO(NR_SEQ_INDICACAO),obter_texto_tasy(1098949,null)),1,100)
from 	Eis_Ocupacao_Hospitalar
where 	PKG_DATE_UTILS.start_of(dt_referencia, 'month', 0) = dt_parametro_mes_w
and		ie_periodo		= 'D'
group by
		cd_estabelecimento,
		cd_setor_atendimento,
		cd_unidade_basica,
		cd_unidade_compl,
		ie_situacao,
		cd_pessoa_fisica,
		ie_clinica,
		cd_convenio,
		cd_tipo_acomodacao,
		ie_tipo_atendimento,
		cd_procedencia,
		cd_medico,
		hr_alta,
		ie_clinica_alta,
		nr_seq_origem,
		cd_cid_principal,
		ie_temp,
		cd_procedimento,
		ie_origem_proced,
		cd_motivo_alta,
		nr_seq_queixa,
		cd_categoria,
		nr_seq_forma_chegada,
		dt_entrada,
		nr_seq_indicacao,
		cd_convenio_glosa,
		cd_categoria_glosa,
		nr_seq_classificacao,
		ie_sexo,
		cd_idade,
		ds_idade,
		nm_pessoa_fisica,
		ds_cid_principal,
		ie_carater_inter_sus;

C03 CURSOR FOR
	SELECT	coalesce(max(nr_sequencia),0),
			coalesce(max(obter_estab_atend(nr_atendimento)),0)
	from	unidade_atend_hist
	where	nr_seq_unidade	= nr_seq_interno_w
	and		dt_parametro_w between PKG_DATE_UTILS.start_of(dt_historico,'dd',0)  and fim_dia(coalesce(dt_fim_historico, clock_timestamp()));


BEGIN
nr_sequencia_w := Gravar_Log_Indicador(71, wheb_mensagem_pck.get_texto(793288), clock_timestamp(), PKG_DATE_UTILS.start_of(dt_parametro_p,'dd',0), nm_usuario_p, nr_sequencia_w);
dt_parametro_fim_w                    := PKG_DATE_UTILS.start_of(dt_parametro_p, 'dd', 0) + 1 - 1/86400;
dt_parametro_w                        := PKG_DATE_UTILS.start_of(dt_parametro_p,'dd', 0);
dt_parametro_mes_w                    := PKG_DATE_UTILS.start_of(dt_parametro_w, 'month', 0);
/* Excluir os Registros caso ja tenha sido rodada a rotina  */

if (dt_parametro_w > PKG_DATE_UTILS.start_of(clock_timestamp(), 'dd', 0)) then
	--'A data nao pode ser superior a data atual!'
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(188111);
end if;
delete from eis_ocupacao_hospitalar
where dt_referencia = dt_parametro_w;
COMMIT;

delete 	from log_geracao_censo
where 	dt_referencia = dt_parametro_w;
COMMIT;

select	coalesce(max(ie_considera_censo_passagem),'N'),
		coalesce(max(ie_considera_tipo_acomod),'N')
into STRICT	ie_considera_censo_passagem_w,
		ie_considera_tipo_acomod_w
from	parametro_atendimento;

select	coalesce(max(ie_cancelado_censo),'S'),
		coalesce(max(ie_considera_censo_inativo),'N'),
		coalesce(max(ie_censo_passagem_setor),'N')
into STRICT	ie_cancelado_censo_w,
		ie_censo_inativo_w,
		ie_censo_passagem_setor_w
from	parametro_atendimento
where	cd_estabelecimento = obter_estabelecimento_ativo;

/* Obter as Unidades de internacao  */

OPEN C01;
LOOP
FETCH C01 into
	cd_setor_atendimento_w,
	cd_unidade_basica_w,
	cd_unidade_compl_w,
	ie_status_unidade_w,
	ie_temporario_w,
	ie_situacao_w,
	nr_seq_interno_w,
	nr_seq_agrupamento_w,
	ds_agrupamento_w,
	cd_estabelecimento_base_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ie_status_paciente_w		:= 'L';
	nr_paciente_unid_w		:= 0;
	nr_pacientes_w             	:= 0;
	qt_leito_livre_w		:= 0;
	qt_admitido_alta_dia_w	:= 0;
	nr_atendimento_ant_w		:= 0;
	select Obter_Se_Unidade_Temp(
			cd_setor_atendimento_w,
			dt_parametro_p,
			cd_unidade_basica_w,
			cd_unidade_compl_w)
	into STRICT	ie_temp_w
	;

	OPEN C02;
	LOOP
	FETCH C02 into
		nr_atendimento_w,
		ie_tipo_atendimento_w,
		cd_procedencia_w,
		cd_estabelecimento_w,
		cd_pessoa_fisica_w,
		cd_medico_w,
		ie_clinica_w,
		cd_tipo_acomodacao_w,
		dt_entrada_unidade_w,
		dt_saida_unidade_w,
		dt_alta_w,
		cd_motivo_alta_w,
		dt_entrada_w,
		ie_clinica_alta_w,
		cd_cid_principal_w,
		dt_saida_interno_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_queixa_w,
		cd_categoria_w,
		nr_seq_forma_chegada_w,
		nr_seq_indicacao_w,
		cd_convenio_glosa_w,
		cd_categoria_glosa_w,
		cd_empresa_w,
		cd_empresa_estab_w,
		qt_peso_w,
		nr_seq_classificacao_w,
		ie_carater_inter_sus_w,
		ds_faixa_etaria_w,
		ds_idade_w,
		cd_idade_w,
		nm_pessoa_fisica_w,
		nm_paciente_w,
		ds_classif_atend_w,
		ds_estado_civil_w,
		nr_control_w,
		ie_sexo_w,
		ds_queixa_w,
		ds_carater_atend_w,
		cd_categoria_cid_w,
		ds_categoria_cid_w,
		ie_leito_temp_w,
		ds_cid_principal_w,
		cd_espec_medico_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */	
	qt_Obito_p24h_w				:= 0;
	nr_obitos_w            		:= 0;
	nr_transf_entrada_w     	:= 0;
	nr_transf_ent_externa_w		:= 0;
	nr_transf_ent_interna_w		:= 0;
	nr_transf_saida_interna_w	:= 0;
	nr_transf_saida_externa_w	:= 0;
	nr_transf_saida_w          	:= 0;
	nr_altas_w                 	:= 0;
	nr_admissoes_w             	:= 0;
	nr_pacientes_w             	:= 0;
	hr_alta_w					:= 0;
	qt_admitido_alta_dia_w		:= 0;

	cd_grupo_proc_w				:= null;
	cd_especialidade_proc_w		:= null;
	cd_area_proc_w				:= null;

	/*SUS*/

	cd_grupo_w					:= null;
	cd_subgrupo_w				:= null;
	cd_forma_organizacao_w		:= null;

	select	coalesce(max(ie_obito),'N')
	into STRICT	ie_obito_w
	from	motivo_alta
	where	cd_motivo_alta	= cd_motivo_alta_w;
	begin
	select	coalesce(min(a.cd_convenio),0)
	into STRICT	cd_convenio_w
	from	atend_categoria_convenio a
	where	a.nr_atendimento = nr_atendimento_w;
	select	coalesce(min(a.nr_seq_origem),0)
	into STRICT	nr_seq_origem_w
	from	atend_categoria_convenio a
	where	a.nr_atendimento = nr_atendimento_w
	and	a.cd_convenio	 = cd_convenio_w;
--------------  Obter primeira/ultima entrada no setor do setor ------------
	select	min(a.dt_entrada_unidade),
			max(a.dt_saida_unidade)
	into STRICT	dt_prim_entrada_unidade_w,
			dt_ult_saida_unidade_w
	from	setor_atendimento b, atend_paciente_unidade a, atendimento_paciente c
	where	a.nr_atendimento = nr_atendimento_w
	and		a.cd_setor_atendimento = b.cd_setor_atendimento
	and		a.nr_Atendimento = c.nr_Atendimento
	and 	b.cd_classif_setor in (3,4,8)
	and ( ie_censo_passagem_setor_w = 'N' or coalesce(a.ie_passagem_setor,'N') = 'N' )
	and		((ie_considera_censo_passagem_w = 'S' AND b.ie_ocup_hospitalar = 'S') or (ie_considera_censo_passagem_w = 'N'));
		
	if (ie_obito_w = 'S') and (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') then
		dt_ult_saida_unidade_w := dt_alta_w;
	end if;
	
-----  Teste da entrada do paciente do setor ---------------------------------
	if  	dt_entrada_unidade_w >= dt_parametro_w then
	    	begin
	    	if	dt_entrada_unidade_w = dt_prim_entrada_unidade_w then
			nr_admissoes_w       := 1;
		else
            		begin
/* -------------------------- Obter o setor anterior ao que esta sendo analisado  */

			select	coalesce(max(x.cd_setor_atendimento), cd_setor_atendimento_w)
			into STRICT	cd_setor_atendimento_aux_w
			from	atend_paciente_unidade x
            where	x.nr_atendimento	= nr_atendimento_w
			and		x.dt_entrada_unidade	= (
				SELECT	max(dt_entrada_unidade)
				from	setor_atendimento b, atend_paciente_unidade a
				where	a.nr_atendimento	= nr_atendimento_w
				and		a.dt_saida_unidade	<= dt_entrada_unidade_w
				and		a.dt_saida_unidade	>= dt_parametro_w
				and		a.cd_setor_atendimento	= b.cd_setor_atendimento
				and		b.cd_classif_setor in (3,4,8))
				and ( ie_censo_passagem_setor_w = 'N' or coalesce(x.ie_passagem_setor,'N') = 'N' );
			if  	cd_setor_atendimento_aux_w  <> cd_setor_atendimento_w then
				nr_transf_entrada_w		:= 1;
			end if;

			select	max(nr_seq_agrupamento)
			into STRICT	nr_seq_agrupamento_aux_w
			from	setor_atendimento
			where	cd_setor_atendimento = cd_setor_atendimento_aux_w;

			if (coalesce(nr_seq_agrupamento_aux_w,0) + coalesce(nr_seq_agrupamento_w,0) > 0) then

				if  	coalesce(nr_seq_agrupamento_aux_w,0)  <> coalesce(nr_seq_agrupamento_w,0) then
					nr_transf_ent_externa_w		:= 1;
				else
					nr_transf_ent_interna_w		:= 1;
				end if;

			end if;

                        end;
		end if;
		end;
	end if;
-----  Teste da Saida do paciente do setor ---------------------------------
	if	dt_saida_unidade_w > dt_parametro_fim_w then
		begin
		--
	    select 	count(1)
		into STRICT 	Leito_utilizado_w
		from	eis_ocupacao_hospitalar
		where	dt_referencia        	= dt_parametro_w
		and 	cd_unidade_basica    	= cd_unidade_basica_w
		and 	cd_unidade_compl	= cd_unidade_compl_w
		and 	cd_setor_atendimento 	= cd_setor_atendimento_w
		and		((cd_pessoa_fisica	= cd_pessoa_fisica_w) or (coalesce(cd_pessoa_fisica::text, '') = ''))
		and		ie_periodo		= 'D'
		and 	nr_pacientes		> 0;

		if (Leito_utilizado_w = 0) then
		   	nr_pacientes_w := 1;
		else
		   	nr_pacientes_w := 0;
		end if;
		ie_status_paciente_w     := 'P';
		end;
	else
		begin
-------------	if	(dt_alta_w <= dt_parametro_fim_w) and -------------- Marcus
		qt_admitido_alta_dia_w	:= 0;
		if (cd_motivo_alta_w IS NOT NULL AND cd_motivo_alta_w::text <> '') and (dt_saida_unidade_w 	= dt_ult_saida_unidade_w) and (PKG_DATE_UTILS.start_of(dt_entrada_w, 'dd', 0) = PKG_DATE_UTILS.start_of(dt_saida_unidade_w, 'dd', 0)) and (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') and (nr_atendimento_ant_w	<> nr_atendimento_w) then
			begin
			qt_admitido_alta_dia_w	:= 1;
			end;
		end if;

		if (cd_motivo_alta_w IS NOT NULL AND cd_motivo_alta_w::text <> '') and (ie_obito_w = 'S') and (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') then
			
			select	max(b.dt_saida_unidade)
			into STRICT	dt_ult_saida_unidade_ww
			FROM atend_paciente_unidade b, atendimento_paciente a
LEFT OUTER JOIN compl_pessoa_fisica z ON (a.cd_pessoa_fisica = z.cd_pessoa_fisica AND 1 = z.ie_tipo_complemento)
WHERE a.nr_atendimento = b.nr_atendimento and a.nr_atendimento = nr_atendimento_w and b.cd_setor_atendimento = cd_setor_atendimento_w   and b.cd_unidade_basica    = cd_unidade_basica_w and b.cd_unidade_compl     = cd_unidade_compl_w and b.dt_entrada_unidade   < dt_parametro_fim_w and b.dt_saida_interno 	>= dt_parametro_w and dt_alta_w between b.dt_entrada_unidade and b.dt_saida_unidade and ( ie_censo_passagem_setor_w = 'N' or coalesce(b.ie_passagem_setor,'N') = 'N' ) and (((ie_cancelado_censo_w = 'N') and (coalesce(a.dt_cancelamento::text, '') = '')) or (ie_cancelado_censo_w = 'S')) and not exists (SELECT	x.cd_motivo_alta
					from	motivo_alta x
					where	x.ie_censo_diario = 'N'
					and	a.cd_motivo_alta 	= x.cd_motivo_alta);
		end if;
		
		
		if (cd_motivo_alta_w IS NOT NULL AND cd_motivo_alta_w::text <> '') and (PKG_DATE_UTILS.start_of(dt_saida_unidade_w,'mi', 0) = PKG_DATE_UTILS.start_of(dt_ult_saida_unidade_w,'mi', 0) or
			 PKG_DATE_UTILS.start_of(dt_saida_unidade_w,'mi', 0) = PKG_DATE_UTILS.start_of(dt_ult_saida_unidade_ww,'mi', 0)) then
			hr_alta_w		:= Campo_Numerico(PKG_DATE_UTILS.extract_field('HOUR',dt_alta_w));
			if ((PKG_DATE_UTILS.start_of(dt_alta_w,'dd', 0) = dt_parametro_w)
				or (PKG_DATE_UTILS.start_of(dt_ult_saida_unidade_ww,'dd',0) = dt_parametro_w)) then
				if (ie_obito_w = 'S') then
					begin
					nr_obitos_w	:= 1;					
					if	((dt_entrada_w + 1) < dt_alta_w) then
						qt_Obito_p24h_w	:= 1;
					end if;
					end;
				elsif (dt_saida_interno_w < pkg_date_utils.get_date(2999, 1, 1, 0)) then
	 				nr_altas_w	:= 1;					
				end if;
			end if;
		else
			begin
/* -------------------- Obter o setor seguinte ao que esta sendo analisado  */

			select	max(a.dt_entrada_unidade)
			into STRICT 	dt_ultima_movimentacao_w
			from	atend_paciente_unidade a,
					setor_atendimento b
			where	a.nr_atendimento       = nr_atendimento_w
			and 	a.cd_setor_atendimento = b.cd_setor_atendimento
			and		b.cd_classif_setor in (3,4,8)
			and ( ie_censo_passagem_setor_w = 'N' or coalesce(a.ie_passagem_setor,'N') = 'N' );
			
			
			select	coalesce(max(x.cd_setor_atendimento), cd_setor_atendimento_w)
			into STRICT	cd_setor_atendimento_aux_w
			from	atend_paciente_unidade x
			where	x.nr_atendimento       = nr_atendimento_w
			and		x.dt_entrada_unidade   =
					(SELECT	Min(a.dt_entrada_unidade)
					from	setor_atendimento b, atend_paciente_unidade a
					where	a.nr_atendimento = nr_atendimento_w
					and	a.dt_entrada_unidade   > dt_entrada_unidade_w
					and	a.dt_entrada_unidade  <= dt_parametro_fim_w
					and	a.cd_setor_atendimento = b.cd_setor_atendimento
					and	b.cd_classif_setor in (3,4,8))
			and ( ie_censo_passagem_setor_w = 'N' or coalesce(x.ie_passagem_setor,'N') = 'N' )
			and 	dt_ultima_movimentacao_w > (dt_parametro_fim_w - 1);

			if  	cd_setor_atendimento_w <> cd_setor_atendimento_aux_w then
				nr_transf_saida_w    := 1;
			end if;

			if (ie_origem_proced_w = 7) then

				select	max(substr(Sus_Obter_Estrut_Proc(cd_procedimento, ie_origem_proced, 'C', 'G'),1,2)),
						max(substr(Sus_Obter_Estrut_Proc(cd_procedimento, ie_origem_proced, 'C', 'S'),1,4)),
						max(substr(Sus_Obter_Estrut_Proc(cd_procedimento, ie_origem_proced, 'C', 'F'),1,6))
				into STRICT	cd_grupo_w,
						cd_subgrupo_w,
						cd_forma_organizacao_w
				from	sus_procedimento
				Where 	ie_origem_proced = ie_origem_proced_w
				and 	cd_procedimento = cd_procedimento_w;
			else
				select	max(cd_grupo_proc),
						max((obter_dados_estrut_proc(cd_procedimento,ie_origem_proced,'C','E'))::numeric ),
						max((obter_dados_estrut_proc(cd_procedimento,ie_origem_proced,'C','A'))::numeric )
				into STRICT	cd_grupo_proc_w,
						cd_especialidade_proc_w,
						cd_area_proc_w
				from	procedimento
				where	cd_procedimento = cd_procedimento_w
				and		ie_origem_proced = ie_origem_proced_w;
			end if;

			select	max(nr_seq_agrupamento)
			into STRICT	nr_seq_agrupamento_aux_w
			from	setor_atendimento
			where	cd_setor_atendimento = cd_setor_atendimento_aux_w;

			if (coalesce(nr_seq_agrupamento_aux_w,0) + coalesce(nr_seq_agrupamento_w,0) > 0) then

				if  	coalesce(nr_seq_agrupamento_aux_w,0)  <> coalesce(nr_seq_agrupamento_w,0) then
					nr_transf_saida_externa_w		:= 1;
				else
					nr_transf_saida_interna_w		:= 1;
				end if;

			end if;
			end;
		end if;
		end;
	end if;
	nr_paciente_unid_w	:= nr_paciente_unid_w + nr_pacientes_w;
-- Inserir registro na tabela -----------------------------------------------
	if (nr_pacientes_w + nr_obitos_w + nr_transf_entrada_w +
		nr_transf_saida_w + nr_altas_w + nr_admissoes_w) > 0 then
		begin


			select	substr(max(sus_obter_desc_grupo(cd_grupo_w)),1,40),
					substr(max(sus_obter_desc_subgrupo(cd_subgrupo_w)),1,40),
					substr(max(sus_obter_Desc_Forma_Org(cd_forma_organizacao_w)),1,40),
					substr(max(obter_desc_grupo_proc(cd_grupo_proc_w)),1,40),
					substr(max(obter_desc_area_procedimento(cd_area_proc_w)),1,40),
					substr(max(obter_desc_especialidade_proc(cd_especialidade_proc_w)),1,40),
					substr(max(obter_descricao_procedimento(cd_procedimento_w,ie_origem_proced_w)),1,100),
					obter_tipo_convenio(cd_convenio_w)
			into STRICT	ds_grupo_w,
					ds_subgrupo_w,
					ds_forma_organizacao_w,
					ds_grupo_proc_w,
					ds_area_proc_w,
					ds_especialidade_proc_w,
					ds_proced_principal_w,
					ie_tipo_convenio_w
			;


			insert into EIS_Ocupacao_Hospitalar(
				cd_estabelecimento, dt_referencia, ie_periodo,
				cd_setor_atendimento, cd_unidade_basica,
				cd_unidade_compl, ie_situacao, nr_admissoes,
				nr_altas, nr_obitos, nr_transf_entrada,
				nr_transf_Saida, nr_pacientes,
				qt_leito_livre, ie_clinica,
				cd_convenio,cd_tipo_acomodacao,
				cd_pessoa_fisica, ie_tipo_atendimento,
				cd_procedencia, cd_medico, hr_alta,
				qt_obito_apos24h,
				ie_clinica_alta,
				nr_seq_origem,
				qt_admitido_alta_dia,
				cd_cid_principal,
				ie_temp,
				cd_procedimento, ie_origem_proced,
				cd_motivo_alta,
				nr_seq_queixa,
				cd_categoria,
				nr_seq_forma_chegada,
				dt_entrada,
				nr_seq_indicacao,
				cd_convenio_glosa,
				cd_categoria_glosa,
				cd_empresa_conv,
				cd_empresa,
				qt_peso,
				nr_seq_classificacao,
				nr_transf_ent_interna,
				nr_transf_ent_externa,
				nr_transf_saida_interna,
				nr_transf_saida_externa,
				cd_grupo,
				cd_subgrupo,
				cd_forma_organizacao,
				cd_grupo_proc,
				cd_area_proc,
				cd_especialidade_proc,
				ie_carater_inter_sus,
				ds_faixa_etaria,
				ds_idade,
				cd_idade,
				nm_pessoa_fisica,
				nm_paciente,
				ds_grupo,
				ds_subgrupo,
				ds_forma_organizacao,
				ds_grupo_proc,
				ds_area_proc,
				ds_especialidade_proc,
				ds_proced_principal,
				ds_classif_atend,
				ds_estado_civil,
				nr_control,
				ie_sexo,
				ds_agrupamento,
				ds_queixa,
				ds_carater_atend,
				cd_categoria_cid,
				ds_categoria_cid,
				ie_leito_temp,
				ds_cid_principal,
				cd_espec_medico,
				ie_tipo_convenio,
				dt_alta,
				qt_hora_alta,
				ds_referencia,
				cd_dia,
				nr_pac_dia,
				qt_temp,
				nr_transf_ent_int,
				nr_transf_ent_ext,
  				nr_transf_saida_int,
				nr_transf_saida_ext,
				cd_especialidade,
				ds_procedimento,
				ds_estabelecimento,
				ds_motivo_alta,
				cd_classif_etaria,
				ds_classif_etaria,
				cd_estabelecimento_base,
				cd_municipio_ibge,
				ds_categoria,
				ds_forma_chegada,
				nr_horario,
				ds_convenio_glosa,
				ds_categoria_glosa,
				ds_indicacao,
				ds_empresa_conv)
			(SELECT	cd_estabelecimento_w,
				dt_Parametro_w,
				'D',
				cd_setor_atendimento_w,
				cd_unidade_basica_w,
				cd_unidade_compl_w,
				ie_status_paciente_w,
				nr_admissoes_w,
				nr_altas_w,
				nr_obitos_w,
				nr_transf_entrada_w,
				nr_transf_Saida_w,
				nr_pacientes_w,
				qt_leito_livre_w,
				ie_clinica_w,
				coalesce(cd_convenio_w,0),
				cd_tipo_acomodacao_w,
				cd_pessoa_fisica_w,
				ie_tipo_atendimento_w,
				cd_procedencia_w,
				cd_medico_w,
				hr_alta_w,
				qt_Obito_p24h_w,
				coalesce(ie_clinica_alta_w,ie_clinica_padrao_w),
				coalesce(nr_seq_origem_w, 0), qt_admitido_alta_dia_w, cd_cid_principal_w,
				ie_temp_w,
				cd_procedimento_w, ie_origem_proced_w,
				cd_motivo_alta_w,
				nr_seq_queixa_w,
				cd_categoria_w,
				nr_seq_forma_chegada_w,
				dt_entrada_w,
				nr_seq_indicacao_w,
				cd_convenio_glosa_w,
				cd_categoria_glosa_w,
				cd_empresa_w,
				cd_empresa_estab_w,
				qt_peso_w,
				nr_seq_classificacao_w,
				nr_transf_ent_interna_w,
				nr_transf_ent_externa_w,
				nr_transf_saida_interna_w,
				nr_transf_saida_externa_w,
				cd_grupo_w,
				cd_subgrupo_w,
				cd_forma_organizacao_w,
				cd_grupo_proc_w,
				cd_area_proc_w,
				cd_especialidade_proc_w,
				ie_carater_inter_sus_w,
				ds_faixa_etaria_w,
				ds_idade_w,
				cd_idade_w,
				nm_pessoa_fisica_w,
				nm_paciente_w,
				ds_grupo_w,
				ds_subgrupo_w,
				ds_forma_organizacao_w,
				ds_grupo_proc_w,
				ds_area_proc_w,
				ds_especialidade_proc_w,
				ds_proced_principal_w,
				ds_classif_atend_w,
				ds_estado_civil_w,
				nr_control_w,
				ie_sexo_w,
				coalesce(ds_agrupamento_w,wheb_mensagem_pck.get_texto(793289)),
				ds_queixa_w,
				ds_carater_atend_w,
				cd_categoria_cid_w,
				ds_categoria_cid_w,
				ie_leito_temp_w,
				ds_cid_principal_w,
				cd_espec_medico_w,
				ie_tipo_convenio_w,
				dt_alta_w,
				(to_char(hr_alta_w,'00'))::numeric ,
				to_char(dt_parametro_w, 'dd/mm/yyyy'),
				(to_char(dt_parametro_w, 'd'))::numeric ,
				sum(CASE WHEN Obter_Se_Unidade_Temp(cd_setor_atendimento_w, dt_Parametro_w, cd_unidade_basica_w, cd_unidade_compl_w)='N' THEN (CASE WHEN ie_status_paciente_w='P' THEN nr_pacientes_w  ELSE 0 END )  ELSE (CASE WHEN coalesce(ie_status_paciente_w::text, '') = '' THEN  0  ELSE nr_pacientes_w END ) END ),
				sum(CASE WHEN Obter_Se_Unidade_Temp(cd_setor_atendimento_w, dt_Parametro_w, cd_unidade_basica_w, cd_unidade_compl_w)='S' THEN  1  ELSE 0 END ),
				nr_transf_ent_interna_w,
				nr_transf_ent_externa_w,
				nr_transf_saida_interna_w,
				nr_transf_saida_externa_w,
				obter_especialidade_medico(cd_medico_w,'C'),
				substr(obter_descricao_procedimento(cd_procedimento_w, ie_origem_proced_w),1,100),
				substr(obter_nome_estabelecimento(cd_estabelecimento_w),1,80),
				substr(obter_desc_motivo_alta(cd_motivo_alta_w),1,255),
				Obter_classif_etaria(cd_estabelecimento_w,cd_pessoa_fisica_w,'C'),
				obter_valor_dominio(1698, Obter_classif_etaria(cd_estabelecimento_w,cd_pessoa_fisica_w,'C')),
				cd_estabelecimento_base_w,
				substr(coalesce(obter_compl_pf(cd_pessoa_fisica_w,1,'CDM'),null),1,100),
				substr(obter_nome_convenio(cd_convenio_w)||' - '||obter_categoria_convenio(cd_convenio_w,cd_categoria_w),1,200),
				substr(coalesce(obter_desc_forma_chegada(nr_seq_forma_chegada_w),obter_texto_tasy(1098949,null)),1,255),
				(to_char(dt_entrada_w,'hh24'))::numeric ,
				substr(coalesce(obter_nome_convenio(cd_convenio_glosa_w),obter_texto_tasy(1098949,null)),1,100),
				substr(coalesce(obter_categoria_convenio(cd_convenio_glosa_w,cd_categoria_glosa_w),obter_texto_tasy(1098949,null)),1,200),
				substr(coalesce(OBTER_DESC_INDICACAO(nr_seq_indicacao_w),obter_texto_tasy(1098949,null)),1,100),
				substr(coalesce(obter_nome_emp_ref(cd_empresa_w),obter_texto_tasy(1098949,null)),1,100)
			);


			insert into log_geracao_censo(dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							dt_saida_unidade,
							nr_atendimento,
							cd_setor_atendimento,
							dt_referencia,
							dt_entrada_unidade,
							nr_seq_unidade)
					values (clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							dt_saida_unidade_w,
							nr_Atendimento_w,
							cd_Setor_Atendimento_w,
							dt_Parametro_w,
							dt_entrada_unidade_w,
							nr_seq_interno_w);

		end;
	end if;
	nr_atendimento_ant_w	:= nr_atendimento_w;
	end;
	END LOOP;
	CLOSE C02;

	if (nr_paciente_unid_w = 0) and (ie_situacao_w = 'A') 	and (ie_temporario_w = 'N') then
		begin
		/* Ricardo/Marcus - 23/05/2005 - Tiramos os status ie_status_unidade_w in ('L','I', 'O')  do if e colocamos os <> 'P' */

		ie_status_unidade_w	:= 'L';
		ie_status_hist_w	:= null;
		
		ie_situacao_leito_w := 'A';
		open	c03;
		loop
		fetch	c03 into
			nr_seq_hist_w,
			cd_estab_atend_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin

			if (nr_seq_hist_w <> 0) THEN
				select	ie_status_unidade, ie_situacao
				into STRICT	ie_status_hist_w, ie_situacao_leito_w
				from	unidade_atend_hist
				where	nr_sequencia = nr_seq_hist_w;
			end if;
			end;
		end loop;
		close c03;
		IF ((ie_situacao_leito_w = 'A') or (ie_censo_inativo_w = 'N')) then
			if (coalesce(cd_estab_atend_w,0)	= 0) then
			  select	max(cd_Estabelecimento)
			  into STRICT	cd_estab_atend_w
			  from	setor_atendimento
			  where	cd_setor_atendimento	= cd_setor_atendimento_w;
			end if;

			qt_leito_livre_w	:= 1;
			

			insert 	into EIS_Ocupacao_Hospitalar(
				  	cd_estabelecimento,
				  	dt_referencia,
				  	ie_periodo,
				  	cd_setor_atendimento,
				  	cd_unidade_basica,
				  	cd_unidade_compl,
				  	ie_situacao,
				  	nr_admissoes,
				  	nr_altas,
				  	nr_obitos,
				  	nr_transf_entrada,
				  	nr_transf_Saida,
				  	nr_pacientes,
				  	qt_leito_livre,
				  	cd_medico,
				  	hr_alta,
				  	qt_obito_apos24h,
				  	cd_convenio,
				  	ie_clinica_alta,
				  	nr_seq_origem,
				  	cd_tipo_acomodacao,
				  	qt_admitido_alta_dia,
				  	cd_cid_principal,
				  	ie_temp,
				  	cd_motivo_alta,
				  	dt_entrada,
				  	dt_alta,
				  	cd_empresa,
				  	ds_referencia,
				  	cd_dia,
				  	cd_especialidade,
				  	ds_estabelecimento,
				 	ds_motivo_alta,
				 	cd_estabelecimento_base,
				 	ds_empresa_conv
				 )
			(SELECT	cd_estab_atend_w,
				  	dt_Parametro_w,
				  	'D',
				  	cd_setor_atendimento_w,
				  	cd_unidade_basica_w,
				  	cd_unidade_compl_w,
				  	coalesce(ie_status_hist_w, ie_status_unidade_w),
				  	0,
				  	0,
				  	0,
				  	0,
				  	0,
				  	0,
				  	qt_leito_livre_w,
				  	null,
				  	0,
				  	0,
				  	0,
				  	ie_clinica_padrao_w, 0,
				  	cd_tipo_acomodacao_w,
				  	0, cd_cid_principal_w,
				  	ie_temp_w,
				  	cd_motivo_alta_w,
				  	clock_timestamp(),
				  	dt_alta_w,
				  	cd_empresa_estab_w,
				  	to_char(dt_parametro_w, 'dd/mm/yyyy'),
				  	(to_char(dt_parametro_w, 'd'))::numeric ,
				 	obter_especialidade_medico(cd_medico_w,'C'),
				 	substr(obter_nome_estabelecimento(cd_estab_atend_w),1,80),
				 	substr(obter_desc_motivo_alta(cd_motivo_alta_w),1,255),
				 	cd_estabelecimento_base_w,
				 	substr(coalesce(obter_nome_emp_ref(cd_empresa_estab_w),obter_texto_tasy(1098949,null)),1,100)
			);

			insert into 	log_geracao_censo(dt_atualizacao,
							  nm_usuario,
							  dt_atualizacao_nrec,
							  nm_usuario_nrec,
							  dt_saida_unidade,
							  nr_atendimento,
							  cd_setor_atendimento,
							  dt_referencia,
							  dt_entrada_unidade,
							  nr_seq_unidade)
					  values (clock_timestamp(),
							  nm_usuario_p,
							  clock_timestamp(),
							  nm_usuario_p,
							  null,
							  null,
							  cd_Setor_Atendimento_w,
							  dt_Parametro_w,
							  null,
							  nr_seq_interno_w);

			cd_estab_atend_w	:= 0;
		END IF;
  	end;
	end if;
	end;
END LOOP;
CLOSE C01;
COMMIT;

/* Atualizar campo qt_base_ocup   */

update	eis_ocupacao_hospitalar
set	qt_base_ocup		= CASE WHEN ie_temp='N' THEN 1  ELSE CASE WHEN nr_pacientes=0 THEN 0  ELSE 1 END  END
where	dt_referencia		= dt_parametro_w
and	cd_estabelecimento	= cd_estabelecimento_w
and	ie_periodo 		= 'D';
COMMIT;

/* Excluir os Registros mensais   */

delete from eis_ocupacao_hospitalar
where dt_referencia = dt_parametro_mes_w
  and ie_periodo = 'M';
COMMIT;
/* Acertar valores nulos da base do mes */

update	eis_ocupacao_hospitalar
set	cd_convenio	= coalesce(cd_convenio,0),
	ie_clinica_alta	= coalesce(ie_clinica_alta, ie_clinica_padrao_w),
	hr_alta		= coalesce(hr_alta,0)
where	dt_referencia	between dt_parametro_mes_w
	and	PKG_DATE_UTILS.ADD_MONTH(dt_parametro_mes_w,1,0)
  and ie_periodo = 'D';
commit;
/* Gerar Acumulado Mensal  */

OPEN C09;
LOOP
FETCH C09 into
	cd_estabelecimento_w,
	cd_setor_atendimento_w,
	cd_unidade_basica_w,
	cd_unidade_compl_w,
	ie_situacao_w,
	cd_pessoa_fisica_w,
	nr_admissoes_w,
	nr_altas_w,
	nr_obitos_w 	,
	nr_transf_entrada_w,
	nr_transf_Saida_w,
	nr_pacientes_w,
	ie_clinica_w,
	cd_convenio_w,
	qt_leito_livre_w,
	cd_tipo_acomodacao_w,
	ie_tipo_atendimento_w,
	cd_procedencia_w,
	cd_medico_w,
	hr_alta_w,
	qt_obito_p24h_w,
	ie_clinica_alta_w,
	nr_seq_origem_w,
	qt_admitido_alta_dia_w,
	cd_cid_principal_w,
	ie_temp_w,
	qt_base_ocup_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	cd_motivo_alta_w,
	nr_seq_queixa_w,
	cd_categoria_w,
	nr_seq_forma_chegada_w,
	dt_entrada_w,
	nr_seq_indicacao_w,
	cd_convenio_glosa_w,
	cd_categoria_glosa_w,
	nr_transf_ent_interna_w,
	nr_transf_ent_externa_w,
	nr_transf_saida_interna_w,
	nr_transf_saida_externa_w,
	nr_seq_classificacao_w,
	ie_sexo_w,
	cd_idade_w,
	ds_idade_w,
	nm_pessoa_fisica_w,
	ds_cid_principal_w,
	ie_carater_inter_sus_w,
	nr_pac_dia_w,
	qt_temp_w,
	cd_especialidade_w,
	ds_procedimento_w,
	ds_estabelecimento_w,
	ds_motivo_alta_w,
	cd_classif_etaria_w,
	ds_classif_etaria_w,
	cd_municipio_ibge_w,
	ds_categoria_w,
	ds_forma_chegada_w,
	ds_convenio_glosa_w,
	ds_categoria_glosa_w,
	ds_indicacao_w;
EXIT WHEN NOT FOUND; /* apply on C09 */


select 	cd_estabelecimento_base
into STRICT	cd_estabelecimento_base_w
from	setor_atendimento a
where	a.cd_setor_atendimento	= cd_setor_atendimento_w;


insert into EIS_Ocupacao_Hospitalar(
	cd_estabelecimento,
	dt_referencia,
	ie_periodo,
	cd_setor_atendimento,
	cd_unidade_basica,
	cd_unidade_compl,
	ie_situacao,
	nr_admissoes,
	nr_altas,
	nr_obitos,
	nr_transf_entrada,
	nr_transf_Saida,
	nr_pacientes,
	ie_clinica,
	cd_convenio,
	qt_leito_livre,
	cd_tipo_acomodacao,
	ie_tipo_atendimento,
	cd_procedencia,
	cd_medico,
	hr_alta,
	qt_obito_apos24h,
	ie_clinica_alta,
	cd_pessoa_fisica,
	nr_seq_origem,
	qt_admitido_alta_dia,
	cd_cid_principal,
	ie_temp,
	qt_base_ocup,
	cd_procedimento,
	ie_origem_proced,
	cd_motivo_alta,
	nr_seq_queixa,
	cd_categoria,
	nr_seq_forma_chegada,
	dt_entrada,
	nr_seq_indicacao,
	cd_convenio_glosa,
	cd_categoria_glosa,
	nr_transf_ent_interna,
	nr_transf_ent_externa,
	nr_transf_saida_interna,
	nr_transf_saida_externa,
	nr_seq_classificacao,
	dt_alta,
	ie_sexo,
	cd_idade,
	ds_idade,
	nm_pessoa_fisica,
	ds_cid_principal,
	ie_carater_inter_sus,
	cd_empresa,
	qt_hora_alta,
	ds_referencia,
	cd_dia,
	nr_pac_dia,
	qt_temp,
	nr_transf_ent_int,
	nr_transf_ent_ext,
	nr_transf_saida_int,
  	nr_transf_saida_ext,
	cd_especialidade,
	ds_procedimento,
	ds_estabelecimento,
	ds_motivo_alta,
	cd_classif_etaria,
	ds_classif_etaria,
	cd_estabelecimento_base,
	cd_municipio_ibge,
	ds_categoria,
	ds_forma_chegada,
	nr_horario,
	ds_convenio_glosa,
	ds_categoria_glosa,
	ds_indicacao)
values (
	cd_estabelecimento_w,
	dt_Parametro_mes_w,
	'M',
	cd_setor_atendimento_w,
	cd_unidade_basica_w,
	cd_unidade_compl_w,
	ie_situacao_w,
	nr_admissoes_w,
	nr_altas_w,
	nr_obitos_w 	,
	nr_transf_entrada_w,
	nr_transf_Saida_w,
	nr_pacientes_w,
	ie_clinica_w,
	cd_convenio_w,
	qt_leito_livre_w,
	cd_tipo_acomodacao_w,
	ie_tipo_atendimento_w,
	cd_procedencia_w,
	cd_medico_w,
	hr_alta_w,
	qt_obito_p24h_w,
	ie_clinica_alta_w,
	cd_pessoa_fisica_w,
	nr_seq_origem_w,
	qt_admitido_alta_dia_w,
	cd_cid_principal_w,
	ie_temp_w,
	qt_base_ocup_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	cd_motivo_alta_w,
	nr_seq_queixa_w,
	cd_categoria_w,
	nr_seq_forma_chegada_w,
	dt_entrada_w,
	nr_seq_indicacao_w,
	cd_convenio_glosa_w,
	cd_categoria_glosa_w,
	nr_transf_ent_interna_w,
	nr_transf_ent_externa_w,
	nr_transf_saida_interna_w,
	nr_transf_saida_externa_w,
	nr_seq_classificacao_w,
	dt_alta_w,
	ie_sexo_w,
	cd_idade_w,
	ds_idade_w,
	nm_pessoa_fisica_w,
	ds_cid_principal_w,
	ie_carater_inter_sus_w,
	cd_empresa_estab_w,
	(to_char(hr_alta_w,'00'))::numeric ,
	to_char(dt_Parametro_mes_w, 'dd/mm/yyyy'),
	(to_char(dt_Parametro_mes_w, 'd'))::numeric ,
	nr_pac_dia_w,
	qt_temp_w,
	nr_transf_ent_interna_w,
	nr_transf_ent_externa_w,
	nr_transf_saida_interna_w,
	nr_transf_saida_externa_w,
	cd_especialidade_w,
	ds_procedimento_w,
	ds_estabelecimento_w,
	ds_motivo_alta_w,
	cd_classif_etaria_w,
	ds_classif_etaria_w,
	cd_estabelecimento_base_w,
	cd_municipio_ibge_w,
	ds_categoria_w,
	ds_forma_chegada_w,
	(to_char(dt_entrada_w,'hh24'))::numeric ,
	ds_convenio_glosa_w,
	ds_categoria_glosa_w,
	ds_indicacao_w
	);

END LOOP;
CLOSE C09;
COMMIT;
CALL Atualizar_Log_Indicador(clock_timestamp(), nr_sequencia_w);
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_ocupacao_hospitalar ( dt_parametro_P timestamp, NM_USUARIO_P text) FROM PUBLIC;

