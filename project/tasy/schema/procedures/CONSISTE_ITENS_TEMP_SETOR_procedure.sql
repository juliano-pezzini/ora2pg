-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_itens_temp_setor ( nr_seq_setor_temp_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
cd_perfil_w			bigint;
cd_setor_atendimento_w		bigint;
ds_erro_w			varchar(4000);
ds_perfil_adicional_w		varchar(4000);
ds_setor_atendimento_w		varchar(4000);
ds_comunicado_w			varchar(20000);
nr_seq_item_w			bigint;
qt_temp_inicial_w			setor_temperatura_item.qt_temp_inicial%type;
qt_temp_min_w			setor_temperatura_item.qt_temp_min%type;
qt_temp_max_w			setor_temperatura_item.qt_temp_max%type;
qt_umidade_final_w			setor_temperatura_item.qt_umidade_final%type;
ds_observacao_w			varchar(4000);
nm_usuario_comunic_w		varchar(4000);
nm_usuario_destino_w		varchar(4000);
nr_seq_localizacao_w		bigint;
nr_seq_equipamento_w		bigint;
cd_pessoa_usuario_w		varchar(10);
ie_prioridade_w			varchar(1);
ds_dano_w			varchar(4000);
ds_item_w			varchar(255);
dt_medicao_w			timestamp;
nr_ordem_servico_w		bigint;
ie_ordem_serv_w			varchar(1);
qt_temp_max_per_w		item_temperatura.qt_temp_max%type;
qt_temp_min_per_w			item_temperatura.qt_temp_min%type;
nr_seq_planej_w			bigint;
nr_seq_trab_w			bigint;
nr_seq_grupo_usuario_w		bigint;
ds_grupo_w			varchar(255);
qt_temp_min_setor_w		setor_temperatura.qt_temp_min%type;
qt_temp_max_setor_w		setor_temperatura.qt_temp_max%type;
qt_temp_inicial_setor_w		setor_temperatura.qt_temp_inicial%type;

/* Todos os itens que foram medidos no setor */
 
c01 CURSOR FOR 
	SELECT	a.nr_seq_item, 
		a.qt_temp_inicial, 
		a.qt_temp_min, 
		a.qt_temp_max, 
		a.qt_umidade_final, 
		a.ds_observacao, 
		a.dt_medicao, 
		b.ds_item, 
		b.nr_seq_equipamento, 
		b.ie_prioridade, 
		b.ie_ordem_serv, 
		b.qt_temp_max, 
		b.qt_temp_min 
	from	item_temperatura b, 
		setor_temperatura_item a 
	where	a.nr_seq_setor_temp	= nr_seq_setor_temp_p 
	and	a.nr_seq_item		= b.nr_sequencia;


BEGIN 
 
/* Obter o setor da leitura */
 
select	cd_setor_atendimento, 
	substr(obter_nome_setor(cd_setor_atendimento),1,100) ds_setor, 
	qt_temp_max, 
	qt_temp_min, 
	qt_temp_inicial 
into STRICT	cd_setor_atendimento_w, 
	ds_setor_atendimento_w, 
	qt_temp_max_setor_w, 
	qt_temp_min_setor_w, 
	qt_temp_inicial_setor_w 
from	setor_temperatura 
where	nr_sequencia	= nr_seq_setor_temp_p;
 
/* ahoffelder - OS 196168 - 23/02/2010 */
 
select	max(a.nr_sequencia) 
into STRICT	nr_seq_localizacao_w 
from	man_localizacao a, 
	setor_temperatura b 
where	b.nr_sequencia		= nr_seq_setor_temp_p 
and	b.cd_setor_atendimento	= a.cd_setor 
and	a.cd_estabelecimento	= cd_estabelecimento_p;
 
select	a.cd_pessoa_fisica 
into STRICT	cd_pessoa_usuario_w 
from	usuario a 
where	a.nm_usuario	= nm_usuario_p;
 
open C01;
loop 
fetch C01 into 
	nr_seq_item_w, 
	qt_temp_inicial_w, 
	qt_temp_min_w, 
	qt_temp_max_w, 
	qt_umidade_final_w, 
	ds_observacao_w, 
	dt_medicao_w, 
	ds_item_w, 
	nr_seq_equipamento_w, 
	ie_prioridade_w, 
	ie_ordem_serv_w, 
	qt_temp_max_per_w, 
	qt_temp_min_per_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	/* Obtem a consistencia */
 
	SELECT * FROM CONSISTE_TEMP_ITEM_SETOR(	nr_seq_item_w, qt_temp_inicial_w, qt_temp_min_w, qt_temp_max_w, qt_umidade_final_w, ds_erro_w, nm_usuario_p, cd_estabelecimento_p, cd_setor_atendimento_w, 'N', cd_perfil_w, ds_observacao_w, nm_usuario_comunic_w, nr_seq_grupo_usuario_w) INTO STRICT ds_erro_w, cd_perfil_w, nm_usuario_comunic_w, nr_seq_grupo_usuario_w;
 
	if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then 
		ds_comunicado_w		:= substr(ds_comunicado_w || ds_erro_w || chr(13) || chr(10) || chr(13) || chr(10),1,20000);
	end if;
	if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then 
		ds_perfil_adicional_w	:= ds_perfil_adicional_w || cd_perfil_w || ',';
	end if;
	if (nm_usuario_comunic_w IS NOT NULL AND nm_usuario_comunic_w::text <> '') then 
		nm_usuario_destino_w	:= nm_usuario_destino_w || nm_usuario_comunic_w || ',';
	end if;
	if (nr_seq_grupo_usuario_w IS NOT NULL AND nr_seq_grupo_usuario_w::text <> '') then 
		ds_grupo_w		:= substr(ds_grupo_w || nr_seq_grupo_usuario_w || ', ',1,255);
	end if;
	 
	/* ahoffelder - OS 196168 - 23/02/2010 - gerar ordem de serviço para as divergências */
 
	if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') and (coalesce(ie_ordem_serv_w,'N') = 'S') then 
	 
		begin 
		select	max(nr_seq_planej), 
			max(nr_seq_trab) 
		into STRICT	nr_seq_planej_w, 
			nr_seq_trab_w 
		from	man_equipamento 
		where	nr_sequencia = nr_seq_equipamento_w;
		exception 
		when others then 
			nr_seq_planej_w := null;
			nr_seq_trab_w	:= null;
		end;
		 
		/*ds_dano_w := substr( 
			'A temperatura de um dos itens encontra-se fora do aconselhado. Favor verificar.' || chr(13) || chr(13) || chr(10) || 
			'Item: ' || ds_item_w || chr(13) || chr(10) || 
			'Setor: ' || ds_setor_atendimento_w || chr(13) || chr(10) || 
			'Temperatura máx recomendada: ' || qt_temp_max_per_w || chr(13) || chr(10) || 
			'Temperatura mín recomendada: ' || qt_temp_min_per_w || chr(13) || chr(10) || 
			'Temperatura máx registrada: ' || qt_temp_max_w || chr(13) || chr(10) || 
			'Temperatura mín registrada: ' || qt_temp_min_w || chr(13) || chr(10) || 
			'Umidade relativa do ar: ' || qt_umidade_final_w || chr(13) || chr(10) || 
			'Temperatura máx registrada setor: ' || qt_temp_max_setor_w || chr(13) || chr(10) || 
			'Temperatura mín registrada setor: ' || qt_temp_min_setor_w || chr(13) || chr(10) || 
			'Temperatura atual setor:' || qt_temp_inicial_setor_w	|| chr(13) || chr(10) || 
			'Data medição: ' || dt_medicao_w,1,4000); 
		*/
 
		ds_dano_w := substr(wheb_mensagem_pck.get_texto(305672,	'DS_ITEM=' || ds_item_w || ';' || 
									'DS_SETOR_ATENDIMENTO=' || ds_setor_atendimento_w || ';' || 
									'QT_TEMP_MAX_PER=' || qt_temp_max_per_w || ';' || 
									'QT_TEMP_MIN_PER=' || qt_temp_min_per_w || ';' || 
									'QT_TEMP_MAX=' || qt_temp_max_w || ';' || 
									'QT_TEMP_MIN=' || qt_temp_min_w || ';' || 
									'QT_UMIDADE_FINAL=' || qt_umidade_final_w || ';' || 
									'QT_TEMP_MAX_SETOR=' || qt_temp_max_setor_w || ';' || 
									'QT_TEMP_MIN_SETOR=' || qt_temp_min_setor_w || ';' || 
									'QT_TEMP_INICIAL_SETOR=' || qt_temp_inicial_setor_w || ';' || 
									'DT_MEDICAO=' || dt_medicao_w),1,4000);
			 
		nr_ordem_servico_w := man_gerar_ordem_servico(	nr_seq_localizacao_w, nr_seq_equipamento_w, cd_pessoa_usuario_w, clock_timestamp(), ie_prioridade_w, 'N', --'Divergência no controle de temperatura do item: ' || ds_item_w, 
					wheb_mensagem_pck.get_texto(305677,'DS_ITEM=' || ds_item_w), nm_usuario_p, ds_dano_w, '1', '1', 'S', null, nr_seq_planej_w, nr_seq_trab_w, nr_ordem_servico_w);
 
		CALL man_gerar_envio_comunicacao(nr_ordem_servico_w, '3', '', '', nm_usuario_p, '');
	end if;
 
	end;
end loop;
close C01;
/* Gera o comunicado com todos os itens do setor */
 
if (ds_comunicado_w IS NOT NULL AND ds_comunicado_w::text <> '') then 
	CALL GERAR_COMUNIC_PADRAO(clock_timestamp(), 
			--'Controle de temperatura e umidade dos setores - ' || ds_setor_atendimento_w, 
			wheb_mensagem_pck.get_texto(305679,'DS_SETOR_ATENDIMENTO=' || ds_setor_atendimento_w), 
			ds_comunicado_w, 
			nm_usuario_p, 
			'N', 
			nm_usuario_destino_w, 
			'N', 
			null, 
			ds_perfil_adicional_w, 
			cd_estabelecimento_p, 
			null, 
			clock_timestamp(), 
			ds_grupo_w, 
			null);
			 
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_itens_temp_setor ( nr_seq_setor_temp_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

