-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gravar_produto_benef_imp ( nr_seq_beneficiario_p bigint, ie_tipo_contrato_p ptu_intercambio.ie_tipo_contrato%type, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
Gravar no beneficiario do A100 importado o produto que ele ira utilizar
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_empresa_w		bigint;
cd_plano_intercambio_w		varchar(10);
ie_natureza_w			bigint;
ie_abrangencia_w		bigint;
qt_registros_w			bigint;
ie_repasse_w			varchar(10);
ie_tipo_contratacao_w		varchar(10);
ie_abrangencia_plano_w		varchar(10);
ie_preco_w			varchar(10);
nr_seq_plano_w			bigint;
nr_seq_segurado_w		bigint;
nr_seq_intercambio_w		bigint;
nr_seq_contrato_w		bigint;
cd_plano_origem_w		ptu_intercambio_plano.cd_plano_origem%type;
nr_seq_intercambio_plano_w	pls_intercambio_plano.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	ie_natureza,
		ie_abrangencia
	from	ptu_intercambio_plano
	where	nr_seq_empresa		= nr_seq_empresa_w
	and	cd_plano_intercambio	= cd_plano_intercambio_w
	and	cd_plano_origem 	= cd_plano_origem_w;

C02 CURSOR FOR
	SELECT	ie_tipo_contratacao,
		ie_abrangencia_plano,
		ie_preco
	from	pls_regra_plano_a100
	where	((ie_natureza		= ie_natureza_w) OR (ie_natureza = 1))
	and	((ie_abrangencia	= ie_abrangencia_w) OR (ie_abrangencia = 6))
	and	((ie_repasse		= ie_repasse_w) or (coalesce(ie_repasse::text, '') = ''))
	and	ie_situacao		= 'A'
	order by ie_natureza,
		CASE WHEN ie_abrangencia=6 THEN -1  ELSE ie_abrangencia END ,
		CASE WHEN coalesce(ie_repasse::text, '') = '' THEN -1  ELSE 1 END;

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_plano
	where	cd_plano_intercambio 	= cd_plano_intercambio_w
	and	((ie_tipo_contratacao	= ie_tipo_contratacao_w and (ie_tipo_contratacao IS NOT NULL AND ie_tipo_contratacao::text <> '')) or coalesce(ie_tipo_contratacao::text, '') = '')
	and	((ie_abrangencia	= ie_abrangencia_plano_w and (ie_abrangencia IS NOT NULL AND ie_abrangencia::text <> '')) or coalesce(ie_abrangencia::text, '') = '')
	and	ie_preco		= ie_preco_w
	and	cd_estabelecimento	= cd_estabelecimento_p
	and	ie_tipo_operacao	= 'T'
	order by CASE WHEN coalesce(ie_tipo_contratacao::text, '') = '' THEN -1  ELSE 1 END ,
		CASE WHEN coalesce(ie_abrangencia::text, '') = '' THEN -1  ELSE 1 END;

C04 CURSOR FOR
	SELECT	b.nr_sequencia
	from	pls_intercambio_plano	a,
		pls_plano		b
	where	a.nr_seq_plano		= b.nr_sequencia
	and	b.cd_plano_intercambio 	= cd_plano_intercambio_w
	and	a.nr_seq_intercambio	= nr_seq_intercambio_w
	and	((b.ie_tipo_contratacao	= ie_tipo_contratacao_w and (ie_tipo_contratacao IS NOT NULL AND ie_tipo_contratacao::text <> '')) or coalesce(ie_tipo_contratacao::text, '') = '')
	and	((b.ie_abrangencia	= ie_abrangencia_plano_w and (ie_abrangencia IS NOT NULL AND ie_abrangencia::text <> '')) or coalesce(ie_abrangencia::text, '') = '')
	and	b.ie_preco		= ie_preco_w
	and	b.cd_estabelecimento	= cd_estabelecimento_p
	and	b.ie_tipo_operacao	= 'T'
	and	coalesce(a.ie_situacao,'A')	= 'A'
	order by CASE WHEN coalesce(b.ie_tipo_contratacao::text, '') = '' THEN -1  ELSE 1 END ,
		CASE WHEN coalesce(b.ie_abrangencia::text, '') = '' THEN -1  ELSE 1 END;
		
C05 CURSOR FOR
	SELECT	b.nr_sequencia nr_seq_plano
	from	pls_intercambio_plano	a,
		pls_plano		b
	where	a.nr_seq_plano		= b.nr_sequencia
	and	a.nr_seq_intercambio	= nr_seq_intercambio_w
	and	((b.ie_tipo_contratacao	= ie_tipo_contratacao_w and (ie_tipo_contratacao IS NOT NULL AND ie_tipo_contratacao::text <> '')) or coalesce(ie_tipo_contratacao::text, '') = '')
	and	((b.ie_abrangencia	= ie_abrangencia_plano_w and (ie_abrangencia IS NOT NULL AND ie_abrangencia::text <> '')) or coalesce(ie_abrangencia::text, '') = '')
	and	b.ie_preco		= ie_preco_w
	and	b.cd_estabelecimento	= cd_estabelecimento_p
	and	b.ie_tipo_operacao	= 'T'
	and	coalesce(a.ie_situacao,'A')	= 'A'
	order by CASE WHEN coalesce(b.ie_tipo_contratacao::text, '') = '' THEN -1  ELSE 1 END ,
		CASE WHEN coalesce(b.ie_abrangencia::text, '') = '' THEN -1  ELSE 1 END;

BEGIN

select	b.nr_seq_empresa,
	b.cd_plano_intercambio,
	b.ie_repasse,
	b.nr_seq_benef_encontrado,
	a.nr_seq_contrato,
	b.cd_plano_origem
into STRICT	nr_seq_empresa_w,
	cd_plano_intercambio_w,
	ie_repasse_w,
	nr_seq_segurado_w,
	nr_seq_contrato_w,
	cd_plano_origem_w
from	ptu_intercambio_benef	b,
	ptu_intercambio_empresa	a
where	b.nr_seq_empresa	= a.nr_sequencia
and	b.nr_sequencia		= nr_seq_beneficiario_p;

select	count(1)
into STRICT	qt_registros_w
from	ptu_intercambio_plano
where	nr_seq_empresa		= nr_seq_empresa_w
and	cd_plano_intercambio	= cd_plano_intercambio_w;

if (qt_registros_w > 0) then
	if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
		select	max(nr_seq_intercambio)
		into STRICT	nr_seq_intercambio_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_segurado_w;
	else
		nr_seq_intercambio_w	:= nr_seq_contrato_w;
	end if;
	
	open C01;
	loop
	fetch C01 into
		ie_natureza_w,
		ie_abrangencia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;
	
	select	count(1)
	into STRICT	qt_registros_w
	from	pls_regra_plano_a100
	where	ie_situacao	= 'A'  LIMIT ALL;
	
	if (qt_registros_w > 0) then
		open C02;
		loop
		fetch C02 into
			ie_tipo_contratacao_w,
			ie_abrangencia_plano_w,
			ie_preco_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
		end loop;
		close C02;
	else
		select	CASE WHEN ie_natureza_w=2 THEN 'I' WHEN ie_natureza_w=3 THEN 'CE' WHEN ie_natureza_w=4 THEN 'CA' WHEN ie_natureza_w=5 THEN ''  ELSE null END ,
			CASE WHEN ie_abrangencia_w=1 THEN 'N' WHEN ie_abrangencia_w=2 THEN 'GE' WHEN ie_abrangencia_w=3 THEN 'E' WHEN ie_abrangencia_w=4 THEN 'GM' WHEN ie_abrangencia_w=5 THEN 'M'  ELSE null END
		into STRICT	ie_tipo_contratacao_w,
			ie_abrangencia_plano_w
		;
		
		if (ie_repasse_w = 'P') then
			ie_preco_w	:= '1';
		else
			ie_preco_w	:= '3';
		end if;
	end if;
	
	nr_seq_plano_w	:= null;
	
	if (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
		open c04;
		loop
		fetch c04 into
			nr_seq_plano_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
		end loop;
		close c04;
		
		if	((ie_tipo_contrato_p = 'F') and (coalesce(nr_seq_plano_w::text, '') = '')) then -- Se o contrato for de fundacao deve buscar o produto somente no contrato
			for r_c05_w in c05 loop
				begin
				nr_seq_plano_w	:= r_c05_w.nr_seq_plano;
				end;
			end loop;
			
			if (coalesce(nr_seq_plano_w::text, '') = '') then
				select	max(nr_sequencia)
				into STRICT	nr_seq_intercambio_plano_w
				from	pls_intercambio_plano
				where	nr_seq_intercambio = nr_seq_intercambio_w;
				
				if (nr_seq_intercambio_plano_w IS NOT NULL AND nr_seq_intercambio_plano_w::text <> '') then
					select 	max(nr_seq_plano)
					into STRICT	nr_seq_plano_w
					from	pls_intercambio_plano
					where	nr_sequencia = nr_seq_intercambio_plano_w;
				end if;
			end if;
		end if;
	end if;

	if	((coalesce(nr_seq_plano_w::text, '') = '') and (ie_tipo_contrato_p <> 'F')) then
		open C03;
		loop
		fetch C03 into
			nr_seq_plano_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
		end loop;
		close C03;
	end if;
	
	update	ptu_intercambio_benef
	set	nr_seq_plano	= nr_seq_plano_w
	where	nr_sequencia	= nr_seq_beneficiario_p;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gravar_produto_benef_imp ( nr_seq_beneficiario_p bigint, ie_tipo_contrato_p ptu_intercambio.ie_tipo_contrato%type, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

