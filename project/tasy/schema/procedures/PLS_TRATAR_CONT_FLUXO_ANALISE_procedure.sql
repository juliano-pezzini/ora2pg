-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_tratar_cont_fluxo_analise ( nr_seq_analise_p bigint, nr_seq_grupo_atual_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_grupo_p INOUT bigint, ie_fechar_contas_p INOUT text) AS $body$
DECLARE


ds_mensagem_retorno_w			varchar(4000);
ie_origem_analise_w			varchar(10);
ie_situacao_itens_w			varchar(3);
ie_tipo_conta_w				varchar(3);
ie_acao_w				varchar(2);
ie_fechar_contas_w			varchar(1);
vl_glosado_w				double precision;
vl_calculado_w				double precision; -- Vai usar ainda
vl_apresentado_w			double precision; -- Vai usar ainda
nr_seq_fluxo_grupo_w			bigint;
nr_seq_fluxo_prox_w			bigint;
nr_seq_grupo_prox_w			bigint;
nr_seq_regra_w				bigint;
qt_glosado_w				bigint;
nr_seq_fluxo_ult_w			bigint;
nr_seq_grupo_ult_w			bigint;
nr_seq_aud_grupo_w			bigint;
qt_glosado_conta_w			bigint;

C01 CURSOR FOR
	SELECT	a.nr_seq_grupo
	from	pls_auditoria_conta_grupo	a
	where	a.nr_seq_analise	= nr_seq_analise
	and	a.nr_seq_ordem > nr_seq_fluxo_grupo_w;

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
BEGIN
select	max(a.ie_origem_analise)
into STRICT	ie_origem_analise_w
from	pls_analise_conta	a
where	a.nr_sequencia	= nr_seq_analise_p;

if (ie_origem_analise_w = '3') then
	ie_tipo_conta_w	:= 'I';
else
	ie_tipo_conta_w	:= 'O';
end if;

/* Obtem fluxo de análise do grupo atual */

select	max(a.nr_seq_ordem),
	max(a.nr_sequencia)
into STRICT	nr_seq_fluxo_grupo_w,
	nr_seq_aud_grupo_w
from	pls_auditoria_conta_grupo	a
where	a.nr_seq_analise	= nr_seq_analise_p
and	a.nr_seq_grupo		= nr_seq_grupo_atual_p;

/* Obtem o próximo fluxo */

select	min(a.nr_seq_ordem)
into STRICT	nr_seq_fluxo_prox_w
from	pls_auditoria_conta_grupo	a
where	a.nr_seq_analise	= nr_seq_analise_p
and	a.nr_seq_ordem > nr_seq_fluxo_grupo_w;

/* Obtem o grupo de análise para o próximo fluxo ( pode haver mais de um grupo para determinado fluxo ) */

select	max(a.nr_seq_grupo)
into STRICT	nr_seq_grupo_prox_w
from	pls_auditoria_conta_grupo	a
where	a.nr_seq_analise	= nr_seq_analise_p
and	a.nr_seq_ordem		= nr_seq_fluxo_prox_w;

/* Obter situação dos itens */

select	sum(vl_glosado)
into STRICT	vl_glosado_w
from (SELECT	sum(a.vl_glosa) vl_glosado
	from	pls_proc_participante	a,
		pls_conta_proc		b,
		pls_conta		c
	where	c.nr_sequencia		= b.nr_seq_conta
	and	b.nr_sequencia		= a.nr_seq_conta_proc
	and	c.nr_seq_analise	= nr_seq_analise_p
	
union all

	SELECT	sum(b.vl_glosa) vl_glosado
	from	pls_conta_proc		b,
		pls_conta		c
	where	c.nr_sequencia		= b.nr_seq_conta
	and	c.nr_seq_analise	= nr_seq_analise_p
	
union all

	select	sum(b.vl_glosa) vl_glosado
	from	pls_conta_mat		b,
		pls_conta		c
	where	c.nr_sequencia		= b.nr_seq_conta
	and	c.nr_seq_analise	= nr_seq_analise_p) alias4;

select	sum(qt_glosado)
into STRICT	qt_glosado_w
from (SELECT	count(1) qt_glosado
	from	tiss_motivo_glosa	e,
		pls_conta_glosa		d,
		pls_proc_participante	a,
		pls_conta_proc		b,
		pls_conta		c
	where	e.nr_sequencia		= d.nr_seq_motivo_glosa
	and	c.nr_sequencia		= b.nr_seq_conta
	and	b.nr_sequencia		= a.nr_seq_conta_proc
	and	a.nr_sequencia		= d.nr_seq_proc_partic
	and	d.ie_situacao		= 'A'
	and	b.ie_status <> 'S'
	and	coalesce(e.cd_motivo_glosa,e.cd_motivo_tiss) <> '1705'
	and	c.nr_seq_analise	= nr_seq_analise_p
	
union all

	SELECT	count(1) qt_glosado
	from	tiss_motivo_glosa	e,
		pls_conta_glosa		d,
		pls_conta_proc		b,
		pls_conta		c
	where	e.nr_sequencia		= d.nr_seq_motivo_glosa
	and	c.nr_sequencia		= b.nr_seq_conta
	and	b.nr_sequencia		= d.nr_seq_conta_proc
	and	b.ie_status <> 'S'
	and	d.ie_situacao		= 'A'
	and	coalesce(e.cd_motivo_glosa,e.cd_motivo_tiss) <> '1705'
	and	c.nr_seq_analise	= nr_seq_analise_p
	
union all

	select	count(1) qt_glosado
	from	tiss_motivo_glosa	e,
		pls_conta_glosa		d,
		pls_conta_mat		b,
		pls_conta		c
	where	e.nr_sequencia		= d.nr_seq_motivo_glosa
	and	c.nr_sequencia		= b.nr_seq_conta
	and	b.nr_sequencia		= d.nr_seq_conta_mat
	and	b.ie_status <> 'S'
	and	d.ie_situacao		= 'A'
	and	coalesce(e.cd_motivo_glosa,e.cd_motivo_tiss) <> '1705'
	and	c.nr_seq_analise	= nr_seq_analise_p) alias7;


select	count(1) qt_glosado
into STRICT	qt_glosado_conta_w
from	pls_conta_glosa		d,
	pls_conta		c
where	c.nr_sequencia		= d.nr_seq_conta
and	coalesce(d.nr_seq_conta_mat::text, '') = ''
and	coalesce(d.nr_seq_conta_proc::text, '') = ''
and	coalesce(d.nr_seq_proc_partic::text, '') = ''
and	d.ie_situacao		= 'A'
and	c.nr_seq_analise	= nr_seq_analise_p;

if (qt_glosado_w > 0) or (qt_glosado_conta_w > 0) then
	ie_situacao_itens_w	:= '2'; -- Glosado
elsif (qt_glosado_w = 0) and (vl_glosado_w = 0) then
	ie_situacao_itens_w	:= '1'; -- Liberado
else
	ie_situacao_itens_w	:= '1'; -- Liberado
end if;

if (pls_obter_se_fim_fluxo_analise(nr_seq_analise_p,nr_seq_grupo_prox_w) = 'S') then
	/* Obtem a regra correspondente a atual situação dos itens e refrerente ao póximo grupo de anaáise */

	nr_seq_regra_w := pls_obter_regra_fluxo_analise(nr_seq_grupo_prox_w, ie_situacao_itens_w, ie_tipo_conta_w, nr_seq_regra_w);

	/* Set tiver regra verifica as opções e executa-as */

	if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
		select	max(a.ie_acao),
			max(a.ie_fechar_contas)
		into STRICT	ie_acao_w,
			ie_fechar_contas_w
		from	pls_regra_fluxo_analise	a
		where	a.nr_sequencia	= nr_seq_regra_w;

		nr_seq_grupo_p		:= nr_seq_grupo_prox_w;

		ie_fechar_contas_p	:= ie_fechar_contas_w;

		update	pls_auditoria_conta_grupo
		set	nr_seq_regra_continuidade	= nr_seq_regra_w,
			dt_atualizacao			= clock_timestamp(),
			nm_usuario			= nm_usuario_p
		where	nr_sequencia			= nr_seq_aud_grupo_w;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tratar_cont_fluxo_analise ( nr_seq_analise_p bigint, nr_seq_grupo_atual_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_grupo_p INOUT bigint, ie_fechar_contas_p INOUT text) FROM PUBLIC;

