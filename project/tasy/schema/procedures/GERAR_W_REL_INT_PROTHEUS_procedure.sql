-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_rel_int_protheus ( ie_tipo_p text, dt_inicio_p timestamp, dt_final_p timestamp, ie_evento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*ie_tipo_p
P - Integração parada
D - Período
*/
/*ie_evento_p
274 - Tasy -> Protheus - Envia Solicitação de Compra
275 - Tasy -> Protheus - Enviar Nota Fiscal
276 - Tasy -> Protheus - Enviar Movimentação de Estoque
*/
nr_seq_informacao_w	informacao_integracao.nr_sequencia%type;
nr_seq_log_w		log_integracao.nr_sequencia%type;
dt_geracao_w		log_integracao.dt_geracao%type;
nr_seq_xml_w		log_integracao_xml.nr_sequencia%type;

ds_erro_w		text;
ds_xml_w		text;

c01 CURSOR FOR
	SELECT	b.nr_sequencia,
		b.dt_geracao
	from	informacao_integracao a,
		log_integracao b
	where	a.nr_sequencia = nr_seq_informacao_w
	and	b.nr_seq_informacao = a.nr_sequencia
	and	((ie_tipo_p <> 'P') or (b.nr_sequencia = nr_seq_log_w))
	and	((ie_tipo_p <> 'D') or (b.dt_geracao between dt_inicio_p and dt_final_p))
	order by b.dt_geracao desc;

c02 CURSOR FOR
	SELECT	dt_geracao,
		ds_erro,
		nr_seq_xml,
		nr_seq_log
	from	w_rel_int_protheus
	where	nm_usuario = nm_usuario_p;


BEGIN

delete	from w_rel_int_protheus
where	nm_usuario = nm_usuario_p;

select	max(nr_sequencia)
into STRICT	nr_seq_informacao_w
from	informacao_integracao
where	nr_seq_evento = ie_evento_p;

select	max(nr_sequencia)
into STRICT	nr_seq_log_w
from	log_integracao
where	nr_seq_informacao = nr_seq_informacao_w;

open C01;
loop
fetch C01 into
	nr_seq_log_w,
	dt_geracao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	ds_erro_w := null;

	select	max(nr_sequencia)
	into STRICT	nr_seq_xml_w
	from	log_integracao_xml
	where	nr_seq_log = nr_seq_log_w
	and	ie_envio_retorno = 'R';

	if (coalesce(nr_seq_xml_w::text, '') = '') then
		insert into w_rel_int_protheus(
			dt_geracao,
			nr_seq_log,
			nr_seq_xml,
			nm_usuario)
		values (	dt_geracao_w,
			nr_seq_log_w,
			nr_seq_xml_w,
			nm_usuario_p);
	else
		insert into w_rel_int_protheus(
			dt_geracao,
			ds_erro,
			nr_seq_log,
			nr_seq_xml,
			nm_usuario)
		SELECT	dt_geracao_w,
			to_lob(ds_xml),
			nr_seq_log_w,
			nr_seq_xml_w,
			nm_usuario_p
		from	log_integracao_xml
		where	nr_sequencia = nr_seq_xml_w;
	end if;

	if (ie_tipo_p = 'P') then
		exit;
	end if;

	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	dt_geracao_w,
	ds_erro_w,
	nr_seq_xml_w,
	nr_seq_log_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	if (coalesce(nr_seq_xml_w::text, '') = '') then
		ds_erro_w := substr(wheb_mensagem_pck.get_texto(311700,'DT_GERACAO=' || to_char(dt_geracao_w,'dd/mm/yyyy hh24:mi:ss')),1,255);
	else
		if (position('Sucesso' in ds_erro_w) < 1) then
			if (position('MotivoErro' in ds_erro_w) > 0) then
				ds_erro_w := substr(ds_erro_w,position('<MotivoErro>' in ds_erro_w) + 12,position('</MotivoErro>' in ds_erro_w) - (position('<MotivoErro>' in ds_erro_w) + 12));
			else
				ds_erro_w := ds_erro_w;
			end if;
		end if;
	end if;

	update	w_rel_int_protheus
	set	ds_erro = ds_erro_w
	where	nr_seq_log = nr_seq_log_w;

	end;
end loop;
close C02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_rel_int_protheus ( ie_tipo_p text, dt_inicio_p timestamp, dt_final_p timestamp, ie_evento_p bigint, nm_usuario_p text) FROM PUBLIC;

