-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_indicador_vv (dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text) AS $body$
DECLARE


nr_seq_gerencia_w		bigint;
dt_referencia_w			timestamp;
dt_fim_mes_w			timestamp;
nr_seq_indicador_w		bigint;
qt_defeitos_w			bigint;
qt_defeitos_cli_w		bigint;
qt_defeitos_int_w		bigint;
pr_defeitos_w			double precision;
pr_defeitos_cli_w		double precision;
qt_recebidas_w			bigint;
qt_defeitos_recebidos_w		bigint;
qt_teste_amostral_w		bigint;
qt_aprovadas_w			bigint;
qt_reprovadas_w			bigint;
qt_defeitos_delphi_w		bigint;
qt_defeitos_java_w		bigint;
qt_defeitos_objetos_w		bigint;
qt_defeitos_outros_w		bigint;
qt_backlog_sla_w		bigint;
QT_DEFEITO_RECEB_CLI_w		bigint;
QT_BACKLOG_DEFEITO_w		bigint;
QT_BACKLOG_DEFEITO_wW		bigint;
nr_seq_gerencia_ww		bigint;


c01 CURSOR FOR
	SELECT	dt_mes
	from	mes_v
	where	dt_mes between dt_inicial_p and dt_final_p;


c02 CURSOR FOR
	SELECT	nr_sequencia nr_seq_gerencia
	from	gerencia_wheb
	where	ie_situacao	= 'A'
	and	ie_area_gerencia in ('DES')
	
union

	SELECT	0 nr_seq_gerencia /* Geral */
	;

c03 CURSOR FOR
	SELECT	nr_sequencia nr_seq_gerencia
	from	gerencia_wheb
	where	ie_situacao	= 'A'
	and	ie_area_gerencia in ('DES', 'TEC');


BEGIN

open c01;
loop
fetch c01 into
	dt_referencia_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		open c02;
		loop
		fetch	c02 into
			nr_seq_gerencia_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
			begin

			qt_defeitos_int_w	:= 0;
			qt_defeitos_cli_w	:= 0;
			qt_defeitos_w		:= 0;

			if (trunc(dt_referencia_w, 'month') = trunc(clock_timestamp(), 'month')) then
				dt_fim_mes_w	:= trunc(clock_timestamp() - interval '1 days', 'dd');
			else
				dt_fim_mes_w	:= trunc(last_day(dt_referencia_w), 'dd');
				end if;

			delete	from W_INDICADOR_VV
			where 	dt_referencia 	= dt_referencia_w
			and	nr_seq_gerencia	= nr_seq_gerencia_w;

			/* QTOSRG = Quantidade de OS recebida geral */

			if (nr_seq_gerencia_w	= 0) then
				select	Obter_info_os_gerencia_area(dt_referencia_w, 'DES', 'QT', null)
				into STRICT	qt_recebidas_w
				;
			else
				select 	Obter_informacao_os_ger_loc(dt_referencia_w, nr_seq_gerencia_w, 'QT', null, 0)
				into STRICT	qt_recebidas_w
				;
			end if;



			/* QT Defeitos encontrados internamente */

			if (nr_seq_gerencia_w	= 0) then
				select	Obter_info_os_gerencia_area(dt_referencia_w, 'DES', 'ERI', null)
				into STRICT	qt_defeitos_int_w
				;
			else
				select 	Obter_informacao_os_ger_loc(dt_referencia_w, nr_seq_gerencia_w, 'ERI', null, 0)
				into STRICT	qt_defeitos_int_w
				;
			end if;

			/* QT Defeitos encontrados nos clientes */

			if (nr_seq_gerencia_w	= 0) then
				select	Obter_info_os_gerencia_area(dt_referencia_w, 'DES', 'ERE', null)
				into STRICT	qt_defeitos_cli_w
				;
			else
				select 	Obter_informacao_os_ger_loc(dt_referencia_w, nr_seq_gerencia_w, 'ERE', null, 0)
				into STRICT	qt_defeitos_cli_w
				;
			end if;


			/* QT Defeitos encontrados por plataforma Delphi */

			select	count(distinct a.nr_sequencia)
			into STRICT	qt_defeitos_delphi_w
			from	os_erro_gerencia_v a, gerencia_wheb b
			where   trunc(a.dt_ordem_servico) between dt_referencia_w and dt_fim_mes_w
			and 	a.nr_seq_gerencia	= b.nr_sequencia
			and 	b.IE_AREA_GERENCIA	= 'DES'
			and     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
			and	((nr_seq_gerencia_w	= 0) or (a.nr_seq_gerencia		= nr_seq_gerencia_w))
   			and     a.nr_seq_lp in (1);

			/* QT Defeitos encontrados por plataforma JAVA */

			select	count(distinct a.nr_sequencia)
			into STRICT	qt_defeitos_java_w
			from	os_erro_gerencia_v a, gerencia_wheb b
			where   trunc(a.dt_ordem_servico) between dt_referencia_w and dt_fim_mes_w
			and 	a.nr_seq_gerencia	= b.nr_sequencia
			and 	b.IE_AREA_GERENCIA	= 'DES'
			and     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
			and	((nr_seq_gerencia_w	= 0) or (a.nr_seq_gerencia		= nr_seq_gerencia_w))
   			and     a.nr_seq_lp in (2);

			/* QT Defeitos encontrados por plataforma PL SQL*/

			select	count(distinct a.nr_sequencia)
			into STRICT	qt_defeitos_objetos_w
			from	os_erro_gerencia_v a, gerencia_wheb b
			where   trunc(a.dt_ordem_servico) between dt_referencia_w and dt_fim_mes_w
			and 	a.nr_seq_gerencia	= b.nr_sequencia
			and 	b.IE_AREA_GERENCIA	= 'DES'
			and     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
			and	((nr_seq_gerencia_w	= 0) or (nr_seq_gerencia		= nr_seq_gerencia_w))
   			and     a.nr_seq_lp in (4);

			/* QT Defeitos encontrados por plataforma Outros */

			select	count(distinct a.nr_sequencia)
			into STRICT	qt_defeitos_outros_w
			from	os_erro_gerencia_v a, gerencia_wheb b
			where   trunc(a.dt_ordem_servico) between dt_referencia_w and dt_fim_mes_w
			and 	a.nr_seq_gerencia	= b.nr_sequencia
			and 	b.IE_AREA_GERENCIA	= 'DES'
			and     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
			and	((nr_seq_gerencia_w	= 0) or (nr_seq_gerencia		= nr_seq_gerencia_w))
   			and     a.nr_seq_lp not in (1, 2, 4);


			/* QT Defeitos - Total */

			qt_defeitos_w	:= qt_defeitos_int_w + qt_defeitos_cli_w;

			/* PR Defeitos (geral e que chegaram no cliente) */

			if (nr_seq_gerencia_w	= 0) then
				select	sum(Obter_info_os_gerencia_area(dt_fim_mes_w, 'DES', 'PREX', null)) pr_defeito,
       					sum(Obter_info_os_gerencia_area(dt_fim_mes_w, 'DES', 'PR', null)) pr_interno
				into STRICT	pr_defeitos_cli_w,
					pr_defeitos_w
				;
			else
				select	sum(Obter_informacao_os_ger_loc(dt_fim_mes_w, nr_seq_gerencia_w, 'PREX', null,0)) pr_defeito,
       					sum(Obter_informacao_os_ger_loc(dt_fim_mes_w, nr_seq_gerencia_w, 'PR', null,0)) pr_interno
				into STRICT	pr_defeitos_cli_w,
					pr_defeitos_w
				;
			end if;

			/* Qtde de defeitos recebidos */

			select	count(*)
			into STRICT	qt_defeitos_recebidos_w
			from	man_ordem_servico a,
				grupo_desenvolvimento b,
				gerencia_wheb c
			where 	a.nr_seq_grupo_des	= b.nr_sequencia
			and 	b.nr_seq_gerencia	= c.nr_sequencia
			and 	c.IE_AREA_GERENCIA	= 'DES'
			and	((nr_seq_gerencia_w	= 0) or (b.nr_seq_gerencia		= nr_seq_gerencia_w))
			and	trunc(a.dt_ordem_servico)	between dt_referencia_w and dt_fim_mes_w
			and	a.IE_CLASSIFICACAO 	= 'E';

			/* Qtde de defeitos recebidos - Classificação do cliente */

			select	count(*)
			into STRICT	QT_DEFEITO_RECEB_CLI_w
			from	man_ordem_servico a,
				grupo_desenvolvimento b,
				gerencia_wheb c
			where 	a.nr_seq_grupo_des	= b.nr_sequencia
			and	((nr_seq_gerencia_w	= 0) or (b.nr_seq_gerencia		= nr_seq_gerencia_w))
			and 	b.nr_seq_gerencia	= c.nr_sequencia
			and 	c.IE_AREA_GERENCIA	= 'DES'
			and	trunc(a.dt_ordem_servico)	between dt_referencia_w and dt_fim_mes_w
			and	a.IE_CLASSIFICACAO_cliente = 'E';

			/* Qtde de defeitos pendentes */

			if (nr_seq_gerencia_w	= 0) then
				select	Obter_info_os_gerencia_area(dt_referencia_w , 'DES', 'QTSLA', null)
				into STRICT	qt_backlog_sla_w
				;
			else
				select  sum(qt_sla_pendente)
				into STRICT	qt_backlog_sla_w
				from    w_indicador_desenv_apres
				where 	((nr_seq_gerencia_w	= 0) or (nr_seq_gerencia		= nr_seq_gerencia_w))
				and     coalesce(nr_seq_grupo::text, '') = ''
				and     dt_referencia   = dt_referencia_w;
			end if;

			/* Qtde de aprovações */

			select 	count(*)
			into STRICT	qt_aprovadas_w
			from 	grupo_desenvolvimento c,
				man_ordem_servico a,
				man_ordem_serv_tecnico b
			where 	a.nr_sequencia = b.nr_seq_ordem_serv
			and 	b.nr_seq_tipo = 117
			and	((nr_seq_gerencia_w	= 0) or (c.nr_seq_gerencia		= nr_seq_gerencia_w))
			and	a.nr_seq_grupo_des	= c.nr_sequencia
			and 	b.dt_historico between dt_referencia_w and dt_fim_mes_w
			and	CD_PESSOA_SOLICITANTE <> '14335';

			/* Qtde de reprovações */

			select 	count(*)
			into STRICT	qt_reprovadas_w
			from 	grupo_desenvolvimento c,
				man_ordem_servico a,
				man_ordem_serv_tecnico b
			where 	a.nr_sequencia = b.nr_seq_ordem_serv
			and 	b.nr_seq_tipo = 118
			and	((nr_seq_gerencia_w	= 0) or (c.nr_seq_gerencia		= nr_seq_gerencia_w))
			and	a.nr_seq_grupo_des	= c.nr_sequencia
			and 	b.dt_historico between dt_referencia_w and dt_fim_mes_w
			and	CD_PESSOA_SOLICITANTE <> '14335';

			/* Qtde de ordens em testes amostrais 	 */

			select 	count(distinct a.nr_sequencia)
			into STRICT	qt_teste_amostral_w
			from 	grupo_desenvolvimento c,
				man_ordem_servico a,
				man_ordem_serv_tecnico b
			where 	a.nr_sequencia = b.nr_seq_ordem_serv
			and 	b.nr_seq_tipo in (117, 118)
			and	((nr_seq_gerencia_w	= 0) or (c.nr_seq_gerencia		= nr_seq_gerencia_w))
			and	a.nr_seq_grupo_des	= c.nr_sequencia
			and 	b.dt_historico between dt_referencia_w and dt_fim_mes_w
			and	CD_PESSOA_SOLICITANTE <> '14335';


			/* Qtde de defeito - Backlog 	 */

			if (nr_seq_gerencia_w = 0) then
				begin

				select	Obter_info_os_gerencia_area(dt_referencia_w, 'DES', 'QTBACKLOGDEF', null)
				into STRICT	QT_BACKLOG_DEFEITO_w
				;

				end;
			else
				select 	sum(somente_numero(Man_Obter_Ordens_Dia(dt_referencia_w,'DP', nr_seq_gerencia_w, null, '', 'Tasy')))
				into STRICT	QT_BACKLOG_DEFEITO_w
				;
			end if;

			select	nextval('w_indicador_vv_seq')
			into STRICT	nr_seq_indicador_w
			;

			insert	into w_indicador_vv(NR_SEQUENCIA,
				DT_ATUALIZACAO,
				NM_USUARIO,
				DT_ATUALIZACAO_NREC,
				NM_USUARIO_NREC,
				NR_SEQ_GERENCIA,
				DT_REFERENCIA,
				QT_DEFEITOS,
				QT_DEFEITOS_CLI,
				QT_DEFEITOS_INT,
				PR_DEFEITOS,
				PR_DEFEITOS_CLI,
				QT_RECEBIDAS,
				QT_TESTE_AMOSTRAL,
				QT_APROVADAS,
				QT_REPROVADAS,
				QT_DEFEITOS_DELPHI,
				QT_DEFEITOS_JAVA,
				QT_DEFEITOS_OBJETOS,
				QT_DEFEITOS_OUTROS,
				qt_defeitos_recebidos,
				qt_backlog_sla,
				QT_DEFEITO_RECEB_CLI,
				QT_BACKLOG_DEFEITO)
			values (nr_seq_indicador_w,
				clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p,
				nr_seq_gerencia_w,
				dt_referencia_w,
				qt_defeitos_w,
				qt_defeitos_cli_w,
				qt_defeitos_int_w,
				pr_defeitos_w,
				pr_defeitos_cli_w,
				qt_recebidas_w,
				qt_teste_amostral_w,
				qt_aprovadas_w,
				qt_reprovadas_w,
				qt_defeitos_delphi_w,
				qt_defeitos_java_w,
				qt_defeitos_objetos_w,
				qt_defeitos_outros_w,
				qt_defeitos_recebidos_w,
				qt_backlog_sla_w,
				QT_DEFEITO_RECEB_CLI_w,
				QT_BACKLOG_DEFEITO_w);


			end;
		end loop;
		close c02;
		end;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_indicador_vv (dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text) FROM PUBLIC;

