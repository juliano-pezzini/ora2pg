-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_descricao_proced (nr_cirurgia_p bigint, nm_usuario_p text) AS $body$
DECLARE





nr_seq_autor_conv_w			bigint;
nr_prescricao_w				bigint;
cd_procedimento_w			bigint;
cd_procedimento_ww			bigint;
ie_origem_proced_w 			bigint;
ie_origem_proced_ww 		bigint;
qt_procedimento_w			bigint;
nr_seq_desc_proced_w		bigint;
ie_proc_sem_autor_w			varchar(1) := 'S';

c01 CURSOR FOR
SELECT  a.cd_procedimento,
	    a.ie_origem_proced,
		a.qt_procedimento
from    prescr_procedimento a,
		procedimento_autorizado b,
		autorizacao_convenio z
where   a.nr_prescricao	 		= 	nr_prescricao_w
and		b.nr_sequencia_autor 	=  	nr_seq_autor_conv_w
and		a.cd_procedimento	    =	b.cd_procedimento
and		b.nr_sequencia_autor 	= 	z.nr_sequencia
and		a.ie_origem_proced	    =	b.ie_origem_proced
and		obter_estagio_autor(z.nr_seq_estagio,'C') not in (10,70);

c02 CURSOR FOR
SELECT  a.cd_procedimento,
	    a.ie_origem_proced,
		a.qt_procedimento
from    prescr_procedimento a
where   a.nr_prescricao	 		= 	nr_prescricao_w;

c03 CURSOR FOR

SELECT  a.nr_sequencia
from    autorizacao_convenio a,
		cirurgia d
where  a.nr_atendimento   = d.nr_atendimento
and	   a.cd_convenio	  = d.cd_convenio
and    d.nr_cirurgia 	  = nr_cirurgia_p;


BEGIN

delete
from   	w_descricao_proced
where	nr_cirurgia 	=	nr_cirurgia_p
and		nm_usuario		=	nm_usuario_p;

commit;

select  max(a.nr_prescricao)
into STRICT	nr_prescricao_w
from	cirurgia a
where 	a.nr_cirurgia	=	nr_cirurgia_p;

select  max(a.nr_sequencia)
into STRICT	nr_seq_autor_conv_w
from    autorizacao_convenio a,
		agenda_paciente c,
		cirurgia d
where   c.nr_cirurgia = d.nr_cirurgia
and		c.nr_sequencia = a.nr_seq_agenda
and     d.nr_cirurgia = nr_cirurgia_p;


open C03;
loop
fetch C03 into
	nr_seq_autor_conv_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin

	ie_proc_sem_autor_w := 'N';

	OPEN C01;
		LOOP
			FETCH C01 INTO
			cd_procedimento_w,
			ie_origem_proced_w,
			qt_procedimento_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
			begin

			select 	nextval('w_descricao_proced_seq')
			into STRICT	nr_seq_desc_proced_w
			;

			insert into  w_descricao_proced(nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											dt_atualizacao_nrec,
											nm_usuario_nrec,
											nr_cirurgia,
											cd_procedimento,
											ie_origem_proced,
											qt_solicitada,
											qt_realizada,
											ds_justificativa)
						values (nr_seq_desc_proced_w,
											clock_timestamp(),
											nm_usuario_p,
											clock_timestamp(),
											nm_usuario_p,
											nr_cirurgia_p,
											cd_procedimento_w,
											ie_origem_proced_w,
											qt_procedimento_w,
											null,
											null);


			end;
		END LOOP;
	CLOSE C01;

	end;
end loop;
close C03;

if (ie_proc_sem_autor_w = 'S') then
	open C02;
	loop
	fetch C02 into
		cd_procedimento_w,
		ie_origem_proced_w,
		qt_procedimento_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

			select 	nextval('w_descricao_proced_seq')
			into STRICT	nr_seq_desc_proced_w
			;

		insert into  w_descricao_proced(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_cirurgia,
								cd_procedimento,
								ie_origem_proced,
								qt_solicitada,
								qt_realizada,
								ds_justificativa)
			values (nr_seq_desc_proced_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_cirurgia_p,
								cd_procedimento_w,
								ie_origem_proced_w,
								qt_procedimento_w,
								null,
								null);
		end;
	end loop;
	close C02;

end if;
commit;

end	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_descricao_proced (nr_cirurgia_p bigint, nm_usuario_p text) FROM PUBLIC;

