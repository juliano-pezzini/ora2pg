-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_requisicao_atend ( nr_seq_segurado_p bigint, ie_tipo_guia_p text, cd_medico_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_atendimento_p bigint, nr_seq_evento_atend_p bigint, nr_seq_prestador_solic_p bigint, nr_seq_requisicao_p INOUT bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar a requisição através do Atendimento (call center)
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_plano_w			bigint;
nr_seq_requisicao_w		bigint;
cd_cooperativa_w		varchar(10);
nr_seq_uni_exec_w		bigint;
ie_lanc_auto_w			varchar(1);
ie_tipo_segurado_w		varchar(255);
ie_tipo_processo_w		varchar(255)	:= 'M';
ie_tipo_intercambio_w		varchar(255);
nr_seq_cbo_w			tiss_cbo_saude.nr_seq_cbo_saude%type;


BEGIN

select	nextval('pls_requisicao_seq')
into STRICT	nr_seq_requisicao_w
;

select	nr_seq_plano
into STRICT	nr_seq_plano_w
from	pls_segurado
where	nr_sequencia = nr_seq_segurado_p;

cd_cooperativa_w := pls_obter_unimed_estab(cd_estabelecimento_p);

if (coalesce(cd_cooperativa_w,'0') <> '0') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_uni_exec_w
	from	pls_congenere
	where	cd_cooperativa = cd_cooperativa_w;
end if;

ie_tipo_segurado_w	:= pls_obter_dados_segurado(nr_seq_segurado_p, 'TP');

if (coalesce(ie_tipo_segurado_w,'X')	in ('I','H')) then
	ie_tipo_processo_w	:= 'I';
	ie_tipo_intercambio_w	:= 'I';
end if;

/* Caso tenha sido informado o médico, é obtido o CBO deste médico para gravar na requisição */

if (cd_medico_p IS NOT NULL AND cd_medico_p::text <> '') then
	begin
		select	substr(PLS_OBTER_CBO_MEDICO(cd_medico_p),1,255)
		into STRICT	nr_seq_cbo_w
		;
	exception
	when others then
		nr_seq_cbo_w	:= null;
	end;
end if;

insert into pls_requisicao(nr_sequencia, dt_requisicao, dt_atualizacao,
	nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
	nr_seq_segurado, cd_medico_solicitante, nr_seq_plano,
	cd_estabelecimento, ie_tipo_guia, ie_estagio,
	ie_tipo_requisicao, nr_seq_evento_atend, nr_seq_atend_pls,
	nm_usuario_solic, ie_origem_solic, nr_seq_prestador,
	nr_seq_uni_exec, ie_tipo_processo, ie_tipo_intercambio,
	ie_tipo_gat, nr_seq_cbo_saude)
values (nr_seq_requisicao_w, clock_timestamp(), clock_timestamp(),
	nm_usuario_p, clock_timestamp(), nm_usuario_p,
	nr_seq_segurado_p, cd_medico_p, nr_seq_plano_w,
	cd_estabelecimento_p, ie_tipo_guia_p, 1,
	'M', nr_seq_evento_atend_p, nr_seq_atendimento_p,
	nm_usuario_p, 'M', nr_seq_prestador_solic_p,
	nr_seq_uni_exec_w, ie_tipo_processo_w, ie_tipo_intercambio_w,
	'N', nr_seq_cbo_w);

CALL pls_requisicao_gravar_hist(	nr_seq_requisicao_w,'L', 'Requisição nº '||nr_seq_requisicao_w||' criada no setor de Gestão de Atendimento pelo usuário '||nm_usuario_p||' em '||to_char(clock_timestamp(),'dd/mm/yyyy hh24:mi:ss'),
				null,nm_usuario_p);

nr_seq_requisicao_p := nr_seq_requisicao_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_requisicao_atend ( nr_seq_segurado_p bigint, ie_tipo_guia_p text, cd_medico_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_atendimento_p bigint, nr_seq_evento_atend_p bigint, nr_seq_prestador_solic_p bigint, nr_seq_requisicao_p INOUT bigint) FROM PUBLIC;

