-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_tit_pagar_discussao (nr_seq_lote_discussao_p bigint, nr_seq_acao_p bigint, nm_usuario_p text, cd_estabelecimento_p text) AS $body$
DECLARE

 
nr_seq_lote_contest_w		bigint;
nr_seq_fatura_w			bigint;
vl_recurso_proc_w		double precision;
vl_recurso_mat_w		double precision;
vl_total_recurso_w		double precision;
nr_nota_credito_debito_w	bigint;
ie_status_w			varchar(2) := 'P';
nr_seq_acao_w			bigint;

nr_titulo_w			bigint;
cd_moeda_cp_w			integer;
cd_tipo_taxa_juro_cp_w		bigint;
cd_tipo_taxa_multa_cp_w		bigint;
tx_juros_cp_w			double precision;
tx_multa_cp_w			double precision;
dt_emissao_fatura_w		timestamp;
dt_vencimento_w			timestamp;
cd_cgc_w			varchar(14);
nr_fatura_w			varchar(20);
cd_unimed_origem_w		varchar(20);
nr_seq_congenere_w		bigint;
nr_seq_trans_fin_baixa_w	bigint;
nr_seq_trans_fin_contab_w	bigint;
--qt_dias_vencimento_w		number(10); 
ie_status_tit_pagar_w		varchar(3);
ie_tit_pagar_lib_pagamento_w	varchar(1);
nr_seq_pls_fatura_w		bigint;
nr_seq_classe_w			titulo_pagar.nr_seq_classe%type;
	

BEGIN 
/* Obter o lote de contestação do lote da discussão */
 
select	max(a.nr_seq_lote_contest) 
into STRICT	nr_seq_lote_contest_w 
from	pls_lote_discussao a 
where	a.nr_sequencia = nr_seq_lote_discussao_p;
 
/* Somar todo o valor recursado para lançar a geração do título a pagar */
 
select	coalesce(sum(b.vl_recurso),0) 
into STRICT	vl_recurso_proc_w 
from	pls_discussao_proc b, 
	pls_contestacao_discussao a 
where	a.nr_sequencia	= b.nr_seq_discussao 
and	a.nr_seq_lote	= nr_seq_lote_discussao_p;
 
select	coalesce(sum(b.vl_recurso),0) 
into STRICT	vl_recurso_mat_w 
from	pls_discussao_mat b, 
	pls_contestacao_discussao a 
where	a.nr_sequencia	= b.nr_seq_discussao 
and	a.nr_seq_lote	= nr_seq_lote_discussao_p;
 
select	coalesce(a.nr_nota_credito_debito,0) 
into STRICT	nr_nota_credito_debito_w 
from	pls_lote_discussao a 
where	a.nr_sequencia = nr_seq_lote_discussao_p;
 
if (vl_recurso_proc_w + vl_recurso_mat_w > 0) then				/* VL RECURSADO */
 
	vl_total_recurso_w	:= vl_recurso_proc_w + vl_recurso_mat_w;
	 
	/* Obter fatura PTU */
 
	select	max(a.nr_seq_ptu_fatura), 
		max(a.nr_seq_pls_fatura) 
	into STRICT	nr_seq_fatura_w, 
		nr_seq_pls_fatura_w 
	from	pls_lote_contestacao a 
	where	a.nr_sequencia = nr_seq_lote_contest_w;
	 
	/* Pagamento */
 
	if (nr_seq_fatura_w IS NOT NULL AND nr_seq_fatura_w::text <> '') then 
		select	a.cd_unimed_origem, 
			a.dt_emissao_fatura 
		into STRICT	cd_unimed_origem_w, 
			dt_emissao_fatura_w 
		from	ptu_fatura a 
		where	a.nr_sequencia	= nr_seq_fatura_w;
		 
		select	max(a.cd_cgc), 
			max(a.nr_sequencia) 
		into STRICT	cd_cgc_w, 
			nr_seq_congenere_w 
		from	pls_congenere a 
		where	(a.cd_cooperativa)::numeric 	= (cd_unimed_origem_w)::numeric;
	end if;
	 
	/* Faturamento */
 
	if (nr_seq_pls_fatura_w IS NOT NULL AND nr_seq_pls_fatura_w::text <> '') then 
		select	max(a.cd_cgc), 
			max(a.cd_cooperativa) 
		into STRICT	cd_cgc_w, 
			cd_unimed_origem_w 
		from	pls_congenere	a, 
			pls_fatura	b 
		where	a.nr_sequencia	= b.nr_seq_congenere 
		and	b.nr_sequencia	= nr_seq_pls_fatura_w;
	end if;
	 
	if (coalesce(cd_cgc_w::text, '') = '') then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(189165,'CD_UNIMED_ORIGEM='||cd_unimed_origem_w);
	end if;
		 
	begin 
	select	a.cd_moeda_padrao, 
		a.cd_tipo_taxa_juro, 
		a.cd_tipo_taxa_multa, 
		a.pr_juro_padrao, 
		a.pr_multa_padrao 
	into STRICT	cd_moeda_cp_w, 
		cd_tipo_taxa_juro_cp_w, 
		cd_tipo_taxa_multa_cp_w, 
		tx_juros_cp_w, 
		tx_multa_cp_w 
	from	parametros_contas_pagar a 
	where	a.cd_estabelecimento	= cd_estabelecimento_p;
	exception 
		when no_data_found then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(189164);
	end;
	 
	select 	max(a.nr_seq_trans_fin_baixa), 
		max(a.nr_seq_trans_fin_contab), 
		--nvl(max(a.qt_dias_vencimento),0), 
		CASE WHEN max(a.ie_tit_pagar_lib_pagamento)='S' THEN 'D'  ELSE 'P' END , 
		max(ie_status_tit_pagar), 
		max(ie_tit_pagar_lib_pagamento), 
		max(nr_seq_classe) 
	into STRICT	nr_seq_trans_fin_baixa_w, 
		nr_seq_trans_fin_contab_w, 
		--qt_dias_vencimento_w, 
		ie_status_w, 
		ie_status_tit_pagar_w, 
		ie_tit_pagar_lib_pagamento_w, 
		nr_seq_classe_w 
	from	pls_processo_interc_acao a 
	where	a.nr_sequencia = nr_seq_acao_p;	
	 
	if (ie_status_tit_pagar_w = 'P') then 
		ie_tit_pagar_lib_pagamento_w := 'N';
	end if;
	 
	--if	(qt_dias_vencimento_w > 0) then 
	--	dt_vencimento_w := trunc((sysdate + qt_dias_vencimento_w),'dd'); 
	--else 
	dt_vencimento_w := trunc(clock_timestamp(),'dd');
	--end if; 
	 
	select	nextval('titulo_pagar_seq') 
	into STRICT	nr_titulo_w 
	;
	 
	insert into titulo_pagar(nr_titulo, 
		nm_usuario, 
		dt_atualizacao, 
		cd_estabelecimento, 
		vl_titulo, 
		vl_saldo_titulo, 
		dt_emissao, 
		dt_contabil, 
		dt_vencimento_original, 
		dt_vencimento_atual, 
		vl_saldo_juros, 
		vl_saldo_multa, 
		cd_moeda, 
		cd_tipo_taxa_juro, 
		cd_tipo_taxa_multa, 
		tx_juros, 
		tx_multa, 
		ie_origem_titulo, 
		ie_tipo_titulo, 
		ie_situacao, 
		cd_pessoa_fisica, 
		cd_cgc, 
		ie_pls, 
		nr_lote_contabil, 
		ds_observacao_titulo, 
		nr_seq_trans_fin_baixa, 
		nr_seq_trans_fin_contab, 
		ie_desconto_dia, 
		ie_bloqueto, 
		nr_seq_pls_lote_disc, 
		nr_seq_pls_lote_contest, 
		nr_documento, 
		ie_status, 
		dt_liberacao, 
		nm_usuario_lib, 
		nr_seq_classe) 
	values (nr_titulo_w, 
		nm_usuario_p, 
		clock_timestamp(), 
		cd_estabelecimento_p, 
		coalesce(vl_total_recurso_w,0), 
		coalesce(vl_total_recurso_w,0), 
		clock_timestamp(), 
		clock_timestamp(), 
		dt_vencimento_w, 
		dt_vencimento_w, 
		0, 
		0, 
		cd_moeda_cp_w, 
		cd_tipo_taxa_juro_cp_w, 
		cd_tipo_taxa_multa_cp_w, 
		tx_juros_cp_w, 
		tx_multa_cp_w, 
		'19', --Contestação 
		'27', --27 - Nota a pagar (crédito/débito) 
		'A', 
		null, 
		cd_cgc_w, 
		'S', 
		0, 
		'Título gerado à partir do encaminhamento da discussão para análise.', 
		nr_seq_trans_fin_baixa_w, 
		nr_seq_trans_fin_contab_w, 
		'N', 
		'N', 
		nr_seq_lote_discussao_p, 
		nr_seq_lote_contest_w, 
		nr_nota_credito_debito_w, 
		ie_status_tit_pagar_w, 
		CASE WHEN ie_tit_pagar_lib_pagamento_w='S' THEN clock_timestamp()  ELSE null END , 
		CASE WHEN ie_tit_pagar_lib_pagamento_w='S' THEN 'Tasy'  ELSE null END , 
		nr_seq_classe_w);
		 
	CALL atualizar_inclusao_tit_pagar(nr_titulo_w, nm_usuario_p);
	 
	update	pls_lote_discussao 
	set	nr_titulo_pagar		= nr_titulo_w, 
		nr_nota_credito_debito	= nr_titulo_w 
	where	nr_sequencia		= nr_seq_lote_discussao_p;
end if;
 
--commit; 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_tit_pagar_discussao (nr_seq_lote_discussao_p bigint, nr_seq_acao_p bigint, nm_usuario_p text, cd_estabelecimento_p text) FROM PUBLIC;

