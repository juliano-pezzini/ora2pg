-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_proced_assoc_rec_conta ( nr_prescricao_p bigint, nr_seq_recomendacao_p bigint, cd_tipo_recomendacao_p bigint, nm_usuario_p text, nr_seq_horario_p bigint, ie_gerar_estorn_p text) AS $body$
DECLARE


cd_procedimento_w		bigint;
ie_orig_proced_w		bigint;
qt_procedimento_w		double precision;
nr_seq_exame_w			bigint;
ds_observacao_w			varchar(255);
cd_setor_atendimento_w	integer;
nr_agrup_acum_w			bigint;
nr_seq_acum_w			bigint;
nr_seq_proc_interno_w	bigint;
nr_atendimento_w		bigint;
cont_w					bigint;
nr_horas_validade_w		bigint;
ie_cobrar_intervalo_w	varchar(10);
ie_cobrar_horario_w		varchar(10);
ie_considerar_dia_w		varchar(10);
ie_cobrar_internacao_w	varchar(1);
dt_prescricao_w			timestamp;
cd_material_exame_w		varchar(20);
cd_intervalo_w			varchar(7);
ds_horarios_w			varchar(2000);
nr_ocorrencia_w			double precision;
nr_ocorrencia_ww		prescr_recomendacao.nr_ocorrencia%type;
cd_convenio_w			bigint;
cd_estabelecimento_w	bigint;
ie_conta_rep_w			varchar(1);
ie_quant_validade_w		varchar(1);
ie_tipo_convenio_w		smallint;
cd_setor_atendimento_ww	setor_atendimento.cd_setor_atendimento%type;
qt_total_proc_w			double precision;

c01 CURSOR FOR
SELECT	cd_procedimento,
		ie_origem_proced,
		qt_procedimento,
		nr_seq_exame,
		cd_material_exame,
		ds_observacao,
		cd_setor_atendimento,
		nr_seq_proc_interno,
		coalesce(cd_intervalo,cd_intervalo_w),
		ie_considerar_dia,
		ie_cobrar_intervalo,
		ie_cobrar_internacao,
		coalesce(a.ie_conta_rep,'P') ie_conta_rep,
		coalesce(a.ie_quantidade_validade, 'N') ie_quantidade_validade
from	regra_proced_recomendacao a
where	(((coalesce(a.ie_conta_rep,'P')	= 'C') and (nr_seq_horario_p IS NOT NULL AND nr_seq_horario_p::text <> '')) or
		 ((coalesce(a.ie_conta_rep,'P')	= 'T') and (coalesce(nr_seq_horario_p::text, '') = '')))
and		((coalesce(cd_estab::text, '') = '') or (cd_estab = cd_estabelecimento_w))
and		((coalesce(a.cd_convenio::text, '') = '') or (a.cd_convenio = cd_convenio_w))
and		((coalesce(a.ie_tipo_convenio::text, '') = '') or (a.ie_tipo_convenio = ie_tipo_convenio_w))
and		((coalesce(a.cd_setor_regra::text, '') = '') or (a.cd_setor_regra = cd_setor_atendimento_w))
and		a.cd_tipo_recomendacao	= cd_tipo_recomendacao_p
and		((coalesce(a.cd_intervalo::text, '') = '') or (a.cd_intervalo = cd_intervalo_w));


BEGIN

select	max(dt_prescricao),
		max(cd_estabelecimento),
		max(nr_atendimento),
		max(nr_horas_validade),
		max(obter_convenio_atendimento(nr_atendimento)),
		max(cd_estabelecimento),
		max(obter_tipo_convenio_atend(nr_atendimento)),
		max(cd_setor_atendimento)
into STRICT	dt_prescricao_w,
		cd_estabelecimento_w,
		nr_atendimento_w,
		nr_horas_validade_w,
		cd_convenio_w,
		cd_estabelecimento_w,
		ie_tipo_convenio_w,
		cd_setor_atendimento_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

select	max(cd_intervalo),
		max(ds_horarios),
		obter_ocorrencias_horarios_rep(max(ds_horarios))
into STRICT	cd_intervalo_w,
		ds_horarios_w,
		nr_ocorrencia_ww
from	prescr_recomendacao
where	cd_recomendacao	= cd_tipo_recomendacao_p
and		nr_sequencia	= nr_seq_recomendacao_p
and		nr_prescricao	= nr_prescricao_p;

open C01;
loop
fetch C01 into
	cd_procedimento_w,
	ie_orig_proced_w,
	qt_procedimento_w,
	nr_seq_exame_w,
	cd_material_exame_w,
	ds_observacao_w,
	cd_setor_atendimento_ww,
	nr_seq_proc_interno_w,
	cd_intervalo_w,
	ie_considerar_dia_w,
	ie_cobrar_intervalo_w,
	ie_cobrar_internacao_w,
	ie_conta_rep_w,
	ie_quant_validade_w;
EXIT WHEN NOT FOUND; /* apply on C01 */


	if (ie_conta_rep_w = 'T') and (ie_quant_validade_w = 'S') and (nr_horas_validade_w IS NOT NULL AND nr_horas_validade_w::text <> '') then
		qt_procedimento_w	:= nr_horas_validade_w;
	end if;

	select	coalesce(max(nr_sequencia),0),
			coalesce(max(nr_agrupamento),0)
	into STRICT	nr_seq_acum_w,
			nr_agrup_acum_w
	from	prescr_procedimento
	where	nr_prescricao = nr_prescricao_p;

	if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
		SELECT * FROM Obter_Proc_Tab_Interno(nr_seq_proc_interno_w, nr_prescricao_p, nr_atendimento_w, 0, cd_procedimento_w, ie_orig_proced_w, null, null) INTO STRICT cd_procedimento_w, ie_orig_proced_w;
	end if;

	select	count(1)
	into STRICT	qt_total_proc_w
	from	prescr_rec_hor a
	where (	SELECT	coalesce(sum(qt_procedimento),0)
				from	procedimento_paciente
				where	1 = 1
				and		nr_seq_proc_interno	= nr_seq_proc_interno_w
				and		cd_procedimento		= cd_procedimento_w
				and		ie_origem_proced	= ie_orig_proced_w
				and		nr_prescricao		= nr_prescricao_p) > 0
	and		(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '')
	and		nr_sequencia		<> nr_seq_horario_p
	and		nr_seq_recomendacao 	= nr_seq_recomendacao_p
	and		nr_prescricao		= nr_prescricao_p;

	if (coalesce(nr_seq_proc_interno_w,0) > 0) then
		select	coalesce(max(ie_cobrar_horario),'N')
		into STRICT	ie_cobrar_horario_w
		from	proc_interno
		where	nr_sequencia	= nr_seq_proc_interno_w;

		if (ie_cobrar_horario_w = 'N') then
			qt_total_proc_w := 0;
		end if;
	end if;

	if (ie_considerar_dia_w = 'S') and (qt_total_proc_w = 0) then

		select	coalesce(sum(qt_procedimento),0)
		into STRICT	qt_total_proc_w
		from	procedimento_paciente a,
				conta_paciente b
		where	a.nr_interno_conta	= b.nr_interno_conta
		and		a.cd_procedimento	= cd_procedimento_w
		and		b.nr_atendimento	= nr_atendimento_w
		and		pkg_date_utils.start_of(a.dt_conta,'DD',0)	= pkg_date_utils.start_of(clock_timestamp(),'DD',0)
		and		a.ie_origem_proced	= ie_orig_proced_w;

	end if;

	if (ie_cobrar_internacao_w = 'S') and (qt_total_proc_w = 0) then

		select	coalesce(sum(qt_procedimento),0)
		into STRICT	qt_total_proc_w
		from	procedimento_paciente a,
				conta_paciente b
		where	a.nr_interno_conta	= b.nr_interno_conta
		and		b.nr_atendimento	= nr_atendimento_w
		and		a.cd_procedimento	= cd_procedimento_w
		and		a.ie_origem_proced	= ie_orig_proced_w;

	end if;

	if (ie_cobrar_intervalo_w = 'S') then
		nr_ocorrencia_w		:= coalesce(nr_ocorrencia_ww,Obter_ocorrencia_intervalo(cd_intervalo_w, nr_horas_validade_w, 'O'));
		qt_procedimento_w	:= qt_procedimento_w * coalesce(nr_ocorrencia_w,1);
	end if;

	if	(qt_total_proc_w = 0 AND ie_gerar_estorn_p <> 'E') then
		CALL gerar_proc_pac_item_prescr(nr_prescricao_p, null, null,null,nr_seq_proc_interno_w, cd_procedimento_w, ie_orig_proced_w, qt_procedimento_w, cd_setor_atendimento_ww,1, clock_timestamp(), nm_usuario_p, NULL, nr_seq_exame_w, NULL, null);
	elsif (qt_total_proc_w > 0 AND ie_gerar_estorn_p = 'E') then
		qt_procedimento_w	:= qt_procedimento_w * -1;
		CALL gerar_proc_pac_item_prescr(nr_prescricao_p, null, null,null,nr_seq_proc_interno_w, cd_procedimento_w, ie_orig_proced_w, qt_procedimento_w, cd_setor_atendimento_ww,1, clock_timestamp(), nm_usuario_p, NULL, nr_seq_exame_w, NULL, null);
	end if;

end loop;
close C01;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_proced_assoc_rec_conta ( nr_prescricao_p bigint, nr_seq_recomendacao_p bigint, cd_tipo_recomendacao_p bigint, nm_usuario_p text, nr_seq_horario_p bigint, ie_gerar_estorn_p text) FROM PUBLIC;

