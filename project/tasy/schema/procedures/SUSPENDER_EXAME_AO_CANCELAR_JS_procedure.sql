-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE suspender_exame_ao_cancelar_js (nr_prescricao_p bigint, nr_seq_prescr_p bigint, cd_motivo_baixa_p bigint, ds_observacao_p text, ie_suspender_p text, nm_usuario_p text) AS $body$
DECLARE


ie_data_canc_exame_w		 varchar(1);
ie_suspende_w				 varchar(1);
ie_retorno_w				 char(1);
dt_envio_w				  	 timestamp;
ie_lote_externo_w            char(1) := 'N';
ie_retirar_lote_cancelar_w   char(1);
nr_seq_interno_w		bigint;
nr_seq_interno_aprovado_w	bigint;
qt_exame_pendente_w		bigint;
qt_exame_aprovado_w		bigint;
nr_atendimento_w		bigint;
nr_seq_evento_w			bigint;
nr_seq_exame_w			exame_lab_result_item.nr_seq_exame%type;
nr_prescricao_w			prescr_medica.nr_prescricao%type;
nr_seq_prescr_w			prescr_procedimento.nr_sequencia%type;
dt_aprovacao_w			exame_lab_result_item.dt_aprovacao%type;
cd_medico_resp_w		exame_lab_result_item.cd_medico_resp%type;
qt_evento_w			bigint;
cd_procedencia_w		atendimento_paciente.cd_procedencia%type;
ie_cancelar_autor_prescr_w		varchar(1);


c01 CURSOR FOR
	SELECT	a.nr_seq_evento
	from	regra_envio_sms a
	where	a.ie_evento_disp = 'APRTEA'
	and	coalesce(a.ie_situacao,'A') = 'A'
	and	((a.cd_procedencia = cd_procedencia_w) or (coalesce(a.cd_procedencia::text, '') = ''));


BEGIN

ie_data_canc_exame_w	:= coalesce(obter_valor_param_usuario(722, 262, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');
ie_suspende_w			:= coalesce(obter_valor_param_usuario(722, 97, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');

select	coalesce(max(ie_cancelar_autor_prescr),'N')
into STRICT	ie_cancelar_autor_prescr_w
from	parametro_faturamento
where	cd_estabelecimento	= wheb_usuario_pck.get_cd_estabelecimento;

if (ie_suspende_w = 'N') then

	update 	prescr_procedimento
	set 	cd_motivo_baixa = cd_motivo_baixa_p,
			dt_baixa = clock_timestamp(),
			nm_usuario = nm_usuario_p,
			nm_usuario_baixa = nm_usuario_p,
			ds_observacao_canc_exame = ds_observacao_p,
			ie_suspenso = CASE WHEN ie_suspender_p='N' THEN ie_suspenso  ELSE 'S' END
	where 	nr_prescricao = nr_prescricao_p
	and 	nr_sequencia = nr_seq_prescr_p
	and 	cd_motivo_baixa = 0;

elsif (ie_suspende_w = 'S') then

	update 	prescr_procedimento
	set 	cd_motivo_baixa = cd_motivo_baixa_p,
			dt_baixa = clock_timestamp(),
			nm_usuario = nm_usuario_p,
			nm_usuario_baixa = nm_usuario_p,
			ds_observacao_canc_exame = ds_observacao_p,
			ie_suspenso = CASE WHEN ie_suspender_p='N' THEN ie_suspenso  ELSE 'S' END ,
			nm_usuario_susp = nm_usuario_p,
			dt_suspensao = clock_timestamp()
	where 	nr_prescricao = nr_prescricao_p
	and 	nr_sequencia = nr_seq_prescr_p
	and 	cd_motivo_baixa = 0;

end if;

--Este update foi colocado separado por causa da consistÃªncia na trigger "PRESCR_PROCEDIMENTO_UPDATE". OS: 485316
if (ie_data_canc_exame_w = 'S') then

    select	coalesce(max('S'),'N')
	into STRICT	ie_retorno_w
	from	tipo_baixa_prescricao where		coalesce(cd_tipo_baixa,0) <> 0
	and		ie_prescricao_devolucao	= 'P'
	and		ie_conta_paciente		= 'N'
	and		cd_tipo_baixa		= cd_motivo_baixa_p LIMIT 1;

    if (ie_retorno_w = 'S') then

        select ie_retirar_lote_cancelar
        into STRICT ie_retirar_lote_cancelar_w
        from lab_parametro
        where cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

		if (ie_retirar_lote_cancelar_w = 'S') then

            select max(dt_envio)
            into STRICT dt_envio_w
			from prescr_procedimento a,
            	 lab_lote_externo b
			where a.nr_seq_lote_externo = b.nr_sequencia
            and a.nr_prescricao = nr_prescricao_p
			and a.nr_sequencia = nr_seq_prescr_p;


			if (coalesce(dt_envio_w::text, '') = '') then
				ie_lote_externo_w := 'S';
			end if;

        end if;

	end if;

    update 	prescr_procedimento
	set 	dt_cancelamento = clock_timestamp(),
	        NR_SEQ_LOTE_EXTERNO = CASE WHEN ie_lote_externo_w='S' THEN  null  ELSE NR_SEQ_LOTE_EXTERNO END
    where 	nr_prescricao = nr_prescricao_p
	and 	nr_sequencia = nr_seq_prescr_p;


end if;

select	coalesce(max(a.cd_procedencia), 0)
into STRICT	cd_procedencia_w
from	atendimento_paciente a,
	prescr_medica b
where	a.nr_atendimento = b.nr_atendimento
and	b.nr_prescricao = nr_prescricao_p;

select	count(*)
into STRICT	qt_evento_w
from	regra_envio_sms
where	ie_evento_disp = 'APRTEA'
and	coalesce(ie_situacao,'A') = 'A'
and	((cd_procedencia = cd_procedencia_w) or (coalesce(cd_procedencia::text, '') = ''));

if (ie_cancelar_autor_prescr_w <> 'N') and (ie_suspender_p = 'S') then
	CALL suspender_autor_convenio(nr_prescricao_p,nr_seq_prescr_p,null,nm_usuario_p);
end if;

if qt_evento_w > 0 then
	select	max(a.nr_seq_interno),
		max(b.nr_atendimento)
	into STRICT	nr_seq_interno_w,
		nr_atendimento_w
	from	prescr_procedimento a,
		prescr_medica b
	where	b.nr_prescricao = a.nr_prescricao
	and	a.nr_sequencia = nr_seq_prescr_p
	and	a.nr_prescricao = nr_prescricao_p;

	if (nr_seq_interno_w IS NOT NULL AND nr_seq_interno_w::text <> '') then
		select	count(*)
		into STRICT	qt_exame_pendente_w
		from	prescr_procedimento a,
			prescr_medica b
		where	a.ie_status_atend < 35
		and	a.nr_prescricao = b.nr_prescricao
		and	b.nr_atendimento = nr_atendimento_w
		and	a.nr_prescricao = nr_prescricao_p
		and	a.nr_seq_interno <> nr_seq_interno_w
		and	a.ie_suspenso <> 'S'
		and	coalesce(a.dt_cancelamento::text, '') = '';

		select	count(*)
		into STRICT	qt_exame_aprovado_w
		from	prescr_procedimento a,
			prescr_medica b
		where	a.ie_status_atend >= 35
		and	a.nr_prescricao = b.nr_prescricao
		and	b.nr_atendimento = nr_atendimento_w
		and	a.nr_prescricao = nr_prescricao_p
		and	a.nr_seq_interno <> nr_seq_interno_w
		and	a.ie_suspenso <> 'S'
		and	coalesce(a.dt_cancelamento::text, '') = '';

		if (qt_exame_pendente_w = 0) and (qt_exame_aprovado_w > 0) then

			select	coalesce(max(nr_seq_interno), 0)
			into STRICT	nr_seq_interno_aprovado_w
			from	prescr_medica a,
				prescr_procedimento b,
				exame_lab_resultado c,
				exame_lab_result_item d
			where	a.nr_prescricao = b.nr_prescricao
			  and 	a.nr_prescricao = c.nr_prescricao
			  and	c.nr_seq_resultado = d.nr_seq_resultado
			  and	b.nr_sequencia = d.nr_seq_prescr
			  and	a.nr_atendimento = nr_atendimento_w
			  and 	a.nr_prescricao = nr_prescricao_p
			  and   b.nr_seq_interno <> nr_seq_interno_w
			  and	(d.dt_aprovacao IS NOT NULL AND d.dt_aprovacao::text <> '');

			if (nr_seq_interno_aprovado_w <> 0) then

				select	coalesce(a.nr_prescricao, 0),
					coalesce(b.nr_sequencia, 0),
					coalesce(d.nr_seq_exame, 0),
					coalesce(d.dt_aprovacao, clock_timestamp()),
					coalesce(d.cd_medico_resp, 0)
				into STRICT	nr_prescricao_w,
					nr_seq_prescr_w,
					nr_seq_exame_w,
					dt_aprovacao_w,
					cd_medico_resp_w
				from	prescr_medica a,
					prescr_procedimento b,
					exame_lab_resultado c,
					exame_lab_result_item d
				where 	a.nr_prescricao = b.nr_prescricao
				  and	a.nr_prescricao = c.nr_prescricao
				  and	c.nr_seq_resultado = d.nr_seq_resultado
				  and	d.nr_seq_prescr = b.nr_sequencia
				  and   a.nr_atendimento = nr_atendimento_w
				  and 	a.nr_prescricao = nr_prescricao_p
				  and	(d.dt_aprovacao IS NOT NULL AND d.dt_aprovacao::text <> '')
				  and 	b.nr_seq_interno = nr_seq_interno_aprovado_w
				  order by d.dt_aprovacao desc;

				open c01;
				loop
				fetch c01 into
					nr_seq_evento_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */
					begin
					CALL gerar_evento_aprov_res_atend(nr_seq_evento_w,nm_usuario_p, nr_prescricao_w, nr_seq_prescr_w, nr_seq_exame_w, 'S', dt_aprovacao_w, cd_medico_resp_w);
					end;
				end loop;
				close c01;

			end if;
		end if;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE suspender_exame_ao_cancelar_js (nr_prescricao_p bigint, nr_seq_prescr_p bigint, cd_motivo_baixa_p bigint, ds_observacao_p text, ie_suspender_p text, nm_usuario_p text) FROM PUBLIC;

