-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_gerar_reg_m220_efd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE

 
cd_tributo_pis_w		smallint;
cd_tributo_cofins_w		smallint;					
cd_cgc_w			varchar(14);
nr_linha_w			bigint 	:= qt_linha_p;
nr_seq_registro_w		bigint 	:= nr_sequencia_p;
ds_arquivo_w			varchar(4000);
ds_arquivo_compl_w		varchar(4000);
ds_linha_w			varchar(8000);
sep_w				varchar(1)	:= ds_separador_p;
ie_local_gerar_sped_w		varchar(1);
nr_seq_regra_efd_w		bigint;
aliquota_pis_w			double precision;
aliquota_cofins_w		double precision;

c02 CURSOR FOR 
	SELECT	r.nr_nota_fiscal, 
		to_char(l.dt_recebimento,'ddmmyyyy') dt_recebimento, 
		sum(vl_glosa) * (aliquota_pis_w/100) vl_glosa 
	from	titulo_receber r, 
		titulo_receber_liq l 
	where	r.nr_titulo = l.nr_titulo 
	and	dt_recebimento between dt_inicio_p and dt_fim_p 
	having sum(vl_glosa) > 0 
	group by r.nr_nota_fiscal, l.dt_recebimento;
	
vet02	C02%RowType;


BEGIN 
 
select	a.cd_cgc 
into STRICT	cd_cgc_w 
from	estabelecimento a 
where	a.cd_estabelecimento = cd_estabelecimento_p;
 
select	nr_seq_regra_efd 
into STRICT	nr_seq_regra_efd_w 
from	fis_efd_controle 
where	nr_sequencia = nr_seq_controle_p;
 
select 	cd_tributo_pis, 
	cd_tributo_cofins 
into STRICT	cd_tributo_pis_w, 
	cd_tributo_cofins_w 
from	fis_regra_efd 
where	nr_sequencia = nr_seq_regra_efd_w;
 
aliquota_pis_w := obter_pr_imposto(cd_tributo_pis_w);
aliquota_cofins_w := obter_pr_imposto(cd_tributo_cofins_w);
 
ie_local_gerar_sped_w := obter_param_usuario(5500, 25, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_local_gerar_sped_w);
 
open C02;
loop 
fetch C02 into	 
	vet02;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
 
	ds_linha_w	:= substr(	sep_w || 'M220'							|| 	--texto fixo 
					sep_w || 0							|| 	-- indicador de deduções diversas 
					sep_w || replace(campo_mascara(vet02.vl_glosa,2),'.',',')	|| 	-- indicador dedução 
					sep_w || '06'							|| 
					sep_w || vet02.nr_nota_fiscal					|| 
					sep_w || 'Glosa relativa ao documento ' || vet02.nr_nota_fiscal || ' recebido em ' || vet02.dt_recebimento || '.'	|| 
					sep_w || vet02.dt_recebimento					|| sep_w,1,8000); 	
	 
	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w	:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;
 
	insert into fis_efd_arquivo( 
		nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		nr_seq_controle_efd, 
		nr_linha, 
		cd_registro, 
		ds_arquivo, 
		ds_arquivo_compl) 
	values (	nr_seq_registro_w, 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nr_seq_controle_p, 
		nr_linha_w, 
		'M220', 
		ds_arquivo_w, 
		ds_arquivo_compl_w);
	end;
end loop;
close C02;
	 
commit;
 
qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;	
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_gerar_reg_m220_efd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

