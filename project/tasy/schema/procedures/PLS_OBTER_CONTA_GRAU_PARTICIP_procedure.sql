-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_conta_grau_particip ( nr_seq_conta_p bigint, nr_seq_item_p bigint, nr_seq_grau_partic_p bigint, ie_retorno_p INOUT text, nr_seq_partic_p INOUT bigint, ds_observacao_p INOUT text) AS $body$
DECLARE

 
ie_existe_w			varchar(2);
nr_seq_partic_w			bigint:= null;
nr_Seq_conta_w			bigint;
cd_medico_conta_w		numeric(20);
cd_medico_partic_w		numeric(20);
nr_Seq_prestador_partic_w	bigint;
nm_particpante_w		varchar(255);
ie_tipo_w			varchar(1);
ds_observacao_w			varchar(4000);

C01 CURSOR FOR /*ESTE CURSOR VERIFICA A PARTICIPACAO DO MEDICO PELO ITEM*/
 
	SELECT	'1', --conta 
		null, 
		b.cd_medico_executor, 
		null nr_Seq_prestador 
	from	pls_conta_proc 	a, 
		pls_conta 	b 
	where	a.nr_seq_conta 		= b.nr_sequencia 
	and	b.nr_seq_grau_partic	= nr_seq_grau_partic_p 
	and	a.nr_sequencia		= nr_seq_item_p 
	
union
  --participante 
	SELECT	'2', 
		c.nr_sequencia, 
		c.cd_medico, 
		c.nr_Seq_prestador 
	from	pls_conta_proc a, 
		pls_conta b, 
		pls_proc_participante c 
	where	a.nr_seq_conta 		= b.nr_sequencia 
	and	a.nr_sequencia		= c.nr_seq_conta_proc 
	and	c.nr_seq_grau_partic	= nr_seq_grau_partic_p 
	and	a.nr_sequencia		= nr_seq_item_p;

C02 CURSOR FOR /*ESTE CURSOR VERIFICA A PARTICIPACAO DO MEDICO PELA CONTA*/
 
	SELECT '1', --conta 
		null, 
		b.cd_medico_executor, 
		null nr_Seq_prestador 
	from	pls_conta_proc 	a, 
		pls_conta 	b 
	where	a.nr_seq_conta 		= b.nr_sequencia 
	and	b.nr_seq_grau_partic	= nr_seq_grau_partic_p 
	and	a.nr_seq_conta		= nr_seq_conta_p 
	
union
 
	SELECT '2', --participante 
		c.nr_sequencia, 
		c.cd_medico, 
		c.nr_Seq_prestador 
	from	pls_conta_proc a, 
		pls_conta b, 
		pls_proc_participante c 
	where	a.nr_seq_conta 		= b.nr_sequencia 
	and	a.nr_sequencia		= c.nr_seq_conta_proc 
	and	c.nr_seq_grau_partic	= nr_seq_grau_partic_p 
	and	a.nr_seq_conta		= nr_seq_conta_p;


BEGIN 
 
ie_retorno_p 	:= 'N';
nr_seq_partic_p	:= null;
ds_observacao_w	:= ' Participantes identificados na Ocorrência: '||chr(13)||chr(10);
 
/* -- COMENTADO PARA NOVO AJUSTE IDENTIFICANDO TODOS OS PARTICIPANTES IDENTIFICADOS 
if	(nvl( nr_seq_item_p,0) > 0) then --proc 
 
	select	max(c.nr_sequencia) --sequencia participante 
	into	nr_seq_partic_w 
	from	pls_conta_proc a, 
		pls_conta b, 
		pls_proc_participante c 
	where	a.nr_seq_conta 		= b.nr_sequencia 
	and	a.nr_sequencia		= c.nr_seq_conta_proc(+) 
	and	((c.nr_seq_grau_partic	= nr_seq_grau_partic_p) or (b.nr_seq_grau_partic	= nr_seq_grau_partic_p )) 
	and	a.nr_sequencia		= nr_seq_item_p; 
 
else --conta	 	 
	select  max(c.nr_Sequencia) --sequencia participante 
	into	nr_seq_partic_w 
	from	pls_conta_proc a, 
		pls_conta b, 
		pls_proc_participante c 
	where	a.nr_seq_conta 		= b.nr_sequencia 
	and	a.nr_sequencia		= c.nr_seq_conta_proc(+) 
	and	((c.nr_seq_grau_partic	= nr_seq_grau_partic_p) or (b.nr_seq_grau_partic	= nr_seq_grau_partic_p )) 
	and	a.nr_seq_conta		= nr_seq_conta_p; 
	 
	if	( nvl(nr_seq_partic_w,0) = 0) then		 
		 
		select	decode(count(a.nr_sequencia),0,'N','S') 
		into	ie_existe_w 
		from	pls_conta_proc a, 
			pls_conta b, 
			pls_proc_participante c 
		where	a.nr_seq_conta 		= b.nr_sequencia 
		and	a.nr_sequencia		= c.nr_seq_conta_proc(+) 
		and	((c.nr_seq_grau_partic	= nr_seq_grau_partic_p) or (b.nr_seq_grau_partic	= nr_seq_grau_partic_p )) 
		and	a.nr_seq_conta		= nr_seq_conta_p ; 
	end if; 
end if; 
*/
 
 
 
if (coalesce( nr_seq_item_p,0) > 0) then -- VERIFICA PARTIR DO ITEM 
	open C01;
	loop 
	fetch C01 into 
		ie_tipo_w, 
		nr_seq_partic_w, 
		cd_medico_partic_w, 
		nr_Seq_prestador_partic_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		ie_existe_w	:= 'S';
		if ( ie_tipo_w = '1') then --conta 
			if (cd_medico_partic_w IS NOT NULL AND cd_medico_partic_w::text <> '')then 
				nm_particpante_w	:= substr(obter_nome_pf(cd_medico_partic_w),1,255);
				ds_observacao_w		:= substr(ds_observacao_w||' Médico da conta: '|| nm_particpante_w||chr(13)||chr(10) ,1,255);
			end if;
		elsif ( ie_tipo_w = '2') then --participantes 
			if (coalesce(nr_seq_partic_w,0) >0) then 
				nr_seq_partic_p		:= nr_seq_partic_w;
				 
				if (cd_medico_partic_w IS NOT NULL AND cd_medico_partic_w::text <> '')then 
					nm_particpante_w	:= substr(obter_nome_pf(cd_medico_partic_w),1,255);
					ds_observacao_w		:= substr( ds_observacao_w||' Participante do procedimento: '||nm_particpante_w||chr(13)||chr(10) ,1,255);
					 
				elsif (coalesce( nr_Seq_prestador_partic_w,0) > 0) then 
					nm_particpante_w 	:= substr(pls_obter_dados_prestador(nr_Seq_prestador_partic_w, 'N'),1,255);
					ds_observacao_w		:= substr( ds_observacao_w||' Participante PJ do procedimento: '||nm_particpante_w||chr(13)||chr(10) ,1,255);
				end if;
			end if;
		end if;
		 
		end;
	end loop;
	close C01;
	 
else -- VERIFICA A PARTIR DA CONTA 
	open C02;
	loop 
	fetch C02 into 
		ie_tipo_w, 
		nr_seq_partic_w, 
		cd_medico_partic_w, 
		nr_Seq_prestador_partic_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		ie_existe_w	:= 'S';
		if ( ie_tipo_w = '1') then --conta 
			if (cd_medico_partic_w IS NOT NULL AND cd_medico_partic_w::text <> '')then 
				nm_particpante_w	:= substr(obter_nome_pf(cd_medico_partic_w),1,255);
				ds_observacao_w		:= substr(ds_observacao_w||' Médico da conta: '|| nm_particpante_w||chr(13)||chr(10) ,1,255);
			end if;
		elsif ( ie_tipo_w = '2') then --participantes 
			if (coalesce(nr_seq_partic_w,0) >0) then 
				nr_seq_partic_p		:= nr_seq_partic_w;
				 
				if (cd_medico_partic_w IS NOT NULL AND cd_medico_partic_w::text <> '')then 
					nm_particpante_w	:= substr(obter_nome_pf(cd_medico_partic_w),1,255);
					ds_observacao_w		:= substr(ds_observacao_w||' Participante do procedimento: '||nm_particpante_w||chr(13)||chr(10) ,1,255);
				elsif (coalesce( nr_Seq_prestador_partic_w,0) > 0) then 
					nm_particpante_w 	:= substr(pls_obter_dados_prestador(nr_Seq_prestador_partic_w, 'N'),1,255);
					ds_observacao_w		:= substr( ds_observacao_w||' Participante PJ do procedimento: '||nm_particpante_w||chr(13)||chr(10) ,1,255);
				end if;
			end if;
		end if;
		end;
	end loop;
	close C02;
end if;
 
ie_retorno_p	:= ie_existe_w;
nr_seq_partic_p	:= nr_seq_partic_w;
ds_observacao_p	:= ds_observacao_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_conta_grau_particip ( nr_seq_conta_p bigint, nr_seq_item_p bigint, nr_seq_grau_partic_p bigint, ie_retorno_p INOUT text, nr_seq_partic_p INOUT bigint, ds_observacao_p INOUT text) FROM PUBLIC;

