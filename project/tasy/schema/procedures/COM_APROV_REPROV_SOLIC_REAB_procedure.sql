-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE com_aprov_reprov_solic_reab ( nr_sequencia_p bigint, ie_opcao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
/*ie_opcao_p 
1 - Aprovar 
2 - Reprovar 
*/
 
 
ie_status_solic_w	varchar(03);
nr_seq_canal_w		bigint;
nr_seq_cliente_w	bigint;
nm_cliente_w		varchar(255);
ds_assunto_w		varchar(100);
ds_email_w		varchar(255);
ds_motivo_reprov_w	varchar(2000);
ds_motivo_cadastro_w	varchar(2000);
ds_mensagem_w		varchar(2000);
qt_canal_w		bigint;
nr_seq_novo_canal_w	bigint;
dt_revisao_prevista_w	timestamp;
ds_email_contato_w	varchar(255);
ds_produto_w		varchar(255);
ds_email_gestor_w	varchar(255);
cd_pessoa_fisica_w	varchar(255);


BEGIN 
select	ie_status_solic, 
	nr_seq_cliente, 
	nr_seq_canal, 
	substr(obter_desc_cliente(nr_seq_cliente,'N'),1,255), 
	ds_motivo_reprov, 
	ds_motivo_cadastro, 
	dt_revisao_prevista, 
	obter_mail_pf_concat(cd_pessoa_fisica), 
	cd_pessoa_fisica 
into STRICT	ie_status_solic_w, 
	nr_seq_cliente_w, 
	nr_seq_canal_w, 
	nm_cliente_w, 
	ds_motivo_reprov_w, 
	ds_motivo_cadastro_w, 
	dt_revisao_prevista_w, 
	ds_email_gestor_w, 
	cd_pessoa_fisica_w 
from	com_solic_reabertura 
where	nr_sequencia = nr_sequencia_p;
 
if (coalesce(ds_email_gestor_w,'X') = 'X') then 
	ds_email_gestor_w := '';
elsif (coalesce(ds_email_gestor_w,'X') <> 'X') then 
	ds_email_gestor_w := ';' || ds_email_gestor_w;
end if;
 
if (coalesce(nr_seq_canal_w,0) <> 0) then 
	select	ds_email_contato, 
		substr(obter_dados_pf_pj_estab(cd_estabelecimento_p, null, cd_cnpj,'M'),1,255) 
	into STRICT	ds_email_contato_w, 
		ds_email_w 
	from	com_canal 
	where	nr_sequencia = nr_seq_canal_w;
 
	if (ds_email_contato_w IS NOT NULL AND ds_email_contato_w::text <> '') then 
		ds_email_w := ds_email_contato_w;
	end if;
end if;
 
if (ie_status_solic_w = 'P') then 
	begin 
	if (ie_opcao_p = 1) then 
		begin 
		select	count(*) 
		into STRICT	qt_canal_w 
		from	com_canal_cliente 
		where	nr_seq_cliente	= nr_seq_cliente_w 
		and	ie_tipo_atuacao	= 'V' 
		and	coalesce(dt_fim_atuacao::text, '') = '';
			 
		if (qt_canal_w > 0) then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185374);
		end if;
 
		insert into com_cliente_gestor(nr_sequencia, 
						cd_pessoa_fisica, 
						dt_atualizacao, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						nr_seq_cliente, 
						dt_inicial, 
						dt_final) 
					values (nextval('com_cliente_gestor_seq'), 
						cd_pessoa_fisica_w, 
						clock_timestamp(), 
						nm_usuario_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						nr_seq_cliente_w, 
						clock_timestamp(), 
						null);
 
		ds_assunto_w	:= substr('Solicitação de reabertura de conta',1,70);
		ds_mensagem_w	:= substr('A solicitação de reabertura da conta ' || nm_cliente_w || ' foi aprovada.' || chr(13) || chr(10) || 
					'Motivo do cadastro: ' || ds_motivo_cadastro_w,1,2000);
 
		 
					 
		CALL enviar_email(ds_assunto_w, ds_mensagem_w, 'comercial@wheb.com.br', 'comercial@wheb.com.br;' || (ds_email_w || ds_email_gestor_w), 'Tasy', 'M');
 
		insert into com_cliente_hist( 
				nr_sequencia, 
				nr_seq_cliente, 
				dt_atualizacao, 
				nm_usuario, 
				nr_seq_canal, 
				nr_seq_tipo, 
				dt_historico, 
				ds_titulo, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				nr_seq_ativ, 
				dt_liberacao, 
				nr_seq_classif, 
				ds_historico) 
			values (	nextval('com_cliente_hist_seq'), 
				nr_seq_cliente_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_canal_w, 
				2, 
				clock_timestamp(), 
				'Solicitação de reabertura de conta', 
				clock_timestamp(), 
				nm_usuario_p, 
				null, 
				clock_timestamp(), 
				null, 
				ds_mensagem_w);
 
		update	com_cliente 
		set	dt_atualizacao 		= clock_timestamp(), 
			nm_usuario 		= nm_usuario_p, 
			ie_classificacao		= 'L', 
			ie_status_neg		= 'F', 
			ie_fase_venda		= 'Q', 
			nr_seq_ativ		= 48, 
			dt_revisao_prevista	 	= dt_revisao_prevista_w 
		where	nr_sequencia		= nr_seq_cliente_w;
 
		select 	nextval('com_canal_cliente_seq') 
		into STRICT	nr_seq_novo_canal_w 
		;
 
		insert into com_canal_cliente( 
			nr_sequencia, 
			nr_seq_canal, 
			dt_atualizacao, 
			nm_usuario, 
			nr_seq_cliente, 
			ie_tipo_atuacao, 
			dt_inicio_atuacao, 
			dt_fim_atuacao, 
			ie_situacao, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			pr_esforco, 
			cd_vendedor) 
		values (	nr_seq_novo_canal_w, 
			nr_seq_canal_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_cliente_w, 
			'V', 
			clock_timestamp(), 
			null, 
			'A', 
			clock_timestamp(), 
			nm_usuario_p, 
			null, 
			null);
 
		end;
	elsif (ie_opcao_p = 2) then 
		begin 
		select	max(obter_valor_dominio(2668,a.ie_produto)) 
		into STRICT	ds_produto_w 
		from	com_cliente a 
		where	a.nr_sequencia = nr_seq_cliente_w;
 
		ds_assunto_w	:= substr('Solicitação de reabertura de conta',1,70);
		ds_mensagem_w	:= substr('A solicitação de reabertura da conta ' || nm_cliente_w || ' do produto ' || ds_produto_w || ' foi reprovada.' || chr(13) || chr(10) || 
					'Motivo: ' || ds_motivo_reprov_w,1,2000);
 
		CALL enviar_email(ds_assunto_w, ds_mensagem_w, 'comercial@wheb.com.br', (ds_email_w || ds_email_gestor_w), 'Tasy', 'M');
		end;
	end if;
	end;
 
update	com_solic_reabertura 
set	dt_aprov_reprov	= clock_timestamp(), 
	nm_usuario	= nm_usuario_p, 
	ie_status_solic	= CASE WHEN ie_opcao_p='1' THEN 'A'  ELSE 'R' END , 
	dt_atualizacao	= clock_timestamp() 
where	nr_sequencia	= nr_sequencia_p;
 
commit;
 
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE com_aprov_reprov_solic_reab ( nr_sequencia_p bigint, ie_opcao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

