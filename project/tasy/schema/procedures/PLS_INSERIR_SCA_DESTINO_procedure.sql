-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_inserir_sca_destino ( nr_seq_vinculo_p bigint, ie_opcao_p text, nm_usuario_p text) AS $body$
DECLARE


/*
ie_opcao_p
PL - Plano
BP - Beneficiário de plano de saúde
BE - Beneficiários de plano de saúde(contatos)
CO- Contratos de plano de saúde
PC - Pagador de plano de saúde(contatos)
SP - Simulação Preço
*/
nr_seq_sca_w	bigint;
qt_registros_w		bigint;
qt_alteracao_sca_w	bigint;
nr_seq_tabela_w		bigint;
nr_seq_vendedor_canal_w	bigint;
nr_seq_vendedor_pf_w	bigint;
dt_inicio_vigencia_w	timestamp;
dt_fim_vigencia_w	timestamp;
ds_erro_w		varchar(255);
dt_inicio_proposta_w	pls_proposta_adesao.dt_inicio_proposta%type;

C01 CURSOR FOR
	SELECT	nr_seq_sca,
		nr_seq_tabela
	from	w_pls_localizar_sca
	where	nr_seq_segurado_prop	= nr_seq_vinculo_p
	and	ie_opcao_p		= 'BP'
	
union

	SELECT	nr_seq_sca,
		nr_seq_tabela
	from	w_pls_localizar_sca
	where	nr_seq_segurado		= nr_seq_vinculo_p
	and	ie_opcao_p		= 'BE'
	
union

	select	nr_seq_sca,
		nr_seq_tabela
	from	w_pls_localizar_sca
	where	nr_seq_contrato		= nr_seq_vinculo_p
	and	ie_opcao_p		= 'CO'
	
union

	select	nr_seq_sca,
		nr_seq_tabela
	from	w_pls_localizar_sca
	where	nr_seq_simulacao	= nr_seq_vinculo_p
	and	ie_opcao_p		= 'SP'
	
union

	select	nr_seq_sca,
		nr_seq_tabela
	from	w_pls_localizar_sca
	where	nr_seq_plano	= nr_seq_vinculo_p
	and	ie_opcao_p		= 'PL';


BEGIN
delete
from 	w_erros_sca_proposta
where 	cd_estabelecimento 	= wheb_usuario_pck.get_cd_estabelecimento
and	nm_usuario		= nm_usuario_p;

open C01;
loop
fetch C01 into
	nr_seq_sca_w,
	nr_seq_tabela_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (ie_opcao_p = 'BP') then
		select	count(*)
		into STRICT	qt_registros_w
		from	pls_sca_vinculo
		where	nr_seq_benef_proposta	= nr_seq_vinculo_p
		and	nr_seq_plano	= nr_seq_sca_w;

		if (qt_registros_w	= 0) then
			select	max(nr_seq_vendedor_canal),
				max(nr_seq_vendedor_pf),
				max(a.dt_inicio_proposta)
			into STRICT	nr_seq_vendedor_canal_w,
				nr_seq_vendedor_pf_w,
				dt_inicio_proposta_w
			from	pls_proposta_adesao	a,
				pls_proposta_beneficiario	b
			where	b.nr_seq_proposta	= a.nr_sequencia
			and	b.nr_sequencia	= nr_seq_vinculo_p;

			ds_erro_w	:= '';

			ds_erro_w := pls_consistir_sca_proposta(nr_seq_vinculo_p, nr_seq_sca_w, nr_seq_tabela_w, wheb_usuario_pck.get_cd_estabelecimento, ds_erro_w, nm_usuario_p);

			if (coalesce(ds_erro_w::text, '') = '') then
				insert into pls_sca_vinculo(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
						nr_seq_benef_proposta,nr_seq_plano,nr_seq_tabela,nr_seq_vendedor_canal,
						nr_seq_vendedor_pf,dt_inicio_vigencia)
				values (	nextval('pls_sca_vinculo_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
						nr_seq_vinculo_p,nr_seq_sca_w,nr_seq_tabela_w,nr_seq_vendedor_canal_w,
						nr_seq_vendedor_pf_w,dt_inicio_proposta_w);
			else
				insert into w_erros_sca_proposta(	ds_erro,
						cd_estabelecimento,
						nm_usuario,
						dt_atualizacao)
				values (	ds_erro_w,
						wheb_usuario_pck.get_cd_estabelecimento,
						nm_usuario_p,
						clock_timestamp());
			end if;
		elsif (qt_registros_w	> 0) then
			update	pls_sca_vinculo
			set	dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p,
				nr_seq_tabela		= nr_seq_tabela_w
			where	nr_seq_benef_proposta	= nr_seq_vinculo_p
			and	nr_seq_plano		= nr_seq_sca_w;
		end if;
	elsif (ie_opcao_p = 'BE') then
		select	count(*)
		into STRICT	qt_registros_w
		from	pls_sca_vinculo
		where	nr_seq_segurado	= nr_seq_vinculo_p
		and	nr_seq_plano	= nr_seq_sca_w;

		if (qt_registros_w	= 0) then

			insert into pls_sca_vinculo(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					nr_seq_segurado,nr_seq_plano,nr_seq_tabela)
			values (	nextval('pls_sca_vinculo_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					nr_seq_vinculo_p,nr_seq_sca_w,nr_seq_tabela_w);
		elsif (qt_registros_w	> 0) then
			update	pls_sca_vinculo
			set	dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p,
				nr_seq_tabela		= nr_seq_tabela_w
			where	nr_seq_segurado		= nr_seq_vinculo_p
			and	nr_seq_plano		= nr_seq_sca_w;
		end if;
	elsif (ie_opcao_p = 'CO') then
		select	count(*)
		into STRICT	qt_registros_w
		from	pls_sca_regra_contrato
		where	nr_seq_contrato	= nr_seq_vinculo_p
		and	nr_seq_plano	= nr_seq_sca_w;

		if (qt_registros_w	= 0) then

			insert into pls_sca_regra_contrato(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					nr_seq_contrato,nr_seq_plano,nr_seq_tabela)
			values (	nextval('pls_sca_regra_contrato_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					nr_seq_vinculo_p,nr_seq_sca_w,nr_seq_tabela_w);
		elsif (qt_registros_w	> 0) then
			update	pls_sca_regra_contrato
			set	dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p,
				nr_seq_tabela		= nr_seq_tabela_w
			where	nr_seq_contrato		= nr_seq_vinculo_p
			and	nr_seq_plano		= nr_seq_sca_w;
		end if;
	elsif (ie_opcao_p = 'SP') then
		select	count(*)
		into STRICT	qt_registros_w
		from	pls_sca_vinculo
		where	nr_seq_simulacao	= nr_seq_vinculo_p
		and	nr_seq_plano	= nr_seq_sca_w;

		if (qt_registros_w	= 0) then

			insert into pls_sca_vinculo(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					nr_seq_simulacao,nr_seq_plano,nr_seq_tabela)
			values (	nextval('pls_sca_vinculo_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					nr_seq_vinculo_p,nr_seq_sca_w,nr_seq_tabela_w);
		elsif (qt_registros_w	> 0) then
			update	pls_sca_vinculo
			set	dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p,
				nr_seq_tabela		= nr_seq_tabela_w
			where	nr_seq_simulacao		= nr_seq_vinculo_p
			and	nr_seq_plano		= nr_seq_sca_w;
		end if;
	elsif (ie_opcao_p = 'PL') then
		select	count(*)
		into STRICT	qt_registros_w
		from	pls_plano_servico_adic
		where	nr_seq_plano_adic	= nr_seq_vinculo_p
		and	nr_seq_plano	= nr_seq_sca_w;

		if (qt_registros_w	= 0) then

			insert into pls_plano_servico_adic(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					nr_seq_plano_adic,nr_seq_plano,nr_seq_tabela)
			values (	nextval('pls_plano_servico_adic_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					nr_seq_vinculo_p,nr_seq_sca_w,nr_seq_tabela_w);
		elsif (qt_registros_w	> 0) then
			update	pls_plano_servico_adic
			set	dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p,
				nr_seq_tabela		= nr_seq_tabela_w
			where	nr_seq_plano_adic	= nr_seq_vinculo_p
			and	nr_seq_plano		= nr_seq_sca_w;
		end if;
	end if;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_inserir_sca_destino ( nr_seq_vinculo_p bigint, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

