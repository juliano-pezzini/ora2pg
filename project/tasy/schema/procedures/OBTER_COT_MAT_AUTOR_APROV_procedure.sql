-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_cot_mat_autor_aprov ( nr_seq_mat_autor_p bigint, ie_aprov_auto_p text, nm_usuario_p text) AS $body$
DECLARE


cd_cgc_w		varchar(14);
vl_unitario_cotado_w	double precision;
vl_cotado_w		double precision;
nr_seq_fabricante_w	bigint;
pr_adicional_w		double precision;
ie_reducao_acrescimo_w	varchar(1);
cd_estabelecimento_w	smallint;
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
nr_seq_agenda_w		autorizacao_cirurgia.nr_seq_agenda%type;
nr_atendimento_w	bigint;
nr_seq_marca_w		bigint;
tx_ajuste_w		double precision	:= NULL;
vl_negociado_w		double precision	:= NULL;
ie_preco_informado_w	varchar(255)	:= NULL;
ie_glosa_w		varchar(255)	:= NULL;
tx_simpro_pfb_w		double precision;
tx_simpro_pmc_w		double precision;
tx_brasindice_pfb_w	REGRA_AJUSTE_MATERIAL.TX_BRASINDICE_PFB%type := null;--number(15,4)	:= NULL;
tx_brasindice_pmc_w	CONVENIO_BRASINDICE.TX_BRASINDICE_PMC%type := null;--number(15,4)	:= NULL;
tx_pmc_neg_w		CONVENIO_BRASINDICE.TX_PMC_NEG%type := null;--number(15,4)	:= NULL;
tx_pmc_pos_w		CONVENIO_BRASINDICE.TX_PMC_POS%type := null;--number(15,4)	:= NULL;
tx_afaturar_w		double precision	:= NULL;
ie_origem_preco_w	varchar(255);
ie_precedencia_w	varchar(255);
pr_glosa_w		double precision	:= 0;
vl_glosa_w		double precision	:= 0;
cd_tabela_preco_w	bigint;
cd_motivo_exc_conta_w	bigint;
nr_seq_regra_w		bigint;
ie_autor_particular_w	varchar(1)	:= 'N';
cd_convenio_glosa_w	integer	:= 0;
cd_categoria_glosa_w	varchar(10)	:= ' ';
cd_material_w		bigint;
dt_pedido_w		timestamp;
ie_taxa_ajuste_w	varchar(255);
cd_conv_agenda_w	bigint;
nr_seq_ind_valor_w	bigint;
tx_pfb_neg_w		CONVENIO_BRASINDICE.TX_PFB_NEG%type := null;--number(15,4)	:= NULL;
tx_pfb_pos_w		CONVENIO_BRASINDICE.TX_PFB_POS%type := null;--number(15,4)	:= NULL;
vl_neutro_w			varchar(10);
cd_plano_w		varchar(15);
ie_atualizar_marca_w	varchar(15) := 'S';
tx_simpro_pos_pfb_w	double precision;
tx_simpro_neg_pfb_w	double precision;
tx_simpro_pos_pmc_w	double precision;
tx_simpro_neg_pmc_w	double precision;
nr_seq_lib_dieta_conv_w	bigint;
ie_aprov_auto_w		varchar(1);
nr_seq_classif_atend_w	atendimento_paciente.nr_seq_classificacao%type;


BEGIN	

select	coalesce(max(obter_valor_param_usuario(3006, 12, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento)), 'N'),
	coalesce(max(Obter_Valor_Param_Usuario(3006, 11, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento)), 'S')
into STRICT	ie_taxa_ajuste_w,
	ie_aprov_auto_w
;

select	max(cd_cgc)
into STRICT	cd_cgc_w
from	material_autor_cir_cot
where	nr_sequencia	= nr_seq_mat_autor_p
and	ie_aprovacao	= 'S';

if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
	select	vl_unitario_cotado,
		vl_cotado,
		nr_seq_marca
	into STRICT	vl_unitario_cotado_w,
		vl_cotado_w,
		nr_seq_marca_w
	from	material_autor_cir_cot
	where	nr_sequencia	= nr_seq_mat_autor_p
	and	cd_cgc		= cd_cgc_w;

	select	max(b.nr_seq_fabric)
	into STRICT	nr_seq_fabricante_w
	from	material b,
		material_autor_cirurgia a
	where	a.cd_material	= b.cd_material
	and	a.nr_sequencia	= nr_seq_mat_autor_p;

	select	max(b.nr_seq_agenda),
		max(b.nr_atendimento),
		max(a.cd_material),
		max(b.dt_pedido)
	into STRICT	nr_seq_agenda_w,
		nr_atendimento_w,
		cd_material_w,
		dt_pedido_w
	from	autorizacao_cirurgia b,
		material_autor_cirurgia a
	where	a.nr_seq_autorizacao	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_mat_autor_p;

	if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then

		select	max(b.cd_convenio),
			max(b.cd_categoria),
			max(a.cd_estabelecimento),
			max(b.cd_plano_convenio),
			max(b.nr_seq_lib_dieta_conv),
			max(a.nr_seq_classificacao)
		into STRICT	cd_convenio_w,
			cd_categoria_w,
			cd_estabelecimento_w,
			cd_plano_w,
			nr_seq_lib_dieta_conv_w,
			nr_seq_classif_atend_w
		from	atend_categoria_convenio b,
			atendimento_paciente a
		where	a.nr_atendimento	= b.nr_atendimento
		and	a.nr_atendimento	= nr_atendimento_w
		and	obter_atecaco_atendimento(a.nr_atendimento) = b.nr_seq_interno;

	elsif (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then

		select	max(a.cd_convenio),
			max(a.cd_categoria),
			max(b.cd_estabelecimento),
			max(a.cd_plano)
		into STRICT	cd_convenio_w,
			cd_categoria_w,
			cd_estabelecimento_w,
			cd_plano_w
		from	agenda b,
			agenda_paciente a
		where	a.cd_agenda	= b.cd_agenda
		and	a.nr_sequencia	= nr_seq_agenda_w;

	end if;


	if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') then

		if (ie_taxa_ajuste_w	= 'S') then

			if (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then
				select	max(cd_convenio)	
				into STRICT	cd_conv_agenda_w
				from	agenda_paciente
				where	nr_sequencia	= nr_seq_agenda_w;
			end if;

			if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
				SELECT * FROM obter_regra_ajuste_mat(	cd_estabelecimento_w, cd_convenio_w, coalesce(Obter_Conv_Cat_Atendimento(nr_atendimento_w), cd_conv_agenda_w), cd_material_w, dt_pedido_w, somente_numero(obter_tipo_acomod_atend(nr_atendimento_w, 'C')), somente_numero(obter_dados_atendimento(nr_atendimento_w, 'TA')), obter_setor_atendimento(nr_atendimento_w), 0, 0, null, null, null, null, null, tx_ajuste_w, vl_negociado_w, ie_preco_informado_w, ie_glosa_w, tx_brasindice_pfb_W, tx_brasindice_pmc_w, tx_pmc_neg_W, tx_pmc_pos_w, tx_afaturar_w, tx_simpro_pfb_w, tx_simpro_pmc_w, ie_origem_preco_w, ie_precedencia_w, pr_glosa_w, vl_glosa_w, cd_tabela_preco_w, cd_motivo_exc_conta_w, nr_seq_regra_w, ie_autor_particular_w, cd_convenio_glosa_w, cd_categoria_glosa_w, null, tx_pfb_neg_w, tx_pfb_pos_w, vl_neutro_w, tx_simpro_pos_pfb_w, tx_simpro_neg_pfb_w, tx_simpro_pos_pmc_w, tx_simpro_neg_pmc_w, null, null, 0, null, nr_seq_lib_dieta_conv_w, null, null, nr_seq_classif_atend_w) INTO STRICT tx_ajuste_w, vl_negociado_w, ie_preco_informado_w, ie_glosa_w, tx_brasindice_pfb_W, tx_brasindice_pmc_w, tx_pmc_neg_W, tx_pmc_pos_w, tx_afaturar_w, tx_simpro_pfb_w, tx_simpro_pmc_w, ie_origem_preco_w, ie_precedencia_w, pr_glosa_w, vl_glosa_w, cd_tabela_preco_w, cd_motivo_exc_conta_w, nr_seq_regra_w, ie_autor_particular_w, cd_convenio_glosa_w, cd_categoria_glosa_w, tx_pfb_neg_w, tx_pfb_pos_w, vl_neutro_w, tx_simpro_pos_pfb_w, tx_simpro_neg_pfb_w, tx_simpro_pos_pmc_w, tx_simpro_neg_pmc_w;
			else
				SELECT * FROM obter_regra_ajuste_mat(	cd_estabelecimento_w, cd_convenio_w, cd_conv_agenda_w, cd_material_w, dt_pedido_w, 0, 0, 0, 0, 0, null, null, null, null, null, tx_ajuste_w, vl_negociado_w, ie_preco_informado_w, ie_glosa_w, tx_brasindice_pfb_W, tx_brasindice_pmc_w, tx_pmc_neg_W, tx_pmc_pos_w, tx_afaturar_w, tx_simpro_pfb_w, tx_simpro_pmc_w, ie_origem_preco_w, ie_precedencia_w, pr_glosa_w, vl_glosa_w, cd_tabela_preco_w, cd_motivo_exc_conta_w, nr_seq_regra_w, ie_autor_particular_w, cd_convenio_glosa_w, cd_categoria_glosa_w, null, tx_pfb_neg_w, tx_pfb_pos_w, vl_neutro_w, tx_simpro_pos_pfb_w, tx_simpro_neg_pfb_w, tx_simpro_pos_pmc_w, tx_simpro_neg_pmc_w, null, null, 0, null, nr_seq_lib_dieta_conv_w, null, null, null) INTO STRICT tx_ajuste_w, vl_negociado_w, ie_preco_informado_w, ie_glosa_w, tx_brasindice_pfb_W, tx_brasindice_pmc_w, tx_pmc_neg_W, tx_pmc_pos_w, tx_afaturar_w, tx_simpro_pfb_w, tx_simpro_pmc_w, ie_origem_preco_w, ie_precedencia_w, pr_glosa_w, vl_glosa_w, cd_tabela_preco_w, cd_motivo_exc_conta_w, nr_seq_regra_w, ie_autor_particular_w, cd_convenio_glosa_w, cd_categoria_glosa_w, tx_pfb_neg_w, tx_pfb_pos_w, vl_neutro_w, tx_simpro_pos_pfb_w, tx_simpro_neg_pfb_w, tx_simpro_pos_pmc_w, tx_simpro_neg_pmc_w;

			end if;

			select	max(nr_sequencia)
			into STRICT	nr_seq_ind_valor_w
			from	regra_ajuste_indice_dif
			where	nr_seq_regra	= nr_seq_regra_w
			and	vl_cotado_w	between vl_inicial and vl_final;

			if (coalesce(nr_seq_ind_valor_w,0) > 0) then
				select	max(tx_ajuste)
				into STRICT	tx_afaturar_w
				from	regra_ajuste_indice_dif
				where	nr_sequencia	= nr_seq_ind_valor_w;
			end if;

			if (tx_afaturar_w <> 0) then
				pr_adicional_w	:= (100 * tx_afaturar_w) -100;
			end if;
		else
			/*pr_adicional_w	:= obter_tx_comercializacao_conv(	cd_convenio_w,
										cd_estabelecimento_w,
										sysdate,
										cd_material_w,
										cd_categoria_w,
										cd_plano_w,
										vl_unitario_cotado_w); */
			SELECT * FROM obter_tx_reducao_acresc_conv(	cd_convenio_w, cd_estabelecimento_w, clock_timestamp(), cd_material_w, cd_categoria_w, cd_plano_w, vl_unitario_cotado_w, pr_adicional_w, ie_reducao_acrescimo_w) INTO STRICT pr_adicional_w, ie_reducao_acrescimo_w;
		end if;

	end if;
	begin
	ie_atualizar_marca_w := obter_param_usuario(3006, 44, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualizar_marca_w);	
	exception
	when others then
		ie_atualizar_marca_w := 'S';
	end;
	if (coalesce(ie_aprov_auto_w,'S') = 'S') then

		update	material_autor_cirurgia
		set	cd_cgc_fornec		= cd_cgc_w,
			vl_unitario_material	= vl_unitario_cotado_w,
			vl_material		= vl_cotado_w,
			nr_seq_fabricante		= nr_seq_fabricante_w,
			pr_adicional		= coalesce(pr_adicional_w,pr_adicional),
			ie_reducao_acrescimo	= coalesce(ie_reducao_acrescimo_w,ie_reducao_acrescimo),
			ie_aprovacao		= 'S', -- afstringari 178285 12/11/2009
			qt_material		= coalesce(qt_solicitada,0), -- afstringari 178285 12/11/2009
			nr_seq_marca		= CASE WHEN ie_atualizar_marca_w='N' THEN nr_seq_marca  ELSE nr_seq_marca_w END ,
            nm_usuario = nm_usuario_p,
            dt_atualizacao = clock_timestamp()
		where	nr_sequencia		= nr_seq_mat_autor_p;	

	else
		update	material_autor_cirurgia
		set	cd_cgc_fornec		= cd_cgc_w,
			vl_unitario_material	= vl_unitario_cotado_w,
			vl_material		= vl_cotado_w,
			nr_seq_fabricante		= nr_seq_fabricante_w,
			pr_adicional		= coalesce(pr_adicional_w,pr_adicional),
			ie_reducao_acrescimo	= coalesce(ie_reducao_acrescimo_w,ie_reducao_acrescimo),
			nr_seq_marca		= CASE WHEN ie_atualizar_marca_w='N' THEN nr_seq_marca  ELSE nr_seq_marca_w END ,
            nm_usuario = nm_usuario_p,
            dt_atualizacao = clock_timestamp()
		where	nr_sequencia		= nr_seq_mat_autor_p;	
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_cot_mat_autor_aprov ( nr_seq_mat_autor_p bigint, ie_aprov_auto_p text, nm_usuario_p text) FROM PUBLIC;

