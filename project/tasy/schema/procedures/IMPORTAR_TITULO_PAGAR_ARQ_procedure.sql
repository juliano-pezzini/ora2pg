-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importar_titulo_pagar_arq (cd_estabelecimento_p bigint, dt_emissao_p timestamp, dt_vencimento_original_p timestamp, dt_vencimento_atual_p timestamp, vl_titulo_p bigint, vl_saldo_titulo_p bigint, cd_tipo_taxa_juro_p bigint, cd_tipo_taxa_multa_p bigint, tx_desc_antecipacao_p bigint, dt_limite_antecipacao_p timestamp, vl_dia_antecipacao_P bigint, cd_tipo_taxa_antecipacao_p bigint, ie_origem_titulo_p text, ie_tipo_titulo_p text, cd_pessoa_fisica_p text, cd_cgc_p text, nr_titulo_externo_p text, tx_juros_p bigint, tx_multa_p bigint, cd_moeda_p bigint, vl_saldo_juros_P bigint, vl_saldo_multa_p bigint, nm_usuario_p text, nr_seq_trans_fin_baixa_p bigint, nr_seq_trans_fin_contab_p bigint, nr_seq_conta_financ_p bigint, cd_centro_custo_p bigint, cd_conta_contabil_p text, nr_seq_trans_fin_p bigint, nr_seq_classe_p bigint, nr_documento_p bigint, cd_estab_financeiro_p bigint default null, cd_tributo_p bigint default null, nr_seq_proj_rec_p bigint default null, nr_titulo_externo_ext_p text default null, ds_observacao_p text DEFAULT NULL) AS $body$
DECLARE



nr_titulo_w	bigint;
sqlerrm_w	varchar(4000);
nr_seq_trans_fin_baixa_w		classe_titulo_pagar.nr_seq_trans_fin_baixa%type;
nr_seq_trans_fin_contab_w		classe_titulo_pagar.nr_seq_trans_fin_contab%type;

/*
Procedure utilizada para importacao padrao WHEB de titulos a pagar
Usar interface 1915 - Integracao WHEB - Importar Baixas titulos a pagar 1.0
*/
BEGIN

if (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') and (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
	--r.aise_application_error(-20011,'O titulo nao pode ser de uma pessoa fisica e juridica ao mesmo tempo');
	CALL wheb_mensagem_pck.exibir_mensagem_abort(267353);
end if;

if (nr_seq_classe_p IS NOT NULL AND nr_seq_classe_p::text <> '') then

  select  max(nr_seq_trans_fin_baixa), max(nr_seq_trans_fin_contab)
  into STRICT nr_seq_trans_fin_baixa_w, nr_seq_trans_fin_contab_w
  from classe_titulo_pagar
  where nr_sequencia = nr_seq_classe_p;

end if;

if (nr_seq_trans_fin_baixa_p IS NOT NULL AND nr_seq_trans_fin_baixa_p::text <> '') then

  nr_seq_trans_fin_baixa_w := nr_seq_trans_fin_baixa_p;

end if;

if (nr_seq_trans_fin_contab_p IS NOT NULL AND nr_seq_trans_fin_contab_p::text <> '') then

  nr_seq_trans_fin_contab_w := nr_seq_trans_fin_contab_p;

end if;

select	nextval('titulo_pagar_seq')
into STRICT 	nr_titulo_w
;

begin

insert	into titulo_pagar(nr_titulo,
	cd_estabelecimento,
  cd_estab_financeiro,
	dt_emissao,
	dt_vencimento_original,
	dt_vencimento_atual,
	vl_titulo,
	vl_saldo_titulo,
	cd_tipo_taxa_juro,
	cd_tipo_taxa_multa,
	tx_desc_antecipacao,
	dt_limite_antecipacao,
	vl_dia_antecipacao,
	cd_tipo_taxa_antecipacao,
	ie_origem_titulo,
	ie_tipo_titulo,
	cd_pessoa_fisica,
	cd_cgc,
	nr_titulo_externo,
  nr_seq_classe,
  nr_documento,
  cd_tributo,
  nr_seq_proj_rec,          
	tx_juros,
	tx_multa,
	cd_moeda,
	vl_saldo_juros,
	vl_saldo_multa,
	dt_atualizacao,
	nm_usuario,
	ie_situacao,
	dt_contabil,
	nr_seq_trans_fin_baixa,
	nr_seq_trans_fin_contab,
	ds_observacao_titulo)
values (nr_titulo_w,
	cd_estabelecimento_p,
  cd_estab_financeiro_p,
	dt_emissao_p,
	dt_vencimento_original_p,
	dt_vencimento_atual_p,
	vl_titulo_p,
	vl_saldo_titulo_p,
	cd_tipo_taxa_juro_p,
	cd_tipo_taxa_multa_p,
	tx_desc_antecipacao_p,
	dt_limite_antecipacao_p,
	vl_dia_antecipacao_P,
	CASE WHEN cd_tipo_taxa_antecipacao_p=0 THEN  null  ELSE cd_tipo_taxa_antecipacao_p END ,
	ie_origem_titulo_p,
	ie_tipo_titulo_p,
	cd_pessoa_fisica_p,
	cd_cgc_p,
	coalesce(nr_titulo_externo_ext_p, nr_titulo_externo_p),
  nr_seq_classe_p,
  nr_documento_p,
  cd_tributo_p,
  nr_seq_proj_rec_p,
	tx_juros_p,
	tx_multa_p,
	cd_moeda_p,
	vl_saldo_juros_P,
	vl_saldo_multa_p,
	clock_timestamp(),
	nm_usuario_p,
	'A',
	dt_emissao_p,
	nr_seq_trans_fin_baixa_w,
	nr_seq_trans_fin_contab_w,
	ds_observacao_p);

CALL ATUALIZAR_INCLUSAO_TIT_PAGAR(nr_titulo_w, nm_usuario_p);

insert	into titulo_pagar_classif(nr_titulo,
	nr_sequencia,
	nr_seq_conta_financ,
	cd_centro_custo,
	vl_titulo,
	dt_atualizacao,
	nm_usuario,
	cd_conta_contabil,
	nr_seq_trans_fin)
values (nr_titulo_w,
	1,
	nr_seq_conta_financ_p,
	cd_centro_custo_p,
	vl_titulo_p,
	clock_timestamp(),
	nm_usuario_p,
	cd_conta_contabil_p,
	nr_seq_trans_fin_p);

if coalesce(cd_tributo_p::text, '') = '' then
  CALL gerar_tributo_titulo(nr_titulo_w, nm_usuario_p, 'N', null, null, null, null, null, cd_estabelecimento_p, null);
end if;

exception
when others then
	sqlerrm_w	:= sqlerrm;
	CALL gravar_log_tasy(55888,	wheb_mensagem_pck.get_texto(302828) ||chr(13)||
				'cd_pessoa_fisica_p: '||cd_pessoa_fisica_p||chr(13)||
				'cd_cgc_p: '||cd_cgc_p||chr(13)||
				sqlerrm_w, nm_usuario_p);
end;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importar_titulo_pagar_arq (cd_estabelecimento_p bigint, dt_emissao_p timestamp, dt_vencimento_original_p timestamp, dt_vencimento_atual_p timestamp, vl_titulo_p bigint, vl_saldo_titulo_p bigint, cd_tipo_taxa_juro_p bigint, cd_tipo_taxa_multa_p bigint, tx_desc_antecipacao_p bigint, dt_limite_antecipacao_p timestamp, vl_dia_antecipacao_P bigint, cd_tipo_taxa_antecipacao_p bigint, ie_origem_titulo_p text, ie_tipo_titulo_p text, cd_pessoa_fisica_p text, cd_cgc_p text, nr_titulo_externo_p text, tx_juros_p bigint, tx_multa_p bigint, cd_moeda_p bigint, vl_saldo_juros_P bigint, vl_saldo_multa_p bigint, nm_usuario_p text, nr_seq_trans_fin_baixa_p bigint, nr_seq_trans_fin_contab_p bigint, nr_seq_conta_financ_p bigint, cd_centro_custo_p bigint, cd_conta_contabil_p text, nr_seq_trans_fin_p bigint, nr_seq_classe_p bigint, nr_documento_p bigint, cd_estab_financeiro_p bigint default null, cd_tributo_p bigint default null, nr_seq_proj_rec_p bigint default null, nr_titulo_externo_ext_p text default null, ds_observacao_p text DEFAULT NULL) FROM PUBLIC;

