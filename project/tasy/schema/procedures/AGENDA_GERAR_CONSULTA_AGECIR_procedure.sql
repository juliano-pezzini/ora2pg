-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE agenda_gerar_consulta_agecir ( cd_estabelecimento_p bigint, cd_agenda_p bigint, dt_agenda_p timestamp, nm_usuario_p text) AS $body$
DECLARE

 
ie_feriado_w			varchar(0001)	:= 'N';
ie_dia_semana_w			smallint;
hr_inicial_w			timestamp;
hr_final_w			timestamp;
hr_inicial_intervalo_w		timestamp;
hr_final_intervalo_w		timestamp;
hr_atual_w			timestamp;
nr_minuto_intervalo_w		smallint;
ie_existe_agenda_w		varchar(0001);
ie_bloqueio_w			varchar(0001);
ie_bloqueio_hora_w		varchar(0001);
ie_bloqueio_dia_w		varchar(0001);
qt_horario_w			smallint  := 0;
nr_sequencia_w			bigint  := 0;
dt_agenda_w			timestamp;
ds_horarios_w			varchar(0255)	:= '';
Virgula_w			varchar(1)		:= '';
qt_min_duracao_w		bigint	:= 0;
hr_inicio_w			timestamp;
hr_fim_w			timestamp;
hr_inicial_par_w		timestamp;
hr_final_par_w			timestamp;
cd_turno_w			smallint	:= 0;
nr_seq_esp_w			bigint	:= 0;
cd_medico_w			varchar(10);
nr_seq_agenda_medico_w		bigint;
cd_medico_exec_w		varchar(10);

qt_min_minimo_w			bigint;
qt_turno_w			bigint;
qt_intervalo_w			bigint;
HR_NADA_W			timestamp;
ie_sobra_horario_w		varchar(01);
ie_bloqueio_dia_hora_w		varchar(2);
ds_observacao_horario_w		varchar(255);
ie_gerar_obs_horario_w		varchar(01) := 'N';
ie_autorizacao_w		varchar(05);
ie_excluir_livres_w		varchar(01) 	:= 'N';
qt_agenda_w			bigint;
HR_QUEBRA_TURNO_W		varchar(05);
hr_quebra_turno_not_w		varchar(05);
qt_min_QUEBRA_TURNO_W		varchar(05);
nr_seq_sala_w			bigint;
ie_anestesista_w		varchar(01)	:= 'N';
ie_gerar_forcado_w		varchar(01)	:= 'N';
ie_gerar_autorizacao_livres_w	varchar(01)	:= 'N';
cd_anestesista_w		varchar(10);

dt_forcado_w			timestamp;
nr_min_forcado_w		bigint;
cd_agenda_forcado_w		bigint;

ie_tipo_atendimento_w		smallint;/* Rafael em 16/10/2006 OS 42479 */
ie_horario_adicional_w		varchar(1);/* Rafael em 09/11/2006 OS 43852 */
NR_SEQ_CLASSIF_AGENDA_w		bigint;
qt_horario_livre_gerado_w	bigint;
ie_carater_cirurgia_w		varchar(1);
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
nr_seq_agenda_w			bigint;

nm_paciente_w			varchar(60);
ie_status_agenda_w		varchar(3);
ie_gerar_bloqueados_w		varchar(1);
ie_deletar_bloqueados_w		varchar(1);
ie_gerar_dia_anterior_w		varchar(1);
cd_pessoa_fisica_w		varchar(10);
nr_minuto_duracao_w		bigint;
ie_encaixe_w			varchar(1);

C01 CURSOR FOR 
	SELECT 	to_date(to_char(dt_agenda_w,'dd/mm/yyyy') || ' ' || 
			to_char(hr_inicial,'hh24:mi'),'dd/mm/yyyy hh24:mi'), 
			to_date(to_char(dt_agenda_w,'dd/mm/yyyy') || ' ' || 
		 	to_char(hr_final,'hh24:mi'),'dd/mm/yyyy hh24:mi'), 
			to_date(to_char(dt_agenda_w,'dd/mm/yyyy') || ' ' || 
		 	to_char(coalesce(hr_Inicial_Intervalo,hr_final),'hh24:mi'),'dd/mm/yyyy hh24:mi'), 
			to_date(to_char(dt_agenda_w,'dd/mm/yyyy') || ' ' || 
		 	to_char(coalesce(hr_final_Intervalo,hr_final),'hh24:mi'),'dd/mm/yyyy hh24:mi'), 
			nr_minuto_intervalo, 
			a.cd_medico, 
			a.nr_seq_medico_exec, 
			a.ds_observacao, 
			a.nr_seq_sala, 
			a.nr_seq_classif_agenda, 
			cd_anestesista, 
			ie_carater_cirurgia, 
			cd_convenio, 
			cd_categoria 
	from 		agenda_Horario a 
	where 		cd_agenda   	= cd_agenda_p 
	and 		((dt_dia_semana	= ie_dia_Semana_w) or ((dt_dia_semana = 9) and (ie_dia_Semana_w not in (7,1)))) 
	and		((nr_seq_esp_w 	= 0) or (ie_horario_adicional_w = 'S')) 
	and		((coalesce(dt_final_vigencia::text, '') = '') or (dt_final_vigencia >= trunc(dt_agenda_p))) 
	and		((coalesce(dt_inicio_vigencia::text, '') = '') or (dt_inicio_vigencia <= trunc(dt_agenda_p))) 
	and 		hr_inicial < hr_final 
	and		coalesce(nr_minuto_intervalo,0) > 0 
	and (ie_feriado_w <> 'S') 
	
union
 
	SELECT 		to_date(to_char(dt_agenda_w,'dd/mm/yyyy') || ' ' || 
			to_char(hr_inicial,'hh24:mi'),'dd/mm/yyyy hh24:mi'), 
			to_date(to_char(dt_agenda_w,'dd/mm/yyyy') || ' ' || 
		 	to_char(hr_final,'hh24:mi'),'dd/mm/yyyy hh24:mi'), 
			to_date(to_char(dt_agenda_w,'dd/mm/yyyy') || ' ' || 
		 	to_char(coalesce(hr_Inicial_Intervalo,hr_final),'hh24:mi'),'dd/mm/yyyy hh24:mi'), 
			to_date(to_char(dt_agenda_w,'dd/mm/yyyy') || ' ' || 
		 	to_char(coalesce(hr_final_Intervalo,hr_final),'hh24:mi'),'dd/mm/yyyy hh24:mi'), 
			nr_minuto_intervalo, 
			a.cd_medico, a.nr_seq_medico_exec, 
			a.ds_observacao, 
			a.nr_seq_sala, 
			a.NR_SEQ_CLASSIF_AGENDA, 
			null, 
			null, 
			null, 
			null 
	from 		agenda_Horario_esp a 
	where 		dt_agenda	= trunc(dt_agenda_p,'dd') 
	and 		hr_inicial < hr_final 
	and		coalesce(nr_minuto_intervalo,0) > 0 
	and  		cd_agenda	= cd_agenda_p 
	order by 1,2,5;

C02 CURSOR FOR 
	SELECT	hr_inicio, 
		(hr_inicio + (CASE WHEN ie_status_agenda='C' THEN  0  ELSE nr_minuto_duracao / 1440 END )) dt_final 
	from 	agenda_paciente 
	where 	cd_agenda	= cd_agenda_p 
    and	hr_inicio between trunc(dt_agenda_p,'dd') and (trunc(dt_agenda_p,'dd') + (86399/86400)) 
	and	hr_inicio >= clock_timestamp() 
	and	ie_sobra_horario_w	= 'S' 
--	and	ie_status_agenda <> 'C' 
	order by 1;
	
C05 CURSOR FOR 
	SELECT	cd_pessoa_fisica, 
		substr(nm_paciente,1,60), 
		cd_medico_exec, 
		ie_status_agenda, 
		nr_minuto_duracao, 
		hr_inicio, 
		ie_encaixe 
	from	agenda_paciente 
	where	cd_agenda		= cd_agenda_p 
	and	ie_status_agenda	<> 'L' 
	and	dt_agenda		= trunc(dt_agenda_p) 
	order by hr_inicio;
	

BEGIN 
 
/* 
select	nvl(max(obter_valor_param_usuario(39, 60, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N') 
into	ie_excluir_livres_w 
from	dual; 
 
select	nvl(max(obter_valor_param_usuario(39, 79, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N') 
into	ie_gerar_forcado_w 
from	dual; 
*/
 
 
open C05;
loop 
fetch C05 into	 
	cd_pessoa_fisica_w, 
	nm_paciente_w, 
	cd_medico_exec_w, 
	ie_status_agenda_w, 
	nr_minuto_duracao_w, 
	hr_inicio_w, 
	ie_encaixe_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
	begin	 
	insert into w_agenda_exame_relat(dt_Atualizacao, 
		nm_usuario, 
		cd_agenda,		 
		ie_status_agenda,		 
		dt_agenda, 
		ie_encaixe) 
	values (clock_timestamp(), 
		nm_usuario_p, 
		cd_Agenda_p,		 
		ie_status_Agenda_w,		 
		hr_inicio_w, 
		ie_encaixe_w);
	 
	end;
end loop;
close C05;
 
 
select	coalesce(max(ie_gerar_sobra_horario), 'N'), 
	coalesce(max(HR_QUEBRA_TURNO), '12'), 
	coalesce(max(qt_min_quebra_turno), '00'), 
	max(ie_anestesista), 
	coalesce(max(ie_tipo_atendimento), 0), 
	max(hr_quebra_turno_not) 
into STRICT	ie_sobra_horario_w, 
	HR_QUEBRA_TURNO_W,	 
	qt_min_QUEBRA_TURNO_W, 
	ie_anestesista_w, 
	ie_tipo_atendimento_w, 
	hr_quebra_turno_not_w 
from	agenda 
where	cd_agenda	= cd_agenda_p;
 
 
select	coalesce(max(nr_sequencia),0), 
	coalesce(max(ie_horario_adicional),'N') 
into STRICT	nr_seq_esp_w, 
	ie_horario_adicional_w 
from	agenda_horario_esp 
where	cd_agenda	= cd_agenda_p 
and	dt_agenda	= trunc(dt_agenda_p,'dd');
 
hr_inicial_par_w		:= trunc(dt_agenda_p,'dd');
 
hr_final_par_w			:= trunc(dt_agenda_p,'dd') + 86399/86400;
 
dt_agenda_w				:= trunc(dt_agenda_p,'dd');
 
begin 
 
select 	'S' 
into STRICT	ie_feriado_w 
from 	feriado a, 
	agenda b 
where 	a.cd_estabelecimento 	= cd_estabelecimento_p 
and 	a.dt_feriado		= dt_agenda_w 
and 	b.cd_agenda		= cd_agenda_p 
and 	ie_feriado		= 'N';
exception 
	when others then 
		ie_feriado_w := 'N';
end;
 
ie_gerar_bloqueados_w := obter_param_usuario(871, 297, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_bloqueados_w);
ie_deletar_bloqueados_w := obter_param_usuario(871, 369, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_deletar_bloqueados_w);
ie_gerar_dia_anterior_w := obter_param_usuario(871, 423, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_dia_anterior_w);
 
select	pkg_date_utils.get_WeekDay(dt_agenda_w) 
into STRICT 	ie_dia_semana_w
;
 
OPEN C01;
LOOP 
FETCH C01 into 
	hr_inicial_w, 
	hr_final_w, 
	hr_inicial_Intervalo_w, 
	hr_final_Intervalo_w, 
	nr_minuto_Intervalo_w, 
	cd_medico_w, 
	nr_seq_agenda_medico_w, 
	ds_observacao_horario_w, 
	nr_seq_sala_w, 
	nr_seq_classif_agenda_w, 
	cd_anestesista_w, 
	ie_carater_cirurgia_w, 
	cd_convenio_w, 
	cd_categoria_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
   	begin 
	if (NR_SEQ_CLASSIF_AGENDA_w = 0) then 
		NR_SEQ_CLASSIF_AGENDA_w := null;
	end if;
	hr_atual_w			:= hr_inicial_w;
	while(hr_atual_w	< hr_final_w) and (hr_atual_w	< hr_final_par_w) loop 
		BEGIN 
		 
		select	count(*) 
		into STRICT	qt_min_duracao_w			 
		from 	w_agenda_exame_relat a 
		where 	cd_agenda			= cd_agenda_p 
		and 	ie_status_agenda		<> 'C' 
		and	dt_agenda			= hr_atual_w 
		and	nm_usuario			= nm_usuario_p;
qt_min_duracao_w	:= 0;
		 
		begin		 
		/* bloqueio por período */
 
		select 'S' 
		into STRICT	ie_bloqueio_w 
		from	agenda_bloqueio 
		where	cd_agenda	= cd_agenda_p 
		and	trunc(hr_atual_w) between dt_inicial and dt_final 
		and	coalesce(ie_dia_semana::text, '') = '' 
		and	coalesce(HR_INICIO_BLOQUEIO::text, '') = '' 
		and	coalesce(HR_FINAL_BLOQUEIO::text, '') = '';
		exception 
			when others then 
				ie_bloqueio_w := 'N';
		end;
 
		begin 
		/* bloqueio por horário */
 
		select 'S' 
		into STRICT	ie_bloqueio_hora_w 
		from	agenda_bloqueio 
		where	cd_agenda	= cd_agenda_p 
		and	trunc(hr_atual_w) between dt_inicial and dt_final 
		and	hr_atual_w between to_date(to_char(hr_atual_w,'dd/mm/yyyy') ||' '|| to_char(hr_inicio_bloqueio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') 
			and to_date(to_char(hr_atual_w,'dd/mm/yyyy') ||' '|| to_char(hr_final_bloqueio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') 
		and	coalesce(ie_dia_semana::text, '') = '' 
		and	(HR_INICIO_BLOQUEIO IS NOT NULL AND HR_INICIO_BLOQUEIO::text <> '') 
		and	(HR_FINAL_BLOQUEIO IS NOT NULL AND HR_FINAL_BLOQUEIO::text <> '') 
		and	hr_inicio_bloqueio < hr_final_bloqueio;
		exception 
			when others then 
				ie_bloqueio_hora_w := 'N';
		end;
 
		begin 
		/* bloqueio por dia */
 
		select 'S' 
		into STRICT	ie_bloqueio_dia_w 
		from	agenda_bloqueio 
		where	cd_agenda	= cd_agenda_p 
		and	trunc(hr_atual_w) between dt_inicial and dt_final 
		and	((ie_dia_semana = ie_dia_semana_w) or (ie_dia_semana = 9)) 
		and	(ie_dia_semana IS NOT NULL AND ie_dia_semana::text <> '') 
		and	coalesce(HR_INICIO_BLOQUEIO::text, '') = '' 
		and	coalesce(HR_FINAL_BLOQUEIO::text, '') = '';
		exception 
			when others then 
				ie_bloqueio_dia_w := 'N';
		end;
 
		begin 
		/* bloqueio dia e hora */
 
		select 'S' 
		into STRICT	ie_bloqueio_dia_hora_w 
		from	agenda_bloqueio 
		where	cd_agenda	= cd_agenda_p 
		and	trunc(hr_atual_w) between dt_inicial and dt_final 
		and	hr_atual_w between to_date(to_char(hr_atual_w,'dd/mm/yyyy') ||' '|| to_char(hr_inicio_bloqueio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') 
			and to_date(to_char(hr_atual_w,'dd/mm/yyyy') ||' '|| to_char(hr_final_bloqueio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') 
		and	(ie_dia_semana IS NOT NULL AND ie_dia_semana::text <> '') 
		and	((ie_dia_semana = ie_dia_semana_w) or (ie_dia_semana = 9)) 
		and	(HR_INICIO_BLOQUEIO IS NOT NULL AND HR_INICIO_BLOQUEIO::text <> '') 
		and	(HR_FINAL_BLOQUEIO IS NOT NULL AND HR_FINAL_BLOQUEIO::text <> '') 
		and	hr_inicio_bloqueio < hr_final_bloqueio;
		exception 
			when others then 
				ie_bloqueio_dia_hora_w := 'N';
		end;
		 
		if (qt_min_duracao_w = 0) and (hr_atual_w >= hr_inicial_par_w) and 
			(((ie_bloqueio_w = 'N') and (ie_bloqueio_hora_w = 'N') and (ie_bloqueio_dia_w = 'N') and (ie_bloqueio_dia_hora_w = 'N')) or (ie_gerar_bloqueados_w = 'S')) then 
			begin		 
			if (coalesce(length(ds_horarios_w),0) < 249) then 
				ds_horarios_w	:= ds_horarios_w || virgula_w || 
						to_char(hr_atual_w,'hh24:mi');
			end if;
			virgula_w		:= ',';
			 
			cd_turno_w		:= 0;
			 
			if ((to_char(hr_atual_w,'hh24'))::numeric  > somente_numero(HR_QUEBRA_TURNO_W)) or 
				(((to_char(hr_atual_w,'hh24'))::numeric  = somente_numero(HR_QUEBRA_TURNO_W)) and ((to_char(hr_atual_w,'mi'))::numeric  >= somente_numero(qt_min_QUEBRA_TURNO_W))) then 
				cd_turno_w	:= 1;
			end if;
			 
			if (hr_quebra_turno_not_w IS NOT NULL AND hr_quebra_turno_not_w::text <> '') and ((to_char(hr_atual_w,'hh24'))::numeric  >= somente_numero(hr_quebra_turno_not_w)) then 
				cd_turno_w	:= 3;
			end if;
		 
			select	count(*) 
			into STRICT	qt_agenda_w 
			from	w_agenda_exame_relat 
			where	cd_agenda		= cd_agenda_p 
			and	dt_agenda		= hr_atual_w 
			and	nm_usuario		= nm_usuario_p 
			and	ie_status_agenda	in ('L','N','R'); /* Dalcastagne em 24/08/2007 OS 66649 */
			 
			if (qt_agenda_w = 0) then 
				select	count(*) 
				into STRICT	qt_agenda_w 
				from	w_agenda_exame_relat 
				where	cd_agenda		= cd_agenda_p 
				and	dt_agenda		= hr_atual_w 
				and	nm_usuario		= nm_usuario_p 
				and	ie_status_agenda not in ('L','C','B');
			end if;
							 
			--(-20011,ie_bloqueio_w || ' ' || ie_bloqueio_hora_w || ' ' || ie_bloqueio_dia_w || ' ' || ie_bloqueio_dia_hora_w); 
			nm_paciente_w		:= null;
			ie_status_agenda_w	:= 'L';
			if (ie_bloqueio_w = 'S') or (ie_bloqueio_hora_w = 'S') or (ie_bloqueio_dia_w = 'S') or (ie_bloqueio_dia_hora_w = 'S') then 
				nm_paciente_w		:= wheb_mensagem_pck.get_texto(306953, null); -- Horário bloqueado 
				ie_status_agenda_w	:= 'B';	
			end if;
							 
			if (qt_agenda_w = 0) then 
				begin 
 
				insert into w_agenda_exame_relat(cd_agenda, dt_Agenda, 
					nm_usuario, dt_atualizacao, 
					ie_status_agenda) 
				values ( 
					cd_agenda_p, hr_atual_w, 
					 nm_usuario_p, clock_timestamp(), 
					ie_status_agenda_w);
				end;
			end if;
			end;
		end if;
		hr_atual_w		:= hr_atual_w + (nr_minuto_intervalo_w / 1440);
		qt_horario_w 	:= qt_horario_w + 1;
		if (hr_atual_w >= hr_inicial_intervalo_w) and (hr_atual_w < hr_final_intervalo_w) then 
			hr_atual_w	:= hr_final_intervalo_w;
		end if;
		if (qt_horario_w > 201 ) then 
			hr_atual_w	:= hr_final_w + 1;
		end if;
		END;
	END LOOP;
	end;
END LOOP;
CLOSE C01;
 
hr_nada_w	:= trunc(dt_agenda_p,'year');
hr_fim_w	:= hr_nada_w;
qt_min_minimo_w	:= 0;
 
OPEN C02;
LOOP 
FETCH C02 into 
	hr_inicial_w, 
	hr_final_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	if (hr_fim_w <> hr_nada_w) and (hr_inicial_w > hr_fim_w) then 
		BEGIN 
 
		nr_minuto_intervalo_w	:= (hr_inicial_w - hr_fim_w) * 1440;
		hr_atual_w		:= hr_fim_w;
		if (nr_minuto_intervalo_w >= qt_min_minimo_w) then 
			begin 
			select	count(*) 
			into STRICT	qt_turno_w			 
			from 	agenda_horario 
			where 	cd_agenda   	= cd_agenda_p 
	 		and 	dt_dia_semana	= ie_dia_Semana_w 
			and	hr_atual_w	between 
						to_date(to_char(dt_agenda_p,'dd/mm/yyyy') || ' ' || 
						to_char(hr_inicial,'hh24:mi'),'dd/mm/yyyy hh24:mi') 
						and 
						to_date(to_char(dt_agenda_p,'dd/mm/yyyy') || ' ' || 
						to_char(hr_final - 1/1440,'hh24:mi'),'dd/mm/yyyy hh24:mi');
 
			select	count(*) 
			into STRICT	qt_intervalo_w			 
			from 	agenda_horario 
			where 	cd_agenda   	= cd_agenda_p 
	 		and 	dt_dia_semana	= ie_dia_Semana_w 
			and  	to_char(hr_inicial_intervalo,'hh24') <> '00' 
			and	hr_atual_w	between 
						to_date(to_char(dt_agenda_p,'dd/mm/yyyy') || ' ' || 
						to_char(hr_inicial_intervalo,'hh24:mi'),'dd/mm/yyyy hh24:mi') 
						and 
						to_date(to_char(dt_agenda_p,'dd/mm/yyyy') || ' ' || 
						to_char(hr_final_intervalo - 1/1440,'hh24:mi'),'dd/mm/yyyy hh24:mi');
 
 
			if (qt_turno_w	= 0) then 
				begin 
 
				select	count(*) 
				into STRICT	qt_turno_w			 
				from 	agenda_horario 
				where 	cd_agenda   	= cd_agenda_p 
		 		and 	dt_dia_semana	= 9 
				and	hr_atual_w	between 
							to_date(to_char(dt_agenda_p,'dd/mm/yyyy') || ' ' || 
							to_char(hr_inicial,'hh24:mi'),'dd/mm/yyyy hh24:mi') 
							and 
							to_date(to_char(dt_agenda_p,'dd/mm/yyyy') || ' ' || 
							to_char(hr_final - 1/1440,'hh24:mi'),'dd/mm/yyyy hh24:mi');
 
				select	count(*) 
				into STRICT	qt_intervalo_w			 
				from 	agenda_horario 
				where 	cd_agenda   	= cd_agenda_p 
		 		and 	dt_dia_semana	= 9 
				and  	to_char(hr_inicial_intervalo,'hh24') <> '00' 
				and	hr_atual_w	between 
							to_date(to_char(dt_agenda_p,'dd/mm/yyyy') || ' ' || 
							to_char(hr_inicial_intervalo,'hh24:mi'),'dd/mm/yyyy hh24:mi') 
							and 
							to_date(to_char(dt_agenda_p,'dd/mm/yyyy') || ' ' || 
							to_char(hr_final_intervalo - 1/1440,'hh24:mi'),'dd/mm/yyyy hh24:mi');
 
 
				end;
			end if;
 
			begin 
			/* bloqueio por dia */
 
			select 'S' 
			into STRICT	ie_bloqueio_dia_w 
			from	agenda_bloqueio 
			where	cd_agenda	= cd_agenda_p 
			and	trunc(hr_atual_w) between dt_inicial and dt_final 
			and	((ie_dia_semana = ie_dia_semana_w) or (ie_dia_semana = 9)) 
			and	(ie_dia_semana IS NOT NULL AND ie_dia_semana::text <> '') 
			and	coalesce(HR_INICIO_BLOQUEIO::text, '') = '' 
			and	coalesce(HR_FINAL_BLOQUEIO::text, '') = '';
			exception 
				when others then 
					ie_bloqueio_dia_w := 'N';
			end;
 
 
 
			begin 
			/* bloqueio dia e hora */
 
			select 'S' 
			into STRICT	ie_bloqueio_dia_hora_w 
			from	agenda_bloqueio 
			where	cd_agenda	= cd_agenda_p 
			and	trunc(hr_atual_w) between dt_inicial and dt_final 
			and	hr_atual_w between to_date(to_char(hr_atual_w,'dd/mm/yyyy') ||' '|| 
				to_char(hr_inicio_bloqueio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') and to_date(to_char(hr_atual_w,'dd/mm/yyyy') ||' '|| to_char(hr_final_bloqueio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') 
			and	(ie_dia_semana IS NOT NULL AND ie_dia_semana::text <> '') 
			and	((ie_dia_semana = ie_dia_semana_w) or (ie_dia_semana = 9)) 
			and	(HR_INICIO_BLOQUEIO IS NOT NULL AND HR_INICIO_BLOQUEIO::text <> '') 
			and	(HR_FINAL_BLOQUEIO IS NOT NULL AND HR_FINAL_BLOQUEIO::text <> '') 
			and	hr_inicio_bloqueio < hr_final_bloqueio;
			exception 
				when others then 
					ie_bloqueio_dia_hora_w := 'N';
			end;
 
 
			if	((ie_bloqueio_dia_w = 'N' AND ie_bloqueio_dia_hora_w = 'N') or (ie_gerar_bloqueados_w = 'S')) and (qt_turno_w > 0) and (qt_intervalo_w = 0) then 
				begin 
				cd_turno_w		:= 0;
 
				if ((to_char(hr_atual_w,'hh24'))::numeric  > somente_numero(HR_QUEBRA_TURNO_W)) or 
					(((to_char(hr_atual_w,'hh24'))::numeric  = somente_numero(HR_QUEBRA_TURNO_W)) and ((to_char(hr_atual_w,'mi'))::numeric  >= somente_numero(qt_min_QUEBRA_TURNO_W))) then 
					cd_turno_w	:= 1;
				end if;
				 
				if (hr_quebra_turno_not_w IS NOT NULL AND hr_quebra_turno_not_w::text <> '') and ((to_char(hr_atual_w,'hh24'))::numeric  >= somente_numero(hr_quebra_turno_not_w)) then 
					cd_turno_w	:= 3;
				end if;
 
				select 	count(*) 
				into STRICT	qt_horario_livre_gerado_w 
				from 	w_agenda_exame_relat 
				where	cd_agenda = cd_agenda_p 
				and	dt_agenda = hr_atual_w 
				and	nm_usuario		= nm_usuario_p 
				and	ie_status_agenda = 'L';
				 
				nm_paciente_w		:= null;
				ie_status_agenda_w	:= 'L';
				 
				if (ie_bloqueio_dia_w = 'S') or (ie_bloqueio_dia_hora_w = 'S') then 
					nm_paciente_w		:= wheb_mensagem_pck.get_texto(306953, null); -- Horário bloqueado 
					ie_status_agenda_w	:= 'B';	
				end if;
				 
				if (qt_horario_livre_gerado_w = 0) then 
 
					insert into w_agenda_exame_relat(cd_agenda, dt_agenda, 
						nm_usuario, dt_atualizacao, 
						ie_status_agenda) 
					values ( 
						cd_agenda_p, hr_atual_w, 
						 nm_usuario_p, clock_timestamp(), 
						ie_status_agenda_w);
				end if;
				end;
			end if;
			end;
		end if;
		END;
	end if;
	if (hr_final_w > hr_fim_w) then 
		hr_fim_w	:= hr_final_w;
	end if;
END LOOP;
CLOSE C02;
 
OPEN C02;
LOOP 
FETCH C02 into 
	hr_inicial_w, 
	hr_final_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	if (hr_inicial_w > hr_final_w) then 
		BEGIN 
 
		nr_minuto_intervalo_w	:= (hr_inicial_w - hr_final_w) * 1440;
		hr_atual_w		:= hr_inicial_w;
		if (nr_minuto_intervalo_w >= qt_min_minimo_w) then 
			begin 
			select	count(*) 
			into STRICT	qt_turno_w			 
			from 	agenda_horario 
			where 	cd_agenda   	= cd_agenda_p 
	 		and	dt_dia_semana	= ie_dia_Semana_w 
			and	hr_atual_w	between 
						to_date(to_char(dt_agenda_p,'dd/mm/yyyy') || ' ' || 
						to_char(hr_inicial,'hh24:mi'),'dd/mm/yyyy hh24:mi') 
						and 
						to_date(to_char(dt_agenda_p,'dd/mm/yyyy') || ' ' || 
						to_char(hr_final - 1/1440,'hh24:mi'),'dd/mm/yyyy hh24:mi');
 
			select	count(*) 
			into STRICT	qt_intervalo_w			 
			from 	agenda_horario 
			where 	cd_agenda   	= cd_agenda_p 
	 		and 	dt_dia_semana	= ie_dia_Semana_w 
			and  	to_char(hr_inicial_intervalo,'hh24') <> '00' 
			and	hr_atual_w	between 
						to_date(to_char(dt_agenda_p,'dd/mm/yyyy') || ' ' || 
						to_char(hr_inicial_intervalo,'hh24:mi'),'dd/mm/yyyy hh24:mi') 
						and 
						to_date(to_char(dt_agenda_p,'dd/mm/yyyy') || ' ' || 
						to_char(hr_final_intervalo - 1/1440,'hh24:mi'),'dd/mm/yyyy hh24:mi');
 
 
			if (qt_turno_w	= 0) then 
				begin 
 
				select	count(*) 
				into STRICT	qt_turno_w			 
				from 	agenda_horario 
				where 	cd_agenda   	= cd_agenda_p 
		 		and 	dt_dia_semana	= 9 
				and	hr_atual_w	between 
							to_date(to_char(dt_agenda_p,'dd/mm/yyyy') || ' ' || 
							to_char(hr_inicial,'hh24:mi'),'dd/mm/yyyy hh24:mi') 
							and 
							to_date(to_char(dt_agenda_p,'dd/mm/yyyy') || ' ' || 
							to_char(hr_final - 1/1440,'hh24:mi'),'dd/mm/yyyy hh24:mi');
 
				select	count(*) 
				into STRICT	qt_intervalo_w			 
				from 	agenda_horario 
				where 	cd_agenda   	= cd_agenda_p 
		 		and 	dt_dia_semana	= 9 
				and  	to_char(hr_inicial_intervalo,'hh24') <> '00' 
				and	hr_atual_w	between 
							to_date(to_char(dt_agenda_p,'dd/mm/yyyy') || ' ' || 
							to_char(hr_inicial_intervalo,'hh24:mi'),'dd/mm/yyyy hh24:mi') 
							and 
							to_date(to_char(dt_agenda_p,'dd/mm/yyyy') || ' ' || 
							to_char(hr_final_intervalo - 1/1440,'hh24:mi'),'dd/mm/yyyy hh24:mi');
 
 
				end;
			end if;
 
			begin 
			/* bloqueio por dia */
 
			select 'S' 
			into STRICT	ie_bloqueio_dia_w 
			from	agenda_bloqueio 
			where	cd_agenda	= cd_agenda_p 
			and	trunc(hr_atual_w) between dt_inicial and dt_final 
			and	((ie_dia_semana = ie_dia_semana_w) or (ie_dia_semana = 9)) 
			and	(ie_dia_semana IS NOT NULL AND ie_dia_semana::text <> '') 
			and	coalesce(HR_INICIO_BLOQUEIO::text, '') = '' 
			and	coalesce(HR_FINAL_BLOQUEIO::text, '') = '';
			exception 
				when others then 
					ie_bloqueio_dia_w := 'N';
			end;
 
 
 
			begin 
			/* bloqueio dia e hora */
 
			select 'S' 
			into STRICT	ie_bloqueio_dia_hora_w 
			from	agenda_bloqueio 
			where	cd_agenda	= cd_agenda_p 
			and	trunc(hr_atual_w) between dt_inicial and dt_final 
			and	hr_atual_w between to_date(to_char(hr_atual_w,'dd/mm/yyyy') ||' '|| 
				to_char(hr_inicio_bloqueio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') and to_date(to_char(hr_atual_w,'dd/mm/yyyy') ||' '|| to_char(hr_final_bloqueio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') 
			and	(ie_dia_semana IS NOT NULL AND ie_dia_semana::text <> '') 
			and	((ie_dia_semana = ie_dia_semana_w) or (ie_dia_semana = 9)) 
			and	(HR_INICIO_BLOQUEIO IS NOT NULL AND HR_INICIO_BLOQUEIO::text <> '') 
			and	(HR_FINAL_BLOQUEIO IS NOT NULL AND HR_FINAL_BLOQUEIO::text <> '') 
			and	hr_inicio_bloqueio < hr_final_bloqueio;
			exception 
				when others then 
					ie_bloqueio_dia_hora_w := 'N';
			end;
 
 
			if (ie_bloqueio_dia_w = 'N') and (ie_bloqueio_dia_hora_w = 'N') and (qt_turno_w > 0) and (qt_intervalo_w = 0) then 
				begin 
				cd_turno_w		:= 0;
 
				if ((to_char(hr_atual_w,'hh24'))::numeric  > somente_numero(HR_QUEBRA_TURNO_W)) or 
					(((to_char(hr_atual_w,'hh24'))::numeric  = somente_numero(HR_QUEBRA_TURNO_W)) and ((to_char(hr_atual_w,'mi'))::numeric  >= somente_numero(qt_min_QUEBRA_TURNO_W))) then 
					cd_turno_w	:= 1;
				end if;
				 
				if (hr_quebra_turno_not_w IS NOT NULL AND hr_quebra_turno_not_w::text <> '') and ((to_char(hr_atual_w,'hh24'))::numeric  >= somente_numero(hr_quebra_turno_not_w)) then 
					cd_turno_w	:= 3;
				end if;
 
				select 	count(*) 
				into STRICT	qt_horario_livre_gerado_w 
				from 	w_agenda_exame_relat 
				where	cd_agenda = cd_agenda_p 
				and	dt_agenda = hr_atual_w 
				and	ie_status_agenda = 'L';
				 
				if (qt_horario_livre_gerado_w = 0) then 
 
					insert into w_agenda_exame_relat(cd_agenda, dt_agenda, 
						nm_usuario, dt_atualizacao, 
						ie_status_agenda) 
					values ( 
						cd_agenda_p, hr_atual_w, 
						 nm_usuario_p, clock_timestamp(), 
						'L');					
				end if;
 
				end;
			end if;
			end;
		end if;
		END;
	end if;
	if (hr_final_w >= hr_fim_w) then 
		hr_fim_w	:= hr_final_w;
	end if;
END LOOP;
CLOSE C02;
 
commit;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE agenda_gerar_consulta_agecir ( cd_estabelecimento_p bigint, cd_agenda_p bigint, dt_agenda_p timestamp, nm_usuario_p text) FROM PUBLIC;

