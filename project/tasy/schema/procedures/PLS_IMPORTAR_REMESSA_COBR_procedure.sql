-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_importar_remessa_cobr ( nr_seq_cobranca_p bigint, ds_conteudo_p text, nm_usuario_p text) AS $body$
DECLARE


qt_titulo_w			smallint;
vl_cobranca_ww			double precision;
vl_cobranca_w			double precision;
vl_liquidacao_w			double precision;
vl_desconto_w			double precision;
vl_acrescimo_w			double precision;
vl_despesa_bancaria_w		double precision;
vl_juros_w			double precision;
vl_multa_w			double precision;
vl_desc_previsto_w		double precision;
cd_banco_w			integer;
cd_moeda_w			smallint;
cd_camara_compensacao_w		smallint;
qt_dias_instrucao_w		smallint;
nr_seq_ocorrencia_ret_w		bigint;
nr_seq_cobranca_w		bigint;
nr_titulo_w			bigint;
cd_tipo_registro_w		varchar(3);
cd_agencia_bancaria_w		varchar(8);
ie_digito_conta_w		varchar(2);
cd_ocorrencia_w			varchar(3);
cd_instrucao_w			varchar(5);
nr_conta_w			varchar(20);
dt_liquidacao_ww		varchar(8);
dt_liquidacao_w			timestamp;
nr_seq_mensalidade_w		bigint;


BEGIN

cd_tipo_registro_w := substr(ds_conteudo_p,9,3);

/*
if	(cd_tipo_registro_w = '001') then
 Aqui para importar Cobrança Escritural
end if;  */
if (cd_tipo_registro_w = '002') then
	/* Aqui para importar  Título Receber Cobrança */

	vl_cobranca_w		:= Campo_Mascara_virgula_casas(substr(ds_conteudo_p,32,13) || ',' || substr(ds_conteudo_p,45,2),2);
	nr_seq_cobranca_w	:= substr(ds_conteudo_p,12,10);
	nr_titulo_w		:= substr(ds_conteudo_p,22,10);
	cd_agencia_bancaria_w	:= substr(ds_conteudo_p,52,8);
	nr_conta_w		:= substr(ds_conteudo_p,60,20);
	ie_digito_conta_w	:= substr(ds_conteudo_p,105,2);
	dt_liquidacao_ww	:= substr(ds_conteudo_p,88,2)||substr(ds_conteudo_p,86,2)||substr(ds_conteudo_p,82,4);

	select	CASE WHEN (substr(ds_conteudo_p,47,5))::numeric ='0' THEN ''  ELSE substr(ds_conteudo_p,47,5) END ,
		CASE WHEN (substr(ds_conteudo_p,80,2))::numeric ='0' THEN ''  ELSE substr(ds_conteudo_p,80,2) END ,
		CASE WHEN (substr(ds_conteudo_p,90,15))::numeric ='0' THEN ''  ELSE substr(ds_conteudo_p,90,15) END ,
		CASE WHEN (substr(ds_conteudo_p,107,3))::numeric ='0' THEN ''  ELSE substr(ds_conteudo_p,107,3) END ,
		CASE WHEN (substr(ds_conteudo_p,110,15))::numeric ='0' THEN ''  ELSE substr(ds_conteudo_p,110,15) END ,
		CASE WHEN (substr(ds_conteudo_p,125,15))::numeric ='0' THEN ''  ELSE substr(ds_conteudo_p,125,15) END ,
		CASE WHEN (substr(ds_conteudo_p,148,3))::numeric ='0' THEN ''  ELSE substr(ds_conteudo_p,148,3) END ,
		CASE WHEN (substr(ds_conteudo_p,151,10))::numeric ='0' THEN ''  ELSE substr(ds_conteudo_p,151,10) END ,
		CASE WHEN (substr(ds_conteudo_p,161,15))::numeric ='0' THEN ''  ELSE substr(ds_conteudo_p,161,15) END ,
		CASE WHEN (substr(ds_conteudo_p,176,15))::numeric ='0' THEN ''  ELSE substr(ds_conteudo_p,176,15) END ,
		CASE WHEN (substr(ds_conteudo_p,191,15))::numeric ='0' THEN ''  ELSE substr(ds_conteudo_p,191,15) END ,
		CASE WHEN (substr(ds_conteudo_p,206,15))::numeric ='0' THEN ''  ELSE substr(ds_conteudo_p,206,15) END ,
		CASE WHEN substr(ds_conteudo_p,143,5)='     ' THEN ''  ELSE substr(ds_conteudo_p,143,5) END ,
		CASE WHEN substr(ds_conteudo_p,140,3)='   ' THEN ''  ELSE substr(ds_conteudo_p,140,3) END ,
		CASE WHEN (substr(ds_conteudo_p,221,15))::numeric ='0' THEN ''  ELSE substr(ds_conteudo_p,221,15) END
	into STRICT	cd_banco_w,
		cd_moeda_w,
		vl_liquidacao_w,
		cd_camara_compensacao_w,
		vl_desconto_w,
		vl_acrescimo_w,
		qt_dias_instrucao_w,
		nr_seq_ocorrencia_ret_w,
		vl_despesa_bancaria_w,
		vl_juros_w,
		vl_multa_w,
		vl_desc_previsto_w,
		cd_instrucao_w,
		cd_ocorrencia_w,
		nr_seq_mensalidade_w
	;

	if (dt_liquidacao_ww  <> '        ') then
			dt_liquidacao_w		:= to_date(dt_liquidacao_ww,'dd/mm/yyyy');
	end if;

	select  count(*)
        into STRICT    qt_titulo_w
        from    titulo_receber_cobr
        where   nr_titulo = nr_titulo_w
	and	nr_seq_cobranca = nr_seq_cobranca_p;

        if (qt_titulo_w = 0) then
		insert into titulo_receber_cobr(	nr_sequencia, nr_seq_cobranca, nr_titulo,
				vl_cobranca, dt_atualizacao, nm_usuario,
				cd_banco, cd_agencia_bancaria, nr_conta,
				cd_moeda, dt_liquidacao, vl_liquidacao,
				ie_digito_conta, cd_camara_compensacao, vl_desconto,
				vl_acrescimo, cd_ocorrencia, cd_instrucao,
				qt_dias_instrucao, nr_seq_ocorrencia_ret, dt_atualizacao_nrec,
				nm_usuario_nrec, vl_despesa_bancaria, vl_juros,
				vl_multa, vl_desc_previsto, nr_seq_mensalidade)
		values (	nextval('titulo_receber_cobr_seq'), nr_seq_cobranca_p, nr_titulo_w,
				vl_cobranca_w, clock_timestamp(), nm_usuario_p,
				cd_banco_w, cd_agencia_bancaria_w, nr_conta_w,
				cd_moeda_w, dt_liquidacao_w, vl_liquidacao_w,
				ie_digito_conta_w, cd_camara_compensacao_w, vl_desconto_w,
				vl_acrescimo_w, cd_ocorrencia_w, cd_instrucao_w,
				qt_dias_instrucao_w, nr_seq_ocorrencia_ret_w, clock_timestamp(),
				nm_usuario_p, vl_despesa_bancaria_w, vl_juros_w,
				vl_multa_w, vl_desc_previsto_w, nr_seq_mensalidade_w);
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_importar_remessa_cobr ( nr_seq_cobranca_p bigint, ds_conteudo_p text, nm_usuario_p text) FROM PUBLIC;

