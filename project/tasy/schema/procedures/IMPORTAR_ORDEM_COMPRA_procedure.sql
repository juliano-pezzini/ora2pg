-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importar_ordem_compra ( cd_cgc_fornecedor_p text, cd_centro_custo_p bigint, dt_ordem_compra_p timestamp, nr_doc_externo_p text, cd_material_p bigint, qt_material_p bigint, cd_unidade_medida_compra_p text, vl_unitario_material_p bigint, vl_total_p bigint, cd_comprador_p text, cd_local_estoque_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_linha_p bigint, ie_primeiro_p text, nr_ordem_compra_p INOUT bigint, ie_tipo_ordem_p text default null, cd_condicao_pagamento_p bigint default null, dt_entrega_p timestamp default null) AS $body$
DECLARE


nr_ordem_compra_w		bigint;
nr_item_oci_w			bigint;
cd_unidade_medida_compra_w	varchar(30);
nr_documento_externo_w		bigint;
nr_contador_w			bigint;
nr_contador_ww			bigint;
ds_historico_w			varchar(255);
ie_situacao_w			varchar(1);
cd_cond_pagto_w			bigint;
cd_centro_custo_w		centro_custo.cd_centro_custo%type;
ie_tipo_conta_w			bigint;
ie_tipo_local_w			local_estoque.ie_tipo_local%type;
cd_conta_contabil_w		conta_contabil.cd_conta_contabil%type;



BEGIN
nr_ordem_compra_w	:= coalesce(nr_ordem_compra_p,0);
nr_item_oci_w		:= 0;
nr_contador_ww		:= 0;

if (ie_primeiro_p = 'S') then
	delete	from hist_import_oc
	where	nm_usuario = nm_usuario_p;
end if;

select	somente_numero(nr_doc_externo_p)
into STRICT	nr_documento_externo_w
;

/* Verifica se existe o fornecedor */

if (coalesce(cd_cgc_fornecedor_p, 0) = 0) then	
	ds_historico_w	:= substr((ds_historico_w || WHEB_MENSAGEM_PCK.get_texto(1199295)),1,255);
	nr_contador_ww	:= (nr_contador_ww + 1);
else
	select	count(*),
		max(coalesce(ie_situacao,'I'))
	into STRICT	nr_contador_w,
		ie_situacao_w
	from	pessoa_juridica
	where	cd_cgc = cd_cgc_fornecedor_p;

	if (nr_contador_w = 0) then			
		ds_historico_w	:= substr((ds_historico_w || WHEB_MENSAGEM_PCK.get_texto(302791)),1,255);
		nr_contador_w	:= 0;
		nr_contador_ww	:= (nr_contador_ww + 1);
	elsif (ie_situacao_w <> 'A') then			
		ds_historico_w	:= substr((ds_historico_w || WHEB_MENSAGEM_PCK.get_texto(302792)),1,255);
		nr_contador_ww	:= (nr_contador_ww + 1);
	end if;
end if;

if (cd_local_estoque_p IS NOT NULL AND cd_local_estoque_p::text <> '') then
    select	coalesce(ie_tipo_local,0)
    into STRICT 	ie_tipo_local_w
    from 	local_estoque
    where 	cd_local_estoque = cd_local_estoque_p;
end if;	

/* Verifica se existe o Centro de custo */

if	(coalesce(cd_centro_custo_p::text, '') = '' and
    ((ie_tipo_local_w = 8) or (obter_padronizacao_item_oc(cd_estabelecimento_p => cd_estabelecimento_p, 
                                                       ie_tipo_ordem_p => ie_tipo_ordem_p, 
                                                       cd_material_p => cd_material_p, 
                                                       ie_opcao_p => 'C') = 'S')))then		
	ds_historico_w	:= substr((ds_historico_w || WHEB_MENSAGEM_PCK.get_texto(300013)),1,255);
	nr_contador_ww	:= (nr_contador_ww + 1);

elsif (cd_centro_custo_p IS NOT NULL AND cd_centro_custo_p::text <> '') then
	select	count(*),
		max(coalesce(ie_situacao,'I'))
	into STRICT	nr_contador_w,
		ie_situacao_w
	from	centro_custo
	where	cd_centro_custo = cd_centro_custo_p;

	if (nr_contador_w = 0) then			
		ds_historico_w	:= substr((ds_historico_w || WHEB_MENSAGEM_PCK.get_texto(302794)),1,255);
		nr_contador_w	:= 0;
		nr_contador_ww	:= (nr_contador_ww + 1);
	elsif (ie_situacao_w <> 'A') then			
		ds_historico_w	:= substr((ds_historico_w || WHEB_MENSAGEM_PCK.get_texto(302795)),1,255);
		nr_contador_ww	:= (nr_contador_ww + 1);
	end if;
end if;

/* Verifica se existe o Comprador */

if (coalesce(cd_comprador_p, 0) = 0) then			
	ds_historico_w	:= substr((ds_historico_w || WHEB_MENSAGEM_PCK.get_texto(1199296)),1,255);
	nr_contador_ww	:= (nr_contador_ww + 1);
else
	select	count(*),
		max(coalesce(ie_situacao,'I'))
	into STRICT	nr_contador_w,
		ie_situacao_w
	from	comprador
	where	cd_pessoa_fisica = cd_comprador_p;

	if (nr_contador_w = 0) then			
		ds_historico_w	:= substr((ds_historico_w || WHEB_MENSAGEM_PCK.get_texto(302798)),1,255);
		nr_contador_w	:= 0;
		nr_contador_ww	:= (nr_contador_ww + 1);
	elsif (ie_situacao_w <> 'A') then			
		ds_historico_w	:= substr((ds_historico_w || WHEB_MENSAGEM_PCK.get_texto(302800)),1,255);
		nr_contador_ww	:= (nr_contador_ww + 1);
	end if;
end if;

/* Verifica se existe o material */

if (coalesce(cd_material_p, 0) = 0) then			
	ds_historico_w	:= substr((ds_historico_w || WHEB_MENSAGEM_PCK.get_texto(1199303)),1,255);
	nr_contador_ww	:= (nr_contador_ww + 1);
else
	select	count(*),
		max(coalesce(ie_situacao,'I'))
	into STRICT	nr_contador_w,
		ie_situacao_w
	from	material
	where	cd_material = cd_material_p;

	if (nr_contador_w = 0) then		
		ds_historico_w	:= substr((ds_historico_w || WHEB_MENSAGEM_PCK.get_texto(302804)),1,255);
		nr_contador_w	:= 0;
		nr_contador_ww	:= (nr_contador_ww + 1);
	elsif (ie_situacao_w <> 'A') then		
		ds_historico_w	:= substr((ds_historico_w || WHEB_MENSAGEM_PCK.get_texto(302806)),1,255);
		nr_contador_ww	:= (nr_contador_ww + 1);
	end if;
end if;

/* Verifica se existe o local de estoque */

if (coalesce(cd_local_estoque_p, 0) = 0) then		
	ds_historico_w	:= substr((ds_historico_w || WHEB_MENSAGEM_PCK.get_texto(1199297)),1,255);
	nr_contador_ww	:= (nr_contador_ww + 1);
else
	select	count(*),
		max(coalesce(ie_situacao,'I')),
		max(ie_tipo_local)
	into STRICT	nr_contador_w,
		ie_situacao_w,
		ie_tipo_local_w
	from	local_estoque
	where	cd_local_estoque = cd_local_estoque_p;

	if (nr_contador_w = 0) then			
		ds_historico_w	:= substr((ds_historico_w || WHEB_MENSAGEM_PCK.get_texto(302808)),1,255);
		nr_contador_w	:= 0;
		nr_contador_ww	:= (nr_contador_ww + 1);
	elsif (ie_situacao_w <> 'A') then		
		ds_historico_w	:= substr((ds_historico_w || WHEB_MENSAGEM_PCK.get_texto(302809)),1,255);
		nr_contador_ww	:= (nr_contador_ww + 1);
	end if;
end if;

if (nr_contador_ww > 0) then
	insert into hist_import_oc(
		cd_cgc_fornecedor,
		cd_centro_custo,
		cd_comprador,
		cd_material,
		cd_local_estoque,
		nr_linha,
		nm_usuario,
		ds_observacao)
	values (	cd_cgc_fornecedor_p,
		cd_centro_custo_p,
		cd_comprador_p,
		cd_material_p,
		cd_local_estoque_p,
		nr_linha_p,
		nm_usuario_p,
		substr(ds_historico_w,1,255));
end if;

if (nr_contador_ww = 0) then
	if (nr_ordem_compra_w = 0) then
	
		select 	nextval('ordem_compra_seq')
		into STRICT	nr_ordem_compra_w
		;
		
    if (coalesce(cd_condicao_pagamento_p::text, '') = '') then
	
			select	coalesce(max(cd_cond_pagto),2)
			into STRICT	cd_cond_pagto_w
			from	pessoa_juridica_estab
			where	cd_cgc = cd_cgc_fornecedor_p
			and	cd_estabelecimento = cd_estabelecimento_p;
		
	end if;

		insert into ordem_compra(
				nr_ordem_compra,
				cd_estabelecimento,
				cd_condicao_pagamento,
				cd_comprador,
				dt_ordem_compra,
				dt_atualizacao,
				nm_usuario,
				cd_moeda,
				ie_situacao,
				dt_inclusao,
				cd_pessoa_solicitante,
				ie_frete,
				dt_entrega,
				ie_aviso_chegada,
				ie_emite_obs,
				ie_urgente,
				nr_documento_externo,
				cd_cgc_fornecedor,
				ie_tipo_ordem)
			values (nr_ordem_compra_w,
				cd_estabelecimento_p,
				coalesce(cd_condicao_pagamento_p,cd_cond_pagto_w),
				cd_comprador_p,
				dt_ordem_compra_p,
				clock_timestamp(),
				nm_usuario_p,
				1,
				'A',
				clock_timestamp(),
				cd_comprador_p,
				'C',
				coalesce(dt_entrega_p,clock_timestamp()),
				'N',
				'S',
				'N',
				CASE WHEN nr_documento_externo_w=0 THEN null  ELSE nr_documento_externo_w END ,
				cd_cgc_fornecedor_p,
				coalesce(ie_tipo_ordem_p,'I'));
	end if;

	select 	coalesce(max(nr_item_oci),0)+1
	into STRICT	nr_item_oci_w
	from 	ordem_compra_item
	where 	nr_ordem_compra = nr_ordem_compra_w;

	/*
	select	max(cd_unidade_medida)
	into	cd_unidade_medida_compra_w
	from	unidade_medida
	where	upper(cd_unidade_medida) = upper(cd_unidade_medida_compra_p);
	*/
	select	max(cd_unidade_medida_compra)
	into STRICT	cd_unidade_medida_compra_w
	from	material
	where	cd_material = cd_material_p;
	
	cd_centro_custo_w	:= cd_centro_custo_p;
	ie_tipo_conta_w		:= 3;
	
	if (coalesce(cd_centro_custo_w::text, '') = '') and (ie_tipo_local_w <> 8)then
		ie_tipo_conta_w		:= 2;
	end if;
	
	SELECT * FROM define_conta_material(
			cd_estabelecimento_p, cd_material_p, ie_tipo_conta_w, null, 0, null, 0, 0, 0, '', cd_local_estoque_p, 0, dt_ordem_compra_p, cd_conta_contabil_w, cd_centro_custo_w, '', '') INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
	
	insert into ordem_compra_item(
				nr_ordem_compra,
				nr_item_oci,
				cd_material,
				cd_unidade_medida_compra,
				vl_unitario_material,
				qt_material,
				qt_original,
				dt_atualizacao,
				nm_usuario,
				ie_situacao,
				cd_local_estoque,
				cd_centro_custo,
				nr_documento_externo,
				cd_conta_contabil,
				vl_total_item,
				cd_sequencia_parametro)
			values (	nr_ordem_compra_w,
				nr_item_oci_w,
				cd_material_p,
				cd_unidade_medida_compra_w,
				vl_unitario_material_p,
				qt_material_p,
				qt_material_p,
				clock_timestamp(),
				nm_usuario_p,
				'A',
				cd_local_estoque_p,
				coalesce(cd_centro_custo_w,cd_centro_custo_p),
				substr(nr_doc_externo_p,1,100),
				cd_conta_contabil_w,
				round((vl_unitario_material_p * qt_material_p)::numeric,4),
				philips_contabil_pck.get_parametro_conta_contabil);

	insert into ordem_compra_item_entrega(
			nr_ordem_compra,
			nr_item_oci,
			dt_prevista_entrega,
			qt_prevista_entrega,
			dt_atualizacao,
			nm_usuario,
			nr_sequencia)
		values (	nr_ordem_compra_w,
			nr_item_oci_w,
			clock_timestamp(),
			qt_material_p,
			clock_timestamp(),
			nm_usuario_p,
			nextval('ordem_compra_item_entrega_seq'));
end if;
commit;

nr_ordem_compra_p := nr_ordem_compra_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importar_ordem_compra ( cd_cgc_fornecedor_p text, cd_centro_custo_p bigint, dt_ordem_compra_p timestamp, nr_doc_externo_p text, cd_material_p bigint, qt_material_p bigint, cd_unidade_medida_compra_p text, vl_unitario_material_p bigint, vl_total_p bigint, cd_comprador_p text, cd_local_estoque_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_linha_p bigint, ie_primeiro_p text, nr_ordem_compra_p INOUT bigint, ie_tipo_ordem_p text default null, cd_condicao_pagamento_p bigint default null, dt_entrega_p timestamp default null) FROM PUBLIC;

