-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_cost_of_scheduled_opme ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) AS $body$
DECLARE


    c01 CURSOR FOR
        SELECT distinct coalesce(obter_valor_item_opme(c.nr_sequencia,'T'),0) vl_opme,
			coalesce(get_formatted_person_name(a.cd_medico,'list'), obter_nome_medico(a.cd_medico,'N')) nm_medico,
            obter_desc_classif_pac(a.nr_seq_tipo_classif_pac) ds_classification,
            substr(obter_exame_agenda(a.cd_procedimento, a.ie_origem_proced, a.nr_seq_proc_interno),1,240) ds_procedimento,
            substr(obter_Sexo_pf(a.cd_pessoa_fisica,'D'),1,60) ds_gender,
            SUBSTR(obter_nome_sala_cirur(b.nr_seq_sala_cir,''),1,255) ds_room,
            a.nr_atendimento nr_atendimento,
            a.ie_status_agenda ie_status_agenda,
            a.nr_minuto_duracao nr_minuto_duracao,
            a.hr_inicio hr_inicio,
            a.dt_agendamento dt_agendamento,
            a.dt_agenda dt_agenda,
            a.cd_medico_req cd_medico_req,
            a.cd_procedimento cd_procedimento,
            a.cd_medico cd_medico,
            a.cd_medico_exec cd_medico_exec,
            a.cd_pessoa_fisica cd_pessoa_fisica,
            coalesce(get_formatted_person_name(a.cd_pessoa_fisica, 'list'), 
            obter_nome_pf(a.cd_pessoa_fisica)) nm_patient,
            a.dt_nascimento_pac dt_nascimento_pac,
            obter_dados_pf(a.cd_pessoa_fisica, 'I') qt_idade_paciente
        FROM     agenda_paciente a,
                 agenda b,
                 agenda_pac_opme c
        WHERE    a.cd_agenda 	   	 	  = b.cd_agenda
            AND	   a.nr_sequencia		  = c.nr_seq_agenda
			AND    b.cd_estabelecimento   = (cd_estabelecimento_p)::numeric 
            AND	   b.cd_tipo_agenda		  = 1
            AND	   coalesce(c.ie_origem_inf,'I') = 'I'
            AND	   a.ie_status_agenda	  NOT IN ('L','B','C','R','I','F')
            AND    pkg_date_utils.start_of(a.dt_agendamento, 'MONTH', 0) = pkg_date_utils.start_of(clock_timestamp(), 'MONTH', 0);


	qt_total_w					bigint := 0;
	pfcs_panel_detail_seq_w			pfcs_panel_detail.nr_sequencia%type;
	pfcs_panel_seq_w				pfcs_panel.nr_sequencia%type;
	nr_seq_operational_level_w		pfcs_operational_level.nr_sequencia%type;

	
BEGIN
        nr_seq_operational_level_w := pfcs_get_structure_level(
		cd_establishment_p => cd_estabelecimento_p,
		ie_level_p => 'O',
		ie_info_p => 'C');
		for c01_w in c01 loop
			begin
                qt_total_w := qt_total_w + c01_w.vl_opme;

                select nextval('pfcs_panel_detail_seq')
                into STRICT pfcs_panel_detail_seq_w
;

                insert into pfcs_panel_detail(
                    nr_sequencia,
                    nm_usuario,
                    dt_atualizacao,
                    nm_usuario_nrec,
                    dt_atualizacao_nrec,
                    ie_situation,
                    nr_seq_indicator,
                    nr_seq_operational_level)
                values (
                    pfcs_panel_detail_seq_w,
                    nm_usuario_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    clock_timestamp(),
                    'T',
                    nr_seq_indicator_p,
                    nr_seq_operational_level_w);

                insert into pfcs_detail_patient(
                    nr_sequencia,
                    nm_usuario,
                    dt_atualizacao,
                    nm_usuario_nrec,
                    dt_atualizacao_nrec,
                    nr_seq_detail,
                    nr_encounter,
                    id_patient,
                    nm_patient,
                    ds_gender,
                    ds_classification,
                    dt_birthdate,
                    ds_age_range)
                values (
                    nextval('pfcs_detail_patient_seq'),
                    nm_usuario_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    clock_timestamp(),
                    pfcs_panel_detail_seq_w,
                    c01_w.nr_atendimento,
                    c01_w.cd_pessoa_fisica,
                    c01_w.nm_patient,
                    c01_w.ds_gender,
                    c01_w.ds_classification,
                    c01_w.dt_nascimento_pac,
                    c01_w.qt_idade_paciente);

                insert into pfcs_detail_schedule(
                    nr_sequencia,
                    nm_usuario,
                    dt_atualizacao,
                    nm_usuario_nrec,
                    dt_atualizacao_nrec,
                    nr_seq_detail,
                    cd_executing_physician,
                    cd_physician,
					          nm_physician,
                    cd_procedure,
                    cd_requesting_physician,
                    ds_procedure,
                    ds_room,
                    dt_schedule,
                    dt_scheduling,
                    hr_start,
                    qt_duration_minutes,
                    ie_status_schedule)
                values (
                    nextval('pfcs_detail_schedule_seq'),
                    nm_usuario_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    clock_timestamp(),
                    pfcs_panel_detail_seq_w,
                    c01_w.cd_medico_exec,
                    c01_w.cd_medico,
                    c01_w.nm_medico,
                    c01_w.cd_procedimento,
                    c01_w.cd_medico_req,
                    c01_w.ds_procedimento,
                    c01_w.ds_room,
                    c01_w.dt_agenda,
                    c01_w.dt_agendamento,
                    c01_w.hr_inicio,
                    c01_w.nr_minuto_duracao,
                    c01_w.ie_status_agenda);
			end;
		end loop;
        commit;
         := pfcs_pck.pfcs_generate_results(
                vl_indicator_p => qt_total_w, ds_reference_value_p => null, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => pfcs_panel_seq_w);

        CALL pfcs_pck.pfcs_update_detail(
                nr_seq_indicator_p => nr_seq_indicator_p,
                nr_seq_panel_p => pfcs_panel_seq_w,
                nr_seq_operational_level_p => nr_seq_operational_level_w,
                nm_usuario_p => nm_usuario_p);

		CALL pfcs_pck.pfcs_activate_records(
				nr_seq_indicator_p => nr_seq_indicator_p,
				nr_seq_operational_level_p => nr_seq_operational_level_w,
				nm_usuario_p => nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_cost_of_scheduled_opme ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) FROM PUBLIC;

