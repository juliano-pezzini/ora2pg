-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_propagar_lib_conta ( nr_seq_analise_p bigint, nr_seq_conta_p bigint, nr_seq_grupo_atual_p bigint, nr_seq_mot_liberacao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

					 
nr_seq_fluxo_w			bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_conta_mat_w		bigint;
nr_seq_proc_partic_w		bigint;
qt_glosa_inserida_ativa_w	bigint;
qt_ocor_glosa_val_w		bigint;
nr_seq_conta_w			bigint;

C01 CURSOR FOR 
	SELECT	a.nr_sequencia nr_seq_proc, 
		null nr_seq_mat, 
		null nr_seq_partic, 
		a.nr_seq_conta 
	from	pls_conta_proc	a 
	where	a.nr_seq_conta	= nr_seq_conta_p 
	and (a.ie_status	not('D','M')) 
	
union all
 
	SELECT	null nr_seq_proc, 
		a.nr_sequencia nr_seq_mat, 
		null nr_seq_partic, 
		a.nr_seq_conta 
	from	pls_conta_mat	a 
	where	a.nr_seq_conta	= nr_seq_conta_p 
	and (a.ie_status	not in ('D','M')) 
	/* Honorário Deve ser matido o tratamento abaixo pois a glosa ocorre da mesma forma onde os itens referenciados também são glosados*/
 
	
union all
 
	select	c.nr_sequencia nr_seq_proc, 
		null nr_seq_mat, 
		null nr_seq_partic, 
		c.nr_seq_conta 
	from	pls_conta	d, 
		pls_conta_proc	c, 
		pls_conta_proc	a 
	where	a.nr_sequencia	= c.nr_seq_proc_ref 
	and	a.nr_seq_conta	= nr_seq_conta_p 
	and	c.nr_seq_conta	= d.nr_sequencia 
	and	d.nr_seq_analise = nr_seq_analise_p 
	and (c.ie_status	not in ('D','M')) 
	and	not exists (select	1 
				 from	pls_conta_glosa	cg 
				 where	c.nr_seq_conta	= cg.nr_seq_conta 
				 and	coalesce(cg.nr_seq_conta_mat::text, '') = '' 
				 and	coalesce(cg.nr_seq_conta_proc::text, '') = '' 
				 and	cg.ie_situacao		= 'A');
	

BEGIN 
 
open C01;
loop 
fetch C01 into	 
	nr_seq_conta_proc_w, 
	nr_seq_conta_mat_w, 
	nr_seq_proc_partic_w, 
	nr_seq_conta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin			 
	qt_ocor_glosa_val_w	:= 0;
	if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then 
		select	count(1) 
		into STRICT	qt_glosa_inserida_ativa_w 
		from	pls_conta_glosa a 
		where	nr_seq_conta_proc = nr_seq_conta_proc_w 
		and	a.ie_situacao = 'A' 
		and	a.ie_lib_manual = 'S';
		 
		if (qt_glosa_inserida_ativa_w = 0) then 
			update	pls_conta_proc 
			set	ie_status_pagamento	= 'I', 
				ie_status		= 'A', 
				ie_glosa		= 'N' 
			where 	nr_sequencia		= nr_seq_conta_proc_w 
			and	vl_liberado		= 0;
		end if;
	elsif (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then 
		select	count(1) 
		into STRICT	qt_glosa_inserida_ativa_w 
		from	pls_conta_glosa a 
		where	nr_seq_conta_mat = nr_seq_conta_mat_w 
		and	a.ie_situacao = 'A' 
		and	a.ie_lib_manual = 'S';
		 
		if (qt_glosa_inserida_ativa_w = 0) then 
			update	pls_conta_mat 
			set	ie_status_pagamento	= 'I', 
				ie_status		= 'A', 
				ie_glosa		= 'N' 
			where	nr_sequencia		= nr_seq_conta_mat_w 
			and	vl_liberado		= 0;
		end if;
	end if;
	if (nr_seq_proc_partic_w IS NOT NULL AND nr_seq_proc_partic_w::text <> '') then 
		select	count(1) 
		into STRICT	qt_glosa_inserida_ativa_w 
		from	pls_conta_glosa a 
		where	nr_seq_proc_partic = nr_seq_proc_partic_w 
		and	a.ie_situacao = 'A' 
		and	a.ie_lib_manual = 'S';
		 
		if (qt_glosa_inserida_ativa_w = 0) then 
			update	pls_proc_participante 
			set	ie_status_pagamento	= 'I', 
				ie_status		= 'U', 
				ie_glosa		= 'N' 
			where	nr_sequencia		= nr_seq_proc_partic_w 
			and	vl_participante		= 0;
		end if;
	end if;
	select	count(1) 
	into STRICT	qt_ocor_glosa_val_w 
	from	(	SELECT	a.nr_sequencia 
			from	pls_ocorrencia_benef	a, 
				pls_ocorrencia		z 
			where	a.nr_seq_ocorrencia 	= z.nr_sequencia 
			and	((a.nr_seq_conta_proc 	= nr_seq_conta_proc_w) 
			or (a.nr_seq_conta_mat 	= nr_seq_conta_mat_w) 
			or (a.nr_seq_proc_partic	= nr_seq_proc_partic_w)) 
			and 	a.ie_situacao 		= 'A' 
			and 	z.ie_glosar_pagamento	= 'S' 
			
union
 
			SELECT	b.nr_sequencia 
			from	pls_conta_glosa		b 
			where	((b.nr_seq_conta_proc 	= nr_seq_conta_proc_w) 
			or (b.nr_seq_conta_mat	= nr_seq_conta_mat_w) 
			or (b.nr_seq_proc_partic	= nr_seq_proc_partic_w)) 
			and 	b.ie_situacao 		= 'A') alias9;
	 
 
	if (qt_ocor_glosa_val_w	= 0)	then 
		nr_seq_fluxo_w := pls_gravar_fluxo_analise_item(	nr_seq_analise_p, nr_seq_conta_w, nr_seq_conta_proc_w, nr_seq_conta_mat_w, nr_seq_proc_partic_w, null, nr_seq_grupo_atual_p, 'L', nr_seq_mot_liberacao_p, null, 'N', 'N', nm_usuario_p, 'S', null, 'L', nr_seq_fluxo_w);
	end if;
	 
	if (nr_seq_conta_w <> nr_seq_conta_p) then 
		update	pls_conta 
		set	ie_glosa	= 'N' 
		where	nr_sequencia	= nr_seq_conta_w;
		CALL pls_liberar_item_automatic(nr_seq_conta_w,null, null, nm_usuario_p);
	end if;
	 
	end;
end loop;
close C01;
 
update	pls_conta 
set	ie_glosa	= 'N' 
where	nr_sequencia	= nr_seq_conta_p;
		 
CALL pls_liberar_item_automatic(nr_seq_conta_p,null, null, nm_usuario_p);
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_propagar_lib_conta ( nr_seq_analise_p bigint, nr_seq_conta_p bigint, nr_seq_grupo_atual_p bigint, nr_seq_mot_liberacao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

