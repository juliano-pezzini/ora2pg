-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_liberar_requisicao_manual ( nr_seq_requisicao_p bigint, ds_motivo_libercao_p text, nm_usuario_p text) AS $body$
DECLARE

				 
ds_texto_w			varchar(4000);
ie_tipo_intercambio_w		pls_requisicao.ie_tipo_intercambio%type;
qt_pedido_aut_w			integer;
qt_pedido_compl_aut_w		integer;
qt_resp_pedido_aut_w		integer;
ie_estagio_w			pls_requisicao.ie_estagio%type;
ie_tipo_processo_w		pls_requisicao.ie_tipo_processo%type;
nr_seq_segurado_w		pls_requisicao.nr_seq_segurado%type;
dt_requisicao_w			pls_requisicao.dt_requisicao%type;
ie_tipo_guia_w			pls_requisicao.ie_tipo_guia%type;


BEGIN 
select	coalesce(ie_tipo_intercambio,'X') 
into STRICT	ie_tipo_intercambio_w 
from	pls_requisicao 
where	nr_sequencia	= nr_seq_requisicao_p;
 
if (ie_tipo_intercambio_w	= 'E') then 
	-- Não é possível a requisição de intercâmbio oriunda de outra operadora. 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(352292, null);
elsif (ie_tipo_intercambio_w	= 'I') then 
	select	count(1) 
	into STRICT	qt_pedido_aut_w 
	from	ptu_pedido_autorizacao 
	where	nr_seq_requisicao	= nr_seq_requisicao_p;
	 
	select	count(1) 
	into STRICT	qt_pedido_compl_aut_w 
	from	ptu_pedido_autorizacao 
	where	nr_seq_requisicao	= nr_seq_requisicao_p;
	 
	if (qt_pedido_aut_w	> 0) or (qt_pedido_compl_aut_w	> 0)	then 
		select	count(1) 
		into STRICT	qt_resp_pedido_aut_w 
		from	ptu_resposta_autorizacao 
		where	nr_seq_requisicao	= nr_seq_requisicao_p;
		 
		if (qt_resp_pedido_aut_w	> 0) then 
			-- Não é possível liberar a requisição de intercâmbio que já possua resposta do pedido de autorização. 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(352293, null);
		end if;
	end if;
end if;
 
update	pls_requisicao_proc 
set	ie_status	= 'P', 
	qt_procedimento	= qt_solicitado, 
	dt_atualizacao	= clock_timestamp(), 
	nm_usuario	= nm_usuario_p 
where	nr_seq_requisicao = nr_seq_requisicao_p 
and	ie_status in ('N','G');
 
update	pls_requisicao_mat 
set	ie_status	= 'P', 
	qt_material	= qt_solicitado, 
	dt_atualizacao	= clock_timestamp(), 
	nm_usuario	= nm_usuario_p 
where	nr_seq_requisicao = nr_seq_requisicao_p 
and	ie_status in ('N','G');
 
update	pls_requisicao 
set	ie_estagio	= 2, 
	dt_atualizacao	= clock_timestamp(), 
	nm_usuario	= nm_usuario_p 
where	nr_sequencia	= nr_seq_requisicao_p;
 
CALL pls_gerar_hist_req_web(nr_seq_requisicao_p, 'L', 'O usuário '||nm_usuario_p||' liberou manualmente a requisição.', nm_usuario_p);
	 
select	nr_seq_segurado, 
	dt_requisicao, 
	ie_tipo_guia, 
	ie_tipo_processo 
into STRICT	nr_seq_segurado_w, 
	dt_requisicao_w, 
	ie_tipo_guia_w, 
	ie_tipo_processo_w 
from	pls_requisicao 
where	nr_sequencia = nr_seq_requisicao_p;
 
 
CALL pls_gerar_tratamento_benef(	nr_seq_requisicao_p, 
				'R', 
				null, 
				nm_usuario_p);
 
CALL pls_gerar_solic_entreg_mat_med(	nr_seq_requisicao_p, 
				nm_usuario_p);
 
CALL pls_gerar_validade_senha_req(	nr_seq_requisicao_p, 
				nr_seq_segurado_w, 
				dt_requisicao_w, 
				ie_tipo_guia_w, 
				nm_usuario_p);
 
CALL pls_gerar_alerta_evento(3, 
			null, 
			nr_seq_requisicao_p, 
			null, 
			nm_usuario_p);
 
if (ie_tipo_processo_w <> 'P') then 
	CALL pls_gerar_alerta_evento(8, 
				null, 
				nr_seq_requisicao_p, 
				null, 
				nm_usuario_p);
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_liberar_requisicao_manual ( nr_seq_requisicao_p bigint, ds_motivo_libercao_p text, nm_usuario_p text) FROM PUBLIC;

