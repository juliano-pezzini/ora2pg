-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_idade_tur_esp ( cd_agenda_p bigint, dt_agenda_p timestamp, qt_idade_p bigint, nm_usuario_p text, ds_erro_p INOUT text, ie_dt_fim_p text default null) AS $body$
DECLARE



qt_idade_min_w			bigint;
qt_idade_max_w			bigint;
ds_erro_w			varchar(255)	:= '';
ie_consiste_idademin_zero_w	varchar(1)	:= 'N';
ie_cons_idade_pac_zerada_w	varchar(1)	:= 'N';
dt_consist_w			timestamp;
ie_dia_semana_w		integer;


BEGIN
/* obter dia semana */

ie_dia_semana_w :=	obter_cod_dia_semana(dt_agenda_p);
	
ie_consiste_idademin_zero_w := obter_param_usuario(820, 392, Obter_Perfil_Ativo, nm_usuario_p, 0, ie_consiste_idademin_zero_w);
ie_cons_idade_pac_zerada_w := obter_param_usuario(820, 393, Obter_Perfil_Ativo, nm_usuario_p, 0, ie_cons_idade_pac_zerada_w);

dt_consist_w := pkg_date_utils.get_datetime(clock_timestamp(),dt_agenda_p);

if (coalesce(ie_dt_fim_p,'S') = 'S') then
	select	coalesce(max(qt_idade_min),0),
		coalesce(max(qt_idade_max),0)
	into STRICT	qt_idade_min_w,
		qt_idade_max_w
	from	agenda_horario_esp
	where	cd_agenda = cd_agenda_p
	and	pkg_date_utils.get_datetime(clock_timestamp(),hr_inicial) <= dt_consist_w
	and	pkg_date_utils.get_datetime(clock_timestamp(),hr_final) >= dt_consist_w
	and	((ie_dia_semana = ie_dia_semana_w) or ((ie_dia_semana = 9) and (ie_dia_Semana_w not in (7,1))) or (coalesce(ie_dia_semana::text, '') = ''))
	--and dt_agenda_p between pkg_date_utils.start_of(dt_agenda,'DAY') and pkg_date_utils.end_of(nvl(dt_agenda_fim,dt_agenda),'DAY')
	AND dt_agenda <= pkg_date_utils.end_of(dt_agenda_p, 'DAY')
	AND coalesce(dt_agenda_fim,dt_agenda) >= pkg_date_utils.start_of(dt_agenda_p, 'DAY');
else
	select	coalesce(max(qt_idade_min),0),
		coalesce(max(qt_idade_max),0)
	into STRICT	qt_idade_min_w,
		qt_idade_max_w
	from	agenda_horario_esp
	where	cd_agenda = cd_agenda_p
	and	pkg_date_utils.get_datetime(clock_timestamp(),hr_inicial) <= dt_consist_w
	and	pkg_date_utils.get_datetime(clock_timestamp(),hr_final) >= dt_consist_w
	and	dt_agenda between trunc(dt_agenda_p) and trunc(dt_agenda_p)+86399/86400;
end if;

if	((((qt_idade_min_w > 0) or (ie_consiste_idademin_zero_w = 'S' AND qt_idade_min_w = 0)) or (qt_idade_max_w > 0)) and
	((qt_idade_p > 0) or
	((qt_idade_p = 0) and (ie_cons_idade_pac_zerada_w = 'S') and (qt_idade_min_w > 0)))) and
	((qt_idade_min_w <> 0) or (qt_idade_max_w <> 0)) then
	begin

	if (qt_idade_min_w > qt_idade_p) then
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(277649,null);
	end if;		
	
	if (qt_idade_max_w < qt_idade_p) then
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(277651,null);
	end if;		

	end;
end if;	

ds_erro_p := ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_idade_tur_esp ( cd_agenda_p bigint, dt_agenda_p timestamp, qt_idade_p bigint, nm_usuario_p text, ds_erro_p INOUT text, ie_dt_fim_p text default null) FROM PUBLIC;

