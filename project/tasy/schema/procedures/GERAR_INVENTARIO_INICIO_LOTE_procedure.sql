-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_inventario_inicio_lote ( cd_estabelecimento_p bigint, cd_material_p bigint, dt_mesano_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE


ie_consignado_w	varchar(1);
cd_fornecedor_w	varchar(14);

cd_local_estoque_w	smallint;
nr_seq_lote_fornec_w	bigint;
qt_material_w		double precision;
cd_material_w	integer;

C01 CURSOR FOR
SELECT	a.cd_local_estoque,
	a.nr_seq_lote_fornec,
	a.qt_material,
	a.cd_fornecedor
from	w_contagem_inicial_lote a,
	local_estoque b
where	a.cd_local_estoque = b.cd_local_estoque
and	a.cd_material = cd_material_p
and	b.cd_estabelecimento = cd_estabelecimento_p;

C02 CURSOR FOR
SELECT	cd_material
from	material
where	cd_material_estoque = cd_material_p;


BEGIN
select	coalesce(ie_consignado, '0')
into STRICT	ie_consignado_w
from	material
where	cd_material = cd_material_p;

delete	FROM saldo_estoque_lote
where	cd_material = cd_material_p
and	cd_estabelecimento = cd_estabelecimento_p
and	dt_mesano_referencia >= dt_mesano_referencia_p;

delete	FROM fornecedor_mat_consig_lote
where	cd_material = cd_material_p
and	cd_estabelecimento = cd_estabelecimento_p
and	dt_mesano_referencia >= dt_mesano_referencia_p;

open C01;
loop
fetch C01 into
	cd_local_estoque_w,
	nr_seq_lote_fornec_w,
	qt_material_w,
	cd_fornecedor_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (ie_consignado_w = '1') or (ie_consignado_w = '2') and (cd_fornecedor_w IS NOT NULL AND cd_fornecedor_w::text <> '') then
		begin

		insert into fornecedor_mat_consig_lote(
			cd_estabelecimento,
			cd_local_estoque,
			cd_fornecedor,
			cd_material,
			dt_mesano_referencia,
			nr_seq_lote,
			qt_estoque,
			dt_atualizacao,
			nm_usuario)
		values (	cd_estabelecimento_p,
			cd_local_estoque_w,
			cd_fornecedor_w,
			cd_material_p,
			dt_mesano_referencia_p,
			nr_seq_lote_fornec_w,
			qt_material_w,
			clock_timestamp(),
			nm_usuario_p);
		end;
	else
		insert into saldo_estoque_lote(
			cd_estabelecimento,
			cd_local_estoque,
			cd_material,
			dt_mesano_referencia,
			nr_seq_lote,
			qt_estoque,
			dt_atualizacao,
			nm_usuario)
		values (cd_estabelecimento_p,
			cd_local_estoque_w,
			cd_material_p,
			dt_mesano_referencia_p,
			nr_seq_lote_fornec_w,
			qt_material_w,
			clock_timestamp(),
			nm_usuario_p);
	end if;
	end;
end loop;
close C01;

delete	FROM w_contagem_inicial_lote a
where	a.cd_material = cd_material_p
and	exists (SELECT	1
		from	local_estoque x
		where	x.cd_local_estoque = a.cd_local_estoque
		and	x.cd_estabelecimento = cd_estabelecimento_p);

open C02;
loop
fetch C02 into
	cd_material_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	update 	material_estab a
	set	a.ie_estoque_lote = 'S'
	where	a.cd_estabelecimento = cd_estabelecimento_p
	and	a.cd_material = cd_material_w;

	CALL sup_gravar_historico_material(cd_estabelecimento_p,
		cd_material_w,
		wheb_mensagem_pck.get_Texto(313205), /*'In√≠cio controle de saldo estoque lote.',*/
		wheb_mensagem_pck.get_Texto(313206), /*'Gerado ajuste inicial do lote do material.',*/
		'S',
		nm_usuario_p);
	end;
end loop;
close C02;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_inventario_inicio_lote ( cd_estabelecimento_p bigint, cd_material_p bigint, dt_mesano_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

