-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE insert_material_mims_mapping (cd_imp_material_p imp_material.cd_material%type, cd_material_p material.cd_material%type, nm_usuario_p text) AS $body$
DECLARE

	imp_mat_cd_sistema_ant_w	imp_material.cd_sistema_ant%type;
	imp_prodcode_p	packdat.prodcode%type;
	imp_formcode_p	packdat.formcode%type;
	imp_packcode_p	packdat.packcode%type;
	nr_count_w			bigint;
	
	c01 CURSOR(p_prodcode bigint, p_formcode bigint, p_packcode bigint) FOR
	SELECT * FROM (
	SELECT	g.prodcode,
			g.formcode,
			min(g.packcode) packcode,
			c.product product,
			--d.brand product,
			d.form,
			g.active || ' ' || g.active_units misc,
			g.misc miscpack,
			g.active,
			g.active_units,
			g.per_volume,
			g.per_vol_units,
			g.unit_volume,
			g.unit_vol_units,
			g.units_per_pack,
			--g.pbs_code,
			--g.pbs,
			c.subsection
	FROM   	proddat c,
			formdat d,
			packdat g
	WHERE  	c.prodcode = d.prodcode
	AND 	d.prodcode = g.prodcode
	AND 	d.formcode = g.formcode
	AND 	coalesce(c.deleted::text, '') = ''  --DO  NOT IMPORT DELETED
	AND 	g.prodcode = p_prodcode AND g.formcode = p_formcode AND g.packcode = p_packcode
	GROUP  	BY	g.prodcode,
				g.formcode,
				c.product,
				--d.brand,
				g.active,
				g.active_units,
				d.form,
				g.misc,
				g.per_volume,
				g.per_vol_units,
				g.unit_volume,
				g.unit_vol_units,
				g.units_per_pack,
				--g.pbs_code,
				--g.pbs,
				c.subsection
	ORDER  	BY prodcode) alias3 LIMIT 1;

BEGIN
	select count(1) 
	into STRICT nr_count_w 
	from MATERIAL_MIMS_MAPPING where cd_material = cd_material_p;
		
	if (nr_count_w = 0) then
	
		select cd_sistema_ant into STRICT imp_mat_cd_sistema_ant_w from imp_material a  where  a.cd_material = cd_imp_material_p;
		
		SELECT * FROM MIMS_GET_PROD_FORM_PACK_CODES(imp_mat_cd_sistema_ant_w, imp_prodcode_p, imp_formcode_p, imp_packcode_p) INTO STRICT imp_prodcode_p, imp_formcode_p, imp_packcode_p;
		
		FOR r01 in c01(imp_prodcode_p, imp_formcode_p, imp_packcode_p) LOOP
		
			INSERT INTO material_mims_mapping(
					nr_sequencia,
					cd_material,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					prodcode,
					formcode,
					product,
					active,
					active_units,
					form,
					misc,
					per_volume,
					ie_situacao,
					per_vol_units,
					unit_volume,
					unit_vol_units,
					units_per_pack,
					subsection,
					miscpack
			) VALUES (
					nextval('material_mims_mapping_seq'),
					cd_material_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					r01.prodcode,
					r01.formcode,
					r01.product,
					r01.active,
					r01.active_units,
					r01.form,
					r01.misc,
					r01.per_volume,
					'A',
					r01.per_vol_units,
					r01.unit_volume,
					r01.unit_vol_units,
					r01.units_per_pack,
					r01.subsection,
					r01.miscpack
					
			);
		END LOOP;
	end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE insert_material_mims_mapping (cd_imp_material_p imp_material.cd_material%type, cd_material_p material.cd_material%type, nm_usuario_p text) FROM PUBLIC;

