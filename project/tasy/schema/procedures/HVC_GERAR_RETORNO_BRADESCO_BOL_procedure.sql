-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hvc_gerar_retorno_bradesco_bol ( nr_seq_cobr_escrit_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ie_tipo_carteira_w		varchar(255);
ds_titulo_w			varchar(255);
cd_cgc_desc_w			varchar(14);
cd_motivo_w			varchar(10);
cd_pessoa_fisica_desc_w		varchar(10);
dt_liquidacao_w			varchar(6);
vl_juros_w			double precision;
vl_desconto_w			double precision;
vl_abatimento_w			double precision;
vl_liquido_w			double precision;
vl_cobranca_w			double precision;
vl_tarifa_cobranca_w		double precision;
vl_saldo_titulo_w		double precision;
nr_titulo_w			bigint;
cd_ocorrencia_w			bigint;
nr_seq_ocorrencia_ret_w		bigint;
nr_seq_ocorr_motivo_w		bigint;
nr_seq_motivo_desc_w		bigint;
nr_seq_tit_rec_cobr_w		bigint;
cd_centro_custo_desc_w		integer;
cd_banco_cobr_w			integer;
cd_banco_w			smallint;

C01 CURSOR FOR 
	SELECT	trim(both substr(ds_string,111,10)), 
		(substr(ds_string,127,13))::numeric /100, 
		(substr(ds_string,161,13))::numeric /100, 
		(substr(ds_string,180,13))::numeric /100, 
		(substr(ds_string,206,13))::numeric /100, 
		(substr(ds_string,127,13))::numeric /100, 
		(substr(ds_string,193,13))::numeric /100, 
		substr(ds_string,296,6), 
		substr(ds_string,109,2) 
	from	w_retorno_banco 
	where	nr_seq_cobr_escrit	= nr_seq_cobr_escrit_p 
	and	substr(ds_string,1,1)	= '1';


BEGIN 
select	(substr(ds_string,77,3))::numeric  
into STRICT	cd_banco_w 
from	w_retorno_banco 
where	nr_seq_cobr_escrit	= nr_seq_cobr_escrit_p 
and	substr(ds_string,1,1)	= '0';
 
select	max(a.cd_banco) 
into STRICT	cd_banco_cobr_w 
from	cobranca_escritural a 
where	a.nr_sequencia	= nr_seq_cobr_escrit_p;
 
if (cd_banco_w <> cd_banco_cobr_w) then 
	/*r.aise_application_error(-20011,	'o banco do arquivo é diferente do banco da cobrança no sistema!' || chr(10) || chr(13) || 
					'posição do código do banco no arquivo: 77 - 79');*/
 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(267405);				
end if;
 
open C01;
loop 
fetch C01 into	 
	ds_titulo_w, 
	vl_cobranca_w, 
	vl_juros_w, 
	vl_desconto_w, 
	vl_abatimento_w, 
	vl_liquido_w, 
	vl_tarifa_cobranca_w, 
	dt_liquidacao_w, 
	cd_ocorrencia_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	select	max(nr_titulo), 
		coalesce(max(vl_saldo_titulo),0) 
	into STRICT	nr_titulo_w, 
		vl_saldo_titulo_w 
	from	titulo_receber 
	where	nr_titulo	= somente_numero(ds_titulo_w);
 
	/* se encontrou o título importa, senão grava no log */
 
	---20011,ds_titulo_w||'#@#@'); 
	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then 
		ie_tipo_carteira_w	:= obter_tipo_carteira_regra(nr_titulo_w);
 
		update	titulo_receber 
		set	ie_tipo_carteira	= ie_tipo_carteira_w 
		where	nr_titulo		= nr_titulo_w 
		and	coalesce(ie_tipo_carteira::text, '') = '';
 
		select 	coalesce(to_char(max(a.nr_sequencia)),0) 
		into STRICT	nr_seq_ocorrencia_ret_w 
		from	banco_ocorr_escrit_ret a 
		where	a.cd_banco 			= 237 
		and	a.cd_ocorrencia 		= cd_ocorrencia_w 
		and	coalesce(a.ie_forma_cobranca,1)	= 1;
 
		select	max(a.cd_centro_custo), 
			max(a.nr_seq_motivo_desc), 
			max(a.cd_pessoa_fisica), 
			max(a.cd_cgc) 
		into STRICT	cd_centro_custo_desc_w, 
			nr_seq_motivo_desc_w, 
			cd_pessoa_fisica_desc_w, 
			cd_cgc_desc_w 
		from	titulo_receber_liq_desc a 
		where	a.nr_titulo	= nr_titulo_w 
		and	coalesce(a.nr_bordero::text, '') = '' 
		and	coalesce(a.nr_seq_liq::text, '') = '';
 
		select	nextval('titulo_receber_cobr_seq') 
		into STRICT	nr_seq_tit_rec_cobr_w 
		;
 
		insert into titulo_receber_cobr(nr_sequencia, 
			nr_titulo, 
			cd_banco, 
			vl_cobranca, 
			vl_desconto, 
			vl_acrescimo, 
			vl_despesa_bancaria, 
			vl_liquidacao, 
			vl_juros, 
			dt_liquidacao, 
			dt_atualizacao, 
			nm_usuario, 
			nr_seq_cobranca, 
			nr_seq_ocorrencia_ret, 
			vl_saldo_inclusao, 
			vl_multa, 
			nr_seq_motivo_desc, 
			cd_centro_custo_desc) 
		values (nr_seq_tit_rec_cobr_w, 
			nr_titulo_w, 
			237, 
			coalesce(vl_cobranca_w,0), 
			coalesce(vl_desconto_w,0) + coalesce(vl_abatimento_w,0), 
			0, 
			coalesce(vl_tarifa_cobranca_w,0), 
			coalesce(vl_liquido_w,0), 
			coalesce(vl_juros_w,0), 
			coalesce(trim(both dt_liquidacao_w),clock_timestamp()), 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_cobr_escrit_p, 
			nr_seq_ocorrencia_ret_w, 
			coalesce(vl_saldo_titulo_w,0), 
			0, 
			nr_seq_motivo_desc_w, 
			cd_centro_custo_desc_w);
		 
		insert	into titulo_rec_cobr_desc(cd_cgc, 
			cd_pessoa_fisica, 
			dt_atualizacao, 
			nm_usuario, 
			nr_seq_tit_rec_cobr, 
			nr_sequencia) 
		values (cd_cgc_desc_w, 
			cd_pessoa_fisica_desc_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_tit_rec_cobr_w, 
			nextval('titulo_rec_cobr_desc_seq'));
	else 
		/*insert into logxxx_tasy 
			(nm_usuario, 
			dt_atualizacao, 
			cd_log, 
			ds_log) 
		values	(nm_usuario_p, 
			sysdate, 
			55760, 
			'não foi importado o título ' || ds_titulo_w || ', pois não foi encontrado no tasy');*/
 
			 
		insert into cobranca_escrit_log(nr_sequencia, 
			nm_usuario, 
			dt_atualizacao, 
			nm_usuario_nrec, 
			dt_atualizacao_nrec, 
			nr_seq_cobranca, 
			ds_log) 
		values (nextval('cobranca_escrit_log_seq'), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nr_seq_cobr_escrit_p, 
			'Não foi importado o título ' || ds_titulo_w || ', pois não foi encontrado no Tasy');
	end if;
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hvc_gerar_retorno_bradesco_bol ( nr_seq_cobr_escrit_p bigint, nm_usuario_p text) FROM PUBLIC;

