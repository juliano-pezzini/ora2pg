-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ai_agenda_int_before_post ( qt_peso_p bigint, qt_altura_cm_p bigint, cd_pessoa_fisica_p text, cd_pessoa_peso_p text, dt_nascimento_p timestamp, dt_validade_carteira_p timestamp, ie_bloquear_cod_usu_inco_p text, cd_usuario_convenio_p text, ie_consiste_digitos_p text, cd_convenio_p bigint, cd_categoria_p text, ie_tipo_atendimento_p bigint, ie_exige_carteira_conv_p text, cd_plano_p text, cd_empresa_p bigint, ie_modo_edicao_novo_p text, nr_seq_cobertura_p bigint, nr_doc_convenio_p text, ie_acao_alt_convenio_p text, cd_convenio_ant_p bigint, nr_seq_classificacao_p bigint, ds_mensagem_p INOUT text, ie_mostra_mensagem_p INOUT text, ds_erro_abort_p INOUT text, ds_campo_focus_p INOUT text, ie_pac_obito_p INOUT text, ds_consist_regra_atend_p INOUT text, cd_estabelecimento_p bigint, nr_seq_regra_atend_lib_p INOUT bigint, nm_usuario_p text, nr_sequencia_p bigint default null, nr_seq_status_p bigint default null) AS $body$
DECLARE

		
ds_erro_w				varchar(255);
ie_usuario_categoria_w			varchar(2);
ie_regra_bloqueio_w			varchar(1);
ds_observacao_w				varchar(255);
ds_mensagem_w				varchar(255);
ie_mostra_mensagem_w			varchar(1);
ie_convenio_estabelecimento_w		varchar(1);
cd_categoria_w				varchar(255);
ds_mensagem_lib_setor_w			varchar(255);
ie_validade_w				varchar(255);
ie_bloqueia_atendimento_w		varchar(2);
ie_cons_lib_atend_W			varchar(1);
ie_alerta_usuario_w			varchar(1);
ie_exige_empresa_agi_w			varchar(5);
ie_consistir_carteirinha_w		varchar(1);
ie_exige_validade_conv_w		varchar(1);
ie_exige_plano_w			varchar(1);
ie_plano_w				varchar(1);
ie_cons_pac_obito_w			varchar(1);
ie_consist_bloq_conv_atend_w		varchar(5);
ds_erro_consist_regra_atend_w		varchar(255);
ie_consiste_digito_w			boolean;
ds_rotina_digito_w			varchar(50);
ie_param265_w					varchar(1);
ie_exige_cobertura_w			varchar(1);
nr_seq_regra_w				bigint;
ie_validade_carteira_w			varchar(1);

ie_regra_agenda_classif_w		varchar(1);
cd_estabelecimento_item_w		agenda.cd_estabelecimento%type;
status_agendamento_w			agenda_integrada_status.ie_status_tasy%type;
nr_seq_agenda_cons_w			agenda_consulta.nr_sequencia%type;
dt_referencia_w					agenda_consulta.dt_agenda%type;
cd_agenda_w						agenda_consulta.cd_agenda%type;
cd_especialidade_w				agenda_consulta.cd_especialidade%type;
ie_origem_proced_w				agenda_consulta.ie_origem_proced%type;
nr_seq_proc_interno_w			agenda_consulta.nr_seq_proc_interno%type;
ie_classif_agenda_w				agenda_consulta.ie_classif_agenda%type;
ie_consistencia_w				varchar(255)	:= '';
ie_agenda_w						varchar(1) 	:= 'S';


C01 CURSOR FOR
	SELECT	nr_seq_agenda_cons
	from	agenda_integrada_item
	where	nr_seq_agenda_int = nr_sequencia_p
	and		ie_tipo_agendamento = 'C'
	and		(nr_seq_agenda_cons IS NOT NULL AND nr_seq_agenda_cons::text <> '')
	and 	coalesce(nr_seq_proc_interno::text, '') = '';


BEGIN

select	coalesce(max(ie_data_val_vencida),'N')
into STRICT	ie_validade_carteira_w
from	parametro_agenda_integrada
where	cd_estabelecimento = cd_estabelecimento_p;

if (ie_validade_carteira_w <> 'N') and (trunc(dt_validade_carteira_p) < trunc(clock_timestamp())) then
	ds_erro_abort_p := wheb_mensagem_pck.get_texto(1034818, null); -- A carteira do beneficiario esta vencida
	goto final;
end if;

ie_cons_pac_obito_w := obter_param_usuario(869, 319, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_cons_pac_obito_w);
if (ie_cons_pac_obito_w = 'S') then
	ie_pac_obito_p	:= obter_se_paciente_obito(cd_pessoa_fisica_p);
end if;

select	coalesce(max(ie_exige_empresa_agi),'N') ie_exige_empresa_agi
into STRICT	ie_exige_empresa_agi_w
from	convenio
where	cd_convenio = cd_convenio_p;

ie_param265_w := obter_param_usuario(869, 265, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_param265_w);
select 	coalesce(max(ie_exige_cobertura),'N')
into STRICT	ie_exige_cobertura_w
from 	convenio_estabelecimento
where 	cd_convenio = cd_convenio_p
and 	cd_estabelecimento = cd_estabelecimento_p;
if (ie_param265_w = 'S') and (coalesce(nr_seq_cobertura_p,0) = 0) and (ie_exige_cobertura_w = 'S') then
	ds_erro_abort_p := wheb_mensagem_pck.get_texto(324966, null); -- A cobertura deve ser informada!
	goto final;
end if;

if (coalesce(cd_empresa_p,0) = 0 and
	'S' = ie_exige_empresa_agi_w) then
	ds_erro_abort_p := wheb_mensagem_pck.get_texto(306996, null); -- O convenio exige a informacao da empresa!
	goto final;
end if;

ds_erro_w := ageint_consistir_imc(qt_peso_p, qt_altura_cm_p, nm_usuario_p, cd_estabelecimento_p, ds_erro_w);
if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
	begin		
	ds_erro_abort_p := ds_erro_w;
	goto final;		
	end;
end if;

ds_erro_w := ageint_consistir_idade(cd_pessoa_peso_p, dt_nascimento_p, nm_usuario_p, cd_estabelecimento_p, ds_erro_w);
if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
	begin
	ds_erro_abort_p := ds_erro_w;
	goto final;		
	end;
end if;

ie_alerta_usuario_w := obter_param_usuario(869, 207, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_alerta_usuario_w);
ie_consistir_carteirinha_w := obter_param_usuario(869, 280, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consistir_carteirinha_w);
	
if (ie_consistir_carteirinha_w = 'S') then
	if (ie_alerta_usuario_w = 'S') then
		SELECT * FROM consiste_usuario_categoria(
			cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, ie_tipo_atendimento_p, cd_usuario_convenio_p, ie_usuario_categoria_w, ie_regra_bloqueio_w, ds_observacao_w, null, nr_seq_regra_w) INTO STRICT ie_usuario_categoria_w, ie_regra_bloqueio_w, ds_observacao_w, nr_seq_regra_w;
			
		if (ie_usuario_categoria_w <> 'S') then
			begin
			if (ie_usuario_categoria_w = 'N') then
				begin
				ds_mensagem_w := obter_texto_tasy(77251, wheb_usuario_pck.get_nr_seq_idioma);
				end;
			end if;
			if (ie_usuario_categoria_w = 'C') then
				begin
				ds_mensagem_w := obter_texto_tasy(77252, wheb_usuario_pck.get_nr_seq_idioma);
				end;
			end if;
			if (ie_regra_bloqueio_w = 'B') then
				ds_erro_abort_p := ds_mensagem_w;
				goto final;			
			else
				ie_mostra_mensagem_w := 'S';
			end if;
			end;
		end if;
	end if;
end if;	
	
if (ie_exige_carteira_conv_p = 'C') then
	begin
	select	obter_valor_conv_estab(cd_convenio, obter_estabelecimento_ativo, 'ie_exige_carteira_atend')
	into STRICT	ie_convenio_estabelecimento_w
	from	convenio
	where	cd_convenio = cd_convenio_p;
	end;
end if;

if	(((ie_exige_carteira_conv_p = 'S') or (ie_convenio_estabelecimento_w = 'S')) and (coalesce(cd_usuario_convenio_p::text, '') = '')) then
	begin
		ds_erro_abort_p := substr(obter_texto_tasy(77253, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		goto final;			
	end;
end if;

ie_exige_validade_conv_w := obter_param_usuario(869, 273, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_exige_validade_conv_w);
if (ie_exige_validade_conv_w = 'S') and (coalesce(dt_validade_carteira_p::text, '') = '') then
	begin
	select	obter_valor_conv_estab(cd_convenio, obter_estabelecimento_ativo, 'IE_EXIGE_VALIDADE_ATEND')
	into STRICT	ie_validade_w
	from	convenio
	where	cd_convenio = cd_convenio_p;
	end;

	if (ie_validade_w = 'S') then
		ds_campo_focus_p := 'DT_VALIDADE_CARTEIRA';
		ds_erro_abort_p := substr(obter_texto_tasy(205191, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		return;
	end if;
end if;

ie_exige_plano_w := obter_param_usuario(869, 274, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_exige_plano_w);
if (ie_exige_plano_w = 'S') and (coalesce(cd_plano_p::text, '') = '') then
	begin
	select	obter_valor_conv_estab(cd_convenio, obter_estabelecimento_ativo, 'IE_EXIGE_PLANO')
	into STRICT	ie_plano_w
	from	convenio
	where	cd_convenio = cd_convenio_p;
	end;

	if (ie_plano_w = 'S') then
		ds_campo_focus_p := 'CD_PLANO';
		ds_erro_abort_p := substr(obter_texto_tasy(205192, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		return;
	end if;
end if;

ie_consist_bloq_conv_atend_w := obter_param_usuario(869, 146, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consist_bloq_conv_atend_w);

if (cd_convenio_p IS NOT NULL AND cd_convenio_p::text <> '') and
	((ie_tipo_atendimento_p IS NOT NULL AND ie_tipo_atendimento_p::text <> '') or (nr_seq_classificacao_p IS NOT NULL AND nr_seq_classificacao_p::text <> '')) and ('N' <> ie_consist_bloq_conv_atend_w) then
	
	SELECT * FROM ageint_consiste_regra_atend(	cd_convenio_p, cd_categoria_p, cd_plano_p, ie_tipo_atendimento_p, cd_estabelecimento_p, ds_consist_regra_atend_p, nr_seq_regra_atend_lib_p, nm_usuario_p, ie_consist_bloq_conv_atend_w, nr_seq_classificacao_p
					) INTO STRICT ds_consist_regra_atend_p, nr_seq_regra_atend_lib_p;		
end if;

if (cd_empresa_p IS NOT NULL AND cd_empresa_p::text <> '') then
	begin
	ds_erro_w := consiste_empresa_bloqueio(cd_empresa_p, cd_convenio_p, cd_categoria_p, ds_erro_w);
	if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
		ds_erro_abort_p := ds_erro_w;
		goto final;			
	end if;
	end;
end if;

ie_cons_lib_atend_W := obter_param_usuario(869, 213, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_cons_lib_atend_W);
if (ie_modo_edicao_novo_p = 'S') and (ie_cons_lib_atend_W = 'S') then
	begin
	if (cd_categoria_p IS NOT NULL AND cd_categoria_p::text <> '') then
		cd_categoria_w := cd_categoria_p;
	else
		cd_categoria_w := '0';
	end if;
	SELECT * FROM obter_se_lib_setor_conv(
			cd_estabelecimento_p, cd_convenio_p, cd_categoria_w, coalesce(ie_tipo_atendimento_p, 0), 0, cd_plano_p, coalesce(nr_seq_classificacao_p, 0), ds_mensagem_lib_setor_w, ie_bloqueia_atendimento_w, null, cd_empresa_p, null, nr_seq_cobertura_p, null, null, null, obter_idade_pf(cd_pessoa_fisica_p, clock_timestamp(), 'A'), null, null, null, clock_timestamp(), cd_pessoa_fisica_p) INTO STRICT ds_mensagem_lib_setor_w, ie_bloqueia_atendimento_w;
			
	if (ie_bloqueia_atendimento_w = 'B') then
		begin
		if (coalesce(ds_mensagem_lib_setor_w::text, '') = '') or (ds_mensagem_lib_setor_w = '') then
			begin
			ds_erro_abort_p := substr(obter_texto_tasy(77255, wheb_usuario_pck.get_nr_seq_idioma),1,255);
			goto final;				
			end;
		else
			ds_erro_abort_p := ds_mensagem_lib_setor_w;
			goto final;				
		end if;
		end;
	/*elsif 	(ie_bloqueia_atendimento_w = 'T') then
		begin
		if	(ds_mensagem_lib_setor_w is null) or
			(ds_mensagem_lib_setor_w = '') then
			ds_erro_abort_p := substr(obter_texto_tasy (77255, wheb_usuario_pck.get_nr_seq_idioma),1,255);
			goto final;				
		else
			ds_erro_abort_p := ds_mensagem_lib_setor_w;
			goto final;				
		end if;
		end;            OS 849550*/
	elsif (ie_bloqueia_atendimento_w = 'G') and (coalesce(nr_doc_convenio_p::text, '') = '') then
		begin
		if (coalesce(ds_mensagem_lib_setor_w::text, '') = '') or (ds_mensagem_lib_setor_w = '') then
			begin
			ds_erro_abort_p := substr(obter_texto_tasy(77255, wheb_usuario_pck.get_nr_seq_idioma),1,255);
			goto final;				
			end;
		else
			ds_erro_abort_p := ds_mensagem_lib_setor_w;
			goto final;				
		end if;
		end;
	/*elsif 	(ie_bloqueia_atendimento_w = 'S') and
		(nr_doc_convenio_p is null) then
		begin
		if	(ds_mensagem_lib_setor_w is null) or
			(ds_mensagem_lib_setor_w = '') then
			begin
			ds_erro_abort_p := substr(obter_texto_tasy (77255, wheb_usuario_pck.get_nr_seq_idioma),1,255);
			goto final;				
			end;
		else
			ds_erro_abort_p := ds_mensagem_lib_setor_w;
			goto final;				
		end if;
		end;                            OS 849550*/
	elsif (ie_bloqueia_atendimento_w = 'M') then
		begin
		ie_mostra_mensagem_w := 'S';
		ds_mensagem_w := ds_mensagem_lib_setor_w;
		end;
	end if;
	
	if (ie_acao_alt_convenio_p = 'B') and (cd_convenio_p IS NOT NULL AND cd_convenio_p::text <> '') and (cd_convenio_ant_p IS NOT NULL AND cd_convenio_ant_p::text <> '') and (cd_convenio_ant_p <> cd_convenio_p) then
		begin
		ds_erro_abort_p := substr(obter_texto_tasy(77259, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		goto final;
		end;
	end if;	
	end;
end if;

if (nr_seq_status_p > 0) then
	select ie_status_tasy
	into STRICT status_agendamento_w
	from agenda_integrada_status
	where nr_sequencia = nr_seq_status_p;
end if;

ie_regra_agenda_classif_w := obter_param_usuario(869, 289, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_regra_agenda_classif_w);

if (nr_sequencia_p > 0) and (status_agendamento_w = 'AG') and (ie_regra_agenda_classif_w = 'S' or
	 ie_regra_agenda_classif_w = 'A') then

	OPEN C01;
		LOOP
		FETCH C01 INTO
			nr_seq_agenda_cons_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			BEGIN
			
			select	a.cd_estabelecimento
			into STRICT	cd_estabelecimento_item_w
			from	agenda a,
					agenda_consulta b
			where	a.cd_agenda = b.cd_agenda
			and		b.nr_sequencia = nr_seq_agenda_cons_w;

			select 	trunc(dt_agenda),
					cd_agenda,
					cd_especialidade,
					ie_origem_proced,
					nr_seq_proc_interno,
					ie_classif_agenda
			into STRICT	dt_referencia_w,
					cd_agenda_w,
					cd_especialidade_w,
					ie_origem_proced_w,
					nr_seq_proc_interno_w,
					ie_classif_agenda_w
			from agenda_consulta
			where nr_sequencia = nr_seq_agenda_cons_w;

			SELECT * FROM consistir_classif_agecon(	cd_estabelecimento_item_w, cd_pessoa_fisica_p, dt_referencia_w, cd_agenda_w, cd_convenio_p, cd_especialidade_w, ie_origem_proced_w, nr_seq_proc_interno_w, ie_classif_agenda_w, nr_seq_agenda_cons_w, ie_consistencia_w, ie_agenda_w) INTO STRICT ie_consistencia_w, ie_agenda_w;

			if (ie_agenda_w = 'N') then
				ds_erro_abort_p	:= ie_consistencia_w;
				return; -- Abort
			end if;

			END;
		END LOOP;
	CLOSE C01;

end if;
	
<<final>>
	
ds_mensagem_p := ds_mensagem_w;
ie_mostra_mensagem_p := ie_mostra_mensagem_w;
	
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ai_agenda_int_before_post ( qt_peso_p bigint, qt_altura_cm_p bigint, cd_pessoa_fisica_p text, cd_pessoa_peso_p text, dt_nascimento_p timestamp, dt_validade_carteira_p timestamp, ie_bloquear_cod_usu_inco_p text, cd_usuario_convenio_p text, ie_consiste_digitos_p text, cd_convenio_p bigint, cd_categoria_p text, ie_tipo_atendimento_p bigint, ie_exige_carteira_conv_p text, cd_plano_p text, cd_empresa_p bigint, ie_modo_edicao_novo_p text, nr_seq_cobertura_p bigint, nr_doc_convenio_p text, ie_acao_alt_convenio_p text, cd_convenio_ant_p bigint, nr_seq_classificacao_p bigint, ds_mensagem_p INOUT text, ie_mostra_mensagem_p INOUT text, ds_erro_abort_p INOUT text, ds_campo_focus_p INOUT text, ie_pac_obito_p INOUT text, ds_consist_regra_atend_p INOUT text, cd_estabelecimento_p bigint, nr_seq_regra_atend_lib_p INOUT bigint, nm_usuario_p text, nr_sequencia_p bigint default null, nr_seq_status_p bigint default null) FROM PUBLIC;

