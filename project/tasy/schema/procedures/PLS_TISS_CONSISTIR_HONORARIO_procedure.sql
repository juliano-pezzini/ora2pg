-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_tiss_consistir_honorario ( nr_sequencia_p bigint, ie_tipo_glosa_p text, ie_evento_p text, nr_seq_prestador_p bigint, nr_seq_ocorrencia_p bigint, ds_parametro_um_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_origem_proced_p bigint) AS $body$
DECLARE


/* IE_TIPO_GLOSA_P
	C - Conta
	CP - Conta procedimento
	CM - Conta material
	A - Autorização
	AP - Autorização procedimento
	AM - Autorização material
*/
cd_procedimento_w		bigint;
ie_origem_proced_w		integer;
qt_proc_w			smallint;
nr_auxiliares_w			bigint;
qt_part_w			integer;
ie_auxiliares_partic_w		varchar(1) := 'S';
ie_conta_honorario_duplic_w	varchar(1) := 'N';
nr_seq_conta_w			pls_conta.nr_sequencia%type;


BEGIN

if (ie_tipo_glosa_p	= 'C') then
	/* 2604 - Procedimento principal não requer equipe médica*/

	CALL pls_consistir_qtd_auxiliares(	nr_sequencia_p, ie_evento_p, cd_estabelecimento_p,
					nm_usuario_p	);
	ie_conta_honorario_duplic_w := pls_obter_se_honorario_duplic(nr_sequencia_p,ie_evento_p);
elsif (ie_tipo_glosa_p	= 'CP') then
	--ie_auxiliares_partic_w	:= pls_obter_se_qtd_auxiliares(nr_sequencia_p);
	begin
	select	coalesce(cd_procedimento,cd_procedimento_imp),
		coalesce(ie_origem_proced,ie_origem_proced_p),
		nr_auxiliares,
		nr_seq_conta
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		nr_auxiliares_w,
		nr_seq_conta_w
	from	pls_conta_proc
	where	nr_sequencia = nr_sequencia_p;
	exception
	when others then
		cd_procedimento_w := null;
		ie_origem_proced_w := null;
	end;

	select	count(1)
	into STRICT	qt_proc_w
	from	procedimento
	where	cd_procedimento	= cd_procedimento_w
	and	ie_origem_proced = ie_origem_proced_w;
end if;


/* 2601 - Codificação incorreta/inadequada do procedimento.*/

if (qt_proc_w = 0) and (ie_tipo_glosa_p = 'CP')then
	CALL pls_gravar_glosa_tiss('2601',
		null, ie_evento_p,
		nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, '', nm_usuario_p,
		cd_estabelecimento_p, nr_seq_conta_w);
end if;

/* 2699 - Outros*/

if (ie_conta_honorario_duplic_w = 'S') then
	CALL pls_gravar_glosa_tiss('2699',
		null, ie_evento_p,
		nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, 'Conta de honorário individual já apresentada', nm_usuario_p,
		cd_estabelecimento_p, nr_seq_conta_w);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tiss_consistir_honorario ( nr_sequencia_p bigint, ie_tipo_glosa_p text, ie_evento_p text, nr_seq_prestador_p bigint, nr_seq_ocorrencia_p bigint, ds_parametro_um_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_origem_proced_p bigint) FROM PUBLIC;

