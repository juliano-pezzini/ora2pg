-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE integrar_movimento_logisone ( nr_movimento_estoque_p movimento_estoque.nr_movimento_estoque%type, cd_material_p material.cd_material%type, cd_operacao_estoque_p regra_integr_movto_estoque.cd_operacao_estoque%type, cd_local_estoque_p regra_integr_movto_estoque.cd_local_estoque%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_documento_p movimento_estoque.nr_documento%type, nr_seq_lote_fornec_p movimento_estoque.nr_seq_lote_fornec%type, qt_estoque_p movimento_estoque.qt_estoque%type ) AS $body$
DECLARE


cd_grupo_material_w		regra_integr_movto_estoque.cd_grupo_material%type;
cd_subgrupo_material_w		regra_integr_movto_estoque.cd_subgrupo_material%type;
cd_classe_material_w		regra_integr_movto_estoque.cd_classe_material%type;
nr_seq_regra_w			regra_integr_movto_estoque.nr_sequencia%type;
ie_entrada_saida_w		operacao_estoque.ie_entrada_saida%type;
ds_retorno_integracao_w 	text;


BEGIN
if (cd_material_p IS NOT NULL AND cd_material_p::text <> '') then
	select	max(em.cd_grupo_material),
		max(em.cd_subgrupo_material),
		max(em.cd_classe_material)
	into STRICT	cd_grupo_material_w,
		cd_subgrupo_material_w,
		cd_classe_material_w
	from	estrutura_material_v em
	where	em.cd_material	= cd_material_p;

	select	max(ie_entrada_saida)
	into STRICT	ie_entrada_saida_w
	from    operacao_estoque
	where   cd_operacao_estoque = cd_operacao_estoque_p;

	-- Verificar se existe regra
	nr_seq_regra_w := obter_regra_int_mov_estoque( 'LGO', cd_operacao_estoque_p, cd_local_estoque_p, cd_grupo_material_w,
							cd_subgrupo_material_w, cd_classe_material_w, cd_material_p, ie_entrada_saida_w);

	if (coalesce(nr_seq_regra_w, 0) > 0) then
		-- Integracao material
		
		ds_retorno_integracao_w := bifrost.send_integration(nm_event => 'material.send',
		                                                    nm_javaclass => 'com.philips.tasy.integration.material.outbound.MaterialCallback',
		                                                    ds_arguments => to_char(cd_material_p),
		                                                    nm_user => nm_usuario_p);
		
		if (ds_retorno_integracao_w IS NOT NULL AND ds_retorno_integracao_w::text <> '') then
			-- Integracao movimento
			begin
			select  bifrost.send_integration(
				'stock_movement.send',
				'com.philips.tasy.integration.stock.outbound.DrugEntryCallback',
				'{"document":'||nr_movimento_estoque_p||', "userName":"'||nm_usuario_p||'", "event":"393",
				"establishment":'||coalesce(cd_estabelecimento_p, 0)||',
				"stockLocation":'||coalesce(cd_local_estoque_p, 0)||',
				"stockMovementDocument":'||coalesce(nr_documento_p, 0)||',
				"supplierBatch":'||coalesce(nr_seq_lote_fornec_p, 0)||',
				"stockQuantity":'||coalesce(qt_estoque_p, 0)||',
				"stockOperation":'||coalesce(cd_operacao_estoque_p, 0)||'}',
				nm_usuario_p)
			into STRICT	ds_retorno_integracao_w
			;
			exception
			when others then
				ds_retorno_integracao_w := null;
			end;
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE integrar_movimento_logisone ( nr_movimento_estoque_p movimento_estoque.nr_movimento_estoque%type, cd_material_p material.cd_material%type, cd_operacao_estoque_p regra_integr_movto_estoque.cd_operacao_estoque%type, cd_local_estoque_p regra_integr_movto_estoque.cd_local_estoque%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_documento_p movimento_estoque.nr_documento%type, nr_seq_lote_fornec_p movimento_estoque.nr_seq_lote_fornec%type, qt_estoque_p movimento_estoque.qt_estoque%type ) FROM PUBLIC;

