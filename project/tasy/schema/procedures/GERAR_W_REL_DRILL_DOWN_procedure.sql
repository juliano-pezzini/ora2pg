-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_rel_drill_down ( ie_classif_fluxo_p text, dt_inicial_p timestamp, dt_final_p timestamp, cd_conta_financ_p text, nm_usuario_p text) AS $body$
DECLARE


cd_cgc_ant_w    varchar(14) := '';
cd_cgc_w      varchar(14);
cd_conta_financ_cpa_w  parametro_fluxo_caixa.cd_conta_financ_cpa%type;
cd_conta_financ_cre_w  parametro_fluxo_caixa.cd_conta_financ_cre%type;
cd_conta_financ_w  bigint;
cd_conta_financ_JCR_w  bigint;
cd_conta_financ_MCR_w  bigint;
cd_conta_financ_DCR_w  bigint;
cd_conta_financ_JCP_w  bigint;
cd_conta_financ_MCP_w  bigint;
cd_conta_financ_DCP_w  bigint;
cd_convenio_w      bigint;
cd_empresa_w    smallint;
cd_estabelecimento_w  smallint;
cd_moeda_atual_w    integer;
cd_moeda_padrao_w    integer;
ie_integracao_w    varchar(2);
ie_insert_w    varchar(1) := 'S';
ie_entrada_saida_w    varchar(100);
ie_origem_titulo_w    varchar(10);
vl_titulo_w    double precision;
vl_titulo_ww    double precision;
controle    varchar(1) := 'N';

ds_conta_estrut_w  varchar(255);
cd_conta_apres_w  varchar(255);

ds_SQL_w    varchar(4000);
var_cur_w    integer;
var_exec_w    integer;
var_retorno_w    integer;
ie_adiant_receb_w  parametro_fluxo_caixa.ie_adiant_receb%type;
ie_classif_baixa_cp_w  parametro_fluxo_caixa.ie_classif_baixa_cp%type;
ie_fim_semana_passado_w  parametro_fluxo_caixa.ie_fim_semana_passado%type;
ie_data_tit_adiant_w  parametro_fluxo_caixa.ie_data_tit_adiant%type;
ie_oc_parcial_w    parametro_fluxo_caixa.ie_oc_parcial%type;
ie_convenio_receb_w parametro_fluxo_caixa.ie_convenio_receb%type;


C01 CURSOR FOR
SELECT  0 nr_ordem_compra,
  0 nr_titulo,
  b.vl_recebimento vl_titulo,
  0 vl_juros,
  0 vl_multa,
  0 vl_descontos,
  c.ds_convenio ds_pessoa,
  '' ie_tipo_titulo,
  '' ie_origem_titulo,
  -6 ie_union,
  substr(obter_nome_estabelecimento(b.cd_estabelecimento),1,255) ds_estabelecimento,
  '' nr_cheque,
  '' nr_autorizacao,
  k.cd_cgc cd_cgc,
  b.cd_convenio cd_convenio
from  convenio c,
     estabelecimento k,
  convenio_receb b
where 'RC'      = ie_integracao_w
and   'R'      = ie_classif_fluxo_p
and k.cd_estabelecimento = b.cd_estabelecimento
and b.cd_convenio = c.cd_convenio
and ie_convenio_receb_w = 'S'
and coalesce(b.dt_recebimento, b.DT_LIBERACAO) BETWEEN dt_inicial_p and fim_dia(dt_final_p)

union all

SELECT  0 nr_ordem_compra,
  0 nr_titulo,
  b.vl_conta vl_titulo,
  0 vl_juros,
  0 vl_multa,
  0 vl_descontos,
  OBTER_DESC_EXPRESSAO(296585) || ' ' || a.nr_protocolo || ' - ' || c.ds_convenio ds_pessoa,
  '' ie_tipo_titulo,
  '' ie_origem_titulo,
  -5 ie_union,
  substr(obter_nome_estabelecimento(a.cd_estabelecimento),1,80) ds_estabelecimento,
  '' nr_cheque,
  '' nr_autorizacao,
  '' cd_cgc,
  null
from  convenio c,
  conta_paciente b,
  protocolo_convenio a
where  a.nr_seq_protocolo    = b.nr_seq_protocolo
and  a.cd_convenio    = c.cd_convenio
and  a.ie_status_protocolo  = 1
and  PKG_DATE_UTILS.start_of(a.dt_vencimento,'dd',0)  between dt_inicial_p and fim_dia(dt_final_p)
and   a.cd_estabelecimento  = cd_estabelecimento_w
and  coalesce(b.ie_cancelamento::text, '') = ''
and  not exists (select  1
    from  titulo_receber x
    where  x.nr_seq_protocolo = a.nr_seq_protocolo
    or  x.nr_interno_conta = b.nr_interno_conta)
and  'R'      = ie_classif_fluxo_p
and  'PC'      = ie_integracao_w

union all

select  0 nr_ordem_compra,
  0 nr_titulo,
  obter_valor_fluxo_regra(cd_estabelecimento_w, nr_sequencia, coalesce(dt_inicial_p, dt_final_p), null, obter_empresa_estab(cd_estabelecimento)) vl_titulo,
  0 vl_juros,
  0 vl_multa,
  0 vl_descontos,
  substr(ds_titulo,1,60) ds_pessoa,
  '' ie_tipo_titulo,
  '' ie_origem_titulo,
  -4 ie_union,
  substr(obter_nome_estabelecimento(cd_estabelecimento),1,255) ds_estabelecimento,
  '' nr_cheque,
  '' nr_autorizacao,
  '' cd_cgc,
  null
from  regra_fluxo_caixa
where  cd_conta_financ    = cd_conta_financ_w
and  'RE'      = ie_integracao_w
and  cd_estabelecimento  = cd_estabelecimento_w
and  'R'      = ie_classif_fluxo_p
and  obter_valor_fluxo_regra(cd_estabelecimento_w, nr_sequencia, coalesce(dt_inicial_p, dt_final_p), null, obter_empresa_estab(cd_estabelecimento)) > 0

union all

select  0 nr_ordem_compra,
  0 nr_titulo,
  CASE WHEN b.vl_deposito=0 THEN b.vl_recebimento  ELSE b.vl_deposito END  vl_titulo,
  0 vl_juros,
  0 vl_multa,
  0 vl_descontos,
  c.ds_convenio ds_pessoa,
  '' ie_tipo_titulo,
  '' ie_origem_titulo,
  -3 ie_union,
  substr(obter_nome_estabelecimento(b.cd_estabelecimento),1,255) ds_estabelecimento,
  '' nr_cheque,
  '' nr_autorizacao,
  k.cd_cgc cd_cgc,
  b.cd_convenio cd_convenio
from  convenio c,
     estabelecimento k,
  convenio_receb b
where  'RC'      = ie_integracao_w
and  'P'      = ie_classif_fluxo_p
and k.cd_estabelecimento = b.cd_estabelecimento
and b.cd_convenio = c.cd_convenio
and ie_convenio_receb_w = 'S'
and coalesce(b.dt_recebimento, b.DT_LIBERACAO) BETWEEN dt_inicial_p and fim_dia(dt_final_p)

union all

select  0 nr_ordem_compra,
  0 nr_titulo,
  a.vl_parcela vl_titulo,
  0 vl_juros,
  0 vl_multa,
  0 vl_descontos,
  substr(obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc),1,255) ds_pessoa,
  '' ie_tipo_titulo,
  '' ie_origem_titulo,
  -2 ie_union,
  substr(obter_nome_estabelecimento(b.cd_estabelecimento),1,255) ds_estabelecimento,
  '' nr_cheque,
  b.nr_autorizacao,
  '' cd_cgc,
  null
from  parametro_fluxo_caixa c,
  movto_cartao_cr b,
  movto_cartao_cr_parcela a
where  c.cd_estabelecimento  = cd_estabelecimento_w
and  a.nr_seq_movto    = b.nr_sequencia
and  a.vl_saldo_liquido    > 0
and  (b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
and  coalesce(b.dt_cancelamento::text, '') = ''
and   b.cd_estabelecimento  = cd_estabelecimento_w
and  obter_conta_financ_cartao_cr(a.nr_seq_movto) = (cd_conta_financ_w)::numeric
and  PKG_DATE_UTILS.start_of(CASE WHEN c.ie_tratar_fim_semana='N' THEN a.dt_parcela  ELSE obter_proximo_dia_util(cd_estabelecimento_w,a.dt_parcela) END ,'dd',0) between dt_inicial_p and fim_dia(dt_final_p)
and  'CR'      = ie_integracao_w
and   'R'      = ie_classif_fluxo_p

union all

select  0 nr_ordem_compra,
  0 nr_titulo,
  a.vl_cheque vl_titulo,
  0 vl_juros,
  0 vl_multa,
  0 vl_descontos,
  substr(obter_nome_pf_pj(a.cd_pessoa_fisica,a.cd_cgc),1,255) ds_pessoa,
  '' ie_tipo_titulo,
  '' ie_origem_titulo,
  -1 ie_union,
  substr(obter_nome_estabelecimento(a.cd_estabelecimento),1,255) ds_estabelecimento,
  a.nr_cheque,
  '' nr_autorizacao,
  '' cd_cgc,
  null
FROM parametro_fluxo_caixa b, cheque_cr a
LEFT OUTER JOIN motivo_dev_cheque c ON (a.nr_seq_motivo_dev = c.nr_sequencia)
WHERE b.cd_estabelecimento       = cd_estabelecimento_w and obter_conta_financ_cheque_cr(a.nr_seq_cheque,obter_status_cheque(a.nr_seq_cheque)) = cd_conta_financ_w and coalesce(a.dt_compensacao::text, '') = '' and (obter_status_cheque(a.nr_seq_cheque)  in (1,3) or (obter_status_cheque(a.nr_seq_cheque)  = 5 and coalesce(c.ie_tipo_devolucao,'N') = 'B'))  and a.cd_estabelecimento       = cd_estabelecimento_w and PKG_DATE_UTILS.start_of(coalesce(a.dt_vencimento_atual,a.dt_vencimento),'dd',0) <> PKG_DATE_UTILS.start_of(a.dt_contabil,'dd',0) and (coalesce(a.dt_vencimento_atual,a.dt_vencimento) IS NOT NULL AND (coalesce(a.dt_vencimento_atual,a.dt_vencimento))::text <> '') and PKG_DATE_UTILS.start_of(CASE WHEN b.ie_tratar_fim_semana='N' THEN coalesce(a.dt_vencimento_atual,a.dt_vencimento)  ELSE obter_proximo_dia_util(cd_estabelecimento_w,coalesce(a.dt_vencimento_atual,a.dt_vencimento)) END ,'dd',0)    between dt_inicial_p and fim_dia(dt_final_p) and 'CR'      = ie_integracao_w and 'R'      = ie_classif_fluxo_p
 
union all

select  /*+ index (b TITRECE_I9) */  0 nr_ordem_compra,
  b.nr_titulo,
  CASE WHEN coalesce(a.vl_classificacao::text, '') = '' THEN b.vl_saldo_titulo  ELSE a.vl_classificacao * dividir_sem_round(b.vl_saldo_titulo,b.vl_titulo) END  vl_titulo,
  0 vl_juros,
  0 vl_multa,
  0 vl_descontos,
  substr(obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc),1,60) ds_pessoa,
  obter_valor_dominio(712,b.ie_tipo_titulo) ie_tipo_titulo,
  obter_valor_dominio(709,b.ie_origem_titulo) ie_origem_titulo,
  2 ie_union,
  substr(obter_nome_estabelecimento(b.cd_estabelecimento),1,255) ds_estabelecimento,
  '' nr_cheque,
  '' nr_autorizacao,
  '' cd_cgc,
  null
FROM titulo_receber b
LEFT OUTER JOIN titulo_receber_classif a ON (b.nr_titulo = a.nr_titulo)
WHERE coalesce(a.cd_conta_financ,cd_conta_financ_cre_w) = cd_conta_financ_w  and OBTER_VENC_TITULO(null,b.nr_titulo) between dt_inicial_p and fim_dia(dt_final_p) and 'CR'      = ie_integracao_w and b.ie_situacao    = '1' and b.cd_estabelecimento  = cd_estabelecimento_w and coalesce(b.dt_pagamento_previsto,b.dt_vencimento) between dt_inicial_p - 40 and fim_dia(dt_final_p) and 'R'      = ie_classif_fluxo_p
 
union all

select  distinct
  0 nr_ordem_compra,
  0 nr_titulo,
  a.vl_baixa vl_titulo,
  0 vl_juros,
  0 vl_multa,
  0 vl_descontos,
  OBTER_DESC_EXPRESSAO(515545) ds_pessoa,
  '' ie_tipo_titulo,
  '' ie_origem_titulo,
  15 ie_union,
  substr(obter_nome_estabelecimento(b.cd_estabelecimento),1,255) ds_estabelecimento,
  '' nr_cheque,
  b.nr_autorizacao,
  '' cd_cgc,
  null
from  movto_cartao_cr b,
  movto_cartao_cr_baixa a
where  b.cd_estabelecimento  = cd_estabelecimento_w
and  obter_conta_financ_cartao_cr(b.nr_sequencia) = (cd_conta_financ_w)::numeric 
and  a.dt_baixa    between dt_inicial_p and fim_dia(dt_final_p)
and  coalesce(b.dt_cancelamento::text, '') = ''
and  'CR'      = ie_integracao_w
and  'P'      = ie_classif_fluxo_p
and  b.nr_sequencia    = a.nr_seq_movto

union all

select  distinct
  nr_ordem_compra,
  nr_titulo,
  vl_titulo,
  vl_juros,
  vl_multa,
  vl_desconto vl_descontos,
  ds_pessoa,
  ie_tipo_titulo,
  ie_origem_titulo,
  ie_union,
  substr(obter_nome_estabelecimento(cd_estabelecimento),1,255) ds_estabelecimento,
  '' nr_cheque,
  '' nr_autorizacao,
  cd_cgc,
  null
from  (select  0 nr_ordem_compra,
  b.nr_titulo,
  sum(dividir_sem_round(coalesce(a.vl_classificacao, OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V')),(OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric )
  * (c.vl_recebido) /*  + c.vl_multa + c.vl_juros - c.vl_descontos Edgar 24/01/2007, no cr ja o vl recebido ja e descontado */
) vl_titulo,
  sum(dividir_sem_round(coalesce(a.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ),(OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric )
  * c.vl_juros) vl_juros,
  sum(dividir_sem_round(coalesce(a.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ),(OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric )
  *c.vl_multa) vl_multa,
  sum(dividir_sem_round(coalesce(a.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ),(OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric )
  *c.vl_descontos) vl_desconto,
  substr(obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc),1, 60) ds_pessoa,
  obter_valor_dominio(712,b.ie_tipo_titulo) ie_tipo_titulo,
  obter_valor_dominio(709,b.ie_origem_titulo) ie_origem_titulo,
  b.dt_vencimento dt_vencimento_tit,
  0 cd_conta_financ,
  '' ie_periodo,
  '' ie_classif_fluxo,
  8 ie_union,
  b.cd_estabelecimento,
  b.cd_cgc
FROM tipo_recebimento d, titulo_receber_liq c, titulo_receber b
LEFT OUTER JOIN titulo_receber_classif a ON (b.nr_titulo = a.nr_titulo)
WHERE coalesce(a.cd_conta_financ, cd_conta_financ_cre_w)  = cd_conta_financ_w  and c.nr_titulo                = b.nr_titulo and PKG_DATE_UTILS.start_of(c.dt_recebimento, 'dd', 0) between dt_inicial_p and fim_dia(dt_final_p) and ie_integracao_w             = 'CR' and b.cd_estabelecimento  = cd_estabelecimento_w and 'P'      = ie_classif_fluxo_p and coalesce(c.nr_seq_retorno::text, '') = '' and c.cd_tipo_recebimento  = d.cd_tipo_recebimento and d.ie_fluxo_passado    = 'S' and b.ie_situacao    not in ('3','5') and (ie_adiant_receb_w in ('A','TR') or coalesce(c.nr_adiantamento::text, '') = '') group by  b.nr_titulo,
  substr(obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc),1, 60),
  b.ie_tipo_titulo,
  b.ie_origem_titulo,
  b.dt_vencimento,
  b.cd_estabelecimento,
  b.cd_cgc) alias124

union all

select  distinct
  0 nr_ordem_compra,
  b.nr_titulo,
  sum(coalesce(a.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric )) vl_titulo,
  sum(c.vl_juros) vl_juros,
  sum(c.vl_multa) vl_multa,
  sum(c.vl_descontos) vl_descontos,
  substr(obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc),1, 60) ds_pessoa,
  obter_valor_dominio(712,b.ie_tipo_titulo) ie_tipo_titulo,
  obter_valor_dominio(709,b.ie_origem_titulo) ie_origem_titulo,
  14 ie_union,
  substr(obter_nome_estabelecimento(b.cd_estabelecimento),1,255) ds_estabelecimento,
  '' nr_cheque,
  '' nr_autorizacao,
  b.cd_cgc,
  null
FROM titulo_receber_liq c, titulo_receber b
LEFT OUTER JOIN titulo_receber_classif a ON (b.nr_titulo = a.nr_titulo)
WHERE c.nr_titulo      = b.nr_titulo and PKG_DATE_UTILS.start_of(c.dt_recebimento, 'dd', 0)  between dt_inicial_p and fim_dia(dt_final_p) and 'CR'      = ie_integracao_w and b.cd_estabelecimento  = cd_estabelecimento_w and 'P'      = ie_classif_fluxo_p and coalesce(c.nr_seq_retorno::text, '') = '' and (b.cd_cgc IS NOT NULL AND b.cd_cgc::text <> '') group by  b.nr_titulo,
  substr(obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc),1, 60),
  substr(obter_nome_estabelecimento(b.cd_estabelecimento),1,255),
  b.cd_cgc,
  b.ie_tipo_titulo,
  b.ie_origem_titulo,
  b.dt_vencimento,
  OBTER_EMPRESA_ESTAB(b.cd_estabelecimento),
  b.cd_estabelecimento,
  b.cd_cgc

union all

select  distinct
  0 nr_ordem_compra,
  0 nr_titulo,
  a.vl_cheque vl_titulo,
  0 vl_juros,
  0 vl_multa,
  0 vl_descontos,
  substr(obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc), 1,80) ds_pessoa,
  '' ie_tipo_titulo,
  '' ie_origem_titulo,
  16 ie_union,
  substr(obter_nome_estabelecimento(a.cd_estabelecimento),1,80) ds_estabelecimento,
  a.nr_cheque,
  '' nr_autorizacao,
  '' cd_cgc,
  null
from  cheque_cr a
where  a.cd_estabelecimento = cd_estabelecimento_w
and  PKG_DATE_UTILS.start_of(coalesce(coalesce(coalesce(a.dt_compensacao, a.dt_saque),coalesce(a.dt_seg_reapresentacao,a.dt_reapresentacao)),a.dt_deposito), 'dd', 0) between dt_inicial_p and fim_dia(dt_final_p)
and  obter_conta_financ_cheque_cr(a.nr_seq_cheque, obter_status_cheque(a.nr_seq_cheque)) = (cd_conta_financ_w)::numeric 
and  'CR'  = ie_integracao_w
and  'P'  = ie_classif_fluxo_p

union all

select  /*+ index (b TITPAGA_I2) */  0 nr_ordem_compra,
  b.nr_titulo,                                                           /* Fluxo a realizar */
  (dividir_sem_round(coalesce(a.vl_titulo, b.vl_titulo) +
  (dividir_sem_round((b.vl_saldo_juros + b.vl_saldo_multa),                              /* juros e multa  */
             (OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric ) * coalesce(a.vl_titulo, b.vl_titulo))   /* juros e multa  */
  ,(OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric )) * Obter_Saldo_Titulo_pagar(b.nr_titulo, PKG_DATE_UTILS.start_of(clock_timestamp(), 'dd', 0)) vl_titulo,
  0 vl_juros,
  0 vl_multa,
  0 vl_descontos,
  substr(obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc),1, 60) ds_pessoa,
  obter_valor_dominio(502,b.ie_tipo_titulo) ie_tipo_titulo,
  obter_valor_dominio(500,b.ie_origem_titulo) ie_origem_titulo,
  1 ie_union,
  substr(obter_nome_estabelecimento(b.cd_estabelecimento),1,255) ds_estabelecimento,
  '' nr_cheque,
  '' nr_autorizacao,
  '' cd_cgc,
  null
FROM titulo_pagar b
LEFT OUTER JOIN titulo_pagar_classif a ON (b.nr_titulo = a.nr_titulo)
WHERE coalesce(a.nr_seq_conta_financ, cd_conta_financ_cpa_w) = cd_conta_financ_w  and b.ie_situacao           = 'A' and OBTER_VENC_TITULO(b.nr_titulo, null) between dt_inicial_p and fim_dia(dt_final_p) and 'CP'    = ie_integracao_w and b.cd_estabelecimento = cd_estabelecimento_w and b.dt_vencimento_atual between dt_inicial_p -40 and fim_dia(dt_final_p) and 'R'    = ie_classif_fluxo_p and coalesce(b.nr_titulo_transf::text, '') = '' and (not exists (select  1
               from  ordem_compra y,
                    nota_fiscal x
               where  coalesce(y.dt_baixa::text, '') = ''
               and  x.nr_ordem_compra  = y.nr_ordem_compra
               and  x.nr_sequencia    = b.nr_seq_nota_fiscal) or 'S' = ie_oc_parcial_w)
 
union all

select  nr_ordem_compra,
  nr_titulo,
  vl_titulo,
  vl_juros,
  vl_multa,
  vl_desconto vl_descontos,
  ds_pessoa,
  ie_tipo_titulo,
  ie_origem_titulo,
  ie_union,
  substr(obter_nome_estabelecimento(cd_estabelecimento),1,255) ds_estabelecimento,
  '' nr_cheque,
  '' nr_autorizacao,
  cd_cgc,
  null
from     (
         select 0 nr_ordem_compra,
                b.nr_titulo,
                  sum(
                        dividir_sem_round(
                           (coalesce(a.vl_titulo, OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT')))
                              ,
                           (OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))
                        )
                           * c.vl_baixa
                     ) vl_titulo,
                  sum(
                         (dividir_sem_round(
                          (coalesce(a.vl_titulo, (OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric ))
                           ,
                            ((OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric ))
                       )
                           * c.vl_juros
                    ) vl_juros,
                sum(
                         (dividir_sem_round(
                          (coalesce(a.vl_titulo, (OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric ))
                           ,
                            ((OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric ))
                       )
                           * c.vl_multa
                    ) vl_multa,
                sum(
                         (dividir_sem_round(
                          (coalesce(a.vl_titulo, (OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric ))
                           ,
                            ((OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric ))
                       )
                           * c.vl_descontos
                    ) vl_desconto,
                substr(obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc),1, 60) ds_pessoa,
    obter_valor_dominio(502,b.ie_tipo_titulo) ie_tipo_titulo,
    obter_valor_dominio(500,b.ie_origem_titulo) ie_origem_titulo,
    b.dt_vencimento_atual dt_vencimento_tit,
                0 cd_conta_financ,
                '' ie_periodo,
                '' ie_classif_fluxo,
                6 ie_union,
                b.cd_estabelecimento,
                b.cd_cgc
         FROM tipo_baixa_cpa d, titulo_pagar b, titulo_pagar_baixa c
LEFT OUTER JOIN titulo_pagar_classif a ON (c.nr_titulo = a.nr_titulo)
WHERE coalesce(a.nr_seq_conta_financ, cd_conta_financ_cpa_w)  = cd_conta_financ_w  and b.nr_titulo                    = c.nr_titulo and c.cd_tipo_baixa            = d.cd_tipo_baixa and PKG_DATE_UTILS.start_of(c.dt_baixa, 'dd', 0) between dt_inicial_p and fim_dia(dt_final_p) and 'CP'      = ie_integracao_w and b.cd_estabelecimento  = cd_estabelecimento_w and 'P'      = ie_classif_fluxo_p and b.ie_situacao    in ('A', 'L') and coalesce(d.ie_fluxo_passado,'S')  = 'S' and coalesce(b.nr_titulo_transf::text, '') = '' and (not exists (select  1
                             from  titulo_pagar_baixa_cc x
                             where  x.nr_titulo  = c.nr_titulo
                             and  x.nr_seq_baixa  = c.nr_sequencia) or ('N' = ie_classif_baixa_cp_w)) group by b.nr_titulo,
                  substr(obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc),1, 60),
  b.ie_tipo_titulo,
  b.ie_origem_titulo,
  b.dt_vencimento_atual ,
                  b.cd_estabelecimento,
                  b.cd_cgc) alias242

union all

select  0 nr_ordem_compra,
  b.nr_titulo,                                                           /* ADIANTAMENTO_PAGO */
  sum(
               (
                  (coalesce(a.vl_titulo, OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT')) - coalesce(a.vl_desconto, 0) + coalesce(a.vl_acrescimo,0)) /
                  (OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT') - coalesce(a.vl_desconto,0) + coalesce(a.vl_acrescimo,0))
               ) * c.vl_adiantamento
  ) vl_titulo,
  0 vl_juros,
  0 vl_multa,
  0 vl_descontos,
  substr(obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc),1, 60) ds_pessoa,
  obter_valor_dominio(502,b.ie_tipo_titulo) ie_tipo_titulo,
  obter_valor_dominio(500,b.ie_origem_titulo) ie_origem_titulo,
  7 ie_union,
  substr(obter_nome_estabelecimento(b.cd_estabelecimento),1,255) ds_estabelecimento,
  '' nr_cheque,
  '' nr_autorizacao,
  '' cd_cgc,
  null
FROM adiantamento_pago d, titulo_pagar b, titulo_pagar_adiant c
LEFT OUTER JOIN titulo_pagar_classif a ON (c.nr_titulo = a.nr_titulo)
WHERE coalesce(a.nr_seq_conta_financ, cd_conta_financ_cpa_w)  = cd_conta_financ_w  and c.nr_adiantamento  = d.nr_adiantamento and b.nr_titulo      = c.nr_titulo and PKG_DATE_UTILS.start_of(c.dt_atualizacao, 'dd', 0)    between dt_inicial_p and fim_dia(dt_final_p) and 'CP'      = ie_integracao_w and b.cd_estabelecimento  = cd_estabelecimento_w and 'P'      = ie_classif_fluxo_p and b.ie_situacao    in ('A', 'L') and CASE WHEN ie_fim_semana_passado_w='S' THEN obter_proximo_dia_util(cd_estabelecimento_w, PKG_DATE_UTILS.start_of(CASE WHEN ie_data_tit_adiant_w='S' THEN d.dt_adiantamento  ELSE c.dt_atualizacao END , 'dd', 0))  ELSE PKG_DATE_UTILS.start_of(CASE WHEN ie_data_tit_adiant_w='S' THEN d.dt_adiantamento  ELSE c.dt_atualizacao END , 'dd', 0) END     = fim_dia(dt_final_p) group by  b.nr_titulo,
  b.ie_tipo_titulo,
  b.ie_origem_titulo,
  b.dt_vencimento_atual,
  substr(obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc),1, 60),
  substr(obter_nome_estabelecimento(b.cd_estabelecimento),1,255)

union all

select   0 nr_ordem_compra,
         b.nr_titulo,
  sum(coalesce(a.vl_titulo, (OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric )) vl_titulo,
  0 vl_juros,
  0 vl_multa,
  0 vl_descontos,
         substr(obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc),1, 60) ds_pessoa,
  obter_valor_dominio(502,b.ie_tipo_titulo) ie_tipo_titulo,
  obter_valor_dominio(500,b.ie_origem_titulo) ie_origem_titulo,
         13 ie_union,
         substr(obter_nome_estabelecimento(b.cd_estabelecimento),1,255) ds_estabelecimento,
         '' nr_cheque,
         '' nr_autorizacao,
   b.cd_cgc,
   null
FROM titulo_pagar b, titulo_pagar_baixa c
LEFT OUTER JOIN titulo_pagar_classif a ON (c.nr_titulo = a.nr_titulo)
WHERE b.nr_titulo                = c.nr_titulo and PKG_DATE_UTILS.start_of(c.dt_baixa, 'dd', 0) between dt_inicial_p and fim_dia(dt_final_p) and 'CP'    =ie_integracao_w and b.cd_estabelecimento       = cd_estabelecimento_w and 'P'    = ie_classif_fluxo_p and b.ie_situacao  in ('A', 'L') and (b.cd_cgc IS NOT NULL AND b.cd_cgc::text <> '') group by  b.nr_titulo,
  substr(obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc),1, 60),
  substr(obter_nome_estabelecimento(b.cd_estabelecimento),1,255),
  b.cd_cgc,
  b.ie_tipo_titulo,
  b.ie_origem_titulo,
  b.dt_vencimento_atual,
  OBTER_EMPRESA_ESTAB(b.cd_estabelecimento),
  b.cd_estabelecimento

union all

select  0 nr_ordem_compra,
  0 nr_titulo,
  a.vl_fluxo vl_titulo,
  0 vl_juros,
  0 vl_multa,
  0 vl_descontos,
  substr(obter_descricao_padrao('CONTA_FINANCEIRA','DS_CONTA_FINANC',a.cd_conta_financ),1,60) ds_pessoa,
  obter_valor_dominio(502,'D') ie_tipo_titulo,
  '' ie_origem_titulo,
  3 ie_union,
  substr(obter_nome_estabelecimento(a.cd_estabelecimento),1,255) ds_estabelecimento,
  '' nr_cheque,
  '' nr_autorizacao,
  '' cd_cgc,
  null
from  fluxo_caixa a
where  a.cd_conta_financ          = cd_conta_financ_w
and  a.dt_referencia    between dt_inicial_p and fim_dia(dt_final_p)
and  a.cd_estabelecimento       = cd_estabelecimento_w
and  a.ie_origem                = 'D'
and  ie_integracao_w            = 'D'
and  ie_classif_fluxo_p          in ('P', 'R')

union all

select   /*+ index(a ORDCOMP_I1) */  a.nr_ordem_compra,
  0 nr_titulo,
  OBTER_VALOR_VENC_OC(a.nr_ordem_compra, coalesce(dt_inicial_p, dt_final_p), cd_conta_financ_w, d.IE_TRATAR_FIM_SEMANA, null, null) vl_titulo,
  0 vl_juros,
  0 vl_multa,
  0 vl_descontos,
  substr(obter_nome_pf_pj(a.CD_PESSOA_FISICA, a.CD_CGC_FORNECEDOR),1,254) ds_pessoa,
  'OC' ie_tipo_titulo,
  '' ie_origem_titulo,
  4 ie_union,
  substr(obter_nome_estabelecimento(a.cd_estabelecimento),1,255) ds_estabelecimento,
  '' nr_cheque,
  '' nr_autorizacao,
  '' cd_cgc,
  null
from  parametro_fluxo_caixa d,
  ordem_compra a
where (a.cd_estabelecimento    = cd_estabelecimento_w)
and  d.cd_estabelecimento    = a.cd_estabelecimento
and  coalesce(a.dt_baixa::text, '') = ''
and  OBTER_VALOR_VENC_OC(a.nr_ordem_compra, coalesce(dt_inicial_p, dt_final_p), cd_conta_financ_w, d.IE_TRATAR_FIM_SEMANA, null, null)  > 0
and  a.dt_ordem_compra  between PKG_DATE_UTILS.ADD_MONTH(dt_inicial_p, -6, 0) and fim_dia(dt_final_p)
and  'OC'    = ie_integracao_w
and  'R'    = ie_classif_fluxo_p

union all

select  0 nr_ordem_compra,
  0 nr_titulo,
  a.vl_transacao vl_titulo,
  0 vl_juros,
  0 vl_multa,
  0 vl_descontos,
  substr(b.ds_caixa || ' - ' ||  c.ds_transacao, 1,255) ds_pessoa,
  '' ie_tipo_titulo,
  '' ie_origem_titulo,
  17 ie_union,
  substr(obter_nome_estabelecimento(b.cd_estabelecimento),1,255) ds_estabelecimento,
  '' nr_cheque,
  '' nr_autorizacao,
  '' cd_cgc,
  null
from  transacao_financeira c,
  caixa b,
  movto_trans_financ a
where  a.nr_seq_caixa      = b.nr_sequencia
and  a.nr_seq_trans_financ    = c.nr_sequencia
and  a.vl_transacao      <> 0
and  b.cd_estabelecimento    = cd_estabelecimento_w
and  coalesce(a.nr_seq_titulo_pagar::text, '') = ''
and  coalesce(a.nr_seq_titulo_receber::text, '') = ''
and  coalesce(a.nr_seq_conv_receb::text, '') = ''
and (coalesce(b.ie_movto_fluxo, 'S')                     = 'S')
and  not exists (select  1
        from     titulo_pagar_adiant x
        where    x.nr_adiantamento  = a.nr_adiant_pago)
and  not exists (select  1
        from     titulo_receber_liq x
        where    x.nr_adiantamento  = a.nr_adiantamento)
and  PKG_DATE_UTILS.start_of(a.dt_transacao, 'dd', 0)    between dt_inicial_p and fim_dia(dt_final_p)
and  c.cd_conta_financ                              = (cd_conta_financ_w)::numeric 
and  'T'        = ie_integracao_w
and  'P'        = ie_classif_fluxo_p
and (coalesce(a.ie_origem_lancamento, CASE WHEN coalesce(a.nr_seq_caixa::text, '') = '' THEN  'C'  ELSE 'T' END ) = CASE WHEN coalesce(a.nr_seq_caixa::text, '') = '' THEN  'C'  ELSE 'T' END )

union all

select  0 nr_ordem_compra,
  0 nr_titulo,
  a.vl_transacao vl_titulo,
  0 vl_juros,
  0 vl_multa,
  0 vl_descontos,
  substr(b.ds_banco || ' - ' ||  c.ds_transacao, 1,255) ds_pessoa,
  '' ie_tipo_titulo,
  '' ie_origem_titulo,
  18 ie_union,
  substr(obter_nome_estabelecimento(b.cd_estabelecimento),1,255) ds_estabelecimento,
  '' nr_cheque,
  '' nr_autorizacao,
  '' cd_cgc,
  null
from  transacao_financeira c,
  banco_estabelecimento_v b,
  movto_trans_financ a
where  a.nr_seq_banco                                = b.nr_sequencia
and  a.nr_seq_trans_financ                       = c.nr_sequencia
and  a.vl_transacao                                  <> 0
and  b.cd_estabelecimento                       = cd_estabelecimento_w
and  coalesce(a.nr_seq_titulo_pagar::text, '') = ''
and  coalesce(a.nr_seq_titulo_receber::text, '') = ''
and  coalesce(a.nr_seq_conv_receb::text, '') = ''
and  not exists (select  1
        from     titulo_pagar_adiant x
        where    x.nr_adiantamento  = a.nr_adiant_pago)
--and      not exists

--        (select  1

--        from     titulo_receber_liq x

--        where    x.nr_adiantamento  = a.nr_adiantamento)
and  PKG_DATE_UTILS.start_of(a.dt_transacao, 'dd', 0)    between dt_inicial_p and fim_dia(dt_final_p)
and  c.cd_conta_financ                              = (cd_conta_financ_w)::numeric 
and  'CB'      = ie_integracao_w
and  'P'      =ie_classif_fluxo_p
and (coalesce(a.ie_origem_lancamento, CASE WHEN coalesce(a.nr_seq_caixa::text, '') = '' THEN  'C'  ELSE 'T' END ) = CASE WHEN coalesce(a.nr_seq_caixa::text, '') = '' THEN  'C'  ELSE 'T' END )

union all

select  0 nr_ordem_compra,
  0 nr_titulo,
  Obter_valor_fluxo_contrato(cd_estabelecimento_w, b.nr_seq_contrato, b.cd_conta_financ, coalesce(dt_inicial_p, dt_final_p), 'D') vl_titulo,
  0 vl_juros,
  0 vl_multa,
  0 vl_descontos,
  (a.ds_objeto_contrato || ' - ' || substr(obter_nome_pf_pj(a.cd_pessoa_contratada,a.cd_cgc_contratado),1,60)) ds_pessoa,
  '' ie_tipo_titulo,
  '' ie_origem_titulo,
  12 ie_union,
  substr(obter_nome_estabelecimento(a.cd_estabelecimento),1,255) ds_estabelecimento,
  '' nr_cheque,
  '' nr_autorizacao,
  '' cd_cgc,
  null
from  contrato a,
  contrato_regra_pagto b
where  a.nr_sequencia    = b.nr_seq_contrato
and  b.cd_conta_financ  = cd_conta_financ_w
and  ie_integracao_w         = 'CO'
and  a.cd_estabelecimento   = cd_estabelecimento_w
and  obter_valor_fluxo_contrato(cd_estabelecimento_w, b.nr_seq_contrato, b.cd_conta_financ, dt_inicial_p, 'D') > 0
and  a.ie_situacao    = 'A'
and  b.ie_forma    = 'M'
and  a.ie_pagar_receber  = 'P'
and  coalesce(b.vl_pagto,0)  > 0
and  b.ie_tipo_valor    = 'V'
and  not exists ( select  1
    from  nota_fiscal b,
      nota_fiscal_item a
    where  a.nr_sequencia    = b.nr_sequencia
    and  a.nr_contrato    = a.nr_sequencia
    and  (b.dt_atualizacao_estoque IS NOT NULL AND b.dt_atualizacao_estoque::text <> '')
    and  PKG_DATE_UTILS.start_of(b.dt_atualizacao_estoque, 'month', 0) between PKG_DATE_UTILS.start_of(dt_inicial_p,'month', 0) and PKG_DATE_UTILS.start_of(dt_final_p, 'month', 0));


vet01  c01%rowtype;

C03 CURSOR FOR
SELECT  substr(obter_valor_dominio(1177, a.ie_integracao), 1,60) ds_origem,
  a.ie_integracao,
  a.cd_conta_financ,
  sum(a.vl_fluxo) vl_fluxo
from  fluxo_caixa a
where  a.cd_estabelecimento  = cd_estabelecimento_w
and  a.dt_referencia    between dt_inicial_p and fim_dia(dt_final_p)
and  a.ie_classif_fluxo  = ie_classif_fluxo_p
and  a.cd_conta_financ  = cd_conta_financ_w
and  ie_origem    <> 'X'
and  OBTER_EMPRESA_ESTAB(cd_estabelecimento_w) = a.cd_empresa
group by  substr(obter_valor_dominio(1177, a.ie_integracao),1,60),
  a.ie_integracao,
  a.cd_conta_financ
order by  ds_origem;

vet03  c03%rowtype;



BEGIN

ds_SQL_w  := 'select  b.ds_conta_estrut, ' ||
       '    a.cd_conta_financ, ' ||
       '    b.cd_conta_apres ' ||
       'from  conta_financeira_v b, '||
       '    fluxo_caixa_v a '||
       'where  a.cd_conta_financ  = b.cd_conta_financ '||
       'and    exists ( '||
       '      select  1 '||
       '      from  fluxo_caixa c '||
       '      where  c.cd_estabelecimento  = :cd_estabelecimento '||
       '      and  c.dt_referencia    between :dt_inicial and fim_dia(:dt_final) '||
       '      and  c.ie_classif_fluxo  = :ie_classif_fluxo '||
       '      and  c.cd_conta_financ  = b.cd_conta_financ '||
       '      and  ie_origem    <> ''X'' '||
       '      and  obter_empresa_estab(:cd_estabelecimento) = c.cd_empresa) ';


if (coalesce(cd_conta_financ_p,'X') <> 'X') then
  ds_SQL_w  := ds_SQL_w ||   'and (instr(replace(replace(:cd_conta_financ,''('','', ''),'')'','',''),'''', a.cd_conta_financ,'''') > 0))';
end if;

ds_SQL_w  := ds_SQL_w || ' order by  b.cd_conta_apres ';

select  coalesce(obter_estabelecimento_ativo,0)
into STRICT  cd_estabelecimento_w
;

select  coalesce(obter_empresa_estab(cd_estabelecimento_w),0)
into STRICT  cd_empresa_w
;

select  max(coalesce(cd_conta_financ_cpa,0)),
    max(coalesce(cd_conta_financ_cre,0)),
    max(coalesce(ie_adiant_receb,'A')),
    max(coalesce(ie_classif_baixa_cp,'N')),
    max(coalesce(ie_fim_semana_passado,'N')),
    max(coalesce(ie_data_tit_adiant,'N')),
    max(coalesce(ie_oc_parcial,'N')),
    max(coalesce(ie_convenio_receb,'N'))
into STRICT  cd_conta_financ_cpa_w,
    cd_conta_financ_cre_w,
    ie_adiant_receb_w,
    ie_classif_baixa_cp_w,
    ie_fim_semana_passado_w,
    ie_data_tit_adiant_w,
    ie_oc_parcial_w,
    ie_convenio_receb_w
from  parametro_fluxo_caixa
where  cd_estabelecimento = cd_estabelecimento_w;

delete  FROM w_rel_drill_down
where  nm_usuario = nm_usuario_p;

delete  FROM w_rel_quebra_drill_down
where  nm_usuario = nm_usuario_p;


var_cur_w  := dbms_sql.open_cursor;
dbms_sql.parse(var_cur_w, ds_SQL_w, 1);

dbms_sql.bind_variable(var_cur_w, ':cd_estabelecimento', cd_estabelecimento_w);
dbms_sql.bind_variable(var_cur_w, ':dt_inicial', PKG_DATE_UTILS.start_of(dt_inicial_p,'dd',0));
dbms_sql.bind_variable(var_cur_w, ':dt_final', fim_dia(dt_final_p));
dbms_sql.bind_variable(var_cur_w, ':ie_classif_fluxo', ie_classif_fluxo_p);
if (coalesce(cd_conta_financ_p,'X') <> 'X') then
  dbms_sql.bind_variable(var_cur_w, ':cd_conta_financ', cd_conta_financ_p);
end if;

dbms_sql.define_column(var_cur_w, 1, ds_conta_estrut_w,255);
dbms_sql.define_column(var_cur_w, 2, cd_conta_financ_w);
dbms_sql.define_column(var_cur_w, 3, cd_conta_apres_w,255);

var_exec_w  := dbms_sql.execute(var_cur_w);

loop
var_retorno_w := dbms_sql.fetch_rows(var_cur_w);
exit  when var_retorno_w = 0;


  dbms_sql.column_value(var_cur_w, 1, ds_conta_estrut_w);
  dbms_sql.column_value(var_cur_w, 2, cd_conta_financ_w);
  dbms_sql.column_value(var_cur_w, 3, cd_conta_apres_w);

  begin


    open C03;
    loop
    fetch C03 into
      vet03;
    EXIT WHEN NOT FOUND; /* apply on C03 */
      begin

        ie_integracao_w := vet03.ie_integracao;


        insert into w_rel_quebra_drill_down(
                cd_conta_financ,
                ds_conta_estrut,
                ds_origem,
                ie_integracao,
                vl_fluxo,
                cd_conta_apres,
                nm_usuario)
        values (      cd_conta_financ_w,
                ds_conta_estrut_w,
                vet03.ds_origem,
                ie_integracao_w,
                vet03.vl_fluxo,
                cd_conta_apres_w,
                nm_usuario_p);



        open C01;
        loop
        fetch C01 into
          vet01;
        EXIT WHEN NOT FOUND; /* apply on C01 */
          begin
		
		  if (vet01.ie_union = -3) then
            cd_conta_financ_w := 0;
            if (cd_conta_financ_w = 0) then

                ie_entrada_saida_w    := 'E';

                if (ie_integracao_w = 'CP') then
                  ie_entrada_saida_w  := 'S';
                end if;

                select  max(cd_cgc) /*aamfirmo 17/01/2013 os  536096 -  nao passava o cd_cgc para obter_conta_financeira e nunca buscava o tipo de pessoa desta pj.*/
                into STRICT   cd_cgc_w
                from   convenio
                where  cd_convenio  = cd_convenio_w;

                cd_conta_financ_w := obter_conta_financeira(  ie_entrada_saida_w, cd_estabelecimento_w, 0, 0, 0, 0, vet01.cd_convenio, vet01.cd_cgc, null, cd_conta_financ_w, null, null, null, null, null, null, null, null, vet01.ie_origem_titulo, null, null, null, null, null, null, null, vet01.ie_tipo_titulo, vet01.ie_tipo_titulo, null);
			 end if;
		  end if;


            vl_titulo_w := vet01.vl_titulo;
            ie_insert_w := 'S';

            if (vet01.ie_union = 14) and (coalesce(vet01.cd_cgc,'X') <> 'X')then

              if (cd_cgc_ant_w <> vet01.cd_cgc) then
                cd_conta_financ_JCR_w := coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(cd_estabelecimento_w), 'JCR', vet01.cd_cgc, null, dt_inicial_p, cd_estabelecimento_w),0);
                cd_conta_financ_MCR_w := coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(cd_estabelecimento_w), 'MCR', vet01.cd_cgc, null, dt_inicial_p, cd_estabelecimento_w),0);
                cd_conta_financ_DCR_w := coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(cd_estabelecimento_w), 'DCR', vet01.cd_cgc, null, dt_inicial_p, cd_estabelecimento_w),0);
              end if;


              cd_cgc_ant_w := vet01.cd_cgc;


              select  (OBTER_DADOS_TITULO_RECEBER(vet01.nr_titulo, 'V'))::numeric
              into STRICT  vl_titulo_ww
;


              if (cd_conta_financ_JCR_w = cd_conta_financ_w) then
                vl_titulo_w := vl_titulo_w + (dividir_sem_round(vet01.vl_titulo, vl_titulo_ww) * vet01.vl_juros);
              end if;
              if (cd_conta_financ_MCR_w = cd_conta_financ_w) then
                vl_titulo_w := vl_titulo_w + (dividir_sem_round(vet01.vl_titulo, vl_titulo_ww) * vet01.vl_multa);
              end if;
              if (cd_conta_financ_DCR_w = cd_conta_financ_w) then
                vl_titulo_w := vl_titulo_w - (dividir_sem_round(vet01.vl_titulo, vl_titulo_ww) * vet01.vl_descontos);
              end if;


              if (vl_titulo_w = vet01.vl_titulo) then
                ie_insert_w := 'N';
              end if;


            elsif (vet01.ie_union = 13) and (coalesce(vet01.cd_cgc,'X') <> 'X')then


              if (cd_cgc_ant_w <> vet01.cd_cgc) then
                cd_conta_financ_JCP_w := coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(cd_estabelecimento_w), 'JCP', vet01.cd_cgc, null, dt_inicial_p, cd_estabelecimento_w),0);
                cd_conta_financ_MCP_w := coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(cd_estabelecimento_w), 'MCP', vet01.cd_cgc, null, dt_inicial_p, cd_estabelecimento_w),0);
                cd_conta_financ_DCP_w := coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(cd_estabelecimento_w), 'DCP', vet01.cd_cgc, null, dt_inicial_p, cd_estabelecimento_w),0);
              end if;


              cd_cgc_ant_w := vet01.cd_cgc;


              select  (OBTER_DADOS_TIT_PAGAR(vet01.nr_titulo, 'VT'))::numeric
              into STRICT  vl_titulo_ww
;


              if (cd_conta_financ_JCP_w = cd_conta_financ_w) then
                vl_titulo_w := vl_titulo_w + (dividir_sem_round(vet01.vl_titulo, vl_titulo_ww) * vet01.vl_juros);
              end if;
              if (cd_conta_financ_MCP_w = cd_conta_financ_w) then
                vl_titulo_w := vl_titulo_w + (dividir_sem_round(vet01.vl_titulo, vl_titulo_ww) * vet01.vl_multa);
              end if;
              if (cd_conta_financ_DCP_w = cd_conta_financ_w) then
                vl_titulo_w := vl_titulo_w - (dividir_sem_round(vet01.vl_titulo, vl_titulo_ww) * vet01.vl_descontos);
              end if;


              if (vl_titulo_w = vet01.vl_titulo) then
                ie_insert_w := 'N';
              end if;


            elsif (vet01.ie_union = 6) then

              if (cd_cgc_ant_w <> vet01.cd_cgc) then
                cd_conta_financ_JCP_w := coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(cd_estabelecimento_w), 'JCP', vet01.cd_cgc, null, dt_inicial_p, cd_estabelecimento_w),0);
                cd_conta_financ_MCP_w := coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(cd_estabelecimento_w), 'MCP', vet01.cd_cgc, null, dt_inicial_p, cd_estabelecimento_w),0);
                cd_conta_financ_DCP_w := coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(cd_estabelecimento_w), 'DCP', vet01.cd_cgc, null, dt_inicial_p, cd_estabelecimento_w),0);
              end if;


              if (cd_conta_financ_JCP_w = 0) then
                vl_titulo_w := vl_titulo_w + vet01.vl_juros;
              end if;
              if (cd_conta_financ_MCP_w = 0) then
                vl_titulo_w := vl_titulo_w + vet01.vl_multa;
              end if;
              if (cd_conta_financ_DCP_w = 0) then
                vl_titulo_w := vl_titulo_w - vet01.vl_descontos;
              end if;
            end if;

            if (ie_insert_w = 'S') then

              insert into w_rel_drill_down(
                  nr_titulo,
                  ds_pessoa,
                  vl_titulo,
                  nr_ordem_compra,
                  ds_estabelecimento,
                  nr_autorizacao,
                  nr_cheque,
                  ie_union,
                  ie_tipo_titulo,
                  ie_origem_titulo,
                  nm_usuario,
                  cd_conta_financ,
                  ie_integracao)
              values (  vet01.nr_titulo,
                  vet01.ds_pessoa,
                  vl_titulo_w,
                  vet01.nr_ordem_compra,
                  vet01.ds_estabelecimento,
                  vet01.nr_autorizacao,
                  vet01.nr_cheque,
                  vet01.ie_union,
                  vet01.ie_tipo_titulo,
                  vet01.ie_origem_titulo,
                  nm_usuario_p,
                  cd_conta_financ_w,
                  ie_integracao_w);
            end if;
          end;
        end loop;
        close C01;
      end;
    end loop;
    close C03;
  end;
end  loop;
dbms_sql.close_cursor(var_cur_w);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_rel_drill_down ( ie_classif_fluxo_p text, dt_inicial_p timestamp, dt_final_p timestamp, cd_conta_financ_p text, nm_usuario_p text) FROM PUBLIC;

