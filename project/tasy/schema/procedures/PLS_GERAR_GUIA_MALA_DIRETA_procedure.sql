-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_guia_mala_direta ( nr_seq_tipo_guia_p bigint, ie_tipo_prestador_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------
Referências:

DS_QUALIFICACOES_AGRUPADAS_W

APALC -> [AP]
ADICQ -> [AD]
AONA -> [AO]
ACBA -> [AC]
AIQG -> [AI]
N -> [N] - Notivisa
P -> [P] - Pós-Doutorado
R -> [R] - Residência
E -> [E] - Especilista
Q -> [Q] - QUALISS
A -> [A] - Acreditações
G -> [G] - Outras Certificações
I -> [I] - ISO 9001
D -> [D] - Doutorado
M -> [M] Mestrado

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_municipio_w			varchar(255);
ds_especialidade_w		varchar(4000);
ie_prefixo_w			varchar(255);
nm_prestador_w			varchar(255);
ds_endereco_w			varchar(255);
nr_endereco_w			varchar(255);
ds_complemento_w		varchar(255);
cd_cep_w			varchar(255);
ds_bairro_w			varchar(255);
sg_estado_w			w_pls_guia_medico.sg_estado%type;
nr_ddd_w			varchar(255);
nr_telefone_w			varchar(255);
nr_ramal_w			varchar(255);
ds_fone_adic_w			varchar(255);
nr_ddd_fax_w			varchar(255);
ds_fax_w			varchar(255);
ds_email_w			varchar(255);
ds_website_w			varchar(255);
ds_municipio_ant_w		varchar(255)	:= null;
ds_especialidade_ant_w		varchar(255)	:= null;
nm_medico_w			varchar(60);
cd_cgc_prestador_w		varchar(50);
nr_crm_w			varchar(20);
cd_medico_w			varchar(10);
cd_municipio_w			varchar(6);
nr_seq_prestador_w		bigint;
ds_tipo_prestador_w		varchar(255);
ds_regiao_w			varchar(255);
cd_pessoa_fisica_w		varchar(10);
cd_cgc_w			varchar(14);
ie_tipo_endereco_w		varchar(4);
ie_tipo_complemento_w		varchar(1)	:= 0;
ie_tipo_pessoa_w		varchar(2)	:= null;
nr_seq_compl_pf_tel_adic_w	bigint;
nr_seq_regiao_w			bigint;
ie_apalc_w			varchar(1);
ie_adicq_w			varchar(1);
ie_aona_w			varchar(1);
ie_acba_w			varchar(1);
ie_aiqg_w			varchar(1);
ie_notivisa_w			varchar(1);
ie_pos_grad_360_w		varchar(1);
ie_residencia_w			varchar(1);
ie_especialista_w		varchar(1);
ie_qualiss_w			varchar(1);
ds_qualificacoes_agrupadas_w	varchar(255)	:= null;
ds_acento_w			varchar(255)	:= 'áãàâäéêëíóôõúüçÁÃÀÂÄÉÊËÍÓÔÕÚÜÇ';
ds_novo_w			varchar(255)	:= 'aaaaaeeeiooouucAAAAAEEEIOOOUUC';
nm_prestador_sem_acentuacao_w	varchar(255);
nr_rqe_w			medico_especialidade.nr_rqe%type;
ie_acreditacao_w		w_guia_medico_mala_direta.ie_acreditacao%type;
ie_outra_certif_w		w_guia_medico_mala_direta.ie_outra_certif%type;
ie_iso_w			w_guia_medico_mala_direta.ie_iso%type;
ie_doutorado_w			w_guia_medico_mala_direta.ie_doutorado%type;
ie_mestrado_w			w_guia_medico_mala_direta.ie_mestrado%type;
ds_razao_social_w		w_guia_medico_mala_direta.ds_razao_social%type;

C01 CURSOR FOR
	SELECT	nr_seq_prestador,
		cd_medico,
		ds_municipio,
		ie_prefixo,
		nm_prestador,
		translate(nm_prestador,ds_acento_w,ds_novo_w) nm_prestador_sem_acentuacao,
		ds_endereco,
		nr_endereco,
		ds_complemento,
		cd_cep,
		ds_bairro,
		sg_estado,
		nr_ddd,
		nr_telefone_prest,
		nr_ramal,
		ds_fone_adic,
		nr_ddd_fax,
		ds_fax,
		ds_email,
		ds_website,
		cd_municipio_ibge,
		ds_especialidade,
		cd_cgc_prestador,
		nr_crm,
		ds_tipo_prestador,
		ie_apalc,
		ie_adicq,
		ie_aona,
		ie_acba,
		ie_aiqg,
		ie_notivisa,
		ie_pos_grad_360,
		ie_residencia,
		ie_especialista,
		ie_qualiss,
		nr_rqe,
		ie_acred,
		ie_outra_certif,
		ie_iso,
		ie_doutorado,
		ie_mestrado
	from (
		SELECT	a.nr_seq_prestador,
			a.cd_medico,
			substr(obter_desc_municipio_ibge_guia(a.cd_municipio_ibge), 1, 255) ds_municipio,
			'Dr.' ie_prefixo,
			substr(coalesce(pls_obter_dados_prestador(a.nr_seq_prestador, 'NGM'), obter_nome_pf(a.cd_medico)), 1, 80) nm_prestador,
			a.ds_endereco,
			a.nr_endereco,
			a.ds_complemento,
			a.cd_cep,
			a.ds_bairro,
			a.sg_estado,
			a.nr_ddd,
			a.nr_telefone_prest,
			a.nr_ramal,
			a.ds_fone_adic,
			a.nr_ddd_fax,
			a.ds_fax,
			a.ds_email,
			a.ds_website,
			a.cd_municipio_ibge,
			a.ds_especialidades_med ds_especialidade, --nvl(c.ds_espec_guia_medico,c.ds_especialidade) ds_especialidade,   /* comentada por PITDELLING (Philip Ibbotson) na OS 827359 */
			null cd_cgc_prestador,
			a.nr_crm,
			a.ds_tipo_prestador,
			a.ie_apalc,
			a.ie_adicq,
			a.ie_aona,
			a.ie_acba,
			a.ie_aiqg,
			a.ie_notivisa,
			a.ie_pos_grad_360,
			a.ie_residencia,
			a.ie_especialista,
			a.ie_qualiss,
			pls_obter_rqe_medico(  a.cd_medico, b.cd_especialidade) nr_rqe,
			pls_obter_dados_w_guia_medico( a.nr_sequencia, 'SG', 'A') ie_acred,
			pls_obter_dados_w_guia_medico( a.nr_sequencia, 'SG', 'G') ie_outra_certif,
			pls_obter_dados_w_guia_medico( a.nr_sequencia, 'SG', 'I') ie_iso,
			pls_obter_dados_w_guia_medico( a.nr_sequencia, 'SG', 'D') ie_doutorado,
			pls_obter_dados_w_guia_medico( a.nr_sequencia, 'SG', 'M') ie_mestrado
		from	w_pls_guia_med_espec	b,
			w_pls_guia_medico	a
		where	a.nr_sequencia 		= b.nr_seq_guia_medico
		and	a.nm_usuario		= nm_usuario_p
		and	ie_tipo_prestador_p in ('A', 'PF')
		and	coalesce(a.cd_cgc_prestador::text, '') = ''
		
union

		select	a.nr_seq_prestador,
			a.cd_medico,
			substr(obter_desc_municipio_ibge_guia(a.cd_municipio_ibge), 1, 255) ds_municipio,
			' ' ie_prefixo,
			substr(pls_obter_dados_prestador(a.nr_seq_prestador, 'NGM'), 1, 80) nm_prestador,
			a.ds_endereco,
			a.nr_endereco,
			a.ds_complemento,
			a.cd_cep,
			a.ds_bairro,
			a.sg_estado,
			a.nr_ddd,
			a.nr_telefone_prest,
			a.nr_ramal,
			a.ds_fone_adic,
			a.nr_ddd_fax,
			a.ds_fax,
			a.ds_email,
			a.ds_website,
			a.cd_municipio_ibge,
			a.ds_especialidades_med ds_especialidade,
			a.cd_cgc_prestador,
			a.nr_crm,
			a.ds_tipo_prestador,
			a.ie_apalc,
			a.ie_adicq,
			a.ie_aona,
			a.ie_acba,
			a.ie_aiqg,
			a.ie_notivisa,
			a.ie_pos_grad_360,
			a.ie_residencia,
			a.ie_especialista,
			a.ie_qualiss,
			pls_obter_rqe_medico(  a.cd_medico, b.cd_especialidade),
			pls_obter_dados_w_guia_medico( a.nr_sequencia, 'SG', 'A') ie_acred,
			pls_obter_dados_w_guia_medico( a.nr_sequencia, 'SG', 'G') ie_outra_certif,
			pls_obter_dados_w_guia_medico( a.nr_sequencia, 'SG', 'I') ie_iso,
			pls_obter_dados_w_guia_medico( a.nr_sequencia, 'SG', 'D') ie_doutorado,
			pls_obter_dados_w_guia_medico( a.nr_sequencia, 'SG', 'M') ie_mestrado
		from    pls_prestador_med_espec	b,
			w_pls_guia_medico	a
		where	a.nm_usuario            = nm_usuario_p
		and	a.nr_seq_prestador	= b.nr_seq_prestador
		and	(a.cd_cgc_prestador IS NOT NULL AND a.cd_cgc_prestador::text <> '')
		and	b.ie_guia_medico	= 'S'
		and	ie_tipo_prestador_p in ('A', 'PJ')
		and	clock_timestamp() between trunc(coalesce(b.dt_inicio_vigencia, clock_timestamp())) and fim_dia(coalesce(b.dt_fim_vigencia, clock_timestamp()))) alias34
	order by
		ds_municipio,
		ds_especialidade,
		nm_prestador_sem_acentuacao;


BEGIN
delete	from w_guia_medico_mala_direta
where	nm_usuario	= nm_usuario_p;

if (nr_seq_tipo_guia_p IS NOT NULL AND nr_seq_tipo_guia_p::text <> '') then
	CALL pls_gerar_guia_medico(null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			0,  -- aqui precisa ser zero, por que se não, não gera a mala direta para os PJ(no cursor do PJ na gerar_guia_medico compara este parametro cm <> 2)
			null,
			nr_seq_tipo_guia_p,
			null,
			null,
			null,
			'N',
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			nm_usuario_p,
			null,
			cd_estabelecimento_p,
			null,
			null,
			null,
			'N',
			null,
			null,
			null,
			null);

	open C01;
	loop
	fetch C01 into
		nr_seq_prestador_w,
		cd_medico_w,
		ds_municipio_w,
		ie_prefixo_w,
		nm_prestador_w,
		nm_prestador_sem_acentuacao_w,
		ds_endereco_w,
		nr_endereco_w,
		ds_complemento_w,
		cd_cep_w,
		ds_bairro_w,
		sg_estado_w,
		nr_ddd_w,
		nr_telefone_w,
		nr_ramal_w,
		ds_fone_adic_w,
		nr_ddd_fax_w,
		ds_fax_w,
		ds_email_w,
		ds_website_w,
		cd_municipio_w,
		ds_especialidade_w,
		cd_cgc_prestador_w,
		nr_crm_w,
		ds_tipo_prestador_w,
		ie_apalc_w,
		ie_adicq_w,
		ie_aona_w,
		ie_acba_w,
		ie_aiqg_w,
		ie_notivisa_w,
		ie_pos_grad_360_w,
		ie_residencia_w,
		ie_especialista_w,
		ie_qualiss_w,
		nr_rqe_w,
		ie_acreditacao_w,
		ie_outra_certif_w,
		ie_iso_w,
		ie_doutorado_w,
		ie_mestrado_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		if ((cd_cgc_prestador_w IS NOT NULL AND cd_cgc_prestador_w::text <> '') and ie_tipo_prestador_p = 'PJ') or (coalesce(cd_cgc_prestador_w::text, '') = '' and ie_tipo_prestador_p = 'PF') or (ie_tipo_prestador_p = 'A') then
			nm_medico_w	:= substr(obter_nome_pf(cd_medico_w), 1, 60);

			if (coalesce(ds_municipio_ant_w::text, '') = '') or (ds_municipio_w <> ds_municipio_ant_w) then
				ds_municipio_ant_w	:= ds_municipio_w;
			else
				ds_municipio_ant_w	:= ds_municipio_w;
				ds_municipio_w		:= null;
			end if;

			if (coalesce(ds_especialidade_ant_w::text, '') = '') or (ds_especialidade_w <> ds_especialidade_ant_w) then
				ds_especialidade_ant_w	:= substr(ds_especialidade_w, 1, 255);
			else
				ds_especialidade_ant_w	:= substr(ds_especialidade_w, 1, 255);
				ds_especialidade_w	:= null;
			end if;

			select	max(cd_pessoa_fisica),
				max(cd_cgc),
				max(ie_tipo_endereco),
				max(nr_seq_compl_pf_tel_adic)
			into STRICT	cd_pessoa_fisica_w,
				cd_cgc_w,
				ie_tipo_endereco_w,
				nr_seq_compl_pf_tel_adic_w
			from	pls_prestador
			where	nr_sequencia = nr_seq_prestador_w;

			if (ie_tipo_endereco_w	= 'PJ') then
				ie_tipo_complemento_w	:= 0;
				ie_tipo_pessoa_w	:= 'PJ';
			elsif (ie_tipo_endereco_w	= 'PJC') then
				ie_tipo_complemento_w	:= 1;
				ie_tipo_pessoa_w	:= 'PJ';
			elsif (ie_tipo_endereco_w	= 'PJF') then
				ie_tipo_complemento_w	:= 2;
				ie_tipo_pessoa_w	:= 'PJ';
			elsif (ie_tipo_endereco_w	= 'PJA') then
				ie_tipo_complemento_w	:= 6;
				ie_tipo_pessoa_w	:= 'PJ';
			end if;

			if (ie_tipo_endereco_w	= 'PFR') then
				ie_tipo_complemento_w	:= 1;
				ie_tipo_pessoa_w	:= 'PF';
			elsif (ie_tipo_endereco_w	= 'PFC') then
				ie_tipo_complemento_w	:= 2;
				ie_tipo_pessoa_w	:= 'PF';
			end if;

			nr_seq_regiao_w := null;

			if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') and (ie_tipo_pessoa_w = 'PJ') then
				if (ie_tipo_complemento_w > 0) then
					select	max(nr_seq_regiao)
					into STRICT	nr_seq_regiao_w
					from	pessoa_juridica_compl
					where	cd_cgc			= cd_cgc_w
					and	ie_tipo_complemento 	= ie_tipo_complemento_w;
				else
					select	max(nr_seq_regiao)
					into STRICT	nr_seq_regiao_w
					from	pessoa_juridica
					where	cd_cgc 		= cd_cgc_w;
				end if;

			elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and (ie_tipo_pessoa_w = 'PF') then
				if (nr_seq_compl_pf_tel_adic_w IS NOT NULL AND nr_seq_compl_pf_tel_adic_w::text <> '') then
					select	max(nr_seq_regiao)
					into STRICT	nr_seq_regiao_w
					from	compl_pf_tel_adic
					where	nr_sequencia	= nr_seq_compl_pf_tel_adic_w;
				else
					if (ie_tipo_complemento_w > 0) then
						select	max(nr_seq_regiao)
						into STRICT	nr_seq_regiao_w
						from	compl_pessoa_fisica
						where	cd_pessoa_fisica	= cd_pessoa_fisica_w
						and	ie_tipo_complemento	= ie_tipo_complemento_w;
					end if;
				end if;
			end if;

			if (nr_seq_regiao_w IS NOT NULL AND nr_seq_regiao_w::text <> '') then
				select	max(ds_regiao)
				into STRICT	ds_regiao_w
				from	sus_municipio_regiao
				where	nr_sequencia = nr_seq_regiao_w;
			end if;

			if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') or (cd_cgc_prestador_w IS NOT NULL AND cd_cgc_prestador_w::text <> '') then
				ds_razao_social_w := substr(obter_dados_pf_pj( null, coalesce(cd_cgc_w,cd_cgc_prestador_w),'N'),1,80);
			end if;

			if (ie_apalc_w = 'S') then
				ds_qualificacoes_agrupadas_w := ds_qualificacoes_agrupadas_w ||' [AP]';
			end if;

			if (ie_adicq_w = 'S') then
				ds_qualificacoes_agrupadas_w := ds_qualificacoes_agrupadas_w ||' [AD]';
			end if;

			if (ie_aona_w = 'S') then
				ds_qualificacoes_agrupadas_w := ds_qualificacoes_agrupadas_w ||' [AO]';
			end if;

			if (ie_acba_w = 'S') then
				ds_qualificacoes_agrupadas_w := ds_qualificacoes_agrupadas_w ||' [AC]';
			end if;

			if (ie_aiqg_w = 'S') then
				ds_qualificacoes_agrupadas_w := ds_qualificacoes_agrupadas_w ||' [AI]';
			end if;

			if (ie_acreditacao_w = 'S') then
				ds_qualificacoes_agrupadas_w := ds_qualificacoes_agrupadas_w ||' [A]';
			end if;

			if (ie_outra_certif_w = 'S') then
				ds_qualificacoes_agrupadas_w := ds_qualificacoes_agrupadas_w ||' [G]';
			end if;

			if (ie_iso_w = 'S') then
				ds_qualificacoes_agrupadas_w := ds_qualificacoes_agrupadas_w ||' [I]';
			end if;

			if (ie_notivisa_w = 'S') then
				ds_qualificacoes_agrupadas_w := ds_qualificacoes_agrupadas_w ||' [N]';
			end if;

			if (ie_pos_grad_360_w = 'S') then
				ds_qualificacoes_agrupadas_w := ds_qualificacoes_agrupadas_w ||' [P]';
			end if;

			if (ie_residencia_w = 'S') then
				ds_qualificacoes_agrupadas_w := ds_qualificacoes_agrupadas_w ||' [R]';
			end if;

			if (ie_especialista_w = 'S') then
				ds_qualificacoes_agrupadas_w := ds_qualificacoes_agrupadas_w ||' [E]';
			end if;

			if (ie_qualiss_w = 'S') then
				ds_qualificacoes_agrupadas_w := ds_qualificacoes_agrupadas_w ||' [Q]';
			end if;

			if (ie_doutorado_w = 'S') then
				ds_qualificacoes_agrupadas_w := ds_qualificacoes_agrupadas_w ||' [D]';
			end if;

			if (ie_mestrado_w = 'S') then
				ds_qualificacoes_agrupadas_w := ds_qualificacoes_agrupadas_w ||' [M]';
			end if;

			insert into w_guia_medico_mala_direta(nr_sequencia,				nm_usuario,				dt_atualizacao,
				nm_usuario_nrec,			dt_atualizacao_nrec,			ds_municipio,
				ds_especialidade,			ie_prefixo,				nm_prestador,
				ds_endereco,				nr_endereco,				ds_complemento,
				cd_cep,					ds_bairro,				sg_estado,
				nr_ddd,					nr_telefone,				nr_ramal,
				ds_fone_adic,				nr_ddd_fax,				ds_fax,
				ds_email,				ds_website,				nm_medico,
				nr_crm,					ds_tipo_prestador,			ds_regiao,
				ie_apalc,				ie_adicq,				ie_aona,
				ie_acba,				ie_aiqg,				ie_notivisa,
				ie_pos_grad_360,			ie_residencia,				ie_especialista,
				ie_qualiss,				ds_qualificacoes_agrupadas,		nr_rqe,
				ie_acreditacao,				ie_outra_certif,			ie_iso,
				ie_doutorado,				ie_mestrado,				ds_razao_social)
			values (nextval('w_guia_medico_mala_direta_seq'),	nm_usuario_p,				clock_timestamp(),
				nm_usuario_p,				clock_timestamp(),				ds_municipio_w,
				ds_especialidade_w,			ie_prefixo_w,				nm_prestador_w,
				ds_endereco_w,				nr_endereco_w,				ds_complemento_w,
				cd_cep_w,				ds_bairro_w,				sg_estado_w,
				nr_ddd_w,				nr_telefone_w,				nr_ramal_w,
				ds_fone_adic_w,				nr_ddd_fax_w,				ds_fax_w,
				ds_email_w,				ds_website_w,				nm_medico_w,
				nr_crm_w,				ds_tipo_prestador_w,			ds_regiao_w,
				ie_apalc_w,				ie_adicq_w,				ie_aona_w,
				ie_acba_w,				ie_aiqg_w,				ie_notivisa_w,
				ie_pos_grad_360_w,			ie_residencia_w,			ie_especialista_w,
				ie_qualiss_w,				ds_qualificacoes_agrupadas_w,		nr_rqe_w,
				ie_acreditacao_w,			ie_outra_certif_w,			ie_iso_w,
				ie_doutorado_w,				ie_mestrado_w,				ds_razao_social_w);

		ds_qualificacoes_agrupadas_w := null;
		end if;
		end;
	end loop;
	close C01;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_guia_mala_direta ( nr_seq_tipo_guia_p bigint, ie_tipo_prestador_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

