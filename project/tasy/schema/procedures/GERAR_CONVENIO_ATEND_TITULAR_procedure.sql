-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_convenio_atend_titular ( nr_atendimento_p bigint, cd_convenio_agenda_p bigint, nm_usuario_p text, nr_seq_interno_p INOUT bigint, ie_excluir_p text default 'N') AS $body$
DECLARE


ie_tipo_convenio_w				smallint;
cd_pessoa_fisica_w				varchar(10);
dt_entrada_w					timestamp;
cd_localidade_w					integer;
cd_convenio_w					integer		:= null;
cd_categoria_w					varchar(10);
dt_inicio_vigencia_w			timestamp;
dt_final_vigencia_w				timestamp;
cd_usuario_convenio_w			varchar(30);
cd_empresa_w					bigint;
nr_doc_convenio_w				varchar(20);
nr_doc_conv_regra_w				varchar(20);
cd_tipo_acomodacao_w			smallint;
cd_tipo_acomodacao_regra_w		smallint;
cd_municipio_convenio_w			integer;
cd_convenio_glosa_w				integer;
cd_categoria_glosa_w			varchar(10);
dt_validade_carteira_w			timestamp;
nr_acompanhante_w				smallint;
cd_plano_convenio_w				varchar(10);
cd_dependente_w					smallint;
nr_seq_interno_w				bigint;
nr_seq_origem_w					bigint;
cd_senha_w						varchar(20);
ie_tipo_guia_w					varchar(2);
ds_observacao_w					varchar(255);
qt_dia_internacao_w				smallint;
qt_dia_internacao_ww			smallint;
dt_ultimo_pagto_w				timestamp;
ds_parametro_w					varchar(255);
ie_tipo_atendimento_w			smallint;
ie_rep_cod_usuario_w			varchar(10);
cd_complemento_w				varchar(30)	:= '';
cd_plano_padrao_w				varchar(10);
ie_gerar_cep_cadastro_w			varchar(05)	:= 'N';
ds_procedure_validacao_w		varchar(255)	:= null;
cd_estabelecimento_w			smallint;
cd_estabelecimento_ww			smallint;
ie_tipo_acomodacao_w			varchar(10);
ie_opcao_w						varchar(10);
cd_plano_eup_w					varchar(10);
ie_situacao_plano_w				varchar(01);
ds_erro_w						varchar(255);
ie_bloquear_atend_w				varchar(1);
ie_gerar_data_validade_w		varchar(1);
ie_grava_localidade_w			varchar(1);
ie_tipo_atend_lib_categ_w		varchar(1);
ie_gera_guia_regra_w			varchar(1);
ie_tipo_guia_regra_w			varchar(1);
ie_tipo_guia_atend_w			varchar(5);
qt_dieta_acomp_w				smallint;
ie_lib_dieta_w					varchar(15);
ie_exige_cpf_w					varchar(1);
ie_exige_cpf_paciente_w			varchar(1);
ie_calcula_dt_vigencia_w		varchar(1);
qt_idade_w						smallint;
cd_pessoa_responsavel_w			varchar(10);
cd_pf_menor_w					varchar(10);
nr_cpf_w						varchar(11);
ie_clinica_w					integer;
ie_atualiza_dias_internacao_w	varchar(1);
ie_aplica_digito_padrao_w		varchar(1);
ds_digitos_padrao_w				varchar(30);
cd_convenio_old_w				bigint;
nr_seq_regra_acomp_w			bigint;
ie_padrao_dados_conv_w			varchar(2);
ie_tipo_conveniado_w			atend_categoria_convenio.ie_tipo_conveniado%type;
nr_sequencia_w					pessoa_titular_convenio.nr_sequencia%type;
nr_prioridade_w					pessoa_titular_convenio.nr_prioridade%type;
nr_seq_episodio_w				episodio_paciente.nr_sequencia%type;
ie_autoriza_envio_convenio_w	varchar(1);

C01 CURSOR(dt_entrada_p  timestamp) FOR
	SELECT 	ptc.cd_convenio,
		ptc.cd_categoria,
		ptc.cd_usuario_convenio,
		ptc.cd_empresa_refer,
		ptc.dt_inicio_vigencia,
		ptc.dt_fim_vigencia,
		ptc.dt_validade_carteira,
		ptc.cd_plano_convenio,
		ptc.ie_tipo_conveniado,
		c.cd_convenio_glosa,
		c.cd_categoria_glosa,
		ptc.nr_sequencia,
		ptc.nr_prioridade
	from 	pessoa_titular_convenio ptc,
		convenio c
	where 	ptc.cd_pessoa_fisica = cd_pessoa_fisica_w
	and 	c.cd_convenio = ptc.cd_convenio
	and ((trunc(dt_entrada_p) between trunc(ptc.dt_inicio_vigencia) and trunc(ptc.dt_fim_vigencia))
			or (trunc(dt_entrada_p) >= trunc(ptc.dt_inicio_vigencia) and coalesce(ptc.dt_fim_vigencia::text, '') = ''))
	order by coalesce(ptc.nr_prioridade, 9999), ptc.nr_sequencia;


BEGIN
    if (ie_excluir_p = 'S')then
        delete FROM atend_categoria_convenio
        where nr_atendimento = nr_atendimento_p;
    end if;
	
	cd_estabelecimento_ww := coalesce(wheb_usuario_pck.get_cd_estabelecimento, 0);
	select	coalesce(max(obter_valor_param_usuario(916,   1, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'N'),
		coalesce(max(obter_valor_param_usuario(916,  86, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'N'),
		coalesce(max(obter_valor_param_usuario(916,  93, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'N'),
		coalesce(max(obter_valor_param_usuario(916, 112, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'N'),
		coalesce(max(obter_valor_param_usuario(916, 128, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'N'),
		coalesce(max(obter_valor_param_usuario(916, 295, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'S'),
		coalesce(max(obter_valor_param_usuario(916, 363, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'S'),
		coalesce(max(obter_valor_param_usuario(916, 375, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'N'),
		coalesce(max(obter_valor_param_usuario(916, 480, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'N'),
		coalesce(max(obter_valor_param_usuario(916, 501, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'N'),
		coalesce(max(obter_valor_param_usuario(916, 749, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'S'),
		coalesce(max(obter_valor_param_usuario(916, 716, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'N'),
		coalesce(max(obter_valor_param_usuario(916, 145, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_ww)), 'S')
	into STRICT ie_calcula_dt_vigencia_w,
		ie_gerar_cep_cadastro_w,
		ie_bloquear_atend_w,
		ie_tipo_acomodacao_w,
		ie_opcao_w,
		ie_gerar_data_validade_w,
		ie_grava_localidade_w,
		ie_gera_guia_regra_w,
		ie_tipo_guia_regra_w,
		ie_exige_cpf_w,
		ie_atualiza_dias_internacao_w,
		ie_aplica_digito_padrao_w,
		ie_padrao_dados_conv_w
	;

	nr_seq_interno_p := 0;

	select max(ie_tipo_convenio),
		max(cd_pessoa_fisica),
		max(dt_entrada),
		max(cd_localidade),
		max(ie_tipo_atendimento),
		max(a.cd_estabelecimento),
		coalesce(max(a.ie_clinica),0)
	into STRICT ie_tipo_convenio_w,
		cd_pessoa_fisica_w,
		dt_entrada_w,
		cd_localidade_w,
		ie_tipo_atendimento_w,
		cd_estabelecimento_w,
		ie_clinica_w
	from estabelecimento b,
		Atendimento_paciente a
	where a.cd_estabelecimento = b.cd_estabelecimento
	and	a.nr_atendimento = nr_atendimento_p;

	if (ie_grava_localidade_w = 'N') then
		cd_localidade_w	:= null;
	end if;

	if (ie_tipo_atendimento_w = 1) then
		ie_tipo_guia_w := 'I';
	elsif (ie_tipo_atendimento_w = 3) then
		ie_tipo_guia_w := 'C';
	elsif (ie_tipo_atendimento_w = 8) then
		if (ie_tipo_convenio_w = 3) then	
			ie_tipo_guia_w := 'A';
		else
			ie_tipo_guia_w := 'C';
		end if;
	else
		ie_tipo_guia_w := 'E';
	end if;

	select coalesce(max(a.cd_localidade),cd_localidade_w)
	into STRICT cd_municipio_convenio_w
	from sus_municipio b,
		cep_localidade a, 
		compl_pessoa_fisica c
	where a.nr_localidade = b.nr_localidade
		and	b.cd_municipio_ibge	= c.cd_municipio_ibge
		and	c.ie_tipo_complemento = 1
		and	c.cd_pessoa_fisica = cd_pessoa_fisica_w;

	open c01(dt_entrada_w);
	loop
	fetch c01 into
		cd_convenio_w,
		cd_categoria_w,
		cd_usuario_convenio_w,
		cd_empresa_w,
		dt_inicio_vigencia_w,
		dt_final_vigencia_w,
		dt_validade_carteira_w,
		cd_plano_convenio_w,
		ie_tipo_conveniado_w,
		cd_convenio_glosa_w,
		cd_categoria_glosa_w,
		nr_sequencia_w,
		nr_prioridade_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		
		if (coalesce(cd_categoria_w::text, '') = '') then
			select	min(cd_categoria)
			into STRICT	cd_categoria_w
			from 	categoria_convenio
			where	cd_convenio = cd_convenio_w
			and	substr(upper(ds_categoria),1,10) = 'PARTICULAR'
			and 	ie_situacao = 'A';

			if (coalesce(cd_categoria_w::text, '') = '') then
				select	min(cd_categoria)
				into STRICT	cd_categoria_w
				from 	categoria_convenio
				where	cd_convenio = cd_convenio_w
				and 	ie_situacao = 'A';
			end if;
		end if;

		select 	max(nr_seq_episodio)
		into STRICT	nr_seq_episodio_w
		from 	atendimento_paciente ap
		where 	nr_atendimento = nr_atendimento_p;

		if (nr_seq_episodio_w IS NOT NULL AND nr_seq_episodio_w::text <> '') then
			select 	coalesce(max('S'), 'N')
			into STRICT 	ie_autoriza_envio_convenio_w
			from 	atend_categoria_convenio
			where 	nr_atendimento in (	SELECT 	nr_atendimento
										from 	atendimento_paciente
										where 	nr_seq_episodio = nr_seq_episodio_w)
			and 	cd_convenio = cd_convenio_w
			and 	cd_categoria = cd_categoria_w
			and 	ie_autoriza_envio_convenio = 'S';

			if (ie_autoriza_envio_convenio_w = 'S') then
				update 	atend_categoria_convenio
				set 	ie_autoriza_envio_convenio = ie_autoriza_envio_convenio_w
				where 	nr_atendimento in (	SELECT	nr_atendimento
											from 	atendimento_paciente
											where 	nr_seq_episodio = nr_seq_episodio_w)
				and 	cd_convenio = cd_convenio_w
				and 	cd_categoria = cd_categoria_w;

				commit;
			end if;
		end if;

		nr_seq_interno_w := inserir_convenio_atendimento(
			nr_atendimento_p, cd_convenio_agenda_p, nm_usuario_p, cd_pessoa_fisica_w, dt_entrada_w, cd_convenio_w, cd_categoria_w, dt_inicio_vigencia_w, dt_final_vigencia_w, cd_usuario_convenio_w, cd_empresa_w, nr_doc_convenio_w, nr_doc_conv_regra_w, cd_tipo_acomodacao_w, cd_tipo_acomodacao_regra_w, cd_municipio_convenio_w, cd_convenio_glosa_w, cd_categoria_glosa_w, dt_validade_carteira_w, nr_acompanhante_w, cd_plano_convenio_w, cd_dependente_w, nr_seq_origem_w, cd_senha_w, ie_tipo_guia_w, ds_observacao_w, qt_dia_internacao_w, qt_dia_internacao_ww, dt_ultimo_pagto_w, ie_tipo_atendimento_w, ie_rep_cod_usuario_w, cd_complemento_w, cd_plano_padrao_w, ie_gerar_cep_cadastro_w, ds_procedure_validacao_w, cd_estabelecimento_w, ie_tipo_acomodacao_w, ie_opcao_w, cd_plano_eup_w, ie_situacao_plano_w, ds_erro_w, ie_bloquear_atend_w, ie_gerar_data_validade_w, ie_tipo_atend_lib_categ_w, ie_gera_guia_regra_w, ie_tipo_guia_regra_w, ie_tipo_guia_atend_w, qt_dieta_acomp_w, ie_lib_dieta_w, ie_exige_cpf_w, ie_calcula_dt_vigencia_w, qt_idade_w, cd_pessoa_responsavel_w, cd_pf_menor_w, ie_clinica_w, ie_atualiza_dias_internacao_w, ie_aplica_digito_padrao_w, ds_digitos_padrao_w, cd_convenio_old_w, nr_seq_regra_acomp_w, ie_padrao_dados_conv_w, ie_tipo_conveniado_w, ie_autoriza_envio_convenio_w, nr_seq_interno_w);
		end;
	end loop;
	close c01;
	nr_seq_interno_p := nr_seq_interno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_convenio_atend_titular ( nr_atendimento_p bigint, cd_convenio_agenda_p bigint, nm_usuario_p text, nr_seq_interno_p INOUT bigint, ie_excluir_p text default 'N') FROM PUBLIC;

