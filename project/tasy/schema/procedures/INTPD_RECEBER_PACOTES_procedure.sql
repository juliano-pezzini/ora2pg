-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE intpd_receber_pacotes ( nr_sequencia_p bigint, xml_p xml) AS $body$
DECLARE


_ora2pg_r RECORD;
ie_conversao_w			intpd_eventos_sistema.ie_conversao%type;
nr_seq_projeto_xml_w		intpd_eventos_sistema.nr_seq_projeto_xml%type;
nr_seq_sistema_w		intpd_eventos_sistema.nr_seq_sistema%type;
reg_integracao_w		gerar_int_padrao.reg_integracao_conv;
nr_seq_regra_w			conversao_meio_externo.nr_seq_regra%type;
pacote_w			pacote%rowtype;
pacote_material_w		pacote_material%rowtype;
pacote_procedimento_w		pacote_procedimento%rowtype;
procedimento_w			procedimento%rowtype;
pacote_material_subst_w		pacote_material_subst%rowtype;
pacote_procedimento_subst_w	pacote_procedimento_subst%rowtype;
ds_erro_w			varchar(4000);
ie_sistema_externo_w		varchar(15);
ie_erro_w 			varchar(1) := 'N';
ie_exception_w			varchar(1) := 'N';
i				integer;
qt_registros_w			bigint;
ie_ajustar_ins_upd_w		intpd_eventos_sistema.ie_ajustar_ins_upd%type;
ie_ajustar_upd_ins_w		intpd_eventos_sistema.ie_ajustar_upd_ins%type;

/*
Estrutura

open c01: PAQUETE
|	open C02: PAQUETE_ITEMS
		open C04: SUBSTITUTE_MATERIAL
		close 04
|	close C02
|
|	open c03: PAQUETE_PROCEDURES
		open C05: SUBSTITUTE_PROCEDURE
		close 05
|	close c03
close c01
*/
c01 CURSOR FOR
SELECT	*
from	xmltable('/STRUCTURE/PAQUETE' passing xml_p columns
		ie_action			varchar(40)	path	'IE_ACTION',
		cd_estabelecimento		smallint		path	'CD_ESTABLISHMENT',
		cd_proced_pacote	varchar(80)	path	'CD_PACKAGE_PROCED',
		ds_observacao		varchar(255)	path	'DS_OBSERVATION',
		dt_atualizacao		varchar(15)	path	'DT_UPDATE',
		ie_agendavel		varchar(1)	path	'IE_SCHEDULABLE',
		ie_origem_proced		bigint	path	'IE_ORIGEM_PROCED',
		ie_pacote_automatico	varchar(1)	path	'IE_AUTOMATIC_PACKAGE',
		ie_prioridade		bigint	path	'IE_PRIORITY',
		nm_usuario		varchar(15)	path	'NM_USER',
		cd_convenio		integer		path	'CD_INSURANCE',
		cd_cnpj_convenio	varchar(14)	path	'CD_LEGAL_ENTITY_INSURANCE',
		ie_situacao		varchar(1)	path	'IE_SITUATION',
		nr_seq_pacote		bigint	path	'NR_SEQ_PACKAGE');

c01_w	c01%rowtype;

c02 CURSOR FOR
SELECT	*
from	xmltable('/STRUCTURE/PAQUETE/PAQUETE_ITEMS/PAQUETE_ITEM' passing xml_p columns
		ie_action			varchar(40)	path	'IE_ACTION',
		ie_inclui_exclui		varchar(1)	path	'IE_INCLUDES_EXCLUDES',
		ie_tipo_setor		varchar(3)	path	'IE_DEPARTMENT_TYPE',
		ie_valor			varchar(1)	path	'IE_VALUE',
		nm_usuario		varchar(15)	path	'NM_USER',
		dt_atualizacao		varchar(15)	path	'DT_UPDATE',
		pr_desconto		double precision	path	'PR_DISCOUNT',
		vl_maximo		double precision	path	'VL_MAXIMUM',
		vl_minimo			double precision	path	'VL_MINIMUM',
		cd_grupo_material		smallint	path	'CD_MATERIAL_GROUP',
		cd_subgrupo_material	smallint	path	'CD_MATERIAL_SUBGROUP',
		cd_classe_material		integer	path	'CD_MATERIAL_CLASS',
		cd_material		varchar(20)	path	'CD_MATERIAL',
		nr_seq_familia		bigint	path	'NR_SEQ_FAMILY',
		nr_seq_estrutura		bigint	path	'NR_SEQ_STRUCTURE',
		cd_setor_atendimento	integer	path	'CD_EPISODE_DEPARTMENT',
		cd_centro_custo		integer	path	'CD_COST_CENTER',
		ie_excedente		smallint	path	'IE_EXCEEDS',
		qt_limite			double precision	path	'QT_LIMIT',
		vl_negociado		double precision	path	'VL_NEGOTIATED',
		ie_sexo			varchar(1)	path	'IE_GENDER',
		xml_materiais_subst	xml		path	'SUBSTITUTE_MATERIALS');
c02_w	c02%rowtype;

c03 CURSOR FOR
SELECT	*
from	xmltable('/STRUCTURE/PAQUETE/PAQUETE_PROCEDURES/PAQUETE_PROCEDURE' passing xml_p columns
		ie_action			varchar(40)	path	'IE_ACTION',
		ie_inclui_exclui		varchar(1)	path	'IE_INCLUDES_EXCLUDES',
		ie_tipo_atendimento		smallint		path	'IE_EPISODE_TYPE',
		ie_tipo_valor		varchar(3)	path	'IE_VALUE_TYPE',
		nm_usuario		varchar(15)	path	'NM_USER',
		dt_atualizacao		varchar(15)	path	'DT_UPDATE',
		pr_desconto			double precision	path	'PR_DISCOUNT',
		vl_maximo		double precision	path	'VL_MAXIMUM',
		vl_minimo			double precision	path	'VL_MINIMUM',
		cd_area_proced		bigint	path	'CD_PROCEDURE_AREA',
		cd_especial_proced	bigint	path	'CD_PROCEDURE_SPECIALTY',
		cd_grupo_proced		bigint	path	'CD_PROCEDURE_GROUP',
		nr_seq_proc_interno	bigint	path	'CD_INTERNAL_PROCEDURE',
		cd_procedimento		varchar(80)	path	'CD_PROCEDURE',
		cd_setor_atendimento	integer		path	'CD_EPISODE_DEPARTMENT',
		cd_centro_custo		integer		path	'CD_COST_CENTER',
		ie_excedente		smallint		path	'IE_EXCEEDS',
		qt_limite		double precision	path	'QT_LIMIT',
		vl_negociado		double precision	path	'VL_NEGOTIATED',
		ie_sexo			varchar(1)	path	'IE_GENDER',
		cd_medico		varchar(10)	path	'CD_PHYSICIAN',
		xml_procedimentos_subst	xml		path	'SUBSTITUTE_PROCEDURES');
c03_w	c03%rowtype;


c04 CURSOR FOR
SELECT	*
from	xmltable('/SUBSTITUTE_MATERIALS/SUBSTITUTE_MATERIAL' passing c02_w.xml_materiais_subst columns
		ie_action		varchar(40)	path	'IE_ACTION',
		cd_material		varchar(20)	path	'CD_MATERIAL',
		nm_usuario		varchar(15)	path	'NM_USER',
		dt_atualizacao		varchar(15)	path	'DT_UPDATE');
c04_w	c04%rowtype;

c05 CURSOR FOR
SELECT	*
from	xmltable('/SUBSTITUTE_PROCEDURES/SUBSTITUTE_PROCEDURE' passing c03_w.xml_procedimentos_subst columns
		ie_action		varchar(40)	path	'IE_ACTION',
		cd_procedimento		varchar(80)	path	'CD_PROCEDURE',
		nm_usuario		varchar(15)	path	'NM_USER',
		dt_atualizacao		varchar(15)	path	'DT_UPDATE');
c05_w	c05%rowtype;


BEGIN

update	intpd_fila_transmissao
set	ie_status = 'R'
where	nr_sequencia = nr_sequencia_p;

commit;

begin
select	coalesce(b.ie_conversao,'I'),
	nr_seq_sistema,
	nr_seq_projeto_xml,
	nr_seq_regra_conv,
	ie_ajustar_ins_upd,
	ie_ajustar_upd_ins
into STRICT	ie_conversao_w,
	nr_seq_sistema_w,
	nr_seq_projeto_xml_w,
	nr_seq_regra_w,
	ie_ajustar_ins_upd_w,
	ie_ajustar_upd_ins_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and	a.nr_sequencia = nr_sequencia_p;

ie_sistema_externo_w := nr_seq_sistema_w;

reg_integracao_w.nr_seq_fila_transmissao	:=	nr_sequencia_p;
reg_integracao_w.ie_envio_recebe		:=	'R';
reg_integracao_w.ie_sistema_externo		:=	ie_sistema_externo_w;
reg_integracao_w.ie_conversao		:=	ie_conversao_w;
reg_integracao_w.nr_seq_projeto_xml		:=	nr_seq_projeto_xml_w;
reg_integracao_w.nr_seq_regra_conversao	:=	nr_seq_regra_w;
reg_integracao_w.intpd_log_receb.delete;
reg_integracao_w.qt_reg_log			:=	0;

open c01;
loop
fetch c01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	reg_integracao_w.nm_elemento	:= 'PAQUETE';
	reg_integracao_w.nm_tabela	:= 'PACOTE';
	reg_integracao_w.nr_seq_visao	:= 27638;

	if (coalesce(upper(c01_w.ie_action),'INSERT') <> 'DELETE') then
		begin

		select 	count(*)
		into STRICT	qt_registros_w
		from 	pacote
		where 	nr_seq_pacote = c01_w.nr_seq_pacote;

		if (coalesce(upper(c01_w.ie_action),'INSERT') = 'INSERT') and (qt_registros_w > 0) and (ie_ajustar_ins_upd_w = 'N') then /*Quando o sistema externo manda um INSERT mas o registro já existe no Tasy. Neste caso se o campo IE_AJUSTAR_INS_UPD está para N, retornaremos mensagem de erro para o sistema externo.*/
			begin
			intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_texto(1048637),'INTPDTASY','0014');
			ie_erro_w := 'S';
			/*Já há um pacote cadastrado com esses dados, portanto não é possível realizar a inserção. Favor enviar uma operação de "Update" caso queira atualizar este registro no Tasy.*/

			end;
		end if;

		if (coalesce(upper(c01_w.ie_action),'INSERT') = 'UPDATE') then
			begin

			if (qt_registros_w = 0) then
				begin
				if (ie_ajustar_upd_ins_w = 'N') then /*Quando o sistema externo manda um UPDATE mas o registro não existe no Tasy. Neste caso se o campo IE_AJUSTAR_UPD_INS_W está para N, retornaremos mensagem de erro para o sistema externo.*/
					intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_texto(1048562),'INTPDTASY','0013');
					ie_erro_w := 'S';
					/*Não há no sistema pacote com este código, portanto não é possível realizar a alteração. Favor enviar uma operação de "Insert" caso queira adicionar este registro no Tasy.*/

				end if;
				end;
			end if;
			end;
		end if;

		if (ie_erro_w = 'N') then
			begin

			select	coalesce(max(cd_procedimento),0)
			into STRICT	pacote_w.cd_proced_pacote
			from	procedimento
			where	cd_tipo_procedimento = 142 /*Domínio 95: Opção 142 - Pacote*/
			and	cd_sistema_ant = c01_w.cd_proced_pacote;

			if (pacote_w.cd_proced_pacote > 0) then
				select	max(ie_origem_proced)
				into STRICT	pacote_w.ie_origem_proced
				from 	procedimento
				where	cd_procedimento = pacote_w.cd_proced_pacote;
			else
				intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_Texto(1030495, 'CD_SISTEMA_ANT_W='|| procedimento_w.cd_sistema_ant),'INTPDTASY','0004');
				--Não existe nenhum procedimento do tipo "Pacote" registrado no Tasy com o código do sistema externo #@CD_SISTEMA_ANT_W#@.
				ie_erro_w := 'S';
			end if;
			end;
		end if;

		if (ie_erro_w = 'N') then
			begin

			begin
			/*Busca o registro atual do Tasy pela PK
			Esse tratamento foi necessário porque quando é update, o sistema externo só envia as informações alteradas e o restante dos campos eles mandam vazio. Então temos que buscar a informação que já está gravada na tabela.*/
			select	*
			into STRICT	pacote_w
			from	pacote
			where 	nr_seq_pacote = c01_w.nr_seq_pacote;
			exception
			when others then
				null;
			end;

			if (c01_w.cd_convenio IS NOT NULL AND c01_w.cd_convenio::text <> '') then
				SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CONVENIO', c01_w.cd_convenio, 'S', pacote_w.cd_convenio) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_w.cd_convenio := _ora2pg_r.ds_valor_retorno_p;
			elsif (c01_w.cd_cnpj_convenio IS NOT NULL AND c01_w.cd_cnpj_convenio::text <> '') then
				begin
				select	count(*)
				into STRICT	qt_registros_w
				from	pessoa_juridica
				where	cd_cgc = c01_w.cd_cnpj_convenio;

				if (qt_registros_w = 0) then

					intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_Texto(301973, 'CODIGOFORNECEDOR_W='|| c01_w.cd_cnpj_convenio),'INTPDTASY','0004');
					--Não existe pessoa jurídica cadastrada no Tasy com CNPJ #@CODIGOFORNECEDOR_W#@
					ie_erro_w := 'S';
				else
					select	coalesce(max(cd_convenio),0)
					into STRICT	pacote_w.cd_convenio
					from	convenio
					where	cd_cgc = c01_w.cd_cnpj_convenio
					and	ie_situacao = 'A';

					if (pacote_w.cd_convenio = 0) then
						intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_Texto(1032525, 'CODIGOFORNECEDOR_W='|| c01_w.cd_cnpj_convenio),'INTPDTASY','0012');
						--886917 - Não existe nenhum convênio vinculado com o código da pessoa jurídica #@CODIGOFORNECEDOR_W#@.
						ie_erro_w := 'S';
					end if;
				end if;
				end;
			else
				intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_Texto(1032526),'INTPDTASY','0002');
				--886925 - Favor preencher a tag CD_INSURANCE ou CD_LEGAL_ENTITY_INSURANCE para vincular o pacote com o convênio..
				ie_erro_w := 'S';
			end if;

			if (ie_erro_w = 'N') then
				begin
				SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_SITUACAO', c01_w.ie_situacao, 'N', pacote_w.ie_situacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_w.ie_situacao := _ora2pg_r.ds_valor_retorno_p;
				SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_ESTABELECIMENTO', c01_w.cd_estabelecimento, 'S', pacote_w.cd_estabelecimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_w.cd_estabelecimento := _ora2pg_r.ds_valor_retorno_p;
				SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_OBSERVACAO', c01_w.ds_observacao, 'N', pacote_w.ds_observacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_w.ds_observacao := _ora2pg_r.ds_valor_retorno_p;
				SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_AGENDAVEL', c01_w.ie_agendavel, 'N', pacote_w.ie_agendavel) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_w.ie_agendavel := _ora2pg_r.ds_valor_retorno_p;
				SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_PACOTE_AUTOMATICO', c01_w.ie_pacote_automatico, 'N', pacote_w.ie_pacote_automatico) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_w.ie_pacote_automatico := _ora2pg_r.ds_valor_retorno_p;
				SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_PRIORIDADE', c01_w.ie_prioridade, 'N', pacote_w.ie_prioridade) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_w.ie_prioridade := _ora2pg_r.ds_valor_retorno_p;
				SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c01_w.nm_usuario, 'N', pacote_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;
				SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ATUALIZACAO', c01_w.dt_atualizacao, 'N', pacote_w.dt_atualizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_w.dt_atualizacao := _ora2pg_r.ds_valor_retorno_p;

				if (reg_integracao_w.qt_reg_log = 0) then
					begin

					if (coalesce(pacote_w.nr_seq_pacote,0) > 0) then /*Sistema externo manda a sequencia do pacote, e o Tasy atualizar o pacote*/
						begin

						update	pacote
						set	row = pacote_w
						where	nr_seq_pacote = pacote_w.nr_seq_pacote;

						/*Quando recebe ou ativa o pacote, ativa o procedimento.*/

						if (pacote_w.ie_situacao = 'A') then
							update	procedimento
							set	ie_situacao = 'A'
							where	cd_procedimento = pacote_w.cd_proced_pacote
							and	cd_tipo_procedimento = '142'
							and	ie_origem_proced = pacote_w.ie_origem_proced;
						else
							/*Quando inativa o pacote, o sistema inativa também o procedimento (mas so se nao tem nenhum outro pacote vinculado com o procedimento)*/

							select	count(*)
							into STRICT	qt_registros_w
							from	pacote
							where	cd_proced_pacote = pacote_w.cd_proced_pacote
							and	ie_situacao = 'A'
							and	nr_seq_pacote <> pacote_w.nr_seq_pacote;

							if (qt_registros_w = 0) then

								update	procedimento
								set	ie_situacao = pacote_w.ie_situacao
								where	cd_procedimento = pacote_w.cd_proced_pacote
								and	cd_tipo_procedimento = '142';
							end if;
						end if;
						end;

					else	/*Inserir pacote*/
						begin

						pacote_w.dt_atualizacao_nrec	:= pacote_w.dt_atualizacao;
						pacote_w.nm_usuario_nrec 	:= pacote_w.nm_usuario;

						select	nextval('pacote_seq')
						into STRICT	pacote_w.nr_seq_pacote
						;

						insert into pacote values (pacote_w.*);

						update	procedimento
						set	ie_situacao = 'A'
						where	cd_procedimento = pacote_w.cd_proced_pacote
						and	cd_tipo_procedimento = '142'
						and	ie_origem_proced = pacote_w.ie_origem_proced;
						end;

					end if;
					end;

					open c02;
					loop
					fetch c02 into
						c02_w;
					EXIT WHEN NOT FOUND; /* apply on c02 */
						begin

						reg_integracao_w.nm_elemento	:= 'PAQUETE_ITEM';
						reg_integracao_w.nm_tabela	:= 'PACOTE_MATERIAL';
						reg_integracao_w.nr_seq_visao	:= 27641;

						if (ie_erro_w = 'N') then

							begin
							if (coalesce(upper(c02_w.ie_action),'INSERT') <> 'DELETE') then
								begin

								select	coalesce(max(cd_material),0)
								into STRICT	pacote_material_w.cd_material
								from	material
								where	cd_sistema_ant = c02_w.cd_material;

								if (pacote_material_w.cd_material = 0) then
									intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_Texto(450093, 'CD_MATERIAL_INT_W='|| c02_w.cd_material),'INTPDTASY','0004');
									--Não existe no sistema um material cujo o código do sistema externo seja #@CD_MATERIAL_INT_W#@.
									ie_erro_w := 'S';
								end if;

								if (ie_erro_w = 'N') then
									begin

									begin
									/*'Busca o registro atual do Tasy pela PK'
									Esse tratamento foi necessário porque quando é update, o sistema externo só envia as informações alteradas e o restante dos campos eles mandam vazio. Então temos que buscar a informação que já está gravada na tabela.*/
									select	*
									into STRICT	pacote_material_w
									from	pacote_material
									where	nr_seq_pacote 	= pacote_w.nr_seq_pacote
									and	cd_material 	= pacote_material_w.cd_material  LIMIT 1;
									exception
									when others then
										null;
									end;

									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_GRUPO_MATERIAL', c02_w.cd_grupo_material, 'S', pacote_material_w.cd_grupo_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_material_w.cd_grupo_material := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_SUBGRUPO_MATERIAL', c02_w.cd_subgrupo_material, 'S', pacote_material_w.cd_subgrupo_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_material_w.cd_subgrupo_material := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CLASSE_MATERIAL', c02_w.cd_classe_material, 'S', pacote_material_w.cd_classe_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_material_w.cd_classe_material := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_SETOR_ATENDIMENTO', c02_w.cd_setor_atendimento, 'S', pacote_material_w.cd_setor_atendimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_material_w.cd_setor_atendimento := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CENTRO_CUSTO', c02_w.cd_centro_custo, 'S', pacote_material_w.cd_centro_custo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_material_w.cd_centro_custo := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_INCLUI_EXCLUI', c02_w.ie_inclui_exclui, 'N', pacote_material_w.ie_inclui_exclui) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_material_w.ie_inclui_exclui := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_TIPO_SETOR', c02_w.ie_tipo_setor, 'N', pacote_material_w.ie_tipo_setor) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_material_w.ie_tipo_setor := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_VALOR', c02_w.ie_valor, 'N', pacote_material_w.ie_valor) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_material_w.ie_valor := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'PR_DESCONTO', c02_w.pr_desconto, 'N', pacote_material_w.pr_desconto) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_material_w.pr_desconto := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_MAXIMO', c02_w.vl_maximo, 'N', pacote_material_w.vl_maximo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_material_w.vl_maximo := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_MINIMO', c02_w.vl_minimo, 'N', pacote_material_w.vl_minimo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_material_w.vl_minimo := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_FAMILIA', c02_w.nr_seq_familia, 'N', pacote_material_w.nr_seq_familia) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_material_w.nr_seq_familia := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_ESTRUTURA', c02_w.nr_seq_estrutura, 'N', pacote_material_w.nr_seq_estrutura) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_material_w.nr_seq_estrutura := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_EXCEDENTE', c02_w.ie_excedente, 'N', pacote_material_w.ie_excedente) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_material_w.ie_excedente := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_LIMITE', c02_w.qt_limite, 'N', pacote_material_w.qt_limite) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_material_w.qt_limite := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_NEGOCIADO', c02_w.vl_negociado, 'N', pacote_material_w.vl_negociado) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_material_w.vl_negociado := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_SEXO', c02_w.ie_sexo, 'N', pacote_material_w.ie_sexo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_material_w.ie_sexo := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c02_w.nm_usuario, 'N', pacote_material_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_material_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ATUALIZACAO', c02_w.dt_atualizacao, 'N', pacote_material_w.dt_atualizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_material_w.dt_atualizacao := _ora2pg_r.ds_valor_retorno_p;

									pacote_material_w.nr_seq_pacote := pacote_w.nr_seq_pacote;

									if (reg_integracao_w.qt_reg_log = 0) then

										select	coalesce(max(nr_sequencia),0)
										into STRICT	pacote_material_w.nr_sequencia
										from	pacote_material
										where	nr_seq_pacote 	= pacote_w.nr_seq_pacote
										and	cd_material 	= pacote_material_w.cd_material;

										if (pacote_material_w.nr_sequencia > 0) then
											update	pacote_material
											set	row = pacote_material_w
											where	nr_sequencia = pacote_material_w.nr_sequencia;
										else
											select	nextval('pacote_material_seq')
											into STRICT	pacote_material_w.nr_sequencia
											;

											insert into pacote_material values (pacote_material_w.*);
										end if;
									end if;
									end;
								end if;

								open C04;
								loop
								fetch C04 into
									c04_w;
								EXIT WHEN NOT FOUND; /* apply on C04 */
									begin

									reg_integracao_w.nm_elemento	:= 'SUBSTITUTE_MATERIAL';
									reg_integracao_w.nm_tabela	:= 'PACOTE_MATERIAL_SUBST';
									reg_integracao_w.nr_seq_visao	:= 98723;

									if (coalesce(upper(c04_w.ie_action),'INSERT') <> 'DELETE') then
										begin

										select	coalesce(max(cd_material),0)
										into STRICT	pacote_material_subst_w.cd_material
										from	material
										where	cd_sistema_ant = c04_w.cd_material;

										if (pacote_material_subst_w.cd_material = 0) then
											intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_Texto(450093, 'CD_MATERIAL_INT_W='|| c04_w.cd_material),'INTPDTASY','0004');
											--Não existe no sistema um material cujo o código do sistema externo seja #@CD_MATERIAL_INT_W#@.
											ie_erro_w := 'S';
										end if;

										if (ie_erro_w = 'N') then
											begin

											SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c04_w.nm_usuario, 'N', pacote_material_subst_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_material_subst_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;
											SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ATUALIZACAO', c04_w.dt_atualizacao, 'N', pacote_material_subst_w.dt_atualizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_material_subst_w.dt_atualizacao := _ora2pg_r.ds_valor_retorno_p;

											pacote_material_subst_w.nr_seq_pacote 		:= pacote_w.nr_seq_pacote;
											pacote_material_subst_w.nr_seq_material 	:= pacote_material_w.nr_sequencia;

											if (reg_integracao_w.qt_reg_log = 0) then

												select	coalesce(max(nr_sequencia),0)
												into STRICT	pacote_material_subst_w.nr_sequencia
												from	pacote_material_subst
												where	nr_seq_pacote 	= pacote_w.nr_seq_pacote
												and	nr_seq_material = pacote_material_w.nr_sequencia
												and	cd_material 	= pacote_material_subst_w.cd_material;

												if (pacote_material_subst_w.nr_sequencia > 0) then
													update	pacote_material_subst
													set	row = pacote_material_subst_w
													where	nr_sequencia = pacote_material_subst_w.nr_sequencia;
												else
													select	nextval('pacote_material_subst_seq')
													into STRICT	pacote_material_subst_w.nr_sequencia
													;

													pacote_material_subst_w.nm_usuario_nrec		:= pacote_material_subst_w.nm_usuario;
													pacote_material_subst_w.dt_atualizacao_nrec	:= pacote_material_subst_w.dt_atualizacao;

													insert into pacote_material_subst values (pacote_material_subst_w.*);
												end if;
											end if;
											end;
										end if;
										end;
									else /*Delete*/
										begin
										select	coalesce(max(cd_material),0)
										into STRICT	pacote_material_subst_w.cd_material
										from	material
										where	cd_sistema_ant = c04_w.cd_material;

										if (pacote_material_subst_w.cd_material = 0) then
											intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_Texto(450093, 'CD_MATERIAL_INT_W='|| c04_w.cd_material),'INTPDTASY','0004');
											--Não existe no sistema um material cujo o código do sistema externo seja #@CD_MATERIAL_INT_W#@.
											ie_erro_w := 'S';
										else
											select	coalesce(max(nr_sequencia),0)
											into STRICT	pacote_material_subst_w.nr_sequencia
											from	pacote_material_subst
											where	nr_seq_pacote 	= pacote_w.nr_seq_pacote
											and	nr_seq_material = pacote_material_w.nr_sequencia
											and	cd_material 	= pacote_material_subst_w.cd_material;

											if (pacote_material_subst_w.nr_sequencia > 0) THEN
												delete	FROM pacote_material_subst
												where	nr_sequencia = pacote_material_subst_w.nr_sequencia;
											end if;
										end if;
										end;
									end if;
									end;
								end loop;
								close C04;
								end;

							else /*Delete*/
								select	coalesce(max(cd_material),0)
								into STRICT	pacote_material_w.cd_material
								from	material
								where	cd_sistema_ant = c02_w.cd_material;

								if (pacote_material_w.cd_material = 0) then
									intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_Texto(450093, 'CD_MATERIAL_INT_W='|| c02_w.cd_material),'INTPDTASY','0004');
									--Não existe no sistema um material cujo o código do sistema externo seja #@CD_MATERIAL_INT_W#@.
									ie_erro_w := 'S';
								else

									select	coalesce(max(nr_sequencia),0)
									into STRICT	pacote_material_w.nr_sequencia
									from	pacote_material
									where	nr_seq_pacote 	= pacote_w.nr_seq_pacote
									and	cd_material 	= pacote_material_w.cd_material;

									if (pacote_material_w.nr_sequencia > 0) then
										delete	FROM pacote_material
										where	nr_sequencia = pacote_material_w.nr_sequencia;
									end if;
								end if;
							end if;
							end;
						end if;
						end;
					end loop;
					close c02;

					open c03;
					loop
					fetch c03 into
						c03_w;
					EXIT WHEN NOT FOUND; /* apply on c03 */
						begin

						reg_integracao_w.nm_elemento	:= 'PAQUETE_PROCEDURE';
						reg_integracao_w.nm_tabela	:= 'PACOTE_PROCEDIMENTO';
						reg_integracao_w.nr_seq_visao	:= 27642;

						if (ie_erro_w = 'N') then

							begin
							if (coalesce(upper(c03_w.ie_action),'INSERT') <> 'DELETE') then
								begin

								select	coalesce(max(cd_procedimento),0),
									max(ie_origem_proced)
								into STRICT	pacote_procedimento_w.cd_procedimento,
									pacote_procedimento_w.ie_origem_proced
								from	procedimento
								where	cd_sistema_ant = c03_w.cd_procedimento;

								if (pacote_procedimento_w.cd_procedimento = 0) then
									intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_Texto(1025268, 'CD_SISTEMA_ANT_W='|| c03_w.cd_procedimento),'INTPDTASY','0004');
									--Não existe nenhum procedimento registrado no Tasy com o código do sistema externo #@CD_SISTEMA_ANT_W#@.
									ie_erro_w := 'S';
								end if;

								if (ie_erro_w = 'N') then
									begin

									begin
									/*'Busca o registro atual do Tasy pela PK'
									Esse tratamento foi necessário porque quando é update, o sistema externo só envia as informações alteradas e o restante dos campos eles mandam vazio. Então temos que buscar a informação que já está gravada na tabela.*/
									select	*
									into STRICT	pacote_procedimento_w
									from	pacote_procedimento
									where	nr_seq_pacote 	= pacote_w.nr_seq_pacote
									and	cd_procedimento = pacote_procedimento_w.cd_procedimento  LIMIT 1;
									exception
									when others then
										null;
									end;

									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_AREA_PROCED', c03_w.cd_area_proced, 'S', pacote_procedimento_w.cd_area_proced) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_procedimento_w.cd_area_proced := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_ESPECIAL_PROCED', c03_w.cd_especial_proced, 'S', pacote_procedimento_w.cd_especial_proced) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_procedimento_w.cd_especial_proced := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_GRUPO_PROCED', c03_w.cd_grupo_proced, 'S', pacote_procedimento_w.cd_grupo_proced) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_procedimento_w.cd_grupo_proced := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_PROC_INTERNO', c03_w.nr_seq_proc_interno, 'S', pacote_procedimento_w.nr_seq_proc_interno) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_procedimento_w.nr_seq_proc_interno := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_SETOR_ATENDIMENTO', c03_w.cd_setor_atendimento, 'S', pacote_procedimento_w.cd_setor_atendimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_procedimento_w.cd_setor_atendimento := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CENTRO_CUSTO', c03_w.cd_centro_custo, 'S', pacote_procedimento_w.cd_centro_custo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_procedimento_w.cd_centro_custo := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_INCLUI_EXCLUI', c03_w.ie_inclui_exclui, 'N', pacote_procedimento_w.ie_inclui_exclui) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_procedimento_w.ie_inclui_exclui := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_TIPO_ATENDIMENTO', c03_w.ie_tipo_atendimento, 'N', pacote_procedimento_w.ie_tipo_atendimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_procedimento_w.ie_tipo_atendimento := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_TIPO_VALOR', c03_w.ie_tipo_valor, 'N', pacote_procedimento_w.ie_tipo_valor) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_procedimento_w.ie_tipo_valor := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'PR_DESCONTO', c03_w.pr_desconto, 'N', pacote_procedimento_w.pr_desconto) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_procedimento_w.pr_desconto := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_MAXIMO', c03_w.vl_maximo, 'N', pacote_procedimento_w.vl_maximo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_procedimento_w.vl_maximo := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_MINIMO', c03_w.vl_minimo, 'N', pacote_procedimento_w.vl_minimo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_procedimento_w.vl_minimo := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_EXCEDENTE', c03_w.ie_excedente, 'N', pacote_procedimento_w.ie_excedente) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_procedimento_w.ie_excedente := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_LIMITE', c03_w.qt_limite, 'N', pacote_procedimento_w.qt_limite) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_procedimento_w.qt_limite := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_NEGOCIADO', c03_w.vl_negociado, 'N', pacote_procedimento_w.vl_negociado) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_procedimento_w.vl_negociado := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_SEXO', c03_w.ie_sexo, 'N', pacote_procedimento_w.ie_sexo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_procedimento_w.ie_sexo := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_MEDICO', c03_w.cd_medico, 'S', pacote_procedimento_w.cd_medico) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_procedimento_w.cd_medico := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c03_w.nm_usuario, 'N', pacote_procedimento_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_procedimento_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;
									SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ATUALIZACAO', c03_w.dt_atualizacao, 'N', pacote_procedimento_w.dt_atualizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_procedimento_w.dt_atualizacao := _ora2pg_r.ds_valor_retorno_p;
									pacote_procedimento_w.ie_considera_honorario := 'S';
									pacote_procedimento_w.ie_calcula_honorario := 'S';
									pacote_procedimento_w.ie_calcula_custo_oper := 'S';
									pacote_procedimento_w.nr_seq_pacote := pacote_w.nr_seq_pacote;

									if (reg_integracao_w.qt_reg_log = 0) then

										select	coalesce(max(nr_sequencia),0)
										into STRICT	pacote_procedimento_w.nr_sequencia
										from	pacote_procedimento
										where	nr_seq_pacote 	= pacote_w.nr_seq_pacote
										and	cd_procedimento = pacote_procedimento_w.cd_procedimento;

										if (pacote_procedimento_w.nr_sequencia > 0) then
											update	pacote_procedimento
											set	row = pacote_procedimento_w
											where	nr_sequencia = pacote_procedimento_w.nr_sequencia;
										else
											select	nextval('pacote_procedimento_seq')
											into STRICT	pacote_procedimento_w.nr_sequencia
											;

											insert into pacote_procedimento values (pacote_procedimento_w.*);
										end if;
									end if;
									end;
								end if;


								open C05;
								loop
								fetch C05 into
									c05_w;
								EXIT WHEN NOT FOUND; /* apply on C05 */
									begin

									reg_integracao_w.nm_elemento	:= 'SUBSTITUTE_PROCEDURE';
									reg_integracao_w.nm_tabela	:= 'PACOTE_PROCEDIMENTO_SUBST';
									reg_integracao_w.nr_seq_visao	:= 98726;

									if (coalesce(upper(c05_w.ie_action),'INSERT') <> 'DELETE') then
										begin

										select	coalesce(max(cd_procedimento),0),
											max(ie_origem_proced)
										into STRICT	pacote_procedimento_subst_w.cd_procedimento,
											pacote_procedimento_subst_w.ie_origem_proced
										from	procedimento
										where	cd_sistema_ant = c05_w.cd_procedimento;

										if (pacote_procedimento_subst_w.cd_procedimento = 0) then
											intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_Texto(1025268, 'CD_SISTEMA_ANT_W='|| c05_w.cd_procedimento),'INTPDTASY','0004');
											--Não existe nenhum procedimento registrado no Tasy com o código do sistema externo #@CD_SISTEMA_ANT_W#@.
											ie_erro_w := 'S';
										end if;

										if (ie_erro_w = 'N') then
											begin

											SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c05_w.nm_usuario, 'N', pacote_procedimento_subst_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_procedimento_subst_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;
											SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ATUALIZACAO', c05_w.dt_atualizacao, 'N', pacote_procedimento_subst_w.dt_atualizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; pacote_procedimento_subst_w.dt_atualizacao := _ora2pg_r.ds_valor_retorno_p;

											pacote_procedimento_subst_w.nr_seq_pacote 		:= pacote_w.nr_seq_pacote;
											pacote_procedimento_subst_w.nr_seq_proc_pacote 		:= pacote_procedimento_w.nr_sequencia;

											if (reg_integracao_w.qt_reg_log = 0) then

												select	coalesce(max(nr_sequencia),0)
												into STRICT	pacote_procedimento_subst_w.nr_sequencia
												from	pacote_procedimento_subst
												where	nr_seq_pacote 		= pacote_w.nr_seq_pacote
												and	nr_seq_proc_pacote	= pacote_procedimento_w.nr_sequencia
												and	cd_procedimento		= pacote_procedimento_subst_w.cd_procedimento;

												if (pacote_procedimento_subst_w.nr_sequencia > 0) then
													update	pacote_procedimento_subst
													set	row = pacote_procedimento_subst_w
													where	nr_sequencia = pacote_procedimento_subst_w.nr_sequencia;
												else
													select	nextval('pacote_procedimento_subst_seq')
													into STRICT	pacote_procedimento_subst_w.nr_sequencia
													;

													pacote_procedimento_subst_w.nm_usuario_nrec		:= pacote_procedimento_subst_w.nm_usuario;
													pacote_procedimento_subst_w.dt_atualizacao_nrec		:= pacote_procedimento_subst_w.dt_atualizacao;

													insert into pacote_procedimento_subst values (pacote_procedimento_subst_w.*);
												end if;
											end if;
											end;
										end if;
										end;
									else /*Delete*/
										begin
										select	coalesce(max(cd_procedimento),0)
										into STRICT	pacote_procedimento_subst_w.cd_procedimento
										from	procedimento
										where	cd_sistema_ant = c05_w.cd_procedimento;

										if (pacote_procedimento_subst_w.cd_procedimento = 0) then
											intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_Texto(1025268, 'CD_SISTEMA_ANT_W='|| c05_w.cd_procedimento),'INTPDTASY','0004');
											--Não existe nenhum procedimento registrado no Tasy com o código do sistema externo #@CD_SISTEMA_ANT_W#@.
											ie_erro_w := 'S';
										else
											select	coalesce(max(nr_sequencia),0)
											into STRICT	pacote_procedimento_subst_w.nr_sequencia
											from	pacote_procedimento_subst
											where	nr_seq_pacote 		= pacote_w.nr_seq_pacote
											and	nr_seq_proc_pacote	= pacote_procedimento_w.nr_sequencia
											and	cd_procedimento		= pacote_procedimento_subst_w.cd_procedimento;

											if (pacote_procedimento_subst_w.nr_sequencia > 0) THEN
												delete	FROM pacote_procedimento_subst
												where	nr_sequencia = pacote_procedimento_subst_w.nr_sequencia;
											end if;
										end if;
										end;
									end if;
									end;
								end loop;
								close C05;
								end;
							else /*Delete*/
								begin
								select	coalesce(max(cd_procedimento),0)
								into STRICT	pacote_procedimento_w.cd_procedimento
								from	procedimento
								where	cd_sistema_ant = c03_w.cd_procedimento;

								if (pacote_procedimento_w.cd_procedimento = 0) then
									intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_Texto(1025268, 'CD_SISTEMA_ANT_W='|| c03_w.cd_procedimento),'INTPDTASY','0004');
									--Não existe nenhum procedimento registrado no Tasy com o código do sistema externo #@CD_SISTEMA_ANT_W#@.
									ie_erro_w := 'S';
								else

									select	coalesce(max(nr_sequencia),0)
									into STRICT	pacote_procedimento_w.nr_sequencia
									from	pacote_procedimento
									where	nr_seq_pacote 	= pacote_w.nr_seq_pacote
									and	cd_procedimento = pacote_procedimento_w.cd_procedimento;

									if (pacote_procedimento_w.nr_sequencia > 0) then
										delete	FROM pacote_procedimento
										where	nr_sequencia = pacote_procedimento_w.nr_sequencia;
									end if;
								end if;
								end;
							end if;
							end;
						end if;
						end;
					end loop;
					close c03;
				end if;
				end;
			end if;
			end;
		end if;
		end;
	else 	/*IE_ACTION = DELETE*/
		begin

		select 	count(*)
		into STRICT	qt_registros_w
		from 	pacote
		where 	nr_seq_pacote = c01_w.nr_seq_pacote;


		if (qt_registros_w = 0) then
			/*Código do pacote inválido ou inexistente no Tasy para alteração ou exclusão do registro.*/

			intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_texto(1030498),'INTPDTASY','0004');
			ie_erro_w := 'S';
		else
			begin

			select	coalesce(max(cd_proced_pacote),0)
			into STRICT	pacote_w.cd_proced_pacote
			from	pacote
			where	nr_seq_pacote = c01_w.nr_seq_pacote;

			begin
			delete from pacote
			where	nr_seq_pacote = c01_w.nr_seq_pacote;
			exception
			when others then
				update	pacote
				set	ie_situacao = 'I'
				where	nr_seq_pacote = c01_w.nr_seq_pacote;
			end;

			select	count(*)
			into STRICT	qt_registros_w
			from	pacote
			where	cd_proced_pacote = pacote_w.cd_proced_pacote
			and	ie_situacao = 'A'
			and	nr_seq_pacote <> c01_w.nr_seq_pacote;

			/*Se nao tem nenhum outro pacote vinculado com esse procedimento, pode inativar.*/

			if (qt_registros_w = 0) then
				update	procedimento
				set	ie_situacao = 'I'
				where	cd_procedimento = pacote_w.cd_proced_pacote
				and	cd_tipo_procedimento = '142';
			end if;
			end;
		end if;
		end;
	end if;
	end;
end loop;
close c01;

exception
when others then
	begin
	ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
	rollback;

	update	intpd_fila_transmissao
	set	ie_status	= 'E',
		cd_default_message 	= CASE WHEN ds_erro_w = NULL THEN null  ELSE '0005' END ,
		ds_log		= ds_erro_w,
		nr_doc_externo	= c01_w.cd_proced_pacote
	where	nr_sequencia	= nr_sequencia_p;

	ie_exception_w := 'S';

	end;
end;

if (ie_exception_w = 'N') then

	if	((reg_integracao_w.qt_reg_log > 0) or (ie_erro_w = 'S')) then
		begin
		rollback;

		update	intpd_fila_transmissao
		set	ie_status	= 'E',
			cd_default_message 	= CASE WHEN ds_erro_w = NULL THEN null  ELSE '0005' END ,
			ds_log		= ds_erro_w,
			nr_doc_externo	= c01_w.cd_proced_pacote
		where	nr_sequencia	= nr_sequencia_p;

		for i in 0..reg_integracao_w.qt_reg_log-1 loop
			intpd_gravar_log_recebimento(nr_sequencia_p,reg_integracao_w.intpd_log_receb[i].ds_log,'INTPDTASY',reg_integracao_w.intpd_log_receb[i].cd_default_message);
		end loop;
		end;
	else
		update	intpd_fila_transmissao
		set	ie_status 	 = 'S',
			cd_default_message = '0000',
			nr_seq_documento = coalesce(pacote_w.nr_seq_pacote,c01_w.nr_seq_pacote),
			nr_doc_externo 	= c01_w.cd_proced_pacote
		where	nr_sequencia	= nr_sequencia_p;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intpd_receber_pacotes ( nr_sequencia_p bigint, xml_p xml) FROM PUBLIC;

