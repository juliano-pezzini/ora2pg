-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_movto_cheque_cp (nr_seq_cheque_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_trans_fin_emissao_w	bigint;
nr_seq_conta_banco_w		bigint;
nr_seq_movto_trans_w		bigint;
vl_cheque_w			double precision;
cd_estabelecimento_w		smallint;
dt_emissao_w			timestamp;
dt_cancelamento_w		timestamp;
ie_banco_w			varchar(255);
cd_pessoa_destinatario_w	varchar(10);
cd_cgc_destinatario_w		varchar(14);
/* Projeto Multimoeda - Variáveis */

vl_cheque_estrang_w		double precision;
vl_complemento_w		double precision;
vl_cotacao_w			cotacao_moeda.vl_cotacao%type;
cd_moeda_w			integer;


BEGIN

if (coalesce(nr_seq_cheque_p,0) > 0) then

	select	a.nr_seq_trans_fin_emissao,
		a.nr_seq_conta_banco,
		a.cd_estabelecimento,
		a.vl_cheque,
		a.dt_emissao,
		a.dt_cancelamento,
		coalesce(b.ie_banco, 'N'),
		a.CD_PESSOA_DESTINATARIO,
		a.CD_CGC_DESTINATARIO,
		a.vl_cheque_estrang,
		a.vl_cotacao,
		a.cd_moeda
	into STRICT	nr_seq_trans_fin_emissao_w,
		nr_seq_conta_banco_w,
		cd_estabelecimento_w,
		vl_cheque_w,
		dt_emissao_w,
		dt_cancelamento_w,
		ie_banco_w,
		cd_pessoa_destinatario_w,
		cd_cgc_destinatario_w,
		vl_cheque_estrang_w,
		vl_cotacao_w,
		cd_moeda_w
	FROM cheque a
LEFT OUTER JOIN transacao_financeira b ON (a.nr_seq_trans_fin_emissao = b.nr_sequencia)
WHERE a.nr_sequencia			= nr_seq_cheque_p;

	if (nr_seq_trans_fin_emissao_w IS NOT NULL AND nr_seq_trans_fin_emissao_w::text <> '') and (nr_seq_conta_banco_w IS NOT NULL AND nr_seq_conta_banco_w::text <> '') and (ie_banco_w <> 'N') then

		select	nextval('movto_trans_financ_seq')
		into STRICT	nr_seq_movto_trans_w
		;

		/* Projeto Multimoeda - Verifica se o cheque é em moeda estrangeira, caso positivo calcula os valores,
				caso negativo limpa as variáveis antes de gravar o movimento. */
		if (coalesce(vl_cheque_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
			if (dt_cancelamento_w IS NOT NULL AND dt_cancelamento_w::text <> '') then
				vl_cheque_estrang_w	:= vl_cheque_estrang_w * -1;
				vl_complemento_w	:= (vl_cheque_w * -1) - vl_cheque_estrang_w;
			else
				vl_complemento_w	:= vl_cheque_w - vl_cheque_estrang_w;
			end if;
		else
			vl_cheque_estrang_w	:= null;
			vl_complemento_w	:= null;
			vl_cotacao_w		:= null;
			cd_moeda_w		:= null;
		end if;

		insert	into	movto_trans_financ(NR_SEQUENCIA,
			DT_TRANSACAO,
			NR_SEQ_TRANS_FINANC,
			VL_TRANSACAO,
			DT_ATUALIZACAO,
			NM_USUARIO,
			NR_SEQ_cheque_cp,
			dt_referencia_saldo,
			nr_seq_banco,
			nr_lote_contabil,
			ie_conciliacao,
			CD_PESSOA_FISICA,
			CD_CGC,
			vl_transacao_estrang,
			vl_complemento,
			vl_cotacao,
			cd_moeda)
		values (nr_seq_movto_trans_w,
			coalesce(dt_cancelamento_w, coalesce(dt_emissao_w,clock_timestamp())),
			nr_seq_trans_fin_emissao_w,
			CASE WHEN coalesce(dt_cancelamento_w::text, '') = '' THEN vl_cheque_w  ELSE vl_cheque_w * -1 END ,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_cheque_p,
			clock_timestamp(),
			nr_seq_conta_banco_w,
			0,
			'N',
			cd_pessoa_destinatario_w,
			cd_cgc_destinatario_w,
			vl_cheque_estrang_w,
			vl_complemento_w,
			vl_cotacao_w,
			cd_moeda_w);

		CALL GERAR_TRANS_FINANC_TAXA(nr_seq_movto_trans_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_movto_cheque_cp (nr_seq_cheque_p bigint, nm_usuario_p text) FROM PUBLIC;

