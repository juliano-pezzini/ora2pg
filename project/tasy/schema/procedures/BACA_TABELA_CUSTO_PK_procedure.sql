-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_tabela_custo_pk () AS $body$
DECLARE


qt_commit_w		bigint;
qt_registro_w		bigint;
qt_reg_sem_grupo_w	bigint;


c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.cd_tabela_custo,
	a.cd_estabelecimento
from	tabela_custo a;

Vet01	C01%RowType;

c02 CURSOR FOR
SELECT	nr_sequencia
from	orcamento_custo
where	cd_tabela_custo 	= vet01.cd_tabela_custo
and	cd_estabelecimento	= vet01.cd_estabelecimento
and	coalesce(nr_seq_tabela::text, '') = '';

vet02	C02%RowType;

c03 CURSOR FOR
SELECT	nr_seq_interno
from	resultado_centro_controle
where	cd_tabela_custo	= vet01.cd_tabela_custo
and	cd_estabelecimento	= vet01.cd_estabelecimento
and	coalesce(nr_seq_tabela::text, '') = '';

vet03	C03%RowType;

c04 CURSOR FOR
SELECT	nr_sequencia
from	taxa_custo_nat
where	cd_tabela_custo	= vet01.cd_tabela_custo
and	cd_estabelecimento	= vet01.cd_estabelecimento
and	coalesce(nr_seq_tabela::text, '') = '';

vet04	C04%RowType;


BEGIN

select	count(*)
into STRICT	qt_registro_w
from	tabela_custo
where	coalesce(nr_sequencia::text, '') = '';

if (qt_registro_w > 0) then
	update	tabela_custo
	set	nr_sequencia	= nextval('tabela_custo_seq')
	where	coalesce(nr_sequencia::text, '') = '';
end if;

commit;

select	count(*)
into STRICT	qt_registro_w
from	tabela_custo
where	cd_empresa	<> obter_empresa_estab(cd_estabelecimento)
and	(cd_estabelecimento IS NOT NULL AND cd_estabelecimento::text <> '');

if (qt_registro_w > 0) then

	update	tabela_custo
	set	cd_empresa	= obter_empresa_estab(cd_estabelecimento)
	where	(cd_estabelecimento IS NOT NULL AND cd_estabelecimento::text <> '');

end if;

commit;

select	count(*)
into STRICT	qt_registro_w
from	tabela_custo
where	coalesce(cd_empresa::text, '') = ''
and	(cd_estabelecimento IS NOT NULL AND cd_estabelecimento::text <> '');

if (qt_registro_w > 0) then

	update	tabela_custo
	set	cd_empresa	= obter_empresa_estab(cd_estabelecimento)
	where	(cd_estabelecimento IS NOT NULL AND cd_estabelecimento::text <> '')
	and	coalesce(cd_empresa::text, '') = '';

end if;

commit;

select	count(*)
into STRICT	qt_registro_w
from	orcamento_custo
where	coalesce(nr_seq_tabela::text, '') = '';

/* ORCAMENTO_CUSTO*/

if (qt_registro_w > 0) then

	qt_commit_w	:= 0;

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		open C02;
		loop
		fetch C02 into
			vet02;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			qt_commit_w	:= qt_commit_w + 1;

			update	orcamento_custo
			set	nr_seq_tabela		= Vet01.nr_sequencia
			where	nr_sequencia		= vet02.nr_sequencia;

			if (qt_commit_w >= 5000) then
				commit;
				qt_commit_w	:= 0;
			end if;
			end;
		end loop;
		close C02;

		if (qt_commit_w >= 5000) then
			commit;
			qt_commit_w	:= 0;
		end if;

		end;
	end loop;
	close C01;

	commit;

end if;

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	tabela_parametro
		set	nr_seq_tabela		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_tabela_custo	= Vet01.cd_tabela_custo
		and	coalesce(nr_seq_tabela::text, '') = '';

		update	tabela_parametro
		set	nr_seq_tabela_param		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_tabela_parametro	= Vet01.cd_tabela_custo
		and	coalesce(nr_seq_tabela_param::text, '') = '';

		commit;

		end;
	end loop;
	close C01;

	commit;

select	count(*)
into STRICT	qt_registro_w
from	orcamento_distribuido
where	coalesce(nr_seq_tabela::text, '') = ''
and	coalesce(cd_tabela_custo,0) <> 0;

/* ORCAMENTO_DISTRIBUIDO - N達o tinha integridade */

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	orcamento_distribuido
		set	nr_seq_tabela		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_tabela_custo	= Vet01.cd_tabela_custo
		and	coalesce(nr_seq_tabela::text, '') = '';

		commit;

		end;
	end loop;
	close C01;

	commit;

end if;

update	orcamento_distribuido
set	cd_estab_dest	= cd_estabelecimento
where	coalesce(cd_estab_dest::text, '') = '';

commit;


select	count(*)
into STRICT	qt_registro_w
from	reduc_capac_centro_controle
where	coalesce(nr_seq_tabela::text, '') = ''
and	coalesce(cd_tabela_custo,0) <> 0;

/* reduc_capac_centro_controle - N達o tinha integridade */

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	reduc_capac_centro_controle
		set	nr_seq_tabela		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_tabela_custo	= Vet01.cd_tabela_custo
		and	coalesce(nr_seq_tabela::text, '') = '';

		commit;

		end;
	end loop;
	close C01;

	commit;

end if;


select	count(*)
into STRICT	qt_registro_w
from	orcamento_distribuido
where	coalesce(cd_tabela_criterio,0) <> 0
and	coalesce(nr_seq_tabela_crit::text, '') = '';

/* ORCAMENTO_DISTRIBUIDO - N達o tinha integridade */

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	orcamento_distribuido
		set	nr_seq_tabela_crit		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_tabela_criterio	= Vet01.cd_tabela_custo;

		commit;

		end;
	end loop;
	close C01;

	commit;

end if;


/* CRITERIO_DISTR_ORC	ATRIBUTO:nr_seq_tabela*/

select	count(*)
into STRICT	qt_registro_w
from	criterio_distr_orc
where	coalesce(nr_seq_tabela::text, '') = ''
and	(cd_tabela_custo IS NOT NULL AND cd_tabela_custo::text <> '');

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	criterio_distr_orc
		set	nr_seq_tabela		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_tabela_custo	= Vet01.cd_tabela_custo;

		end;
	end loop;
	close C01;

	commit;
end if;

/* CAPAC_CENTRO_CONTROLE	ATRIBUTO:nr_seq_tabela_REF*/

select	count(*)
into STRICT	qt_registro_w
from	CAPAC_CENTRO_CONTROLE
where	coalesce(nr_seq_tabela::text, '') = '';

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	CAPAC_CENTRO_CONTROLE
		set	nr_seq_tabela		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_tabela_custo	= Vet01.cd_tabela_custo;

		end;
	end loop;
	close C01;

	commit;
end if;

select	count(*)
into STRICT	qt_registro_w
from	taxa_custo
where	coalesce(nr_seq_tabela::text, '') = ''
and	coalesce(cd_tabela_custo,0) <> 0;

/* taxa_custo - N達o tinha integridade */

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	taxa_custo
		set	nr_seq_tabela		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_tabela_custo	= Vet01.cd_tabela_custo
		and	coalesce(nr_seq_tabela::text, '') = '';

		commit;

		end;
	end loop;
	close C01;


end if;


/*TAXA_CUSTO_NAT	ATRIBUTO:nr_seq_tabela*/

select	count(*)
into STRICT	qt_registro_w
from	taxa_custo_nat
where	coalesce(nr_seq_tabela::text, '') = ''
and	(cd_tabela_custo IS NOT NULL AND cd_tabela_custo::text <> '');

if (qt_registro_w > 0) then

	qt_commit_w	:= 0;

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		open C04;
		loop
		fetch C04 into
			vet04;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin

			qt_commit_w	:= qt_commit_w + 1;

			update	TAXA_CUSTO_NAT
			set	nr_seq_tabela		= Vet01.nr_sequencia
			where	nr_sequencia		= vet04.nr_sequencia;
			end;

			if (qt_commit_w >= 5000) then
				commit;
				qt_commit_w	:= 0;
			end if;
		end loop;
		close C04;

		if (qt_commit_w >= 5000) then
				commit;
				qt_commit_w	:= 0;
			end if;


		end;
	end loop;
	close C01;

	commit;
end if;

/* CUS_REGRA_AJUSTE_ORC*/

select	count(*)
into STRICT	qt_registro_w
from	CUS_REGRA_AJUSTE_ORC
where	coalesce(nr_seq_tabela::text, '') = '';

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	CUS_REGRA_AJUSTE_ORC
		set	nr_seq_tabela		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_tabela_custo	= Vet01.cd_tabela_custo
		and coalesce(nr_seq_tabela::text, '') = '';

		end;
	end loop;
	close C01;

	commit;
end if;

/*CUSTO_PADRAO*/

select	count(*)
into STRICT	qt_registro_w
from	CUSTO_PADRAO
where	coalesce(nr_seq_tabela::text, '') = ''
and	(cd_tabela_custo IS NOT NULL AND cd_tabela_custo::text <> '');

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	CUSTO_PADRAO
		set	nr_seq_tabela		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_tabela_custo	= Vet01.cd_tabela_custo
		and	coalesce(nr_seq_tabela::text, '') = '';

		end;
	end loop;
	close C01;

	commit;
end if;

select	count(*)
into STRICT	qt_registro_w
from	CUSTO_PADRAO_COMP
where	coalesce(nr_seq_tabela::text, '') = ''
and	(cd_tabela_custo IS NOT NULL AND cd_tabela_custo::text <> '');

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	CUSTO_PADRAO_COMP
		set	nr_seq_tabela		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_tabela_custo	= Vet01.cd_tabela_custo
		and	coalesce(nr_seq_tabela::text, '') = '';

		end;
	end loop;
	close C01;

	commit;
end if;


/*CUSTO_MATERIAL*/

select	count(*)
into STRICT	qt_registro_w
from	CUSTO_MATERIAL
where	coalesce(nr_seq_tabela::text, '') = '';

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	CUSTO_MATERIAL
		set	nr_seq_tabela		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_tabela_custo	= Vet01.cd_tabela_custo;

		end;
	end loop;
	close C01;

	commit;
end if;

/*CUSTO_PROCEDIMENTO*/

select	count(*)
into STRICT	qt_registro_w
from	CUSTO_PROCEDIMENTO
where	coalesce(nr_seq_tabela::text, '') = '';

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	CUSTO_PROCEDIMENTO
		set	nr_seq_tabela		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_tabela_custo	= Vet01.cd_tabela_custo;

		end;
	end loop;
	close C01;

	commit;
end if;

/*PRECO_PADRAO_PROC */

select	count(*)
into STRICT	qt_registro_w
from	PRECO_PADRAO_PROC
where	coalesce(nr_seq_tabela::text, '') = ''
and	(cd_tabela_custo IS NOT NULL AND cd_tabela_custo::text <> '');

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	PRECO_PADRAO_PROC
		set	nr_seq_tabela		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_tabela_custo	= Vet01.cd_tabela_custo
		and	coalesce(nr_seq_tabela::text, '') = '';

		end;
	end loop;
	close C01;

	commit;
end if;

/*PRECO_PADRAO_PROC */

select	count(*)
into STRICT	qt_registro_w
from	PRECO_PADRAO_MAT
where	coalesce(nr_seq_tabela::text, '') = ''
and	(cd_tabela_custo IS NOT NULL AND cd_tabela_custo::text <> '');

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	PRECO_PADRAO_MAT
		set	nr_seq_tabela		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_tabela_custo	= Vet01.cd_tabela_custo
		and	coalesce(nr_seq_tabela::text, '') = '';

		end;
	end loop;
	close C01;

	commit;
end if;


select	count(*)
into STRICT	qt_registro_w
from	CUS_RESULT_TERC
where	(cd_tabela_custo IS NOT NULL AND cd_tabela_custo::text <> '')
and	coalesce(nr_seq_tabela::text, '') = '';

/* CUS_RESULT_TERC - nr_seq_tabela*/

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	CUS_RESULT_TERC
		set	nr_seq_tabela		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_tabela_custo	= Vet01.cd_tabela_custo
		and	coalesce(nr_seq_tabela::text, '') = '';

		end;
	end loop;
	close C01;

	commit;

end if;






/* RESULTADO_CENTRO_CONTROLE	ATRIBUTO:nr_seq_tabela*/

select	count(*)
into STRICT	qt_registro_w
from	resultado_centro_controle
where	coalesce(nr_seq_tabela::text, '') = ''
and	(cd_tabela_custo IS NOT NULL AND cd_tabela_custo::text <> '');

if (qt_registro_w > 0) then

	qt_commit_w	:= 0;

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		open C03;
		loop
		fetch C03 into
			vet03;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin

			qt_commit_w	:= qt_commit_w + 1;

			update	resultado_centro_controle
			set	nr_seq_tabela		= Vet01.nr_sequencia
			where	nr_seq_interno		= vet03.nr_seq_interno;

			if (qt_commit_w >= 5000) then
				commit;
				qt_commit_w	:= 0;
			end if;

			end;
		end loop;
		close C03;

		if (qt_commit_w >= 5000) then
			commit;
			qt_commit_w	:= 0;
		end if;

		end;
	end loop;
	close C01;

	commit;
end if;

/*RESULTADO_IND_CEN_CONT*/

select	count(*)
into STRICT	qt_registro_w
from	RESULTADO_IND_CEN_CONT
where	coalesce(nr_seq_tabela::text, '') = ''
and	(cd_tabela_custo IS NOT NULL AND cd_tabela_custo::text <> '');

if (qt_registro_w > 0) then

	qt_commit_w	:= 0;

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin


		update	RESULTADO_IND_CEN_CONT
		set	nr_seq_tabela		= Vet01.nr_sequencia
		where	cd_estabelecimento	= vet01.cd_estabelecimento
		and	cd_tabela_custo		= vet01.cd_tabela_custo;

		end;
	end loop;
	close C01;

	commit;
end if;

/*COMPONENTE_TABELA*/

select	count(*)
into STRICT	qt_registro_w
from	COMPONENTE_TABELA
where	coalesce(nr_seq_tabela::text, '') = ''
and	(cd_tabela_custo IS NOT NULL AND cd_tabela_custo::text <> '');

if (qt_registro_w > 0) then

	qt_commit_w	:= 0;

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin


		update	COMPONENTE_TABELA
		set	nr_seq_tabela		= Vet01.nr_sequencia
		where	cd_estabelecimento	= vet01.cd_estabelecimento
		and	cd_tabela_custo		= vet01.cd_tabela_custo;

		end;
	end loop;
	close C01;

	commit;
end if;
commit;

/*TAXA_CUSTO_OCIO*/

select	count(*)
into STRICT	qt_registro_w
from	TAXA_CUSTO_OCIO
where	coalesce(nr_seq_tabela::text, '') = ''
and	(cd_tabela_custo IS NOT NULL AND cd_tabela_custo::text <> '');

if (qt_registro_w > 0) then

	qt_commit_w	:= 0;

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin


		update	TAXA_CUSTO_OCIO
		set	nr_seq_tabela		= Vet01.nr_sequencia
		where	cd_estabelecimento	= vet01.cd_estabelecimento
		and	cd_tabela_custo		= vet01.cd_tabela_custo;

		end;
	end loop;
	close C01;

	commit;
end if;

/*RESULTADO_IND_CRITERIO*/

select	count(*)
into STRICT	qt_registro_w
from	RESULTADO_IND_CRITERIO
where	coalesce(nr_seq_tabela::text, '') = ''
and	(cd_tabela_custo IS NOT NULL AND cd_tabela_custo::text <> '');

if (qt_registro_w > 0) then

	qt_commit_w	:= 0;

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin


		update	RESULTADO_IND_CRITERIO
		set	nr_seq_tabela		= Vet01.nr_sequencia
		where	cd_estabelecimento	= vet01.cd_estabelecimento
		and	cd_tabela_custo		= vet01.cd_tabela_custo;

		end;
	end loop;
	close C01;

	commit;
end if;

/*CUS_TERC_MOVTO*/

select	count(*)
into STRICT	qt_registro_w
from	CUS_TERC_MOVTO
where	coalesce(nr_seq_tabela::text, '') = ''
and	(cd_tabela_custo IS NOT NULL AND cd_tabela_custo::text <> '');

if (qt_registro_w > 0) then

	qt_commit_w	:= 0;

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin


		update	CUS_TERC_MOVTO
		set	nr_seq_tabela		= Vet01.nr_sequencia
		where	cd_estabelecimento	= vet01.cd_estabelecimento
		and	cd_tabela_custo		= vet01.cd_tabela_custo;

		end;
	end loop;
	close C01;

	commit;
end if;

select	count(*)
into STRICT	qt_registro_w
from	ORCAMENTO_PACIENTE
where	coalesce(nr_seq_tabela_custo::text, '') = ''
and	(cd_tabela_custo IS NOT NULL AND cd_tabela_custo::text <> '');

if (qt_registro_w > 0) then

	qt_commit_w	:= 0;

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin


		update	ORCAMENTO_PACIENTE
		set	nr_seq_tabela_custo		= Vet01.nr_sequencia
		where	cd_estabelecimento	= vet01.cd_estabelecimento
		and	cd_tabela_custo		= vet01.cd_tabela_custo;

		end;
	end loop;
	close C01;

	commit;
end if;

select	count(*)
into STRICT	qt_registro_w
from	cus_amort_mensal
where	coalesce(nr_seq_tabela::text, '') = ''
and	(cd_tabela_custo IS NOT NULL AND cd_tabela_custo::text <> '');

if (qt_registro_w > 0) then

	qt_commit_w	:= 0;

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin


		update	cus_amort_mensal
		set	nr_seq_tabela		= Vet01.nr_sequencia
		where	cd_estabelecimento	= vet01.cd_estabelecimento
		and	cd_tabela_custo		= vet01.cd_tabela_custo;

		end;
	end loop;
	close C01;

	commit;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_tabela_custo_pk () FROM PUBLIC;

