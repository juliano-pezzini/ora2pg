-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_fluxo_caixa_lote_data ( nr_seq_lote_fluxo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/*--------------------------------------------------------------- ATENÇÃO ----------------------------------------------------------------*/

/* Cuidado ao realizar alterações no fluxo de caixa em lote. Toda e qualquer alteração realizada em qualquer uma */

/* das procedures do fluxo de caixa em lote deve ser cuidadosamente verificada e realizada no fluxo de caixa      */

/* convencional. Devemos garantir que os dois fluxos de caixa tragam os mesmos valores no resultado, evitando     */

/* assim que existam diferenças entre os fluxos de caixa.                                                                                                */

/*--------------- AO ALTERAR O FLUXO DE CAIXA EM LOTE ALTERAR TAMBÉM O FLUXO DE CAIXA ---------------*/

cd_conta_financ_w	bigint;
dt_referencia_w		timestamp;
vl_fluxo_w		double precision;
ie_nivel_w		smallint;
nr_seq_fluxo_data_w	fluxo_caixa_data.nr_sequencia%type;
/* Projeto Multimoeda - Variáveis */

cd_moeda_estrang_w	integer;

c01 CURSOR FOR
SELECT	distinct
	a.cd_conta_financ
from	fluxo_caixa_item a
where	a.nr_seq_lote_fluxo	= nr_seq_lote_fluxo_p;

C02 CURSOR FOR
SELECT	a.dt_referencia,
	sum(a.vl_fluxo)
from	fluxo_caixa_item a
where	a.cd_conta_financ	= cd_conta_financ_w
and	a.nr_seq_lote_fluxo	= nr_seq_lote_fluxo_p
group by	a.dt_referencia;


BEGIN
/* Projeto Multimoeda - Busca a moeda do fluxo para gravar no registro */

select	max(cd_moeda)
into STRICT	cd_moeda_estrang_w
from 	fluxo_caixa_lote
where	nr_sequencia = nr_seq_lote_fluxo_p;

open	c01;
loop
fetch	c01 into
	cd_conta_financ_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	select	substr(obter_nivel_conta_financ(cd_conta_financ_w),1,1)
	into STRICT	ie_nivel_w
	;

	open	C02;
	loop
	fetch	C02 into
		dt_referencia_w,
		vl_fluxo_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		select	nextval('fluxo_caixa_data_seq')
		into STRICT	nr_seq_fluxo_data_w
		;

		insert into fluxo_caixa_data(
			nr_sequencia,
			nr_seq_lote_fluxo,
			cd_estabelecimento,
			cd_conta_financ,
			dt_atualizacao,
			dt_atualizacao_nrec,
			dt_referencia,
			ie_nivel,
			ie_origem,
			nm_usuario,
			nm_usuario_nrec,
			vl_fluxo,
			cd_moeda)
		values (nr_seq_fluxo_data_w,
			nr_seq_lote_fluxo_p,
			cd_estabelecimento_p,
			cd_conta_financ_w,
			clock_timestamp(),
			clock_timestamp(),
			dt_referencia_w,
			ie_nivel_w,
			'C',
			nm_usuario_p,
			nm_usuario_p,
			vl_fluxo_w,
			cd_moeda_estrang_w);

		update	fluxo_caixa_item
		set	nr_seq_fluxo_data	= nr_seq_fluxo_data_w
		where	dt_referencia		= dt_referencia_w
		and	nr_seq_lote_fluxo	= nr_seq_lote_fluxo_p;

		end;
	end	loop;
	close	C02;

end	loop;
close	c01;

/*NAO COLOCAR COMMIT NESTA PROCEDURE*/

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_fluxo_caixa_lote_data ( nr_seq_lote_fluxo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

