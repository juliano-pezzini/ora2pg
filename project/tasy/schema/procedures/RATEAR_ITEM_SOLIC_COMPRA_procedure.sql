-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ratear_item_solic_compra ( nr_solic_compra_p bigint, nr_item_solic_compra_p bigint, nr_seq_criterio_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, dt_vigencia_p timestamp) AS $body$
DECLARE


nr_item_solic_compra_w		bigint;
vl_total_item_solic_w		double precision;
cd_centro_custo_w		integer;
cd_conta_contabil_w		varchar(20);
cd_conta_financ_w		bigint;
ds_erro_w			varchar(2000);
pr_rateio_w			double precision;
vl_rateio_w			double precision;
vl_total_rateio_w		double precision;
nr_sequencia_w			bigint;

c00 CURSOR FOR
SELECT	nr_item_solic_compra,
	(vl_unit_previsto * qt_material)
from	solic_compra_item
where	nr_solic_compra		= nr_solic_compra_p
--and	vl_unit_previsto	> 0
and (nr_item_solic_compra = nr_item_solic_compra_p or nr_item_solic_compra_p = 0);

c01 CURSOR FOR
SELECT	cd_centro_custo,
	cd_conta_contabil,
	cd_conta_financ,
	pr_rateio
from	ctb_criterio_rateio_item
where	nr_seq_criterio = nr_seq_criterio_p
and	coalesce(pr_rateio,0) > 0
and (dt_vigencia_p >= coalesce(dt_inicio_vigencia,dt_vigencia_p) and dt_vigencia_p <= coalesce(dt_fim_vigencia,dt_vigencia_p))
order by	pr_rateio;


BEGIN

open c00;
loop
fetch c00 into
	nr_item_solic_compra_w,
	vl_total_item_solic_w;
EXIT WHEN NOT FOUND; /* apply on c00 */
	begin

	vl_total_rateio_w	:= 0;
	vl_rateio_w		:= 0;

	delete	from solic_compra_item_rateio
	where	nr_solic_compra	= nr_solic_compra_p
	and	nr_item_solic_compra	= nr_item_solic_compra_w;

	open c01;
	loop
	fetch c01 into
		cd_centro_custo_w,
		cd_conta_contabil_w,
		cd_conta_financ_w,
		pr_rateio_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		select	nextval('solic_compra_item_rateio_seq')
		into STRICT	nr_sequencia_w
		;

		if (vl_total_item_solic_w	> 0) then
			vl_rateio_w	:= dividir((vl_total_item_solic_w* pr_rateio_w), 100);
		else
			vl_rateio_w	:= 0;
		end if;

		begin
		insert	into solic_compra_item_rateio(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_solic_compra,
			nr_item_solic_compra,
			cd_centro_custo,
			cd_conta_contabil,
			cd_conta_financ,
			nr_seq_criterio_rateio,
			vl_rateio,
			vl_frete,
			vl_desconto,
			vl_seguro,
			vl_despesa_acessoria,
			ie_situacao)
		values (	nr_sequencia_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_solic_compra_p,
			nr_item_solic_compra_w,
			cd_centro_custo_w,
			cd_conta_contabil_w,
			cd_conta_financ_w,
			nr_seq_criterio_p,
			vl_rateio_w,
			0,
			0,
			0,
			0,
			'A');
		exception when others then
			ds_erro_w	:= SQLERRM(SQLSTATE);
			/*(-20011,'Erro ao gravar o rateio do item! ' || chr(13) || 'Seq: ' || nr_sequencia_w || chr(13) || ds_erro_w);*/

			CALL wheb_mensagem_pck.exibir_mensagem_abort(190145, 'NR_SEQUENCIA_W=' || nr_sequencia_w || ';' || 'DS_ERRO_W=' || ds_erro_w);
		end;
		end;
	end loop;
	close c01;

	update	solic_compra_item
	set	nr_seq_criterio_rateio = nr_seq_criterio_p
	where	nr_solic_compra	= nr_solic_compra_p
	and	nr_item_solic_compra	= nr_item_solic_compra_w;

	select	sum(vl_rateio)
	into STRICT	vl_total_rateio_w
	from	solic_compra_item_rateio
	where	nr_solic_compra	= nr_solic_compra_p
	and	nr_item_solic_compra	= nr_item_solic_compra_w;

	if (vl_total_rateio_w <> vl_total_item_solic_w) then

		update	solic_compra_item_rateio
		set	vl_rateio	= vl_rateio + vl_total_item_solic_w - vl_total_rateio_w
		where	nr_sequencia	= nr_sequencia_w;
	end if;
	end;
end loop;
close c00;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ratear_item_solic_compra ( nr_solic_compra_p bigint, nr_item_solic_compra_p bigint, nr_seq_criterio_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, dt_vigencia_p timestamp) FROM PUBLIC;

