-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_adiantamento_oc ( nr_ordem_compra_p bigint, cd_cgc_fornecedor_p text, cd_pessoa_fisica_p text, cd_moeda_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, vl_conv_moeda_p bigint default 0) AS $body$
DECLARE


nr_adiantamento_w			bigint;
qt_gera_adiantamento_w		bigint;
cd_pessoa_fisica_w		varchar(10);
vl_vencimento_w			double precision;
cont_w				bigint;
cd_moeda_w			bigint;
cd_tipo_taxa_juro_w		bigint;
cd_tipo_taxa_multa_w		bigint;
dt_vencimento_w			timestamp;
nr_titulo_w			bigint;
NR_SEQ_TF_CONTAB_AD_OC_w	bigint;
NR_SEQ_TF_BAIXA_AD_OC_w	bigint;
ie_forma_geracao_adiant_w		varchar(255);
cd_estab_financeiro_w		estabelecimento.cd_estab_financeiro%type;

c01 CURSOR FOR
SELECT	vl_vencimento,
	dt_vencimento
from	ordem_compra_venc
where	nr_ordem_compra		= nr_ordem_compra_p
and	ie_gerar_adiantamento	= 'S';


BEGIN

ie_forma_geracao_adiant_w		:= obter_valor_param_usuario(917, 105, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);

select	count(*)
into STRICT	qt_gera_adiantamento_w
from	ordem_compra_venc
where	nr_ordem_compra		= nr_ordem_compra_p
and	ie_gerar_adiantamento	= 'S';

begin

select	coalesce(cd_estab_financeiro, cd_estabelecimento)
into STRICT	cd_estab_financeiro_w
from	estabelecimento
where	cd_estabelecimento = cd_estabelecimento_p;
exception
	when no_data_found or too_many_rows then
		cd_estab_financeiro_w := null;
end;

if (qt_gera_adiantamento_w > 0) then
	begin

	if (coalesce(cd_cgc_fornecedor_p::text, '') = '') then
		cd_pessoa_fisica_w	:= cd_pessoa_fisica_p;
	end if;

	open c01;
	loop
	fetch c01 into
		vl_vencimento_w,
		dt_vencimento_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		if (coalesce(ie_forma_geracao_adiant_w, 'A') = 'T') then

			/* gerar titulo */

			select	cd_moeda_padrao,
				cd_tipo_taxa_juro,
				cd_tipo_taxa_multa,
				NR_SEQ_TF_CONTAB_AD_OC,
				NR_SEQ_TF_BAIXA_AD_OC
			into STRICT	cd_moeda_w,
				cd_tipo_taxa_juro_w,
				cd_tipo_taxa_multa_w,
				NR_SEQ_TF_CONTAB_AD_OC_w,
				NR_SEQ_TF_BAIXA_AD_OC_w
			from	parametros_contas_pagar
			where	cd_estabelecimento	= cd_estabelecimento_p;

			select	nextval('titulo_pagar_seq')
			into STRICT	nr_titulo_w
			;	

			insert into titulo_pagar(nr_titulo,
				cd_estabelecimento,
				dt_atualizacao,
				nm_usuario,
				dt_emissao,
				dt_vencimento_original,
				dt_vencimento_atual,
				vl_titulo,
				vl_saldo_titulo,
				vl_saldo_juros,
				vl_saldo_multa,
				cd_moeda,
				tx_juros,
				tx_multa,
				cd_tipo_taxa_juro,
				cd_tipo_taxa_multa,
				tx_desc_antecipacao,
				dt_limite_antecipacao,
				vl_dia_antecipacao,
				cd_tipo_taxa_antecipacao,
				ie_situacao,
				ie_origem_titulo,
				ie_tipo_titulo,
				nr_seq_nota_fiscal,
				cd_pessoa_fisica,
				cd_cgc,
				dt_contabil,
				nr_lote_contabil,
				nr_seq_trans_fin_contab,
				nr_seq_trans_fin_baixa,
				cd_estab_financeiro)
			SELECT	nr_titulo_w,
				cd_estabelecimento_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				dt_vencimento_w,
				dt_vencimento_w,
				vl_vencimento_w,
				vl_vencimento_w,
				0,
				0,
				cd_moeda_w,
				0,
				0,
				cd_tipo_taxa_juro_w,
				cd_tipo_taxa_multa_w,
				0,
				null,
				0,
				null,
				'A',
				7,
				5,
				null,
				cd_pessoa_fisica_w,
				cd_cgc_fornecedor_p,
				clock_timestamp(),
				0,
				NR_SEQ_TF_CONTAB_AD_OC_w,
				NR_SEQ_TF_BAIXA_AD_OC_w,
				cd_estab_financeiro_w
			;
			CALL ATUALIZAR_INCLUSAO_TIT_PAGAR(nr_titulo_w, nm_usuario_p);

		end if;

		/* gerar adiantamento */

		select	nextval('adiantamento_pago_seq')
		into STRICT	nr_adiantamento_w
		;

		insert into adiantamento_pago(
			nr_adiantamento,
			cd_estabelecimento,
			dt_atualizacao,
			nm_usuario,
			vl_adiantamento,
			vl_saldo,
			dt_adiantamento,
			cd_moeda,
			cd_cgc,
			cd_pessoa_fisica,
			ds_observacao,
			nr_titulo_original,
			vl_cotacao,
			vl_adto_estrang
			)
		values ( nr_adiantamento_w,
			cd_estabelecimento_p,
			clock_timestamp(),
			nm_usuario_p,
			vl_vencimento_w,
			vl_vencimento_w,
			clock_timestamp(),
			cd_moeda_p,
			cd_cgc_fornecedor_p,
			cd_pessoa_fisica_w,
			wheb_mensagem_pck.get_texto(300876, 'NR_ORDEM_COMPRA=' || nr_ordem_compra_p),
			CASE WHEN ie_forma_geracao_adiant_w='A' THEN  null  ELSE nr_titulo_w END ,
			vl_conv_moeda_p,
			vl_vencimento_w);

		CALL vincula_adiantamento_oc(nr_adiantamento_w,nr_ordem_compra_p,nm_usuario_p);

		end;
	end loop;
	close c01;

	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_adiantamento_oc ( nr_ordem_compra_p bigint, cd_cgc_fornecedor_p text, cd_pessoa_fisica_p text, cd_moeda_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, vl_conv_moeda_p bigint default 0) FROM PUBLIC;

