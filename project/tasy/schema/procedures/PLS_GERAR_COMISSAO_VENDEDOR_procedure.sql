-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_comissao_vendedor ( nr_seq_lote_mens_p bigint, nr_seq_vendedor_p bigint, dt_mes_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE


nr_seq_segurado_w		bigint;
nr_parcela_w			bigint;
nr_parcela_ww			bigint;
vl_mensalidade_w		double precision;
nr_seq_vendedor_w		bigint;
ie_acao_contrato_w		varchar(2);
ie_recebe_valores_w		varchar(1);
vl_premio_w			double precision;
tx_premio_w			double precision;
qt_regra_vigente_w		bigint;
vl_comissao_w			double precision;
dt_mesano_referencia_w		timestamp;
nr_seq_mens_seg_w		bigint;
nr_seq_regra_ven_w		bigint;
qt_idade_w			smallint;
pr_incremento_w			double precision;
vl_tot_mensalidade_w		double precision;
vl_adic_mensalidade_w		double precision;
qt_repasse_gerado_w		bigint;
nr_seq_mensalidade_w		bigint;
nr_seq_contrato_w		bigint;
ie_tipo_pessoa_w		varchar(2);
ie_acao_contrato_regra_w	varchar(2);
dt_contratacao_w		timestamp;
qt_aprovados_contrato_w		integer;
qt_ativos_w			integer;
ie_tipo_item_w			varchar(2);
vl_item_w			double precision;
nr_seq_motivo_inclusao_w	bigint;
qt_reg_mens_w			smallint;
nr_seq_bonificacao_vinculo_w	bigint;
nr_seq_bonificacao_w		bigint;
ie_tipo_item_mensalidade_w	varchar(50);
ie_tipo_item_bonificacao_w	varchar(255);
ds_tipo_item_bonificacao_w	varchar(255);
ie_bonus_w			varchar(1)	:= 'S';
nr_seq_plano_w			bigint;
nr_seq_sca_w			bigint;
nr_seq_vinculo_sca_w		bigint;
nr_seq_vendedor_seg_w		bigint;
nr_parcela_sca_w		bigint;
nr_seq_repasse_w		bigint;
nr_seq_item_w			bigint;
nr_seq_sca_ww			bigint;
nr_seq_repasse_sca_w		bigint;
nr_seq_item_sca_w		bigint;
nr_seq_plano_item_w		bigint;
vl_incremento_w			double precision;
vl_incremento_total_w		double precision;
vl_total_item_w			double precision;
ie_sca_embutido_w		varchar(1);
tx_premios_w			double precision;
vl_total_comissao_w		double precision;
nr_seq_sca_vinculo_w		bigint;
qt_itens_liberados_w		bigint;
qt_dias_contrato_adesao_w	bigint;
nr_seq_pagador_w		bigint;
nr_parcela_integral_w		bigint;
nr_parcela_integral_ww		bigint;
nr_seq_grupo_produto_w		bigint;
nr_seq_regra_ven_ww		bigint;
ie_acao_contrato_regra_ww	varchar(2);
ie_recebe_valores_ww		varchar(1);
vl_premio_ww			double precision;
tx_premio_ww			double precision;
tx_incremento_w			double precision;
ie_tipo_item_mensalidade_ww	varchar(50);
nr_seq_grupo_produto_ww		bigint;
nr_seq_portabilidade_w		bigint;
ie_divisao_repasse_w		varchar(2);
tx_repasse_divisao_w		double precision;
nr_seq_vendedor_regra_w		bigint;
qt_meses_meta_w			bigint;
ie_meta_atingida_w		varchar(2);
nr_contrato_principal_w		pls_contrato.nr_contrato_principal%type;
qt_plano_sca_w			integer;
ie_referencia_vidas_w		pls_regra_adic_benef.ie_referencia_vidas%type;
qt_vidas_min_w			pls_regra_adic_benef.qt_vidas_min%type;
qt_vidas_max_w			pls_regra_adic_benef.qt_vidas_max%type;
ie_considerar_ativos_w		pls_regra_adic_benef.ie_considerar_ativos%type;
qt_vidas_w			integer;
ie_primeira_parc_integral_w	pls_vendedor_regra.ie_primeira_parc_integral%type;
ie_primeira_parc_integral_ww	pls_vendedor_regra.ie_primeira_parc_integral%type;
ie_vl_integ_primeira_mens_w	pls_vendedor_regra.ie_vl_integral_primeira_mens%type;
ie_vl_integ_primeira_mens_ww	pls_vendedor_regra.ie_vl_integral_primeira_mens%type;
dt_reajuste_w			pls_segurado_preco.dt_reajuste%type;
nr_seq_segurado_preco_w		pls_segurado_preco.nr_sequencia%type;
nr_seq_segurado_preco_ww	pls_segurado_preco.nr_sequencia%type;
nr_seq_seg_preco_ant_w		pls_segurado_preco.nr_sequencia%type;
vl_preco_atual_w		pls_segurado_preco.vl_preco_atual%type;
vl_preco_ant_w			pls_segurado_preco.vl_preco_ant%type;
ie_calcula_alter_prod_w		varchar(1);
ie_diferenca_migracao_w		pls_vendedor_regra.ie_diferenca_migracao%type;
ie_diferenca_migracao_ww	pls_vendedor_regra.ie_diferenca_migracao%type;
ie_dif_alteracao_prod_w		pls_vendedor_regra.ie_dif_alteracao_prod%type;
ie_dif_alteracao_prod_ww	pls_vendedor_regra.ie_dif_alteracao_prod%type;
nr_seq_segurado_ant_w		bigint;
vl_segurado_ant_w		double precision;
dt_adaptacao_w			pls_segurado_alt_plano.dt_alteracao%type;
qt_parcela_adapt_w		integer;
vl_pre_estabelecido_w		pls_mensalidade_segurado.vl_pre_estabelecido%type;
ie_vl_plano_novo_maior_w	varchar(1);
qt_regra_cobr_retro_w		integer;
dt_mensalidade_retro_w		pls_mensalidade_segurado.dt_mensalidade_retro%type;
nr_contrato_principal_ant_w	pls_contrato.nr_contrato_principal%type;
cd_pessoa_fisica_w		pls_segurado.cd_pessoa_fisica%type;
dt_primeira_migracao_w		pls_segurado.dt_migracao%type;
dt_segunda_migracao_w		pls_segurado.dt_migracao%type;
qt_seg_migrado_novamente_w	integer;
qt_dias_volta_migracao_w	integer;
nm_sca_w			pls_plano.ds_plano%type;
ie_carencia_abrangencia_ant_w	pls_parametros.ie_carencia_abrangencia_ant%type;
qt_regra_carencia_w		integer;
ie_abrangencia_atual_w		pls_plano.ie_abrangencia%type;
ie_abrangencia_ant_w		pls_plano.ie_abrangencia%type;
qt_cpt_nao_w			integer;
ie_considera_regra_w		varchar(1);
ie_tela_carencia_w		integer;
qt_carencias_w			integer;
ie_considerar_carencias_ww	pls_vendedor_regra.ie_considerar_carencias%type;
qt_carencias_nao_cumpridas_w	integer;
qt_carencias_isent_w		integer;
dt_retroativa_w			pls_mensalidade_seg_item.dt_retroativa%type;
qt_dias_reativacao_w		pls_segurado.qt_dias_reativacao%type;

ie_valor_embutido_sca_ww	pls_vendedor_regra.ie_valor_embutido_sca%type;
ie_valor_embutido_sca_w		pls_vendedor_regra.ie_valor_embutido_sca%type;
nr_seq_sca_regra_ww		pls_vendedor_regra.nr_seq_sca%type;
nr_seq_sca_regra_w		pls_vendedor_regra.nr_seq_sca%type;
dt_rescisao_seg_ant_w		timestamp;

ie_mensalidade_proporcional_w	pls_segurado.ie_mensalidade_proporcional%type;
dt_contrato_w			pls_contrato.dt_contrato%type;
qt_registro_w			integer;
ie_incremento_w			varchar(1);
ie_tipo_impacto_cpt_w		pls_regra_adic_benef.ie_tipo_impacto_cpt%type;
ie_tipo_impacto_w		pls_tipo_carencia.ie_tipo_impacto%type;
ie_incremento_restritivo_w	pls_vendedor_regra.ie_incremento_restritivo%type;
nr_seq_grupo_relac_w		varchar(255);

C00 CURSOR FOR
	SELECT	distinct a.nr_sequencia,
		b.nr_seq_contrato,
		a.nr_seq_pagador,
		CASE WHEN coalesce(c.cd_pf_estipulante::text, '') = '' THEN 'PJ'  ELSE 'PF' END  ie_tipo_pessoa,
		c.nr_contrato_principal,
		(	SELECT	count(1)
			from	pls_segurado	x
			where	x.nr_seq_contrato	= c.nr_sequencia
			and	coalesce(x.dt_rescisao::text, '') = ''
			and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')) qt_ativos,
		(	select	count(1)
			from	pls_segurado	y
			where	y.nr_seq_contrato	= c.nr_sequencia
			and	y.ie_acao_contrato	= 'A') qt_aprovados_contrato,
		c.dt_contrato
	from	pls_mensalidade 	a,
		pls_contrato_pagador	b,
		pls_contrato		c
	where	b.nr_sequencia	= a.nr_seq_pagador
	and	c.nr_sequencia	= b.nr_seq_contrato
	and	a.nr_seq_lote	= nr_seq_lote_mens_p
	and	coalesce(b.nr_seq_pagador_intercambio::text, '') = ''  --Nao gerar repasse para contratos de intercambio
	and	coalesce(a.ie_cancelamento::text, '') = ''
	and	(exists	(	select	1
				from	pls_mensalidade_segurado	x,
					pls_segurado			z
				where	x.nr_seq_segurado	= z.nr_sequencia
				and	x.nr_seq_mensalidade	= a.nr_sequencia
				and	((coalesce(nr_seq_vendedor_p::text, '') = '') or (nr_seq_vendedor_p = z.nr_seq_vendedor_canal)))
	or	exists	(	select	1
				from	pls_mensalidade_segurado	x,
					pls_segurado			z,
					pls_segurado_vendedor		w
				where	x.nr_seq_segurado	= z.nr_sequencia
				and	x.nr_seq_mensalidade	= a.nr_sequencia
				and	z.nr_sequencia		= w.nr_seq_segurado
				and	((coalesce(nr_seq_vendedor_p::text, '') = '') or (nr_seq_vendedor_p = w.nr_seq_vendedor_canal)))
	or	exists	(	select	1
				FROM pls_mensalidade_segurado x, pls_segurado z
LEFT OUTER JOIN pls_sca_vinculo y ON (z.nr_sequencia = y.nr_seq_segurado)
WHERE x.nr_seq_segurado	= z.nr_sequencia and x.nr_seq_mensalidade	= a.nr_sequencia  and y.nr_seq_vendedor_canal <> z.nr_seq_vendedor_canal and ((coalesce(nr_seq_vendedor_p::text, '') = '') or (nr_seq_vendedor_p = y.nr_seq_vendedor_canal)) )
	or	exists	(	select	1
				from	pls_mensalidade_segurado	x,
					pls_segurado			z,
					pls_segurado_canal_compl	w
				where	x.nr_seq_segurado	= z.nr_sequencia
				and	x.nr_seq_mensalidade	= a.nr_sequencia
				and	z.nr_sequencia		= w.nr_seq_segurado
				and	((coalesce(nr_seq_vendedor_p::text, '') = '') or (nr_seq_vendedor_p = w.nr_seq_vendedor_canal))));

C01 CURSOR FOR
	SELECT	a.nr_seq_segurado,
		a.nr_parcela,
		a.vl_mensalidade,
		a.dt_mesano_referencia,
		a.nr_sequencia,
		a.qt_idade,
		coalesce(b.nr_seq_motivo_inclusao,0),
		b.nr_seq_vendedor_canal,
		b.ie_acao_contrato,
		trunc(b.dt_contratacao,'dd'),
		b.nr_seq_plano,
		b.nr_seq_portabilidade,
		b.nr_seq_segurado_ant,
		coalesce(b.ie_divisao_repasse,'N'),
		0 tx_repasse,
		a.vl_pre_estabelecido,
		a.dt_mensalidade_retro,
		b.cd_pessoa_fisica,
		b.qt_dias_reativacao,
		b.ie_mensalidade_proporcional,
		a.nr_seq_mensalidade,
		a.nr_seq_segurado_preco,
		coalesce(pls_dados_grupo_relac_contr(b.nr_seq_contrato,'S'),0)
	from	pls_mensalidade_segurado	a,
		pls_segurado			b
	where	b.nr_sequencia		= a.nr_seq_segurado
	and	a.nr_seq_mensalidade	= nr_seq_mensalidade_w
	and	((coalesce(nr_seq_vendedor_p::text, '') = '') or (nr_seq_vendedor_p = b.nr_seq_vendedor_canal))
	and	coalesce(b.ie_divisao_repasse,'N') = 'N'
	
union all

	SELECT	a.nr_seq_segurado,
		a.nr_parcela,
		a.vl_mensalidade,
		a.dt_mesano_referencia,
		a.nr_sequencia,
		a.qt_idade,
		coalesce(b.nr_seq_motivo_inclusao,0),
		d.nr_seq_vendedor_canal,
		b.ie_acao_contrato,
		trunc(b.dt_contratacao,'dd'),
		b.nr_seq_plano,
		b.nr_seq_portabilidade,
		b.nr_seq_segurado_ant,
		coalesce(b.ie_divisao_repasse,'N'),
		0 tx_repasse,
		a.vl_pre_estabelecido,
		a.dt_mensalidade_retro,
		b.cd_pessoa_fisica,
		b.qt_dias_reativacao,
		b.ie_mensalidade_proporcional,
		a.nr_seq_mensalidade,
		a.nr_seq_segurado_preco,
		coalesce(pls_dados_grupo_relac_contr(b.nr_seq_contrato,'S'),0)
	from	pls_mensalidade_segurado	a,
		pls_segurado			b,
		pls_segurado_canal_compl	d
	where	b.nr_sequencia		= a.nr_seq_segurado
	and	b.nr_sequencia		= d.nr_seq_segurado
	and	a.nr_seq_mensalidade	= nr_seq_mensalidade_w
	and	((coalesce(nr_seq_vendedor_p::text, '') = '') or (nr_seq_vendedor_p = d.nr_seq_vendedor_canal))
	and	coalesce(b.ie_divisao_repasse,'N') = 'N'
	
union all

	select	a.nr_seq_segurado,
		a.nr_parcela,
		a.vl_mensalidade,
		a.dt_mesano_referencia,
		a.nr_sequencia,
		a.qt_idade,
		coalesce(b.nr_seq_motivo_inclusao,0),
		nr_seq_vendedor_p,
		b.ie_acao_contrato,
		trunc(b.dt_contratacao,'dd'),
		b.nr_seq_plano,
		b.nr_seq_portabilidade,
		b.nr_seq_segurado_ant,
		coalesce(b.ie_divisao_repasse,'N'),
		0 tx_repasse,
		a.vl_pre_estabelecido,
		a.dt_mensalidade_retro,
		b.cd_pessoa_fisica,
		b.qt_dias_reativacao,
		b.ie_mensalidade_proporcional,
		a.nr_seq_mensalidade,
		a.nr_seq_segurado_preco,
		coalesce(pls_dados_grupo_relac_contr(b.nr_seq_contrato,'S'),0)
	from	pls_mensalidade_segurado	a,
		pls_segurado			b
	where	b.nr_sequencia		= a.nr_seq_segurado
	and	a.nr_seq_mensalidade	= nr_seq_mensalidade_w
	and	exists	(	select	1
				from	pls_mensalidade_sca		x,
					pls_mensalidade_seg_item	y,
					pls_sca_vinculo			z
				where	x.nr_seq_item_mens	= y.nr_sequencia
				and	x.nr_seq_vinculo_sca	= z.nr_sequencia
				and	a.nr_sequencia		= y.nr_seq_mensalidade_seg
				and	((coalesce(nr_seq_vendedor_p::text, '') = '') or (nr_seq_vendedor_p = z.nr_seq_vendedor_canal)))
	and	not exists (	select	1
				from	pls_mensalidade_segurado	t,
					pls_segurado			y
				where	t.nr_seq_mensalidade	= nr_seq_mensalidade_w
				and	t.nr_seq_segurado	= y.nr_sequencia
				and	((coalesce(nr_seq_vendedor_p::text, '') = '') or (nr_seq_vendedor_p = y.nr_seq_vendedor_canal))
				and	coalesce(y.ie_divisao_repasse,'N') = 'N')
	and	not exists (	select	1
				from	pls_mensalidade_segurado	g,
					pls_segurado			h,
					pls_segurado_canal_compl	k
				where	g.nr_seq_mensalidade	= nr_seq_mensalidade_w
				and	g.nr_seq_segurado	= h.nr_sequencia
				and	k.nr_seq_segurado	= h.nr_sequencia
				and	((coalesce(nr_seq_vendedor_p::text, '') = '') or (nr_seq_vendedor_p = k.nr_seq_vendedor_canal))
				and	coalesce(h.ie_divisao_repasse,'N') = 'N')
	and	coalesce(b.ie_divisao_repasse,'N') = 'N'
	
union all

	select	a.nr_seq_segurado,
		a.nr_parcela,
		a.vl_mensalidade,
		a.dt_mesano_referencia,
		a.nr_sequencia,
		a.qt_idade,
		coalesce(b.nr_seq_motivo_inclusao,0),
		d.nr_seq_vendedor_canal,
		b.ie_acao_contrato,
		trunc(b.dt_contratacao,'dd'),
		b.nr_seq_plano,
		b.nr_seq_portabilidade,
		b.nr_seq_segurado_ant,
		coalesce(b.ie_divisao_repasse,'N'),
		coalesce(d.tx_repasse,0),
		a.vl_pre_estabelecido,
		a.dt_mensalidade_retro,
		b.cd_pessoa_fisica,
		b.qt_dias_reativacao,
		b.ie_mensalidade_proporcional,
		a.nr_seq_mensalidade,
		a.nr_seq_segurado_preco,
		coalesce(pls_dados_grupo_relac_contr(b.nr_seq_contrato,'S'),0)
	from	pls_mensalidade_segurado	a,
		pls_segurado			b,
		pls_segurado_vendedor		d
	where	b.nr_sequencia		= a.nr_seq_segurado
	and	b.nr_sequencia		= d.nr_seq_segurado
	and	a.nr_seq_mensalidade	= nr_seq_mensalidade_w
	and	((coalesce(nr_seq_vendedor_p::text, '') = '') or (nr_seq_vendedor_p = d.nr_seq_vendedor_canal))
	and	coalesce(b.ie_divisao_repasse,'N') = 'S';

C02 CURSOR FOR
	SELECT	a.ie_tipo_item,
		a.vl_item,
		a.nr_seq_bonificacao_vinculo,
		a.nr_seq_vinculo_sca,
		a.nr_parcela_sca,
		a.nr_sequencia,
		a.dt_retroativa
	from	pls_mensalidade_seg_item	a,
		pls_mensalidade_segurado	c,
		pls_segurado			d
	where	a.nr_seq_mensalidade_seg	= c.nr_sequencia
	and	c.nr_seq_segurado		= d.nr_sequencia
	and	a.ie_tipo_mensalidade 		= 'N'
	and	c.nr_sequencia			= nr_seq_mens_seg_w;

C03 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_acao_contrato,
		a.ie_recebe_valores,
		coalesce(a.vl_premio,0),
		coalesce(a.tx_premio,0),
		a.ie_tipo_item_mensalidade,
		a.nr_seq_grupo_produto,
		coalesce(a.ie_diferenca_migracao,'N'),
		a.ie_dif_alteracao_prod,
		coalesce(a.qt_meses_meta,0),
		a.ie_valor_embutido_sca,
		a.nr_seq_sca,
		coalesce(a.ie_primeira_parc_integral,'N'),
		coalesce(a.ie_vl_integral_primeira_mens,'N'),
		coalesce(a.ie_considerar_carencias,'0')
	from	pls_vendedor_regra	a,
		pls_vendedor		b
	where	b.nr_sequencia	= a.nr_seq_vendedor
	and	b.nr_sequencia	= coalesce(nr_seq_vendedor_regra_w,nr_seq_vendedor_w)
	and (trunc(a.dt_inicio_vigencia,'dd') <= trunc(dt_mesano_referencia_w,'dd'))
	and (coalesce(a.dt_fim_vigencia::text, '') = '' or trunc(a.dt_fim_vigencia,'dd') >= trunc(dt_mesano_referencia_w,'dd'))
	and	((coalesce(a.ie_primeira_parc_integral,'N') = 'N' and coalesce(nr_parcela_ww,a.nr_parcela_inicial) >= a.nr_parcela_inicial and coalesce(nr_parcela_ww,a.nr_parcela_final) <= a.nr_parcela_final)
	or (coalesce(a.ie_primeira_parc_integral,'N') = 'S' and coalesce(nr_parcela_integral_ww, a.nr_parcela_inicial) >= a.nr_parcela_inicial and coalesce(nr_parcela_integral_ww, a.nr_parcela_final) <= a.nr_parcela_final))
	and	((ie_tipo_item_w <> '15') or ((ie_tipo_item_w = '15') and (nr_parcela_sca_w >= coalesce(a.nr_parcela_inicial_sca,nr_parcela_sca_w) and nr_parcela_sca_w <= coalesce(a.nr_parcela_final_sca,nr_parcela_sca_w))))
	and (coalesce(a.ie_acao_contrato,'X') <> 'D' or (qt_parcela_adapt_w between coalesce(a.nr_parcela_ini_adapt,qt_parcela_adapt_w) and coalesce(a.nr_parcela_fin_adapt,qt_parcela_adapt_w)))
	and	((a.ie_acao_contrato = ie_acao_contrato_w) or (coalesce(a.ie_acao_contrato::text, '') = ''))	
	and (coalesce(a.ie_acao_contrato,'X') <> 'M' or (coalesce(a.ie_migracao_valor_superior,'A') = ie_vl_plano_novo_maior_w or coalesce(a.ie_migracao_valor_superior,'A') = 'A'))
	and	(((a.ie_tipo_pessoa = ie_tipo_pessoa_w) or (coalesce(a.ie_tipo_pessoa::text, '') = '')) or (a.ie_tipo_pessoa = 'A'))
	and	((a.ie_aprovacao_benef_ativo = 'S' and coalesce(qt_ativos_w,0) >= coalesce(qt_aprovados_contrato_w,0)) or (a.ie_aprovacao_benef_ativo = 'N'))
	and	((a.nr_seq_motivo_inclusao = nr_seq_motivo_inclusao_w) or (coalesce(a.nr_seq_motivo_inclusao::text, '') = ''))
	and	((a.nr_seq_plano = nr_seq_plano_w) or (coalesce(a.nr_seq_plano::text, '') = ''))
	and	(((a.nr_seq_sca = nr_seq_sca_w) or (coalesce(a.nr_seq_sca::text, '') = '')) or (a.ie_valor_embutido_sca = 'S'))
	and	((a.nr_seq_grupo_produto IS NOT NULL AND a.nr_seq_grupo_produto::text <> '' AND nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '')
	or (coalesce(a.nr_seq_grupo_produto::text, '') = ''))
	and	qt_idade_w between coalesce(a.qt_idade_inicial,qt_idade_w) and coalesce(a.qt_idade_final,qt_idade_w)
	and (qt_dias_contrato_adesao_w between coalesce(a.qt_dias_contrato, qt_dias_contrato_adesao_w) and coalesce(a.qt_dias_contrato_fim, qt_dias_contrato_adesao_w))
	and	((coalesce(a.ie_portabilidade,'N') = 'S' and (nr_seq_portabilidade_w IS NOT NULL AND nr_seq_portabilidade_w::text <> '')) or coalesce(a.ie_portabilidade,'N') = 'N')
	and (coalesce(a.nr_seq_contrato, nr_seq_contrato_w) = nr_seq_contrato_w or
		 coalesce(a.nr_seq_contrato, nr_contrato_principal_w) = nr_contrato_principal_w)
	and (qt_dias_volta_migracao_w > a.qt_dias_tolerancia_volta or coalesce(a.qt_dias_tolerancia_volta::text, '') = '' or qt_seg_migrado_novamente_w = 0)
	and (qt_dias_reativacao_w > a.qt_dias_ate_reativacao or coalesce(a.qt_dias_ate_reativacao::text, '') = '' or qt_dias_reativacao_w = 0)
	and	((coalesce(a.nr_seq_grupo_contrato::text, '') = '') or (exists (	SELECT	1
								from	pls_preco_grupo_contrato x,
									pls_preco_contrato y
								where	x.nr_sequencia = y.nr_seq_grupo
								and	x.nr_sequencia = a.nr_seq_grupo_contrato
								and	y.nr_seq_contrato = nr_seq_contrato_w)))
	and	((a.nr_seq_grupo_relac = nr_seq_grupo_relac_w) or (coalesce(a.nr_seq_grupo_relac::text, '') = ''))								
	and	a.ie_situacao = 'A'
	order by	
		coalesce(a.nr_seq_sca,0),
		coalesce(a.nr_seq_plano,0),
		coalesce(a.nr_seq_grupo_produto,0),
		coalesce(a.nr_seq_contrato, 0),
		coalesce(a.nr_seq_motivo_inclusao,0),
		coalesce(a.ie_diferenca_migracao,'N'),
		coalesce(a.ie_acao_contrato,'9') desc,
		coalesce(a.ie_tipo_item_mensalidade,'A'),
		coalesce(a.nr_parcela_inicial,0),
		coalesce(a.nr_parcela_final,0),
		coalesce(a.nr_parcela_inicial_sca,0),
		coalesce(a.nr_parcela_final_sca,0),
		coalesce(a.ie_portabilidade,'N'),
		coalesce(a.qt_dias_ate_reativacao,0),
		coalesce(a.qt_dias_tolerancia_volta,0),
		coalesce(a.qt_dias_contrato, 0),
		coalesce(a.qt_dias_contrato_fim, 0),
		coalesce(a.qt_idade_final, 0),
		coalesce(a.qt_idade_inicial,0),
		coalesce(a.nr_parcela_ini_adapt, 0),
		coalesce(a.nr_parcela_fin_adapt, 0),
		coalesce(a.ie_aprovacao_benef_ativo,' '),
		coalesce(a.ie_tipo_pessoa, ' '),
		coalesce(a.ie_migracao_valor_superior, ' '),
		coalesce(a.ie_primeira_parc_integral, ' '),
		coalesce(a.nr_seq_grupo_contrato, 0),
		coalesce(a.nr_seq_grupo_relac,0),
		a.dt_inicio_vigencia,
		a.dt_fim_vigencia;
		

C04 CURSOR FOR
	SELECT	coalesce(a.pr_incremento,0),
		coalesce(a.ie_referencia_vidas,'G'),
		a.qt_vidas_min,
		a.qt_vidas_max,
		coalesce(a.ie_considerar_ativos,'N'),
		a.ie_tipo_impacto_cpt,
		coalesce(b.ie_incremento_restritivo,'N')
	from	pls_regra_adic_benef	a,
		pls_vendedor_regra	b
	where	b.nr_sequencia	= a.nr_seq_regra_ven
	and	b.nr_sequencia	= nr_seq_regra_ven_w
	and (qt_idade_w between coalesce(a.qt_idade_min,qt_idade_w) and coalesce(a.qt_idade_max,qt_idade_w))
	and	(((a.ie_tipo_pessoa = ie_tipo_pessoa_w) or (coalesce(a.ie_tipo_pessoa::text, '') = '')) or (a.ie_tipo_pessoa = 'A'))
	and	((a.ie_acao_contrato = ie_acao_contrato_w) or (coalesce(a.ie_acao_contrato::text, '') = ''))
	and	a.ie_situacao = 'A'
	and	b.ie_situacao = 'A'
	order by	a.ie_referencia_vidas,
			a.ie_acao_contrato,
			a.ie_tipo_impacto_cpt,
			a.qt_vidas_min,
			a.qt_vidas_max,
			a.ie_tipo_pessoa;

C05 CURSOR FOR
	SELECT	b.ie_tipo_impacto
	from	pls_carencia		a,
		pls_tipo_carencia	b
	where	a.nr_seq_tipo_carencia	= b.nr_sequencia
	and	a.nr_seq_segurado	= nr_seq_segurado_w
	order by CASE WHEN b.ie_tipo_impacto='N' THEN 0 WHEN b.ie_tipo_impacto='B' THEN 1 WHEN b.ie_tipo_impacto='M' THEN 2 WHEN b.ie_tipo_impacto='A' THEN 3 END;

C06 CURSOR FOR
	SELECT	a.ie_tipo_item
	from	pls_bonificacao_regra	a,
		pls_bonificacao		b
	where	a.nr_seq_bonificacao	= b.nr_sequencia
	and	a.ie_tipo_regra		= 'M'
	and	b.nr_sequencia		= nr_seq_bonificacao_w;

C07 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_tipo_item,
		a.vl_item,
		a.nr_seq_bonificacao_vinculo,
		a.nr_seq_vinculo_sca,
		a.nr_parcela_sca,
		b.nr_seq_plano
	FROM pls_segurado d, pls_mensalidade_segurado c, pls_mensalidade_seg_item a
LEFT OUTER JOIN pls_sca_vinculo b ON (a.nr_seq_vinculo_sca = b.nr_sequencia)
WHERE a.nr_seq_mensalidade_seg	= c.nr_sequencia and c.nr_seq_segurado		= d.nr_sequencia and c.nr_sequencia			= nr_seq_mens_seg_w and a.ie_tipo_mensalidade		= 'N' and a.ie_tipo_item			= 15 and (b.nr_seq_vendedor_canal IS NOT NULL AND b.nr_seq_vendedor_canal::text <> '') and b.nr_seq_vendedor_canal = nr_seq_vendedor_w and b.nr_seq_vendedor_canal <> d.nr_seq_vendedor_canal;

C08 CURSOR FOR
	SELECT	distinct a.nr_sequencia,
		b.nr_seq_contrato,
		a.nr_seq_pagador,
		c.dt_contrato
	from	pls_mensalidade a,
		pls_contrato_pagador b,
		pls_contrato c
	where	b.nr_sequencia	= a.nr_seq_pagador
	and	c.nr_sequencia	= b.nr_seq_contrato
	and	a.nr_seq_lote	= nr_seq_lote_mens_p
	and	coalesce(b.nr_seq_pagador_intercambio::text, '') = ''  --Nao gerar repasse para contratos de intercambio
	and	coalesce(a.ie_cancelamento::text, '') = ''
	and	exists	(	SELECT	1
				from	pls_mensalidade_segurado	x,
					pls_segurado			z,
					pls_sca_vinculo			y
				where	x.nr_seq_segurado	= z.nr_sequencia
				and	z.nr_sequencia		= y.nr_seq_segurado
				and	x.nr_seq_mensalidade	= a.nr_sequencia
				and	((coalesce(nr_seq_vendedor_p::text, '') = '') or (nr_seq_vendedor_p = y.nr_seq_vendedor_canal
									and nr_seq_vendedor_p <> z.nr_seq_vendedor_canal)));

C09 CURSOR FOR
	SELECT	a.nr_seq_segurado,
		a.nr_parcela,
		a.vl_mensalidade,
		a.dt_mesano_referencia,
		a.nr_sequencia,
		a.qt_idade,
		coalesce(b.nr_seq_motivo_inclusao,0),
		b.ie_acao_contrato,
		trunc(b.dt_contratacao,'dd'),
		b.nr_seq_plano,
		d.nr_seq_vendedor_canal,
		coalesce(b.ie_divisao_repasse,'N'),
		a.vl_pre_estabelecido,
		b.qt_dias_reativacao,
		b.ie_mensalidade_proporcional,
		a.nr_seq_mensalidade
	from	pls_mensalidade_segurado	a,
		pls_segurado			b,
		pls_sca_vinculo			d
	where	b.nr_sequencia		= a.nr_seq_segurado
	and	b.nr_sequencia		= d.nr_seq_segurado
	and	a.nr_seq_mensalidade	= nr_seq_mensalidade_w
	and	(d.nr_seq_vendedor_canal IS NOT NULL AND d.nr_seq_vendedor_canal::text <> '')
	and	b.nr_seq_vendedor_canal <> d.nr_seq_vendedor_canal
	and	((coalesce(nr_seq_vendedor_p::text, '') = '') or (nr_seq_vendedor_p = d.nr_seq_vendedor_canal))
	and	coalesce(b.ie_divisao_repasse,'N') = 'N'
	group by a.nr_seq_segurado,
		a.nr_parcela,
		a.vl_mensalidade,
		a.dt_mesano_referencia,
		a.nr_sequencia,
		a.qt_idade,
		b.nr_seq_motivo_inclusao,
		b.ie_acao_contrato,
		b.dt_contratacao,
		b.nr_seq_plano,
		d.nr_seq_vendedor_canal,
		b.ie_divisao_repasse,
		a.vl_pre_estabelecido,
		b.qt_dias_reativacao,
		b.ie_mensalidade_proporcional,
		a.nr_seq_mensalidade;

BEGIN

select	max(ie_carencia_abrangencia_ant)
into STRICT	ie_carencia_abrangencia_ant_w
from	pls_parametros;

open C00;
loop
fetch C00 into
	nr_seq_mensalidade_w,
	nr_seq_contrato_w,
	nr_seq_pagador_w,
	ie_tipo_pessoa_w,
	nr_contrato_principal_w,
	qt_ativos_w,
	qt_aprovados_contrato_w,
	dt_contrato_w;
EXIT WHEN NOT FOUND; /* apply on C00 */
	begin
	
	open C01;
	loop
	fetch C01 into
		nr_seq_segurado_w,
		nr_parcela_w,
		vl_tot_mensalidade_w,
		dt_mesano_referencia_w,
		nr_seq_mens_seg_w,
		qt_idade_w,
		nr_seq_motivo_inclusao_w,
		nr_seq_vendedor_w,
		ie_acao_contrato_w,
		dt_contratacao_w,
		nr_seq_plano_w,
		nr_seq_portabilidade_w,
		nr_seq_segurado_ant_w,
		ie_divisao_repasse_w,
		tx_repasse_divisao_w,
		vl_pre_estabelecido_w,
		dt_mensalidade_retro_w,
		cd_pessoa_fisica_w,
		qt_dias_reativacao_w,
		ie_mensalidade_proporcional_w,
		nr_seq_mensalidade_w,
		nr_seq_segurado_preco_ww,
		nr_seq_grupo_relac_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		nr_parcela_integral_w	:= -1;
		nr_seq_vendedor_regra_w	:= null;
		
		--Obter a quantidade de dias entre a data de contratacao e a data de adesao do beneficiario
		qt_dias_contrato_adesao_w	:= dt_contratacao_w - dt_contrato_w;
		
		if (coalesce(qt_dias_reativacao_w::text, '') = '') then
			select	max(dt_rescisao)
			into STRICT	dt_rescisao_seg_ant_w
			from	pls_segurado
			where	cd_pessoa_fisica = cd_pessoa_fisica_w
			and	nr_sequencia <> nr_seq_segurado_w;
			
			if (dt_rescisao_seg_ant_w IS NOT NULL AND dt_rescisao_seg_ant_w::text <> '') then
				select	obter_dias_entre_datas(dt_rescisao_seg_ant_w, dt_contratacao_w)
				into STRICT	qt_dias_reativacao_w
				;
				
				if (qt_dias_reativacao_w = 0) then
					qt_dias_reativacao_w := 1;
				end if;
			else
				qt_dias_reativacao_w	:= 0;
			end if;
		end if;
		
		if (ie_mensalidade_proporcional_w = 'S') and (trunc(dt_contratacao_w,'dd') <> trunc(dt_contratacao_w,'month')) then
			nr_parcela_integral_w := nr_parcela_w - 1;
		else
			nr_parcela_integral_w := nr_parcela_w;
		end if;
		
		if (ie_divisao_repasse_w = 'S') then
			select	nr_seq_vendedor_canal
			into STRICT	nr_seq_vendedor_regra_w
			from	pls_segurado_vendedor
			where	nr_seq_segurado = nr_seq_segurado_w
			and	ie_vendedor_base = 'S';
		end if;
		
		select	count(1)
		into STRICT	qt_regra_vigente_w
		from	pls_vendedor_regra	a,
			pls_vendedor		b
		where	a.nr_seq_vendedor	= b.nr_sequencia
		and	b.nr_sequencia		= coalesce(nr_seq_vendedor_regra_w, nr_seq_vendedor_w)
		and (trunc(a.dt_inicio_vigencia,'dd') <= trunc(dt_mesano_referencia_w,'dd'))
		and (coalesce(a.dt_fim_vigencia::text, '') = '' or trunc(a.dt_fim_vigencia,'dd') > trunc(dt_mesano_referencia_w,'dd'))
		and	a.ie_situacao = 'A';
		
		nr_seq_vendedor_seg_w	:= nr_seq_vendedor_w;
		if (qt_regra_vigente_w > 0) then
			vl_mensalidade_w	:= 0;
			vl_total_item_w		:= 0;
			vl_total_comissao_w	:= 0;
			vl_incremento_total_w	:= 0;
			
			select	count(1)
			into STRICT	qt_repasse_gerado_w
			from	pls_repasse_mens a,
				pls_repasse_vend b
			where	a.nr_seq_repasse	= b.nr_sequencia
			and	a.nr_seq_mens_seg	= nr_seq_mens_seg_w
			and	b.nr_seq_vendedor	= nr_seq_vendedor_seg_w
			and	b.ie_tipo_repasse	= 'N'
			and	b.ie_status		<> 'C';
			
			select	count(1)
			into STRICT	qt_itens_liberados_w
			from	pls_repasse_mens
			where	nr_seq_mens_seg = nr_seq_mens_seg_w
			and	nr_seq_vendedor = nr_seq_vendedor_w
			and	coalesce(nr_seq_repasse::text, '') = ''
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
			
			if	(qt_repasse_gerado_w = 0 AND qt_itens_liberados_w = 0) then
				select	nextval('pls_repasse_mens_seq')
				into STRICT	nr_seq_repasse_w
				;
				
				insert	into	pls_repasse_mens(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
						nm_usuario_nrec, nr_seq_vendedor, nr_seq_repasse, nr_seq_mens_seg,
						vl_repasse, vl_origem, ie_status, ie_acao_contrato, nr_seq_segurado,
						nr_seq_plano, nr_seq_plano_sca, nr_parcela_benef,
						nr_seq_mensalidade)
					values (	nr_seq_repasse_w, clock_timestamp(), nm_usuario_p, clock_timestamp(),
						nm_usuario_p, nr_seq_vendedor_w, null, nr_seq_mens_seg_w,
						0, 0, 'A', ie_acao_contrato_w, nr_seq_segurado_w,
						nr_seq_plano_w, nr_seq_sca_w, nr_parcela_w,
						nr_seq_mensalidade_w);
				
				--Atualizar os campos na tabela
				qt_parcela_adapt_w		:= 0;
				ie_vl_plano_novo_maior_w	:= 'A';
				qt_dias_volta_migracao_w	:= 0;
				
				if	(ie_acao_contrato_w = 'D') then -- 'D' = Adaptacao de produto(dominio 2115)
					--  Pagto de comissao de Adaptacao de Produto
					select	max(dt_alteracao)
					into STRICT	dt_adaptacao_w
					from	pls_segurado_alt_plano	b,
						pls_segurado		a
					where	a.nr_sequencia = b.nr_seq_segurado
					and	a.nr_sequencia = nr_seq_segurado_w
					and	b.ie_situacao = 'A'
					and	ie_regulamentacao_ant = 'R' -- Pre
					and	ie_regulamentacao_atual <> 'R'; -- Pre
					
					if (dt_adaptacao_w IS NOT NULL AND dt_adaptacao_w::text <> '') and (trunc(dt_mesano_referencia_w,'month') >= trunc(dt_adaptacao_w,'month')) then
						select	trunc(months_between(trunc(dt_mesano_referencia_w,'month'),trunc(dt_adaptacao_w,'month')) + 1)
						into STRICT	qt_parcela_adapt_w
						;
					end if;
				elsif	(ie_acao_contrato_w = 'M') then -- 'M' = Migracao de contrato(dominio 2115)
					-- Regra de Comissionamento de Migracao - Com valor maior e menor
					select	coalesce(max(vl_preco_atual),0)
					into STRICT	vl_segurado_ant_w
					from	pls_segurado_preco
					where	nr_sequencia = (SELECT	max(x.nr_sequencia)
								from	pls_segurado_preco x
								where	x.nr_seq_segurado = nr_seq_segurado_ant_w
								and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> ''));
					
					if (vl_segurado_ant_w < vl_pre_estabelecido_w) then
						ie_vl_plano_novo_maior_w := 'S';
					elsif (vl_segurado_ant_w > vl_pre_estabelecido_w) then
						ie_vl_plano_novo_maior_w := 'N';
					elsif (vl_segurado_ant_w = vl_pre_estabelecido_w) then
						ie_vl_plano_novo_maior_w := 'I';
					end if;
					
					select	count(1)
					into STRICT	qt_seg_migrado_novamente_w
					from	pls_segurado	a,
						pls_segurado	b
					where	a.nr_sequencia		= nr_seq_segurado_w
					and	a.nr_seq_contrato	= b.nr_seq_contrato
					and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
					and	a.nr_seq_segurado_ant	= b.nr_seq_segurado_mig;
					
					if (qt_seg_migrado_novamente_w > 0) then
						select	a.nr_contrato_principal,
							b.dt_migracao
						into STRICT	nr_contrato_principal_ant_w,
							dt_segunda_migracao_w
						from	pls_contrato	a,
							pls_segurado	b
						where	a.nr_sequencia = b.nr_seq_contrato
						and	b.nr_sequencia = nr_seq_segurado_ant_w;
						
						if (nr_contrato_principal_ant_w = nr_contrato_principal_w) then
							select	max(dt_migracao)
							into STRICT	dt_primeira_migracao_w
							from	pls_segurado
							where	cd_pessoa_fisica = cd_pessoa_fisica_w
							and	nr_sequencia <> nr_seq_segurado_w
							and	nr_seq_contrato = (	SELECT	max(x.nr_seq_contrato)
											from	pls_segurado	x
											where	x.nr_sequencia = nr_seq_segurado_w);
							
							qt_dias_volta_migracao_w := dt_segunda_migracao_w - dt_primeira_migracao_w;
						end if;
					end if;
				end if;
				
				select	count(1)
				into STRICT	qt_regra_carencia_w
				from	pls_vendedor_regra
				where	nr_seq_vendedor = nr_seq_vendedor_w
				and	coalesce(ie_considerar_carencias,'0') <> '0' -- Checkbox: (0,1,2,3,4,5)(Nao considerar,Apenas com todas as carencias cumpridas,Apenas beneficiarios com carencias (cumpridas ou nao),Apenas com reducao de carencia (ambas),Apenas com reducao de carencia (manual),Apenas com reducao de carencia (via regra))
				and	ie_situacao = 'A';
				
				ie_tela_carencia_w := 0;
				
				if (qt_regra_carencia_w > 0) then
					select	count(1)
					into STRICT	qt_carencias_w
					from	pls_carencia
					where	nr_seq_segurado	= nr_seq_segurado_w;
					
					if (qt_carencias_w > 0) then
						ie_tela_carencia_w := 1; -- 1 = aba Carencia / 2 = aba Carencias abrangencia nova
						
						if (ie_carencia_abrangencia_ant_w = 'S') and (nr_seq_segurado_ant_w IS NOT NULL AND nr_seq_segurado_ant_w::text <> '') then
							select	a.ie_abrangencia
							into STRICT	ie_abrangencia_atual_w
							from	pls_segurado	b,
								pls_plano	a
							where	a.nr_sequencia	= b.nr_seq_plano
							and	b.nr_sequencia	= nr_seq_segurado_w;
							
							select	a.ie_abrangencia
							into STRICT	ie_abrangencia_ant_w
							from	pls_segurado	b,
								pls_plano	a
							where	a.nr_sequencia	= b.nr_seq_plano
							and	b.nr_sequencia	= nr_seq_segurado_ant_w;
							
							if	((ie_abrangencia_ant_w = 'E') and (ie_abrangencia_atual_w = 'N') or
								((ie_abrangencia_ant_w = 'GM') and (ie_abrangencia_atual_w = 'E') or
								((ie_abrangencia_ant_w = 'GM') and (ie_abrangencia_atual_w = 'N') or
								((ie_abrangencia_ant_w = 'M') and (ie_abrangencia_atual_w = 'E') or
								(ie_abrangencia_ant_w = 'M' AND ie_abrangencia_atual_w = 'N'))))) then
								
								select	count(1)
								into STRICT	qt_cpt_nao_w
								from	pls_carencia
								where	nr_seq_segurado	= nr_seq_segurado_w
								and	ie_cpt = 'N';
								
								if (qt_cpt_nao_w > 0) then
									ie_tela_carencia_w := 2; -- 1 = aba Carencia / 2 = aba Carencias abrangencia nova
								end if;
							end if;
						end if;
					end if;
				end if;
				
				open C02;
				loop
				fetch C02 into
					ie_tipo_item_w,
					vl_item_w,
					nr_seq_bonificacao_vinculo_w,
					nr_seq_vinculo_sca_w,
					nr_parcela_sca_w,
					nr_seq_item_w,
					dt_retroativa_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin
					ie_bonus_w			:= 'N';
					ds_tipo_item_bonificacao_w	:= '';
					nr_seq_sca_w			:= null;
					nr_seq_bonificacao_w		:= null;
					nr_seq_plano_item_w		:= null;
					vl_comissao_w			:= 0;
					nr_parcela_ww			:= nr_parcela_w;
					nr_parcela_integral_ww		:= nr_parcela_integral_w;
					
					if (ie_tipo_item_w = '15') then -- 15 = Servicos e coberturas adicionais
						select	max(nr_seq_plano),
							coalesce(max(nr_seq_vendedor_canal),nr_seq_vendedor_w)
						into STRICT	nr_seq_sca_w,
							nr_seq_vendedor_w
						from	pls_sca_vinculo
						where	nr_sequencia	= nr_seq_vinculo_sca_w;
						
						nr_seq_sca_ww	:= nr_seq_sca_w;
					elsif (ie_tipo_item_w	in ('1','12')) then -- 1 = Preco pre-estabelecido / 12 = Preco pre-estabelecido nao subsidiado
						nr_seq_plano_item_w	:= nr_seq_plano_w;
					elsif (ie_tipo_item_w	= '4') then -- 4 = Reajuste - Cobranca retroativa
						select	count(1)
						into STRICT	qt_regra_cobr_retro_w
						from	pls_vendedor_regra
						where	nr_seq_vendedor = nr_seq_vendedor_w
						and	coalesce(ie_parcela_retroativa,'N') = 'S'
						and	ie_situacao = 'A';
						
						if (qt_regra_cobr_retro_w > 0) then
							select	trunc(months_between(trunc(dt_mesano_referencia_w,'month'),trunc(coalesce(dt_retroativa_w,dt_mensalidade_retro_w),'month')))
							into STRICT	qt_parcela_adapt_w
							;
							
							nr_parcela_ww := nr_parcela_ww - qt_parcela_adapt_w;
							nr_parcela_integral_ww := nr_parcela_integral_ww - qt_parcela_adapt_w;
						end if;
					end if;
					
					if (nr_seq_vendedor_seg_w = nr_seq_vendedor_w) then
						if 	((coalesce(nr_seq_bonificacao_vinculo_w,0) <> 0) and (ie_tipo_item_w ='14')) then
							select	nr_seq_bonificacao
							into STRICT	nr_seq_bonificacao_w
							from	pls_bonificacao_vinculo
							where	nr_sequencia	= nr_seq_bonificacao_vinculo_w;
							
							open C06;
							loop
							fetch C06 into
								ie_tipo_item_bonificacao_w;
							EXIT WHEN NOT FOUND; /* apply on C06 */
								begin
								ds_tipo_item_bonificacao_w	:= ds_tipo_item_bonificacao_w || ',' || ie_tipo_item_bonificacao_w;
								end;
							end loop;
							close C06;
							ds_tipo_item_bonificacao_w	:= substr(ds_tipo_item_bonificacao_w,2,length(ds_tipo_item_bonificacao_w));
							ie_bonus_w	:= 'S';
						end if;
						
						tx_premios_w			:= 0;
						tx_incremento_w			:= 0;
						nr_seq_regra_ven_w		:= null;
						ie_acao_contrato_regra_w	:= null;
						ie_recebe_valores_w		:= null;
						vl_premio_w			:= null;
						tx_premio_w			:= null;
						ie_tipo_item_mensalidade_w	:= null;
						nr_seq_grupo_produto_w		:= null;
						ie_meta_atingida_w		:= 'N';
						ie_valor_embutido_sca_w		:= null;
						nr_seq_sca_regra_w		:= null;
						ie_primeira_parc_integral_w	:= 'N';
						ie_vl_integ_primeira_mens_w	:= 'N';
						ie_diferenca_migracao_w		:= 'N';
						ie_dif_alteracao_prod_w		:= 'N';

						open C03;
						loop
						fetch C03 into
							nr_seq_regra_ven_ww,
							ie_acao_contrato_regra_ww,
							ie_recebe_valores_ww,
							vl_premio_ww,
							tx_premio_ww,
							ie_tipo_item_mensalidade_ww,
							nr_seq_grupo_produto_ww,
							ie_diferenca_migracao_ww,
							ie_dif_alteracao_prod_ww,
							qt_meses_meta_w,
							ie_valor_embutido_sca_ww,
							nr_seq_sca_regra_ww,
							ie_primeira_parc_integral_ww,
							ie_vl_integ_primeira_mens_ww,
							ie_considerar_carencias_ww;
						EXIT WHEN NOT FOUND; /* apply on C03 */
							
							if (qt_meses_meta_w > 0) then
								ie_meta_atingida_w	:= pls_obter_se_meta_atingida(nr_seq_vendedor_p,dt_mesano_referencia_w,qt_meses_meta_w);
							end if;
							
							if	(((nr_seq_grupo_produto_ww IS NOT NULL AND nr_seq_grupo_produto_ww::text <> '') and (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') and pls_se_grupo_preco_produto(nr_seq_grupo_produto_ww,nr_seq_plano_w) = 'S') or (coalesce(nr_seq_grupo_produto_ww::text, '') = '')) then
								if (pls_obter_item_mens(ie_tipo_item_mensalidade_ww,ie_tipo_item_w) = 'S') then
									if	((ie_bonus_w = 'S' and pls_obter_item_mens(ie_tipo_item_mensalidade_ww, ds_tipo_item_bonificacao_w) = 'S') or (ie_bonus_w = 'N')) then
										if (qt_meses_meta_w = 0 or ie_meta_atingida_w in ('S','M')) then
											if (ie_meta_atingida_w = 'M') then
												CALL wheb_mensagem_pck.exibir_mensagem_abort(223106); --Mensagem: Favor verificar se o canal de vendas possui metas informadas
											end if;
											
											ie_considera_regra_w := 'N';
											qt_carencias_isent_w := 0;
											
											if (coalesce(ie_valor_embutido_sca_ww,'N') = 'S' and ie_tipo_item_w = '1' and (nr_seq_sca_regra_ww IS NOT NULL AND nr_seq_sca_regra_ww::text <> '')) then
												select	count(1)
												into STRICT	qt_plano_sca_w
												from	pls_mensalidade_sca	a,
													pls_sca_vinculo		b
												where	a.nr_seq_vinculo_sca	= b.nr_sequencia
												and	a.nr_seq_item_mens	= nr_seq_item_w
												and	b.nr_seq_plano		= nr_seq_sca_regra_ww;
												
												if (qt_plano_sca_w > 0) then
													ie_considera_regra_w := 'S';
												end if;
											else
												ie_considera_regra_w := 'S';
											end if;
											
											if (ie_considera_regra_w = 'S') then
												if (ie_considerar_carencias_ww <> '0') then -- Checkbox: (0,1,2,3,4,5)(Nao considerar,Apenas com todas as carencias cumpridas,Apenas beneficiarios com carencias (cumpridas ou nao),Apenas com reducao de carencia (ambas),Apenas com reducao de carencia (manual),Apenas com reducao de carencia (via regra))
													if (ie_tela_carencia_w <> 0) then -- 1 = aba Carencia / 2 = aba Carencias abrangencia nova
														if (ie_considerar_carencias_ww = '1') then -- 1 = Apenas com todas as carencias cumpridas
															if (ie_tela_carencia_w = '1') then -- 1 = aba Carencia
																select	count(1)
																into STRICT	qt_carencias_nao_cumpridas_w
																from	pls_carencia
																where	nr_seq_segurado = nr_seq_segurado_w
																and	dt_fim_vigencia >= clock_timestamp();
															elsif (ie_tela_carencia_w = '2') then -- 2 = aba Carencias abrangencia nova
																select	count(1)
																into STRICT	qt_carencias_nao_cumpridas_w
																from	pls_carencia
																where	nr_seq_segurado = nr_seq_segurado_w
																and	ie_cpt = 'N'
																and (dt_contratacao_w + coalesce(qt_dias_fora_abrang_ant,qt_dias)) >= clock_timestamp();
															end if;
															
															if (qt_carencias_nao_cumpridas_w > 0) then
																ie_considera_regra_w := 'N';
															else
																select	count(1)
																into STRICT	qt_carencias_isent_w
																from	pls_carencia
																where	nr_seq_segurado = nr_seq_segurado_w
																and (ie_tela_carencia_w = '1' or ie_cpt = 'N')
																and ((nr_seq_regra_isencao IS NOT NULL AND nr_seq_regra_isencao::text <> '') or coalesce(qt_dias_reducao_man,0) > 0);
																
																if (qt_carencias_isent_w > 0) then
																	ie_considera_regra_w := 'N';
																end if;
															end if;
														elsif (ie_considerar_carencias_ww in ('2','3')) then -- 2 = Apenas beneficiarios com carencias (cumpridas ou nao) / 3 = Apenas com reducao de carencia (ambas)
															select	count(1)
															into STRICT	qt_carencias_isent_w
															from	pls_carencia
															where	nr_seq_segurado = nr_seq_segurado_w
															and (ie_tela_carencia_w = '1' or ie_cpt = 'N')
															and ((nr_seq_regra_isencao IS NOT NULL AND nr_seq_regra_isencao::text <> '') or coalesce(qt_dias_reducao_man,0) > 0);
															
															if (qt_carencias_isent_w > 0) then
																if (ie_considerar_carencias_ww = '2') then
																	ie_considera_regra_w := 'N';
																end if;
															else
																if (ie_considerar_carencias_ww = '3') then
																	ie_considera_regra_w := 'N';
																end if;
															end if;
														else
															if (ie_considerar_carencias_ww = '4') then -- 4 = Apenas com reducao de carencia (manual)
																select	count(1)
																into STRICT	qt_carencias_isent_w
																from	pls_carencia
																where	nr_seq_segurado = nr_seq_segurado_w
																and (ie_tela_carencia_w = '1' or ie_cpt = 'N')
																and	coalesce(qt_dias_reducao_man,0) > 0;
															elsif (ie_considerar_carencias_ww = '5') then -- 5 = Apenas com reducao de carencia (via regra)
																select	count(1)
																into STRICT	qt_carencias_isent_w
																from	pls_carencia
																where	nr_seq_segurado = nr_seq_segurado_w
																and (ie_tela_carencia_w = '1' or ie_cpt = 'N')
																and	(nr_seq_regra_isencao IS NOT NULL AND nr_seq_regra_isencao::text <> '');
															end if;
															
															if (qt_carencias_isent_w = 0) then
																ie_considera_regra_w := 'N';
															end if;
														end if;
													else
														ie_considera_regra_w := 'N';
													end if;
												end if;
											end if;
											
											if (ie_considera_regra_w = 'S') and (ie_dif_alteracao_prod_ww = 'S') then
												
												select	count(1)
												into STRICT	qt_registro_w
												from	pls_segurado_alt_plano
												where	nr_seq_segurado	= nr_seq_segurado_w
												and	ie_situacao = 'A';
												
												if (qt_registro_w = 0) then
													ie_considera_regra_w	:= 'N';
												end if;
											end if;
											
											if (ie_considera_regra_w = 'S') then
												nr_seq_regra_ven_w		:= nr_seq_regra_ven_ww;
												ie_acao_contrato_regra_w	:= ie_acao_contrato_regra_ww;
												ie_recebe_valores_w		:= ie_recebe_valores_ww;
												vl_premio_w			:= vl_premio_ww;
												tx_premio_w			:= tx_premio_ww;
												ie_tipo_item_mensalidade_w	:= ie_tipo_item_mensalidade_ww;
												nr_seq_grupo_produto_w		:= nr_seq_grupo_produto_ww;
												ie_diferenca_migracao_w		:= ie_diferenca_migracao_ww;
												ie_dif_alteracao_prod_w		:= ie_dif_alteracao_prod_ww;
												ie_valor_embutido_sca_w		:= coalesce(ie_valor_embutido_sca_ww,'N');
												nr_seq_sca_regra_w		:= nr_seq_sca_regra_ww;
												ie_primeira_parc_integral_w	:= ie_primeira_parc_integral_ww;
												ie_vl_integ_primeira_mens_w	:= ie_vl_integ_primeira_mens_ww;
											end if;
										end if;
									end if;
								end if;
							end if;
						end loop;
						close C03;
						
						ie_calcula_alter_prod_w := 'N';
						
						if (ie_tipo_item_w = '1') then
							if (ie_primeira_parc_integral_w = 'N') and (ie_vl_integ_primeira_mens_w = 'S') then
								if (nr_seq_segurado_preco_ww IS NOT NULL AND nr_seq_segurado_preco_ww::text <> '') then
									nr_seq_segurado_preco_w	:= nr_seq_segurado_preco_ww;
								else
									select	trunc(min(a.dt_reajuste),'month')
									into STRICT	dt_reajuste_w
									from	pls_segurado_preco	a
									where	a.nr_seq_segurado = nr_seq_segurado_w
									and	exists (SELECT	1
											from	pls_mensalidade_segurado	x
											where	x.nr_seq_segurado = a.nr_seq_segurado
											and	trunc(x.dt_mesano_referencia,'month') = trunc(a.dt_reajuste,'month'));
									
									select	max(nr_sequencia)
									into STRICT	nr_seq_segurado_preco_w
									from	pls_segurado_preco
									where	nr_seq_segurado = nr_seq_segurado_w
									and	trunc(dt_reajuste,'month')	= dt_reajuste_w
									and	ie_situacao	= 'A'
									and	cd_motivo_reajuste <> 'E'
									and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
								end if;
								
								if (nr_seq_segurado_preco_w IS NOT NULL AND nr_seq_segurado_preco_w::text <> '') then
									select	vl_preco_atual - vl_desconto
									into STRICT	vl_item_w
									from	pls_segurado_preco
									where	nr_sequencia	= nr_seq_segurado_preco_w;
								else
									vl_item_w	:= 0;
								end if;
							else
								if (ie_diferenca_migracao_w = 'S') then -- S = Calculo migracao sobre a diferenca para o plano antigo
									if (nr_seq_segurado_ant_w IS NOT NULL AND nr_seq_segurado_ant_w::text <> '') then
										select	coalesce(max(vl_preco_atual),0)
										into STRICT	vl_segurado_ant_w
										from	pls_segurado_preco
										where	nr_sequencia	= (	SELECT	max(x.nr_sequencia)
														from	pls_segurado_preco x
														where	x.nr_seq_segurado = nr_seq_segurado_ant_w
														and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> ''));
										if (vl_item_w > vl_segurado_ant_w) then
											vl_item_w := vl_item_w - vl_segurado_ant_w;
										else
											vl_item_w := 0;
										end if;
									else
										vl_item_w := 0;
									end if;
								elsif (ie_dif_alteracao_prod_w = 'S') then
									ie_calcula_alter_prod_w := 'S';
								elsif (ie_valor_embutido_sca_w = 'S') then
									select	sum(a.vl_parcela)
									into STRICT	vl_item_w
									from	pls_mensalidade_sca	a,
										pls_sca_vinculo		b
									where	a.nr_seq_vinculo_sca	= b.nr_sequencia
									and	a.nr_seq_item_mens	= nr_seq_item_w
									and	((b.nr_seq_plano = nr_seq_sca_regra_w) or (coalesce(nr_seq_sca_regra_w::text, '') = ''));
									ie_sca_embutido_w	:= 'S';
									nr_seq_sca_w		:= nr_seq_sca_regra_w;
								end if;
							end if;
						else
							if (ie_dif_alteracao_prod_w = 'S') and (ie_vl_integ_primeira_mens_w = 'N') then
								ie_calcula_alter_prod_w := 'S';
							end if;
						end if;
						
						if (ie_calcula_alter_prod_w = 'S') then
							select	max(nr_sequencia)
							into STRICT	nr_seq_segurado_preco_w
							from	pls_segurado_preco
							where	nr_seq_segurado = nr_seq_segurado_w
							and	cd_motivo_reajuste = 'P' --  P = Alteracao de produto
							and	trunc(dt_reajuste,'month') = trunc(dt_mesano_referencia_w,'month');
							
							if (nr_seq_segurado_preco_w IS NOT NULL AND nr_seq_segurado_preco_w::text <> '') then
								select	coalesce(vl_preco_atual,0)
								into STRICT	vl_preco_atual_w
								from	pls_segurado_preco
								where	nr_sequencia = nr_seq_segurado_preco_w;
								
								select	max(nr_seq_segurado_preco)
								into STRICT	nr_seq_seg_preco_ant_w
								from	pls_mensalidade_segurado
								where	nr_seq_segurado = nr_seq_segurado_w
								and	nr_seq_segurado_preco <> nr_seq_segurado_preco_w
								and	trunc(dt_mesano_referencia,'month') = add_months(trunc(dt_mesano_referencia_w,'month'),-1);
								
								if (coalesce(nr_seq_seg_preco_ant_w,0) = 0) then
									vl_preco_ant_w := vl_preco_atual_w;
								else
									select	coalesce(vl_preco_atual,0)
									into STRICT	vl_preco_ant_w
									from	pls_segurado_preco
									where	nr_sequencia = nr_seq_seg_preco_ant_w;
								end if;
								
								if (vl_preco_atual_w > vl_preco_ant_w) then
									vl_item_w := vl_preco_atual_w - vl_preco_ant_w;
								else
									vl_item_w := 0;
								end if;
							else
								vl_item_w := 0;
							end if;
						end if;
						
						tx_premios_w := tx_premio_w;
						
						open C04; --Itens adicionais
						loop
						fetch C04 into
							pr_incremento_w,
							ie_referencia_vidas_w,
							qt_vidas_min_w,
							qt_vidas_max_w,
							ie_considerar_ativos_w,
							ie_tipo_impacto_cpt_w,
							ie_incremento_restritivo_w;
						EXIT WHEN NOT FOUND; /* apply on C04 */
							begin
							ie_incremento_w	:= 'S';
							if (ie_tipo_impacto_cpt_w IS NOT NULL AND ie_tipo_impacto_cpt_w::text <> '') then
								ie_tipo_impacto_w	:= 'X';
								for r_c05_w in C05 loop
									begin
									ie_tipo_impacto_w	:= r_c05_w.ie_tipo_impacto;
									end;
								end loop;
								
								if (ie_tipo_impacto_cpt_w <> ie_tipo_impacto_w) then
									ie_incremento_w	:= 'N';
								end if;
							end if;
							
							if (ie_incremento_w = 'S') then
								qt_vidas_w := pls_obter_qt_vidas_comissao(nr_seq_contrato_w, null, dt_mesano_referencia_w, ie_acao_contrato_w,
														nr_contrato_principal_w, ie_referencia_vidas_w, ie_considerar_ativos_w);
								
								if (qt_vidas_w between coalesce(qt_vidas_min_w,qt_vidas_w) and coalesce(qt_vidas_max_w,qt_vidas_w)) then
									tx_premios_w := tx_premios_w + pr_incremento_w;
									tx_incremento_w := tx_incremento_w + pr_incremento_w;

									if (ie_incremento_restritivo_w = 'S') then
										exit;
									end if;
								end if;
							end if;
							end;
						end loop;
						close c04;

						if (tx_premios_w = 0) then
							tx_premios_w := tx_premio_w;
						end if;
						
						if (coalesce(nr_seq_regra_ven_w,0) > 0) then
							if (ie_recebe_valores_w = 'S') then
								select	sum(a.vl_item)
								into STRICT	vl_adic_mensalidade_w
								from	pls_mensalidade_seg_item	a,
									pls_mensalidade_segurado	b
								where	a.nr_seq_mensalidade_seg = b.nr_sequencia
								and	b.nr_sequencia		 = nr_seq_mens_seg_w
								and	a.ie_tipo_mensalidade = 'A';
								
								vl_comissao_w := (vl_comissao_w + coalesce(vl_adic_mensalidade_w,0));
							end if;
							
							if	((tx_premios_w > 0) or (vl_premio_w > 0)) then
								vl_mensalidade_w := (round((vl_item_w * tx_premio_w) / 100,2) + vl_premio_w);

								vl_incremento_w	:= coalesce(round((vl_item_w * coalesce(tx_incremento_w,0)) / 100,2) ,0);
								vl_comissao_w := coalesce(vl_comissao_w,0) + coalesce(vl_mensalidade_w,0) + coalesce(vl_incremento_w,0);
								
								vl_incremento_total_w	:= coalesce(vl_incremento_total_w,0) + vl_incremento_w;
								vl_total_item_w	:= coalesce(vl_total_item_w,0) + coalesce(vl_item_w,0);
								vl_total_comissao_w := coalesce(vl_total_comissao_w,0) + coalesce(vl_comissao_w,0);
								
								if (ie_divisao_repasse_w = 'S') then
									vl_comissao_w := round((vl_comissao_w * tx_repasse_divisao_w) / 100,2);
								end if;

								insert	into	pls_repasse_mens_item(	nr_sequencia, nr_seq_repasse, ie_tipo_item,
										dt_atualizacao, dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec,
										pr_repasse, vl_repasse, vl_origem, nr_seq_mensalidade_seg_item,
										nr_seq_plano_sca, nr_seq_bonificacao, vl_item,
										nr_seq_plano, vl_incremento, vl_premio, ie_sca_embutido,
										tx_divisao_repasse, nr_seq_regra)
									values (	nextval('pls_repasse_mens_item_seq'), nr_seq_repasse_w, ie_tipo_item_w,
										clock_timestamp(), clock_timestamp(), nm_usuario_p, nm_usuario_p,
										tx_premios_w, vl_comissao_w, vl_comissao_w, nr_seq_item_w,
										nr_seq_sca_w, nr_seq_bonificacao_w, vl_item_w,
										nr_seq_plano_item_w, vl_incremento_w, vl_premio_w, ie_sca_embutido_w,
										tx_repasse_divisao_w, nr_seq_regra_ven_w);
							end if;
							
							tx_premio_w		:= 0;
							vl_premio_w		:= 0;
							nr_seq_regra_ven_w	:= 0;
							pr_incremento_w		:= 0;
						end if;
					end if;
					end;
				end loop;
				close C02;
				
				select	count(1)
				into STRICT	qt_reg_mens_w
				from	pls_repasse_mens
				where	nr_seq_mens_seg = nr_seq_mens_seg_w;
				
				if (ie_divisao_repasse_w = 'S') then
					vl_total_comissao_w := round((vl_total_comissao_w * tx_repasse_divisao_w) / 100,2);
				end if;
				
				if (vl_total_comissao_w > 0) and (qt_reg_mens_w >= 1) then
					if (nr_seq_sca_ww IS NOT NULL AND nr_seq_sca_ww::text <> '') then
						select	substr(ds_plano,1,255)
						into STRICT	nm_sca_w
						from	pls_plano
						where	nr_sequencia = nr_seq_sca_ww;
					end if;
					
					update	pls_repasse_mens
					set	vl_item_comissao	= vl_total_item_w,
						vl_repasse		= vl_total_comissao_w,
						vl_origem		= vl_total_comissao_w,
						vl_incremento		= vl_incremento_total_w,
						pr_comissao		= tx_premios_w,
						nr_seq_plano_sca	= nr_seq_sca_ww,
						nm_sca			= nm_sca_w
					where	nr_sequencia		= nr_seq_repasse_w;
				else
					delete	from	pls_repasse_mens_item
					where	nr_seq_repasse	= nr_seq_repasse_w;
					
					delete	from	pls_repasse_mens
					where	nr_sequencia	= nr_seq_repasse_w;
				end if;
			end if;
		end if;
		end;
	end loop;
	close C01;
	end;
end loop;
close C00;

open C08; --Comissao para vendedor com vinculo SCA
loop
fetch C08 into
	nr_seq_mensalidade_w,
	nr_seq_contrato_w,
	nr_seq_pagador_w,
	dt_contrato_w;
EXIT WHEN NOT FOUND; /* apply on C08 */
	begin
	nr_contrato_principal_w := null;
	
	if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
		select	CASE WHEN coalesce(cd_pf_estipulante::text, '') = '' THEN 'PJ'  ELSE 'PF' END ,
			nr_contrato_principal
		into STRICT	ie_tipo_pessoa_w,
			nr_contrato_principal_w
		from	pls_contrato
		where	nr_sequencia	= nr_seq_contrato_w;
	end if;
	
	open C09;
	loop
	fetch C09 into
		nr_seq_segurado_w,
		nr_parcela_w,
		vl_tot_mensalidade_w,
		dt_mesano_referencia_w,
		nr_seq_mens_seg_w,
		qt_idade_w,
		nr_seq_motivo_inclusao_w,
		ie_acao_contrato_w,
		dt_contratacao_w,
		nr_seq_plano_w,
		nr_seq_vendedor_w,
		ie_divisao_repasse_w,
		vl_pre_estabelecido_w,
		qt_dias_reativacao_w,
		ie_mensalidade_proporcional_w,
		nr_seq_mensalidade_w;
	EXIT WHEN NOT FOUND; /* apply on C09 */
		begin
		vl_total_comissao_w	:= 0;
		vl_incremento_total_w	:= 0;
		vl_total_item_w		:= 0;
		nr_parcela_integral_w	:= null;
		
		--Obter a quantidade de dias entre a data de contratacao e a data de adesao do beneficiario
		qt_dias_contrato_adesao_w	:= dt_contratacao_w - dt_contrato_w;
		
		if (coalesce(qt_dias_reativacao_w::text, '') = '') then
			select	max(dt_rescisao)
			into STRICT	dt_rescisao_seg_ant_w
			from	pls_segurado
			where	cd_pessoa_fisica = cd_pessoa_fisica_w
			and	nr_sequencia <> nr_seq_segurado_w;
			
			if (dt_rescisao_seg_ant_w IS NOT NULL AND dt_rescisao_seg_ant_w::text <> '') then
				select	obter_dias_entre_datas(dt_rescisao_seg_ant_w, dt_contratacao_w)
				into STRICT	qt_dias_reativacao_w
				;
			else
				qt_dias_reativacao_w	:= 0;
			end if;
		end if;
		
		if (ie_mensalidade_proporcional_w = 'S') and (trunc(dt_contratacao_w,'dd') <> trunc(dt_contratacao_w,'month')) then
			nr_parcela_integral_w := nr_parcela_w - 1;
		else
			nr_parcela_integral_w := nr_parcela_w;
		end if;
		
		select	count(1)
		into STRICT	qt_itens_liberados_w
		from	pls_repasse_mens
		where	nr_seq_mens_seg = nr_seq_mens_seg_w
		and	nr_seq_vendedor = nr_seq_vendedor_w
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
		
		if (qt_itens_liberados_w = 0) then
			select	nextval('pls_repasse_mens_seq')
			into STRICT	nr_seq_repasse_sca_w
			;
			
			insert	into pls_repasse_mens(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
					nm_usuario_nrec, nr_seq_vendedor, nr_seq_repasse, nr_seq_mens_seg,
					ie_status, ie_acao_contrato, nr_seq_segurado, nr_seq_plano,
					vl_mensalidade, vl_repasse, vl_origem, nr_parcela_benef,
					nr_seq_mensalidade)
				values (	nr_seq_repasse_sca_w, clock_timestamp(), nm_usuario_p, clock_timestamp(),
					nm_usuario_p, nr_seq_vendedor_w, null, nr_seq_mens_seg_w,
					'A', ie_acao_contrato_w, nr_seq_segurado_w, nr_seq_plano_w,
					vl_total_item_w, vl_total_comissao_w, vl_total_comissao_w, nr_parcela_w,
					nr_seq_mensalidade_w);
			
			--Atualizar os campos na tabela
			qt_parcela_adapt_w := 0;
			ie_vl_plano_novo_maior_w := 'A';
			
			if	(ie_acao_contrato_w = 'D') then -- 'D' = Adaptacao de produto(dominio 2115)
				--Pagto de comissao de Adaptacao de Produto
				select	max(dt_alteracao)
				into STRICT	dt_adaptacao_w
				from	pls_segurado_alt_plano	b,
					pls_segurado		a
				where	a.nr_sequencia = b.nr_seq_segurado
				and	a.nr_sequencia = nr_seq_segurado_w
				and	ie_regulamentacao_ant = 'R' -- Pre
				and	b.ie_situacao = 'A'
				and	ie_regulamentacao_atual <> 'R'; -- Pre
				
				if (dt_adaptacao_w IS NOT NULL AND dt_adaptacao_w::text <> '') and (trunc(dt_mesano_referencia_w,'month') >= trunc(dt_adaptacao_w,'month')) then
					select	trunc(months_between(trunc(dt_mesano_referencia_w,'month'),trunc(dt_adaptacao_w,'month')) + 1)
					into STRICT	qt_parcela_adapt_w
					;
				end if;
			elsif	(ie_acao_contrato_w = 'M') then -- 'M' = Migracao de contrato(dominio 2115)
				--Regra de Comissionamento de Migracao - Com valor maior e menor
				select	coalesce(max(vl_preco_atual),0)
				into STRICT	vl_segurado_ant_w
				from	pls_segurado_preco
				where	nr_sequencia = (SELECT	max(x.nr_sequencia)
							from	pls_segurado_preco x
							where	x.nr_seq_segurado = nr_seq_segurado_ant_w
							and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> ''));
				
				if (vl_segurado_ant_w < vl_pre_estabelecido_w) then
					ie_vl_plano_novo_maior_w := 'S';
				elsif (vl_segurado_ant_w > vl_pre_estabelecido_w) then
					ie_vl_plano_novo_maior_w := 'N';
				elsif (vl_segurado_ant_w = vl_pre_estabelecido_w) then
					ie_vl_plano_novo_maior_w := 'I';
				end if;
			end if;
			
			select	count(1)
			into STRICT	qt_regra_carencia_w
			from	pls_vendedor_regra
			where	nr_seq_vendedor = nr_seq_vendedor_w
			and	coalesce(ie_considerar_carencias,'0') <> '0' -- Checkbox: (0,1,2,3,4,5)(Nao considerar,Apenas com todas as carencias cumpridas,Apenas beneficiarios com carencias (cumpridas ou nao),Apenas com reducao de carencia (ambas),Apenas com reducao de carencia (manual),Apenas com reducao de carencia (via regra))
			and	ie_situacao = 'A';
			
			ie_tela_carencia_w := 0;
			
			if (qt_regra_carencia_w > 0) then
				select	count(1)
				into STRICT	qt_carencias_w
				from	pls_carencia
				where	nr_seq_segurado	= nr_seq_segurado_w;
				
				if (qt_carencias_w > 0) then
					ie_tela_carencia_w := 1; -- 1 = aba Carencia / 2 = aba Carencias abrangencia nova
					
					if (ie_carencia_abrangencia_ant_w = 'S') and (nr_seq_segurado_ant_w IS NOT NULL AND nr_seq_segurado_ant_w::text <> '') then
						select	a.ie_abrangencia
						into STRICT	ie_abrangencia_atual_w
						from	pls_segurado	b,
							pls_plano	a
						where	a.nr_sequencia	= b.nr_seq_plano
						and	b.nr_sequencia	= nr_seq_segurado_w;
						
						select	a.ie_abrangencia
						into STRICT	ie_abrangencia_ant_w
						from	pls_segurado	b,
							pls_plano	a
						where	a.nr_sequencia	= b.nr_seq_plano
						and	b.nr_sequencia	= nr_seq_segurado_ant_w;
						
						if	((ie_abrangencia_ant_w = 'E') and (ie_abrangencia_atual_w = 'N') or
							((ie_abrangencia_ant_w = 'GM') and (ie_abrangencia_atual_w = 'E') or
							((ie_abrangencia_ant_w = 'GM') and (ie_abrangencia_atual_w = 'N') or
							((ie_abrangencia_ant_w = 'M') and (ie_abrangencia_atual_w = 'E') or
							(ie_abrangencia_ant_w = 'M' AND ie_abrangencia_atual_w = 'N'))))) then
							
							select	count(1)
							into STRICT	qt_cpt_nao_w
							from	pls_carencia
							where	nr_seq_segurado	= nr_seq_segurado_w
							and	ie_cpt = 'N';
							
							if (qt_cpt_nao_w > 0) then
								ie_tela_carencia_w := 2; -- 1 = aba Carencia / 2 = aba Carencias abrangencia nova
							end if;
						end if;
					end if;
				end if;
			end if;
			
			open C07;
			loop
			fetch C07 into
				nr_seq_item_sca_w,
				ie_tipo_item_w,
				vl_item_w,
				nr_seq_bonificacao_vinculo_w,
				nr_seq_vinculo_sca_w,
				nr_parcela_sca_w,
				nr_seq_sca_w;
			EXIT WHEN NOT FOUND; /* apply on C07 */
				begin
				ie_bonus_w			:= 'N';
				ds_tipo_item_bonificacao_w	:= '';
				vl_mensalidade_w		:= 0;
				vl_comissao_w			:= 0;
				nr_parcela_ww			:= nr_parcela_w;
				nr_parcela_integral_ww		:= nr_parcela_integral_w;
				tx_premios_w			:= 0;
				pr_incremento_w			:= 0;
				nr_seq_regra_ven_w		:= null;
				ie_acao_contrato_regra_w	:= null;
				ie_recebe_valores_w		:= null;
				vl_premio_w			:= null;
				tx_premio_w			:= null;
				ie_tipo_item_mensalidade_w	:= null;
				nr_seq_grupo_produto_w		:= null;
				ie_meta_atingida_w		:= 'N';
				ie_valor_embutido_sca_ww	:= null;
				nr_seq_sca_regra_ww		:= null;
				ie_primeira_parc_integral_w	:= 'N';
				ie_vl_integ_primeira_mens_w	:= 'N';
				
				open C03;
				loop
				fetch C03 into
					nr_seq_regra_ven_ww,
					ie_acao_contrato_regra_ww,
					ie_recebe_valores_ww,
					vl_premio_ww,
					tx_premio_ww,
					ie_tipo_item_mensalidade_ww,
					nr_seq_grupo_produto_ww,
					ie_diferenca_migracao_ww,
					ie_dif_alteracao_prod_ww,
					qt_meses_meta_w,
					ie_valor_embutido_sca_ww,
					nr_seq_sca_regra_ww,
					ie_primeira_parc_integral_ww,
					ie_vl_integ_primeira_mens_ww,
					ie_considerar_carencias_ww;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					if (qt_meses_meta_w > 0) then
						ie_meta_atingida_w	:= pls_obter_se_meta_atingida(nr_seq_vendedor_p,dt_mesano_referencia_w,qt_meses_meta_w);
					end if;
					
					if	(((nr_seq_grupo_produto_ww IS NOT NULL AND nr_seq_grupo_produto_ww::text <> '') and (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') and pls_se_grupo_preco_produto(nr_seq_grupo_produto_ww,nr_seq_plano_w) = 'S') or (coalesce(nr_seq_grupo_produto_ww::text, '') = '')) then
						if (pls_obter_item_mens(ie_tipo_item_mensalidade_ww,ie_tipo_item_w) = 'S') then
							if	((ie_bonus_w = 'S' and pls_obter_item_mens(ie_tipo_item_mensalidade_ww, ds_tipo_item_bonificacao_w) = 'S') or (ie_bonus_w = 'N')) then
								if (qt_meses_meta_w = 0 or ie_meta_atingida_w in ('S','M')) then
									if (ie_meta_atingida_w = 'M') then
										CALL wheb_mensagem_pck.exibir_mensagem_abort(223106); --Mensagem: Favor verificar se o canal de vendas possui metas informadas
									end if;
									
									ie_considera_regra_w := 'S';
									qt_carencias_isent_w := 0;
									
									if (ie_considerar_carencias_ww <> '0') then -- Checkbox: (0,1,2,3,4,5)(Nao considerar,Apenas com todas as carencias cumpridas,Apenas beneficiarios com carencias (cumpridas ou nao),Apenas com reducao de carencia (ambas),Apenas com reducao de carencia (manual),Apenas com reducao de carencia (via regra))
										if (ie_tela_carencia_w <> 0) then -- 1 = aba Carencia / 2 = aba Carencias abrangencia nova
											if (ie_considerar_carencias_ww = '1') then -- 1 = Apenas com todas as carencias cumpridas
												if (ie_tela_carencia_w = '1') then -- 1 = aba Carencia
													select	count(1)
													into STRICT	qt_carencias_nao_cumpridas_w
													from	pls_carencia
													where	nr_seq_segurado = nr_seq_segurado_w
													and	dt_fim_vigencia >= clock_timestamp();
												elsif (ie_tela_carencia_w = '2') then -- 2 = aba Carencias abrangencia nova
													select	count(1)
													into STRICT	qt_carencias_nao_cumpridas_w
													from	pls_carencia
													where	nr_seq_segurado = nr_seq_segurado_w
													and	ie_cpt = 'N'
													and (dt_contratacao_w + coalesce(qt_dias_fora_abrang_ant,qt_dias)) >= clock_timestamp();
												end if;
												
												if (qt_carencias_nao_cumpridas_w > 0) then
													ie_considera_regra_w := 'N';
												else
													select	count(1)
													into STRICT	qt_carencias_isent_w
													from	pls_carencia
													where	nr_seq_segurado = nr_seq_segurado_w
													and (ie_tela_carencia_w = '1' or ie_cpt = 'N')
													and ((nr_seq_regra_isencao IS NOT NULL AND nr_seq_regra_isencao::text <> '') or coalesce(qt_dias_reducao_man,0) > 0);
													
													if (qt_carencias_isent_w > 0) then
														ie_considera_regra_w := 'N';
													end if;
												end if;
											elsif (ie_considerar_carencias_ww in ('2','3')) then -- 2 = Apenas beneficiarios com carencias (cumpridas ou nao) / 3 = Apenas com reducao de carencia (ambas)
												select	count(1)
												into STRICT	qt_carencias_isent_w
												from	pls_carencia
												where	nr_seq_segurado = nr_seq_segurado_w
												and (ie_tela_carencia_w = '1' or ie_cpt = 'N')
												and ((nr_seq_regra_isencao IS NOT NULL AND nr_seq_regra_isencao::text <> '') or coalesce(qt_dias_reducao_man,0) > 0);
												
												if (qt_carencias_isent_w > 0) then
													if (ie_considerar_carencias_ww = '2') then
														ie_considera_regra_w := 'N';
													end if;
												else
													if (ie_considerar_carencias_ww = '3') then
														ie_considera_regra_w := 'N';
													end if;
												end if;
											else
												if (ie_considerar_carencias_ww = '4') then -- 4 = Apenas com reducao de carencia (manual)
													select	count(1)
													into STRICT	qt_carencias_isent_w
													from	pls_carencia
													where	nr_seq_segurado = nr_seq_segurado_w
													and (ie_tela_carencia_w = '1' or ie_cpt = 'N')
													and	coalesce(qt_dias_reducao_man,0) > 0;
												elsif (ie_considerar_carencias_ww = '5') then -- 5 = Apenas com reducao de carencia (via regra)
													select	count(1)
													into STRICT	qt_carencias_isent_w
													from	pls_carencia
													where	nr_seq_segurado = nr_seq_segurado_w
													and (ie_tela_carencia_w = '1' or ie_cpt = 'N')
													and	(nr_seq_regra_isencao IS NOT NULL AND nr_seq_regra_isencao::text <> '');
												end if;
												
												if (qt_carencias_isent_w = 0) then
													ie_considera_regra_w := 'N';
												end if;
											end if;
										else
											ie_considera_regra_w := 'N';
										end if;
									end if;
									
									if (ie_considera_regra_w = 'S') then
										nr_seq_regra_ven_w		:= nr_seq_regra_ven_ww;
										ie_acao_contrato_regra_w	:= ie_acao_contrato_regra_ww;
										ie_recebe_valores_w		:= ie_recebe_valores_ww;
										vl_premio_w			:= vl_premio_ww;
										tx_premio_w			:= tx_premio_ww	;
										ie_tipo_item_mensalidade_w	:= ie_tipo_item_mensalidade_ww;
										nr_seq_grupo_produto_w		:= nr_seq_grupo_produto_ww;
										ie_valor_embutido_sca_w		:= ie_valor_embutido_sca_ww;
										nr_seq_sca_w			:= nr_seq_sca_ww;
										ie_primeira_parc_integral_w	:= ie_primeira_parc_integral_ww;
										ie_vl_integ_primeira_mens_w	:= ie_vl_integ_primeira_mens_ww;
									end if;
								end if;
							end if;
						end if;
					end if;
				end loop;
				close C03;
				
				if (coalesce(nr_seq_regra_ven_w,0) > 0) then
					if (ie_tipo_item_w = '1') then
						if (ie_primeira_parc_integral_w = 'N') and (ie_vl_integ_primeira_mens_w = 'S') then
							select	trunc(min(dt_reajuste),'month')
							into STRICT	dt_reajuste_w
							from	pls_segurado_preco
							where	nr_seq_segurado = nr_seq_segurado_w;
							
							select	max(nr_sequencia)
							into STRICT	nr_seq_segurado_preco_w
							from	pls_segurado_preco
							where	nr_seq_segurado = nr_seq_segurado_w
							and	dt_reajuste	= dt_reajuste_w
							and	ie_situacao	= 'A'
							and	cd_motivo_reajuste <> 'E'
							and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
							
							if (nr_seq_segurado_preco_w IS NOT NULL AND nr_seq_segurado_preco_w::text <> '') then
								select	vl_preco_atual - vl_desconto
								into STRICT	vl_item_w
								from	pls_segurado_preco
								where	nr_sequencia	= nr_seq_segurado_preco_w;
							else
								vl_item_w	:= 0;
							end if;
						end if;
					end if;
					
					open C04; --Itens adicionais
					loop
					fetch C04 into
						pr_incremento_w,
						ie_referencia_vidas_w,
						qt_vidas_min_w,
						qt_vidas_max_w,
						ie_considerar_ativos_w,
						ie_tipo_impacto_cpt_w,
						ie_incremento_restritivo_w;
					EXIT WHEN NOT FOUND; /* apply on C04 */
						begin
						ie_incremento_w	:= 'S';
						if (ie_tipo_impacto_cpt_w IS NOT NULL AND ie_tipo_impacto_cpt_w::text <> '') then
							ie_tipo_impacto_w	:= 'X';
							for r_c05_w in C05 loop
								begin
								ie_tipo_impacto_w	:= r_c05_w.ie_tipo_impacto;
								end;
							end loop;
							
							if (ie_tipo_impacto_cpt_w <> ie_tipo_impacto_w) then
								ie_incremento_w	:= 'N';
							end if;
						end if;
						
						if (ie_incremento_w = 'S') then
							qt_vidas_w := pls_obter_qt_vidas_comissao(nr_seq_contrato_w, null, dt_mesano_referencia_w, ie_acao_contrato_w,
												nr_contrato_principal_w, ie_referencia_vidas_w, ie_considerar_ativos_w);
							
							if (qt_vidas_w between coalesce(qt_vidas_min_w,qt_vidas_w) and coalesce(qt_vidas_max_w,qt_vidas_w)) then
								tx_premios_w := tx_premios_w + tx_premio_w + pr_incremento_w;
								if (ie_incremento_restritivo_w = 'S') then
									exit;
								end if;
							end if;
						end if;
						end;
					end loop;
					close c04;
					
					if (tx_premios_w = 0) then
						tx_premios_w := tx_premio_w;
					end if;
					
					if (ie_recebe_valores_w = 'S') then
						select	sum(vl_item)
						into STRICT	vl_adic_mensalidade_w
						from	pls_mensalidade_seg_item
						where	nr_seq_mensalidade_seg = nr_seq_mens_seg_w
						and	ie_tipo_mensalidade = 'A';
						
						vl_comissao_w := (vl_comissao_w + coalesce(vl_adic_mensalidade_w,0));
					end if;
					
					if	((tx_premios_w > 0) or (vl_premio_w > 0)) then
						vl_mensalidade_w := (round((vl_item_w * tx_premio_w) / 100,2) + vl_premio_w);
						vl_incremento_w	:= coalesce((round((vl_item_w * pr_incremento_w) / 100,2)),0);
						vl_comissao_w := coalesce(vl_comissao_w,0) + coalesce(vl_mensalidade_w,0) + coalesce(vl_incremento_w,0);
						
						vl_incremento_total_w	:= coalesce(vl_incremento_total_w,0) + vl_incremento_w;
						vl_total_item_w	:= coalesce(vl_total_item_w,0) + coalesce(vl_item_w,0);
						vl_total_comissao_w := coalesce(vl_total_comissao_w,0) + coalesce(vl_comissao_w,0);
						
						select	count(1)
						into STRICT	qt_repasse_gerado_w
						from	pls_repasse_mens_item	c,
							pls_repasse_mens	a,
							pls_repasse_vend	b
						where	c.nr_seq_repasse	= a.nr_sequencia
						and	a.nr_seq_repasse	= b.nr_sequencia
						and	a.nr_seq_mens_seg	= nr_seq_mens_seg_w
						and	c.nr_seq_mensalidade_seg_item	= nr_seq_item_sca_w
						and	b.ie_tipo_repasse	= 'N';
						
						--Obs: a variavel vl_comissao_w nao pode ser restringida para serem gerados somente os itens cujo valor e maior que zero porque existe os casos de

						--     itens de bonificacao em que os valores sao negativos e mesmo assim devem ser apresentados no comissionamento
						if (vl_comissao_w <> 0) and (qt_repasse_gerado_w = 0) then
							insert	into	pls_repasse_mens_item(	nr_sequencia, nr_seq_repasse, ie_tipo_item,
									dt_atualizacao, dt_atualizacao_nrec, nm_usuario, nm_usuario_nrec,
									pr_repasse, vl_repasse, vl_origem, nr_seq_mensalidade_seg_item, nr_seq_plano_sca,
									nr_seq_bonificacao, vl_item, vl_incremento, vl_premio, nr_seq_regra)
								values (	nextval('pls_repasse_mens_item_seq'), nr_seq_repasse_sca_w, ie_tipo_item_w,
									clock_timestamp(), clock_timestamp(), nm_usuario_p, nm_usuario_p,
									tx_premios_w, vl_comissao_w, vl_comissao_w, nr_seq_item_sca_w, nr_seq_sca_w,
									nr_seq_bonificacao_w, vl_item_w, vl_incremento_w, vl_premio_w, nr_seq_regra_ven_w);
						end if;
					end if;
					tx_premio_w		:= 0;
					vl_premio_w		:= 0;
					nr_seq_regra_ven_w	:= 0;
				end if;
				end;
			end loop;
			close C07;
			
			select	count(1)
			into STRICT	qt_reg_mens_w
			from	pls_repasse_mens
			where	nr_seq_mens_seg = nr_seq_mens_seg_w;
			
			if (vl_total_comissao_w > 0) and (qt_reg_mens_w >= 1) then
				update	pls_repasse_mens
				set	vl_item_comissao	= vl_total_item_w,
					vl_repasse		= vl_total_comissao_w,
					vl_origem		= vl_total_comissao_w,
					vl_incremento		= vl_incremento_total_w,
					pr_comissao		= tx_premios_w,
					nr_seq_plano_sca	= nr_seq_sca_w
				where	nr_sequencia		= nr_seq_repasse_sca_w;
			else
				delete	from	pls_repasse_mens_item
				where	nr_seq_repasse	= nr_seq_repasse_sca_w;
				
				delete	from	pls_repasse_mens
				where	nr_sequencia	= nr_seq_repasse_sca_w;
			end if;
		end if;
		end;
	end loop;
	close C09;
	end;
end loop;
close C08;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_comissao_vendedor ( nr_seq_lote_mens_p bigint, nr_seq_vendedor_p bigint, dt_mes_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

