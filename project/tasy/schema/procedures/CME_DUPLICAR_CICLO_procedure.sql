-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cme_duplicar_ciclo ( nr_seq_ciclo_p bigint, nm_usuario_p text, ds_observacao_p text) AS $body$
DECLARE


nr_seq_ciclo_conj_w			bigint;
nr_sequencia_ciclo_w			cm_ciclo.nr_sequencia%type;
cd_estabelecimento_w			smallint;
cd_setor_atendimento_w			integer;
ds_observacao_w				varchar(255);
nr_seq_equipamento_w			bigint;
nr_ciclo_w				bigint;
qt_temperatura_w			real;
dt_inicio_w				timestamp;
dt_fim_w				timestamp;
qt_pressao_w				real;
ie_pressao_alto_nivel_w			varchar(1);
ie_temperatura_alto_nivel_w		varchar(1);
cd_ciclo_w				varchar(80);
nr_ciclo_controle_w			bigint;
nr_seq_conj_cont_w			bigint;
ie_atualiza_validade_w			varchar(1);

c01 CURSOR FOR
	SELECT	nr_sequencia
	from	cm_conjunto_cont
	where   nr_seq_ciclo = nr_sequencia_ciclo_w;


BEGIN

ie_atualiza_validade_w := obter_param_usuario(406, 20, obter_perfil_ativo, nm_usuario_p, 0, ie_atualiza_validade_w);

select	nextval('cm_ciclo_seq')
into STRICT	nr_sequencia_ciclo_w
;

begin
select	substr(ds_observacao || '  ' || ds_observacao_p,1,250)
into STRICT	ds_observacao_w
from	cm_ciclo
where	nr_Sequencia = nr_seq_ciclo_p;
exception
	when others then
		select	ds_observacao
		into STRICT	ds_observacao_w
		from	cm_ciclo
		where	nr_Sequencia = nr_seq_ciclo_p;
end;

select	cd_estabelecimento,
	cd_setor_atendimento,
	nr_seq_equipamento,
	qt_temperatura,
	dt_inicio,
	dt_fim,
	qt_pressao,
	ie_pressao_alto_nivel,
	ie_temperatura_alto_nivel,
	nr_ciclo_controle
into STRICT	cd_estabelecimento_w,
	cd_setor_atendimento_w,
	nr_seq_equipamento_w,
	qt_temperatura_w,
	dt_inicio_w,
	dt_fim_w,
	qt_pressao_w,
	ie_pressao_alto_nivel_w,
	ie_temperatura_alto_nivel_w,
	nr_ciclo_controle_w
from	cm_ciclo
where	nr_sequencia = nr_seq_ciclo_p;

cd_ciclo_w := cm_obter_lote_ciclo(nr_seq_equipamento_w, nr_seq_ciclo_p, nr_seq_equipamento_w, nm_usuario_p);

select	coalesce(max(nr_ciclo),0) + 1
into STRICT	nr_ciclo_w
from	cm_ciclo
where	nr_seq_equipamento = nr_seq_equipamento_w
and	nr_ciclo_controle = nr_ciclo_controle_w;

insert into cm_ciclo(
	nr_sequencia,
	cd_estabelecimento,
	cd_setor_atendimento,
	ds_observacao,
	nr_seq_equipamento,
	nr_ciclo,
	qt_temperatura,
	dt_inicio,
	dt_fim,
	qt_pressao,
	ie_pressao_alto_nivel,
	ie_temperatura_alto_nivel,
	dt_atualizacao,
	dt_atualizacao_nrec,
	nm_usuario,
	nm_usuario_nrec,
	cd_ciclo,
	nr_ciclo_controle)
values (nr_sequencia_ciclo_w,
	cd_estabelecimento_w,
	cd_setor_atendimento_w,
	ds_observacao_w,
	nr_seq_equipamento_w,
	nr_ciclo_w,
	qt_temperatura_w,
	null,
	null,
	qt_pressao_w,
	ie_pressao_alto_nivel_w,
	ie_temperatura_alto_nivel_w,
	clock_timestamp(),
	clock_timestamp(),
	nm_usuario_p,
	nm_usuario_p,
	cd_ciclo_w,
	nr_ciclo_controle_w);

	commit;

update  cm_conjunto_cont
set     nr_seq_ciclo = nr_sequencia_ciclo_w,
	dt_atualizacao = clock_timestamp(),
	dt_validade  = NULL,
	ie_status_conjunto = 1,
	nm_usuario = nm_usuario_p
where   nr_seq_ciclo = nr_seq_ciclo_p;

if (coalesce(ie_atualiza_validade_w,'N') = 'S') then
	open C01;
	loop
	fetch C01 into
		nr_seq_conj_cont_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		CALL cme_atualiza_validade_lote(nr_seq_conj_cont_w,nm_usuario_p);
		end;
	end loop;
	close C01;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cme_duplicar_ciclo ( nr_seq_ciclo_p bigint, nm_usuario_p text, ds_observacao_p text) FROM PUBLIC;

