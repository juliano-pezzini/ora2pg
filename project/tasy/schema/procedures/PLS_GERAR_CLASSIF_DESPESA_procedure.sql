-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_classif_despesa ( nr_seq_protocolo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_conta_proc_w		bigint;
cd_classificacao_credito_w	varchar(255);
cd_classificacao_debito_w	varchar(255);
nr_seq_grupo_ans_w		bigint;
ie_preco_w			varchar(2);
ie_tipo_relacao_w		varchar(2);
ie_tipo_ato_w			varchar(255)	:= '1';
ie_regulamentacao_w		varchar(2);
ie_tipo_contratacao_w		varchar(2);
ie_segmentacao_w		varchar(2);
nr_seq_grupo_superior_w		bigint;
nr_seq_grupo_ans_ww		bigint;
cd_classificacacao_w		varchar(255);

ie_classif_grupo_w		varchar(5);
ie_classif_grupo_ww		varchar(5);
ie_classif_preco_w		varchar(5);
ie_classif_relacao_w		varchar(5);
ie_classif_ato_w		varchar(5);
ie_classif_regulamentacao_w	varchar(5);
ie_classif_contratacao_w	varchar(5);
ie_classif_segmentacao_w	varchar(5);

dt_referencia_w			timestamp;
nr_seq_plano_w			bigint;
nr_seq_regra_esquema_w		bigint;
cd_conta_credito_w		varchar(20);
cd_conta_debito_w		varchar(20);
cd_historico_padrao_w		bigint;
cd_historico_estorno_w		bigint;
cd_historico_baixa_w		bigint;
ie_esquema_contabil_w		varchar(2);
nr_seq_conta_w			bigint;
ie_tipo_beneficiario_w		varchar(3);
ie_tipo_segurado_w		varchar(3);
ie_tipo_item_w			smallint;
nr_seq_conta_item_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
ie_tipo_despesa_w		varchar(1);
ds_erro_w			varchar(4000);
ie_tipo_guia_w			varchar(2);
nr_seq_tipo_atendimento_w	bigint;
cd_medico_executor_w		varchar(10);
ie_regime_internacao_w		varchar(1);
nr_seq_conselho_w		bigint;
ie_ato_cooperado_w		varchar(1);
nr_seq_prestador_w		bigint;

C01 CURSOR FOR
	SELECT	b.nr_sequencia,
		d.ie_tipo_contratacao,
		d.ie_preco,
		d.ie_segmentacao,
		d.ie_regulamentacao,
		substr(pls_obter_dados_contrato(c.nr_seq_contrato,'TB'),1,3),
		e.ie_tipo_relacao,
		trunc(a.dt_mes_competencia,'month'),
		coalesce(c.ie_tipo_segurado,'B'),
		d.nr_sequencia,
		e.nr_sequencia
	from	pls_protocolo_conta	a,
		pls_conta 		b,
		pls_segurado		c,
		pls_plano 		d,
		pls_prestador 		e
	where	a.nr_sequencia		= nr_seq_protocolo_p
	and	a.nr_sequencia		= b.nr_seq_protocolo
	and	c.nr_sequencia		= b.nr_seq_segurado
	and	d.nr_sequencia		= c.nr_seq_plano
	and	a.nr_seq_prestador	= e.nr_sequencia;

C02 CURSOR FOR
	SELECT	1,
		nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		null,
		nr_seq_grupo_ans,
		ie_ato_cooperado
	from	pls_conta_proc
	where	nr_seq_conta = nr_seq_conta_w
	
union all

	SELECT	2,
		nr_sequencia,
		null,
		null,
		ie_tipo_despesa,
		nr_seq_grupo_ans,
		ie_ato_cooperado
	from	pls_conta_mat
	where	nr_seq_conta = nr_seq_conta_w;

C03 CURSOR FOR
	SELECT	nr_sequencia,
		cd_conta_credito,
		cd_conta_debito,
		cd_historico_padrao,
		cd_historico_estorno,
		cd_historico_baixa,
		ie_esquema_contabil
	from	pls_esquema_contabil
	where	cd_estabelecimento	= cd_estabelecimento_p
	and	ie_tipo_regra		= 'CM'
	and	dt_referencia_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia,dt_referencia_w)
	and (coalesce(nr_seq_plano,coalesce(nr_seq_plano_w,0))		= coalesce(nr_seq_plano_w,0))
	and (coalesce(nr_seq_prestador,coalesce(nr_seq_prestador_w,0))	= coalesce(nr_seq_prestador_w,0))
	order by	coalesce(nr_seq_prestador,0),
			coalesce(nr_seq_evento,0),
			coalesce(nr_seq_plano,0),
			coalesce(cd_conta_credito,'A'),
			coalesce(cd_conta_debito,'A'),
			coalesce(ie_esquema_contabil,0),
			coalesce(dt_inicio_vigencia,clock_timestamp());


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_conta_w,
	ie_tipo_contratacao_w,
	ie_preco_w,
	ie_segmentacao_w,
	ie_regulamentacao_w,
	ie_tipo_beneficiario_w,
	ie_tipo_relacao_w,
	dt_referencia_w,
	ie_tipo_segurado_w,
	nr_seq_plano_w,
	nr_seq_prestador_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	open C02;
	loop
	fetch C02 into
		ie_tipo_item_w,
		nr_seq_conta_item_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		ie_tipo_despesa_w,
		nr_seq_grupo_ans_w,
		ie_ato_cooperado_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		open C03;
		loop
		fetch C03 into
			nr_seq_regra_esquema_w,
			cd_conta_credito_w,
			cd_conta_debito_w,
			cd_historico_padrao_w,
			cd_historico_estorno_w,
			cd_historico_baixa_w,
			ie_esquema_contabil_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
		end loop;
		close C03;

		if (coalesce(ie_esquema_contabil_w::text, '') = '') then
			select	cd_classificacao
			into STRICT	cd_classificacao_credito_w
			from	conta_contabil
			where	cd_conta_contabil = cd_conta_credito_w;

			select	cd_classificacao
			into STRICT	cd_classificacao_debito_w
			from	conta_contabil
			where	cd_conta_contabil = cd_conta_debito_w;

			if 	(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then
				begin
				update	pls_conta_proc
				set	cd_conta_cred		= cd_conta_credito_w,
					cd_conta_deb		= cd_conta_debito_w,
					nr_seq_regra_ctb_cred	= nr_seq_regra_esquema_w,
					nr_seq_regra_ctb_deb	= nr_seq_regra_esquema_w,
					cd_historico		= cd_historico_padrao_w,
					cd_classif_cred		= cd_classificacao_credito_w,
					cd_classif_deb		= cd_classificacao_debito_w
				where	nr_sequencia		= nr_seq_conta_item_w;
				exception
				when others then
					ds_erro_w	:= ds_erro_w || nr_seq_conta_item_w || ',';
				end;
			elsif (ie_tipo_despesa_w IS NOT NULL AND ie_tipo_despesa_w::text <> '') then
				begin
				update	pls_conta_mat
				set	cd_conta_cred		= cd_conta_credito_w,
					cd_conta_deb		= cd_conta_debito_w,
					nr_seq_regra_ctb_cred	= nr_seq_regra_esquema_w,
					nr_seq_regra_ctb_deb	= nr_seq_regra_esquema_w,
					cd_historico		= cd_historico_padrao_w,
					cd_classif_cred		= cd_classificacao_credito_w,
					cd_classif_deb		= cd_classificacao_debito_w
				where	nr_sequencia		= nr_seq_conta_item_w;
				exception
				when others then
					ds_erro_w	:= ds_erro_w || nr_seq_conta_item_w || ',';
				end;
			end if;
		elsif (ie_esquema_contabil_w = '1') then /* ANS - IN 36 */
			/*			CONTA CRÉDITO				*/

			cd_classificacao_credito_w	:= '4.1.2.1.';

			if (coalesce(nr_seq_grupo_ans_w,0) = 0) then
				select	ie_tipo_guia,
					nr_seq_tipo_atendimento,
					cd_medico_executor,
					ie_regime_internacao
				into STRICT	ie_tipo_guia_w,
					nr_seq_tipo_atendimento_w,
					cd_medico_executor_w,
					ie_regime_internacao_w
				from	pls_conta
				where	nr_sequencia = nr_seq_conta_w;

				select	max(nr_seq_conselho)
				into STRICT	nr_seq_conselho_w
				from	pessoa_fisica
				where	cd_pessoa_fisica	= cd_medico_executor_w;

				select	pls_obter_grupo_ans(cd_procedimento_w, ie_origem_proced_w, nr_seq_conselho_w,
					nr_seq_tipo_atendimento_w, ie_tipo_guia_w, ie_regime_internacao_w,
					ie_tipo_despesa_w, 'G', coalesce(cd_estabelecimento_p,0), nr_seq_conta_w)
				into STRICT	nr_seq_grupo_ans_w
				;
			end if;

			select	max(ie_tipo_grupo_ans)
			into STRICT	nr_seq_grupo_ans_w
			from	ans_grupo_despesa
			where	nr_sequencia	= nr_seq_grupo_ans_w;

			/* 5 - Grupo ANS com base nos valores do ITAMED */

			if (coalesce(nr_seq_grupo_ans_w,0) > 0) then
				select	max(nr_seq_grupo_superior)
				into STRICT	nr_seq_grupo_superior_w
				from	ans_grupo_despesa
				where	nr_sequencia	= nr_seq_grupo_ans_w;
			end if;

			if (coalesce(nr_seq_grupo_superior_w,0) = 0) then
				nr_seq_grupo_ans_ww	:= nr_seq_grupo_ans_w;
			else
				nr_seq_grupo_ans_ww	:= nr_seq_grupo_superior_w;
			end if;

			if (nr_seq_grupo_ans_ww = 10) then /* 1 - Consultas */
				ie_classif_grupo_w	:= '1.';
				ie_classif_grupo_ww	:= '0.';
			elsif (nr_seq_grupo_ans_ww = 20) then /* 49 - Exames */
				ie_classif_grupo_w	:= '2.';
				ie_classif_grupo_ww	:= '0.';
			elsif (nr_seq_grupo_ans_ww = 30) then /* 51 - Terapias */
				ie_classif_grupo_w	:= '3.';
				ie_classif_grupo_ww	:= '0.';
			elsif (nr_seq_grupo_ans_ww = 41) then /* 7 - Internação - Honorário médico */
				ie_classif_grupo_w	:= '4.';
				ie_classif_grupo_ww	:= '1.';
			elsif (nr_seq_grupo_ans_ww = 42) then /* 8 - Internação - Exames */
				ie_classif_grupo_w	:= '4.';
				ie_classif_grupo_ww	:= '2.';
			elsif (nr_seq_grupo_ans_ww = 43) then /* 9 - Internação - Terapias*/
				ie_classif_grupo_w	:= '4.';
				ie_classif_grupo_ww	:= '3.';
			elsif (nr_seq_grupo_ans_ww = 44) then /* 10 - Internação - Materiais médicos */
				ie_classif_grupo_w	:= '4.';
				ie_classif_grupo_ww	:= '4.';
			elsif (nr_seq_grupo_ans_ww = 45) then /* 11 - Internação - Medicamentos */
				ie_classif_grupo_w	:= '4.';
				ie_classif_grupo_ww	:= '5.';
			elsif (nr_seq_grupo_ans_ww = 49) then /* 12 - Internação - Outras despesas */
				ie_classif_grupo_w	:= '4.';
				ie_classif_grupo_ww	:= '9.';
			elsif (nr_seq_grupo_ans_ww = 50) then /* 6 - Outros atendimentos - Ambulatoriais */
				ie_classif_grupo_w	:= '5.';
				ie_classif_grupo_ww	:= '0.';
			elsif (nr_seq_grupo_ans_ww = 60) then /* 16 - Demais despesas assistenciais */
				ie_classif_grupo_w	:= '6.';
				ie_classif_grupo_ww	:= '0.';
			end if;

			/* 6 - Formação do preço */

			if (ie_preco_w = '1') then
				ie_classif_preco_w	:= '1.';
			elsif (ie_preco_w in ('2','3')) then
				ie_classif_preco_w	:= '2.';
			end if;

			/* 7 - Tipo relação */

			if (ie_tipo_relacao_w = 'P') then
				ie_classif_relacao_w	:= '1.';
			elsif (ie_tipo_relacao_w in ('D','I')) then
				ie_classif_relacao_w	:= '2.';
			else
				ie_classif_relacao_w	:= '9.';
			end if;

			/* 8  - Contin. Plano Contas */

			/*
			0	FIXO no Caso de Consultas Exemas e Terapias  (Ambulatorio)
			1	Honorarios Médicos ¿ Internação
			2	Exames ¿ Internação
			3	Terapias ¿ Internação
			4	Materiais Médicos ¿ Internaçao
			5	Medicamentos ¿ Internação
			9	Outras despesas ¿ Internação
			*/
			/* 9 - Contin. Plano Contas */

			--ie_classif_ato_w	:= '0.';
			if (ie_ato_cooperado_w = '1') then
				ie_classif_ato_w	:= '1.';
			elsif (ie_ato_cooperado_w = '2') then
				ie_classif_ato_w	:= '2.';
			elsif (ie_ato_cooperado_w = '3') then
				ie_classif_ato_w	:= '7.';
			end if;

			/* 10 - Regulamentação */

			if (ie_regulamentacao_w	= 'R') then
				ie_classif_regulamentacao_w	:= '1.';
			else
				ie_classif_regulamentacao_w	:= '2.';
			end if;

			/* 11 - Tipo de contratação */

			if (ie_tipo_contratacao_w = 'I') then
				ie_classif_contratacao_w	:= '1.';
			elsif (ie_tipo_contratacao_w = 'CE') then
				ie_classif_contratacao_w	:= '3.';
			elsif (ie_tipo_contratacao_w = 'CA') then
				ie_classif_contratacao_w	:= '4.';
			end if;

			/* 12 e 13 - Segmentação */

			ie_classif_segmentacao_w	:= lpad(ie_segmentacao_w,2,'0');

			/*				1 ... 4				5			6			7			8		*/

			cd_classificacao_credito_w :=	cd_classificacao_credito_w ||	ie_classif_grupo_w || 	ie_classif_preco_w ||	ie_classif_relacao_w ||	ie_classif_grupo_ww ||
			/*				9			10				11				12 e 13	*/

							ie_classif_ato_w ||	ie_classif_regulamentacao_w || 	ie_classif_contratacao_w || 	ie_classif_segmentacao_w;

			select	max(cd_conta_contabil)
			into STRICT	cd_conta_credito_w
			from	conta_contabil
			where	cd_classificacao	= cd_classificacao_credito_w
			and	ie_tipo			= 'A';

			/*			CONTA DÉBITO				*/

			cd_classificacao_debito_w	:= '1.2.3.3.1';

			/*				1 ... 5				6			7 ... 9	*/

			cd_classificacao_debito_w :=	cd_classificacao_debito_w ||	ie_classif_relacao_w || '1.0.0';

			select	max(cd_conta_contabil)
			into STRICT	cd_conta_debito_w
			from	conta_contabil
			where	cd_classificacao	= cd_classificacao_debito_w
			and	ie_tipo			= 'A';

			if 	(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then
				begin
				update	pls_conta_proc
				set	cd_conta_cred		= cd_conta_credito_w,
					cd_conta_deb		= cd_conta_debito_w,
					nr_seq_regra_ctb_cred	= nr_seq_regra_esquema_w,
					nr_seq_regra_ctb_deb	= nr_seq_regra_esquema_w,
					cd_historico		= cd_historico_padrao_w,
					cd_classif_cred		= cd_classificacao_credito_w,
					cd_classif_deb		= cd_classificacao_debito_w
				where	nr_sequencia		= nr_seq_conta_item_w;
				exception
				when others then
					ds_erro_w	:= ds_erro_w || nr_seq_conta_item_w || ',';
				end;
			elsif (ie_tipo_despesa_w IS NOT NULL AND ie_tipo_despesa_w::text <> '') then
				begin
				update	pls_conta_mat
				set	cd_conta_cred		= cd_conta_credito_w,
					cd_conta_deb		= cd_conta_debito_w,
					nr_seq_regra_ctb_cred	= nr_seq_regra_esquema_w,
					nr_seq_regra_ctb_deb	= nr_seq_regra_esquema_w,
					cd_historico		= cd_historico_padrao_w,
					cd_classif_cred		= cd_classificacao_credito_w,
					cd_classif_deb		= cd_classificacao_debito_w
				where	nr_sequencia		= nr_seq_conta_item_w;
				exception
				when others then
					ds_erro_w	:= ds_erro_w || nr_seq_conta_item_w || ',';
				end;
			end if;
		end if;
		end;
	end loop;
	close C02;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_classif_despesa ( nr_seq_protocolo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

