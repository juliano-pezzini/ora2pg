-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ur_atualizar_dados_cliente ( CD_MUNICIPIO_IBGE_p text, NR_CPF_p text, DT_CADASTRO_ORIGINAL_p timestamp, DT_EMISSAO_CERT_NASC_p timestamp, IE_ESTADO_CIVIL_p text, FK_TP_ESC_p text, NR_IDENTIDADE_p text, BLOQ_MODIF_EMP_p text, COD_CON_p text, CD_EMPRESA_p bigint, COD_PLAN_p text, DH_VALIDADE_MATRICULA_p timestamp, MATRICULA_p text, MATRICULA_TITULAR_p text, SN_MATRICULA_ATIVA_p text, CD_CEP_p text, DS_ENDERECO_p text, NR_ENDERECO_p bigint, DS_COMPLEMENTO_p text, DS_BAIRRO_p text, DS_MUNICIPIO_p text, SG_ESTADO_p text, DT_NASCIMENTO_p timestamp, NOME_MAE_p text, NM_PESSOA_FISICA_p text, NOME_PAI_p text, NR_PIS_PASEP_p text, IE_SEXO_p text, NM_USUARIO_p text, CD_PESSOA_FISICA_p INOUT text) AS $body$
DECLARE


cd_pessoa_fisica_w		varchar(10);
nr_sequencia_w			integer;
qt_registro_w			bigint;
qt_empresa_w			bigint;
qt_convenio_w			bigint;
ds_erro_w			varchar(2000);


BEGIN

select	nextval('pessoa_fisica_seq')
into STRICT	cd_pessoa_fisica_w
;

select 	count(*)
into STRICT	qt_empresa_w
from 	empresa
where 	cd_empresa = CD_EMPRESA_p;

insert into pessoa_fisica(
	cd_pessoa_fisica,
	nm_usuario,
	dt_atualizacao,
	nm_usuario_nrec,
	dt_atualizacao_nrec,
	nm_pessoa_fisica,
	dt_nascimento,
	ie_sexo,
	nr_cpf,
	nr_identidade,
	ie_tipo_pessoa,
	nr_pis_pasep,
	ie_estado_civil,
	dt_cadastro_original,
	dt_emissao_cert_nasc,
	cd_empresa,
	cd_municipio_ibge,
	nr_prontuario)
values (cd_pessoa_fisica_w,
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	substr(NM_PESSOA_FISICA_p,1,60),
	dt_nascimento_p,
	IE_SEXO_p,
	substr(lpad(NR_CPF_p,11,'0'),1,11),
	substr(nr_identidade_p,1,15),
	1,
	NR_PIS_PASEP_p,
	IE_ESTADO_CIVIL_p,
	DT_CADASTRO_ORIGINAL_p,
	DT_EMISSAO_CERT_NASC_p,
	CASE WHEN qt_empresa_w=0 THEN  null  ELSE CD_EMPRESA_p END ,
	CD_MUNICIPIO_IBGE_p,
	nextval('prontuario_seq'));

if (NOME_MAE_p IS NOT NULL AND NOME_MAE_p::text <> '') then

	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_sequencia_w
	from	compl_pessoa_fisica
	where	cd_pessoa_fisica	= cd_pessoa_fisica_w;

	insert into compl_pessoa_fisica(nr_sequencia,
		cd_pessoa_fisica,
		ie_tipo_complemento,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		nm_usuario,
		dt_atualizacao,
		nm_contato)
	values (nr_sequencia_w,
		cd_pessoa_fisica_w,
		5,
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		substr(NOME_MAE_p,1,60));
end if;

if (NOME_PAI_p IS NOT NULL AND NOME_PAI_p::text <> '') then

	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_sequencia_w
	from	compl_pessoa_fisica
	where	cd_pessoa_fisica	= cd_pessoa_fisica_w;

	insert into compl_pessoa_fisica(nr_sequencia,
		cd_pessoa_fisica,
		ie_tipo_complemento,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		nm_usuario,
		dt_atualizacao,
		nm_contato)
	values (nr_sequencia_w,
		cd_pessoa_fisica_w,
		4,
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		substr(NOME_PAI_p,1,60));

end if;

select	coalesce(max(nr_sequencia),0) + 1
into STRICT	nr_sequencia_w
from	compl_pessoa_fisica
where	cd_pessoa_fisica	= cd_pessoa_fisica_w;

insert into compl_pessoa_fisica(nr_sequencia,
	cd_pessoa_fisica,
	ie_tipo_complemento,
	nm_usuario_nrec,
	dt_atualizacao_nrec,
	nm_usuario,
	dt_atualizacao,
	ds_endereco,
	ds_bairro,
	cd_municipio_ibge,
	ds_municipio,
	cd_cep,
	sg_estado,
	nr_endereco,
	ds_complemento)
values (nr_sequencia_w,
	cd_pessoa_fisica_w,
	1,
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	substr(DS_ENDERECO_p,1,40),
	substr(DS_BAIRRO_p,1,80),
	substr(CD_MUNICIPIO_IBGE_p,1,6),
	substr(DS_MUNICIPIO_p,1,40),
	substr(CD_CEP_p,1,15),
	substr(SG_ESTADO_p,1,15),
	NR_ENDERECO_p,
	DS_COMPLEMENTO_p);

select 	count(*)
into STRICT	qt_convenio_w
from 	convenio
where 	cd_convenio = COD_CON_p;

if (qt_convenio_w > 0) then

	begin
	insert into pessoa_titular_convenio(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_pessoa_fisica,
		cd_convenio,
		cd_pessoa_titular,
		cd_categoria,
		dt_inicio_vigencia,
		dt_fim_vigencia,
		dt_validade_carteira,
		cd_usuario_convenio,
		cd_plano_convenio,
		cd_empresa_refer,
		cd_usuario_convenio_tit)
	values (nextval('pessoa_titular_convenio_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_pessoa_fisica_w,
		COD_CON_p,
		null,
		null,
		clock_timestamp(),
		null,
		DH_VALIDADE_MATRICULA_p,
		MATRICULA_p,
		COD_PLAN_p,
		CASE WHEN qt_empresa_w=0 THEN  null  ELSE CD_EMPRESA_p END ,
		MATRICULA_TITULAR_p);
	exception
		when others then
		ds_erro_w	:= sqlerrm(SQLSTATE);
		CALL gravar_log_tasy(1478, ds_erro_w, nm_usuario_p);
	end;

end if;

commit;

cd_pessoa_fisica_p	:= cd_pessoa_fisica_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ur_atualizar_dados_cliente ( CD_MUNICIPIO_IBGE_p text, NR_CPF_p text, DT_CADASTRO_ORIGINAL_p timestamp, DT_EMISSAO_CERT_NASC_p timestamp, IE_ESTADO_CIVIL_p text, FK_TP_ESC_p text, NR_IDENTIDADE_p text, BLOQ_MODIF_EMP_p text, COD_CON_p text, CD_EMPRESA_p bigint, COD_PLAN_p text, DH_VALIDADE_MATRICULA_p timestamp, MATRICULA_p text, MATRICULA_TITULAR_p text, SN_MATRICULA_ATIVA_p text, CD_CEP_p text, DS_ENDERECO_p text, NR_ENDERECO_p bigint, DS_COMPLEMENTO_p text, DS_BAIRRO_p text, DS_MUNICIPIO_p text, SG_ESTADO_p text, DT_NASCIMENTO_p timestamp, NOME_MAE_p text, NM_PESSOA_FISICA_p text, NOME_PAI_p text, NR_PIS_PASEP_p text, IE_SEXO_p text, NM_USUARIO_p text, CD_PESSOA_FISICA_p INOUT text) FROM PUBLIC;

