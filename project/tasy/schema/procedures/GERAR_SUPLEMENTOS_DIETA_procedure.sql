-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_suplementos_dieta ( nr_prescricao_p bigint, nr_seq_dieta_p bigint, nm_usuario_p text, cd_perfil_p bigint) AS $body$
DECLARE

 
cd_dieta_w					bigint;
cd_material_w				integer;
ie_via_aplicacao_w			varchar(5);
cd_unidade_medida_dose_w	varchar(30);
qt_dose_w					double precision;
nr_sequencia_w				bigint;
qt_conversao_dose_w			double precision;
qt_unitaria_w				double precision;
ie_origem_inf_w				varchar(1);
cd_estabelecimento_w		smallint;
nr_ocorrencia_w				double precision;
ds_horarios_w				varchar(2000);
cd_intervalo_w				varchar(10);
qt_material_w				double precision;
qt_total_dispensar_w		double precision;
ie_regra_disp_w				varchar(1);
qt_dose_especial_w			integer;
qt_dias_util_w				double precision;
ds_erro_w					varchar(4000);
nr_horas_validade_w			bigint;
sql_w                   varchar(5000);		
		
c01 CURSOR FOR 
SELECT	cd_material, 
		ie_via_aplicacao, 
		coalesce(cd_unidade_medida_dose,substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UMS'),1,30)), 
		coalesce(qt_dose,0) 
from	material_dieta 
where	cd_dieta	= cd_dieta_w 
and		coalesce(cd_unidade_medida_dose,obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UMS')) is not null;


BEGIN 
 
select	substr(coalesce(obter_tipo_pessoa(max(cd_pessoa_fisica)),0),1,1), 
		max(cd_estabelecimento) 
into STRICT	ie_origem_inf_w, 
		cd_estabelecimento_w 
from	usuario 
where	nm_usuario	= nm_usuario_p;
 
select	max(cd_dieta), 
		max(cd_intervalo), 
		max(ds_horarios) 
into STRICT	cd_dieta_w, 
		cd_intervalo_w, 
		ds_horarios_w 
from	prescr_dieta 
where	nr_prescricao	= nr_prescricao_p 
and		nr_sequencia	= nr_seq_dieta_p;
 
select	max(nr_horas_validade) 
into STRICT	nr_horas_validade_w 
from	prescr_medica 
where	nr_prescricao = nr_prescricao_p;
 
open C01;
loop 
fetch C01 into	 
	cd_material_w, 
	ie_via_aplicacao_w, 
	cd_unidade_medida_dose_w, 
	qt_dose_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	select	coalesce(max(qt_conversao),0) 
	into STRICT	qt_conversao_dose_w 
	from	unidade_medida_dose_v 
	where	cd_material		= cd_material_w 
	and		cd_unidade_medida	= cd_unidade_medida_dose_w;
	 
    
      begin
          
      sql_w := 'CALL obter_qt_unitaria_dieta_md(:1, :2) INTO :qt_unitaria_w';
      EXECUTE sql_w USING IN qt_dose_w,
                                    IN qt_conversao_dose_w,
                                    OUT qt_unitaria_w;

      exception
        when others then
          qt_unitaria_w := null;
      end;

	
	select	coalesce(max(nr_sequencia),0) + 1 
	into STRICT	nr_sequencia_w 
	from	prescr_material 
	where	nr_prescricao	= nr_prescricao_p;
 
	select	max(obter_ocorrencias_horarios_rep(ds_horarios_w)) 
	into STRICT	nr_ocorrencia_w 
	;
	 
	if (nr_ocorrencia_w = 0) then 
		select	coalesce(obter_ocorrencia_intervalo(cd_intervalo_w,nr_horas_validade_w,'O'),1) 
		into STRICT	nr_ocorrencia_w 
		;
	end if;
	 
	qt_material_w := qt_dose_w;
	 
	insert into	prescr_material(	 
					nr_sequencia, 
					cd_material, 
					cd_perfil_ativo, 
					cd_unidade_medida, 
					cd_unidade_medida_dose, 
					dt_atualizacao, 
					dt_atualizacao_nrec, 
					ie_via_aplicacao, 
					nm_usuario, 
					nm_usuario_original, 
					nr_prescricao, 
					nr_sequencia_dieta, 
					qt_dose, 
					ie_agrupador, 
					qt_conversao_dose, 
					qt_material, 
					ie_origem_inf, 
					qt_unitaria, 
					cd_intervalo, 
					ds_horarios, 
					nr_ocorrencia 
			) values ( 
					nr_sequencia_w, 
					cd_material_w, 
					cd_perfil_p, 
					cd_unidade_medida_dose_w, 
					cd_unidade_medida_dose_w, 
					clock_timestamp(), 
					clock_timestamp(), 
					ie_via_aplicacao_w, 
					nm_usuario_p, 
					nm_usuario_p, 
					nr_prescricao_p, 
					nr_seq_dieta_p, 
					qt_dose_w, 
					6, 
					qt_conversao_dose_w, 
					qt_material_w, 
					ie_origem_inf_w, 
					qt_unitaria_w, 
					cd_intervalo_w, 
					ds_horarios_w, 
					nr_ocorrencia_w);
			 
	SELECT * FROM obter_quant_dispensar( 
		cd_estabelecimento_w, cd_material_w, nr_prescricao_p, nr_sequencia_w, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, 0, nr_ocorrencia_w, null, ie_origem_inf_w, cd_unidade_medida_dose_w, 0, qt_material_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w, 'N', 'N') INTO STRICT qt_material_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w;
		 
	update	prescr_material 
	set		qt_material			= qt_material_w, 
			qt_total_dispensar	= qt_total_dispensar_w, 
			ie_regra_disp		= CASE WHEN coalesce(ie_regra_disp,'X')='D' THEN  ie_regra_disp  ELSE ie_regra_disp_w END  
	where	nr_prescricao		= nr_prescricao_p 
	and		nr_sequencia		= nr_sequencia_w;
	 
	end;
end loop;
close C01;
 
if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_suplementos_dieta ( nr_prescricao_p bigint, nr_seq_dieta_p bigint, nm_usuario_p text, cd_perfil_p bigint) FROM PUBLIC;

