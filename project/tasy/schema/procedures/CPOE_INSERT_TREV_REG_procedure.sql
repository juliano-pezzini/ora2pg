-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_insert_trev_reg (nr_seq_mat_cpoe_p bigint, nr_prescricao_p bigint) AS $body$
DECLARE


hr_prim_horario_w	cpoe_material.hr_prim_horario%type;
dt_inicio_w	cpoe_material.dt_inicio%type;
ie_trev_w	cpoe_material.ie_trev%type;
nr_seq_prescr_rep_he_w	prescr_rep_he.nr_sequencia%type;
nr_seq_prescr_rep_he_elem_w	prescr_rep_he_elem.nr_sequencia%type;

nr_seq_cpoe_trev_w	cpoe_trev.nr_sequencia%type;
nr_seq_ele_cpoe_w	cpoe_trev_elem.nr_sequencia%type;

cd_pessoa_fisica_w	cpoe_material.cd_pessoa_fisica%type;

qt_idade_ano_w	integer;
qt_idade_dia_w	integer;
qt_idade_mes_w	integer;

c01 CURSOR FOR
SELECT	*
from	cpoe_trev
where	nr_seq_mat_cpoe = nr_seq_mat_cpoe_p  LIMIT 1;

c02 CURSOR FOR
SELECT	*
from	cpoe_trev_elem
where	nr_seq_cpoe_trev = nr_seq_cpoe_trev_w;

c03 CURSOR FOR
SELECT	*
from	cpoe_trev_elem_mat
where	nr_seq_ele_cpoe = nr_seq_ele_cpoe_w;

BEGIN
if (nr_seq_mat_cpoe_p IS NOT NULL AND nr_seq_mat_cpoe_p::text <> '') then

	select max(hr_prim_horario),
		max(dt_inicio),
		coalesce(max(ie_trev), 'N'),
		max(cd_pessoa_fisica)
	into STRICT	hr_prim_horario_w,
		dt_inicio_w,
		ie_trev_w,
		cd_pessoa_fisica_w
	from	cpoe_material
	where	nr_sequencia = nr_seq_mat_cpoe_p;
	
	
	if (coalesce(hr_prim_horario_w::text, '') = '') then
		hr_prim_horario_w := to_char(dt_inicio_w, 'hh24:mi');
	end if;
	
	if (ie_trev_w = 'S') then
		for cpoe_trev_w in C01
		loop
			nr_seq_cpoe_trev_w := cpoe_trev_w.nr_sequencia;
			
			select	nextval('prescr_rep_he_seq')
			into STRICT	nr_seq_prescr_rep_he_w
			;
			
			
			Select	substr(obter_idade(dt_nascimento,clock_timestamp(),'A'),1,5),
				substr(obter_idade(dt_nascimento,clock_timestamp(),'MM'),1,5),
				substr(obter_idade(dt_nascimento,clock_timestamp(),'DI'),1,5)
			into STRICT	qt_idade_ano_w,
				qt_idade_dia_w,
				qt_idade_mes_w
			from	pessoa_fisica
			where	cd_pessoa_fisica = cd_pessoa_fisica_w;
			
			insert into prescr_rep_he(
					nr_sequencia,
					nr_prescricao,	
					hr_prim_horario,
					dt_prim_horario,
					ie_bomba_infusao,
					ie_calculo_auto,
					ie_correcao,
					ie_emissao,
					ie_magnesio,
					ie_peso_calorico,
					ie_processo_hidrico,
					pr_conc_glic_solucao,
					qt_altura_cm,
					qt_aporte_hidrico_diario,
					qt_be,
					qt_equipo,
					qt_etapa,
					qt_gotejo,
					qt_hora_fase,
					qt_hora_validade,
					qt_idade_ano,
					qt_idade_dia,
					qt_idade_mes,
					qt_kcal_kg,
					qt_kcal_total,
					qt_nec_hidrica_diaria,
					qt_nec_kcal_dia,
					qt_nec_kcal_kg_dia,
					qt_peso,
					qt_vel_inf_glicose,
					qt_vol_desconto,
					nm_usuario,
					nm_usuario_nrec,
					dt_atualizacao,
					dt_atualizacao_nrec)
				values (nr_seq_prescr_rep_he_w,
					nr_prescricao_p,
					hr_prim_horario_w,
					dt_inicio_w,
					cpoe_trev_w.ie_bomba_infusao,
					cpoe_trev_w.ie_calculo_auto,
					'N',
					0,
					cpoe_trev_w.ie_magnesio,
					cpoe_trev_w.ie_peso_calorico,
					cpoe_trev_w.ie_processo_hidrico,
					cpoe_trev_w.pr_conc_glic_solucao,
					cpoe_trev_w.qt_altura_cm,
					cpoe_trev_w.qt_aporte_hidrico_diario,
					cpoe_trev_w.qt_be,
					cpoe_trev_w.qt_equipo,
					cpoe_trev_w.qt_etapa,
					null,
					null,
					null,
					qt_idade_ano_w,
					qt_idade_dia_w,
					qt_idade_mes_w,
					cpoe_trev_w.qt_kcal_kg,
					cpoe_trev_w.qt_kcal_total,
					cpoe_trev_w.qt_nec_hidrica_diaria,
					cpoe_trev_w.qt_nec_kcal_dia,
					cpoe_trev_w.qt_nec_kcal_kg_dia,
					cpoe_trev_w.qt_peso,
					cpoe_trev_w.qt_vel_inf_glicose,
					0,
					cpoe_trev_w.nm_usuario,
					cpoe_trev_w.nm_usuario_nrec,
					clock_timestamp(),
					clock_timestamp());

			for cpoe_trev_elem_w in C02
			loop
				nr_seq_ele_cpoe_w := cpoe_trev_elem_w.nr_sequencia;
				select	nextval('prescr_rep_he_elem_seq')
				into STRICT	nr_seq_prescr_rep_he_elem_w
				;
			
				insert into prescr_rep_he_elem(nr_sequencia,
					nr_seq_rep_he,
					nr_seq_elemento,
					cd_unidade_medida,
					qt_diaria,
					qt_elem_kg_dia,
					qt_volume,
					qt_volume_corrigido,
					qt_volume_etapa,
					nm_usuario,
					nm_usuario_nrec,
					dt_atualizacao,
					dt_atualizacao_nrec)
				values (nr_seq_prescr_rep_he_elem_w,
					nr_seq_prescr_rep_he_w,
					cpoe_trev_elem_w.nr_seq_elemento,
					cpoe_trev_elem_w.cd_unidade_medida,
					cpoe_trev_elem_w.qt_diaria,
					cpoe_trev_elem_w.qt_elem_kg_dia,
					cpoe_trev_elem_w.qt_volume,
					cpoe_trev_elem_w.qt_volume_corrigido,
					cpoe_trev_elem_w.qt_volume_etapa,
					cpoe_trev_elem_w.nm_usuario,
					cpoe_trev_elem_w.nm_usuario_nrec,
					clock_timestamp(),
					clock_timestamp());
				
				for cpoe_trev_elem_mat_w in C03
				loop
					insert into prescr_rep_he_elem_mat(
							nr_sequencia,
							nr_seq_ele_rep,
							nr_seq_elem_mat,
							qt_vol_cor,
							qt_vol_etapa,
							qt_volume,
							nm_usuario,
							nm_usuario_nrec,
							dt_atualizacao,
							dt_atualizacao_nrec)
						values (nextval('prescr_rep_he_elem_mat_seq'),
							nr_seq_prescr_rep_he_elem_w,
							cpoe_trev_elem_mat_w.nr_seq_elem_mat,
							cpoe_trev_elem_mat_w.qt_vol_cor,
							cpoe_trev_elem_mat_w.qt_vol_etapa,
							cpoe_trev_elem_mat_w.qt_volume,
							cpoe_trev_elem_mat_w.nm_usuario,
							cpoe_trev_elem_mat_w.nm_usuario_nrec,
							clock_timestamp(),
							clock_timestamp());
				end loop;
			end loop;
		end loop;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_insert_trev_reg (nr_seq_mat_cpoe_p bigint, nr_prescricao_p bigint) FROM PUBLIC;

