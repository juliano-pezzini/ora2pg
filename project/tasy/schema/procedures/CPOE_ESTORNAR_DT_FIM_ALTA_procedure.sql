-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_estornar_dt_fim_alta (( nr_atendimento_p bigint, nm_usuario_p text) is dt_fim_w cpoe_dieta.dt_fim%type) RETURNS varchar AS $body$
DECLARE

		  ds_horarios_w varchar(2000);
	dt_prox_w timestamp;
	dt_horario_w timestamp;
	
BEGIN
		  --reordenar horarios -> obter primeiro horario
		begin
		
		begin
		select	max(prox_exec)
		into STRICT	dt_prox_w
		from  	job_v
		where   upper(comando) like '%CPOE_COPIAR_ITENS_ATEND%';
		
		if (dt_prox_w IS NOT NULL AND dt_prox_w::text <> '') then
			if (trunc(clock_timestamp(),'hh24') >= dt_prox_w) then
				dt_horario_w := dt_prox_w +12/24;
			else
				dt_horario_w := dt_prox_w +6/24;
			end if;		
		else
			dt_horario_w := clock_timestamp();
		end if;
			
		exception when others then
			dt_horario_w := clock_timestamp();
		end;
		
		if (ie_tipo_item_p in ('E','G')) then --Enteral / Gasoterapia
			ds_horarios_w := reordenar_horarios(dt_horario_w, cpoe_obter_horario_padrao(ds_horarios_p));
			return obter_prim_dshorarios(ds_horarios_w);

		elsif (ds_horarios_p IS NOT NULL AND ds_horarios_p::text <> '') then
		  	   ds_horarios_w := reordenar_horarios(dt_horario_w, ds_horarios_p);
			   return obter_prim_dshorarios(ds_horarios_w);
		end if;

		return null;
		exception when others then
			return null;
	  end;
	end;

	function get_reordenacao_horarios(ds_horarios_p varchar2) return varchar2 is
	dt_prox_w date;
	dt_horario_w date;
	begin
		begin
		
			
		if (ds_horarios_p IS NOT NULL AND ds_horarios_p::text <> '') then
			begin
			select	max(prox_exec)
			into STRICT	dt_prox_w
			from  	job_v
			where   upper(comando) like '%CPOE_COPIAR_ITENS_ATEND%';
			
			if (dt_prox_w IS NOT NULL AND dt_prox_w::text <> '') then
				if (trunc(clock_timestamp(),'hh24') >= dt_prox_w) then
					dt_horario_w := dt_prox_w +12/24;
				else
					dt_horario_w := dt_prox_w +6/24;
				end if;	
			else
				dt_horario_w := clock_timestamp();
			end if;
				
			exception when others then
				dt_horario_w := clock_timestamp();
			end;
					
			  return  substr(reordenar_horarios(dt_horario_w, ds_horarios_p),1,2000);
		 end if;

		return null;
		exception when others then
			return null;
	  end;
	end;

	function get_horarios_continuos(ds_horarios_p varchar2, cd_intervalo_p varchar2, qt_hora_fase_p varchar2) return varchar2 is
	begin
		begin
			return cpoe_obter_etapas_formatadas(get_reordenacao_horarios(cpoe_obter_horario_padrao(ds_horarios_p)),cd_intervalo_p,qt_hora_fase_p);
		exception when others then
			return null;
		end;
	end;	
	
begin

dt_prox_geracao_ww := trunc(clock_timestamp(),'hh24') + 1/24;
ie_hor_suspenso_w := false;
cd_setor_atendimento_w := coalesce(obter_unidade_atendimento(nr_atendimento_p,'IA','CS'), obter_unidade_atendimento(nr_atendimento_p,'A','CS'));

for r_c01_w in C01
loop
  begin

	hr_prim_horario_w := get_prim_horario(r_c01_w.ds_horarios_w, r_c01_w.ie_tipo_dieta_w);

	if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then
		begin
		dt_inicio_w	:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(r_c01_w.dt_inicio_w, hr_prim_horario_w);
		exception
		when others then
		dt_inicio_w	:= r_c01_w.dt_inicio_w;	
		end;
	end if;
	
	if (r_c01_w.ie_tipo_dieta_w = 'E') then
		ds_horarios_w := get_horarios_continuos(r_c01_w.ds_horarios_w, r_c01_w.cd_intervalo_w, r_c01_w.qt_hora_fase_w);
	else
		ds_horarios_w := get_reordenacao_horarios(r_c01_w.ds_horarios_w);
	end if;
	
	update  cpoe_dieta
	set    	dt_suspensao  = NULL,
	    	dt_lib_suspensao  = NULL,
			ie_baixado_por_alta = 'N',
			dt_alta_medico  = NULL,
			cd_setor_atendimento = coalesce(cd_setor_atendimento_w, cd_setor_atendimento)
	where   nr_sequencia = r_c01_w.nr_sequencia_w;

	if (dt_prox_geracao_ww > r_c01_w.dt_prox_geracao_w) then
		update cpoe_dieta
		set	dt_prox_geracao = dt_prox_geracao_ww,
			ds_horarios = coalesce(ds_horarios_w,ds_horarios),
			hr_prim_horario = coalesce(r_c01_w.hr_prim_horario_w,hr_prim_horario),
			dt_inicio = dt_inicio_w
		where   nr_sequencia = r_c01_w.nr_sequencia_w;
	end if;

	if (coalesce(lista_itens_w::text, '') = '') then
		lista_itens_w :=  'N,' || r_c01_w.nr_sequencia_w || ';';
	else
		lista_itens_w := lista_itens_w || 'N,' || r_c01_w.nr_sequencia_w || ';';
	end if;	
	
	ie_hor_suspenso_w := true;

	end;
end loop;


for r_c02_w in C02
loop
  begin

	hr_prim_horario_w := get_prim_horario(r_c02_w.ds_horarios_w,'M');
	ds_horarios_w := get_reordenacao_horarios(r_c02_w.ds_horarios_w);

	if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then
		begin
		dt_inicio_w	:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(r_c02_w.dt_inicio_w, hr_prim_horario_w);
		exception
		when others then
		dt_inicio_w	:= r_c02_w.dt_inicio_w;	
		end;
	end if;	
	
	update  cpoe_material
	set     dt_suspensao  = NULL,
	    	dt_lib_suspensao  = NULL,
			ie_baixado_por_alta = 'N',
			dt_alta_medico  = NULL,
			cd_setor_atendimento = coalesce(cd_setor_atendimento_w, cd_setor_atendimento)
	where   nr_sequencia = r_c02_w.nr_sequencia_w;

	if (dt_prox_geracao_ww > r_c02_w.dt_prox_geracao_w) then
		update cpoe_material
		set	dt_prox_geracao = dt_prox_geracao_ww,
			hr_prim_horario = coalesce(hr_prim_horario_w,hr_prim_horario),
			ds_horarios = coalesce(ds_horarios_w,ds_horarios),
			dt_inicio = dt_inicio_w	
		where   nr_sequencia = r_c02_w.nr_sequencia_w;
	end if;

	if (coalesce(lista_itens_w::text, '') = '') then
		lista_itens_w :=  'M,' || r_c02_w.nr_sequencia_w || ';';
	else
		lista_itens_w := lista_itens_w || 'M,' || r_c02_w.nr_sequencia_w || ';';
	end if;	
	
	ie_hor_suspenso_w := true;

	end;
end loop;


for r_c03_w in C03
loop
	begin

	hr_prim_horario_w := get_prim_horario(r_c03_w.ds_horarios_w,'G');
	ds_horarios_w := get_horarios_continuos(r_c03_w.ds_horarios_w, r_c03_w.cd_intervalo_w, r_c03_w.qt_hora_fase_w);

	if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then
		begin
		dt_inicio_w	:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(r_c03_w.dt_inicio_w, hr_prim_horario_w);
		exception
		when others then
		dt_inicio_w	:= dt_inicio_w;	
		end;
	end if;	
	
	update  cpoe_gasoterapia
	set dt_suspensao  = NULL,
		dt_lib_suspensao  = NULL,
		ie_baixado_por_alta = 'N',
		dt_alta_medico  = NULL,
		cd_setor_atendimento = coalesce(cd_setor_atendimento_w, cd_setor_atendimento)
	where 	nr_sequencia = r_c03_w.nr_sequencia_w;

	if (dt_prox_geracao_ww > r_c03_w.dt_prox_geracao_w) then
		update cpoe_gasoterapia
		set	dt_prox_geracao = dt_prox_geracao_ww,
			hr_prim_horario = coalesce(hr_prim_horario_w,hr_prim_horario),
			ds_horarios = coalesce(ds_horarios_w,ds_horarios),
			dt_inicio = dt_inicio_w
		where   nr_sequencia = r_c03_w.nr_sequencia_w;
	end if;
	
	
	if (coalesce(lista_itens_w::text, '') = '') then
		lista_itens_w :=  'G,' || r_c03_w.nr_sequencia_w || ';';
	else
		lista_itens_w := lista_itens_w || 'G,' || r_c03_w.nr_sequencia_w || ';';
	end if;	
	
	ie_hor_suspenso_w := true;	

	end;
end loop;


for r_c04_w in C04
loop
	begin
	dt_fim_w := null;

	if (r_c04_w.ie_duracao_w = 'P') then
		if (r_c04_w.hr_prim_horario_w IS NOT NULL AND r_c04_w.hr_prim_horario_w::text <> '') then
			dt_fim_w := trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(r_c04_w.dt_inicio_w, r_c04_w.hr_prim_horario_w), 'mi') + 1;
		else
			dt_fim_w := trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(r_c04_w.dt_inicio_w, clock_timestamp()), 'mi') + 1;
		end if;
	end if;

	hr_prim_horario_w := get_prim_horario(r_c04_w.ds_horarios_w,'P');
	ds_horarios_w := get_reordenacao_horarios(r_c04_w.ds_horarios_w);

	if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then
		begin
		dt_inicio_w	:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_inicio_w, hr_prim_horario_w);
		exception
		when others then
		dt_inicio_w	:= dt_inicio_w;	
		end;
	end if;	
	
	update  cpoe_procedimento
	set		dt_suspensao  = NULL,
			dt_lib_suspensao  = NULL,
			ie_baixado_por_alta = 'N',
			dt_alta_medico  = NULL,
			cd_setor_atendimento = coalesce(cd_setor_atendimento_w, cd_setor_atendimento)
	where   nr_sequencia = r_c04_w.nr_sequencia_w;
	
	if (dt_prox_geracao_ww > r_c04_w.dt_prox_geracao_w) then
		update cpoe_procedimento
		set	dt_prox_geracao = dt_prox_geracao_ww,
			hr_prim_horario = coalesce(hr_prim_horario_w,hr_prim_horario),
			ds_horarios = coalesce(ds_horarios_w,ds_horarios),
			dt_inicio = dt_inicio_w	
		where   nr_sequencia = r_c04_w.nr_sequencia_w;
	end if;
	
	if (coalesce(lista_itens_w::text, '') = '') then
		lista_itens_w :=  'P,' || r_c04_w.nr_sequencia_w || ';';
	else
		lista_itens_w := lista_itens_w || 'P,' || r_c04_w.nr_sequencia_w || ';';
	end if;	
	
	ie_hor_suspenso_w := true;	
	
	end;
end loop;


for r_c05_w in C05
loop
	begin

	hr_prim_horario_w := get_prim_horario(r_c05_w.ds_horarios_w,'R');
	ds_horarios_w := get_reordenacao_horarios(r_c05_w.ds_horarios_w);

	if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then
		begin
		dt_inicio_w	:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(r_c05_w.dt_inicio_w, hr_prim_horario_w);
		exception
		when others then
		dt_inicio_w	:= r_c05_w.dt_inicio_w;	
		end;
	end if;	
	
	update  cpoe_recomendacao
	set		dt_suspensao  = NULL,
	    	dt_lib_suspensao  = NULL,
			ie_baixado_por_alta = 'N',
			dt_alta_medico  = NULL,
			cd_setor_atendimento = coalesce(cd_setor_atendimento_w, cd_setor_atendimento)
	where   nr_sequencia = r_c05_w.nr_sequencia_w;

	if (dt_prox_geracao_ww > r_c05_w.dt_prox_geracao_w) then
		update cpoe_recomendacao
		set	dt_prox_geracao = dt_prox_geracao_ww,
			hr_prim_horario = coalesce(hr_prim_horario_w,hr_prim_horario),
			ds_horarios = coalesce(ds_horarios_w,ds_horarios),
			dt_inicio = dt_inicio_w
		where   nr_sequencia = r_c05_w.nr_sequencia_w;
	end if;

	if (coalesce(lista_itens_w::text, '') = '') then
		lista_itens_w :=  'R,' || r_c05_w.nr_sequencia_w || ';';
	else
		lista_itens_w := lista_itens_w || 'R,' || r_c05_w.nr_sequencia_w || ';';
	end if;	
	
	ie_hor_suspenso_w := true;	
	
	end;
end loop;


for r_c06_w in C06
loop
	begin

	ds_horarios_w := get_reordenacao_horarios(r_c06_w.ds_horarios_w);

	update  cpoe_hemoterapia
	set		dt_suspensao  = NULL,
	    	dt_lib_suspensao  = NULL,
			ie_baixado_por_alta = 'N',
			dt_alta_medico  = NULL,
			cd_setor_atendimento = coalesce(cd_setor_atendimento_w, cd_setor_atendimento)
	where   nr_sequencia = r_c06_w.nr_sequencia_w;

	if (dt_prox_geracao_ww > r_c06_w.dt_prox_geracao_w) then
		update cpoe_hemoterapia
		set	dt_prox_geracao = dt_prox_geracao_ww,
			ds_horarios = coalesce(ds_horarios_w,ds_horarios)
		where   nr_sequencia = r_c06_w.nr_sequencia_w;
	end if;
	
	if (coalesce(lista_itens_w::text, '') = '') then
		lista_itens_w :=  'H,' || r_c06_w.nr_sequencia_w || ';';
	else
		lista_itens_w := lista_itens_w || 'H,' || r_c06_w.nr_sequencia_w || ';';
	end if;		
	
	ie_hor_suspenso_w := true;	
	
	end;
end loop;


for r_c07_w in C07
loop
	begin
	
	ds_horarios_w := get_reordenacao_horarios(r_c07_w.ds_horarios_w);

	update  cpoe_dialise
	set     dt_suspensao  = NULL,
	    	dt_lib_suspensao  = NULL,
			ds_horarios = coalesce(ds_horarios_w,ds_horarios),
			ie_baixado_por_alta = 'N',
			dt_alta_medico  = NULL,
			cd_setor_atendimento = coalesce(cd_setor_atendimento_w, cd_setor_atendimento)
	where   nr_sequencia = r_c07_w.nr_sequencia_w;

	if (dt_prox_geracao_ww > r_c07_w.dt_prox_geracao_w) then
		update cpoe_dialise
		set	dt_prox_geracao = dt_prox_geracao_ww,
			ds_horarios = coalesce(ds_horarios_w,ds_horarios)
		where   nr_sequencia = r_c07_w.nr_sequencia_w;
	end if;	
	
	if (coalesce(lista_itens_w::text, '') = '') then
		lista_itens_w :=  'D,' || r_c07_w.nr_sequencia_w || ';';
	else
		lista_itens_w := lista_itens_w || 'D,' || r_c07_w.nr_sequencia_w || ';';
	end if;			
	
	ie_hor_suspenso_w := true;	
	
	end;
end loop;


commit;

if (ie_hor_suspenso_w) then
	CALL cpoe_reverter_item_prescr(lista_itens_w, nr_atendimento_p, nm_usuario_p);
end if;	


if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_estornar_dt_fim_alta (( nr_atendimento_p bigint, nm_usuario_p text) is dt_fim_w cpoe_dieta.dt_fim%type) FROM PUBLIC;

