-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_movto_estoque_trans_unit ( nr_sequencia_p bigint, cd_operacao_estoque_p bigint, ie_acao_p text, ie_origem_destino_p text, nm_usuario_p text) AS $body$
DECLARE


cd_estabelecimento_w		smallint := coalesce(wheb_usuario_pck.get_cd_estabelecimento,1);
cd_local_estoque_w		smallint;

cd_local_estoque_origem_w		smallint;
cd_local_estoque_destino_w		smallint;

dt_atendimento_w			timestamp := clock_timestamp();
cd_material_w			integer;
qt_material_w			double precision;
qt_material_estoque_w		double precision;
cd_unidade_medida_estoque_w	varchar(30);
cd_setor_atendimento_w		integer := OBTER_SETOR_ATIVO;
cd_unidade_medida_w		varchar(30);
nr_seq_lote_fornec_w		bigint;
dt_validade_w			timestamp;
ds_lote_fornec_w			varchar(20);

cd_operacao_estoque_w		smallint;

cd_operacao_entrada_w		smallint;
cd_operacao_saida_w		smallint;

nr_sequencia_ww			bigint;

nr_sequencia_w			bigint;
nr_movimento_corresp_w		bigint;
cd_material_estoque_w       material.cd_material_estoque%type;

c01 CURSOR FOR
SELECT	nr_sequencia,
	qt_material
from	item_unitarizacao
where	nr_seq_unitarizacao = nr_sequencia_p
and	coalesce(nr_seq_motivo_perda::text, '') = '';


BEGIN
cd_operacao_estoque_w := cd_operacao_estoque_p;

if (ie_origem_destino_p <> 'T') then
	nr_sequencia_w := nr_sequencia_p;
else
	select	nr_solic_unitarizacao
	into STRICT	nr_sequencia_w
	from	UNITARIZACAO
	where	nr_sequencia = nr_sequencia_p;
end if;

select	nr_seq_lote_fornec,
	cd_unidade_medida,
	qt_material,
	cd_local_estoque_origem,
	cd_local_estoque_destino
into STRICT	nr_seq_lote_fornec_w,
	cd_unidade_medida_w,
	qt_material_w,
	cd_local_estoque_origem_w,
	cd_local_estoque_destino_w
from	solic_unitarizacao
where	nr_sequencia = nr_sequencia_w;

if (ie_origem_destino_p in ('O','D')) and (cd_local_estoque_origem_w > 0) then
	begin
	if (ie_origem_destino_p = 'D') then
		cd_local_estoque_w := cd_local_estoque_destino_w;
	else
		cd_local_estoque_w := cd_local_estoque_origem_w;
	end if;
	
	select	cd_material,
		dt_validade,
		ds_lote_fornec
	into STRICT	cd_material_w, 
		dt_validade_w,
		ds_lote_fornec_w
	from	material_lote_fornec
	where	nr_sequencia = nr_seq_lote_fornec_w;

	select	cd_unidade_medida_estoque,
	        cd_material_estoque
	into STRICT	cd_unidade_medida_estoque_w,
	        cd_material_estoque_w
	from	material
	where	cd_material = cd_material_w;
	
	qt_material_estoque_w := obter_quantidade_convertida(cd_material_w, qt_material_w, cd_unidade_medida_w, 'UME');
	
	if (ie_acao_p = '2') then
		select	max(nr_movimento_estoque)
		into STRICT	nr_movimento_corresp_w
		from	movimento_estoque a
		where	cd_estabelecimento = cd_estabelecimento_w
		and	cd_local_estoque = cd_local_estoque_w
		and	cd_operacao_estoque = cd_operacao_estoque_w
		and	cd_acao = 1
		and	cd_material = cd_material_w
		and	ie_origem_documento = '18'
		and	nr_documento = nr_sequencia_w
		and	not exists (	SELECT	1
					from	movimento_estoque b
					where	b.nr_movimento_estoque_corresp = a.nr_movimento_estoque
					and	b.cd_acao = 2);
	end if;
	
	insert into movimento_estoque(
		nr_movimento_estoque,
		cd_estabelecimento,
		cd_local_estoque,
		dt_movimento_estoque,
		cd_operacao_estoque,
		cd_acao,
		cd_material,
		dt_mesano_referencia,
		qt_movimento,
		dt_atualizacao,
		nm_usuario,
		ie_origem_documento,
		nr_documento,
		nr_sequencia_item_docto,
		nr_sequencia_documento,
		vl_movimento,
		cd_unidade_medida_estoque,
		cd_setor_atendimento,
		qt_estoque,
		dt_processo,
		cd_local_estoque_destino,
		cd_centro_custo,
		cd_unidade_med_mov,
		cd_conta_contabil,
		cd_fornecedor,
		nr_seq_lote_fornec,
		dt_validade,
		cd_lote_fabricacao,
		nr_movimento_estoque_corresp,
		cd_material_estoque)
	values (	nextval('movimento_estoque_seq'),
		cd_estabelecimento_w,
		cd_local_estoque_w,
		dt_atendimento_w,
		cd_operacao_estoque_w,
		ie_acao_p,
		cd_material_w,
		dt_atendimento_w,
		qt_material_w,
		dt_atendimento_w,
		nm_usuario_p,
		'18',
		nr_sequencia_w,
		null,
		0,
		0,
		cd_unidade_medida_estoque_w,
		cd_setor_atendimento_w,
		qt_material_estoque_w,
		null,
		null,
		null,
		cd_unidade_medida_w,
		null,
		null,
		nr_seq_lote_fornec_w,
		dt_validade_w,
		ds_lote_fornec_w,
		nr_movimento_corresp_w,
		cd_material_estoque_w);
	end;
elsif (ie_origem_destino_p = 'T') and (cd_local_estoque_origem_w IS NOT NULL AND cd_local_estoque_origem_w::text <> '') then
	begin
	
	cd_operacao_entrada_w	:= sup_obter_operacao_unit('ET');
	cd_operacao_saida_w	:= sup_obter_operacao_unit('ST');
	
	open C01;
	loop
	fetch C01 into	
		nr_sequencia_ww,
		qt_material_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		select	max(nr_sequencia)
		into STRICT	nr_seq_lote_fornec_w
		from	material_lote_fornec
		where	nr_seq_item_unitarizacao = nr_sequencia_ww;
		
		select	cd_material,
			dt_validade,
			ds_lote_fornec
		into STRICT	cd_material_w, 
			dt_validade_w,
			ds_lote_fornec_w
		from	material_lote_fornec
		where	nr_sequencia = nr_seq_lote_fornec_w;

		select	cd_unidade_medida_estoque
		into STRICT	cd_unidade_medida_estoque_w
		from	material
		where	cd_material = cd_material_w;
		
		qt_material_estoque_w := obter_quantidade_convertida(cd_material_w, qt_material_w, cd_unidade_medida_w, 'UME');
		
		insert into movimento_estoque(
			nr_movimento_estoque,
			cd_estabelecimento,
			cd_local_estoque,
			dt_movimento_estoque,
			cd_operacao_estoque,
			cd_acao,
			cd_material,
			dt_mesano_referencia,
			qt_movimento,
			dt_atualizacao,
			nm_usuario,
			ie_origem_documento,
			nr_documento,
			nr_sequencia_item_docto,
			nr_sequencia_documento,
			vl_movimento,
			cd_unidade_medida_estoque,
			cd_setor_atendimento,
			qt_estoque,
			dt_processo,
			cd_local_estoque_destino,
			cd_centro_custo,
			cd_unidade_med_mov,
			cd_conta_contabil,
			cd_fornecedor,
			nr_seq_lote_fornec,
			dt_validade,
			cd_lote_fabricacao)
		values (	nextval('movimento_estoque_seq'),
			cd_estabelecimento_w,
			cd_local_estoque_destino_w,
			dt_atendimento_w,
			cd_operacao_saida_w,
			ie_acao_p,
			cd_material_w,
			dt_atendimento_w,
			qt_material_w,
			dt_atendimento_w,
			nm_usuario_p,
			'18',
			nr_sequencia_w,
			null,
			0,
			0,
			cd_unidade_medida_estoque_w,
			cd_setor_atendimento_w,
			qt_material_estoque_w,
			null,
			null,
			null,
			cd_unidade_medida_w,
			null,
			null,
			nr_seq_lote_fornec_w,
			dt_validade_w,
			ds_lote_fornec_w);
			
		insert into movimento_estoque(
			nr_movimento_estoque,
			cd_estabelecimento,
			cd_local_estoque,
			dt_movimento_estoque,
			cd_operacao_estoque,
			cd_acao,
			cd_material,
			dt_mesano_referencia,
			qt_movimento,
			dt_atualizacao,
			nm_usuario,
			ie_origem_documento,
			nr_documento,
			nr_sequencia_item_docto,
			nr_sequencia_documento,
			vl_movimento,
			cd_unidade_medida_estoque,
			cd_setor_atendimento,
			qt_estoque,
			dt_processo,
			cd_local_estoque_destino,
			cd_centro_custo,
			cd_unidade_med_mov,
			cd_conta_contabil,
			cd_fornecedor,
			nr_seq_lote_fornec,
			dt_validade,
			cd_lote_fabricacao)
		values (	nextval('movimento_estoque_seq'),
			cd_estabelecimento_w,
			cd_local_estoque_origem_w,
			dt_atendimento_w,
			cd_operacao_entrada_w,
			ie_acao_p,
			cd_material_w,
			dt_atendimento_w,
			qt_material_w,
			dt_atendimento_w,
			nm_usuario_p,
			'18',
			nr_sequencia_w,
			null,
			0,
			0,
			cd_unidade_medida_estoque_w,
			cd_setor_atendimento_w,
			qt_material_estoque_w,
			null,
			null,
			null,
			cd_unidade_medida_w,
			null,
			null,
			nr_seq_lote_fornec_w,
			dt_validade_w,
			ds_lote_fornec_w);
		end;
	end loop;
	close C01;
	end;
elsif (ie_origem_destino_p = 'TE') and (cd_local_estoque_origem_w IS NOT NULL AND cd_local_estoque_origem_w::text <> '') then
	
	cd_operacao_entrada_w	:= sup_obter_operacao_unit('ET');
	cd_operacao_saida_w	:= sup_obter_operacao_unit('ST');
		
	if (ie_origem_destino_p = 'D') then
		cd_local_estoque_w := cd_local_estoque_destino_w;
	else
		cd_local_estoque_w := cd_local_estoque_origem_w;
	end if;
	
	select	cd_material,
		dt_validade,
		ds_lote_fornec
	into STRICT	cd_material_w, 
		dt_validade_w,
		ds_lote_fornec_w
	from	material_lote_fornec
	where	nr_sequencia = nr_seq_lote_fornec_w;

	select	cd_unidade_medida_estoque
	into STRICT	cd_unidade_medida_estoque_w
	from	material
	where	cd_material = cd_material_w;
	
	qt_material_estoque_w := obter_quantidade_convertida(cd_material_w, qt_material_w, cd_unidade_medida_w, 'UME');
	
	insert into movimento_estoque(
		nr_movimento_estoque,
		cd_estabelecimento,
		cd_local_estoque,
		dt_movimento_estoque,
		cd_operacao_estoque,
		cd_acao,
		cd_material,
		dt_mesano_referencia,
		qt_movimento,
		dt_atualizacao,
		nm_usuario,
		ie_origem_documento,
		nr_documento,
		nr_sequencia_item_docto,
		nr_sequencia_documento,
		vl_movimento,
		cd_unidade_medida_estoque,
		cd_setor_atendimento,
		qt_estoque,
		dt_processo,
		cd_local_estoque_destino,
		cd_centro_custo,
		cd_unidade_med_mov,
		cd_conta_contabil,
		cd_fornecedor,
		nr_seq_lote_fornec,
		dt_validade,
		cd_lote_fabricacao)
	values (	nextval('movimento_estoque_seq'),
		cd_estabelecimento_w,
		cd_local_estoque_origem_w,
		dt_atendimento_w,
		cd_operacao_saida_w,
		ie_acao_p,
		cd_material_w,
		dt_atendimento_w,
		qt_material_w,
		dt_atendimento_w,
		nm_usuario_p,
		'18',
		nr_sequencia_w,
		null,
		0,
		0,
		cd_unidade_medida_estoque_w,
		cd_setor_atendimento_w,
		qt_material_estoque_w,
		null,
		null,
		null,
		cd_unidade_medida_w,
		null,
		null,
		nr_seq_lote_fornec_w,
		dt_validade_w,
		ds_lote_fornec_w);
		
	insert into movimento_estoque(
		nr_movimento_estoque,
		cd_estabelecimento,
		cd_local_estoque,
		dt_movimento_estoque,
		cd_operacao_estoque,
		cd_acao,
		cd_material,
		dt_mesano_referencia,
		qt_movimento,
		dt_atualizacao,
		nm_usuario,
		ie_origem_documento,
		nr_documento,
		nr_sequencia_item_docto,
		nr_sequencia_documento,
		vl_movimento,
		cd_unidade_medida_estoque,
		cd_setor_atendimento,
		qt_estoque,
		dt_processo,
		cd_local_estoque_destino,
		cd_centro_custo,
		cd_unidade_med_mov,
		cd_conta_contabil,
		cd_fornecedor,
		nr_seq_lote_fornec,
		dt_validade,
		cd_lote_fabricacao)
	values (	nextval('movimento_estoque_seq'),
		cd_estabelecimento_w,
		cd_local_estoque_destino_w,
		dt_atendimento_w,
		cd_operacao_entrada_w,
		ie_acao_p,
		cd_material_w,
		dt_atendimento_w,
		qt_material_w,
		dt_atendimento_w,
		nm_usuario_p,
		'18',
		nr_sequencia_w,
		null,
		0,
		0,
		cd_unidade_medida_estoque_w,
		cd_setor_atendimento_w,
		qt_material_estoque_w,
		null,
		null,
		null,
		cd_unidade_medida_w,
		null,
		null,
		nr_seq_lote_fornec_w,
		dt_validade_w,
		ds_lote_fornec_w);
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_movto_estoque_trans_unit ( nr_sequencia_p bigint, cd_operacao_estoque_p bigint, ie_acao_p text, ie_origem_destino_p text, nm_usuario_p text) FROM PUBLIC;

