-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_titulo_pagar ( nr_titulo_p bigint, nm_usuario_p text) AS $body$
DECLARE


			
qt_reg_w		bigint;
qt_reg_lib_w	bigint;
cd_perfil_w		bigint	:= obter_perfil_ativo;
ie_liberar_w		varchar(1)	:= 'N';

ie_nivel_max_w		bigint;
ie_nivel_lib_w		varchar(5);

nr_seq_liberacao_w	bigint;
ie_nivel_w		bigint;

cd_estabelecimento_w	smallint;
nr_seq_regra_w		bigint;
nm_usuario_lib_w	varchar(255);
vl_titulo_w		double precision;
cd_operacao_nf_w	smallint;
nr_seq_nota_fiscal_w	bigint;
cd_pessoa_fisica_w	varchar(10);
cd_cgc_w		varchar(14);
cd_tipo_pessoa_w	smallint;
vl_nota_fiscal_w	double precision;
dt_emissao_w		timestamp;
ie_tipo_titulo_w	varchar(2);
nr_seq_classe_w		bigint;
ie_origem_titulo_w	varchar(10);
ie_liberar_tit_pagar_imposto_w	parametros_contas_pagar.ie_liberar_tit_pagar_imposto%type;
nr_ordem_compra_w	bigint;
qt_min_usuario_lib_w	bigint	:= 0;
vl_empenho_w  ctb_orcamento.vl_empenho%type;
vl_orcado_w   ctb_orcamento.vl_orcado%type;
ie_validar_empenho_orcado_w varchar(1);

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.ie_nivel,
	a.nr_seq_regra_tit_pagar
from	conta_pagar_lib a
where (a.nm_usuario_lib = nm_usuario_p or a.cd_perfil	= cd_perfil_w)
and	coalesce(a.dt_liberacao::text, '') = ''
and	a.nr_titulo = nr_titulo_p
order by coalesce(a.ie_nivel, 0),
	coalesce(a.nr_seq_regra_tit_pagar, 0);


BEGIN

select	count(*)
into STRICT	qt_reg_w
from	conta_pagar_lib a
where	a.nr_titulo = nr_titulo_p;

select	count(*)
into STRICT	qt_reg_lib_w
from	conta_pagar_lib a
where	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
and		a.nr_titulo	= nr_titulo_p;

select	max(a.cd_estabelecimento),
		max(a.qt_min_usuario_lib)
into STRICT	cd_estabelecimento_w,
		qt_min_usuario_lib_w
from	titulo_pagar a
where	a.nr_titulo		= nr_titulo_p;

if ( qt_min_usuario_lib_w = 0)then
	qt_min_usuario_lib_w := null;
end if;

if (qt_reg_w = 0) then
	ie_liberar_w := 'S';
elsif (qt_min_usuario_lib_w IS NOT NULL AND qt_min_usuario_lib_w::text <> '' AND qt_reg_lib_w >= qt_min_usuario_lib_w) then
	ie_liberar_w := 'S';
end if;

if (ie_liberar_w = 'N') then
	begin
	open c01;
	loop
	fetch c01 into	
		nr_seq_liberacao_w,
		ie_nivel_w,
		nr_seq_regra_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		update	conta_pagar_lib a
		set	dt_liberacao	= clock_timestamp(),
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p,
			nm_usuario_lib	= nm_usuario_p
		where	nr_sequencia	= nr_seq_liberacao_w;
		end;
	end loop;
	close c01;
	
	commit;

	select	max(a.vl_titulo),
		max(a.nr_seq_nota_fiscal),
		max(a.cd_estabelecimento),
		max(a.cd_pessoa_fisica),
		max(a.cd_cgc),
		max(b.cd_tipo_pessoa),
		coalesce(max(a.dt_emissao),clock_timestamp()),
		max(a.ie_tipo_titulo),
		max(a.nr_seq_classe),
		max(a.ie_origem_titulo)
	into STRICT	vl_titulo_w,
		nr_seq_nota_fiscal_w,
		cd_estabelecimento_w,
		cd_pessoa_fisica_w,
		cd_cgc_w,
		cd_tipo_pessoa_w,
		dt_emissao_w,
		ie_tipo_titulo_w,
		nr_seq_classe_w,
		ie_origem_titulo_w
	FROM titulo_pagar a
LEFT OUTER JOIN pessoa_juridica b ON (a.cd_cgc = b.cd_cgc)
WHERE a.nr_titulo		= nr_titulo_p;
	
	if (coalesce(nr_seq_regra_w::text, '') = '') then

		if (nr_seq_nota_fiscal_w IS NOT NULL AND nr_seq_nota_fiscal_w::text <> '') then
			select	max(a.cd_operacao_nf),
				max(a.vl_total_nota),
				max(a.nr_ordem_compra)
			into STRICT	cd_operacao_nf_w,
				vl_nota_fiscal_w,
				nr_ordem_compra_w
			from	nota_fiscal a
			where	a.nr_sequencia	= nr_seq_nota_fiscal_w;
		end if;
		
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_regra_w
		from	regra_lib_tit_pagar a
		where (coalesce(a.ie_ordem_compra, 'N') = 'N' or (nr_ordem_compra_w IS NOT NULL AND nr_ordem_compra_w::text <> ''))
		and	dt_emissao_w	between trunc(coalesce(a.dt_inicio_vigencia,dt_emissao_w)) and fim_dia(coalesce(a.dt_fim_vigencia,dt_emissao_w))
		and	coalesce(a.cd_cgc,coalesce(cd_cgc_w,'0')) = coalesce(cd_cgc_w,0)
		and	coalesce(a.cd_tipo_pj,coalesce(cd_tipo_pessoa_w,0)) = coalesce(cd_tipo_pessoa_w,0)
		and (coalesce(a.ie_tipo_pessoa,'A') = 'A' or (a.ie_tipo_pessoa = 'F' and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '')) or (a.ie_tipo_pessoa = 'J' and (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '')))
		and	((coalesce(a.ie_valor_nf,'N') = 'N' and vl_titulo_w between coalesce(a.vl_minimo,vl_titulo_w) and coalesce(a.vl_maximo,vl_titulo_w)) or (a.ie_valor_nf = 'S' and coalesce(vl_nota_fiscal_w, vl_titulo_w) between coalesce(a.vl_minimo, coalesce(vl_nota_fiscal_w,vl_titulo_w)) and coalesce(a.vl_maximo,coalesce(vl_nota_fiscal_w,vl_titulo_w))))
		and	coalesce(a.ie_liberar,'N')	= 'N'
		and	coalesce(a.cd_operacao_nf, coalesce(cd_operacao_nf_w,0)) = coalesce(cd_operacao_nf_w,0)
		and	coalesce(coalesce(a.ie_tipo_titulo, ie_tipo_titulo_w), 0) = coalesce(ie_tipo_titulo_w,0)
		and	coalesce(coalesce(a.nr_seq_classe, nr_seq_classe_w), 0) = coalesce(nr_seq_classe_w, 0)
		and	coalesce(coalesce(a.ie_origem_titulo, ie_origem_titulo_w), 0) = coalesce(ie_origem_titulo_w, 0)
		and	cd_estabelecimento = cd_estabelecimento_w
		and	( (coalesce(a.ie_exige_nota_fiscal,'N') = 'N') or 
			  ( (coalesce(a.ie_exige_nota_fiscal,'N') = 'S') and (nr_seq_nota_fiscal_w IS NOT NULL AND nr_seq_nota_fiscal_w::text <> '') ) 
			 );

	end if;
	
	select	max(ie_nivel_lib)
	into STRICT	ie_nivel_lib_w
	from	regra_lib_tit_pagar
	where	nr_sequencia = nr_seq_regra_w;
	
	if (ie_nivel_lib_w = 'N') then
		select	count(*)
		into STRICT	qt_reg_w
		from	conta_pagar_lib a
		where	(ie_nivel IS NOT NULL AND ie_nivel::text <> '')
		and	a.nr_titulo = nr_titulo_p
		and	not exists (SELECT	1
				from	conta_pagar_lib x
				where	x.nr_titulo = a.nr_titulo
				and	x.ie_nivel  = a.ie_nivel
				and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> ''));
	else
		select	count(*)
		into STRICT	qt_reg_w
		from	conta_pagar_lib a
		where	coalesce(a.dt_liberacao::text, '') = ''
		and	(a.ie_nivel IS NOT NULL AND a.ie_nivel::text <> '')
		and	a.nr_titulo	= nr_titulo_p;
	end if;
	
	if (qt_reg_w = 0) then
		ie_liberar_w := 'S';
	end if;
	end;
end if;

ie_validar_empenho_orcado_w
 := obter_param_usuario(
	925, 123, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_validar_empenho_orcado_w
);

if ( coalesce(ie_validar_empenho_orcado_w, 'N') = 'S' ) then
	
	-- BEGIN ie_validar_empenho_orcado_w
	
	select max(o.vl_empenho), max(o.vl_orcado)
	into STRICT vl_empenho_w, vl_orcado_w
	from ctb_orc_doc_empenho e, ctb_orcamento o
	where 
		o.nr_sequencia = e.nr_seq_orcamento
		and e.nr_titulo = nr_titulo_p;
		
	if (vl_empenho_w > vl_orcado_w) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(
			substr(wheb_mensagem_pck.get_texto(nr_seq_mensagem_p => 1198907, vl_macros_p => null),1,255)
			||CHR(13)||
			substr(wheb_mensagem_pck.get_texto(nr_seq_mensagem_p => 1198908,
			vl_macros_p => 'VL_EMPENHO='|| campo_mascara_virgula(vl_empenho_w) ||
			';VL_ORCADO='|| campo_mascara_virgula(vl_orcado_w)),1,255)
		);
	end if;

	-- END ie_validar_empenho_orcado_w
end if;

if (ie_liberar_w = 'S') then

	update	titulo_pagar
	set	dt_liberacao	= clock_timestamp(),
		dt_atualizacao	= clock_timestamp(),
		nm_usuario	= nm_usuario_p,
		nm_usuario_lib	= nm_usuario_p
	where	nr_titulo		= nr_titulo_p;

	select	coalesce(max(a.ie_liberar_tit_pagar_imposto),'N')
	into STRICT	ie_liberar_tit_pagar_imposto_w
	from	parametros_contas_pagar a
	where	a.cd_estabelecimento	= cd_estabelecimento_w;

	if (coalesce(ie_liberar_tit_pagar_imposto_w,'N')	= 'S') then

		update	titulo_pagar a
		set	a.dt_liberacao		= clock_timestamp(),
			a.dt_atualizacao	= clock_timestamp(),
			a.nm_usuario		= nm_usuario_p,
			a.nm_usuario_lib	= nm_usuario_p
		where	exists (SELECT	1
			from	titulo_pagar_imposto x
			where	x.nr_sequencia	= a.nr_seq_tributo
			and	x.nr_titulo	= nr_titulo_p);

	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_titulo_pagar ( nr_titulo_p bigint, nm_usuario_p text) FROM PUBLIC;

