-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ppm_metrica_hora_extra (nr_seq_metrica_p bigint, nr_seq_objetivo_metrica_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, dt_referencia_p timestamp) AS $body$
DECLARE


dt_aux_w		timestamp;
dt_referencia_w		timestamp;
dt_final_w		timestamp;
qt_dias_util_mes_w	bigint := 0;
qt_hora_mes_w		double precision;
qt_hora_extra_w		double precision;
nm_usuario_exec_w	varchar(30);
resultado_w		double precision;
nr_seq_diretoria_w	ppm_objetivo.nr_seq_diretoria%type;
nr_seq_gerencia_w	ppm_objetivo.nr_seq_gerencia%type;
nr_seq_grupo_w		ppm_objetivo.nr_seq_grupo%type;


BEGIN

select	max(nm_usuario)
into STRICT	nm_usuario_exec_w
from	usuario
where	cd_pessoa_fisica	= cd_pessoa_fisica_p
and	ie_situacao		= 'A';

select	max(nr_seq_gerencia),
	max(nr_seq_grupo),
	max(nr_seq_diretoria)
into STRICT	nr_seq_gerencia_w,
	nr_seq_grupo_w,
	nr_seq_diretoria_w
from	ppm_objetivo_metrica a,
	ppm_objetivo_meta b,
	ppm_objetivo c
where	a.nr_sequencia		= nr_seq_objetivo_metrica_p
and	a.nr_seq_meta		= b.nr_sequencia
and	b.nr_seq_objetivo	= c.nr_sequencia;

dt_referencia_w	:= pkg_date_utils.start_of(dt_referencia_p,'month');
dt_final_w	:= pkg_date_utils.end_of(last_day(dt_referencia_p),'DAY');
dt_aux_w	:= pkg_date_utils.start_of(dt_referencia_p,'month');

while(trunc(dt_aux_w) <= trunc(dt_referencia_p)) loop
	if (obter_se_dia_util(dt_aux_w,1) = 'S') then
		qt_dias_util_mes_w := qt_dias_util_mes_w + 1;
	end if;
	dt_aux_w := dt_aux_w + 1;
end loop;

qt_hora_mes_w := (qt_dias_util_mes_w * 525) / 60;

if (nr_seq_grupo_w IS NOT NULL AND nr_seq_grupo_w::text <> '') then

	select	max(coalesce(QT_MEDIA_HORA_EXTRA_PESSOA,0))
	into STRICT	qt_hora_extra_w
	from	w_indicador_desenv_apres
	where	trunc(dt_referencia) 	= trunc(dt_referencia_p)
	and	nr_seq_grupo	= nr_seq_grupo_w
	and	ie_abrangencia 	= 'GRU';

elsif (nr_seq_gerencia_w IS NOT NULL AND nr_seq_gerencia_w::text <> '') then

	select	max(coalesce(QT_MEDIA_HORA_EXTRA_PESSOA,0))
	into STRICT	qt_hora_extra_w
	from	w_indicador_desenv_apres
	where	trunc(dt_referencia) 	= trunc(dt_referencia_p)
	and	nr_seq_gerencia	= nr_seq_gerencia_w
	and	ie_abrangencia 	= 'GER';

elsif (nr_seq_diretoria_w IS NOT NULL AND nr_seq_diretoria_w::text <> '') then

	select	max(coalesce(QT_MEDIA_HORA_EXTRA_PESSOA,0))
	into STRICT	qt_hora_extra_w
	from	w_indicador_desenv_apres
	where	trunc(dt_referencia) 	= trunc(dt_referencia_p)
	and	nr_seq_diretoria	= nr_seq_diretoria_w
	and	ie_abrangencia 		= 'DIRE';

elsif (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then

	--Com base no relat√≥rio CATE 2031 da base CORP.
	select	round(sum(qt_min_trab) / 60)
	into STRICT	qt_hora_extra_w
	from	pf_hora_trabalhada a
	where	a.cd_pessoa_fisica 	= cd_pessoa_fisica_p
	and 	a.dt_referencia 	between dt_referencia_w and dt_final_w
	and 	a.cd_sistema 		IN (301,302,303,304,305,306,501,502,504,505);
end if;

if (coalesce(qt_hora_extra_w,0) = 0) then
	resultado_w	:= 0;
else
	resultado_w	:= dividir( qt_hora_extra_w, qt_hora_mes_w ) * 100;
end if;

CALL PPM_GRAVAR_RESULTADO(nr_seq_objetivo_metrica_p, dt_referencia_p, resultado_w, qt_hora_mes_w, qt_hora_extra_w, nm_usuario_p);

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ppm_metrica_hora_extra (nr_seq_metrica_p bigint, nr_seq_objetivo_metrica_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, dt_referencia_p timestamp) FROM PUBLIC;

