-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_med_mat_assoc_glic ( nr_prescricao_p bigint, nr_sequencia_p bigint, nr_seq_prot_glic_p bigint) AS $body$
DECLARE
							

nr_seq_protocolo_glic_w bigint;
cd_estabelecimento_w	smallint;
dt_primeiro_horario_w	timestamp;
cd_unidade_medida_w		varchar(30);
nr_horas_validade_w		bigint;
ds_horarios_ww			varchar(255);
ie_regra_disp_w			varchar(2);
nr_seq_acum_w			bigint;
cd_material_w			integer;
qt_dose_w				double precision;
nm_usuario_w			varchar(15);
ds_observacao_w			varchar(255);
qt_conversao_w			double precision;
nr_sequencia_w			integer;
cont_w					bigint;
cd_intervalo_w			varchar(7);
ds_horarios_w			varchar(2000);
ds_horarios_proc_w		varchar(4000);
ds_horarios2_ww			varchar(2000);
nr_ocorrencia_w			bigint := 0;
qt_total_disp_w			double precision;
ds_erro_w				varchar(255);
ie_via_aplicacao_w		varchar(5);
VarChecarSN_w			varchar(5);
dt_prescricao_w			timestamp;
cd_motivo_baixa_w		smallint;
dt_baixa_w				timestamp;
ie_cobra_paciente_w		varchar(1);
ie_se_necessario_w		varchar(1);
qt_idade_min_w			real;
qt_idade_max_w			real;
ie_intervalo_fixo_w		varchar(1);
dt_prev_execucao_w		timestamp;
qt_hora_intervalo_w		smallint;
qt_min_intervalo_w		integer;
ie_glicose_w			varchar(1);
ie_prescr_mat_sem_lib_w	varchar(30);
ie_checar_adep_w		varchar(1);
qt_material_w			bigint;
								
c01 CURSOR FOR
	SELECT	cd_material,
			cd_unidade_medida,
			qt_dose,
			cd_intervalo,
			ie_via_aplicacao,
			ds_horarios,
			nr_seq_acum_w + row_number() OVER () AS rownum,
			ie_glicemia,
			coalesce(ie_intervalo_dif,'N'),
			coalesce(ie_checar_adep,'N'),
			coalesce(ie_se_necessario,'N')
	from 	protocolo_glic_mat_med
	where 	nr_seq_protocolo_glic = nr_seq_prot_glic_p;
	

BEGIN
select	cd_estabelecimento,
	dt_primeiro_horario,
	dt_prescricao,
	nm_usuario
into STRICT	cd_estabelecimento_w,
	dt_primeiro_horario_w,
	dt_prescricao_w,
	nm_usuario_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

select	count(*)
into STRICT	cont_w
from	prescr_Procedimento
where	nr_prescricao	= nr_prescricao_p
and		nr_sequencia	= nr_sequencia_p;

select	max(dt_prev_execucao),
		max(qt_hora_intervalo),
		max(qt_min_intervalo)
into STRICT	dt_prev_execucao_w,
		qt_hora_intervalo_w,
		qt_min_intervalo_w			
from	prescr_Procedimento
where	nr_prescricao	= nr_prescricao_p
and		nr_sequencia	= nr_sequencia_p;

if (cont_w > 0) then
	ie_prescr_mat_sem_lib_w := Obter_Param_Usuario(924, 530, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_w, ie_prescr_mat_sem_lib_w);

	select  coalesce(max(nr_sequencia),0)		
	into STRICT	nr_seq_acum_w 		
	from	prescr_material
	where	nr_prescricao = nr_prescricao_p;

	open c01;
	loop
	fetch c01 into			
		cd_material_w,
		cd_unidade_medida_w,
		qt_dose_w,		
		cd_intervalo_w,		
		ie_via_aplicacao_w,
		ds_horarios_w,
		nr_sequencia_w,
		ie_glicose_w,
		ie_intervalo_fixo_w,
		ie_checar_adep_w,
		ie_se_necessario_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

		ds_horarios_proc_w := null;
				
		select	/*+ INDEX(a PRESMAT_PRESPRO_FK_I) */			count(cd_material)
		into STRICT
			qt_material_w
		from	prescr_material a
		where	a.nr_prescricao = nr_prescricao_p
		and		a.cd_material = cd_material_w
		and		a.ie_via_aplicacao = ie_via_aplicacao_w
		and		a.qt_dose = qt_dose_w
		and		a.nr_sequencia_proc = nr_sequencia_p;
		
		if (qt_material_w = 0) then
		
			select	coalesce(max(qt_conversao),1)
			into STRICT	qt_conversao_w
			from	material_conversao_unidade
			where	cd_material		= cd_material_w
			and	cd_unidade_medida	= cd_unidade_medida_w;
				
			select	nr_horas_validade
			into STRICT	nr_horas_validade_w
			from	prescr_medica
			where	nr_prescricao = nr_prescricao_p;

			if (coalesce(cd_intervalo_w::text, '') = '' and coalesce(ie_intervalo_fixo_w, 'S') = 'N') then
				select	max(cd_intervalo),
					max(ds_horarios)
				into STRICT	cd_intervalo_w,
					ds_horarios_proc_w
				from	prescr_Procedimento
				where	nr_prescricao	= nr_prescricao_p
				and	nr_sequencia	= nr_sequencia_p;
			end if;

			select	obter_ocorrencia_intervalo(cd_intervalo_w, nr_horas_validade_w, 'O')
			into STRICT	nr_ocorrencia_w
			;
			
			VarChecarSN_w := Obter_Param_Usuario(924, 650, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_w, VarChecarSN_w);
			
			if (ie_se_necessario_w = 'S') then
				ds_horarios_ww := 'SN';
			elsif (VarChecarSN_w = 'S') and (coalesce(ie_se_necessario_w,'N') <> 'S') then
				Select	coalesce(max(ie_se_necessario),'N')
				into STRICT	ie_se_necessario_w
				from	intervalo_prescricao
				where	cd_intervalo = cd_intervalo_w;
				
				if (ie_se_necessario_w = 'S') then
					ds_horarios_ww	:= 'SN';
				end if;
			end if;
			
			nr_ocorrencia_w := 0;

			if (ie_intervalo_fixo_w = 'N') then		
				SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, coalesce(dt_primeiro_horario_w,dt_prescricao_w), to_date(to_char(dt_prev_execucao_w,'hh24:mi'),'hh24:mi'), 24, cd_material_w, qt_hora_intervalo_w, qt_min_intervalo_w, nr_ocorrencia_w, ds_horarios_ww, ds_horarios2_ww, 'N', null) INTO STRICT nr_ocorrencia_w, ds_horarios_ww, ds_horarios2_ww;

				ds_horarios_ww	:= ds_horarios_ww || ds_horarios2_ww;
			else
				SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, coalesce(dt_primeiro_horario_w,dt_prescricao_w), coalesce(dt_primeiro_horario_w,dt_prescricao_w), 24, cd_material_w, qt_hora_intervalo_w, qt_min_intervalo_w, nr_ocorrencia_w, ds_horarios_ww, ds_horarios2_ww, 'N', null) INTO STRICT nr_ocorrencia_w, ds_horarios_ww, ds_horarios2_ww;

				ds_horarios_ww	:= ds_horarios_ww || ds_horarios2_ww;
			end if;	

			if	((coalesce(ie_intervalo_fixo_w, 'S') = 'N') and (ds_horarios_proc_w IS NOT NULL AND ds_horarios_proc_w::text <> '')) then
				ds_horarios_w := ds_horarios_proc_w;
			end if;
						
				
			Insert into Prescr_material(
				nr_prescricao,
				nr_sequencia,
				ie_origem_inf,
				cd_material,
				cd_unidade_medida_dose,
				cd_unidade_medida,
				qt_dose,
				qt_unitaria,
				qt_material,
				dt_atualizacao,
				nm_usuario,
				cd_intervalo,
				ds_observacao,
				nr_sequencia_proc,
				ie_agrupador,
				ie_medicacao_paciente,
				ie_se_necessario,
				ie_urgencia,
				ie_suspenso,
				ie_utiliza_kit,
				ie_status_cirurgia,
				ie_bomba_infusao,
				ie_aplic_bolus, 
				ie_aplic_lenta, 
				ie_acm,
				cd_motivo_baixa,
				dt_baixa,
				qt_conversao_dose,
				ds_horarios,
				nr_ocorrencia,
				ie_via_aplicacao,
				ie_recons_diluente_fixo,
				ie_sem_aprazamento,
				ie_cobra_paciente,
				ie_intervalo_dif,
				hr_prim_horario,
				ie_glicemia,
				ie_checar_adep)
			values (		
				nr_prescricao_p,
				nr_sequencia_w,
				'A',
				cd_material_w,
				cd_unidade_medida_w,
				cd_unidade_medida_w,
				qt_dose_w,
				dividir(qt_dose_w,qt_conversao_w),
				qt_dose_w,
				clock_timestamp(),
				nm_usuario_w,
				cd_intervalo_w,
				null,
				nr_sequencia_p,
				5,
				'N',
				coalesce(ie_se_necessario_w,'N'),
				'N',
				'N',
				'N',
				'GI',
				'N',
				'N',
				'N',
				'N',
				coalesce(cd_motivo_baixa_w,0),
				dt_baixa_w,
				qt_conversao_w,
				ds_horarios_w,
				nr_ocorrencia_w,
				ie_via_aplicacao_w,
				'N',
				'N',
				ie_cobra_paciente_w,
				ie_intervalo_fixo_w,
				CASE WHEN ie_intervalo_fixo_w='N' THEN to_char(dt_prev_execucao_w,'hh24:mi')  ELSE to_char(coalesce(dt_primeiro_horario_w,dt_prescricao_w),'hh24:mi') END ,
				ie_glicose_w,
				ie_checar_adep_w);			
				
				if (ie_prescr_mat_sem_lib_w = 'S') then
					CALL Gerar_prescr_mat_sem_dt_lib(nr_prescricao_p,nr_sequencia_w,obter_perfil_ativo,'N',nm_usuario_w,null);
				end if;
				
				SELECT * FROM Obter_Quant_Dispensar(cd_estabelecimento_w, cd_material_w, NR_PRESCRICAO_P, nr_sequencia_w, cd_intervalo_w, null, dividir(qt_dose_w,qt_conversao_w), null, nr_ocorrencia_w, null, '1', cd_unidade_medida_w, 1, qt_dose_w, qt_total_disp_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, 'N') INTO STRICT qt_dose_w, qt_total_disp_w, ie_regra_disp_w, ds_erro_w;
					
				update	prescr_material
				set		qt_material	= qt_dose_w,
						qt_total_dispensar	= qt_total_disp_w,		
						ie_regra_disp	= CASE WHEN coalesce(ie_regra_disp,'X')='D' THEN  ie_regra_disp  ELSE ie_regra_disp_w END
				where	nr_prescricao	= nr_prescricao_p
				and	nr_sequencia	= nr_sequencia_w;
			
			end if;
			
		end loop;
		close c01;

end if;	

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;			

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_med_mat_assoc_glic ( nr_prescricao_p bigint, nr_sequencia_p bigint, nr_seq_prot_glic_p bigint) FROM PUBLIC;

