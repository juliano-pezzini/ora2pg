-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_mapa_estoque_colunas ( nr_seq_mapa_p bigint, nm_usuario_p text, ie_qt_vl_p text, ie_agrupa_p text, cd_local_estoque_p bigint, ie_disp_estoque_p text, ie_padronizado_p text, dt_mesano_referencia_p timestamp) AS $body$
DECLARE



ie_tipo_w				varchar(1);
cd_estabelecimento_w		smallint;
vl_custo_medio_w			double precision;
cd_codigo_w			integer;
cd_agrupamento_w			integer;
cd_codigo_ant_w			integer;
ds_descricao_w			varchar(255);
cd_operacao_estoque_w		smallint;
qt_estoque_w			double precision;
mes_anterior_w			timestamp;
qt_saldo_anterior_w			double precision;
qt_saldo_atual_w			double precision;
qt_saldo_atual_w2			double precision;
qt_saldo_disponivel_w		double precision;
qt_emprestimo_ent_w		double precision;
qt_emprestimo_sai_w		double precision;
qt_custo_medio_w			double precision;
qt_consumo_mensal_w		double precision;
nr_seq_coluna_w			smallint;
ie_entrada_saida_w			varchar(2);
ie_mes_w			varchar(100);
qt_entrada1_w			double precision := 0;
qt_entrada2_w			double precision := 0;
qt_entrada3_w			double precision := 0;
qt_entrada4_w			double precision := 0;
qt_entrada5_w			double precision := 0;
qt_saida1_w			double precision := 0;
qt_saida2_w			double precision := 0;
qt_saida3_w			double precision := 0;
qt_saida4_w			double precision := 0;
qt_saida5_w			double precision;
qt_existe_w			bigint;
ie_atualizou_ee_w			varchar(1);
ie_atualizou_es_w			varchar(1);
ie_atualizou_sa_w			varchar(1);
ie_atualizou_satual_w		varchar(1);
ie_atualizou_cm_w			varchar(1);
ie_atualizou_co_w			varchar(1);
cd_agrupamento_ee_w		integer;
cd_agrupamento_es_w		integer;
cd_agrupamento_sa_w		integer;
cd_agrupamento_satual_w		integer;


c01 CURSOR FOR
	SELECT	8 ie_tipo,
		a.cd_material,
		CASE WHEN ie_agrupa_p='G' THEN  e.cd_grupo_material WHEN ie_agrupa_p='S' THEN  e.cd_subgrupo_material WHEN ie_agrupa_p='C' THEN  e.cd_classe_material WHEN ie_agrupa_p='M' THEN  a.cd_material END  cd_agrupamento,
		a.cd_operacao_estoque,
		CASE WHEN ie_qt_vl_p='Q' THEN 			sum(CASE WHEN o.ie_entrada_saida='E' THEN  a.qt_estoque  ELSE a.qt_estoque * -1 END )  ELSE sum(CASE WHEN o.ie_entrada_saida='E' THEN  a.vl_estoque  ELSE a.vl_estoque * -1 END ) END
	from	estrutura_material_v e,
		operacao_estoque o,
		movto_estoque_operacao_v a
	where	a.dt_mesano_referencia	= mes_anterior_w
	and	a.cd_estabelecimento	= cd_estabelecimento_w
	and (a.cd_local_estoque	= cd_local_estoque_p or coalesce(cd_local_estoque_p,0) = 0)
	and	a.cd_operacao_estoque	= o.cd_operacao_estoque
	and	a.cd_material		= e.cd_material
	and	a.ie_consignado = 'N'
	and	((ie_padronizado_p = 'A') or (obter_se_material_padronizado(cd_estabelecimento_w, e.cd_material) = ie_padronizado_p))
	and exists (
		SELECT	1
		from	mapa_est_item y,
			mapa_est_item_oper x
		where	x.nr_seq_item		= y.nr_sequencia
		and	x.cd_operacao_estoque	= a.cd_operacao_estoque
		and	y.nr_seq_mapa		= nr_seq_mapa_p
		and	coalesce(y.ie_mes,'AT')		= 'AN')
	group by
		CASE WHEN ie_agrupa_p='G' THEN  e.cd_grupo_material WHEN ie_agrupa_p='S' THEN  e.cd_subgrupo_material WHEN ie_agrupa_p='C' THEN  e.cd_classe_material WHEN ie_agrupa_p='M' THEN  a.cd_material END ,
		a.cd_operacao_estoque,
		a.cd_material
	
union all

	select	9 ie_tipo,
		a.cd_material,
		CASE WHEN ie_agrupa_p='G' THEN  e.cd_grupo_material WHEN ie_agrupa_p='S' THEN  e.cd_subgrupo_material WHEN ie_agrupa_p='C' THEN  e.cd_classe_material WHEN ie_agrupa_p='M' THEN  a.cd_material END  cd_agrupamento,
		a.cd_operacao_estoque,
		CASE WHEN ie_qt_vl_p='Q' THEN 			sum(CASE WHEN o.ie_entrada_saida='E' THEN  a.qt_estoque  ELSE a.qt_estoque * -1 END )  ELSE sum(CASE WHEN o.ie_entrada_saida='E' THEN  a.vl_estoque  ELSE a.vl_estoque * -1 END ) END 
	from	estrutura_material_v e,
		operacao_estoque o,
		movto_estoque_operacao_v a
	where	a.dt_mesano_referencia	= dt_mesano_referencia_p
	and	a.cd_estabelecimento	= cd_estabelecimento_w
	and (a.cd_local_estoque	= cd_local_estoque_p or coalesce(cd_local_estoque_p,0) = 0)
	and	a.cd_operacao_estoque	= o.cd_operacao_estoque
	and	a.cd_material		= e.cd_material
	and	a.ie_consignado = 'N'
	and	((ie_padronizado_p = 'A') or (obter_se_material_padronizado(cd_estabelecimento_w, e.cd_material) = ie_padronizado_p))
	and exists (
		select	1
		from	mapa_est_item y,
			mapa_est_item_oper x
		where	x.nr_seq_item		= y.nr_sequencia
		and	x.cd_operacao_estoque	= a.cd_operacao_estoque
		and	y.nr_seq_mapa		= nr_seq_mapa_p
		and	coalesce(y.ie_mes,'AT')		<> 'AN')
	group by
		CASE WHEN ie_agrupa_p='G' THEN  e.cd_grupo_material WHEN ie_agrupa_p='S' THEN  e.cd_subgrupo_material WHEN ie_agrupa_p='C' THEN  e.cd_classe_material WHEN ie_agrupa_p='M' THEN  a.cd_material END ,
		a.cd_operacao_estoque,
		a.cd_material
	
union all

	select	9,
		a.cd_material,
		CASE WHEN ie_agrupa_p='G' THEN  e.cd_grupo_material WHEN ie_agrupa_p='S' THEN  e.cd_subgrupo_material WHEN ie_agrupa_p='C' THEN  e.cd_classe_material WHEN ie_agrupa_p='M' THEN  a.cd_material END  cd_agrupamento,
		0,
		0
	from	estrutura_material_v e,
		saldo_estoque a
	where	a.dt_mesano_referencia	= dt_mesano_referencia_p
	and	a.cd_estabelecimento	= cd_estabelecimento_w
	and (a.cd_local_estoque	= cd_local_estoque_p or coalesce(cd_local_estoque_p,0) = 0)
	and	a.cd_material		= e.cd_material
	and	((ie_padronizado_p = 'A') or (obter_se_material_padronizado(cd_estabelecimento_w, e.cd_material) = ie_padronizado_p))
	and not exists (
		select
			1
		from	movimento_estoque m
		where	m.cd_material_estoque	= a.cd_material
		and	m.dt_mesano_referencia	= a.dt_mesano_referencia
		and	m.cd_estabelecimento	= a.cd_estabelecimento)
	group by
		CASE WHEN ie_agrupa_p='G' THEN  e.cd_grupo_material WHEN ie_agrupa_p='S' THEN  e.cd_subgrupo_material WHEN ie_agrupa_p='C' THEN  e.cd_classe_material WHEN ie_agrupa_p='M' THEN  a.cd_material END ,
		a.cd_material
	order by cd_agrupamento,
		cd_material;

c02 CURSOR FOR
	SELECT	b.nr_seq_coluna,
		b.ie_entrada_saida,
		coalesce(b.ie_mes,'AT') ie_mes
	from	mapa_est_item b,
		mapa_est_item_oper a
	where	a.nr_seq_item		= b.nr_sequencia
	and	a.cd_operacao_estoque	= cd_operacao_estoque_w
	and	b.nr_seq_mapa		= nr_seq_mapa_p
	
union all

	SELECT	b.nr_seq_coluna,
		a.ie_tipo_informacao,
		coalesce(b.ie_mes,'AT') ie_mes
	from	mapa_est_item b,
		mapa_est_item_oper a
	where	a.nr_seq_item		= b.nr_sequencia
	and	coalesce(a.cd_operacao_estoque::text, '') = ''
	and	a.ie_tipo_informacao <> 'OP'
	and	b.nr_seq_mapa		= nr_seq_mapa_p;


BEGIN
delete from w_mapa_estoque;
commit;

ie_atualizou_ee_w		:= 'N';
ie_atualizou_es_w		:= 'N';
ie_atualizou_sa_w		:= 'N';
ie_atualizou_satual_w	:= 'N';
ie_atualizou_cm_w		:= 'N';
ie_atualizou_co_w		:= 'N';

mes_anterior_w	:= PKG_DATE_UTILS.ADD_MONTH(dt_mesano_referencia_p, -1, 0);

select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	mapa_estoque
where	nr_sequencia = nr_seq_mapa_p;

open c01;
LOOP
FETCH C01 INTO
	ie_tipo_w,
	cd_codigo_w,
	cd_agrupamento_w,
	cd_operacao_estoque_w,
	qt_estoque_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	qt_saldo_anterior_w		:= 0;
	qt_saldo_atual_w		:= 0;
	qt_saldo_disponivel_w	:= 0;
	qt_emprestimo_ent_w	:= 0;
	qt_emprestimo_sai_w	:= 0;

	if (cd_codigo_ant_w <> cd_codigo_w) then
		ie_atualizou_ee_w		:= 'N';
		ie_atualizou_es_w		:= 'N';
		ie_atualizou_sa_w		:= 'N';
		ie_atualizou_satual_w	:= 'N';
	end if;
	cd_codigo_ant_w	:= cd_codigo_w;

	if (ie_atualizou_ee_w = 'N')  and (coalesce(cd_agrupamento_ee_w,0) <> cd_agrupamento_w) then
		select	/*+ INDEX(b empmate_i1) index (c emprest_pk) */			CASE WHEN ie_qt_vl_p='Q' THEN  coalesce(sum(b.qt_material),0)  ELSE coalesce(sum(b.qt_material * obter_custo_medio_material(1, PKG_DATE_UTILS.start_of(clock_timestamp(),'month',0), b.cd_material)),0) END
		into STRICT	qt_emprestimo_ent_w
		from	estrutura_material_v a,
			emprestimo c,
			emprestimo_material b
		where	a.cd_material	= b.cd_material
		and	b.nr_emprestimo	= c.nr_emprestimo
		and	PKG_DATE_UTILS.start_of(c.dt_emprestimo,'month',0) = dt_mesano_referencia_p
		and	c.ie_situacao	= 'A'
		and	b.qt_material	> 0
		and	c.ie_tipo	= 'E'
		and	cd_agrupamento_w = CASE WHEN ie_agrupa_p='G' THEN  a.cd_grupo_material WHEN ie_agrupa_p='S' THEN  a.cd_subgrupo_material WHEN ie_agrupa_p='C' THEN  a.cd_classe_material WHEN ie_agrupa_p='M' THEN  a.cd_material END;
		cd_agrupamento_ee_w := cd_agrupamento_w;
	end if;

	if (ie_atualizou_es_w = 'N') and (coalesce(cd_agrupamento_es_w,0) <> cd_agrupamento_w) then
		select	/*+ INDEX(b empmate_i1) index (c emprest_pk) */			CASE WHEN ie_qt_vl_p='Q' THEN  coalesce(sum(b.qt_material),0)  ELSE coalesce(sum(b.qt_material * obter_custo_medio_material(1, PKG_DATE_UTILS.start_of(clock_timestamp(),'month',0), b.cd_material)),0) END
		into STRICT	qt_emprestimo_sai_w
		from	estrutura_material_v a,
			emprestimo c,
			emprestimo_material b
		where	a.cd_material	= b.cd_material
		and	b.nr_emprestimo	= c.nr_emprestimo
		and	PKG_DATE_UTILS.start_of(c.dt_emprestimo,'month',0) = dt_mesano_referencia_p
		and	c.ie_situacao	= 'A'
		and	b.qt_material	> 0
		and	c.ie_tipo	= 'S'
		and	cd_agrupamento_w = CASE WHEN ie_agrupa_p='G' THEN  a.cd_grupo_material WHEN ie_agrupa_p='S' THEN  a.cd_subgrupo_material WHEN ie_agrupa_p='C' THEN  a.cd_classe_material WHEN ie_agrupa_p='M' THEN  a.cd_material END;
		cd_agrupamento_es_w := cd_agrupamento_w;
	end if;

	if (ie_atualizou_sa_w = 'N') and (coalesce(cd_agrupamento_sa_w,0) <> cd_agrupamento_w) then
		select	CASE WHEN ie_qt_vl_p='Q' THEN  coalesce(sum(a.qt_estoque),0)  ELSE coalesce(sum(a.vl_estoque),0) END
		into STRICT	qt_saldo_anterior_w
		from	estrutura_material_v e,
			saldo_estoque a
		where	a.cd_material = e.cd_material
		and	a.dt_mesano_referencia	= PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_mesano_referencia_p, -1, 0),'month',0)
		and	a.cd_estabelecimento	= cd_estabelecimento_w
		and (a.cd_local_estoque	= cd_local_estoque_p or coalesce(cd_local_estoque_p,0) = 0)
		and	((ie_padronizado_p = 'A') or (obter_se_material_padronizado(cd_estabelecimento_w, e.cd_material) = ie_padronizado_p))
		and	cd_agrupamento_w = CASE WHEN ie_agrupa_p='G' THEN  e.cd_grupo_material WHEN ie_agrupa_p='S' THEN  e.cd_subgrupo_material WHEN ie_agrupa_p='C' THEN  e.cd_classe_material WHEN ie_agrupa_p='M' THEN  e.cd_material END;

	ie_atualizou_sa_w		:= 'S';
	cd_agrupamento_sa_w		:= cd_agrupamento_w;
	end if;

	if (ie_atualizou_satual_w = 'N') and (coalesce(cd_agrupamento_satual_w,0) <> cd_agrupamento_w) then
		select	CASE WHEN ie_qt_vl_p='Q' THEN  coalesce(sum(a.qt_estoque),0)  ELSE coalesce(sum(a.vl_estoque),0) END
		into STRICT	qt_saldo_atual_w
		from	estrutura_material_v e,
			saldo_estoque a
		where	a.cd_material = e.cd_material
		and	a.dt_mesano_referencia	= PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_mesano_referencia_p, -1, 0),'month',0)
		and	a.cd_estabelecimento	= cd_estabelecimento_w
		and (a.cd_local_estoque	= cd_local_estoque_p or coalesce(cd_local_estoque_p,0) = 0)
		and	((ie_padronizado_p = 'A') or (obter_se_material_padronizado(cd_estabelecimento_w, e.cd_material) = ie_padronizado_p))
		and	cd_agrupamento_w = CASE WHEN ie_agrupa_p='G' THEN  e.cd_grupo_material WHEN ie_agrupa_p='S' THEN  e.cd_subgrupo_material WHEN ie_agrupa_p='C' THEN  e.cd_classe_material WHEN ie_agrupa_p='M' THEN  e.cd_material END;

		cd_agrupamento_satual_w := cd_agrupamento_w;
	end if;

		/* Verifica a coluna a ser incluido a quantidade e insere a quantidade no campo que deve ser somado*/

		qt_entrada1_w	:= 0;
		qt_entrada2_w	:= 0;
		qt_entrada3_w	:= 0;
		qt_entrada4_w	:= 0;
		qt_entrada5_w	:= 0;
		qt_saida1_w	:= 0;
		qt_saida2_w	:= 0;
		qt_saida3_w	:= 0;
		qt_saida4_w	:= 0;
		qt_saida5_w	:= 0;
		open c02;
		LOOP
		FETCH C02 INTO
			nr_seq_coluna_w,
			ie_entrada_saida_w,
			ie_mes_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			if	((ie_mes_w = 'AN' AND ie_tipo_w = 8) or
				 (ie_mes_w <> 'AN' AND ie_tipo_w = 9)) then
				begin

			ie_atualizou_satual_w	:= 'S';
			ie_atualizou_sa_w		:= 'S';

			if (ie_entrada_saida_w = 'EE') then
				qt_estoque_w		:= qt_emprestimo_ent_w;
				ie_atualizou_ee_w	:= 'S';
			elsif (ie_entrada_saida_w = 'ES') then
				qt_estoque_w		:= qt_emprestimo_sai_w;
				ie_atualizou_es_w	:= 'S';
			elsif (ie_entrada_saida_w = 'SA') then
				qt_estoque_w		:= qt_saldo_anterior_w;
				ie_atualizou_sa_w	:= 'S';
			elsif (ie_entrada_saida_w = 'CM') then
				begin
				select	obter_custo_medio_material(cd_estabelecimento_w, PKG_DATE_UTILS.start_of(dt_mesano_referencia_p,'month',0), cd_material)
				into STRICT	qt_custo_medio_w
				from	estrutura_material_v
				where	cd_agrupamento_w = CASE WHEN ie_agrupa_p='G' THEN  cd_grupo_material WHEN ie_agrupa_p='S' THEN  cd_subgrupo_material WHEN ie_agrupa_p='C' THEN  cd_classe_material WHEN ie_agrupa_p='M' THEN  cd_material END;
				qt_estoque_w		:= qt_custo_medio_w;
				ie_atualizou_cm_w	:= 'S';
				end;
			elsif (ie_entrada_saida_w = 'CO') then
				begin
				select	obter_mat_estabelecimento(cd_estabelecimento_w, NULL, cd_material, 'CM')
				into STRICT	qt_consumo_mensal_w
				from	estrutura_material_v
				where	cd_agrupamento_w = CASE WHEN ie_agrupa_p='G' THEN  cd_grupo_material WHEN ie_agrupa_p='S' THEN  cd_subgrupo_material WHEN ie_agrupa_p='C' THEN  cd_classe_material WHEN ie_agrupa_p='M' THEN  cd_material END;
				qt_estoque_w		:= qt_consumo_mensal_w;
				ie_atualizou_co_w	:= 'S';
				end;
			elsif (ie_entrada_saida_w = 'SD') then
				begin
				select	coalesce(sum(Obter_Saldo_Disp_Estoque(cd_estabelecimento_w,
										cd_material,
										coalesce(cd_local_estoque_p,0),
										PKG_DATE_UTILS.start_of(dt_mesano_referencia_p,'month',0))),0)
				into STRICT	qt_saldo_disponivel_W
				from	estrutura_material_v
				where	cd_agrupamento_w = CASE WHEN ie_agrupa_p='G' THEN  cd_grupo_material WHEN ie_agrupa_p='S' THEN  cd_subgrupo_material WHEN ie_agrupa_p='C' THEN  cd_classe_material WHEN ie_agrupa_p='M' THEN  cd_material END;
				qt_estoque_w	:= qt_saldo_disponivel_w;
				end;
			end if;

			if (nr_seq_coluna_w = 1) then
				qt_entrada1_w	:= qt_entrada1_w + qt_estoque_w;
			elsif (nr_seq_coluna_w = 2) then
				qt_entrada2_w	:= qt_entrada2_w + qt_estoque_w;
			elsif (nr_seq_coluna_w = 3) then
				qt_entrada3_w	:= qt_entrada3_w + qt_estoque_w;
			elsif (nr_seq_coluna_w = 4) then
				qt_entrada4_w	:= qt_entrada4_w + qt_estoque_w;
			elsif (nr_seq_coluna_w = 5) then
				qt_entrada5_w	:= qt_entrada5_w + qt_estoque_w;
			elsif (nr_seq_coluna_w = 6) then
				qt_saida1_w	:= qt_saida1_w + qt_estoque_w;
			elsif (nr_seq_coluna_w = 7) then
				qt_saida2_w	:= qt_saida2_w + qt_estoque_w;
			elsif (nr_seq_coluna_w = 8) then
				qt_saida3_w	:= qt_saida3_w + qt_estoque_w;
			elsif (nr_seq_coluna_w = 9) then
				qt_saida4_w	:= qt_saida4_w + qt_estoque_w;
			elsif (nr_seq_coluna_w = 10) then
				qt_saida5_w	:= qt_saida5_w + qt_estoque_w;
			end if;


			end;
			end if;

			end;
		END LOOP;
		CLOSE C02;



	select	count(*)
	into STRICT	qt_existe_w
	from	w_mapa_estoque
	where	cd_codigo = cd_codigo_w;

	if (qt_existe_w = 0) then
		select	obter_desc_estrut_mat(
					CASE WHEN ie_agrupa_p='G' THEN  cd_codigo_w  ELSE null END ,
					CASE WHEN ie_agrupa_p='S' THEN  cd_codigo_w  ELSE null END ,
					CASE WHEN ie_agrupa_p='C' THEN  cd_codigo_w  ELSE null END ,
					CASE WHEN ie_agrupa_p='M' THEN  cd_codigo_w  ELSE null END )
		into STRICT	ds_descricao_w
		;

		insert into w_mapa_estoque(
			nr_sequencia,
			ds_descricao,
			dt_atualizacao,
			nm_usuario,
			cd_codigo,
			qt_saldo_anterior,
			qt_entrada1,
			qt_entrada2,
			qt_entrada3,
			qt_entrada4,
			qt_entrada5,
			qt_saida1,
			qt_saida2,
			qt_saida3,
			qt_saida4,
			qt_saida5,
			qt_saldo_atual,
			qt_emprestimo_ent,
			qt_emprestimo_sai,
			qt_saldo_disponivel,
			ie_agrupa)
		values (nextval('w_mapa_estoque_seq'),
			ds_descricao_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_codigo_w,
			qt_saldo_anterior_w,
			qt_entrada1_w,
			qt_entrada2_w,
			qt_entrada3_w,
			qt_entrada4_w,
			qt_entrada5_w,
			qt_saida1_w,
			qt_saida2_w,
			qt_saida3_w,
			qt_saida4_w,
			qt_saida5_w,
			qt_saldo_atual_w,
			qt_emprestimo_ent_w,
			qt_emprestimo_sai_w,
			qt_saldo_disponivel_w,
			ie_agrupa_p);
	else
		update	w_mapa_estoque
		set	qt_saldo_disponivel = qt_saldo_disponivel + qt_saldo_disponivel_w,
			qt_saldo_anterior	= qt_saldo_anterior + qt_saldo_anterior_w,
			qt_saldo_atual	= qt_saldo_atual + qt_saldo_atual_w,
			qt_entrada1	= qt_entrada1 + qt_entrada1_w,
			qt_entrada2	= qt_entrada2 + qt_entrada2_w,
			qt_entrada3	= qt_entrada3 + qt_entrada3_w,
			qt_entrada4	= qt_entrada4 + qt_entrada4_w,
			qt_entrada5	= qt_entrada5 + qt_entrada5_w,
			qt_saida1		= qt_saida1 + qt_saida1_w,
			qt_saida2		= qt_saida2 + qt_saida2_w,
			qt_saida3		= qt_saida3 + qt_saida3_w,
			qt_saida4		= qt_saida4 + qt_saida4_w,
			qt_saida5		= qt_saida5 + qt_saida5_w
		where	cd_codigo	= cd_codigo_w;
	end if;
	end;
END LOOP;
CLOSE C01;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_mapa_estoque_colunas ( nr_seq_mapa_p bigint, nm_usuario_p text, ie_qt_vl_p text, ie_agrupa_p text, cd_local_estoque_p bigint, ie_disp_estoque_p text, ie_padronizado_p text, dt_mesano_referencia_p timestamp) FROM PUBLIC;

