-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE import_sus_bpa_preco (vl_sa_p bigint, vl_sp_p bigint, cd_procedimento_p bigint, vl_total_amb_p bigint, dt_comp_bpa_p timestamp, vl_tph_p bigint, vl_taxa_sala_p bigint, vl_honorario_medico_p bigint, vl_anestesia_p bigint, vl_matmed_p bigint, vl_contraste_p bigint, vl_filme_rx_p bigint, vl_gesso_p bigint, vl_quimioterapia_p bigint, vl_dialise_p bigint, vl_sadt_rx_p bigint, vl_sadt_pc_p bigint, vl_sadt_outros_p bigint, vl_filme_ressonancia_p bigint, vl_outros_p bigint, vl_plantonista_p bigint, ie_versao_bpa_p text, ie_opcao_p text, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Importar dados AIH para a tabela sus_carater_internacao
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
ie_opcao_p
IN - insere dado tabela sus_preco
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
BEGIN
if (upper(ie_opcao_p) = 'IN') then

	if (vl_sa_p IS NOT NULL AND vl_sa_p::text <> '') and (vl_sp_p IS NOT NULL AND vl_sp_p::text <> '') and (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and (vl_total_amb_p IS NOT NULL AND vl_total_amb_p::text <> '') and (dt_comp_bpa_p IS NOT NULL AND dt_comp_bpa_p::text <> '') then
			insert	into sus_preco(
			vl_sadt,
			vl_sa,
			vl_sh,
			vl_sp,
			qt_pontos_ato,
			vl_total_hospitalar,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_procedimento,
			ie_origem_proced,
			vl_total_amb,
			dt_competencia,
			ie_bpa,
			vl_tph,
			vl_taxa_sala,
			vl_honorario_medico,
			vl_anestesia,
			vl_matmed,
			vl_contraste,
			vl_filme_rx,
			vl_gesso,
			vl_quimioterapia,
			vl_dialise,
			vl_sadt_rx,
			vl_sadt_pc,
			vl_sadt_outros,
			vl_filme_ressonancia,
			vl_outros,
			vl_plantonista,
			ie_versao_bpa)
	values (0,
			vl_sa_p,
			0,
			vl_sp_p,
			0,
			0,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_procedimento_p,
			7,
			vl_total_amb_p,
			dt_comp_bpa_p,
			'S',
			vl_tph_p,
			vl_taxa_sala_p,
			vl_honorario_medico_p,
			vl_anestesia_p,
			vl_matmed_p,
			vl_contraste_p,
			vl_filme_rx_p,
			vl_gesso_p,
			vl_quimioterapia_p,
			vl_dialise_p,
			vl_sadt_rx_p,
			vl_sadt_pc_p,
			vl_sadt_outros_p,
			vl_filme_ressonancia_p,
			vl_outros_p,
			vl_plantonista_p,
			ie_versao_bpa_p);
		commit;
	end if;
elsif (upper(ie_opcao_p) = 'UP') then
	update	sus_preco
	set	ie_bpa = 'S',
			vl_sa                = vl_sa_p,
			vl_total_amb         = vl_total_amb_p,
			dt_atualizacao       = clock_timestamp(),
			vl_tph               = vl_tph_p,
			vl_taxa_sala         = vl_taxa_sala_p,
			vl_honorario_medico  = vl_honorario_medico_p,
			vl_anestesia         = vl_anestesia_p,
			vl_matmed            = vl_matmed_p,
			vl_contraste         = vl_contraste_p,
			vl_filme_rx          = vl_filme_rx_p,
			vl_gesso             = vl_gesso_p,
			vl_quimioterapia     = vl_quimioterapia_p,
			vl_dialise           = vl_dialise_p,
			vl_sadt_rx           = vl_sadt_rx_p,
			vl_sadt_pc           = vl_sadt_pc_p,
			vl_sadt_outros       = vl_sadt_outros_p,
			vl_filme_ressonancia = vl_filme_ressonancia_p,
			vl_outros            = vl_outros_p,
			vl_plantonista       = vl_plantonista_p,
			ie_versao_bpa        = ie_versao_bpa_p
	where	cd_procedimento      = cd_procedimento_p
	and	ie_origem_proced	= 7
	and	dt_competencia		= dt_comp_bpa_p;

end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE import_sus_bpa_preco (vl_sa_p bigint, vl_sp_p bigint, cd_procedimento_p bigint, vl_total_amb_p bigint, dt_comp_bpa_p timestamp, vl_tph_p bigint, vl_taxa_sala_p bigint, vl_honorario_medico_p bigint, vl_anestesia_p bigint, vl_matmed_p bigint, vl_contraste_p bigint, vl_filme_rx_p bigint, vl_gesso_p bigint, vl_quimioterapia_p bigint, vl_dialise_p bigint, vl_sadt_rx_p bigint, vl_sadt_pc_p bigint, vl_sadt_outros_p bigint, vl_filme_ressonancia_p bigint, vl_outros_p bigint, vl_plantonista_p bigint, ie_versao_bpa_p text, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

