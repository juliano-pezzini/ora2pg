-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_tratar_canc_mens_rescisao ( nr_titulo_p bigint, nr_seq_baixa_p bigint, nr_seq_tit_cobr_p bigint, nr_seq_nota_credito_p bigint, cd_estabelecimento_p bigint) AS $body$
DECLARE


ie_gerar_nc_tit_mens_canc_w		varchar(1)	:= 'N';
ie_gerar_nc_tit_resc_w			varchar(1)	:= 'N';
ie_nota_gerada_w			varchar(1)	:= 'N';
ie_pagador_rescindido_w			varchar(1)	:= 'N';
ie_mens_cancelada_w			varchar(1)	:= 'N';
ie_contrato_rescindido_w		varchar(1)	:= 'N';
nr_seq_trans_inadimplencia_w		bigint;
nr_seq_trans_nota_mens_canc_w		bigint;
nr_seq_trans_nota_contr_resc_w		bigint;
nr_seq_pagador_w			bigint;
nr_seq_trans_baixa_mens_canc_w		bigint;
nr_seq_trans_bx_contr_resc_w		bigint;
nr_seq_motivo_nc_canc_w			bigint;
nr_seq_motivo_nc_resc_w			bigint;


BEGIN

select	max(a.nr_seq_pagador)
into STRICT	nr_seq_pagador_w
from	titulo_receber	b,
	pls_mensalidade	a
where	a.nr_sequencia	= b.nr_seq_mensalidade
and	b.nr_titulo	= nr_titulo_p;

if (nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '') and (nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '') and (nr_seq_baixa_p IS NOT NULL AND nr_seq_baixa_p::text <> '') then
	select	coalesce(max(ie_gerar_nc_tit_mens_canc),'N'),
		coalesce(max(ie_gerar_nc_tit_resc),'N'),
		max(nr_seq_trans_inadimplencia),
		max(nr_seq_trans_nota_mens_canc),
		max(nr_seq_trans_nota_contr_resc),
		max(nr_seq_trans_baixa_mens_canc),
		max(nr_seq_trans_baixa_contr_resc),
		max(nr_seq_motivo_nc_canc),
		max(nr_seq_motivo_nc_resc)
	into STRICT	ie_gerar_nc_tit_mens_canc_w,
		ie_gerar_nc_tit_resc_w,
		nr_seq_trans_inadimplencia_w,
		nr_seq_trans_nota_mens_canc_w,
		nr_seq_trans_nota_contr_resc_w,
		nr_seq_trans_baixa_mens_canc_w,
		nr_seq_trans_bx_contr_resc_w,
		nr_seq_motivo_nc_canc_w,
		nr_seq_motivo_nc_resc_w
	from	pls_parametros_cr
	where	cd_estabelecimento	= cd_estabelecimento_p;

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_pagador_rescindido_w
	from	pls_contrato_pagador	b,
		pls_notificacao_pagador a
	where	a.nr_seq_pagador	= b.nr_sequencia
	and	b.nr_sequencia		= nr_seq_pagador_w
	and	(a.dt_rescisao IS NOT NULL AND a.dt_rescisao::text <> '');

	if (ie_pagador_rescindido_w = 'S') then -- Diether - OS 309605 - só gerar movimentação caso seja movimentação por cada título da cobrança
		if (nr_seq_trans_inadimplencia_w IS NOT NULL AND nr_seq_trans_inadimplencia_w::text <> '') then
			update	titulo_receber_liq
			set	nr_seq_trans_fin	= nr_seq_trans_inadimplencia_w
			where	nr_titulo		= nr_titulo_p
			and	nr_sequencia		= nr_seq_baixa_p;
		end if;
	else
		/* Verificar se a mensalidade/título foi cancelada de forma manual (geração indevida) */

		if (ie_gerar_nc_tit_mens_canc_w = 'S') then
			select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_mens_cancelada_w
			from	pls_mensalidade b,
				titulo_receber a
			where	a.nr_seq_mensalidade	= b.nr_sequencia
			and	a.ie_situacao		= '3' /* Cancelado */
			and	b.ie_cancelamento	= 'C'
			and	a.nr_titulo		= nr_titulo_p;

			/* Título tem que estar  cancelado título e a mensalidade */

			if (ie_mens_cancelada_w = 'S') and (nr_seq_trans_nota_mens_canc_w IS NOT NULL AND nr_seq_trans_nota_mens_canc_w::text <> '') and (nr_seq_trans_baixa_mens_canc_w IS NOT NULL AND nr_seq_trans_baixa_mens_canc_w::text <> '') and (nr_seq_nota_credito_p IS NOT NULL AND nr_seq_nota_credito_p::text <> '') then
				update	nota_credito
				set	nr_seq_trans_fin_contab 	= nr_seq_trans_nota_mens_canc_w,
					nr_seq_trans_baixa_tit_pagar	= nr_seq_trans_baixa_mens_canc_w,
					nr_seq_motivo			= nr_seq_motivo_nc_canc_w
				where	nr_sequencia	= nr_seq_nota_credito_p;
			end if;
		end if;

		/* Verificar se o contrato foi rescindido por solicitação do contratante */

		if (ie_gerar_nc_tit_resc_w = 'S') and (ie_nota_gerada_w = 'N') then
			select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_contrato_rescindido_w
			FROM pls_contrato b, pls_contrato_pagador a
LEFT OUTER JOIN pls_motivo_cancelamento c ON (a.nr_seq_motivo_cancelamento = c.nr_sequencia)
WHERE a.nr_sequencia		= nr_seq_pagador_w and a.nr_seq_contrato	= b.nr_sequencia  and (c.ie_inadimplencia = 'N' or coalesce(c.ie_inadimplencia::text, '') = '') and (a.dt_rescisao IS NOT NULL AND a.dt_rescisao::text <> '');

			if (ie_contrato_rescindido_w = 'S') and (nr_seq_trans_nota_contr_resc_w IS NOT NULL AND nr_seq_trans_nota_contr_resc_w::text <> '') and (nr_seq_trans_bx_contr_resc_w IS NOT NULL AND nr_seq_trans_bx_contr_resc_w::text <> '') and (nr_seq_nota_credito_p IS NOT NULL AND nr_seq_nota_credito_p::text <> '') then
				update	nota_credito
				set	nr_seq_trans_fin_contab = nr_seq_trans_nota_contr_resc_w,
					nr_seq_trans_baixa_tit_pagar	= nr_seq_trans_bx_contr_resc_w,
					nr_seq_motivo			= nr_seq_motivo_nc_resc_w
				where	nr_sequencia	= nr_seq_nota_credito_p;
			end if;
		end if;
	end if;
end if;

/* Não pode commitar */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tratar_canc_mens_rescisao ( nr_titulo_p bigint, nr_seq_baixa_p bigint, nr_seq_tit_cobr_p bigint, nr_seq_nota_credito_p bigint, cd_estabelecimento_p bigint) FROM PUBLIC;

