-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_ipasgo_dados_proc_trat ( nr_interno_conta_p bigint, dt_mesano_referencia_p timestamp, nm_usuario_p text, nr_seq_tipo_fatura_p bigint, qt_linha_arq_p INOUT bigint, qt_linha_atend_p INOUT bigint) AS $body$
DECLARE



nr_atendimento_w			atendimento_paciente.nr_atendimento%type;
cd_procedimento_w		varchar(15);
cd_procedimento_ww		varchar(15);
ie_origem_proced_w		procedimento_paciente.ie_origem_proced%type;
qt_procedimento_w			procedimento_paciente.qt_procedimento%type;
ie_via_acesso_w			procedimento_paciente.ie_via_acesso%type;
ds_via_acesso_w			varchar(01);
qt_ato_w				bigint := 0;
qt_ato_ww			bigint := 0;
dt_procedimento_w			procedimento_paciente.dt_procedimento%type;
dt_procedimento_ww		procedimento_paciente.dt_procedimento%type;
nr_seq_proc_w			bigint := -1;
cd_convenio_parametro_w		conta_paciente.cd_convenio_parametro%type;
nr_seq_proc_interno_w		procedimento_paciente.nr_seq_proc_interno%type;
cd_cnpj_w			convenio.cd_cgc%type;
ie_funcao_medico_w		procedimento_paciente.ie_funcao_medico%type;
vl_medico_w			double precision;
ie_w				smallint;
nr_seq_proc_hemot_w		bigint;
cd_tipo_fatura_w			fatur_tipo_fatura.cd_tipo_fatura%type;
ie_considera_proc_interno_w		varchar(01);
cd_tipo_procedimento_w		smallint;
cd_tipo_procedimento_ww		smallint;
cd_estabelecimento_w		conta_paciente.cd_estabelecimento%type;
ie_tipo_atendimento_w		atendimento_paciente.ie_tipo_atendimento%type;
ie_proc_princ_atend_w		procedimento_paciente.ie_proc_princ_atend%type;
nr_ato_ipasgo_w			procedimento_paciente.nr_ato_ipasgo%type;
vl_ch_medico_w			procedimento_paciente.vl_medico%type;
qt_ato_informado_w		bigint := 0;
dt_exec_proc_conta_w	procedimento_paciente.dt_procedimento%type;

c01 CURSOR FOR
SELECT	1,
	coalesce(b.cd_procedimento_convenio,b.cd_procedimento) cd_procedimento,
	b.ie_origem_proced,
	b.qt_procedimento,
	b.ie_via_acesso,
	b.dt_procedimento,
	b.nr_seq_proc_interno,
	b.ie_funcao_medico,
	coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'M', b.nr_sequencia)),0) vl_medico,
	a.cd_tipo_procedimento,
	coalesce(b.ie_proc_princ_atend,'N') ie_proc_princ,
	coalesce(b.nr_ato_ipasgo,0) nr_ato_ipasgo,
	coalesce(b.vl_medico,0) vl_ch_medico
from	procedimento a,
	procedimento_paciente b
where	b.nr_atendimento 	= nr_atendimento_w
and	b.nr_interno_conta	= nr_interno_conta_p
and	coalesce(b.cd_motivo_exc_conta::text, '') = ''
and	obter_classif_material_proced(null, b.cd_procedimento, b.ie_origem_proced) = 1
and	a.cd_procedimento	= b.cd_procedimento
and	a.ie_origem_proced	= b.ie_origem_proced
and	coalesce(b.nr_seq_proc_pacote,0) <> b.nr_sequencia
and	a.cd_tipo_procedimento not in (1,2,3,4,5,12,13,14,15,16,20,25,26,30,31,34,39,74,75,80,91,92,94,96,97,115)
and	somente_numero(b.cd_procedimento_convenio) not in (70025,70033)	--Estes são alto custo devem sair no union 5
and	coalesce(b.qt_procedimento,0) <> 0
and	cd_tipo_fatura_w not in (3,4,17)
and	qt_ato_informado_w = 0

union all

/*Anderson em 10/03/2011 - Gerar uma unica linha de Hemoterapia (80) com 20010 quando a fatura for 17 (conferencia)*/

SELECT	2,
	'00020010' cd_procedimento,
	0,
	1,
	'',
	b.dt_procedimento,
	0,
	b.ie_funcao_medico,
	coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'M', b.nr_sequencia)),0) vl_medico,
	a.cd_tipo_procedimento,
	coalesce(b.ie_proc_princ_atend,'N') ie_proc_princ,
	coalesce(b.nr_ato_ipasgo,0) nr_ato_ipasgo,
	coalesce(b.vl_medico,0) vl_ch_medico
from	procedimento a,
	procedimento_paciente b
where	b.nr_atendimento 	= nr_atendimento_w
and	b.nr_interno_conta	= nr_interno_conta_p
and	coalesce(b.cd_motivo_exc_conta::text, '') = ''
and	obter_classif_material_proced(null, b.cd_procedimento, b.ie_origem_proced) = 1
and	a.cd_procedimento	= b.cd_procedimento
and	a.ie_origem_proced	= b.ie_origem_proced
and	a.cd_tipo_procedimento in (80)
and	cd_tipo_fatura_w = 17
and	qt_ato_informado_w = 0

union all

select	3,
	coalesce(b.cd_procedimento_convenio,b.cd_procedimento) cd_procedimento,
	b.ie_origem_proced,
	b.qt_procedimento,
	b.ie_via_acesso,
	b.dt_procedimento,
	b.nr_seq_proc_interno,
	b.ie_funcao_medico,
	coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'M', b.nr_sequencia)),0) vl_medico,
	a.cd_tipo_procedimento,
	coalesce(b.ie_proc_princ_atend,'N') ie_proc_princ,
	coalesce(b.nr_ato_ipasgo,0) nr_ato_ipasgo,
	coalesce(b.vl_medico,0) vl_ch_medico
from	procedimento a,
	procedimento_paciente b
where	b.nr_atendimento 	= nr_atendimento_w
and	b.nr_interno_conta	= nr_interno_conta_p
and	coalesce(b.cd_motivo_exc_conta::text, '') = ''
and	obter_classif_material_proced(null, b.cd_procedimento, b.ie_origem_proced) = 1
and	a.cd_procedimento	= b.cd_procedimento
and	a.ie_origem_proced	= b.ie_origem_proced
and	a.cd_tipo_procedimento in (80)
and	coalesce(b.ie_proc_princ_atend,'N') = 'S' 
and	cd_tipo_fatura_w <> 17
and	qt_ato_informado_w = 0

union all

/*Anderson 15/03/2011 - Gerar taxa de box hora ao invés de proc ou honorario quando tipo de fatura for 8 (box hora)*/

select	4,
	coalesce(b.cd_procedimento_convenio,b.cd_procedimento) cd_procedimento,
	b.ie_origem_proced,
	b.qt_procedimento,
	b.ie_via_acesso,
	b.dt_procedimento,
	b.nr_seq_proc_interno,
	b.ie_funcao_medico,
	coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'M', b.nr_sequencia)),0) vl_medico,
	a.cd_tipo_procedimento,
	coalesce(b.ie_proc_princ_atend,'N') ie_proc_princ,
	coalesce(b.nr_ato_ipasgo,0) nr_ato_ipasgo,
	coalesce(b.vl_medico,0) vl_ch_medico
from	procedimento a,
	procedimento_paciente b
where	b.nr_atendimento 	= nr_atendimento_w
and	b.nr_interno_conta	= nr_interno_conta_p
and	coalesce(b.cd_motivo_exc_conta::text, '') = ''
and	obter_classif_material_proced(null, b.cd_procedimento, b.ie_origem_proced) = 2
and	a.cd_procedimento	= b.cd_procedimento
and	a.ie_origem_proced	= b.ie_origem_proced
and	coalesce(b.ie_proc_princ_atend,'S') = 'S'
and	cd_tipo_fatura_w = 8
and	qt_ato_informado_w = 0

union all

/*Anderson 31/03/2011 - Gerar o proc princ independente se for taxa ou procedimento quando for 3 (Alto custo)*/

select	5,
	coalesce(b.cd_procedimento_convenio,b.cd_procedimento) cd_procedimento,
	b.ie_origem_proced,
	b.qt_procedimento,
	b.ie_via_acesso,
	b.dt_procedimento,
	b.nr_seq_proc_interno,
	b.ie_funcao_medico,
	coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'M', b.nr_sequencia)),0) vl_medico,
	a.cd_tipo_procedimento,
	coalesce(b.ie_proc_princ_atend,'N') ie_proc_princ,
	coalesce(b.nr_ato_ipasgo,0) nr_ato_ipasgo,
	coalesce(b.vl_medico,0) vl_ch_medico
from	procedimento a,
	procedimento_paciente b
where	b.nr_atendimento 	= nr_atendimento_w
and	b.nr_interno_conta	= nr_interno_conta_p
and	coalesce(b.cd_motivo_exc_conta::text, '') = ''
and	a.cd_procedimento	= b.cd_procedimento
and	a.ie_origem_proced	= b.ie_origem_proced
and	cd_tipo_fatura_w 	= 3
and	coalesce(b.ie_proc_princ_atend,'S') = 'S'
and	somente_numero(b.cd_procedimento_convenio) in (70025,70033)
and	qt_ato_informado_w = 0

union all

/*Geliard 24/10/2012 para Hemolabor - Agrupar os procedimentos e ordenar pelo código*/

select	6,
	coalesce(b.cd_procedimento_convenio,b.cd_procedimento) cd_procedimento,
	b.ie_origem_proced,
	sum(b.qt_procedimento) qt_procedimento,
	b.ie_via_acesso,
	min(b.dt_procedimento) dt_procedimento,
	b.nr_seq_proc_interno,
	b.ie_funcao_medico,
	coalesce(sum(b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'M', b.nr_sequencia)),0) vl_medico,
	a.cd_tipo_procedimento,
	CASE WHEN coalesce(b.cd_procedimento_convenio,b.cd_procedimento)=20010 THEN '0'  ELSE coalesce(b.ie_proc_princ_atend,'N') END  ie_proc_princ,
	coalesce(b.nr_ato_ipasgo,0) nr_ato_ipasgo,
	coalesce(b.vl_medico,0) vl_ch_medico
from	procedimento a,
	procedimento_paciente b
where	b.nr_atendimento 	= nr_atendimento_w
and	b.nr_interno_conta	= nr_interno_conta_p
and	coalesce(b.cd_motivo_exc_conta::text, '') = ''
and	obter_classif_material_proced(null, b.cd_procedimento, b.ie_origem_proced) = 1
and	a.cd_procedimento	= b.cd_procedimento
and	a.ie_origem_proced	= b.ie_origem_proced
and	coalesce(b.nr_seq_proc_pacote,0) <> b.nr_sequencia
and	b.ie_funcao_medico <> '12'
and	a.cd_tipo_procedimento not in (1,2,3,4,5,8,12,13,14,15,16,20,25,26,30,31,33,34,39,74,75,80,91,92,94,96,97,103)
and	somente_numero(b.cd_procedimento_convenio) not in (70025,70033)	--Estes são alto custo devem sair no union 5
and	obter_se_gera_ato_ipasgo(b.cd_procedimento,b.ie_origem_proced,cd_estabelecimento_w,cd_tipo_fatura_w,ie_tipo_atendimento_w,b.cd_setor_atendimento) = 'N'
and	coalesce(b.qt_procedimento,0) <> 0
and	cd_tipo_fatura_w = 4
and	qt_ato_informado_w = 0
group by	6,
	coalesce(b.cd_procedimento_convenio,b.cd_procedimento),
	b.ie_origem_proced,
	b.ie_via_acesso,
	b.nr_seq_proc_interno,
	b.ie_funcao_medico,
	a.cd_tipo_procedimento,
	CASE WHEN coalesce(b.cd_procedimento_convenio,b.cd_procedimento)=20010 THEN '0'  ELSE coalesce(b.ie_proc_princ_atend,'N') END ,
	coalesce(b.nr_ato_ipasgo,0),
	coalesce(b.vl_medico,0)

union all

select	7,
	coalesce(b.cd_procedimento_convenio,b.cd_procedimento) cd_procedimento,
	b.ie_origem_proced,
	b.qt_procedimento,
	b.ie_via_acesso,
	b.dt_procedimento,
	b.nr_seq_proc_interno,
	b.ie_funcao_medico,
	coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'M', b.nr_sequencia)),0) vl_medico,
	a.cd_tipo_procedimento,
	coalesce(b.ie_proc_princ_atend,'N') ie_proc_princ,
	coalesce(b.nr_ato_ipasgo,0) nr_ato_ipasgo,
	coalesce(b.vl_medico,0) vl_ch_medico
from	procedimento a,
	procedimento_paciente b
where	b.nr_atendimento 	= nr_atendimento_w
and	b.nr_interno_conta	= nr_interno_conta_p
and	coalesce(b.cd_motivo_exc_conta::text, '') = ''
and	obter_classif_material_proced(null, b.cd_procedimento, b.ie_origem_proced) = 1
and	a.cd_procedimento	= b.cd_procedimento
and	a.ie_origem_proced	= b.ie_origem_proced
and	coalesce(b.nr_seq_proc_pacote,0) <> b.nr_sequencia
and	obter_se_gera_ato_ipasgo(b.cd_procedimento,b.ie_origem_proced,cd_estabelecimento_w,cd_tipo_fatura_w,ie_tipo_atendimento_w,b.cd_setor_atendimento) = 'S'
and	coalesce(b.qt_procedimento,0) <> 0
and	qt_ato_informado_w = 0

union all

select	8,
	coalesce(b.cd_procedimento_convenio,b.cd_procedimento) cd_procedimento,
	b.ie_origem_proced,
	b.qt_procedimento,
	b.ie_via_acesso,
	b.dt_procedimento,
	b.nr_seq_proc_interno,
	b.ie_funcao_medico,
	coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'M', b.nr_sequencia)),0) vl_medico,
	a.cd_tipo_procedimento,
	coalesce(b.ie_proc_princ_atend,'N') ie_proc_princ,
	coalesce(b.nr_ato_ipasgo,0) nr_ato_ipasgo,
	coalesce(b.vl_medico,0) vl_ch_medico
from	procedimento a,
	procedimento_paciente b
where	b.nr_atendimento 	= nr_atendimento_w
and	b.nr_interno_conta	= nr_interno_conta_p
and	coalesce(b.cd_motivo_exc_conta::text, '') = ''
and	obter_classif_material_proced(null, b.cd_procedimento, b.ie_origem_proced) = 1
and	a.cd_procedimento	= b.cd_procedimento
and	a.ie_origem_proced	= b.ie_origem_proced
and	coalesce(b.nr_seq_proc_pacote,0) <> b.nr_sequencia
and	obter_se_gera_ato_ipasgo(b.cd_procedimento,b.ie_origem_proced,cd_estabelecimento_w,cd_tipo_fatura_w,ie_tipo_atendimento_w,b.cd_setor_atendimento) = 'S'
and	coalesce(b.qt_procedimento,0) <> 0
and	qt_ato_informado_w > 0
and	coalesce(b.nr_ato_ipasgo,0) > 0

union all

select	9,
	coalesce(b.cd_procedimento_convenio,b.cd_procedimento) cd_procedimento,
	b.ie_origem_proced,
	b.qt_procedimento,
	b.ie_via_acesso,
	b.dt_procedimento,
	b.nr_seq_proc_interno,
	b.ie_funcao_medico,
	coalesce((b.qt_procedimento * Obter_preco_proc_ipasgo_atend(b.nr_atendimento,b.dt_conta,b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno,b.ie_responsavel_credito,'M', b.nr_sequencia)),0) vl_medico,
	a.cd_tipo_procedimento,
	coalesce(b.ie_proc_princ_atend,'N') ie_proc_princ,
	coalesce(b.nr_ato_ipasgo,0) nr_ato_ipasgo,
	coalesce(b.vl_medico,0) vl_ch_medico
from	procedimento a,
	procedimento_paciente b
where	b.nr_atendimento 	= nr_atendimento_w
and	b.nr_interno_conta	= nr_interno_conta_p
and	coalesce(b.cd_motivo_exc_conta::text, '') = ''
and	obter_classif_material_proced(null, b.cd_procedimento, b.ie_origem_proced) = 1
and	a.cd_procedimento	= b.cd_procedimento
and	a.ie_origem_proced	= b.ie_origem_proced
and	coalesce(b.nr_seq_proc_pacote,0) <> b.nr_sequencia
and	a.cd_tipo_procedimento not in (1,2,3,4,5,12,13,14,15,16,20,25,26,30,31,34,39,74,75,80,91,92,94,96,97,115)
and	somente_numero(b.cd_procedimento_convenio) not in (70025,70033)	--Estes são alto custo devem sair no union 5
and	coalesce(b.qt_procedimento,0) <> 0
and	cd_tipo_fatura_w <> 4
and	qt_ato_informado_w = 0
order by	nr_ato_ipasgo,
	dt_procedimento,
	ie_proc_princ desc,	/*Foi ordenado desta maneira para que o procedimento principal fosse gerado no arquivo*/
	vl_ch_medico desc,
	cd_procedimento,	/*como via única de acesso e os seguintes como mesma via do principal. OS597773 afreinert 27/05/2013*/
	vl_medico desc LIMIT 1;


BEGIN

ie_considera_proc_interno_w := obter_param_usuario(999, 59, obter_perfil_Ativo, nm_usuario_p, Wheb_Usuario_pck.get_cd_estabelecimento, ie_considera_proc_interno_w);

begin
select	a.nr_atendimento,
	a.cd_convenio_parametro,
	a.cd_estabelecimento,
	b.ie_tipo_atendimento
into STRICT	nr_atendimento_w,
	cd_convenio_parametro_w,
	cd_estabelecimento_w,
	ie_tipo_atendimento_w
from	conta_paciente a,
	atendimento_paciente b
where	a.nr_atendimento = b.nr_atendimento
and	a.nr_interno_conta = nr_interno_conta_p;
exception
when others then
	nr_atendimento_w		:= 0;
	cd_convenio_parametro_w		:= 0;
	cd_estabelecimento_w		:= 0;
	ie_tipo_atendimento_w		:= 0;
end;

begin
select	cd_cgc
into STRICT	cd_cnpj_w
from	convenio
where	cd_convenio = cd_convenio_parametro_w;
exception
when others then
	cd_cnpj_w := '0';
end;

begin
select	cd_tipo_fatura
into STRICT	cd_tipo_fatura_w
from	fatur_tipo_fatura
where	nr_sequencia = nr_seq_tipo_fatura_p;
exception
when others then
	cd_tipo_fatura_w := 0;
end;

begin
select	count(*)
into STRICT	qt_ato_informado_w
from	procedimento_paciente
where	nr_atendimento = nr_atendimento_w
and	nr_interno_conta = nr_interno_conta_p
and	coalesce(nr_ato_ipasgo,0) > 0;
exception
when others then
	qt_ato_informado_w := 0;
end;

open C01;
loop
fetch C01 into	
	ie_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	qt_procedimento_w,
	ie_via_acesso_w,
	dt_procedimento_w,
	nr_seq_proc_interno_w,
	ie_funcao_medico_w,
	vl_medico_w,
	cd_tipo_procedimento_w,
	ie_proc_princ_atend_w,
	nr_ato_ipasgo_w,
	vl_ch_medico_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin	
	
	dt_exec_proc_conta_w := dt_procedimento_w;
	
	if (coalesce(ie_considera_proc_interno_w,'S') = 'N') then
		nr_seq_proc_interno_w := 0;
	end if;
	
	if (ie_w = 2) then
		select	max(b.nr_sequencia)
		into STRICT	nr_seq_proc_hemot_w
		from	procedimento a,
			procedimento_paciente b
		where	b.nr_atendimento 	= nr_atendimento_w
		and	b.nr_interno_conta	= nr_interno_conta_p
		and	coalesce(b.cd_motivo_exc_conta::text, '') = ''
		and	obter_classif_material_proced(null, b.cd_procedimento, b.ie_origem_proced) = 1
		and	a.cd_procedimento	= b.cd_procedimento
		and	a.ie_origem_proced	= b.ie_origem_proced
		and	somente_numero(coalesce(b.cd_procedimento_convenio,b.cd_procedimento)) = 20010
		and	a.cd_tipo_procedimento in (80);

		if (coalesce(nr_seq_proc_hemot_w,0) > 0) then
			select	dt_procedimento,
				ie_funcao_medico,
				vl_medico
			into STRICT	dt_procedimento_w,
				ie_funcao_medico_w,
				vl_medico_w
			from	procedimento_paciente
			where	nr_sequencia = nr_seq_proc_hemot_w;
		else
			select	max(b.nr_sequencia)
			into STRICT	nr_seq_proc_hemot_w
			from	procedimento_paciente b
			where	b.nr_atendimento 	= nr_atendimento_w
			and	b.nr_interno_conta	= nr_interno_conta_p
			and	coalesce(b.cd_motivo_exc_conta::text, '') = ''
			and	obter_classif_material_proced(null, b.cd_procedimento, b.ie_origem_proced) = 1
			and	coalesce(b.ie_proc_princ_atend,'S') = 'S';
			
			if (coalesce(nr_seq_proc_hemot_w,0) > 0) then
				select	dt_procedimento,
					ie_funcao_medico,
					vl_medico
				into STRICT	dt_procedimento_w,
					ie_funcao_medico_w,
					vl_medico_w
				from	procedimento_paciente
				where	nr_sequencia = nr_seq_proc_hemot_w;
			end if;
		end if;
	end if;
	
	begin
	select	coalesce(max(cd_externo), ie_funcao_medico_w)
	into STRICT	ie_funcao_medico_w
	from	conversao_meio_externo
	where	cd_cgc = cd_cnpj_w
	and	upper(nm_tabela) 	= 'W_IPASGO_DADOS_PROF_TRAT'
	and	upper(nm_atributo)	= 'CD_FUNCAO'
	and	cd_interno	= ie_funcao_medico_w;
	exception
	when others then
		ie_funcao_medico_w := 0;
	end;

	if (cd_tipo_fatura_w = 3) then	/*Alteração para o Hemolabor 416225 - gerar mesmo ato para gerar mesma via de acesso, então tem que ser a mesma data*/
		dt_procedimento_w := dt_mesano_referencia_p;
	end if;
		
	if (coalesce(ie_funcao_medico_w,'0') <> '8') then
		begin
		nr_seq_proc_w 	:= nr_seq_proc_w + 1;
		
		if (coalesce(nr_ato_ipasgo_w,0) = 0) then
			begin
			if (cd_tipo_fatura_w <> 4) and
				((dt_procedimento_w <> dt_procedimento_ww) or (coalesce(dt_procedimento_ww::text, '') = '')) then
				qt_ato_w	:= qt_ato_w + 1;
				nr_seq_proc_w	:= 0;
				
			else
				begin		
				if	((cd_tipo_procedimento_ww <> cd_tipo_procedimento_w) or (coalesce(cd_tipo_procedimento_ww::text, '') = '')) then
					qt_ato_w	:= qt_ato_w + 1;
					nr_seq_proc_w	:= 0;
					
				end if;			
				end;
			end if;			
			end;
		end if;
		
		if (qt_ato_ww <> qt_ato_w) or	/*Alterado de and para OR, para que quando altere de ato, a primeira linha sempre venha vazio - Encore OS370027*/
			(qt_ato_ww = 0) then
			ie_via_acesso_w := '';
			
			if (coalesce(nr_ato_ipasgo_w,0) <> 0) then
				nr_seq_proc_w	:= 0;
				
			end if;
		end if;		
		
		/*Buscar as conversões meio externo - procedimento ou proc interno*/

		begin
		select	coalesce(max(cd_proc_convenio), cd_procedimento_w)
		into STRICT	cd_procedimento_w
		from	conversao_proc_convenio
		where	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced		= ie_origem_proced_w
		and	cd_convenio		= cd_convenio_parametro_w
		and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w) = ie_tipo_atendimento_w
		and	coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w;

		if (coalesce(nr_seq_proc_interno_w,0) > 0) then
			/*Buscar as conversões meio externo - proc interno*/

			select	coalesce(max(cd_proc_convenio), nr_seq_proc_interno_w)
			into STRICT	cd_procedimento_w
			from	conversao_proc_convenio
			where	nr_seq_proc_interno	= nr_seq_proc_interno_w
			and	cd_convenio		= cd_convenio_parametro_w
			and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w) = ie_tipo_atendimento_w
			and	coalesce(cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w;
		end if;
		exception
		when others then
			cd_procedimento_w := coalesce(cd_procedimento_w,0);
		end;
		
		qt_linha_arq_p := qt_linha_arq_p + 1;
		
		if (nr_ato_ipasgo_w > 0) then
			qt_ato_w := nr_ato_ipasgo_w;
			
			if (qt_ato_ww <> qt_ato_w) or	/*Alterado de and para OR, para que quando altere de ato, a primeira linha sempre venha vazio - Encore OS370027*/
				(qt_ato_ww = 0) then
				ie_via_acesso_w := '';
				nr_seq_proc_w	:= 0;
				
			end if;
		end if;
		
		select	CASE WHEN ie_via_acesso_w='U' THEN 'M' WHEN ie_via_acesso_w='B' THEN 'M'  ELSE ie_via_acesso_w END
		into STRICT	ds_via_acesso_w
		;
		
		insert into w_ipasgo_dados_proc_trat(
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_linha,
			tp_registro,
			nr_linha_atend,
			nr_linha_ato,
			nr_linha_proc,
			cd_procedimento,
			ie_origem_proced,
			qt_procedimento,
			ie_via_acesso,
			dt_mesano_referencia,
			nr_interno_conta,
			ds_linha,
			nr_seq_tipo_fatura,
			dt_procedimento,
			vl_ch_medico,
			dt_exec_proc_conta)
		values (	nextval('w_ipasgo_dados_proc_trat_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			qt_linha_arq_p,
			6,
			qt_linha_atend_p,
			qt_ato_w,
			nr_seq_proc_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			qt_procedimento_w,
			ie_via_acesso_w,
			dt_mesano_referencia_p,
			nr_interno_conta_p,
			qt_linha_arq_p || '|' ||
			'6'|| '|' ||
			qt_linha_atend_p|| '|' ||
			qt_ato_w|| '|' ||
			nr_seq_proc_w|| '|' ||
			cd_procedimento_w || '|' ||
			qt_procedimento_w || '|' ||
			ds_via_acesso_w || '|' ||
			'|||||',
			nr_seq_tipo_fatura_p,
			dt_procedimento_w,
			vl_ch_medico_w,
			dt_exec_proc_conta_w);
		end;
	end if;
	dt_procedimento_ww 	:= dt_procedimento_w;
	cd_procedimento_ww	:= cd_procedimento_w;
	cd_tipo_procedimento_ww	:= cd_tipo_procedimento_w;
	qt_ato_ww		:= qt_ato_w;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_ipasgo_dados_proc_trat ( nr_interno_conta_p bigint, dt_mesano_referencia_p timestamp, nm_usuario_p text, nr_seq_tipo_fatura_p bigint, qt_linha_arq_p INOUT bigint, qt_linha_atend_p INOUT bigint) FROM PUBLIC;

