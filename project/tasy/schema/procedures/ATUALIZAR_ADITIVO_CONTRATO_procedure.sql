-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_aditivo_contrato ( nr_sequencia_p bigint, ie_regra_pagto_p text, ie_documentacao_p text, ie_regra_nf_p text, ie_historico_p text, ie_etapas_p text, ie_anexos_p text, nm_usuario_p text) AS $body$
DECLARE


qt_existe_w			integer;
nr_sequencia_w			bigint;
nr_sequencia_ww			bigint;
nr_sequencia_www			bigint;
nr_seq_contrato_atual_w		bigint;
ds_objeto_contrato_w		varchar(1000);
ie_renovacao_w			varchar(1);
ie_situacao_w			varchar(1);
dt_fim_w				timestamp;
cd_pessoa_resp_w			bigint;
qt_dias_rescisao_w			integer;
ie_prazo_contrato_w		varchar(1);
vl_total_contrato_w			double precision;
ds_atribuicao_w			varchar(4000);
dt_revisao_w			timestamp;
ie_avisa_vencimento_w		varchar(1);
qt_dias_aviso_venc_w		integer;
ds_motivo_rescisao_w		varchar(255);
nr_seq_forma_rescisao_w		bigint;
vl_multa_contratual_w		double precision;
cd_condicao_pagamento_w		bigint;
ie_avisa_venc_setor_w		varchar(1);
pr_multa_contratual_w		double precision;
ds_observacao_w			varchar(255);
nr_seq_conta_financ_w		bigint;
vl_pagto_w			double precision;
dt_inicio_vigencia_w		timestamp;
dt_fim_vigencia_w			timestamp;
nr_seq_regra_nf_ww		bigint;
ie_copiar_regra_nf_w		varchar(1);
ie_atualizar_data_w			varchar(1);
cd_estabelecimento_w		smallint;
nr_seq_indice_reajuste_w		bigint;
qt_dias_reajuste_w			bigint;
nr_seq_contrato_gestao_w		bigint;
ie_estagio_w			varchar(15);
cd_tributo_www			bigint;
vl_tributo_www			double precision;
pr_tributo_www			double precision;
cd_beneficiario_www		varchar(14);
cd_cond_pagto_www		bigint;
cd_conta_financ_www		bigint;
nr_seq_trans_reg_www		bigint;
nr_seq_trans_baixa_www		bigint;
ie_corpo_item_www		varchar(1);
ie_regra_trib_www		varchar(1);
cd_darf_www			varchar(10);
qt_registros_w			bigint;
qt_dias_revisao_w		contrato.qt_dias_revisao%type;
dt_inicio_w			timestamp;
cd_estab_regra_www		contrato_regra_nf_estab.cd_estab_regra%type;

c01 CURSOR FOR
SELECT	nr_sequencia nr_seq_regra_nf,
	cd_material,
	cd_conta_contabil,
	cd_centro_custo,
	nr_seq_crit_rateio,
	ds_complemento,
	ds_observacao,
	nr_seq_conta_financ,
	vl_pagto,
	dt_inicio_vigencia,
	dt_fim_vigencia,
	pr_variacao_valor,
	qt_conversao_nf,
	ie_conversao_nf,
	nr_seq_proj_rec,
	ie_preco,
	ie_quantidade,
	vl_desconto,
	pr_desconto,
	cd_estab_regra
from	contrato_regra_nf
where	nr_seq_contrato = nr_sequencia_p;

vet01	C01%RowType;


BEGIN

/*Se ainda nao existir, Cria um novo contrato como sendo o Original*/

select	coalesce(max(nr_seq_contrato_atual), 0),
	max(cd_estabelecimento)
into STRICT	nr_seq_contrato_atual_w,
	cd_estabelecimento_w
from	contrato
where	nr_sequencia = nr_sequencia_p;

ie_copiar_regra_nf_w	:= coalesce(obter_valor_param_usuario(1200, 40, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N');
ie_atualizar_data_w	:= coalesce(obter_valor_param_usuario(1200, 114, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N');

select	count(1)
into STRICT	qt_existe_w
from	contrato
where	nr_seq_contrato_atual = nr_seq_contrato_atual_w
and	ie_classificacao = 'OR';

if (qt_existe_w = 0) then

	insert into contrato(
		nr_sequencia,
		cd_cgc_contratado,
		nr_seq_tipo_contrato,
		ds_objeto_contrato,
		ie_renovacao,	
		dt_atualizacao,
		nm_usuario,	
		ie_situacao,
		dt_inicio,	
		dt_fim,
		qt_dias_rescisao,
		cd_contrato,
		ie_prazo_contrato,	
		nm_contato,
		cd_pessoa_resp,		
		vl_total_contrato,
		ds_atribuicao,		
		ie_pagar_receber,
		cd_pessoa_negoc,	
		cd_pessoa_contratada,
		dt_revisao,		
		cd_estabelecimento,
		ie_avisa_vencimento,	
		qt_dias_aviso_venc,
		cd_cargo,		
		ds_motivo_rescisao,
		nr_seq_forma_rescisao,	
		vl_multa_contratual,
		cd_setor,		
		cd_condicao_pagamento,
		ie_avisa_venc_setor,	
		pr_multa_contratual,
		nr_seq_subtipo_contrato,
		ie_classificacao,
		nr_seq_aditivo,		
		nr_seq_contrato_atual,
		dt_atualizacao_nrec,	
		nm_usuario_nrec,
		ie_periodo_nf,		
		qt_maximo_nf_periodo,
		qt_dias_revisao,	
		ie_estagio,
		nr_seq_indice_reajuste,	
		qt_dias_reajuste,
		nr_seq_contrato_gestao,
		qt_dias_interv_aviso,
		qt_dias_periodo,
		telefone_contato,
		vl_custas_contrato,
		vl_fatur_minimo,
		vl_negociado,
		pr_custas_contrato,
		nr_seq_area,
		nr_cpf_contato,
		nm_usuario_encer,
		ie_somente_oc_pagto,
		ie_sla,
		ie_finalizado,
		ie_enviar_email_oc,
		ie_email_origem,
		ie_avisa_reajuste,
		email_contato,
		dt_publicacao,
		dt_liberacao,
		nm_usuario_lib,
		dt_aprovacao,
		nr_seq_aprovacao,
		dt_desdobr_aprov,
		dt_reprovacao,
		ie_motivo_reprovacao,
		ds_justificativa_reprov,
		nm_usuario_aprov,
		dt_encerramento,
		dt_assinatura,
		ds_titulo_contrato,
		ds_observacao,
		cd_pessoa_contratante,
		cd_paciente,
		cd_operacao_nf,
		cd_natureza_operacao,
		cd_moeda_estrangeira,
		cd_medico_resp,
		cd_cnpj_contratante,
		cd_comprador)
	SELECT	nextval('contrato_seq'),	
		cd_cgc_contratado,
		nr_seq_tipo_contrato,
		ds_objeto_contrato,
		ie_renovacao,		
		clock_timestamp(),
		nm_usuario_p,		
		ie_situacao,
		dt_inicio,		
		dt_fim,
		qt_dias_rescisao,	
		cd_contrato,
		ie_prazo_contrato,	
		nm_contato,
		cd_pessoa_resp,		
		vl_total_contrato,
		ds_atribuicao,		
		ie_pagar_receber,
		cd_pessoa_negoc,	
		cd_pessoa_contratada,
		dt_revisao,		
		cd_estabelecimento,
		ie_avisa_vencimento,	
		qt_dias_aviso_venc,
		cd_cargo,		
		ds_motivo_rescisao,
		nr_seq_forma_rescisao,	
		vl_multa_contratual,
		cd_setor,		
		cd_condicao_pagamento,
		ie_avisa_venc_setor,	
		pr_multa_contratual,
		nr_seq_subtipo_contrato,
		'OR',
		null,			
		nr_seq_contrato_atual_w,
		dt_atualizacao_nrec,	
		nm_usuario_nrec,
		coalesce(ie_periodo_nf,'N'),		
		qt_maximo_nf_periodo,
		qt_dias_revisao,		
		ie_estagio,
		nr_seq_indice_reajuste,		
		qt_dias_reajuste,
		nr_seq_contrato_gestao,
		qt_dias_interv_aviso,
		qt_dias_periodo,
		telefone_contato,
		vl_custas_contrato,
		vl_fatur_minimo,
		vl_negociado,
		pr_custas_contrato,
		nr_seq_area,
		nr_cpf_contato,
		nm_usuario_encer,
		ie_somente_oc_pagto,
		ie_sla,
		ie_finalizado,
		ie_enviar_email_oc,
		ie_email_origem,
		ie_avisa_reajuste,
		email_contato,
		dt_publicacao,
		dt_liberacao,
		nm_usuario_lib,
		dt_aprovacao,
		nr_seq_aprovacao,
		dt_desdobr_aprov,
		dt_reprovacao,
		ie_motivo_reprovacao,
		ds_justificativa_reprov,
		nm_usuario_aprov,
		dt_encerramento,
		dt_assinatura,
		ds_titulo_contrato,
		ds_observacao,
		cd_pessoa_contratante,
		cd_paciente,
		cd_operacao_nf,
		cd_natureza_operacao,
		cd_moeda_estrangeira,
		cd_medico_resp,
		cd_cnpj_contratante,
		cd_comprador
	from	contrato
	where	nr_sequencia = nr_seq_contrato_atual_w;
end if;



/*Identifica que este aditivo ja foi atualizado*/

update	contrato
set	dt_atualizacao_aditivo = clock_timestamp()
where	nr_sequencia = nr_sequencia_p;



/*pego as informacoes do aditivo para depois atualizar no atual*/

select	ds_objeto_contrato,
	ie_renovacao,
	ie_situacao,
	dt_inicio,
	dt_fim,
	qt_dias_rescisao,
	qt_dias_revisao,
	ie_prazo_contrato,
	vl_total_contrato,
	cd_pessoa_resp,
	ds_atribuicao,
	dt_revisao,
	ie_avisa_vencimento,
	qt_dias_aviso_venc,
	ds_motivo_rescisao,
	nr_seq_forma_rescisao,
	vl_multa_contratual,
	cd_condicao_pagamento,
	ie_avisa_venc_setor,
	pr_multa_contratual,
	ie_estagio,
	nr_seq_indice_reajuste,
	qt_dias_reajuste,
	nr_seq_contrato_gestao
into STRICT	ds_objeto_contrato_w,
	ie_renovacao_w,
	ie_situacao_w,
	dt_inicio_w,
	dt_fim_w,
	qt_dias_rescisao_w,
	qt_dias_revisao_w,
	ie_prazo_contrato_w,
	vl_total_contrato_w,
	cd_pessoa_resp_w,
	ds_atribuicao_w,
	dt_revisao_w,
	ie_avisa_vencimento_w,
	qt_dias_aviso_venc_w,
	ds_motivo_rescisao_w,
	nr_seq_forma_rescisao_w,
	vl_multa_contratual_w,
	cd_condicao_pagamento_w,
	ie_avisa_venc_setor_w,
	pr_multa_contratual_w,
	ie_estagio_w,
	nr_seq_indice_reajuste_w,
	qt_dias_reajuste_w,
	nr_seq_contrato_gestao_w
from	contrato
where	nr_sequencia = nr_sequencia_p;

/*Atualizo as informacoes no contrato atual*/

update	contrato
set	ie_renovacao		= ie_renovacao_w,
	ie_situacao 		= ie_situacao_w,	
	qt_dias_rescisao 	= qt_dias_rescisao_w,
	ie_prazo_contrato 	= ie_prazo_contrato_w,
	vl_total_contrato 	= coalesce(vl_total_contrato,0) + coalesce(vl_total_contrato_w,0),
	ds_atribuicao 		= ds_atribuicao_w,	
	ie_avisa_vencimento 	= ie_avisa_vencimento_w,
	qt_dias_aviso_venc 	= qt_dias_aviso_venc_w,
	ds_motivo_rescisao 	= ds_motivo_rescisao_w,
	nr_seq_forma_rescisao 	= nr_seq_forma_rescisao_w,
	vl_multa_contratual 	= vl_multa_contratual_w,
	cd_condicao_pagamento 	= cd_condicao_pagamento_w,
	ie_avisa_venc_setor 	= ie_avisa_venc_setor_w,
	pr_multa_contratual 	= pr_multa_contratual_w,
	cd_pessoa_resp       	= cd_pessoa_resp_w,
	ie_estagio		= ie_estagio_w,
	nr_seq_indice_reajuste	= nr_seq_indice_reajuste_w,
	qt_dias_reajuste	= qt_dias_reajuste_w,
	nr_seq_contrato_gestao	= nr_seq_contrato_gestao_w,
	qt_dias_revisao		= qt_dias_revisao_w
where	nr_sequencia 		= nr_seq_contrato_atual_w;

select	round(obter_dias_entre_datas(dt_inicio, dt_fim_w))
into STRICT	qt_dias_rescisao_w
from	contrato
where	nr_sequencia = nr_seq_contrato_atual_w;

if (ie_atualizar_data_w = 'N') then

	update	contrato
	set	dt_inicio		= dt_inicio_w,
		dt_revisao 		= dt_revisao_w,
		dt_fim 			= dt_fim_w,
		qt_dias_rescisao	= qt_dias_rescisao_w,		
		dt_atualizacao		= clock_timestamp(),		
		nm_usuario		= nm_usuario_p
	where	nr_sequencia 		= nr_seq_contrato_atual_w;
	
	
end if;

if (ie_atualizar_data_w = 'F') then
		
	update	contrato
	set	dt_fim = dt_fim_w,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p,
		qt_dias_rescisao	= qt_dias_rescisao_w
	where	nr_sequencia = nr_seq_contrato_atual_w;
end if;
	
if (ie_atualizar_data_w = 'R') then
	
	update	contrato_regra_nf
	set	dt_atualizacao		= clock_timestamp(),
		nm_usuario 		= nm_usuario_p,
		dt_inicio_vigencia	= coalesce(dt_inicio_vigencia,clock_timestamp()),
		dt_fim_vigencia		= dt_fim_w
	where (nr_seq_contrato = nr_seq_contrato_atual_w)
	and	((coalesce(dt_fim_vigencia::text, '') = '') or (dt_fim_vigencia >= clock_timestamp()));	

end if;

if (ie_atualizar_data_w = 'S') then

	update	contrato
	set	dt_inicio		= dt_inicio_w,
		dt_revisao 		= dt_revisao_w,
		dt_fim 			= dt_fim_w,
		qt_dias_rescisao	= qt_dias_rescisao_w,		
		dt_atualizacao		= clock_timestamp(),		
		nm_usuario		= nm_usuario_p
	where	nr_sequencia 		= nr_seq_contrato_atual_w;

	update	contrato_regra_nf
	set	dt_atualizacao		= clock_timestamp(),
		nm_usuario 		= nm_usuario_p,
		dt_inicio_vigencia	= coalesce(dt_inicio_vigencia,clock_timestamp()),
		dt_fim_vigencia		= dt_fim_w
	where (nr_seq_contrato = nr_seq_contrato_atual_w)
	and	((coalesce(dt_fim_vigencia::text, '') = '') or (dt_fim_vigencia >= clock_timestamp()));		
	
end if;	


if (ie_copiar_regra_nf_w <> 'N') then

	open C01;
	loop
	fetch C01 into	
		vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		select nextval('contrato_regra_nf_seq')
		into STRICT nr_seq_regra_nf_ww
		;

		if (ie_copiar_regra_nf_w = 'S') then
			begin
			insert into contrato_regra_nf(
				nr_sequencia,
				nr_seq_contrato,
				dt_atualizacao,
				nm_usuario,
				cd_material,
				cd_conta_contabil,
				cd_centro_custo,
				nr_seq_crit_rateio,
				ds_complemento,
				ds_observacao,
				nr_seq_conta_financ,
				vl_pagto,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_inicio_vigencia,
				dt_fim_vigencia,
				pr_variacao_valor,
				qt_conversao_nf,
				ie_conversao_nf,
				nr_seq_proj_rec,
				ie_preco,
				ie_quantidade,
				ie_gera_sc_automatico,
				vl_desconto,
				pr_desconto,
				cd_estab_regra,
				ie_libera_solic)
			values ( nr_seq_regra_nf_ww,
				nr_seq_contrato_atual_w,
				clock_timestamp(),
				nm_usuario_p,
				vet01.cd_material,
				vet01.cd_conta_contabil,
				vet01.cd_centro_custo,
				vet01.nr_seq_crit_rateio,
				vet01.ds_complemento,
				vet01.ds_observacao,
				vet01.nr_seq_conta_financ,
				vet01.vl_pagto,
				clock_timestamp(),
				nm_usuario_p,
				vet01.dt_inicio_vigencia,
				vet01.dt_fim_vigencia,
				vet01.pr_variacao_valor,
				vet01.qt_conversao_nf,
				vet01.ie_conversao_nf,
				vet01.nr_seq_proj_rec,
				vet01.ie_preco,
				vet01.ie_quantidade,
				'N',
				vet01.vl_desconto,
				vet01.pr_desconto,
				vet01.cd_estab_regra,
				'S');

			insert into contrato_regra_pagto_trib(
				nr_sequencia,
				nr_seq_regra_nf,
				cd_tributo,
				dt_atualizacao,
				nm_usuario,
				vl_tributo,
				pr_tributo,
				cd_beneficiario,
				cd_cond_pagto,
				cd_conta_financ,
				nr_seq_trans_reg,
				nr_seq_trans_baixa,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_corpo_item,
				ie_regra_trib,
				cd_darf)
			SELECT	nextval('contrato_regra_pagto_trib_seq'),
				nr_seq_regra_nf_ww,
				cd_tributo,
				clock_timestamp(),
				nm_usuario_p,
				vl_tributo,
				pr_tributo,
				cd_beneficiario,
				cd_cond_pagto,
				cd_conta_financ,
				nr_seq_trans_reg,
				nr_seq_trans_baixa,
				clock_timestamp(),
				nm_usuario_p,
				ie_corpo_item,
				ie_regra_trib,
				cd_darf
			from	contrato_regra_pagto_trib
			where	nr_seq_regra_nf = vet01.nr_seq_regra_nf;
			
			if (vet01.nr_seq_regra_nf IS NOT NULL AND vet01.nr_seq_regra_nf::text <> '') and (coalesce(vet01.cd_estab_regra,0) > 0) then
				insert into contrato_regra_nf_estab(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_regra_nf,
					cd_estab_regra)
				SELECT	nextval('contrato_regra_nf_estab_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_regra_nf_ww,
					cd_estab_regra
				from	contrato_regra_nf_estab
				where	nr_seq_regra_nf = vet01.nr_seq_regra_nf;
			end if;	
			end;
		elsif (ie_copiar_regra_nf_w = 'A') then
			begin
			
			qt_registros_w := 0;
			
			select	coalesce(count(1),0)
			into STRICT	qt_registros_w
			from	contrato_regra_nf
			where	cd_material = vet01.cd_material
			and	nr_seq_contrato = nr_seq_contrato_atual_w
			and (coalesce(dt_fim_vigencia::text, '') = '' or
				dt_fim_vigencia >= clock_timestamp());

			if (qt_registros_w > 0) then
				update	contrato_regra_nf
				set	dt_atualizacao		= clock_timestamp(),
					nm_usuario 		= nm_usuario_p,
					cd_conta_contabil	= vet01.cd_conta_contabil,
					cd_centro_custo 	= vet01.cd_centro_custo,
					nr_seq_crit_rateio	= vet01.nr_seq_crit_rateio,
					ds_complemento		= vet01.ds_complemento,
					ds_observacao		= vet01.ds_observacao,
					nr_seq_conta_financ	= vet01.nr_seq_conta_financ,
					vl_pagto		= vet01.vl_pagto,
					dt_atualizacao_nrec	= clock_timestamp(),
					nm_usuario_nrec		= nm_usuario_p,
					dt_inicio_vigencia	= vet01.dt_inicio_vigencia,
					dt_fim_vigencia		= vet01.dt_fim_vigencia,
					pr_variacao_valor	= vet01.pr_variacao_valor,
					qt_conversao_nf		= vet01.qt_conversao_nf,
					ie_conversao_nf		= vet01.ie_conversao_nf,
					nr_seq_proj_rec		= vet01.nr_seq_proj_rec,
					ie_preco		= vet01.ie_preco,
					ie_quantidade		= vet01.ie_quantidade,
					vl_desconto		= vet01.vl_desconto,
					pr_desconto		= vet01.pr_desconto,
					cd_estab_regra		= vet01.cd_estab_regra
				where (cd_material = vet01.cd_material)
				and (nr_seq_contrato = nr_seq_contrato_atual_w)
				and	((coalesce(dt_fim_vigencia::text, '') = '') or (dt_fim_vigencia >= clock_timestamp()));
			end if;
			
			select	coalesce(count(1),0)
			into STRICT	qt_registros_w
			from	contrato_regra_pagto_trib
			where	nr_seq_regra_nf = vet01.nr_seq_regra_nf;

			if (qt_registros_w > 0) then

				select	cd_tributo,
					vl_tributo,
					pr_tributo,
					cd_beneficiario,
					cd_cond_pagto,
					cd_conta_financ,
					nr_seq_trans_reg,
					nr_seq_trans_baixa,
					ie_corpo_item,
					ie_regra_trib,
					cd_darf
				into STRICT	cd_tributo_www,
					vl_tributo_www,
					pr_tributo_www,
					cd_beneficiario_www,
					cd_cond_pagto_www,
					cd_conta_financ_www,
					nr_seq_trans_reg_www,
					nr_seq_trans_baixa_www,
					ie_corpo_item_www,
					ie_regra_trib_www,
					cd_darf_www
				from	contrato_regra_pagto_trib
				where	nr_seq_regra_nf = vet01.nr_seq_regra_nf;

				update	contrato_regra_pagto_trib
				set	dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p,
					vl_tributo		= vl_tributo_www,
					pr_tributo		= pr_tributo_www,
					cd_beneficiario		= cd_beneficiario_www,
					cd_cond_pagto		= cd_cond_pagto_www,
					cd_conta_financ		= cd_conta_financ_www,
					nr_seq_trans_reg	= nr_seq_trans_reg_www,
					nr_seq_trans_baixa	= nr_seq_trans_baixa_www,
					dt_atualizacao_nrec	= clock_timestamp(),
					nm_usuario_nrec		= nm_usuario_p,
					ie_corpo_item		= ie_corpo_item_www,
					ie_regra_trib		= ie_regra_trib_www,
					cd_darf			= cd_darf_www
				where	nr_seq_regra_nf = vet01.nr_seq_regra_nf
				and	cd_tributo = cd_tributo_www;
			end if;
			
			select	count(1)
			into STRICT	qt_registros_w
			from	contrato_regra_nf_estab
			where	nr_seq_regra_nf = vet01.nr_seq_regra_nf;

			if (coalesce(qt_registros_w,0) > 0) then
				select	max(cd_estab_regra)
				into STRICT	cd_estab_regra_www
				from	contrato_regra_nf_estab
				where	nr_seq_regra_nf		= vet01.nr_seq_regra_nf;
			
				update	contrato_regra_nf_estab
				set	dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p,
					dt_atualizacao_nrec	= clock_timestamp(),
					nm_usuario_nrec		= nm_usuario_p,
					cd_estab_regra		= cd_estab_regra_www
				where	nr_seq_regra_nf		= vet01.nr_seq_regra_nf
				and	cd_estab_regra		= cd_estab_regra_www;
			end if;
			
			end;
		end if;
		
		end;
	end loop;
	close C01;

end if;

/*Cria Estabelecimentos Adicionais*/
			
insert into contrato_estab_adic(
	vl_contrato_gestao,
	ds_contato,
	nm_usuario_nrec, 	
	dt_atualizacao_nrec, 
	ie_gerar_nf, 		
	nm_usuario, 
	ie_enviar_email_oc,	
	cd_estab_adic, 
	qt_dias_entrega, 	
	ds_email, 
	nr_seq_contrato_gestao,	
	nr_sequencia, 
	dt_atualizacao, 	
	cd_pessoa_resp, 
	nr_seq_contrato)
SELECT 	vl_contrato_gestao, 	
	ds_contato, 
	nm_usuario_p, 		
	clock_timestamp(), 
	ie_gerar_nf, 		
	nm_usuario_p, 
	ie_enviar_email_oc,	
	cd_estab_adic, 
	qt_dias_entrega, 	
	ds_email, 
	nr_seq_contrato_gestao, 
	nextval('contrato_estab_adic_seq'), 
	clock_timestamp(), 		
	cd_pessoa_resp, 
	nr_seq_contrato_atual_w	
from contrato_estab_adic
where nr_seq_contrato = nr_sequencia_p 
and cd_estab_adic not in (
	SELECT c.cd_estab_adic 
	from contrato_estab_adic c
	where c.nr_seq_contrato = nr_seq_contrato_atual_w);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_aditivo_contrato ( nr_sequencia_p bigint, ie_regra_pagto_p text, ie_documentacao_p text, ie_regra_nf_p text, ie_historico_p text, ie_etapas_p text, ie_anexos_p text, nm_usuario_p text) FROM PUBLIC;

