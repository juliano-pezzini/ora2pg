-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_tributos_fornecedor_item ( nr_sequencia_p bigint, nr_item_nf_p bigint, cd_tributo_p bigint, ie_atualiza_venc_p text, dt_vigencia_p timestamp, nm_usuario_p text, ie_previa_p text default 'N', ie_deletar_p text default null) AS $body$
DECLARE


/*Dados Cursor C01*/

ie_ordem_w			varchar(1);
cd_tributo_w			bigint;
ie_tipo_tributo_w		varchar(15);
ie_apuracao_piso_w		varchar(3);
ie_corpo_item_w			varchar(5);
ie_soma_diminui_w		varchar(5);
ie_cnpj_w			varchar(20);
ie_restringe_estab_w		varchar(255);

/*Dados Cursor C02*/

nr_item_nf_w			bigint;
vl_liquido_w			double precision;

/*Dados Query 01*/

cd_estabelecimento_w		integer;
cd_cgc_w			varchar(14);
cd_cgc_emitente_w		varchar(14);
CD_pessoa_fisica_w		varchar(10);
dt_emissao_w			timestamp;
cd_condicao_pagamento_w		bigint;
cd_cnpj_raiz_w			varchar(14);
cd_cnpj_emitente_raiz_w		varchar(14);
cd_natureza_operacao_w		bigint;
cd_tipo_servico_w		varchar(100);
cd_operacao_nf_w		smallint;
nr_ccm_w			bigint;
ie_forma_pagamento_w		smallint;
ie_tipo_tributacao_w		varchar(255);
nr_contrato_w			bigint;
nr_nota_fiscal_w		varchar(255);
cd_serie_nf_w			nota_fiscal.cd_serie_nf%type;
nr_sequencia_nf_w		bigint;
ie_gera_trib_geral_w		varchar(1);
qt_regra_material_w		bigint;
qt_regra_duplicada_w		bigint;
vl_item_nf_estrut_w		double precision;
vl_liquido_original_w		double precision;
cd_beneficiario_w		varchar(20);
pr_imposto_w			double precision;
cd_cond_pagto_w			smallint;
cd_conta_financ_w		bigint;
nr_seq_trans_reg_w		bigint;
nr_seq_trans_baixa_w		bigint;
vl_minimo_base_calculo_w	double precision;
vl_minimo_tributo_w		double precision;
ie_acumulativo_w		varchar(1);
vl_teto_base_w			double precision;
vl_desc_dependente_w		double precision;
cd_darf_w			varchar(20);
cd_variacao_w			varchar(2);
ie_periodicidade_w		varchar(1);
cd_material_regra_w		integer;
nr_seq_regra_w			bigint;
qt_pago_outros_w		bigint;
nr_seq_classe_w			bigint;
cd_tipo_baixa_neg_w		integer;
ie_estrut_mat_nf_w		varchar(1);
cd_estab_regra_w		integer;
cd_empresa_regra_w		smallint;
vl_soma_trib_nao_retido_w	double precision;
vl_soma_base_nao_retido_w	double precision;
vl_soma_trib_adic_w		double precision;
vl_soma_base_adic_w		double precision;
vl_trib_anterior_w		double precision;
vl_total_base_w			double precision;
vl_reducao_w			double precision;
ie_irpf_w			varchar(1);
vl_inss_w			double precision;
qt_dependente_w			bigint;
vl_base_calculo_paga_w		double precision;
vl_pago_w			double precision;
vl_tributo_w			double precision;
vl_trib_nao_retido_w		double precision;
vl_trib_adic_w			double precision;
vl_base_nao_retido_w		double precision;
vl_base_adic_w			double precision;
cont_w				bigint;
vl_total_nota_w			double precision;
vl_vencimento_w			double precision;
cd_empresa_w			smallint;
ie_isento_w			tributo.ie_isento%type;
qt_existe_trib_w		bigint;
nr_seq_regra_irpf_w		regra_calculo_irpf.nr_sequencia%type;

ie_count_trib_count_w integer;
ie_gerar_w  varchar(1);

c01 CURSOR FOR
SELECT	ie_ordem,
	cd_tributo,
	ie_tipo_tributo,
	ie_apuracao_piso,
	ie_corpo_item,
	ie_soma_diminui,
	ie_cnpj,
	ie_restringe_estab,
	ie_isento
from	(SELECT	CASE WHEN a.ie_tipo_tributo='IR' THEN 'Z' WHEN a.ie_tipo_tributo='ISRDOM' THEN 'Z'  ELSE 'A' END  ie_ordem,
		a.cd_tributo,
		a.ie_tipo_tributo,
		a.ie_apuracao_piso,
		a.ie_corpo_item,
		a.ie_soma_diminui,
		a.ie_cnpj,
		a.ie_restringe_estab,
		coalesce(a.ie_isento,'N') ie_isento
	from	tributo a
	where	a.ie_conta_pagar		= 'S'
	and	a.ie_situacao		= 'A'
	and	coalesce(nr_contrato_w,0) > 0
	and	((ie_gera_trib_geral_w	= 'S') and
		not exists (	select	1
				from 	contrato_regra_pagto_trib d,
					contrato_regra_nf c
				where	d.nr_seq_regra_nf	= c.nr_sequencia
				and	c.nr_seq_contrato	= nr_contrato_w))
	and	a.ie_corpo_item		= 'I'
	and (coalesce(ie_baixa_titulo,'N')	= 'N')
	and	((coalesce(ie_tipo_tributacao_w, 'X') <> '0') or (coalesce(ie_super_simples, 'S') = 'S'))
	and	coalesce(cd_tributo_p, a.cd_tributo)	= a.cd_tributo
	and	((coalesce(ie_pf_pj,'A') 	= 'A') or
		 (ie_pf_pj = 'PF' AND cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') or
		 ((ie_pf_pj = 'PJ') and ((cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') and (coalesce(cd_pessoa_fisica_w::text, '') = ''))))
	and (coalesce(nr_ccm_w::text, '') = '' or coalesce(a.ie_ccm,'S') = 'S')
	and	(((coalesce(ie_previa_p,'N') = 'N') and (not exists (select	1
			from	nota_fiscal_item_trib x
			where	x.nr_sequencia = nr_sequencia_p

			and	x.cd_tributo = a.cd_tributo
			and	x.nr_item_nf	= nr_item_nf_p))) or
		((coalesce(ie_previa_p,'N') = 'S') and (not exists (select	1
			from	nota_fiscal_item_trib_prev x 
			where	x.nr_seq_nota = nr_sequencia_p
			and	x.cd_tributo = a.cd_tributo))))
	and	coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
	
union

	select	CASE WHEN a.ie_tipo_tributo='IR' THEN 'Z' WHEN a.ie_tipo_tributo='ISRDOM' THEN 'Z'  ELSE 'A' END  ie_ordem,
		a.cd_tributo,
		a.ie_tipo_tributo,
		a.ie_apuracao_piso,
		a.ie_corpo_item,
		a.ie_soma_diminui,
		a.ie_cnpj,
		a.ie_restringe_estab,
		coalesce(a.ie_isento,'N') ie_isento
	from	tributo a
	where	a.ie_conta_pagar		= 'S'
	and	a.ie_situacao		= 'A'
	and	((coalesce(nr_contrato_w,0) > 0 and ie_gera_trib_geral_w = 'C') or (coalesce(nr_contrato_w,0) = 0))
	and	a.ie_corpo_item 		= 'I'
	and (coalesce(ie_baixa_titulo,'N')	= 'N')
	and	((coalesce(ie_tipo_tributacao_w, 'X') <> '0') or (coalesce(ie_super_simples, 'S') = 'S'))
	and	coalesce(cd_tributo_p, a.cd_tributo)	= a.cd_tributo
	and	((coalesce(ie_pf_pj,'A') 	= 'A') or
		 (ie_pf_pj = 'PF' AND cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') or
		 ((ie_pf_pj = 'PJ') and ((cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') and (coalesce(cd_pessoa_fisica_w::text, '') = ''))))
	and (coalesce(nr_ccm_w::text, '') = '' or coalesce(a.ie_ccm,'S') = 'S')
	and	(((coalesce(ie_previa_p,'N') = 'N') and (not exists (select	1
			from	nota_fiscal_item_trib x 
			where	x.nr_sequencia = nr_sequencia_p

			and	x.cd_tributo = a.cd_tributo
			and	x.nr_item_nf	= nr_item_nf_p))) or
		((coalesce(ie_previa_p,'N') = 'S') and (not exists (select	1
			from	nota_fiscal_item_trib_prev x 
			where	x.nr_seq_nota = nr_sequencia_p
			and	x.cd_tributo = a.cd_tributo))))
	and	coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
	
union

	select	CASE WHEN a.ie_tipo_tributo='IR' THEN 'Z' WHEN a.ie_tipo_tributo='ISRDOM' THEN 'Z'  ELSE 'A' END  ie_ordem,
		a.cd_tributo,
		a.ie_tipo_tributo,
		a.ie_apuracao_piso,
		a.ie_corpo_item,
		a.ie_soma_diminui,
		a.ie_cnpj,
		a.ie_restringe_estab,
		coalesce(a.ie_isento,'N') ie_isento
	from	tributo a
	where	a.ie_conta_pagar		= 'S'
	and	a.ie_situacao		= 'A'
	and	((coalesce(nr_contrato_w,0) > 0) and (ie_gera_trib_geral_w = 'N') and
		exists (select	1
			from 	contrato_regra_pagto_trib d,
				contrato_regra_nf c
			where	d.nr_seq_regra_nf	= c.nr_sequencia
			and	d.cd_tributo		= a.cd_tributo
			and	c.nr_seq_contrato	= nr_contrato_w
			and	coalesce(d.ie_regra_trib,'N') = 'S'))
	and	a.ie_corpo_item 		= 'I'
	and (coalesce(ie_baixa_titulo,'N')	= 'N')
	and	((coalesce(ie_tipo_tributacao_w, 'X') <> '0') or (coalesce(ie_super_simples, 'S') = 'S'))
	and	coalesce(cd_tributo_p, a.cd_tributo)	= a.cd_tributo
	and	((coalesce(ie_pf_pj,'A') 	= 'A') or
		 (ie_pf_pj = 'PF' AND cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') or
		 ((ie_pf_pj = 'PJ') and ((cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') and (coalesce(cd_pessoa_fisica_w::text, '') = ''))))
	and (coalesce(nr_ccm_w::text, '') = '' or coalesce(a.ie_ccm,'S') = 'S')
	and	(((coalesce(ie_previa_p,'N') = 'N') and (not exists (select	1
			from	nota_fiscal_item_trib x 
			where	x.nr_sequencia = nr_sequencia_p

			and	x.cd_tributo = a.cd_tributo
			and	x.nr_item_nf	= nr_item_nf_p))) or
		((coalesce(ie_previa_p,'N') = 'S') and (not exists (select	1
			from	nota_fiscal_item_trib_prev x 
			where	x.nr_seq_nota = nr_sequencia_p
			and	x.cd_tributo = a.cd_tributo))))
	and	coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w) a
order by	CASE WHEN a.ie_tipo_tributo='INSS' THEN 1  ELSE 2 END ,
	ie_ordem;

c02 CURSOR FOR
SELECT	a.nr_item_nf,
	coalesce(a.vl_liquido,0)
from	nota_fiscal_item a
where	a.nr_sequencia = nr_sequencia_p
and (coalesce(nr_item_nf_p,0) = 0 or a.nr_item_nf = nr_item_nf_p)
order by	nr_item_nf;


BEGIN

ie_gerar_w := obter_valor_param_usuario(40, 214, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w);

if (coalesce(ie_gerar_w,'N') = 'S')
and (coalesce(ie_deletar_p, 'N') = 'S') then
	select count(*)
	into STRICT 	ie_count_trib_count_w
	from 	nota_fiscal_item_trib x
	where 	x.nr_sequencia = nr_sequencia_p  LIMIT 1;

  if (ie_count_trib_count_w > 0) then
    delete from nota_fiscal_item_trib a
      where a.nr_sequencia = nr_sequencia_p
        and (a.nr_seq_regra_trib IS NOT NULL AND a.nr_seq_regra_trib::text <> '');
  end if;
end if;

if (coalesce(ie_previa_p,'N') = 'S') then
	delete from nota_fiscal_item_trib_prev
	where	nr_seq_nota = nr_sequencia_p;
end if;

/*Query 01*/

select	a.nr_nota_fiscal,
	a.cd_serie_nf,
	a.nr_sequencia_nf,
	a.cd_estabelecimento,
	a.cd_cgc,
	a.cd_cgc_emitente,
	a.cd_pessoa_fisica,
	a.dt_emissao,
	a.cd_condicao_pagamento,
	obter_cnpj_raiz(a.cd_cgc),
	obter_cnpj_raiz(a.cd_cgc_emitente),
	a.cd_natureza_operacao,
	a.cd_tipo_servico,
	a.cd_operacao_nf,
	b.cd_empresa
into STRICT	nr_nota_fiscal_w,
	cd_serie_nf_w,
	nr_sequencia_nf_w,
	cd_estabelecimento_w,
	cd_cgc_w,
	cd_cgc_emitente_w,
	cd_pessoa_fisica_w,
	dt_emissao_w,
	cd_condicao_pagamento_w,
	cd_cnpj_raiz_w,
	cd_cnpj_emitente_raiz_w,
	cd_natureza_operacao_w,
	cd_tipo_servico_w,
	cd_operacao_nf_w,
	cd_empresa_w
from	estabelecimento b,
	nota_fiscal a
where	a.cd_estabelecimento	= b.cd_estabelecimento
and	a.nr_sequencia		= nr_sequencia_p;

select	coalesce(max(ie_gera_tributo_geral),'N')
into STRICT	ie_gera_trib_geral_w
from	parametro_compras
where	cd_estabelecimento = cd_estabelecimento_w;

if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
	select	max(nr_ccm)
	into STRICT	nr_ccm_w
	from	pessoa_fisica
	where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
end if;

select	max(coalesce(nr_contrato,0))
into STRICT	nr_contrato_w
from	nota_fiscal_item
where	nr_sequencia = nr_sequencia_p;

select	max(ie_forma_pagamento)
into STRICT	ie_forma_pagamento_w
from	condicao_pagamento
where	cd_condicao_pagamento = cd_condicao_pagamento_w;

select	max(ie_tipo_tributacao)
into STRICT	ie_tipo_tributacao_w
from	pessoa_juridica
where	cd_cgc	= cd_cgc_w;
/*Fim Query 01*/

if (philips_param_pck.get_cd_pais = 2) then

	delete 	FROM nota_fiscal_item_trib
	where (nr_item_nf = nr_item_nf_p or coalesce(nr_item_nf_p, 0) = 0)
	and (cd_tributo = cd_tributo_p or coalesce(cd_tributo_p, 0) = 0)
	and	nr_sequencia = nr_sequencia_p
	and     exists (SELECT 1
			from    nota_fiscal b
			where   b.nr_sequencia = nr_sequencia_p
			and     coalesce(b.nr_ordem_compra::text, '') = '')
        and     exists (select 1
			from    nota_fiscal b
			where   b.nr_sequencia = nr_sequencia_p
			and     coalesce(b.nr_contrato::text, '') = '');
	
end if;

open c01;
loop
fetch c01 into
	ie_ordem_w,
	cd_tributo_w,
	ie_tipo_tributo_w,
	ie_apuracao_piso_w,
	ie_corpo_item_w,
	ie_soma_diminui_w,
	ie_cnpj_w,
	ie_restringe_estab_w,
	ie_isento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	open c02;
	loop
	fetch c02 into
		nr_item_nf_w,
		vl_liquido_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		vl_liquido_original_w	:= vl_liquido_w;

		pr_imposto_w		:= 0;
		cd_material_regra_w	:= null;
		vl_item_nf_estrut_w	:= null;		
		/*
		select	count(distinct a.cd_material)
		into	qt_regra_duplicada_w
		from	estrutura_material_v	b,
			nota_fiscal_item	a
		where	a.cd_material	= b.cd_material
		and	a.nr_sequencia	= nr_sequencia_p
		and	a.nr_item_nf	= nr_item_nf_w
		and	exists
			(select	1
			from	tributo_conta_pagar x
			where	obter_se_estrutura_mat(x.cd_grupo_material, x.cd_subgrupo_material, x.cd_classe_material, x.cd_material, a.cd_material, 'S') = 'S'
			and	((x.cd_material		= a.cd_material) or
				(x.cd_grupo_material	= b.cd_grupo_material) or
				(x.cd_subgrupo_material	= b.cd_subgrupo_material) or
				(x.cd_classe_material	= b.cd_classe_material))
			and	((x.cd_pessoa_juridica is null and x.cd_pessoa_fisica is null) or
				(x.cd_pessoa_juridica = cd_cgc_w and x.cd_pessoa_fisica is null) or
				(x.cd_pessoa_fisica = cd_pessoa_fisica_w and x.cd_pessoa_juridica is null))
			and	(nvl(x.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w)
			and	dt_emissao_w between nvl(dt_inicio_vigencia, dt_emissao_w - 1) and nvl(dt_fim_vigencia, dt_emissao_w + 1)
			and	x.cd_tributo	= cd_tributo_w
			having	count(*) > 1);
*/
		qt_regra_duplicada_w := 0;
		if (qt_regra_duplicada_w = 0) then
			select	max(a.cd_material),
				max(a.vl_liquido)
			into STRICT	cd_material_regra_w,
				vl_item_nf_estrut_w
			from	estrutura_material_v	b,
				nota_fiscal_item	a
			where	a.cd_material	= b.cd_material
			and	a.nr_sequencia	= nr_sequencia_p
			and	a.nr_item_nf	= nr_item_nf_w
			and	exists
				(SELECT	1
				from	tributo_conta_pagar x
				where	obter_se_estrutura_mat(x.cd_grupo_material, x.cd_subgrupo_material, x.cd_classe_material, x.cd_material, a.cd_material, 'S') = 'S'
				and	((x.cd_material		= a.cd_material) or (x.cd_grupo_material	= b.cd_grupo_material) or (x.cd_subgrupo_material	= b.cd_subgrupo_material) or (x.cd_classe_material	= b.cd_classe_material))
				and	((coalesce(x.cd_pessoa_juridica::text, '') = '' and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_juridica = cd_cgc_w and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_fisica = cd_pessoa_fisica_w and coalesce(x.cd_pessoa_juridica::text, '') = ''))
				and (coalesce(x.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w)
				and	dt_emissao_w between coalesce(dt_inicio_vigencia, dt_emissao_w - 1) and coalesce(dt_fim_vigencia, dt_emissao_w + 1)
				and	x.cd_tributo	= cd_tributo_w);
		end if;

		SELECT * FROM obter_dados_trib_tit_pagar(cd_tributo_w, cd_estabelecimento_w, cd_cgc_w, cd_pessoa_fisica_w, cd_beneficiario_w, pr_imposto_w, cd_cond_pagto_w, cd_conta_financ_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, vl_minimo_base_calculo_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_darf_w, dt_emissao_w, cd_variacao_w, ie_periodicidade_w, null, cd_natureza_operacao_w, cd_tipo_servico_w, cd_material_regra_w, null, null, nr_seq_regra_w, cd_operacao_nf_w, qt_pago_outros_w, nr_seq_classe_w, cd_tipo_baixa_neg_w, vl_liquido_w, 'N', null, null, null, null) INTO STRICT cd_beneficiario_w, pr_imposto_w, cd_cond_pagto_w, cd_conta_financ_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, vl_minimo_base_calculo_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_darf_w, cd_variacao_w, ie_periodicidade_w, nr_seq_regra_w, nr_seq_classe_w, cd_tipo_baixa_neg_w;

		select	coalesce(max(a.ie_estrut_mat_nf),'N')
		into STRICT	ie_estrut_mat_nf_w
		from	tributo_conta_pagar	a
		where	a.nr_sequencia	= nr_seq_regra_w;
		
		if (ie_estrut_mat_nf_w = 'S') then
			vl_liquido_w	:= vl_item_nf_estrut_w;
		end if;

		select	max(a.cd_estabelecimento),
			max(a.cd_empresa)
		into STRICT	cd_estab_regra_w,
			cd_empresa_regra_w
		from	tributo_conta_pagar a
		where	a.nr_sequencia	= nr_seq_regra_w;

		vl_tributo_w	:= (vl_liquido_w * pr_imposto_w) / 100;
	
		if (pr_imposto_w > 0) or (philips_param_pck.get_cd_pais = 2 AND nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
			begin

			select	/*+ use_concat */				coalesce(sum(vl_soma_trib_nao_retido),0),
				coalesce(sum(vl_soma_base_nao_retido),0),
				coalesce(sum(vl_soma_trib_adic),0),
				coalesce(sum(vl_soma_base_adic),0),
				coalesce(sum(vl_tributo),0),
				coalesce(sum(vl_total_base),0),
				coalesce(sum(vl_reducao),0)
			into STRICT	vl_soma_trib_nao_retido_w,
				vl_soma_base_nao_retido_w,
				vl_soma_trib_adic_w,
				vl_soma_base_adic_w,
				vl_trib_anterior_w,
				vl_total_base_w,
				vl_reducao_w
			from	valores_tributo_v a
			where	coalesce(a.cd_empresa,coalesce(cd_empresa_w,0)) = coalesce(cd_empresa_w,0)
			and	a.cd_tributo			= cd_tributo_w
			and	trunc(a.dt_tributo, 'month')	= trunc(dt_emissao_w, 'month')
			and	(
				  (
				    ((coalesce(a.cd_cgc_emitente, 'X') = coalesce(cd_cgc_emitente_w, 'X')) and (a.ie_origem_valores = 'NFE')) or
				    (
				      (ie_cnpj_w = wheb_mensagem_pck.get_texto(794231)) and (cd_cnpj_emitente_raiz = cd_cnpj_emitente_raiz_w)
				    )
				  ) or
				  (
				    (coalesce(a.cd_cgc_emitente::text, '') = '') and (a.ie_origem_valores <> 'NFE')
				  )
				)
			and	(
				  ((cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and a.cd_pessoa_fisica = cd_pessoa_fisica_w) or
				  (
				    (coalesce(cd_pessoa_fisica_w::text, '') = '') and (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') and (coalesce(a.cd_pessoa_fisica::text, '') = '') and
				    (
				       (a.cd_cgc 		= cd_cgc_w) or
				       ((ie_cnpj_w = wheb_mensagem_pck.get_texto(794231)) and (a.cd_cnpj_raiz = cd_cnpj_raiz_w))
				    )
				  )
				)
			and (a.ie_origem_valores		= 'NFE' or ie_apuracao_piso_w = 'S')
			and	((ie_restringe_estab_w		= 'N') or (a.cd_estabelecimento		= cd_estabelecimento_w) or (a.cd_estab_financeiro		= cd_estabelecimento_w) or (coalesce(cd_estab_regra_w::text, '') = '' and a.cd_empresa = cd_empresa_regra_w))
			and (ie_apuracao_piso_w		= 'N' or
				ie_apuracao_piso_w		= ie_base_calculo)
			and	ie_baixa_titulo			= 'N';

			ie_irpf_w			:= 'N';

			if (ie_tipo_tributo_w = 'IR') and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then

				select	coalesce(sum(a.vl_tributo),0)
				into STRICT	vl_inss_w
				from	tributo b,
					nota_fiscal_item_trib a
				where	a.cd_tributo		= b.cd_tributo
				and	a.nr_sequencia		= nr_sequencia_p
				and	a.nr_sequencia		= nr_item_nf_w
				and	b.ie_tipo_tributo		= 'INSS';

				select	coalesce(qt_dependente,0)
				into STRICT	qt_dependente_w
				from	pessoa_fisica
				where	cd_pessoa_fisica	= cd_pessoa_fisica_w;

				ie_irpf_w			:= 'S';
				vl_liquido_w			:= vl_liquido_w - vl_inss_w;
			elsif (ie_tipo_tributo_w = 'ISRDOM') then
				if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
					select	coalesce(qt_dependente,0)
					into STRICT	qt_dependente_w
					from	pessoa_fisica
					where	cd_pessoa_fisica	= cd_pessoa_fisica_w;

					ie_irpf_w			:= 'S';
				end if;
			end if;

			SELECT * FROM obter_valores_tributo(	ie_acumulativo_w, pr_imposto_w, vl_minimo_base_calculo_w, vl_minimo_tributo_w, vl_soma_trib_nao_retido_w, vl_soma_trib_adic_w, vl_soma_base_nao_retido_w, vl_soma_base_adic_w, vl_liquido_w, vl_tributo_w, vl_trib_nao_retido_w, vl_trib_adic_w, vl_base_nao_retido_w, vl_base_adic_w, vl_teto_base_w, vl_trib_anterior_w, ie_irpf_w, vl_total_base_w, vl_reducao_w, vl_desc_dependente_w, qt_dependente_w, vl_base_calculo_paga_w, null, null, obter_outras_reducoes_irpf(cd_pessoa_fisica_w, cd_estabelecimento_w, dt_emissao_w), clock_timestamp(), nr_seq_regra_irpf_w) INTO STRICT pr_imposto_w, vl_liquido_w, vl_tributo_w, vl_trib_nao_retido_w, vl_trib_adic_w, vl_base_nao_retido_w, vl_base_adic_w, vl_reducao_w, vl_desc_dependente_w, nr_seq_regra_irpf_w;

			if (vl_tributo_w > vl_liquido_original_w) then
				vl_tributo_w	:= vl_liquido_original_w;
			end if;

			if (vl_tributo_w < 0) then
				vl_tributo_w	:= 0;
			end if;

			if (ie_corpo_item_w = 'I') and (coalesce(qt_regra_duplicada_w,0) = 0) then
				begin

				if (coalesce(ie_previa_p,'N') = 'N') then
					
					if (ie_isento_w = 'S') and (pr_imposto_w = 0) then
						
						select  count(*)
						into STRICT    qt_existe_trib_w
						from	nota_fiscal_item_trib
						where	nr_item_nf   = nr_item_nf_w
						and	cd_tributo   = cd_tributo_w
						and	nr_sequencia = nr_sequencia_p  LIMIT 1;
						
						if (qt_existe_trib_w = 0)then	
							insert into nota_fiscal_item_trib(
								nr_sequencia,
								cd_estabelecimento,
								cd_cgc_emitente,
								cd_serie_nf,
								nr_sequencia_nf,
								nr_item_nf,
								cd_tributo,
								vl_tributo,
								dt_atualizacao,
								nm_usuario,
								vl_base_calculo,
								tx_tributo,
								vl_reducao_base,
								ie_rateio,
								vl_trib_nao_retido,
								vl_base_nao_retido,
								vl_trib_adic,
								vl_base_adic,
								nr_nota_fiscal,
								nr_seq_regra_trib)
							values (	nr_sequencia_p,
								cd_estabelecimento_w,
								cd_cgc_emitente_w,
								cd_serie_nf_w,
								nr_sequencia_nf_w,
								nr_item_nf_w,
								cd_tributo_w,
								0,
								clock_timestamp(),
								nm_usuario_p,
								vl_liquido_w,
								0,
								0,
								'N',
								0,
								0,
								0,
								0,
								nr_nota_fiscal_w,
								nr_seq_regra_w);
						end if;
					else
						select  count(*)
						into STRICT    qt_existe_trib_w
						from	nota_fiscal_item_trib
						where	nr_item_nf   = nr_item_nf_w
						and	cd_tributo   = cd_tributo_w
						and	nr_sequencia = nr_sequencia_p  LIMIT 1;
						
						if (qt_existe_trib_w = 0 and (coalesce(vl_liquido_w,0) > 0 and ((coalesce(pr_imposto_w,0) > 0) or (philips_param_pck.get_cd_pais = 2))))then
							insert into nota_fiscal_item_trib(
								nr_sequencia,
								cd_estabelecimento,
								cd_cgc_emitente,
								cd_serie_nf,
								nr_sequencia_nf,
								nr_item_nf,
								cd_tributo,
								vl_tributo,
								dt_atualizacao,
								nm_usuario,
								vl_base_calculo,
								tx_tributo,
								vl_reducao_base,
								ie_rateio,
								vl_trib_nao_retido,
								vl_base_nao_retido,
								vl_trib_adic,
								vl_base_adic,
								nr_nota_fiscal,
								nr_seq_regra_trib)
							values (	nr_sequencia_p,
								cd_estabelecimento_w,
								cd_cgc_emitente_w,
								cd_serie_nf_w,
								nr_sequencia_nf_w,
								nr_item_nf_w,
								cd_tributo_w,
								coalesce(vl_tributo_w, 0),
								clock_timestamp(),
								nm_usuario_p,
								vl_liquido_w,
								pr_imposto_w,
								vl_desc_dependente_w,
								'N',
								vl_trib_nao_retido_w,
								vl_base_nao_retido_w,
								vl_trib_adic_w,
								vl_base_adic_w,
								nr_nota_fiscal_w,
								nr_seq_regra_w);
						end if;
					end if;
				else
					insert into nota_fiscal_item_trib_prev(
						nr_sequencia,
						cd_estabelecimento,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_nota,
						nr_item_nf,
						cd_tributo,
						vl_tributo,
						vl_base_calculo,
						tx_tributo,
						vl_reducao_base,
						nr_seq_regra_trib)
					values (	nextval('nota_fiscal_item_trib_prev_seq'),
						cd_estabelecimento_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_sequencia_p,
						nr_item_nf_w,
						cd_tributo_w,
						vl_tributo_w,
						vl_liquido_w,
						pr_imposto_w,
						vl_desc_dependente_w,
						nr_seq_regra_w);
				end if;
				end;
			end if;

			end;
		end if;		

		end;
	end loop;
	close c02;
	end;
end loop;
close c01;

select	count(*)
into STRICT	cont_w
from	nota_fiscal_venc_trib
where	nr_sequencia	= nr_sequencia_p
and	ie_atualiza_venc_p = 'S'  LIMIT 1;

if (cont_w > 0) and (coalesce(ie_previa_p,'N') = 'N') then

	CALL atualiza_total_nota_fiscal(nr_sequencia_p, nm_usuario_p);

	select	vl_total_nota
	into STRICT	vl_total_nota_w
	from	nota_fiscal
	where	nr_sequencia	= nr_sequencia_p;

	select	coalesce(sum(vl_vencimento),0)
	into STRICT	vl_vencimento_w
	from	nota_fiscal_venc
	where	nr_sequencia	= nr_sequencia_p;

	if (coalesce(vl_vencimento_w,0) <> coalesce(vl_total_nota_w,0)) then
		update	nota_fiscal_venc
		set	vl_vencimento	= vl_vencimento + vl_total_nota_w - vl_vencimento_w
		where	nr_sequencia	= nr_sequencia_p
		and	dt_vencimento	= dt_emissao_w;
	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_tributos_fornecedor_item ( nr_sequencia_p bigint, nr_item_nf_p bigint, cd_tributo_p bigint, ie_atualiza_venc_p text, dt_vigencia_p timestamp, nm_usuario_p text, ie_previa_p text default 'N', ie_deletar_p text default null) FROM PUBLIC;

