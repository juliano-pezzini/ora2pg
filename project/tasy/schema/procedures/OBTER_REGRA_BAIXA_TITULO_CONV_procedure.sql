-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_regra_baixa_titulo_conv (ie_origem_baixa_p text, cd_estabelecimento_p bigint, cd_convenio_p bigint, nr_titulo_p bigint, ie_campo_p text, cd_tipo_recebimento_p INOUT bigint, nr_seq_trans_financ_p INOUT bigint, nr_seq_mot_glosa_p INOUT bigint, cd_motivo_glosa_p motivo_glosa.cd_motivo_glosa%type default null, nr_interno_conta_p lote_audit_hist_guia.nr_interno_conta%type default null, cd_autorizacao_p lote_audit_hist_guia.cd_autorizacao%type default null) AS $body$
DECLARE


nr_seq_mot_glosa_w	regra_baixa_titulo_conv.nr_seq_mot_glosa%type;
cd_tipo_recebimento_w	regra_baixa_titulo_conv.cd_tipo_recebimento%type;
nr_seq_trans_financ_w	regra_baixa_titulo_conv.nr_seq_trans_financ%type;
count_w					bigint;
ie_origem_baixa_w		varchar(3);
cd_motivo_glosa_w	motivo_glosa.cd_motivo_glosa%type := cd_motivo_glosa_p;
nr_interno_conta_w	lote_audit_hist_guia.nr_interno_conta%type := nr_interno_conta_p;
cd_autorizacao_w	lote_audit_hist_guia.cd_autorizacao%type := cd_autorizacao_p;

c01 CURSOR FOR
SELECT	cd_tipo_recebimento,
	nr_seq_trans_financ,
	nr_seq_mot_glosa
from	regra_baixa_titulo_conv a
where	a.cd_estabelecimento			= cd_estabelecimento_p
and	a.ie_campo				= ie_campo_p
and	a.ie_situacao				= 'A'
and (coalesce(a.ie_origem_baixa,'RET')		= ie_origem_baixa_w or
	coalesce(a.ie_origem_baixa,'RET')		= 'A' )
and	coalesce(a.cd_convenio,coalesce(cd_convenio_p,0))	= coalesce(cd_convenio_p,0)
and (exists (SELECT 1
		from	titulo_receber_classif b
		where	b.nr_titulo		= nr_titulo_p
		and	b.cd_conta_financ	= a.cd_conta_financ) or (coalesce(a.cd_conta_financ::text, '') = ''))
and	clock_timestamp()	between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,clock_timestamp() + interval '1 days')
and	coalesce(a.cd_motivo_glosa, coalesce(cd_motivo_glosa_w, 0)) = coalesce(cd_motivo_glosa_w, 0)
order by coalesce(a.cd_convenio,0),
	coalesce(a.cd_conta_financ,0),
	a.dt_inicio_vigencia;


BEGIN

select	count(1)
into STRICT	count_w
from	regra_baixa_titulo_conv
where	cd_estabelecimento	= cd_estabelecimento_p;

cd_tipo_recebimento_w	:= null;
nr_seq_trans_financ_w	:= null;
nr_seq_mot_glosa_w		:= null;

if (count_w > 0) then

	ie_origem_baixa_w	:= ie_origem_baixa_p;
	if (ie_origem_baixa_p = 'RET') then
		--Verifica se ja existe baixa na GRG para este titulo

		--Se existe, o tipo e REC
		begin
		select	'REC'
		into STRICT	ie_origem_baixa_w
		from	titulo_receber_liq a
		join	lote_audit_hist_guia b on a.nr_seq_lote_hist_guia = b.nr_sequencia
		where	a.nr_titulo	= nr_titulo_p
		and	(a.nr_seq_lote_hist_guia IS NOT NULL AND a.nr_seq_lote_hist_guia::text <> '')
		and	b.nr_interno_conta = nr_interno_conta_w
		and	b.cd_autorizacao = cd_autorizacao_w  LIMIT 1;
		exception
		when others then
		begin

			select	'REC'
			into STRICT	ie_origem_baixa_w
			from	conta_paciente a,
				titulo_receber b,
				lote_audit_hist_guia g,
				protocolo_convenio p
			where	a.nr_seq_protocolo = b.nr_seq_protocolo
			and	a.nr_interno_conta = g.nr_interno_conta
			and	p.nr_seq_protocolo = a.nr_seq_protocolo
			and	a.cd_convenio_parametro = cd_convenio_p
			and	b.nr_titulo = nr_titulo_p
			and	a.cd_estabelecimento = cd_estabelecimento_p
			and	g.nr_interno_conta = nr_interno_conta_w
			and	g.cd_autorizacao = cd_autorizacao_w  LIMIT 1;

			exception
            when others then
            begin
				select	'REC'
				into STRICT	ie_origem_baixa_w
				from	conta_paciente a,
					titulo_receber b,
					lote_audit_hist_guia g,
					protocolo_convenio p,
					lote_protocolo l
				where	l.nr_sequencia = b.nr_seq_lote_prot
				and	a.nr_interno_conta = g.nr_interno_conta
				and	p.nr_seq_protocolo = a.nr_seq_protocolo
				and	l.nr_sequencia = p.nr_seq_lote_protocolo
				and	a.cd_convenio_parametro = cd_convenio_p
				and	b.nr_titulo = nr_titulo_p
				and	a.cd_estabelecimento = cd_estabelecimento_p
				and	g.nr_interno_conta = nr_interno_conta_w
				and	g.cd_autorizacao = cd_autorizacao_w  LIMIT 1;

				exception
                when others then
                begin
					select	'REC'
					into STRICT	ie_origem_baixa_w
					from	conta_paciente a,
						titulo_receber b,
						lote_audit_hist_guia g
					where	a.nr_interno_conta = b.nr_interno_conta
					and	a.nr_interno_conta = g.nr_interno_conta
					and	a.cd_convenio_parametro = cd_convenio_p
					and	b.nr_titulo = nr_titulo_p
					and	a.cd_estabelecimento = cd_estabelecimento_p
					and	g.nr_interno_conta = nr_interno_conta_w
					and	g.cd_autorizacao = cd_autorizacao_w  LIMIT 1;
					exception
					when others then
					begin
						ie_origem_baixa_w := null;
					end;
				end;
			end;
          end;
		if (coalesce(ie_origem_baixa_w::text, '') = '') then
			ie_origem_baixa_w	:= ie_origem_baixa_p;
		end if;

	end;
	end if;
	
	

	open C01;
	loop
	fetch C01 into
		cd_tipo_recebimento_w,
		nr_seq_trans_financ_w,
		nr_seq_mot_glosa_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;

end if;

cd_tipo_recebimento_p	:= cd_tipo_recebimento_w;
nr_seq_trans_financ_p	:= nr_seq_trans_financ_w;
nr_seq_mot_glosa_p		:= nr_seq_mot_glosa_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_regra_baixa_titulo_conv (ie_origem_baixa_p text, cd_estabelecimento_p bigint, cd_convenio_p bigint, nr_titulo_p bigint, ie_campo_p text, cd_tipo_recebimento_p INOUT bigint, nr_seq_trans_financ_p INOUT bigint, nr_seq_mot_glosa_p INOUT bigint, cd_motivo_glosa_p motivo_glosa.cd_motivo_glosa%type default null, nr_interno_conta_p lote_audit_hist_guia.nr_interno_conta%type default null, cd_autorizacao_p lote_audit_hist_guia.cd_autorizacao%type default null) FROM PUBLIC;

