-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE envia_status_agenda_regulacao (IE_STATUS_P text, NR_SEQ_AGENDA_CONS_P bigint DEFAULT NULL, NR_SEQ_AGENDA_EXAME_P bigint DEFAULT NULL, IE_TRATADO_EXTERNAMENTE_P bigint DEFAULT NULL, DS_MENSAGEM_REGULACAO_P text DEFAULT NULL) AS $body$
DECLARE


NR_SEQ_REGULACAO_W REGULACAO_ATEND.NR_SEQUENCIA%TYPE;
 IE_INTEGRACAO_W            varchar(2);
 DS_INTEGRACAO_W            text;
 NM_USUARIO_W               REGULACAO_ATEND.NM_USUARIO%TYPE;


BEGIN

  IF (NR_SEQ_AGENDA_CONS_P IS NOT NULL AND NR_SEQ_AGENDA_CONS_P::text <> '') THEN
  
    SELECT MAX(D.NR_SEQ_REGULACAO)
      INTO STRICT NR_SEQ_REGULACAO_W
      FROM  AGENDA_INTEGRADA_ITEM B 
      JOIN AGENDA_INTEGRADA C ON C.NR_SEQUENCIA = B.NR_SEQ_AGENDA_INT
      JOIN AGENDA_LISTA_ESPERA D ON C.NR_SEQ_LISTA_ESPERA = D.NR_SEQUENCIA
     WHERE (B.NR_SEQ_AGENDA_CONS IS NOT NULL AND B.NR_SEQ_AGENDA_CONS::text <> '')
       AND (B.NR_SEQ_AGENDA_INT IS NOT NULL AND B.NR_SEQ_AGENDA_INT::text <> '')
       AND (C.NR_SEQ_LISTA_ESPERA IS NOT NULL AND C.NR_SEQ_LISTA_ESPERA::text <> '')
       AND (D.NR_SEQ_REGULACAO IS NOT NULL AND D.NR_SEQ_REGULACAO::text <> '')
       AND B.NR_SEQ_AGENDA_CONS = NR_SEQ_AGENDA_CONS_P;

  ELSIF (NR_SEQ_AGENDA_EXAME_P IS NOT NULL AND NR_SEQ_AGENDA_EXAME_P::text <> '') THEN
        
        SELECT MAX(D.NR_SEQ_REGULACAO)
          INTO STRICT NR_SEQ_REGULACAO_W
          FROM  AGENDA_INTEGRADA_ITEM B 
          JOIN AGENDA_INTEGRADA C ON C.NR_SEQUENCIA = B.NR_SEQ_AGENDA_INT
          JOIN AGENDA_LISTA_ESPERA D ON C.NR_SEQ_LISTA_ESPERA =
                                        D.NR_SEQUENCIA
         WHERE (B.NR_SEQ_AGENDA_CONS IS NOT NULL AND B.NR_SEQ_AGENDA_CONS::text <> '')
           AND (B.NR_SEQ_AGENDA_INT IS NOT NULL AND B.NR_SEQ_AGENDA_INT::text <> '')
           AND (C.NR_SEQ_LISTA_ESPERA IS NOT NULL AND C.NR_SEQ_LISTA_ESPERA::text <> '')
           AND (D.NR_SEQ_REGULACAO IS NOT NULL AND D.NR_SEQ_REGULACAO::text <> '')
           AND B.NR_SEQ_AGENDA_EXAME = NR_SEQ_AGENDA_EXAME_P;

  END IF;

  
  IF (NR_SEQ_REGULACAO_W IS NOT NULL AND NR_SEQ_REGULACAO_W::text <> '') THEN

    NM_USUARIO_W := WHEB_USUARIO_PCK.GET_NM_USUARIO;

    IE_INTEGRACAO_W := OBTER_PARAM_USUARIO(366, 4, OBTER_PERFIL_ATIVO, NM_USUARIO_W, NULL, IE_INTEGRACAO_W);


    IF (IE_INTEGRACAO_W = 'I') THEN
      SELECT BIFROST.SEND_INTEGRATION( 'regulation.status.update',
                                      'com.philips.tasy.integration.atepac.regulation.status.request.RegulationStatusRequest',
                                      '{ "regulation" : "' ||NR_SEQ_REGULACAO_W || '",' 
                                       || (CASE WHEN (IE_STATUS_P IS NOT NULL AND IE_STATUS_P::text <> '') THEN '"status" : "' || IE_STATUS_P ||'"'  ELSE '' END)
                                       || (CASE WHEN (IE_TRATADO_EXTERNAMENTE_P IS NOT NULL AND IE_TRATADO_EXTERNAMENTE_P::text <> '') THEN '"isTreatedExternally" : ' || IE_TRATADO_EXTERNAMENTE_P ||' ,' ELSE ''  END)
                                       || (CASE WHEN (DS_MENSAGEM_REGULACAO_P IS NOT NULL AND DS_MENSAGEM_REGULACAO_P::text <> '') THEN '"regulationMessage" : "' || DS_MENSAGEM_REGULACAO_P ||'" ' ELSE ''  END)
                                       || '}',
                                      NM_USUARIO_W)
        INTO STRICT DS_INTEGRACAO_W
;
    END IF;

  END IF;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE envia_status_agenda_regulacao (IE_STATUS_P text, NR_SEQ_AGENDA_CONS_P bigint DEFAULT NULL, NR_SEQ_AGENDA_EXAME_P bigint DEFAULT NULL, IE_TRATADO_EXTERNAMENTE_P bigint DEFAULT NULL, DS_MENSAGEM_REGULACAO_P text DEFAULT NULL) FROM PUBLIC;

