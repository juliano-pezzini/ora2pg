-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_tributos_fornecedor ( nr_sequencia_p bigint, cd_tributo_p bigint, nm_usuario_p text, dt_vigencia_p timestamp, ie_previa_p text default 'N', ie_deletar_p text default null) AS $body$
DECLARE


cd_tributo_w			bigint;
pr_imposto_w			double precision;
vl_liquido_w			double precision;
vl_inss_w			double precision;
vl_tributo_w			double precision;
cd_estabelecimento_w		smallint;
cd_cond_pagto_w			smallint;
cd_cgc_w			varchar(20);
cd_cgc_emitente_w		varchar(20);
cd_pessoa_fisica_w		varchar(10);
cd_beneficiario_w		varchar(20);
ie_acumulativo_w		varchar(1);
cd_conta_financ_w		bigint;
nr_seq_trans_reg_w		bigint;
nr_seq_trans_baixa_w		bigint;
cd_natureza_operacao_w		bigint;
vl_minimo_base_calculo_w	double precision;
vl_minimo_tributo_w		double precision;
vl_soma_trib_nao_retido_w	double precision;
vl_soma_base_nao_retido_w	double precision;
vl_soma_trib_adic_w		double precision;
vl_soma_base_adic_w		double precision;
vl_tributo_a_reter_w		double precision;
vl_base_a_reter_w		double precision;
vl_trib_nao_retido_w		double precision;
vl_base_nao_retido_w		double precision;
vl_trib_adic_w			double precision;
vl_base_adic_w			double precision;
vl_liquido_original_w		double precision;
vl_trib_anterior_w		double precision;
vl_base_venc_w			double precision;
vl_total_nota_w			double precision;
vl_vencimento_w			double precision;
dt_emissao_w			timestamp;
vl_teto_base_w			double precision;
vl_total_base_w			double precision;
vl_desc_nf_w			double precision;
ie_tipo_tributo_w		varchar(15);
ie_irpf_w			varchar(1);
ie_apuracao_piso_w		varchar(3);
ie_ordem_w			varchar(1);
vl_reducao_w			double precision;
vl_desc_dependente_w		double precision;
qt_dependente_w			smallint;
cd_darf_w			varchar(20);
ie_corpo_item_w			varchar(5);
ie_soma_diminui_w		varchar(5);
cont_w				integer;
cd_variacao_w			varchar(2);
ie_periodicidade_w		varchar(1);
nr_contrato_w			bigint;
cd_condicao_pagamento_w		bigint;
ie_forma_pagamento_w		smallint;
ie_corpo_item_ant_w		varchar(20);
cd_cnpj_raiz_w			varchar(20);
ie_cnpj_w			varchar(20);
cd_cnpj_emitente_raiz_w		varchar(20);
nr_ccm_w			bigint	:= null;
ie_tipo_tributacao_w		varchar(255);	-- afstringari 166959 16/10/2009
cd_tipo_servico_w		varchar(100);
ds_irrelevante_w		varchar(4000);
nr_seq_regra_w			bigint;
cd_grupo_material_regra_w	bigint;
cd_subgrupo_material_regra_w	bigint;
cd_classe_material_regra_w	bigint;
cd_material_regra_w		bigint;
vl_item_nf_w			double precision;
cd_estab_regra_w		bigint;
vl_base_calculo_paga_w		double precision;
cd_empresa_regra_w		bigint;
cd_operacao_nf_w		smallint;
cd_tributo_pf_w			bigint;
vl_base_tributo_pf_w		double precision;
vl_tributo_pf_w			double precision;
dt_inicio_vigencia_w		timestamp;
dt_fim_vigencia_w		timestamp;
cd_pessoa_fisica_pf_w		varchar(10);
ie_vencimento_pf_w		varchar(255);
ds_emp_retencao_w		varchar(255);
ie_tipo_data_w			varchar(255);
ie_pago_prev_rep_w		varchar(255);
qt_registro_w			bigint;
--ie_trib_pago_prev_w		varchar2(255);
ie_restringe_estab_w		varchar(255);
ie_desc_nf_w			varchar(255);
vl_pago_w			double precision;
qt_pago_outros_w		bigint;
nr_seq_classe_w			bigint;
cd_tipo_baixa_neg_w		integer;
qt_regra_material_w		bigint	:= 0;
qt_regra_duplicada_w		bigint	:= 0;
ie_gera_trib_geral_w		varchar(15);
vl_item_nf_estrut_w		double precision;
vl_item_nf_estrut_ww		double precision;
ie_estrut_mat_nf_w		varchar(1);
cd_empresa_w			smallint;
pr_reducao_base_w		tributo_conta_pagar.pr_reducao_base%type;
ie_isento_w			tributo.ie_isento%type;
nr_seq_regra_irpf_w		regra_calculo_irpf.nr_sequencia%type;
vl_base_retido_outro_w		double precision;
ie_gerar_w			varchar(1);
ie_pf_pj_w			tributo.ie_pf_pj%type;
ie_irpj_w			varchar(1);
ie_count_trib_count_w integer;

C01 CURSOR FOR
	SELECT	ie_ordem,
		cd_tributo,
		ie_tipo_tributo,
		ie_apuracao_piso,
		ie_corpo_item,
		ie_soma_diminui,
		ie_cnpj,
		ie_restringe_estab,
		ie_desc_nf,
		ie_isento,
		ie_pf_pj
	from	(SELECT	CASE WHEN a.ie_tipo_tributo='IR' THEN 'Z' WHEN a.ie_tipo_tributo='ISRDOM' THEN 'Z'  ELSE 'A' END  ie_ordem,
			a.cd_tributo,
			a.ie_tipo_tributo,
			a.ie_apuracao_piso,
			a.ie_corpo_item,
			a.ie_soma_diminui,
			a.ie_cnpj,
			a.ie_restringe_estab,
			coalesce(a.ie_desc_nf,'N') ie_desc_nf,
			coalesce(a.ie_isento,'N') ie_isento,
			a.ie_pf_pj
		from	Tributo a
		where	a.ie_conta_pagar	= 'S'
		and	a.ie_situacao		= 'A'
		and	coalesce(nr_contrato_w,0) > 0
		and	((coalesce(a.ie_gera_nf_devolucao,'S') = 'S') or (coalesce(a.ie_gera_nf_devolucao,'S') = 'N' and sup_obter_se_nf_devolucao(nr_sequencia_p) = 'N'))
		and	((ie_gera_trib_geral_w = 'S') and (not exists (select	1
					from 	contrato_regra_pagto_trib d,
						contrato_regra_nf c
					where	d.nr_seq_regra_nf	= c.nr_sequencia
					and 	trunc(coalesce(c.dt_inicio_vigencia,clock_timestamp()),'dd') <= trunc(clock_timestamp(),'dd') and trunc(coalesce(c.dt_fim_vigencia,clock_timestamp()),'dd') >= trunc(clock_timestamp(),'dd')
                    and (coalesce(c.ie_situacao::text, '') = '' or c.ie_situacao = 'A')
					and	c.nr_seq_contrato	= nr_contrato_w)
			or exists (select	1
					from 	contrato_regra_pagto_trib d,
						contrato_regra_nf c
					where	d.nr_seq_regra_nf	= c.nr_sequencia
					and	d.cd_tributo		= a.cd_tributo
					and	c.nr_seq_contrato	= nr_contrato_w
					and 	trunc(coalesce(c.dt_inicio_vigencia,clock_timestamp()),'dd') <= trunc(clock_timestamp(),'dd') and trunc(coalesce(c.dt_fim_vigencia,clock_timestamp()),'dd') >= trunc(clock_timestamp(),'dd')
                    and (coalesce(c.ie_situacao::text, '') = '' or c.ie_situacao = 'A')
					and	coalesce(d.ie_regra_trib,'N') = 'S')))
		and	a.ie_corpo_item	in ('C','V')
		and (coalesce(ie_baixa_titulo,'N')	= 'N')
		and	((coalesce(ie_tipo_tributacao_w, 'X') <> '0') or (coalesce(ie_super_simples, 'S') = 'S'))
		and	coalesce(cd_tributo_p, a.cd_tributo)	= a.cd_tributo
		and	((coalesce(ie_pf_pj,'A') 	= 'A') or
			 (ie_pf_pj = 'PF' AND cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') or
			 ((ie_pf_pj = 'PJ') and ((cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') and (coalesce(cd_pessoa_fisica_w::text, '') = ''))))
		and (coalesce(nr_ccm_w::text, '') = '' or coalesce(a.ie_ccm,'S') = 'S')
		and	(((coalesce(ie_previa_p,'N') = 'N') and (not exists (select 1 from nota_fiscal_trib x where x.nr_sequencia = nr_sequencia_p and x.cd_tributo = a.cd_tributo and (coalesce(x.ie_pago_prev,'V') = 'V')
				
union

				 select 1 from nota_fiscal_venc_trib x where x.nr_sequencia = nr_sequencia_p and x.cd_tributo = a.cd_tributo))) or
			((coalesce(ie_previa_p,'N') = 'S') and (not exists (select 1 from nota_fiscal_trib_prev x where x.nr_seq_nota = nr_sequencia_p and x.cd_tributo = a.cd_tributo and (coalesce(x.ie_pago_prev,'V') = 'V')
				 
union

				 select 1 from nota_fiscal_venc_trib_prev x where x.nr_seq_nota = nr_sequencia_p and x.cd_tributo = a.cd_tributo))))
		and	coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
		
union

		select	CASE WHEN a.ie_tipo_tributo='IR' THEN 'Z' WHEN a.ie_tipo_tributo='ISRDOM' THEN 'Z'  ELSE 'A' END  ie_ordem,
			a.cd_tributo,
			a.ie_tipo_tributo,
			a.ie_apuracao_piso,
			a.ie_corpo_item,
			a.ie_soma_diminui,
			a.ie_cnpj,
			a.ie_restringe_estab,
			coalesce(a.ie_desc_nf,'N'),
			coalesce(a.ie_isento,'N') ie_isento,
			a.ie_pf_pj
		from	Tributo a
		where	a.ie_conta_pagar	= 'S'
		and	a.ie_situacao		= 'A'
		and	((coalesce(a.ie_gera_nf_devolucao,'S') = 'S') or (coalesce(a.ie_gera_nf_devolucao,'S') = 'N' and sup_obter_se_nf_devolucao(nr_sequencia_p) = 'N'))
		and	((coalesce(nr_contrato_w,0) > 0 and ie_gera_trib_geral_w = 'C') or (coalesce(nr_contrato_w,0) = 0))
		and	a.ie_corpo_item	in ('C','V')
		and (coalesce(ie_baixa_titulo,'N')	= 'N')
		and	((coalesce(ie_tipo_tributacao_w, 'X') <> '0') or (coalesce(ie_super_simples, 'S') = 'S'))
		and	coalesce(cd_tributo_p, a.cd_tributo)	= a.cd_tributo
		and	((coalesce(ie_pf_pj,'A') 	= 'A') or
			 (ie_pf_pj = 'PF' AND cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') or
			 ((ie_pf_pj = 'PJ') and ((cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') and (coalesce(cd_pessoa_fisica_w::text, '') = ''))))
		and (coalesce(nr_ccm_w::text, '') = '' or coalesce(a.ie_ccm,'S') = 'S')
		and	(((coalesce(ie_previa_p,'N') = 'N') and (not exists (select 1 from nota_fiscal_trib x where x.nr_sequencia = nr_sequencia_p and x.cd_tributo = a.cd_tributo and (coalesce(x.ie_pago_prev,'V') = 'V')
				 
union

				 select 1 from nota_fiscal_venc_trib x where x.nr_sequencia = nr_sequencia_p and x.cd_tributo = a.cd_tributo))) or
			((coalesce(ie_previa_p,'N') = 'S') and (not exists (select 1 from nota_fiscal_trib_prev x where x.nr_seq_nota = nr_sequencia_p and x.cd_tributo = a.cd_tributo and (coalesce(x.ie_pago_prev,'V') = 'V')
				 
union

				 select 1 from nota_fiscal_venc_trib_prev x where x.nr_seq_nota = nr_sequencia_p and x.cd_tributo = a.cd_tributo))))
		and	coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
		
union

		select	CASE WHEN a.ie_tipo_tributo='IR' THEN 'Z' WHEN a.ie_tipo_tributo='ISRDOM' THEN 'Z'  ELSE 'A' END  ie_ordem,
			a.cd_tributo,
			a.ie_tipo_tributo,
			a.ie_apuracao_piso,
			a.ie_corpo_item,
			a.ie_soma_diminui,
			a.ie_cnpj,
			a.ie_restringe_estab,
			coalesce(a.ie_desc_nf,'N'),
			coalesce(a.ie_isento,'N') ie_isento,
			a.ie_pf_pj
		from	Tributo a
		where	a.ie_conta_pagar	= 'S'
		and	a.ie_situacao		= 'A'
		and	((coalesce(a.ie_gera_nf_devolucao,'S') = 'S') or (coalesce(a.ie_gera_nf_devolucao,'S') = 'N' and sup_obter_se_nf_devolucao(nr_sequencia_p) = 'N'))
		and	((coalesce(nr_contrato_w,0) > 0) and (ie_gera_trib_geral_w = 'N') and
			exists (select	1
				from 	CONTRATO_REGRA_PAGTO_TRIB d,
					CONTRATO_REGRA_NF c
				where	d.nr_seq_regra_nf	= c.nr_sequencia
				and	d.cd_tributo		= a.cd_tributo
				and	c.nr_seq_contrato	= nr_contrato_w
				and	coalesce(d.ie_regra_trib,'N') = 'S'))
		and	a.ie_corpo_item	in ('C','V')
		and (coalesce(ie_baixa_titulo,'N')	= 'N')
		and	((coalesce(ie_tipo_tributacao_w, 'X') <> '0') or (coalesce(ie_super_simples, 'S') = 'S'))
		and	coalesce(cd_tributo_p, a.cd_tributo)	= a.cd_tributo
		and	((coalesce(ie_pf_pj,'A') 	= 'A') or
			 (ie_pf_pj = 'PF' AND cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') or
			 ((ie_pf_pj = 'PJ') and ((cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') and (coalesce(cd_pessoa_fisica_w::text, '') = ''))))
		and (coalesce(nr_ccm_w::text, '') = '' or coalesce(a.ie_ccm,'S') = 'S')
		and	(((coalesce(ie_previa_p,'N') = 'N') and (not exists (select 1 from nota_fiscal_trib x where x.nr_sequencia = nr_sequencia_p and x.cd_tributo = a.cd_tributo and (coalesce(x.ie_pago_prev,'V') = 'V')
				 
union

				 select 1 from nota_fiscal_venc_trib x where x.nr_sequencia = nr_sequencia_p and x.cd_tributo = a.cd_tributo))) or
			((coalesce(ie_previa_p,'N') = 'S') and (not exists (select 1 from nota_fiscal_trib_prev x where x.nr_seq_nota = nr_sequencia_p and x.cd_tributo = a.cd_tributo and (coalesce(x.ie_pago_prev,'V') = 'V')
				 
union

				 select 1 from nota_fiscal_venc_trib_prev x where x.nr_seq_nota = nr_sequencia_p and x.cd_tributo = a.cd_tributo))))
		and	coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w) a
	order by CASE WHEN a.ie_tipo_tributo='INSS' THEN 1  ELSE 2 END ,
		CASE WHEN a.ie_corpo_item='C' THEN  0  ELSE 1 END ,
		ie_ordem;

C02 CURSOR FOR
	SELECT	0 ie_ordem,
		a.cd_estabelecimento,
		a.cd_cgc,
		a.cd_cgc_emitente,
		a.cd_pessoa_fisica,
		a.dt_emissao dt_vencimento,
		0
	from	nota_fiscal a
	where	a.nr_sequencia	= nr_sequencia_p
	and	ie_corpo_item_w	= 'C'
	
union all

	SELECT	1 ie_ordem,
		a.cd_estabelecimento,
		a.cd_cgc,
		a.cd_cgc_emitente,
		a.cd_pessoa_fisica,
		b.dt_vencimento,
		b.vl_base_venc
	from	nota_fiscal_venc b,
		nota_fiscal a
	where	a.nr_sequencia	= nr_sequencia_p
	and	a.nr_sequencia	= b.nr_sequencia
	and	ie_corpo_item_w	= 'V'
	order	by ie_ordem,
		dt_vencimento asc;		-- Edgar 22/02/2010, OS 194329, troquei o desc pelo asc
C03 CURSOR FOR
	SELECT 	b.cd_tributo,
		b.vl_base_calculo,
		b.vl_tributo,
		b.dt_inicio_vigencia,
		b.dt_fim_vigencia,
		b.cd_pessoa_fisica,
		a.ie_vencimento,
		b.ds_emp_retencao,
		b.ie_tipo_data,
		coalesce(b.ie_pago_prev_nota, 'P'),
		coalesce(a.ie_isento,'N')
	from	pessoa_fisica_trib b,
		tributo a
	where	b.cd_tributo 			= a.cd_tributo
	and	cd_pessoa_fisica 		= cd_pessoa_fisica_w
	and	((b.cd_estabelecimento = cd_estabelecimento_w) or (coalesce(b.cd_estabelecimento::text, '') = ''))
	and	dt_emissao_w between b.dt_inicio_vigencia and dt_fim_vigencia
	and (coalesce(nr_ccm_w::text, '') = '' or coalesce(a.ie_ccm,'S') = 'S')
	and	ie_gerar_w = 'S';

C04 CURSOR FOR
	SELECT	a.cd_material,  --OS630365
		a.vl_liquido
	from	estrutura_material_v	b,
		nota_fiscal_item	a,
		tributo_conta_pagar x
	where	a.cd_material	= b.cd_material
	and	a.nr_sequencia	= nr_sequencia_p
	and	obter_se_estrutura_mat(x.cd_grupo_material, x.cd_subgrupo_material, x.cd_classe_material, x.cd_material, a.cd_material, 'S') = 'S'
	and	((x.cd_material		= a.cd_material) or (x.cd_grupo_material	= b.cd_grupo_material) or (x.cd_subgrupo_material	= b.cd_subgrupo_material) or (x.cd_classe_material	= b.cd_classe_material))
	and	((coalesce(x.cd_pessoa_juridica::text, '') = '' and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_juridica = cd_cgc_w and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_fisica = cd_pessoa_fisica_w and coalesce(x.cd_pessoa_juridica::text, '') = ''))
	and (coalesce(x.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w)
	and (coalesce(x.cd_empresa, cd_empresa_w) = cd_empresa_w)
	and	dt_emissao_w between coalesce(dt_inicio_vigencia, dt_emissao_w - 1) and coalesce(dt_fim_vigencia, dt_emissao_w + 1)
	and	x.cd_tributo	= cd_tributo_w
	and	x.pr_aliquota <> 0
	and	not exists(	SELECT	1
				from	tributo_conta_pagar y
				where	((y.cd_material		= a.cd_material) or (y.cd_grupo_material	= b.cd_grupo_material) or (y.cd_subgrupo_material	= b.cd_subgrupo_material) or (y.cd_classe_material	= b.cd_classe_material))
				  and	y.pr_aliquota = 0
				  and	y.cd_tributo = cd_tributo_w)
	order by b.cd_grupo_material,
		 b.cd_subgrupo_material,
		 b.cd_classe_material,
		 b.cd_material;


BEGIN

ie_gerar_w := obter_valor_param_usuario(40, 214, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w);

if (coalesce(ie_gerar_w,'N') = 'S')
and (coalesce(ie_deletar_p, 'N') = 'S') then
	select count(*)
	into STRICT	ie_count_trib_count_w
	from	nota_fiscal_trib x
	where	x.nr_sequencia = nr_sequencia_p  LIMIT 1;

  if (ie_count_trib_count_w > 0) then
    delete from nota_fiscal_trib a
	   where a.nr_sequencia = nr_sequencia_p
       and (a.nr_seq_regra_trib IS NOT NULL AND a.nr_seq_regra_trib::text <> '');

  	delete from nota_fiscal_venc_trib b
	   where b.nr_sequencia = nr_sequencia_p
       and (b.nr_seq_regra_trib IS NOT NULL AND b.nr_seq_regra_trib::text <> '');
  end if;
end if;

if (coalesce(ie_previa_p,'N') = 'S') then
	delete from nota_fiscal_trib_prev
	where nr_seq_nota = nr_sequencia_p;

	delete from nota_fiscal_venc_trib_prev
	where nr_seq_nota = nr_sequencia_p;
end if;

select	cd_estabelecimento,
	cd_cgc,
	cd_cgc_emitente,
	cd_pessoa_fisica,
	dt_emissao,
	cd_condicao_pagamento,
	obter_cnpj_raiz(cd_cgc),
	obter_cnpj_raiz(cd_cgc_emitente),
	cd_natureza_operacao,
	cd_tipo_servico,
	cd_operacao_nf,
	coalesce(vl_descontos,0),
	obter_empresa_estab(cd_estabelecimento)
into STRICT	cd_estabelecimento_w,
	cd_cgc_w,
	cd_cgc_emitente_w,
	CD_pessoa_fisica_w,
	dt_emissao_w,
	cd_condicao_pagamento_w,
	cd_cnpj_raiz_w,
	cd_cnpj_emitente_raiz_w,
	cd_natureza_operacao_w,
	cd_tipo_servico_w,
	cd_operacao_nf_w,
	vl_desc_nf_w,
	cd_empresa_w
from	nota_fiscal
where	nr_sequencia = nr_sequencia_p;

select	coalesce(max(ie_gera_tributo_geral),'N')
into STRICT	ie_gera_trib_geral_w
from	parametro_compras
where	cd_estabelecimento = cd_estabelecimento_w;

if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
	select	max(nr_ccm)
	into STRICT	nr_ccm_w
	from	pessoa_fisica
	where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
end if;

select	ie_forma_pagamento
into STRICT	ie_forma_pagamento_w
from	condicao_pagamento
where	cd_condicao_pagamento = cd_condicao_pagamento_w;

select	coalesce(sum(vl_liquido),0)
into STRICT	vl_liquido_original_w
from	nota_fiscal_item
where	nr_sequencia = nr_sequencia_p;

select	max(coalesce(nr_contrato,0))
into STRICT	nr_contrato_w
from	nota_fiscal_item
where	nr_sequencia = nr_sequencia_p;

-- afstringari 166959 16/10/2009
select	max(ie_tipo_tributacao)
into STRICT	ie_tipo_tributacao_w
from	pessoa_juridica
where	cd_cgc	= cd_cgc_w;


ie_gerar_w := obter_valor_param_usuario(40, 221, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w);

if (ie_gerar_w = 'S') then
	begin
	begin
	-- Se for nota de devolucao nao gerar o imposto
	select	ie_devolucao
	into STRICT	ie_gerar_w
	from	operacao_nota o,
		nota_fiscal a
	where	a.cd_operacao_nf = o.cd_operacao_nf
	and	a.nr_sequencia = nr_sequencia_p;
	ie_gerar_w := case ie_gerar_w when 'S' then 'N' else 'S' end;
	exception
	when others then
		ie_gerar_w := 'S';
	end;
	end;
end if;

open C03;
loop
fetch C03 into
	cd_tributo_pf_w,
	vl_base_tributo_pf_w,
	vl_tributo_pf_w,
	dt_inicio_vigencia_w,
	dt_fim_vigencia_w,
	cd_pessoa_fisica_pf_w,
	ie_vencimento_pf_w,
	ds_emp_retencao_w,
	ie_tipo_data_w,
	ie_pago_prev_rep_w,
	ie_isento_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin

	if (coalesce(ie_previa_p,'N') = 'N') then
		select	count(*)
		into STRICT	qt_registro_w
		from	nota_fiscal_trib a,
			nota_fiscal b
		where	a.nr_sequencia		= b.nr_sequencia
		and	a.cd_tributo		= cd_tributo_pf_w
		and	b.cd_pessoa_fisica	= cd_pessoa_fisica_pf_w
		and	b.ie_situacao		not in (2,3,8,9)
		and	trunc(b.dt_emissao,'month')	= trunc(dt_emissao_w,'month')  LIMIT 1;


		if (qt_registro_w = 0) then
			begin
			if (ie_isento_w = 'S') then
				begin


				insert into nota_fiscal_trib(
					nr_seq_interno,
					nr_sequencia,
					cd_tributo,
					dt_atualizacao,
					dt_atualizacao_nrec,
					ie_pago_prev,
					nm_usuario,
					nm_usuario_nrec,
					tx_tributo,
					vl_base_adic,
					vl_base_calculo,
					vl_base_nao_retido,
					vl_tributo,
					vl_trib_adic,
					vl_trib_nao_retido)
				values (nextval('nota_fiscal_trib_seq'),
					nr_sequencia_p,
					cd_tributo_pf_w,
					clock_timestamp(),
					clock_timestamp(),
					ie_pago_prev_rep_w,
					nm_usuario_p,
					nm_usuario_p,
					0,
					0,
					0,
					0,
					0,
					0,
					0);
				end;
			else
				begin
				insert into nota_fiscal_trib(
					nr_seq_interno,
					nr_sequencia,
					cd_tributo,
					dt_atualizacao,
					dt_atualizacao_nrec,
					ie_pago_prev,
					nm_usuario,
					nm_usuario_nrec,
					tx_tributo,
					vl_base_adic,
					vl_base_calculo,
					vl_base_nao_retido,
					vl_tributo,
					vl_trib_adic,
					vl_trib_nao_retido)
				values (nextval('nota_fiscal_trib_seq'),
					nr_sequencia_p,
					cd_tributo_pf_w,
					clock_timestamp(),
					clock_timestamp(),
					ie_pago_prev_rep_w,
					nm_usuario_p,
					nm_usuario_p,
					0,
					0,
					vl_base_tributo_pf_w,
					0,
					vl_tributo_pf_w,
					0,
					0);
				end;
			end if;
			end;
		end if;
	else
		select	count(*)
		into STRICT	qt_registro_w
		from	nota_fiscal_trib_prev a,
			nota_fiscal b
		where	a.nr_seq_nota		= b.nr_sequencia
		and	a.cd_tributo		= cd_tributo_pf_w
		and	b.cd_pessoa_fisica	= cd_pessoa_fisica_pf_w
		and	trunc(b.dt_emissao,'month')	= trunc(dt_emissao_w,'month')  LIMIT 1;

		if (qt_registro_w = 0) then

			insert into nota_fiscal_trib_prev(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_nota,
				cd_tributo,
				vl_tributo,
				vl_base_calculo,
				tx_tributo,
				vl_reducao_base,
				vl_trib_nao_retido,
				vl_base_nao_retido,
				vl_trib_adic,
				vl_base_adic,
				vl_reducao,
				vl_bc_matriz_filial,
				ie_pago_prev)
			values (	nextval('nota_fiscal_trib_prev_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_sequencia_p,
				cd_tributo_pf_w,
				vl_tributo_pf_w,
				vl_base_tributo_pf_w,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				ie_pago_prev_rep_w);
		end if;
	end if;
	end;
end loop;
close C03;

OPEN C01;
LOOP
FETCH C01 into
	ie_ordem_w,
	cd_tributo_w,
	ie_tipo_tributo_w,
	ie_apuracao_piso_w,
	ie_corpo_item_w,
	ie_soma_diminui_w,
	IE_CNPJ_w,
	ie_restringe_estab_w,
	ie_desc_nf_w,
	ie_isento_w,
	ie_pf_pj_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	-- Edgar, 07/12/2007, OS 71984, recalcular os vencimentos qdo os tributos do corpo da NF forem gerados
	if (ie_corpo_item_ant_w = 'C') and (ie_corpo_item_w = 'V') and (ie_forma_pagamento_w <> 10) then
		CALL gerar_vencimento_nota_fiscal(nr_sequencia_p, nm_usuario_p);
	end if;
	ie_corpo_item_ant_w		:= ie_corpo_item_w;

	open C02;
	loop
	fetch C02 into
		ie_ordem_w,
		cd_estabelecimento_w,
		cd_cgc_w,
		cd_cgc_emitente_w,
		CD_pessoa_fisica_w,
		dt_emissao_w,
		vl_base_venc_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */

		vl_liquido_w				:= vl_liquido_original_w;
		if (ie_desc_nf_w = 'S') then
			vl_liquido_w			:= vl_liquido_w - vl_desc_nf_w;
		end if;

		if (ie_corpo_item_w = 'V') and (ie_forma_pagamento_w <> 10) then	/*conforme vencimentos*/
			vl_liquido_w			:= vl_base_venc_w;
		end if;

		PR_IMPOSTO_W			:= 0;

		if (coalesce(ie_previa_p,'N') = 'N') then
			select	count(*)
			into STRICT	qt_pago_outros_w
			from	nota_fiscal_trib
			where	nr_sequencia	= nr_sequencia_p
			and	cd_tributo	= cd_tributo_w
			and	ie_pago_prev	= 'P';
		else
			select	count(*)
			into STRICT	qt_pago_outros_w
			from	nota_fiscal_trib_prev
			where	nr_seq_nota	= nr_sequencia_p
			and	cd_tributo	= cd_tributo_w
			and	ie_pago_prev	= 'P';
		end if;

		cd_material_regra_w	:= null;
		vl_item_nf_estrut_w	:= null;

		select	count(distinct a.cd_material)
		into STRICT	qt_regra_duplicada_w
		from	estrutura_material_v	b,
			nota_fiscal_item	a
		where	exists
			(SELECT	1
			from	tributo_conta_pagar x
			where	obter_se_estrutura_mat(x.cd_grupo_material, x.cd_subgrupo_material, x.cd_classe_material, x.cd_material, a.cd_material, 'S') = 'S'
			and	((x.cd_material		= a.cd_material) or (x.cd_grupo_material	= b.cd_grupo_material) or (x.cd_subgrupo_material	= b.cd_subgrupo_material) or (x.cd_classe_material	= b.cd_classe_material))
			and	((coalesce(x.cd_pessoa_juridica::text, '') = '' and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_juridica = cd_cgc_w and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_fisica = cd_pessoa_fisica_w and coalesce(x.cd_pessoa_juridica::text, '') = ''))
			and (coalesce(x.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w)
			and (coalesce(x.cd_empresa, cd_empresa_w) = cd_empresa_w)
			and	dt_emissao_w between coalesce(dt_inicio_vigencia, dt_emissao_w - 1) and coalesce(dt_fim_vigencia, dt_emissao_w + 1)
			and	x.cd_tributo	= cd_tributo_w
			having	count(*) > 1)
		and	a.cd_material	= b.cd_material
		and	a.nr_sequencia	= nr_sequencia_p;

		if (qt_regra_duplicada_w = 0) then -- aqui q ta, vai pegar do maior codigo
			select	max(a.cd_material),
				sum(a.vl_liquido)
			into STRICT	cd_material_regra_w,
				vl_item_nf_estrut_w
			from	estrutura_material_v	b,
				nota_fiscal_item	a
			where	exists
				(SELECT	1
				from	tributo_conta_pagar x
				where	obter_se_estrutura_mat(x.cd_grupo_material, x.cd_subgrupo_material, x.cd_classe_material, x.cd_material, a.cd_material, 'S') = 'S'
				and	((x.cd_material		= a.cd_material) or (x.cd_grupo_material	= b.cd_grupo_material) or (x.cd_subgrupo_material	= b.cd_subgrupo_material) or (x.cd_classe_material	= b.cd_classe_material))
				and	((coalesce(x.cd_pessoa_juridica::text, '') = '' and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_juridica = cd_cgc_w and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_fisica = cd_pessoa_fisica_w and coalesce(x.cd_pessoa_juridica::text, '') = ''))
				and (coalesce(x.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w)
				and	dt_emissao_w between coalesce(dt_inicio_vigencia, dt_emissao_w - 1) and coalesce(dt_fim_vigencia, dt_emissao_w + 1)
				and	x.cd_tributo	= cd_tributo_w
				and (x.pr_aliquota <> 0 or ie_isento_w = 'S'))
			and	a.cd_material	= b.cd_material
			and	a.nr_sequencia	= nr_sequencia_p;
		else
			vl_item_nf_estrut_w := 0;
			open C04;
				loop
				fetch C04 into	--OS630365
					cd_material_regra_w,
					vl_item_nf_estrut_ww;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin
					cd_material_regra_w := cd_material_regra_w;
					vl_item_nf_estrut_w := vl_item_nf_estrut_w + vl_item_nf_estrut_ww;
					end;
				end loop;
				close C04;

		end if;

		SELECT * FROM OBTER_DADOS_TRIB_TIT_PAGAR(CD_TRIBUTO_w, CD_ESTABELECIMENTO_w, CD_CGC_w, CD_pessoa_fisica_w, CD_BENEFICIARIO_w, PR_IMPOSTO_W, CD_COND_PAGTO_w, CD_CONTA_FINANC_w, NR_SEQ_TRANS_REG_w, NR_SEQ_TRANS_BAIXA_w, VL_MINIMO_BASE_CALCULO_W, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_darf_w, dt_emissao_w, cd_variacao_w, ie_periodicidade_w, null, cd_natureza_operacao_w, cd_tipo_servico_w, cd_material_regra_w, null, null, nr_seq_regra_w, cd_operacao_nf_w, qt_pago_outros_w, nr_seq_classe_w, cd_tipo_baixa_neg_w, vl_liquido_w, 'N', null, null, null, null) INTO STRICT CD_BENEFICIARIO_w, PR_IMPOSTO_W, CD_COND_PAGTO_w, CD_CONTA_FINANC_w, NR_SEQ_TRANS_REG_w, NR_SEQ_TRANS_BAIXA_w, VL_MINIMO_BASE_CALCULO_W, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_darf_w, cd_variacao_w, ie_periodicidade_w, nr_seq_regra_w, nr_seq_classe_w, cd_tipo_baixa_neg_w;

		select	coalesce(max(a.ie_estrut_mat_nf),'N')
		into STRICT	ie_estrut_mat_nf_w
		from	tributo_conta_pagar	a
		where	a.nr_sequencia	= nr_seq_regra_w;

		if (ie_estrut_mat_nf_w = 'S') then
			vl_liquido_w	:= vl_item_nf_estrut_w;
		end if;

		select	max(a.cd_estabelecimento),
			max(a.cd_empresa)
		into STRICT	cd_estab_regra_w,
			cd_empresa_regra_w
		from	tributo_conta_pagar a
		where	a.nr_sequencia	= nr_seq_regra_w;

		vl_tributo_w	:= (vl_liquido_w * PR_IMPOSTO_W) / 100;

		if (pr_imposto_w > 0) then
			vl_soma_trib_nao_retido_w := 0;
			vl_soma_base_nao_retido_w := 0;
			vl_soma_trib_adic_w       := 0;
			vl_soma_base_adic_w       := 0;
			vl_trib_anterior_w        := 0;
			VL_TOTAL_BASE_w           := 0;
			vl_reducao_w              := 0;

			if (ie_acumulativo_w = 'S') then
				select	coalesce(sum(a.vl_soma_trib_nao_retido),0),
					coalesce(sum(a.vl_soma_base_nao_retido),0),
					coalesce(sum(a.vl_soma_trib_adic),0),
					coalesce(sum(a.vl_soma_base_adic),0),
					coalesce(sum(a.vl_tributo),0),
					coalesce(sum(a.vl_total_base),0),
					coalesce(sum(a.vl_reducao),0)
				into STRICT	vl_soma_trib_nao_retido_w,
					vl_soma_base_nao_retido_w,
					vl_soma_trib_adic_w,
					vl_soma_base_adic_w,
					vl_trib_anterior_w,
					VL_TOTAL_BASE_w,
					vl_reducao_w
				from	valores_tributo_v a
				where	a.cd_tributo			= cd_tributo_w
				and	trunc(a.dt_tributo, 'month')	= trunc(dt_emissao_w, 'month')
				and	(
					  (
					    ((coalesce(a.cd_cgc_emitente, 'X') = coalesce(cd_cgc_emitente_w, 'X')) and (a.ie_origem_valores = 'NFE')) or
					    (ie_cnpj_w = 'Empresa' AND cd_cnpj_emitente_raiz = cd_cnpj_emitente_raiz_w)
					  ) or
					  (
					    (coalesce(a.cd_cgc_emitente::text, '') = '') and (a.ie_origem_valores <> 'NFE')
					  )
					)
				and	(
					  ((cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and a.cd_pessoa_fisica = cd_pessoa_fisica_w) or
					  (
					    (coalesce(cd_pessoa_fisica_w::text, '') = '') and (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') and (coalesce(a.cd_pessoa_fisica::text, '') = '') and
					    (
					       (a.cd_cgc 		= cd_cgc_w) or
					       (IE_CNPJ_w = 'Empresa' AND a.cd_cnpj_raiz = cd_cnpj_raiz_w)
					    )
					  )
					)
				and (a.ie_origem_valores		= 'NFE' or ie_apuracao_piso_w = 'S')
				and	((ie_restringe_estab_w		= 'N') or (a.cd_estabelecimento		= cd_estabelecimento_w) or (a.cd_estab_financeiro		= cd_estabelecimento_w) or (coalesce(cd_estab_regra_w::text, '') = '' and a.cd_empresa = cd_empresa_regra_w))
				and (ie_apuracao_piso_w		= 'N' or
					ie_apuracao_piso_w		= ie_base_calculo)
				and	ie_baixa_titulo			= 'N';
			elsif (ie_acumulativo_w = 'D') then
				select	coalesce(sum(a.vl_soma_trib_nao_retido),0),
					coalesce(sum(a.vl_soma_base_nao_retido),0),
					coalesce(sum(a.vl_soma_trib_adic),0),
					coalesce(sum(a.vl_soma_base_adic),0),
					coalesce(sum(a.vl_tributo),0),
					coalesce(sum(a.vl_total_base),0),
					coalesce(sum(a.vl_reducao),0)
				into STRICT	vl_soma_trib_nao_retido_w,
					vl_soma_base_nao_retido_w,
					vl_soma_trib_adic_w,
					vl_soma_base_adic_w,
					vl_trib_anterior_w,
					VL_TOTAL_BASE_w,
					vl_reducao_w
				from	valores_tributo_v a
				where	a.cd_tributo			= cd_tributo_w
				and 	a.ie_tipo_tributo		in ('IR', 'ISRDOM')
				and 	ie_pf_pj_w			= 'PJ'
				and 	ie_acumulativo_w		= 'D'
				and	pkg_date_utils.start_of(a.dt_tributo, 'DAY', 0)	= pkg_date_utils.start_of(dt_emissao_w, 'DAY', 0)
				and	(
					  (
					    ((coalesce(a.cd_cgc_emitente, 'X') = coalesce(cd_cgc_emitente_w, 'X')) and (a.ie_origem_valores = 'NFE')) or
					    (ie_cnpj_w = 'Empresa' AND cd_cnpj_emitente_raiz = cd_cnpj_emitente_raiz_w)
					  ) or
					  (
					    (coalesce(a.cd_cgc_emitente::text, '') = '') and (a.ie_origem_valores <> 'NFE')
					  )
					)
				and	(
					  ((cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and a.cd_pessoa_fisica = cd_pessoa_fisica_w) or
					  (
					    (coalesce(cd_pessoa_fisica_w::text, '') = '') and (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') and (coalesce(a.cd_pessoa_fisica::text, '') = '') and
					    (
					       (a.cd_cgc 		= cd_cgc_w) or
					       (IE_CNPJ_w = 'Empresa' AND a.cd_cnpj_raiz = cd_cnpj_raiz_w)
					    )
					  )
					)
				and (a.ie_origem_valores		= 'NFE' or ie_apuracao_piso_w = 'S')
				and	((ie_restringe_estab_w		= 'N') or (a.cd_estabelecimento		= cd_estabelecimento_w) or (a.cd_estab_financeiro		= cd_estabelecimento_w) or (coalesce(cd_estab_regra_w::text, '') = '' and a.cd_empresa = cd_empresa_regra_w))
				and (ie_apuracao_piso_w		= 'N' or
					ie_apuracao_piso_w		= ie_base_calculo)
				and	ie_baixa_titulo			= 'N';
			end if;

			ie_irpf_w			:= 'N';
			ie_irpj_w			:= 'N';

			if (ie_tipo_tributo_w = 'IR') and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then

				if (coalesce(ie_previa_p,'N') = 'N') then
					select	coalesce(sum(a.vl_tributo),0)
					into STRICT	vl_inss_w
					from	tributo b,
						nota_fiscal_trib a
					where	a.cd_tributo		= b.cd_tributo
					and	a.nr_sequencia		= nr_sequencia_p
					and	b.ie_tipo_tributo		= 'INSS';
				else
					select	coalesce(sum(a.vl_tributo),0)
					into STRICT	vl_inss_w
					from	tributo b,
						nota_fiscal_trib_prev a
					where	a.cd_tributo		= b.cd_tributo
					and	a.nr_seq_nota		= nr_sequencia_p
					and	b.ie_tipo_tributo		= 'INSS';
				end if;

				select	coalesce(qt_dependente,0)
				into STRICT	qt_dependente_w
				from	pessoa_fisica
				where	cd_pessoa_fisica	= cd_pessoa_fisica_w;

				ie_irpf_w			:= 'S';
				vl_liquido_w			:= vl_liquido_w - vl_inss_w;
			elsif (ie_tipo_tributo_w = 'IR' AND cd_cgc_emitente_w IS NOT NULL AND cd_cgc_emitente_w::text <> '') then
				ie_irpj_w:=	'S';
			elsif (ie_tipo_tributo_w = 'ISRDOM') then
				if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
					select	coalesce(qt_dependente,0)
					into STRICT	qt_dependente_w
					from	pessoa_fisica
					where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
					ie_irpf_w			:= 'S';
				elsif (cd_cgc_emitente_w IS NOT NULL AND cd_cgc_emitente_w::text <> '') then
					ie_irpj_w:=	'S';
				end if;
			end if;

			if (coalesce(ie_previa_p,'N') = 'N') then
				select	coalesce(sum(vl_base_calculo),0),
					coalesce(sum(vl_tributo),0)
				into STRICT	vl_base_calculo_paga_w,
					vl_pago_w
				from	nota_fiscal_trib
				where	nr_sequencia	= nr_sequencia_p
				and	cd_tributo	= cd_tributo_w
				and	ie_pago_prev	= 'P';
			else
				select	coalesce(sum(vl_base_calculo),0),
					coalesce(sum(vl_tributo),0)
				into STRICT	vl_base_calculo_paga_w,
					vl_pago_w
				from	nota_fiscal_trib_prev
				where	nr_seq_nota	= nr_sequencia_p
				and	cd_tributo	= cd_tributo_w
				and	ie_pago_prev	= 'P';
			end if;


			if (coalesce(vl_pago_w,0) > 0) then
				vl_base_calculo_paga_w	:= 0;
			end if;

			if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then /* reducao_base */
				select	coalesce(max(pr_reducao_base),0)
				into STRICT	pr_reducao_base_w
				from 	tributo_conta_pagar
				where	nr_sequencia	= nr_seq_regra_w;

				if (coalesce(pr_reducao_base_w,0) > 0) then
					vl_liquido_w	:= (vl_liquido_w - ((pr_reducao_base_w/100) * vl_liquido_w));
				end if;
			end if;

			select	coalesce(sum(vl_base_calculo),0)
			into STRICT	vl_base_retido_outro_w
			from	nota_fiscal_trib
			where	nr_sequencia		= nr_sequencia_p
			and	cd_tributo		= cd_tributo_w
			and	ie_pago_prev	= 'R';

			SELECT * FROM OBTER_VALORES_TRIBUTO(	ie_acumulativo_w, pr_imposto_w, vl_minimo_base_calculo_w, vl_minimo_tributo_w, vl_soma_trib_nao_retido_w, vl_soma_trib_adic_w, vl_soma_base_nao_retido_w, vl_soma_base_adic_w, vl_liquido_w, vl_tributo_w, vl_trib_nao_retido_w, vl_trib_adic_w, vl_base_nao_retido_w, vl_base_adic_w, vl_teto_base_w, vl_trib_anterior_w, ie_irpf_w, vl_total_base_w, vl_reducao_w, vl_desc_dependente_w, qt_dependente_w, vl_base_calculo_paga_w, null, vl_base_retido_outro_w,  -- AQUI
						obter_outras_reducoes_irpf(cd_pessoa_fisica_w, cd_estabelecimento_w, dt_emissao_w), clock_timestamp(), nr_seq_regra_irpf_w, cd_tributo_w, ie_irpj_w) INTO STRICT pr_imposto_w, vl_liquido_w, vl_tributo_w, vl_trib_nao_retido_w, vl_trib_adic_w, vl_base_nao_retido_w, vl_base_adic_w, vl_reducao_w, vl_desc_dependente_w, nr_seq_regra_irpf_w;

			if (vl_pago_w < vl_tributo_w) then
				vl_tributo_w	:= vl_tributo_w - vl_pago_w;
			end if;

			-- Edgar 13/01/2010, OS 188297
			if (vl_tributo_w > vl_liquido_original_w) then
				vl_tributo_w	:= vl_liquido_original_w;
			end if;

			if (vl_tributo_w < 0) then
				vl_tributo_w	:= 0;
			end if;

			/* ahoffelder - OS 345038 - 24/08/2011 -	adicionei o qt_regra_material_w para nao gerar o tributo se
									existir mais de uma regra especifica para um mesmo material da NF */
			--if	(ie_corpo_item_w = 'C') and (nvl(qt_regra_duplicada_w,0) = 0) then
			if (ie_corpo_item_w = 'C') then

				if (coalesce(ie_previa_p,'N') = 'N') then

						insert	into nota_fiscal_trib(nr_sequencia,
							cd_tributo,
							vl_tributo,
							dt_atualizacao,
							nm_usuario,
							vl_base_calculo,
							tx_tributo,
							vl_reducao_base,
							vl_trib_nao_retido,
							vl_base_nao_retido,
							vl_trib_adic,
							vl_base_adic,
							vl_reducao,
							cd_darf,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ie_periodicidade,
							cd_variacao,
							ie_origem_trib,
							nr_seq_regra_trib,
							nr_seq_interno)
						values (nr_sequencia_p,
							cd_tributo_w,
							vl_tributo_w,
							clock_timestamp(),
							nm_usuario_p,
							vl_liquido_w,
							pr_imposto_w,
							vl_desc_dependente_w,
							vl_trib_nao_retido_w,
							vl_base_nao_retido_w,
							vl_trib_adic_w,
							vl_base_adic_w,
							vl_reducao_w,
							cd_darf_w,
							clock_timestamp(),
							nm_usuario_p,
							ie_periodicidade_w,
							cd_variacao_w,
							'N',
							nr_seq_regra_w,
							nextval('nota_fiscal_trib_seq'));
				else
					insert into nota_fiscal_trib_prev(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_nota,
						cd_tributo,
						vl_tributo,
						vl_base_calculo,
						tx_tributo,
						vl_reducao_base,
						vl_trib_nao_retido,
						vl_base_nao_retido,
						vl_trib_adic,
						vl_base_adic,
						nr_seq_regra_trib,
						vl_reducao)
					values (	nextval('nota_fiscal_trib_prev_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_sequencia_p,
						cd_tributo_w,
						vl_tributo_w,
						vl_liquido_w,
						pr_imposto_w,
						vl_desc_dependente_w,
						vl_trib_nao_retido_w,
						vl_base_nao_retido_w,
						vl_trib_adic_w,
						vl_base_adic_w,
						nr_seq_regra_w,
						vl_reducao_w);
				end if;

			/* ahoffelder - OS 345038 - 24/08/2011 -	adicionei o qt_regra_material_w para nao gerar o tributo se
									existir mais de uma regra especifica para um mesmo material da NF */
			--elsif	(ie_corpo_item_w = 'V') and (nvl(qt_regra_duplicada_w,0) = 0) then
			elsif (ie_corpo_item_w = 'V') then
				if (coalesce(ie_previa_p,'N') = 'N') then

					insert	into nota_fiscal_venc_trib(nr_sequencia,
						dt_vencimento,
						cd_tributo,
						vl_tributo,
						dt_atualizacao,
						nm_usuario,
						vl_base_calculo,
						tx_tributo,
						vl_desc_base,
						vl_trib_nao_retido,
						vl_base_nao_retido,
						vl_trib_adic,
						vl_base_adic,
						vl_reducao,
						cd_darf,
						ie_origem,
						nr_seq_regra_trib)
					values (nr_sequencia_p,
						dt_emissao_w,
						cd_tributo_w,
						vl_tributo_w,
						clock_timestamp(),
						nm_usuario_p,
						vl_liquido_w,
						pr_imposto_w,
						vl_desc_dependente_w,
						vl_trib_nao_retido_w,
						vl_base_nao_retido_w,
						vl_trib_adic_w,
						vl_base_adic_w,
						vl_reducao_w,
						cd_darf_w,
						'N',
						nr_seq_regra_w);

					update	nota_fiscal_venc
					set	vl_vencimento	= vl_vencimento + (CASE WHEN ie_soma_diminui_w='S' THEN  vl_tributo_w WHEN ie_soma_diminui_w='D' THEN  vl_tributo_w * -1  ELSE 0 END )
					where	nr_sequencia	= nr_sequencia_p
					and	dt_vencimento	= dt_emissao_w;
				else
					insert into nota_fiscal_venc_trib_prev(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_nota,
						dt_vencimento,
						cd_tributo,
						vl_tributo,
						vl_base_calculo,
						tx_tributo,
						vl_trib_nao_retido,
						vl_base_nao_retido,
						vl_trib_adic,
						vl_base_adic,
						vl_reducao,
						vl_desc_base,
						ie_origem,
						nr_seq_regra_trib)
					values (	nextval('nota_fiscal_venc_trib_prev_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_sequencia_p,
						dt_emissao_w,
						cd_tributo_w,
						vl_tributo_w,
						vl_liquido_w,
						pr_imposto_w,
						vl_trib_nao_retido_w,
						vl_base_nao_retido_w,
						vl_trib_adic_w,
						vl_base_adic_w,
						vl_reducao_w,
						vl_desc_dependente_w,
						'N',
						nr_seq_regra_w);
				end if;
			end if;
		else
			if (coalesce(ie_previa_p,'N') = 'N') then

				if (ie_corpo_item_w = 'C') then

					if (ie_isento_w = 'S') and (pr_imposto_w = 0) then

						insert	into nota_fiscal_trib(nr_sequencia,
								cd_tributo,
								vl_tributo,
								dt_atualizacao,
								nm_usuario,
								vl_base_calculo,
								tx_tributo,
								vl_reducao_base,
								vl_trib_nao_retido,
								vl_base_nao_retido,
								vl_trib_adic,
								vl_base_adic,
								vl_reducao,
								cd_darf,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								ie_periodicidade,
								cd_variacao,
								ie_origem_trib,
								nr_seq_regra_trib,
								nr_seq_interno)
							values (nr_sequencia_p,
								cd_tributo_w,
								vl_tributo_w,
								clock_timestamp(),
								nm_usuario_p,
								vl_liquido_w,
								0,
								0,
								0,
								0,
								0,
								0,
								0,
								cd_darf_w,
								clock_timestamp(),
								nm_usuario_p,
								ie_periodicidade_w,
								cd_variacao_w,
								'N',
								nr_seq_regra_w,
								nextval('nota_fiscal_trib_seq'));
						end if;

				elsif (ie_corpo_item_w = 'V') then

					if (ie_isento_w = 'S') and (pr_imposto_w = 0) then
						insert	into nota_fiscal_venc_trib(nr_sequencia,
							dt_vencimento,
							cd_tributo,
							vl_tributo,
							dt_atualizacao,
							nm_usuario,
							vl_base_calculo,
							tx_tributo,
							vl_desc_base,
							vl_trib_nao_retido,
							vl_base_nao_retido,
							vl_trib_adic,
							vl_base_adic,
							vl_reducao,
							cd_darf,
							ie_origem,
							nr_seq_regra_trib)
						values (nr_sequencia_p,
							dt_emissao_w,
							cd_tributo_w,
							vl_tributo_w,
							clock_timestamp(),
							nm_usuario_p,
							vl_liquido_w,
							0,
							0,
							0,
							0,
							0,
							0,
							0,
							cd_darf_w,
							'N',
							nr_seq_regra_w);
					end if;
				end if;
			end if;
		end if;

	end loop;
	close c02;
END LOOP;
CLOSE C01;

-- Edgar 19/02/2007, OS 50572, tratar vencimentos
select	count(*)
into STRICT	cont_w
from	nota_fiscal_venc_trib
where	nr_sequencia	= nr_sequencia_p  LIMIT 1;

if (cont_w > 0) and (coalesce(ie_previa_p,'N') = 'N') then

	CALL atualiza_total_nota_fiscal(nr_sequencia_p, nm_usuario_p);

	select	vl_total_nota
	into STRICT	vl_total_nota_w
	from	nota_fiscal
	where	nr_sequencia	= nr_sequencia_p;

	select	coalesce(sum(vl_vencimento),0)
	into STRICT	vl_vencimento_w
	from	nota_fiscal_venc
	where	nr_sequencia	= nr_sequencia_p;

	if (coalesce(vl_vencimento_w,0) <> coalesce(vl_total_nota_w,0)) then
		update	nota_fiscal_venc
		set	vl_vencimento	= vl_vencimento + vl_total_nota_w - vl_vencimento_w
		where	nr_sequencia	= nr_sequencia_p
		and	dt_vencimento	= dt_emissao_w;
	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_tributos_fornecedor ( nr_sequencia_p bigint, cd_tributo_p bigint, nm_usuario_p text, dt_vigencia_p timestamp, ie_previa_p text default 'N', ie_deletar_p text default null) FROM PUBLIC;

