-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_insert_beneficiario_api (nm_usuario_p text, cd_estabelecimento_p bigint, ie_evento_p text) AS $body$
DECLARE


cd_pessoa_fisica_w pessoa_fisica.cd_pessoa_fisica%type;
cd_convenio_w parametro_agenda_integrada.cd_conv_operadora%type;
dt_nascimento_w pessoa_fisica.dt_nascimento%type;
nm_pessoa_fisica_w pessoa_fisica.nm_pessoa_fisica%type;
ie_sexo_w pessoa_fisica.ie_sexo%type;
nr_cpf_w pessoa_fisica.nr_cpf%type;
nr_telefone_celular_w pessoa_fisica.nr_telefone_celular%type;
nr_ddd_celular_w pessoa_fisica.nr_ddd_celular%type;
cd_usuario_convenio_tit_w pessoa_titular_convenio.cd_usuario_convenio%type;
cd_usuario_convenio_w pessoa_titular_convenio.cd_usuario_convenio_tit%type;
cd_plano_convenio_w pessoa_titular_convenio.cd_plano_convenio%type;
ds_plano_convenio_w convenio_plano.ds_plano%type;
nr_sequencia_json_w json_schema_t.nr_sequencia%type;
dt_nascimento_d_w pessoa_fisica_dependente.dt_nascimento%type;
nm_dependente_w  pessoa_fisica_dependente.nm_dependente%type;
ie_sexo_d_w pessoa_fisica.ie_sexo%type;
cd_usuario_convenio_d_w pessoa_titular_convenio.cd_usuario_convenio%type;
nr_cpf_d_w pessoa_fisica_dependente.nr_cpf%type;
cd_pessoa_fisica_d_w pessoa_fisica.cd_pessoa_fisica%type;
cd_pessoa_fisica_tit_w pessoa_fisica.cd_pessoa_fisica%type;
nm_pessoa_fisica_d_w pessoa_fisica.nm_pessoa_fisica%type;
ie_grau_parentesco_w pessoa_fisica_dependente.ie_grau_parentesco%type;
ie_grau_dependencia_w pessoa_titular_convenio.ie_grau_dependencia%TYPE;
cd_pf_w pessoa_fisica.cd_pessoa_fisica%type := null;

dt_atualizacao_w timestamp := clock_timestamp();
pf_tit_w bigint;
pf_dep_w bigint;
cd_conv_w bigint;

--Busca sequencia de cada dependente 
C01 CURSOR FOR
	SELECT DISTINCT nr_sequencia
	FROM json_schema_t
	WHERE nm_usuario = nm_usuario_p
	AND TRUNC(dt_atualizacao) = TRUNC(dt_atualizacao_w)
	AND ie_evento = ie_evento_p
	AND UPPER(nm_tabela) = 'PESSOA_FISICA_DEPENDENTE'
	ORDER BY nr_sequencia;

	PROCEDURE inserir_pessoa_fisica(nr_cpf_p text,
									dt_nascimento_p timestamp,
									ie_sexo_p text,
									nm_pessoa_fisica_p text,
									cd_pessoa_fisica_p text) is
	
	;
BEGIN

		INSERT INTO pessoa_fisica(cd_pessoa_fisica,
								   nr_cpf,
								   dt_nascimento,
								   ie_sexo,
								   nm_usuario,
								   nm_pessoa_fisica,
								   nr_ddd_celular,
								   nr_telefone_celular,
								   dt_atualizacao,
								   dt_atualizacao_nrec,
								   nm_usuario_nrec,
								   ie_tipo_pessoa)
						   VALUES (cd_pessoa_fisica_p,
								   nr_cpf_p,
								   dt_nascimento_p,
								   ie_sexo_p,
								   nm_usuario_p,
								   nm_pessoa_fisica_p,
								   nr_ddd_celular_w,
								   nr_telefone_celular_w,
								   dt_atualizacao_w,
								   dt_atualizacao_w,
								   nm_usuario_p,
								   1);

		COMMIT;
		
 	END;

 	PROCEDURE inserir_titular_convenio(cd_pessoa_fisica_p varchar2,
 	                                   cd_usuario_convenio_p varchar2,
 	                                   ie_grau_dependencia_p varchar2) IS 
 	
 	BEGIN 
	 	
	 	SELECT count(*)
	 	INTO STRICT pf_tit_w
	 	FROM pessoa_titular_convenio
	 	WHERE cd_pessoa_fisica = cd_pessoa_fisica_p
	 	AND   cd_usuario_convenio = cd_usuario_convenio_p;
	
	 	IF (pf_tit_w = 0) THEN 
	 	
	 		INSERT INTO pessoa_titular_convenio(nr_sequencia,
												 dt_atualizacao,
												 nm_usuario,
												 dt_atualizacao_nrec,
												 nm_usuario_nrec,
												 cd_pessoa_fisica,
												 cd_convenio,
												 cd_usuario_convenio,
												 cd_pessoa_titular,
												 cd_plano_convenio,
											 	 cd_usuario_convenio_tit,
											 	 ie_grau_dependencia)
									 	 VALUES (nextval('pessoa_titular_convenio_seq'),
												 dt_atualizacao_w,
												 nm_usuario_p,
											 	 dt_atualizacao_w,
											 	 nm_usuario_p,
											 	 cd_pessoa_fisica_p,
											 	 cd_convenio_w,
											 	 cd_usuario_convenio_p,
											 	 cd_pessoa_fisica_tit_w,
											 	 cd_plano_convenio_w,
											 	 cd_usuario_convenio_tit_w,
											 	 ie_grau_dependencia_p);
	
	 		COMMIT;
	 	ELSE
	 	
	 		UPDATE pessoa_titular_convenio 
	 			SET cd_pessoa_titular = cd_pessoa_fisica_tit_w,
	 			    cd_usuario_convenio_tit = cd_usuario_convenio_tit_w
	 		WHERE cd_pessoa_fisica = cd_pessoa_fisica_p
	 		AND   cd_usuario_convenio = cd_usuario_convenio_p
	 		AND   coalesce(cd_pessoa_titular::text, '') = '';
	 	
	 	END IF;							
	END;

	PROCEDURE inserir_pessoa_dependente IS
	
	BEGIN
		
		SELECT COUNT(*)
		INTO STRICT pf_dep_w
		FROM pessoa_fisica_dependente
		WHERE nr_cpf = nr_cpf_d_w
		AND cd_pessoa_fisica = cd_pessoa_fisica_w;
	
		IF (pf_dep_w = 0) THEN
		
			INSERT INTO pessoa_fisica_dependente(nr_sequencia,
												  cd_pessoa_fisica,
												  nm_dependente,
												  nr_cpf,
												  cd_pessoa_dependente,
												  dt_nascimento,
												  nm_usuario,
												  nm_usuario_nrec,
												  dt_atualizacao,
												  dt_atualizacao_nrec,
												  ie_grau_parentesco)
									  	  VALUES (nextval('pessoa_fisica_dependente_seq'),
												  cd_pessoa_fisica_w,
											  	  nm_dependente_w,
											  	  nr_cpf_d_w,
											  	  cd_pessoa_fisica_d_w,
											  	  dt_nascimento_d_w,
											  	  nm_usuario_p,
											  	  nm_usuario_p,
											  	  dt_atualizacao_w,
											  	  dt_atualizacao_w,
											  	  ie_grau_parentesco_w);
			COMMIT;
		END IF;
 	END;

 	PROCEDURE inserir_plano_convenio IS
 	
 	BEGIN
	 	
	 	SELECT count(*)
	 	INTO STRICT cd_conv_w
	 	FROM convenio_plano
	 	WHERE cd_plano = cd_plano_convenio_w;
	
	 	IF (cd_conv_w = 0) THEN 
	 	
	 		INSERT INTO convenio_plano(cd_convenio,
	 									cd_plano,
	 									ds_plano,
	 									ie_situacao,
	 									dt_atualizacao,
	 									nm_usuario)
	 					    	VALUES (cd_convenio_w,
	 					        	    cd_plano_convenio_w,
	 					            	ds_plano_convenio_w,
	 					            	'A',
	 					            	dt_atualizacao_w,
	 					            	nm_usuario_p);
			COMMIT; 					
	  	END IF;
	END;

	FUNCTION busca_pessoa_fisica(nr_cpf_p varchar2, cd_usuario_convenio_p varchar2) return;
					  		
	return;
		
	END;

BEGIN
	
	--Busca o convenio cadastrado
	SELECT	MAX(cd_conv_operadora)
	INTO STRICT	cd_convenio_w
	FROM	parametro_agenda_integrada
	WHERE	coalesce(cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p;
					
	IF (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') THEN

		--Busca todos dados do beneficiario
		SELECT MAX(CASE WHEN UPPER(NM_ATRIBUTO) = 'DT_NASCIMENTO' THEN TO_DATE(TO_CHAR(TO_DATE(vl_campo, 'DD/MM/YYYY HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') END) dt_nascimento,
			   MAX(CASE WHEN UPPER(nm_atributo) = 'NM_PESSOA_FISICA' THEN vl_campo END) nm_pessoa_fisica,
		   	   MAX(CASE WHEN UPPER(nm_atributo) = 'IE_SEXO' THEN SUBSTR(vl_campo, 1, 1) END) ie_sexo,
		       MAX(CASE WHEN UPPER(nm_atributo) = 'NR_CPF' THEN vl_campo END) nr_cpf,
		       MAX(CASE WHEN UPPER(nm_atributo) = 'NR_TELEFONE_CELULAR' THEN vl_campo END) nr_telefone_celular,
		       MAX(CASE WHEN UPPER(nm_atributo) = 'NR_DDD_CELULAR' THEN vl_campo END) nr_ddd_celular
		INTO STRICT dt_nascimento_w,
			 nm_pessoa_fisica_w,
		 	 ie_sexo_w,
		 	 nr_cpf_w,
		 	 nr_telefone_celular_w,
		 	 nr_ddd_celular_w
		FROM json_schema_t
		WHERE nm_usuario = nm_usuario_p
		AND TRUNC(dt_atualizacao) = TRUNC(dt_atualizacao_w)
		AND ie_evento = ie_evento_p
		AND UPPER(nm_tabela) = 'PESSOA_FISICA';
	
		--Busca a carteirinha do titular
		SELECT MAX(CASE WHEN UPPER(nm_atributo) = 'CD_USUARIO_CONVENIO_TIT' THEN vl_campo END) cd_usuario_convenio_tit,
			   MAX(CASE WHEN UPPER(nm_atributo) = 'CD_USUARIO_CONVENIO' THEN vl_campo END) cd_usuario_convenio,
		       MAX(CASE WHEN UPPER(nm_atributo) = 'IE_GRAU_DEPENDENCIA' THEN vl_campo END) ie_grau_dependencia
		INTO STRICT cd_usuario_convenio_tit_w,
		     cd_usuario_convenio_w,
		     ie_grau_dependencia_w
		FROM json_schema_t
		WHERE nm_usuario = nm_usuario_p
		AND TRUNC(dt_atualizacao) = TRUNC(dt_atualizacao_w)
		AND ie_evento = ie_evento_p
		AND UPPER(nm_tabela) = 'PESSOA_TITULAR_CONVENIO';
	
		--Busca todos dados do plano
		SELECT MAX(CASE WHEN UPPER(nm_atributo) = 'CD_PLANO' THEN vl_campo END) cd_plano_convenio,
		       MAX(CASE WHEN UPPER(nm_atributo) = 'DS_PLANO' THEN vl_campo END) ds_plano_convenio
		INTO STRICT cd_plano_convenio_w,
		 	 ds_plano_convenio_w
		FROM json_schema_t
		WHERE nm_usuario = nm_usuario_p
		AND TRUNC(dt_atualizacao) = TRUNC(dt_atualizacao_w)
		AND ie_evento = ie_evento_p
		AND UPPER(nm_tabela) = 'CONVENIO_PLANO';
	
	END IF;

		IF (cd_usuario_convenio_tit_w IS NOT NULL AND cd_usuario_convenio_tit_w::text <> '') THEN
		
			cd_pessoa_fisica_tit_w := busca_pessoa_fisica(nr_cpf_w, cd_usuario_convenio_tit_w);
			
			IF (cd_usuario_convenio_w = cd_usuario_convenio_tit_w) THEN
				IF (cd_pessoa_fisica_tit_w IS NOT NULL AND cd_pessoa_fisica_tit_w::text <> '') THEN 
					cd_pessoa_fisica_w := cd_pessoa_fisica_tit_w;
				END IF;
			ELSE
				cd_pessoa_fisica_w := busca_pessoa_fisica(nr_cpf_w, cd_usuario_convenio_w);
			END IF;
			
			IF (coalesce(cd_pessoa_fisica_w::text, '') = '') THEN
					  		
				select  nextval('pessoa_fisica_seq')
				into STRICT    cd_pessoa_fisica_w
				from	pessoa_fisica LIMIT 1;
			
				IF (cd_usuario_convenio_w = cd_usuario_convenio_tit_w) THEN
					cd_pessoa_fisica_tit_w := cd_pessoa_fisica_w;
				END IF;
		
				inserir_pessoa_fisica(nr_cpf_w, dt_nascimento_w, ie_sexo_w, nm_pessoa_fisica_w, cd_pessoa_fisica_w);
				inserir_titular_convenio(cd_pessoa_fisica_w, cd_usuario_convenio_w, ie_grau_dependencia_w);
				inserir_plano_convenio;
			
			ELSE
				inserir_titular_convenio(cd_pessoa_fisica_w, cd_usuario_convenio_w, ie_grau_dependencia_w);
				inserir_plano_convenio;
			END IF;
		END IF;
	
	OPEN C01;
	LOOP
	FETCH C01 INTO
		nr_sequencia_json_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	BEGIN
			
	  IF (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') THEN

    	--Busca todos dados do dependente pela sequencia
		SELECT MAX(CASE WHEN UPPER(NM_ATRIBUTO) = 'DT_NASCIMENTO' THEN TO_DATE(TO_CHAR(TO_DATE(vl_campo, 'DD/MM/YYYY HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS') END) dt_nascimento,
			   MAX(CASE WHEN UPPER(nm_atributo) = 'NM_DEPENDENTE' THEN vl_campo END) nm_dependente,
		       MAX(CASE WHEN UPPER(nm_atributo) = 'IE_SEXO' THEN SUBSTR(vl_campo, 1, 1) END) ie_sexo,
		   	   MAX(CASE WHEN UPPER(nm_atributo) = 'CD_USUARIO_CONVENIO' THEN vl_campo END) cd_usuario_convenio,
		   	   MAX(CASE WHEN UPPER(nm_atributo) = 'NR_CPF' THEN vl_campo END) nr_cpf,
		   	   MAX(CASE WHEN UPPER(nm_atributo) = 'IE_GRAU_PARENTESCO' THEN vl_campo END) ie_grau_parentesco
		INTO STRICT dt_nascimento_d_w,
	 		 nm_dependente_w,
	 	 	 ie_sexo_d_w,
	 	 	 cd_usuario_convenio_d_w,
	 	 	 nr_cpf_d_w,
	 	 	 ie_grau_parentesco_w
		FROM json_schema_t
		WHERE nr_sequencia = nr_sequencia_json_w;

		IF (cd_usuario_convenio_d_w IS NOT NULL AND cd_usuario_convenio_d_w::text <> '') THEN
			cd_pessoa_fisica_d_w := busca_pessoa_fisica(nr_cpf_d_w, cd_usuario_convenio_d_w);
	
			IF (coalesce(cd_pessoa_fisica_d_w::text, '') = '') THEN
	
				select  nextval('pessoa_fisica_seq')
				into STRICT    cd_pessoa_fisica_d_w
				from	pessoa_fisica LIMIT 1;

				inserir_pessoa_fisica(nr_cpf_d_w, dt_nascimento_d_w, ie_sexo_d_w, nm_dependente_w, cd_pessoa_fisica_d_w);
				inserir_pessoa_dependente;
				inserir_titular_convenio(cd_pessoa_fisica_d_w, cd_usuario_convenio_d_w, ie_grau_parentesco_w);
			
			ELSE
				inserir_pessoa_dependente;
				inserir_titular_convenio(cd_pessoa_fisica_d_w, cd_usuario_convenio_d_w, ie_grau_parentesco_w);
			END IF;
		END IF;
	   END IF;
	  END;
     END LOOP;
  CLOSE C01;
		
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_insert_beneficiario_api (nm_usuario_p text, cd_estabelecimento_p bigint, ie_evento_p text) FROM PUBLIC;

