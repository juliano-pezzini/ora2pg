-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE get_ovs_service ( nr_seq_voucher_p ovs_voucher.nr_sequencia%type, nm_usuario_p text, ie_validate_p text) AS $body$
DECLARE




nr_sequencia_w			ovs_service.nr_sequencia%type;
nr_seq_account_w		ovs_claim.nr_account%type;
cd_medico_executor_w	medical_provider_number.cd_medico%type;
dt_service_w			procedimento_paciente.dt_procedimento%type;
qt_item_w				integer;
has_proc_w				integer := 0;
contador_w				integer := 0;
nr_records_w			integer;
cd_provider_w			ovs_voucher.cd_provider%type;
dt_birth_w				ovs_voucher.dt_birth%type;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
		(coalesce(a.vl_procedimento,0) * 100) vl_procedimento,
		a.dt_procedimento,
		a.cd_equipamento,
		coalesce(a.cd_procedimento, 0) cd_procedimento,
		a.ie_origem_proced,
		a.ds_observacao,
		trunc((a.dt_final_procedimento - a.dt_inicio_procedimento)* (24 * 60)) qt_duracao,
		substr(b.cd_setor_externo,0,5) cd_setor_externo,
		COUNT(a.nr_sequencia) OVER () qt_item_w
from	procedimento_paciente a,
		setor_atendimento b
where	a.nr_interno_conta		= nr_seq_account_w
and		a.cd_setor_atendimento	= b.cd_setor_atendimento
and		a.cd_medico_executor = cd_medico_executor_w;

BEGIN

	select 	max(b.NR_ACCOUNT),
			max(a.CD_PROVIDER),
			max(a.DT_BIRTH)
	into STRICT	nr_seq_account_w,
			cd_provider_w,
			dt_birth_w
	from	ovs_voucher a,
			ovs_claim b
	where	a.nr_seq_claim = b.nr_sequencia
	and		a.nr_sequencia = nr_seq_voucher_p;

	select	max(cd_medico)
	into STRICT	cd_medico_executor_w
	from	medical_provider_number
	where	nr_provider = cd_provider_w;

	for r_c01 in c01 loop
		if (r_c01.qt_item_w > 14) then
			
			select	count(nr_sequencia)
			into STRICT	has_proc_w
			from	ovs_service a
			where	a.nr_seq_proc = r_c01.nr_sequencia;
			
		end if;		
		
		
		if (r_c01.qt_item_w <= 14 or (r_c01.qt_item_w > 14 and has_proc_w = 0 and contador_w < 14)) then

			contador_w := contador_w + 1;
		
			dt_service_w := r_c01.dt_procedimento;

			if (r_c01.vl_procedimento < 100) then
				CALL generate_inco_eclipse(nr_seq_account_w, 3, obter_desc_expressao(587168), nm_usuario_p); --o valor do procedimento nao poder ser inferior a 100-criar uma expressao
			end if;

			if (r_c01.cd_procedimento = 0) then
				CALL generate_inco_eclipse(nr_seq_account_w, 3, obter_desc_expressao(568639), nm_usuario_p);
			end if;

			if (dt_service_w > clock_timestamp()) then
				CALL generate_inco_eclipse(nr_seq_account_w, 3, obter_desc_expressao(583872), nm_usuario_p); -- a data do servico nao pode ser futura -criar uma expressao
			elsif (dt_service_w < dt_birth_w) then
				CALL generate_inco_eclipse(nr_seq_account_w, 3, obter_desc_expressao(583872), nm_usuario_p); --data de servico nao pode ser anterior que a data de nascimento que -criar uma expressao
			end if;

			select  count(nr_sequencia)
			into STRICT    nr_records_w
			from    eclipse_inco_account
			where   nr_interno_conta = nr_seq_account_w;
		
			if (nr_records_w = 0) then
				select  nextval('ovs_service_seq')
                into STRICT    nr_sequencia_w
;

				insert into OVS_SERVICE(
					nr_sequencia,
					nr_seq_voucher,
					nr_seq_proc,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					vl_charge,
					dt_service,
					ie_duplicate,
					ie_hospital,
					cd_item,
					ie_multiple,
					qt_patients,
					ie_selfdeemed,
					ds_service,
					nr_time_service,
					qt_duration,
					cd_service_id)	
				values (
					nr_sequencia_w,
					nr_seq_voucher_p,
					has_proc_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					r_c01.vl_procedimento,
					dt_service_w,
					null,
                    null,
					substr(r_c01.cd_procedimento, 1, 5),
					CASE WHEN r_c01.ds_observacao='S' THEN  'true'  ELSE 'false' END ,
					null,
					null,
					substr(r_c01.ds_observacao,1,100),
					lpad((to_char(to_date(dt_service_w), 'hh24mm'))::numeric , 4, 0),
					r_c01.qt_duracao,
					lpad(contador_w, 4, 0));
			end if;
		end if;
	end loop;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE get_ovs_service ( nr_seq_voucher_p ovs_voucher.nr_sequencia%type, nm_usuario_p text, ie_validate_p text) FROM PUBLIC;

