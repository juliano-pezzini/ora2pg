-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_estornar_atend_req ( nr_requisicao_p bigint, nr_sequencia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


ds_erro_w		varchar(255) := null;
qt_estoque_w		double precision := 0;
cd_material_w		integer;
ds_material_w		varchar(255);
cd_local_estoque_w	smallint;
qt_mat_atendida_w		double precision;
ie_tipo_requisicao_w	varchar(3);
ds_local_estoque_w	varchar(100);
cd_estabelecimento_w	smallint;
cd_motivo_baixa_w		smallint;
dt_recebimento_w	timestamp;

ie_consiste_mes_estorno_w	varchar(1);
ie_consiste_sem_estoque_w	varchar(1);
dt_mesano_vigente_w	timestamp;
dt_mesano_movimento_w	timestamp;
ie_consignado_w		operacao_estoque.ie_consignado%type;
nr_seq_terceiro_w	centro_custo.nr_seq_terceiro%type;
nr_titulo_w		titulo_receber.nr_titulo%type;
nr_seq_conta_w		terceiro_operacao.nr_seq_conta%type;

c01 CURSOR FOR
	SELECT	b.cd_material,
		substr(obter_desc_material(b.cd_material),1,100),
		obter_quantidade_convertida(b.cd_material, b.qt_material_atendida, b.cd_unidade_medida, 'UME')
	from	requisicao_material a,
		item_requisicao_material b
	where 	a.nr_requisicao = b.nr_requisicao
	and	b.nr_requisicao = nr_requisicao_p
	and  	b.nr_sequencia = nr_sequencia_p
	and	a.cd_estabelecimento = cd_estabelecimento_p;

BEGIN
ie_consiste_mes_estorno_w := Obter_Param_Usuario(109, 77, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_mes_estorno_w);
ie_consiste_sem_estoque_w := Obter_Param_Usuario(109, 27, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_sem_estoque_w);

begin
select	CASE WHEN b.ie_entrada_saida='S' THEN  a.cd_local_estoque_destino  ELSE a.cd_local_estoque END ,
	substr(obter_desc_local_estoque(CASE WHEN b.ie_entrada_saida='S' THEN  a.cd_local_estoque_destino  ELSE a.cd_local_estoque END ),1,100),
	b.ie_tipo_requisicao,
	a.cd_estabelecimento,
	a.dt_recebimento
into STRICT	cd_local_estoque_w,
	ds_local_estoque_w,
	ie_tipo_requisicao_w,
	cd_estabelecimento_w,
	dt_recebimento_w
from	operacao_estoque b,
	requisicao_material a
where	a.cd_operacao_estoque	= b.cd_operacao_estoque
and	a.nr_requisicao		= nr_requisicao_p;
exception when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(196475);
end;

if (ie_consiste_mes_estorno_w = 'S') then
	begin
	SELECT	OBTER_TIPO_MOTIVO_BAIXA_REQ(coalesce(cd_motivo_baixa,0))
	into STRICT	cd_motivo_baixa_w
	FROM 	item_requisicao_material
	where	nr_requisicao = nr_requisicao_p
	and	nr_sequencia = nr_sequencia_p;

	if (cd_motivo_baixa_w in (1,4)) then
		begin
		select	max(dt_mesano_vigente)
		into STRICT	dt_mesano_vigente_w
		from	parametro_estoque
		where	cd_estabelecimento = cd_estabelecimento_w;

		select	max(dt_mesano_referencia)
		into STRICT	dt_mesano_movimento_w
		from 	movimento_estoque
		where	nr_documento = nr_requisicao_p
		and	nr_sequencia_item_docto = nr_sequencia_p
		and	ie_origem_documento = '2'
		and	cd_acao = '1';

		if (dt_mesano_vigente_w IS NOT NULL AND dt_mesano_vigente_w::text <> '') and (dt_mesano_movimento_w IS NOT NULL AND dt_mesano_movimento_w::text <> '') and (dt_mesano_vigente_w <> dt_mesano_movimento_w) then
			/*Sem permissão para voltar a pendente item atendido em mês diferente do mês vigente no estoque. Verifique o parâmetro [77]
			Mês atendimento: dt_mesano_movimento_w
			Mês vigênte: dt_mesano_vigente_w*/
			ds_erro_w := substr(wheb_mensagem_pck.get_texto(298758, 'DT_MOVIMENTO='||to_char(dt_mesano_movimento_w, 'dd/mm/yyyy')||
										';DT_MESANO_VIGENTE='||to_char(dt_mesano_vigente_w, 'dd/mm/yyyy')),1,255);
		end if;
		end;
	end if;
	end;
end if;

if (ie_consiste_sem_estoque_w = 'S') and (ie_tipo_requisicao_w in (2,21)) and (ie_tipo_requisicao_w <> 21 or (dt_recebimento_w IS NOT NULL AND dt_recebimento_w::text <> '')) and (coalesce(ds_erro_w::text, '') = '') then
	open c01;
	loop
	fetch c01 into
		cd_material_w,
		ds_material_w,
		qt_mat_atendida_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		select substr(coalesce(Obter_se_requisicao_consignada(nr_requisicao_p),'N'),1,1)
		into STRICT ie_consignado_w
		;

		if (ie_consignado_w = 'S') then

			select	obter_saldo_disp_consig(
				cd_estabelecimento_p,
				null,
				cd_material_w,
				cd_local_estoque_w)
			into STRICT	qt_estoque_w
			;
		else
			select	obter_saldo_disp_estoque(
				cd_estabelecimento_p,
				cd_material_w,
				cd_local_estoque_w,
				trunc(clock_timestamp(),'month'))
			into STRICT	qt_estoque_w
			;

		end if;

		if (qt_estoque_w < qt_mat_atendida_w) then


			-- Material: cd_material_w - ds_material_w (Sem saldo em estoque) Local  Estoque: ds_local_estoque_w
			ds_erro_w := substr(wheb_mensagem_pck.get_texto(298759, 'CD_MATERIAL='||cd_material_w||
										';DS_MATERIAL='||ds_material_w||
										';DS_LOCAL_ESTOQUE='||ds_local_estoque_w),1,255);


		end if;
		end;
	end loop;
	close c01;
end if;

begin
select	b.nr_seq_terceiro
into STRICT	nr_seq_terceiro_w
from 	centro_custo b,
	requisicao_material a
where	a.cd_centro_custo 	= b.cd_centro_custo
and	a.nr_requisicao		= nr_requisicao_p;
exception
when others then
	nr_seq_terceiro_w	:= 0;
end;

if (nr_seq_terceiro_w > 0) then
	begin
	begin
	select	b.nr_seq_conta,
		(select max(x.nr_titulo)
		from	titulo_receber x
		where	nr_seq_terc_conta = b.nr_seq_conta
		and	x.ie_situacao <> '3') nr_titulo
	into STRICT	nr_seq_conta_w,
		nr_titulo_w
	from	terceiro_operacao b
	where	b.nr_seq_terceiro 	= nr_seq_terceiro_w
	and	b.nr_doc		= nr_requisicao_p
	and	b.nr_seq_doc		= nr_sequencia_p  LIMIT 1;
	exception
	when others then
		nr_titulo_w	:=	0;
	end;

	if (coalesce(nr_titulo_w,0) > 0) then
		/*Este item está vinculado a conta terceiro [#@NR_SEQ_CONTA#@] que já possui o título [#@NR_TITULO#@] gerado.
		O atendimento deste item não pode ser estornado!*/
		CALL wheb_mensagem_pck.exibir_mensagem_abort(313771, 'NR_SEQ_CONTA=' || nr_seq_conta_w || ';NR_TITULO=' || nr_titulo_w);
	end if;
	end;
end if;
ds_retorno_p := ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_estornar_atend_req ( nr_requisicao_p bigint, nr_sequencia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) FROM PUBLIC;

