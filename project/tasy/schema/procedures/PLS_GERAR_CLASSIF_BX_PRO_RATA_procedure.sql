-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_classif_bx_pro_rata ( nr_titulo_p bigint, nr_seq_baixa_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_conta_antec_pre_w		varchar(20)	:= null;
cd_conta_rec_w			varchar(20);
cd_conta_deb_w			varchar(20);
cd_conta_antec_baixa_w		varchar(20);
cd_conta_caixa_w		varchar(20);
cd_conta_deb_antecip_w		varchar(20);
cd_conta_contabil_rec_antec_w	varchar(20);
ie_tipo_w			varchar(2);
vl_total_baixa_w		double precision	:= 0;
vl_classif_w			double precision	:= 0;
vl_soma_item_w			double precision	:= 0;
vl_pro_rata_dia_w		double precision	:= 0;
vl_antecipacao_w		double precision	:= 0;
vl_titulo_w			double precision;
cd_historico_antec_pre_w	bigint	:= null;
cd_historico_w			bigint;
cd_historico_antec_w		bigint;
nr_seq_mensalidade_w		bigint;
cd_historico_rev_baixa_w	bigint;
ie_union_w			smallint;
dt_antecipacao_w		timestamp;
dt_antecipacao_baixa_w		timestamp;
dt_referencia_mens_w		timestamp;
dt_referencia_lote_w		timestamp;
dt_recebimento_w		timestamp;
vl_soma_baixa_w			double precision	:= 0;
vl_soma_pro_w			double precision	:= 0;
vl_soma_antec_w			double precision	:= 0;
nr_sequencia_w			bigint;
nr_seq_ult_baixa_w		bigint	:= null;
nr_seq_ult_pro_w		bigint	:= null;
nr_seq_ult_antec_w		bigint	:= null;

vl_baixa_pls_w			double precision;
vl_baixa_pls_aux_w		double precision;
vl_saldo_pls_w			double precision;
ie_tributacao_pls_w		varchar(1)	:= 'N';
vl_proporcional_w		double precision;
vl_trib_mens_w			double precision;
vl_recebido_w			double precision;
vl_descontos_w			double precision;

qt_trib_mens_w			bigint;

cd_estabelecimento_w		smallint;
dt_contabilizacao_w		timestamp;
ie_recebimento_antec_passivo_w	varchar(1);
vl_tributo_w			double precision;

c01 CURSOR FOR
	SELECT	sum(b.vl_item),
		b.cd_conta_deb,
		coalesce(b.cd_historico_baixa,b.cd_historico),
		sum(coalesce(b.vl_antecipacao,0)),
		sum(coalesce(b.vl_pro_rata_dia,0)),
		coalesce(b.cd_historico_antec_baixa,b.cd_historico_antec),
		b.cd_conta_antec_baixa,
		b.dt_antecipacao_baixa,
		'ME',
		d.dt_mesano_referencia,
		1 ie_union,
		b.cd_historico_rev_antec_baixa,
		b.cd_conta_deb_antecip,
		b.cd_conta_contabil_rec_antec
	from	pls_lote_mensalidade d,
		pls_mensalidade_seg_item b,
		pls_mensalidade_segurado a,
		pls_mensalidade c
	where	a.nr_sequencia		= b.nr_seq_mensalidade_seg
	and	c.nr_sequencia		= a.nr_seq_mensalidade
	and	d.nr_sequencia		= c.nr_seq_lote
	and	c.nr_sequencia		= nr_seq_mensalidade_w
	and	b.ie_tipo_item		not in ('3', '6', '7')--<> '3' /* Coparticipação */
	group by
		b.cd_conta_deb,
		coalesce(b.cd_historico_baixa,b.cd_historico),
		coalesce(b.cd_historico_antec_baixa,b.cd_historico_antec),
		b.cd_conta_antec_baixa,
		b.dt_antecipacao,
		b.dt_antecipacao_baixa,
		d.dt_mesano_referencia,
		b.cd_historico_rev_antec_baixa,
		c.nr_sequencia,
		b.cd_conta_deb_antecip,
		b.cd_conta_contabil_rec_antec
	
union all

	SELECT	coalesce(sum(c.vl_coparticipacao),0),
		c.cd_conta_deb,
		coalesce(c.cd_historico_baixa,c.cd_historico),
		(null)::numeric  vl_antecipacao,
		(null)::numeric  vl_pro_rata_dia,
		(c.cd_historico_baixa)::numeric  cd_historico_antec,
		c.cd_conta_antec_baixa,
		to_date(null) dt_antecipacao_baixa,
		'CO',
		e.dt_mesano_referencia,
		2 ie_union,
		null cd_historico_rev_antec_baixa,
		c.cd_conta_antec_baixa,
		c.cd_conta_antec_baixa
	from	pls_lote_mensalidade e,
		pls_conta_coparticipacao c,
		pls_mensalidade d,
		pls_mensalidade_segurado a
	where	a.nr_seq_mensalidade	= nr_seq_mensalidade_w
	and	a.nr_sequencia		= c.nr_seq_mensalidade_seg
	and	d.nr_sequencia		= a.nr_seq_mensalidade
	and	e.nr_sequencia		= d.nr_seq_lote
	GROUP BY
		c.cd_conta_deb,
		coalesce(c.cd_historico_baixa,c.cd_historico),
		e.dt_mesano_referencia,
		c.cd_conta_antec_baixa,
		c.cd_historico_baixa
	 HAVING	coalesce(sum(c.vl_coparticipacao),0) <> 0
	
union all

	select	coalesce(sum(e.vl_beneficiario),0),
		e.cd_conta_deb,
		coalesce(d.cd_historico_baixa,e.cd_historico),
		(null)::numeric  vl_antecipacao,
		(null)::numeric  vl_pro_rata_dia,
		(coalesce(d.cd_historico_baixa,e.cd_historico))::numeric  cd_historico_antec,
		coalesce(d.cd_conta_antec_baixa,e.cd_conta_deb),
		to_date(null) dt_antecipacao_baixa,
		'PE',
		a.dt_mesano_referencia,
		3 ie_union,
		null cd_historico_rev_antec_baixa,
		coalesce(d.cd_conta_antec_baixa,e.cd_conta_deb),
		coalesce(d.cd_conta_antec_baixa,e.cd_conta_deb)
	FROM pls_mensalidade_segurado c, pls_mensalidade b, pls_lote_mensalidade a, pls_mensalidade_seg_item d
LEFT OUTER JOIN pls_conta_pos_estabelecido e ON (d.nr_seq_conta = e.nr_seq_conta)
WHERE c.nr_sequencia	= d.nr_seq_mensalidade_seg and b.nr_sequencia	= c.nr_seq_mensalidade and a.nr_sequencia	= b.nr_seq_lote and d.ie_tipo_item	in ('6', '7') and b.nr_sequencia	= nr_seq_mensalidade_w group by
		e.cd_conta_deb,
		coalesce(d.cd_historico_baixa,e.cd_historico),
		a.dt_mesano_referencia,
		d.cd_conta_antec_baixa,
		d.cd_historico_baixa
	order by
		ie_union;


BEGIN
if (nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '') and (nr_seq_baixa_p IS NOT NULL AND nr_seq_baixa_p::text <> '') then
	select	a.nr_seq_mensalidade,
		(obter_dados_titulo_receber(a.nr_titulo,'V'))::numeric ,
		a.vl_saldo_titulo,
		a.cd_estabelecimento
	into STRICT	nr_seq_mensalidade_w,
		vl_titulo_w,
		vl_saldo_pls_w,
		cd_estabelecimento_w
	from	titulo_receber a
	where	a.nr_titulo	= nr_titulo_p;

	select	max(b.dt_contabilizacao)
	into STRICT	dt_contabilizacao_w
	from	pls_lote_mensalidade	b,
		pls_mensalidade		a
	where	b.nr_sequencia	= a.nr_seq_lote
	and	a.nr_sequencia	= nr_seq_mensalidade_w;

	begin
	select	coalesce(a.ie_recebimento_antec_passivo,'N')
	into STRICT	ie_recebimento_antec_passivo_w
	from	pls_parametro_contabil	a
	where	a.cd_estabelecimento	= cd_estabelecimento_w;
	exception
	when no_data_found then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(185917);
	end;

	select	a.dt_recebimento,
		a.vl_recebido, --+ a.vl_descontos,
		a.vl_recebido,
		0 --a.vl_descontos
	into STRICT	dt_recebimento_w,
		vl_total_baixa_w,
		vl_recebido_w,
		vl_descontos_w
	from	titulo_receber_liq a
	where	nr_sequencia	= nr_seq_baixa_p
	and	nr_titulo	= nr_titulo_p;

	select	count(*)
	into STRICT	qt_trib_mens_w
	from	pls_mensalidade_trib	a
	where	a.nr_seq_mensalidade	= nr_seq_mensalidade_w
	and	a.ie_origem_tributo	= 'CD';

	if (qt_trib_mens_w > 0) then
		select	coalesce(sum(a.vl_tributo),0)
		into STRICT	vl_trib_mens_w
		from	pls_mensalidade_trib	a
		where	a.nr_seq_mensalidade	= nr_seq_mensalidade_w
		and	a.ie_origem_tributo	= 'CD';

		select	sum(coalesce(vl_recebido,0))
		into STRICT	vl_baixa_pls_w
		from	titulo_receber_liq
		where	nr_titulo	= nr_titulo_p
		and	nr_sequencia	= nr_seq_baixa_p;

		if (vl_trib_mens_w <> 0) then
			ie_tributacao_pls_w	:= 'S';
		else
			ie_tributacao_pls_w	:= 'N';
		end if;

		if (ie_tributacao_pls_w = 'S') then
			vl_proporcional_w	:= vl_titulo_w;--(vl_recebido_w + vl_descontos_w);
		else
			if (vl_saldo_pls_w = vl_recebido_w) then
				vl_proporcional_w	:= ((vl_recebido_w * dividir_sem_round(vl_titulo_w,vl_recebido_w)) + vl_descontos_w);
			else
				vl_proporcional_w	:= ((vl_recebido_w * dividir_sem_round(vl_recebido_w,vl_titulo_w)) + vl_descontos_w);
			end if;
		end if;
	else
		vl_proporcional_w	:= vl_total_baixa_w;
	end if;

	if (nr_seq_mensalidade_w IS NOT NULL AND nr_seq_mensalidade_w::text <> '') then
		select	max(a.dt_referencia)
		into STRICT	dt_referencia_mens_w
		from	pls_mensalidade a
		where	a.nr_sequencia	= nr_seq_mensalidade_w;

		open C01;
		loop
		fetch C01 into
			vl_soma_item_w,
			cd_conta_deb_w,
			cd_historico_w,
			vl_antecipacao_w,
			vl_pro_rata_dia_w,
			cd_historico_antec_w,
			cd_conta_antec_baixa_w,
			dt_antecipacao_baixa_w,
			ie_tipo_w,
			dt_referencia_lote_w,
			ie_union_w,
			cd_historico_rev_baixa_w,
			cd_conta_deb_antecip_w,
			cd_conta_contabil_rec_antec_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			if (ie_tipo_w = 'ME') then
				select	coalesce(sum(a.vl_tributo),0)
				into STRICT	vl_tributo_w
				from	pls_mensalidade_seg_item	b,
					pls_mensalidade_trib		a
				where	a.nr_seq_item_mens	= b.nr_sequencia
				and	b.ie_tipo_item		<> 3
				and	a.nr_seq_mensalidade	= nr_seq_mensalidade_w
				and	a.ie_origem_tributo	= 'CD';
			else
				select	coalesce(sum(a.vl_tributo),0)
				into STRICT	vl_tributo_w
				from	pls_mensalidade_seg_item	b,
					pls_mensalidade_trib		a
				where	a.nr_seq_item_mens	= b.nr_sequencia
				and	b.ie_tipo_item		= 3
				and	a.nr_seq_mensalidade	= nr_seq_mensalidade_w
				and	a.ie_origem_tributo	= 'CD';
			end if;

			if (sign(vl_antecipacao_w) <> sign(vl_soma_item_w)) then
				vl_antecipacao_w	:= vl_antecipacao_w * sign(vl_soma_item_w);
			end if;

			if (sign(vl_pro_rata_dia_w) <> sign(vl_soma_item_w)) then
				vl_pro_rata_dia_w	:= vl_pro_rata_dia_w * sign(vl_soma_item_w);
			end if;

			/* Se não tem nenhum dos dois valores, colocar tudo como pró-rata */

			if (ie_tipo_w <> 'CO') and (vl_antecipacao_w = 0) and (vl_pro_rata_dia_w = 0) then
				vl_pro_rata_dia_w	:= vl_soma_item_w;
			end if;

			vl_antecipacao_w	:= dividir_sem_round(vl_antecipacao_w,vl_titulo_w) * vl_proporcional_w;--vl_total_baixa_w;
			vl_pro_rata_dia_w	:= dividir_sem_round(vl_pro_rata_dia_w,vl_titulo_w) * vl_proporcional_w;--vl_total_baixa_w;
			vl_soma_item_w		:= dividir_sem_round(vl_soma_item_w,vl_titulo_w) * vl_proporcional_w;--vl_total_baixa_w;
			if (cd_conta_antec_baixa_w IS NOT NULL AND cd_conta_antec_baixa_w::text <> '') then
				cd_conta_antec_pre_w	:= cd_conta_antec_baixa_w;
			end if;

			if (cd_historico_antec_w IS NOT NULL AND cd_historico_antec_w::text <> '') then
				cd_historico_antec_pre_w	:= cd_historico_antec_w;
			end if;

			if (ie_tipo_w = 'CO') and (dt_recebimento_w < trunc(dt_referencia_lote_w,'month')) then
				cd_conta_antec_baixa_w	:= cd_conta_antec_pre_w;
				cd_historico_antec_w	:= cd_historico_antec_pre_w;
			end if;

			if (dt_contabilizacao_w IS NOT NULL AND dt_contabilizacao_w::text <> '') and (ie_recebimento_antec_passivo_w = 'S') then
				cd_conta_antec_baixa_w	:= cd_conta_deb_w;
			end if;

			/*Inserção no lote de baixa */

			if (dt_recebimento_w < trunc(dt_referencia_lote_w,'month')) then
				/* Se for co-participação, tem que buscar a conta de antecipação de um item de mensalidade */

				select	nextval('titulo_rec_liq_cc_seq')
				into STRICT	nr_sequencia_w
				;

				insert into titulo_rec_liq_cc(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_titulo,
					nr_seq_baixa,
					vl_baixa,
					vl_amaior,
					cd_conta_deb_pls,
					cd_conta_rec_pls,
					cd_historico_antec_pls, /* Histórico Débito */
					cd_historico_pls, /* Histórico Crédito */
					ie_lote_pro_rata,
					vl_contab_pro_rata,
					cd_historico_rev_antec,
					cd_conta_deb_antecip,
					cd_conta_rec_antecip,
					ie_origem_classif)
				values (nr_sequencia_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_titulo_p,
					nr_seq_baixa_p,
					vl_soma_item_w,
					0,
					null,
					cd_conta_antec_baixa_w,
					null, /* Histórico Débito */
					cd_historico_antec_w, /* Histórico Crédito */
					'BA',
					vl_soma_item_w,
					cd_historico_rev_baixa_w,
					cd_conta_deb_antecip_w,
					cd_conta_contabil_rec_antec_w,
					'MO');

				vl_soma_baixa_w	 := vl_soma_baixa_w + vl_soma_item_w;
				nr_seq_ult_baixa_w	:= nr_sequencia_w;
			else
				if (vl_antecipacao_w <> 0) or (ie_tipo_w = 'CO') then
					if (dt_recebimento_w < dt_antecipacao_baixa_w) then
						select	nextval('titulo_rec_liq_cc_seq')
						into STRICT	nr_sequencia_w
						;

						insert into titulo_rec_liq_cc(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_titulo,
							nr_seq_baixa,
							vl_baixa,
							vl_amaior,
							cd_conta_deb_pls,
							cd_conta_rec_pls,
							cd_historico_antec_pls, /* Histórico Débito */
							cd_historico_pls, /* Histórico Crédito */
							ie_lote_pro_rata,
							vl_contab_pro_rata,
							cd_historico_rev_antec,
							cd_conta_deb_antecip,
							cd_conta_rec_antecip,
							ie_origem_classif)
						values (nr_sequencia_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_titulo_p,
							nr_seq_baixa_p,
							coalesce(vl_antecipacao_w,vl_soma_item_w),
							0,
							null,
							coalesce(cd_conta_antec_baixa_w,cd_conta_deb_w),
							null, /* Histórico Débito */
							coalesce(cd_historico_antec_w,cd_historico_w), /* Histórico Crédito */
							'BA',
							coalesce(vl_antecipacao_w,vl_soma_item_w),
							cd_historico_rev_baixa_w,
							cd_conta_deb_antecip_w,
							cd_conta_contabil_rec_antec_w,
							'MO');

						vl_soma_baixa_w	:= vl_soma_baixa_w + coalesce(vl_antecipacao_w,vl_soma_item_w);
						nr_seq_ult_baixa_w	:= nr_sequencia_w;
					else
						/* Se não vai ter lote de antecipação o valor de antecipação tem que ir direto para a conta de receita */

						select	nextval('titulo_rec_liq_cc_seq')
						into STRICT	nr_sequencia_w
						;

						insert into titulo_rec_liq_cc(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_titulo,
							nr_seq_baixa,
							vl_baixa,
							vl_amaior,
							cd_conta_deb_pls,
							cd_conta_rec_pls,
							cd_historico_antec_pls, /* Histórico Débito */
							cd_historico_pls, /* Histórico Crédito */
							ie_lote_pro_rata,
							vl_contab_pro_rata,
							cd_historico_rev_antec,
							cd_conta_deb_antecip,
							cd_conta_rec_antecip,
							ie_origem_classif)
						values (nr_sequencia_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_titulo_p,
							nr_seq_baixa_p,
							coalesce(vl_antecipacao_w,vl_soma_item_w),
							0,
							null,
							cd_conta_deb_w,
							null, /* Histórico Débito */
							cd_historico_w, /* Histórico Crédito */
							'BA',
							coalesce(vl_antecipacao_w,vl_soma_item_w),
							cd_historico_rev_baixa_w,
							cd_conta_deb_antecip_w,
							cd_conta_contabil_rec_antec_w,
							'MO');

						vl_soma_baixa_w	:= vl_soma_baixa_w + coalesce(vl_antecipacao_w,vl_soma_item_w);
						nr_seq_ult_baixa_w	:= nr_sequencia_w;
					end if;
				end if;
			end if;

			if (vl_pro_rata_dia_w <> 0) or (ie_tipo_w = 'CO' and (dt_recebimento_w < trunc(dt_referencia_lote_w,'month')))then
				/* Inserção no lote de pró-rata */

				if (dt_recebimento_w < trunc(dt_referencia_lote_w,'month')) then /* Só vai ter lote pró-rata se foi baixa antecipada */
					select	nextval('titulo_rec_liq_cc_seq')
					into STRICT	nr_sequencia_w
					;

					insert into titulo_rec_liq_cc(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_titulo,
						nr_seq_baixa,
						vl_baixa,
						vl_amaior,
						cd_conta_deb_pls,
						cd_conta_rec_pls,
						cd_historico_antec_pls, /* Histórico Débito */
						cd_historico_pls, /* Histórico Crédito */
						ie_lote_pro_rata,
						vl_contab_pro_rata,
						cd_historico_rev_antec,
						cd_conta_deb_antecip,
						cd_conta_rec_antecip,
						ie_origem_classif)
					values (nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_titulo_p,
						nr_seq_baixa_p,
						coalesce(vl_pro_rata_dia_w,vl_soma_item_w),
						0,
						cd_conta_antec_baixa_w,
						cd_conta_deb_w,
						cd_historico_antec_w, /* Histórico Débito */
						cd_historico_w, /* Histórico Crédito */
						'PR',
						coalesce(vl_pro_rata_dia_w,vl_soma_item_w),
						cd_historico_rev_baixa_w,
						cd_conta_deb_antecip_w,
						cd_conta_contabil_rec_antec_w,
						'MO');

					vl_soma_pro_w	:= vl_soma_pro_w + coalesce(vl_pro_rata_dia_w,vl_soma_item_w);
					nr_seq_ult_pro_w	:= nr_sequencia_w;
				else
					select	nextval('titulo_rec_liq_cc_seq')
					into STRICT	nr_sequencia_w
					;

					insert into titulo_rec_liq_cc(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_titulo,
						nr_seq_baixa,
						vl_baixa,
						vl_amaior,
						cd_conta_deb_pls,
						cd_conta_rec_pls,
						cd_historico_antec_pls, /* Histórico Débito */
						cd_historico_pls, /* Histórico Crédito */
						ie_lote_pro_rata,
						vl_contab_pro_rata,
						cd_historico_rev_antec,
						cd_conta_deb_antecip,
						cd_conta_rec_antecip,
						ie_origem_classif)
					values (nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_titulo_p,
						nr_seq_baixa_p,
						vl_pro_rata_dia_w,
						0,
						null,
						cd_conta_deb_w,
						null, /* Histórico Débito */
						cd_historico_w, /* Histórico Crédito */
						'BA',
						vl_pro_rata_dia_w,
						cd_historico_rev_baixa_w,
						cd_conta_deb_antecip_w,
						cd_conta_contabil_rec_antec_w,
						'MO');

					vl_soma_baixa_w	:= vl_soma_baixa_w + vl_pro_rata_dia_w;
					nr_seq_ult_baixa_w	:= nr_sequencia_w;
				end if;
			end if;
			/* Inserção no lote de antecipação */

			if (vl_antecipacao_w <> 0) then
				/* Só deve gerar se a baixa foi feita antes da data de antecipação */

				if (dt_recebimento_w < dt_antecipacao_baixa_w ) then
					select	nextval('titulo_rec_liq_cc_seq')
					into STRICT	nr_sequencia_w
					;

					insert into titulo_rec_liq_cc(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_titulo,
						nr_seq_baixa,
						vl_baixa,
						vl_amaior,
						cd_conta_deb_pls,
						cd_conta_rec_pls,
						cd_historico_antec_pls, /* Histórico Débito */
						cd_historico_pls, /* Histórico Crédito */
						ie_lote_pro_rata,
						vl_contab_pro_rata,
						cd_historico_rev_antec,
						cd_conta_deb_antecip,
						cd_conta_rec_antecip,
						ie_origem_classif)
					values (nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_titulo_p,
						nr_seq_baixa_p,
						vl_antecipacao_w,
						0,
						cd_conta_antec_baixa_w,
						cd_conta_deb_w,
						coalesce(cd_historico_antec_w,cd_historico_w),
						cd_historico_w,
						'AN',
						vl_antecipacao_w,
						cd_historico_rev_baixa_w,
						cd_conta_deb_antecip_w,
						cd_conta_contabil_rec_antec_w,
						'MO');

					vl_soma_antec_w	:= vl_soma_antec_w + vl_antecipacao_w;
					nr_seq_ult_antec_w	:= nr_sequencia_w;
				end if;
			end if;
			end;
		end loop;
		close C01;

		/* Ajustar arredondamento no último */

		if (vl_total_baixa_w <> vl_soma_baixa_w) then
			update	titulo_rec_liq_cc
			set	vl_baixa		= vl_baixa + (vl_total_baixa_w - vl_soma_baixa_w),
				vl_contab_pro_rata 	= vl_baixa + (vl_total_baixa_w - vl_soma_baixa_w)
			where	nr_titulo		= nr_titulo_p
			and	ie_lote_pro_rata	= 'BA'
			and	nr_seq_baixa		= nr_seq_baixa_p
			and	nr_sequencia		= nr_seq_ult_baixa_w;
		end if;
	end if;
end if;

/* Não pode ter commit */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_classif_bx_pro_rata ( nr_titulo_p bigint, nr_seq_baixa_p bigint, nm_usuario_p text) FROM PUBLIC;

