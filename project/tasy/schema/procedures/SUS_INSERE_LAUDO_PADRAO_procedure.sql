-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_insere_laudo_padrao ( nr_atendimento_p bigint, nr_seq_laudo_p bigint, ie_laudo_solic_p text, ie_laudo_mudanca_p text, ie_laudo_especial_p text, ie_laudo_radio_p text, ie_laudo_outros_p text, ie_laudo_quimio_p text, nm_usuario_p text, ie_laudo_bpa_p text) AS $body$
DECLARE


nr_laudo_sus_w			bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
qt_procedimento_w			bigint;
ds_justificativa_w			varchar(2000);
nr_seq_interno_w			bigint;
cd_medico_requisitante_w		varchar(10);
dt_emissao_w			timestamp;
ie_forma_data_laudo_w		varchar(10);
nr_seq_area_w			bigint;
ie_qt_proc_solic_area_irrad_w	varchar(10);
qt_existe_w			bigint;
cd_doenca_cid_w			varchar(4);
qt_insercao_w			smallint;
cd_doenca_cid_tumor_w		varchar(4);
ie_obter_cid_tumor_w		varchar(15) := 'N';
ie_obter_cid_item_diag_w		varchar(15) := 'T';
ie_usuario_medico_laudo_w	varchar(15) := 'N';

c01 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		qt_procedimento,
		ds_justificativa
	from	sus_laudo_padrao_adic
	where	nr_seq_laudo_padrao	in (	SELECT	nr_sequencia
						from	sus_laudo_padrao_dados
						where	nr_seq_laudo_padrao	= nr_seq_laudo_p);
/* Proced. Adic. Quimio/Hormonioterapia */

c02 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		qt_procedimento,
		ds_justificativa
	from	sus_laudo_padrao_adic
	where	nr_seq_laudo_padrao	in (	SELECT	nr_sequencia
						from	sus_laudo_padrao_dados
						where	nr_seq_laudo_padrao	= nr_seq_laudo_p
						and	ie_tipo_laudo = 'Q');

/* Area Irradiada - Radioterapia */

c03 CURSOR FOR
	SELECT	cd_doenca_cid,
		ds_local_irradiacao,
		qt_insercoes_area
	from	sus_laudo_padrao_irrad
	where	nr_seq_laudo_padrao	in (	SELECT	nr_sequencia
						from	sus_laudo_padrao_dados
						where	nr_seq_laudo_padrao	= nr_seq_laudo_p);	


BEGIN

ie_forma_data_laudo_w		:= coalesce(obter_valor_param_usuario(281,222,obter_perfil_ativo,nm_usuario_p,0),'A');
ie_obter_cid_item_diag_w		:= coalesce(obter_valor_param_usuario(281,948,obter_perfil_ativo,nm_usuario_p,0),'T');
ie_qt_proc_solic_area_irrad_w	:= coalesce(obter_valor_param_usuario(281,1067,obter_perfil_ativo,nm_usuario_p,0),'N');
ie_obter_cid_tumor_w		:= coalesce(obter_valor_param_usuario(281,1187,obter_perfil_ativo,nm_usuario_p,0),'N');
ie_usuario_medico_laudo_w	:= coalesce(obter_valor_param_usuario(281,923,obter_perfil_ativo,nm_usuario_p,0),'N');

if (ie_forma_data_laudo_w = 'E') then/*Geliard OS207882 08/04/2010*/
	begin
	select	coalesce(max(dt_entrada),clock_timestamp())
	into STRICT	dt_emissao_w
	from	atendimento_paciente
	where 	nr_atendimento = nr_atendimento_p;
	end;
else
	dt_emissao_w := clock_timestamp();
end if;

select	max(cd_pessoa_fisica)
into STRICT	cd_medico_requisitante_w
from	usuario
where	nm_usuario	= nm_usuario_p;

if (coalesce(ie_obter_cid_tumor_w,'N') = 'S') then
	begin
	
	select	coalesce(max(a.cd_doenca_cid),'')
	into STRICT	cd_doenca_cid_tumor_w
	from	can_loco_regional a
	where	a.cd_pessoa_fisica = obter_pessoa_atendimento(nr_atendimento_p,'C')
	and	a.dt_avaliacao = (	SELECT	max(x.dt_avaliacao)
					from	can_loco_regional x
					where	x.cd_pessoa_fisica = a.cd_pessoa_fisica);
	
	if (coalesce(ie_obter_cid_item_diag_w,'T') = 'D') and (ie_laudo_solic_p = 'S') then
		begin
		
		select	coalesce(max(a.cd_doenca),'')
		into STRICT	cd_doenca_cid_tumor_w
		from 	diagnostico_doenca a
		where 	a.nr_atendimento = nr_atendimento_p
		and	a.ie_classificacao_doenca = 'P'
		and	a.dt_diagnostico = (	SELECT	max(x.dt_diagnostico)
						from 	diagnostico_doenca x
						where 	x.nr_atendimento = a.nr_atendimento
						and	x.ie_classificacao_doenca = 'P');
						
		end;
	end if;
					
	end;
else	
	cd_doenca_cid_tumor_w := '';
end if;

if (obter_se_medico(cd_medico_requisitante_w,'M')	= 'N') then
	cd_medico_requisitante_w	:= null;
end if;

if (ie_laudo_solic_p	= 'S') then
	begin
	select	coalesce(max(nr_laudo_sus),0) + 1
	into STRICT	nr_laudo_sus_w
	from	sus_laudo_paciente
	where	nr_atendimento	= nr_atendimento_p;

	select	nextval('sus_laudo_paciente_seq')
	into STRICT	nr_seq_interno_w
	;

	insert into sus_laudo_paciente(
		nr_atendimento,
		ie_tipo_laudo_sus,
		nr_laudo_sus,
		dt_emissao,
		dt_atualizacao,
		nm_usuario,
		ie_diaria_acomp,
		cd_procedimento_solic,
		ie_origem_proced,
		cd_medico_responsavel,
		cd_cid_principal,
		cd_cid_secundario,
		cd_cid_causa_assoc,
		ds_sinal_sintoma,
		ds_condicao_justifica,
		ds_result_prova,
		ie_classificacao,
		nr_seq_interno,
		cd_medico_requisitante,
		ie_diaria_uti,
                nm_usuario_nrec,
                dt_atualizacao_nrec)
	SELECT 	nr_atendimento_p,
		0,
		nr_laudo_sus_w,
		dt_emissao_w,
		clock_timestamp(),
		nm_usuario_p,
		coalesce(ie_diaria_acomp,'N'),
		cd_procedimento_solic,
		ie_origem_proced_solic,
		cd_medico_autorizador,
		coalesce(cd_cid_principal,cd_doenca_cid_tumor_w),
		cd_cid_secundario,
		cd_cid_causa_assoc,
		ds_sinal_sintoma,
		ds_condicao_justifica,
		ds_result_prova,
		1,
		nr_seq_interno_w,
		cd_medico_requisitante_w,
		ie_diaria_uti,
                nm_usuario_p,
                clock_timestamp()
	from	sus_laudo_padrao_dados
	where	nr_sequencia = (SELECT	max(x.nr_sequencia)
				from	sus_laudo_padrao_dados x
				where	x.nr_seq_laudo_padrao	= nr_seq_laudo_p
				and	x.ie_tipo_laudo		= 'S');/* S = Solicitacao*/
	end;
end if;
if (ie_laudo_mudanca_p	= 'S') then
	begin
	select	coalesce(max(nr_laudo_sus),0) + 1
	into STRICT	nr_laudo_sus_w
	from	sus_laudo_paciente
	where	nr_atendimento	= nr_atendimento_p;

	select	nextval('sus_laudo_paciente_seq')
	into STRICT	nr_seq_interno_w
	;
	insert into sus_laudo_paciente(
		nr_atendimento,
		ie_tipo_laudo_sus,
		nr_laudo_sus,
		dt_emissao,
		dt_atualizacao,
		nm_usuario,
		ie_diaria_acomp,
		cd_procedimento_solic,
		ie_origem_proced,
		cd_medico_responsavel,
		cd_cid_principal,
		cd_cid_secundario,
		cd_cid_causa_assoc,
		ds_justificativa,
		ie_classificacao,
		nr_seq_interno,
		cd_medico_requisitante,
		ie_diaria_uti,
		ds_condicao_justifica,
                nm_usuario_nrec,
                dt_atualizacao_nrec)
	SELECT 	nr_atendimento_p,
		1,
		nr_laudo_sus_w,
		dt_emissao_w,
		clock_timestamp(),
		nm_usuario_p,
		coalesce(ie_diaria_acomp,'N'),
		cd_procedimento_solic,
		ie_origem_proced_solic,
		cd_medico_autorizador,
		cd_cid_principal,
		cd_cid_secundario,
		cd_cid_causa_assoc,
		substr(ds_justificativa,1,1000),
		1,
		nr_seq_interno_w,
		cd_medico_requisitante_w,
		ie_diaria_uti,
		ds_condicao_justifica,
                nm_usuario_p,
                clock_timestamp()
	from	sus_laudo_padrao_dados
	where	nr_sequencia = (SELECT	max(x.nr_sequencia)
				from	sus_laudo_padrao_dados x
				where	x.nr_seq_laudo_padrao	= nr_seq_laudo_p
				and	x.ie_tipo_laudo		= 'M');/* M = Mudanca*/
	end;
end if;

if (ie_laudo_especial_p	= 'S') then
	begin	
	select	coalesce(max(nr_laudo_sus),0) + 1
	into STRICT	nr_laudo_sus_w
	from	sus_laudo_paciente
	where	nr_atendimento	= nr_atendimento_p;

	select	nextval('sus_laudo_paciente_seq')
	into STRICT	nr_seq_interno_w
	;
	
	insert into sus_laudo_paciente(
		nr_atendimento,
		ie_tipo_laudo_sus,
		nr_laudo_sus,
		dt_emissao,
		dt_atualizacao,
		nm_usuario,
		ie_diaria_acomp,
		cd_procedimento_solic,
		ie_origem_proced,
		cd_medico_responsavel,
		ds_justificativa,
		qt_procedimento_solic,
		ie_classificacao,
		nr_seq_interno,
		cd_medico_requisitante,
		ie_diaria_uti,
		ds_condicao_justifica,
                nm_usuario_nrec,
                dt_atualizacao_nrec)
	SELECT 	nr_atendimento_p,
		2,
		nr_laudo_sus_w,
		dt_emissao_w,
		clock_timestamp(),
		nm_usuario_p,
		coalesce(ie_diaria_acomp,'N'),
		cd_procedimento_solic,
		ie_origem_proced_solic,
		cd_medico_autorizador,
		substr(ds_justificativa,1,1000),
		qt_procedimento,
		1,
		nr_seq_interno_w,
		cd_medico_requisitante_w,
		ie_diaria_uti,
		ds_condicao_justifica,
                nm_usuario_p,
                clock_timestamp()
	from	sus_laudo_padrao_dados
	where	nr_sequencia = (SELECT	max(x.nr_sequencia)
				from	sus_laudo_padrao_dados x
				where	x.nr_seq_laudo_padrao	= nr_seq_laudo_p
				and	x.ie_tipo_laudo		= 'E');/* S = Especial*/
	open c01;
	loop
	fetch c01 into
		cd_procedimento_w,
		ie_origem_proced_w,
		qt_procedimento_w,
		ds_justificativa_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		insert into sus_laudo_proced_adic(	nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_laudo,
							cd_procedimento,
							ie_origem_proced,
							qt_procedimento,
							ds_justificativa,
                                                        nm_usuario_nrec,
                                                        dt_atualizacao_nrec)
					values (	nextval('sus_laudo_proced_adic_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_interno_w,
							cd_procedimento_w,
							ie_origem_proced_w,
							qt_procedimento_w,
							ds_justificativa_w,
                                                        nm_usuario_p,
                                                        clock_timestamp());
		end;
	end loop;
	close c01;

	end;
end if;
if (ie_laudo_radio_p	= 'S') then
	begin
	select	coalesce(max(nr_laudo_sus),0) + 1
	into STRICT	nr_laudo_sus_w
	from	sus_laudo_paciente
	where	nr_atendimento	= nr_atendimento_p;

	select	nextval('sus_laudo_paciente_seq')
	into STRICT	nr_seq_interno_w
	;

	insert into sus_laudo_paciente(
		nr_atendimento,
		ie_tipo_laudo_sus,
		nr_laudo_sus,
		dt_emissao,
		dt_atualizacao,
		nm_usuario,
		ie_diaria_acomp,
		cd_procedimento_solic,
		ie_origem_proced,
		qt_procedimento_solic,
		ds_justificativa,
		cd_cid_principal,
		cd_cid_secundario,
		cd_cid_causa_assoc,
		ie_classificacao,
		nr_seq_interno,
		cd_medico_requisitante,
		ie_tipo_laudo_apac,
		ie_origem_laudo_apac,
		ie_tipo_tumor,
		ie_status_processo,
		cd_medico_responsavel,
		ie_lifonodos_reg_inval,
		ds_localizacao_metastase,
		ds_estadio_uicc,
		ds_estadio_outro_sist,
		cd_grau_histopat,
		cd_diag_cito_hist,
		cd_tipo_tratamento,
		ie_finalidade,
		ie_urgente,
		cd_cid_morfologia,
		ds_condicao_justifica,
                nm_usuario_nrec,
                dt_atualizacao_nrec)
	SELECT 	nr_atendimento_p,
		0,
		nr_laudo_sus_w,
		dt_emissao_w,
		clock_timestamp(),
		nm_usuario_p,
		coalesce(ie_diaria_acomp,'N'),
		cd_procedimento_solic,
		ie_origem_proced_solic,
		qt_procedimento,
		substr(ds_justificativa,1,1000),
		coalesce(cd_cid_principal,cd_doenca_cid_tumor_w),
		cd_cid_secundario,
		cd_cid_causa_assoc,
		12,
		nr_seq_interno_w,
		cd_medico_requisitante_w,
		ie_tipo_laudo_apac,
		ie_origem_laudo_apac,
		ie_tipo_tumor,
		ie_status_processo,
		cd_medico_responsavel,
		ie_lifonodos_reg_inval,
		ds_localizacao_metastase,
		ds_estadio_uicc,
		ds_estadio_outro_sist,
		cd_grau_histopat,
		cd_diag_cito_hist,
		cd_tipo_tratamento,
		ie_finalidade,
		ie_urgente,
		cd_cid_morfologia,
		ds_condicao_justifica,
                nm_usuario_p,
                clock_timestamp()
	from	sus_laudo_padrao_dados
	where	nr_sequencia = (SELECT	max(x.nr_sequencia)
				from	sus_laudo_padrao_dados x
				where	x.nr_seq_laudo_padrao	= nr_seq_laudo_p
				and	x.ie_tipo_laudo		= 'R');/* R = Radioterapia*/
	select	count(*)
	into STRICT	qt_existe_w
	from	sus_laudo_padrao_irrad
	where	nr_seq_laudo_padrao	in (	SELECT	nr_sequencia
						from	sus_laudo_padrao_dados
						where	nr_seq_laudo_padrao	= nr_seq_laudo_p);

	if (qt_existe_w > 0) then
		begin

		open c03;
		loop
		fetch c03 into
			cd_doenca_cid_w,
			ds_justificativa_w,
			qt_insercao_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin

			select	nextval('sus_laudo_area_irradiada_seq')
			into STRICT	nr_seq_area_w
			;

			insert into sus_laudo_area_irradiada(
				nr_sequencia,
				nr_seq_laudo,
				cd_doenca_cid,
				qt_insercoes_area,
				dt_atualizacao,
				dt_atualizacao_nrec,
				nm_usuario,
				nm_usuario_nrec,
				ds_local_irradiacao)
			values (nr_seq_area_w,
				nr_seq_interno_w,
				cd_doenca_cid_w,
				qt_insercao_w,
				clock_timestamp(),
				clock_timestamp(),
				nm_usuario_p,
				nm_usuario_p,
				ds_justificativa_w);

			end;
		end loop;
		close c03;

		end;
	else
		begin

		select	nextval('sus_laudo_area_irradiada_seq')
		into STRICT	nr_seq_area_w
		;
	
		if (coalesce(ie_qt_proc_solic_area_irrad_w,'N') = 'S') then
			begin
			insert into sus_laudo_area_irradiada(
				nr_sequencia,
				nr_seq_laudo,
				cd_doenca_cid,
				qt_insercoes_area,
				dt_atualizacao,
				dt_atualizacao_nrec,
				nm_usuario,
				nm_usuario_nrec)
			SELECT	nr_seq_area_w,
				nr_seq_interno_w,
				coalesce(cd_cid_principal,cd_doenca_cid_tumor_w),
				substr(qt_procedimento,1,3),
				clock_timestamp(),
				clock_timestamp(),
				nm_usuario_p,
				nm_usuario_p
			from	sus_laudo_padrao_dados
			where	nr_seq_laudo_padrao	= nr_seq_laudo_p
			and	ie_tipo_laudo	= 'R'
			and	coalesce(coalesce(cd_cid_principal,cd_doenca_cid_tumor_w),'X') <> 'X';	
			end;
		else
			begin
			insert into sus_laudo_area_irradiada(
				nr_sequencia,
				nr_seq_laudo,
				cd_doenca_cid,
				qt_insercoes_area,
				dt_atualizacao,
				dt_atualizacao_nrec,
				nm_usuario,
				nm_usuario_nrec)
			SELECT	nr_seq_area_w,
				nr_seq_interno_w,
				coalesce(cd_cid_principal,cd_doenca_cid_tumor_w),
				1,
				clock_timestamp(),
				clock_timestamp(),
				nm_usuario_p,
				nm_usuario_p
			from	sus_laudo_padrao_dados
			where	nr_seq_laudo_padrao	= nr_seq_laudo_p
			and	ie_tipo_laudo	= 'R'
			and	coalesce(coalesce(cd_cid_principal,cd_doenca_cid_tumor_w),'X') <> 'X';
			end;
		end if;

		end;
	end if;

	open c01;
	loop
	fetch c01 into
		cd_procedimento_w,
		ie_origem_proced_w,
		qt_procedimento_w,
		ds_justificativa_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		insert into sus_laudo_proced_adic(	nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_laudo,
						cd_procedimento,
						ie_origem_proced,
						qt_procedimento,
                                                nm_usuario_nrec,
                                                dt_atualizacao_nrec)
				values (	nextval('sus_laudo_proced_adic_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_interno_w,
						cd_procedimento_w,
						ie_origem_proced_w,
						qt_procedimento_w,
                                                nm_usuario_p,
                                                clock_timestamp());
		end;
	end loop;
	close c01;

	end;
end if;
if (ie_laudo_outros_p	= 'S') then
	begin
	select	coalesce(max(nr_laudo_sus),0) + 1
	into STRICT	nr_laudo_sus_w
	from	sus_laudo_paciente
	where	nr_atendimento	= nr_atendimento_p;

	select	nextval('sus_laudo_paciente_seq')
	into STRICT	nr_seq_interno_w
	;
	
	insert into sus_laudo_paciente(
		nr_atendimento,
		ie_tipo_laudo_sus,
		nr_laudo_sus,
		dt_emissao,
		dt_atualizacao,
		nm_usuario,
		ie_diaria_acomp,
		cd_procedimento_solic,
		ie_origem_proced,
		qt_procedimento_solic,
		ds_justificativa,
		cd_cid_principal,
		ie_classificacao,
		nr_seq_interno,
		cd_medico_requisitante,
		ie_tipo_laudo_apac,
		ie_origem_laudo_apac,
		ie_status_processo,
		cd_medico_responsavel,
		ie_urgente,
		ds_condicao_justifica,
                nm_usuario_nrec,
                dt_atualizacao_nrec)
	SELECT 	nr_atendimento_p,
		0,
		nr_laudo_sus_w,
		dt_emissao_w,
		clock_timestamp(),
		nm_usuario_p,
		coalesce(ie_diaria_acomp,'N'),
		cd_procedimento_solic,
		ie_origem_proced_solic,
		qt_procedimento,
		substr(ds_justificativa,1,1000),
		coalesce(cd_cid_principal,cd_doenca_cid_tumor_w),
		13,
		nr_seq_interno_w,
		coalesce(cd_medico_requisitante_w,cd_medico_requisitante),
		ie_tipo_laudo_apac,
		ie_origem_laudo_apac,
		ie_status_processo,
		cd_medico_responsavel,
		ie_urgente,
		ds_condicao_justifica,
                nm_usuario_p,
                clock_timestamp()
	from	sus_laudo_padrao_dados
	where	nr_sequencia = (SELECT	max(x.nr_sequencia)
				from	sus_laudo_padrao_dados x
				where	x.nr_seq_laudo_padrao	= nr_seq_laudo_p
				and	x.ie_tipo_laudo		= 'O');/* O = APAC (Outros)*/
	end;
end if;

if (ie_laudo_bpa_p	= 'S') then
	begin
	select	coalesce(max(nr_laudo_sus),0) + 1
	into STRICT	nr_laudo_sus_w
	from	sus_laudo_paciente
	where	nr_atendimento	= nr_atendimento_p;

	select	nextval('sus_laudo_paciente_seq')
	into STRICT	nr_seq_interno_w
	;
	
	insert into sus_laudo_paciente(
		nr_atendimento,
		ie_tipo_laudo_sus,
		ie_classificacao,
		nr_laudo_sus,
		dt_emissao,
		dt_atualizacao,
		nm_usuario,
		ie_diaria_acomp,
		nr_seq_interno,
		cd_medico_responsavel,
		cd_medico_requisitante,
		cd_procedimento_solic,
		ie_origem_proced,
		qt_procedimento_solic,
		cd_cid_principal,
		ds_condicao_justifica,
		ds_resumo_exame_fis,
		ds_hipotese_diag,
		ds_exame_resultado,
		ds_sinal_sintoma,
		ds_result_prova,
                nm_usuario_nrec,
                dt_atualizacao_nrec)
	SELECT 	nr_atendimento_p,
		0,
		15,
		nr_laudo_sus_w,
		dt_emissao_w,
		clock_timestamp(),
		nm_usuario_p,
		coalesce(ie_diaria_acomp,'N'),
		nr_seq_interno_w,
		cd_medico_responsavel,
		cd_medico_requisitante,
		cd_procedimento_solic,
		ie_origem_proced_solic,
		qt_procedimento,
		cd_cid_principal,
		substr(ds_condicao_justifica,1,2000),
		substr(ds_resumo_exame_fis,1,2000),
		substr(ds_hipotese_diag,1,2000),
		substr(ds_exame_resultado,1,2000),
		substr(ds_sinal_sintoma,1,2000),
		substr(ds_result_prova,1,2000),
                nm_usuario_p,
                clock_timestamp()
	from	sus_laudo_padrao_dados
	where	nr_sequencia = (SELECT	max(x.nr_sequencia)
				from	sus_laudo_padrao_dados x
				where	x.nr_seq_laudo_padrao	= nr_seq_laudo_p
				and	x.ie_tipo_laudo		= 'B');/* B = BPA-I*/
	end;

end if;

if (ie_laudo_quimio_p = 'S') then
	begin
	select	coalesce(max(nr_laudo_sus),0) + 1
	into STRICT	nr_laudo_sus_w
	from	sus_laudo_paciente
	where	nr_atendimento	= nr_atendimento_p;

	select	nextval('sus_laudo_paciente_seq')
	into STRICT	nr_seq_interno_w
	;
	
	insert into sus_laudo_paciente(
		nr_atendimento,
		ie_tipo_laudo_sus,
		nr_laudo_sus,
		dt_emissao,
		dt_atualizacao,
		nm_usuario,
		ie_diaria_acomp,
		ie_tipo_laudo_apac,
		ie_origem_laudo_apac,
		ie_status_processo,
		cd_procedimento_solic,
		ie_origem_proced,
		qt_procedimento_solic,
		ie_classificacao,
		cd_cid_principal,
		cd_cid_secundario,
		cd_cid_morfologia,
		cd_cid_topografia,
		ie_lifonodos_reg_inval,
		ds_estadio_uicc,
		ds_localizacao_metastase,
		cd_grau_histopat,
		cd_diag_cito_hist,
		ie_tratamento_ant,
		ds_tratamento_ant,
		ds_tratamento_ant2,
		ds_tratamento_ant3,
		ie_forma_tratamento,
		ds_justificativa,
		nr_seq_interno,
		ds_condicao_justifica,
		cd_medico_requisitante,
                nm_usuario_nrec,
                dt_atualizacao_nrec)
	SELECT 	nr_atendimento_p,
		0,
		nr_laudo_sus_w,
		dt_emissao_w,
		clock_timestamp(),
		nm_usuario_p,
		coalesce(ie_diaria_acomp,'N'),
		ie_tipo_laudo_apac,
		ie_origem_laudo_apac,
		ie_status_processo,
		cd_procedimento_solic,
		7,
		qt_procedimento,
		11,
		coalesce(cd_cid_principal,cd_doenca_cid_tumor_w),
		cd_cid_secundario,
		cd_cid_morfologia,
		cd_cid_topografia,
		ie_lifonodos_reg_inval,
		ds_estadio_uicc,
		ds_localizacao_metastase,
		cd_grau_histopat,
		cd_diag_cito_hist,
		ie_tratamento_ant,
		ds_tratamento_ant,
		ds_tratamento_ant2,
		ds_tratamento_ant3,
		ie_forma_tratamento,
		substr(ds_justificativa,1,1000),
		nr_seq_interno_w,
		ds_condicao_justifica,
		CASE WHEN ie_usuario_medico_laudo_w='S' THEN  cd_medico_requisitante_w  ELSE null END ,
                nm_usuario_p,
                clock_timestamp()
	from	sus_laudo_padrao_dados
	where	nr_sequencia = (SELECT	max(x.nr_sequencia)
				from	sus_laudo_padrao_dados x
				where	x.nr_seq_laudo_padrao	= nr_seq_laudo_p
				and	x.ie_tipo_laudo		= 'Q');/* Q = APAC Quimio/Hormonioterapia*/
	open c02;
	loop
	fetch c02 into
		cd_procedimento_w,
		ie_origem_proced_w,
		qt_procedimento_w,
		ds_justificativa_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		insert into sus_laudo_proced_adic(	nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_laudo,
						cd_procedimento,
						ie_origem_proced,
						qt_procedimento,
                                                nm_usuario_nrec,
                                                dt_atualizacao_nrec)
				values (	nextval('sus_laudo_proced_adic_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_interno_w,
						cd_procedimento_w,
						ie_origem_proced_w,
						qt_procedimento_w,
                                                nm_usuario_p,
                                                clock_timestamp());

		end;
	end loop;
	close c02;	

	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_insere_laudo_padrao ( nr_atendimento_p bigint, nr_seq_laudo_p bigint, ie_laudo_solic_p text, ie_laudo_mudanca_p text, ie_laudo_especial_p text, ie_laudo_radio_p text, ie_laudo_outros_p text, ie_laudo_quimio_p text, nm_usuario_p text, ie_laudo_bpa_p text) FROM PUBLIC;

