-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_consistir_imp_sorologia ( nr_Seq_interface_p bigint, ds_lista_dados_p text, ds_lista_dados2_p text, ds_lista_dados3_p text, cd_estabelecimento_p bigint, ds_retorno_p INOUT text) AS $body$
DECLARE


ds_lista_dados_w	varchar(32000);
ds_lista_Dados2_w	varchar(32000);
ds_lista_Dados3_w	varchar(32000);

nr_seq_tipo_exame_w	bigint;
nr_seq_exame_w		bigint;
ie_pos_virgula_w	smallint;
tam_lista_w		bigint;
qt_exame_lote_regra_w	bigint;

ds_lote_kit_w		varchar(255);
ie_pos_virgula2_w	smallint;
tam_lista2_w		bigint;
ds_exame_w		varchar(255);

dt_venc_kit_w		varchar(255);
ie_pos_virgula3_w	smallint;
tam_lista3_w		bigint;

BEGIN

if (nr_seq_interface_p = 1924) or (nr_seq_interface_p = 2236) then

	select	count(*)
	into STRICT	qt_exame_lote_regra_w
	from	san_kit_exame
  where ie_exame_interno = 'N';
	
	if (qt_exame_lote_regra_w > 0) then
		
		ds_lista_dados_w  := ds_lista_dados_p;
		ds_lista_Dados2_w := ds_lista_dados2_p;
		ds_lista_Dados3_w := ds_lista_dados3_p;

		while(ds_lista_dados_w IS NOT NULL AND ds_lista_dados_w::text <> '') loop

			tam_lista_w		:= length(ds_lista_dados_w);
			ie_pos_virgula_w	:= position(',' in ds_lista_dados_w);

			tam_lista2_w		:= length(ds_lista_dados2_w);
			ie_pos_virgula2_w	:= position(',' in ds_lista_dados2_w);

			tam_lista3_w		:= length(ds_lista_dados3_w);
			ie_pos_virgula3_w	:= position(',' in ds_lista_dados3_w);
			
			if (ie_pos_virgula_w <> 0) then
				nr_seq_tipo_exame_w	:= (substr(ds_lista_dados_w, 1, (ie_pos_virgula_w - 1)))::numeric;
				ds_lista_dados_w	:= substr(ds_lista_dados_w, (ie_pos_virgula_w + 1), tam_lista_w);

				ds_lote_kit_w		:= substr(ds_lista_dados2_w, 1, (ie_pos_virgula2_w - 1));
				ds_lista_dados2_w	:= substr(ds_lista_dados2_w, (ie_pos_virgula2_w + 1), tam_lista2_w);
				
				dt_venc_kit_w		:= substr(ds_lista_dados3_w, 1, (ie_pos_virgula3_w - 1));
				ds_lista_dados3_w	:= substr(ds_lista_dados3_w, (ie_pos_virgula3_w + 1), tam_lista3_w);

			end if;

			if (nr_seq_tipo_exame_w <> 0) then

				select	coalesce(max(nr_sequencia),0),
					max(ds_exame)
				into STRICT	nr_seq_exame_w,
					ds_exame_w
				from 	san_exame
				where	cd_codigo_externo = nr_seq_tipo_exame_w
				and	coalesce(cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p;

				select	count(*)
				into STRICT	qt_exame_lote_regra_w
				from  	san_kit_exame
				where	nr_seq_exame = nr_seq_exame_w
				and	ds_lote_kit = ds_lote_kit_w
				and	clock_timestamp() between dt_vigencia_ini and dt_vigencia_final
				and	trunc(dt_vigencia_final) = to_date(dt_venc_kit_w,'dd/mm/yyyy')
        and ie_exame_interno = 'N';

				if (qt_exame_lote_regra_w = 0) then
					ds_retorno_p := wheb_mensagem_pck.get_texto(309619, 'DS_EXAME_W=' || ds_exame_w);
								/*
									O exame #@DS_EXAME_W#@ nao esta no cadastro de kit de exames.
									Ou a data de vencimento cadastrado for diferente da data de validade do arquivo.
								*/
				end if;

			end if;


		end loop;
	end if;

end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_consistir_imp_sorologia ( nr_Seq_interface_p bigint, ds_lista_dados_p text, ds_lista_dados2_p text, ds_lista_dados3_p text, cd_estabelecimento_p bigint, ds_retorno_p INOUT text) FROM PUBLIC;

