-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_preco_tabela ( cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_prestador_p pls_prestador.nr_sequencia%type, nr_seq_material_p pls_material.nr_sequencia%type, nr_seq_material_preco_p pls_material_preco.nr_sequencia%type, dt_vigencia_p timestamp, tx_ajuste_tab_p bigint, ie_tipo_preco_tab_adic_p pls_regra_preco_mat.ie_tipo_preco_tab_adic%type, vl_material_p INOUT pls_material_valor_item.vl_material%type, dt_ult_vigencia_p INOUT timestamp, cd_moeda_p INOUT pls_material_valor_item.cd_moeda%type) AS $body$
DECLARE


vl_preco_venda_w    		pls_material_valor_item.vl_material%type;
vl_material_w      		pls_material_valor_item.vl_material%type;
dt_inicio_vigencia_w    	pls_material_valor_item.dt_inicio_vigencia%type;
dt_vigencia_conta_w    		pls_material_valor_item.dt_inicio_vigencia%type;
ie_restringe_estab_w    	varchar(2);
cd_moeda_w      		pls_material_valor_item.cd_moeda%type;
qt_conversao_w      		pls_material.qt_conversao%type;
qt_conversao_mat_w		pls_material.qt_conversao%type;
ie_conversao_brasindice_w	pls_parametros.ie_conversao_brasindice%type;

c01 CURSOR(	nr_seq_material_preco_p  pls_material_preco.nr_sequencia%type,
		nr_seq_material_p  pls_material_preco_item.nr_seq_material%type,
		dt_vigencia_pc    pls_material_valor_item.dt_inicio_vigencia%type) FOR
		SELECT   a.ie_situacao situacao_mat_preco,
			 b.ie_situacao situacao_mat_item_preco,
			 a.cd_estabelecimento,
			 c.vl_material,
			 c.dt_inicio_vigencia,
			 c.nr_sequencia,
			 c.cd_moeda,
			 c.ie_tipo_preco,
			 a.ie_conversao_brasindice,
			 c.qt_convercao
		from  	 pls_material_preco  a,
			 pls_material_preco_item  b,
			 pls_material_valor_item  c
		where    a.nr_sequencia    	= nr_seq_material_preco_p
		and      b.nr_seq_material_preco  = a.nr_sequencia
		and      b.nr_seq_material  	= nr_seq_material_p
		and      c.nr_seq_preco_item  	= b.nr_sequencia
		and      c.dt_inicio_vigencia  <= dt_vigencia_pc
		and      (c.vl_material IS NOT NULL AND c.vl_material::text <> '')
		order by c.dt_inicio_vigencia;
BEGIN

select	coalesce(max(ie_conversao_brasindice), 'N')
into STRICT	ie_conversao_brasindice_w
from	pls_parametros
where	cd_estabelecimento = cd_estabelecimento_p;

select 	coalesce(max(qt_conversao),0)
into STRICT	qt_conversao_mat_w
from	pls_material
where 	nr_sequencia = nr_seq_material_p;

ie_restringe_estab_w  := pls_obter_se_controle_estab('RP');

vl_preco_venda_w := 0;
dt_inicio_vigencia_w := clock_timestamp();

-- Se a data de atendimento da conta estiver nula então utiliza a data atual
if (coalesce(dt_vigencia_p::text, '') = '') then
  dt_vigencia_conta_w := trunc(clock_timestamp());
else
  dt_vigencia_conta_w := dt_vigencia_p;
end if;

-- faz o select que foi modificado para melhorar a performance em alguns pontos
-- restrições são feitas em if devido a situação de performance
for  r_C01_w in C01(  nr_seq_material_preco_p, nr_seq_material_p, dt_vigencia_conta_w) loop

  -- retrição do estabelecimento retirada do select (performance)
  if  ((ie_restringe_estab_w  = 'N') or (ie_restringe_estab_w = 'S' AND r_C01_w.cd_estabelecimento  = cd_estabelecimento_p)) then

	-- restrição das situações retirada do select (performance)
	if  ((r_C01_w.situacao_mat_preco = 'A' or coalesce(r_C01_w.situacao_mat_preco::text, '') = '') and (r_C01_w.situacao_mat_item_preco = 'A' or coalesce(r_C01_w.situacao_mat_item_preco::text, '') = '')) then

		if  ((r_C01_w.ie_tipo_preco  = ie_tipo_preco_tab_adic_p) or (ie_tipo_preco_tab_adic_p = 'A') or (coalesce(ie_tipo_preco_tab_adic_p::text, '') = '')) then

			qt_conversao_w := null;

			if (r_C01_w.ie_conversao_brasindice = '0') then
				qt_conversao_w := r_C01_w.qt_convercao;
			end if;

			if (coalesce(qt_conversao_w, 0) = 0) then
				qt_conversao_w:= coalesce(qt_conversao_mat_w,1);
				if (ie_conversao_brasindice_w = 'N') then
					qt_conversao_w := 1;
				end if;
			end if;

			vl_preco_venda_w   	:= dividir( r_C01_w.vl_material, qt_conversao_w);
			dt_inicio_vigencia_w   	:= r_C01_w.dt_inicio_vigencia;
			cd_moeda_w    		:= r_c01_w.cd_moeda;
		end if;
	end if;
  end if;
end loop;

vl_material_w    := vl_preco_venda_w * coalesce(tx_ajuste_tab_p, 1);

vl_material_p    := vl_material_w;
dt_ult_vigencia_p  := dt_inicio_vigencia_w;
cd_moeda_p    := cd_moeda_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_preco_tabela ( cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_prestador_p pls_prestador.nr_sequencia%type, nr_seq_material_p pls_material.nr_sequencia%type, nr_seq_material_preco_p pls_material_preco.nr_sequencia%type, dt_vigencia_p timestamp, tx_ajuste_tab_p bigint, ie_tipo_preco_tab_adic_p pls_regra_preco_mat.ie_tipo_preco_tab_adic%type, vl_material_p INOUT pls_material_valor_item.vl_material%type, dt_ult_vigencia_p INOUT timestamp, cd_moeda_p INOUT pls_material_valor_item.cd_moeda%type) FROM PUBLIC;

