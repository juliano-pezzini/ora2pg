-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_atend_pacote_partic ( nr_seq_w_atend_pac_p bigint, nr_seq_tipo_acomod_p bigint, nr_seq_proced_orig_p bigint, nm_usuario_p text) AS $body$
DECLARE


C01 CURSOR FOR
	SELECT 	cd_pessoa_fisica,
		cd_especialidade,
		ie_funcao,
		nr_seq_partic
	from 	procedimento_participante
	where 	nr_sequencia = nr_seq_proced_orig_p;


c01_w	c01%rowtype;

nr_seq_regra_partic_w	bigint;
qt_regras_w		bigint;
qt_inseridas_w		bigint;
qt_sem_regra_w		bigint;


BEGIN

select  count(*)
into STRICT	qt_regras_w
from    pacote_tipo_acomod_partic a
where   a.nr_seq_tipo_acomod = nr_seq_tipo_acomod_p;


qt_sem_regra_w:= 0;
/* ler os participantes */

open C01;
loop
fetch C01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select  coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_regra_partic_w
	from    pacote_tipo_acomod_partic a
	where   a.nr_seq_tipo_acomod       = nr_seq_tipo_acomod_p
	and	coalesce(a.cd_especialidade, coalesce(c01_w.cd_especialidade,0)) =  coalesce(c01_w.cd_especialidade,0)
	and 	c01_w.ie_funcao 	   = a.ie_funcao_medico;

	if (nr_seq_regra_partic_w > 0) then

		insert into w_atend_pacote_partic(
			nr_sequencia,
			nr_seq_w_atend_pac,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_medico_executor,
			cd_especialidade,
			ie_funcao_medico,
			vl_participante,
			nr_seq_regra,
			nr_seq_partic)
		SELECT 	nextval('w_atend_pacote_partic_seq'),
			nr_seq_w_atend_pac_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			c01_w.cd_pessoa_fisica,
			cd_especialidade,
			ie_funcao_medico,
			vl_participante,
			nr_seq_regra_partic_w,
			c01_w.nr_seq_partic
		from 	pacote_tipo_acomod_partic
		where 	nr_sequencia = nr_seq_regra_partic_w;

	else
		qt_sem_regra_w:= qt_sem_regra_w + 1;

	end if;

	end;
end loop;
close C01;

select 	count(*)
into STRICT	qt_inseridas_w
from 	w_atend_pacote_partic
where	nr_seq_w_atend_pac = nr_seq_w_atend_pac_p;

if (qt_regras_w  > qt_inseridas_w) then
	rollback;
	-- Existem regras de participantes para o pacote, porém não há o lançamento do participante correspondente no gatilho do mesmo !
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(258992);
elsif (qt_regras_w < qt_inseridas_w + qt_sem_regra_w) then
	rollback;
	-- Existem participantes lançados no gatilho que não possuem regra de participante no pacote !
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(258994);
else
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_atend_pacote_partic ( nr_seq_w_atend_pac_p bigint, nr_seq_tipo_acomod_p bigint, nr_seq_proced_orig_p bigint, nm_usuario_p text) FROM PUBLIC;

