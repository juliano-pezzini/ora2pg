-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_comunic_int_guia ( nr_seq_lote_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Salvar o atendimento da guia de internação ou prorrogação com os dados da comunicação de internação;
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [ X ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_status_w		varchar(2);
nr_seq_guia_atend_w	bigint;

C01 CURSOR FOR
	SELECT	dt_internacao,
		dt_alta_prevista,
		dt_alta,
		nr_seq_guia,
		nr_sequencia,
		nr_seq_segurado,
		cd_motivo_saida
	from	pls_comunicacao_internacao
	where	nr_seq_lote_inter	= nr_seq_lote_p;

BEGIN

begin
	select	ie_status
	into STRICT	ie_status_w
	from 	pls_lote_comunicacao_inter
	where	nr_sequencia	= nr_seq_lote_p
	and	coalesce(dt_integracao::text, '') = '';
exception
when others then
	ie_status_w 	:= null;
end;


if ((ie_status_w IS NOT NULL AND ie_status_w::text <> '') and ie_status_w = 'CS') then
	for r_c01 in C01 loop
		select	max(nr_sequencia)
		into STRICT	nr_seq_guia_atend_w
		from	pls_guia_atendimento
		where	nr_seq_guia 		= r_C01.nr_seq_guia
		and	ie_tipo_registro 	= '1';

		if (coalesce(nr_seq_guia_atend_w::text, '') = '') then
			insert into pls_guia_atendimento( nr_sequencia, nr_seq_guia, dt_atualizacao,
				nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				dt_alta, ie_tipo_registro, dt_internacao,
				nr_seq_saida_int)
			values ( nextval('pls_guia_atendimento_seq'), r_c01.nr_seq_guia, clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p,
				coalesce(r_c01.dt_alta, r_c01.dt_alta_prevista), '1', r_c01.dt_internacao,
				r_c01.cd_motivo_saida);
		else
			update	pls_guia_atendimento
			set	dt_alta 	= coalesce(r_c01.dt_alta, r_c01.dt_alta_prevista),
				dt_internacao 	= coalesce(r_c01.dt_internacao, dt_internacao),
				dt_atualizacao	= clock_timestamp(),
				nm_usuario 	= nm_usuario_p
			where	nr_sequencia	= nr_seq_guia_atend_w;
		end if;

		CALL pls_guia_gravar_historico(r_C01.nr_seq_guia, 2, 'Os dados de atendimento da guia foram atualizados pela comunicação de internação ou alta.',
						null, nm_usuario_p);

		update	pls_comunicacao_internacao
		set	nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp(),
			ie_status	= 'I'
		where	nr_sequencia	= r_c01.nr_sequencia;
	end loop;

	update	pls_lote_comunicacao_inter
	set	dt_integracao 	= clock_timestamp(),
		nm_usuario 	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp(),
		ie_status	= 'I'
	where	nr_sequencia	= nr_seq_lote_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_comunic_int_guia ( nr_seq_lote_p bigint, nm_usuario_p text) FROM PUBLIC;

