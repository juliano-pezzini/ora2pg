-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_aplicar_reajuste ( nr_seq_reajuste_p bigint, ie_reajustar_regra_p text, nr_seq_contrato_p bigint, ie_commit_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_tabela_reaj_w		bigint;
nr_sequencia_w			bigint;
nr_seq_preco_w			bigint;
vl_reajustado_w			double precision;
nr_seq_tabela_w			bigint;
vl_preco_nao_sibsid_reaj_w	double precision;
vl_minimo_w			double precision;
nr_seq_regra_inscricao_w	bigint;
tx_reajuste_w			double precision;
ie_reajustar_inscricao_w	varchar(1);
vl_inscricao_w			double precision;
tx_inscricao_w			double precision;
qt_parcela_inicial_w		integer;
qt_parcela_final_w		integer;
ie_acao_contrato_w		varchar(2);
ie_reajustar_vl_manutencao_w	varchar(2);
vl_manutencao_w			double precision;
ie_cobranca_w			varchar(2);
nr_seq_regra_pos_estab_w	bigint;
qt_regra_inscricao_w		bigint;
tx_administracao_w		double precision;
ie_autorizacao_previa_w		varchar(1);
qt_regra_pos_estab_w		bigint;
ie_coparticipacao_w		varchar(1);
ie_grau_dependencia_w		varchar(2);
tx_reajuste_inscricao_w		double precision;
ie_reajustar_via_adic_w		varchar(1);
nr_seq_lote_reaj_inscricao_w	bigint;
nr_seq_lote_reaj_copartic_w	bigint;
dt_reajuste_w			timestamp;
nr_seq_intercambio_w		bigint;
vl_adaptacao_w			double precision;
ie_existe_tabela_w		varchar(1);
ie_existe_copartic_w		varchar(1);
ie_existe_inscricao_w		varchar(1);
nr_seq_contrato_w		bigint;
nr_contrato_w			bigint;
nr_seq_reajuste_desfazer_w	pls_reajuste.nr_seq_reajuste_desfazer%type;
nr_contrato_ww			pls_contrato.nr_contrato%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
qt_cobr_retro_mens_w		bigint;
nr_seq_contrato_ww		pls_contrato.nr_sequencia%type;
ie_tipo_lote_w			pls_reajuste.ie_tipo_lote%type;
nr_seq_lote_deflator_w		pls_reajuste.nr_seq_lote_deflator%type;

c01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_tabela
	from	pls_reajuste_tabela
	where	nr_seq_reajuste	= nr_seq_reajuste_p
	and	coalesce(dt_liberacao::text, '') = '';

c02 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_preco,
		vl_reajustado,
		vl_preco_nao_subsidiado,
		vl_minimo,
		vl_adaptacao
	from	pls_reajuste_preco
	where	nr_seq_tabela	= nr_seq_tabela_reaj_w
	and	coalesce(dt_liberacao::text, '') = '';

C03 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_lote_reaj_copartic	a,
		pls_reajuste		b
	where	a.nr_seq_reajuste	= b.nr_sequencia
	and	b.nr_sequencia		= nr_seq_reajuste_p;

C04 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_lote_reaj_inscricao	a,
		pls_reajuste		b
	where	a.nr_seq_reajuste	= b.nr_sequencia
	and	b.nr_sequencia		= nr_seq_reajuste_p;

C05 CURSOR FOR
	SELECT	nr_sequencia,
		((coalesce(tx_reajuste_w,0)/100) * coalesce(vl_informado,0)) + coalesce(vl_informado,0) vl_manutencao,
		ie_cobranca,
		tx_administracao,
		ie_autorizacao_previa,
		nr_seq_grupo_servico,
		nr_seq_grupo_material,
		ie_repassa_medico
	from	pls_regra_pos_estabelecido
	where	nr_seq_contrato	= nr_seq_contrato_p
	and	dt_reajuste_w	between coalesce(dt_vigencia_inicio,dt_reajuste_w) and coalesce(dt_vigencia_fim,dt_reajuste_w)
	
union

	SELECT	nr_sequencia,
		((coalesce(tx_reajuste_w,0)/100) * coalesce(vl_informado,0)) + coalesce(vl_informado,0) vl_manutencao,
		ie_cobranca,
		tx_administracao,
		ie_autorizacao_previa,
		nr_seq_grupo_servico,
		nr_seq_grupo_material,
		ie_repassa_medico
	from	pls_regra_pos_estabelecido
	where	nr_seq_intercambio	= nr_seq_intercambio_w
	and	dt_reajuste_w	between coalesce(dt_vigencia_inicio,dt_reajuste_w) and coalesce(dt_vigencia_fim,dt_reajuste_w);

TYPE 		fetch_array IS TABLE OF C01%ROWTYPE;
s_array 	fetch_array;
i		integer := 1;
type Vetor is table of fetch_array index by integer;
Vetor_C01_w			Vetor;
BEGIN
ie_existe_tabela_w		:= 'N';
ie_existe_copartic_w		:= 'N';
ie_existe_inscricao_w		:= 'N';

select	max(nr_seq_contrato)
into STRICT	nr_seq_contrato_w
from	pls_reajuste
where	nr_sequencia	= nr_seq_reajuste_p;

select	max(nr_contrato)
into STRICT	nr_contrato_w
from	pls_contrato
where	nr_sequencia	= nr_seq_contrato_w;

open C01;
loop
fetch C01 bulk collect into s_array limit 1000;
	Vetor_C01_w(i) := s_array;
	i := i + 1;
EXIT WHEN NOT FOUND; /* apply on C01 */
end loop;
close C01;

for i in 1..Vetor_C01_w.count loop
	s_array := Vetor_C01_w(i);
	for z in 1..s_array.count loop
		begin
		nr_seq_tabela_reaj_w		:= s_array[z].nr_sequencia;
		nr_seq_tabela_w			:= s_array[z].nr_seq_tabela;

		ie_existe_tabela_w	:= 'S';

		open c02;
		loop
		fetch c02 into
			nr_sequencia_w,
			nr_seq_preco_w,
			vl_reajustado_w,
			vl_preco_nao_sibsid_reaj_w,
			vl_minimo_w,
			vl_adaptacao_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			update	pls_reajuste_preco
			set	dt_liberacao	= clock_timestamp(),
				nm_usuario_lib	= nm_usuario_p
			where	nr_sequencia	= nr_sequencia_w;

			update	pls_plano_preco
			set	vl_preco_atual			= vl_reajustado_w,
				vl_preco_nao_subsid_atual	= vl_preco_nao_sibsid_reaj_w,
				vl_minimo			= vl_minimo_w,
				vl_adaptacao			= vl_adaptacao_w,
				dt_atualizacao			= clock_timestamp(),
				nm_usuario			= nm_usuario_p
			where	nr_sequencia			= nr_seq_preco_w;
		end loop;
		close c02;

		update	pls_reajuste_tabela
		set	dt_liberacao	= clock_timestamp(),
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where	nr_sequencia	= nr_seq_tabela_reaj_w;

		update	pls_segurado
		set	ie_tipo_valor	= 'I'
		where	nr_seq_tabela	= nr_seq_tabela_w;
		end;
	end loop;
end loop;

select	tx_reajuste,
	ie_reajustar_inscricao,
	ie_reajustar_vl_manutencao,
	coalesce(tx_reajuste_inscricao,tx_reajuste),
	ie_reajustar_copartic,
	ie_reajustar_via_adic,
	dt_reajuste,
	nr_seq_intercambio,
	nr_seq_reajuste_desfazer,
	nr_contrato,
	nr_seq_segurado,
	ie_tipo_lote,
	nr_seq_lote_deflator
into STRICT	tx_reajuste_w,
	ie_reajustar_inscricao_w,
	ie_reajustar_vl_manutencao_w,
	tx_reajuste_inscricao_w,
	ie_coparticipacao_w,
	ie_reajustar_via_adic_w,
	dt_reajuste_w,
	nr_seq_intercambio_w,
	nr_seq_reajuste_desfazer_w,
	nr_contrato_ww,
	nr_seq_segurado_w,
	ie_tipo_lote_w,
	nr_seq_lote_deflator_w
from	pls_reajuste
where	nr_sequencia	= nr_seq_reajuste_p;

if (ie_coparticipacao_w = 'S') then

	open C03;
	loop
	fetch C03 into
		nr_seq_lote_reaj_copartic_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		ie_existe_copartic_w	:= 'S';
		CALL pls_aplicar_reaj_lote_copartic(nr_seq_lote_reaj_copartic_w, dt_reajuste_w, 'L', 'N', cd_estabelecimento_p, nm_usuario_p);
		CALL pls_aplicar_reaj_lote_copartic(nr_seq_lote_reaj_copartic_w, dt_reajuste_w, 'A', 'N', cd_estabelecimento_p, nm_usuario_p);
		end;
	end loop;
	close C03;
end if;

if (ie_reajustar_inscricao_w = 'S') then
	open C04;
	loop
	fetch C04 into
		nr_seq_lote_reaj_inscricao_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		ie_existe_inscricao_w	:= 'S';
		CALL pls_aplicar_reaj_inscricao(nr_seq_lote_reaj_inscricao_w, 'L', dt_reajuste_w, cd_estabelecimento_p, nm_usuario_p);
		CALL pls_aplicar_reaj_inscricao(nr_seq_lote_reaj_inscricao_w, 'A', dt_reajuste_w, cd_estabelecimento_p, nm_usuario_p);
		end;
	end loop;
	close C04;
end if;

if (ie_existe_tabela_w ='N') and (ie_existe_copartic_w = 'N') and (ie_existe_inscricao_w = 'N') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort( 238968, 'NR_CONTRATO='||nr_contrato_w );
end if;

if (ie_reajustar_vl_manutencao_w = 'S') then
	for r_c05_w in c05 loop

	update	pls_regra_pos_estabelecido
	set	dt_vigencia_fim	= trunc(dt_reajuste_w - 1,'dd')
	where	nr_sequencia	= r_c05_w.nr_sequencia;

	insert	into	pls_regra_pos_estabelecido(	nr_sequencia, tx_administracao, vl_informado,
			dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
			nm_usuario_nrec, dt_vigencia_inicio, nr_seq_contrato,
			ie_cobranca, ie_autorizacao_previa, nr_seq_intercambio,
			nr_seq_grupo_servico, nr_seq_grupo_material, ie_repassa_medico)
		values (	nextval('pls_regra_pos_estabelecido_seq'), r_c05_w.tx_administracao, r_c05_w.vl_manutencao,
			clock_timestamp(), nm_usuario_p, clock_timestamp(),
			nm_usuario_p, dt_reajuste_w, nr_seq_contrato_p,
			r_c05_w.ie_cobranca, r_c05_w.ie_autorizacao_previa, nr_seq_intercambio_w,
			r_c05_w.nr_seq_grupo_servico, r_c05_w.nr_seq_grupo_material, r_c05_w.ie_repassa_medico);
	end loop;
end if;

if (ie_reajustar_regra_p = 'S') then
	CALL pls_reajustar_regra_mens(nr_seq_reajuste_p, nm_usuario_p, cd_estabelecimento_p);
end if;

if (ie_reajustar_via_adic_w	= 'S') then
	CALL pls_reajustar_via_carteira(nr_seq_reajuste_p,nr_seq_contrato_p,cd_estabelecimento_p,nm_usuario_p);
end if;

CALL pls_reaj_regra_apropriacao(nr_seq_reajuste_p,nm_usuario_p,'N');

if (ie_tipo_lote_w = 'A') then
	--Gerar lançamento de cobrança retroativa.
	CALL pls_reaj_cobranca_retro_pck.gerar_lancamentos(nr_seq_reajuste_p, null, cd_estabelecimento_p, nm_usuario_p);
else
	--Inativar o lançamento de cobrança retroativa
	if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
		select	count(1)
		into STRICT	qt_cobr_retro_mens_w
		from	pls_segurado_mensalidade a,
			pls_reajuste_cobr_retro b,
			pls_reajuste c
		where	b.nr_sequencia = a.nr_seq_reaj_retro
		and	c.nr_sequencia = b.nr_seq_reajuste
		and	c.dt_reajuste = dt_reajuste_w
		and	((((c.nr_sequencia = nr_seq_reajuste_desfazer_w) or (coalesce(nr_seq_reajuste_desfazer_w::text, '') = '')) and (coalesce(c.nr_seq_lote_deflator::text, '') = ''))
		 or	(c.nr_seq_lote_deflator = nr_seq_reajuste_p AND c.nr_seq_lote_deflator IS NOT NULL AND c.nr_seq_lote_deflator::text <> ''))
		and	a.nr_seq_segurado = nr_seq_segurado_w
		and	(a.nr_seq_item_mensalidade IS NOT NULL AND a.nr_seq_item_mensalidade::text <> '');

		if (qt_cobr_retro_mens_w = 0) then
			update	pls_segurado_mensalidade
			set	ie_situacao = 'I',
				ds_observacao = ds_observacao || ' - Registro inativado.',
				nm_usuario_nrec = nm_usuario_p,
				dt_atualizacao_nrec = clock_timestamp()
			where	nr_sequencia in (SELECT	a.nr_sequencia
						from	pls_segurado_mensalidade a,
							pls_reajuste_cobr_retro b,
							pls_reajuste c
						where	b.nr_sequencia = a.nr_seq_reaj_retro
						and	c.nr_sequencia = b.nr_seq_reajuste
						and	c.dt_reajuste = dt_reajuste_w
						and	((((c.nr_sequencia = nr_seq_reajuste_desfazer_w) or (coalesce(nr_seq_reajuste_desfazer_w::text, '') = '')) and (coalesce(c.nr_seq_lote_deflator::text, '') = ''))
						 or	(c.nr_seq_lote_deflator = nr_seq_reajuste_p AND c.nr_seq_lote_deflator IS NOT NULL AND c.nr_seq_lote_deflator::text <> ''))
						and	a.nr_seq_segurado = nr_seq_segurado_w);
		end if;
	elsif (nr_contrato_ww IS NOT NULL AND nr_contrato_ww::text <> '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_contrato_ww
		from	pls_contrato
		where	nr_contrato = nr_contrato_ww;

		select	count(1)
		into STRICT	qt_cobr_retro_mens_w
		from	pls_segurado_mensalidade a,
			pls_reajuste_cobr_retro b,
			pls_reajuste c
		where	b.nr_sequencia = a.nr_seq_reaj_retro
		and	c.nr_sequencia = b.nr_seq_reajuste
		and	c.dt_reajuste = dt_reajuste_w
		and	((((c.nr_sequencia = nr_seq_reajuste_desfazer_w) or (coalesce(nr_seq_reajuste_desfazer_w::text, '') = '')) and (coalesce(c.nr_seq_lote_deflator::text, '') = ''))
		 or	(c.nr_seq_lote_deflator = nr_seq_reajuste_p AND c.nr_seq_lote_deflator IS NOT NULL AND c.nr_seq_lote_deflator::text <> ''))
		and	(a.nr_seq_item_mensalidade IS NOT NULL AND a.nr_seq_item_mensalidade::text <> '')
		and	exists (SELECT	1
				from	pls_segurado x
				where	x.nr_sequencia = a.nr_seq_segurado
				and	x.nr_seq_contrato = nr_seq_contrato_ww);

		if (qt_cobr_retro_mens_w = 0) then
			update	pls_segurado_mensalidade
			set	ie_situacao = 'I',
				ds_observacao = ds_observacao || ' - Registro inativado.',
				nm_usuario_nrec = nm_usuario_p,
				dt_atualizacao_nrec = clock_timestamp()
			where	nr_sequencia in (SELECT	a.nr_sequencia
						from	pls_segurado_mensalidade a,
							pls_reajuste_cobr_retro b,
							pls_reajuste c
						where	b.nr_sequencia = a.nr_seq_reaj_retro
						and	c.nr_sequencia = b.nr_seq_reajuste
						and	c.dt_reajuste = dt_reajuste_w
						and	((((c.nr_sequencia = nr_seq_reajuste_desfazer_w) or (coalesce(nr_seq_reajuste_desfazer_w::text, '') = '')) and (coalesce(c.nr_seq_lote_deflator::text, '') = ''))
						 or	(c.nr_seq_lote_deflator = nr_seq_reajuste_p AND c.nr_seq_lote_deflator IS NOT NULL AND c.nr_seq_lote_deflator::text <> ''))
						and	exists (select	1
								from	pls_segurado x
								where	x.nr_sequencia = a.nr_seq_segurado
								and	x.nr_seq_contrato = nr_seq_contrato_ww));
		end if;
	elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
		select	count(1)
		into STRICT	qt_cobr_retro_mens_w
		from	pls_segurado_mensalidade a,
			pls_reajuste_cobr_retro b,
			pls_reajuste c
		where	b.nr_sequencia = a.nr_seq_reaj_retro
		and	c.nr_sequencia = b.nr_seq_reajuste
		and	c.dt_reajuste = dt_reajuste_w
		and	((((c.nr_sequencia = nr_seq_reajuste_desfazer_w) or (coalesce(nr_seq_reajuste_desfazer_w::text, '') = '')) and (coalesce(c.nr_seq_lote_deflator::text, '') = ''))
		 or	(c.nr_seq_lote_deflator = nr_seq_reajuste_p AND c.nr_seq_lote_deflator IS NOT NULL AND c.nr_seq_lote_deflator::text <> ''))
		and	(a.nr_seq_item_mensalidade IS NOT NULL AND a.nr_seq_item_mensalidade::text <> '')
		and	exists (SELECT	1
				from	pls_segurado x
				where	x.nr_sequencia = a.nr_seq_segurado
				and	x.nr_seq_intercambio = nr_seq_intercambio_w);

		if (qt_cobr_retro_mens_w = 0) then
			update	pls_segurado_mensalidade
			set	ie_situacao = 'I',
				ds_observacao = ds_observacao || ' - Registro inativado.',
				nm_usuario_nrec = nm_usuario_p,
				dt_atualizacao_nrec = clock_timestamp()
			where	nr_sequencia in (SELECT	a.nr_sequencia
						from	pls_segurado_mensalidade a,
							pls_reajuste_cobr_retro b,
							pls_reajuste c
						where	b.nr_sequencia = a.nr_seq_reaj_retro
						and	c.nr_sequencia = b.nr_seq_reajuste
						and	c.dt_reajuste = dt_reajuste_w
						and	((((c.nr_sequencia = nr_seq_reajuste_desfazer_w) or (coalesce(nr_seq_reajuste_desfazer_w::text, '') = '')) and (coalesce(c.nr_seq_lote_deflator::text, '') = ''))
						 or	(c.nr_seq_lote_deflator = nr_seq_reajuste_p AND c.nr_seq_lote_deflator IS NOT NULL AND c.nr_seq_lote_deflator::text <> ''))
						and	exists (select	1
								from	pls_segurado x
								where	x.nr_sequencia = a.nr_seq_segurado
								and	x.nr_seq_intercambio = nr_seq_intercambio_w));
		end if;
	else
		select	count(1)
		into STRICT	qt_cobr_retro_mens_w
		from	pls_segurado_mensalidade a,
			pls_reajuste_cobr_retro b,
			pls_reajuste c
		where	b.nr_sequencia = a.nr_seq_reaj_retro
		and	c.nr_sequencia = b.nr_seq_reajuste
		and	c.dt_reajuste = dt_reajuste_w
		and	((((c.nr_sequencia = nr_seq_reajuste_desfazer_w) or (coalesce(nr_seq_reajuste_desfazer_w::text, '') = '')) and (coalesce(c.nr_seq_lote_deflator::text, '') = ''))
		 or	(c.nr_seq_lote_deflator = nr_seq_reajuste_p AND c.nr_seq_lote_deflator IS NOT NULL AND c.nr_seq_lote_deflator::text <> ''))
		and	(a.nr_seq_item_mensalidade IS NOT NULL AND a.nr_seq_item_mensalidade::text <> '');

		if (qt_cobr_retro_mens_w = 0) then
			update	pls_segurado_mensalidade
			set	ie_situacao = 'I',
				ds_observacao = ds_observacao || ' - Registro inativado.',
				nm_usuario_nrec = nm_usuario_p,
				dt_atualizacao_nrec = clock_timestamp()
			where	nr_sequencia in (SELECT	a.nr_sequencia
						from	pls_segurado_mensalidade a,
							pls_reajuste_cobr_retro b,
							pls_reajuste c
						where	b.nr_sequencia = a.nr_seq_reaj_retro
						and	c.nr_sequencia = b.nr_seq_reajuste
						and	c.dt_reajuste = dt_reajuste_w
						and	((((c.nr_sequencia = nr_seq_reajuste_desfazer_w) or (coalesce(nr_seq_reajuste_desfazer_w::text, '') = '')) and (coalesce(c.nr_seq_lote_deflator::text, '') = ''))
						 or	(c.nr_seq_lote_deflator = nr_seq_reajuste_p AND c.nr_seq_lote_deflator IS NOT NULL AND c.nr_seq_lote_deflator::text <> '')));
		end if;
	end if;

	if (qt_cobr_retro_mens_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(812078);
	end if;
end if;

update	pls_reajuste
set	ie_status	= '2',
	nm_usuario	= nm_usuario_p,
	dt_atualizacao	= clock_timestamp()
where	nr_sequencia	= nr_seq_reajuste_p;

if (coalesce(ie_commit_p,'N') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_aplicar_reajuste ( nr_seq_reajuste_p bigint, ie_reajustar_regra_p text, nr_seq_contrato_p bigint, ie_commit_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

