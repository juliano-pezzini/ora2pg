-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE Lista AS (
	nm	varchar(50),
	dt	timestamp
	);


CREATE OR REPLACE PROCEDURE gerar_avaliacao_usuario_sup ( dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text ) AS $body$
DECLARE


nr_sequencia_w		bigint;
dt_fim_real_w		timestamp;
dt_cliente_teste_w	timestamp;
dt_recebimento_w	timestamp;
nm_usuario_exec_w	varchar(15);
qt_encerrada_w		bigint;
nr_seq_estagio_w	bigint;
qt_registro_w		bigint;
ie_referencia_w		varchar(15);
nr_seq_grupo_sup_w	bigint;
dt_referencia_w		timestamp;
qt_mes_w		smallint;
dt_ref_inicial_w	timestamp := clock_timestamp() + interval '60 days';
qt_minuto_w		double precision;
qt_mes_01_w		double precision;
qt_mes_02_w		double precision;
qt_mes_03_w		double precision;
qt_mes_04_w		double precision;
qt_mes_05_w		double precision;
qt_mes_06_w		double precision;
qt_mes_07_w		double precision;
qt_mes_08_w		double precision;
qt_mes_09_w		double precision;
qt_mes_10_w		double precision;
qt_mes_11_w		double precision;
qt_mes_12_w		double precision;
qt_mes_corrente_w	double precision;
ie_ordem_w		smallint;
qt_controle_w		bigint := 0;
contador_w		bigint;

type arrayExecutores is table of Lista index by integer;

ar_executores_w		arrayExecutores;
ar_executores_vazio_w	arrayExecutores;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.dt_fim_real,
	a.nr_seq_estagio,
	a.nr_seq_grupo_sup
from	man_ordem_servico a
where	a.dt_ordem_servico between dt_inicial_p and dt_final_p
and 	exists (	select	1
			from	man_ordem_serv_estagio b,
				man_estagio_processo c
			where	a.nr_sequencia		= b.nr_seq_ordem
			and	b.nr_seq_estagio 	= c.nr_sequencia
			and	c.ie_suporte = 'S'
		);

c02 CURSOR FOR
SELECT	b.nm_usuario_exec,
	min(coalesce(b.dt_recebimento, b.dt_atualizacao)),
	sum(a.qt_minuto) qt
from	man_ordem_serv_ativ a,
	man_ordem_servico_exec b
where	a.nr_seq_ordem_serv = nr_seq_ordem
and	a.nm_usuario_exec = b.nm_usuario_exec
and	a.nr_seq_ordem_serv = nr_sequencia_w
and	b.nr_seq_ordem = nr_sequencia_w
and	exists (	select	1
			from	grupo_suporte c,
				usuario_grupo_sup d
			where	d.nr_seq_grupo = c.nr_sequencia
			and	d.nm_usuario_grupo = a.nm_usuario_exec
		)
and	exists (	select	1
			from	grupo_suporte e,
				usuario_grupo_sup f
			where	f.nr_seq_grupo = e.nr_sequencia
			and	f.nm_usuario_grupo = b.nm_usuario_exec
		)
group by b.nm_usuario_exec

union

select 	a.nm_usuario_exec,
	coalesce(a.dt_recebimento, a.dt_atualizacao),
	sum(0) qt
from 	man_ordem_servico_exec a
where	a.nr_seq_ordem 	= nr_sequencia_w
and	not exists (	select	1
			from	man_ordem_serv_ativ b
			where	b.nr_seq_ordem_serv = a.nr_seq_ordem
			and	b.nr_seq_ordem_serv = nr_sequencia_w
		)
and	exists (	select	1
			from	man_ordem_servico c,
				man_estagio_processo d
			where	c.nr_sequencia = a.nr_seq_ordem
			and	c.nr_seq_estagio = d.nr_sequencia
			and	d.ie_suporte = 'S'
		)
and	exists (	select	1
			from	grupo_suporte e,
				usuario_grupo_sup f
			where	f.nr_seq_grupo = e.nr_sequencia
			and	f.nm_usuario_grupo = a.nm_usuario_exec
		)
group by a.nm_usuario_exec,
	coalesce(a.dt_recebimento, a.dt_atualizacao)
order by 3, 2;

c03 CURSOR FOR
SELECT	sum(qt_ordem),
	ie_referencia,
	nm_usuario,
	trunc(dt_referencia,'mm') dt,
	nr_seq_grupo_sup,
	CASE WHEN ie_referencia='R' THEN 5 WHEN ie_referencia='C' THEN 10 WHEN ie_referencia='E' THEN 15 WHEN ie_referencia='DU' THEN 20 WHEN ie_referencia='PRDU' THEN 25 END
from	w_avaliacao_usuario
where	dt_referencia between dt_inicial_p and dt_final_p
and	nm_usuario_cor = nm_usuario_p
group by ie_referencia,
	nm_usuario,
	trunc(dt_referencia,'mm'),
	nr_seq_grupo_sup,
	CASE WHEN ie_referencia='R' THEN 5 WHEN ie_referencia='C' THEN 10 WHEN ie_referencia='E' THEN 15 WHEN ie_referencia='DU' THEN 20 WHEN ie_referencia='PRDU' THEN 25 END 
order by dt desc;

c04 CURSOR FOR
SELECT	b.dt_fim_execucao,
	a.nr_sequencia,
	b.nm_usuario_exec,
	a.nr_seq_grupo_sup
from	os_recebida_gerencia_sup_v a,
	man_ordem_servico_exec b
where	a.nr_sequencia = b.nr_seq_ordem
and	a.ie_classificacao = 'D'
and	(b.dt_fim_execucao IS NOT NULL AND b.dt_fim_execucao::text <> '')
and	exists (	select	1
			from	usuario_grupo_sup c
			where	c.nm_usuario_grupo = b.nm_usuario_exec
		);

c05 CURSOR FOR
SELECT	nm_usuario,
	trunc(dt_referencia,'mm'),
	round((dividir(SUM(CASE WHEN ie_referencia='DU' THEN qt_mes_01  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_01  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='DU' THEN qt_mes_02  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_02  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='DU' THEN qt_mes_03  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_03  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='DU' THEN qt_mes_04  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_04  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='DU' THEN qt_mes_05  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_05  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='DU' THEN qt_mes_06  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_06  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='DU' THEN qt_mes_07  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_07  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='DU' THEN qt_mes_08  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_08  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='DU' THEN qt_mes_09  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_09  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='DU' THEN qt_mes_10  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_10  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='DU' THEN qt_mes_11  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_11  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='DU' THEN qt_mes_12  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_12  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='DU' THEN qt_mes_corrente  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_corrente  ELSE 0 END )))::numeric,2)
from	w_avaliacao_usuario
where	nm_usuario_cor = nm_usuario_p
group by nm_usuario, trunc(dt_referencia,'mm')
order by nm_usuario;


BEGIN

delete	FROM w_avaliacao_usuario
where	nm_usuario_cor = nm_usuario_p;

open C01;
loop
fetch C01 into
	nr_sequencia_w,
	dt_fim_real_w,
	nr_seq_estagio_w,
	nr_seq_grupo_sup_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	ar_executores_w := ar_executores_vazio_w;
	qt_controle_w := 0;

	nm_usuario_exec_w := null;
	dt_recebimento_w := null;

	open C02;
	loop
	fetch C02 into
		nm_usuario_exec_w,
		dt_recebimento_w,
		qt_minuto_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		ar_executores_w[qt_controle_w].nm := nm_usuario_exec_w;
		ar_executores_w[qt_controle_w].dt := dt_recebimento_w;
		qt_controle_w := qt_controle_w + 1;
		end;
	end loop;
	close C02;

	/*Verifica se existe dois executores na OS e caso o executor com maior tempo de execução for o analista, irá retira-lo e deixar a OS para o funcionário com maior tempo de execução*/

	if (ar_executores_w.count > 1 ) then
		for contador_w IN REVERSE ar_executores_w.count..0 - 1 loop
			select 	count(*)
			into STRICT	qt_controle_w
			from	grupo_suporte a,
				usuario_grupo_sup b
			where	a.nr_sequencia = b.nr_seq_grupo
			and	b.ie_funcao_usuario in ('S')
			and	nm_usuario_grupo = ar_executores_w[contador_w].nm;

			if (qt_controle_w = 0) then
				nm_usuario_exec_w := ar_executores_w[contador_w].nm;
				dt_recebimento_w := ar_executores_w[contador_w].dt;
				exit;
			end if;
		end loop;
	end if;

	if (nm_usuario_exec_w IS NOT NULL AND nm_usuario_exec_w::text <> '') then

		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_ordem,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_sup,
			ie_ordem,
			nr_seq_ordem_serv)
		values (	dt_recebimento_w,
			1,
			'R',
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_sup_w,
			5,
			nr_sequencia_w);

		--Pega última data que a OS ficou em um estágio de suporte
		select	max(b.dt_atualizacao)
		into STRICT	dt_cliente_teste_w
		from	man_ordem_servico a,
			man_ordem_serv_estagio b
		where	a.nr_sequencia = b.nr_seq_ordem
		and	a.nr_sequencia = nr_sequencia_w
		and	exists (	SELECT	1
					from	man_estagio_processo c
					where	c.nr_sequencia = b.nr_seq_estagio
					and	c.ie_suporte = 'S'
				)
		and	not exists (	select	1
					from	man_estagio_processo c
					where	c.nr_sequencia = a.nr_seq_estagio
					and	c.ie_suporte = 'S'
				);

		if (coalesce(dt_cliente_teste_w::text, '') = '') then

			select	max(dt_atualizacao)
			into STRICT	dt_cliente_teste_w
			from	man_ordem_serv_estagio
			where	nr_seq_ordem = nr_sequencia_w
			and	nr_seq_estagio in (511,811,9,791,1234,1071);

		end if;

		if (dt_cliente_teste_w IS NOT NULL AND dt_cliente_teste_w::text <> '') then
			insert into w_avaliacao_usuario(
				dt_referencia,
				qt_ordem,
				ie_referencia,
				nm_usuario,
				nm_usuario_cor,
				nr_seq_grupo_sup,
				ie_ordem,
				nr_seq_ordem_serv)
			values (	dt_cliente_teste_w,
				1,
				'C',
				nm_usuario_exec_w,
				nm_usuario_p,
				nr_seq_grupo_sup_w,
				10,
				nr_sequencia_w);
		end if;

		if (dt_fim_real_w IS NOT NULL AND dt_fim_real_w::text <> '') then
			insert into w_avaliacao_usuario(
				dt_referencia,
				qt_ordem,
				ie_referencia,
				nm_usuario,
				nm_usuario_cor,
				nr_seq_grupo_sup,
				ie_ordem,
				nr_seq_ordem_serv)
			values (	dt_fim_real_w,
				1,
				'E',
				nm_usuario_exec_w,
				nm_usuario_p,
				nr_seq_grupo_sup_w,
				15,
				nr_sequencia_w);
		end if;
		commit;
	end if;
	end;

	ar_executores_w := ar_executores_vazio_w;
	qt_controle_w := 0;

	nm_usuario_exec_w := null;
	dt_recebimento_w := null;
end loop;
close C01;

open c04;
loop
fetch c04 into
	dt_recebimento_w,
	nr_sequencia_w,
	nm_usuario_exec_w,
	nr_seq_grupo_sup_w;
EXIT WHEN NOT FOUND; /* apply on c04 */
begin

	insert into w_avaliacao_usuario(
		dt_referencia,
		qt_ordem,
		ie_referencia,
		nm_usuario,
		nm_usuario_cor,
		nr_seq_grupo_sup,
		ie_ordem,
		nr_seq_ordem_serv)
	values (dt_recebimento_w,
		1,
		'DU',
		nm_usuario_exec_w,
		nm_usuario_p,
		nr_seq_grupo_sup_w,
		20,
		nr_sequencia_w);

end;
end loop;
close c04;

qt_mes_w := 0;

open c03;
loop
fetch c03 into
	qt_registro_w,
	ie_referencia_w,
	nm_usuario_exec_w,
	dt_referencia_w,
	nr_seq_grupo_sup_w,
	ie_ordem_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
	begin
	if (dt_referencia_w < dt_ref_inicial_w) then
		dt_ref_inicial_w	:= dt_referencia_w;
		qt_mes_w			:= qt_mes_w + 1;
	end if;

	if (qt_mes_w = 1) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_corrente,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_sup,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_sup_w,
			ie_ordem_w);
	elsif (qt_mes_w = 2) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_12,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_sup,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_sup_w,
			ie_ordem_w);
	elsif (qt_mes_w = 3) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_11,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_sup,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_sup_w,
			ie_ordem_w);
	elsif (qt_mes_w = 4) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_10,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_sup,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_sup_w,
			ie_ordem_w);
	elsif (qt_mes_w = 5) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_09,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_sup,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_sup_w,
			ie_ordem_w);
	elsif (qt_mes_w = 6) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_08,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_sup,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_sup_w,
			ie_ordem_w);
	elsif (qt_mes_w = 7) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_07,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_sup,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_sup_w,
			ie_ordem_w);
	elsif (qt_mes_w = 8) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_06,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_sup,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_sup_w,
			ie_ordem_w);
	elsif (qt_mes_w = 9) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_05,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_sup,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_sup_w,
			ie_ordem_w);
	elsif (qt_mes_w = 10) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_04,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_sup,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_sup_w,
			ie_ordem_w);
	elsif (qt_mes_w = 11) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_03,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_sup,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_sup_w,
			ie_ordem_w);
	elsif (qt_mes_w = 12) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_02,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_sup,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_sup_w,
			ie_ordem_w);
	elsif (qt_mes_w = 13) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_01,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_sup,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_sup_w,
			ie_ordem_w);
	end if;
	end;
end loop;
close c03;

open c05;
loop
fetch c05 into
	nm_usuario_exec_w,
	dt_referencia_w,
	qt_mes_01_w,
	qt_mes_02_w,
	qt_mes_03_w,
	qt_mes_04_w,
	qt_mes_05_w,
	qt_mes_06_w,
	qt_mes_07_w,
	qt_mes_08_w,
	qt_mes_09_w,
	qt_mes_10_w,
	qt_mes_11_w,
	qt_mes_12_w,
	qt_mes_corrente_w;
EXIT WHEN NOT FOUND; /* apply on c05 */
	begin
	insert into w_avaliacao_usuario(
		nm_usuario,
		dt_referencia,
		qt_mes_01,
		qt_mes_02,
		qt_mes_03,
		qt_mes_04,
		qt_mes_05,
		qt_mes_06,
		qt_mes_07,
		qt_mes_08,
		qt_mes_09,
		qt_mes_10,
		qt_mes_11,
		qt_mes_12,
		qt_mes_corrente,
		nm_usuario_cor,
		ie_referencia,
		ie_ordem)
	values (	nm_usuario_exec_w,
		dt_referencia_w,
		qt_mes_01_w,
		qt_mes_02_w,
		qt_mes_03_w,
		qt_mes_04_w,
		qt_mes_05_w,
		qt_mes_06_w,
		qt_mes_07_w,
		qt_mes_08_w,
		qt_mes_09_w,
		qt_mes_10_w,
		qt_mes_11_w,
		qt_mes_12_w,
		qt_mes_corrente_w,
		nm_usuario_p,
		'PRDU',
		25);
	end;
end loop;
close c05;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_avaliacao_usuario_sup ( dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text ) FROM PUBLIC;

