-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_transf_estoque ( NR_PRESCRICAO_P bigint, NR_SEQUENCIA_PRESCRICAO_P bigint, NM_USUARIO_P text, DT_ATENDIMENTO_P timestamp, CD_LOCAL_ESTOQUE_P bigint, CD_LOCAL_ESTOQUE_DESTINO_P bigint, CD_MATERIAL_P bigint, QT_MOVIMENTO_P bigint, CD_UNIDADE_MEDIDA_P text) AS $body$
DECLARE

 
DT_ATUALIZACAO_W     			  		timestamp := clock_timestamp();
NR_MOVIMENTO_ESTOQUE_W  			  		bigint;
NR_MOVIMENTO_CORRESP_W  			  		bigint;
CD_OPERACAO_CORRESPONDENTE_W			  		smallint := 0;
CD_ACAO_W            				varchar(1) := '1';
IE_ORIGEM_DOCUMENTO_W						varchar(1) := '3';
CD_ESTABELECIMENTO_W                      smallint := 0;
cd_operacao_estoque_w                      smallint  := 0;
cd_setor_atendimento_w				integer;
cd_setor_atendimento_dest_w				integer;


BEGIN 
begin 
select a.cd_estabelecimento 
 into STRICT cd_estabelecimento_w 
from prescr_medica a, atendimento_paciente b 
where a.nr_atendimento = b.nr_atendimento 
and a.nr_prescricao  = nr_prescricao_p;
exception 
 	when no_data_found then 
  	--Não encontrado Estabelecimento '); 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(261633);
end;
begin 
select CD_OPERACAO_TRANSF_SETOR 
into STRICT	cd_operacao_estoque_w 
from	parametro_estoque 
where	cd_estabelecimento	= cd_estabelecimento_w;
exception 
   when no_data_found then 
  	--Não encontrado Oper Transf Paciente '); 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(261634);
end;
 
begin 
select b.cd_setor_atendimento 
 into STRICT cd_setor_atendimento_w 
from 	local_estoque a, 
	setor_atendimento b 
where a.cd_centro_custo = b.cd_centro_custo 
  and a.cd_local_estoque = cd_local_estoque_p;
exception 
   when no_data_found then 
  	--Não encontrado Setor Atendimento '); 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(261635);
end;
 
begin 
select b.cd_setor_atendimento 
 into STRICT cd_setor_atendimento_dest_w 
from 	local_estoque a, 
	setor_atendimento b 
where a.cd_centro_custo = b.cd_centro_custo 
  and a.cd_local_estoque = cd_local_estoque_destino_p;
exception 
   when no_data_found then 
  	--Não encontrado Setor Atendimento destino '); 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(261636);
end;
 
 
select nextval('movimento_estoque_seq') 
    into STRICT nr_movimento_estoque_w 
;
 
insert into movimento_estoque(NR_MOVIMENTO_ESTOQUE ,      
 CD_ESTABELECIMENTO  ,      
 CD_LOCAL_ESTOQUE   ,      
 DT_MOVIMENTO_ESTOQUE ,      
 CD_OPERACAO_ESTOQUE ,      
 CD_ACAO       ,      
 CD_MATERIAL     ,      
 DT_MESANO_REFERENCIA ,      
 QT_MOVIMENTO     ,      
 DT_ATUALIZACAO    ,      
 NM_USUARIO      ,      
 IE_ORIGEM_DOCUMENTO ,      
 NR_DOCUMENTO     ,      
 NR_SEQUENCIA_ITEM_DOCTO  ,     
 CD_UNIDADE_MEDIDA_ESTOQUE ,    
 QT_ESTOQUE         ,           
 CD_LOCAL_ESTOQUE_DESTINO  ,    
 CD_UNIDADE_MED_MOV, 
 CD_SETOR_ATENDIMENTO) 
VALUES (NR_MOVIMENTO_ESTOQUE_W   	,      
 CD_ESTABELECIMENTO_W    	,      
 CD_LOCAL_ESTOQUE_P     	,      
 DT_ATENDIMENTO_P    	,      
 CD_OPERACAO_ESTOQUE_W		,      
 CD_ACAO_W       		,      
 CD_MATERIAL_P		    ,      
 DT_ATENDIMENTO_P		,      
 QT_MOVIMENTO_P		    ,      
 DT_ATUALIZACAO_W	    ,      
 NM_USUARIO_P     		,      
 IE_ORIGEM_DOCUMENTO_W		,      
 NR_PRESCRICAO_P	    ,      
 NR_SEQUENCIA_PRESCRICAO_P   ,     
 CD_UNIDADE_MEDIDA_P		,    
 QT_MOVIMENTO_P         ,          
 CD_LOCAL_ESTOQUE_DESTINO_P   ,    
 CD_UNIDADE_MEDIDA_P, 
 CD_SETOR_ATENDIMENTO_w);
 
begin 
SELECT CD_OPERACAO_CORRESPONDENTE 
INTO STRICT  CD_OPERACAO_CORRESPONDENTE_W 
FROM  OPERACAO_ESTOQUE 
WHERE (CD_OPERACAO_ESTOQUE = CD_OPERACAO_ESTOQUE_W);
exception 
   when no_data_found then 
  	--Não encontrado Operacao Correspondente '); 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(261637);
end;
 
NR_MOVIMENTO_CORRESP_W     := NR_MOVIMENTO_ESTOQUE_W;
 
if (cd_operacao_correspondente_w IS NOT NULL AND cd_operacao_correspondente_w::text <> '') then 
  begin 
  select nextval('movimento_estoque_seq') 
     into STRICT nr_movimento_estoque_w 
;
	insert into movimento_estoque(NR_MOVIMENTO_ESTOQUE ,      
 	 CD_ESTABELECIMENTO  ,      
	 CD_LOCAL_ESTOQUE   ,      
	 DT_MOVIMENTO_ESTOQUE ,      
	 CD_OPERACAO_ESTOQUE ,      
	 CD_ACAO       ,      
	 CD_MATERIAL     ,      
	 DT_MESANO_REFERENCIA ,      
	 QT_MOVIMENTO     ,      
	 DT_ATUALIZACAO    ,      
	 NM_USUARIO      ,      
	 IE_ORIGEM_DOCUMENTO ,      
	 NR_DOCUMENTO     ,      
	 NR_SEQUENCIA_ITEM_DOCTO 	 ,     
	 CD_UNIDADE_MEDIDA_ESTOQUE ,    
	 QT_ESTOQUE         ,           
	 CD_LOCAL_ESTOQUE_DESTINO  ,    
	 CD_UNIDADE_MED_MOV, 
     NR_MOVIMENTO_ESTOQUE_CORRESP, 
	CD_SETOR_ATENDIMENTO) 
	VALUES (NR_MOVIMENTO_ESTOQUE_W   	,      
	 CD_ESTABELECIMENTO_W    	,      
	 CD_LOCAL_ESTOQUE_DESTINO_P  	,      
	 DT_ATENDIMENTO_P    	,      
	 CD_OPERACAO_CORRESPONDENTE_W  ,      
	 CD_ACAO_W       		,      
	 CD_MATERIAL_P		    ,      
	 DT_ATENDIMENTO_P		,      
	 QT_MOVIMENTO_P		    ,      
	 DT_ATUALIZACAO_W	    ,      
	 NM_USUARIO_P     		,      
	 IE_ORIGEM_DOCUMENTO_W		,      
	 NR_PRESCRICAO_P	    ,      
	 NR_SEQUENCIA_PRESCRICAO_P   ,     
	 CD_UNIDADE_MEDIDA_P		,    
	 QT_MOVIMENTO_P         ,          
	 CD_LOCAL_ESTOQUE_P 		,    
	 CD_UNIDADE_MEDIDA_P		, 
     NR_MOVIMENTO_CORRESP_W, 
	CD_SETOR_ATENDIMENTO_DEST_W);
  end;
end if;
 
commit;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_transf_estoque ( NR_PRESCRICAO_P bigint, NR_SEQUENCIA_PRESCRICAO_P bigint, NM_USUARIO_P text, DT_ATENDIMENTO_P timestamp, CD_LOCAL_ESTOQUE_P bigint, CD_LOCAL_ESTOQUE_DESTINO_P bigint, CD_MATERIAL_P bigint, QT_MOVIMENTO_P bigint, CD_UNIDADE_MEDIDA_P text) FROM PUBLIC;

