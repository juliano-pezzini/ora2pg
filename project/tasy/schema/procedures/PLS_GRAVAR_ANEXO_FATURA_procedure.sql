-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gravar_anexo_fatura ( nr_seq_fatura_p ptu_fatura.nr_sequencia%type, ds_arquivo_p ptu_fatura_anexo.ds_arquivo%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gravar o caminho do anexo da nota de cobrança
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
qt_anexo		integer;
ie_boleto_w		varchar(1) := 'N';
ds_nome_arq_w		varchar(255);
nr_titulo_w		titulo_pagar.nr_titulo%type;
nr_titulo_ndc_w		titulo_pagar.nr_titulo%type;


BEGIN

if (nr_seq_fatura_p IS NOT NULL AND nr_seq_fatura_p::text <> '') and (ds_arquivo_p IS NOT NULL AND ds_arquivo_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then

	-- verifica se ja existe algum anexo com mesmo caminho para a mesma fatura
	select	count(1)
	into STRICT	qt_anexo
	from	ptu_fatura_anexo
	where	nr_seq_fatura	= nr_seq_fatura_p
	and	ds_arquivo	= ds_arquivo_p;

	-- só registra o anexo, caso não existir nenhum identico para a mesma fatura
	if (qt_anexo = 0) then
		-- Extrai apenas o nome do arquivo do diretório passado por parâmetro
		select	pls_util_pck.extrair_nome_arq_diret(ds_arquivo_p) -- Entrada => 'C:\Tasy\Padrao\N33311794278____________09701.pdf' - Saída => 'N33311794278____________09701.pdf'
		into STRICT	ds_nome_arq_w
		;

		-- Verifica se o nome do arquivo + extenção tem 33 caracteres e se o primeiro caracter é 'N', se sim, então o anexo é de boleto
			-- 33 se tiver sequencial no arquivo		31 se não tiver sequencial no arquivo
		if	((length(ds_nome_arq_w) = 33) or (length(ds_nome_arq_w) = 31)) and (substr(ds_nome_arq_w,1,1) = 'N') then
			ie_boleto_w := 'S';
		end if;

		insert into ptu_fatura_anexo(
			nr_sequencia,			nr_seq_fatura,			dt_atualizacao,
			nm_usuario,			dt_atualizacao_nrec,		nm_usuario_nrec,
			ds_arquivo,			ie_boleto)
		(SELECT	nextval('ptu_fatura_anexo_seq'),	nr_seq_fatura_p,		clock_timestamp(),
			nm_usuario_p,			clock_timestamp(),			nm_usuario_p,
			ds_arquivo_p,			ie_boleto_w
		);

		if (ie_boleto_w = 'S') then
			select	max(nr_titulo),
				max(nr_titulo_ndc)
			into STRICT	nr_titulo_w,
				nr_titulo_ndc_w
			from	ptu_fatura
			where	nr_sequencia	= nr_seq_fatura_p;

			-- Título
			if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
				insert into titulo_pagar_arq(
					nr_sequencia,			dt_atualizacao,		nm_usuario,
					dt_atualizacao_nrec,		nm_usuario_nrec,	nr_titulo,
					ds_arquivo)
				values (nextval('titulo_pagar_arq_seq'),	clock_timestamp(),		nm_usuario_p,
					clock_timestamp(),			nm_usuario_p,		nr_titulo_w,
					ds_arquivo_p);

			-- Titulo NDC
			elsif (nr_titulo_ndc_w IS NOT NULL AND nr_titulo_ndc_w::text <> '') then
				insert into titulo_pagar_arq(
					nr_sequencia,			dt_atualizacao,		nm_usuario,
					dt_atualizacao_nrec,		nm_usuario_nrec,	nr_titulo,
					ds_arquivo)
				values (nextval('titulo_pagar_arq_seq'),	clock_timestamp(),		nm_usuario_p,
					clock_timestamp(),			nm_usuario_p,		nr_titulo_ndc_w,
					ds_arquivo_p);
			end if;
		end if;

		commit;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gravar_anexo_fatura ( nr_seq_fatura_p ptu_fatura.nr_sequencia%type, ds_arquivo_p ptu_fatura_anexo.ds_arquivo%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

