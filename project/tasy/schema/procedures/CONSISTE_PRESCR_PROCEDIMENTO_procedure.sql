-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_prescr_procedimento (nr_prescricao_p bigint, nr_seq_proced_p bigint, ds_erro_p INOUT text, nr_seq_regra_p INOUT bigint, ds_proced_glosa_p INOUT text) AS $body$
DECLARE



ds_erro_w				varchar(2000)	:= '';
ds_erro_plano_w			varchar(2000)	:= '';
cd_grupo_w				bigint	:= 0;
cd_especialidade_w			bigint	:= 0;
cd_area_w				bigint	:= 0;
ie_glosa_w				varchar(03)	:= '';
ds_procedimento_w			varchar(200)	:= '';
nr_atendimento_w			bigint;
cd_procedimento_w			bigint;
cd_convenio_w				integer;
cd_plano_w				varchar(10);
ie_origem_proced_w			bigint;
ie_tipo_atendimento_w		smallint;
cd_categoria_w			varchar(10);
dt_prescricao_w			timestamp;
qt_prescricao_w			double precision;
nr_sequencia_w			bigint;
cd_setor_atendimento_w		bigint;
nr_seq_exame_w			bigint;
ie_regra_w				varchar(10);
nr_seq_proc_interno_w			bigint;
cd_estabelecimento_w		smallint;
cd_convenio_glosa_w		integer;
ds_valores_w			varchar(255);
ie_edicao_convenio_w		varchar(1);
qt_regra_con_w			bigint;

C02 CURSOR FOR
SELECT 		ie_glosa,
		nr_sequencia,
		coalesce(cd_convenio_glosa,0)
from 		regra_ajuste_proc
where		cd_convenio					= cd_convenio_w
and		cd_estabelecimento = coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1)
and		coalesce(cd_categoria,coalesce(cd_categoria_w,0)) 	= coalesce(cd_categoria_w,0)
and		coalesce(cd_procedimento,coalesce(cd_procedimento_w,0)) 	= coalesce(cd_procedimento_w,0)
and		coalesce(ie_origem_proced,coalesce(ie_origem_proced_w,0))	= coalesce(ie_origem_proced_w,0)
and 	coalesce(nr_seq_proc_interno, coalesce(nr_seq_proc_interno_w,0)) = coalesce(nr_seq_proc_interno_w,0)
and 	coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento,0)) = coalesce(cd_setor_atendimento_w,0)
and		coalesce(cd_area_procedimento,cd_area_w)		= cd_area_w	
and		coalesce(cd_especialidade,cd_especialidade_w)	= cd_especialidade_w
and		coalesce(cd_grupo_proc,cd_grupo_w)			= cd_grupo_w
and		coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w)	= ie_tipo_atendimento_w
and		ie_situacao         				= 'A'
and		coalesce(ie_consiste_prescr,'S')			= 'S'
and 		((coalesce(ie_edicao_convenio,'N') = 'N') or (ie_edicao_convenio = 'S' AND ie_edicao_convenio_w = 'N'))
order by	coalesce(ie_tipo_atendimento,0),
		coalesce(cd_categoria,0),
		coalesce(cd_procedimento,0),
		coalesce(ie_origem_proced,ie_origem_proced_w),
		coalesce(cd_grupo_proc,0),
		coalesce(cd_especialidade,0),
		coalesce(cd_area_procedimento,0),
		coalesce(nr_seq_proc_interno,0);


BEGIN

ds_erro_w		:= '';
ie_glosa_w		:= '';

select	coalesce(max(nr_atendimento),0)
into STRICT	nr_atendimento_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p  LIMIT 1;

if (nr_atendimento_w > 0 ) then
	select	coalesce(max(ie_tipo_atendimento),0),
			max(cd_estabelecimento)
	into STRICT	ie_tipo_atendimento_w,
			cd_estabelecimento_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_w;

	select	coalesce(max(cd_convenio),0),
			coalesce(max(cd_plano_convenio),'0'),
			coalesce(max(cd_categoria),'0')
	into STRICT	cd_convenio_w,
			cd_plano_w,
			cd_categoria_w
	from	Atend_categoria_convenio a
	where	nr_atendimento	= nr_atendimento_w
	and		nr_seq_interno	=
			(SELECT max(nr_seq_interno)
			 from atend_categoria_convenio 
			 where nr_atendimento = nr_atendimento_w);
end if;

Select 	count(nr_sequencia)
into STRICT	qt_regra_con_w
from	regra_ajuste_proc
where	ie_situacao     = 'A'
and		cd_convenio 	= cd_convenio_w  LIMIT 1;

if (qt_regra_con_w > 0) then
	select	a.cd_procedimento,
			a.ie_origem_proced,
			a.dt_prev_execucao,
			a.qt_procedimento,
			a.cd_setor_atendimento,
			a.nr_seq_exame,
			a.nr_seq_proc_interno
	into STRICT	cd_procedimento_w,
			ie_origem_proced_w,
			dt_prescricao_w,
			qt_prescricao_w,
			cd_setor_atendimento_w,
			nr_seq_exame_w,
			nr_seq_proc_interno_w
	from	Prescr_procedimento a
	where	a.nr_prescricao	= nr_prescricao_p
	and		a.nr_sequencia	= nr_seq_proced_p;


	/* Obter Estrutura do procedimento */

	begin
	select 	cd_grupo_proc,
			cd_especialidade,
			cd_area_procedimento,	
			ds_procedimento
	into STRICT	cd_grupo_w,
			cd_especialidade_w,
			cd_area_w,
			ds_procedimento_w
	from	Estrutura_Procedimento_V
	where	cd_procedimento 	= coalesce(cd_procedimento_w,0)
	and		ie_origem_proced	= coalesce(ie_origem_proced_w,0)
	and		(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '');
	exception
			when others then
		begin
		cd_grupo_w		:= 0;
		cd_especialidade_w	:= 0;
		cd_area_w		:= 0;
		end;
	end;

	select 	coalesce(max(verifica_se_proc_conv(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, dt_prescricao_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w, ie_tipo_atendimento_w)),'N')
	into STRICT	ie_edicao_convenio_w
	;

	OPEN C02;
	LOOP
	FETCH C02 into	ie_glosa_w,
			nr_sequencia_w,
			cd_convenio_glosa_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		ie_glosa_w	:= ie_glosa_w;
		nr_sequencia_w	:= nr_sequencia_w;
	END LOOP;
	CLOSE C02;

	if (ie_glosa_w = 'A') then
		ds_erro_w 	:= '601@#' || replace(ds_procedimento_w,' ', '@@@@') || '#@,';
	elsif (ie_glosa_w	= 'B') and (cd_convenio_glosa_w	= cd_convenio_w) then
		cd_convenio_w	:= cd_convenio_w;
	elsif (ie_glosa_w <> 'L') then
		ds_valores_w	:= substr(cd_procedimento_w ||WHEB_MENSAGEM_PCK.get_texto(280113,null)|| nr_sequencia_w,1,255);
		ds_erro_w 	:= '602('||ds_valores_w ||') ';
		--ds_erro_w 	:= '602@#' || replace(ds_procedimento_w,' ', '@@@@') || '#@,';
	end if;

	if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
		nr_seq_regra_p		:= nr_sequencia_w;
		ds_proced_glosa_p	:= ds_procedimento_w;
	end if;


	/* Ricardo 25/01/2006 - Inserido o campo NR_SEQ_EXAME para a CONSISTE_PLANO_CONVENIO OS 28644 */



	/* Edilson em 02/03/06 OS 30562
	consiste_plano_convenio(nr_atendimento_w, cd_convenio_w, cd_procedimento_w,
				ie_origem_proced_w, dt_prescricao_w, qt_prescricao_w,
				ie_tipo_atendimento_w, cd_plano_w, null, ds_erro_plano_w, 
				cd_setor_atendimento_w, nr_seq_exame_w, ie_regra_w, nr_seq_proc_interno_w, cd_categoria_w,
				cd_estabelecimento_w, null, null);
	*/
end if;
ds_erro_p		:= ds_erro_w || ds_erro_plano_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_prescr_procedimento (nr_prescricao_p bigint, nr_seq_proced_p bigint, ds_erro_p INOUT text, nr_seq_regra_p INOUT bigint, ds_proced_glosa_p INOUT text) FROM PUBLIC;

