-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_med_propaci_integra ( nr_sequencia_p procedimento_paciente.nr_sequencia%TYPE, ie_opcao_p text, nm_usuario_p procedimento_paciente.nm_usuario%TYPE, funcao_ativa_p funcao.cd_funcao%TYPE) AS $body$
DECLARE


/*
    EX 	    = Medico executor
    EXC 	= Medico executor da conta
    AN	    = Anestesista como participante
*/
nr_seq_propaci_w	    procedimento_paciente.nr_sequencia%TYPE;
nr_seq_partic_w		    procedimento_participante.nr_seq_partic%TYPE;
ie_funcao_w		        bigint;
cont_w			        bigint;
nr_prescricao_w         prescr_procedimento.nr_prescricao%TYPE;
nr_seq_prescricao_w     prescr_procedimento.nr_sequencia%TYPE;
funcao_ativa_w 		    bigint;
cd_medico_laudo_w	    laudo_paciente.cd_medico_resp%TYPE;
cd_anestesista_w	    laudo_paciente.cd_anestesista%TYPE;
cd_especialidade_w	    procedimento_participante.cd_especialidade%TYPE;
nm_usuario_aprovacao_w	laudo_paciente.nm_usuario_aprovacao%TYPE;
nm_usuario_seg_aprov_w  laudo_paciente.nm_usuario_seg_aprov%TYPE;
cd_cbo_w		        sus_cbo_pessoa_fisica.cd_cbo%TYPE;
ie_atual_medico_w	    varchar(255);
ie_medico_exec_laudo_w	varchar(1);
ie_consite_anestesia_w  varchar(1);
ie_necessita_anest_w    varchar(1);
cd_convenio_w		    convenio.cd_convenio%TYPE;
cd_procedimento_w	    procedimento.cd_procedimento%TYPE;
ie_origem_proced_w	    procedimento.ie_origem_proced%TYPE;

c01 CURSOR FOR
	SELECT	nr_sequencia
	from	procedimento_paciente
	where	nr_laudo = nr_sequencia_p;


BEGIN

funcao_ativa_w	:= coalesce(funcao_ativa_p, 99010);

if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') then

	begin

	select	
        nr_seq_proc,
    	cd_medico_resp,
        nm_usuario_aprovacao,
        cd_anestesista,
        nr_prescricao,
        nr_seq_prescricao,
        nm_usuario_seg_aprov
	into STRICT	
        nr_seq_propaci_w,
		cd_medico_laudo_w,
		nm_usuario_aprovacao_w,
		cd_anestesista_w,
        nr_prescricao_w,
        nr_seq_prescricao_w,
        nm_usuario_seg_aprov_w
	from
        laudo_paciente
	where	
        nr_sequencia	= nr_sequencia_p;

	if (coalesce(nr_seq_propaci_w,0)	<> 0) then
		if (coalesce(ie_opcao_p,'EX') = 'EX') then

			begin
                ie_atual_medico_w	:= obter_valor_param_usuario(funcao_ativa_w, 55, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo);

                if (ie_atual_medico_w = 'R') then
                    select	
                        max(cd_convenio),
                        max(cd_procedimento),
                        max(ie_origem_proced)
                    into STRICT	
                        cd_convenio_w,
                        cd_procedimento_w,
                        ie_origem_proced_w
                    from	
                        procedimento_paciente
                    where	
                        nr_sequencia = nr_seq_propaci_w;				

                    ie_medico_exec_laudo_w	:= obter_se_medico_exec_laudo(cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, nm_usuario_p);

                    if (coalesce(ie_medico_exec_laudo_w,'N') = 'S') then
                        select	max(a.cd_cbo)
                        into STRICT	cd_cbo_w
                        from    
                            sus_cbo b,
                            sus_cbo_pessoa_fisica a,
                            procedimento_paciente c
                        where   
                            sus_obter_secbo_compativel(cd_medico_laudo_w, c.cd_procedimento, c.ie_origem_proced, c.dt_procedimento, a.cd_cbo, 0) = 'S'
                            and     a.cd_pessoa_fisica	= cd_medico_laudo_w
                            and     a.cd_cbo		= b.cd_cbo
                            and	c.ie_origem_proced	= 7
                            and	c.nr_sequencia		= nr_seq_propaci_w;				

                         update	procedimento_paciente
                         set cd_medico_executor = cd_medico_laudo_w,
                             cd_cbo = cd_cbo_w
                         where	
                            ((nr_sequencia = nr_seq_propaci_w) or ((nr_seq_regra_lanc > 0) and (coalesce(nr_seq_proc_princ,0) > 0) and (nr_seq_proc_princ = nr_seq_propaci_w)));
                    end if;	
                else
                    select	max(a.cd_cbo)
                    into STRICT	cd_cbo_w
                    from
                        sus_cbo b,
                        sus_cbo_pessoa_fisica   a,
                        procedimento_paciente	c
                    where   
                        sus_obter_secbo_compativel(cd_medico_laudo_w, c.cd_procedimento, c.ie_origem_proced, c.dt_procedimento, a.cd_cbo, 0) = 'S'
                        and     a.cd_pessoa_fisica	= cd_medico_laudo_w
                        and     a.cd_cbo		= b.cd_cbo
                        and	c.ie_origem_proced	= 7
                        and	c.nr_sequencia		= nr_seq_propaci_w;
    
                    update	procedimento_paciente
                    set	cd_medico_executor	= cd_medico_laudo_w,
                        cd_cbo = cd_cbo_w
                    where 
                       ((nr_sequencia = nr_seq_propaci_w) or ((nr_seq_regra_lanc > 0) and (coalesce(nr_seq_proc_princ,0) > 0) and (nr_seq_proc_princ = nr_seq_propaci_w)));
                end if;
            end;
		elsif (coalesce(ie_opcao_p,'EX') = 'EXC') then			

                update	procedimento_paciente
				set	cd_medico_exec_conta = cd_medico_laudo_w
				where	((nr_sequencia = nr_seq_propaci_w) or ((nr_seq_regra_lanc > 0) and (coalesce(nr_seq_proc_princ,0) > 0) and (nr_seq_proc_princ = nr_seq_propaci_w)));			

		elsif (coalesce(ie_opcao_p,'EX') = 'AN') then
			select max(obter_especialidade_medico(cd_anestesista_w,'C'))
			into STRICT	cd_especialidade_w
			;

			select	count(*) + 1
			into STRICT	nr_seq_partic_w
			from	procedimento_participante
			where	nr_sequencia	= nr_seq_propaci_w;

			select	max(cd_funcao)
			into STRICT	ie_funcao_w
			from	funcao_medico
			where	ie_anestesista = 'S';

			select	count(*)
			into STRICT	cont_w
			from	procedimento_participante
			where	
                cd_pessoa_fisica	= cd_anestesista_w
                and	nr_sequencia		= nr_seq_propaci_w;

            select coalesce(ie_consiste_anestesia,'N') 
            into STRICT ie_consite_anestesia_w
            from parametro_cdi;
    
            ie_necessita_anest_w := 'S';

          if (ie_consite_anestesia_w = 'S') then
              select coalesce(c.ie_necessita_anest,'N')
              into STRICT ie_necessita_anest_w
              from laudo_paciente a
                  join prescr_procedimento b
                  on a.nr_prescricao = b.nr_prescricao and a.nr_seq_prescricao = b.nr_sequencia  
                  join proc_interno c 
                  on b.nr_seq_proc_interno = c.nr_sequencia
            where a.nr_sequencia = nr_sequencia_p;
          end if;

            if (ie_funcao_w IS NOT NULL AND ie_funcao_w::text <> '') and (cont_w = 0) and (ie_necessita_anest_w = 'S') then
                 insert into procedimento_participante(
                    nr_sequencia, 
                    nr_seq_partic, 
                    dt_atualizacao, 
                    ie_funcao,
                    nm_usuario, 
                    cd_pessoa_fisica, 
                    cd_cgc, 
                    ie_valor_informado,
                    vl_participante, 
                    vl_conta,
                    nr_lote_contabil,
                    nr_conta_medico, 
                    cd_especialidade)
                 values (
                    nr_seq_propaci_w, 
                    nr_seq_partic_w, 
                    clock_timestamp(), 
                    ie_funcao_w,
                    nm_usuario_p, 
                    cd_anestesista_w, 
                    null, 
                    'N',
                    0, 
                    0, 
                    0, 
                    0, 
                    cd_especialidade_w);
            end if;
		end if;
	end if;

	open c01;
	loop
	fetch c01 into
		nr_seq_propaci_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

		begin
    		if (coalesce(ie_opcao_p,'EX') = 'EX') then
        		begin
            		ie_atual_medico_w	:= obter_valor_param_usuario(funcao_ativa_w, 55, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo);

        			if (ie_atual_medico_w = 'R') then
                        select	
                            max(cd_convenio),
                            max(cd_procedimento),
                            max(ie_origem_proced)
                        into STRICT	
                            cd_convenio_w,
                            cd_procedimento_w,
                            ie_origem_proced_w
                        from	
                            procedimento_paciente
                        where	
                            nr_sequencia = nr_seq_propaci_w;

                        ie_medico_exec_laudo_w	:= obter_se_medico_exec_laudo(cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, nm_usuario_p);

        				if (coalesce(ie_medico_exec_laudo_w,'N') = 'S') then

                            select	max(a.cd_cbo)
                            into STRICT	cd_cbo_w
                            from
                                sus_cbo b,
                                sus_cbo_pessoa_fisica   a,
                                procedimento_paciente	c
                            where   
                                sus_obter_secbo_compativel(cd_medico_laudo_w, c.cd_procedimento, c.ie_origem_proced, c.dt_procedimento, a.cd_cbo, 0) = 'S'
                                and  a.cd_pessoa_fisica	= cd_medico_laudo_w
                                and     a.cd_cbo		= b.cd_cbo  
                                and	c.ie_origem_proced	= 7
                                and	c.nr_sequencia		= nr_seq_propaci_w;

                                update	procedimento_paciente
                                set	cd_medico_executor = cd_medico_laudo_w,
                                    cd_cbo = cd_cbo_w
                                where	((nr_sequencia = nr_seq_propaci_w) or ((nr_seq_regra_lanc > 0) and (coalesce(nr_seq_proc_princ,0) > 0) and (nr_seq_proc_princ = nr_seq_propaci_w)));
                        end if;
                    else

                        select	max(a.cd_cbo)
                        into STRICT	cd_cbo_w
                        from
                            sus_cbo b,
                            sus_cbo_pessoa_fisica   a,
                            procedimento_paciente	c
                        where   
                            sus_obter_secbo_compativel(cd_medico_laudo_w, c.cd_procedimento, c.ie_origem_proced, c.dt_procedimento, a.cd_cbo, 0) = 'S'
                            and     a.cd_pessoa_fisica	= cd_medico_laudo_w
                            and     a.cd_cbo		= b.cd_cbo
                            and	c.ie_origem_proced	= 7
                            and	c.nr_sequencia		= nr_seq_propaci_w;

                            update	procedimento_paciente
                            set	cd_medico_executor	= cd_medico_laudo_w,
                                cd_cbo			= cd_cbo_w
                            where ((nr_sequencia = nr_seq_propaci_w) or ((nr_seq_regra_lanc > 0) and (coalesce(nr_seq_proc_princ,0) > 0) and (nr_seq_proc_princ = nr_seq_propaci_w)));
                    end if;
                end;
            elsif (coalesce(ie_opcao_p,'EX') = 'EXC') then            			

                update	procedimento_paciente
                set	cd_medico_exec_conta = cd_medico_laudo_w
                where	nr_sequencia = nr_seq_propaci_w
                        or ((nr_seq_regra_lanc > 0) and (coalesce(nr_seq_proc_princ,0) > 0) and (nr_seq_proc_princ = nr_seq_propaci_w));

            elsif (coalesce(ie_opcao_p,'EX') = 'AN') then
                
                select 	max(obter_especialidade_medico(cd_anestesista_w,'C'))
                into STRICT	cd_especialidade_w
;

                select	count(*) + 1
                into STRICT	nr_seq_partic_w
                from	procedimento_participante
                where	nr_sequencia	= nr_seq_propaci_w;

                select	max(cd_funcao)
                into STRICT	ie_funcao_w
                from	funcao_medico
                where	ie_anestesista = 'S';

                select	count(*)
                into STRICT	cont_w
                from	procedimento_participante
                where	cd_pessoa_fisica	= cd_anestesista_w
                        and	nr_sequencia	= nr_seq_propaci_w;

                select coalesce(ie_consiste_anestesia,'N') 
                into STRICT ie_consite_anestesia_w
                from parametro_cdi;

                ie_necessita_anest_w := 'S';

                if (ie_consite_anestesia_w = 'S') then
                    select coalesce(c.ie_necessita_anest,'N')
                    into STRICT ie_necessita_anest_w   
                    from laudo_paciente a
                        join prescr_procedimento b
                        on a.nr_prescricao = b.nr_prescricao and a.nr_seq_prescricao = b.nr_sequencia  
                        join proc_interno c 
                        on b.nr_seq_proc_interno = c.nr_sequencia
                    where a.nr_sequencia = nr_sequencia_p;
                end if;

                if (ie_funcao_w IS NOT NULL AND ie_funcao_w::text <> '') and (cd_anestesista_w IS NOT NULL AND cd_anestesista_w::text <> '') and (cont_w = 0) and (ie_necessita_anest_w = 'S') then
                    insert into procedimento_participante(
                        nr_sequencia, 
                        nr_seq_partic, 
                        dt_atualizacao, 
                        ie_funcao,
                        nm_usuario,
                        cd_pessoa_fisica,
                        cd_cgc,
                        ie_valor_informado,
                        vl_participante, 
                        vl_conta, 
                        nr_lote_contabil,
                        nr_conta_medico, 
                        cd_especialidade)
                    values (
                        nr_seq_propaci_w, 
                        nr_seq_partic_w, 
                        clock_timestamp(), 
                        ie_funcao_w,
                        nm_usuario_p, 
                        cd_anestesista_w, 
                        null, 
                        'N',
                        0, 
                        0, 
                        0, 
                        0, 
                        cd_especialidade_w);
                end if;
            end if;
		end;
	end loop;

	close c01;
    end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_med_propaci_integra ( nr_sequencia_p procedimento_paciente.nr_sequencia%TYPE, ie_opcao_p text, nm_usuario_p procedimento_paciente.nm_usuario%TYPE, funcao_ativa_p funcao.cd_funcao%TYPE) FROM PUBLIC;

