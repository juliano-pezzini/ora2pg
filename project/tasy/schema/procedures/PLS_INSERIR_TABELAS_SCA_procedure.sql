-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_inserir_tabelas_sca ( nr_seq_reajuste_p bigint, nr_seq_contrato_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_tabela_w			bigint;
dt_inicio_vigencia_w		timestamp;
nr_seq_plano_w			bigint;
dt_contrato_w			timestamp;
cd_estabelecimento_w		smallint;
ie_tipo_reajuste_w		varchar(1);
ie_reajustar_benef_cancelado_w	varchar(2);
dt_rescisao_contrato_w		timestamp;
dt_reajuste_w			timestamp;
qt_tabela_w			bigint;
ie_situacao_reaj_contrato_w	varchar(10);
dt_aplicacao_reajuste_w		pls_reajuste.dt_aplicacao_reajuste%type;
ie_permite_reajuste_w		pls_plano.ie_permite_reajuste%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
tx_reajuste_lote_w		pls_reajuste.tx_reajuste%type;
tx_reajuste_liminar_w		pls_reajuste.tx_reajuste%type;
nr_seq_processo_w		processo_judicial_liminar.nr_sequencia%type;
nr_seq_grupo_produto_w		pls_reajuste.nr_seq_grupo_produto%type;
qt_regra_ativa_w		bigint;
qt_regra_grupo_prod_w		bigint;
nr_seq_plano_ww			pls_plano.nr_sequencia%type;
nr_seq_titular_w		pls_segurado.nr_seq_titular%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;

C01 CURSOR FOR
	SELECT	a.nr_seq_tabela,
		c.dt_inicio_vigencia,
		c.nr_seq_plano,
		d.dt_contrato,
		d.dt_rescisao_contrato,
		coalesce(e.ie_permite_reajuste,'S'),
		c.nr_segurado,
		coalesce((pls_obter_dados_segurado(c.nr_segurado, 'NRTI'))::numeric , c.nr_segurado) nr_seq_titular,
		pls_obter_dados_segurado(c.nr_segurado, 'PF') cd_pessoa_fisica
	from	pls_sca_vinculo		a,
		pls_segurado		b,
		pls_tabela_preco	c,
		pls_contrato		d,
		pls_plano		e
	where	a.nr_seq_segurado	= b.nr_sequencia
	and	a.nr_seq_tabela		= c.nr_sequencia
	and	b.nr_seq_contrato	= d.nr_sequencia
	and	e.nr_sequencia		= a.nr_seq_plano
	and	d.nr_sequencia		= nr_seq_contrato_p
	and	d.dt_contrato	< dt_reajuste_w
	and	((d.ie_reajuste = 'C') or (to_char(a.dt_inicio_vigencia,'MM') = to_char(dt_reajuste_w,'MM')))
	and	((e.nr_sequencia = nr_seq_plano_ww) or (coalesce(nr_seq_plano_ww::text, '') = ''))
	and	trunc(coalesce(dt_aplicacao_reajuste_w,dt_reajuste_w),'month') >= trunc(a.dt_liberacao,'month')
	
union all

	SELECT	a.nr_seq_tabela,
		b.dt_inicio_vigencia,
		b.nr_seq_plano,
		c.dt_contrato,
		c.dt_rescisao_contrato,
		coalesce(d.ie_permite_reajuste,'S'),
		b.nr_segurado,
		coalesce((pls_obter_dados_segurado(b.nr_segurado, 'NRTI'))::numeric , b.nr_segurado) nr_seq_titular,
		pls_obter_dados_segurado(b.nr_segurado, 'PF') cd_pessoa_fisica
	from	pls_sca_regra_contrato	a,
		pls_tabela_preco	b,
		pls_contrato		c,
		pls_plano		d
	where	a.nr_seq_tabela		= b.nr_sequencia
	and	a.nr_seq_contrato	= c.nr_sequencia
	and	b.nr_contrato		= c.nr_sequencia
	and	d.nr_sequencia		= a.nr_seq_plano
	and	c.nr_sequencia		= nr_seq_contrato_p
	and	((d.nr_sequencia = nr_seq_plano_ww) or (coalesce(nr_seq_plano_ww::text, '') = ''))
	and	c.dt_contrato	< dt_reajuste_w
	and	((c.ie_reajuste = 'C') or (to_char(a.dt_inicio_vigencia,'MM') = to_char(dt_reajuste_w,'MM')));


BEGIN

select	max(ie_tipo_reajuste),
	max(cd_estabelecimento),
	max(dt_reajuste),
	max(ie_reajustar_benef_cancelado),
	max(dt_aplicacao_reajuste),
	max(tx_reajuste),
	max(nr_seq_grupo_produto),
	max(nr_seq_plano)
into STRICT	ie_tipo_reajuste_w,
	cd_estabelecimento_w,
	dt_reajuste_w,
	ie_situacao_reaj_contrato_w,
	dt_aplicacao_reajuste_w,
	tx_reajuste_lote_w,
	nr_seq_grupo_produto_w,
	nr_seq_plano_ww
from	pls_reajuste
where	nr_sequencia	= nr_seq_reajuste_p;

dt_reajuste_w		:= trunc(dt_reajuste_w,'month');
ie_tipo_reajuste_w	:= coalesce(ie_tipo_reajuste_w,'C');

select	max(ie_reajustar_benef_cancelado)
into STRICT	ie_reajustar_benef_cancelado_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_w;

ie_reajustar_benef_cancelado_w	:= coalesce(ie_reajustar_benef_cancelado_w,'T');
ie_situacao_reaj_contrato_w	:= coalesce(ie_situacao_reaj_contrato_w,'T');

open C01;
loop
fetch C01 into
	nr_seq_tabela_w,
	dt_inicio_vigencia_w,
	nr_seq_plano_w,
	dt_contrato_w,
	dt_rescisao_contrato_w,
	ie_permite_reajuste_w,
	nr_seq_segurado_w,
	nr_seq_titular_w,
	cd_pessoa_fisica_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	if (nr_seq_grupo_produto_w IS NOT NULL AND nr_seq_grupo_produto_w::text <> '') then
		select	count(1)
		into STRICT	qt_regra_ativa_w
		from	pls_grupo_produto
		where	nr_sequencia = nr_seq_grupo_produto_w
		and	ie_situacao = 'A';

		if (qt_regra_ativa_w > 0) then
			select	count(1)
			into STRICT	qt_regra_grupo_prod_w
			from	pls_produto_grupo
			where	nr_seq_grupo = nr_seq_grupo_produto_w
			and	nr_seq_plano = nr_seq_plano_w;

			if (qt_regra_grupo_prod_w = 0) then
				ie_permite_reajuste_w := 'N';
			end if;
		end if;
	end if;
	
	if (ie_permite_reajuste_w = 'S') and
		(((coalesce(dt_rescisao_contrato_w::text, '') = '') or (dt_rescisao_contrato_w > dt_reajuste_w)) or
		 ((dt_rescisao_contrato_w IS NOT NULL AND dt_rescisao_contrato_w::text <> '') and (ie_reajustar_benef_cancelado_w in ('T',ie_tipo_reajuste_w)))) then
		
		/*Caso a situacao para o reajuste do contrato for diferente de ambos verificar como esta a situacao do contrato*/

		if (ie_tipo_reajuste_w = 'C') and (ie_situacao_reaj_contrato_w <> 'T') then
			if (nr_seq_contrato_p IS NOT NULL AND nr_seq_contrato_p::text <> '') then
				if (pls_obter_situac_contr_periodo(nr_seq_contrato_p,'C','M',dt_reajuste_w) <> ie_situacao_reaj_contrato_w) then
					goto finalCursor01;
				end if;
			end if;
		end if;
		
		select	count(*)
		into STRICT	qt_tabela_w
		from	pls_reajuste_tabela
		where	nr_seq_reajuste	= nr_seq_reajuste_p
		and	nr_seq_tabela	= nr_seq_tabela_w;
		
		if (qt_tabela_w = 0) then
			/* Conforme contato com Ewerton, o contrato nao pode ser reajuste masi de uma vez no mesmo mes */

			select	count(*)
			into STRICT	qt_tabela_w
			from	pls_reajuste_tabela	a,
				pls_reajuste		b
			where	a.nr_seq_reajuste	= b.nr_sequencia
			and	a.nr_seq_tabela		= nr_seq_tabela_w
			and	trunc(b.dt_reajuste,'month')	= dt_reajuste_w
			and	coalesce(b.nr_seq_lote_deflator::text, '') = ''
			and	coalesce(b.tx_deflator,0) = 0;
		end if;
		
		if (qt_tabela_w = 0) then
			SELECT * FROM pls_obter_processo_reaj(null, nr_seq_segurado_w, nr_seq_titular_w, cd_pessoa_fisica_w, dt_reajuste_w, nr_seq_processo_w, tx_reajuste_liminar_w) INTO STRICT nr_seq_processo_w, tx_reajuste_liminar_w;
			
			insert	into	pls_reajuste_tabela(	nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_reajuste,
					nr_seq_tabela,
					nr_seq_plano,
					dt_contrato,
					dt_inicio_vigencia,
					nr_seq_contrato,
					nr_seq_processo,
					tx_reajuste)
				values (	nextval('pls_reajuste_tabela_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_reajuste_p,
					nr_seq_tabela_w,
					nr_seq_plano_w,
					dt_contrato_w,
					dt_inicio_vigencia_w,
					nr_seq_contrato_p,
					nr_seq_processo_w,
					coalesce(tx_reajuste_liminar_w,tx_reajuste_lote_w));
		end if;
	end if;
	
	<<finalCursor01>>
	nr_seq_tabela_w	:= nr_seq_tabela_w;
	
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_inserir_tabelas_sca ( nr_seq_reajuste_p bigint, nr_seq_contrato_p bigint, nm_usuario_p text) FROM PUBLIC;

