-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cancelar_movto_cartao_tef ( nr_seq_movto_cartao_p bigint, nm_usuario_p text, nr_autorizacao_cancel_p text) AS $body$
DECLARE

 
nr_seq_caixa_rec_w  bigint;
dt_fechamento_w    timestamp;
nr_seq_caixa_rec_novo_w  bigint;
nr_seq_saldo_novo_w  bigint;
nr_seq_caixa_w    bigint;

nr_titulo_w    bigint;
nr_sequencia_w    integer;
nr_seq_baixa_w    integer;
nr_adiantamento_w  bigint;
nr_seq_cheque_w    bigint;
nr_seq_movto_cartao_w  bigint;
qt_registro_w    bigint;

/* Títulos */
 
c01 CURSOR FOR 
SELECT  nr_titulo, 
  nr_sequencia 
from  titulo_receber_liq 
where  nr_seq_caixa_rec  = nr_seq_caixa_rec_w;

c02 CURSOR FOR 
/* Adiantamentos */
 
SELECT  nr_adiantamento 
from  adiantamento 
where  nr_seq_caixa_rec  = nr_seq_caixa_rec_w;

/* Cheques */
 
c03 CURSOR FOR 
SELECT  nr_seq_cheque 
from  cheque_cr 
where  nr_seq_caixa_rec  = nr_seq_caixa_rec_w;

/* Cartões */
 
c04 CURSOR FOR 
SELECT  nr_sequencia 
from  movto_cartao_cr 
where  nr_seq_caixa_rec  = nr_seq_caixa_rec_w 
and  nr_sequencia  <> nr_seq_movto_cartao_p 
and  coalesce(dt_cancelamento::text, '') = '';


BEGIN 
 
select  nr_seq_caixa_rec 
into STRICT  nr_seq_caixa_rec_w 
from  movto_cartao_cr 
where  nr_sequencia  = nr_seq_movto_cartao_p;
 
if (nr_seq_caixa_rec_w IS NOT NULL AND nr_seq_caixa_rec_w::text <> '') then 
  select  a.dt_fechamento, 
    b.nr_seq_caixa 
  into STRICT  dt_fechamento_w, 
    nr_seq_caixa_w 
  from  caixa_saldo_diario b, 
    caixa_receb a 
  where  a.nr_seq_saldo_caixa  = b.nr_sequencia 
  and  a.nr_sequencia    = nr_seq_caixa_rec_w;
 
  update  movto_cartao_cr 
  set  dt_cancelamento = clock_timestamp(), 
    nm_usuario  = nm_usuario_p, 
    dt_atualizacao  = clock_timestamp(), 
    nr_autorizacao_cancel = nr_autorizacao_cancel_p 
  where  nr_sequencia  = nr_seq_movto_cartao_p;
 
  /* Se recebimento já estava fechado Cancelar recebimento */
 
  if (dt_fechamento_w IS NOT NULL AND dt_fechamento_w::text <> '') then 
 
    select  count(*) 
    into STRICT  qt_registro_w 
    from  movto_cartao_cr 
    where  nr_seq_caixa_rec  = nr_seq_caixa_rec_w 
     and  coalesce(dt_cancelamento::text, '') = '';
     
    if (qt_registro_w = 0) then 
      CALL cancelar_caixa_receb(nr_seq_caixa_rec_w,nm_usuario_p,'N','S');
    elsif (qt_registro_w < 0) then 
      /* Gerar novo recibo sem o cartão cancelado*/
 
 
      select  max(nr_sequencia) 
      into STRICT  nr_seq_saldo_novo_w 
      from  caixa_saldo_diario 
      where  nr_seq_caixa  = nr_seq_caixa_w 
      and  coalesce(dt_fechamento::text, '') = '';
 
      select  nextval('caixa_receb_seq') 
      into STRICT  nr_seq_caixa_rec_novo_w 
;
 
      insert  into  caixa_receb(nr_sequencia, 
        dt_atualizacao, 
        nm_usuario, 
        dt_atualizacao_nrec, 
        nm_usuario_nrec, 
        nr_seq_saldo_caixa, 
        nr_seq_trans_financ, 
        dt_recebimento, 
        vl_especie, 
        ds_observacao, 
        cd_pessoa_fisica, 
        cd_cgc, 
        ie_tipo_receb) 
      SELECT  nr_seq_caixa_rec_novo_w, 
        clock_timestamp(), 
        nm_usuario_p, 
        clock_timestamp(), 
        nm_usuario_p, 
        nr_seq_saldo_novo_w, 
        nr_seq_trans_financ, 
        clock_timestamp(), 
        vl_especie, 
        ds_observacao, 
        cd_pessoa_fisica, 
        cd_cgc, 
        ie_tipo_receb 
      from  caixa_receb 
      where  nr_sequencia  = nr_seq_caixa_rec_w;
 
      open c01;
      loop 
      fetch c01 into 
        nr_titulo_w, 
        nr_sequencia_w;
      EXIT WHEN NOT FOUND; /* apply on c01 */
        select  coalesce(max(nr_sequencia),0) + 1 
        into STRICT  nr_seq_baixa_w 
        from  titulo_receber_liq 
        where  nr_titulo  = nr_titulo_w;
 
        insert into titulo_receber_liq(nr_titulo, 
          nr_sequencia, 
          dt_recebimento, 
          vl_recebido, 
          vl_descontos, 
          vl_juros, 
          vl_multa, 
          vl_rec_maior, 
          vl_glosa, 
          vl_despesa_bancaria, 
          cd_moeda, 
          cd_tipo_recebimento, 
          nr_seq_trans_caixa, 
          ie_acao, 
          ie_lib_caixa, 
          nr_seq_caixa_rec, 
          dt_atualizacao, 
          nm_usuario, 
          nr_lote_contab_antecip, 
          nr_lote_contab_pro_rata, 
          nr_lote_contabil) 
        SELECT  nr_titulo_w, 
          nr_seq_baixa_w, 
          dt_recebimento, 
          vl_recebido, 
          vl_descontos, 
          vl_juros, 
          vl_multa, 
          vl_rec_maior, 
          vl_glosa, 
          vl_despesa_bancaria, 
          cd_moeda, 
          cd_tipo_recebimento, 
          nr_seq_trans_caixa, 
          ie_acao, 
          'N', 
          nr_seq_caixa_rec_novo_w, 
          clock_timestamp(), 
          nm_usuario_p, 
          0, 
          0, 
          0 
        from  titulo_receber_liq 
        where  nr_titulo  = nr_titulo_w 
        and  nr_sequencia  = nr_sequencia_w;
      end loop;
      close c01;
 
      open c02;
      loop 
      fetch c02 into 
        nr_adiantamento_w;
      EXIT WHEN NOT FOUND; /* apply on c02 */
        insert  into  adiantamento(nr_adiantamento, 
          nm_usuario, 
          dt_atualizacao, 
          cd_estabelecimento, 
          dt_adiantamento, 
          vl_adiantamento, 
          vl_especie, 
          vl_saldo, 
          cd_moeda, 
          cd_tipo_recebimento, 
          cd_pessoa_fisica, 
          cd_cgc, 
          nr_atendimento, 
          dt_contabil, 
          ie_situacao, 
          nr_seq_trans_caixa, 
          nr_lote_contabil, 
          ie_lib_caixa, 
          nr_seq_caixa_rec) 
        SELECT  nextval('adiantamento_seq'), 
          nm_usuario_p, 
          clock_timestamp(), 
          cd_estabelecimento, 
          dt_adiantamento, 
          vl_adiantamento, 
          vl_especie, 
          vl_saldo, 
          cd_moeda, 
          cd_tipo_recebimento, 
          cd_pessoa_fisica, 
          cd_cgc, 
          nr_atendimento, 
          dt_contabil, 
          ie_situacao, 
          nr_seq_trans_caixa, 
          0, 
          'N', 
          nr_seq_caixa_rec_novo_w 
        from  adiantamento 
        where  nr_adiantamento  = nr_adiantamento_w;
      end loop;
      close c02;
 
      open c03;
      loop 
      fetch c03 into 
        nr_seq_cheque_w;
      EXIT WHEN NOT FOUND; /* apply on c03 */
        insert  into  cheque_cr(nr_seq_cheque, 
          nm_usuario, 
          dt_atualizacao, 
          cd_banco, 
          cd_agencia_bancaria, 
          nr_conta, 
          nr_cheque, 
          vl_cheque, 
          cd_moeda, 
          dt_vencimento, 
          dt_contabil, 
          cd_estabelecimento, 
          vl_terceiro, 
          nr_seq_caixa_rec, 
          ie_lib_caixa, 
          ds_cmc7, 
          nr_seq_camara, 
          cd_portador, 
          cd_tipo_portador, 
          nr_seq_trans_caixa, 
          cd_pessoa_fisica, 
          cd_cgc) 
        SELECT  nextval('cheque_cr_seq'), 
          nm_usuario_p, 
          clock_timestamp(), 
          cd_banco, 
          cd_agencia_bancaria, 
          nr_conta, 
          nr_cheque, 
          vl_cheque, 
          cd_moeda, 
          dt_vencimento, 
          dt_contabil, 
          cd_estabelecimento, 
          vl_terceiro, 
          nr_seq_caixa_rec_novo_w, 
          'N', 
          ds_cmc7, 
          nr_seq_camara, 
          cd_portador, 
          cd_tipo_portador, 
          nr_seq_trans_caixa, 
          cd_pessoa_fisica, 
          cd_cgc 
        from  cheque_cr 
        where  nr_seq_cheque  = nr_seq_cheque_w;
      end loop;
      close c03;
 
      open c04;
      loop 
      fetch c04 into 
        nr_seq_movto_cartao_w;
      EXIT WHEN NOT FOUND; /* apply on c04 */
        insert  into  movto_cartao_cr(nr_sequencia, 
          nm_usuario, 
          dt_atualizacao, 
          nm_usuario_nrec, 
          dt_atualizacao_nrec, 
          dt_transacao, 
          vl_transacao, 
          nr_autorizacao, 
          ds_comprovante, 
          cd_estabelecimento, 
          nr_cartao, 
          nr_seq_bandeira, 
          ie_tipo_cartao, 
          nr_seq_caixa_rec, 
          ie_lib_caixa, 
          nr_seq_forma_pagto, 
          nr_seq_trans_caixa, 
          dt_integracao_tef, 
          qt_parcela, 
          ie_situacao, 
          ds_observacao, 
          dt_confirmacao_tef) 
        SELECT  nextval('movto_cartao_cr_seq'), 
          nm_usuario_p, 
          clock_timestamp(), 
          nm_usuario_p, 
          clock_timestamp(), 
          dt_transacao, 
          vl_transacao, 
          nr_autorizacao, 
          ds_comprovante, 
          cd_estabelecimento, 
          nr_cartao, 
          nr_seq_bandeira, 
          ie_tipo_cartao, 
          nr_seq_caixa_rec_novo_w, 
          'N', 
          nr_seq_forma_pagto, 
          nr_seq_trans_caixa, 
          dt_integracao_tef, 
          qt_parcela, 
          ie_situacao, 
          ds_observacao, 
          dt_confirmacao_tef 
        from  movto_cartao_cr 
        where  nr_sequencia  = nr_seq_movto_cartao_w;
      end loop;
      close c04;
    end if;
  end if;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cancelar_movto_cartao_tef ( nr_seq_movto_cartao_p bigint, nm_usuario_p text, nr_autorizacao_cancel_p text) FROM PUBLIC;

