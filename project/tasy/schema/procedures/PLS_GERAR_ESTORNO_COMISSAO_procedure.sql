-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_estorno_comissao ( nr_seq_canal_venda_p bigint, nr_seq_comissao_benef_p bigint, nr_seq_segurado_p bigint, vl_estorno_p bigint, nr_seq_repasse_mens_p bigint, nr_seq_motivo_cancel_p bigint, ie_geracao_p text, nr_seq_regra_estorno_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
/*ie_geracao_p: 
	A = Utilizado quando o estorno é gerado automaticante na geração de um lote de comissões 
	M = Utilizado quando o estorno é gerado manualmente, através da opção de botão direito 'Estornar comissão' 
*/
 
 
tx_estorno_w			double precision;
vl_estorno_w			double precision;
ie_estorno_imediato_comis_w	pls_parametros.ie_estorno_imediato_comis%type := 'N';
nr_seq_comissao_w		pls_comissao.nr_sequencia%type;
ie_status_lote_w		pls_lote_comissao.ie_status%type;
qt_sem_regra_parc_w		integer;
nr_lote_contabil_w		lote_contabil.nr_lote_contabil%type;
nr_contrato_w			pls_estorno_comissao.nr_contrato%type;
cd_estipulante_pj_w		pls_estorno_comissao.cd_estipulante_pj%type;
cd_estipulante_pf_w		pls_estorno_comissao.cd_estipulante_pf%type;
vl_mensalidade_w		pls_estorno_comissao.vl_mensalidade%type;
vl_comissao_w			pls_estorno_comissao.vl_comissao%type;
nr_seq_regra_estorno_w		pls_estorno_comissao.nr_seq_regra_estorno%type;
dt_estorno_w			pls_estorno_comissao.dt_estorno%type;
nr_parcela_w			pls_estorno_comissao.nr_parcela%type;
nr_seq_vendedor_w		pls_estorno_comissao.nr_seq_vendedor%type;
nr_seq_proposta_w		pls_estorno_comissao.nr_seq_proposta%type;
nr_seq_regra_w			pls_comissao_benef_item.nr_seq_regra%type;
ds_regras_w			varchar(255) := '';
ie_tipo_repasse_w		pls_lote_comissao.ie_tipo_repasse%type;
nr_seq_regra_mensal_w		pls_comissao_beneficiario.nr_seq_regra_mensal%type;
nr_seq_comis_benef_origem_w	pls_comissao_beneficiario.nr_sequencia%type;
nr_seq_segurado_mens_w		pls_comissao_beneficiario.nr_seq_segurado_mens%type;
ie_erro_w			varchar(1);

 
C01 CURSOR FOR 
	SELECT	distinct nr_seq_regra 
	from	pls_comissao_benef_item 
	where	nr_seq_comissao_benef = nr_seq_comissao_benef_p 
	order by 1;
	
C02 CURSOR FOR 
	SELECT	distinct nr_seq_regra_equipe 
	from	pls_comissao_benef_item 
	where	nr_seq_comissao_benef = nr_seq_comissao_benef_p 
	order by 1;


BEGIN 
tx_estorno_w	:= 100;
vl_estorno_w	:= vl_estorno_p;
 
if (ie_geracao_p = 'A') then 
	update	pls_comissao_beneficiario 
	set	dt_estorno = to_date(clock_timestamp(),'dd/mm/yy'), 
		nr_seq_motivo_cancel = nr_seq_motivo_cancel_p, 
		nr_seq_regra_estorno = nr_seq_regra_estorno_p 
	where	nr_sequencia = nr_seq_comissao_benef_p;
elsif (ie_geracao_p = 'M') then 
	select	coalesce(ie_estorno_imediato_comis,'N') 
	into STRICT	ie_estorno_imediato_comis_w 
	from	pls_parametros 
	where	cd_estabelecimento = cd_estabelecimento_p;
	 
	update	pls_comissao_beneficiario 
	set	dt_estorno = to_date(clock_timestamp(),'dd/mm/yy'), 
		dt_atualizacao = clock_timestamp(), 
		nm_usuario = nm_usuario_p, 
		nr_seq_motivo_cancel = nr_seq_motivo_cancel_p, 
		nr_seq_regra_estorno = nr_seq_regra_estorno_p 
	where	nr_sequencia = nr_seq_comissao_benef_p;
end if;
 
if (coalesce(nr_seq_regra_estorno_p,0) <> 0) then 
	begin 
	select	tx_estorno 
	into STRICT	tx_estorno_w 
	from	pls_regra_estorno_comissao 
	where	nr_sequencia	= nr_seq_regra_estorno_p;
	exception 
	when others then 
		tx_estorno_w	:= 100;
	end;
	 
	if (coalesce(tx_estorno_w,0) <> 0) then 
		vl_estorno_w	:= round((vl_estorno_w * tx_estorno_w) / 100,2);
	end if;
end if;
 
if (ie_estorno_imediato_comis_w = 'N') then 
	select	a.nr_contrato, 
		a.cd_cgc_estipulante, 
		a.cd_pf_estipulante 
	into STRICT	nr_contrato_w, 
		cd_estipulante_pj_w, 
		cd_estipulante_pf_w 
	from	pls_contrato	a, 
		pls_segurado	b 
	where	a.nr_sequencia = b.nr_seq_contrato 
	and	b.nr_sequencia = nr_seq_segurado_p;
	 
	ie_erro_w := 'N';
	 
	begin 
	select	c.vl_mensalidade, 
		d.vl_comissao_benef, 
		d.nr_seq_regra_estorno, 
		d.dt_estorno, 
		c.nr_parcela, 
		a.ie_tipo_repasse, 
		d.nr_seq_regra_mensal, 
		d.nr_sequencia, 
		d.nr_seq_segurado_mens, 
		d.nr_seq_vendedor_pf nr_seq_vendedor, 
		d.nr_seq_proposta 
	into STRICT	vl_mensalidade_w, 
		vl_comissao_w, 
		nr_seq_regra_estorno_w, 
		dt_estorno_w, 
		nr_parcela_w, 
		ie_tipo_repasse_w, 
		nr_seq_regra_mensal_w, 
		nr_seq_comis_benef_origem_w, 
		nr_seq_segurado_mens_w, 
		nr_seq_vendedor_w, 
		nr_seq_proposta_w 
	from	pls_comissao_beneficiario	d, 
		pls_mensalidade_segurado	c, 
		pls_comissao			b, 
		pls_lote_comissao		a 
	where	a.nr_sequencia = b.nr_seq_lote 
	and	b.nr_sequencia = d.nr_seq_comissao 
	and	c.nr_sequencia = d.nr_seq_segurado_mens 
	and	d.nr_sequencia = nr_seq_comissao_benef_p;
	exception -- Foi criada essa exceção pois não existia integridade entre as tabelas pls_mensalidade_segurado e pls_comissao_beneficiario 
	when others then 
		ie_erro_w := 'S';
	end;
	 
	if (ie_erro_w = 'N') then 
		if (ie_tipo_repasse_w = 'L') then -- L = Liberação de itens pendentes 
			open C01;
			loop 
			fetch C01 into 
				nr_seq_regra_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin 
				ds_regras_w := ds_regras_w || nr_seq_regra_w || ', ';
				end;
			end loop;
			close C01;
		elsif (ie_tipo_repasse_w = 'A') then -- A = Atingimento de meta por equipes 
			open C02;
			loop 
			fetch C02 into 
				nr_seq_regra_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin 
				ds_regras_w := ds_regras_w || nr_seq_regra_w || ', ';
				end;
			end loop;
			close C02;
		else -- B = Movimento mensal (baseado nas movimentações cadastrais) / M = Movimento mensal (baseado nos valores faturados)	 
			ds_regras_w := nr_seq_regra_mensal_w || ', ';
		end if;
		 
		ds_regras_w := substr(ds_regras_w,1,(length(ds_regras_w) - 2));
		 
		insert into pls_estorno_comissao( nr_sequencia, nr_seq_canal_venda, nr_seq_segurado, vl_estorno, nr_seq_repasse_mens, 
					dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, cd_estabelecimento, 
					nr_contrato, cd_estipulante_pj, cd_estipulante_pf, vl_mensalidade, vl_comissao, 
					nr_seq_regra_estorno, dt_estorno, nr_parcela, nr_seq_vendedor, nr_seq_proposta, 
					ds_regras, nr_seq_comis_benef_origem, nr_seq_segurado_mens, tx_estorno ) 
				values (	nextval('pls_estorno_comissao_seq'), nr_seq_canal_venda_p, nr_seq_segurado_p, vl_estorno_w, nr_seq_repasse_mens_p, 
					clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, cd_estabelecimento_p, 
					nr_contrato_w, cd_estipulante_pj_w, cd_estipulante_pf_w, vl_mensalidade_w, vl_comissao_w, 
					nr_seq_regra_estorno_w, dt_estorno_w, nr_parcela_w, nr_seq_vendedor_w, nr_seq_proposta_w, 
					substr(ds_regras_w,1,100), nr_seq_comis_benef_origem_w, nr_seq_segurado_mens_w, tx_estorno_w );
	end if;
else 
	select	b.nr_sequencia, 
		a.ie_status 
	into STRICT	nr_seq_comissao_w, 
		ie_status_lote_w 
	from	pls_comissao_beneficiario	c, 
		pls_comissao			b, 
		pls_lote_comissao		a 
	where	a.nr_sequencia = b.nr_seq_lote	 
	and	b.nr_sequencia = c.nr_seq_comissao 
	and	c.nr_sequencia = nr_seq_comissao_benef_p;
	 
	if (ie_status_lote_w <> 'E') then	 
		select	coalesce(max(i.nr_lote_contabil),0) 
		into STRICT	nr_lote_contabil_w 
		from	pls_comissao_benef_item		i, 
			pls_comissao_beneficiario	b 
		where	b.nr_sequencia	= i.nr_seq_comissao_benef 
		and	b.nr_sequencia	= nr_seq_comissao_benef_p;
		 
		if (nr_lote_contabil_w <> 0) then 
			/* Não é possível concluir a ação executada pois o lote contábil #@NR_LOTE_CONTABIL#@ está vinculado ao repasse!*/
 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(458997, 'NR_LOTE_CONTABIL=' || nr_lote_contabil_w);
		end if;
		 
		update	pls_comissao_beneficiario 
		set	vl_estorno	= (vl_estorno_w * -1) 
		where	nr_sequencia	= nr_seq_comissao_benef_p;
		 
		insert	into	pls_comissao_benef_item(	nr_sequencia, 
				nr_seq_comissao_benef, 
				nr_seq_item_origem_cancel, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				tx_comissao, 
				ie_tipo_item, 
				vl_comissao, 
				vl_incremento, 
				vl_item_mensalidade, 
				vl_premio, 
				nr_seq_plano, 
				nr_seq_plano_sca, 
				nr_seq_bonificacao, 
				ie_sca_embutido, 
				vl_origem, 
				nr_seq_regra, 
				nr_seq_regra_equipe, 
				nr_seq_regra_equipe_sup) 
			(SELECT	nextval('pls_comissao_benef_item_seq'), 
				nr_seq_comissao_benef_p, 
				nr_sequencia, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				a.tx_comissao, 
				a.ie_tipo_item, 
				(a.vl_comissao*tx_estorno_w/100)*-1, 
				(a.vl_incremento*tx_estorno_w/100)*-1, 
				a.vl_item_mensalidade*-1, 
				(a.vl_premio*tx_estorno_w/100)*-1, 
				a.nr_seq_plano, 
				a.nr_seq_plano_sca, 
				a.nr_seq_bonificacao, 
				a.ie_sca_embutido, 
				a.vl_origem*-1, 
				a.nr_seq_regra, 
				a.nr_seq_regra_equipe, 
				a.nr_seq_regra_equipe_sup 
			from	pls_comissao_benef_item a 
			where	nr_seq_comissao_benef = nr_seq_comissao_benef_p);
		 
		update	pls_comissao 
		set	vl_comissao_canal = vl_comissao_canal - vl_estorno_w 
		where	nr_sequencia = nr_seq_comissao_w;
		 
		qt_sem_regra_parc_w := pls_gerar_venc_comissao(null, nr_seq_comissao_w, nm_usuario_p, cd_estabelecimento_p, 'N', qt_sem_regra_parc_w);
	else 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(417175);
		-- Mensagem: Não é permitido estornar comissões em lotes encerrados! 
	end if;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_estorno_comissao ( nr_seq_canal_venda_p bigint, nr_seq_comissao_benef_p bigint, nr_seq_segurado_p bigint, vl_estorno_p bigint, nr_seq_repasse_mens_p bigint, nr_seq_motivo_cancel_p bigint, ie_geracao_p text, nr_seq_regra_estorno_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

