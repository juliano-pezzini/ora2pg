-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_dados_contrato_proposta ( nr_seq_proposta_p bigint, nr_seq_contrato_p bigint, nr_seq_plano_p bigint, nr_seq_pagador_p bigint, ie_opcao_p text, ie_regra_desconto_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/* ie_opcao_p
	'P' = Pagador
	'PP' = Produto
	'O' = Outros dados
	'DPP' = Deletar produto
	'DP' = Deletar pagador
*/
nr_seq_plano_w			bigint;
nr_seq_tabela_w			bigint;
cd_cgc_pagador_w		varchar(14);
cd_pagador_w			varchar(10);
cd_condicao_pagamento_w		bigint;
ie_endereco_boleto_w		varchar(4);
dt_dia_vencimento_w		smallint;
nr_seq_forma_cobranca_w		varchar(2);
cd_banco_w			integer;
cd_agencia_bancaria_w		varchar(8);
ie_digito_agencia_w		varchar(1);
cd_conta_w			varchar(20);
ie_digito_conta_w		varchar(2);
nr_seq_contrato_plano_w		bigint;
nr_seq_contrato_pagador_w	bigint;
cd_cgc_estipulante_w		varchar(14);
cd_pf_estipulante_w		varchar(10);
ie_tipo_beneficiario_w		varchar(3);
nr_seq_regra_w			bigint;
nr_seq_regra_preco_w		bigint;
nr_seq_regra_nova_w		bigint;
nr_seq_contrato_w		bigint;
dt_inicio_proposta_w		timestamp;
cd_pessoa_fisica_benef_w	bigint;
nr_seq_plano_benef_w		bigint;
nr_seq_tabela_benef_w		bigint;
cd_pf_benef_cont_w		bigint;
nr_seq_plano_benef_cont_w	bigint;
nr_seq_tabela_benef_cont_w	bigint;
nr_seq_pagador_w		bigint;
nr_seq_pagador_prop_w		bigint;
cd_pagador_benef_w		varchar(20);
ie_tipo_proposta_w		smallint;
nr_seq_contrarto_w		bigint;
nr_seq_titular_cont_w		bigint;
cd_titular_cont_w		bigint;
nr_seq_tit_cont_prop_w		bigint;
nr_seq_parentesco_cont_w	bigint;
ie_plano_principal_w		varchar(1);
dt_inicio_vigencia_w		timestamp;
dt_fim_vigencia_w		timestamp;
nr_seq_compl_pf_tel_adic_w	bigint;
nr_seq_dia_vencimento_w		bigint;
ie_tipo_pagador_w		varchar(1);
nr_seq_tipo_compl_adic_w	bigint;
qt_registros_w			bigint;
nr_seq_pagador_benef_w 		bigint;
nr_seq_motivo_inclusao_w	bigint;
nr_seq_segurado_w		bigint;
nr_seq_tabela_origem_w		bigint;
nr_seq_tabela_aux_w		bigint;
nr_seq_regra_lanc_w		bigint;
nr_seq_vendedor_canal_w		bigint	:= null;
nr_seq_vendedor_pf_w		bigint	:= null;

c01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_plano,
		nr_seq_tabela
	from	pls_contrato_plano
	where	nr_seq_contrato = nr_seq_contrato_p
	and	nr_sequencia	= nr_seq_plano_p;

c02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_cgc,
		a.cd_pessoa_fisica,
		b.cd_condicao_pagamento,
		a.ie_endereco_boleto,
		b.dt_dia_vencimento,
		b.nr_seq_forma_cobranca,
		b.cd_banco,
		b.cd_agencia_bancaria,
		b.ie_digito_agencia,
		b.cd_conta,
		b.ie_digito_conta,
		b.dt_inicio_vigencia,
		b.dt_fim_vigencia,
		a.nr_seq_compl_pf_tel_adic,
		b.nr_seq_dia_vencimento,
		a.ie_tipo_pagador,
		a.nr_seq_tipo_compl_adic
	from	pls_contrato_pagador		a,
		pls_contrato_pagador_fin	b
	where	a.nr_sequencia		= b.nr_seq_pagador
	and	a.nr_sequencia		= nr_seq_pagador_p
	and	dt_inicio_proposta_w between trunc(coalesce(b.dt_inicio_vigencia,dt_inicio_proposta_w),'dd') and fim_dia(coalesce(b.dt_fim_vigencia,dt_inicio_proposta_w));

c03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_desconto
	where	nr_seq_contrato	= nr_seq_contrato_p;

c04 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_preco_regra
	where	nr_seq_regra	= nr_seq_regra_w;

C06 CURSOR FOR
	SELECT	c.cd_pessoa_fisica,
		c.nr_seq_pagador,
		c.nr_seq_contrato,
		c.nr_seq_titular,
		c.nr_seq_parentesco,
		c.nr_sequencia,
		c.nr_seq_tabela
	from	pls_plano		d,
		pls_segurado		c,
		pls_contrato_plano	b,
		pls_contrato		a
	where	c.nr_seq_contrato	= a.nr_sequencia
	and	b.nr_seq_contrato	= a.nr_sequencia
	and	c.nr_seq_plano		= d.nr_sequencia
	and	a.nr_sequencia		= nr_seq_contrato_p
	and	d.ie_regulamentacao	= 'R'
	and	coalesce(c.dt_rescisao::text, '') = ''
	and	(c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')
	order by CASE WHEN coalesce(nr_seq_titular::text, '') = '' THEN -1  ELSE 1 END;


BEGIN

select	max(nr_seq_motivo_inclusao)
into STRICT	nr_seq_motivo_inclusao_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;

select	dt_inicio_proposta
into STRICT	dt_inicio_proposta_w
from	pls_proposta_adesao
where	nr_sequencia = nr_seq_proposta_p;

--Preenchimento de Canal de Venda
select	max(a.nr_sequencia)
into STRICT	nr_seq_regra_lanc_w
from	pls_contrato_regra_lanc a,
	pls_vendedor_vinculado b
where	b.nr_sequencia		= a.nr_seq_vendedor_pf
and	a.nr_seq_contrato	= nr_seq_contrato_p
and	coalesce(a.ie_aplicacao_regra,'A') in ('A','T')
and	dt_inicio_proposta_w between coalesce(a.dt_inicio_vigencia,dt_inicio_proposta_w) and coalesce(a.dt_fim_vigencia,dt_inicio_proposta_w)
and	b.cd_pessoa_fisica = (	SELECT	max(x.cd_pessoa_fisica)
				from 	usuario x
				where 	x.nm_usuario = nm_usuario_p);

if (coalesce(nr_seq_regra_lanc_w::text, '') = '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_regra_lanc_w
	from	pls_contrato_regra_lanc
	where	nr_seq_contrato		= nr_seq_contrato_p
	and	coalesce(ie_aplicacao_regra,'A') in ('A','T')
	and	dt_inicio_proposta_w between coalesce(dt_inicio_vigencia,dt_inicio_proposta_w) and coalesce(dt_fim_vigencia,dt_inicio_proposta_w);
end if;

if (nr_seq_regra_lanc_w IS NOT NULL AND nr_seq_regra_lanc_w::text <> '') then
	select	max(nr_seq_vendedor_canal),
		max(nr_seq_vendedor_pf)
	into STRICT	nr_seq_vendedor_canal_w,
		nr_seq_vendedor_pf_w
	from	pls_contrato_regra_lanc
	where	nr_sequencia	= nr_seq_regra_lanc_w;
	
	if (nr_seq_vendedor_canal_w IS NOT NULL AND nr_seq_vendedor_canal_w::text <> '') then
		update	pls_proposta_adesao
		set	nr_seq_vendedor_canal	= nr_seq_vendedor_canal_w,
			nr_seq_vendedor_pf	= nr_seq_vendedor_pf_w
		where	nr_sequencia		= nr_seq_proposta_p;
	end if;
end if;

if (ie_opcao_p = 'PP') then
	open c01;
	loop
	fetch c01 into
		nr_seq_contrato_plano_w,
		nr_seq_plano_w,
		nr_seq_tabela_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		insert into pls_proposta_plano(
			nr_sequencia, nr_seq_proposta, nr_seq_plano, ie_principal,
			dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
			nm_usuario_nrec, nr_seq_tabela, nr_seq_contrato_plano)
		values ( nextval('pls_proposta_plano_seq'), nr_seq_proposta_p, nr_seq_plano_w, ie_plano_principal_w,
			clock_timestamp(), nm_usuario_p, clock_timestamp(),
			nm_usuario_p, nr_seq_tabela_w, nr_seq_contrato_plano_w);
		end;
	end loop;
	close c01;
elsif (ie_opcao_p	= 'P') then
	open c02;
	loop
	fetch c02 into
		nr_seq_contrato_pagador_w,
		cd_cgc_pagador_w,
		cd_pagador_w,
		cd_condicao_pagamento_w,
		ie_endereco_boleto_w,
		dt_dia_vencimento_w,
		nr_seq_forma_cobranca_w,
		cd_banco_w,
		cd_agencia_bancaria_w,
		ie_digito_agencia_w,
		cd_conta_w,
		ie_digito_conta_w,
		dt_inicio_vigencia_w,
		dt_fim_vigencia_w,
		nr_seq_compl_pf_tel_adic_w,
		nr_seq_dia_vencimento_w,
		ie_tipo_pagador_w,
		nr_seq_tipo_compl_adic_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		select	count(1)
		into STRICT	qt_registros_w
		from	pls_proposta_pagador
		where	nr_seq_proposta	= nr_seq_proposta_p
		and	((cd_cgc_pagador	= cd_cgc_pagador_w)
		or (cd_pagador		= cd_pagador_w))  LIMIT 1;
		
		if (qt_registros_w = 0) then
			
			insert into pls_proposta_pagador(
				nr_sequencia, nr_seq_proposta, dt_atualizacao,
				nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				cd_cgc_pagador, cd_pagador, cd_condicao_pagamento,
				ie_endereco_boleto, dt_dia_vencimento, nr_seq_forma_cobranca,
				cd_banco, cd_agencia_bancaria, ie_digito_agencia,
				cd_conta, ie_digito_conta, nr_seq_contrato_pagador,
				dt_inicio_vigencia,dt_fim_vigencia, nr_seq_compl_pf_tel_adic,
				nr_seq_dia_vencimento, ie_tipo_pagador, nr_seq_tipo_compl_adic)
			values ( nextval('pls_proposta_pagador_seq'), nr_seq_proposta_p, clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p,
				cd_cgc_pagador_w, cd_pagador_w, cd_condicao_pagamento_w,
				ie_endereco_boleto_w, dt_dia_vencimento_w, nr_seq_forma_cobranca_w,
				cd_banco_w, cd_agencia_bancaria_w, ie_digito_agencia_w,
				cd_conta_w, ie_digito_conta_w, nr_seq_contrato_pagador_w,
				dt_inicio_vigencia_w,dt_fim_vigencia_w, nr_seq_compl_pf_tel_adic_w,
				nr_seq_dia_vencimento_w, ie_tipo_pagador_w, nr_seq_tipo_compl_adic_w);
		end if;
		end;
	end loop;
	close c02;
	
elsif (ie_opcao_p	= 'O') then
	update	pls_proposta_beneficiario
	set	nr_seq_plano  = NULL
	where	nr_seq_plano in (      SELECT  nr_sequencia
					from    pls_proposta_plano
					where   nr_seq_proposta = nr_seq_proposta_p
					and     (nr_seq_contrato_plano IS NOT NULL AND nr_seq_contrato_plano::text <> ''));
	
	update	pls_proposta_beneficiario
	set	nr_seq_pagador  = NULL
	where	nr_seq_pagador in (    SELECT  nr_sequencia
					from    pls_proposta_pagador
					where   nr_seq_proposta = nr_seq_proposta_p
					and     (nr_seq_contrato_pagador IS NOT NULL AND nr_seq_contrato_pagador::text <> ''));
	
	delete	FROM pls_preco_regra
	where	nr_seq_regra    in (    SELECT  nr_sequencia
					from    pls_regra_desconto
					where   nr_seq_proposta = nr_seq_proposta_p);
	
	delete	from pls_regra_desconto
	where	nr_seq_proposta = nr_seq_proposta_p;
	
	select	cd_cgc_estipulante,
		cd_pf_estipulante,
		ie_tipo_beneficiario
	into STRICT	cd_cgc_estipulante_w,
		cd_pf_estipulante_w,
		ie_tipo_beneficiario_w
	from	pls_contrato
	where	nr_sequencia	= nr_seq_contrato_p;
	
	update	pls_proposta_adesao
	set	cd_cgc_estipulante	= cd_cgc_estipulante_w,
		cd_estipulante		= cd_pf_estipulante_w,
		ie_tipo_beneficiario	= ie_tipo_beneficiario_w
	where	nr_sequencia		= nr_seq_proposta_p;
	
	select  CASE WHEN count(nr_sequencia)=1 THEN 'S'  ELSE 'N' END
	into STRICT    ie_plano_principal_w
	from    pls_contrato_plano
	where   nr_seq_contrato = nr_seq_contrato_p
	and     ((dt_inativacao >= dt_inicio_proposta_w) or (coalesce(dt_inativacao::text, '') = ''));
	
	if (ie_regra_desconto_p = 'S') then
		open c03;
		loop
		fetch c03 into
			nr_seq_regra_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin
			select  nextval('pls_regra_desconto_seq')
			into STRICT    nr_seq_regra_nova_w
			;
			
			insert into pls_regra_desconto(nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, ds_regra,
				nr_seq_plano, nr_seq_contrato, ie_situacao,
				dt_inicio_vigencia, dt_fim_vigencia, ie_tipo_regra,
				nr_seq_proposta, ie_simulacao_preco, cd_estabelecimento)
			(SELECT nr_seq_regra_nova_w, clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p, ds_regra,
				nr_seq_plano, null, ie_situacao,
				dt_inicio_vigencia, dt_fim_vigencia, ie_tipo_regra,
				nr_seq_proposta_p, ie_simulacao_preco, cd_estabelecimento_p
			from    pls_regra_desconto
			where   nr_sequencia    = nr_seq_regra_w);
			
			open c04;
			loop
			fetch c04 into
				nr_seq_regra_preco_w;
			EXIT WHEN NOT FOUND; /* apply on c04 */
				begin
				insert into pls_preco_regra(nr_sequencia, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, qt_min_vidas,
					qt_max_vidas, nr_seq_regra, tx_desconto,
					ie_tipo_segurado, vl_desconto)
				(SELECT nextval('pls_preco_regra_seq'), clock_timestamp(), nm_usuario_p,
					clock_timestamp(), nm_usuario_p, qt_min_vidas,
					qt_max_vidas, nr_seq_regra_nova_w, tx_desconto,
					coalesce(ie_tipo_segurado,'T'), vl_desconto
				from    pls_preco_regra
				where   nr_sequencia    = nr_seq_regra_preco_w);
				end;
			end loop;
			close c04;
			end;
		end loop;
		close c03;
	end if;
	
	select  ie_tipo_proposta
	into STRICT    ie_tipo_proposta_w
	from    pls_proposta_adesao
	where   nr_sequencia = nr_seq_proposta_p;
	
	if (ie_tipo_proposta_w = 9) then
		nr_seq_plano_w		:= null;
		nr_seq_tabela_w		:= null;
		select	count(1)
		into STRICT	qt_registros_w
		from	pls_proposta_plano
		where	nr_seq_proposta         = nr_seq_proposta_p;
		
		if (qt_registros_w = 1) then
			select	nr_seq_plano,
				nr_seq_tabela
			into STRICT	nr_seq_plano_w,
				nr_seq_tabela_w
			from	pls_proposta_plano
			where	nr_seq_proposta	= nr_seq_proposta_p;
		end if;
		
		delete	FROM pls_proposta_beneficiario
		where	nr_seq_proposta	= nr_seq_proposta_p;
		
		delete FROM pls_proposta_beneficiario
		where   nr_seq_proposta = nr_seq_proposta_p;
		
		open C06;
		loop
		fetch C06 into
			cd_pf_benef_cont_w,
			nr_seq_pagador_prop_w,
			nr_seq_contrato_w,
			nr_seq_titular_cont_w,
			nr_seq_parentesco_cont_w,
			nr_seq_segurado_w,
			nr_seq_tabela_origem_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_proposta_beneficiario
			where	nr_seq_proposta	= nr_seq_proposta_p
			and	cd_beneficiario	= cd_pf_benef_cont_w  LIMIT 1;
			
			if (qt_registros_w	= 0) then
				
				select	coalesce(cd_pessoa_fisica,cd_cgc)
				into STRICT	cd_pagador_benef_w
				from	pls_contrato_pagador
				where	nr_sequencia	= nr_seq_pagador_prop_w
				and	nr_seq_contrato	= nr_seq_contrato_w;
				
				select	max(nr_sequencia)
				into STRICT	nr_seq_pagador_w
				from	pls_proposta_pagador
				where	((cd_pagador	= cd_pagador_benef_w) or (cd_cgc_pagador = cd_pagador_benef_w))
				and	nr_seq_proposta	= nr_seq_proposta_p;
				
				if (nr_seq_titular_cont_w IS NOT NULL AND nr_seq_titular_cont_w::text <> '') then
				
					select	cd_pessoa_fisica
					into STRICT	cd_titular_cont_w
					from	pls_segurado
					where	nr_sequencia	= nr_seq_titular_cont_w;
					
					begin
					select	nr_sequencia
					into STRICT	nr_seq_tit_cont_prop_w
					from	pls_proposta_beneficiario
					where	cd_beneficiario	= cd_titular_cont_w
					and	nr_seq_proposta	= nr_seq_proposta_p;
					exception
					when others then
						nr_seq_tit_cont_prop_w	:= null;
						nr_seq_parentesco_cont_w := null;
					end;
				end if;
				
				/*Busca da tabela que o beneficiario possui no contrato origem*/

				select	max(nr_sequencia)
				into STRICT	nr_seq_tabela_aux_w
				from	pls_tabela_preco
				where	nr_seq_plano	  = nr_seq_plano_w
				and	nr_seq_tabela_ant = nr_seq_tabela_origem_w;
				
				insert	into	pls_proposta_beneficiario(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
						cd_beneficiario,nr_seq_plano,nr_seq_tabela,nr_seq_pagador,nr_seq_proposta,
						nr_seq_titular,nr_seq_parentesco,nr_seq_beneficiario,ie_nascido_plano,ie_taxa_inscricao,
						nr_seq_motivo_inclusao,ie_copiar_sca_plano)
				values (	nextval('pls_proposta_beneficiario_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
						cd_pf_benef_cont_w,nr_seq_plano_w,coalesce(nr_seq_tabela_aux_w,nr_seq_tabela_w),nr_seq_pagador_w,nr_seq_proposta_p,
						nr_seq_tit_cont_prop_w, nr_seq_parentesco_cont_w,nr_seq_segurado_w,'N',	'S',
						nr_seq_motivo_inclusao_w,'S');
			end if;
			end;
		end loop;
		close C06;
	end if;
elsif (ie_opcao_p = 'DPP') then
	delete	FROM pls_proposta_plano
	where	nr_seq_proposta = nr_seq_proposta_p
	and	(nr_seq_contrato_plano IS NOT NULL AND nr_seq_contrato_plano::text <> '');
elsif (ie_opcao_p = 'DP') then

	select 	max(nr_sequencia)
	into STRICT 	nr_seq_pagador_benef_w
	from 	pls_proposta_beneficiario
	where 	nr_seq_pagador in (	SELECT  nr_sequencia
					from 	pls_proposta_pagador
					where	nr_seq_proposta = nr_seq_proposta_p
					and	(nr_seq_contrato_pagador IS NOT NULL AND nr_seq_contrato_pagador::text <> ''));
	
	if (coalesce(nr_seq_pagador_benef_w, 0) > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1068452,  'NR_SEQ_PAGADOR='||nr_seq_pagador_benef_w); -- 'Existem beneficiarios vinculados com o Pagador';
	end if;
	
	delete	FROM pls_proposta_pagador
	where	nr_seq_proposta = nr_seq_proposta_p
	and	(nr_seq_contrato_pagador IS NOT NULL AND nr_seq_contrato_pagador::text <> '');
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_dados_contrato_proposta ( nr_seq_proposta_p bigint, nr_seq_contrato_p bigint, nr_seq_plano_p bigint, nr_seq_pagador_p bigint, ie_opcao_p text, ie_regra_desconto_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

