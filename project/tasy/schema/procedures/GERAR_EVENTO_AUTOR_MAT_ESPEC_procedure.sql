-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_evento_autor_mat_espec ( nr_seq_autor_cirurgia_p bigint, nm_usuario_p text) AS $body$
DECLARE

cd_convenio_w			bigint;
qt_existe_regra_w			bigint := 0;
ie_estagio_autor_w			varchar(5);
nr_seq_agenda_w			bigint;
nr_seq_evento_w			bigint;
ds_mensagem_w			varchar(4000);
ds_titulo_w			varchar(100);
ie_forma_ev_w			varchar(15);
ie_pessoa_destino_w		varchar(15);
cd_pf_destino_w			varchar(10);
ie_usuario_aceite_w		varchar(3);
cd_setor_atendimento_w		integer;
cd_perfil_w			integer;
ds_remetente_sms_w		varchar(80);
ds_remetente_email_w		varchar(100);
nr_sequencia_w			bigint;
ds_maquina_w			varchar(80);
cd_medico_cirurgiao_agenda_w	varchar(10);
cd_anestesista_agenda_w		varchar(10);
cd_pessoa_fisica_agenda_w		varchar(10);
ds_status_agenda_w		varchar(150);
nm_paciente_w			varchar(60);
cd_pessoa_regra_w		varchar(10);
ds_pac_abreviado_w		varchar(60);
ds_quarto_w			varchar(100);
ds_setor_origem_w			varchar(100);
nr_atendimento_w			bigint;
ds_ramal				varchar(30);
ds_agenda_w			varchar(50);
hr_inicio_w			timestamp;
cd_proced_agenda_w		bigint;
dt_cancelamento_w		timestamp;
cd_cid_w				varchar(10);
ds_doenca_cid_w			varchar(240);
ds_reserva_w			varchar(20);
nr_telefone_w			varchar(15);
ds_ramal_w			varchar(50);
cd_medico_autor_w		varchar(10);
qt_corresp_w			bigint := 0;
cd_pessoa_fisica_w		varchar(10);
ds_estagio_autor_w		varchar(80);
nm_usuario_destino_w 		varchar(15);
ds_email_fixo_w			ev_evento_regra_dest.ds_email_fixo%type;

C01 CURSOR FOR
	SELECT	nr_seq_evento
	from	regra_envio_sms
	where	ie_evento_disp = 'AEME'
	and	coalesce(ie_estagio_autor_mat_esp,ie_estagio_autor_w) = ie_estagio_autor_w
	and	coalesce(ie_situacao,'A') = 'A'
	order by 1;

C02 CURSOR FOR
	SELECT	ie_forma_ev,
		ie_pessoa_destino,
		cd_pf_destino,
		coalesce(ie_usuario_aceite,'N'),
		cd_setor_atendimento,
		cd_perfil,
		ds_email_fixo
	from	ev_evento_regra_dest
	where	nr_seq_evento	= nr_seq_evento_w
	and	coalesce(cd_convenio, coalesce(cd_convenio_w,0))	= coalesce(cd_convenio_w,0)
	order by ie_forma_ev;

C03 CURSOR FOR
	SELECT	obter_dados_usuario_opcao(nm_usuario,'C')
	from	usuario_setor_v
	where	cd_setor_atendimento = cd_setor_atendimento_w
	and	ie_forma_ev_w in (2,3)
	and	(obter_dados_usuario_opcao(nm_usuario,'C') IS NOT NULL AND (obter_dados_usuario_opcao(nm_usuario,'C'))::text <> '');

C04 CURSOR FOR
	SELECT	obter_dados_usuario_opcao(nm_usuario,'C'),
		nm_usuario
	from	usuario_perfil
	where	cd_perfil = cd_perfil_w
	and	ie_forma_ev_w in (2,3)
	and	(obter_dados_usuario_opcao(nm_usuario,'C') IS NOT NULL AND (obter_dados_usuario_opcao(nm_usuario,'C'))::text <> '');


BEGIN
select	count(*)
into STRICT	qt_existe_regra_w
from	regra_envio_sms
where	ie_evento_disp = 'AEME'
and	coalesce(ie_situacao,'A') = 'A';

if (qt_existe_regra_w > 0) then
	begin
	select	coalesce(ie_estagio_autor,'X'),
		nr_seq_agenda,
		nr_atendimento,
		cd_pessoa_fisica,
		substr(obter_valor_dominio(3116,ie_estagio_autor),1,60)
	into STRICT	ie_estagio_autor_w,
		nr_seq_agenda_w,
		nr_atendimento_w,
		cd_pessoa_fisica_w,
		ds_estagio_autor_w
	from	autorizacao_cirurgia
	where	nr_sequencia = nr_seq_autor_cirurgia_p;

	if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then

		select	a.cd_medico_resp,
			a.cd_pessoa_fisica,
			substr(obter_nome_pf(a.cd_pessoa_fisica),1,60),
			a.nr_atendimento,
			b.cd_convenio
		into STRICT	cd_medico_autor_w,
			cd_pessoa_fisica_agenda_w,
			nm_paciente_w,
			nr_atendimento_w,
			cd_convenio_w
		from	atendimento_paciente a,
			atend_categoria_convenio b
		where	a.nr_atendimento = nr_atendimento_w
		and	Obter_Atecaco_atendimento(a.nr_atendimento) = b.nr_seq_interno;

	elsif (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then
		begin
		select	a.cd_medico,
			a.cd_anestesista,
			a.cd_pessoa_fisica,
			substr(obter_valor_dominio(83,a.ie_status_agenda),1,150),
			substr(obter_nome_pf(a.cd_pessoa_fisica),1,60),
			b.ds_agenda,
			a.hr_inicio,
			a.cd_procedimento,
			a.dt_cancelamento,
			a.cd_doenca_cid,
			substr(obter_desc_cid_doenca(a.cd_doenca_cid),1,240),
			a.nr_reserva,
			a.cd_convenio
		into STRICT	cd_medico_cirurgiao_agenda_w,
			cd_anestesista_agenda_w,
			cd_pessoa_fisica_agenda_w,
			ds_status_agenda_w,
			nm_paciente_w,
			ds_agenda_w,
			hr_inicio_w,
			cd_proced_agenda_w,
			dt_cancelamento_w,
			cd_cid_w,
			ds_doenca_cid_w,
			ds_reserva_w,
			cd_convenio_w
		from	agenda_paciente a,
			agenda b
		where	a.cd_agenda = b.cd_agenda
		and	a.nr_sequencia = nr_seq_agenda_w;
		exception
		when others then
			cd_medico_cirurgiao_agenda_w 	:= null;
			cd_anestesista_agenda_w		:= null;
			cd_pessoa_fisica_agenda_w 	:= null;
			ds_status_agenda_w		:= null;
		end;
	end if;

	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') or (cd_pessoa_fisica_agenda_w IS NOT NULL AND cd_pessoa_fisica_agenda_w::text <> '')then
		begin
		ds_ramal_w		:= substr(obter_compl_pf(coalesce(cd_pessoa_fisica_w,cd_pessoa_fisica_agenda_w),1,'RAM'),1,30);
		ds_pac_abreviado_w 	:= substr(abrevia_nome(obter_nome_pf(coalesce(cd_pessoa_fisica_w,cd_pessoa_fisica_agenda_w)),'T'),1,60);
		nr_telefone_w		:= substr(obter_compl_pf(coalesce(cd_pessoa_fisica_w,cd_pessoa_fisica_agenda_w),1,'T'),1,30);
		end;
	end if;

	open C01;
	loop
	fetch C01 into
		nr_seq_evento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (coalesce(nr_seq_evento_w,0) <> 0) then

			select	ds_titulo,
				ds_mensagem,
				ds_remetente_sms,
				ds_remetente_email
			into STRICT	ds_titulo_w,
				ds_mensagem_w,
				ds_remetente_sms_w,
				ds_remetente_email_w
			from	ev_evento
			where	nr_sequencia	= nr_seq_evento_w;

			select	substr(obter_inf_sessao(0),1,80)
			into STRICT	ds_maquina_w
			;

			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@paciente',nm_paciente_w),1,4000);
			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@medicoagenda',substr(obter_nome_pf(cd_medico_cirurgiao_agenda_w),1,60)),1,4000);
			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@statusagenda',ds_status_agenda_w),1,4000);
			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@pac_abreviado',ds_pac_abreviado_w),1,4000);
			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_quarto',ds_quarto_w),1,4000);
			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@setor',ds_setor_origem_w),1,4000);
			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_ramal',ds_ramal_w),1,4000);
			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@telefone',nr_telefone_w),1,4000);
			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@agenda',ds_agenda_w),1,4000);
			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@dtinicioagenda',PKG_DATE_FORMATERS.TO_VARCHAR(hr_inicio_w,'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,4000);
			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@procagenda',cd_proced_agenda_w),1,4000);
			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@dtcancelagenda',dt_cancelamento_w),1,4000);
			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@data_atual',clock_timestamp()),1,4000);
			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@data_hora_atual',PKG_DATE_FORMATERS.TO_VARCHAR(clock_timestamp(),'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p)),1,4000);
			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@cd_cid',cd_cid_w),1,4000);
			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_cid',ds_doenca_cid_w),1,4000);
			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@reserva',ds_reserva_w),1,4000);
			ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@Estagio_Mat_Espec',ds_estagio_autor_w),1,4000);

			select	nextval('ev_evento_paciente_seq')
			into STRICT	nr_sequencia_w
			;

			insert into ev_evento_paciente(
				nr_sequencia,
				nr_seq_evento,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_pessoa_fisica,
				ds_titulo,
				ds_mensagem,
				ie_status,
				ds_maquina,
				dt_evento,
				dt_liberacao)
			values (	nr_sequencia_w,
				nr_seq_evento_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				coalesce(cd_pessoa_fisica_w,cd_pessoa_fisica_agenda_w),
				ds_titulo_w,
				ds_mensagem_w,
				'G',
				ds_maquina_w,
				clock_timestamp(),
				clock_timestamp());

			open C02;
			loop
			fetch C02 into
				ie_forma_ev_w,
				ie_pessoa_destino_w,
				cd_pf_destino_w,
				ie_usuario_aceite_w,
				cd_setor_atendimento_w,
				cd_perfil_w,
				ds_email_fixo_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin

				if (ie_pessoa_destino_w = 1) then
					cd_pessoa_regra_w  := cd_medico_autor_w;
				elsif (ie_pessoa_destino_w = 18) then --  Cirurg Ag cirurgica
					cd_pessoa_regra_w := cd_medico_cirurgiao_agenda_w;
				elsif (ie_pessoa_destino_w = 19) then -- Paciente
					cd_pessoa_regra_w := coalesce(cd_pessoa_fisica_w,cd_pessoa_fisica_agenda_w);
				elsif (ie_pessoa_destino_w = 20) then -- Anest Ag Cirurgica
					cd_pessoa_regra_w := cd_anestesista_agenda_w;
				else
					cd_pessoa_regra_w:= cd_pf_destino_w;
				end if;

				if (ie_usuario_aceite_w = 'S') then
					select	count(*)
					into STRICT	qt_corresp_w
					from	pessoa_fisica_corresp
					where	cd_pessoa_fisica	= cd_pessoa_regra_w
					and	ie_tipo_corresp		= CASE WHEN ie_forma_ev_w='1' THEN 'MCel' WHEN ie_forma_ev_w='3' THEN 'CI' WHEN ie_forma_ev_w='4' THEN 'Email' END
					and	ie_tipo_doc		= 'AE';
				end if;

				if (qt_corresp_w = 0) and (ie_usuario_aceite_w = 'S')then
					begin
					cd_pessoa_regra_w := null;
					end;
				end if;

				if (cd_pessoa_regra_w IS NOT NULL AND cd_pessoa_regra_w::text <> '') or (ds_email_fixo_w IS NOT NULL AND ds_email_fixo_w::text <> '') then

					if (coalesce(ds_email_fixo_w::text, '') = '') then
						select	max(obter_compl_pf(cd_pessoa_regra_w,1,'M'))
						into STRICT	ds_email_fixo_w
						;

						if (coalesce(ds_email_fixo_w::text, '') = '') then
							select	max(obter_compl_pf(cd_pessoa_regra_w,2,'M'))
							into STRICT	ds_email_fixo_w
							;
						end if;
					end if;

					insert into ev_evento_pac_destino(
						nr_sequencia,
						nr_seq_ev_pac,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_pessoa_fisica,
						ie_forma_ev,
						ie_status,
						dt_ciencia,
						ie_pessoa_destino,
						dt_evento,
						ds_email_fixo)
					values (	nextval('ev_evento_pac_destino_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_pessoa_regra_w,
						ie_forma_ev_w,
						'G',
						null,
						ie_pessoa_destino_w,
						clock_timestamp(),
						ds_email_fixo_w);
				end if;
				end;

				open C03;
				loop
				fetch C03 into
					cd_pessoa_regra_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin
					if (cd_pessoa_regra_w IS NOT NULL AND cd_pessoa_regra_w::text <> '') then

						select	max(obter_compl_pf(cd_pessoa_regra_w,1,'M'))
						into STRICT	ds_email_fixo_w
						;

						if (coalesce(ds_email_fixo_w::text, '') = '') then
							select	max(obter_compl_pf(cd_pessoa_regra_w,2,'M'))
							into STRICT	ds_email_fixo_w
							;
						end if;

						insert into ev_evento_pac_destino(
							nr_sequencia,
							nr_seq_ev_pac,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							cd_pessoa_fisica,
							ie_forma_ev,
							ie_status,
							dt_ciencia,
							ie_pessoa_destino,
							dt_evento,
							ds_email_fixo)
						values (	nextval('ev_evento_pac_destino_seq'),
							nr_sequencia_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							cd_pessoa_regra_w,
							ie_forma_ev_w,
							'G',
							null,
							ie_pessoa_destino_w,
							clock_timestamp(),
							ds_email_fixo_w);
					end if;
					end;
				end loop;
				close C03;

				open C04;
				loop
				fetch C04 into
					cd_pessoa_regra_w,
					nm_usuario_destino_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin

					if (cd_pessoa_regra_w IS NOT NULL AND cd_pessoa_regra_w::text <> '') then

						select	max(obter_compl_pf(cd_pessoa_regra_w,1,'M'))
						into STRICT	ds_email_fixo_w
						;

						if (coalesce(ds_email_fixo_w::text, '') = '') then
							select	max(obter_compl_pf(cd_pessoa_regra_w,2,'M'))
							into STRICT	ds_email_fixo_w
							;
						end if;

						insert into ev_evento_pac_destino(
							nr_sequencia,
							nr_seq_ev_pac,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							cd_pessoa_fisica,
							ie_forma_ev,
							ie_status,
							dt_ciencia,
							nm_usuario_DEst,
							ie_pessoa_destino,
							dt_evento,
							ds_email_fixo)
						values (	nextval('ev_evento_pac_destino_seq'),
							nr_sequencia_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							cd_pessoa_regra_w,
							ie_forma_ev_w,
							'G',
							null,
							nm_usuario_Destino_w,
							ie_pessoa_destino_w,
							clock_timestamp(),
							ds_email_fixo_w);
					end if;
					end;
				end loop;
				close C04;

		end loop;
		close C02;

		end if;
		end;
	end loop;
	close C01;

	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_evento_autor_mat_espec ( nr_seq_autor_cirurgia_p bigint, nm_usuario_p text) FROM PUBLIC;

