-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE estornar_lib_cot_compra_forn ( nr_sequencia_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) AS $body$
DECLARE



ie_status_w			varchar(5);
ds_erro_w			varchar(255);
qt_existe_ordem_w		integer;
nr_cot_compra_w			bigint;
dt_retorno_prev_w		timestamp;
dt_geracao_ordem_compra_w	timestamp;


/*Esta procedure deve ser utilizada somente pelo Portal, ou seja
Pode ser utilizada somente pelo proprio fornecedor*/
BEGIN

select	coalesce(max(ie_status), 'X')
into STRICT	ie_status_w
from	cot_compra_forn
where	nr_sequencia = nr_sequencia_p;
if (ie_status_w in ('FF', 'CF')) then
	begin
	/*Verifica se este fornecedor tem algum item que gerou Ordem de compras*/

	select	count(*)
	into STRICT	qt_existe_ordem_w
	from	cot_compra_forn_item
	where	nr_seq_cot_forn = nr_sequencia_p
	and	(nr_ordem_compra IS NOT NULL AND nr_ordem_compra::text <> '');
	if (qt_existe_ordem_w > 0) then
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(300339);
	end if;

	/*Verifica o prazo de validade da cotação*/

	select	nr_cot_compra
	into STRICT	nr_cot_compra_w
	from	cot_compra_forn
	where	nr_sequencia = nr_sequencia_p;
	select	max(dt_retorno_prev)
	into STRICT	dt_retorno_prev_w
	from	cot_compra
	where	nr_cot_compra = nr_cot_compra_w;
	if (dt_retorno_prev_w IS NOT NULL AND dt_retorno_prev_w::text <> '') and (dt_retorno_prev_w < clock_timestamp()) then
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(300340);
	end if;

	/*Verifica se a cotação tem data de geração*/

	select	max(dt_geracao_ordem_compra)
	into STRICT	dt_geracao_ordem_compra_w
	from	cot_compra
	where	nr_cot_compra = nr_cot_compra_w;
	if (dt_geracao_ordem_compra_w IS NOT NULL AND dt_geracao_ordem_compra_w::text <> '') then
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(300339);
	end if;
	end;
else
	ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(300341);
end if;


if (coalesce(ds_erro_w::text, '') = '') then
	/*Passa a cotação para (Andamento com o fornecedor)*/

	update	cot_compra_forn
	set	ie_status	= 'AF',
		nm_usuario	= nm_usuario_p
	where	nr_sequencia	= nr_sequencia_p;
	commit;
else
	ds_retorno_p	:= substr(ds_erro_w,1,255);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE estornar_lib_cot_compra_forn ( nr_sequencia_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) FROM PUBLIC;

