-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_regra_aprov_solic ( nr_solic_compra_p bigint, nr_item_solic_compra_p bigint, cd_material_p bigint, nm_usuario_p text) AS $body$
DECLARE



cd_centro_custo_w		integer;
ie_urgente_w		varchar(1);
cd_estabelecimento_w	smallint;
cd_processo_Aprov_w	bigint;
qt_erro_w			integer;
cd_local_estoque_w	smallint;
cd_setor_atendimento_w	integer;
cd_conta_contabil_w		varchar(20);
cd_conta_contabil_ww		varchar(20);
cd_pessoa_fisica_w	varchar(10);
cd_fornecedor_w		varchar(14);
ie_consiste_regra_w varchar(10);
qt_com_cc_w integer;
cd_perfil_ativo_w	perfil.cd_perfil%type;


BEGIN

select	cd_local_estoque,
	cd_centro_custo,
	ie_urgente,
	cd_estabelecimento,
	cd_setor_atendimento,
	cd_conta_contabil,
	cd_fornec_sugerido,
	cd_pessoa_fisica
into STRICT	cd_local_estoque_w,
	cd_centro_custo_w,
	ie_urgente_w,
	cd_estabelecimento_w,
	cd_setor_atendimento_w,
	cd_conta_contabil_ww,
	cd_fornecedor_w,
	cd_pessoa_fisica_w
from	solic_compra
where	nr_solic_compra = nr_solic_compra_p;

select	coalesce(cd_conta_contabil,cd_conta_contabil_ww)
into STRICT	cd_conta_contabil_w
from	solic_compra_item
where	nr_solic_compra = nr_solic_compra_p
and	nr_item_solic_compra = nr_item_solic_compra_p;

cd_perfil_ativo_w	:= obter_perfil_ativo;

cd_processo_Aprov_w := Obter_Processo_Aprovacao(
		cd_material_p, cd_centro_custo_w, cd_setor_atendimento_w, cd_local_estoque_w, null,  -- cd_local_estoque_destino_p - Usado somente na requisicao
		null,  -- cd_operacao_estoque_p       - Usado somente na requisicao
		cd_conta_contabil_w, cd_fornecedor_w, cd_pessoa_fisica_w, 'S', ie_urgente_w, cd_estabelecimento_w, cd_perfil_ativo_w, null, nr_solic_compra_p, cd_processo_Aprov_w);

if (coalesce(cd_processo_Aprov_w, 0) = 0) then
	CALL gravar_solic_compra_consist(
			nr_solic_compra_p, '1',
			/*O material #@CD_MATERIAL#@ nao possui regra no processo de aprovacao. Verifique parametro[47].*/

			wheb_mensagem_pck.get_texto(298884,'CD_MATERIAL=' || cd_material_p),
			'C', null, nm_usuario_p);
elsif (coalesce(cd_processo_Aprov_w, 0) > 0) then
	begin
	
	ie_consiste_regra_w := obter_param_usuario(913, 47, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_w, ie_consiste_regra_w);
	
	if (ie_consiste_regra_w = 'S') then
		select count(*)
		  into STRICT qt_com_cc_w
		  from processo_aprov_estrut
		 where cd_processo_aprov = cd_processo_Aprov_w
		 and ((cd_centro_custo IS NOT NULL AND cd_centro_custo::text <> '') and (((cd_centro_custo_w IS NOT NULL AND cd_centro_custo_w::text <> '') and cd_centro_custo = cd_centro_custo_w) or (coalesce(cd_centro_custo_w::text, '') = '')));
		
		if (qt_com_cc_w = 0) then
			CALL gravar_solic_compra_consist(
			nr_solic_compra_p, '1',
			/*O material #@CD_MATERIAL#@ nao possui regra no processo de aprovacao. Verifique parametro[47].*/

			wheb_mensagem_pck.get_texto(298884,'CD_MATERIAL=' || cd_material_p),
			'C', null, nm_usuario_p);
		end if;
	end if;

	select	count(*)
	into STRICT	qt_erro_w
	from	processo_aprov_resp
	where	cd_processo_aprov = cd_processo_Aprov_w
	and	ie_solicitacao_compra = 'S';
	if (qt_erro_w = 0) then
		CALL gravar_solic_compra_consist(
				nr_solic_compra_p, '1',
				/*O material #@CD_MATERIAL#@ possui estrutura na regra de aprovacao mas nenhum cadastro de responsavel para solicitacao.*/

				wheb_mensagem_pck.get_texto(298886, 'CD_MATERIAL=' || cd_material_p),
				'C', null, nm_usuario_p);
	end if;


	if (coalesce(cd_centro_custo_w, 0) = 0) then
		select	count(*)
		into STRICT	qt_erro_w
		from	processo_aprov_resp
		where	cd_processo_aprov = cd_processo_Aprov_w
		and	ie_solicitacao_compra = 'S'
		and	ie_responsavel = 'C';
		if (qt_erro_w = 0) then
			CALL gravar_solic_compra_consist(
					nr_solic_compra_p, '1',
					/*Material #@CD_MATERIAL#@. Nao foi encontrado uma estrutura no processo de aprovacao pelo CARGO.*/

					wheb_mensagem_pck.get_texto(298892, 'CD_MATERIAL=' || cd_material_p),
					'C', null, nm_usuario_p);
		end if;
	end if;


	select	count(*)
	into STRICT	qt_erro_w
	from	processo_aprov_resp
	where	cd_processo_aprov = cd_processo_Aprov_w
	and	ie_solicitacao_compra = 'S'
	and	ie_responsavel = 'C'
	and	coalesce(cd_cargo::text, '') = '';
	if (qt_erro_w > 0) then
		CALL gravar_solic_compra_consist(
				nr_solic_compra_p, '1',
				/*O material #@CD_MATERIAL#@ possui regra de aprovacao para CARGO, mas o cargo nao esta informado.*/

				wheb_mensagem_pck.get_texto(298893, 'CD_MATERIAL=' || cd_material_p),
				'C', null, nm_usuario_p);
	end if;


	if (coalesce(cd_centro_custo_w, 0) > 0) then
		begin
		select	count(*)
		into STRICT	qt_erro_w
		from	processo_aprov_resp
		where	cd_processo_aprov = cd_processo_Aprov_w
		and	ie_responsavel = 'R';
		if (qt_erro_w > 0) then

			select	count(*)
			into STRICT	qt_erro_w
			from	cargo a,
				cargo_centro_custo b
			where	a.cd_cargo = b.cd_cargo
			and	b.cd_centro_custo = cd_centro_custo_w
			and	a.ie_situacao = 'A';

			if (qt_erro_w = 0) then
				CALL gravar_solic_compra_consist(
						nr_solic_compra_p, '1',
						/*Material #@CD_MATERIAL#@. Regra de aprovacao para CENTRO CUSTO, sem o cargo.*/

						wheb_mensagem_pck.get_texto(298894, 'CD_MATERIAL=' || cd_material_p),
						'C',
						/*Existe regra de aprovacao para CENTRO CUSTO, mas nao foi encontrado cargo com o este centro custo.
						Centro custo=#@CD_CENTRO_CUSTO#@
						Processo aprovacao=#@CD_PROCESSO_APROV#@*/
						wheb_mensagem_pck.get_texto(298898, 'CD_CENTRO_CUSTO=' || cd_centro_custo_w || ';CD_PROCESSO_APROV='||cd_processo_Aprov_w),
						nm_usuario_p);
			end if;
		end if;
		end;
	end if;

	end;
end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_regra_aprov_solic ( nr_solic_compra_p bigint, nr_item_solic_compra_p bigint, cd_material_p bigint, nm_usuario_p text) FROM PUBLIC;

