-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gravar_laudo_anatomo_ws ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, nr_seq_interno_p bigint, na_acesso_dicom_p text, cd_medico_p text, uf_medico_p text, nr_crm_medico_p text, dt_liberacao_p text, ds_titulo_p text, nr_sequencia_p INOUT bigint, nr_seq_serial_p INOUT bigint) AS $body$
DECLARE


nm_usuario_w        		varchar(15);
nr_prescricao_w        		bigint;
nr_seq_prescr_w        		integer;
nr_atendimento_w    		bigint;
cd_setor_atendimento_w      	integer;
dt_entrada_unidade_w    	timestamp;
nr_seq_propaci_w    		bigint;
nr_laudo_w        		bigint;
ds_titulo_laudo_w    		varchar(255);
cd_laudo_padrao_w    		integer     := null;
ds_laudo_w        		text;
cd_protocolo_w        		bigint    := null;
cd_projeto_w        		integer     := null;
dt_prev_entrega_w    		timestamp          := null;
dt_entrega_real_w    		timestamp          := null;
nr_controle_w        		bigint    := null;
nr_seq_motivo_parada_w    	bigint    := null;
ds_erro_w        		varchar(2000);
nr_seq_laudo_w			bigint	  := 0;
cd_medico_exec_w		varchar(10);
DT_BAIXA_w			timestamp;
DT_RESULTADO_w			timestamp;
ie_forma_geracao_w		varchar(2)	:=	'N';
cd_estabelecimento_w		integer;
nr_seq_proc_interno_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		integer;
qt_procedimento_w		bigint;
cd_setor_atend_prescr_w		bigint;
cd_medico_exec_prescr_w 	varchar(10);
nr_seq_exame_w			bigint;
ie_lado_w			varchar(1);
nr_doc_convenio_w 		varchar(20);
cd_senha_w			varchar(20);
dt_laudo_w			timestamp;
dt_liberacao_w			timestamp;
nr_acesso_dicom_w		varchar(20);
dt_aprovacao_w		timestamp;
nr_seq_interno_w		bigint;
cd_medico_resp_w		varchar(10);
nr_seq_lab_w			varchar(20);
ie_aprov_laudo_patologia_w   	varchar(1);
nr_sequencia_w     laudo_paciente.nr_sequencia%type;


BEGIN

if ((nr_seq_interno_p IS NOT NULL AND nr_seq_interno_p::text <> '') and nr_seq_interno_p <> 0) then
	nr_seq_interno_w := nr_seq_interno_p;
elsif ((nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and nr_prescricao_p <> 0) and ((nr_seq_prescr_p IS NOT NULL AND nr_seq_prescr_p::text <> '') and nr_seq_prescr_p <> 0) then

	select  max(nr_seq_interno)
	into STRICT	nr_seq_interno_w
	from    prescr_procedimento
	where	nr_prescricao = nr_prescricao_p
	and	nr_sequencia = nr_seq_prescr_p;

elsif ((na_acesso_dicom_p IS NOT NULL AND na_acesso_dicom_p::text <> '') and na_acesso_dicom_p <> 0) then

	select  max(nr_seq_interno)
	into STRICT	nr_seq_interno_w
	from    prescr_procedimento
	where	nr_acesso_dicom = na_acesso_dicom_p;
end if;


select 	coalesce(MAX(ie_aprov_laudo_pat_webservice),'N')
	into STRICT	ie_aprov_laudo_patologia_w
	from	prescr_medica a,
			parametro_integracao_pacs b
	where   a.cd_estabelecimento = b.cd_estabelecimento
	and		a.nr_prescricao = nr_prescricao_p;

if (ie_aprov_laudo_patologia_w = 'S') then
	dt_aprovacao_w := clock_timestamp();
end if;


if (cd_medico_p IS NOT NULL AND cd_medico_p::text <> '') then

	cd_medico_resp_w := cd_medico_p;

elsif (uf_medico_p IS NOT NULL AND uf_medico_p::text <> '') and (nr_crm_medico_p IS NOT NULL AND nr_crm_medico_p::text <> '') then

	select  max(cd_pessoa_fisica)
	into STRICT	cd_medico_resp_w
	from    medico
	where   nr_crm = nr_crm_medico_p
	and     uf_crm = uf_medico_p;

end if;

if (coalesce(nr_seq_interno_w::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(275334);

end if;

if (coalesce(cd_medico_resp_w::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(275335);
end if;


select	coalesce(max(a.nr_prescricao),null),
	coalesce(max(a.nr_sequencia),null),
	max(substr(obter_desc_prescr_proc(cd_procedimento, ie_origem_proced, nr_seq_proc_interno),1,255)),
	coalesce(max(a.cd_protocolo),null),
	coalesce(max(b.nr_atendimento),null),
	coalesce(max(b.dt_prescricao),null),
	max(a.dt_baixa),
	max(a.dt_resultado),
	max(b.cd_estabelecimento),
	max(a.nr_seq_proc_interno),
	max(a.cd_procedimento),
	max(a.ie_origem_proced),
	max(a.qt_procedimento),
	max(a.cd_setor_atendimento),
	max(a.cd_medico_exec),
	max(a.nr_seq_exame),
	max(a.ie_lado),
	max(a.nr_doc_convenio),
	max(a.cd_senha),
	max(a.nr_seq_lab),
	max(nr_acesso_dicom)
into STRICT	nr_prescricao_w,
	nr_seq_prescr_w,
	ds_titulo_laudo_w,
	cd_protocolo_w,
	nr_atendimento_w,
	dt_entrada_unidade_w,
	dt_baixa_w,
	dt_resultado_w,
	cd_estabelecimento_w,
	nr_seq_proc_interno_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	qt_procedimento_w,
	cd_setor_atend_prescr_w,
	cd_medico_exec_prescr_w,
	nr_seq_exame_w,
	ie_lado_w,
	nr_doc_convenio_w,
	cd_senha_w,
	nr_seq_lab_w,
	nr_acesso_dicom_w
from  	prescr_medica b,
	prescr_procedimento a
where 	a.nr_seq_interno = nr_seq_interno_w
  and	a.nr_prescricao = b.nr_prescricao;


if (coalesce(dt_baixa_w::text, '') = '') then
	dt_baixa_w	:= clock_timestamp();
	update	prescr_procedimento
	set	cd_motivo_baixa = 1,
		dt_baixa	= dt_baixa_w
	where   nr_prescricao = nr_prescricao_w
	and     nr_sequencia = nr_seq_prescr_w;
end if;

if (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then
	select  coalesce(max(nr_atendimento), nr_Atendimento_w),
		coalesce(max(cd_setor_atendimento), null),
		coalesce(max(dt_entrada_unidade), dt_entrada_unidade_w),
		coalesce(max(nr_sequencia), null),
		coalesce(max(nm_usuario), 'WebService'),
		coalesce(max(cd_medico_executor), null)
	into STRICT    nr_atendimento_w,
		cd_setor_atendimento_w,
		dt_entrada_unidade_w,
		nr_seq_propaci_w,
		nm_usuario_w,
		cd_medico_exec_w
	from    procedimento_paciente
	where   nr_prescricao = nr_prescricao_w
	and     nr_sequencia_prescricao = nr_seq_prescr_w;

	if (coalesce(cd_setor_atendimento_w::text, '') = '') then
		--gerar_proced_paciente_pendente (nr_prescricao_w, nr_seq_prescr_w, 'TEB', null, null, null, null, nr_seq_propaci_w );
		CALL gerar_proc_pac_item_prescr_up(nr_prescricao_w, nr_seq_prescr_w, null, null,nr_seq_proc_interno_w,
			cd_procedimento_w, ie_origem_proced_w,
			qt_procedimento_w, cd_setor_atend_prescr_w,
			9, null,
			'WebService', cd_medico_exec_prescr_w, nr_seq_exame_w, coalesce(ie_lado_w,'A'), null, null, null, null, null, null,
			nr_doc_convenio_w, cd_senha_w);


		select  coalesce(max(nr_atendimento), nr_Atendimento_w),
			coalesce(max(cd_setor_atendimento), null),
			coalesce(max(dt_entrada_unidade), dt_entrada_unidade_w),
			coalesce(max(nr_sequencia), null),
			coalesce(max(nm_usuario), 'WebService'),
			coalesce(max(cd_medico_executor), null)
		into STRICT    nr_atendimento_w,
			cd_setor_atendimento_w,
			dt_entrada_unidade_w,
			nr_seq_propaci_w,
			nm_usuario_w,
			cd_medico_exec_w
		from    procedimento_paciente
		where   nr_prescricao = nr_prescricao_w
		and     nr_sequencia_prescricao = nr_seq_prescr_w;

	end if;
end if;


select  coalesce(max(nr_laudo),0) + 1
into STRICT    nr_laudo_w
from    laudo_paciente
where   nr_atendimento = nr_atendimento_w;

if (nr_laudo_w > 0) then


	dt_liberacao_w := to_date(dt_liberacao_p ,'DD/MM/YYYY HH24:MI:SS');

	if (coalesce(dt_resultado_w, clock_timestamp() + interval '1 days') > clock_timestamp())then
		dt_resultado_w	:= clock_timestamp();
	end if;

	if (ds_titulo_p IS NOT NULL AND ds_titulo_p::text <> '') then
		ds_titulo_laudo_w :=  ds_titulo_p;
	end if;

	select 	nextval('laudo_paciente_seq')
	into STRICT	nr_sequencia_p
	;

	dt_laudo_w :=  dt_resultado_w;

	select  MAX(nr_sequencia)
	into STRICT	nr_sequencia_w
	from 	laudo_paciente
	where   nr_prescricao = nr_prescricao_w
	and		nr_seq_prescricao = nr_seq_prescr_w;

	if (coalesce(nr_sequencia_w,0) <> 0) then
		begin
			CALL cancelar_laudo_paciente(nr_sequencia_w, 'C', expressao_pck.obter_desc_expressao(292128), '');


     update laudo_paciente
      set
		nm_usuario_aprovacao  = NULL,
		dt_liberacao  = NULL,
		nm_usuario_seg_aprov  = NULL
		where nr_sequencia = nr_sequencia_w;
		end;
	end if;

	insert into laudo_paciente(
		nr_sequencia,
		nr_atendimento,
		dt_entrada_unidade,
		nr_laudo,
		nm_usuario,
		dt_atualizacao,
		cd_medico_resp,
		ds_titulo_laudo,
		dt_laudo,
		cd_laudo_padrao,
		ie_normal,
		dt_exame,
		nr_prescricao,
		ds_laudo,
		dt_aprovacao,
		nm_usuario_aprovacao,
		cd_protocolo,
		cd_projeto,
		nr_seq_proc,
		nr_seq_prescricao,
		dt_liberacao,
		dt_prev_entrega,
		dt_real_entrega,
		qt_imagem,
		ie_formato,
		nr_controle,
		dt_seg_aprovacao,
		nm_usuario_seg_aprov,
		nr_seq_motivo_parada,
		cd_setor_atendimento,
		nr_exame,
		cd_medico_aux,
		dt_envelopado,
		dt_impressao,
		dt_fim_digitacao,
		nm_usuario_digitacao,
		dt_inicio_digitacao,
		dt_integracao,
		nm_medico_solicitante,
		ie_midia_entregue,
		cd_tecnico_resp,
		cd_setor_usuario,
		nm_usuario_cancel,
		dt_cancelamento,
		nm_usuario_liberacao)
	values (
		nr_sequencia_p,
		nr_atendimento_w,
		dt_entrada_unidade_w,
		nr_laudo_w,
		nm_usuario_w,
		clock_timestamp(),
		cd_medico_resp_w,
		ds_titulo_laudo_w,
		dt_laudo_w,
		cd_laudo_padrao_w,
		'S',
		dt_baixa_w,
		nr_prescricao_w,
		ds_laudo_w,
		dt_aprovacao_w,
		nm_usuario_w,
		cd_protocolo_w,
		cd_projeto_w,
		nr_seq_propaci_w,
		nr_seq_prescr_w,
		dt_liberacao_w,
		dt_prev_entrega_w,
		dt_entrega_real_w,
		0,
		4,
		nr_controle_w,
		null,
		nm_usuario_w,
		nr_seq_motivo_parada_w,
		cd_setor_atendimento_w,
		nr_seq_lab_w,
		null,
		null,
		null,
		null,
		null,
		null,
		clock_timestamp(),
		null,
		null,
		null,
		null,
		null,
		null,
		null);

	CALL Vincular_Procedimento_Laudo(nr_sequencia_p,'N',nm_usuario_w);
	CALL Atualizar_Propaci_Medico_Laudo(nr_sequencia_p, 'EX', nm_usuario_w);
	CALL Atualizar_Propaci_Medico_Laudo(nr_sequencia_p, 'EXC', nm_usuario_w);
	if (coalesce(cd_medico_exec_w::text, '') = '') then

		update	procedimento_paciente
		set 	cd_medico = cd_medico_p
		where	nr_sequencia = nr_seq_propaci_w;

	end if;

	select  nextval('laudo_paciente_pdf_serial_seq')
	into STRICT	nr_seq_serial_p
	;

	insert into laudo_paciente_pdf_serial(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_acesso_dicom,
		nr_seq_laudo,
		ds_pdf_serial)
	values (	nr_seq_serial_p,
		clock_timestamp(),
		nm_usuario_w,
		clock_timestamp(),
		nm_usuario_w,
		nr_acesso_dicom_w,
		nr_sequencia_p,
		' ');
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_laudo_anatomo_ws ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, nr_seq_interno_p bigint, na_acesso_dicom_p text, cd_medico_p text, uf_medico_p text, nr_crm_medico_p text, dt_liberacao_p text, ds_titulo_p text, nr_sequencia_p INOUT bigint, nr_seq_serial_p INOUT bigint) FROM PUBLIC;

