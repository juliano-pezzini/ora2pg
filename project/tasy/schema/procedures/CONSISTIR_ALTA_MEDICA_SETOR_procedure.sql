-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_alta_medica_setor (cd_estabelecimento_p bigint, nr_atendimento_p bigint, nm_usuario_p text, ds_erro_p INOUT text, ds_erro_2_p INOUT text, nr_seq_item_p INOUT bigint) AS $body$
DECLARE


qt_regra_w		bigint;
qt_existe_w		bigint;
ie_diagnostico_w	varchar(1);
ie_prescricao_alta_w	varchar(1);
ie_evolucao_w		varchar(1);
ie_sumario_alta_w	varchar(1);
ie_orientacao_alta_w	varchar(1);
ie_tipo_atendimento_w	smallint;
cd_setor_atendimento_w	integer;
nr_seq_tipo_avaliacao_w	bigint;
ie_avaliacao_w		varchar(10);
ie_anamnese_w		varchar(10);
quebra_w		varchar(10)	:= chr(13)||chr(10);
ds_erro_w		varchar(2000);
ie_tipo_convenio_w	bigint;
ie_laudo_sus_w		varchar(1);

C01 CURSOR FOR
	SELECT	coalesce(max(ie_diagnostico),'N'),
		coalesce(max(ie_prescricao_alta),'N'),
		coalesce(max(ie_evolucao),'N'),
		coalesce(max(ie_sumario_alta),'N'),
		coalesce(max(ie_orientacao_alta),'N'),
		coalesce(max(IE_AVALIACAO),'N'),
		coalesce(max(ie_anamnese),'N'),
		max(NR_SEQ_TIPO_AVALIACAO),
		coalesce(max(ie_laudo_sus),'N')
	from	consiste_alta_medica_setor
	where	cd_estabelecimento	= cd_estabelecimento_p
	and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w)	= ie_tipo_atendimento_w
	and	coalesce(cd_setor_atendimento,cd_setor_atendimento_w) = cd_setor_atendimento_w
	and	coalesce(ie_tipo_convenio, coalesce(ie_tipo_convenio_w,0)) = coalesce(ie_tipo_convenio_w,0)
	order by coalesce(ie_tipo_atendimento,0),
		coalesce(cd_setor_atendimento,0);


BEGIN
nr_seq_item_p	:= 0;
select	count(*)
into STRICT	qt_regra_w
from	consiste_alta_medica_setor
where	cd_estabelecimento	= cd_estabelecimento_p;

if (qt_regra_w > 0) then	/*Tabela restringe 1 por estabelecimento*/
	
	select	ie_tipo_atendimento,
		obter_setor_atendimento(nr_atendimento),
		Obter_Tipo_Convenio(Obter_Convenio_Atendimento(nr_atendimento))
	into STRICT	ie_tipo_atendimento_w,
		cd_setor_atendimento_w,
		ie_tipo_convenio_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_p;
	
	open C01;
	loop
	fetch C01 into	
		ie_diagnostico_w,
		ie_prescricao_alta_w,
		ie_evolucao_w,
		ie_sumario_alta_w,
		ie_orientacao_alta_w,
		ie_avaliacao_w,
		ie_anamnese_w,
		nr_seq_tipo_avaliacao_w,
		ie_laudo_sus_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;
	
	if (ie_diagnostico_w = 'S') then
		select	count(*)
		into STRICT	qt_existe_w
		from	diagnostico_doenca
		where	nr_atendimento		= nr_atendimento_p
		and	ie_classificacao_doenca	= 'P';

		if (qt_existe_w = 0) then
			ds_erro_w	:= wheb_mensagem_pck.get_texto(277756);
			nr_seq_item_p	:= 1;
		end if;
	elsif (ie_diagnostico_w = 'E') then
	
		select	count(*)
		into STRICT	qt_existe_w
		from	diagnostico_doenca
		where	nr_atendimento		= nr_atendimento_p
		and	IE_TIPO_DIAGNOSTICO	IN (2, 3)
		and	coalesce(dt_inativacao::text, '') = ''
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

		if (qt_existe_w = 0) then
			ds_erro_w	:= wheb_mensagem_pck.get_texto(277770);
			nr_seq_item_p	:= 1;
		end if;	
	
	elsif (ie_diagnostico_w = 'D') then
		select	count(*)
		into STRICT	qt_existe_w
		from	diagnostico_doenca b,
			diagnostico_medico a
		where	a.nr_atendimento		= nr_atendimento_p
		and	a.nr_atendimento		= b.nr_atendimento
		and	a.dt_diagnostico		= b.dt_diagnostico
		and	a.ie_tipo_diagnostico		IN (2, 3)
		and	b.ie_classificacao_doenca	= 'P';
		
		if (qt_existe_w = 0) then
			ds_erro_w	:= wheb_mensagem_pck.get_texto(277771);
			nr_seq_item_p	:= 1;
		end if;
	elsif (ie_diagnostico_w = 'M') then
		select	count(*)
		into STRICT	qt_existe_w
		from	diagnostico_doenca b,
			diagnostico_medico a
		where	a.nr_atendimento		= nr_atendimento_p
		and	a.nr_atendimento		= b.nr_atendimento
		and	a.dt_diagnostico		= b.dt_diagnostico
		and	a.ie_tipo_diagnostico		IN (2, 3)
		and	b.ie_classificacao_doenca	= 'P'
		and	a.dt_diagnostico		> clock_timestamp() - interval '1 days';
		
		if (qt_existe_w = 0) then
			ds_erro_w	:= wheb_mensagem_pck.get_texto(277772);
			nr_seq_item_p	:= 1;
		end if;
	elsif (ie_diagnostico_w	= 'I') then
		select	count(*)
		into STRICT	qt_existe_w
		from	diagnostico_doenca
		where	nr_atendimento		= nr_atendimento_p
		and	coalesce(dt_inativacao::text, '') = ''
		and	(NR_SEQ_DIAG_INTERNO IS NOT NULL AND NR_SEQ_DIAG_INTERNO::text <> '');
		
		if (qt_existe_w = 0) then
			ds_erro_w	:= wheb_mensagem_pck.get_texto(277773);
			nr_seq_item_p	:= 1;
		end if;
	elsif (ie_diagnostico_w	= 'T') then
	
		select	count(*)
		into STRICT	qt_existe_w
		from	diagnostico_doenca
		where	nr_atendimento		= nr_atendimento_p
		and	coalesce(dt_inativacao::text, '') = '';
		if (qt_existe_w = 0) then
			ds_erro_w	:= wheb_mensagem_pck.get_texto(277776);
			nr_seq_item_p	:= 1;
		end if;
		
		
	end if;

	if (ie_prescricao_alta_w = 'S') then
		select	count(*)
		into STRICT	qt_existe_w
		from	prescr_medica
		where	nr_atendimento		= nr_atendimento_p
		and	ie_prescricao_alta	= 'S'
		and	(dt_liberacao_medico IS NOT NULL AND dt_liberacao_medico::text <> '');

		if (qt_existe_w = 0) then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(277777);
		end if;
	end if;

	if (ie_evolucao_w = 'S') then
		select	count(*)
		into STRICT	qt_existe_w
		from	evolucao_paciente_lib_v
		where	nr_atendimento	= nr_atendimento_p;
		
		if (qt_existe_w = 0) then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(277778);
		end if;
	end if;

	if (ie_sumario_alta_w = 'S') then
		select	count(*)
		into STRICT	qt_existe_w
		from	evolucao_paciente_lib_v
		where	nr_atendimento		= nr_atendimento_p
		and	ie_evolucao_clinica	= 'S';
		
		if (qt_existe_w = 0) then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(277779);
		end if;
	end if;
	
	
	
	if (ie_orientacao_alta_w = 'S') then
		select	count(*)
		into STRICT	qt_existe_w
		from	atendimento_alta
		where	nr_atendimento		= nr_atendimento_p
		and	ie_tipo_orientacao	<> 'P';
		
		if (qt_existe_w = 0) then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(277780);
		end if;
	end if;
	
	if (ie_avaliacao_w		= 'S') then
		select	count(*)
		into STRICT	qt_existe_w
		from	med_avaliacao_paciente
		where	nr_atendimento	= nr_atendimento_p
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	coalesce(dt_inativacao::text, '') = ''
		and	((coalesce(nr_seq_tipo_avaliacao_w::text, '') = '')or (nr_seq_tipo_avaliacao	= nr_seq_tipo_avaliacao_w));
		if (qt_existe_w	= 0) then
			ds_erro_w := ds_erro_w || wheb_mensagem_pck.get_texto(277783, ';QUEBRA_P=' || quebra_w);
			if (nr_seq_tipo_avaliacao_w IS NOT NULL AND nr_seq_tipo_avaliacao_w::text <> '') then
				ds_erro_w := ds_erro_w || wheb_mensagem_pck.get_texto(277784, ';MED_TIPO_AVALIACAO_P=' || substr(obter_descricao_padrao('MED_TIPO_AVALIACAO','DS_TIPO', NR_SEQ_TIPO_AVALIACAO_w),1,100) ||
												';QUEBRA_P=' || quebra_w);
			end if;
		
		end if;
			
		nr_seq_item_p	:= 7;
	end if;
	
	if (ie_anamnese_w		= 'S') then
		select	count(*)
		into STRICT	qt_existe_w
		from	anamnese_paciente
		where	nr_atendimento	= nr_atendimento_p
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	coalesce(dt_inativacao::text, '') = '';
		
		if (qt_existe_w = 0) then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(277813);
		end if;
	end if;
	
	if (ie_laudo_sus_w		= 'S') then
		select	count(*)
		into STRICT	qt_existe_w
		from	sus_laudo_paciente
		where	nr_atendimento	= nr_atendimento_p
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	coalesce(dt_cancelamento::text, '') = '';
		
		if (qt_existe_w = 0) then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(277818);
		end if;
	end if;
	

end if;

ds_erro_p	:= substr(ds_erro_w,1,254);
ds_erro_2_p	:= substr(ds_erro_w,255,255);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_alta_medica_setor (cd_estabelecimento_p bigint, nr_atendimento_p bigint, nm_usuario_p text, ds_erro_p INOUT text, ds_erro_2_p INOUT text, nr_seq_item_p INOUT bigint) FROM PUBLIC;

