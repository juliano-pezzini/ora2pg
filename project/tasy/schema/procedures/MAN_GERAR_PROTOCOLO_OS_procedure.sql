-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_gerar_protocolo_os ( nr_sequencia_p bigint, cd_pessoa_solicitante_p bigint, nr_seq_localizacao_p bigint, nr_seq_equipamento_p bigint, nr_seq_tipo_ordem_p bigint, nr_seq_cs_p bigint, nm_usuario_p text, nr_seq_ordem_serv_p INOUT bigint, ie_prioridade_p text default null) AS $body$
DECLARE



cd_pessoa_solicitante_w			varchar(10);
nr_seq_localizacao_w			bigint;
nr_seq_equipamento_w			bigint;
ds_dano_breve_w				varchar(80);
ds_dano_w				varchar(4000);
ie_prioridade_w				varchar(1);
ie_tipo_ordem_w				integer;
nr_seq_ordem_serv_w			bigint;
nr_seq_grupo_planej_w			bigint;
nr_seq_grupo_trabalho_w			bigint;
dt_fim_desejado_w			timestamp;
ie_classificacao_w			varchar(1);
nr_seq_estagio_w			bigint;
nr_seq_classif_w			bigint;
nr_seq_ativ_exec_w			bigint;
qt_hora_prev_w				integer;
qt_min_prev_w				bigint;
nr_seq_tipo_ordem_w			bigint;
ie_consiste_regra_loc_lib_w		varchar(15) := 'N';
ie_libera_localizacao_w			varchar(15) := 'S';
nr_seq_cs_w				bigint;
ie_parado_w				varchar(1);
ie_forma_receb_w			varchar(1);
nr_seq_origem_dano_w			bigint;
ie_grau_satisfacao_w			varchar(3);
nm_usuario_exec_w			varchar(15);
nm_usuario_solic_w			varchar(15);
ie_gerar_exec_prev_solic_w		varchar(1) := 'N';
ie_fim_desejado_prioridade_w		varchar(1) := 'N';
qt_existe_w				bigint;
nr_seq_causa_dano_w			bigint;
nr_seq_tipo_solucao_w			bigint;
nr_seq_complex_w			bigint;
ds_relat_tecnico_w			text;
ie_status_ordem_w			varchar(1);


c01 CURSOR FOR
	SELECT	nr_seq_ativ_exec,
		qt_hora_prev,
		qt_min_prev
	from	man_protocolo_os_ativ_prev
	where	nr_seq_protocolo = nr_sequencia_p;
	
C02 CURSOR FOR
	SELECT	distinct
		nm_usuario_exec	
	from	man_protocolo_os_exec_prev
	where	nr_seq_protocolo = nr_sequencia_p;
	
C03 CURSOR FOR
	SELECT	ds_relat_tecnico
	from	man_protocolo_os_hist
	where	nr_seq_protocolo = nr_sequencia_p
	order by	dt_atualizacao_nrec;


BEGIN

ie_fim_desejado_prioridade_w := obter_param_usuario(299, 76, obter_perfil_Ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_fim_desejado_prioridade_w);
ie_gerar_exec_prev_solic_w := obter_param_usuario(299, 134, obter_perfil_Ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_gerar_exec_prev_solic_w);
ie_consiste_regra_loc_lib_w := obter_param_usuario(299, 401, obter_perfil_Ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_consiste_regra_loc_lib_w);

select	coalesce(cd_pessoa_solicitante_p,coalesce(cd_pessoa_solicitante,substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,10))),
	coalesce(nr_seq_localizacao_p, nr_seq_localizacao),
	coalesce(nr_seq_equipamento_p, nr_seq_equipamento),
	ds_dano_breve,
	ds_dano,
	coalesce(ie_prioridade_p,ie_prioridade),
	ie_tipo_ordem,
	ie_classificacao,
	nr_seq_estagio,
	nr_seq_grupo_planej,
	nr_seq_grupo_trab,
	nr_seq_classif,
	coalesce(nr_seq_tipo_ordem_p, nr_seq_tipo_ordem),
	coalesce(nr_seq_cs_p, nr_seq_cs),
	coalesce(ie_parado,'N'),
	ie_forma_receb,
	nr_seq_origem_dano,
	ie_grau_satisfacao,
	nr_seq_causa_dano,
	nr_seq_tipo_solucao,
	nr_seq_complex
into STRICT	cd_pessoa_solicitante_w,
	nr_seq_localizacao_w,
	nr_seq_equipamento_w,
	ds_dano_breve_w,
	ds_dano_w,
	ie_prioridade_w,
	ie_tipo_ordem_w,
	ie_classificacao_w,
	nr_seq_estagio_w,
	nr_seq_grupo_planej_w,
	nr_seq_grupo_trabalho_w,
	nr_seq_classif_w,
	nr_seq_tipo_ordem_w,
	nr_seq_cs_w,
	ie_parado_w,
	ie_forma_receb_w,
	nr_seq_origem_dano_w,
	ie_grau_satisfacao_w,
	nr_seq_causa_dano_w,
	nr_seq_tipo_solucao_w,
	nr_seq_complex_w
from	man_protocolo_os
where	nr_sequencia = nr_sequencia_p;

if (coalesce(nr_seq_equipamento_w::text, '') = '') then
	CALL wheb_mensagem_pck.EXIBIR_MENSAGEM_ABORT(181130);
end if;

if (coalesce(cd_pessoa_solicitante_w::text, '') = '') then
	CALL wheb_mensagem_pck.EXIBIR_MENSAGEM_ABORT(181131);
end if;	

if (coalesce(nr_seq_localizacao_w::text, '') = '') then
	CALL wheb_mensagem_pck.EXIBIR_MENSAGEM_ABORT(181127);
end if;

if (coalesce(nr_seq_grupo_planej_w::text, '') = '') then
	select	nr_seq_planej
	into STRICT	nr_seq_grupo_planej_w
	from	man_equipamento
	where	nr_sequencia	= nr_seq_equipamento_w;
end if;

if (coalesce(nr_seq_grupo_trabalho_w::text, '') = '') then
	select	nr_seq_trab
	into STRICT	nr_seq_grupo_trabalho_w
	from	man_equipamento
	where	nr_sequencia	= nr_seq_equipamento_w;
end if;

if (ie_consiste_regra_loc_lib_w = 'S') then
	begin
	select 	coalesce(substr(man_obter_loc_lib_usuario(nr_seq_localizacao_w, nm_usuario_p),1,1),'S')
	into STRICT	ie_libera_localizacao_w
	;
	
	
	if (ie_libera_localizacao_w = 'N') then
		CALL wheb_mensagem_pck.EXIBIR_MENSAGEM_ABORT(181129);
	end if;
		
	end;
end if;

select	nextval('man_ordem_servico_seq')
into STRICT	nr_seq_ordem_serv_w
;

if (nr_seq_estagio_w > 0) then
	select	ie_situacao_os
	into STRICT	ie_status_ordem_w
	from	man_estagio_processo
	where	nr_sequencia = nr_seq_estagio_w;
end if;


if (ie_prioridade_w IS NOT NULL AND ie_prioridade_w::text <> '') then
	if (ie_fim_desejado_prioridade_w = 'N') then
		begin
		if (ie_prioridade_w = 'E') then
			dt_fim_desejado_w := trunc(clock_timestamp(),'dd') + 18/24;
		elsif (ie_prioridade_w = 'A') then
			dt_fim_desejado_w := clock_timestamp() + interval '7 days';
		elsif (ie_prioridade_w = 'M') then
			dt_fim_desejado_w := clock_timestamp() + interval '14 days';
		elsif (ie_prioridade_w = 'B') then
			dt_fim_desejado_w := clock_timestamp() + interval '30 days';
		elsif (ie_prioridade_w = 'S') and (coalesce(dt_fim_desejado_w::text, '') = '') then
			select (sum(coalesce(qt_min_prev,0)) + sum(coalesce(qt_hora_prev,0))*60)
			into STRICT	qt_min_prev_w
			from	man_protocolo_os_ativ_prev
			where	nr_seq_protocolo = nr_sequencia_p;

			if (qt_min_prev_w > 0) then
				dt_fim_desejado_w := clock_timestamp() + (dividir(qt_min_prev_w,1440));
			end if;
		end if;
		end;
	else
		begin
		select	man_obter_dt_prioridade(nr_seq_equipamento_w, ie_prioridade_w, '', clock_timestamp(), nr_seq_grupo_trabalho_w, nr_seq_grupo_planej_w)
		into STRICT	dt_fim_desejado_w
		;
		end;
	end if;
end if;

insert into man_ordem_servico(
		nr_sequencia,
		nr_seq_localizacao,
		nr_seq_equipamento,
		cd_pessoa_solicitante,
		dt_ordem_servico,
		ie_prioridade,
		ie_parado,
		ds_dano_breve,
		dt_atualizacao,
		nm_usuario,
		ds_dano,
		ie_tipo_ordem,
		nr_grupo_planej,
		nr_grupo_trabalho,
		ie_status_ordem,
		dt_inicio_desejado,
		dt_conclusao_desejada,
		ie_origem_os,
		ie_classificacao,
		nr_seq_estagio,
		nr_seq_classif,
		nr_seq_tipo_ordem,
		nr_seq_cs,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ie_forma_receb,
		nr_seq_origem_dano,
		ie_grau_satisfacao,
		nr_seq_causa_dano,
		nr_seq_tipo_solucao,
		nr_seq_complex)
	values (	nr_seq_ordem_serv_w,
		nr_seq_localizacao_w,
		nr_seq_equipamento_w,
		cd_pessoa_solicitante_w,
		clock_timestamp(),
		coalesce(ie_prioridade_w,'M'),
		ie_parado_w,
		ds_dano_breve_w,
		clock_timestamp(),
		nm_usuario_p,
		ds_dano_w,
		coalesce(ie_tipo_ordem_w,'1'),
		nr_seq_grupo_planej_w,
		nr_seq_grupo_trabalho_w,
		coalesce(ie_status_ordem_w, 1),
		clock_timestamp(),
		dt_fim_desejado_w,
		'4',
		ie_classificacao_w,
		nr_seq_estagio_w,
		nr_seq_classif_w,
		nr_seq_tipo_ordem_w,
		nr_seq_cs_w,
		clock_timestamp(),
		nm_usuario_p,
		ie_forma_receb_w,
		nr_seq_origem_dano_w,
		ie_grau_satisfacao_w,
		nr_seq_causa_dano_w,
		nr_seq_tipo_solucao_w,
		nr_seq_complex_w);

open c01;
loop
fetch c01 into
	nr_seq_ativ_exec_w,
	qt_hora_prev_w,
	qt_min_prev_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	qt_min_prev_w := (coalesce(qt_min_prev_w,0) + coalesce(qt_hora_prev_w,0)*60);
	
	if (coalesce(qt_min_prev_w,0) = 0) then
		select	coalesce(max(qt_min_ativ),0)
		into STRICT	qt_min_prev_w
		from	des_ativ_exec
		where	nr_sequencia = nr_seq_ativ_exec_w;
	end if;
	
	insert into man_ordem_ativ_prev(
		nr_sequencia,
		nr_seq_ordem_serv,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_atualizacao,
		nm_usuario,
		qt_min_prev,
		nr_seq_ativ_exec)
	values (	nextval('man_ordem_ativ_prev_seq'),
		nr_seq_ordem_serv_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		qt_min_prev_w,
		nr_seq_ativ_exec_w);
	end;
end loop;
close c01;

open C02;
loop
fetch C02 into	
	nm_usuario_exec_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	insert into man_ordem_servico_exec(
		nr_sequencia,
		nr_seq_ordem,
		dt_atualizacao,
		nm_usuario,
		nm_usuario_exec,
		qt_min_prev,
		dt_recebimento,
		nr_seq_funcao,
		nr_seq_tipo_exec)
	values (	nextval('man_ordem_servico_exec_seq'),
		nr_seq_ordem_serv_w,
		clock_timestamp(),
		nm_usuario_p,
		nm_usuario_exec_w,
		null,
		clock_timestamp(),
		null,
		null);
end loop;
close C02;

open C03;
loop
fetch C03 into	
	ds_relat_tecnico_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	insert into man_ordem_serv_tecnico(		
			nr_sequencia,
			nr_seq_ordem_serv, 
			dt_atualizacao, 
			nm_usuario, 
			ds_relat_tecnico,
			dt_historico, 
			ie_origem, 			 
			ie_relevante_teste,
			nr_seq_tipo, 
			dt_liberacao, 
			nm_usuario_lib)
		values (	nextval('man_ordem_serv_tecnico_seq'),
			nr_seq_ordem_serv_w,
			clock_timestamp(),
			nm_usuario_p,
			ds_relat_tecnico_w,
			clock_timestamp(),
			'I',
			'N',
			null,
			null,
			null);
end loop;
close C03;

if (coalesce(ie_gerar_exec_prev_solic_w,'N') <> 'N') then
	begin
	select  max(obter_usuario_pessoa(cd_pessoa_solicitante_w))
	into STRICT	nm_usuario_solic_w
	
	where not exists (	SELECT	1
			from	man_ordem_servico_exec x
			where	x.nm_usuario_exec = obter_usuario_pessoa(cd_pessoa_solicitante_w)
			and	nr_seq_ordem = nr_seq_ordem_serv_w);
	
	select	count(*)
	into STRICT	qt_existe_w
	from	man_grupo_trab_usuario b,
		man_equipamento a
	where	a.nr_seq_trab = b.nr_seq_grupo_trab
	and	b.nm_usuario_param = obter_usuario_pessoa(cd_pessoa_solicitante_w)
	and	a.nr_sequencia = nr_seq_equipamento_w;	
	
	if	((ie_gerar_exec_prev_solic_w = 'S') or (ie_gerar_exec_prev_solic_w = 'G' and qt_existe_w > 0)) and (coalesce(nm_usuario_solic_w,'X') <> 'X') then		
		insert into man_ordem_servico_exec(
			nr_sequencia,
			nr_seq_ordem,
			dt_atualizacao,
			nm_usuario,
			nm_usuario_exec,
			qt_min_prev,
			dt_recebimento,
			nr_seq_funcao,
			nr_seq_tipo_exec)
		values (	nextval('man_ordem_servico_exec_seq'),
			nr_seq_ordem_serv_w,
			clock_timestamp(),
			nm_usuario_p,
			nm_usuario_solic_w,
			null,
			clock_timestamp(),
			null,
			null);
	end if;
	end;
end if;

nr_seq_ordem_serv_p	:= nr_seq_ordem_serv_w;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_gerar_protocolo_os ( nr_sequencia_p bigint, cd_pessoa_solicitante_p bigint, nr_seq_localizacao_p bigint, nr_seq_equipamento_p bigint, nr_seq_tipo_ordem_p bigint, nr_seq_cs_p bigint, nm_usuario_p text, nr_seq_ordem_serv_p INOUT bigint, ie_prioridade_p text default null) FROM PUBLIC;

