-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_benef ( nr_seq_empresa_p bigint, nr_seq_plano_p bigint, nr_seq_intercambio_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


cd_cgc_cpf_w			varchar(14);
nr_sequencia_w			bigint;
nr_seq_empresa_w		bigint;
cd_unimed_w			smallint;
cd_familia_w			integer;
nm_benef_abreviado_w		varchar(25);
cd_plano_intercambio_w		varchar(3);
dt_nascimento_w			timestamp;
ie_sexo_w			varchar(1);
ie_estado_civil_w		varchar(1);
dt_inclusao_w			timestamp;
ie_repasse_w			varchar(1);
cd_dependencia_w		smallint;
cd_local_atendimento_w		smallint;
dt_repasse_w			timestamp;
dt_inclusao_plano_dest_w	timestamp;
nr_rg_w				varchar(15);
sg_uf_rg_w			ptu_intercambio_benef.sg_uf_rg%type;
dt_exclusao_w			timestamp;
ie_recem_nascido_w		varchar(1);
nr_matricula_w			numeric(20);
dt_validade_carteira_w		timestamp;
cd_lotacao_w			varchar(8);
ds_lotacao_w			varchar(30);
dt_fim_repasse_w		timestamp;
nr_vigencia_origem_w		smallint;
cd_plano_origem_w		varchar(6);
cd_titular_plano_w		bigint;
nm_beneficiario_w		varchar(120);
cd_usuario_plano_w		varchar(13);
nr_seq_segurado_w		bigint;
cd_pessoa_fisica_w		varchar(14);
nr_seq_benef_w			bigint;
nr_seq_segurado_ww		bigint;
ds_endereco_w			varchar(40);
cd_cep_w			varchar(15);
nm_municipio_w			varchar(40);
sg_uf_w				compl_pessoa_fisica.sg_estado%type;
ds_bairro_w			varchar(40);
nr_ddd_w			varchar(3);
nr_fone_w			integer;
nr_ramal_w			integer;
dt_rescisao_w			timestamp;
dt_cancelamento_w		timestamp;
dt_limite_utilizacao_w		timestamp;
nr_seq_motivo_cancelamento_w	bigint;
cd_outorgante_w			bigint;
qt_benef_w			bigint;
nr_seq_beneficiario_w		bigint;
qt_carteiras_w			bigint;

C01 CURSOR FOR
	SELECT	cd_cgc_cpf,
		nr_sequencia,
		nr_seq_empresa,
		cd_unimed,
		cd_familia,
		nm_benef_abreviado,
		cd_plano_intercambio,
		dt_nascimento,
		ie_sexo,
		CASE WHEN ie_estado_civil='A' THEN 6 WHEN ie_estado_civil='D' THEN 3 WHEN ie_estado_civil='M' THEN 2 WHEN ie_estado_civil='S' THEN 1 WHEN ie_estado_civil='W' THEN 5 WHEN ie_estado_civil='U' THEN 9 END ,
		dt_inclusao,
		ie_repasse,
		cd_dependencia,
		cd_local_atendimento,
		dt_repasse,
		dt_inclusao_plano_dest,
		nr_rg,
		sg_uf_rg,
		dt_exclusao,
		ie_recem_nascido,
		nr_matricula,
		dt_validade_carteira,
		cd_lotacao,
		ds_lotacao,
		dt_fim_repasse,
		nr_vigencia_origem,
		cd_plano_origem,
		cd_titular_plano,
		nm_beneficiario,
		cd_usuario_plano,
		nr_seq_segurado
	from	ptu_intercambio_benef
	where	nr_seq_empresa	= nr_seq_empresa_p;


BEGIN

open C01;
loop
fetch C01 into
	cd_cgc_cpf_w,
	nr_sequencia_w,
	nr_seq_empresa_w,
	cd_unimed_w,
	cd_familia_w,
	nm_benef_abreviado_w,
	cd_plano_intercambio_w,
	dt_nascimento_w,
	ie_sexo_w,
	ie_estado_civil_w,
	dt_inclusao_w,
	ie_repasse_w,
	cd_dependencia_w,
	cd_local_atendimento_w,
	dt_repasse_w,
	dt_inclusao_plano_dest_w,
	nr_rg_w,
	sg_uf_rg_w,
	dt_exclusao_w,
	ie_recem_nascido_w,
	nr_matricula_w,
	dt_validade_carteira_w,
	cd_lotacao_w,
	ds_lotacao_w,
	dt_fim_repasse_w,
	nr_vigencia_origem_w,
	cd_plano_origem_w,
	cd_titular_plano_w,
	nm_beneficiario_w,
	cd_usuario_plano_w,
	nr_seq_beneficiario_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	begin
	select	ds_endereco,
		cd_cep,
		nm_municipio,
		sg_uf,
		ds_bairro,
		nr_ddd,
		nr_fone,
		nr_ramal
	into STRICT	ds_endereco_w,
		cd_cep_w,
		nm_municipio_w,
		sg_uf_w,
		ds_bairro_w,
		nr_ddd_w,
		nr_fone_w,
		nr_ramal_w
	from	ptu_beneficiario_compl
	where	nr_seq_beneficiario	= nr_sequencia_w;
	exception
	when others then
		nm_municipio_w  := '';
	end;

	select	coalesce(max(cd_pessoa_fisica),'X')
	into STRICT	cd_pessoa_fisica_w
	from	pessoa_fisica
	where	nr_cpf	=	cd_cgc_cpf_w;

	if (cd_pessoa_fisica_w	= 'X') then
		select	nextval('pessoa_fisica_seq')
		into STRICT	cd_pessoa_fisica_w
		;

		insert into pessoa_fisica(cd_pessoa_fisica, dt_atualizacao, nm_usuario,dt_atualizacao_nrec,
			nm_usuario_nrec, ie_tipo_pessoa, nr_cpf, nm_pessoa_fisica,
			ie_sexo,cd_familia, nm_abreviado, dt_nascimento,
			ie_estado_civil, nr_identidade, sg_emissora_ci,nr_matricula_nasc)
 		values (cd_pessoa_fisica_w, clock_timestamp(), nm_usuario_p,clock_timestamp(),
			nm_usuario_p, 1,cd_cgc_cpf_w, nm_beneficiario_w,
			ie_sexo_w,cd_familia_w, nm_benef_abreviado_w, dt_nascimento_w,
			ie_estado_civil_w, nr_rg_w, sg_uf_rg_w,  nr_matricula_w);

		insert into compl_pessoa_fisica(nr_sequencia, cd_pessoa_fisica, ie_tipo_complemento,
			ds_endereco, cd_cep, ds_municipio,
			sg_estado, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec, ds_bairro,
			nr_ddd_telefone, nr_telefone, nr_ramal)
		values (1, cd_pessoa_fisica_w, 1,
			ds_endereco_w, cd_cep_w, nm_municipio_w,
			sg_uf_w, clock_timestamp(),nm_usuario_p,
			clock_timestamp(), nm_usuario_p, ds_bairro_w,
			nr_ddd_w, nr_fone_w, nr_ramal_w);
	end if;

	update 	compl_pessoa_fisica
	set	ds_endereco	= ds_endereco_w,
		cd_cep		= cd_cep_w,
		ds_municipio	= nm_municipio_w,
		sg_estado	= sg_uf_w,
		dt_atualizacao	= clock_timestamp(),
		nm_usuario	= nm_usuario_p,
		ds_bairro	= ds_bairro_w,
		nr_ddd_telefone	= nr_ddd_w,
		nr_telefone	= nr_fone_w,
		nr_ramal	= nr_ramal_w
	where	cd_pessoa_fisica	= cd_pessoa_fisica_w;

	select	count(*)
	into STRICT	qt_benef_w
	from	pls_segurado
	where	nr_sequencia = nr_seq_beneficiario_w
	and	ie_tipo_segurado	= 'T';

	select	count(*)
	into STRICT	qt_carteiras_w
	from	pls_segurado_carteira
	where	cd_usuario_plano	= cd_usuario_plano_w
	and	cd_estabelecimento	= cd_estabelecimento_p;

	if (qt_benef_w	= 0) and (qt_carteiras_w	= 0) then
		select	nextval('pls_segurado_seq')
		into STRICT	nr_seq_benef_w
		;

		insert into pls_segurado(nr_sequencia, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec, cd_pessoa_fisica,
			nr_seq_plano, ie_situacao_atend, dt_inclusao_operadora,
			dt_contratacao, dt_rescisao, nr_seq_intercambio,
			ie_tipo_segurado, cd_estabelecimento)
		values (nr_seq_benef_w, clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p, cd_pessoa_fisica_w,
			nr_seq_plano_p, 'A', dt_inclusao_w,
			clock_timestamp(), dt_fim_repasse_w, nr_seq_intercambio_p,
			'T', cd_estabelecimento_p);

		if (cd_usuario_plano_w IS NOT NULL AND cd_usuario_plano_w::text <> '') then
			insert into pls_segurado_carteira(nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_segurado,
				dt_inicio_vigencia, dt_validade_carteira, cd_usuario_plano,
				ie_situacao, cd_estabelecimento)
			values (nextval('pls_segurado_carteira_seq'), clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p, nr_seq_benef_w,
				clock_timestamp(), clock_timestamp(), cd_usuario_plano_w,
				'P', cd_estabelecimento_p);
		end if;
	end if;

	begin
	select	nr_sequencia,
		dt_rescisao,
		dt_cancelamento,
		dt_limite_utilizacao,
		nr_seq_motivo_cancelamento
	into STRICT	nr_seq_benef_w,
		dt_rescisao_w,
		dt_cancelamento_w,
		dt_limite_utilizacao_w,
		nr_seq_motivo_cancelamento_w
	from	pls_segurado
	where	nr_sequencia = nr_seq_beneficiario_w
	and	ie_tipo_segurado	= 'T';
	exception
	when others then
		nr_seq_benef_w := '';
	end;

	select	max(cd_estabelecimento)
	into STRICT	cd_outorgante_w
	from	pls_outorgante;

	if (dt_exclusao_w IS NOT NULL AND dt_exclusao_w::text <> '') and (coalesce(dt_rescisao_w::text, '') = '') then
		CALL pls_rescindir_segurado(nr_seq_benef_w, clock_timestamp(), dt_limite_utilizacao_w, nr_seq_motivo_cancelamento_w, '', cd_outorgante_w  ,nm_usuario_p,'','N',null, null);

	elsif (dt_inclusao_w IS NOT NULL AND dt_inclusao_w::text <> '') and (nr_seq_benef_w IS NOT NULL AND nr_seq_benef_w::text <> '') then
		begin

		update	pls_segurado
		set	dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p,
			nr_seq_plano	= nr_seq_plano_p,
			ie_situacao_atend	= 'A',
			dt_inclusao_operadora	= dt_inclusao_w,
			dt_contratacao		= clock_timestamp(),
			dt_rescisao		= dt_fim_repasse_w,
			nr_seq_intercambio	= nr_seq_intercambio_p,
			ie_tipo_segurado	= 'T',
			dt_alteracao_tipo_segurado = CASE WHEN ie_tipo_segurado='T' THEN  dt_alteracao_tipo_segurado  ELSE trunc(clock_timestamp(),'dd') END
		where	nr_sequencia	= nr_seq_benef_w;

		exception
		when others then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(251436,'NR_SEQ_INTERCAMBIO=' || nr_seq_intercambio_p||';'||'NR_SEQ_PLANO=' || nr_seq_plano_p);
		end;
	end if;
	CALL ptu_gerar_carencia(nr_sequencia_w, nr_seq_benef_w, nm_usuario_p);
	CALL ptu_gerar_plano_agregado(nr_sequencia_w, nr_seq_benef_w, nm_usuario_p);
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_benef ( nr_seq_empresa_p bigint, nr_seq_plano_p bigint, nr_seq_intercambio_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

