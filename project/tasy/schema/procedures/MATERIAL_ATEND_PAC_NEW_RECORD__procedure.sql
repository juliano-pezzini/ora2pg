-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE material_atend_pac_new_record_ ( nr_atendimento_p INOUT bigint, dt_atendimento_p timestamp, dt_entrada_unidade_p timestamp, nr_seq_atepacu_p INOUT bigint, cd_setor_atendimento_p INOUT bigint --    cd_convenio_p		in out number
                                          /*cd_categoria_p		in out varchar2,

                                          nr_doc_convenio_p	in out varchar2,

                                          ie_tipo_guia_p		in out varchar2,

                                          cd_senha_p			in out varchar2,

                                          cd_acao_p			in out varchar2,

                                          vl_unitario_p		in out number,

                                          qt_ajuste_conta_p	in out number,

                                          ie_valor_informado_p in out varchar2,

                                          ie_guia_informada_p	in out varchar2,

                                          ie_auditoria_p		in out varchar2,

                                          nm_usuario_original_p	in out varchar2,

                                          nr_seq_proc_princ_p	in out number,

                                          cd_situacao_glosa_p	in out number,

                                          dt_conta_p			in out date,

                                          nr_sequencia_p		number,

                                          cd_convenio_wlcb_p	number,

                                          nr_seq_proc_chamada_p	number,

                                          cd_categoria_wlcb_p	varchar2,

                                          cd_material_p		number,

                                          ie_barras_p			varchar2,

                                          dt_alta_p			date,

                                          dt_atend_barras_p	date,

                                          dt_fim_auditoria_p	date,

                                          nm_usuario_p		varchar2,

                                          ie_erro_p		out varchar2*/
) AS $body$
DECLARE






    	ie_parametro_2_w			varchar(1);

      ie_parametro_12_w     varchar(1);

      ie_parametro_224_w    varchar(1);

      ie_parametro_55_w     varchar(1);

      ie_parametro_265_w    varchar(1) := 'S';

      qt_existe_w bigint;




BEGIN

/*

	obter_param_usuario(24, 2, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_parametro_2_w);

	obter_param_usuario(24, 12, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_parametro_12_w);

	obter_param_usuario(24, 224, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_parametro_224_w);

	obter_param_usuario(24, 55, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_parametro_55_w);



	if	(ie_parametro_2_w = 'E') then

	--	gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(180015), wheb_mensagem_pck.get_texto(1046161, 'NR_PARAMETRO='||'2;DS_REGRA='||''), 'S', null, cd_material_p, null, nm_usuario_p);
		ie_erro_p := 'S';

		--goto Final;
	elsif	(ie_parametro_2_w = 'EB') and

		(ie_barras_p = 'S') then

	--	gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(180017), wheb_mensagem_pck.get_texto(1046161, 'NR_PARAMETRO='||'2;DS_REGRA='||''), 'S', null, cd_material_p, null, nm_usuario_p);
		ie_erro_p := 'S';

	--	goto Final;
	elsif	(ie_parametro_12_w = 'P') and

		(dt_alta_p is not null)then

	--	gerar_w_execucao_proc_mat(nr_atendimento_p, wheb_mensagem_pck.get_texto(180018), wheb_mensagem_pck.get_texto(1046161, 'NR_PARAMETRO='||'12;DS_REGRA='||''), 'S', null, cd_material_p, null, nm_usuario_p);
		ie_erro_p := 'S';

		--goto Final;
	end if;



	dt_atendimento_p := sysdate;

	if	(ie_barras_p = 'S') then

		dt_atendimento_p := dt_atend_barras_p;

	end if;

	nr_atendimento_p 		:= nr_atendimento_p;

	dt_entrada_unidade_p 	:= dt_entrada_unidade_p;

	nr_seq_atepacu_p		:= nr_seq_atepacu_p;

	cd_setor_atendimento_p	:= cd_setor_atendimento_p;

	cd_acao_p				:= '1';

	vl_unitario_p			:= 0;

	qt_ajuste_conta_p		:= 0;

	ie_valor_informado_p	:= 'N';

	ie_guia_informada_p		:= 'N';

	ie_auditoria_p			:= 'N';

	nm_usuario_original_p	:= nm_usuario_p;

	cd_situacao_glosa_p		:= 0;



	obter_convenio_execucao(

					nr_atendimento_p,

					dt_atendimento_p,

					cd_convenio_p,

					cd_categoria_p,

					nr_doc_convenio_p,

					ie_tipo_guia_p,

					cd_senha_p);



	if	(ie_parametro_224_w = 'S') and

		(cd_convenio_wlcb_p is not null) and

		(cd_categoria_wlcb_p is not null) then

		cd_convenio_p	:= cd_convenio_wlcb_p;

		cd_categoria_p	:= cd_categoria_wlcb_p;

	end if;



	if	(dt_fim_auditoria_p is not null) then

		dt_atendimento_p	:= dt_fim_auditoria_p;

		dt_conta_p			:= dt_fim_auditoria_p;

	end if;



	if	(ie_parametro_55_w = 'S') and

		(obter_data_alta_atend(nr_atendimento_p) is not null) then

		dt_atendimento_p := obter_data_alta_atend(nr_atendimento_p);

	end if;



	if	(ie_parametro_265_w = 'S') and

		(nr_seq_proc_chamada_p > 0) then

		select	count(1)

		into	qt_existe_w

		from	procedimento_paciente

		where	nr_sequencia = nr_sequencia_p

		and		nr_atendimento = nr_atendimento_p

		and		cd_setor_atendimento = cd_setor_atendimento_p

		and		nvl(nr_seq_proc_pacote, 0) <> nr_sequencia;



		if	(qt_existe_w > 0) then

			nr_seq_proc_princ_p := nr_seq_proc_chamada_p;

		end if;





	end if;

*/
	--<<Final>>
  --teste_execucao;
  --execucao_prescricao_pck.material_atend_pac_new_record(1);
  --execucao_prescricao_pck.material_teste(666);
	qt_existe_w := 0;





end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE material_atend_pac_new_record_ ( nr_atendimento_p INOUT bigint, dt_atendimento_p timestamp, dt_entrada_unidade_p timestamp, nr_seq_atepacu_p INOUT bigint, cd_setor_atendimento_p INOUT bigint  ) FROM PUBLIC;

