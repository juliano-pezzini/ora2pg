-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_calcular_acresc_tab_preco ( nr_seq_tabela_p bigint, nr_seq_plano_preco_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


tx_acrescimo_w			double precision;
tx_acrescimo_erro_w		double precision;
vl_preco_novo_w			double precision;
vl_preco_inicial_w		double precision;
vl_preco_ant_w			double precision;
qt_idade_inicio_w		integer;
qt_idade_inicial_w		integer;
nr_seq_preco_ant_w		bigint;
nr_seq_preco_w			bigint;
ie_tabela_base_w		varchar(1);
tx_acrescimo_preco_w		double precision;
ie_grau_parentesco_w		varchar(10);

c01 CURSOR FOR
	SELECT	nr_sequencia,
		qt_idade_inicial,
		vl_preco_inicial
	from	pls_plano_preco
	where	nr_seq_tabela	= nr_seq_tabela_p
	and	nr_sequencia	<> nr_seq_plano_preco_p
	order by qt_idade_inicial;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_plano_preco
	where	nr_seq_tabela	= nr_seq_tabela_p
	and	qt_idade_inicial	< qt_idade_inicial_w
	and	qt_idade_final	= qt_idade_inicial_w -1
	and	coalesce(ie_grau_titularidade,ie_grau_parentesco_w)	= ie_grau_parentesco_w
	order	by	coalesce(ie_grau_titularidade,' ');


BEGIN

if (nr_seq_tabela_p IS NOT NULL AND nr_seq_tabela_p::text <> '') and (coalesce(nr_seq_tabela_p,0) <> 0) then

	select	coalesce(min(qt_idade_inicial),0)
	into STRICT	qt_idade_inicio_w
	from	pls_plano_preco
	where	nr_seq_tabela	= nr_seq_tabela_p;

	select	coalesce(ie_tabela_base,'N')
	into STRICT	ie_tabela_base_w
	from	pls_tabela_preco
	where	nr_sequencia	= nr_seq_tabela_p;

	select	vl_preco_inicial,
		tx_acrescimo,
		qt_idade_inicial,
		coalesce(ie_grau_titularidade,'X')
	into STRICT	vl_preco_inicial_w,
		tx_acrescimo_preco_w,
		qt_idade_inicial_w,
		ie_grau_parentesco_w
	from	pls_plano_preco
	where	nr_sequencia	= nr_seq_plano_preco_p;

	open C02;
	loop
	fetch C02 into
		nr_seq_preco_ant_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
	end loop;
	close C02;
	/*Calcula o valor ou o acrescimo da faixa etária alterada*/

	if (nr_seq_preco_ant_w IS NOT NULL AND nr_seq_preco_ant_w::text <> '') then
		select	coalesce(vl_preco_inicial,0)
		into STRICT	vl_preco_ant_w
		from	pls_plano_preco
		where	nr_sequencia	= nr_seq_preco_ant_w;

		if (vl_preco_inicial_w <> 0) then
			tx_acrescimo_w	:= (dividir_sem_round(vl_preco_inicial_w,vl_preco_ant_w) * 100) - 100;

			update	pls_plano_preco
			set	tx_acrescimo	= tx_acrescimo_w,
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp()
			where	nr_sequencia	= nr_seq_plano_preco_p;
		elsif (tx_acrescimo_preco_w <> 0) then
			vl_preco_novo_w	:= vl_preco_ant_w + (vl_preco_ant_w * dividir_sem_round((tx_acrescimo_preco_w)::numeric,100));
			if (coalesce(vl_preco_novo_w::text, '') = '') then
				vl_preco_novo_w	:= 0;
			end if;

			update	pls_plano_preco
			set	vl_preco_inicial	= vl_preco_novo_w,
				vl_preco_atual		= vl_preco_novo_w,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where	nr_sequencia		= nr_seq_plano_preco_p;
		end if;
	end if;

	/*Calcula os acrescimos que não foram alterados*/

	if (ie_tabela_base_w = 'N') then
		open c01;
		loop
		fetch c01 into
			nr_seq_preco_w,
			qt_idade_inicial_w,
			vl_preco_inicial_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */

			select	vl_preco_inicial,
				tx_acrescimo,
				qt_idade_inicial,
				coalesce(ie_grau_titularidade,'X')
			into STRICT	vl_preco_inicial_w,
				tx_acrescimo_preco_w,
				qt_idade_inicial_w,
				ie_grau_parentesco_w
			from	pls_plano_preco
			where	nr_sequencia	= nr_seq_preco_w;

			if (qt_idade_inicial_w <> qt_idade_inicio_w) then
				/*select	max(nr_sequencia)
				into	nr_seq_preco_ant_w
				from	pls_plano_preco
				where	nr_seq_tabela		= nr_seq_tabela_p
				and	qt_idade_inicial	< qt_idade_inicial_w;*/
				open C02;
				loop
				fetch C02 into
					nr_seq_preco_ant_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
				end loop;
				close C02;

				if (nr_seq_preco_ant_w IS NOT NULL AND nr_seq_preco_ant_w::text <> '') then
					select	coalesce(vl_preco_inicial,0)
					into STRICT	vl_preco_ant_w
					from	pls_plano_preco
					where	nr_sequencia	= nr_seq_preco_ant_w;

					begin
					tx_acrescimo_w	:= (dividir_sem_round(vl_preco_inicial_w,vl_preco_ant_w) * 100) - 100;
					exception
					when others then
						tx_acrescimo_erro_w	:= (dividir_sem_round(vl_preco_inicial_w,vl_preco_ant_w) * 100) - 100;
						commit;
						CALL wheb_mensagem_pck.exibir_mensagem_abort(200503,'QT_IDADE='||qt_idade_inicial_w||';'||'TX_ACRESCIMO='||tx_acrescimo_erro_w);
						--Menssagem: O valor do acréscimo da faixa etária  ||qt_idade_inicial_w||  chegou no limite: ||tx_acrescimo_erro_w||
					end;

					update	pls_plano_preco
					set	tx_acrescimo	= tx_acrescimo_w,
						nm_usuario	= nm_usuario_p,
						dt_atualizacao	= clock_timestamp()
					where	nr_sequencia	= nr_seq_preco_w;
				end if;
			end if;
		end loop;
		close c01;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_calcular_acresc_tab_preco ( nr_seq_tabela_p bigint, nr_seq_plano_preco_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

