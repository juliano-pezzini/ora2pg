-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE contabiliza_troca_plano (nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


nm_agrupador_w                  varchar(255);
ds_compl_historico_w            varchar(255);
ds_conteudo_w                   varchar(4000);
nm_tabela_w                     varchar(255);
nm_atributo_w                   varchar(255);
dt_inicial_w                    timestamp;
dt_final_w                      timestamp;
nr_sequencia_w                  bigint;
nr_seq_agrupamento_w            bigint;
nr_seq_mes_ref_w                ctb_mes_ref.nr_sequencia%type;
cd_centro_custo_w               ctb_saldo.cd_centro_custo%type;
cd_conta_origem_w               ctb_troca_plano_conta.cd_conta_origem%type;
cd_conta_destino_w              ctb_troca_plano_conta.cd_conta_destino%type;
vl_saldo_w                      ctb_saldo.vl_saldo%type;
ds_titulo_w                     ctb_troca_plano.ds_titulo%type;
ds_troca_w                      ctb_troca_plano.ds_troca%type;
dt_referencia_w                 lote_contabil.dt_referencia%type;
cd_estabelecimento_w            lote_contabil.cd_estabelecimento%type;
cd_empresa_w                    estabelecimento.cd_empresa%type;
cd_tipo_lote_contabil_w         lote_contabil.cd_tipo_lote_contabil%type;
cd_historico_w                  lote_contabil_parametro.vl_parametro%type;
nr_sequencia_troca_w            ctb_troca_plano.nr_sequencia%type;
dt_troca_real_w                 ctb_troca_plano.dt_troca_real%type;
ie_debito_credito_orig_w        ctb_grupo_conta.ie_debito_credito%type;
ie_debito_credito_dest_w        ctb_grupo_conta.ie_debito_credito%type;

c01 CURSOR FOR
        SELECT  b.cd_conta_origem,
                b.cd_conta_destino,
                c.cd_centro_custo,
                c.vl_saldo,
                a.ds_titulo,
                a.ds_troca,
                a.nr_sequencia,
                'CTB_TROCA_PLANO' nm_tabela,
                'VL_SALDO' nm_atributo,
                a.dt_troca_real
        from    ctb_troca_plano a,
                ctb_troca_plano_conta b,
                ctb_saldo c
        where   b.nr_seq_troca          = a.nr_sequencia
        and     c.cd_conta_contabil     = b.cd_conta_origem
        and     c.nr_seq_mes_ref        = nr_seq_mes_ref_w
        and     a.nr_lote_contabil      = nr_lote_contabil_p;


BEGIN
        /*Validacao para impedir a geracao em lotes incorretos */

        if (ie_exclusao_p <> 'S') then
                select b.cd_tipo_lote_contabil
                into STRICT cd_tipo_lote_contabil_w
                from lote_contabil b
                where b.nr_lote_contabil = nr_lote_contabil_p;
                if (cd_tipo_lote_contabil_w <> 52) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(261346);
                end if;
        end if;
        select  max(vl_parametro)
        into STRICT    cd_historico_w
        from    historico_padrao b,
                lote_contabil_parametro a
        where   a.vl_parametro          = b.cd_historico
        and     a.nr_lote_contabil      = nr_lote_contabil_p
        and     nr_seq_parametro        = 1;

        select  dt_referencia,
                cd_estabelecimento,
                cd_tipo_lote_contabil
        into STRICT    dt_referencia_w,
                cd_estabelecimento_w,
                cd_tipo_lote_contabil_w
        from    lote_contabil
        where   nr_lote_contabil = nr_lote_contabil_p;

        cd_empresa_w    := obter_empresa_estab(cd_estabelecimento_w);

        select  max(nr_sequencia)
        into STRICT    nr_seq_mes_ref_w
        from    ctb_mes_ref
        where   cd_empresa = cd_empresa_w
        and     trunc(dt_referencia, 'mm') = trunc(dt_referencia_w, 'mm');

        dt_inicial_w    :=      dt_referencia_w;
        dt_final_w      :=      fim_mes(dt_referencia_w);

        if (ie_exclusao_p = 'S') then

                delete  FROM w_movimento_contabil
                where   nr_lote_contabil        = nr_lote_contabil_p;

                delete  from movimento_contabil
                where   nr_lote_contabil        = nr_lote_contabil_p;

                commit;

                update  ctb_troca_plano a
                set     a.nr_lote_contabil       = NULL
                where   a.nr_lote_contabil      = nr_lote_contabil_p;

                update  lote_contabil
                set     vl_credito              = 0,
                        vl_debito               = 0
                where   nr_lote_contabil        = nr_lote_contabil_p;
        else
                if (coalesce(cd_historico_w, 0) = 0) then
                        CALL wheb_mensagem_pck.exibir_mensagem_abort(334575);
                end if;


                update  ctb_troca_plano a
                set     a.nr_lote_contabil              = nr_lote_contabil_p
                where   coalesce(a.nr_lote_contabil,0)       = 0
                and     a.dt_troca_real between dt_inicial_w and dt_final_w;

                commit;

                nr_sequencia_w := 0;
                nm_agrupador_w  := coalesce(trim(both obter_agrupador_contabil(52)),'NR_SEQ_TROCA');
                open c01;
                loop
                fetch c01 into
                        cd_conta_origem_w,
                        cd_conta_destino_w,
                        cd_centro_custo_w,
                        vl_saldo_w,
                        ds_titulo_w,
                        ds_troca_w,
                        nr_sequencia_troca_w,
                        nm_tabela_w,
                        nm_atributo_w,
                        dt_troca_real_w;
                EXIT WHEN NOT FOUND; /* apply on C01 */

                        ds_conteudo_w           := substr(      ds_titulo_w                             || '#@' ||
                                                                ds_troca_w, 1, 4000);

                        ds_compl_historico_w    := substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w, ds_conteudo_w),1,255);

                        if (nm_agrupador_w = 'NR_SEQ_TROCA') then
                                nr_seq_agrupamento_w := nr_sequencia_troca_w;
                        end if;

                        begin
                        select  ie_debito_credito
                        into STRICT    ie_debito_credito_orig_w
                        from    conta_contabil a,
                                ctb_grupo_conta b
                        where   b.cd_grupo = a.cd_grupo
                        and     cd_conta_contabil = cd_conta_origem_w;
                        exception when others then
                                vl_saldo_w      := 0;
                        end;

                        if (vl_saldo_w > 0) then
                                if (ie_debito_credito_orig_w = 'D') then

                                        ie_debito_credito_orig_w := 'C';
                                        ie_debito_credito_dest_w := 'D';

                                elsif (ie_debito_credito_orig_w = 'C') then

                                        ie_debito_credito_orig_w := 'D';
                                        ie_debito_credito_dest_w := 'C';

                                end if;
                        else
                                if (ie_debito_credito_orig_w = 'D') then

                                        ie_debito_credito_dest_w := 'C';

                                elsif (ie_debito_credito_orig_w = 'C') then

                                        ie_debito_credito_dest_w := 'D';
                                end if;
                        end if;

                        nr_sequencia_w          := nr_sequencia_w + 1;

                        insert  into w_movimento_contabil(
                                nr_lote_contabil,
                                nr_sequencia,
                                cd_conta_contabil,
                                ie_debito_credito,
                                cd_historico,
                                dt_movimento,
                                vl_movimento,
                                ds_doc_agrupamento,
                                nr_seq_agrupamento,
                                cd_centro_custo,
                                ds_compl_historico,
                                nr_seq_trans_fin,
                                nr_documento,
                                cd_pessoa_fisica,
                                cd_cgc,
                                ie_transitorio,
                                ie_origem_documento,
                                nm_tabela,
                                nr_seq_tab_orig,
                                nr_seq_tab_compl,
                                nr_seq_info,
                                nm_atributo)
                        values ( nr_lote_contabil_p,
                                nr_sequencia_w,
                                cd_conta_origem_w,
                                ie_debito_credito_orig_w,
                                cd_historico_w,
                                dt_troca_real_w,
                                vl_saldo_w,
                                nr_seq_agrupamento_w,
                                nr_seq_agrupamento_w,
                                cd_centro_custo_w,
                                ds_compl_historico_w,
                                null,
                                nr_seq_agrupamento_w,
                                null,
                                null,
                                'N',
                                null,
                                nm_tabela_w,
                                nr_seq_agrupamento_w,
                                null,
                                70,
                                nm_atributo_w);
                        insert  into w_movimento_contabil(
                                nr_lote_contabil,
                                nr_sequencia,
                                cd_conta_contabil,
                                ie_debito_credito,
                                cd_historico,
                                dt_movimento,
                                vl_movimento,
                                ds_doc_agrupamento,
                                nr_seq_agrupamento,
                                cd_centro_custo,
                                ds_compl_historico,
                                nr_seq_trans_fin,
                                nr_documento,
                                cd_pessoa_fisica,
                                cd_cgc,
                                ie_transitorio,
                                ie_origem_documento,
                                nm_tabela,
                                nr_seq_tab_orig,
                                nr_seq_tab_compl,
                                nr_seq_info,
                                nm_atributo)
                        values (nr_lote_contabil_p,
                                nr_sequencia_w,
                                cd_conta_destino_w,
                                ie_debito_credito_dest_w,
                                cd_historico_w,
                                dt_troca_real_w,
                                vl_saldo_w,
                                nr_seq_agrupamento_w,
                                nr_seq_agrupamento_w,
                                cd_centro_custo_w,
                                ds_compl_historico_w,
                                null,
                                nr_seq_agrupamento_w,
                                null,
                                null,
                                'N',
                                null,
                                nm_tabela_w,
                                nr_seq_agrupamento_w,
                                null,
                                70,
                                nm_atributo_w);
                end loop;
                close c01;

                CALL agrupa_movimento_contabil(      nr_lote_contabil_p,
                                                nm_usuario_p);
        end if;
commit;
if (coalesce(ds_retorno_p::text, '') = '') then

        update  lote_contabil
        set     ie_situacao = 'A',
                dt_geracao_lote = clock_timestamp()
        where   nr_lote_contabil = nr_lote_contabil_p;
        if (ie_exclusao_p = 'S') then
                ds_retorno_p            := wheb_mensagem_pck.get_texto(298780);

                CALL ctb_gravar_log_lote( nr_lote_contabil_p, 2, '', nm_usuario_p);
        else
                ds_retorno_p            := wheb_mensagem_pck.get_texto(298781);

                CALL ctb_gravar_log_lote( nr_lote_contabil_p, 1, '', nm_usuario_p);
        end if;
        commit;
else
        rollback;
end if;


commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE contabiliza_troca_plano (nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

