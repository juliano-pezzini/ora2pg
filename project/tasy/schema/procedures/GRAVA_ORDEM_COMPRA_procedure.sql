-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE grava_ordem_compra ( nr_cot_compra_p bigint, cd_estabelecimento_p bigint, nr_seq_fornecedor_p bigint, nm_usuario_p text, nr_ordem_compra_p INOUT bigint) AS $body$
DECLARE


qt_existe_comprador_w		smallint;
cd_cgc_fornecedor_w     	varchar(14)	:= '0';
cd_pessoa_fisica_w		varchar(10)	:= '0';	
cd_condicao_pagamento_w 	bigint	:= 0;
cd_comprador_w          	bigint	:= 0;
dt_ordem_compra_w       	timestamp;
cd_moeda_w              	integer	:= 0;
cd_solicitante_w        	varchar(10)	:= '0';
ie_frete_w              	varchar(1)	:= '0';
vl_frete_w              	double precision	:= 0;
vl_despesa_acessoria_w		double precision	:= 0;
pr_desconto_w           	double precision	:= 0;
vl_desconto_w			double precision	:= 0;
pr_desconto_antec_w     	double precision	:= 0;
pr_juros_w              	double precision	:= 0;
dt_entrega_w            	timestamp;
cd_estabelecimento_w		smallint	:= 0;
ie_aviso_chegada_w		varchar(01)	:= 'N';
ds_erro_w			varchar(255);
nm_pessoa_contato_w		varchar(255);
ds_observacao_w			ordem_compra.ds_observacao%type;
vl_conv_moeda_w		ordem_compra.vl_conv_moeda%type;
nr_seq_forma_pagto_w		bigint;
ie_forma_pagto_w		varchar(15);
tx_desc_ordem_w			double precision;
pr_desc_financeiro_w		double precision;
nr_documento_externo_w		bigint;
nr_documento_interno_w		varchar(100);
cd_local_entrega_w		smallint;
ie_copia_observacao_w		varchar(15);
nr_seq_tipo_compra_w		bigint;
nr_seq_mod_compra_w		bigint;
nr_seq_subgrupo_compra_w	bigint;
vl_despesa_doc_w		double precision;
ds_justif_divergencia_w		varchar(4000);
cd_setor_atendimento_w		integer;
ie_orcado_w			varchar(1);
nr_atendimento_w		bigint;
ie_dt_ordem_compra_w		varchar(1) := 'C';
lengthObsCotCompraForn	bigint	:= 0;
lengthAux				bigint	:= 0;
ie_valor_estrangeiro_w		varchar(1);


BEGIN
select	nextval('ordem_compra_seq')
into STRICT	nr_ordem_compra_p
;

begin
select	max(obter_valor_param_usuario(917,13,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p))
into STRICT	cd_local_entrega_w
;
exception when others then
	/*r.aise_application_error(-20011,'Erro ao ler o parametro [13] da Ordem de Compra.');*/

	CALL wheb_mensagem_pck.exibir_mensagem_abort(229009);
end;

ie_copia_observacao_w := Obter_Param_Usuario(915, 109, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_copia_observacao_w);
ie_dt_ordem_compra_w := Obter_Param_Usuario(917, 222, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_dt_ordem_compra_w);

select	max(dt_limite_entrega),
	max(nr_seq_tipo_compra),
	max(nr_seq_mod_compra),
	substr(obter_setor_usuario(nm_usuario_p),1,5)
into STRICT	dt_entrega_w,
	nr_seq_tipo_compra_w,
	nr_seq_mod_compra_w,
	cd_setor_atendimento_w
from	cot_compra_item
where	nr_cot_compra = nr_cot_compra_p;

select (dt_entrega_w + coalesce(qt_dias_entrega,0))
into STRICT	dt_entrega_w
from	cot_compra_forn
where	nr_sequencia	= nr_seq_fornecedor_p;

select	obter_proximo_dia_util(cd_estabelecimento_p, dt_entrega_w)
into STRICT	dt_entrega_w
;

select	ds_justif_divergencia
into STRICT	ds_justif_divergencia_w
from	cot_compra
where	nr_cot_compra = nr_cot_compra_p;

select	coalesce(max(ie_valor_estrangeiro),'N')
into STRICT	ie_valor_estrangeiro_w
from	parametro_compras b,
	cot_compra a
where	a.cd_estabelecimento	= b.cd_estabelecimento
and	a.nr_cot_compra		= nr_cot_compra_p;

if (ie_copia_observacao_w = 'S') then
	begin
		select 	coalesce(max(length(ds_observacao)),0)
		into STRICT	lengthObsCotCompraForn
		from	cot_compra_forn
		where 	nr_sequencia	= nr_seq_fornecedor_p;
		
		lengthAux := 4000 - lengthObsCotCompraForn - length(chr(13)) -1;
	end;
end if;

select	f.cd_condicao_pagamento,
	c.cd_comprador,
	c.dt_cot_compra,
	CASE WHEN ie_valor_estrangeiro_w='S' THEN  f.cd_moeda  ELSE coalesce(wheb_moeda_pck.get_moeda_padrao(wheb_usuario_pck.get_cd_estabelecimento), f.cd_moeda) END ,
	c.cd_pessoa_solicitante,
	coalesce(f.ie_frete,'X'),
	coalesce(f.vl_previsto_frete,0),
	coalesce(f.vl_despesa_acessoria,0),
	coalesce(f.vl_despesa_doc,0),
	coalesce(f.pr_desconto,0),
	coalesce(f.pr_desconto_pgto_antec,0),
	coalesce(f.pr_juros_negociado,0),
	c.cd_estabelecimento,
	coalesce(vl_desconto,0),
	substr( CASE WHEN ie_copia_observacao_w='N' THEN ''  ELSE CASE WHEN f.ds_observacao='' THEN ''  ELSE f.ds_observacao || chr(13) END  ||					        CASE WHEN substr(c.ds_observacao,1,lengthAux)='' THEN ''  ELSE substr(c.ds_observacao,1,lengthAux) END  END ,1,4000) ds_observacao,
	somente_numero(c.nr_documento_externo) nr_documento_externo,
	c.nr_documento_interno,
	c.nr_seq_subgrupo_compra,
	c.ie_orcado,
	c.nr_atendimento,
	f.vl_cotacao_moeda
into STRICT	cd_condicao_pagamento_w,
	cd_comprador_w,
	dt_ordem_compra_w,
	cd_moeda_w,
	cd_solicitante_w,
	ie_frete_w,
	vl_frete_w,
	vl_despesa_acessoria_w,
	vl_despesa_doc_w,
	pr_desconto_w,
	pr_desconto_antec_w,
	pr_juros_w,
	cd_estabelecimento_w,
	vl_desconto_w,
	ds_observacao_w,
	nr_documento_externo_w,
	nr_documento_interno_w,
	nr_seq_subgrupo_compra_w,
	ie_orcado_w,
	nr_atendimento_w,
	vl_conv_moeda_w
from	cot_compra c,
	cot_compra_forn f
where	c.nr_cot_compra	= f.nr_cot_compra
and	c.nr_cot_compra 	= nr_cot_compra_p
and	f.nr_sequencia	= nr_seq_fornecedor_p;

if (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') then
	select	count(*)
	into STRICT	qt_existe_comprador_w
	from	comprador
	where	cd_estabelecimento = cd_estabelecimento_p
	and	cd_pessoa_fisica = cd_comprador_w;
	if (qt_existe_comprador_w = 0) then
		insert into comprador(
			cd_pessoa_fisica,
			nm_guerra,
			dt_atualizacao,
			nm_usuario,
			cd_estabelecimento,
			ie_situacao)
		values (cd_comprador_w,
			substr(obter_nome_pf(cd_comprador_w),1,80),
			clock_timestamp(),
			nm_usuario_p,
			cd_estabelecimento_p,
			'A');
	end if;
end if;

select	coalesce(max(cd_cgc_fornecedor),'0'),
	coalesce(max(cd_pessoa_fisica),'0'),
	coalesce(max(ie_forma_pagto), '0')
into STRICT	cd_cgc_fornecedor_w,
	cd_pessoa_fisica_w,
	ie_forma_pagto_w
from	cot_compra_forn
where	nr_sequencia		= nr_seq_fornecedor_p;

if (cd_cgc_fornecedor_w <> '0') then
	select	substr(obter_dados_pf_pj_estab(cd_estabelecimento_w, null, cd_cgc_fornecedor_w, 'ENC'),1,255),
		obter_dados_pf_pj_estab(cd_estabelecimento_w, null, cd_cgc_fornecedor_w, 'TDO'),
		obter_dados_pf_pj_estab(cd_estabelecimento_w, null, cd_cgc_fornecedor_w, 'TDF')
	into STRICT	nm_pessoa_contato_w,
		tx_desc_ordem_w,
		pr_desc_financeiro_w
	;
else
	select	nm_pessoa_fisica
	into STRICT	nm_pessoa_contato_w
	from	pessoa_fisica
	where	cd_pessoa_fisica = cd_pessoa_fisica_w;
end if;

if (ie_frete_w = 'X') then
	/*r.aise_application_error(-20011, 'Falta informar o tipo de frete do fornecedor na cotacao');*/

	CALL wheb_mensagem_pck.exibir_mensagem_abort(229010);
end if;

nr_seq_forma_pagto_w	:= 0;
if (ie_forma_pagto_w <> '0') then
	select	coalesce(max(nr_sequencia), 0)
	into STRICT	nr_seq_forma_pagto_w
	from	forma_pagamento
	where	ie_forma_pagamento	= ie_forma_pagto_w;
end if;

if (coalesce(ie_dt_ordem_compra_w,'C') = 'S') then
	dt_ordem_compra_w := clock_timestamp();
end if;
	
begin
insert	into ordem_compra(
	nr_ordem_compra,
	cd_estabelecimento,
 	cd_cgc_fornecedor,
	cd_pessoa_fisica,
 	cd_condicao_pagamento,
 	cd_comprador,
 	dt_ordem_compra,
 	dt_atualizacao,
 	nm_usuario,
 	cd_moeda,
 	ie_situacao,
 	dt_inclusao,
 	cd_pessoa_solicitante,
 	cd_cgc_transportador,
 	ie_frete,
 	vl_frete,
	vl_despesa_acessoria,
	vl_despesa_doc,
 	pr_multa_atraso,
 	pr_desconto,
	pr_desc_financeiro,
 	pr_desc_pgto_antec,
 	pr_juros_negociado,
 	ds_pessoa_contato,
 	ds_observacao,
 	cd_motivo_alteracao,
 	cd_local_entrega,
 	dt_entrega,
 	nr_prescricao,
 	dt_aprovacao,
 	dt_baixa,
	ie_aviso_chegada,
	ie_emite_obs,
	ie_urgente,
	ie_somente_pagto,
	vl_desconto,
	ie_tipo_ordem,
	nr_seq_forma_pagto,
	nr_documento_externo,
	nr_documento_interno,
	nr_seq_tipo_compra,
	nr_seq_mod_compra,
	nr_processo_interno,
	nr_seq_subgrupo_compra,
	cd_setor_atendimento,
	ie_orcado,
	nr_atendimento,
	vl_conv_moeda)
values (	nr_ordem_compra_p,
	coalesce(cd_estabelecimento_p, cd_estabelecimento_w),
	CASE WHEN cd_cgc_fornecedor_w='0' THEN  null  ELSE cd_cgc_fornecedor_w END ,
	CASE WHEN cd_pessoa_fisica_w='0' THEN  null  ELSE cd_pessoa_fisica_w END ,
	cd_condicao_pagamento_w,
	cd_comprador_w,
      	dt_ordem_compra_w, 
	clock_timestamp(), 
	nm_usuario_p,
	cd_moeda_w, 
	'A', 
	clock_timestamp(), 
	cd_solicitante_w, 
	null,
	ie_frete_w, 
	vl_frete_w, 
	vl_despesa_acessoria_w,
	vl_despesa_doc_w,
	0, 
	CASE WHEN tx_desc_ordem_w=0 THEN pr_desconto_w  ELSE tx_desc_ordem_w END ,
	pr_desc_financeiro_w,
	pr_desconto_antec_w, 
	pr_juros_w, 
	nm_pessoa_contato_w,
	ds_observacao_w,
	null, 
	cd_local_entrega_w, 
	dt_entrega_w, 
	null,
	null,
	null,
	ie_aviso_chegada_w,
	'S',
	'N',
	'N',
	coalesce(vl_desconto_w,0),
	'O',
	CASE WHEN nr_seq_forma_pagto_w=0 THEN  null  ELSE nr_seq_forma_pagto_w END ,
	nr_documento_externo_w,
	nr_documento_interno_w,
	nr_seq_tipo_compra_w,
	nr_seq_mod_compra_w,
	nr_documento_interno_w,
	nr_seq_subgrupo_compra_w,
	cd_setor_atendimento_w,
	ie_orcado_w,
	nr_atendimento_w,
	vl_conv_moeda_w);
  exception
	when others then
		ds_erro_w	:= sqlerrm(SQLSTATE);
		/*r.aise_application_error(-20011,'Erro ao gravar Ordem_Compra' || chr(10) || ds_erro_w);*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(229011,'DS_ERRO_W=' || ds_erro_w);
		
end;

CALL gerar_historico_cotacao(
	nr_cot_compra_p,
	WHEB_MENSAGEM_PCK.get_texto(149602),
	WHEB_MENSAGEM_PCK.get_texto(302584,'NR_ORDEM_COMPRA_P='||nr_ordem_compra_p),
	'S',
	nm_usuario_p);

CALL inserir_historico_ordem_compra(
		nr_ordem_compra_p,
		'S',
		WHEB_MENSAGEM_PCK.get_texto(149602),
		WHEB_MENSAGEM_PCK.get_texto(302592,'NR_COT_COMPRA_P='||nr_cot_compra_p),
		nm_usuario_p);

	
if (ds_justif_divergencia_w IS NOT NULL AND ds_justif_divergencia_w::text <> '') then

	
	CALL inserir_historico_ordem_compra(
		nr_ordem_compra_p,
		'S',
		WHEB_MENSAGEM_PCK.get_texto(302596),
		ds_justif_divergencia_w,
		nm_usuario_p);
end if;
		
		
		

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE grava_ordem_compra ( nr_cot_compra_p bigint, cd_estabelecimento_p bigint, nr_seq_fornecedor_p bigint, nm_usuario_p text, nr_ordem_compra_p INOUT bigint) FROM PUBLIC;

