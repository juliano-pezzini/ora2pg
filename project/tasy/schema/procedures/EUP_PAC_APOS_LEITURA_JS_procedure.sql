-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE eup_pac_apos_leitura_js ( nr_atend_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p text, cd_estab_p bigint, nm_usuario_p text, ie_cancelado_p INOUT text, ds_msg_atend_canc_p INOUT text, qt_avisos_p INOUT bigint, ie_mostrar_debito_p INOUT text, qt_dispensa_p INOUT bigint, ds_msg_dispensa_p INOUT text, ds_msg_origem_pront_p INOUT text, ie_laudo_same_p INOUT text, ds_msg_atend_sem_alta_p INOUT text, ds_msg_atend_cancelado_p INOUT text) AS $body$
BEGIN
 
if (coalesce(nr_atend_p,0) > 0) then 
	ds_msg_atend_cancelado_p := eup_obter_nm_usuario_cancel(nr_atend_p);
elsif (coalesce(nr_atendimento_p,0) > 0) then 
	ds_msg_atend_cancelado_p := eup_obter_nm_usuario_cancel(nr_atendimento_p);
end if;
 
if (coalesce(nr_atendimento_p,0) > 0) then 
 
	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
	into STRICT	ie_cancelado_p 
	from	atendimento_paciente 
	where 	nr_atendimento = nr_atendimento_p 
	and  	(dt_cancelamento IS NOT NULL AND dt_cancelamento::text <> '');
 
	ds_msg_atend_canc_p := substr(obter_texto_tasy(244742,philips_param_pck.get_nr_seq_idioma),1,255);
	 
	select 	count(*) 
	into STRICT	qt_dispensa_p 
	from 	dispensa_cob_diaria 
	where 	nr_atendimento = nr_atendimento_p 
	and 	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
 
	ds_msg_dispensa_p := substr(obter_texto_tasy(120858,philips_param_pck.get_nr_seq_idioma),1,255);
end if;
 
if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then 
 
	select 	count(*) 
	into STRICT	qt_avisos_p 
	from  cartao_fidelidade a, 
		pf_cartao_fidelidade b 
	where  a.nr_sequencia = b.nr_seq_cartao 
	and   a.ie_situacao = 'A' 
	and   cd_pessoa_fisica = cd_pessoa_fisica_p 
	and 	((a.ds_cartao IS NOT NULL AND a.ds_cartao::text <> '') or (a.ds_observacao IS NOT NULL AND a.ds_observacao::text <> '') or (b.ds_observacao IS NOT NULL AND b.ds_observacao::text <> ''));
		 
	ie_mostrar_debito_p := obter_se_mostra_debito_estab(cd_pessoa_fisica_p, cd_estab_p);
	 
	ds_msg_origem_pront_p := Verifica_origem_prontuario(cd_pessoa_fisica_p, ds_msg_origem_pront_p);
	 
	ie_laudo_same_p := obter_se_pac_laudo_same(cd_pessoa_fisica_p);
 
end if;
 
ds_msg_atend_sem_alta_p := consistir_atendimento_sem_alta(cd_pessoa_fisica_p, nr_atendimento_p, obter_perfil_ativo, wheb_usuario_pck.get_cd_estabelecimento, nm_usuario_p, ds_msg_atend_sem_alta_p);
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eup_pac_apos_leitura_js ( nr_atend_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p text, cd_estab_p bigint, nm_usuario_p text, ie_cancelado_p INOUT text, ds_msg_atend_canc_p INOUT text, qt_avisos_p INOUT bigint, ie_mostrar_debito_p INOUT text, qt_dispensa_p INOUT bigint, ds_msg_dispensa_p INOUT text, ds_msg_origem_pront_p INOUT text, ie_laudo_same_p INOUT text, ds_msg_atend_sem_alta_p INOUT text, ds_msg_atend_cancelado_p INOUT text) FROM PUBLIC;

