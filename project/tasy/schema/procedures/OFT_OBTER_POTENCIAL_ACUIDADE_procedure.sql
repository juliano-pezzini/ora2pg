-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE oft_obter_potencial_acuidade ( nr_seq_consulta_p bigint, nr_seq_consulta_form_p bigint, cd_pessoa_fisica_p text, ie_opcao_p text, vListaPotencialAcuidade INOUT strRecTypeFormOft) AS $body$
DECLARE


dt_exame_w				oft_potencial_acuidade.dt_registro%type;
ds_observacao_w		oft_potencial_acuidade.ds_observacao%type;
vl_potencial_od_w		oft_potencial_acuidade.vl_potencial_od%type;
vl_potencial_oe_w		oft_potencial_acuidade.vl_potencial_oe%type;
cd_profissional_w		oft_potencial_acuidade.cd_profissional%TYPE;
dt_liberacao_w			timestamp;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type := wheb_usuario_pck.get_cd_estabelecimento;
nm_usuario_w			usuario.nm_usuario%type := wheb_usuario_pck.get_nm_usuario;
ds_erro_w				varchar(4000);

potencial_acuidade_form CURSOR FOR
	SELECT	a.*
	from		oft_potencial_acuidade a,
				oft_consulta_formulario b
	where		a.nr_seq_consulta_form 	=	b.nr_sequencia
	and		a.nr_seq_consulta_form 	=	nr_seq_consulta_form_p
	and		a.nr_seq_consulta			=	nr_seq_consulta_p
	and		((a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') or (a.nm_usuario = nm_usuario_w))
	and		((coalesce(a.dt_inativacao::text, '') = '') or (b.dt_inativacao IS NOT NULL AND b.dt_inativacao::text <> ''))
	order by dt_registro;

potencial_acuidade_paciente CURSOR FOR
	SELECT	a.*
	from		oft_potencial_acuidade a,
				oft_consulta b
	where		a.nr_seq_consulta		=	b.nr_sequencia
	and		b.cd_pessoa_fisica	=	cd_pessoa_fisica_p
	and		(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and		coalesce(a.dt_inativacao::text, '') = ''
	and		b.nr_sequencia 		<> nr_seq_consulta_p
	order by dt_registro;
BEGIN
begin

if (coalesce(nr_seq_consulta_p,0) > 0) and (vListaPotencialAcuidade.count > 0) then
	if (ie_opcao_p = 'F') then
		FOR c_potencial_acuidade IN potencial_acuidade_form LOOP
			begin
			dt_exame_w				:= c_potencial_acuidade.dt_registro;
			ds_observacao_w		:= c_potencial_acuidade.ds_observacao;
			vl_potencial_od_w		:= c_potencial_acuidade.vl_potencial_od;
			vl_potencial_oe_w		:= c_potencial_acuidade.vl_potencial_oe;
			dt_liberacao_w			:=	c_potencial_acuidade.dt_liberacao;
			cd_profissional_w		:=	c_potencial_acuidade.cd_profissional;
			end;
		end loop;
	else
		FOR c_potencial_acuidade IN potencial_acuidade_paciente LOOP
			begin
			ds_observacao_w		:= c_potencial_acuidade.ds_observacao;
			vl_potencial_od_w		:= c_potencial_acuidade.vl_potencial_od;
			vl_potencial_oe_w		:= c_potencial_acuidade.vl_potencial_oe;
			cd_profissional_w		:=	obter_pf_usuario(nm_usuario_w,'C');
			dt_exame_w				:= clock_timestamp();
			end;
		end loop;
	end if;

	for i in 1..vListaPotencialAcuidade.count loop
		begin
		if (ie_opcao_p = 'F') or (vListaPotencialAcuidade[i].ie_obter_resultado = 'S') then
			vListaPotencialAcuidade[i].dt_liberacao	:= dt_liberacao_w;
			case upper(vListaPotencialAcuidade[i].nm_campo)
				WHEN 'CD_PROFISSIONAL' THEN
					vListaPotencialAcuidade[i].ds_valor	:= cd_profissional_w;
				when 'DT_REGISTRO' then
					vListaPotencialAcuidade[i].dt_valor	:= dt_exame_w;
				when 'DS_OBSERVACAO' then
					vListaPotencialAcuidade[i].ds_valor	:= ds_observacao_w;
				when 'VL_POTENCIAL_OD' then
					vListaPotencialAcuidade[i].nr_valor	:= vl_potencial_od_w;
				when 'VL_POTENCIAL_OE' then
					vListaPotencialAcuidade[i].nr_valor	:= vl_potencial_oe_w;
				else
					null;
			end case;
		end if;
	end;
	end loop;
end if;

exception
when others then
	ds_erro_w	:= substr(sqlerrm,1,4000);
end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE oft_obter_potencial_acuidade ( nr_seq_consulta_p bigint, nr_seq_consulta_form_p bigint, cd_pessoa_fisica_p text, ie_opcao_p text, vListaPotencialAcuidade INOUT strRecTypeFormOft) FROM PUBLIC;

