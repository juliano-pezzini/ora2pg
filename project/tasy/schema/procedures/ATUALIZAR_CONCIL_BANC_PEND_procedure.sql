-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_concil_banc_pend (nr_seq_conciliacao_p bigint, nm_usuario_p text, cd_estabelecimento_p text) AS $body$
DECLARE


nr_sequencia_w			bigint;
nr_seq_conta_w			bigint;
qt_movto_orig_w			bigint;
nr_seq_movto_orig_w		bigint;
ie_inclui_estorno_w		varchar(1);
	
ie_saldo_atual_w		varchar(1);
dt_inicio_lanc_w		timestamp;
dt_inicio_w				timestamp;
dt_final_lanc_w			timestamp;
dt_final_w				timestamp;
dt_inicio_trunc_w		timestamp;

cd_agencia_bancaria_w	banco_estabelecimento.cd_agencia_bancaria%type;
cd_conta_w				banco_estabelecimento.cd_conta%type;
ie_digito_conta_w		banco_estabelecimento.ie_digito_conta%type;
ie_conciliacao_conta_w	parametro_controle_banc.ie_conciliacao_conta%type;

ds_qt_dias_futuros_w	varchar(255);
ds_qt_dias_passados_w	varchar(255);
qt_dias_futuros_w		bigint;
qt_dias_passados_w		bigint;


BEGIN

select	max(nr_seq_conta)
into STRICT	nr_seq_conta_w
from	conciliacao_bancaria
where	nr_sequencia	= nr_seq_conciliacao_p;

select	coalesce(max(ie_estorno_concil_pend),'S'),
		coalesce(max(ie_conciliacao_conta),'N')
into STRICT	ie_inclui_estorno_w,
		ie_conciliacao_conta_w
from	parametro_controle_banc
where	cd_estabelecimento	= cd_estabelecimento_p;

select	coalesce(max(a.cd_agencia_bancaria), '0'),
		coalesce(max(a.cd_conta), '0'),
		coalesce(max(a.ie_digito_conta), '0')
into STRICT	cd_agencia_bancaria_w,
		cd_conta_w,
		ie_digito_conta_w
from	banco_estabelecimento a
where	a.nr_sequencia	= nr_seq_conta_w;

select	min(a.dt_inicio),
		coalesce(max(a.dt_final),clock_timestamp())
into STRICT	dt_inicio_w,
		dt_final_w
from	banco_extrato a,
		banco_extrato_lanc b,
		concil_banc_pend_bco c
where	b.nr_seq_extrato	= a.nr_sequencia
and		c.nr_seq_lanc_extrato	= b.nr_sequencia
and		c.nr_seq_conciliacao	= nr_seq_conciliacao_p;

select	coalesce(min(a.dt_movimento), dt_inicio_w),
		fim_dia(coalesce(max(a.dt_movimento), dt_final_w))
into STRICT	dt_inicio_lanc_w,
		dt_final_lanc_w
from	banco_extrato_lanc a,
		concil_banc_pend_bco b
where	b.nr_seq_lanc_extrato	= a.nr_sequencia
and		b.nr_seq_conciliacao	= nr_seq_conciliacao_p;

ie_saldo_atual_w := obter_param_usuario(814, 65, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_saldo_atual_w);
ds_qt_dias_futuros_w := obter_param_usuario(814, 85, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ds_qt_dias_futuros_w);
ds_qt_dias_passados_w := obter_param_usuario(814, 86, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ds_qt_dias_passados_w);

ie_saldo_atual_w := coalesce(ie_saldo_atual_w,'N');
qt_dias_futuros_w	:= coalesce(somente_numero(substr(ds_qt_dias_futuros_w,1,4)),0);
qt_dias_passados_w	:= coalesce(somente_numero(substr(ds_qt_dias_passados_w,1,4)),0);
dt_inicio_trunc_w	:= trunc(dt_inicio_lanc_w,'dd');

insert	into CONCIL_BANC_PEND_TASY(NR_SEQUENCIA,
		NR_SEQ_CONCILIACAO,
		NR_SEQ_MOVTO_TRANS,
		DT_ATUALIZACAO,
		NM_USUARIO)
SELECT	nextval('concil_banc_pend_tasy_seq'),
		nr_seq_conciliacao_p,
		a.nr_sequencia,
		clock_timestamp(),
		nm_usuario_p
from	movto_trans_financ a,
		banco_saldo b
where 	(
			(
				ie_saldo_atual_w = 'N'
				and 
				a.dt_transacao between dt_inicio_lanc_w - qt_dias_passados_w and dt_final_lanc_w + qt_dias_futuros_w
			)
			or (
				a.dt_transacao between dt_inicio_trunc_w and dt_final_lanc_w
			)
		)
		and	
		a.nr_seq_saldo_banco	= b.nr_sequencia
		and	
		coalesce(a.nr_seq_concil::text, '') = ''
		and	
		a.ie_conciliacao	= 'N'
		and (
			b.nr_seq_conta = nr_seq_conta_w 
			or (
				ie_conciliacao_conta_w = 'S'
				and 
				exists (SELECT	1
						from	banco_estabelecimento y
						where	coalesce(y.cd_agencia_bancaria,'0') = cd_agencia_bancaria_w
						and		coalesce(y.cd_conta,'0') = cd_conta_w
						and		coalesce(y.ie_digito_conta,'0') = ie_digito_conta_w
						and		y.nr_sequencia	= b.nr_seq_conta)
			)
		)
		and (
			coalesce(a.nr_seq_movto_orig::text, '') = ''
			or 
			ie_inclui_estorno_w = 'S'
		)
		and 
		not exists (select	1
					from	concil_banc_pend_tasy z
					where	z.nr_seq_movto_trans	= a.nr_sequencia
					and		z.nr_seq_conciliacao	= nr_seq_conciliacao_p);

insert	into CONCIL_BANC_PEND_BCO(nr_sequencia,
		NR_SEQ_CONCILIACAO,
		DT_ATUALIZACAO,
		NM_USUARIO,
		NR_SEQ_LANC_EXTRATO)
SELECT	nextval('concil_banc_pend_bco_seq'),
		nr_seq_conciliacao_p,
		clock_timestamp(),
		nm_usuario_p,
		a.nr_sequencia
from	banco_extrato_lanc a,
		banco_extrato b
where	coalesce(a.nr_seq_concil::text, '') = ''
		and		
		a.nr_seq_extrato	= b.nr_sequencia
		and		
		b.nr_seq_conta		= nr_seq_conta_w
		and		
		a.ie_conciliacao	= 'N'
		and		
		(
			(ie_saldo_atual_w = 'S' and a.dt_movimento between dt_inicio_lanc_w - qt_dias_passados_w and dt_final_lanc_w + qt_dias_futuros_w)
			or (ie_saldo_atual_w = 'N')
		)
		and		
		not exists (	SELECT	1
						from	concil_banc_pend_bco x
						where	x.nr_seq_lanc_extrato = a.nr_sequencia
						and		x.nr_seq_conciliacao  = nr_seq_conciliacao_p
					);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_concil_banc_pend (nr_seq_conciliacao_p bigint, nm_usuario_p text, cd_estabelecimento_p text) FROM PUBLIC;

