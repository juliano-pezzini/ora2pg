-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE far_gerar_itens_nf ( nr_seq_nf_p bigint, cd_material_p bigint, vl_item_p bigint, vl_desconto_p bigint, cd_local_estoque_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_item_w			integer;
cd_serie_nf_w			nota_fiscal.cd_serie_nf%type;
vl_liquido_w			double precision;
vl_desconto_w			double precision;
cd_cgc_w			varchar(14);
nr_nota_w			varchar(255);
nr_sequencia_nf_w			bigint;
cd_natureza_w			smallint;
dt_entrada_saida_w		timestamp;
cd_operacao_nf_w			smallint;
cd_operacao_estoque_w		smallint;
cd_unidade_venda_w		varchar(30);
cd_unidade_estoque_w		varchar(30);
cd_material_estoque_w		varchar(30);
cd_conta_w			varchar(20);
cd_centro_custo_w			integer;
qt_item_estoque_w			double precision;


BEGIN

vl_desconto_w	:= coalesce(vl_desconto_p,0);

vl_liquido_w	:= (vl_item_p - vl_desconto_w);

select	max(coalesce(nr_item_nf,0))+ 1
into STRICT	nr_item_w
from	nota_fiscal_item
where	nr_sequencia = nr_seq_nf_p;

if (coalesce(nr_item_w::text, '') = '') then
	nr_item_w	:= 1;
end if;

select	cd_cgc_emitente,
	nr_nota_fiscal,
	cd_serie_nf,
	nr_sequencia_nf,
	cd_natureza_operacao,
	dt_entrada_saida,
	cd_operacao_nf
into STRICT	cd_cgc_w,
	nr_nota_w,
	cd_serie_nf_w,
	nr_sequencia_nf_w,
	cd_natureza_w,
	dt_entrada_saida_w,
	cd_operacao_nf_w
from	nota_fiscal
where	nr_sequencia = nr_seq_nf_p;

select 	cd_operacao_estoque
into STRICT	cd_operacao_estoque_w
from 	operacao_nota
where 	cd_operacao_nf = cd_operacao_nf_w;

select	coalesce(b.cd_unidade_venda, substr(obter_dados_material_estab(a.cd_material,cd_estabelecimento_p,'UMS'),1,30)),
	coalesce(b.qt_conv_estoque_venda,a.qt_conv_estoque_consumo),
       	substr(obter_dados_material_estab(a.cd_material,cd_estabelecimento_p,'UME'),1,30) cd_unidade_medida_estoque,
       	a.cd_material_estoque
into STRICT	cd_unidade_venda_w,
	qt_item_estoque_w,
	cd_unidade_estoque_w,
	cd_material_estoque_w
from   	material a,
       	material_estab b
where  	a.cd_material = cd_material_p
and    	b.cd_material = a.cd_material
and    	b.cd_estabelecimento = cd_estabelecimento_p;

SELECT * FROM define_conta_material(cd_estabelecimento_p, cd_material_p, 3, null, 0, null, 0, 0, 0, '', cd_local_estoque_p, cd_operacao_estoque_w, dt_entrada_saida_w, cd_conta_w, cd_centro_custo_w, '') INTO STRICT cd_conta_w, cd_centro_custo_w;
			

insert into nota_fiscal_item(
		nr_sequencia,
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_sequencia_nf,
		nr_item_nf,
		cd_natureza_operacao,
		qt_item_nf,
		vl_unitario_item_nf,
		vl_total_item_nf,
		dt_atualizacao,
		nm_usuario,
		vl_frete,
		vl_desconto,
		vl_despesa_acessoria,
		cd_material,
		cd_local_estoque,
		cd_unidade_medida_compra,
		qt_item_estoque,
		cd_unidade_medida_estoque,
		cd_conta_contabil,
		vl_desconto_rateio,
		vl_seguro,
		cd_material_estoque,
		vl_liquido,
		pr_desconto,
		pr_desc_financ,
		vl_desc_financ,
		nr_nota_fiscal,
		ie_indeterminado,
		cd_sequencia_parametro) values (nr_seq_nf_p,
			cd_estabelecimento_p,
			cd_cgc_w,
			cd_serie_nf_w,
			nr_sequencia_nf_w,
			nr_item_w,
			cd_natureza_w,
			1,
			vl_item_p,
			vl_item_p,
			clock_timestamp(),
			nm_usuario_p,
			0,
			vl_desconto_w,
			0,
			cd_material_p,
			cd_local_estoque_p,
			cd_unidade_venda_w,
			qt_item_estoque_w,
			cd_unidade_estoque_w,
			cd_conta_w,
			0,
			0,
			cd_material_estoque_w,
			vl_liquido_w,
			0,
			0,
			0,
			nr_nota_w,
			'N',
			philips_contabil_pck.get_parametro_conta_contabil);
			
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE far_gerar_itens_nf ( nr_seq_nf_p bigint, cd_material_p bigint, vl_item_p bigint, vl_desconto_p bigint, cd_local_estoque_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

