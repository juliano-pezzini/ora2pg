-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_preco_mat_adicional ( cd_estabelecimento_p bigint, nr_seq_material_p bigint, dt_vigencia_p timestamp, tx_ajuste_tab_p bigint, nr_seq_fornecedor_p bigint, vl_material_p INOUT bigint, dt_ult_vigencia_p INOUT timestamp, ds_versao_tiss_p text default '') AS $body$
DECLARE


vl_material_w		double precision;
dt_inicio_vigencia_w	timestamp;
cd_prestador_w		pls_fornec_mat_fed_sc.cd_fornecedor%type;
nr_seq_mat_unimed_w 	pls_mat_unimed_fed_sc.nr_sequencia%type;

C01 CURSOR(	nr_seq_mat_unimed_pc 	pls_mat_unimed_fed_sc.nr_sequencia%type,
		dt_vigencia_pc		pls_mat_uni_fed_sc_preco.dt_preco%type,
		cd_prestador_pc		pls_fornec_mat_fed_sc.cd_fornecedor%type)FOR
	SELECT 	x.vl_preco,
		x.dt_preco
	from (	SELECT	c.vl_preco,
			c.dt_preco
		from	pls_mat_uni_fed_sc_preco c
		where	c.dt_preco <= dt_vigencia_pc
		and	coalesce(c.cd_fornecedor_fed_sc::text, '') = ''
		and	c.nr_seq_mat_unimed = nr_seq_mat_unimed_pc
		and	c.ie_situacao = 'A'
		
union all

		select	c.vl_preco,
			c.dt_preco
		from	pls_mat_uni_fed_sc_preco c
		where	c.dt_preco <= dt_vigencia_pc
		and	c.cd_fornecedor_fed_sc = coalesce(cd_prestador_pc, c.cd_fornecedor_fed_sc)
		and	c.nr_seq_mat_unimed = nr_seq_mat_unimed_pc
		and	c.ie_situacao = 'A') x
	order by x.dt_preco;

BEGIN

-- busca o fornecedor do material
select 	max(b.cd_fornecedor)
into STRICT	cd_prestador_w
from	pls_prestador a,
	pls_fornec_mat_fed_sc b
where	a.nr_sequencia = nr_seq_fornecedor_p
and	b.cd_cgc = a.cd_cgc;

-- tenta pegar a sequencia do material unimed com a versao tiss
select	max(a.nr_sequencia)
into STRICT	nr_seq_mat_unimed_w
from	pls_material b,
	pls_mat_unimed_fed_sc a
where	b.nr_sequencia = nr_seq_material_p
and	b.cd_estabelecimento = cd_estabelecimento_p
and	a.cd_material = b.cd_material_ops
and	a.ds_versao_tiss = ds_versao_tiss_p
and	a.cd_estabelecimento = cd_estabelecimento_p;

-- se não encontrou tenta com versao sendo nula
if (coalesce(nr_seq_mat_unimed_w::text, '') = '') then

	select	max(a.nr_sequencia)
	into STRICT	nr_seq_mat_unimed_w
	from	pls_material b,
		pls_mat_unimed_fed_sc a
	where	b.nr_sequencia = nr_seq_material_p
	and	b.cd_estabelecimento = cd_estabelecimento_p
	and	a.cd_material = b.cd_material_ops
	and	coalesce(a.ds_versao_tiss::text, '') = ''
	and	a.cd_estabelecimento = cd_estabelecimento_p;
end if;

-- o ultimo registro é o válido
for r_C01_w in C01(nr_seq_mat_unimed_w, dt_vigencia_p, cd_prestador_w) loop

	vl_material_w := r_C01_w.vl_preco;
	dt_inicio_vigencia_w := r_C01_w.dt_preco;
end loop;
-- caso seja informado a taxa de ajuste multiplica, ela é obrigatória então caso seja nulo
-- multiplico por zero para não retornar zero
vl_material_p := coalesce(vl_material_w,0) * coalesce(tx_ajuste_tab_p, 0);
dt_ult_vigencia_p := coalesce(dt_inicio_vigencia_w,clock_timestamp());

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_preco_mat_adicional ( cd_estabelecimento_p bigint, nr_seq_material_p bigint, dt_vigencia_p timestamp, tx_ajuste_tab_p bigint, nr_seq_fornecedor_p bigint, vl_material_p INOUT bigint, dt_ult_vigencia_p INOUT timestamp, ds_versao_tiss_p text default '') FROM PUBLIC;

