-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_aprov_exame_regra ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, nm_usuario_p text, ie_opcao_p text, cd_perfil_ativo_p bigint, ds_consistencia_p INOUT text, cd_funcao_p bigint default null) AS $body$
DECLARE

/*
	ie_opcao_p		'A' para aprovação 'L' para liberação do exame
*/
nr_seq_exame_w			bigint;
ie_tipo_atendimento_w		smallint;
ie_carater_inter_sus_w		smallint;
nr_seq_grupo_exame_w		bigint;
nr_seq_grupo_imp_w		bigint;
ie_valor_referencia_w		varchar(5);
ie_valores_aceitaveis_w2		varchar(5);
cd_perfil_w			integer;
ie_permite_liberar_w		varchar(1);
ie_permite_aprovar_w		varchar(1);
ie_tipo_atendimento_w2		smallint;
ie_formato_resultado_w		varchar(5);
ie_carater_inter_sus_w2		smallint;
nr_seq_grupo_exame_w2		bigint;
nr_seq_grupo_imp_w2		bigint;
nr_seq_exame_w2			bigint;
ds_resultado_w			varchar(4000);
qt_resultado_w			double precision;
pr_resultado_w			double precision;
qt_maxima_w			double precision;
qt_minima_w			double precision;
pr_maximo_w			double precision;
pr_minimo_w			double precision;
ds_referencia_w			varchar(4000);
nm_usuario_w			varchar(255);
qt_regra_w			integer;
ie_result_valor_referencia_w		varchar(2);
possui_result_nao_aceit_w		varchar(1);

C01 CURSOR FOR
	SELECT	ie_tipo_atendimento,
			ie_carater_inter_sus,
			nr_seq_grupo_exame,
			nr_seq_grupo_imp,
			nr_seq_exame,
			coalesce(ie_valor_referencia,'A'),
			ie_valores_aceitaveis,
			nm_usuario_regra,
			cd_perfil,
			ie_permite_liberar,
			ie_permite_aprovar
	FROM	regra_aprovacao_exame
	WHERE	((nm_usuario_regra = nm_usuario_p) OR (coalesce(nm_usuario_regra::text, '') = ''))
	AND		((ie_tipo_atendimento = ie_tipo_atendimento_w )OR (coalesce(ie_tipo_atendimento::text, '') = ''))
	AND		((ie_carater_inter_sus = ie_carater_inter_sus_w )OR (coalesce(ie_carater_inter_sus::text, '') = ''))
	AND		((nr_seq_grupo_exame = nr_seq_grupo_exame_w )OR (coalesce(nr_seq_grupo_exame::text, '') = ''))
	AND		((nr_seq_grupo_imp = nr_seq_grupo_imp_w )OR (coalesce(nr_seq_grupo_imp::text, '') = ''))
	AND		((nr_seq_exame = nr_seq_exame_w )OR (coalesce(nr_seq_exame::text, '') = ''))
	AND		((coalesce(ie_valores_aceitaveis,'A') = 'A') OR ( CASE WHEN ie_valores_aceitaveis='S' THEN 'N'  ELSE 'S' END  = possui_result_nao_aceit_w ))
	AND		((cd_perfil = cd_perfil_ativo_p )OR (coalesce(cd_perfil::text, '') = ''))
	AND		((ie_utilizacao = coalesce(cd_funcao_p, 722)) or (coalesce(ie_utilizacao, 0) = 0))
	ORDER BY 8,5,3,4,9,1,2,10,11;

C03 CURSOR FOR
	SELECT 	c.nr_seq_grupo_imp,
		c.nr_seq_grupo,
		c.nr_seq_exame,
		f.ie_carater_inter_sus,
		obter_formato_result_exame(b.nr_seq_exame, b.nr_seq_material),
		ds_resultado,
		coalesce(qt_resultado,0),
		coalesce(pr_resultado,0),
		coalesce(qt_maxima,9999999),
		coalesce(qt_minima,-999999),
		coalesce(pr_maximo,100),
		coalesce(pr_minimo,0),
		ds_referencia,
		f.ie_tipo_atendimento
	FROM	exame_laboratorio c,
		exame_lab_result_item b,
		exame_lab_resultado a,
		prescr_procedimento d,
		prescr_medica	e,
		atendimento_paciente f
	WHERE 	a.nr_seq_resultado	= b.nr_seq_resultado
	  AND 	d.nr_seq_exame		= c.nr_seq_exame
	  AND	a.nr_prescricao 	= d.nr_prescricao
	  AND	d.nr_sequencia 		= b.nr_seq_prescr
	  AND	d.nr_prescricao		= e.nr_prescricao
	  AND	e.nr_atendimento	= f.nr_atendimento
	  AND 	a.nr_prescricao		= nr_prescricao_p
	  AND 	((d.nr_sequencia		= nr_seq_prescr_p)or (nr_seq_prescr_p = 0))
	  ORDER BY 2;

BEGIN


SELECT 	COUNT(*)
INTO STRICT	qt_regra_w
FROM 	regra_aprovacao_exame;


IF (qt_regra_w > 0)  THEN

	possui_result_nao_aceit_w := verifica_result_nao_aceitavel(nr_prescricao_p, nr_seq_prescr_p, possui_result_nao_aceit_w);

	OPEN C03;
	LOOP
	FETCH C03 INTO
		nr_seq_grupo_imp_w,
		nr_seq_grupo_exame_w,
		nr_seq_exame_w,
		ie_carater_inter_sus_w,
		ie_formato_resultado_w,
		ds_resultado_w,
		qt_resultado_w,
		pr_resultado_w,
		qt_maxima_w,
		qt_minima_w,
		pr_maximo_w,
		pr_minimo_w,
		ds_referencia_w,
		ie_tipo_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
	BEGIN
		if (ie_opcao_p = 'A') then
			-- 'Exame '||obter_desc_exame(nr_seq_exame_w)||' da prescrição '||nr_prescricao_p||' não pode ser aprovado. Verifique regras de aprovação/liberação';
			ds_consistencia_p := Wheb_mensagem_pck.get_texto(306446, 'DS_EXAME='||obter_desc_exame(nr_seq_exame_w)||';NR_PRESCRICAO_P='||nr_prescricao_p);
		else
			-- 'Exame '||obter_desc_exame(nr_seq_exame_w)||' da prescrição '||nr_prescricao_p||' não pode ser liberado. Verifique regras de aprovação/liberação';
			ds_consistencia_p := Wheb_mensagem_pck.get_texto(306449, 'DS_EXAME='||obter_desc_exame(nr_seq_exame_w)||';NR_PRESCRICAO_P='||nr_prescricao_p);
		end if;

		ie_result_valor_referencia_w := 'N';

		OPEN C01;
		LOOP
		FETCH C01 INTO
			ie_tipo_atendimento_w2,
			ie_carater_inter_sus_w2,
			nr_seq_grupo_exame_w2,
			nr_seq_grupo_imp_w2,
			nr_seq_exame_w2,
			ie_valor_referencia_w,
			ie_valores_aceitaveis_w2,
			nm_usuario_w,
			cd_perfil_w,
			ie_permite_liberar_w,
			ie_permite_aprovar_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			BEGIN

			/* Valida os valores de referência do resultado */

			ie_result_valor_referencia_w := 'ok';
			IF (ie_valor_referencia_w <> 'A') THEN
				ie_result_valor_referencia_w := 'D';
				IF (ie_formato_resultado_w = 'V') OR (ie_formato_resultado_w = 'VP') THEN
					IF	NOT(qt_resultado_w BETWEEN qt_minima_w AND qt_maxima_w) THEN
						ie_result_valor_referencia_w := 'F';
					END IF;
				END IF;

				IF (ie_formato_resultado_w = 'P') OR (ie_formato_resultado_w = 'VP') THEN
					IF	NOT(pr_resultado_w BETWEEN pr_minimo_w AND pr_maximo_w) THEN
						ie_result_valor_referencia_w := 'F';
					END IF;
				END IF;

				IF (ie_formato_resultado_w = 'SM') OR (ie_formato_resultado_w = 'SDM') OR (ie_formato_resultado_w = 'S') OR (ie_formato_resultado_w = 'MS') OR (ie_formato_resultado_w = 'MSL') OR (ie_formato_resultado_w = 'DL') OR (ie_formato_resultado_w = 'DV') OR (ie_formato_resultado_w = 'D') THEN
					IF NOT(UPPER(ELIMINA_ACENTOS(ds_resultado_w)) LIKE UPPER(ELIMINA_ACENTOS(ds_referencia_w))) THEN
						ie_result_valor_referencia_w := 'F';
					END IF;
				END IF;
				IF (ie_valor_referencia_w = ie_result_valor_referencia_w) THEN
					ie_result_valor_referencia_w := 'ok';
				END IF;

			END IF;


			IF (ie_result_valor_referencia_w = 'ok') THEN
				IF (ie_opcao_p = 'A') THEN
					IF (ie_permite_aprovar_w = 'S') THEN
						ds_consistencia_p := '';
					END IF;
				ELSE
					IF (ie_permite_liberar_w = 'S') THEN
						 ds_consistencia_p := '';
					END IF;
				END IF;
			 exit;
			END IF;

			END;
		END LOOP;
		CLOSE C01;

		IF (ie_result_valor_referencia_w = 'N') THEN
			 ds_consistencia_p := '';
		END IF;

		END;


	END LOOP;
	CLOSE C03;
END IF;



END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_aprov_exame_regra ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, nm_usuario_p text, ie_opcao_p text, cd_perfil_ativo_p bigint, ds_consistencia_p INOUT text, cd_funcao_p bigint default null) FROM PUBLIC;

