-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sup_gerar_alerta ( cd_funcao_p bigint, nr_documento_p bigint, ie_evento_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_cnpj_w				sup_alerta_evento_restr.cd_cnpj%type;
cd_operacao_w			sup_alerta_evento_restr.cd_operacao_nf%type;
cd_natureza_operacao_w	sup_alerta_evento_restr.cd_natureza_operacao%type;
cd_condicao_pagamento_w	sup_alerta_evento_restr.cd_condicao_pagamento%type;
cd_serie_nf_w			sup_alerta_evento_restr.cd_serie_nf%type;
nr_seq_alerta_w			sup_alerta.nr_sequencia%type;
cd_local_estoque_w		solic_compra.cd_local_estoque%type;
cd_centro_custo_w		solic_compra.cd_centro_custo%type;


qt_existe_w				integer;

C01 CURSOR FOR
	SELECT	a.nr_sequencia
	from	sup_alerta a,
			sup_alerta_evento b,
			sup_alerta_evento_restr c
	where	a.nr_sequencia = b.nr_seq_alerta
	and		b.nr_sequencia = c.nr_seq_evento
	and		a.cd_estabelecimento = cd_estabelecimento_p
	and		a.ie_situacao = 'A'
	and		((a.cd_funcao = cd_funcao_p
	and		b.ie_evento = 1
	and		coalesce(c.cd_cnpj,cd_cnpj_w) = cd_cnpj_w
	and		coalesce(c.cd_operacao_nf,cd_operacao_w) = cd_operacao_w
	and		coalesce(c.cd_natureza_operacao,cd_natureza_operacao_w) = cd_natureza_operacao_w
	and		coalesce(c.cd_condicao_pagamento,cd_condicao_pagamento_w) = cd_condicao_pagamento_w
	and		coalesce(c.cd_serie_nf,cd_serie_nf_w) = cd_serie_nf_w) or (a.cd_funcao = cd_funcao_p
			and		b.ie_evento = 2
			and		coalesce(c.cd_centro_custo,cd_centro_custo_w) = cd_centro_custo_w
			and		coalesce(c.cd_local_estoque,cd_local_estoque_w) = cd_local_estoque_w))
    and		clock_timestamp() between inicio_dia(a.dt_inicio_vigencia) and fim_dia(a.dt_fim_vigencia)
	and		not	exists (SELECT	1
				from	sup_alerta_gerado x
				where 	x.nr_documento = nr_documento_p
				and		x.cd_funcao = cd_funcao_p
				and		x.nr_seq_alerta = a.nr_sequencia)
	and 	((a.ie_emissao_alerta = 'S') or
			((a.ie_emissao_alerta = 'U') and not exists (
													select	1
													from 	sup_alerta_gerado x
													where 	a.nr_sequencia = x.nr_seq_alerta)))
	and		((not exists (
					select	1
					from   	sup_alerta_evento_aplic x
					where  	b.nr_sequencia = x.nr_seq_evento)) or (exists (
					select	1
					from   	sup_alerta_evento_aplic x
					where  	b.nr_sequencia = x.nr_seq_evento
					and	   	x.nm_usuario_aplic = nm_usuario_p)));


BEGIN

if (cd_funcao_p = 40) then

	select 	coalesce(cd_cgc_emitente,'X'),
			coalesce(cd_operacao_nf,0),
			coalesce(cd_natureza_operacao,0),
			coalesce(cd_condicao_pagamento,0),
			coalesce(cd_serie_nf,'X')
	into STRICT	cd_cnpj_w,
			cd_operacao_w,
			cd_natureza_operacao_w,
			cd_condicao_pagamento_w,
			cd_serie_nf_w
	from	nota_fiscal
	where 	nr_sequencia = nr_documento_p;

elsif (cd_funcao_p = 913) then

	select 	coalesce(cd_local_estoque,0),
			coalesce(cd_centro_custo,0)
	into STRICT	cd_local_estoque_w,
			cd_centro_custo_w
	from	solic_compra
	where 	nr_solic_compra = nr_documento_p;

end if;



open C01;
loop
fetch C01 into
	nr_seq_alerta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	insert into sup_alerta_gerado(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_alerta,
			cd_funcao,
			ie_evento,
			ie_verificado,
			nr_documento )
	values (	nextval('sup_alerta_gerado_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_alerta_w,
			cd_funcao_p,
			ie_evento_p,
			'N',
			nr_documento_p );
	end;
end loop;
close C01;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_gerar_alerta ( cd_funcao_p bigint, nr_documento_p bigint, ie_evento_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

