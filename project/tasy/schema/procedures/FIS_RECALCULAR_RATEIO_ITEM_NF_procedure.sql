-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_recalcular_rateio_item_nf (nr_seq_nota_p bigint, nr_item_nf_p bigint, nm_usuario_p text, vl_item_p bigint, qt_item_p bigint) AS $body$
DECLARE


vl_item_w		nota_fiscal_item_rateio.vl_rateio%type;
qt_item_w		nota_fiscal_item_rateio.qt_rateio%type;
vl_rateio_w		nota_fiscal_item_rateio.vl_rateio%type;
qt_rateio_w		nota_fiscal_item_rateio.qt_rateio%type;
nr_sequencia_w		nota_fiscal_item_rateio.nr_sequencia%type;

vl_rateio_calculado_w	nota_fiscal_item_rateio.vl_rateio%type;
qt_rateio_calculada_w	nota_fiscal_item_rateio.qt_rateio%type;

vl_diferencia_w		double precision;

c01 CURSOR FOR
SELECT 	coalesce(a.vl_rateio,0),
	coalesce(a.qt_rateio,0),
	a.nr_sequencia
from 	nota_fiscal_item_rateio a
where 	a.nr_seq_nota = nr_seq_nota_p
and	a.nr_item_nf = nr_item_nf_p;


BEGIN

if (nr_seq_nota_p > 0) and (nr_item_nf_p > 0) then

	select 	coalesce(sum(a.vl_rateio),0),
		coalesce(sum(a.qt_rateio),0)
	into STRICT	vl_item_w,
		qt_item_w
	from 	nota_fiscal_item_rateio a
	where 	a.nr_seq_nota = nr_seq_nota_p
	and	a.nr_item_nf = nr_item_nf_p;

	open C01;
	loop
	fetch C01 into
		vl_rateio_w,
		qt_rateio_w,
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		vl_rateio_calculado_w := null;
		qt_rateio_calculada_w := null;


		if (qt_rateio_w > 0) then
			qt_rateio_calculada_w := (qt_item_p / (qt_item_w / qt_rateio_w));
		end if;

		if (vl_rateio_w > 0) then
			if (qt_rateio_calculada_w > 0) then
				vl_rateio_calculado_w := (vl_item_p * (qt_rateio_calculada_w / qt_item_p));
			else
				vl_rateio_calculado_w := (vl_item_p / (vl_item_w / vl_rateio_w));
			end if;
		end if;

		if (vl_rateio_calculado_w > 0) or (qt_rateio_calculada_w > 0) then
			update 	nota_fiscal_item_rateio
			set	vl_rateio = vl_rateio_calculado_w,
				qt_rateio = qt_rateio_calculada_w
			where	nr_seq_nota = nr_seq_nota_p
			and	nr_item_nf = nr_item_nf_p
			and	nr_sequencia = nr_sequencia_w;
		end if;

		end;
	end loop;
	close C01;

	select 	coalesce(sum(a.vl_rateio),0),
		coalesce(sum(a.qt_rateio),0)
	into STRICT	vl_item_w,
		qt_item_w
	from 	nota_fiscal_item_rateio a
	where 	a.nr_seq_nota = nr_seq_nota_p
	and	a.nr_item_nf = nr_item_nf_p;

	vl_diferencia_w := vl_item_p - vl_item_w;

	if (vl_diferencia_w >= -0.10) and (vl_diferencia_w <=  0.10) then

		select 	max(nr_sequencia)
		into STRICT	nr_sequencia_w
		from 	nota_fiscal_item_rateio
		where	nr_seq_nota = nr_seq_nota_p
		and	nr_item_nf = nr_item_nf_p
		and	vl_rateio >=	(SELECT	max(vl_rateio)
					from	nota_fiscal_item_rateio
					where	nr_seq_nota = nr_seq_nota_p
					and	nr_item_nf = nr_item_nf_p);

		update	nota_fiscal_item_rateio
		set	vl_rateio = vl_rateio + vl_diferencia_w
		where	nr_sequencia = nr_sequencia_w  LIMIT 1;
	end if;

	vl_diferencia_w := qt_item_p - qt_item_w;

	if (vl_diferencia_w >= -0.10) and (vl_diferencia_w <=  0.10) then

		select 	max(nr_sequencia)
		into STRICT	nr_sequencia_w
		from 	nota_fiscal_item_rateio
		where	nr_seq_nota = nr_seq_nota_p
		and	nr_item_nf = nr_item_nf_p
		and	qt_rateio >=	(SELECT	max(qt_rateio)
					from	nota_fiscal_item_rateio
					where	nr_seq_nota = nr_seq_nota_p
					and	nr_item_nf = nr_item_nf_p);

		update	nota_fiscal_item_rateio
		set	qt_rateio = qt_rateio + vl_diferencia_w
		where	nr_sequencia = nr_sequencia_w  LIMIT 1;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_recalcular_rateio_item_nf (nr_seq_nota_p bigint, nr_item_nf_p bigint, nm_usuario_p text, vl_item_p bigint, qt_item_p bigint) FROM PUBLIC;

