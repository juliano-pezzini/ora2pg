-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_copiar_regras_mensalidade ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_tipo_mens_w	bigint;
nr_seq_motivo_notif_w	bigint;
nr_seq_motivo_canc_w	bigint;
nr_seq_vincula_pag_w	bigint;
nr_seq_tipo_lanc_adic_w	bigint;
qt_registros_w		bigint;
nr_seq_tipo_lan_ant_w	bigint;
nr_seq_tipo_lan_novo_w	bigint;


C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_tipo_lanc_adic
	where	cd_estabelecimento	= cd_estab_origem_p;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_motivo_isencao_notific
	where	cd_estabelecimento	= cd_estab_origem_p;

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_motivo_canc_mens
	where	cd_estabelecimento	= cd_estab_origem_p;

C04 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_vinculo_pagador
	where	cd_estabelecimento	= cd_estab_origem_p;

C05 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_tipo_item_mens
	where	cd_estabelecimento	= cd_estab_origem_p;


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_tipo_lanc_adic_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	count(*)
	into STRICT	qt_registros_w
	from	pls_tipo_lanc_adic
	where	cd_estabelecimento	= cd_estab_destino_p
	and	nr_seq_anterior		= nr_seq_tipo_lanc_adic_w;

	if (qt_registros_w	= 0) then
		insert into pls_tipo_lanc_adic(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				cd_estabelecimento,ds_tipo_lancamento,ie_situacao,nr_seq_anterior)
			(SELECT	nextval('pls_tipo_lanc_adic_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				cd_estab_destino_p,ds_tipo_lancamento,ie_situacao,nr_seq_tipo_lanc_adic_w
			from	pls_tipo_lanc_adic
			where	nr_sequencia	= nr_seq_tipo_lanc_adic_w);
	end if;

	end;
end loop;
close C01;


open C02;
loop
fetch C02 into
	nr_seq_motivo_notif_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	select	count(*)
	into STRICT	qt_registros_w
	from	pls_motivo_isencao_notific
	where	cd_estabelecimento	= cd_estab_destino_p
	and	nr_seq_anterior		= nr_seq_motivo_notif_w;

	if (qt_registros_w = 0) then
		insert into pls_motivo_isencao_notific(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				cd_estabelecimento,ds_motivo_isencao,ie_situacao,nr_seq_anterior)
			(SELECT	nextval('pls_motivo_isencao_notific_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				cd_estab_destino_p,ds_motivo_isencao,ie_situacao,nr_seq_motivo_notif_w
			from	pls_motivo_isencao_notific
			where	nr_sequencia	= nr_seq_motivo_notif_w);
	end if;

	end;
end loop;
close C02;

open C03;
loop
fetch C03 into
	nr_seq_motivo_canc_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin

	select	count(*)
	into STRICT	qt_registros_w
	from	pls_motivo_canc_mens
	where	cd_estabelecimento	= cd_estab_destino_p
	and	nr_seq_anterior		= nr_seq_motivo_canc_w;

	if (qt_registros_w = 0) then
		insert into pls_motivo_canc_mens(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				cd_estabelecimento,ds_motivo,ie_situacao,nr_seq_anterior)
			(SELECT	nextval('pls_motivo_canc_mens_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				cd_estab_destino_p,ds_motivo,ie_situacao,nr_seq_motivo_canc_w
			from	pls_motivo_canc_mens
			where	nr_sequencia	= nr_seq_motivo_canc_w);
	end if;

	end;
end loop;
close C03;

open C04;
loop
fetch C04 into
	nr_seq_vincula_pag_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin

	select	count(*)
	into STRICT	qt_registros_w
	from	pls_vinculo_pagador
	where	cd_estabelecimento	= cd_estab_destino_p
	and	nr_seq_anterior		= nr_seq_vincula_pag_w;

	if (qt_registros_w = 0) then
		insert into pls_vinculo_pagador(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				cd_estabelecimento,ds_vinculo,ie_situacao,ie_proprio_pagador,
				nr_seq_anterior)
			(SELECT	nextval('pls_vinculo_pagador_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				cd_estab_destino_p,ds_vinculo,ie_situacao,ie_proprio_pagador,
				nr_seq_vincula_pag_w
			from	pls_vinculo_pagador
			where	nr_sequencia	= nr_seq_vincula_pag_w);
	end if;
	end;
end loop;
close C04;

open C05;
loop
fetch C05 into
	nr_seq_tipo_mens_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
	begin

	select	nr_seq_tipo_lanc
	into STRICT	nr_seq_tipo_lan_ant_w
	from	pls_tipo_item_mens
	where	nr_sequencia	= nr_seq_tipo_mens_w;

	begin
	select	nr_sequencia
	into STRICT	nr_seq_tipo_lan_novo_w
	from	pls_tipo_lanc_adic
	where	nr_seq_anterior	= nr_seq_tipo_lan_ant_w;
	exception
	when others then
		nr_seq_tipo_lan_novo_w	:= nr_seq_tipo_lan_ant_w;
	end;

	select	count(*)
	into STRICT	qt_registros_w
	from	pls_tipo_item_mens
	where	cd_estabelecimento	= cd_estab_destino_p
	and	nr_seq_anterior		= nr_seq_tipo_mens_w;

	if (qt_registros_w	= 0) then
		insert into pls_tipo_item_mens(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
			cd_estabelecimento,ie_tipo_item,cd_procedimento,ie_origem_proced,
			nr_seq_tipo_lanc,nr_seq_anterior, cd_material)
		(SELECT	nextval('pls_tipo_item_mens_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
			cd_estab_destino_p,ie_tipo_item,cd_procedimento,ie_origem_proced,
			nr_seq_tipo_lan_novo_w,nr_seq_tipo_mens_w, cd_material
		from	pls_tipo_item_mens
		where	nr_sequencia	= nr_seq_tipo_mens_w);

	end if;
	end;
end loop;
close C05;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_copiar_regras_mensalidade ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) FROM PUBLIC;

