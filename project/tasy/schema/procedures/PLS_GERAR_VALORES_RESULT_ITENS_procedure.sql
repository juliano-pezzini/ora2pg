-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_valores_result_itens ( dt_mes_referencia_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ X ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
ds_dominio_w			varchar(255);
--vl_dominio_w			varchar2(15); 
cd_cgc_estipulante_w		varchar(14);
cd_pf_estipulante_w		varchar(10);
ie_regulamentacao_w		varchar(10);
ie_tipo_beneficiario_w		varchar(5)	:= 'B';
ie_tipo_vinculo_operadora_w	varchar(2);
ie_tipo_contratacao_w		varchar(2);
ie_preco_w			varchar(2);
ie_valor_mensalidade_w		varchar(1);
vl_mensalidade_w		double precision;
vl_resultado_w			double precision;
vl_total_despesa_w		double precision	:= 0;
vl_total_imposto_w		double precision	:= 0;
vl_total_mensalidade_w		double precision	:= 0;
vl_rateado_despesa_w		double precision	:= 0;
vl_rateado_imposto_w		double precision	:= 0;
vl_rateado_provisao_w		double precision	:= 0;
vl_total_provisao_tecnica_w	double precision	:= 0;
vl_despesa_ops_w		double precision	:= 0;
vl_despesa_acidente_w		double precision	:= 0;
vl_despesa_pericia_w		double precision	:= 0;
vl_imposto_ops_w		double precision	:= 0;
vl_imposto_acidente_w		double precision	:= 0;
vl_imposto_pericia_w		double precision	:= 0;
vl_provisao_ops_w		double precision	:= 0;
vl_provisao_acidente_w		double precision	:= 0;
vl_provisao_pericia_w		double precision	:= 0;
vl_ressarcimento_sus_w		double precision	:= 0;
vl_desp_nao_assist_w		double precision	:= 0;
vl_encargos_w			double precision	:= 0;
vl_provisao_w			double precision	:= 0;
vl_contas_w			double precision	:= 0;
vl_reembolso_w			double precision	:= 0;
vl_comissao_w			double precision	:= 0;
nr_seq_segurado_w		bigint;
qt_contador_pb_w		bigint;
nr_sequencia_w			bigint;
nr_seq_plano_w			bigint;
nr_seq_intercambio_w 		pls_segurado.nr_seq_intercambio%type;
qt_registro_w			bigint;
nr_seq_contrato_w		bigint;
nr_seq_pagador_w		bigint;
nr_seq_grupo_contrato_w		bigint;
nr_seq_faixa_etaria_w		bigint;
nr_seq_idade_w			bigint;
nr_seq_mensalidade_w		bigint;
qt_idade_w			bigint;
nr_seq_operadora_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_repasse_mens_w		bigint;
nr_seq_conta_copart_w		bigint;
pr_rateio_w			double precision;
dt_referencia_w			timestamp;
dt_parametro_inicio_w		timestamp;
dt_parametro_fim_w		timestamp;
dt_parametro_inicio_ant_w	timestamp;
dt_parametro_fim_ant_w		timestamp;

qt_pendentes_w			bigint;
qt_commit_w			bigint;
nr_seq_operadora_estab_w	bigint;
cd_estabelecimento_w		smallint;

ie_pro_rata_dia_w		pls_parametros.ie_pro_rata_dia%type;
ie_forma_pagamento_w		pls_parametro_pagamento.ie_forma_pagamento%type;

C01 CURSOR FOR 
	SELECT	vl_dominio 
	from	valor_dominio 
	where	cd_dominio	= 2236 
	and	vl_dominio not in ('5','6','9') 
	order by vl_dominio;

/* Mensalidade */
 
C02 CURSOR(dt_parametro_inicio_pc	timestamp, 
	dt_parametro_fim_pc	timestamp, 
	cd_estabelecimento_pc	estabelecimento.cd_estabelecimento%type, 
	dt_referencia_pc	timestamp) FOR 
	SELECT	((sum(CASE WHEN coalesce(a.dt_contabilizacao::text, '') = '' THEN d.vl_item  ELSE coalesce(d.vl_pro_rata_dia,0) END ) - 
		 sum(CASE WHEN d.ie_tipo_item='3' THEN CASE WHEN coalesce(a.dt_contabilizacao::text, '') = '' THEN d.vl_item  ELSE coalesce(d.vl_pro_rata_dia,0) END   ELSE 0 END )) - 
		 sum(coalesce(d.vl_antecipacao,0))) vl_mensalidade, 
		c.nr_seq_segurado, 
		b.nr_sequencia nr_seq_mensalidade, 
		(SELECT	x.cd_cgc_estipulante 
		from	pls_contrato x 
		where	x.nr_sequencia = s.nr_seq_contrato) cd_cgc_estipulante, 
		(select	x.cd_pf_estipulante 
		from	pls_contrato x 
		where	x.nr_sequencia = s.nr_seq_contrato) cd_pf_estipulante, 
		coalesce(s.ie_tipo_segurado,'B') ie_tipo_segurado, 
		s.ie_tipo_vinculo_operadora, 
		s.nr_seq_contrato, 
		c.nr_seq_plano, 
		s.nr_seq_pagador, 
		s.nr_seq_intercambio, 
		c.qt_idade, 
		pl.ie_preco, 
		pl.ie_regulamentacao, 
		pl.ie_tipo_contratacao, 
		coalesce(pl.nr_seq_outorgante,nr_seq_operadora_estab_w) nr_seq_operadora 
	FROM pls_segurado s, pls_plano pl, pls_mensalidade_segurado c, pls_mensalidade b, pls_lote_mensalidade a, pls_mensalidade_seg_item d
LEFT OUTER JOIN pls_tipo_lanc_adic e ON (d.nr_seq_tipo_lanc = e.nr_sequencia)
WHERE c.nr_sequencia	= d.nr_seq_mensalidade_seg and b.nr_sequencia	= c.nr_seq_mensalidade and a.nr_sequencia	= b.nr_seq_lote and s.nr_sequencia	= c.nr_seq_segurado and c.nr_seq_plano	= pl.nr_sequencia  and coalesce(b.ie_cancelamento::text, '') = '' and ((d.ie_tipo_item not in ('20','11')) or (d.ie_tipo_item = '20' and e.ie_considera_receita = 'S')) and a.ie_status	= '2' and coalesce(b.ie_cancelamento::text, '') = '' and b.dt_referencia between dt_parametro_inicio_pc and dt_parametro_fim_pc and (a.ie_mensalidade_mes_anterior	= 'N' or coalesce(a.ie_mensalidade_mes_anterior::text, '') = '') and a.cd_estabelecimento	= cd_estabelecimento_pc and ie_pro_rata_dia_w	= 'S' and not exists (select	1 
				from	pls_resultado	x 
				where	b.nr_sequencia		= x.nr_seq_mensalidade 
				and	x.dt_mes_referencia	= dt_referencia_pc 
				and	x.ie_tipo_valor		= '1') group by 
		c.nr_seq_segurado, 
		b.nr_sequencia, 
		s.ie_tipo_segurado, 
		s.ie_tipo_vinculo_operadora, 
		s.nr_seq_contrato, 
		c.nr_seq_plano, 
		s.nr_seq_pagador, 
		s.nr_seq_intercambio, 
		c.qt_idade, 
		pl.ie_preco, 
		pl.ie_regulamentacao, 
		pl.ie_tipo_contratacao, 
		pl.nr_seq_outorgante 
	
union all
 
	select (sum(d.vl_item) - sum(CASE WHEN d.ie_tipo_item='3' THEN d.vl_item  ELSE 0 END )) vl_mensalidade, 
		c.nr_seq_segurado, 
		b.nr_sequencia nr_seq_mensalidade, 
		(select	x.cd_cgc_estipulante 
		from	pls_contrato x 
		where	x.nr_sequencia = s.nr_seq_contrato) cd_cgc_estipulante, 
		(select	x.cd_pf_estipulante 
		from	pls_contrato x 
		where	x.nr_sequencia = s.nr_seq_contrato) cd_pf_estipulante, 
		coalesce(s.ie_tipo_segurado,'B') ie_tipo_segurado, 
		s.ie_tipo_vinculo_operadora, 
		s.nr_seq_contrato, 
		c.nr_seq_plano, 
		s.nr_seq_pagador, 
		s.nr_seq_intercambio, 
		c.qt_idade, 
		pl.ie_preco, 
		pl.ie_regulamentacao, 
		pl.ie_tipo_contratacao, 
		coalesce(pl.nr_seq_outorgante,nr_seq_operadora_estab_w) nr_seq_operadora 
	FROM pls_segurado s, pls_plano pl, pls_mensalidade_segurado c, pls_mensalidade b, pls_lote_mensalidade a, pls_mensalidade_seg_item d
LEFT OUTER JOIN pls_tipo_lanc_adic e ON (d.nr_seq_tipo_lanc = e.nr_sequencia)
WHERE c.nr_sequencia	= d.nr_seq_mensalidade_seg and b.nr_sequencia	= c.nr_seq_mensalidade and a.nr_sequencia	= b.nr_seq_lote and s.nr_sequencia	= c.nr_seq_segurado and c.nr_seq_plano	= pl.nr_sequencia  and coalesce(b.ie_cancelamento::text, '') = '' and a.ie_status	= '2' and a.dt_mesano_referencia between dt_parametro_inicio_pc and dt_parametro_fim_pc and a.ie_mensalidade_mes_anterior	= 'S' and a.cd_estabelecimento	= cd_estabelecimento_pc and not exists (select	1 
				from	pls_resultado	x 
				where	b.nr_sequencia		= x.nr_seq_mensalidade 
				and	x.dt_mes_referencia	= dt_referencia_pc 
				and	x.ie_tipo_valor		= '1') group by 
		c.nr_seq_segurado, 
		b.nr_sequencia, 
		s.ie_tipo_segurado, 
		s.ie_tipo_vinculo_operadora, 
		s.nr_seq_contrato, 
		c.nr_seq_plano, 
		s.nr_seq_pagador, 
		s.nr_seq_intercambio, 
		c.qt_idade, 
		pl.ie_preco, 
		pl.ie_regulamentacao, 
		pl.ie_tipo_contratacao, 
		pl.nr_seq_outorgante 
	
union all
 
	select	sum(d.vl_antecipacao) vl_mensalidade, 
		c.nr_seq_segurado, 
		b.nr_sequencia nr_seq_mensalidade, 
		(select	x.cd_cgc_estipulante 
		from	pls_contrato x 
		where	x.nr_sequencia = s.nr_seq_contrato) cd_cgc_estipulante, 
		(select	x.cd_pf_estipulante 
		from	pls_contrato x 
		where	x.nr_sequencia = s.nr_seq_contrato) cd_pf_estipulante, 
		coalesce(s.ie_tipo_segurado,'B') ie_tipo_segurado, 
		s.ie_tipo_vinculo_operadora, 
		s.nr_seq_contrato, 
		c.nr_seq_plano, 
		s.nr_seq_pagador, 
		s.nr_seq_intercambio, 
		c.qt_idade, 
		pl.ie_preco, 
		pl.ie_regulamentacao, 
		pl.ie_tipo_contratacao, 
		coalesce(pl.nr_seq_outorgante,nr_seq_operadora_estab_w) nr_seq_operadora 
	FROM pls_segurado s, pls_plano pl, pls_mensalidade_segurado c, pls_mensalidade b, pls_lote_mensalidade a, pls_mensalidade_seg_item d
LEFT OUTER JOIN pls_tipo_lanc_adic e ON (d.nr_seq_tipo_lanc = e.nr_sequencia)
WHERE c.nr_sequencia	= d.nr_seq_mensalidade_seg and b.nr_sequencia	= c.nr_seq_mensalidade and a.nr_sequencia	= b.nr_seq_lote and s.nr_sequencia	= c.nr_seq_segurado and c.nr_seq_plano	= pl.nr_sequencia  and coalesce(b.ie_cancelamento::text, '') = '' and ((d.ie_tipo_item not in ('20','11')) or (d.ie_tipo_item = '20' and e.ie_considera_receita = 'S')) and (a.dt_contabilizacao IS NOT NULL AND a.dt_contabilizacao::text <> '') and a.ie_status	= '2' and coalesce(b.ie_cancelamento::text, '') = '' and d.dt_antecipacao between dt_parametro_inicio_pc and dt_parametro_fim_pc and (a.ie_mensalidade_mes_anterior	= 'N' or coalesce(a.ie_mensalidade_mes_anterior::text, '') = '') and a.cd_estabelecimento	= cd_estabelecimento_pc and ie_pro_rata_dia_w	= 'S' and not exists (select	1 
				from	pls_resultado	x 
				where	b.nr_sequencia		= x.nr_seq_mensalidade 
				and	x.dt_mes_referencia	= dt_referencia_pc 
				and	x.ie_tipo_valor		= '1') group by 
		c.nr_seq_segurado, 
		b.nr_sequencia, 
		s.ie_tipo_segurado, 
		s.ie_tipo_vinculo_operadora, 
		s.nr_seq_contrato, 
		c.nr_seq_plano, 
		s.nr_seq_pagador, 
		s.nr_seq_intercambio, 
		c.qt_idade, 
		pl.ie_preco, 
		pl.ie_regulamentacao, 
		pl.ie_tipo_contratacao, 
		pl.nr_seq_outorgante 
	
union all
 
	/* Antecipação / Pro-rata */
 
	select	sum(CASE WHEN coalesce(a.dt_contabilizacao::text, '') = '' THEN d.vl_antecipacao  ELSE 0 END ) vl_mensalidade, 
		c.nr_seq_segurado, 
		b.nr_sequencia nr_seq_mensalidade, 
		(select	x.cd_cgc_estipulante 
		from	pls_contrato x 
		where	x.nr_sequencia = s.nr_seq_contrato) cd_cgc_estipulante, 
		(select	x.cd_pf_estipulante 
		from	pls_contrato x 
		where	x.nr_sequencia = s.nr_seq_contrato) cd_pf_estipulante, 
		coalesce(s.ie_tipo_segurado,'B') ie_tipo_segurado, 
		s.ie_tipo_vinculo_operadora, 
		s.nr_seq_contrato, 
		c.nr_seq_plano, 
		s.nr_seq_pagador, 
		s.nr_seq_intercambio, 
		c.qt_idade, 
		pl.ie_preco, 
		pl.ie_regulamentacao, 
		pl.ie_tipo_contratacao, 
		coalesce(pl.nr_seq_outorgante,nr_seq_operadora_estab_w) nr_seq_operadora 
	FROM pls_segurado s, pls_plano pl, pls_mensalidade_segurado c, pls_mensalidade b, pls_lote_mensalidade a, pls_mensalidade_seg_item d
LEFT OUTER JOIN pls_tipo_lanc_adic e ON (d.nr_seq_tipo_lanc = e.nr_sequencia)
WHERE c.nr_sequencia	= d.nr_seq_mensalidade_seg and b.nr_sequencia	= c.nr_seq_mensalidade and a.nr_sequencia	= b.nr_seq_lote and s.nr_sequencia	= c.nr_seq_segurado and c.nr_seq_plano	= pl.nr_sequencia  and coalesce(b.ie_cancelamento::text, '') = '' and a.ie_status	= '2' and (a.ie_mensalidade_mes_anterior	= 'N' or coalesce(a.ie_mensalidade_mes_anterior::text, '') = '') and d.dt_antecipacao between dt_parametro_inicio_pc and dt_parametro_fim_pc and a.cd_estabelecimento	= cd_estabelecimento_pc and ((d.ie_tipo_item not in ('20','11')) or (d.ie_tipo_item = '20' and e.ie_considera_receita = 'S')) and ie_pro_rata_dia_w	= 'S' and not exists (select	1 
				from	pls_resultado	x 
				where	b.nr_sequencia		= x.nr_seq_mensalidade 
				and	x.dt_mes_referencia	= dt_referencia_pc 
				and	x.ie_tipo_valor		= '1') group by 
		c.nr_seq_segurado, 
		b.nr_sequencia, 
		s.ie_tipo_segurado, 
		s.ie_tipo_vinculo_operadora, 
		s.nr_seq_contrato, 
		c.nr_seq_plano, 
		s.nr_seq_pagador, 
		s.nr_seq_intercambio, 
		c.qt_idade, 
		pl.ie_preco, 
		pl.ie_regulamentacao, 
		pl.ie_tipo_contratacao, 
		pl.nr_seq_outorgante 
	
union all
 
	select (sum(d.vl_item) - sum(CASE WHEN d.ie_tipo_item='3' THEN d.vl_item  ELSE 0 END )) vl_mensalidade, 
		c.nr_seq_segurado, 
		b.nr_sequencia nr_seq_mensalidade, 
		(select	x.cd_cgc_estipulante 
		from	pls_contrato x 
		where	x.nr_sequencia = s.nr_seq_contrato) cd_cgc_estipulante, 
		(select	x.cd_pf_estipulante 
		from	pls_contrato x 
		where	x.nr_sequencia = s.nr_seq_contrato) cd_pf_estipulante, 
		coalesce(s.ie_tipo_segurado,'B') ie_tipo_segurado, 
		s.ie_tipo_vinculo_operadora, 
		s.nr_seq_contrato, 
		c.nr_seq_plano, 
		s.nr_seq_pagador, 
		s.nr_seq_intercambio, 
		c.qt_idade, 
		pl.ie_preco, 
		pl.ie_regulamentacao, 
		pl.ie_tipo_contratacao, 
		coalesce(pl.nr_seq_outorgante,nr_seq_operadora_estab_w) nr_seq_operadora 
	FROM pls_segurado s, pls_plano pl, pls_mensalidade_segurado c, pls_mensalidade b, pls_lote_mensalidade a, pls_mensalidade_seg_item d
LEFT OUTER JOIN pls_tipo_lanc_adic e ON (d.nr_seq_tipo_lanc = e.nr_sequencia)
WHERE c.nr_sequencia	= d.nr_seq_mensalidade_seg and b.nr_sequencia	= c.nr_seq_mensalidade and a.nr_sequencia	= b.nr_seq_lote and s.nr_sequencia	= c.nr_seq_segurado and c.nr_seq_plano	= pl.nr_sequencia  and coalesce(b.ie_cancelamento::text, '') = '' and ((d.ie_tipo_item not in ('20','11')) or (d.ie_tipo_item = '20' and e.ie_considera_receita = 'S')) and a.ie_status	= '2' and coalesce(b.ie_cancelamento::text, '') = '' and b.dt_referencia between dt_parametro_inicio_pc and dt_parametro_fim_pc and (a.ie_mensalidade_mes_anterior	= 'N' or coalesce(a.ie_mensalidade_mes_anterior::text, '') = '') and a.cd_estabelecimento	= cd_estabelecimento_pc and ie_pro_rata_dia_w	= 'N' and not exists (select	1 
				from	pls_resultado	x 
				where	b.nr_sequencia		= x.nr_seq_mensalidade 
				and	x.dt_mes_referencia	= dt_referencia_pc 
				and	x.ie_tipo_valor		= '1') group by 
		c.nr_seq_segurado, 
		b.nr_sequencia, 
		s.ie_tipo_segurado, 
		s.ie_tipo_vinculo_operadora, 
		s.nr_seq_contrato, 
		c.nr_seq_plano, 
		s.nr_seq_pagador, 
		s.nr_seq_intercambio, 
		c.qt_idade, 
		pl.ie_preco, 
		pl.ie_regulamentacao, 
		pl.ie_tipo_contratacao, 
		pl.nr_seq_outorgante;

/* Contas médicas */
 
C03 CURSOR(dt_parametro_inicio_pc	timestamp, 
	dt_parametro_fim_pc	timestamp, 
	dt_referencia_pc	timestamp) FOR 
	SELECT	b.vl_total vl_contas, 
		b.nr_seq_segurado nr_seq_segurado, 
		b.nr_sequencia nr_seq_conta, 
		coalesce(c.ie_tipo_segurado,'B') ie_tipo_segurado, 
		c.ie_tipo_vinculo_operadora, 
		(SELECT	x.cd_cgc_estipulante 
		from	pls_contrato x 
		where	x.nr_sequencia = c.nr_seq_contrato) cd_cgc_estip_con, 
		(select	x.cd_pf_estipulante 
		from	pls_contrato x 
		where	x.nr_sequencia = c.nr_seq_contrato) cd_pf_estip_con, 
		(select	x.cd_cgc 
		from	pls_intercambio x 
		where	x.nr_sequencia = c.nr_seq_contrato) cd_cgc_estip_int, 
		(select	x.cd_pessoa_fisica 
		from	pls_intercambio x 
		where	x.nr_sequencia = c.nr_seq_contrato) cd_pf_estip_int, 
		c.nr_seq_pagador, 
		c.nr_seq_intercambio nr_seq_intercambio, 
		c.nr_seq_contrato, 
		b.nr_seq_plano, 
		trunc(months_between(dt_mes_referencia_p,pf.dt_nascimento) / 12) qt_idade, 
		pl.ie_preco, 
		pl.ie_regulamentacao, 
		pl.ie_tipo_contratacao, 
		coalesce(pl.nr_seq_outorgante,nr_seq_operadora_estab_w) nr_seq_operadora 
	from	pls_plano		pl, 
		pessoa_fisica		pf, 
		pls_segurado		c, 
		pls_conta		b, 
		pls_protocolo_conta	a 
	where	a.nr_sequencia	= b.nr_seq_protocolo 
	and	c.nr_sequencia	= b.nr_seq_segurado 
	and	c.cd_pessoa_fisica	= pf.cd_pessoa_fisica 
	and	pl.nr_sequencia		= b.nr_seq_plano 
	and	a.dt_mes_competencia between dt_parametro_inicio_pc and dt_parametro_fim_pc 
	and	(((ie_forma_pagamento_w = 'P') and (a.ie_status in ('3','6'))) or 
		(ie_forma_pagamento_w = 'C' AND b.ie_status = 'F')) 
	and	a.ie_situacao in ('D', 'T') 
	and	a.ie_tipo_protocolo	in ('C','F','I') 
	and	(b.nr_seq_segurado IS NOT NULL AND b.nr_seq_segurado::text <> '') 
	and	not exists (select	1 
				from	pls_resultado	x 
				where	b.nr_sequencia		= x.nr_seq_conta 
				and	x.dt_mes_referencia	= dt_referencia_pc 
				and	x.ie_tipo_valor		= '2');

/* Reembolso */
 
C04 CURSOR FOR 
	SELECT	sum(coalesce(c.vl_liberado, 0)), 
		b.nr_seq_segurado, 
		b.nr_sequencia 
	from  pls_conta_proc		c, 
		pls_conta		b, 
		pls_protocolo_conta	a 
	where	a.nr_sequencia	= b.nr_seq_protocolo 
	and	c.nr_seq_conta	= b.nr_sequencia 
	and	a.dt_mes_competencia between dt_parametro_inicio_w and dt_parametro_fim_w 
	and	(((ie_forma_pagamento_w = 'P') and (a.ie_status in ('3','6'))) or 
		(ie_forma_pagamento_w = 'C' AND b.ie_status = 'F')) 
	and	a.ie_situacao in ('D', 'T') 
	and	a.ie_tipo_protocolo	= 'R' 
	and	b.ie_status	<> 'C' 
	and	not exists (SELECT	1 
				from	pls_resultado	x 
				where	b.nr_sequencia		= x.nr_seq_conta 
				and	x.dt_mes_referencia	= dt_referencia_w 
				and	x.ie_tipo_valor		= '3') 
	group by 
		b.nr_seq_segurado, 
		b.nr_sequencia 
	
union all
 
	select	sum(coalesce(c.vl_liberado, 0)), 
		b.nr_seq_segurado, 
		b.nr_sequencia 
	from  pls_conta_mat		c, 
		pls_conta		b, 
		pls_protocolo_conta	a 
	where	a.nr_sequencia	= b.nr_seq_protocolo 
	and	c.nr_seq_conta	= b.nr_sequencia 
	and	a.dt_mes_competencia between dt_parametro_inicio_w and dt_parametro_fim_w 
	and	(((ie_forma_pagamento_w = 'P') and (a.ie_status in ('3','6'))) or 
		(ie_forma_pagamento_w = 'C' AND b.ie_status = 'F')) 
	and	a.ie_situacao in ('D', 'T') 
	and	a.ie_tipo_protocolo	= 'R' 
	and	b.ie_status	<> 'C' 
	and	not exists (select	1 
				from	pls_resultado	x 
				where	b.nr_sequencia		= x.nr_seq_conta 
				and	x.dt_mes_referencia	= dt_referencia_w 
				and	x.ie_tipo_valor		= '3') 
	group by 
		b.nr_seq_segurado, 
		b.nr_sequencia;

/* Comissão vendas */
 
C05 CURSOR FOR 
	SELECT	sum(coalesce(vl_repasse, 0)), 
		c.nr_seq_segurado, 
		b.nr_sequencia 
	from	pls_mensalidade_segurado	c, 
		pls_repasse_mens		b, 
		pls_repasse_vend		a 
	where 	a.nr_sequencia			= b.nr_seq_repasse 
	and	c.nr_sequencia			= b.nr_seq_mens_seg 
	and	a.dt_referencia between dt_parametro_inicio_w and dt_parametro_fim_w 
	and	a.ie_status = 'F' 
	and	 not exists (SELECT	1 
				from	pls_resultado	x 
				where	b.nr_sequencia		= x.nr_seq_repasse_mens 
				and	x.dt_mes_referencia	= dt_referencia_w 
				and	x.ie_tipo_valor		= '4') 
	group by 
		c.nr_seq_segurado, 
		b.nr_sequencia;

/*Coparticipação*/
 
C06 CURSOR FOR 
	SELECT	sum(d.vl_item) vl_mensalidade, 
		c.nr_seq_segurado, 
		b.nr_sequencia, 
		null nr_seq_conta_copart 
	from	pls_mensalidade_seg_item	d, 
		pls_mensalidade_segurado	c, 
		pls_mensalidade			b, 
		pls_lote_mensalidade		a 
	where	d.nr_seq_mensalidade_seg = c.nr_sequencia 
	and	c.nr_seq_mensalidade	= b.nr_sequencia 
	and	b.nr_seq_lote		= a.nr_sequencia 
	and	a.ie_status	= 2 
	and	coalesce(b.ie_cancelamento::text, '') = '' 
	and	d.ie_tipo_item	= '3' 
	and	b.dt_referencia between dt_parametro_inicio_w and dt_parametro_fim_w 
	and	 not exists (SELECT	1 
				from	pls_resultado	x 
				where	b.nr_sequencia		= x.nr_seq_mensalidade 
				and	x.ie_tipo_valor		= '11' 
				and	x.dt_mes_referencia	= dt_referencia_w) 
	group by 
		c.nr_seq_segurado, 
		b. nr_sequencia 
	
union all
 
	select	sum(a.vl_coparticipacao), 
		b.nr_seq_segurado, 
		null, 
		a.nr_sequencia 
	from	pls_conta_coparticipacao	a, 
		pls_conta			b, 
		pls_protocolo_conta		c 
	where	a.nr_seq_conta		= b.nr_sequencia 
	and	b.nr_seq_protocolo	= c.nr_sequencia 
	and	c.ie_tipo_protocolo	= 'R' 
	and	c.dt_mes_competencia between dt_parametro_inicio_w and dt_parametro_fim_w 
	and	 not exists (select	1 
				from	pls_resultado	x 
				where	a.nr_sequencia		= x.nr_seq_conta_copartic 
				and	x.ie_tipo_valor		= '11' 
				and	x.dt_mes_referencia	= dt_referencia_w) 
	group by 
		b.nr_seq_segurado, 
		a.nr_sequencia;

/* Ressarcimento SUS */
 
C08 CURSOR FOR 
	SELECT	c.vl_ressarcir, 
		c.nr_seq_segurado 
	from	titulo_pagar d, 
		pls_processo_conta c, 
		pls_processo b, 
		pls_processo_gru a 
	where	a.nr_seq_processo	= b.nr_sequencia 
	and	a.nr_sequencia		= c.nr_seq_proc_gru 
	and	a.nr_sequencia		= d.nr_seq_proc_gru 
	and	b.cd_estabelecimento	= cd_estabelecimento_p 
	and	d.dt_emissao		between trunc(dt_referencia_w, 'month') and fim_dia(last_day(dt_referencia_w)) 
	and	d.ie_situacao		<> 'C' 
	and	not exists (SELECT	1 
				from	pls_resultado	x 
				where	x.ie_tipo_valor		= '7' 
				and	x.dt_mes_referencia	= dt_referencia_w);

BEGIN 
ie_valor_mensalidade_w := Obter_Param_Usuario(1225, 16, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p, ie_valor_mensalidade_w);
 
qt_contador_pb_w	:= 0;
CALL gravar_processo_longo('Atualizar resultado competência', 'PLS_GERAR_VALORES_RESULT_ITENS', qt_contador_pb_w);
 
dt_referencia_w			:= trunc(dt_mes_referencia_p, 'month');
dt_parametro_inicio_w		:= trunc(dt_mes_referencia_p, 'month');
dt_parametro_fim_w		:= last_day(dt_mes_referencia_p) + 86399/86400;
dt_parametro_inicio_ant_w	:= add_months(dt_parametro_inicio_w, - 1);
dt_parametro_fim_ant_w		:= add_months(dt_parametro_fim_w, - 1);
 
select	a.nr_sequencia 
into STRICT	nr_seq_operadora_estab_w 
from	pls_outorgante a 
where	a.cd_estabelecimento	= cd_estabelecimento_p;
 
select	coalesce(sum(CASE WHEN a.ie_tipo_operacao='B' THEN  CASE WHEN a.ie_acao_conta='SO' THEN  b.vl_movimento WHEN a.ie_acao_conta='SB' THEN  b.vl_movimento * -1 END   ELSE 0 END ), 0), 
	coalesce(sum(CASE WHEN a.ie_tipo_operacao='A' THEN  CASE WHEN a.ie_acao_conta='SO' THEN  b.vl_movimento WHEN a.ie_acao_conta='SB' THEN  b.vl_movimento * -1 END   ELSE 0 END ), 0), 
	coalesce(sum(CASE WHEN a.ie_tipo_operacao='P' THEN  CASE WHEN a.ie_acao_conta='SO' THEN  b.vl_movimento WHEN a.ie_acao_conta='SB' THEN  b.vl_movimento * -1 END   ELSE 0 END ), 0) 
into STRICT	vl_despesa_ops_w, 
	vl_despesa_acidente_w, 
	vl_despesa_pericia_w 
from	ctb_mes_ref	c, 
	ctb_balancete_v	b, 
	pls_ctb_despesa	a 
where	a.cd_conta_contabil		= b.cd_conta_contabil 
and	b.nr_seq_mes_ref		= c.nr_sequencia 
and	b.ie_normal_encerramento	= 'E' 
and	trunc(c.dt_referencia, 'month')	= dt_referencia_w;
 
select	coalesce(sum(CASE WHEN a.ie_tipo_operacao='B' THEN  b.vl_debito - b.vl_credito  ELSE 0 END ), 0), 
	coalesce(sum(CASE WHEN a.ie_tipo_operacao='A' THEN  b.vl_debito - b.vl_credito  ELSE 0 END ), 0), 
	coalesce(sum(CASE WHEN a.ie_tipo_operacao='P' THEN  b.vl_debito - b.vl_credito  ELSE 0 END ), 0) 
into STRICT	vl_imposto_ops_w, 
	vl_imposto_acidente_w, 
	vl_imposto_pericia_w 
from	ctb_mes_ref			c, 
	ctb_balancete_v			b, 
	pls_ctb_imposto_resultado	a 
where	a.cd_conta_contabil		= b.cd_conta_contabil 
and	b.nr_seq_mes_ref		= c.nr_sequencia 
and	b.ie_normal_encerramento	= 'E' 
and	trunc(c.dt_referencia, 'month')	= dt_referencia_w;
 
select	coalesce(sum(CASE WHEN a.ie_tipo_operacao='B' THEN  CASE WHEN a.ie_acao_conta='SO' THEN  b.vl_movimento WHEN a.ie_acao_conta='SB' THEN  b.vl_movimento * -1 END   ELSE 0 END ), 0), 
	coalesce(sum(CASE WHEN a.ie_tipo_operacao='A' THEN  CASE WHEN a.ie_acao_conta='SO' THEN  b.vl_movimento WHEN a.ie_acao_conta='SB' THEN  b.vl_movimento * -1 END   ELSE 0 END ), 0), 
	coalesce(sum(CASE WHEN a.ie_tipo_operacao='P' THEN  CASE WHEN a.ie_acao_conta='SO' THEN  b.vl_movimento WHEN a.ie_acao_conta='SB' THEN  b.vl_movimento * -1 END   ELSE 0 END ), 0) 
into STRICT	vl_provisao_ops_w, 
	vl_provisao_acidente_w, 
	vl_provisao_pericia_w 
from	ctb_mes_ref			c, 
	ctb_balancete_v			b, 
	pls_ctb_provisoes_tecnicas	a 
where	a.cd_conta_contabil		= b.cd_conta_contabil 
and	b.nr_seq_mes_ref		= c.nr_sequencia 
and	b.ie_normal_encerramento	= 'E' 
and	trunc(c.dt_referencia, 'month')	= dt_referencia_w;
 
select	max(ie_pro_rata_dia) 
into STRICT	ie_pro_rata_dia_w 
from	pls_parametros 
where	cd_estabelecimento	= cd_estabelecimento_p;
 
select	max(ie_forma_pagamento) 
into STRICT	ie_forma_pagamento_w 
from	pls_parametro_pagamento 
where	cd_estabelecimento	= cd_estabelecimento_p;
 
ie_pro_rata_dia_w	:= coalesce(ie_pro_rata_dia_w,'S');
ie_forma_pagamento_w	:= coalesce(ie_forma_pagamento_w,'P');
 
select	sum(vl_mensalidade) 
into STRICT	vl_total_mensalidade_w 
from	(	SELECT	((sum(CASE WHEN coalesce(a.dt_contabilizacao::text, '') = '' THEN d.vl_item  ELSE coalesce(d.vl_pro_rata_dia,0) END ) - 
			 sum(CASE WHEN d.ie_tipo_item='3' THEN CASE WHEN coalesce(a.dt_contabilizacao::text, '') = '' THEN d.vl_item  ELSE coalesce(d.vl_pro_rata_dia,0) END   ELSE 0 END )) - 
			 sum(coalesce(d.vl_antecipacao,0))) vl_mensalidade 
		FROM pls_segurado s, pls_plano pl, pls_mensalidade_segurado c, pls_mensalidade b, pls_lote_mensalidade a, pls_mensalidade_seg_item d
LEFT OUTER JOIN pls_tipo_lanc_adic e ON (d.nr_seq_tipo_lanc = e.nr_sequencia)
WHERE c.nr_sequencia	= d.nr_seq_mensalidade_seg and b.nr_sequencia	= c.nr_seq_mensalidade and a.nr_sequencia	= b.nr_seq_lote and s.nr_sequencia	= c.nr_seq_segurado and c.nr_seq_plano	= pl.nr_sequencia  and coalesce(b.ie_cancelamento::text, '') = '' and ((d.ie_tipo_item not in ('20','11')) or (d.ie_tipo_item = '20' and e.ie_considera_receita = 'S')) and a.ie_status	= '2' and coalesce(b.ie_cancelamento::text, '') = '' and b.dt_referencia between dt_parametro_inicio_w and dt_parametro_fim_w and (a.ie_mensalidade_mes_anterior	= 'N' or coalesce(a.ie_mensalidade_mes_anterior::text, '') = '') and a.cd_estabelecimento	= cd_estabelecimento_p and coalesce(s.ie_tipo_vinculo_operadora::text, '') = '' and ie_pro_rata_dia_w	= 'S' and not exists (select	1 
					from	pls_resultado	x 
					where	b.nr_sequencia		= x.nr_seq_mensalidade 
					and	x.dt_mes_referencia	= dt_referencia_w 
					and	x.ie_tipo_valor		= '1') 
		 
union all
 
		SELECT (sum(d.vl_item) - sum(CASE WHEN d.ie_tipo_item='3' THEN d.vl_item  ELSE 0 END )) vl_mensalidade 
		FROM pls_segurado s, pls_plano pl, pls_mensalidade_segurado c, pls_mensalidade b, pls_lote_mensalidade a, pls_mensalidade_seg_item d
LEFT OUTER JOIN pls_tipo_lanc_adic e ON (d.nr_seq_tipo_lanc = e.nr_sequencia)
WHERE c.nr_sequencia	= d.nr_seq_mensalidade_seg and b.nr_sequencia	= c.nr_seq_mensalidade and a.nr_sequencia	= b.nr_seq_lote and s.nr_sequencia	= c.nr_seq_segurado and c.nr_seq_plano	= pl.nr_sequencia  and coalesce(b.ie_cancelamento::text, '') = '' and a.ie_status	= '2' and a.dt_mesano_referencia between dt_parametro_inicio_w and dt_parametro_fim_w and a.ie_mensalidade_mes_anterior	= 'S' and a.cd_estabelecimento	= cd_estabelecimento_p and coalesce(s.ie_tipo_vinculo_operadora::text, '') = '' and not exists (select	1 
					from	pls_resultado	x 
					where	b.nr_sequencia		= x.nr_seq_mensalidade 
					and	x.dt_mes_referencia	= dt_referencia_w 
					and	x.ie_tipo_valor		= '1') 
		 
union all
 
		select	sum(d.vl_antecipacao) vl_mensalidade 
		FROM pls_segurado s, pls_plano pl, pls_mensalidade_segurado c, pls_mensalidade b, pls_lote_mensalidade a, pls_mensalidade_seg_item d
LEFT OUTER JOIN pls_tipo_lanc_adic e ON (d.nr_seq_tipo_lanc = e.nr_sequencia)
WHERE c.nr_sequencia	= d.nr_seq_mensalidade_seg and b.nr_sequencia	= c.nr_seq_mensalidade and a.nr_sequencia	= b.nr_seq_lote and s.nr_sequencia	= c.nr_seq_segurado and c.nr_seq_plano	= pl.nr_sequencia  and coalesce(b.ie_cancelamento::text, '') = '' and ((d.ie_tipo_item not in ('20','11')) or (d.ie_tipo_item = '20' and e.ie_considera_receita = 'S')) and (a.dt_contabilizacao IS NOT NULL AND a.dt_contabilizacao::text <> '') and a.ie_status	= '2' and coalesce(b.ie_cancelamento::text, '') = '' and d.dt_antecipacao between dt_parametro_inicio_w and dt_parametro_fim_w and (a.ie_mensalidade_mes_anterior	= 'N' or coalesce(a.ie_mensalidade_mes_anterior::text, '') = '') and a.cd_estabelecimento	= cd_estabelecimento_p and coalesce(s.ie_tipo_vinculo_operadora::text, '') = '' and ie_pro_rata_dia_w	= 'S' and not exists (select	1 
					from	pls_resultado	x 
					where	b.nr_sequencia		= x.nr_seq_mensalidade 
					and	x.dt_mes_referencia	= dt_referencia_w 
					and	x.ie_tipo_valor		= '1') 
		 
union all
 
		/* Antecipação / Pro-rata */
 
		select	sum(CASE WHEN coalesce(a.dt_contabilizacao::text, '') = '' THEN d.vl_antecipacao  ELSE 0 END ) vl_mensalidade 
		FROM pls_segurado s, pls_plano pl, pls_mensalidade_segurado c, pls_mensalidade b, pls_lote_mensalidade a, pls_mensalidade_seg_item d
LEFT OUTER JOIN pls_tipo_lanc_adic e ON (d.nr_seq_tipo_lanc = e.nr_sequencia)
WHERE c.nr_sequencia	= d.nr_seq_mensalidade_seg and b.nr_sequencia	= c.nr_seq_mensalidade and a.nr_sequencia	= b.nr_seq_lote and s.nr_sequencia	= c.nr_seq_segurado and c.nr_seq_plano	= pl.nr_sequencia  and coalesce(b.ie_cancelamento::text, '') = '' and a.ie_status	= '2' and (a.ie_mensalidade_mes_anterior	= 'N' or coalesce(a.ie_mensalidade_mes_anterior::text, '') = '') and d.dt_antecipacao between dt_parametro_inicio_w and dt_parametro_fim_w and a.cd_estabelecimento	= cd_estabelecimento_p and ((d.ie_tipo_item not in ('20','11')) or (d.ie_tipo_item = '20' and e.ie_considera_receita = 'S')) and ie_pro_rata_dia_w	= 'S' and coalesce(s.ie_tipo_vinculo_operadora::text, '') = '' and not exists (select	1 
					from	pls_resultado	x 
					where	b.nr_sequencia		= x.nr_seq_mensalidade 
					and	x.dt_mes_referencia	= dt_referencia_w 
					and	x.ie_tipo_valor		= '1') 
		 
union all
 
		select (sum(d.vl_item) - sum(CASE WHEN d.ie_tipo_item='3' THEN d.vl_item  ELSE 0 END )) vl_mensalidade 
		FROM pls_segurado s, pls_plano pl, pls_mensalidade_segurado c, pls_mensalidade b, pls_lote_mensalidade a, pls_mensalidade_seg_item d
LEFT OUTER JOIN pls_tipo_lanc_adic e ON (d.nr_seq_tipo_lanc = e.nr_sequencia)
WHERE c.nr_sequencia	= d.nr_seq_mensalidade_seg and b.nr_sequencia	= c.nr_seq_mensalidade and a.nr_sequencia	= b.nr_seq_lote and s.nr_sequencia	= c.nr_seq_segurado and c.nr_seq_plano	= pl.nr_sequencia  and coalesce(s.ie_tipo_vinculo_operadora::text, '') = '' and coalesce(b.ie_cancelamento::text, '') = '' and ((d.ie_tipo_item not in ('20','11')) or (d.ie_tipo_item = '20' and e.ie_considera_receita = 'S')) and a.ie_status	= '2' and coalesce(b.ie_cancelamento::text, '') = '' and b.dt_referencia between dt_parametro_inicio_w and dt_parametro_fim_w and (a.ie_mensalidade_mes_anterior	= 'N' or coalesce(a.ie_mensalidade_mes_anterior::text, '') = '') and a.cd_estabelecimento	= cd_estabelecimento_p and ie_pro_rata_dia_w	= 'N' and not exists (select	1 
					from	pls_resultado	x 
					where	b.nr_sequencia		= x.nr_seq_mensalidade 
					and	x.dt_mes_referencia	= dt_referencia_w 
					and	x.ie_tipo_valor		= '1') ) alias63;
 
for r_c01 in c01 loop 
	begin 
	delete	from pls_resultado a 
	where	dt_mes_referencia = dt_referencia_w 
	and	a.ie_tipo_valor	= r_c01.vl_dominio 
	and	coalesce(dt_leitura::text, '') = '';
	 
	commit;
	 
	qt_contador_pb_w	:= qt_contador_pb_w + 1;
	ds_dominio_w		:= substr(obter_valor_dominio(2236, r_c01.vl_dominio), 1, 255);
	 
	/* Mensalidade */
 
	if (r_c01.vl_dominio = 1) then 
		qt_commit_w	:= 0;
		 
		for r_c02 in c02(dt_parametro_inicio_w,dt_parametro_fim_w,cd_estabelecimento_p,dt_referencia_w) loop 
			vl_mensalidade_w		:= r_c02.vl_mensalidade;
			nr_seq_segurado_w		:= r_c02.nr_seq_segurado;
			nr_seq_mensalidade_w		:= r_c02.nr_seq_mensalidade;
			cd_cgc_estipulante_w		:= r_c02.cd_cgc_estipulante;
			cd_pf_estipulante_w		:= r_c02.cd_pf_estipulante;
			ie_tipo_beneficiario_w		:= r_c02.ie_tipo_segurado;
			ie_tipo_vinculo_operadora_w	:= r_c02.ie_tipo_vinculo_operadora;
			 
			nr_seq_contrato_w		:= r_c02.nr_seq_contrato;
			nr_seq_plano_w			:= r_c02.nr_seq_plano;
			nr_seq_pagador_w		:= r_c02.nr_seq_pagador;
			qt_idade_w			:= r_c02.qt_idade;
			ie_preco_w			:= r_c02.ie_preco;
			ie_regulamentacao_w		:= r_c02.ie_regulamentacao;
			ie_tipo_contratacao_w		:= r_c02.ie_tipo_contratacao;
			nr_seq_operadora_w		:= r_c02.nr_seq_operadora;
			nr_seq_intercambio_w 		:= r_c02.nr_seq_intercambio;
			 
			if (ie_tipo_beneficiario_w	= 'B') then 
				vl_total_despesa_w		:= vl_despesa_ops_w;
				vl_total_imposto_w		:= vl_imposto_ops_w;
				vl_total_provisao_tecnica_w	:= vl_provisao_ops_w;
			elsif (ie_tipo_beneficiario_w	= 'A') then 
				vl_total_despesa_w		:= vl_despesa_acidente_w;
				vl_total_imposto_w		:= vl_imposto_acidente_w;
				vl_total_provisao_tecnica_w	:= vl_provisao_acidente_w;
			elsif (ie_tipo_beneficiario_w	= 'P') then 
				vl_total_despesa_w		:= vl_despesa_pericia_w;
				vl_total_imposto_w		:= vl_imposto_pericia_w;
				vl_total_provisao_tecnica_w	:= vl_provisao_pericia_w;
			end if;
			 
			insert into pls_resultado(nr_sequencia, 
				cd_estabelecimento, 
				nr_seq_operadora, 
				nr_seq_produto, 
				nr_seq_contrato, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				dt_mes_referencia, 
				ie_tipo_contratacao, 
				vl_resultado, 
				ie_tipo_valor, 
				cd_cgc_estipulante, 
				cd_pf_estipulante, 
				ie_tipo_beneficiario, 
				qt_idade, 
				nr_seq_pagador, 
				ie_preco, 
				ie_tipo_vinculo_operadora, 
				ie_regulamentacao, 
				nr_seq_mensalidade, 
				nr_seq_segurado, 
				nr_seq_intercambio) 
			values (nextval('pls_resultado_seq'), 
				cd_estabelecimento_p, 
				nr_seq_operadora_w, 
				nr_Seq_plano_w, 
				nr_seq_contrato_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				dt_referencia_w, 
				ie_tipo_contratacao_w, 
				vl_mensalidade_w, 
				'1', 
				cd_cgc_estipulante_w, 
				cd_pf_estipulante_w, 
				ie_tipo_beneficiario_w, 
				qt_idade_w, 
				nr_seq_pagador_w, 
				ie_preco_w, 
				ie_tipo_vinculo_operadora_w, 
				ie_regulamentacao_w, 
				nr_seq_mensalidade_w, 
				nr_seq_segurado_w, 
				nr_seq_intercambio_w);
			 
			if (coalesce(ie_tipo_vinculo_operadora_w::text, '') = '') then 
				/* Despesas não assistênciais - 5 */
 
				pr_rateio_w		:= replace(campo_mascara_virgula_casas(dividir((vl_mensalidade_w * 100),vl_total_mensalidade_w),4),'.','');
				vl_desp_nao_assist_w	:= dividir((pr_rateio_w * vl_total_despesa_w),100);
				vl_rateado_despesa_w	:= vl_rateado_despesa_w + vl_desp_nao_assist_w;
				 
				insert into pls_resultado(nr_sequencia, 
					cd_estabelecimento, 
					nr_seq_operadora, 
					nr_seq_produto, 
					nr_seq_contrato, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					dt_mes_referencia, 
					ie_tipo_contratacao, 
					vl_resultado, 
					ie_tipo_valor, 
					cd_cgc_estipulante, 
					cd_pf_estipulante, 
					ie_tipo_beneficiario, 
					qt_idade, 
					nr_seq_pagador, 
					ie_preco, 
					ie_tipo_vinculo_operadora, 
					ie_regulamentacao, 
					nr_seq_mensalidade, 
					nr_seq_segurado, 
					nr_seq_intercambio) 
				values (nextval('pls_resultado_seq'), 
					cd_estabelecimento_p, 
					nr_seq_operadora_w, 
					nr_seq_plano_w, 
					nr_seq_contrato_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					dt_referencia_w, 
					ie_tipo_contratacao_w, 
					vl_desp_nao_assist_w, 
					'5', 
					cd_cgc_estipulante_w, 
					cd_pf_estipulante_w, 
					ie_tipo_beneficiario_w, 
					qt_idade_w, 
					nr_seq_pagador_w, 
					ie_preco_w, 
					ie_tipo_vinculo_operadora_w, 
					ie_regulamentacao_w, 
					nr_seq_mensalidade_w, 
					nr_seq_segurado_w, 
					nr_seq_intercambio_w);
				 
				/* Encargos - 6 */
 
				pr_rateio_w		:= 0;
				pr_rateio_w		:= replace(campo_mascara_virgula_casas(dividir((vl_mensalidade_w * 100), vl_total_mensalidade_w),4),'.','');
				vl_encargos_w		:= dividir((pr_rateio_w * vl_total_imposto_w), 100);
				vl_rateado_imposto_w	:= vl_rateado_imposto_w + vl_encargos_w;
				 
				insert into pls_resultado(nr_sequencia, 
					cd_estabelecimento, 
					nr_seq_operadora, 
					nr_seq_produto, 
					nr_seq_contrato, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					dt_mes_referencia, 
					ie_tipo_contratacao, 
					vl_resultado, 
					ie_tipo_valor, 
					cd_cgc_estipulante, 
					cd_pf_estipulante, 
					ie_tipo_beneficiario, 
					qt_idade, 
					nr_seq_pagador, 
					ie_preco, 
					ie_tipo_vinculo_operadora, 
					ie_regulamentacao, 
					nr_seq_mensalidade, 
					nr_seq_segurado, 
					nr_seq_intercambio) 
				values (nextval('pls_resultado_seq'), 
					cd_estabelecimento_p, 
					nr_seq_operadora_w, 
					nr_seq_plano_w, 
					nr_seq_contrato_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					dt_referencia_w, 
					ie_tipo_contratacao_w, 
					vl_encargos_w, 
					'6', 
					cd_cgc_estipulante_w, 
					cd_pf_estipulante_w, 
					ie_tipo_beneficiario_w, 
					qt_idade_w, 
					nr_seq_pagador_w, 
					ie_preco_w, 
					ie_tipo_vinculo_operadora_w, 
					ie_regulamentacao_w, 
					nr_seq_mensalidade_w, 
					nr_seq_segurado_w, 
					nr_seq_intercambio_w);
				 
				/* Provisões técnicas - 9 */
 
				pr_rateio_w		:= 0;
				 
				vl_provisao_w		:= (dividir(vl_mensalidade_w,vl_total_mensalidade_w) * vl_total_provisao_tecnica_w);
				 
				vl_rateado_provisao_w	:= vl_rateado_provisao_w + vl_provisao_w;
				 
				insert into pls_resultado(nr_sequencia, 
					cd_estabelecimento, 
					nr_seq_operadora, 
					nr_seq_produto, 
					nr_seq_contrato, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					dt_mes_referencia, 
					ie_tipo_contratacao, 
					vl_resultado, 
					ie_tipo_valor, 
					cd_cgc_estipulante, 
					cd_pf_estipulante, 
					ie_tipo_beneficiario, 
					qt_idade, 
					nr_seq_pagador, 
					ie_preco, 
					ie_tipo_vinculo_operadora, 
					ie_regulamentacao, 
					nr_seq_mensalidade, 
					nr_seq_segurado, 
					nr_seq_intercambio) 
				values (nextval('pls_resultado_seq'), 
					cd_estabelecimento_p, 
					nr_seq_operadora_w, 
					nr_seq_plano_w, 
					nr_seq_contrato_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					dt_referencia_w, 
					ie_tipo_contratacao_w, 
					vl_provisao_w, 
					'9', 
					cd_cgc_estipulante_w, 
					cd_pf_estipulante_w, 
					ie_tipo_beneficiario_w, 
					qt_idade_w, 
					nr_seq_pagador_w, 
					ie_preco_w, 
					ie_tipo_vinculo_operadora_w, 
					ie_regulamentacao_w, 
					nr_seq_mensalidade_w, 
					nr_seq_segurado_w, 
					nr_seq_intercambio_w);
			end if;
			if (qt_commit_w > 2000) then 
				commit;
				qt_commit_w	:= 0;
			end if;
			qt_commit_w	:= qt_commit_w + 1;
		end loop;
		 
		/* Despesas não assistênciais - 5 */
 
		if (vl_total_despesa_w > 0) and (vl_rateado_despesa_w <> vl_total_despesa_w) then 
			update	pls_resultado	a 
			set	vl_resultado	= coalesce(vl_resultado, 0) + vl_total_despesa_w - vl_rateado_despesa_w 
			where	a.nr_sequencia	=	(SELECT	max(x.nr_sequencia) 
							from 	pls_resultado	x 
							where (x.vl_resultado + vl_total_despesa_w - vl_rateado_despesa_w) >= 0 
							and 	x.ie_tipo_valor	= '5');
		end if;
		 
		/* Encargos - 6 */
 
		if (vl_total_imposto_w > 0) and (vl_rateado_imposto_w <> vl_total_imposto_w) then 
			update	pls_resultado	a 
			set	vl_resultado	= coalesce(vl_resultado, 0) + vl_total_imposto_w - vl_rateado_imposto_w 
			where	a.nr_sequencia	=	(SELECT	max(x.nr_sequencia) 
							from 	pls_resultado	x 
							where (x.vl_resultado + vl_total_imposto_w - vl_rateado_imposto_w) >= 0 
							and 	x.ie_tipo_valor	= '6');
		end if;
		 
		/* Provisões técnicas - 9 */
 
		if (vl_total_provisao_tecnica_w <> 0) and (vl_rateado_provisao_w <> vl_total_provisao_tecnica_w) then 
			update	pls_resultado	a 
			set	vl_resultado	= coalesce(vl_resultado, 0) + vl_total_provisao_tecnica_w - vl_rateado_provisao_w 
			where	a.nr_sequencia	=	(SELECT	max(x.nr_sequencia) 
							from 	pls_resultado	x 
							where (x.vl_resultado + vl_total_provisao_tecnica_w - vl_rateado_provisao_w) <> 0 
							and 	x.ie_tipo_valor	= '9');
		end if;
	/* Contas médicas */
 
	elsif (r_c01.vl_dominio = 2) then 
		qt_commit_w	:= 0;
		for r_c03 in c03(dt_parametro_inicio_w,dt_parametro_fim_w,dt_referencia_w) loop	 
			vl_contas_w			:= r_c03.vl_contas;
			nr_seq_segurado_w		:= r_c03.nr_seq_segurado;
			nr_seq_conta_w			:= r_c03.nr_seq_conta;
			ie_tipo_beneficiario_w		:= r_c03.ie_tipo_segurado;
			ie_tipo_vinculo_operadora_w	:= r_c03.ie_tipo_vinculo_operadora;
			nr_seq_intercambio_w		:= r_c03.nr_seq_intercambio;
			 
			if (ie_tipo_beneficiario_w in ('A','B','R')) then 
				cd_cgc_estipulante_w		:= r_c03.cd_cgc_estip_con;
				cd_pf_estipulante_w		:= r_c03.cd_pf_estip_con;
			elsif (ie_tipo_beneficiario_w in ('C','T')) then 
				cd_cgc_estipulante_w		:= r_c03.cd_cgc_estip_int;
				cd_pf_estipulante_w		:= r_c03.cd_pf_estip_int;
			elsif (ie_tipo_beneficiario_w in ('I','P')) then 
				cd_cgc_estipulante_w	:= '';
				cd_pf_estipulante_w	:= '';
			end if;
			 
			nr_seq_pagador_w	:= r_c03.nr_seq_pagador;
			nr_seq_contrato_w	:= r_c03.nr_seq_contrato;
			nr_seq_plano_w		:= r_c03.nr_seq_plano;
			qt_idade_w		:= r_c03.qt_idade;
			 
			ie_preco_w		:= r_c03.ie_preco;
			ie_regulamentacao_w	:= r_c03.ie_regulamentacao;
			ie_tipo_contratacao_w	:= r_c03.ie_tipo_contratacao;
			nr_seq_operadora_w	:= r_c03.nr_seq_operadora;
			 
			if (qt_idade_w > 999 or qt_idade_w < 0) then 
				CALL wheb_mensagem_pck.exibir_mensagem_abort(297930,'nr_seq_segurado=' || nr_seq_segurado_w || ';nm_beneficiario=' || pls_obter_dados_segurado(nr_seq_segurado_w,'N'));
			end if;
			 
			insert into pls_resultado(nr_sequencia, 
				cd_estabelecimento, 
				nr_seq_operadora, 
				nr_seq_produto, 
				nr_seq_contrato, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				dt_mes_referencia, 
				ie_tipo_contratacao, 
				vl_resultado, 
				ie_tipo_valor, 
				cd_cgc_estipulante, 
				cd_pf_estipulante, 
				ie_tipo_beneficiario, 
				qt_idade, 
				nr_seq_pagador, 
				ie_preco, 
				ie_tipo_vinculo_operadora, 
				ie_regulamentacao, 
				nr_seq_conta, 
				nr_seq_segurado, 
				nr_seq_intercambio) 
			values (nextval('pls_resultado_seq'), 
				cd_estabelecimento_p, 
				nr_seq_operadora_w, 
				nr_seq_plano_w, 
				nr_seq_contrato_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				dt_referencia_w, 
				ie_tipo_contratacao_w, 
				vl_contas_w, 
				'2', 
				cd_cgc_estipulante_w, 
				cd_pf_estipulante_w, 
				ie_tipo_beneficiario_w, 
				qt_idade_w, 
				nr_seq_pagador_w, 
				ie_preco_w, 
				ie_tipo_vinculo_operadora_w, 
				ie_regulamentacao_w, 
				nr_seq_conta_w, 
				nr_seq_segurado_w, 
				nr_seq_intercambio_w);
			 
			if (qt_commit_w > 2000) then 
				commit;
				qt_commit_w	:= 0;
			end if;
			qt_commit_w	:= qt_commit_w + 1;
		end loop;
	/* Reembolso */
 
	elsif (r_c01.vl_dominio = 3) then 
		open C04;
		loop 
		fetch C04 into 
			vl_reembolso_w, 
			nr_seq_segurado_w, 
			nr_seq_conta_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin 
			begin 
			select	coalesce(ie_tipo_segurado,'B'), 
				nr_seq_contrato, 
				nr_seq_intercambio 
			into STRICT	ie_tipo_beneficiario_w, 
				nr_seq_contrato_w, 
				nr_seq_intercambio_w 
			from	pls_segurado 
			where	nr_sequencia	= nr_seq_segurado_w;
			exception 
				when others then 
				nr_seq_contrato_w	:= null;
				nr_seq_intercambio_w	:= null;
			end;
			 
			if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then 
				select 	cd_cgc_estipulante, 
					cd_pf_estipulante 
				into STRICT	cd_cgc_estipulante_w, 
					cd_pf_estipulante_w 
				from 	pls_contrato 
				where	nr_sequencia 	= nr_seq_contrato_w;
			elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then 
				select	cd_cgc, 
					cd_pessoa_fisica 
				into STRICT	cd_cgc_estipulante_w, 
					cd_pf_estipulante_w 
				from 	pls_intercambio 
				where 	nr_sequencia	= nr_seq_intercambio_w;
			end if;
			 
			 
			begin 
			select	b.ie_tipo_vinculo_operadora 
			into STRICT	ie_tipo_vinculo_operadora_w 
			from	pls_segurado	b 
			where	b.nr_sequencia	= nr_seq_segurado_w;
			exception 
			when others then 
				ie_tipo_vinculo_operadora_w	:= null;
			end;
			 
			select	max(a.nr_seq_pagador), 
				max(a.nr_seq_contrato), 
				max(a.nr_seq_plano), 
				trunc(months_between(dt_mes_referencia_p, max(b.dt_nascimento)) / 12) 
			into STRICT	nr_seq_pagador_w, 
				nr_seq_contrato_w, 
				nr_seq_plano_w, 
				qt_idade_w 
			from	pessoa_fisica	b, 
				pls_segurado	a 
			where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica 
			and	a.nr_sequencia		= nr_seq_segurado_w;
			 
			begin 
			select	max(a.ie_preco), 
				max(a.ie_regulamentacao), 
				max(a.ie_tipo_contratacao), 
				max(a.nr_seq_outorgante), 
				max(a.cd_estabelecimento) 
			into STRICT	ie_preco_w, 
				ie_regulamentacao_w, 
				ie_tipo_contratacao_w, 
				nr_seq_operadora_w, 
				cd_estabelecimento_w 
			from	pls_plano	a 
			where	a.nr_sequencia	= nr_seq_plano_w;
			exception 
			when others then 
				ie_preco_w		:= null;
				ie_regulamentacao_w	:= null;
				ie_tipo_contratacao_w	:= null;
				cd_estabelecimento_w	:= null;
			end;
			 
			if (coalesce(nr_seq_operadora_w::text, '') = '') then 
				select	max(nr_sequencia) 
				into STRICT	nr_seq_operadora_w 
				from	pls_outorgante 
				where	cd_estabelecimento = cd_estabelecimento_w;
			end if;
			 
			insert into pls_resultado(nr_sequencia, 
				cd_estabelecimento, 
				nr_seq_operadora, 
				nr_seq_produto, 
				nr_seq_contrato, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				dt_mes_referencia, 
				ie_tipo_contratacao, 
				vl_resultado, 
				ie_tipo_valor, 
				cd_cgc_estipulante, 
				cd_pf_estipulante, 
				ie_tipo_beneficiario, 
				qt_idade, 
				nr_seq_pagador, 
				ie_preco, 
				ie_tipo_vinculo_operadora, 
				ie_regulamentacao, 
				nr_seq_conta, 
				nr_seq_segurado, 
				nr_seq_intercambio) 
			values (nextval('pls_resultado_seq'), 
				cd_estabelecimento_p, 
				nr_seq_operadora_w, 
				nr_seq_plano_w, 
				nr_seq_contrato_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				dt_referencia_w, 
				ie_tipo_contratacao_w, 
				vl_reembolso_w, 
				'3', 
				cd_cgc_estipulante_w, 
				cd_pf_estipulante_w, 
				ie_tipo_beneficiario_w, 
				qt_idade_w, 
				nr_seq_pagador_w, 
				ie_preco_w, 
				ie_tipo_vinculo_operadora_w, 
				ie_regulamentacao_w, 
				nr_seq_conta_w, 
				nr_seq_segurado_w, 
				nr_seq_intercambio_w);
			end;
		end loop;
		close C04;
	/* Comissão vendas */
 
	elsif (r_c01.vl_dominio = 4) then 
		open C05;
		loop 
		fetch C05 into 
			vl_comissao_w, 
			nr_seq_segurado_w, 
			nr_seq_repasse_mens_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin 
			begin 
			select	coalesce(ie_tipo_segurado,'B'), 
				nr_seq_contrato, 
				nr_seq_intercambio 
			into STRICT	ie_tipo_beneficiario_w, 
				nr_seq_contrato_w, 
				nr_seq_intercambio_w 
			from	pls_segurado 
			where	nr_sequencia	= nr_seq_segurado_w;
			exception 
			when others then 
				nr_seq_contrato_w	:= null;
				nr_seq_intercambio_w	:= null;
			end;
			 
			if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then 
				select 	cd_cgc_estipulante, 
					cd_pf_estipulante 
				into STRICT	cd_cgc_estipulante_w, 
					cd_pf_estipulante_w 
				from 	pls_contrato 
				where	nr_sequencia 	= nr_seq_contrato_w;
			elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then 
				select	cd_cgc, 
					cd_pessoa_fisica 
				into STRICT	cd_cgc_estipulante_w, 
					cd_pf_estipulante_w 
				from 	pls_intercambio 
				where 	nr_sequencia	= nr_seq_intercambio_w;
			end if;
			 
			begin 
			select	b.ie_tipo_vinculo_operadora 
			into STRICT	ie_tipo_vinculo_operadora_w 
			from	pls_segurado	b 
			where	b.nr_sequencia	= nr_seq_segurado_w;
			exception 
			when others then 
				ie_tipo_vinculo_operadora_w	:= null;
			end;
			 
			select	max(a.nr_seq_pagador), 
				max(a.nr_seq_contrato), 
				max(a.nr_seq_plano), 
				trunc(months_between(dt_mes_referencia_p, max(b.dt_nascimento)) / 12) 
			into STRICT	nr_seq_pagador_w, 
				nr_seq_contrato_w, 
				nr_seq_plano_w, 
				qt_idade_w 
			from	pessoa_fisica	b, 
				pls_segurado	a 
			where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica 
			and	a.nr_sequencia		= nr_seq_segurado_w;
			 
			begin 
			select	max(a.ie_preco), 
				max(a.ie_regulamentacao), 
				max(a.ie_tipo_contratacao), 
				max(a.nr_seq_outorgante), 
				max(a.cd_estabelecimento) 
			into STRICT	ie_preco_w, 
				ie_regulamentacao_w, 
				ie_tipo_contratacao_w, 
				nr_seq_operadora_w, 
				cd_estabelecimento_w 
			from	pls_plano	a 
			where	a.nr_sequencia	= nr_seq_plano_w;
			exception 
			when others then 
				ie_preco_w		:= null;
				ie_regulamentacao_w	:= null;
				ie_tipo_contratacao_w	:= null;
				cd_estabelecimento_w	:= null;
			end;
			 
			if (coalesce(nr_seq_operadora_w::text, '') = '') then 
				select	max(nr_sequencia) 
				into STRICT	nr_seq_operadora_w 
				from	pls_outorgante 
				where	cd_estabelecimento = cd_estabelecimento_w;
			end if;
			 
			insert into pls_resultado(nr_sequencia, 
				cd_estabelecimento, 
				nr_seq_operadora, 
				nr_seq_produto, 
				nr_seq_contrato, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				dt_mes_referencia, 
				ie_tipo_contratacao, 
				vl_resultado, 
				ie_tipo_valor, 
				cd_cgc_estipulante, 
				cd_pf_estipulante, 
				ie_tipo_beneficiario, 
				qt_idade, 
				nr_seq_pagador, 
				ie_preco, 
				ie_tipo_vinculo_operadora, 
				ie_regulamentacao, 
				nr_seq_repasse_mens, 
				nr_seq_segurado, 
				nr_seq_intercambio) 
			values (nextval('pls_resultado_seq'), 
				cd_estabelecimento_p, 
				nr_seq_operadora_w, 
				nr_seq_plano_w, 
				nr_seq_contrato_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				dt_referencia_w, 
				ie_tipo_contratacao_w, 
				vl_comissao_w, 
				'4', 
				cd_cgc_estipulante_w, 
				cd_pf_estipulante_w, 
				ie_tipo_beneficiario_w, 
				qt_idade_w, 
				nr_seq_pagador_w, 
				ie_preco_w, 
				ie_tipo_vinculo_operadora_w, 
				ie_regulamentacao_w, 
				nr_seq_repasse_mens_w, 
				nr_seq_segurado_w, 
				nr_seq_intercambio_w);
			end;
		end loop;
		close C05;
	/* Ressarcimento SUS */
 
	elsif (r_c01.vl_dominio = 7) then 
		open C08;
		loop 
		fetch C08 into 
			vl_ressarcimento_sus_w, 
			nr_seq_segurado_w;
		EXIT WHEN NOT FOUND; /* apply on C08 */
			begin 
			begin 
			select	b.ie_tipo_vinculo_operadora 
			into STRICT	ie_tipo_vinculo_operadora_w 
			from	pls_segurado	b 
			where	b.nr_sequencia	= nr_seq_segurado_w;
			exception 
			when others then 
				ie_tipo_vinculo_operadora_w	:= null;
			end;
			 
			insert into pls_resultado(nr_sequencia, 
				cd_estabelecimento, 
				nr_seq_operadora, 
				nr_seq_produto, 
				nr_seq_contrato, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				dt_mes_referencia, 
				ie_tipo_contratacao, 
				vl_resultado, 
				ie_tipo_valor, 
				cd_cgc_estipulante, 
				cd_pf_estipulante, 
				ie_tipo_beneficiario, 
				qt_idade, 
				nr_seq_pagador, 
				ie_preco, 
				ie_tipo_vinculo_operadora, 
				ie_regulamentacao, 
				nr_seq_segurado, 
				nr_seq_intercambio) 
			values (nextval('pls_resultado_seq'), 
				cd_estabelecimento_p, 
				nr_seq_operadora_w, 
				nr_seq_plano_w, 
				nr_seq_contrato_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				dt_referencia_w, 
				ie_tipo_contratacao_w, 
				vl_ressarcimento_sus_w, 
				'7', 
				cd_cgc_estipulante_w, 
				cd_pf_estipulante_w, 
				ie_tipo_beneficiario_w, 
				qt_idade_w, 
				nr_seq_pagador_w, 
				ie_preco_w, 
				ie_tipo_vinculo_operadora_w, 
				ie_regulamentacao_w, 
				nr_seq_segurado_w, 
				nr_seq_intercambio_w);
			end;
		end loop;
		close C08;
	/* Coparticipação */
 
	elsif (r_c01.vl_dominio = 11) then 
		open C06;
		loop 
		fetch C06 into 
			vl_mensalidade_w, 
			nr_seq_segurado_w, 
			nr_seq_mensalidade_w, 
			nr_seq_conta_copart_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin 
			begin 
			select	coalesce(a.ie_tipo_segurado,'B'), 
				a.nr_seq_contrato, 
				a.nr_seq_intercambio, 
				a.ie_tipo_vinculo_operadora, 
				a.nr_seq_pagador, 
				a.nr_seq_plano, 
				trunc(months_between(dt_mes_referencia_p, b.dt_nascimento) / 12) 
			into STRICT	ie_tipo_beneficiario_w, 
				nr_seq_contrato_w, 
				nr_seq_intercambio_w, 
				ie_tipo_vinculo_operadora_w, 
				nr_seq_pagador_w, 
				nr_seq_plano_w, 
				qt_idade_w 
			from	pls_segurado a, 
				pessoa_fisica b 
			where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica 
			and 	a.nr_sequencia		= nr_seq_segurado_w;
			exception 
			when others then 
				nr_seq_contrato_w		:= null;
				nr_seq_intercambio_w		:= null;
				ie_tipo_vinculo_operadora_w	:= null;
				nr_seq_pagador_w		:= null;
				nr_seq_plano_w			:= null;
				qt_idade_w			:= null;
			end;
			 
			if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then 
				select 	cd_cgc_estipulante, 
					cd_pf_estipulante 
				into STRICT	cd_cgc_estipulante_w, 
					cd_pf_estipulante_w 
				from 	pls_contrato 
				where	nr_sequencia 	= nr_seq_contrato_w;
			elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then 
				select	cd_cgc, 
					cd_pessoa_fisica 
				into STRICT	cd_cgc_estipulante_w, 
					cd_pf_estipulante_w 
				from 	pls_intercambio 
				where 	nr_sequencia	= nr_seq_intercambio_w;
			end if;
			 
			if (nr_seq_mensalidade_w IS NOT NULL AND nr_seq_mensalidade_w::text <> '') then 
				select	max(a.nr_seq_pagador) 
				into STRICT	nr_seq_pagador_w 
				from	pls_mensalidade	a 
				where	a.nr_sequencia	= nr_seq_mensalidade_w;
			end if;
			 
			begin 
			select	max(a.ie_preco), 
				max(a.ie_regulamentacao), 
				max(a.ie_tipo_contratacao), 
				max(a.nr_seq_outorgante), 
				max(a.cd_estabelecimento) 
			into STRICT	ie_preco_w, 
				ie_regulamentacao_w, 
				ie_tipo_contratacao_w, 
				nr_seq_operadora_w, 
				cd_estabelecimento_w 
			from	pls_plano	a 
			where	a.nr_sequencia	= nr_seq_plano_w;
			exception 
			when others then 
				ie_preco_w		:= null;
				ie_regulamentacao_w	:= null;
				ie_tipo_contratacao_w	:= null;
			end;
			 
			if (coalesce(nr_seq_operadora_w::text, '') = '') then 
				nr_seq_operadora_w	:= nr_seq_operadora_estab_w;
			end if;
			 
			insert into pls_resultado(nr_sequencia, 
				cd_estabelecimento, 
				nr_seq_operadora, 
				nr_seq_produto, 
				nr_seq_contrato, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				dt_mes_referencia, 
				ie_tipo_contratacao, 
				vl_resultado, 
				ie_tipo_valor, 
				cd_cgc_estipulante, 
				cd_pf_estipulante, 
				ie_tipo_beneficiario, 
				qt_idade, 
				nr_seq_pagador, 
				ie_preco, 
				ie_tipo_vinculo_operadora, 
				ie_regulamentacao, 
				nr_seq_mensalidade, 
				nr_seq_conta_copartic, 
				nr_seq_segurado, 
				nr_seq_intercambio) 
			values (nextval('pls_resultado_seq'), 
				cd_estabelecimento_p, 
				nr_seq_operadora_w, 
				nr_seq_plano_w, 
				nr_seq_contrato_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				dt_referencia_w, 
				ie_tipo_contratacao_w, 
				vl_mensalidade_w, 
				'11', 
				cd_cgc_estipulante_w, 
				cd_pf_estipulante_w, 
				ie_tipo_beneficiario_w, 
				qt_idade_w, 
				nr_seq_pagador_w, 
				ie_preco_w, 
				ie_tipo_vinculo_operadora_w, 
				ie_regulamentacao_w, 
				nr_seq_mensalidade_w, 
				nr_seq_conta_copart_w, 
				nr_seq_segurado_w, 
				nr_seq_intercambio_w);
			end;
		end loop;
		close C06;
	end if;
	end;
end loop;
 
/* Obter o valor total das contas contábeis de despesa assistencial */
 
select	coalesce(sum(b.vl_saldo),0) 
into STRICT	vl_total_despesa_w 
from	ctb_mes_ref	c, 
	ctb_balancete_v	b, 
	pls_ctb_despesa	a 
where	a.cd_conta_contabil		= b.cd_conta_contabil 
and	b.nr_seq_mes_ref		= c.nr_sequencia 
and	b.ie_normal_encerramento	= 'N' 
and	trunc(c.dt_referencia,'month')	= dt_referencia_w;
 
/* Obter o valor total das contas contábeis de imposto */
 
select	coalesce(sum(b.vl_saldo),0) 
into STRICT	vl_total_imposto_w 
from	ctb_mes_ref			c, 
	ctb_balancete_v			b, 
	pls_ctb_imposto_resultado	a 
where	a.cd_conta_contabil		= b.cd_conta_contabil 
and	b.nr_seq_mes_ref		= c.nr_sequencia 
and	b.ie_normal_encerramento	= 'N' 
and	trunc(c.dt_referencia,'month')	= dt_referencia_w;
 
update	pls_competencia 
set	vl_total_despesa			= vl_total_despesa_w, 
	vl_total_imposto			= vl_total_imposto_w 
where	trunc(dt_mes_competencia, 'month')	= dt_referencia_w 
and	cd_estabelecimento			= cd_estabelecimento_p;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_valores_result_itens ( dt_mes_referencia_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

