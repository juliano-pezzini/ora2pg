-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sup_comunica_solic_pad_mat ( nr_sequencia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_existe_w			bigint;
nr_seq_regra_w			bigint;
cd_perfil_w			varchar(10);
nr_seq_classif_w			varchar(10);
nm_usuarios_adic_w		varchar(255);
ds_titulo_w			varchar(80);
ds_comunicacao_w		varchar(4000);
ie_ci_lida_w			varchar(1);
nr_seq_comunic_w			bigint;
ds_material_w			varchar(255);
ds_material_generico_w		varchar(255);
ds_concentracao_w		varchar(255);

/* Se tiver setor na regra, envia CI para os setores */

ds_setor_adicional_w                    varchar(2000) := '';
/* Campos da regra Usuário da Regra */

cd_setor_regra_usuario_w		integer;

c01 CURSOR FOR
SELECT	b.nr_sequencia,
	b.cd_perfil,
	b.nm_usuarios_adic
from	regra_envio_comunic_compra a,
	regra_envio_comunic_evento b
where	a.nr_sequencia = b.nr_seq_regra
and	a.cd_funcao = -124
and	b.cd_evento = 50
and	b.ie_situacao = 'A'
and	a.cd_estabelecimento = cd_estabelecimento_p
and	substr(obter_se_envia_ci_regra_compra(b.nr_sequencia,nr_sequencia_p,'MP',obter_perfil_ativo,nm_usuario_p,null),1,1) = 'S';

c05 CURSOR FOR
SELECT	coalesce(a.cd_setor_atendimento,0) cd_setor_atendimento
from	regra_envio_comunic_usu a
where	a.nr_seq_evento = nr_seq_regra_w;


BEGIN

select	count(*)
into STRICT	qt_existe_w
from	regra_envio_comunic_compra a,
	regra_envio_comunic_evento b
where	a.nr_sequencia = b.nr_seq_regra
and	a.cd_funcao = -124
and	b.cd_evento = 50
and	b.ie_situacao = 'A'
and	a.cd_estabelecimento = cd_estabelecimento_p;

if (qt_existe_w > 0) then
	begin

	select	ds_material,
		ds_material_generico,
		ds_concentracao
	into STRICT	ds_material_w,
		ds_material_generico_w,
		ds_concentracao_w
	from	material_padronizacao
	where	nr_sequencia = nr_sequencia_p;

	open C01;
	loop
	fetch C01 into
		nr_seq_regra_w,
		cd_perfil_w,
		nm_usuarios_adic_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then
			cd_perfil_w := cd_perfil_w ||',';
		end if;

		select	max(b.ds_titulo),
			max(substr(b.ds_comunicacao,1,4000))
		into STRICT	ds_titulo_w,
				ds_comunicacao_w
		from	regra_envio_comunic_compra a,
				regra_envio_comunic_evento b
		where	a.nr_sequencia = b.nr_seq_regra
		and	b.nr_sequencia = nr_seq_regra_w;

		ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w,'@nm_comercial', ds_material_w),1,4000);
		ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w,'@nm_generico', ds_material_generico_w),1,4000);
		ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w,'@nr_solicitacao',nr_sequencia_p),1,4000);
		ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w,'@concentracao', ds_concentracao_w),1,4000);

		select	coalesce(ie_ci_lida,'N')
		into STRICT	ie_ci_lida_w
		from 	regra_envio_comunic_evento
		where 	nr_sequencia = nr_seq_regra_w;

		open C05;
		loop
		fetch C05 into
			cd_setor_regra_usuario_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin
			if (cd_setor_regra_usuario_w <> 0) and (obter_se_contido_char(cd_setor_regra_usuario_w, ds_setor_adicional_w) = 'N') then
				ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',',1,2000);
			end if;
			end;
		end loop;
		close C05;

		select	obter_classif_comunic('F')
		into STRICT	nr_seq_classif_w
		;

		select	nextval('comunic_interna_seq')
		into STRICT	nr_seq_comunic_w
		;

		insert	into comunic_interna(
			nr_sequencia,
			dt_comunicado,
			ds_titulo,
			ds_comunicado,
			nm_usuario,
			dt_atualizacao,
			ie_geral,
			nm_usuario_destino,
			ie_gerencial,
			nr_seq_classif,
			dt_liberacao,
			ds_perfil_adicional,
			ds_setor_adicional) values (
				nr_seq_comunic_w,
				clock_timestamp(),
				ds_titulo_w,
				ds_comunicacao_w,
				nm_usuario_p,
				clock_timestamp(),
				'N',
				nm_usuarios_adic_w,
				'N',
				nr_seq_classif_w,
				clock_timestamp(),
				cd_perfil_w,
				ds_setor_adicional_w);

		/*Para que a comunicação seja gerada como lida ao próprio usuário */

		if (ie_ci_lida_w = 'S') then
			insert into comunic_interna_lida(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao) values (
					nr_seq_comunic_w,
					nm_usuario_p,
					clock_timestamp());
			end if;

		end;
	end loop;
	close C01;

	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_comunica_solic_pad_mat ( nr_sequencia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

