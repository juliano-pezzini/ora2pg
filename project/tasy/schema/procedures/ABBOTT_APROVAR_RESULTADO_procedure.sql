-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE abbott_aprovar_resultado ( nr_prescricao_p text, cd_barras_p text, cd_exame_prescricao_p text, nm_usuario_p text) AS $body$
DECLARE


cd_estabelecimento_w    prescr_medica.cd_estabelecimento%type;
nr_prescricao_w         prescr_medica.nr_prescricao%type;
nr_seq_prescr_w         prescr_procedimento.nr_sequencia%type;
ie_status_atend_w       prescr_procedimento.ie_status_atend%type;
ie_status_receb_w       prescr_procedimento.ie_status_atend%type;

nr_seq_exame_w          exame_laboratorio.nr_seq_exame%type;

nr_seq_resultado_w      exame_lab_resultado.nr_seq_resultado%type;

nr_seq_material_w       exame_lab_result_item.nr_seq_material%type;
qt_resultado_w          exame_lab_result_item.qt_resultado%type;
pr_resultado_w          exame_lab_result_item.pr_resultado%type;
ds_resultado_w          exame_lab_result_item.ds_resultado%type;
cd_barras_w             numeric(38);

ds_erro_w               varchar(4000);
ie_pend_result_w        varchar(1);
nr_seq_formato_w        exame_lab_result_item.nr_seq_formato%type;

nm_usuario_w            usuario.nm_usuario%type;

ie_usa_status_receb_w   lab_parametro.ie_status_rece_abbot%type;

c02 CURSOR FOR
SELECT  r.nr_seq_exame,
        coalesce(r.qt_resultado, 0),
        r.pr_resultado,
        r.ds_resultado
from    exame_lab_result_item r,
        exame_laboratorio e
where   r.nr_seq_resultado = nr_seq_resultado_w
and     r.nr_seq_prescr = nr_seq_prescr_w
and     ((r.qt_resultado <> 0) or (r.pr_resultado <> 0) or (r.ds_resultado IS NOT NULL AND r.ds_resultado::text <> ''))
and     r.nr_seq_exame = e.nr_seq_exame
order by r.nr_sequencia, e.nr_seq_apresent;


BEGIN

    begin
        select  cd_estabelecimento
        into STRICT    cd_estabelecimento_w
        from    prescr_medica
        where   nr_prescricao = nr_prescricao_p;
    exception when others then
        cd_estabelecimento_w := 0; end;

    begin
        select  ie_status_receb,
                ie_status_rece_abbot
        into STRICT    ie_status_receb_w,
                ie_usa_status_receb_w
        from    lab_parametro
        where   cd_estabelecimento = cd_estabelecimento_w;

        if ie_usa_status_receb_w <> 'S' or coalesce(ie_status_receb_w::text, '') = '' then
            ie_status_receb_w := 45;
        end if;
    exception when others then
        ie_status_receb_w := 45;
    end;

    begin

        cd_barras_w := obter_somente_numero(cd_barras_p);

        select   coalesce(max(nm_usuario), nm_usuario_p)
        into STRICT     nm_usuario_w
        from     usuario
        where    ds_login = nm_usuario_p;

        select  max(c.nr_sequencia),
                max(c.ie_status_atend),
                max(c.nr_prescricao)
        into STRICT    nr_seq_prescr_w,
                ie_status_atend_w,
                nr_prescricao_w
        from    atendimento_paciente a,
                prescr_medica b,
                prescr_procedimento c,
                prescr_proc_material d,
                prescr_proc_mat_item d1,
                exame_laboratorio e,
                material_exame_lab f
        where   a.nr_atendimento = b.nr_atendimento
        and     b.nr_prescricao = c.nr_prescricao
        and     c.nr_prescricao = d.nr_prescricao
        and     c.nr_seq_exame = e.nr_seq_exame
        and     f.cd_material_exame = c.cd_material_exame
        and     d.nr_seq_material = f.nr_sequencia
        and     d.nr_sequencia = d1.nr_seq_prescr_proc_mat
        and     d1.nr_seq_prescr = c.nr_sequencia
        and     b.nr_prescricao = nr_prescricao_p
        and     d.cd_barras = cd_barras_w
        and     coalesce(c.ie_suspenso, 'N') = 'N'
        and     coalesce(e.ie_situacao, 'A') = 'A'
        and     c.nr_seq_exame in (WITH RECURSIVE cte AS (

                SELECT  coalesce(x.nr_seq_exame, 0)
                from    exame_laboratorio x,
                        equipamento_lab x1,
                        lab_exame_equip x2 WHERE x2.cd_exame_equip = cd_exame_prescricao_p
  UNION ALL

                SELECT  coalesce(x.nr_seq_exame, 0)
                from    exame_laboratorio x,
                        equipamento_lab x1,
                        lab_exame_equip x2 JOIN cte c ON (c.prior nr_seq_superior = x.x.nr_seq_exame)

) SELECT * FROM cte WHERE x1.ds_sigla = 'ABBOTT'
                and     x1.cd_equipamento = x2.cd_equipamento
                and     x2.nr_seq_exame = nr_seq_exame;
);

        if (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') and (ie_status_atend_w = 30) then

            select  max(nr_seq_resultado)
            into STRICT    nr_seq_resultado_w
            from    exame_lab_resultado
            where   nr_prescricao = nr_prescricao_w;

            if (nr_seq_resultado_w IS NOT NULL AND nr_seq_resultado_w::text <> '') and (nr_seq_prescr_w IS NOT NULL AND nr_seq_prescr_w::text <> '') then

                select  max(nr_seq_material)
                into STRICT    nr_seq_material_w
                from    exame_lab_result_item
                where   nr_seq_resultado = nr_seq_resultado_w
                and     nr_seq_prescr = nr_seq_prescr_w
                and     (nr_seq_material IS NOT NULL AND nr_seq_material::text <> '');

                open c02;
                loop fetch c02 into  nr_seq_exame_w,
                    qt_resultado_w,
                    pr_resultado_w,
                    ds_resultado_w;
                EXIT WHEN NOT FOUND; /* apply on c02 */

                    ds_resultado_w := calcular_valores_exame(nr_seq_resultado_w, nr_prescricao_w, nr_seq_prescr_w, nr_seq_material_w, nr_seq_exame_w, qt_resultado_w, pr_resultado_w, ds_resultado_w);

                end loop;
                close c02;

                delete  FROM result_laboratorio
                where   nr_prescricao = nr_prescricao_w
                and     nr_seq_prescricao = nr_seq_prescr_w;

                if ie_status_atend_w <> ie_status_receb_w then
                    select  max(b.nr_seq_formato)
                    into STRICT    nr_seq_formato_w
                    from    exame_lab_resultado a,
                            exame_lab_result_item b
                    where   a.nr_seq_resultado = b.nr_seq_resultado
                    and     a.nr_prescricao = nr_prescricao_w
                    and     b.nr_seq_prescr = nr_seq_prescr_w
                    and     (b.nr_seq_formato IS NOT NULL AND b.nr_seq_formato::text <> '');

                    CALL gravar_log_lab(1234, 'nr_prescricao_w = ' || nr_prescricao_w ||
                                         'nr_seq_prescr_w = ' || nr_seq_prescr_w, nm_usuario_w, nr_prescricao_w);

                    select  CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
                    into STRICT    ie_pend_result_w
                    from    exame_lab_resultado a,
                            exame_lab_result_item b,
                            exame_lab_format_item c,
                            equipamento_lab d,
                            lab_exame_equip e
                    where   a.nr_seq_resultado = b.nr_seq_resultado
                    and     c.nr_seq_exame = b.nr_seq_exame
                    and     b.nr_seq_exame = e.nr_seq_exame
                    and     e.cd_equipamento = d.cd_equipamento
                    and     d.ds_sigla = 'ABBOTT'
                    and     c.nr_seq_formato = nr_seq_formato_w
                    and     a.nr_prescricao = nr_prescricao_w
                    and     b.nr_seq_prescr = nr_seq_prescr_w
                    and     coalesce(b.ie_status::text, '') = '';

                    if (ie_pend_result_w = 'N') then

                        if ie_status_receb_w >= 35 then
                            update  exame_lab_result_item
                            set     dt_aprovacao = clock_timestamp(),
                                    nm_usuario_aprovacao = nm_usuario_w,
                                    nm_usuario = nm_usuario_w
                            where   nr_seq_resultado = nr_seq_resultado_w
                            and     nr_seq_prescr = nr_seq_prescr_w
                            and     (nr_seq_material IS NOT NULL AND nr_seq_material::text <> '');
                        end if;

                        update  prescr_procedimento
                        set     ie_status_atend = ie_status_receb_w,
                                nm_usuario = nm_usuario_w
                        where   nr_prescricao = nr_prescricao_w
                        and     nr_sequencia = nr_seq_prescr_w
                        and     ie_status_atend < 35;

                    end if;
                end if;
            end if;
        end if;

    exception
        when others then
            ds_erro_w := substr(sqlerrm, 1, 1000);
            CALL gravar_log_lab(69999,
                substr('ABBOTT - ' ||
                    obter_desc_expressao(712423) || ' ' ||
                    obter_desc_expressao(722599) || ' ' ||  nr_seq_resultado_w   || ' - ' ||
                    obter_desc_expressao(325814) || ' ' ||  nr_prescricao_w      || ' - ' ||
                    'seq_prescricao: '           ||         nr_seq_prescr_w      || ' - ' ||
                    obter_desc_expressao(326091) || ' ' ||  nr_seq_material_w    || ' - ' ||
                    obter_desc_expressao(621805) || ' ' ||  nr_seq_exame_w       || ' - ' ||
                    'qt_resultado: '             ||         qt_resultado_w       || ' - ' ||
                    'pr_resultado: '             ||         pr_resultado_w       || ' - ' ||
                    obter_desc_expressao(504115) || ' ' ||  ds_erro_w, 1, 2000),
                'ABBOTT', nr_prescricao_w);
    end;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE abbott_aprovar_resultado ( nr_prescricao_p text, cd_barras_p text, cd_exame_prescricao_p text, nm_usuario_p text) FROM PUBLIC;

