-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nom_rc_encontro ( nr_seq_cabecalho_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* Medical Meeting */

nr_atendimento_w			atendimento_paciente.nr_atendimento%type;
nr_seq_episodio_w			episodio_paciente.nr_sequencia%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;

nr_telefone_w			    varchar(255);
ds_email_w				    varchar(255);
cd_cgc_w				    pessoa_juridica.cd_cgc%type;
ds_razao_social_w		    pessoa_juridica.ds_razao_social%type;
cd_clues_w				    pessoa_juridica.cd_internacional%type;
nr_licenca_sanitaria_w	    pessoa_juridica.nr_alvara_sanitario%type;

dt_inicio_encontro_w		timestamp;
dt_fim_encontro_w			timestamp;
cd_tipo_encontro_w			varchar(30);
nr_crm_w					medico.nr_crm%type;
nm_prim_nome_medico_w		person_name.ds_given_name%type;
nm_sobren_medico_1_pai_w	person_name.ds_family_name%type;
nm_sobren_medico_2_mae_w	person_name.ds_component_name_1%type;
cd_motivo_alta_w			varchar(30);
ds_motivo_alta_w			varchar(255);
nr_domicilio_ext_w			varchar(255);	/*id_200*/
nr_domicilio_ext_alfa_w		varchar(255);	/*id_201*/
nr_domicilio_int_w			varchar(255);	/*id_202*/
nr_domicilio_int_alfa_w		varchar(255);	/*id_203*/
nr_seq_pessoa_endereco_w	pessoa_juridica.nr_seq_pessoa_endereco%type;
ds_endereco_completo_w		varchar(2000);	
cd_tipo_vialidade_w			end_endereco.ds_endereco%type;
ds_rua_vialidade_w			end_endereco.ds_endereco%type;
nr_numero_externo_w			end_endereco.ds_endereco%type;
nr_numero_interno_w			end_endereco.ds_endereco%type;
cd_tipo_asentamento_w		end_endereco.ds_endereco%type;
nm_assentamento_w		    end_endereco.ds_endereco%type;
cd_localidade_w				end_endereco.ds_endereco%type;
cd_municipio_w				end_endereco.ds_endereco%type;
cd_entidade_w				end_endereco.ds_endereco%type;
cd_postal_w					end_endereco.ds_endereco%type;
cd_pais_w					end_endereco.ds_endereco%type;
nr_seq_catalogo_w			end_catalogo.nr_sequencia%type;

cd_local_atendimento_w		nom_rc_encontro.cd_local_atendimento%type;
ds_local_atendimento_w		varchar(255);

ds_oid_atend_w				varchar(255)	:= null;
nm_oid_atend_w				varchar(255);
ds_oid_estab_w				varchar(255)	:= null;
nm_oid_estab_w				varchar(255);
ds_tipo_w				    varchar(255);

c01 CURSOR FOR
	SELECT	nr_atendimento
	from	atendimento_paciente
	where	nr_atendimento in (SELECT	x.nr_atendimento
								from	nom_rc_cabecalho x
								where	x.nr_sequencia = nr_seq_cabecalho_p
								and		(x.nr_atendimento IS NOT NULL AND x.nr_atendimento::text <> '')
								
union

								select	y.nr_atendimento
								from	atendimento_paciente y,
									nom_rc_cabecalho x
								where	x.nr_seq_episodio = y.nr_seq_episodio
								and		x.nr_sequencia = nr_seq_cabecalho_p);

BEGIN

delete from nom_rc_encontro
where nr_seq_cabecalho = nr_seq_cabecalho_p;

select	a.nr_atendimento,
		a.nr_seq_episodio,
		a.cd_estabelecimento
into STRICT	nr_atendimento_w,
		nr_seq_episodio_w,
		cd_estabelecimento_w
from	nom_rc_cabecalho a
where	a.nr_sequencia	= nr_seq_cabecalho_p;

for r_c01 in c01 loop

	ds_oid_atend_w := get_oid_details(2,'OID_NUMBER','NOM', cd_estabelecimento_w); /*id_211*/
	SELECT * FROM obter_oid_nom(cd_estabelecimento_w, null, 'E', ds_oid_estab_w, nm_oid_estab_w) INTO STRICT ds_oid_estab_w, nm_oid_estab_w; /*id_211*/
	if (coalesce(ds_oid_estab_w::text, '') = '') then
		ds_tipo_w	:= obter_valor_dominio(8657,'E');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1062931,'DS_TIPO=' || ds_tipo_w);
	end if;

	/*Legal Entity*/

	select  pj.cd_cgc cd_cgc,
			pj.ds_razao_social ds_razao_social, /* id_222 */
			pj.cd_internacional cd_internacional,/* id_225 */
			pj.nr_alvara_sanitario nr_alvara_sanitario /* id_226 */
	into STRICT	cd_cgc_w,
			ds_razao_social_w,
			cd_clues_w,
			nr_licenca_sanitaria_w
	from 	pessoa_juridica pj,
			estabelecimento e,
			atendimento_paciente ap
	where 	e.cd_cgc = pj.cd_cgc
	and 	ap.cd_estabelecimento = e.cd_estabelecimento
	and		ap.nr_atendimento = r_c01.nr_atendimento;


	select	CASE WHEN ap.ie_tipo_atendimento=1 THEN 'IMP' WHEN ap.ie_tipo_atendimento=3 THEN 'EMER' WHEN ap.ie_tipo_atendimento=7 THEN 'FLD' WHEN ap.ie_tipo_atendimento=8 THEN 'AMB' WHEN ap.ie_tipo_atendimento=10 THEN 'ACUTE' WHEN ap.ie_tipo_atendimento=11 THEN 'HH' WHEN ap.ie_tipo_atendimento=12 THEN 'SS' WHEN ap.ie_tipo_atendimento=14 THEN 'VR' END  ie_tipo_atendimento_cod, /* id_213 */
			ap.dt_entrada dt_entrada, /* id_215 */
			ap.dt_alta dt_alta, /* id_216 */
			substr(obter_crm_medico(m.cd_pessoa_fisica), 1, 255) nr_crm, /* id_217 */
	
			z.ds_given_name nm_primeiro_nome, /* id_218 */
			z.ds_family_name nm_sobrenome_pai, /* id_219 */
			coalesce(z.ds_component_name_1, 'SIN INFORMACION') nm_sobrenome_mae, /* id_220 */
			ma.cd_motivo_nom_rc,
			ma.ds_motivo_alta ds_motivo_alta,
			ca.cd_local_atend_nom,
			ca.ds_classificacao
	into STRICT	cd_tipo_encontro_w,
			dt_inicio_encontro_w,
			dt_fim_encontro_w,
			nr_crm_w,
			nm_prim_nome_medico_w,
			nm_sobren_medico_1_pai_w,
			nm_sobren_medico_2_mae_w,
			cd_motivo_alta_w,
			ds_motivo_alta_w,
			cd_local_atendimento_w,
			ds_local_atendimento_w
	FROM pessoa_fisica pf_m
LEFT OUTER JOIN person_name z ON (pf_m.nr_seq_person_name = z.nr_sequencia AND 'main' = z.ds_type)
, medico m
LEFT OUTER JOIN atendimento_paciente ap ON (m.cd_pessoa_fisica = ap.cd_medico_resp)
LEFT OUTER JOIN motivo_alta ma ON (ap.cd_motivo_alta = ma.cd_motivo_alta)
LEFT OUTER JOIN classificacao_atendimento ca ON (ap.nr_seq_classificacao = ca.nr_sequencia)
WHERE pf_m.cd_pessoa_fisica = m.cd_pessoa_fisica     and ap.nr_atendimento = r_c01.nr_atendimento;


	if (coalesce(ds_local_atendimento_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1071394, 'NR_ATENDIMENTO=' || r_c01.nr_atendimento);
	end if;
	if (coalesce(cd_local_atendimento_w::text, '') = '') then
		--It was not possible to obtain the conversion of the "#@DS_CLASSIFICACAO#@" service rating. Check the registration in "General Register" > "Main Application" > "Service" > "Service Classification".
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1071286, 'DS_CLASSIFICACAO=' || ds_local_atendimento_w);
	end if;
	if ((ds_motivo_alta_w IS NOT NULL AND ds_motivo_alta_w::text <> '') and coalesce(cd_motivo_alta_w::text, '') = '') then
	--It was not possible to obtain the conversion of the discharge reason "#@DS_MOTIVO_ALTA#@" of the attendance. Check the register in "General Register" > "Main Application" > "Service Register" > "Reason for discharge".
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1071284, 'DS_MOTIVO_ALTA=' || ds_motivo_alta_w);
	end if;

	/* Address */

	select	nr_seq_pessoa_endereco,	
			get_complete_address_desc(a.nr_seq_pessoa_endereco,null,null,null,null,'Y') ds_endereco_completo,  /*id_230*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'TIPO_LOGRAD','C') cd_tipo_vialidade,  /*id_231*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'RUA_VIALIDADE','D') ds_rua_vialidade,  /*id_232*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'NUMERO','D') nr_numero_externo,	/* id_200 */
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'NUM_EXT_ALFA','D') nr_numero_externo_alfa,
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'NUMERO_INT','D') nr_numero_interno, /* id_203 */
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'COMPLEMENTO','D') nr_numero_interno_alfa,
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'TIPO_BAIRRO','C') cd_tipo_asentamento,  /*id_237*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'BAIRRO_VILA','D') nm_assentamento,  /*id_238*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'LOCALIDADE_AREA','C') cd_localidade, /*id_239*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'MUNICIPIO','C') cd_municipio, /*id_240*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'ESTADO_PROVINCI','C') cd_entidade, /*id_241*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'CODIGO_POSTAL','D') cd_postal, /*id_242*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'PAIS','C') cd_pais /*id_243*/
	into STRICT	nr_seq_pessoa_endereco_w,	
			ds_endereco_completo_w,
			cd_tipo_vialidade_w,
			ds_rua_vialidade_w,
			nr_domicilio_ext_w,
			nr_domicilio_ext_alfa_w,
			nr_domicilio_int_w,
			nr_domicilio_int_alfa_w,
			cd_tipo_asentamento_w,
			nm_assentamento_w,
			cd_localidade_w,
			cd_municipio_w,
			cd_entidade_w,
			cd_postal_w,
			cd_pais_w
	from	pessoa_juridica a
	where	a.cd_cgc = cd_cgc_w;

	select	max(b.nr_seq_catalogo)
	into STRICT	nr_seq_catalogo_w
	from	end_endereco b,
			pessoa_endereco_item a
	where	b.nr_sequencia = a.nr_seq_end_endereco
	and		a.nr_seq_pessoa_endereco = nr_seq_pessoa_endereco_w;

	insert into nom_rc_encontro(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ds_oid_encontro,
		nr_ident_encontro,
		cd_tipo_encontro,
		dt_inicio_encontro,
		dt_fim_encontro,
		nr_cod_prof_resp_legal,
		nm_prim_nome_medico,
		nm_sobren_medico_1_pai,
		nm_sobren_medico_2_mae,
		ds_oid_organiz_saude,
		nm_organiz_saude,
		cd_motivo_alta,
		nr_domicilio_ext,
		nr_domicilio_ext_alfa,
		nr_domicilio_int,
		nr_domicilio_int_alfa,
		cd_tipo_assentamento,
		cd_localidade,
		cd_municipio,
		cd_entidade_fed,
		cd_postal,
		cd_pais,
		cd_clues_resp_encontro,
		nr_licenca_sanitaria,
		cd_local_atendimento,
		nm_organiz_encontro,
		ds_domicilio,
		cd_tipo_vialidade,
		nm_vialidade,
		nm_assentamento,
		nr_seq_cabecalho,
		nr_seq_catalogo)
	values (nextval('nom_rc_encontro_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		ds_oid_atend_w,
		r_c01.nr_atendimento,
		cd_tipo_encontro_w,
		dt_inicio_encontro_w,
		dt_fim_encontro_w,
		nr_crm_w,
		nm_prim_nome_medico_w,
		nm_sobren_medico_1_pai_w,
		nm_sobren_medico_2_mae_w,
		ds_oid_estab_w,
		nm_oid_estab_w,
		cd_motivo_alta_w,
		nr_domicilio_ext_w,
		nr_domicilio_ext_alfa_w,
		nr_domicilio_int_w,
		nr_domicilio_int_alfa_w,
		cd_tipo_asentamento_w,
		cd_localidade_w,
		cd_municipio_w,
		cd_entidade_w,
		cd_postal_w,
		cd_pais_w,
		cd_clues_w,
		nr_licenca_sanitaria_w,
		cd_local_atendimento_w,
		ds_razao_social_w,
		ds_endereco_completo_w,
		cd_tipo_vialidade_w,
		ds_rua_vialidade_w,
		nm_assentamento_w,
		nr_seq_cabecalho_p,
		nr_seq_catalogo_w);

end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nom_rc_encontro ( nr_seq_cabecalho_p bigint, nm_usuario_p text) FROM PUBLIC;

