-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gravar_conta_paciente_transf ( nr_atendimento_p bigint, nr_conta_origem_p bigint, nr_conta_atual_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*
- insere conta origem e atual.
- origem é a conta de origem da transferencia de conta
- atual é a conta para qual foi transferida
- conta atual é atualizada caso a conta que ja foi transferida seja transferida.
Por exemplo:
	Transferiu a conta 1 para a conta 2. Gravou na tabela com origem 1 e atual 2.
	Agora, ele transfere a conta 2 para a conta 3. Iremos gravar novamente na tabela, origem 2 para atual 3.
	Porém, o registro que antes estava apontando para origem 1 e atual 2, terá que ser atualizado, para apontar a origem 1 e atual 3, 
	que é a nova conta, para garantirmos que a conta atual sempre estará apontando para as contas que deram origem, 
	e o pessoal do fiscal poder utilizar essa informação, para a busca das notas fiscais.
*/
qt_registros_w		bigint := 0;
nr_sequencia_w		conta_paciente_transf.nr_sequencia%type;
nr_seq_conta_origem_w   conta_paciente_transf.nr_seq_conta_origem%type;


BEGIN


if ((nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and
	 (nr_conta_origem_p IS NOT NULL AND nr_conta_origem_p::text <> '') and 
	 (nr_conta_atual_p IS NOT NULL AND nr_conta_atual_p::text <> '') and 
	 (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '')) then

	select 	nextval('conta_paciente_transf_seq')
	into STRICT	nr_sequencia_w
	;
	
	select 	max(nr_seq_conta_origem)
	into STRICT 	nr_seq_conta_origem_w
	from    conta_paciente
	where   nr_interno_conta = nr_conta_origem_p;
	
	insert into conta_paciente_transf(
		nr_sequencia,
		nr_atendimento,
		nr_conta_origem,
		nr_conta_atual,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_atualizacao,
		nm_usuario,
		nr_seq_conta_origem)
	values ( nr_sequencia_w,
		 nr_atendimento_p,
		 nr_conta_origem_p,
		 nr_conta_atual_p,
		 clock_timestamp(),
		 nm_usuario_p,
		 clock_timestamp(),
		 nm_usuario_p,
		 nr_seq_conta_origem_w);	

	select  count(1)
	into STRICT 	qt_registros_w
	from 	conta_paciente_transf
	where 	nr_atendimento 		= nr_atendimento_p
	and 	nr_conta_atual  	= nr_conta_origem_p;
		
	if (qt_registros_w > 0) then
		update 	conta_paciente_transf 
		set	nr_conta_atual 		= nr_conta_atual_p,
			dt_atualizacao 		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where 	nr_atendimento 		= nr_atendimento_p
		and 	nr_conta_atual  	= nr_conta_origem_p;
	end if;
			
	commit;
end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_conta_paciente_transf ( nr_atendimento_p bigint, nr_conta_origem_p bigint, nr_conta_atual_p bigint, nm_usuario_p text) FROM PUBLIC;

