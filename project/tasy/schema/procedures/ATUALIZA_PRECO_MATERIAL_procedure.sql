-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_preco_material ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE

					
dt_atualizacao_w          		timestamp         := clock_timestamp();
dt_acerto_conta_w         		timestamp;
dt_conta_definitiva_w	  	timestamp;
dt_conta_w                		timestamp         := clock_timestamp();
dt_preco_w		  	timestamp;
dt_ult_vigencia_w         		timestamp        	:= clock_timestamp();
cd_estabelecimento_w      		smallint  := 0;
cd_estab_atend_w      		smallint  := 0;
cd_convenio_w             		integer  := 0;
cd_convenio_orig_w        		integer  := 0;
cd_categoria_orig_w	  	varchar(20);
cd_categoria_w           		varchar(10);
ie_cobra_paciente_w      		varchar(1)  := 'N';
vl_material_orig_w        		double precision := 0;
vl_unitario_orig_w        		double precision := 0;
vl_total_material_w       		double precision := 0;
vl_unitario_w             		double precision := 0;
vl_preco_material_w       		double precision := 0;
qt_material_w             		double precision := 0;
vl_custo_mat_repasse_w    		double precision := 0;
qt_mat_w		  		bigint := 0;
cd_conta_receita_w		varchar(20);
ie_guia_w			varchar(20);
cd_centro_custo_w			integer;
dt_entrada_w			timestamp;
dt_alta_w				timestamp;
dt_altap_w				timestamp;
ie_tipo_atendimento_w			smallint    := 0;
cd_setor_atendimento_w			integer  := 0;
qt_autorizada_w				double precision := 0;
qt_utilizada_w				double precision := 0;
cd_situacao_glosa_w			smallint	   := 0;
ie_glosa_w				varchar(1);
cd_acao_w				varchar(1);
cd_senha_w				varchar(20);
cd_autorizacao_w			varchar(20);
nm_responsavel_w			varchar(40);
ie_tipo_convenio_w			smallint    := 0;
cd_tab_preco_mat_w		smallint  := 0;
ie_origem_preco_w			smallint    := 0;
nr_lote_contabil_w        		bigint   := 0;
ie_valor_informado_w      		varchar(1);
cd_proced_referencia_w    		bigint    := 0;
nr_seq_autorizacao_w      		bigint;
nr_interno_conta_w	  		bigint;
cd_convenio_calculo_w     		integer;
cd_categoria_calculo_w    		varchar(10);
nr_atendimento_w	  		bigint;
cd_material_w	  	  	integer;
nr_prescricao_w	  		bigint;
nr_sequencia_prescricao_w 		integer;
cd_material_prescricao_w  		integer;
dt_atendimento_w	  		timestamp;
dt_conta_real_w	  		timestamp;
nr_doc_convenio_w         		varchar(20);
ie_guia_informada_w       		varchar(01);
ie_classif_contabil_w	  	varchar(1);
ie_glosa_zerado_w	  		varchar(1)	:= 'N';
cd_tipo_acomodacao_w      		smallint;
cd_estrutura_w		  	integer := 0;
ie_emite_conta_w      	  	varchar(3);
cd_cgc_fornecedor_w    	  	varchar(14)   := '';
dt_conta_dev_w		  	timestamp;
qt_saldo_dev_w		  	double precision;
tx_conversao_conv_w		double precision;
qt_material_conv_w			double precision;
vl_preco_conv_w			double precision;
ie_clinica_w			integer;
nr_seq_grupo_rec_w		bigint;
cd_motivo_exc_conta_w		smallint;
qt_idade_w			smallint;
cd_local_estoque_w		smallint	:= null;
pr_glosa_w			double precision;
vl_glosa_w			double precision;
ds_erro_w			varchar(255);
dt_medicacao_w			timestamp;
cd_material_exec_w		integer;
cd_material_ww			integer;
dt_conta_orig_w         		timestamp;
cd_motivo_exc_conta_ww		bigint;
ie_estabelecimento_conta_w		varchar(01);
qt_conta_guia_w			bigint;
nr_seq_cor_exec_w		bigint;
qt_dia_fim_conta_w			bigint;
ie_gerar_conta_periodo_w		varchar(01);
ie_gerar_conta_guia_dif_w		varchar(01);
cd_pessoa_fisica_w		varchar(10);
tx_material_w			double precision;
tx_material_orig_w			double precision;
ie_ordem_data_devolucao_w		bigint;
ie_data_conta_devolucao_w		varchar(01);
cd_plano_w			varchar(10);
cd_cgc_prestador_w		varchar(15);

cd_regra_honorario_w		varchar(5);
cd_regra_honor_orig_w		varchar(5);
ie_conta_honorario_w		varchar(1);
ie_calcula_honorario_w		varchar(1)		:= 'S';
cd_cgc_honorario_w		varchar(14);
cd_pessoa_honorario_w		varchar(10);
nr_seq_criterio_w			bigint;
ie_calculo_taxa_regra_w		varchar(01);
ie_codigo_convenio_w		varchar(03);
nr_seq_proc_princ_w		bigint;

cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;

ie_auditoria_w			varchar(01);
ie_altera_auditoria_w		varchar(01)		:= 'S';
ie_calcular_mat_auditado_w		varchar(01);
ie_autor_particular_w		varchar(1) := 'N';
nr_seq_autor_gerada_w		bigint;
ie_tipo_convenio_aux_w		smallint;
ie_tipo_convenio_aux2_w		smallint;

cd_convenio_glosa_ww		integer := 0;
cd_categoria_glosa_ww		varchar(10):= ' ';
nr_seq_regra_ajuste_ww		bigint:= 0;

ie_doc_autorizacao_w		varchar(2)	:= 'N';
nr_sequencia_autor_w		bigint;
nr_seq_proc_autor_w		bigint;
nr_seq_mat_autor_w		bigint;
nr_doc_conv_autor_w		varchar(20);
cd_senha_autor_w			varchar(20);
ie_autorizado_w			varchar(1);
ie_valor_inf_desconto_w		varchar(01);
nr_seq_w				bigint;
tx_material_ww			double precision;

nr_interno_conta_proc_w		bigint;
cd_convenio_proc_w		bigint;
cd_categoria_proc_w		varchar(10);
cd_situacao_glosa_proc_w		bigint;
ie_glosa_mat_proc_princ_w		varchar(01);
ie_valor_inf_pacote_w		varchar(01);
nr_seq_proc_interno_w           	bigint;
ie_convenio_conta_param_w		varchar(1);

cd_grupo_material_w		smallint;
cd_subgrupo_material_w		smallint;
cd_classe_material_w		integer;
cd_estab_terceiro_w      		smallint;
qt_reg_estab_terc_w      		bigint;
ie_regra_conta_terc_mat_w		varchar(1);
nr_seq_conta_origem_w		bigint;
ie_grava_guia_conta_w		varchar(1);
nr_atendimento_proc_w		bigint;
cd_estab_logado_w		smallint;
cd_situacao_glosa_dev_w		bigint;
vl_unitario_atorizacao_w		double precision;
ie_responsavel_credito_w		varchar(255);
ie_altera_guia_w			varchar(1) := 'N';

pr_adicional_w			double precision;
ie_aplic_perc_autorizado_w		varchar(1);
ie_gerar_resp_credito_w		varchar(2);
ie_gastos_rn_alta_w		varchar(1):= 'N';
ie_trunc_vl_material_w		varchar(1):= 'N';
dt_material_w			timestamp;
nr_seq_autor_conv_w		bigint;

nr_dias_gastos_rn_w		bigint:= 0;
ie_dias_gastos_rn_w		varchar(1):= 'N';
ie_trat_conta_rn_w			varchar(15);
ie_trat_conta_rn_ww		varchar(15);
ie_regra_pacote_w			varchar(1):= 'N';
ie_arred_multiplicado_w		varchar(1):= 'N';
cd_classif_setor_rn_w		varchar(2);
cd_classif_setor_w			varchar(2);
ie_classif_gastos_rn_w		varchar(1):= 'S';
ie_autor_vl_conta_w		varchar(2);

ie_regra_tipo_atend_w		varchar(1):= 'A';
ie_status_acerto_w			smallint:= 1;
cd_estab_conta_w			smallint;
cd_funcao_w			integer;
cd_setor_paciente_w		integer;
cd_procedencia_w			integer;
ie_avisa_sem_conta_aberta_w	varchar(1):= 'S';
qt_conta_aberta_w			bigint;
ie_conversao_mat_w		varchar(1);
ie_regra_rn_item_w			varchar(1);
ds_stack_w			varchar(2000);
ie_transf_gasto_nr_w		varchar(1);
cd_tab_mat_atualizacao_w		smallint 	:= 0;
cd_tab_mat_praticado_w		smallint 	:= 0;
vl_mat_tab_atualizacao_w		double precision 	:= 0;
ie_valor_inf_mat_autor_w		varchar(1):= 'N';
ie_tipo_setor_classif_rn_w	varchar(1);
qt_conta_w			bigint;
ie_status_w			varchar(3);
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;
ie_estab_regra_honorario_w		varchar(1);
cd_estab_honorario_w			bigint;
ie_estagio_vl_conta_autor_w		varchar(15);
ie_status_conta_proc_w			smallint;
dt_desdobramento_w			timestamp;
qt_mat_pac_valor_w			bigint;
ie_aplica_tx_conv_preco_w		varchar(1);
cd_simpro_w				bigint;
qt_proc_ref_w				bigint;
cd_motivo_exc_conta_www			bigint;
nr_seq_mat_autor_ww			bigint;
ie_reducao_acrescimo_w			varchar(1);
qt_item_conta_w				bigint;
vl_total_autorizado_w			double precision;
qt_existe_repasse_w			bigint;

cd_proc_referencia_w			bigint;
ie_origem_proc_refer_w			bigint;
nr_seq_bras_preco_w		bigint;
nr_seq_bras_preco_orig_w		bigint;
nr_seq_mat_bras_w		bigint;
nr_seq_conv_bras_w		bigint;
cd_material_tuss_w			bigint;
nr_seq_tuss_mat_item_w			bigint;
ie_opme_w				varchar(1);
qt_regra_opme_conv_w			bigint;
nr_seq_conv_simpro_w		bigint;
nr_seq_mat_simpro_w		bigint;
nr_seq_simpro_preco_w		bigint;
cd_senha_mat_w			varchar(20);
cd_tab_preco_mat_regra_w	smallint;
qt_preco_mat_w			bigint;
dt_alta_preco_w			timestamp;
ds_material_tuss_w		varchar(255);
ie_valor_autorizado_w		varchar(1);
nr_seq_lote_fornec_w		material_atend_paciente.nr_seq_lote_fornec%type;
nr_seq_ajuste_mat_w		bigint;
ie_doc_convenio_w		varchar(3);
ie_recalculo_conta_w		varchar(1);
ie_altera_item_repasse_w	varchar(1);
ie_atualiza_valor_conta_w	varchar(1);
ie_item_fora_periodo_w		varchar(1):= 'N';
ie_atualiza_guia_w 		varchar(1);
ie_atualiza_senha_w 		varchar(1);
ie_autor_qtde_w 		varchar(1);
qt_desconto_item_w		bigint;

nr_seq_marca_w 			material_lote_fornec.nr_seq_marca%type;
nr_seq_atepacu_w			material_atend_paciente.nr_seq_atepacu%type;

ie_complexidade_sus_w		sus_procedimento.ie_complexidade%type;
ie_tipo_financ_sus_w		sus_procedimento.ie_tipo_financiamento%type;
ds_nls_territory_w		varchar(64);
cd_mat_item_ref_w		regra_ajuste_item_ref.cd_material%type;
cd_proc_item_ref_w		regra_ajuste_item_ref.cd_procedimento%type;
ie_origem_proc_item_ref_w	regra_ajuste_item_ref.ie_origem_proced%type;
qt_reg_ajuste_item_ref_w	bigint;
nr_seq_classif_atend_w		atendimento_paciente.nr_seq_classificacao%type;
cd_material_autor_w		material.cd_material%type;
ie_autor_generico_w		varchar(1);
nr_sequencia_regra_w		regra_conta_terceiro.nr_sequencia%type := 0;
ie_identifica_conta_mat_w	varchar(1);
ds_nao_informado_w		varchar(20);
cd_sequencia_parametro_w material_atend_paciente.cd_sequencia_parametro%type;
ie_tipo_material_w		material.ie_tipo_material%type;

/*SO-2220426*/

c01 CURSOR FOR
SELECT	/*+ index (a matpaci_i1) */	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_conta),
	sum(a.qt_material)
from	material_atend_paciente a
where	a.nr_atendimento 	= nr_atendimento_w
and	a.cd_material	= cd_material_w
and	(a.dt_conta IS NOT NULL AND a.dt_conta::text <> '')
and	a.nr_sequencia	<> nr_sequencia_p
group by ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_conta)
order by 1 asc;

c02 CURSOR FOR
SELECT /*+ index (a matpaci_i1) */	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_conta),
	sum(a.qt_material)
from	material_atend_paciente a
where	a.nr_atendimento 	= nr_atendimento_w
and	a.cd_material		= cd_material_w
and	(a.dt_conta IS NOT NULL AND a.dt_conta::text <> '')
and	a.nr_sequencia	<> nr_sequencia_p
group by ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_conta)
order by 1 desc;

c03 CURSOR FOR
	SELECT	coalesce(b.cd_tab_mat_atualizacao,0),
		b.cd_tab_preco_mat
	from	convenio_preco_mat	b
	where	b.cd_convenio		= cd_convenio_w
	and	b.cd_categoria		= cd_categoria_w
	and	b.cd_estabelecimento	= cd_estabelecimento_w
	and	dt_ult_vigencia_w between coalesce(b.dt_inicio_vigencia, dt_ult_vigencia_w)	and coalesce(b.dt_final_vigencia, dt_ult_vigencia_w)
	and	coalesce(b.cd_tab_mat_atualizacao,0) > 0
	and	coalesce(b.ie_situacao,'A')	= 'A';
	
C04 CURSOR FOR
	SELECT	cd_material,
		cd_procedimento,
		ie_origem_proced
	from	regra_ajuste_item_ref
	where	nr_seq_regra_ajuste_mat = nr_seq_regra_ajuste_ww
	and	ie_situacao = 'A';


BEGIN

select 	coalesce(Param_Recalculo_Conta_pck.get_recalcular_conta,'N')
into STRICT	ie_recalculo_conta_w
;

/* obter o registro do material do paciente a calcular */

begin
/* ricardo 15/03/2004 - incluidos os testes abaixo (goto) para sair da procedure sem dar a mensagem */

select	count(*)
into STRICT	qt_mat_w
from	material_atend_paciente
where	nr_sequencia	= nr_sequencia_p;


if (qt_mat_w = 0) then
	goto final;
end if;

select 	cd_convenio,
       	cd_categoria,
       	qt_material,
       	coalesce(dt_conta, coalesce(dt_prescricao, dt_atendimento)),
       	coalesce(vl_material,0),
       	coalesce(vl_unitario,0),
      	cd_setor_atendimento,
       	dt_acerto_conta,
	coalesce(nr_lote_contabil,0),
	coalesce(ie_valor_informado,'N'),
	coalesce(cd_proced_referencia,0),
	nr_seq_autorizacao,
	nr_interno_conta,
	nr_atendimento,
	cd_material,
	dt_atendimento,
	nr_doc_convenio,
	ie_guia_informada,
	cd_acao,
	nr_prescricao,
	nr_sequencia_prescricao,
	cd_material_prescricao,
	cd_material_exec,
	ie_emite_conta,
	cd_convenio,
	cd_categoria,
	cd_cgc_fornecedor,
	cd_motivo_exc_conta,
	cd_local_estoque,
	nr_seq_cor_exec,
	cd_cgc_prestador,
	nr_seq_proc_princ,
	ie_auditoria,
	cd_senha,
	tx_material,
	nr_seq_conta_origem,
	ie_responsavel_credito,
	dt_atendimento,
	CASE WHEN coalesce(nr_seq_proc_pacote,0)=0 THEN 'N'  ELSE 'S' END  ie_regra_pacote,
	coalesce(cd_funcao,0),
	cd_setor_paciente,
	ie_trat_conta_rn,
	ie_status_item_tabela,
	dt_desdobramento,
	nr_seq_mat_autor,
	ie_valor_autorizado,
	nr_seq_lote_fornec,
	nr_seq_atepacu,
	nr_seq_bras_preco	
into STRICT  	cd_convenio_w,
      	cd_categoria_w,
      	qt_material_w,
      	dt_conta_w,
      	vl_material_orig_w,
      	vl_unitario_orig_w,
	cd_setor_atendimento_w,
      	dt_acerto_conta_w,
      	nr_lote_contabil_w,
	ie_valor_informado_w,
	cd_proced_referencia_w,
	nr_seq_autorizacao_w,
	nr_interno_conta_w,
	nr_atendimento_w,
	cd_material_w,
	dt_atendimento_w,
	nr_doc_convenio_w,
	ie_guia_informada_w,
	cd_acao_w,
	nr_prescricao_w,
	nr_sequencia_prescricao_w,
	cd_material_prescricao_w,
	cd_material_exec_w,
	ie_emite_conta_w,
	cd_convenio_orig_w,
	cd_categoria_orig_w,
	cd_cgc_fornecedor_w,
	cd_motivo_exc_conta_w,
	cd_local_estoque_w,
	nr_seq_cor_exec_w,
	cd_cgc_prestador_w,
	nr_seq_proc_princ_w,
	ie_auditoria_w,
	cd_senha_w,
	tx_material_ww,
	nr_seq_conta_origem_w,
	ie_responsavel_credito_w,
	dt_material_w,
	ie_regra_pacote_w,
	cd_funcao_w,
	cd_setor_paciente_w,
	ie_trat_conta_rn_ww,
	ie_status_w,
	dt_desdobramento_w,
	nr_seq_mat_autor_ww,
	ie_valor_autorizado_w,
	nr_seq_lote_fornec_w,
	nr_seq_atepacu_w,
	nr_seq_bras_preco_orig_w			 
from	material_atend_paciente
where 	nr_sequencia     = nr_sequencia_p;
exception when others then
	ds_erro_w	:= sqlerrm(SQLSTATE);
	/* PreMat01: Material_Atend_Paciente nao localizado
	#@ds_erro#@*/
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(184107,'DS_ERRO=' || ds_erro_w);
end;

select 	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from 	atendimento_paciente
where 	nr_atendimento 		= nr_atendimento_w;

begin
select	cd_estabelecimento
into STRICT	cd_estab_conta_w
from	conta_paciente
where 	nr_interno_conta	= nr_interno_conta_w;
exception
     	when others then
          	cd_estab_conta_w	:= cd_estabelecimento_w;
end;

if (ie_recalculo_conta_w = 'N') then
	begin
	select	coalesce(max(obter_valor_param_usuario(24, 99, obter_perfil_ativo, nm_usuario_p, cd_estab_conta_w)), '1')
	into STRICT	ie_ordem_data_devolucao_w
	;
	exception
	when others then
		ie_ordem_data_devolucao_w	:= 1;
	end;

	begin
	select	coalesce(max(obter_valor_param_usuario(24, 103, obter_perfil_ativo, nm_usuario_p, cd_estab_conta_w)), 'N')
	into STRICT	ie_data_conta_devolucao_w
	;
	exception
	when others then
		ie_data_conta_devolucao_w	:= 'N';
	end;
else
	ie_ordem_data_devolucao_w:= Param_Recalculo_Conta_pck.get_parametro(24,99, obter_perfil_ativo, nm_usuario_p, cd_estab_conta_w);
	ie_data_conta_devolucao_w:= Param_Recalculo_Conta_pck.get_parametro(24,103, obter_perfil_ativo, nm_usuario_p, cd_estab_conta_w);
end if;

cd_senha_mat_w	:= cd_senha_w;

if (ie_recalculo_conta_w = 'N') then
	ie_altera_item_repasse_w:= coalesce(obter_valor_param_usuario(67, 637, obter_perfil_ativo, nm_usuario_p, cd_estab_conta_w), 'S');
else
	ie_altera_item_repasse_w:= Param_Recalculo_Conta_pck.get_parametro(67,637, obter_perfil_ativo, nm_usuario_p, cd_estab_conta_w);
end if;

if (obter_funcao_ativa = 67) and (coalesce(ie_altera_item_repasse_w, 'S') = 'N') then
	
	select	count(*)
	into STRICT	qt_existe_repasse_w
	from    material_repasse
	where	nr_seq_material = nr_sequencia_p;
	
	if (qt_existe_repasse_w <> 0) then
		goto final;
	end if;
end if;

-- edgar 25/08/2009, os 161697, tartar valor informado na autorizacao convenio


-- Verificar a Regra Convenio Material
ie_conversao_mat_w	:= coalesce(obter_valor_conv_estab(cd_convenio_w, cd_estabelecimento_w, 'IE_CONVERSAO_MAT'),'R');


select 	coalesce(max(ie_autor_vl_conta),'N'),
	coalesce(max(ie_valor_inf_mat_autor),'N'),
	coalesce(max(ie_tipo_setor_classif_rn),'I'),
	coalesce(max(ie_estab_regra_honorario), 'A'),
	coalesce(max(ie_estagio_vl_conta_autor),'N'),
	coalesce(max(ie_aplica_tx_conv_preco),'S'),
	coalesce(max(ie_atualiza_valor_conta),'N')
into STRICT	ie_autor_vl_conta_w,
	ie_valor_inf_mat_autor_w,
	ie_tipo_setor_classif_rn_w,
	ie_estab_regra_honorario_w,
	ie_estagio_vl_conta_autor_w,
	ie_aplica_tx_conv_preco_w,
	ie_atualiza_valor_conta_w
from 	parametro_faturamento
where 	cd_estabelecimento 	= cd_estabelecimento_w;

select coalesce(max(ie_autor_generico),'N')
into STRICT	ie_autor_generico_w
from	convenio_Estabelecimento
where 	cd_estabelecimento 	= cd_estabelecimento_w
and	cd_convenio		= cd_convenio_w;

if (ie_autor_generico_w = 'S') then
	cd_material_autor_w	:= obter_material_generico(cd_material_w);
end if;	



if (ie_autor_vl_conta_w = 'S') then

	select	max(a.nr_sequencia)
	into STRICT 	nr_seq_autor_conv_w
	from	material_autorizado b,
		autorizacao_convenio a,
		autorizacao_cirurgia c,
		estagio_autorizacao d
	where	b.ie_valor_conta			= 'S'
	and	a.nr_sequencia				= b.nr_sequencia_autor
	and	b.cd_material				= cd_material_w
	and	((a.cd_convenio				= cd_convenio_w) or (d.ie_interno = '90'))
	and	a.nr_atendimento			= nr_atendimento_w
	and	a.nr_seq_autor_cirurgia			= c.nr_sequencia
	and	to_char(c.dt_previsao,'dd/mm/yyyy')	= to_char(dt_conta_w,'dd/mm/yyyy')
	and 	a.nr_seq_estagio			= d.nr_sequencia
	and 	((coalesce(ie_estagio_vl_conta_autor_w,'N') 	= 'S') or (d.ie_interno = '10'))
	and	b.nr_sequencia				= coalesce(nr_seq_mat_autor_ww,b.nr_sequencia);
	
	if (cd_material_w <> cd_material_autor_w) and (ie_autor_generico_w = 'S') and (coalesce(nr_seq_autor_conv_w::text, '') = '') then
		begin
		select	max(a.nr_sequencia)
		into STRICT 	nr_seq_autor_conv_w
		from	material_autorizado b,
			autorizacao_convenio a,
			autorizacao_cirurgia c,
			estagio_autorizacao d
		where	b.ie_valor_conta			= 'S'
		and	a.nr_sequencia				= b.nr_sequencia_autor
		and	b.cd_material				= cd_material_autor_w
		and	((a.cd_convenio				= cd_convenio_w) or (d.ie_interno = '90'))
		and	a.nr_atendimento			= nr_atendimento_w
		and	a.nr_seq_autor_cirurgia			= c.nr_sequencia
		and	to_char(c.dt_previsao,'dd/mm/yyyy')	= to_char(dt_conta_w,'dd/mm/yyyy')
		and 	a.nr_seq_estagio			= d.nr_sequencia
		and 	((coalesce(ie_estagio_vl_conta_autor_w,'N') 	= 'S') or (d.ie_interno = '10'))
		and	b.nr_sequencia				= coalesce(nr_seq_mat_autor_ww,b.nr_sequencia);
		end;
	end if;
end if;

if (ie_autor_vl_conta_w = 'N') or (coalesce(nr_seq_autor_conv_w::text, '') = '') then
	
	select	max(a.nr_sequencia)
	into STRICT	nr_seq_autor_conv_w
	from	material_autorizado b,
		autorizacao_convenio a,
		estagio_autorizacao c
	where	b.ie_valor_conta	= 'S'
	and	a.nr_sequencia		= b.nr_sequencia_autor
	and	b.cd_material		= cd_material_w
	and	((a.cd_convenio		= cd_convenio_w) or (c.ie_interno = '90'))
	and	a.nr_atendimento	= nr_atendimento_w
	and 	a.nr_seq_estagio	= c.nr_sequencia
	and 	((coalesce(ie_estagio_vl_conta_autor_w,'N') = 'S') or (c.ie_interno = '10'))
	and	b.nr_sequencia				= coalesce(nr_seq_mat_autor_ww,b.nr_sequencia);	--lhalves 26/05/2010 OS219956 busca o valor da autorizacao apenas se a mesma estiver autorizada.
	
	if (cd_material_w <> cd_material_autor_w) and (ie_autor_generico_w = 'S') and (coalesce(nr_seq_autor_conv_w::text, '') = '') then
		
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_autor_conv_w
		from	material_autorizado b,
			autorizacao_convenio a,
			estagio_autorizacao c
		where	b.ie_valor_conta	= 'S'
		and	a.nr_sequencia		= b.nr_sequencia_autor
		and	b.cd_material		= cd_material_autor_w
		and	((a.cd_convenio		= cd_convenio_w) or (c.ie_interno = '90'))
		and	a.nr_atendimento	= nr_atendimento_w
		and 	a.nr_seq_estagio	= c.nr_sequencia
		and 	((coalesce(ie_estagio_vl_conta_autor_w,'N') = 'S') or (c.ie_interno = '10'))
		and	b.nr_sequencia				= coalesce(nr_seq_mat_autor_ww,b.nr_sequencia);
	end if;

end if;


/* Francisco - 22/12/2009 - Fiz primeiro o select acima para o caso de ter 2 autorizacoes pro mesmo material, pegar somente a ultima */

select	coalesce(max(vl_unitario),0),
	max(pr_adicional),-- Fabricio em 14/10/2009, OS 150747
	coalesce(max(ie_reducao_acrescimo),'A'),
	coalesce(max(vl_total_autorizado),0),
	coalesce(max(b.ie_valor_conta),'N')
into STRICT	vl_unitario_atorizacao_w,
	pr_adicional_w,
	ie_reducao_acrescimo_w,
	vl_total_autorizado_w,
	ie_valor_autorizado_w
from	material_autorizado b,
	autorizacao_convenio a,
	estagio_autorizacao c
where	b.ie_valor_conta	= 'S'
and	c.nr_sequencia		= a.nr_seq_estagio
and	a.nr_sequencia		= b.nr_sequencia_autor
and	b.cd_material		= cd_material_w
and	((a.cd_convenio		= cd_convenio_w) or (c.ie_interno = '90'))
and	a.nr_atendimento	= nr_atendimento_w
and	a.nr_sequencia		= nr_seq_autor_conv_w
and	b.nr_sequencia		= coalesce(nr_seq_mat_autor_ww,b.nr_sequencia);

if (cd_material_w <> cd_material_autor_w) and (ie_autor_generico_w = 'S') and (vl_unitario_atorizacao_w = 0) then
	
	select	coalesce(max(vl_unitario),0),
		max(pr_adicional),-- Fabricio em 14/10/2009, OS 150747
		coalesce(max(ie_reducao_acrescimo),'A'),
		coalesce(max(vl_total_autorizado),0),
		coalesce(max(b.ie_valor_conta),'N')
	into STRICT	vl_unitario_atorizacao_w,
		pr_adicional_w,
		ie_reducao_acrescimo_w,
		vl_total_autorizado_w,
		ie_valor_autorizado_w
	from	material_autorizado b,
		autorizacao_convenio a,
		estagio_autorizacao c
	where	b.ie_valor_conta	= 'S'
	and	c.nr_sequencia		= a.nr_seq_estagio
	and	a.nr_sequencia		= b.nr_sequencia_autor
	and	b.cd_material		= cd_material_autor_w
	and	((a.cd_convenio		= cd_convenio_w) or (c.ie_interno = '90'))
	and	a.nr_atendimento	= nr_atendimento_w
	and	a.nr_sequencia		= nr_seq_autor_conv_w
	and	b.nr_sequencia		= coalesce(nr_seq_mat_autor_ww,b.nr_sequencia);
	
end if;

if (coalesce(nr_seq_autor_conv_w,0) > 0)	and
	((ie_valor_inf_mat_autor_w = 'N')	or
	(ie_valor_inf_mat_autor_w = 'S' AND ie_valor_informado_w = 'N')) 		then

	select 	max(cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from 	atendimento_paciente
	where 	nr_atendimento = nr_atendimento_w;

	select 	coalesce(max(ie_aplic_perc_autorizado),'N')
	into STRICT	ie_aplic_perc_autorizado_w
	from 	parametro_faturamento
	where 	cd_estabelecimento = cd_estabelecimento_w;

	if (coalesce(vl_total_autorizado_w,0) > 0) then
	
		update	material_atend_paciente
		set	ie_valor_informado	= 'S',
			vl_unitario		= (vl_total_autorizado_w / coalesce(qt_material,1)),
			vl_material		= vl_total_autorizado_w
		where	nr_sequencia		= nr_sequencia_p;
		
		ie_valor_informado_w		:= 'S';
		vl_unitario_orig_w		:= vl_total_autorizado_w / coalesce(qt_material_w,1);
		vl_material_orig_w		:= vl_total_autorizado_w;
			
	elsif	((coalesce(vl_unitario_atorizacao_w, 0) > 0)  or (ie_atualiza_valor_conta_w = 'S'))  then
	
		if (coalesce(pr_adicional_w::text, '') = '') then
			update	material_atend_paciente
			set	ie_valor_informado	= 'S',
				vl_unitario		= vl_unitario_atorizacao_w,
				vl_material		= vl_unitario_atorizacao_w * qt_material
			where	nr_sequencia		= nr_sequencia_p;
			
			ie_valor_informado_w		:= 'S';
			vl_unitario_orig_w		:= vl_unitario_atorizacao_w;
			vl_material_orig_w		:= vl_unitario_atorizacao_w * qt_material_w;
		else
			-- Fabricio em 28/10/2009 Criado o parametro de faturamento, para aplicar o % de acrescimo sobre o valor unitario na conta. Se desmarcado fica igual na autorizacao convenio
			if (coalesce(ie_aplic_perc_autorizado_w,'N') = 'N') then

				update	material_atend_paciente
				set	ie_valor_informado	= 'S',
					vl_unitario		= vl_unitario_atorizacao_w,
					vl_material		= CASE WHEN ie_reducao_acrescimo_w='R' THEN									((vl_unitario_atorizacao_w * qt_material) - ((vl_unitario_atorizacao_w * qt_material) * pr_adicional_w / 100))  ELSE ((vl_unitario_atorizacao_w * qt_material) + ((vl_unitario_atorizacao_w * qt_material) * pr_adicional_w / 100)) END 
				where	nr_sequencia		= nr_sequencia_p;
				ie_valor_informado_w		:= 'S';
				vl_unitario_orig_w		:= vl_unitario_atorizacao_w;
				
				if (ie_reducao_acrescimo_w = 'R') then
					vl_material_orig_w	:= ((vl_unitario_atorizacao_w * qt_material_w) - ((vl_unitario_atorizacao_w * qt_material_w) * pr_adicional_w / 100));
				else
					vl_material_orig_w	:= ((vl_unitario_atorizacao_w * qt_material_w) + ((vl_unitario_atorizacao_w * qt_material_w) * pr_adicional_w / 100));
				end if;
				

			else

				update	material_atend_paciente
				set	ie_valor_informado	= 'S',
					vl_unitario		= CASE WHEN ie_reducao_acrescimo_w='R' THEN									vl_unitario_atorizacao_w - (vl_unitario_atorizacao_w * pr_adicional_w / 100)  ELSE vl_unitario_atorizacao_w + (vl_unitario_atorizacao_w * pr_adicional_w / 100) END ,
					vl_material		= CASE WHEN ie_reducao_acrescimo_w='R' THEN 									((vl_unitario_atorizacao_w * qt_material) - ((vl_unitario_atorizacao_w * qt_material) * pr_adicional_w / 100))  ELSE ((vl_unitario_atorizacao_w * qt_material) + ((vl_unitario_atorizacao_w * qt_material) * pr_adicional_w / 100)) END 
				where	nr_sequencia		= nr_sequencia_p;
				ie_valor_informado_w		:= 'S';
				
				if (ie_reducao_acrescimo_w = 'R') then
					vl_unitario_orig_w 	:= (vl_unitario_atorizacao_w - (vl_unitario_atorizacao_w * pr_adicional_w / 100));
					vl_material_orig_w	:= ((vl_unitario_atorizacao_w * qt_material_w) - ((vl_unitario_atorizacao_w * qt_material_w) * pr_adicional_w / 100));
				else	
					vl_unitario_orig_w	:= (vl_unitario_atorizacao_w + (vl_unitario_atorizacao_w * pr_adicional_w / 100));
					vl_material_orig_w	:= ((vl_unitario_atorizacao_w * qt_material_w) + ((vl_unitario_atorizacao_w * qt_material_w) * pr_adicional_w / 100));
				end if;
				

			end if;
		end if;
	end if;

end if;


select	max(cd_procedimento),
	max(ie_origem_proced),
	max(nr_interno_conta),
	max(cd_convenio),
	max(cd_categoria),
	max(cd_situacao_glosa),
	max(nr_seq_proc_interno),
	max(nr_atendimento)
into STRICT	cd_procedimento_w,
	ie_origem_proced_w,
	nr_interno_conta_proc_w,
	cd_convenio_proc_w,
	cd_categoria_proc_w,
	cd_situacao_glosa_proc_w,
	nr_seq_proc_interno_w,
	nr_atendimento_proc_w
from	procedimento_paciente
where	nr_sequencia		= nr_seq_proc_princ_w;

begin
select 	a.cd_estabelecimento
into STRICT  	cd_estabelecimento_w
from 	pessoa_fisica b,
	atendimento_paciente a
where 	a.nr_atendimento     	= nr_atendimento_w
and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica;
exception
    	when others then
      	cd_estabelecimento_w := 1;
end;

select 	coalesce(max(ie_gastos_rn_alta),'N'),
		--nvl(max(nr_dias_gastos_rn),0),
		coalesce(max(cd_classif_setor_rn),0),
		coalesce(max(ie_regra_rn_item),'S')
into STRICT	ie_gastos_rn_alta_w,
		--nr_dias_gastos_rn_w,
		cd_classif_setor_rn_w,
		ie_regra_rn_item_w
from 	parametro_faturamento
where 	cd_estabelecimento = cd_estabelecimento_w;

if (ie_recalculo_conta_w = 'N') then
	ie_transf_gasto_nr_w := coalesce(obter_valor_param_usuario(67, 500, obter_perfil_ativo, nm_usuario_p, cd_estab_conta_w),'N');
else
	ie_transf_gasto_nr_w:= Param_Recalculo_Conta_pck.get_parametro(67,500, obter_perfil_ativo, nm_usuario_p, cd_estab_conta_w);
end if;


select 	coalesce(max(nr_dias_gastos_rn),0),
	coalesce(max(qt_dia_fim_conta),0),
	coalesce(max(ie_autor_generico),'N')
into STRICT 	nr_dias_gastos_rn_w,
	qt_dia_fim_conta_w,
	ie_autor_generico_w
from	convenio_estabelecimento
where	cd_convenio		= cd_convenio_w
and	cd_estabelecimento	= cd_estabelecimento_w;

if (nr_dias_gastos_rn_w = 0 ) then

	select 	coalesce(max(nr_dias_gastos_rn),0)
	into STRICT	nr_dias_gastos_rn_w
	from 	parametro_faturamento
	where 	cd_estabelecimento = cd_estabelecimento_w;

end if;


select 	coalesce(max(cd_classif_setor),0)
into STRICT	cd_classif_setor_w
from 	setor_atendimento
where 	cd_setor_atendimento = cd_setor_atendimento_w;

if (ie_tipo_setor_classif_rn_w = 'P') then
	select 	coalesce(max(cd_classif_setor),0)
	into STRICT	cd_classif_setor_w
	from 	setor_atendimento
	where 	cd_setor_atendimento = cd_setor_paciente_w;
end if;

ie_classif_gastos_rn_w	:= 'S';
ie_dias_gastos_rn_w	:= 'N';

select 	max(dt_entrada),
	max(ie_trat_conta_rn)
into STRICT	dt_entrada_w,
	ie_trat_conta_rn_w
from 	atendimento_paciente
where	nr_atendimento = nr_atendimento_w;

if (coalesce(ie_trat_conta_rn_ww::text, '') = '') then
	ie_trat_conta_rn_ww := ie_trat_conta_rn_w;
end if;

if (nr_dias_gastos_rn_w > 0) and (ie_trat_conta_rn_w = obter_desc_expressao(962487)) and
	((dt_atendimento_w - dt_entrada_w) > nr_dias_gastos_rn_w) then
	ie_dias_gastos_rn_w:= 'S';
end if;

if (cd_classif_setor_rn_w > 0) and (ie_trat_conta_rn_w = obter_desc_expressao(962487)) then
	ie_classif_gastos_rn_w:= 'N';
	if (cd_classif_setor_rn_w = cd_classif_setor_w) then
		ie_classif_gastos_rn_w:= 'S';

	end if;
end if;

ie_status_acerto_w:= 1;
begin
select	coalesce(max(ie_status_acerto),1)
into STRICT	ie_status_acerto_w
from 	conta_paciente
where 	nr_interno_conta = nr_interno_conta_w;
exception
	when others then
	ie_status_acerto_w:= 1;
end;

select	count(1)
into STRICT	qt_desconto_item_w
from	mat_atend_paciente_valor
where	ie_tipo_valor = 3
and	nr_seq_material = nr_sequencia_p;

if (coalesce(ie_regra_rn_item_w,'S') = 'S') then
	begin
	select	CASE WHEN ie_trat_conta_rn=obter_desc_expressao(962487) THEN  coalesce(nr_atendimento_mae,nr_atendimento_w)  ELSE nr_atendimento_w END ,
		CASE WHEN ie_trat_conta_rn=obter_desc_expressao(962487) THEN  CASE WHEN qt_desconto_item_w=0 THEN  null  ELSE nr_interno_conta_w END   ELSE CASE WHEN ie_transf_gasto_nr_w='M' THEN null  ELSE nr_interno_conta_w END  END
	into STRICT	nr_atendimento_w,
		nr_interno_conta_w
	from	atendimento_paciente
	where	nr_atendimento		= nr_atendimento_w
	and 	ie_dias_gastos_rn_w	= 'N'	-- parametro de dias para deixar os gastos no atend do RN
	and 	ie_classif_gastos_rn_w  = 'S'   -- parametro da classificacao do setor do RN
	and	(ie_trat_conta_rn IS NOT NULL AND ie_trat_conta_rn::text <> '')
	and	CASE WHEN ie_trat_conta_rn=obter_desc_expressao(962487) THEN  obter_se_atendimento_fechado(nr_atendimento_mae)  ELSE 'N' END  = 'N'
	and 	ie_status_acerto_w	= 1
	and (obter_se_gastos_rn(cd_convenio_w, nr_atendimento_w, ie_trat_conta_rn, nr_seq_atepacu_w) = 'N') -- regra de setor para definicao dos gastos RN (OS  244366)
	and 	((ie_gastos_rn_alta_w = 'N') or
		((ie_gastos_rn_alta_w = 'S') and (ie_trat_conta_rn = obter_desc_expressao(962487)) and (obter_se_atendimento_alta(nr_atendimento_mae) = 'N')) or
		((ie_gastos_rn_alta_w = 'D') and (ie_trat_conta_rn = obter_desc_expressao(962487)) and (dt_atendimento_w <= coalesce(to_date(obter_dados_atendimento(nr_atendimento_mae,'DA'),'dd/mm/yyyy hh24:mi:ss'),dt_atendimento_w + 
5))));
	exception
		 when others then
		if (ie_gastos_rn_alta_w = 'D') and (coalesce(nr_interno_conta_w,0) > 0) and (obter_atendimento_conta(nr_interno_conta_w) <> nr_atendimento_w) then
			begin
			select	CASE WHEN ie_trat_conta_rn=obter_desc_expressao(962487) THEN  coalesce(nr_atendimento_mae,nr_atendimento_w)  ELSE obter_atendimento_conta(nr_interno_conta_w) END ,
				CASE WHEN ie_trat_conta_rn=obter_desc_expressao(962487) THEN  CASE WHEN qt_desconto_item_w=0 THEN  null  ELSE nr_interno_conta_w END   ELSE CASE WHEN ie_transf_gasto_nr_w='M' THEN null  ELSE nr_interno_conta_w END  END
			into STRICT	nr_atendimento_w,
				nr_interno_conta_w
			from	atendimento_paciente
			where	nr_atendimento		= obter_atendimento_conta(nr_interno_conta_w)
			and 	ie_dias_gastos_rn_w	= 'N'	-- parametro de dias para deixar os gastos no atend do RN
			and 	ie_classif_gastos_rn_w  = 'S'   -- parametro da classificacao do setor do RN
			and	(ie_trat_conta_rn IS NOT NULL AND ie_trat_conta_rn::text <> '')
			and	CASE WHEN ie_trat_conta_rn=obter_desc_expressao(962487) THEN  obter_se_atendimento_fechado(nr_atendimento_mae)  ELSE 'N' END  = 'N'
			and 	ie_status_acerto_w	= 1
			and (obter_se_gastos_rn(cd_convenio_w, nr_atendimento_w, ie_trat_conta_rn, nr_seq_atepacu_w) = 'N') -- regra de setor para definicao dos gastos RN (OS  244366)
			and 	((ie_gastos_rn_alta_w = 'N') or
				((ie_gastos_rn_alta_w = 'S') and (ie_trat_conta_rn = obter_desc_expressao(962487)) and (obter_se_atendimento_alta(nr_atendimento_mae) = 'N')) or
				((ie_gastos_rn_alta_w = 'D') and (ie_trat_conta_rn = obter_desc_expressao(962487)) and (dt_atendimento_w <= coalesce(to_date(obter_dados_atendimento(nr_atendimento_mae,'DA'),'dd/mm/yyyy 
hh24:mi:ss'),dt_atendimento_w + 5))));
			exception
			when others then
				nr_atendimento_w	:= nr_atendimento_w;

				if (ie_transf_gasto_nr_w = 'M') and (ie_status_acerto_w = 1) and (ie_trat_conta_rn_ww IS NOT NULL AND ie_trat_conta_rn_ww::text <> '') then
					nr_interno_conta_w	:= null;
				else
					nr_interno_conta_w  := nr_interno_conta_w;
				end if;
			end;
		else
			nr_atendimento_w	:= nr_atendimento_w;

			if (ie_transf_gasto_nr_w = 'M') and (ie_status_acerto_w = 1) and (ie_trat_conta_rn_ww IS NOT NULL AND ie_trat_conta_rn_ww::text <> '') then
				nr_interno_conta_w	:= null;
			else
				nr_interno_conta_w  := nr_interno_conta_w;
			end if;

		end if;
	end;
else
	begin
	select	count(*)
	into STRICT	qt_conta_w
	from	conta_paciente a,
		atendimento_paciente b
	where	a.nr_interno_conta 	= nr_interno_conta_w
	and	a.nr_atendimento	= b.nr_atendimento
	and	a.nr_atendimento	= nr_atendimento_w;
	
	select	CASE WHEN ie_trat_conta_rn_ww=obter_desc_expressao(962487) THEN  coalesce(nr_atendimento_mae,nr_atendimento_w)  ELSE nr_atendimento_w END ,
		CASE WHEN ie_trat_conta_rn_ww=obter_desc_expressao(962487) THEN  CASE WHEN qt_desconto_item_w=0 THEN  null  ELSE nr_interno_conta_w END   ELSE CASE WHEN qt_conta_w=1 THEN  nr_interno_conta_w  ELSE null END  END
	into STRICT	nr_atendimento_w,
		nr_interno_conta_w
	from	atendimento_paciente
	where	nr_atendimento		= nr_atendimento_w
	and	(ie_trat_conta_rn IS NOT NULL AND ie_trat_conta_rn::text <> '')
	and	CASE WHEN ie_trat_conta_rn=obter_desc_expressao(962487) THEN  obter_se_atendimento_fechado(nr_atendimento_mae)  ELSE 'N' END  = 'N'
	and 	((ie_gastos_rn_alta_w = 'N') or
		((ie_gastos_rn_alta_w = 'S') and (ie_trat_conta_rn = obter_desc_expressao(962487)) and (obter_se_atendimento_alta(nr_atendimento_mae) = 'N')) or
		((ie_gastos_rn_alta_w = 'D') and (ie_trat_conta_rn = obter_desc_expressao(962487)) and (dt_atendimento_w <= coalesce(to_date(obter_dados_atendimento(nr_atendimento_mae,'DA'),'dd/mm/yyyy hh24:mi:ss'),dt_atendimento_w + 
5))))
	and 	ie_status_acerto_w	= 1;
	exception
	when others then
			nr_atendimento_w	:= nr_atendimento_w;
			nr_interno_conta_w	:= nr_interno_conta_w;
	end;

end if;

begin

dt_conta_orig_w	:= dt_conta_w;


/* obter data da conta no caso de devolucao sem prescricao */


/* marcus 01/02/2001 -  */

if (cd_acao_w = 2) and (coalesce(nr_prescricao_w::text, '') = '') and (dt_conta_w = dt_atendimento_w) and (coalesce(nr_interno_conta_w::text, '') = '') and (ie_data_conta_devolucao_w = 'N') then
	begin
	if (ie_ordem_data_devolucao_w = 1) then
		open c01;
		loop
		fetch c01 into	dt_conta_dev_w,
				qt_saldo_dev_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			/* ricardo 03/09/2004 - alterei a rotina abaixo para que inclua a hora 23:59:59 */

			if	((qt_material_w * -1) <= qt_saldo_dev_w) then
				dt_conta_w		:= PKG_DATE_UTILS.END_OF(dt_conta_dev_w, 'DAY');
			end if;
		end loop;
		close c01;
	else
		open c02;
		loop
		fetch c02 into	dt_conta_dev_w,
				qt_saldo_dev_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			/* ricardo 03/09/2004 - alterei a rotina abaixo para que inclua a hora 23:59:59 */

			if	((qt_material_w * -1) <= qt_saldo_dev_w) then
				dt_conta_w		:= PKG_DATE_UTILS.END_OF(dt_conta_dev_w, 'DAY');
			end if;
		end loop;
		close c02;
	end if;
	end;
end if;
/* fim devolucao sem prescricao  */



/* obter o estabelecimento do atendimento */

select 		a.cd_estabelecimento,
	 	a.dt_entrada,
	 	coalesce(a.dt_alta,pkg_date_utils.get_datetime(1900, 1, 1, 0, 0, 0)),
	 	coalesce(a.dt_alta,clock_timestamp()),
	 	a.ie_tipo_atendimento,
		a.ie_clinica,
		coalesce(trunc((dt_entrada - coalesce(dt_nascimento, a.dt_entrada)) / 365),0),
		a.dt_medicacao,
		b.cd_pessoa_fisica,
		a.cd_estabelecimento,
		a.dt_alta,
		a.nr_seq_classificacao
into STRICT  		cd_estabelecimento_w,
	 	dt_entrada_w,
	 	dt_alta_w,
	 	dt_altap_w,
	 	ie_tipo_atendimento_w,
		ie_clinica_w,
		qt_idade_w,
		dt_medicacao_w,
		cd_pessoa_fisica_w,
		cd_estab_atend_w,
		dt_alta_preco_w,
		nr_seq_classif_atend_w
from 		pessoa_fisica b,
		atendimento_paciente a
where		a.nr_atendimento	= nr_atendimento_w
  and		a.cd_pessoa_fisica	= b.cd_pessoa_fisica;
exception
     		when others then
          	cd_estabelecimento_w := 1;
end;

select 	wheb_usuario_pck.get_cd_estabelecimento
into STRICT	cd_estab_logado_w
;

select	coalesce(max(ie_estabelecimento_conta), 'A')
into STRICT	ie_estabelecimento_conta_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estab_logado_w;

if (ie_estabelecimento_conta_w = 'L') then
	cd_estabelecimento_w:= cd_estab_logado_w;
end if;

select	coalesce(max(ie_grava_guia_conta),'N'),
	coalesce(max(ie_trunc_vl_material),'N'),
	coalesce(max(ie_arred_multiplicado),'N'),
	max(ie_codigo_convenio),
	max(ie_doc_convenio)
into STRICT	ie_grava_guia_conta_w,
	ie_trunc_vl_material_w,
	ie_arred_multiplicado_w,
	ie_codigo_convenio_w,
	ie_doc_convenio_w
from	convenio_estabelecimento
where	cd_convenio		= cd_convenio_w
and	cd_estabelecimento = cd_estabelecimento_w;

select	coalesce(max(ie_estabelecimento_conta), 'A'),
	coalesce(max(ie_gerar_conta_guia_dif), 'N'),
	coalesce(max(ie_calculo_taxa_regra), 'C'),
	coalesce(max(ie_calcular_mat_auditado), 'S'),
	coalesce(max(ie_valor_inf_desconto), 'N'),
	coalesce(max(ie_glosa_mat_proc_princ), 'N'),
	coalesce(max(ie_valor_inf_pacote), 'N'),
	coalesce(max(ie_convenio_conta_param),'N'),
	coalesce(max(ie_regra_conta_terc_mat),'N'),
	coalesce(max(ie_regra_tipo_atend),'A')
into STRICT	ie_estabelecimento_conta_w,
	ie_gerar_conta_guia_dif_w,
	ie_calculo_taxa_regra_w,
	ie_calcular_mat_auditado_w,
	ie_valor_inf_desconto_w,
	ie_glosa_mat_proc_princ_w,
	ie_valor_inf_pacote_w,
	ie_convenio_conta_param_w,
	ie_regra_conta_terc_mat_w,
	ie_regra_tipo_atend_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;


if (coalesce(ie_regra_tipo_atend_w,'A') = 'C') then
	begin
	select	coalesce(max(ie_tipo_atend_conta),ie_tipo_atendimento_w)
	into STRICT	ie_tipo_atendimento_w
	from 	conta_paciente
	where 	nr_interno_conta = nr_interno_conta_w;
	exception
		when others then
		ie_tipo_atendimento_w:= ie_tipo_atendimento_w;
	end;
end if;


if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') and (ie_convenio_conta_param_w	= 'S') then

	if (ie_recalculo_conta_w = 'N') then
		ie_altera_guia_w := coalesce(obter_valor_param_usuario(67, 370, obter_perfil_ativo, nm_usuario_p, cd_estab_conta_w),'N');
	else
		ie_altera_guia_w := Param_Recalculo_Conta_pck.get_parametro(67,370, obter_perfil_ativo, nm_usuario_p, cd_estab_conta_w);
	end if;

	select	coalesce(cd_convenio_calculo,cd_convenio_parametro),
		coalesce(cd_categoria_calculo,cd_categoria_parametro),
		coalesce(CASE WHEN ie_altera_guia_w='S' THEN  null  ELSE cd_autorizacao END ,nr_doc_convenio_w)
	into STRICT	cd_convenio_w,
		cd_categoria_w,
		nr_doc_convenio_w
	from	conta_paciente
	where	nr_interno_conta	= nr_interno_conta_w;

	cd_convenio_orig_w		:= cd_convenio_w;
	cd_categoria_orig_w		:= cd_categoria_w;
	cd_convenio_calculo_w		:= cd_convenio_w;
	cd_categoria_calculo_w		:= cd_categoria_w;
end if;

begin
select	coalesce(max(ie_status_acerto),2)
into STRICT	ie_status_conta_proc_w
from 	conta_paciente
where 	nr_interno_conta = nr_interno_conta_proc_w;
exception
	when others then
	ie_status_conta_proc_w:= 2;
end;
	

if (ie_glosa_mat_proc_princ_w	= 'S') and (ie_status_conta_proc_w = 1) and (nr_atendimento_proc_w	= nr_atendimento_w) and
	((cd_situacao_glosa_proc_w 	= 1) or (cd_convenio_w <> cd_convenio_proc_w)) then
	nr_interno_conta_w	:= nr_interno_conta_proc_w;
	cd_convenio_w		:= cd_convenio_proc_w;
	cd_categoria_w		:= cd_categoria_proc_w;
end if;



ie_altera_auditoria_w	:= 'S';

if (ie_calcular_mat_auditado_w = 'N') and (ie_auditoria_w = 'S') then
	ie_altera_auditoria_w	:= 'N';
end if;

if (ie_estabelecimento_conta_w = 'S') then
	begin

	select	max(cd_estabelecimento_base)
	into STRICT	cd_estabelecimento_w
	from	setor_atendimento
	where	cd_setor_atendimento	= cd_setor_atendimento_w;

	end;
end if;




/* rotina nova para gerar conta no estabelecimento do terceiro  - inicio (fabricio  29-10-2008) */

begin
select 	 cd_grupo_material,
	 cd_subgrupo_material,
	 cd_classe_material
into STRICT	 cd_grupo_material_w,
	 cd_subgrupo_material_w,
	 cd_classe_material_w
from	 estrutura_material_v
where	 cd_material	= cd_material_w;
exception
     	 when others then
	 begin
	 cd_grupo_material_w	:= 0;
	 cd_subgrupo_material_w	:= 0;
	 cd_classe_material_w	:= 0;
	 end;
end;

cd_estab_terceiro_w	:= 0;
qt_reg_estab_terc_w	:= 0;

select	count(*)
into STRICT	qt_reg_estab_terc_w
from	regra_conta_terceiro
where	cd_estabelecimento	= cd_estabelecimento_w
and	coalesce(cd_convenio,cd_convenio_w)	= cd_convenio_w
and	coalesce(ie_situacao, 'A')		= 'A';

select	cd_procedencia
into STRICT	cd_procedencia_w
from 	atendimento_paciente
where 	nr_atendimento 	= nr_atendimento_w;

if (qt_reg_estab_terc_w	> 0) and (ie_regra_conta_terc_mat_w = 'S') then
	begin

	SELECT * FROM obter_estab_regr_conta_terc(
			cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, 0, 0, 0, 0, 0, cd_grupo_material_w, cd_subgrupo_material_w, cd_classe_material_w, cd_material_w, '0', cd_procedencia_w, null, coalesce(dt_conta_w,dt_atendimento_w), ie_clinica_w, null, cd_estab_terceiro_w, nr_sequencia_regra_w) INTO STRICT cd_estab_terceiro_w, nr_sequencia_regra_w;
	
	if (cd_estab_terceiro_w	<> 0) then
		cd_estabelecimento_w	:= cd_estab_terceiro_w;
	end if;

	if (coalesce(cd_estab_terceiro_w,0) <> 0) and (coalesce(cd_estab_terceiro_w,0) <> coalesce(cd_estab_conta_w,0)) and (coalesce(cd_funcao_w,0) = 67) and (ie_status_acerto_w = 1) then
	   nr_interno_conta_w :=  null;
	end if;

	end;
end if;
/* rotina nova para gerar conta no estabelecimento do terceiro  - fim(fabricio  29-10-2008) */

begin
select 	coalesce(ie_tipo_material, '-1')
into STRICT 	ie_tipo_material_w
from 	material
where 	cd_material = cd_material_w;
exception
	when no_data_found then
		ie_tipo_material_w := '-1';
	when too_many_rows then 
		ie_tipo_material_w := '-1';
end;

/* atualizar a data e hora do primeiro atendimento de medicacao ao paciente */

if (coalesce(dt_medicacao_w::text, '') = '') and (ie_tipo_material_w <> '-1') and (ie_tipo_material_w in (0,2,3,4,8,9)) then
	update atendimento_paciente
	set	dt_medicacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= 	clock_timestamp()
	where	nr_atendimento	= nr_atendimento_w;
end if;
/* obter o tipo de acomodacao do convenio */

begin
select	coalesce(cd_tipo_acomodacao,0),
	cd_plano_convenio
into STRICT	cd_tipo_acomodacao_w,
	cd_plano_w
from	atend_categoria_convenio_v
where	nr_atendimento		= nr_atendimento_w
and	cd_convenio			= cd_convenio_w
and	cd_categoria		= cd_categoria_w;
exception
     		when others then
		begin
		select	coalesce(cd_tipo_acomodacao,0),
			cd_plano_convenio
		into STRICT	cd_tipo_acomodacao_w,
			cd_plano_w
		from	atend_categoria_convenio_v
		where	nr_atendimento		= nr_atendimento_w
		and	cd_convenio			= cd_convenio_w;
		exception
			when others then
			cd_tipo_acomodacao_w	:= 0;
			cd_plano_w		:= null;
		end;
          	
end;

dt_conta_real_w   := coalesce(dt_conta_w, dt_atendimento_w);
if	dt_conta_real_w < dt_entrada_w then
	dt_conta_real_w := dt_entrada_w;
end if;

select	obter_grupo_receita(cd_estabelecimento_w,
	cd_material_w,
	null,
	null,
	ie_tipo_atendimento_w,
	cd_setor_atendimento_w)
into STRICT	nr_seq_grupo_rec_w
;


begin
select	max(CASE WHEN ie_status_acerto=1 THEN coalesce(dt_conta_definitiva,clock_timestamp())  ELSE coalesce(dt_conta_definitiva,dt_conta_w) END ),
	max(dt_periodo_inicial),
	max(dt_periodo_final)
into STRICT	dt_conta_definitiva_w,
	dt_periodo_inicial_w,
	dt_periodo_final_w
from 	conta_paciente
where 	nr_interno_conta = nr_interno_conta_w;
exception
    	when others then
      	dt_conta_definitiva_w:= dt_conta_w;
	dt_periodo_inicial_w	:= clock_timestamp();
	dt_periodo_final_w 	:= clock_timestamp();
end;

select 	coalesce(max(cd_tab_preco_mat),0)
into STRICT	cd_tab_preco_mat_regra_w
from 	regra_data_preco_mat
where 	ie_situacao = 'A'
and 	cd_convenio = coalesce(cd_convenio_calculo_w, cd_convenio_w)
and 	cd_estabelecimento = cd_estabelecimento_w;

qt_preco_mat_w:= 0;
if (cd_tab_preco_mat_regra_w > 0) then
	select 	count(*)
	into STRICT	qt_preco_mat_w
	from 	preco_material
	where 	cd_tab_preco_mat = cd_tab_preco_mat_regra_w
	and 	cd_estabelecimento    = cd_estabelecimento_w
	and 	cd_material	      = cd_material_w
	and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_conta_w, dt_atendimento_w)) between coalesce(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_vigencia), clock_timestamp() - interval '3650 days') and coalesce(dt_final_vigencia, coalesce(dt_conta_w,
dt_atendimento_w));
end if;

if (qt_preco_mat_w > 0) then

	dt_preco_w:= coalesce(dt_conta_w, dt_atendimento_w);

else

	/*      define preco do material */

	select	obter_regra_data_preco('M',coalesce(cd_convenio_calculo_w, cd_convenio_w), dt_entrada_w, coalesce(dt_conta_w, dt_atendimento_w), dt_alta_preco_w, dt_conta_definitiva_w, null, dt_periodo_inicial_w,
dt_periodo_final_w)
	into STRICT	dt_preco_w
	;
	
end if;

/* obter glosa do material */

SELECT * FROM glosa_material(cd_estabelecimento_w, nr_atendimento_w, dt_preco_w, cd_material_w, qt_material_w, cd_tipo_acomodacao_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, qt_idade_w, cd_procedimento_w, ie_origem_proced_w, nr_sequencia_p, nr_seq_proc_interno_w, cd_convenio_w, cd_categoria_w, ie_tipo_convenio_w, ie_classif_contabil_w, cd_autorizacao_w, nr_seq_autorizacao_w, qt_autorizada_w, cd_senha_w, nm_responsavel_w, ie_glosa_w, cd_situacao_glosa_w, pr_glosa_w, vl_glosa_w, cd_motivo_exc_conta_ww, ie_autor_particular_w, cd_convenio_glosa_ww, cd_categoria_glosa_ww, nr_seq_regra_ajuste_ww, 0) INTO STRICT cd_convenio_w, cd_categoria_w, ie_tipo_convenio_w, ie_classif_contabil_w, cd_autorizacao_w, nr_seq_autorizacao_w, qt_autorizada_w, cd_senha_w, nm_responsavel_w, ie_glosa_w, cd_situacao_glosa_w, pr_glosa_w, vl_glosa_w, cd_motivo_exc_conta_ww, ie_autor_particular_w, cd_convenio_glosa_ww, cd_categoria_glosa_ww, nr_seq_regra_ajuste_ww;
		
if (coalesce(nr_seq_regra_ajuste_ww,0) <> 0) then
	update 	material_atend_paciente
        set 	nr_seq_regra_ajuste_mat = nr_seq_regra_ajuste_ww
	where  	nr_sequencia        	= nr_sequencia_p
	and	ie_altera_auditoria_w	= 'S';
end if;


if (ie_guia_informada_w <> 'S') and (nr_doc_convenio_w = '') then
	nr_doc_convenio_w  := cd_autorizacao_w;
end if;

/* se o convenio mudou para particular e necessario identificar qual o novo material */

if (cd_situacao_glosa_w > 0) then

	select obter_material_conta(
		cd_estabelecimento_w,
		cd_convenio_w,
		cd_categoria_w,
		cd_material_prescricao_w,
		cd_material_exec_w,
		cd_material_w,
		cd_plano_w,
		cd_setor_atendimento_w,
		dt_conta_w,
		cd_local_estoque_w,
		nr_prescricao_w)
	into STRICT	cd_material_ww
	;
	if (coalesce(cd_material_ww,0) <> coalesce(cd_material_w,0)) then
		update material_atend_paciente
		set	cd_material	= cd_material_ww
		where	nr_sequencia	= nr_sequencia_p;

		cd_material_w	:= cd_material_ww;	 /*  tdpaula  OS 301463  */
	end if;

	if (coalesce(cd_convenio_w,0) <> 0) and (coalesce(cd_categoria_w,'0') <> '0') then
		cd_convenio_calculo_w := cd_convenio_w;
		cd_categoria_calculo_w := cd_categoria_w;
	end if; /*  tdpaula  OS 301463  fim */
end if;
/* obter contas do material */

select	coalesce(max(ie_responsavel_credito),'0')
into STRICT	cd_regra_honor_orig_w
from	material_atend_paciente
where	nr_sequencia = nr_sequencia_p;

if (ie_estab_regra_honorario_w	= 'C') then
	cd_estab_honorario_w	:= cd_estab_conta_w;
elsif (ie_estab_regra_honorario_w	= 'O') then
	cd_estab_honorario_w	:= cd_estab_atend_w;
else
	cd_estab_honorario_w	:= cd_estabelecimento_w;
end if;

select	coalesce(max(ie_gerar_resp_credito),'N')
into STRICT	ie_gerar_resp_credito_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estab_honorario_w;

/* obter regra de responsavel de credito */

begin
SELECT * FROM obter_regra_material_crit(cd_estab_honorario_w, cd_convenio_w, cd_categoria_w, cd_material_w, dt_atendimento_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, null, null, null, cd_cgc_prestador_w, cd_cgc_fornecedor_w, ie_valor_autorizado_w, cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w) INTO STRICT cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w;
end;

if (ie_valor_informado_w = 'S') and (ie_gerar_resp_credito_w = 'N') and (cd_regra_honor_orig_w <> '0')then
	cd_regra_honorario_w	:= cd_regra_honor_orig_w;
end if;

/* obter o material */

select ie_cobra_paciente
  into STRICT ie_cobra_paciente_w
from material
where cd_material = cd_material_w;

select	count(*)
into STRICT	qt_conta_guia_w
from	conta_paciente_guia
where	nr_interno_conta	= nr_interno_conta_w
and	cd_autorizacao		= nr_doc_convenio_w;

if	(qt_conta_guia_w = 0 AND nr_doc_convenio_w IS NOT NULL AND nr_doc_convenio_w::text <> '') and (ie_gerar_conta_guia_dif_w	= 'S') and (ie_status_acerto_w = 1) then
	nr_interno_conta_w	:= null;
end if;

begin
select	coalesce(max('N'),'S')
into STRICT	ie_gerar_conta_periodo_w
from	conta_paciente
where	nr_interno_conta	= nr_interno_conta_w
/*and	dt_conta_w between dt_periodo_inicial and dt_periodo_final; felipe - 57899 - 24/05/2007 comentei e coloquei o and abaixo*/

and	dt_conta_w <= dt_periodo_final;
exception
     	 when others then
		ie_gerar_conta_periodo_w := 'N';
end;

if (ie_gerar_conta_periodo_w = 'S') and (qt_dia_fim_conta_w > 0) and (ie_status_acerto_w = 1) then
	nr_interno_conta_w	:= null;
end if;

/*      identificar a conta que o material deve ser incluido */

if (cd_estab_atend_w	<> cd_estabelecimento_w) and (ie_estabelecimento_conta_w = 'S') and (ie_status_acerto_w = 1) then
	nr_interno_conta_w	:= null;
end if;

if (ie_recalculo_conta_w = 'N') then
	ie_avisa_sem_conta_aberta_w := coalesce(obter_valor_param_usuario(42, 67, obter_perfil_ativo, nm_usuario_p, cd_estab_conta_w),'N');
else
	ie_avisa_sem_conta_aberta_w := Param_Recalculo_Conta_pck.get_parametro(42,67, obter_perfil_ativo, nm_usuario_p, cd_estab_conta_w);
end if;

if (obter_funcao_ativa = 42) and (ie_avisa_sem_conta_aberta_w = 'S') and (cd_acao_w = '2') then
	begin
	select 	count(*)
	into STRICT	qt_conta_aberta_w
	from   	conta_paciente
	where 	nr_atendimento = nr_atendimento_w
	and 	ie_status_acerto = 1
	and 	cd_convenio_parametro = cd_convenio_w
	and 	cd_categoria_parametro = cd_categoria_w;

	if (qt_conta_aberta_w = 0) then
		-- Nao existem contas em aberto para esse atendimento com o convenio #@DS_CONVENIO#@ e categoria #@DS_CATEGORIA#@
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(184110,'DS_CONVENIO=' || substr(obter_nome_convenio(cd_convenio_w),1,100) ||
								';DS_CATEGORIA=' || substr(obter_dados_categ_conv(cd_categoria_w,'DC'),1,100));
	end if;
	end;
end if;

if (coalesce(ie_status_acerto_w,1) = 1) then

	SELECT * FROM obter_regra_senha_guia_conta( 	cd_estabelecimento_w, cd_convenio_w, ie_tipo_atendimento_w, ie_doc_autorizacao_w, ie_atualiza_guia_w, ie_atualiza_senha_w, ie_autor_qtde_w) INTO STRICT ie_doc_autorizacao_w, ie_atualiza_guia_w, ie_atualiza_senha_w, ie_autor_qtde_w;

	SELECT * FROM obter_autor_item_conta(null, nr_sequencia_p, nr_sequencia_autor_w, nr_seq_proc_autor_w, nr_seq_mat_autor_w, nr_doc_conv_autor_w, cd_senha_autor_w, ie_autorizado_w, ie_doc_autorizacao_w, ie_autor_qtde_w) INTO STRICT nr_sequencia_autor_w, nr_seq_proc_autor_w, nr_seq_mat_autor_w, nr_doc_conv_autor_w, cd_senha_autor_w, ie_autorizado_w;

	if (nr_sequencia_autor_w IS NOT NULL AND nr_sequencia_autor_w::text <> '') and (nr_seq_mat_autor_w IS NOT NULL AND nr_seq_mat_autor_w::text <> '') then

		if (coalesce(nr_seq_mat_autor_ww::text, '') = '')then
		
			update	material_atend_paciente
			set	nr_seq_mat_autor	= nr_seq_mat_autor_w
			where	nr_sequencia		= nr_sequencia_p;
		else
			select	max(a.cd_autorizacao),
				max(a.cd_senha)
			into STRICT	nr_doc_conv_autor_w,
				cd_senha_autor_w
			from	autorizacao_convenio a,
				material_autorizado b,
				estagio_autorizacao c
			where	a.nr_sequencia = b.nr_sequencia_autor
			and	b.nr_sequencia = nr_seq_mat_autor_ww
			and	c.nr_sequencia = a.nr_seq_estagio
			and	c.ie_interno   = 10;
		end if;
		
		
		if (ie_doc_autorizacao_w = 'C') or
			((ie_doc_autorizacao_w = 'S') and (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') and (nr_sequencia_prescricao_w IS NOT NULL AND nr_sequencia_prescricao_w::text <> '')) then

			if (nr_doc_conv_autor_w IS NOT NULL AND nr_doc_conv_autor_w::text <> '') or (cd_senha_autor_w IS NOT NULL AND cd_senha_autor_w::text <> '') then
				
				--se tiver autorizacao e ainda nao estiver autorizada deve deixar guia e senha aguardando retorno
				nr_doc_convenio_w	:= null;
				cd_senha_w		:= null;

				--se ja foi autorizado, ja insere com guia e senha da autorizacao
				if (ie_autorizado_w	= 'S') then
					if (ie_atualiza_guia_w	= 'S') then
						nr_doc_convenio_w	:= nr_doc_conv_autor_w;
					end if;
					
					if (ie_atualiza_senha_w	= 'S') then
						cd_senha_w		:= cd_senha_autor_w;
					end if;
				end if;
			end if;

		--feito dessa forma para caso o material nem tenha autorizacao, continuar como antes
			update	material_atend_paciente
			set	nr_doc_convenio		= nr_doc_convenio_w,
				cd_senha		= cd_senha_w
			where	nr_sequencia		= nr_sequencia_p;
		end if;
		
		
	end if;
end if;

ds_nao_informado_w := substr(obter_desc_expressao(778770),1,20);

if (ie_doc_convenio_w = 'G') and (coalesce(nr_doc_convenio_w, ds_nao_informado_w) = ds_nao_informado_w) then

	begin
	select	b.nr_doc_convenio
	into STRICT	nr_doc_convenio_w
	from	atendimento_paciente a,
		atend_categoria_convenio b
	where	a.nr_atendimento	= b.nr_atendimento
	and	a.nr_atendimento	= nr_atendimento_w
	and	b.nr_seq_interno	= Obter_Atecaco_Atend_conv(a.nr_atendimento,cd_convenio_w)  LIMIT 1;	
	exception
	when others then
		nr_doc_convenio_w	:= null;
	end;
end if;

if (coalesce(nr_interno_conta_w::text, '') = '') or (cd_convenio_w	<> cd_convenio_orig_w) 	or
	(cd_situacao_glosa_w = 13 AND ie_status_acerto_w = 1)	then
	ie_identifica_conta_mat_w := 'S';
else
	ie_identifica_conta_mat_w := 'N';
end if;


if (ie_identifica_conta_mat_w = 'S')	then
	begin
		
		ie_item_fora_periodo_w := obter_se_item_fora_periodo(	cd_estabelecimento_w, nr_atendimento_w, cd_convenio_w, cd_categoria_w, nm_usuario_p, dt_conta_real_w, dt_entrada_w, dt_alta_w, nr_doc_convenio_w, cd_setor_atendimento_w, null, ie_item_fora_periodo_w);

		if	ie_item_fora_periodo_w = 'N' then
			SELECT * FROM obter_conta_paciente(	cd_estabelecimento_w, nr_atendimento_w, cd_convenio_w, cd_categoria_w, nm_usuario_p, dt_conta_real_w, dt_entrada_w, dt_alta_w, nr_doc_convenio_w, cd_setor_atendimento_w, null, dt_acerto_conta_w, nr_interno_conta_w, cd_convenio_calculo_w, cd_categoria_calculo_w) INTO STRICT dt_acerto_conta_w, nr_interno_conta_w, cd_convenio_calculo_w, cd_categoria_calculo_w;
		end if;
	end;
end if;

if (coalesce(cd_convenio_calculo_w::text, '') = '') then
	begin
	select		cd_convenio_calculo,
			cd_categoria_calculo
	into STRICT		cd_convenio_calculo_w,
			cd_categoria_calculo_w
	from 		conta_paciente
	where		nr_interno_conta	= nr_interno_conta_w;
	exception
     			when others then
			begin
			cd_convenio_calculo_w	:= cd_convenio_w;
 			cd_categoria_calculo_w	:= cd_categoria_w;
			end;
	end;
end if;

if	coalesce(cd_convenio_calculo_w::text, '') = '' then
	cd_convenio_calculo_w	:= cd_convenio_w;
end if;


if	coalesce(cd_categoria_calculo_w::text, '') = '' then
	cd_categoria_calculo_w	:= cd_categoria_w;
end if;

begin
select	max(CASE WHEN ie_status_acerto=1 THEN coalesce(dt_conta_definitiva,clock_timestamp())  ELSE coalesce(dt_conta_definitiva,dt_conta_w) END ),
	max(dt_periodo_inicial),
	max(dt_periodo_final)
into STRICT	dt_conta_definitiva_w,
	dt_periodo_inicial_w,
	dt_periodo_final_w
from 	conta_paciente
where 	nr_interno_conta = nr_interno_conta_w;
exception
    	when others then
      	dt_conta_definitiva_w:= dt_conta_w;
	dt_periodo_inicial_w	:= clock_timestamp();
	dt_periodo_final_w 	:= clock_timestamp();
end;

select 	coalesce(max(cd_tab_preco_mat),0)
into STRICT	cd_tab_preco_mat_regra_w
from 	regra_data_preco_mat
where 	ie_situacao = 'A'
and 	cd_convenio = cd_convenio_calculo_w
and 	cd_estabelecimento = cd_estabelecimento_w;

qt_preco_mat_w:= 0;
if (cd_tab_preco_mat_regra_w > 0) then
	select 	count(*)
	into STRICT	qt_preco_mat_w
	from 	preco_material
	where 	cd_tab_preco_mat = cd_tab_preco_mat_regra_w
	and 	cd_estabelecimento    = cd_estabelecimento_w
	and 	cd_material	      = cd_material_w
	and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_conta_w) between coalesce(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_vigencia), clock_timestamp() - interval '3650 days') and coalesce(dt_final_vigencia, dt_conta_w);
end if;

if (qt_preco_mat_w > 0) then

	dt_preco_w:= dt_conta_w;

else

	/*      define preco do material */

	select	obter_regra_data_preco('M',cd_convenio_calculo_w, dt_entrada_w, dt_conta_w, dt_alta_preco_w, dt_conta_definitiva_w, null, dt_periodo_inicial_w, dt_periodo_final_w)
	into STRICT	dt_preco_w
	;
	
end if;

RAISE NOTICE '% - % - % - % - % - % - % - % - %', cd_convenio_calculo_w, cd_categoria_calculo_w, dt_preco_w, dt_entrada_w, dt_conta_w, dt_alta_preco_w, dt_conta_definitiva_w, dt_periodo_inicial_w, dt_periodo_final_w;
if (ie_cobra_paciente_w = 'N') 	then
	select CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT ie_cobra_paciente_w
	from material_convenio
	where cd_convenio = cd_convenio_w
	  and cd_material_conta = cd_material_w;
end if;

if (ie_cobra_paciente_w = 'S') and (ie_altera_auditoria_w = 'S')	then
	begin
	if (ie_glosa_w	= 'F') then
			CALL Grava_log_preco_pck.set_ie_gravar_log('S');
	    	SELECT * FROM define_preco_material(
			cd_estabelecimento_w, cd_convenio_orig_w, cd_categoria_orig_w, dt_preco_w, cd_material_w, cd_tipo_acomodacao_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, cd_cgc_fornecedor_w, qt_idade_w, nr_sequencia_p, cd_plano_w, cd_procedimento_w, ie_origem_proced_w, null, null, nr_seq_classif_atend_w, null, null, vl_preco_material_w, dt_ult_vigencia_w, cd_tab_preco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w) INTO STRICT vl_preco_material_w, dt_ult_vigencia_w, cd_tab_preco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w;
			CALL Grava_log_preco_pck.set_ie_gravar_log('N');
	else
			CALL Grava_log_preco_pck.set_ie_gravar_log('S');
	    	SELECT * FROM define_preco_material(
			cd_estabelecimento_w, cd_convenio_calculo_w, cd_categoria_calculo_w, dt_preco_w, cd_material_w, cd_tipo_acomodacao_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, cd_cgc_fornecedor_w, qt_idade_w, nr_sequencia_p, cd_plano_w, cd_procedimento_w, ie_origem_proced_w, null, null, nr_seq_classif_atend_w, null, null, vl_preco_material_w, dt_ult_vigencia_w, cd_tab_preco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w) INTO STRICT vl_preco_material_w, dt_ult_vigencia_w, cd_tab_preco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w;
			CALL Grava_log_preco_pck.set_ie_gravar_log('N');
	end if;

	open c03;
	loop
	fetch c03 into
		cd_tab_mat_atualizacao_w,
		cd_tab_mat_praticado_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
		cd_tab_mat_atualizacao_w := cd_tab_mat_atualizacao_w;
		cd_tab_mat_praticado_w	 := cd_tab_mat_praticado_w;
		end;
	end loop;
	close c03;

	if (coalesce(cd_tab_mat_atualizacao_w,0) > 0) and (coalesce(cd_tab_mat_praticado_w,0) > 0) and
		((cd_tab_preco_mat_w = cd_tab_mat_praticado_w) or (coalesce(cd_tab_preco_mat_w,0) = 0)) and (ie_origem_preco_w in (0,2)) then

		SELECT * FROM define_preco_mat_atualizacao(	cd_material_w, dt_ult_vigencia_w, cd_tab_mat_praticado_w, cd_tab_mat_atualizacao_w, coalesce(nr_sequencia_p,0), nm_usuario_p, cd_convenio_w, vl_preco_material_w, ie_status_w) INTO STRICT vl_preco_material_w, ie_status_w;
		if (coalesce(ie_status_w::text, '') = '') then
			ie_status_w:= '0';
		end if;
	end if;
	end;
end if;

/*      define preco da devolucao do material */

if (cd_acao_w = '2') 	then

	cd_situacao_glosa_dev_w:= cd_situacao_glosa_w;

	if (cd_situacao_glosa_dev_w = 8) then
		CALL Grava_log_preco_pck.set_ie_gravar_log('S');
		SELECT * FROM define_preco_material(
			cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, dt_preco_w, cd_material_w, cd_tipo_acomodacao_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, cd_cgc_fornecedor_w, qt_idade_w, nr_sequencia_p, cd_plano_w, cd_procedimento_w, ie_origem_proced_w, null, null, nr_seq_classif_atend_w, null, null, vl_preco_material_w, dt_ult_vigencia_w, cd_tab_preco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w) INTO STRICT vl_preco_material_w, dt_ult_vigencia_w, cd_tab_preco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w;
		CALL Grava_log_preco_pck.set_ie_gravar_log('N');
			open c03;
			loop
			fetch c03 into
				cd_tab_mat_atualizacao_w,
				cd_tab_mat_praticado_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				begin
				cd_tab_mat_atualizacao_w := cd_tab_mat_atualizacao_w;
				cd_tab_mat_praticado_w	 := cd_tab_mat_praticado_w;
				end;
			end loop;
			close c03;

			if (coalesce(cd_tab_mat_atualizacao_w,0) > 0) and (coalesce(cd_tab_mat_praticado_w,0) > 0) and
				((cd_tab_preco_mat_w = cd_tab_mat_praticado_w) or (coalesce(cd_tab_preco_mat_w,0) = 0)) and (ie_origem_preco_w in (0,2)) then

				SELECT * FROM define_preco_mat_atualizacao(	cd_material_w, dt_ult_vigencia_w, cd_tab_mat_praticado_w, cd_tab_mat_atualizacao_w, coalesce(nr_sequencia_p,0), nm_usuario_p, cd_convenio_w, vl_preco_material_w, ie_status_w) INTO STRICT vl_preco_material_w, ie_status_w;
												
				if (coalesce(ie_status_w::text, '') = '') then
					ie_status_w:= '0';
				end if;

			end if;

	else
	
		begin
		select 	a.vl_unitario
		into STRICT	vl_preco_material_w
		from	material_atend_paciente a,
			conta_paciente b
		where	a.nr_interno_conta	 	= b.nr_interno_conta	
		and	a.nr_prescricao			= nr_prescricao_w
		and	a.nr_sequencia_prescricao 	= nr_sequencia_prescricao_w
		and	a.cd_material_prescricao 	= cd_material_prescricao_w
		and	a.cd_acao			= '1'
		and	a.ie_auditoria			= 'N'
		and	coalesce(b.ie_cancelamento::text, '') = '';
		exception
     			when others then			
			begin
			select 	a.vl_unitario
			into STRICT	vl_preco_material_w
			from	material_atend_paciente a,
				conta_paciente b
			where	a.nr_interno_conta		= b.nr_interno_conta
			and	a.nr_prescricao			= nr_prescricao_w
			and	a.nr_sequencia_prescricao	= nr_sequencia_prescricao_w
			and	a.cd_material_prescricao 	= cd_material_prescricao_w
			and	a.cd_material			= cd_material_w			-- Incluimos o select com esta restricao a mais. OS524831 - aaheckler
			and	a.cd_acao			= '1'
			and	a.ie_auditoria			= 'N'
			and	coalesce(b.ie_cancelamento::text, '') = '';
			exception
				when others then
				vl_preco_material_w		:= vl_preco_material_w;
			end;
		end;

	end if;
end if;


if (ie_valor_informado_w 	= 'N') 	and (coalesce(ie_glosa_w,'L') <> 'Y') 	and (coalesce(ie_glosa_w,'L') <> '3')	and (vl_preco_material_w 	= 0) 	and (ie_cobra_paciente_w = 'S') 	and (ie_altera_auditoria_w = 'S') then
	begin
	ie_glosa_zerado_w := obter_parametro_geral(1, ie_glosa_zerado_w);
	if (ie_glosa_zerado_w	= 'S') then
		begin
		/* ricardo 04/11/2006 - os43964

		obter_convenio_particular(cd_estabelecimento_w, cd_convenio_w,cd_categoria_w);
		*/
		SELECT * FROM obter_convenio_particular_pf(cd_estabelecimento_w, cd_convenio_w, cd_pessoa_fisica_w, dt_atendimento_w, cd_convenio_w, cd_categoria_w) INTO STRICT cd_convenio_w, cd_categoria_w;

				
		select 	coalesce(max(cd_tab_preco_mat),0)
		into STRICT	cd_tab_preco_mat_regra_w
		from 	regra_data_preco_mat
		where 	ie_situacao = 'A'
		and 	cd_convenio = cd_convenio_w
		and 	cd_estabelecimento = cd_estabelecimento_w;

		qt_preco_mat_w:= 0;
		if (cd_tab_preco_mat_regra_w > 0) then
			select 	count(*)
			into STRICT	qt_preco_mat_w
			from 	preco_material
			where 	cd_tab_preco_mat = cd_tab_preco_mat_regra_w
			and 	cd_estabelecimento    = cd_estabelecimento_w
			and 	cd_material	      = cd_material_w
			and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_conta_w) between coalesce(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_inicio_vigencia), clock_timestamp() - interval '3650 days') and coalesce(dt_final_vigencia, dt_conta_w);
		end if;

		if (qt_preco_mat_w > 0) then

			dt_preco_w:= dt_conta_w;

		else
				
			select	obter_regra_data_preco('M',cd_convenio_w, dt_entrada_w, dt_conta_w, dt_alta_preco_w, dt_conta_definitiva_w, null, dt_periodo_inicial_w, dt_periodo_final_w)
			into STRICT	dt_preco_w
			;
			
		end if;
			CALL Grava_log_preco_pck.set_ie_gravar_log('S');
    		SELECT * FROM define_preco_material(
			cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, dt_preco_w, cd_material_w, cd_tipo_acomodacao_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, cd_cgc_fornecedor_w, qt_idade_w, nr_sequencia_p, cd_plano_w, cd_procedimento_w, ie_origem_proced_w, null, null, nr_seq_classif_atend_w, null, null, vl_preco_material_w, dt_ult_vigencia_w, cd_tab_preco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w) INTO STRICT vl_preco_material_w, dt_ult_vigencia_w, cd_tab_preco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w;
			CALL Grava_log_preco_pck.set_ie_gravar_log('N');
			
		SELECT * FROM obter_conta_paciente(cd_estabelecimento_w, nr_atendimento_w, cd_convenio_w, cd_categoria_w, nm_usuario_p, dt_conta_real_w, dt_entrada_w, dt_alta_w, nr_doc_convenio_w, cd_setor_atendimento_w, null, dt_acerto_conta_w, nr_interno_conta_w, cd_convenio_calculo_w, cd_categoria_calculo_w) INTO STRICT dt_acerto_conta_w, nr_interno_conta_w, cd_convenio_calculo_w, cd_categoria_calculo_w;
			open c03;
			loop
			fetch c03 into
				cd_tab_mat_atualizacao_w,
				cd_tab_mat_praticado_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				begin
				cd_tab_mat_atualizacao_w := cd_tab_mat_atualizacao_w;
				cd_tab_mat_praticado_w	 := cd_tab_mat_praticado_w;
				end;
			end loop;
			close c03;

			if (coalesce(cd_tab_mat_atualizacao_w,0) > 0) and (coalesce(cd_tab_mat_praticado_w,0) > 0) and
				((cd_tab_preco_mat_w = cd_tab_mat_praticado_w) or (coalesce(cd_tab_preco_mat_w,0) = 0)) and (ie_origem_preco_w in (0,2)) then

				SELECT * FROM define_preco_mat_atualizacao(	cd_material_w, dt_ult_vigencia_w, cd_tab_mat_praticado_w, cd_tab_mat_atualizacao_w, coalesce(nr_sequencia_p,0), nm_usuario_p, cd_convenio_w, vl_preco_material_w, ie_status_w) INTO STRICT vl_preco_material_w, ie_status_w;
												
				if (coalesce(ie_status_w::text, '') = '') then
					ie_status_w:= '0';
				end if;

			end if;

		end;
	end if;
	end;
end if;


tx_material_w		:= 0;

begin
tx_material_w := obter_taxa_qtde_exec_mat(cd_estabelecimento_w, nr_sequencia_p, cd_convenio_w, cd_categoria_w, dt_atendimento_w, cd_material_w, qt_material_w, tx_material_w);
exception
	when others then
	tx_material_w	:= 0;
end;

tx_material_orig_w:=tx_material_ww;

if (tx_material_w	<> 0) then
	--vl_preco_material_w	:= (tx_material_w * vl_preco_material_w) / 100;
	tx_material_ww:=tx_material_w;
end if;

if (ie_valor_informado_w = 'S') then
	begin

	--if	(cd_acao_w = 2) and (cd_situacao_glosa_dev_w = 8) then --os 150498

	--

	--	vl_total_material_w 		:= vl_total_material_w;

	--	vl_preco_material_w 		:= vl_preco_material_w;

	--

	--else
		vl_total_material_w 		:= vl_material_orig_w;
		vl_preco_material_w 		:= vl_unitario_orig_w;
		tx_material_ww				:= tx_material_orig_w;
		nr_seq_bras_preco_w		:= nr_seq_bras_preco_orig_w;				

	--end if;
	begin

	select 	coalesce(max(nr_sequencia), 0)
	into STRICT	nr_seq_w
	from	mat_atend_paciente_valor
	where	nr_seq_material		= nr_sequencia_p
	and	ie_tipo_valor		= 3;

	if (nr_seq_w	= 0) and (coalesce(dt_desdobramento_w::text, '') = '') then
		delete	from mat_atend_paciente_valor
		where	nr_seq_material		= nr_sequencia_p
		and	ie_tipo_valor		= 96;

		select 	coalesce(max(nr_sequencia), 0) + 1
		into STRICT	nr_seq_w
		from	mat_atend_paciente_valor
		where	nr_seq_material		= nr_sequencia_p;

		insert into mat_atend_paciente_valor(nr_seq_material,
			nr_sequencia,
			ie_tipo_valor,
			dt_atualizacao,
			nm_usuario,
			vl_material,
			cd_convenio,
			cd_categoria,
			pr_valor,
			nr_seq_trans_fin,
			nr_lote_contabil)
		values (nr_sequencia_p,
			nr_seq_w,
			96,
			clock_timestamp(),
			nm_usuario_p,
			vl_total_material_w,
			cd_convenio_w,
			cd_categoria_w,
			0, null, null);
	end if;
	exception
		when others then
			nr_seq_w	:= nr_seq_w;
	end;

	end;
else

	select 	count(*)
	into STRICT	qt_mat_pac_valor_w
	from	mat_atend_paciente_valor
	where	nr_seq_material	= nr_sequencia_p
	and	ie_tipo_valor	<> 96;

	if (qt_mat_pac_valor_w = 0) and (coalesce(dt_desdobramento_w::text, '') = '') then
		begin
		delete	from mat_atend_paciente_valor
		where	nr_seq_material	= nr_sequencia_p
		and	ie_tipo_valor	= 96;
		exception
			when others then
			qt_mat_pac_valor_w:= 0;
		end;
	end if;

      	begin
	if (ie_conversao_mat_w	= 'O') then

		select	coalesce(max(qt_conversao_prest),1)
		into STRICT	tx_conversao_conv_w
		from	pls_material
		where	cd_material	= cd_material_w;

	else
		select 	coalesce(max(tx_conversao_qtde),1)
		into STRICT 	tx_conversao_conv_w
		from 	conversao_material_convenio
		where 	cd_convenio = cd_convenio_w
		and 	cd_material = cd_material_w
		and	ie_situacao = 'A';
		
		if (ie_aplica_tx_conv_preco_w = 'N') then
			tx_conversao_conv_w:= 1;
		end if;

	end if;
		

	if (tx_conversao_conv_w = 0) then
		-- A conversao do material no convenio esta com zeros
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(184111);
	elsif (tx_conversao_conv_w = 1) then
		vl_total_material_w := (vl_preco_material_w * qt_material_w);
	else
		begin			
		qt_material_conv_w	:= qt_material_w * tx_conversao_conv_w;
		vl_preco_conv_w		:= round((vl_preco_material_w / tx_conversao_conv_w)::numeric,10);
		vl_total_material_w	:= vl_preco_conv_w * qt_material_conv_w;
		end;
	end if;
      	end;
end if;

cd_estrutura_w	:= 0;



if	((ie_conta_honorario_w = 'T') or (ie_conta_honorario_w = 'N')) and (ie_valor_informado_w = 'N') then
	vl_total_material_w		:= 0;
end if;

if (ie_calcula_honorario_w = 'N') and (ie_valor_informado_w = 'N') then
	vl_total_material_w		:= 0;
	vl_preco_material_w		:= 0;
end if;


cd_estrutura_w := obter_estrut_conta_mat(
			cd_convenio_w, cd_material_w, cd_setor_atendimento_w, ie_tipo_atendimento_w, cd_regra_honorario_w, cd_estabelecimento_w, cd_estrutura_w);
if (cd_estrutura_w	> 0) then
	ie_emite_conta_w	:= cd_estrutura_w;
end if;
/*      tratar casos em que o convenio nao paga e portanto devem ser zerados */

if (ie_glosa_w = 'Z') then
	select	max(cd_motivo_exc_conta)
	into STRICT	cd_motivo_exc_conta_w
	from parametro_faturamento
	where	cd_estabelecimento	= cd_estabelecimento_w;
	nr_seq_conta_origem_w		:= nr_interno_conta_w;
	nr_interno_conta_w		:= null;
	dt_acerto_conta_w		:= null;
	vl_preco_material_w		:= 0;
	vl_total_material_w		:= 0;
end if;

if (ie_glosa_w = 'M') then
	dt_acerto_conta_w		:= null;
	vl_preco_material_w		:= 0;
	vl_total_material_w		:= 0;
	ie_valor_informado_w		:= 'S';
end if;

if (ie_glosa_w	= 'E') then
	cd_motivo_exc_conta_w	:= cd_motivo_exc_conta_ww;
	nr_seq_conta_origem_w	:= nr_interno_conta_w;
end if;

select 	coalesce(max(cd_proc_referencia),0),
	coalesce(max(ie_origem_proced),1)
into STRICT	cd_proc_referencia_w,
	ie_origem_proc_refer_w
from 	regra_ajuste_material
where 	nr_sequencia = nr_seq_regra_ajuste_ww;

select	count(*)
into STRICT	qt_reg_ajuste_item_ref_w
from	regra_ajuste_item_ref
where	nr_seq_regra_ajuste_mat = nr_seq_regra_ajuste_ww;
	
if (cd_proc_referencia_w > 0) or (qt_reg_ajuste_item_ref_w > 0) then

	if (cd_proc_referencia_w > 0) then
	
		if (ie_glosa_w = 'U') then -- Mesma prescricao
			select 	count(*)
			into STRICT	qt_proc_ref_w
			from 	procedimento_paciente
			where 	cd_procedimento = cd_proc_referencia_w
			and 	ie_origem_proced = ie_origem_proc_refer_w
			and 	nr_prescricao = coalesce(nr_prescricao_w,0)
			and 	nr_interno_conta = nr_interno_conta_w
			and 	coalesce(nr_prescricao,0) > 0
			and 	coalesce(cd_motivo_exc_conta::text, '') = '';
		elsif (ie_glosa_w = '5') then -- Mesmo dia
			select 	count(*)
			into STRICT	qt_proc_ref_w
			from 	procedimento_paciente
			where 	cd_procedimento = cd_proc_referencia_w
			and 	ie_origem_proced = ie_origem_proc_refer_w
			and 	nr_interno_conta = nr_interno_conta_w
			and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_atendimento_w)
			and	nr_sequencia <> nr_sequencia_p
			and 	coalesce(cd_motivo_exc_conta::text, '') = '';
		else
			select 	count(*)
			into STRICT	qt_proc_ref_w
			from 	procedimento_paciente
			where 	cd_procedimento = cd_proc_referencia_w
			and 	ie_origem_proced = ie_origem_proc_refer_w
			and 	nr_interno_conta = nr_interno_conta_w
			and 	coalesce(cd_motivo_exc_conta::text, '') = '';
		end if;
		
	else
	
		qt_proc_ref_w	:= 0;

		open C04;
		loop
		fetch C04 into	
			cd_mat_item_ref_w,
			cd_proc_item_ref_w,
			ie_origem_proc_item_ref_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin
			
			if (qt_proc_ref_w = 0) then
			
				if (ie_glosa_w = 'U') then -- Mesma prescricao
				if (coalesce(cd_mat_item_ref_w,0) > 0) then
						select 	count(*)
						into STRICT	qt_proc_ref_w
						from 	material_atend_paciente
						where 	cd_material = cd_mat_item_ref_w
						and 	nr_prescricao = coalesce(nr_prescricao_w,0)
						and 	nr_interno_conta = nr_interno_conta_w
						and 	coalesce(nr_prescricao,0) > 0
						and	nr_sequencia <> nr_sequencia_p
						and 	coalesce(cd_motivo_exc_conta::text, '') = '';
					elsif (coalesce(cd_proc_item_ref_w,0) > 0) then
						select 	count(*)
						into STRICT	qt_proc_ref_w
						from 	procedimento_paciente
						where 	cd_procedimento = cd_proc_item_ref_w
						and 	ie_origem_proced = ie_origem_proc_item_ref_w
						and 	nr_prescricao = coalesce(nr_prescricao_w,0)
						and 	nr_interno_conta = nr_interno_conta_w
						and 	coalesce(nr_prescricao,0) > 0
						and 	coalesce(cd_motivo_exc_conta::text, '') = '';
					end if;
				elsif (ie_glosa_w = '5') then -- Mesmo dia
					if (coalesce(cd_mat_item_ref_w,0) > 0) then
						select 	count(*)
						into STRICT	qt_proc_ref_w
						from 	material_atend_paciente
						where 	cd_material = cd_mat_item_ref_w
						and 	nr_interno_conta = nr_interno_conta_w
						and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_atendimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_atendimento_w)
						and 	coalesce(cd_motivo_exc_conta::text, '') = '';
					elsif (coalesce(cd_proc_item_ref_w,0) > 0) then
						select 	count(*)
						into STRICT	qt_proc_ref_w
						from 	procedimento_paciente
						where 	cd_procedimento = cd_proc_item_ref_w
						and 	ie_origem_proced = ie_origem_proc_item_ref_w
						and 	nr_interno_conta = nr_interno_conta_w
						and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_atendimento_w)
						and	nr_sequencia <> nr_sequencia_p
						and 	coalesce(cd_motivo_exc_conta::text, '') = '';
					end if;
				else			
					if (coalesce(cd_mat_item_ref_w,0) > 0) then
						select 	count(*)
						into STRICT	qt_proc_ref_w
						from 	material_atend_paciente
						where 	cd_material = cd_mat_item_ref_w
						and 	nr_interno_conta = nr_interno_conta_w
						and	nr_sequencia <> nr_sequencia_p
						and 	coalesce(cd_motivo_exc_conta::text, '') = '';
					elsif (coalesce(cd_proc_item_ref_w,0) > 0) then
						select 	count(*)
						into STRICT	qt_proc_ref_w
						from 	procedimento_paciente
						where 	cd_procedimento = cd_proc_item_ref_w
						and 	ie_origem_proced = ie_origem_proc_item_ref_w
						and 	nr_interno_conta = nr_interno_conta_w
						and 	coalesce(cd_motivo_exc_conta::text, '') = '';
					end if;					
				end if;
			
			end if;
			
			end;
		end loop;
		close C04;
		
	end if;
	
	if (ie_glosa_w = 'J') and (qt_proc_ref_w = 0) then

		select	max(cd_motivo_exc_conta)
		into STRICT	cd_motivo_exc_conta_www
		from	parametro_faturamento
		where	cd_estabelecimento	= cd_estabelecimento_w;
		
		nr_seq_conta_origem_w		:= nr_interno_conta_w;
		nr_interno_conta_w		:= null;
		cd_motivo_exc_conta_w		:= cd_motivo_exc_conta_www;

	elsif (ie_glosa_w = 'N') and (qt_proc_ref_w > 0) then

		select	max(cd_motivo_exc_conta)
		into STRICT	cd_motivo_exc_conta_www
		from	parametro_faturamento
		where	cd_estabelecimento	= cd_estabelecimento_w;

		nr_seq_conta_origem_w		:= nr_interno_conta_w;
		nr_interno_conta_w		:= null;
		cd_motivo_exc_conta_w		:= cd_motivo_exc_conta_www;
		
	elsif (ie_glosa_w = 'O') and (qt_proc_ref_w > 0) then
		
		dt_acerto_conta_w		:= null;
		vl_preco_material_w		:= 0;
		vl_total_material_w		:= 0;
		ie_valor_informado_w		:= 'S';
		
	elsif (ie_glosa_w = 'U') and (qt_proc_ref_w > 0) then
	
		select	max(cd_motivo_exc_conta)
		into STRICT	cd_motivo_exc_conta_www
		from	parametro_faturamento
		where	cd_estabelecimento	= cd_estabelecimento_w;

		nr_seq_conta_origem_w		:= nr_interno_conta_w;
		nr_interno_conta_w		:= null;
		cd_motivo_exc_conta_w		:= cd_motivo_exc_conta_www;

	elsif (ie_glosa_w = '5') and (qt_proc_ref_w > 0) then
	
		select	max(cd_motivo_exc_conta)
		into STRICT	cd_motivo_exc_conta_www
		from	parametro_faturamento
		where	cd_estabelecimento	= cd_estabelecimento_w;

		nr_seq_conta_origem_w		:= nr_interno_conta_w;
		nr_interno_conta_w		:= null;
		cd_motivo_exc_conta_w		:= cd_motivo_exc_conta_www;
		
	end if;
	
end if;

if (coalesce(dt_conta_w::text, '') = '') then
	dt_conta_w	:= coalesce(dt_conta_orig_w,clock_timestamp());
end if;

-- edgar 30/07/2007, os 59090
if (coalesce(nr_doc_convenio_w, ds_nao_informado_w) = ds_nao_informado_w) or (ie_grava_guia_conta_w	= 'S') then
	nr_doc_convenio_w	:= null;
	SELECT * FROM tiss_obter_guia(	'7', nr_interno_conta_w, nr_doc_convenio_w, 'N', null, null, ie_responsavel_credito_w, null, null, ie_guia_w, null, null, cd_senha_mat_w, cd_setor_atendimento_w, null, null, null, dt_material_w, null, nr_sequencia_p, null, nr_prescricao_w, null, null, null) INTO STRICT nr_doc_convenio_w, ie_guia_w;
end if;

/*      atualizar o material do paciente com os valores */

if (ie_glosa_w	= 'F') then
	ie_valor_informado_w	:= 'S';
end if;


if (coalesce(tx_material_ww::text, '') = '') then
    tx_material_ww := 100;
end if;

if (ie_valor_informado_w	= 'N') then
	vl_total_material_w := ((tx_material_ww * vl_total_material_w)/100);
	vl_preco_material_w := ((tx_material_ww * vl_preco_material_w)/100);
end if;

if (coalesce(ie_trunc_vl_material_w,'N') = 'S') then
	vl_total_material_w:= trunc(vl_total_material_w,2);
end if;

if (ie_glosa_w = '3') and (vl_total_material_w = 0) then
	
	select	sum(qt_item_conta)
	into STRICT	qt_item_conta_w
	from (SELECT	count(*) qt_item_conta
		from	procedimento_paciente
		where	nr_interno_conta = nr_interno_conta_w
		
union all

		SELECT	count(*) qt_item_conta
		from	material_atend_paciente
		where	nr_interno_conta = nr_interno_conta_w	) alias5;
	
	if (qt_item_conta_w = 0) then
		begin
			delete	from conta_paciente
			where	nr_interno_conta = nr_interno_conta_w;
		exception
			when others then
			nr_interno_conta_w	:= nr_interno_conta_w;
		end;
	end if;
	
	cd_convenio_w	:= coalesce(cd_convenio_glosa_ww, cd_convenio_w);
	cd_categoria_w	:= coalesce(cd_categoria_glosa_ww, cd_categoria_w);
	
	SELECT * FROM obter_conta_paciente(cd_estabelecimento_w, nr_atendimento_w, cd_convenio_w, cd_categoria_w, nm_usuario_p, dt_conta_real_w, dt_entrada_w, dt_alta_w, nr_doc_convenio_w, cd_setor_atendimento_w, null, dt_acerto_conta_w, nr_interno_conta_w, cd_convenio_calculo_w, cd_categoria_calculo_w) INTO STRICT dt_acerto_conta_w, nr_interno_conta_w, cd_convenio_calculo_w, cd_categoria_calculo_w;
end if;

select	coalesce(max(ie_tipo_convenio),0),
	max(ie_classif_contabil)
into STRICT	ie_tipo_convenio_aux2_w,
	ie_classif_contabil_w
from	convenio
where	cd_convenio	= cd_convenio_w;
/* Obter contas do Material - Matheus OS 203370 Alterado o local da Define conta material*/

if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') and (ie_tipo_convenio_aux2_w = 3) then
	
	SELECT * FROM sus_obter_complex_financ_aih(nr_interno_conta_w, ie_complexidade_sus_w, ie_tipo_financ_sus_w) INTO STRICT ie_complexidade_sus_w, ie_tipo_financ_sus_w;

end if;



begin
cd_sequencia_parametro_w := null;

SELECT * FROM define_conta_material(
	cd_estabelecimento_w, cd_material_w, 1, ie_clinica_w, cd_setor_atendimento_w, ie_classif_contabil_w, ie_tipo_atendimento_w, ie_tipo_convenio_aux2_w, cd_convenio_w, cd_categoria_w, cd_local_estoque_w, null, dt_entrada_w, cd_conta_receita_w, cd_centro_custo_w, cd_plano_w, ie_regra_pacote_w, null, ie_complexidade_sus_w, ie_tipo_financ_sus_w) INTO STRICT cd_conta_receita_w, cd_centro_custo_w;
	
cd_sequencia_parametro_w := philips_contabil_pck.get_parametro_conta_contabil();
end;

if (ie_glosa_w = 'Y') and (vl_total_material_w = 0) then
	nr_seq_conta_origem_w		:= nr_interno_conta_w;
	cd_motivo_exc_conta_w		:= cd_motivo_exc_conta_ww;
	nr_interno_conta_w		:= null;
end if;

cd_simpro_w:= null;
if (ie_origem_preco_w = 4) then --simpro
	nr_seq_marca_w := 0;
	if (coalesce(nr_sequencia_p,0) > 0) then
		if (coalesce(nr_seq_marca_w,0) = 0) and (coalesce(nr_seq_lote_fornec_w,0) > 0) then
			select	max(nr_seq_marca)
			into STRICT	nr_seq_marca_w
			from	material_lote_fornec
			where	nr_sequencia = nr_seq_lote_fornec_w;
		end if;
	end if;
	cd_simpro_w:= Obter_Codigo_Simpro2(cd_material_w, cd_convenio_w , cd_estabelecimento_w, dt_atendimento_w, nr_seq_conv_simpro_w, nr_seq_marca_w);
end if;

select 	count(*)
into STRICT	qt_regra_opme_conv_w
from 	conv_regra_mat_opme
where	cd_convenio = cd_convenio_w;

ie_opme_w:= null;
if (qt_regra_opme_conv_w > 0) then
	ie_opme_w:= obter_se_opme_convenio(nr_sequencia_p, cd_grupo_material_w, cd_subgrupo_material_w, cd_classe_material_w, cd_material_w, cd_convenio_w);
end if;

/* OS 591578 TUSS x TISS 3.0*/

SELECT * FROM Define_Material_TUSS( cd_estabelecimento_w, cd_material_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, ie_origem_preco_w, dt_atendimento_w, nr_seq_simpro_preco_w, nr_seq_bras_preco_w, nr_seq_lote_fornec_w, nm_usuario_p, cd_material_tuss_w, nr_seq_tuss_mat_item_w, ds_material_tuss_w, cd_cgc_fornecedor_w) INTO STRICT cd_material_tuss_w, nr_seq_tuss_mat_item_w, ds_material_tuss_w;

begin

     update 	material_atend_paciente
        set 	vl_material           	= vl_total_material_w,
            	dt_conta              	= coalesce(dt_conta_real_w,clock_timestamp()),
		dt_acerto_conta	    	= dt_acerto_conta_w,
            	vl_unitario           	= vl_preco_material_w,
    		cd_conta_contabil     	= cd_conta_receita_w,
		cd_centro_custo_receita	= CASE WHEN cd_centro_custo_w=0 THEN null  ELSE cd_centro_custo_w END ,
		cd_convenio		= cd_convenio_w,
		cd_categoria		= cd_categoria_w,
		cd_situacao_glosa	= cd_situacao_glosa_w,
		dt_vigencia_tabela	= dt_ult_vigencia_w,
		cd_tab_preco_material	= cd_tab_preco_mat_w,
		ie_valor_informado	= ie_valor_informado_w,
		nr_lote_contabil	= nr_lote_contabil_w,
		nr_doc_convenio		= nr_doc_convenio_w,
		nr_seq_autorizacao	= nr_seq_autorizacao_w,
		nr_interno_conta	= nr_interno_conta_w,
		ie_emite_conta		= ie_emite_conta_w,
		nr_seq_grupo_rec	= nr_seq_grupo_rec_w,
		cd_motivo_exc_conta	= cd_motivo_exc_conta_w,
		ie_responsavel_credito	= cd_regra_honorario_w,
		ie_origem_preco		= ie_origem_preco_w,		-- edgar 06/03/2007, atualizar origem do preco para o tiss
		nr_seq_conta_origem	= nr_seq_conta_origem_w,
		nr_seq_regra_ajuste_mat = nr_seq_regra_ajuste_ww,
		cd_apresentacao	 	= CASE WHEN ie_valor_informado_w='N' THEN  null  ELSE cd_apresentacao END ,
		cd_laboratorio		= CASE WHEN ie_valor_informado_w='N' THEN  null  ELSE cd_laboratorio END ,
		cd_medicamento		= CASE WHEN ie_valor_informado_w='N' THEN  null  ELSE cd_medicamento END ,
		ie_trat_conta_rn    	= ie_trat_conta_rn_ww,
		ie_opme			= ie_opme_w,
		cd_simpro		= cd_simpro_w,
		ie_status_item_tabela	=  ie_status_w,
		nr_seq_bras_preco	= nr_seq_bras_preco_w,
		nr_seq_mat_bras		= nr_seq_mat_bras_w,
		nr_seq_conv_bras	= nr_seq_conv_bras_w,
		cd_material_tuss	= CASE WHEN cd_material_tuss_w=0 THEN null  ELSE cd_material_tuss_w END ,
		nr_seq_tuss_mat_item	= CASE WHEN nr_seq_tuss_mat_item_w=0 THEN null  ELSE nr_seq_tuss_mat_item_w END ,
		ds_material_tuss	= CASE WHEN ds_material_tuss_w = NULL THEN  null  ELSE ds_material_tuss_w END ,
		nr_seq_conv_simp	= nr_seq_conv_simpro_w,
		nr_seq_mat_simp		= nr_seq_mat_simpro_w,
		nr_seq_simp_preco	= nr_seq_simpro_preco_w,
		ie_valor_autorizado	= ie_valor_autorizado_w,
		tx_material			= tx_material_ww,
		ds_observacao		= CASE WHEN ie_identifica_conta_mat_w='N' THEN  ds_observacao  ELSE CASE WHEN nr_sequencia_regra_w=0 THEN  ds_observacao  ELSE substr(ds_observacao || ' ' || OBTER_DESC_EXPRESSAO(331942) || ': ' || nr_sequencia_regra_w,1,255) END  END ,
		cd_sequencia_parametro = cd_sequencia_parametro_w
     where  	nr_sequencia        	= nr_sequencia_p
     and	ie_altera_auditoria_w	= 'S';
end;

/* francisco - os 73310 - 28/11/07 - gerar autorizacao */

if (ie_autor_particular_w = 'S') then
	select	coalesce(max(ie_tipo_convenio),0)
	into STRICT	ie_tipo_convenio_aux_w
	from	convenio
	where	cd_convenio	= cd_convenio_w;

	if (ie_tipo_convenio_aux_w = 1) then

		nr_seq_autor_gerada_w := gerar_autor_particular(nr_atendimento_w, nr_sequencia_p, null, nm_usuario_p, nr_seq_autor_gerada_w);
	end if;
end if;

/* 
Comentado por lhalves na OS 622819 em 20/03/2014.
Esta rotina foi incluida no inicio desta procedure, pois o sistema deve definir a guia do item antes de obter a conta.
Alteracao devida a opcao de Separa_conta
francisco - os 79510 - 06/02/2008 
if	(ie_doc_autorizacao_w = 'C') or
	((ie_doc_autorizacao_w = 'S') and
	 (nr_prescricao_w is not null) and
	 (nr_sequencia_prescricao_w is not null)) then

	obter_autor_item_conta(null,nr_sequencia_p,nr_sequencia_autor_w,
		nr_seq_proc_autor_w,nr_seq_mat_autor_w,nr_doc_conv_autor_w,cd_senha_autor_w,ie_autorizado_w);

	if	(nr_sequencia_autor_w is not null) and
		(nr_seq_mat_autor_w is not null) then

		if	(nr_seq_mat_autor_ww is null)then
		
			update	material_atend_paciente
			set	nr_seq_mat_autor	= nr_seq_mat_autor_w
			where	nr_sequencia		= nr_sequencia_p;
		else
			select	max(a.cd_autorizacao),
				max(a.cd_senha)
			into	nr_doc_conv_autor_w,
				cd_senha_autor_w
			from	autorizacao_convenio a,
				material_autorizado b,
				estagio_autorizacao c
			where	a.nr_sequencia = b.nr_sequencia_autor
			and	b.nr_sequencia = nr_seq_mat_autor_ww
			and	c.nr_sequencia = a.nr_seq_estagio
			and	c.ie_interno   = 10;
		end if;

		--se tiver autorizacao e ainda nao estiver autorizada deve deixar guia e senha aguardando retorno

		nr_doc_convenio_w	:= null;
		cd_senha_w		:= null;

		--se ja foi autorizado, ja insere com guia e senha da autorizacao

		if	(ie_autorizado_w	= 'S') then
			nr_doc_convenio_w	:= nr_doc_conv_autor_w;
			cd_senha_w		:= cd_senha_autor_w;
		end if;
	end if;

	--feito dessa forma para caso o material nem tenha autorizacao, continuar como antes


	update	material_atend_paciente
	set	nr_doc_convenio		= nr_doc_convenio_w,
		cd_senha		= cd_senha_w
	where	nr_sequencia		= nr_sequencia_p;
end if;*/


/* elemar - 02/02/04 - tirei o commit porque dava erro na trigger
if (nvl(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
*/
RAISE NOTICE '%', ie_glosa_w;
if (ie_glosa_w = 'V') and (ie_valor_informado_w = 'N') then
	CALL atualizar_glosa_valor_mat(nr_sequencia_p, nm_usuario_p);
end if;

/* gerar glosa por percentual */

if (ie_glosa_w 		= 'P') 	and (cd_situacao_glosa_w	= 8) 	and (pr_glosa_w		> 0)	and (pr_glosa_w		< 100)	and (ie_valor_informado_w 	= 'N') then
	CALL glosa_mat_percentual(nr_sequencia_p, pr_glosa_w, cd_convenio_glosa_ww, cd_categoria_glosa_ww);
end if;

/* gerar glosa por valor */

if (ie_valor_informado_w		= 'N')	and (vl_glosa_w 			<> 0) then
	CALL glosa_mat_valor(nr_sequencia_p, vl_glosa_w);
end if;

/* ricardo 13/12/2004 - incluida a rotina abaixo para tratar o setor do paciente nos materiais */

CALL atualizar_setor_pac_procmat(nr_sequencia_p, 'M');


<<final>>

/* incluido o select abaixo para ter algo apos o goto (precisa ter alguma linha de programa apos ele) */

select	count(*)
into STRICT	qt_mat_w
from	material_atend_paciente
where	nr_sequencia	= nr_sequencia_p;

if (ie_valor_informado_w 	= 'N') and (ie_calculo_taxa_regra_w	= 'L') then
	--calcular_taxa_esp_conta(nr_interno_conta_w, nr_sequencia_p, 2, nm_usuario_p);
	CALL calcular_regra_preco_taxa(nr_interno_conta_w, nr_sequencia_p, 2, nm_usuario_p);
end if;

if (coalesce(ie_codigo_convenio_w::text, '') = '') then
	select	coalesce(max(ie_codigo_convenio), 'X')
	into STRICT	ie_codigo_convenio_w
	from	convenio
	where	cd_convenio	= cd_convenio_w;
end if;

if (ie_codigo_convenio_w	= 'I') and (coalesce(obter_se_atualiza_cod_conv(cd_convenio_w,ie_auditoria_w,cd_estabelecimento_w),'S') = 'S') then
	CALL atualiza_cod_conv_mat_proc(nr_sequencia_p, 2);
end if;

CALL tiss_atualizar_material(nr_sequencia_p, 'N', nm_usuario_p);

-- edgar 04/10/2007
CALL tiss_atualiza_conta_mat(nr_sequencia_p, nm_usuario_p);

if (ie_glosa_w = 'K') then	-- mover o material para a pasta "pendente"  os 91960  fabricio em 14/10/2008.
	update	material_atend_paciente
	set	nr_interno_conta  = NULL
	where 	nr_sequencia 	 = nr_sequencia_p
	and 	coalesce(cd_motivo_exc_conta::text, '') = ''
	and (qt_material <> 0 or vl_material <> 0);
end if;

vl_custo_mat_repasse_w := obter_custo_material_repasse(cd_estabelecimento_w, cd_material_w, vl_custo_mat_repasse_w);
if (coalesce(vl_custo_mat_repasse_w,0) > 0) then
	update	material_atend_paciente
	set	vl_custo_mat_repasse	= vl_custo_mat_repasse_w
	where 	nr_sequencia 	 	= nr_sequencia_p;
end if;

if (coalesce(ie_arred_multiplicado_w,'N') in ('S','D')) and -- OS 202736 HSC
	(qt_desconto_item_w = 0) and (ie_regra_pacote_w = 'N') then
	-- Rotina arredondamento (Compensacao das casas decimais)
	CALL gerar_arredondamento(nr_interno_conta_w, nr_sequencia_p, nm_usuario_p);
end if;

begin
	select	substr(value,1,64)
	into STRICT	ds_nls_territory_w
	from	v$nls_parameters
	where	parameter = 'NLS_TERRITORY';
exception
when others then
	ds_nls_territory_w:=null;	
end;

if	((2 = philips_param_pck.get_cd_pais) or (upper(ds_nls_territory_w) = 'MEXICO') or (15 = philips_param_pck.get_cd_pais) or (upper(ds_nls_territory_w) = 'BOLIVIA')) and -- 2 = Mexico and 15 = Bolivia
	(nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') and (ie_regra_pacote_w = 'N') then
	CALL gerar_tributo_conta_pac(nr_interno_conta_w, nr_sequencia_p, 'M', nm_usuario_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_preco_material ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

