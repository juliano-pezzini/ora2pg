-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_acatar_glosa_analise ( nr_seq_w_resumo_conta_p bigint, nr_seq_fluxo_p bigint, nr_seq_mot_liberacao_p bigint, ds_parecer_p text, nr_seq_grupo_p bigint, nr_seq_analise_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_tipo_motivo_w		varchar(1);
ie_pagamento_w			varchar(1);
vl_liberado_hi_w		double precision;
vl_liberado_co_w		double precision;
vl_liberado_material_w		double precision;
vl_total_w			double precision;
vl_glosa_w			double precision;
vl_glosa_co_w			double precision;
vl_glosa_hi_w			double precision;
vl_glosa_material_w		double precision;
qt_liberada_w			double precision;
nr_seq_glosa_item_w		bigint;
nr_seq_analise_item_w		bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_conta_mat_w		bigint;
nr_seq_proc_partic_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_mat_w			bigint;
nr_seq_proc_w			bigint;
nr_seq_ordem_w			bigint;
ie_origem_analise_w		smallint;

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Inserir item de fluxo para o item em questão, inserir paracer. histórico e log para esta ação atualizar a via de acesso, informações do item e status do item e de pagamento/faturamento do item
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_conta
	where	nr_seq_analise = nr_seq_analise_p
	order by 1;
C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_conta
	where	nr_seq_analise = nr_seq_analise_p
	order by 1;


BEGIN
select	max(ie_origem_analise)
into STRICT	ie_origem_analise_w
from	pls_analise_conta
where	nr_sequencia	= nr_seq_analise_p;

select	vl_liberado_hi,
	vl_liberado_co,
	vl_liberado_material,
	vl_total,
	vl_glosa,
	vl_glosa_co,
	vl_glosa_hi,
	vl_glosa_material,
	qt_liberada,
	nr_seq_glosa_item,
	ie_pagamento,
	nr_seq_conta_proc,
	nr_seq_conta_mat,
	nr_seq_proc_partic
into STRICT	vl_liberado_hi_w,
	vl_liberado_co_w,
	vl_liberado_material_w,
	vl_total_w,
	vl_glosa_w,
	vl_glosa_co_w,
	vl_glosa_hi_w,
	vl_glosa_material_w,
	qt_liberada_w,
	nr_seq_glosa_item_w,
	ie_pagamento_w,
	nr_seq_conta_proc_w,
	nr_seq_conta_mat_w,
	nr_seq_proc_partic_w
from	pls_analise_fluxo_item
where	nr_sequencia	= nr_seq_fluxo_p;

select	max(a.nr_seq_ordem)
into STRICT	nr_seq_ordem_w
from	pls_tempo_conta_grupo b,
	pls_auditoria_conta_grupo a
where	a.nr_sequencia 		= b.nr_seq_auditoria
and	a.nr_seq_analise	= nr_seq_analise_p
and	a.nr_seq_grupo		= nr_seq_grupo_p
and	coalesce(a.dt_liberacao::text, '') = ''
and	(b.dt_inicio_analise IS NOT NULL AND b.dt_inicio_analise::text <> '')
and	coalesce(b.dt_final_analise::text, '') = '';

insert into pls_analise_fluxo_item(nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	nm_usuario_nrec,
	dt_atualizacao_nrec,
	vl_liberado_hi,
	vl_liberado_co,
	vl_liberado_material,
	vl_total,
	vl_glosa,
	vl_glosa_co,
	vl_glosa_hi,
	vl_glosa_material,
	qt_liberada,
	ie_pagamento,
	ie_liberacao_especial,
	nr_seq_analise,
	nr_seq_glosa_item,
	nr_seq_conta_proc,
	nr_seq_conta_mat,
	nr_seq_proc_partic,
	nr_seq_grupo,
	nr_seq_ordem)
values (nextval('pls_analise_fluxo_item_seq'),
	clock_timestamp(),
	nm_usuario_p,
	nm_usuario_p,
	clock_timestamp(),
	vl_liberado_hi_w,
	vl_liberado_co_w,
	vl_liberado_material_w,
	vl_total_w,
	vl_glosa_w,
	vl_glosa_co_w,
	vl_glosa_hi_w,
	vl_glosa_material_w,
	qt_liberada_w,
	ie_pagamento_w,
	'S',
	nr_seq_analise_p,
	nr_seq_glosa_item_w,
	nr_seq_conta_proc_w,
	nr_seq_conta_mat_w,
	nr_seq_proc_partic_w,
	nr_seq_grupo_p,
	nr_seq_ordem_w);

update	w_pls_resumo_conta
set	vl_liberado_hi		= vl_liberado_hi_w,
	vl_liberado_co		= vl_liberado_co_w,
	vl_liberado_material	= vl_liberado_material_w,
	vl_total		= vl_total_w,
	vl_glosa		= vl_glosa_w,
	vl_glosa_co		= vl_glosa_co_w,
	vl_glosa_hi		= vl_glosa_hi_w,
	vl_glosa_material	= vl_glosa_material_w,
	qt_liberado		= qt_liberada_w,
	ie_pagamento		= ie_pagamento_w,
	ie_fluxo_com_glosa	= 'L'
where	nr_sequencia		= nr_seq_w_resumo_conta_p;

select	CASE WHEN ie_tipo_motivo='S' THEN 'A' WHEN ie_tipo_motivo='N' THEN 'N' END
into STRICT	ie_tipo_motivo_w
from	pls_mot_lib_analise_conta
where	nr_sequencia = nr_seq_mot_liberacao_p;

if (ie_tipo_motivo_w = 'N') and (vl_total_w > 0) then
	ie_tipo_motivo_w := 'L';
end if;

update	pls_analise_conta_item
set	ie_status 		= ie_tipo_motivo_w,
	nm_usuario		= nm_usuario_p,
	dt_atualizacao 		= clock_timestamp(),
	ie_consistencia 	= 'N',
	ie_situacao		= CASE WHEN ie_tipo_motivo_w='N' THEN  'A' WHEN ie_tipo_motivo_w='L' THEN  'I' WHEN ie_tipo_motivo_w='A' THEN  'I' END
where	nr_sequencia		= nr_seq_glosa_item_w
and	nr_seq_analise		= nr_seq_analise_p
and	ie_status		<> 'I';

insert into pls_analise_parecer_item(nr_sequencia,
	nr_seq_item,
	nr_seq_motivo,
	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	ds_parecer,
	ie_tipo_motivo)
values (nextval('pls_analise_parecer_item_seq'),
	nr_seq_glosa_item_w,
	nr_seq_mot_liberacao_p,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	ds_parecer_p,
	ie_tipo_motivo_w);

select	nr_seq_conta,
	nr_seq_conta_mat,
	nr_seq_conta_proc,
	nr_seq_partic_proc
into STRICT	nr_seq_conta_w,
	nr_seq_mat_w,
	nr_seq_proc_w,
	nr_seq_proc_partic_w
from	w_pls_resumo_conta
where	nr_sequencia	= nr_seq_w_resumo_conta_p;

if (nr_seq_proc_w IS NOT NULL AND nr_seq_proc_w::text <> '') and (qt_liberada_w = 0) then
	update	pls_conta_proc
	set	ie_glosa	= 'S',
		tx_item		= 100
	where	nr_sequencia	= nr_seq_proc_w;
end if;
CALL pls_consiste_procedimento(nr_seq_conta_w,'CC', nm_usuario_p, cd_estabelecimento_p);
CALL pls_atualizar_via_acesso_conta(nr_seq_conta_w, nm_usuario_p);

open C01;
loop
fetch C01 into
	nr_seq_conta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	update  pls_conta_proc
	set     tx_medico                        = NULL,
		tx_custo_operacional             = NULL,
		tx_material                      = NULL,
		nr_seq_regra_qtde_exec           = NULL,
		ie_regra_qtde_execucao           = NULL
	where   nr_seq_conta                    = nr_seq_conta_w;
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	nr_seq_conta_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	CALL pls_analise_status_pgto(nr_seq_conta_w, null, null, nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p,null, 'S', null, null);

	CALL pls_recalcular_conta(nr_seq_conta_w, nm_usuario_p,'C','S','N',null,null);

	if (ie_origem_analise_w = 3) then
		CALL pls_atual_w_resumo_conta_ptu(nr_seq_conta_w, null, null, null, nr_seq_analise_p, nm_usuario_p);
	else
		CALL pls_atualiza_w_resumo_conta(nr_seq_conta_w, null, null, null, nr_seq_analise_p, nm_usuario_p);
	end if;

	/*Necessário rodar a status pegto antes e depois pois a mesma ajusta o valor liberado, é necessário para aplicar o  percentual correto sobre os itens após a glosa do mesmo Diogo*/

	CALL pls_analise_status_pgto(nr_seq_conta_w, null, null, nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p, null, 'S', null, null);

	update	pls_conta_proc
	set	ie_status	= 'A'
	where	nr_seq_conta	= nr_seq_conta_w
	and	ie_status 	<> 'D';

	update	pls_conta_mat
	set	ie_status	= 'A'
	where	nr_seq_conta	= nr_seq_conta_w;

	end;
end loop;
close C02;

if (nr_seq_proc_w IS NOT NULL AND nr_seq_proc_w::text <> '') and (qt_liberada_w = 0) then
	update	pls_conta_proc
	set	ie_status	= 'A'
	where	nr_sequencia	= nr_seq_proc_w
	and	ie_status	<> 'D';
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_acatar_glosa_analise ( nr_seq_w_resumo_conta_p bigint, nr_seq_fluxo_p bigint, nr_seq_mot_liberacao_p bigint, ds_parecer_p text, nr_seq_grupo_p bigint, nr_seq_analise_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

