-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_85 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Validar os valores dos procedimento e materiais
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
*/
ds_select_proc_w	varchar(2000);
ds_select_mat_w		varchar(2000);
ds_restricao_proc_w	varchar(1000);
ds_restricao_mat_w	varchar(1000);
ds_select_w		varchar(4000);
cursor_w		sql_pck.t_cursor;
dados_tb_selecao_w	pls_tipos_ocor_pck.dados_table_selecao_ocor;
valor_bind_w		sql_pck.t_dado_bind;

-- Informações da regra de validação
C01 CURSOR(	nr_seq_oc_cta_comb_p	dados_regra_p.nr_sequencia%type) FOR
	SELECT	a.ie_qt_apresentada,
		a.ie_vl_apresentada,
		a.ie_vl_unitario_apresentado,
		a.ie_vl_total_apresentado,
		coalesce(a.vl_tolerancia,0) vl_tolerancia
	from	pls_oc_cta_val_apres a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;

BEGIN
-- Deve existir informação da regra para executar a validação
if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '') then

	CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);

	-- Buscar a parametrização da validação conforme cadastrado pelos usuários.
	for	r_C01_w in C01(dados_regra_p.nr_sequencia) loop

		ds_select_proc_w :=	'select	sel.nr_sequencia nr_seq_selecao,' || pls_util_pck.enter_w ||
					'	sel.ds_observacao,' || pls_util_pck.enter_w ||
					'	''S'' ie_valido' || pls_util_pck.enter_w ||
					'from	pls_selecao_ocor_cta sel,  ' || pls_util_pck.enter_w ||
					'	pls_conta_proc proc' || pls_util_pck.enter_w ||
					'where	sel.nr_id_transacao = :nr_id_transacao' || pls_util_pck.enter_w ||
					'and	sel.ie_valido = ''S''' || pls_util_pck.enter_w ||
					'and	proc.nr_sequencia = sel.nr_seq_conta_proc';

		valor_bind_w := sql_pck.bind_variable(	':nr_id_transacao', nr_id_transacao_p, valor_bind_w);

		if (r_C01_w.ie_qt_apresentada = 'S') then
			ds_restricao_proc_w :=	ds_restricao_proc_w || pls_util_pck.enter_w ||
						' and proc.qt_procedimento_imp < 0';
		elsif (r_C01_w.ie_vl_apresentada  = 'S') then
			ds_restricao_proc_w :=	ds_restricao_proc_w || pls_util_pck.enter_w ||
						' and proc.vl_procedimento_imp < 0';
		elsif (r_C01_w.ie_vl_unitario_apresentado  = 'S') then
			ds_restricao_proc_w :=	ds_restricao_proc_w || pls_util_pck.enter_w ||
						' and proc.vl_unitario_imp < 0';
		elsif (r_C01_w.ie_vl_total_apresentado = 'S') then
			ds_restricao_proc_w := ds_restricao_proc_w || pls_util_pck.enter_w ||
						' and pls_valida_valor_total(proc.vl_unitario_imp, proc.vl_procedimento_imp, proc.qt_procedimento_imp, :vl_tolerancia) = ''N'' ';
			valor_bind_w := sql_pck.bind_variable(	':vl_tolerancia', r_c01_w.vl_tolerancia, valor_bind_w);
		end if;

		ds_select_mat_w :=	'union all' || pls_util_pck.enter_w ||
					'select	sel.nr_sequencia nr_seq_selecao,' || pls_util_pck.enter_w ||
					'	sel.ds_observacao,' || pls_util_pck.enter_w ||
					'	''S'' ie_valido' || pls_util_pck.enter_w ||
					'from	pls_selecao_ocor_cta sel,  ' || pls_util_pck.enter_w ||
					'	pls_conta_mat mat' || pls_util_pck.enter_w ||
					'where	sel.nr_id_transacao = :nr_id_transacao' || pls_util_pck.enter_w ||
					'and	sel.ie_valido = ''S''' || pls_util_pck.enter_w ||
					'and	mat.nr_sequencia = sel.nr_seq_conta_mat';

		if (r_C01_w.ie_qt_apresentada = 'S') then
			ds_restricao_mat_w := ds_restricao_mat_w || pls_util_pck.enter_w ||
						' and mat.qt_material_imp < 0 ';
		elsif (r_C01_w.ie_vl_apresentada = 'S') then
			ds_restricao_mat_w := ds_restricao_mat_w || pls_util_pck.enter_w ||
						' and mat.vl_material_imp < 0 ';
		elsif (r_C01_w.ie_vl_unitario_apresentado = 'S') then
			ds_restricao_mat_w := ds_restricao_mat_w || pls_util_pck.enter_w ||
						' and mat.vl_unitario_imp < 0 ';
		elsif (r_C01_w.ie_vl_total_apresentado = 'S') then
			ds_restricao_mat_w := ds_restricao_mat_w || pls_util_pck.enter_w ||
						' and pls_valida_valor_total(mat.vl_unitario_imp, vl_material_imp, qt_material_imp, :vl_tolerancia) = ''N'' ';
		end if;

		ds_select_w := ds_select_proc_w || ds_restricao_proc_w || ds_select_mat_w || ds_restricao_mat_w;
		valor_bind_w := sql_pck.executa_sql_cursor(	ds_select_w, valor_bind_w);
		loop
			fetch cursor_w bulk collect into 	dados_tb_selecao_w.nr_seq_selecao, dados_tb_selecao_w.ds_observacao,
								dados_tb_selecao_w.ie_valido
			limit pls_util_pck.qt_registro_transacao_w;
			exit when dados_tb_selecao_w.nr_seq_selecao.count = 0;

			CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, dados_tb_selecao_w.ds_seqs_selecao,
									'SEQ', dados_tb_selecao_w.ds_observacao,
									dados_tb_selecao_w.ie_valido, nm_usuario_p);
		end loop;
		close cursor_w;

		-- seta os registros que serão válidos ou inválidos após o processamento
		CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);

	end loop;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_85 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

