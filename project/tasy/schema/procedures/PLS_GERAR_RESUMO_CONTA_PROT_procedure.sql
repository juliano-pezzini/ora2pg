-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_resumo_conta_prot ( nr_seq_protocolo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ie_lib_protocolo_p pls_parametros.ie_lib_protocolo%type default 'N') AS $body$
DECLARE


vl_titulo_w			double precision;
nr_seq_prestador_w		bigint;
nr_seq_prot_conta_w		bigint;
ie_tipo_guia_w			varchar(2);
nr_seq_prestador_prot_w		bigint;
dt_vencimento_w			timestamp;
ie_forma_pagto_w		varchar(5);
cd_banco_w			varchar(20);
cd_agencia_w			varchar(20);
nr_conta_w 			varchar(50);
vl_cobrado_w			double precision;
vl_total_liberado_w		double precision;
vl_glosa_w			double precision;
cd_cgc_w			varchar(14);
cd_pessoa_fisica_w		varchar(10);
cont_contas_w			bigint;
dt_mes_competencia_w		timestamp;
--ie_mes_fechado_w		varchar2(5);
ie_liberar_protocolo_w		varchar(1);
nr_seq_lote_recalculo_w		bigint;
qt_analise_aberta_w		bigint;
qt_aux_w			bigint;
nr_seq_analise_w		bigint;
ie_analise_aud_w		varchar(2);
nr_seq_conta_w			bigint;
nr_seq_prestador_pag_w		pls_protocolo_conta.nr_seq_prestador%type;

c01 CURSOR FOR
	SELECT	sum(a.vl_total),
		coalesce(a.nr_seq_prestador_exec,b.nr_seq_prestador)
	from	pls_conta a,
		pls_protocolo_conta b
	where	b.nr_sequencia	= a.nr_seq_protocolo
	and	a.nr_seq_protocolo = nr_seq_protocolo_p
	group by	coalesce(a.nr_seq_prestador_exec,b.nr_seq_prestador);

C02 CURSOR FOR
	SELECT	nr_seq_analise,
		nr_sequencia
	from	pls_conta
	where	nr_seq_protocolo = nr_seq_protocolo_p
	order by 1;

BEGIN

if (nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '') then
	select	count(1)
	into STRICT	cont_contas_w
	from	pls_conta
	where	nr_seq_protocolo	= nr_seq_protocolo_p
	and	ie_status not in ('C','F');

	if (cont_contas_w > 0) then
		--Existem contas que ainda não foram fechadas. Verifique!#@#@');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(210208);
	end if;

	open C02;
	loop
	fetch C02 into
		nr_seq_analise_w,
		nr_seq_conta_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		ie_analise_aud_w := 'N';
		if (nr_seq_analise_w IS NOT NULL AND nr_seq_analise_w::text <> '') then
			ie_analise_aud_w	:= pls_obter_conta_item_auditoria(nr_seq_conta_w);
			if (ie_analise_aud_w = 'S') then
				select	count(1)
				into STRICT	qt_analise_aberta_w
				from	pls_analise_conta
				where	nr_sequencia = nr_seq_analise_w
				and	ie_status not in ('T','C','L');

				if (qt_analise_aberta_w > 0) then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(210206,'NR_SEQ_CONTA=' ||NR_SEQ_CONTA_w);
				end if;
			end if;
		end if;
		end;
	end loop;
	close C02;

	select	ie_tipo_guia,
		nr_seq_prestador,
		coalesce(pls_obter_valor_protocolo(nr_sequencia,'C'),0),
		coalesce(pls_obter_valor_protocolo(nr_sequencia,'T'),0),
		coalesce(pls_obter_valor_protocolo(nr_sequencia,'G'),0),
		dt_base_venc,
		dt_mes_competencia
		--substr(pls_obter_se_mes_fechado(dt_mes_competencia,'T', cd_estabelecimento_p),1,5)
	into STRICT	ie_tipo_guia_w,
		nr_seq_prestador_prot_w,
		vl_cobrado_w,
		vl_total_liberado_w,
		vl_glosa_w,
		dt_vencimento_w,
		dt_mes_competencia_w
		--ie_mes_fechado_w
	from	pls_protocolo_conta
	where	nr_sequencia = nr_seq_protocolo_p;

	/*if	(ie_mes_fechado_w	= 'S') then			OS 787434 - a liberação para pagamento não altera a contabilização pois a provisão ocorre na data de recebimento.
		--O mês de competência ou contabilidade do mês está fechado. Verifique!#@#@');
		wheb_mensagem_pck.exibir_mensagem_abort(210209);
	end if; */
	delete	from pls_prot_conta_titulo
	where	nr_seq_protocolo = nr_seq_protocolo_p;

	select	coalesce(max(a.ie_forma_pagto),'0'),
		max(c.nr_seq_prestador) nr_seq_prestador
	into STRICT	ie_forma_pagto_w,
		nr_seq_prestador_pag_w
	from	pls_prestador_pagto a,
		pls_prestador b,
		pls_protocolo_conta c
	where	a.nr_seq_prestador	= b.nr_sequencia
	and	b.nr_sequencia		= c.nr_seq_prestador
	and	c.nr_sequencia		= nr_seq_protocolo_p;

	if (ie_forma_pagto_w = '0' and (nr_seq_prestador_pag_w IS NOT NULL AND nr_seq_prestador_pag_w::text <> ''))	then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(210210,'NR_SEQ_PRESTADOR_PROT='||NR_SEQ_PRESTADOR_PROT_w);
		/*'Forma de pagamento do prestador (' || NR_SEQ_PRESTADOR_PROT_w ||
		') não informado. Verifique na função OPS - Prestadores / Dados Complementares / Dados para pagamento!#@#@');*/
	end if;

	select	max(a.cd_cgc),
		max(a.cd_pessoa_fisica)
	into STRICT	cd_cgc_w,
		cd_pessoa_fisica_w
	from	pls_prestador a,
		pls_protocolo_conta b
	where	a.nr_sequencia		= b.nr_seq_prestador
	and	b.nr_sequencia		= nr_seq_protocolo_p;

	if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '')	then
		select	max(a.cd_banco),
			max(a.cd_agencia_bancaria),
			max(a.nr_conta)
		into STRICT	cd_banco_w,
			cd_agencia_w,
			nr_conta_w
		from	pessoa_juridica_conta a,
			pls_prestador c,
			pls_protocolo_conta d
		where	a.cd_cgc		= c.cd_cgc
		and	c.nr_sequencia		= d.nr_seq_prestador
		and	a.ie_prestador_pls	= 'S'
		and	a.cd_cgc		= cd_cgc_w;
	elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '')	then
		select	max(a.cd_banco),
 			max(a.cd_agencia_bancaria),
 			max(a.nr_conta)
		into STRICT	cd_banco_w,
			cd_agencia_w,
			nr_conta_w
		from	pessoa_fisica_conta a,
			pls_prestador c,
			pls_protocolo_conta d
		where	a.cd_pessoa_fisica		= c.cd_pessoa_fisica
		and	c.nr_sequencia			= d.nr_seq_prestador
		and	a.cd_pessoa_fisica		= cd_pessoa_fisica_w;
	end if;

	open c01;
	loop
	fetch c01 into
		vl_titulo_w,
		nr_seq_prestador_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		if (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') then
			begin
			select	nextval('pls_prot_conta_titulo_seq')
			into STRICT	nr_seq_prot_conta_w
			;

			insert	into pls_prot_conta_titulo(nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_protocolo,
				vl_titulo, nr_seq_prestador, dt_pagamento,
				ie_forma_pagto, cd_banco, cd_agencia,
				nr_conta, vl_cobrado, vl_total_liberado,
				vl_glosa)
			values (nr_seq_prot_conta_w, clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p, nr_seq_protocolo_p,
				vl_titulo_w, nr_seq_prestador_w, dt_vencimento_w,
				ie_forma_pagto_w, cd_banco_w, cd_agencia_w,
				nr_conta_w, vl_cobrado_w, vl_total_liberado_w,
				vl_glosa_w);

			update	pls_conta
			set	nr_seq_prot_conta	= nr_seq_prot_conta_w
			where	nr_seq_protocolo	= nr_seq_protocolo_p
			and	nr_seq_prestador_exec	= nr_seq_prestador_w;
			end;
		end if;
	end loop;
	close c01;

	ie_liberar_protocolo_w	:= obter_valor_param_usuario(1208,37,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p);

	-- A liberação poderá ocorrer de duas formas, ou pelo parâmetro [37] da OPS - Gestão de Contas Médicas
	-- ou através do parâmetro "ie_lib_protocolo" da "pls_parametros"
	if (ie_liberar_protocolo_w = 'S') or (ie_lib_protocolo_p = 'S') then
		CALL pls_altera_status_protocolo(nr_seq_protocolo_p,'P','S',cd_estabelecimento_p,nm_usuario_p);
	end if;
	-- Gerado demonstrativo do protocolo
	CALL pls_inclui_prot_conta_hist(nr_seq_protocolo_p, wheb_mensagem_pck.get_texto(315919), nm_usuario_p, '16');

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_resumo_conta_prot ( nr_seq_protocolo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ie_lib_protocolo_p pls_parametros.ie_lib_protocolo%type default 'N') FROM PUBLIC;

