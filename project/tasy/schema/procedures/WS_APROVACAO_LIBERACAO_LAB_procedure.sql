-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ws_aprovacao_liberacao_lab ( nr_prescricao_p prescr_medica.nr_prescricao%type, nr_seq_prescr_p prescr_procedimento.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, ie_estruturado text, ds_erro_p INOUT text) AS $body$
DECLARE


ie_exige_formato_w          lab_parametro.ie_exige_formato%type;
ie_aprova_resultado_integ_w lab_parametro.ie_aprova_resultado_integ%type;
nm_usuario_aprov_w          lab_parametro.nm_usuario_aprov%type;
cd_estabelecimento_w        prescr_medica.cd_estabelecimento%type;
ie_status_atend_w           prescr_procedimento.ie_status_atend%type := 0;
nr_seq_resultado_w          exame_lab_resultado.nr_seq_resultado%type;
nm_usuario_w                usuario.nm_usuario%type;
ie_existe_usuario_w         smallint;
ds_erro_w                   varchar(255) := null;


BEGIN

begin
    begin
        select  a.ie_exige_formato,
                a.ie_aprova_resultado_integ,
                a.nm_usuario_aprov,
                b.cd_estabelecimento
        into STRICT    ie_exige_formato_w,
                ie_aprova_resultado_integ_w,
                nm_usuario_aprov_w,
                cd_estabelecimento_w
        from    lab_parametro a, prescr_medica b
        where   a.cd_estabelecimento = b.cd_estabelecimento
        and     b.nr_prescricao = nr_prescricao_p;
    exception
        when no_data_found or too_many_rows then
            ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(279713,null) || substr(sqlerrm,1,240);
    end;

    if ie_exige_formato_w = 'S' then
        select  count(*)
        into STRICT    ie_existe_usuario_w
        from    usuario x
        where   upper(nm_usuario) = upper(nm_usuario_p);

        if ie_existe_usuario_w > 0 then
            nm_usuario_w := nm_usuario_p;
        else
            select  count(*)
            into STRICT    ie_existe_usuario_w
            from    usuario x
            where   upper(nm_usuario) = upper(nm_usuario_aprov_w);

            if ie_existe_usuario_w > 0 then
                nm_usuario_w := nm_usuario_aprov_w;
            else
                select  obter_desc_expressao(1083659) || nm_usuario_p || ' - ' || nm_usuario_aprov_w
                into STRICT    ds_erro_w
;
            end if;
        end if;

        if coalesce(ds_erro_w::text, '') = '' then
            case ie_aprova_resultado_integ_w
                when 'S' then
                    ie_status_atend_w := 35;
                when 'L' then
                    ie_status_atend_w := 40;
            end case;

            if ie_status_atend_w >=35 then
                update  prescr_procedimento
                set     ie_status_atend = ie_status_atend_w,
                        nm_usuario = nm_usuario_w,
                        dt_atualizacao = clock_timestamp()
                where   nr_prescricao = nr_prescricao_p
                and     nr_sequencia = nr_seq_prescr_p
                and     ie_status_atend < ie_status_atend_w;

                if ie_estruturado = 'S' then
                    select	coalesce(max(nr_seq_resultado),0)
                    into STRICT	nr_seq_resultado_w
                    from	exame_lab_resultado
                    where	nr_prescricao = nr_prescricao_p;

                    case ie_status_atend_w
                        when 35 then
                            update  exame_lab_result_item
                            set     dt_aprovacao = clock_timestamp(),
                                    nm_usuario_aprovacao = nm_usuario_w,
                                    dt_atualizacao = clock_timestamp()
                            where   nr_seq_resultado = nr_seq_resultado_w
                            and     nr_seq_prescr = nr_seq_prescr_p
                            and     coalesce(dt_aprovacao::text, '') = '';
                        when 40 then
                            update  exame_lab_result_item
                            set     dt_liberacao = clock_timestamp(),
                                    nm_usuario_liberacao = nm_usuario_w,
                                    dt_atualizacao = clock_timestamp()
                            where   nr_seq_resultado = nr_seq_resultado_w
                            and     nr_seq_prescr = nr_seq_prescr_p
                            and     coalesce(dt_liberacao::text, '') = '';
                    end case;
                end if;
            end if;
        end if;
    end if;
exception
    when no_data_found or too_many_rows then
        ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(279713,null) || substr(sqlerrm,1,240);
    when others then
        ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(279713,null) || substr(sqlerrm,1,240);
end;

COMMIT;

ds_erro_p := ds_erro_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ws_aprovacao_liberacao_lab ( nr_prescricao_p prescr_medica.nr_prescricao%type, nr_seq_prescr_p prescr_procedimento.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, ie_estruturado text, ds_erro_p INOUT text) FROM PUBLIC;

