-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_cot_comp_web ( cd_cgc_fornec_p text, nr_cot_compra_p bigint) AS $body$
DECLARE


cd_material_cot_w		bigint;
qt_material_w		double precision;
vl_unit_mat_cot_w		double precision;
vl_preco_liquido_w		double precision;
qt_material_autor_w		bigint;
qt_cgc_w			bigint;
vl_unit_cotado_w		double precision;
nr_seq_cot_w		bigint;
nr_seq_autor_w		bigint;
nr_seq_autor_cir_w		bigint;
nr_seq_autor_cir_cot_w	bigint;
cd_estabelecimento_w	bigint;
nr_item_cot_compra_w	cot_compra_item.nr_item_cot_compra%type;
ds_marca_w		cot_compra_forn_item.ds_marca%type;
nr_seq_marca_w		marca.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	b.cd_material,
		b.qt_material,
		b.vl_unitario_material,
		b.vl_preco_liquido,
		b.nr_item_cot_compra,
		coalesce(ds_marca_fornec, ds_marca)
	from	cot_compra_forn a,
		cot_compra_forn_item b
	where	a.nr_sequencia = b.nr_seq_cot_forn
	and	a.nr_cot_compra = nr_cot_compra_p
	and	a.cd_cgc_fornecedor = cd_cgc_fornec_p;


BEGIN

CALL calcular_cot_compra_liquida(nr_cot_compra_p,cd_cgc_fornec_p);

select	coalesce(max(nr_seq_autor_cir),0),
	coalesce(max(cd_estabelecimento),0)
into STRICT	nr_seq_autor_cir_w,
	cd_estabelecimento_w
from	cot_compra
where	nr_cot_compra = nr_cot_compra_p;

if (nr_seq_autor_cir_w > 0) then
	begin
	open C01;
	loop
	fetch C01 into
		cd_material_cot_w,
		qt_material_w,
		vl_unit_mat_cot_w,
		vl_preco_liquido_w,
		nr_item_cot_compra_w,
		ds_marca_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		select	count(*)
		into STRICT	qt_material_autor_w
		from	material_autor_cirurgia
		where	nr_seq_autorizacao = nr_seq_autor_cir_w
		and	cd_material = cd_material_cot_w;
		
		update	material_autor_cirurgia
		set	qt_solicitada = qt_material_w,
            nm_usuario = wheb_usuario_pck.get_nm_usuario,
            dt_atualizacao = clock_timestamp()
		where	nr_seq_autorizacao = nr_seq_autor_cir_w
		and	cd_material = cd_material_cot_w;		

		if (qt_material_autor_w > 0) then
			begin

			select	count(*)
			into STRICT	qt_cgc_w
			from	material_autor_cirurgia a,
				material_autor_cir_cot b
			where	b.nr_sequencia = a.nr_sequencia
			and	a.cd_material = cd_material_cot_w
			and	a.nr_seq_autorizacao = nr_seq_autor_cir_w
			and	b.CD_CGC = cd_cgc_fornec_p;

			if (qt_cgc_w > 0) then
				begin

				select	b.vl_unitario_cotado,
					b.nr_sequencia
				into STRICT	vl_unit_cotado_w,
					nr_seq_cot_w
				from	material_autor_cirurgia a,
					material_autor_cir_cot b
				where	b.nr_sequencia = a.nr_sequencia
				and	a.cd_material = cd_material_cot_w
				and	a.nr_seq_autorizacao = nr_seq_autor_cir_w
				and	b.CD_CGC = cd_cgc_fornec_p;

--				if	(vl_unit_mat_cot_w <> vl_unit_cotado_w) then

--					begin
					

					update	material_autor_cir_cot
					set	vl_unitario_cotado = vl_unit_mat_cot_w,
						vl_cotado = vl_preco_liquido_w,
                        nm_usuario = wheb_usuario_pck.get_nm_usuario,
                        dt_atualizacao = clock_timestamp()
					where	nr_sequencia = nr_seq_cot_w
					and	cd_cgc = cd_cgc_fornec_p;

--					end;

--				end if;
				end;

			elsif (qt_cgc_w = 0) then
				begin

				select	coalesce(max(nr_sequencia),0)
				into STRICT	nr_seq_autor_cir_cot_w
				from	material_autor_cirurgia
				where	nr_seq_autorizacao = nr_seq_autor_cir_w
				and	cd_material = cd_material_cot_w
				and	((cd_cgc_fornec = cd_cgc_fornec_p) or (coalesce(cd_cgc_fornec::text, '') = ''));

				if (nr_seq_autor_cir_cot_w > 0) then
				
					insert into material_autor_cir_cot(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						cd_cgc,
						vl_cotado,
						vl_unitario_cotado,
						ie_aprovacao)
					values (	nr_seq_autor_cir_cot_w,
						clock_timestamp(),
						wheb_usuario_pck.get_nm_usuario,
						cd_cgc_fornec_p,
						vl_preco_liquido_w,
						vl_unit_mat_cot_w,
						'N');
				end if;

				end;
			end if;

			end;
		elsif (qt_material_autor_w = 0) then
			begin

			select	nextval('material_autor_cirurgia_seq')
			into STRICT	nr_seq_autor_w
			;
			
			select	coalesce(max(nr_seq_marca_w),0)
			into STRICT	nr_seq_marca_w
			from	marca
			where	substr(upper(elimina_acentuacao(ds_marca)),1,30) = substr(upper(elimina_acentuacao(ds_marca_w)),1,30);
			
			if (nr_seq_marca_w = 0) then
				nr_seq_marca_w := null;
			end if;
			
			insert into material_autor_cirurgia(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_autorizacao,
				cd_material,
				ie_aprovacao,
				qt_material,
				qt_solicitada,
				vl_material,
				vl_unitario_material,
				nr_seq_marca,
				nr_cot_compra,
				nr_item_cot_compra)
			values (	nr_seq_autor_w,
				clock_timestamp(),
				wheb_usuario_pck.get_nm_usuario,
				nr_seq_autor_cir_w,
				cd_material_cot_w,
				'N',
				qt_material_w,
				qt_material_w,
				vl_unit_mat_cot_w,
				vl_unit_mat_cot_w,
				nr_seq_marca_w,
				nr_cot_compra_p,
				nr_item_cot_compra_w);

			insert into material_autor_cir_cot(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				cd_cgc,
				vl_cotado,
				vl_unitario_cotado,
				ie_aprovacao)
			values (	nr_seq_autor_w,
				clock_timestamp(),
				wheb_usuario_pck.get_nm_usuario,
				cd_cgc_fornec_p,
				vl_preco_liquido_w,
				vl_unit_mat_cot_w,
				'N');
			end;
		end if;

		end;
	end loop;
	close C01;
	
	CALL envia_ci_final_cot_comp(nr_cot_compra_p, cd_material_cot_w, cd_estabelecimento_w, cd_cgc_fornec_p);
	CALL envia_email_final_cot_comp(nr_cot_compra_p, cd_material_cot_w, cd_cgc_fornec_p, cd_estabelecimento_w);
	
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_cot_comp_web ( cd_cgc_fornec_p text, nr_cot_compra_p bigint) FROM PUBLIC;

