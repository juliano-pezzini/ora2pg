-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE intpd_recebe_doc_externo_oc ( nr_sequencia_p bigint, xml_p xml) AS $body$
DECLARE



ie_conversao_w			intpd_eventos_sistema.ie_conversao%type;
nr_seq_projeto_xml_w		intpd_eventos_sistema.nr_seq_projeto_xml%type;
nr_seq_sistema_w			intpd_eventos_sistema.nr_seq_sistema%type;
ie_sistema_externo_w		varchar(15);
qt_registros_w			bigint;
reg_integracao_w			gerar_int_padrao.reg_integracao_conv;
nr_seq_regra_conv_w		conversao_meio_externo.nr_seq_regra%type;
i				integer;

c01 CURSOR FOR
SELECT	*
from	xmltable('/STRUCTURE/PURCHASE' passing xml_p columns
	nr_ordem_compra				varchar(255)	path	'NR_PURCHASE_ORDER',
	nr_documento_externo			varchar(255)	path	'NR_EXTERNAL_DOCUMENT');
c01_w	c01%rowtype;


BEGIN

select	coalesce(b.ie_conversao,'I'),
	nr_seq_sistema,
	nr_seq_projeto_xml,
	nr_seq_regra_conv
into STRICT	ie_conversao_w,
	nr_seq_sistema_w,
	nr_seq_projeto_xml_w,
	nr_seq_regra_conv_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and	a.nr_sequencia = nr_sequencia_p;

ie_sistema_externo_w			:=	nr_seq_sistema_w;
reg_integracao_w.nr_seq_fila_transmissao	:=	nr_sequencia_p;
reg_integracao_w.ie_envio_recebe		:=	'R';
reg_integracao_w.ie_sistema_externo		:=	ie_sistema_externo_w;
reg_integracao_w.ie_conversao		:=	ie_conversao_w;
reg_integracao_w.nr_seq_projeto_xml		:=	nr_seq_projeto_xml_w;
reg_integracao_w.nr_seq_regra_conversao	:=	nr_seq_regra_conv_w;

open C01;
loop
fetch C01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	if (c01_w.nr_ordem_compra > 0) then

		select	count(*)
		into STRICT	qt_registros_w
		from	ordem_compra
		where	nr_ordem_compra = c01_w.nr_ordem_compra;

		if (qt_registros_w > 0) then

			update	ordem_compra
			set	nr_documento_externo = c01_w.nr_documento_externo
			where	nr_ordem_compra = c01_w.nr_ordem_compra;
		end if;
	end if;
	end;
end loop;
close C01;

if (reg_integracao_w.qt_reg_log > 0) then
	begin
	rollback;

	update intpd_fila_transmissao
	set	ie_status = 'E',
		ie_tipo_erro = 'F'
	where	nr_sequencia = nr_sequencia_p;

	for i in 0..reg_integracao_w.qt_reg_log-1 loop

		INTPD_GRAVAR_LOG_RECEBIMENTO(nr_sequencia_p,reg_integracao_w.intpd_log_receb[i].ds_log,'INTPDTASY');
	end loop;
	end;

else
	update	intpd_fila_transmissao
	set	ie_status = 'S',
		nr_seq_documento = c01_w.nr_ordem_compra,
		nr_doc_externo = c01_w.nr_documento_externo
	where	nr_sequencia = nr_sequencia_p;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intpd_recebe_doc_externo_oc ( nr_sequencia_p bigint, xml_p xml) FROM PUBLIC;

