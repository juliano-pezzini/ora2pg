-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_valida_controle_int_guia ( nr_seq_guia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Validar a regra de controle interno da huia
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionário [ x] Tasy (Delphi/Java) [ x ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 

nr_seq_controle_int_w		pls_cad_controle_interno.nr_sequencia%type;
ie_origem_proced_w		bigint;
cd_grupo_w			bigint;
cd_especialidade_w		bigint;
cd_area_w			bigint;
ie_gerar_controle_int_w		varchar(2);
ds_processo_w			varchar(255);
qt_itens_controle_int_w		integer	:= 0;
nr_seq_plano_w			bigint;
ie_tipo_processo_w			varchar(2);
ds_retorno_w      			varchar(4000);
nr_seq_motivo_cancelamento_w	pls_guia_motivo_cancel.nr_sequencia%type;
qt_registro_controle_int_w	integer;
qt_itens_guia_w				integer	:= 0;
qt_proc_nao_coberto_w		integer	:= 0;
qt_mat_nao_coberto_w		integer	:= 0;

C01 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced
	from	pls_guia_plano_proc
	where	nr_seq_guia = nr_seq_guia_p;

C02 CURSOR FOR
	SELECT	nr_seq_material
	from	pls_guia_plano_mat
	where	nr_seq_guia = nr_seq_guia_p;


BEGIN
select	nr_seq_plano,
	ie_tipo_processo
into STRICT	nr_seq_plano_w,
	ie_tipo_processo_w
from	pls_guia_plano
where	nr_sequencia	= nr_seq_guia_p;

select	coalesce(max(ie_gerar_controle_int),'N')
into STRICT	ie_gerar_controle_int_w
from	pls_param_autorizacao
where	cd_estabelecimento = cd_estabelecimento_p;

if (ie_gerar_controle_int_w = 'S') then
	if (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') then
		
		begin
			select 	nr_sequencia,
           				ds_processo
			into STRICT   	nr_seq_controle_int_w,
				ds_processo_w
			from (
				SELECT 	nr_sequencia, 
					ds_processo
				from 	pls_cad_controle_interno
				where 	((nr_seq_plano = nr_seq_plano_w and coalesce(nr_seq_grupo_produto::text, '') = '') or (pls_se_grupo_preco_produto(nr_seq_grupo_produto, nr_seq_plano_w) = 'S' and
					coalesce(nr_seq_plano::text, '') = ''))
					and  ie_situacao = 'A'
					order by nr_seq_plano asc, nr_sequencia desc
			) alias8 LIMIT 1;
		exception
		when others then
			nr_seq_controle_int_w := null;	
		end;
		
		if (nr_seq_controle_int_w IS NOT NULL AND nr_seq_controle_int_w::text <> '') then
			for r_C01_w in C01 loop
				begin
					SELECT * FROM pls_obter_estrut_proc(	r_C01_w.cd_procedimento, r_C01_w.ie_origem_proced, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w;
					
					select	count(1)
					into STRICT	qt_itens_controle_int_w
					from	pls_controle_interno_itens
					where	nr_seq_controle_int	=	nr_seq_controle_int_w
					and	coalesce(nr_seq_material::text, '') = ''
					and	((cd_procedimento	=	r_C01_w.cd_procedimento
					and	ie_origem_proced	=	r_C01_w.ie_origem_proced)
					or	cd_area_procedimento	=	cd_area_w
					or	cd_especialidade	=	cd_especialidade_w
					or	cd_grupo_proc		=	cd_grupo_w);
					
					if (qt_itens_controle_int_w	= 0) and (ie_tipo_processo_w <> 'E' AND ie_tipo_processo_w <> 'P') then
						qt_proc_nao_coberto_w := (qt_proc_nao_coberto_w + 1);

						ds_retorno_w := ds_retorno_w || r_C01_w.cd_procedimento || ' - ' || substr(obter_descricao_procedimento(r_C01_w.cd_procedimento, r_C01_w.ie_origem_proced),1,80)  || chr(13) || chr(10);
					elsif (qt_itens_controle_int_w	= 0) and (ie_tipo_processo_w = 'E') then
						CALL pls_guia_gravar_historico(nr_seq_guia_p, 3, 'O item: '||substr(obter_descricao_procedimento(r_C01_w.cd_procedimento, r_C01_w.ie_origem_proced),1,80)||
											chr(13)|| chr(10)||'Não faz parte da regra de controle interno: '||ds_processo_w||'!', null, nm_usuario_p);
					elsif (qt_itens_controle_int_w	= 0) and (ie_tipo_processo_w = 'P') then
						qt_proc_nao_coberto_w := (qt_proc_nao_coberto_w + 1);
					
						ds_retorno_w := ds_retorno_w || r_C01_w.cd_procedimento || ' - ' || substr(obter_descricao_procedimento(r_C01_w.cd_procedimento, r_C01_w.ie_origem_proced),1,80)  || chr(13) || chr(10);
					end if;
					
					qt_itens_guia_w := (qt_itens_guia_w + 1);
				
				end;
			end loop;
			
			for r_C02_w in C02 loop
				begin
					select	count(1)
					into STRICT	qt_itens_controle_int_w
					from	pls_controle_interno_itens
					where	nr_seq_controle_int	=	nr_seq_controle_int_w
					and	nr_seq_material		=	r_C02_w.nr_seq_material;
					
					if (qt_itens_controle_int_w	= 0) and (ie_tipo_processo_w <> 'P' AND ie_tipo_processo_w <> 'E') then
						qt_mat_nao_coberto_w := (qt_mat_nao_coberto_w + 1);
					
						ds_retorno_w := ds_retorno_w || r_C02_w.nr_seq_material || ' - ' || substr(pls_obter_desc_material(r_C02_w.nr_seq_material),1,80) || chr(13) || chr(10);
					elsif (qt_itens_controle_int_w	= 0) and (ie_tipo_processo_w = 'E') then
						CALL pls_guia_gravar_historico(nr_seq_guia_p, 3, 'O item: ' || substr(pls_obter_desc_material(r_C02_w.nr_seq_material),1,80) ||
											chr(13)|| chr(10)||'Não faz parte da regra de controle interno: ' || ds_processo_w ||'!', null, nm_usuario_p);
					elsif (qt_itens_controle_int_w  = 0) and (ie_tipo_processo_w = 'P') then
						qt_mat_nao_coberto_w := (qt_mat_nao_coberto_w + 1);
					
						ds_retorno_w := ds_retorno_w || r_C02_w.nr_seq_material || ' - ' || substr(pls_obter_desc_material(r_C02_w.nr_seq_material),1,80) || chr(13) || chr(10);
					end if;
					
					qt_itens_guia_w := (qt_itens_guia_w + 1);
					
				end;
			end loop;

			begin
				ds_retorno_p := ds_retorno_w;
			exception
			when others then
				ds_retorno_p := substr(ds_retorno_w, 1, 193);
			end;
			
			if (ds_retorno_p IS NOT NULL AND ds_retorno_p::text <> '') and (qt_itens_guia_w <> (qt_mat_nao_coberto_w + qt_proc_nao_coberto_w)) and (ie_tipo_processo_w <> 'E') then
				select	max(nr_sequencia)
				into STRICT	nr_seq_motivo_cancelamento_w
				from	pls_guia_motivo_cancel
				where	ie_motivo_cancel_controle = 'S';
				
				if (ie_tipo_processo_w = 'P')	then				
					ds_retorno_p := 'O(s) item(s): ' || chr(13) || chr(10) || ds_retorno_p || 'Deve(m) ser solicitado(s) em guias separadas.'|| chr(13) || chr(10) || 'Esta guia foi cancelada.';
						
					CALL pls_cancelar_autorizacao(nr_seq_guia_p, nr_seq_motivo_cancelamento_w, nm_usuario_p, 'R');
				else
					ds_retorno_p := 'O(s) item(s): ' || chr(13) || chr(10) || ds_retorno_p || 'Deve(m) ser solicitado(s) em guias separadas.';
					
					CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_retorno_p);
				end if;
			elsif (ds_retorno_p IS NOT NULL AND ds_retorno_p::text <> '') and (qt_itens_guia_w = (qt_mat_nao_coberto_w + qt_proc_nao_coberto_w)) and (ie_tipo_processo_w = 'P') then
				ds_retorno_p := '';
			end if;
			
			if (qt_itens_controle_int_w > 0) then
				
				select	count(1)
				into STRICT	qt_registro_controle_int_w
				from	pls_controle_interno_guia
				where	nr_seq_controle_interno = nr_seq_controle_int_w
				and	nr_seq_guia		= nr_seq_guia_p;
				
				if (qt_registro_controle_int_w = 0) then			
					insert into	pls_controle_interno_guia(
							nr_sequencia,
							nr_seq_guia,
							nr_seq_controle_interno,
							nm_usuario,
							nm_usuario_nrec,
							dt_atualizacao,
							dt_atualizacao_nrec	)
					values (	nextval('pls_controle_interno_guia_seq'),
							nr_seq_guia_p,
							nr_seq_controle_int_w,
							nm_usuario_p,
							nm_usuario_p,
							clock_timestamp(),
							clock_timestamp()			);
						
					CALL pls_guia_gravar_historico(nr_seq_guia_p, 3, 'Inserido na guia o controle interno: '||ds_processo_w||'.', null, nm_usuario_p);	
				else
					CALL pls_guia_gravar_historico(nr_seq_guia_p, 3, 'A guia já possui o controle interno: '||ds_processo_w||'.', null, nm_usuario_p);	
				end if;
			end if;
		end if;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_valida_controle_int_guia ( nr_seq_guia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) FROM PUBLIC;

