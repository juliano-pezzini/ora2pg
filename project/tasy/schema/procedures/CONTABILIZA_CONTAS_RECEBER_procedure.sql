-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE contabiliza_contas_receber ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


cd_empresa_w                            empresa.cd_empresa%type;
cd_conta_contabil_w                     varchar(200);
cd_estabelecimento_w                    estabelecimento.cd_estabelecimento%type;
cd_estab_movimento_w                    estabelecimento.cd_estabelecimento%type;
nr_seq_cob_escritural_w                 bigint;
nr_titulo_w                             titulo_receber.nr_titulo%type;
nr_documento_w                          varchar(255);
nr_doc_titulo_w                         varchar(255);
vl_transacao_w                          double precision;
cd_pessoa_fisica_w                      varchar(10);
cd_cgc_w                                varchar(14);
nr_seq_conta_banco_w                    bigint;
nr_seq_trans_fin_w                      bigint;
nr_seq_agrupamento_w                    bigint;
nm_atributo_w                           varchar(50);
dt_contabil_w                           timestamp;
dt_contabil_wb                          timestamp;
vl_retorno_w                            double precision;
cd_convenio_w                           integer;
nr_seq_protocolo_w                      bigint;
nr_interno_conta_w                      bigint;
dt_Movimento_w                          timestamp;
ie_contab_analitico_w                   varchar(01);
ie_devedor_hist_contab_w                varchar(01);
ie_nf_hist_contab_w                     varchar(01);
ds_devedor_w                            varchar(80);
ds_devedor_pj_w                         varchar(100);
nr_nota_fiscal_w                        varchar(255);
nr_nota_protocolo_w                     varchar(20);
nr_nota_conta_w                         varchar(20);
cd_centro_custo_w                       bigint;
ie_cc_glosa_w                           varchar(15);
nr_atendimento_w                        bigint;
ie_compl_hist_w                         varchar(5);
cd_tipo_lote_contabil_w                 bigint;
ds_conteudo_w                           varchar(4000);
ie_contab_cr_w                          varchar(3);
ie_contab_cr_no_cb_w                    varchar(3);
ie_gerar_contab_reg_tit_w               varchar(3);
ie_dt_contab_cr_w                       varchar(1);
dt_contabil_tit_w                       timestamp;
ds_mesano_referencia_prot_w             varchar(20);
ds_mesano_referencia_abrev_w            varchar(20);
ie_contab_tit_cancelado_w               varchar(20);
ie_contab_rec_classif_w                 varchar(20);
ie_tipo_conta_w                         varchar(1);
nr_seq_retorno_w                        bigint;
nr_titulo_doc_w                         varchar(100);
nr_nfe_imp_w                            varchar(255);
cd_conta_deb_pls_w                      varchar(100);
cd_conta_rec_pls_w                      varchar(100);
cd_historico_pls_w                      bigint;
ds_compl_historico_w                    varchar(255);
nr_sequencia_w                          bigint      := 0;
ds_erro_w                               varchar(255);
ie_contab_cartao_cr_w                   varchar(255);
ds_comprovante_w                        varchar(255);
nr_autorizacao_w                        varchar(255);
ds_observacao_titulo_w                  varchar(4000);
nr_seq_movto_trans_fin_w                bigint;
nr_seq_caixa_w                          bigint;
ds_obs_convenio_receb_w                 varchar(255);
ie_ordem_w                              bigint;
nr_seq_receb_w                          bigint;
nr_lote_titulo_w                        bigint;
nr_seq_ret_item_w                       bigint;
nr_seq_produto_w                        bigint;
nr_seq_caixa_od_w                       bigint;
ie_contab_classif_tit_rec_w             varchar(1);
ie_dt_contab_glosa_w                    varchar(1);
ds_convenio_w                           varchar(255);
ie_contab_prov_contrato_w               varchar(1);
dt_mesano_referencia_prot_w             timestamp;
ds_observacao_liq_w                     varchar(4000);
ie_acao_w                               varchar(15);
ds_acao_w                               varchar(60);
qt_estorno_contab_w                     bigint;
ie_contab_vl_estorno_w                  varchar(1);
nr_adiantamento_w                       bigint;
nr_seq_movto_cartao_cr_w                bigint;
ds_bandeira_cartao_w                    varchar(200);
ds_pessoa_rec_cartao_w                  varchar(80);
ds_comprovante_cartao_w                 varchar(100);
nr_seq_bandeira_cartao_w                bigint;
ds_nota_credito_w                       varchar(255);
vl_antecipacao_mens_w                   double precision;
ie_contab_baixas_pro_rata_w             varchar(1);
ie_tipo_lote_pls_w                      varchar(1);
dt_contab_lote_w                        timestamp;
dt_referencia_pls_mens_w                timestamp;
nr_seq_baixa_w                          integer;
nr_bordero_rec_w                        bigint;
nm_pessoa_caixa_rec_w                   varchar(255);
cd_estab_titulo_w                       bigint;
ie_permite_estab_dif_w                  varchar(15)    := 'N';
cd_conta_transitoria_w                  varchar(20);
cd_historico_ct_w                       bigint;
nr_seq_nota_credito_w                   bigint;
ds_recebimentos_w                       varchar(120);
nm_fantasia_estab_tit_w                 varchar(255);
nr_seq_liq_cc_w                         bigint;
ie_conta_transitoria_w                  varchar(1);
ie_lote_pro_rata_w                      varchar(3);
ds_motivo_glosa_w                       varchar(200);
nr_seq_movto_bco_pend_w                 bigint;
cd_tributo_w                            bigint;
ie_origem_tit_rec_w                     varchar(10);
ds_obs_movto_cartao_baixa_w             varchar(4000);
qt_glosa_terceiro_w                     bigint;
ie_tipo_conta_glosa_w                   varchar(1);
ie_tipo_lote_baixa_mens_w               varchar(3);
nr_seq_propaci_partic_w                 bigint;
ie_contab_glosa_detalhe_w               varchar(1);
ds_ano_conta_paciente_w                 varchar(20);
ds_macro_w                              varchar(2000);
nr_negociacao_w                         varchar(20);
nr_seq_trans_financ_w                   bigint;
nr_seq_movto_pend_w                     bigint;
ie_contab_curto_prazo_w                 varchar(1);
ie_contab_classif_mens_w                varchar(1);
nr_seq_perda_conta_rec_w                bigint;
nr_seq_titulo_rec_liq_w                 bigint;
dt_perda_w                              timestamp;
qt_registros_w                          bigint;
ie_movto_cartao_estab_w                 varchar(1);
cd_estab_info_w                         smallint := null;
cd_tipo_recebimento_w                   integer;
ie_prod_classif_baixa_w                 varchar(1);
nr_seq_classif_w                        bigint;
nr_seq_nota_fiscal_w                    bigint;
nr_nota_tit_abatimento_w                varchar(255);
ie_contab_pj_convenio_w                 varchar(1);
ie_contab_glosa_crit_w                  varchar(1);
nr_seq_nota_abat_receber_w              bigint;
nr_nota_tit_receber_abat_w              varchar(255);
nr_nota_tit_receber_w                   varchar(255);
qt_contador_w                           bigint;
nm_tabela_w                             lote_contabil_log.nm_tabela%type;
nr_documento_ww                         movimento_contabil.nr_documento%type;
ie_origem_documento_w                   movimento_contabil.ie_origem_documento%type;
nr_seq_extrato_w                        varchar(255);
nr_seq_tab_orig_w                       w_movimento_contabil.nr_seq_tab_orig%type;
nr_seq_tab_compl_w                      w_movimento_contabil.nr_seq_tab_compl%type;
nr_seq_info_ctb_w                       w_movimento_contabil.nr_seq_info%type;
cd_moeda_w                              movto_trans_financ.cd_moeda%type;
ie_processo_camara_w                    pls_parametros_camara.ie_processo_camara%type;
ds_atributos_w                          varchar(4000);
ie_regra_w                              varchar(255);
nm_agrupador_w                          varchar(255);
ie_union_w                              bigint;
dt_referencia_mesano_w                  bigint;
ie_contab_tit_desdob_w                  parametro_contas_receber.ie_contab_tit_desdob%type;
ie_ctb_estab_centro_w                   parametro_contas_receber.ie_ctb_estab_centro%type;
ie_segmentacao_w                        pls_plano.ie_segmentacao%type;
cd_conta_codificacao_w                  conta_contabil.cd_conta_contabil%type;
qt_conta_contabil_w                     bigint;
nm_paciente_adiant_w                    varchar(255);
ds_obs_adiantamento_w                   adiantamento.ds_observacao%type;
nr_recibo_adiant_w                      adiantamento.nr_recibo%type;
nr_seq_nf_saida_w                       titulo_receber.nr_seq_nf_saida%type;
ds_estorno_w                            varchar(255);
ie_estorno_w                            varchar(255);
nr_seq_proj_rec_w                       titulo_pagar.nr_seq_proj_rec%type;
ds_erro_temp_w                          varchar(4000);
ie_contab_baixa_dev_cr_w                pls_visible_false.ie_contab_baixa_dev_cr%type;
cd_estab_banco_w                        estabelecimento.cd_estabelecimento%type;
cd_estab_financeiro_w                   estabelecimento.cd_estabelecimento%type;
nr_sequencia_movto_w                    bigint;
cd_estab_intercompany_ori_w             estabelecimento.cd_estabelecimento%type;
ds_estab_intercompany_ori_w             varchar(255);
cd_estab_intercompany_des_w             estabelecimento.cd_estabelecimento%type;
ds_estab_intercompany_des_w             varchar(255);
cd_interno_intercompany_ori_w           estabelecimento.cd_interno%type;
cd_interno_intercompany_des_w           estabelecimento.cd_interno%type;
ie_intercompany_w                       varchar(1)     := 'N';
nr_seq_nota_orig_w                      nota_fiscal.nr_sequencia%type;
nr_nota_orig_w                          nota_fiscal.nr_nota_fiscal%type;
cd_serie_nf_orig_w                      nota_fiscal.cd_serie_nf%type;
nr_nfe_imp_orig_w                       nota_fiscal.nr_nfe_imp%type;
nr_seq_nota_comp_w                      nota_fiscal.nr_sequencia%type;
nr_nota_comp_w                          nota_fiscal.nr_nota_fiscal%type;
cd_serie_nf_comp_w                      nota_fiscal.cd_serie_nf%type;
nr_nfe_imp_comp_w                       nota_fiscal.nr_nfe_imp%type;
nr_seq_nota_no_w                        nota_fiscal.nr_sequencia%type;
nr_nota_no_w                            nota_fiscal.nr_nota_fiscal%type;
cd_serie_nf_no_w                        nota_fiscal.cd_serie_nf%type;
nr_nfe_imp_no_w                         nota_fiscal.nr_nfe_imp%type;
/* Cursor para ler Movimento a Ser contabilizado */

c010 CURSOR FOR
        SELECT  1 ie_union,
                a.nr_titulo, --1
                CASE WHEN a.ie_acao='I' THEN  a.vl_recebido  ELSE a.vl_recebido * -1 END ,--2
                a.nr_seq_trans_fin,--,3
                a.dt_recebimento,--4
                a.nr_seq_conta_banco,--5
                'VL_RECEBIDO',--6
                0 cd_centro_custo,--7
                a.dt_recebimento,--8
                '' cd_conta_contabil,--9
                a.nr_seq_retorno,--10
                a.nr_seq_ret_item,--11
                '' cd_conta_deb_pls,--12
                '' cd_conta_rec_pls,--13
                (null)::numeric  cd_historico_pls,--14
                a.nr_seq_movto_trans_fin,--15
                b.ds_observacao_titulo,--16
                '' ds_comprovante,--17
                '' nr_autorizacao,--18
                CASE WHEN ie_prod_classif_baixa_w='S' THEN (obter_prod_financ_tit_liq_cc(a.nr_titulo,a.nr_sequencia))::numeric   ELSE (null)::numeric  END  nr_seq_produto,--19
                a.ds_observacao,--20
                a.ie_acao,--21
                a.nr_adiantamento,--22
                null nr_seq_movto_cartao_cr,--23
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,--25
                to_date(null) dt_referencia_pls_mens,--26
                a.nr_sequencia nr_seq_baixa,--27
                null nr_seq_nota_credito,--28
                null nr_seq_liq_cc,--29
                null ie_lote_pro_rata,--30
                null cd_tributo,--31
                b.ie_origem_titulo,--32
                to_char(null) ds_obs_movto_cartao_baixa,--33
                null nr_seq_propaci_partic,--34
                a.nr_sequencia nr_seq_titulo_rec_liq,--35
                a.nr_seq_cobranca,--36
                'TITULO_RECEBER_LIQ',--37
                a.nr_titulo nr_seq_tab_orig,--38
                a.nr_sequencia nr_seq_tab_compl,--39
                14 nr_seq_info_ctb,--40
                b.cd_estabelecimento, --41
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    titulo_receber b,
                titulo_receber_liq a
        where   a.nr_lote_contabil              = nr_lote_contabil_p
        and     a.vl_recebido                   <> 0
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        and     a.nr_titulo                     = b.nr_titulo
        /*and   b.cd_estabelecimento            = cd_estabelecimento_w*/

        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and     coalesce(ie_lib_caixa, 'S')          = 'S'
        and     ie_contab_rec_classif_w         = 'N'
        --and   b.nr_seq_mensalidade            is null
union all

        SELECT  2 ie_union,
                a.nr_titulo,
                CASE WHEN a.ie_acao='I' THEN  coalesce(c.vl_recebido,a.vl_recebido)  ELSE coalesce(c.vl_recebido,a.vl_recebido) * -1 END ,
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_RECEBIDO',
                coalesce(c.cd_centro_custo,0),
                a.dt_recebimento,
                coalesce(c.cd_conta_contabil,''),
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                c.nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                a.nr_sequencia nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                CASE WHEN coalesce(c.nr_sequencia::text, '') = '' THEN  'TITULO_RECEBER_LIQ'  ELSE 'TITULO_REC_LIQ_CC' END  nm_tabela,
                b.nr_titulo,
                coalesce(c.nr_sequencia, a.nr_sequencia) nr_seq_tab_compl,
                14 nr_seq_info_ctb,
                coalesce(CASE WHEN ie_ctb_estab_centro_w='S' THEN c.cd_estab_centro_custo  ELSE null END , b.cd_estabelecimento) cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        FROM titulo_receber b, titulo_receber_liq a
LEFT OUTER JOIN titulo_rec_liq_cc c ON (a.nr_titulo = c.nr_titulo AND a.nr_sequencia = c.nr_seq_baixa)
WHERE a.nr_lote_contabil              = nr_lote_contabil_p and a.vl_Recebido           <> 0 and (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '') and a.nr_titulo                     = b.nr_titulo and ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))   and coalesce(ie_lib_caixa, 'S')          = 'S' and ( (coalesce(ie_lote_pro_rata::text, '') = '') or (not exists (   select 1
                                                                from   titulo_rec_liq_cc x
                                                                where  x.nr_seq_baixa           = a.nr_sequencia
                                                                and     x.nr_titulo             = a.nr_titulo
                                                                and     coalesce(x.ie_lote_pro_rata::text, '') = '') ) ) and ie_contab_rec_classif_w = 'S' --and   b.nr_seq_mensalidade            is null
 
union all

        select  3 ie_union,
                a.nr_titulo,
                a.vl_transacao,
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                a.ds_atributo,
                a.cd_centro_custo,
                a.dt_recebimento,
                a.cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                a.nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_seq_baixa nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_RECEBER_LIQ_CONTAB_V2',
                a.nr_titulo nr_seq_tab_orig,
                a.nr_seq_baixa nr_seq_tab_compl,
                14,
                b.cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    titulo_receber b,
                titulo_receber_liq_contab_v2 a
        where   a.nr_lote_contabil      = nr_lote_contabil_p
        and     a.nr_titulo             = b.nr_titulo
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and (a.ds_atributo in ('VL_DESCONTOS', 'VL_JUROS', 'VL_MULTA'))
        
union all

        select  6 ie_union,
                a.nr_titulo,
                CASE WHEN a.ie_acao='I' THEN  a.vl_despesa_bancaria  ELSE a.vl_despesa_bancaria * -1 END ,
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_DESPESA_BANCARIA',
                0 cd_centro_custo,
                a.dt_recebimento,
                '' cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                a.nr_sequencia nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_RECEBER_LIQ',
                a.nr_titulo nr_seq_tab_orig,
                a.nr_sequencia nr_seq_tab_compl,
                14,
                b.cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    titulo_receber b,
                titulo_receber_liq a
        where   a.nr_lote_contabil      = nr_lote_contabil_p
        and     a.vL_DESPESA_BANCARIA   <> 0
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        and     a.nr_titulo             = b.nr_titulo
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and     coalesce(ie_lib_caixa, 'S') = 'S'
        
union all
               /* Valores cambiais da baixa do titulo */
        select  7 ie_union,
                a.nr_titulo,
                a.vl_transacao,
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                a.ds_atributo,
                0 cd_centro_custo,
                a.dt_recebimento,
                '' cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                (null)::numeric  nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                0 nr_seq_titulo_rec_liq,
                null nr_seq_cobranca,
                'TITULO_RECEBER_LIQ_CTB_CAMB_V',
                b.nr_titulo nr_seq_tab_orig,
                a.nr_seq_baixa nr_seq_tab_compl,
                53 nr_seq_info_ctb,
                b.cd_estabelecimento,
                'N' ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    titulo_receber b,
                titulo_receber_liq_ctb_camb_v a
        where   a.nr_lote_contabil              = nr_lote_contabil_p
        and     a.vl_transacao                  <> 0
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        and     a.nr_titulo                     = b.nr_titulo
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        
union all

        /*      traz o valor total da glosa sem separar por centro de custo */

        select  8 ie_union,
                a.nr_titulo,
                CASE WHEN a.ie_acao='I' THEN  a.vl_glosa  ELSE a.vl_glosa * -1 END ,
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_GLOSA',
                0 cd_centro_custo,
                a.dt_recebimento,
                '' cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                a.nr_sequencia nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_RECEBER_LIQ',
                a.nr_titulo nr_seq_tab_orig,
                a.nr_sequencia nr_seq_tab_compl,
                14,
                b.cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    titulo_receber b,
                titulo_receber_liq a
        where   a.nr_lote_contabil      = nr_lote_contabil_p
        and     a.vl_Glosa <> 0
        and     ie_cc_glosa_w           = 'N'
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        and     a.nr_titulo             = b.nr_titulo
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and     coalesce(ie_lib_caixa, 'S') = 'S'
        and     coalesce(b.nr_seq_mensalidade::text, '') = ''
        
union   all

        /*      Traz o valor total da glosa separando por centro de custo */

        select  9 ie_union,
                a.nr_titulo,
                CASE WHEN a.ie_acao='I' THEN  x.vl_baixa WHEN a.ie_acao='E' THEN  x.vl_baixa  ELSE x.vl_baixa * -1 END ,
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_GLOSA',
                x.cd_centro_custo,
                a.dt_recebimento,
                x.cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                x.nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (nulL)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                a.nr_sequencia nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_REC_LIQ_CC',
                b.nr_titulo,
                x.nr_sequencia,
                14,
                coalesce(CASE WHEN ie_ctb_estab_centro_w='S' THEN x.cd_estab_centro_custo  ELSE null END , b.cd_estabelecimento) cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    titulo_rec_liq_cc x,
                titulo_receber b,
                titulo_receber_liq a
        where   a.nr_lote_contabil      = nr_lote_contabil_p
        and     a.vl_glosa              <> 0
        and     ie_cc_glosa_w           <> 'N'
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        and     a.nr_titulo             = b.nr_titulo
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and     a.nr_titulo             = x.nr_titulo
        and     a.nr_sequencia  = x.nr_seq_baixa
        and     coalesce(ie_lib_caixa, 'S') = 'S'
        and     coalesce(b.nr_seq_mensalidade::text, '') = ''
        
union all

        select  distinct
                10 ie_union,
                a.nr_titulo,
                CASE WHEN a.ie_acao='I' THEN  x.vl_baixa WHEN a.ie_acao='E' THEN  x.vl_baixa  ELSE x.vl_baixa * -1 END ,
                d.nr_seq_trans_financ,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_GLOSA_DETALHE',
                x.cd_centro_custo,
                a.dt_recebimento,
                x.cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                x.nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                a.nr_sequencia nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                d.nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_RECEBER_LIQ_CC',
                b.nr_titulo,
                x.nr_sequencia,
                14 nr_seq_info_ctb,
                coalesce(CASE WHEN ie_ctb_estab_centro_w='S' THEN x.cd_estab_centro_custo  ELSE null END , b.cd_estabelecimento) cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    convenio_retorno_glosa d,
                titulo_rec_liq_cc x,
                titulo_receber b,
                titulo_receber_liq a
        where   d.nr_seq_ret_item       = a.nr_seq_ret_item
        and     a.nr_lote_contabil      = nr_lote_contabil_p
        and     a.vl_Glosa              <> 0
        and     ie_cc_glosa_w           <> 'N'
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        and     (d.nr_Seq_trans_financ IS NOT NULL AND d.nr_Seq_trans_financ::text <> '')
        and     a.nr_titulo             = b.nr_titulo
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and     a.nr_titulo             = x.nr_titulo
        and     a.nr_sequencia  = x.nr_seq_baixa
        and     coalesce(ie_lib_caixa, 'S') = 'S'
        and     coalesce(b.nr_seq_mensalidade::text, '') = ''
        and     ie_contab_glosa_detalhe_w = 'S'
        and     x.vl_baixa <> 0
        
union all

        select  11 ie_union,
                a.nr_titulo,
                CASE WHEN a.ie_acao='I' THEN  a.vl_rec_Maior  ELSE a.vl_rec_maior * -1 END ,
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_REC_MAIOR',
                0 cd_centro_custo,
                a.dt_recebimento,
                '' cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                a.nr_seq_movto_TRANS_FIN,
                b.ds_observacao_titulo,
                '' ds_comprovanTE,
                '' nr_autorizacAO,
                (null)::numeric  nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                a.nr_sequencia nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_RECEBER_LIQ',
                a.nr_titulo nr_seq_tab_orig,
                a.nr_sequencia nr_seq_tab_compl,
                14 nr_seq_info_ctb,
                b.cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    titulo_receber b,
                titulo_receber_liq a
        where   a.nr_lote_contabil      = nr_lote_contabil_p
        and     a.vl_Rec_Maior  <> 0
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        and     a.nr_titulo             = b.nr_titulo
        and (ie_cc_glosa_w          = 'N'
        or      b.ie_origem_titulo      = 3)
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and     coalesce(ie_lib_caixa, 'S') = 'S'
        /*and   b.nr_seq_mensalidade            is null - OS 105016 - 04/09 */

        
union all

        /*      traz o valor total rec a maior separando por centro de custo */
 -- Edgar 12/01/2006, OS 25315, inclui este union
        select  12 ie_union,
                a.nr_titulo,
                CASE WHEN a.ie_acao='I' THEN  x.vl_amaior  ELSE x.vl_amaior * -1 END ,
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_REC_MAIOR',
                x.cd_centro_custo,
                a.dt_recebimento,
                x.cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                x.nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                a.nr_sequencia nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_RECEBER_LIQ_CC',
                b.nr_titulo,
                x.nr_sequencia,
                14 nr_seq_info_ctb,
                coalesce(CASE WHEN ie_ctb_estab_centro_w='S' THEN x.cd_estab_centro_custo  ELSE null END , b.cd_estabelecimento) cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    titulo_rec_liq_cc x,
                titulo_receber b,
                titulo_receber_liq a
        where   a.nr_lote_contabil      = nr_lote_contabil_p
        and     a.vl_Rec_Maior          <> 0
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        and     a.nr_titulo             = b.nr_titulo
        and     ie_cc_glosa_w           <> 'N'
        and     a.nr_titulo             = x.nr_titulo
        and     a.nr_sequencia          = x.nr_seq_baixa
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and     coalesce(ie_lib_caixa, 'S')  = 'S'
        and     coalesce(b.nr_seq_mensalidade::text, '') = ''
        
union all

        select  13 ie_union,
                a.nr_titulo,
                CASE WHEN a.ie_aumenta_diminui='A' THEN  a.vl_alteracao  ELSE a.vl_alteracao * -1 END ,
                a.nr_seq_trans_fin,
                a.dt_alteracao,
                0,
                'VL_ALTERACAO',
                0,
                a.dt_alteracao,
                '' cd_conta_contabil,
                0 nr_seq_retorno,
                0 nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                0 nr_seq_movto_trans_fin,
                '' ds_observacao_titulo,
                '' DS_COMPROVANTE,
                '' NR_AUTORIZACAO,
                (null)::numeric  nr_seq_produto,
                '',
                '' ie_acao,
                0 nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                (null)::numeric  nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                0 nr_seq_titulo_rec_liq,
                null nr_seq_cobranca,
                'ALTERACAO_VALOR',
                a.nr_titulo,
                a.nr_sequencia,
                54 nr_seq_info_ctb,
                null cd_estabelecimento,
                'N' ie_estorno,
                b.nr_seq_proj_rec,
                null cd_moeda
        from    alteracao_valor a,
                        titulo_receber b
        where   a.nr_lote_contabil      = nr_lote_contabil_p
        and     a.nr_titulo = b.nr_titulo
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        
union all

        select  14 ie_union,
                a.nr_titulo,
                a.vl_titulo,
                a.nr_seq_trans_fin_contab,
                a.dt_contabil,
                0,
                'VL_TITULO_RECEBER',
                0,
                coalesce(a.dt_contabil,dt_contabil_w),
                '' cd_conta_contabil,
                0 nr_seq_retorno,
                0 nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                0 nr_seq_movto_trans_fin,
                a.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                '',
                '' ie_acao,
                0 nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                (null)::numeric  nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                a.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                0 nr_seq_titulo_rec_liq,
                null nr_seq_cobranca,
                'TITULO_RECEBER',
                a.nr_titulo nr_seq_tab_orig,
                null nr_seq_tab_compl,
                3 nr_seq_info,
                a.cd_estabelecimento,
                'N' ie_estorno,
                a.nr_seq_proj_rec,
                null cd_moeda
        from    titulo_receber a
        where   a.nr_Lote_contabil              = nr_lote_contabil_p
        and     (a.nr_seq_trans_fin_contab IS NOT NULL AND a.nr_seq_trans_fin_contab::text <> '')
        and     ((ie_contab_classif_tit_rec_w   = 'N') or (not exists (select 1 from titulo_receber_classif x where a.nr_titulo = x.nr_titulo)))
        
union all

        select  15 ie_union,
                a.nr_titulo,
                b.vl_classificacao vl_transacao,
                a.nr_seq_trans_fin_contab,
                a.dt_contabil,
                0,
                'VL_TITULO_RECEBER',
                coalesce(b.cd_centro_custo, 0) cd_centro_custo,
                coalesce(a.dt_contabil,dt_contabil_w),
                b.cd_conta_contabil,
                0 nr_seq_retorno,
                0 nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                0 nr_seq_movto_trans_fin,
                a.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                b.nr_seq_produto,
                '',
                '' ie_acao,
                0 nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                (null)::numeric  nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                a.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                0 nr_seq_titulo_rec_liq,
                null nr_seq_cobranca,
                'TITULO_RECEBER_CLASSIF',
                a.nr_titulo nr_seq_tab_orig,
                b.nr_sequencia nr_seq_tab_compl,
                3 nr_seq_info_ctb,
                a.cd_estabelecimento,
                'N' ie_estorno,
                a.nr_seq_proj_rec,
                null cd_moeda
        from    titulo_receber_classif b,
                titulo_receber a
        where   a.nr_titulo                     = b.nr_titulo
        and     a.nr_Lote_contabil              = nr_lote_contabil_p
        and     (a.nr_seq_trans_fin_contab IS NOT NULL AND a.nr_seq_trans_fin_contab::text <> '')
        and     ie_contab_classif_tit_rec_w     = 'S'
        
union all

        select  16 ie_union,
                a.nr_titulo,
                CASE WHEN a.ie_acao='I' THEN  a.vl_perdas  ELSE a.vl_perdas * -1 END ,
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_PERDAS',
                0,
                a.dt_recebimento,
                '',
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  ,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                a.nr_sequencia nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_RECEBER_LIQ' nm_tabela,
                a.nr_titulo nr_seq_tab_orig,
                a.nr_sequencia nr_seq_tab_compl,
                14 nr_seq_info_ctb,
                b.cd_estabelecimento cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    titulo_receber b,
                titulo_receber_liq a
        where   a.nr_lote_contabil      = nr_lote_contabil_p
        and     a.nr_titulo             = b.nr_titulo
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        and     coalesce(a.vl_perdas,0) <> 0
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and     coalesce(ie_lib_caixa, 'S') = 'S'
        and     not exists (     select  1
                                from    titulo_rec_liq_cc x
                                where   x.nr_titulo             = a.nr_titulo
                                and     x.nr_seq_baixa          = a.nr_sequencia
                                and     coalesce(x.vl_perdas,0) <> 0)
        
union all

        select  17 ie_union,
                a.nr_titulo,                                                            -- Edgar 15/02/2010, OS 195867, contabilizar vl_nota_credito
                CASE WHEN a.ie_acao='I' THEN  c.vl_nota_credito  ELSE c.vl_nota_credito * -1 END ,
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_NOTA_CREDITO',
                0 cd_centro_custo,
                a.dt_recebimento,
                '' cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                a.nr_sequencia nr_seq_baixa,
                c.nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_RECEBER_LIQ',
                a.nr_titulo nr_seq_tab_orig,
                a.nr_sequencia nr_seq_tab_compl,
                34 nr_seq_info_ctb,
                b.cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    titulo_receber b,
                titulo_receber_liq a,
                titulo_receber_nc c
        where   a.nr_titulo                     = c.nr_titulo_rec
        and     a.nr_sequencia                  = c.nr_seq_liq
        and     a.nr_lote_contabil              = nr_lote_contabil_p
        and     a.vl_nota_credito               <> 0
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        and     a.nr_titulo                     = b.nr_titulo
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and     coalesce(ie_lib_caixa, 'S')          = 'S'
        
union all

        select  18 ie_union,
                a.nr_titulo,                                                    -- Edgar 23/02/2008, OS 82461, contabilizar tributos
                c.vl_baixa,
                c.nr_seq_trans_financ,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_TRIB_TIT_REC',
                0 cd_centro_custo,
                a.dt_recebimento,
                '' cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                a.nr_sequencia nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                (select y.cd_tributo from titulo_receber_trib y where y.nr_sequencia    = c.nr_seq_tit_trib) cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_RECEBER_TRIB_BAIXA',
                b.nr_titulo nr_seq_tab_orig,
                c.nr_sequencia nr_Seq_tab_compl,
                55 nr_seq_info_ctb,
                b.cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    titulo_receber_trib_baixa c,
                titulo_receber b,
                titulo_receber_liq a
        where   a.nr_lote_contabil      = nr_lote_contabil_p
        and     (c.nr_seq_trans_financ IS NOT NULL AND c.nr_seq_trans_financ::text <> '')
        and     a.nr_titulo             = b.nr_titulo
        and     a.nr_titulo             = c.nr_titulo
        and     a.nr_sequencia          = c.nr_seq_tit_liq
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and     coalesce(a.ie_lib_caixa, 'S') = 'S'
        /*and   b.nr_seq_mensalidade            is null*/

        
union all

        select  19 ie_union,
                a.nr_titulo,
                a.vl_despesa,
                a.nr_seq_trans_fin,
                a.dt_alteracao,
                0,
                'VL_ALTERACAO_PORTADOR',
                0,
                a.dt_alteracao,
                '' cd_conta_contabil,
                0 nr_seq_retorno,
                0 nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                0 nr_seq_movto_trans_fin,
                '' ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                '',
                '',
                0 nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                (null)::numeric  nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                null ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                0 nr_seq_titulo_rec_liq,
                null nr_seq_cobranca,
                'ALTERACAO_PORTADOR',
                a.nr_titulo nr_seq_tab_orig,
                a.nr_sequencia nr_seq_tab_compl,
                43 nr_seq_info_ctb,
                null cd_estabelecimento,
                'N' ie_estorno,
                null nr_seq_proj_rec,
                null cd_moeda
        from    alteracao_portador a
        where   a.nr_lote_contabil              = nr_lote_contabil_p
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        
union all

        select  20 ie_union,
                a.nr_titulo,
                a.vl_saldo_titulo,
                a.nr_seq_trans_fin,
                a.dt_alteracao,
                0,
                'VL_TIT_ALT_PORTADOR',
                0,
                a.dt_alteracao,
                '' cd_conta_contabil,
                0 nr_seq_retorno,
                0 nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                0 nr_seq_movto_trans_fin,
                '' ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                '',
                '' ie_acao,
                0 nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                (null)::numeric  nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                null ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                0 nr_seq_titulo_rec_liq,
                null nr_seq_cobranca,
                'ALTERACAO_PORTADOR',
                a.nr_titulo nr_seq_tab_orig,
                a.nr_sequencia nr_seq_tab_compl,
                43 nr_seq_info_ctb,
                null cd_estabelecimento,
                'N' ie_estorno,
                null nr_seq_proj_rec,
                null cd_moeda
        from    alteracao_portador a
        where   a.nr_lote_contabil              = nr_lote_contabil_p
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        
union all

        select  21 ie_union,
                a.nr_titulo,
                CASE WHEN a.ie_acao='I' THEN  x.vl_recebido  ELSE x.vl_recebido * -1 END ,
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_REC_PLS',
                x.cd_centro_custo,
                a.dt_recebimento,
                '' cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                x.cd_conta_deb_pls,
                x.cd_conta_rec_pls,
                x.cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                x.nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                x.vl_antecipacao_mens,
                'B' ie_lote_antecip_pls,
                a.dt_referencia_pls_mens,
                a.nr_sequencia,
                null nr_seq_nota_credito,
                x.nr_sequencia nr_seq_liq_cc,
                CASE WHEN x.ie_lote_pro_rata='BA' THEN x.ie_lote_pro_rata  ELSE null END ,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_RECEBER_LIQ_CC',
                b.nr_titulo nr_seq_tab_orig,
                x.nr_sequencia nr_seq_tab_compl,
                14 nr_seq_info_ctb,
                coalesce(CASE WHEN ie_ctb_estab_centro_w='S' THEN x.cd_estab_centro_custo  ELSE null END , b.cd_estabelecimento) cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    titulo_rec_liq_cc x,
                titulo_receber b,
                titulo_receber_liq a
        where   a.nr_lote_contabil      = nr_lote_contabil_p
        and     a.vl_recebido           <> 0
        and     a.nr_titulo             = b.nr_titulo
        and     a.nr_titulo             = x.nr_titulo
        and     a.nr_sequencia          = x.nr_seq_baixa
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and (ie_contab_classif_mens_w = 'N' or
                not exists (select 1
                                from    pls_titulo_rec_liq_mens x
                                where   x.nr_titulo     = b.nr_titulo
                                and     x.nr_seq_baixa  = a.nr_sequencia))
        /*and   nvl(ie_lib_caixa, 'S')  = 'S' Ja trata no update */

        /*and   b.nr_seq_mensalidade            is not null */

        and     b.ie_pls        = 'S'
        and ((x.ie_lote_pro_rata IS NOT NULL AND x.ie_lote_pro_rata::text <> '') or ie_contab_baixas_pro_rata_w <> 'A')
        /* Francisco - 25/05/2010 - OS 203923 */

        
union all

        select  22 ie_union,
                a.nr_titulo,
                CASE WHEN a.ie_acao='I' THEN  x.vl_recebido  ELSE x.vl_recebido * -1 END ,
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_REC_PLS',
                x.cd_centro_custo,
                a.dt_recebimento,
                '' cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                x.cd_conta_deb_pls,
                x.cd_conta_rec_pls,
                x.cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                x.nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                x.vl_antecipacao_mens,
                'A' ie_lote_antecip_pls,
                a.dt_referencia_pls_mens,
                a.nr_sequencia,
                null nr_seq_nota_credito,
                x.nr_sequencia nr_seq_liq_cc,
                CASE WHEN x.ie_lote_pro_rata='AN' THEN x.ie_lote_pro_rata  ELSE null END ,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_RECEBER_LIQ_CC',
                b.nr_titulo,
                x.nr_sequencia,
                14 nr_seq_info_ctb,
                coalesce(CASE WHEN ie_ctb_estab_centro_w='S' THEN x.cd_estab_centro_custo  ELSE null END , b.cd_estabelecimento) cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    titulo_rec_liq_cc x,
                titulo_receber b,
                titulo_receber_liq a
        where   a.nr_lote_contab_antecip        = nr_lote_contabil_p
        and     a.vl_recebido           <> 0
        and     a.nr_titulo             = b.nr_titulo
        and     a.nr_titulo             = x.nr_titulo
        and     a.nr_sequencia          = x.nr_seq_baixa
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and (ie_contab_classif_mens_w = 'N' or
                not exists (select 1
                                from    pls_titulo_rec_liq_mens x
                                where   x.nr_titulo     = b.nr_titulo
                                and     x.nr_seq_baixa  = a.nr_sequencia))
        /*and   nvl(ie_lib_caixa, 'S')  = 'S' Ja trata no update */

        /*and   b.nr_seq_mensalidade            is not null */

        and     b.ie_pls        = 'S'
        and ((x.ie_lote_pro_rata IS NOT NULL AND x.ie_lote_pro_rata::text <> '') or ie_contab_baixas_pro_rata_w <> 'A')
        
union all

        /* francisco - 26/05/2010 -  220155 */

        select  23 ie_union,
                a.nr_titulo,
                CASE WHEN a.ie_acao='I' THEN  x.vl_recebido  ELSE x.vl_recebido * -1 END ,
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_REC_PLS',
                x.cd_centro_custo,
                a.dt_recebimento,
                '' cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                x.cd_conta_deb_pls,
                x.cd_conta_rec_pls,
                x.cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                x.nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                x.vl_antecipacao_mens,
                'P' ie_lote_antecip_pls,
                a.dt_referencia_pls_mens,
                a.nr_sequencia,
                null nr_seq_nota_credito,
                x.nr_sequencia nr_seq_liq_cc,
                CASE WHEN x.ie_lote_pro_rata='PR' THEN x.ie_lote_pro_rata  ELSE null END ,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_RECEBER_LIQ_CC',
                b.nr_titulo,
                x.nr_sequencia,
                14 nr_seq_info_ctb,
                coalesce(CASE WHEN ie_ctb_estab_centro_w='S' THEN x.cd_estab_centro_custo  ELSE null END , b.cd_estabelecimento) cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    Titulo_rec_liq_cc x,
                titulo_receber b,
                titulo_receber_liq a
        where   a.nr_lote_contab_pro_rata       = nr_lote_contabil_p
        and     a.vl_recebido           <> 0
        and     a.nr_titulo             = b.nr_titulo
        and     a.nr_titulo             = x.nr_titulo
        and     a.nr_sequencia          = x.nr_seq_baixa
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and (ie_contab_classif_mens_w = 'N' or
                not exists (select 1
                                from    pls_titulo_rec_liq_mens x
                                where   x.nr_titulo     = b.nr_titulo
                                and     x.nr_seq_baixa  = a.nr_sequencia))
        /*and   nvl(ie_lib_caixa, 'S')  = 'S' Ja trata no update */

        /*and   b.nr_seq_mensalidade            is not null*/

        and     b.ie_pls        = 'S'
        and ((x.ie_lote_pro_rata IS NOT NULL AND x.ie_lote_pro_rata::text <> '') or ie_contab_baixas_pro_rata_w <> 'A')
        
union all

        select  24 ie_union,
                0,
                a.vl_baixa,
                a.nr_seq_trans_financ,
                a.dt_baixa,
                a.nr_seq_conta_banco,
                'VL_BAIXA_CARTAO_CR',
                0 cd_centro_custo,
                a.dt_baixa,
                '' cd_conta_contabil,
                0 nr_seq_retorno,
                0 nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                0 nr_seq_movto_trans_fin,
                '' ds_observacao_titulo,
                b.DS_COMPROVANTE,
                b.NR_AUTORIZACAO,
                (null)::numeric  nr_seq_produto,
                '',
                '' ie_acao,
                0 nr_adiantamento,
                b.nr_sequencia nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                (null)::numeric  nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                null ie_origem_titulo,
                substr(a.ds_observacao,1,255) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                0 nr_seq_titulo_rec_liq,
                null nr_seq_cobranca,
                'MOVTO_CARTAO_CR_BAIXA',
                a.nr_sequencia nr_seq_tab_orig,
                null nr_seq_tab_compl,
                44 nr_seq_info_ctb,
                null cd_estabelecimento,
                'N' ie_estorno,
                null nr_seq_proj_rec,
                null cd_moeda
        from    movto_cartao_cr b,
                movto_cartao_cr_baixa a
        where   a.nr_seq_movto          = b.nr_sequencia
        and     ((b.cd_estabelecimento  = cd_estabelecimento_w)
        or (ie_movto_cartao_estab_w = 'S'))
        and     a.nr_lote_contabil      = nr_lote_contabil_p
        and     (a.nr_seq_trans_financ IS NOT NULL AND a.nr_seq_trans_financ::text <> '')
        and     ie_contab_cartao_cr_w   = 'CR'
        
union all

        select  25 ie_union,
                0,
                a.VL_DESP_EQUIP,
                a.nr_seq_trans_financ,
                a.dt_baixa,
                a.nr_seq_conta_banco,
                'VL_DESP_EQUIP_CARTAO_CR',
                0 cd_centro_custo,
                a.dt_baixa,
                '' cd_conta_contabil,
                0 nr_seq_retorno,
                0 nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                0 nr_seq_movto_trans_fin,
                '' ds_observacao_titulo,
                b.ds_comprovante,
                b.nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                '',
                '' ie_acao,
                0 nr_adiantamento,
                b.nr_sequencia nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                (null)::numeric  nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                null ie_origem_titulo,
                substr(a.ds_observacao,1,255) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                0 nr_seq_titulo_rec_liq,
                null nr_seq_cobranca,
                'MOVTO_CARTAO_CR_BAIXA',
                a.nr_sequencia nr_seq_tab_orig,
                null nr_seq_tab_compl,
                44 nr_seq_info_ctb,
                null cd_estabelecimento,
                'N' ie_estorno,
                null nr_seq_proj_rec,
                null cd_moeda
        from    movto_cartao_cr b,
                movto_cartao_cr_baixa a
        where   a.nr_seq_movto          = b.nr_sequencia
        and     ((b.cd_estabelecimento  = cd_estabelecimento_w)
        or (ie_movto_cartao_estab_w = 'S'))
        and     a.nr_lote_contabil      = nr_lote_contabil_p
        and     (a.nr_seq_trans_financ IS NOT NULL AND a.nr_seq_trans_financ::text <> '')
        and     ie_contab_cartao_cr_w   = 'CR'
        
union all

        select  26 ie_union,
                0,
                a.vl_despesa,
                a.nr_seq_trans_financ,
                a.dt_baixa,
                a.nr_seq_conta_banco,
                'VL_DESPESA_CARTAO_CR',
                0 cd_centro_custo,
                a.dt_baixa,
                '' cd_conta_contabil,
                0 nr_seq_retorno,
                0 nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                0 nr_seq_movto_trans_fin,
                '' ds_observacao_titulo,
                b.ds_comprovante,
                b.nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                '',
                '' ie_acao,
                0 nr_adiantamento,
                b.nr_sequencia nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                (null)::numeric  nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                null ie_origem_titulo,
                substr(a.ds_observacao,1,255) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                0 nr_seq_titulo_rec_liq,
                null nr_seq_cobranca,
                'MOVTO_CARTAO_CR_BAIXA',
                a.nr_sequencia nr_seq_tab_orig,
                null nr_seq_tab_compl,
                44 nr_seq_info_ctb,
                null cd_estabelecimento,
                'N' ie_estorno,
                null nr_seq_proj_rec,
                null cd_moeda
        from    movto_cartao_cr b,
                movto_cartao_cr_baixa a
        where   a.nr_seq_movto          = b.nr_sequencia
        and     ((b.cd_estabelecimento  = cd_estabelecimento_w)
        or (ie_movto_cartao_estab_w = 'S'))
        and     a.nr_lote_contabil      = nr_lote_contabil_p
        and     (a.nr_seq_trans_financ IS NOT NULL AND a.nr_seq_trans_financ::text <> '')
        and     ie_contab_cartao_cr_w   = 'CR'
        
union all

        select  27 ie_union,
                a.nr_titulo,
                (obter_dados_titulo_receber(a.nr_titulo, 'VLL'))::numeric ,
                a.nr_seq_trans_fin_contab,
                a.dt_contabil,
                0,
                'VL_LIQUIDO_TIT',
                0,
                coalesce(a.dt_contabil,dt_contabil_w),
                '' cd_conta_contabil,
                0 nr_seq_retorno,
                0 nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                0 nr_seq_movto_trans_fin,
                a.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                '',
                '' ie_acao,
                0 nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                (null)::numeric  nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                a.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                0 nr_seq_titulo_rec_liq,
                null nr_seq_cobranca,
                'TITULO_RECEBER',
                a.nr_titulo nr_seq_tab_orig,
                null nr_seq_tab_compl,
                3 nr_seq_info_ctb,
                a.cd_estabelecimento,
                'N' ie_estorno,
                a.nr_seq_proj_rec,
                null cd_moeda
        from    Titulo_receber a
        where   a.nr_Lote_contabil              = nr_lote_contabil_p
        and     (a.nr_seq_trans_fin_contab IS NOT NULL AND a.nr_seq_trans_fin_contab::text <> '')
        
union all

        select  28 ie_union,
                b.nr_titulo,
                c.vl_tributo,
                c.nr_seq_trans_financ,
                coalesce(c.dt_tributo,c.dt_contabil),
                null nr_seq_conta_banco,
                'VL_TRIB_RETIDO',
                0 cd_centro_custo,
                coalesce(c.dt_tributo,c.dt_contabil),
                '' cd_conta_contabil,
                null nr_seq_retorno,
                null nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                null nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                null ds_observacao,
                null ie_acao,
                null nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                null nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                c.cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                0 nr_seq_titulo_rec_liq,
                null nr_seq_cobranca,
                'TITULO_RECEBER_TRIB',
                c.nr_sequencia nr_seq_tab_orig,
                c.nr_titulo nr_seq_tab_compl,
                45 nr_seq_info_ctb,
                b.cd_estabelecimento,
                'N' ie_estorno,
                b.nr_seq_proj_rec,
                null cd_moeda
        from    titulo_receber_trib c,
                titulo_receber b
        where   c.nr_lote_contabil      = nr_lote_contabil_p
        and     b.nr_titulo             = c.nr_titulo
        and     coalesce(c.nr_seq_nota_fiscal::text, '') = ''
        --and   b.nr_seq_mensalidade is not null
        /*and   not exists      (select 1
                                from    titulo_receber_trib_baixa x
                                where   x.nr_seq_tit_trib       = c.nr_sequencia)*/
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        
union all

        select  29 ie_union,
                a.nr_titulo,
                CASE WHEN a.ie_acao='I' THEN  a.vl_outros_acrescimos  ELSE a.vl_outros_acrescimos * -1 END ,
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_OUTROS_ACRESCIMOS',
                0 cd_centro_custo,
                a.dt_recebimento,
                '' cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                a.nr_sequencia nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_RECEBER_LIQ',
                b.nr_titulo nr_seq_tab_orig,
                a.nr_sequencia nr_seq_tab_compl,
                14 nr_seq_info_ctb,
                b.cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    titulo_receber          b,
                titulo_receber_liq      a
        where   a.nr_titulo             = b.nr_titulo
        and     a.nr_lote_contabil      = nr_lote_contabil_p
        and     a.vl_outros_acrescimos <> 0
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and     coalesce(ie_lib_caixa, 'S') = 'S'
        
union all

        select  30 ie_union,
                a.nr_titulo,
                a.vl_baixa,
                a.nr_seq_trans_contab_cheque,
                a.dt_baixa,
                null nr_seq_conta_banco,
                nm_atributo,
                0 cd_centro_custo,
                a.dt_recebimento,
                '' cd_conta_contabil,
                null nr_seq_retorno,
                null nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                null ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                a.ds_observacao,
                null ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                null nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                null ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                0 nr_seq_titulo_rec_liq,
                null nr_seq_cobranca,
                'MOVTO_BANCO_PEND_BX_CONTAB_V',
                a.nr_titulo nr_seq_tab_orig,
                null nr_seq_tab_compl,
                48 nr_seq_info_ctb,
                c.cd_estabelecimento,
                'N' ie_estorno,
                null nr_seq_proj_rec,
                null cd_moeda
        from    movto_banco_pend_bx_contab_v    a,
                movto_banco_pend_baixa b,
                movto_banco_pend c
        where   a.nr_lote_contabil      = nr_lote_contabil_p
        and     c.nr_sequencia = b.nr_seq_movto_pend
        and     a.nr_seq_movto_pend_baixa = b.nr_sequencia
        
union all

        select  31 ie_union,
                a.nr_titulo,
                CASE WHEN a.ie_acao='I' THEN  x.vl_recebido  ELSE x.vl_recebido * -1 END ,
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_REC_ANTECIP',
                x.cd_centro_custo,
                a.dt_recebimento,
                x.cd_conta_rec_antecip cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                x.cd_conta_deb_pls,
                x.cd_conta_rec_pls,
                x.cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                x.nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                x.vl_antecipacao_mens,
                'B' ie_lote_antecip_pls,
                a.dt_referencia_pls_mens,
                a.nr_sequencia,
                null nr_seq_nota_credito,
                x.nr_sequencia nr_seq_liq_cc,
                CASE WHEN x.ie_lote_pro_rata='BA' THEN x.ie_lote_pro_rata  ELSE null END ,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_RECEBER_LIQ_CC',
                x.nr_sequencia nr_seq_tab_orig,
                a.nr_sequencia nr_seq_tab_compl,
                49 nr_seq_info_ctb,
                coalesce(CASE WHEN ie_ctb_estab_centro_w='S' THEN x.cd_estab_centro_custo  ELSE null END , b.cd_estabelecimento) cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    Titulo_rec_liq_cc x,
                titulo_receber b,
                titulo_receber_liq a
        where   a.nr_lote_contabil      = nr_lote_contabil_p
        and     a.vl_recebido           <> 0
        and     a.nr_titulo             = b.nr_titulo
        and     a.nr_titulo             = x.nr_titulo
        and     a.nr_sequencia          = x.nr_seq_baixa
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and     b.ie_pls        = 'S'
        and     ie_contab_baixas_pro_rata_w = 'A'
        and     exists (select 1
                        from    pls_mensalidade w,
                                pls_lote_mensalidade    k
                        where   w.nr_seq_lote   = k.nr_sequencia
                        and     w.nr_sequencia  = b.nr_seq_mensalidade
                        and     (k.dt_contabilizacao IS NOT NULL AND k.dt_contabilizacao::text <> ''))
        
union all

        select  32 ie_union,
                a.nr_titulo,
                CASE WHEN a.ie_acao='I' THEN  x.vl_recebido  ELSE x.vl_recebido * -1 END ,
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_DEB_ANTECIP',
                x.cd_centro_custo,
                a.dt_recebimento,
                x.cd_conta_deb_antecip cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                x.cd_conta_deb_pls,
                x.cd_conta_rec_pls,
                x.cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                x.nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                x.vl_antecipacao_mens,
                'B' ie_lote_antecip_pls,
                a.dt_referencia_pls_mens,
                a.nr_sequencia,
                null nr_seq_nota_credito,
                x.nr_sequencia nr_seq_liq_cc,
                CASE WHEN x.ie_lote_pro_rata='BA' THEN x.ie_lote_pro_rata  ELSE null END ,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_RECEBER_LIQ_CC',
                x.nr_sequencia nr_seq_tab_orig,
                a.nr_sequencia nr_seq_tab_compl,
                50 nr_seq_info_ctb,
                coalesce(CASE WHEN ie_ctb_estab_centro_w='S' THEN x.cd_estab_centro_custo  ELSE null END , b.cd_estabelecimento) cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    Titulo_rec_liq_cc x,
                titulo_receber b,
                titulo_receber_liq a
        where   a.nr_lote_contabil      = nr_lote_contabil_p
        and     a.vl_recebido           <> 0
        and     a.nr_titulo             = b.nr_titulo
        and     a.nr_titulo             = x.nr_titulo
        and     a.nr_sequencia          = x.nr_seq_baixa
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and     b.ie_pls        = 'S'
        and     ie_contab_baixas_pro_rata_w = 'A'
        and     exists (select 1
                        from    pls_mensalidade w,
                                pls_lote_mensalidade    k
                        where   w.nr_seq_lote   = k.nr_sequencia
                        and     w.nr_sequencia  = b.nr_seq_mensalidade
                        and     (k.dt_contabilizacao IS NOT NULL AND k.dt_contabilizacao::text <> ''))
        
union all

        select  33 ie_union,
                a.nr_titulo,
                a.vl_titulo,
                a.nr_seq_tf_curto_prazo,
                dt_contab_lote_w,
                0,
                'VL_CURTO_PRAZO',
                0,
                pkg_date_utils.add_month(a.dt_vencimento,-12,0),
                '' cd_conta_contabil,
                0 nr_seq_retorno,
                0 nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                0 nr_seq_movto_trans_fin,
                a.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                '',
                '' ie_acao,
                0 nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                (null)::numeric  nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                a.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                0 nr_seq_titulo_rec_liq,
                null nr_seq_cobranca,
                'TITULO_RECEBER',
                a.nr_titulo nr_seq_tab_orig,
                null nr_seq_tab_compl,
                3 nr_seq_info_ctb,
                a.cd_estabelecimento,
                'N' ie_estorno,
                a.nr_seq_proj_rec,
                null cd_moeda
        from    titulo_receber a
        where   a.nr_lote_contabil              <> a.nr_lote_contabil_curto_prazo
        and     A.NR_LOTE_CONTABIL <> 0
        and     a.nr_lote_contabil_curto_prazo =  nr_lote_contabil_p
        and     (a.nr_seq_tf_curto_prazo IS NOT NULL AND a.nr_seq_tf_curto_prazo::text <> '')
        and     ie_contab_curto_prazo_w = 'S'
        
union all

        select  34 ie_union,
                a.nr_titulo,
                a.vl_titulo,
                a.nr_seq_tf_curto_prazo,
                a.dt_contabil,
                0,
                'VL_LONGO_PRAZO',
                0,
                coalesce(a.dt_contabil,dt_contabil_w),
                '' cd_conta_contabil,
                0 nr_seq_retorno,
                0 nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                0 nr_seq_movto_trans_fin,
                a.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                '',
                '' ie_acao,
                0 nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                (null)::numeric  nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                a.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                0 nr_seq_titulo_rec_liq,
                null nr_seq_cobranca,
                'TITULO_RECEBER',
                a.nr_titulo nr_seq_tab_orig,
                null nr_seq_tab_compl,
                3 nr_seq_info_ctb,
                a.cd_estabelecimento,
                'N' ie_estorno,
                a.nr_seq_proj_rec,
                null cd_moeda
        from    titulo_receber a
        where   a.nr_lote_contabil              =  nr_lote_contabil_p
        and     a.dt_vencimento         > pkg_date_utils.add_month(dt_contabil_w,12,0)
        and     (a.nr_seq_tf_curto_prazo IS NOT NULL AND a.nr_seq_tf_curto_prazo::text <> '')
        and     ie_contab_curto_prazo_w = 'S'
        
union all

        select  35 ie_union,
                a.nr_titulo,
                a.vl_recurso,
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_RECURSADO',
                0 cd_centro_custo,
                a.dt_recebimento,
                '' cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                a.nr_sequencia nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_RECEBER_LIQ',
                b.nr_titulo nr_seq_tab_orig,
                a.nr_sequencia nr_seq_tab_compl,
                14 nr_seq_info_ctb,
                b.cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    titulo_receber b,
                titulo_receber_liq a
        where   a.nr_lote_contabil = nr_lote_contabil_p
        and     a.vl_recurso <> 0
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        and     a.nr_titulo = b.nr_titulo
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento = cd_estabelecimento_w))
        and     coalesce(ie_lib_caixa, 'S') = 'S'
        
union all

        select  36 ie_union,
                b.nr_titulo,
                c.vl_lancamento,
                b.nr_seq_tf_curto_prazo,
                c.dt_contabil,
                0,
                'VL_REC_PLS_MENS',
                c.cd_centro_custo,
                coalesce(c.dt_contabil,dt_contabil_w),
                '' cd_conta_contabil,
                0 nr_seq_retorno,
                0 nr_seq_ret_item,
                c.cd_conta_debito cd_conta_deb_pls,
                c.cd_conta_credito cd_conta_rec_pls,
                c.cd_historico cd_historico_pls,
                0 nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                '',
                '' ie_acao,
                0 nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                CASE WHEN c.ie_tipo_lancamento='EA' THEN  c.dt_contabil  ELSE to_date(null) END  dt_referencia_pls_mens,
                (null)::numeric  nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                CASE WHEN c.ie_tipo_lancamento='PR' THEN 'AN'  ELSE null END  ie_lote_pro_rata,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'PLS_TITULO_REC_LIQ_MENS',
                c.nr_sequencia nr_seq_tab_orig,
                b.nr_titulo nr_seq_tab_compl,
                51 nr_seq_info_ctb,
                b.cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    pls_titulo_rec_liq_mens         c,
                titulo_receber                  b,
                titulo_receber_liq              a
        where   a.nr_titulo                     = b.nr_titulo
        and     a.nr_titulo                     = c.nr_titulo
        and     a.nr_sequencia                  = c.nr_seq_baixa
        and     c.nr_lote_contabil              = nr_lote_contabil_p
        and     ie_contab_classif_mens_w        = 'S'
        
union all

        select  37 ie_union,
                a.nr_titulo,
                cr_obter_valor_liquido_tit(a.nr_titulo,b.vl_recebido),
                b.nr_seq_trans_fin,
                a.dt_contabil,
                0,
                'VL_BAIXA_SEM_TRIB',
                0,
                coalesce(a.dt_contabil,dt_contabil_w),
                '' cd_conta_contabil,
                0 nr_seq_retorno,
                0 nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                0 nr_seq_movto_trans_fin,
                a.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                '',
                '' ie_acao,
                0 nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                (null)::numeric  nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                a.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                0 nr_seq_titulo_rec_liq,
                b.nr_seq_cobranca,
                'TITULO_RECEBER_LIQ',
                a.nr_titulo,
                b.nr_sequencia,
                14 nr_seq_info_ctb,
                a.cd_estabelecimento,
                CASE WHEN coalesce(b.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                a.nr_seq_proj_rec,
                b.cd_moeda
        from    titulo_receber a,
                titulo_receber_liq b
        where   b.nr_Lote_contabil              = nr_lote_contabil_p
        and     b.nr_titulo     = a.nr_titulo
        and     (cr_obter_valor_liquido_tit(a.nr_titulo,a.vl_titulo) IS NOT NULL AND (cr_obter_valor_liquido_tit(a.nr_titulo,a.vl_titulo))::text <> '')
        
union all

        -- contabilizar glosa detalhadamente segundo repasse para terceiros   INICIO
        select  38 ie_union,
                a.nr_titulo,
                (g.vl_glosa * (pcr.tx_procedimento/100)),
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_GLOSA_CRIT_REPASSE',
                0 cd_centro_custo,
                a.dt_recebimento,
                '' cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                a.nr_sequencia nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_RECEBER_LIQ',
                g.nr_sequencia nr_seq_tab_orig,
                b.nr_titulo nr_seq_tab_compl,
                52 nr_seq_info_ctb,
                null cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    convenio_retorno_glosa g,
                convenio_retorno_item i,
                titulo_receber b,
                titulo_receber_liq a,
                procedimento_repasse pr,
                proc_criterio_repasse pcr
        where   i.nr_sequencia = g.nr_seq_ret_item
        and     i.nr_titulo = b.nr_titulo
        and     a.nr_titulo = b.nr_titulo
        and     g.vl_glosa > 0
        and     g.nr_seq_propaci        = pr.nr_seq_procedimento
        and     pr.nr_seq_criterio      = pcr.nr_sequencia
        and     a.nr_lote_contabil      = nr_lote_contabil_p
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and     coalesce(ie_lib_caixa, 'S') = 'S'
        and     ie_contab_glosa_crit_w = 'S'
        
union all

        select  39 ie_union,
                a.nr_titulo,
                (g.vl_glosa * (mcr.tx_repasse/100)),
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_GLOSA_CRIT_REPASSE',
                0 cd_centro_custo,
                a.dt_recebimento,
                '' cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                a.nr_sequencia nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_RECEBER_LIQ',
                g.nr_sequencia nr_seq_tab_orig,
                b.nr_titulo nr_seq_tab_compl,
                52 nr_seq_info_ctb,
                null cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    convenio_retorno_glosa g,
                convenio_retorno_item i,
                titulo_receber b,
                titulo_receber_liq a,
                material_atend_paciente map,
                mat_criterio_repasse mcr
        where   i.nr_sequencia = g.nr_seq_ret_item
        and     i.nr_titulo = b.nr_titulo
        and     a.nr_titulo = b.nr_titulo
        and     g.vl_glosa > 0
        and     g.nr_seq_matpaci        =  map.nr_sequencia
        and     map.nr_seq_mat_crit_repasse = mcr.nr_sequencia
        and     a.nr_lote_contabil      = nr_lote_contabil_p
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and     coalesce(ie_lib_caixa, 'S') = 'S'
        and     ie_contab_glosa_crit_w = 'S'
        
union all

        select  40 ie_union,
                a.nr_titulo,
                (g.vl_glosa * ((100 - pcr.tx_PROCEDIMENTO)/100)),
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_GLOSA_CRIT_HOSP',
                0 cd_centro_custo,
                a.dt_recebimento,
                '' cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                a.nr_sequencia nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_RECEBER_LIQ',
                g.nr_sequencia nr_seq_tab_orig,
                b.nr_titulo nr_seq_tab_compl,
                52 nr_seq_info_ctb,
                null cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    convenio_retorno_glosa g,
                convenio_retorno_item i,
                titulo_receber b,
                titulo_receber_liq a,
                procedimento_repasse pr,
                proc_criterio_repasse pcr
        where   i.nr_sequencia = g.nr_seq_ret_item
        and     i.nr_titulo = b.nr_titulo
        and     a.nr_titulo = b.nr_titulo
        and     g.vl_glosa > 0
        and     g.nr_seq_propaci        = pr.nr_seq_Procedimento
        and     pr.nr_seq_criterio      = pcr.nr_sequencia
        and     a.nr_lote_contabil      = nr_lote_contabil_p
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and     coalesce(ie_lib_caixa, 'S') = 'S'
        and     ie_contab_glosa_crit_w = 'S'
        
union all

        select  41 ie_union,
                a.nr_titulo,
                (g.vl_glosa * ((100 - mcr.tx_repasse)/100)),
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_GLOSA_CRIT_HOSP',
                0 cd_centro_custo,
                a.dt_recebimento,
                '' cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                (null)::numeric  nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                a.nr_sequencia nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_RECEBER_LIQ',
                g.nr_sequencia nr_seq_tab_orig,
                b.nr_titulo nr_seq_tab_compl,
                52 nr_seq_info_ctb,
                null cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    convenio_retorno_glosa g,
                convenio_retorno_item i,
                titulo_receber b,
                titulo_receber_liq a,
                material_atend_paciente map,
                mat_criterio_repasse mcr
        where   i.nr_sequencia  = g.nr_seq_ret_item
        and     i.nr_titulo     = b.nr_titulo
        and     a.nr_titulo     = b.nr_titulo
        and     g.vl_glosa > 0
        and     g.nr_seq_matpaci        =  map.nr_sequencia
        and     map.nr_seq_mat_crit_repasse = mcr.nr_sequencia
        and     a.nr_lote_contabil      = nr_lote_contabil_p
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and     coalesce(ie_lib_caixa, 'S') = 'S'
        and     ie_contab_glosa_crit_w = 'S'
        
union all

        select  42 ie_union,
                a.nr_titulo,
                CASE WHEN a.ie_acao='I' THEN  a.vl_recebido + a.vl_descontos + vl_juros + vl_multa  ELSE a.vl_recebido + a.vl_descontos + vl_juros + vl_multa * -1 END ,
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_RECEBIDO_TOTAL',
                0 cd_centro_custo,
                a.dt_recebimento,
                '' cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                CASE WHEN ie_prod_classif_baixa_w='S' THEN (obter_prod_financ_tit_liq_cc(a.nr_titulo,a.nr_sequencia))::numeric   ELSE (null)::numeric  END  nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                a.nr_sequencia nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_RECEBER_LIQ',
                b.nr_titulo nr_seq_tab_orig,
                a.nr_sequencia nr_seq_tab_compl,
                14 nr_seq_info_ctb,
                null cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    titulo_receber b,
                titulo_receber_liq a
        where   a.nr_lote_contabil              = nr_lote_contabil_p
        and     a.vl_recebido                   <> 0
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        and     a.nr_titulo                     = b.nr_titulo
        /*and   b.cd_estabelecimento            = cd_estabelecimento_w*/

        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and     coalesce(ie_lib_caixa, 'S')          = 'S'
        and     ie_contab_rec_classif_w         = 'N'
        
union all

        select  43 ie_union,
                a.nr_titulo,
                CASE WHEN a.ie_acao='I' THEN  x.vl_recebido  ELSE x.vl_recebido * -1 END ,
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_FATURAMENTO_OPS',
                x.cd_centro_custo,
                a.dt_recebimento,
                x.cd_conta_contabil cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                null cd_conta_deb_pls,
                null cd_conta_rec_pls,
                null cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                x.nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                0 vl_antecipacao_mens,
                null ie_lote_antecip_pls,
                null dt_referencia_pls_mens,
                a.nr_sequencia,
                null nr_seq_nota_credito,
                x.nr_sequencia nr_seq_liq_cc,
                CASE WHEN x.ie_lote_pro_rata='BA' THEN x.ie_lote_pro_rata  ELSE null END ,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_RECEBER_LIQ_CC',
                x.nr_sequencia nr_seq_tab_orig,
                a.nr_sequencia nr_seq_tab_compl,
                14 nr_seq_info_ctb,
                null cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    titulo_rec_liq_cc       x,
                titulo_receber          b,
                titulo_receber_liq      a
        where   a.nr_lote_contabil      = nr_lote_contabil_p
        and     x.vl_recebido           <> 0
        and     a.nr_titulo             = b.nr_titulo
        and     a.nr_titulo             = x.nr_titulo
        and     a.nr_sequencia          = x.nr_seq_baixa
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and     ((ie_origem_classif = 'FO') or (b.ie_origem_titulo = 13 and (not exists (select 1 from pls_fatura w where (w.nr_titulo = b.nr_titulo or w.nr_titulo_ndc = b.nr_titulo)
                ))))
        
union all

        select  44 ie_union,
                a.nr_titulo,
                CASE WHEN a.ie_acao='I' THEN  c.vl_perdas  ELSE c.vl_perdas * -1 END ,
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_PERDAS',
                coalesce(c.cd_centro_custo,0),
                a.dt_recebimento,
                coalesce(c.cd_conta_contabil,''),
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                '' cd_conta_deb_pls,
                '' cd_conta_rec_pls,
                (null)::numeric  cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                coalesce(c.nr_seq_produto,(null)::numeric ) ,--
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                (null)::numeric  vl_antecipacao_mens,
                to_char(null) ie_lote_antecip_pls,
                to_date(null) dt_referencia_pls_mens,
                a.nr_sequencia nr_seq_baixa,
                null nr_seq_nota_credito,
                null nr_seq_liq_cc,
                null ie_lote_pro_rata,
                null cd_tributo,
                b.ie_origem_titulo,
                to_char(null) ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_REC_LIQ_CC' nm_tabela,
                a.nr_titulo nr_seq_tab_orig,
                c.nr_sequencia nr_seq_tab_compl,
                14 nr_seq_info_ctb,
                coalesce(CASE WHEN ie_ctb_estab_centro_w='S' THEN c.cd_estab_centro_custo  ELSE null END , b.cd_estabelecimento) cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        from    titulo_rec_liq_cc c,
                titulo_receber b,
                titulo_receber_liq a
        where   a.nr_lote_contabil      = nr_lote_contabil_p
        and     coalesce(c.vl_perdas,0)      <> 0
        and     (a.nr_seq_trans_fin IS NOT NULL AND a.nr_seq_trans_fin::text <> '')
        and     a.nr_titulo             = b.nr_titulo
        and     a.nr_titulo             = c.nr_titulo
        and     a.nr_sequencia          = c.nr_seq_baixa
        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
        and     coalesce(ie_lib_caixa, 'S') = 'S'
        
union all

        select  45 ie_union,
                a.nr_titulo,
                coalesce(x.vl_recebido_estrang,a.vl_recebido_estrang),
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_RECEBIDO_ESTRANG',
                x.cd_centro_custo,
                a.dt_recebimento,
                x.cd_conta_rec_antecip cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                x.cd_conta_deb_pls,
                x.cd_conta_rec_pls,
                x.cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                x.nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                x.vl_antecipacao_mens,
                'B' ie_lote_antecip_pls,
                a.dt_referencia_pls_mens,
                a.nr_sequencia,
                null nr_seq_nota_credito,
                x.nr_sequencia nr_seq_liq_cc,
                CASE WHEN x.ie_lote_pro_rata='BA' THEN x.ie_lote_pro_rata  ELSE null END ,
                null cd_tributo,
                b.ie_origem_titulo,
                '' ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_REC_LIQ_CC',
                x.nr_sequencia nr_seq_tab_orig,
                a.nr_sequencia nr_seq_tab_compl,
                49 nr_seq_info_ctb,
                coalesce(CASE WHEN ie_ctb_estab_centro_w='S' THEN x.cd_estab_centro_custo  ELSE null END , b.cd_estabelecimento) cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        FROM titulo_receber b, titulo_receber_liq a
LEFT OUTER JOIN titulo_rec_liq_cc x ON (a.nr_titulo = x.nr_titulo AND a.nr_sequencia = x.nr_seq_baixa)
WHERE a.nr_titulo                     = b.nr_titulo   and a.nr_lote_contabil              = nr_lote_contabil_p and coalesce(coalesce(x.vl_recebido_estrang,a.vl_recebido_estrang),0) <> 0
         
union all

        select  46 ie_union,
                a.nr_titulo,
                coalesce(x.vl_complemento,a.vl_complemento),
                a.nr_seq_trans_fin,
                a.dt_recebimento,
                a.nr_seq_conta_banco,
                'VL_MOEDA_COMPLEMENTAR',
                x.cd_centro_custo,
                a.dt_recebimento,
                x.cd_conta_rec_antecip cd_conta_contabil,
                a.nr_seq_retorno,
                a.nr_seq_ret_item,
                x.cd_conta_deb_pls,
                x.cd_conta_rec_pls,
                x.cd_historico_pls,
                a.nr_seq_movto_trans_fin,
                b.ds_observacao_titulo,
                '' ds_comprovante,
                '' nr_autorizacao,
                x.nr_seq_produto,
                a.ds_observacao,
                a.ie_acao,
                a.nr_adiantamento,
                null nr_seq_movto_cartao_cr,
                x.vl_antecipacao_mens,
                'B' ie_lote_antecip_pls,
                a.dt_referencia_pls_mens,
                a.nr_sequencia,
                null nr_seq_nota_credito,
                x.nr_sequencia nr_seq_liq_cc,
                CASE WHEN x.ie_lote_pro_rata='BA' THEN x.ie_lote_pro_rata  ELSE null END ,
                null cd_tributo,
                b.ie_origem_titulo,
                '' ds_obs_movto_cartao_baixa,
                null nr_seq_propaci_partic,
                a.nr_sequencia nr_seq_titulo_rec_liq,
                a.nr_seq_cobranca,
                'TITULO_REC_LIQ_CC',
                x.nr_sequencia nr_seq_tab_orig,
                a.nr_sequencia nr_seq_tab_compl,
                49 nr_seq_info_ctb,
                coalesce(CASE WHEN ie_ctb_estab_centro_w='S' THEN x.cd_estab_centro_custo  ELSE null END , b.cd_estabelecimento) cd_estabelecimento,
                CASE WHEN coalesce(a.nr_seq_liq_origem::text, '') = '' THEN 'N'  ELSE 'S' END  ie_estorno,
                b.nr_seq_proj_rec,
                a.cd_moeda
        FROM titulo_receber b, titulo_receber_liq a
LEFT OUTER JOIN titulo_rec_liq_cc x ON (a.nr_titulo = x.nr_titulo AND a.nr_sequencia = x.nr_seq_baixa)
WHERE a.nr_titulo             = b.nr_titulo   and a.nr_lote_contabil      = nr_lote_contabil_p and coalesce(coalesce(x.vl_complemento,a.vl_complemento),0)   <> 0;

c020 CURSOR FOR
        SELECT  1 ie_tipo,
                a.nr_titulo,
                b.cd_convenio_parametro,
                a.cd_estabelecimento
        from    conta_paciente b,
                titulo_receber a
        where   a.nr_interno_conta      = b.nr_interno_conta
        and     a.cd_estabelecimento    <> cd_estabelecimento_w
        and     a.nr_lote_contabil      = nr_lote_contabil_p

union

        SELECT  distinct
                2 ie_tipo,
                c.nr_titulo,
                b.cd_convenio_parametro,
                a.cd_estabelecimento
        from    conta_paciente b,
                titulo_receber_liq c,
                titulo_receber a
        where   a.nr_interno_conta      = b.nr_interno_conta
        and     a.nr_titulo             = c.nr_titulo
        and     a.cd_estabelecimento    <> cd_estabelecimento_w
        and     c.nr_lote_contabil      = nr_lote_contabil_p
        
union

        select  3 ie_tipo,
                a.nr_titulo,
                b.cd_convenio,
                a.cd_estabelecimento
        from    protocolo_convenio b,
                titulo_receber a
        where   a.nr_seq_protocolo      = b.nr_seq_protocolo
        and     a.cd_estabelecimento    <> cd_estabelecimento_w
        and     a.nr_lote_contabil      = nr_lote_contabil_p
        
union

        select  distinct
                4 ie_tipo,
                c.nr_titulo,
                b.cd_convenio,
                a.cd_estabelecimento
        from    protocolo_convenio b,
                titulo_receber_liq c,
                titulo_receber a
        where   a.nr_seq_protocolo      = b.nr_seq_protocolo
        and     a.nr_titulo             = c.nr_titulo
        and     a.cd_estabelecimento    <> cd_estabelecimento_w
        and     c.nr_lote_contabil      = nr_lote_contabil_p;

vet02   c020%RowType;


BEGIN
/*Validacao para impedir a geracao em lotes incorretos*/

if (ie_exclusao_p <> 'S') then
        select b.cd_tipo_lote_contabil
        into STRICT cd_tipo_lote_contabil_w
        from lote_contabil b
        where b.nr_lote_contabil = nr_lote_contabil_p;
        if (cd_tipo_lote_contabil_w <> 5) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(261346);
        end if;
end if;
delete
from    lote_contabil_log
where   nr_lote_contabil = nr_lote_contabil_p
and     cd_log_lote in (9,10);
commit;

select  dt_referencia,
        cd_estabelecimento,
        cd_tipo_lote_contabil
into STRICT    dt_contabil_w,
        cd_estabelecimento_w,
        cd_tipo_lote_contabil_w
from    lote_contabil
where   nr_lote_contabil        = nr_lote_contabil_p;

dt_contabil_wb := dt_contabil_w;
dt_contab_lote_w        := dt_contabil_w;
cd_empresa_w            := obter_empresa_estab(cd_estabelecimento_w);
dt_referencia_mesano_w  := somente_numero(to_char(dt_contabil_w, 'MMYYYY'));

begin
select  ie_contab_analitico,
        ie_devedor_hist_contab,
        ie_nf_hist_contab,
        coalesce(ie_cc_glosa,'N'),
        ie_gerar_contab_reg_tit,
        ie_dt_contab_cr,
        coalesce(ie_contab_tit_cancelado, 'S'),
        coalesce(IE_CONTAB_REC_CLASSIF,'N'),
        coalesce(ie_contab_cartao_cr, 'CB'),
        coalesce(ie_contab_classif_tit_rec,'N'),
        coalesce(ie_dt_contab_glosa,'R'),
        coalesce(ie_contab_prov_contrato,'N'),
        coalesce(ie_contab_vl_estorno,'N'),
        coalesce(ie_contab_glosa_detalhe,'N'),
        coalesce(ie_contab_curto_prazo,'N'),
        coalesce(ie_movto_cartao_estab,'N'),
        coalesce(ie_prod_classif_baixa,'N'),
        coalesce(ie_contab_pj_convenio,'S'),
        coalesce(ie_contab_glosa_crit,'N'),
        coalesce(ie_contab_tit_desdob, 'S'),
        coalesce(ie_ctb_estab_centro,'N')
into STRICT    ie_contab_analitico_w,
        ie_devedor_hist_contab_w,
        ie_nf_hist_contab_w,
        ie_cc_glosa_w,
        ie_gerar_contab_reg_tit_w,
        ie_dt_contab_cr_w,
        ie_contab_tit_cancelado_w,
        ie_contab_rec_classif_w,
        ie_contab_cartao_cr_w,
        ie_contab_classif_tit_rec_w,
        ie_dt_contab_glosa_w,
        ie_contab_prov_contrato_w,
        ie_contab_vl_estorno_w,
        ie_contab_glosa_detalhe_w,
        ie_contab_curto_prazo_w,
        ie_movto_cartao_estab_w,
        ie_prod_classif_baixa_w,
        ie_contab_pj_convenio_w,
        ie_contab_glosa_crit_w,
        ie_contab_tit_desdob_w,
        ie_ctb_estab_centro_w
from    parametro_contas_receber
where   cd_estabelecimento      = cd_estabelecimento_w;
exception
        when no_data_found then
        /*'Nao foram cadastrados os parametros do contas a receber.#@#@');*/

        CALL wheb_mensagem_pck.exibir_mensagem_abort(183315);
end;

select  coalesce(max(ie_contab_baixa_dev_cr), 'S')
into STRICT    ie_contab_baixa_dev_cr_w
from    pls_visible_false
where   cd_estabelecimento = cd_estabelecimento_w;

begin
select  ie_contab_cr
into STRICT    ie_contab_cr_w
from    parametro_tesouraria
where   cd_estabelecimento              = cd_estabelecimento_w;
exception
        when no_data_found then
        /*'Nao foram cadastrados os parametros da tesouraria*/

        CALL wheb_mensagem_pck.exibir_mensagem_abort(183316);
end;


begin
select  ie_contab_cr_no_cb
into STRICT    ie_contab_cr_no_cb_w
from    parametro_controle_banc
where   cd_estabelecimento              = cd_estabelecimento_w;
exception
        when no_data_found then
        /*Nao foram cadastrados os parametros do controle bancario.*/

        CALL wheb_mensagem_pck.exibir_mensagem_abort(183317);
end;

/* Identifica o tipo de titulos a receber
P = Somente de provisao
B = Somente de baixas
A = Ambos*/
select  coalesce(max(ds_valor_parametro),'A')
into STRICT    ie_tipo_conta_w
from    lote_contabil_parametro
where   nr_lote_contabil        = nr_lote_contabil_p
and     nr_seq_parametro        = 1;
if (ie_tipo_conta_w not in ('P','B','A')) then
        /*Se informado, o tipo de conta deve ser P, B ou A'*/

        CALL wheb_mensagem_pck.exibir_mensagem_abort(183318);
end if;

select  coalesce(max(vl_parametro),0)
into STRICT    nr_seq_classif_w
from    lote_contabil_parametro
where   nr_lote_contabil        = nr_lote_contabil_p
and     nr_seq_parametro        = 2;

/* Francisco - 28/05/2010 - OS  220155 */

select  coalesce(max(a.ie_contab_baixas_pro_rata),'N')
into STRICT    ie_contab_baixas_pro_rata_w
from    pls_parametros_cr a
where   a.cd_estabelecimento    = cd_estabelecimento_w;

/* Alterado para apenas titulos de origem OPS - Mensalidade considerarem o parametro ie_tipo_lote_baixa_mens_w.
Titulos de mensalidades manuais ou importados nao considerarao o parametro, sendo contabilizados no Contas a Receber (OS 1228746)  */
select  coalesce(max(ie_tipo_lote_baixa_mens),'CR')
into STRICT    ie_tipo_lote_baixa_mens_w
from    pls_parametro_contabil
where   cd_estabelecimento      = cd_estabelecimento_w;

select  coalesce(max(ie_contab_classif_mens),'N')
into STRICT    ie_contab_classif_mens_w
from    pls_parametro_contabil
where   cd_estabelecimento      = cd_estabelecimento_w;

select  max(coalesce(ie_processo_camara,'CO'))
into STRICT    ie_processo_camara_w
from    pls_parametros_camara
where   cd_estabelecimento      = cd_estabelecimento_w;
SELECT * FROM ctb_obter_regra_estab_dif(cd_estabelecimento_w, cd_tipo_lote_contabil_w, null, ie_permite_estab_dif_w, cd_conta_transitoria_w, cd_historico_ct_w) INTO STRICT ie_permite_estab_dif_w, cd_conta_transitoria_w, cd_historico_ct_w;

if (ie_exclusao_p  = 'S') then
        begin
        CALL wheb_usuario_pck.set_ie_lote_contabil('S');

        CALL ctb_regras_contabil.comprovante_cache_storage(nr_lote_contabil_p, nm_usuario_p);
        delete  from movimento_contabil
        where   nr_lote_contabil        = nr_lote_contabil_p;
        commit;

        update  lote_contabil
        set     vl_credito              = 0,
                vl_debito               = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update  titulo_receber_liq
        set     nr_lote_contabil        = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update  alteracao_valor
        set     nr_lote_contabil        = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update  titulo_receber
        set     nr_lote_contabil        = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update  titulo_receber
        set     nr_lote_contabil_curto_prazo    = 0
        where   nr_lote_contabil_curto_prazo    = nr_lote_contabil_p;

        update  alteracao_portador
        set     nr_lote_contabil        = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update  movto_cartao_cr_baixa
        set     nr_lote_contabil        = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        /* Francisco - OS 203923 - 03/05/2010 - Contabilizar antecipacoes OPS */

        update  titulo_receber_liq
        set     nr_lote_contab_antecip  = 0
        where   nr_lote_contab_antecip  = nr_lote_contabil_p;

        /* Francisco - 26/05/2010 -  220155 */

        update  titulo_receber_liq a
        set     nr_lote_contab_pro_rata = 0
        where   nr_lote_contab_pro_rata = nr_lote_contabil_p;

        update  titulo_receber_trib
        set     nr_lote_contabil        = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update  movto_banco_pend_baixa
        set     nr_lote_contabil        = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update  pls_titulo_rec_liq_mens
        set     nr_lote_contabil        = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;
        CALL wheb_usuario_pck.set_ie_lote_contabil('N');
        exception
        when others then
                CALL wheb_usuario_pck.set_ie_lote_contabil('N');
                ds_erro_temp_w  := sqlerrm(SQLSTATE);
                CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_erro_temp_w);
        end;
else
        begin
        CALL wheb_usuario_pck.set_ie_lote_contabil('S');

        --Obter_Valor_Dinamico('Truncate Table W_Movimento_Contabil', vl_retorno_w);
        delete  FROM w_movimento_contabil
        where   nr_lote_contabil = nr_lote_contabil_p;
        commit;

        update  titulo_receber_liq a
        set     nr_lote_contabil                = nr_lote_contabil_p
        where   coalesce(nr_lote_contabil,0)         = 0
        and     coalesce(ie_lib_caixa, 'S') = 'S'
        and     dt_recebimento between trunc(dt_contabil_w, 'month') and Fim_Mes(dt_contabil_w)
        and     dt_recebimento  <= fim_dia(dt_contabil_w)
        and (ie_tipo_conta_w in ('B','A'))
        and     coalesce(nr_seq_lote_enc_contas::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
        and     coalesce(nr_seq_pls_lote_camara::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
        and     not exists (SELECT 1
                                from    titulo_receber  x
                                where   a.nr_titulo             = x.nr_titulo
                                and     x.ie_origem_titulo      = '8'
                                and     (x.nr_seq_ptu_fatura IS NOT NULL AND x.nr_seq_ptu_fatura::text <> ''))
        and     not exists      (select 1
                                from    titulo_receber  x
                                where   a.nr_titulo             = x.nr_titulo
                                and     x.ie_origem_titulo      = '11'
                                and     ((x.nr_seq_pls_lote_contest IS NOT NULL AND x.nr_seq_pls_lote_contest::text <> '') or (x.nr_seq_pls_lote_disc IS NOT NULL AND x.nr_seq_pls_lote_disc::text <> '')))
        and     not exists (select 1
                                from    pls_lote_camara_comp x
                                where   x.nr_sequencia          = a.nr_seq_pls_lote_camara
                                and     ie_processo_camara_w    = 'CA')
        and     exists  (select 1
                        from    estabelecimento e,
                                titulo_receber b
                        where   a.nr_titulo             = b.nr_titulo
                        and     b.cd_estabelecimento    = e.cd_estabelecimento
                        and     e.cd_empresa            = cd_empresa_w
                        and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
                        and     ((b.ie_situacao         <> '3' or ie_contab_tit_cancelado_w = 'S') or (b.ie_situacao          = '3' and a.vl_rec_maior <> 0))
                        and     (coalesce(b.ie_pls,'N') = 'N' or ((ie_tipo_lote_baixa_mens_w = 'CR' or coalesce(b.nr_seq_mensalidade,0) = 0) or (b.nr_seq_lote_enc_contas IS NOT NULL AND b.nr_seq_lote_enc_contas::text <> ''))));

        commit;

        if (ie_contab_classif_mens_w = 'S') then
                update  pls_titulo_rec_liq_mens a
                set     nr_lote_contabil        = nr_lote_contabil_p
                where   a.nr_lote_contabil      = 0
                and     trunc(a.dt_contabil, 'month')   = trunc(dt_contabil_w, 'month')
                and     trunc(a.dt_contabil,'dd')       <= trunc(dt_contabil_w, 'dd')
                and     (exists (SELECT 1
                                from    titulo_receber_liq x
                                where   x.nr_titulo             = a.nr_titulo
                                and     x.nr_sequencia          = a.nr_seq_baixa
                                and     x.nr_lote_contabil      = nr_lote_contabil_p) or
                        exists  (select 1
                                from    pls_titulo_rec_liq_mens x,
                                        titulo_receber_liq      y
                                where   ((x.ie_tipo_lancamento  = 'EA' and
                                        x.nr_lote_contabil      = 0) or (x.nr_lote_contabil     <> a.nr_lote_contabil and
                                        x.nr_lote_contabil      <> 0))
                                and     x.nr_seq_baixa          = y.nr_sequencia
                                and     x.nr_seq_baixa          = a.nr_seq_baixa
                                and     x.nr_titulo             = y.nr_titulo
                                and     x.nr_titulo             = a.nr_titulo) or
                        exists (       SELECT  1
                                        from    titulo_receber_liq x
                                        where   x.nr_titulo                     = a.nr_titulo
                                        and     x.nr_sequencia                  = a.nr_seq_baixa
                                        and     x.nr_lote_contabil              = 0
                                        and     trunc(dt_recebimento,'month')   <= trunc(dt_contabil_w, 'month')))
                and     exists  (select 1
                                from    titulo_receber_liq      z
                                where   z.nr_titulo     = a.nr_titulo
                                and     z.nr_sequencia  = a.nr_seq_baixa
                                --and   z.dt_recebimento between trunc(dt_contabil_w, 'month') and Fim_Mes(dt_contabil_w)
                                and     z.dt_recebimento <= fim_dia(dt_contabil_w)
                                and (ie_tipo_conta_w in ('B','A'))
                                and     coalesce(z.nr_seq_lote_enc_contas::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                                and     coalesce(z.nr_seq_pls_lote_camara::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                                and     not exists (select 1
                                                        from    titulo_receber  x
                                                        where   z.nr_titulo             = x.nr_titulo
                                                        and     x.ie_origem_titulo      = '8'
                                                        and     (x.nr_seq_ptu_fatura IS NOT NULL AND x.nr_seq_ptu_fatura::text <> ''))
                                and     not exists      (select 1
                                                        from    titulo_receber  x
                                                        where   z.nr_titulo             = x.nr_titulo
                                                        and     x.ie_origem_titulo      = '11'
                                                        and     ((x.nr_seq_pls_lote_contest IS NOT NULL AND x.nr_seq_pls_lote_contest::text <> '') or (x.nr_seq_pls_lote_disc IS NOT NULL AND x.nr_seq_pls_lote_disc::text <> '')))
                                and     exists  (select 1
                                                from    titulo_receber b
                                                where   z.nr_titulo             = b.nr_titulo
                                                and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
                                                and (b.ie_situacao          <> '3' or ie_contab_tit_cancelado_w = 'S')
                                                and (coalesce(b.ie_pls,'N') = 'N' or (ie_tipo_lote_baixa_mens_w = 'CR' or coalesce(b.nr_seq_mensalidade,0) = 0))))
                and     ((ie_contab_baixa_dev_cr_w = 'S') or (not exists (   select  1
                                                                                from    titulo_receber_liq c
                                                                                where   c.nr_titulo             = a.nr_titulo
                                                                                and     c.nr_sequencia          = a.nr_seq_baixa
                                                                                and     (c.nr_seq_resc_fin IS NOT NULL AND c.nr_seq_resc_fin::text <> '')
                                                                                and     coalesce(c.vl_descontos, 0)  <> 0)));
                commit;
        end if;

        if (ie_contab_baixas_pro_rata_w = 'S') or (ie_contab_baixas_pro_rata_w = 'A') then
                /* Francisco - OS 203923 - 03/05/2010 - Contabilizar antecipacoes OPS */

                update  titulo_receber_liq a
                set     nr_lote_contab_antecip                  = nr_lote_contabil_p
                where   coalesce(nr_lote_contab_antecip,0)           = 0
                and     coalesce(ie_lib_caixa,'S')                   = 'S'
                and     (a.dt_antecipacao_pls_mens IS NOT NULL AND a.dt_antecipacao_pls_mens::text <> '')
                and     a.dt_antecipacao_pls_mens between trunc(dt_contabil_w, 'month') and Fim_Mes(dt_contabil_w)
                and     a.dt_antecipacao_pls_mens <= fim_dia(dt_contabil_w)
                and (ie_tipo_conta_w in ('B','A'))
                and     coalesce(nr_seq_lote_enc_contas::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                and     coalesce(nr_seq_pls_lote_camara::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                and     not exists (SELECT 1
                                        from    titulo_receber  x
                                        where   a.nr_titulo             = x.nr_titulo
                                        and     x.ie_origem_titulo      = '8'
                                        and     (x.nr_seq_ptu_fatura IS NOT NULL AND x.nr_seq_ptu_fatura::text <> ''))
                and     not exists      (select 1
                                        from    titulo_receber  x
                                        where   a.nr_titulo             = x.nr_titulo
                                        and     x.ie_origem_titulo      = '11'
                                        and     ((x.nr_seq_pls_lote_contest IS NOT NULL AND x.nr_seq_pls_lote_contest::text <> '') or (x.nr_seq_pls_lote_disc IS NOT NULL AND x.nr_seq_pls_lote_disc::text <> '')))
                and     exists (select  1
                                from    estabelecimento e,
                                        titulo_receber b
                                where   a.nr_titulo             = b.nr_titulo
                                and     b.cd_estabelecimento    = e.cd_estabelecimento
                                and     e.cd_empresa            = cd_empresa_w
                                and     ((ie_permite_estab_dif_w <> 'N') or (b.cd_estabelecimento       = cd_estabelecimento_w))
                                and (b.ie_situacao          <> '3' or ie_contab_tit_cancelado_w = 'S')
                                and (coalesce(b.ie_pls,'N') = 'N' or (ie_tipo_lote_baixa_mens_w = 'CR' or coalesce(b.nr_seq_mensalidade,0) = 0)));
                commit;
                /* Fim Francisco - OS 203923 - 03/05/2010 - Contabilizar antecipacoes OPS */

                /* Francisco - 26/05/2010 -  220155 */

                update  titulo_receber_liq a
                set     nr_lote_contab_pro_rata         = nr_lote_contabil_p
                where   coalesce(nr_lote_contab_pro_rata,0)          = 0
                and     coalesce(ie_lib_caixa,'S')                   = 'S'
                and     (a.dt_referencia_pls_mens IS NOT NULL AND a.dt_referencia_pls_mens::text <> '')
                and     a.dt_referencia_pls_mens between trunc(dt_contabil_w, 'month') and Fim_Mes(dt_contabil_w)
                and     a.dt_referencia_pls_mens        <= fim_dia(dt_contabil_w)
                and (ie_tipo_conta_w in ('B','A'))
                and     coalesce(nr_seq_lote_enc_contas::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                and     coalesce(nr_seq_pls_lote_camara::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                and     not exists (SELECT 1
                                        from    titulo_receber  x
                                        where   a.nr_titulo             = x.nr_titulo
                                        and     x.ie_origem_titulo      = '8'
                                        and     (x.nr_seq_ptu_fatura IS NOT NULL AND x.nr_seq_ptu_fatura::text <> ''))
                and     not exists      (select 1
                                        from    titulo_receber  x
                                        where   a.nr_titulo             = x.nr_titulo
                                        and     x.ie_origem_titulo      = '11'
                                        and     ((x.nr_seq_pls_lote_contest IS NOT NULL AND x.nr_seq_pls_lote_contest::text <> '') or (x.nr_seq_pls_lote_disc IS NOT NULL AND x.nr_seq_pls_lote_disc::text <> '')))
                and     exists (select  1
                                from    estabelecimento e,
                                        titulo_receber b
                                where   a.nr_titulo             = b.nr_titulo
                                and     b.cd_estabelecimento    = e.cd_estabelecimento
                                and     e.cd_empresa            = cd_empresa_w
                                and     b.cd_estabelecimento    = cd_estabelecimento_w
                                and (b.ie_situacao          <> '3' or ie_contab_tit_cancelado_w = 'S')
                                and (coalesce(b.ie_pls,'N') = 'N' or (ie_tipo_lote_baixa_mens_w = 'CR' or coalesce(b.nr_seq_mensalidade,0) = 0)));
                commit;
                /* Fim - * Francisco - 26/05/2010 -  220155 */

        end if;

        update  titulo_receber_liq a
        set     nr_seq_trans_fin                = obter_trans_tit_rec_liq(nr_titulo, nr_sequencia, cd_tipo_recebimento)
        where   nr_lote_contabil                = nr_lote_contabil_p
        and (ie_tipo_conta_w in ('B','A'))
        and     coalesce(ie_lib_caixa, 'S') = 'S'
        and     exists (SELECT 1
                        from    titulo_receber x
                        where   x.nr_titulo = a.nr_titulo
                        and     coalesce(ie_pls,'N') = 'N' or (ie_tipo_lote_baixa_mens_w = 'CR' or coalesce(x.nr_seq_mensalidade,0) = 0))
        and     coalesce(a.nr_seq_trans_fin::text, '') = ''
        and     coalesce(nr_seq_lote_enc_contas::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
        and     coalesce(nr_seq_pls_lote_camara::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
        and     not exists (select 1
                                from    titulo_receber  x
                                where   a.nr_titulo             = x.nr_titulo
                                and     x.ie_origem_titulo      = '8'
                                and     (x.nr_seq_ptu_fatura IS NOT NULL AND x.nr_seq_ptu_fatura::text <> ''))
        and     not exists      (select 1
                                from    titulo_receber  x
                                where   a.nr_titulo             = x.nr_titulo
                                and     x.ie_origem_titulo      = '11'
                                and     ((x.nr_seq_pls_lote_contest IS NOT NULL AND x.nr_seq_pls_lote_contest::text <> '') or (x.nr_seq_pls_lote_disc IS NOT NULL AND x.nr_seq_pls_lote_disc::text <> '')))
        and     ((nr_seq_classif_w = 0)
                or exists (select 1
                                from    titulo_rec_liq_cc c,
                                        produto_financeiro d
                                where   c.nr_seq_produto = d.nr_sequencia
                                and     a.nr_sequencia = c.nr_seq_baixa
                                and     a.nr_titulo = c.nr_titulo
                                and     d.nr_seq_classif = nr_seq_classif_w));
        commit;

/*      Edgar 16/01/2007 OS 43000 Nao contabilizar no CR se o valor vai ser contabilizado na Tesouraria */

        if (ie_contab_cr_w = 'S') then

                update  titulo_receber_liq a
                set     nr_lote_contabil        = 0
                where   nr_lote_contabil        = nr_lote_contabil_p
                and (ie_tipo_conta_w in ('B','A'))
                and     exists (SELECT 1
                                from    movto_trans_financ x
                                where   x.nr_seq_titulo_receber = a.nr_titulo)
                and ((a.nr_seq_caixa_rec IS NOT NULL AND a.nr_seq_caixa_rec::text <> '') or
                        exists (select 1
                                from    movto_trans_financ x
                                where   x.nr_sequencia  = a.nr_seq_movto_trans_fin
                                and     (x.nr_seq_caixa IS NOT NULL AND x.nr_seq_caixa::text <> '')) or
                        (a.nr_seq_trans_caixa IS NOT NULL AND a.nr_seq_trans_caixa::text <> ''))
                and     coalesce(nr_seq_lote_enc_contas::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                and     coalesce(nr_seq_pls_lote_camara::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                and     not exists (select 1
                                        from    titulo_receber  x
                                        where   a.nr_titulo             = x.nr_titulo
                                        and     x.ie_origem_titulo      = '8'
                                        and     (x.nr_seq_ptu_fatura IS NOT NULL AND x.nr_seq_ptu_fatura::text <> ''))
                and     not exists      (select 1
                                        from    titulo_receber  x
                                        where   a.nr_titulo             = x.nr_titulo
                                        and     x.ie_origem_titulo      = '11'
                                        and     ((x.nr_seq_pls_lote_contest IS NOT NULL AND x.nr_seq_pls_lote_contest::text <> '') or (x.nr_seq_pls_lote_disc IS NOT NULL AND x.nr_seq_pls_lote_disc::text <> '')));
                commit;

                if (ie_contab_baixas_pro_rata_w = 'S') then
                        /* Francisco - 03/05/2010 - OS 203923 */

                        update  titulo_receber_liq a
                        set     nr_lote_contab_antecip  = 0
                        where   nr_lote_contab_antecip  = nr_lote_contabil_p
                        and (ie_tipo_conta_w in ('B','A'))
                        and     exists (SELECT 1
                                        from            movto_trans_financ x
                                        where           x.nr_seq_titulo_receber = a.nr_titulo)
                        and ((a.nr_seq_caixa_rec IS NOT NULL AND a.nr_seq_caixa_rec::text <> '') or
                                exists (select 1
                                        from    movto_trans_financ x
                                        where   x.nr_sequencia  = a.nr_seq_movto_trans_fin
                                        and     (x.nr_seq_caixa IS NOT NULL AND x.nr_seq_caixa::text <> '')) or
                                (a.nr_seq_trans_caixa IS NOT NULL AND a.nr_seq_trans_caixa::text <> ''))
                        and     coalesce(nr_seq_lote_enc_contas::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                        and     coalesce(nr_seq_pls_lote_camara::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                        and     not exists (select 1
                                                from    titulo_receber  x
                                                where   a.nr_titulo             = x.nr_titulo
                                                and     x.ie_origem_titulo      = '8'
                                                and     (x.nr_seq_ptu_fatura IS NOT NULL AND x.nr_seq_ptu_fatura::text <> ''))
                        and     not exists      (select 1
                                                from    titulo_receber  x
                                                where   a.nr_titulo             = x.nr_titulo
                                                and     x.ie_origem_titulo      = '11'
                                                and     ((x.nr_seq_pls_lote_contest IS NOT NULL AND x.nr_seq_pls_lote_contest::text <> '') or (x.nr_seq_pls_lote_disc IS NOT NULL AND x.nr_seq_pls_lote_disc::text <> '')));

                        /* Francisco - 26/05/2010 -  220155 */

                        update  titulo_receber_liq a
                        set     nr_lote_contab_pro_rata = 0
                        where   nr_lote_contab_pro_rata = nr_lote_contabil_p
                        and (ie_tipo_conta_w in ('B','A'))
                        and     exists (SELECT 1
                                        from            movto_trans_financ x
                                        where           x.nr_seq_titulo_receber = a.nr_titulo)
                        and ((a.nr_seq_caixa_rec IS NOT NULL AND a.nr_seq_caixa_rec::text <> '') or
                                exists (select 1
                                        from    movto_trans_financ x
                                        where   x.nr_sequencia  = a.nr_seq_movto_trans_fin
                                        and     (x.nr_seq_caixa IS NOT NULL AND x.nr_seq_caixa::text <> '')) or
                                (a.nr_seq_trans_caixa IS NOT NULL AND a.nr_seq_trans_caixa::text <> ''))
                        and     coalesce(nr_seq_lote_enc_contas::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                        and     coalesce(nr_seq_pls_lote_camara::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                        and     not exists (select 1
                                                from    titulo_receber  x
                                                where   a.nr_titulo             = x.nr_titulo
                                                and     x.ie_origem_titulo      = '8'
                                                and     (x.nr_seq_ptu_fatura IS NOT NULL AND x.nr_seq_ptu_fatura::text <> ''))
                        and     not exists      (select 1
                                                from    titulo_receber  x
                                                where   a.nr_titulo             = x.nr_titulo
                                                and     x.ie_origem_titulo      = '11'
                                                and     ((x.nr_seq_pls_lote_contest IS NOT NULL AND x.nr_seq_pls_lote_contest::text <> '') or (x.nr_seq_pls_lote_disc IS NOT NULL AND x.nr_seq_pls_lote_disc::text <> '')));
                        commit;
                end if;
        end if;

/*      Edgar 27/05/2008 OS 93779 Nao contabilizar no CR se o valor vai ser contabilizado no CB */

        if (ie_contab_cr_no_cb_w = 'S') then
                update  titulo_receber_liq a
                set     nr_lote_contabil        = 0
                where   nr_lote_contabil        = nr_lote_contabil_p
                and (ie_tipo_conta_w in ('B','A'))
                and     (nr_seq_conta_banco IS NOT NULL AND nr_seq_conta_banco::text <> '')
                and     coalesce(nr_seq_lote_enc_contas::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                and     coalesce(nr_seq_pls_lote_camara::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                and     not exists (SELECT 1
                                        from    titulo_receber  x
                                        where   a.nr_titulo             = x.nr_titulo
                                        and     x.ie_origem_titulo      = '8'
                                        and     (x.nr_seq_ptu_fatura IS NOT NULL AND x.nr_seq_ptu_fatura::text <> ''))
                and     not exists      (select 1
                                        from    titulo_receber  x
                                        where   a.nr_titulo             = x.nr_titulo
                                        and     x.ie_origem_titulo      = '11'
                                        and     ((x.nr_seq_pls_lote_contest IS NOT NULL AND x.nr_seq_pls_lote_contest::text <> '') or (x.nr_seq_pls_lote_disc IS NOT NULL AND x.nr_seq_pls_lote_disc::text <> '')));
                commit;

                if (ie_contab_baixas_pro_rata_w = 'S') then
                        /* Francisco - 03/05/2010 - OS 203923 */

                        update  titulo_receber_liq a
                        set     nr_lote_contab_antecip  = 0
                        where   nr_lote_contab_antecip  = nr_lote_contabil_p
                        and (ie_tipo_conta_w in ('B','A'))
                        and     (nr_seq_conta_banco IS NOT NULL AND nr_seq_conta_banco::text <> '')
                        and     coalesce(nr_seq_lote_enc_contas::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                        and     coalesce(nr_seq_pls_lote_camara::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                        and     not exists (SELECT 1
                                                from    titulo_receber  x
                                                where   a.nr_titulo             = x.nr_titulo
                                                and     x.ie_origem_titulo      = '8'
                                                and     (x.nr_seq_ptu_fatura IS NOT NULL AND x.nr_seq_ptu_fatura::text <> ''))
                        and     not exists      (select 1
                                                from    titulo_receber  x
                                                where   a.nr_titulo             = x.nr_titulo
                                                and     x.ie_origem_titulo      = '11'
                                                and     ((x.nr_seq_pls_lote_contest IS NOT NULL AND x.nr_seq_pls_lote_contest::text <> '') or (x.nr_seq_pls_lote_disc IS NOT NULL AND x.nr_seq_pls_lote_disc::text <> '')));

                        /* Francisco - 26/05/2010 -  220155 */

                        update  titulo_receber_liq a
                        set     nr_lote_contab_pro_rata = 0
                        where   nr_lote_contab_pro_rata = nr_lote_contabil_p
                        and (ie_tipo_conta_w in ('B','A'))
                        and     (nr_seq_conta_banco IS NOT NULL AND nr_seq_conta_banco::text <> '')
                        and     coalesce(nr_seq_lote_enc_contas::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                        and     coalesce(nr_seq_pls_lote_camara::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                        and     not exists (SELECT 1
                                                from    titulo_receber  x
                                                where   a.nr_titulo             = x.nr_titulo
                                                and     x.ie_origem_titulo      = '8'
                                                and     (x.nr_seq_ptu_fatura IS NOT NULL AND x.nr_seq_ptu_fatura::text <> ''))
                        and     not exists      (select 1
                                                from    titulo_receber  x
                                                where   a.nr_titulo             = x.nr_titulo
                                                and     x.ie_origem_titulo      = '11'
                                                and     ((x.nr_seq_pls_lote_contest IS NOT NULL AND x.nr_seq_pls_lote_contest::text <> '') or (x.nr_seq_pls_lote_disc IS NOT NULL AND x.nr_seq_pls_lote_disc::text <> '')));
                        commit;
                end if;

                if (ie_contab_classif_mens_w = 'S') then
                        update  pls_titulo_rec_liq_mens a
                        set     nr_lote_contabil        = 0
                        where   nr_lote_contabil        = nr_lote_contabil_p
                        and (ie_tipo_conta_w in ('B','A'))
                        and     exists (SELECT  1
                                        from    titulo_receber_liq z
                                        where   z.nr_titulo     = a.nr_titulo
                                        and     z.nr_sequencia  = a.nr_seq_baixa
                                        and     (z.nr_seq_conta_banco IS NOT NULL AND z.nr_seq_conta_banco::text <> '')
                                        and     coalesce(z.nr_seq_lote_enc_contas::text, '') = ''
                                        and     coalesce(z.nr_seq_pls_lote_camara::text, '') = ''
                                        and     not exists (select 1
                                                                from    titulo_receber  x
                                                                where   z.nr_titulo             = x.nr_titulo
                                                                and     x.ie_origem_titulo      = '8'
                                                                and     (x.nr_seq_ptu_fatura IS NOT NULL AND x.nr_seq_ptu_fatura::text <> ''))
                                        and     not exists      (select 1
                                                                from    titulo_receber  x
                                                                where   z.nr_titulo             = x.nr_titulo
                                                                and     x.ie_origem_titulo      = '11'
                                                                and     ((x.nr_seq_pls_lote_contest IS NOT NULL AND x.nr_seq_pls_lote_contest::text <> '') or (x.nr_seq_pls_lote_disc IS NOT NULL AND x.nr_seq_pls_lote_disc::text <> ''))));
                        commit;
                end if;
        end if;

        /*Titulos com origem diferente de  7 - OPS - Escrituracao de quotas*/

        update  alteracao_valor a
        set     nr_lote_contabil        = nr_lote_contabil_p
        where   coalesce(nr_lote_contabil,0) = 0
        and     dt_alteracao between trunc(dt_contabil_w, 'month') and Fim_Mes(dt_contabil_w)
        and     dt_alteracao    <= fim_dia(dt_contabil_w)
        and (ie_tipo_conta_w in ('B','A'))
        and     exists (SELECT 1
                from    titulo_receber t
                where   a.nr_titulo             = t.nr_titulo
                and     t.cd_estabelecimento    = cd_estabelecimento_w
                and (t.ie_situacao  <> '3' or ie_contab_tit_cancelado_w = 'S')
                and     t.ie_origem_titulo <> 7);
        commit;

        /*Titulos com origem igual de  7 - OPS - Escrituracao de quotas*/

        update  alteracao_valor a
        set     nr_lote_contabil        = nr_lote_contabil_p
        where   coalesce(nr_lote_contabil,0) = 0
        and (ie_tipo_conta_w in ('B','A'))
        and     exists (SELECT 1
                from    titulo_receber t
                where   a.nr_titulo             = t.nr_titulo
                and     t.dt_liquidacao between trunc(dt_contabil_w, 'month') and Fim_Mes(dt_contabil_w)
                and     t.dt_liquidacao <= fim_dia(dt_contabil_w)
                and     t.cd_estabelecimento    = cd_estabelecimento_w
                and (t.ie_situacao  <> '3' or ie_contab_tit_cancelado_w = 'S')
                and     t.ie_origem_titulo = 7);
        commit;

        select  obter_se_compl_tipo_lote(cd_estabelecimento_w, cd_tipo_lote_contabil)
        into STRICT    ie_compl_hist_w
        from    lote_contabil
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update  titulo_receber a
        set     nr_lote_contabil                = nr_lote_contabil_p
        where   coalesce(nr_lote_contabil,0)         = 0
        and (ie_tipo_conta_w in ('P','A'))
        and     dt_contabil between trunc(dt_contabil_w, 'month') and Fim_Mes(dt_contabil_w)
        and     dt_contabil     <= fim_dia(dt_contabil_w)
        and     ie_gerar_contab_reg_tit_w       = 'S'
        and     ((ie_permite_estab_dif_w <> 'N') or (cd_estabelecimento = cd_estabelecimento_w))
        and     (nr_seq_trans_fin_contab IS NOT NULL AND nr_seq_trans_fin_contab::text <> '')
        and     ((ie_tipo_inclusao              = '1') or (ie_origem_titulo in ('12','10','17','4', '14')))
        and (ie_situacao            <> '3' or ie_contab_tit_cancelado_w = 'S')
        and     coalesce(nr_seq_lote_enc_contas::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
        and     coalesce(nr_seq_pls_lote_camara::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
        and     coalesce(nr_seq_ptu_fatura::text, '') = ''
        and     coalesce(nr_seq_pls_lote_contest::text, '') = ''
        and     coalesce(nr_seq_pls_lote_disc::text, '') = ''
        and     ie_origem_titulo        not in ('8','11')
        and     ((obter_se_tit_receber_desdob(a.nr_titulo) = 'N')
        or (ie_contab_tit_desdob_w = 'S'))
        and     exists ( SELECT  1
                        from    estabelecimento e
                        where   e.cd_estabelecimento    = a.cd_estabelecimento
                        and     e.cd_empresa            = cd_empresa_w);
        commit;

        if (ie_contab_prov_contrato_w = 'S') then
                update  titulo_receber a
                set     nr_lote_contabil                = nr_lote_contabil_p
                where   coalesce(nr_lote_contabil,0)         = 0
                and (ie_tipo_conta_w in ('P','A'))
                and     dt_contabil between trunc(dt_contabil_w, 'month') and Fim_Mes(dt_contabil_w)
                and     dt_contabil             <= fim_dia(dt_contabil_w)
                and     ie_gerar_contab_reg_tit_w       = 'S'
                and     ((ie_permite_estab_dif_w <> 'N') or (cd_estabelecimento = cd_estabelecimento_w))
                and     (nr_seq_trans_fin_contab IS NOT NULL AND nr_seq_trans_fin_contab::text <> '')
                and     (nr_seq_contrato IS NOT NULL AND nr_seq_contrato::text <> '')
                and (ie_situacao            <> '3' or ie_contab_tit_cancelado_w = 'S')
                and     coalesce(nr_seq_lote_enc_contas::text, '') = '' /* Francisco - 30/10/2010 - Vai entrar em outro lote */
                and     coalesce(nr_seq_ptu_fatura::text, '') = ''
                and     coalesce(nr_seq_pls_lote_contest::text, '') = ''
                and     coalesce(nr_seq_pls_lote_disc::text, '') = ''
                and     ie_origem_titulo        not in ('8','11')
                and     exists ( SELECT  1
                        from    estabelecimento e
                        where   e.cd_estabelecimento    = a.cd_estabelecimento
                        and     e.cd_empresa            = cd_empresa_w);
                commit;
        end if;

        update  titulo_receber_trib a
        set     nr_lote_contabil        = nr_lote_contabil_p
        where   nr_lote_contabil        = 0
        and (ie_tipo_conta_w in ('P','A'))
        and     ie_gerar_contab_reg_tit_w       = 'S'
        and     (nr_seq_trans_financ IS NOT NULL AND nr_seq_trans_financ::text <> '')
        and     trunc(coalesce(a.dt_contabil,dt_contabil_w),'month') = trunc(dt_contabil_w,'month')
        and     trunc(coalesce(a.dt_contabil,dt_contabil_w),'dd') <= trunc(dt_contabil_w,'dd')
        and     exists  (SELECT 1
                        from    estabelecimento y,
                                titulo_receber x
                        where   x.nr_titulo             = a.nr_titulo
                        and     x.cd_estabelecimento    = y.cd_estabelecimento
                        and     y.cd_empresa            = cd_empresa_w
                        and     x.dt_contabil between trunc(dt_contabil_w, 'month') and Fim_Mes(dt_contabil_w)
                        and     x.dt_contabil           <= fim_dia(dt_contabil_w)
                        and     ((ie_permite_estab_dif_w <> 'N') or (x.cd_estabelecimento       = cd_estabelecimento_w))
                        and (x.ie_situacao          <> '3' or ie_contab_tit_cancelado_w = 'S'));
        commit;

        -- Edgar 25/01/2007 OS 48982, contabilizar alteracao de portador
        update  alteracao_portador a
        set     a.nr_lote_contabil              = nr_lote_contabil_p
        where   coalesce(a.nr_lote_contabil,0)       = 0
        and     a.dt_alteracao between trunc(dt_contabil_w, 'month') and Fim_Mes(dt_contabil_w)
        and     a.dt_alteracao  <= fim_dia(dt_contabil_w)
        and (ie_tipo_conta_w in ('B','A'))
        and     exists (SELECT  1
                        from    titulo_receber x
                        where   x.nr_titulo              = a.nr_titulo
                        and     x.cd_estabelecimento = cd_estabelecimento_w
                        and (x.ie_situacao  <> '3' or ie_contab_tit_cancelado_w = 'S'));
        commit;

        update  movto_cartao_cr_baixa a
        set     a.nr_lote_contabil      = nr_lote_contabil_p
        where   coalesce(a.nr_lote_contabil,0)       = 0
        and     a.dt_baixa between trunc(dt_contabil_w, 'month') and Fim_Mes(dt_contabil_w)
        and     a.dt_baixa      <= fim_dia(dt_contabil_w)
        and     ie_contab_cartao_cr_w   = 'CR'
        and     exists (
                SELECT  1
                from    movto_cartao_cr b
                where   b.nr_sequencia          = a.nr_seq_movto
                and     ((b.cd_estabelecimento  = cd_estabelecimento_w)
                or (ie_movto_cartao_estab_w = 'S')));
        commit;

        update  movto_banco_pend_baixa  a
        set     a.nr_lote_contabil      = nr_lote_contabil_p
        where   a.dt_baixa between trunc(dt_contabil_w, 'month') and fim_mes(dt_contabil_w)
        and     a.dt_baixa      <= fim_dia(dt_contabil_w)
        /*and   a.nr_seq_cheque is not null*/

        and     (coalesce(a.nr_seq_trans_financ_baixa,a.nr_seq_trans_contab_cheque) IS NOT NULL AND (coalesce(a.nr_seq_trans_financ_baixa,a.nr_seq_trans_contab_cheque))::text <> '')
        and     coalesce(a.nr_lote_contabil,0) = 0
        and     exists (
                SELECT  c.cd_estabelecimento
                from    movto_banco_pend c
                where   c.nr_sequencia = a.nr_seq_movto_pend
                and     c.cd_estabelecimento = cd_estabelecimento_w

union all

                SELECT  c.cd_estabelecimento
                from    movto_banco_pend c
                where   c.nr_sequencia = a.nr_seq_movto_pend
                and     coalesce(c.cd_estabelecimento::text, '') = '');
        commit;

        if (ie_contab_curto_prazo_w = 'S') then

                update  titulo_receber t
                set     t.nr_lote_contabil_curto_prazo = nr_lote_contabil_p
                where   t.nr_lote_contabil      <> 0
                and     t.nr_lote_contabil      <> nr_lote_contabil_p
                and     coalesce(t.nr_lote_contabil_curto_prazo,0) = 0
                and     (t.nr_seq_tf_curto_prazo IS NOT NULL AND t.nr_seq_tf_curto_prazo::text <> '')
                and     dt_contabil_w > (SELECT l.dt_referencia from lote_contabil l where l.nr_lote_contabil = t.nr_lote_contabil)
                and     pkg_date_utils.add_month(t.dt_vencimento,-12,0) = dt_contabil_w;
                commit;
        end if;

        if (ie_permite_estab_dif_w <> 'N') then
                open c020;
                loop
                fetch c020 into
                        vet02;
                EXIT WHEN NOT FOUND; /* apply on c020 */
                        select  coalesce(max(ie_conta_transitoria),'N')
                        into STRICT    ie_conta_transitoria_w
                        from    convenio_estabelecimento
                        where   cd_estabelecimento      = vet02.cd_estabelecimento
                        and     cd_convenio             = vet02.cd_convenio_parametro;

                        if (ie_conta_transitoria_w = 'N') then

                                if (vet02.ie_tipo in (1,3)) then
                                        update  titulo_receber
                                        set     nr_lote_contabil        = 0
                                        where   nr_titulo               = vet02.nr_titulo
                                        and     nr_lote_contabil        = nr_lote_contabil_p;
                                elsif (vet02.ie_tipo in (2,4)) then
                                        update  titulo_receber_liq
                                        set     nr_lote_contabil        = 0
                                        where   nr_titulo               = vet02.nr_titulo
                                        and     nr_lote_contabil        = nr_lote_contabil_p;
                                end if;
                        end if;
                end loop;
                close c020;
        end if;
        CALL wheb_usuario_pck.set_ie_lote_contabil('N');
        exception
        when others then
                CALL wheb_usuario_pck.set_ie_lote_contabil('N');
                ds_erro_temp_w  := sqlerrm(SQLSTATE);
                CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_erro_temp_w);
        end;

        qt_contador_w   :=      0;

        nm_agrupador_w  := coalesce(trim(both obter_agrupador_contabil(5)),'NR_TITULO');

        open c010;
        loop
        fetch c010 into
                ie_union_w,
                nr_titulo_w , --1
                vl_transacao_w,--2
                nr_seq_trans_fin_w,--3
                dt_movimento_w,--4
                nr_seq_conta_banco_w,--5
                nm_atributo_w,--6
                cd_centro_custo_w,--7
                dt_contabil_tit_w,--8
                cd_conta_contabil_w,--9
                nr_seq_retorno_w,--10
                nr_seq_ret_item_w,--11
                cd_conta_deb_pls_w,--12
                cd_conta_rec_pls_w,--13
                cd_historico_pls_w,--14
                nr_seq_movto_trans_fin_w,--15
                ds_observacao_titulo_w,--16
                ds_comprovante_w,--17
                nr_autorizacao_w,--18
                nr_seq_produto_w,--19
                ds_observacao_liq_w,--20
                ie_acao_w,--21
                nr_adiantamento_w,--22
                nr_seq_movto_cartao_cr_w,--23
                vl_antecipacao_mens_w,--24
                ie_tipo_lote_pls_w,--25
                dt_referencia_pls_mens_w,--26
                nr_seq_baixa_w,--27
                nr_seq_nota_credito_w,--28
                nr_seq_liq_cc_w,--29
                ie_lote_pro_rata_w,--30
                cd_tributo_w,--31
                ie_origem_tit_rec_w,--32
                ds_obs_movto_cartao_baixa_w,--33
                nr_seq_propaci_partic_w,--34
                nr_seq_titulo_rec_liq_w,--35
                nr_seq_cob_escritural_w,--36
                nm_tabela_w,--37
                nr_seq_tab_orig_w,--38
                nr_seq_tab_compl_w,--39
                nr_seq_info_ctb_w,--40
                cd_estab_movimento_w,
                ie_estorno_w,--42
                nr_seq_proj_rec_w,
                cd_moeda_w;
        EXIT WHEN NOT FOUND; /* apply on c010 */
                dt_contabil_w       := dt_contabil_wb;
                ds_estorno_w        := '';
                cd_estab_banco_w    := null;

                if (coalesce(ie_estorno_w,'S') = 'S') then
                        ds_estorno_w := wheb_mensagem_pck.get_texto(728461);
                end if;

                ie_tipo_conta_glosa_w   := 'G';
                qt_contador_w                   := qt_contador_w + 1;
                nm_paciente_adiant_w    := null;
                ds_obs_adiantamento_w   := null;
                nr_recibo_adiant_w              := null;
                ds_obs_convenio_receb_w := null;

                if (coalesce(nr_seq_movto_trans_fin_w,0) <> 0) then
                        begin
                        select (nr_seq_caixa),
                                (nr_seq_caixa_od),
                                (nr_sequencia)
                        into STRICT    nr_seq_caixa_w,
                                nr_seq_caixa_od_w,
                                nr_seq_trans_financ_w
                        from    movto_trans_financ
                        where   nr_sequencia    = nr_seq_movto_trans_fin_w;
                        exception when others then
                                nr_seq_caixa_w          := null;
                                nr_seq_caixa_od_w       := null;
                                nr_seq_trans_financ_w   := null;
                        end;
                end if;

                /* Francisco - OS 51027 - 22/02/07 - Gerar movimentos com a data real */

                if (coalesce(ie_dt_contab_cr_w,'L') = 'T') then
                        dt_contabil_w   := dt_contabil_tit_w;
                end if;

                nr_negociacao_w := '';
                if (coalesce(nr_seq_baixa_w,0) <> 0) and (nr_titulo_w <> 0) then
                        nr_negociacao_w := substr(obter_numero_negociacao_hist(nr_titulo_w, nr_seq_baixa_w, null),1,20);
                end if;

                if (nm_atributo_w = 'VL_GLOSA') then
                        ie_tipo_conta_glosa_w   := 'G';
                        if (ie_dt_contab_glosa_w = 'F') then
                                select  coalesce(max(dt_fechamento),dt_contabil_w)
                                into STRICT    dt_contabil_w
                                from    convenio_retorno
                                where   nr_sequencia    = nr_seq_retorno_w;
                        end if;
                end if;

                nr_titulo_doc_w := nr_titulo_w;

                cd_convenio_w           := 0;
                cd_cgc_w                := '';
                ds_convenio_w           := '';
                ds_acao_w               := '';
                qt_estorno_contab_w     := 0;
                ds_nota_credito_w       := '';
                nr_seq_receb_w          := null;
                ds_recebimentos_w       := '';
                nr_seq_movto_bco_pend_w := null;

                if (ie_contab_vl_estorno_w = 'S') and
                        ((ie_acao_w = 'E') or (vl_transacao_w < 0)) then

                        select  count(1)
                        into STRICT    qt_estorno_contab_w
                        from    lote_contabil b,
                                titulo_receber_liq a
                        where   a.nr_lote_contabil      = b.nr_lote_contabil
                        and     a.nr_lote_contabil      <> 0
                        and     a.vl_recebido           = abs(vl_transacao_w)
                        and     a.nr_lote_contabil      <> nr_lote_contabil_p
                        and     a.nr_titulo             = nr_titulo_w  LIMIT 1;

                        if (qt_estorno_contab_w > 0) then
                                ds_acao_w       :=  Wheb_mensagem_pck.get_texto(795430);
                        end if;
                end if;

                select  max(a.cd_cgc),
                        max(coalesce(a.nr_documento,0)),
                        max(nr_interno_conta),
                        max(nr_seq_protocolo),
                        max(substr(obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc),1,80)),
                        max(somente_numero(a.nr_nota_fiscal)),
                        max(a.nr_documento),
                        max(substr(OBTER_NOTA_CONTA_PROTOCOLO(a.nr_seq_protocolo,0),1,20)),
                        max(substr(OBTER_NOTA_CONTA_PROTOCOLO(0,a.nr_interno_conta),1,20)),
                        max(a.cd_pessoa_fisica),
                        max(obter_dados_titulo_receber(a.nr_titulo,'NE')),
                        max(substr(obter_nome_pf_pj(null, cd_cgc),1,80)),
                        max(a.cd_estabelecimento),
                        max(a.nr_seq_nf_saida)
                into STRICT    cd_cgc_w,
                        nr_documento_w,
                        nr_interno_conta_w,
                        nr_seq_protocolo_w,
                        ds_devedor_w,
                        nr_nota_fiscal_w,
                        nr_doc_titulo_w,
                        nr_nota_protocolo_w,
                        nr_nota_conta_w,
                        cd_pessoa_fisica_w,
                        nr_nfe_imp_w,
                        ds_devedor_pj_w,
                        cd_estab_titulo_w,
                        nr_seq_nf_saida_w
                from    titulo_Receber a
                where   nr_titulo               = nr_titulo_w;

                select  max(coalesce(nr_bordero,0))
                into STRICT    nr_bordero_rec_w
                from    titulo_receber_liq
                where   nr_titulo = nr_titulo_w
                and     nr_sequencia = nr_seq_baixa_w;

                select  initCap(substr(Obter_desc_mes_ano(max(dt_mesano_referencia),'A'),1,20)),   --Anderson 28/05/2007 - OS58297
                        substr(obter_desc_mes_ano(max(dt_mesano_referencia),'AB'),1,20),
                        max(dt_mesano_referencia)
                into STRICT    ds_mesano_referencia_prot_w,
                        ds_mesano_referencia_abrev_w,
                        dt_mesano_referencia_prot_w
                from    protocolo_convenio
                where   nr_seq_protocolo        = nr_seq_protocolo_w
                and     cd_estabelecimento      = cd_estabelecimento_w;

                nr_atendimento_w                := null;
                if (coalesce(nr_interno_conta_w,0) > 0) then
                        select  max(CASE WHEN ie_contab_pj_convenio_w='N' THEN cd_cgc_w  ELSE cd_cgc END ),
                                max(b.cd_convenio),
                                max(nr_atendimento),
                                substr(Obter_desc_mes_ano(max(dt_mesano_referencia),'ANO'),1,20)
                        into STRICT    cd_cgc_w,
                                cd_convenio_w,
                                nr_atendimento_w,
                                ds_ano_conta_paciente_w
                        from    convenio b,
                                Conta_paciente a
                        where   a.nr_interno_conta      = nr_interno_conta_w
                        and     a.cd_convenio_parametro = b.cd_convenio;
                elsif (coalesce(nr_seq_protocolo_w,0) > 0) then
                        select  max(CASE WHEN ie_contab_pj_convenio_w='N' THEN cd_cgc_w  ELSE cd_cgc END ),
                                max(b.cd_convenio)
                        into STRICT    cd_cgc_w,
                                cd_convenio_w
                        from    convenio b,
                                Protocolo_convenio a
                        where   a.nr_seq_protocolo      = nr_seq_protocolo_w
                        and     a.cd_convenio           = b.cd_convenio;
                end if;

                if (coalesce(cd_convenio_w,0) = 0) then
                        if (coalesce(nr_seq_retorno_w,0) <> 0) then
                                select  max(cd_convenio)
                                into STRICT    cd_convenio_w
                                from    convenio_retorno
                                where   nr_sequencia    = nr_seq_retorno_w;
                        end if;
                end if;

                if (coalesce(cd_convenio_w,0) <> 0) then
                        select  max(ds_convenio)
                        into STRICT    ds_convenio_w
                        from    convenio
                        where   cd_convenio     = cd_convenio_w;

                        select  coalesce(max(ie_conta_transitoria),'N')
                        into STRICT    ie_conta_transitoria_w
                        from    convenio_estabelecimento
                        where   cd_estabelecimento      = cd_estab_titulo_w
                        and     cd_convenio             = cd_convenio_w;
                end if;

                nr_documento_w                  := nr_documento_w || ' ' || ds_acao_w;
                if (ie_devedor_hist_contab_w = 'S') then
                        nr_documento_w  := substr(nr_documento_w || ' ' ||ds_devedor_w,1,255);
                end if;

                if (ie_nf_hist_contab_w    = 'S') then
                        if (nr_nota_fiscal_w IS NOT NULL AND nr_nota_fiscal_w::text <> '') then
                                nr_documento_w  := substr(nr_documento_w || ' NF: ' || nr_nota_fiscal_w,1,255);
                        end if;
                        nr_documento_w          := substr(nr_documento_w || ' ' || Wheb_mensagem_pck.get_texto(795427) || ' ' || nr_atendimento_w,1,255);
                end if;

                if (ie_union_w in (24,25,26))then
                        nr_seq_agrupamento_w    := nr_seq_movto_cartao_cr_w;
                        if (nm_agrupador_w = 'DS_MESANO')then
                                nr_seq_agrupamento_w :=  dt_referencia_mesano_w;
                        end if;
                else
                        if (nm_agrupador_w = 'NR_SEQ_MOVTO_TRANS_FIN')then
                                   nr_seq_agrupamento_w :=      nr_seq_movto_trans_fin_w;
                        elsif (nm_agrupador_w = 'NR_TITULO')    then
                                   nr_seq_agrupamento_w :=      nr_titulo_w;
                        elsif (nm_agrupador_w = 'NR_BORDERO')then
                                   nr_seq_agrupamento_w :=  nr_bordero_rec_w;
                        elsif (nm_agrupador_w = 'DS_MESANO')then
                                   nr_seq_agrupamento_w :=  dt_referencia_mesano_w;
                        elsif (nm_agrupador_w = 'NR_AUTORIZACAO')then
                                   nr_seq_agrupamento_w :=  somente_numero(nr_autorizacao_w);
                        end if;

                end if;

                if (coalesce(nr_seq_agrupamento_w,0) = 0)and (ie_union_w not in (24,25,26))then
                        nr_seq_agrupamento_w    := nr_titulo_w;
                elsif (coalesce(nr_seq_agrupamento_w,0) = 0)and (ie_union_w in (24,25,26))then
                          nr_seq_agrupamento_w  :=      nr_seq_movto_cartao_cr_w;
                end if;


                if (coalesce(nr_seq_ret_item_w,0) <> 0) then
                        select  max(nr_seq_receb)
                        into STRICT    nr_seq_receb_w
                        from    convenio_ret_receb
                        where   nr_seq_retorno  = nr_seq_retorno_w;

                        ds_recebimentos_w       := substr(obter_retorno_receb_dados(nr_seq_retorno_w, 1),1,100);

                        select  max(ds_observacao)
                        into STRICT    ds_obs_convenio_receb_w
                        from    convenio_receb
                        where   nr_sequencia    = nr_seq_receb_w;

                        select  max(ds_motivo_glosa)
                        into STRICT    ds_motivo_glosa_w
                        from    motivo_glosa m,
                                convenio_retorno_item c
                        where   m.cd_motivo_glosa = c.cd_motivo_glosa
                        and     c.nr_sequencia = nr_seq_ret_item_w;
                end if;

                if (nr_adiantamento_w = 0) then
                        nr_adiantamento_w       := null;
                end if;

                nr_seq_bandeira_cartao_w        := null;

                select  max(a.nr_seq_movto_pend)
                into STRICT    nr_seq_movto_bco_pend_w
                from    movto_banco_pend_baixa a
                where   a.nr_titulo     = nr_titulo_w
                and     a.nr_seq_baixa  = nr_seq_baixa_w;

                if (coalesce(nr_seq_movto_bco_pend_w::text, '') = '') then

                        if (coalesce(nr_bordero_rec_w,0) <> 0) then
                                select  max(a.nr_seq_movto_pend)
                                into STRICT    nr_seq_movto_bco_pend_w
                                from    movto_banco_pend_baixa a
                                where   a.nr_bordero_rec        = nr_bordero_rec_w;
                        end if;

                        if (coalesce(nr_seq_movto_bco_pend_w::text, '') = '') then
                                select  max(a.nr_seq_movto_pend)
                                into STRICT    nr_seq_movto_bco_pend_w
                                from    movto_banco_pend_baixa a
                                where   a.nr_seq_conv_receb     = nr_seq_receb_w;
                        end if;
                end if;

                if (coalesce(nr_seq_movto_cartao_cr_w,0) <> 0) then
                        select  substr(obter_desc_bandeira_cartao(a.nr_seq_bandeira),1,200) ds_bandeira,
                                substr(obter_nome_pf_pj(a.cd_pessoa_fisica,a.cd_cgc),1,80) ds_pessoa_rec,
                                a.ds_comprovante,
                                a.nr_seq_bandeira,
                                a.cd_estabelecimento
                        into STRICT    ds_bandeira_cartao_w,
                                ds_pessoa_rec_cartao_w,
                                ds_comprovante_cartao_w,
                                nr_seq_bandeira_cartao_w,
                                cd_estab_info_w
                        from    movto_cartao_cr a
                        where   a.nr_sequencia  = nr_seq_movto_cartao_cr_w;

                        nm_pessoa_caixa_rec_w   := substr(obter_dados_cartao_cr(nr_seq_movto_cartao_cr_w, 'PR'),1,255);
                end if;

                if (nm_atributo_w = 'VL_NOTA_CREDITO') then
                        ds_nota_credito_w       := substr(obter_nota_credito_tit_rec(nr_titulo_w),1,255);
                end if;

                select  max(nm_fantasia_estab)
                into STRICT    nm_fantasia_estab_tit_w
                from    estabelecimento
                where   cd_estabelecimento      = cd_estab_titulo_w;

                if (nm_atributo_w = 'VL_GLOSA_DETALHE') and (coalesce(nr_seq_propaci_partic_w,0) <> 0) then
                        select  max(a.cd_cgc),
                                max(a.cd_pessoa_fisica)
                        into STRICT    cd_cgc_w,
                                cd_pessoa_fisica_w
                        from    procedimento_participante a
                        where   nr_sequencia    = nr_seq_propaci_partic_w;
                end if;

                if (coalesce(nr_seq_trans_financ_w,0) > 0) then
                        select  max(nr_sequencia)
                        into STRICT    nr_seq_movto_pend_w
                        from    movto_banco_pend
                        where   nr_seq_movto_trans_fin = nr_seq_trans_financ_w;
                end if;

                if (coalesce(nr_seq_conta_banco_w,0) > 0) and (coalesce(nr_seq_cob_escritural_w::text, '') = '') then
                        select  max(nr_sequencia)
                        into STRICT    nr_seq_cob_escritural_w
                        from    cobranca_escritural
                        where   nr_seq_conta_banco      = nr_seq_conta_banco_w
                        and     nr_titulo               = nr_titulo_w;
                end if;

                select  coalesce(max(nr_sequencia),0)
                into STRICT    nr_seq_perda_conta_rec_w
                from    perda_contas_receber
                where   nr_titulo       =  nr_titulo_w
                and     nr_seq_baixa    =  nr_seq_titulo_rec_liq_w;

                select  coalesce(max(b.nr_seq_nota_fiscal),null)
                into STRICT    nr_seq_nota_fiscal_w
                from    titulo_pagar_baixa a,
                        titulo_pagar b
                where   a.nr_titulo             = b.nr_titulo
                and     a.nr_tit_receber        = nr_titulo_w;

                if (coalesce(nr_seq_nota_fiscal_w,0) <> 0) then
                        select  substr(obter_dados_nota_fiscal(nr_seq_nota_fiscal_w,0),1,255)
                        into STRICT    nr_nota_tit_abatimento_w
;
                else
                        nr_nota_tit_abatimento_w        := '';
                end if;

                if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') and (nr_seq_titulo_rec_liq_w IS NOT NULL AND nr_seq_titulo_rec_liq_w::text <> '') then
                        nr_seq_extrato_w        := substr(obter_extrato_tit_rec(nr_titulo_w,
                                                                                nr_seq_titulo_rec_liq_w),1,255);
                end if;

                ---------------Abatimento titulo pagar - titulo receber
                begin
                select  coalesce(max(b.nr_nota_fiscal),null)
                into STRICT    nr_nota_tit_receber_abat_w
                from    titulo_receber_liq a,
                        titulo_receber b
                where   a.nr_titulo     = b.nr_titulo
                and     a.nr_titulo     = nr_titulo_w;
                exception when others then
                        nr_nota_tit_receber_abat_w      := '';
                end;

                ds_conteudo_w           := '';

                if (coalesce(nr_adiantamento_w, 0) <> 0) then
                        begin
                        select  substr(obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc), 1, 255),
                                        substr(ds_observacao,1, 255),
                                        nr_recibo
                        into STRICT    nm_paciente_adiant_w,
                                ds_obs_adiantamento_w,
                                nr_recibo_adiant_w
                        from    adiantamento
                        where   nr_adiantamento = nr_adiantamento_w;
                        exception
                        when others then
                                nm_paciente_adiant_w    := null;
                            ds_obs_adiantamento_w       := null;
                            nr_recibo_adiant_w          := null;
                        end;
                end if;

        if (coalesce(cd_cgc_w, '0') <> '0') then
                    ie_intercompany_w := holding_pck.get_se_intercompany_cnpj(
                        cd_estabelecimento_p => cd_estabelecimento_w,
                        cd_cgc_emitente_p => cd_cgc_w);
                end if;

                cd_estab_intercompany_ori_w := null;
                ds_estab_intercompany_ori_w := null;
                cd_estab_intercompany_des_w := null;
                ds_estab_intercompany_des_w := null;
                cd_interno_intercompany_ori_w := null;
                cd_interno_intercompany_des_w := null;

                if (ie_intercompany_w = 'S') then
                    cd_estab_intercompany_ori_w := cd_estab_titulo_w;
                    ds_estab_intercompany_ori_w := nm_fantasia_estab_tit_w;
                    cd_estab_intercompany_des_w := cd_estabelecimento_w;
                    ds_estab_intercompany_des_w := substr(obter_nome_estabelecimento(cd_estabelecimento_w),1,80);

                    begin
                        select cd_interno
                        into STRICT cd_interno_intercompany_ori_w
                        from estabelecimento
                        where cd_estabelecimento = cd_estab_intercompany_ori_w
                        and cd_empresa = obter_empresa_estab(cd_estab_intercompany_ori_w);
                    exception
                        when no_data_found then
                            cd_interno_intercompany_ori_w := null;
                        when too_many_rows then
                            cd_interno_intercompany_ori_w := null;
                        when others then
                            cd_interno_intercompany_ori_w := null;
                    end;

                    begin
                        select cd_interno
                        into STRICT cd_interno_intercompany_des_w
                        from estabelecimento
                        where cd_estabelecimento = cd_estab_intercompany_des_w
                        and cd_empresa = obter_empresa_estab(cd_estab_intercompany_des_w);
                    exception
                        when no_data_found then
                            cd_interno_intercompany_des_w := null;
                        when too_many_rows then
                            cd_interno_intercompany_des_w := null;
                        when others then
                            cd_interno_intercompany_des_w := null;
                    end;

                end if;

                if (nr_seq_nf_saida_w IS NOT NULL AND nr_seq_nf_saida_w::text <> '') then
                begin
                    select a.nr_sequencia,
                        a.nr_nota_fiscal,
                        a.cd_serie_nf,
                        a.nr_nfe_imp
                    into STRICT nr_seq_nota_orig_w,
                        nr_nota_orig_w,
                        cd_serie_nf_orig_w,
                        nr_nfe_imp_orig_w
                    from nota_fiscal a,
                        nf_credito b,
                        titulo_receber c
                    where a.nr_sequencia = b.nr_seq_nf_orig
                    and b.nr_seq_nf_gerada = c.nr_seq_nf_saida
                    and c.nr_seq_nf_saida = nr_seq_nf_saida_w;
                exception
                    when no_data_found then
                        nr_seq_nota_orig_w := null;
                        nr_nfe_imp_orig_w := null;
                        cd_serie_nf_orig_w := null;
                        nr_nota_orig_w := null;
                    when too_many_rows then
                        nr_seq_nota_orig_w := null;
                        nr_nfe_imp_orig_w := null;
                        cd_serie_nf_orig_w := null;
                        nr_nota_orig_w := null;
                end;

                    if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
                        begin
                            select
                                a.nr_sequencia,
                                a.nr_nota_fiscal,
                                a.cd_serie_nf,
                                a.nr_nfe_imp
                            into STRICT
                                nr_seq_nota_no_w,
                                nr_nota_no_w,
                                cd_serie_nf_no_w,
                                nr_nfe_imp_no_w
                            from
                                nota_fiscal      a,
                                titulo_receber   b
                            where
                                a.nr_sequencia = b.nr_seq_nf_saida
                                and (b.nr_seq_nf_saida IS NOT NULL AND b.nr_seq_nf_saida::text <> '')
                                and b.nr_titulo = nr_titulo_w;
                        exception
                            when no_data_found then
                                nr_seq_nota_no_w := null;
                                nr_nota_no_w := null;
                                cd_serie_nf_no_w := null;
                                nr_nfe_imp_no_w := null;
                            when too_many_rows then
                                nr_seq_nota_no_w := null;
                                nr_nota_no_w := null;
                                cd_serie_nf_no_w := null;
                                nr_nfe_imp_no_w := null;
                        end;

                        begin
                            select
                                max(nr_sequencia) nr_sequencia,
                                max(nr_nota_fiscal) nr_nota_fiscal,
                                max(cd_serie_nf) cd_serie_nf,
                                max(nr_nfe_imp) nr_nfe_imp
                            into STRICT
                                nr_seq_nota_comp_w,
                                nr_nota_comp_w,
                                cd_serie_nf_comp_w,
                                nr_nfe_imp_comp_w
                            from
                                nota_fiscal_item
                            where
                                nr_sequencia = nr_seq_nota_no_w;
                        exception
                            when no_data_found then
                                nr_seq_nota_comp_w := null;
                                nr_nota_comp_w := null;
                                cd_serie_nf_comp_w := null;
                                nr_nfe_imp_comp_w := null;
                            when too_many_rows then
                                nr_seq_nota_comp_w := null;
                                nr_nota_comp_w := null;
                                cd_serie_nf_comp_w := null;
                                nr_nfe_imp_comp_w := null;
                        end;
                    end if;
                end if;

                if (ie_compl_hist_w = 'S') then
                        ds_conteudo_w   := substr(cd_cgc_w                              || '#@' ||
                                                nr_doc_titulo_w                         || '#@' ||
                                                nr_interno_conta_w                      || '#@' ||
                                                nr_seq_protocolo_w                      || '#@' ||
                                                ds_devedor_w                            || '#@' ||
                                                nr_nota_fiscal_w                        || '#@' ||
                                                cd_convenio_w                           || '#@' ||
                                                nr_atendimento_w                        || '#@' ||
                                                nr_nota_conta_w                         || '#@' ||
                                                nr_nota_protocolo_w                     || '#@' ||
                                                nr_titulo_w                             || '#@' ||
                                                ds_mesano_referencia_prot_w             || '#@' ||
                                                ds_mesano_referencia_abrev_w            || '#@' ||
                                                nr_seq_retorno_w                        || '#@' ||
                                                nr_nfe_imp_w                            || '#@' ||
                                                ds_devedor_pj_w                         || '#@' ||
                                                ds_observacao_titulo_w                  || '#@' ||
                                                to_char(dt_movimento_w, 'dd/mm/yyyy')   || '#@' ||
                                                DS_COMPROVANTE_w                        || '#@' ||
                                                NR_AUTORIZACAO_w                        || '#@' ||
                                                ds_obs_convenio_receb_w                 || '#@' ||
                                                ds_convenio_w                           || '#@' ||
                                                dt_mesano_referencia_prot_w             || '#@' ||
                                                ds_observacao_liq_w                     || '#@' ||
                                                nr_adiantamento_w                       || '#@' ||
                                                ds_bandeira_cartao_w                    || '#@' ||
                                                ds_pessoa_rec_cartao_w                  || '#@' ||
                                                ds_comprovante_cartao_w                 || '#@' ||
                                                ds_nota_credito_w                       || '#@' ||
                                                nr_bordero_rec_w                        || '#@' ||
                                                nm_pessoa_caixa_rec_w                   || '#@' ||
                                                nr_seq_receb_w                          || '#@' ||
                                                nr_seq_nota_credito_w                   || '#@' ||
                                                ds_recebimentos_w                       || '#@' ||
                                                cd_estab_titulo_w                       || '#@' ||
                                                nm_fantasia_estab_tit_w                 || '#@' ||
                                                ds_motivo_glosa_w                       || '#@' ||
                                                nr_seq_movto_bco_pend_w                 || '#@' ||
                                                ds_obs_movto_cartao_baixa_w             || '#@' ||
                                                ds_ano_conta_paciente_w                 || '#@' ||
                                                nr_negociacao_w                         || '#@' ||
                                                nr_seq_movto_pend_w                     || '#@' ||
                                                nr_seq_cob_escritural_w                 || '#@' ||
                                                nr_seq_perda_conta_rec_w                || '#@' ||
                                                nr_nota_tit_abatimento_w                || '#@' ||
                                                nr_nota_tit_receber_abat_w              || '#@' ||
                                                nr_seq_extrato_w                        || '#@' ||
                                                nm_paciente_adiant_w                    || '#@' ||
                                                ds_obs_adiantamento_w                   || '#@' ||
                                                nr_recibo_adiant_w                      || '#@' ||
                                                ds_estorno_w                            || '#@' ||
                                                cd_estab_intercompany_ori_w             || '#@' ||
                                                ds_estab_intercompany_ori_w             || '#@' ||
                                                cd_estab_intercompany_des_w             || '#@' ||
                                                ds_estab_intercompany_des_w             || '#@' ||
                                                cd_interno_intercompany_ori_w           || '#@' ||
                                                cd_interno_intercompany_des_w           || '#@' ||
                                                nr_seq_nota_orig_w                      || '#@' ||
                                                nr_nota_orig_w                          || '#@' ||
                                                cd_serie_nf_orig_w                      || '#@' ||
                                                nr_nfe_imp_orig_w                       || '#@' ||
                                                nr_seq_nota_comp_w                      || '#@' ||
                                                nr_nota_comp_w                          || '#@' ||
                                                cd_serie_nf_comp_w                      || '#@' ||
                                                nr_nfe_imp_comp_w                       || '#@' ||
                                                nr_seq_nota_no_w                        || '#@' ||
                                                nr_nota_no_w                            || '#@' ||
                                                cd_serie_nf_no_w                        || '#@' ||
                                                nr_nfe_imp_no_w,1,4000);
                end if;

                ie_origem_documento_w   := null;

                ds_atributos_w  := null;
                if (nr_nota_fiscal_w = '0') then
                        nr_nota_fiscal_w:= null;
                end if;
                ds_atributos_w  :=      'NR_SEQ_NOTA_FISCAL='   || nr_seq_nf_saida_w    || ';' ||
                                        'NR_NOTA_FISCAL='       || nr_nota_fiscal_w     || ';' ||
                                        'NR_TITULO_RECEBER='    || nr_titulo_w          || ';' ||
                                        'NR_NFE_IMP='           || nr_nfe_imp_w;

                ctb_obter_doc_movto(    cd_tipo_lote_contabil_w,
                                        nm_atributo_w,
                                        'VR',
                                        dt_movimento_w,
                                        null,
                                        null,
                                        ds_atributos_w,
                                        nm_usuario_p,
                                        ie_regra_w,
                                        nr_documento_ww,
                                        ie_origem_documento_w);

                /* Francisco - OS 100412 - 14/08/08 - Contabilizar OPS separadamente */

                if (nm_atributo_w = 'VL_REC_PLS') then
                        if (ie_contab_baixas_pro_rata_w = 'A') then
                                if (ie_tipo_lote_pls_w <> 'B') then
                                        dt_contabil_w   := dt_contab_lote_w;
                                end if;
                                nr_sequencia_w := pls_contabiliza_pro_rata(nr_lote_contabil_p, cd_tipo_lote_contabil_w, ie_lote_pro_rata_w, dt_contabil_w, cd_pessoa_fisica_w, cd_cgc_w, ds_conteudo_w, nr_seq_trans_fin_w, ie_compl_hist_w, nr_titulo_w, nr_seq_baixa_w, nr_seq_liq_cc_w, nm_usuario_p, nr_seq_agrupamento_w, nr_sequencia_w);
                        elsif (ie_contab_baixas_pro_rata_w = 'S') then

                                nr_sequencia_w := pls_contabiliza_baixa_pro_rata( nr_lote_contabil_p, ie_tipo_lote_pls_w, vl_antecipacao_mens_w, dt_movimento_w, vl_transacao_w, nr_titulo_w, dt_contab_lote_w, cd_conta_rec_pls_w, cd_conta_deb_pls_w, cd_historico_pls_w, nr_seq_trans_fin_w, cd_pessoa_fisica_w, cd_cgc_w, nm_usuario_p, dt_referencia_pls_mens_w, ie_compl_hist_w, ds_conteudo_w, cd_tipo_lote_contabil_w, nr_seq_baixa_w, nr_seq_liq_cc_w, nr_sequencia_w);
                        else
                                if (ie_compl_hist_w = 'S') then
                                        select  substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_Historico_pls_w, ds_conteudo_w),1,255)
                                        into STRICT    ds_compl_historico_w
;
                                end if;

                                if (cd_conta_deb_pls_w IS NOT NULL AND cd_conta_deb_pls_w::text <> '') and (cd_historico_pls_w IS NOT NULL AND cd_historico_pls_w::text <> '') then
                                        nr_sequencia_w  := nr_sequencia_w + 1;
                                        begin
                                        insert  into w_movimento_contabil(
                                                nr_lote_contabil, nr_sequencia, cd_conta_contabil,
                                                ie_debito_credito, cd_historico, dt_movimento,
                                                vl_movimento, ds_doc_agrupamento, nr_seq_agrupamento,
                                                cd_centro_custo, ds_compl_historico, nr_seq_trans_fin,
                                                nr_documento, cd_pessoa_fisica, cd_cgc,
                                                ie_transitorio, ie_origem_documento,
                                                nr_seq_info, nr_seq_tab_orig, nr_seq_tab_compl,
                                                nm_tabela, nm_atributo, nr_seq_proj_rec)
                                        values (
                                                nr_lote_contabil_p, nr_sequencia_w, cd_conta_deb_pls_w,
                                                'C', cd_historico_pls_w, dt_contabil_w,
                                                vl_transacao_w,  null, nr_seq_agrupamento_w,
                                                null, ds_compl_historico_w, nr_seq_trans_fin_w,
                                                nr_documento_ww, cd_pessoa_fisica_w, cd_cgc_w,
                                                'N', ie_origem_documento_w,
                                                nr_seq_info_ctb_w, nr_seq_tab_orig_w, nr_seq_tab_compl_w,
                                                nm_tabela_w, nm_atributo_w, nr_seq_proj_rec_w);
                                        exception
                                        when others then
                                                ds_erro_w       := sqlerrm(SQLSTATE);
                                                ds_macro_w      := substr(' cta=' || cd_conta_deb_pls_w || ' tit =' || nr_titulo_w ||
                                                                        ' seq=' || nr_sequencia_w || ' trans=' || nr_seq_trans_fin_w ||
                                                                        ' val=' || vl_transacao_w || ds_erro_w,1,2000);
                                                CALL wheb_mensagem_pck.exibir_mensagem_abort(183319, ds_macro_w);
                                        end;
                                end if;
                        end if;
                elsif (nm_atributo_w = 'VL_REC_PLS_MENS') then
                        if      ((cd_conta_deb_pls_w IS NOT NULL AND cd_conta_deb_pls_w::text <> '') or (cd_conta_rec_pls_w IS NOT NULL AND cd_conta_rec_pls_w::text <> '')) and (cd_historico_pls_w IS NOT NULL AND cd_historico_pls_w::text <> '') then
                                if (ie_compl_hist_w = 'S') then
                                        select  substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_Historico_pls_w, ds_conteudo_w),1,255)
                                        into STRICT    ds_compl_historico_w
;
                                end if;

                                if      ((coalesce(dt_referencia_pls_mens_w::text, '') = '') or
                                        ((dt_referencia_pls_mens_w IS NOT NULL AND dt_referencia_pls_mens_w::text <> '') and (trunc(dt_contab_lote_w, 'month') = trunc(dt_referencia_pls_mens_w, 'month')))) then
                                        nr_sequencia_w  := nr_sequencia_w + 1;

                                        begin
                                        insert  into w_movimento_contabil(
                                                nr_lote_contabil, nr_sequencia, cd_conta_contabil,
                                                ie_debito_credito, cd_historico, dt_movimento,
                                                vl_movimento, ds_doc_agrupamento, nr_seq_agrupamento,
                                                cd_centro_custo, ds_compl_historico, nr_seq_trans_fin,
                                                nr_documento, cd_pessoa_fisica, cd_cgc,
                                                ie_transitorio,ie_origem_documento,
                                                nr_seq_info, nr_seq_tab_orig, nr_seq_tab_compl,
                                                nm_tabela, nm_atributo, nr_seq_proj_rec)
                                        values (
                                                nr_lote_contabil_p, nr_sequencia_w, coalesce(cd_conta_deb_pls_w,cd_conta_rec_pls_w),
                                                CASE WHEN coalesce(cd_conta_deb_pls_w::text, '') = '' THEN  'C'  ELSE 'D' END , cd_historico_pls_w, dt_contabil_w,
                                                vl_transacao_w,  null, nr_seq_agrupamento_w,
                                                null, ds_compl_historico_w, nr_seq_trans_fin_w,
                                                nr_documento_ww, cd_pessoa_fisica_w, cd_cgc_w,
                                                'N', ie_origem_documento_w,
                                                nr_seq_info_ctb_w, nr_seq_tab_orig_w, nr_seq_tab_compl_w,
                                                nm_tabela_w, nm_atributo_w, nr_seq_proj_rec_w);

                                        exception
                                        when others then
                                                ds_erro_w       := sqlerrm(SQLSTATE);
                                                ds_macro_w      := substr(' cta=' || coalesce(cd_conta_deb_pls_w,cd_conta_rec_pls_w) || ' tit =' || nr_titulo_w ||
                                                                        ' seq=' || nr_sequencia_w || ' trans=' || nr_seq_trans_fin_w ||
                                                                        ' val=' || vl_transacao_w || ds_erro_w,1,2000);

                                                CALL wheb_mensagem_pck.exibir_mensagem_abort(183319, ds_macro_w);
                                        end;
                                else
                                        update  pls_titulo_rec_liq_mens
                                        set     nr_lote_contabil        = 0
                                        where   nr_sequencia            = nr_seq_liq_cc_w
                                        and     nr_titulo               = nr_titulo_w
                                        and     nr_seq_baixa            = nr_seq_baixa_w;
                                end if;
                        end if;
                else
                        if (ie_permite_estab_dif_w <> 'PCCT') then
                                cd_estab_titulo_w       := null;
                                cd_estab_movimento_w    := null;
                        end if;

                        if (coalesce(nr_seq_baixa_w,0) <> 0) and (coalesce(nr_titulo_w,0) <> 0) then
                                select  count(*),
                                        coalesce(max(r.dt_pagamento_previsto),clock_timestamp())
                                into STRICT    qt_registros_w,
                                        dt_perda_w
                                from    titulo_receber_liq      l,
                                        titulo_receber          r,
                                        tipo_recebimento        t
                                where   r.nr_titulo             = l.nr_titulo
                                and     l.cd_tipo_recebimento   = t.cd_tipo_recebimento
                                and     l.nr_sequencia          = nr_seq_baixa_w
                                and     l.nr_titulo             = nr_titulo_w
                                and     t.ie_tipo_consistencia  = 9;

                                if (qt_registros_w > 0) then
                                        cd_conta_contabil_w     := coalesce(obter_conta_contab_tempo_perda(dt_contabil_w, dt_contabil_w - dt_perda_w),cd_conta_contabil_w);
                                end if;
                        end if;

                        if (nr_titulo_w <> 0 AND nr_seq_baixa_w <> 0) then
                                select  cd_tipo_recebimento
                                into STRICT    cd_tipo_recebimento_w
                                from    titulo_receber_liq
                                where   nr_titulo       = nr_titulo_w
                                and     nr_sequencia    = nr_seq_baixa_w;
                        end if;

                        if (nm_atributo_w = 'VL_GLOSA_CRIT_REPASSE') then
                                select  max(q.cd_cgc),
                                        null
                                into STRICT    cd_cgc_w,
                                        cd_pessoa_fisica_w
                                from    convenio_retorno_glosa  g,
                                        convenio_retorno_item   i,
                                        procedimento_repasse    pr,
                                        terceiro                q
                                where   i.nr_sequencia          = g.nr_seq_ret_item
                                and     g.nr_seq_propaci        = pr.nr_seq_procedimento
                                and     q.nr_sequencia          = pr.nr_seq_terceiro
                                and     i.nr_titulo             = nr_titulo_w;

                                if (coalesce(cd_cgc_w::text, '') = '') then
                                        select  null,
                                                max(q.cd_pessoa_fisica)
                                        into STRICT    cd_cgc_w,
                                                cd_pessoa_fisica_w
                                        from    convenio_retorno_glosa  g,
                                                convenio_retorno_item   i,
                                                procedimento_repasse    pr,
                                                terceiro                q
                                        where   i.nr_sequencia          = g.nr_seq_ret_item
                                        and     g.nr_seq_propaci        = pr.nr_seq_procedimento
                                        and     q.nr_sequencia          = pr.nr_seq_terceiro
                                        and     i.nr_titulo             = nr_titulo_w;
                                end if;

                        elsif (nm_atributo_w = 'VL_DESCONTOS') and (ie_origem_tit_rec_w = 3) then

                                select  max(a.ie_segmentacao)
                                into STRICT    ie_segmentacao_w
                                from    pls_plano a,
                                        pls_segurado b,
                                        pls_mensalidade_segurado c,
                                        pls_mensalidade d,
                                        titulo_receber e
                                where   a.nr_sequencia  = b.nr_seq_plano
                                and     b.nr_sequencia  = c.nr_seq_segurado
                                and     d.nr_sequencia  = c.nr_seq_mensalidade
                                and     d.nr_sequencia  = e.nr_seq_mensalidade
                                and     e.nr_titulo     = nr_titulo_w;

                                select  max(c.cd_conta_contabil)
                                into STRICT    cd_conta_codificacao_w
                                from    pls_contab_versao a,
                                        pls_contab_codificacao b,
                                        pls_contab_codific_item c
                                where   a.nr_sequencia          = b.nr_seq_versao_contab
                                and     b.nr_sequencia          = c.nr_seq_codificacao
                                and     dt_contabil_w between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,dt_contabil_w)
                                and     b.ie_codificacao        = 'PO'
                                and     c.ie_tipo_produto       = CASE WHEN ie_segmentacao_w='4' THEN 'OD'  ELSE 'PS' END;

                                select  count(*)
                                into STRICT    qt_conta_contabil_w
                                from    conta_contabil
                                where   cd_conta_contabil       = cd_conta_codificacao_w;

                                if (qt_conta_contabil_w > 0) then
                                        cd_conta_contabil_w     := cd_conta_codificacao_w;
                                end if;
                        end if;

                        nr_sequencia_w := gerar_contab_trans_financ(
                                cd_estabelecimento_w, coalesce(cd_estab_movimento_w,cd_estab_titulo_w), nr_lote_contabil_p, nm_usuario_p, cd_conta_contabil_w, cd_centro_custo_w, nr_documento_w, nr_seq_agrupamento_w, dt_contabil_w, vl_transacao_w, nr_seq_trans_fin_w, nr_seq_conta_banco_w, nm_atributo_w, cd_pessoa_fisica_w, cd_cgc_w, 0, cd_convenio_w, nr_documento_ww, null, ds_conteudo_w, nr_seq_caixa_w, nr_seq_produto_w, nr_seq_caixa_od_w, null, null, nr_seq_bandeira_cartao_w, cd_tributo_w, ie_origem_tit_rec_w, null, ie_tipo_conta_glosa_w, null, cd_estab_info_w, null, cd_tipo_recebimento_w, nr_sequencia_w, nm_tabela_w, nr_titulo_w, nr_seq_proj_rec_w, ie_origem_documento_w, nr_seq_tab_orig_w, nr_seq_tab_compl_w, nr_seq_info_ctb_w, cd_moeda_w);

                        begin
                        select  max(cd_estab_financeiro)
                        into STRICT    cd_estab_financeiro_w
                        from    estabelecimento
                        where   cd_estabelecimento      = cd_estab_titulo_w;
                        exception
                        when no_data_found then
                                cd_estab_financeiro_w := null;
                        end;

                        if (nr_adiantamento_w IS NOT NULL AND nr_adiantamento_w::text <> '') then
                            begin
                            select  max(x.nr_seq_conta_banco)
                            into STRICT    nr_seq_conta_banco_w
                            from (
                                SELECT  a.nr_seq_conta_banco
                                from    adiantamento a
                                where   a.nr_adiantamento = nr_adiantamento_w

union all

                                SELECT  m.nr_seq_conta_banco
                                from    movto_banco_pend_baixa b,
                                        movto_banco_pend m
                                where   m.nr_sequencia = nr_seq_movto_pend
                                and     b.nr_adiantamento = nr_adiantamento_w
                            ) x;
                            exception
                            when no_data_found then
                                    nr_seq_conta_banco_w := null;
                            end;
                        end if;

                        if (nr_seq_conta_banco_w IS NOT NULL AND nr_seq_conta_banco_w::text <> '') then
                            begin
                            select  max(b.cd_estabelecimento)
                            into STRICT    cd_estab_banco_w
                            from    banco_estabelecimento b
                            where   b.nr_sequencia = nr_seq_conta_banco_w;
                            exception
                            when no_data_found then
                                    cd_estab_banco_w := null;
                            end;

                            select  coalesce(cd_estab_banco_w, cd_estab_financeiro_w)
                            into STRICT    cd_estab_banco_w
;
                        end if;

                        if (ie_permite_estab_dif_w = 'PCCT') and (coalesce(cd_estab_titulo_w,0) <> 0) and (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') and (cd_conta_transitoria_w IS NOT NULL AND cd_conta_transitoria_w::text <> '') and (nm_tabela_w = 'TITULO_RECEBER_LIQ') and (cd_estab_banco_w <> cd_estab_titulo_w) and (cd_estab_financeiro_w <> cd_estab_titulo_w) then

                                select  coalesce(max(nr_sequencia),0)
                                into STRICT    nr_sequencia_movto_w
                                from    w_movimento_contabil
                                where   nr_lote_contabil        = nr_lote_contabil_p
                                and     ie_debito_credito       = 'D'
                                and     ie_transitorio          = 'N'
                                and     cd_estabelecimento      = cd_estab_titulo_w
                                and     nr_seq_tab_compl        = nr_seq_baixa_w
                                and     nr_seq_agrupamento      = nr_titulo_w;

                                if (nr_sequencia_movto_w IS NOT NULL AND nr_sequencia_movto_w::text <> '') then
                                    update  w_movimento_contabil
                                    set     cd_estabelecimento      = cd_estab_financeiro_w
                                    where   nr_lote_contabil        = nr_lote_contabil_p
                                    and     nr_sequencia            = nr_sequencia_movto_w;
                                end if;

                                if (nm_atributo_w in ('VL_RECEBIDO_TOTAL')) then
                                          nr_lote_contabil_p := ctb_gerar_movto_conta_transit(  nr_lote_contabil_p, cd_estab_titulo_w, cd_conta_transitoria_w, cd_historico_ct_w);
                                          nr_lote_contabil_p := ctb_gerar_movto_conta_transit(  nr_lote_contabil_p, cd_estab_financeiro_w, cd_conta_transitoria_w, cd_historico_ct_w);
                                end if;
                        end if;
                end if;
                if (qt_contador_w >= 100) then
                        commit;
                        qt_contador_w   := 0;
                end if;
        end loop;
        close c010;
        /* Francisco - OS 203923 - 03/05/2010 - Contabilizar baixas de antecipacao OPS */

        /*pls_contabiliza_baixa_antec(nr_lote_contabil_p,nm_usuario_p);*/

        if (pkg_i18n.get_user_locale = 'es_BO' AND ie_exclusao_p = 'N') then
                BEGIN
                        CALL ctb_regras_contabil.ctb_gerar_cd_controle_rec(nr_lote_contabil_p, nm_usuario_p);
                EXCEPTION WHEN OTHERS THEN
                        CALL ctb_gravar_log_lote(nr_lote_contabil_p, 1, SQLERRM, nm_usuario_p);
                END;
        end if;

        CALL agrupa_movimento_contabil(nr_lote_contabil_p, nm_usuario_p);

end if;

if (coalesce(ds_retorno_p::text, '') = '') then
        update lote_contabil
        set     ie_situacao = 'A',
                dt_geracao_lote = CASE WHEN ie_exclusao_p='N' THEN clock_timestamp() WHEN ie_exclusao_p='S' THEN null END
        where   nr_lote_contabil = nr_lote_contabil_p;
        if (ie_exclusao_p = 'S') then
                ds_retorno_p            := wheb_mensagem_pck.get_texto(165188);
                CALL ctb_gravar_log_lote( nr_lote_contabil_p, 2, '', nm_usuario_p);
        else
                ds_retorno_p            := wheb_mensagem_pck.get_texto(165187);
                CALL ctb_gravar_log_lote( nr_lote_contabil_p, 1, '', nm_usuario_p);
        end if;
        commit;
else
        rollback;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE contabiliza_contas_receber ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

