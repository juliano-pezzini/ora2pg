-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_ajustar_base_fin ( nm_usuario_p text) AS $body$
DECLARE


dt_versao_atual_cliente_w 	timestamp;
qt_registro_w			bigint;
cd_estabelecimento_w		smallint;

cd_conta_financ_mens_w		bigint;
ds_comando_w			varchar(2000);
ds_tipo_obj_w			varchar(255);
qt_nulo_w			bigint;


BEGIN
/* Rotina do grupo OPS - Financeiro - LÍDER: Francisco Roeder */

dt_versao_atual_cliente_w	:= coalesce(to_date(to_char(obter_data_geracao_versao-1,'dd/mm/yyyy') ||' 23:59:59','dd/mm/yyyy hh24:mi:ss'),clock_timestamp() - interval '90 days');

select	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	pls_outorgante;

if (dt_versao_atual_cliente_w < to_date('02/07/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	ficha_financ_item
	where	nr_sequencia	= 19;

	if (qt_registro_w = 0) then
		if (qt_registro_w > 0) then
			CALL Exec_sql_Dinamico('dhoffmann', ' update ficha_financ_item set ds_item = ' || chr(39) || 'OPS - Mensalidades' || chr(39) || ' where nr_sequencia = 19');
		end if;
	end if;
end if;

if (dt_versao_atual_cliente_w < to_date('04/07/2012','dd/mm/yyyy')) then
	update	PLS_REGRA_ARQUIVO_FATURA
	set	ie_tipo_interface	= 'A500'
	where	coalesce(ie_tipo_interface::text, '') = '';
end if;

if (dt_versao_atual_cliente_w < to_date('09/07/2012','dd/mm/yyyy')) then
	CALL Exec_sql_Dinamico('dhoffman', ' begin baca_pagador_titulo_sequence; end;');
end if;

if (dt_versao_atual_cliente_w < to_date('23/08/2012','dd/mm/yyyy')) then
	CALL baca_ajustar_tipo_cobr(nm_usuario_p);
end if;

if (dt_versao_atual_cliente_w < to_date('25/08/2012','dd/mm/yyyy')) then
	CALL pls_baca_regra_desf_susp_atend(nm_usuario_p);
end if;

if (dt_versao_atual_cliente_w < to_date('05/12/2012', 'dd/mm/yyyy')) then
	CALL pls_ajustar_fat_proc_pos_estab();
end if;

if (dt_versao_atual_cliente_w < to_date('11/02/2013', 'dd/mm/yyyy')) then
	CALL baca_ajustar_ie_base_trib_nf();
end if;

if (dt_versao_atual_cliente_w < to_date('23/05/2013','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_LOTE_PAGAMENTO'
	and	column_name	= 'DT_GERACAO_VENCIMENTOS';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('dhoffmann', ' update PLS_LOTE_PAGAMENTO a set DT_GERACAO_VENCIMENTOS = DT_GERACAO_TITULOS where exists (select 1 from pls_pagamento_prestador x, pls_pag_prest_vencimento y where x.nr_sequencia = y.nr_seq_pag_prestador and a.nr_sequencia = x.nr_seq_lote)');
	end if;
end if;

if (dt_versao_atual_cliente_w < to_date('02/08/2013','dd/mm/yyyy')) then
	update	funcao_parametro
	set	ds_parametro		= 'Permitir a geração de arquivos A500 para as faturas com situação "Não conferido"'
	where	nr_sequencia		= 16
	and	cd_funcao		= 1356;

	update	valor_dominio
	set	ds_valor_dominio	= 'Arquivo para inclusão de questionamentos',
		nr_seq_apresent		= 1,
		ie_situacao		= 'A'
	where	cd_dominio		= 3675
	and	vl_dominio		= '1';

	update	valor_dominio
	set	ds_valor_dominio	= 'Arquivo de confirmação da inclusão de questionamentos na Câmara Arbitral',
		nr_seq_apresent		= 2,
		ie_situacao		= 'I'
	where	cd_dominio		= 3675
	and	vl_dominio		= '2';

	update	valor_dominio
	set	ds_valor_dominio	= 'Fechamento parcial da Unimed Credora da NDC',
		nr_seq_apresent		= 3,
		ie_situacao		= 'A'
	where	cd_dominio		= 3675
	and	vl_dominio		= '3';

	update	valor_dominio
	set	ds_valor_dominio	= 'Fechamento parcial da Unimed Devedora da NDC',
		nr_seq_apresent		= 4,
		ie_situacao		= 'A'
	where	cd_dominio		= 3675
	and	vl_dominio		= '4';

	update	valor_dominio
	set	ds_valor_dominio	= 'Arquivo de fechamento da Unimed Credora da NDC',
		nr_seq_apresent		= 5,
		ie_situacao		= 'A'
	where	cd_dominio		= 3675
	and	vl_dominio		= '5';

	update	valor_dominio
	set	ds_valor_dominio	= 'Arquivo de fechamento da Unimed Devedora da NDC',
		nr_seq_apresent		= 6,
		ie_situacao		= 'A'
	where	cd_dominio		= 3675
	and	vl_dominio		= '6';

	update	valor_dominio
	set	ds_valor_dominio	= 'Fechamento complementar da Unimed Credora da NDC',
		nr_seq_apresent		= 7,
		ie_situacao		= 'A'
	where	cd_dominio		= 3675
	and	vl_dominio		= '7';

	update	valor_dominio
	set	ds_valor_dominio	= 'Fechamento complementar da Unimed Devedora da NDC',
		nr_seq_apresent		= 8,
		ie_situacao		= 'A'
	where	cd_dominio		= 3675
	and	vl_dominio		= '8';
end if;

if (dt_versao_atual_cliente_w < to_date('20/08/2013','dd/mm/yyyy')) then
	CALL pls_baca_ajustar_dados_ndc_560();
end if;

if (dt_versao_atual_cliente_w < to_date('21/08/2013','dd/mm/yyyy')) then
	CALL pls_baca_ajustar_conta_ptu_cob();
end if;

if (dt_versao_atual_cliente_w < to_date('10/09/2013','dd/mm/yyyy')) then
	CALL pls_baca_ajustar_contrato_fat();
end if;

if (dt_versao_atual_cliente_w < to_date('29/10/2013','dd/mm/yyyy')) then
	update valor_dominio
	set ds_valor_dominio = 'Intercâmbio entre cooperativas ou congêneres - Usuário eventual'
	where cd_dominio = 4768
	and vl_dominio = 'IC';
end if;

if (dt_versao_atual_cliente_w < to_date('12/11/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_PARAMETRO_CONTABIL'
	and	column_name	= 'IE_TIPO_LOTE_BAIXA_MENS'  LIMIT 1;

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('dhoffmann','begin BACA_ATUALIZAR_TP_LOTE_BX_MENS; end;');
	end if;
end if;

if (dt_versao_atual_cliente_w < to_date('20/12/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PTU_NOTA_COBRANCA'
	and	column_name	= 'NR_NOTA'
	and	data_type	= 'VARCHAR2';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COBRANCA add nr_nota_varchar varchar2(20) ');
		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_HOSPITALAR add nr_nota_varchar varchar2(20) ');
		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_SERVICO add nr_nota_varchar varchar2(20) ');
		CALL exec_sql_dinamico('Tasy',' alter table PTU_QUESTIONAMENTO add nr_nota_varchar varchar2(20) ');
		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COMPLEMENTO add nr_nota_varchar varchar2(20) ');

		CALL exec_sql_dinamico('Tasy',' update PTU_NOTA_COBRANCA set	nr_nota_varchar = nr_nota ');
		CALL exec_sql_dinamico('Tasy',' update PTU_NOTA_HOSPITALAR set nr_nota_varchar = nr_nota ');
		CALL exec_sql_dinamico('Tasy',' update PTU_NOTA_SERVICO set nr_nota_varchar = nr_nota ');
		CALL exec_sql_dinamico('Tasy',' update PTU_QUESTIONAMENTO set nr_nota_varchar = nr_nota ');
		CALL exec_sql_dinamico('Tasy',' update PTU_NOTA_COMPLEMENTO set nr_nota_varchar = nr_nota ');

		commit;

		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COBRANCA drop column nr_nota ');
		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_HOSPITALAR drop column nr_nota ');
		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_SERVICO	drop column nr_nota ');
		CALL exec_sql_dinamico('Tasy',' alter table PTU_QUESTIONAMENTO drop column nr_nota ');
		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COMPLEMENTO drop column nr_nota ');

		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COBRANCA rename column nr_nota_varchar to nr_nota ');
		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_HOSPITALAR rename column nr_nota_varchar to nr_nota ');
		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_SERVICO	rename column nr_nota_varchar to nr_nota ');
		CALL exec_sql_dinamico('Tasy',' alter table PTU_QUESTIONAMENTO rename column nr_nota_varchar to nr_nota ');
		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COMPLEMENTO rename column nr_nota_varchar to nr_nota ');
	end if;
end if;


if (dt_versao_atual_cliente_w < to_date('13/01/2014','dd/mm/yyyy')) then



	select	count(1)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name	= 'PLS_REGRA_FRANQUIA_PROC';


	if (qt_registro_w = 1) then
		select	count(1)
		into STRICT	qt_registro_w
		from	tabela_sistema
		where	nm_tabela	= 'PLS_REGRA_FRANQUIA_PROC';

		if (qt_registro_w = 0) then
			CALL exec_sql_dinamico('Tasy',' drop table PLS_REGRA_FRANQUIA_PROC ');
		end if;
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name	= 'PLS_REGRA_FRANQUIA';

	if (qt_registro_w = 1) then
		select	count(1)
		into STRICT	qt_registro_w
		from	tabela_sistema
		where	nm_tabela	= 'PLS_REGRA_FRANQUIA';

		if (qt_registro_w = 0) then
			CALL exec_sql_dinamico('Tasy',' drop table PLS_REGRA_FRANQUIA ');
		end if;
	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('22/01/2014','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name	= 'PLS_GERAR_FRANQUIA';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('Edgar', 'drop procedure PLS_GERAR_FRANQUIA'
);

	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('29/01/2014','dd/mm/yyyy')) then
	CALL pls_baca_nr_nota_numerico();
end if;

if (dt_versao_atual_cliente_w < to_date('30/01/2014','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_FRANQ_PAG'
	and	column_name	= 'NR_SEQ_REGRA';

	if (coalesce(qt_registro_w,0)	> 0) then
		CALL Exec_sql_Dinamico('Edgar', 'alter table pls_franq_pag drop column nr_seq_regra ');
	end if;
end if;

if (dt_versao_atual_cliente_w < to_date('01/02/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PTU_NOTA_COBRANCA'
	and	column_name	= 'NR_GUIA_PRINCIPAL'
	and	data_type	= 'VARCHAR2';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COBRANCA add nr_guia_principal_varchar varchar2(20) ');
		CALL exec_sql_dinamico('Tasy',' update PTU_NOTA_COBRANCA set	nr_guia_principal_varchar = nr_guia_principal ');
		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COBRANCA rename column nr_guia_principal to nr_guia_principal2 ');
		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COBRANCA rename column nr_guia_principal_varchar to nr_guia_principal ');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PTU_NOTA_COBRANCA'
	and	column_name	= 'NR_GUIA_PRINCIPAL_NUMERICO'
	and	data_type	= 'VARCHAR2';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COBRANCA add nr_guia_principal_numerico varchar2(20) ');
		CALL exec_sql_dinamico('Tasy',' update PTU_NOTA_COBRANCA set	nr_guia_principal_numerico = somente_numero(nr_guia_principal) ');
	end if;
end if;

if (dt_versao_atual_cliente_w < to_date('31/03/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PTU_NOTA_COBRANCA'
	and	column_name	= 'NR_GUIA_PRINCIPAL2'
	and	data_type	= 'NUMBER';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COBRANCA drop column nr_guia_principal2 ');
	end if;
end if;


if (dt_versao_atual_cliente_w < to_date('05/02/2014','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name	= 'PLS_GERAR_REAJ_TIT_QUOTA';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('Edgar', 'drop procedure PLS_GERAR_REAJ_TIT_QUOTA'
);

	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name	= 'PLS_OBTER_IE_SITUACAO_TIT';

	if (coalesce(qt_registro_w,0)	> 0) then

		CALL Exec_sql_Dinamico('Edgar', 'drop function PLS_OBTER_IE_SITUACAO_TIT'
);

	end if;

end if;

/* Francisco - 12/02/2014 - Ajuste nova função */

if (dt_versao_atual_cliente_w < to_date('12/02/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_AME_REGRA_GER_CONTRATO'
	and	column_name	= 'NR_SEQ_AME_EMPRESA';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_AME_REGRA_GER_CONTRATO drop column NR_SEQ_AME_EMPRESA');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_AME_REGRA_GER_CONTRATO'
	and	column_name	= 'NR_SEQ_AME_SUBSIDIARIA';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_AME_REGRA_GER_CONTRATO drop column NR_SEQ_AME_SUBSIDIARIA');
	end if;
end if;

-- Edgar - 20/03/2014
if (dt_versao_atual_cliente_w < to_date('20/03/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_LOTE_FATURAMENTO'
	and	column_name	= 'NR_CONTRATO';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_LOTE_FATURAMENTO drop column NR_CONTRATO');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_LOTE_FATURAMENTO'
	and	column_name	= 'NR_SEQ_COOPERATIVA';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_LOTE_FATURAMENTO drop column NR_SEQ_COOPERATIVA');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_LOTE_FATURAMENTO'
	and	column_name	= 'NR_SEQ_INTERCAMBIO';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_LOTE_FATURAMENTO drop column NR_SEQ_INTERCAMBIO');
	end if;


	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_LOTE_FATURAMENTO'
	and	column_name	= 'NR_SEQ_CONTRATO';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_LOTE_FATURAMENTO drop column NR_SEQ_CONTRATO');
	end if;

end if;

--jtonon - 27/03/2014
if (dt_versao_atual_cliente_w < to_date('27/03/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PTU_FATURA'
	and	column_name	= 'NR_FATURA'
	and	data_type	= 'VARCHAR2';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PTU_FATURA add nr_fatura_varchar varchar2(30) ');
		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COBRANCA add nr_fatura_glosada_varchar varchar2(30) ');
		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COBRANCA add nr_ndr_glosada_varchar varchar2(30) ');

		CALL exec_sql_dinamico('Tasy',' update PTU_FATURA set nr_fatura_varchar = nr_fatura ');
		CALL exec_sql_dinamico('Tasy',' update PTU_NOTA_COBRANCA set nr_fatura_glosada_varchar = nr_fatura_glosada ');
		CALL exec_sql_dinamico('Tasy',' update PTU_NOTA_COBRANCA set nr_ndr_glosada_varchar = nr_ndr_glosada ');

		commit;

		CALL exec_sql_dinamico('Tasy',' alter table PTU_FATURA drop column nr_fatura ');
		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COBRANCA drop column nr_fatura_glosada ');
		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COBRANCA drop column nr_ndr_glosada ');

		CALL exec_sql_dinamico('Tasy',' alter table PTU_FATURA rename column nr_fatura_varchar to nr_fatura ');
		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COBRANCA rename column nr_fatura_glosada_varchar to nr_fatura_glosada ');
		CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COBRANCA rename column nr_ndr_glosada_varchar to nr_ndr_glosada ');
	end if;
end if;

--wcbernardino
if (dt_versao_atual_cliente_w < to_date('28/03/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	funcao_parametro
	where	nr_sequencia	= 12
	and	cd_funcao	= 1334;

	if (qt_registro_w = 1) then
		update	funcao_parametro
		set	ds_parametro	= 'Permitir fechar discussão de finalização com itens não reconhecidos'
		where	nr_sequencia	= 12
		and	cd_funcao	= 1334;

		commit;
	end if;
end if;

/*aaschlote 01/04/2014 - OS - 674261 - Ajustar valor para campo novo*/

if (dt_versao_atual_cliente_w < to_date('01/04/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	PLS_PARAMETRO_PAGAMENTO
	where	coalesce(IE_PROT_SEM_PAGTO::text, '') = '';

	if (qt_registro_w	> 0) then
		update	PLS_PARAMETRO_PAGAMENTO
		set	IE_PROT_SEM_PAGTO	= 'N'
		where	coalesce(IE_PROT_SEM_PAGTO::text, '') = '';
	end if;
end if;

/*aaschlote 22/04/2014 - OS - 724650 - Ajustar valor para campo novo*/

if (dt_versao_atual_cliente_w < to_date('22/04/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	PLS_PARAMETRO_PAGAMENTO
	where	coalesce(IE_DATA_LANC_UNICO::text, '') = '';

	if (qt_registro_w	> 0) then
		update	PLS_PARAMETRO_PAGAMENTO
		set	IE_DATA_LANC_UNICO	= 'M'
		where	coalesce(IE_DATA_LANC_UNICO::text, '') = '';
	end if;
end if;

if (dt_versao_atual_cliente_w < to_date('27/05/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	ptu_inconsistencia_a700
	where	cd_inconsistencia in (1,2,3,21);

	if (qt_registro_w = 4) then
		begin
		delete	FROM ptu_inconsistencia_a700
		where	cd_inconsistencia = 21;
		exception
		when others then
			null;
		end;
	end if;
end if;

/*aaschlote 02/06/2014 - OS - 684762 - Ajustar valor para campo novo*/

if (dt_versao_atual_cliente_w < to_date('02/06/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	PLS_CADASTRO_REGRA_ITEM
	where	coalesce(IE_UTILIZACAO::text, '') = '';

	if (qt_registro_w	> 0) then
		update	PLS_CADASTRO_REGRA_ITEM
		set	IE_UTILIZACAO	= 'A'
		where	coalesce(IE_UTILIZACAO::text, '') = '';
	end if;
end if;

/*aaschlote 02/06/2014 - OS - 734037 - Ajustar valor para campo novo*/

if (dt_versao_atual_cliente_w < to_date('02/06/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	PLS_PRESTADOR
	where	coalesce(IE_POSTO_COLETA::text, '') = '';

	if (qt_registro_w	> 0) then
		update	PLS_PRESTADOR
		set	IE_POSTO_COLETA	= 'N'
		where	coalesce(IE_POSTO_COLETA::text, '') = '';
	end if;
end if;


if (dt_versao_atual_cliente_w < to_date('01/10/2014','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_RPS_PRESTADOR'
	and	column_name 	= 'NR_SEQ_ALT_PREST';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_RPS_PRESTADOR drop column NR_SEQ_ALT_PREST');
	end if;

end if;


if (dt_versao_atual_cliente_w < to_date('03/10/2014','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_PRESTADOR_MEDICO'
	and	column_name	= 'IE_POS_GRAD_360';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PRESTADOR_MEDICO drop column IE_POS_GRAD_360 ');
	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('27/10/2014','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name	= 'PLSPMGS_PTUPRGS_FK';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PREST_MED_GRUPO_SERV drop constraint PLSPMGS_PTUPRGS_FK ');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name	= 'PLSPMGS_PTUPRGS_FK_I';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Tasy',' drop index PLSPMGS_PTUPRGS_FK_I ');
	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('06/01/2015','dd/mm/yyyy')) then
	CALL pls_baca_centro_custo_contest();
end if;

if (dt_versao_atual_cliente_w < to_date('07/01/2015','dd/mm/yyyy')) then
	CALL pls_baca_ajuste_regra_xml_fat();
end if;

if (dt_versao_atual_cliente_w < to_date('20/01/2015','dd/mm/yyyy')) then
	update	pls_regra_lanc_automatico
	set	ie_somente_sem_diaria	= 'N'
	where	coalesce(ie_somente_sem_diaria::text, '') = '';
end if;

if (dt_versao_atual_cliente_w < to_date('21/01/2015','dd/mm/yyyy')) then
	CALL pls_baca_ajustar_vl_neg_filme();
end if;

if (dt_versao_atual_cliente_w < to_date('09/03/2015','dd/mm/yyyy')) then
	CALL pls_baca_ajuste_fat_competenc();

	update	pls_evento_fat_regra_itens
	set	ie_tipo_pessoa_prest_pag = 'A'
	where	coalesce(ie_tipo_pessoa_prest_pag::text, '') = '';

	update	pls_evento_fat_regra_itens
	set	ie_tipo_pessoa_prest_atend = 'A'
	where	coalesce(ie_tipo_pessoa_prest_atend::text, '') = '';

	update	pls_evento_fat_regra_itens
	set	ie_tipo_pessoa_prest_solic = 'A'
	where	coalesce(ie_tipo_pessoa_prest_solic::text, '') = '';
end if;

if (dt_versao_atual_cliente_w < to_date('21/04/2015','dd/mm/yyyy')) then

	update	pls_evento_conta_ajuste
	set	ie_origem_ajuste = 'A'
	where	coalesce(ie_origem_ajuste::text, '') = '';

end if;

if (dt_versao_atual_cliente_w < to_date('20/05/2015','dd/mm/yyyy')) then

	update	pls_regra_preco_pos_estab
	set	ie_tipo_intercambio = 'A'
	where	coalesce(ie_tipo_intercambio::text, '') = '';

	update	pls_regra_preco_pos_estab
	set	ie_tipo_congenere = 'A'
	where	coalesce(ie_tipo_congenere::text, '') = '';

end if;

if (dt_versao_atual_cliente_w < to_date('08/06/2015','dd/mm/yyyy')) then

	update	pls_parametro_faturamento
	set	ie_contestacao_refat	= 'CI'
	where	coalesce(ie_contestacao_refat::text, '') = '';

end if;

if (dt_versao_atual_cliente_w < to_date('17/07/2015','dd/mm/yyyy')) then

	update	pls_periodo_pagamento
	set	ie_carta_retencao	= 'N'
	where	coalesce(ie_carta_retencao::text, '') = '';

end if;

if (dt_versao_atual_cliente_w < to_date('05/08/2015','dd/mm/yyyy')) then

	update	pls_parametro_faturamento
	set	ie_process_refat	= 'GC'
	where	coalesce(ie_process_refat::text, '') = '';

end if;

if (dt_versao_atual_cliente_w < to_date('21/08/2015','dd/mm/yyyy')) then

	update	pls_lote_ret_trib_valor
	set	vl_saldo_trib	= coalesce(vl_imposto,0)
	where	coalesce(vl_saldo_trib::text, '') = '';

end if;

if (dt_versao_atual_cliente_w < to_date('24/08/2015','dd/mm/yyyy')) then

	update	pls_processo_procedimento
	set	cd_procedimento_imp	= cd_procedimento
	where	coalesce(cd_procedimento_imp::text, '') = '';

end if;

if (dt_versao_atual_cliente_w < to_date('31/08/2015','dd/mm/yyyy')) then

	update	pls_notificacao_regra
	set	ie_notific_pag_contrato	= 'N'
	where	coalesce(ie_notific_pag_contrato::text, '') = '';

end if;

if (dt_versao_atual_cliente_w < to_date('03/09/2015','dd/mm/yyyy')) then
	CALL baca_pls_atualizar_dt_mov_coop();
end if;

if (dt_versao_atual_cliente_w < to_date('15/09/2015','dd/mm/yyyy')) then

	update	pls_notificacao_regra
	set	ie_considera_tit_regra	= 'S'
	where	coalesce(ie_considera_tit_regra::text, '') = '';

end if;

if (dt_versao_atual_cliente_w < to_date('08/10/2015','dd/mm/yyyy')) then

	update	pls_prestador_excl_subst
	set	ie_exibe_portal	= 'S'
	where	coalesce(ie_exibe_portal::text, '') = '';

	update	pls_preco_grupo_servico
	set	ie_guia_medico	= 'S'
	where	coalesce(ie_guia_medico::text, '') = '';

end if;

if (dt_versao_atual_cliente_w < to_date('19/10/2015','dd/mm/yyyy')) then

	update	pls_oc_cta_filtro
	set	ie_filtro_oper_benef	= 'N'
	where	coalesce(ie_filtro_oper_benef::text, '') = '';

end if;

if (dt_versao_atual_cliente_w < to_date('23/10/2015','dd/mm/yyyy')) then

	begin
	update	pls_oc_cta_tipo_validacao
	set	qt_max_regra	= 999
	where	nr_sequencia	= 55;
	exception
	when others then
		null;
	end;

end if;

if (dt_versao_atual_cliente_w < to_date('26/10/2015','dd/mm/yyyy')) then

	update	pls_glosa_evento cr
	set	cr.ie_plano	= (SELECT cm.ie_plano from pls_glosa_evento cm where cm.nr_seq_motivo_glosa = cr.nr_seq_motivo_glosa and cm.ie_evento = 'CC')
	where	cr.ie_evento 	= 'CR'
	and	cr.nr_seq_motivo_glosa in (select	gl.nr_sequencia
						from	tiss_motivo_glosa gl
						where	gl.cd_motivo_tiss in (	'1420','1423','1410','1421','2301','2101','2001','2201','2009','2206','9920',
										'2005','2099','2204','2210','2105','2199','2006','2205'));

end if;

if (dt_versao_atual_cliente_w < to_date('29/10/2015','dd/mm/yyyy')) then

	update	ptu_camara_contestacao
	set	ie_tipo_arquivo_cob = '502'
	where	coalesce(ie_tipo_arquivo_cob::text, '') = '';

	update	ptu_fatura
	set	ie_tipo_arquivo_cob = '502'
	where	coalesce(ie_tipo_arquivo_cob::text, '') = '';

end if;

if (dt_versao_atual_cliente_w < to_date('03/11/2015','dd/mm/yyyy')) then

	update	pls_oc_cta_val_uni_med
	set	ie_valida_unidade_medida_ptu	= 'N'
	where	coalesce(ie_valida_unidade_medida_ptu::text, '') = '';

	update	pls_oc_cta_val_cbo_partic
	set	ie_valida_versao_tiss	= 'N'
	where	coalesce(ie_valida_versao_tiss::text, '') = '';

end if;

if (dt_versao_atual_cliente_w < to_date('06/11/2015','dd/mm/yyyy')) then

	begin
	update	tabela_atributo
	set	ie_obrigatorio	= 'N'
	where	nm_tabela	= 'W_PLS_MAT_UNIMED_BRAS'
	and	nm_atributo	= 'DES_PRODUTO'  LIMIT 1;
	exception
	when others then
		null;
	end;

	begin
	update	tabela_atributo
	set	ie_obrigatorio	= 'N'
	where	nm_tabela	= 'W_PLS_MAT_UNIMED_BRAS'
	and	nm_atributo	= 'DES_APRESENTACAO'  LIMIT 1;
	exception
	when others then
		null;
	end;

	begin
	update	tabela_atributo
	set	ie_obrigatorio	= 'N'
	where	nm_tabela	= 'PLS_MATERIAL_UNIMED_BRAS'
	and	nm_atributo	= 'DS_PRODUTO'  LIMIT 1;
	exception
	when others then
		null;
	end;

	begin
	update	tabela_atributo
	set	ie_obrigatorio	= 'N'
	where	nm_tabela	= 'PLS_MATERIAL_UNIMED_BRAS'
	and	nm_atributo	= 'DS_APRESENTACAO'  LIMIT 1;
	exception
	when others then
		null;
	end;

	begin
	update	tabela_atributo
	set	ie_obrigatorio	= 'N'
	where	nm_tabela	= 'PLS_LOTE_IMP_MAT_UNI_BRAS'
	and	nm_atributo	= 'DS_PRODUTO'  LIMIT 1;
	exception
	when others then
		null;
	end;

	begin
	update	tabela_atributo
	set	ie_obrigatorio	= 'N'
	where	nm_tabela	= 'PLS_LOTE_IMP_MAT_UNI_BRAS'
	and	nm_atributo	= 'DS_APRESENTACAO'  LIMIT 1;
	exception
	when others then
		null;
	end;

end if;

if (dt_versao_atual_cliente_w < to_date('29/01/2016','dd/mm/yyyy')) then

	begin
	update	dic_expressao
	set	ds_expressao_br	= 'OPS - Análise de Discussão da Contestação e Recurso de Glosa'
	where	cd_expressao	= 335267;
	exception
	when others then
		null;
	end;

	begin
	update	funcao
	set	ds_hint		= 'OPS - Análise de Discussão da Contestação e Recurso de Glosa'
	where	cd_funcao	= 1349;
	exception
	when others then
		null;
	end;

	begin
	update	pls_parametros_rec_glosa
	set	ie_processo_analise_recurso	= 'PRG';
	exception
	when others then
		null;
	end;

	begin
	update	pls_rec_glosa_protocolo
	set	dt_competencia_lote = coalesce(dt_liberacao_pag,dt_apresentacao_lote)
	where	ie_status <> '6'
	and	coalesce(dt_competencia_lote::text, '') = '';
	exception
	when others then
		null;
	end;

end if;

if (dt_versao_atual_cliente_w < to_date('01/03/2016','dd/mm/yyyy')) then

	begin
	update	pls_rec_glosa_protocolo
	set	cd_estabelecimento	= cd_estabelecimento_w
	where	coalesce(cd_estabelecimento::text, '') = '';
	exception
	when others then
		null;
	end;

end if;

if (dt_versao_atual_cliente_w < to_date('29/03/2016','dd/mm/yyyy')) then

	begin
	update	tabela_atributo
	set	qt_tamanho	= 5
	where	nm_atributo	= 'IE_TIPO_TRIBUTACAO'
	and	nm_tabela	= 'PLS_TRIB_CONTA_PAGAR_LOG';
	exception
	when others then
		null;
	end;

end if;

if (dt_versao_atual_cliente_w < to_date('11/04/2016','dd/mm/yyyy')) then

	begin
	update	pls_regra_preco_proc
	set	ie_tipo_atendimento	= 'A'
	where	coalesce(ie_tipo_atendimento::text, '') = '';
	exception
	when others then
		null;
	end;

	begin
	update	pls_regra_preco_mat
	set	ie_tipo_atendimento	= 'A'
	where	coalesce(ie_tipo_atendimento::text, '') = '';
	exception
	when others then
		null;
	end;

	begin
	update	pls_regra_preco_servico
	set	ie_tipo_atendimento	= 'A'
	where	coalesce(ie_tipo_atendimento::text, '') = '';
	exception
	when others then
		null;
	end;

	begin
	update	pls_protocolo_conta
	set	ie_tipo_atendimento	= 'L'
	where	coalesce(ie_tipo_atendimento::text, '') = '';
	exception
	when others then
		null;
	end;

end if;

if (dt_versao_atual_cliente_w < to_date('11/04/2016','dd/mm/yyyy')) then

	begin
	update 	pls_prestador
	set	ie_divulga_email = 'S'
	where	coalesce(ie_divulga_email::text, '') = '';
	exception
	when others then
	null;
	end;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ajustar_base_fin ( nm_usuario_p text) FROM PUBLIC;

