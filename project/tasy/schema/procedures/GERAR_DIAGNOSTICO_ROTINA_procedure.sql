-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_diagnostico_rotina ( nr_atendimento_p bigint, dt_diagnostico_p timestamp, nr_seq_cid_p bigint, nm_usuario_p text, ie_liberado_p text default null, dt_fim_p timestamp default null, ds_observacao_p text default null, ie_classif_diag_p text default null, ie_lado_p text default null, nr_seq_mentor_p INOUT bigint DEFAULT NULL, nr_seq_interno_p INOUT bigint DEFAULT NULL, NR_SEQ_ATEND_CONS_PEPA_P ATEND_CONSULTA_PEPA.NR_SEQUENCIA%type default null) AS $body$
DECLARE


nr_seq_pend_regra_w			bigint;	
nr_atendimento_w			bigint;
nr_sequencia_w				bigint;
cd_pessoa_fisica_w			varchar(10);
qt_idade_w					bigint;
cd_setor_atendimento_w		bigint;
cd_doenca_w					varchar(10);
cd_estabelecimento_w		integer;
ie_classificacao_doenca_w	varchar(1);
ie_classificacao_doenca_ww	varchar(1);
ie_tipo_diagnostico_w		bigint;
ie_tipo_diagnostico_ww		bigint;
cd_medico_w					varchar(10);
nr_seq_etiologia_w			bigint;
nr_seq_interno_w			bigint;
nr_seq_mentor_w				bigint;
nr_seq_episodio_w			bigint;
nr_restrigir_regras_w   	varchar(2000);
ds_comando_w				varchar(2000);
ds_atrib_visao_w			tabela_visao_atributo.nm_atributo%type;
is_inpatient_w				varchar(1) := 'N';

classificacao_c CURSOR FOR
	SELECT 	ie_classificacao_diagnostico
	from 	classificacao_diagnostico
	where 	ie_valor_padrao = 'S'
	and 	(ie_classificacao_diagnostico IS NOT NULL AND ie_classificacao_diagnostico::text <> '');

BEGIN

if (coalesce(nr_atendimento_p,0)	= 0) then
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(267634);
end if;

nr_seq_mentor_w := 0;

select	max(cd_doenca),
	max(ie_classificacao_doenca),
	max(nr_seq_etiologia),
	max(ie_tipo_diagnostico)
into STRICT	cd_doenca_w,
	ie_classificacao_doenca_ww,
	nr_seq_etiologia_w,
	ie_tipo_diagnostico_ww
from	cid_rotina
where	nr_sequencia	= nr_seq_cid_p;

select	max(cd_medico)
into STRICT	cd_medico_w
from	diagnostico_medico
where	nr_atendimento = nr_atendimento_p
and	dt_diagnostico = dt_diagnostico_p;

cd_estabelecimento_w := obter_estabelecimento_ativo;

ie_classificacao_doenca_w := obter_param_usuario(281, 259, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_classificacao_doenca_w);
ie_tipo_diagnostico_w := obter_param_usuario(-980, 1, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_tipo_diagnostico_w);

select	nextval('diagnostico_doenca_seq')
into STRICT	nr_seq_interno_w
;


if (PKG_I18N.get_user_locale() = 'de_DE') then

	select 	max(nr_seq_episodio)
	into STRICT	nr_seq_episodio_w
	from 	atendimento_paciente
	where 	nr_atendimento = nr_atendimento_p;

	if (obter_se_adic_diag(	cd_doenca_w,
							coalesce(ie_classif_diag_p, coalesce(coalesce(ie_classificacao_doenca_ww,ie_classificacao_doenca_w),'S')),
							ie_lado_p, 
							coalesce(coalesce(ie_tipo_diagnostico_ww,ie_tipo_diagnostico_w),2),
							nr_seq_episodio_w) = 'N') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1061344,'CD_DOENCA_W=' || cd_doenca_w);
	end if;
	
	select	CASE WHEN obter_tipo_episodio(nr_seq_episodio_w)=1 THEN 'S'  ELSE 'N' END
	into STRICT	is_inpatient_w
	;

end if;


Insert into diagnostico_doenca(
	nr_atendimento,
	dt_diagnostico, 
	cd_doenca, 
	dt_atualizacao, 
	nm_usuario, 
	ds_diagnostico, 
	ie_classificacao_doenca,
	ie_tipo_diagnostico,
	cd_medico,
	nr_seq_etiologia,
	dt_liberacao,
	dt_fim,			
	ie_lado,
	ie_situacao,
	nr_seq_interno,
	nr_seq_rotina,
	ie_relevante_drg,
	nr_seq_atend_cons_pepa,
	IE_SIST_EXT_ORIGEM)
Values (	nr_atendimento_p,
	dt_diagnostico_p,
	cd_doenca_w,
	clock_timestamp(),
	nm_usuario_p,
	substr(ds_observacao_p,1,2000),
	coalesce(ie_classif_diag_p, coalesce(coalesce(ie_classificacao_doenca_ww,ie_classificacao_doenca_w),'S')), -- Hudson Alt
	coalesce(coalesce(ie_tipo_diagnostico_ww,ie_tipo_diagnostico_w),2),
	cd_medico_w,
	nr_seq_etiologia_w,
	CASE WHEN ie_liberado_p='S' THEN clock_timestamp() END ,
	dt_fim_p,		
	ie_lado_p,
	'A',
	nr_seq_interno_w,
	nr_seq_cid_p,
	is_inpatient_w,
	CASE WHEN NR_SEQ_ATEND_CONS_PEPA_P=0 THEN  null  ELSE NR_SEQ_ATEND_CONS_PEPA_P END ,
	'TASY');

nr_seq_interno_p := nr_seq_interno_w;


if (PKG_I18N.get_user_locale() = 'de_DE') then
	for r_conversao_w in classificacao_c loop
		begin
		
		if (r_conversao_w.ie_classificacao_diagnostico = 'DPE') then
				ds_atrib_visao_w := 'IE_DIAG_PRINC_EPISODIO';
		elsif (r_conversao_w.ie_classificacao_diagnostico = 'UBE') then
			ds_atrib_visao_w := 'IE_DIAG_REFERENCIA';
		elsif (r_conversao_w.ie_classificacao_diagnostico = 'BEH') then
			ds_atrib_visao_w := 'IE_DIAG_TRATAMENTO';
		elsif (r_conversao_w.ie_classificacao_diagnostico = 'AUF') then
			ds_atrib_visao_w := 'IE_DIAG_ADMISSAO';
		elsif (r_conversao_w.ie_classificacao_diagnostico = 'ENT') then
			ds_atrib_visao_w := 'IE_DIAG_ALTA';
		elsif (r_conversao_w.ie_classificacao_diagnostico = 'OPD') then
			ds_atrib_visao_w := 'IE_DIAG_CIRURGIA';
		elsif (r_conversao_w.ie_classificacao_diagnostico = 'TOD') then
			ds_atrib_visao_w := 'IE_DIAG_OBITO';
		elsif (r_conversao_w.ie_classificacao_diagnostico = 'POD') then
			ds_atrib_visao_w := 'IE_DIAG_PRE_CIR';
		elsif (r_conversao_w.ie_classificacao_diagnostico = 'FAC') then
			ds_atrib_visao_w := 'IE_DIAG_PRINC_DEPART';
		elsif (r_conversao_w.ie_classificacao_diagnostico = 'BHS') then
			ds_atrib_visao_w := 'IE_DIAG_TRAT_CERT';
		elsif (r_conversao_w.ie_classificacao_diagnostico = 'FAL') then
			ds_atrib_visao_w := 'IE_DIAG_CRONICO';
		elsif (r_conversao_w.ie_classificacao_diagnostico = 'ASV') then
			ds_atrib_visao_w := 'IE_DIAG_TRAT_ESPECIAL';		
		end if;
		
		if (ds_atrib_visao_w IS NOT NULL AND ds_atrib_visao_w::text <> '')then
			ds_comando_w	:= 	'update diagnostico_doenca 
								 set '||ds_atrib_visao_w||' = ''S''
								 where nr_seq_interno = '||nr_seq_interno_w;
								
			EXECUTE ds_comando_w;
		end if;
		end;
	end loop;
end if;

commit;

if (coalesce(ie_liberado_p,'N') = 'S') then

	SELECT * FROM GQA_Liberacao_diagnostico(nr_seq_interno_w, nm_usuario_p, nr_seq_mentor_w, nr_restrigir_regras_w) INTO STRICT nr_seq_mentor_w, nr_restrigir_regras_w;
	CALL gera_protocolo_assistencial(nr_atendimento_p, nm_usuario_p);

	CALL GERAR_PACIENTE_GRUPO(cd_doenca_w,obter_pessoa_atendimento(nr_atendimento_p,'C'),nm_usuario_p);

  CALL ATUALIZAR_EV_LINHA_CUIDADO('CD', 'DIAGNOSTICO_DOENCA', nr_seq_interno_w, null, Obter_pessoa_atendimento(nr_atendimento_p,'C'), nm_usuario_p);
end if;

CALL gerar_evento_diagnostico(nr_atendimento_p,nm_usuario_p,cd_doenca_w);

nr_seq_mentor_p := nr_seq_mentor_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_diagnostico_rotina ( nr_atendimento_p bigint, dt_diagnostico_p timestamp, nr_seq_cid_p bigint, nm_usuario_p text, ie_liberado_p text default null, dt_fim_p timestamp default null, ds_observacao_p text default null, ie_classif_diag_p text default null, ie_lado_p text default null, nr_seq_mentor_p INOUT bigint DEFAULT NULL, nr_seq_interno_p INOUT bigint DEFAULT NULL, NR_SEQ_ATEND_CONS_PEPA_P ATEND_CONSULTA_PEPA.NR_SEQUENCIA%type default null) FROM PUBLIC;

