-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE intcom_gerar_resposta_cotacao ( cd_cnpj_p text, id_artigo_p text, vl_unit_material_p bigint, /*É a Tag Preco_Unitario*/
 vl_total_p bigint, /*É a Tag Preco_Total*/
 ds_marca_p text, /*É a Tag Fabricante*/
 ds_observacao_p text, /*É a Tag Comentario*/
 ds_embalagem_p text, /*É a Tag Embalagem*/
 ie_vencedor_p text, /*É a Tag Valor que está dentro da Tag Campo_Extra quando o NOME dor igual a Selecionado*/
 cd_cnpj_vencedor_p text, /*Passar o CNPJ do vencedor quando a Tag ie_venceddor = S*/
 ds_motivo_venc_p text, /*É a Tag Valor que está dentro da Tag Campo_Extra quando o NOME for igual a justificativa*/
 nm_usuario_p text, nr_cot_compra_p bigint, nr_item_cot_compra_p bigint) AS $body$
DECLARE

 
cd_estabelecimento_w			smallint;			
cd_cnpj_w				varchar(14);
cd_cnpj_venc_w				varchar(14);
cd_material_w				integer;
qt_material_w				double precision;
vl_material_w				double precision;
vl_total_w				double precision;
ie_grava_embalag_obs_w			varchar(1);
ie_grava_comentario_obs_w			varchar(1);
nr_cot_compra_w				bigint;
cd_unidade_medida_compra_w		varchar(30);
ds_observacao_w				varchar(255);
nr_sequencia_item_w			bigint;
nr_seq_fornec_w				bigint;
qt_erro_w				bigint := 0;
ds_erro_w				varchar(2000) := '';
nr_seq_registro_w			bigint;
ds_login_w				varchar(255);
ds_senha_w				varchar(255);
nr_documento_externo_w			varchar(100);


BEGIN 
 
nr_cot_compra_w := coalesce(nr_cot_compra_p,0);
 
select	coalesce(max(cd_material),0) 
into STRICT	cd_material_w 
from	cot_compra_item 
where	nr_cot_compra = nr_cot_compra_w 
and	nr_item_cot_compra = nr_item_cot_compra_p;
 
select	max(nr_documento_externo), 
	max(cd_estabelecimento) 
into STRICT	nr_documento_externo_w, 
	cd_estabelecimento_w 
from	cot_compra 
where	nr_cot_compra = nr_cot_compra_w;
 
if (cd_material_w > 0) then 
	begin 
 
	cd_cnpj_w	:= cd_cnpj_p;
	cd_cnpj_venc_w	:= cd_cnpj_vencedor_p;
	vl_material_w	:= vl_unit_material_p;
	vl_total_w	:= vl_total_p;
	 
	if (length(cd_cnpj_w) <> 14) then 
		cd_cnpj_w := lpad(cd_cnpj_w,14,'0');
	end if;	
	 
	if (length(cd_cnpj_venc_w) <> 14) then 
		cd_cnpj_venc_w := lpad(cd_cnpj_venc_w,14,'0');
	end if;
	 
	select	coalesce(a.ie_grava_embalag_obs,'N'), 
		coalesce(a.ie_grava_comentario_obs,'S') 
	into STRICT	ie_grava_embalag_obs_w, 
		ie_grava_comentario_obs_w 
	from	parametro_compras a, 
		cot_compra b 
	where	a.cd_estabelecimento	= b.cd_estabelecimento 
	and	b.nr_cot_compra		= nr_cot_compra_w;
	 
	select	coalesce(max(nr_sequencia),0) 
	into STRICT	nr_seq_fornec_w 
	from	cot_compra_forn 
	where	nr_cot_compra = nr_cot_compra_w 
	and	cd_cgc_fornecedor = cd_cnpj_w;	
		 
	if (nr_seq_fornec_w > 0) then 
	 
		select	coalesce(max(qt_material),0) 
		into STRICT	qt_material_w 
		from	cot_compra_item 
		where	nr_cot_compra = nr_cot_compra_w 
		and	nr_item_cot_compra = nr_item_cot_compra_p;
		 
		if (ie_grava_comentario_obs_w = 'S') then 
			ds_observacao_w := substr(ds_observacao_p,1,255);
		end if;
		 
		if (ie_grava_embalag_obs_w = 'S') and (ds_embalagem_p IS NOT NULL AND ds_embalagem_p::text <> '') then				 
			ds_observacao_w := substr(ds_observacao_w || chr(13) || chr(10) || WHEB_MENSAGEM_PCK.get_texto(279122) || ds_embalagem_p,1,255);
		end if;
	 
		select	nextval('cot_compra_forn_item_seq') 
		into STRICT	nr_sequencia_item_w 
		;
		 
		begin 
		insert into cot_compra_forn_item( 
			nr_sequencia, 
			nr_seq_cot_forn, 
			nr_cot_compra, 
			nr_item_cot_compra, 
			cd_cgc_fornecedor, 
			qt_material, 
			vl_unitario_material, 
			dt_atualizacao, 
			nm_usuario, 
			vl_preco_liquido, 
			vl_total_liquido_item, 
			ie_situacao, 
			ds_marca, 
			ds_marca_fornec, 
			cd_material, 
			nr_id_integracao, 
			ds_observacao, 
			qt_prioridade) 
		values (	nr_sequencia_item_w, 
			nr_seq_fornec_w, 
			nr_cot_compra_w, 
			nr_item_cot_compra_p, 
			cd_cnpj_w, 
			qt_material_w, 
			vl_material_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			vl_total_w, 
			vl_total_w, 
			'A', 
			substr(ds_marca_p,1,30), 
			substr(ds_marca_p,1,30), 
			cd_material_w, 
			id_artigo_p, 
			ds_observacao_w, 
			100);
		exception 
		when others then 
			qt_erro_w	:= 1;
			ds_erro_w	:= substr(WHEB_MENSAGEM_PCK.get_texto(279121) || sqlerrm,1,2000);
		end;
				 
			 
		if (ie_vencedor_p = 'S') and (qt_erro_w = 0) then 
		 
			begin 
			update	cot_compra_item 
			set	cd_cgc_fornecedor_venc_alt 		= cd_cnpj_venc_w, 
				ds_motivo_venc_alt			= ds_motivo_venc_p, 
				nr_seq_cot_item_forn		= nr_sequencia_item_w 
			where	nr_cot_compra			= nr_cot_compra_w 
			and	nr_item_cot_compra		= nr_item_cot_compra_p;
			exception 
			when others then 
				qt_erro_w	:= 1;
				ds_erro_w	:= substr(WHEB_MENSAGEM_PCK.get_texto(279120) || sqlerrm,1,2000);	
			end;
			 
		end if;		
	end if;
	end;	
end if;
 
if (qt_erro_w > 0) then 
	 
	rollback;
	select	nextval('registro_integr_compras_seq') 
	into STRICT	nr_seq_registro_w 
	;
 
	select	a.ds_login_integr_compras_ws, 
		a.ds_senha_integr_compras_ws 
	into STRICT	ds_login_w, 
		ds_senha_w 
	from	parametro_compras a 
	where	a.cd_estabelecimento	= cd_estabelecimento_w;
 
	insert into registro_integr_compras( 
		nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		ie_tipo_operacao) 
	values (	nr_seq_registro_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p,	 
		'WDG');
 
	insert into registro_integr_com_xml( 
		nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		nr_seq_registro, 
		ie_status, 
		ie_operacao, 
		ie_sistema_origem, 
		ds_erro, 
		ds_retorno, 
		ie_tipo_operacao, 
		ds_login, 
		ds_senha, 
		id_pdc) 
	values (	nextval('registro_integr_com_xml_seq'), 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_seq_registro_w, 
		'E', 
		'R', 
		'TASY', 
		ds_erro_w, 
		null, 
		'WDG', 
		ds_login_w, 
		ds_senha_w, 
		nr_documento_externo_w);
	commit;
	 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(182482,'DS_ERRO_P='||DS_ERRO_W);
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intcom_gerar_resposta_cotacao ( cd_cnpj_p text, id_artigo_p text, vl_unit_material_p bigint,  vl_total_p bigint,  ds_marca_p text,  ds_observacao_p text,  ds_embalagem_p text,  ie_vencedor_p text,  cd_cnpj_vencedor_p text,  ds_motivo_venc_p text,  nm_usuario_p text, nr_cot_compra_p bigint, nr_item_cot_compra_p bigint) FROM PUBLIC;

