-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_dados_pf_agenda_consulta ( cd_funcao_p bigint, cd_agenda_p bigint, cd_pessoa_fisica_p text, dt_agenda_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ie_forma_apres_p text, cd_categoria_p INOUT text, cd_convenio_p INOUT bigint, cd_plano_p INOUT text, cd_tipo_acomodacao_p INOUT bigint, cd_usuario_convenio_p INOUT text, cd_usuario_plano_p INOUT text, ds_agenda_pac_espera_p INOUT text, dt_validade_p INOUT timestamp, dt_validade_usuario_p INOUT timestamp, ie_pac_duplo_p INOUT text, ie_pac_duplo_agenda_p INOUT text, nm_pessoa_fisica_p INOUT text, nr_doc_convenio_p INOUT text, nr_telefone_p INOUT text, nr_telefone_pac_p INOUT text, ds_erro_pac_agenda_dia_p INOUT text, ds_erro_perm_alterar_p INOUT text, ds_msg_perm_agendar_p INOUT text, ds_msg_perm_alterar_p INOUT text, ds_perg_existe_lista_pac_p INOUT text, ds_perg_pac_outra_lista_p INOUT text, qt_faltas_p INOUT bigint) AS $body$
DECLARE

 
ie_buscar_cod_usuario_w	varchar(1);
ie_verif_pac_lista_espera_w	varchar(1);
ie_questiona_exclusao_lista_w	varchar(1);
ie_outra_lista_w		varchar(1);
ds_perm_agendar_classif_w	varchar(80);
ds_agenda_pac_w			varchar(255);


BEGIN 
 
if (cd_pessoa_fisica_p <> 0) then 
	begin		 
	select	substr(obter_se_perm_pf_classif(cd_funcao_p, cd_agenda_p, cd_pessoa_fisica_p, dt_agenda_p, 'DS'), 1,80), 
		substr(obter_compl_pf(cd_pessoa_fisica_p, 1,'T'), 1,15), 
		substr(obter_nome_pf(cd_pessoa_fisica_p), 1,60), 
		substr(obter_fone_pac_agenda(cd_pessoa_fisica_p), 1,80), 
		coalesce(obter_qt_faltas_pac_agecons(cd_pessoa_fisica_p, cd_estabelecimento_p, cd_agenda_p, ie_forma_apres_p),0) qt_faltas 
	into STRICT	ds_perm_agendar_classif_w, 
		nr_telefone_p, 
		nm_pessoa_fisica_p, 
		nr_telefone_pac_p, 
		qt_faltas_p 
	;
 
	if (nr_telefone_p IS NOT NULL AND nr_telefone_p::text <> '') then 
		nr_telefone_p	:= 'Res: ' || nr_telefone_p;
	end if;
 
	if (ds_perm_agendar_classif_w IS NOT NULL AND ds_perm_agendar_classif_w::text <> '') then 
		begin 
		ds_msg_perm_agendar_p	:= substr(obter_texto_tasy(47595, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		ds_msg_perm_agendar_p	:= replace(ds_msg_perm_agendar_p, '#@IE_PERM_AGENDAR_CLASSIF#@', ds_perm_agendar_classif_w);
		end;
	end if;
 
	select	CASE WHEN count(nr_sequencia)=0 THEN  'N'  ELSE 'S' END  
	into STRICT	ie_pac_duplo_p 
	from	agenda_consulta 
	where	cd_agenda			= cd_agenda_p 
	and	trunc(dt_agenda, 'dd')		= trunc(dt_agenda_p, 'dd') 
	and	ie_status_agenda		<> 'C' 
	and	cd_pessoa_fisica		= cd_pessoa_fisica_p;
	 
	select	CASE WHEN count(a.nr_sequencia)=0 THEN  'N'  ELSE 'S' END  
	into STRICT	ie_pac_duplo_agenda_p 
	from	agenda_consulta a 
	where	cd_agenda			= cd_agenda_p 
	and	trunc(dt_agenda, 'dd')		= trunc(dt_agenda_p, 'dd') 
	and	ie_status_agenda		<> 'C' 
	and	cd_pessoa_fisica		= cd_pessoa_fisica_p;
 
	SELECT * FROM define_convenio_atend_agenda( 
		cd_pessoa_fisica_p, nm_usuario_p, cd_convenio_p, cd_categoria_p, dt_validade_p, cd_usuario_convenio_p, nr_doc_convenio_p, cd_tipo_acomodacao_p, cd_plano_p) INTO STRICT cd_convenio_p, cd_categoria_p, dt_validade_p, cd_usuario_convenio_p, nr_doc_convenio_p, cd_tipo_acomodacao_p, cd_plano_p;
 
	-- Agenda de Serviços - Parametro [101] - Ao informar o paciente, verifica se o mesmo esta em lista de espera (Independente da agenda) 
	ie_verif_pac_lista_espera_w := obter_param_usuario(866, 101, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_verif_pac_lista_espera_w);
 
	if (ie_verif_pac_lista_espera_w = 'S') then 
		begin 
		ds_agenda_pac_w	:= substr(coalesce(obter_agenda_cons_lista_espera(cd_pessoa_fisica_p, 1), ''), 1,255);
		 
		if (coalesce(ds_agenda_pac_w::text, '') = '') then 
			ds_agenda_pac_espera_p := '';
		else 
			select	replace(substr(obter_texto_tasy(47721, wheb_usuario_pck.get_nr_seq_idioma),1,255), '#@DS_AGENDA_PAC_ESPERA#@', ds_agenda_pac_w) 
			into STRICT	ds_agenda_pac_espera_p 
			;
		end if;
		end;
	end if;
 
	-- Agenda de Serviços - Parametro [106] - Questionar se deseja excluir o paciente da lista de espera, ao agendar um paciente existente na lista de espera 
	ie_questiona_exclusao_lista_w := obter_param_usuario(866, 106, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_questiona_exclusao_lista_w);
 
	if (ie_questiona_exclusao_lista_w = 'S') then 
		begin 
		select	substr(obter_se_pac_outra_lista(cd_pessoa_fisica_p, cd_agenda_p), 1,1) 
		into STRICT	ie_outra_lista_w 
		;
 
		if (ie_outra_lista_w = 'S') then 
			ds_perg_pac_outra_lista_p	:= substr(obter_texto_tasy(47618, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		end if;
		end;
	end if;
 
	ds_msg_perm_alterar_p	:= substr(obter_texto_tasy(47596, wheb_usuario_pck.get_nr_seq_idioma),1,255);
	ds_erro_perm_alterar_p	:= substr(obter_texto_tasy(47598, wheb_usuario_pck.get_nr_seq_idioma),1,255);
	ds_erro_pac_agenda_dia_p	:= substr(obter_texto_tasy(47616, wheb_usuario_pck.get_nr_seq_idioma),1,255);
	ds_perg_existe_lista_pac_p	:= substr(obter_texto_tasy(47617, wheb_usuario_pck.get_nr_seq_idioma),1,255);
	end;
end if;
 
-- Agenda de Serviços - Parametro [67] - Ao agendar pacientes da OPS, buscar automaticamente o código do usuário e validade da carteira 
ie_buscar_cod_usuario_w := obter_param_usuario(866, 67, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_buscar_cod_usuario_w);
 
if (ie_buscar_cod_usuario_w = 'S') then 
	begin 
	SELECT * FROM pls_obter_usuario_plano( 
		cd_pessoa_fisica_p, dt_agenda_p, cd_estabelecimento_p, cd_usuario_plano_p, dt_validade_usuario_p) INTO STRICT cd_usuario_plano_p, dt_validade_usuario_p;
	end;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_dados_pf_agenda_consulta ( cd_funcao_p bigint, cd_agenda_p bigint, cd_pessoa_fisica_p text, dt_agenda_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ie_forma_apres_p text, cd_categoria_p INOUT text, cd_convenio_p INOUT bigint, cd_plano_p INOUT text, cd_tipo_acomodacao_p INOUT bigint, cd_usuario_convenio_p INOUT text, cd_usuario_plano_p INOUT text, ds_agenda_pac_espera_p INOUT text, dt_validade_p INOUT timestamp, dt_validade_usuario_p INOUT timestamp, ie_pac_duplo_p INOUT text, ie_pac_duplo_agenda_p INOUT text, nm_pessoa_fisica_p INOUT text, nr_doc_convenio_p INOUT text, nr_telefone_p INOUT text, nr_telefone_pac_p INOUT text, ds_erro_pac_agenda_dia_p INOUT text, ds_erro_perm_alterar_p INOUT text, ds_msg_perm_agendar_p INOUT text, ds_msg_perm_alterar_p INOUT text, ds_perg_existe_lista_pac_p INOUT text, ds_perg_pac_outra_lista_p INOUT text, qt_faltas_p INOUT bigint) FROM PUBLIC;

