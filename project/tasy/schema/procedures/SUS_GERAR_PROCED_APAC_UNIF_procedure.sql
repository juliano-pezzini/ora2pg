-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_gerar_proced_apac_unif ( nr_seq_apac_p bigint, nr_atendimento_p bigint, nr_interno_conta_p bigint, nr_seq_laudo_sus_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, ie_tipo_apac_p bigint) AS $body$
DECLARE

 
cd_cgc_prestador_w	varchar(14);
cd_setor_atendimento_w	integer;
dt_entrada_unidade_w	timestamp;
nr_seq_atepacu_w		bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
cd_medico_responsavel_w	varchar(10);
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
nr_seq_propaci_w		bigint;
qt_procedimento_w		double precision;
qt_passagem_w		integer := 0;
ie_qtd_proc_laudo_w	varchar(15) := 'N';
qt_proc_laudo_w		double precision := 1;
dt_periodo_inicial_w	timestamp;
dt_entrada_w		timestamp;
dt_alta_w		timestamp;
ie_proc_cont_zerado_w	varchar(15) := 'N';

C01 CURSOR FOR 
	SELECT	cd_procedimento, 
		ie_origem_proced, 
		coalesce(qt_procedimento,1) 
	from	sus_laudo_proced_adic 
	where	nr_seq_laudo	= nr_seq_laudo_sus_p;
	

BEGIN 
 
ie_qtd_proc_laudo_w	:= coalesce(Obter_Valor_Param_Usuario(1124,70,Obter_Perfil_Ativo,nm_usuario_p,0),'N');
ie_proc_cont_zerado_w	:= coalesce(Obter_Valor_Param_Usuario(1124,133,Obter_Perfil_Ativo,nm_usuario_p,0),'N');
 
select	max(cd_cgc) 
into STRICT	cd_cgc_prestador_w 
from	estabelecimento 
where	cd_estabelecimento	= cd_estabelecimento_p;
 
select	cd_convenio_parametro, 
	cd_categoria_parametro, 
	dt_periodo_inicial 
into STRICT	cd_convenio_w, 
    cd_categoria_w, 
	dt_periodo_inicial_w 
from	conta_paciente 
where	nr_interno_conta	= nr_interno_conta_p;
 
begin 
select	dt_entrada, 
	dt_alta 
into STRICT	dt_entrada_w, 
	dt_alta_w		 
from	atendimento_paciente 
where	nr_atendimento = nr_atendimento_p;
exception 
when others then 
	dt_entrada_w	:= null;
	dt_alta_w	:= null;
end;
 
 
begin 
if (coalesce(cd_setor_atendimento_p,0) <> 0) then 
	begin 
	select 	count(*) 
	into STRICT	qt_passagem_w 
	from	atend_paciente_unidade 
	where	cd_setor_atendimento = cd_setor_atendimento_p 
	and	nr_atendimento	 = nr_atendimento_p;
	 
	dt_entrada_unidade_w := clock_timestamp();
	 
	if (dt_entrada_unidade_w < coalesce(dt_entrada_w,dt_entrada_unidade_w)) or (dt_entrada_unidade_w > coalesce(dt_alta_w,dt_entrada_unidade_w)) then 
		dt_entrada_unidade_w := coalesce(dt_entrada_w,dt_entrada_unidade_w);
	end if;
	 
	if (coalesce(qt_passagem_w,0) = 0) then 
		begin 
		CALL Gerar_Passagem_Setor_Atend(nr_atendimento_p,cd_setor_atendimento_p,dt_entrada_unidade_w, 'N',nm_usuario_p);
		cd_setor_atendimento_w := cd_setor_atendimento_p;		
		select	a.nr_seq_interno 
		into STRICT	nr_seq_atepacu_w 
		from	atend_paciente_unidade a 
		where	a.nr_atendimento	= nr_atendimento_p 
		and	a.cd_setor_atendimento = cd_setor_atendimento_p;
		end;
	else 
		begin 
		select	a.cd_setor_atendimento, 
			a.dt_entrada_unidade, 
			a.nr_seq_interno 
		into STRICT	cd_setor_atendimento_w, 
			dt_entrada_unidade_w, 
			nr_seq_atepacu_w 
		from	atend_paciente_unidade a 
		where	a.nr_atendimento	= nr_atendimento_p 
		and	a.cd_setor_atendimento = cd_setor_atendimento_p 
		and	a.dt_entrada_unidade 	= 
						(SELECT max(x.dt_entrada_unidade) 
						from atend_paciente_unidade x 
						where x.nr_atendimento = a.nr_atendimento 
						and  x.cd_setor_atendimento = a.cd_setor_atendimento);
		end;
	end if;
	end;
else 
	begin 
	select	a.cd_setor_atendimento, 
		a.dt_entrada_unidade, 
		a.nr_seq_interno 
	into STRICT	cd_setor_atendimento_w, 
		dt_entrada_unidade_w, 
		nr_seq_atepacu_w 
	from	atend_paciente_unidade a 
	where	a.nr_atendimento	= nr_atendimento_p 
	and	a.dt_entrada_unidade 	= 
		(SELECT max(x.dt_entrada_unidade) 
			from atend_paciente_unidade x 
			where x.nr_atendimento = a.nr_atendimento);
	exception 
		when others then 
		cd_setor_atendimento_w	:= null;
		dt_entrada_unidade_w	:= null;
		nr_seq_atepacu_w	:= null;
	end;
end if;
 
end;
 
select cd_procedimento, 
    ie_origem_proced, 
	cd_medico_responsavel 
into STRICT  cd_procedimento_w, 
    ie_origem_proced_w, 
	cd_medico_responsavel_w 
from  sus_apac_unif 
where  nr_sequencia	= nr_seq_apac_p;
 
if (coalesce(ie_qtd_proc_laudo_w,'N') = 'S') then 
	begin 
	 
	begin 
	select	coalesce(qt_procedimento_solic,1) 
	into STRICT	qt_proc_laudo_w 
	from	sus_laudo_paciente 
	where	nr_seq_interno = nr_seq_laudo_sus_p;
	exception 
	when others then 
		qt_proc_laudo_w := 1;
	end;
	 
	end;
end if;
 
if (ie_proc_cont_zerado_w = 'S') and (ie_tipo_apac_p = 2) then 
	qt_proc_laudo_w := 0;
end if;
 
if (dt_periodo_inicial_w < dt_entrada_unidade_w) then 
	dt_periodo_inicial_w := dt_entrada_unidade_w;
end if;
 
if (nr_seq_atepacu_w IS NOT NULL AND nr_seq_atepacu_w::text <> '') then 
	select	nextval('procedimento_paciente_seq') 
	into STRICT	nr_seq_propaci_w 
	;	
 
	begin 
	insert into procedimento_paciente( 
		nr_sequencia,			nr_atendimento, 		dt_entrada_unidade, 
		cd_procedimento,		dt_procedimento, 		qt_procedimento, 
		dt_atualizacao, 		nm_usuario,			cd_medico, 
		cd_convenio, 			cd_categoria, 			cd_pessoa_fisica, 
		dt_prescricao, 			ds_observacao, 			vl_procedimento, 	 
		vl_medico,			vl_anestesista, 		vl_materiais, 	 
		cd_edicao_amb, 			cd_tabela_servico,		dt_vigencia_preco, 
		cd_procedimento_princ, 		dt_procedimento_princ, 		dt_acerto_conta, 
		dt_acerto_convenio, 		dt_acerto_medico, 		vl_auxiliares, 	 
		vl_custo_operacional,		tx_medico, 			tx_anestesia, 
		nr_prescricao, 			nr_sequencia_prescricao,	cd_motivo_exc_conta, 
		ds_compl_motivo_excon, 		cd_acao, 			qt_devolvida, 
		cd_motivo_devolucao, 		nr_cirurgia, 			nr_doc_convenio, 
		cd_medico_executor,		ie_cobra_pf_pj, 		nr_laudo, 
		dt_conta, 			cd_setor_atendimento,		cd_conta_contabil, 
		cd_procedimento_aih, 		ie_origem_proced, 		nr_aih, 
		ie_responsavel_credito, 	tx_procedimento, 		cd_equipamento, 
		ie_valor_informado,		cd_estabelecimento_custo, 	cd_tabela_custo, 
		cd_situacao_glosa, 		nr_lote_contabil,		cd_procedimento_convenio, 
		nr_seq_autorizacao, 		ie_tipo_servico_sus, 		ie_tipo_ato_sus, 
		cd_cgc_prestador, 		nr_nf_prestador, 		cd_atividade_prof_bpa, 
		nr_interno_conta,		nr_seq_proc_princ, 		ie_guia_informada, 
		dt_inicio_procedimento, 	ie_emite_conta,			ie_funcao_medico, 
		ie_classif_sus, 		cd_especialidade, 		nm_usuario_original, 
		nr_seq_proc_pacote, 		ie_tipo_proc_sus, 		cd_setor_receita, 
		vl_adic_plant,			nr_seq_atepacu, 		ie_auditoria) 
	values (nr_seq_propaci_w, 		nr_atendimento_p,		dt_entrada_unidade_w, 
		cd_procedimento_w,		dt_periodo_inicial_w, 		qt_proc_laudo_w, 
		clock_timestamp(), 			nm_usuario_p,			null, 
		cd_convenio_w, 			cd_categoria_w, 		null, 
		null,				'Lançado p/ Par[42] SUS APAC.', 0, 
		0,	0, 	0, 
		null,	null,	null, 
		null, 	null, 	null, 
		null, 	null, 	0, 
		0,	1, 	1, 
		null, 	null,	null, 
		null, 	null, 	null, 
		null, 	null, 	null, 
		cd_medico_responsavel_w,	null, 				null, 
		null, 				cd_setor_atendimento_w,		null, 
		null, 				ie_origem_proced_w, 		null, 
		null, 	null, 	null, 
		'N',				cd_estabelecimento_p, 		null, 
		null, 	null,	null, 
		null, 	null, 	null, 
		cd_cgc_prestador_w, 		null, 				null, 
		nr_interno_conta_p,		null, 				null, 
		null, 	null,	null, 
		null, 	null, 	null, 
		null, 				null, 				cd_setor_atendimento_w, 
		0,				nr_seq_atepacu_w,		null);	
	CALL atualiza_preco_procedimento(nr_seq_propaci_w,cd_convenio_w,nm_usuario_p);
	 
	open C01;
	loop 
	fetch C01 into	 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		qt_procedimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		if (ie_proc_cont_zerado_w = 'S') and (ie_tipo_apac_p = 2) then 
			qt_procedimento_w := 0;
		end if;
		 
		select	nextval('procedimento_paciente_seq') 
		into STRICT	nr_seq_propaci_w 
		;	
		 
		insert into procedimento_paciente( 
			nr_sequencia, 			nr_atendimento, 		dt_entrada_unidade, 
			cd_procedimento,		dt_procedimento, 		qt_procedimento, 
			dt_atualizacao, 		nm_usuario,			cd_medico, 
			cd_convenio, 			cd_categoria, 			cd_pessoa_fisica, 
			dt_prescricao, 			ds_observacao, 			vl_procedimento, 	 
			vl_medico,			vl_anestesista, 		vl_materiais, 
			cd_edicao_amb, 			cd_tabela_servico,		dt_vigencia_preco, 
			cd_procedimento_princ, 		dt_procedimento_princ, 		dt_acerto_conta, 
			dt_acerto_convenio, 		dt_acerto_medico, 		vl_auxiliares, 
			vl_custo_operacional,		tx_medico, 			tx_anestesia, 
			nr_prescricao, 			nr_sequencia_prescricao,	cd_motivo_exc_conta, 
			ds_compl_motivo_excon, 		cd_acao, 			qt_devolvida, 
			cd_motivo_devolucao, 		nr_cirurgia, 			nr_doc_convenio, 
			cd_medico_executor,		ie_cobra_pf_pj, 		nr_laudo, 
			dt_conta, 			cd_setor_atendimento,		cd_conta_contabil, 
			cd_procedimento_aih, 		ie_origem_proced, 		nr_aih, 
			ie_responsavel_credito, 	tx_procedimento, 		cd_equipamento, 
			ie_valor_informado,		cd_estabelecimento_custo, 	cd_tabela_custo, 
			cd_situacao_glosa, 		nr_lote_contabil,		cd_procedimento_convenio, 
			nr_seq_autorizacao, 		ie_tipo_servico_sus, 		ie_tipo_ato_sus, 
			cd_cgc_prestador, 		nr_nf_prestador, 		cd_atividade_prof_bpa, 
			nr_interno_conta,		nr_seq_proc_princ, 		ie_guia_informada, 
			dt_inicio_procedimento, 	ie_emite_conta,			ie_funcao_medico, 
			ie_classif_sus, 		cd_especialidade, 		nm_usuario_original, 
			nr_seq_proc_pacote, 		ie_tipo_proc_sus, 		cd_setor_receita, 
			vl_adic_plant,			nr_seq_atepacu, 		ie_auditoria) 
		values (nr_seq_propaci_w, 		nr_atendimento_p,		dt_entrada_unidade_w, 
			cd_procedimento_w,		dt_periodo_inicial_w, 		qt_procedimento_w, 
			clock_timestamp(), 			nm_usuario_p,			null, 
			cd_convenio_w, 			cd_categoria_w, 		null, 
			null,				'Lançado p/ Par[42] SUS APAC.', 0, 
			0,	0, 	0, 
			null,	null,	null, 
			null, 	null, 	null, 
			null, 	null, 	0, 
			0,	1, 	1, 
			null, 	null,	null, 
			null, 	null, 	null, 
			null, 	null, 	null, 
			cd_medico_responsavel_w,	null, 				null, 
			null, 				cd_setor_atendimento_w,		null, 
			null, 				ie_origem_proced_w, 		null, 
			null, 	null, 	null, 
			'N',				cd_estabelecimento_p, 		null, 
			null, 	null,	null, 
			null, 	null, 	null, 
			cd_cgc_prestador_w, 		null, 				null, 
			nr_interno_conta_p,		null, 				null, 
			null, 	null,	null, 
			null, 	null,	null, 
			null, 				null, 				cd_setor_atendimento_w, 
			0,				nr_seq_atepacu_w,		null);	
		CALL atualiza_preco_procedimento(nr_seq_propaci_w,cd_convenio_w,nm_usuario_p);
		end;
	end loop;
	close C01;
	 
	exception 
		when others then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(188082,'SQL_ERRO='||substr(sqlerrm,1,255));
			/* Ocorreu o seguinte problema ao inserir registro na procedimento paciente:#@SQL_ERRO#@ */
 
	end;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_gerar_proced_apac_unif ( nr_seq_apac_p bigint, nr_atendimento_p bigint, nr_interno_conta_p bigint, nr_seq_laudo_sus_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, ie_tipo_apac_p bigint) FROM PUBLIC;

