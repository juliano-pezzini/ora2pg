-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_carencia ( nr_seq_beneficiario_p bigint, nr_seq_segurado_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_carencia_w		bigint;
cd_tipo_cobertura_w		varchar(10);
cd_estabelecimento_w		bigint;
dt_fim_carencia_w		timestamp;
dt_adesao_w			timestamp;
qt_dias_w			bigint;
qt_registros_w			bigint;
nr_seq_plano_w			bigint;
ie_tipo_segurado_w		pls_segurado.ie_tipo_segurado%type;

C01 CURSOR FOR
	SELECT	cd_tipo_cobertura,
		dt_fim_carencia
	from	ptu_beneficiario_carencia
	where	nr_seq_beneficiario	= nr_seq_beneficiario_p;


BEGIN

select	max(nr_seq_plano),
	max(ie_tipo_segurado)
into STRICT	nr_seq_plano_w,
	ie_tipo_segurado_w
from	pls_segurado
where	nr_sequencia = nr_seq_segurado_p;
	
open C01;
loop
fetch C01 into
	cd_tipo_cobertura_w,
	dt_fim_carencia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_carencia_w
	from	pls_tipo_carencia
	where	cd_ptu			= cd_tipo_cobertura_w
	and	ie_tipo_operacao	= 'I';
	
	select	max(dt_inclusao_operadora)
	into STRICT	dt_adesao_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_p;
	
	qt_dias_w	:= (trunc(dt_fim_carencia_w,'dd') - trunc(dt_adesao_w,'dd'));
	
	if (nr_seq_carencia_w	<> 0) then
		select	count(*)
		into STRICT	qt_registros_w
		from	pls_carencia
		where	nr_seq_segurado		= nr_seq_segurado_p
		and	nr_seq_tipo_carencia	= nr_seq_carencia_w;

		if (qt_registros_w	= 0) then
			insert into pls_carencia(	nr_sequencia, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_tipo_carencia, 
					qt_dias, nr_seq_segurado,dt_fim_vigencia,ie_origem_carencia_benef)
			values (	nextval('pls_carencia_seq'), clock_timestamp(), nm_usuario_p,
					clock_timestamp(), nm_usuario_p, nr_seq_carencia_w,
					qt_dias_w, nr_seq_segurado_p,dt_fim_carencia_w,'P');
		end if;
	end if;
	
	end;
end loop;
close C01;

select	count(*)
into STRICT	qt_registros_w
from	pls_carencia
where	nr_seq_segurado		= nr_seq_segurado_p
and	ie_cpt			= 'N';
/*aaschlote 28/03/2012 - Caso houver uma carência no beneficiário, então copia as demais carências que estão no produto para o beneficiário*/

if (qt_registros_w > 0 and ie_tipo_segurado_w <> 'H') then
	CALL pls_copiar_carencia(nr_seq_plano_w,0,nr_seq_segurado_p,'N',nm_usuario_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_carencia ( nr_seq_beneficiario_p bigint, nr_seq_segurado_p bigint, nm_usuario_p text) FROM PUBLIC;

