-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_min_dur_pedido (cd_estabelecimento_p bigint, nr_seq_pedido_p bigint, cd_perfil_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* PROC CRIADA BASEADA NA PROC   ---- CALCULAR_MIN_DUR_AGENDA_CIR ----*/
				
					
/* variaveis */

cd_agenda_w		bigint;
cd_medico_exec_w		varchar(10);
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_seq_proc_interno_w	bigint;
nr_minuto_duracao_w	bigint;

qt_min_proc_w		bigint 	:= 0;
qt_min_agenda_w		bigint 	:= 0;

ie_param_sobreposicao_w	varchar(1);
cd_pessoa_fisica_w	varchar(10);
cd_medico_proc_adic_w	varchar(10);
ie_atualiza_tempo_agenda_w		varchar(1);
ie_atualiza_tempo_proc_w		varchar(1);
ie_atual_maior_tempo_proc_w		varchar(1);
cd_estab_agenda_w	smallint;
ie_estab_agenda_w	varchar(1) := 'S';
ds_lista_status_w varchar(255)	:= null;
 		
/* obter exame agenda */

c01 CURSOR FOR
SELECT
	cd_medico_exec,
	cd_procedimento,
	ie_origem_proced,
	nr_seq_proc_interno,
	nr_minuto_duracao,
	cd_pessoa_fisica
from	pedido_age_cirurgia
where	nr_sequencia = nr_seq_pedido_p	
and	(nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '');

/* obter exames adicionais */

c02 CURSOR FOR
SELECT	cd_medico,
		nr_seq_proc_interno,
		qt_min_proc
from	pedido_age_cirurgia_PROC
where	nr_seq_pedido = nr_seq_pedido_p	;


BEGIN

ie_atualiza_tempo_agenda_w := obter_param_usuario(871, 162, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_atualiza_tempo_agenda_w);
ie_atualiza_tempo_proc_w := obter_param_usuario(871, 163, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_atualiza_tempo_proc_w); 	
ie_atual_maior_tempo_proc_w := obter_param_usuario(871, 642, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_atual_maior_tempo_proc_w);
	
if (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') and (nr_seq_pedido_p IS NOT NULL AND nr_seq_pedido_p::text <> '') then
	
	/* obter duracao exame */

	open c01;
	loop
	fetch c01 into
			cd_medico_exec_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_proc_interno_w,
			nr_minuto_duracao_w,
			cd_pessoa_fisica_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		if (ie_atualiza_tempo_agenda_w in ('S','Q')) then		

			select	obter_tempo_total_proced(nr_seq_proc_interno_w,cd_medico_exec_w, 0)
			into STRICT	qt_min_proc_w
			;
			
			qt_min_agenda_w	:= qt_min_agenda_w + qt_min_proc_w;

		end if;
			
		end;
	end loop;
	close c01;

	/* obter duracao exames adicionais */

	if (ie_atualiza_tempo_proc_w = 'S') then
		
		open c02;
		loop
		fetch c02 into	cd_medico_proc_adic_w,
				nr_seq_proc_interno_w,
				qt_min_proc_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin

			if (coalesce(qt_min_proc_w,0) = 0) then
					qt_min_proc_w := obter_tempo_total_proced(nr_seq_proc_interno_w,cd_medico_exec_w,0);
			end if;

			if (ie_atual_maior_tempo_proc_w = 'S') then
				if (qt_min_proc_w > qt_min_agenda_w) then
					 qt_min_agenda_w := qt_min_proc_w;
				end if;
			else
				qt_min_agenda_w	:= qt_min_agenda_w + qt_min_proc_w;
			end if;		
			end;

		end loop;
		close c02;
		
		if (qt_min_agenda_w > nr_minuto_duracao_w) then
			update	pedido_age_cirurgia
			set		nr_minuto_duracao	= qt_min_agenda_w
			where	nr_sequencia		= nr_seq_pedido_p;		
			commit;
		end if;
	
	end if;
	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_min_dur_pedido (cd_estabelecimento_p bigint, nr_seq_pedido_p bigint, cd_perfil_p bigint, nm_usuario_p text) FROM PUBLIC;

