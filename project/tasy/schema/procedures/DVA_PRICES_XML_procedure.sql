-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dva_prices_xml ( item_num_p text, schedule_fee_p text, lmo_fee_p text , rei_p text, vap_metro_p text, vap_regional_p text, rmfs_in_hopsital_fee_p text, rmfs_outof_hospital_p text, rvg_fee_p text, diagnostic_imaging_fee_p text, pathology_fee_p text, derived_fee_p text, derived_desc_rmfsin_p text, derived_desc_rmfsout_p text, nr_edicao_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w         	bigint;
derived_value          	real;
operational_cost_value 	real;
rmfs_in_hopsitalfee    	double precision;
rmfs_outof_hospitalfee 	double precision;
dva_percentage         	real;
rei_percentage         	real;
rei_value              	real;
rvgfee                 	real;
record_count           	smallint;
cd_procedimento_w	procedimento.cd_procedimento%type;
ie_origem_proced_w	procedimento.ie_origem_proced%type;


BEGIN

select	nextval('dva_price_catalogue_seq')
into STRICT 	nr_sequencia_w
;

select (nr_dva_percentage/100),
	(nr_rei_percentage/100)
into STRICT	dva_percentage,
	rei_percentage
from 	dva_parameters
where 	cd_ref_catalouge_edition = nr_edicao_p;

if (coalesce(nr_sequencia_w::text, '') = '') then
	nr_sequencia_w :=1;
end if;

if (schedule_fee_p = 'D' ) then
	select	max(vl_custo_operacional)
	into STRICT 	derived_value
	from 	preco_amb
	where 	cd_procedimento_loc = item_num_p
	and 	ie_origem_proced      = 20;

	select	(derived_value)::numeric
	into STRICT 	derived_value 
	;

	if (coalesce(derived_value::text, '') = '' ) then
		derived_value := 0;
	else
		derived_value := (derived_value * dva_percentage) + derived_value;
	end if;

	select	round((derived_value/5)::numeric, 2) * 5
	into STRICT 	derived_value 
	;

else
	select	to_number(schedule_fee_p, '9999999.99')
	into STRICT 	derived_value 
	;
end if;

if (lmo_fee_p = 'D' ) then
	operational_cost_value := derived_value * dva_percentage + derived_value;

	select	round((operational_cost_value/5)::numeric,2) * 5
	into STRICT 	operational_cost_value
	;
else
	select	to_number(lmo_fee_p, '99999999.99')
	into STRICT 	operational_cost_value 
	;
end if;

if (rmfs_in_hopsital_fee_p = 'D' ) then
	rmfs_in_hopsitalfee := null;
else
	select	to_number(rmfs_in_hopsital_fee_p, '9999999.99')
	into STRICT 	rmfs_in_hopsitalfee 
	;
end if;

if (rmfs_outof_hospital_p = 'D' ) then
	rmfs_outof_hospitalfee := null;
else
	select	to_number(rmfs_outof_hospital_p, '99999999.99')
	into STRICT 	rmfs_outof_hospitalfee
	;
end if;

if (rvg_fee_p = 'D' ) then
	rvgfee := 0;
else
	select	to_number(rvg_fee_p,'99999999.99')
	into STRICT 	rvgfee 
	;
end if;

if (rei_p = 'Y') then
	rei_value := (rei_percentage * derived_value) + derived_value;
	
	select	round((rei_value/5)::numeric,2) * 5
	into STRICT 	rei_value 
	;

	rei_value := (dva_percentage * rei_value) + rei_value;

	select	round((rei_value/5)::numeric,2) * 5
	into STRICT 	rei_value 
	;
else
	select	to_number(rei_p, '9999.99')
	into STRICT 	rei_value 
	;
end if;

select	count(*)
into STRICT 	record_count
from 	dva_price_catalogue
where 	cd_procedimento_loc = item_num_p
and 	nr_edicao_amb = nr_edicao_p;

select	max(cd_procedimento),
	max(ie_origem_proced)
into STRICT	cd_procedimento_w,
	ie_origem_proced_w
from	procedimento
where	cd_procedimento_loc = item_num_p;

if (record_count = 0) then
	insert into dva_price_catalogue( nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_procedimento_loc,
		vl_procedimento,
		vl_dva_fee,
		ie_rei,
		ie_vap_metro,
		ie_vap_regional,
		vl_rmfs_in,
		vl_rmfs_out,
		vl_rvg_fee,
		vl_diag_img_fee,
		vl_pathology_fee,
		ie_derived,
		cd_in_hosp_desc,
		cd_out_hosp_desc,
		nr_edicao_amb)
	values (	nr_sequencia_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		item_num_p,
		derived_value,
		operational_cost_value,
		rei_value,
		vap_metro_p,
		vap_regional_p,
		rmfs_in_hopsitalfee,
		rmfs_outof_hospitalfee,
		rvgfee,
		to_number(diagnostic_imaging_fee_p, '9999999.99'),
		to_number(pathology_fee_p, '9999999.99'),
		derived_fee_p,
		derived_desc_rmfsin_p,
		derived_desc_rmfsout_p,
		nr_edicao_p);
else
	update	dva_price_catalogue
	set	dt_atualizacao        	= clock_timestamp() ,
		nm_usuario              = nm_usuario_p ,
		dt_atualizacao_nrec     = clock_timestamp(),
		nm_usuario_nrec         = nm_usuario_p ,
		vl_procedimento         = derived_value ,
		vl_dva_fee              = operational_cost_value ,
		ie_rei                  = rei_p ,
		ie_vap_metro            = vap_metro_p ,
		ie_vap_regional         = vap_regional_p ,
		vl_rmfs_in              = rmfs_in_hopsitalfee ,
		vl_rmfs_out             = rmfs_outof_hospitalfee ,
		vl_rvg_fee              = rvgfee ,
		vl_diag_img_fee         = to_number(diagnostic_imaging_fee_p, '999999.99') ,
		vl_pathology_fee        = to_number(pathology_fee_p, '999999.99') ,
		ie_derived              = derived_fee_p ,
		cd_in_hosp_desc         = derived_desc_rmfsin_p ,
		cd_out_hosp_desc        = derived_desc_rmfsout_p
	where 	cd_procedimento_loc 	= item_num_p
	and	cd_procedimento		= cd_procedimento_w
	and	ie_origem_proced	= ie_origem_proced_w
	and 	nr_edicao_amb         	= nr_edicao_p;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dva_prices_xml ( item_num_p text, schedule_fee_p text, lmo_fee_p text , rei_p text, vap_metro_p text, vap_regional_p text, rmfs_in_hopsital_fee_p text, rmfs_outof_hospital_p text, rvg_fee_p text, diagnostic_imaging_fee_p text, pathology_fee_p text, derived_fee_p text, derived_desc_rmfsin_p text, derived_desc_rmfsout_p text, nr_edicao_p bigint, nm_usuario_p text) FROM PUBLIC;

