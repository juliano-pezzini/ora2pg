-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualiza_valor_proc_orc ( nr_seq_orcamento_proc_p bigint, ie_gravar_log_p text, nm_usuario_p text) AS $body$
DECLARE


cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
dt_solicitacao_w		timestamp;
nr_seq_segurado_w		bigint;
cd_medico_solicitante_w		varchar(10);
nr_seq_prestador_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_tipo_acomodacao_w	bigint;
nr_seq_clinica_w		bigint;
cd_estabelecimento_w		bigint;
ie_tipo_contratacao_w		varchar(2);
nr_seq_classificacao_prest_w	bigint;
nr_seq_categoria_w		bigint;
nr_seq_contrato_w		bigint;
cd_convenio_w			varchar(10);
cd_categoria_w			varchar(10);
vl_procedimento_w		double precision	:= 0;
ie_carater_internacao_w		varchar(10);
nr_seq_req_proc_w		bigint;
dt_procedimento_w		timestamp	:= null;
dados_regra_preco_proc_w	pls_cta_valorizacao_pck.dados_regra_preco_proc;
dados_guia_w			pls_cta_valorizacao_pck.dados_guia;
ie_regime_atendimento_w		pls_conta.ie_regime_atendimento%type;
ie_saude_ocupacional_w		pls_conta.ie_saude_ocupacional%type;


BEGIN

/*Obter dados dos procedimentos do orcamento*/

select	nr_seq_req_proc,
	cd_procedimento,
	ie_origem_proced
into STRICT	nr_seq_req_proc_w,
	cd_procedimento_w,
	ie_origem_proced_w
from	pls_orcamento_proc
where	nr_sequencia	= nr_seq_orcamento_proc_p;

/* Obter dados da requisicao */

select	a.dt_requisicao,
	a.nr_seq_segurado,
	a.cd_medico_solicitante,
	a.nr_seq_prestador,
	a.nr_seq_plano,
	a.nr_seq_tipo_acomodacao,
	a.nr_seq_clinica,
	a.cd_estabelecimento,
	a.ie_carater_atendimento,
	a.ie_tipo_consulta,
	a.ie_regime_atendimento,
	a.ie_saude_ocupacional
into STRICT	dt_solicitacao_w,
	nr_seq_segurado_w,
	cd_medico_solicitante_w,
	nr_seq_prestador_w,
	nr_seq_plano_w,
	nr_seq_tipo_acomodacao_w,
	nr_seq_clinica_w,
	cd_estabelecimento_w,
	ie_carater_internacao_w,
	dados_guia_w.ie_tipo_consulta_guia,
	ie_regime_atendimento_w,
	ie_saude_ocupacional_w
from	pls_requisicao_proc	b,
	pls_requisicao		a
where	a.nr_sequencia		= b.nr_seq_requisicao
and	b.nr_sequencia		= nr_seq_req_proc_w;

/* Obter dados do plano */

begin
	select	ie_tipo_contratacao
	into STRICT	ie_tipo_contratacao_w
	from	pls_plano
	where	nr_sequencia	= nr_seq_plano_w;
exception
when others then
	ie_tipo_contratacao_w := null;
end;

/* Obter dados do prestador */

begin
	select	nr_seq_classificacao
	into STRICT	nr_seq_classificacao_prest_w
	from	pls_prestador
	where	nr_sequencia = nr_seq_prestador_w;
exception
when others then
	nr_seq_classificacao_prest_w := null;
end;

/* Obter a categoria do tipo de acomodacao */

if (nr_seq_tipo_acomodacao_w IS NOT NULL AND nr_seq_tipo_acomodacao_w::text <> '') then
	select	max(nr_seq_categoria)
	into STRICT	nr_seq_categoria_w
	from	pls_regra_categoria
	where	nr_seq_tipo_acomodacao	= nr_seq_tipo_acomodacao_w;
end if;

/*Obter dados segurado*/

begin
	select	coalesce(nr_seq_contrato,0),
		pls_obter_conv_cat_segurado(nr_sequencia, 1),
		pls_obter_conv_cat_segurado(nr_sequencia, 2)
	into STRICT	nr_seq_contrato_w,
		cd_convenio_w,
		cd_categoria_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;
exception
when others then
	nr_seq_contrato_w	:= null;
	cd_convenio_w		:= null;
	cd_categoria_w		:= null;
end;

dados_regra_preco_proc_w := pls_define_preco_proc(	cd_estabelecimento_w, nr_seq_prestador_w, nr_seq_categoria_w, dt_solicitacao_w, null, cd_procedimento_w, ie_origem_proced_w, nr_seq_tipo_acomodacao_w, null, nr_seq_clinica_w, nr_seq_plano_w, 'OR', nr_seq_contrato_w, 0, nr_seq_orcamento_proc_p, ie_gravar_log_p, cd_convenio_w, cd_categoria_w, ie_tipo_contratacao_w, 0, nr_seq_segurado_w, null, null, nr_seq_classificacao_prest_w, cd_medico_solicitante_w, 'N', null, null, 'A', 'X', null, ie_carater_internacao_w, dt_procedimento_w, null, null, null, dados_guia_w, null, dados_regra_preco_proc_w, null, null, ie_regime_atendimento_w, null, ie_saude_ocupacional_w);
			
vl_procedimento_w	:= dados_regra_preco_proc_w.vl_procedimento;

update	pls_orcamento_proc
set	vl_procedimento		= vl_procedimento_w
where	nr_sequencia		= nr_seq_orcamento_proc_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualiza_valor_proc_orc ( nr_seq_orcamento_proc_p bigint, ie_gravar_log_p text, nm_usuario_p text) FROM PUBLIC;

