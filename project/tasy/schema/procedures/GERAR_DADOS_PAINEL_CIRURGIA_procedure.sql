-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_dados_painel_cirurgia ( ie_informacao_p text, nr_seq_agenda_p bigint, ie_origem_informacao_p text, nm_usuario_p text, ie_consiste_p text default 'N') AS $body$
DECLARE


/*
ie_informacao_p:
DT_PACIENTE_AGUARDO	- DPA
DT_CHEGADA		- DC
DT_CHEGADA_FIM		- DCF
DT_SALA_RECUPERACAO	- DSR
DT_ALTA_CC		- DAC
DT_SAIDA_PACIENTE_CC - DS
DT_ANALISE		- IN
DT_CHAMADA_PRE_INDUCAO	- DCP
DT_PACIENTE_AGUARDO	- PA

ie_origem_informacao_p:
'A' = Gestão da Agenda Cirúrgica (AtePacA6)
'P' = PEPO
'IP' = Inativação do evento pelo PEPO

ie_consiste_p
N - Não consiste o status, se não tiver status registra, se tiver desfaz
S - Consiste o status, se não tiver status registra, se tiver não faz nada
*/
dt_chegada_w			timestamp;
dt_chegada_fim_w		timestamp;
dt_sala_recuperacao_w		timestamp;
dt_alta_cc_w			timestamp;
dt_saida_paciente_cc_w	timestamp;
dt_analise_w			timestamp;
dt_chamada_pre_inducao_w	timestamp;
nr_cirurgia_w			bigint;
cd_agenda_w			bigint;
dt_agenda_w			timestamp;
hr_inicio_w			timestamp;
qt_agenda_w			bigint;
dt_paciente_aguardo_w		timestamp;
dt_paciente_termino_w		timestamp;
ie_informacao_w 	varchar(15);


BEGIN

if (coalesce(nr_seq_agenda_p,0) > 0) then
   SELECT	max(dt_chegada),
      max(dt_chegada_fim),
      max(dt_sala_recuperacao),
      max(dt_alta_cc),
      max(dt_saida_paciente_cc),
      max(dt_analise),
      max(nr_cirurgia),
      max(dt_chamada_pre_inducao),
      max(cd_agenda),
      max(dt_agenda),
      max(hr_inicio),
      max(dt_paciente_aguardo),
      max(dt_paciente_termino)
   INTO STRICT	dt_chegada_w,
      dt_chegada_fim_w,
      dt_sala_recuperacao_w,
      dt_alta_cc_w,
      dt_saida_paciente_cc_w,
      dt_analise_w,
      nr_cirurgia_w,
      dt_chamada_pre_inducao_w,
      cd_agenda_w,
      dt_agenda_w,
      hr_inicio_w,
      dt_paciente_aguardo_w,
      dt_paciente_termino_w
   FROM	agenda_paciente
   WHERE	nr_sequencia	=	nr_seq_agenda_p;


   IF (ie_informacao_p = 'DPA') THEN
      IF (coalesce(dt_paciente_aguardo_w::text, '') = '') THEN
         UPDATE	agenda_paciente
         SET 	dt_paciente_aguardo	= clock_timestamp()
         WHERE 	nr_sequencia 		= nr_seq_agenda_p;
      elsif (coalesce(ie_consiste_p,'N') = 'N') then
         UPDATE 	agenda_paciente
         SET		dt_paciente_aguardo  = NULL
         WHERE 	nr_sequencia = nr_seq_agenda_p
         AND		((ie_origem_informacao_p = 'A') or (ie_origem_informacao_p = 'IP'));
      END IF;
   ELSIF (ie_informacao_p = 'DC') THEN
      IF (coalesce(dt_chegada_w::text, '') = '') THEN
         UPDATE	agenda_paciente
         SET 	dt_chegada = clock_timestamp()
         WHERE 	nr_sequencia = nr_seq_agenda_p;
      elsif (coalesce(ie_consiste_p,'N') = 'N') then
         UPDATE 	agenda_paciente
         SET		dt_chegada  = NULL,
               cd_pessoa_chamada_setor  = NULL
         WHERE 	nr_sequencia = nr_seq_agenda_p
         AND		((ie_origem_informacao_p = 'A') or (ie_origem_informacao_p = 'IP'));
      END IF;
   ELSIF (ie_informacao_p = 'DCF') THEN
      IF (coalesce(dt_chegada_fim_w::text, '') = '') THEN
         UPDATE 	agenda_paciente
         SET 	dt_chegada_fim = clock_timestamp()
         WHERE 	nr_sequencia = nr_seq_agenda_p;
      elsif (coalesce(ie_consiste_p,'N') = 'N') then
         UPDATE 	agenda_paciente
         SET 	dt_chegada_fim  = NULL
         WHERE 	nr_sequencia = nr_seq_agenda_p
         AND		((ie_origem_informacao_p = 'A') or (ie_origem_informacao_p = 'IP'));
      END IF;
   ELSIF (ie_informacao_p = 'DET') THEN
      IF (coalesce(dt_paciente_termino_w::text, '') = '') THEN
         UPDATE 	agenda_paciente
         SET 	dt_paciente_termino 	= clock_timestamp()
         WHERE 	nr_sequencia 		= nr_seq_agenda_p;
      elsif (coalesce(ie_consiste_p,'N') = 'N') then
         UPDATE 	agenda_paciente
         SET 	dt_paciente_termino 	 = NULL
         WHERE 	nr_sequencia 		= nr_seq_agenda_p
         AND		((ie_origem_informacao_p = 'A') or (ie_origem_informacao_p = 'IP'));
      END IF;
   ELSIF (ie_informacao_p = 'DSR') THEN
      IF (coalesce(dt_sala_recuperacao_w::text, '') = '') THEN
         UPDATE 	agenda_paciente
         SET 	dt_sala_recuperacao = clock_timestamp()
         WHERE 	nr_sequencia = nr_seq_agenda_P;
      elsif (coalesce(ie_consiste_p,'N') = 'N') then
         UPDATE 	agenda_paciente
         SET 	dt_sala_recuperacao  = NULL
         WHERE 	nr_sequencia = nr_seq_agenda_p
         AND		((ie_origem_informacao_p = 'A') or (ie_origem_informacao_p = 'IP'));
      END IF;
   ELSIF (ie_informacao_p = 'DAC') THEN
      IF (coalesce(dt_alta_cc_w::text, '') = '') THEN
         UPDATE 	agenda_paciente
         SET 	dt_alta_cc = clock_timestamp()
         WHERE 	nr_sequencia = nr_seq_agenda_p;
      elsif (coalesce(ie_consiste_p,'N') = 'N') then
         UPDATE 	agenda_paciente
         SET 	dt_alta_cc  = NULL
         WHERE 	nr_sequencia = nr_seq_agenda_p
         AND		((ie_origem_informacao_p = 'A') or (ie_origem_informacao_p = 'IP'));
      END IF;
   ELSIF (ie_informacao_p = 'DS') THEN
      IF (coalesce(dt_saida_paciente_cc_w::text, '') = '') THEN
         UPDATE	agenda_paciente
         SET 	dt_saida_paciente_cc 	= clock_timestamp()
         WHERE 	nr_sequencia 			= nr_seq_agenda_p;
      elsif (coalesce(ie_consiste_p,'N') = 'N') then
         UPDATE 	agenda_paciente
         SET		dt_saida_paciente_cc  = NULL
         WHERE 	nr_sequencia = nr_seq_agenda_p
         AND		((ie_origem_informacao_p = 'A') or (ie_origem_informacao_p = 'IP'));
      END IF;
   ELSIF (ie_informacao_p = 'IN') THEN
      IF (coalesce(dt_analise_w::text, '') = '') THEN
         UPDATE	agenda_paciente
         SET 	dt_analise = clock_timestamp()
         WHERE 	nr_sequencia = nr_seq_agenda_p;
      elsif (coalesce(ie_consiste_p,'N') = 'N') then
         UPDATE 	agenda_paciente
         SET	dt_analise  = NULL
         WHERE 	nr_sequencia = nr_seq_agenda_p
         AND		((ie_origem_informacao_p = 'A') or (ie_origem_informacao_p = 'IP'));
      END IF;
   --	ROBSON
   ELSIF (ie_informacao_p = 'PA') THEN
      IF (coalesce(dt_paciente_aguardo_w::text, '') = '') THEN
         UPDATE	agenda_paciente
         SET 	dt_paciente_aguardo = clock_timestamp()
         WHERE 	nr_sequencia = nr_seq_agenda_p;
      elsif (coalesce(ie_consiste_p,'N') = 'N') then
         UPDATE 	agenda_paciente
         SET		dt_paciente_aguardo  = NULL
         WHERE 	nr_sequencia = nr_seq_agenda_p
         AND		((ie_origem_informacao_p = 'A') or (ie_origem_informacao_p = 'IP'));
      END IF;
   ELSIF (ie_informacao_p = 'E') THEN
      BEGIN

      SELECT	COUNT(*)
      INTO STRICT	qt_agenda_w
      FROM	agenda_paciente
      WHERE	cd_agenda		= cd_agenda_w
      AND	dt_agenda		= dt_agenda_w
      AND	hr_inicio		= hr_inicio_w
      AND	ie_status_agenda	= 'E'
      AND	nr_sequencia		<> nr_seq_agenda_p;

      IF (qt_agenda_w <> 0) THEN
         CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(219718);
      END IF;

      UPDATE	agenda_paciente
      SET 	ie_status_agenda = 'E'
      WHERE 	nr_sequencia = 	nr_seq_agenda_p;


      END;
   ELSIF (ie_informacao_p = 'DCP') THEN
      IF (coalesce(dt_chamada_pre_inducao_w::text, '') = '') THEN
         UPDATE	agenda_paciente
         SET 	dt_chamada_pre_inducao = clock_timestamp()
         WHERE 	nr_sequencia = nr_seq_agenda_p;
      elsif (coalesce(ie_consiste_p,'N') = 'N') then
         UPDATE	agenda_paciente
         SET 	dt_chamada_pre_inducao  = NULL
         WHERE 	nr_sequencia = nr_seq_agenda_p
         AND		((ie_origem_informacao_p = 'A') or (ie_origem_informacao_p = 'IP'));
      END IF;
   END IF;

   ie_informacao_w := ie_informacao_p;

   if (ie_origem_informacao_p = 'A' AND ie_informacao_w = 'PA') then
      ie_informacao_w :=  'DPA';
   end if;

   IF (nr_cirurgia_w > 0) AND (ie_origem_informacao_p = 'A') THEN
      CALL gerar_evento_painel_cirurgia(nr_cirurgia_w, ie_informacao_w, 'I', nm_usuario_p);
   END IF;

   COMMIT;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_dados_painel_cirurgia ( ie_informacao_p text, nr_seq_agenda_p bigint, ie_origem_informacao_p text, nm_usuario_p text, ie_consiste_p text default 'N') FROM PUBLIC;

