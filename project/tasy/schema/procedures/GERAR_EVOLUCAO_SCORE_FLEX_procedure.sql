-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function gerar_evolucao_score_flex as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE gerar_evolucao_score_flex ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'CALL gerar_evolucao_score_flex_atx ( ' || quote_nullable(nr_sequencia_p) || ',' || quote_nullable(nm_usuario_p) || ' )';
	PERFORM * FROM dblink(v_conn_str, v_query) AS p (ret boolean);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE gerar_evolucao_score_flex_atx ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE

					
					
nr_atendimento_w	bigint;
cd_pessoa_fisica_w	varchar(10);		
dt_avaliacao_w		timestamp;					
qt_pontuacao_w		bigint;
ds_pontuacao_w		varchar(255);
cd_medico_w		varchar(10);
nr_seq_escala_w		bigint;
ie_evolucao_clinica_w	varchar(3);
ds_resultado_w		varchar(32000);
ds_evolucao_w		varchar(32000);
ds_titulo_w		varchar(32000);
ds_itens_w		varchar(32000);
ds_compl_w		varchar(32000);
ds_item_w		varchar(32000);
ds_titulo_escala_w	varchar(80);
ie_inserir_w		boolean;
IE_TIPO_EVOLUCAO_w	varchar(10);
cd_evolucao_w		bigint;
cd_estabelecimento_w	bigint;
ie_titulo_w		varchar(3);


C01 CURSOR FOR
	SELECT 	 '    '||REPLACE(obter_descricao_item_EIF(nr_seq_item),CHR(13), ' ') ds_item,
		 ' '||replace(ie_resultado,CHR(10),' ') ds_resultado,
         	 ie_titulo
	from  	 escala_eif a,
		 escala_eif_item b
	where	 a.nr_sequencia = b.nr_seq_escala
	and	 a.nr_sequencia = nr_sequencia_p;
BEGIN

select	obter_pessoa_atendimento(nr_atendimento,'C'),
	nr_atendimento,
	dt_avaliacao,
	somente_numero(obter_resultado_escala_eif(nr_sequencia_p,'T')),
    	substr(obter_resultado_escala_eif(nr_sequencia_p,'D'),1,255),
	cd_profissional,
	nr_seq_escala
into STRICT	cd_pessoa_fisica_w,
	nr_atendimento_w,
	dt_avaliacao_w,
	qt_pontuacao_w,
    	ds_pontuacao_w,
	cd_medico_w,
	nr_seq_escala_w
from	escala_eif
where	nr_sequencia	= nr_sequencia_p;

cd_estabelecimento_w	:= OBTER_ESTAB_ATEND(nr_atendimento_w);

select	max(ie_evolucao_clinica),
	max(ds_escala)
into STRICT	ie_evolucao_clinica_w,	
	ds_titulo_escala_w
from	eif_escala a
where	a.nr_sequencia = nr_seq_escala_w;	

if (ie_evolucao_clinica_w IS NOT NULL AND ie_evolucao_clinica_w::text <> '') then

	ds_evolucao_w	:= wheb_rtf_pck.GET_CABECALHO;
	ds_titulo_w	:= wheb_rtf_pck.get_quebra_linha||wheb_rtf_pck.get_negrito(true)||ds_titulo_escala_w||wheb_rtf_pck.get_negrito(false);
	ds_compl_w	:= ds_compl_w||wheb_rtf_pck.get_quebra_linha||wheb_rtf_pck.get_negrito(true)||OBTER_DESC_EXPRESSAO(296046)||' : '||wheb_rtf_pck.get_negrito(false)||qt_pontuacao_w;
	if (ds_pontuacao_w IS NOT NULL AND ds_pontuacao_w::text <> '')then
		ds_compl_w := ds_compl_w|| ' - ' ||ds_pontuacao_w;
	end if;
	ds_compl_w	:= ds_compl_w||wheb_rtf_pck.get_quebra_linha||wheb_rtf_pck.get_negrito(true)||OBTER_DESC_EXPRESSAO(306200)||': '||wheb_rtf_pck.get_negrito(false);	
	ds_itens_w	:= null;	
	
	open C01;
	loop
	fetch C01 into	
		ds_item_w,
		ds_resultado_w,
        	ie_titulo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if ((trim(both ds_item_w) IS NOT NULL AND (trim(both ds_item_w))::text <> '')	) and ((trim(both ds_resultado_w) IS NOT NULL AND (trim(both ds_resultado_w))::text <> '')	) then
			ds_itens_w	:= ds_itens_w ||wheb_rtf_pck.get_quebra_linha||wheb_rtf_pck.get_negrito(true)||ds_item_w;
			if (ie_titulo_w = 'N') then
				ds_itens_w := ds_itens_w ||':'||wheb_rtf_pck.get_negrito(false)||ds_resultado_w;
			end if;
		end if;				
		end;
	end loop;
	close C01;
	
	if (ds_itens_w IS NOT NULL AND ds_itens_w::text <> '') then
		ds_evolucao_w	:= substr(ds_evolucao_w||ds_titulo_w||ds_compl_w||ds_itens_w,1,32000);
		ie_inserir_w	:= true;
	end if;	
	
	ds_evolucao_w	:= ds_evolucao_w||wheb_rtf_pck.get_rodape;	
	
	if (ie_inserir_w) then
	
		select	max(IE_TIPO_EVOLUCAO)
		into STRICT	IE_TIPO_EVOLUCAO_w
		from	usuario
		where	nm_usuario = nm_usuario_p;
		
		select	nextval('evolucao_paciente_seq')
		into STRICT	cd_evolucao_w
		;
		
		insert into evolucao_paciente(	cd_evolucao,
						dt_evolucao,
						ie_tipo_evolucao,
						cd_pessoa_fisica,
						dt_atualizacao,
						nm_usuario,
						nr_atendimento,
						ds_evolucao,					
						dt_liberacao,
						ie_evolucao_clinica,
						cd_medico,
						ie_situacao)
				values (	cd_evolucao_w,
						clock_timestamp(),
						coalesce(IE_TIPO_EVOLUCAO_w,1),
						cd_pessoa_fisica_w,
						clock_timestamp(),
						nm_usuario_p,
						nr_atendimento_w,
						ds_evolucao_w,					
						clock_timestamp(),
						ie_evolucao_clinica_w,
						cd_medico_w,
						'A');

		commit;
	end if;
	
	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_evolucao_score_flex ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE gerar_evolucao_score_flex_atx ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

