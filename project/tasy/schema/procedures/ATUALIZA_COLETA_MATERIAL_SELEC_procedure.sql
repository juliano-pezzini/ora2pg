-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_coleta_material_selec ( nr_prescricao_p bigint, lista_informacao_p text, ie_prescr_proc_hor_p text, ie_atualiza_data_result_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE

 
lista_informacao_w			varchar(400);
ie_contador_w			bigint	:= 0;
tam_lista_w			bigint;
ie_pos_virgula_w			smallint;
nr_seq_interno_w			bigint;
nr_seq_prescr_w			bigint;
ie_funcao_medico_w		varchar(10);
qt_prescr_proc_hor_w		integer;
ie_primeira_coleta_w		varchar(1);
dt_resultado_w			timestamp;
ie_consiste_peso_altura_w	varchar(1);


BEGIN 
 
ie_primeira_coleta_w := 'S';
 
select	coalesce(max(obter_valor_param_usuario(722, 112, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N') 
into STRICT	ie_consiste_peso_altura_w
;
 
lista_informacao_w	:= lista_informacao_p;
 
while	(lista_informacao_w IS NOT NULL AND lista_informacao_w::text <> '') or 
	ie_contador_w > 200 loop 
	begin 
	tam_lista_w		:= length(lista_informacao_w);
	ie_pos_virgula_w	:= position(',' in lista_informacao_w);
 
	if (ie_pos_virgula_w <> 0) then 
		nr_seq_interno_w		:= substr(lista_informacao_w,1,(ie_pos_virgula_w - 1));
		lista_informacao_w	:= substr(lista_informacao_w,(ie_pos_virgula_w + 1),tam_lista_w);
	end if;
	 
	select	coalesce(nr_sequencia,0) 
	into STRICT	nr_seq_prescr_w 
	from	prescr_procedimento 
	where	nr_seq_interno = somente_numero(nr_Seq_interno_w);
	 
 
	if (ie_prescr_proc_hor_p = 'S') and (nr_seq_prescr_w > 0) then 
		 
		 
		select 	count(*) 
		into STRICT	qt_prescr_proc_hor_w 
		from	prescr_proc_hor 
		where	nr_prescricao = nr_prescricao_p 
		and	nr_seq_procedimento = nr_Seq_prescr_w 
		and	coalesce(dt_fim_horario::text, '') = '' 
		and	coalesce(dt_suspensao::text, '') = '' 
		and	Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';
		 
		 
		if (qt_prescr_proc_hor_w > 0) then 
		 
			update	prescr_proc_hor 
			set	dt_fim_horario = clock_timestamp(), 
				nm_usuario_adm = nm_usuario_p 
			where	nr_prescricao = nr_prescricao_p 
			and	nr_seq_procedimento = nr_Seq_prescr_w 
			and	coalesce(dt_fim_horario::text, '') = '' 
			and	coalesce(dt_suspensao::text, '') = '';
		end if;
		 
	end if;
	 
	if (nr_seq_prescr_w > 0) then 
		 
		if (ie_atualiza_data_result_p = 'S') then 
			select	obter_se_primeira_coleta(nr_seq_prescr_w, nr_prescricao_p), 
				obter_data_resultado_regra(nr_seq_prescr_w, nr_prescricao_p) 
			into STRICT	ie_primeira_coleta_w, 
				dt_resultado_w 
			;
		else 
			ie_primeira_coleta_w := 'S';
			dt_resultado_w := null;		
		end if;
		 
		update	prescr_procedimento 
		set	ie_status_atend = 20, 
			nm_usuario = nm_usuario_p, 
			dt_atualizacao = clock_timestamp(), 
			dt_coleta = clock_timestamp(), 
			dt_resultado = CASE WHEN ie_primeira_coleta_w='S' THEN dt_resultado  ELSE CASE WHEN dt_resultado_w = NULL THEN dt_resultado  ELSE dt_resultado_w END  END  
		where	nr_prescricao = nr_prescricao_p 
		and	nr_sequencia = nr_seq_prescr_w;
		 
		if (ie_consiste_peso_altura_w = 'S') and (lab_obter_se_exige_alt_peso(nr_prescricao_p,nr_seq_prescr_w) = 'S') then 
			ds_erro_p := wheb_mensagem_pck.get_texto(280357,null);
		end if;
	 
	end if;
 
	ie_contador_w	:= ie_contador_w + 1;
	 
	end;
end loop;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_coleta_material_selec ( nr_prescricao_p bigint, lista_informacao_p text, ie_prescr_proc_hor_p text, ie_atualiza_data_result_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

