-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consiste_hor_atend_prest ( nr_seq_horario_p bigint, ie_dia_semana_p text, nr_hora_inicial_p bigint, nr_min_inicial_p bigint, nr_hora_final_p bigint, nr_min_final_p bigint, nr_seq_prestador_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_prest_erro_w	bigint;
nm_prestador_w		varchar(255);
ds_endereco_w		varchar(255);
ie_dia_semana_w		varchar(3);
nr_hora_inicial_w	smallint;
nr_min_inicial_w	smallint;
nr_hora_final_w		smallint;
nr_min_final_w		smallint;
cd_pessoa_fisica_w	varchar(10);
nr_seq_prestador_w	bigint;	


BEGIN

if (nr_seq_horario_p IS NOT NULL AND nr_seq_horario_p::text <> '') then
	ie_dia_semana_w		:= ie_dia_semana_p;
	nr_hora_inicial_w	:= nr_hora_inicial_p;
	nr_min_inicial_w	:= nr_min_inicial_p;
	nr_hora_final_w		:= nr_hora_final_p;
	nr_min_final_w		:= nr_min_final_p;
	nr_seq_prestador_w	:= nr_seq_prestador_p;
	
	/* Verificação de hora inicial */

	if (nr_hora_inicial_w > 23) or (nr_hora_inicial_w < 0) or (nr_hora_inicial_w > nr_hora_final_w) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(265517,'');
		--Mensagem: Hora inicial inválida.
	end if;
	
	/* Verificação de hora final */

	if (nr_hora_final_w > 23) or (nr_hora_final_w < 0) or (nr_hora_final_w < nr_hora_inicial_w) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(265520,'');
		--Mensagem: Hora final inválida.
	end if;
	
	/* Verificação de minutos */

	if (nr_min_inicial_w < 0) or (nr_min_inicial_w > 59) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(265522,'');	
		--Mensagem: Minutos iniciais inválidos.
	end if;
	
	/* Verificação de minutos */

	if (nr_min_final_w < 0) or (nr_min_final_w > 59) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(265523,'');
		--Mensagem: Minutos finais inválidos.
	end if;

	select	a.cd_pessoa_fisica
	into STRICT	cd_pessoa_fisica_w
	from	pls_prestador a
	where	a.nr_sequencia	= nr_seq_prestador_p;

	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		/* Horário inicial */

		select	max(a.nr_seq_prestador)
		into STRICT	nr_seq_prest_erro_w
		from	pls_prest_horario_atend a,
			pls_prestador b
		where	a.nr_seq_prestador	= b.nr_sequencia
		and	a.nr_sequencia		<> nr_seq_horario_p
		and	a.ie_dia_semana		= ie_dia_semana_w
		and	to_date('01/01/2011 ' || nr_hora_inicial_w || ':' || nr_min_inicial_w,'dd/mm/yyyy hh24:mi') between
			to_date('01/01/2011 ' || nr_hora_inicial || ':' || nr_min_inicial,'dd/mm/yyyy hh24:mi') and
			to_date('01/01/2011 ' || nr_hora_final || ':' || nr_min_final,'dd/mm/yyyy hh24:mi')
		and	b.cd_pessoa_fisica	= cd_pessoa_fisica_w;
		
		if (nr_seq_prest_erro_w IS NOT NULL AND nr_seq_prest_erro_w::text <> '') then
			nm_prestador_w	:= pls_obter_dados_prestador(nr_seq_prest_erro_w,'N');
			ds_endereco_w	:= pls_obter_end_prestador(nr_seq_prest_erro_w,null,null);													
			CALL wheb_mensagem_pck.exibir_mensagem_abort(265524,	'nm_prestador=' || nm_prestador_w||';'||
									'ds_endereco=' || ds_endereco_w);
			--Mensagem: O horário inicial informado fica em conflito com outro horário da pessoa.' || chr(13) || chr(10) ||

			--Prestador: || nm_prestador_w || chr(13) || chr(10) ||

			--Endereço: || ds_endereco_w 
		end if;
		
		/* Horário final */

		select	max(a.nr_seq_prestador)
		into STRICT	nr_seq_prest_erro_w
		from	pls_prest_horario_atend a,
			pls_prestador b
		where	a.nr_seq_prestador	= b.nr_sequencia
		and	a.nr_sequencia		<> nr_seq_horario_p
		and	a.ie_dia_semana		= ie_dia_semana_w
		and	to_date('01/01/2011 ' || nr_hora_final_w || ':' || nr_min_final_w,'dd/mm/yyyy hh24:mi') between
			to_date('01/01/2011 ' || nr_hora_inicial || ':' || nr_min_inicial,'dd/mm/yyyy hh24:mi') and
			to_date('01/01/2011 ' || nr_hora_final || ':' || nr_min_final,'dd/mm/yyyy hh24:mi')
		and	b.cd_pessoa_fisica	= cd_pessoa_fisica_w;
		
		if (nr_seq_prest_erro_w IS NOT NULL AND nr_seq_prest_erro_w::text <> '') then
			nm_prestador_w	:= pls_obter_dados_prestador(nr_seq_prest_erro_w,'N');
			ds_endereco_w	:= pls_obter_end_prestador(nr_seq_prest_erro_w,null,null);
			CALL wheb_mensagem_pck.exibir_mensagem_abort(265531,	'nm_prestador=' || nm_prestador_w||';'||
									'ds_endereco=' || ds_endereco_w);
			--Mensagem: O horário final informado fica em conflito com outro horário da pessoa.' || chr(13) || chr(10) ||

			--Prestador: || nm_prestador_w || chr(13) || chr(10) ||

			--Endereço: || ds_endereco_w
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consiste_hor_atend_prest ( nr_seq_horario_p bigint, ie_dia_semana_p text, nr_hora_inicial_p bigint, nr_min_inicial_p bigint, nr_hora_final_p bigint, nr_min_final_p bigint, nr_seq_prestador_p bigint, nm_usuario_p text) FROM PUBLIC;

