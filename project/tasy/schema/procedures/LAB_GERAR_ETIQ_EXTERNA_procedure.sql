-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_gerar_etiq_externa ( nr_prescricao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_sequencia_w           prescr_procedimento.nr_sequencia%type;
cd_material_exame_w      prescr_procedimento.cd_material_exame%type;
nr_seq_exame_w           prescr_procedimento.nr_seq_exame%type;
cd_cgc_externo_w         exame_laboratorio.cd_cgc_externo%type;
ds_valor_alterado_w      lab_regra_geracao_etiq_ext.qt_seq_atual%type;
ds_padrao_amostra_w      lab_parametro.ie_padrao_amostra%type;
nr_controle_exame_w      prescr_procedimento.nr_controle_exame%type := 0;
nr_seq_regra_inst_w      lab_regra_gera_etiq_inst.nr_sequencia%type;
ie_forma_agrup_w         lab_regra_gera_etiq_inst.ie_forma_agrupamento%type;
nr_sequencia_etiq_w      lab_regra_geracao_etiq_ext.nr_sequencia%type;
ds_info_etiq_w           lab_regra_geracao_etiq_ext.ds_info_etiq%type;
ie_fixo_w                lab_regra_geracao_etiq_ext.ie_fixo%type;
qt_tamanho_w             lab_regra_geracao_etiq_ext.qt_tamanho%type;
ds_info_barras_concat_w  prescr_procedimento.nr_controle_exame%type;

cursor_obter_dados_exame CURSOR FOR
    SELECT pp.nr_sequencia,
           pp.cd_material_exame,
           pp.nr_seq_exame
    from   prescr_procedimento pp
    where  pp.nr_prescricao = nr_prescricao_p
       and (pp.nr_seq_exame IS NOT NULL AND pp.nr_seq_exame::text <> '')
       and (pp.cd_material_exame IS NOT NULL AND pp.cd_material_exame::text <> '');

cursor_obter_regra CURSOR FOR
    SELECT   le.nr_sequencia,
             le.ds_info_etiq,
             le.ie_fixo,
             le.qt_tamanho
    from     lab_regra_geracao_etiq_ext le
    where    le.nr_seq_regra_inst = nr_seq_regra_inst_w
    order by le.ie_ordem;


BEGIN
    begin
        select  lp.ie_padrao_amostra
        into STRICT    ds_padrao_amostra_w
        from    lab_parametro lp
        where   lp.cd_estabelecimento = cd_estabelecimento_p;
        exception when others then
                ds_padrao_amostra_w := null;
                CALL gravar_log_lab_pragma(99800, SQLERRM, nm_usuario_p, nr_prescricao_p, null);
    end;

    open cursor_obter_dados_exame;
    loop
    fetch cursor_obter_dados_exame into
          nr_sequencia_w,
          cd_material_exame_w,
          nr_seq_exame_w;
    EXIT WHEN NOT FOUND; /* apply on cursor_obter_dados_exame */

        select lab_obter_cgc_externo(nr_seq_exame_w, nm_usuario_p, cd_estabelecimento_p, nr_prescricao_p, cd_material_exame_w) into STRICT
               cd_cgc_externo_w
;

        if (cd_cgc_externo_w IS NOT NULL AND cd_cgc_externo_w::text <> '') then

            begin
            select
                  li.nr_sequencia,
                  li.ie_forma_agrupamento
            into STRICT  nr_seq_regra_inst_w,
                  ie_forma_agrup_w
            from  lab_regra_gera_etiq_inst li
            where li.cd_cgc_externo = cd_cgc_externo_w
              and coalesce(li.ie_situacao, 'A') = 'A';
            exception
              when others then
                  cd_cgc_externo_w := null;
            end;

            ds_info_barras_concat_w := '';

            open cursor_obter_regra;
            loop
            fetch cursor_obter_regra into
                  nr_sequencia_etiq_w,
                  ds_info_etiq_w,
                  ie_fixo_w,
                  qt_tamanho_w;
            EXIT WHEN NOT FOUND; /* apply on cursor_obter_regra */

            if (ie_fixo_w = 'S') then

                ds_info_barras_concat_w := ds_info_barras_concat_w || ds_info_etiq_w;

            else

                if (ie_forma_agrup_w = 'P') then

                    if (ds_padrao_amostra_w like 'PM%') then -- Padrao da amostra: PMXX
                        begin
                            select  pp.nr_controle_exame
                            into STRICT    nr_controle_exame_w
                            from    atendimento_paciente ap,
                                    material_exame_lab mel,
                                    exame_lab_material elm,
                                    grupo_exame_lab gel,
                                    exame_laboratorio el,
                                    prescr_procedimento pp,
                                    prescr_medica pm,
                                    pessoa_fisica pf
                           where    pm.nr_prescricao = pp.nr_prescricao
                              and   pp.nr_seq_exame = elm.nr_seq_exame
                              and   elm.nr_seq_material = mel.nr_sequencia
                              and   pp.nr_seq_exame = el.nr_seq_exame
                              and   el.nr_seq_grupo = gel.nr_sequencia
                              and   pp.cd_material_exame = mel.cd_material_exame
                              and   pm.nr_atendimento = ap.nr_atendimento
                              and   pf.cd_pessoa_fisica = ap.cd_pessoa_fisica
                              and   pp.nr_prescricao = nr_prescricao_p
                              and   mel.cd_material_exame = cd_material_exame_w
                              and   (pp.nr_controle_exame IS NOT NULL AND pp.nr_controle_exame::text <> '');
                           exception when others then
                                    nr_controle_exame_w := null;
                                    CALL gravar_log_lab_pragma(99800, sqlerrm, nm_usuario_p, nr_prescricao_p, null);
                        end;

                        if (nr_controle_exame_w IS NOT NULL AND nr_controle_exame_w::text <> '') then

                            update  prescr_procedimento
                               set  nr_controle_exame = nr_controle_exame_w
                            where   nr_prescricao = nr_prescricao_p
                               and  nr_sequencia = nr_sequencia_w;

                        else

                            lock table lab_regra_geracao_etiq_ext in exclusive mode;

                            select  coalesce(le.qt_seq_atual, 0) + 1
                            into STRICT    ds_valor_alterado_w
                            from    lab_regra_geracao_etiq_ext le
                            where   le.nr_sequencia = nr_sequencia_etiq_w;

                            update  lab_regra_geracao_etiq_ext
                               set  qt_seq_atual = ds_valor_alterado_w
                            where   nr_sequencia = nr_sequencia_etiq_w;

                            ds_info_barras_concat_w := ds_info_barras_concat_w || lpad(ds_valor_alterado_w, qt_tamanho_w, '0');

                        end if;

                    else -- Padrao da amostra: AMOXX, AMXXF, demais tipos
                        begin
                            select  pp.nr_controle_exame
                            into STRICT    nr_controle_exame_w
                            from    prescr_proc_material ppm,
                                    prescr_medica pm,
                                    prescr_procedimento pp
                            where   ppm.nr_prescricao = pm.nr_prescricao
                              and   pp.nr_prescricao = nr_prescricao_p
                              and   pp.nr_sequencia <> nr_sequencia_w
                              and   pp.cd_material_exame = cd_material_exame_w
                              and   (pp.nr_controle_exame IS NOT NULL AND pp.nr_controle_exame::text <> '')  LIMIT 1;
                            exception when others then
                                    nr_controle_exame_w := null;
                                    CALL gravar_log_lab_pragma(99800, sqlerrm, nm_usuario_p, nr_prescricao_p, null);
                        end;

                        if (nr_controle_exame_w IS NOT NULL AND nr_controle_exame_w::text <> '') then

                            update  prescr_procedimento
                               set  nr_controle_exame = nr_controle_exame_w
                            where   nr_prescricao = nr_prescricao_p
                               and  nr_sequencia = nr_sequencia_w;

                        else

                            lock table lab_regra_geracao_etiq_ext in exclusive mode;

                            select  coalesce(le.qt_seq_atual, 0) + 1
                            into STRICT    ds_valor_alterado_w
                            from    lab_regra_geracao_etiq_ext le
                            where   le.nr_sequencia = nr_sequencia_etiq_w;

                            update  lab_regra_geracao_etiq_ext
                               set  qt_seq_atual = ds_valor_alterado_w
                            where   nr_sequencia = nr_sequencia_etiq_w;

                            ds_info_barras_concat_w := ds_info_barras_concat_w || lpad(ds_valor_alterado_w, qt_tamanho_w, '0');

                        end if;

                    end if;

                else

                    lock table lab_regra_geracao_etiq_ext in exclusive mode;

                    select  coalesce(le.qt_seq_atual, 0) + 1
                    into STRICT    ds_valor_alterado_w
                    from    lab_regra_geracao_etiq_ext le
                    where   le.nr_sequencia = nr_sequencia_etiq_w;

                    update  lab_regra_geracao_etiq_ext
                       set  qt_seq_atual = ds_valor_alterado_w
                    where   nr_sequencia = nr_sequencia_etiq_w;

                    ds_info_barras_concat_w := ds_info_barras_concat_w || lpad(ds_valor_alterado_w, qt_tamanho_w, '0');

                end if;

            end if;

            end loop;
            close cursor_obter_regra;

            if (coalesce(nr_controle_exame_w::text, '') = '') then
                update  prescr_procedimento
                   set  nr_controle_exame = ds_info_barras_concat_w
                where   nr_prescricao = nr_prescricao_p
                   and  nr_sequencia = nr_sequencia_w;
                commit;
            end if;

        end if;
    end loop;
    close cursor_obter_dados_exame;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_gerar_etiq_externa ( nr_prescricao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

