-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE enviar_ci_liberacao_req ( nr_requisicao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

					 
cd_perfil_w			varchar(10);
nr_seq_regra_ci_w		bigint;
cd_setor_regra_usuario_w	integer;
ds_titulo_w			varchar(80);
ds_comunicado_w			varchar(4000);
nm_usuarios_adic_w		varchar(255);
ie_ci_lida_w			varchar(1);
qt_regra_usuario_w		bigint;
nm_usuario_destino_w		varchar(255);
nr_seq_classif_w		bigint;
nr_seq_ci_w			bigint;
ds_setor_adicional_w		varchar(2000) := '';
dt_solicitacao_requisicao_w	timestamp;
nm_solicitante_w		varchar(255);
ds_centro_custo_w		varchar(255);
ds_urgente_w			varchar(10);
qt_filtro_regra_w		bigint;
ie_existe_regra_w		varchar(1);
cd_centro_custo_w		integer;

c01 CURSOR FOR 
	SELECT	b.nr_sequencia, 
		b.cd_perfil 
	from	regra_envio_comunic_compra a, 
		regra_envio_comunic_evento b 
	where	a.nr_sequencia = b.nr_seq_regra 
	and	a.cd_funcao = 919 
	and	b.cd_evento = 70 
	and	b.ie_situacao = 'A' 
	and	cd_estabelecimento = cd_estabelecimento_p 
	and	substr(obter_se_envia_ci_regra_compra(b.nr_sequencia,nr_requisicao_p,'RM',obter_perfil_ativo,nm_usuario_p,null),1,1) = 'S';

c05 CURSOR FOR 
	SELECT	coalesce(a.cd_setor_atendimento,0) cd_setor_atendimento 
	from	regra_envio_comunic_usu a 
	where	a.nr_seq_evento = nr_seq_regra_ci_w;


BEGIN 
 
select	trunc(dt_solicitacao_requisicao), 
	substr(obter_nome_pessoa_fisica(cd_pessoa_requisitante,null),1,250),	 
	substr(obter_ds_centro_custo(cd_centro_custo),1,250), 
	CASE WHEN ie_urgente='S' THEN  OBTER_DESC_EXPRESSAO(327113)  ELSE OBTER_DESC_EXPRESSAO(327114) END , 
	cd_centro_custo 
into STRICT	dt_solicitacao_requisicao_w, 
	nm_solicitante_w, 
	ds_centro_custo_w, 
	ds_urgente_w, 
	cd_centro_custo_w 
from	requisicao_material 
where	nr_requisicao = nr_requisicao_p;
 
open C01;
loop 
fetch C01 into	 
	nr_seq_regra_ci_w, 
	cd_perfil_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	ie_existe_regra_w := null;
	 
	open C05;
	loop 
	fetch C05 into	 
		cd_setor_regra_usuario_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin 
		if (cd_setor_regra_usuario_w <> 0) and (obter_se_contido_char(cd_setor_regra_usuario_w, ds_setor_adicional_w) = 'N') then 
			ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',',1,2000);
		end if;
		end;
	end loop;
	close C05;
	 
	select	count(*) 
	into STRICT	qt_filtro_regra_w 
	from	regra_envio_comunic_filtro 
	where	nr_seq_regra = nr_seq_regra_ci_w;
	 
	if (qt_filtro_regra_w > 0) then 
		select	count(*) 
		into STRICT	qt_filtro_regra_w 
		from	regra_envio_comunic_filtro 
		where	coalesce(nm_usuario_regra,nm_usuario_p) = nm_usuario_p 
		and	coalesce(cd_perfil_regra,wheb_usuario_pck.get_cd_perfil) = wheb_usuario_pck.get_cd_perfil 
		and	coalesce(cd_centro_custo,coalesce(cd_centro_custo_w,'0')) = coalesce(cd_centro_custo_w,'0') 
		and	nr_seq_regra = nr_seq_regra_ci_w;
		 
		if (qt_filtro_regra_w > 0) then 
			ie_existe_regra_w := 'S';
		end if;
	else 
		ie_existe_regra_w := 'S';
	end if;
 
	select	substr(ds_titulo,1,80), 
		substr(ds_comunicacao,1,4000) ds_comunicacao, 
		nm_usuarios_adic, 
		coalesce(ie_ci_lida,'N') 
	into STRICT	ds_titulo_w, 
		ds_comunicado_w, 
		nm_usuarios_adic_w, 
		ie_ci_lida_w 
	from	regra_envio_comunic_evento 
	where	nr_sequencia = nr_seq_regra_ci_w;
 
	ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@nr_requisicao', nr_requisicao_p),1,4000);
	ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@dt_requisicao', dt_solicitacao_requisicao_w),1,4000);
	ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@nm_solicitante', nm_solicitante_w),1,4000);
	ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@ds_centro_custo', ds_centro_custo_w),1,4000);
	ds_comunicado_w := substr(replace_macro(ds_comunicado_w, '@ds_urgente', ds_urgente_w),1,4000);
 
	select	count(*) 
	into STRICT	qt_regra_usuario_w 
	from	regra_envio_comunic_compra a, 
		regra_envio_comunic_evento b, 
		regra_envio_comunic_usu c 
	where	a.nr_sequencia = b.nr_seq_regra 
	and	b.nr_sequencia = c.nr_seq_evento 
	and	b.nr_sequencia = nr_seq_regra_ci_w;
		 
	nm_usuario_destino_w := substr(obter_usuarios_comunic_compras(nr_requisicao_p, null, 70, nr_seq_regra_ci_w, nm_usuario_p),1,255);
		 
	if (ds_comunicado_w IS NOT NULL AND ds_comunicado_w::text <> '') and (nm_usuario_destino_w IS NOT NULL AND nm_usuario_destino_w::text <> '') and (ie_existe_regra_w = 'S') then 
			 
		select	obter_classif_comunic('F') 
		into STRICT	nr_seq_classif_w 
		;
			 
		select	nextval('comunic_interna_seq') 
		into STRICT	nr_seq_ci_w 
		;	
 
		if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then 
			cd_perfil_w := cd_perfil_w ||',';
		end if;	
 
		insert into comunic_interna( 
			dt_comunicado, 
			ds_titulo, 
			ds_comunicado, 
			nm_usuario, 
			dt_atualizacao, 
			ie_geral, 
			nm_usuario_destino, 
			nr_sequencia, 
			ie_gerencial, 
			nr_seq_classif, 
			dt_liberacao, 
			ds_perfil_adicional, 
			ds_setor_adicional) 
		values (	clock_timestamp(), 
			ds_titulo_w, 
			ds_comunicado_w, 
			nm_usuario_p, 
			clock_timestamp(), 
			'N', 
			nm_usuario_destino_w, 
			nr_seq_ci_w, 
			'N', 
			nr_seq_classif_w, 
			clock_timestamp(), 
			cd_perfil_w, 
			ds_setor_adicional_w);
 
		/*Para que a comunicação seja gerada como lida ao próprio usuário */
 
		if (ie_ci_lida_w = 'S') then 
			insert into comunic_interna_lida(nr_sequencia,nm_usuario,dt_atualizacao)values (nr_seq_ci_w,nm_usuario_p,clock_timestamp());
		end if;
	end if;
	end;
end loop;
close C01;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enviar_ci_liberacao_req ( nr_requisicao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

