-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_nut_pac_elemento ( nr_sequencia_p bigint, ie_fase_informada_p text, ie_calcular_p text, nm_usuario_p text, ds_campo_alterado_p text default null) AS $body$
DECLARE


ie_tipo_elemento_w		varchar(1);
nr_sequencia_w			bigint;
nr_seq_elem_unid_med_w	bigint;
nr_seq_elemento_w		bigint;
nr_seq_elem_mat_w		bigint;
qt_elemento_w			double precision;
qt_volume_w				double precision;
qt_dispensar_w			double precision;
qt_conv_w				double precision;
qt_prescricao_w			double precision;
qt_conversao_ml_w		double precision;
qt_conv_unid_cons_w		double precision;
qt_fase_npt_w			bigint;
qt_vol_1_fase_w			double precision;
qt_vol_2_fase_w			double precision;
qt_vol_3_fase_w			double precision;
nr_seq_nut_pac_w		bigint;
cd_unid_med_cons_w		varchar(30);

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	nut_elemento_unid_med
	where	ie_situacao = 'A'
	and		nr_seq_elemento	= nr_seq_elemento_w
	order by ie_prioridade desc;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	nut_elemento_cadastro
	where	nr_seq_elem_unid_med = coalesce(nr_seq_elem_unid_med_w,0)
	and		ie_situacao	= 'A'
	order by nr_sequencia desc;


BEGIN

select 	nr_seq_elem_unid_med,
		nr_seq_elem_mat,
		qt_elemento,
		qt_volume,
		nr_seq_elemento,
		nr_seq_nut_pac,
		qt_vol_1_fase,
		qt_vol_2_fase,
		qt_vol_3_fase
into STRICT	nr_seq_elem_unid_med_w,
		nr_seq_elem_mat_w,
		qt_elemento_w,
		qt_volume_w,
		nr_seq_elemento_w,
		nr_seq_nut_pac_w,
		qt_vol_1_fase_w,
		qt_vol_2_fase_w,
		qt_vol_3_fase_w
from 	nut_paciente_elemento
where 	nr_sequencia 	= nr_sequencia_p;

if (coalesce(nr_seq_elem_unid_med_w::text, '') = '') then
	begin
	open C01;
	loop
	fetch C01 into
		nr_seq_elem_unid_med_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;
	end;
end if;

if (coalesce(nr_seq_elem_mat_w::text, '') = '') then
	begin
	open C02;
	loop
	fetch C02 into
		nr_seq_elem_mat_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
	end loop;
	close C02;
	end;
end if;

if (nr_seq_elem_mat_w IS NOT NULL AND nr_seq_elem_mat_w::text <> '') then
begin

	select	a.qt_conversao_ml,
			a.qt_conv_unid_cons,
			b.cd_unidade_medida_consumo
	into STRICT	qt_conversao_ml_w,
			qt_conv_unid_cons_w,
			cd_unid_med_cons_w
	from	material b,
			nut_elemento_cadastro a
	where	a.cd_material	= b.cd_material
	and		a.nr_sequencia	= nr_seq_elem_mat_w;

	if (ds_campo_alterado_p	= 'QT_DOSE') then

		qt_volume_w		:= round((qt_elemento_w * qt_conversao_ml_w)::numeric,0);
		qt_prescricao_w	:= round((qt_elemento_w / qt_conv_unid_cons_w)::numeric,2);
		qt_dispensar_w	:= round((qt_prescricao_w)::numeric,0);

	elsif (ds_campo_alterado_p = 'QT_VOLUME') then

		qt_elemento_w	:= ( qt_conv_unid_cons_w /qt_conversao_ml_w ) * qt_volume_w;
		qt_prescricao_w	:= round((qt_elemento_w / qt_conv_unid_cons_w)::numeric,2);
		qt_dispensar_w	:= round((qt_prescricao_w)::numeric,0);

	else

		qt_volume_w			:= round((qt_elemento_w * qt_conversao_ml_w)::numeric,0);
		qt_prescricao_w		:= round((qt_elemento_w / qt_conv_unid_cons_w)::numeric,2);
		qt_dispensar_w		:= round((qt_prescricao_w)::numeric,0);

	end if;
end;
end if;

if (coalesce(qt_volume_w,0) > 0) and (ie_calcular_p = 'S') then

	select	max(qt_fase_npt)
	into STRICT	qt_fase_npt_w
	from	nut_paciente
	where	nr_sequencia	= nr_seq_nut_pac_w;

	if (coalesce(ie_fase_informada_p::text, '') = '') or (ie_fase_informada_p = 0)then
		if (qt_fase_npt_w = 1) then
			qt_vol_1_fase_w	:= qt_volume_w;
		elsif (qt_fase_npt_w = 2) then
			qt_vol_1_fase_w	:= qt_volume_w / 2;
			qt_vol_2_fase_w := qt_volume_w / 2;
		elsif (qt_fase_npt_w = 3) then
			qt_vol_1_fase_w	:= qt_volume_w / 3;
			qt_vol_2_fase_w := qt_volume_w / 3;
			qt_vol_3_fase_w := qt_volume_w / 3;
		end if;
	elsif (ie_fase_informada_p = '1') and (qt_fase_npt_w > 1) then
		if (qt_fase_npt_w = 2) then
			qt_vol_2_fase_w := qt_volume_w  - qt_vol_1_fase_w;
		elsif (qt_fase_npt_w = 3) then
			qt_vol_2_fase_w := (qt_volume_w - qt_vol_1_fase_w) / 2;
			qt_vol_3_fase_w := (qt_volume_w - qt_vol_1_fase_w) / 2;
		end if;
	elsif (ie_fase_informada_p = '2') and (qt_fase_npt_w = 3) then
		qt_vol_3_fase_w := (qt_volume_w - qt_vol_1_fase_w - qt_vol_2_fase_w);
	end if;
end if;

update	nut_paciente_elemento
set		qt_volume 			= qt_volume_w,
		qt_elemento			= qt_elemento_w,
		nr_seq_elem_unid_med = nr_seq_elem_unid_med_w,
		nr_seq_elem_mat		= nr_seq_elem_mat_w,
		cd_unid_med_prescr	= cd_unid_med_cons_w,
		qt_prescricao		= qt_prescricao_w,
		qt_dispensar		= qt_dispensar_w,
		qt_vol_1_fase		= qt_vol_1_fase_w,
		qt_vol_2_fase		= qt_vol_2_fase_w,
		qt_vol_3_fase		= qt_vol_3_fase_w
where	nr_sequencia 		= nr_sequencia_p;

CALL Calcula_nut_paciente_elemento(nr_sequencia_p, nm_usuario_p);

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_nut_pac_elemento ( nr_sequencia_p bigint, ie_fase_informada_p text, ie_calcular_p text, nm_usuario_p text, ds_campo_alterado_p text default null) FROM PUBLIC;

