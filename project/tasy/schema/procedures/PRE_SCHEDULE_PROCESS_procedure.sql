-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pre_schedule_process ( nr_sequencia_p text, cd_pessoa_fisica_p text) AS $body$
DECLARE

 
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
cd_usuario_convenio_w	varchar(30);
dt_validade_carteira_w	timestamp;
nr_doc_convenio_w		varchar(20);
cd_tipo_acomodacao_w	smallint;
cd_plano_w				varchar(10);
ds_observacao_w			varchar(4000);
ie_forma_convenio_w		varchar(2);
ie_status_padrao_w		varchar(2);


BEGIN 
 
ie_status_padrao_w := obter_param_usuario(870, 24, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_status_padrao_w);
ie_forma_convenio_w := obter_param_usuario(870, 27, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_forma_convenio_w);
 
CALL confirmar_pre_agenda(nr_sequencia_p, ie_status_padrao_w);
 
if (coalesce(ie_forma_convenio_w,'N') <> 'N') then 
	SELECT * FROM Gerar_Convenio_Agendamento(cd_pessoa_fisica_p, 1, nr_sequencia_p, ie_forma_convenio_w, cd_convenio_w, cd_categoria_w, cd_usuario_convenio_w, dt_validade_carteira_w, nr_doc_convenio_w, cd_tipo_acomodacao_w, cd_plano_w, wheb_usuario_pck.get_nm_usuario, ds_observacao_w) INTO STRICT cd_convenio_w, cd_categoria_w, cd_usuario_convenio_w, dt_validade_carteira_w, nr_doc_convenio_w, cd_tipo_acomodacao_w, cd_plano_w, ds_observacao_w;
end if;
 
if (coalesce(ie_forma_convenio_w,'N') <> 'N' and cd_convenio_w > 0) then 
	begin 
	 
	update 	agenda_paciente 
	set 	cd_convenio 			= cd_convenio_w, 
			cd_categoria 			= cd_categoria_w, 
			cd_usuario_convenio 	= cd_usuario_convenio_w, 
			dt_validade_carteira 	= dt_validade_carteira_w, 
			cd_tipo_acomodacao 		= cd_tipo_acomodacao_w 
	where 	nr_sequencia 			= nr_sequencia_p;
	 
	end;
end if;
 
CALL enviar_email_regra(nr_sequencia_p, 'CO', wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento);
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pre_schedule_process ( nr_sequencia_p text, cd_pessoa_fisica_p text) FROM PUBLIC;

