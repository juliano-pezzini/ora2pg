-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE recalcula_valores_npt_prod ( nr_seq_nut_pac_p bigint, nr_seq_nut_pac_prod_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_campo_alterado_p text) AS $body$
DECLARE


qt_conversao_ml_w       	double precision;
qt_conv_unid_cons_w			double precision;
qt_dose_w               	double precision;
qt_volume_w					double precision;
qt_volume_ww				double precision;
cd_material_w				bigint;
cd_unidade_medida_w			varchar(50);
cd_unidade_medida_elem_w	varchar(50);
ie_tipo_elemento_w			varchar(1);
nr_seq_elemento_w			bigint;
nr_seq_nut_pac_elem_w		bigint;
qt_diaria_w					double precision;
qt_kcal_w					double precision;
qt_elem_kg_dia_w			double precision;
qt_peso_w                   double precision;
qt_formula_lipideo_w		double precision;
qt_formula_carb_w			double precision;
qt_formula_prot_w			double precision := 4;
pr_lipidio_w                real;
pr_proteina_w               real;
pr_carboidrato_w            real;
pr_conc_glic_solucao_w		double precision;
pr_conc_lipidio_solucao_w	double precision;
pr_conc_proteina_solucao_w	double precision;
qt_kcal_carboidrato_w		double precision;
qt_kcal_lipidio_w			double precision;
qt_kcal_proteina_w			double precision;
qt_kcal_total_w				double precision;
qt_kcal_kg_w				double precision;
qt_kcal_proteico_w			double precision;
qt_kcal_nao_proteico_w		double precision;
qt_grama_nitrogenio_w		double precision;
qt_vel_inf_glicose_w		double precision;
qt_rel_cal_nit_w			double precision;
qt_volume_diario_w			double precision;
qt_volume_princ_w			double precision := 0;
qt_grama_proteina_kg_dia_w	double precision;
qt_vol_fase_w				double precision;
qt_vol_1_fase_w				double precision;
qt_vol_2_fase_w				double precision;
qt_vol_3_fase_w				double precision;
qt_vol_4_fase_w				double precision;
qt_fase_npt_w				double precision;
qt_fase_npt_per_w			double precision;
ie_prim_fase_w				nut_pac_elemento.ie_prim_fase%type;
ie_seg_fase_w				nut_pac_elemento.ie_seg_fase%type;
ie_terc_fase_w				nut_pac_elemento.ie_terc_fase%type;
ie_quar_fase_w				nut_pac_elemento.ie_quar_fase%type;
ie_glutamina_w				nut_elemento.ie_glutamina%type;
qt_conversao_kcal_w			nut_elem_material.qt_conversao_kcal%type := 0;
qt_conversao_ml_ww       	double precision;
qt_dose_ww               	double precision;
cd_unidade_medida_ww		varchar(50);
cd_unidade_medida_elem_ww	varchar(50);
qt_conversao_kcal_ww		nut_elem_material.qt_conversao_kcal%type := 0;
qt_kcal_ww					double precision;
qt_diaria_ww				double precision;

C01 CURSOR FOR
	SELECT	distinct a.cd_material,
			coalesce(a.qt_volume,0)
	from	nut_pac_elem_mat a,
			nut_elem_material b,
			nut_pac_elemento c,
			nut_elemento d
	where	a.cd_material 		= b.cd_material
	and		a.nr_seq_nut_pac 	= c.nr_seq_nut_pac
	and		b.nr_seq_elemento 	= c.nr_seq_elemento
	and		b.nr_seq_elemento 	= d.nr_sequencia
	and		c.nr_seq_elemento 	= d.nr_sequencia
	and		a.nr_seq_nut_pac 	= nr_seq_nut_pac_p
	and		coalesce(b.ie_tipo,'NPT')	= 'NPT'
	and		coalesce(d.ie_redistribuir,'S') = 'S'
	and		coalesce(d.ie_somar_volume,'S') = 'S';

c02 CURSOR FOR
	SELECT	coalesce(b.qt_conversao_ml,1),
			coalesce(a.qt_volume,0),
			coalesce(a.qt_dose,0),
			coalesce(a.cd_unidade_medida, obter_unid_med_usua('ml')),
			coalesce(b.qt_conversao_kcal,0),
			c.cd_unidade_medida
	from	nut_pac_elem_mat a,
			nut_elem_material b,
			nut_pac_elemento c,
			nut_elemento d
	where	a.cd_material 		= b.cd_material
	and		a.nr_seq_nut_pac 	= c.nr_seq_nut_pac
	and		b.nr_seq_elemento 	= c.nr_seq_elemento
	and		b.nr_seq_elemento 	= d.nr_sequencia
	and		c.nr_seq_elemento 	= d.nr_sequencia
	and		a.nr_seq_nut_pac 	= nr_seq_nut_pac_p
	and		a.nr_sequencia 		<> nr_seq_nut_pac_prod_p
	and		d.ie_tipo_elemento	= 'L';


BEGIN
qt_formula_lipideo_w := Obter_Param_Usuario(924, 1034, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, qt_formula_lipideo_w);
qt_formula_carb_w := Obter_Param_Usuario(924, 1035, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, qt_formula_carb_w);

select	max(pr_conc_glic_solucao),
		max(pr_conc_lipidio_solucao),
		max(pr_conc_proteina_solucao),
		max(coalesce(qt_kcal_carboidrato,0)),
		max(coalesce(qt_kcal_lipidio,0)),
		max(coalesce(qt_kcal_proteina,0)),
		max(coalesce(qt_peso_ajustado, qt_peso)),
		max(qt_grama_nitrogenio),
		max(qt_vel_inf_glicose),
		max(qt_fase_npt)
into STRICT	pr_conc_glic_solucao_w,
		pr_conc_lipidio_solucao_w,
		pr_conc_proteina_solucao_w,
		qt_kcal_carboidrato_w,
		qt_kcal_lipidio_w,
		qt_kcal_proteina_w,
		qt_peso_w,
		qt_grama_nitrogenio_w,
		qt_vel_inf_glicose_w,
		qt_fase_npt_w
from	nut_pac
where	nr_sequencia = nr_seq_nut_pac_p;

if (qt_grama_nitrogenio_w = 0) then
	qt_grama_nitrogenio_w	:= 1;
end if;

select	max(coalesce(b.qt_conv_unid_cons,1)),
		max(coalesce(b.qt_conversao_ml,1)),
		max(coalesce(a.qt_volume,0)),
		max(coalesce(a.qt_dose,0)),
		max(coalesce(a.cd_unidade_medida, obter_unid_med_usua('ml'))),
		max(d.ie_tipo_elemento),
		max(d.nr_sequencia),
		max(coalesce(d.ie_glutamina,'N')),
		max(coalesce(b.qt_conversao_kcal,0))
into STRICT	qt_conv_unid_cons_w,
		qt_conversao_ml_w,
		qt_volume_w,
		qt_dose_w,
		cd_unidade_medida_w,
		ie_tipo_elemento_w,
		nr_seq_elemento_w,
		ie_glutamina_w,
		qt_conversao_kcal_w
from	nut_pac_elem_mat a,
		nut_elem_material b,
		nut_pac_elemento c,
		nut_elemento d
where	a.cd_material 		= b.cd_material
and		a.nr_seq_nut_pac 	= c.nr_seq_nut_pac
and		b.nr_seq_elemento 	= c.nr_seq_elemento
and		b.nr_seq_elemento 	= d.nr_sequencia
and		c.nr_seq_elemento 	= d.nr_sequencia
and		a.nr_seq_nut_pac 	= nr_seq_nut_pac_p
and		a.nr_sequencia 		= nr_seq_nut_pac_prod_p;

if (upper(ds_campo_alterado_p) = 'QT_VOLUME') then

	select	max(nr_sequencia),
			max(cd_unidade_medida)
	into STRICT	nr_seq_nut_pac_elem_w,
			cd_unidade_medida_elem_w
	from	nut_pac_elemento
	where 	nr_seq_elemento	= nr_seq_elemento_w
	and		nr_seq_nut_pac = nr_seq_nut_pac_p;

	open C01;
	loop
	fetch C01 into cd_material_w,
				   qt_volume_ww;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		qt_volume_princ_w := qt_volume_princ_w + qt_volume_ww;
		end;
	end loop;
	close C01;

	if (upper(cd_unidade_medida_w) = upper(obter_unid_med_usua('ml'))) then
		qt_dose_w := qt_volume_w;
	elsif (qt_volume_w IS NOT NULL AND qt_volume_w::text <> '') then
		qt_dose_w := dividir_sem_round(qt_volume_w, qt_conversao_ml_w);
	end if;

	if (upper(cd_unidade_medida_elem_w) = upper(obter_unid_med_usua('ml'))) then
		qt_diaria_w	:= qt_volume_w;
	else
		qt_diaria_w := dividir_sem_round(qt_volume_w, qt_conversao_ml_w);
	end if;

	qt_elem_kg_dia_w := dividir_sem_round(qt_diaria_w,qt_peso_w);
	qt_kcal_w := 0;
	if (ie_tipo_elemento_w = 'P' and ie_glutamina_w = 'N') then
		pr_conc_proteina_solucao_w	:= qt_diaria_w;
		qt_kcal_w 					:= (qt_diaria_w*qt_formula_prot_w);
		qt_kcal_proteina_w			:= qt_kcal_w;
	elsif (ie_tipo_elemento_w = 'C') then
		pr_conc_glic_solucao_w	:= qt_diaria_w;
		qt_kcal_w 				:= (qt_diaria_w*qt_formula_carb_w);
		qt_kcal_carboidrato_w	:= qt_kcal_w;
		qt_vel_inf_glicose_w	:= dividir_sem_round(qt_elem_kg_dia_w, 1.44);
	elsif (ie_tipo_elemento_w = 'L') then
		--Lipídio alterado
		if (qt_conversao_kcal_w = 0) then
			qt_conversao_kcal_w	:= qt_formula_lipideo_w;
		end if;
		pr_conc_lipidio_solucao_w	:= qt_diaria_w;
		qt_kcal_w 					:= (qt_diaria_w*qt_conversao_kcal_w);
		qt_kcal_lipidio_w			:= qt_kcal_w;

		--Outros lipídeos
		open C02;
		loop
		fetch C02 into
			qt_conversao_ml_ww,
			qt_volume_ww,
			qt_dose_ww,
			cd_unidade_medida_ww,
			qt_conversao_kcal_ww,
			cd_unidade_medida_elem_ww;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

				if (upper(cd_unidade_medida_ww) = upper(obter_unid_med_usua('ml'))) then
					qt_dose_ww := qt_volume_ww;
				elsif (qt_volume_ww IS NOT NULL AND qt_volume_ww::text <> '') then
					qt_dose_ww := dividir_sem_round(qt_volume_ww, qt_conversao_ml_ww);
				end if;

				if (upper(cd_unidade_medida_elem_ww) = upper(obter_unid_med_usua('ml'))) then
					qt_diaria_ww	:= qt_volume_ww;
				else
					qt_diaria_ww := dividir_sem_round(qt_volume_ww, qt_conversao_ml_ww);
				end if;

				if (qt_conversao_kcal_ww = 0) then
					qt_conversao_kcal_ww	:= qt_formula_lipideo_w;
				end if;
				qt_kcal_ww 					:= (qt_diaria_ww * qt_conversao_kcal_ww);
				qt_kcal_lipidio_w			:= qt_kcal_lipidio_w + qt_kcal_ww;
				pr_conc_lipidio_solucao_w	:= pr_conc_lipidio_solucao_w + qt_diaria_ww;

			end;
		end loop;
		close C02;
	end if;

	qt_kcal_total_w 			:= (qt_kcal_proteina_w + qt_kcal_carboidrato_w + qt_kcal_lipidio_w);
	pr_lipidio_w 				:= round((dividir_sem_round((qt_kcal_lipidio_w * 100),qt_kcal_total_w))::numeric,1);
	pr_proteina_w 				:= round((dividir_sem_round((qt_kcal_proteina_w * 100),qt_kcal_total_w))::numeric,1);
	pr_carboidrato_w 			:= (100 - (pr_lipidio_w + pr_proteina_w));
	qt_kcal_kg_w				:= dividir_sem_round(qt_kcal_total_w, qt_peso_w);
	qt_kcal_proteico_w			:= qt_kcal_proteina_w;
	qt_kcal_nao_proteico_w		:= (qt_kcal_carboidrato_w + qt_kcal_lipidio_w);
	qt_grama_nitrogenio_w		:= (pr_conc_proteina_solucao_w * 0.16);
	qt_rel_cal_nit_w			:= dividir_sem_round(qt_kcal_nao_proteico_w,round((qt_grama_nitrogenio_w)::numeric,1));
	qt_grama_proteina_kg_dia_w	:= dividir_sem_round(pr_conc_proteina_solucao_w,qt_peso_w);

	qt_vol_fase_w := dividir_sem_round(qt_volume_w,qt_fase_npt_w);

	if (qt_fase_npt_w = 1) then
		qt_vol_1_fase_w := qt_vol_fase_w;
		qt_vol_2_fase_w := 0;
		qt_vol_3_fase_w := 0;
		qt_vol_4_fase_w := 0;
	elsif (qt_fase_npt_w = 2) then
		qt_vol_1_fase_w := qt_vol_fase_w;
		qt_vol_2_fase_w := qt_vol_fase_w;
		qt_vol_3_fase_w := 0;
		qt_vol_4_fase_w := 0;
	elsif (qt_fase_npt_w = 3) then
		qt_vol_1_fase_w := qt_vol_fase_w;
		qt_vol_2_fase_w := qt_vol_fase_w;
		qt_vol_3_fase_w := qt_vol_fase_w;
		qt_vol_4_fase_w := 0;
	elsif (qt_fase_npt_w = 4) then
		qt_vol_1_fase_w := qt_vol_fase_w;
		qt_vol_2_fase_w := qt_vol_fase_w;
		qt_vol_3_fase_w := qt_vol_fase_w;
		qt_vol_4_fase_w := qt_vol_fase_w;
	else
		qt_vol_1_fase_w := 0;
		qt_vol_2_fase_w := 0;
		qt_vol_3_fase_w := 0;
		qt_vol_4_fase_w := 0;
	end if;

	update	nut_pac_elem_mat
	set		qt_dose 		= coalesce(qt_dose_w,qt_dose),
			qt_vol_1_fase	= qt_vol_1_fase_w,
			qt_vol_2_fase	= qt_vol_2_fase_w,
			qt_vol_3_fase	= qt_vol_3_fase_w,
			qt_vol_4_fase	= qt_vol_4_fase_w
	where	nr_sequencia 	= nr_seq_nut_pac_prod_p
	and		nr_seq_nut_pac 	= nr_seq_nut_pac_p;

	update	nut_pac_elemento
	set		qt_kcal 		= qt_kcal_w,
			qt_elem_kg_dia	= qt_elem_kg_dia_w,
			qt_diaria		= qt_diaria_w
	where	nr_sequencia 	= nr_seq_nut_pac_elem_w;

	select	coalesce(sum(c.qt_volume),0)
	into STRICT	qt_volume_diario_w
	from	nut_pac_elem_mat c,
			nut_pac a
	where	a.nr_sequencia	= nr_seq_nut_pac_p
	and		a.nr_sequencia	= c.nr_seq_nut_pac
	and		Obter_Se_Soma_Volume(a.nr_sequencia,c.nr_sequencia) = 'S';

	update	nut_pac
	set		qt_kcal_total				= qt_kcal_total_w,
			pr_carboidrato 				= pr_carboidrato_w,
			pr_lipidio 					= pr_lipidio_w,
			pr_proteina 				= pr_proteina_w,
			qt_kcal_kg 					= qt_kcal_kg_w,
			qt_kcal_proteico 			= qt_kcal_proteico_w,
			qt_kcal_nao_proteico 		= qt_kcal_nao_proteico_w,
			qt_rel_cal_nit 				= qt_rel_cal_nit_w,
			pr_conc_proteina_solucao 	= pr_conc_proteina_solucao_w,
			pr_conc_glic_solucao 		= pr_conc_glic_solucao_w,
			pr_conc_lipidio_solucao 	= pr_conc_lipidio_solucao_w,
			qt_kcal_proteina			= qt_kcal_proteina_w,
			qt_kcal_carboidrato			= qt_kcal_carboidrato_w,
			qt_kcal_lipidio				= qt_kcal_lipidio_w,
			qt_vel_inf_glicose			= qt_vel_inf_glicose_w,
			qt_volume_diario			= qt_volume_diario_w,
			qt_volume_princ				= qt_volume_princ_w,
			qt_grama_proteina_kg_dia	= qt_grama_proteina_kg_dia_w,
			qt_gotejo_npt				= round((dividir_sem_round(qt_volume_diario_w,qt_hora_inf))::numeric,0),
			qt_grama_nitrogenio			= qt_grama_nitrogenio_w
	where 	nr_sequencia				= nr_seq_nut_pac_p;

elsif (upper(ds_campo_alterado_p) = 'QT_DOSE') then

	select	max(nr_sequencia),
			max(cd_unidade_medida)
	into STRICT	nr_seq_nut_pac_elem_w,
			cd_unidade_medida_elem_w
	from	nut_pac_elemento
	where 	nr_seq_elemento	= nr_seq_elemento_w
	and		nr_seq_nut_pac = nr_seq_nut_pac_p;

	if (upper(cd_unidade_medida_w) = upper(obter_unid_med_usua('ml'))) then
		qt_volume_w := qt_dose_w;
	else
		qt_volume_w := (qt_dose_w * qt_conversao_ml_w);
	end if;

	update	nut_pac_elem_mat
	set		qt_volume 		= qt_volume_w
	where	nr_sequencia 	= nr_seq_nut_pac_prod_p
	and		nr_seq_nut_pac 	= nr_seq_nut_pac_p;
	commit;

	select	coalesce(sum(c.qt_volume),0)
	into STRICT	qt_volume_diario_w
	from	nut_pac_elem_mat c,
			nut_pac a
	where	a.nr_sequencia	= nr_seq_nut_pac_p
	and		a.nr_sequencia	= c.nr_seq_nut_pac
	and		Obter_Se_Soma_Volume(a.nr_sequencia,c.nr_sequencia) = 'S';

	open C01;
	loop
	fetch C01 into cd_material_w,
				   qt_volume_ww;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		qt_volume_princ_w := qt_volume_princ_w + qt_volume_ww;
		end;
	end loop;
	close C01;

	if (upper(cd_unidade_medida_elem_w) = upper(obter_unid_med_usua('ml'))) then
		qt_diaria_w	:= qt_volume_w;
	else
		qt_diaria_w := dividir_sem_round(qt_volume_w , qt_conversao_ml_w);
	end if;

	qt_elem_kg_dia_w := dividir_sem_round(qt_diaria_w,qt_peso_w);
	qt_kcal_w := 0;
	if (ie_tipo_elemento_w = 'P' and ie_glutamina_w = 'N') then
		pr_conc_proteina_solucao_w	:= qt_diaria_w;
		qt_kcal_w 					:= (qt_diaria_w*qt_formula_prot_w);
		qt_kcal_proteina_w			:= qt_kcal_w;
	elsif (ie_tipo_elemento_w = 'C') then
		pr_conc_glic_solucao_w	:= qt_diaria_w;
		qt_kcal_w 				:= (qt_diaria_w*qt_formula_carb_w);
		qt_kcal_carboidrato_w	:= qt_kcal_w;
		qt_vel_inf_glicose_w	:= dividir_sem_round(qt_elem_kg_dia_w , 1.44);
	elsif (ie_tipo_elemento_w = 'L') then
		--Lipídio alterado
		if (qt_conversao_kcal_w = 0) then
			qt_conversao_kcal_w	:= qt_formula_lipideo_w;
		end if;
		pr_conc_lipidio_solucao_w	:= qt_diaria_w;
		qt_kcal_w 					:= (qt_diaria_w*qt_conversao_kcal_w);
		qt_kcal_lipidio_w			:= qt_kcal_w;

		--Outros lipídeos
		open C02;
		loop
		fetch C02 into
			qt_conversao_ml_ww,
			qt_volume_ww,
			qt_dose_ww,
			cd_unidade_medida_ww,
			qt_conversao_kcal_ww,
			cd_unidade_medida_elem_ww;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
				if (upper(cd_unidade_medida_ww) = upper(obter_unid_med_usua('ml'))) then
					qt_dose_ww := qt_volume_ww;
				elsif (qt_volume_ww IS NOT NULL AND qt_volume_ww::text <> '') then
					qt_dose_ww := dividir_sem_round(qt_volume_ww, qt_conversao_ml_ww);
				end if;

				if (upper(cd_unidade_medida_elem_ww) = upper(obter_unid_med_usua('ml'))) then
					qt_diaria_ww	:= qt_volume_ww;
				else
					qt_diaria_ww := dividir_sem_round(qt_volume_ww, qt_conversao_ml_ww);
				end if;

				if (qt_conversao_kcal_ww = 0) then
					qt_conversao_kcal_ww	:= qt_formula_lipideo_w;
				end if;
				qt_kcal_ww 					:= (qt_diaria_ww * qt_conversao_kcal_ww);
				qt_kcal_lipidio_w			:= qt_kcal_lipidio_w + qt_kcal_ww;
				pr_conc_lipidio_solucao_w	:= pr_conc_lipidio_solucao_w + qt_diaria_ww;
			end;
		end loop;
		close C02;
	end if;

	qt_kcal_total_w 			:= (qt_kcal_proteina_w + qt_kcal_carboidrato_w + qt_kcal_lipidio_w);
	pr_lipidio_w 				:= round((dividir_sem_round((qt_kcal_lipidio_w * 100),qt_kcal_total_w))::numeric,1);
	pr_proteina_w 				:= round((dividir_sem_round((qt_kcal_proteina_w * 100),qt_kcal_total_w))::numeric,1);
	pr_carboidrato_w 			:= (100 - (pr_lipidio_w + pr_proteina_w));
	qt_kcal_kg_w				:= dividir_sem_round(qt_kcal_total_w , qt_peso_w);
	qt_kcal_proteico_w			:= qt_kcal_proteina_w;
	qt_kcal_nao_proteico_w		:= (qt_kcal_carboidrato_w + qt_kcal_lipidio_w);
	qt_grama_nitrogenio_w		:= (pr_conc_proteina_solucao_w * 0.16);
	qt_rel_cal_nit_w			:= dividir_sem_round(qt_kcal_nao_proteico_w,round((qt_grama_nitrogenio_w)::numeric,1));
	qt_grama_proteina_kg_dia_w	:= dividir_sem_round(pr_conc_proteina_solucao_w,qt_peso_w);

	select	coalesce(max(ie_prim_fase),'N'),
			coalesce(max(ie_seg_fase),'N'),
			coalesce(max(ie_terc_fase),'N'),
			coalesce(max(ie_quar_fase),'N')
	into STRICT	ie_prim_fase_w,
			ie_seg_fase_w,
			ie_terc_fase_w,
			ie_quar_fase_w
	from	nut_pac_elemento
	where	nr_sequencia = nr_seq_nut_pac_elem_w;

	qt_fase_npt_per_w := 0;
	if (ie_quar_fase_w = 'S') then
		qt_fase_npt_per_w := 4;
	elsif (ie_terc_fase_w = 'S') then
		qt_fase_npt_per_w := 3;
	elsif (ie_seg_fase_w = 'S') then
		qt_fase_npt_per_w := 2;
	elsif (ie_prim_fase_w = 'S') then
		qt_fase_npt_per_w := 1;
	end if;

	if (qt_fase_npt_w > qt_fase_npt_per_w) then
		qt_vol_fase_w := dividir_sem_round(qt_volume_w,qt_fase_npt_per_w);
	else
		qt_vol_fase_w := dividir_sem_round(qt_volume_w,qt_fase_npt_w);
	end if;

	if (qt_fase_npt_w > 0) and (ie_prim_fase_w = 'S') then
		qt_vol_1_fase_w := qt_vol_fase_w;
	end if;
	if (qt_fase_npt_w > 1) and (ie_seg_fase_w = 'S') then
		qt_vol_2_fase_w := qt_vol_fase_w;
	end if;
	if (qt_fase_npt_w > 2) and (ie_terc_fase_w = 'S') then
		qt_vol_3_fase_w := qt_vol_fase_w;
	end if;
	if (qt_fase_npt_w > 3) and (ie_quar_fase_w = 'S') then
		qt_vol_4_fase_w := qt_vol_fase_w;
	end if;

	update	nut_pac_elem_mat
	set		qt_vol_1_fase	= coalesce(qt_vol_1_fase_w,0),
			qt_vol_2_fase	= coalesce(qt_vol_2_fase_w,0),
			qt_vol_3_fase	= coalesce(qt_vol_3_fase_w,0),
			qt_vol_4_fase	= coalesce(qt_vol_4_fase_w,0)
	where	nr_sequencia 	= nr_seq_nut_pac_prod_p
	and		nr_seq_nut_pac 	= nr_seq_nut_pac_p;

	update	nut_pac_elemento
	set		qt_kcal 		= qt_kcal_w,
			qt_elem_kg_dia	= qt_elem_kg_dia_w,
			qt_diaria		= qt_diaria_w
	where	nr_sequencia 	= nr_seq_nut_pac_elem_w;

	update	nut_pac
	set		qt_kcal_total				= qt_kcal_total_w,
			pr_carboidrato 				= pr_carboidrato_w,
			pr_lipidio 					= pr_lipidio_w,
			pr_proteina 				= pr_proteina_w,
			qt_kcal_kg 					= qt_kcal_kg_w,
			qt_kcal_proteico 			= qt_kcal_proteico_w,
			qt_kcal_nao_proteico 		= qt_kcal_nao_proteico_w,
			qt_rel_cal_nit 				= qt_rel_cal_nit_w,
			pr_conc_proteina_solucao 	= pr_conc_proteina_solucao_w,
			pr_conc_glic_solucao 		= pr_conc_glic_solucao_w,
			pr_conc_lipidio_solucao 	= pr_conc_lipidio_solucao_w,
			qt_kcal_proteina			= qt_kcal_proteina_w,
			qt_kcal_carboidrato			= qt_kcal_carboidrato_w,
			qt_kcal_lipidio				= qt_kcal_lipidio_w,
			qt_vel_inf_glicose			= qt_vel_inf_glicose_w,
			qt_volume_diario			= qt_volume_diario_w,
			qt_volume_princ				= qt_volume_princ_w,
			qt_grama_proteina_kg_dia	= qt_grama_proteina_kg_dia_w,
			qt_gotejo_npt				= round((dividir_sem_round(qt_volume_diario_w,qt_hora_inf))::numeric,0),
			qt_grama_nitrogenio			= qt_grama_nitrogenio_w
	where 	nr_sequencia				= nr_seq_nut_pac_p;
end if;
commit;

CALL verificar_limite_litro_npt(nr_seq_nut_pac_p,nr_seq_nut_pac_prod_p,nm_usuario_p);
CALL calcular_osmolaridade_nut_pac(nr_seq_nut_pac_p,nm_usuario_p,cd_estabelecimento_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE recalcula_valores_npt_prod ( nr_seq_nut_pac_p bigint, nr_seq_nut_pac_prod_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_campo_alterado_p text) FROM PUBLIC;

