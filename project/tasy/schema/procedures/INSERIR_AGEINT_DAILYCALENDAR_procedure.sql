-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_ageint_dailycalendar ( cd_agenda_p bigint, nr_seq_agenda_p bigint, nr_seq_ageint_p INOUT bigint, cd_tipo_agenda_p text, dt_agenda_p timestamp, cd_pessoa_fisica_p bigint, cd_convenio_p bigint, cd_estabelicimento_p bigint, nm_usuario_p text, cd_medico_p bigint, cd_especialidade_p bigint default null, cd_procedimento_p bigint default null, nr_seq_proc_interno_p bigint default null, nr_minuto_duracao_p bigint DEFAULT NULL, ds_dado_clinico_p text default null, nr_seq_ageint_item_p INOUT bigint DEFAULT NULL, cd_medico_req_p bigint default null, ds_observacao_p text default null, nm_paciente_p text default null, nr_telefone_p text default null, dt_nascimento_p timestamp default null, cd_procedencia_p bigint default null, ds_erro_p INOUT text DEFAULT NULL) AS $body$
DECLARE


nr_seq_agenda_int_w  		agenda_integrada.nr_sequencia%type;
nr_seq_status_w 		agenda_integrada_status.nr_sequencia%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
ds_hor_min_w			bigint;	
ds_hor_max_w			bigint;
ds_hor_min_livre_w		bigint;
ds_hor_max_livre_w		bigint;
ds_erro_w			varchar(2500);
nr_seq_ageint_marca_usuario_w    double precision;
nr_seq_person_name_w  		agenda_integrada.nr_seq_person_name%type;


BEGIN


  	if (coalesce(nr_seq_ageint_p::text, '') = '' or nr_seq_ageint_p = 0) then

    		select 	max(a.nr_sequencia)
    		into STRICT 	nr_seq_status_w
    		from 	agenda_integrada_status a
    		where 	coalesce(a.ie_situacao,'A') 	= 'A'
    		and 	ie_status_tasy          = 'AG';

    		select nextval('agenda_integrada_seq') into STRICT nr_seq_agenda_int_w;

			nr_seq_ageint_p := nr_seq_agenda_int_w;

			if (cd_tipo_agenda_p in (3, 5) ) then
                select max(nr_seq_person_name)
                into STRICT nr_seq_person_name_w
                from agenda_consulta
                where nr_sequencia = nr_seq_agenda_p;
            else
                select max(nr_seq_person_name)
                into STRICT nr_seq_person_name_w
                from agenda_paciente
                where nr_sequencia = nr_seq_agenda_p;
            end if;

    		insert into agenda_integrada(
				nr_sequencia ,
				dt_atualizacao ,
				nm_usuario ,
				dt_atualizacao_nrec ,
				nm_usuario_nrec ,
				dt_inicio_agendamento,
				dt_fim_agendamento ,
				cd_pessoa_fisica ,
				cd_estabelecimento,
				nr_seq_status,
				cd_convenio,
				cd_profissional,
				ds_indicacao,
				qt_peso,
				qt_altura_cm,
				cd_medico_solicitante,
				nr_telefone,
				ds_observacao,
				nm_paciente,
				dt_nascimento,
				nr_seq_person_name,
				cd_procedencia
			) values (
				nr_seq_agenda_int_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				null,
				cd_pessoa_fisica_p,
				cd_estabelicimento_p,
				nr_seq_status_w,
				cd_convenio_p,
				obter_pf_usuario(obter_usuario_ativo, 'C'),
				ds_dado_clinico_p,
				coalesce(obter_peso_pf(cd_pessoa_fisica_p),0),
				coalesce(obter_qt_altura_pf(cd_pessoa_fisica_p),0),
				cd_medico_req_p,
				substr(coalesce(nr_telefone_p, obter_telefone_pf(cd_pessoa_fisica_p, 1)),1,60),
				ds_observacao_p,
				nm_paciente_p,
				coalesce(dt_nascimento_p, pc_obter_dt_nascimento(cd_pessoa_fisica_p)),
				nr_seq_person_name_w,
				cd_procedencia_p
			);

    		select	nextval('agenda_integrada_item_seq')
			into STRICT	nr_seq_ageint_item_p
			;

    		if (cd_tipo_agenda_p in (3, 5) ) then

      			insert into agenda_integrada_item(
          				nr_sequencia ,
          				nr_seq_agenda_int ,
          				dt_atualizacao ,
          				nm_usuario ,
          				dt_atualizacao_nrec ,
          				nm_usuario_nrec ,
          				ie_tipo_agendamento ,
          				cd_medico,
					cd_medico_req,
          				cd_especialidade ,
          				vl_item ,
          				ie_regra ,
          				cd_estabelecimento,
          				nr_seq_agenda_cons,
					ie_origem_agendamento)
        			values (
          				nr_seq_ageint_item_p,
          				nr_seq_agenda_int_w,
          				clock_timestamp(),
          				nm_usuario_p,
          				clock_timestamp(),
          				nm_usuario_p,
          				CASE WHEN cd_tipo_agenda_p=3 THEN  'C'  ELSE 'S' END ,
          				cd_medico_p,
					cd_medico_req_p,
          				cd_especialidade_p,
          				null,
          				null,
          				cd_estabelicimento_p,
          				nr_seq_agenda_p,
					'MS');

    		else
    			insert into agenda_integrada_item(
          				nr_sequencia ,
          				nr_seq_agenda_int ,
          				dt_atualizacao ,
          				nm_usuario ,
          				dt_atualizacao_nrec ,
          				nm_usuario_nrec ,
          				ie_tipo_agendamento ,
          				cd_medico ,
					cd_medico_req,
          				cd_procedimento ,
          				nr_seq_proc_interno ,
          				vl_item ,
          				ie_regra ,
          				nr_seq_agenda_exame,
          				cd_estabelecimento,
          				ie_gestao_exame,
					ie_origem_agendamento)
        			values (
          				nr_seq_ageint_item_p,
          				nr_seq_agenda_int_w,
          				clock_timestamp(),
          				nm_usuario_p,
          				clock_timestamp(),
          				nm_usuario_p,
          				'E',
					cd_medico_p,
          				cd_medico_req_p,
          				cd_procedimento_p,
          				nr_seq_proc_interno_p,
          				null,
          				null,
          				nr_seq_agenda_p,
          				cd_estabelicimento_p,
          				'N',
					'MS');
    		end if;

			commit;
			else
			select	max(nr_sequencia)
			into STRICT	nr_seq_ageint_item_p
			from	agenda_integrada_item
			where	nr_seq_agenda_int = nr_seq_ageint_p;
	end if;

	cd_estabelecimento_w := coalesce(wheb_usuario_pck.get_cd_estabelecimento,1);

	ds_erro_p := gerar_multi_ageint_lib_usuario(nr_seq_ageint_p, cd_estabelecimento_w, cd_estabelecimento_w, null, null, null, nm_usuario_p, 'N', null, null, ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_p), cd_agenda_p, ds_erro_p);


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_ageint_dailycalendar ( cd_agenda_p bigint, nr_seq_agenda_p bigint, nr_seq_ageint_p INOUT bigint, cd_tipo_agenda_p text, dt_agenda_p timestamp, cd_pessoa_fisica_p bigint, cd_convenio_p bigint, cd_estabelicimento_p bigint, nm_usuario_p text, cd_medico_p bigint, cd_especialidade_p bigint default null, cd_procedimento_p bigint default null, nr_seq_proc_interno_p bigint default null, nr_minuto_duracao_p bigint DEFAULT NULL, ds_dado_clinico_p text default null, nr_seq_ageint_item_p INOUT bigint DEFAULT NULL, cd_medico_req_p bigint default null, ds_observacao_p text default null, nm_paciente_p text default null, nr_telefone_p text default null, dt_nascimento_p timestamp default null, cd_procedencia_p bigint default null, ds_erro_p INOUT text DEFAULT NULL) FROM PUBLIC;

