-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_duplicar_atendimento_laudo ( nr_atend_origem_p bigint, nr_seq_int_laudo_p bigint, nm_usuario_p text, nr_atend_novo_p INOUT bigint, ie_tipo_lote_p bigint) AS $body$
DECLARE

 
nr_atend_novo_w			bigint;
nr_seq_interno_w			bigint;
nr_seq_interno_unid_w		bigint;
ie_medico_novo_atend_w		varchar(15) := 'A';
cd_medico_resp_w			varchar(10) := '';
ie_alterar_tp_atend_w		varchar(15) := 'N';


BEGIN 
 
ie_medico_novo_atend_w 	:= coalesce(obter_valor_param_usuario(1006, 29, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'A');
ie_alterar_tp_atend_w 	:= coalesce(obter_valor_param_usuario(1006, 38, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');
 
if (ie_medico_novo_atend_w = 'A') then 
	begin	 
	select	max(cd_medico_resp) 
	into STRICT	cd_medico_resp_w 
	from	atendimento_paciente 
	where	nr_atendimento	= nr_atend_origem_p;
	exception 
	when others then 
		cd_medico_resp_w := '';
	end;
elsif (ie_medico_novo_atend_w = 'L') then 
	begin 
	select	max(cd_medico_requisitante) 
	into STRICT	cd_medico_resp_w 
	from	sus_laudo_paciente 
	where	nr_seq_interno = nr_seq_int_laudo_p;
	exception 
	when others then 
		cd_medico_resp_w := '';
	end;	
end if;
 
select	nextval('atendimento_paciente_seq') 
into STRICT	nr_atend_novo_w
;
 
/* Gerar atendimento novo */
 
insert	into atendimento_paciente(nr_atendimento,	cd_pessoa_fisica,	cd_estabelecimento, 
	cd_procedencia,		dt_entrada,		 
	ie_tipo_atendimento, 
	dt_atualizacao,		nm_usuario,		cd_medico_resp, 
	cd_motivo_alta,		ds_sintoma_paciente,	ds_observacao, 
	dt_alta, 		ie_clinica, 		nm_usuario_atend, 
	ie_responsavel,		dt_fim_conta,		ie_fim_conta, 
	nr_cat,			ds_causa_externa,	cd_cgc_seguradora, 
	nr_bilhete, 		nr_serie_bilhete, 	ie_carater_inter_sus, 
	ie_vinculo_sus, 	ie_tipo_convenio, 	ie_tipo_atend_bpa, 
	ie_grupo_atend_bpa,	cd_medico_atendimento, 	dt_alta_interno, 
	nr_seq_unid_atual, 	nr_seq_unid_int,	nr_atend_original, 
	qt_dia_longa_perm, 	dt_inicio_atendimento, 	ie_permite_visita, 
	ie_status_atendimento, 	dt_previsto_alta, 	nm_usuario_alta, 
	cd_pessoa_responsavel,	dt_atend_medico, 	dt_saida_real, 
	ie_clinica_alta, 	dt_fim_consulta,	dt_medicacao, 
	dt_lib_medico, 		nr_seq_regra_funcao, 	nr_seq_local_pa, 
	nr_seq_tipo_acidente, 	dt_ocorrencia, 		ds_pend_autorizacao, 
	nr_seq_check_list,	dt_fim_triagem, 	nr_reserva_leito, 
	ie_paciente_isolado, 	ie_permite_visita_rel,	nr_seq_classificacao, 
	ie_tipo_atend_tiss,	nr_seq_indicacao,	nr_seq_forma_chegada) 
SELECT	nr_atend_novo_w, 	cd_pessoa_fisica, 	cd_estabelecimento, 
	cd_procedencia,		clock_timestamp(), 		 
	CASE WHEN ie_alterar_tp_atend_w='N' THEN ie_tipo_atendimento  ELSE CASE WHEN coalesce(ie_tipo_lote_p,ie_tipo_atendimento)=1 THEN 1  ELSE 8 END  END , 
	clock_timestamp(), 		nm_usuario_p,		cd_medico_resp_w, 
	null, 			ds_sintoma_paciente, 	wheb_mensagem_pck.get_texto(693007) || substr(ds_observacao,1,180), 
	null, 			ie_clinica, 		null, 
	ie_responsavel,		null, 			null, 
	nr_cat,			ds_causa_externa,	cd_cgc_seguradora, 
	nr_bilhete, 		nr_serie_bilhete, 	ie_carater_inter_sus, 
	ie_vinculo_sus, 	ie_tipo_convenio, 	ie_tipo_atend_bpa, 
	ie_grupo_atend_bpa,	cd_medico_atendimento, 	null, 
	nr_seq_unid_atual, 	nr_seq_unid_int,	null, 
	qt_dia_longa_perm, 	clock_timestamp(), 		ie_permite_visita, 
	ie_status_atendimento, 	null, 			null, 
	cd_pessoa_responsavel,	null, 			null, 
	ie_clinica_alta,	null,			null, 
	null, 			nr_seq_regra_funcao, 	nr_seq_local_pa, 
	nr_seq_tipo_acidente, 	null, 			ds_pend_autorizacao, 
	nr_seq_check_list,	null, 			nr_reserva_leito, 
	coalesce(ie_paciente_isolado,'N'), 	ie_permite_visita_rel,	nr_seq_classificacao, 
	ie_tipo_atend_tiss,	nr_seq_indicacao,	nr_seq_forma_chegada 
from	atendimento_paciente 
where	nr_atendimento	= nr_atend_origem_p;
 
/* gerar atend_categoria_convenio novo */
 
select	max(nr_seq_interno) 
into STRICT	nr_seq_interno_w 
from	atend_categoria_convenio 
where	nr_atendimento	= nr_atend_origem_p;
 
insert	into Atend_Categoria_Convenio(nr_atendimento,	cd_convenio,		cd_categoria, 
	dt_inicio_vigencia,	dt_final_vigencia, 	dt_atualizacao, 
	nm_usuario, 		cd_usuario_convenio,	cd_empresa, 
	nr_doc_convenio,	cd_tipo_acomodacao,	ie_tipo_guia, 
	cd_plano_convenio,	nr_seq_interno) 
SELECT	nr_atend_novo_w,	cd_convenio, 		cd_categoria, 
	clock_timestamp(),		null, 			clock_timestamp(), 
	nm_usuario_p, 		cd_usuario_convenio,	cd_empresa, 
	nr_doc_convenio, 	cd_tipo_acomodacao, 	ie_tipo_guia, 
	cd_plano_convenio,	nextval('atend_categoria_convenio_seq') 
from	atend_categoria_convenio 
where	nr_seq_interno	= nr_seq_interno_w;
 
begin 
select	min(a.nr_seq_interno) 
into STRICT	nr_seq_interno_unid_w 
from	setor_atendimento b, 
	atend_paciente_unidade a 
where	a.nr_atendimento	= nr_atend_origem_p 
and	a.cd_setor_atendimento	= b.cd_setor_atendimento 
and	b.cd_classif_setor not in (3,4);
exception 
when others then 
	nr_seq_interno_unid_w	:= null;
end;
 
if (nr_seq_interno_unid_w IS NOT NULL AND nr_seq_interno_unid_w::text <> '') then 
	insert into atend_paciente_unidade( 
		nr_atendimento,     
		nr_sequencia, 
		cd_setor_atendimento, 
		cd_unidade_basica, 
		cd_unidade_compl, 
		dt_entrada_unidade, 
		dt_atualizacao, 
		nm_usuario, 
		cd_tipo_acomodacao, 
		dt_saida_unidade, 
		nr_atend_dia, 
		ds_observacao, 
		nm_usuario_original, 
		dt_saida_interno, 
		ie_passagem_setor, 
		nr_acompanhante, 
		nr_seq_interno, 
		ie_calcular_dif_diaria) 
	SELECT	nr_atend_novo_w, 
		1, 
		cd_setor_atendimento, 
		cd_unidade_basica, 
		cd_unidade_compl, 
		clock_timestamp(), 
		clock_timestamp(), 
		nm_usuario_p, 
		cd_tipo_acomodacao, 
		null, 
		null, 
		null, 
		nm_usuario_p, 
		null, 
		'N', 
		null, 
		nextval('atend_paciente_unidade_seq'), 
		'S' 
	from	atend_paciente_unidade 
	where	nr_seq_interno	= nr_seq_interno_unid_w;
end if;
 
nr_atend_novo_p	:= nr_atend_novo_w;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_duplicar_atendimento_laudo ( nr_atend_origem_p bigint, nr_seq_int_laudo_p bigint, nm_usuario_p text, nr_atend_novo_p INOUT bigint, ie_tipo_lote_p bigint) FROM PUBLIC;

