-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_cons_usu_exec ( nr_seq_ordem_p bigint, nr_seq_estagio_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_exec_w		bigint;
dt_fim_execucao_w		timestamp;
qt_registro_w		integer;
nm_usuario_exec_w	varchar(15);
ie_consistir_w		varchar(1);
qt_os_w			bigint;

C01 CURSOR FOR
SELECT	nm_usuario_exec,
	coalesce(b.ie_consistir,'N')
from	man_estagio_processo a,
	man_estagio_usuario_exec b
where 	a.nr_sequencia = b.nr_seq_estagio
and	a.nr_sequencia = nr_seq_estagio_p
and	coalesce(b.ie_situacao,'A') = 'A';


BEGIN
if (nr_seq_ordem_p IS NOT NULL AND nr_seq_ordem_p::text <> '') and (nr_seq_estagio_p IS NOT NULL AND nr_seq_estagio_p::text <> '') then
	begin
	select	count(*)
	into STRICT	qt_registro_w
	from	man_ordem_servico_exec b
	where	b.nr_seq_ordem = nr_seq_ordem_p
	and	coalesce(b.dt_fim_execucao::text, '') = ''
	and	b.nm_usuario_exec in (	SELECT	c.nm_usuario_exec
					from	man_estagio_usuario_exec c
					where	c.nr_seq_estagio = nr_seq_estagio_p);

	if (qt_registro_w > 0) then
		select	nr_sequencia,
			dt_fim_execucao
		into STRICT	nr_seq_exec_w,
			dt_fim_execucao_w
		from	man_ordem_servico_exec
		where	nr_sequencia = (SELECT	max(b.nr_sequencia)
					from	man_ordem_servico_exec b
					where	b.nr_seq_ordem = nr_seq_ordem_p
					and	coalesce(b.dt_fim_execucao::text, '') = ''
					and	b.nm_usuario_exec in (	select	nm_usuario_exec
									from	man_estagio_usuario_exec c
									where	c.nr_seq_estagio = nr_seq_estagio_p));
	end if;

	if (qt_registro_w = 0) then
		begin
		select	count(*)
		into STRICT	qt_registro_w
		from	man_ordem_servico_exec b
		where	b.nr_seq_ordem = nr_seq_ordem_p
		and	b.nm_usuario_exec in (	SELECT	nm_usuario_exec
						from	man_estagio_usuario_exec c
						where	c.nr_seq_estagio = nr_seq_estagio_p);

		if (qt_registro_w > 0) then
			select	nr_sequencia,
				dt_fim_execucao
			into STRICT	nr_seq_exec_w,
				dt_fim_execucao_w
			from	man_ordem_servico_exec
			where	nr_sequencia = (SELECT	max(b.nr_sequencia)
						from	man_ordem_servico_exec b
						where	b.nr_seq_ordem = nr_seq_ordem_p
						and	b.nm_usuario_exec in (	select	nm_usuario_exec
									from	man_estagio_usuario_exec c
									where	c.nr_seq_estagio = nr_seq_estagio_p));

		end if;
		end;
	end if;

	if (nr_seq_exec_w IS NOT NULL AND nr_seq_exec_w::text <> '') and (dt_fim_execucao_w IS NOT NULL AND dt_fim_execucao_w::text <> '') then
		begin
		update	man_ordem_servico_exec
		set	dt_fim_execucao  = NULL
		where	nr_sequencia	= nr_seq_exec_w;
		end;
	end if;

	/*adicionado pois é chamado no beforepost e estava dando erro quando não informava função*/

	select	count(1)
	into STRICT	qt_os_w
	from	man_ordem_servico
	where	nr_sequencia = nr_seq_ordem_p;
	/*fim alteração*/

	if (coalesce(nr_seq_exec_w::text, '') = '') and (qt_os_w > 0) then		/*garantir que a OS está gravada, senão dá erro de FK*/
		begin
		open C01;
		loop
		fetch C01 into
			nm_usuario_exec_w,
			ie_consistir_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			if (ie_consistir_w = 'S') then
				CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(250677,'NM_USUARIO_P=' || nm_usuario_exec_w);
			end if;

			insert into man_ordem_servico_exec(
				nr_sequencia,
				nr_seq_ordem,
				dt_atualizacao,
				nm_usuario,
				nm_usuario_exec,
				dt_atualizacao_nrec,
				nm_usuario_nrec)
			values (	nextval('man_ordem_servico_exec_seq'),
				nr_seq_ordem_p,
				clock_timestamp(),
				nm_usuario_p,
				nm_usuario_exec_w,
				clock_timestamp(),
				nm_usuario_p);
			end;
		end loop;
		close C01;
		end;
	end if;
	end;

commit;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_cons_usu_exec ( nr_seq_ordem_p bigint, nr_seq_estagio_p bigint, nm_usuario_p text) FROM PUBLIC;

