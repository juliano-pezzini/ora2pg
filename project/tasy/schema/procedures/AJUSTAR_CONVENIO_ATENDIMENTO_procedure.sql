-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ajustar_convenio_atendimento (nr_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_atualizacao_w        timestamp := clock_timestamp();
cd_convenio_w           numeric(5,0);
cd_categoria_w          varchar(10);
dt_inicio_vigencia_w    timestamp;
dt_final_vigencia_w     timestamp;
nr_interno_conta_w      numeric(10);
ie_considera_vigencia_w	varchar(15) := 'N';
ie_permite_tiss_w	varchar(2) := 'N';

c01 CURSOR FOR
	SELECT 	cd_convenio,
		cd_categoria,
             		dt_inicio_vigencia,
             		coalesce(dt_final_vigencia,clock_timestamp())
	from 	atend_categoria_convenio
	where 	nr_atendimento     = nr_atendimento_p;

c02 CURSOR FOR
	SELECT 	nr_interno_conta
	from 	conta_paciente
	where 	nr_atendimento     = nr_atendimento_p
	and	ie_status_acerto   = 1
	and	((coalesce(ie_considera_vigencia_w,'N') = 'S') or (dt_periodo_inicial between dt_inicio_vigencia_w and dt_final_vigencia_w));


BEGIN


begin
ie_considera_vigencia_w := obter_param_usuario(-2008, 6, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.Get_cd_estabelecimento, ie_considera_vigencia_w);
ie_permite_tiss_w := obter_param_usuario(-2008, 7, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.Get_cd_estabelecimento, ie_permite_tiss_w);
exception
when others then
	ie_considera_vigencia_w := 'N';
end;

open c01;
loop
   fetch c01 into
             	cd_convenio_w,
	cd_categoria_w,
             	dt_inicio_vigencia_w,
             	dt_final_vigencia_w;
    if c01%found then
	begin

	update	procedimento_paciente
	set	cd_convenio        = cd_convenio_w,
		cd_categoria       = cd_categoria_w
	where	nr_atendimento     = nr_atendimento_p
	and	coalesce(nr_interno_conta::text, '') = ''
	and	((coalesce(ie_considera_vigencia_w,'N') = 'S') or (dt_procedimento between dt_inicio_vigencia_w  and dt_final_vigencia_w));

	commit;

	update	material_atend_paciente
	set	cd_convenio        = cd_convenio_w,
		cd_categoria       = cd_categoria_w
	where	nr_atendimento     = nr_atendimento_p
	and	coalesce(nr_interno_conta::text, '') = ''
	and	((coalesce(ie_considera_vigencia_w,'N') = 'S') or (dt_atendimento  between dt_inicio_vigencia_w  and dt_final_vigencia_w));

	commit;

	update	autorizacao_convenio
	set	cd_convenio        = cd_convenio_w
	where	nr_atendimento     = nr_atendimento_p
	and	((coalesce(ie_considera_vigencia_w,'N') = 'S') or (dt_inicio_vigencia between dt_inicio_vigencia_w    and dt_final_vigencia_w));

	commit;

	update 	cirurgia
	set	cd_convenio        = cd_convenio_w
	where	nr_atendimento     = nr_atendimento_p
	and	((coalesce(ie_considera_vigencia_w,'N') = 'S') or (coalesce(dt_inicio_real,dt_inicio_prevista) between dt_inicio_vigencia_w and dt_final_vigencia_w));

	commit;

	open c02;
	loop
		fetch c02 into nr_interno_conta_w;
		if 	c02%found then
       			begin
       			update	conta_paciente
          		   	set 	cd_convenio_parametro 	= cd_convenio_w,
				cd_categoria_parametro	= cd_categoria_w,
				cd_convenio_calculo	= cd_convenio_w,
				cd_categoria_calculo	= cd_categoria_w
			where	nr_interno_conta     	= nr_interno_conta_w;
			commit;

			update	procedimento_paciente
			set	cd_convenio        = cd_convenio_w,
				cd_categoria       = cd_categoria_w
			where	nr_atendimento     = nr_atendimento_p
			and	nr_interno_conta   = nr_interno_conta_w
			and	((coalesce(ie_considera_vigencia_w,'N') = 'S') or (dt_procedimento between dt_inicio_vigencia_w  and dt_final_vigencia_w));

			commit;

			update	material_atend_paciente
			set	cd_convenio        = cd_convenio_w,
				cd_categoria       = cd_categoria_w
			where	nr_atendimento     = nr_atendimento_p
			and	nr_interno_conta   = nr_interno_conta_w
			and	((coalesce(ie_considera_vigencia_w,'N') = 'S') or (dt_atendimento  between dt_inicio_vigencia_w  and dt_final_vigencia_w));

			commit;

			CALL recalcular_conta_paciente(nr_interno_conta_w,nm_usuario_p);
			end;
		else
       			exit;
		end if;
	end loop;
	close c02;
	end;
    else
       exit;
    end if;
    if (coalesce(ie_permite_tiss_w,'N') = 'S') then
	CALL tiss_atualizar_prot_conta(null, nr_interno_conta_w, nr_atendimento_p, null, 'N', wheb_usuario_pck.Get_cd_estabelecimento, nm_usuario_p);
    end if;
end loop;
close c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ajustar_convenio_atendimento (nr_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

