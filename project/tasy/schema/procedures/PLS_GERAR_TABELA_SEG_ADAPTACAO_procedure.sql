-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_tabela_seg_adaptacao ( nr_seq_segurado_p bigint, nr_seq_tabela_ant_p bigint, nr_seq_tabela_nova_p bigint, nr_seq_plano_p bigint, nr_seq_proposta_p bigint, nm_usuario_p text) AS $body$
DECLARE


nm_beneficiario_w	varchar(255);
vl_parametro_w		varchar(2);
ie_reajuste_w		varchar(1);
vl_preco_atual_w	double precision;
vl_adaptacao_w		double precision;
tx_adaptacao_w		double precision;
qt_faixa_etaria_w	bigint;
nr_seq_preco_w		bigint;
qt_idade_inicial_w	bigint;
nr_seq_contrato_w	bigint;
nr_seq_tabela_w		bigint;
cd_estabelecimento_w	bigint;
dt_inicio_proposta_w	timestamp;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		qt_idade_inicial,
		vl_preco_atual
	from	pls_plano_preco
	where	nr_seq_tabela = nr_seq_tabela_ant_p
	order by
		qt_idade_inicial;


BEGIN

select	nr_seq_contrato,
	nr_seq_tabela,
	cd_estabelecimento,
	obter_nome_pf(cd_pessoa_fisica)
into STRICT	nr_seq_contrato_w,
	nr_seq_tabela_w,
	cd_estabelecimento_w,
	nm_beneficiario_w
from	pls_segurado
where	nr_sequencia = nr_seq_segurado_p;

select	max(dt_inicio_proposta)
into STRICT	dt_inicio_proposta_w
from	pls_proposta_adesao
where	nr_sequencia	= nr_seq_proposta_p;

select	max(tx_adaptacao)
into STRICT	tx_adaptacao_w
from	pls_regra_adaptacao_plano
where	cd_estabelecimento	= cd_estabelecimento_w
and	dt_inicio_proposta_w between dt_inicio_vigencia and fim_dia(coalesce(dt_fim_vigencia,dt_inicio_proposta_w))
and	((coalesce(nr_seq_grupo_produto::text, '') = '') or (nr_seq_grupo_produto IS NOT NULL AND nr_seq_grupo_produto::text <> '') and (pls_se_grupo_preco_produto(nr_seq_grupo_produto,nr_seq_plano_p)) = 'S');

insert into pls_tabela_preco(nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	nm_tabela,
	dt_inicio_vigencia,
	nr_seq_plano,
	cd_codigo_ant,
	ie_tabela_base,
	nr_seq_tabela_origem,
	nr_segurado,
	nr_contrato,
	dt_liberacao,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	dt_fim_vigencia,
	ie_tabela_contrato,
	ie_proposta_adesao,
	ie_simulacao_preco,
	nr_seq_sca,
	nr_seq_tabela_ant,
	nr_seq_proposta,
	nr_seq_faixa_etaria,
	nr_seq_contrato_inter,
	nr_seq_tabela_original,
	nr_seq_contrato_repasse,
	nr_seq_simul_perfil,
	nr_seq_simulacao_preco,
	nr_seq_tabela_simul_orig,
	ie_preco_vidas_contrato,
	ie_calculo_vidas,
	tx_adaptacao,
	nr_seq_tabela_interc)
SELECT	nr_seq_tabela_nova_p,
	clock_timestamp(),
	nm_usuario_p,
	wheb_mensagem_pck.get_texto(1183284,'NR_SEQ_SEGURADO='||nr_seq_segurado_p||';NM_BENEFICIARIO='||nm_beneficiario_w),
	dt_inicio_vigencia,
	nr_seq_plano_p,
	cd_codigo_ant,
	'N',
	nr_sequencia,
	nr_seq_segurado_p,
	nr_seq_contrato_w,
	clock_timestamp(),
	clock_timestamp(),
	nm_usuario_p,
	dt_fim_vigencia,
	ie_tabela_contrato,
	ie_proposta_adesao,
	ie_simulacao_preco,
	nr_seq_sca,
	nr_seq_tabela_ant,
	nr_seq_proposta,
	nr_seq_faixa_etaria,
	nr_seq_contrato_inter,
	nr_seq_tabela_original,
	nr_seq_contrato_repasse,
	nr_seq_simul_perfil,
	nr_seq_simulacao_preco,
	nr_seq_tabela_simul_orig,
	ie_preco_vidas_contrato,
	ie_calculo_vidas,
	coalesce(tx_adaptacao_w,0),
	nr_seq_tabela_interc
from	pls_tabela_preco
where	nr_sequencia = nr_seq_tabela_ant_p;

select	count(1)
into STRICT	qt_faixa_etaria_w
from	pls_plano_preco
where	nr_seq_tabela = nr_seq_tabela_ant_p  LIMIT 1;

if (qt_faixa_etaria_w > 0) then
	open C01;
	loop
	fetch C01 into
		nr_seq_preco_w,
		qt_idade_inicial_w,
		vl_preco_atual_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (tx_adaptacao_w IS NOT NULL AND tx_adaptacao_w::text <> '') then
			vl_adaptacao_w	:= dividir((vl_preco_atual_w * tx_adaptacao_w), 100);
		else
			vl_adaptacao_w	:= 0;
		end if;
		
		insert into pls_plano_preco(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_tabela,
			qt_idade_inicial,
			qt_idade_final,
			vl_preco_inicial,
			vl_preco_atual,
			tx_acrescimo,
			ie_grau_titularidade,
			qt_vidas_inicial,
			qt_vidas_final,
			vl_adaptacao,
			vl_preco_nao_subsidiado,
			vl_preco_nao_subsid_atual,
			vl_minimo,
			ie_manutencao_preco)
		SELECT	nextval('pls_plano_preco_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_tabela_nova_p,
			qt_idade_inicial,
			qt_idade_final,
			vl_preco_atual,
			vl_preco_atual,
			0,
			ie_grau_titularidade,
			qt_vidas_inicial,
			qt_vidas_final,
			vl_adaptacao_w,
			vl_preco_nao_subsidiado,
			vl_preco_nao_subsid_atual,
			vl_minimo,
			ie_manutencao_preco
		from	pls_plano_preco
		where	nr_sequencia = nr_seq_preco_w;
		end;
	end loop;
	close C01;
end if;

update	pls_segurado
set	nr_seq_tabela		= nr_seq_tabela_nova_p,
	nr_seq_tabela_origem	= nr_seq_tabela_ant_p
where	nr_sequencia		= nr_seq_segurado_p;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_tabela_seg_adaptacao ( nr_seq_segurado_p bigint, nr_seq_tabela_ant_p bigint, nr_seq_tabela_nova_p bigint, nr_seq_plano_p bigint, nr_seq_proposta_p bigint, nm_usuario_p text) FROM PUBLIC;

