-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE recebe_lote_prescr_integracao ( cd_acao_p text, nr_seq_lote_p bigint, cd_material_p bigint, qt_material_p bigint, cd_fornecedor_p text, cd_barras_p text default null, ds_erro_p INOUT text DEFAULT NULL) AS $body$
DECLARE


qt_material_w			double precision;
qt_devolvida_w			double precision;
cd_acao_w			varchar(1) := '1';
cd_fornec_consignado_w		varchar(14);
cd_setor_atendimento_w		integer;
ie_cobra_paciente_w		varchar(1);
cd_unidade_medida_w		varchar(30);
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
nr_doc_convenio_w		varchar(20);
ie_tipo_guia_w			varchar(2);
cd_senha_w			varchar(20);
dt_entrada_unidade_w		timestamp;
cd_centro_custo_w			integer;
cd_conta_contabil_w		varchar(20);
cd_operacao_estoque_w		smallint;
nr_seq_atepacu_w			bigint;
ie_consignado_w			varchar(1);
ie_atualizar_consig_w		varchar(1);
ds_erro_w			varchar(255);
ds_erro_barras_w			varchar(255);
nr_sequencia_w			bigint;

/* parâmetros converte_codigo_barras */

cd_material_w			integer;
nr_seq_lote_w			bigint;
nr_seq_lote_agrup_w		bigint;
cd_kit_mat_w			bigint;
ds_validade_w			varchar(255);
ds_material_w			varchar(255);
cd_unid_med_w			varchar(30);
nr_etiqueta_lp_w			varchar(255);
/* parâmetros converte_codigo_barras */

nr_seq_tipo_baixa_w		bigint;
qt_total_dispensar_item_w		bigint;
qt_total_item_conta_w		bigint;
qt_existe_w			bigint;
cd_motivo_baixa_int_w		smallint;
ie_atualiza_estoque_w		tipo_baixa_prescricao.ie_atualiza_estoque%type;
ie_conta_paciente_w		tipo_baixa_prescricao.ie_conta_paciente%type;
cd_local_estoque_w		local_estoque.cd_local_estoque%type;
cd_local_estoque_lote_w		local_estoque.cd_local_estoque%type;
nr_atendimento_w			atendimento_paciente.nr_atendimento%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
qt_material_ww			double precision;
nr_prescricao_w			prescr_material.nr_prescricao%type;
nr_seq_mat_hor_w			prescr_mat_hor.nr_sequencia%type;
nr_seq_material_w			prescr_material.nr_sequencia%type;
ie_status_lote_w			ap_lote.ie_status_lote%type;


BEGIN
begin

select	nr_prescricao,
	cd_local_estoque,
	ie_status_lote
into STRICT	nr_prescricao_w,
	cd_local_estoque_lote_w,
	ie_status_lote_w
from	ap_lote
where	nr_sequencia = nr_seq_lote_p;

if (ie_status_lote_w = 'A') then
	--Esse lote já foi atendido
	ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(277911);
	goto Final;
end if;

if (coalesce(cd_local_estoque_lote_w::text, '') = '') then
	--Local de estoque não informado!
	ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(135907);
	goto Final;
end if;

select	max(nr_seq_mat_hor)
into STRICT	nr_seq_mat_hor_w
from	ap_lote_item
where	nr_seq_lote = nr_seq_lote_p
and		cd_material = cd_material_p;

select	nr_seq_material
into STRICT	nr_seq_material_w
from	prescr_mat_hor
where	nr_sequencia = nr_seq_mat_hor_w;

cd_local_estoque_w := cd_local_estoque_lote_w;
cd_material_w := cd_material_p;

if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then

	select	coalesce(max(cd_tipo_baixa),0),
		coalesce(max(cd_setor_atendimento),0)
	into STRICT	cd_motivo_baixa_int_w,
		cd_setor_atendimento_w
	from	ap_lote
	where	nr_sequencia = nr_seq_lote_p;

	select	coalesce(max(nr_atendimento),0)
	into STRICT	nr_atendimento_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_w;

elsif (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then

	select	coalesce(max(cd_setor_atendimento),0),
		coalesce(max(nr_atendimento),0),
		coalesce(max(cd_estabelecimento),0)
	into STRICT	cd_setor_atendimento_w,
		nr_atendimento_w,
		cd_estabelecimento_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_w;
end if;

if (coalesce(cd_setor_atendimento_w,0) = 0) and (coalesce(nr_atendimento_w,0) > 0) then
	cd_setor_atendimento_w := obter_setor_atendimento(nr_atendimento_w);
elsif (coalesce(cd_setor_atendimento_w,0) = 0) then
	-- 'Não encontrado setor de atendimento para o local de estoque!';
	ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(278817);
	goto Final;
end if;

qt_material_w := qt_material_p;

if (cd_acao_p = 'I') then
	cd_acao_w := '1';
elsif (cd_acao_p = 'E') then
	cd_acao_w := '2';
end if;

if (qt_material_w = 0) then
	-- 'Quantidade de contagem igual ao saldo em estoque!',1,255);
	ds_erro_w := substr(WHEB_MENSAGEM_PCK.get_texto(278822),1,255);
	goto Final;
end if;

if (cd_barras_p IS NOT NULL AND cd_barras_p::text <> '') then
	SELECT * FROM converte_codigo_barras(	cd_barras_p, cd_estabelecimento_w, null, 'N', cd_material_w, qt_material_ww, nr_seq_lote_w, nr_seq_lote_agrup_w, cd_kit_mat_w, ds_validade_w, ds_material_w, cd_unid_med_w, nr_etiqueta_lp_w, ds_erro_barras_w) INTO STRICT cd_material_w, qt_material_ww, nr_seq_lote_w, nr_seq_lote_agrup_w, cd_kit_mat_w, ds_validade_w, ds_material_w, cd_unid_med_w, nr_etiqueta_lp_w, ds_erro_barras_w;
end if;

if (ds_erro_barras_w IS NOT NULL AND ds_erro_barras_w::text <> '') then
	ds_erro_w := ds_erro_barras_w;
end if;

begin
select	cd_unidade_medida_estoque,
	ie_cobra_paciente,
	coalesce(ie_consignado,'0')
into STRICT	cd_unidade_medida_w,
	ie_cobra_paciente_w,
	ie_consignado_w
from	material
where	cd_material = cd_material_w;
exception
when others then
	-- 'Não encontrado cadastro do material no Tasy!';
	ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(278819);
	goto Final;
end;

if (ie_consignado_w <> '0') and (cd_fornecedor_p IS NOT NULL AND cd_fornecedor_p::text <> '') then
	begin
	ie_atualizar_consig_w := 'S';

	begin
	select	cd_cgc
	into STRICT	cd_fornec_consignado_w
	from	pessoa_juridica
	where	cd_cgc = cd_fornecedor_p;
	exception
	when others then
		-- 'Não encontrado cadastro do fornecedor no Tasy! CGC: ' || cd_fornecedor_p,1,255);
		ds_erro_w := substr(WHEB_MENSAGEM_PCK.get_texto(278821) || cd_fornecedor_p,1,255);
		goto Final;
	end;
	end;
else
	begin
	ie_atualizar_consig_w := 'N';
	cd_fornec_consignado_w := null;
	end;
end if;

if (coalesce(ds_erro_w::text, '') = '') then
	begin
	if (coalesce(nr_atendimento_w,0) > 0) then
		begin

		SELECT * FROM obter_convenio_execucao(nr_atendimento_w, clock_timestamp(), cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w) INTO STRICT cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w;
		nr_seq_atepacu_w := obter_atepacu_paciente(nr_atendimento_w,'A');

		select 	max(a.dt_entrada_unidade)
		into STRICT	dt_entrada_unidade_w
		from	atend_paciente_unidade a
		where	a.nr_seq_interno = nr_seq_atepacu_w;

		if (coalesce(cd_motivo_baixa_int_w,0) > 0) then
			select 	coalesce(max(nr_sequencia),0),
				coalesce(max(ie_atualiza_estoque),'S'),
				coalesce(max(ie_conta_paciente),'S')
			into STRICT	nr_seq_tipo_baixa_w,
				ie_atualiza_estoque_w,
				ie_conta_paciente_w
			from 	tipo_baixa_prescricao
			where	ie_situacao = 'A'
			and 	cd_tipo_baixa = cd_motivo_baixa_int_w
			and 	ie_prescricao_devolucao = 'P';
		else
			select	max(nr_sequencia)
			into STRICT	nr_seq_tipo_baixa_w
			from 	tipo_baixa_prescricao
			where	ie_situacao = 'A'
			and	ie_tipo_padrao = 'S'
			and 	ie_prescricao_devolucao = 'P';

			select 	coalesce(max(ie_atualiza_estoque),'S'),
				coalesce(max(ie_conta_paciente),'S')
			into STRICT	ie_atualiza_estoque_w,
				ie_conta_paciente_w
			from 	tipo_baixa_prescricao
			where	nr_sequencia = nr_seq_tipo_baixa_w;
		end if;

		if (cd_acao_w = 2) then
			begin
			qt_devolvida_w	:= qt_material_w;
			qt_material_w	:= (qt_material_w * -1);

			if (coalesce(cd_motivo_baixa_int_w,0) > 0) then
				select 	coalesce(nr_sequencia,0)
				into STRICT	nr_seq_tipo_baixa_w
				from 	tipo_baixa_prescricao
				where	ie_situacao = 'A'
				and 	cd_tipo_baixa = cd_motivo_baixa_int_w
				and 	ie_prescricao_devolucao = 'D';

				select 	coalesce(ie_atualiza_estoque,'S'),
					coalesce(ie_conta_paciente,'S')
				into STRICT	ie_atualiza_estoque_w,
					ie_conta_paciente_w
				from 	tipo_baixa_prescricao
				where	nr_sequencia = nr_seq_tipo_baixa_w;
			else
				select	max(nr_sequencia)
				into STRICT	nr_seq_tipo_baixa_w
				from 	tipo_baixa_prescricao
				where	ie_situacao = 'A'
				and	ie_tipo_padrao = 'S'
				and 	ie_prescricao_devolucao = 'D';

				select 	coalesce(max(ie_atualiza_estoque),'S'),
					coalesce(max(ie_conta_paciente),'S')
				into STRICT	ie_atualiza_estoque_w,
					ie_conta_paciente_w
				from 	tipo_baixa_prescricao
				where	nr_sequencia = nr_seq_tipo_baixa_w;
			end if;
			end;
		end if;

		if (ie_cobra_paciente_w = 'S') and (ie_conta_paciente_w = 'S') then
			begin

			select	nextval('material_atend_paciente_seq')
			into STRICT	nr_sequencia_w
			;

			insert into material_atend_paciente(
				nr_sequencia,
				nr_atendimento,
				dt_entrada_unidade,
				cd_material,
				dt_atendimento,
				cd_unidade_medida,
				qt_material,
				dt_atualizacao,
				nm_usuario,
				cd_acao,
				cd_setor_atendimento,
				nr_seq_atepacu,
				cd_material_prescricao,
				cd_material_exec,
				ie_via_aplicacao,
				dt_prescricao,
				nr_prescricao,
				nr_sequencia_prescricao,
				cd_cgc_fornecedor,
				qt_executada,
				nr_cirurgia,
				cd_local_estoque,
				vl_unitario,
				qt_ajuste_conta,
				ie_valor_informado,
				ie_guia_informada,
				ie_auditoria,
				nm_usuario_original,
				cd_situacao_glosa,
				cd_convenio,
				cd_categoria,
				nr_doc_convenio,
				ie_tipo_guia,
				nr_seq_lote_fornec,
				cd_senha,
				dt_conta,
				nr_seq_kit_estoque,
				qt_devolvida,
				cd_funcao,
				nr_seq_tipo_baixa,
				nr_seq_lote_ap)
			values (	nr_sequencia_w,
				nr_atendimento_w,
				dt_entrada_unidade_w,
				cd_material_w,
				clock_timestamp(),
				cd_unidade_medida_w,
				qt_material_w,
				clock_timestamp(),
				'Tasy',
				cd_acao_w,
				cd_setor_atendimento_w,
				nr_seq_atepacu_w,
				cd_material_w,
				cd_material_w,
				null,
				null,
				CASE WHEN coalesce(nr_prescricao_w,0)=0 THEN null  ELSE nr_prescricao_w END ,
				CASE WHEN coalesce(nr_seq_material_w,0)=0 THEN null  ELSE nr_seq_material_w END ,
				cd_fornec_consignado_w,
				qt_material_w,
				null,
				cd_local_estoque_w,
				0,
				0,
				'N',
				'N',
				'N',
				'Tasy',
				0,
				cd_convenio_w,
				cd_categoria_w,
				nr_doc_convenio_w,
				ie_tipo_guia_w,
				CASE WHEN coalesce(nr_seq_lote_w,0)=0 THEN null  ELSE nr_seq_lote_w END ,
				cd_senha_w,
				clock_timestamp(),
				null,
				qt_devolvida_w,
				147,
				nr_seq_tipo_baixa_w,
				CASE WHEN coalesce(nr_seq_lote_p,0)=0 THEN null  ELSE nr_seq_lote_p END );

			CALL atualiza_preco_material(nr_sequencia_w,'Tasy');

			if (nr_prescricao_w > 0) and (nr_seq_material_w > 0) then
				select	sum(qt_total_dispensar)
				into STRICT	qt_total_dispensar_item_w
				from	prescr_material
				where	nr_prescricao = nr_prescricao_w
				and	nr_sequencia = nr_seq_material_w;

				select 	sum(qt_material)
				into STRICT	qt_total_item_conta_w
				from 	material_atend_paciente
				where 	nr_atendimento	= nr_atendimento_w
				and 	nr_prescricao	= nr_prescricao_w
				and 	nr_sequencia_prescricao	= nr_seq_material_w;

				select	count(*)
				into STRICT	qt_existe_w
				from	prescr_medica
				where	nr_prescricao = nr_prescricao_w
				and	coalesce(dt_liberacao::text, '') = '';

				-- Baixa o item na prescrição quando a quantidade da conta é maior ou igual a quantidade a ser dispensada.
				if (qt_existe_w = 0) and (qt_total_dispensar_item_w <= qt_total_item_conta_w) then
					update 	prescr_material
					set 	cd_motivo_baixa = cd_motivo_baixa_int_w,
						dt_baixa 	= clock_timestamp(),
						nm_usuario	= 'Tasy'
					where 	nr_prescricao 	= nr_prescricao_w
					and 	nr_sequencia	= nr_seq_material_w;
				end if;
			end if;

			-- Coloca lote como atendido
			if (cd_acao_w = 1) and (coalesce(nr_seq_lote_p,0) > 0) then

				select	count(*)
				into STRICT	qt_existe_w
				from	ap_lote_item
				where	coalesce(dt_controle::text, '') = ''
				and	cd_material = cd_material_w
				and	nr_seq_lote = nr_seq_lote_p;

				if (qt_existe_w > 0) then
					update	ap_lote_item
					set	dt_controle = clock_timestamp(),
						dt_atualizacao = clock_timestamp(),
						nm_usuario = 'Tasy'
					where	nr_seq_lote = nr_seq_lote_p
					and	cd_material = cd_material_w;
				end if;

				select	count(*)
				into STRICT	qt_existe_w
				from	ap_lote_item
				where	nr_seq_lote = nr_seq_lote_p
				and	coalesce(dt_controle::text, '') = ''
				and	ie_prescrito = 'S';

				if (qt_existe_w = 0) then
					update	ap_lote
					set	dt_atend_farmacia = clock_timestamp(),
						nm_usuario_atend = 'Tasy',
						ie_status_lote   = 'A'
					where 	nr_sequencia = nr_seq_lote_p;
				end if;

			end if;

			end;
		elsif (ie_atualiza_estoque_w = 'S') then
			begin
			CALL gerar_prescricao_estoque(
				cd_estabelecimento_w,
				nr_atendimento_w,
				dt_entrada_unidade_w,
				cd_material_w,
				clock_timestamp(),
				cd_acao_w,
				cd_local_estoque_w,
				qt_material_w,
				cd_setor_atendimento_w,
				cd_unidade_medida_w,
				'Tasy',
				'I',
				nr_prescricao_w,
				null,
				null,
				0,
				cd_fornec_consignado_w,
				null,
				nr_seq_lote_w,
				null,
				null,
				nr_seq_lote_p,
				null,
				null,
				null);

			-- Coloca lote como atendido
			if (cd_acao_w = 1) and (coalesce(nr_seq_lote_p,0) > 0) then

				select	count(*)
				into STRICT	qt_existe_w
				from	ap_lote_item
				where	coalesce(dt_controle::text, '') = ''
				and	cd_material = cd_material_w
				and	nr_seq_lote = nr_seq_lote_p;

				if (qt_existe_w > 0) then
					update	ap_lote_item
					set	dt_controle = clock_timestamp(),
						dt_atualizacao = clock_timestamp(),
						nm_usuario = 'Tasy'
					where	nr_seq_lote = nr_seq_lote_p
					and	cd_material = cd_material_w;
				end if;

				select	count(*)
				into STRICT	qt_existe_w
				from	ap_lote_item
				where	nr_seq_lote = nr_seq_lote_p
				and	coalesce(dt_controle::text, '') = ''
				and	ie_prescrito = 'S';

				if (qt_existe_w = 0) then
					update	ap_lote
					set	dt_atend_farmacia = clock_timestamp(),
						nm_usuario_atend = 'Tasy',
						ie_status_lote   = 'A'
					where 	nr_sequencia = nr_seq_lote_p;
				end if;
			end if;
			end;
		end if;
		end;
	else
		begin
		if (ie_atualizar_consig_w = 'N') then
			select	max(cd_operacao_estoque)
			into STRICT	cd_operacao_estoque_w
			from	operacao_estoque
			where	ie_situacao = 'A'
			and	ie_tipo_requisicao = 5
			and	coalesce(ie_consignado,0) = 0
			and	ie_atualiza_estoque = 'S'
			and	ie_entrada_saida = CASE WHEN cd_acao_w='1' THEN 'S'  ELSE 'E' END;
		else
			select	max(cd_operacao_estoque)
			into STRICT	cd_operacao_estoque_w
			from	operacao_estoque
			where	ie_situacao = 'A'
			and	ie_tipo_requisicao = 5
			and	coalesce(ie_consignado,0) = 7
			and	ie_entrada_saida = CASE WHEN cd_acao_w='1' THEN 'S'  ELSE 'E' END;
		end if;

		cd_acao_w := '1';

		select	max(cd_centro_custo)
		into STRICT	cd_centro_custo_w
		from	setor_atendimento
		where	cd_setor_atendimento = cd_setor_atendimento_w;

		SELECT * FROM define_conta_material(
			cd_estabelecimento_w, cd_material_w, '2', null, cd_setor_atendimento_w, null, null, null, null, null, cd_local_estoque_w, null, clock_timestamp(), cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;

		insert into movimento_estoque(
			nr_movimento_estoque,
			cd_estabelecimento,
			cd_local_estoque,
			dt_movimento_estoque,
			cd_operacao_estoque,
			cd_acao,
			cd_material,
			dt_mesano_referencia,
			qt_movimento,
			dt_atualizacao,
			nm_usuario,
			ie_origem_documento,
			nr_documento,
			nr_sequencia_item_docto,
			cd_unidade_medida_estoque,
			cd_setor_atendimento,
			qt_estoque,
			cd_centro_custo,
			cd_unidade_med_mov,
			cd_fornecedor,
			ds_observacao,
			nr_seq_tab_orig,
			nr_seq_lote_fornec,
			cd_lote_fabricacao,
			dt_validade,
			nr_atendimento,
			nr_prescricao,
			nr_receita,
			cd_conta_contabil,
			nr_ordem_compra,
			nr_item_oci,
			nr_lote_ap,
			nr_lote_producao,
			cd_funcao)
		values (	nextval('movimento_estoque_seq'),
			cd_estabelecimento_w,
			cd_local_estoque_w,
			clock_timestamp(),
			cd_operacao_estoque_w,
			'1',
			cd_material_w,
			clock_timestamp(),
			qt_material_w,
			clock_timestamp(),
			'Tasy',
			'3',
			null,
			null,
			cd_unidade_medida_w,
			cd_setor_atendimento_w,
			qt_material_w,
			cd_centro_custo_w,
			cd_unidade_medida_w,
			cd_fornec_consignado_w,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			cd_conta_contabil_w,
			null,
			null,
			null,
			null,
			147);
		end;
	end if;
	end;

end if;

<<Final>>

ds_erro_p := ds_erro_w;

if (coalesce(ds_erro_w::text, '') = '') then
	commit;
end if;

exception
when others then
	ds_erro_p := substr(ds_erro_w||' | '||SQLERRM(SQLSTATE),1,2000);
end;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE recebe_lote_prescr_integracao ( cd_acao_p text, nr_seq_lote_p bigint, cd_material_p bigint, qt_material_p bigint, cd_fornecedor_p text, cd_barras_p text default null, ds_erro_p INOUT text DEFAULT NULL) FROM PUBLIC;

