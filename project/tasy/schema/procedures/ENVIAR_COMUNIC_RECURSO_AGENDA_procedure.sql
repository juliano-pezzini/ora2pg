-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE enviar_comunic_recurso_agenda ( cd_estabelecimento_p bigint, nr_seq_agenda_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_tipo_agenda_w	varchar(40);
dt_agenda_w		varchar(20);
ds_status_w		varchar(200);
ds_local_w		varchar(80);
nm_usuario_agenda_w	varchar(15);
ds_recurso_w		varchar(40);
nm_usuario_pessoa_w	varchar(15);
cd_setor_atendimento_w	integer;
nr_sequencia_w		bigint;
ds_titulo_w		varchar(255):= '';
ie_status_w		varchar(1);
ds_agenda_w		varchar(100);
ds_observacao_w		varchar(2000);
ds_email_w		varchar(2000);
ds_email_remet_w	varchar(2000) := null;
ds_email_setor_w	varchar(2000) := null;
ds_assunto_w		varchar(2000);
ie_enviar_email_w	varchar(1);

c01 CURSOR FOR
	SELECT	substr(obter_desc_tipo_agenda_part(a.nr_seq_tipo),1,40) ds_tipo_agenda,
		to_char(a.dt_agenda,'dd/mm/yyyy hh24:mi:ss') dt_agenda,
		substr(obter_valor_dominio(1089, a.ie_status),1,200) ds_status,
		a.ie_status,
		substr(obter_local_agenda_tasy(a.nr_seq_local),1,80) ds_local,
		a.nm_usuario_agenda,
		c.ds_recurso,
		obter_usuario_pf(c.cd_pessoa_fisica) nm_usuario_pessoa,
		c.cd_setor_atendimento,
		a.ds_agenda,
		a.ds_observacao,
		coalesce(c.ie_enviar_email,'N'),
		substr(obter_mail_pf_concat(c.cd_pessoa_fisica),1,2000)
	from	agenda_tasy a,
		agenda_tasy_recurso b,
		recurso_agenda c
	where	a.nr_sequencia = nr_seq_agenda_p
	and	a.nr_sequencia = b.nr_seq_agenda
	and	b.nr_seq_recurso = c.nr_sequencia
	and	((c.cd_pessoa_fisica IS NOT NULL AND c.cd_pessoa_fisica::text <> '') or (cd_setor_atendimento IS NOT NULL AND cd_setor_atendimento::text <> ''));

c02 CURSOR FOR
	SELECT	distinct
		b.ds_email
	from 	usuario_setor a,
		usuario b
	where	a.nm_usuario 		= b.nm_usuario
	and	substr(obter_se_email_valido(b.ds_email),1,1) = 'S'
	and	a.cd_setor_atendimento 	= cd_setor_atendimento_w;


BEGIN

if (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') and (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then


	select	max(ds_email)
	into STRICT	ds_email_remet_w
	from	usuario
	where	nm_usuario = nm_usuario_p;

	open c01;
	loop
	fetch c01 into
		ds_tipo_agenda_w,
		dt_agenda_w,
		ds_status_w,
		ie_status_w,
		ds_local_w,
		nm_usuario_agenda_w,
		ds_recurso_w,
		nm_usuario_pessoa_w,
		cd_setor_atendimento_w,
		ds_agenda_w,
		ds_observacao_w,
		ie_enviar_email_w,
		ds_email_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

	select	nextval('comunic_interna_seq')
	into STRICT	nr_sequencia_w
	;

	if (ie_status_w = 'C') then
		ds_titulo_w := Wheb_mensagem_pck.get_texto(308109); --'Cancelamento de reservas de recursos para a agenda';
	else
		ds_titulo_w := Wheb_mensagem_pck.get_texto(308110); --'Reservas de recursos para a agenda';
	end if;

	ds_assunto_w	:= 	substr(	Wheb_mensagem_pck.get_texto(308111) || ' ' /*'Assunto: '*/ || ds_agenda_w || chr(10) ||
					Wheb_mensagem_pck.get_texto(308112) || ': ' /*'Usuário agenda: '*/ || nm_usuario_agenda_w	|| chr(10) ||
					Wheb_mensagem_pck.get_texto(308117) || ': ' /*'Tipo agenda: '*/	|| ds_tipo_agenda_w 	|| chr(10) ||
					Wheb_mensagem_pck.get_texto(308118) || ': ' /*'Data agenda: '*/	|| dt_agenda_w		|| chr(10) ||
					Wheb_mensagem_pck.get_texto(308119) || ': ' /*'Status agenda: '*/	|| ds_status_w		|| chr(10) ||
					Wheb_mensagem_pck.get_texto(308120) || ': ' /*'Local: '*/ || ds_local_w		|| chr(10) ||
					Wheb_mensagem_pck.get_texto(308126) || ': ' /*'Recurso: '*/ || ds_recurso_w|| chr(10) ||
					Wheb_mensagem_pck.get_texto(308128) || ': ' /*'Observação: '*/ || ds_observacao_w,1,2000);

	insert	into comunic_interna(
			dt_comunicado,
			ds_titulo,
			ds_comunicado,
			nm_usuario,
			dt_atualizacao,
			ie_geral,
			nm_usuario_destino,
			cd_perfil,
			nr_sequencia,
			ie_gerencial,
			nr_seq_classif,
			ds_perfil_adicional,
			cd_setor_destino,
			cd_estab_destino,
			ds_setor_adicional,
			dt_liberacao,
			ds_grupo)
	values (	clock_timestamp(),
			ds_titulo_w,
			Wheb_mensagem_pck.get_texto(308111) || ' ' /*'Assunto: '*/ || ds_agenda_w || chr(10) ||
			Wheb_mensagem_pck.get_texto(308112) || ': ' /*'Usuário agenda: '*/ || nm_usuario_agenda_w	|| chr(10) ||
			Wheb_mensagem_pck.get_texto(308117) || ': ' /*'Tipo agenda: '*/	|| ds_tipo_agenda_w 	|| chr(10) ||
			Wheb_mensagem_pck.get_texto(308118) || ': ' /*'Data agenda: '*/	|| dt_agenda_w		|| chr(10) ||
			Wheb_mensagem_pck.get_texto(308119) || ': ' /*'Status agenda: '*/	|| ds_status_w		|| chr(10) ||
			Wheb_mensagem_pck.get_texto(308120) || ': ' /*'Local: '*/ || ds_local_w		|| chr(10) ||
			Wheb_mensagem_pck.get_texto(308126) || ': ' /*'Recurso: '*/ || ds_recurso_w|| chr(10) ||
			Wheb_mensagem_pck.get_texto(308128) || ': ' /*'Observação: '*/ || ds_observacao_w,
			nm_usuario_p,
			clock_timestamp(),
			'N',
			nm_usuario_pessoa_w,
			null,
			nr_sequencia_w,
			'N',
			null,
			null,
			null,
			cd_estabelecimento_p,
			cd_setor_atendimento_w || ',',
			clock_timestamp(),
			null);

	if (cd_setor_atendimento_w IS NOT NULL AND cd_setor_atendimento_w::text <> '') then
		open c02;
		loop
		fetch c02 into
			ds_email_setor_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			if (coalesce(ds_email_w::text, '') = '') then
				ds_email_w	:= ds_email_setor_w;
			else
				ds_email_w	:= substr(ds_email_w || ',' || ds_email_setor_w,1,2000);
			end if;
		end loop;
		close c02;
	end if;

	if (ie_enviar_email_w = 'S') and (ds_email_remet_w IS NOT NULL AND ds_email_remet_w::text <> '') and (ds_email_w IS NOT NULL AND ds_email_w::text <> '') then
		CALL enviar_email(ds_titulo_w,ds_assunto_w,ds_email_remet_w,ds_email_w,nm_usuario_p,'B');
	end if;

	end loop;
	close c01;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enviar_comunic_recurso_agenda ( cd_estabelecimento_p bigint, nr_seq_agenda_p bigint, nm_usuario_p text) FROM PUBLIC;

