-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos_prescr_orc AS (nr_seq_procedimento	bigint,
		nr_seq_proc_princ	bigint,
		nr_seq_proc_orc		bigint);


CREATE OR REPLACE PROCEDURE copiar_orcamento_paciente ( nr_orcamento_p bigint, nr_interno_conta_p bigint, nr_orcamento_origem_p bigint, nr_prescricao_p bigint, nm_usuario_p text, cd_setor_atendimento_p bigint, ie_somente_glosados_p text) AS $body$
DECLARE

					
--------------------------------------------------------------------------------------------------------
		
type Vetor_Prescr_Orc is
	table of campos_prescr_orc index by integer;
	
i				integer := 1;
j				integer := 1;
Vetor_Prescr_Orc_w		Vetor_Prescr_Orc;


--------------------------------------------------------------------------------------------------------
nr_sequencia_w				bigint;
cd_procedimento_w			bigint;
ie_origem_proced_w			bigint;
cd_estabelecimento_w		bigint;
qt_procedimento_w			double precision;
vl_procedimento_w			double precision;
vl_medico_w					double precision;
vl_anestesista_w			double precision;
vl_filme_w					double precision;
vl_auxiliares_w				double precision;
vl_custo_operacional_w		double precision;
vl_desconto_w				double precision;
cd_medico_w					varchar(10);
ie_procedimento_principal_w	varchar(1);
qt_dia_internacao_w			smallint;
ie_valor_informado_w		varchar(1);
nr_seq_proc_interno_w		bigint;
cd_material_w				integer;
qt_material_w				double precision;
vl_material_w				double precision;

nr_seq_orc_venc_orig_w		bigint;
nr_seq_orc_venc_dest_w		bigint;
ie_copia_prescr_mat_w		varchar(1);
ie_gerar_lanc_aut_presc_w	varchar(1);
ie_autorizacao_w		varchar(10);

pr_desconto_w			double precision;
ie_copiar_itens_suspensos_w	varchar(1);
nr_seq_procedimento_w		bigint;
nr_seq_proc_princ_w		bigint;
ie_exame_assoc_w		varchar(1);
ie_ok_w				varchar(1) := 'N';
ie_calcula_w			varchar(1) := 'N';

ie_converte_proc_conv_w		varchar(1);
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
cd_plano_w			varchar(10);
cd_tipo_acomodacao_w		integer;
cd_proced_convertido_w		bigint;
ie_origem_proced_convert_w	bigint;
cd_setor_atendimento_w		integer;
dt_orcamento_w			timestamp;
cd_convenio_orig_w		integer;
nr_atendimento_w		bigint;
qt_proc_interno_w		double precision;
nr_seq_exame_w			bigint;
ie_adicional_w			varchar(1);
ds_observacao_orc_proc_w	orcamento_paciente_proc.ds_observacao%type;
ds_observacao_orc_mat_w		orcamento_paciente_mat.ds_observacao%type;
vl_custo_proc_w			orcamento_paciente_proc.vl_custo%type;
vl_custo_mat_w			orcamento_paciente_mat.vl_custo%type;
cd_setor_atend_item_w		setor_atendimento.cd_setor_atendimento%type;
ie_regra_w			orcamento_paciente_proc.ie_regra_plano%type;


c01 CURSOR FOR
SELECT	a.cd_procedimento,
	a.ie_origem_proced,
	a.qt_procedimento,
	a.vl_procedimento,
	a.vl_medico,
	a.vl_anestesista,
	a.vl_filme,
	a.vl_auxiliares,
	a.vl_custo_operacional,
	a.vl_desconto,
	a.cd_medico,
	a.ie_procedimento_principal,
	a.qt_dia_internacao,
	ie_valor_informado,
	a.nr_seq_proc_interno,
	a.pr_desconto,
	a.nr_sequencia nr_seq_procedimento,
	a.nr_seq_proc_princ,
	a.ie_exame_assoc,	
	a.nr_seq_exame,
	a.ie_adicional,
	a.ds_observacao,
	a.vl_custo,
	a.cd_setor_atendimento
	from 	orcamento_paciente_proc a
	where	a.nr_sequencia_orcamento 		=  nr_orcamento_Origem_p
/*OS  273098 comentei a clausula abaixo 273098  - tdpaula 06/11/2010
/*	and	not exists (
		select 1
		from	orcamento_paciente_proc x
		where	x.nr_sequencia_orcamento	=  nr_orcamento_p
		and	x.cd_procedimento		= a.cd_procedimento
		and	x.ie_origem_proced		= a.ie_origem_proced)*/
		

union all

select	a.cd_procedimento,
	a.ie_origem_proced,  
	sum(a.qt_procedimento),   
	sum(a.vl_procedimento),   
	sum(a.vl_medico),    
	sum(a.vl_anestesista),    
	0, 
	sum(a.vl_auxiliares),  
	sum(a.vl_custo_operacional), 
	0, 
	null,      
	max(a.ie_proc_princ_atend), 
	0,
	'N',
	a.nr_seq_proc_interno,
	0,
	null nr_seq_procedimento,
	null nr_seq_proc_princ,
	null ie_exame_assoc,	
	a.nr_seq_exame,
	null,
	null,
	null,
	null
from	procedimento_paciente a     
where	a.nr_interno_conta 				=  nr_interno_conta_p
and	coalesce(a.cd_setor_atendimento,0)			= coalesce(cd_setor_atendimento_p, coalesce(a.cd_setor_atendimento,0))
/*OS  273098 comentei a clausula abaixo 273098  - tdpaula 06/11/2010
	and	not exists (
		select 1 
		from	orcamento_paciente_proc x 
		where	x.nr_sequencia_orcamento	=  nr_orcamento_p
		and	x.cd_procedimento			= a.cd_procedimento 
		and	x.ie_origem_proced		= a.ie_origem_proced)*/
group by a.cd_procedimento, a.ie_origem_proced, a.nr_seq_proc_interno, a.nr_seq_exame

union all

select	b.cd_procedimento,   
	b.ie_origem_proced,  
	b.qt_procedimento,     -- Almir em 10/11/2008 OS115759     -     Alterei de   1    para     b.qt_procedimento
	0,   
	0,    
	0,    
	0, 
	0,  
	0, 
	0, 
	a.cd_medico,      
	'N', 
	0,
	'N',
	b.nr_seq_proc_interno,
	0,
	coalesce(b.nr_seq_interno,0) nr_seq_procedimento,
	b.nr_seq_proc_princ,
	b.ie_exame_assoc,
	b.nr_seq_exame,
	null,
	null,
	null,
	null
from	prescr_medica a, prescr_procedimento b    
where	a.nr_prescricao		= b.nr_prescricao
and	a.nr_prescricao 	=  nr_prescricao_p
and	coalesce(nr_prescricao_p,0) > 0
and	((ie_copiar_itens_suspensos_w = 'S') or (coalesce(b.ie_suspenso,'N') <> 'S'))
and	((coalesce(ie_somente_glosados_p,'N') = 'N') or (exists (	select	1
								from	prescr_medica_erro x
								where	x.nr_prescricao = b.nr_prescricao
								and	x.nr_seq_proced = b.nr_sequencia
								and	x.nr_regra in (66,67))))
order by	17;
/*OS  273098 comentei a clausula abaixo 273098  - tdpaula 06/11/2010
	and	not exists (
		select 1 
		from	orcamento_paciente_proc x 
		where	x.nr_sequencia_orcamento	=  nr_orcamento_p
		and	x.cd_procedimento		= b.cd_procedimento 
		and	x.ie_origem_proced		= b.ie_origem_proced);*/
/*Comentei a linha abaixo, OS 73810 */

/*group by b.cd_procedimento, b.ie_origem_proced, a.cd_medico, b.nr_seq_proc_interno;*/

C03 CURSOR FOR
	SELECT  a.cd_material,
		a.qt_material,
		a.vl_material,
		a.vl_desconto ,
		ie_valor_informado,
		a.ie_adicional,
		a.ds_observacao,
		a.vl_custo,
		a.cd_setor_atendimento
	from	orcamento_paciente_mat a
	where	a.nr_sequencia_orcamento 	=  nr_orcamento_origem_p
/*OS  273098 comentei a clausula abaixo 273098  - tdpaula 06/11/2010	
	and	not exists (
		select 1 
		from orcamento_paciente_mat x 
		where x.nr_sequencia_orcamento  =  nr_orcamento_p
		  and x.cd_material      	  = a.cd_material)*/
	
union all

	SELECT a.cd_material,
		sum(a.qt_material),   
		sum(a.vl_material),   
		0,
		'N',
		null,
		null,
		null,
		null
	from	material_atend_paciente a  
	where	a.nr_interno_conta =  nr_interno_conta_p
	and	coalesce(a.cd_setor_atendimento,0)			= coalesce(cd_setor_atendimento_p, coalesce(a.cd_setor_atendimento,0))
/*OS  273098 comentei a clausula abaixo 273098  - tdpaula 06/11/2010	
	  and 	not exists (
		select 1 
		from orcamento_paciente_mat x 
		where x.nr_sequencia_orcamento =  nr_orcamento_p
		  and x.cd_material      	 = a.cd_material)*/
	group by a.cd_material
	
union all

	select	b.cd_material,
		sum(b.qt_material),
	0,   
	0,    
	'N',
	null,
	null,
	null,
	null
	from	prescr_medica a, prescr_material b    
	where	a.nr_prescricao		= b.nr_prescricao
	and	a.nr_prescricao 	=  nr_prescricao_p
	and	coalesce(nr_prescricao_p,0) > 0
	and	coalesce(ie_copia_prescr_mat_w,'N') = 'S'
	and	((ie_copiar_itens_suspensos_w = 'S') or (coalesce(b.ie_suspenso,'N') <> 'S'))
	group by b.cd_material;
	

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	orcamento_pac_doc
	where	nr_orc_pac = nr_orcamento_origem_p
	order by 1;


BEGIN

select	coalesce(max(cd_estabelecimento),wheb_usuario_pck.get_cd_estabelecimento),
	max(cd_convenio),
	max(cd_categoria),
	max(cd_plano),
	max(cd_tipo_acomodacao),
	max(cd_setor_atendimento),
	max(dt_orcamento)
into STRICT	cd_estabelecimento_w,
	cd_convenio_w,
	cd_categoria_w,
	cd_plano_w,
	cd_tipo_acomodacao_w,
	cd_setor_atendimento_w,
	dt_orcamento_w
from	orcamento_paciente
where	nr_sequencia_orcamento = nr_orcamento_p;

ie_copia_prescr_mat_w		:= obter_valor_param_usuario(106,89,Obter_perfil_Ativo,nm_usuario_p,cd_estabelecimento_w);
ie_gerar_lanc_aut_presc_w	:= obter_valor_param_usuario(106,95,Obter_perfil_Ativo,nm_usuario_p,cd_estabelecimento_w);
ie_copiar_itens_suspensos_w	:= obter_valor_param_usuario(106,98,Obter_perfil_Ativo,nm_usuario_p,cd_estabelecimento_w);
ie_converte_proc_conv_w		:= obter_valor_param_usuario(106,136,Obter_perfil_Ativo,nm_usuario_p,cd_estabelecimento_w);

if (coalesce(nr_orcamento_Origem_p,0) > 0) then
	select	max(nr_atendimento)
	into STRICT	nr_atendimento_w
	from	orcamento_paciente
	where	nr_sequencia_orcamento = nr_orcamento_origem_p;
elsif (coalesce(nr_interno_conta_p,0) > 0) then
	select	max(nr_atendimento)
	into STRICT	nr_atendimento_w
	from	conta_paciente
	where	nr_interno_conta = nr_interno_conta_p;
elsif (coalesce(nr_prescricao_p,0) > 0) then
	select	max(nr_atendimento)
	into STRICT	nr_atendimento_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;
end if;

if (coalesce(nr_atendimento_w,0) > 0) then
	select	obter_convenio_atendimento(nr_atendimento)
	into STRICT	cd_convenio_orig_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_w;
end if;
	
open C03;
loop
fetch C03 into	
	cd_material_w,
	qt_material_w,
	vl_material_w,
	vl_desconto_w,
	ie_valor_informado_w,
	ie_adicional_w,
	ds_observacao_orc_mat_w,
	vl_custo_mat_w,
	cd_setor_atend_item_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	ie_regra_w	:= null;
	
	SELECT * FROM consiste_mat_orc(	nr_orcamento_p, cd_material_w, qt_material_w, cd_estabelecimento_w, nm_usuario_p, ie_autorizacao_w, ie_regra_w) INTO STRICT ie_autorizacao_w, ie_regra_w;
	
	
	insert into orcamento_paciente_mat(	nr_sequencia_orcamento,
						cd_material,
						qt_material,
						vl_material,
						dt_atualizacao,     
						nm_usuario, 
						vl_desconto,
						ie_valor_informado,
						nr_sequencia,
						ie_autorizacao,
						ie_adicional,
						ds_observacao,
						vl_custo,
						cd_setor_atendimento,
						ie_regra_plano)
				values (	nr_orcamento_p,
						cd_material_w,
						qt_material_w,
						vl_material_w,
						clock_timestamp(),
						nm_usuario_p,
						vl_desconto_w,
						ie_valor_informado_w,
						nextval('orcamento_paciente_mat_seq'),
						ie_autorizacao_w,
						ie_adicional_w,
						ds_observacao_orc_mat_w,
						vl_custo_mat_w,
						cd_setor_atend_item_w,
						ie_regra_w);
	end;
end loop;
close C03;	
	
open c01;
loop
	fetch c01 into
		cd_procedimento_w,
		ie_origem_proced_w,
		qt_procedimento_w,
		vl_procedimento_w,
		vl_medico_w,
		vl_anestesista_w,
		vl_filme_w,
		vl_auxiliares_w,
		vl_custo_operacional_w,
		vl_desconto_w,
		cd_medico_w,
		ie_procedimento_principal_w,
		qt_dia_internacao_w,
		ie_valor_informado_w,
		nr_seq_proc_interno_w,
		pr_desconto_w,
		nr_seq_procedimento_w,
		nr_seq_proc_princ_w,
		ie_exame_assoc_w,
		nr_seq_exame_w,
		ie_adicional_w,
		ds_observacao_orc_proc_w,
		vl_custo_proc_w,
		cd_setor_atend_item_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	ie_regra_w	:= null;
	
	if (ie_converte_proc_conv_w <> 'N') and (coalesce(cd_convenio_w,0)	<> coalesce(cd_convenio_orig_w,0)) then
		cd_proced_convertido_w	:=0;
		
		if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
			SELECT * FROM obter_proc_tab_interno_conv(nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, coalesce(cd_setor_atend_item_w,cd_setor_atendimento_w), cd_proced_convertido_w, ie_origem_proced_convert_w, coalesce(cd_setor_atend_item_w,cd_setor_atendimento_w), dt_orcamento_w, cd_tipo_acomodacao_w, null, null, null, null, null, null, null) INTO STRICT cd_proced_convertido_w, ie_origem_proced_convert_w;

		end if;
		
		if (coalesce(cd_proced_convertido_w,0)	> 0) then
			cd_procedimento_w	:= cd_proced_convertido_w;
			ie_origem_proced_w	:= ie_origem_proced_convert_w;
		end if;
		
		if (ie_converte_proc_conv_w = 'Q') then		
			qt_proc_interno_w := obter_qtd_proc_tab_int_orc(nr_seq_proc_interno_w, nr_orcamento_p, qt_proc_interno_w);
		
			if (qt_proc_interno_w IS NOT NULL AND qt_proc_interno_w::text <> '') then
				qt_procedimento_w	:= qt_proc_interno_w;
			end if;
		end if;
		
	end if;
	
	SELECT * FROM consiste_proc_orc(	nr_orcamento_p, cd_procedimento_w, ie_origem_proced_w, qt_procedimento_w, cd_estabelecimento_w, nm_usuario_p, ie_autorizacao_w, nr_seq_proc_interno_w, ie_regra_w) INTO STRICT ie_autorizacao_w, ie_regra_w;	
	

	select	nextval('orcamento_paciente_proc_seq')
	into STRICT	nr_sequencia_w
	;
	
	i	:= coalesce(Vetor_Prescr_Orc_w.count,0) + 1;

	Vetor_Prescr_Orc_w[i].nr_seq_procedimento	:= nr_seq_procedimento_w;
	Vetor_Prescr_Orc_w[i].nr_seq_proc_princ		:= nr_seq_proc_princ_w;
	Vetor_Prescr_Orc_w[i].nr_seq_proc_orc		:= nr_sequencia_w;
	
	if (Vetor_Prescr_Orc_w.count > 0) and (nr_seq_proc_princ_w IS NOT NULL AND nr_seq_proc_princ_w::text <> '') then	
		for	j in 1..Vetor_Prescr_Orc_w.count loop
		
			if (Vetor_Prescr_Orc_w[j].nr_seq_procedimento = nr_seq_proc_princ_w) then
				ie_ok_w	:= 'S';
				nr_seq_proc_princ_w	:= Vetor_Prescr_Orc_w[j].nr_seq_proc_orc;
			end if;
			
		end loop;
	end if;
	
	if (ie_ok_w = 'N') then
		nr_seq_proc_princ_w	:= null;
	end if;
	
	insert into orcamento_paciente_proc(
		nr_sequencia,
		nr_sequencia_orcamento,
		cd_procedimento,
		ie_origem_proced,
		qt_procedimento,
		dt_atualizacao,
		nm_usuario,
		vl_procedimento,
		vl_medico,
		vl_anestesista,
		vl_filme,
		vl_auxiliares,
		vl_custo_operacional,
		vl_desconto,
		cd_medico,
		ie_procedimento_principal,
		qt_dia_internacao,
		ie_valor_informado,
		nr_seq_proc_interno,
		ie_autorizacao,
		pr_desconto,
		nr_seq_proc_princ,
		ie_exame_assoc,
		nr_seq_exame,
		ie_adicional,
		ds_observacao,
		vl_custo,
		cd_setor_atendimento,
		ie_regra_plano)
	values (
		nr_sequencia_w,
		nr_orcamento_p,
		cd_procedimento_w,
		ie_origem_proced_w,
		qt_procedimento_w,
		clock_timestamp(),
		nm_usuario_p,
		coalesce(vl_procedimento_w,0),
		coalesce(vl_medico_w,0),
		coalesce(vl_anestesista_w,0),
		coalesce(vl_filme_w,0),
		coalesce(vl_auxiliares_w,0),
		coalesce(vl_custo_operacional_w,0),
		coalesce(vl_desconto_w,0),
		cd_medico_w,
		ie_procedimento_principal_w,
		qt_dia_internacao_w,
		ie_valor_informado_w,
		nr_seq_proc_interno_w,
		ie_autorizacao_w,
		pr_desconto_w,
		nr_seq_proc_princ_w,
		ie_exame_assoc_w,
		nr_seq_exame_w,
		ie_adicional_w,
		ds_observacao_orc_proc_w,
		vl_custo_proc_w,
		cd_setor_atend_item_w,
		ie_regra_w);

		if (coalesce(ie_gerar_lanc_aut_presc_w,'N') = 'S')  and (coalesce(nr_prescricao_p,0) > 0) then		
		CALL gerar_lanc_orc_automatico(null,nr_orcamento_p,34,nr_sequencia_w,nm_usuario_p);	
		end if;
		
	end;

end loop;
close c01;

if (obter_valor_param_usuario(106, 24, obter_perfil_ativo, nm_usuario_p, obter_estab_conta_paciente(nr_interno_conta_p)) = 'S') then
	
	insert into orcamento_paciente_venc(
			nr_sequencia_orcamento,
			dt_vencimento, 
			vl_vencimento, 
			dt_atualizacao, 
			nm_usuario) 
	SELECT	nr_orcamento_p,
			dt_vencimento, 
			vl_vencimento,	 
			clock_timestamp(),
			nm_usuario_p
	from	orcamento_paciente_venc
	where	nr_sequencia_orcamento = nr_orcamento_origem_p;
				
	

	open C02;
	loop
	fetch C02 into	
		nr_seq_orc_venc_orig_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		
		select 	nextval('orcamento_pac_doc_seq')
		into STRICT	nr_seq_orc_venc_dest_w
		;
		
		insert into orcamento_pac_doc(
				nr_sequencia, 
				nr_orc_pac, 
				dt_atualizacao, 
				nm_usuario, 
				ds_documento, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec) 
		SELECT 	nr_seq_orc_venc_dest_w,
				nr_orcamento_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				'    ', 
				clock_timestamp(), 
				nm_usuario_p
		from	orcamento_pac_doc
		where	nr_sequencia = nr_seq_orc_venc_orig_w;
		
		CALL copia_campo_long('ORCAMENTO_PAC_DOC','DS_DOCUMENTO','WHERE NR_SEQUENCIA = :NR_SEQUENCIA',
						'NR_SEQUENCIA='||nr_seq_orc_venc_orig_w,'NR_SEQUENCIA='||nr_seq_orc_venc_dest_w);
		
		end;
	end loop;
	close C02;
	
	insert into orcamento_item_incluso(
			nr_sequencia, 
			nr_seq_orcamento, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			ds_item, 
			nr_seq_apresent,
			NR_SEQ_REGRA,
			QT_ITEM) 
	SELECT	nextval('orcamento_item_incluso_seq'), 
			nr_orcamento_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			ds_item, 
			nr_seq_apresent,
			NR_SEQ_REGRA,
			QT_ITEM
	from 	orcamento_item_incluso
	where	nr_seq_orcamento = nr_orcamento_origem_p;
	
	insert into orcamento_item_excluso(
			nr_sequencia, 
			nr_seq_orcamento, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			ds_item, 
			nr_seq_apresent,
			NR_SEQ_REGRA,
			QT_ITEM ) 
	SELECT	nextval('orcamento_item_excluso_seq'), 
			nr_orcamento_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			ds_item, 
			nr_seq_apresent,
			NR_SEQ_REGRA,
			QT_ITEM
	from	orcamento_item_excluso
	where	nr_seq_orcamento = nr_orcamento_origem_p;
				
end if;

ie_calcula_w:= obter_valor_param_usuario(106,134,Obter_perfil_Ativo,nm_usuario_p,cd_estabelecimento_w);

if (ie_calcula_w = 'S') then
	CALL calcular_orcamento_paciente(nr_orcamento_p,nm_usuario_p,cd_estabelecimento_w);
end if;

COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copiar_orcamento_paciente ( nr_orcamento_p bigint, nr_interno_conta_p bigint, nr_orcamento_origem_p bigint, nr_prescricao_p bigint, nm_usuario_p text, cd_setor_atendimento_p bigint, ie_somente_glosados_p text) FROM PUBLIC;

