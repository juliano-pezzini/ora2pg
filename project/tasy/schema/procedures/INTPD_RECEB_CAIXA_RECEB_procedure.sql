-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE intpd_receb_caixa_receb ( nr_sequencia_p bigint, xml_p xml) AS $body$
DECLARE

			 
_ora2pg_r RECORD;
ie_conversao_w				intpd_eventos_sistema.ie_conversao%type;
nr_seq_sistema_w			intpd_eventos_sistema.nr_seq_sistema%type;	
nr_seq_projeto_xml_w		intpd_eventos_sistema.nr_seq_projeto_xml%type;
nr_seq_regra_w				conversao_meio_externo.nr_seq_regra%type;
ie_sistema_externo_w		varchar(15);
reg_integracao_w			gerar_int_padrao.reg_integracao_conv;
ds_erro_w					varchar(4000);

caixa_receb_w				caixa_receb%rowtype;
caixa_receb_estrang_w		caixa_receb_estrang%rowtype;
titulo_receber_liq_w		titulo_receber_liq%rowtype;
adiantamento_w				adiantamento%rowtype;
cheque_cr_w					cheque_cr%rowtype;
movto_cartao_cr_w			movto_cartao_cr%rowtype;

qt_saldo_aberto_w			bigint;
nr_seq_saldo_caixa_w		caixa_saldo_diario.nr_sequencia%type;	
nr_seq_caixa_w				caixa.nr_sequencia%type;
vl_transacao_w				movto_trans_financ.vl_transacao%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;	
vl_troco_w					bigint := 0;
qt_receb_abertos_w			bigint;

 
 
C01 CURSOR FOR 
	SELECT	* 
	from	xmltable('/STRUCTURE/CHECKOUT_RECEIPT' passing xml_p columns	 
			ie_action				varchar(1)	 path	'IE_ACTION', 
			cd_estabelecimento		integer 	 path 'CD_ESTABLISHMENT', 
			nr_seq_caixa			bigint	 path 'NR_CHECKOUT',	 
			dt_recebimento			varchar(40) path 'DT_RECEIPT',	 
			nr_seq_trans_financ		bigint  path 'NR_FINANCIAL_TRANSACTION', 
			vl_transacao			varchar(15)/*number(15,2)*/
 path 'VL_TRANSACTION', 
			cd_pessoa_fisica		varchar(10) path 'CD_NATURAL_PERSON',		 
			cd_cgc					varchar(14) path 'CD_LEGAL_ENTITY', 
			vl_especie				varchar(15)/*number(15,2) */
 path 'VL_CASH', 
			ds_observacao			varchar(255) path	'DS_COMMENT', 
			xml_caixa_receb_estrang	xml		 path	'CAIXA_RECEB_ESTRANGS', 
			xml_titulo_receber_liq	xml		 path	'TITULO_RECEBER_LIQS', 
			xml_adiantamento		xml		 path	'ADIANTAMENTOS', 
			--xml_movto_trans_financ	xmltype		 path	'MOVTO_TRANS_FINANCS', 
			xml_cheque_cr			xml		 path	'CHEQUE_CRS', 
			xml_movto_cartao_cr		xml		 path	'MOVTO_CARTAO_CRS');
c01_w	c01%rowtype;

C02 CURSOR FOR 
	SELECT	* 
	from	xmltable('/CAIXA_RECEB_ESTRANGS/CAIXA_RECEB_ESTRANG' passing c01_w.xml_caixa_receb_estrang columns 
			cd_moeda				integer		path	'CD_CURRENCY', 
			vl_cotacao				varchar(15)/*number(15,4)*/
  path 	'VL_EXCHANGE_RATE', 
			vl_especie_estrang		varchar(15)/*number(15,4)*/
	path 	'VL_FOREIGN_CASH') 
	where  (caixa_receb_w.nr_sequencia IS NOT NULL AND caixa_receb_w.nr_sequencia::text <> '');
c02_w	c02%rowtype;			
			 
C03 CURSOR FOR 
	SELECT	* 
	from	xmltable('/TITULO_RECEBER_LIQS/TITULO_RECEBER_LIQ' passing c01_w.xml_titulo_receber_liq columns 
			nr_titulo				bigint		path	'NR_RECEIVABLE_DOCUMENT', 
			nr_seq_trans_caixa		bigint		path	'NR_CHECKOUT_TRANSACTION', 
			vl_glosa				varchar(15)/*number(15,2)*/
	path	'VL_DENIAL', 
			nr_documento			varchar(22)	path	'NR_DOCUMENT', 
			nr_adiantamento			bigint		path	'NR_ADVANCE_PAYMENT', --Isso nao vai usar no XML, pode vir 0. Pq o adiantamento sera gerado no Tasy. 
			cd_moeda				integer		path	'CD_CURRENCY', 
			vl_cotacao				varchar(15)/*number(15,4)*/
	path	'VL_EXCHANGE_RATE', 
			vl_recebido_estrang		varchar(15)/*number(15,2)*/
	path	'VL_FOREIGN_VALUE_RECEIVED', 
			vl_recebido				varchar(15)/*number(15,2)*/
	path	'VL_RECEIVED', 
			vl_despesa_bancaria		varchar(15)/*number(15,2)*/
	path	'VL_BANK_SERVICE_CHARGE', 
			vl_juros				varchar(15)/*number(15,2)*/
	path	'VL_INTEREST', 
			vl_multa				varchar(15)/*number(15,2)*/
	path	'VL_PENALTY_FEE', 
			vl_descontos			varchar(15)/*number(15,2)*/
	path	'VL_DISCOUNTS', 
			cd_centro_custo_desc	integer		path	'CD_DISCOUNT_COST_CENTER', 
			cd_tipo_recebimento		integer		path	'CD_METHOD_OF_PAYMENT', 
			nr_seq_motivo_desc		bigint		path	'NR_DISCOUNT_REASON', 
			vl_rec_maior			varchar(15)/*number(15,2)*/
	path	'VL_OVERPAYMENT', 
			ds_observacao			varchar(255)	path	'DS_COMMENT', 
			dt_recebimento			varchar(14)	path	'DT_RECEIPT');
	--where  caixa_receb_w.nr_sequencia is not null;		 
c03_w	c03%rowtype;				
			 
C04 CURSOR FOR 
	SELECT	* 
	from	xmltable('/ADIANTAMENTOS/ADIANTAMENTO' passing c01_w.xml_adiantamento columns 
			nr_atendimento			bigint		path	'NR_PATIENT_ENCOUNTER', 
			cd_pessoa_fisica		varchar(10)	path	'CD_NATURAL_PERSON', 
			cd_cgc					varchar(14)	path	'CD_LEGAL_ENTITY', 
			cd_moeda				integer		path	'CD_CURRENCY', 
			vl_cotacao				varchar(15)/*number(15,4)*/
	path	'VL_EXCHANGE_RATE', 
			vl_adto_estrang			varchar(15)/*number(15,2)*/
	path	'VL_FOREIGN_ADVANCE_PAYMENT', 
			vl_adiantamento			varchar(15)/*number(15,2)*/
	path	'VL_ADVANCE_PAYMENT', 
			vl_especie				varchar(15)/*number(15,2)*/
	path	'VL_CASH', 
			nr_documento			varchar(100)	path	'NR_DOCUMENT', 
			dt_contabil				varchar(14)	path	'DT_ACCOUNTING', 
			dt_baixa				varchar(14)	path	'DT_SETTLEMENT', 
			cd_tipo_recebimento		integer		path	'CD_RECEIPT_TYPE', 
			nr_seq_trans_caixa		bigint		path	'NR_CHECKOUT_TRANSACTION', 
			nr_seq_tipo				bigint		path	'NR_ADVANCE_PAYMENT_TYPE', 
			ds_observacao			varchar(255)	path	'DS_COMMENT', 
			dt_adiantamento			varchar(14)	path	'DT_ADVANCE_PAYMENT') 
	where  (caixa_receb_w.nr_sequencia IS NOT NULL AND caixa_receb_w.nr_sequencia::text <> '');		
 c04_w	c04%rowtype;

C06 CURSOR FOR 
	SELECT	* 
	from	xmltable('/CHEQUE_CRS/CHEQUE_CR' passing c01_w.xml_cheque_cr columns 
			cd_pessoa_fisica		varchar(10)	path	'CD_NATURAL_PERSON', 
			cd_cgc					varchar(14)	path	'CD_LEGAL_ENTITY', 
			nr_seq_trans_caixa		bigint		path	'NR_CHECKOUT_TRANSACTION',	 
			cd_banco				integer		path	'CD_BANK', 
			cd_agencia_bancaria		varchar(8)		path	'CD_BANK_BRANCH', 
			nr_conta				varchar(20)	path	'NR_ACCOUNT', 
			nr_cheque				varchar(20)	path	'NR_CHECK', 
			cd_moeda				integer		path	'CD_CURRENCY', 
			vl_cotacao				varchar(15)/*number(15,4)*/
	path	'VL_EXCHANGE_RATE',	 
			vl_cheque_estrang		varchar(15)/*number(15,2)*/
	path	'VL_FOREIGN_CHECK',	 
			vl_cheque				varchar(15)/*number(15,2)*/
	path	'VL_CHECK',	 
			dt_registro				varchar(14)	path	'DT_REGISTER', 
			dt_vencimento			varchar(14)	path	'DT_DUE',	 
			nr_seq_camara			bigint		path	'NR_CLEARING_HOUSE', 
			ds_beneficiario			varchar(255)	path	'DS_PAYEE', 
			ds_autorizacao_tef		varchar(255)	path	'DS_ELETRONIC_AUTHORIZATION') 
	where  (caixa_receb_w.nr_sequencia IS NOT NULL AND caixa_receb_w.nr_sequencia::text <> '');		
c06_w	c06%rowtype;

C07 CURSOR FOR 
	SELECT	* 
	from	xmltable('/MOVTO_CARTAO_CRS/MOVTO_CARTAO_CR' passing c01_w.xml_movto_cartao_cr columns 
			ie_tipo_cartao			varchar(1)		path	'IE_CARD_TYPE', 
			nr_cartao				varchar(20)	path	'NR_CARD', 
			nr_seq_bandeira			bigint		path	'NR_CARD_NETWORK', 
			nr_autorizacao			varchar(40)	path	'NR_AUTHORIZATION',	 
			nr_seq_forma_pagto		bigint		path	'NR_METHOD_OF_PAYMENT',	 
			vl_cartao				varchar(15)/*number(15,2)*/
	path	'VL_CARD',	 
			qt_parcela				smallint		path	'QT_CARD_INSTALLMENTS', 
			ds_comprovante			varchar(100)	path	'NR_ELETRONIC_PROOF',				 
			nr_seq_trans_caixa		bigint		path	'NR_CARD_TRANSACTION', 
			cd_pessoa_fisica		varchar(10)	path	'CD_NATURAL_PERSON',	 
			cd_cgc					varchar(14)	path	'CD_LEGAL_ENTITY', 
			ds_observacao			varchar(255)	path	'DS_COMMENT') 
	where  (caixa_receb_w.nr_sequencia IS NOT NULL AND caixa_receb_w.nr_sequencia::text <> '');			
c07_w	c07%rowtype;			
								 
 
BEGIN 
 
update	intpd_fila_transmissao 
set		ie_status	 = 'R' 
where	nr_sequencia = nr_sequencia_p;
 
commit;
 
begin 
 
select	coalesce(b.ie_conversao,'I'), 
		nr_seq_sistema, 
		nr_seq_projeto_xml, 
		nr_seq_regra_conv 
into STRICT	ie_conversao_w, 
		nr_seq_sistema_w, 
		nr_seq_projeto_xml_w, 
		nr_seq_regra_w 
from	intpd_fila_transmissao a, 
		intpd_eventos_sistema b 
where	a.nr_seq_evento_sistema = b.nr_sequencia 
and		a.nr_sequencia = nr_sequencia_p;
 
ie_sistema_externo_w	:=	nr_seq_sistema_w;
 
/*'Alimenta as informações iniciais de controle e consistência de cada atributo do XML'*/
 
reg_integracao_w.nr_seq_fila_transmissao	:=	nr_sequencia_p;
reg_integracao_w.ie_envio_recebe			:=	'R';
reg_integracao_w.ie_sistema_externo			:=	ie_sistema_externo_w;
reg_integracao_w.ie_conversao				:=	ie_conversao_w;
reg_integracao_w.nr_seq_projeto_xml			:=	nr_seq_projeto_xml_w;
reg_integracao_w.nr_seq_regra_conversao		:=	nr_seq_regra_w;
reg_integracao_w.intpd_log_receb.delete;
reg_integracao_w.qt_reg_log					:=	0;
 
open C01;
loop 
fetch C01 into	 
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	reg_integracao_w.nm_tabela		:=	'CAIXA';
	reg_integracao_w.nm_elemento	:=	'CHECKOUT';
	reg_integracao_w.nr_seq_visao	:=	'';
	SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQUENCIA', c01_w.nr_seq_caixa, 'S', nr_seq_caixa_w) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; nr_seq_caixa_w := _ora2pg_r.ds_valor_retorno_p;
	 
	reg_integracao_w.nm_tabela		:=	'CAIXA_RECEB';
	reg_integracao_w.nm_elemento	:=	'CHECKOUT_RECEIPT';
	reg_integracao_w.nr_seq_visao	:=	'';
	 
	--intpd_processar_atributo(reg_integracao_w, 'CD_ESTABELECIMENTO', 		c01_w.cd_estabelecimento, 	'S', cd_estabelecimento_w); 
	--intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_CAIXA',				c01_w.nr_seq_caixa,			'S', nr_seq_caixa_w); 
	SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_RECEBIMENTO', to_date(c01_w.dt_recebimento,'dd/mm/yyyy'), 'N', caixa_receb_w.dt_recebimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; caixa_receb_w.dt_recebimento := _ora2pg_r.ds_valor_retorno_p;	
	SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_TRANS_FINANC', c01_w.nr_seq_trans_financ, 'S', caixa_receb_w.nr_seq_trans_financ) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; caixa_receb_w.nr_seq_trans_financ := _ora2pg_r.ds_valor_retorno_p;	
	SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_TRANSACAO', c01_w.vl_transacao, 'N', vl_transacao_w) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; vl_transacao_w := _ora2pg_r.ds_valor_retorno_p;	
	SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_PESSOA_FISICA', c01_w.cd_pessoa_fisica, 'S', caixa_receb_w.cd_pessoa_fisica) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; caixa_receb_w.cd_pessoa_fisica := _ora2pg_r.ds_valor_retorno_p;
	SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CGC', c01_w.cd_cgc, 'S', caixa_receb_w.cd_cgc) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; caixa_receb_w.cd_cgc := _ora2pg_r.ds_valor_retorno_p;	
	SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_ESPECIE', c01_w.vl_especie, 'N', caixa_receb_w.vl_especie) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; caixa_receb_w.vl_especie := _ora2pg_r.ds_valor_retorno_p;	
	SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_OBSERVACAO', c01_w.ds_observacao, 'N', caixa_receb_w.ds_observacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; caixa_receb_w.ds_observacao := _ora2pg_r.ds_valor_retorno_p;	
	 
	/*Atributos obrigatórios na tabela que não foram definidos no layout.*/
 
	caixa_receb_w.dt_atualizacao := clock_timestamp();
	caixa_receb_w.nm_usuario   := 'TASY_INTEGR';
	 
	if (nr_seq_caixa_w IS NOT NULL AND nr_seq_caixa_w::text <> '') then 
	 
		select 	max(cd_estabelecimento) 
		into STRICT	cd_estabelecimento_w	 
		from	caixa 
		where	nr_sequencia= nr_seq_caixa_w;
		 
	end if;
	 
	 
	if (reg_integracao_w.qt_reg_log = 0) then 
		 
		--Verificar se existem saldos diferente da data de recebimento em aberto, cfme faz na intpd_receb_caixa_parksoft (solicitado na OS para se basear nessa proc)		 
		select 	count(1) 
		into STRICT	qt_saldo_aberto_w 
		from 	caixa_saldo_diario 
		where 	nr_seq_caixa 					= nr_seq_caixa_w 
		and		trunc(dt_saldo)	<> trunc(caixa_receb_w.dt_recebimento) 
		and		coalesce(dt_fechamento::text, '') = '';
		 
		 
		if (qt_saldo_aberto_w > 0) then 
			CALL fechar_caixa_saldo_diario(nr_seq_caixa_w, 
									 null, 
									 trunc(caixa_receb_w.dt_recebimento), 
									 caixa_receb_w.nm_usuario);
		end if;
 
		-- Reabre o saldo caso esteja fechado 
		select	coalesce(max(nr_sequencia),0) 
		into STRICT	caixa_receb_w.nr_seq_saldo_caixa 
		from 	caixa_saldo_diario 
		where 	trunc(dt_saldo) 	= trunc(caixa_receb_w.dt_recebimento) 
		and		nr_seq_caixa 		= nr_seq_caixa_w 
		and 	(dt_fechamento IS NOT NULL AND dt_fechamento::text <> '');
 
		if (caixa_receb_w.nr_seq_saldo_caixa > 0) then	 
			CALL reabrir_caixa_saldo_diario(	nr_seq_caixa_w, 
										caixa_receb_w.nr_seq_saldo_caixa , 
										trunc(caixa_receb_w.dt_recebimento), 
										caixa_receb_w.nm_usuario);
		end if;
		 
		-- Abre o saldo caso ainda não exista 
		select	coalesce(max(nr_sequencia),0) 
		into STRICT	caixa_receb_w.nr_seq_saldo_caixa 
		from 	caixa_saldo_diario 
		where 	trunc(dt_saldo) 	= trunc(caixa_receb_w.dt_recebimento) 
		and		nr_seq_caixa 		= nr_seq_caixa_w;
				 
		if (caixa_receb_w.nr_seq_saldo_caixa = 0) then	 
			caixa_receb_w.nr_seq_saldo_caixa := abrir_caixa_saldo_diario(	nr_seq_caixa_w, trunc(caixa_receb_w.dt_recebimento), caixa_receb_w.nm_usuario, caixa_receb_w.nr_seq_saldo_caixa);
		end if;	
	 
	end if;
	 
	/*Realiza o recebimento */
 
	if (caixa_receb_w.nr_seq_saldo_caixa <> 0) then 
	 
		select	nextval('caixa_receb_seq') 
		into STRICT	caixa_receb_w.nr_sequencia 
		;	
		 
		select count(*) qt_reg 
		into STRICT	qt_receb_abertos_w 
    from  caixa_saldo_diario b, 
        caixa_receb a 
    where  a.nr_seq_saldo_caixa = b.nr_sequencia 
    and   b.nr_seq_caixa = nr_seq_caixa_w 
    and   coalesce(a.dt_fechamento::text, '') = '' 
    and   coalesce(a.dt_cancelamento::text, '') = '';
 
		if (qt_receb_abertos_w > 0) then 
			--Há um recebimento em aberto para este caixa! 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(95673);
		end if;
		 
 
		insert into caixa_receb( nr_sequencia, 
								 dt_atualizacao, 
								 nm_usuario, 
								 nr_seq_saldo_caixa, 
								 nr_seq_trans_financ, 
								 dt_recebimento, 
								 vl_especie, 
								 ds_observacao, 
								 ie_tipo_receb, 
								 cd_pessoa_fisica, 
								 cd_cgc) 
						values ( caixa_receb_w.nr_sequencia, 
								 clock_timestamp(), 
								 caixa_receb_w.nm_usuario, 
								 caixa_receb_w.nr_seq_saldo_caixa, 
								 caixa_receb_w.nr_seq_trans_financ, 
								 trunc(caixa_receb_w.dt_recebimento), 
								 coalesce(caixa_receb_w.vl_especie,0), 
								 caixa_receb_w.ds_observacao, 
								 'R', 
								 caixa_receb_w.cd_pessoa_fisica, 
								 caixa_receb_w.cd_cgc);
					 								 
		open C02;
		loop 
		fetch C02 into	 
			c02_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			reg_integracao_w.nm_tabela		:=	'CAIXA_RECEB_ESTRANG';
			reg_integracao_w.nm_elemento	:=	'CAIXA_RECEB_ESTRANG';
			reg_integracao_w.nr_seq_visao	:=	'';
			 
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_MOEDA', c02_w.cd_moeda, 'S', caixa_receb_estrang_w.cd_moeda) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; caixa_receb_estrang_w.cd_moeda := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_COTACAO', c02_w.vl_cotacao, 'N', caixa_receb_estrang_w.vl_cotacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; caixa_receb_estrang_w.vl_cotacao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_ESPECIE_ESTRANG', c02_w.vl_especie_estrang, 'N', caixa_receb_estrang_w.vl_especie_estrang) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; caixa_receb_estrang_w.vl_especie_estrang := _ora2pg_r.ds_valor_retorno_p;
			 
			if (reg_integracao_w.qt_reg_log = 0) then 
			 
				caixa_receb_estrang_w.dt_atualizacao 		:= clock_timestamp();
				caixa_receb_estrang_w.dt_atualizacao_nrec 	:= clock_timestamp();
				caixa_receb_estrang_w.nm_usuario 			:= 'TASY_INTEGR';
				caixa_receb_estrang_w.nm_usuario_nrec		:= 'TASY_INTEGR';
				caixa_receb_estrang_w.nr_seq_caixa_receb	:= caixa_receb_w.nr_sequencia;
				 
				select	nextval('caixa_receb_estrang_seq') 
				into STRICT	caixa_receb_estrang_w.nr_sequencia 
				;
				 
				caixa_receb_estrang_w.vl_complemento		:= ((caixa_receb_estrang_w.vl_especie_estrang)::numeric  * (caixa_receb_estrang_w.vl_cotacao)::numeric ) - (caixa_receb_estrang_w.vl_especie_estrang)::numeric;
				caixa_receb_estrang_w.vl_especie			:= ((caixa_receb_estrang_w.vl_especie_estrang)::numeric  * (caixa_receb_estrang_w.vl_cotacao)::numeric );
				 
				insert into caixa_receb_estrang( cd_moeda, 
												 dt_atualizacao, 
												 dt_atualizacao_nrec, 
												 nm_usuario, 
												 nm_usuario_nrec, 
												 nr_seq_caixa_receb, 
												 nr_sequencia, 
												 vl_complemento, 
												 vl_cotacao, 
												 vl_especie, 
												 vl_especie_estrang ) 
										values ( caixa_receb_estrang_w.cd_moeda, 
												 caixa_receb_estrang_w.dt_atualizacao, 
												 caixa_receb_estrang_w.dt_atualizacao_nrec, 
												 caixa_receb_estrang_w.nm_usuario, 
												 caixa_receb_estrang_w.nm_usuario_nrec, 
												 caixa_receb_estrang_w.nr_seq_caixa_receb, 
												 caixa_receb_estrang_w.nr_sequencia, 
												 caixa_receb_estrang_w.vl_complemento, 
												 caixa_receb_estrang_w.vl_cotacao, 
												 caixa_receb_estrang_w.vl_especie, 
												 caixa_receb_estrang_w.vl_especie_estrang );
												  
			end if;
			end;
		end loop;
		close C02;	
		 
		open C04;
		loop 
		fetch C04 into	 
			c04_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin 
			 
			reg_integracao_w.nm_tabela		:=	'ADIANTAMENTO';
			reg_integracao_w.nm_elemento	:=	'ADIANTAMENTO';
			reg_integracao_w.nr_seq_visao	:=	14042;	
			 
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_ATENDIMENTO', c04_w.nr_atendimento, 'S', adiantamento_w.nr_atendimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; adiantamento_w.nr_atendimento := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_PESSOA_FISICA', c04_w.cd_pessoa_fisica, 'S', adiantamento_w.cd_pessoa_fisica) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; adiantamento_w.cd_pessoa_fisica := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CGC', c04_w.cd_cgc, 'S', adiantamento_w.cd_cgc) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; adiantamento_w.cd_cgc := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_MOEDA', c04_w.cd_moeda, 'S', adiantamento_w.cd_moeda) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; adiantamento_w.cd_moeda := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_COTACAO', c04_w.vl_cotacao, 'N', adiantamento_w.vl_cotacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; adiantamento_w.vl_cotacao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_ADTO_ESTRANG', c04_w.vl_adto_estrang, 'N', adiantamento_w.vl_adto_estrang) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; adiantamento_w.vl_adto_estrang := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_ADIANTAMENTO', c04_w.vl_adiantamento, 'N', adiantamento_w.vl_adiantamento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; adiantamento_w.vl_adiantamento := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_ESPECIE', c04_w.vl_especie, 'N', adiantamento_w.vl_especie) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; adiantamento_w.vl_especie := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_DOCUMENTO', c04_w.nr_documento, 'N', adiantamento_w.nr_documento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; adiantamento_w.nr_documento := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_CONTABIL', to_date(c04_w.dt_contabil,'dd/mm/yyyy hh24:mi:ss'), 'N', adiantamento_w.dt_contabil) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; adiantamento_w.dt_contabil := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_BAIXA', to_date(c04_w.dt_baixa,'dd/mm/yyyy hh24:mi:ss'), 'N', adiantamento_w.dt_baixa) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; adiantamento_w.dt_baixa := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_TIPO_RECEBIMENTO', c04_w.cd_tipo_recebimento, 'S', adiantamento_w.cd_tipo_recebimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; adiantamento_w.cd_tipo_recebimento := _ora2pg_r.ds_valor_retorno_p;	
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_TRANS_CAIXA', c04_w.nr_seq_trans_caixa, 'S', adiantamento_w.nr_seq_trans_caixa) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; adiantamento_w.nr_seq_trans_caixa := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_TIPO', c04_w.nr_seq_tipo, 'S', adiantamento_w.nr_seq_tipo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; adiantamento_w.nr_seq_tipo := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_OBSERVACAO', c04_w.ds_observacao, 'N', adiantamento_w.ds_observacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; adiantamento_w.ds_observacao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ADIANTAMENTO', to_date(c04_w.dt_adiantamento,'dd/mm/yyyy hh24:mi:ss'), 'N', adiantamento_w.dt_adiantamento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; adiantamento_w.dt_adiantamento := _ora2pg_r.ds_valor_retorno_p;
 
			if (reg_integracao_w.qt_reg_log = 0) then 
			 
				adiantamento_w.dt_atualizacao		:= clock_timestamp();
				adiantamento_w.ie_situacao			:= 'A'; --Aberto pois esta recebendo ele agora 
				adiantamento_w.nm_usuario  		:= 'TASY_INTEGR';
				adiantamento_w.vl_saldo				:= adiantamento_w.vl_adiantamento;
				adiantamento_w.cd_estabelecimento 	:= cd_estabelecimento_w;
				 
				select	nextval('adiantamento_seq') 
				into STRICT	adiantamento_w.nr_adiantamento 
				;
				 
				--adiantamento_w.nr_adiantamento   := adiantamento_seq.nextval; 
				adiantamento_w.nr_seq_caixa_rec		:= caixa_receb_w.nr_sequencia;
				adiantamento_w.dt_adiantamento		:= clock_timestamp();
				adiantamento_w.vl_saldo_estrang   := adiantamento_w.vl_adto_estrang;
				 
				if (adiantamento_w.vl_adto_estrang IS NOT NULL AND adiantamento_w.vl_adto_estrang::text <> '') and (adiantamento_w.vl_cotacao IS NOT NULL AND adiantamento_w.vl_cotacao::text <> '') then	 
					adiantamento_w.vl_complemento	:= ((adiantamento_w.vl_adto_estrang)::numeric  * (adiantamento_w.vl_cotacao)::numeric ) - (adiantamento_w.vl_adto_estrang)::numeric;
				end if;
				 
				insert into adiantamento values (adiantamento_w.*);
			 
			end if;
	 
			end;
		end loop;
		close C04;
		 
		 
		open C03;
		loop 
		fetch C03 into	 
			c03_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin 
 
			reg_integracao_w.nm_tabela		:=	'TITULO_RECEBER_LIQ';
			reg_integracao_w.nm_elemento	:=	'TITULO_RECEBER_LIQ';
			reg_integracao_w.nr_seq_visao	:=	14042;	
			 
			/*Tentar achar o título no Tasy para inserir no recebimento.*/
 
			select 	max(a.nr_titulo) 
			into STRICT	titulo_receber_liq_w.nr_titulo 
			from	titulo_receber a 
			where	a.nr_titulo = trim(both c03_w.nr_titulo);	
			 
			if (coalesce(titulo_receber_liq_w.nr_titulo::text, '') = '') then 
				select 	max(a.nr_titulo) 
				into STRICT	titulo_receber_liq_w.nr_titulo 
				from	titulo_receber a 
				where	trim(both a.nr_titulo_externo) = trim(both c03_w.nr_titulo);
			end if;			
 
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_TRANS_CAIXA', c03_w.nr_seq_trans_caixa, 'S', titulo_receber_liq_w.nr_seq_trans_caixa) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_receber_liq_w.nr_seq_trans_caixa := _ora2pg_r.ds_valor_retorno_p;	
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_GLOSA', c03_w.vl_glosa, 'N', titulo_receber_liq_w.vl_glosa) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_receber_liq_w.vl_glosa := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_DOCUMENTO', c03_w.nr_documento, 'N', titulo_receber_liq_w.nr_documento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_receber_liq_w.nr_documento := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_ADIANTAMENTO', adiantamento_w.nr_adiantamento, 'N', titulo_receber_liq_w.nr_adiantamento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_receber_liq_w.nr_adiantamento := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_MOEDA', c03_w.cd_moeda, 'S', titulo_receber_liq_w.cd_moeda) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_receber_liq_w.cd_moeda := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_COTACAO', c03_w.vl_cotacao, 'N', titulo_receber_liq_w.vl_cotacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_receber_liq_w.vl_cotacao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_RECEBIDO_ESTRANG', c03_w.vl_recebido_estrang, 'N', titulo_receber_liq_w.vl_recebido_estrang) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_receber_liq_w.vl_recebido_estrang := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_RECEBIDO', c03_w.vl_recebido, 'N', titulo_receber_liq_w.vl_recebido) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_receber_liq_w.vl_recebido := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_DESPESA_BANCARIA', c03_w.vl_despesa_bancaria, 'N', titulo_receber_liq_w.vl_despesa_bancaria) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_receber_liq_w.vl_despesa_bancaria := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_JUROS', c03_w.vl_juros, 'N', titulo_receber_liq_w.vl_juros) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_receber_liq_w.vl_juros := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_MULTA', c03_w.vl_multa, 'N', titulo_receber_liq_w.vl_multa) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_receber_liq_w.vl_multa := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'vl_descontos', c03_w.vl_descontos, 'N', titulo_receber_liq_w.vl_descontos) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_receber_liq_w.vl_descontos := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CENTRO_CUSTO_DESC', c03_w.cd_centro_custo_desc, 'S', titulo_receber_liq_w.cd_centro_custo_desc) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_receber_liq_w.cd_centro_custo_desc := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_TIPO_RECEBIMENTO', c03_w.cd_tipo_recebimento, 'S', titulo_receber_liq_w.cd_tipo_recebimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_receber_liq_w.cd_tipo_recebimento := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_MOTIVO_DESC', c03_w.nr_seq_motivo_desc, 'S', titulo_receber_liq_w.nr_seq_motivo_desc) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_receber_liq_w.nr_seq_motivo_desc := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_REC_MAIOR', c03_w.vl_rec_maior, 'N', titulo_receber_liq_w.vl_rec_maior) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_receber_liq_w.vl_rec_maior := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_OBSERVACAO', c03_w.ds_observacao, 'N', titulo_receber_liq_w.ds_observacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_receber_liq_w.ds_observacao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_RECEBIMENTO', to_date(c03_w.dt_recebimento,'dd/mm/yyyy hh24:mi:ss'), 'N', titulo_receber_liq_w.dt_recebimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; titulo_receber_liq_w.dt_recebimento := _ora2pg_r.ds_valor_retorno_p;	
			 
			if (reg_integracao_w.qt_reg_log = 0) and (titulo_receber_liq_w.nr_titulo IS NOT NULL AND titulo_receber_liq_w.nr_titulo::text <> '') then 
 
				titulo_receber_liq_w.dt_atualizacao 		:= clock_timestamp();
				titulo_receber_liq_w.ie_acao				:= 'I';
				titulo_receber_liq_w.ie_lib_caixa			:= 'N';
				titulo_receber_liq_w.nr_seq_caixa_rec		:= caixa_receb_w.nr_sequencia;
				titulo_receber_liq_w.nm_usuario				:= 'TASY_INTEGR';
								 
				select	coalesce(max(a.nr_sequencia),0) + 1 
				into STRICT	titulo_receber_liq_w.nr_sequencia 
				from	titulo_receber_liq a 
				where	a.nr_titulo = titulo_receber_liq_w.nr_titulo;
 
				insert into	titulo_receber_liq values (titulo_receber_liq_w.*);
			 
			end if;
			 
						 
			end;
		end loop;
		close C03;
 
		open C06;
		loop 
		fetch C06 into	 
			c06_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin 
			reg_integracao_w.nm_tabela		:=	'CHEQUE_CR';
			reg_integracao_w.nm_elemento	:=	'CHEQUE_CR';
			reg_integracao_w.nr_seq_visao	:=	14045;	
			 
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_PESSOA_FISICA', c06_w.cd_pessoa_fisica, 'S', cheque_cr_w.cd_pessoa_fisica) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; cheque_cr_w.cd_pessoa_fisica := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CGC', c06_w.cd_cgc, 'S', cheque_cr_w.cd_cgc) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; cheque_cr_w.cd_cgc := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_TRANS_CAIXA', c06_w.nr_seq_trans_caixa, 'S', cheque_cr_w.nr_seq_trans_caixa) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; cheque_cr_w.nr_seq_trans_caixa := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_BANCO', c06_w.cd_banco, 'S', cheque_cr_w.cd_banco) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; cheque_cr_w.cd_banco := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_AGENCIA_BANCARIA', c06_w.cd_agencia_bancaria, 'N', cheque_cr_w.cd_agencia_bancaria) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; cheque_cr_w.cd_agencia_bancaria := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_CONTA', c06_w.nr_conta, 'N', cheque_cr_w.nr_conta) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; cheque_cr_w.nr_conta := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_CHEQUE', c06_w.nr_cheque, 'N', cheque_cr_w.nr_cheque) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; cheque_cr_w.nr_cheque := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_MOEDA', c06_w.cd_moeda, 'S', cheque_cr_w.cd_moeda) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; cheque_cr_w.cd_moeda := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_COTACAO', c06_w.vl_cotacao, 'N', cheque_cr_w.vl_cotacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; cheque_cr_w.vl_cotacao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_CHEQUE_ESTRANG', c06_w.vl_cheque_estrang, 'N', cheque_cr_w.vl_cheque_estrang) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; cheque_cr_w.vl_cheque_estrang := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_CHEQUE', c06_w.vl_cheque, 'N', cheque_cr_w.vl_cheque) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; cheque_cr_w.vl_cheque := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_REGISTRO', to_date(c06_w.dt_registro,'dd/mm/yyyy hh24:mi:ss'), 'N', cheque_cr_w.dt_registro) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; cheque_cr_w.dt_registro := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_VENCIMENTO', to_date(c06_w.dt_vencimento,'dd/mm/yyyy hh24:mi:ss'), 'N', cheque_cr_w.dt_vencimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; cheque_cr_w.dt_vencimento := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_CAMARA', c06_w.nr_seq_camara, 'S', cheque_cr_w.nr_seq_camara) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; cheque_cr_w.nr_seq_camara := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_BENEFICIARIO', c06_w.ds_beneficiario, 'N', cheque_cr_w.ds_beneficiario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; cheque_cr_w.ds_beneficiario := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_AUTORIZACAO_TEF', c06_w.ds_autorizacao_tef, 'N', cheque_cr_w.ds_autorizacao_tef) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; cheque_cr_w.ds_autorizacao_tef := _ora2pg_r.ds_valor_retorno_p;
 
			if (reg_integracao_w.qt_reg_log = 0) then 
			 
				cheque_cr_w.cd_estabelecimento := cd_estabelecimento_w;
				cheque_cr_w.dt_atualizacao   := clock_timestamp();
				cheque_cr_w.dt_contabil		  := to_date(c06_w.dt_vencimento,'dd/mm/yyyy hh24:mi:ss');
				cheque_cr_w.ie_lib_caixa	  := 'N';
				cheque_cr_w.nm_usuario		  := 'TASY_INTEGR';
				cheque_cr_w.vl_terceiro		  := 0;
				 
				select	nextval('cheque_cr_seq') 
				into STRICT	cheque_cr_w.nr_seq_cheque 
				;
				 
				--cheque_cr_w.nr_seq_cheque	  := cheque_cr_seq.nextval; 
				cheque_cr_w.nr_seq_caixa_rec  := caixa_receb_w.nr_sequencia;		
 
				insert into	cheque_cr values (cheque_cr_w.*);	
			 
			end if;
			 
			end;
		end loop;
		close C06;
 
		open C07;
		loop 
		fetch C07 into	 
			c07_w;
		EXIT WHEN NOT FOUND; /* apply on C07 */
			begin 
 
			reg_integracao_w.nm_tabela		:=	'MOVTO_CARTAO_CR';
			reg_integracao_w.nm_elemento	:=	'MOVTO_CARTAO_CR';
			reg_integracao_w.nr_seq_visao	:=	14046;				
			 
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_TIPO_CARTAO', c07_w.ie_tipo_cartao, 'S', movto_cartao_cr_w.ie_tipo_cartao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; movto_cartao_cr_w.ie_tipo_cartao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_CARTAO', c07_w.nr_cartao, 'N', movto_cartao_cr_w.nr_cartao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; movto_cartao_cr_w.nr_cartao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_BANDEIRA', c07_w.nr_seq_bandeira, 'S', movto_cartao_cr_w.nr_seq_bandeira) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; movto_cartao_cr_w.nr_seq_bandeira := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_AUTORIZACAO', c07_w.nr_autorizacao, 'N', movto_cartao_cr_w.nr_autorizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; movto_cartao_cr_w.nr_autorizacao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_FORMA_PAGTO', c07_w.nr_seq_forma_pagto, 'S', movto_cartao_cr_w.nr_seq_forma_pagto) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; movto_cartao_cr_w.nr_seq_forma_pagto := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'VL_CARTAO', c07_w.vl_cartao, 'N', movto_cartao_cr_w.vl_transacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; movto_cartao_cr_w.vl_transacao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_PARCELA', c07_w.qt_parcela, 'N', movto_cartao_cr_w.qt_parcela) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; movto_cartao_cr_w.qt_parcela := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_COMPROVANTE', c07_w.ds_comprovante, 'N', movto_cartao_cr_w.ds_comprovante) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; movto_cartao_cr_w.ds_comprovante := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_TRANS_CAIXA', c07_w.nr_seq_trans_caixa, 'S', movto_cartao_cr_w.nr_seq_trans_caixa) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; movto_cartao_cr_w.nr_seq_trans_caixa := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_PESSOA_FISICA', c07_w.cd_pessoa_fisica, 'S', movto_cartao_cr_w.cd_pessoa_fisica) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; movto_cartao_cr_w.cd_pessoa_fisica := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_CGC', c07_w.cd_cgc, 'S', movto_cartao_cr_w.cd_cgc) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; movto_cartao_cr_w.cd_cgc := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_OBSERVACAO', c07_w.ds_observacao, 'N', movto_cartao_cr_w.ds_observacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; movto_cartao_cr_w.ds_observacao := _ora2pg_r.ds_valor_retorno_p;
 
			if (reg_integracao_w.qt_reg_log = 0) then 
				 
				movto_cartao_cr_w.cd_estabelecimento := cd_estabelecimento_w;
				movto_cartao_cr_w.dt_atualizacao	 := clock_timestamp();
				movto_cartao_cr_w.dt_transacao		 := clock_timestamp();
				movto_cartao_cr_w.ie_lib_caixa		 := 'N';
				movto_cartao_cr_w.ie_situacao		 := 'A';
				movto_cartao_cr_w.nm_usuario		 := 'TASY_INTEGR';
				 
				select	nextval('movto_cartao_cr_seq') 
				into STRICT	movto_cartao_cr_w.nr_sequencia 
				;
				 
				--movto_cartao_cr_w.nr_sequencia		 := movto_cartao_cr_seq.nextval; 
				movto_cartao_cr_w.nr_seq_caixa_rec	 := caixa_receb_w.nr_sequencia;
				 
				 
				insert into	movto_cartao_cr values (movto_cartao_cr_w.*);
				 
				CALL gerar_cartao_cr_parcela( movto_cartao_cr_w.nr_sequencia, 
										 movto_cartao_cr_w.nm_usuario, 
										 null );
			 
			end if;
			 
			end;
		end loop;
		close C07;
		 
		/*Insert na MOVTO_TRANS_FINANC nao precisa pois isso o TASY efetuará automaticamente ao confirmar o recebimento*/
 
		 
		/*Fechar recebimento*/
 
		vl_troco_w := 0;
		vl_troco_w := fechar_caixa_receb( caixa_receb_w.nr_sequencia, 'N', 'TASY_INTEGR', vl_troco_w, caixa_receb_w.dt_recebimento);
							 
		if (vl_troco_w < 0) then 
			vl_troco_w := fechar_caixa_receb( caixa_receb_w.nr_sequencia, 'S', 'TASY_INTEGR', vl_troco_w, caixa_receb_w.dt_recebimento);
		end if;
						  								 
	end if;
		 
	end;
end loop;
close C01;
exception 
when others then 
	begin 
	/*'Em caso de qualquer falha o sistema captura a mensagem de erro, efetua o rollback, atualiza o status para Erro e registra a falha ocorrida'*/
 
	ds_erro_w	:= substr(sqlerrm,1,4000);
	rollback;
	update	intpd_fila_transmissao 
	set		ie_status 		= 'E', 
			ds_log 			= ds_erro_w 
	where	nr_sequencia 	= nr_sequencia_p;
				 				  
	end;
end;
 
if (reg_integracao_w.qt_reg_log > 0) then 
	begin 
	/*'Em caso de qualquer consistência o sistema efetua rollback, atualiza o status para Erro e registra todos os logs de consistência'*/
 
	rollback;
	 
	update	intpd_fila_transmissao 
	set		ie_status 		= 'E', 
			ds_log 			= ds_erro_w 
	where	nr_sequencia 	= nr_sequencia_p;
	 
	for i in 0..reg_integracao_w.qt_reg_log-1 loop 
		intpd_gravar_log_recebimento(nr_sequencia_p,reg_integracao_w.intpd_log_receb[i].ds_log,'INTPDTASY');
	end loop;
	end;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intpd_receb_caixa_receb ( nr_sequencia_p bigint, xml_p xml) FROM PUBLIC;

