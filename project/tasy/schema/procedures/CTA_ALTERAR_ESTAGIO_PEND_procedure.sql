-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cta_alterar_estagio_pend ( nr_seq_pend_p bigint, nr_seq_estagio_novo_p bigint, ds_historico_p text, nm_usuario_p text) AS $body$
DECLARE

 
ie_tipo_estagio_w		varchar(15);
nr_seq_tipo_w			bigint;
dt_pendencia_w			timestamp;
nr_seq_regra_resp_w		bigint;
nr_seq_regra_item_w		bigint;
nr_interno_conta_w		bigint;
dt_inicio_auditoria_w		timestamp;
dt_final_auditoria_w		timestamp;
nr_seq_auditoria_w		bigint;
nr_seq_audit_w			bigint;
ds_historico_w			varchar(4000);
qt_estagio_conta_audit_w	bigint;
ie_consiste_conta_periodo_w	varchar(1);
nr_atendimento_w		atendimento_paciente.nr_atendimento%type;
ie_tipo_estagio_ww		varchar(1);

C01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	auditoria_conta_paciente 
	where	nr_interno_conta = nr_interno_conta_w 
	and 	coalesce(dt_liberacao::text, '') = '' 
	and 	dt_periodo_inicial = dt_inicio_auditoria_w 
	and 	dt_periodo_final = dt_final_auditoria_w 
	order by nr_sequencia;
				

BEGIN 
 
ds_historico_w:= substr(ds_historico_p,1,4000);
 
ie_consiste_conta_periodo_w := coalesce(Obter_valor_param_usuario(7042, 36, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');
 
select 	max(nr_seq_tipo), 
	max(dt_pendencia), 
	max(nr_interno_conta), 
	max(dt_inicio_auditoria), 
	max(dt_final_auditoria), 
	max(nr_seq_auditoria), 
	max(nr_atendimento) 
into STRICT	nr_seq_tipo_w, 
	dt_pendencia_w, 
	nr_interno_conta_w, 
	dt_inicio_auditoria_w, 
	dt_final_auditoria_w, 
	nr_seq_audit_w, 
	nr_atendimento_w 
from 	cta_pendencia 
where 	nr_sequencia = nr_seq_pend_p;
 
 
select 	coalesce(max(ie_tipo_estagio),'A') 
into STRICT	ie_tipo_estagio_w 
from 	cta_estagio_pend 
where 	nr_sequencia = nr_seq_estagio_novo_p;
 
SELECT * FROM cta_obter_regra_resp_pend(nr_seq_tipo_w, nr_seq_estagio_novo_p, dt_pendencia_w, nr_seq_regra_resp_w, nr_seq_regra_item_w) INTO STRICT nr_seq_regra_resp_w, nr_seq_regra_item_w;
 
if (nr_seq_regra_resp_w = 0) then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(260530);
end if;
 
nr_seq_auditoria_w:= 0;
 
open C01;
loop 
fetch C01 into	 
	nr_seq_auditoria_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin	 
	nr_seq_auditoria_w:= nr_seq_auditoria_w;	
	end;
end loop;
close C01;
 
-- Se a pendência está ligada há uma auditoria e existem mais de uma auditoria para essa conta, pegar a última auditoria da conta no mesmo período caso tenha mais de uma 
if	((coalesce(nr_seq_audit_w,0) > 0) and (coalesce(nr_seq_auditoria_w,0) > 0) and (coalesce(nr_seq_audit_w,0) <> coalesce(nr_seq_auditoria_w,0))) then 
	 
	update	cta_pendencia 
	set 	nr_seq_auditoria = nr_seq_auditoria_w 
	where 	nr_sequencia = nr_seq_pend_p;
 
end if;
 
if (ie_consiste_conta_periodo_w = 'S') then 
 
	select 	count(*) 
	into STRICT	qt_estagio_conta_audit_w 
	from 	cta_pendencia 
	where 	nr_interno_conta = nr_interno_conta_w 
	and 	dt_inicio_auditoria = dt_inicio_auditoria_w 
	and 	dt_final_auditoria = dt_final_auditoria_w 
	and 	nr_seq_estagio = nr_seq_estagio_novo_p;
 
	if (qt_estagio_conta_audit_w > 0) then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(260531);
	end if;
end if;
 
CALL Cta_registrar_historico_pend(nr_seq_pend_p, nr_seq_estagio_novo_p, ds_historico_w, '1', nm_usuario_p);
				  
update	cta_pendencia 
set 	nr_seq_estagio = nr_seq_estagio_novo_p, 
	nr_seq_regra_resp = nr_seq_regra_resp_w, 
	dt_fechamento = CASE WHEN ie_tipo_estagio_w='F' THEN  clock_timestamp()  ELSE null END  
where 	nr_sequencia = nr_seq_pend_p;
 
select	CASE WHEN ie_tipo_estagio_w='F' THEN 'F'  ELSE 'E' END  
into STRICT	ie_tipo_estagio_ww
;
 
CALL cta_enviar_email(nr_atendimento_w,nr_interno_conta_w,nr_seq_pend_p,nr_seq_tipo_w,nr_seq_estagio_novo_p,ie_tipo_estagio_ww,ds_historico_w,nm_usuario_p);
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cta_alterar_estagio_pend ( nr_seq_pend_p bigint, nr_seq_estagio_novo_p bigint, ds_historico_p text, nm_usuario_p text) FROM PUBLIC;

