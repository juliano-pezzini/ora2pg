-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nf_entrada_saida_rateio (nr_seq_nota_p nota_fiscal.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


nr_seq_nota_nova_w  nota_fiscal.nr_sequencia%type;
qt_registro_w    integer;
cd_pessoa_fisica_w		varchar(10);
cd_estabelecimento_w nota_fiscal.cd_estabelecimento%type;

--Cursor para buscar as notas de rateio de entrada
c01 CURSOR(nr_seq_nota_pc  nota_fiscal.nr_sequencia%type,
			cd_estabelecimento_pc nota_fiscal.cd_estabelecimento%type) FOR
  SELECT  n.nr_sequencia nr_seq_rateio,
    n.nr_seq_nota,
    n.nr_ordem_compra,
    n.nr_item_oci,
    n.nr_seq_oc_nf_rateio,
    n.cd_estab_rateio,
    n.cd_empresa_rateio,
    n.vl_parcela,
    n.pr_parcela,
    n.cd_condicao_pagamento,
    n.cd_natureza_operacao,
    n.cd_operacao_nf,
    n.cd_serie_nf,
    n.nr_seq_classif_fiscal,
    n.ie_entrada_saida,
    n.ie_situacao,
    e.cd_cgc,
    i.cd_material,
    i.qt_material
  from  nota_fiscal_oc_rateio n,
    estabelecimento e,
    ordem_compra_item i
  where n.cd_estab_rateio = e.cd_estabelecimento
  and n.nr_ordem_compra = i.nr_ordem_compra
  and n.nr_item_oci = i.nr_item_oci
  and n.nr_seq_nota = nr_seq_nota_pc
  and n.ie_entrada_saida = 'E'
  and n.cd_estab_rateio != cd_estabelecimento_pc;

--Cursor para buscar as notas de rateio de saida
c02 CURSOR(nr_seq_nota_pc  nota_fiscal.nr_sequencia%type,
			cd_estabelecimento_pc nota_fiscal.cd_estabelecimento%type) FOR
  SELECT  nr.nr_sequencia nr_seq_rateio,
    nr.nr_seq_nota,
    nr.nr_ordem_compra,
    nr.nr_item_oci,
    nr.nr_seq_oc_nf_rateio,
    nr.cd_estab_rateio,
    nr.cd_empresa_rateio,
    nr.vl_parcela,
    nr.pr_parcela,
    nr.cd_condicao_pagamento,
    nr.cd_natureza_operacao,
    nr.cd_operacao_nf,
    nr.cd_serie_nf,
    nr.nr_seq_classif_fiscal,
    nr.ie_entrada_saida,
    nr.ie_situacao,
    nf.cd_estabelecimento,
    nf.cd_cgc_emitente,
    i.cd_material,
    i.qt_material
  from  nota_fiscal_oc_rateio nr,
    nota_fiscal nf,
    ordem_compra_item i
  where  nr.nr_seq_nota = nf.nr_sequencia
  and  nr.nr_ordem_compra = i.nr_ordem_compra
  and  nr.nr_item_oci = i.nr_item_oci
  and  nr.nr_seq_nota = nr_seq_nota_pc
  and  nr.ie_entrada_saida = 'S'
  and  nr.cd_estab_rateio != cd_estabelecimento_pc;
BEGIN
if (nr_seq_nota_p IS NOT NULL AND nr_seq_nota_p::text <> '') then
  select  count(1)
  into STRICT  qt_registro_w
  from  nota_fiscal_oc_rateio
  where  nr_seq_nota = nr_seq_nota_p  LIMIT 1;

  -- Verificar se tem rateio na nota
  if (qt_registro_w > 0) then
    select  count(1)
    into STRICT  qt_registro_w
    from  nota_fiscal_oc_rateio
    where  nr_seq_nota  = nr_seq_nota_p
    and  ie_situacao  = 'N'
    and  (nr_seq_nota_rateio IS NOT NULL AND nr_seq_nota_rateio::text <> '');

    -- Obter se ja foi gerada as notas de rateio
    if (qt_registro_w = 0) then
      select cd_pessoa_fisica, cd_estabelecimento
      into STRICT cd_pessoa_fisica_w,
	       cd_estabelecimento_w
      from nota_fiscal
      where nr_sequencia = nr_seq_nota_p;

      -- Gerar as notas de entrada
      for r_C01_w in c01(nr_seq_nota_p, cd_estabelecimento_w) loop
        select  nextval('nota_fiscal_seq')
        into STRICT  nr_seq_nota_nova_w
;

        insert into nota_fiscal(nr_sequencia,
          cd_estabelecimento,
          cd_cgc_emitente,
          cd_serie_nf,
          nr_nota_fiscal,
          nr_sequencia_nf,
          cd_operacao_nf,
          dt_emissao,
          dt_entrada_saida,
          ie_acao_nf,
          ie_emissao_nf,
          ie_tipo_frete,
          vl_mercadoria,
          vl_total_nota,
          qt_peso_bruto,
          qt_peso_liquido,
          dt_atualizacao,
          nm_usuario,
          ie_tipo_nota,
          cd_condicao_pagamento,
          cd_natureza_operacao,
          nr_seq_classif_fiscal,
          ds_observacao,
          vl_ipi,
          vl_descontos,
          vl_frete,
          vl_seguro,
          vl_despesa_acessoria,
          cd_cgc,
          ie_situacao,
          nr_lote_contabil,
          ie_entregue_bloqueto,
          cd_pessoa_fisica)
        values (nr_seq_nota_nova_w, --nr_sequencia
          r_C01_w.cd_estab_rateio, --cd_estabelecimento
          r_C01_w.cd_cgc, --cd_cgc_emitente
          r_C01_w.cd_serie_nf, --cd_serie_nf
          nr_seq_nota_nova_w, --nr_nota_fiscal
          1, --nr_sequencia_nf
          r_C01_w.cd_operacao_nf, --cd_operacao_nf
          clock_timestamp(), --dt_emissao
          clock_timestamp(), --dt_entrada_saida
          '1', --ie_acao_nf
          '0', --ie_emissao_nf
          '0', --ie_tipo_frete
          r_C01_w.vl_parcela, --vl_mercadoria
          r_C01_w.vl_parcela, --vl_total_nota
          0, --qt_peso_bruto
          0, --qt_peso_liquido
          clock_timestamp(),
          nm_usuario_p, -- fim obirgatorios
          r_C01_w.ie_entrada_saida, --ie_tipo_nota
          r_C01_w.cd_condicao_pagamento, --cd_condicao_pagamento
          r_C01_w.cd_natureza_operacao, --cd_natureza_operacao
          r_C01_w.nr_seq_classif_fiscal, --nr_seq_classif_fiscal_p  --nr_seq_classif_fiscal
          '', --ds_observacao
          0, --vl_ipi
          0, --vl_descontos
          0, --vl_frete
          0, --vl_seguro
          0, --vl_despesa_acessoria
          r_C01_w.cd_cgc, --cd_cgc
          '1', --ie_situacao
          0, --nr_lote_contabil
          'N', --ie_entregue_bloqueto
          cd_pessoa_fisica_w);

        insert into nota_fiscal_item(nr_sequencia,
          cd_estabelecimento,
          cd_cgc_emitente,
          cd_serie_nf,
          nr_nota_fiscal,
          nr_sequencia_nf,
          nr_item_nf,
          cd_natureza_operacao,
          qt_item_nf,
          vl_unitario_item_nf,
          vl_total_item_nf,
          vl_liquido,
          vl_frete,
          vl_desconto,
          vl_despesa_acessoria,
          vl_desconto_rateio,
          vl_seguro,
          nm_usuario,
          dt_atualizacao,
          cd_material)
        values (nr_seq_nota_nova_w,
          r_C01_w.cd_estab_rateio, --cd_estabelecimento
          r_C01_w.cd_cgc, --cd_cgc_emitente
          r_C01_w.cd_serie_nf, --cd_serie_nf
          nr_seq_nota_nova_w, --nr_nota_fiscal
          1,
          1,
          r_C01_w.cd_natureza_operacao, --cd_natureza_operacao
          r_C01_w.qt_material,
          r_C01_w.vl_parcela,
          r_C01_w.vl_parcela,
          r_C01_w.vl_parcela,
          0,
          0,
          0,
          0,
          0,
          nm_usuario_p,
          clock_timestamp(), --fim obrigatorios
          r_C01_w.cd_material);

        -- Gravar a nova nota fiscal gerada
        update  nota_fiscal_oc_rateio
        set  nr_seq_nota_rateio  = nr_seq_nota_nova_w,
          ie_situacao    = 'N'
        where  nr_sequencia    = r_C01_w.nr_seq_rateio;
      end loop;

      -- Gerar as notas de saida
      for r_C02_w in c02(nr_seq_nota_p, cd_estabelecimento_w) loop
        select  nextval('nota_fiscal_seq')
        into STRICT  nr_seq_nota_nova_w
;

        insert into nota_fiscal(nr_sequencia,
          cd_estabelecimento,
          cd_cgc_emitente,
          cd_serie_nf,
          nr_nota_fiscal,
          nr_sequencia_nf,
          cd_operacao_nf,
          dt_emissao,
          dt_entrada_saida,
          ie_acao_nf,
          ie_emissao_nf,
          ie_tipo_frete,
          vl_mercadoria,
          vl_total_nota,
          qt_peso_bruto,
          qt_peso_liquido,
          dt_atualizacao,
          nm_usuario,
          ie_tipo_nota,
          cd_condicao_pagamento,
          cd_natureza_operacao,
          nr_seq_classif_fiscal,
          ds_observacao,
          vl_ipi,
          vl_descontos,
          vl_frete,
          vl_seguro,
          vl_despesa_acessoria,
          cd_cgc,
          ie_situacao,
          nr_lote_contabil,
          ie_entregue_bloqueto,
          cd_pessoa_fisica)
        values (nr_seq_nota_nova_w, --nr_sequencia
          r_C02_w.cd_estabelecimento, --cd_estabelecimento
          r_C02_w.cd_cgc_emitente, --cd_cgc_emitente
          r_C02_w.cd_serie_nf, --cd_serie_nf
          nr_seq_nota_nova_w, --nr_nota_fiscal
          1, --nr_sequencia_nf
          r_C02_w.cd_operacao_nf, --cd_operacao_nf
          clock_timestamp(), --dt_emissao
          clock_timestamp(), --dt_entrada_saida
          '1', --ie_acao_nf
          '0', --ie_emissao_nf
          '0', --ie_tipo_frete
          r_C02_w.vl_parcela, --vl_mercadoria
          r_C02_w.vl_parcela, --vl_total_nota
          0, --qt_peso_bruto
          0, --qt_peso_liquido
          clock_timestamp(),
          nm_usuario_p, -- fim obirgatorios
          r_C02_w.ie_entrada_saida, --ie_tipo_nota
          r_C02_w.cd_condicao_pagamento, --cd_condicao_pagamento
          r_C02_w.cd_natureza_operacao, --cd_natureza_operacao
          r_C02_w.nr_seq_classif_fiscal, --nr_seq_classif_fiscal_p  --nr_seq_classif_fiscal
          '', --ds_observacao
          0, --vl_ipi
          0, --vl_descontos
          0, --vl_frete
          0, --vl_seguro
          0, --vl_despesa_acessoria
          r_C02_w.cd_cgc_emitente, --cd_cgc
          '1', --ie_situacao
          0, --nr_lote_contabil
          'N', --ie_entregue_bloqueto
          cd_pessoa_fisica_w);

        insert into nota_fiscal_item(nr_sequencia,
          cd_estabelecimento,
          cd_cgc_emitente,
          cd_serie_nf,
          nr_nota_fiscal,
          nr_sequencia_nf,
          nr_item_nf,
          cd_natureza_operacao,
          qt_item_nf,
          vl_unitario_item_nf,
          vl_total_item_nf,
          vl_liquido,
          vl_frete,
          vl_desconto,
          vl_despesa_acessoria,
          vl_desconto_rateio,
          vl_seguro,
          nm_usuario,
          dt_atualizacao,
          cd_material)
        values (nr_seq_nota_nova_w,
          r_C02_w.cd_estabelecimento, --cd_estabelecimento
          r_C02_w.cd_cgc_emitente, --cd_cgc_emitente
          r_C02_w.cd_serie_nf, --cd_serie_nf
          nr_seq_nota_nova_w, --nr_nota_fiscal
          1,
          1,
          r_C02_w.cd_natureza_operacao, --cd_natureza_operacao
          r_C02_w.qt_material,
          r_C02_w.vl_parcela,
          r_C02_w.vl_parcela,
          r_C02_w.vl_parcela,
          0,
          0,
          0,
          0,
          0,
          nm_usuario_p,
          clock_timestamp(), --fim obrigatorios
          r_C02_w.cd_material);

        -- Gravar a nova nota fiscal gerada
        update  nota_fiscal_oc_rateio
        set nr_seq_nota_rateio = nr_seq_nota_nova_w,
			ie_situacao = 'N'
        where  nr_sequencia = r_C02_w.nr_seq_rateio;
      end loop;
    end if;
  end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nf_entrada_saida_rateio (nr_seq_nota_p nota_fiscal.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

