-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE evento_metas_medicamento (cd_convenio_p bigint, cd_material_p bigint, cd_prof_solicitou_p bigint, cd_prof_autorizou_p bigint, nr_atendimento_p bigint, cd_estabelecimento_p bigint, cd_perfil_p bigint default null, cd_setor_p bigint default null, ds_email_p text default null, nr_telefone_p bigint default null) AS $body$
DECLARE

			
ie_tipo_material_w		cad_metas_medicamentos.ie_tipo_material%type;
qt_estoque_maximo_w		cad_metas_medicamentos.qt_estoque_maximo%type;
qt_estoque_minimo_w		cad_metas_medicamentos.qt_estoque_minimo%type;
vl_meta_w			cad_metas_medicamentos.vl_meta%type;
vl_meta_minima_w		cad_metas_medicamentos.vl_meta_minima%type;
cd_grupo_material_w		cad_metas_medicamentos.cd_grupo_material%type;
cd_subgrupo_material_w		cad_metas_medicamentos.cd_subgrupo_material%type;
cd_classe_material_w		cad_metas_medicamentos.cd_classe_material%type;
cd_estab_w			saldo_estoque.cd_estabelecimento%type;
nr_seq_meta_w			cad_metas_medicamentos.nr_sequencia%type;
cd_material_w			material.cd_material%type;
ds_material_w			material.ds_material%type;
cd_local_estoque_w		local_estoque.cd_local_estoque%type;
ds_local_estoque_w		local_estoque.ds_local_estoque%type;
qt_material_w			prescr_material.qt_material%type;
ie_med_alto_custo_w		cad_metas_medicamentos.ie_med_alto_custo%type;
nr_prescricao_w         prescr_material.nr_prescricao%type;


C01 CURSOR FOR
	SELECT	b.ie_tipo_material,
		b.qt_estoque_maximo,
		b.qt_estoque_minimo,
		b.vl_meta,
		b.vl_meta_minima,
		b.cd_grupo_material,
		b.cd_subgrupo_material,
		b.cd_classe_material,
		b.nr_sequencia,
		b.cd_local_estoque,
		coalesce(b.ie_med_alto_custo,'N')
	from	cad_metas_medicamentos b
	where	coalesce(b.ie_situacao,'A') = 'A'
	and	b.cd_convenio = coalesce(cd_convenio_p, b.cd_convenio)
	and	b.cd_material = cd_material_p
	order by b.nm_meta;
	
C02 CURSOR FOR
	SELECT	b.ds_material
    into STRICT ds_material_w
	from	saldo_estoque a,
		material b,
		grupo_material d,
		subgrupo_material c,
		Classe_material e
	where	b.cd_classe_material = e.cd_classe_material
	and	e.cd_subgrupo_material = c.cd_subgrupo_material
	and c.cd_grupo_material = d.cd_grupo_material
	and	a.cd_material = b.cd_material
    and ((b.cd_classe_material = cd_classe_material_w) or (coalesce(cd_classe_material_w,0) = 0))
    and ((c.cd_grupo_material = cd_grupo_material_w) or (coalesce(cd_grupo_material_w,0) = 0))
    and ((e.cd_subgrupo_material = cd_subgrupo_material_w) or (coalesce(cd_subgrupo_material_w,0) = 0))
    and ((b.ie_tipo_material = ie_tipo_material_w) or (coalesce(ie_tipo_material_w,'0') = '0'))
    and ((b.cd_material = cd_material_p) or (coalesce(cd_material_p,0) = 0))
	and	not exists ( 	SELECT	1
				from	cad_metas_medicamentos b
				where	coalesce(b.ie_situacao,'A') = 'A'
				and	coalesce(b.ie_excecao,'N') = 'S'
				and	b.nr_sequencia = nr_seq_meta_w	)
	and	a.cd_estabelecimento = coalesce(cd_estabelecimento_p, a.cd_estabelecimento)
	and	pkg_date_utils.start_of(a.dt_mesano_referencia, 'MONTH', 0) = pkg_date_utils.start_of(clock_timestamp(), 'MONTH', 0)
    and ESTABLISHMENT_TIMEZONE_UTILS.startOfmonth(a.dt_mesano_referencia) = ESTABLISHMENT_TIMEZONE_UTILS.startOfmonth(clock_timestamp())
	and	a.cd_local_estoque = cd_local_estoque_w
	and (ie_med_alto_custo_w = 'S')
    and	((ie_med_alto_custo_w = 'S')
		or ((coalesce(qt_material_w,0) >= coalesce(qt_estoque_maximo_w,0)) or (coalesce(qt_material_w,0) <= coalesce(qt_estoque_minimo_w,0))))
;
C03 CURSOR FOR
	SELECT	b.ds_material
	from	saldo_estoque a,
		material b,
		grupo_material d,
		subgrupo_material c,
		classe_material e
	where	b.cd_classe_material = e.cd_classe_material
	and	e.cd_subgrupo_material = c.cd_subgrupo_material
	and 	c.cd_grupo_material = d.cd_grupo_material
	and	a.cd_material = b.cd_material
    and ((b.cd_classe_material = cd_classe_material_w) or (coalesce(cd_classe_material_w,0) = 0))
    and ((c.cd_grupo_material = cd_grupo_material_w) or (coalesce(cd_grupo_material_w,0) = 0))
    and ((e.cd_subgrupo_material = cd_subgrupo_material_w) or (coalesce(cd_subgrupo_material_w,0) = 0))
    and ((b.ie_tipo_material = ie_tipo_material_w) or (coalesce(ie_tipo_material_w,'0') = '0'))
    and ((b.cd_material = cd_material_p) or (coalesce(cd_material_p,0) = 0))
	and	not exists ( 	SELECT	1
				from	cad_metas_medicamentos b
				where	coalesce(b.ie_situacao,'A') = 'A'
				and	coalesce(b.ie_excecao,'N') = 'S'
				and	b.nr_sequencia = nr_seq_meta_w	)
	and	a.cd_estabelecimento = coalesce(cd_estabelecimento_p, a.cd_estabelecimento)
	and	pkg_date_utils.start_of(a.dt_mesano_referencia, 'MONTH', 0) = pkg_date_utils.start_of(clock_timestamp(), 'MONTH', 0)
	and	a.cd_local_estoque = cd_local_estoque_w
	and	((ie_med_alto_custo_w = 'S')
		or (((coalesce(qt_material_w,0)*coalesce(a.vl_custo_medio,0)) <= coalesce(vl_meta_w,0)) or ((coalesce(qt_material_w,0)*coalesce(a.vl_custo_medio,0)) >= coalesce(vl_meta_minima_w,0))));
		

BEGIN
open C01;
loop
fetch C01 into	
	ie_tipo_material_w,
	qt_estoque_maximo_w,
	qt_estoque_minimo_w,
	vl_meta_w,
	vl_meta_minima_w,
	cd_grupo_material_w,
	cd_subgrupo_material_w,
	cd_classe_material_w,
	nr_seq_meta_w,
	cd_local_estoque_w,
	ie_med_alto_custo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select 	sum(qt_material)
	into STRICT	qt_material_w
	from 	prescr_material
	where 	cd_material = cd_material_p
	and	coalesce(dt_liberacao,coalesce(dt_lib_material,coalesce(dt_lib_farmacia,dt_lib_enfermagem))) is not null
	and	pkg_date_utils.start_of(coalesce(dt_liberacao,coalesce(dt_lib_material,coalesce(dt_lib_farmacia,dt_lib_enfermagem))), 'MONTH', 0) = pkg_date_utils.start_of(clock_timestamp(), 'MONTH', 0);	

    open C02;
	loop
	fetch C02 into	
		ds_material_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin			
		if (ds_material_w IS NOT NULL AND ds_material_w::text <> '') then
			ds_local_estoque_w := obter_desc_local_estoque(cd_local_estoque_w);
			Enviar_evento_medicamento(cd_convenio_p, ds_material_w, cd_prof_solicitou_p, cd_prof_autorizou_p, cd_estabelecimento_p, nr_seq_meta_w, coalesce(nr_atendimento_p,0), cd_perfil_p, cd_setor_p, ds_email_p, nr_telefone_p, 'E', ds_local_estoque_w);
		end if;
		end;
	end loop;
	close C02;
	
	open C03;
	loop
	fetch C03 into	
		ds_material_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		if (ds_material_w IS NOT NULL AND ds_material_w::text <> '') then
			ds_local_estoque_w := obter_desc_local_estoque(cd_local_estoque_w);
			Enviar_evento_medicamento(cd_convenio_p, ds_material_w, cd_prof_solicitou_p, cd_prof_autorizou_p, cd_estabelecimento_p, nr_seq_meta_w, coalesce(nr_atendimento_p,0), cd_perfil_p, cd_setor_p, ds_email_p, nr_telefone_p, 'V', ds_local_estoque_w);
		end if;
		end;
	end loop;
	close C03;
	
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE evento_metas_medicamento (cd_convenio_p bigint, cd_material_p bigint, cd_prof_solicitou_p bigint, cd_prof_autorizou_p bigint, nr_atendimento_p bigint, cd_estabelecimento_p bigint, cd_perfil_p bigint default null, cd_setor_p bigint default null, ds_email_p text default null, nr_telefone_p bigint default null) FROM PUBLIC;

