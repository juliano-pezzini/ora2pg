-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_glosa_oc_analise ( nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nr_seq_analise_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_solicitado_w		double precision;
vl_solicitado_w		double precision;
qt_autorizado_w		double precision;
vl_unitario_w		double precision;
vl_calculado_w		double precision;
vl_glosa_w		double precision;
nr_seq_ocorrencia_w	bigint;
nr_seq_glosa_w		bigint;
nr_seq_conta_item_w	bigint;
nr_seq_glosa_ref_w	bigint;
qt_glosa_w		bigint;
nr_seq_item_w		bigint;
nr_seq_motivo_padrao_w	bigint;
nr_seq_conta_w		bigint;
nr_seq_conta_mat_w	bigint;
nr_seq_conta_proc_w	bigint;
nr_seq_glosa_oc_w	bigint;
nr_seq_grupo_w		bigint;
ds_observacao_w		varchar(4000);
cd_codigo_w		varchar(15);
ie_pre_analise_w	varchar(2);
ie_auditoria_w		varchar(2);
ie_finalizar_analise_w	varchar(2);
ie_tipo_motivo_w	varchar(1) := 'P';
ie_tipo_w		varchar(1);
ie_tipo_glosa_w		varchar(1);
ie_glosar_pagamento_w	varchar(1);
ie_glosar_faturamento_w varchar(1);
ie_origem_conta_w	varchar(1);
ie_existe_grupo_glosa_w varchar(1);
ie_status_w		varchar(1);
ie_tipo_despesa_proc_w	varchar(1);
ie_tipo_despesa_mat_w	varchar(1);
nr_seq_grupo_oc_w	bigint;
qt_despesa_w		bigint;
ie_gera_grupo_w		varchar(1) := 'S';
ie_origem_analise_w	pls_analise_conta.ie_origem_analise%type;

C01 CURSOR FOR
	SELECT	substr(tiss_obter_motivo_glosa(nr_seq_motivo_glosa,'C'),1,10) cd_codigo,
		substr(ds_observacao,1,255) ds_observacao,
		'G' ie_tipo,
		a.nr_seq_conta_mat	nr_seq_mat,
		a.nr_seq_conta_proc	nr_seq_proc,
		a.nr_sequencia,
		null,
		a.qt_glosa,
		a.vl_glosa,
		null,
		null,		
		a.nr_sequencia,
		null,		
		'S',
		null,
		null
	from	pls_conta_glosa	a
	where	((nr_seq_conta_mat 	= nr_seq_conta_mat_p) or (nr_seq_conta_proc 	= nr_seq_conta_proc_p))
	and	coalesce(nr_seq_ocorrencia_benef,0) = 0 -- Diego 28/04/2011 - So ira gerar glosas na analise se estas nao foram GERADAS POR OCORRENCIAS ou geram ocorrencias ou sejam Nao possuem representante em ocorrencias
	and	not exists (	SELECT	x.nr_sequencia
				from	pls_ocorrencia_benef x
				where	x.nr_seq_glosa = a.nr_sequencia	) -- Diego 28/04/2011 - So ira gerar glosas na analise se estas nao foram geradas por ocorrencias ou GERARAM OCORRENCIAS ou sejam Nao possuem representante em ocorrencias
	
union

	select	b.cd_ocorrencia cd_codigo,
		substr(b.ds_documentacao,1,4000) ds_observacao,
		'O' ie_tipo,
		a.nr_seq_mat	nr_seq_mat,
		a.nr_seq_proc	nr_seq_proc,
		a.nr_sequencia,
		coalesce(a.nr_seq_glosa, (	select	max(x.nr_sequencia)
					from	pls_conta_glosa x
					where	x.nr_seq_ocorrencia_benef = a.nr_sequencia )), -- Diego 28/04/2011 - Cria o vinculo com a glosa sera aquela gerada pela ocorrencia ou que gerou a ocorrencia
		a.qt_glosa,
		a.vl_glosa,
		coalesce(b.ie_auditoria_conta,'N'),
		a.nr_sequencia,
		null,
		b.ie_finalizar_analise,		
		b.ie_glosar_pagamento,
		b.ie_glosar_faturamento,
		coalesce(b.ie_pre_analise,'N')
	from	pls_ocorrencia_benef	a,
		pls_ocorrencia		b
	where	a.nr_seq_ocorrencia = b.nr_sequencia
	and	coalesce(nr_seq_guia_plano::text, '') = ''
	and	coalesce(nr_seq_requisicao::text, '') = ''
	and	((nr_seq_mat 	= nr_seq_conta_mat_p) or (nr_seq_proc 	= nr_seq_conta_proc_p));

C02 CURSOR FOR
	SELECT	a.nr_seq_grupo,
		a.nr_sequencia
	from	pls_ocorrencia_grupo a,
		pls_ocorrencia_benef b,
		pls_ocorrencia c
	where	a.nr_seq_ocorrencia = c.nr_sequencia
	and	b.nr_seq_ocorrencia = c.nr_sequencia
	and	coalesce(a.ie_origem_conta,ie_origem_conta_w) = ie_origem_conta_w
	and	coalesce(a.ie_conta_medica,'S') = 'S'
	and	a.ie_situacao = 'A'
	and	((coalesce(a.ie_tipo_analise::text, '') = '') or (a.ie_tipo_analise = 'A') or (a.ie_tipo_analise = 'C' and ie_origem_analise_w in ('1','3','4','5','6')) or (a.ie_tipo_analise	= 'P' and ie_origem_analise_w in ('2','7')))
	and	b.nr_sequencia = nr_seq_ocorrencia_w
	and	not exists (SELECT	x.nr_sequencia
				 from	pls_analise_grupo_item x
				 where	x.nr_seq_item_analise	= nr_seq_item_w
				 and	x.nr_seq_grupo		= a.nr_seq_grupo);	


BEGIN

select	nr_seq_conta
into STRICT	nr_seq_conta_w
from	pls_conta_proc
where	nr_sequencia = nr_seq_conta_proc_p

union

SELECT	nr_seq_conta
from	pls_conta_mat
where	nr_sequencia = nr_seq_conta_mat_p;

select	max(ie_origem_conta)
into STRICT	ie_origem_conta_w
from	pls_conta
where	nr_sequencia = nr_seq_conta_w;

select	max(ie_origem_analise)
into STRICT	ie_origem_analise_w
from	pls_analise_conta
where	nr_sequencia = nr_seq_analise_p;

/*Inserir glosas e ocorrencias  do proc/mat*/

open C01;
loop
fetch C01 into
	cd_codigo_w,
	ds_observacao_w,
	ie_tipo_w,
	nr_seq_conta_mat_w,
	nr_seq_conta_proc_w,
	nr_seq_glosa_oc_w,
	nr_seq_glosa_ref_w,
	qt_glosa_w,
	vl_glosa_w,
	ie_auditoria_w,
	nr_seq_ocorrencia_w,
	nr_seq_glosa_w,
	ie_finalizar_analise_w,
	ie_glosar_pagamento_w,
	ie_glosar_faturamento_w,
	ie_pre_analise_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	if (ie_glosar_pagamento_w = 'S') and (ie_glosar_faturamento_w = 'S') then
		ie_tipo_glosa_w := 'A';
	elsif (ie_glosar_pagamento_w = 'S') then
		ie_tipo_glosa_w := 'P';
	elsif (ie_glosar_faturamento_w = 'S') then
		ie_tipo_glosa_w := 'F';
	else
		ie_tipo_glosa_w := null;
	end if;
	
	select  nextval('pls_analise_conta_item_seq')
	into STRICT	nr_seq_item_w
	;
	
	if (coalesce(nr_seq_conta_proc_w,0) > 0) then
		
		select	qt_procedimento_imp,
			vl_procedimento_imp,
			qt_autorizado,
			(vl_procedimento/CASE WHEN coalesce(qt_procedimento_imp,0)=0 THEN 1  ELSE qt_procedimento_imp END ),
			vl_procedimento
		into STRICT	qt_solicitado_w,
			vl_solicitado_w,
			qt_autorizado_w,
			vl_unitario_w,
			vl_calculado_w
		from	pls_conta_proc
		where	nr_sequencia	= nr_seq_conta_proc_w;
		
		qt_glosa_w	:= qt_solicitado_w;			
		vl_glosa_w	:= vl_solicitado_w;
		
	elsif (coalesce(nr_seq_conta_mat_w,0) > 0) then
		
		select	qt_material_imp,
			vl_material_imp,
			qt_autorizado,
			(vl_material/CASE WHEN coalesce(qt_material_imp,0)=0 THEN 1  ELSE qt_material_imp END ),
			vl_material
		into STRICT	qt_solicitado_w,
			vl_solicitado_w,
			qt_autorizado_w,
			vl_unitario_w,
			vl_calculado_w
		from	pls_conta_mat
		where	nr_sequencia = nr_seq_conta_mat_w;
		
		qt_glosa_w	:= qt_solicitado_w;			
		vl_glosa_w	:= vl_solicitado_w;
		
	end if;

	if (ie_pre_analise_w = 'S') and (ie_origem_conta_w <> 'A') then
		ie_tipo_motivo_w := 'I';
		qt_glosa_w := 0;
		vl_glosa_w := 0;
	end if;
	
	if (ie_auditoria_w = 'N') and (ie_tipo_w = 'O') then
		ie_tipo_motivo_w := 'I'; /*Diego Os 342553 - Caso a ocorrencia nao seja de auditoria sera meramente informativa.*/
		qt_glosa_w := 0;
		vl_glosa_w := 0;
	else
		if (coalesce(ie_finalizar_analise_w,'S') = 'S') then
			ie_tipo_motivo_w := 'P';
		else
			ie_tipo_motivo_w := 'E';
		end if;
	end if;

	insert into pls_analise_conta_item(cd_codigo, ds_obs_glosa_oc, dt_atualizacao,
		 dt_atualizacao_nrec, ie_situacao, ie_status,
		 ie_tipo, nm_usuario, nm_usuario_nrec,
		 nr_seq_analise, nr_seq_conta, nr_seq_conta_mat,
		 nr_seq_conta_proc, nr_seq_glosa_oc, nr_sequencia,
		 qt_glosa, vl_glosa, ie_fechar_conta,
		 nr_seq_glosa_ref, nr_seq_ocorrencia, nr_seq_glosa,
		 ie_finalizar_analise, ie_tipo_glosa)
	values (cd_codigo_w, ds_observacao_w, clock_timestamp(),
		 clock_timestamp(), 'A', ie_tipo_motivo_w,
		 ie_tipo_w, nm_usuario_p, nm_usuario_p,
		 nr_seq_analise_p, nr_seq_conta_w, nr_seq_conta_mat_w,
		 nr_seq_conta_proc_w, nr_seq_glosa_oc_w, nr_seq_item_w,
		 qt_glosa_w, vl_glosa_w, pls_obter_glos_oco_permite(cd_codigo_w, ie_tipo_w),
		 nr_seq_glosa_ref_w, nr_seq_ocorrencia_w, nr_seq_glosa_w,
		 ie_finalizar_analise_w, ie_tipo_glosa_w);
		
	if (coalesce(nr_seq_ocorrencia_w,0) > 0) then
		if	not (ie_pre_analise_w = 'S' AND ie_origem_conta_w <> 'A') then
			open C02;
			loop
			fetch C02 into	
				nr_seq_grupo_w,
				nr_seq_grupo_oc_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				ie_gera_grupo_w := 'S';
				
				ie_tipo_despesa_proc_w:= null;
				ie_tipo_despesa_mat_w:= null;
				
				select	count(1)
				into STRICT 	qt_despesa_w
				from	pls_oc_grupo_tipo_desp
				where	nr_seq_ocorrencia_grupo = nr_seq_grupo_oc_w;
				
				if (qt_despesa_w > 0) then
					if (nr_seq_conta_proc_p > 0) then
						select	max(ie_tipo_despesa)
						into STRICT	ie_tipo_despesa_proc_w
						from	pls_conta_proc
						where	nr_sequencia = nr_seq_conta_proc_p;
						
						if (ie_tipo_despesa_proc_w IS NOT NULL AND ie_tipo_despesa_proc_w::text <> '') then
							select	count(1)
							into STRICT 	qt_despesa_w
							from	pls_oc_grupo_tipo_desp
							where	nr_seq_ocorrencia_grupo = nr_seq_grupo_oc_w
							and	ie_tipo_despesa_proc = ie_tipo_despesa_proc_w;
							
							if (coalesce(qt_despesa_w,0) = 0) then
								ie_gera_grupo_w := 'N';
							end if;
						end if;
					elsif (nr_seq_conta_mat_p > 0) then
						select	max(ie_tipo_despesa)
						into STRICT	ie_tipo_despesa_mat_w
						from	pls_conta_mat
						where	nr_sequencia = nr_seq_conta_mat_p;
						
						if (ie_tipo_despesa_mat_w IS NOT NULL AND ie_tipo_despesa_mat_w::text <> '') then
							select	count(1)
							into STRICT 	qt_despesa_w
							from	pls_oc_grupo_tipo_desp
							where	nr_seq_ocorrencia_grupo = nr_seq_grupo_oc_w
							and	ie_tipo_despesa_mat = ie_tipo_despesa_mat_w;
							
							if (coalesce(qt_despesa_w,0) = 0) then
								ie_gera_grupo_w := 'N';
							end if;
						end if;
					end if;
				end if;
				
				if (ie_gera_grupo_w = 'S') then
					insert into pls_analise_grupo_item(nr_sequencia, cd_estabelecimento, dt_atualizacao,
						 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
						 nr_seq_grupo, nr_seq_item_analise)
					values (nextval('pls_analise_grupo_item_seq'), cd_estabelecimento_p, clock_timestamp(),
						nm_usuario_p, clock_timestamp(), nm_usuario_p,
						nr_seq_grupo_w, nr_seq_item_w);
				end if;
				
				end;
			end loop;
			close C02;
			
		end if;

	end if;
	
	end;
end loop;
close C01;

CALL pls_atualizar_grupos_aud_conta(	nr_seq_conta_proc_p, nr_seq_conta_mat_p, nr_seq_analise_p,
				cd_estabelecimento_p, nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_glosa_oc_analise ( nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nr_seq_analise_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

