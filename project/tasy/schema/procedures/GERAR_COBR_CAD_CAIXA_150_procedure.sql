-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cobr_cad_caixa_150 ( nr_seq_cobr_escrit_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* layout CAIXA 150 posições
arquivo de Cadastramento de Débito Automático (tipo "B") */
ds_conteudo_w		varchar(150);
qt_reg_arquivo_w	bigint := 0;

/* Header - A - Trailler - Z*/

dt_geracao_arquivo_w	varchar(8);
ds_banco_w		varchar(20);
cd_banco_w		varchar(3);
nm_empresa_w		varchar(20);
cd_convenio_banco_w	varchar(20);
vl_total_w		varchar(17);
vl_soma_w		double precision := 0;

/* Registros */

ie_ident_cliente_w	varchar(25);
ie_ident_cliente_2_w	varchar(25);
cd_agencia_bancaria_w	varchar(4);
nr_conta_w		varchar(8);
ie_digito_w		varchar(3);
ds_ocorrencia_1_w	varchar(40);
ds_ocorrencia_2_w	varchar(40);
ds_ocorencia_w		varchar(60);
dt_vencimento_w		varchar(8);
vl_debito_w		varchar(15);
cd_moeda_w		varchar(2);
vl_cobranca_w		double precision := 0;
nr_titulo_w		varchar(60);
nr_seq_pagador_w	bigint;
cd_operacao_w		varchar(3);
nr_seq_mensalidade_w	titulo_receber.nr_seq_mensalidade%type;
nr_seq_mens_segurado_w	titulo_receber.nr_seq_mens_segurado%type;
cd_pessoa_fisica_w	titulo_receber.cd_pessoa_fisica%type;

/* Bracos - Zeros */

ds_brancos_52_w		varchar(52);
ds_brancos_25_w		varchar(97);
ds_brancos_20_w		varchar(20);
ds_brancos_109_w	varchar(109);

nr_remessa_w		bigint;

C02 CURSOR FOR
	SELECT	distinct
		lpad(coalesce(coalesce(pls_obter_dados_pagador_fin(f.nr_seq_pagador, 'A'), d.cd_agencia_bancaria), '0'), 4, '0') cd_agencia_bancaria,
		lpad(coalesce(coalesce(pls_obter_dados_pagador_fin(f.nr_seq_pagador, 'C'), d.nr_conta),'0'), 8, '0') nr_conta,
		rpad(substr(coalesce(coalesce(pls_obter_dados_pagador_fin(f.nr_seq_pagador, 'DC'), d.ie_digito_conta), '   '), 1, 1), 1, ' ') ie_digito,
		e.cd_pessoa_fisica,
		e.nr_seq_mensalidade,
		e.nr_seq_mens_segurado,
		coalesce(CASE WHEN coalesce(e.cd_pessoa_fisica::text, '') = '' THEN rpad(' ',3,' ')  ELSE '001' END , '000') cd_operacao,
		rpad(substr(to_char(e.dt_pagamento_previsto, 'YYYYMMDD'), 1, 8), 8, ' ') dt_vencimento,
		lpad(replace(to_char(d.vl_cobranca, 'fm0000000000000.00'), '.', ''), 15, '0') vl_debito,
		rpad(e.nr_titulo, 60, ' ') nr_titulo
	FROM titulo_receber_cobr d, cobranca_escritural a, titulo_receber e
LEFT OUTER JOIN pls_mensalidade f ON (e.nr_seq_mensalidade = f.nr_sequencia)
WHERE a.nr_sequencia		= d.nr_seq_cobranca  and e.nr_titulo		= d.nr_titulo and a.nr_sequencia		= nr_seq_cobr_escrit_p;


BEGIN
delete from w_envio_banco where nm_usuario = nm_usuario_p;

select	lpad(' ',52,' '),
	lpad(' ',25,' '),
	lpad(' ',20,' '),
	lpad(' ',109,' ')
into STRICT	ds_brancos_52_w,
	ds_brancos_25_w,
	ds_brancos_20_w,
	ds_brancos_109_w
;

qt_reg_arquivo_w	:= qt_reg_arquivo_w + 1;

/* Header A */

select	to_char(clock_timestamp(),'YYYYMMDD') dt_geracao_arquivo,
	rpad(substr(upper(elimina_acentuacao(obter_nome_banco(c.cd_banco))),1,20),20,' ') ds_banco,
	lpad(c.cd_banco,3,'0') cd_banco,
	rpad(upper(substr(elimina_acentuacao(obter_razao_social(b.cd_cgc)),1,20)),20,' ') nm_empresa,
	rpad(coalesce(c.cd_conv_banco_deb,c.cd_convenio_banco),20,' ') cd_convenio_banco,
	coalesce(a.nr_remessa,a.nr_sequencia)
into STRICT	dt_geracao_arquivo_w,
	ds_banco_w,
	cd_banco_w,
	nm_empresa_w,
	cd_convenio_banco_w,
	nr_remessa_w
FROM banco_estabelecimento c, estabelecimento b, cobranca_escritural a
LEFT OUTER JOIN banco_carteira d ON (a.nr_seq_carteira_cobr = d.nr_sequencia)
WHERE a.cd_estabelecimento	= b.cd_estabelecimento and a.nr_seq_conta_banco	= c.nr_sequencia  and a.nr_sequencia		= nr_seq_cobr_escrit_p;

ds_conteudo_w	:=	'A1' || cd_convenio_banco_w || nm_empresa_w || cd_banco_w || ds_banco_w || dt_geracao_arquivo_w ||
			lpad(nr_remessa_w, 6, '0') || '04' || 'DEBITO AUTOMATICO' || ds_brancos_52_w;

insert into w_envio_banco(nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	cd_estabelecimento,
	ds_conteudo,
	nr_seq_apres)
values (nextval('w_envio_banco_seq'),
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	cd_estabelecimento_p,
	ds_conteudo_w,
	qt_reg_arquivo_w);

open C02;
loop
fetch C02 into
	cd_agencia_bancaria_w,
	nr_conta_w,
	ie_digito_w,
	cd_pessoa_fisica_w,
	nr_seq_mensalidade_w,
	nr_seq_mens_segurado_w,
	cd_operacao_w,
	dt_vencimento_w,
	vl_debito_w,
	nr_titulo_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	select	substr(pls_obter_dados_segurado(max(x.nr_seq_segurado),'C'),1,25)
	into STRICT	ie_ident_cliente_w
	from	pls_segurado y,
		pls_mensalidade_segurado x
	where	y.cd_pessoa_fisica	= cd_pessoa_fisica_w
	and	x.nr_seq_segurado	= y.nr_sequencia
	and	x.nr_sequencia		= coalesce(nr_seq_mens_segurado_w,x.nr_sequencia)
	and	x.nr_seq_mensalidade	= nr_seq_mensalidade_w;

	if (coalesce(ie_ident_cliente_w::text, '') = '') then

		select	substr(pls_obter_dados_segurado(max(x.nr_seq_segurado),'C'),1,25)
		into STRICT	ie_ident_cliente_w
		from	pls_mensalidade_segurado x
		where	x.nr_sequencia		= coalesce(nr_seq_mens_segurado_w,x.nr_sequencia)
		and	x.nr_seq_mensalidade	= nr_seq_mensalidade_w;

	end if;

	ie_ident_cliente_w	:= rpad(coalesce(ie_ident_cliente_w,'0'),25,' ');

	-- Registro E
	ds_conteudo_w	:=	'E' || ie_ident_cliente_w || cd_agencia_bancaria_w || cd_operacao_w || nr_conta_w || ie_digito_w || '  ' ||
				rpad(' ',8,' ') || rpad(' ',15,' ') || '  ' || rpad(' ',60,' ') || ds_brancos_20_w || '5';

	insert into w_envio_banco(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_estabelecimento,
		ds_conteudo,
		nr_seq_apres)
	values (nextval('w_envio_banco_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_estabelecimento_p,
		ds_conteudo_w,
		qt_reg_arquivo_w);

	qt_reg_arquivo_w	:= qt_reg_arquivo_w + 1;
	end;
end loop;
close C02;

/* Trailler Z */

vl_total_w		:= to_char(vl_soma_w);
qt_reg_arquivo_w	:= qt_reg_arquivo_w + 1;

ds_conteudo_w	:=	'Z' || lpad(qt_reg_arquivo_w, 6, '0') || lpad('0', 17, '0') || lpad('0', 17, '0') || ds_brancos_109_w;

insert into w_envio_banco(nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	cd_estabelecimento,
	ds_conteudo,
	nr_seq_apres)
values (nextval('w_envio_banco_seq'),
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	cd_estabelecimento_p,
	ds_conteudo_w,
	qt_reg_arquivo_w);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cobr_cad_caixa_150 ( nr_seq_cobr_escrit_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

