-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_duplica_fpo_tipo_atend ( nr_sequencia_p bigint, nm_usuario_p text, ie_ambulatorial_p text, ie_externo_p text, ie_pronto_socorro_p text, ie_internado_p text) AS $body$
DECLARE


nr_sequencia_w        	bigint;
cd_estabelecimento_w  	smallint;
dt_competencia_w      	timestamp;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_seq_grupo_w          	bigint;
nr_seq_subgrupo_w	bigint;
nr_seq_forma_org_w	bigint;
qt_fisico_w		bigint;
vl_orcamento_w		double precision;
ie_tipo_atendimento_w	varchar(20);
ie_tipo_financiamento_w	varchar(4);
ie_complexidade_w		varchar(2);
cd_carater_internacao_w	varchar(2);
nm_usuario_resp_w		varchar(15);
ds_observacao_w		varchar(255);
cd_cbo_w		varchar(6);
ie_situacao_w		varchar(1);
nr_seq_estrutura_regra_w	bigint;
cd_procedencia_w		varchar(20);
nr_seq_forma_visual_w		sus_fpo_regra.nr_seq_forma_visual%type;

c01 CURSOR FOR
	SELECT 	*
	from	sus_fpo_regra_desconsid
	where	nr_seq_fpo_regra = nr_sequencia_p
	order by nr_sequencia;

c02 CURSOR FOR
	SELECT	*
	from	sus_fpo_regra_cbo
	where	nr_seq_fpo_regra = nr_sequencia_p
	order by nr_sequencia;

c03 CURSOR FOR
	SELECT	*
	from	sus_fpo_regra_proc
	where	nr_seq_regra = nr_sequencia_p
	order by nr_sequencia;

c04 CURSOR FOR
	SELECT	*
	from	sus_fpo_regra_setor
	where	nr_seq_regra = nr_sequencia_p
	order by nr_sequencia;

c01_w	c01%rowtype;
c02_w	c02%rowtype;
c03_w	c03%rowtype;
c04_w	c04%rowtype;


BEGIN

select	cd_estabelecimento,
	dt_competencia,
	cd_procedimento,
	ie_origem_proced,
	nr_seq_grupo,
	nr_seq_subgrupo,
	nr_seq_forma_org,
	qt_fisico,
	vl_orcamento,
	ie_tipo_atendimento,
	ie_tipo_financiamento,
	ie_complexidade,
	cd_carater_internacao,
	nm_usuario_resp,
	ds_observacao,
	cd_cbo,
	coalesce(ie_situacao,'A'),
	nr_seq_estrutura_regra,
	cd_procedencia,
	nr_seq_forma_visual
into STRICT	cd_estabelecimento_w,
	dt_competencia_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	nr_seq_grupo_w,
	nr_seq_subgrupo_w,
	nr_seq_forma_org_w,
	qt_fisico_w,
	vl_orcamento_w,
	ie_tipo_atendimento_w,
	ie_tipo_financiamento_w,
	ie_complexidade_w,
	cd_carater_internacao_w,
	nm_usuario_resp_w,
	ds_observacao_w,
	cd_cbo_w,
	ie_situacao_w,
	nr_seq_estrutura_regra_w,
	cd_procedencia_w,
	nr_seq_forma_visual_w
from	sus_fpo_regra
where	nr_sequencia = nr_sequencia_p;

if (ie_ambulatorial_p = 'S') and (obter_se_contido(8, coalesce(ie_tipo_atendimento_w,'0')) = 'N') then
	begin

	select	nextval('sus_fpo_regra_seq')
	into STRICT	nr_sequencia_w
	;

	insert into sus_fpo_regra(
		nr_sequencia,
		cd_estabelecimento,
		dt_competencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_procedimento,
		ie_origem_proced,
		nr_seq_grupo,
		nr_seq_subgrupo,
		nr_seq_forma_org,
		qt_fisico,
		vl_orcamento,
		ie_tipo_atendimento,
		ie_tipo_financiamento,
		ie_complexidade,
		cd_carater_internacao,
		nm_usuario_resp,
		ds_observacao,
		cd_cbo,
		ie_situacao,
		nr_seq_estrutura_regra,
		cd_procedencia,
		nr_seq_forma_visual)
	values (	nr_sequencia_w,
		cd_estabelecimento_w,
	        	dt_competencia_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
	        	cd_procedimento_w,
	        	ie_origem_proced_w,
	        	nr_seq_grupo_w,
	        	nr_seq_subgrupo_w,
	        	nr_seq_forma_org_w,
	        	qt_fisico_w,
	        	vl_orcamento_w,
	        	8,
	        	ie_tipo_financiamento_w,
		ie_complexidade_w,
		cd_carater_internacao_w,
		nm_usuario_resp_w,
		ds_observacao_w,
		cd_cbo_w,
		ie_situacao_w,
		nr_seq_estrutura_regra_w,
		cd_procedencia_w,
		nr_seq_forma_visual_w);

	open c01;
	loop
	fetch c01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		insert into sus_fpo_regra_desconsid(		nr_sequencia,
							nr_seq_fpo_regra,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_grupo,
							nr_seq_subgrupo,
							nr_seq_forma_org,
							cd_cbo,
							cd_procedimento,
							ie_origem_proced)
						values (	nextval('sus_fpo_regra_desconsid_seq'),
							nr_sequencia_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							c01_w.nr_seq_grupo,
							c01_w.nr_seq_subgrupo,
							c01_w.nr_seq_forma_org,
							c01_w.cd_cbo,
							c01_w.cd_procedimento,
							c01_w.ie_origem_proced);

		end;
	end loop;
	close c01;

	open c02;
	loop
	fetch c02 into
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		insert into sus_fpo_regra_cbo(	nr_sequencia,
						nr_seq_fpo_regra,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_cbo)
					values (	nextval('sus_fpo_regra_cbo_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						c02_w.cd_cbo);

		end;
	end loop;
	close c02;

	open c03;
	loop
	fetch c03 into
		c03_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin

		insert into sus_fpo_regra_proc(	nr_sequencia,
						nr_seq_regra,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_procedimento,
						ie_origem_proced,
						ie_situacao)
					values (	nextval('sus_fpo_regra_proc_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						c03_w.cd_procedimento,
						c03_w.ie_origem_proced,
						c03_w.ie_situacao);

		end;
	end loop;
	close c03;

	open c04;
	loop
	fetch c04 into
		c04_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin

		insert into sus_fpo_regra_setor(	nr_sequencia,
						nr_seq_regra,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_setor_atendimento,
						ie_situacao)
					values (	nextval('sus_fpo_regra_setor_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						c04_w.cd_setor_atendimento,
						c04_w.ie_situacao);

		end;
	end loop;
	close c04;

	end;
end if;

if (ie_externo_p = 'S') and (obter_se_contido(7, coalesce(ie_tipo_atendimento_w,'0')) = 'N') then
	begin

	select	nextval('sus_fpo_regra_seq')
	into STRICT	nr_sequencia_w
	;

	insert into sus_fpo_regra(
		nr_sequencia,
		cd_estabelecimento,
		dt_competencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_procedimento,
		ie_origem_proced,
		nr_seq_grupo,
		nr_seq_subgrupo,
		nr_seq_forma_org,
		qt_fisico,
		vl_orcamento,
		ie_tipo_atendimento,
		ie_tipo_financiamento,
		ie_complexidade,
		cd_carater_internacao,
		nm_usuario_resp,
		ds_observacao,
		cd_cbo,
		ie_situacao,
		nr_seq_estrutura_regra,
		cd_procedencia,
		nr_seq_forma_visual)
	values (	nr_sequencia_w,
		cd_estabelecimento_w,
		dt_competencia_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_grupo_w,
		nr_seq_subgrupo_w,
		nr_seq_forma_org_w,
		qt_fisico_w,
		vl_orcamento_w,
		7,
		ie_tipo_financiamento_w,
		ie_complexidade_w,
		cd_carater_internacao_w,
		nm_usuario_resp_w,
		ds_observacao_w,
		cd_cbo_w,
		ie_situacao_w,
		nr_seq_estrutura_regra_w,
		cd_procedencia_w,
		nr_seq_forma_visual_w);

	open c01;
	loop
	fetch c01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		insert into sus_fpo_regra_desconsid(		nr_sequencia,
							nr_seq_fpo_regra,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_grupo,
							nr_seq_subgrupo,
							nr_seq_forma_org,
							cd_cbo,
							cd_procedimento,
							ie_origem_proced)
						values (	nextval('sus_fpo_regra_desconsid_seq'),
							nr_sequencia_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							c01_w.nr_seq_grupo,
							c01_w.nr_seq_subgrupo,
							c01_w.nr_seq_forma_org,
							c01_w.cd_cbo,
							c01_w.cd_procedimento,
							c01_w.ie_origem_proced);

		end;
	end loop;
	close c01;

	open c02;
	loop
	fetch c02 into
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		insert into sus_fpo_regra_cbo(	nr_sequencia,
						nr_seq_fpo_regra,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_cbo)
					values (	nextval('sus_fpo_regra_cbo_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						c02_w.cd_cbo);

		end;
	end loop;
	close c02;

	open c03;
	loop
	fetch c03 into
		c03_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin

		insert into sus_fpo_regra_proc(	nr_sequencia,
						nr_seq_regra,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_procedimento,
						ie_origem_proced,
						ie_situacao)
					values (	nextval('sus_fpo_regra_proc_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						c03_w.cd_procedimento,
						c03_w.ie_origem_proced,
						c03_w.ie_situacao);

		end;
	end loop;
	close c03;

	open c04;
	loop
	fetch c04 into
		c04_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin

		insert into sus_fpo_regra_setor(	nr_sequencia,
						nr_seq_regra,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_setor_atendimento,
						ie_situacao)
					values (	nextval('sus_fpo_regra_setor_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						c04_w.cd_setor_atendimento,
						c04_w.ie_situacao);

		end;
	end loop;
	close c04;

	end;
end if;

if (ie_pronto_socorro_p = 'S') and (obter_se_contido(3, coalesce(ie_tipo_atendimento_w,'0')) = 'N') then
	begin

	select	nextval('sus_fpo_regra_seq')
	into STRICT	nr_sequencia_w
	;

	insert into sus_fpo_regra(
		nr_sequencia,
		cd_estabelecimento,
		dt_competencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_procedimento,
		ie_origem_proced,
		nr_seq_grupo,
		nr_seq_subgrupo,
		nr_seq_forma_org,
		qt_fisico,
		vl_orcamento,
		ie_tipo_atendimento,
		ie_tipo_financiamento,
		ie_complexidade,
		cd_carater_internacao,
		nm_usuario_resp,
		ds_observacao,
		cd_cbo,
		ie_situacao,
		nr_seq_estrutura_regra,
		cd_procedencia,
		nr_seq_forma_visual)
	values (	nr_sequencia_w,
		cd_estabelecimento_w,
		dt_competencia_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_grupo_w,
		nr_seq_subgrupo_w,
		nr_seq_forma_org_w,
		qt_fisico_w,
		vl_orcamento_w,
		3,
		ie_tipo_financiamento_w,
		ie_complexidade_w,
		cd_carater_internacao_w,
		nm_usuario_resp_w,
		ds_observacao_w,
		cd_cbo_w,
		ie_situacao_w,
		nr_seq_estrutura_regra_w,
		cd_procedencia_w,
		nr_seq_forma_visual_w);

	open c01;
	loop
	fetch c01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		insert into sus_fpo_regra_desconsid(		nr_sequencia,
							nr_seq_fpo_regra,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_grupo,
							nr_seq_subgrupo,
							nr_seq_forma_org,
							cd_cbo,
							cd_procedimento,
							ie_origem_proced)
						values (	nextval('sus_fpo_regra_desconsid_seq'),
							nr_sequencia_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							c01_w.nr_seq_grupo,
							c01_w.nr_seq_subgrupo,
							c01_w.nr_seq_forma_org,
							c01_w.cd_cbo,
							c01_w.cd_procedimento,
							c01_w.ie_origem_proced);

		end;
	end loop;
	close c01;

	open c02;
	loop
	fetch c02 into
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		insert into sus_fpo_regra_cbo(	nr_sequencia,
						nr_seq_fpo_regra,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_cbo)
					values (	nextval('sus_fpo_regra_cbo_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						c02_w.cd_cbo);

		end;
	end loop;
	close c02;

	open c03;
	loop
	fetch c03 into
		c03_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin

		insert into sus_fpo_regra_proc(	nr_sequencia,
						nr_seq_regra,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_procedimento,
						ie_origem_proced,
						ie_situacao)
					values (	nextval('sus_fpo_regra_proc_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						c03_w.cd_procedimento,
						c03_w.ie_origem_proced,
						c03_w.ie_situacao);

		end;
	end loop;
	close c03;

	open c04;
	loop
	fetch c04 into
		c04_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin

		insert into sus_fpo_regra_setor(	nr_sequencia,
						nr_seq_regra,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_setor_atendimento,
						ie_situacao)
					values (	nextval('sus_fpo_regra_setor_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						c04_w.cd_setor_atendimento,
						c04_w.ie_situacao);

		end;
	end loop;
	close c04;

	end;
end if;

if (ie_internado_p = 'S') and (obter_se_contido(1, coalesce(ie_tipo_atendimento_w,'0')) = 'N') then
	begin

	select	nextval('sus_fpo_regra_seq')
	into STRICT	nr_sequencia_w
	;

	insert into sus_fpo_regra(
		nr_sequencia,
		cd_estabelecimento,
		dt_competencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_procedimento,
		ie_origem_proced,
		nr_seq_grupo,
		nr_seq_subgrupo,
		nr_seq_forma_org,
		qt_fisico,
		vl_orcamento,
		ie_tipo_atendimento,
		ie_tipo_financiamento,
		ie_complexidade,
		cd_carater_internacao,
		nm_usuario_resp,
		ds_observacao,
		cd_cbo,
		ie_situacao,
		nr_seq_estrutura_regra,
		cd_procedencia,
		nr_seq_forma_visual)
	values (	nr_sequencia_w,
		cd_estabelecimento_w,
		dt_competencia_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_grupo_w,
		nr_seq_subgrupo_w,
		nr_seq_forma_org_w,
		qt_fisico_w,
		vl_orcamento_w,
		1,
		ie_tipo_financiamento_w,
		ie_complexidade_w,
		cd_carater_internacao_w,
		nm_usuario_resp_w,
		ds_observacao_w,
		cd_cbo_w,
		ie_situacao_w,
		nr_seq_estrutura_regra_w,
		cd_procedencia_w,
		nr_seq_forma_visual_w);

	open c01;
	loop
	fetch c01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		insert into sus_fpo_regra_desconsid(		nr_sequencia,
							nr_seq_fpo_regra,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_grupo,
							nr_seq_subgrupo,
							nr_seq_forma_org,
							cd_cbo,
							cd_procedimento,
							ie_origem_proced)
						values (	nextval('sus_fpo_regra_desconsid_seq'),
							nr_sequencia_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							c01_w.nr_seq_grupo,
							c01_w.nr_seq_subgrupo,
							c01_w.nr_seq_forma_org,
							c01_w.cd_cbo,
							c01_w.cd_procedimento,
							c01_w.ie_origem_proced);

		end;
	end loop;
	close c01;

	open c02;
	loop
	fetch c02 into
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		insert into sus_fpo_regra_cbo(	nr_sequencia,
						nr_seq_fpo_regra,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_cbo)
					values (	nextval('sus_fpo_regra_cbo_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						c02_w.cd_cbo);

		end;
	end loop;
	close c02;

	open c03;
	loop
	fetch c03 into
		c03_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin

		insert into sus_fpo_regra_proc(	nr_sequencia,
						nr_seq_regra,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_procedimento,
						ie_origem_proced,
						ie_situacao)
					values (	nextval('sus_fpo_regra_proc_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						c03_w.cd_procedimento,
						c03_w.ie_origem_proced,
						c03_w.ie_situacao);

		end;
	end loop;
	close c03;

	open c04;
	loop
	fetch c04 into
		c04_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin

		insert into sus_fpo_regra_setor(	nr_sequencia,
						nr_seq_regra,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_setor_atendimento,
						ie_situacao)
					values (	nextval('sus_fpo_regra_setor_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						c04_w.cd_setor_atendimento,
						c04_w.ie_situacao);

		end;
	end loop;
	close c04;

	end;
end if;

if (coalesce(ie_internado_p,'N') = 'N') and (coalesce(ie_externo_p, 'N') = 'N') and (coalesce(ie_pronto_socorro_p, 'N') = 'N') and (coalesce(ie_ambulatorial_p, 'N') = 'N') then
	begin

	select	nextval('sus_fpo_regra_seq')
	into STRICT	nr_sequencia_w
	;

	insert into sus_fpo_regra(
		nr_sequencia,
		cd_estabelecimento,
		dt_competencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_procedimento,
		ie_origem_proced,
		nr_seq_grupo,
		nr_seq_subgrupo,
		nr_seq_forma_org,
		qt_fisico,
		vl_orcamento,
		ie_tipo_atendimento,
		ie_tipo_financiamento,
		ie_complexidade,
		cd_carater_internacao,
		nm_usuario_resp,
		ds_observacao,
		cd_cbo,
		ie_situacao,
		nr_seq_estrutura_regra,
		cd_procedencia,
		nr_seq_forma_visual)
	values (	nr_sequencia_w,
		cd_estabelecimento_w,
		dt_competencia_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_grupo_w,
		nr_seq_subgrupo_w,
		nr_seq_forma_org_w,
		qt_fisico_w,
		vl_orcamento_w,
		null,
		ie_tipo_financiamento_w,
		ie_complexidade_w,
		cd_carater_internacao_w,
		nm_usuario_resp_w,
		ds_observacao_w,
		cd_cbo_w,
		ie_situacao_w,
		nr_seq_estrutura_regra_w,
		cd_procedencia_w,
		nr_seq_forma_visual_w);

	open c01;
	loop
	fetch c01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		insert into sus_fpo_regra_desconsid(	nr_sequencia,
							nr_seq_fpo_regra,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_grupo,
							nr_seq_subgrupo,
							nr_seq_forma_org,
							cd_cbo,
							cd_procedimento,
							ie_origem_proced)
						values (	nextval('sus_fpo_regra_desconsid_seq'),
							nr_sequencia_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							c01_w.nr_seq_grupo,
							c01_w.nr_seq_subgrupo,
							c01_w.nr_seq_forma_org,
							c01_w.cd_cbo,
							c01_w.cd_procedimento,
							c01_w.ie_origem_proced);

		end;
	end loop;
	close c01;

	open c02;
	loop
	fetch c02 into
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		insert into sus_fpo_regra_cbo(	nr_sequencia,
						nr_seq_fpo_regra,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_cbo)
					values (	nextval('sus_fpo_regra_cbo_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						c02_w.cd_cbo);

		end;
	end loop;
	close c02;

	open c03;
	loop
	fetch c03 into
		c03_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin

		insert into sus_fpo_regra_proc(	nr_sequencia,
						nr_seq_regra,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_procedimento,
						ie_origem_proced,
						ie_situacao)
					values (	nextval('sus_fpo_regra_proc_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						c03_w.cd_procedimento,
						c03_w.ie_origem_proced,
						c03_w.ie_situacao);

		end;
	end loop;
	close c03;

	open c04;
	loop
	fetch c04 into
		c04_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin

		insert into sus_fpo_regra_setor(	nr_sequencia,
						nr_seq_regra,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_setor_atendimento,
						ie_situacao)
					values (	nextval('sus_fpo_regra_setor_seq'),
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						c04_w.cd_setor_atendimento,
						c04_w.ie_situacao);

		end;
	end loop;
	close c04;

	end;
end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_duplica_fpo_tipo_atend ( nr_sequencia_p bigint, nm_usuario_p text, ie_ambulatorial_p text, ie_externo_p text, ie_pronto_socorro_p text, ie_internado_p text) FROM PUBLIC;

