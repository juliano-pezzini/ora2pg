-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_obter_conta ( cd_estabelecimento_p bigint, dt_referencia_p timestamp, ie_debito_credito_p text, ie_tipo_contratacao_p text, ie_tipo_item_p text, ie_preco_p text, ie_segmentacao_p text, ie_regulamentacao_p text, ie_participacao_p text, ie_tipo_beneficiario_p text, ie_status_mensalidade_p text, nr_seq_conta_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_clinica_p bigint, ie_tipo_segurado_p text, nr_seq_material_p bigint, nr_seq_tipo_lanc_p text, nr_seq_item_mensal_p text, ds_parametro_tres_p text, nr_seq_regra_p INOUT bigint, cd_historico_p INOUT bigint, cd_conta_contabil_p INOUT text, cd_historico_baixa_p INOUT bigint) AS $body$
DECLARE


nr_seq_regra_w			varchar(20);
cd_conta_contabil_w		varchar(20);
cd_conta_estorno_w		varchar(20);
cd_historico_w			bigint;
cd_hist_estorno_w		bigint;
ie_tipo_guia_w			varchar(2);
nr_seq_tipo_atendimento_w	bigint;
cd_area_procedimento_w		bigint;
cd_especialidade_w		bigint;
cd_grupo_proc_w			bigint;
nr_seq_grupo_ans_w		bigint;
ie_tipo_relacao_w		varchar(2);
cd_medico_executor_w		varchar(10);
ie_regime_internacao_w		varchar(1);
nr_seq_conselho_w		bigint;
cd_historico_baixa_w		bigint;
nr_seq_grupo_superior_w		bigint;
ie_tipo_protocolo_w		varchar(3);
nr_seq_prestador_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_sca_w			bigint;
ie_tipo_vinculo_operadora_w	varchar(2);
nr_seq_bonificacao_w		bigint;
nr_seq_pagador_fin_w		bigint;
nr_seq_mensalidade_w		bigint;
nr_seq_empresa_w		bigint;
nr_seq_forma_cobranca_w		bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_conta_contabil,
		cd_conta_estorno,
		cd_historico,
		cd_historico_estorno,
		cd_historico_baixa
	from	pls_regra_ctb_mensal
	where	cd_estabelecimento	= cd_estabelecimento_p
	and	dt_inicio_vigencia	<= dt_referencia_p
	and	dt_fim_vigencia		>= dt_referencia_p
	and	((ie_tipo_contratacao	= ie_tipo_contratacao_p) 	or (coalesce(ie_tipo_contratacao::text, '') = ''))
	and	((ie_debito_credito	= ie_debito_credito_p) 		or (coalesce(ie_debito_credito::text, '') = ''))
	and	((ie_preco		= ie_preco_p) 			or (coalesce(ie_preco::text, '') = ''))
	and	((ie_segmentacao	= ie_segmentacao_p)		or (coalesce(ie_segmentacao::text, '') = ''))
	and	((ie_regulamentacao	= ie_regulamentacao_p)		or (coalesce(ie_regulamentacao::text, '') = ''))
	and	((ie_participacao	= ie_participacao_p) 		or (coalesce(ie_participacao::text, '') = ''))
	and	((ie_tipo_beneficiario	= ie_tipo_beneficiario_p) 	or (coalesce(ie_tipo_beneficiario::text, '') = ''))
	and	((ie_tipo_item		= ie_tipo_item_p) 		or (coalesce(ie_tipo_item::text, '') = ''))
	and	((ie_tipo_relacao	= ie_tipo_relacao_w) 		or (coalesce(ie_tipo_relacao::text, '') = ''))
	and	((ie_tipo_segurado	= ie_tipo_segurado_p) 		or (coalesce(ie_tipo_segurado::text, '') = ''))
	and	((nr_seq_tipo_lancamento	= nr_seq_tipo_lanc_p) 	or (coalesce(nr_seq_tipo_lancamento::text, '') = ''))
	and	((nr_seq_plano		= nr_seq_plano_w) 		or (coalesce(nr_seq_plano::text, '') = ''))
	and	((nr_seq_sca		= nr_seq_sca_w) 		or (coalesce(nr_seq_sca::text, '') = ''))
	and	((nr_seq_bonificacao	= nr_seq_bonificacao_w) 	or (coalesce(nr_seq_bonificacao::text, '') = ''))
	and	((ie_tipo_vinculo_operadora	= ie_tipo_vinculo_operadora_w) or (coalesce(ie_tipo_vinculo_operadora::text, '') = ''))
	and	((nr_seq_forma_cobranca	= nr_seq_forma_cobranca_w)	or (coalesce(nr_seq_forma_cobranca::text, '') = ''))
	and	((nr_seq_empresa	= nr_seq_empresa_w)		or (coalesce(nr_seq_empresa::text, '') = ''))
	and (coalesce(nr_seq_grupo_ans,coalesce(nr_seq_grupo_superior_w,coalesce(nr_seq_grupo_ans_w,0))) 	= coalesce(nr_seq_grupo_superior_w,coalesce(nr_seq_grupo_ans_w,0)))
	order by	coalesce(nr_seq_plano,0),
			coalesce(nr_seq_sca,0),
			coalesce(nr_seq_bonificacao,0),
			coalesce(nr_seq_empresa,0),
			coalesce(ie_tipo_vinculo_operadora,' '),
			coalesce(ie_tipo_item,'A'),
			coalesce(ie_tipo_beneficiario,'A'),
			coalesce(ie_regulamentacao,'A'),
			coalesce(ie_preco,'A'),
			coalesce(ie_participacao,'A'),
			coalesce(ie_segmentacao,'A'),
			coalesce(ie_debito_credito,'A'),
			coalesce(ie_tipo_contratacao,'A'),
			coalesce(nr_seq_tipo_lancamento,0),
			coalesce(nr_seq_forma_cobranca,0),
			coalesce(cd_conta_contabil,'A'),
			coalesce(dt_inicio_vigencia,clock_timestamp()),
			coalesce(dt_fim_vigencia,clock_timestamp()),
			coalesce(ie_status_mensalidade,'A');

C03 CURSOR FOR
	SELECT	a.nr_seq_grupo_desp
	from	ans_grupo_desp_copartic a
	where	a.nr_seq_clinica	= nr_seq_clinica_p
	and	a.ie_liberado	= 'S';


BEGIN
if (coalesce(cd_procedimento_p,0) <> 0) then
	ie_tipo_relacao_w	:= '';

	select	a.ie_tipo_guia,
		a.nr_seq_tipo_atendimento,
		a.cd_medico_executor,
		a.ie_regime_internacao,
		b.ie_tipo_protocolo,
		b.nr_seq_prestador
	into STRICT	ie_tipo_guia_w,
		nr_seq_tipo_atendimento_w,
		cd_medico_executor_w,
		ie_regime_internacao_w,
		ie_tipo_protocolo_w,
		nr_seq_prestador_w
	from	pls_conta 		a,
		pls_protocolo_conta	b
	where	a.nr_seq_protocolo	= b.nr_sequencia
	and	a.nr_sequencia 		= nr_seq_conta_p;

	if (ie_tipo_protocolo_w	= 'C') then
		select	max(ie_tipo_relacao)
		into STRICT	ie_tipo_relacao_w
		from	pls_prestador
		where	nr_sequencia	= nr_seq_prestador_w;
	end if;

	select	max(nr_seq_conselho)
	into STRICT	nr_seq_conselho_w
	from	pessoa_fisica
	where	cd_pessoa_fisica	= cd_medico_executor_w;

	select	pls_obter_grupo_ans(cd_procedimento_p, ie_origem_proced_p, nr_seq_conselho_w,
				nr_seq_tipo_atendimento_w, ie_tipo_guia_w, ie_regime_internacao_w,
				'', 'S', cd_estabelecimento_p)
	into STRICT	nr_seq_grupo_ans_w
	;
elsif (cd_procedimento_p = 0) and (coalesce(nr_seq_clinica_p,0) <> 0) then
	open C03;
	loop
	fetch C03 into
		nr_seq_grupo_ans_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
	end loop;
	close C03;
end if;

if (coalesce(nr_seq_grupo_ans_w,0) > 0) then
	select	max(nr_seq_grupo_superior)
	into STRICT	nr_seq_grupo_superior_w
	from	ans_grupo_despesa
	where	nr_sequencia	= nr_seq_grupo_ans_w;
end if;

if (ie_tipo_item_p = '1') then
	select	max(nr_seq_plano)
	into STRICT	nr_seq_plano_w
	from	pls_mensalidade_seg_item
	where	nr_sequencia	= nr_seq_item_mensal_p;
elsif (ie_tipo_item_p = '15') then
	select	max(b.nr_seq_plano)
	into STRICT	nr_seq_sca_w
	from	pls_mensalidade_seg_item	a,
		pls_sca_vinculo			b
	where	a.nr_sequencia		= nr_seq_item_mensal_p
	and	a.nr_seq_vinculo_sca	= b.nr_sequencia;
elsif (ie_tipo_item_p = '14') then
	select	max(b.nr_seq_bonificacao)
	into STRICT	nr_seq_bonificacao_w
	from	pls_mensalidade_seg_item	a,
		pls_bonificacao_vinculo		b
	where	a.nr_seq_bonificacao_vinculo	= b.nr_sequencia
	and	a.nr_sequencia			= nr_seq_item_mensal_p;
end if;

begin
select	c.ie_tipo_vinculo_operadora,
	b.nr_seq_mensalidade
into STRICT	ie_tipo_vinculo_operadora_w,
	nr_seq_mensalidade_w
from	pls_mensalidade_seg_item	a,
	pls_mensalidade_segurado	b,
	pls_segurado			c
where	a.nr_seq_mensalidade_seg = b.nr_sequencia
and	b.nr_seq_segurado	= c.nr_sequencia
and	a.nr_sequencia		= nr_seq_item_mensal_p;
exception
when others then
	ie_tipo_vinculo_operadora_w	:= null;
end;

begin
select	nr_seq_pagador_fin,
	nr_seq_forma_cobranca
into STRICT	nr_seq_pagador_fin_w,
	nr_seq_forma_cobranca_w
from	pls_mensalidade
where	nr_sequencia	= nr_seq_mensalidade_w;
exception
when others then
	nr_seq_pagador_fin_w	:= null;
end;

if (coalesce(nr_seq_pagador_fin_w,0) <> 0) then
	begin
	select	nr_seq_empresa,
		coalesce(nr_seq_forma_cobranca_w,nr_seq_forma_cobranca)
	into STRICT	nr_seq_empresa_w,
		nr_seq_forma_cobranca_w
	from	pls_contrato_pagador_fin
	where	nr_sequencia	= nr_seq_pagador_fin_w;
	exception
	when others then
		nr_seq_empresa_w	:= null;
		nr_seq_forma_cobranca_w	:= null;
	end;
end if;

OPEN C01;
LOOP
FETCH C01 into
	nr_seq_regra_w,
	cd_conta_contabil_w,
	cd_conta_estorno_w,
	cd_historico_w,
	cd_hist_estorno_w,
	cd_historico_baixa_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
END LOOP;
CLOSE C01;

if (coalesce(ie_status_mensalidade_p,'N') = 'E') then
	cd_conta_contabil_p	:= coalesce(cd_conta_estorno_w,'0');
	nr_seq_regra_p		:= coalesce(nr_seq_regra_w,0);
	cd_historico_p		:= coalesce(cd_hist_estorno_w,0);
	cd_historico_baixa_p	:= cd_historico_baixa_w;
else
	cd_conta_contabil_p	:= coalesce(cd_conta_contabil_w,'0');
	nr_seq_regra_p		:= coalesce(nr_seq_regra_w,0);
	cd_historico_p		:= coalesce(cd_historico_w,0);
	cd_historico_baixa_p	:= cd_historico_baixa_w;
end if;

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_obter_conta ( cd_estabelecimento_p bigint, dt_referencia_p timestamp, ie_debito_credito_p text, ie_tipo_contratacao_p text, ie_tipo_item_p text, ie_preco_p text, ie_segmentacao_p text, ie_regulamentacao_p text, ie_participacao_p text, ie_tipo_beneficiario_p text, ie_status_mensalidade_p text, nr_seq_conta_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_clinica_p bigint, ie_tipo_segurado_p text, nr_seq_material_p bigint, nr_seq_tipo_lanc_p text, nr_seq_item_mensal_p text, ds_parametro_tres_p text, nr_seq_regra_p INOUT bigint, cd_historico_p INOUT bigint, cd_conta_contabil_p INOUT text, cd_historico_baixa_p INOUT bigint) FROM PUBLIC;

