-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_leite_materno ( nr_prescricao_p bigint, nm_usuario_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, nr_seq_dieta_cpoe_p bigint default null) AS $body$
DECLARE


nr_sequencia_w				bigint;
cd_estabelecimento_w		bigint;
ie_permite_dieta_w			varchar(2);
ie_via_aplicacao_w			varchar(20);
dt_prescricao_w				timestamp;
qt_dietas_w					bigint;
cont_w						bigint;
ie_prescr_dieta_sem_lib_w	varchar(30);
dt_primeiro_horario_w		timestamp;
dt_inicio_prescr_w			timestamp;
dt_validade_prescr_w		timestamp;
dt_inicio_medic_w			timestamp;
nr_horas_validade_w			integer;
cd_dieta_w					bigint := 0;
nr_intervalo_w				bigint := 0;
ds_horarios1_w				varchar(2000);
ds_horarios2_w				varchar(2000);
hr_primeiro_horario_w		varchar(5);
ds_horarios_w				varchar(2000);
ds_erro_w					varchar(2000);
nr_atendimento_w			bigint;
ie_prescr_atual_w			varchar(1);
ds_tempo_w					varchar(50);
cd_funcao_w					integer;
ie_dose_espec_agora_w		varchar(1) := 'N';
hr_dose_especial_w			varchar(6) := '';	
ie_dose_esp_param_w			varchar(1);
sql_w 						varchar(5000);


BEGIN

select	max(cd_dieta)
into STRICT	cd_dieta_w
from	dieta a
where	ie_leite_materno = 'S'
and		ie_situacao = 'A'
and		not exists (SELECT 1 from prescr_dieta x where x.cd_dieta = a.cd_dieta and x.nr_prescricao = nr_prescricao_p);

if (cd_dieta_w > 0) then
	qt_dietas_w := obter_param_usuario(924, 298, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, qt_dietas_w);
	ie_prescr_dieta_sem_lib_w := Obter_Param_Usuario(924, 530, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_prescr_dieta_sem_lib_w);
	ie_prescr_atual_w := Obter_Param_Usuario(924, 1012, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_prescr_atual_w);
	ie_dose_esp_param_w := Obter_Param_Usuario(950, 155, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_dose_esp_param_w);
	
	nr_intervalo_w := 0;
	if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then
		select	coalesce(max(nr_sequencia),0)+1
		into STRICT	nr_sequencia_w
		from	prescr_dieta
		where	nr_prescricao		= nr_prescricao_p;

        select  max(a.ds_horarios)
        into STRICT    ds_horarios_w
        from    cpoe_dieta a
        where   a.nr_sequencia = nr_seq_dieta_cpoe_p;
		
		select	max(cd_estabelecimento),
				max(dt_prescricao),
				max(dt_primeiro_horario),
				max(dt_inicio_prescr),
				max(nr_horas_validade),
				max(dt_validade_prescr),
				max(nr_atendimento),
				coalesce(max(cd_funcao_origem),obter_funcao_ativa)
		into STRICT	cd_estabelecimento_w, 
				dt_prescricao_w,
				dt_primeiro_horario_w,
				dt_inicio_prescr_w,
				nr_horas_validade_w,
				dt_validade_prescr_w,
				nr_atendimento_w,
				cd_funcao_w
		from	prescr_medica
		where	nr_prescricao		= nr_prescricao_p;
		
		select 	max(Obter_Se_dieta_valida(cd_dieta_w, cd_estabelecimento_w, dt_prescricao_w))
		into STRICT	ie_permite_dieta_w
		;

		if (ie_permite_dieta_w = 'N') and (cd_funcao_w <> 2314) then
			rollback;
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(178090, 'NM_DIETA=' || substr(obter_nome_dieta(cd_dieta_w),1,80));
		end if;

		select	count(*)
		into STRICT	cont_w
		from	prescr_dieta a,
				prescr_medica b
		where	obter_se_prescr_vig_adep(b.dt_inicio_prescr, b.dt_validade_prescr, dt_inicio_prescr_w, dt_validade_prescr_w) = 'S'
		and		a.nr_prescricao		= b.nr_prescricao
		and		coalesce(b.dt_suspensao::text, '') = ''
		and		coalesce(a.dt_suspensao::text, '') = ''
		and		((b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') or (b.nr_prescricao	= nr_prescricao_p))
		and		b.nr_atendimento	= nr_atendimento_w
		and		((ie_prescr_atual_w = 'N') or
				 (ie_prescr_atual_w = 'S' AND b.nr_prescricao	= nr_prescricao_p));	
		
      begin
        sql_w := 'CALL obter_ds_tempo_leite_mater_md(:1, :2, :3, :4) INTO :ds_tempo_w';
        EXECUTE sql_w
          USING IN qt_dietas_w, IN cont_w, IN cd_funcao_w, IN ie_prescr_atual_w, OUT ds_tempo_w;
      exception
        when others then
          ds_tempo_w := null;
      end;

    if (ds_tempo_w IS NOT NULL AND ds_tempo_w::text <> '') then
       CALL Wheb_mensagem_pck.exibir_mensagem_abort(178044, 'DS_TEMPO='|| ds_tempo_w ||';QT_DIETAS=' || qt_dietas_w);
    end if;

		
		select	max(ie_via_aplicacao)
		into STRICT	ie_via_aplicacao_w
		from	dieta
		where	cd_dieta	= cd_dieta_w;
		
		ie_dose_espec_agora_w := obter_se_marca_hor_esp(nr_atendimento_w,nr_prescricao_p,ie_dose_esp_param_w);
		
		if (ie_dose_espec_agora_w = 'S') then
			select	to_char(max(a.dt_fim + 1/1440),'hh24:mi')
			into STRICT	hr_dose_especial_w
			from	rep_jejum a,
					prescr_medica b
			where 	a.nr_prescricao = b.nr_prescricao 
	        and		coalesce(b.dt_suspensao::text, '') = '' 
	        and   	coalesce(a.ie_suspenso,'N') <> 'S'
	        and   	dt_fim > clock_timestamp()       
			and		b.nr_atendimento	= nr_atendimento_w;
			
			if (coalesce(hr_dose_especial_w::text, '') = '') then
				hr_dose_especial_w := to_char(clock_timestamp(),'hh24:mi');
			end if;
		end if;
		
		insert into prescr_dieta(
			nr_prescricao,
			nr_sequencia,
			cd_dieta,
			qt_parametro,
			cd_intervalo,
			dt_atualizacao,
			nm_usuario,
			ie_suspenso,
			ie_via_aplicacao,
			ds_horarios,
			hr_prim_horario,
			ie_dose_espec_agora,
			hr_dose_especial,
			ds_observacao,
			nr_seq_dieta_cpoe)
		values (
			nr_prescricao_p,
			nr_sequencia_w,
			cd_dieta_w,
			null,
			null,
			clock_timestamp(),
			nm_usuario_p,
			'N',
			ie_via_aplicacao_w,
			ds_horarios_w,
			hr_primeiro_horario_w,
			ie_dose_espec_agora_w,
			hr_dose_especial_w,
			null,
			nr_seq_dieta_cpoe_p);
		
		ds_erro_w := Consistir_prescr_dieta(nr_prescricao_p, nr_sequencia_w, cd_estabelecimento_p, cd_perfil_p, nm_usuario_p, ds_erro_w);
		CALL gerar_suplementos_dieta(nr_prescricao_p,nr_sequencia_w,nm_usuario_p,cd_perfil_p);

	end if;
	
	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_leite_materno ( nr_prescricao_p bigint, nm_usuario_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, nr_seq_dieta_cpoe_p bigint default null) FROM PUBLIC;

