-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_rel_ressuprimento ( cd_estabelecimento_cor_p text, cd_grupo_material_p text, cd_unidade_medida_p text, ie_tipo_problema_p text, ie_curva_xyz_p text, ie_curva_abc_p text, ie_padronizado_p text, ie_qt_comprar_p text, qt_dia_fixo_p bigint, cd_cnpj_p text, ie_ordena_p text, ie_tipo_coluna_p text, qt_meses_p bigint, nm_usuario_p text) AS $body$
DECLARE

			 
cd_material_w			integer;
cd_unidade_medida_estoque_w	varchar(100);
ds_material_w			varchar(255);
qt_estoque_maximo_w		double precision;
qt_estoque_minimo_w		double precision;
qt_ponto_pedido_w		double precision;
qt_tipo_coluna_w		double precision;
qt_consumo12_w			double precision;
qt_consumo11_w			double precision;
qt_consumo10_w			double precision;
qt_consumo9_w			double precision;
qt_consumo8_w			double precision;
qt_consumo7_w			double precision;
qt_consumo6_w			double precision;
qt_consumo5_w			double precision;
qt_consumo4_w			double precision;
qt_consumo3_w			double precision;
qt_consumo2_w			double precision;
qt_consumo1_w			double precision;
qt_dim_inv6_w			double precision;
qt_dim_inv5_w			double precision;
qt_dim_inv4_w			double precision;
qt_dim_inv123_w			double precision;
qt_total_dim_inv1_w		double precision;
qt_consumo_mes_w		double precision;
vl_custo_medio_w		double precision;
qt_media6_w			double precision;
qt_media3_w			double precision;
qt_pendente_w			double precision;
qt_dia_estoque_w		bigint;
qt_comprar_w			double precision;
ds_curva_w			varchar(50);

 
C01 CURSOR FOR 
	SELECT	a.cd_material, 
		a.cd_unidade_medida_estoque, 
		a.ds_material, 
		a.qt_estoque_maximo, 
		a.qt_estoque_minimo, 
		a.qt_ponto_pedido, 
		CASE WHEN  ie_tipo_coluna_p ='P' THEN obter_media_ponderada_sazonal(coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-12,0)),0), 									coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-11,0)),0), 									coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-10,0)),0), 									coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-9,0)),0), 									coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-8,0)),0), 									coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-7,0)),0), 									coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-6,0)),0), 									coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-5,0)),0), 									coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-4,0)),0), 									coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-3,0)),0), 									coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-2,0)),0), 									coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-1,0)),0), 									qt_meses_p, 									'P')  ELSE CASE WHEN  ie_tipo_coluna_p ='S' THEN obter_media_ponderada_sazonal(coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-12,0)),0), 									coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-11,0)),0), 									coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-10,0)),0), 									coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-9,0)),0), 									coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-8,0)),0), 									coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-7,0)),0), 									coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-6,0)),0), 									coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-5,0)),0), 									coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-4,0)),0), 									coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-3,0)),0), 									coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-2,0)),0), 									coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-1,0)),0), 									qt_meses_p, 									'S')  ELSE a.qt_estoque END  END  qt_tipo_media, 
		coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-12,0)),0) qt_consumo12, 
		coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-11,0)),0) qt_consumo11, 
		coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-10,0)),0) qt_consumo10, 
		coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-9,0)),0) qt_consumo9, 
		coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-8,0)),0) qt_consumo8, 
		coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-7,0)),0) qt_consumo7, 
		coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-6,0)),0) qt_consumo6, 
		coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-5,0)),0) qt_consumo5, 
		coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-4,0)),0) qt_consumo4, 
		coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-3,0)),0) qt_consumo3, 
		coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-2,0)),0) qt_consumo2, 
		coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-1,0)),0) qt_consumo1, 
		coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0)),0) qt_consumo_mes, 
		obter_custo_medio_material(a.cd_estabelecimento, PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0), a.cd_material) vl_custo_medio, 
		coalesce(a.qt_consumo_mensal, 0) qt_media6, 
		dividir((	coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-3,0)),0) + 
				coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-2,0)),0) + 
				coalesce(obter_consumo_mensal_material('Q', a.cd_estabelecimento, a.cd_material,PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-1,0)),0)),3) qt_media3, 
		((a.qt_ordem_compra + a.qt_solic_compra + a.qt_cotacao_compra) * c.qt_conv_compra_estoque) qt_pendente, 
		dividir(a.qt_estoque, dividir(a.qt_consumo_mensal, 30)) qt_dia_estoque, 
		CASE WHEN 	coalesce(qt_dia_fixo_p,0)=0 THEN 	obter_qtde_a_comprar(a.cd_material, a.qt_estoque, a.qt_estoque_maximo, a.cd_estabelecimento)  ELSE obter_qtde_a_comprar(a.cd_material, a.qt_estoque, ((coalesce(a.qt_consumo_mensal,0) / 30) * coalesce(qt_dia_fixo_p,0)) ,a.cd_estabelecimento) END  qt_comprar, 
		CASE WHEN a.ie_curva_abc='X' THEN ''  ELSE a.ie_curva_abc END  || ' - ' || substr(obter_curva_xyz(a.cd_estabelecimento,a.cd_material),1,1) ds_curva, 
		(obter_qt_movto_inventario_mat(a.cd_estabelecimento, a.cd_material,'S',PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-1,0)) + 
			(obter_qt_movto_inventario_mat(a.cd_estabelecimento, a.cd_material,'S',PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-2,0))) + 
			(obter_qt_movto_inventario_mat(a.cd_estabelecimento, a.cd_material,'S',PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-3,0)))), 
		obter_qt_movto_inventario_mat(a.cd_estabelecimento, a.cd_material,'S',PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-4,0)), 
		obter_qt_movto_inventario_mat(a.cd_estabelecimento, a.cd_material,'S',PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-5,0)), 
		obter_qt_movto_inventario_mat(a.cd_estabelecimento, a.cd_material,'S',PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0),-6,0)) 
	from	material c, 
		estrutura_material_v b, 
		material_Ressuprimento_v a 
	where (a.cd_material = b.cd_material) 
	and (a.cd_material = c.cd_material) 
	and (a.cd_estabelecimento = cd_estabelecimento_cor_p) 
	and (c.ie_situacao = 'A') 
	and (b.cd_grupo_material = coalesce(cd_grupo_material_p,'0') or coalesce(cd_grupo_material_p,'0') = '0') 
	and (a.cd_unidade_medida_estoque = coalesce(cd_unidade_medida_p,'0') or coalesce(cd_unidade_medida_p,'0') = '0') 
	and (substr(considera_ressup_tipo_problema(	a.cd_estabelecimento, 
							a.qt_estoque, 
							a.qt_estoque_minimo, 
							a.qt_ponto_pedido, 
							a.ie_cons_prev_mes, 
							ie_tipo_problema_p),1,1) = 'S') 
	and (substr(obter_curva_xyz(a.cd_estabelecimento,a.cd_material),1,1) = coalesce(ie_curva_xyz_p,'T') or coalesce(ie_curva_xyz_p,'T') = 'T') 
	and (substr(obter_curva_abc_estab(a.cd_estabelecimento,a.cd_material,'N', PKG_DATE_UTILS.start_of(clock_timestamp(),'mm',0)),1,1) = coalesce(ie_curva_abc_p,'T') or coalesce(ie_curva_abc_p,'T') = 'T') 
	and (substr(obter_se_material_padronizado(a.cd_estabelecimento, a.cd_material),1,1) = coalesce(ie_padronizado_p,'N') or coalesce(ie_padronizado_p,'N') = 'N') 
	and	((coalesce(ie_qt_comprar_p,'N') = 'S') and 
		(CASE WHEN ie_tipo_problema_p=4 THEN  			obter_qtde_a_comprar(a.cd_material, a.qt_estoque, (coalesce(a.qt_consumo_mensal,0) / 30 * coalesce(qt_dia_fixo_p,0)) ,a.cd_estabelecimento)  ELSE obter_qtde_a_comprar(a.cd_material, a.qt_estoque, a.qt_estoque_maximo, a.cd_estabelecimento) END  > 0) or (coalesce(ie_qt_comprar_p,'N') = 'N')) 
	and	((coalesce(cd_cnpj_p,'0') = '0') or ( coalesce(cd_cnpj_p::text, '') = '') or 
		((cd_cnpj_p IS NOT NULL AND cd_cnpj_p::text <> '') and 
				exists (	SELECT	1 
					from	material_fornec f 
					where	f.cd_material = a.cd_material 
					and	f.cd_estabelecimento = a.cd_estabelecimento 
					and	f.cd_cgc = coalesce(cd_cnpj_p,'0')))) 
	order by CASE WHEN ie_ordena_p='M' THEN a.ds_material  ELSE '' END , 
		CASE WHEN ie_ordena_p='Q' THEN dividir(a.qt_estoque, dividir(a.qt_consumo_mensal, 30))  ELSE '' END , 
		a.ds_material;


BEGIN 
 
delete from w_rel_ressuprimento where nm_usuario = nm_usuario_p;
 
open C01;
loop 
fetch C01 into	 
	cd_material_w, 
	cd_unidade_medida_estoque_w, 
	ds_material_w, 
	qt_estoque_maximo_w, 
	qt_estoque_minimo_w, 
	qt_ponto_pedido_w, 
	qt_tipo_coluna_w, 
	qt_consumo12_w, 
	qt_consumo11_w, 
	qt_consumo10_w, 
	qt_consumo9_w, 
	qt_consumo8_w, 
	qt_consumo7_w, 
	qt_consumo6_w, 
	qt_consumo5_w, 
	qt_consumo4_w, 
	qt_consumo3_w, 
	qt_consumo2_w, 
	qt_consumo1_w, 
	qt_consumo_mes_w, 
	vl_custo_medio_w, 
	qt_media6_w, 
	qt_media3_w, 
	qt_pendente_w, 
	qt_dia_estoque_w, 
	qt_comprar_w, 
	ds_curva_w, 
	qt_dim_inv123_w, 
	qt_dim_inv4_w, 
	qt_dim_inv5_w, 
	qt_dim_inv6_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	qt_total_dim_inv1_w := (qt_dim_inv123_w);
	if (qt_meses_p = 6) then 
		begin 
		qt_total_dim_inv1_w := (qt_dim_inv123_w + qt_dim_inv4_w + qt_dim_inv5_w + qt_dim_inv6_w);
		end;
	end if;	
	 
	insert into w_rel_ressuprimento( cd_material, 
		cd_unidade_medida_estoque, 
		ds_material, 
		qt_estoque_maximo, 
		qt_estoque_minimo, 
		qt_ponto_pedido, 
		qt_tipo_coluna, 
		qt_consumo12, 
		qt_consumo11, 
		qt_consumo10, 
		qt_consumo9, 
		qt_consumo8, 
		qt_consumo7, 
		qt_consumo6, 
		qt_consumo5, 
		qt_consumo4, 
		qt_consumo3, 
		qt_consumo2, 
		qt_consumo1, 
		qt_consumo_mes, 
		vl_custo_medio, 
		qt_media6, 
		qt_media3, 
		qt_pendente, 
		qt_dia_estoque, 
		qt_comprar, 
		ds_curva, 
		nm_usuario, 
		qt_diminuicao_inv) 
	values (	cd_material_w, 
		cd_unidade_medida_estoque_w, 
		ds_material_w, 
		qt_estoque_maximo_w, 
		qt_estoque_minimo_w, 
		qt_ponto_pedido_w, 
		qt_tipo_coluna_w, 
		qt_consumo12_w, 
		qt_consumo11_w, 
		qt_consumo10_w, 
		qt_consumo9_w, 
		qt_consumo8_w, 
		qt_consumo7_w, 
		qt_consumo6_w, 
		qt_consumo5_w, 
		qt_consumo4_w, 
		qt_consumo3_w, 
		qt_consumo2_w, 
		qt_consumo1_w, 
		qt_consumo_mes_w, 
		vl_custo_medio_w, 
		qt_media6_w, 
		qt_media3_w, 
		qt_pendente_w, 
		qt_dia_estoque_w, 
		qt_comprar_w, 
		ds_curva_w, 
		nm_usuario_p, 
		coalesce(qt_total_dim_inv1_w,0));
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_rel_ressuprimento ( cd_estabelecimento_cor_p text, cd_grupo_material_p text, cd_unidade_medida_p text, ie_tipo_problema_p text, ie_curva_xyz_p text, ie_curva_abc_p text, ie_padronizado_p text, ie_qt_comprar_p text, qt_dia_fixo_p bigint, cd_cnpj_p text, ie_ordena_p text, ie_tipo_coluna_p text, qt_meses_p bigint, nm_usuario_p text) FROM PUBLIC;

