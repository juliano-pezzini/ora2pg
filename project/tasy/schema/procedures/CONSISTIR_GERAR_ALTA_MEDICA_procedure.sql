-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_gerar_alta_medica ( nr_atendimento_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_retorno_p INOUT text, cd_medico_resp_p INOUT text, nm_medico_resp_p INOUT text, ie_retornar_mensagens_p text default 'N') AS $body$
DECLARE

					
ie_exige_cid_gerar_alta_w	varchar(1);
ie_consiste_internacao_sus_w	varchar(1);
diagnostico_doenca_w		bigint;
ie_tipo_conv_w			bigint;
ds_mensagem_w			varchar(2000) := '';
ie_permite_lib_w		varchar(1);
ie_html_w			char(1);


BEGIN

ie_exige_cid_gerar_alta_w := obter_param_usuario(281, 608, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_exige_cid_gerar_alta_w);
ie_consiste_internacao_sus_w := obter_param_usuario(281, 570, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_consiste_internacao_sus_w);


SELECT	coalesce(max('S'),'N')
into STRICT 		ie_html_w
FROM		v$session
where 	action = 'TasyAppServer'
and 		audsid = USERENV('sessionid');


select 	count(*)
into STRICT	diagnostico_doenca_w
from 	diagnostico_doenca 
where 	nr_atendimento = nr_atendimento_p
and coalesce(dt_inativacao::text, '') = ''
and (ie_html_w != 'S' or (dt_liberacao IS NOT NULL AND dt_liberacao::text <> ''));

if (ie_exige_cid_gerar_alta_w = 'S') and (diagnostico_doenca_w = 0) then
	/*Não é possível gerar alta médica sem informar o CID para o paciente.'||chr(10)||
				       ' Preencha os dados de CID no item "Diagnósticos" do prontuário e,'||chr(10)||
				       ' em seguida, refaça a alta. Parâmetro[608]. #@#@');*/
					
	if (ie_retornar_mensagens_p = 'S') then
		ds_retorno_p := wheb_mensagem_pck.get_texto(261464);
		goto final;
	else
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(261464);
	end if;
end if;

select 	Obter_Tipo_Convenio(obter_convenio_atendimento(nr_atendimento_p))
into STRICT	ie_tipo_conv_w
;

if (ie_consiste_internacao_sus_w <> 'N') and (ie_tipo_conv_w = 3) then
	SELECT * FROM sus_consiste_internacao(nr_atendimento_p, ds_mensagem_w, ie_permite_lib_w) INTO STRICT ds_mensagem_w, ie_permite_lib_w;
	if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then	
		if	((ie_permite_lib_w = 'S') or (ie_consiste_internacao_sus_w = 'S')) then
			ds_retorno_p := ds_mensagem_w;	
		else
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(261465, 'MENSAGEM='||ds_mensagem_w);
		end if;
	end if;
	
end if;

select 	cd_medico_resp,
	SUBSTR(OBTER_NOME_PF(b.cd_pessoa_fisica), 0, 255) as nm_pessoa_fisica 
into STRICT	cd_medico_resp_p,
	nm_medico_resp_p
from 	pessoa_fisica b, 
	atendimento_paciente a 
where 	a.cd_medico_resp = b.cd_pessoa_fisica
and	nr_atendimento = nr_atendimento_p;

<<final>>
ds_mensagem_w := '';

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_gerar_alta_medica ( nr_atendimento_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_retorno_p INOUT text, cd_medico_resp_p INOUT text, nm_medico_resp_p INOUT text, ie_retornar_mensagens_p text default 'N') FROM PUBLIC;

