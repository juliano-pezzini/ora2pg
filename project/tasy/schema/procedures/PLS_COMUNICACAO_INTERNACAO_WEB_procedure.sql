-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_comunicacao_internacao_web (cd_usuario_plano_p text, ie_recem_nasc_p text, nm_beneficiario_p text, nr_cnes_p text, ie_ident_beneficiario_p text, dt_evento_p timestamp, ie_tipo_evento_p text, cd_motivo_saida_p text, ie_tipo_internacao_p text, nr_seq_lote_int_p bigint, cd_guia_p text, nm_usuario_p text, nr_prontuario_p text, nr_quarto_p text, dt_internacao_p timestamp, cd_doenca_p text, ie_tipo_acomodacao_p text, dt_alta_prevista_p timestamp, dt_alta_p timestamp, ie_tipo_ident_benef_p pls_comunicacao_internacao.ie_tipo_ident_benef%type, cd_ident_biometria_benef_p pls_comunicacao_internacao.cd_ident_biometria_benef%type, cd_template_biomet_benef_p pls_comunicacao_internacao.cd_template_biomet_benef%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Criar o comunicado de internação
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [ X ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_origem_lote_w	varchar(1);
nr_seq_segurado_w	bigint := null;
nr_seq_guia_w		bigint := null;
dt_internacao_w		timestamp;
dt_alta_w		timestamp;
cd_guia_w		varchar(15);
cd_usuario_plano_w	varchar(30);
qt_caracteres_w		bigint;
ie_tipo_vinculo_w	pls_param_import_int_alta.ie_tipo_vinculo%type;

--Sequênci a do prestador informado no pedido de autorização
nr_seq_prestador_w	pls_prestador.nr_sequencia%type;


BEGIN

cd_usuario_plano_w := cd_usuario_plano_p;
dt_internacao_w := dt_internacao_p;
dt_alta_w := dt_alta_p;
cd_guia_w := cd_guia_p;


select	max(length(elimina_caracteres_especiais(c.ds_mascara)))
into STRICT	qt_caracteres_w
from	pls_parametros		a,
	pls_emissor_carteira	b,
	pls_regra_carteira	c
where	a.nr_seq_emissor	= b.nr_sequencia
and	c.nr_seq_emissor	= b.nr_sequencia;

if ((cd_usuario_plano_w IS NOT NULL AND cd_usuario_plano_w::text <> '') and length(coalesce(cd_usuario_plano_w,0)) <> qt_caracteres_w) then
	select  lpad(cd_usuario_plano_w, 17, '0')
	into STRICT	cd_usuario_plano_w
	;
end if;


if (cd_guia_w IS NOT NULL AND cd_guia_w::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_guia_w
	from	pls_guia_plano
	where	cd_guia = cd_guia_w
	and	ie_tipo_guia = '1'
	and	ie_status  = '1';
end if;

if (cd_usuario_plano_w IS NOT NULL AND cd_usuario_plano_w::text <> '') then
	select	max(nr_seq_segurado)
	into STRICT	nr_seq_segurado_w
	from	pls_segurado_carteira
	where	cd_usuario_plano = cd_usuario_plano_w;
end if;

select	ie_origem_lote,
	nr_seq_prestador
into STRICT	ie_origem_lote_w,
	nr_seq_prestador_w
from 	pls_lote_comunicacao_inter
where	nr_sequencia = nr_seq_lote_int_p;

--XML	
if (ie_origem_lote_w = 'X') then	
	if (coalesce(nr_seq_guia_w::text, '') = '') then
		
		begin
			select	coalesce(ie_tipo_vinculo, '0')-- 1 = Manual | 0 = Automático
			into STRICT	ie_tipo_vinculo_w
			from	pls_param_import_int_alta;
		exception
		when others then
			ie_tipo_vinculo_w	:= '0';
		end;

		-- Se o tipo vínculo não for manual, então prosseguir com o processo automático
		if (ie_tipo_vinculo_w	= '0') then
			--procura a guia do benefiário
			select	max(nr_sequencia)
			into STRICT	nr_seq_guia_w
			from	pls_guia_plano
			where	nr_seq_segurado		= nr_seq_segurado_w
			and	nr_seq_prestador	= nr_seq_prestador_w
			and	ie_tipo_guia		= '1'
			and	ie_status		= '1';
			
			if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
				select	max(cd_guia)
				into STRICT	cd_guia_w
				from	pls_guia_plano
				where	nr_sequencia = nr_seq_guia_w;
			end if;
		else
			nr_seq_guia_w	:= null;
			cd_guia_w	:= null;
		end if;
	end if;

	-- verifica qual tipo de evento
	if (dt_evento_p IS NOT NULL AND dt_evento_p::text <> '' AND ie_tipo_evento_p IS NOT NULL AND ie_tipo_evento_p::text <> '') then
		if (ie_tipo_evento_p = 'I') then
			dt_internacao_w := dt_evento_p; -- Inicio de internação
		else
			dt_alta_w := dt_evento_p; -- Alta
		end if;
	end if;
end if;

insert	into pls_comunicacao_internacao(nr_sequencia, nr_seq_lote_inter, dt_atualizacao,
					nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					cd_usuario_plano, ie_recem_nasc, nm_beneficiario,
					nr_cnes, dt_evento, ie_tipo_evento,
					cd_motivo_saida, ie_tipo_internacao, ie_ident_beneficiario,
					ie_status, nr_seq_segurado, nr_seq_guia, 
					cd_guia, dt_internacao, nr_prontuario,
					nr_quarto, ie_tipo_acomodacao, cd_doenca,
					dt_alta_prevista, dt_alta, ie_tipo_ident_benef, 
					cd_ident_biometria_benef, cd_template_biomet_benef)
			values (nextval('pls_comunicacao_internacao_seq'), nr_seq_lote_int_p, clock_timestamp(),
					nm_usuario_p, clock_timestamp(), nm_usuario_p,
					cd_usuario_plano_w, ie_recem_nasc_p,  nm_beneficiario_p,
					nr_cnes_p, dt_evento_p, ie_tipo_evento_p,
					cd_motivo_saida_p, ie_tipo_internacao_p, ie_ident_beneficiario_p,
					'R', nr_seq_segurado_w, nr_seq_guia_w, 
					cd_guia_w, dt_internacao_w, nr_prontuario_p,
					nr_quarto_p, ie_tipo_acomodacao_p, cd_doenca_p,
					dt_alta_prevista_p, dt_alta_w, ie_tipo_ident_benef_p, 
					cd_ident_biometria_benef_p, cd_template_biomet_benef_p);
					
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_comunicacao_internacao_web (cd_usuario_plano_p text, ie_recem_nasc_p text, nm_beneficiario_p text, nr_cnes_p text, ie_ident_beneficiario_p text, dt_evento_p timestamp, ie_tipo_evento_p text, cd_motivo_saida_p text, ie_tipo_internacao_p text, nr_seq_lote_int_p bigint, cd_guia_p text, nm_usuario_p text, nr_prontuario_p text, nr_quarto_p text, dt_internacao_p timestamp, cd_doenca_p text, ie_tipo_acomodacao_p text, dt_alta_prevista_p timestamp, dt_alta_p timestamp, ie_tipo_ident_benef_p pls_comunicacao_internacao.ie_tipo_ident_benef%type, cd_ident_biometria_benef_p pls_comunicacao_internacao.cd_ident_biometria_benef%type, cd_template_biomet_benef_p pls_comunicacao_internacao.cd_template_biomet_benef%type) FROM PUBLIC;

