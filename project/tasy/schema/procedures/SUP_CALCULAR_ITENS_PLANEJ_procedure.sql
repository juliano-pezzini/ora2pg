-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sup_calcular_itens_planej ( nr_seq_planejamento_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
nr_seq_item_w			bigint;
cd_material_w			integer;
cd_material_estoque_w		integer;
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w			timestamp;
dt_primeira_entrega_w		timestamp;
dt_planejamento_w			timestamp;
qt_dia_compra_w			double precision;
qt_dia_consumo_w			double precision;
qt_entregas_w			double precision;
qt_dia_interv_entrega_w		double precision;
qt_consumo_diario_w		double precision := 0;
qt_tot_compra_w			double precision := 0;
qt_entrega_w			double precision := 0;
qt_estoque_w			double precision := 0;
qt_cons_prev_prim_entrega_w	double precision := 0;
qt_entrega_prev_prim_entrega_w	double precision := 0;
qt_falta_prim_entrega_w		double precision := 0;
qt_est_prev_entrega_w		double precision := 0;
qt_dia_w				integer := 180;
qt_ordem_compra_w		double precision := 0;
cd_unid_med_compra_w		varchar(30);
cd_unid_med_compra_sc_w		varchar(30);
qt_conv_compra_estoque_w		double precision := 0;
qt_conv_estoque_consumo_w	double precision := 0;
qt_solic_compra_w			double precision := 0;
qt_cot_compra_w     		double precision := 0;
nr_solic_compra_w			bigint;
nr_cot_compra_w			bigint;
nr_item_cot_compra_w		bigint;
qt_material_w			double precision;
qt_reg_w				integer;
qt_estoque_minimo_w		double precision;
ie_origem_preco_w			varchar(1);
vl_preco_unitario_w			double precision;
nr_seq_nf_w			bigint;
ie_data_base_compra_pend_w	varchar(80);
qt_consumo_w			double precision;
qt_maximo_entrega_w		double precision;
qt_compra_melhor_w		double precision := 0;
qt_compra_melhor_ajust_w		double precision := 0;

dt_inicio_w	timestamp;
dt_fim_w	timestamp;

C01 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.cd_material	  
	from	sup_regra_planej_item a 
	where	a.nr_seq_planejamento = nr_seq_planejamento_p;

c02 CURSOR FOR 
	SELECT	nr_solic_compra, 
		nr_cot_compra, 
		nr_item_cot_compra, 
		qt_material, 
		a.cd_unidade_medida_compra 
	from	Solic_compra_item a 
	where	coalesce(a.dt_baixa::text, '') = '' 
	and	a.cd_material in ( 
		SELECT	cd_material 
		from	material 
		where	cd_material_estoque = cd_material_estoque_w) 
	and	a.dt_atualizacao <= dt_primeira_entrega_w;


BEGIN 
 
select	dt_periodo_inicial, 
	dt_periodo_final, 
	dt_primeira_entrega, 
	dt_planejamento, 
	coalesce(qt_dia_compra,0), 
	coalesce(qt_dia_consumo,0), 
	coalesce(qt_entregas,0), 
	coalesce(qt_dia_interv_entrega,0), 
	coalesce(ie_origem_preco,'U') 
into STRICT	dt_periodo_inicial_w, 
	dt_periodo_final_w, 
	dt_primeira_entrega_w, 
	dt_planejamento_w, 
	qt_dia_compra_w, 
	qt_dia_consumo_w, 
	qt_entregas_w, 
	qt_dia_interv_entrega_w, 
	ie_origem_preco_w 
from	sup_planejamento_compras 
where	nr_sequencia = nr_seq_planejamento_p;
 
select	coalesce(max(qt_dia_compra_pend), 180), 
	coalesce(max(ie_data_base_compra_pend), 'DT_ATUALIZACAO') 
into STRICT	qt_dia_w, 
	ie_data_base_compra_pend_W 
from	parametro_compras 
where	cd_estabelecimento	= cd_estabelecimento_p;
 
open C01;
loop 
fetch C01 into 
	nr_seq_item_w, 
	cd_material_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	select	cd_material_estoque, 
		substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UMC'),1,30) cd_unidade_medida_compra, 
		qt_conv_compra_estoque, 
		qt_conv_estoque_consumo, 
		coalesce(qt_compra_melhor,0) 
	into STRICT	cd_material_estoque_w, 
		cd_unid_med_compra_w, 
		qt_conv_compra_estoque_w, 
		qt_conv_estoque_consumo_w, 
		qt_compra_melhor_w 
	from	material 
	where	cd_material = cd_material_w;
 
	if (ie_origem_preco_w = 'U') then 
		SELECT * FROM Obter_ultima_compra_material( 
					cd_estabelecimento_p, cd_material_estoque_w, cd_unid_med_compra_w, 'C', clock_timestamp() - interval '180 days', nr_seq_nf_w, vl_preco_unitario_w) INTO STRICT nr_seq_nf_w, vl_preco_unitario_w;
	elsif (ie_origem_preco_w = 'F') then 
		vl_preco_unitario_w	:= 0;
	elsif (ie_origem_preco_w = 'M') then 
		select	obter_custo_medio_material(cd_estabelecimento_p,clock_timestamp(),cd_material_estoque_w) 
		into STRICT	vl_preco_unitario_w 
		;
	end if;
 
	dt_inicio_w	:= trunc(clock_timestamp(),'dd') - qt_dia_consumo_w;
	dt_fim_w	:= (TRUNC(clock_timestamp(),'dd') + 86399/86400);
 
	/*Busca os consumo*/
 
	select	sum(qt_consumo) 
	into STRICT	qt_consumo_w 
	from	material m, 
		movimento_estoque_v a 
	where	a.cd_material_estoque	= m.cd_material_estoque 
	and	m.cd_material		= cd_material_estoque_w 
	and	a.cd_estabelecimento	= cd_estabelecimento_p 
	and	(cd_centro_custo IS NOT NULL AND cd_centro_custo::text <> '') 
	and	dt_movimento_estoque between dt_inicio_w and dt_fim_w;
 
	qt_consumo_diario_w	:= dividir(qt_consumo_w, qt_dia_consumo_w);
 
 
	/* Obter Ordens de compra pendentes */
 
	select	coalesce(sum( 
		CASE WHEN cd_unidade_medida_compra=cd_unid_med_compra_w THEN  coalesce(c.qt_prevista_entrega,0) * qt_conv_compra_estoque_w  ELSE coalesce(c.qt_prevista_entrega,0) END  - 
		CASE WHEN cd_unidade_medida_compra=cd_unid_med_compra_w THEN  coalesce(c.qt_real_entrega,0) * qt_conv_compra_estoque_w  ELSE coalesce(c.qt_real_entrega,0) END ), 0) 
	into STRICT	qt_ordem_compra_w 
	from 	ordem_compra b, 
		ordem_compra_item a, 
		ordem_compra_item_entrega c 
	where 	a.nr_ordem_compra = b.nr_ordem_compra 
	and	a.nr_ordem_compra = c.nr_ordem_compra 
	and	a.nr_item_oci = c.nr_item_oci 
	and	c.qt_prevista_entrega > coalesce(c.qt_real_entrega,0) 
	and	coalesce(a.dt_reprovacao::text, '') = '' 
 	and	coalesce(b.dt_baixa::text, '') = '' 
	and	b.cd_estabelecimento	= cd_estabelecimento_p 
	and	trunc(c.dt_prevista_entrega,'dd') <= trunc(dt_primeira_entrega_w,'dd') 
	and	coalesce(c.dt_cancelamento::text, '') = '' 
	and	CASE WHEN ie_data_base_compra_pend_w='DT_ATUALIZACAO' THEN  a.dt_atualizacao WHEN ie_data_base_compra_pend_w='DT_ORDEM_COMPRA' THEN  b.dt_ordem_compra WHEN ie_data_base_compra_pend_w='DT_ENTREGA' THEN  b.dt_entrega END  > clock_timestamp() - qt_dia_w 
	and	a.cd_material 	in ( 
			SELECT	cd_material 
			from	material 
			where	cd_material_estoque = cd_material_estoque_w);
 
	qt_solic_compra_w	:= 0;
	qt_cot_compra_w		:= 0;
	 
	/* Obter solicitação e cotação de compra pendentes*/
 
	open c02;
	loop 
	fetch c02 into 
		nr_solic_compra_w, 
		nr_cot_compra_w, 
		nr_item_cot_compra_w, 
		qt_material_w, 
		cd_unid_med_compra_sc_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
		select	CASE WHEN cd_unid_med_compra_sc_w=cd_unid_med_compra_w THEN coalesce(sum(qt_material_w),0) * qt_conv_compra_estoque_w  ELSE coalesce(sum(qt_material_w),0) END  
		into STRICT	qt_material_w 
		from	solic_compra 
	    where	nr_solic_compra	= nr_solic_compra_w 
	    and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
	    and	cd_estabelecimento = cd_estabelecimento_p 
	    and	coalesce(dt_baixa::text, '') = '';
 
		if (coalesce(nr_cot_compra_w::text, '') = '') then 
			qt_solic_compra_w := qt_solic_compra_w + qt_material_w;
		else	begin 
			select	count(*) 
			into STRICT	qt_reg_w 
			from	ordem_compra_item 
   			where	nr_cot_compra		= nr_cot_compra_w 
	 		and	nr_item_cot_compra	= nr_item_cot_compra_w;
	 
			if (qt_reg_w = 0) then 
				qt_cot_compra_w := qt_cot_compra_w + qt_material_w;
			end if;
			end;
		end if;
		end;
	end loop;
	close c02;
 
	qt_estoque_w			:= obter_saldo_disp_estoque(cd_estabelecimento_p, cd_material_w, null, trunc(clock_timestamp(),'mm'));
	qt_estoque_minimo_w		:= coalesce(obter_mat_estabelecimento(cd_estabelecimento_p, 0, cd_material_w, 'MI'),0);
	qt_entrega_prev_prim_entrega_w	:= coalesce((qt_ordem_compra_w + qt_solic_compra_w + qt_cot_compra_w),0);
	qt_cons_prev_prim_entrega_w	:= coalesce((trunc(dt_primeira_entrega_w) - trunc(dt_planejamento_w)) * qt_consumo_diario_w, 0);
	qt_est_prev_entrega_w		:= coalesce((qt_estoque_w + qt_entrega_prev_prim_entrega_w - dividir(dividir(qt_cons_prev_prim_entrega_w, qt_conv_compra_estoque_w), qt_conv_estoque_consumo_w)), 0);
	qt_falta_prim_entrega_w		:= qt_cons_prev_prim_entrega_w - qt_entrega_prev_prim_entrega_w - qt_estoque_w + qt_estoque_minimo_w;
	qt_tot_compra_w			:= round(dividir(dividir( 
						(qt_consumo_diario_w * qt_dia_compra_w) - (qt_estoque_w - qt_estoque_minimo_w + qt_entrega_prev_prim_entrega_w), 
					qt_conv_compra_estoque_w), qt_conv_estoque_consumo_w));
	qt_entrega_w			:= coalesce(trunc(dividir(qt_tot_compra_w, qt_entregas_w)),0);
 
	select	coalesce(sup_obter_regra_planej_compra(cd_estabelecimento_p, cd_material_w,'Q'),0) 
	into STRICT	qt_maximo_entrega_w 
	;
	 
	if (qt_maximo_entrega_w > 0) and (qt_entrega_w > qt_maximo_entrega_w) then 
		qt_entrega_w := qt_maximo_entrega_w;
	end if;
 
	if (qt_compra_melhor_w <> 0) then 
		while(qt_compra_melhor_ajust_w < qt_tot_compra_w) loop 
			begin 
			qt_compra_melhor_ajust_w := qt_compra_melhor_ajust_w + qt_compra_melhor_w;
			end;
		end loop;
	end if;
 
	update	sup_regra_planej_item 
	set	dt_atualizacao		= clock_timestamp(), 
		nm_usuario		= nm_usuario_p, 
		qt_consumo_diario		= qt_consumo_diario_w, 
		qt_tot_compra		= qt_tot_compra_w, 
		qt_entrega		= qt_entrega_w, 
		qt_est_atual		= qt_estoque_w, 
		qt_cons_prev		= qt_cons_prev_prim_entrega_w, 
		qt_entrega_prev		= qt_entrega_prev_prim_entrega_w, 
		qt_falta_prim_entrega	= qt_falta_prim_entrega_w, 
		qt_est_prev_entrega	= qt_est_prev_entrega_w, 
		vl_preco_unitario		= vl_preco_unitario_w, 
		qt_estoque_minimo		= qt_estoque_minimo_w, 
		qt_compra_ajustada   	= CASE WHEN qt_compra_melhor_ajust_w=0 THEN null  ELSE qt_compra_melhor_ajust_w END  
	where	nr_sequencia		= nr_seq_item_w;
	end;
end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_calcular_itens_planej ( nr_seq_planejamento_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

