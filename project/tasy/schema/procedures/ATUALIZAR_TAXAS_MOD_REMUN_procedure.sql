-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_taxas_mod_remun ( nr_seq_dados_clinicos_p DADOS_CLINICOS_MOD_REMUN.nr_sequencia%type default null, DT_PARAMETRO_P timestamp DEFAULT clock_timestamp(), nm_usuario_p usuario.nm_usuario%type default 'job') AS $body$
DECLARE


CONST_ATIVO		varchar(10) := 'ATIVO';
CONST_INATIVO		varchar(10) := 'INATIVO';
CONST_PENDENTE		estagio_autorizacao.ie_interno%type;

cd_procedimento_w	PROCEDIMENTO.CD_PROCEDIMENTO%TYPE;
ie_origem_proced_w	PROCEDIMENTO.IE_ORIGEM_PROCED%TYPE;
nr_seq_proc_interno_w	PROC_interno.nr_sequencia%type;
nr_seq_estagio_w	estagio_autorizacao.nr_sequencia%type;
nr_seq_classif_w	classif_autorizacao.nr_sequencia%type;	
qt_autorizada_w         procedimento_autorizado.qt_autorizada%type := 1;
qt_solicitada_w         procedimento_autorizado.qt_solicitada%type := 1;
NR_SEQ_DADO_CLINICO_W	AUTORIZACAO_CONVENIO.NR_SEQ_DADOS_MOD_REMUN%type;


C_RET_ELEG CURSOR FOR
	SELECT	AC.NR_SEQ_DADOS_MOD_REMUN,
		AC.NR_SEQUENCIA NR_SEQUENCIA_AUTOR,
		r.IE_SITUACAO_ELEG,
		C.IE_CLASSIFICACAO,
		AC.CD_CONVENIO,
		c.id_classificacao
	FROM	DADOS_CLINICOS_MOD_RETORNO R,
		AUTORIZACAO_CONVENIO AC,
		ESTAGIO_AUTORIZACAO	E,
		DADOS_CLIN_MOD_RET_CLASSIF C
	WHERE	E.NR_SEQUENCIA		= AC.NR_SEQ_ESTAGIO
	and	ac.nr_sequencia		= r.nr_sequencia_autor
	and	r.nr_sequencia		= c.nr_Seq_dados_retorno
	and	r.nr_Sequencia	= (	SELECT 	max(x.nr_sequencia)
					from 	dados_clinicos_mod_retorno x
					where 	x.NR_SEQ_DADOS_CLINICOS = ac.nr_Seq_dados_mod_remun)
	AND	AC.IE_TIPO_AUTORIZACAO  = '3'
	AND	E.IE_INTERNO		Not in ('70','10', '90')
	and (NR_SEQ_DADO_CLINICO_W 	= 0 OR AC.NR_SEQ_DADOS_MOD_REMUN = NR_SEQ_DADO_CLINICO_W)
	and	(r.IE_SITUACAO_ELEG IS NOT NULL AND r.IE_SITUACAO_ELEG::text <> '')
	and	not exists (select	1
			   from		procedimento_autorizado x
			   where	x.nr_sequencia_autor = ac.nr_sequencia);



C_RET_ELEG_W	C_RET_ELEG%ROWTYPE;



BEGIN
NR_SEQ_DADO_CLINICO_W := 	COALESCE(nr_seq_dados_clinicos_p,0);

open C_RET_ELEG;
loop
fetch C_RET_ELEG into
	C_RET_ELEG_W;
EXIT WHEN NOT FOUND; /* apply on C_RET_ELEG */

	if	(C_RET_ELEG_W.IE_CLASSIFICACAO IS NOT NULL AND C_RET_ELEG_W.IE_CLASSIFICACAO::text <> '') and
		C_RET_ELEG_W.ie_situacao_eleg = CONST_ATIVO then
	
		SELECT * FROM obter_regra_classif_proced(C_RET_ELEG_W.IE_CLASSIFICACAO, C_RET_ELEG_W.cd_convenio, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w, nr_seq_estagio_w, nr_seq_classif_w) INTO STRICT cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w, nr_seq_estagio_w, nr_seq_classif_w;
					
	
		if (coalesce(nr_seq_estagio_w::text, '') = '')then
		
			select 	max(nr_sequencia)
			into STRICT	nr_seq_estagio_w
			from 	estagio_autorizacao 
			where 	ie_interno = '10' 
			and 	ie_situacao = 'A'
			and	IE_UTILIZA_MODELO_REMUN = 'S';
			
			if 	coalesce(nr_seq_estagio_w::text, '') = '' then
			
				select 	max(nr_sequencia)
				into STRICT	nr_seq_estagio_w
				from 	estagio_autorizacao 
				where 	ie_interno = '10' 
				and 	ie_situacao = 'A';
			
			end if;
			
			
		end if;
		
		
		if	(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and
			(ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then
			
			
			

			insert into procedimento_autorizado(cd_procedimento,
				 ie_origem_proced,
				 dt_atualizacao,
				 nm_usuario,
				 nr_sequencia_autor,
				 nr_sequencia,
				 qt_autorizada,
				 qt_solicitada,
				 nr_seq_proc_interno)
			values (cd_procedimento_w,
				 ie_origem_proced_w,
				 clock_timestamp(),
				 nm_usuario_p,
				 C_RET_ELEG_W.nr_sequencia_autor,
				 nextval('procedimento_autorizado_seq'),
				 qt_autorizada_w,
				 qt_solicitada_w,
				 nr_seq_proc_interno_w);
				
				 
				 
			update	autorizacao_convenio
			set	nr_seq_estagio = coalesce(nr_seq_estagio_w,nr_seq_estagio),
				nr_seq_classif = coalesce(nr_seq_classif_w,nr_seq_classif),
				dt_atualizacao = clock_timestamp(),
				nm_usuario     = nm_usuario_p
			where	nr_sequencia = C_RET_ELEG_W.nr_sequencia_autor;

			
		end if;
	
	

	elsif	C_RET_ELEG_W.ie_situacao_eleg = CONST_INATIVO then
	
		if (coalesce(nr_seq_estagio_w::text, '') = '')then
		
			select 	max(nr_sequencia)
			into STRICT	nr_seq_estagio_w
			from 	estagio_autorizacao 
			where 	ie_interno = '90' 
			and 	ie_situacao = 'A'
			and	IE_UTILIZA_MODELO_REMUN = 'S';
			
			if coalesce(nr_seq_estagio_w::text, '') = '' then
			
				select 	max(nr_sequencia)
				into STRICT	nr_seq_estagio_w
				from 	estagio_autorizacao 
				where 	ie_interno = '90' 
				and 	ie_situacao = 'A';
			
			end if;
			
			
		end if;
	
		
		update	autorizacao_convenio
		set	nr_seq_estagio = nr_seq_estagio_w,
			dt_atualizacao = clock_timestamp(),
			nm_usuario     = nm_usuario_p
		where	nr_sequencia = C_RET_ELEG_W.nr_sequencia_autor
		and	(nr_seq_estagio_w IS NOT NULL AND nr_seq_estagio_w::text <> '');
		
		
		update	autorizacao_convenio
		set	dt_fim_vigencia = clock_timestamp(),
			dt_atualizacao = clock_timestamp(),
			nm_usuario     = nm_usuario_p
		where	ie_tipo_autorizacao = '7'
		and	NR_SEQ_DADOS_MOD_REMUN = C_RET_ELEG_W.NR_SEQ_DADOS_MOD_REMUN;

	end if;

end loop;

commit;	

close C_RET_ELEG;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_taxas_mod_remun ( nr_seq_dados_clinicos_p DADOS_CLINICOS_MOD_REMUN.nr_sequencia%type default null, DT_PARAMETRO_P timestamp DEFAULT clock_timestamp(), nm_usuario_p usuario.nm_usuario%type default 'job') FROM PUBLIC;

