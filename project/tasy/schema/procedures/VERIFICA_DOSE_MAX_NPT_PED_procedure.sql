-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE verifica_dose_max_npt_ped ( nr_prescricao_p bigint, nr_sequencia_p bigint, ds_erro_p INOUT text, ds_erro2_p INOUT text) AS $body$
DECLARE

 
qt_max_prescricao_w				double precision;
cd_unidade_medida_consumo_w		varchar(30);
cd_unid_med_limite_w			varchar(30);
qt_limite_pessoa_w				double precision;
qt_conversao_dose_w				double precision;
qt_conversao_dose_limite_w		double precision;
qt_dose_w						double precision;
qt_dose_ww						double precision;
qt_dose_limite_w				double precision;
cd_unidade_medida_dose_w		varchar(30);
ds_observacao_w					varchar(255);
cd_pessoa_fisica_w				varchar(30);
cd_material_w					integer;
ie_dose_limite_w				varchar(15);
nr_ocorrencia_w					double precision := 1;
nr_seq_agrupamento_w			bigint;
ie_justificativa_w				varchar(5);
cd_prescritor_w					varchar(50);
cd_setor_atendimento_w			integer;
qt_regra_w						bigint;
qt_idade_w						bigint;
nr_seq_elemento_w				bigint;
qt_idade_dia_w					double precision;
qt_total_w						double precision;
qt_idade_mes_w					double precision;
qt_peso_w						real;
qt_limite_peso_w				real;
nr_horas_validade_w				integer;
cd_estabelecimento_w			bigint;
ie_somar_dose_medic_w			varchar(5);
nr_seq_nut_pac_elem_w			bigint;
ie_alterado_dose_w				varchar(2) := 'N';
nr_sequencia_w					bigint;
nr_seq_elem_mat_w				bigint;
qt_elem_kg_dia_w				double precision;
qt_conv_produto_w				double precision;

c01 CURSOR FOR 
	SELECT	coalesce(qt_limite_pessoa,0), 
			coalesce(ie_dose_limite,'DOSE'), 
			cd_unid_med_limite, 
			coalesce(ie_justificativa,'S'), 
			ds_observacao 
	from	material_prescr 
	where	cd_material							= cd_material_w 
	and		coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0) 
	and		(qt_limite_pessoa IS NOT NULL AND qt_limite_pessoa::text <> '') 
	and		qt_idade_w between coalesce(qt_idade_min,0) and coalesce(qt_idade_max,999) 
	and		qt_idade_dia_w between coalesce(qt_idade_min_dia,0) and coalesce(qt_idade_max_dia,55000) 
	and		qt_idade_mes_w between coalesce(qt_idade_min_mes,0) and coalesce(qt_idade_max_mes,55000) 
	and		((coalesce(nr_seq_agrupamento::text, '') = '') or (nr_seq_agrupamento	= nr_seq_agrupamento_w)) 
	and		qt_peso_w between coalesce(qt_peso_min,0) and coalesce(qt_peso_max,999) 
	and		ie_tipo	= '2' 
	and 	coalesce(cd_estabelecimento, cd_estabelecimento_w)			= cd_estabelecimento_w 
	and		Obter_se_setor_regra_prescr(nr_sequencia, cd_setor_atendimento_w) = 'S' 
	and		((coalesce(cd_especialidade::text, '') = '') or (obter_se_especialidade_medico(cd_prescritor_w, cd_especialidade) = 'S')) 
	and (coalesce(ie_tipo_item,'TOD') in ('OUT','TOD')) 
	order by nr_sequencia;

c02 CURSOR FOR 
	SELECT	a.cd_material, 
			coalesce(obter_unid_med_usua('ml'),c.ie_unid_med), 
			coalesce(b.qt_volume,0), 
			b.nr_seq_elem_mat, 
			b.nr_sequencia, 
			c.qt_elem_kg_dia, 
			c.nr_sequencia 
	from	nut_elem_material a, 
			nut_pac_elem_mat b, 
			nut_pac_elemento c, 
			nut_pac		 d 
	where	a.nr_sequencia		= b.nr_seq_elem_mat 
	and		b.nr_seq_pac_elem	= c.nr_sequencia 
	and		c.nr_seq_nut_pac	= d.nr_sequencia 
	and		d.nr_prescricao		= nr_prescricao_p 
	and 		c.nr_sequencia		= nr_sequencia_p;	
 

BEGIN 
 
select	coalesce(max(ie_somar_dose_medic),'N') 
into STRICT	ie_somar_dose_medic_w 
from	parametro_medico 
where	cd_estabelecimento = Wheb_usuario_pck.get_cd_estabelecimento;
 
ds_erro_p	:= '';
ds_erro2_p	:= '';
 
select	max(cd_prescritor), 
		max(nr_horas_validade), 
		max(cd_estabelecimento), 
		max(cd_setor_atendimento) 
into STRICT	cd_prescritor_w, 
		nr_horas_validade_w, 
		cd_estabelecimento_w, 
		cd_setor_atendimento_w 
from	prescr_medica 
where	nr_prescricao	= nr_prescricao_p;
 
select	max(nr_seq_agrupamento) 
into STRICT	nr_seq_agrupamento_w 
from	setor_atendimento 
where	cd_setor_atendimento	= cd_setor_atendimento_w;
 
open c02;
loop 
fetch c02 into cd_material_w, 
		cd_unidade_medida_dose_w, 
		qt_dose_ww, 
		nr_seq_elem_mat_w, 
		nr_sequencia_w, 
		qt_elem_kg_dia_w, 
		nr_seq_elemento_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	if (coalesce(cd_material_w,0) > 0) and (cd_unidade_medida_dose_w IS NOT NULL AND cd_unidade_medida_dose_w::text <> '') and (coalesce(qt_dose_ww,0) > 0) then 
		begin 
		 
		qt_conv_produto_w	:= dividir(qt_dose_ww, qt_elem_kg_dia_w);
 
		select	count(*) 
		into STRICT	qt_regra_w 
		from	material 
		where	cd_material	= cd_material_w 
		and		(qt_limite_pessoa IS NOT NULL AND qt_limite_pessoa::text <> '');
 
		if (qt_regra_w > 0) then 
			begin 
			select	coalesce(qt_max_prescricao,0), 
					cd_unidade_medida_consumo, 
					cd_unid_med_limite, 
					coalesce(qt_limite_pessoa,0), 
					coalesce(ie_dose_limite,'DOSE') 
			into STRICT	qt_max_prescricao_w, 
					cd_unidade_medida_consumo_w, 
					cd_unid_med_limite_w, 
					qt_limite_pessoa_w, 
					ie_dose_limite_w 
			from	material 
			where	cd_material	= cd_material_w;
 
			/* Pega o setor de atendimento da prescrição e a idade do paciente */
 
			select	cd_setor_atendimento, 
					(obter_idade_pf(cd_pessoa_fisica, clock_timestamp(), 'A'))::numeric , 
					coalesce(qt_peso,0), 
					cd_pessoa_fisica 
			into STRICT	cd_setor_atendimento_w, 
					qt_idade_w, 
					qt_peso_w, 
					cd_pessoa_fisica_w 
			from	prescr_medica 
			where	nr_prescricao	= nr_prescricao_p;
 
			select	max(obter_idade(b.dt_nascimento,coalesce(b.dt_obito,clock_timestamp()),'DIA')), 
					max(obter_idade(b.dt_nascimento,coalesce(b.dt_obito,clock_timestamp()),'M')) 
			into STRICT	qt_idade_dia_w, 
					qt_idade_mes_w 
			from	pessoa_fisica b 
			where	b.cd_pessoa_fisica	= cd_pessoa_fisica_w;
 
			if (cd_unidade_medida_consumo_w = cd_unidade_medida_dose_w) then 
				qt_conversao_dose_w	:= 1;
			else 
				begin 
 
				select	coalesce(max(qt_conversao),1) 
				into STRICT	qt_conversao_dose_w 
				from	material_conversao_unidade 
				where	cd_material		= cd_material_w 
				and		cd_unidade_medida	= cd_unidade_medida_dose_w;
				exception 
					when others then 
					qt_conversao_dose_w	:= 1;
				end;
			end if;
			 
			qt_dose_w	:= (trunc(qt_dose_ww * 1000 / qt_conversao_dose_w)/ 1000);
			if (qt_max_prescricao_w > 0) and (qt_max_prescricao_w < coalesce(qt_dose_w,0)) then 
				ds_erro_p	:= wheb_mensagem_pck.get_texto(277582, 'CD_MATERIAL_P=' || obter_desc_material(cd_material_w) || 
											';QT_MAX_PRESCRICAO_P=' || qt_max_prescricao_w || 
											';CD_UNIDADE_MEDIDA_CONSUMO_P=' || cd_unidade_medida_consumo_w);
				if (ie_alterado_dose_w = 'N') then 
					 
					update	nut_pac_elemento 
					set		qt_elem_kg_dia	= dividir((trunc(qt_max_prescricao_w * 1000 / qt_conversao_dose_w)/ 1000), qt_conv_produto_w) 
					where	nr_sequencia	= nr_seq_elemento_w;
 
					commit;
					ie_alterado_dose_w := 'S';
				end if;
			end if;
 
			if (cd_unidade_medida_consumo_w = cd_unid_med_limite_w) then 
				qt_conversao_dose_limite_w	:= 1;
			else 
				begin 
				select	coalesce(max(qt_conversao),1) 
				into STRICT	qt_conversao_dose_limite_w 
				from	material_conversao_unidade 
				where	cd_material		= cd_material_w 
				and		cd_unidade_medida	= cd_unid_med_limite_w;
				exception 
					when others then 
						qt_conversao_dose_limite_w	:= 1;
				end;
			end if;
 
			qt_dose_w		:= (trunc(dividir(qt_dose_ww * 1000, qt_conversao_dose_w))/ 1000);
			qt_dose_limite_w	:= (trunc(dividir(qt_limite_pessoa_w * 1000, qt_conversao_dose_limite_w))/ 1000);
 
			if (qt_dose_limite_w > 0) and (qt_dose_limite_w < coalesce(qt_dose_w,0)) then 
				ds_erro2_p	:= wheb_mensagem_pck.get_texto(277596, 'CD_MATERIAL_P=' || obter_desc_material(cd_material_w) || 
											';QT_LIMITE_PESSOA_P=' || qt_limite_pessoa_w || 
											';CD_UNID_MED_LIMITE_P=' || cd_unid_med_limite_w || 
											';IE_DOSE_LIMITE_P=' || lower(ie_dose_limite_w));
				if (ie_alterado_dose_w = 'N') then 
				 
					update	nut_pac_elemento 
					set		qt_elem_kg_dia	= dividir((trunc(qt_dose_limite_w * 1000 / qt_conversao_dose_w)/ 1000), qt_conv_produto_w) 
					where	nr_sequencia	= nr_seq_elemento_w;
					 
					commit;
					ie_alterado_dose_w := 'S';
				end if;
			end if;
			end;
		else 
			begin 
 
			/* Pega o setor de atendimento da prescrição e a idade do paciente */
 
			select	cd_setor_atendimento, 
				(obter_idade_pf(cd_pessoa_fisica, clock_timestamp(), 'A'))::numeric , 
				coalesce(qt_peso,0), 
				cd_pessoa_fisica 
			into STRICT	cd_setor_atendimento_w, 
				qt_idade_w, 
				qt_peso_w, 
				cd_pessoa_fisica_w 
			from	prescr_medica 
			where	nr_prescricao	= nr_prescricao_p;
 
			select	max(obter_idade(b.dt_nascimento,coalesce(b.dt_obito,clock_timestamp()),'DIA')), 
				max(obter_idade(b.dt_nascimento,coalesce(b.dt_obito,clock_timestamp()),'M')) 
			into STRICT	qt_idade_dia_w, 
				qt_idade_mes_w 
			from	pessoa_fisica b 
			where	b.cd_pessoa_fisica	= cd_pessoa_fisica_w;
 
			/* Verifica se tem alguma regra para os dados informados */
 
			select	count(*) 
			into STRICT	qt_regra_w 
			from	material_prescr 
			where	cd_material							= cd_material_w 
			and		coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0) 
			and		qt_idade_w between coalesce(qt_idade_min,0) and coalesce(qt_idade_max,999) 
			and		qt_idade_dia_w between coalesce(qt_idade_min_dia,0) and coalesce(qt_idade_max_dia,55000) 
			and		qt_idade_mes_w between coalesce(qt_idade_min_mes,0) and coalesce(qt_idade_max_mes,55000) 
			and		((coalesce(nr_seq_agrupamento::text, '') = '') or (nr_seq_agrupamento	= nr_seq_agrupamento_w)) 
			and		qt_peso_w between coalesce(qt_peso_min,0) and coalesce(qt_peso_max,999) 
			and		(qt_limite_pessoa IS NOT NULL AND qt_limite_pessoa::text <> '') 
			and		((coalesce(cd_especialidade::text, '') = '') or (obter_se_especialidade_medico(cd_prescritor_w, cd_especialidade) = 'S')) 
			and (coalesce(ie_tipo_item,'TOD') in ('OUT','TOD')) 
			and		ie_tipo								= '2';
			 
			/* Caso haja alguma regra, faz as consistências */
 
			if (qt_regra_w > 0) then 
				open c01;
				loop 
				fetch c01 into 
					qt_limite_pessoa_w, 
					ie_dose_limite_w, 
					cd_unid_med_limite_w, 
					ie_justificativa_w, 
					ds_observacao_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */
					begin 
 
					select	coalesce(qt_max_prescricao,0), 
						cd_unidade_medida_consumo 
					into STRICT	qt_max_prescricao_w, 
						cd_unidade_medida_consumo_w 
					from	material 
					where	cd_material	= cd_material_w;
 
					if (cd_unidade_medida_consumo_w = cd_unidade_medida_dose_w) then 
						qt_conversao_dose_w	:= 1;
					else 
						begin 
						select	coalesce(max(qt_conversao),1) 
						into STRICT	qt_conversao_dose_w 
						from	material_conversao_unidade 
						where	cd_material		= cd_material_w 
						and	cd_unidade_medida	= cd_unidade_medida_dose_w;
						exception 
							when others then 
								qt_conversao_dose_w	:= 1;
						end;
					end if;
 
					qt_dose_w	:= (trunc(qt_dose_ww * 1000 / qt_conversao_dose_w)/ 1000);
					if (qt_max_prescricao_w > 0) and (qt_max_prescricao_w < coalesce(qt_dose_w,0)) then 
						ds_erro_p	:= substr(wheb_mensagem_pck.get_texto(277597, 'CD_MATERIAL_P=' || obter_desc_material(cd_material_w) || 
														';QT_MAX_PRESCRICAO_P=' || qt_max_prescricao_w || 
														';CD_UNIDADE_MEDIDA_CONSUMO_P=' || cd_unidade_medida_consumo_w || 
														';DS_OBSERVACAO_P=' || ds_observacao_w),1,255);
						if (ie_alterado_dose_w = 'N') then 
							update	nut_pac_elemento 
							set		qt_elem_kg_dia	= dividir((trunc(qt_max_prescricao_w * 1000 / qt_conversao_dose_w)/ 1000), qt_conv_produto_w) 
							where	nr_sequencia	= nr_seq_elemento_w;
							 
							commit;
							ie_alterado_dose_w := 'S';
						end if;
					end if;
 
					if (cd_unidade_medida_consumo_w = cd_unid_med_limite_w) then 
						qt_conversao_dose_limite_w	:= 1;
					else 
						begin 
						select	coalesce(max(qt_conversao),1) 
						into STRICT	qt_conversao_dose_limite_w 
						from	material_conversao_unidade 
						where	cd_material		= cd_material_w 
						and	cd_unidade_medida	= cd_unid_med_limite_w;
						exception 
							when others then 
								qt_conversao_dose_limite_w	:= 1;
						end;
					end if;
					 
					qt_dose_w		:= (trunc(qt_dose_ww * 1000 / qt_conversao_dose_w)/ 1000);
					qt_dose_limite_w	:= (trunc(qt_limite_pessoa_w * 1000 / qt_conversao_dose_limite_w)/ 1000);
 
					if (qt_dose_limite_w > 0) and (qt_dose_limite_w < coalesce(qt_dose_w,0)) then 
						ds_erro2_p	:= substr(wheb_mensagem_pck.get_texto(277601, 'CD_MATERIAL_P=' || obter_desc_material(cd_material_w) || 
														';QT_LIMITE_PESSOA_P=' || qt_limite_pessoa_w || 
														';CD_UNID_MED_LIMITE_P=' || cd_unid_med_limite_w || 
														';IE_DOSE_LIMITE_P=' || lower(ie_dose_limite_w) || 
														';DS_OBSERVACAO_P=' || ds_observacao_w),1,255);
						if (ie_alterado_dose_w = 'N') then 
 
							update	nut_pac_elemento 
							set		qt_elem_kg_dia	= dividir((trunc(qt_limite_pessoa_w * 1000 / qt_conversao_dose_w)/ 1000), qt_conv_produto_w) 
							where	nr_sequencia	= nr_seq_elemento_w;
							 
							commit;
							ie_alterado_dose_w := 'S';
						end if;
					end if;
 
					end;
				end loop;
				close c01;
			end if;
 
			end;
		end if;
		end;
		ie_alterado_dose_w := 'N';
	if (ds_erro_p IS NOT NULL AND ds_erro_p::text <> '') or (ds_erro2_p IS NOT NULL AND ds_erro2_p::text <> '') then 
		exit;
	end if;
	end if;
end loop;
close c02;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE verifica_dose_max_npt_ped ( nr_prescricao_p bigint, nr_sequencia_p bigint, ds_erro_p INOUT text, ds_erro2_p INOUT text) FROM PUBLIC;

