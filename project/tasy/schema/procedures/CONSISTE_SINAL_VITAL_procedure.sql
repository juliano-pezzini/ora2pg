-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_sinal_vital ( cd_pessoa_fisica_p text, vl_item_p bigint, nr_seq_item_p bigint, ds_retorno_p INOUT text, ie_retorno_p INOUT text, cd_unidade_medida_p text default null, nr_atendimento_p bigint default null, cd_escala_dor_p text default null, ie_rn_p text default null, ie_html_p text default 'N', ie_sitio_p text default null) AS $body$
DECLARE


	qt_min_aviso_w			double precision;
	qt_max_aviso_w			double precision;
	qt_minimo_per_w			double precision;
	vl_maximo_per_w			double precision;
	qt_idade_w				double precision;
	qt_idade_dia_w			double precision;
	vl_item_w				double precision;
	cd_setor_Atendimento_w	bigint	:=0;
	vl_decimal_w			bigint;
	qt_regras_w				bigint	:=0;
	vl_regra_w				bigint;
	cd_perfil_w				bigint;
	ds_sinal_vital_w		varchar(60);
	ie_sinal_w				varchar(1);
	ds_mensagem_bloqueio_w	varchar(255);
	ds_mensagem_alerta_w	varchar(255);
	ie_decimal_w			varchar(1)	:= 'S';
	ie_sexo_w				varchar(1);
	EXEC_W                  varchar(200);


	c01 CURSOR FOR
		SELECT	b.qt_min_aviso,
			b.qt_max_aviso,
			b.qt_minimo,
			b.vl_maximo,
			coalesce(substr(obter_desc_expressao(CD_EXP_INFORMACAO),1,254),a.ds_sinal_vital),
			b.ds_mensagem_bloqueio,
			b.ds_mensagem_alerta
		from	sinal_vital_regra b,
			sinal_vital a
		where	a.nr_sequencia	= nr_seq_item_p
		and	a.nr_sequencia	= b.nr_seq_sinal
		and (qt_idade_w  between coalesce(b.qt_idade_min,0) and coalesce(b.qt_idade_max,9999999999))
		and (qt_idade_dia_w between coalesce(b.qt_idade_min_dias,0) and coalesce(b.qt_idade_max_dias,9999999999))
		and	coalesce(b.cd_setor_Atendimento,cd_setor_Atendimento_w)	= cd_setor_Atendimento_w
		and (coalesce(b.cd_escala_dor::text, '') = '' or
			coalesce(cd_escala_dor_p::text, '') = '' or 
			b.cd_escala_dor = cd_escala_dor_p)
		and	coalesce(b.cd_estabelecimento,Wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento
		and	coalesce(b.cd_perfil,cd_perfil_w) = cd_perfil_w
		and	coalesce(b.ie_sexo,ie_sexo_w) = ie_sexo_w
		order by coalesce(b.cd_setor_atendimento,0), coalesce(b.cd_escala_dor,'0') desc, coalesce(b.cd_estabelecimento,0);

	-- Html5
	c03 CURSOR FOR
		SELECT	b.qt_min_aviso,
			b.qt_max_aviso,
			b.qt_minimo,
			b.vl_maximo,
			coalesce(substr(obter_desc_expressao(CD_EXP_INFORMACAO_HTML),1,254),a.ds_sinal_vital),
			b.ds_mensagem_bloqueio,
			b.ds_mensagem_alerta
		from	sinal_vital_regra b,
			sinal_vital a
		where	a.nr_sequencia	= nr_seq_item_p
		and	a.nr_sequencia	= b.nr_seq_sinal
		and (qt_idade_w  between coalesce(b.qt_idade_min,0) and coalesce(b.qt_idade_max,9999999999))
		and (qt_idade_dia_w between coalesce(b.qt_idade_min_dias,0) and coalesce(b.qt_idade_max_dias,9999999999))
		and	coalesce(b.cd_setor_Atendimento,cd_setor_Atendimento_w)	= cd_setor_Atendimento_w
		and (coalesce(b.cd_escala_dor::text, '') = '' or
			coalesce(cd_escala_dor_p::text, '') = '' or 
			b.cd_escala_dor = cd_escala_dor_p)
		and	coalesce(b.cd_estabelecimento,Wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento
		and	coalesce(b.cd_perfil,cd_perfil_w) = cd_perfil_w
		and	coalesce(b.ie_sexo,ie_sexo_w) = ie_sexo_w
		and coalesce(b.ie_sitio, coalesce(ie_sitio_p,0)) = coalesce(ie_sitio_p,0)
		order by coalesce(b.cd_setor_atendimento,0), coalesce(b.cd_escala_dor,'0') desc, coalesce(b.cd_estabelecimento,0), coalesce(b.ie_sitio,0) asc;

	c02 CURSOR FOR
		SELECT	QT_DECIMAL
		from	escala_dor_fracionado
		where	cd_escala_dor = cd_escala_dor_p
		order by qt_decimal asc;

BEGIN
	cd_perfil_w	:= coalesce(obter_perfil_ativo,0);
	vl_item_w	:= vl_item_p;

	begin
	if (coalesce(nr_atendimento_p,0)	> 0) then
		cd_setor_Atendimento_w	:= coalesce(obter_setor_atendimento(nr_atendimento_p),0);
	end if;
	exception
	when others then
		cd_setor_Atendimento_w	:= 0;
	end;

	if (coalesce(nr_atendimento_p,0) > 0) then
		select	max(coalesce(obter_dados_pf_sbis(nr_atendimento_p,'SEXO'),ie_sexo))
		into STRICT	ie_sexo_w
		from	pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_fisica_p;
	else
		select	max(ie_sexo)
		into STRICT	ie_sexo_w
		from	pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_fisica_p;
	end if;


	if (coalesce(ie_rn_p,'N') = 'S') then
		qt_idade_w	:= null;
		qt_idade_dia_w	:= 0;
	else
		select	max(obter_idade(dt_nascimento,clock_timestamp(),'A'))
		into STRICT	qt_idade_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p;

		select	max(obter_idade(dt_nascimento,clock_timestamp(),'DIA'))
		into STRICT	qt_idade_dia_w
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p;
	end if;

	begin
		EXEC_W := 'CALL OBTER_VL_ITEM_SINAL_VITAL_MD(:1,:2,:3) INTO :result';
		
		EXECUTE EXEC_W USING  IN vl_item_w,
										IN cd_unidade_medida_p,
										IN nr_seq_item_p,
										OUT vl_item_w;
	exception
		when others then
			vl_item_w := null;
	end;

	if (ie_html_p = 'S') then

		open C03;
		loop
		fetch C03 into	
			qt_min_aviso_w,
			qt_max_aviso_w,
			qt_minimo_per_w,
			vl_maximo_per_w,
			ds_sinal_vital_w,
			ds_mensagem_bloqueio_w,
			ds_mensagem_alerta_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
		end loop;
		close C03;

	else

		open C01;
		loop
		fetch C01 into	
			qt_min_aviso_w,
			qt_max_aviso_w,
			qt_minimo_per_w,
			vl_maximo_per_w,
			ds_sinal_vital_w,
			ds_mensagem_bloqueio_w,
			ds_mensagem_alerta_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
		end loop;
		close C01;
		
	end if;

	if	((coalesce(qt_min_aviso_w::text, '') = '')    and (coalesce(qt_max_aviso_w::text, '') = '')    and (coalesce(qt_minimo_per_w::text, '') = '')   and (coalesce(vl_maximo_per_w::text, '') = '')   and (coalesce(ds_sinal_vital_w::text, '') = '')) then
		begin
		
		if (ie_html_p = 'S') then
		
			select	coalesce(max(a.qt_min_aviso),0),
				coalesce(max(a.qt_max_aviso),0),
				coalesce(max(a.qt_minimo),0),
				coalesce(max(a.vl_maximo),0),
				max(coalesce(substr(obter_desc_expressao(CD_EXP_INFORMACAO_HTML),1,254),a.ds_sinal_vital))
			into STRICT	qt_min_aviso_w,
				qt_max_aviso_w,
				qt_minimo_per_w,
				vl_maximo_per_w,
				ds_sinal_vital_w
			from	sinal_vital a
			where	a.nr_sequencia	= nr_seq_item_p;
		
		
		else
		
			select	coalesce(max(a.qt_min_aviso),0),
				coalesce(max(a.qt_max_aviso),0),
				coalesce(max(a.qt_minimo),0),
				coalesce(max(a.vl_maximo),0),
				max(coalesce(substr(obter_desc_expressao(CD_EXP_INFORMACAO),1,254),a.ds_sinal_vital))
			into STRICT	qt_min_aviso_w,
				qt_max_aviso_w,
				qt_minimo_per_w,
				vl_maximo_per_w,
				ds_sinal_vital_w
			from	sinal_vital a
			where	a.nr_sequencia	= nr_seq_item_p;
		
		end if;
		
		
		end;
	end if;

	if (vl_item_w > 0) and (nr_seq_item_p = 4) and (cd_unidade_medida_p = CHR(176)||'F') then
		vl_item_w := ((vl_item_w - 32) / 1.8); -- Converter de FAHRENHEIT para CELSIUS
	end if;

	begin
		EXEC_W := 'CALL OBTER_IE_SINAL_SINAL_VITAL_MD(:1,:2,:3,:4,:5) INTO :result';
		
		EXECUTE EXEC_W USING IN qt_min_aviso_w,
									   IN qt_max_aviso_w,
									   IN qt_minimo_per_w,
									   IN vl_maximo_per_w,
									   IN vl_item_w,
									   OUT ie_sinal_w;
	exception
		when others then
			ie_sinal_w := null;
	end;	

	begin
		EXEC_W := 'CALL OBTER_DS_RET_SINAL_VITAL_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10) INTO :result';
		
		EXECUTE EXEC_W USING IN ie_sinal_w,
									   IN ds_mensagem_bloqueio_w,
									   IN qt_minimo_per_w,
									   IN vl_maximo_per_w,
									   IN ds_sinal_vital_w,
									   IN ds_mensagem_alerta_w,
									   IN qt_min_aviso_w,
									   IN qt_max_aviso_w,
									   IN to_char(null),
									   IN to_char(null),
									   OUT ds_retorno_p;
	exception
		when others then
			ds_retorno_p := null;
	end;	

	if (nr_seq_item_p = 10) then
		select	count(*)
		into STRICT	qt_regras_w
		from	escala_dor_fracionado
		where	cd_escala_dor = cd_escala_dor_p;
	end if;

	open c02;
	loop
		fetch c02 into	
			vl_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
			begin
				EXEC_W := 'BEGIN OBTER_DECIMAL_SINAL_VITAL_MD(:1,:2,:3,:4,:5,:6); END;';
				
				EXECUTE EXEC_W USING IN qt_regras_w,
											   IN nr_seq_item_p,
											   IN vl_item_p,
											   IN vl_regra_w,
											   OUT vl_decimal_w,
											   OUT ie_decimal_w;
			exception
				when others then
					vl_decimal_w := null;
					ie_decimal_w := null;
			end;	
		end;
	end loop;
	close C02;

	if (ie_decimal_w	= 'N') then
		begin
			EXEC_W := 'CALL OBTER_IE_SINAL_SINAL_VITAL_MD(:1,:2,:3,:4,:5) INTO :result';
			
			EXECUTE EXEC_W USING IN qt_min_aviso_w,
										   IN qt_max_aviso_w,
										   IN qt_minimo_per_w,
										   IN vl_maximo_per_w,
										   IN vl_item_w,
										   OUT ie_sinal_w;
		exception
			when others then
				ie_sinal_w := null;
		end;	

		begin
			EXEC_W := 'CALL OBTER_DS_RET_SINAL_VITAL_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10) INTO :result';
			
			EXECUTE EXEC_W USING IN ie_sinal_w,
										   IN ds_mensagem_bloqueio_w,
										   IN qt_minimo_per_w,
										   IN vl_maximo_per_w,
										   IN ds_sinal_vital_w,
										   IN ds_mensagem_alerta_w,
										   IN qt_min_aviso_w,
										   IN qt_max_aviso_w,
										   IN ie_decimal_w,
										   IN vl_decimal_w,
										   OUT ds_retorno_p;
		exception
			when others then
				ds_retorno_p := null;
		end;	
		
		ie_sinal_w	:= 'E';
	end if;
	
	ie_retorno_p	:= ie_sinal_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_sinal_vital ( cd_pessoa_fisica_p text, vl_item_p bigint, nr_seq_item_p bigint, ds_retorno_p INOUT text, ie_retorno_p INOUT text, cd_unidade_medida_p text default null, nr_atendimento_p bigint default null, cd_escala_dor_p text default null, ie_rn_p text default null, ie_html_p text default 'N', ie_sitio_p text default null) FROM PUBLIC;

