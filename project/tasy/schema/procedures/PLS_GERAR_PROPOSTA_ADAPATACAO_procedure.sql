-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_proposta_adapatacao ( nr_seq_proposta_p bigint, nr_seq_contrato_p bigint, nr_seq_tabela_p bigint, nr_seq_plano_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_proposta_benef_w		bigint;
nr_seq_segurado_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_tabela_w			bigint;
nr_seq_tabela_ant_w		bigint;
nr_seq_plano_ant_w		bigint;
nm_tabela_ant_w			varchar(255);
ds_plano_ant_w			varchar(255);
dt_inicio_proposta_w		timestamp;
nr_seq_contrato_plano_w		bigint;
nr_seq_motivo_adaptacao_w	bigint;
nm_plano_novo_w			varchar(255);
ie_gerar_alerta_w		varchar(10);
ie_regulamentacao_ant_w		varchar(10);
ie_regulamentacao_novo_w	varchar(10);
qt_proposta_plano_w		bigint;
nr_seq_vendedor_canal_w		bigint;
nr_seq_vendedor_pf_w		bigint;
nr_seq_vendedor_canal_seg_w	bigint;
ie_permite_tab_dif_w		varchar(1);
ie_manter_tabela_benef_adap_w	varchar(1);
nr_segurado_w			bigint;
nr_seq_alt_plano_w		pls_segurado_alt_plano.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_proposta_beneficiario
	where	nr_seq_proposta	= nr_seq_proposta_p
	and	nr_seq_plano	= nr_seq_plano_p
	and	((nr_seq_tabela	= nr_seq_tabela_w) or (coalesce(nr_seq_tabela_w::text, '') = ''))
	and	coalesce(dt_cancelamento::text, '') = ''
	order by coalesce(nr_seq_titular,0);

C02 CURSOR FOR
	SELECT	c.nr_sequencia
	from	pls_contrato_plano	c,
		pls_contrato		b,
		pls_plano		a
	where	c.nr_seq_contrato	= b.nr_sequencia
	and	c.nr_seq_plano		= a.nr_sequencia
	and	b.nr_sequencia		= nr_seq_contrato_p
	and	a.ie_regulamentacao	= 'R'
	and	c.ie_situacao		= 'A';


BEGIN

select	dt_inicio_proposta,
	nr_seq_vendedor_canal,
	nr_seq_vendedor_pf
into STRICT	dt_inicio_proposta_w,
	nr_seq_vendedor_canal_w,
	nr_seq_vendedor_pf_w
from	pls_proposta_adesao
where	nr_sequencia	= nr_seq_proposta_p;

select	max(nr_seq_motivo_adaptacao),
	coalesce(max(ie_manter_tabela_benef_adap), 'N')
into STRICT	nr_seq_motivo_adaptacao_w,
	ie_manter_tabela_benef_adap_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;

if (coalesce(nr_seq_motivo_adaptacao_w::text, '') = '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_motivo_adaptacao_w
	from	pls_motivo_alteracao_plano
	where	ie_situacao = 'A'
	and	cd_estabelecimento = cd_estabelecimento_p;
end if;

select	count(1)
into STRICT	qt_proposta_plano_w
from	pls_proposta_plano
where	nr_seq_proposta	= nr_seq_proposta_p
and	nr_seq_plano	= nr_seq_plano_p  LIMIT 2;

if (qt_proposta_plano_w > 1) then
	nr_seq_tabela_w := nr_seq_tabela_p;
end if;

ie_gerar_alerta_w	:= coalesce(obter_valor_param_usuario(1202, 121, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p),'N');
ie_permite_tab_dif_w	:= coalesce(obter_valor_param_usuario(1202, 9, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p), 'N');

open C01;
loop
fetch C01 into
	nr_seq_proposta_benef_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	select	nr_seq_beneficiario,
		nr_seq_plano
	into STRICT	nr_seq_segurado_w,
		nr_seq_plano_w
	from	pls_proposta_beneficiario
	where	nr_sequencia	= nr_seq_proposta_benef_w;
	
	if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
		select	nr_seq_tabela,
			nr_seq_plano,
			nr_seq_vendedor_canal
		into STRICT	nr_seq_tabela_ant_w,
			nr_seq_plano_ant_w,
			nr_seq_vendedor_canal_seg_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_segurado_w;
		
		select	max(nr_seq_tabela)
		into STRICT	nr_seq_tabela_w
		from	pls_contrato_plano
		where	nr_seq_contrato		= nr_seq_contrato_p
		and	nr_seq_plano		= nr_seq_plano_w
		and	nr_seq_tabela_origem	= nr_seq_tabela_p;
		
		if (nr_seq_tabela_ant_w IS NOT NULL AND nr_seq_tabela_ant_w::text <> '') and (ie_manter_tabela_benef_adap_w = 'S') then
			select	a.nr_segurado
			into STRICT	nr_segurado_w
			from	pls_tabela_preco a
			where	a.nr_sequencia = nr_seq_tabela_ant_w;
			
			if (nr_segurado_w IS NOT NULL AND nr_segurado_w::text <> '') then
				select	nextval('pls_tabela_preco_seq')
				into STRICT	nr_seq_tabela_w
				;
				
				CALL pls_gerar_tabela_seg_adaptacao(nr_seq_segurado_w, nr_seq_tabela_ant_w, nr_seq_tabela_w, nr_seq_plano_w, nr_seq_proposta_p, nm_usuario_p);				
			end if;
		end if;
		
		if (nr_seq_tabela_w IS NOT NULL AND nr_seq_tabela_w::text <> '') then
			update	pls_segurado
			set	nm_usuario			= nm_usuario_p,
				dt_atualizacao			= clock_timestamp(),
				nr_seq_plano			= nr_seq_plano_w,
				nr_seq_tabela			= nr_seq_tabela_w,
				nr_seq_benef_prop_adesao	= nr_seq_proposta_benef_w,
				ie_acao_contrato		= 'D'
			where	nr_sequencia	= nr_seq_segurado_w;
			
			CALL pls_gerar_valor_segurado(null, nr_seq_segurado_w, 'D',
				cd_estabelecimento_p, nm_usuario_p, 'S',
				dt_inicio_proposta_w, ie_permite_tab_dif_w, 'S',
				'N', 'N');
			
			ie_regulamentacao_novo_w	:= substr(pls_obter_dados_produto(nr_seq_plano_w,'R'),1,10);
			ie_regulamentacao_ant_w		:= substr(pls_obter_dados_produto(nr_seq_plano_ant_w,'R'),1,10);
			
			select	nextval('pls_segurado_alt_plano_seq')
			into STRICT	nr_seq_alt_plano_w
			;
			
			insert into pls_segurado_alt_plano(nr_sequencia, nm_usuario, dt_atualizacao,
				nr_seq_segurado, nr_seq_plano_ant, nr_seq_plano_atual,
				nr_seq_tabela_ant, nr_seq_tabela_atual, dt_alteracao,
				nr_seq_motivo_alt, ds_observacao,
				ie_regulamentacao_ant,ie_regulamentacao_atual, ie_situacao)
			values (nr_seq_alt_plano_w, nm_usuario_p, clock_timestamp(),
				nr_seq_segurado_w, nr_seq_plano_ant_w, nr_seq_plano_w,
				nr_seq_tabela_ant_w, nr_seq_tabela_w, dt_inicio_proposta_w,
				nr_seq_motivo_adaptacao_w, wheb_mensagem_pck.get_texto(1108510),
				ie_regulamentacao_ant_w,ie_regulamentacao_novo_w, 'A');
			
			CALL pls_inativar_alteracao_produto(nr_seq_segurado_w, nr_seq_alt_plano_w, dt_inicio_proposta_w, 'N', nm_usuario_p);
			
			CALL pls_gerar_segurado_historico(nr_seq_segurado_w, '4', clock_timestamp(),
							wheb_mensagem_pck.get_texto(1108499),
							wheb_mensagem_pck.get_texto(1108497, 'NR_SEQ_PLANO_ANT='||nr_seq_plano_ant_w||';'||'NR_SEQ_PLANO='||nr_seq_plano_w),
							null, null, null,
							null, dt_inicio_proposta_w, null,
							null, null, null,
							null, null, nm_usuario_p, 'N');
			
			CALL pls_gerar_lanc_automatico(nr_seq_segurado_w, 1, 'A',
							'S', '', nm_usuario_p,
							cd_estabelecimento_p);

			CALL pls_isentar_carencias_adapt(nr_seq_segurado_w,cd_estabelecimento_p,nm_usuario_p);
			
			CALL pls_gravar_histor_prop_benef(nr_seq_proposta_benef_w,clock_timestamp(),'13',wheb_mensagem_pck.get_texto(1108510),nm_usuario_p);
			
			if (nr_seq_vendedor_canal_w <> nr_seq_vendedor_canal_seg_w) then
				CALL pls_alterar_vendedor_benef(	nr_seq_segurado_w, nr_seq_vendedor_canal_w, nr_seq_vendedor_pf_w,
								nm_usuario_p, cd_estabelecimento_p);
			end if;

			if (ie_gerar_alerta_w = 'S') and (dt_inicio_proposta_w > clock_timestamp()) then
				
				nm_plano_novo_w	:= substr(pls_obter_dados_produto(nr_seq_plano_w,'N'),1,255);
				ds_plano_ant_w	:= substr(pls_obter_dados_produto(nr_seq_plano_ant_w,'N'),1,255);
				
				CALL pls_gerar_alerta_alt_prod(nr_seq_segurado_w,ds_plano_ant_w,nm_plano_novo_w,dt_inicio_proposta_w,nm_usuario_p);
			end if;
			
			CALL pls_gerar_devolucao_alt_plano(nr_seq_alt_plano_w, 'N', nm_usuario_p, cd_estabelecimento_p);
		end if;
	end if;
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	nr_seq_contrato_plano_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	update	pls_contrato_plano
	set	ie_situacao	= 'I',
		dt_inativacao	= dt_inicio_proposta_w,
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where	nr_sequencia	= nr_seq_contrato_plano_w;
	end;
end loop;
close C02;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_proposta_adapatacao ( nr_seq_proposta_p bigint, nr_seq_contrato_p bigint, nr_seq_tabela_p bigint, nr_seq_plano_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

