-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_conta_analise ( nr_seq_analise_p bigint, nr_seq_conta_p bigint, ie_opcao_p text, ie_conta_principal_p text, ie_atualiza_seg_ref_p text, ie_atual_seg_outras_analises_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_grupo_p pls_auditoria_conta_grupo.nr_seq_grupo%type default null) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar as informacoes atuais da conta nas tabelas "W" e tambem atualizar as contas com as 
informacoes das tabelas "W" ao dar ok, passar "G" para gerar as informacoes e "A" para atualizar
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

QUANDO INCLUIR QUALQUER CAMPO NOS UPDATES, DEVE SER TRATADO O MESMO NO HISTORICO

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_observacao_w			varchar(4000);
ds_indicacao_clinica_w		varchar(500);
cd_senha_externa_w		varchar(30);
nr_crm_exec_w			varchar(20);
cd_medico_executor_w		varchar(20);
nr_declaracao_obito_w		varchar(20);
nr_decl_nasc_vivo_w		varchar(15);
cd_medico_solicitante_w		varchar(10);
cd_doenca_w			varchar(10);
qt_nasc_mortos_w		varchar(2);
qt_nasc_vivos_termo_w		varchar(2);
qt_nasc_vivos_prematuros_w	varchar(2);
ie_tipo_guia_w			varchar(2);
ie_carater_internacao_w		varchar(1);
qt_obito_precoce_w		varchar(1);
qt_obito_tardio_w		varchar(1);
ie_regime_internacao_w		varchar(1);
ie_indicacao_acidente_w		varchar(1);
ie_tipo_doenca_w		varchar(1);
ie_gestacao_w			varchar(1);
ie_aborto_w			varchar(1);
ie_parto_normal_w		varchar(1);
ie_complicacao_puerperio_w	varchar(1);
ie_complicacao_neonatal_w	varchar(1);
ie_parto_cesaria_w		varchar(1);
ie_baixo_peso_w			varchar(1);
ie_atend_rn_sala_parto_w	varchar(1);
ie_transtorno_w			varchar(1);
ie_classificacao_w		varchar(1);
nr_seq_segurado_w		bigint;
nr_seq_prestador_exec_w		bigint;
nr_seq_prestador_solic_w	bigint;
nr_seq_saida_int_w		w_pls_conta_alteracao.nr_seq_saida_int%type;
nr_seq_conta_w			bigint;
nr_seq_clinica_w		bigint;
nr_seq_tipo_acomodacao_w	bigint;
nr_seq_saida_spsadt_w		bigint;
nr_seq_tipo_atendimento_w	bigint;
nr_seq_saida_consulta_w		bigint;
nr_seq_cbo_saude_w		bigint;
nr_seq_cbo_saude_solic_w	bigint;
nr_seq_grau_partic_w		bigint;
nr_seq_tipo_conta_w		bigint;
qt_registro_w			bigint;
nr_seq_item_w			bigint;
nr_seq_conta_item_w		bigint;
ie_obito_mulher_w		smallint;
ie_tipo_consulta_w		w_pls_conta_alteracao.ie_tipo_consulta%type;
dt_entrada_w			timestamp;
dt_alta_w			timestamp;
dt_atendimento_w		timestamp;
dt_emissao_guia_w		pls_conta.dt_emissao%type;
nr_seq_prestador_exec_orig_w	bigint;
ds_historico_w			varchar(4000);
nr_crm_solic_w			w_pls_conta_alteracao.nr_crm_solic%type;
nr_seq_conselho_solic_w		w_pls_conta_alteracao.nr_seq_conselho_solic%type;
nr_seq_conselho_exec_w		w_pls_conta_alteracao.nr_seq_conselho_exec%type;
ie_recem_nascido_w		pls_conta.ie_recem_nascido%type;
ie_tipo_faturamento_w		w_pls_conta_alteracao.ie_tipo_faturamento%type;
dt_inicio_faturamento_w		w_pls_conta_alteracao.dt_inicio_faturamento%type;
dt_fim_faturamento_w		w_pls_conta_alteracao.dt_fim_faturamento%type;	
ie_tipo_congenere_w         pls_congenere.ie_tipo_congenere%type;

/* Dados da conta anterior */

nr_seq_segurado_ant_w		bigint;
nr_seq_prestador_exec_ant_w	bigint;
nr_seq_prestador_solic_ant_w	bigint;
ie_carater_internacao_ant_w	varchar(3);
nr_seq_saida_int_ant_w		w_pls_conta_alteracao.nr_seq_saida_int%type;
ie_obito_mulher_ant_w		varchar(3);
qt_nasc_mortos_ant_w		varchar(2);
qt_nasc_vivos_termo_ant_w	varchar(2);
qt_nasc_vivos_prematuros_ant_w	varchar(2);
qt_obito_precoce_ant_w		varchar(2);
qt_obito_tardio_ant_w		varchar(2);
ie_tipo_guia_ant_w		varchar(2);
nr_seq_clinica_ant_w		bigint;
ie_regime_internacao_ant_w	varchar(1);
ie_indicacao_acidente_ant_w	varchar(1);
nr_seq_tipo_acomodacao_ant_w	bigint;
nr_seq_saida_spsadt_ant_w	bigint;
nr_seq_tipo_atendimento_ant_w	bigint;
ie_tipo_doenca_ant_w		varchar(1);
nr_seq_saida_consulta_ant_w	bigint;
ie_tipo_consulta_ant_w		w_pls_conta_alteracao.ie_tipo_consulta%type;
dt_entrada_ant_w		timestamp;
dt_alta_ant_w			timestamp;
dt_atendimento_ant_w		timestamp;
dt_emissao_guia_ant_w		pls_conta.dt_emissao%type;
cd_senha_externa_ant_w		varchar(30);
nr_crm_exec_ant_w		varchar(20);
cd_medico_solicitante_ant_w	varchar(10);
cd_medico_executor_ant_w	varchar(10);
ds_indicacao_clinica_ant_w	varchar(500);
nr_seq_cbo_saude_ant_w		bigint;
nr_seq_cbo_saude_solic_ant_w	bigint;
nr_seq_grau_partic_ant_w	bigint;
ds_observacao_ant_w		varchar(4000);
ie_gestacao_ant_w		varchar(3);
ie_aborto_ant_w			varchar(3);
ie_parto_normal_ant_w		varchar(1);
ie_complicacao_puerperio_ant_w	varchar(3);
ie_complicacao_neonatal_ant_w	varchar(1);
ie_parto_cesaria_ant_w		varchar(1);
ie_baixo_peso_ant_w		varchar(3);
ie_atend_rn_sala_parto_ant_w	varchar(1);
ie_transtorno_ant_w		varchar(3);
nr_seq_tipo_conta_ant_w		bigint;
ie_tipo_acomodacao_ptu_w	varchar(2);
ie_tipo_acomodacao_ptu_ww	varchar(2);
nr_seq_conselho_solic_ant_w	pls_conta.nr_seq_conselho_solic%type;
nr_seq_conselho_exec_ant_w	pls_conta.nr_seq_conselho_exec%type;
cd_guia_principal_w		pls_conta.cd_guia%type;
cd_guia_w			pls_conta.cd_guia%type;
cd_guia_prestador_w		pls_conta.cd_guia_prestador%type;
cd_guia_referencia_ant_w	pls_conta.cd_guia%type;
cd_guia_prestador_ant_w		pls_conta.cd_guia_referencia%type;
cd_guia_ant_w			pls_conta.cd_guia%type;
cd_guia_principal_ant_w		pls_conta.cd_guia%type;	
ie_indicador_dorn_w		pls_diagnost_conta_obito.ie_indicador_dorn%type;
ie_tipo_faturamento_ant_w	w_pls_conta_alteracao.ie_tipo_faturamento%type;
dt_inicio_faturamento_ant_w	w_pls_conta_alteracao.dt_inicio_faturamento%type;
dt_fim_faturamento_ant_w	w_pls_conta_alteracao.dt_fim_faturamento%type;
nr_seq_analise_ref_w		pls_analise_conta.nr_seq_analise_ref%type;
qt_diagnostico_w		integer;
nr_seq_analise_pos_ant_w        pls_analise_conta.nr_sequencia%type;
ie_pode_atualizar_analise_w		varchar(1);
ie_cobertura_especial_ant_w		w_pls_conta_alteracao.ie_cobertura_especial%type;	
ie_regime_atendimento_ant_w		w_pls_conta_alteracao.ie_regime_atendimento%type;
ie_saude_ocupacional_ant_w		w_pls_conta_alteracao.ie_saude_ocupacional%type;
ie_cobertura_especial_w			w_pls_conta_alteracao.ie_cobertura_especial%type;
ie_regime_atendimento_w			w_pls_conta_alteracao.ie_regime_atendimento%type;
ie_saude_ocupacional_w			w_pls_conta_alteracao.ie_saude_ocupacional%type;
qt_opme_fornec_sadt_w			integer := 0;
ie_internado_w				pls_tipo_atendimento.ie_internado%type;

C01 CURSOR FOR
	SELECT	a.ie_classificacao,
		a.cd_doenca,
		a.nr_sequencia
	from	pls_diagnostico_conta	a
	where	a.nr_seq_conta	= nr_seq_conta_p;
	
C02 CURSOR FOR
	SELECT	a.nr_declaracao_obito,
		a.cd_doenca,
		a.nr_sequencia,
		a.ie_indicador_dorn
	from	pls_diagnost_conta_obito	a
	where	a.nr_seq_conta	= nr_seq_conta_p;
	
C03 CURSOR FOR
	SELECT	a.nr_decl_nasc_vivo,
		a.nr_sequencia
	from	pls_diagnostico_nasc_vivo	a
	where	a.nr_seq_conta	= nr_seq_conta_p;
	
C04 CURSOR FOR
	SELECT	a.ie_classificacao,
		a.cd_doenca,
		a.nr_seq_diagnostico_conta
	from	w_pls_diagnostico_conta	a
	where	a.nr_seq_conta	= nr_seq_conta_p
	and	nm_usuario	= nm_usuario_p;

C05 CURSOR FOR
	SELECT	a.nr_declaracao_obito,
		a.cd_doenca,
		a.nr_seq_diag_conta_obito,
		a.ie_indicador_dorn
	from	w_pls_diagnost_conta_obito	a
	where	a.nr_seq_conta	= nr_seq_conta_p
	and	nm_usuario	= nm_usuario_p;

C06 CURSOR FOR
	SELECT	a.nr_decl_nasc_vivo,
		a.nr_seq_diag_nasc_vivo
	from	w_pls_diagnostico_nasc_viv	a
	where	a.nr_seq_conta	= nr_seq_conta_p
	and	nm_usuario	= nm_usuario_p;
	
	
C07 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_conta	a
	where	a.nr_seq_analise	= nr_seq_analise_p
	and	a.nr_sequencia		<> nr_seq_conta_p;
	
--Necessaria a exclusao para que atender os casos onde uma analise de pos foi desfeita e alterado beneficiario da conta e por alguma 

--razao nao deva mais gerarpos. Se for gerar novamente pos nao tem problema, pois uma nova analise sera gerada	
procedure excluir_analise_pos(	nr_seq_analise_w	pls_analise_conta.nr_sequencia%type) is

nr_seq_aud_conta_grupo_w	pls_auditoria_conta_grupo.nr_sequencia%type;

c_aud CURSOR FOR
	SELECT	nr_sequencia
	from	pls_auditoria_conta_grupo
	where	nr_seq_analise	= nr_seq_analise_w;


BEGIN

	delete	from pls_hist_analise_conta
	where	nr_seq_analise	= nr_seq_analise_w;

	delete	from w_pls_analise_selecao_item
	where	nr_seq_analise	= nr_seq_analise_w;
	
	open c_aud;
	loop
	fetch c_aud into
		nr_seq_aud_conta_grupo_w;
	EXIT WHEN NOT FOUND; /* apply on c_aud */
		begin
		delete	from pls_tempo_conta_grupo
		where	nr_seq_auditoria	= nr_seq_aud_conta_grupo_w;
		end;
	end loop;
	close c_aud;
	
	/*Diego 07/02/2011 - Tratamento realizado para os casos de todas as contas terem sido desfeitras mais existir grupos de analise criados atarves do inserir grupo*/

	delete  from pls_auditoria_conta_grupo
	where	nr_seq_analise	= nr_seq_analise_w;

	delete	from pls_analise_pedido_parecer
	where	nr_seq_analise	= nr_seq_analise_w;
	
	delete	from pls_analise_conta_parecer
	where	nr_seq_analise	= nr_seq_analise_w;

	delete 	FROM pls_analise_fluxo_ocor
	where	nr_seq_analise = nr_seq_analise_w;
	
	delete	from pls_analise_fluxo_item
	where	nr_seq_analise	= nr_seq_analise_w;
	
	delete	from pls_analise_glo_ocor_grupo
	where	nr_seq_analise	= nr_seq_analise_w;
	
	delete	from pls_analise_log_acesso
	where	nr_seq_analise	= nr_seq_analise_w;
	
	delete	from pls_analise_observacao
	where	nr_seq_analise	= nr_seq_analise_w;
	
	Update 	Ptu_Consulta_Beneficiario
	Set 	Nr_Seq_Inf_Conta_Interc	 = NULL 
	Where 	nr_seq_inf_conta_interc in ( SELECT 	nr_sequencia
						  from 		pls_analise_inf_conta_int
						  where 	nr_seq_analise 	= nr_seq_analise_w);
	
	delete	from pls_analise_inf_conta_int
	where 	nr_seq_analise 	= nr_seq_analise_w;

	delete	from pls_analise_conta
	where	nr_sequencia	= nr_seq_analise_w;

end;	

begin
if (ie_opcao_p = 'G') then
	delete	from w_pls_conta_alteracao
	where	nr_seq_conta	= nr_seq_conta_p
	and	nm_usuario	= nm_usuario_p;
	
	delete	from w_pls_diagnostico_conta
	where	nr_seq_conta	= nr_seq_conta_p
	and	nm_usuario	= nm_usuario_p;
	
	delete	from w_pls_diagnost_conta_obito
	where	nr_seq_conta	= nr_seq_conta_p
	and	nm_usuario	= nm_usuario_p;
	
	delete	from w_pls_diagnostico_nasc_viv
	where	nr_seq_conta	= nr_seq_conta_p
	and	nm_usuario	= nm_usuario_p;
	
	select	a.nr_seq_segurado,
		a.nr_seq_prestador_exec,
		a.nr_seq_prestador,
		a.ie_carater_internacao,
		a.nr_seq_saida_int,
		a.ie_obito_mulher,
		a.qt_nasc_mortos,
		a.qt_nasc_vivos_termo,
		a.qt_nasc_vivos_prematuros,
		a.qt_obito_precoce,
		a.qt_obito_tardio,
		a.nr_sequencia nr_seq_conta,
		a.ie_tipo_guia,
		a.nr_seq_clinica,
		a.ie_regime_internacao,
		a.ie_indicacao_acidente,
		a.nr_seq_tipo_acomodacao,
		a.nr_seq_saida_spsadt,
		a.nr_seq_tipo_atendimento,
		a.ie_tipo_doenca,
		a.nr_seq_saida_consulta,
		a.ie_tipo_consulta,
		a.dt_entrada,
		a.dt_alta,
		a.dt_atendimento_referencia,
		a.dt_emissao,
		a.cd_senha_externa,
		a.nr_crm_exec,
		a.cd_medico_solicitante,
		a.cd_medico_executor,
		a.ds_indicacao_clinica,
		a.nr_seq_cbo_saude,
		a.nr_seq_cbo_saude_solic,
		a.nr_seq_grau_partic,
		a.ds_observacao,
		a.ie_gestacao,
		a.ie_aborto,
		a.ie_parto_normal,
		a.ie_complicacao_puerperio,
		a.ie_complicacao_neonatal,
		a.ie_parto_cesaria,
		a.ie_baixo_peso,
		a.ie_atend_rn_sala_parto,
		a.ie_transtorno,
		a.nr_seq_tipo_conta,
		a.ie_tipo_acomodacao_ptu,
		substr(obter_crm_medico(a.cd_medico_solicitante),1,255) nr_crm_solic,
		a.nr_seq_conselho_solic,
		a.nr_seq_conselho_exec,
		a.cd_guia_referencia,
		a.cd_guia,
		a.cd_guia_prestador,
		ie_recem_nascido,
		ie_tipo_faturamento,
		dt_inicio_faturamento,
		dt_fim_faturamento,
		ie_cobertura_especial,
		ie_regime_atendimento,
		ie_saude_ocupacional
	into STRICT	nr_seq_segurado_w,
		nr_seq_prestador_exec_w,
		nr_seq_prestador_solic_w,
		ie_carater_internacao_w,
		nr_seq_saida_int_w,
		ie_obito_mulher_w,
		qt_nasc_mortos_w,
		qt_nasc_vivos_termo_w,
		qt_nasc_vivos_prematuros_w,
		qt_obito_precoce_w,
		qt_obito_tardio_w,
		nr_seq_conta_w,
		ie_tipo_guia_w,
		nr_seq_clinica_w,
		ie_regime_internacao_w,
		ie_indicacao_acidente_w,
		nr_seq_tipo_acomodacao_w,
		nr_seq_saida_spsadt_w,
		nr_seq_tipo_atendimento_w,
		ie_tipo_doenca_w,
		nr_seq_saida_consulta_w,
		ie_tipo_consulta_w,
		dt_entrada_w,
		dt_alta_w,
		dt_atendimento_w,
		dt_emissao_guia_w,
		cd_senha_externa_w,
		nr_crm_exec_w,
		cd_medico_solicitante_w,
		cd_medico_executor_w,
		ds_indicacao_clinica_w,
		nr_seq_cbo_saude_w,
		nr_seq_cbo_saude_solic_w,
		nr_seq_grau_partic_w,
		ds_observacao_w,
		ie_gestacao_w,
		ie_aborto_w,
		ie_parto_normal_w,
		ie_complicacao_puerperio_w,
		ie_complicacao_neonatal_w,
		ie_parto_cesaria_w,
		ie_baixo_peso_w,
		ie_atend_rn_sala_parto_w,
		ie_transtorno_w,
		nr_seq_tipo_conta_w,
		ie_tipo_acomodacao_ptu_w,
		nr_crm_solic_w,
		nr_seq_conselho_solic_w,
		nr_seq_conselho_exec_w,
		cd_guia_principal_w,
		cd_guia_w,
		cd_guia_prestador_w,
		ie_recem_nascido_w,
		ie_tipo_faturamento_w,
		dt_inicio_faturamento_w,
		dt_fim_faturamento_w,
		ie_cobertura_especial_w,
		ie_regime_atendimento_w,
		ie_saude_ocupacional_w
	from	pls_conta			a
	where	a.nr_sequencia   = nr_seq_conta_p;
	
	insert into w_pls_conta_alteracao(nr_sequencia,
		dt_atualizacao,
		dt_atualizacao_nrec,
		nm_usuario,
		nm_usuario_nrec,
		nr_seq_segurado,
		nr_seq_prestador_exec,
		nr_seq_prestador,
		ie_carater_internacao,
		nr_seq_saida_int,
		ie_obito_mulher,
		qt_nasc_mortos,
		qt_nasc_vivos_termo,
		qt_nasc_vivos_prematuros,
		qt_obito_precoce,
		qt_obito_tardio,
		nr_seq_conta,
		ie_tipo_guia,
		nr_seq_clinica,
		ie_regime_internacao,
		ie_indicacao_acidente,
	 	nr_seq_tipo_acomodacao,
		nr_seq_saida_spsadt,
		nr_seq_tipo_atendimento,
		ie_tipo_doenca,
		nr_seq_saida_consulta,
		dt_entrada,
		dt_alta,
		dt_atendimento,
		dt_emissao_guia,
		cd_senha_externa,
		nr_crm_exec,
		cd_medico_solicitante,
		cd_medico_executor,
		ds_indicacao_clinica,
		nr_seq_cbo_saude,
		nr_seq_cbo_saude_solic,
		nr_seq_grau_partic,
		ds_observacao,
		ie_gestacao,
		ie_aborto,
		ie_parto_normal,
		ie_complicacao_puerperio,
		ie_complicacao_neonatal,
		ie_parto_cesaria,
		ie_baixo_peso,
		ie_atend_rn_sala_parto,
		ie_transtorno,
		ie_tipo_consulta,
		ie_tipo_acomodacao_ptu,
		nr_crm_solic,
		nr_seq_conselho_solic,
		nr_seq_conselho_exec,
		nr_seq_tipo_conta,
		cd_guia_principal,
		cd_guia,
		cd_guia_prestador,
		ie_recem_nascido,
		ie_tipo_faturamento,
		dt_inicio_faturamento,
		dt_fim_faturamento,
		ie_cobertura_especial,
		ie_regime_atendimento,
		ie_saude_ocupacional)
	values (nextval('w_pls_conta_alteracao_seq'),
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		nm_usuario_p,
		nr_seq_segurado_w,
		nr_seq_prestador_exec_w,
		nr_seq_prestador_solic_w,
		ie_carater_internacao_w,
		nr_seq_saida_int_w,
		ie_obito_mulher_w,
		qt_nasc_mortos_w,
		qt_nasc_vivos_termo_w,
		qt_nasc_vivos_prematuros_w,
		qt_obito_precoce_w,
		qt_obito_tardio_w,
		nr_seq_conta_w,
		ie_tipo_guia_w,
		nr_seq_clinica_w,
		ie_regime_internacao_w,
		ie_indicacao_acidente_w,
		nr_seq_tipo_acomodacao_w,
		nr_seq_saida_spsadt_w,
		nr_seq_tipo_atendimento_w,
		ie_tipo_doenca_w,
		nr_seq_saida_consulta_w,
		dt_entrada_w,
		dt_alta_w,
		dt_atendimento_w,
		dt_emissao_guia_w,
		cd_senha_externa_w,
		nr_crm_exec_w,
		cd_medico_solicitante_w,
		cd_medico_executor_w,
		ds_indicacao_clinica_w,
		nr_seq_cbo_saude_w,
		nr_seq_cbo_saude_solic_w,
		nr_seq_grau_partic_w,
		ds_observacao_w,
		ie_gestacao_w,
		ie_aborto_w,
		ie_parto_normal_w,
		ie_complicacao_puerperio_w,
		ie_complicacao_neonatal_w,
		ie_parto_cesaria_w,
		ie_baixo_peso_w,
		ie_atend_rn_sala_parto_w,
		ie_transtorno_w,
		ie_tipo_consulta_w,
		ie_tipo_acomodacao_ptu_w,
		nr_crm_solic_w,
		nr_seq_conselho_solic_w,
		nr_seq_conselho_exec_w,
		nr_seq_tipo_conta_w,
		cd_guia_principal_w,
		cd_guia_w,
		cd_guia_prestador_w,
		ie_recem_nascido_w,
		ie_tipo_faturamento_w,
		dt_inicio_faturamento_w,
		dt_fim_faturamento_w,
		ie_cobertura_especial_w,
		ie_regime_atendimento_w,
		ie_saude_ocupacional_w);
		
	open C01;
	loop
	fetch C01 into	
		ie_classificacao_w,
		cd_doenca_w,
		nr_seq_item_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		insert into w_pls_diagnostico_conta(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_conta,
			ie_classificacao,
			cd_doenca,
			nr_seq_diagnostico_conta)
		values (nextval('w_pls_diagnostico_conta_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_conta_p,
			ie_classificacao_w,
			cd_doenca_w,
			nr_seq_item_w);
		end;
	end loop;
	close C01;
	
	open C02;
	loop
	fetch C02 into	
		nr_declaracao_obito_w,
		cd_doenca_w,
		nr_seq_item_w,
		ie_indicador_dorn_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		insert into w_pls_diagnost_conta_obito(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_conta,
			nr_declaracao_obito,
			cd_doenca,
			nr_seq_diag_conta_obito,
			ie_indicador_dorn)
		values (nextval('w_pls_diagnost_conta_obito_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_conta_p,
			nr_declaracao_obito_w,
			cd_doenca_w,
			nr_seq_item_w,
			ie_indicador_dorn_w);
		end;
	end loop;
	close C02;
	
	open C03;
	loop
	fetch C03 into	
		nr_decl_nasc_vivo_w,
		nr_seq_item_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		insert into w_pls_diagnostico_nasc_viv(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_conta,
			nr_decl_nasc_vivo,
			nr_seq_diag_nasc_vivo)
		values (nextval('w_pls_diagnostico_nasc_viv_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_conta_p,
			nr_decl_nasc_vivo_w,
			nr_seq_item_w);
		end;
	end loop;
	close C03;
elsif (ie_opcao_p = 'A') then
	begin
		select	nr_seq_prestador_exec
		into STRICT	nr_seq_prestador_exec_orig_w
		from	pls_conta
		where	nr_sequencia = nr_seq_conta_p;
	exception
	when others then
		nr_seq_prestador_exec_orig_w := null;
	end;
	
	select	a.nr_seq_segurado,
		a.nr_seq_prestador_exec,
		a.nr_seq_prestador,
		a.ie_carater_internacao,
		a.nr_seq_saida_int,
		a.ie_obito_mulher,
		a.qt_nasc_mortos,
		a.qt_nasc_vivos_termo,
		a.qt_nasc_vivos_prematuros,
		a.qt_obito_precoce,
		a.qt_obito_tardio,
		a.ie_tipo_guia,
		a.nr_seq_clinica,
		a.ie_regime_internacao,
		a.ie_indicacao_acidente,
		a.nr_seq_tipo_acomodacao,
		a.nr_seq_saida_spsadt,
		a.nr_seq_tipo_atendimento,
		a.ie_tipo_doenca,
		a.nr_seq_saida_consulta,
		a.ie_tipo_consulta,
		a.dt_entrada,
		a.dt_alta,
		a.dt_atendimento,
		a.dt_emissao,
		a.cd_senha_externa,
		coalesce(a.nr_crm_exec,obter_crm_medico(a.cd_medico_executor)),
		a.cd_medico_solicitante,
		a.cd_medico_executor,
		a.ds_indicacao_clinica,
		a.nr_seq_cbo_saude,
		a.nr_seq_cbo_saude_solic,
		a.nr_seq_grau_partic,
		a.ds_observacao,
		a.ie_gestacao,
		a.ie_aborto,
		a.ie_parto_normal,
		a.ie_complicacao_puerperio,
		a.ie_complicacao_neonatal,
		a.ie_parto_cesaria,
		a.ie_baixo_peso,
		a.ie_atend_rn_sala_parto,
		a.ie_transtorno,
		a.nr_seq_tipo_conta,
		a.ie_tipo_acomodacao_ptu,
		a.nr_seq_conselho_solic,
		a.nr_seq_conselho_exec,
		a.cd_guia,
		a.cd_guia_prestador,
		a.cd_guia_referencia,
		a.ie_tipo_faturamento,
		a.dt_inicio_faturamento,
		a.dt_fim_faturamento,
		a.ie_cobertura_especial,
		a.ie_regime_atendimento,
		a.ie_saude_ocupacional,
		( 	select	count(1)
			from	pls_conta_mat x
			where	x.nr_seq_conta = a.nr_sequencia
			and 	x.ie_tipo_despesa = '7'
			and 	a.nr_seq_prestador_exec = x.nr_seq_prest_fornec
			and 	a.ie_tipo_guia = '4'			
		) qt_opme_fornec_sadt
	into STRICT	nr_seq_segurado_ant_w,
		nr_seq_prestador_exec_ant_w,
		nr_seq_prestador_solic_ant_w,
		ie_carater_internacao_ant_w,
		nr_seq_saida_int_ant_w,
		ie_obito_mulher_ant_w,
		qt_nasc_mortos_ant_w,
		qt_nasc_vivos_termo_ant_w,
		qt_nasc_vivos_prematuros_ant_w,
		qt_obito_precoce_ant_w,
		qt_obito_tardio_ant_w,
		ie_tipo_guia_ant_w,
		nr_seq_clinica_ant_w,
		ie_regime_internacao_ant_w,
		ie_indicacao_acidente_ant_w,
		nr_seq_tipo_acomodacao_ant_w,
		nr_seq_saida_spsadt_ant_w,
		nr_seq_tipo_atendimento_ant_w,
		ie_tipo_doenca_ant_w,
		nr_seq_saida_consulta_ant_w,
		ie_tipo_consulta_ant_w,
		dt_entrada_ant_w,
		dt_alta_ant_w,
		dt_atendimento_ant_w,
		dt_emissao_guia_ant_w,
		cd_senha_externa_ant_w,
		nr_crm_exec_ant_w,
		cd_medico_solicitante_ant_w,
		cd_medico_executor_ant_w,
		ds_indicacao_clinica_ant_w,
		nr_seq_cbo_saude_ant_w,
		nr_seq_cbo_saude_solic_ant_w,
		nr_seq_grau_partic_ant_w,
		ds_observacao_ant_w,
		ie_gestacao_ant_w,
		ie_aborto_ant_w,
		ie_parto_normal_ant_w,
		ie_complicacao_puerperio_ant_w,
		ie_complicacao_neonatal_ant_w,
		ie_parto_cesaria_ant_w,
		ie_baixo_peso_ant_w,
		ie_atend_rn_sala_parto_ant_w,
		ie_transtorno_ant_w,
		nr_seq_tipo_conta_ant_w,
		ie_tipo_acomodacao_ptu_w,
		nr_seq_conselho_solic_ant_w,
		nr_seq_conselho_exec_ant_w,
		cd_guia_ant_w,
		cd_guia_prestador_ant_w,
		cd_guia_principal_ant_w,
		ie_tipo_faturamento_ant_w,
		dt_inicio_faturamento_ant_w,
		dt_fim_faturamento_ant_w,
		ie_cobertura_especial_ant_w,
		ie_regime_atendimento_ant_w,
		ie_saude_ocupacional_ant_w,
		qt_opme_fornec_sadt_w
	from	pls_conta	a
	where	a.nr_sequencia  = nr_seq_conta_p;
	
	select	a.nr_seq_segurado,
		a.nr_seq_prestador_exec,
		a.nr_seq_prestador,
		a.ie_carater_internacao,
		a.nr_seq_saida_int,
		a.ie_obito_mulher,
		a.qt_nasc_mortos,
		a.qt_nasc_vivos_termo,
		a.qt_nasc_vivos_prematuros,
		a.qt_obito_precoce,
		a.qt_obito_tardio,
		a.nr_sequencia nr_seq_conta,
		a.ie_tipo_guia,
		a.nr_seq_clinica,
		a.ie_regime_internacao,
		a.ie_indicacao_acidente,
		a.nr_seq_tipo_acomodacao,
		a.nr_seq_saida_spsadt,
		a.nr_seq_tipo_atendimento,
		a.ie_tipo_doenca,
		a.nr_seq_saida_consulta,
		a.ie_tipo_consulta,
		a.dt_entrada,
		a.dt_alta,
		a.dt_atendimento,
		a.dt_emissao_guia,
		a.cd_senha_externa,
		coalesce(a.nr_crm_exec,obter_crm_medico(a.cd_medico_executor)),
		a.cd_medico_solicitante,
		a.cd_medico_executor,
		a.ds_indicacao_clinica,
		a.nr_seq_cbo_saude,
		a.nr_seq_cbo_saude_solic,
		a.nr_seq_grau_partic,
		a.ds_observacao,
		a.ie_gestacao,
		a.ie_aborto,
		a.ie_parto_normal,
		a.ie_complicacao_puerperio,
		a.ie_complicacao_neonatal,
		a.ie_parto_cesaria,
		a.ie_baixo_peso,
		a.ie_atend_rn_sala_parto,
		a.ie_transtorno,
		a.nr_seq_tipo_conta,
		a.ie_tipo_acomodacao_ptu,
		a.nr_crm_solic,
		a.nr_seq_conselho_solic,
		a.nr_seq_conselho_exec,
		a.cd_guia_principal,
		a.cd_guia,
		a.cd_guia_prestador,
		a.ie_recem_nascido,
		a.ie_tipo_faturamento,
		a.dt_inicio_faturamento,
		a.dt_fim_faturamento,
		a.ie_cobertura_especial,
		a.ie_regime_atendimento,
		a.ie_saude_ocupacional
	into STRICT	nr_seq_segurado_w,
		nr_seq_prestador_exec_w,
		nr_seq_prestador_solic_w,
		ie_carater_internacao_w,
		nr_seq_saida_int_w,
		ie_obito_mulher_w,
		qt_nasc_mortos_w,
		qt_nasc_vivos_termo_w,
		qt_nasc_vivos_prematuros_w,
		qt_obito_precoce_w,
		qt_obito_tardio_w,
		nr_seq_conta_w,
		ie_tipo_guia_w,
		nr_seq_clinica_w,
		ie_regime_internacao_w,
		ie_indicacao_acidente_w,
		nr_seq_tipo_acomodacao_w,
		nr_seq_saida_spsadt_w,
		nr_seq_tipo_atendimento_w,
		ie_tipo_doenca_w,
		nr_seq_saida_consulta_w,
		ie_tipo_consulta_w,
		dt_entrada_w,
		dt_alta_w,
		dt_atendimento_w,
		dt_emissao_guia_w,
		cd_senha_externa_w,
		nr_crm_exec_w,
		cd_medico_solicitante_w,
		cd_medico_executor_w,
		ds_indicacao_clinica_w,
		nr_seq_cbo_saude_w,
		nr_seq_cbo_saude_solic_w,
		nr_seq_grau_partic_w,
		ds_observacao_w,
		ie_gestacao_w,
		ie_aborto_w,
		ie_parto_normal_w,
		ie_complicacao_puerperio_w,
		ie_complicacao_neonatal_w,
		ie_parto_cesaria_w,
		ie_baixo_peso_w,
		ie_atend_rn_sala_parto_w,
		ie_transtorno_w,
		nr_seq_tipo_conta_w,
		ie_tipo_acomodacao_ptu_ww,
		nr_crm_solic_w,
		nr_seq_conselho_solic_w,
		nr_seq_conselho_exec_w,
		cd_guia_principal_w,
		cd_guia_w,
		cd_guia_prestador_w,
		ie_recem_nascido_w,
		ie_tipo_faturamento_w,
		dt_inicio_faturamento_w,
		dt_fim_faturamento_w,
		ie_cobertura_especial_w,
		ie_regime_atendimento_w,
		ie_saude_ocupacional_w
	from	w_pls_conta_alteracao	a
	where	a.nr_seq_conta   = nr_seq_conta_p
	and	nm_usuario	= nm_usuario_p;
	
	update	pls_conta	a
	set	a.nr_seq_segurado		= nr_seq_segurado_w,
		a.nr_seq_prestador_exec		= nr_seq_prestador_exec_w,
		a.nr_seq_prestador		= nr_seq_prestador_solic_w,
		a.ie_carater_internacao		= ie_carater_internacao_w,
		a.nr_seq_saida_int		= nr_seq_saida_int_w,
		a.ie_obito_mulher		= ie_obito_mulher_w,
		a.qt_nasc_mortos		= qt_nasc_mortos_w,
		a.qt_nasc_vivos_termo		= qt_nasc_vivos_termo_w,
		a.qt_nasc_vivos_prematuros	= qt_nasc_vivos_prematuros_w,
		a.qt_obito_precoce		= qt_obito_precoce_w,
		a.qt_obito_tardio		= qt_obito_tardio_w,
		a.ie_tipo_guia			= ie_tipo_guia_w,
		a.nr_seq_clinica		= nr_seq_clinica_w,
		a.ie_regime_internacao		= ie_regime_internacao_w,
		a.ie_indicacao_acidente		= ie_indicacao_acidente_w,
		a.nr_seq_tipo_acomodacao	= nr_seq_tipo_acomodacao_w,
		a.nr_seq_saida_spsadt		= nr_seq_saida_spsadt_w,
		a.nr_seq_tipo_atendimento	= nr_seq_tipo_atendimento_w,
		a.ie_tipo_doenca		= ie_tipo_doenca_w,
		a.nr_seq_saida_consulta		= nr_seq_saida_consulta_w,
		a.ie_tipo_consulta		= ie_tipo_consulta_w,
		a.dt_entrada			= dt_entrada_w,
		a.dt_alta			= dt_alta_w,
		a.dt_atendimento		= dt_atendimento_w,
		a.dt_emissao			= CASE WHEN ie_tipo_guia=3 THEN dt_atendimento_w  ELSE dt_emissao_guia_w END ,
		a.cd_senha_externa		= cd_senha_externa_w,
		a.nr_crm_exec			= nr_crm_exec_w,
		a.cd_medico_solicitante		= cd_medico_solicitante_w,
		a.cd_medico_executor		= cd_medico_executor_w,
		a.ds_indicacao_clinica		= ds_indicacao_clinica_w,
		a.nr_seq_cbo_saude		= nr_seq_cbo_saude_w,
		a.nr_seq_cbo_saude_solic	= nr_seq_cbo_saude_solic_w,
		a.nr_seq_grau_partic		= nr_seq_grau_partic_w,
		a.ds_observacao			= ds_observacao_w,
		a.ie_gestacao			= ie_gestacao_w,
		a.ie_aborto			= ie_aborto_w,
		a.ie_parto_normal		= ie_parto_normal_w,
		a.ie_complicacao_puerperio	= ie_complicacao_puerperio_w,
		a.ie_complicacao_neonatal	= ie_complicacao_neonatal_w,
		a.ie_parto_cesaria		= ie_parto_cesaria_w,
		a.ie_baixo_peso			= ie_baixo_peso_w,
		a.ie_atend_rn_sala_parto	= ie_atend_rn_sala_parto_w,
		a.ie_transtorno			= ie_transtorno_w,
		a.nr_seq_tipo_conta		= nr_seq_tipo_conta_w,
		a.dt_atualizacao		= clock_timestamp(),
		a.nm_usuario			= nm_usuario_p,
		a.ie_tipo_acomodacao_ptu	= ie_tipo_acomodacao_ptu_ww,
		a.nr_seq_conselho_solic		= nr_seq_conselho_solic_w,
		a.nr_seq_conselho_exec		= nr_seq_conselho_exec_w,
		a.ie_recem_nascido		= ie_recem_nascido_w,
		a.ie_tipo_faturamento		= ie_tipo_faturamento_w,
		a.dt_inicio_faturamento		= dt_inicio_faturamento_w,
		a.dt_fim_faturamento		= dt_fim_faturamento_w,
		a.cd_guia_referencia		= cd_guia_principal_w,
		a.cd_guia			= cd_guia_w,
		a.cd_guia_prestador		= cd_guia_prestador_w,
		a.ie_cobertura_especial = ie_cobertura_especial_w,
		a.ie_regime_atendimento = ie_regime_atendimento_w,
		a.ie_saude_ocupacional = ie_saude_ocupacional_w
	where	a.nr_sequencia			= nr_seq_conta_p;
		
	if (nr_seq_segurado_w <> nr_seq_segurado_ant_w) then

		begin
			select ie_tipo_congenere
			  into STRICT ie_tipo_congenere_w
			  from pls_segurado s, pls_congenere c
			 where s.nr_seq_congenere = c.nr_sequencia
			   and s.nr_sequencia = nr_seq_segurado_w;
		exception when no_data_found then
			ie_tipo_congenere_w := '';
		end;
			
		if (ie_tipo_congenere_w = 'CO') then

			--Se conta for sadt  e tiver algum OPME cujo fornec seja igual ao executor da conta
			if (qt_opme_fornec_sadt_w > 0 ) then
				-- vejo se eh do tipo internado apenas aqui, para nao chamar a funcion para itens desnecessarios,

				--pois na maioria dos casos nao se enquadra reduzindo o custo que essa chamada traria ao cursor,

				--ja que a quantidade de execucoes desnecessarias seria bem pior que a troca de contexto
				ie_internado_w := pls_obter_se_internado( nr_seq_conta_p, 'C');
				
				if ( ie_internado_w = 'N') then	
					CALL pls_gerar_valor_pos_estab(nr_seq_conta_p, nm_usuario_p, 'C', null, null, 'CAB');
				end if;
			else
				CALL pls_gerar_valor_pos_estab(nr_seq_conta_p, nm_usuario_p, 'C', null, null, 'CAB');
			end if;
		else
		
			select count(1) 
			  into STRICT qt_registro_w
			  from pls_conta_pos_estabelecido
			 where ie_status_faturamento = 'A'
			   and nr_seq_conta = nr_seq_conta_p;
			
			if (qt_registro_w > 0) then
			
				select  count(1)
				  into STRICT qt_registro_w
				  from  ptu_aviso_arquivo aa,
						ptu_aviso_protocolo ap,
						ptu_aviso_conta ac,
						ptu_aviso_procedimento pr,
						ptu_aviso_proc_item pi,
						pls_conta_pos_estabelecido pe
				 where aa.nr_sequencia = ap.nr_seq_arquivo
				   and ap.nr_sequencia    = ac.nr_seq_aviso_protocolo
				   and ac.nr_sequencia    = pr.nr_seq_aviso_conta
				   and pr.nr_sequencia = pi.nr_seq_aviso_procedimento
				   and pi.nr_seq_conta_pos_estab = pe.nr_sequencia
				   and pe.nr_seq_conta = nr_seq_conta_p;
				
				if (qt_registro_w > 0) then
				
					CALL wheb_mensagem_pck.exibir_mensagem_abort(1058521,'NR_SEQ_CONTA=' ||nr_seq_conta_p);
				
				else
				
				delete
				  from pls_conta_pos_estabelecido 
				 where nr_seq_conta = nr_seq_conta_p;
				
				end if;
			end if;
		end if;
	end if;
	
	-- tratamento para mudanca de guia de referencia, quando existe a alteracao, se faz necessario olhar a existencia de uma analise de pos

        -- existindo a analise de pos, deve-se entao verificar se ela tem algum item de pos vinculado, caso nao tenha, entao a guia referencia da

        -- analise de pos devera ser alterada igualmente

        -- isso se faz necessario para os casos aonde e gerado o pos, e entao precisa alterar a guia referencia na analise de pagamento.

        -- Como a analise de pos em si nao e apagada, somente os itens, ao fechar a conta com a nova guia referencia, a rotina nao achava o pos antigo

        -- e gerava um novo, ficando com a aparencia de duplicado.

        -- Como a alteracao de benef ja e tratada acima, entao este trecho somente sera executado caso o benef nao seja alterado
        if (coalesce(cd_guia_principal_w, 0) <> coalesce(cd_guia_principal_ant_w,0)) and (nr_seq_segurado_w = nr_seq_segurado_ant_w) then

                -- verifica se existe uma analise de pos para guia referencia antiga
               	select	max(a.nr_sequencia)
                into STRICT	nr_seq_analise_pos_ant_w
                from	pls_analise_conta	a
                where	a.cd_guia		= coalesce(cd_guia_principal_ant_w, cd_guia_ant_w)
                and	a.nr_seq_segurado 	= nr_seq_segurado_w
                and	a.ie_origem_analise 	= '2'
                and	not exists (SELECT	1
                                        from	pls_analise_conta b
                                        where 	b.nr_sequencia 	= a.nr_seq_analise_ref
                                        and	b.ie_status	= 'C'); --origem 2 = custo pos-estabelecido

                -- se encontrou uma analise pos com a guia anterior com o mesmo benef, verifica se ela ainda tem algum

                -- item vinculado para alguma conta diferente da alterada
                if (nr_seq_analise_pos_ant_w IS NOT NULL AND nr_seq_analise_pos_ant_w::text <> '') then

                        select  count(1)
                        into STRICT    qt_registro_w
                        from    pls_conta_pos_estabelecido      a
                        where   a.nr_seq_analise                = nr_seq_analise_pos_ant_w
			and	a.ie_status_faturamento		!= 'A';

                        -- se estiver zerado, quer dizer que a analise podera ter a guia referencia alterada
                        if (qt_registro_w = 0) then

                                update  pls_analise_conta
                                set     cd_guia         = cd_guia_principal_w,
                                        dt_atualizacao  = clock_timestamp(),
                                        nm_usuario      = nm_usuario_p
                                where   nr_sequencia    = nr_seq_analise_pos_ant_w;
                        end if;

                end if;
        end if;
		
	--Tratado aqui, pois ie_conta_principal_p refere-se ao parametro 18 e essa atualizacao

	--independe desse parametro
	if (ie_tipo_guia_w = 5) then
		--Atualiza beneficiario nas contas que referenciam esse

		--resumo de internacao(OS989534)
		if (ie_atualiza_seg_ref_p = 'S') then
			update	pls_conta a
			set	nr_seq_segurado 	= nr_seq_segurado_w
			where	nr_seq_conta_princ 	= nr_seq_conta_p;
			
			--Se usuario selecionou opcao de atualizar contas presentes em outras analises. Considera mesmo beneficiario e guia
			if (coalesce(ie_atual_seg_outras_analises_p,'N') = 'S') then
				
				update 	pls_analise_conta
				set	nr_seq_segurado = nr_seq_segurado_w
				where	nr_sequencia in ( SELECT nr_seq_analise
							  from	 pls_conta
							  where	nr_seq_segurado		= nr_seq_segurado_ant_w
							  and	cd_guia_ok		= cd_guia_w);
				
				update	pls_conta a
				set	nr_seq_segurado 	= nr_seq_segurado_w
				where	nr_seq_segurado		= nr_seq_segurado_ant_w
				and	cd_guia_ok		= cd_guia_w;
				
			end if;
			
			
		end if;
		
		
	end if;


	if (ie_tipo_guia_w in (5,6)) then

		--Necessario a atualizacao do beneficiario na pls_analise_conta
		update	pls_analise_conta
		set	nr_seq_segurado = nr_seq_segurado_w
		where	nr_sequencia = nr_seq_analise_p;

	else

		select	CASE WHEN count(1)=0 THEN  'S'  ELSE 'N' END
		into STRICT	ie_pode_atualizar_analise_w
		from	pls_conta a,
				pls_conta b
		where	a.nr_sequencia = nr_seq_conta_p
		and		a.nr_seq_analise = b.nr_seq_analise
		and		a.nr_seq_segurado != b.nr_seq_segurado;

		if (ie_pode_atualizar_analise_w = 'S') then
			update	pls_analise_conta
			set	nr_seq_segurado = nr_seq_segurado_w
			where	nr_sequencia = nr_seq_analise_p;
		end if;
		
	end if;
	
	
	
	/*
	Em alguns casos em que o seq_segurado da conta foi alterado para uma nova sequencia do mesmo beneficiario(antigo pre com dt rescisao e gerou
	primeiramente pos e depoiis alterado para sem dt_rescisao e nao deveria gerar, porem acabou pegando a sequencia do seg do cabecalho antigo)   
	*/
	begin
		delete	FROM pls_conta_pos_estab_aprop
		where	nr_seq_conta_pos_estab in (	SELECT	nr_sequencia
							from	pls_conta_pos_estabelecido
							where	nr_seq_conta	= nr_seq_conta_p);
		
		delete	FROM pls_conta_pos_estab_taxa
		where	nr_seq_conta_pos_estab in (	SELECT	nr_sequencia
							from	pls_conta_pos_estabelecido
							where	nr_seq_conta	= nr_seq_conta_p);
		
		CALL pls_delete_pls_conta_pos_estab(	null, null, nr_seq_conta_p, null);
		
		delete from pls_conta_pos_cabecalho where nr_seq_conta = nr_seq_conta_p;
		
		--Se tiver uma analise de pos vinculado a analise, entao exclui pois pode ser que ao fechar a conta em um segundo momento

		--nao venha a gerar pos novamente.
		select	max(nr_sequencia)
		into STRICT	nr_seq_analise_ref_w
		from	pls_analise_conta
		where  nr_seq_analise_ref = nr_seq_analise_p
		and    ie_origem_analise = 2;
		
		if (nr_seq_analise_ref_w IS NOT NULL AND nr_seq_analise_ref_w::text <> '') then
			excluir_analise_pos(nr_seq_analise_ref_w);
		end if;	
	exception
	when others then
		null;
	end;
	
	/* Gravar historico na analise da alteracao */

	ds_historico_w	:= null;
	if (coalesce(nr_seq_segurado_w,0) <> coalesce(nr_seq_segurado_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado beneficiario de ' || nr_seq_segurado_ant_w || ' para ' || nr_seq_segurado_w;
	end if;
	if (coalesce(nr_seq_prestador_exec_w,0) <> coalesce(nr_seq_prestador_exec_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado prestador exec de ' || nr_seq_prestador_exec_ant_w || ' para ' || nr_seq_prestador_exec_w;
	end if;
	if (coalesce(nr_seq_prestador_solic_w,0) <> coalesce(nr_seq_prestador_solic_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado prestador solic de ' || nr_seq_prestador_solic_ant_w || ' para ' || nr_seq_prestador_solic_w;
	end if;
	if (coalesce(ie_carater_internacao_w,0) <> coalesce(ie_carater_internacao_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado carater internacao de ' || ie_carater_internacao_ant_w || ' para ' || ie_carater_internacao_w;
	end if;
	if (coalesce(nr_seq_saida_int_w,0) <> coalesce(nr_seq_saida_int_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo saida internacao de ' || nr_seq_saida_int_ant_w || ' para ' || nr_seq_saida_int_w;
	end if;
	if (coalesce(ie_obito_mulher_w,0) <> coalesce(ie_obito_mulher_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado obito mulher de ' || ie_obito_mulher_ant_w || ' para ' || ie_obito_mulher_w;
	end if;
	if (coalesce(qt_nasc_mortos_w,0) <> coalesce(qt_nasc_mortos_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado nascidos mortos de ' || qt_nasc_mortos_ant_w || ' para ' || qt_nasc_mortos_w;
	end if;
	if (coalesce(qt_nasc_vivos_termo_w,0) <> coalesce(qt_nasc_vivos_termo_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado nascidos vivos de ' || qt_nasc_vivos_termo_ant_w || ' para ' || qt_nasc_vivos_termo_w;
	end if;
	if (coalesce(qt_nasc_vivos_prematuros_w,0) <> coalesce(qt_nasc_vivos_prematuros_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado nascidos prematuros de ' || qt_nasc_vivos_prematuros_ant_w || ' para ' || qt_nasc_vivos_prematuros_w;
	end if;
	if (coalesce(qt_obito_precoce_w,0) <> coalesce(qt_obito_precoce_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado obitos precoce de ' || qt_obito_precoce_ant_w || ' para ' || qt_obito_precoce_w;
	end if;
	if (coalesce(qt_obito_tardio_w,0) <> coalesce(qt_obito_tardio_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado obito tardio de ' || qt_obito_tardio_ant_w || ' para ' || qt_obito_tardio_w;
	end if;
	if (coalesce(ie_cobertura_especial_w,0) <> coalesce(ie_cobertura_especial_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterada cobertura especial de ' || ie_cobertura_especial_ant_w || ' para ' || ie_cobertura_especial_w;
	end if;
	if (coalesce(ie_regime_atendimento_w,0) <> coalesce(ie_regime_atendimento_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado regime de atendimento de ' || ie_regime_atendimento_ant_w || ' para ' || ie_regime_atendimento_w;
	end if;
	if (coalesce(ie_saude_ocupacional_w,0) <> coalesce(ie_saude_ocupacional_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterada saude ocupacional de ' || ie_saude_ocupacional_ant_w || ' para ' || ie_saude_ocupacional_w;
	end if;
	if (coalesce(ie_tipo_guia_w,0) <> coalesce(ie_tipo_guia_ant_w,0)) then
		--tratamento realizado para atualizar o tipo de guia da analise
		
		if (ie_tipo_guia_w	= '5') then
			update	pls_analise_conta
			set	ie_tipo_guia 	= ie_tipo_guia_w
			where	nr_sequencia	= nr_seq_analise_p;
		else 	
			update	pls_analise_conta	a
			set	ie_tipo_guia 	= ie_tipo_guia_w
			where	nr_sequencia	= nr_seq_analise_p
			and	not exists (SELECT	1
						from	pls_conta	b
						where	b.nr_seq_analise	= a.nr_sequencia
						and	b.ie_tipo_guia		= '5');
		end if;
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo de guia de ' || ie_tipo_guia_ant_w || ' para ' || ie_tipo_guia_w;
	end if;
	if (coalesce(nr_seq_clinica_w,0) <> coalesce(nr_seq_clinica_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado clinica de ' || nr_seq_clinica_ant_w || ' para ' || nr_seq_clinica_w;
	end if;
	if (coalesce(ie_regime_internacao_w,0) <> coalesce(ie_regime_internacao_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado regime internacao de ' || ie_regime_internacao_ant_w || ' para ' || ie_regime_internacao_w;
	end if;
	if (coalesce(ie_indicacao_acidente_w,0) <> coalesce(ie_indicacao_acidente_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado indicacao acid. de ' || ie_indicacao_acidente_ant_w || ' para ' || ie_indicacao_acidente_w;
	end if;
	if (coalesce(nr_seq_tipo_acomodacao_w,0) <> coalesce(nr_seq_tipo_acomodacao_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo acomod. de ' || nr_seq_tipo_acomodacao_ant_w || ' para ' || nr_seq_tipo_acomodacao_w;
	end if;
	if (coalesce(nr_seq_saida_spsadt_w,0) <> coalesce(nr_seq_saida_spsadt_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo saida SADT de ' || nr_seq_saida_spsadt_ant_w || ' para ' || nr_seq_saida_spsadt_w;
	end if;
	if (coalesce(nr_seq_tipo_atendimento_w,0) <> coalesce(nr_seq_tipo_atendimento_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo atend. de ' || nr_seq_tipo_atendimento_ant_w || ' para ' || nr_seq_tipo_atendimento_w;
	end if;
	if (coalesce(ie_tipo_doenca_w,0) <> coalesce(ie_tipo_doenca_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo doenca de ' || ie_tipo_doenca_ant_w || ' para ' || ie_tipo_doenca_w;
	end if;
	if (coalesce(nr_seq_saida_consulta_w,0) <> coalesce(nr_seq_saida_consulta_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo saida cons. de ' || nr_seq_saida_consulta_ant_w || ' para ' || nr_seq_saida_consulta_w;
	end if;
	if (coalesce(ie_tipo_consulta_w,0) <> coalesce(ie_tipo_consulta_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo consulta de ' || ie_tipo_consulta_ant_w || ' para ' || ie_tipo_consulta_w;
	end if;
	if (coalesce(dt_entrada_w,clock_timestamp()) <> coalesce(dt_entrada_ant_w,clock_timestamp())) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado data de entrada de ' || dt_entrada_ant_w || ' para ' || dt_entrada_w;
	end if;
	if (coalesce(dt_alta_w,clock_timestamp()) <> coalesce(dt_alta_ant_w,clock_timestamp())) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado data de alta de ' || dt_alta_ant_w || ' para ' || dt_alta_w;
	end if;
	if (trunc(coalesce(dt_atendimento_w,clock_timestamp())) <> trunc(coalesce(dt_atendimento_ant_w,clock_timestamp()))) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado data atendimento de ' || dt_atendimento_ant_w || ' para ' || dt_atendimento_w;
	end if;
	if (coalesce(dt_emissao_guia_w,clock_timestamp()) <> coalesce(dt_emissao_guia_ant_w,clock_timestamp())) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado data atendimento de ' || dt_emissao_guia_ant_w || ' para ' || dt_emissao_guia_w;
	end if;
	if (coalesce(cd_senha_externa_w,0) <> coalesce(cd_senha_externa_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado senha externa de ' || cd_senha_externa_ant_w || ' para ' || cd_senha_externa_w;
	end if;
	if (coalesce(nr_crm_exec_w,0) <> coalesce(nr_crm_exec_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado crm executor de ' || nr_crm_exec_ant_w || ' para ' || nr_crm_exec_w;
	end if;
	if (coalesce(cd_medico_solicitante_w,0) <> coalesce(cd_medico_solicitante_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado medico solic. de ' || cd_medico_solicitante_ant_w || ' para ' || cd_medico_solicitante_w;
	end if;
	if (coalesce(cd_medico_executor_w,0) <> coalesce(cd_medico_executor_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado medico exec. de ' || cd_medico_executor_ant_w || ' para ' || cd_medico_executor_w;
	end if;
	if (coalesce(ds_indicacao_clinica_w,0) <> coalesce(ds_indicacao_clinica_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado indicacao clinica de ' || ds_indicacao_clinica_ant_w || ' para ' || ds_indicacao_clinica_w;
	end if;
	if (coalesce(nr_seq_cbo_saude_w,0) <> coalesce(nr_seq_cbo_saude_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado CBO Saude exec. de ' || nr_seq_cbo_saude_ant_w || ' para ' || nr_seq_cbo_saude_w;
	end if;
	if (coalesce(nr_seq_cbo_saude_solic_w,0) <> coalesce(nr_seq_cbo_saude_solic_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado CBO Saude solic. de ' || nr_seq_cbo_saude_solic_ant_w || ' para ' || nr_seq_cbo_saude_solic_w;
	end if;
	if (coalesce(nr_seq_grau_partic_w,0) <> coalesce(nr_seq_grau_partic_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado grau de partic. de ' || nr_seq_grau_partic_ant_w || ' para ' || nr_seq_grau_partic_w;
	end if;
	if (coalesce(ds_observacao_w,0) <> coalesce(ds_observacao_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado observacao de ' || ds_observacao_ant_w || ' para ' || ds_observacao_w;
	end if;
	if (coalesce(ie_gestacao_w,0) <> coalesce(ie_gestacao_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado gestacao de ' || ie_gestacao_ant_w || ' para ' || ie_gestacao_w;
	end if;
	if (coalesce(ie_aborto_w,0) <> coalesce(ie_aborto_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado aborto de ' || ie_aborto_ant_w || ' para ' || ie_aborto_w;
	end if;
	if (coalesce(ie_tipo_acomodacao_ptu_w,'X') <> coalesce(ie_tipo_acomodacao_ptu_ww,'X')) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo de acomodacao ptu ' || ie_tipo_acomodacao_ptu_w || ' para ' || ie_tipo_acomodacao_ptu_ww;
	end if;
	if (coalesce(ie_parto_normal_w,0) <> coalesce(ie_parto_normal_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado parto normal de ' || ie_parto_normal_ant_w || ' para ' || ie_parto_normal_w;
	end if;
	if (coalesce(ie_complicacao_puerperio_w,0) <> coalesce(ie_complicacao_puerperio_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado complicacao puerperio de ' || ie_complicacao_puerperio_ant_w || ' para ' || ie_complicacao_puerperio_w;
	end if;
	if (coalesce(ie_complicacao_neonatal_w,0) <> coalesce(ie_complicacao_neonatal_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado complicacao neonatal de ' || ie_complicacao_neonatal_ant_w || ' para ' || ie_complicacao_neonatal_w;
	end if;
	if (coalesce(ie_parto_cesaria_w,0) <> coalesce(ie_parto_cesaria_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado parto cesaria de ' || ie_parto_cesaria_ant_w || ' para ' || ie_parto_cesaria_w;
	end if;
	if (coalesce(ie_baixo_peso_w,0) <> coalesce(ie_baixo_peso_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado baixo peso de ' || ie_baixo_peso_ant_w || ' para ' || ie_baixo_peso_w;
	end if;
	if (coalesce(ie_atend_rn_sala_parto_w,0) <> coalesce(ie_atend_rn_sala_parto_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado atend. rn sala parto de ' || ie_atend_rn_sala_parto_ant_w || ' para ' || ie_atend_rn_sala_parto_w;
	end if;
	if (coalesce(ie_transtorno_w,0) <> coalesce(ie_transtorno_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado transtorno de ' || ie_transtorno_ant_w || ' para ' || ie_transtorno_w;
	end if;
	if (coalesce(nr_seq_tipo_conta_w,0) <> coalesce(nr_seq_tipo_conta_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo conta de ' || nr_seq_tipo_conta_ant_w || ' para ' || nr_seq_tipo_conta_w;
	end if;	
	if (coalesce(nr_seq_conselho_solic_w,0) <> coalesce(nr_seq_conselho_solic_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado conselho do profissional solicitante de ' || nr_seq_conselho_solic_ant_w || ' para ' || nr_seq_conselho_solic_w;
	end if;
	if (coalesce(nr_seq_conselho_exec_w,0) <> coalesce(nr_seq_conselho_exec_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado conselho do profissional executor de ' || nr_seq_conselho_exec_ant_w || ' para ' || nr_seq_conselho_exec_w;
	end if;	
	if (coalesce(ie_tipo_faturamento_w,0) <> coalesce(ie_tipo_faturamento_ant_w,0)) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo do faturamento de ' || ie_tipo_faturamento_ant_w || ' para ' || ie_tipo_faturamento_w;
	end if;	
	if (coalesce(dt_inicio_faturamento_w,clock_timestamp()) <> coalesce(dt_inicio_faturamento_ant_w,clock_timestamp())) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterada data de inicio do faturamento de ' || dt_inicio_faturamento_ant_w || ' para ' || dt_inicio_faturamento_w;
	end if;
	if (coalesce(dt_fim_faturamento_w,clock_timestamp()) <> coalesce(dt_fim_faturamento_ant_w,clock_timestamp())) then
		ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterada data de fim do faturamento de ' || dt_fim_faturamento_ant_w || ' para ' || dt_fim_faturamento_w;
	end if;
	if (coalesce(cd_guia_principal_w, 0) <> coalesce(cd_guia_principal_ant_w,0)) then
		ds_historico_w  := ds_historico_w || chr(13) || chr(10) || 'Alterada Guia Principal de ' || cd_guia_principal_ant_w || ' para ' || cd_guia_principal_w;
	end if;
	if (coalesce(cd_guia_w, 0) <> coalesce(cd_guia_ant_w,0)) then
		ds_historico_w  := ds_historico_w || chr(13) || chr(10) || 'Alterada Guia Principal de ' || cd_guia_ant_w || ' para ' || cd_guia_w;
	end if;
	if (coalesce(cd_guia_prestador_w, 0) <> coalesce(cd_guia_prestador_ant_w,0)) then
		ds_historico_w  := ds_historico_w || chr(13) || chr(10) || 'Alterada Guia Principal de ' || cd_guia_prestador_ant_w || ' para ' || cd_guia_prestador_w;
	end if;
	
	if (ds_historico_w IS NOT NULL AND ds_historico_w::text <> '') then
		ds_historico_w	:= 'Conta: ' || nr_seq_conta_w || ds_historico_w;
		insert into pls_hist_analise_conta(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_analise,
			nr_seq_conta,
			ie_tipo_historico,
			ds_observacao,
			nr_seq_grupo)
		values (nextval('pls_hist_analise_conta_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_analise_p,
			nr_seq_conta_p,
			17,
			ds_historico_w,
			nr_seq_grupo_p);
			
		ds_historico_w	:= null;
	end if;
	
	if (nr_seq_prestador_exec_orig_w <> nr_seq_prestador_exec_w ) and (nr_seq_prestador_exec_orig_w IS NOT NULL AND nr_seq_prestador_exec_orig_w::text <> '') and (nr_seq_prestador_exec_w IS NOT NULL AND nr_seq_prestador_exec_w::text <> '') then
		update	pls_conta_proc
		set	nr_seq_prest_pgto_medico 	= nr_seq_prestador_exec_w
		where	nr_seq_conta			= nr_seq_conta_p
		and	nr_seq_prest_pgto_medico	= nr_seq_prestador_exec_orig_w;
		
		ds_historico_w	:= ' Alterado prestador de pagamento medico do prestador ' || nr_seq_prestador_exec_orig_w || ' para o prestador ' || nr_seq_prestador_exec_w;
	end if;
	
	if (ds_historico_w IS NOT NULL AND ds_historico_w::text <> '') then
		ds_historico_w	:= 'Conta: ' || nr_seq_conta_w || ds_historico_w;
		insert into pls_hist_analise_conta(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_analise,
			nr_seq_conta,
			ie_tipo_historico,
			ds_observacao,
			nr_seq_grupo,
			ds_call_stack)
		values (nextval('pls_hist_analise_conta_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_analise_p,
			nr_seq_conta_p,
			17,
			ds_historico_w,
			nr_seq_grupo_p,
			substr(dbms_utility.format_call_stack,1,4000));
			
		ds_historico_w	:= null;
	end if;
	
	if (ie_tipo_guia_w in ('4', '5')) then
		open C07;
		loop
		fetch C07 into	
			nr_seq_conta_item_w;
		EXIT WHEN NOT FOUND; /* apply on C07 */
			begin
			if (ie_tipo_guia_w = '4') and (ie_conta_principal_p = 'S') then
				/* Dados originais */

				select	a.nr_seq_segurado,
					a.nr_seq_prestador,
					a.ie_carater_internacao,
					a.ie_indicacao_acidente,
					a.nr_seq_saida_spsadt,
					a.nr_seq_tipo_atendimento,
					a.ie_tipo_doenca,
					a.nr_seq_saida_consulta,
					a.dt_atendimento,
					a.dt_emissao,
					a.cd_senha_externa,
					a.cd_medico_solicitante,
					a.ds_indicacao_clinica,
					a.nr_seq_cbo_saude_solic,
					a.ds_observacao,
					a.nr_seq_tipo_conta,
					a.nr_seq_conselho_solic,
					a.nr_seq_conselho_exec,
					a.cd_guia_referencia,
					a.cd_guia,
					a.ie_tipo_consulta,
					a.nr_seq_saida_int
				into STRICT	nr_seq_segurado_ant_w,
					nr_seq_prestador_solic_ant_w,
					ie_carater_internacao_ant_w,
					ie_indicacao_acidente_ant_w,
					nr_seq_saida_spsadt_ant_w,
					nr_seq_tipo_atendimento_ant_w,
					ie_tipo_doenca_ant_w,
					nr_seq_saida_consulta_ant_w,
					dt_atendimento_ant_w,
					dt_emissao_guia_ant_w,
					cd_senha_externa_ant_w,
					cd_medico_solicitante_ant_w,
					ds_indicacao_clinica_ant_w,
					nr_seq_cbo_saude_solic_ant_w,
					ds_observacao_ant_w,
					nr_seq_tipo_conta_ant_w,
					nr_seq_conselho_solic_ant_w,
					nr_seq_conselho_exec_ant_w,
					cd_guia_principal_ant_w,
					cd_guia_ant_w,
					ie_tipo_consulta_ant_w,
					nr_seq_saida_int_ant_w
				from	pls_conta a
				where	a.nr_sequencia	= nr_seq_conta_item_w;
			
				update	pls_conta	a
				set	a.nr_seq_segurado		= nr_seq_segurado_w,
					a.nr_seq_prestador		= nr_seq_prestador_solic_w,
					a.ie_carater_internacao		= ie_carater_internacao_w,
					--a.ie_tipo_guia			= ie_tipo_guia_w,
					a.ie_indicacao_acidente		= ie_indicacao_acidente_w,
					a.nr_seq_saida_spsadt		= nr_seq_saida_spsadt_w,
					a.nr_seq_tipo_atendimento	= nr_seq_tipo_atendimento_w,
					a.ie_tipo_doenca		= ie_tipo_doenca_w,
					a.nr_seq_saida_consulta		= nr_seq_saida_consulta_w,
					a.dt_atendimento		= dt_atendimento_w,
					a.dt_emissao			= dt_emissao_guia_w,
					a.cd_senha_externa		= cd_senha_externa_w,
					a.cd_medico_solicitante		= cd_medico_solicitante_w,
					a.ds_indicacao_clinica		= ds_indicacao_clinica_w,
					a.nr_seq_cbo_saude_solic	= nr_seq_cbo_saude_solic_w,
					a.ds_observacao			= ds_observacao_w,
					a.nr_seq_tipo_conta		= nr_seq_tipo_conta_w,
					a.dt_atualizacao		= clock_timestamp(),
					a.nm_usuario			= nm_usuario_p,
					a.nr_seq_conselho_solic		= nr_seq_conselho_solic_w,
					a.ie_tipo_consulta		= ie_tipo_consulta_w
				where	a.nr_sequencia			= nr_seq_conta_item_w;
				
				
				begin
					delete	FROM pls_conta_pos_estab_aprop
					where	nr_seq_conta_pos_estab in (	SELECT	nr_sequencia
										from	pls_conta_pos_estabelecido
										where	nr_seq_conta	= nr_seq_conta_item_w);
					
					delete	FROM pls_conta_pos_estab_taxa
					where	nr_seq_conta_pos_estab in (	SELECT	nr_sequencia
										from	pls_conta_pos_estabelecido
										where	nr_seq_conta	= nr_seq_conta_item_w);
					
					CALL pls_delete_pls_conta_pos_estab(	null, null, nr_seq_conta_item_w, null);
					
					delete from pls_conta_pos_cabecalho where nr_seq_conta = nr_seq_conta_item_w;
				exception
				when others then
					null;
				end;
				
				if (cd_guia_referencia_ant_w IS NOT NULL AND cd_guia_referencia_ant_w::text <> '') and (cd_guia_principal_ant_w	= cd_guia_referencia_ant_w) and (cd_guia_referencia_ant_w	!= cd_guia_principal_w)then
					update	pls_conta
					set	cd_guia_referencia	= cd_guia_principal_w
					where	nr_sequencia		= nr_seq_conta_item_w;
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado guia referencia ' || cd_guia_referencia_ant_w || ' para ' || cd_guia_principal_w;
				elsif (coalesce(cd_guia_referencia_ant_w::text, '') = ''		) and (cd_guia_principal_ant_w	= cd_guia_ant_w ) and (cd_guia_ant_w IS NOT NULL AND cd_guia_ant_w::text <> '') and (cd_guia_ant_w			!= cd_guia_principal_w ) then
					update	pls_conta
					set	cd_guia			= cd_guia_principal_w
					where	nr_sequencia		= nr_seq_conta_item_w;
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado guia  ' || cd_guia_ant_w || ' para ' || cd_guia_principal_w;
				end if;
	
				if (coalesce(nr_seq_segurado_w,0) <> coalesce(nr_seq_segurado_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado beneficiario de ' || nr_seq_segurado_ant_w || ' para ' || nr_seq_segurado_w;
				end if;
				if (coalesce(nr_seq_prestador_solic_w,0) <> coalesce(nr_seq_prestador_solic_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado prestador solic de ' || nr_seq_prestador_solic_ant_w || ' para ' || nr_seq_prestador_solic_w;
				end if;
				if (coalesce(ie_carater_internacao_w,0) <> coalesce(ie_carater_internacao_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado carater internacao de ' || ie_carater_internacao_ant_w || ' para ' || ie_carater_internacao_w;
				end if;
				if (coalesce(ie_indicacao_acidente_w,0) <> coalesce(ie_indicacao_acidente_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado indicacao acid. de ' || ie_indicacao_acidente_ant_w || ' para ' || ie_indicacao_acidente_w;
				end if;
				if (coalesce(nr_seq_saida_spsadt_w,0) <> coalesce(nr_seq_saida_spsadt_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo saida SADT de ' || nr_seq_saida_spsadt_ant_w || ' para ' || nr_seq_saida_spsadt_w;
				end if;
				if (coalesce(nr_seq_tipo_atendimento_w,0) <> coalesce(nr_seq_tipo_atendimento_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo atend. de ' || nr_seq_tipo_atendimento_ant_w || ' para ' || nr_seq_tipo_atendimento_w;
				end if;
				if (coalesce(ie_tipo_doenca_w,0) <> coalesce(ie_tipo_doenca_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo doenca de ' || ie_tipo_doenca_ant_w || ' para ' || ie_tipo_doenca_w;
				end if;
				if (coalesce(dt_atendimento_w,clock_timestamp()) <> coalesce(dt_atendimento_ant_w,clock_timestamp())) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado data atendimento de ' || dt_atendimento_ant_w || ' para ' || dt_atendimento_w;
				end if;
				if (coalesce(dt_emissao_guia_w,clock_timestamp()) <> coalesce(dt_emissao_guia_ant_w,clock_timestamp())) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado data atendimento de ' || dt_emissao_guia_ant_w || ' para ' || dt_emissao_guia_w;
				end if;
				if (coalesce(cd_senha_externa_w,0) <> coalesce(cd_senha_externa_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado senha externa de ' || cd_senha_externa_ant_w || ' para ' || cd_senha_externa_w;
				end if;
				if (coalesce(cd_medico_solicitante_w,0) <> coalesce(cd_medico_solicitante_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado medico solic. de ' || cd_medico_solicitante_ant_w || ' para ' || cd_medico_solicitante_w;
				end if;
				if (coalesce(ds_indicacao_clinica_w,0) <> coalesce(ds_indicacao_clinica_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado indicacao clinica de ' || ds_indicacao_clinica_ant_w || ' para ' || ds_indicacao_clinica_w;
				end if;
				if (coalesce(nr_seq_cbo_saude_solic_w,0) <> coalesce(nr_seq_cbo_saude_solic_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado CBO Saude solic. de ' || nr_seq_cbo_saude_solic_ant_w || ' para ' || nr_seq_cbo_saude_solic_w;
				end if;
				if (coalesce(ds_observacao_w,0) <> coalesce(ds_observacao_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado observacao de ' || ds_observacao_ant_w || ' para ' || ds_observacao_w;
				end if;
				if (coalesce(nr_seq_tipo_conta_w,0) <> coalesce(nr_seq_tipo_conta_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo conta de ' || nr_seq_tipo_conta_ant_w || ' para ' || nr_seq_tipo_conta_w;
				end if;	
				if (coalesce(nr_seq_conselho_solic_w,0) <> coalesce(nr_seq_conselho_solic_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado conselho do profissional solicitante de ' || nr_seq_conselho_solic_ant_w || ' para ' || nr_seq_conselho_solic_w;
				end if;
				if (coalesce(ie_tipo_consulta_w,0) <> coalesce(ie_tipo_consulta_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo de consulta de ' || ie_tipo_consulta_ant_w || ' para ' || ie_tipo_consulta_w;
				end if;				
				if (coalesce(nr_seq_saida_int_w,0) <> coalesce(nr_seq_saida_int_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado motivo de encerramento de ' || nr_seq_saida_int_ant_w || ' para ' || nr_seq_saida_int_w;
				end if;
				
				if (ds_historico_w IS NOT NULL AND ds_historico_w::text <> '') then
					ds_historico_w	:= 'Conta: ' || nr_seq_conta_item_w || ds_historico_w;
					insert into pls_hist_analise_conta(nr_sequencia,
						nm_usuario,
						dt_atualizacao,
						nm_usuario_nrec,
						dt_atualizacao_nrec,
						nr_seq_analise,
						nr_seq_conta,
						ie_tipo_historico,
						ds_observacao,
						nr_seq_grupo,
						ds_call_stack)
					values (nextval('pls_hist_analise_conta_seq'),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nr_seq_analise_p,
						nr_seq_conta_p,
						17,
						ds_historico_w,
						nr_seq_grupo_p,
						substr(dbms_utility.format_call_stack,1,4000));
						
					ds_historico_w	:= null;
				end if;

			elsif (ie_tipo_guia_w = '5') and (ie_conta_principal_p = 'S') then
				/* Dados originais */

				select	a.nr_seq_segurado,
					a.nr_seq_prestador,
					a.ie_carater_internacao,
					a.nr_seq_saida_int,
					a.ie_obito_mulher,
					a.qt_nasc_mortos,
					a.qt_nasc_vivos_termo,
					a.qt_nasc_vivos_prematuros,
					a.qt_obito_precoce,
					a.qt_obito_tardio,
					a.nr_seq_clinica,
					a.ie_regime_internacao,
					a.ie_indicacao_acidente,
					a.nr_seq_tipo_acomodacao,
					a.ie_tipo_doenca,
					a.nr_seq_saida_consulta,
					a.dt_entrada,
					a.dt_alta,
					a.dt_atendimento,
					a.dt_emissao,
					a.cd_senha_externa,
					a.cd_medico_solicitante,
					a.ds_indicacao_clinica,
					a.nr_seq_cbo_saude_solic,
					a.ds_observacao,
					a.ie_gestacao,
					a.ie_aborto,
					a.ie_parto_normal,
					a.ie_complicacao_puerperio,
					a.ie_complicacao_neonatal,
					a.ie_parto_cesaria,
					a.ie_baixo_peso,
					a.ie_atend_rn_sala_parto,
					a.ie_transtorno,
					a.nr_seq_tipo_conta,
					a.ie_tipo_acomodacao_ptu,
					a.nr_seq_conselho_solic,
					a.nr_seq_conselho_exec,
					a.cd_guia_referencia,
					a.cd_guia,
					a.ie_tipo_faturamento
				into STRICT	nr_seq_segurado_ant_w,
					nr_seq_prestador_solic_ant_w,
					ie_carater_internacao_ant_w,
					nr_seq_saida_int_ant_w,
					ie_obito_mulher_ant_w,
					qt_nasc_mortos_ant_w,
					qt_nasc_vivos_termo_ant_w,
					qt_nasc_vivos_prematuros_ant_w,
					qt_obito_precoce_ant_w,
					qt_obito_tardio_ant_w,
					nr_seq_clinica_ant_w,
					ie_regime_internacao_ant_w,
					ie_indicacao_acidente_ant_w,
					nr_seq_tipo_acomodacao_ant_w,
					ie_tipo_doenca_ant_w,
					nr_seq_saida_consulta_ant_w,
					dt_entrada_ant_w,
					dt_alta_ant_w,
					dt_atendimento_ant_w,
					dt_emissao_guia_ant_w,
					cd_senha_externa_ant_w,
					cd_medico_solicitante_ant_w,
					ds_indicacao_clinica_ant_w,
					nr_seq_cbo_saude_solic_ant_w,
					ds_observacao_ant_w,
					ie_gestacao_ant_w,
					ie_aborto_ant_w,
					ie_parto_normal_ant_w,
					ie_complicacao_puerperio_ant_w,
					ie_complicacao_neonatal_ant_w,
					ie_parto_cesaria_ant_w,
					ie_baixo_peso_ant_w,
					ie_atend_rn_sala_parto_ant_w,
					ie_transtorno_ant_w,
					nr_seq_tipo_conta_ant_w,
					ie_tipo_acomodacao_ptu_w,
					nr_seq_conselho_solic_ant_w,
					nr_seq_conselho_exec_ant_w,
					cd_guia_referencia_ant_w,
					cd_guia_ant_w,
					ie_tipo_faturamento_ant_w
				from	pls_conta a
				where	a.nr_sequencia	= nr_seq_conta_item_w;
			
				update	pls_conta	a
				set	a.nr_seq_segurado		= nr_seq_segurado_w,
					a.nr_seq_prestador		= nr_seq_prestador_solic_w,
					a.ie_carater_internacao		= ie_carater_internacao_w,
					a.nr_seq_saida_int		= nr_seq_saida_int_w,
					a.ie_obito_mulher		= ie_obito_mulher_w,
					a.qt_nasc_mortos		= qt_nasc_mortos_w,
					a.qt_nasc_vivos_termo		= qt_nasc_vivos_termo_w,
					a.qt_nasc_vivos_prematuros	= qt_nasc_vivos_prematuros_w,
					a.qt_obito_precoce		= qt_obito_precoce_w,
					a.qt_obito_tardio		= qt_obito_tardio_w,
					--a.ie_tipo_guia			= ie_tipo_guia_w,
					a.nr_seq_clinica		= nr_seq_clinica_w,
					a.ie_regime_internacao		= ie_regime_internacao_w,
					a.ie_indicacao_acidente		= ie_indicacao_acidente_w,
					a.nr_seq_tipo_acomodacao	= nr_seq_tipo_acomodacao_w,
					a.ie_tipo_doenca		= ie_tipo_doenca_w,
					a.nr_seq_saida_consulta		= nr_seq_saida_consulta_w,
					a.dt_entrada			= dt_entrada_w,
					a.dt_alta			= dt_alta_w,
					a.dt_atendimento		= dt_atendimento_w,
					a.dt_emissao			= dt_emissao_guia_w,
					a.cd_senha_externa		= cd_senha_externa_w,
					a.cd_medico_solicitante		= cd_medico_solicitante_w,
					a.ds_indicacao_clinica		= ds_indicacao_clinica_w,
					a.nr_seq_cbo_saude_solic	= nr_seq_cbo_saude_solic_w,
					a.ds_observacao			= ds_observacao_w,
					a.ie_gestacao			= ie_gestacao_w,
					a.ie_aborto			= ie_aborto_w,
					a.ie_parto_normal		= ie_parto_normal_w,
					a.ie_complicacao_puerperio	= ie_complicacao_puerperio_w,
					a.ie_complicacao_neonatal	= ie_complicacao_neonatal_w,
					a.ie_parto_cesaria		= ie_parto_cesaria_w,
					a.ie_baixo_peso			= ie_baixo_peso_w,
					a.ie_atend_rn_sala_parto	= ie_atend_rn_sala_parto_w,
					a.ie_transtorno			= ie_transtorno_w,
					a.nr_seq_tipo_conta		= nr_seq_tipo_conta_w,
					a.dt_atualizacao		= clock_timestamp(),
					a.nm_usuario			= nm_usuario_p,
					a.ie_tipo_acomodacao_ptu	= ie_tipo_acomodacao_ptu_ww,
					a.nr_seq_conselho_solic		= nr_seq_conselho_solic_w,
					a.ie_tipo_faturamento		= ie_tipo_faturamento_w
				where	a.nr_sequencia			= nr_seq_conta_item_w;
				
				begin
					delete	FROM pls_conta_pos_estab_aprop
					where	nr_seq_conta_pos_estab in (	SELECT	nr_sequencia
										from	pls_conta_pos_estabelecido
										where	nr_seq_conta	= nr_seq_conta_item_w);
					
					delete	FROM pls_conta_pos_estab_taxa
					where	nr_seq_conta_pos_estab in (	SELECT	nr_sequencia
										from	pls_conta_pos_estabelecido
										where	nr_seq_conta	= nr_seq_conta_item_w);
					
					CALL pls_delete_pls_conta_pos_estab(	null, null, nr_seq_conta_item_w, null);
					
					delete from pls_conta_pos_cabecalho where nr_seq_conta = nr_seq_conta_item_w;
				exception
				when others then
					null;
				end;				
				if (cd_guia_referencia_ant_w IS NOT NULL AND cd_guia_referencia_ant_w::text <> '') and (cd_guia_principal_ant_w	= cd_guia_referencia_ant_w) and (cd_guia_referencia_ant_w	!= cd_guia_principal_w)then
					update	pls_conta
					set	cd_guia_referencia	= cd_guia_principal_w
					where	nr_sequencia		= nr_seq_conta_item_w;
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado guia referencia ' || cd_guia_referencia_ant_w || ' para ' || cd_guia_principal_w;
				elsif (coalesce(cd_guia_referencia_ant_w::text, '') = ''		) and (cd_guia_principal_ant_w	= cd_guia_ant_w ) and (cd_guia_ant_w IS NOT NULL AND cd_guia_ant_w::text <> '') and (cd_guia_ant_w			!= cd_guia_principal_w ) then
					update	pls_conta
					set	cd_guia			= cd_guia_principal_w
					where	nr_sequencia		= nr_seq_conta_item_w;
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado guia  ' || cd_guia_ant_w || ' para ' || cd_guia_principal_w;
				end if;
				
				if (coalesce(nr_seq_segurado_w,0) <> coalesce(nr_seq_segurado_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado beneficiario de ' || nr_seq_segurado_ant_w || ' para ' || nr_seq_segurado_w;
				end if;
				if (coalesce(nr_seq_prestador_solic_w,0) <> coalesce(nr_seq_prestador_solic_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado prestador solic de ' || nr_seq_prestador_solic_ant_w || ' para ' || nr_seq_prestador_solic_w;
				end if;
				if (coalesce(ie_carater_internacao_w,0) <> coalesce(ie_carater_internacao_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado carater internacao de ' || ie_carater_internacao_ant_w || ' para ' || ie_carater_internacao_w;
				end if;
				if (coalesce(nr_seq_saida_int_w,0) <> coalesce(nr_seq_saida_int_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo saida internacao de ' || nr_seq_saida_int_ant_w || ' para ' || nr_seq_saida_int_w;
				end if;
				if (coalesce(ie_obito_mulher_w,0) <> coalesce(ie_obito_mulher_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado obito mulher de ' || ie_obito_mulher_ant_w || ' para ' || ie_obito_mulher_w;
				end if;
				if (coalesce(qt_nasc_mortos_w,0) <> coalesce(qt_nasc_mortos_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado nascidos mortos de ' || qt_nasc_mortos_ant_w || ' para ' || qt_nasc_mortos_w;
				end if;
				if (coalesce(qt_nasc_vivos_termo_w,0) <> coalesce(qt_nasc_vivos_termo_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado nascidos vivos de ' || qt_nasc_vivos_termo_ant_w || ' para ' || qt_nasc_vivos_termo_w;
				end if;
				if (coalesce(qt_nasc_vivos_prematuros_w,0) <> coalesce(qt_nasc_vivos_prematuros_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado nascidos prematuros de ' || qt_nasc_vivos_prematuros_ant_w || ' para ' || qt_nasc_vivos_prematuros_w;
				end if;
				if (coalesce(qt_obito_precoce_w,0) <> coalesce(qt_obito_precoce_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado obitos precoce de ' || qt_obito_precoce_ant_w || ' para ' || qt_obito_precoce_w;
				end if;
				if (coalesce(qt_obito_tardio_w,0) <> coalesce(qt_obito_tardio_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado obito tardio de ' || qt_obito_tardio_ant_w || ' para ' || qt_obito_tardio_w;
				end if;
				if (coalesce(nr_seq_clinica_w,0) <> coalesce(nr_seq_clinica_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado clinica de ' || nr_seq_clinica_ant_w || ' para ' || nr_seq_clinica_w;
				end if;
				if (coalesce(ie_regime_internacao_w,0) <> coalesce(ie_regime_internacao_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado regime internacao de ' || ie_regime_internacao_ant_w || ' para ' || ie_regime_internacao_w;
				end if;
				if (coalesce(ie_indicacao_acidente_w,0) <> coalesce(ie_indicacao_acidente_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado indicacao acid. de ' || ie_indicacao_acidente_ant_w || ' para ' || ie_indicacao_acidente_w;
				end if;
				if (coalesce(nr_seq_tipo_acomodacao_w,0) <> coalesce(nr_seq_tipo_acomodacao_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo acomod. de ' || nr_seq_tipo_acomodacao_ant_w || ' para ' || nr_seq_tipo_acomodacao_w;
				end if;
				if (coalesce(ie_tipo_doenca_w,0) <> coalesce(ie_tipo_doenca_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo doenca de ' || ie_tipo_doenca_ant_w || ' para ' || ie_tipo_doenca_w;
				end if;
				if (coalesce(nr_seq_saida_consulta_w,0) <> coalesce(nr_seq_saida_consulta_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo saida cons. de ' || nr_seq_saida_consulta_ant_w || ' para ' || nr_seq_saida_consulta_w;
				end if;
				if (coalesce(dt_entrada_w,clock_timestamp()) <> coalesce(dt_entrada_ant_w,clock_timestamp())) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado data de entrada de ' || dt_entrada_ant_w || ' para ' || dt_entrada_w;
				end if;
				if (coalesce(dt_alta_w,clock_timestamp()) <> coalesce(dt_alta_ant_w,clock_timestamp())) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado data de alta de ' || dt_alta_ant_w || ' para ' || dt_alta_w;
				end if;
				if (coalesce(dt_atendimento_w,clock_timestamp()) <> coalesce(dt_atendimento_ant_w,clock_timestamp())) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado data atendimento de ' || dt_atendimento_ant_w || ' para ' || dt_atendimento_w;
				end if;
				if (coalesce(dt_emissao_guia_w,clock_timestamp()) <> coalesce(dt_emissao_guia_ant_w,clock_timestamp())) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado data atendimento de ' || dt_emissao_guia_ant_w || ' para ' || dt_emissao_guia_w;
				end if;
				if (coalesce(cd_senha_externa_w,0) <> coalesce(cd_senha_externa_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado senha externa de ' || cd_senha_externa_ant_w || ' para ' || cd_senha_externa_w;
				end if;
				if (coalesce(cd_medico_solicitante_w,0) <> coalesce(cd_medico_solicitante_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado medico solic. de ' || cd_medico_solicitante_ant_w || ' para ' || cd_medico_solicitante_w;
				end if;
				if (coalesce(ds_indicacao_clinica_w,0) <> coalesce(ds_indicacao_clinica_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado indicacao clinica de ' || ds_indicacao_clinica_ant_w || ' para ' || ds_indicacao_clinica_w;
				end if;
				if (coalesce(nr_seq_cbo_saude_solic_w,0) <> coalesce(nr_seq_cbo_saude_solic_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado CBO Saude solic. de ' || nr_seq_cbo_saude_solic_ant_w || ' para ' || nr_seq_cbo_saude_solic_w;
				end if;
				if (coalesce(ds_observacao_w,0) <> coalesce(ds_observacao_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado observacao de ' || ds_observacao_ant_w || ' para ' || ds_observacao_w;
				end if;
				if (coalesce(ie_gestacao_w,0) <> coalesce(ie_gestacao_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado gestacao de ' || ie_gestacao_ant_w || ' para ' || ie_gestacao_w;
				end if;
				if (coalesce(ie_aborto_w,0) <> coalesce(ie_aborto_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado aborto de ' || ie_aborto_ant_w || ' para ' || ie_aborto_w;
				end if;
				if (coalesce(ie_parto_normal_w,0) <> coalesce(ie_parto_normal_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado parto normal de ' || ie_parto_normal_ant_w || ' para ' || ie_parto_normal_w;
				end if;
				if (coalesce(ie_complicacao_puerperio_w,0) <> coalesce(ie_complicacao_puerperio_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado complicacao puerperio de ' || ie_complicacao_puerperio_ant_w || ' para ' || ie_complicacao_puerperio_w;
				end if;
				if (coalesce(ie_complicacao_neonatal_w,0) <> coalesce(ie_complicacao_neonatal_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado complicacao neonatal de ' || ie_complicacao_neonatal_ant_w || ' para ' || ie_complicacao_neonatal_w;
				end if;
				if (coalesce(ie_parto_cesaria_w,0) <> coalesce(ie_parto_cesaria_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado parto cesaria de ' || ie_parto_cesaria_ant_w || ' para ' || ie_parto_cesaria_w;
				end if;
				if (coalesce(ie_baixo_peso_w,0) <> coalesce(ie_baixo_peso_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado baixo peso de ' || ie_baixo_peso_ant_w || ' para ' || ie_baixo_peso_w;
				end if;
				if (coalesce(ie_atend_rn_sala_parto_w,0) <> coalesce(ie_atend_rn_sala_parto_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado atend. rn sala parto de ' || ie_atend_rn_sala_parto_ant_w || ' para ' || ie_atend_rn_sala_parto_w;
				end if;
				if (coalesce(ie_transtorno_w,0) <> coalesce(ie_transtorno_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado transtorno de ' || ie_transtorno_ant_w || ' para ' || ie_transtorno_w;
				end if;
				if (coalesce(ie_tipo_acomodacao_ptu_w,'X') <> coalesce(ie_tipo_acomodacao_ptu_ww,'X')) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo de acomodacao ptu de ' || ie_tipo_acomodacao_ptu_w || ' para ' || ie_tipo_acomodacao_ptu_ww;
				end if;
				if (coalesce(nr_seq_tipo_conta_w,0) <> coalesce(nr_seq_tipo_conta_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo conta de ' || nr_seq_tipo_conta_ant_w || ' para ' || nr_seq_tipo_conta_w;
				end if;
				if (coalesce(nr_seq_conselho_solic_w,0) <> coalesce(nr_seq_conselho_solic_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado conselho do profissional solicitante de ' || nr_seq_conselho_solic_ant_w || ' para ' || nr_seq_conselho_solic_w;
				end if;
				if (coalesce(ie_tipo_faturamento_w,0) <> coalesce(ie_tipo_faturamento_ant_w,0)) then
					ds_historico_w	:= ds_historico_w || chr(13) || chr(10) || 'Alterado tipo do faturamento de ' || ie_tipo_faturamento_ant_w || ' para ' || ie_tipo_faturamento_w;
				end if;
			
				if (ds_historico_w IS NOT NULL AND ds_historico_w::text <> '') then
					ds_historico_w	:= 'Conta: ' || nr_seq_conta_item_w || ds_historico_w;
					insert into pls_hist_analise_conta(nr_sequencia,
						nm_usuario,
						dt_atualizacao,
						nm_usuario_nrec,
						dt_atualizacao_nrec,
						nr_seq_analise,
						nr_seq_conta,
						ie_tipo_historico,
						ds_observacao,
						nr_seq_grupo,
						ds_call_stack)
					values (nextval('pls_hist_analise_conta_seq'),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nr_seq_analise_p,
						nr_seq_conta_p,
						17,
						ds_historico_w,
						nr_seq_grupo_p,
						substr(dbms_utility.format_call_stack,1,4000));
						
					ds_historico_w	:= null;
				end if;
			end if;
			
			if (ie_conta_principal_p = 'S') then
				
				
				select	count(1)
				into STRICT	qt_diagnostico_w
				from	pls_diagnostico_conta
				where	nr_seq_conta	= nr_seq_conta_item_w;
				
				if (qt_diagnostico_w	> 0) then
					begin
					delete	from pls_diagnostico_conta
					where	nr_seq_conta	= nr_seq_conta_item_w;
					exception
					when others then
						null;
					end;

				
					open C04;
					loop
					fetch C04 into	
						ie_classificacao_w,
						cd_doenca_w,
						nr_seq_item_w;
					EXIT WHEN NOT FOUND; /* apply on C04 */
						begin
						insert into pls_diagnostico_conta(nr_sequencia,
							nm_usuario,
							dt_atualizacao,
							nm_usuario_nrec,
							dt_atualizacao_nrec,
							nr_seq_conta,
							ie_classificacao,
							cd_doenca)
						values (nextval('pls_diagnostico_conta_seq'),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nr_seq_conta_item_w,
							ie_classificacao_w,
							cd_doenca_w);
						end;
					end loop;
					close C04;
				end if;
				
				select	count(1)
				into STRICT	qt_diagnostico_w
				from	pls_diagnost_conta_obito
				where	nr_seq_conta	= nr_seq_conta_item_w;
				
				if (qt_diagnostico_w	> 0) then
			
					begin
					delete	from pls_diagnost_conta_obito
					where	nr_seq_conta	= nr_seq_conta_item_w;
					exception
					when others then
						null;
					end;
					
					open C05;
					loop
					fetch C05 into	
						nr_declaracao_obito_w,
						cd_doenca_w,
						nr_seq_item_w,
						ie_indicador_dorn_w;
					EXIT WHEN NOT FOUND; /* apply on C05 */
						begin
						insert into pls_diagnost_conta_obito(nr_sequencia,
							nm_usuario,
							dt_atualizacao,
							nm_usuario_nrec,
							dt_atualizacao_nrec,
							nr_seq_conta,
							nr_declaracao_obito,
							cd_doenca,
							ie_indicador_dorn)
						values (nextval('pls_diagnost_conta_obito_seq'),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nr_seq_conta_item_w,
							nr_declaracao_obito_w,
							cd_doenca_w,
							ie_indicador_dorn_w);
						end;
					end loop;
					close C05;
				end if;
				
				select	count(1)
				into STRICT	qt_diagnostico_w
				from 	pls_diagnostico_nasc_vivo
				where	nr_seq_conta	= nr_seq_conta_item_w;
				
				if (qt_diagnostico_w	> 0) then
					begin
					delete	from pls_diagnostico_nasc_vivo
					where	nr_seq_conta	= nr_seq_conta_item_w;
					exception
					when others then
						null;
					end;
					
					open C06;
					loop
					fetch C06 into	
						nr_decl_nasc_vivo_w,
						nr_seq_item_w;
					EXIT WHEN NOT FOUND; /* apply on C06 */
						begin
						insert into pls_diagnostico_nasc_vivo(nr_sequencia,
							nm_usuario,
							dt_atualizacao,
							nm_usuario_nrec,
							dt_atualizacao_nrec,
							nr_seq_conta,
							nr_decl_nasc_vivo)
						values (nextval('pls_diagnostico_nasc_vivo_seq'),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nr_seq_conta_item_w,
							nr_decl_nasc_vivo_w);
						end;
					end loop;
					close C06;
				end if;
			end if;
			CALL pls_atualizar_conta_resumo(nr_seq_conta_item_w, cd_estabelecimento_p, nm_usuario_p);
			end;
		end loop;
		close C07;
	end if;
	
	/* Verificar se foi excluido Diagnostico inserido anteriormente */

	select	count(1)
	into STRICT	qt_registro_w
	from	pls_diagnostico_conta	a
	where	a.nr_seq_conta	= nr_seq_conta_p
	and	(a.cd_doenca IS NOT NULL AND a.cd_doenca::text <> '')
	and	coalesce(a.cd_doenca_imp::text, '') = '';
	
	if (qt_registro_w > 0) then
		select	count(1)
		into STRICT	qt_registro_w
		from	w_pls_diagnostico_conta	a
		where	a.nr_seq_conta	= nr_seq_conta_p
		and	nm_usuario	= nm_usuario_p;
		
		/* Se nao tem na tabela temporaria e tinha na tabela quente, excluiu */

		if (qt_registro_w = 0) then
			delete from pls_diagnostico_conta a
			where	a.nr_seq_conta	= nr_seq_conta_p
			and	(a.cd_doenca IS NOT NULL AND a.cd_doenca::text <> '')
			and	coalesce(a.cd_doenca_imp::text, '') = ''
			and	coalesce(a.ie_indicacao_acidente::text, '') = ''
			and	coalesce(a.ie_classificacao_imp::text, '') = ''
			and	coalesce(a.ds_diagnostico_imp::text, '') = '';
		end if;
	end if;
	
	open C04;
	loop
	fetch C04 into	
		ie_classificacao_w,
		cd_doenca_w,
		nr_seq_item_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_diagnostico_conta	a
		where	a.nr_seq_conta	= nr_seq_conta_p
		and	a.nr_sequencia	= nr_seq_item_w  LIMIT 1;
		
		if (qt_registro_w = 0) then
			insert into pls_diagnostico_conta(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_conta,
				ie_classificacao,
				cd_doenca)
			values (nextval('pls_diagnostico_conta_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_conta_p,
				ie_classificacao_w,
				cd_doenca_w);
		else
			update	pls_diagnostico_conta
			set	ie_classificacao	= ie_classificacao_w,
				cd_doenca		= cd_doenca_w
			where	nr_seq_conta		= nr_seq_conta_p
			and	nr_sequencia		= nr_seq_item_w;
		end if;
		end;
	end loop;
	close C04;
	
	/* Verificar se foi excluido Declaracao de obito inserida anteriormente */

	select	count(1)
	into STRICT	qt_registro_w
	from	pls_diagnost_conta_obito	a
	where	a.nr_seq_conta	= nr_seq_conta_p
	and	coalesce(a.cd_doenca_imp::text, '') = ''
	and	coalesce(a.nr_declaracao_obito_imp::text, '') = ''
	and	coalesce(a.ie_indicador_dorn_imp::text, '') = '';
	
	if (qt_registro_w > 0) then
		select	count(1)
		into STRICT	qt_registro_w
		from	w_pls_diagnost_conta_obito a
		where	a.nr_seq_conta	= nr_seq_conta_p
		and	nm_usuario	= nm_usuario_p;
		
		/* Se nao tem na tabela temporaria e tinha na tabela quente, excluiu */

		if (qt_registro_w = 0) then
			delete from pls_diagnost_conta_obito a
			where	a.nr_seq_conta	= nr_seq_conta_p
			and	coalesce(a.cd_doenca_imp::text, '') = ''
			and	coalesce(a.nr_declaracao_obito_imp::text, '') = ''
			and	coalesce(ie_indicador_dorn_imp::text, '') = '';
		end if;
	end if;
	
	open C05;
	loop
	fetch C05 into	
		nr_declaracao_obito_w,
		cd_doenca_w,
		nr_seq_item_w,
		ie_indicador_dorn_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_diagnost_conta_obito	a
		where	a.nr_seq_conta	= nr_seq_conta_p
		and	a.nr_sequencia	= nr_seq_item_w  LIMIT 1;
		
		if (qt_registro_w = 0) then
			insert into pls_diagnost_conta_obito(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_conta,
				nr_declaracao_obito,
				cd_doenca,
				ie_indicador_dorn)
			values (nextval('pls_diagnost_conta_obito_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_conta_p,
				nr_declaracao_obito_w,
				cd_doenca_w,
				ie_indicador_dorn_w);
		else
			update	pls_diagnost_conta_obito
			set	nr_declaracao_obito	= nr_declaracao_obito_w,
				cd_doenca		= cd_doenca_w,
				ie_indicador_dorn	= ie_indicador_dorn_w
			where	nr_seq_conta		= nr_seq_conta_p
			and	nr_sequencia		= nr_seq_item_w;
		end if;
		end;
	end loop;
	close C05;
	
	/* Verificar se foi excluido Declaracao de obito inserida anteriormente */

	select	count(1)
	into STRICT	qt_registro_w
	from	pls_diagnostico_nasc_vivo a
	where	a.nr_seq_conta	= nr_seq_conta_p
	and	coalesce(a.nr_decl_nasc_vivo_imp::text, '') = ''
	and	coalesce(ie_indicador_dorn_imp::text, '') = '';
	
	if (qt_registro_w > 0) then
		select	count(1)
		into STRICT	qt_registro_w
		from	w_pls_diagnostico_nasc_viv a
		where	a.nr_seq_conta	= nr_seq_conta_p
		and	nm_usuario	= nm_usuario_p;
		
		/* Se nao tem na tabela temporaria e tinha na tabela quente, excluiu */

		if (qt_registro_w = 0) then
			delete from pls_diagnostico_nasc_vivo a
			where	a.nr_seq_conta	= nr_seq_conta_p
			and	coalesce(a.nr_decl_nasc_vivo_imp::text, '') = ''
			and	coalesce(ie_indicador_dorn_imp::text, '') = '';
		end if;
	end if;
	
	open C06;
	loop
	fetch C06 into	
		nr_decl_nasc_vivo_w,
		nr_seq_item_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */
		begin
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_diagnostico_nasc_vivo	a
		where	a.nr_seq_conta	= nr_seq_conta_p
		and	a.nr_sequencia	= nr_seq_item_w  LIMIT 1;
		
		if (qt_registro_w = 0) then
			insert into pls_diagnostico_nasc_vivo(nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_conta,
					nr_decl_nasc_vivo)
			values (nextval('pls_diagnostico_nasc_vivo_seq'),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nr_seq_conta_p,
					nr_decl_nasc_vivo_w);
		else	
			update	pls_diagnostico_nasc_vivo
			set	nr_decl_nasc_vivo	= nr_decl_nasc_vivo_w
			where	nr_seq_conta		= nr_seq_conta_p
			and	nr_sequencia		= nr_seq_item_w;
		end if;
		end;
	end loop;
	close C06;
	
	CALL pls_atualizar_conta_resumo(nr_seq_conta_p, cd_estabelecimento_p, nm_usuario_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_conta_analise ( nr_seq_analise_p bigint, nr_seq_conta_p bigint, ie_opcao_p text, ie_conta_principal_p text, ie_atualiza_seg_ref_p text, ie_atual_seg_outras_analises_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_grupo_p pls_auditoria_conta_grupo.nr_seq_grupo%type default null) FROM PUBLIC;

