-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_ordem_prescr_automat ( nr_prescricao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_atendimento_w	paciente_atendimento.nr_seq_atendimento%type;
nr_seq_paciente_w	paciente_atendimento.nr_seq_paciente%type;
cd_medico_resp_w	paciente_setor.cd_medico_resp%type;
cd_pessoa_fisica_w	paciente_setor.cd_pessoa_fisica%type;
nr_prescricao_w		prescr_medica.nr_prescricao%type;
dt_prevista_w		timestamp;
nr_sequencia_w		can_ordem_prod.nr_sequencia%type;
nr_ordem_prod_w		can_ordem_prod.nr_sequencia%type;
cd_estabelecimento_w	paciente_setor.cd_estabelecimento%type;
cd_estabelecimento_ww	paciente_atendimento.cd_estabelecimento%type;
cd_material_w     integer;
nr_seq_prescr_w		prescr_material.nr_sequencia%type;
ie_via_aplicacao_w	prescr_material.ie_via_aplicacao%type;
cd_farmaceutico_ww    varchar(10);
cd_farmaceutico_w	varchar(10);
ds_precaucao_ordem_w	varchar(255);
ds_recomendacao_w	varchar(255);
cd_setor_atendimento_w	paciente_setor.cd_setor_atendimento%type;
qt_min_aplicacao_w    smallint;
qt_hora_aplicacao_w   smallint;
ie_tipo_dosagem_w	varchar(3);
qt_dose_diluente_w	double precision;
vl_gotejo_w     	double precision;
nr_agrupamento_w    prescr_material.nr_agrupamento%type;
nr_agrup_ant_w      prescr_material.nr_agrupamento%type := 0;
cd_material_medic_w   bigint;
nr_sequencia_medic_w   prescr_material.nr_sequencia%type;
qt_dose_medic_w     prescr_material.qt_dose%type;
cd_unidade_medida_dose_w  prescr_material.cd_unidade_medida_dose%type;
nr_seq_item_prescr_w	can_ordem_item_prescr.nr_sequencia%type;
nr_ocorrencia_w		double precision;
nm_paciente_w		varchar(60);
cd_forma_armaz_w	varchar(255);
cd_estagio_armaz_w	varchar(255);
qt_estabilidade_w	material_armazenamento.qt_estabilidade%type;
ie_tempo_estab_w	material_armazenamento.ie_tempo_estab%type;
qt_hora_validade_w	material_armazenamento.qt_estabilidade%type;
qt_min_validade_w	material_armazenamento.qt_estabilidade%type;
qt_dias_util_w		prescr_material.qt_dias_util%type;
ie_exige_liberacao_w	paciente_atendimento.ie_exige_liberacao%type;
ie_generico_w		varchar(1);
ie_gerar_reconstituinte_w varchar(1);
qt_peso_w		paciente_setor.qt_peso%type;
qt_superf_corporea_w    double precision;
nr_seq_ordem_prod_w  prescr_material.nr_seq_ordem_prod%type;
ie_usuario_manipulador_w  varchar(1);
ie_pre_medicacao_w    prescr_material.ie_pre_medicacao%type;
nr_sequencia_log_w    log_gera_ordem.nr_sequencia%type;
nr_sequencia_inc_w    w_inconsistencias_onco.nr_sequencia%type;
ie_agrupador_w		prescr_material.ie_agrupador%type;
ie_agrup_ant_w		prescr_material.ie_agrupador%type;
ie_grava_aspirado_w	varchar(1);
qt_volume_aspirado_w	double precision;
ie_permite_acm_w	varchar(1);
ie_bomba_infusao_w	prescr_material.ie_bomba_infusao%type;
nr_sequencia_solucao_w	prescr_material.nr_sequencia_solucao%type;
ds_retorno_ww     varchar(4000);
dt_chagada_w		paciente_atendimento.dt_chegada%type;
qt_mat_regra_w		bigint;
ds_erro_w     varchar(255);
qt_dose_w     double precision;
nr_atendimento_w	paciente_atendimento.nr_atendimento%type;
ie_tipo_atendimento_w	atendimento_paciente.ie_tipo_atendimento%type;
ie_via_aplicacao_got_w  prescr_material.ie_via_aplicacao%type;
ie_aplica_gotejamento_w		via_aplicacao.ie_gotejamento%type;
ie_medic_paciente_w		prescr_material.ie_medicacao_paciente%type;
nr_seq_mat_hor_w	prescr_mat_hor.nr_sequencia%type;
qt_regras_estab_central_w	bigint;


C01 CURSOR FOR
  SELECT  a.nr_seq_atendimento,
		a.nr_seq_paciente,
		b.nr_prescricao,
		coalesce(a.dt_real,a.dt_prevista),
		a.ie_exige_liberacao,
		a.cd_estabelecimento,
		a.dt_chegada,
		a.nr_atendimento
from  	paciente_atendimento a,
		prescr_medica b
where 	b.nr_prescricao = a.nr_prescricao
and		b.nr_prescricao = nr_prescricao_p
and (a.cd_estabelecimento = cd_estabelecimento_p)
and   	coalesce(a.dt_suspensao::text, '') = ''
and (obter_se_paciente_obito(obter_pessoa_atendimento(a.nr_atendimento,'C')) <> 'A')
and (not exists (SELECT 1 from w_inconsistencias_onco d  where d.nr_seq_atendimento = a.nr_seq_atendimento))
and coalesce(a.dt_cancelamento::text, '') = ''
and	(b.dt_liberacao_farmacia IS NOT NULL AND b.dt_liberacao_farmacia::text <> '');


C02 CURSOR FOR
  SELECT  CASE WHEN ie_generico_w='S' THEN coalesce(b.cd_material_generico,a.cd_material)  ELSE a.cd_material END ,
    a.nr_sequencia,
    a.ie_via_aplicacao,
    substr(b.ds_precaucao_ordem,1,255),
    substr(a.ds_observacao,1,255),
    CASE WHEN coalesce(a.qt_min_aplicacao,0)=0 THEN CASE WHEN a.ie_agrupador=4 THEN coalesce(Obter_tempo_aplic_sol(nr_prescricao_w,a.nr_sequencia_solucao,'M'),0)  ELSE 0 END   ELSE coalesce(a.qt_min_aplicacao,0) END ,
    CASE WHEN coalesce(a.qt_hora_aplicacao,0)=0 THEN CASE WHEN a.ie_agrupador=4 THEN coalesce(Obter_tempo_aplic_sol(nr_prescricao_w,a.nr_sequencia_solucao,'H'),0)  ELSE 0 END   ELSE coalesce(a.qt_hora_aplicacao,0) END ,
    CASE WHEN coalesce(obter_um_rep_dispositivo(a.ie_bomba_infusao,a.ie_agrupador)::text, '') = '' THEN CASE WHEN a.ie_bomba_infusao='S' THEN 'mlh'  ELSE 'gtm' END   ELSE obter_um_rep_dispositivo(a.ie_bomba_infusao,a.ie_agrupador) END ,
    a.nr_agrupamento,
    CASE WHEN a.ie_agrupador=4 THEN coalesce(obter_etapa_soluc_quimio(nr_prescricao_w,a.nr_sequencia_solucao),1)  ELSE a.nr_ocorrencia END ,
    a.qt_dias_util,
    a.ie_pre_medicacao,
    a.ie_agrupador,
    a.ie_bomba_infusao,
    a.nr_sequencia_solucao,
    coalesce(a.ie_medicacao_paciente, 'N')	
  from  material b,
    prescr_material a
  where a.nr_prescricao = nr_prescricao_w
  and a.cd_material = b.cd_material
  and coalesce(a.nr_seq_ordem_prod::text, '') = ''
  and (a.ie_via_aplicacao IS NOT NULL AND a.ie_via_aplicacao::text <> '')
  and coalesce(a.ie_suspenso,'N')  = 'N'
  and   coalesce(a.dt_suspensao::text, '') = ''
  and ( ((b.ie_mistura = 'S') and (coalesce(a.ie_medicacao_paciente, 'N') <> 'S')) or
        ((b.ie_mistura = 'R') and (obter_se_gera_ordem(a.ie_via_aplicacao,a.cd_intervalo, a.qt_dose, a.cd_material, a.cd_unidade_medida,'T', coalesce(a.ie_medicacao_paciente, 'N'),nr_atendimento_w) = 'S')) or
		((b.ie_mistura = 'I') and (ie_tipo_atendimento_w = 1) and (coalesce(a.ie_medicacao_paciente, 'N') <> 'S'))
	  )
  and   a.ie_agrupador in (1,4)
  and   ((coalesce(IE_ACM,'N') = 'N') or (coalesce(ie_permite_acm_w,'S') = 'S'))
  and (obter_se_setor_ordem(ie_acm,obter_setor_atendimento(obter_atendimento_prescr(nr_prescricao))) = 'S')
  and   ( ((qt_obter_regra_gerac_ordem(a.cd_material, a.ie_via_aplicacao, a.qt_dose, a.cd_unidade_medida_dose) = 'S') and (dt_chagada_w IS NOT NULL AND dt_chagada_w::text <> '')) or (qt_obter_regra_gerac_ordem(a.cd_material, a.ie_via_aplicacao, a.qt_dose, a.cd_unidade_medida_dose) = 'N')
		)
  order by a.nr_agrupamento, a.nr_sequencia;


C03 CURSOR FOR
  SELECT  CASE WHEN ie_generico_w='S' THEN coalesce(b.cd_material_generico,a.cd_material)  ELSE CASE WHEN ie_generico_w='C' THEN obter_medic_regra_onc(a.cd_material,b.cd_material_generico,nr_atendimento_w,ie_tipo_material,b.nr_seq_ficha_tecnica)  ELSE a.cd_material END  END ,
    a.nr_sequencia,
    a.qt_dose,
    a.cd_unidade_medida_dose
  from  material b,
    prescr_material a
  where a.nr_prescricao   = nr_prescricao_w
  and a.nr_agrupamento  = nr_agrupamento_w
  and   a.ie_agrupador    = ie_agrupador_w
  and a.cd_material   = b.cd_material
  and   coalesce(a.dt_suspensao::text, '') = ''
  and a.ie_agrupador    in (1,4)
  and (obter_se_setor_ordem(ie_acm,obter_setor_atendimento(obter_atendimento_prescr(nr_prescricao))) = 'S')
  and   ((coalesce(IE_ACM,'N') = 'N') or (coalesce(ie_permite_acm_w,'S') = 'S'))
  and (a.cd_unidade_medida_dose IS NOT NULL AND a.cd_unidade_medida_dose::text <> '')
  and   (((qt_obter_regra_gerac_ordem(a.cd_material, a.ie_via_aplicacao, a.qt_dose, a.cd_unidade_medida_dose) = 'S') and (dt_chagada_w IS NOT NULL AND dt_chagada_w::text <> ''))
      or (qt_obter_regra_gerac_ordem(a.cd_material, a.ie_via_aplicacao, a.qt_dose, a.cd_unidade_medida_dose) = 'N'));



BEGIN

select nextval('log_gera_ordem_seq')
into STRICT  nr_sequencia_log_w
;

insert into log_gera_ordem(
  nr_sequencia,
  nm_usuario,
  dt_inicio)
values (nr_sequencia_log_w,
  nm_usuario_p,
  clock_timestamp());

commit;
  
delete from w_inconsistencias_onco;

commit;


cd_farmaceutico_w := Obter_Param_Usuario(3130, 2, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_farmaceutico_w);
ie_generico_w := Obter_Param_Usuario(3130, 22, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_generico_w);
ie_gerar_reconstituinte_w := Obter_Param_Usuario(3130, 40, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_reconstituinte_w);
ie_usuario_manipulador_w := Obter_Param_Usuario(3130, 142, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_usuario_manipulador_w);
ie_grava_aspirado_w := Obter_Param_Usuario(3130, 176, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_grava_aspirado_w);
ie_permite_acm_w := Obter_Param_Usuario(3130, 261, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_permite_acm_w);


if (cd_farmaceutico_w IS NOT NULL AND cd_farmaceutico_w::text <> '') then
  select  max(cd_pessoa_fisica)
  into STRICT  cd_farmaceutico_ww
  from  pessoa_fisica
  where   cd_pessoa_fisica = cd_farmaceutico_w;

  if (coalesce(cd_farmaceutico_ww,0) = 0) then
    CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(192283);
  end if;
end if;

select	count(*)
into STRICT	qt_regras_estab_central_w
from	regra_estab_central_quimio
where	cd_estab_regra = cd_estabelecimento_p;


if (qt_regras_estab_central_w > 0) then
begin

  open C01;
  loop
  fetch C01 into
    nr_seq_atendimento_w,
    nr_seq_paciente_w,
    nr_prescricao_w,
    dt_prevista_w,
    ie_exige_liberacao_w,
    cd_estabelecimento_ww,
    dt_chagada_w,
    nr_atendimento_w;
  EXIT WHEN NOT FOUND; /* apply on C01 */
    begin

    select  cd_medico_resp,
      cd_estabelecimento,
      substr(obter_nome_pf(cd_pessoa_fisica),1,60)
    into STRICT  cd_medico_resp_w,
      cd_estabelecimento_w,
      nm_paciente_w
    from  paciente_setor
    where nr_seq_paciente = nr_seq_paciente_w;

    if (coalesce(cd_medico_resp_w::text, '') = '') then

        select nextval('w_inconsistencias_onco_seq')
        into STRICT  nr_sequencia_inc_w
;

        insert into w_inconsistencias_onco(
          nr_seq_atendimento,
          nr_sequencia,
          nm_usuario,
          nr_atendimento,
          ds_informacao)
        values (nr_seq_atendimento_w,
          nr_sequencia_inc_w,
          nm_usuario_p,
          nr_atendimento_w,
          substr(wheb_mensagem_pck.get_texto(184696, 'NM_PACIENTE_W='||nm_paciente_w),1,2000));
        commit;
    end if;
    end;
  end loop;
  Close C01;

  select  coalesce(vl_parametro, vl_parametro_padrao)
  into STRICT  cd_estagio_armaz_w
  from  funcao_parametro
  where cd_funcao = 3130
  and nr_sequencia  = 10;

  select  coalesce(vl_parametro, vl_parametro_padrao)
  into STRICT  cd_forma_armaz_w
  from  funcao_parametro
  where cd_funcao = 3130
  and nr_sequencia  = 11;

  open C01;
  loop
  fetch C01 into
    nr_seq_atendimento_w,
    nr_seq_paciente_w,
    nr_prescricao_w,
    dt_prevista_w,
    ie_exige_liberacao_w,
    cd_estabelecimento_ww,
    dt_chagada_w,
    nr_atendimento_w;
  EXIT WHEN NOT FOUND; /* apply on C01 */
    begin

    select  max(cd_pessoa_fisica),
      max(cd_medico_resp),
      max(cd_setor_atendimento),
      max(qt_peso),
      max(round((obter_superficie_corp_red_ped(qt_peso, qt_altura, qt_redutor_sc, cd_pessoa_fisica, nm_usuario))::numeric,2))
    into STRICT  cd_pessoa_fisica_w,
      cd_medico_resp_w,
      cd_setor_atendimento_w,
      qt_peso_w,
      qt_superf_corporea_w
    from  paciente_setor
    where nr_seq_paciente = nr_seq_paciente_w;


    nr_agrup_ant_w  := 0;
    ie_agrup_ant_w  := 0;

    select  max(ie_tipo_atendimento)
    into STRICT  ie_tipo_atendimento_w
    from  atendimento_paciente
    where nr_atendimento  = nr_atendimento_w;

    OPEN C02;
    LOOP
    FETCH C02 into
      cd_material_w,
      nr_seq_prescr_w,
      ie_via_aplicacao_w,
      ds_precaucao_ordem_w,
      ds_recomendacao_w,
      qt_min_aplicacao_w,
      qt_hora_aplicacao_w,
      ie_tipo_dosagem_w,
      nr_agrupamento_w,
      nr_ocorrencia_w,
      qt_dias_util_w,
      ie_pre_medicacao_w,
      ie_agrupador_w,
      ie_bomba_infusao_w,
      nr_sequencia_solucao_w,
      ie_medic_paciente_w;
    EXIT WHEN NOT FOUND; /* apply on C02 */
      begin
      commit;
      if (nr_agrup_ant_w <> nr_agrupamento_w) or
        (nr_agrup_ant_w = nr_agrupamento_w AND ie_agrup_ant_w <> ie_agrupador_w) then
        begin

        select  coalesce(min(qt_estabilidade),0),
          coalesce(min(ie_tempo_estab),'I')
        into STRICT  qt_estabilidade_w,
          ie_tempo_estab_w
        from  material_armazenamento
        where cd_material = cd_material_w
        and nr_seq_estagio  = cd_estagio_armaz_w
        and nr_seq_forma  = cd_forma_armaz_w
        and coalesce(cd_estabelecimento,coalesce(cd_estabelecimento_p,0)) = coalesce(cd_estabelecimento_p,0);

        qt_hora_validade_w  := 0;
        qt_min_validade_w := 0;

        if (ie_tempo_estab_w = 'H') then
          qt_hora_validade_w  := qt_estabilidade_w;
        elsif (ie_tempo_estab_w = 'D') then
          qt_hora_validade_w  := qt_estabilidade_w * 24;
        elsif (ie_tempo_estab_w = 'M') then
          qt_hora_validade_w  := qt_estabilidade_w * 30 * 24;
        elsif (ie_tempo_estab_w = 'A') then
          qt_hora_validade_w  := qt_estabilidade_w * 365 * 24;
        end if;

        nr_agrup_ant_w  := nr_agrupamento_w;
        ie_agrup_ant_w  := ie_agrupador_w;

        select  coalesce(max(nr_seq_ordem_prod),0)
        into STRICT  nr_seq_ordem_prod_w
        from  prescr_material
        where nr_prescricao = nr_prescricao_w
        and nr_sequencia  = nr_seq_prescr_w;

        while(nr_ocorrencia_w > 0) and (nr_seq_ordem_prod_w = 0) LOOP
          begin

          nr_ocorrencia_w := nr_ocorrencia_w - 1;

          select  nextval('can_ordem_prod_seq')
          into STRICT  nr_sequencia_w
;

          nr_ordem_prod_w := nr_sequencia_w;

          if (ie_agrupador_w = 4) then
            select  coalesce(max(ie_via_aplicacao),ie_via_aplicacao_w)
            into STRICT  ie_via_aplicacao_w
            from  prescr_solucao
            where nr_prescricao = nr_prescricao_w
            and nr_seq_solucao = nr_sequencia_solucao_w;

          end if;

          insert into can_ordem_prod(
            nr_sequencia,
            cd_estabelecimento,
            dt_atualizacao,
            nm_usuario,
            cd_pessoa_fisica,
            dt_prevista,
            ie_via_aplicacao,
            qt_hora_validade,
            qt_min_validade,
            qt_hora_aplic,
            qt_min_aplic,
            cd_medico_resp,
            cd_farmaceutico,
            cd_manipulador,
            cd_auxiliar,
            dt_inicio_preparo,
            dt_entrega_setor,
            dt_administracao,
            nr_seq_atendimento,
            nr_prescricao,
            dt_fim_preparo,
            ie_tipo_dosagem,
            ds_precaucao,
            ie_cancelada,
            ds_orientacao_adm,
            cd_setor_paciente,
            ie_conferido,
            qt_dias_util,
            ie_suspensa,
            qt_peso,
            qt_superf_corporea,
            dt_geracao_ordem,
            ie_pre_medicacao,
            ie_bomba_infusao,
            ie_medic_paciente)
          Values (
            nr_sequencia_w,
            coalesce(cd_estabelecimento_ww,cd_estabelecimento_p),
            clock_timestamp(),
            nm_usuario_p,
            cd_pessoa_fisica_w,
            dt_prevista_w,
            ie_via_aplicacao_w,
            coalesce(qt_hora_validade_w,0),
            coalesce(qt_min_validade_w,0),
            coalesce(qt_hora_aplicacao_w,0),
            coalesce(qt_min_aplicacao_w,0),
            cd_medico_resp_w,
            cd_farmaceutico_w,
            CASE WHEN ie_usuario_manipulador_w='S' THEN Obter_Pessoa_Fisica_Usuario(nm_usuario_p,'C')  ELSE null END ,
            null,
            null,
            null,
            null,
            nr_seq_atendimento_w,
            nr_prescricao_w,
            null,
            ie_tipo_dosagem_w,
            ds_precaucao_ordem_w,
            'N',
            ds_recomendacao_w,
            cd_setor_atendimento_w,
            'N',
            qt_dias_util_w,
            ie_exige_liberacao_w,
            qt_peso_w,
            qt_superf_corporea_w,
            clock_timestamp(),
            ie_pre_medicacao_w,
            ie_bomba_infusao_w,
            ie_medic_paciente_w);

          commit;

          update  prescr_material
          set nr_seq_ordem_prod = nr_ordem_prod_w
          where nr_prescricao   = nr_prescricao_w
          and nr_agrupamento    = nr_agrupamento_w
          and   ie_agrupador    = ie_agrupador_w;

          commit;

          OPEN C03;
          LOOP
          FETCH C03 into
            cd_material_medic_w,
            nr_sequencia_medic_w,
            qt_dose_medic_w,
            cd_unidade_medida_dose_w;
          EXIT WHEN NOT FOUND; /* apply on C03 */
            begin
            select  nextval('can_ordem_item_prescr_seq')
            into STRICT  nr_seq_item_prescr_w
;

            select  count(*)
            into STRICT  qt_mat_regra_w
            from  regra_geracao_ordem_tot
            where cd_material = cd_material_medic_w;

            if (qt_mat_regra_w > 0) then
              select  qt_material
              into STRICT  qt_dose_medic_w
              from  prescr_material
              where nr_sequencia  = nr_sequencia_medic_w
              and   nr_prescricao = nr_prescricao_w;
            end if;

            CALL gravar_log_tasy(0207, 'Gerar_ordem_prescr_automat. '||chr(13)||  
						'nr_sequencia_medic_w: '||nr_sequencia_medic_w||chr(13)||
                        'nr_prescricao_w: '||nr_prescricao_w||chr(13)||
                        'cd_material_medic_w: '||cd_material_medic_w, 'log');

            select min(a.nr_sequencia)
            into STRICT 	nr_seq_mat_hor_w
            from    prescr_mat_hor a
            where   a.nr_seq_material = nr_sequencia_medic_w
			and     (a.dt_lib_horario IS NOT NULL AND a.dt_lib_horario::text <> '')
            and     a.nr_prescricao = nr_prescricao_w
            and   a.cd_material = cd_material_medic_w
            and     not exists (SELECT 1 from can_ordem_item_prescr b 
            where   b.nr_seq_mat_hor = a.nr_sequencia);

        
            
            insert into can_ordem_item_prescr(
              nr_sequencia,
              dt_atualizacao,
              nm_usuario,
              nr_seq_ordem,
              cd_material,
              qt_dose,
              cd_unidade_medida,
              nr_prescricao,
              nr_seq_prescricao,
              nr_sequencia_diluente,
              nm_usuario_nrec,
              dt_atualizacao_nrec, 
              nr_seq_mat_hor)
            values ( nr_seq_item_prescr_w,
              clock_timestamp(),
              nm_usuario_p,
              nr_sequencia_w,
              cd_material_medic_w,
              coalesce(qt_dose_medic_w,0),
              cd_unidade_medida_dose_w,
              nr_prescricao_w,
              nr_sequencia_medic_w,
              null,
              nm_usuario_p,
              clock_timestamp(), 
              nr_seq_mat_hor_w);

            insert into can_ordem_item_prescr(
              nr_sequencia,
              dt_atualizacao,
              nm_usuario,
              nr_seq_ordem,
              cd_material,
              qt_dose,
              cd_unidade_medida,
              nr_prescricao,
              nr_seq_prescricao,
              nr_sequencia_diluente,
              ie_agrupador,
              nm_usuario_nrec,
              dt_atualizacao_nrec,
			  nr_seq_mat_hor)
            SELECT  nextval('can_ordem_item_prescr_seq'),
              clock_timestamp(),
              nm_usuario_p,
              nr_sequencia_w,
              CASE WHEN ie_generico_w='S' THEN coalesce(b.cd_material_generico,a.cd_material)  ELSE a.cd_material END ,
              coalesce(a.qt_dose,0),
              a.cd_unidade_medida_dose,
              nr_prescricao_w,
              a.nr_sequencia,
              nr_seq_item_prescr_w,
              coalesce(ie_agrupador_quimio,ie_agrupador),
              nm_usuario_p,
              clock_timestamp(),
			  nr_seq_mat_hor_w
            from  material b,
              prescr_material a
            where a.nr_prescricao   = nr_prescricao_w
            and a.nr_sequencia_diluicao = nr_sequencia_medic_w
            and a.cd_material   = b.cd_material
            and a.ie_agrupador    in (3)
            and   coalesce(a.dt_suspensao::text, '') = ''
            and (a.cd_unidade_medida_dose IS NOT NULL AND a.cd_unidade_medida_dose::text <> '');

            if (ie_gerar_reconstituinte_w = 'S') then
              insert into can_ordem_item_prescr(
                nr_sequencia,
                dt_atualizacao,
                nm_usuario,
                nr_seq_ordem,
                cd_material,
                qt_dose,
                cd_unidade_medida,
                nr_prescricao,
                nr_seq_prescricao,
                nr_sequencia_diluente,
                ie_agrupador,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
				nr_seq_mat_hor)
                SELECT  nextval('can_ordem_item_prescr_seq'),
                clock_timestamp(),
                nm_usuario_p,
                nr_sequencia_w,
                CASE WHEN ie_generico_w='S' THEN coalesce(b.cd_material_generico,a.cd_material)  ELSE a.cd_material END ,
                coalesce(a.qt_dose,0),
                a.cd_unidade_medida_dose,
                nr_prescricao_w,
                a.nr_sequencia,
                nr_seq_item_prescr_w,
                ie_agrupador,
                nm_usuario_p,
                clock_timestamp(),
				nr_seq_mat_hor_w
              from  material b,
                prescr_material a
              where a.nr_prescricao   = nr_prescricao_w
              and a.nr_sequencia_diluicao = nr_sequencia_medic_w
              and a.cd_material   = b.cd_material
              and a.ie_agrupador    in (9)
              and (a.cd_unidade_medida_dose IS NOT NULL AND a.cd_unidade_medida_dose::text <> '');

            end if;

            begin
            select  CASE WHEN upper(cd_unidade_medida_dose)=upper(obter_unid_med_usua('ML')) THEN qt_dose  ELSE qt_dose * obter_conversao_unid_med(cd_material,upper(obter_unid_med_usua('ML'))) END
            into STRICT  qt_dose_diluente_w
            from  prescr_material
            where nr_sequencia_diluicao = nr_seq_prescr_w
            and   nr_prescricao   = nr_prescricao_w
            and   ie_agrupador    = 3;
            exception
            when others then
              qt_dose_diluente_w  := 0;
              ds_erro_w := substr(SQLERRM(SQLSTATE),1,255);
            end;

            select  coalesce(max(obter_conversao_ml(cd_material, qt_dose, cd_unidade_medida_dose)),0),
                max(ie_via_aplicacao)
            into STRICT  qt_dose_w,
                ie_via_aplicacao_got_w
            from  prescr_material
            where nr_prescricao   = nr_prescricao_w
            and   nr_sequencia  = nr_seq_prescr_w;

            ie_aplica_gotejamento_w := 'S';

            if (ie_via_aplicacao_got_w IS NOT NULL AND ie_via_aplicacao_got_w::text <> '') then
              select coalesce(ie_gotejamento,'S')
              into STRICT   ie_aplica_gotejamento_w
              from   via_aplicacao
              where  ie_via_aplicacao = ie_via_aplicacao_got_w;
            end if;

            if (ie_aplica_gotejamento_w = 'S') then
              vl_gotejo_w := Calcular_gotejamento_ordem(ie_tipo_dosagem_w, dividir(qt_min_aplicacao_w,60) + qt_hora_aplicacao_w, qt_dose_diluente_w, vl_gotejo_w);
            else
              vl_gotejo_w := null;
              ie_tipo_dosagem_w := null;
            end if;

            qt_volume_aspirado_w := null;

            if (ie_grava_aspirado_w = 'S') then
              qt_volume_aspirado_w := obter_volume_aspirado(nr_sequencia_w);
            end if;

            update  can_ordem_prod
            set qt_dosagem          = vl_gotejo_w,
              qt_volume_aspirado  = qt_volume_aspirado_w,
              ie_tipo_dosagem   = ie_tipo_dosagem_w
            where nr_sequencia    = nr_sequencia_w;

            end;
          end loop;
          Close C03;
          end;
        end loop;

        commit;
        end;
      end if;
      end;

    end loop;
    Close C02;
    end;

  end loop;
  Close C01;

  update  log_gera_ordem
  set   dt_final = clock_timestamp()
  where   nr_sequencia = nr_sequencia_log_w;
  commit;
exception
when others then
  update  log_gera_ordem
  set   dt_final = clock_timestamp()
  where   nr_sequencia = nr_sequencia_log_w;
  commit;

  CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(184695, 'ERRO='||sqlerrm);
end;
end if;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_ordem_prescr_automat ( nr_prescricao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

