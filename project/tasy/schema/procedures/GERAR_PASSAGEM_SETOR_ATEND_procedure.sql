-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_passagem_setor_atend (nr_atendimento_p bigint, cd_setor_atendimento_p bigint, dt_passagem_p timestamp, ie_cons_setor_usuario_p text, nm_usuario_p text) AS $body$
DECLARE


nr_seq_unidade_w		bigint;
nr_sequencia_w			bigint;		
nr_seq_interno_w		bigint;		
qt_passagem_w			smallint;
dt_passagem_w			timestamp;
qt_registro_w			integer;
ds_setor_atendimento_w		varchar(100);
qt_perm_transf_cc_w		double precision;
ie_tipo_convenio_atend_w	smallint;
qt_existe_setor_cc_w		bigint;
cd_classif_setor_w		bigint;

cd_departamento_w	atend_paciente_unidade.cd_departamento%type;


BEGIN
if (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') then /* Rafael em 17/04/2008 OS80263 */
	qt_perm_transf_cc_w := coalesce((obter_valor_param_usuario(3111,206, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento))::numeric ,0);
	
	if (qt_perm_transf_cc_w > 0) then
	
		select	max(ie_tipo_convenio)
		into STRICT	ie_tipo_convenio_atend_w
		from	atendimento_paciente
		where 	nr_atendimento = nr_atendimento_p;
		
		select	count(*)
		into STRICT	qt_existe_setor_cc_w
		from	atend_paciente_unidade
		where	nr_atendimento = nr_atendimento_p
		and	obter_classif_setor(cd_setor_atendimento_p) = 2;

		cd_classif_setor_w	:= obter_classif_setor(cd_setor_atendimento_p);
		
		if (cd_classif_setor_w = 2) and (ie_tipo_convenio_atend_w = 3) and (qt_existe_setor_cc_w >= qt_perm_transf_cc_w) then
			-- Esse paciente ja teve a quantidade de passagens permitidas para um setor de centro cirurgico. Parametro[206].
			CALL wheb_mensagem_pck.exibir_mensagem_abort(179971);
		end if;
	end if;

	
	select	coalesce(count(*),0)
	into STRICT	qt_passagem_w
	from	atend_paciente_unidade where		nr_atendimento 			= nr_atendimento_p
	and		cd_setor_atendimento		= cd_setor_atendimento_p
	and		ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_unidade)	= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_passagem_p)
	and		dt_entrada_unidade		<= dt_passagem_p LIMIT 1; /* Rafael e Ivan em 06/03/2008 */
		
	if (qt_passagem_w = 0) then
		begin
		if (ie_cons_setor_usuario_p = 'S') then
			select	coalesce(min(nr_seq_interno),0)
			into STRICT	nr_seq_unidade_w
			from	unidade_atendimento
			where	ie_situacao = 'A'
			and	cd_setor_atendimento in (SELECT	cd_setor_atendimento
				 from	usuario_setor_v
				 where	upper(nm_usuario)		= upper(nm_usuario_p) /* Bruna, OS71249 */
				 and	cd_setor_atendimento	= cd_setor_atendimento_p);

			if (nr_seq_unidade_w = 0) then
				select	substr(obter_desc_expressao(max(cd_exp_setor_atend),max(ds_setor_atendimento)),1,100)
				into STRICT	ds_setor_atendimento_w
				from	setor_atendimento
				where	cd_setor_atendimento	= cd_setor_atendimento_p;
				
				-- O Setor #@DS_SETOR_ATENDIMENTO_P#@ nao esta liberado para o Usuario #@NM_USUARIO_P#@, ou setor nao tem unidade de atendimento.
				CALL wheb_mensagem_pck.exibir_mensagem_abort(179974,'DS_SETOR_ATENDIMENTO_P='||ds_setor_atendimento_w||';NM_USUARIO_P='||NM_USUARIO_P);
			end if;
		else
		
			select	coalesce(min(a.nr_seq_interno),0)
			into STRICT	nr_seq_unidade_w
			from	unidade_atendimento a
			where	a.ie_situacao 		   = 'A'
			and	a.cd_setor_atendimento = cd_setor_atendimento_p
			and	exists (SELECT	1
				          from	atend_paciente_unidade x where		x.nr_atendimento 		= nr_atendimento_p
				          and		x.cd_setor_atendimento	= cd_setor_atendimento_p
				          and		a.cd_setor_atendimento	= x.cd_setor_atendimento
				          and		a.cd_unidade_basica		= x.cd_unidade_basica
				          and		a.cd_unidade_compl		= x.cd_unidade_compl LIMIT 1);
	
			if (nr_seq_unidade_w = 0) then
				select	coalesce(min(nr_seq_interno),0)
				into STRICT	nr_seq_unidade_w
				from	unidade_atendimento
				where	ie_situacao = 'A'
				and		cd_setor_atendimento	= cd_setor_atendimento_p;
			end if;
			
			if (nr_seq_unidade_w = 0) then
				select	substr(obter_desc_expressao(max(cd_exp_setor_atend),max(ds_setor_atendimento)),1,100)
				into STRICT	ds_setor_atendimento_w
				from	setor_atendimento
				where	cd_setor_atendimento	= cd_setor_atendimento_p;

				-- O Setor #@DS_SETOR_ATENDIMENTO_P#@ setor nao tem unidade de atendimento cadastrada, favor verificar na Movimentacao de Pacientes se o Setor esta correto!
				CALL wheb_mensagem_pck.exibir_mensagem_abort(179985,'DS_SETOR_ATENDIMENTO_P='||ds_setor_atendimento_w);
			end if;
		end if;

		select	nextval('atend_paciente_unidade_seq')
		into STRICT	nr_seq_interno_w
		;

		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_sequencia_w
		from	atend_paciente_unidade
		where	nr_atendimento = nr_atendimento_p;
		
		dt_passagem_w		:= dt_passagem_p - 1/86400;
		qt_registro_w		:= 1;
		
		while(qt_registro_w > 0) loop
			begin
			dt_passagem_w	:= dt_passagem_w + 1/86400;
			select	count(*)
			into STRICT	qt_registro_w
			from	atend_paciente_unidade where		nr_atendimento		= nr_atendimento_p
			and		dt_entrada_unidade	= dt_passagem_w LIMIT 1;
			end;
		end loop;
		
		/* A principio o departamento sera definido apenas quando se tratar de localidade Alemanha.*/

		if (coalesce((pkg_i18n.get_user_locale), 'pt_BR') in ('de_DE', 'de_AT')) then
			select 	max(cd_departamento)
			into STRICT 	cd_departamento_w
			from	atend_paciente_unidade
			where	nr_atendimento = nr_atendimento_p
			and 	coalesce(dt_saida_unidade::text, '') = '';
		end if;

		insert into Atend_Paciente_unidade(
			nr_atendimento, cd_setor_atendimento, cd_unidade_basica,
			cd_unidade_compl, dt_entrada_unidade, dt_atualizacao,
			nm_usuario, cd_tipo_acomodacao, dt_saida_unidade,
			nr_sequencia, nm_usuario_original, dt_saida_interno,
			ie_passagem_setor, nr_acompanhante, nr_seq_interno, IE_CALCULAR_DIF_DIARIA, dt_atualizacao_nrec, NM_USUARIO_NREC, cd_departamento)
		SELECT	
			nr_atendimento_p, cd_setor_atendimento_p, cd_unidade_basica,
			cd_unidade_compl, dt_passagem_w, clock_timestamp(),
			nm_usuario_p, cd_tipo_acomodacao, dt_passagem_w,
			nr_sequencia_w, nm_usuario_p, dt_passagem_w,
			'S', 0, nr_seq_interno_w, 'S', clock_timestamp(), nm_usuario_p, cd_departamento_w
		from	unidade_atendimento
		where	nr_seq_interno	= nr_seq_unidade_w;
		end;
	end if;	
	
insert into log_mov(nm_usuario,
			dt_atualizacao,
			cd_log,
			ds_log)
	values (nm_usuario_p,
			clock_timestamp(),
			9230,
			substr(obter_desc_expressao(325836) || nr_atendimento_p || --atend
obter_desc_expressao(343888) || cd_setor_atendimento_p || --Setor
obter_desc_expressao(298242)|| nr_seq_interno_w || --Seq int
obter_desc_expressao(345366) || Obter_Funcao_Ativa || --funcao
' CallStack: '|| chr(13) || chr(10)|| dbms_utility.format_call_stack,1,1500));

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_passagem_setor_atend (nr_atendimento_p bigint, cd_setor_atendimento_p bigint, dt_passagem_p timestamp, ie_cons_setor_usuario_p text, nm_usuario_p text) FROM PUBLIC;

