-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_alteracao_horario_esp (cd_estabelecimento_p bigint, nr_atendimento_p bigint, ie_tipo_item_p text, cd_item_p text, cd_intervalo_p text, qt_item_p bigint, qt_hora_prescricao_p bigint, dt_horario_adm_p timestamp, nr_prescricoes_p text, nr_prescricao_p bigint, nr_seq_item_p bigint, nr_seq_horario_p bigint, ie_horario_inf_p text, ie_laboratorio_p text, ie_alteracao_p bigint, nm_usuario_p text, ds_alerta_p INOUT text, nr_seq_proc_interno_p bigint, ie_acm_sn_p text, ds_justificativa_p text default null) AS $body$
DECLARE


/* globais */

nr_seq_horario_w		bigint;
nr_seq_alteracao_w		bigint;
nr_seq_procedimento_w		bigint;
nr_prescricao_w      bigint;
dt_horario_w      timestamp;
ds_horario_w      varchar(5);
qt_minutos_w      smallint;
ie_acm_sn_w      varchar(1);
ie_adm_w      varchar(1);
ds_adm_w      varchar(255);
dt_horario_adm_w      timestamp;
ds_msg_w      varchar(255);

/* medicamentos */

cd_material_w      bigint;

/* procedimentos */

cd_procedimento_w    double precision;
ie_origem_proced_w    bigint;
nr_seq_proc_interno_w    bigint;

/* recomendações */

cd_recomendacao_w    bigint;
nr_seq_classif_w    bigint;
ie_ciente_rec_w    varchar(1);

/* sae */

nr_seq_proc_w      bigint;

/* informacoes horarios */

nr_seq_orig_w      bigint;
qt_dose_w      double precision;
cd_unidade_medida_dose_w  varchar(30);
varie_reverteApraz_w    varchar(30);
qt_dispensar_hor_w    double precision;
cd_unidade_medida_w    varchar(30);
qt_dispensar_w      double precision;
ie_suspenso_w      varchar(1);
nr_seq_prot_glic_w    bigint;
varie_inativamedi_w    varchar(1);
cd_evolucao_w      bigint;
ie_gerar_proc_gedipa_job_w  varchar(1);

C01 CURSOR FOR
SELECT  c.nr_prescricao,
  c.nr_sequencia,
  b.nr_sequencia
from  prescr_medica a,
  prescr_procedimento b,
  prescr_proc_hor c
where  a.nr_prescricao = b.nr_prescricao
and  b.nr_prescricao = c.nr_prescricao
and  b.nr_sequencia = c.nr_seq_procedimento
and  a.nr_atendimento = nr_atendimento_p
and  c.dt_horario = dt_horario_w
and  b.cd_procedimento = cd_procedimento_w
and  b.ie_origem_proced = ie_origem_proced_w
and  coalesce(b.nr_seq_proc_interno,0) = coalesce(nr_seq_proc_interno_w,0)
and  Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S';


BEGIN
ds_alerta_p := '';
varie_inativamedi_w := Obter_Param_Usuario(1113, 204, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, varie_inativamedi_w);
varie_reverteApraz_w := Obter_Param_Usuario(1113, 534, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, varie_reverteApraz_w);

select  coalesce(max(ie_gerar_proc_gedipa_job),'S')
into STRICT  ie_gerar_proc_gedipa_job_w
from  parametros_farmacia
where  cd_estabelecimento = cd_estabelecimento_p;

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (ie_tipo_item_p IS NOT NULL AND ie_tipo_item_p::text <> '') and (cd_item_p IS NOT NULL AND cd_item_p::text <> '') and (qt_hora_prescricao_p IS NOT NULL AND qt_hora_prescricao_p::text <> '') and
  ((nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '' AND nr_seq_item_p IS NOT NULL AND nr_seq_item_p::text <> '') or (nr_prescricoes_p IS NOT NULL AND nr_prescricoes_p::text <> '')) and (ie_horario_inf_p IS NOT NULL AND ie_horario_inf_p::text <> '') and (ie_laboratorio_p IS NOT NULL AND ie_laboratorio_p::text <> '') and (ie_alteracao_p IS NOT NULL AND ie_alteracao_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
  
  if (coalesce(nr_seq_horario_p,0) > 0) then
    /* obter sequencia alteração */

    select  nextval('prescr_mat_alteracao_seq')
    into STRICT  nr_seq_alteracao_w
;

    if (ie_tipo_item_p in ('M', 'IAH', 'S')) then
      select  coalesce(max(ie_horario_especial),'S'),
          CASE WHEN coalesce(max(dt_suspensao)::text, '') = '' THEN  'N'  ELSE 'S' END ,
          max(nr_prescricao)
      into STRICT    ie_acm_sn_w,
          ie_suspenso_w,
          nr_prescricao_w
      from    prescr_mat_hor
      where  nr_sequencia = nr_seq_horario_p
      and    Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

      SELECT * FROM gerar_alteracao_horario_prescr(cd_estabelecimento_p, nr_atendimento_p, ie_tipo_item_p, cd_item_p, cd_intervalo_p, qt_item_p, qt_hora_prescricao_p, null, nr_seq_horario_p, null, nr_prescricoes_p, nr_prescricao_w, nr_seq_item_p, ie_laboratorio_p, ie_alteracao_p, null, null, null, null, ds_justificativa_p, null, nm_usuario_p, 'N', nr_seq_proc_interno_p, null, null, ie_acm_sn_p, null, 'N', null, ie_suspenso_w, obter_perfil_ativo, null, 'N', null, null, null, null, null, 'N', null, null, null, null, '', '', cd_evolucao_w, null, null, ds_msg_w) INTO STRICT cd_evolucao_w, ds_msg_w;

    elsif (ie_tipo_item_p = 'P') or (ie_tipo_item_p = 'C') or (ie_tipo_item_p = 'G') then
      select  coalesce(max(ie_horario_especial),'S')
      into STRICT    ie_acm_sn_w
      from    prescr_proc_hor
      where  nr_sequencia = nr_seq_horario_p
      and    Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';

        /* dose especial */

      if (ie_acm_sn_p = 'N') or (varie_reverteApraz_w = 'N') then
        SELECT * FROM gerar_alteracao_horario_prescr(cd_estabelecimento_p, nr_atendimento_p, ie_tipo_item_p, cd_item_p, cd_intervalo_p, qt_item_p, qt_hora_prescricao_p, null, nr_seq_horario_p, null, nr_prescricoes_p, nr_prescricao_p, nr_seq_item_p, ie_laboratorio_p, ie_alteracao_p, null, null, null, null, ds_justificativa_p, null, nm_usuario_p, 'N', nr_seq_proc_interno_p, null, null, coalesce(ie_acm_sn_p,'N'), null, 'N', null, 'N', obter_perfil_ativo, null, 'N', null, null, null, null, null, 'N', null, null, null, null, '', '', cd_evolucao_w, null, null, ds_msg_w) INTO STRICT cd_evolucao_w, ds_msg_w;
      else
        /* reverter administracao horário acm_sn gerado anteriormente */

        select  max(a.dt_horario),
            max(a.nr_seq_proc_interno),
            max(a.cd_procedimento),
            max(a.ie_origem_proced),
            max(b.nr_seq_prot_glic)
        into STRICT    dt_horario_w,
            nr_seq_proc_interno_w,
            cd_procedimento_w,
            ie_origem_proced_w,
            nr_seq_prot_glic_w
        from    prescr_proc_hor a,
            prescr_procedimento b
        where  a.nr_prescricao = b.nr_prescricao
        and    a.nr_seq_procedimento = b.nr_sequencia
        and    a.nr_sequencia = nr_seq_horario_p
        and    Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S';

        if (coalesce(nr_seq_prot_glic_w::text, '') = '') then
          update  prescr_proc_hor
          set  ie_horario_especial = 'S',
            dt_fim_horario  = NULL
          where  nr_sequencia = nr_seq_horario_p;
        else
          update  prescr_proc_hor
          set    dt_fim_horario  = NULL
          where  nr_sequencia = nr_seq_horario_p;
          CALL gerar_alteracao_glicemia_proc(nr_atendimento_p,nr_seq_horario_p,varie_inativamedi_w,nm_usuario_p);
        end if;

        open C01;
        loop
        fetch C01 into
          nr_prescricao_w,
          nr_seq_horario_w,
          nr_seq_procedimento_w;
        EXIT WHEN NOT FOUND; /* apply on C01 */

          update  prescr_mat_alteracao
          set  nr_seq_horario_proc  = NULL
          where  nr_seq_horario_proc = nr_seq_horario_w;
          --and  dt_hor_acm_sn is not null;
          delete
          from    prescr_proc_hor
          where  nr_sequencia = nr_seq_horario_w
          and    nr_sequencia <> nr_seq_horario_p;

        end loop;
        close C01;

      insert into prescr_mat_alteracao(nr_sequencia,
          dt_atualizacao,
          nm_usuario,
          dt_atualizacao_nrec,
          nm_usuario_nrec,
          nr_prescricao,
          nr_seq_procedimento,
          nr_seq_horario_proc,
          dt_alteracao,
          cd_pessoa_fisica,
          ie_alteracao,
          ie_tipo_item,
          dt_hor_acm_sn,
          nr_atendimento,
          cd_item,
          ie_acm_sn,
          nr_seq_proc_interno,
          ds_justificativa,
          nr_seq_prot_glic
          )
        values (
          nextval('prescr_mat_alteracao_seq'),
          clock_timestamp(),
          nm_usuario_p,
          clock_timestamp(),
          nm_usuario_p,
          nr_prescricao_w,
          coalesce(nr_seq_procedimento_w,nr_seq_item_p),
          null,
          clock_timestamp(),
          obter_dados_usuario_opcao(nm_usuario_p,'C'),
          ie_alteracao_p,
          ie_tipo_item_p,
          dt_horario_w,
          nr_atendimento_p,
          cd_item_p,
          ie_acm_sn_p,
          nr_seq_proc_interno_w,
          ds_justificativa_p,
          nr_seq_prot_glic_w);

      end if;
    elsif (ie_tipo_item_p = 'R') then
      SELECT * FROM gerar_alteracao_horario_prescr(cd_estabelecimento_p, nr_atendimento_p, ie_tipo_item_p, cd_item_p, cd_intervalo_p, qt_item_p, qt_hora_prescricao_p, null, nr_seq_horario_p, null, nr_prescricoes_p, nr_prescricao_p, nr_seq_item_p, ie_laboratorio_p, ie_alteracao_p, null, null, null, null, ds_justificativa_p, null, nm_usuario_p, 'N', null, null, null, ie_acm_sn_p, null, 'N', null, 'N', obter_perfil_ativo, null, 'N', null, null, null, null, null, 'N', null, null, null, null, '', '', cd_evolucao_w, null, null, ds_msg_w) INTO STRICT cd_evolucao_w, ds_msg_w;
    elsif (ie_tipo_item_p = 'E') then
      SELECT * FROM gerar_alteracao_horario_prescr(cd_estabelecimento_p, nr_atendimento_p, ie_tipo_item_p, cd_item_p, cd_intervalo_p, qt_item_p, qt_hora_prescricao_p, null, nr_seq_horario_p, null, nr_prescricoes_p, nr_prescricao_p, nr_seq_item_p, ie_laboratorio_p, ie_alteracao_p, null, null, null, null, ds_justificativa_p, null, nm_usuario_p, 'N', null, null, null, ie_acm_sn_p, null, 'N', null, 'N', obter_perfil_ativo, null, 'N', null, null, null, null, null, 'N', null, null, null, null, '', '', cd_evolucao_w, null, null, ds_msg_w) INTO STRICT cd_evolucao_w, ds_msg_w;
    elsif (ie_tipo_item_p = 'IAG') then
      SELECT * FROM gerar_alteracao_horario_prescr(cd_estabelecimento_p, nr_atendimento_p, ie_tipo_item_p, cd_item_p, cd_intervalo_p, qt_item_p, qt_hora_prescricao_p, null, nr_seq_horario_p, null, nr_prescricoes_p, nr_prescricao_p, nr_seq_item_p, ie_laboratorio_p, ie_alteracao_p, null, null, null, null, ds_justificativa_p, null, nm_usuario_p, 'N', null, null, null, ie_acm_sn_p, null, 'N', null, 'N', obter_perfil_ativo, null, 'N', null, null, null, null, null, 'N', null, null, null, null, '', '', cd_evolucao_w, null, null, ds_msg_w) INTO STRICT cd_evolucao_w, ds_msg_w;
    end if;
  else  /* consistir administração x intervalo item acm_sn */
    SELECT * FROM consistir_interv_horarios_esp(nr_prescricao_p, nr_seq_item_p, ie_tipo_item_p, ie_adm_w, ds_adm_w) INTO STRICT ie_adm_w, ds_adm_w;
    if (ie_adm_w = 'N') then
      ds_alerta_p := ds_adm_w;
    end if;

    /* obter horário administração item acm_sn */

    if (dt_horario_adm_p IS NOT NULL AND dt_horario_adm_p::text <> '') then
      dt_horario_adm_w := dt_horario_adm_p;
    else
      dt_horario_adm_w := clock_timestamp();
    end if;

    select  (to_char(dt_horario_adm_w,'mi'))::numeric
    into STRICT  qt_minutos_w
;

    if (coalesce(ie_horario_inf_p,'N') = 'N') then
      if (qt_minutos_w < 30) then
        dt_horario_w  := to_date(to_char(dt_horario_adm_w,'dd/mm/yyyy hh24') || ':00:00','dd/mm/yyyy hh24:mi:ss');
        ds_horario_w  := to_char(dt_horario_w,'hh24:mi');
      else
        dt_horario_w  := to_date(to_char(dt_horario_adm_w+1/24,'dd/mm/yyyy hh24') || ':00:00','dd/mm/yyyy hh24:mi:ss');
        ds_horario_w  := to_char(dt_horario_w,'hh24:mi');
      end if;
    else
      dt_horario_w := to_date(to_char(dt_horario_adm_w,'dd/mm/yyyy hh24:mi') || ':00','dd/mm/yyyy hh24:mi:ss');
      ds_horario_w := to_char(dt_horario_w,'hh24:mi');

    end if;

    /* consistir administracao x data administracao */

    CALL consistir_adm_horario_esp(cd_estabelecimento_p, nm_usuario_p, nr_atendimento_p, ie_tipo_item_p, cd_item_p, nr_prescricao_p, nr_seq_item_p, dt_horario_w, ie_laboratorio_p);

    /* gerar horário administração item acm_sn */

    if (ie_tipo_item_p in ('M', 'IAH', 'S')) then
      select  nextval('prescr_mat_hor_seq')
      into STRICT  nr_seq_horario_w
;

      /* obter informações horário original */


      /*
      select  nvl(min(nr_sequencia),0)
      into  nr_seq_orig_w
      from  prescr_mat_hor
      where  nr_prescricao = nr_prescricao_p
      and  nr_seq_material = nr_seq_item_p;
      */
      select  coalesce(min(a.nr_sequencia),0)
      into STRICT  nr_seq_orig_w
      from  prescr_mat_hor a,
        prescr_material b
      where  a.nr_prescricao = b.nr_prescricao
      and  a.nr_seq_material = b.nr_sequencia
      and  a.qt_dose = b.qt_dose
      and  b.nr_prescricao = nr_prescricao_p
      and  b.nr_sequencia = nr_seq_item_p
      and  Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S';

      if (nr_seq_orig_w > 0) then
        select  qt_dose,
          cd_unidade_medida_dose,
          qt_dispensar_hor,
          cd_unidade_medida,
          qt_dispensar
        into STRICT  qt_dose_w,
          cd_unidade_medida_dose_w,
          qt_dispensar_hor_w,
          cd_unidade_medida_w,
          qt_dispensar_w
        from  prescr_mat_hor
        where  nr_sequencia = nr_seq_orig_w
        and  Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S';
      end if;

      insert into prescr_mat_hor(
              nr_sequencia,
              nr_prescricao,
              nr_seq_material,
              ie_agrupador,
              dt_atualizacao,
              nm_usuario,
              dt_atualizacao_nrec,
              nm_usuario_nrec,
              cd_material,
              ds_horario,
              dt_horario,
              ie_urgente,
              dt_fim_horario,
              ie_horario_especial,
              dt_emissao_farmacia,
              qt_dose,
              cd_unidade_medida_dose,
              qt_dispensar_hor,
              cd_unidade_medida,
              qt_dispensar,
              ie_aprazado,
              nm_usuario_adm,
              dt_lib_horario,
              nr_atendimento
              )
            values (
              nr_seq_horario_w,
              nr_prescricao_p,
              nr_seq_item_p,
              CASE WHEN ie_tipo_item_p='M' THEN 1  ELSE 12 END ,
              clock_timestamp(),
              nm_usuario_p,
              clock_timestamp(),
              nm_usuario_p,
              cd_item_p,
              ds_horario_w,
              dt_horario_w,
              'N',
              clock_timestamp(),
              'S',
              clock_timestamp(),
              qt_dose_w,
              cd_unidade_medida_dose_w,
              qt_dispensar_hor_w,
              cd_unidade_medida_w,
              qt_dispensar_w,
              'N',
              nm_usuario_p,
              clock_timestamp()  ,
              nr_atendimento_p            
              );

      if (ie_gerar_proc_gedipa_job_w  = 'N') then
        CALL Gedipa_Gerar_Proc_Instantaneo(nr_prescricao_p,nr_seq_item_p,null,nr_seq_horario_w);
      end if;

      /* gerar evento administração item acm_sn */

      select  nextval('prescr_mat_alteracao_seq')
      into STRICT  nr_seq_alteracao_w
;

      insert into prescr_mat_alteracao(
                nr_sequencia,
                dt_atualizacao,
                nm_usuario,
                dt_atualizacao_nrec,
                nm_usuario_nrec,
                nr_prescricao,
                nr_seq_prescricao,
                nr_seq_horario,
                dt_alteracao,
                cd_pessoa_fisica,
                ie_alteracao,
                ie_tipo_item,
                dt_hor_acm_sn,
                nr_atendimento,
                cd_item,
                ie_acm_sn
                )
              values (
                nr_seq_alteracao_w,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                nr_prescricao_p,
                nr_seq_item_p,
                nr_seq_horario_w,
                clock_timestamp(),
                obter_dados_usuario_opcao(nm_usuario_p,'C'),
                ie_alteracao_p,
                ie_tipo_item_p,
                dt_horario_w,
                nr_atendimento_p,
                cd_item_p,
                ie_acm_sn_p
                );
      CALL consiste_material_regulacao(nr_seq_item_p, nr_atendimento_p);
        
    elsif (ie_tipo_item_p = 'P') then
      select  nextval('prescr_proc_hor_seq')
      into STRICT  nr_seq_horario_w
;

      /* obter dados item x prescricao */

      select  ie_origem_proced,
        nr_seq_proc_interno
      into STRICT  ie_origem_proced_w,
        nr_seq_proc_interno_w
      from  prescr_procedimento
      where  nr_prescricao = nr_prescricao_p
      and  nr_sequencia = nr_seq_item_p
      and  cd_procedimento = cd_item_p;

      insert into prescr_proc_hor(
              nr_sequencia,
              dt_atualizacao,
              nm_usuario,
              dt_atualizacao_nrec,
              nm_usuario_nrec,
              nr_prescricao,
              nr_seq_procedimento,
              cd_procedimento,
              ie_origem_proced,
              nr_seq_proc_interno,
              ds_horario,
              dt_horario,
              ie_urgente,
              dt_fim_horario,
              ie_horario_especial,
              ie_aprazado,
              nm_usuario_adm,
              dt_lib_horario
              )
            values (
              nr_seq_horario_w,
              clock_timestamp(),
              nm_usuario_p,
              clock_timestamp(),
              nm_usuario_p,
              nr_prescricao_p,
              nr_seq_item_p,
              cd_item_p,
              ie_origem_proced_w,
              nr_seq_proc_interno_w,
              ds_horario_w,
              dt_horario_w,
              'N',
              clock_timestamp(),
              'S',
              'N',
              nm_usuario_p,
              clock_timestamp()
              );

      /* gerar evento administração item acm_sn */

      select  nextval('prescr_mat_alteracao_seq')
      into STRICT  nr_seq_alteracao_w
;

      insert into prescr_mat_alteracao(
                nr_sequencia,
                dt_atualizacao,
                nm_usuario,
                dt_atualizacao_nrec,
                nm_usuario_nrec,
                nr_prescricao,
                nr_seq_procedimento,
                nr_seq_horario_proc,
                dt_alteracao,
                cd_pessoa_fisica,
                ie_alteracao,
                ie_tipo_item,
                dt_hor_acm_sn,
                nr_atendimento,
                cd_item,
                nr_seq_proc_interno,
                ie_acm_sn
                )
              values (
                nr_seq_alteracao_w,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                nr_prescricao_w,
                nr_seq_item_p,
                nr_seq_horario_w,
                clock_timestamp(),
                obter_dados_usuario_opcao(nm_usuario_p,'C'),
                ie_alteracao_p,
                ie_tipo_item_p,
                dt_horario_w,
                nr_atendimento_p,
                cd_item_p,
                nr_seq_proc_interno_w,
                ie_acm_sn_p
                );
    elsif (ie_tipo_item_p = 'R') then

      /* consistir usuário ciente recomendação */

      ie_ciente_rec_w := consistir_usuario_ciente_rec(nr_prescricao_p, nr_seq_item_p, obter_dados_usuario_opcao(nm_usuario_p,'C'), ie_ciente_rec_w, dt_horario_w);
      if (ie_ciente_rec_w = 'S') then
        -- Você já registrou que está ciente desta recomendação!
        CALL Wheb_mensagem_pck.exibir_mensagem_abort(185978);
      end if;

      select  nextval('prescr_rec_hor_seq')
      into STRICT  nr_seq_horario_w
;

      /* obter dados item x prescricao */

      select  nr_seq_classif
      into STRICT  nr_seq_classif_w
      from  prescr_recomendacao
      where  nr_prescricao = nr_prescricao_p
      and  nr_sequencia = nr_seq_item_p
      and  ((cd_recomendacao = cd_item_p) or (coalesce(cd_recomendacao::text, '') = '' and ds_recomendacao = cd_item_p));

      insert into prescr_rec_hor(
              nr_sequencia,
              dt_atualizacao,
              nm_usuario,
              dt_atualizacao_nrec,
              nm_usuario_nrec,
              nr_prescricao,
              nr_seq_recomendacao,
              cd_recomendacao,
              dt_fim_horario,
              ds_horario,
              dt_horario,
              nr_seq_classificacao,
              ie_horario_especial,
              ie_aprazado,
              nm_usuario_adm,
              dt_lib_horario
              )
            values (
              nr_seq_horario_w,
              clock_timestamp(),
              nm_usuario_p,
              clock_timestamp(),
              nm_usuario_p,
              nr_prescricao_p,
              nr_seq_item_p,
              cd_item_p,
              clock_timestamp(),
              ds_horario_w,
              dt_horario_w,
              nr_seq_classif_w,
              'S',
              'N',
              nm_usuario_p,
              clock_timestamp()
              );

      /* gerar evento administração item acm_sn */

      select  nextval('prescr_mat_alteracao_seq')
      into STRICT  nr_seq_alteracao_w
;

      insert into prescr_mat_alteracao(
                nr_sequencia,
                dt_atualizacao,
                nm_usuario,
                dt_atualizacao_nrec,
                nm_usuario_nrec,
                nr_prescricao,
                dt_alteracao,
                cd_pessoa_fisica,
                ie_alteracao,
                nr_seq_recomendacao,
                nr_seq_horario_rec,
                ie_tipo_item,
                dt_hor_acm_sn,
                nr_atendimento,
                cd_item,
                ie_acm_sn
                )
              values (
                nr_seq_alteracao_w,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                nr_prescricao_p,
                clock_timestamp(),
                obter_dados_usuario_opcao(nm_usuario_p,'C'),
                ie_alteracao_p,
                nr_seq_item_p,
                nr_seq_horario_w,
                ie_tipo_item_p,
                dt_horario_w,
                nr_atendimento_p,
                cd_item_p,
                ie_acm_sn_p
                );
    elsif (ie_tipo_item_p = 'E') then
      if (ie_alteracao_p = 3) then

        select  nextval('pe_prescr_proc_hor_seq')
        into STRICT  nr_seq_horario_w
;

        insert into pe_prescr_proc_hor(
                nr_sequencia,
                dt_atualizacao,
                nm_usuario,
                dt_atualizacao_nrec,
                nm_usuario_nrec,
                nr_seq_pe_prescr,
                nr_seq_pe_proc,
                nr_seq_proc,
                dt_horario,
                dt_fim_horario,
                ie_horario_especial,
                ie_aprazado,
                nm_usuario_adm
                )
              values (
                nr_seq_horario_w,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                nr_prescricao_p,
                nr_seq_item_p,
                cd_item_p,
                dt_horario_w,
                clock_timestamp(),
                'S',
                'N',
                nm_usuario_p
                );

        /* gerar evento administração item acm_sn */

        select  nextval('prescr_mat_alteracao_seq')
        into STRICT  nr_seq_alteracao_w
;

        insert into prescr_mat_alteracao(
                  nr_sequencia,
                  dt_atualizacao,
                  nm_usuario,
                  dt_atualizacao_nrec,
                  nm_usuario_nrec,
                  nr_prescricao,
                  dt_alteracao,
                  cd_pessoa_fisica,
                  ie_alteracao,
                  nr_seq_item_sae,
                  nr_seq_horario_sae,
                  ie_tipo_item,
                  dt_hor_acm_sn,
                  nr_atendimento,
                  cd_item,
                  ie_acm_sn
                  )
                values (
                  nr_seq_alteracao_w,
                  clock_timestamp(),
                  nm_usuario_p,
                  clock_timestamp(),
                  nm_usuario_p,
                  nr_prescricao_p,
                  clock_timestamp(),
                  obter_dados_usuario_opcao(nm_usuario_p,'C'),
                  ie_alteracao_p,
                  nr_seq_item_p,
                  nr_seq_horario_w,
                  ie_tipo_item_p,
                  dt_horario_w,
                  nr_atendimento_p,
                  cd_item_p,
                  ie_acm_sn_p
                  );
      
      end if;
    end if;
  end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_alteracao_horario_esp (cd_estabelecimento_p bigint, nr_atendimento_p bigint, ie_tipo_item_p text, cd_item_p text, cd_intervalo_p text, qt_item_p bigint, qt_hora_prescricao_p bigint, dt_horario_adm_p timestamp, nr_prescricoes_p text, nr_prescricao_p bigint, nr_seq_item_p bigint, nr_seq_horario_p bigint, ie_horario_inf_p text, ie_laboratorio_p text, ie_alteracao_p bigint, nm_usuario_p text, ds_alerta_p INOUT text, nr_seq_proc_interno_p bigint, ie_acm_sn_p text, ds_justificativa_p text default null) FROM PUBLIC;

