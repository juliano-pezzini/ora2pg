-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copia_leite_deriv ( nr_prescricao_p bigint, nr_prescr_copia_p bigint, nm_usuario_p text, nr_seq_regra_p bigint, ie_recalc_horario_p text) AS $body$
DECLARE

							
/*  Variaveis para copiar da tabela prescr_leite_deriv  */

cd_intervalo_w				varchar(7);
hr_dose_especial_w			varchar(5);
ie_dose_espec_agora_w		varchar(1);
ie_se_necessario_w			varchar(1);
ie_via_aplicacao_w			varchar(15);
nr_prescricao_w				bigint;
nr_seq_disp_succao_w		bigint;
qt_dose_especial_w			double precision;
qt_volume_oral_w			integer;
qt_volume_sonda_w			integer;
qt_volume_total_w			bigint;
nr_seq_leite_deriv_w		bigint;
nr_sequencia_ld_w			bigint;

nr_prescricao_orig_w		prescr_leite_deriv.nr_prescricao%type;
nr_sequencia_orig_w			prescr_leite_deriv.nr_sequencia%type;

/*  Variaveis de busca da nova prescricao */

dt_inicio_prescr_w			timestamp;
hr_prim_horario_w			varchar(5);
nr_horas_validade_w			integer;

/* Variaveis utilizadas para gerar os horarios */

ds_horarios_w				prescr_leite_deriv.ds_horarios%type;
ds_horarios2_w				ds_horarios_w%type;
ds_horarios_ww				varchar(2000);
ds_horarios_www				varchar(2000);
nr_intervalo_w				varchar(2000);

/* Variaveis utilizadas no cursor dos produtos de leites e derivados */

cd_material_w				integer;
cd_unidade_medida_dose_w	varchar(30);
cd_unidade_medida_w			varchar(30);
ie_origem_inf_w				varchar(1);
ie_agrupador_w				smallint;
qt_material_w				double precision;
qt_unitaria_w				double precision;
qt_dose_w					double precision;
nr_agrupamento_w			double precision;
nr_sequencia_material_w		integer;
nr_sequencia_pd_w			integer;

/* Variaveis utilizadas no cursor dos produtos adicionais dos produtos dos leites e derivados */
	
cd_material_ad_w			integer;
cd_unidade_medida_dose_ad_w	varchar(30);
cd_unidade_medida_ad_w		varchar(30);
ie_origem_inf_ad_w			varchar(1);
ie_agrupador_ad_w			smallint;
qt_material_ad_w			double precision;
qt_unitaria_ad_w			double precision;
qt_porcentagem_ad_w			prescr_material.qt_porcentagem%type;
qt_dose_ad_w				double precision;
nr_agrupamento_ad_w			double precision;
nr_sequencia_ad_w			integer;
cd_intervalo_ad_w			varchar(7);
ds_horario_ad_w				varchar(2000);
ie_se_necessario_ad_w		varchar(1);
hr_prim_horario_ad_w		varchar(5);

ie_manter_intervalo_w		rep_regra_copia_crit.ie_manter_intervalo%type;
ie_regra_geral_w			rep_regra_copia_crit.ie_manter_intervalo%type;

dt_inicio_item_w			timestamp;

nr_ocorrencia_w				bigint;
ie_operacao_w				intervalo_prescricao.ie_operacao%type;
qt_operacao_w				intervalo_prescricao.qt_operacao%type;

nr_atendimento_w			atendimento_paciente.nr_atendimento%type;
hr_prim_horario_ww			prescr_leite_deriv.hr_Prim_horario%type;

/*  Cursor para busca dos leites e derivados da prescricao de copia */

c01 CURSOR FOR
SELECT	cd_intervalo,
		hr_dose_especial,
		ie_dose_espec_agora,
		ie_se_necessario,
		ie_via_aplicacao,
		nr_prescricao,
		nr_seq_disp_succao,
		nr_sequencia,
		qt_dose_especial,
		qt_volume_oral,
		qt_volume_sonda,
		qt_volume_total,
		ds_horarios,
		nr_prescricao,
		nr_sequencia,
		hr_prim_horario
from	prescr_leite_deriv
where	nr_prescricao = nr_prescr_copia_p;

/* Cursor para a busca dos produtos dos leites e derivados  */

c02 CURSOR FOR
SELECT	cd_material,
		cd_unidade_medida_dose,
		cd_unidade_medida,
		ie_origem_inf,
		ie_agrupador,
		qt_material,
		qt_unitaria,
		qt_dose,		
		nr_agrupamento,
		nr_sequencia
from	prescr_material
where	nr_prescricao		= nr_prescr_copia_p
and	nr_seq_leite_deriv	= nr_seq_leite_deriv_w
and	ie_agrupador = 16;
	

/* Cursor para a busca dos produtos adicionais dos produtos */

c03 CURSOR FOR
SELECT	cd_material,
		cd_unidade_medida_dose,
		cd_unidade_medida,
		ie_origem_inf,
		ie_agrupador,
		qt_material,
		qt_unitaria,
		qt_porcentagem,
		qt_dose,
		cd_intervalo,
		ds_horarios,
		nr_agrupamento,
		ie_se_necessario,
		hr_prim_horario_ad_w
from	prescr_material
where	nr_prescricao = nr_prescr_copia_p
and 	nr_sequencia_diluicao  = nr_sequencia_material_w
and	ie_agrupador = 17;


BEGIN
if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_prescr_copia_p IS NOT NULL AND nr_prescr_copia_p::text <> '') then

	select	max(nr_atendimento)
	into STRICT	nr_atendimento_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;
	
	select	coalesce(max(ie_manter_intervalo),'N'),
			coalesce(max(ie_regra_geral),'I')
	into STRICT	ie_manter_intervalo_w,
			ie_regra_geral_w
	from	rep_regra_copia_crit
	where	ie_tipo_item = 'LD'
	and		nr_seq_regra = nr_seq_regra_p;
	
	/* Abertura e insercao dos dados dos cursores, o primeiro trata-se do que retorna os leites e derivados que irao ser copiados */

	open c01;
	loop
	fetch c01 into
		cd_intervalo_w,
		hr_dose_especial_w,
		ie_dose_espec_agora_w,
		ie_se_necessario_w,
		ie_via_aplicacao_w,
		nr_prescricao_w,
		nr_seq_disp_succao_w,
		nr_seq_leite_deriv_w,
		qt_dose_especial_w,
		qt_volume_oral_w,
		qt_volume_sonda_w,
		qt_volume_total_w,
		ds_horarios_w,
		nr_prescricao_orig_w,
		nr_sequencia_orig_w,
		hr_prim_horario_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
				
		/*  Busca os dados da nova prescricao para a geracao dos horarios e outras validacoes necessarias */

		select	max(dt_inicio_prescr),
				max(to_char(dt_inicio_prescr,'hh24:mi')),
				max(nr_horas_validade)
		into STRICT	dt_inicio_prescr_w,
				hr_prim_horario_ww,
				nr_horas_validade_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
		
		if (coalesce(ie_recalc_horario_p,'X') not in ('N','V')) then
			hr_prim_horario_w := hr_prim_horario_ww;
			dt_inicio_item_w  := dt_inicio_prescr_w;
		elsif (hr_prim_horario_w <> '  :  ') and (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then
			dt_inicio_item_w := to_date(to_char(dt_inicio_prescr_w,'dd/mm/yyyy')||' ' ||hr_prim_horario_w||':00','dd/mm/yyyy hh24:mi:ss');
		end if;
		
		
		
		/* Se for "Se necessario" ele automaticamente joga "SN" no ds_horarios , se nao realiza o calculo dos horarios */

		if (coalesce(ie_se_necessario_w,'N') = 'S') then
			hr_prim_horario_w := null;
			ds_horarios_w := 'SN';
		elsif (ie_regra_geral_w = 'H') and (ie_manter_intervalo_w = 'S') and (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
		
			select	max(ie_operacao),
					max(qt_operacao)
			into STRICT	ie_operacao_w,
					qt_operacao_w
			from	intervalo_prescricao
			where	cd_intervalo	= cd_intervalo_w;	
					
			qt_operacao_w		:= obter_ocorrencia_intervalo(cd_intervalo_w, 24, 'H');
			dt_inicio_item_w	:= dt_inicio_prescr_w - qt_operacao_w / 24;

			select	coalesce(max(c.dt_horario), dt_inicio_prescr_w)
			into STRICT	dt_inicio_item_w
			from	prescr_mat_hor c,
					prescr_material d,
					prescr_leite_deriv b,
					prescr_medica a
			where	coalesce(c.ie_situacao,'A')	= 'A'
			and		c.nr_prescricao		= b.nr_prescricao
			--and 	nvl(c.ie_horario_especial,'N') <> 'S'
			and		d.nr_sequencia = c.nr_seq_material
			and		d.nr_prescricao = c.nr_prescricao
			and		d.ie_agrupador	= 16
			and		b.nr_sequencia	= d.nr_seq_leite_deriv
			and		b.nr_prescricao	= d.nr_prescricao
			and		b.cd_intervalo		= cd_intervalo_w
			and		b.nr_sequencia		= nr_sequencia_orig_w
			and		b.nr_prescricao		= a.nr_prescricao
			and		(coalesce(a.dt_liberacao_medico, a.dt_liberacao) IS NOT NULL AND (coalesce(a.dt_liberacao_medico, a.dt_liberacao))::text <> '')
			and		coalesce(a.dt_suspensao::text, '') = ''
			--and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
			and		a.nr_prescricao	= nr_prescricao_orig_w;
			
			hr_prim_horario_w	:= trim(both coalesce(hr_prim_horario_w, obter_Prim_dshorarios(ds_horarios_w)));
			
			if (coalesce(dt_inicio_item_w::text, '') = '') then
				if (length(hr_prim_horario_w) = 5) then
					if (dt_inicio_prescr_w > to_date(to_char(dt_inicio_prescr_w, 'dd/mm/yyyy ') || hr_prim_horario_w, 'dd/mm/yyyy hh24:mi')) then
						dt_inicio_item_w	:= to_date(to_char(dt_inicio_prescr_w, 'dd/mm/yyyy ') || hr_prim_horario_w, 'dd/mm/yyyy hh24:mi');
					else
						dt_inicio_item_w	:= trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_inicio_prescr_w+1, hr_prim_horario_w),'mi');
					end if;
				else
					hr_prim_horario_w	:= null;
				end if;
			end if;
			
			if (dt_inicio_item_w IS NOT NULL AND dt_inicio_item_w::text <> '') then
				dt_inicio_item_w	:= dt_inicio_item_w + qt_operacao_w / 24;
			end if;

			dt_inicio_item_w	:= coalesce(dt_inicio_item_w, dt_inicio_prescr_w);
				
			if (coalesce(qt_operacao_w,0) > 0) and (ie_operacao_w in ('H')) and (dt_inicio_item_w IS NOT NULL AND dt_inicio_item_w::text <> '') then
				
				if (ie_operacao_w in ('H')) and (dt_inicio_item_w not between dt_inicio_prescr_w and (dt_inicio_item_w + qt_operacao_w)) then
					
					while(dt_inicio_item_w not between dt_inicio_prescr_w and (dt_inicio_item_w + qt_operacao_w)) loop
						dt_inicio_item_w	:= dt_inicio_item_w + qt_operacao_w/24;
					end loop;
				end if;
				
				hr_prim_horario_w	:= to_char(dt_inicio_item_w, 'hh24:mi');
			end if;
			
			nr_ocorrencia_w	:= 0;
			SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, dt_inicio_prescr_w, dt_inicio_item_w, nr_horas_validade_w, null, 0, 0, nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'N', null) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;

			ds_horarios_w	:= eliminar_horarios_vigencia(ds_horarios_w || ds_horarios2_w, cd_intervalo_w, dt_inicio_item_w, dt_inicio_prescr_w, 0, 0, nr_prescricao_p);
		elsif (hr_prim_horario_w <> '  :  ') and (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then

			ds_horarios_w := '';
			nr_intervalo_w := 0;
			
			SELECT * FROM calcular_horario_prescricao(nr_prescricao_p, cd_intervalo_w, dt_inicio_prescr_w, dt_inicio_item_w, nr_horas_validade_w, null, 0, 0, nr_intervalo_w, ds_horarios_ww, ds_horarios_www, 'N', null) INTO STRICT nr_intervalo_w, ds_horarios_ww, ds_horarios_www;

			ds_horarios_w := ds_horarios_ww || ds_horarios_www;
			
			if (coalesce(ie_recalc_horario_p,'X') = 'V') then
				ds_horarios_w := reordenar_horarios(dt_inicio_prescr_w, reordenar_horarios_copia(ds_horarios_w));
			end if;
		else
			ds_horarios_w	:= '';
		end if;
		
		/* Seleciona  a nova sequencia para os leites e derivados */

		select	nextval('prescr_leite_deriv_seq')
		into STRICT	nr_sequencia_ld_w
		;
		
		insert into prescr_leite_deriv(
					cd_intervalo,
					ds_horarios,
					dt_atualizacao,
					dt_atualizacao_nrec,
					hr_dose_especial,
					hr_prim_horario,
					ie_dose_espec_agora,
					ie_se_necessario,
					ie_via_aplicacao,
					nm_usuario,
					nm_usuario_nrec,
					nr_prescricao,
					nr_seq_disp_succao,
					nr_sequencia,
					qt_dose_especial,
					qt_volume_oral,
					qt_volume_sonda,
					qt_volume_total)
			values (
					cd_intervalo_w,
					ds_horarios_w,
					clock_timestamp(),
					clock_timestamp(),
					hr_dose_especial_w,
					hr_prim_horario_w,
					ie_dose_espec_agora_w,
					ie_se_necessario_w,
					ie_via_aplicacao_w,
					nm_usuario_p,
					nm_usuario_p,
					nr_prescricao_p,
					nr_seq_disp_succao_w,
					nr_sequencia_ld_w,
					qt_dose_especial_w,
					qt_volume_oral_w,
					qt_volume_sonda_w,
					qt_volume_total_w);
		commit;
		/* Abre o cursor dois para a insercao dos produtos do leite e derivados */

		open c02;
		loop
		fetch c02 into
			cd_material_w,
			cd_unidade_medida_dose_w,
			cd_unidade_medida_w,
			ie_origem_inf_w,
			ie_agrupador_w,
			qt_material_w,
			qt_unitaria_w,
			qt_dose_w,		
			nr_agrupamento_w,
			nr_sequencia_material_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			/* Seleciona a nova sequencia da tabela */

			select	coalesce(max(nr_sequencia),0)+1
			into STRICT	nr_sequencia_pd_w
			from	prescr_material
			where	nr_prescricao = nr_prescricao_p;
									

			insert  into prescr_material(
					nr_prescricao,
					nr_sequencia,
					nr_seq_leite_deriv,
					ie_origem_inf,
					cd_material,
					cd_unidade_medida,
					qt_dose,
					qt_unitaria,
					qt_material,
					dt_atualizacao,
					nm_usuario,
					cd_intervalo,
					ds_horarios,
					ds_observacao,
					ds_observacao_enf,
					ie_via_aplicacao,
					ie_cobra_paciente,
					cd_motivo_baixa,
					dt_baixa,
					ie_utiliza_kit,
					cd_unidade_medida_dose,
					qt_conversao_dose,
					ie_urgencia,
					nr_ocorrencia,
					qt_total_dispensar,
					cd_fornec_consignado,
					hr_dose_especial,
					qt_dose_especial,
					ds_dose_diferenciada,
					ie_medicacao_paciente,
					hr_prim_horario,
					ie_agrupador,
					nr_dia_util,
					ie_suspenso,
					ie_se_necessario,
					qt_min_aplicacao,
					ie_bomba_infusao,
					ie_aplic_bolus,
					ie_aplic_lenta,
					ie_acm,
					ie_objetivo,
					cd_topografia_cih,
					ie_origem_infeccao,
					cd_amostra_cih,
					cd_microorganismo_cih,
					ie_uso_antimicrobiano,
					cd_protocolo,
					nr_seq_protocolo,
					nr_seq_mat_protocolo,
					qt_hora_aplicacao,
					ie_recons_diluente_fixo,
					qt_vel_infusao,
					ds_justificativa,
					ie_sem_aprazamento,
					ie_indicacao,
					dt_proxima_dose,
					qt_total_dias_lib,
					nr_seq_substituto,
					ie_lado,
					dt_inicio_medic,
					qt_dia_prim_hor,
					ie_regra_disp,
					qt_vol_adic_reconst,
					qt_hora_intervalo,
					qt_min_intervalo,
					dt_suspensao_progr,
					nr_prescricao_original,
					nr_seq_anterior,
					nr_agrupamento,
					ie_regra_volume_leite,
					ie_via_leite)
			SELECT  nr_prescricao_p,
					nr_sequencia_pd_w,
					nr_sequencia_ld_w,
					a.ie_origem_inf,
					a.cd_material,
					a.cd_unidade_medida,
					a.qt_dose,
					a.qt_unitaria,
					a.qt_material,
					clock_timestamp(),
					nm_usuario_p,
					a.cd_intervalo,
					a.ds_horarios,
					a.ds_observacao,
					a.ds_observacao_enf,
					a.ie_via_aplicacao,
					coalesce(a.ie_cobra_paciente,'S'),
					CASE WHEN coalesce(a.ie_regra_disp,'X')='D' THEN  a.cd_motivo_baixa  ELSE CASE WHEN coalesce(a.ie_cobra_paciente,'S')='S' THEN  0  ELSE a.cd_motivo_baixa END  END  cd_motivo_baixa,
					CASE WHEN coalesce(a.ie_regra_disp,'X')='D' THEN  clock_timestamp()  ELSE CASE WHEN coalesce(a.ie_cobra_paciente,'S')='S' THEN  null  ELSE clock_timestamp() END  END  dt_baixa,
					a.ie_utiliza_kit,
					a.cd_unidade_medida_dose,
					a.qt_conversao_dose,
					'N' ie_urgencia,
					a.nr_ocorrencia,
					a.qt_total_dispensar,
					a.cd_fornec_consignado,
					null hr_dose_especial,
					null qt_dose_especial,
					a.ds_dose_diferenciada,
					a.ie_medicacao_paciente,
					CASE WHEN a.ie_se_necessario='S' THEN  null  ELSE hr_prim_horario_w END  hr_prim_horario,
					a.ie_agrupador,
					a.nr_dia_util,
					CASE WHEN b.ie_situacao='A' THEN  'N'  ELSE 'S' END   ie_suspenso,
					a.ie_se_necessario,
					a.qt_min_aplicacao,
					a.ie_bomba_infusao,
					coalesce(a.ie_aplic_bolus,'N') ie_aplic_bolus,
					coalesce(a.ie_aplic_lenta,'N') ie_aplic_lenta,
					coalesce(a.ie_acm,'N') ie_acm,
					a.ie_objetivo,
					a.cd_topografia_cih,
					a.ie_origem_infeccao,
					a.cd_amostra_cih,
					a.cd_microorganismo_cih,
					coalesce(a.ie_uso_antimicrobiano,'N') ie_uso_antimicrobiano,
					a.cd_protocolo,
					a.nr_seq_protocolo,
					a.nr_seq_mat_protocolo,
					a.qt_hora_aplicacao,
					'N' ie_recons_diluente_fixo,
					a.qt_vel_infusao,
					a.ds_justificativa,
					a.ie_sem_aprazamento,
					a.ie_indicacao,
					a.dt_proxima_dose,
					a.qt_total_dias_lib,
					a.nr_seq_substituto,
					a.ie_lado,
					a.dt_inicio_medic,
					a.qt_dia_prim_hor,
					CASE WHEN coalesce(a.ie_regra_disp,'X')='D' THEN  a.ie_regra_disp  ELSE null END  ie_regra_disp,
					a.qt_vol_adic_reconst,
					a.qt_hora_intervalo,
					a.qt_min_intervalo,
					a.dt_suspensao_progr,
					coalesce(a.nr_prescricao_original,a.nr_prescricao),
					coalesce(a.nr_seq_anterior,a.nr_sequencia),
					nr_agrupamento_w,
					a.ie_regra_volume_leite,
					a.ie_via_leite
			From	Material b,
					Prescr_Material a
			where	a.nr_prescricao = nr_prescr_copia_p
			and		a.nr_sequencia	= nr_sequencia_material_w
			and		a.cd_material 	= b.cd_material;

			commit;

			open c03;
			loop
			fetch c03 into
						cd_material_ad_w,
						cd_unidade_medida_dose_ad_w,
						cd_unidade_medida_ad_w,
						ie_origem_inf_ad_w,
						ie_agrupador_ad_w,
						qt_material_ad_w,
						qt_unitaria_ad_w,
						qt_porcentagem_ad_w,
						qt_dose_ad_w,
						cd_intervalo_ad_w,
						ds_horario_ad_w,
						nr_agrupamento_ad_w,
						ie_se_necessario_ad_w,
						hr_prim_horario_ad_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
			begin
				/* Seleciona a nova sequencia da tabela */

				select	coalesce(max(nr_sequencia),0)+1
				into STRICT	nr_sequencia_ad_w
				from	prescr_material
				where	nr_prescricao = nr_prescricao_p;
												

				insert	into prescr_material(
						nr_sequencia,
						nr_prescricao,
						cd_material,
						cd_unidade_medida_dose,
						cd_unidade_medida,
						dt_atualizacao,
						ie_origem_inf,
						nm_usuario,
						ie_agrupador,
						qt_material,
						qt_unitaria,
						cd_intervalo,
						nr_sequencia_diluicao,
						ds_horarios,
						ie_se_necessario,
						hr_prim_horario,
						qt_dose,
						qt_porcentagem,
						nr_agrupamento)

				values (nr_sequencia_ad_w,
						nr_prescricao_p,
						cd_material_ad_w,
						cd_unidade_medida_dose_ad_w,
						cd_unidade_medida_ad_w,						
						clock_timestamp(),
						ie_origem_inf_ad_w,
						nm_usuario_p,
						ie_agrupador_ad_w,
						qt_material_ad_w,
						qt_unitaria_ad_w,
						cd_intervalo_ad_w,
						nr_sequencia_pd_w,
						ds_horario_ad_w,
						ie_se_necessario_ad_w,
						hr_prim_horario_ad_w,
						qt_dose_ad_w,
						qt_porcentagem_ad_w,
						nr_agrupamento_ad_w);	
						
				commit;
			end;
			end loop;
			close c03;

			if (coalesce(nr_sequencia_pd_w, 0) > 0) then
				CALL atualiza_produto_lactario(nr_sequencia_ld_w, nm_usuario_p, obter_perfil_ativo);
			end if;

		end;
		end loop;
		close c02;
	end;
	end loop;
	close c01;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copia_leite_deriv ( nr_prescricao_p bigint, nr_prescr_copia_p bigint, nm_usuario_p text, nr_seq_regra_p bigint, ie_recalc_horario_p text) FROM PUBLIC;

