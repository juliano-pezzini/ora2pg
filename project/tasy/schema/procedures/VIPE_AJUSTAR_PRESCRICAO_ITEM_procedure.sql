-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE vipe_ajustar_prescricao_item ( cd_estabelecimento_p bigint, nr_prescricao_p INOUT bigint, nr_atendimento_p bigint, cd_material_novo_p bigint, cd_material_p bigint, nr_seq_item_p bigint, cd_intervalo_p text, cd_intervalo_novo_p text, ie_acm_sn_p text, qt_dose_p bigint, ie_via_aplicacao_p text, nr_prescricoes_p text, dt_primeiro_horario_p timestamp, cd_unidade_med_p text, ds_horarios_p text, ie_susp_anterior_p text, ie_tipo_pessoa_p text, cd_perfil_p bigint, nm_usuario_p text, ds_erro_p INOUT text, ds_dose_dif_p text, qt_dose_esp_p bigint, ds_justificativa_p text, ds_observacao_subs_p text, hr_dose_especial_p text, ie_dose_especial_p text, ie_se_necessario_p text, ie_acm_p text, ie_urgencia_p text, nr_nova_prescricao_p bigint, ie_libera_prescricao_p text, cd_motivo_p bigint default 0, ds_motivo_p text default null, cd_funcao_p bigint DEFAULT NULL) AS $body$
DECLARE

 
nr_prescricao_w			bigint;
nr_prescricao_ww		bigint;
nr_atendimento_w		bigint;
qt_dose_original_w		double precision;
qt_dose_w				double precision;
nr_seq_item_w			integer;
NR_AGRUPAMENTO_W		integer;
ds_erro_w				varchar(255);
ds_erro_ww				varchar(255);
hr_dose_especial_w		varchar(255);
nr_ocorrencias_w		double precision;
ds_horarios_w			varchar(255);
ds_horarios_ww 			varchar(255);
ie_verificar_prescr_w	varchar(2);
dt_prim_hor_prescr_w	timestamp;
dt_prim_hor_medic_w		timestamp;
dt_inicio_prescr_w		timestamp;
nr_horas_validade_w		bigint;
dt_primeiro_horario_w	timestamp;
qt_unitaria_w			double precision;
qt_material_w			double precision;
qt_dispensar_w			double precision;
ie_regra_disp_w			varchar(1);
ie_origem_inf_w			varchar(1);
qt_dose_especial_w		double precision;
ds_horarios1_w			varchar(500);
ds_horarios2_w			varchar(500);
ds_horarios3_w			varchar(2000);
ie_limpa_prim_hor_acm_w	varchar(1);
ie_se_necessario_w		varchar(1);
ie_acm_w				varchar(1);
qt_conversao_dose_w		double precision;

c01 CURSOR FOR 
SELECT	a.nr_prescricao, 
		a.nr_sequencia 
from	prescr_material a, 
		prescr_medica b 
where	a.nr_prescricao	<> nr_nova_prescricao_p 
and		a.nr_prescricao	<> nr_prescricao_w 
--and		b.dt_inicio_prescr <= sysdate 
and		obter_se_acm_sn(ie_acm, ie_se_necessario) = coalesce(ie_acm_sn_p, 'N') 
and		a.qt_dose	= qt_dose_original_w 
and		coalesce(a.cd_intervalo,'XPTO') = coalesce(cd_intervalo_p, 'XPTO') 
and		a.cd_material	= cd_material_p 
and		a.nr_prescricao = b.nr_prescricao 
and		b.dt_validade_prescr >= (clock_timestamp() - interval '2 days') 
and		b.nr_atendimento = nr_atendimento_p;


BEGIN 
 
ie_verificar_prescr_w := Obter_Param_Usuario(8030, 47, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_verificar_prescr_w);
ie_limpa_prim_hor_acm_w := Obter_Param_Usuario(924, 445, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_limpa_prim_hor_acm_w);
 
if (nr_prescricao_p = 0) then 
	 
	select 	Obter_Max_NrPrescricao(nr_prescricoes_p) 
	into STRICT	nr_prescricao_w 
	;
else	 
	nr_prescricao_w := nr_prescricao_p;
end if;
 
if (nr_prescricao_w > 0) then	 
	begin 
	 
	nr_prescricao_ww := nr_nova_prescricao_p;
 
	hr_dose_especial_w	:= hr_dose_especial_p;
	if (hr_dose_especial_p = ' : ') then 
		hr_dose_especial_w	:= '';
	end if;
	 
	if (nr_seq_item_p = 0) then 
		 
		select	max(nr_sequencia) 
		into STRICT	nr_seq_item_w 
		from 	prescr_material 
		where	obter_se_acm_sn(ie_acm, ie_se_necessario) = coalesce(ie_acm_sn_p, 'N') 
		and		coalesce(cd_intervalo, 'XPTO') = coalesce(cd_intervalo_p, 'XPTO') 
		and		cd_material = cd_material_p 
		and		nr_prescricao = nr_prescricao_w;
	else 
		nr_seq_item_w := nr_seq_item_p;
	end if;
	 
	-- Verifique se o item selecionado possui um intervalo informado! 
	if (coalesce(nr_seq_item_w,0) = 0) then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(176738);
	end if;
	 
	if (nr_seq_item_w IS NOT NULL AND nr_seq_item_w::text <> '') and (nr_seq_item_w > 0) then 
		begin 
 
		select	nr_horas_validade, 
				TO_DATE(TO_CHAR(dt_prescricao,'dd/mm/yyyy') ||' '||coalesce(to_char(dt_primeiro_horario_p, 'hh24:mi'),TO_CHAR(coalesce(dt_primeiro_horario,dt_prescricao),'hh24:mi')),'dd/mm/yyyy hh24:mi:ss'), 
				coalesce(dt_primeiro_horario,dt_prescricao) 
		into STRICT	nr_horas_validade_w, 
				dt_primeiro_horario_w, 
				dt_inicio_prescr_w 
		from	prescr_medica 
		where	nr_prescricao = nr_prescricao_ww;
		 
		select	max(qt_dose) 
		into STRICT	qt_dose_original_w 
		from	prescr_material 
		where	nr_sequencia	= nr_seq_item_w 
		and		nr_prescricao 	= nr_prescricao_w;
		 
		qt_dose_w	:= coalesce(qt_dose_p, qt_dose_original_w);
		 
		select	coalesce(max(qt_conversao),qt_conversao_dose_w) 
		into STRICT	qt_conversao_dose_w 
		from	unidade_medida_dose_v 
		where	cd_unidade_medida	= cd_unidade_med_p 
		and		cd_material			= cd_material_p;
			 
		begin 
		qt_unitaria_w	:= dividir(qt_dose_w, qt_conversao_dose_w);
		if (qt_unitaria_w = 0) then 
			qt_unitaria_w := obter_dose_convertida(coalesce(cd_material_novo_p,cd_material_p), qt_dose_p, cd_unidade_med_p, substr(obter_dados_material_estab(coalesce(cd_material_novo_p,cd_material_p),cd_estabelecimento_p,'UMS'),1,30));
		end if;
		exception when others then 
		qt_unitaria_w	:= null;		
		end;
		 
		Select	max(ie_origem_inf), 
				coalesce(max(ie_se_necessario),'N'), 
				coalesce(max(ie_acm),'N'), 
				max(qt_material) 
		into STRICT	ie_origem_inf_w, 
				ie_se_necessario_w, 
				ie_acm_w, 
				qt_material_w 
		from	prescr_material 
		where	nr_sequencia	= nr_seq_item_w 
		and		nr_prescricao 	= nr_prescricao_ww;
		 
		nr_ocorrencias_w	:= 0;
		 
		SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_ww, cd_intervalo_novo_p, dt_inicio_prescr_w, dt_primeiro_horario_w, nr_horas_validade_w, cd_material_novo_p, 0, 0, nr_ocorrencias_w, ds_horarios1_w, ds_horarios2_w, 'N', ds_dose_dif_p) INTO STRICT nr_ocorrencias_w, ds_horarios1_w, ds_horarios2_w;
						 
		Select	CASE WHEN qt_dose_esp_p=0 THEN  null  ELSE qt_dose_esp_p END  
		into STRICT	qt_dose_especial_w 
		;
		 
		SELECT * FROM Obter_Quant_Dispensar(	cd_estabelecimento_p, cd_material_novo_p, nr_prescricao_ww, nr_seq_item_w, cd_intervalo_novo_p, ie_via_aplicacao_p, qt_unitaria_w, qt_dose_especial_w, nr_ocorrencias_w, ds_dose_dif_p, ie_origem_inf_w, cd_unidade_med_p, 1, qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w;
 
		if (cd_funcao_p	= 950) then 
			ds_horarios3_w	:= ds_horarios1_w||ds_horarios2_w;
		else 
			ds_horarios3_w	:= ds_horarios_p;
		end if;					
					 
		update 	Prescr_Material 
		set		cd_material = cd_material_novo_p, 
				qt_dose = qt_dose_w, 
				cd_intervalo = cd_intervalo_novo_p, 
				ds_horarios = ds_horarios3_w, 
				ds_observacao = ds_observacao_subs_p, 
				ie_via_aplicacao = ie_via_aplicacao_p, 
				cd_unidade_medida_dose = cd_unidade_med_p, 
				ie_urgencia = coalesce(ie_urgencia_p,'N'), 
				hr_dose_especial = hr_dose_especial_w, 
				qt_dose_especial = CASE WHEN qt_dose_esp_p=0 THEN  null  ELSE qt_dose_esp_p END , 
				ds_dose_diferenciada = ds_dose_dif_p, 
				hr_prim_horario = CASE WHEN ie_limpa_prim_hor_acm_w='S' THEN  CASE WHEN coalesce(ie_acm_p,coalesce(ie_acm,'N'))='S' THEN null  ELSE to_char(dt_primeiro_horario_p, 'hh24:mi') END   ELSE to_char(dt_primeiro_horario_p, 'hh24:mi') END , 
				ie_se_necessario = coalesce(ie_se_necessario_p,ie_se_necessario), 
				ie_acm = coalesce(ie_acm_p,coalesce(ie_acm,'N')), 
				ds_justificativa = ds_justificativa_p, 
				ie_dose_espec_agora = ie_dose_especial_p, 
				nr_ocorrencia	= nr_ocorrencias_w, 
				qt_unitaria	= qt_unitaria_w, 
				qt_total_dispensar = qt_dispensar_w,	 
				qt_material	= qt_material_w, 
				qt_conversao_dose = qt_conversao_dose_w 
		where	nr_sequencia	= nr_seq_item_w 
		and		nr_prescricao 	= nr_prescricao_ww;
		 
		CALL Ajustar_itens_compostos(nr_prescricao_ww, nr_seq_item_w, nm_usuario_p);		
		ds_erro_ww := consistir_prescr_material(nr_prescricao_ww, nr_seq_item_w, nm_usuario_p, cd_perfil_p, ds_erro_ww);
		 
		if (ds_erro_ww <> 125) then 
			CALL Gerar_prescr_mat_sem_dt_lib(nr_prescricao_ww, nr_seq_item_w, cd_perfil_p, 'N', nm_usuario_p, null, null);
			 
			CALL Gerar_Kit_Medic_Prescricao(cd_estabelecimento_p, nr_prescricao_ww, nr_seq_item_w, nm_usuario_p);
			 
			if (coalesce(ie_libera_prescricao_p,'S') = 'S') and (ie_verificar_prescr_w = 'N') then 
				ds_erro_w := Liberar_Prescricao(nr_prescricao_ww, nr_atendimento_p, ie_tipo_pessoa_p, cd_perfil_p, nm_usuario_p, 'S', ds_erro_w);
			end if;	
 
			if (ie_susp_anterior_p = 'S') then 
				if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_prescricao_w	<> nr_nova_prescricao_p) and (nr_seq_item_w IS NOT NULL AND nr_seq_item_w::text <> '') then 
					CALL Suspender_item_Prescricao(nr_prescricao_w,nr_seq_item_w,coalesce(cd_motivo_p,0),ds_motivo_p,'PRESCR_MATERIAL',nm_usuario_p,'S',924);
				end if;
				 
				open c01;
				loop 
				fetch c01 into 
					nr_prescricao_w, 
					nr_seq_item_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */
					if (nr_prescricao_w	<> nr_nova_prescricao_p) then 
						CALL Suspender_item_Prescricao(nr_prescricao_w,nr_seq_item_w,coalesce(cd_motivo_p,0),ds_motivo_p,'PRESCR_MATERIAL',nm_usuario_p,'S',924);	
					end if;
				end loop;
				close c01;
 
			end if;	
		end if;	
 
		ds_erro_p := ds_erro_w;	
		nr_prescricao_p := nr_prescricao_ww;
		commit;	
		end;
	end if;
	 
	end;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE vipe_ajustar_prescricao_item ( cd_estabelecimento_p bigint, nr_prescricao_p INOUT bigint, nr_atendimento_p bigint, cd_material_novo_p bigint, cd_material_p bigint, nr_seq_item_p bigint, cd_intervalo_p text, cd_intervalo_novo_p text, ie_acm_sn_p text, qt_dose_p bigint, ie_via_aplicacao_p text, nr_prescricoes_p text, dt_primeiro_horario_p timestamp, cd_unidade_med_p text, ds_horarios_p text, ie_susp_anterior_p text, ie_tipo_pessoa_p text, cd_perfil_p bigint, nm_usuario_p text, ds_erro_p INOUT text, ds_dose_dif_p text, qt_dose_esp_p bigint, ds_justificativa_p text, ds_observacao_subs_p text, hr_dose_especial_p text, ie_dose_especial_p text, ie_se_necessario_p text, ie_acm_p text, ie_urgencia_p text, nr_nova_prescricao_p bigint, ie_libera_prescricao_p text, cd_motivo_p bigint default 0, ds_motivo_p text default null, cd_funcao_p bigint DEFAULT NULL) FROM PUBLIC;

