-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_data_lote_mens ( dt_mesano_ref_p timestamp, dt_contabil_p timestamp, ds_retorno_p INOUT text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_erro_w			varchar(255);
ie_permitido_w			varchar(1);
ie_lote_futuro_w		varchar(1);
ie_contab_posterior_w		varchar(1);
dt_contabil_w			timestamp;
qt_meses_ant_w			bigint;
ie_antecipacao_geracao_w	varchar(1);


BEGIN
ds_erro_w	:= '';

/* Se data de referência do lote for maior que o mês atual + 1 então é obrigatório informar a data de contabilização */

select	(obter_valor_param_usuario(1205,13,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p))::numeric
into STRICT	qt_meses_ant_w
;

if (to_char(dt_contabil_p,'yyyy') = '1899') then
	dt_contabil_w	:= null;
else
	dt_contabil_w	:= dt_contabil_p;
end if;

/* Comentado conforme OS 562939
select	max(ie_antecipacao_geracao)
into	ie_antecipacao_geracao_w
from	pls_parametro_contabil
where	cd_estabelecimento	= cd_estabelecimento_p;

begin
select	'N'
into	ie_permitido_w
from	dual
where	trunc(dt_mesano_ref_p,'month') > trunc(add_months(sysdate,1),'month')
and		dt_contabil_w is null;
exception
	when no_data_found then
	ie_permitido_w   := 'S';
end;

if	(ie_permitido_w = 'N') and
	(nvl(ie_antecipacao_geracao_w,'N') = 'N')then
	ds_erro_w	:= 'É necessário informar a data de antecipação do lote.' || chr(13);
end if;*/
/* Data de referência não pode ser menor que 2 meses anterior a data atual */

begin
select	'N'
into STRICT	ie_lote_futuro_w

where	trunc(dt_mesano_ref_p,'month') < add_months(trunc(clock_timestamp(),'month'), -qt_meses_ant_w);
exception
	when no_data_found then
	ie_lote_futuro_w   := 'S';
end;

if (ie_lote_futuro_w = 'N') then
	ds_erro_w	:= ds_erro_w || 'A data de referência não pode ser menor que ' || to_char(add_months(trunc(clock_timestamp(),'month'), -qt_meses_ant_w),'mm/yyyy') || chr(13)||'Favor verifique o parâmetro 13!';
end if;

/* A data de contabilização não pode ser maior que mês atual + 2 */

begin
select	'N'
into STRICT	ie_contab_posterior_w

where	trunc(dt_contabil_w,'month') > trunc(add_months(clock_timestamp(),1),'month');
exception
	when no_data_found then
	ie_contab_posterior_w   := 'S';
end;

if (ie_contab_posterior_w = 'N') then
	ds_erro_w	:= ds_erro_w || 'A data de contabilização não pode ser maior que o mês ' || to_char(trunc(add_months(clock_timestamp(),1),'month'),'mm/yyyy') || chr(13);
end if;

/* A data de contabilização não pode ser menor que 2 meses anterior a data atual */

if (trunc(dt_contabil_w,'month') < add_months(trunc(clock_timestamp(),'month'), -qt_meses_ant_w)) then
	ds_erro_w	:= ds_erro_w || 'A data de contabilização não pode ser anterior ao mês ' || to_char(add_months(trunc(clock_timestamp(),'month'), -qt_meses_ant_w),'mm/yyyy') || chr(13)||'. Favor verifique o parâmetro 13!';
end if;

/* A data de contabilização não pode ser maior que a data de referência */

if (trunc(dt_contabil_w,'month') > trunc(dt_mesano_ref_p,'month')) then
	ds_erro_w	:= ds_erro_w || 'A data de contabilização não pode ser maior que o mês de referência ' || chr(13);
end if;

/* A data de contabilização não pode ser igual a data de referência */

if (trunc(dt_contabil_w,'month') = trunc(dt_mesano_ref_p,'month')) then
	ds_erro_w	:= ds_erro_w || 'A data de contabilização não pode ser igual ao mês de referência ' || chr(13);
end if;

ds_retorno_p	:= ds_erro_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_data_lote_mens ( dt_mesano_ref_p timestamp, dt_contabil_p timestamp, ds_retorno_p INOUT text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

