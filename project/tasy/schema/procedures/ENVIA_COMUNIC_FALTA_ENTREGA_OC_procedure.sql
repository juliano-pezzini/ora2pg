-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE envia_comunic_falta_entrega_oc ( nr_seq_nf_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_cgc_emitente_w		varchar(14);
nr_ordem_compra_w		bigint;
cd_estabelecimento_w		smallint;
ds_razao_social_w		pessoa_juridica.ds_razao_social%type;
ds_email_w			varchar(255);
ds_pessoa_contato_w		varchar(255);
nr_ddd_telefone_w		varchar(3);
nr_telefone_w			varchar(15);
cd_material_w			integer;
ds_material_w			varchar(255);
qt_prevista_entrega_w		double precision;
qt_real_entrega_w		double precision;
cd_setor_atendimento_w		bigint;
nr_sequencia_w			bigint;
cd_perfil_w			bigint;
ie_ci_lida_w			varchar(1);
nm_usuario_destino_w		varchar(255);
ds_titulo_w			varchar(80);
nr_nota_fiscal_w		varchar(255);
nr_seq_comunic_w		bigint;
nr_seq_classif_w		bigint;
qt_regra_usuario_w		bigint;
ds_lista_materiais_w		text;
ds_comunic_w			text;
dt_prev_entrega_w		timestamp;
dt_real_entrega_w		timestamp;
/* Se tiver setor na regra, envia CI para os setores */

ds_setor_adicional_w            varchar(2000) := '';
/* Campos da regra Usuario da Regra */

cd_setor_regra_usuario_w	integer;

c01 CURSOR FOR
SELECT	distinct nr_ordem_compra
from (	SELECT	nr_ordem_compra
	from	nota_fiscal
	where	nr_sequencia = nr_seq_nf_p
	and	(nr_ordem_compra IS NOT NULL AND nr_ordem_compra::text <> '')
	
union

	select	nr_ordem_compra
	from	nota_fiscal_item
	where	nr_sequencia = nr_seq_nf_p
	and	(nr_ordem_compra IS NOT NULL AND nr_ordem_compra::text <> '')) alias2;

c02 CURSOR FOR
SELECT	a.cd_material,
	substr(obter_desc_material(a.cd_material),1,255),
	b.qt_prevista_entrega,
	coalesce(b.qt_real_entrega,0),
	trunc(b.dt_prevista_entrega,'dd'),	
	trunc(clock_timestamp(),'dd')
from	ordem_compra_item a,
	ordem_compra_item_entrega b
where	a.nr_ordem_compra = b.nr_ordem_compra
and	a.nr_item_oci = b.nr_item_oci
and	a.nr_ordem_compra = nr_ordem_compra_w
and	coalesce(b.dt_cancelamento::text, '') = ''
and	((coalesce(b.qt_real_entrega,0) < b.qt_prevista_entrega) or (trunc(b.dt_prevista_entrega,'dd') < trunc(clock_timestamp(),'dd')))
order by a.nr_item_oci;

C03 CURSOR FOR
SELECT	b.nr_sequencia,
	b.cd_perfil
from	regra_envio_comunic_compra a,
	regra_envio_comunic_evento b
where	a.nr_sequencia = b.nr_seq_regra
and	a.cd_funcao = 917
and	b.cd_evento = 37
and	b.ie_situacao = 'A'
and	a.cd_estabelecimento = cd_estabelecimento_w
and	((cd_setor_atendimento_w IS NOT NULL AND cd_setor_atendimento_w::text <> '' AND b.cd_setor_destino = cd_setor_atendimento_w) or
	((coalesce(cd_setor_atendimento_w::text, '') = '') and (coalesce(b.cd_setor_destino::text, '') = '')) or (coalesce(b.cd_setor_destino::text, '') = ''))
and	substr(obter_se_envia_ci_regra_compra(b.nr_sequencia,nr_seq_nf_p,'NF',obter_perfil_ativo,nm_usuario_p,null),1,1) = 'S';

c05 CURSOR FOR
SELECT	coalesce(a.cd_setor_atendimento,0) cd_setor_atendimento
from	regra_envio_comunic_usu a
where	a.nr_seq_evento = nr_sequencia_w;


BEGIN

select	coalesce(cd_cgc_emitente,'X'),
	cd_estabelecimento,
	cd_setor_digitacao,
	nr_nota_fiscal
into STRICT	cd_cgc_emitente_w,
	cd_estabelecimento_w,
	cd_setor_atendimento_w,
	nr_nota_fiscal_w
from	nota_fiscal
where	nr_sequencia = nr_seq_nf_p;

if (cd_cgc_emitente_w <> 'X') then
	begin
	select	p.ds_razao_social,
		e.ds_email,
		e.nm_pessoa_contato,
		p.nr_ddd_telefone,
		p.nr_telefone	
	into STRICT	ds_razao_social_w,
		ds_email_w,
		ds_pessoa_contato_w,
		nr_ddd_telefone_w,
		nr_telefone_w
	from	pessoa_juridica_estab e,
		pessoa_juridica p
	where	p.cd_cgc = e.cd_cgc
	and	p.cd_cgc = cd_cgc_emitente_w
	and	e.cd_estabelecimento = cd_estabelecimento_w;
	exception when others then
		ds_razao_social_w := '';
		ds_email_w := '';
		ds_pessoa_contato_w := '';
		nr_ddd_telefone_w := '';
		nr_telefone_w := '';
	end;
end if;

open C01;
loop
fetch C01 into
	nr_ordem_compra_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	open C02;
	loop
	fetch C02 into	
		cd_material_w,
		ds_material_w,
		qt_prevista_entrega_w,
		qt_real_entrega_w,
		dt_prev_entrega_w,
		dt_real_entrega_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin	
		ds_lista_materiais_w := substr(ds_lista_materiais_w	|| cd_material_w || ' - ' || ds_material_w	||
					' - '||obter_desc_expressao(646487) || ': '	|| campo_mascara_virgula(qt_prevista_entrega_w)	|| 
					' - '||obter_desc_expressao(335685) || ': '	|| campo_mascara_virgula(qt_real_entrega_w)	|| 
					' - '||obter_desc_expressao(645628) || ': '	|| dt_prev_entrega_w	|| 
					' - '||obter_desc_expressao(731615) || ': '	|| dt_real_entrega_w	|| chr(13) || chr(10),1,32000);
		end;
	end loop;
	close C02;
	end;
end loop;
close C01;

if (ds_lista_materiais_w IS NOT NULL AND ds_lista_materiais_w::text <> '') then

	open C03;
	loop
	fetch C03 into	
		nr_sequencia_w,
		cd_perfil_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		
		select	count(*)
		into STRICT	qt_regra_usuario_w
		from	regra_envio_comunic_compra a,
			regra_envio_comunic_evento b,
			regra_envio_comunic_usu c
		where	a.nr_sequencia = b.nr_seq_regra
		and	b.nr_sequencia = c.nr_seq_evento
		and	b.nr_sequencia = nr_sequencia_w;

		select	coalesce(ie_ci_lida,'N')
		into STRICT	ie_ci_lida_w
		from 	regra_envio_comunic_evento
		where 	nr_sequencia = nr_sequencia_w;

		if (qt_regra_usuario_w > 0) then
			open C05;
			loop
			fetch C05 into	
				cd_setor_regra_usuario_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin
				if (cd_setor_regra_usuario_w <> 0) and (obter_se_contido_char(cd_setor_regra_usuario_w, ds_setor_adicional_w) = 'N') then
					ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',',1,2000);
				end if;
				end;
			end loop;
			close C05;

			nm_usuario_destino_w	:= '';
			nm_usuario_destino_w	:= obter_usuarios_comunic_compras(nr_ordem_compra_w,null,37,nr_sequencia_w,'');
			ds_titulo_w		:= '';
			ds_comunic_w		:= '';	

			select	substr(ds_titulo,1,80),
				ds_comunicacao
			into STRICT	ds_titulo_w,
				ds_comunic_w
			from	regra_envio_comunic_evento
			where	nr_sequencia = nr_sequencia_w;

			ds_comunic_w	:= replace(
					replace(
					replace(
					replace(
					replace(
					replace(
					replace(
					replace(
					replace(ds_comunic_w,
						'@nota', nr_nota_fiscal_w),
						'@ordem', nr_ordem_compra_w),
						'@cd_cgc_fornec', cd_cgc_emitente_w),
						'@fornecedor', ds_razao_social_w),
						'@lista_materiais', ds_lista_materiais_w),
						'@e-mail', ds_email_w),
						'@ddd', nr_ddd_telefone_w),
						'@fone', nr_telefone_w),
						'@contato', ds_pessoa_contato_w);

			if (nm_usuario_destino_w IS NOT NULL AND nm_usuario_destino_w::text <> '') then

				select	nextval('comunic_interna_seq')
				into STRICT	nr_seq_comunic_w
				;

				select	obter_classif_comunic('F')
				into STRICT	nr_seq_classif_w
				;	

				if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then
					cd_perfil_w := cd_perfil_w ||',';
				end if;

				insert	into comunic_interna(
					cd_estab_destino,
					dt_comunicado,
					ds_titulo,
					ds_comunicado,
					nm_usuario,
					dt_atualizacao,
					ie_geral,
					nm_usuario_destino,
					nr_sequencia,
					ie_gerencial,
					nr_seq_classif,
					dt_liberacao,
					ds_perfil_adicional,
					ds_setor_adicional)
				values (	cd_estabelecimento_w,
					clock_timestamp(),
					ds_titulo_w,
					ds_comunic_w,
					nm_usuario_p,
					clock_timestamp(),
					'N',
					nm_usuario_destino_w,
					nr_seq_comunic_w,
					'N',
					nr_seq_classif_w,
					clock_timestamp(),
					cd_perfil_w,
					ds_setor_adicional_w);

				if (ie_ci_lida_w = 'S') then
					insert into comunic_interna_lida(
						nr_sequencia,
						nm_usuario,
						dt_atualizacao)
					values (	nr_seq_comunic_w,
						nm_usuario_p,
						clock_timestamp());
				end if;
			end if;
		end if;
		end;
	end loop;
	close C03;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE envia_comunic_falta_entrega_oc ( nr_seq_nf_p bigint, nm_usuario_p text) FROM PUBLIC;

