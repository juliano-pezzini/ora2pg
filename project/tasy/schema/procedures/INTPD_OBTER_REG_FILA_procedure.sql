-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function intpd_obter_reg_fila as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE intpd_obter_reg_fila (( ie_evento_p text, nr_seq_evento_sistema_p intpd_fila_transmissao.nr_seq_evento_sistema%type, nr_seq_documento_p intpd_fila_transmissao.nr_seq_documento%type, nr_doc_externo_p intpd_fila_transmissao.nr_doc_externo%type, nr_seq_item_documento_p intpd_fila_transmissao.nr_seq_item_documento%type, ds_parametros_adic_p intpd_fila_transmissao.ds_parametros_adic%type, ie_operacao_p intpd_fila_transmissao.ie_operacao%type, nr_seq_fila_p out intpd_fila_transmissao.nr_sequencia%type, nr_seq_log_id_p out intpd_id.nr_sequencia%type) is nr_seq_fila_w intpd_fila_transmissao.nr_sequencia%type) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

	v_ret	bigint;
BEGIN
	v_query := 'SELECT * FROM intpd_obter_reg_fila_atx ( ' || quote_nullable(ie_evento_p) || ',' || quote_nullable(nr_seq_evento_sistema_p) || ',' || quote_nullable(nr_seq_documento_p) || ',' || quote_nullable(nr_doc_externo_p) || ',' || quote_nullable(nr_seq_item_documento_p) || ',' || quote_nullable(ds_parametros_adic_p) || ',' || quote_nullable(ie_operacao_p) || ',' || quote_nullable(nr_seq_fila_p) || ',' || quote_nullable(nr_seq_log_id_p) || ' )';
	SELECT * INTO v_ret FROM dblink(v_conn_str, v_query) AS p (ret bigint);
	RETURN v_ret;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE intpd_obter_reg_fila_atx (( ie_evento_p text, nr_seq_evento_sistema_p intpd_fila_transmissao.nr_seq_evento_sistema%type, nr_seq_documento_p intpd_fila_transmissao.nr_seq_documento%type, nr_doc_externo_p intpd_fila_transmissao.nr_doc_externo%type, nr_seq_item_documento_p intpd_fila_transmissao.nr_seq_item_documento%type, ds_parametros_adic_p intpd_fila_transmissao.ds_parametros_adic%type, ie_operacao_p intpd_fila_transmissao.ie_operacao%type, nr_seq_fila_p out intpd_fila_transmissao.nr_sequencia%type, nr_seq_log_id_p out intpd_id.nr_sequencia%type) is nr_seq_fila_w intpd_fila_transmissao.nr_sequencia%type) AS $body$
DECLARE

		
	nr_seq_documento_w  bigint;
	nr_seq_fila_w       bigint;
BEGIN
	if (ie_evento_p = '12') then
		begin
		select	nr_sequencia
		into STRICT	nr_seq_fila_w
		from	pf_codigo_externo
		where	ie_tipo_codigo_externo 	in ('ISH','ISHMED')
		and	cd_pessoa_fisica	= nr_seq_documento_p
		and	nm_usuario_nrec		<> 'ISH'  LIMIT 1;
		exception
		when others then
			nr_seq_fila_w := null;
		end;
	elsif (ie_evento_p like '%106%') then
		begin --Verifica se o episodio possui alguma movimentacao integrada, com regra de conversao
		select	b.nr_seq_episodio
		into STRICT	nr_seq_fila_w
		from	atend_paciente_unidade a,
			atendimento_paciente b
		where	a.nr_atendimento	= b.nr_atendimento
		and	b.nr_seq_episodio	= nr_seq_documento_p
		and	a.nr_seq_interno	= Obter_Atepacu_paciente(b.nr_atendimento,'P')
		and	exists (SELECT	1
			from	conversao_meio_externo b
			where	b.nr_seq_regra	= nr_seq_regra_conv_p
			and	b.nm_tabela	= 'ATEND_PACIENTE_UNIDADE'
			and	b.cd_interno like '%' || a.nr_seq_interno || '%'
			and	somente_numero(b.cd_interno)	= a.nr_seq_interno)  LIMIT 1;
		exception
		when others then
			nr_seq_fila_w	:= null;
		end;	
	elsif (ie_evento_p like '%120%') or (ie_evento_p like '%127%') then			
		begin --Verifica se o atendimento possui alguma movimentacao integrada, com regra de conversao
		select	a.nr_seq_interno
		into STRICT	nr_seq_fila_w
		from	atend_paciente_unidade a
		where	a.nr_atendimento	= nr_seq_documento_p
		and	a.nr_seq_interno	= Obter_Atepacu_paciente(nr_seq_documento_p,'P')
		and	exists (SELECT	1
			from	conversao_meio_externo b
			where	b.nr_seq_regra	= nr_seq_regra_conv_p
			and	b.nm_tabela	= 'ATEND_PACIENTE_UNIDADE'
			and	b.cd_interno like '%' || a.nr_seq_interno || '%'
			and	somente_numero(b.cd_interno)	= a.nr_seq_interno)  LIMIT 1;
		exception
		when others then
			nr_seq_fila_w	:= null;
		end;
	elsif (ie_evento_p like '%118%') then
		begin
		select	a.nr_seq_interno
		into STRICT	nr_seq_fila_w
		from	atend_paciente_unidade a
		where	a.nr_seq_interno	= nr_seq_documento_p
		and	exists (SELECT	1
			from	conversao_meio_externo b
			where	b.nr_seq_regra	= nr_seq_regra_conv_p
			and	b.nm_tabela	= 'ATEND_PACIENTE_UNIDADE'
			and	b.cd_interno like '%' || a.nr_seq_interno || '%'
			and	somente_numero(b.cd_interno)	= a.nr_seq_interno)  LIMIT 1;
		exception
		when others then
			nr_seq_fila_w := null;
		end;
	elsif (ie_evento_p like '%114%') then
		begin
		select	a.nr_seq_interno
		into STRICT	nr_seq_fila_w
		from	atend_paciente_unidade a
		where	a.nr_atendimento	= nr_seq_documento_p
		and	exists (SELECT	1
			from	conversao_meio_externo b
			where	b.nr_seq_regra	= nr_seq_regra_conv_p
			and	b.nm_tabela	= 'ATEND_PACIENTE_UNIDADE'
			and	b.cd_interno like '%' || a.nr_seq_interno || '%'
			and	somente_numero(b.cd_interno)	= a.nr_seq_interno
			and	substr(b.cd_interno,1,1)	= 'D')  LIMIT 1;
		exception
		when others then
			nr_seq_fila_w := null;
		end;			
	end if;
		
	return;

	end;

begin

begin
select	nr_seq_sistema
into STRICT	nr_seq_sistema_w
from	intpd_eventos_sistema
where	nr_sequencia = nr_seq_evento_sistema_p;
exception
when others then
	nr_seq_sistema_w	:=	null;
end;

open C00;
loop
fetch C00 into
	ie_evento_w;
EXIT WHEN NOT FOUND; /* apply on C00 */

	open c01;
	loop
	fetch c01 into	
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin		
		if (coalesce(c01_w.ds_parametros_adic, 'NULL') = coalesce(ds_parametros_adic_p,'NULL')) and (coalesce(c01_w.nr_seq_item_documento, 0) = coalesce(nr_seq_item_documento_p, 0)) then
			nr_seq_fila_w	:=	c01_w.nr_sequencia;
		end if;
		end;
	end loop;
	close c01;

end loop;
close C00;

if (coalesce(nr_seq_fila_w::text, '') = '') then
	open C00;
	loop
	fetch C00 into
		ie_evento_w;
	EXIT WHEN NOT FOUND; /* apply on C00 */
	
		open c02;
		loop
		fetch c02 into	
			c02_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin		
			if (coalesce(c02_w.ds_parametros_adic, 'NULL') = coalesce(ds_parametros_adic_p,'NULL')) and (coalesce(c02_w.nr_seq_item_documento, 0) = coalesce(nr_seq_item_documento_p, 0)) then
				nr_seq_id_w	:=	c02_w.nr_sequencia;
			end if;
			end;
		end loop;
		close c02;
	
	end loop;
	close C00;
end if;

if (coalesce(nr_seq_fila_w::text, '') = '') and (coalesce(nr_seq_id_w::text, '') = '') then

	begin
	select	nr_seq_projeto_xml,
		nr_seq_regra_conv
	into STRICT	nr_seq_projeto_xml_w,
		nr_seq_regra_conv_w
	from	intpd_eventos_sistema
	where	nr_sequencia	= nr_seq_evento_sistema_p  LIMIT 1;
	exception
	when others then
		nr_seq_projeto_xml_w 	:= null;
		nr_seq_regra_conv_w	:= null;
	end;
	
	if (substr(obter_se_integracao_ish( nr_seq_projeto_xml_w ),1,1) = 'S') then
		nr_seq_fila_w	:= get_fila_case(nr_seq_documento_p, nr_seq_regra_conv_w, ie_evento_p);		
	end if;
end if;

nr_seq_fila_p	:=	nr_seq_fila_w;
nr_seq_log_id_p	:=	nr_seq_id_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intpd_obter_reg_fila (( ie_evento_p text, nr_seq_evento_sistema_p intpd_fila_transmissao.nr_seq_evento_sistema%type, nr_seq_documento_p intpd_fila_transmissao.nr_seq_documento%type, nr_doc_externo_p intpd_fila_transmissao.nr_doc_externo%type, nr_seq_item_documento_p intpd_fila_transmissao.nr_seq_item_documento%type, ds_parametros_adic_p intpd_fila_transmissao.ds_parametros_adic%type, ie_operacao_p intpd_fila_transmissao.ie_operacao%type, nr_seq_fila_p out intpd_fila_transmissao.nr_sequencia%type, nr_seq_log_id_p out intpd_id.nr_sequencia%type) is nr_seq_fila_w intpd_fila_transmissao.nr_sequencia%type) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE intpd_obter_reg_fila_atx (( ie_evento_p text, nr_seq_evento_sistema_p intpd_fila_transmissao.nr_seq_evento_sistema%type, nr_seq_documento_p intpd_fila_transmissao.nr_seq_documento%type, nr_doc_externo_p intpd_fila_transmissao.nr_doc_externo%type, nr_seq_item_documento_p intpd_fila_transmissao.nr_seq_item_documento%type, ds_parametros_adic_p intpd_fila_transmissao.ds_parametros_adic%type, ie_operacao_p intpd_fila_transmissao.ie_operacao%type, nr_seq_fila_p out intpd_fila_transmissao.nr_sequencia%type, nr_seq_log_id_p out intpd_id.nr_sequencia%type) is nr_seq_fila_w intpd_fila_transmissao.nr_sequencia%type) FROM PUBLIC;

