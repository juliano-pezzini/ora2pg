-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_liberar_hemocomp_isbt ( ds_codigo_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

ds_codigo_w           		varchar(2000);
ds_structure_w        		varchar(255);
ie_contador_w         		bigint := 0;
ie_pos_igual_w        		smallint;
ie_pos_ecom_w         		smallint;
ie_pos_menor_w        		smallint;
ds_referencia_w       		varchar(255);
tam_lista_w           		bigint;
ds_001_w              		varchar(255);
ds_002_w              		varchar(255);
ds_003_w              		varchar(255);
ds_004_w              		varchar(255);
ds_005_w              		varchar(255);
ds_006_w              		varchar(255);
ds_007_w              		varchar(255);
ds_010_w              		varchar(255);
ds_012_w              		varchar(255);
ie_possui_hemocomp_w  		varchar(1);
ie_possui_sorologia_w 		varchar(1);
ie_possui_exame_pendente_w 	varchar(1);
nr_seq_producao_w     		bigint;
nr_seq_doacao_w     		bigint;


BEGIN 

if (ds_codigo_p IS NOT NULL AND ds_codigo_p::text <> '') then 
	ds_codigo_w := ds_codigo_p;

	while (ds_codigo_w IS NOT NULL AND ds_codigo_w::text <> '') and ie_contador_w < 200 loop 
	begin 
	tam_lista_w := Length(ds_codigo_w);

        ie_pos_igual_w := position(Chr(61) in ' ' || Substr(ds_codigo_w, 2, tam_lista_w));

        ie_pos_ecom_w := position(Chr(38) in ' ' || Substr(ds_codigo_w, 2, tam_lista_w));

        if (ie_pos_igual_w > ie_pos_ecom_w AND ie_pos_ecom_w <> 0) or (ie_pos_igual_w = 0) THEN 
			ie_pos_menor_w := ie_pos_ecom_w;
        else 
			ie_pos_menor_w := ie_pos_igual_w;
        end if;

        if (ie_pos_menor_w <> 0) then 
		ds_structure_w := Substr(ds_codigo_w, 1, ( ie_pos_menor_w ) - 1);
		ds_codigo_w := Substr(ds_codigo_w, ( ie_pos_menor_w ), tam_lista_w);
        else 
		ds_structure_w := ds_codigo_w;
		ds_codigo_w := '';
        end if;

		select	max(substr(obter_ref_isbt_codigo(ds_structure_w), 1, 3)) 
		into STRICT  	ds_referencia_w 
		;

        if ( ds_referencia_w = '001' ) then 
		ds_001_w := Replace(ds_structure_w, '=', '');
        end if;

        if ( ds_referencia_w = '002' ) then 
		ds_002_w := Replace(ds_structure_w, '=%', '');
        end if;

	if ( ds_referencia_w = '003' ) then 
		ds_003_w := Replace(ds_structure_w, '=<', '');
        end if;

        if ( ds_referencia_w = '004' ) then 
		ds_004_w := Replace(ds_structure_w, '=>', '');
        end if;

        if ( ds_referencia_w = '005' ) then 
		ds_005_w := Replace(ds_structure_w, '&>', '');
        end if;

        if ( ds_referencia_w = '006' ) then 
		ds_006_w := Replace(ds_structure_w, '=*', '');
        end if;

        if ( ds_referencia_w = '007' ) then 
		ds_007_w := Replace(ds_structure_w, '&*', '');
        end if;
	
	if ( ds_referencia_w = '010' ) then 
		ds_010_w := Replace(ds_structure_w, '&(', '');
        end if;
        
        if ( ds_referencia_w = '012' ) then 
		ds_012_w := Replace(ds_structure_w, '=\', '');
        end if;

        ie_contador_w := ie_contador_w + 1;
    end;
	end loop;
end if;

if (ds_001_w IS NOT NULL AND ds_001_w::text <> '') and (ds_003_w IS NOT NULL AND ds_003_w::text <> '') and (ds_002_w IS NOT NULL AND ds_002_w::text <> '') and 
	(((ds_004_w IS NOT NULL AND ds_004_w::text <> '') or (ds_005_w IS NOT NULL AND ds_005_w::text <> '')) and ((ds_006_w IS NOT NULL AND ds_006_w::text <> '') or (ds_007_w IS NOT NULL AND ds_007_w::text <> ''))) then 
	
	select	San_consiste_hemocomp_isbt(ds_001_w, ds_003_w, cd_estabelecimento_p, 
		nm_usuario_p, ds_002_w, ds_004_w, ds_005_w, ds_006_w, ds_007_w, ds_010_w, ds_012_w) 
	into STRICT   	nr_seq_producao_w 
	;

	if (coalesce(nr_seq_producao_w::text, '') = '') then 
		/*Hemocomponente nao encontrado,  Verifique se esta disponivel ou nao esta vencido.*/
 
		CALL wheb_mensagem_pck.Exibir_mensagem_abort(84349);
	else 
		select  max(nr_seq_doacao)
		into STRICT 	nr_seq_doacao_w
		from 	san_producao 
		where 	nr_sequencia = nr_seq_producao_w;
		
		select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT 	ie_possui_exame_pendente_w
		FROM	san_doacao
		WHERE 	nr_sequencia = nr_seq_doacao_w
		AND	NOT EXISTS ( 	SELECT 1	
					FROM	san_exame_lote a,
						san_exame_realizado b,
						san_exame c
					WHERE	a.nr_sequencia 	= b.nr_seq_exame_lote
					AND	c.nr_sequencia	= b.nr_seq_exame
					AND	a.nr_seq_doacao	= nr_seq_doacao_w
					AND 	((san_obter_se_exame_auxiliar(a.nr_sequencia,b.nr_seq_exame,1,'S') = 'S') OR (san_obter_se_exame_auxiliar(a.nr_sequencia,b.nr_seq_exame,1,'O') = 'S')) 
					AND	coalesce(b.dt_liberacao::text, '') = '');
					
		if (ie_possui_exame_pendente_w <> 'S') then
			--Nao e possivel liberar o hemocomponente, pois ha exame pendente de liberacao.
			CALL wheb_mensagem_pck.Exibir_mensagem_abort(1107051);
		end if;
					
		select	CASE WHEN Count(*)=0 THEN 'S'  ELSE 'N' END
		into STRICT   	ie_possui_sorologia_w 
		from   	san_exame_lote a, 
			san_exame_realizado b, 
			san_exame c 
		where  a.nr_sequencia = b.nr_seq_exame_lote 
		and c.nr_sequencia = b.nr_seq_exame 
		and a.nr_seq_doacao = nr_seq_doacao_w
		and (San_obter_destino_exame(b.nr_seq_exame,3) = 'S' or San_obter_destino_exame(b.nr_seq_exame, 0) = 'S' ) 
		and (Upper(b.ds_resultado) IN ('POSITIVO', 'REAGENTE', 'INDETERMINADO') or san_se_bloqueia_exames_valores(nr_seq_doacao_w) = 'S') 
		and (b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') 
		and coalesce(c.ie_fator_rh,'N') = 'N' 
		and coalesce(c.ie_consiste_result_pos,'S') = 'S' 
		and not exists (SELECT	1 
				from  	san_parametro p 
				where 	p.cd_estabelecimento = cd_estabelecimento_p
				and 	p.nr_seq_exame_rh = b.nr_seq_exame) 
		and not exists ( select 1 
				from   san_doacao d 
				where  d.nr_sequencia = a.nr_seq_doacao 
				and coalesce(ie_apto_amostra, 'N') = 'S') 
		and a.nr_sequencia = 	(select max(nr_sequencia) 
								from   san_exame_lote 
								where  nr_seq_doacao = a.nr_seq_doacao);

		if (ie_possui_sorologia_w <> 'S') then 
			--Nao e possivel liberar o hemocomponente, pois ha exame com sorologia positiva.
			CALL wheb_mensagem_pck.Exibir_mensagem_abort(1091568);
		end if;

		update	san_producao 
		set    	dt_liberacao = clock_timestamp(), 
			nm_usuario_lib = nm_usuario_p 
		where  	nr_sequencia = nr_seq_producao_w;
	end if;
else 
	--E necessario que o numero de identificacao e o codigo de produto ISBT sejam lidos por codigo de barras.
	CALL wheb_mensagem_pck.Exibir_mensagem_abort(1038446);
end if;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_liberar_hemocomp_isbt ( ds_codigo_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

