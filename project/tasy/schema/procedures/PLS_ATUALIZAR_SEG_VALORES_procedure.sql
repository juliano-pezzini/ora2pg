-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_seg_valores ( ie_totalizar_p text, vl_resultado_p bigint, ie_tipo_valor_p text, nr_seq_segurado_p bigint, nr_seq_pagador_p bigint, nr_seq_contrato_p bigint, nr_seq_plano_p bigint, ie_tipo_contratacao_p text, ie_tipo_beneficiario_p text, nr_seq_faixa_etaria_p bigint, dt_referencia_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ie_tipo_vinculo_operadora_p text, nr_seq_intercambio_p bigint, ie_regulamentacao_p pls_plano.ie_regulamentacao%type, ie_preco_p pls_plano.ie_preco%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
vl_resultado_w			double precision;
qt_registro_w			bigint;
nr_seq_grupo_contrato_w		bigint := null;
nr_seq_faixa_etaria_w		bigint;
nr_seq_grupo_intercambio_w	bigint := null;


BEGIN
vl_resultado_w	:= coalesce(vl_resultado_p, 0);

if (ie_totalizar_p = 'N') and (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then
	select	count(1)
	into STRICT	qt_registro_w
	
	where	exists (SELECT	1
			from	pls_segurado_valores	a
			where	a.dt_mesano_referencia	= dt_referencia_p
			and	nr_seq_segurado		= nr_seq_segurado_p
			and	nr_seq_pagador		= nr_seq_pagador_p
			and	nr_seq_contrato		= nr_seq_contrato_p
			and	nr_seq_plano		= nr_seq_plano_p);

	if (nr_seq_contrato_p IS NOT NULL AND nr_seq_contrato_p::text <> '') then
		select	max(y.nr_sequencia)
		into STRICT	nr_seq_grupo_contrato_w
		from	pls_grupo_contrato	y,
			pls_contrato_grupo	z
		where	z.nr_seq_grupo		= y.nr_sequencia
		and	z.nr_seq_contrato	= nr_seq_contrato_p;
	elsif (nr_seq_intercambio_p IS NOT NULL AND nr_seq_intercambio_p::text <> '') then
		select 	max(nr_seq_grupo_intercambio)
		into STRICT	nr_seq_grupo_intercambio_w
		from 	pls_intercambio
		where 	nr_sequencia	= nr_seq_intercambio_p;
	end if;


	select	max(b.nr_sequencia)
	into STRICT	nr_seq_faixa_etaria_w
	from	pls_tabela_preco	a,
		pls_faixa_etaria	b,
		pls_segurado		c
	where	b.nr_sequencia	= a.nr_seq_faixa_etaria
	and	a.nr_sequencia	= c.nr_seq_tabela
	and	c.nr_sequencia	= nr_seq_segurado_p;

	if (qt_registro_w = 0) then
		insert into pls_segurado_valores(nr_sequencia,
			nr_seq_segurado,
			dt_mesano_referencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_pagador,
			nr_seq_contrato,
			nr_seq_plano,
			nr_seq_grupo_contrato,
			ie_tipo_contratacao,
			ie_tipo_segurado,
			nr_seq_faixa_etaria,
			cd_estabelecimento,
			ie_tipo_vinculo_operadora,
			--
			vl_mensalidade,
			vl_despesas_naoassist,
			vl_encargos,
			vl_provisoes_tecnica,
			vl_contas_medicas,
			vl_reembolso,
			vl_comissao_vendas,
			vl_ressarcimento_sus,
			vl_coparticipacao,
			vl_total_receita,
			vl_total_despesa,
			vl_total_assist,
			vl_resultado,
			pr_sinistralidade,
			pr_resultado,
			nr_seq_intercambio,
			nr_seq_grupo_intercambio,
			ie_regulamentacao,
			ie_preco)
		values (nextval('pls_segurado_valores_seq'),
			nr_seq_segurado_p,
			dt_referencia_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_pagador_p,
			nr_seq_contrato_p,
			nr_seq_plano_p,
			nr_seq_grupo_contrato_w,
			ie_tipo_contratacao_p,
			ie_tipo_beneficiario_p,
			nr_seq_faixa_etaria_w,
			cd_estabelecimento_p,
			ie_tipo_vinculo_operadora_p,
			--
			CASE WHEN ie_tipo_valor_p=1 THEN  vl_resultado_w  ELSE 0 END ,
			CASE WHEN ie_tipo_valor_p=5 THEN  vl_resultado_w  ELSE 0 END ,
			CASE WHEN ie_tipo_valor_p=6 THEN  vl_resultado_w  ELSE 0 END ,
			CASE WHEN ie_tipo_valor_p=9 THEN  vl_resultado_w  ELSE 0 END ,
			CASE WHEN ie_tipo_valor_p=2 THEN  vl_resultado_w  ELSE 0 END ,
			CASE WHEN ie_tipo_valor_p=3 THEN  vl_resultado_w  ELSE 0 END ,
			CASE WHEN ie_tipo_valor_p=4 THEN  vl_resultado_w  ELSE 0 END ,
			CASE WHEN ie_tipo_valor_p=7 THEN  vl_resultado_w  ELSE 0 END ,
			CASE WHEN ie_tipo_valor_p=11 THEN  vl_resultado_w  ELSE 0 END ,
			0,
			0,
			0,
			0,
			0,
			0,
			nr_seq_intercambio_p,
			nr_seq_grupo_intercambio_w,
			ie_regulamentacao_p,
			ie_preco_p);
	else
		begin

		--Alterado para diferenciar o update para intercâmbio ou contrato para utilizar o índice PLSSEVA_I1 ou PLSSEVA_I2
		if (coalesce(nr_seq_intercambio_p::text, '') = '') then

			update	pls_segurado_valores	a
			set	vl_mensalidade			= coalesce(vl_mensalidade, 0) + CASE WHEN ie_tipo_valor_p=1 THEN  vl_resultado_w  ELSE 0 END ,
				vl_despesas_naoassist		= coalesce(vl_despesas_naoassist, 0) + CASE WHEN ie_tipo_valor_p=5 THEN  vl_resultado_w  ELSE 0 END ,
				vl_encargos			= coalesce(vl_encargos, 0) + CASE WHEN ie_tipo_valor_p=6 THEN  vl_resultado_w  ELSE 0 END ,
				vl_provisoes_tecnica		= coalesce(vl_provisoes_tecnica, 0) + CASE WHEN ie_tipo_valor_p=9 THEN  vl_resultado_w  ELSE 0 END ,
				vl_contas_medicas		= coalesce(vl_contas_medicas, 0) + CASE WHEN ie_tipo_valor_p=2 THEN  vl_resultado_w  ELSE 0 END ,
				vl_reembolso			= coalesce(vl_reembolso, 0) + CASE WHEN ie_tipo_valor_p=3 THEN  vl_resultado_w  ELSE 0 END ,
				vl_comissao_vendas		= coalesce(vl_comissao_vendas, 0) + CASE WHEN ie_tipo_valor_p=4 THEN  vl_resultado_w  ELSE 0 END ,
				vl_ressarcimento_sus		= coalesce(vl_ressarcimento_sus, 0) + CASE WHEN ie_tipo_valor_p=7 THEN  vl_resultado_w  ELSE 0 END ,
				vl_coparticipacao		= coalesce(vl_coparticipacao, 0) + CASE WHEN ie_tipo_valor_p=11 THEN  vl_resultado_w  ELSE 0 END ,
				nr_seq_grupo_contrato		= nr_seq_grupo_contrato_w,
				nr_seq_grupo_intercambio 	= nr_seq_grupo_intercambio_w
			where	a.dt_mesano_referencia		= dt_referencia_p
			and	nr_seq_segurado			= nr_seq_segurado_p
			and	nr_seq_pagador			= nr_seq_pagador_p
			and     nr_seq_contrato			= nr_seq_contrato_p
			and	nr_seq_plano			= nr_seq_plano_p;

		else
			update	pls_segurado_valores	a
			set	vl_mensalidade			= coalesce(vl_mensalidade, 0) + CASE WHEN ie_tipo_valor_p=1 THEN  vl_resultado_w  ELSE 0 END ,
				vl_despesas_naoassist		= coalesce(vl_despesas_naoassist, 0) + CASE WHEN ie_tipo_valor_p=5 THEN  vl_resultado_w  ELSE 0 END ,
				vl_encargos			= coalesce(vl_encargos, 0) + CASE WHEN ie_tipo_valor_p=6 THEN  vl_resultado_w  ELSE 0 END ,
				vl_provisoes_tecnica		= coalesce(vl_provisoes_tecnica, 0) + CASE WHEN ie_tipo_valor_p=9 THEN  vl_resultado_w  ELSE 0 END ,
				vl_contas_medicas		= coalesce(vl_contas_medicas, 0) + CASE WHEN ie_tipo_valor_p=2 THEN  vl_resultado_w  ELSE 0 END ,
				vl_reembolso			= coalesce(vl_reembolso, 0) + CASE WHEN ie_tipo_valor_p=3 THEN  vl_resultado_w  ELSE 0 END ,
				vl_comissao_vendas		= coalesce(vl_comissao_vendas, 0) + CASE WHEN ie_tipo_valor_p=4 THEN  vl_resultado_w  ELSE 0 END ,
				vl_ressarcimento_sus		= coalesce(vl_ressarcimento_sus, 0) + CASE WHEN ie_tipo_valor_p=7 THEN  vl_resultado_w  ELSE 0 END ,
				vl_coparticipacao		= coalesce(vl_coparticipacao, 0) + CASE WHEN ie_tipo_valor_p=11 THEN  vl_resultado_w  ELSE 0 END ,
				nr_seq_grupo_contrato		= nr_seq_grupo_contrato_w,
				nr_seq_grupo_intercambio 	= nr_seq_grupo_intercambio_w
			where	a.dt_mesano_referencia		= dt_referencia_p
			and	nr_seq_segurado			= nr_seq_segurado_p
			and	nr_seq_pagador			= nr_seq_pagador_p
			and	nr_seq_intercambio		= nr_seq_intercambio_p
			and	nr_seq_plano			= nr_seq_plano_p;

		end if;


		end;
	end if;
else
	update	pls_segurado_valores	a
	set	vl_total_receita	= coalesce(vl_mensalidade, 0 ) + coalesce(vl_coparticipacao, 0),
		vl_total_despesa	= coalesce(vl_contas_medicas, 0) + coalesce(vl_reembolso, 0 ) + coalesce(vl_ressarcimento_sus, 0) + coalesce(vl_comissao_vendas, 0) +
						coalesce(vl_despesas_naoassist, 0) + coalesce(vl_encargos, 0) + coalesce(vl_provisoes_tecnica, 0),
		vl_total_assist		= coalesce(vl_contas_medicas, 0) + coalesce(vl_reembolso, 0) + coalesce(vl_ressarcimento_sus, 0)
	where	a.dt_mesano_referencia	= dt_referencia_p;

	update	pls_segurado_valores	a
	set	vl_resultado		= vl_total_receita - vl_total_despesa,
		pr_sinistralidade	= dividir_sem_round(vl_total_assist, vl_total_receita) * 100
	where	a.dt_mesano_referencia	= dt_referencia_p;

	update	pls_segurado_valores	a
	set	pr_resultado		= pls_obter_perc_result(vl_total_receita, vl_resultado)
	where	a.dt_mesano_referencia	= dt_referencia_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_seg_valores ( ie_totalizar_p text, vl_resultado_p bigint, ie_tipo_valor_p text, nr_seq_segurado_p bigint, nr_seq_pagador_p bigint, nr_seq_contrato_p bigint, nr_seq_plano_p bigint, ie_tipo_contratacao_p text, ie_tipo_beneficiario_p text, nr_seq_faixa_etaria_p bigint, dt_referencia_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, ie_tipo_vinculo_operadora_p text, nr_seq_intercambio_p bigint, ie_regulamentacao_p pls_plano.ie_regulamentacao%type, ie_preco_p pls_plano.ie_preco%type) FROM PUBLIC;

