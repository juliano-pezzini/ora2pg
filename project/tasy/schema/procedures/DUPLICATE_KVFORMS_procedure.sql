-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE duplicate_kvforms ( nm_tabela_p text, nm_usuario_p text, nr_seq_pk_p INOUT bigint) AS $body$
DECLARE


ds_virgula_w      varchar(01);
ds_insert_w      varchar(32000);
nm_tabela_w              varchar(50);
nm_atributo_pk_w    varchar(50);
nm_atributo_w              varchar(50);
nm_atributo_long_w  varchar(50);
ds_comando_w      varchar(32000);
vl_atributo_pk_w    bigint;
ds_insert_prot_w    varchar(50);
ds_campo_prot_w      varchar(50);
ie_campo_nrec      integer;

C010 CURSOR FOR
  SELECT  nm_atributo
  FROM  tabela_atributo
  WHERE  nm_tabela    = nm_tabela_w
  and  ie_tipo_atributo   not in ('FUNCTION','VISUAL','LONG', 'LONG RAW')
  and  nm_atributo    not in (nm_atributo_pk_w, 'NM_USUARIO', 'DT_ATUALIZACAO', 'NM_USUARIO_NREC', 'DT_ATUALIZACAO_NREC','DT_LIBERACAO')
  AND (nm_tabela_w    <> 'PROTOCOLO_CONVENIO' or nm_atributo <> 'NR_PROTOCOLO')
  order by nr_sequencia_criacao;


BEGIN

ds_virgula_w      := '';
ds_insert_w      := '';
ds_insert_prot_w    := '';
ds_campo_prot_w      := '';
nm_tabela_w      := UPPER(nm_tabela_p);
--- getting primary key for passed table-----
select  coalesce(max(a.nm_atributo),' ')
  into STRICT  nm_atributo_pk_w
  from  indice_atributo c,
    indice b,
    tabela_atributo a
  where a.nm_tabela    = b.nm_tabela
    and b.nm_indice    = c.nm_indice
    and b.ie_tipo      = 'PK'
    and a.nm_atributo    = c.nm_atributo
    and coalesce(a.qt_seq_inicio,0)   > 0
    and a.nm_tabela    = nm_tabela_w
    and coalesce(a.ds_filter, ' ')     <> 'NAO DUPLICAR';
---getting count of no of columns containing(NM_USUARIO_NREC or  DT_ATUALIZACAO_NREC) in tabela_atributo---
select count(1)
  into STRICT ie_campo_nrec
  from tabela_atributo a
 where upper(a.nm_tabela) = nm_tabela_w
   and exists(SELECT b.nm_tabela
                    from tabela_atributo b
                   where a.nm_tabela = b.nm_tabela
                     and ((b.nm_atributo = 'NM_USUARIO_NREC')
                       or (b.nm_atributo = 'DT_ATUALIZACAO_NREC')));
---forming insert columns names comma separated----
if (nm_atributo_pk_w <> ' ') then
  OPEN C010;
  LOOP
    FETCH C010 INTO   nm_atributo_w;
    EXIT WHEN NOT FOUND; /* apply on C010 */
    ds_insert_w  := ds_insert_w || ds_virgula_w || nm_atributo_w;
    ds_virgula_w  := ',';
  END LOOP;
  CLOSE C010;
---for getting next sequence-----
  ds_comando_w  := 'Select ' || nm_tabela_w || '_seq.NextVal' || ' from dual';
  vl_atributo_pk_w := Obter_valor_Dinamico(ds_comando_w, vl_atributo_pk_w);
----forming insert into statement-----
  ds_comando_w  := 'Insert into ' || nm_tabela_w || '(' || nm_atributo_pk_w || ds_virgula_w || 'NM_USUARIO,DT_ATUALIZACAO,';
  if (ie_campo_nrec > 0) then
    ds_comando_w := ds_comando_w || 'NM_USUARIO_NREC,DT_ATUALIZACAO_NREC,';
  end if;
  ds_comando_w  := ds_comando_w  || ds_insert_w || ds_campo_prot_w || ') ';
  ds_comando_w  := ds_comando_w || 'select ' || vl_atributo_pk_w || ds_virgula_w ||
        chr(39) || nm_usuario_p || chr(39) || ds_virgula_w || 'sysdate,';
  if (ie_campo_nrec > 0) then
    ds_comando_w := ds_comando_w || chr(39) || nm_usuario_p || chr(39) || ds_virgula_w || 'sysdate,';
  end if;
  ds_comando_w  := ds_comando_w  || ds_insert_w || ds_insert_prot_w || ' from ' || nm_tabela_w || ' a ';
  ds_comando_w  := ds_comando_w || 'where a.' || nm_atributo_pk_w || ' = :cd_seq_pk_p ';
  RAISE NOTICE 'ds_comando_w -%', ds_comando_w;
  CALL Exec_sql_Dinamico_bv('DUPLICATE_KVFORMS',ds_comando_w,'cd_seq_pk_p='||nr_seq_pk_p||obter_separador_bv);
 ----getting columns containing datatype as LONG and populating the same----
  begin
  select  column_name
  into STRICT  nm_atributo_long_w
  from  user_tab_columns
  where  table_name = nm_tabela_w
  and  data_type = 'LONG';

  exception
  when others then
    nm_atributo_long_w := null;
  end;
    if (nm_atributo_long_w IS NOT NULL AND nm_atributo_long_w::text <> '') then
    CALL COPIA_CAMPO_LONG_DE_PARA(nm_tabela_w,
          nm_atributo_long_w,
          'where ' || nm_atributo_pk_w || ' = :nr_sequencia ',
          'nr_sequencia=' || nr_seq_pk_p,
          nm_tabela_w,
          nm_atributo_long_w,
          'where ' || nm_atributo_pk_w || ' = :nr_sequencia ',
          'nr_sequencia=' || vl_atributo_pk_w );

  end  if;
  nr_seq_pk_p  := vl_atributo_pk_w;
  commit;
end if;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicate_kvforms ( nm_tabela_p text, nm_usuario_p text, nr_seq_pk_p INOUT bigint) FROM PUBLIC;

