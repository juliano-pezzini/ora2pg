-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_consulta_cobertura_plano (cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, dt_conta_p timestamp, cd_item_p bigint, ie_origem_proced_p bigint, cd_tipo_acomodacao_p bigint, ie_tipo_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_medico_p text, cd_funcao_medico_p bigint, qt_idade_p bigint, nr_seq_exame_lab_p bigint, nr_seq_proc_interno_p bigint, cd_usuario_convenio_p text, ie_clinica_p bigint, cd_empresa_ref_p bigint, cd_cgc_fornecedor_p text, nr_sequencia_p bigint, nr_seq_pacote_p bigint, ds_conv_adic_p text, ie_sexo_p text, nm_usuario_p text, ie_tipo_item_p bigint, qt_dia_int_p bigint, ie_todos_estab_p text, cd_plano_p text default null) AS $body$
DECLARE


cd_plano_w			varchar(10);
qt_pontos_w			preco_amb.qt_pontuacao%type;
tx_ajuste_w			double precision;
vl_procedimento_w		double precision;
vl_custo_operacional_w		double precision;
vl_anestesista_w		double precision;
vl_medico_w			double precision;
vl_auxiliares_w			double precision;
vl_materiais_w			double precision;
vl_pto_procedimento_w		double precision;
vl_pto_custo_operac_w		double precision;
vl_pto_anestesista_w		double precision;
vl_pto_medico_w			double precision;
vl_pto_auxiliares_w		double precision;
vl_pto_materiais_w		double precision;
qt_porte_anestesico_w		smallint;
cd_edicao_amb_w			integer;
ie_preco_informado_w		varchar(01);
ie_resp_autor_w			varchar(3);
cd_procedimento_esp_w		bigint;
nr_seq_regra_preco_w		bigint;
cd_edicao_ajuste_w		bigint;
qt_filme_w			double precision;
nr_auxiliares_w			double precision;
pr_glosa_w			double precision;
vl_glosa_w			double precision;
ie_glosa_w			varchar(01);
cd_motivo_exc_conta_w		smallint;
vl_negociado_w			double precision;
ds_retorno_w			varchar(2000);
ie_bloqueia_agenda_w		varchar(10);
ie_regra_w			varchar(10);
nr_seq_regra_w			bigint;
ie_valor_informado_w		varchar(01);
dt_ult_vigencia_w		timestamp;
cd_tab_preco_mat_w		smallint;
ie_origem_preco_w		varchar(10);
tx_brasindice_pfb_w		REGRA_AJUSTE_MATERIAL.TX_BRASINDICE_PFB%type;--number(15,2);
tx_brasindice_pmc_w		CONVENIO_BRASINDICE.TX_BRASINDICE_PMC%type;--number(15,2);
tx_pmc_neg_w			CONVENIO_BRASINDICE.TX_PMC_NEG%type;--number(15,2);
tx_pmc_pos_w			CONVENIO_BRASINDICE.TX_PMC_POS%type;--number(15,2);
tx_afaturar_w			double precision;
tx_simpro_pfb_w			double precision;
tx_simpro_pmc_w			double precision;
ie_precedencia_w		varchar(10);
ie_tipo_atend_w			bigint;
ie_edicao_w			varchar(01);
cd_tabela_preco_w		bigint;
ie_tipo_atend_plano_w		bigint;
ie_autor_particular_w		varchar(1);
cd_convenio_glosa_w		integer;
cd_categoria_glosa_w		varchar(10);
nr_seq_ajuste_proc_w		bigint;
qt_item_edicao_w		bigint;
ie_pacote_convenio_w		varchar(1);
cd_estabelecimento_w		smallint;
vl_glosa_perc_w			double precision;
tx_pfb_neg_w			CONVENIO_BRASINDICE.TX_PFB_NEG%type;--number(15,4);
tx_pfb_pos_w			CONVENIO_BRASINDICE.TX_PFB_POS%type;--number(15,4);
vl_filme_neg_w			double precision;
vl_Neutro_w			varchar(10);
ie_padrao_glosa_lib_w		varchar(1);
ie_padrao_regra_plano_lib_w	varchar(1);
ie_classificacao_proc_w		varchar(1);
ie_glosa_serv_zerado_w		varchar(1);
tx_simpro_pos_pfb_w		double precision;
tx_simpro_neg_pfb_w		double precision;
tx_simpro_pos_pmc_w		double precision;
tx_simpro_neg_pmc_w		double precision;

ie_regra_arredondamento_tx_w	varchar(1):= 'N';
ie_tipo_rounded_w		varchar(1);
ie_regra_arred_IPE_w		varchar(1):= 'N';
nr_seq_bras_preco_w		bigint;
nr_seq_mat_bras_w		bigint;
nr_seq_conv_bras_w		bigint;
nr_seq_conv_simpro_w		bigint;
nr_seq_mat_simpro_w		bigint;
nr_seq_simpro_preco_w		bigint;
nr_seq_ajuste_proc_def_w	bigint;
nr_seq_ajuste_mat_w		bigint;
nr_seq_regra_ajuste_w		bigint;

c01 CURSOR FOR
	SELECT	cd_plano
	from	convenio_plano
	where	cd_convenio	= cd_convenio_p
	and	cd_plano	= coalesce(cd_plano_p, cd_plano)
	and	ie_situacao	= 'A';

c00 CURSOR FOR
	SELECT	vl_dominio
	from	valor_dominio_v
	where	cd_dominio	= 12;

c02 CURSOR FOR
	SELECT	cd_estabelecimento
	from	estabelecimento
	where	ie_situacao = 'A'
	and	((ie_todos_estab_p = 'S') or (ie_todos_estab_p = 'N' AND cd_estabelecimento = cd_estabelecimento_p))
	order by cd_estabelecimento;



BEGIN

ie_padrao_glosa_lib_w		:= coalesce(Obter_valor_param_usuario(1115, 27, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');
ie_padrao_regra_plano_lib_w	:= coalesce(Obter_valor_param_usuario(1115, 28, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');

delete	from w_consulta_cobertura_plano
where	cd_convenio	= cd_convenio_p;

open c02;
loop
fetch c02 into
	cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin

	open	c00;
	loop
	fetch	c00 into
		ie_tipo_atend_w;
	EXIT WHEN NOT FOUND; /* apply on c00 */
		begin

		open	c01;
		loop
		fetch	c01 into
			cd_plano_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin

			if (ie_tipo_item_p	 <> 2) then
				begin

				select	coalesce(max(ie_classificacao),'0')
				into STRICT	ie_classificacao_proc_w
				from	procedimento
				where	cd_procedimento = cd_item_p
				and	ie_origem_proced = ie_origem_proced_p;

				if (ie_classificacao_proc_w in ('2','3')) then

					SELECT * FROM define_preco_servico(cd_estabelecimento_w, cd_convenio_p, cd_categoria_p, dt_conta_p, cd_item_p, coalesce(cd_setor_atendimento_p,0), ie_tipo_atend_w, coalesce(cd_tipo_acomodacao_p,0), cd_usuario_convenio_p, cd_plano_w, coalesce(ie_clinica_p,0), coalesce(cd_empresa_ref_p,0), null, vl_procedimento_w, nr_seq_ajuste_proc_def_w, null, 0, coalesce(qt_idade_p,0), coalesce(nr_seq_proc_interno_p,0), coalesce(nr_sequencia_p,0), null, null, 0, null, null, null, null, null, cd_medico_p) INTO STRICT vl_procedimento_w, nr_seq_ajuste_proc_def_w;

				else

					SELECT * FROM define_preco_procedimento(cd_estabelecimento_w, cd_convenio_p, cd_categoria_p, dt_conta_p, cd_item_p, coalesce(cd_tipo_acomodacao_p,0), ie_tipo_atend_w, coalesce(cd_setor_atendimento_p,0), cd_medico_p, coalesce(cd_funcao_medico_p,0), coalesce(qt_idade_p,0), coalesce(nr_seq_exame_lab_p,0), coalesce(nr_seq_proc_interno_p,0), cd_usuario_convenio_p, cd_plano_w, coalesce(ie_clinica_p,0), coalesce(cd_empresa_ref_p,0), null, vl_procedimento_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_pto_procedimento_w, vl_pto_custo_operac_w, vl_pto_anestesista_w, vl_pto_medico_w, vl_pto_auxiliares_w, vl_pto_materiais_w, qt_porte_anestesico_w, qt_pontos_w, cd_edicao_amb_w, ie_valor_informado_w, nr_seq_ajuste_proc_def_w, coalesce(nr_sequencia_p,0), null, 0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null) INTO STRICT vl_procedimento_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_pto_procedimento_w, vl_pto_custo_operac_w, vl_pto_anestesista_w, vl_pto_medico_w, vl_pto_auxiliares_w, vl_pto_materiais_w, qt_porte_anestesico_w, qt_pontos_w, cd_edicao_amb_w, ie_valor_informado_w, nr_seq_ajuste_proc_def_w;

				end if;

				SELECT * FROM obter_regra_ajuste_proc(cd_estabelecimento_w, cd_convenio_p, cd_categoria_p, cd_item_p, ie_origem_proced_p, null, dt_conta_p, coalesce(cd_tipo_acomodacao_p,0), ie_tipo_atend_w, coalesce(cd_setor_atendimento_p,0), cd_medico_p, coalesce(cd_funcao_medico_p,0), coalesce(qt_idade_p,0), coalesce(nr_seq_exame_lab_p,0), coalesce(nr_seq_proc_interno_p,0), cd_usuario_convenio_p, cd_plano_w, coalesce(ie_clinica_p,0), coalesce(cd_empresa_ref_p,0), ie_sexo_p, tx_ajuste_w, tx_ajuste_w, tx_ajuste_w, tx_ajuste_w, tx_ajuste_w, vl_negociado_w, ie_preco_informado_w, ie_glosa_w, cd_procedimento_esp_w, nr_seq_regra_preco_w, cd_edicao_ajuste_w, vl_medico_w, vl_custo_operacional_w, qt_filme_w, nr_auxiliares_w, qt_porte_anestesico_w, pr_glosa_w, vl_glosa_w, cd_motivo_exc_conta_w, null, 0, ie_autor_particular_w, cd_convenio_glosa_w, cd_categoria_glosa_w, nr_seq_regra_ajuste_w, null, null, null, null, null, null, null, null, vl_filme_neg_w, null, null, null, null, null, null, null, null, null, null) INTO STRICT tx_ajuste_w, tx_ajuste_w, tx_ajuste_w, tx_ajuste_w, tx_ajuste_w, vl_negociado_w, ie_preco_informado_w, ie_glosa_w, cd_procedimento_esp_w, nr_seq_regra_preco_w, cd_edicao_ajuste_w, vl_medico_w, vl_custo_operacional_w, qt_filme_w, nr_auxiliares_w, qt_porte_anestesico_w, pr_glosa_w, vl_glosa_w, cd_motivo_exc_conta_w, ie_autor_particular_w, cd_convenio_glosa_w, cd_categoria_glosa_w, nr_seq_regra_ajuste_w, vl_filme_neg_w;

				if (ie_classificacao_proc_w in ('2','3')) then

					ie_glosa_serv_zerado_w := obter_parametro_geral(2, ie_glosa_serv_zerado_w);

					if (ie_glosa_serv_zerado_w = 'S') and (coalesce(vl_procedimento_w,0) = 0) then
						ie_glosa_w	:= 'G';
					end if;

				end if;

				if (ie_glosa_w = 'Z') then
					vl_procedimento_w	:= 0;
				end if;

				if (ie_glosa_w = 'P') then
					vl_glosa_w:= vl_procedimento_w * pr_glosa_w / 100;

					/* ROTINA DE ARREDONDAMENTO, USADO PELO CONVENIO IPE   --->>    INICIO  <<----- */

					begin
					select	coalesce(max(ie_regra_arredondamento_tx),'N')
					into STRICT	ie_regra_arredondamento_tx_w
					from	parametro_faturamento
					where	cd_estabelecimento = cd_estabelecimento_w;
					exception
						when others then
							ie_regra_arredondamento_tx_w:= 'N';
					end;

					if (ie_regra_arredondamento_tx_w = 'S')then

						select	max(ie_arredondamento)
						into STRICT	ie_tipo_rounded_w
						from	convenio_estabelecimento
						where	cd_convenio	  	= cd_convenio_p
						and	cd_estabelecimento	= cd_estabelecimento_w;

						if (ie_tipo_rounded_w = 'R') then

							select 	obter_regra_arredondamento(cd_convenio_p, cd_categoria_p, cd_item_p, ie_origem_proced_p, cd_estabelecimento_w,
									coalesce(dt_conta_p,clock_timestamp()), 'P', 1)
							into STRICT	ie_tipo_rounded_w
							;

							ie_regra_arred_IPE_w:= 'S';

						end if;

						if (ie_tipo_rounded_w IS NOT NULL AND ie_tipo_rounded_w::text <> '') and (ie_regra_arred_IPE_w = 'S') then

							vl_glosa_w := arredondamento(vl_glosa_w, 2, ie_tipo_rounded_w);

						else
							ie_regra_arred_IPE_w:= 'N';
						end if;

					end if;
					/* ROTINA DE ARREDONDAMENTO, USADO PELO CONVENIO IPE   --->>    FIM  <<----- */

				end if;

				/* inclui o tratamento para os pacotes  os 114964 -  fabricio em  29/10/2008 */

				ie_pacote_convenio_w	:= coalesce(obter_se_pacote_convenio(cd_item_p, ie_origem_proced_p, cd_convenio_p, cd_estabelecimento_w),'N');

				if (coalesce(ie_glosa_w,'L') = 'L') and (ie_pacote_convenio_w = 'N') then

					select	obter_se_proc_conv(cd_estabelecimento_w, cd_convenio_p, cd_categoria_p, dt_conta_p, cd_item_p, ie_origem_proced_p, nr_seq_proc_interno_p, ie_tipo_atend_w)
					into STRICT	ie_edicao_w
					;

					if (ie_edicao_w = 'N') and (coalesce(cd_edicao_ajuste_w,0) = 0) then
						ie_glosa_w 	:= 'T';
					end if;

					if (ie_edicao_w = 'N') and (coalesce(cd_edicao_ajuste_w,0) > 0) then

						select	count(*)
						into STRICT	qt_item_edicao_w
						from	preco_amb
						where	cd_edicao_amb = cd_edicao_ajuste_w
						and	cd_procedimento = cd_item_p
						and	ie_origem_proced = ie_origem_proced_p;

						if (qt_item_edicao_w = 0) then
							ie_glosa_w :=	'G';
						end if;

					end if;

				end if;

				SELECT * FROM consiste_plano_mat_proc(cd_estabelecimento_w, cd_convenio_p, cd_categoria_p, cd_plano_w, null, cd_item_p, ie_origem_proced_p, null, ie_tipo_atend_w, coalesce(cd_tipo_acomodacao_p,0), coalesce(cd_setor_atendimento_p,0), nr_seq_exame_lab_p, nr_seq_proc_interno_p, ds_retorno_w, ie_bloqueia_agenda_w, ie_regra_w, nr_seq_regra_w) INTO STRICT ds_retorno_w, ie_bloqueia_agenda_w, ie_regra_w, nr_seq_regra_w;

				select	max(ie_resp_autor)
				into STRICT	ie_resp_autor_w
				from	regra_convenio_plano
				where	nr_sequencia	= nr_seq_regra_w;


				if (ie_glosa_w = 'R') then
					vl_glosa_w:= vl_procedimento_w - vl_glosa_w;
				end if;

				end;
			else
				begin

				SELECT * FROM define_preco_material(cd_estabelecimento_w, cd_convenio_p, cd_categoria_p, dt_conta_p, cd_item_p, coalesce(cd_tipo_acomodacao_p,0), ie_tipo_atend_w, coalesce(cd_setor_atendimento_p,0), null, coalesce(qt_idade_p,0), coalesce(nr_sequencia_p,0), cd_plano_w, null, null, null, null, null, null, null, vl_procedimento_w, dt_ult_vigencia_w, cd_tab_preco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w) INTO STRICT vl_procedimento_w, dt_ult_vigencia_w, cd_tab_preco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w;

				ie_glosa_w	:= null;
				vl_glosa_w	:= null;


				SELECT * FROM obter_regra_ajuste_mat(cd_estabelecimento_w, cd_convenio_p, cd_categoria_p, cd_item_p, dt_conta_p, coalesce(cd_tipo_acomodacao_p,0), ie_tipo_atend_w, coalesce(cd_setor_atendimento_p,0), coalesce(qt_idade_p,0), coalesce(nr_sequencia_p,0), cd_plano_w, null, null, null, null, tx_ajuste_w, vl_negociado_w, ie_preco_informado_w, ie_glosa_w, tx_brasindice_pfb_w, tx_brasindice_pmc_w, tx_pmc_neg_w, tx_pmc_pos_w, tx_afaturar_w, tx_simpro_pfb_w, tx_simpro_pmc_w, ie_origem_preco_w, ie_precedencia_w, pr_glosa_w, vl_glosa_w, cd_tabela_preco_w, cd_motivo_exc_conta_w, nr_seq_regra_ajuste_w, ie_autor_particular_w, cd_convenio_glosa_w, cd_categoria_glosa_w, null, tx_pfb_neg_w, tx_pfb_pos_w, vl_Neutro_w, tx_simpro_pos_pfb_w, tx_simpro_neg_pfb_w, tx_simpro_pos_pmc_w, tx_simpro_neg_pmc_w, null, null, 0, null, null, null, null, null) INTO STRICT tx_ajuste_w, vl_negociado_w, ie_preco_informado_w, ie_glosa_w, tx_brasindice_pfb_w, tx_brasindice_pmc_w, tx_pmc_neg_w, tx_pmc_pos_w, tx_afaturar_w, tx_simpro_pfb_w, tx_simpro_pmc_w, ie_origem_preco_w, ie_precedencia_w, pr_glosa_w, vl_glosa_w, cd_tabela_preco_w, cd_motivo_exc_conta_w, nr_seq_regra_ajuste_w, ie_autor_particular_w, cd_convenio_glosa_w, cd_categoria_glosa_w, tx_pfb_neg_w, tx_pfb_pos_w, vl_Neutro_w, tx_simpro_pos_pfb_w, tx_simpro_neg_pfb_w, tx_simpro_pos_pmc_w, tx_simpro_neg_pmc_w;

				if (ie_glosa_w = 'Z') then
					vl_procedimento_w	:= 0;
				end if;

				if (ie_glosa_w = 'P') then
					vl_glosa_w:= vl_procedimento_w * pr_glosa_w / 100;
				end if;

				SELECT * FROM consiste_plano_mat_proc(cd_estabelecimento_w, cd_convenio_p, cd_categoria_p, cd_plano_w, cd_item_p, null, null, null, ie_tipo_atend_w, coalesce(cd_tipo_acomodacao_p,0), coalesce(cd_setor_atendimento_p,0), null, null, ds_retorno_w, ie_bloqueia_agenda_w, ie_regra_w, nr_seq_regra_w) INTO STRICT ds_retorno_w, ie_bloqueia_agenda_w, ie_regra_w, nr_seq_regra_w;

				ie_resp_autor_w := null;

				if (ie_glosa_w = 'R') then
					vl_glosa_w:= vl_procedimento_w - vl_glosa_w;
				end if;

				end;
			end if;

			if (ie_padrao_glosa_lib_w = 'S') and (coalesce(ie_glosa_w::text, '') = '') then
				ie_glosa_w:= 'L';
			end if;

			if (ie_padrao_regra_plano_lib_w = 'S') and (coalesce(ie_regra_w,0) = 0) then
				ie_regra_w:= 4;
			end if;

			-- OS  625365 (Orig dos campos 155996)
			if (vl_glosa_w = 0) then
				vl_glosa_w:= vl_procedimento_w;
			end if;

			if (nr_seq_regra_w = 0) then
				nr_seq_regra_w	:= null;
			end if;

			if (nr_seq_regra_ajuste_w = 0) then
				nr_seq_regra_ajuste_w	:= null;
			end if;

			insert	into w_consulta_cobertura_plano(cd_convenio,
				cd_plano,
				ie_glosa,
				vl_procedimento,
				vl_glosa,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_regra_plano,
				ie_tipo_atendimento,
				cd_estabelecimento,
				pr_glosa,
				ie_resp_autor,
				nr_seq_regra_plano,
				nr_seq_regra_ajuste
				)
			values (cd_convenio_p,
				cd_plano_w,
				ie_glosa_w,
				vl_procedimento_w,
				vl_glosa_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				ie_regra_w,
				ie_tipo_atend_w,
				cd_estabelecimento_w,
				pr_glosa_w,
				ie_resp_autor_w,
				nr_seq_regra_w,
				nr_seq_regra_ajuste_w);

			end;
		end loop;
		close c01;

		end;

	end loop;
	close c00;

	end;
end loop;
close c02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_consulta_cobertura_plano (cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, dt_conta_p timestamp, cd_item_p bigint, ie_origem_proced_p bigint, cd_tipo_acomodacao_p bigint, ie_tipo_atendimento_p bigint, cd_setor_atendimento_p bigint, cd_medico_p text, cd_funcao_medico_p bigint, qt_idade_p bigint, nr_seq_exame_lab_p bigint, nr_seq_proc_interno_p bigint, cd_usuario_convenio_p text, ie_clinica_p bigint, cd_empresa_ref_p bigint, cd_cgc_fornecedor_p text, nr_sequencia_p bigint, nr_seq_pacote_p bigint, ds_conv_adic_p text, ie_sexo_p text, nm_usuario_p text, ie_tipo_item_p bigint, qt_dia_int_p bigint, ie_todos_estab_p text, cd_plano_p text default null) FROM PUBLIC;

