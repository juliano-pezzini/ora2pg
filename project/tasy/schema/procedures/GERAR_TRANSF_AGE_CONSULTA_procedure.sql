-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_transf_age_consulta (ds_lista_p text, cd_agenda_p bigint, dt_agenda_p timestamp, ie_feriado_p text, ie_sobra_horario_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_atendimento_p bigint, nr_seq_evento_atend_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE


ds_lista_w				varchar(4000);
tam_lista_w				bigint;
ie_pos_virgula_w		smallint;
nr_seq_agendamento_w	bigint;

nr_seq_livre_w			bigint;
nr_seq_encaixe_w		bigint;
hr_agenda_w				timestamp;
dt_agenda_w				timestamp;
nr_minuto_duracao_w		bigint;
ds_erro_w				varchar(255);

nr_seq_ageint_item_w	agenda_integrada_item.nr_sequencia%type;
nr_seq_ageint_w			agenda_integrada_item.nr_seq_agenda_int%type;
cd_medico_w				agenda.cd_pessoa_fisica%type;


BEGIN

ds_lista_w 	:= ds_lista_p;
ds_erro_p	:= '';

while(ds_lista_w IS NOT NULL AND ds_lista_w::text <> '')  loop
	begin
	tam_lista_w		  := length(ds_lista_w);
	ie_pos_virgula_w  := position(',' in ds_lista_w);

	if (ie_pos_virgula_w <> 0) then
		nr_seq_agendamento_w  := (substr(ds_lista_w,1,(ie_pos_virgula_w - 1)))::numeric;
		ds_lista_w		      := substr(ds_lista_w,(ie_pos_virgula_w + 1),tam_lista_w);
	end if;

	ds_erro_w := horario_livre_consulta(
			cd_estabelecimento_p, cd_agenda_p, ie_feriado_p, dt_agenda_p, nm_usuario_p, 'S', ie_sobra_horario_p, 'N', 0, ds_erro_w);

	select	max(dt_agenda),
			max(dt_agenda),
			max(nr_minuto_duracao)
	into STRICT	dt_agenda_w,
			hr_agenda_w,
			nr_minuto_duracao_w
	from	agenda_consulta
	where	nr_sequencia = nr_seq_agendamento_w;

	select	max(nr_sequencia),
			max(nr_seq_agenda_int)
	into STRICT	nr_seq_ageint_item_w,
			nr_seq_ageint_w
	from	agenda_integrada_item
	where	nr_seq_agenda_cons	= nr_seq_agendamento_w;

	select	max(cd_pessoa_fisica)
	into STRICT	cd_medico_w
	from	agenda
	where	cd_agenda = cd_agenda_p;

	select	max(nr_sequencia)
	into STRICT	nr_seq_livre_w
	from	agenda_consulta
	where	cd_agenda = cd_agenda_p
	and	dt_agenda = to_date(to_char(dt_agenda_p,'dd/mm/yyyy') || ' ' || coalesce(to_char(dt_agenda_w,'hh24:mi:ss'),'00:00:00'),'dd/mm/yyyy hh24:mi:ss')
	and	ie_status_agenda = 'L';

	if (nr_seq_livre_w > 0) then
		ds_erro_w := copiar_transferir_agenda_cons(
					cd_estabelecimento_p, nr_seq_agendamento_w, nr_seq_livre_w, 'T', null, null, nm_usuario_p, nr_seq_atendimento_p, nr_seq_evento_atend_p, ds_erro_w);

			if (coalesce(ds_erro_w::text, '') = '') and (nr_seq_ageint_w IS NOT NULL AND nr_seq_ageint_w::text <> '') then

			update 	agenda_integrada_item
			set		nr_seq_agenda_cons	= nr_seq_livre_w,
					nm_usuario			= nm_usuario_p,
					dt_atualizacao		= clock_timestamp(),
					dt_transferencia	= clock_timestamp()
			where	nr_sequencia		= nr_seq_ageint_item_w;
		
			delete FROM ageint_marcacao_usuario
			where nr_seq_agenda = nr_seq_agendamento_w;

			insert into ageint_marcacao_usuario(nr_Sequencia,
          		cd_Agenda,
          		hr_agenda,
          		nm_usuario,
          		nr_Seq_ageint,
          		nr_minuto_duracao,
          		nr_seq_ageint_item,
          		ie_encaixe,
         	    cd_pessoa_Fisica,
         	    nr_seq_agenda,
         	    ie_gerado,
         	    ie_horario_auxiliar)
      		values (nextval('ageint_marcacao_usuario_seq'),
          		 cd_Agenda_p,
          		 to_date(to_char(dt_agenda_p,'dd/mm/yyyy') || ' ' || coalesce(to_char(dt_agenda_w,'hh24:mi:ss'),'00:00:00'),'dd/mm/yyyy hh24:mi:ss'),
          		 nm_usuario_p,
          	     nr_seq_ageint_w,
          		 nr_minuto_duracao_w,
          		 nr_seq_ageint_item_w,
          		 'N',
          	     cd_medico_w,
          		 nr_seq_livre_w,
          		 'S',
          	     'N');

			commit;
		end if;

	else
		ds_erro_p := ds_erro_p || to_char(hr_agenda_w,'hh24:mi') ||',';
	end if;

	end;
	end loop;

commit;

ds_erro_p := substr(ds_erro_p,1,length(ds_erro_p)-1);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_transf_age_consulta (ds_lista_p text, cd_agenda_p bigint, dt_agenda_p timestamp, ie_feriado_p text, ie_sobra_horario_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_atendimento_p bigint, nr_seq_evento_atend_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

