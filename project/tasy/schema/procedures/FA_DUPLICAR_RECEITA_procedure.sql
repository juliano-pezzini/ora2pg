-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fa_duplicar_receita ( nr_sequencia_p bigint, nr_atendimento_p bigint, nm_usuario_p text, nr_seq_gerado_p INOUT bigint, cd_medico_p text DEFAULT NULL) AS $body$
DECLARE

  --Cursor1
  nr_sequencia_ww        bigint;
  cd_material_ww         bigint;
  cd_unidade_medida_ww   varchar(30);
  cd_intervalo_ww        varchar(7);
  nr_dias_receita_ww     integer;
  dt_validade_receita_ww timestamp;
  dt_inicio_receita_ww   timestamp;
  qt_dose_ww             double precision;
  ie_via_aplicacao_ww    varchar(5);
  dt_atualizacao_ww      timestamp;
  nm_usuario_ww          varchar(15);
  nr_seq_receita_ww      bigint;
  ie_segunda_ww          varchar(1);
  ie_terca_ww            varchar(1);
  ie_quarta_ww           varchar(1);
  ie_quinta_ww           varchar(1);
  ie_sexta_ww            varchar(1);
  ie_sabado_ww           varchar(1);
  ie_domingo_ww          varchar(1);
  ie_uso_continuo_ww     varchar(1);
  nm_usuario_nrec_ww     varchar(15);
  dt_atualizacao_nrec_ww timestamp;
  ds_texto_receita_ww text;
  qt_medicacao_w bigint;
  nr_ciclo_w     bigint;
  ds_justificativa_w varchar(255);
  -- Fim cursor1
  nr_sequencia_w          bigint;
  ie_dt_receita_sysdate_w varchar(1);
  ie_nova_receita_w       varchar(1);
  ie_medico_usuario_w     varchar(1);
  --variaveis do select
  dt_atualizacao_w       timestamp;
  nm_usuario_w           varchar(15);
  nr_atendimento_w       bigint;
  cd_medico_w            varchar(10);
  nr_receita_w           varchar(15);
  dt_receita_w           timestamp;
  dt_inicio_receita_w    timestamp;
  nr_dias_receita_w      integer;
  ie_receita_externa_w   varchar(1);
  ie_tipo_receita_w      varchar(15);
  nr_serie_w             varchar(15);
  cd_pessoa_fisica_w     varchar(10);
  nm_usuario_nrec_w      varchar(15);
  dt_atualizacao_nrec_w  timestamp;
  nr_seq_receita_regra_w varchar(15);
  ds_mensagem_w          varchar(4000);
  ie_permite_duplicar_w  varchar(1);
  nr_seq_item_w          bigint;
  ds_obs_item_w          varchar(255);
  cd_estabelecimento_w   smallint;
  ie_se_necessario_w fa_receita_farmacia_item.ie_se_necessario%type;
  ie_nivel_atencao_w varchar(1);
  nr_seq_atend_cons_pepa_w fa_receita_farmacia.nr_seq_atend_cons_pepa%type;
  C01 CURSOR FOR
    SELECT nextval('fa_receita_farmacia_item_seq'),
      a.cd_material,
      a.cd_unidade_medida,
      a.cd_intervalo,
      a.nr_dias_receita,
      CASE WHEN ie_dt_receita_sysdate_w='S' THEN (dt_inicio_receita_w+nr_dias_receita-1)  ELSE NULL END ,
      CASE WHEN ie_dt_receita_sysdate_w='S' THEN clock_timestamp()  ELSE NULL END ,
      a.qt_dose,
      a.ie_via_aplicacao,
      a.dt_atualizacao,
      a.nm_usuario,
      nr_sequencia_w,
      a.ie_segunda,
      a.ie_terca,
      a.ie_quarta,
      a.ie_quinta,
      a.ie_sexta,
      a.ie_sabado,
      a.ie_domingo,
      a.ie_uso_continuo,
      nm_usuario_p,
      clock_timestamp(),
      a.nr_sequencia,
      a.ds_observacao,
      a.ie_se_necessario,
      a.qt_medicacao,
      a.nr_ciclo,
	  a.ds_justificativa
    FROM fa_receita_farmacia_item a
LEFT OUTER JOIN fa_medic_farmacia_amb b ON (a.cd_material = b.cd_material)
WHERE a.nr_seq_receita                             = nr_sequencia_p  AND coalesce(b.ie_situacao,'A')                         = 'A' AND coalesce(b.cd_estabelecimento,cd_estabelecimento_w) = cd_estabelecimento_w;

BEGIN
  cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
  ie_dt_receita_sysdate_w := obter_param_usuario(10015, 77, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_dt_receita_sysdate_w);
  ie_nova_receita_w := obter_param_usuario(10015, 80, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_nova_receita_w);
  ie_medico_usuario_w := obter_param_usuario(10015, 86, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_medico_usuario_w);
  ie_nivel_atencao_w := wheb_assist_pck.get_nivel_atencao_perfil;
  IF (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') THEN
    SELECT MAX(ie_tipo_receita)
    INTO STRICT ie_tipo_receita_w
    FROM fa_receita_farmacia
    WHERE nr_sequencia = nr_sequencia_p;
    SELECT coalesce(MAX(ie_permite_duplicar),'S')
    INTO STRICT ie_permite_duplicar_w
    FROM fa_regra_tipo_receita
    WHERE ie_tipo_receita = ie_tipo_receita_w
    AND cd_perfil         = Obter_perfil_Ativo;
    SELECT nextval('fa_receita_farmacia_seq') INTO STRICT nr_sequencia_w;
    IF (ie_permite_duplicar_w = 'N') THEN
      CALL Wheb_mensagem_pck.exibir_mensagem_abort(245037);
    END IF;
    SELECT clock_timestamp(),
      nm_usuario_p,
      CASE WHEN coalesce(nr_atendimento_p::text, '') = '' THEN nr_atendimento  ELSE nr_atendimento_p END ,
      cd_medico,
      CASE WHEN ie_nova_receita_w='N' THEN nr_receita  ELSE fa_obter_numero_receita(CASE WHEN coalesce(nr_atendimento_p::text, '') = '' THEN nr_atendimento  ELSE nr_atendimento_p END ,'N') END ,
      CASE WHEN ie_dt_receita_sysdate_w='S' THEN clock_timestamp()  ELSE dt_receita END ,
      CASE WHEN ie_dt_receita_sysdate_w='S' THEN clock_timestamp()  ELSE NULL END ,
      CASE WHEN ie_dt_receita_sysdate_w='S' THEN nr_dias_receita  ELSE NULL END ,
      ie_receita_externa,
      ie_tipo_receita,
      nr_serie,
      cd_pessoa_fisica,
      nm_usuario_p,
      clock_timestamp(),
      nr_seq_atend_cons_pepa
    INTO STRICT dt_atualizacao_w,
      nm_usuario_w,
      nr_atendimento_w,
      cd_medico_w,
      nr_receita_w,
      dt_receita_w,
      dt_inicio_receita_w,
      nr_dias_receita_w,
      ie_receita_externa_w,
      ie_tipo_receita_w,
      nr_serie_w,
      cd_pessoa_fisica_w,
      nm_usuario_nrec_w,
      dt_atualizacao_nrec_w,
      nr_seq_atend_cons_pepa_w
    FROM fa_receita_farmacia
    WHERE nr_sequencia      = nr_sequencia_p;
    IF (ie_medico_usuario_w = 'S') THEN
      cd_medico_w          := coalesce(Obter_Pf_Usuario(nm_usuario_p,'C'),cd_medico_w);
    END IF;
    SELECT * FROM FA_GERAR_NUMERO_RECEITA(wheb_usuario_pck.get_cd_estabelecimento, nm_usuario_p, wheb_usuario_pck.get_cd_perfil, nr_seq_receita_regra_w, ds_mensagem_w) INTO STRICT nr_seq_receita_regra_w, ds_mensagem_w;
    IF (nr_seq_receita_regra_w IS NOT NULL AND nr_seq_receita_regra_w::text <> '') THEN
      nr_receita_w             := nr_seq_receita_regra_w;
    END IF;
    cd_medico_w := coalesce(cd_medico_p,cd_medico_w);
    INSERT
    INTO fa_receita_farmacia(
        nr_sequencia,
        dt_atualizacao,
        nm_usuario,
        nr_atendimento,
        cd_medico,
        nr_receita,
        dt_receita,
        dt_inicio_receita,
        nr_dias_receita,
        ie_receita_externa,
        ie_tipo_receita,
        nr_serie,
        cd_pessoa_fisica,
        nm_usuario_nrec,
        dt_atualizacao_nrec,
        dt_validade_receita,
        cd_estabelecimento,
        ie_nivel_atencao,
        nr_seq_atend_cons_pepa
      )
      VALUES (
        nr_sequencia_w,
        dt_atualizacao_w,
        nm_usuario_w,
        nr_atendimento_w,
        cd_medico_w,
        nr_receita_w,
        dt_receita_w,
        dt_inicio_receita_w,
        nr_dias_receita_w,
        ie_receita_externa_w,
        ie_tipo_receita_w,
        nr_serie_w,
        cd_pessoa_fisica_w,
        nm_usuario_nrec_w,
        dt_atualizacao_nrec_w,
        CASE WHEN ie_dt_receita_sysdate_w='S' THEN (dt_inicio_receita_w+nr_dias_receita_w)-1  ELSE NULL END ,
        cd_estabelecimento_w,
        ie_nivel_atencao_w,
        nr_seq_atend_cons_pepa_w
      );
    OPEN C01;
    LOOP
      FETCH C01
      INTO nr_sequencia_ww ,
        cd_material_ww ,
        cd_unidade_medida_ww ,
        cd_intervalo_ww ,
        nr_dias_receita_ww ,
        dt_validade_receita_ww ,
        dt_inicio_receita_ww ,
        qt_dose_ww ,
        ie_via_aplicacao_ww ,
        dt_atualizacao_ww ,
        nm_usuario_ww ,
        nr_seq_receita_ww ,
        ie_segunda_ww ,
        ie_terca_ww ,
        ie_quarta_ww ,
        ie_quinta_ww ,
        ie_sexta_ww ,
        ie_sabado_ww ,
        ie_domingo_ww ,
        ie_uso_continuo_ww ,
        nm_usuario_nrec_ww ,
        dt_atualizacao_nrec_ww ,
        nr_seq_item_w,
        ds_obs_item_w,
        ie_se_necessario_w,
        qt_medicacao_w,
        nr_ciclo_w,
		ds_justificativa_w;
      EXIT WHEN NOT FOUND; /* apply on C01 */
      BEGIN
        INSERT
        INTO fa_receita_farmacia_item(
            nr_sequencia ,
            cd_material ,
            cd_unidade_medida ,
            cd_intervalo ,
            nr_dias_receita ,
            dt_validade_receita ,
            dt_inicio_receita ,
            qt_dose ,
            ie_via_aplicacao ,
            dt_atualizacao ,
            nm_usuario ,
            nr_seq_receita ,
            ie_segunda ,
            ie_terca ,
            ie_quarta ,
            ie_quinta ,
            ie_sexta ,
            ie_sabado ,
            ie_domingo ,
            ie_uso_continuo ,
            nm_usuario_nrec ,
            dt_atualizacao_nrec ,
            ds_observacao,
            ie_se_necessario,
            qt_medicacao,
            nr_ciclo,
			ds_justificativa
          )
          VALUES (
            nr_sequencia_ww ,
            cd_material_ww ,
            cd_unidade_medida_ww ,
            cd_intervalo_ww ,
            nr_dias_receita_ww ,
            dt_validade_receita_ww ,
            dt_inicio_receita_ww ,
            qt_dose_ww ,
            ie_via_aplicacao_ww ,
            dt_atualizacao_ww ,
            nm_usuario_ww ,
            nr_seq_receita_ww ,
            ie_segunda_ww ,
            ie_terca_ww ,
            ie_quarta_ww ,
            ie_quinta_ww ,
            ie_sexta_ww ,
            ie_sabado_ww ,
            ie_domingo_ww ,
            ie_uso_continuo_ww ,
            nm_usuario_nrec_ww ,
            dt_atualizacao_nrec_ww ,
            ds_obs_item_w,
            ie_se_necessario_w,
            qt_medicacao_w,
            nr_ciclo_w,
			ds_justificativa_w
          );
        CALL copia_campo_long_de_para( 'FA_RECEITA_FARMACIA_ITEM', 'DS_TEXTO_RECEITA', ' where nr_sequencia = :nr_seq_item', 'nr_seq_item='||nr_seq_item_w, 'FA_RECEITA_FARMACIA_ITEM', 'DS_TEXTO_RECEITA', ' where nr_sequencia = :nr_seq_item', 'nr_seq_item='||nr_sequencia_ww);
      END;
    END LOOP;
    CLOSE C01;
  END IF;
  nr_seq_gerado_p := nr_sequencia_w;
  COMMIT;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fa_duplicar_receita ( nr_sequencia_p bigint, nr_atendimento_p bigint, nm_usuario_p text, nr_seq_gerado_p INOUT bigint, cd_medico_p text DEFAULT NULL) FROM PUBLIC;

