-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_fluxo_caixa_lote_mes_ant ( nr_seq_lote_fluxo_p bigint, cd_estabelecimento_p bigint, cd_conta_financ_p bigint, ie_regra_data_p text, nr_dia_fixo_p bigint, qt_mes_anterior_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, ie_acumular_fluxo_p text, nm_usuario_p text, cd_empresa_p bigint, nr_seq_regra_p bigint) AS $body$
DECLARE

 
/*--------------------------------------------------------------- ATENÇÃO ----------------------------------------------------------------*/
 
/* Cuidado ao realizar alterações no fluxo de caixa em lote. Toda e qualquer alteração realizada em qualquer uma */
 
/* das procedures do fluxo de caixa em lote deve ser cuidadosamente verificada e realizada no fluxo de caixa   */
 
/* convencional. Devemos garantir que os dois fluxos de caixa tragam os mesmos valores no resultado, evitando   */
 
/* assim que existam diferenças entre os fluxos de caixa.                                                */
 
/*--------------- AO ALTERAR O FLUXO DE CAIXA EM LOTE ALTERAR TAMBÉM O FLUXO DE CAIXA ---------------*/
 
 
vl_fluxo_w		double precision;
vl_deducao_w		double precision;
dt_referencia_w		timestamp;
dt_mes_w		timestamp;
ie_tratar_fim_semana_w	parametro_fluxo_caixa.ie_tratar_fim_semana%type;

c02 CURSOR FOR 
SELECT	sum(b.vl_fluxo), 
	PKG_DATE_UTILS.ADD_MONTH(b.dt_referencia,qt_mes_anterior_p,0) 
from	fluxo_caixa_lote a, 
	fluxo_caixa_data b 
where	a.nr_sequencia		= b.nr_seq_lote_fluxo 
and	b.cd_estabelecimento	= cd_estabelecimento_p 
and	b.cd_conta_financ	= cd_conta_financ_p 
and	a.ie_classif_fluxo	= 'P' 
and	dt_referencia		between PKG_DATE_UTILS.ADD_MONTH(dt_inicial_p,-1 * qt_mes_anterior_p,0) and PKG_DATE_UTILS.ADD_MONTH(dt_final_p,-1 * qt_mes_anterior_p,0) 
group	by PKG_DATE_UTILS.ADD_MONTH(dt_referencia,qt_mes_anterior_p,0);


BEGIN 
 
select	ie_tratar_fim_semana 
into STRICT	ie_tratar_fim_semana_w 
from	parametro_fluxo_caixa 
where	cd_estabelecimento	= cd_estabelecimento_p;
 
if (ie_regra_data_p = 'F') then 
 
	dt_mes_w := pkg_date_utils.start_of(dt_inicial_p, 'MONTH', 0);
	 
	select	coalesce(sum(b.vl_fluxo),0) 
	into STRICT	vl_fluxo_w 
	from	fluxo_caixa_lote a, 
		fluxo_caixa_data b 
	where	a.nr_sequencia		= b.nr_seq_lote_fluxo 
	and	b.cd_estabelecimento	= cd_estabelecimento_p 
	and	a.ie_classif_fluxo	= 'P' 
	and	b.cd_conta_financ	= cd_conta_financ_p 
	and	b.dt_referencia		= PKG_DATE_UTILS.ADD_MONTH(dt_inicial_p,-1 * qt_mes_anterior_p,0);	
 
	while(dt_mes_w <= pkg_date_utils.start_of(dt_final_p, 'MONTH', 0)) loop 
		 
		if (nr_dia_fixo_p > (pkg_date_utils.extract_field('DAY', pkg_date_utils.end_of(dt_mes_w, 'MONTH', 0),0))::numeric ) then 
			dt_referencia_w		:= pkg_date_utils.get_datetime(pkg_date_utils.end_of(dt_mes_w, 'MONTH', 0), coalesce(dt_mes_w, PKG_DATE_UTILS.GET_TIME('00:00:00')));
		elsif (nr_dia_fixo_p = 0) then 
			dt_referencia_w		:= pkg_date_utils.get_date(1, dt_mes_w, 0);
		else 
			dt_referencia_w		:= pkg_date_utils.get_date(nr_dia_fixo_p, dt_mes_w, 0);
		end if;
 
		if (dt_referencia_w between dt_inicial_p and dt_final_p) then 
 
			if (ie_tratar_fim_semana_w = 'S') then 
				dt_referencia_w	:= OBTER_PROXIMO_DIA_UTIL(cd_estabelecimento_p, dt_referencia_w);
			end if;
 
			if (OBTER_SE_FLUXO_LOTE_ESP(cd_estabelecimento_p, cd_conta_financ_p, dt_referencia_w) = 'S') and (OBTER_FLUXO_CAIXA_LOTE_REGRA(nr_seq_regra_p, dt_referencia_w, cd_estabelecimento_p, 'E') = 'S') then 
 
				vl_deducao_w	:= coalesce(OBTER_FLUXO_CAIXA_LOTE_REGRA(nr_seq_regra_p, dt_referencia_w, cd_estabelecimento_p, 'VL'), 0);
				 
				CALL gerar_fluxo_caixa_lote(	dt_referencia_w, 
							cd_conta_financ_p, 
							'', 
							'25-1', 
							'RE', 
							nm_usuario_p, 
							null, 
							null, 
							null, 
							null, 
							null, 
							null, 
							null, 
							null, 
							nr_seq_lote_fluxo_p, 
							null, 
							null, 
							null, 
							null, 
							null, 
							null, 
							null, 
							vl_fluxo_w - vl_deducao_w);
			end if;
		end if;
 
		dt_mes_w	:= PKG_DATE_UTILS.ADD_MONTH(dt_mes_w, 1,0);
 
		end loop;
 
elsif (ie_regra_data_p = 'MA') then 
 
	open c02;
	loop 
	fetch c02 into 
		vl_fluxo_w, 
		dt_referencia_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
 
		if (ie_tratar_fim_semana_w = 'S') then 
			dt_referencia_w	:= OBTER_PROXIMO_DIA_UTIL(cd_estabelecimento_p, dt_referencia_w);
		end if;
 
		if (OBTER_SE_FLUXO_LOTE_ESP(cd_estabelecimento_p, cd_conta_financ_p, dt_referencia_w) = 'S') then 
 
			vl_deducao_w	:= coalesce(OBTER_FLUXO_CAIXA_LOTE_REGRA(nr_seq_regra_p, dt_referencia_w, cd_estabelecimento_p, 'VL'), 0);
 
			CALL gerar_fluxo_caixa_lote(	dt_referencia_w, 
						cd_conta_financ_p, 
						'', 
						'25-2', 
						'RE', 
						nm_usuario_p, 
						null, 
						null, 
						null, 
						null, 
						null, 
						null, 
						null, 
						null, 
						nr_seq_lote_fluxo_p, 
						null, 
						null, 
						null, 
						null, 
						null, 
						null, 
						null, 
						vl_fluxo_w - vl_deducao_w);
		end if;
	end loop;
	close c02;
 
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_fluxo_caixa_lote_mes_ant ( nr_seq_lote_fluxo_p bigint, cd_estabelecimento_p bigint, cd_conta_financ_p bigint, ie_regra_data_p text, nr_dia_fixo_p bigint, qt_mes_anterior_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, ie_acumular_fluxo_p text, nm_usuario_p text, cd_empresa_p bigint, nr_seq_regra_p bigint) FROM PUBLIC;

