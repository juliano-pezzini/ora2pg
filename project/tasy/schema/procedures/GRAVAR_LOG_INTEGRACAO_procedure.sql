-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gravar_log_integracao (nm_usuario_p text, nr_seq_evento_p text, ds_parametros_p text, ie_executa_commit_p text, ie_exportar_xml_p text, nr_seq_log_integracao_p INOUT text, cd_estabelecimento_p bigint default 1, cd_setor_atendimento_p bigint default null) AS $body$
DECLARE


nr_seq_informacao_w 	bigint;
nr_sequencia_w		bigint;
nr_seq_projeto_w		bigint;
nr_seq_mens_hl7_w	bigint;
nr_sistema_origem_w	varchar(15);
nr_sistema_destino_w 	varchar(15);
ie_executa_commit_w	boolean := false;

C01 CURSOR FOR
	SELECT	nextval('log_integracao_seq'),
		i.nr_sequencia,
		i.nr_seq_proj_xml,
		i.nr_seq_mens_hl7,
		i.nr_seq_sistema_origem,
		i.nr_seq_sistema_destino
	from	cliente_integracao c,
		informacao_integracao i
	where	c.nr_seq_inf_integracao = i.nr_sequencia
	and	i.nr_seq_evento = nr_seq_evento_p
	and	c.ie_situacao in ('A', 'P')
	and	coalesce(c.cd_estabelecimento_destino, cd_estabelecimento_p) = cd_estabelecimento_p
	and	coalesce(c.cd_setor_atendimento, coalesce(cd_setor_atendimento_p, 9999)) = coalesce(cd_setor_atendimento_p, 9999);


BEGIN

if (ie_executa_commit_p = 'S') then
	ie_executa_commit_w := true;
end if;

open C01;
loop
fetch C01 into
	nr_sequencia_w,
	nr_seq_informacao_w,
	nr_seq_projeto_w,
	nr_seq_mens_hl7_w,
	nr_sistema_origem_w,
	nr_sistema_destino_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	insert into log_integracao(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_sistema_origem,
		nr_seq_sistema_destino,
		ie_status,
		dt_geracao,
		dt_liberacao,
		dt_retorno,
		nr_seq_informacao)
	values (	nr_sequencia_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_sistema_origem_w,
		nr_sistema_destino_w,
		'P',
		clock_timestamp(),
		null,
		null,
		nr_seq_informacao_w);

	if (nr_seq_log_integracao_p IS NOT NULL AND nr_seq_log_integracao_p::text <> '') then
		nr_seq_log_integracao_p := nr_seq_log_integracao_p || ';';
	end if;

	nr_seq_log_integracao_p := nr_seq_log_integracao_p || to_char(nr_sequencia_w);

	if (ie_exportar_xml_p = 'S' and (nr_seq_projeto_w IS NOT NULL AND nr_seq_projeto_w::text <> '')) then
		CALL wheb_exportar_xml_pck.exportar(nr_seq_projeto_w,nr_sequencia_w,'INTEGRACAO',ds_parametros_p);
	end if;

	if (ie_exportar_xml_p = 'S' and (nr_seq_mens_hl7_w IS NOT NULL AND nr_seq_mens_hl7_w::text <> '')) then
		CALL wheb_exportar_hl7_pck.exportar(nr_seq_mens_hl7_w, nr_sequencia_w, ds_parametros_p);
	end if;

	update	log_integracao
	set	dt_liberacao = clock_timestamp()
	where	nr_sequencia = nr_sequencia_w;

	end;
end loop;
close C01;

if (ie_executa_commit_w) then
	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_log_integracao (nm_usuario_p text, nr_seq_evento_p text, ds_parametros_p text, ie_executa_commit_p text, ie_exportar_xml_p text, nr_seq_log_integracao_p INOUT text, cd_estabelecimento_p bigint default 1, cd_setor_atendimento_p bigint default null) FROM PUBLIC;

