-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_baixar_mens_adiant ( nr_titulo_p bigint, cd_pessoa_fisica_p text, cd_cgc_p text, nr_seq_contrato_p bigint, ie_baixar_mens_adiant_p text, cd_estabelecimento_p bigint, nr_seq_mensalidade_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*
 IE_BAIXAR_MENS_ADIANT_P 
N - Nunca baixar
S - Baixar apenas titulos da primeira mensalidade
P - Baixar em qualquer mensalidade desde que gerado pela proposta
T - Baixar todos os adiantamentos
 */
vl_saldo_titulo_w			double precision;
nr_seq_trans_financ_adiant_w		bigint;
cd_tipo_recebimento_w			integer;
nr_seq_baixa_w				integer;
vl_baixa_w				double precision;
ie_primeira_mensalidade_w		varchar(1);
nr_titulo_contab_p			bigint := null;
ie_obriga_movto_w			varchar(1);

c01 CURSOR FOR				/* OPCAO - P */
	SELECT	a.nr_adiantamento,
		a.vl_saldo,
		(	SELECT	coalesce(sum(x.vl_transacao),0)
			from	movto_trans_financ x
			where	x.nr_adiantamento = a.nr_adiantamento) vl_movimentacao
	from	adiantamento a
	where	a.cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	(cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '')
	and	coalesce(a.dt_baixa::text, '') = ''
	and	a.vl_saldo > 0
	and	a.ie_status = 'D'
	and	exists (select	1
			from	pls_contrato		z,
				pls_proposta_adesao	y,
				pls_proposta_pagador	x
			where	x.nr_seq_proposta	= y.nr_sequencia
			and	x.nr_sequencia		= a.nr_seq_proposta_pagador
			and	z.nr_seq_proposta	= y.nr_sequencia
			and	x.cd_pagador		= cd_pessoa_fisica_p
			and	z.nr_sequencia		= nr_seq_contrato_p)
	
union all

	select	a.nr_adiantamento,
		a.vl_saldo,
		(	select	coalesce(sum(x.vl_transacao),0)
			from	movto_trans_financ x
			where	x.nr_adiantamento = a.nr_adiantamento) vl_movimentacao
	from	adiantamento a
	where	a.cd_cgc	= cd_cgc_p
	and	(cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '')
	and	coalesce(a.dt_baixa::text, '') = ''
	and	a.vl_saldo > 0
	and	a.ie_status = 'D'
	and	exists (select	1
			from	pls_contrato		z,
				pls_proposta_adesao	y,
				pls_proposta_pagador	x
			where	x.nr_seq_proposta	= y.nr_sequencia
			and	x.nr_sequencia		= a.nr_seq_proposta_pagador
			and	z.nr_seq_proposta	= y.nr_sequencia
			and	x.cd_cgc_pagador	= cd_cgc_p
			and	z.nr_sequencia		= nr_seq_contrato_p);

c02 CURSOR FOR				/* OPCOES - T-S */
	SELECT	a.nr_adiantamento,
		a.vl_saldo,
		(	SELECT	coalesce(sum(x.vl_transacao),0)
			from	movto_trans_financ x
			where	x.nr_adiantamento = a.nr_adiantamento) vl_movimentacao
	from	adiantamento a
	where	a.cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	(cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '')
	and	coalesce(a.dt_baixa::text, '') = ''
	and	a.vl_saldo > 0
	and	a.ie_status = 'D'
	
union all

	select	a.nr_adiantamento,
		a.vl_saldo,
		(	select	coalesce(sum(x.vl_transacao),0)
			from	movto_trans_financ x
			where	x.nr_adiantamento = a.nr_adiantamento) vl_movimentacao
	from	adiantamento a
	where	a.cd_cgc	= cd_cgc_p
	and	(cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '')
	and	coalesce(a.dt_baixa::text, '') = ''
	and	a.vl_saldo > 0
	and	a.ie_status = 'D';

BEGIN
ie_obriga_movto_w	:= coalesce(obter_valor_param_usuario(801, 44, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p), 'N'); --Permite vincular na baixa apenas adiantamentos lancados pela tesouraria ou controle bancario
if (coalesce(ie_baixar_mens_adiant_p,'N') <> 'N') and (nr_titulo_p IS NOT NULL AND nr_titulo_p::text <> '') and
	((cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') or (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '')) then
	select	nr_seq_trans_fin_baixa,
		cd_tipo_recebimento
	into STRICT	nr_seq_trans_financ_adiant_w,
		cd_tipo_recebimento_w
	from	pls_parametros
	where	cd_estabelecimento	= cd_estabelecimento_p;
	
	if (coalesce(cd_tipo_recebimento_w::text, '') = '') then
		--Nao foi definido o tipo de recebimento das baixas de primeira mensalidade!

		--Verifique nos parametros da operadora.
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(213693);
	end if;
	
	select	coalesce(max(ie_primeira_mensalidade),'N')
	into STRICT	ie_primeira_mensalidade_w
	from	pls_mensalidade		a,
		pls_lote_mensalidade	b
	where	b.nr_sequencia	= a.nr_seq_lote
	and	a.nr_sequencia	= nr_seq_mensalidade_p;
	
	if (ie_baixar_mens_adiant_p = 'P') then
		for r_c01_w in C01 loop
			begin
			
			if (ie_obriga_movto_w = 'N' or r_c01_w.vl_movimentacao > 0) then
				--Tratar para so pegar o valor que e possivel ser baixado
				select	vl_saldo_titulo
				into STRICT	vl_saldo_titulo_w
				from	titulo_receber a
				where	a.nr_titulo	= nr_titulo_p;
				
				if (vl_saldo_titulo_w > 0) then
					if (r_c01_w.vl_saldo < vl_saldo_titulo_w) then
						vl_baixa_w	:= r_c01_w.vl_saldo;
					else
						vl_baixa_w	:= vl_saldo_titulo_w;
					end if;
					
					select	coalesce(max(nr_sequencia),0) + 1
					into STRICT	nr_seq_baixa_w
					from	titulo_receber_liq
					where	nr_titulo	= nr_titulo_p;
					
					insert into titulo_receber_liq(
						nr_titulo,
						nr_sequencia,
						dt_recebimento,
						vl_recebido,
						vl_descontos,
						vl_juros,
						vl_multa,
						cd_moeda,
						dt_atualizacao,
						nm_usuario,
						cd_tipo_recebimento,
						ie_acao,
						nr_adiantamento,
						cd_serie_nf_devol,
						nr_nota_fiscal_devol,
						cd_banco,
						cd_agencia_bancaria,
						nr_documento,
						nr_lote_banco,
						cd_cgc_emp_cred,
						nr_cartao_cred,
						nr_lote_contabil,
						vl_rec_maior,
						vl_glosa,
						nr_seq_trans_fin,
						ie_lib_caixa,
						ds_observacao,
						nr_lote_contab_antecip,
						nr_lote_contab_pro_rata)
					values (nr_titulo_p,
						nr_seq_baixa_w,
						clock_timestamp(),
						vl_baixa_w,
						0,
						0,
						0,
						1,
						clock_timestamp(),
						nm_usuario_p,
						cd_tipo_recebimento_w,
						'I',
						r_c01_w.nr_adiantamento,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						0,
						0,
						0,
						nr_seq_trans_financ_adiant_w,
						'S',
						wheb_mensagem_pck.get_texto(1188406),
						0,
						0);
					
					CALL atualizar_saldo_adiantamento(r_c01_w.nr_adiantamento,nm_usuario_p, null);
					
					CALL atualizar_saldo_tit_rec(nr_titulo_p, nm_usuario_p);
					
					CALL gerar_titulo_rec_liq_cc(cd_estabelecimento_p,null,nm_usuario_p,nr_titulo_p,nr_seq_baixa_w);
					
					nr_titulo_contab_p := pls_gerar_tit_rec_liq_mens(nr_titulo_p, nr_seq_baixa_w, nm_usuario_p, nr_titulo_contab_p);
				end if;
			end if;
			end;
		end loop; --C01
	elsif	((ie_baixar_mens_adiant_p = 'T') or (ie_primeira_mensalidade_w = 'S' and ie_baixar_mens_adiant_p = 'S')) then
		for r_c02_w in C02 loop
			begin
			
			if (ie_obriga_movto_w = 'N' or r_c02_w.vl_movimentacao > 0) then
				--Tratar para so pegar o valor que e possivel ser baixado
				select	vl_saldo_titulo
				into STRICT	vl_saldo_titulo_w
				from	titulo_receber a
				where	a.nr_titulo	= nr_titulo_p;
				
				if (vl_saldo_titulo_w > 0) then
					if (r_c02_w.vl_saldo < vl_saldo_titulo_w) then
						vl_baixa_w	:= r_c02_w.vl_saldo;
					else
						vl_baixa_w	:= vl_saldo_titulo_w;
					end if;
					
					select	coalesce(max(nr_sequencia),0) + 1
					into STRICT	nr_seq_baixa_w
					from	titulo_receber_liq
					where	nr_titulo	= nr_titulo_p;
					
					insert into titulo_receber_liq(
						nr_titulo,
						nr_sequencia,
						dt_recebimento,
						vl_recebido,
						vl_descontos,
						vl_juros,
						vl_multa,
						cd_moeda,
						dt_atualizacao,
						nm_usuario,
						cd_tipo_recebimento,
						ie_acao,
						nr_adiantamento,
						cd_serie_nf_devol,
						nr_nota_fiscal_devol,
						cd_banco,
						cd_agencia_bancaria,
						nr_documento,
						nr_lote_banco,
						cd_cgc_emp_cred,
						nr_cartao_cred,
						nr_lote_contabil,
						vl_rec_maior,
						vl_glosa,
						nr_seq_trans_fin,
						ie_lib_caixa,
						ds_observacao,
						nr_lote_contab_antecip,
						nr_lote_contab_pro_rata)
					values (nr_titulo_p,
						nr_seq_baixa_w,
						clock_timestamp(),
						vl_baixa_w,
						0,
						0,
						0,
						1,
						clock_timestamp(),
						nm_usuario_p,
						cd_tipo_recebimento_w,
						'I',
						r_c02_w.nr_adiantamento,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						0,
						0,
						0,
						nr_seq_trans_financ_adiant_w,
						'S',
						'Baixa realizada automaticamente pelo adiantamento',
						0,
						0);
					
					CALL atualizar_saldo_adiantamento(r_c02_w.nr_adiantamento,nm_usuario_p, null);
					
					CALL atualizar_saldo_tit_rec(nr_titulo_p, nm_usuario_p);
					
					CALL gerar_titulo_rec_liq_cc(cd_estabelecimento_p,null,nm_usuario_p,nr_titulo_p,nr_seq_baixa_w);
					
					nr_titulo_contab_p := pls_gerar_tit_rec_liq_mens(nr_titulo_p, nr_seq_baixa_w, nm_usuario_p, nr_titulo_contab_p);
				end if;
			end if;
			end;
		end loop; --C02
	end if;
end if;

--commit - procedure chamada dentro de outra.
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_baixar_mens_adiant ( nr_titulo_p bigint, cd_pessoa_fisica_p text, cd_cgc_p text, nr_seq_contrato_p bigint, ie_baixar_mens_adiant_p text, cd_estabelecimento_p bigint, nr_seq_mensalidade_p bigint, nm_usuario_p text) FROM PUBLIC;

