-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_banco_reembolso (nr_seq_protocolo_p bigint, nr_seq_segurado_p bigint, ie_tipo_resp_credito_p text, cd_pessoa_fisica_p text, ie_tipo_acao_p text, cd_banco_p INOUT text, ie_situacao_p INOUT text, cd_pessoa_fisica_out_p INOUT text, cd_agencia_bancaria_p INOUT text, ie_digito_agencia_p INOUT text, cd_conta_p INOUT text, ie_digito_conta_p INOUT text, ds_mensagem_retorno_p INOUT text) AS $body$
DECLARE


cd_banco_w                      pessoa_fisica_conta.cd_banco%type;
cd_agencia_bancaria_w           pessoa_fisica_conta.cd_agencia_bancaria%type;
nr_conta_w                      pessoa_fisica_conta.nr_conta%type;
nr_digito_conta_w               pessoa_fisica_conta.nr_digito_conta%type;
ie_digito_agencia_w             pessoa_fisica_conta.ie_digito_agencia%type;
cd_pessoa_fisica_w              pessoa_fisica_conta.cd_pessoa_fisica%type;
cd_cgc_w                        pessoa_juridica_conta.cd_cgc%type;
nr_contrato_principal_w         bigint;
nr_seq_subestipulante_w         bigint;
cd_cgc_estipulante_w            pessoa_juridica_conta.cd_cgc%type;
cd_pf_estipulante_w             pessoa_fisica_conta.cd_pessoa_fisica%type;
nr_seq_titular_w                bigint;
ie_situacao_w                   varchar(1);
ds_mensagem_retorno_w		varchar(255);


BEGIN

--inicializando as variáveis pois estavam deixando sujeira no código
cd_banco_w     		:= null;
cd_agencia_bancaria_w  	:= null;
ie_digito_agencia_w  	:= null;
nr_conta_w    		:= null;
nr_digito_conta_w  	:= null;

begin
select 	b.cd_cgc_estipulante,
	b.cd_pf_estipulante,
	coalesce(b.nr_contrato_principal,0),
	a.nr_seq_subestipulante
into STRICT    cd_cgc_estipulante_w,
	cd_pf_estipulante_w,
	nr_contrato_principal_w,
	nr_seq_subestipulante_w
from    pls_contrato    b,
	pls_segurado    a
where   a.nr_sequencia          = nr_seq_segurado_p
and     a.nr_seq_contrato       = b.nr_sequencia;
exception
when others then
	cd_cgc_estipulante_w		:= 'X';
	cd_pf_estipulante_w		:= 'X';
	nr_contrato_principal_w		:= 0;
	nr_seq_subestipulante_w		:= 0;
end;

if (ie_tipo_resp_credito_p = 'P')  then -- Pagador
        select  max(a.cd_pessoa_fisica),
                max(a.cd_cgc)
        into STRICT    cd_pessoa_fisica_w,
                cd_cgc_w
        from    pls_contrato_pagador a,
                pls_segurado b
        where   a.nr_sequencia = b.nr_seq_pagador
        and     b.nr_sequencia = nr_seq_segurado_p;
elsif (ie_tipo_resp_credito_p = 'E')  then    --Estipulante do beneficiário
	if (coalesce(cd_pf_estipulante_w,'X') = 'X') and (coalesce(cd_cgc_estipulante_w,'X') = 'X') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(336954,null); --Não existe Estipulante cadastrado no contrato do segurado.
	else
		cd_pessoa_fisica_w      := cd_pf_estipulante_w;
		cd_cgc_w                := cd_cgc_estipulante_w;
	end if;
elsif (ie_tipo_resp_credito_p = 'CP') then  --Contratante principal
        select  max(cd_cgc_estipulante),
                max(cd_pf_estipulante)
        into STRICT    cd_cgc_w,
                cd_pessoa_fisica_w
        from    pls_contrato
        where   nr_sequencia    = nr_contrato_principal_w;
		if (coalesce(cd_cgc_w::text, '') = '') and (coalesce(cd_pessoa_fisica_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(336955,null); --Não existe contratante principal cadastrado no contrato do segurado.
	end if;

elsif (ie_tipo_resp_credito_p = 'SE') then -- Subestipulante
	if (nr_seq_subestipulante_w > 0) then
		select  max(cd_pessoa_fisica),
			max(cd_cgc)
		into STRICT    cd_pessoa_fisica_w,
			cd_cgc_w
		from    pls_sub_estipulante
		where   nr_sequencia    = nr_seq_subestipulante_w;
	else
		CALL wheb_mensagem_pck.exibir_mensagem_abort(336667,null); --Não existe Subestipulante cadastrado no contrato do segurado.
	end if;
elsif (ie_tipo_resp_credito_p = 'T') then  --Titular
        select  coalesce(max(nr_seq_titular), 0)
        into STRICT    nr_seq_titular_w
        from    pls_segurado
        where   nr_sequencia    = nr_seq_segurado_p;
        if (nr_seq_titular_w       <> 0) then
                select  max(cd_pessoa_fisica)
                into STRICT    cd_pessoa_fisica_w
                from    pls_segurado
                where   nr_sequencia  = nr_seq_titular_w;
        elsif (nr_seq_titular_w       = 0) then
                select  max(cd_pessoa_fisica)
                into STRICT    cd_pessoa_fisica_w
                from    pls_segurado
                where   nr_sequencia    = nr_seq_segurado_p;
        end if;
        cd_cgc_w        := null;
elsif (ie_tipo_resp_credito_p = 'PI') then  -- Pessoa física identificada
        cd_pessoa_fisica_w      := cd_pessoa_fisica_p;
elsif (ie_tipo_resp_credito_p = 'B')  then    -- Beneficiário
        select  max(cd_pessoa_fisica)
        into STRICT    cd_pessoa_fisica_w
        from    pls_segurado
        where   nr_sequencia    = nr_seq_segurado_p;
end if;

if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '')     then
        select  max(a.cd_banco),
                max(a.cd_agencia_bancaria),
                max(a.ie_digito_agencia),
                max(a.nr_conta),
                max(a.nr_digito_conta)
        into STRICT    cd_banco_w,
                cd_agencia_bancaria_w,
                ie_digito_agencia_w,
                nr_conta_w,
                nr_digito_conta_w
        from    pessoa_fisica_conta     a
        where   a.cd_pessoa_fisica      = cd_pessoa_fisica_w
	and	a.ie_conta_pagamento	= 'S'
        and     a.ie_situacao           = 'A';

	if (coalesce(cd_banco_w::text, '') = '') then
		select  max(a.cd_banco),
			max(a.cd_agencia_bancaria),
			max(a.ie_digito_agencia),
			max(a.nr_conta),
			max(a.nr_digito_conta)
		into STRICT    cd_banco_w,
			cd_agencia_bancaria_w,
			ie_digito_agencia_w,
			nr_conta_w,
			nr_digito_conta_w
		from    pessoa_fisica_conta     a
		where   a.cd_pessoa_fisica      = cd_pessoa_fisica_w
		and     a.ie_situacao           = 'A';
	end if;

        cd_pessoa_fisica_out_p  := cd_pessoa_fisica_w;
        cd_banco_p      := cd_banco_w;
        ie_situacao_p   := ie_situacao_w;

        cd_cgc_w := null;
end if;

if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '')       then
        select  max(cd_banco),
                max(cd_agencia_bancaria),
                max(ie_digito_agencia),
                max(nr_conta),
                max(nr_digito_conta),
                max(ie_situacao)
        into STRICT    cd_banco_w,
                cd_agencia_bancaria_w,
                ie_digito_agencia_w,
                nr_conta_w,
                nr_digito_conta_w,
                ie_situacao_w
        from    pessoa_juridica_conta a
        where   a.cd_cgc                = cd_cgc_w
	and	a.ie_conta_pagamento	= 'S'
        and     ie_situacao             = 'A';

	if (coalesce(cd_banco_w::text, '') = '') then
		select  max(cd_banco),
			max(cd_agencia_bancaria),
			max(ie_digito_agencia),
			max(nr_conta),
			max(nr_digito_conta),
			max(ie_situacao)
		into STRICT    cd_banco_w,
			cd_agencia_bancaria_w,
			ie_digito_agencia_w,
			nr_conta_w,
			nr_digito_conta_w,
			ie_situacao_w
		from    pessoa_juridica_conta a
		where   a.cd_cgc                = cd_cgc_w
		and     ie_situacao             = 'A';
	end if;

        cd_banco_p              := cd_banco_w;
        ie_situacao_p           := ie_situacao_w;
end if;

if (coalesce(cd_banco_w, 0) = 0) and (coalesce(cd_agencia_bancaria_w::text, '') = '') and (coalesce(nr_conta_w::text, '') = '') then
	/*Não foi possível obter os dados bancários do #@DS_TIPO_RESP_CREDITO_P#@, deseja cadastrar?*/

	ds_mensagem_retorno_p :=wheb_mensagem_pck.get_texto(291430,'DS_TIPO_RESP_CREDITO_P=' || obter_valor_dominio(2261,ie_tipo_resp_credito_p));
else
	if (ie_tipo_acao_p = 'B') then
		update  pls_protocolo_conta
		set     cd_banco                = cd_banco_w,
			cd_agencia_bancaria     = cd_agencia_bancaria_w,
			ie_digito_agencia       = ie_digito_agencia_w,
			cd_conta                = nr_conta_w,
			ie_digito_conta         = nr_digito_conta_w
		where   nr_sequencia            = nr_seq_protocolo_p;
	elsif (ie_tipo_acao_p = 'T') then
		cd_banco_p               := cd_banco_w;
		cd_agencia_bancaria_p    := cd_agencia_bancaria_w;
		ie_digito_agencia_p      := ie_digito_agencia_w;
		cd_conta_p               := nr_conta_w;
		ie_digito_conta_p        := nr_digito_conta_w;
	end if;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_banco_reembolso (nr_seq_protocolo_p bigint, nr_seq_segurado_p bigint, ie_tipo_resp_credito_p text, cd_pessoa_fisica_p text, ie_tipo_acao_p text, cd_banco_p INOUT text, ie_situacao_p INOUT text, cd_pessoa_fisica_out_p INOUT text, cd_agencia_bancaria_p INOUT text, ie_digito_agencia_p INOUT text, cd_conta_p INOUT text, ie_digito_conta_p INOUT text, ds_mensagem_retorno_p INOUT text) FROM PUBLIC;

