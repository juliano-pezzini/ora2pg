-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE generate_header_file (nr_seq_batch_p bigint, nm_usuario_p text, returned_value_p INOUT bigint, other_exception_p INOUT text) AS $body$
DECLARE

  cd_facility_number_w  pessoa_juridica.cd_cnes%TYPE;
  cd_estabelecimento_w  estabelecimento.cd_estabelecimento%TYPE;
  dt_initial_date_ref_w timestamp;
  dt_end_date_ref_w     timestamp;
  ds_header_w           text := '';
  ds_file_w             text := empty_clob;
  ds_content_w          text := empty_clob;
  nr_file_seq_w         bigint;
  c_header_content CURSOR FOR
    SELECT segment_header.ie_syntax         file_type, 
           segment_header.number_of_records total_records 
    FROM   qhapdc_segment_header segment_header, 
           qhapdc_file qha_file, 
           qhapdc_batch_sending batch_seg 
    WHERE  batch_seg.nr_sequencia = nr_seq_batch_p 
           AND batch_seg.nr_sequencia = qha_file.nr_qhapdc_batch 
           AND qha_file.nr_sequencia = segment_header.nr_seq_file 
           AND segment_header.ie_syntax <> 'HDR';
BEGIN
    SELECT a.cd_estabelecimento, 
           coalesce(a.dt_initial_ref, clock_timestamp()), 
           a.dt_final_ref 
    INTO STRICT   cd_estabelecimento_w, dt_initial_date_ref_w, dt_end_date_ref_w 
    FROM   qhapdc_batch_sending a 
    WHERE  a.nr_sequencia = nr_seq_batch_p;

    /* five-digit facility number */
 
    SELECT coalesce(pj.cd_cnes, pj.cd_rfc) 
    INTO STRICT   cd_facility_number_w 
    FROM   pessoa_juridica pj, 
           estabelecimento es 
    WHERE  pj.cd_cgc = es.cd_cgc 
           AND es.cd_estabelecimento = cd_estabelecimento_w;

    SELECT 'E' 
           || Lpad(cd_facility_number_w, 5, '0') 
           || To_char(dt_initial_date_ref_w, 'yyyymmdd') 
           || To_char(dt_end_date_ref_w, 'yyyymmdd') 
           || To_char(clock_timestamp(), 'yyyymmdd') 
    INTO STRICT   ds_header_w 
;

    FOR r_c_header_content IN c_header_content LOOP 
        SELECT 'F' 
               || r_c_header_content.file_type 
               || 'N' 
               ||Lpad(r_c_header_content.total_records, 5, '0') 
               || 'A' 
               || '00000' --DECODE(NR_MRN, NULL, '00000' , Rpad(NR_MRN,5,'0')) 
               || 'D' 
               || '00000' --DECODE(NR_MRN, NULL, '00000' , Rpad(NR_MRN,5,'0')) 
               || Lpad(' ', 8, ' ') 
        INTO STRICT   ds_file_w 
;

        SELECT Concat(ds_header_w, ds_file_w 
               --        Concat(Chr (13)  

               -- 

               --                                          || Chr(10)  

               -- 

               --                                          || ds_file_w, Chr (13)  

               -- 

               --                                          || Chr(10)) 
               ) 
        INTO STRICT   ds_header_w 
;
    END LOOP;

    SELECT af.nr_sequencia 
    INTO STRICT   nr_file_seq_w 
    FROM   qhapdc_file af, 
           qhapdc_segment_header sh 
    WHERE  af.nr_qhapdc_batch = nr_seq_batch_p 
           AND af.nr_sequencia = sh.nr_seq_file 
           AND sh.ie_syntax = 'HDR'  LIMIT 1;

    INSERT INTO qhapdc_file_data(nr_sequencia, 
                 dt_atualizacao, 
                 nm_usuario, 
                 dt_atualizacao_nrec, 
                 nm_usuario_nrec, 
                 nr_seq_file, 
                 ds_file_content) 
    VALUES (nextval('qhapdc_file_data_seq'), 
                 clock_timestamp(), 
                 nm_usuario_p, 
                 clock_timestamp(), 
                 nm_usuario_p, 
                 nr_file_seq_w, 
                 ds_header_w);

    NULL;

    returned_value_p := 1;

    other_exception_p := NULL;
EXCEPTION 
  WHEN data_exception OR unique_violation OR invalid_cursor_state THEN 
             other_exception_p := Substr(SQLERRM, 1, 100);

             returned_value_p := 0;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE generate_header_file (nr_seq_batch_p bigint, nm_usuario_p text, returned_value_p INOUT bigint, other_exception_p INOUT text) FROM PUBLIC;

