-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_dados_eme_regulacao ( nr_sequencia_p bigint, cd_cgc_p text, nm_usuario_p text, cd_pessoa_fisica_p text, ie_sexo_p INOUT text, ds_idade_p INOUT text, dt_nascimento_p INOUT text, cd_cep_p INOUT text, nr_telefone_p INOUT text, ds_endereco_p INOUT text, nr_endereco_p INOUT text, ds_complemento_p INOUT text, ds_bairro_p INOUT text, ds_cidade_p INOUT text, sg_estado_p INOUT text, cd_codigo_conv_p INOUT text, dt_validade_cart_p INOUT text, cd_usuario_conv_p INOUT text) AS $body$
DECLARE

 
cd_cep_w			varchar(20);
nr_telefone_w		varchar(255);
ds_endereco_w		varchar(255);
nr_endereco_w		varchar(255);
ds_complemento_w	varchar(255);
ds_bairro_w			varchar(255);
ds_cidade_w			varchar(255);
sg_estado_w			varchar(255);
ie_sexo_w			varchar(1);
ds_idade_w			varchar(100);
dt_nascimento_w		varchar(15);
cd_codigo_conv_w	varchar(30);
cd_usuario_conv_w	varchar(30);
dt_validade_cart_w	varchar(15);

 

BEGIN 
if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then 
	begin 
	if (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') then 
		begin 
		cd_cep_w	:=	substr(obter_dados_pf_pj(null,cd_cgc_p,'CEP'),1,20);
		nr_telefone_w	:=	obter_dados_pf_pj(null,cd_cgc_p,'T');
		nr_endereco_w	:=	obter_dados_pf_pj(null,cd_cgc_p,'NR');
		sg_estado_w	:=	obter_dados_pf_pj(null,cd_cgc_p,'UF');
 
		select	max(cd_codigo_convenio) 
		into STRICT	cd_codigo_conv_w 
		from	eme_pf_contrato 
		where	cd_cgc = cd_cgc_p;
 
		select	max(cd_usuario_convenio) 
		into STRICT	cd_usuario_conv_w 
		from	eme_regulacao 
		where	cd_cgc = cd_cgc_p;
 
		end;
	elsif (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then 
		begin 
		cd_cep_w 	  :=	substr(obter_dados_pf_pj(cd_pessoa_fisica_p,null,'CEP'),1,20);
		nr_telefone_w	:=	obter_dados_pf_pj(cd_pessoa_fisica_p,null,'T');
		nr_endereco_w	:=	obter_dados_pf_pj(cd_pessoa_fisica_p,null,'NR');
		sg_estado_w	  :=	obter_dados_pf_pj(cd_pessoa_fisica_p,null,'UF');
		ie_sexo_w	  := 	obter_sexo_pf(cd_pessoa_fisica_p, 'C');
		ds_idade_w	  := 	obter_idade_pf(cd_pessoa_fisica_p, clock_timestamp(), 'AM');
		 
		dt_nascimento_w	:=	substr(obter_dados_pf(cd_pessoa_fisica_p,'DN'),1,15);
		ds_endereco_w	:=	substr(obter_compl_pf(cd_pessoa_fisica_p,1,'EN'),1,255);
		ds_complemento_w :=	substr(obter_compl_pf(cd_pessoa_fisica_p,1,'CO'),1,255);
		ds_bairro_w		:=	substr(obter_compl_pf(cd_pessoa_fisica_p,1,'B'),1,255);
		ds_cidade_w		:=	substr(obter_compl_pf(cd_pessoa_fisica_p,1,'DM'),1,255);
		 
 
		select	max(cd_codigo_convenio) 
		into STRICT	cd_codigo_conv_w 
		from	eme_pf_contrato 
		where	cd_pessoa_fisica = cd_pessoa_fisica_p;
 
		select	max(cd_usuario_convenio) 
		into STRICT	cd_usuario_conv_w 
		from	eme_regulacao 
		where	cd_pessoa_fisica = cd_pessoa_fisica_p;
		 
		select	max(dt_validade_carteira) 
		into STRICT	dt_validade_cart_w 
		from	eme_regulacao 
		where	cd_pessoa_fisica = cd_pessoa_fisica_p;
		 
		 
		end;
	end if;
	end;
end if;
commit;
cd_cep_p			:= cd_cep_w;
nr_telefone_p		:= nr_telefone_w;
nr_endereco_p 		:= nr_endereco_w;
sg_estado_p 		:= sg_estado_w;
ie_sexo_p 			:= ie_sexo_w;
ds_idade_p			:= ds_idade_w;
cd_codigo_conv_p 	:= cd_codigo_conv_w;
cd_usuario_conv_p	:= cd_usuario_conv_w;
dt_nascimento_p		:=	dt_nascimento_w;
ds_endereco_p		:=	ds_endereco_w;
ds_complemento_p	:=	ds_complemento_w;
ds_bairro_p			:=	ds_bairro_w;
ds_cidade_p			:=	ds_cidade_w;
dt_validade_cart_p	:=	dt_validade_cart_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_dados_eme_regulacao ( nr_sequencia_p bigint, cd_cgc_p text, nm_usuario_p text, cd_pessoa_fisica_p text, ie_sexo_p INOUT text, ds_idade_p INOUT text, dt_nascimento_p INOUT text, cd_cep_p INOUT text, nr_telefone_p INOUT text, ds_endereco_p INOUT text, nr_endereco_p INOUT text, ds_complemento_p INOUT text, ds_bairro_p INOUT text, ds_cidade_p INOUT text, sg_estado_p INOUT text, cd_codigo_conv_p INOUT text, dt_validade_cart_p INOUT text, cd_usuario_conv_p INOUT text) FROM PUBLIC;

