-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_pls_perm_receb_enc_analis () AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Transferir os valors do campo IE_ENCAMINHAR_GRUPO_AUT da tabela PLS_CLASSIF_GRUPO_AUDITOR para o campo IE_RECEBE_ENC_ANALISE da tabela PLS_GRUPO_AUDITOR.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_grupo_w			bigint;
qt_registros_w			bigint;
ie_encaminhar_grupo_aut_w	varchar(2);

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_grupo_auditor
	where	ie_situacao	= 'A'
	and	ie_tipo_grupo	in ('A','AA');

C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		coalesce(b.ie_encaminhar_grupo_aut,'S')
	from	pls_grupo_auditor		a,
		pls_classif_grupo_auditor	b
	where	a.nr_seq_classificacao		= b.nr_sequencia
	and	a.ie_situacao 			= 'A'
	and	ie_tipo_grupo			in ('A','AA');


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_grupo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	count(1)
	into STRICT	qt_registros_w
	from	pls_regra_grupo_aud_aut
	where	nr_seq_grupo_auditor	= nr_seq_grupo_w;

	if (qt_registros_w	= 0) then
		insert	into pls_regra_grupo_aud_aut(nr_sequencia, nr_seq_grupo_auditor, dt_atualizacao,
			 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
			 ie_recebe_enc_analise, ie_recebe_solic_acao)
		values (nextval('pls_regra_grupo_aud_aut_seq'), nr_seq_grupo_w, clock_timestamp(),
			 'BACA', clock_timestamp(), 'BACA',
			 'S', 'S');
	end if;
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	nr_seq_grupo_w,
	ie_encaminhar_grupo_aut_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	update	pls_regra_grupo_aud_aut
	set	ie_recebe_enc_analise	= ie_encaminhar_grupo_aut_w
	where	nr_seq_grupo_auditor	= nr_seq_grupo_w;
	end;
end loop;
close C02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_pls_perm_receb_enc_analis () FROM PUBLIC;

