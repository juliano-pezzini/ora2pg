-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_xml_lote_faturamento ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ds_cid_w			varchar(255);
nm_produto_w			varchar(255);
nm_tabela_cid_w			varchar(255);
nm_contratado_w			varchar(255);
nm_profissional_exec_w		varchar(255);
nm_beneficiario_w		varchar(255);
cd_guia_prestador_w		varchar(30);
cd_usuario_plano_w		varchar(30);
cd_registro_ans_w		varchar(30);
nr_conselho_exec_w		varchar(20);			
cd_cbos_w			varchar(15);	
cd_cgc_contratado_w		varchar(14);
ie_tipo_atendimento_w		varchar(10);
ie_tipo_saida_w			varchar(10);				
sg_conselho_exec_w		varchar(10);			
cd_cid_w			varchar(10);
ie_tipo_guia_w			varchar(5);
ie_carteira_fatura_tiss_w	varchar(2);				
uf_conselho_exec_w		varchar(2);
cd_procedimento_w		bigint;
nr_seq_fatura_envio_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_segurado_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_fatura_w			bigint;
nr_seq_contrato_w		bigint;
nr_seq_intercambio_w		bigint;
nr_seq_regra_w			bigint;
dt_atendimento_referencia_w	timestamp;
dt_atendimento_w		timestamp;
cd_medico_executor_w		varchar(10);
nr_cpf_executor_w		varchar(11);
ie_carater_atend_w		varchar(1);
nr_seq_conta_proc_w		bigint;
nr_seq_fatura_conta_w		bigint;
nr_seq_regra_adic_w		bigint;
ie_valor_filme_w		varchar(1);
ie_taxa_administracao_xml_w	varchar(1);
				
C01 CURSOR FOR 
	SELECT	a.nr_sequencia 
	from	pls_fatura 	a 
	where	a.nr_seq_lote 	= nr_seq_lote_p;
	
C02 CURSOR FOR 	 
	SELECT	c.nr_sequencia nr_seq_conta, 
		c.nr_seq_segurado nr_seq_segurado, 
		c.ie_tipo_guia, 
		e.nr_protocolo_ans cd_registro_ans, 
		c.dt_atendimento_referencia dt_atendimento_ref, 
		c.cd_guia cd_guia_prestador, 
		g.cd_usuario_plano, 
		i.nm_pessoa_fisica nm_beneficiario, 
		e.ds_plano nm_produto, 
		h.cd_cgc_estipulante cd_cgc_contratado, 
		obter_razao_social(h.cd_cgc_estipulante) nm_contratado, 
		substr(obter_nome_medico(c.cd_medico_executor,'N'),1,255) nm_profissional_exec, 
		c.sg_conselho_exec, 
		somente_numero(c.nr_crm_exec) nr_conselho_exec, 
		c.uf_crm_exec uf_conselho_exec, 
		(SELECT	x.cd_cbo 
		from	cbo_saude x 
		where	x.nr_sequencia	= c.nr_seq_cbo_saude) cd_cbos, 
		'' nm_tabela_cid, 
		(select	max(cd_doenca) 
		from	pls_diagnostico_conta 
		where	nr_seq_conta	= c.nr_sequencia) cd_cid, 
		(select	max(ds_doenca_cid) 
		from	cid_doenca 
		where	cd_doenca_cid	= 	(select	max(cd_doenca) 
						from	pls_diagnostico_conta 
						where	nr_seq_conta	= c.nr_sequencia)) ds_cid, 
		d.dt_procedimento dt_atendimento, 
		d.cd_procedimento, 
		d.ie_origem_proced, 
		d.nr_sequencia, 
		(select	max(cd_tipo_atendimento) 
		from	pls_tipo_atendimento 
		where	nr_sequencia	= c.nr_seq_tipo_atendimento) ie_tipo_atendimento, 
		(select	max(cd_tiss) 
		from	pls_motivo_saida_sadt 
		where	nr_sequencia	= c.nr_seq_saida_spsadt) ie_tipo_saida, 
		f.nr_seq_contrato, 
		f.nr_seq_intercambio, 
		c.cd_medico_executor, 
		CASE WHEN coalesce(c.cd_medico_executor::text, '') = '' THEN pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CPF')  ELSE obter_cpf_pessoa_fisica(c.cd_medico_executor) END  nr_cpf_executor, 
		c.ie_carater_internacao, 
		b.nr_sequencia 
	FROM pessoa_fisica i, pls_segurado_carteira g, pls_conta_proc d, pls_fatura_conta b, pls_fatura_evento a, pls_segurado f
LEFT OUTER JOIN pls_contrato h ON (f.nr_seq_contrato = h.nr_sequencia)
, pls_conta c
LEFT OUTER JOIN pls_plano e ON (c.nr_seq_plano = e.nr_sequencia)
WHERE a.nr_seq_fatura 	= nr_seq_fatura_w and a.nr_sequencia		= b.nr_seq_fatura_evento and c.nr_sequencia 		= b.nr_seq_conta and c.nr_sequencia		= d.nr_seq_conta  and f.nr_sequencia		= c.nr_seq_segurado and f.nr_sequencia 		= g.nr_seq_segurado and f.cd_pessoa_fisica 	= i.cd_pessoa_fisica;
	
				 

BEGIN 
delete	FROM pls_fatura_guia_envio 
where	nr_seq_lote = nr_seq_lote_p;
 
delete	FROM pls_fat_proc_adic 
where	nm_usuario = nm_usuario_p;
 
if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then 
	select	coalesce(a.ie_carteira_fatura_tiss,'C') 
	into STRICT	ie_carteira_fatura_tiss_w 
	from	pls_parametro_faturamento a 
	where	cd_estabelecimento = cd_estabelecimento_p;
 
	open C01;
	loop 
	fetch C01 into 
		nr_seq_fatura_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		open C02;
		loop 
		fetch C02 into 
			nr_seq_conta_w, 
			nr_seq_segurado_w, 
			ie_tipo_guia_w, 
			cd_registro_ans_w, 
			dt_atendimento_referencia_w, 
			cd_guia_prestador_w, 
			cd_usuario_plano_w, 
			nm_beneficiario_w, 
			nm_produto_w, 
			cd_cgc_contratado_w, 
			nm_contratado_w, 
			nm_profissional_exec_w, 
			sg_conselho_exec_w, 
			nr_conselho_exec_w, 
			uf_conselho_exec_w, 
			cd_cbos_w, 
			nm_tabela_cid_w, 
			cd_cid_w, 
			ds_cid_w, 
			dt_atendimento_w, 
			cd_procedimento_w, 
			ie_origem_proced_w, 
			nr_seq_conta_proc_w, 
			ie_tipo_atendimento_w, 
			ie_tipo_saida_w, 
			nr_seq_contrato_w, 
			nr_seq_intercambio_w, 
			cd_medico_executor_w, 
			nr_cpf_executor_w, 
			ie_carater_atend_w, 
			nr_seq_fatura_conta_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			SELECT * FROM pls_obter_regra_adic_xml_fat( nr_seq_fatura_w, null, nr_seq_conta_proc_w, null, nr_seq_regra_adic_w, ie_valor_filme_w) INTO STRICT nr_seq_regra_adic_w, ie_valor_filme_w;
			nr_seq_regra_w := pls_obter_parametros_fat_envio( nr_seq_contrato_w, nr_seq_intercambio_w, nr_seq_regra_w);
			 
			ie_valor_filme_w := coalesce(ie_valor_filme_w,'N');
			 
			if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then 
				select	max(ie_carteira), 
					max(ie_taxa_administracao_xml) 
				into STRICT	ie_carteira_fatura_tiss_w, 
					ie_taxa_administracao_xml_w 
				from	pls_parametros_fat_envio 
				where	nr_sequencia	= nr_seq_regra_w;
			end if;
			 
			ie_taxa_administracao_xml_w := coalesce(ie_taxa_administracao_xml_w,'N');
			 
			if (ie_carteira_fatura_tiss_w = 'M') then 
				select coalesce(max(b.cd_matricula_estipulante),cd_usuario_plano_w) 
				into STRICT	cd_usuario_plano_w 
				from  pls_conta a, 
					pls_guia_plano b 
				where  a.cd_guia	= b.cd_guia					 
				and   a.nr_sequencia 	= nr_seq_conta_w;
			end if;
			select	nextval('pls_fatura_guia_envio_seq') 
			into STRICT	nr_seq_fatura_envio_w 
			;
				 
			insert	into pls_fatura_guia_envio(nr_sequencia, 
				cd_estabelecimento, 
				nr_seq_fatura, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				nr_seq_conta, 
				nr_seq_segurado, 
				ie_tipo_guia, 
				cd_registro_ans, 
				dt_emissao_guia, 
				cd_guia_prestador, 
				cd_usuario_plano, 
				nm_beneficiario, 
				nm_produto, 
				cd_cgc_contratado, 
				nm_contratado, 
				nm_profissional_executante, 
				sg_conselho_executante, 
				nr_conselho_executante, 
				uf_conselho_executante, 
				cd_cbos, 
				nm_tabela_cid, 
				cd_cid, 
				ds_cid, 
				dt_atendimento, 
				cd_procedimento, 
				ie_origem_proced, 
				ie_tipo_atendimento, 
				ie_tipo_saida, 
				cd_medico_executor, 
				nr_cpf_executor, 
				ie_carater_atend, 
				nr_seq_lote, 
				ie_taxa_administracao_xml) 
			values (nr_seq_fatura_envio_w, 
				cd_estabelecimento_p, 
				nr_seq_fatura_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_conta_w, 
				nr_seq_segurado_w, 
				ie_tipo_guia_w, 
				cd_registro_ans_w, 
				dt_atendimento_referencia_w, 
				cd_guia_prestador_w, 
				cd_usuario_plano_w, 
				nm_beneficiario_w, 
				nm_produto_w, 
				cd_cgc_contratado_w, 
				nm_contratado_w, 
				nm_profissional_exec_w, 
				sg_conselho_exec_w, 
				nr_conselho_exec_w, 
				uf_conselho_exec_w, 
				cd_cbos_w, 
				nm_tabela_cid_w, 
				cd_cid_w, 
				ds_cid_w, 
				dt_atendimento_w, 
				cd_procedimento_w, 
				ie_origem_proced_w, 
				ie_tipo_atendimento_w, 
				ie_tipo_saida_w, 
				cd_medico_executor_w, 
				nr_cpf_executor_w, 
				ie_carater_atend_w, 
				nr_seq_lote_p, 
				ie_taxa_administracao_xml_w);
 
			-- Gerar os itens adicionais para o XML de faturamento 
			CALL pls_gerar_itens_adic_xml_fat( nr_seq_regra_adic_w, ie_valor_filme_w, nr_seq_fatura_conta_w, nr_seq_conta_proc_w, 'N', nm_usuario_p);
			end;
		end loop;
		close C02;
		end;
	end loop;
	close C01;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_xml_lote_faturamento ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

