-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE excluir_atend_pac_unidade ( nr_atendimento_p bigint, dt_entrada_unidade_p timestamp, nm_usuario_p text, ds_erro_p INOUT text, nr_seq_interno_p bigint) AS $body$
DECLARE


dt_saida_unidade_w		timestamp;
qt_procedimento_w		integer;
qt_cirurgia_w			integer;
qt_material_pac_w		integer;
cd_classif_setor_w		varchar(02);
qt_reg_sem_saida_w		smallint;
qt_devolucao_w			smallint;
qt_reg_passagem_w		smallint;
ie_permite_excluir_pass_w	varchar(1);
ie_unid_livre_excluir_pass_w	varchar(1);
ie_tipo_passagem_w		varchar(5);
cd_setor_unidade_w		varchar(255);
cd_unidade_basica_w		varchar(255);
cd_unidade_compl_w		varchar(255);
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
nr_seq_interno_w		unidade_atendimento.nr_seq_interno%type;
nr_acompanhate_w		atend_paciente_unidade.nr_acompanhante%type;
nr_seq_interno_ant_w		atend_paciente_unidade.nr_seq_interno%type;
nr_seq_interno_prox_w		atend_paciente_unidade.nr_seq_interno%type;
dt_entrada_unid_w		timestamp;
cd_tipo_acomodacao_w	tipo_acomodacao.cd_tipo_acomodacao%type;
ds_consist_tipo_acomod_w 	varchar(255);
ie_atendimento_disp_w		varchar(255);
ie_leito_radioterapia_w		varchar(255);
cd_setor_anterior_w			bigint;
cd_setor_atend_w			bigint;
ie_permite_inicio_higien_w 	varchar(255);
ds_erro_w					varchar(255);


BEGIN

ds_erro_p	:= null;



select	count(*)
into STRICT	qt_procedimento_w
from	procedimento_paciente
where	nr_atendimento		= nr_atendimento_p
and	dt_entrada_unidade	= dt_entrada_unidade_p
and	coalesce(cd_motivo_exc_conta::text, '') = '';

select	count(*)
into STRICT	qt_material_pac_w
from	material_atend_paciente
where	nr_atendimento		= nr_atendimento_p
and	dt_entrada_unidade	= dt_entrada_unidade_p
and	coalesce(cd_motivo_exc_conta::text, '') = '';



if (qt_material_pac_w > 0) or (qt_procedimento_w > 0) then
	ds_erro_p	:= ds_erro_p || wheb_mensagem_pck.get_texto(280339,null) || chr(13) || chr(10);
end if;

select	count(*)
into STRICT	qt_cirurgia_w
from	cirurgia
where	nr_atendimento		= nr_atendimento_p
and	dt_entrada_unidade	= dt_entrada_unidade_p;

if (qt_cirurgia_w > 0) then
	ds_erro_p	:= ds_erro_p || wheb_mensagem_pck.get_texto(280346,null) || chr(13) || chr(10);
end if;


select	count(*)
into STRICT	qt_devolucao_w
from	devolucao_material_pac
where	nr_atendimento		= nr_atendimento_p
and	dt_entrada_unidade	= dt_entrada_unidade_p;

if (qt_devolucao_w > 0) then
	ds_erro_p	:= ds_erro_p || wheb_mensagem_pck.get_texto(280347,null) || chr(13) || chr(10);
end if;


select	max(a.dt_saida_unidade),
	max(b.cd_classif_setor)
into STRICT	dt_saida_unidade_w,
	cd_classif_setor_w
from	setor_atendimento b,
	atend_paciente_unidade a
where	a.nr_atendimento	= nr_atendimento_p
and	a.cd_setor_atendimento	= b.cd_setor_atendimento
and	a.dt_entrada_unidade	= dt_entrada_unidade_p
and nr_seq_interno = nr_seq_interno_p;


if (coalesce(dt_saida_unidade_w::text, '') = '') then
	begin

	if (cd_classif_setor_w in ('3','4')) then
		begin

		select	count(*)
		into STRICT	qt_reg_sem_saida_w
		from	atend_paciente_unidade
		where	nr_atendimento		= nr_atendimento_p
		and	coalesce(dt_saida_unidade::text, '') = ''
		and	dt_entrada_unidade	<> dt_entrada_unidade_p
		and nr_seq_interno = nr_seq_interno_p;
		
		if (qt_reg_sem_saida_w = 0) then
			ds_erro_p	:= ds_erro_p || wheb_mensagem_pck.get_texto(280348,null) || chr(13) || chr(10);
		end if;

		end;
	end if;

	end;
end if;

ie_permite_excluir_pass_w := Obter_Param_Usuario(3111, 61, obter_perfil_ativo, nm_usuario_p, 1, ie_permite_excluir_pass_w);
ie_unid_livre_excluir_pass_w := Obter_Param_Usuario(3111, 182, obter_perfil_ativo, nm_usuario_p, 1, ie_unid_livre_excluir_pass_w);

if (ie_permite_excluir_pass_w = 'N') then

	select	Obter_Tipo_Unidade_Atend(nr_atendimento, nr_seq_interno, ie_passagem_setor)
	into STRICT	ie_tipo_passagem_w
	from	atend_paciente_unidade
	where	dt_entrada_unidade	= dt_entrada_unidade_p
	and nr_seq_interno = nr_seq_interno_p;

	if (ie_tipo_passagem_w = 'P') then
		ds_erro_p	:= ds_erro_p || wheb_mensagem_pck.get_texto(280349,null) || chr(13) || chr(10);
	end if;

end if;


if (coalesce(ds_erro_p::text, '') = '') then
	begin
	
	select	max(nr_acompanhante)
	into STRICT	nr_acompanhate_w
	from	atend_paciente_unidade
	where	nr_atendimento		= nr_atendimento_p
	and	dt_entrada_unidade	= dt_entrada_unidade_p
	and 	nr_seq_interno 		= nr_seq_interno_p;
	
	update diagnostico_doenca
	set	nr_seq_atepacu  = NULL
	where nr_seq_atepacu in (SELECT	x.nr_seq_interno
							             from	  atend_paciente_unidade x
							             where	x.nr_atendimento = nr_atendimento_p);

	select  max(b.cd_setor_atendimento),
		max(b.cd_unidade_basica),
		max(b.cd_unidade_compl)
	into STRICT 	cd_setor_unidade_w,
		cd_unidade_basica_w,
		cd_unidade_compl_w
	from 	atend_paciente_unidade b
	where	b.nr_seq_interno = nr_seq_interno_p;
								
	delete	from atend_paciente_unidade
	where	nr_atendimento		= nr_atendimento_p
	and	dt_entrada_unidade	= dt_entrada_unidade_p
	and 	nr_seq_interno 		= nr_seq_interno_p;
	
	if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') in ('de_DE', 'de_AT')) then
		select 	min(nr_seq_interno)
		into STRICT    nr_seq_interno_prox_w
		from 	atend_paciente_unidade
		where	nr_atendimento		= nr_atendimento_p
		and	nr_seq_interno 		> nr_seq_interno_p;
		
		select	max(nr_seq_interno),
			max(cd_setor_atendimento),
			max(cd_unidade_basica),
			max(cd_unidade_compl)
		into STRICT    nr_seq_interno_ant_w,
			cd_setor_unidade_w,
			cd_unidade_basica_w,
			cd_unidade_compl_w
		from atend_paciente_unidade
		where nr_seq_interno = (SELECT max(nr_seq_interno)
			from 	atend_paciente_unidade
			where	nr_atendimento		= nr_atendimento_p
			and	nr_seq_interno 		< nr_seq_interno_p);
		
		if (nr_seq_interno_prox_w IS NOT NULL AND nr_seq_interno_prox_w::text <> '')	then
			select max(dt_entrada_unidade)
			into STRICT   dt_entrada_unid_w
			from   atend_paciente_unidade
			where  nr_seq_interno = nr_seq_interno_prox_w
			and   nr_atendimento  = nr_atendimento_p;
			
			if (dt_entrada_unid_w IS NOT NULL AND dt_entrada_unid_w::text <> '') then
				update  atend_paciente_unidade
				set	dt_saida_unidade = dt_entrada_unid_w
				where	nr_atendimento   = nr_atendimento_p
				and	nr_seq_interno   = nr_seq_interno_ant_w;
			end if;
		elsif (nr_seq_interno_ant_w IS NOT NULL AND nr_seq_interno_ant_w::text <> '') then
			if (Obter_Se_Leito_Disp(cd_setor_unidade_w, cd_unidade_basica_w, cd_unidade_compl_w) = 'S') then
				update  atend_paciente_unidade
				set		dt_saida_unidade  = NULL
				where	nr_atendimento   = nr_atendimento_p
				and		nr_seq_interno   = nr_seq_interno_ant_w;
			else
				select	max(ua.cd_unidade_basica),
						max(ua.cd_unidade_compl),
						max(ua.cd_tipo_acomodacao),
						max(sa.cd_classif_setor),
						max(ua.nr_seq_interno)
				into STRICT	cd_unidade_basica_w,
						cd_unidade_compl_w,
						cd_tipo_acomodacao_w,
						cd_classif_setor_w,
						nr_seq_interno_w
				from	setor_atendimento sa,
						unidade_atendimento ua,
						tipo_acomodacao ta
				where	sa.cd_setor_atendimento = ua.cd_setor_atendimento
				and   	ua.cd_tipo_acomodacao = ta.cd_tipo_acomodacao
				and   	ta.ie_sem_acomodacao = 'S'
				and   	sa.cd_setor_atendimento = cd_setor_unidade_w
				and		ua.ie_situacao = 'A'
				and   	ua.nr_seq_interno = (SELECT  max(x.nr_seq_interno)
											from    unidade_atendimento x
											where   x.cd_setor_atendimento = cd_setor_unidade_w
											and     obter_se_sem_acomodacao(x.cd_tipo_acomodacao) = 'S');
											
				if (nr_seq_interno_w IS NOT NULL AND nr_seq_interno_w::text <> '') then
					SELECT * FROM transferir_paciente_setor(
						nr_atendimento_p 				=> nr_atendimento_p, cd_setor_atendimento_p			=> cd_setor_unidade_w, cd_classif_setor_p 				=> cd_classif_setor_w, nr_acompanhantes_p				=> nr_acompanhate_w, cd_tipo_acomodacao_p			=> cd_tipo_acomodacao_w, cd_estabelecimento_p			=> wheb_usuario_pck.get_cd_estabelecimento, nr_seq_motivo_transf_p			=> null, dt_entrada_unidade_p			=> clock_timestamp(), cd_unidade_basica_p				=> cd_unidade_basica_w, cd_unidade_compl_p				=> cd_unidade_compl_w, ie_mov_centro_cirurg_p			=> 'N', ie_setor_sem_acomodacao_p		=> 'S', ie_ativar_local_destino_p		=> 'N', ie_isolar_paciente_p			=> obter_se_pac_isolamento(nr_atendimento_p), ds_observacao_p					=> null, ie_trocar_setor_prescricoes_p	=> 'N', ie_bloquear_p					=> 'N', ie_restringe_tipo_atend_p		=> null, ie_restringe_tipo_atend_274_p	=> null, ie_encerrar_cig_p				=> 'N', ie_transf_prescr_pend_p 		=> 'N', ds_classif_setores_transf_p		=> cd_classif_setor_w, ds_classif_setores_origem_p		=> null, ie_atualizar_turno_prescr_p		=> 'N', cd_motivo_permanencia_p			=> null, ds_consist_tipo_acomod_p 		=> ds_consist_tipo_acomod_w, ie_atendimento_disp_p			=> ie_atendimento_disp_w, ie_leito_radioterapia_p			=> ie_leito_radioterapia_w, cd_setor_anterior_p				=> cd_setor_anterior_w, cd_setor_atend_p				=> cd_setor_atend_w, ie_permite_inicio_higien_p 		=> ie_permite_inicio_higien_w, ds_erro_p						=> ds_erro_w, nm_usuario_p					=> wheb_usuario_pck.get_nm_usuario, cd_perfil_p						=> wheb_usuario_pck.get_cd_perfil, ie_tipo_movimentacao_lote_p		=> 'S', ie_gerar_transf_paciente_p		=> 'S', nr_seq_classif_esp_p			=> null) INTO STRICT cd_unidade_basica_p				=> cd_unidade_basica_w, cd_unidade_compl_p				=> cd_unidade_compl_w, ds_consist_tipo_acomod_p 		=> ds_consist_tipo_acomod_w, ie_atendimento_disp_p			=> ie_atendimento_disp_w, ie_leito_radioterapia_p			=> ie_leito_radioterapia_w, cd_setor_anterior_p				=> cd_setor_anterior_w, cd_setor_atend_p				=> cd_setor_atend_w, ie_permite_inicio_higien_p 		=> ie_permite_inicio_higien_w, ds_erro_p						=> ds_erro_w;
					
				else
					CALL wheb_mensagem_pck.exibir_mensagem_abort(1120382);
				end if;
			end if;
		end if;
	end if;

	CALL gravar_log_exclusao('ATEND_PACIENTE_UNIDADE',nm_usuario_p,
			    'NR_ATENDIMENTO=' || nr_atendimento_p || chr(13) || chr(10) ||
			    'NR_SEQ_INTERNO_PROX_W=' || nr_seq_interno_prox_w || chr(13) || chr(10) ||
			    'DT_ENTRADA_UNID_W=' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_entrada_unid_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)|| chr(13) || chr(10) ||
			    'DT_ENTRADA_UNIDADE=' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_entrada_unidade_p, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)
				,'N');
			
	If (ie_unid_livre_excluir_pass_w <> 'N') THEN
		
	
		update	unidade_atendimento	
		set		ie_status_unidade = 'L',
				nr_atendimento  = NULL
		where	cd_setor_atendimento = cd_setor_unidade_w
		and 	cd_unidade_basica = cd_unidade_basica_w
		and 	cd_unidade_compl = cd_unidade_compl_w
		and  	nr_atendimento = nr_atendimento_p;
		
		if (ie_unid_livre_excluir_pass_w = 'C') then
			select	max(cd_pessoa_fisica)
			into STRICT 	cd_pessoa_fisica_w
			from	usuario
			where	nm_usuario	= nm_usuario_p;
			
			select	max(nr_seq_interno)
			into STRICT	nr_seq_interno_w
			from	unidade_atendimento
			where	cd_setor_atendimento = cd_setor_unidade_w
			and 	cd_unidade_basica = cd_unidade_basica_w
			and 	cd_unidade_compl = cd_unidade_compl_w;
			
			update	SL_UNID_ATEND a
			set	DT_CANCELAMENTO_SERVICO	= clock_timestamp(),
				CD_EXECUTOR_CANC_SERV	= cd_pessoa_fisica_w,
				IE_STATUS_SERV		= 'C'
			where	nr_seq_unidade		= nr_seq_interno_w
			and	coalesce(DT_INICIO::text, '') = ''
			and	IE_STATUS_SERV		= 'P';
			
		end if;
	End if;		
	
	end;
   	
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit,'S') = 'S') then
	commit;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE excluir_atend_pac_unidade ( nr_atendimento_p bigint, dt_entrada_unidade_p timestamp, nm_usuario_p text, ds_erro_p INOUT text, nr_seq_interno_p bigint) FROM PUBLIC;

