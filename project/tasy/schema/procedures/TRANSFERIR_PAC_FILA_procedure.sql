-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE transferir_pac_fila ( nr_seq_fila_nova_p bigint, nr_seq_fila_atual_p bigint, cd_senha_p bigint, nr_seq_senha_p bigint, ds_erro_p INOUT text, ie_origem_transf_p text default null, nr_seq_mot_transf_p bigint default null, cd_justificativa_tempo_atend_p text default null) AS $body$
DECLARE

 
nr_seq_fila_senha_w  		bigint;
cd_estabelecimento_w 		bigint;
nm_usuario_chamada_w 		varchar(20);	
ie_consiste_usuario_w		varchar(2);
dt_ultima_chamada_w		timestamp;
ie_rechamada_w			varchar(1);
dt_rechamada_w			timestamp;
nm_usuario_w			varchar(15);
ie_considerar_senha_atend_w	varchar(2);
ie_perm_transf_sem_atend_w	varchar(1);
dt_vinculacao_senha_w		timestamp;
ie_permite_senhas_estab_dif_w	varchar(1);


BEGIN 
cd_estabelecimento_w 	:= wheb_usuario_pck.get_cd_estabelecimento;
nm_usuario_w		:= wheb_usuario_pck.get_nm_usuario;
 
ie_consiste_usuario_w := Obter_Param_Usuario(10021, 61, Obter_perfil_Ativo, nm_usuario_w, cd_estabelecimento_w, ie_consiste_usuario_w);
ie_permite_senhas_estab_dif_w := Obter_param_Usuario(10021, 78, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_w, ie_permite_senhas_estab_dif_w);
ie_considerar_senha_atend_w := Obter_param_Usuario(10021, 92, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_w, ie_considerar_senha_atend_w);
 
select	coalesce(ie_perm_transf_sem_atend,'S') 
into STRICT	ie_perm_transf_sem_atend_w 
from	fila_espera_senha 
where	nr_sequencia = nr_seq_fila_atual_p;
 
if (ie_perm_transf_sem_atend_w = 'N') then 
	select 	dt_vinculacao_senha 
	into STRICT	dt_vinculacao_senha_w 
	from 	paciente_senha_fila 
	where 	nr_sequencia = nr_seq_senha_p;
		 
	if (coalesce(dt_vinculacao_senha_w::text, '') = '') then 
		--Esta fila está definida para não transferir senha sem atendimento. 
		ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(295183,null);
	end if;
end if;
 
select	max(nr_sequencia) 
into STRICT	nr_seq_fila_senha_w 
from 	paciente_senha_fila 
where 	cd_senha_gerada   = cd_senha_p 
and 	coalesce(nr_seq_fila_senha,nr_seq_fila_senha_origem) = nr_seq_fila_atual_p 
and 	(nr_seq_senha_p <> 0 AND nr_sequencia = nr_seq_senha_p) 
--and	((ie_considerar_senha_atend_w = 'S') or ((dt_vinculacao_senha is null) and (dt_primeira_chamada is null)))	 
and	((ie_considerar_senha_atend_w = 'S') or ((coalesce(dt_vinculacao_senha::text, '') = '') or ((dt_inicio_atendimento IS NOT NULL AND dt_inicio_atendimento::text <> '') and (dt_vinculacao_senha IS NOT NULL AND dt_vinculacao_senha::text <> '') and (coalesce(dt_fim_atendimento::text, '') = '')))) 
and 	coalesce(dt_inutilizacao::text, '') = '' 
and	((cd_estabelecimento = cd_estabelecimento_w) or (ie_permite_senhas_estab_dif_w = 'S'));
 
select 	max(nm_usuario_chamada), 
	max(ie_rechamada), 
	max(dt_chamada) 
into STRICT	nm_usuario_chamada_w, 
	ie_rechamada_w, 
	dt_rechamada_w 
from	paciente_senha_fila 
where	(dt_primeira_chamada IS NOT NULL AND dt_primeira_chamada::text <> '') 
and		nr_sequencia = nr_seq_senha_p;
 
if	((ie_consiste_usuario_w = 'S') or 
	((ie_consiste_usuario_w = 'M') and (obter_se_usuario_medico(nm_usuario_chamada_w) = 'S') and (obter_se_usuario_medico(nm_usuario_w) = 'S'))) and (dt_rechamada_w IS NOT NULL AND dt_rechamada_w::text <> '') and (nm_usuario_chamada_w IS NOT NULL AND nm_usuario_chamada_w::text <> '') and (nm_usuario_chamada_w <> nm_usuario_w)	then 
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(279910,'NM_USUARIO_CHAMADA='||nm_usuario_chamada_w);
 
end if;
 
if (coalesce(ds_erro_p::text, '') = '') then 
	if (nr_seq_fila_senha_w > 0) then 
	 
		if (cd_justificativa_tempo_atend_p IS NOT NULL AND cd_justificativa_tempo_atend_p::text <> '') then 
			-- definir na tabela movimentacao_senha_fila o motivo do tempo de atendimento ter sido superior ao definido para a fila 
			update	movimentacao_senha_fila 
			set	cd_justificativa_tempo_atend	= cd_justificativa_tempo_atend_p 
			where	nr_sequencia 			= (	SELECT	max(nr_sequencia)	 
									from 	movimentacao_senha_fila 
									where	nr_seq_pac_senha_fila = nr_seq_fila_senha_w);
		end if;
 
		update 	paciente_senha_fila 
		set 	nr_seq_fila_senha = nr_seq_fila_nova_p 
		where 	nr_sequencia  = nr_seq_fila_senha_w;
	else 
		ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(279909,null);
	end if;
	 
end if;
 
insert into paciente_senha_transf_hist(	 
	nr_sequencia, 
	nr_fila_origem, 
	nr_fila_destino, 
	nr_seq_senha, 
	ie_origem_transf, 
	nr_seq_mot_trasf_senha, 
	nm_usuario, 
	dt_atualizacao, 
	nm_usuario_nrec) 
values (nextval('paciente_senha_transf_hist_seq'), 
	nr_seq_fila_atual_p, 
	nr_seq_fila_nova_p, 
	nr_seq_senha_p, 
	ie_origem_transf_p, 
	nr_seq_mot_transf_p, 
	wheb_usuario_pck.get_nm_usuario, 
	(	SELECT	coalesce(MAX(DT_SAIDA),clock_timestamp()) 
		FROM	MOVIMENTACAO_SENHA_FILA 
		WHERE	NR_SEQ_PAC_SENHA_FILA = NR_SEQ_SENHA_P), 
	wheb_usuario_pck.get_nm_usuario);
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE transferir_pac_fila ( nr_seq_fila_nova_p bigint, nr_seq_fila_atual_p bigint, cd_senha_p bigint, nr_seq_senha_p bigint, ds_erro_p INOUT text, ie_origem_transf_p text default null, nr_seq_mot_transf_p bigint default null, cd_justificativa_tempo_atend_p text default null) FROM PUBLIC;

