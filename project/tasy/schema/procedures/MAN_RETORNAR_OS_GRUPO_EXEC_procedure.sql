-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_retornar_os_grupo_exec ( nr_seq_exec_prev_p bigint, nm_usuario_p text, nr_seq_grupo_p bigint default null) AS $body$
DECLARE

			
nr_seq_grupo_w		usuario_grupo_des.nr_seq_grupo%type;
nr_seq_estagio_w	grupo_desenvolvimento.nr_seq_estagio_padrao%type;
nr_seq_ordem_w		man_ordem_servico.nr_sequencia%type;
qt_reg_w		bigint;
nm_usuario_exec_w	usuario_grupo_des.nm_usuario_grupo%type;
ds_mensagem_w		varchar(1000);
pr_alocacao_w		alocacao_usuario_grupo.pr_alocacao%type;
nr_seq_grupo_consult_w	usuario_grupo_des.nr_seq_grupo%type;
dt_atividade_w		timestamp;


BEGIN
select	max(nr_seq_ordem),
	max(nm_usuario_exec)
into STRICT	nr_seq_ordem_w,
	nm_usuario_exec_w
from	man_ordem_servico_exec
where	nr_sequencia = nr_seq_exec_prev_p;

-- Pega a ultima data de atividade realizada pelo usuario
select	max(dt_atividade)
into STRICT	dt_atividade_w
from	man_ordem_serv_ativ a
where	a.nr_seq_ordem_serv = nr_seq_ordem_w
and	nm_usuario_exec = nm_usuario_exec_w
order by dt_atividade desc;


-- caso retornar mais de 1 resultado significa que a alocacao e dividida e nao e alocado 100 por cento em um grupo
select	count(1) qt_reg
into STRICT	qt_reg_w
from	usuario_grupo_des a,
	alocacao_usuario_grupo w
where	w.nm_usuario_grupo = a.nm_usuario_grupo
and	w.nr_seq_grupo_des = a.nr_seq_grupo
and	trunc(coalesce(dt_atividade_w, clock_timestamp())) between w.dt_inicio_vigencia and coalesce(w.dt_fim_vigencia,clock_timestamp())
and	trunc(coalesce(dt_atividade_w, clock_timestamp())) between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,clock_timestamp())
and	a.nm_usuario_grupo = nm_usuario_exec_w;

select 	max(a.nr_seq_grupo),
	max(b.nr_seq_estagio_padrao)
into STRICT	nr_seq_grupo_w,
	nr_seq_estagio_w
from 	usuario_grupo_des a,
	grupo_desenvolvimento b
where	nm_usuario_grupo = nm_usuario_exec_w
and	b.nr_sequencia  = a.nr_seq_grupo
and	b.ie_situacao = 'A'
and	coalesce(a.ie_emprestimo, 'N') = 'N'
and	trunc(clock_timestamp()) between trunc(a.dt_inicio_vigencia) and trunc(coalesce(a.dt_fim_vigencia, clock_timestamp()));

if (qt_reg_w = 1) then
	--entra na condicao caso o usuario tiver alguma atividade na OS
	if (dt_atividade_w IS NOT NULL AND dt_atividade_w::text <> '') then
		--verifica se existe alocacao do usuario comparando o mes da atividade executada na os com o mes de inicio e fim de vigencia da alocacao
		select	
			max((	select	coalesce(max(s.pr_alocacao),0)
				from	alocacao_usuario_grupo s
				where	w.nr_sequencia = s.nr_sequencia )) pr_alocacao,
			max(a.nr_seq_grupo)
		into STRICT	pr_alocacao_w,
			nr_seq_grupo_consult_w
		from	usuario_grupo_des a,
			alocacao_usuario_grupo w
		where	w.nm_usuario_grupo = a.nm_usuario_grupo
		and	w.nr_seq_grupo_des = a.nr_seq_grupo
		and	trunc(dt_atividade_w, 'month') between  trunc(w.dt_inicio_vigencia, 'month') and trunc(w.dt_fim_vigencia, 'month')
		and	trunc(dt_atividade_w, 'month') between  trunc(a.dt_inicio_vigencia, 'month') and trunc(a.dt_fim_vigencia, 'month')
		and	a.nm_usuario_grupo = nm_usuario_exec_w;
	end if;
	
	--caso nao tiver nenhuma alocacao para a data da atividade do usuario, sera utilizado a alocacao da data mais atual
	if (coalesce(pr_alocacao_w::text, '') = '' or coalesce(nr_seq_grupo_consult_w::text, '') = '') then
		select	
			max((	select	coalesce(max(s.pr_alocacao),0)
				from	alocacao_usuario_grupo s
				where	w.nr_sequencia = s.nr_sequencia )) pr_alocacao,
			max(a.nr_seq_grupo)
		into STRICT	pr_alocacao_w,
			nr_seq_grupo_consult_w
		from	usuario_grupo_des a,
			alocacao_usuario_grupo w
		where	w.nm_usuario_grupo = a.nm_usuario_grupo
		and	w.nr_seq_grupo_des = a.nr_seq_grupo
		and	trunc(clock_timestamp()) between w.dt_inicio_vigencia and coalesce(w.dt_fim_vigencia,clock_timestamp())
		and	trunc(clock_timestamp()) between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,clock_timestamp())
		and	a.nm_usuario_grupo = nm_usuario_exec_w;
	end if;

	-- caso o usuario estiver 100 por cento alocado em um grupo, sera alterado o grupo
	if (pr_alocacao_w = 100 and (nr_seq_grupo_consult_w IS NOT NULL AND nr_seq_grupo_consult_w::text <> '')) then
		nr_seq_grupo_w := nr_seq_grupo_consult_w;
	end if;
end if;

if (coalesce(nr_seq_grupo_w,0) > 0) then
	begin
	if (nr_seq_grupo_p IS NOT NULL AND nr_seq_grupo_p::text <> '') then
		update 	man_ordem_servico
		set 	nr_seq_grupo_des = nr_seq_grupo_p,
			nr_seq_estagio	 = coalesce(nr_seq_estagio_w, nr_seq_estagio),
			nm_usuario	 = nm_usuario_p,
			dt_atualizacao	 = clock_timestamp()
		where 	nr_sequencia 	= nr_seq_ordem_w;
	else
		update 	man_ordem_servico
		set 	nr_seq_grupo_des = nr_seq_grupo_w,
			nr_seq_estagio	 = coalesce(nr_seq_estagio_w, nr_seq_estagio),
			nm_usuario	 = nm_usuario_p,
			dt_atualizacao	 = clock_timestamp()
		where 	nr_sequencia 	= nr_seq_ordem_w;
	end if;
	
	update	man_ordem_servico_exec
	set 	dt_fim_execucao  = NULL,
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where 	nr_sequencia = nr_seq_exec_prev_p;
	end;
	
	update	man_ordem_servico_exec
	set	dt_fim_execucao = clock_timestamp(),
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where	nm_usuario_exec	= nm_usuario_p
	and	nr_seq_ordem	= nr_seq_ordem_w
	and	coalesce(dt_fim_execucao::text, '') = ''
	and	nr_sequencia <> nr_seq_exec_prev_p;

else
    CALL wheb_mensagem_pck.exibir_mensagem_abort(obter_desc_expressao(878029));
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_retornar_os_grupo_exec ( nr_seq_exec_prev_p bigint, nm_usuario_p text, nr_seq_grupo_p bigint default null) FROM PUBLIC;

