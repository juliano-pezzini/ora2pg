-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_data_envio_operadora ( dt_emissao_p timestamp, nr_seq_congenere_p bigint, nr_seq_segurado_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, qt_dias_envio_conta_p INOUT bigint) AS $body$
DECLARE


qt_dias_envio_taxa_w		double precision	:= 0;
qt_dias_envio_taxa_ww		double precision	:= 0;
nr_seq_plano_w			bigint;
ie_beneficio_obito_w		varchar(1);
ie_seguro_obito_w			varchar(1);
ie_pcmso_w			varchar(10);

C01 CURSOR FOR
	SELECT	a.qt_dias_envio_taxa,
		a.ie_beneficio_obito
	from	pls_regra_intercambio	a
	where	dt_emissao_p	between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,dt_emissao_p)
	and	coalesce(a.nr_seq_congenere_sup,a.nr_seq_congenere)	= nr_seq_congenere_p
	and	coalesce(a.nr_seq_plano,nr_seq_plano_w) = nr_seq_plano_w
	and	((pls_obter_tipo_intercambio(nr_seq_congenere_p,cd_estabelecimento_p) = coalesce(a.ie_tipo_intercambio,'A')) or (coalesce(a.ie_tipo_intercambio,'A') = 'A'))
	and	(((a.nr_seq_grupo_congenere IS NOT NULL AND a.nr_seq_grupo_congenere::text <> '') and exists ( 	SELECT	1
									from	pls_cooperativa_grupo	x
									where	x.nr_seq_grupo = a.nr_seq_grupo_congenere
									and	x.nr_seq_congenere = nr_seq_congenere_p  )) or
		coalesce(a.nr_seq_grupo_congenere::text, '') = '')
	and	((ie_pcmso		= ie_pcmso_w) or (ie_pcmso = 'N'))
	order by dt_inicio_vigencia,
		coalesce(nr_seq_congenere_sup,0),
		coalesce(nr_seq_plano,0),
		coalesce(ie_tipo_intercambio,0),
		coalesce(nr_seq_grupo_congenere,0),
		CASE WHEN ie_pcmso='N' THEN -1  ELSE 1 END;

BEGIN

ie_pcmso_w	:= 'N';

if (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then
	select	pls_obter_produto_benef(nr_sequencia,dt_emissao_p),
		--nr_seq_plano,
		coalesce(ie_pcmso,'N')
	into STRICT	nr_seq_plano_w,
		ie_pcmso_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_p;
end if;

begin
select	coalesce(ie_seguro_obito,'N')
into STRICT	ie_seguro_obito_w
from	pls_plano
where	nr_sequencia = nr_seq_plano_w;
exception
when others then
	ie_seguro_obito_w := 'N';
end;

open C01;
loop
fetch C01 into
	qt_dias_envio_taxa_ww,
	ie_beneficio_obito_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	if (ie_seguro_obito_w = 'B') then
		if (coalesce(ie_beneficio_obito_w,'N') = 'S') then
			qt_dias_envio_taxa_w := qt_dias_envio_taxa_ww;
		end if;
	else
		qt_dias_envio_taxa_w := qt_dias_envio_taxa_ww;
	end if;
end loop;
close C01;

qt_dias_envio_conta_p	:= coalesce(qt_dias_envio_taxa_w,0);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_data_envio_operadora ( dt_emissao_p timestamp, nr_seq_congenere_p bigint, nr_seq_segurado_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, qt_dias_envio_conta_p INOUT bigint) FROM PUBLIC;

