-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE duplicar_dieta_acomp ( nr_sequencia_p bigint, ie_destino_dieta_p text, nm_usuario_p text, cd_dieta_acomp_p bigint) AS $body$
DECLARE


ie_parametro_w		varchar(1);
nr_atendimento_w	bigint;
ie_lib_dieta_w		varchar(15);
qt_dieta_acomp_w	smallint;
qt_dieta_w		smallint;
cd_refei_pac_w		varchar(3);
dt_dieta_w		timestamp;

vl_parametro_w			varchar(15);
ie_atualizar_obs_nula_w		varchar(1);
cd_refeicao_w			varchar(10);
cd_setor_atendimento_w		varchar(10);
atualizar_obs_tec_w		varchar(5);
ie_gera_dieta_sem_lib_eup_w	varchar(2);
ie_existe_dieta_anterior_w	varchar(1);
ie_regra_ref_lib_w		varchar(1);
nr_seq_atecaco_w		bigint;


BEGIN

vl_parametro_w	:= coalesce(obter_valor_param_usuario(1000, 8, obter_perfil_ativo, nm_usuario_p,1),'N');
ie_parametro_w := obter_param_usuario(1000, 4, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_parametro_w);
ie_atualizar_obs_nula_w := obter_param_usuario(1000, 38, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_atualizar_obs_nula_w);
atualizar_obs_tec_w := obter_param_usuario(1000, 71, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, atualizar_obs_tec_w);
ie_gera_dieta_sem_lib_eup_w	:= coalesce(Obter_Valor_Param_Usuario(1000, 90, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'S');

select	max(nr_atendimento)
into STRICT	nr_atendimento_w
from	mapa_dieta
where	nr_sequencia 	= nr_sequencia_p;

ie_regra_ref_lib_w := Obter_se_refeicao_lib_acomp(nr_atendimento_w);

if (ie_parametro_w = 'S') then
	begin		

	select	coalesce(max(dt_dieta),clock_timestamp())
	into STRICT	dt_dieta_w
	from	mapa_dieta
	where	nr_sequencia	= nr_sequencia_p;

	nr_seq_atecaco_w	:= obter_atecaco_atendimento(nr_atendimento_w);
			
	select	max(ie_lib_dieta),
		max(qt_dieta_acomp)
	into STRICT	ie_lib_dieta_w,
		qt_dieta_acomp_w
	from	atend_categoria_convenio
	where	nr_atendimento	= nr_atendimento_w
	and	nr_seq_interno = nr_seq_atecaco_w;

	select	max(cd_refeicao)
	into STRICT	cd_refei_pac_w
	from	mapa_dieta	
	where	nr_sequencia		= nr_sequencia_p
	and	ie_destino_dieta	= 'P'
	group by	cd_refeicao;

	begin
	select	count(*)
	into STRICT	qt_dieta_w
	from	mapa_dieta	
	where	nr_atendimento		= nr_atendimento_w
	and	ie_destino_dieta	= 'A'
	and	((cd_refeicao		= cd_refei_pac_w) or (ie_lib_dieta_w = 'S'))
	and	dt_dieta 		= trunc(dt_dieta_w,'dd');
	exception
		when no_data_found then
			qt_dieta_w 	:= 0;
	end;

	end;
end if;

begin
select 	'S'
into STRICT	ie_existe_dieta_anterior_w
from	mapa_dieta
where	nr_atendimento		= nr_atendimento_w
and	ie_destino_dieta	= 'A'
and	cd_refeicao 		= cd_refei_pac_w
and	dt_dieta 		= trunc(dt_dieta_w,'dd')-1  LIMIT 1;
exception when others then
	ie_existe_dieta_anterior_w := 'N';
end;

if	(((ie_lib_dieta_w = 'T' AND qt_dieta_w < qt_dieta_acomp_w) or
	  ((ie_lib_dieta_w = 'C') and (cd_refei_pac_w = 'D') and (qt_dieta_w < qt_dieta_acomp_w)) or
	  (ie_lib_dieta_w = 'B' AND cd_refei_pac_w = 'A') or
	  (ie_lib_dieta_w = 'E' AND cd_refei_pac_w = 'J') or
	  ((ie_lib_dieta_w = 'G') and (cd_refei_pac_w = 'D') and (cd_refei_pac_w = 'J')) or
	  ((ie_lib_dieta_w = 'L') and ((cd_refei_pac_w = 'D') or (cd_refei_pac_w = 'A') or (cd_refei_pac_w = 'J')) and (qt_dieta_w < qt_dieta_acomp_w)) or
	  ((ie_lib_dieta_w = 'A') and ((cd_refei_pac_w = 'A') or (cd_refei_pac_w = 'J')) and (qt_dieta_w < qt_dieta_acomp_w)) or
	  ((ie_lib_dieta_w = 'D') and ((cd_refei_pac_w = 'D') or (cd_refei_pac_w = 'L') or (cd_refei_pac_w = 'C')) and (qt_dieta_w < qt_dieta_acomp_w)) or
	  (ie_lib_dieta_w = 'S' AND qt_dieta_w < qt_dieta_acomp_w) or (ie_parametro_w = 'N') or
	  (((ie_gera_dieta_sem_lib_eup_w = 'S') or (ie_gera_dieta_sem_lib_eup_w = 'DA')) and (ie_existe_dieta_anterior_w = 'S'))) and
	 ((ie_regra_ref_lib_w = 'S') or (ie_destino_dieta_p = 'P'))) then
	begin
	insert into mapa_dieta(
		nr_sequencia,
		cd_pessoa_fisica,
		dt_dieta,
		cd_refeicao,
		ie_destino_dieta,
		ie_status,
		dt_atualizacao,
		nm_usuario,
		cd_setor_atendimento, 
		cd_unidade_basica,
		cd_unidade_compl,
		cd_dieta,
		ds_observacao,
		nr_atendimento,
		qt_parametro,
		dt_atualizacao_nrec,
		nm_usuario_nrec)
	SELECT	nextval('mapa_dieta_seq'),
		cd_pessoa_fisica,
		dt_dieta,
		cd_refeicao,
		ie_destino_dieta_p,
		ie_status,
		clock_timestamp(),
		nm_usuario_p,
		cd_setor_atendimento,
		cd_unidade_basica,
		cd_unidade_compl,
		CASE WHEN ie_destino_dieta_p='A' THEN CASE WHEN cd_dieta_acomp_p=0 THEN cd_dieta  ELSE cd_dieta_acomp_p END   ELSE cd_dieta END ,
		CASE WHEN ie_destino_dieta_p='A' THEN null  ELSE ds_observacao END ,
		nr_atendimento,
		qt_parametro,
		clock_timestamp(),
		nm_usuario_p
	from	mapa_dieta
	where	nr_sequencia = nr_sequencia_p;
	
	if (atualizar_obs_tec_w = 'S') then
		select	cd_refeicao,
			cd_setor_atendimento,
			dt_dieta
		into STRICT	cd_refeicao_w,
			cd_setor_atendimento_w,
			dt_dieta_w
		from	mapa_dieta
		where	nr_sequencia = nr_sequencia_p;
		
		CALL gerar_observacao_tecnica_md(cd_setor_atendimento_w, dt_dieta_w, cd_refeicao_w, vl_parametro_w, ie_atualizar_obs_nula_w, nm_usuario_p);
	end if;	
	
	end;
end if;
	
commit;
		
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicar_dieta_acomp ( nr_sequencia_p bigint, ie_destino_dieta_p text, nm_usuario_p text, cd_dieta_acomp_p bigint) FROM PUBLIC;

