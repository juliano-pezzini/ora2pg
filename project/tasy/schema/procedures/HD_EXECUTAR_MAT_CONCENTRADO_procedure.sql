-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_executar_mat_concentrado (nr_atendimento_p bigint, nr_seq_dialise_p bigint, nm_usuario_p text, cd_local_estoque_p bigint, cd_setor_atendimento_p bigint) AS $body$
DECLARE

 
nr_sequencia_w			bigint;
cd_setor_atendimento_w		integer;
dt_entrada_unidade_w		timestamp;
cd_unidade_medida_w		varchar(30);
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
nr_seq_atepacu_w		bigint;
qt_dispensar_w			double precision;
cd_material_w			integer;
nr_seq_lote_fornec_w		bigint;
nr_seq_mat_hor_w		bigint;
nr_seq_maquina_w		bigint;
nr_seq_ponto_acesso_w		bigint;

C02 CURSOR FOR 
	SELECT	nr_seq_maquina, 
		nr_seq_ponto_acesso 
	from	hd_dialise_dialisador a 
	where	a.nr_seq_dialise = nr_seq_dialise_p;

C01 CURSOR FOR 
	SELECT	distinct 
		a.nr_sequencia, 
		max(b.cd_lote_fornecedor),	 
		b.cd_material, 
		coalesce(round((a.qt_dispensar)::numeric,3),1), 
		a.cd_unidade_medida 
	from	prescr_mat_hor a, 
		hd_dialise_concentrado b 
	where	a.cd_material = b.cd_material 
	and	a.nr_seq_dialise = nr_seq_dialise_p 
	and	nr_seq_maquina	= nr_seq_maquina_w 
	and	a.nr_seq_dialise = b.nr_seq_dialise 
	and	nr_seq_ponto_acesso = nr_seq_ponto_acesso_w 
	and	b.ie_atualiza_estoque	= 'S' 
	and	Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S' 
	group by a.nr_sequencia, coalesce(round((a.qt_dispensar)::numeric,3),1), a.cd_unidade_medida, b.cd_material;


BEGIN 
 
nr_seq_atepacu_w	:= OBTER_ATEPACU_PACIENTE(nr_atendimento_p, 'A');
cd_convenio_w		:= OBTER_CONVENIO_ATENDIMENTO(nr_atendimento_p);
cd_categoria_w		:= Obter_Categoria_Atendimento(nr_atendimento_p);
 
select	max(cd_setor_Atendimento), 
	max(dt_entrada_unidade) 
into STRICT	cd_setor_atendimento_w, 
	dt_entrada_unidade_w 
from	atend_paciente_unidade 
where	nr_seq_interno	= nr_seq_atepacu_w;
 
open C02;
loop 
fetch C02 into	 
	nr_seq_maquina_w, 
	nr_seq_ponto_acesso_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_mat_hor_w, 
		nr_seq_lote_fornec_w,		 
		cd_material_w, 
		qt_dispensar_w, 
		cd_unidade_medida_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
 
		select	nextval('material_atend_paciente_seq') 
		into STRICT	nr_sequencia_w 
		;
		 
		insert into material_atend_paciente(	nr_sequencia, 
							cd_material, 
							dt_atendimento, 
							cd_convenio, 
							cd_categoria, 
							nr_seq_atepacu, 
							cd_setor_atendimento, 
							dt_entrada_unidade, 
							qt_material, 
							cd_local_estoque, 
							dt_Atualizacao, 
							nm_usuario, 
							nr_atendimento, 
							cd_unidade_medida, 
							cd_acao, 
							ie_valor_informado, 
							nr_seq_lote_fornec) 
					values (	nr_sequencia_w, 
							cd_material_w, 
							clock_timestamp(), 
							cd_convenio_w, 
							cd_categoria_w, 
							nr_seq_atepacu_w, 
							cd_setor_atendimento_w, 
							dt_entrada_unidade_w, 
							qt_dispensar_w, 
							null, 
							clock_timestamp(), 
							nm_usuario_p, 
							nr_atendimento_p, 
							cd_unidade_medida_w, 
							'1', 
							'N', 
							CASE WHEN nr_seq_lote_fornec_w=0 THEN null  ELSE nr_seq_lote_fornec_w END );
 
		CALL atualiza_preco_material(nr_sequencia_w,nm_usuario_p);	
		 
		update	prescr_mat_hor 
		set	dt_fim_horario = clock_timestamp() 
		where	nr_sequencia = nr_seq_mat_hor_w;
		 
		end;
	end loop;
	close C01;
 
	end;
end loop;
close C02;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_executar_mat_concentrado (nr_atendimento_p bigint, nr_seq_dialise_p bigint, nm_usuario_p text, cd_local_estoque_p bigint, cd_setor_atendimento_p bigint) FROM PUBLIC;

