-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE qua_inserir_pf_nec_trein ( nr_seq_documento_p bigint, nr_seq_treinamento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Inserir as pessoas em treinamento conforme as necessidades cadastradas
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------
Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_pessoa_fisica_w		varchar(10);
cd_cargo_w			bigint;
cd_setor_w			integer;
qt_registro_w			bigint;

c_necessidade CURSOR FOR
	SELECT	cd_pessoa_fisica,
		cd_cargo,
		cd_setor_atendimento
	from	qua_doc_nec_treinamento
	where	nr_seq_documento	= nr_seq_documento_p;

c_cargo CURSOR FOR
	SELECT	cd_pessoa_fisica
	from	pessoa_fisica
	where	cd_cargo	= cd_cargo_w;

c_setor CURSOR FOR
	SELECT	cd_pessoa_fisica
	from	usuario
	where	coalesce(ie_situacao,'A')	= 'A'
	and	obter_se_setor_usuario(cd_setor_w,nm_usuario) = 'S';


BEGIN
open c_necessidade;
loop
fetch c_necessidade into
	cd_pessoa_fisica_w,
	cd_cargo_w,
	cd_setor_w;
EXIT WHEN NOT FOUND; /* apply on c_necessidade */
	begin
	select	count(1)
	into STRICT	qt_registro_w
	from	qua_doc_trein_pessoa
	where	cd_pessoa_fisica	= cd_pessoa_fisica_w
	and	nr_seq_treinamento	= nr_seq_treinamento_p  LIMIT 1;

	if (qt_registro_w = 0) then
		insert into qua_doc_trein_pessoa(	nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_treinamento,
				cd_pessoa_fisica,
				ie_faltou,
				ds_observacao,
				vl_nota,
				dt_envio_nota,
				dt_confirmacao,
				nm_usuario_confirmacao,
				nm_pessoa_externo,
				cd_setor_atendimento)
		values (	nextval('qua_doc_trein_pessoa_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_treinamento_p,
				cd_pessoa_fisica_w,
				'N',
				'',
				'',
				'',
				'',
				'',
				'',
				'');
	end if;

	open c_cargo;
	loop
	fetch c_cargo into
		cd_pessoa_fisica_w;
	EXIT WHEN NOT FOUND; /* apply on c_cargo */
		begin
		select	count(1)
		into STRICT	qt_registro_w
		from	qua_doc_trein_pessoa
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w
		and	nr_seq_treinamento	= nr_seq_treinamento_p  LIMIT 1;

		if (qt_registro_w = 0) then
			insert into qua_doc_trein_pessoa(	nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_treinamento,
					cd_pessoa_fisica,
					ie_faltou,
					ds_observacao,
					vl_nota,
					dt_envio_nota,
					dt_confirmacao,
					nm_usuario_confirmacao,
					nm_pessoa_externo,
					cd_setor_atendimento)
			values (	nextval('qua_doc_trein_pessoa_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_treinamento_p,
					cd_pessoa_fisica_w,
					'N',
					'',
					'',
					'',
					'',
					'',
					'',
					'');
		end if;

		end;
	end loop;
	close c_cargo;


	open c_setor;
	loop
	fetch c_setor into
		cd_pessoa_fisica_w;
	EXIT WHEN NOT FOUND; /* apply on c_setor */
		begin
		select	count(1)
		into STRICT	qt_registro_w
		from	qua_doc_trein_pessoa
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w
		and	nr_seq_treinamento	= nr_seq_treinamento_p  LIMIT 1;

		if (qt_registro_w	= 0) then
			insert into qua_doc_trein_pessoa(	nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_treinamento,
					cd_pessoa_fisica,
					ie_faltou,
					ds_observacao,
					vl_nota,
					dt_envio_nota,
					dt_confirmacao,
					nm_usuario_confirmacao,
					nm_pessoa_externo,
					cd_setor_atendimento)
			values (	nextval('qua_doc_trein_pessoa_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_treinamento_p,
					cd_pessoa_fisica_w,
					'N',
					'',
					'',
					'',
					'',
					'',
					'',
					'');
		end if;
		end;
	end loop;
	close c_setor;

	end;
end loop;
close c_necessidade;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE qua_inserir_pf_nec_trein ( nr_seq_documento_p bigint, nr_seq_treinamento_p bigint, nm_usuario_p text) FROM PUBLIC;

