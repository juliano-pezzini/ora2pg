-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_mens_item_reaj_retro_sca ( nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, nr_seq_mensalidade_seg_p pls_mensalidade_segurado.nr_sequencia%type, dt_referencia_p pls_mensalidade_segurado.dt_mesano_referencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, dt_rescisao_p pls_segurado.dt_rescisao%type, nr_seq_pagador_p pls_mensalidade.nr_seq_pagador%type, nm_usuario_p text) AS $body$
DECLARE


nr_seq_preco_ant_w		pls_segurado_preco_origem.nr_sequencia%type	:= null;
nr_seq_segurado_preco_w		pls_segurado_preco_origem.nr_sequencia%type	:= null;
vl_preco_atual_w		pls_segurado_preco_origem.vl_preco_atual%type	:= 0;
vl_sca_ant_w			pls_segurado_preco_origem.vl_preco_atual%type	:= 0;
nr_seq_reajuste_w		pls_reajuste.nr_sequencia%type	:= null;
nr_seq_reajuste_retro_w		pls_reajuste.nr_sequencia%type	:= null;
tx_reajuste_w			pls_reajuste.tx_reajuste%type	:= 0;
dt_reajuste_w			pls_reajuste.dt_reajuste%type	:= null;
qt_mens_retro_w			integer	:= 0;
vl_reajuste_w			double precision;
ds_mensagem_reajuste_w		varchar(4000)	:= null;
ie_inseriu_item_w		varchar(255);
nr_indice_preco_reaj_w		integer;
nr_parcela_sca_w		integer;

C01 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_vinculo_sca,
		coalesce(a.nr_seq_pagador,nr_seq_pagador_p) nr_seq_pagador_sca,
		coalesce(a.ie_lancamento_mensalidade,b.ie_lancamento_mensalidade) ie_lancamento_mensalidade,
		b.ds_plano ds_sca,
		a.dt_inicio_vigencia,
		a.dt_fim_vigencia
	from	pls_sca_vinculo		a,
		pls_plano		b
	where	a.nr_seq_plano		= b.nr_sequencia
	and	a.nr_seq_segurado	= nr_seq_segurado_p;

C02 CURSOR FOR
	SELECT	a.dt_referencia_reajuste
	from	pls_reajuste_cobr_retro	a,
		pls_reajuste		b
	where	a.nr_seq_reajuste	= b.nr_sequencia
	and	b.nr_sequencia		= nr_seq_reajuste_w
	and	a.dt_referencia_mensalidade	= dt_referencia_p
	and	coalesce(a.dt_liberacao::text, '') = ''; --Se estiver liberado serão gerados lançamentos programados, que serão gerados na rotina PLS_MENS_ITEM_LANC_PROG_BENEF;
BEGIN

for r_c01_w in C01 loop
	begin

	if (nr_seq_pagador_p = r_c01_w.nr_seq_pagador_sca) and (r_c01_w.ie_lancamento_mensalidade <> 'E') and --Não pode cobrar quando o valor é embutido, com exceção para embutido acrescendo o preço pré
		((coalesce(dt_rescisao_p::text, '') = '') or (dt_rescisao_p > dt_referencia_p) or (pls_mensalidade_util_pck.get_ie_reaj_retro_benef_resc = 'S')) then

		select	max(nr_sequencia)
		into STRICT	nr_seq_segurado_preco_w
		from	pls_segurado_preco_origem
		where	nr_seq_vinculo_sca	= r_c01_w.nr_seq_vinculo_sca
		and	nr_seq_segurado		= nr_seq_segurado_p
		and	cd_motivo_reajuste	= 'I'
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

		if (coalesce(nr_seq_segurado_preco_w,0) <> 0) then
			select	coalesce(vl_preco_atual,0),
				coalesce(nr_seq_reajuste,0),
				coalesce(vl_preco_atual,0) - coalesce(vl_preco_ant,0)
			into STRICT	vl_preco_atual_w,
				nr_seq_reajuste_w,
				vl_reajuste_w
			from	pls_segurado_preco_origem
			where	nr_sequencia	= nr_seq_segurado_preco_w;

			if (nr_seq_reajuste_w <> 0) then
				select	dt_reajuste,
					tx_reajuste
				into STRICT	dt_reajuste_w,
					tx_reajuste_w
				from	pls_reajuste
				where	nr_sequencia	= nr_seq_reajuste_w;
			end if;

			if (coalesce(vl_reajuste_w,0) = 0) then
				--Obter o valor anterior do SCA do beneficiário
				select	max(nr_sequencia)
				into STRICT	nr_seq_preco_ant_w
				from	pls_segurado_preco_origem
				where	nr_seq_vinculo_sca	= r_c01_w.nr_seq_vinculo_sca
				and	nr_seq_segurado		= nr_seq_segurado_p
				and	nr_sequencia		<> nr_seq_segurado_preco_w
				and	dt_reajuste		< dt_reajuste_w
				and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

				--Segundo a OS 144763, o valor do reajuste deve ser sobre os valores com desconto
				if (coalesce(nr_seq_preco_ant_w,0) <> 0) then
					select	coalesce(vl_preco_atual,0)
					into STRICT	vl_sca_ant_w
					from	pls_segurado_preco_origem
					where	nr_sequencia	= nr_seq_preco_ant_w;

					vl_reajuste_w	:= coalesce(vl_preco_atual_w,0) - coalesce(vl_sca_ant_w,0);
				end if;
			end if;

			for r_c02_w in C02 loop
				begin

				--Verifica se o SCA estava ativo no mês da cobrança retroativa
				if (trunc(r_c02_w.dt_referencia_reajuste,'month') between trunc(coalesce(r_c01_w.dt_inicio_vigencia,r_c02_w.dt_referencia_reajuste),'month') and trunc(coalesce(r_c01_w.dt_fim_vigencia,r_c02_w.dt_referencia_reajuste),'month')) then

					select	max(c.nr_seq_reajuste)
					into STRICT	nr_seq_reajuste_retro_w
					from	pls_mensalidade_segurado	a,
						pls_mensalidade_seg_item	b,
						pls_segurado_preco_origem	c
					where	b.nr_seq_mensalidade_seg = a.nr_sequencia
					and	b.nr_seq_seg_preco_origem = c.nr_sequencia
					and	a.nr_seq_segurado	= nr_seq_segurado_p
					and	a.dt_mesano_referencia	= r_c02_w.dt_referencia_reajuste;

					--Verificar se existe o mês da cobrança retroativa já não estava reajustado, ou se já foi realizada a cobrança retroativa desse mês
					select	count(1)
					into STRICT	qt_mens_retro_w
					from	pls_mensalidade_segurado	a,
						pls_segurado			b,
						pls_mensalidade_seg_item	c,
						pls_mensalidade			d
					where	a.nr_seq_segurado	= b.nr_sequencia
					and	c.nr_seq_mensalidade_seg = a.nr_sequencia
					and	a.nr_seq_mensalidade	= d.nr_sequencia
					and	b.nr_sequencia		= nr_seq_segurado_p
					and	c.nr_seq_vinculo_sca	= r_c01_w.nr_seq_vinculo_sca
					and	a.dt_mesano_referencia	= dt_referencia_p
					and	c.ie_tipo_item		= '4'
					and	coalesce(d.dt_cancelamento::text, '') = '';

					if (dt_referencia_p <> trunc(r_c02_w.dt_referencia_reajuste,'month')) and --Data de geração da mensalidade não pode ser igual a data retroativa
						(coalesce(nr_seq_reajuste_retro_w,0) <> nr_seq_reajuste_w) and --Verifica se a mensalidade que está cobrando a retroativa não teve o reajuste
						(qt_mens_retro_w = 0) and --Verifica se já foi realizada a cobrança retroativa ou se já estava reajustada
						(vl_reajuste_w <> 0) then

						nr_parcela_sca_w	:= trunc(months_between(r_c02_w.dt_referencia_reajuste,trunc(r_c01_w.dt_inicio_vigencia,'month'))) + 1;

						if (r_c01_w.ie_lancamento_mensalidade = 'C') then
							nr_indice_preco_reaj_w	:= pls_mens_itens_pck.obter_indice_preco(nr_seq_mensalidade_seg_p,'4');

							if (nr_indice_preco_reaj_w = -1) then --Se não encontrar o item Reajuste - Cobrança Retroativa, deve buscar o preço pré-estabelecido
								nr_indice_preco_reaj_w	:= pls_mens_itens_pck.obter_indice_preco(nr_seq_mensalidade_seg_p,'1');
							end if;
						else
							nr_indice_preco_reaj_w	:= -1;
						end if;

						if (nr_indice_preco_reaj_w = -1) then
							ds_mensagem_reajuste_w	:= 'SCA: '||r_c01_w.ds_sca||chr(13)||chr(10)||'Cobrança retroativa ao mês '||r_c02_w.dt_referencia_reajuste||', referente ao reajuste de '||tx_reajuste_w||'% de '||to_char(dt_reajuste_w,'mm/yyyy');
							ie_inseriu_item_w := pls_mens_itens_pck.add_item_sca_retro(nr_seq_mensalidade_p, nr_seq_mensalidade_seg_p, '4', vl_reajuste_w, r_c01_w.nr_seq_vinculo_sca, nr_parcela_sca_w, null, null, ds_mensagem_reajuste_w, '', r_c02_w.dt_referencia_reajuste, ie_inseriu_item_w);
						else
							CALL pls_mens_itens_pck.add_sca_embutido(nr_indice_preco_reaj_w, nr_seq_mensalidade_p, r_c01_w.nr_seq_vinculo_sca, nr_parcela_sca_w, vl_reajuste_w, nr_seq_segurado_preco_w, r_c01_w.ie_lancamento_mensalidade,null,null);
						end if;
					end if;
				end if;
				end;
			end loop; --C02
		end if;
	end if;
	end;
end loop; --C01
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_mens_item_reaj_retro_sca ( nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, nr_seq_mensalidade_seg_p pls_mensalidade_segurado.nr_sequencia%type, dt_referencia_p pls_mensalidade_segurado.dt_mesano_referencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, dt_rescisao_p pls_segurado.dt_rescisao%type, nr_seq_pagador_p pls_mensalidade.nr_seq_pagador%type, nm_usuario_p text) FROM PUBLIC;

