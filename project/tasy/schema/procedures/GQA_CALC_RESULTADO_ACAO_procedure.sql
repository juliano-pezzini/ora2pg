-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gqa_calc_resultado_acao ( nr_sequencia_p bigint, resposta_p text, qt_pontuacao_p bigint) AS $body$
DECLARE

  ie_tipo_acao_w gqa_acao.ie_tipo_acao%TYPE;
  qt_ponto_sim_w gqa_acao.qt_ponto_sim%TYPE;
  qt_ponto_nao_w gqa_acao.qt_ponto_nao%TYPE;
  qt_ponto_confirma_w gqa_acao.qt_ponto_confirma%TYPE;
  qt_ponto_cancelar_w gqa_acao.qt_ponto_cancelar%TYPE;
  nr_atendimento_w gqa_protocolo_pac.nr_atendimento%TYPE;
  nr_seq_pac_acao_w gqa_protocolo_pac.nr_seq_pac_acao%TYPE;
  nr_seq_meta_w gqa_acao.nr_seq_meta%TYPE;
  nr_sequencia_w bigint;
  nr_seq_pend_pac_acao_w gqa_pend_pac_acao.nr_seq_pend_pac%TYPE;
  ie_cancelar_meta_w  varchar(1);
  nr_sequencia_acao_w bigint;
  nr_sequencia_meta_w bigint;
  nr_seq_pend_regra_w bigint;

BEGIN

  SELECT a.ie_tipo_acao,
    a.qt_ponto_sim,
    a.qt_ponto_nao,
    qt_ponto_confirma,
    qt_ponto_cancelar,
    a.nr_seq_meta,
    a.nr_seq_pend_regra
  INTO STRICT ie_tipo_acao_w,
    qt_ponto_sim_w,
    qt_ponto_nao_w,
    qt_ponto_confirma_w,
    qt_ponto_cancelar_w,
    nr_seq_meta_w,
    nr_seq_pend_regra_w
  FROM gqa_protocolo_etapa_pac e,
    gqa_acao a
  WHERE e.nr_seq_acao = a.nr_sequencia
  AND e.nr_sequencia  = nr_sequencia_p;

  SELECT MAX(b.nr_atendimento),
    MAX(b.nr_seq_protocolo)
  INTO STRICT nr_atendimento_w,
    nr_seq_pac_acao_w
  FROM gqa_protocolo_etapa_pac a,
    gqa_protocolo_pac b,
    gqa_pendencia c
  WHERE b.nr_sequencia = a.nr_seq_prot_pac
  AND c.NR_SEQUENCIA   = b.NR_SEQ_PROTOCOLO
  AND a.nr_sequencia = nr_sequencia_p;
  
  IF (ie_tipo_acao_w  = 'PE' OR ie_tipo_acao_w = 'PG' OR ie_tipo_acao_w = 'DL') THEN
  
    IF resposta_p     = 'S' THEN
      UPDATE gqa_protocolo_etapa_pac t
      SET t.qt_resultado   = qt_ponto_sim_w
      WHERE t.nr_sequencia = nr_sequencia_p;
    elsif resposta_p       = 'N' THEN
      UPDATE gqa_protocolo_etapa_pac t
      SET t.qt_resultado   = qt_ponto_nao_w
      WHERE t.nr_sequencia = nr_sequencia_p;
    END IF;

  elsif (ie_tipo_acao_w = 'EP' OR ie_tipo_acao_w = 'NC' OR ie_tipo_acao_w = 'PP') THEN
  
    UPDATE gqa_protocolo_etapa_pac t
    SET t.qt_resultado   = qt_ponto_sim_w
    WHERE t.nr_sequencia = nr_sequencia_p;

  elsif (ie_tipo_acao_w  = 'AV' OR ie_tipo_acao_w = 'ES') THEN
  
    IF (qt_pontuacao_p IS NOT NULL AND qt_pontuacao_p::text <> '') THEN
      UPDATE gqa_protocolo_etapa_pac t
      SET t.qt_resultado   = qt_pontuacao_p
      WHERE t.nr_sequencia = nr_sequencia_p;
    ELSE
      CALL wheb_mensagem_pck.exibir_mensagem_abort(1112963);
    END IF;

  elsif (ie_tipo_acao_w = 'MC') THEN

    CALL inserir_tof_meta_atend( nr_atendimento_w, NULL, nr_seq_meta_w, nr_seq_pac_acao_w);

    SELECT MAX(ie_cancelar_meta)
    INTO STRICT ie_cancelar_meta_w
    FROM GQA_ACAO
    WHERE nr_seq_pend_regra = nr_seq_pend_regra_w
    AND nr_seq_meta         = nr_seq_meta_w;

    IF (ie_cancelar_meta_w  = 'S') THEN
      UPDATE TOF_META_ATEND
      SET dt_finalizacao   = clock_timestamp()
      WHERE nr_atendimento = nr_atendimento_w
      AND nr_seq_acao      = nr_seq_pac_acao_w;
    END IF;

  elsif (ie_tipo_acao_w = 'ME') THEN
  
    IF resposta_p       = 'S' THEN
      UPDATE gqa_protocolo_etapa_pac t
      SET t.qt_resultado   = qt_ponto_confirma_w
      WHERE t.nr_sequencia = nr_sequencia_p;
    elsif resposta_p       = 'N' THEN
      UPDATE gqa_protocolo_etapa_pac t
      SET t.qt_resultado   = qt_ponto_cancelar_w
      WHERE t.nr_sequencia = nr_sequencia_p;
    END IF;

  END IF;
  COMMIT;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gqa_calc_resultado_acao ( nr_sequencia_p bigint, resposta_p text, qt_pontuacao_p bigint) FROM PUBLIC;

