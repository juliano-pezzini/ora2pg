-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_movto_trans_cheque ( nr_seq_cheque_p bigint, nr_seq_conta_p bigint, nr_seq_trans_financ_p bigint, nm_usuario_p text, nr_seq_movto_p INOUT bigint) AS $body$
DECLARE


ds_conta_w		varchar(255);
nr_seq_movto_w		bigint;
ie_data_dev_w		varchar(255);
dt_devolucao_w		timestamp;
dt_transacao_w		timestamp;
ie_status_cheque_w	smallint;
nr_seq_motivo_dev_w	cheque_cr.nr_seq_motivo_dev%type;


BEGIN

select	nextval('movto_trans_financ_seq')
into STRICT	nr_seq_movto_w
;

ie_data_dev_w := obter_param_usuario(810, 52, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_data_dev_w);

dt_transacao_w	:= clock_timestamp();

/*OS 1617751 AAMFIRMO - Coloquei isso fora do IF abaixo pois será necessário o status do cheque independente do param 52, para verificar qual nr_seq_motivo_dev será gerado no movimento bancario.
Da forma que estava, sempre gerava o motivo da primeira devolucao ( CHEQUE_CR.NR_SEQ_MOTIVO_DEV)  no movimento bancário, inclusive quando se tratava de segunda dev ou terceira dev.*/
ie_status_cheque_w	:= obter_status_cheque(nr_seq_cheque_p);
if (nr_seq_cheque_p IS NOT NULL AND nr_seq_cheque_p::text <> '') then

	if (ie_status_cheque_w = 3) then  -- Primeira devolução
		select	max(a.nr_seq_motivo_dev)
		into STRICT	nr_seq_motivo_dev_w
		from	cheque_cr a
		where	a.nr_seq_cheque = nr_seq_cheque_p;

	elsif (ie_status_cheque_w = 5) then -- Segunda devolução
		select	max(a.nr_seq_motivo_seg_dev)
		into STRICT	nr_seq_motivo_dev_w
		from	cheque_cr a
		where	a.nr_seq_cheque = nr_seq_cheque_p;

	elsif (ie_status_cheque_w = 10) then -- Terceira devolução.
		select	max(a.nr_seq_motivo_terc_dev)
		into STRICT	nr_seq_motivo_dev_w
		from	cheque_cr a
		where	a.nr_seq_cheque = nr_seq_cheque_p;

	end if;

end if;

if (coalesce(ie_data_dev_w, 'S') = 'S') then

	if (ie_status_cheque_w = 5) then	--Caio OS: 461237, 19/06/2012 - cosiderar data da segunda devolução
		select	max(dt_seg_devolucao)
		into STRICT	dt_devolucao_w
		from	cheque_cr
		where	nr_seq_cheque	= nr_seq_cheque_p;

	elsif (ie_status_cheque_w = 10) then
		select	max(dt_terc_devolucao)
		into STRICT	dt_devolucao_w
		from	cheque_cr
		where	nr_seq_cheque	= nr_seq_cheque_p;
	else
		select	max(dt_devolucao_banco)
		into STRICT	dt_devolucao_w
		from	cheque_cr
		where	nr_seq_cheque	= nr_seq_cheque_p;
	end if;

	dt_transacao_w	:= coalesce(dt_devolucao_w, clock_timestamp());

end if;

insert	into movto_trans_financ(cd_cgc,
	cd_pessoa_fisica,
	cd_portador,
	cd_tipo_portador,
	ds_historico,
	dt_atualizacao,
	dt_transacao,
	ie_conciliacao,
	nm_usuario,
	nr_documento,
	nr_lote_contabil,
	nr_seq_banco,
	nr_seq_cheque,
	nr_seq_motivo_dev,
	nr_seq_saldo_banco,
	nr_seq_trans_financ,
	nr_sequencia,
	vl_transacao,
	vl_transacao_estrang,
	vl_complemento,
	vl_cotacao,
	cd_moeda)
SELECT	a.cd_cgc,
	a.cd_pessoa_fisica,
	a.cd_portador,
	a.cd_tipo_portador,
	wheb_mensagem_pck.get_texto(303569,null) || ' ' || a.nr_cheque, --Movimentação gerada a partir da devolução do cheque
	clock_timestamp(),
	dt_transacao_w,
	'N',
	nm_usuario_p,
	a.nr_cheque,
	0,
	nr_seq_conta_p,
	a.nr_seq_cheque,
	coalesce(nr_seq_motivo_dev_w,a.nr_seq_motivo_dev), --Deixei ainda no nvl a a.nr_seq_motivo_dev, caso nao encontrar o motivo na tratativa acima, faz o que fazia antes,
	null,
	nr_seq_trans_financ_p,
	nr_seq_movto_w,
	a.vl_cheque,
	CASE WHEN coalesce(a.vl_cheque_estrang,0)=0 THEN null  ELSE a.vl_cheque_estrang END , -- Projeto Multimoeda - Grava os valores em moeda estrangeira
	CASE WHEN coalesce(a.vl_cheque_estrang,0)=0 THEN null  ELSE (a.vl_cheque - a.vl_cheque_estrang) END ,
	CASE WHEN coalesce(a.vl_cheque_estrang,0)=0 THEN null  ELSE a.vl_cotacao END ,
	CASE WHEN coalesce(a.vl_cheque_estrang,0)=0 THEN null  ELSE a.cd_moeda END
from	cheque_cr a
where	a.nr_seq_cheque	= nr_seq_cheque_p;

nr_seq_movto_p	:= nr_seq_movto_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_movto_trans_cheque ( nr_seq_cheque_p bigint, nr_seq_conta_p bigint, nr_seq_trans_financ_p bigint, nm_usuario_p text, nr_seq_movto_p INOUT bigint) FROM PUBLIC;

