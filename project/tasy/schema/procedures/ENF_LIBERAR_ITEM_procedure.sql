-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE enf_liberar_item ( nr_prescricao_p bigint, nr_seq_item_p bigint, nr_atendimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, ie_tipo_item_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_sequencia_w				prescr_material.nr_sequencia%type;
ds_proced_glosa_w			varchar(2000) := '';
nm_usuario_aviso_w			varchar(4000);
cd_perfil_aviso_w			varchar(20);
ds_erro_w					varchar(4000) := '';
nr_seq_alteracao_w			bigint;
cd_material_w				material.cd_material%type;
ie_momento_lote_w			regra_disp_lote_farm.ie_momento_lote%type;
cd_setor_prescr_w			setor_atendimento.cd_setor_atendimento%type;
ie_motivo_prescricao_w			prescr_medica.ie_motivo_prescricao%type;
ie_quimio_w				varchar(1);

c01 CURSOR FOR
SELECT	nr_sequencia
from	prescr_material
where	nr_prescricao			= nr_prescricao_p
and		nr_sequencia_solucao	= nr_seq_item_p
and		ie_agrupador			= 4;

c02 CURSOR FOR
SELECT	ie_momento_lote
from	regra_disp_lote_farm
where	((ie_motivo_prescricao = ie_motivo_prescricao_w) or (coalesce(ie_motivo_prescricao::text, '') = ''))
and		((clock_timestamp() between to_date(to_char(clock_timestamp(),'dd/mm/yyyy')||' '||to_char(coalesce(dt_hora_inicio,clock_timestamp()),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') and
						  to_date(to_char(clock_timestamp(),'dd/mm/yyyy')||' '||to_char(coalesce(dt_hora_fim,clock_timestamp()),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')) or ((dt_hora_fim IS NOT NULL AND dt_hora_fim::text <> '') and
		  dt_hora_fim < coalesce(dt_hora_inicio,clock_timestamp())) and (clock_timestamp() between to_date(to_char(clock_timestamp(),'dd/mm/yyyy')||' '||to_char(coalesce(dt_hora_inicio,clock_timestamp()),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') and
						   to_date(to_char(clock_timestamp() + interval '1 days','dd/mm/yyyy')||' '||to_char(coalesce(dt_hora_fim,clock_timestamp()),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')))
and	coalesce(cd_setor_atendimento,cd_setor_prescr_w)	= cd_setor_prescr_w
and	coalesce(cd_estabelecimento,cd_estabelecimento_p)	= cd_estabelecimento_p
and	coalesce(ie_situacao,'A') = 'A'
and 	((ie_quimio_w <> 'S' and coalesce(ie_quimioterapicas,'N') <> 'S') or (ie_quimio_w = 'S'))
order by CASE WHEN ie_quimioterapicas='S' THEN 'Z'  ELSE CASE WHEN ie_quimioterapicas='N' THEN 'C'  ELSE 'B' END  END ,
coalesce(cd_setor_atendimento,0), coalesce(ie_motivo_prescricao,0);


BEGIN

select 	coalesce(max('S'),'N')
into STRICT	ie_quimio_w
from	paciente_atendimento
where	nr_prescricao = nr_prescricao_p;

select	coalesce(max(cd_setor_atendimento),0),
	max(ie_motivo_prescricao)
into STRICT	cd_setor_prescr_w,
	ie_motivo_prescricao_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

OPEN c02;
LOOP
FETCH c02 INTO
	ie_momento_lote_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	BEGIN
	ie_momento_lote_w	:= ie_momento_lote_w;
	END;
END LOOP;
CLOSE c02;

if (ie_momento_lote_w	= 'F') then
	-- A regra de dispensacao da instituicao esta definida para dispensar no momento da liberacao pela farmacia. A enfermagem nao podera antecipar estes lotes.
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(267617);
end if;

if (ie_tipo_item_p	= 'M') then
	SELECT * FROM consistir_regra_prescr_mat(nr_prescricao_p, nr_seq_item_p, cd_estabelecimento_p, cd_perfil_p, nm_usuario_p, ds_erro_w, ds_proced_glosa_w, cd_perfil_aviso_w, nm_usuario_aviso_w) INTO STRICT ds_erro_w, ds_proced_glosa_w, cd_perfil_aviso_w, nm_usuario_aviso_w;
	if (ds_erro_w	<> '') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(261329, 'MENSAGEM='||ds_erro_w);
	end if;
	
	CALL gerar_kit_prescricao(cd_estabelecimento_p,nr_prescricao_p,nr_seq_item_p,nm_usuario_p,'S','N');
	CALL liberar_prescr_material(nr_prescricao_p,nr_seq_item_p,nr_atendimento_p,cd_perfil_p,nm_usuario_p,ie_tipo_item_p);
	CALL Atualiza_prescr_mat_hor(nr_prescricao_p,nr_seq_item_p,cd_perfil_p,nm_usuario_p,'S', 'M', null);
	
	select	max(cd_material)
	into STRICT	cd_material_w
	from	prescr_material
	where	nr_prescricao	= nr_prescricao_p
	and		nr_sequencia	= nr_seq_item_p;
	
	SELECT	nextval('prescr_mat_alteracao_seq')
	INTO STRICT	nr_seq_alteracao_w
	;

	INSERT	INTO	prescr_mat_alteracao(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_prescricao,
						dt_alteracao,
						cd_pessoa_fisica,
						ie_alteracao,
						ds_observacao,
						ie_tipo_item,
						nr_atendimento,
						cd_item,
						cd_funcao)
					VALUES (
						nr_seq_alteracao_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_prescricao_p,
						clock_timestamp(),
						obter_dados_usuario_opcao(nm_usuario_p,'C'),
						52,
						obter_desc_expressao(301028)/*'Medicamento liberado individualmente pela enfermagem.'*/
,
						ie_tipo_item_p,
						nr_atendimento_p,
						cd_material_w,
						7015);

elsif (ie_tipo_item_p	= 'SOL') then
	ds_erro_w := consistir_prescr_solucao(nr_prescricao_p, nr_seq_item_p, cd_estabelecimento_p, cd_perfil_p, nm_usuario_p, ds_erro_w);

	if (ds_erro_w	<> '') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(261329, 'MENSAGEM='||ds_erro_w);
	end if;

	update	prescr_solucao
	set		dt_lib_material	= clock_timestamp(),
			dt_lib_enfermagem = clock_timestamp(),
			nm_usuario	= nm_usuario_p
	where	nr_prescricao	= nr_prescricao_p
	and		nr_seq_solucao	= nr_seq_item_p;
	
	open C01;
	loop
	fetch C01 into	
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		CALL gerar_kit_prescricao(cd_estabelecimento_p,nr_prescricao_p,nr_sequencia_w,nm_usuario_p,'S','N');
		CALL liberar_prescr_material(nr_prescricao_p,nr_sequencia_w,nr_atendimento_p,cd_perfil_p,nm_usuario_p,ie_tipo_item_p);
		end;
	end loop;
	close C01;
	CALL Atualiza_prescr_mat_hor(nr_prescricao_p,nr_seq_item_p,cd_perfil_p,nm_usuario_p,'S', 'S', null);
	
	SELECT	nextval('prescr_solucao_evento_seq')
	INTO STRICT	nr_seq_alteracao_w
	;

	INSERT INTO prescr_solucao_evento(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_prescricao,
		cd_pessoa_fisica,
		ie_alteracao,
		dt_alteracao,
		ie_evento_valido,
		ds_observacao,
		ie_tipo_solucao,
		nr_seq_solucao,
		cd_funcao)
	VALUES (nr_seq_alteracao_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_prescricao_p,
		obter_dados_usuario_opcao(nm_usuario_p, 'C'),
		43,
		clock_timestamp(),
		'S',
		obter_desc_expressao(781795)/*'Solucao liberada individualmente pela enfermagem.'*/
,
		1,
		nr_seq_item_p,
		7015);		
		
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enf_liberar_item ( nr_prescricao_p bigint, nr_seq_item_p bigint, nr_atendimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, ie_tipo_item_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

