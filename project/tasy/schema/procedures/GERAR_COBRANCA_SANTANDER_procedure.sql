-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cobranca_santander (nr_seq_cobr_escrit_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
 
tp_registro_w			bigint;
nr_seq_envio_w 			bigint;
dt_remessa_retorno_w 		timestamp;
dt_credito_w 			timestamp;
cd_banco_w 			varchar(20);
cd_cgc_w 			varchar(14);
cd_convenio_banco_w 		varchar(100);
cd_agencia_bancaria_w		varchar(20);
nr_digito_agencia_w		varchar(2);
nr_conta_corrente_w		varchar(20);
nm_empresa_w			varchar(100);
cd_movimento_w			varchar(100);
nr_titulo_w			bigint;
cd_carteira_w			varchar(50);
nr_doc_cobranca_w		bigint;
dt_vencimento_w			timestamp;
dt_emissao_w			timestamp;
dt_desconto_w			timestamp;
dt_juros_mora_w			timestamp;
nr_operacao_credito_w		bigint;
vl_cobranca_w			double precision;
vl_juros_mora_w			double precision;
vl_desconto_w			double precision;
ie_tipo_inscricao_w			bigint;
nr_inscricao_w			varchar(20);
nm_pessoa_w			varchar(100);
ds_endereco_w			varchar(100);
ds_bairro_w			varchar(80);
cd_cep_w			varchar(20);
ds_cidade_w			varchar(50);
ds_uf_w				valor_dominio.vl_dominio%type;
qt_cobranca_simples_w		bigint;
vl_carteira_simples_w		double precision;
ie_emissao_bloqueto_w		varchar(10);
ds_nosso_numero_w		varchar(25);
qt_cobranca_vinculada_w		bigint;
qt_lote_arquivo_w			bigint;
qt_reg_arquivo_w			bigint;
nm_banco_w			varchar(100);

nr_seq_reg_lote_w			bigint := 1;
nr_registro_w			bigint;	
 
c01 CURSOR FOR 
SELECT	nr_registro, 
	tp_registro, 
	nr_seq_envio, 
	dt_remessa_retorno, 
	dt_credito, 
	cd_banco, 
	cd_cgc, 
	cd_convenio_banco, 
	cd_agencia_bancaria, 
	nr_digito_agencia, 
	nr_conta_corrente, 
	nm_empresa, 
	cd_movimento, 
	nr_titulo, 
	cd_carteira, 
	nr_doc_cobranca, 
	dt_vencimento, 
	dt_emissao, 
	dt_desconto, 
	dt_juros_mora, 
	nr_operacao_credito, 
	vl_cobranca, 
	vl_juros_mora, 
	vl_desconto, 
	ie_tipo_inscricao, 
	nr_inscricao, 
	nm_pessoa, 
	ds_endereco, 
	ds_bairro, 
	cd_cep, 
	ds_cidade, 
	ds_uf, 
	qt_cobranca_simples, 
	vl_carteira_simples, 
	ie_emissao_bloqueto, 
	ds_nosso_numero, 
	qt_cobranca_vinculada, 
	qt_lote_arquivo, 
	qt_reg_arquivo, 
	nm_banco 
from	( 
SELECT	1 nr_registro, 
	1 tp_registro, 
	a.nr_sequencia nr_seq_envio, 
	a.dt_remessa_retorno, 
	a.dt_remessa_retorno dt_credito, 
	a.cd_banco, 
	b.cd_cgc, 
	' ' cd_convenio_banco, 
	c.cd_agencia_bancaria, 
	calcula_digito('Modulo11',c.cd_agencia_bancaria) nr_digito_agencia, 
	c.cd_conta nr_conta_corrente, 
	substr(obter_razao_social(b.cd_cgc),1,100) nm_empresa, 
	' ' cd_movimento, 
	0 nr_titulo, 
	' ' cd_carteira, 
	0 nr_doc_cobranca, 
	clock_timestamp() dt_vencimento, 
	clock_timestamp() dt_emissao, 
	a.dt_remessa_retorno dt_desconto, 
	clock_timestamp() dt_juros_mora, 
	0 nr_operacao_credito, 
	0 vl_cobranca, 
	0 vl_juros_mora, 
	0 vl_desconto, 
	0 ie_tipo_inscricao, 
	' ' nr_inscricao, 
	' ' nm_pessoa, 
	' ' ds_endereco, 
	' ' ds_bairro, 
	' ' cd_cep, 
	' ' ds_cidade, 
	' ' ds_uf, 
	0 qt_cobranca_simples, 
	0 vl_carteira_simples, 
	'' ie_emissao_bloqueto, 
	'' ds_nosso_numero, 
	0 qt_cobranca_vinculada, 
	0 qt_lote_arquivo, 
	0 qt_reg_arquivo, 
	substr(obter_nome_banco(a.cd_banco),1,100) nm_banco 
from	estabelecimento b, 
	banco_estabelecimento c, 
	cobranca_escritural a 
where	a.cd_estabelecimento	= b.cd_estabelecimento 
and	a.nr_seq_conta_banco	= c.nr_sequencia 
and	a.nr_sequencia		= nr_seq_cobr_escrit_p 

UNION
 
select	2 nr_registro, 
	2 tp_registro, 
	a.nr_sequencia nr_seq_envio, 
	a.dt_remessa_retorno, 
	a.dt_remessa_retorno dt_credito, 
	a.cd_banco, 
	b.cd_cgc, 
	' ' cd_convenio_banco, 
	c.cd_agencia_bancaria, 
	calcula_digito('Modulo11',c.cd_agencia_bancaria) nr_digito_agencia, 
	c.cd_conta nr_conta_corrente, 
	substr(obter_razao_social(b.cd_cgc),1,100) nm_empresa, 
	' ' cd_movimento, 
	0 nr_titulo, 
	' ' cd_carteira, 
	0 nr_doc_cobranca, 
	clock_timestamp() dt_vencimento, 
	clock_timestamp() dt_emissao, 
	a.dt_remessa_retorno dt_desconto, 
	clock_timestamp() dt_juros_mora, 
	0 nr_operacao_credito, 
	0 vl_cobranca, 
	0 vl_juros_mora, 
	0 vl_desconto, 
	0 ie_tipo_inscricao, 
	' ' nr_inscricao, 
	' ' nm_pessoa, 
	' ' ds_endereco, 
	' ' ds_bairro, 
	' ' cd_cep, 
	' ' ds_cidade, 
	' ' ds_uf, 
	0 qt_cobranca_simples, 
	0 vl_carteira_simples, 
	a.ie_emissao_bloqueto, 
	'' ds_nosso_numero, 
	0 qt_cobranca_vinculada, 
	0 qt_lote_arquivo, 
	0 qt_reg_arquivo, 
	' ' nm_banco 
from	estabelecimento b, 
	banco_estabelecimento c, 
	cobranca_escritural a 
where	a.cd_estabelecimento	= b.cd_estabelecimento 
and	a.nr_seq_conta_banco	= c.nr_sequencia 
and	a.nr_sequencia		= nr_seq_cobr_escrit_p 

union
 
select	3 nr_registro, 
	3 tp_registro, 
	a.nr_sequencia nr_seq_envio, 
	clock_timestamp() dt_remessa_retorno, 
	clock_timestamp() dt_credito, 
	a.cd_banco, 
	b.cd_cgc_cpf cd_cgc, 
	' ' cd_convenio_banco, 
	c.cd_agencia_bancaria, 
	calcula_digito('Modulo11',c.cd_agencia_bancaria) nr_digito_agencia, 
	c.nr_conta nr_conta_corrente, 
	' ' nm_empresa, 
	'01' cd_movimento, 
	c.nr_titulo, 
	'1' cd_carteira, 
	c.nr_titulo nr_doc_cobranca, 
	b.dt_pagamento_previsto dt_vencimento, 
	b.dt_emissao, 
	a.dt_remessa_retorno dt_desconto, 
	clock_timestamp() dt_juros_mora, 
	c.nr_titulo nr_operacao_credito, 
	c.vl_cobranca, 
	0 vl_juros_mora, 
	b.TX_DESC_ANTECIPACAO vl_desconto, 
	b.ie_tipo_pessoa ie_tipo_inscricao, 
	b.cd_cgc_cpf nr_inscricao, 
	b.nm_pessoa, 
	obter_dados_pf_pj(b.cd_pessoa_fisica, b.cd_cgc, 'EC') ds_endereco, 
	obter_dados_pf_pj(b.cd_pessoa_fisica, b.cd_cgc, 'B') ds_bairro, 
	obter_dados_pf_pj(b.cd_pessoa_fisica, b.cd_cgc, 'CEP') cd_cep, 
	obter_dados_pf_pj(b.cd_pessoa_fisica, b.cd_cgc, 'CI') ds_cidade, 
	obter_dados_pf_pj(b.cd_pessoa_fisica, b.cd_cgc, 'UF') ds_uf, 
	0 qt_cobranca_simples, 
	0 vl_carteira_simples, 
	a.ie_emissao_bloqueto, 
	lpad(Obter_Nosso_Numero_Banco(a.cd_banco, b.nr_titulo),13,'0') ds_nosso_numero, 
	0 qt_cobranca_vinculada, 
	0 qt_lote_arquivo, 
	0 qt_reg_arquivo, 
	substr(obter_nome_banco(a.cd_banco),1,100) nm_banco 
from	titulo_receber_v b, 
	titulo_receber_cobr c, 
	cobranca_escritural a 
where	a.nr_sequencia		= c.nr_seq_cobranca 
and	c.nr_titulo		= b.nr_titulo 
and	a.nr_sequencia		= nr_seq_cobr_escrit_p 

union
 
select	3 nr_registro, 
	4 tp_registro, 
	a.nr_sequencia nr_seq_envio, 
	clock_timestamp() dt_remessa_retorno, 
	clock_timestamp() dt_credito, 
	a.cd_banco, 
	b.cd_cgc_cpf cd_cgc, 
	' ' cd_convenio_banco, 
	c.cd_agencia_bancaria, 
	calcula_digito('Modulo11',c.cd_agencia_bancaria) nr_digito_agencia, 
	c.nr_conta nr_conta_corrente, 
	' ' nm_empresa, 
	'01' cd_movimento, 
	c.nr_titulo, 
	'1' cd_carteira, 
	c.nr_titulo nr_doc_cobranca, 
	b.dt_pagamento_previsto dt_vencimento, 
	b.dt_emissao, 
	a.dt_remessa_retorno dt_desconto, 
	clock_timestamp() dt_juros_mora, 
	c.nr_titulo nr_operacao_credito, 
	c.vl_cobranca, 
	0 vl_juros_mora, 
	b.TX_DESC_ANTECIPACAO vl_desconto, 
	b.ie_tipo_pessoa ie_tipo_inscricao, 
	b.cd_cgc_cpf nr_inscricao, 
	b.nm_pessoa, 
	obter_dados_pf_pj(b.cd_pessoa_fisica, b.cd_cgc, 'EC') ds_endereco, 
	obter_dados_pf_pj(b.cd_pessoa_fisica, b.cd_cgc, 'B') ds_bairro, 
	obter_dados_pf_pj(b.cd_pessoa_fisica, b.cd_cgc, 'CEP') cd_cep, 
	obter_dados_pf_pj(b.cd_pessoa_fisica, b.cd_cgc, 'CI') ds_cidade, 
	obter_dados_pf_pj(b.cd_pessoa_fisica, b.cd_cgc, 'UF') ds_uf, 
	0 qt_cobranca_simples, 
	0 vl_carteira_simples, 
	a.ie_emissao_bloqueto, 
	lpad(Obter_Nosso_Numero_Banco(a.cd_banco, b.nr_titulo),13,'0') ds_nosso_numero, 
	0 qt_cobranca_vinculada, 
	0 qt_lote_arquivo, 
	0 qt_reg_arquivo, 
	substr(obter_nome_banco(a.cd_banco),1,100) nm_banco 
from	titulo_receber_v b, 
	titulo_receber_cobr c, 
	cobranca_escritural a 
where	a.nr_sequencia		= c.nr_seq_cobranca 
and	c.nr_titulo		= b.nr_titulo 
and	a.nr_sequencia		= nr_seq_cobr_escrit_p 

union
 
select	4 nr_registro, 
	5 tp_registro, 
	a.nr_sequencia nr_seq_envio, 
	a.dt_remessa_retorno, 
	a.dt_remessa_retorno dt_credito, 
	a.cd_banco, 
	' ' cd_cgc, 
	' ' cd_convenio_banco, 
	' ' cd_agencia_bancaria, 
	0 nr_digito_agencia, 
	' ' nr_conta_corrente, 
	' ' nm_empresa, 
	' ' cd_movimento, 
	0 nr_titulo, 
	' ' cd_carteira, 
	0 nr_doc_cobranca, 
	clock_timestamp() dt_vencimento, 
	clock_timestamp() dt_emissao, 
	a.dt_remessa_retorno dt_desconto, 
	clock_timestamp() dt_juros_mora, 
	0 nr_operacao_credito, 
	0 vl_cobranca, 
	0 vl_juros_mora, 
	0 vl_desconto, 
	0 ie_tipo_inscricao, 
	' ' nr_inscricao, 
	' ' nm_pessoa, 
	' ' ds_endereco, 
	' ' ds_bairro, 
	' ' cd_cep, 
	' ' ds_cidade, 
	' ' ds_uf, 
	((count(*) * 2) + 2) qt_cobranca_simples, 
	sum(b.vl_cobranca) vl_carteira_simples, 
	'' ie_emissao_bloqueto, 
	'' ds_nosso_numero, 
	0 qt_cobranca_vinculada, 
	0 qt_lote_arquivo, 
	0 qt_reg_arquivo, 
	' ' nm_banco 
from	titulo_receber_cobr b, 
	cobranca_escritural a 
where	a.nr_sequencia		= b.nr_seq_cobranca 
and	a.nr_sequencia		= nr_seq_cobr_escrit_p 
group by a.nr_sequencia, 
 	 a.dt_remessa_retorno, 
	 a.dt_remessa_retorno, 
	 a.cd_banco 

union
 
select	5 nr_registro, 
	9 tp_registro, 
	a.nr_sequencia nr_seq_envio, 
	a.dt_remessa_retorno, 
	a.dt_remessa_retorno dt_credito, 
	a.cd_banco, 
	' ' cd_cgc, 
	' ' cd_convenio_banco, 
	' ' cd_agencia_bancaria, 
	0 nr_digito_agencia, 
	' ' nr_conta_corrente, 
	' ' nm_empresa, 
	' ' cd_movimento, 
	0 nr_titulo, 
	' ' cd_carteira, 
	0 nr_doc_cobranca, 
	clock_timestamp() dt_vencimento, 
	clock_timestamp() dt_emissao, 
	a.dt_remessa_retorno dt_desconto, 
	clock_timestamp() dt_juros_mora, 
	0 nr_operacao_credito, 
	0 vl_cobranca, 
	0 vl_juros_mora, 
	0 vl_desconto, 
	0 ie_tipo_inscricao, 
	' ' nr_inscricao, 
	' ' nm_pessoa, 
	' ' ds_endereco, 
	' ' ds_bairro, 
	' ' cd_cep, 
	' ' ds_cidade, 
	' ' ds_uf, 
	count(*) qt_cobranca_simples, 
	sum(b.vl_cobranca) vl_carteira_simples, 
	'' ie_emissao_bloqueto, 
	'' ds_nosso_numero, 
	0 qt_cobranca_vinculada, 
	000001 qt_lote_arquivo, 
	count(*) qt_reg_arquivo, 
	' ' nm_banco 
from	titulo_receber_cobr b, 
	cobranca_escritural a 
where	a.nr_sequencia		= b.nr_seq_cobranca 
and	a.nr_sequencia		= nr_seq_cobr_escrit_p 
group by a.nr_sequencia, 
 	 a.dt_remessa_retorno, 
	 a.dt_remessa_retorno, 
	 a.cd_banco 
) alias53 
order by nr_registro, 
	 nr_doc_cobranca;


BEGIN 
 
delete	from w_cobranca_banco;
commit;
 
open c01;
loop 
fetch c01 into 
	nr_registro_w, 
	tp_registro_w, 
	nr_seq_envio_w, 
	dt_remessa_retorno_w, 
	dt_credito_w, 
	cd_banco_w, 
	cd_cgc_w, 
	cd_convenio_banco_w, 
	cd_agencia_bancaria_w, 
	nr_digito_agencia_w, 
	nr_conta_corrente_w, 
	nm_empresa_w, 
	cd_movimento_w, 
	nr_titulo_w, 
	cd_carteira_w, 
	nr_doc_cobranca_w, 
	dt_vencimento_w, 
	dt_emissao_w, 
	dt_desconto_w, 
	dt_juros_mora_w, 
	nr_operacao_credito_w, 
	vl_cobranca_w, 
	vl_juros_mora_w, 
	vl_desconto_w, 
	ie_tipo_inscricao_w, 
	nr_inscricao_w, 
	nm_pessoa_w, 
	ds_endereco_w, 
	ds_bairro_w, 
	cd_cep_w, 
	ds_cidade_w, 
	ds_uf_w, 
	qt_cobranca_simples_w, 
	vl_carteira_simples_w, 
	ie_emissao_bloqueto_w, 
	ds_nosso_numero_w, 
	qt_cobranca_vinculada_w, 
	qt_lote_arquivo_w, 
	qt_reg_arquivo_w, 
	nm_banco_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
 
insert	into	w_cobranca_banco(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		IE_TIPO_REGISTRO, 
		nr_seq_envio, 
		DT_GERACAO, 
		DT_RECEBIMENTO, 
		CD_BANCO, 
		DS_CGC_CPF, 
		CD_AGENCIA_BANCARIA, 
		nr_digito_agencia, 
		CD_CONTA, 
		NM_EMPRESA, 
		NR_TITULO, 
		DT_VENCIMENTO, 
		DT_EMISSAO, 
		VL_TITULO, 
		VL_JUROS, 
		VL_DESCONTO, 
		IE_TIPO_PESSOA, 
		NM_PAGADOR, 
		DS_ENDERECO, 
		DS_BAIRRO, 
		CD_CEP,	 
		DS_CIDADE, 
		SG_ESTADO, 
		qt_reg_lote, 
		vl_tot_registros, 
		qt_lotes, 
		qt_registros, 
		ds_banco, 
		nr_seq_reg_lote, 
		nr_registro) 
	values (nextval('w_interf_itau_seq'), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		tp_registro_w, 
		nr_seq_envio_w, 
		dt_remessa_retorno_w, 
		dt_credito_w, 
		cd_banco_w, 
		cd_cgc_w, 
		cd_agencia_bancaria_w, 
		nr_digito_agencia_w, 
		nr_conta_corrente_w, 
		nm_empresa_w, 
		nr_titulo_w, 
		dt_vencimento_w, 
		dt_emissao_w, 
		vl_cobranca_w, 
		vl_juros_mora_w, 
		vl_desconto_w, 
		ie_tipo_inscricao_w, 
		nm_pessoa_w, 
		ds_endereco_w, 
		substr(ds_bairro_w,1,40), 
		cd_cep_w, 
		ds_cidade_w, 
		ds_uf_w, 
		qt_cobranca_simples_w, 
		vl_carteira_simples_w, 
		qt_lote_arquivo_w, 
		qt_reg_arquivo_w, 
		nm_banco_w, 
		nr_seq_reg_lote_w, 
		nr_registro_w);
 
 
if (tp_registro_w in (3,4)) then 
	nr_seq_reg_lote_w := nr_seq_reg_lote_w + 1;
	end if;
 
 
end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cobranca_santander (nr_seq_cobr_escrit_p bigint, nm_usuario_p text) FROM PUBLIC;

