-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_preco_mat_aut_conv ( nr_seq_material_p bigint, nr_seq_mat_autorizado_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


cd_material_w			integer;
qt_material_w			double precision;
nr_seq_autorizacao_w		bigint;
ie_cobra_paciente_w		varchar(1);
ie_consignado_w			varchar(1);
nr_atendimento_w		bigint;
cd_convenio_w			bigint;
dt_pedido_w			timestamp;
dt_agenda_autor_w   timestamp;
cd_categoria_w			varchar(10);
dt_preco_w			timestamp;
vl_preco_w			double precision;
DT_ULT_VIGENCIA_W		timestamp;
CD_TAB_PRECO_MAT_W		smallint;
IE_ORIGEM_PRECO_W		smallint;
tx_conversao_conv_w		double precision;
cd_fornecedor_w			varchar(14);
cd_cond_pagto_w			integer;
nr_sequencia_autor_w		bigint;
cd_tipo_acomodacao_w		bigint;
ie_tipo_atendimento_w		smallint;
nr_seq_agenda_w			autorizacao_convenio.nr_seq_agenda%type;
cd_cgc_fornec_w			varchar(14);
ie_conversao_mat_w		varchar(01);
ie_data_vig_preco_mat_autor_w	varchar(15) := 'A';
nr_seq_regra_plano_w		bigint;
ie_gerar_valor_zerado_w		varchar(15) := 'N';
ie_atualiza_pr_adicional_w	varchar(15) := 'S';
nr_seq_mat_atend_pac_w		bigint;
nr_seq_opme_w			bigint;
ie_regra_acresc_mat_autor_w	varchar(1) := 'N';
ie_gerar_vl_cotado_opme_aut_w	varchar(1) := 'N';
pr_adicional_w			double precision;
ie_reducao_acrescimo_w		varchar(1);
nr_seq_bras_preco_w		bigint;
nr_seq_mat_bras_w		bigint;
nr_seq_conv_bras_w		bigint;
nr_seq_conv_simpro_w		bigint;
nr_seq_mat_simpro_w		bigint;
nr_seq_simpro_preco_w		bigint;
nr_seq_ajuste_mat_w		bigint;
nr_seq_marca_w			bigint;
nr_seq_gestao_w			bigint;	
ie_aplicar_tx_conversao_w	varchar(15);
nr_seq_paciente_w       bigint;
nr_seq_paciente_setor_w   bigint;
nr_ciclo_w              smallint;

BEGIN

ie_atualiza_pr_adicional_w	:= coalesce(obter_valor_param_usuario(3006, 42, obter_perfil_ativo, nm_usuario_p, CD_ESTABELECIMENTO_P),'S');
ie_aplicar_tx_conversao_w	:= coalesce(obter_valor_param_usuario(3004, 163, obter_perfil_ativo, nm_usuario_p, CD_ESTABELECIMENTO_P),'N');

if (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') then
	select	coalesce(max(ie_data_vig_preco_mat_autor),'A'),
		coalesce(max(ie_regra_acresc_mat_autor),'N'),
		coalesce(max(ie_gerar_vl_cotado_opme_autor),'S')
	into STRICT	ie_data_vig_preco_mat_autor_w,
		ie_regra_acresc_mat_autor_w,
		ie_gerar_vl_cotado_opme_aut_w
	from	parametro_faturamento
	where	cd_estabelecimento	= cd_estabelecimento_p;
	
end if;

if (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') then

	select	a.cd_material,
		CASE WHEN coalesce(a.qt_material,0)=0 THEN coalesce(a.qt_solicitada,0)  ELSE a.qt_material END ,
		a.nr_seq_autorizacao,
		b.ie_cobra_paciente,
		b.ie_consignado,
		a.cd_cgc_fornec,
		a.nr_seq_regra_plano,
		a.nr_seq_marca
	into STRICT	cd_material_w,
		qt_material_w,
		nr_seq_autorizacao_w,
		ie_cobra_paciente_w,
		ie_consignado_w,
		cd_cgc_fornec_w,
		nr_seq_regra_plano_w,
		nr_seq_marca_w
	from	material b,
		material_autor_cirurgia a
	where	a.nr_sequencia	= nr_seq_material_p
	  and	a.cd_material	= b.cd_material;

	select	nr_atendimento,
		cd_convenio,
		coalesce(CASE WHEN ie_data_vig_preco_mat_autor_w='A' THEN dt_pedido WHEN ie_data_vig_preco_mat_autor_w='G' THEN dt_previsao END ,dt_pedido),
		nr_seq_agenda
	into STRICT	nr_atendimento_w,
		cd_convenio_w,
		dt_pedido_w,
		nr_seq_agenda_w
	from	autorizacao_cirurgia_v
	where	nr_sequencia		= nr_seq_autorizacao_w;

	select	coalesce(max(a.cd_convenio),cd_convenio_w),
		coalesce(max(a.cd_categoria),'X')
	into STRICT	cd_convenio_w,
		cd_categoria_w
	from	atend_categoria_convenio a
	where	a.nr_atendimento		= nr_atendimento_w
	and	a.dt_inicio_vigencia	=
			(SELECT	max(x.dt_inicio_vigencia)
			from	atend_categoria_convenio x
			where	x.nr_atendimento	= a.nr_atendimento);
			
			
	if (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then
		begin
		select	cd_convenio,
			cd_categoria
		into STRICT	cd_convenio_w,
			cd_categoria_w
		from	agenda_paciente
		where	nr_sequencia = nr_seq_agenda_w;
		exception
		when others then
			null;
		end;
	end if;
	

	if (cd_categoria_w	= 'X') then
		select min(cd_categoria)
		into STRICT cd_categoria_w
		from categoria_convenio
		where cd_convenio = cd_convenio_w
		  and ie_situacao = 'A';
	end if;

	select	obter_regra_data_preco('M',cd_convenio_w, dt_pedido_w, dt_pedido_w, dt_pedido_w, dt_pedido_w, dt_pedido_w, dt_pedido_w, dt_pedido_w)
	into STRICT	dt_preco_w
	;

	if (IE_COBRA_PACIENTE_W = 'N') 	then
		select CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT IE_COBRA_PACIENTE_W
		from material_convenio
		where cd_convenio = cd_convenio_w
		  and cd_material_conta = CD_MATERIAL_W;
	end if;
	
	if (IE_COBRA_PACIENTE_W = 'S') then
		
		SELECT * FROM Define_Preco_Material(
			CD_ESTABELECIMENTO_P, CD_CONVENIO_W, CD_CATEGORIA_W, DT_PRECO_W, CD_MATERIAL_W, 0	/* CD_TIPO_ACOMODACAO*/
, 0	/*IE_TIPO_ATENDIMENTO*/
, 0	/*CD_SETOR_ATENDIMENTO*/
, cd_cgc_fornec_w, NULL	/*qt_idade*/
, NULL	/*NR_SEQUENCIA*/
, null, null, null, nr_seq_marca_w, null, null, nr_atendimento_w, null, VL_PRECO_W, DT_ULT_VIGENCIA_W, CD_TAB_PRECO_MAT_W, IE_ORIGEM_PRECO_W, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w) INTO STRICT VL_PRECO_W, DT_ULT_VIGENCIA_W, CD_TAB_PRECO_MAT_W, IE_ORIGEM_PRECO_W, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w;
			
			

	end if;

	-- Verificar a Regra Convenio Material
	select	coalesce(max(obter_valor_conv_estab(cd_convenio, cd_estabelecimento_p, 'IE_CONVERSAO_MAT')),'R')
	into STRICT	ie_conversao_mat_w
	from	convenio
	where	cd_convenio	= cd_convenio_w;
	
	if (ie_conversao_mat_w	= 'O') then
		
		select	coalesce(max(qt_conversao_prest),1)
		into STRICT	tx_conversao_conv_w
		from	pls_material
		where	cd_material	= cd_material_w;		
	
	else
	
		select 	coalesce(max(tx_conversao_qtde),1)
		into STRICT 	tx_conversao_conv_w
		from 	conversao_material_convenio
		where 	cd_convenio = cd_convenio_w
		and 	cd_material = cd_material_w
		and     coalesce(ie_situacao,'A') = 'A'
		and 	coalesce(cd_estabelecimento,cd_estabelecimento_p) = cd_estabelecimento_p;
	
	end if;
	
	--OS 1693519 - Nao converter o preco pois isso sera feito ao gerar o TISS da conta para o convenio, e la ja realiza

	--Somente ira converter para o OPS conforme processo abaixo
	if (ie_conversao_mat_w = 'O') then
		if (tx_conversao_conv_w = 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(184432);
		elsif (tx_conversao_conv_w = 1) then
			VL_PRECO_W 	:= VL_PRECO_W;
		else
			vl_preco_w	:= round((vl_preco_w / tx_conversao_conv_w)::numeric,4);
			qt_material_w	:= (qt_material_w * tx_conversao_conv_w);	
		end if;
	end if;
	

	if (vl_preco_w = 0) then
		ds_retorno_p	:= cd_material_w;
	else
	
		begin
		select	coalesce(ie_gerar_vl_zerado,'N')
		into STRICT	ie_gerar_valor_zerado_w
		from	regra_convenio_plano_mat
		where	nr_sequencia = nr_seq_regra_plano_w;
		exception
		when others then
			ie_gerar_valor_zerado_w := 'N';
		end;
	
		if (ie_gerar_valor_zerado_w = 'S') then
			vl_preco_w := 0;
		end if;
		
		update	material_autor_cirurgia
		set	vl_material		= coalesce(vl_preco_w,0) * qt_material_w,
			nm_usuario		= nm_usuario_p,
			vl_unitario_material	= coalesce(vl_preco_w,0),
			ie_origem_preco		= IE_ORIGEM_PRECO_W,
			pr_adicional		= CASE WHEN ie_atualiza_pr_adicional_w='S' THEN pr_adicional  ELSE CASE WHEN ie_origem_preco_w = NULL THEN pr_adicional  ELSE null END  END
		where	nr_sequencia		= nr_seq_material_p;
	end if;

elsif (nr_seq_mat_autorizado_p IS NOT NULL AND nr_seq_mat_autorizado_p::text <> '') then

	select	a.cd_material,
		a.qt_solicitada,
		a.nr_sequencia_autor,
		b.ie_cobra_paciente,
		b.ie_consignado,
		a.cd_cgc_fabricante,
		a.nr_seq_regra_plano,
		a.nr_seq_opme,
		a.nr_seq_marca
	into STRICT	cd_material_w,
		qt_material_w,
		nr_sequencia_autor_w,
		ie_cobra_paciente_w,
		ie_consignado_w,
		cd_cgc_fornec_w,
		nr_seq_regra_plano_w,
		nr_seq_opme_w,
		nr_seq_marca_w
	from	material b,
		material_autorizado a
	where	a.nr_sequencia	= nr_seq_mat_autorizado_p
	  and	a.cd_material	= b.cd_material;

	select	nr_atendimento,
		cd_convenio,
		nr_seq_paciente,
        nr_seq_paciente_setor,
        nr_ciclo,
		cd_tipo_acomodacao,
		nr_seq_agenda,
		nr_seq_gestao
	into STRICT	nr_atendimento_w,
		cd_convenio_w,
		nr_seq_paciente_w,
        nr_seq_paciente_setor_w,
        nr_ciclo_w,
		cd_tipo_acomodacao_w,
		nr_seq_agenda_w,
		nr_seq_gestao_w
	from	autorizacao_convenio
	where	nr_sequencia		= nr_sequencia_autor_w;

    if (nr_seq_paciente_w IS NOT NULL AND nr_seq_paciente_w::text <> '') then

		select	min(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_real,dt_prevista)))
		into STRICT	dt_agenda_autor_w
		from	paciente_atendimento
		where	nr_seq_atendimento  = nr_seq_paciente_w;
		
		select coalesce(CASE WHEN ie_data_vig_preco_mat_autor_w='A' THEN dt_autorizacao WHEN ie_data_vig_preco_mat_autor_w='G' THEN dt_agenda_autor_w END ,dt_autorizacao)
		into STRICT    dt_pedido_w
		from	autorizacao_convenio
		where	nr_sequencia	= nr_sequencia_autor_w;

    
    elsif (nr_seq_paciente_setor_w IS NOT NULL AND nr_seq_paciente_setor_w::text <> '') and (nr_ciclo_w IS NOT NULL AND nr_ciclo_w::text <> '') then
	
		select	min(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_real,dt_prevista)))
		into STRICT	dt_agenda_autor_w
		from	paciente_atendimento
		where	nr_seq_paciente  = nr_seq_paciente_setor_w
		and	    nr_ciclo = nr_ciclo_w;
		
		select coalesce(CASE WHEN ie_data_vig_preco_mat_autor_w='A' THEN dt_autorizacao WHEN ie_data_vig_preco_mat_autor_w='G' THEN dt_agenda_autor_w END ,dt_autorizacao)
		into STRICT    dt_pedido_w
		from	autorizacao_convenio
		where	nr_sequencia	= nr_sequencia_autor_w;

    else

		select coalesce(CASE WHEN ie_data_vig_preco_mat_autor_w='A' THEN dt_autorizacao WHEN ie_data_vig_preco_mat_autor_w='G' THEN obter_dt_agenda_autor(nr_sequencia) END ,dt_autorizacao)
		into STRICT    dt_pedido_w
		from	autorizacao_convenio
		where	nr_sequencia	= nr_sequencia_autor_w;
	
	end if;

	
	if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then

		select	coalesce(max(a.cd_convenio),cd_convenio_w),
			coalesce(max(a.cd_categoria),'X')
		into STRICT	cd_convenio_w,
			cd_categoria_w
		from	atend_categoria_convenio a
		where	a.nr_atendimento	= nr_atendimento_w
		and	a.dt_inicio_vigencia	=
				(SELECT	max(x.dt_inicio_vigencia)
				from	atend_categoria_convenio x
				where	x.nr_atendimento	= a.nr_atendimento);

		select	obter_tipo_atendimento(nr_atendimento_w)
		into STRICT	ie_tipo_atendimento_w
		;









	elsif (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then
		
		select	coalesce(max(a.cd_convenio),cd_convenio_w),
			coalesce(max(a.cd_categoria),'X'),
			max(a.ie_tipo_atendimento)
		into STRICT	cd_convenio_w,
			cd_categoria_w,
			ie_tipo_atendimento_w
		from	agenda_paciente a
		where	nr_sequencia	= nr_seq_agenda_w;
	
	elsif (nr_seq_gestao_w IS NOT NULL AND nr_seq_gestao_w::text <> '') then


		select	coalesce(max(a.cd_convenio),cd_convenio_w),
			coalesce(max(a.cd_categoria),'X')
		into STRICT	cd_convenio_w,
			cd_categoria_w
		from	gestao_vaga a
		where	a.nr_sequencia	= nr_seq_gestao_w;
		
	else
		select	coalesce(max(cd_categoria),'X')
		into STRICT	cd_categoria_w
		from	AUTORIZACAO_CONVENIO_TISS
		where	nr_sequencia_autor = nr_sequencia_autor_w;
	end if;
	

	if (cd_categoria_w	= 'X') then
		select 	min(cd_categoria)
		into STRICT 	cd_categoria_w
		from 	categoria_convenio
		where 	cd_convenio = cd_convenio_w
		and 	ie_situacao = 'A';
	end if;
	
	select 	coalesce(max(a.nr_sequencia),0)
	into STRICT	nr_seq_mat_atend_pac_w
	from	material_atend_paciente a,
		material_autorizado b
	where	a.nr_seq_agenda_pac_opme = b.nr_seq_opme
	and	b.nr_sequencia = nr_seq_mat_autorizado_p;

	select	obter_regra_data_preco('M',cd_convenio_w, dt_pedido_w, dt_pedido_w, dt_pedido_w, dt_pedido_w, dt_pedido_w, dt_pedido_w, dt_pedido_w)
	into STRICT	dt_preco_w
	;
	
	if (ie_cobra_paciente_w = 'N') 	then
		
		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_cobra_paciente_w
		from 	material_convenio
		where 	cd_convenio = cd_convenio_w
		and 	cd_material_conta = cd_material_w;
	elsif (ie_cobra_paciente_w = 'S') then
		
		SELECT * FROM Define_Preco_Material(
				cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, dt_preco_w, cd_material_w, coalesce(cd_tipo_acomodacao_w,0)/* CD_TIPO_ACOMODACAO*/
, coalesce(ie_tipo_atendimento_w,0) /*IE_TIPO_ATENDIMENTO*/
, 0	/*CD_SETOR_ATENDIMENTO*/
, cd_cgc_fornec_w	/*CD_CGC_FORNECEDOR*/
, NULL	/*qt_idade*/
, nr_seq_mat_atend_pac_w	/*NR_SEQUENCIA*/
, null, null, null, nr_seq_marca_w, null, null, nr_atendimento_w, null, VL_PRECO_W, DT_ULT_VIGENCIA_W, CD_TAB_PRECO_MAT_W, IE_ORIGEM_PRECO_W, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w) INTO STRICT VL_PRECO_W, DT_ULT_VIGENCIA_W, CD_TAB_PRECO_MAT_W, IE_ORIGEM_PRECO_W, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w;

	end if;

	select 	coalesce(max(tx_conversao_qtde),1)
	into STRICT 	tx_conversao_conv_w
	from 	conversao_material_convenio
	where 	cd_convenio = cd_convenio_w
	and 	cd_material = cd_material_w
	and     coalesce(ie_situacao,'A') = 'A'
	and 	coalesce(cd_estabelecimento,cd_estabelecimento_p) = cd_estabelecimento_p;
	
	if (tx_conversao_conv_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(184432);
	elsif (tx_conversao_conv_w = 1) then
		vl_preco_w 	:= vl_preco_w;
	elsif (coalesce(ie_aplicar_tx_conversao_w,'N') in ('P','A')) then
		vl_preco_w	:= round((vl_preco_w / tx_conversao_conv_w)::numeric,4);
	end if;
	
	begin
	select	coalesce(ie_gerar_vl_zerado,'N')
	into STRICT	ie_gerar_valor_zerado_w
	from	regra_convenio_plano_mat
	where	nr_sequencia = nr_seq_regra_plano_w;
	exception
	when others then
		ie_gerar_valor_zerado_w := 'N';
	end;
	
	if (ie_gerar_valor_zerado_w = 'S') then
		vl_preco_w := 0;
	end if;
	
	ds_retorno_p := ie_origem_preco_w;
	
	if (coalesce(nr_seq_opme_w,0) > 0) and (coalesce(ie_origem_preco_w,0) = 0)  and (ie_gerar_vl_cotado_opme_aut_w = 'S') and (coalesce(vl_preco_w,0) = 0)then
		
		begin
		SELECT * FROM obter_tx_reducao_acresc_conv(cd_convenio_w, cd_estabelecimento_p, clock_timestamp(), cd_material_w, null, null, null, pr_adicional_w, ie_reducao_acrescimo_w) INTO STRICT pr_adicional_w, ie_reducao_acrescimo_w;
		exception
		when others then
			pr_adicional_w := 0;
			ie_reducao_acrescimo_w := 'A';
		end;
		
		if (ie_regra_acresc_mat_autor_w = 'S') then
		
			if (ie_origem_preco_w = 0) then
				begin
				ie_origem_preco_w := null;
				end;
			end if;
		
			select	coalesce(max(CASE WHEN coalesce(ie_origem_preco_w,6)=6 THEN CASE WHEN ie_reducao_acrescimo='R' THEN				(coalesce(a.vl_unitario_item,0) - (coalesce(a.vl_unitario_item,0)  * coalesce(b.pr_adicional/100,0)))  ELSE (coalesce(a.vl_unitario_item,0)  + (coalesce(a.vl_unitario_item,0)  * coalesce(b.pr_adicional/100,0))) END   ELSE coalesce(a.vl_unitario_item,0) END ),0)
			into STRICT	vl_preco_w
			from	agenda_pac_opme a,
				material_autorizado b
			where	a.nr_sequencia = b.nr_seq_opme
			and	a.nr_sequencia = nr_seq_opme_w;
		else
			select	coalesce(max(vl_unitario_item),0)
			into STRICT	vl_preco_w
			from	agenda_pac_opme
			where	nr_sequencia = nr_seq_opme_w;
		end if;
		
		update	material_autorizado
		set	nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			vl_unitario		= vl_preco_w,
			IE_ORIGEM_PRECO		= IE_ORIGEM_PRECO_W
		where	nr_sequencia		= nr_seq_mat_autorizado_p;
		
	else
		update	material_autorizado
		set	nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			vl_unitario		= vl_preco_w,
			IE_ORIGEM_PRECO		= IE_ORIGEM_PRECO_W
		where	nr_sequencia		= nr_seq_mat_autorizado_p;
	end if;

end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_preco_mat_aut_conv ( nr_seq_material_p bigint, nr_seq_mat_autorizado_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) FROM PUBLIC;

