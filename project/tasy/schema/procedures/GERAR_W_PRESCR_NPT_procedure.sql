-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_prescr_npt ( cd_estabelecimento_p bigint, nr_prescricao_p bigint, ie_npt_adulta_p text, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w		integer	:= 0;
nr_linha_w		integer;

nr_seq_nut_pac_w	bigint;
ds_material_w		varchar(80);
qt_volume_w		double precision;
cd_unidade_medida_w	varchar(30);

qt_volume_protocolo_w	double precision;/*David OS 99442*/
ie_modificado_w		varchar(1);

c01 CURSOR FOR
	SELECT	row_number() OVER () AS nr_linha,
		substr(obter_desc_material(c.cd_material),1,80) ds_material,
		c.qt_volume,
		c.qt_protocolo
	from	nut_pac_elem_mat c
	where	c.nr_seq_nut_pac 	= nr_seq_nut_pac_w;
	/*and	c.qt_volume	> 0;  David OS 99442*/

c02 CURSOR FOR
	SELECT	row_number() OVER () AS nr_linha,
		a.nr_sequencia,
		substr(Obter_desc_mat_npt(c.nr_seq_elem_mat),1,80) ds_material,
		c.qt_vol_cor,
		c.qt_protocolo
	from	nut_pac_elem_mat c,
		nut_elemento x,
		nut_pac_elemento b,
		nut_pac a
	where	a.nr_prescricao		= nr_prescricao_p
	and	a.nr_sequencia		= b.nr_seq_nut_pac
	and	b.nr_seq_elemento	= x.nr_sequencia
	and	b.nr_sequencia		= c.nr_seq_pac_elem;
	/*and	c.qt_volume	> 0;  David OS 99442*/

c03 CURSOR FOR
	SELECT	row_number() OVER () AS nr_linha,
		substr(obter_descricao_padrao('NUT_ELEMENTO','DS_ELEMENTO',NR_SEQ_ELEMENTO),1,40) ds_elemento,
		qt_diaria,
		cd_unidade_medida,
		qt_protocolo
	from	nut_pac_elemento
	where	nr_seq_nut_pac = nr_seq_nut_pac_w;

c04 CURSOR FOR
	SELECT	row_number() OVER () AS nr_linha,
		substr(obter_descricao_padrao('NUT_ELEMENTO','DS_ELEMENTO',NR_SEQ_ELEMENTO),1,40) ds_elemento,
		qt_diaria,		/*  alterei para qt_diaria OS89119 */
		cd_unidade_medida
	from	nut_pac_elemento
	where	nr_seq_nut_pac = nr_seq_nut_pac_w;



BEGIN

	CALL EXEC_SQL_DINAMICO_BV('TASY','delete from w_prescr_npt where nm_usuario = :nm_usuario', 'nm_usuario=' || nm_usuario_p);

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then


	if (ie_npt_adulta_p = 'S') then

		select 	max(nr_sequencia)
		into STRICT	nr_seq_nut_pac_w
		from	nut_pac
		where	nr_prescricao = nr_prescricao_p
		and	ie_npt_adulta =	'S';

		open c01;
		loop
		fetch c01 into
			nr_linha_w,
			ds_material_w,
			qt_volume_w,
			qt_volume_protocolo_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			if (coalesce(qt_volume_protocolo_w::text, '') = '') then
				ie_modificado_w := 'I';
			elsif (qt_volume_w <> qt_volume_protocolo_w) then
				ie_modificado_w := 'M';
			else
				ie_modificado_w := 'N';
			end if;

			if	((nr_linha_w mod 2) <> 0) then

				nr_sequencia_w:= nr_sequencia_w + 1;

				insert into w_prescr_npt(
					nr_sequencia,
					nr_prescricao,
					nr_seq_npt,
					ds_material_col1,
					qt_volume_col1,
					ie_modificado_col1,
					ds_material_col2,
					qt_volume_col2,
					ie_modificado_col2,
					ie_tipo_item,
					nm_usuario)
				values (	nr_sequencia_w,
					nr_prescricao_p,
					nr_seq_nut_pac_w,
					ds_material_w,
					qt_volume_w,
					ie_modificado_w,
					null,
					null,
					null,
					'P',
					nm_usuario_p);
			else
				update w_prescr_npt set
					ds_material_col2	= ds_material_w,
					qt_volume_col2		= qt_volume_w,
					ie_modificado_col2	= ie_modificado_w
				where	nr_sequencia 		= nr_sequencia_w;
			end if;
			end;
		end loop;
		close C01;

		open c03;
		loop
		fetch c03 into
			nr_linha_w,
			ds_material_w,
			qt_volume_w,
			cd_unidade_medida_w,
			qt_volume_protocolo_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin

			if (coalesce(qt_volume_protocolo_w::text, '') = '') then
				ie_modificado_w := 'I';
			elsif (qt_volume_w <> qt_volume_protocolo_w) then
				ie_modificado_w := 'M';
			else
				ie_modificado_w := 'N';
			end if;

			if	((nr_linha_w mod 2) <> 0) then

				nr_sequencia_w:= nr_sequencia_w + 1;

				insert into w_prescr_npt(
					nr_sequencia,
					nr_prescricao,
					nr_seq_npt,
					ds_material_col1,
					qt_volume_col1,
					ds_unid_med_col1,
					ie_modificado_col1,
					ds_material_col2,
					qt_volume_col2,
					ds_unid_med_col2,
					ie_modificado_col2,
					ie_tipo_item,
					nm_usuario)
				values (	nr_sequencia_w,
					nr_prescricao_p,
					nr_seq_nut_pac_w,
					ds_material_w,
					qt_volume_w,
					cd_unidade_medida_w,
					ie_modificado_w,
					null,
					null,
					null,
					null,
					'E',
					nm_usuario_p);
			else
				update w_prescr_npt set
					ds_material_col2	= ds_material_w,
					qt_volume_col2		= qt_volume_w,
					ds_unid_med_col2	= cd_unidade_medida_w,
					ie_modificado_col2	= ie_modificado_w
				where	nr_sequencia 		= nr_sequencia_w;
			end if;
			end;
		end loop;
		close C03;
	else
		open c02;
		loop
		fetch c02 into
			nr_linha_w,
			nr_seq_nut_pac_w,
			ds_material_w,
			qt_volume_w,
			qt_volume_protocolo_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			if (coalesce(qt_volume_protocolo_w::text, '') = '') then
				ie_modificado_w := 'I';
			elsif (qt_volume_w <> qt_volume_protocolo_w) then
				ie_modificado_w := 'M';
			else
				ie_modificado_w := 'N';
			end if;

			if	((nr_linha_w mod 2) <> 0) then

				nr_sequencia_w:= nr_sequencia_w + 1;

				insert into w_prescr_npt(
					nr_sequencia,
					nr_prescricao,
					nr_seq_npt,
					ds_material_col1,
					qt_volume_col1,
					ie_modificado_col1,
					ds_material_col2,
					qt_volume_col2,
					ie_modificado_col2,
					ie_tipo_item,
					nm_usuario)
				values (	nr_sequencia_w,
					nr_prescricao_p,
					nr_seq_nut_pac_w,
					ds_material_w,
					qt_volume_w,
					ie_modificado_w,
					null,
					null,
					null,
					'P',
					nm_usuario_p);
			else
				update w_prescr_npt set
					ds_material_col2	= ds_material_w,
					qt_volume_col2		= qt_volume_w,
					ie_modificado_col2	= ie_modificado_w
				where	nr_sequencia 		= nr_sequencia_w;
			end if;
			end;
		end loop;
		close C02;

		select 	max(nr_sequencia)
		into STRICT	nr_seq_nut_pac_w
		from	nut_pac
		where	nr_prescricao = nr_prescricao_p
		and	ie_npt_adulta =	'N';

		open c04;
		loop
		fetch c04 into
			nr_linha_w,
			ds_material_w,
			qt_volume_w,
			cd_unidade_medida_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
			begin

			if	((nr_linha_w mod 2) <> 0) then

				nr_sequencia_w:= nr_sequencia_w + 1;

				insert into w_prescr_npt(
					nr_sequencia,
					nr_prescricao,
					nr_seq_npt,
					ds_material_col1,
					qt_volume_col1,
					ds_unid_med_col1,
					ds_material_col2,
					qt_volume_col2,
					ds_unid_med_col2,
					ie_tipo_item,
					nm_usuario)
				values (	nr_sequencia_w,
					nr_prescricao_p,
					nr_seq_nut_pac_w,
					ds_material_w,
					qt_volume_w,
					cd_unidade_medida_w,
					null,
					null,
					null,
					'E',
					nm_usuario_p);
			else
				update w_prescr_npt set
					ds_material_col2	= ds_material_w,
					qt_volume_col2		= qt_volume_w,
					ds_unid_med_col2	= cd_unidade_medida_w
				where	nr_sequencia 		= nr_sequencia_w;
			end if;
			end;
		end loop;
		close C04;

	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_prescr_npt ( cd_estabelecimento_p bigint, nr_prescricao_p bigint, ie_npt_adulta_p text, nm_usuario_p text) FROM PUBLIC;

