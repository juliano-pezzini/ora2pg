-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_event_glosa ( nr_seq_reg_auxiliar_p w_ctb_livro_aux_event_liq.nr_seq_reg_auxiliar%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_origem_p w_ctb_livro_aux_event_liq.ie_ato_cooperado%type, ie_gerar_arquivo_p w_ctb_livro_aux_event_liq.ie_ato_cooperado%type default 'N') AS $body$
DECLARE

					
dt_vencimento_w				timestamp;
dt_contabil_w				timestamp;
dt_pagamento_w				timestamp;
nr_titulo_w				bigint;
nr_contador_w 				bigint := 0;
nr_nota_fiscal_w			nota_fiscal.nr_nota_fiscal%type;
ie_forma_contab_reembolso_w		pls_parametro_contabil.ie_forma_contab_reembolso%type;
dt_referencia_month_w			timestamp;
qt_prest_pgto_w				bigint;
ie_tipo_relacao_w			pls_prestador.ie_tipo_relacao%type;
dt_liberacao_w				ctb_livro_auxiliar.dt_liberacao%type;
dt_inicial_w				ctb_livro_auxiliar.dt_inicial%type;
dt_final_w				ctb_livro_auxiliar.dt_final%type;
ie_tipo_segurado_w			ctb_livro_auxiliar.ie_tipo_segurado%type;
ie_tipo_protocolo_w			ctb_livro_auxiliar.ie_tipo_protocolo%type;
ie_gerar_ind_classif_w			ctb_livro_auxiliar.ie_gerar_ind_classif%type;
ie_recurso_proprio_w			ctb_livro_auxiliar.ie_recurso_proprio%type;
ie_tipo_compartilhamento_w		pls_segurado_repasse.ie_tipo_compartilhamento%type;
ie_tipo_repasse_w			pls_segurado_repasse.ie_tipo_repasse%type;
dt_repasse_w				pls_segurado_repasse.dt_repasse%type;
dt_fim_repasse_w			pls_segurado_repasse.dt_fim_repasse%type;
ds_observacao_w				varchar(255);
ds_observacao_item_w			varchar(255);
ie_data_tipo_segurado_w			pls_parametros.ie_data_tipo_segurado%type;
dt_ref_repasse_w			pls_conta_proc.dt_procedimento%type;

/*VARIAVEIS DE GERACAO DO ARQUIVO*/

ds_erro_w				varchar(255);
ds_local_w				varchar(255);
arq_texto_w				utl_file.file_type;
nm_arquivo_w				varchar(255);
ds_nome_livro_w				varchar(255);
ds_periodo_w				varchar(255);

c_linha CURSOR FOR
	SELECT	w.nr_seq_protocolo											|| ';' ||
		w.ds_tipo_protocolo											|| ';' ||
		w.nr_documento												|| ';' ||
		coalesce(w.cd_procedimento,w.cd_material_ops)								|| ';' ||
		w.ds_item_mat_proc											|| ';' ||
		w.dt_ocorrencia												|| ';' ||
		w.dt_conhecimento											|| ';' ||
		w.cd_beneficiario											|| ';' ||
		substr(obter_valor_dominio(6,pls_obter_se_benef_remido(w.nr_seq_segurado,w.dt_ocorrencia)),1,255)	|| ';' ||
		w.nm_usuario_evento											|| ';' ||
		w.ds_tipo_segurado											|| ';' ||
		w.nr_cpf_cnpj_adic											|| ';' ||
		w.nm_prestador												|| ';' ||
		w.ie_tipo_operacao											|| ';' ||
		w.ds_grupo_ans												|| ';' ||
		substr(pls_obter_se_corresp_assumida(w.ie_tipo_segurado,
			(w.nr_protocolo_ans)),1,255)									|| ';' ||
		w.ds_tipo_relacao											|| ';' ||
		w.ds_ato_cooperado											|| ';' ||
		w.ds_modalidade_contrat											|| ';' ||
		w.ds_tipo_regulamentacao										|| ';' ||
		w.ds_tipo_contratacao											|| ';' ||
		w.ds_segmentacao											|| ';' ||
		w.vl_glosa												|| ';' ||
		w.vl_taxa_pgto												|| ';' ||
		w.vl_evento												|| ';' ||
		w.dt_contabilizacao											|| ';' ||
		w.nr_titulo												|| ';' ||
		w.dt_recuperacao											|| ';' ||
		w.dt_ressarcimento											|| ';' ||
		w.dt_pagamento												|| ';' ||
		w.dt_vencimento												|| ';' ||	
		w.cd_conta_contrapartida										|| ';' ||
		substr(ctb_obter_classif_conta(d.cd_conta_contabil, d.cd_classificacao, d.dt_inicio_vigencia),1,40)	|| ';' ||
		w.cd_conta_contabil											|| ';' ||
		substr(ctb_obter_classif_conta(c.cd_conta_contabil, c.cd_classificacao, c.dt_inicio_vigencia),1,40)	|| ';' ||
		substr(w.ds_tipo_documento,1,40)									|| ';' ||
		substr(pls_obter_se_corresp_assumida(w.ie_tipo_segurado,
			w.nr_contrato),1,255)										|| ';' ||
		w.dt_emissao												|| ';' ||
		dt_inicio_cobertura											|| ';' ||
		dt_fim_cobertura											|| ';' ||
		dt_referencia												|| ';' ||
		w.nm_usuario_princ											|| ';' ||
		substr(pls_obter_se_corresp_assumida(w.ie_tipo_segurado,
			w.nr_cpf_cnpj),1,255)										|| ';' ||
		substr(obter_valor_dominio(3579,w.ie_tipo_evento),1,255)						|| ';' ||
		substr(obter_valor_dominio(3384,w.ie_tipo_repasse), 1,255)						|| ';' ||
		substr(obter_valor_dominio(8980,w.ie_tipo_compartilhamento), 1,255)					|| ';' ||
		w.dt_inicio_compartilhamento										|| ';' ||
		w.dt_fim_compartilhamento										|| ';' ||
		w.ds_observacao	ds_linha
	FROM w_ctb_livro_aux_event_liq w
LEFT OUTER JOIN conta_contabil c ON (w.cd_conta_contabil = c.cd_conta_contabil)
LEFT OUTER JOIN conta_contabil d ON (w.cd_conta_contrapartida = d.cd_conta_contabil)
WHERE nr_seq_reg_auxiliar = nr_seq_reg_auxiliar_p order by (nr_documento)::numeric;

c_medica CURSOR FOR
	SELECT	nr_documento,
		nr_contrato,
		dt_emissao,
		dt_rescisao,
		ie_ato_cooperado,
		ie_modalidade_contrat,
		ie_regulamentacao,
		ie_tipo_contratacao,
		ie_segmentacao,
		nm_usuario_princ,
		nr_cpf_cnpj,
		nm_usuario_evento,
		dt_ocorrencia,
		dt_conhecimento,
		nm_prestador,
		nr_cpf_cnpj_adic,
		ie_tipo_documento,
		dt_pagamento,
		nr_seq_protocolo,
		ie_tipo_protocolo,
		nr_seq_material,
		cd_material_ops,
		cd_procedimento,
		ie_origem_proced,
		ds_item_mat_proc,
		cd_beneficiario,
		ie_tipo_operacao,
		ds_grupo_ans,
		ds_tipo_relacao,
		cd_conta_contabil,
		cd_conta_contrapartida,
		vl_evento,
		vl_glosa,
		nr_protocolo_ans,
		nr_seq_segurado,
		nr_seq_prestador,
		nr_seq_congenere,
		nr_seq_grupo_ans,
		dt_vencimento,
		dt_recuperacao,
		ie_tipo_segurado,
		nr_seq_pagador,
		ie_tipo_grupo_ans,
		dt_liberacao_pag,
		dt_apresentacao_lote,
		dt_competencia_lote,
		vl_taxa_pgto
	from	(	
		SELECT	c.nr_sequencia nr_documento,
			t.nr_contrato nr_contrato,
			c.dt_emissao dt_emissao,
			s.dt_rescisao dt_rescisao,
			cp.ie_ato_cooperado ie_ato_cooperado,
			p.ie_preco ie_modalidade_contrat,
			p.ie_regulamentacao ie_regulamentacao,
			p.ie_tipo_contratacao ie_tipo_contratacao,
			p.ie_segmentacao ie_segmentacao,
			substr(pls_obter_nomes_contrato(s.nr_seq_pagador,'P'),1,255) nm_usuario_princ,
			coalesce(pls_obter_dados_pagador(s.nr_seq_pagador,'CPF'),pls_obter_dados_pagador(s.nr_seq_pagador,'CGC')) nr_cpf_cnpj,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'N'),1,255) nm_usuario_evento,
			cp.dt_procedimento dt_ocorrencia,
			r.dt_mes_competencia dt_conhecimento,
			substr(coalesce(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'N'),pls_obter_nome_congenere(r.nr_seq_congenere)),1,255) nm_prestador,
			substr(CASE WHEN coalesce(c.nr_seq_prestador_exec::text, '') = '' THEN					pls_obter_cnpj_congenere(r.nr_seq_congenere)  ELSE coalesce(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CPF'), pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CGC')) END ,1,255) nr_cpf_cnpj_adic,	
			'CM' ie_tipo_documento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_pagamento,
			r.nr_sequencia nr_seq_protocolo,
			r.ie_tipo_protocolo ie_tipo_protocolo,
			null nr_seq_material,
			null cd_material_ops,
			cp.cd_procedimento cd_procedimento,
			cp.ie_origem_proced ie_origem_proced,
			substr(obter_descricao_procedimento(cp.cd_procedimento, cp.ie_origem_proced),1,255) ds_item_mat_proc,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,30) cd_beneficiario,
			'G' ie_tipo_operacao,
			substr(pls_obter_dados_grupo_ans(cp.nr_seq_grupo_ans,'D'),1,255) ds_grupo_ans,
			substr(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'TR'),1,255) ds_tipo_relacao,
			cp.cd_conta_glosa_cred cd_conta_contabil,
			cp.cd_conta_glosa_deb	cd_conta_contrapartida,
			sum(cp.vl_provisao) vl_evento,
			sum(cp.vl_glosa) vl_glosa,
			CASE WHEN p.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(p.nr_protocolo_ans, p.cd_scpa) END  nr_protocolo_ans,
			s.nr_sequencia	nr_seq_segurado,
			c.nr_seq_prestador_exec nr_seq_prestador,
			r.nr_seq_congenere nr_seq_congenere,
			cp.nr_seq_grupo_ans nr_seq_grupo_ans,
			s.dt_rescisao dt_vencimento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_recuperacao,
			c.ie_tipo_segurado ie_tipo_segurado,
			s.nr_seq_pagador,
			k.ie_tipo_grupo_ans,
			null dt_liberacao_pag,
			null dt_apresentacao_lote,
			null dt_competencia_lote,
			0 vl_taxa_pgto
		FROM pls_contrato t, pls_protocolo_conta r, pls_conta c
LEFT OUTER JOIN pls_plano p ON (c.nr_seq_plano = p.nr_sequencia)
LEFT OUTER JOIN pls_segurado s ON (c.nr_seq_segurado = s.nr_sequencia)
, pls_conta_proc cp
LEFT OUTER JOIN ans_grupo_despesa k ON (cp.nr_seq_grupo_ans = k.nr_sequencia)
WHERE c.nr_seq_protocolo 	= r.nr_sequencia  and s.nr_seq_contrato 	= t.nr_sequencia and cp.nr_seq_conta 	= c.nr_sequencia  and cp.vl_glosa <> 0 and r.ie_tipo_protocolo = 'C' and qt_prest_pgto_w = 0 and not exists (	select	1
						from	pls_conta_medica_resumo	y
						where	c.nr_sequencia	= y.nr_seq_conta
						and	cp.nr_sequencia	= y.nr_seq_conta_proc
						and	(y.cd_conta_glosa_cred IS NOT NULL AND y.cd_conta_glosa_cred::text <> '')) and r.dt_mes_competencia between dt_inicial_w and dt_final_w and cp.ie_status not in ('D','M') and ((coalesce(ie_tipo_segurado_w, 'X')	= coalesce(c.ie_tipo_segurado, 'X'))
		or (coalesce(ie_tipo_segurado_w, 'X')	= 'X')) group by c.dt_emissao,
			c.nr_seq_prestador_exec,
			c.nr_seq_protocolo,
			c.nr_sequencia,
			cp.cd_conta_glosa_cred,
			cp.cd_conta_glosa_deb,
			cp.cd_procedimento,
			cp.dt_procedimento,
			cp.ie_ato_cooperado,
			cp.ie_origem_proced,
			cp.nr_seq_grupo_ans,
			p.ie_preco,
			p.ie_regulamentacao,
			p.ie_segmentacao,
			p.ie_tipo_contratacao,
			p.nr_protocolo_ans,
			p.ie_tipo_operacao,
			p.cd_scpa,
			r.dt_mes_competencia,
			r.ie_tipo_protocolo,
			r.nr_seq_congenere,
			r.nr_sequencia,
			s.dt_rescisao,
			c.ie_tipo_segurado,
			s.nr_seq_pagador,
			s.nr_sequencia,
			t.nr_contrato,
			k.ie_tipo_grupo_ans,
			c.cd_pessoa_fisica,
			c.cd_cgc
		
union all

		select	c.nr_sequencia nr_documento,
			t.nr_contrato nr_contrato,
			c.dt_emissao dt_emissao,
			s.dt_rescisao dt_rescisao,
			cm.ie_ato_cooperado ie_ato_cooperado,
			p.ie_preco ie_modalidade_contrat,
			p.ie_regulamentacao ie_regulamentacao,
			p.ie_tipo_contratacao ie_tipo_contratacao,
			p.ie_segmentacao ie_segmentacao,
			substr(pls_obter_nomes_contrato(s.nr_seq_pagador,'P'),1,255) nm_usuario_princ,
			coalesce(pls_obter_dados_pagador(s.nr_seq_pagador,'CPF'),pls_obter_dados_pagador(s.nr_seq_pagador,'CGC')) nr_cpf_cnpj,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'N'),1,255) nm_usuario_evento,
			cm.dt_atendimento dt_ocorrencia,
			r.dt_mes_competencia dt_conhecimento,
			substr(coalesce(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'N'),pls_obter_nome_congenere(r.nr_seq_congenere)),1,255) nm_prestador,
			substr(CASE WHEN coalesce(c.nr_seq_prestador_exec::text, '') = '' THEN 					pls_obter_cnpj_congenere(r.nr_seq_congenere)  ELSE coalesce(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CPF'), pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CGC')) END ,1,255) nr_cpf_cnpj_adic,
			'CM' ie_tipo_documento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_pagamento,
			r.nr_sequencia nr_seq_protocolo,
			r.ie_tipo_protocolo ie_tipo_protocolo,
			cm.nr_seq_material nr_seq_material,
			substr(pls_obter_dados_conta_mat(cm.nr_sequencia,'O'),1,255) cd_material_ops,
			null cd_procedimento,
			null ie_origem_proced,
			substr(pls_obter_dados_conta_mat(cm.nr_sequencia,'D'),1,255) ds_item_mat_proc,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,30) cd_beneficiario,
			'G' ie_tipo_operacao,
			substr(pls_obter_dados_grupo_ans(cm.nr_seq_grupo_ans,'D'),1,255) ds_grupo_ans,
			substr(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'TR'),1,255) ds_tipo_relacao,
			cm.cd_conta_glosa_cred cd_conta_contabil,
			cm.cd_conta_glosa_deb	cd_conta_contrapartida,
			sum(cm.vl_provisao) vl_evento,
			sum(cm.vl_glosa) vl_glosa,
			CASE WHEN p.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(p.nr_protocolo_ans, p.cd_scpa) END  nr_protocolo_ans,
			s.nr_sequencia	nr_seq_segurado,
			c.nr_seq_prestador_exec nr_seq_prestador,
			r.nr_seq_congenere nr_seq_congenere,
			cm.nr_seq_grupo_ans nr_seq_grupo_ans,
			s.dt_rescisao dt_vencimento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_recuperacao,
			c.ie_tipo_segurado ie_tipo_segurado,
			s.nr_seq_pagador,
			k.ie_tipo_grupo_ans,
			null dt_liberacao_pag,
			null dt_apresentacao_lote,
			null dt_competencia_lote,
			0 vl_taxa_pgto
		FROM pls_contrato t, pls_protocolo_conta r, pls_conta c
LEFT OUTER JOIN pls_plano p ON (c.nr_seq_plano = p.nr_sequencia)
LEFT OUTER JOIN pls_segurado s ON (c.nr_seq_segurado = s.nr_sequencia)
, pls_conta_mat cm
LEFT OUTER JOIN ans_grupo_despesa k ON (cm.nr_seq_grupo_ans = k.nr_sequencia)
WHERE c.nr_seq_protocolo 	= r.nr_sequencia  and s.nr_seq_contrato 	= t.nr_sequencia  and cm.vl_glosa <> 0 and r.ie_tipo_protocolo = 'C' and qt_prest_pgto_w = 0 and cm.nr_seq_conta = c.nr_sequencia and not exists (	select	1
						from	pls_conta_medica_resumo	y
						where	c.nr_sequencia	= y.nr_seq_conta
						and	cm.nr_sequencia	= y.nr_seq_conta_mat
						and	(y.cd_conta_glosa_cred IS NOT NULL AND y.cd_conta_glosa_cred::text <> '')) and r.dt_mes_competencia between dt_inicial_w and dt_final_w and cm.ie_status not in ('D','M') and ((coalesce(ie_tipo_segurado_w, 'X')	= coalesce(c.ie_tipo_segurado, 'X'))
		or (coalesce(ie_tipo_segurado_w, 'X')	= 'X')) group by c.dt_emissao,	
			c.nr_seq_prestador_exec,	
			c.nr_seq_protocolo,	
			c.nr_seq_protocolo,	
			c.nr_sequencia,	
			cm.cd_conta_glosa_cred,	
			cm.cd_conta_glosa_deb,
			cm.dt_atendimento,	
			cm.ie_ato_cooperado,	
			cm.nr_seq_grupo_ans,	
			cm.nr_seq_grupo_ans,	
			cm.nr_sequencia,
			cm.nr_seq_material,	
			p.ie_preco,	
			p.ie_regulamentacao,	
			p.ie_segmentacao,	
			p.ie_tipo_contratacao,	
			p.nr_protocolo_ans,
			p.ie_tipo_operacao,
			p.cd_scpa,
			r.dt_mes_competencia,	
			r.ie_tipo_protocolo,	
			r.nr_seq_congenere,	
			r.nr_sequencia,	
			s.dt_rescisao,	
			s.dt_rescisao,	
			c.ie_tipo_segurado,
			s.nr_seq_pagador,	
			s.nr_seq_pagador,	
			s.nr_sequencia,	
			s.nr_sequencia,	
			s.nr_sequencia,	
			t.nr_contrato,
			k.ie_tipo_grupo_ans
		
union all

		select 	c.nr_sequencia nr_documento,
			t.nr_contrato nr_contrato,
			c.dt_emissao dt_emissao,
			s.dt_rescisao dt_rescisao,
			coalesce(b.ie_ato_cooperado,a.ie_ato_cooperado) ie_ato_cooperado,
			p.ie_preco ie_modalidade_contrat,
			p.ie_regulamentacao ie_regulamentacao,
			p.ie_tipo_contratacao ie_tipo_contratacao,
			p.ie_segmentacao ie_segmentacao,
			substr(pls_obter_nomes_contrato(s.nr_seq_pagador,'P'),1,255) nm_usuario_princ,
			coalesce(pls_obter_dados_pagador(s.nr_seq_pagador,'CPF'),pls_obter_dados_pagador(s.nr_seq_pagador,'CGC')) nr_cpf_cnpj,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'N'),1,255) nm_usuario_evento,
			a.dt_procedimento dt_ocorrencia,
			r.dt_mes_competencia dt_conhecimento,
			substr(coalesce(pls_obter_dados_prestador(b.nr_seq_prestador_pgto,'N'),pls_obter_nome_congenere(r.nr_seq_congenere)),1,255) nm_prestador,
			substr(CASE WHEN coalesce(b.nr_seq_prestador_pgto::text, '') = '' THEN 					pls_obter_cnpj_congenere(r.nr_seq_congenere)  ELSE coalesce(pls_obter_dados_prestador(b.nr_seq_prestador_pgto,'CPF'), pls_obter_dados_prestador(b.nr_seq_prestador_pgto,'CGC')) END ,1,255) nr_cpf_cnpj_adic,			
			'CM' ie_tipo_documento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_pagamento,
			r.nr_sequencia nr_seq_protocolo,
			r.ie_tipo_protocolo ie_tipo_protocolo,
			null nr_seq_material,
			null cd_material_ops,
			coalesce(b.cd_procedimento,a.cd_procedimento) cd_procedimento,
			coalesce(b.ie_origem_proced,a.ie_origem_proced) ie_origem_proced,
			substr(obter_descricao_procedimento(coalesce(b.cd_procedimento,a.cd_procedimento),coalesce(b.ie_origem_proced,a.ie_origem_proced)),1,255) ds_item_mat_proc,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,30) cd_beneficiario,
			'G' ie_tipo_operacao,
			substr(pls_obter_dados_grupo_ans(a.nr_seq_grupo_ans,'D'),1,255) ds_grupo_ans,
			substr(pls_obter_dados_prestador(b.nr_seq_prestador_pgto,'TR'),1,255) ds_tipo_relacao,
			coalesce(b.cd_conta_glosa_cred,a.cd_conta_glosa_cred) cd_conta_contabil,
			coalesce(b.cd_conta_glosa_deb,a.cd_conta_glosa_deb) cd_conta_contrapartida,
			sum(a.vl_provisao) vl_evento,
			sum(b.vl_glosa) vl_glosa,
			CASE WHEN p.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(p.nr_protocolo_ans, p.cd_scpa) END  nr_protocolo_ans,
			s.nr_sequencia	nr_seq_segurado,
			b.nr_seq_prestador_pgto nr_seq_prestador,
			r.nr_seq_congenere nr_seq_congenere,
			a.nr_seq_grupo_ans nr_seq_grupo_ans,
			s.dt_rescisao dt_vencimento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_recuperacao,
			c.ie_tipo_segurado ie_tipo_segurado,
			s.nr_seq_pagador,
			k.ie_tipo_grupo_ans,
			null dt_liberacao_pag,
			null dt_apresentacao_lote,
			null dt_competencia_lote,
			sum(coalesce(b.vl_taxa_adm,0) + coalesce(b.vl_taxa_adm_co,0) + coalesce(b.vl_taxa_adm_mat,0)) vl_taxa_pgto
		FROM pls_protocolo_conta r, pls_conta_medica_resumo b, pls_conta c
LEFT OUTER JOIN pls_plano p ON (c.nr_seq_plano = p.nr_sequencia)
LEFT OUTER JOIN pls_segurado s ON (c.nr_seq_segurado = s.nr_sequencia)
LEFT OUTER JOIN pls_contrato t ON (s.nr_seq_contrato = t.nr_sequencia)
, pls_conta_proc a
LEFT OUTER JOIN ans_grupo_despesa k ON (a.nr_seq_grupo_ans = k.nr_sequencia)
WHERE c.nr_seq_protocolo 	= r.nr_sequencia   and c.nr_sequencia		= a.nr_seq_conta and a.nr_seq_conta 		= b.nr_seq_conta and a.nr_sequencia 		= b.nr_seq_conta_proc  and b.vl_glosa <> 0 and r.dt_mes_competencia between dt_inicial_w and dt_final_w and ((coalesce(ie_tipo_segurado_w,'X') = coalesce(c.ie_tipo_segurado,'X'))
		or (coalesce(ie_tipo_segurado_w,'X') = 'X')) and coalesce(ie_tipo_protocolo_w,r.ie_tipo_protocolo) = r.ie_tipo_protocolo and coalesce(ie_tipo_protocolo_w,'X') in ('C','X') and qt_prest_pgto_w > 0 and c.ie_status = 'F' and b.ie_situacao = 'A' and exists (	select	1
				from	pls_prestador	z
				where	b.nr_seq_prestador_pgto	= z.nr_sequencia
				and	ie_recurso_proprio_w	= 'N'
				and	z.ie_tipo_relacao	<> 'P'
				
union all

				select	1
				
				where	ie_recurso_proprio_w	= 'S') and a.ie_status not in ('D','M') group by a.cd_procedimento,
			a.dt_procedimento,
			a.ie_origem_proced,
			a.nr_seq_grupo_ans,
			b.cd_procedimento,
			b.ie_origem_proced,
			b.nr_seq_prestador_pgto,
			c.dt_emissao,
			c.nr_seq_prestador_exec,
			c.nr_seq_protocolo,
			c.nr_sequencia,
			coalesce(b.cd_conta_glosa_cred,a.cd_conta_glosa_cred),
			coalesce(b.cd_conta_glosa_deb,a.cd_conta_glosa_deb),
			coalesce(b.ie_ato_cooperado,a.ie_ato_cooperado),
			p.ie_preco,
			p.ie_regulamentacao,
			p.ie_segmentacao,
			p.ie_tipo_contratacao,
			p.nr_protocolo_ans,
			p.ie_tipo_operacao,
			p.cd_scpa,
			r.dt_mes_competencia,
			r.ie_tipo_protocolo,
			r.nr_seq_congenere,
			r.nr_seq_congenere,
			r.nr_sequencia,
			s.dt_rescisao,
			c.ie_tipo_segurado,
			s.nr_seq_pagador,
			s.nr_sequencia,
			t.nr_contrato,
			k.ie_tipo_grupo_ans,
			c.cd_pessoa_fisica,
			c.cd_cgc
		
union all

		select 	c.nr_sequencia nr_documento,
			t.nr_contrato nr_contrato,
			c.dt_emissao dt_emissao,
			s.dt_rescisao dt_rescisao,
			coalesce(b.ie_ato_cooperado,a.ie_ato_cooperado) ie_ato_cooperado,
			p.ie_preco ie_modalidade_contrat,
			p.ie_regulamentacao ie_regulamentacao,
			p.ie_tipo_contratacao ie_tipo_contratacao,
			p.ie_segmentacao ie_segmentacao,
			substr(pls_obter_nomes_contrato(s.nr_seq_pagador,'P'),1,255) nm_usuario_princ,
			coalesce(pls_obter_dados_pagador(s.nr_seq_pagador,'CPF'),pls_obter_dados_pagador(s.nr_seq_pagador,'CGC')) nr_cpf_cnpj,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'N'),1,255) nm_usuario_evento,
			a.dt_atendimento dt_ocorrencia,
			r.dt_mes_competencia dt_conhecimento,
			substr(coalesce(pls_obter_dados_prestador(b.nr_seq_prestador_pgto,'N'),pls_obter_nome_congenere(r.nr_seq_congenere)),1,255) nm_prestador,
			substr(CASE WHEN coalesce(b.nr_seq_prestador_pgto::text, '') = '' THEN 					pls_obter_cnpj_congenere(r.nr_seq_congenere)  ELSE coalesce(pls_obter_dados_prestador(b.nr_seq_prestador_pgto,'CPF'), pls_obter_dados_prestador(b.nr_seq_prestador_pgto,'CGC')) END ,1,255) nr_cpf_cnpj_adic,			
			'CM' ie_tipo_documento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_pagamento,
			r.nr_sequencia nr_seq_protocolo,
			r.ie_tipo_protocolo ie_tipo_protocolo,
			a.nr_seq_material nr_seq_material,
			substr(pls_obter_dados_conta_mat(coalesce(b.nr_seq_conta_mat,a.nr_sequencia),'O'),1,255) cd_material_ops,
			null cd_procedimento,
			null ie_origem_proced,
			substr(pls_obter_dados_conta_mat(coalesce(b.nr_seq_conta_mat,a.nr_sequencia),'D'),1,255) ds_item_mat_proc,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,30) cd_beneficiario,
			'G' ie_tipo_operacao,
			substr(pls_obter_dados_grupo_ans(a.nr_seq_grupo_ans,'D'),1,255) ds_grupo_ans,
			substr(pls_obter_dados_prestador(b.nr_seq_prestador_pgto,'TR'),1,255) ds_tipo_relacao,
			coalesce(b.cd_conta_glosa_cred,a.cd_conta_glosa_cred) cd_conta_contabil,
			coalesce(b.cd_conta_glosa_deb,a.cd_conta_glosa_deb) cd_conta_contrapartida,
			sum(a.vl_provisao) vl_evento,
			sum(b.vl_glosa) vl_glosa,
			CASE WHEN p.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(p.nr_protocolo_ans, p.cd_scpa) END  nr_protocolo_ans,
			s.nr_sequencia	nr_seq_segurado,
			b.nr_seq_prestador_pgto nr_seq_prestador,
			r.nr_seq_congenere nr_seq_congenere,
			a.nr_seq_grupo_ans nr_seq_grupo_ans,
			s.dt_rescisao dt_vencimento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_recuperacao,
			c.ie_tipo_segurado ie_tipo_segurado,
			s.nr_seq_pagador,
			k.ie_tipo_grupo_ans,
			null dt_liberacao_pag,
			null dt_apresentacao_lote,
			null dt_competencia_lote,
			sum(coalesce(b.vl_taxa_adm,0) + coalesce(b.vl_taxa_adm_co,0) + coalesce(b.vl_taxa_adm_mat,0)) vl_taxa_pgto
		FROM pls_protocolo_conta r, pls_conta_medica_resumo b, pls_conta c
LEFT OUTER JOIN pls_plano p ON (c.nr_seq_plano = p.nr_sequencia)
LEFT OUTER JOIN pls_segurado s ON (c.nr_seq_segurado = s.nr_sequencia)
LEFT OUTER JOIN pls_contrato t ON (s.nr_seq_contrato = t.nr_sequencia)
, pls_conta_mat a
LEFT OUTER JOIN ans_grupo_despesa k ON (a.nr_seq_grupo_ans = k.nr_sequencia)
WHERE c.nr_seq_protocolo 	= r.nr_sequencia   and c.nr_sequencia		= a.nr_seq_conta and a.nr_seq_conta 		= b.nr_seq_conta and a.nr_sequencia 		= b.nr_seq_conta_mat  and b.vl_glosa <> 0 and r.dt_mes_competencia between dt_inicial_w and dt_final_w and ((coalesce(ie_tipo_segurado_w,'X') = coalesce(c.ie_tipo_segurado,'X'))
		or (coalesce(ie_tipo_segurado_w,'X') = 'X')) and coalesce(ie_tipo_protocolo_w,r.ie_tipo_protocolo) = r.ie_tipo_protocolo and coalesce(ie_tipo_protocolo_w,'X') in ('C','X') and qt_prest_pgto_w > 0 and c.ie_status = 'F' and b.ie_situacao = 'A' and exists (	select	1
				from	pls_prestador	z
				where	b.nr_seq_prestador_pgto	= z.nr_sequencia
				and	ie_recurso_proprio_w	= 'N'
				and	z.ie_tipo_relacao	<> 'P'
				
union all

				select	1
				
				where	ie_recurso_proprio_w	= 'S') and a.ie_status not in ('D','M') group by a.dt_atendimento,
			a.nr_seq_grupo_ans,
			a.nr_sequencia,
			a.nr_seq_material,
			b.nr_seq_conta_mat,
			b.nr_seq_prestador_pgto,
			c.dt_emissao,
			c.nr_seq_prestador_exec,
			c.nr_seq_protocolo,
			c.nr_sequencia,
			coalesce(b.cd_conta_glosa_cred,a.cd_conta_glosa_cred),
			coalesce(b.cd_conta_glosa_deb,a.cd_conta_glosa_deb),
			coalesce(b.ie_ato_cooperado,a.ie_ato_cooperado),
			p.ie_preco,
			p.ie_regulamentacao,
			p.ie_segmentacao,
			p.ie_tipo_contratacao,
			p.nr_protocolo_ans,
			p.ie_tipo_operacao,
			p.cd_scpa,
			r.dt_mes_competencia,
			r.ie_tipo_protocolo,
			r.nr_seq_congenere,
			r.nr_sequencia,
			s.dt_rescisao,
			c.ie_tipo_segurado,
			s.nr_seq_pagador,
			s.nr_seq_pagador,
			s.nr_sequencia,
			t.nr_contrato,
			k.ie_tipo_grupo_ans,
			c.cd_pessoa_fisica,
			c.cd_cgc
		
union all

		select 	c.nr_sequencia nr_documento,
			t.nr_contrato nr_contrato,
			c.dt_emissao dt_emissao,
			s.dt_rescisao dt_rescisao,
			coalesce(b.ie_ato_cooperado,a.ie_ato_cooperado) ie_ato_cooperado,
			p.ie_preco ie_modalidade_contrat,
			p.ie_regulamentacao ie_regulamentacao,
			p.ie_tipo_contratacao ie_tipo_contratacao,
			p.ie_segmentacao ie_segmentacao,
			substr(pls_obter_nomes_contrato(s.nr_seq_pagador,'P'),1,255) nm_usuario_princ,
			coalesce(pls_obter_dados_pagador(s.nr_seq_pagador,'CPF'),pls_obter_dados_pagador(s.nr_seq_pagador,'CGC')) nr_cpf_cnpj,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'N'),1,255) nm_usuario_evento,
			a.dt_procedimento dt_ocorrencia,
			r.dt_mes_competencia dt_conhecimento,
			substr(coalesce(pls_obter_dados_prestador(b.nr_seq_prestador_pgto,'N'),pls_obter_nome_congenere(r.nr_seq_congenere)),1,255) nm_prestador,
			substr(CASE WHEN coalesce(b.nr_seq_prestador_pgto::text, '') = '' THEN 					pls_obter_cnpj_congenere(r.nr_seq_congenere)  ELSE coalesce(pls_obter_dados_prestador(b.nr_seq_prestador_pgto,'CPF'), pls_obter_dados_prestador(b.nr_seq_prestador_pgto,'CGC')) END ,1,255) nr_cpf_cnpj_adic,			
			'CM' ie_tipo_documento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_pagamento,
			r.nr_sequencia nr_seq_protocolo,
			r.ie_tipo_protocolo ie_tipo_protocolo,
			null nr_seq_material,
			null cd_material_ops,
			coalesce(b.cd_procedimento,a.cd_procedimento) cd_procedimento,
			coalesce(b.ie_origem_proced,a.ie_origem_proced) ie_origem_proced,
			substr(obter_descricao_procedimento(coalesce(b.cd_procedimento,a.cd_procedimento),coalesce(b.ie_origem_proced,a.ie_origem_proced)),1,255) ds_item_mat_proc,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,30) cd_beneficiario,
			'G' ie_tipo_operacao,
			substr(pls_obter_dados_grupo_ans(a.nr_seq_grupo_ans,'D'),1,255) ds_grupo_ans,
			substr(pls_obter_dados_prestador(b.nr_seq_prestador_pgto,'TR'),1,255) ds_tipo_relacao,
			coalesce(b.cd_conta_glosa_cred,a.cd_conta_glosa_cred) cd_conta_contabil,
			coalesce(b.cd_conta_glosa_deb,a.cd_conta_glosa_deb) cd_conta_contrapartida,
			sum(a.vl_provisao) vl_evento,
			sum(b.vl_glosa) vl_glosa,
			CASE WHEN p.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(p.nr_protocolo_ans, p.cd_scpa) END  nr_protocolo_ans,
			s.nr_sequencia	nr_seq_segurado,
			b.nr_seq_prestador_pgto nr_seq_prestador,
			r.nr_seq_congenere nr_seq_congenere,
			a.nr_seq_grupo_ans nr_seq_grupo_ans,
			s.dt_rescisao dt_vencimento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_recuperacao,
			c.ie_tipo_segurado ie_tipo_segurado,
			s.nr_seq_pagador,
			k.ie_tipo_grupo_ans,
			null dt_liberacao_pag,
			null dt_apresentacao_lote,
			null dt_competencia_lote,
			sum(coalesce(b.vl_taxa_adm,0) + coalesce(b.vl_taxa_adm_co,0) + coalesce(b.vl_taxa_adm_mat,0)) vl_taxa_pgto
		FROM pls_protocolo_conta r, pls_conta_medica_resumo b, pls_conta c
LEFT OUTER JOIN pls_plano p ON (c.nr_seq_plano = p.nr_sequencia)
LEFT OUTER JOIN pls_segurado s ON (c.nr_seq_segurado = s.nr_sequencia)
LEFT OUTER JOIN pls_contrato t ON (s.nr_seq_contrato = t.nr_sequencia)
, pls_conta_proc a
LEFT OUTER JOIN ans_grupo_despesa k ON (a.nr_seq_grupo_ans = k.nr_sequencia)
WHERE c.nr_seq_protocolo 	= r.nr_sequencia   and c.nr_sequencia		= a.nr_seq_conta and a.nr_seq_conta 		= b.nr_seq_conta and a.nr_sequencia 		= b.nr_seq_conta_proc  and b.vl_glosa = 0 and coalesce(b.vl_taxa_adm,0) + coalesce(b.vl_taxa_adm_co,0) + coalesce(b.vl_taxa_adm_mat,0) <> 0 and r.dt_mes_competencia between dt_inicial_w and dt_final_w and ((coalesce(ie_tipo_segurado_w,'X') = coalesce(c.ie_tipo_segurado,'X'))
		or (coalesce(ie_tipo_segurado_w,'X') = 'X')) and coalesce(ie_tipo_protocolo_w,r.ie_tipo_protocolo) = r.ie_tipo_protocolo and coalesce(ie_tipo_protocolo_w,'X') in ('C','X') and qt_prest_pgto_w > 0 and c.ie_status = 'F' and b.ie_situacao = 'A' and exists (	select	1
				from	pls_prestador	z
				where	b.nr_seq_prestador_pgto	= z.nr_sequencia
				and	ie_recurso_proprio_w	= 'N'
				and	z.ie_tipo_relacao	<> 'P'
				
union all

				select	1
				
				where	ie_recurso_proprio_w	= 'S') and a.ie_status not in ('D','M') group by a.cd_procedimento,
			a.dt_procedimento,
			a.ie_origem_proced,
			a.nr_seq_grupo_ans,
			b.cd_procedimento,
			b.ie_origem_proced,
			b.nr_seq_prestador_pgto,
			c.dt_emissao,
			c.nr_seq_prestador_exec,
			c.nr_seq_protocolo,
			c.nr_sequencia,
			coalesce(b.cd_conta_glosa_cred,a.cd_conta_glosa_cred),
			coalesce(b.cd_conta_glosa_deb,a.cd_conta_glosa_deb),
			coalesce(b.ie_ato_cooperado,a.ie_ato_cooperado),
			p.ie_preco,
			p.ie_regulamentacao,
			p.ie_segmentacao,
			p.ie_tipo_contratacao,
			p.nr_protocolo_ans,
			p.ie_tipo_operacao,
			p.cd_scpa,
			r.dt_mes_competencia,
			r.ie_tipo_protocolo,
			r.nr_seq_congenere,
			r.nr_seq_congenere,
			r.nr_sequencia,
			s.dt_rescisao,
			c.ie_tipo_segurado,
			s.nr_seq_pagador,
			s.nr_sequencia,
			t.nr_contrato,
			k.ie_tipo_grupo_ans,
			c.cd_pessoa_fisica,
			c.cd_cgc
		
union all

		select 	c.nr_sequencia nr_documento,
			t.nr_contrato nr_contrato,
			c.dt_emissao dt_emissao,
			s.dt_rescisao dt_rescisao,
			coalesce(b.ie_ato_cooperado,a.ie_ato_cooperado) ie_ato_cooperado,
			p.ie_preco ie_modalidade_contrat,
			p.ie_regulamentacao ie_regulamentacao,
			p.ie_tipo_contratacao ie_tipo_contratacao,
			p.ie_segmentacao ie_segmentacao,
			substr(pls_obter_nomes_contrato(s.nr_seq_pagador,'P'),1,255) nm_usuario_princ,
			coalesce(pls_obter_dados_pagador(s.nr_seq_pagador,'CPF'),pls_obter_dados_pagador(s.nr_seq_pagador,'CGC')) nr_cpf_cnpj,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'N'),1,255) nm_usuario_evento,
			a.dt_atendimento dt_ocorrencia,
			r.dt_mes_competencia dt_conhecimento,
			substr(coalesce(pls_obter_dados_prestador(b.nr_seq_prestador_pgto,'N'),pls_obter_nome_congenere(r.nr_seq_congenere)),1,255) nm_prestador,
			substr(CASE WHEN coalesce(b.nr_seq_prestador_pgto::text, '') = '' THEN 					pls_obter_cnpj_congenere(r.nr_seq_congenere)  ELSE coalesce(pls_obter_dados_prestador(b.nr_seq_prestador_pgto,'CPF'), pls_obter_dados_prestador(b.nr_seq_prestador_pgto,'CGC')) END ,1,255) nr_cpf_cnpj_adic,			
			'CM' ie_tipo_documento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_pagamento,
			r.nr_sequencia nr_seq_protocolo,
			r.ie_tipo_protocolo ie_tipo_protocolo,
			a.nr_seq_material nr_seq_material,
			substr(pls_obter_dados_conta_mat(coalesce(b.nr_seq_conta_mat,a.nr_sequencia),'O'),1,255) cd_material_ops,
			null cd_procedimento,
			null ie_origem_proced,
			substr(pls_obter_dados_conta_mat(coalesce(b.nr_seq_conta_mat,a.nr_sequencia),'D'),1,255) ds_item_mat_proc,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,30) cd_beneficiario,
			'G' ie_tipo_operacao,
			substr(pls_obter_dados_grupo_ans(a.nr_seq_grupo_ans,'D'),1,255) ds_grupo_ans,
			substr(pls_obter_dados_prestador(b.nr_seq_prestador_pgto,'TR'),1,255) ds_tipo_relacao,
			coalesce(b.cd_conta_glosa_cred,a.cd_conta_glosa_cred) cd_conta_contabil,
			coalesce(b.cd_conta_glosa_deb,a.cd_conta_glosa_deb) cd_conta_contrapartida,
			sum(a.vl_provisao) vl_evento,
			sum(b.vl_glosa) vl_glosa,
			CASE WHEN p.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(p.nr_protocolo_ans, p.cd_scpa) END  nr_protocolo_ans,
			s.nr_sequencia	nr_seq_segurado,
			b.nr_seq_prestador_pgto nr_seq_prestador,
			r.nr_seq_congenere nr_seq_congenere,
			a.nr_seq_grupo_ans nr_seq_grupo_ans,
			s.dt_rescisao dt_vencimento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_recuperacao,
			c.ie_tipo_segurado ie_tipo_segurado,
			s.nr_seq_pagador,
			k.ie_tipo_grupo_ans,
			null dt_liberacao_pag,
			null dt_apresentacao_lote,
			null dt_competencia_lote,
			sum(coalesce(b.vl_taxa_adm,0) + coalesce(b.vl_taxa_adm_co,0) + coalesce(b.vl_taxa_adm_mat,0)) vl_taxa_pgto
		FROM pls_protocolo_conta r, pls_conta_medica_resumo b, pls_conta c
LEFT OUTER JOIN pls_plano p ON (c.nr_seq_plano = p.nr_sequencia)
LEFT OUTER JOIN pls_segurado s ON (c.nr_seq_segurado = s.nr_sequencia)
LEFT OUTER JOIN pls_contrato t ON (s.nr_seq_contrato = t.nr_sequencia)
, pls_conta_mat a
LEFT OUTER JOIN ans_grupo_despesa k ON (a.nr_seq_grupo_ans = k.nr_sequencia)
WHERE c.nr_seq_protocolo 	= r.nr_sequencia   and c.nr_sequencia		= a.nr_seq_conta and a.nr_seq_conta 		= b.nr_seq_conta and a.nr_sequencia 		= b.nr_seq_conta_mat  and b.vl_glosa = 0 and coalesce(b.vl_taxa_adm,0) + coalesce(b.vl_taxa_adm_co,0) + coalesce(b.vl_taxa_adm_mat,0) <> 0 and r.dt_mes_competencia between dt_inicial_w and dt_final_w and ((coalesce(ie_tipo_segurado_w,'X') = coalesce(c.ie_tipo_segurado,'X'))
		or (coalesce(ie_tipo_segurado_w,'X') = 'X')) and coalesce(ie_tipo_protocolo_w,r.ie_tipo_protocolo) = r.ie_tipo_protocolo and coalesce(ie_tipo_protocolo_w,'X') in ('C','X') and qt_prest_pgto_w > 0 and c.ie_status = 'F' and b.ie_situacao = 'A' and exists (	select	1
				from	pls_prestador	z
				where	b.nr_seq_prestador_pgto	= z.nr_sequencia
				and	ie_recurso_proprio_w	= 'N'
				and	z.ie_tipo_relacao	<> 'P'
				
union all

				select	1
				
				where	ie_recurso_proprio_w	= 'S') and a.ie_status not in ('D','M') group by a.dt_atendimento,
			a.nr_seq_grupo_ans,
			a.nr_sequencia,
			a.nr_seq_material,
			b.nr_seq_conta_mat,
			b.nr_seq_prestador_pgto,
			c.dt_emissao,
			c.nr_seq_prestador_exec,
			c.nr_seq_protocolo,
			c.nr_sequencia,
			coalesce(b.cd_conta_glosa_cred,a.cd_conta_glosa_cred),
			coalesce(b.cd_conta_glosa_deb,a.cd_conta_glosa_deb),
			coalesce(b.ie_ato_cooperado,a.ie_ato_cooperado),
			p.ie_preco,
			p.ie_regulamentacao,
			p.ie_segmentacao,
			p.ie_tipo_contratacao,
			p.nr_protocolo_ans,
			p.ie_tipo_operacao,
			p.cd_scpa,
			r.dt_mes_competencia,
			r.ie_tipo_protocolo,
			r.nr_seq_congenere,
			r.nr_sequencia,
			s.dt_rescisao,
			c.ie_tipo_segurado,
			s.nr_seq_pagador,
			s.nr_seq_pagador,
			s.nr_sequencia,
			t.nr_contrato,
			k.ie_tipo_grupo_ans,
			c.cd_pessoa_fisica,
			c.cd_cgc		
		
union all

		select 	c.nr_sequencia nr_documento,
			t.nr_contrato nr_contrato,
			c.dt_emissao dt_emissao,
			s.dt_rescisao dt_rescisao,
			a.ie_ato_cooperado ie_ato_cooperado,
			p.ie_preco ie_modalidade_contrat,
			p.ie_regulamentacao ie_regulamentacao,
			p.ie_tipo_contratacao ie_tipo_contratacao,
			p.ie_segmentacao ie_segmentacao,
			substr(pls_obter_nomes_contrato(s.nr_seq_pagador,'P'),1,255) nm_usuario_princ,
			coalesce(pls_obter_dados_pagador(s.nr_seq_pagador,'CPF'),pls_obter_dados_pagador(s.nr_seq_pagador,'CGC')) nr_cpf_cnpj,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'N'),1,255) nm_usuario_evento,
			a.dt_procedimento dt_ocorrencia,
			r.dt_mes_competencia dt_conhecimento,
			substr(coalesce(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'N'),pls_obter_nome_congenere(r.nr_seq_congenere)),1,255) nm_prestador,
			substr(CASE WHEN coalesce(c.nr_seq_prestador_exec::text, '') = '' THEN 					pls_obter_cnpj_congenere(r.nr_seq_congenere)  ELSE coalesce(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CPF'), pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CGC')) END ,1,255) nr_cpf_cnpj_adic,
			'CM' ie_tipo_documento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_pagamento,
			r.nr_sequencia nr_seq_protocolo,
			r.ie_tipo_protocolo ie_tipo_protocolo,
			null nr_seq_material,
			null cd_material_ops,
			a.cd_procedimento cd_procedimento,
			a.ie_origem_proced ie_origem_proced,
			substr(obter_descricao_procedimento(a.cd_procedimento,a.ie_origem_proced),1,255) ds_item_mat_proc,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,255) cd_beneficiario,
			'G' ie_tipo_operacao,
			substr(pls_obter_dados_grupo_ans(a.nr_seq_grupo_ans,'D'),1,255) ds_grupo_ans,
			substr(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'TR'),1,255) ds_tipo_relacao,
			a.cd_conta_glosa_cred cd_conta_contabil,
			a.cd_conta_glosa_deb cd_conta_contrapartida,
			sum(a.vl_provisao) vl_evento,
			sum(a.vl_glosa) vl_glosa,
			CASE WHEN p.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(p.nr_protocolo_ans, p.cd_scpa) END  nr_protocolo_ans,
			s.nr_sequencia	nr_seq_segurado,
			c.nr_seq_prestador_exec nr_seq_prestador,
			r.nr_seq_congenere nr_seq_congenere,
			a.nr_seq_grupo_ans nr_seq_grupo_ans,
			s.dt_rescisao dt_vencimento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_recuperacao,
			c.ie_tipo_segurado ie_tipo_segurado,
			s.nr_seq_pagador,
			k.ie_tipo_grupo_ans,
			null dt_liberacao_pag,
			null dt_apresentacao_lote,
			null dt_competencia_lote,
			0 vl_taxa_pgto
		FROM pls_protocolo_conta r, pls_conta c
LEFT OUTER JOIN pls_plano p ON (c.nr_seq_plano = p.nr_sequencia)
LEFT OUTER JOIN pls_segurado s ON (c.nr_seq_segurado = s.nr_sequencia)
LEFT OUTER JOIN pls_contrato t ON (s.nr_seq_contrato = t.nr_sequencia)
, pls_conta_proc a
LEFT OUTER JOIN ans_grupo_despesa k ON (a.nr_seq_grupo_ans = k.nr_sequencia)
WHERE c.nr_seq_protocolo 	= r.nr_sequencia   and c.nr_sequencia		= a.nr_seq_conta  and a.vl_glosa <> 0 and ((coalesce(ie_tipo_segurado_w,'X') = coalesce(c.ie_tipo_segurado,'X'))
		or (coalesce(ie_tipo_segurado_w,'X') = 'X')) and coalesce(ie_tipo_protocolo_w,r.ie_tipo_protocolo) = r.ie_tipo_protocolo and coalesce(ie_tipo_protocolo_w,'X') in ('I','R','X') and ((r.dt_mes_competencia between dt_inicial_w and dt_final_w
		and	((r.ie_tipo_protocolo <> 'R') or ie_forma_contab_reembolso_w = 'L'))
		or	(r.dt_fechamento_contas between dt_inicial_w and dt_final_w
		and	((r.ie_tipo_protocolo = 'R') and ie_forma_contab_reembolso_w = 'C'))
		or	(coalesce(r.dt_recebimento,r.dt_mes_competencia) between dt_inicial_w and dt_final_w
		and	((r.ie_tipo_protocolo = 'R') and ie_forma_contab_reembolso_w = 'M'))) and c.ie_status = 'F' and exists (	select	1
				FROM c
LEFT OUTER JOIN pls_prestador z ON (c.nr_seq_prestador_exec = z.nr_sequencia)
WHERE ie_recurso_proprio_w	= 'N' and z.ie_tipo_relacao	<> 'P'
				 
union all

				select	1
				
				where	ie_recurso_proprio_w	= 'N'
				and	coalesce(c.nr_seq_prestador_exec,0) = 0
				
union all

				select	1
				
				where	ie_recurso_proprio_w	= 'S') and r.ie_tipo_protocolo not in 'C' and a.ie_status not in ('D','M') group by a.cd_conta_glosa_cred,
			a.cd_conta_glosa_deb,
			a.cd_procedimento,
			a.dt_procedimento,
			a.ie_ato_cooperado,
			a.ie_origem_proced,
			a.nr_seq_grupo_ans,
			c.dt_emissao,
			c.nr_seq_prestador_exec,
			c.nr_seq_protocolo,
			c.nr_sequencia,
			p.ie_preco,
			p.ie_regulamentacao,
			p.ie_segmentacao,
			p.ie_tipo_contratacao,
			p.nr_protocolo_ans,
			p.ie_tipo_operacao,
			p.cd_scpa,
			r.dt_mes_competencia,
			r.ie_tipo_protocolo,
			r.nr_seq_congenere,
			r.nr_sequencia,
			s.dt_rescisao,
			c.ie_tipo_segurado,
			s.nr_seq_pagador,
			s.nr_sequencia,
			t.nr_contrato,
			k.ie_tipo_grupo_ans,
			c.cd_pessoa_fisica,
			c.cd_cgc
		
union all

		select 	c.nr_sequencia nr_documento,
			t.nr_contrato nr_contrato,
			c.dt_emissao dt_emissao,
			s.dt_rescisao dt_rescisao,
			a.ie_ato_cooperado ie_ato_cooperado,
			p.ie_preco ie_modalidade_contrat,
			p.ie_regulamentacao ie_regulamentacao,
			p.ie_tipo_contratacao ie_tipo_contratacao,
			p.ie_segmentacao ie_segmentacao,
			substr(pls_obter_nomes_contrato(s.nr_seq_pagador,'P'),1,255) nm_usuario_princ,
			coalesce(pls_obter_dados_pagador(s.nr_seq_pagador,'CPF'),pls_obter_dados_pagador(s.nr_seq_pagador,'CGC')) nr_cpf_cnpj,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'N'),1,255) nm_usuario_evento,
			a.dt_atendimento dt_ocorrencia,
			r.dt_mes_competencia dt_conhecimento,
			substr(coalesce(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'N'),pls_obter_nome_congenere(r.nr_seq_congenere)),1,255) nm_prestador,
			substr(CASE WHEN coalesce(c.nr_seq_prestador_exec::text, '') = '' THEN 					pls_obter_cnpj_congenere(r.nr_seq_congenere)  ELSE coalesce(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CPF'), pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CGC')) END ,1,255) nr_cpf_cnpj_adic,
			'CM' ie_tipo_documento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_pagamento,
			r.nr_sequencia nr_seq_protocolo,
			r.ie_tipo_protocolo ie_tipo_protocolo,
			a.nr_seq_material nr_seq_material,
			substr(pls_obter_dados_conta_mat(a.nr_sequencia,'O'),1,255) cd_material_ops,
			null cd_procedimento,
			null ie_origem_proced,
			substr(pls_obter_dados_conta_mat(a.nr_sequencia,'D'),1,255) ds_item_mat_proc,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,255) cd_beneficiario,
			'G' ie_tipo_operacao,
			substr(pls_obter_dados_grupo_ans(a.nr_seq_grupo_ans,'D'),1,255) ds_grupo_ans,
			substr(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'TR'),1,255) ds_tipo_relacao,
			a.cd_conta_glosa_cred cd_conta_contabil,
			a.cd_conta_glosa_deb cd_conta_contrapartida,
			sum(a.vl_provisao) vl_evento,
			sum(a.vl_glosa) vl_glosa,
			CASE WHEN p.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(p.nr_protocolo_ans, p.cd_scpa) END  nr_protocolo_ans,
			s.nr_sequencia	nr_seq_segurado,
			c.nr_seq_prestador_exec nr_seq_prestador,
			r.nr_seq_congenere nr_seq_congenere,
			a.nr_seq_grupo_ans nr_seq_grupo_ans,
			s.dt_rescisao dt_vencimento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_recuperacao,
			c.ie_tipo_segurado ie_tipo_segurado,
			s.nr_seq_pagador,
			k.ie_tipo_grupo_ans,
			null dt_liberacao_pag,
			null dt_apresentacao_lote,
			null dt_competencia_lote,
			0 vl_taxa_pgto
		FROM pls_protocolo_conta r, pls_conta c
LEFT OUTER JOIN pls_plano p ON (c.nr_seq_plano = p.nr_sequencia)
LEFT OUTER JOIN pls_segurado s ON (c.nr_seq_segurado = s.nr_sequencia)
LEFT OUTER JOIN pls_contrato t ON (s.nr_seq_contrato = t.nr_sequencia)
, pls_conta_mat a
LEFT OUTER JOIN ans_grupo_despesa k ON (a.nr_seq_grupo_ans = k.nr_sequencia)
WHERE c.nr_seq_protocolo 	= r.nr_sequencia   and c.nr_sequencia		= a.nr_seq_conta  and a.vl_glosa <> 0 and ((coalesce(ie_tipo_segurado_w,'X') = coalesce(c.ie_tipo_segurado,'X'))
		or (coalesce(ie_tipo_segurado_w,'X') = 'X')) and coalesce(ie_tipo_protocolo_w,r.ie_tipo_protocolo) = r.ie_tipo_protocolo and coalesce(ie_tipo_protocolo_w,'X') in ('I','R','X') and ((r.dt_mes_competencia between dt_inicial_w and dt_final_w
		and	((r.ie_tipo_protocolo <> 'R') or ie_forma_contab_reembolso_w = 'L'))
		or	(r.dt_fechamento_contas between dt_inicial_w and dt_final_w
		and	((r.ie_tipo_protocolo = 'R') and ie_forma_contab_reembolso_w = 'C'))
		or	(coalesce(r.dt_recebimento,r.dt_mes_competencia) between dt_inicial_w and dt_final_w
		and	((r.ie_tipo_protocolo = 'R') and ie_forma_contab_reembolso_w = 'M'))) and c.ie_status = 'F' and exists (	select	1
				FROM c
LEFT OUTER JOIN pls_prestador z ON (c.nr_seq_prestador_exec = z.nr_sequencia)
WHERE ie_recurso_proprio_w	= 'N' and z.ie_tipo_relacao	<> 'P'
				 
union all

				select	1
				
				where	ie_recurso_proprio_w	= 'N'
				and	coalesce(c.nr_seq_prestador_exec,0) = 0
				
union all

				select	1
				
				where	ie_recurso_proprio_w	= 'S') and r.ie_tipo_protocolo not in 'C' and a.ie_status not in ('D','M') group by a.cd_conta_glosa_cred,
			a.cd_conta_glosa_deb,
			a.dt_atendimento,
			a.ie_ato_cooperado,
			a.nr_seq_grupo_ans,
			a.nr_sequencia,
			a.nr_seq_material,
			c.dt_emissao,
			c.nr_seq_prestador_exec,
			c.nr_seq_protocolo,
			c.nr_sequencia,
			p.ie_preco,
			p.ie_regulamentacao,
			p.ie_segmentacao,
			p.ie_tipo_contratacao,
			p.nr_protocolo_ans,
			p.ie_tipo_operacao,
			p.cd_scpa,
			r.dt_mes_competencia,
			r.ie_tipo_protocolo,
			r.nr_seq_congenere,
			r.nr_seq_congenere,
			r.nr_sequencia,
			s.dt_rescisao,
			c.ie_tipo_segurado,
			s.nr_seq_pagador,
			s.nr_sequencia,
			t.nr_contrato,
			k.ie_tipo_grupo_ans
		
union all

		select	v.nr_evento nr_documento,
			v.nr_contrato,
			v.dt_emissao,
			v.dt_rescisao,
			v.ie_ato_cooperado,
			v.ie_modalidade_contrat,
			v.ie_regulamentacao,
			v.ie_tipo_contratacao,
			v.ie_segmentacao,
			v.nm_usuario_princ,
			v.nr_cpf_cnpj,
			v.nm_usuario_evento,
			v.dt_ocorrencia,
			v.dt_conhecimento,
			v.nm_prestador,
			v.nr_cpf_cnpj_adic,
			v.ie_tipo_documento,
			v.dt_pagamento,
			v.nr_seq_protocolo,
			v.ie_tipo_protocolo,
			v.nr_seq_material,
			substr(v.cd_material_ops,1,6) cd_material_ops,
			v.cd_procedimento,
			v.ie_origem_proced,
			v.ds_item_mat_proc,
			v.cd_beneficiario,
			v.ie_tipo_operacao,
			v.ds_grupo_ans,
			v.ds_tipo_relacao,
			v.cd_conta_contabil,
			v.cd_conta_contrapartida,
			v.vl_evento,
			v.vl_glosa,
			v.nr_protocolo_ans,
			v.nr_seq_segurado,
			v.nr_seq_prestador,
			v.nr_seq_congenere,
			v.nr_seq_grupo_ans,
			v.dt_vencimento,
			v.dt_recuperacao,
			v.ie_tipo_segurado,
			v.nr_seq_pagador,
			v.ie_tipo_grupo_ans,
			v.dt_liberacao_pag,
			v.dt_apresentacao_lote,
			v.dt_competencia_lote,
			0 vl_taxa_pgto
		from	ctb_registro_aux_event_med_v	v
		where	v.dt_glosa between dt_inicial_w and dt_final_w
		and	v.vl_glosa <> 0
		and	v.cd_conta_contabil in (select 	cd_conta_contabil
						from	conta_contabil
						where	ie_tipo = 'A'
						and   	ie_situacao = 'A'
						and	dt_final_w between coalesce(dt_inicio_vigencia, dt_final_w) and coalesce(dt_fim_vigencia, dt_final_w)
						and (ie_gerar_ind_classif_w = 'S'
						or (ie_gerar_ind_classif_w = 'N'
						and	substr(ctb_obter_classif_conta(cd_conta_contabil, cd_classificacao, dt_inicio_vigencia),1,5) = '4.1.1'
						and	v.cd_nono_dig in ('2'))))
		
union all

		select	c.nr_sequencia nr_documento,
			t.nr_contrato nr_contrato,
			c.dt_emissao dt_emissao,
			s.dt_rescisao dt_rescisao,
			cp.ie_ato_cooperado ie_ato_cooperado,
			p.ie_preco ie_modalidade_contrat,
			p.ie_regulamentacao ie_regulamentacao,
			p.ie_tipo_contratacao ie_tipo_contratacao,
			p.ie_segmentacao ie_segmentacao,
			substr(pls_obter_nomes_contrato(s.nr_seq_pagador,'P'),1,255) nm_usuario_princ,
			coalesce(pls_obter_dados_pagador(s.nr_seq_pagador,'CPF'),pls_obter_dados_pagador(s.nr_seq_pagador,'CGC')) nr_cpf_cnpj,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'N'),1,255) nm_usuario_evento,
			cp.dt_procedimento dt_ocorrencia,
			l.dt_fechamento dt_conhecimento,
			substr(coalesce(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'N'),pls_obter_nome_congenere(r.nr_seq_congenere)),1,255) nm_prestador,
			substr(CASE WHEN coalesce(c.nr_seq_prestador_exec::text, '') = '' THEN 					pls_obter_cnpj_congenere(r.nr_seq_congenere)  ELSE coalesce(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CPF'), pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CGC')) END ,1,255) nr_cpf_cnpj_adic,
			'CM' ie_tipo_documento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_pagamento,
			r.nr_sequencia nr_seq_protocolo,
			r.ie_tipo_protocolo ie_tipo_protocolo,
			null nr_seq_material,
			null cd_material_ops,
			cp.cd_procedimento cd_procedimento,
			cp.ie_origem_proced ie_origem_proced,
			substr(obter_descricao_procedimento(cp.cd_procedimento,cp.ie_origem_proced),1,255) ds_item_mat_proc,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,255) cd_beneficiario,
			'G' ie_tipo_operacao,
			substr(pls_obter_dados_grupo_ans(cp.nr_seq_grupo_ans,'D'),1,255) ds_grupo_ans,
			substr(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'TR'),1,255) ds_tipo_relacao,
			d.cd_conta_negado_cred cd_conta_contabil,
			d.cd_conta_negado_deb cd_conta_contrapartida,
			sum(cp.vl_provisao) vl_evento,
			sum(d.vl_negado) vl_glosa,
			CASE WHEN p.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(p.nr_protocolo_ans, p.cd_scpa) END  nr_protocolo_ans,
			s.nr_sequencia	nr_seq_segurado,
			c.nr_seq_prestador_exec nr_seq_prestador,
			r.nr_seq_congenere nr_seq_congenere,
			cp.nr_seq_grupo_ans nr_seq_grupo_ans,
			s.dt_rescisao dt_vencimento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_recuperacao,
			c.ie_tipo_segurado ie_tipo_segurado,
			s.nr_seq_pagador,
			k.ie_tipo_grupo_ans,
			null dt_liberacao_pag,
			null dt_apresentacao_lote,
			null dt_competencia_lote,
			0 vl_taxa_pgto
		FROM pls_contrato t, pls_protocolo_conta r, pls_lote_discussao l, pls_contestacao i, pls_discussao_proc d, pls_contestacao_discussao b, pls_conta c
LEFT OUTER JOIN pls_plano p ON (c.nr_seq_plano = p.nr_sequencia)
LEFT OUTER JOIN pls_segurado s ON (c.nr_seq_segurado = s.nr_sequencia)
, pls_conta_proc cp
LEFT OUTER JOIN ans_grupo_despesa k ON (cp.nr_seq_grupo_ans = k.nr_sequencia)
WHERE c.nr_seq_protocolo 	= r.nr_sequencia  and s.nr_seq_contrato 	= t.nr_sequencia and c.nr_sequencia		= cp.nr_seq_conta  and cp.nr_sequencia		= d.nr_seq_conta_proc and b.nr_sequencia		= d.nr_seq_discussao and l.nr_sequencia		= b.nr_seq_lote and i.nr_sequencia		= b.nr_seq_contestacao and c.nr_sequencia		= i.nr_seq_conta and l.dt_fechamento between dt_inicial_w and dt_final_w and ((coalesce(ie_tipo_segurado_w, 'X')	= coalesce(c.ie_tipo_segurado, 'X'))
		or (coalesce(ie_tipo_segurado_w, 'X')	= 'X')) group by c.nr_sequencia,
			t.nr_contrato,
			c.dt_emissao,
			s.dt_rescisao,
			cp.ie_ato_cooperado,
			p.ie_preco,
			p.ie_regulamentacao,
			p.ie_tipo_contratacao,
			p.ie_segmentacao,
			s.nr_seq_pagador,
			s.nr_sequencia,
			cp.dt_procedimento,
			l.dt_fechamento,
			c.nr_seq_prestador_exec,
			r.nr_seq_congenere,
			c.nr_seq_protocolo,
			r.nr_sequencia,
			r.ie_tipo_protocolo,
			cp.cd_procedimento,
			cp.ie_origem_proced,
			cp.nr_seq_grupo_ans,
			d.cd_conta_negado_cred,
			d.cd_conta_negado_deb,
			CASE WHEN p.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(p.nr_protocolo_ans, p.cd_scpa) END ,
			c.ie_tipo_segurado,
			k.ie_tipo_grupo_ans,
			c.cd_pessoa_fisica,
			c.cd_cgc
		
union all

		select	c.nr_sequencia nr_documento,
			t.nr_contrato nr_contrato,
			c.dt_emissao dt_emissao,
			s.dt_rescisao dt_rescisao,
			cm.ie_ato_cooperado ie_ato_cooperado,
			p.ie_preco ie_modalidade_contrat,
			p.ie_regulamentacao ie_regulamentacao,
			p.ie_tipo_contratacao ie_tipo_contratacao,
			p.ie_segmentacao ie_segmentacao,
			substr(pls_obter_nomes_contrato(s.nr_seq_pagador,'P'),1,255) nm_usuario_princ,
			coalesce(pls_obter_dados_pagador(s.nr_seq_pagador,'CPF'),pls_obter_dados_pagador(s.nr_seq_pagador,'CGC')) nr_cpf_cnpj,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'N'),1,255) nm_usuario_evento,
			cm.dt_atendimento dt_ocorrencia,
			l.dt_fechamento dt_conhecimento,
			substr(coalesce(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'N'),pls_obter_nome_congenere(r.nr_seq_congenere)),1,255) nm_prestador,
			substr(CASE WHEN coalesce(c.nr_seq_prestador_exec::text, '') = '' THEN 					pls_obter_cnpj_congenere(r.nr_seq_congenere)  ELSE coalesce(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CPF'), pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CGC')) END ,1,255) nr_cpf_cnpj_adic,
			'CM' ie_tipo_documento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_pagamento,
			r.nr_sequencia nr_seq_protocolo,
			r.ie_tipo_protocolo ie_tipo_protocolo,
			cm.nr_seq_material nr_seq_material,
			substr(pls_obter_dados_conta_mat(cm.nr_sequencia,'O'),1,255) cd_material_ops,
			null cd_procedimento,
			null ie_origem_proced,
			substr(pls_obter_dados_conta_mat(cm.nr_sequencia,'D'),1,255) ds_item_mat_proc,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,30) cd_beneficiario,
			'G' ie_tipo_operacao,
			substr(pls_obter_dados_grupo_ans(cm.nr_seq_grupo_ans,'D'),1,255) ds_grupo_ans,
			substr(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'TR'),1,255) ds_tipo_relacao,
			d.cd_conta_negado_cred cd_conta_contabil,
			d.cd_conta_negado_deb cd_conta_contrapartida,
			sum(cm.vl_provisao) vl_evento,
			sum(d.vl_negado) vl_glosa,
			CASE WHEN p.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(p.nr_protocolo_ans, p.cd_scpa) END  nr_protocolo_ans,
			s.nr_sequencia nr_seq_segurado,
			c.nr_seq_prestador_exec nr_seq_prestador,
			r.nr_seq_congenere nr_seq_congenere,
			cm.nr_seq_grupo_ans nr_seq_grupo_ans,
			s.dt_rescisao dt_vencimento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_recuperacao,
			c.ie_tipo_segurado ie_tipo_segurado,
			s.nr_seq_pagador,
			k.ie_tipo_grupo_ans,
			null dt_liberacao_pag,
			null dt_apresentacao_lote,
			null dt_competencia_lote,
			0 vl_taxa_pgto
		FROM pls_contrato t, pls_protocolo_conta r, pls_lote_discussao l, pls_contestacao e, pls_discussao_mat d, pls_contestacao_discussao b, pls_conta c
LEFT OUTER JOIN pls_plano p ON (c.nr_seq_plano = p.nr_sequencia)
LEFT OUTER JOIN pls_segurado s ON (c.nr_seq_segurado = s.nr_sequencia)
, pls_conta_mat cm
LEFT OUTER JOIN ans_grupo_despesa k ON (cm.nr_seq_grupo_ans = k.nr_sequencia)
WHERE c.nr_seq_protocolo 	= r.nr_sequencia  and s.nr_seq_contrato 	= t.nr_sequencia and cm.nr_seq_conta		= c.nr_sequencia  and l.nr_sequencia		= b.nr_seq_lote and e.nr_sequencia		= b.nr_seq_contestacao and c.nr_sequencia		= e.nr_seq_conta and b.nr_sequencia		= d.nr_seq_discussao and cm.nr_sequencia		= d.nr_seq_conta_mat and coalesce(d.vl_negado,0) <> 0 and l.dt_fechamento between dt_inicial_w and dt_final_w and ((coalesce(ie_tipo_segurado_w, 'X')	= coalesce(c.ie_tipo_segurado, 'X'))
		or (coalesce(ie_tipo_segurado_w, 'X')	= 'X')) group by c.nr_sequencia,
			t.nr_contrato,
			c.dt_emissao,
			s.dt_rescisao,
			cm.ie_ato_cooperado,
			p.ie_preco,
			p.ie_regulamentacao,
			p.ie_tipo_contratacao,
			p.ie_segmentacao,
			s.nr_seq_pagador,
			s.nr_sequencia,
			cm.dt_atendimento,
			l.dt_fechamento,
			c.nr_seq_prestador_exec,
			r.nr_seq_congenere,
			c.nr_seq_protocolo,
			r.nr_sequencia,
			r.ie_tipo_protocolo,
			cm.nr_seq_material,
			cm.nr_sequencia,
			cm.nr_seq_grupo_ans,
			d.cd_conta_negado_cred,
			d.cd_conta_negado_deb,
			CASE WHEN p.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(p.nr_protocolo_ans, p.cd_scpa) END ,
			c.ie_tipo_segurado,
			k.ie_tipo_grupo_ans,
			c.cd_pessoa_fisica,
			c.cd_cgc
		
union all

		select	c.nr_sequencia nr_documento,
			t.nr_contrato nr_contrato,
			c.dt_emissao dt_emissao,
			s.dt_rescisao dt_rescisao,
			cp.ie_ato_cooperado ie_ato_cooperado,
			p.ie_preco ie_modalidade_contrat,
			p.ie_regulamentacao ie_regulamentacao,
			p.ie_tipo_contratacao ie_tipo_contratacao,
			p.ie_segmentacao ie_segmentacao,
			substr(pls_obter_nomes_contrato(s.nr_seq_pagador,'P'),1,255) nm_usuario_princ,
			coalesce(pls_obter_dados_pagador(s.nr_seq_pagador,'CPF'),pls_obter_dados_pagador(s.nr_seq_pagador,'CGC')) nr_cpf_cnpj,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'N'),1,255) nm_usuario_evento,
			cp.dt_procedimento dt_ocorrencia,
			l.dt_cancelamento dt_conhecimento,
			substr(coalesce(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'N'),pls_obter_nome_congenere(r.nr_seq_congenere)),1,255) nm_prestador,
			substr(CASE WHEN coalesce(c.nr_seq_prestador_exec::text, '') = '' THEN 					pls_obter_cnpj_congenere(r.nr_seq_congenere)  ELSE coalesce(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CPF'), pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CGC')) END ,1,255) nr_cpf_cnpj_adic,
			'CM' ie_tipo_documento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_pagamento,
			c.nr_seq_protocolo nr_seq_protocolo,
			r.ie_tipo_protocolo ie_tipo_protocolo,
			null nr_seq_material,
			null cd_material_ops,
			cp.cd_procedimento cd_procedimento,
			cp.ie_origem_proced ie_origem_proced,
			substr(obter_descricao_procedimento(cp.cd_procedimento,cp.ie_origem_proced),1,255) ds_item_mat_proc,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,255) cd_beneficiario,
			'G' ie_tipo_operacao,
			substr(pls_obter_dados_grupo_ans(cp.nr_seq_grupo_ans,'D'),1,255) ds_grupo_ans,
			substr(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'TR'),1,255) ds_tipo_relacao,
			d.cd_conta_negado_cred cd_conta_contabil,
			d.cd_conta_negado_deb cd_conta_contrapartida,
			sum(cp.vl_provisao) vl_evento,
			sum(d.vl_negado * -1) vl_glosa,
			CASE WHEN p.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(p.nr_protocolo_ans, p.cd_scpa) END  nr_protocolo_ans,
			s.nr_sequencia nr_seq_segurado,
			c.nr_seq_prestador_exec nr_seq_prestador,
			r.nr_seq_congenere nr_seq_congenere,
			cp.nr_seq_grupo_ans nr_seq_grupo_ans,
			s.dt_rescisao dt_vencimento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_recuperacao,
			c.ie_tipo_segurado ie_tipo_segurado,
			s.nr_seq_pagador,
			k.ie_tipo_grupo_ans,
			null dt_liberacao_pag,
			null dt_apresentacao_lote,
			null dt_competencia_lote,
			0 vl_taxa_pgto
		FROM pls_contrato t, pls_protocolo_conta r, pls_lote_discussao l, pls_contestacao i, pls_discussao_proc d, pls_contestacao_discussao b, pls_conta c
LEFT OUTER JOIN pls_plano p ON (c.nr_seq_plano = p.nr_sequencia)
LEFT OUTER JOIN pls_segurado s ON (c.nr_seq_segurado = s.nr_sequencia)
, pls_conta_proc cp
LEFT OUTER JOIN ans_grupo_despesa k ON (cp.nr_seq_grupo_ans = k.nr_sequencia)
WHERE c.nr_seq_protocolo 	= r.nr_sequencia  and s.nr_seq_contrato 	= t.nr_sequencia and c.nr_sequencia		= cp.nr_seq_conta  and cp.nr_sequencia		= d.nr_seq_conta_proc and b.nr_sequencia		= d.nr_seq_discussao and l.nr_sequencia		= b.nr_seq_lote and i.nr_sequencia		= b.nr_seq_contestacao and c.nr_sequencia		= i.nr_seq_conta and l.dt_cancelamento between dt_inicial_w and dt_final_w and ((coalesce(ie_tipo_segurado_w, 'X')	= coalesce(c.ie_tipo_segurado, 'X'))
		or (coalesce(ie_tipo_segurado_w, 'X')	= 'X')) group by c.nr_sequencia,
			t.nr_contrato,
			c.dt_emissao,
			s.dt_rescisao,
			cp.ie_ato_cooperado,
			p.ie_preco,
			p.ie_regulamentacao,
			p.ie_tipo_contratacao,
			p.ie_segmentacao,
			s.nr_seq_pagador,
			s.nr_sequencia,
			cp.dt_procedimento,
			l.dt_cancelamento,
			c.nr_seq_prestador_exec,
			r.nr_seq_congenere,
			c.nr_seq_protocolo,
			r.ie_tipo_protocolo,
			cp.cd_procedimento,
			cp.ie_origem_proced,
			cp.nr_seq_grupo_ans,
			d.cd_conta_negado_cred,
			d.cd_conta_negado_deb,
			CASE WHEN p.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(p.nr_protocolo_ans, p.cd_scpa) END ,
			c.ie_tipo_segurado,
			k.ie_tipo_grupo_ans,
			c.cd_pessoa_fisica,
			c.cd_cgc
		
union all

		select	c.nr_sequencia nr_documento,
			t.nr_contrato nr_contrato,
			c.dt_emissao dt_emissao,
			s.dt_rescisao dt_rescisao,
			cm.ie_ato_cooperado ie_ato_cooperado,
			p.ie_preco ie_modalidade_contrat,
			p.ie_regulamentacao ie_regulamentacao,
			p.ie_tipo_contratacao ie_tipo_contratacao,
			p.ie_segmentacao ie_segmentacao,
			substr(pls_obter_nomes_contrato(s.nr_seq_pagador,'P'),1,255) nm_usuario_princ,
			coalesce(pls_obter_dados_pagador(s.nr_seq_pagador,'CPF'),pls_obter_dados_pagador(s.nr_seq_pagador,'CGC')) nr_cpf_cnpj,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'N'),1,255) nm_usuario_evento,
			cm.dt_atendimento dt_ocorrencia,
			l.dt_cancelamento dt_conhecimento,
			substr(coalesce(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'N'),pls_obter_nome_congenere(r.nr_seq_congenere)),1,255) nm_prestador,
			substr(CASE WHEN coalesce(c.nr_seq_prestador_exec::text, '') = '' THEN 					pls_obter_cnpj_congenere(r.nr_seq_congenere)  ELSE coalesce(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CPF'), pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CGC')) END ,1,255) nr_cpf_cnpj_adic,			
			'CM' ie_tipo_documento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_pagamento,
			r.nr_sequencia nr_seq_protocolo,
			r.ie_tipo_protocolo ie_tipo_protocolo,
			cm.nr_seq_material nr_seq_material,
			substr(pls_obter_dados_conta_mat(cm.nr_sequencia,'O'),1,255) cd_material_ops,
			null cd_procedimento,
			null ie_origem_proced,
			substr(pls_obter_dados_conta_mat(cm.nr_sequencia,'D'),1,255) ds_item_mat_proc,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,30) cd_beneficiario,
			'G' ie_tipo_operacao,
			substr(pls_obter_dados_grupo_ans(cm.nr_seq_grupo_ans,'D'),1,255) ds_grupo_ans,
			substr(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'TR'),1,255) ds_tipo_relacao,
			d.cd_conta_negado_cred cd_conta_contabil,
			d.cd_conta_negado_deb cd_conta_contrapartida,
			sum(cm.vl_provisao) vl_evento,
			sum(d.vl_negado * -1) vl_glosa,
			CASE WHEN p.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(p.nr_protocolo_ans, p.cd_scpa) END  nr_protocolo_ans,
			s.nr_sequencia nr_seq_segurado,
			c.nr_seq_prestador_exec nr_seq_prestador,
			r.nr_seq_congenere nr_seq_congenere,
			cm.nr_seq_grupo_ans nr_seq_grupo_ans,
			s.dt_rescisao dt_vencimento,
			substr(pls_obter_dados_protocolo(c.nr_seq_protocolo,'M'),1,20) dt_recuperacao,
			c.ie_tipo_segurado ie_tipo_segurado,
			s.nr_seq_pagador,
			k.ie_tipo_grupo_ans,
			null dt_liberacao_pag,
			null dt_apresentacao_lote,
			null dt_competencia_lote,
			0 vl_taxa_pgto
		FROM pls_contrato t, pls_protocolo_conta r, pls_lote_discussao l, pls_contestacao e, pls_discussao_mat d, pls_contestacao_discussao b, pls_conta c
LEFT OUTER JOIN pls_plano p ON (c.nr_seq_plano = p.nr_sequencia)
LEFT OUTER JOIN pls_segurado s ON (c.nr_seq_segurado = s.nr_sequencia)
, pls_conta_mat cm
LEFT OUTER JOIN ans_grupo_despesa k ON (cm.nr_seq_grupo_ans = k.nr_sequencia)
WHERE c.nr_seq_protocolo 	= r.nr_sequencia  and s.nr_seq_contrato 	= t.nr_sequencia and cm.nr_seq_conta		= c.nr_sequencia  and l.nr_sequencia		= b.nr_seq_lote and e.nr_sequencia		= b.nr_seq_contestacao and c.nr_sequencia		= e.nr_seq_conta and b.nr_sequencia		= d.nr_seq_discussao and cm.nr_sequencia		= d.nr_seq_conta_mat and coalesce(d.vl_negado,0) <> 0 and l.dt_cancelamento between dt_inicial_w and dt_final_w and ((coalesce(ie_tipo_segurado_w, 'X')	= coalesce(c.ie_tipo_segurado, 'X'))
		or (coalesce(ie_tipo_segurado_w, 'X')	= 'X')) group by c.nr_sequencia,
			t.nr_contrato,
			c.dt_emissao,
			s.dt_rescisao,
			cm.ie_ato_cooperado,
			p.ie_preco,
			p.ie_regulamentacao,
			p.ie_tipo_contratacao,
			p.ie_segmentacao,
			s.nr_seq_pagador,
			s.nr_sequencia,
			cm.dt_atendimento,
			l.dt_cancelamento,
			c.nr_seq_prestador_exec,
			r.nr_seq_congenere,
			c.nr_seq_protocolo,
			r.nr_sequencia,
			r.ie_tipo_protocolo,
			cm.nr_seq_material,
			cm.nr_sequencia,
			cm.nr_seq_grupo_ans,
			d.cd_conta_negado_cred,
			d.cd_conta_negado_deb,
			CASE WHEN p.ie_tipo_operacao='A' THEN  'SCA'  ELSE coalesce(p.nr_protocolo_ans, p.cd_scpa) END ,
			c.ie_tipo_segurado,
			k.ie_tipo_grupo_ans,
			c.cd_pessoa_fisica,
			c.cd_cgc
	) alias601
where	1 = 1
and	((ie_gerar_ind_classif_w <> 'N')
or	cd_conta_contabil in (	select cd_conta_contabil
				from	conta_contabil
				where	ie_tipo = 'A'
				and   	ie_situacao = 'A'
				and	dt_final_w between coalesce(dt_inicio_vigencia, dt_final_w) and coalesce(dt_fim_vigencia, dt_final_w)
				and	substr(ctb_obter_classif_conta(cd_conta_contabil, cd_classificacao, dt_inicio_vigencia),1,5) = '4.1.1'))
order by nr_documento;

vet_medica 	c_medica%rowtype;

BEGIN

select	coalesce(max(a.ie_gerar_ind_classif),'N'),
	coalesce(max(a.ie_recurso_proprio),'N'),
	max(a.ie_tipo_segurado),
	max(a.ie_tipo_protocolo),
	fim_dia(max(a.dt_final)),
	trunc(max(a.dt_inicial),'dd'),
	max(dt_liberacao)
into STRICT	ie_gerar_ind_classif_w,
	ie_recurso_proprio_w,
	ie_tipo_segurado_w,
	ie_tipo_protocolo_w,
	dt_final_w,
	dt_inicial_w,
	dt_liberacao_w
from	ctb_livro_auxiliar	a
where	a.nr_sequencia	= nr_seq_reg_auxiliar_p;

select	max(ie_forma_contab_reembolso)
into STRICT	ie_forma_contab_reembolso_w
from	pls_parametro_contabil
where	cd_estabelecimento = cd_estabelecimento_p;

CALL wheb_usuario_pck.set_ie_executar_trigger('N');

select	coalesce(max(a.ie_data_tipo_segurado),'A')
into STRICT	ie_data_tipo_segurado_w
from	pls_parametros a
where	a.cd_estabelecimento = cd_estabelecimento_p;

select	substr(obter_desc_expressao(922923),1,255)
into STRICT	ds_observacao_w
;

if (ie_origem_p = 'H' or ie_gerar_arquivo_p = 'N') then

	delete
	from	pls_aux_event_glosa a
	where	nr_seq_reg_auxiliar = nr_seq_reg_auxiliar_p;

	delete
	from	w_ctb_livro_aux_event_liq a
	where	nr_seq_reg_auxiliar = nr_seq_reg_auxiliar_p;
	
	dt_referencia_month_w	:= trunc(dt_final_w,'month');
	qt_prest_pgto_w:=	0;

	select	sum(CASE WHEN ie_prestador_codificacao='P' THEN  1  ELSE 0 END ) qt_prest_pgto
	into STRICT	qt_prest_pgto_w
	from	pls_esquema_contabil
	where	ie_tipo_regra		= 'PC'
	and	cd_estabelecimento = cd_estabelecimento_p
	and	dt_referencia_month_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia, dt_referencia_month_w);

	if (coalesce(qt_prest_pgto_w::text, '') = '') then
		qt_prest_pgto_w:= 0;
	end if;

	commit;

	open c_medica;
	loop
	fetch c_medica into
		vet_medica;
	EXIT WHEN NOT FOUND; /* apply on c_medica */
		begin
		dt_pagamento_w		:= null;
		nr_titulo_w		:= null;
		dt_vencimento_w		:= null;
		dt_contabil_w		:= vet_medica.dt_conhecimento;
		nr_contador_w		:= nr_contador_w + 1;
		
		if (ie_data_tipo_segurado_w = 'A') then
			dt_ref_repasse_w	:= vet_medica.dt_ocorrencia;
		else
			dt_ref_repasse_w	:= vet_medica.dt_conhecimento;
		end if;
		
		SELECT * FROM pls_obter_dados_repasse(	dt_ref_repasse_w, vet_medica.nr_seq_segurado, vet_medica.nr_seq_congenere, ie_tipo_repasse_w, ie_tipo_compartilhamento_w, dt_repasse_w, dt_fim_repasse_w) INTO STRICT ie_tipo_repasse_w, ie_tipo_compartilhamento_w, dt_repasse_w, dt_fim_repasse_w;
		
		select	max(x.ie_tipo_relacao)
		into STRICT	ie_tipo_relacao_w
		from	pls_prestador	x
		where	x.nr_sequencia	= vet_medica.nr_seq_prestador;
		
		if (vet_medica.ie_tipo_protocolo = 'C') then
		
			/*select max(substr(obter_dados_nota_fiscal(n.nr_seq_nota_fiscal,'0'),1,255))
			into	nr_nota_fiscal_w
			from	pls_pagamento_nota n
			where	n.nr_seq_pagamento in (	select	p.nr_sequencia
							from	pls_conta c,
								pls_conta_medica_resumo r,
								pls_lote_pagamento l,
								pls_pagamento_prestador p
							where	c.nr_sequencia = r.nr_seq_conta
							and 	l.nr_sequencia = p.nr_seq_lote
							and	l.nr_sequencia = r.nr_seq_lote_pgto
							and	c.nr_sequencia = vet_medica.nr_documento);*/
			select	max(v.nr_titulo)
			into STRICT	nr_titulo_w
			from	pls_pag_prest_vencimento v
			where	v.nr_seq_pag_prestador in (	SELECT	p.nr_sequencia
								from	pls_conta c,
									pls_conta_medica_resumo r,
									pls_lote_pagamento l,
									pls_pagamento_prestador p
								where	c.nr_sequencia = r.nr_seq_conta
								and 	l.nr_sequencia = p.nr_seq_lote
								and	l.nr_sequencia = r.nr_seq_lote_pgto
								and	p.nr_seq_prestador = r.nr_seq_prestador_pgto
								and	c.nr_sequencia = vet_medica.nr_documento);
			/*if (nr_titulo_w > 0) then
				select	dt_vencimento
				into 	dt_vencimento_w
				from	pls_pag_prest_vencimento
				where	nr_titulo = nr_titulo_w;
			end if;*/
		elsif (vet_medica.ie_tipo_protocolo = 'R') then
			nr_nota_fiscal_w 	:= vet_medica.nr_documento;

			select 	max(nr_titulo)
			into STRICT 	nr_titulo_w
			from ( SELECT	t.nr_titulo
				from	pls_protocolo_conta	p,
					titulo_pagar 		t
				where	p.nr_sequencia = t.nr_seq_reembolso
				and	p.nr_sequencia = vet_medica.nr_seq_protocolo) alias1 LIMIT 1;
		end if;
		
		if (coalesce(nr_titulo_w,0) > 0) then
			select	max(dt_liquidacao),
				max(dt_vencimento_atual)
			into STRICT 	dt_pagamento_w,
				dt_vencimento_w
			from	titulo_pagar
			where	nr_titulo = nr_titulo_w;
		end if;
		
		ds_observacao_item_w	:= null;

		if (vet_medica.ie_tipo_segurado in ('C','I','T')) then
			ds_observacao_item_w	:= ds_observacao_w;
		end if;
		
		if (ie_origem_p = 'H') then
			insert into pls_aux_event_glosa(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_reg_auxiliar,
				nr_documento,
				cd_procedimento,
				ie_origem_proced,
				nr_seq_material,
				cd_material,
				dt_realizacao,
				dt_aviso,
				nr_seq_segurado,
				ie_tipo_segurado,
				nr_seq_prestador,
				nr_seq_congenere,
				nr_seq_grupo_ans,
				nr_registro_produto,
				ie_tipo_vinculo,
				ie_ato_cooperado,
				ie_tipo_modalidade,
				ie_tipo_regulamentacao,
				ie_tipo_contratacao,
				ie_tipo_segmentacao,
				vl_glosa,
				vl_evento,
				dt_contabil,
				nr_titulo,
				dt_registro_glosa,
				dt_ress_glosa,
				dt_pagamento,
				dt_vencimento,
				cd_conta_debito,
				cd_conta_credito,
				ie_tipo_documento,
				nr_contrato,
				dt_emissao,
				nr_seq_pagador,
				nr_seq_conta,
				nr_seq_protocolo,
				ie_tipo_protocolo,
				ie_tipo_evento,
				ds_observacao,
				ie_tipo_compartilhamento,
				ie_tipo_repasse,
				dt_inicio_compartilhamento,
				dt_fim_compartilhamento,
				dt_liberacao_pag,
				dt_apresentacao_lote,
				dt_competencia_lote,
				vl_taxa_pgto)
			values (nextval('pls_aux_event_glosa_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_reg_auxiliar_p,
				vet_medica.nr_documento,
				vet_medica.cd_procedimento,
				vet_medica.ie_origem_proced,
				vet_medica.nr_seq_material,
				substr(vet_medica.cd_material_ops, 1, 6),
				vet_medica.dt_ocorrencia,
				vet_medica.dt_conhecimento,
				vet_medica.nr_seq_segurado,
				vet_medica.ie_tipo_segurado,
				CASE WHEN vet_medica.ie_tipo_protocolo='I' THEN null  ELSE vet_medica.nr_seq_prestador END ,
				CASE WHEN vet_medica.ie_tipo_protocolo='I' THEN vet_medica.nr_seq_congenere  ELSE null END ,
				vet_medica.nr_seq_grupo_ans,
				vet_medica.nr_protocolo_ans,
				ie_tipo_relacao_w,
				vet_medica.ie_ato_cooperado,
				vet_medica.ie_modalidade_contrat,
				vet_medica.ie_regulamentacao,
				vet_medica.ie_tipo_contratacao,
				vet_medica.ie_segmentacao,
				vet_medica.vl_glosa,
				vet_medica.vl_evento ,
				dt_contabil_w,
				nr_titulo_w,
				vet_medica.dt_recuperacao,
				vet_medica.dt_recuperacao,
				dt_pagamento_w,
				dt_vencimento_w,
				vet_medica.cd_conta_contrapartida,
				vet_medica.cd_conta_contabil,
				vet_medica.ie_tipo_documento,
				vet_medica.nr_contrato,
				vet_medica.dt_emissao,
				vet_medica.nr_seq_pagador,
				vet_medica.nr_documento,
				vet_medica.nr_seq_protocolo,
				vet_medica.ie_tipo_protocolo,
				vet_medica.ie_tipo_grupo_ans,
				ds_observacao_item_w,
				ie_tipo_compartilhamento_w,
				ie_tipo_repasse_w,
				dt_repasse_w,
				dt_fim_repasse_w,
				vet_medica.dt_liberacao_pag,
				vet_medica.dt_apresentacao_lote,
				vet_medica.dt_competencia_lote,
				vet_medica.vl_taxa_pgto);
		end if;
			
		if (ie_origem_p = 'D') then
			insert into w_ctb_livro_aux_event_liq(	
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nm_prestador,
				nr_cpf_cnpj_adic,
				ie_tipo_documento,
				ds_tipo_documento,
				nr_documento,
				nr_titulo,
				nr_protocolo_ans,
				nr_contrato,
				dt_emissao,
				dt_rescisao,
				nm_usuario_princ,
				nr_cpf_cnpj,
				nm_usuario_evento,
				dt_pagamento,
				dt_ocorrencia,
				dt_conhecimento,
				dt_contabilizacao,
				ds_grupo_ans,
				ie_origem_proced,
				cd_procedimento,
				cd_material_ops,
				ds_item_mat_proc,
				cd_beneficiario,
				ds_tipo_relacao,
				ie_tipo_operacao,
				ie_ato_cooperado,
				ds_ato_cooperado,
				ie_preco,
				ds_modalidade_contrat,
				ie_regulamentacao,
				ds_tipo_regulamentacao,
				ie_tipo_contratacao,
				ds_tipo_contratacao,
				ie_segmentacao,
				ds_segmentacao,
				vl_evento,
				vl_glosa,
				ie_tipo_livro,
				cd_conta_contrapartida,
				cd_conta_contabil,
				nr_seq_reg_auxiliar,
				nr_seq_segurado,
				nr_seq_prestador,
				nr_seq_congenere,
				nr_seq_grupo_ans,
				dt_vencimento,
				dt_recuperacao,
				dt_ressarcimento,
				ie_tipo_protocolo,
				ds_tipo_protocolo,
				ie_tipo_segurado,
				ds_tipo_segurado,
				nr_seq_protocolo,
				nr_seq_pagador,
				nr_linha,
				ie_tipo_evento,
				ds_observacao,
				ie_tipo_compartilhamento,
				ie_tipo_repasse,
				dt_inicio_compartilhamento,
				dt_fim_compartilhamento,
				dt_inicio_cobertura,
				dt_fim_cobertura,
				dt_referencia,
				vl_taxa_pgto)
			values (	nextval('w_ctb_livro_aux_event_liq_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				vet_medica.nm_prestador,
				vet_medica.nr_cpf_cnpj_adic,
				vet_medica.ie_tipo_documento,
				obter_valor_dominio(8372,vet_medica.ie_tipo_documento),
				vet_medica.nr_documento,
				nr_titulo_w,
				vet_medica.nr_protocolo_ans,
				vet_medica.nr_contrato,
				vet_medica.dt_emissao,
				vet_medica.dt_rescisao,
				vet_medica.nm_usuario_princ,
				vet_medica.nr_cpf_cnpj,
				vet_medica.nm_usuario_evento,
				dt_pagamento_w,
				vet_medica.dt_ocorrencia,
				vet_medica.dt_conhecimento,
				dt_contabil_w,
				vet_medica.ds_grupo_ans,
				vet_medica.ie_origem_proced,
				vet_medica.cd_procedimento,
				vet_medica.cd_material_ops,
				vet_medica.ds_item_mat_proc,
				vet_medica.cd_beneficiario,
				vet_medica.ds_tipo_relacao,
				vet_medica.ie_tipo_operacao,
				vet_medica.ie_ato_cooperado,
				obter_valor_dominio(3418,vet_medica.ie_ato_cooperado),
				vet_medica.ie_modalidade_contrat,
				obter_valor_dominio(1669, vet_medica.ie_modalidade_contrat),
				vet_medica.ie_regulamentacao,
				obter_valor_dominio(2157, vet_medica.ie_regulamentacao),
				vet_medica.ie_tipo_contratacao,
				obter_valor_dominio(1666, vet_medica.ie_tipo_contratacao),
				vet_medica.ie_segmentacao,
				obter_valor_dominio(1665, vet_medica.ie_segmentacao),
				coalesce(vet_medica.vl_evento, 0),
				coalesce(vet_medica.vl_glosa, 0),
				4,
				vet_medica.cd_conta_contrapartida,
				vet_medica.cd_conta_contabil,
				nr_seq_reg_auxiliar_p,
				vet_medica.nr_seq_segurado,
				vet_medica.nr_seq_prestador,
				vet_medica.nr_seq_congenere,
				vet_medica.nr_seq_grupo_ans,
				dt_vencimento_w,
				vet_medica.dt_recuperacao,
				vet_medica.dt_recuperacao,
				vet_medica.ie_tipo_protocolo,
				obter_valor_dominio(3648,vet_medica.ie_tipo_protocolo),
				vet_medica.ie_tipo_segurado,
				obter_valor_dominio(2406,vet_medica.ie_tipo_segurado),
				vet_medica.nr_seq_protocolo,
				vet_medica.nr_seq_pagador,
				nr_contador_w,
				vet_medica.ie_tipo_grupo_ans,
				ds_observacao_item_w,
				ie_tipo_compartilhamento_w,
				ie_tipo_repasse_w,
				dt_repasse_w,
				dt_fim_repasse_w,
				vet_medica.dt_liberacao_pag,
				vet_medica.dt_apresentacao_lote,
				dt_final_w,
				vet_medica.vl_taxa_pgto);
		end if;

		if (mod(nr_contador_w, 1000) = 0) then
			commit;
		end if;

		end;
	end loop;
	close c_medica;

	update	ctb_livro_auxiliar
	set	qt_registros	= nr_contador_w
	where	nr_sequencia	= nr_seq_reg_auxiliar_p;

	commit;

elsif (ie_origem_p = 'D' and ie_gerar_arquivo_p = 'S') then
	begin
	nm_arquivo_w	:= 'RegAuxEventRessarcRecGlosas' || to_char(clock_timestamp(),'ddmmyyyyhh24miss') || nm_usuario_p || '.csv';
	ds_nome_livro_w	:= obter_desc_expressao(776805);
	ds_periodo_w	:= substr(wheb_mensagem_pck.get_texto(1098702,'DT_INICIAL='|| dt_inicial_w ||';'||'DT_FINAL='|| dt_final_w ||';'||'DT_LIBERACAO='|| dt_liberacao_w), 1, 255);

	SELECT * FROM obter_evento_utl_file(1, null, ds_local_w, ds_erro_w) INTO STRICT ds_local_w, ds_erro_w;

	arq_texto_w := utl_file.fopen(ds_local_w,nm_arquivo_w,'W', 32000);

	utl_file.put_line(arq_texto_w, ds_nome_livro_w);
	utl_file.put_line(arq_texto_w, ds_periodo_w);
	utl_file.put_line(arq_texto_w, substr(obter_desc_expressao(1033940),1,1200));
	utl_file.fflush(arq_texto_w);
	for vetl in c_linha loop
		begin
		utl_file.put_line(arq_texto_w,vetl.ds_linha);
		utl_file.fflush(arq_texto_w);
		end;
	end loop;
	end;
end if;

CALL wheb_usuario_pck.set_ie_executar_trigger('S');

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_event_glosa ( nr_seq_reg_auxiliar_p w_ctb_livro_aux_event_liq.nr_seq_reg_auxiliar%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_origem_p w_ctb_livro_aux_event_liq.ie_ato_cooperado%type, ie_gerar_arquivo_p w_ctb_livro_aux_event_liq.ie_ato_cooperado%type default 'N') FROM PUBLIC;

