-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_ordem_compra_venc ( nr_ordem_compra_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_atualizacao_w        		timestamp 		:= clock_timestamp();
nr_sequencia_w			bigint;
cd_condicao_pagamento_w  ordem_compra.cd_condicao_pagamento%type;
pr_desconto_ordem_w      ordem_compra.pr_desconto%type;
pr_desconto_item_w		ordem_compra_item.pr_descontos%type;
vl_unitario_material_w	double precision;
vl_desconto_w			double precision;
qt_prevista_entrega_w    ordem_compra_item_entrega.qt_prevista_entrega%type;
dt_prevista_entrega_w    ordem_compra_item_entrega.dt_prevista_entrega%type;
dt_vencimento_w			timestamp;
ds_vencimentos_w			varchar(2000);
cd_estabelecimento_w    ordem_compra.cd_estabelecimento%type;
vl_entrega_w			double precision;
qt_vencimentos_w			integer;
vl_vencimento_w			ordem_compra_venc.vl_vencimento%type;
vl_total_vencimento_w		double precision;
vl_diferenca_w			double precision;
vl_total_ordem_w			double precision;
nr_vencimento_w			integer;
nr_item_oci_w			ordem_compra_item.nr_item_oci%type;
nr_item_oc_venc_w		ordem_compra_venc.nr_item_oc_venc%type;
pr_tributo_w			double precision;
vl_frete_w      		ordem_compra.vl_frete%type;
vl_despesa_acessoria_w  ordem_compra.vl_despesa_acessoria%type;
vl_despesa_doc_w    	ordem_compra.vl_despesa_doc%type;
vl_seguro_w				ordem_compra.vl_seguro%type;
ie_frete_w				ordem_compra.ie_frete%type;
cont_dt_prevista_entrega_w		bigint;
ie_data_base_venc_ordem_w		parametro_compras.ie_data_base_venc_ordem%type;
dt_ordem_compra_w		ordem_compra.dt_ordem_compra%type;
dt_geracao_w			timestamp;
ie_forma_pagamento_w	condicao_pagamento.ie_forma_pagamento%type;
qt_registro_w			smallint;
qt_dia_limite_w			smallint;
pr_juros_negociado_w	ordem_compra.pr_juros_negociado%type;
ie_juros_negociado_oc_w		varchar(1);
dt_liberacao_w			ordem_compra.dt_liberacao%type;
cd_material_w			material.cd_material%type;
dt_entrega_w			ordem_compra_item_entrega.dt_real_entrega%type;
qt_datas_entrega_w		integer;
nr_item_oc_w			integer;
vl_item_ww				double precision;
vl_item_real_w			double precision;
vl_item_w				double precision;
qt_itens_w				double precision;
vl_retorno_div_w		double precision;
vl_retorno_w			double precision;
vl_desconto_item_w		double precision;
vl_desconto_percent_w	double precision;
vl_tributo_w			double precision;
ie_considera_somente_uteis_w	varchar(1);
vl_desconto_oc_w		ordem_compra.vl_desconto%type;
qt_dias_parcela_w		integer;
tx_fracao_parcela_w		double precision;
qt_parcela_w			integer;

c001 CURSOR FOR
	SELECT	a.cd_condicao_pagamento,
		a.pr_desconto pr_desconto_ordem,
		a.pr_juros_negociado,
	  	coalesce(b.pr_descontos,0) pr_desconto_item,
	  	coalesce(dividir_sem_round(b.vl_total_item, b.qt_material),0),
		b.vl_desconto,
	  	c.qt_prevista_entrega,
	  	coalesce(c.dt_real_entrega, c.dt_prevista_entrega),
		b.nr_item_oci
	from	ordem_compra_item_entrega c,
	    	ordem_compra_item b,
	    	ordem_compra a
	where	a.nr_ordem_compra    = nr_ordem_compra_p
	and	a.nr_ordem_compra    = b.nr_ordem_compra
	and	a.nr_ordem_compra    = c.nr_ordem_compra
	and	b.nr_item_oci        = c.nr_item_oci
	and	coalesce(c.dt_cancelamento::text, '') = ''
	and	coalesce(b.dt_reprovacao::text, '') = '';


C02 CURSOR FOR
	SELECT	b.nr_item_oci
	from	ordem_compra_item b,
	    	ordem_compra a
	where	a.nr_ordem_compra    = nr_ordem_compra_p
	and	a.nr_ordem_compra    = b.nr_ordem_compra
	and	coalesce(b.dt_reprovacao::text, '') = '';


C04 CURSOR FOR
	SELECT	sum(b.vl_unitario_material * c.qt_prevista_entrega), --+ sum(nvl(b.vl_desconto,0) + nvl((((b.vl_unitario_material * c.qt_prevista_entrega) * b.pr_descontos) / 100),0)),
			coalesce(c.dt_real_entrega, c.dt_prevista_entrega)
	from	ordem_compra_item_entrega c,
	    	ordem_compra_item b,
	    	ordem_compra a
	where	a.nr_ordem_compra    = nr_ordem_compra_p
	and	a.nr_ordem_compra    = b.nr_ordem_compra
	and	a.nr_ordem_compra    = c.nr_ordem_compra
	and	b.nr_item_oci        = c.nr_item_oci
	and	coalesce(b.dt_reprovacao::text, '') = ''
	and	coalesce(c.dt_cancelamento::text, '') = ''
--	and	nvl(c.dt_real_entrega, c.dt_prevista_entrega) = :dt_entrega_w
	group by coalesce(c.dt_real_entrega, c.dt_prevista_entrega);

C05 CURSOR FOR
SELECT	tx_fracao_parcela,
	qt_dias_parcela
from	parcela
where	cd_condicao_pagamento = cd_condicao_pagamento_w;
	

BEGIN

select	b.ie_forma_pagamento
into STRICT	ie_forma_pagamento_w
from	condicao_pagamento b,
	ordem_compra a
where	a.cd_condicao_pagamento	= b.cd_condicao_pagamento
and	a.nr_ordem_compra    	= nr_ordem_compra_p;

if (ie_forma_pagamento_w = 10) then
	begin
	/*se for condicao de pagamento com tipo (conforme vencimentos)*/

	select	count(*)
	into STRICT	qt_registro_w
	from	ordem_compra_venc
	where	nr_ordem_compra	= nr_ordem_compra_p;
	if (qt_registro_w > 0) then
		begin
		select	coalesce(sum(vl_vencimento),0)
		into STRICT	vl_vencimento_w
		from	ordem_compra_venc
		where	nr_ordem_compra	= nr_ordem_compra_p;

		select	round((coalesce(sum(obter_valor_liquido_ordem(nr_ordem_compra)),0))::numeric,2)
		into STRICT	vl_total_ordem_w
		from	ordem_compra
		where	nr_ordem_compra = nr_ordem_compra_p;

		update	ordem_compra_venc
		set	vl_vencimento 	= vl_vencimento + dividir((vl_total_ordem_w - vl_vencimento_w), qt_registro_w)
		where	nr_ordem_compra	= nr_ordem_compra_p;
		end;
	end if;
	end;
elsif (ie_forma_pagamento_w = 21) then
	begin
	delete from	ordem_compra_venc
	where	nr_ordem_compra	= nr_ordem_compra_p;
	

	select	count(*)
	into STRICT	qt_itens_w
	from	ordem_compra_item b,
			ordem_compra a
	where	a.nr_ordem_compra    = nr_ordem_compra_p
	and		a.nr_ordem_compra    = b.nr_ordem_compra;

	select	count(*)
	into STRICT	qt_vencimentos_w
	from	ordem_compra_item_entrega c,
			ordem_compra_item b,
			ordem_compra a
	where	a.nr_ordem_compra    = nr_ordem_compra_p
	and		a.nr_ordem_compra    = b.nr_ordem_compra
	and		a.nr_ordem_compra    = c.nr_ordem_compra
	and		b.nr_item_oci        = c.nr_item_oci
	and		coalesce(c.dt_cancelamento::text, '') = ''
	and		coalesce(b.dt_reprovacao::text, '') = '';


	qt_vencimentos_w := qt_vencimentos_w/qt_itens_w;

	select	dividir(coalesce(max(vl_frete),0),qt_vencimentos_w),
			coalesce(max(ie_frete),'F'),
			dividir(coalesce(max(vl_despesa_acessoria),0),qt_vencimentos_w),
			dividir(coalesce(max(vl_despesa_doc),0),qt_vencimentos_w),
			max(cd_estabelecimento),
			max(dt_ordem_compra),
			max(dt_liberacao),
			coalesce(max(pr_desconto),0),
			dividir(max(vl_desconto),qt_vencimentos_w),
			dividir(coalesce(max(vl_seguro),0),qt_vencimentos_w)
	into STRICT	vl_frete_w,
			ie_frete_w,
			vl_despesa_acessoria_w,
			vl_despesa_doc_w,
			cd_estabelecimento_w,
			dt_ordem_compra_w,
			dt_liberacao_w,
			pr_desconto_ordem_w ,
			vl_desconto_w,
			vl_seguro_w
	from	ordem_compra
	where	nr_ordem_compra = nr_ordem_compra_p;


	select	coalesce(max(obter_valor_param_usuario(917, 109, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)),0)
	into STRICT	qt_dia_limite_w
	;
	
	ie_considera_somente_uteis_w := Obter_Param_Usuario(913, 14, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_considera_somente_uteis_w);
	--Na solicitacao gera com a data de entega em dias NAO UTEIS,porem ao gerar a ordem a data prevista joga para o proxima dia util. Desta forma tratamos com este parametro da solicitacao de compras. OS 907808
	select	coalesce(max(ie_data_base_venc_ordem),'E'),
		coalesce(max(ie_juros_negociado_oc),'N')
	into STRICT	ie_data_base_venc_ordem_w,
		ie_juros_negociado_oc_w
	from	parametro_compras
	where	cd_estabelecimento = cd_estabelecimento_w;



		begin
		select	coalesce(sum(CASE WHEN b.ie_soma_diminui='S' THEN  pr_tributo WHEN b.ie_soma_diminui='D' THEN  pr_tributo * -1  ELSE 0 END ),0),
				coalesce(sum(CASE WHEN b.ie_soma_diminui='S' THEN  vl_tributo WHEN b.ie_soma_diminui='D' THEN  vl_tributo * -1  ELSE 0 END ),0)
		into STRICT	pr_tributo_w,
				vl_tributo_w
		from	tributo b, ordem_compra_item_trib a
		where	a.nr_ordem_compra	= nr_ordem_compra_p
		and	a.cd_tributo	= b.cd_tributo;
		exception
			when others then
				pr_tributo_w:= 0;
		end;

		begin
		--select	dividir(sum(NVL(b.vl_desconto,0) + NVL((((b.vl_unitario_material * c.qt_prevista_entrega) * b.pr_descontos) / 100),0)),qt_vencimentos_w)
		select	dividir(sum(coalesce(b.vl_desconto,0)),qt_vencimentos_w),
				sum(coalesce((((vl_unitario_material * qt_material) * pr_descontos) / 100),0))
		into STRICT	vl_desconto_item_W,
				vl_desconto_percent_w
		from	ordem_compra_item_entrega c,
				ordem_compra_item b,
				ordem_compra a
		where	a.nr_ordem_compra    = nr_ordem_compra_p
		and		a.nr_ordem_compra    = b.nr_ordem_compra
		and		a.nr_ordem_compra    = c.nr_ordem_compra
		and		b.nr_item_oci        = c.nr_item_oci
		and		coalesce(c.dt_cancelamento::text, '') = ''
		and		coalesce(b.dt_reprovacao::text, '') = '';
		exception
			when others then
				vl_desconto_item_W:= 0;
		end;

		vl_desconto_item_w := vl_desconto_item_W + dividir(vl_desconto_percent_w,qt_vencimentos_w);
		vl_desconto_item_w := dividir(vl_desconto_item_w,qt_vencimentos_w);

		open C04;
		loop
		fetch C04 into
			vl_item_ww,
			dt_entrega_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin

			vl_item_real_w := vl_item_ww;
			vl_item_w			:=	(vl_item_ww + vl_desconto_item_w);
			--vl_retorno_div_w		:= ROUND(dividir(dividir(vl_item_w, 100) * pr_tributo_w,qt_vencimentos_w), 2); -- Pega os tributos
			vl_retorno_div_w := dividir(vl_tributo_w,qt_vencimentos_w);

			vl_item_ww			:= 	((vl_item_ww + round((vl_retorno_div_w)::numeric,4)) - coalesce(vl_desconto_item_w, 0) - coalesce(vl_desconto_w, 0));

			if (vl_despesa_acessoria_w > 0) then
				vl_item_ww	:= (vl_item_ww + vl_despesa_acessoria_w);
			end if;

			if (vl_despesa_doc_w > 0) then
				vl_item_ww	:= (vl_item_ww + vl_despesa_doc_w);
			end if;

			if (ie_frete_w	= 'F')then
				vl_item_ww	:= (vl_item_ww + vl_frete_w);
			end if;

			if (vl_seguro_w > 0) then
				vl_item_ww	:= (vl_item_ww + vl_seguro_w);
			end if;

			vl_item_ww	:= 	vl_item_ww - (vl_item_real_w * (coalesce(pr_desconto_ordem_w,0) /100));


			if (ie_juros_negociado_oc_w = 'S') and (pr_juros_negociado_w > 0) then
				vl_item_ww	:= vl_item_ww +	(vl_item_ww * (coalesce(pr_juros_negociado_w,0) /100));
			end if;

			vl_vencimento_w	:= vl_item_ww;

			select	coalesce((max(nr_item_oc_venc) + 1),1)
			into STRICT	nr_item_oc_venc_w
			from	ordem_compra_venc
			where	nr_ordem_compra	= nr_ordem_compra_p;

			insert into ordem_compra_venc(
				nr_ordem_compra,
				nr_item_oc_venc,
				dt_vencimento,
				vl_vencimento,
				dt_atualizacao,
				nm_usuario,
				ie_inf_calc,
				ie_gerar_adiantamento)
			values (nr_ordem_compra_p,
				nr_item_oc_venc_w,
				CASE WHEN ie_considera_somente_uteis_w='N' THEN dt_entrega_w  ELSE obter_proximo_dia_util(cd_estabelecimento_w, dt_entrega_w) END ,								
				vl_vencimento_w,
				clock_timestamp(),
				nm_usuario_p,
				'C',
				'N');

			end;
		end loop;
		close C04;

	end;
else
	begin
	/*se for condicao de pagamento diferente de (conforme vencimentos) - rotina normal*/

	delete	from ordem_compra_venc
	where	nr_ordem_compra 	= nr_ordem_compra_p
	and	ie_inf_calc		= 'C';

	select	coalesce(max(vl_frete),0),
		coalesce(max(ie_frete),'F'),
		max(cd_estabelecimento),
		max(dt_ordem_compra),
		max(dt_liberacao),
		coalesce(max(pr_desconto),0),
		coalesce(max(vl_desconto),0),
		coalesce(max(vl_despesa_acessoria),0)
	into STRICT	vl_frete_w,
		ie_frete_w,
		cd_estabelecimento_w,
		dt_ordem_compra_w,
		dt_liberacao_w,
		pr_desconto_ordem_w,
		vl_desconto_oc_w,
		vl_despesa_acessoria_w
	from	ordem_compra
	where	nr_ordem_compra = nr_ordem_compra_p;

	select	coalesce(max(obter_valor_param_usuario(917, 109, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)),0)
	into STRICT	qt_dia_limite_w
	;

	select	coalesce(max(ie_data_base_venc_ordem),'E'),
		coalesce(max(ie_juros_negociado_oc),'N')
	into STRICT	ie_data_base_venc_ordem_w,
		ie_juros_negociado_oc_w
	from	parametro_compras
	where	cd_estabelecimento = cd_estabelecimento_w;

	if (ie_data_base_venc_ordem_w = 'R') then

		select	max(cd_material)
		into STRICT	cd_material_w
		from	ordem_compra_item
		where	nr_ordem_compra = nr_ordem_compra_p;

		select	coalesce(obter_regra_venc_oc(cd_material_w, cd_estabelecimento_w),'E')
		into STRICT	ie_data_base_venc_ordem_w
		;

	end if;

	select	sum(count(dt_prevista_entrega))
	into STRICT	cont_dt_prevista_entrega_w
	from	ordem_compra_item_entrega
	where	nr_ordem_compra = nr_ordem_compra_p
	and	coalesce(dt_cancelamento::text, '') = ''
	group by dt_prevista_entrega;

	open c001;
	loop
	fetch c001 into
		cd_condicao_pagamento_w,
		pr_desconto_ordem_w,
		pr_juros_negociado_w,
	  	pr_desconto_item_w,
  		vl_unitario_material_w,
		vl_desconto_w,
	  	qt_prevista_entrega_w,
 		dt_prevista_entrega_w,
		nr_item_oci_w;
	EXIT WHEN NOT FOUND; /* apply on c001 */
		dt_geracao_w	:= dt_prevista_entrega_w;

		if (ie_data_base_venc_ordem_w = 'A') then
			dt_geracao_w	:= clock_timestamp();
		elsif (ie_data_base_venc_ordem_w = 'O') then
			dt_geracao_w	:= dt_ordem_compra_w;
		elsif (ie_data_base_venc_ordem_w = 'L') then
			dt_geracao_w	:= coalesce(dt_liberacao_w,dt_ordem_compra_w);
		elsif (ie_data_base_venc_ordem_w = 'E') then
			select	min(dt_prevista_entrega)
			into STRICT	dt_geracao_w
			from	ordem_compra_item_entrega
			where	nr_ordem_compra = nr_ordem_compra_p
			and	coalesce(dt_cancelamento::text, '') = '';
		end if;

		begin
		/*matheus os 52764 22/08/07 inclui o teste do 'D' diminui e 0 para nao influi*/

		select	coalesce(sum(CASE WHEN b.ie_soma_diminui='S' THEN  pr_tributo WHEN b.ie_soma_diminui='D' THEN  pr_tributo * -1  ELSE 0 END ),0)
		into STRICT	pr_tributo_w
		from	tributo b, ordem_compra_item_trib a
		where	a.nr_ordem_compra	= nr_ordem_compra_p
		and	a.nr_item_oci	= nr_item_oci_w
		and	a.cd_tributo	= b.cd_tributo;
		exception
			when others then
				pr_tributo_w:= 0;
		end;
		vl_entrega_w	:= 	(vl_unitario_material_w * qt_prevista_entrega_w);
		vl_entrega_w	:= 	(vl_entrega_w * (1 - coalesce(pr_desconto_item_w,0) /100));
		vl_entrega_w	:= 	(vl_entrega_w * (1 - coalesce(pr_desconto_ordem_w,0) /100));
		vl_entrega_w	:= 	(vl_entrega_w * (1 + coalesce(pr_tributo_w,0) /100));
		
		if (coalesce(vl_desconto_w, 0) > 0) and (coalesce(pr_desconto_item_w, 0) = 0) then
			vl_entrega_w	:= 	(vl_entrega_w - coalesce(vl_desconto_w, 0));
		end if;

		if (ie_juros_negociado_oc_w = 'S') and (pr_juros_negociado_w > 0) then
			vl_entrega_w	:= 	(vl_entrega_w * (1 + coalesce(pr_juros_negociado_w,0) /100));
		end if;

		nr_vencimento_w	:= 	0;
		vl_total_vencimento_w	:= 0;

		SELECT * FROM calcular_vencimento(
			cd_estabelecimento_w, cd_condicao_pagamento_w, dt_geracao_w, qt_vencimentos_w, ds_vencimentos_w) INTO STRICT qt_vencimentos_w, ds_vencimentos_w;
			
		select	count(*)
		into STRICT	qt_parcela_w
		from	parcela
		where	cd_condicao_pagamento = cd_condicao_pagamento_w;
			
		if (ie_forma_pagamento_w = 1) and (qt_parcela_w = 0) then
		
			dt_vencimento_w		:= To_Date(substr(ds_vencimentos_w,1,10),'dd/mm/yyyy');
			
			if (coalesce(qt_dia_limite_w,0) > 0) then
				begin
				select	sup_obter_data_venc_fixo(qt_dia_limite_w,dt_vencimento_w)
				into STRICT	dt_vencimento_w
				;
				end;
			end if;
		
			begin
			select	nr_item_oc_venc
			into STRICT	nr_item_oc_venc_w
			from	ordem_compra_venc
			where	nr_ordem_compra	= nr_ordem_compra_p
			and	trunc(dt_vencimento)	= trunc(dt_vencimento_w)
			and	ie_inf_calc		= 'C';
			exception
				when 	no_data_found then
					nr_item_oc_venc_w	:= 0;
			end;
			
			if (nr_item_oc_venc_w = 0) then		
				select	coalesce((max(nr_item_oc_venc) + 1),1)
				into STRICT	nr_item_oc_venc_w
				from	ordem_compra_venc
				where	nr_ordem_compra	= nr_ordem_compra_p;
			
				insert into ordem_compra_venc(
					nr_ordem_compra,
					nr_item_oc_venc,
					dt_vencimento,
					vl_vencimento,
					dt_atualizacao,
					nm_usuario,
					ie_inf_calc,
					ie_gerar_adiantamento)
				values (nr_ordem_compra_p,
					nr_item_oc_venc_w,
					dt_vencimento_w,
					round((vl_entrega_w)::numeric,2),
					clock_timestamp(),
					nm_usuario_p,
					'C',
					'N');					
			else
				begin
					update	ordem_compra_venc
					set	vl_vencimento 	= round((vl_vencimento + vl_entrega_w)::numeric,2)
					where	nr_ordem_compra	= nr_ordem_compra_p
					and	nr_item_oc_venc	= nr_item_oc_venc_w;
				end;
			end if;
		end if;
			
		OPEN C05;
		LOOP
		FETCH C05 INTO
			tx_fracao_parcela_w,
			qt_dias_parcela_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */
			begin
			if (length(ds_vencimentos_w) > 3) then
				dt_vencimento_w		:= To_Date(substr(ds_vencimentos_w,1,10),'dd/mm/yyyy');
				ds_vencimentos_w	:= substr(ds_vencimentos_w,12, length(ds_vencimentos_w));	

				if (ie_frete_w = 'F')	then
					vl_vencimento_w		:= dividir(((vl_entrega_w + (vl_frete_w / cont_dt_prevista_entrega_w)) * tx_fracao_parcela_w),100);
				else	
					vl_vencimento_w		:= dividir((vl_entrega_w * tx_fracao_parcela_w),100);
				end if;				
								
				vl_total_vencimento_w	:= vl_total_vencimento_w + vl_vencimento_w;
		
				begin

					if (coalesce(qt_dia_limite_w,0) > 0) then
						begin

						select	sup_obter_data_venc_fixo(qt_dia_limite_w,dt_vencimento_w)
						into STRICT	dt_vencimento_w
						;

						end;
					end if;

					select	nr_item_oc_venc
					into STRICT	nr_item_oc_venc_w
					from	ordem_compra_venc
					where	nr_ordem_compra	= nr_ordem_compra_p
					and	trunc(dt_vencimento)	= trunc(dt_vencimento_w)
					and	ie_inf_calc		= 'C';
					exception
						when 	no_data_found then
							nr_item_oc_venc_w	:= 0;
				end;
		
				if (nr_item_oc_venc_w = 0) then
					begin
						select	coalesce((max(nr_item_oc_venc) + 1),1)
						into STRICT	nr_item_oc_venc_w
						from	ordem_compra_venc
						where	nr_ordem_compra	= nr_ordem_compra_p;

						insert into ordem_compra_venc(
							nr_ordem_compra,
							nr_item_oc_venc,
							dt_vencimento,
							vl_vencimento,
							dt_atualizacao,
							nm_usuario,
							ie_inf_calc,
							ie_gerar_adiantamento)
						values (nr_ordem_compra_p,
							nr_item_oc_venc_w,
							dt_vencimento_w,
							vl_vencimento_w,
							clock_timestamp(),
							nm_usuario_p,
							'C',
							'N');
					end;
				else
					begin
						update	ordem_compra_venc
						set	vl_vencimento 	= vl_vencimento + vl_vencimento_w
						where	nr_ordem_compra	= nr_ordem_compra_p
						and	nr_item_oc_venc	= nr_item_oc_venc_w;
					end;
				end if;
			end if;
			end;
		END LOOP;
		close C05;

	end loop;
	close c001;
	
	vl_desconto_oc_w := coalesce(dividir(vl_desconto_oc_w, qt_vencimentos_w),0);
	
	if (vl_desconto_oc_w > 0) then
		update	ordem_compra_venc
		set	vl_vencimento 	= vl_vencimento - vl_desconto_oc_w
		where	nr_ordem_compra	= nr_ordem_compra_p;
	end if;

	vl_despesa_acessoria_w := coalesce(dividir(vl_despesa_acessoria_w, qt_vencimentos_w),0);
	
	if (vl_despesa_acessoria_w > 0) then
		update	ordem_compra_venc
		set		vl_vencimento 	= vl_vencimento + vl_despesa_acessoria_w
		where	nr_ordem_compra	= nr_ordem_compra_p;
	end if;
	
	select	coalesce(sum(vl_vencimento),0)
	into STRICT	vl_vencimento_w
	from	ordem_compra_venc
	where	nr_ordem_compra	= nr_ordem_compra_p;

	select	round((coalesce(sum(obter_valor_liquido_ordem(nr_ordem_compra)),0))::numeric,2)
	into STRICT	vl_total_ordem_w
	from	ordem_compra
	where	nr_ordem_compra = nr_ordem_compra_p;

	if (ie_juros_negociado_oc_w = 'S') and (pr_juros_negociado_w > 0) then
		vl_total_ordem_w	:= 	vl_total_ordem_w  + dividir((vl_total_ordem_w * pr_juros_negociado_w),100);
	end if;

	if (vl_total_ordem_w > vl_vencimento_w) then
		update	ordem_compra_venc
		set	vl_vencimento 	= vl_vencimento + (vl_total_ordem_w - vl_vencimento_w)
		where	nr_ordem_compra	= nr_ordem_compra_p
		and	nr_item_oc_venc	= nr_item_oc_venc_w;
	elsif (vl_vencimento_w > vl_total_ordem_w) then
		update	ordem_compra_venc
		set	vl_vencimento 	= vl_vencimento - (vl_vencimento_w - vl_total_ordem_w)
		where	nr_ordem_compra	= nr_ordem_compra_p
		and	nr_item_oc_venc	= nr_item_oc_venc_w;
	end if;

	delete	from ordem_compra_venc
	where	nr_ordem_compra	= nr_ordem_compra_p
	and	vl_vencimento = 0;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_ordem_compra_venc ( nr_ordem_compra_p bigint, nm_usuario_p text) FROM PUBLIC;

