-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_exame_realizado_bp_js ( nr_pasta_p bigint, nr_seq_san_p bigint, nr_seq_exame_p bigint, nr_seq_lote_p bigint, nr_seq_doacao_p bigint, nr_seq_exame_lote_p bigint, dt_liberacao_p timestamp, cd_pessoa_fisica_p text, ie_consiste_troca_tp_sangue_p text, ie_cons_tipagem_reversa_p text, ds_resultado_p text, ds_justificativa_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ds_msg_exame_p INOUT text, ds_erro_p INOUT text, ie_foca_campo_p INOUT text) AS $body$
DECLARE

		
/*	nr_pasta_p
	3 - Transfusao
	4 - Reserva
	11 - Exames	*/
ie_cons_troca_tp_sangue_w	varchar(1);
ie_restringe_cons_estab_w	varchar(1);
nr_seq_exame_rh_w		bigint;
nr_seq_exame_tipo_w		bigint;
ie_tipagem_reversa_w		varchar(1);
cd_estab_san_exame_w		smallint;
ds_restricao_san_exame_w	varchar(255);
ie_exibe_menssagem_exame_w	varchar(255);
ie_avisar_registrar_coleta_w	varchar(1);
ie_primeiro_exame_w		varchar(1);


BEGIN

ie_foca_campo_p := 'N';

if (ie_consiste_troca_tp_sangue_p = 'S') then
	begin
	select	max(nr_seq_exame_rh),
		max(nr_seq_exame_tipo)
	into STRICT	nr_seq_exame_rh_w,
		nr_seq_exame_tipo_w
	from	san_parametro
	where	cd_estabelecimento = cd_estabelecimento_p;

	if	((nr_seq_exame_rh_w = nr_seq_exame_p) or (nr_seq_exame_tipo_w = nr_seq_exame_p)) then
		begin
		/* Hemoterapia - Parametro 112 - Obrigar justificativa ao alterar o Fator RH e Tipo de Sangue do paciente */

		ie_cons_troca_tp_sangue_w := obter_param_usuario(450, 112, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_cons_troca_tp_sangue_w);

		if (ie_cons_troca_tp_sangue_w = 'S') then
			begin
			ds_erro_p	:= consistir_troca_tipo_sangue(
					nr_seq_san_p,
					nr_seq_exame_p,
					nr_pasta_p,
					ds_resultado_p,
					cd_estabelecimento_p,
					ds_justificativa_p);
			if (ds_erro_p IS NOT NULL AND ds_erro_p::text <> '') or (ds_erro_p <> '') then
				ie_foca_campo_p := 'S';
			end if;
			end;
		end if;
		end;
	end if;
	end;
end if;

if (coalesce(ds_erro_p::text, '') = '') and (ie_cons_tipagem_reversa_p = 'S') then
	begin
	ie_tipagem_reversa_w	:= san_consistir_tipagem_reversa(
					nr_seq_exame_lote_p,
					nr_seq_exame_p,
					ds_resultado_p,
					nm_usuario_p);

	if (ie_tipagem_reversa_w = 'S') then
		ds_erro_p	:= obter_texto_tasy(74322, wheb_usuario_pck.get_nr_seq_idioma);
	end if;
	end;
end if;

if (coalesce(ds_erro_p::text, '') = '') and (dt_liberacao_p IS NOT NULL AND dt_liberacao_p::text <> '') then
	ds_erro_p	:= obter_texto_tasy(73413, wheb_usuario_pck.get_nr_seq_idioma);
end if;

if (coalesce(ds_erro_p::text, '') = '') then
	begin
	/* Hemoterapia - Parametro 74 - Ao filtrar os hemocomponentes, filtrar por estabelecimento */

	ie_restringe_cons_estab_w := obter_param_usuario(450, 74, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_restringe_cons_estab_w);

	if (ie_restringe_cons_estab_w = 'S') then
		begin
		select	coalesce(cd_estabelecimento, 0)
		into STRICT	cd_estab_san_exame_w
		from	san_exame
		where	nr_sequencia	= nr_seq_exame_p;

		if (cd_estab_san_exame_w > 0) and (cd_estab_san_exame_w <> cd_estabelecimento_p) then
			ds_erro_p	:= obter_texto_tasy(73446, wheb_usuario_pck.get_nr_seq_idioma);
		end if;
		end;
	end if;
	end;
end if;

if (coalesce(ds_erro_p::text, '') = '') then
	begin
	ds_restricao_san_exame_w	:= obter_restricao_san_exame(nr_seq_exame_p, nr_seq_lote_p);

	if (ds_restricao_san_exame_w <> 'S') then
		ds_erro_p	:= ds_restricao_san_exame_w;
	end if;
	end;
end if;

if (nr_pasta_p = 11) and (ds_resultado_p IS NOT NULL AND ds_resultado_p::text <> '') then
	begin
	ie_exibe_menssagem_exame_w	:= san_verif_result_exame_ant(
					cd_pessoa_fisica_p,
					ds_resultado_p,
					nr_seq_doacao_p,
					nr_seq_exame_p);

	if (ie_exibe_menssagem_exame_w = 'S') then
		ds_msg_exame_p	:= obter_texto_tasy(63427, wheb_usuario_pck.get_nr_seq_idioma);
	end if;
	end;
end if;

if (nr_pasta_p = 4) and (ds_resultado_p IS NOT NULL AND ds_resultado_p::text <> '') then
	/* Hemoterapia - Parametro 448 - Apresentar mensagem de aviso para registrar coleta ao informar resultado para o primeiro exame na reserva */

	ie_avisar_registrar_coleta_w := obter_param_usuario(450, 448, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_avisar_registrar_coleta_w);
	
	if (ie_avisar_registrar_coleta_w = 'S') then
		select	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END
			into STRICT	ie_primeiro_exame_w
		from	san_exame_realizado
		where	nr_seq_exame_lote = nr_seq_exame_lote_p
		and	(san_obter_result_exame(nr_seq_exame_lote, nr_seq_exame) IS NOT NULL AND (san_obter_result_exame(nr_seq_exame_lote, nr_seq_exame))::text <> '');
		
		if (ie_primeiro_exame_w = 'S') then
			ds_msg_exame_p	:= obter_texto_tasy(234258, wheb_usuario_pck.get_nr_seq_idioma);
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_exame_realizado_bp_js ( nr_pasta_p bigint, nr_seq_san_p bigint, nr_seq_exame_p bigint, nr_seq_lote_p bigint, nr_seq_doacao_p bigint, nr_seq_exame_lote_p bigint, dt_liberacao_p timestamp, cd_pessoa_fisica_p text, ie_consiste_troca_tp_sangue_p text, ie_cons_tipagem_reversa_p text, ds_resultado_p text, ds_justificativa_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ds_msg_exame_p INOUT text, ds_erro_p INOUT text, ie_foca_campo_p INOUT text) FROM PUBLIC;

