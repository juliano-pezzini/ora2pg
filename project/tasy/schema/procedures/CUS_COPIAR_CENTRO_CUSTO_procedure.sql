-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cus_copiar_centro_custo ( cd_estabelecimento_p bigint, nm_usuario_p text, cd_classif_result_p bigint, cd_unidade_medida_p text, atualizar_centro_p text, ie_origem_copia_p bigint default 1) AS $body$
DECLARE


cd_empresa_w      empresa.cd_empresa%type;
nr_seq_grupo_emp_w    grupo_empresa.nr_sequencia%type;
qt_registro_w      bigint;
cd_classificacao_w      classif_result.cd_classificacao%type;
ie_origem_copia_w      smallint;


c01 CURSOR FOR
SELECT  a.cd_centro_custo,
        a.ds_centro_custo,
        ie_tipo_custo,
        a.cd_estabelecimento
from    centro_custo a
where   a.cd_estabelecimento = cd_estabelecimento_p
and     a.ie_tipo = 'A'
and     a.ie_situacao = 'A'
and     not exists (SELECT 1
                    from   centro_controle x
                    where  x.cd_centro_controle = a.cd_centro_custo
                    and    x.cd_estabelecimento = cd_estabelecimento_p)
and   ie_origem_copia_w = 1

union

select  a.cd_centro_custo,
        a.ds_centro_custo,
        ie_tipo_custo,
        a.cd_estabelecimento
from    estabelecimento b,
        centro_custo a
where   a.cd_estabelecimento = b.cd_estabelecimento
and     a.ie_tipo = 'A'
and     a.ie_situacao = 'A'
and     b.cd_empresa = cd_empresa_w
and     not exists (select 1
                  from    centro_controle x
                  where   x.cd_centro_controle = a.cd_centro_custo
                  and     x.cd_estabelecimento = a.cd_estabelecimento)
and      ie_origem_copia_w = 2

union

select  a.cd_centro_custo,
        a.ds_centro_custo,
        ie_tipo_custo,
        a.cd_estabelecimento
from    grupo_empresa_v c,
        estabelecimento b,
        centro_custo a
where   a.cd_estabelecimento = b.cd_estabelecimento
and     a.ie_tipo = 'A'
and     a.ie_situacao = 'A'
and     b.cd_empresa = c.cd_empresa
and     c.nr_seq_grupo_empresa = nr_seq_grupo_emp_w
and     not exists (select 1
                  from    centro_controle x
                  where   x.cd_centro_controle = a.cd_centro_custo
                  and     x.cd_estabelecimento = a.cd_estabelecimento)
and   ie_origem_copia_w = 3;


vet01  c01%rowtype;

C02 CURSOR FOR
SELECT  a.cd_centro_custo,
        a.ds_centro_custo,
        ie_tipo_custo,
        a.cd_estabelecimento
from    centro_custo a
where   a.cd_estabelecimento  = cd_estabelecimento_p
and     a.ie_tipo    = 'A'
and     a.ie_situacao  = 'A'
and     not exists ( SELECT  1
                from  centro_controle x
                where  x.cd_centro_controle  = a.cd_centro_custo
                and  x.cd_estabelecimento  = cd_estabelecimento_p)
and   ie_origem_copia_w = 1
and   nr_seq_grupo_emp_w = 0

union

select  a.cd_centro_custo,
        a.ds_centro_custo,
        ie_tipo_custo,
        a.cd_estabelecimento
from    estabelecimento b,
        centro_custo a
where   a.cd_estabelecimento = b.cd_estabelecimento
and     a.ie_tipo    = 'A'
and    a.ie_situacao  = 'A'
and     b.cd_empresa = cd_empresa_w
and    not exists (  select  1
               from  centro_controle x
               where  x.cd_centro_controle  = a.cd_centro_custo
               and  x.cd_estabelecimento  = a.cd_estabelecimento)
and   ie_origem_copia_w = 2

union

select  a.cd_centro_custo,
        a.ds_centro_custo,
        ie_tipo_custo,
        a.cd_estabelecimento
from    grupo_empresa_v c,
        estabelecimento b,
        centro_custo a
where   a.cd_estabelecimento = b.cd_estabelecimento
and    a.ie_tipo    = 'A'
and    a.ie_situacao  = 'A'
and     b.cd_empresa = c.cd_empresa
and     c.nr_seq_grupo_empresa = nr_seq_grupo_emp_w
and    not exists (  select  1
      from  centro_controle x
      where  x.cd_centro_controle  = a.cd_centro_custo
      and  x.cd_estabelecimento  = a.cd_estabelecimento)
and   ie_origem_copia_w = 3;

vet02  c02%rowtype;


BEGIN
cd_empresa_w    := obter_empresa_estab(cd_estabelecimento_p);
nr_seq_grupo_emp_w  := holding_pck.get_grupo_emp_usuario(cd_empresa_w);
ie_origem_copia_w       := coalesce(ie_origem_copia_p, 1);
open c01;
loop
fetch c01 into
  vet01;
EXIT WHEN NOT FOUND; /* apply on c01 */
  begin
        cd_classificacao_w      := cd_classif_result_p;
    if (ie_origem_copia_w = 3) then
      begin
        select  cd_classificacao
        into STRICT  cd_classificacao_w
        from   classif_result
        where   cd_empresa =    obter_empresa_estab(vet01.cd_estabelecimento)
        and   cd_classif_global =  cd_classif_result_p;
        exception when others then
          cd_classificacao_w:=cd_classif_result_p;
      end;
    end if;
      insert into centro_controle(
        cd_centro_controle,
        cd_classif_result,
        cd_estabelecimento,
        cd_unidade_medida,
        ds_centro_controle,
        ie_centro_resultado,
        ie_situacao,
        ie_tipo_centro_controle,
        dt_atualizacao,
        nm_usuario,
        dt_atualizacao_nrec,
        nm_usuario_nrec)
      values ( vet01.cd_centro_custo,
        cd_classificacao_w,
        vet01.cd_estabelecimento,
        cd_unidade_medida_p,
        substr(vet01.ds_centro_custo,1,80),
        CASE WHEN coalesce(vet01.ie_tipo_custo,2)=2 THEN 'S' WHEN coalesce(vet01.ie_tipo_custo,2)=5 THEN 'S'  ELSE 'N' END ,
        'A',
        coalesce(vet01.ie_tipo_custo, 2),
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p);
    
  end;
end loop;
close c01;


if (atualizar_centro_p = 'S') then
  open C02;
  loop
  fetch C02 into
    vet02;
  EXIT WHEN NOT FOUND; /* apply on C02 */
    begin
      update   centro_controle
      set  ds_centro_controle   = substr(vet02.ds_centro_custo,1,80),
        ie_tipo_centro_controle  = coalesce(vet02.ie_tipo_custo, 2)
      where  cd_estabelecimento = vet02.cd_estabelecimento
      and  cd_centro_controle = vet02.cd_centro_custo;
    end;
  end loop;
  close C02;
end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cus_copiar_centro_custo ( cd_estabelecimento_p bigint, nm_usuario_p text, cd_classif_result_p bigint, cd_unidade_medida_p text, atualizar_centro_p text, ie_origem_copia_p bigint default 1) FROM PUBLIC;

