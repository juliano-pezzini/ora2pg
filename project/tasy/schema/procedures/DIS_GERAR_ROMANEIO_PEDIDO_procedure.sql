-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dis_gerar_romaneio_pedido ( nr_pedido_p bigint, nm_usuario_p text) AS $body$
DECLARE


ordem_w				smallint;
cd_material_w			integer;
cd_material_ww			integer;
qt_conv_compra_estoque_w		double precision;
qt_conv_compra_estoque_ww	double precision;
qt_conversao_w			double precision;
nr_sequencia_item_w		bigint;
nr_sequencia_entrega_w		bigint;
dt_prevista_entrega_w		timestamp;
qt_prevista_entrega_w		double precision;
nr_seq_romaneio_w			bigint;
nr_seq_romaneio_item_w		bigint;
ie_agrupa_romaneio_w		varchar(1);

qt_acumulado_w			double precision;
qt_gerar_w			double precision;
qt_gerar_ww			double precision;
qt_diferenca_w			double precision;

C01 CURSOR FOR
	SELECT	b.nr_sequencia,
		c.nr_sequencia,
		coalesce(b.ie_agrupa_romaneio,'S'),
		b.cd_material,
		c.dt_prevista_entrega,
		coalesce(sum(c.qt_prevista_entrega),0)
	from	dis_pedido a,
		dis_pedido_item b,
		dis_pedido_item_entrega c
	where	a.nr_sequencia = b.nr_seq_pedido
	and	b.nr_sequencia = c.nr_sequencia_item
	and	coalesce(b.nr_seq_motivo_cancel::text, '') = ''
	and	a.nr_sequencia = nr_pedido_p
	group by b.nr_sequencia,
		c.nr_sequencia,
		coalesce(b.ie_agrupa_romaneio,'S'),
		b.cd_material,
		c.dt_prevista_entrega
	order by b.nr_sequencia;

C02 CURSOR FOR
	SELECT	a.cd_material,
		coalesce(a.qt_conv_compra_estoque,1) qt_conv_compra_estoque,
		1 ordem
	from	material a
	where	a.cd_material = cd_material_w
	
union all

	SELECT	b.cd_material,
		coalesce(b.qt_conv_compra_estoque,1) qt_conv_compra_estoque,
		2 ordem
	from	material a,
		material b
	where	a.cd_material = cd_material_w
	and	b.cd_material = a.cd_material_generico
	and	a.cd_material <> b.cd_material
	and	b.ie_situacao = 'A'
	
union all

	select	b.cd_material,
		coalesce(b.qt_conv_compra_estoque,1) qt_conv_compra_estoque,
		3 ordem
	from	material a,
		material b
	where	a.cd_material = cd_material_w
	and	b.cd_material_generico = a.cd_material_generico
	and	a.cd_material <> b.cd_material
	and	b.cd_material <> a.cd_material_generico
	and	b.ie_situacao = 'A'
	order by qt_conv_compra_estoque asc, ordem;


BEGIN
open C01;
loop
fetch C01 into
	nr_sequencia_item_w,
	nr_sequencia_entrega_w,
	ie_agrupa_romaneio_w,
	cd_material_w,
	dt_prevista_entrega_w,
	qt_prevista_entrega_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	coalesce(a.qt_conv_compra_estoque,1)
	into STRICT	qt_conv_compra_estoque_w
	from	material a
	where	a.cd_material = cd_material_w;

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_romaneio_w
	from	dis_romaneio
	where	nr_seq_pedido = nr_pedido_p
	and	dt_prevista_entrega = dt_prevista_entrega_w;

	if (nr_seq_romaneio_w = 0) then
		begin
		select	nextval('dis_romaneio_seq')
		into STRICT	nr_seq_romaneio_w
		;

		insert into dis_romaneio(nr_sequencia,
			nr_seq_pedido,
			dt_prevista_entrega,
			dt_geracao,
			dt_atualizacao_nrec,
			dt_atualizacao,
			nm_usuario_nrec,
			nm_usuario)
		values (nr_seq_romaneio_w,
			nr_pedido_p,
			dt_prevista_entrega_w,
			clock_timestamp(),
			clock_timestamp(),
			clock_timestamp(),
			nm_usuario_p,
			nm_usuario_p);
		end;
	end if;

	qt_acumulado_w := 0;
	if (ie_agrupa_romaneio_w = 'S') then
		begin
		open C02;
		loop
		fetch C02 into
			cd_material_ww,
			qt_conv_compra_estoque_ww,
			ordem_w;
		exit when(C02%notfound) or (qt_acumulado_w >= qt_prevista_entrega_w);
			begin
			qt_conversao_w := dividir(qt_conv_compra_estoque_w,qt_conv_compra_estoque_ww);
			qt_gerar_w := (qt_prevista_entrega_w - qt_acumulado_w);
			qt_gerar_ww := dividir(qt_gerar_w,qt_conversao_w) /*Utilizando para tratar diferença*/
;
			qt_gerar_w := trunc(dividir(qt_gerar_w,qt_conversao_w));
			qt_gerar_ww	:= (qt_gerar_ww - qt_gerar_w) /*Utilizando para tratar diferença*/
;

			if (qt_gerar_w >= 1) then
				begin
				select	coalesce(max(nr_sequencia),0)
				into STRICT	nr_seq_romaneio_item_w
				from	dis_romaneio_item
				where	nr_seq_romaneio = nr_seq_romaneio_w
				and	nr_seq_pedido = nr_pedido_p
				and	cd_material = cd_material_ww
				and	nr_sequencia_item = nr_sequencia_item_w
				and	nr_sequencia_entrega = nr_sequencia_entrega_w
				and	coalesce(nr_seq_motivo_cancel::text, '') = '';

				if (nr_seq_romaneio_item_w > 0) then
					update	dis_romaneio_item
					set	qt_material = (qt_material + qt_gerar_w),
						nm_usuario = nm_usuario_p,
						dt_atualizacao = clock_timestamp()
					where	nr_sequencia = nr_seq_romaneio_item_w;
				else
					begin
					select	nextval('dis_romaneio_item_seq')
					into STRICT	nr_seq_romaneio_item_w
					;

					insert into dis_romaneio_item(nr_sequencia,
						nr_seq_romaneio,
						nr_seq_pedido,
						nr_sequencia_item,
						nr_sequencia_entrega,
						cd_material,
						qt_material,
						dt_atualizacao_nrec,
						dt_atualizacao,
						nm_usuario_nrec,
						nm_usuario)
					values (nr_seq_romaneio_item_w,
						nr_seq_romaneio_w,
						nr_pedido_p,
						nr_sequencia_item_w,
						nr_sequencia_entrega_w,
						cd_material_ww,
						qt_gerar_w,
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_p,
						nm_usuario_p);
					end;
				end if;
				qt_acumulado_w := (qt_acumulado_w + (qt_gerar_w * qt_conversao_w));
				end;
			end if;
			end;
		end loop;
		close C02;
		qt_diferenca_w := (qt_prevista_entrega_w - qt_acumulado_w);
		if (qt_diferenca_w > 0) then
			update	dis_romaneio_item
			set	qt_material = (qt_material + qt_gerar_ww),
				nm_usuario = nm_usuario_p,
				dt_atualizacao = clock_timestamp()
			where nr_sequencia = nr_seq_romaneio_item_w;
		end if;
		end;
	else
		begin
		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_romaneio_item_w
		from	dis_romaneio_item
		where	nr_seq_romaneio = nr_seq_romaneio_w
		and	nr_seq_pedido = nr_pedido_p
		and	cd_material = cd_material_w
		and	nr_sequencia_item = nr_sequencia_item_w
		and	nr_sequencia_entrega = nr_sequencia_entrega_w
		and	coalesce(nr_seq_motivo_cancel::text, '') = '';

		if (nr_seq_romaneio_item_w > 0) then
			update	dis_romaneio_item
			set	qt_material = (qt_material + qt_prevista_entrega_w),
				nm_usuario = nm_usuario_p,
				dt_atualizacao = clock_timestamp()
			where	nr_sequencia = nr_seq_romaneio_item_w;
		else
			insert into dis_romaneio_item(nr_sequencia,
				nr_seq_romaneio,
				nr_seq_pedido,
				nr_sequencia_item,
				nr_sequencia_entrega,
				cd_material,
				qt_material,
				dt_atualizacao_nrec,
				dt_atualizacao,
				nm_usuario_nrec,
				nm_usuario)
			values (nextval('dis_romaneio_item_seq'),
				nr_seq_romaneio_w,
				nr_pedido_p,
				nr_sequencia_item_w,
				nr_sequencia_entrega_w,
				cd_material_w,
				qt_prevista_entrega_w,
				clock_timestamp(),
				clock_timestamp(),
				nm_usuario_p,
				nm_usuario_p);
		end if;
		end;
	end if;
	commit;
	end;
end loop;
close C01;

update	dis_pedido
set	dt_geracao_romaneio = clock_timestamp()
where	nr_sequencia = nr_pedido_p;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dis_gerar_romaneio_pedido ( nr_pedido_p bigint, nm_usuario_p text) FROM PUBLIC;

