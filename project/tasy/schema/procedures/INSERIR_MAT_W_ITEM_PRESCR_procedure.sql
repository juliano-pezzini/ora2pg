-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_mat_w_item_prescr ( cd_pessoa_fisica_p text, nr_atendimento_p bigint, nr_seq_item_p bigint, nm_usuario_p text, ie_origem_p bigint) AS $body$
DECLARE

 
/* 
Utilizado no AtePac_P3 
 
Ie_origem_p 
1- Procedimento NÃ£o-Laboratorial 
2- Procedimento Laboratorial 
*/
 
 
cd_procedimento_w	bigint;
ie_origem_proced_w	integer;
cd_procedimento_ww	bigint := null;
ie_origem_proced_ww	integer := null;
nr_proc_interno_w	bigint := null;
cd_pessoa_fisica_w	bigint;
qt_idade_pac_w		double precision;
qt_idade_pac_ww		real;
cd_setor_atendimento_w integer;
cd_material_w		integer;
cd_unidade_medida_w	varchar(30);
ie_mostrar_item_w	varchar(30);
qt_dose_w		double precision;
nr_sequencia_w		bigint;
cont_w			bigint;
ie_duplicar_w		varchar(30);
nr_seq_item_w		bigint;
qt_inseridos_w		integer := 0;
cd_medico_ww		varchar(10);
	
C01 CURSOR FOR 
SELECT	a.nr_sequencia, 
	a.cd_material, 
	a.cd_unidade_medida, 
	a.qt_dose, 
	'S' 
from	procedimento_mat_prescr a 
where	a.cd_procedimento	= cd_procedimento_w 
and	a.ie_origem_proced	= ie_origem_proced_w 
and 	not exists (	 
	SELECT	1 
	from	W_item_prescr k 
	where	coalesce(k.nr_prescricao::text, '') = '' 
	and	k.ie_origem_inf('PI', 'P') 
	and 	nm_usuario	= nm_usuario_p 
	and	a.cd_material	= k.cd_material 
	and 	k.cd_protocolo in (cd_procedimento_w, cd_procedimento_ww, nr_proc_interno_w)) 
and	((cd_setor_atendimento_w = a.cd_setor_atendimento) or (coalesce(a.cd_setor_atendimento::text, '') = '')) 
and	(((coalesce(qt_idade_pac_ww::text, '') = '') or (coalesce(a.qt_idade_min::text, '') = '' and coalesce(a.qt_idade_max::text, '') = '')) or 
	 ((qt_idade_pac_ww IS NOT NULL AND qt_idade_pac_ww::text <> '') and (qt_idade_pac_ww between coalesce(a.qt_idade_min,qt_idade_pac_w) and coalesce(a.qt_idade_max,qt_idade_pac_w)))) 
order by coalesce(a.cd_setor_atendimento,999);

C02 CURSOR FOR 
SELECT	a.nr_sequencia, 
	a.cd_material, 
	a.cd_unidade_medida, 
	a.qt_dose, 
	coalesce(a.ie_mostrar_item,'S'), 
	coalesce(a.ie_duplicar,'S') 
from	proc_int_mat_prescr a 
where	a.nr_seq_proc_interno	= nr_proc_interno_w 
and	Obter_se_mat_setor(a.nr_sequencia, cd_setor_atendimento_w, obter_convenio_atendimento(nr_atendimento_p), obter_tipo_atendimento(nr_atendimento_p)) = 'S' 
and	coalesce(a.ie_situacao,'A')	= 'A' 
and	((coalesce(a.cd_medico::text, '') = '') or (a.cd_medico = cd_medico_ww)) 
and	((coalesce(a.cd_convenio_exc::text, '') = '') or (a.cd_convenio_exc <> obter_convenio_atendimento(nr_atendimento_p))) 
and 	not exists (	 
	SELECT	1 
	from	W_item_prescr k 
	where	coalesce(k.nr_prescricao::text, '') = '' 
	and	k.ie_origem_inf in ('PI', 'P') 
	and	k.cd_material 	= a.cd_material	 
	and 	nm_usuario	= nm_usuario_p 
	and 	k.cd_protocolo in (cd_procedimento_w, cd_procedimento_ww, nr_proc_interno_w)) 
and	((cd_setor_atendimento_w = a.cd_setor_atendimento) or (coalesce(a.cd_setor_atendimento::text, '') = '')) 
and		((coalesce(a.cd_estabelecimento::text, '') = '') or (a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento)) 
and	coalesce(qt_idade_pac_w,1) between coalesce(obter_idade_mat_int_prescr(a.nr_sequencia,'MIN'),0) and coalesce(obter_idade_mat_int_prescr(a.nr_sequencia,'MAX'),9999999) 
and	coalesce(obter_sinal_vital(nr_atendimento_p,'PESO'),0) between coalesce(a.qt_peso_min,0) and coalesce(a.qt_peso_max,999) 
order by coalesce(a.cd_setor_atendimento,999);


BEGIN 
 
select	Obter_Pf_Usuario(nm_usuario_p,'C') 
into STRICT		cd_medico_ww
;
 
if (ie_origem_p = 1) then 
	select cd_procedimento, 
		ie_origem_proced, 
		nr_proc_interno 
	into STRICT	cd_procedimento_w, 
		ie_origem_proced_w, 
		nr_proc_interno_w 
	from 	procedimento_rotina 
	where 	nr_sequencia = nr_seq_item_p;
else 
	select b.cd_procedimento, 
		b.ie_origem_proced, 
		null nr_proc_interno 
	into STRICT	cd_procedimento_w, 
		ie_origem_proced_w, 
		nr_proc_interno_w 
	from 	exame_lab_rotina a, 
		exame_laboratorio b 
	where 	a.nr_sequencia = nr_seq_item_p 
	and 	a.nr_seq_exame = b.nr_seq_exame;
end if;
 
If (nr_proc_interno_w IS NOT NULL AND nr_proc_interno_w::text <> '') then 
	select a.cd_procedimento, 
			a.ie_origem_proced 
	into STRICT 	cd_procedimento_ww, 
			ie_origem_proced_ww 
	from 	proc_interno a 
	where 	a.nr_sequencia = nr_proc_interno_w;
end if;	
 
cd_pessoa_fisica_w	:= cd_pessoa_fisica_p;
cd_setor_atendimento_w	:= coalesce(obter_unidade_atendimento(NR_ATENDIMENTO_P,'IA','CS'), obter_unidade_atendimento(NR_ATENDIMENTO_P,'A','CS'));
 
qt_idade_pac_ww		:= obter_idade_pf(cd_pessoa_fisica_w, clock_timestamp(), 'A');
 
begin 
select	max(obter_idade(b.dt_nascimento,coalesce(b.dt_obito,clock_timestamp()),'DIA')) 
into STRICT	qt_idade_pac_w 
from	pessoa_fisica b 
where	b.cd_pessoa_fisica	= cd_pessoa_fisica_w;
exception 
when others then 
	qt_idade_pac_w	:= 0;
end;
 
delete from w_item_prescr 
where	coalesce(nr_prescricao::text, '') = '' 
and	nm_usuario = nm_usuario_p 
and 	cd_protocolo in (cd_procedimento_w, cd_procedimento_ww, nr_proc_interno_w) 
and 	nr_seq_item in (SELECT nr_sequencia 
			from	procedimento_mat_prescr a 
			where	a.cd_procedimento	in (cd_procedimento_w, cd_procedimento_ww) 
			and	a.ie_origem_proced	in (ie_origem_proced_w, ie_origem_proced_ww) 
			and	((cd_setor_atendimento_w = a.cd_setor_atendimento) or (coalesce(a.cd_setor_atendimento::text, '') = '')) 
			and	(((coalesce(qt_idade_pac_ww::text, '') = '') or (coalesce(a.qt_idade_min::text, '') = '' and coalesce(a.qt_idade_max::text, '') = '')) or 
				 ((qt_idade_pac_ww IS NOT NULL AND qt_idade_pac_ww::text <> '') and (qt_idade_pac_ww between coalesce(a.qt_idade_min,qt_idade_pac_w) and coalesce(a.qt_idade_max,qt_idade_pac_w)))) 
			
union all
 
			SELECT 	a.nr_sequencia 
			from	proc_int_mat_prescr a 
			where	a.nr_seq_proc_interno	= nr_proc_interno_w 
			and	Obter_se_mat_setor(a.nr_sequencia, cd_setor_atendimento_w, null, obter_tipo_atendimento(nr_atendimento_p)) = 'S' 
			and	((cd_setor_atendimento_w = a.cd_setor_atendimento) or (coalesce(a.cd_setor_atendimento::text, '') = '')) 
			and	coalesce(qt_idade_pac_w,1) between coalesce(obter_idade_mat_int_prescr(a.nr_sequencia,'MIN'),0) and coalesce(obter_idade_mat_int_prescr(a.nr_sequencia,'MAX'),9999999) 
			and	coalesce(obter_sinal_vital(nr_atendimento_p,'PESO'),0) between coalesce(a.qt_peso_min,0) and coalesce(a.qt_peso_max,999)) 
and 	ie_origem_inf in ('P', 'PI');
commit;
 
qt_inseridos_w	:= 0;
 
open C02;
loop 
fetch C02 into	 
	nr_seq_item_w, 
	cd_material_w, 
	cd_unidade_medida_w, 
	qt_dose_w, 
	ie_mostrar_item_w, 
	ie_duplicar_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin	 
	 
	if (ie_duplicar_w = 'N') then 
		select	count(*) 
		into STRICT	cont_w 
		from	W_Item_Prescr 
		where	cd_material	= cd_material_w 
		and	coalesce(nr_prescricao::text, '') = '' 
		and	nm_usuario = nm_usuario_p;
		 
		if (cont_w = 0) then 
			ie_duplicar_w	:= 'S';
		end if;
	end if;
	 
	select 	nextval('w_item_prescr_seq') 
	into STRICT	nr_sequencia_w 
	;
	 
	insert into W_Item_Prescr( 
		nr_sequencia, 
		dt_atualizacao,     
		nm_usuario,       
		nr_prescricao,      
		cd_protocolo,       
		nr_seq_item,       
		qt_dose, 
		cd_material, 
		ie_origem_inf, 
		nr_seq_solucao, 
		cd_unidade_medida, 
		ie_mostrar_item, 
		ie_excluido) 
	Values ( 
		nr_sequencia_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		null, 
		nr_proc_interno_w, 
		nr_seq_item_w, 
		qt_dose_w, 
		cd_material_w, 
		'PI', 
		nr_seq_item_p, 
		cd_unidade_medida_w, 
		ie_mostrar_item_w, 
		CASE WHEN ie_duplicar_w='S' THEN 'N'  ELSE 'S' END );
		 
		qt_inseridos_w	:= qt_inseridos_w + 1;
	end;
end loop;
close C02;
 
commit;
 
if (qt_inseridos_w = 0 ) then 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_item_w, 
		cd_material_w, 
		cd_unidade_medida_w, 
		qt_dose_w, 
		ie_duplicar_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin	 
 
		if (ie_duplicar_w = 'N') then 
			select	count(*) 
			into STRICT	cont_w 
			from	W_Item_Prescr 
			where	cd_material	= cd_material_w 
			and	coalesce(nr_prescricao::text, '') = '' 
			and	nm_usuario	= nm_usuario_p;
			 
			if (cont_w = 0) then 
				ie_duplicar_w	:= 'S';
			end if;
		end if;	
 
		select 	nextval('w_item_prescr_seq') 
		into STRICT	nr_sequencia_w 
		;
		 
		insert into W_Item_Prescr( 
			nr_sequencia, 
			dt_atualizacao,     
			nm_usuario,       
			nr_prescricao,      
			cd_protocolo,       
			nr_seq_item,       
			qt_dose, 
			cd_material, 
			ie_origem_inf, 
			nr_seq_solucao, 
			cd_unidade_medida, 
			ie_excluido) 
		Values ( 
			nr_sequencia_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			null, 
			cd_procedimento_w, 
			nr_seq_item_w, 
			qt_dose_w, 
			cd_material_w, 
			'P', 
			nr_seq_item_p, 
			cd_unidade_medida_w, 
			CASE WHEN ie_duplicar_w='S' THEN 'N'  ELSE 'S' END );
		end;
	end loop;
	close C01;
 
	commit;
	if (cd_procedimento_ww IS NOT NULL AND cd_procedimento_ww::text <> '') then 
		cd_procedimento_w	:= cd_procedimento_ww;
		ie_origem_proced_w	:= ie_origem_proced_ww;
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_item_w, 
			cd_material_w, 
			cd_unidade_medida_w, 
			qt_dose_w, 
			ie_duplicar_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			if (ie_duplicar_w = 'N') then 
				select	count(*) 
				into STRICT	cont_w 
				from	W_Item_Prescr 
				where	cd_material	= cd_material_w 
				and	coalesce(nr_prescricao::text, '') = '' 
				and	nm_usuario	= nm_usuario_p;
				 
				if (cont_w = 0) then 
					ie_duplicar_w	:= 'S';
				end if;
			end if;	
 
			select 	nextval('w_item_prescr_seq') 
			into STRICT	nr_sequencia_w 
			;
			 
			insert into W_Item_Prescr( 
				nr_sequencia, 
				dt_atualizacao,     
				nm_usuario,       
				nr_prescricao,      
				cd_protocolo,       
				nr_seq_item,       
				qt_dose, 
				cd_material, 
				ie_origem_inf, 
				nr_seq_solucao, 
				cd_unidade_medida, 
				ie_excluido) 
			Values ( 
				nr_sequencia_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				null, 
				cd_procedimento_w, 
				nr_seq_item_w, 
				qt_dose_w, 
				cd_material_w, 
				'P', 
				nr_seq_item_p, 
				cd_unidade_medida_w, 
				CASE WHEN ie_duplicar_w='S' THEN 'N'  ELSE 'S' END );
			 
			end;
			 
		end loop;
		close C01;
		 
		commit;
	end if;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_mat_w_item_prescr ( cd_pessoa_fisica_p text, nr_atendimento_p bigint, nr_seq_item_p bigint, nm_usuario_p text, ie_origem_p bigint) FROM PUBLIC;

