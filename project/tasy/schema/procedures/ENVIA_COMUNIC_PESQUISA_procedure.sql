-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE envia_comunic_pesquisa ( nr_seq_bo_p bigint, dt_avaliacao_p timestamp, dt_liberacao_p timestamp, nr_seq_tipo_avaliacao_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, nr_sequencia_p bigint) AS $body$
DECLARE

 
ds_titulo_w		varchar(255);	
ds_comunicacao_w		varchar(4000);	
nm_usuario_w		varchar(255);	
cd_setor_atend_w		integer;	
ds_tipo_w		varchar(255);	
nm_pessoa_fisica_w	varchar(255);
nr_seq_classif_w		bigint;
nr_seq_regra_w		bigint;
nm_usuario_resp_w		varchar(255);	
nr_seq_avaliacao_w	bigint:= nr_seq_tipo_avaliacao_p;
ie_usuario_w		varchar(5);
nr_seq_apres_w		bigint;
dt_liberacao_w		timestamp;
dt_avaliacao_w		timestamp;
nr_sequencia_w		bigint;
ie_comunic_int_w		varchar(01);
ie_email_w		varchar(01);
ds_usuario_destino_w	varchar(2000);
nr_seq_classif_ci_w		SAC_REGRA_ENVIO_COMUNIC.nr_seq_classif_ci%type;

/*Campos EMAIL*/
 
lista_usuario_w		varchar(2000);
tam_lista_w		bigint;
ie_pos_virgula_w		smallint;
ds_email_usuario_w		varchar(255);
ds_lista_email_usuario_w	varchar(2000);

 
C01 CURSOR FOR 
	SELECT	nr_sequencia, 
		ds_titulo, 
		ds_comunicado, 
		ie_comunicacao_interna, 
		ie_email, 
		coalesce(nr_seq_classif_ci,0) 
	from	sac_regra_envio_comunic 
	where	ie_evento 	= 4 
	and	ie_situacao 	= 'A';

C02 CURSOR FOR 
	SELECT	ie_usuario, 
		ds_usuario_destino 
	from	sac_usuarios_comunicacao 
	where	substr(sac_tipo_evento_regra(nr_seq_regra_w),1,10) = 4;	
	 

BEGIN 
select 	obter_nome_pf(cd_pessoa_fisica_p) 
into STRICT	nm_pessoa_fisica_w
;
 
dt_liberacao_w	:= 	dt_liberacao_p;
dt_avaliacao_w	:=	dt_avaliacao_p;
 
open C01;
loop 
fetch C01 into	 
	nr_seq_regra_w, 
	ds_titulo_w, 
	ds_comunicacao_w, 
	ie_comunic_int_w, 
	ie_email_w, 
	nr_seq_classif_ci_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	select cd_setor_atendimento, 
		nr_seq_apres, 
		nr_sequencia 
	into STRICT	cd_setor_atend_w, 
		nr_seq_apres_w, 
		nr_sequencia_w 
	from	sac_pesquisa 
	where	nr_sequencia = nr_sequencia_p;
	 
 
	open C02;
	loop 
	fetch C02 into	 
		ie_usuario_w, 
		ds_usuario_destino_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		select cd_setor_atendimento, 
			nr_seq_apres 
		into STRICT	cd_setor_atend_w, 
			nr_seq_apres_w 
		from	sac_pesquisa 
		where	nr_sequencia = nr_sequencia_p;
		 
		if (ie_usuario_w = 'RS') then 
			begin 
			select 	coalesce(substr(obter_usuario_pessoa(cd_pessoa_resp),1,15),'X') 
			into STRICT	nm_usuario_resp_w 
			from	setor_atendimento 
			where	cd_setor_atendimento = cd_setor_atend_w;	
			exception 
			when others then 
				nm_usuario_resp_w := '';
			end;
		 
			if (coalesce(nm_usuario_resp_w,'X') <> 'X') then 
				nm_usuario_w := substr(nm_usuario_resp_w || ', ' || nm_usuario_w,1,2000);
			end if;	
			if (coalesce(ds_usuario_destino_w,'X') <> 'X') then 
				nm_usuario_w := substr(ds_usuario_destino_w || ', ' || nm_usuario_w,1,2000);
			end if;	
		end if;	
		end;
	end loop;
	close C02;	
	 
	if (nr_seq_avaliacao_w > 0) then 
		select ds_tipo 
		into STRICT	ds_tipo_w 
		from	med_tipo_avaliacao 
		where	nr_sequencia = NR_SEQ_TIPO_AVALIACAO_p;
			 
	end if;
	 
	ds_comunicacao_w	:= substr(replace_macro(ds_comunicacao_w, '@nr_boletim', nr_seq_bo_p),1,32000);
	ds_comunicacao_w	:= substr(replace_macro(ds_comunicacao_w, '@tipo', ds_tipo_w),1,32000);
	ds_comunicacao_w	:= substr(replace_macro(ds_comunicacao_w, '@pessoa', nm_pessoa_fisica_w),1,32000);
	ds_comunicacao_w	:= substr(replace_macro(ds_comunicacao_w, '@dt_liberacao', to_char(dt_liberacao_w,'dd/mm/yyyy hh24:mi:ss')),1,32000);
	ds_comunicacao_w	:= substr(replace_macro(ds_comunicacao_w, '@dt_avaliacao', to_char(dt_avaliacao_w,'dd/mm/yyyy hh24:mi:ss')),1,32000);
	ds_comunicacao_w	:= substr(replace_macro(ds_comunicacao_w, '@seq_apres', nr_sequencia_w),1,32000);
	 
	if (ie_comunic_int_w = 'S') then 
 
		if (coalesce(nr_seq_classif_ci_w,0) <> 0) then 
			nr_seq_classif_w	:= nr_seq_classif_ci_w;
		else 
		 
			select	obter_classif_comunic('F') 
			into STRICT	nr_seq_classif_w 
			;
 
		end if;
 
		insert into comunic_interna(dt_comunicado, 
				ds_titulo, 
				ds_comunicado, 
				nm_usuario, 
				dt_atualizacao, 
				ie_geral, 
				nm_usuario_destino, 
				cd_perfil, 
				nr_sequencia, 
				ie_gerencial, 
				nr_seq_classif, 
				ds_perfil_adicional, 
				cd_setor_destino, 
				cd_estab_destino, 
				ds_setor_adicional, 
				dt_liberacao, 
				ds_grupo, 
				nm_usuario_oculto) 
			values (clock_timestamp(), 
				ds_titulo_w, 
				ds_comunicacao_w, 
				nm_usuario_p, 
				clock_timestamp(), 
				'N', 
				nm_usuario_w, 
				null, 
				nextval('comunic_interna_seq'), 
				'N', 
				nr_seq_classif_w, 
				'', 
				null, 
				'', 
				'', 
				clock_timestamp(), 
				'', 
				'');
	end if;
	 
	if (ie_email_w = 'S') then 
		begin 
		lista_usuario_w := substr(nm_usuario_w,1,2000);
 
		while(lista_usuario_w IS NOT NULL AND lista_usuario_w::text <> '') and (trim(both lista_usuario_w) <> ',') loop 
			tam_lista_w		:= length(lista_usuario_w);
			ie_pos_virgula_w	:= position(',' in lista_usuario_w);
 
			if (ie_pos_virgula_w <> 0) then 
				nm_usuario_w	:= substr(lista_usuario_w,1,(ie_pos_virgula_w - 1));
				lista_usuario_w	:= trim(both substr(lista_usuario_w,(ie_pos_virgula_w + 1), tam_lista_w));
 
				select	max(ds_email) 
				into STRICT	ds_email_usuario_w 
				from	usuario 
				where	nm_usuario = nm_usuario_w;
 
				if (coalesce(ds_email_usuario_w,'X') <> 'X') then 
					begin 
					ds_lista_email_usuario_w	:= substr(ds_lista_email_usuario_w||ds_email_usuario_w||',',1,2000);
					end;
				end if;
			else 
				lista_usuario_w	:= null;
			end if;
		end loop;
 
		if (coalesce(ds_lista_email_usuario_w,'X') <> 'X') then 
			ds_lista_email_usuario_w := replace(ds_lista_email_usuario_w,',',';');
			CALL enviar_email(	ds_titulo_w, 
					ds_comunicacao_w, 
					null, -- E-mail cadastrado na regra. 
					ds_lista_email_usuario_w, 
					nm_usuario_p, 
					'M');
		end if;
	end;
	end if;
end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE envia_comunic_pesquisa ( nr_seq_bo_p bigint, dt_avaliacao_p timestamp, dt_liberacao_p timestamp, nr_seq_tipo_avaliacao_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, nr_sequencia_p bigint) FROM PUBLIC;

