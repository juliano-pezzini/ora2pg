-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_consiste_transf_reserva ( nr_seq_trans_res_p bigint, ie_tipo_p text, sql_item_p text, nm_usuario_p text, ie_data_utilizacao_p text, ie_atualizar_reg_p text, ds_erro_p INOUT text, ie_atualiza_just_p text default 'N', ds_justificativa_p text default null) AS $body$
DECLARE


cd_pessoa_fisica_w	varchar(10);
ie_fator_rh_w		varchar(1);

ie_tipo_sangue_w	varchar(2);
IE_TIPO_ABN_w		varchar(1);
IE_TIPO_ABP_w		varchar(1);
IE_TIPO_AN_w		varchar(1);
IE_TIPO_AP_w		varchar(1);
IE_TIPO_BN_w		varchar(1);
IE_TIPO_BP_w		varchar(1);
IE_TIPO_ON_w		varchar(1);
IE_TIPO_OP_w		varchar(1);

ie_fator_rh_recep_w	varchar(1);
ie_tipo_sangue_recep_w	varchar(2);

ie_fator_rh_hem_w	varchar(1);
ie_tipo_sangue_hem_w	varchar(2);

nr_seq_derivado_w	bigint;
ds_derivado_w		san_derivado.ds_derivado%type;
ds_comando_w		varchar(2000);
sql_item_w		varchar(2000);
aspas			varchar(1);
qt_volume_w		bigint;
qt_solicitada_w		san_reserva_item.qt_solicitada%type;
qt_hemo_w		bigint;
ie_consiste_prescr_w	varchar(1);
nr_seq_prod_w		bigint;
ie_permite_tipo_incomp_w varchar(1);
ds_lista_w		varchar(2000);
nr_seq_producao_w	varchar(255);
nr_pos_virgula_w	bigint;
ie_regra_material_w	varchar(1);
ie_aliquotado_w		varchar(1);
ds_justificativa_w	varchar(255);
ie_classif_w		varchar(1);
ie_aferese_w		san_producao.ie_aferese%type;
ie_pool_w		san_producao.ie_pool%type;
ie_irradiado_w		san_producao.ie_irradiado%type;
ie_lavado_w		san_producao.ie_lavado%type;
ie_filtrado_w		san_producao.ie_filtrado%type;
ie_aliquotado_2_w	san_producao.ie_aliquotado%type;
ie_reserva_aferese_w	san_reserva_item.ie_aferese%type;
ie_reserva_pool_w	san_reserva_item.ie_pool%type;
ie_reserva_irradiado_w	san_reserva_item.ie_irradiado%type;
ie_reserva_lavado_w	san_reserva_item.ie_lavado%type;
ie_reserva_filtrado_w	san_reserva_item.ie_filtrado%type;
ie_reserva_aliquotado_w	san_reserva_item.ie_aliquotado%type;
qt_vol_solicitado_w	san_reserva_item.qt_volume%type;
qt_vol_atendido_w	san_producao.qt_volume%type;

c01 CURSOR FOR
SELECT	a.ie_fator_rh,
	a.ie_tipo_sangue,
	a.nr_seq_derivado,
	substr(OBTER_DESC_SAN_DERIVADO(a.nr_seq_derivado),1,50),
	coalesce(qt_vol_transf,qt_volume),
	a.nr_sequencia,
	coalesce(a.ie_aferese, 'N'),
	coalesce(a.ie_pool, 'N'),
	coalesce(qt_volume, 0),
	coalesce(ie_irradiado, 'N'),
	coalesce(ie_lavado, 'N'),
	coalesce(ie_filtrado, 'N'),
	coalesce(ie_aliquotado, 'N')
from 	san_producao a
where	obter_se_contido(a.nr_sequencia, sql_item_p) = 'S';

c02 CURSOR FOR
SELECT	coalesce(ie_aferese, 'N') ie_aferese,
	coalesce(ie_pool, 'N') ie_pool,
	coalesce(ie_irradiado, 'N'),
	coalesce(ie_lavado, 'N'),
	coalesce(ie_filtrado, 'N'),
	coalesce(ie_aliquotado, 'N')
from	san_reserva_item
where	nr_seq_reserva = nr_seq_trans_res_p
and	nr_seq_derivado = nr_seq_derivado_w;


BEGIN

if (ie_tipo_p = 'R') then

	select	max(a.cd_pessoa_fisica),
		coalesce(max(ie_fator_rh),null),
		coalesce(max(ie_tipo_sangue),null)
	into STRICT	cd_pessoa_fisica_w,
		ie_fator_rh_w,
		ie_tipo_sangue_w
	from 	san_reserva a,
		pessoa_fisica b
	where 	a.cd_pessoa_fisica = b.cd_pessoa_fisica
	and	a.nr_sequencia = nr_seq_trans_res_p;

end if;

if (ie_tipo_p = 'T') then

	select	max(a.cd_pessoa_fisica),
		coalesce(max(ie_fator_rh),null),
		coalesce(max(ie_tipo_sangue),null)
	into STRICT	cd_pessoa_fisica_w,
		ie_fator_rh_w,
		ie_tipo_sangue_w
	from 	san_transfusao a,
		pessoa_fisica b
	where 	a.cd_pessoa_fisica = b.cd_pessoa_fisica
	and	a.nr_sequencia = nr_seq_trans_res_p;

end if;

ds_erro_p := '';
ie_consiste_prescr_w := obter_param_usuario(450, 50, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_consiste_prescr_w);

ie_permite_tipo_incomp_w := coalesce(obter_valor_param_usuario(450, 273, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');

open C01;
	loop
	fetch C01 into
		ie_fator_rh_hem_w,
		ie_tipo_sangue_hem_w,
		nr_seq_derivado_w,
		ds_derivado_w,
		qt_volume_w,
		nr_seq_prod_w,
		ie_aferese_w,
		ie_pool_w,
		qt_vol_atendido_w,
		ie_irradiado_w,
		ie_lavado_w,
		ie_filtrado_w,
		ie_aliquotado_2_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */		
	
	begin
	
	select	
		MAX(a.ie_fator_rh),
		MAX(a.ie_tipo_sangue)
	into STRICT	ie_fator_rh_hem_w,
		ie_tipo_sangue_hem_w
	from	san_producao_v a
	where	nr_sequencia = nr_seq_prod_w;
	
	
	if (ie_tipo_p = 'R') and (ie_consiste_prescr_w = 'S') then
		
		select	coalesce(sum(qt_solicitada),0)
		into STRICT	qt_solicitada_w
		from	san_reserva_item
		where	nr_seq_reserva = nr_seq_trans_res_p;
		
		
		if (qt_solicitada_w > 0) then
			
			select	coalesce(sum(qt_solicitada),0)
			into STRICT	qt_solicitada_w
			from	san_reserva_item
			where	nr_seq_reserva = nr_seq_trans_res_p
			and	nr_seq_derivado = nr_seq_derivado_w
			and	coalesce(ie_suspenso,'N') = 'N';		
									
			select  count(*) + 1
			into STRICT	qt_hemo_w
			from	san_reserva_prod a,
				san_producao b
			where	b.nr_sequencia = a.nr_seq_producao
			and	a.nr_seq_reserva = nr_seq_trans_res_p
			and	b.nr_sequencia <> nr_seq_prod_w
			and	nr_seq_derivado = nr_seq_derivado_w;							

			if (qt_solicitada_w < qt_hemo_w) or (qt_solicitada_w = 0) then
			
				--O hemocomponente #@DS_DERIVADO#@ nao consta na solicitacao ou esta suspenso
				CALL wheb_mensagem_pck.exibir_mensagem_abort(201795,	'DS_DERIVADO=' || substr(OBTER_DESC_SAN_DERIVADO(nr_seq_derivado_w),1,60));
				
			end if;
			
		
		end if;
		
	end if;
	
	if (ie_consiste_prescr_w = 'S') then
		
		open c02;
		loop
		fetch c02 into
			ie_reserva_aferese_w,
			ie_reserva_pool_w,
			ie_reserva_irradiado_w,
			ie_reserva_lavado_w,
			ie_reserva_filtrado_w,
			ie_reserva_aliquotado_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
		
		begin
			if (ie_reserva_aferese_w = 'S') then
				
				if (ie_reserva_aferese_w <> ie_aferese_w) then							
					--O hemocomponente #@DS_DERIVADO#@ foi solicitado por Afarese, porem, a reserva nao foi atendida por Afarese.
					CALL wheb_mensagem_pck.exibir_mensagem_abort(452527,	'DS_DERIVADO=' || substr(OBTER_DESC_SAN_DERIVADO(nr_seq_derivado_w),1,60));
				end if;
				
			end if;
			
			if (ie_reserva_pool_w = 'S') then
			
				select	max(qt_volume)
				into STRICT	qt_vol_solicitado_w
				from	san_reserva_item
				where	nr_seq_reserva = nr_seq_trans_res_p
				and	nr_seq_derivado = nr_seq_derivado_w;
				
				if (qt_vol_solicitado_w > 0) and (qt_vol_solicitado_w <= qt_vol_atendido_w) then
					--O volume atendido (#@QT_VOL_ATENDIDO#@) do hemocomponente #@DS_DERIVADO#@, deve ser inferior ao volume solicitado (#@QT_VOL_SOLICITADO#@). 
					CALL wheb_mensagem_pck.exibir_mensagem_abort(452785,	'DS_DERIVADO=' || substr(OBTER_DESC_SAN_DERIVADO(nr_seq_derivado_w),1,60) ||
						';QT_VOL_ATENDIDO=' || to_char(qt_vol_atendido_w) || ';QT_VOL_SOLICITADO=' || to_char(qt_vol_solicitado_w));
				end if;	
				
			end if;		

			if (ie_reserva_irradiado_w <> ie_irradiado_w) then
				--O cuidado "#@DS_CUIDADO#@" do hemocomponente "#@DS_DERIVADO#@" da reserva a diferente do solicitado.
				CALL wheb_mensagem_pck.exibir_mensagem_abort(728106,	'DS_DERIVADO=' || substr(obter_desc_san_derivado(nr_seq_derivado_w),1,60) ||
										';DS_CUIDADO=' || substr(obter_desc_expressao(292247),1,60));
			end if;

			if (ie_reserva_lavado_w <> ie_lavado_w) then
				--O cuidado "#@DS_CUIDADO#@" do hemocomponente "#@DS_DERIVADO#@" da reserva a diferente do solicitado.
				CALL wheb_mensagem_pck.exibir_mensagem_abort(728106,	'DS_DERIVADO=' || substr(obter_desc_san_derivado(nr_seq_derivado_w),1,60) ||
										';DS_CUIDADO=' || substr(obter_desc_expressao(292460),1,60));
			end if;

			if (ie_reserva_filtrado_w <> ie_filtrado_w) then
				--O cuidado "#@DS_CUIDADO#@" do hemocomponente "#@DS_DERIVADO#@" da reserva a diferente do solicitado.
				CALL wheb_mensagem_pck.exibir_mensagem_abort(728106,	'DS_DERIVADO=' || substr(obter_desc_san_derivado(nr_seq_derivado_w),1,60) ||
										';DS_CUIDADO=' || substr(obter_desc_expressao(290096),1,60));
			end if;

			if (ie_reserva_aliquotado_w <> ie_aliquotado_2_w) then
				--O cuidado "#@DS_CUIDADO#@" do hemocomponente "#@DS_DERIVADO#@" da reserva a diferente do solicitado.
				CALL wheb_mensagem_pck.exibir_mensagem_abort(728106,	'DS_DERIVADO=' || substr(obter_desc_san_derivado(nr_seq_derivado_w),1,60) ||
										';DS_CUIDADO=' || substr(obter_desc_expressao(283367),1,60));
			end if;

		end;
		
		end loop;
		close c02;
		
	end if;
	
	if (ie_fator_rh_w IS NOT NULL AND ie_fator_rh_w::text <> '' AND ie_tipo_sangue_w IS NOT NULL AND ie_tipo_sangue_w::text <> '') then

		begin
	
		select 	IE_TIPO_ABN,
			IE_TIPO_ABP,
			IE_TIPO_AN,
			IE_TIPO_AP,
			IE_TIPO_BN,
			IE_TIPO_BP,
			IE_TIPO_ON,
			IE_TIPO_OP
		into STRICT	IE_TIPO_ABN_w,
			IE_TIPO_ABP_w,
			IE_TIPO_AN_w,
			IE_TIPO_AP_w,
			IE_TIPO_BN_w,
			IE_TIPO_BP_w,
			IE_TIPO_ON_w,
			IE_TIPO_OP_w
		from 	san_derivado_compativel
		where	nr_seq_derivado = nr_seq_derivado_w
		and	ie_fator_rh_recep 	= ie_fator_rh_w
		AND	ie_tipo_sangue_recep 	= ie_tipo_sangue_w;

		exception
		when others then
			IE_TIPO_ABN_w	:= 'S';
			IE_TIPO_ABP_w	:= 'S';
			IE_TIPO_AN_w	:= 'S';
			IE_TIPO_AP_w	:= 'S';
			IE_TIPO_BN_w	:= 'S';
			IE_TIPO_BP_w	:= 'S';
			IE_TIPO_ON_w	:= 'S';
			IE_TIPO_OP_w	:= 'S';
		end;
	
		if (IE_TIPO_ABN_w = 'N' AND ie_tipo_sangue_hem_w = 'AB' AND ie_fator_rh_hem_w = '-') then

			ds_erro_p := substr(ds_erro_p || wheb_mensagem_pck.get_texto(281233,'IE_TIPO_SANGUE='|| ie_tipo_sangue_w
				|| ';IE_FATOR_RH='|| ie_fator_rh_w||';DS_DERIVADO='|| ds_derivado_w) || chr(10),1,255);

		elsif (IE_TIPO_ABP_w = 'N' AND ie_tipo_sangue_hem_w = 'AB' AND ie_fator_rh_hem_w = '+') then

			ds_erro_p := substr(ds_erro_p || wheb_mensagem_pck.get_texto(281233,'IE_TIPO_SANGUE='|| ie_tipo_sangue_w
				|| ';IE_FATOR_RH='|| ie_fator_rh_w||';DS_DERIVADO='|| ds_derivado_w) || chr(10),1,255);
		
		elsif (IE_TIPO_AN_w = 'N' AND ie_tipo_sangue_hem_w = 'A' AND ie_fator_rh_hem_w = '-') then

			ds_erro_p := substr(ds_erro_p || wheb_mensagem_pck.get_texto(281233,'IE_TIPO_SANGUE='|| ie_tipo_sangue_w
				|| ';IE_FATOR_RH='|| ie_fator_rh_w||';DS_DERIVADO='|| ds_derivado_w) || chr(10),1,255);

		elsif (IE_TIPO_AP_w = 'N' AND ie_tipo_sangue_hem_w = 'A' AND ie_fator_rh_hem_w = '+') then

			ds_erro_p := substr(ds_erro_p || wheb_mensagem_pck.get_texto(281233,'IE_TIPO_SANGUE='|| ie_tipo_sangue_w
				|| ';IE_FATOR_RH='|| ie_fator_rh_w||';DS_DERIVADO='|| ds_derivado_w) || chr(10),1,255);

		elsif (IE_TIPO_BN_w = 'N' AND ie_tipo_sangue_hem_w = 'B' AND ie_fator_rh_hem_w = '-') then

			ds_erro_p := substr(ds_erro_p || wheb_mensagem_pck.get_texto(281233,'IE_TIPO_SANGUE='|| ie_tipo_sangue_w
				|| ';IE_FATOR_RH='|| ie_fator_rh_w||';DS_DERIVADO='|| ds_derivado_w) || chr(10),1,255);

		elsif (IE_TIPO_BP_w = 'N' AND ie_tipo_sangue_hem_w = 'B' AND ie_fator_rh_hem_w = '+') then

			ds_erro_p := substr(ds_erro_p || wheb_mensagem_pck.get_texto(281233,'IE_TIPO_SANGUE='|| ie_tipo_sangue_w
				|| ';IE_FATOR_RH='|| ie_fator_rh_w||';DS_DERIVADO='|| ds_derivado_w) || chr(10),1,255);

		elsif (IE_TIPO_ON_w = 'N' AND ie_tipo_sangue_hem_w = 'O' AND ie_fator_rh_hem_w = '-') then

			ds_erro_p := substr(ds_erro_p || wheb_mensagem_pck.get_texto(281233,'IE_TIPO_SANGUE='|| ie_tipo_sangue_w
				|| ';IE_FATOR_RH='|| ie_fator_rh_w||';DS_DERIVADO='|| ds_derivado_w) || chr(10),1,255);

		elsif (IE_TIPO_OP_w = 'N' AND ie_tipo_sangue_hem_w = 'O' AND ie_fator_rh_hem_w = '+') then

			ds_erro_p := substr(ds_erro_p || wheb_mensagem_pck.get_texto(281233,'IE_TIPO_SANGUE='|| ie_tipo_sangue_w
				|| ';IE_FATOR_RH='|| ie_fator_rh_w||';DS_DERIVADO='|| ds_derivado_w) || chr(10),1,255);
		
		end if;
	
	end if;
	
	end;

end loop;
close C01;

select	coalesce(max(san_verif_tipo_doacao_auto_dir(san_obter_tipo_doacao(nr_seq_doacao))),'X')
into STRICT	ie_classif_w
from	san_producao
where	obter_se_contido(nr_sequencia, sql_item_p) = 'S';

if (ie_classif_w = 'A') or (ie_classif_w = 'D') then
	ds_justificativa_w := '';
else
	ds_justificativa_w := ds_justificativa_p;
end if;

if ((ie_tipo_p = 'R') and (coalesce(ds_erro_p::text, '') = '' or ie_permite_tipo_incomp_w = 'S') and (ie_atualizar_reg_p = 'S')) then


	ds_comando_w := ' insert into san_reserva_prod (nr_sequencia, ' ||
				' nr_seq_reserva, nr_seq_producao, ie_status, '||
				' dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec) ' ||
			' select san_reserva_prod_seq.NextVal, ' ||
			nr_seq_trans_res_p || ', ' ||
			' nr_sequencia, ' ||
			chr(39) || 'R' || chr(39) ||  ', ' ||
			' sysdate, ' ||
			chr(39) ||nm_usuario_p || chr(39) || ', ' ||
			' sysdate, ' || chr(39) ||nm_usuario_p || chr(39) ||
			' from 	san_producao ' ||
			' where nr_sequencia in ' || sql_item_p;

	CALL Exec_Sql_Dinamico(nm_usuario_p,ds_comando_w);
	
	if (ie_atualiza_just_p = 'S') then
		ds_comando_w := ' update san_producao 	  ' ||
				' set 	ds_justificativa = ' || chr(39) ||ds_justificativa_w || chr(39) ||
				' where nr_sequencia in   ' || sql_item_p;
				
		CALL Exec_Sql_Dinamico(nm_usuario_p,ds_comando_w);
	end if;
	
elsif	((ie_tipo_p = 'T') and (coalesce(ds_erro_p::text, '') = '' or ie_permite_tipo_incomp_w = 'S') and (ie_atualizar_reg_p = 'S')) then

	if (ie_data_utilizacao_p 	= 'S')	then

		ds_comando_w := ' update san_producao 	  ' ||
				' set	nr_seq_transfusao = ' || nr_seq_trans_res_p || ', '||
				' 	dt_utilizacao	= sysdate, ' ||
				'	ds_justificativa = ' || chr(39) ||ds_justificativa_w || chr(39) ||
				' where nr_sequencia in   ' || sql_item_p;

		
	else
		ds_comando_w := ' update san_producao 	  ' ||
				' set 	nr_seq_transfusao = ' || nr_seq_trans_res_p || ', '||
				'	ds_justificativa = ' || chr(39) ||ds_justificativa_w || chr(39) ||
				' where nr_sequencia in   ' || sql_item_p;

	end if;
	
	CALL Exec_Sql_Dinamico(nm_usuario_p,ds_comando_w);
	
	if (sql_item_p IS NOT NULL AND sql_item_p::text <> '') then
		begin	
		ds_lista_w	:= substr(sql_item_p,2,length(sql_item_p)-2)||',';
		while(ds_lista_w IS NOT NULL AND ds_lista_w::text <> '') loop
			begin
			nr_pos_virgula_w	:= position(',' in ds_lista_w);
			if (nr_pos_virgula_w > 0)	then
				begin
				nr_seq_producao_w	:= substr(ds_lista_w,1,nr_pos_virgula_w-1);
				ds_lista_w		:= substr(ds_lista_w,nr_pos_virgula_w+1,length(ds_lista_w));
				if (nr_seq_producao_w IS NOT NULL AND nr_seq_producao_w::text <> '') then
					begin
					
					select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
					into STRICT	ie_regra_material_w
					from	san_material
					where	coalesce(ie_tipo_material,'N') = 'S'
					and	ie_situacao = 'A';
					
					select	coalesce(max(ie_aliquotado),'N')
					into STRICT	ie_aliquotado_w
					from	san_producao
					where	nr_sequencia = nr_seq_producao_w;
					
					if (ie_regra_material_w = 'S') and (ie_aliquotado_w = 'S') then
						CALL San_gerar_material_aliq(nr_seq_trans_res_p, nr_seq_producao_w, nm_usuario_p);
					end if;				
					
					end;
				end if;
				end;
			else
				ds_lista_w := null;
			end if;
			end;
		end loop;
		end;
	end if;

end if;

commit;
end;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_consiste_transf_reserva ( nr_seq_trans_res_p bigint, ie_tipo_p text, sql_item_p text, nm_usuario_p text, ie_data_utilizacao_p text, ie_atualizar_reg_p text, ds_erro_p INOUT text, ie_atualiza_just_p text default 'N', ds_justificativa_p text default null) FROM PUBLIC;

