-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixar_movto_banco_pend_cartao (nr_seq_movto_pend_p bigint, dt_baixa_p timestamp, vl_baixa_p bigint, nm_usuario_p text, ie_commit_p text, nr_seq_movto_banco_p bigint default null, nr_seq_movto_cartao_p bigint default null, nr_seq_lote_cartao_p bigint default null) AS $body$
DECLARE


/* tipo de baixa - ie_tipo_baixa_w
7	Movimentação bancária
9	Administração de Cartões
10	Administração de Cartões (Baixa em lote)
*/
ie_tipo_baixa_w			bigint;
nr_seq_tipo_baixa_w		bigint;
cd_estabelecimento_w		smallint;
vl_saldo_liquido_w		double precision;
nr_seq_parcela_w		bigint;
ie_forma_lanc_lote_cartao_w	varchar(1);

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.vl_saldo_liquido
from	movto_cartao_cr_parcela a
where	a.nr_seq_lote	= nr_seq_lote_cartao_p;


BEGIN

if (nr_seq_movto_pend_p IS NOT NULL AND nr_seq_movto_pend_p::text <> '') then

	if (nr_seq_movto_cartao_p IS NOT NULL AND nr_seq_movto_cartao_p::text <> '') then
		ie_tipo_baixa_w	:= 9;

		select	max(c.cd_estabelecimento)
		into STRICT	cd_estabelecimento_w
		from	movto_cartao_cr c,
			movto_cartao_cr_parcela b,
			movto_cartao_cr_baixa a
		where	a.nr_seq_parcela	= b.nr_sequencia
		and	b.nr_seq_movto		= c.nr_sequencia
		and	a.nr_sequencia		= nr_seq_movto_cartao_p;

	elsif (nr_seq_lote_cartao_p IS NOT NULL AND nr_seq_lote_cartao_p::text <> '') then
		ie_tipo_baixa_w	:= 10;

		select 	max(cd_estabelecimento)
		into STRICT	cd_estabelecimento_w
		from	lote_baixa_cartao_cr
		where	nr_sequencia	= nr_seq_lote_cartao_p;

	end if;

	select	max(ie_forma_lanc_lote_cartao)
	into STRICT	ie_forma_lanc_lote_cartao_w
	from	parametro_contas_receber
	where	cd_estabelecimento	= cd_estabelecimento_w;

	select	max(a.nr_sequencia)
	into STRICT	nr_seq_tipo_baixa_w
	from	tipo_baixa_cni a
	where	a.cd_estabelecimento	= coalesce(cd_estabelecimento_w,a.cd_estabelecimento)
	and	a.ie_tipo_baixa		= ie_tipo_baixa_w
	and	a.ie_situacao		= 'A';

	if (coalesce(nr_seq_lote_cartao_p::text, '') = '') then

		insert	into	movto_banco_pend_baixa(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_movto_pend,
			dt_baixa,
			vl_baixa,
			nr_titulo,
			nr_seq_baixa,
			nr_bordero_rec,
			nr_seq_conv_receb,
			nr_adiantamento,
			nr_seq_tipo_baixa,
			nr_seq_cheque,
			nr_seq_movto_trans_fin,
			nr_seq_cartao_baixa,
			nr_seq_lote_cartao,
			nr_seq_parc_cartao)
		values (nextval('movto_banco_pend_baixa_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_movto_pend_p,
			coalesce(dt_baixa_p,clock_timestamp()),
			vl_baixa_p,
			null,
			null,
			null,
			null,
			null,
			nr_seq_tipo_baixa_w,
			null,
			nr_seq_movto_banco_p,
			nr_seq_movto_cartao_p,
			null,
			null);
	else
		if (ie_forma_lanc_lote_cartao_w = 'P') then /*Um lançamento para cada parcela*/
			open c01;
			loop
			fetch c01 into
				nr_seq_parcela_w,
				vl_saldo_liquido_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
				insert	into	movto_banco_pend_baixa(nr_sequencia,
					nm_usuario,
					dt_atualizacao,
					nm_usuario_nrec,
					dt_atualizacao_nrec,
					nr_seq_movto_pend,
					dt_baixa,
					vl_baixa,
					nr_titulo,
					nr_seq_baixa,
					nr_bordero_rec,
					nr_seq_conv_receb,
					nr_adiantamento,
					nr_seq_tipo_baixa,
					nr_seq_cheque,
					nr_seq_movto_trans_fin,
					nr_seq_cartao_baixa,
					nr_seq_lote_cartao,
					nr_seq_parc_cartao)
				values (nextval('movto_banco_pend_baixa_seq'),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nr_seq_movto_pend_p,
					coalesce(dt_baixa_p,clock_timestamp()),
					vl_saldo_liquido_w,
					null,
					null,
					null,
					null,
					null,
					nr_seq_tipo_baixa_w,
					null,
					nr_seq_movto_banco_p,
					null,
					nr_seq_lote_cartao_p,
					nr_seq_parcela_w);
			end loop;
			close c01;
		else
			insert	into	movto_banco_pend_baixa(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_movto_pend,
				dt_baixa,
				vl_baixa,
				nr_titulo,
				nr_seq_baixa,
				nr_bordero_rec,
				nr_seq_conv_receb,
				nr_adiantamento,
				nr_seq_tipo_baixa,
				nr_seq_cheque,
				nr_seq_movto_trans_fin,
				nr_seq_cartao_baixa,
				nr_seq_lote_cartao,
				nr_seq_parc_cartao)
			values (nextval('movto_banco_pend_baixa_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_movto_pend_p,
				coalesce(dt_baixa_p,clock_timestamp()),
				vl_baixa_p,
				null,
				null,
				null,
				null,
				null,
				nr_seq_tipo_baixa_w,
				null,
				nr_seq_movto_banco_p,
				null,
				nr_seq_lote_cartao_p,
				null);

		end if;

	end if;

	CALL atualizar_saldo_movto_bco_pend(nr_seq_movto_pend_p,nm_usuario_p,'N');
end if;

if (ie_commit_p = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixar_movto_banco_pend_cartao (nr_seq_movto_pend_p bigint, dt_baixa_p timestamp, vl_baixa_p bigint, nm_usuario_p text, ie_commit_p text, nr_seq_movto_banco_p bigint default null, nr_seq_movto_cartao_p bigint default null, nr_seq_lote_cartao_p bigint default null) FROM PUBLIC;

