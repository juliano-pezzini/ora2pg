-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_apropriar_preco_benef ( nr_seq_segurado_preco_p bigint, nr_seq_segurado_p bigint, dt_reajuste_p timestamp, vl_preco_atual_p bigint, nr_seq_preco_p bigint, vl_reajuste_p bigint, nm_usuario_p text, ie_commit_p text, ie_trigger_p text, vl_desconto_p bigint, nr_seq_regra_aprop_p bigint) AS $body$
DECLARE


nr_seq_tabela_w			pls_tabela_preco.nr_sequencia%type;
nr_seq_plano_w			pls_plano.nr_sequencia%type;
nr_seq_classif_dependencia_w	pls_classif_dependencia.nr_sequencia%type;
nr_seq_regra_apropriacao_w	pls_regra_apropriacao.nr_sequencia%type;
vl_apropriacao_w		pls_regra_apropriacao_item.vl_apropriacao%type;
vl_apropriado_w			pls_plano_preco.vl_preco_atual%type;
vl_total_apropriacao_w		pls_regra_apropriacao_item.vl_apropriacao%type;
vl_reajuste_w			pls_segurado_preco.vl_reajuste%type;
vl_total_reajuste_w		pls_segurado_preco.vl_reajuste%type;
vl_preco_ant_w			pls_segurado_preco.vl_preco_atual%type;
vl_base_reajuste_w		pls_segurado_preco_aprop.vl_base_reajuste%type;
vl_total_base_w			pls_segurado_preco_aprop.vl_base_reajuste%type;
qt_registro_w			integer;
qt_total_w			integer;
nr_seq_lote_reajuste_w		pls_reajuste.nr_sequencia%type;
nr_seq_reajuste_w		pls_reajuste.nr_sequencia%type;
vl_reajuste_ww			pls_segurado_preco.vl_reajuste%type;
vl_preco_ant_ww			pls_segurado_preco.vl_preco_atual%type;
vl_preco_atual_w		pls_segurado_preco.vl_preco_atual%type;
dt_contratacao_w		pls_segurado.dt_contratacao%type;
vl_reaj_retido_w		double precision;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from (	SELECT	nr_sequencia,
			nr_seq_classif_dependencia
		from	pls_regra_apropriacao
		where	nr_seq_plano			= nr_seq_plano_w
		and	nr_seq_tabela			= nr_seq_tabela_w
		and	((nr_seq_classif_dependencia	= nr_seq_classif_dependencia_w) or (coalesce(nr_seq_classif_dependencia::text, '') = ''))
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	dt_reajuste_p between dt_inicio_vigencia and coalesce(dt_fim_vigencia,dt_reajuste_p)
		and	dt_reajuste_p >= dt_contratacao_w
		
union all

		select	nr_sequencia,
			nr_seq_classif_dependencia
		from	pls_regra_apropriacao
		where	nr_seq_plano			= nr_seq_plano_w
		and	nr_seq_tabela			= nr_seq_tabela_w
		and	((nr_seq_classif_dependencia	= nr_seq_classif_dependencia_w) or (coalesce(nr_seq_classif_dependencia::text, '') = ''))
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	dt_reajuste_p between trunc(dt_inicio_vigencia,'month') and coalesce(dt_fim_vigencia,dt_reajuste_p)
		and	dt_reajuste_p < dt_contratacao_w
	) alias13
	order by
		coalesce(nr_seq_classif_dependencia,0);

C02 CURSOR FOR
	SELECT	nr_seq_centro_apropriacao,
		vl_apropriacao,
		tx_apropriacao,
		ie_permite_reajustar
	from	pls_regra_apropriacao_item
	where	nr_seq_apropriacao	= nr_seq_regra_apropriacao_w
	and	nr_seq_preco		= nr_seq_preco_p
	order by
		ie_permite_reajustar; --Order by necessário para controle da variável
c02_w	C02%RowType;


BEGIN

vl_reajuste_ww	:= vl_reajuste_p;

vl_preco_atual_w := vl_preco_atual_p - vl_desconto_p;

if (ie_trigger_p = 'N') then
	select	max(nr_seq_lote_reajuste)
	into STRICT	nr_seq_lote_reajuste_w
	from	pls_segurado_preco
	where	nr_sequencia = nr_seq_segurado_preco_p
	and	cd_motivo_reajuste = 'I';

	if (nr_seq_lote_reajuste_w IS NOT NULL AND nr_seq_lote_reajuste_w::text <> '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_reajuste_w
		from	pls_reajuste
		where	nr_seq_lote_deflator = nr_seq_lote_reajuste_w;

		if (nr_seq_reajuste_w IS NOT NULL AND nr_seq_reajuste_w::text <> '') then
			select	max(vl_preco_ant)
			into STRICT	vl_preco_ant_ww
			from	pls_segurado_preco
			where	nr_seq_segurado = nr_seq_segurado_p
			and	nr_seq_lote_reajuste = nr_seq_reajuste_w;

			if (coalesce(vl_preco_ant_ww,0) <> 0) then
				vl_reajuste_ww := vl_preco_atual_w - vl_preco_ant_ww;
			end if;
		end if;
	end if;
end if;

select	nr_seq_tabela,
	nr_seq_plano,
	nr_seq_classif_dependencia,
	trunc(dt_contratacao,'dd')
into STRICT	nr_seq_tabela_w,
	nr_seq_plano_w,
	nr_seq_classif_dependencia_w,
	dt_contratacao_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_p;

if (nr_seq_regra_aprop_p IS NOT NULL AND nr_seq_regra_aprop_p::text <> '') then
	nr_seq_regra_apropriacao_w	:= nr_seq_regra_aprop_p;
else
	open C01;
	loop
	fetch C01 into
		nr_seq_regra_apropriacao_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;
end if;

select	sum(vl_apropriacao)
into STRICT	vl_total_apropriacao_w
from	pls_regra_apropriacao_item
where	nr_seq_apropriacao	= nr_seq_regra_apropriacao_w
and	nr_seq_preco		= nr_seq_preco_p;

if (nr_seq_regra_apropriacao_w IS NOT NULL AND nr_seq_regra_apropriacao_w::text <> '') then
	qt_registro_w		:= 0;
	vl_apropriado_w		:= 0;
	vl_total_reajuste_w	:= 0;
	vl_total_base_w		:= 0;
	vl_reaj_retido_w	:= 0;
	vl_preco_ant_w		:= vl_preco_atual_w - vl_reajuste_ww;

	select	count(1)
	into STRICT	qt_total_w
	from	pls_regra_apropriacao_item
	where	nr_seq_apropriacao	= nr_seq_regra_apropriacao_w
	and	nr_seq_preco		= nr_seq_preco_p;

	open C02;
	loop
	fetch C02 into
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		qt_registro_w	:= qt_registro_w + 1;

		if (c02_w.vl_apropriacao IS NOT NULL AND c02_w.vl_apropriacao::text <> '') then
			vl_apropriacao_w 	:= c02_w.vl_apropriacao;

			if (coalesce(c02_w.ie_permite_reajustar,'S') = 'N') then
				vl_base_reajuste_w	:= vl_apropriacao_w;
				vl_reajuste_w		:= 0;
				vl_reaj_retido_w	:= vl_reaj_retido_w + c02_w.vl_apropriacao;
			else
				vl_reajuste_w 		:= ((c02_w.vl_apropriacao+vl_reaj_retido_w) * vl_reajuste_ww)/vl_total_apropriacao_w;
				vl_base_reajuste_w	:= vl_apropriacao_w - vl_reajuste_w;
				vl_reaj_retido_w	:= 0;
			end if;
		else
			vl_apropriacao_w 	:= ((c02_w.tx_apropriacao / 100) * vl_preco_atual_w);
			vl_apropriado_w		:= vl_apropriado_w + vl_apropriacao_w;

			vl_reajuste_w		:= vl_reajuste_ww * (coalesce(c02_w.tx_apropriacao,0) / 100);
			vl_total_reajuste_w	:= vl_total_reajuste_w + vl_reajuste_w;

			vl_base_reajuste_w	:= ((c02_w.tx_apropriacao / 100) * vl_preco_ant_w);
			vl_total_base_w		:= vl_total_base_w + vl_base_reajuste_w;

			if (qt_registro_w = qt_total_w) then
				if (vl_apropriado_w <> vl_preco_atual_w) then
					vl_apropriacao_w := vl_preco_atual_w - (vl_apropriado_w - vl_apropriacao_w);
				end if;

				if (vl_total_reajuste_w <> vl_reajuste_ww) then
					vl_reajuste_w := vl_reajuste_ww - (vl_total_reajuste_w - vl_reajuste_w);
				end if;

				if (vl_total_base_w <> vl_preco_ant_w) then
					vl_base_reajuste_w := vl_preco_ant_w - (vl_total_base_w - vl_base_reajuste_w);
				end if;
			end if;
		end if;

		insert into pls_segurado_preco_aprop(	nr_sequencia,
					nr_seq_segurado_preco,
					nr_seq_centro_apropriacao,
					vl_reajuste,
					vl_apropriacao,
					vl_base_reajuste,
					nm_usuario,
					nm_usuario_nrec,
					dt_atualizacao,
					dt_atualizacao_nrec)
		values (	nextval('pls_segurado_preco_aprop_seq'),
					nr_seq_segurado_preco_p,
					c02_w.nr_seq_centro_apropriacao,
					vl_reajuste_w,
					vl_apropriacao_w,
					vl_base_reajuste_w,
					nm_usuario_p,
					nm_usuario_p,
					clock_timestamp(),
					clock_timestamp());
		end;
	end loop;
	close C02;
end if;

if (coalesce(ie_commit_p,'N') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_apropriar_preco_benef ( nr_seq_segurado_preco_p bigint, nr_seq_segurado_p bigint, dt_reajuste_p timestamp, vl_preco_atual_p bigint, nr_seq_preco_p bigint, vl_reajuste_p bigint, nm_usuario_p text, ie_commit_p text, ie_trigger_p text, vl_desconto_p bigint, nr_seq_regra_aprop_p bigint) FROM PUBLIC;

