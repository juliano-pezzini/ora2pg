-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE get_ihc_msg ( nr_seq_psg_p ihc_psg.nr_sequencia%type, nm_usuario_p ihc_claim.nm_usuario%type) AS $body$
DECLARE


nr_account_w   		 ihc_claim.nr_account%type;
nr_episode_w		 ihc_claim.nr_episode%type;
ie_origem_proced_w	 procedimento_paciente.ie_origem_proced%type;
cd_procedimento_w	 procedimento.cd_procedimento_loc%type;	
vl_charge_w     	 ihc_msg.vl_charge%type;
nr_records_w		 ihc_claim.nr_sequencia%type;
nr_main_service_w	 ihc_psg.nr_main_service%type;
ie_service_type_w	 ihc_psg.ie_service_type%type;

c01 CURSOR FOR
SELECT  coalesce(a.vl_procedimento,0) * 100,
		b.cd_procedimento_loc cd_procedimento,
		a.ie_origem_proced
from    procedimento_paciente a,
		procedimento b
where   b.cd_procedimento = a.cd_procedimento
and 	b.ie_origem_proced = b.ie_origem_proced
and 	a.nr_interno_conta = nr_account_w
and		a.nr_atendimento	 = nr_episode_w
and		(a.nr_seq_proc_princ IS NOT NULL AND a.nr_seq_proc_princ::text <> '')
and 	a.nr_seq_proc_princ	=	nr_main_service_w
and   a.IE_PROC_PRINC_ATEND = 'N';


BEGIN

select  a.nr_account,
		a.nr_episode,
		b.nr_main_service
into STRICT    nr_account_w,
		nr_episode_w,
		nr_main_service_w	
from    ihc_claim a,
		ihc_psg	b
where   a.nr_sequencia = b.nr_seq_claim
and     b.nr_sequencia = nr_seq_psg_p;

	begin
	open c01;
	loop
	fetch c01 into
		vl_charge_w,
		cd_procedimento_w,
		ie_origem_proced_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

		ie_service_type_w := get_eclipse_conversion('IE_ORIGEM_PROCED', ie_origem_proced_w, 'IHC', 'MSG', nr_account_w, ie_service_type_w);
		
		select  count(nr_sequencia)
		into STRICT    nr_records_w
		from    eclipse_inco_account
		where   nr_interno_conta = nr_account_w;
		
		if (billing_i18n_pck.get_validate_eclipse() = 'N') and (nr_records_w = 0) then
		
			insert into ihc_msg( 	 vl_charge,
						 ie_charge_raised,
						 cd_service,
						 ie_service_type,
						 ie_theatre_band,
						 ie_theatre_type,
						 ie_theatre_category,
						 nm_usuario,
						 nm_usuario_nrec,
						 dt_atualizacao,
						 dt_atualizacao_nrec,
						 nr_sequencia,
						 nr_seq_psg)
					values ( vl_charge_w,
						 CASE WHEN vl_charge_w=0 THEN 'I'  ELSE 'C' END ,
						 cd_procedimento_w,
						 ie_service_type_w,
						 'LW',
						 'N',
						 'S',
						 nm_usuario_p,
						 nm_usuario_p,
						 clock_timestamp(),
						 clock_timestamp(),
						 nextval('ihc_msg_seq'),	
						 nr_seq_psg_p);	
		end if;			
	end loop;
	close c01;
	end;
			
	commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE get_ihc_msg ( nr_seq_psg_p ihc_psg.nr_sequencia%type, nm_usuario_p ihc_claim.nm_usuario%type) FROM PUBLIC;

