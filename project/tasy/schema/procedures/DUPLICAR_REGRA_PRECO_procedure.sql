-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE duplicar_regra_preco ( nr_sequencia_p bigint, tabela_p bigint, cd_convenio_p text, nm_usuario_p text, cd_categoria_p text, dt_inicio_vigencia_p timestamp, ie_taxa_servico_p bigint, cd_tab_preco_mat_p bigint, cd_tabela_servico_p bigint, cd_procedimento_p bigint, cd_taxa_exame_p bigint, cd_estabelecimento_p bigint, ie_regra_filme_p text, ie_prioridade_p bigint, cd_edicao_amb_p bigint) AS $body$
DECLARE



nr_seq_evento_w		bigint;
ie_origem_taxa_w		smallint;
cd_categoria_convenio_w	varchar(10);
ie_evento_calculo_w	smallint;
cd_taxa_servico_w		integer;
tx_ajuste_tabela_mat_w	double precision;
tx_ajuste_geral_w		double precision;
tx_procedimento_w		double precision;
ie_criterio_taxa_w		smallint;
nr_porte_anestesico_w	smallint;
cd_taxa_cirurgia_w		integer;
qt_min_seghr_cirurgia_w	smallint;
qt_min_tolerancia_w	smallint;
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
cd_material_w		integer;
tx_brasindice_pfb_w	REGRA_AJUSTE_MATERIAL.TX_BRASINDICE_PFB%type; --number(15,4);
ie_taxa_servico_w		smallint;
tx_afaturar_w		double precision;
cd_grupo_material_w	smallint;
cd_subgrupo_material_w	smallint;
vl_ch_custo_oper_w	double precision;
vl_filme_w		double precision;
vl_ch_honorarios_w		double precision;
vl_negociado_w		double precision;
cd_classe_material_w	integer;
dt_liberacao_tabela_w	timestamp;
dt_inicio_vigencia_w	timestamp;
tx_preco_fabrica_w	CONVENIO_BRASINDICE.TX_PRECO_FABRICA%type;--number(15,4);
tx_brasindice_pmc_w	CONVENIO_BRASINDICE.TX_BRASINDICE_PMC%type;--number(15,4);
tx_pmc_neg_w		CONVENIO_BRASINDICE.TX_PMC_NEG%type;--number(15,4);
tx_pmc_pos_w		CONVENIO_BRASINDICE.TX_PMC_POS%type;--number(15,4);
nm_usuario_w		varchar(100);
ie_situacao_w		varchar(1);
qt_dia_fixo_w		integer;
dt_base_fixo_w		timestamp;
nr_nova_seq_w		bigint;
nr_sequencia_w		numeric(20);
cd_estabelecimento_w	bigint;
cd_edicao_amb_w		bigint;
cd_area_procedimento_w	bigint;
cd_especialidade_w	bigint;
cd_grupo_proc_w		bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
ie_preco_informado_w	varchar(1);
vl_proc_ajustado_w		double precision;
ie_glosa_w		varchar(1);
cd_procedimento_esp_w	varchar(20);
tx_ajuste_w		double precision;
nr_seq_regra_preco_w	bigint;
dt_final_vigencia_w		timestamp;
cd_tipo_acomodacao_w	smallint;
ie_tipo_atendimento_w	smallint;
cd_setor_atendimento_w	integer;
vl_medico_w		double precision;
vl_custo_operacional_w	double precision;
qt_filme_w		double precision;
nr_auxiliares_w		smallint;
qt_porte_anestesico_w	numeric(20);
tx_ajuste_custo_oper_w	double precision;
tx_ajuste_medico_w	double precision;
tx_ajuste_filme_w		double precision;
ie_credenciado_w		varchar(1);
ie_origem_preco_w		varchar(05);
ie_precedencia_preco_w	varchar(01);
pr_glosa_w		double precision;
ie_tipo_material_w		varchar(03);
nr_prioridade_w		smallint;
tx_pmc_w		double precision;
cd_cid_w			varchar(10);
qt_idade_min_w		bigint;
qt_idade_max_w		bigint;
nr_seq_proc_interno_w	bigint;
nr_seq_exame_w		bigint;
nr_sequencia_new_w	bigint;
cd_plano_w		varchar(20);
ie_clinica_w		bigint;
cd_empresa_ref_w		bigint;
cd_motivo_exc_conta_w	bigint;
cd_medico_w		varchar(10);
cd_tabela_preco_w		bigint;
ie_atend_retorno_w		varchar(1);
ie_sexo_w		varchar(1);
ie_tipo_preco_w		varchar(3);
ie_autor_particular_w	varchar(1);
nr_seq_tiss_tabela_w	bigint;
ie_tipo_regra_w		varchar(3);
ie_todas_categorias_w	varchar(1);
nr_seq_grupo_w		bigint;
nr_seq_subgrupo_w	bigint;
nr_seq_forma_org_w	bigint;
tx_pfb_neg_w		CONVENIO_BRASINDICE.TX_PFB_NEG%type;--number(15,4);
tx_pfb_pos_w		CONVENIO_BRASINDICE.TX_PFB_POS%type;--number(15,4);
nr_seq_estrutura_w	bigint;
ie_tipo_material_ww	varchar(3);
dt_termino_w		timestamp;
ie_categ_lib_estab_w	varchar(1);
tx_pfb_neg_ww		CONVENIO_BRASINDICE.TX_PFB_NEG%type;--number(15,4);
tx_pfb_pos_ww		CONVENIO_BRASINDICE.TX_PFB_POS%type;--number(15,4);
ie_dividir_indice_pmc_w		varchar(1);
ie_dividir_indice_pfb_w		varchar(1);
cd_setor_atend_prescr_w		integer;
ie_tab_adicional_w		varchar(1);
cd_tab_mat_atualizacao_w	smallint;
ie_integracao_opme_w		varchar(1);
ie_tipo_atendimento	smallint;
ie_situacao_ww		varchar(1);
cd_tabela_servico_w	smallint;
nr_seq_grupo_lab_w	regra_ajuste_proc.nr_seq_grupo_lab%type;
nr_seq_grupo_int_w	regra_ajuste_proc.nr_seq_grupo_int%type;
nr_seq_espec_int_w	regra_ajuste_proc.nr_seq_espec_int%type;
nr_seq_area_int_w	regra_ajuste_proc.nr_seq_area_int%type;
nr_seq_estrutura_ww	regra_ajuste_proc.nr_seq_estrutura%type;
ie_ignora_ch_edicao_amb_w regra_ajuste_proc.ie_ignora_ch_edicao_amb%type;
ie_spect_w                regra_ajuste_proc.ie_spect%type;
ie_consiste_prescr_w      regra_ajuste_proc.ie_consiste_prescr%type;
ie_paciente_deficiente_w  regra_ajuste_proc.ie_paciente_deficiente%type;
ie_estrangeiro_w          regra_ajuste_proc.ie_estrangeiro%type;
ds_observacao_w           regra_ajuste_proc.ds_observacao%type;
ie_utiliza_video_w        regra_ajuste_proc.ie_utiliza_video%type;
ie_prior_edicao_ajuste_w  regra_ajuste_proc.ie_prior_edicao_ajuste%type;
IE_KIT_MATERIAL_w	regra_ajuste_material.IE_KIT_MATERIAL%type;
ie_tipo_preco_autor_w	 regra_ajuste_material.ie_tipo_preco_autor%type;
vl_minimo_brasind_w 	CONVENIO_BRASINDICE.VL_MINIMO%type;--number(15,2);
vl_maximo_brasind_w 	CONVENIO_BRASINDICE.VL_MAXIMO%type;--number(15,2);
vl_minimo_simpro_w  	CONVENIO_SIMPRO.VL_MINIMO%type;    --number(15,2);
vl_maximo_simpro_w  	CONVENIO_SIMPRO.VL_MAXIMO%type;    --number(15,2);
ie_primeira_versao_w	CONVENIO_SIMPRO.IE_PRIMEIRA_VERSAO%type;


c001 CURSOR FOR
	SELECT	cd_categoria
	from	categoria_convenio
	where	cd_convenio 	= cd_convenio_p
	and	ie_situacao	= 'A'
	and	cd_categoria not in (SELECT cd_categoria
					 from	convenio_brasindice
					 where	nr_sequencia = nr_sequencia_p)
	and	((ie_categ_lib_estab_w = 'N') or (Obter_Se_Categoria_Lib_Estab(cd_estabelecimento_p, cd_convenio_p, cd_categoria) = 'S'));

c002 CURSOR FOR
	SELECT	cd_categoria
	from	categoria_convenio
	where	cd_convenio = cd_convenio_p
	and	ie_situacao	= 'A'
	and	((ie_categ_lib_estab_w = 'N') or (Obter_Se_Categoria_Lib_Estab(cd_estabelecimento_p, cd_convenio_p, cd_categoria) = 'S'));

c003 CURSOR FOR
	SELECT	cd_categoria
	from	categoria_convenio
	where	cd_convenio = cd_convenio_p
	and	ie_situacao	= 'A'
	and	cd_categoria not in (	SELECT 	cd_categoria
					from	convenio_taxa_servico
					where	cd_convenio = cd_convenio_p
					and	cd_estabelecimento = cd_estabelecimento_p
					and	ie_taxa_servico = ie_taxa_servico_p)
	and	((ie_categ_lib_estab_w = 'N') or (Obter_Se_Categoria_Lib_Estab(cd_estabelecimento_p, cd_convenio_p, cd_categoria) = 'S'));

c004 CURSOR FOR
	SELECT	cd_categoria
	from	categoria_convenio
	where	cd_convenio = cd_convenio_p
	and	ie_situacao	= 'A'
	and	cd_categoria not in (	SELECT 	cd_categoria
					from	convenio_taxa_exame
					where	nr_sequencia = nr_sequencia_p)
	and	((ie_categ_lib_estab_w = 'N') or (Obter_Se_Categoria_Lib_Estab(cd_estabelecimento_p, cd_convenio_p, cd_categoria) = 'S'));

c005 CURSOR FOR
	SELECT	cd_categoria
	from	categoria_convenio
	where	cd_convenio = cd_convenio_p
	and	ie_situacao	= 'A'
	and	cd_categoria not in (	SELECT 	cd_categoria
					from	convenio_amb
					where	cd_estabelecimento = cd_estabelecimento_p
					and	cd_convenio = cd_convenio_p
					and	dt_inicio_vigencia = dt_inicio_vigencia_p
					and	ie_prioridade = ie_prioridade_p)
	and	((ie_categ_lib_estab_w = 'N') or (Obter_Se_Categoria_Lib_Estab(cd_estabelecimento_p, cd_convenio_p, cd_categoria) = 'S'));

c006 CURSOR FOR
	SELECT	cd_categoria
	from	categoria_convenio
	where	cd_convenio = cd_convenio_p
	and	ie_situacao	= 'A'
	and	cd_categoria not in (	SELECT 	cd_categoria
					from	convenio_servico
					where	cd_convenio = cd_convenio_p
					and	cd_estabelecimento = cd_estabelecimento_p
					and	cd_tabela_servico = cd_tabela_servico_p
					and	dt_liberacao_tabela = dt_inicio_vigencia_p
					and	nr_prioridade = ie_prioridade_p)
	and	((ie_categ_lib_estab_w = 'N') or (Obter_Se_Categoria_Lib_Estab(cd_estabelecimento_p, cd_convenio_p, cd_categoria) = 'S'));

c007 CURSOR FOR
	SELECT	cd_categoria
	from	categoria_convenio
	where	cd_convenio = cd_convenio_p
	and	ie_situacao	= 'A'
	and	cd_categoria not in (	SELECT 	cd_categoria
					from	convenio_preco_mat
					where	cd_estabelecimento = cd_estabelecimento_p
					and	cd_convenio = cd_convenio_p
					and	dt_liberacao_tabela = dt_inicio_vigencia_p)
	and	((ie_categ_lib_estab_w = 'N') or (Obter_Se_Categoria_Lib_Estab(cd_estabelecimento_p, cd_convenio_p, cd_categoria) = 'S'));

c008 CURSOR FOR
	SELECT	cd_categoria
	from	categoria_convenio
	where	cd_convenio = cd_convenio_p
	and	ie_situacao	= 'A'
	and	cd_categoria not in (	SELECT 	cd_categoria
					from	convenio_simpro
					where	nr_sequencia	= nr_sequencia_p)
	and	((ie_categ_lib_estab_w = 'N') or (Obter_Se_Categoria_Lib_Estab(cd_estabelecimento_p, cd_convenio_p, cd_categoria) = 'S'));


BEGIN

ie_todas_categorias_w := Obter_Param_Usuario(921, 42, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_todas_categorias_w);
ie_categ_lib_estab_w := Obter_Param_Usuario(921, 102, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_categ_lib_estab_w);

select	max(ie_situacao)
into STRICT	ie_situacao_w
from	categoria_convenio
where	cd_convenio	= cd_convenio_p
and	cd_categoria	= cd_categoria_p;

if (ie_situacao_w	= 'I') and (tabela_p <> 11) then
	--A categoria selecionada esta inativa, nao pode ser duplicada.
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(189218);
end if;

if	tabela_p = 1	then	/* convenio_brasindice */
begin
	select	cd_convenio,
		cd_categoria,
		dt_inicio_vigencia,
		tx_preco_fabrica,
		tx_brasindice_pmc,
		nm_usuario,
		ie_situacao,
		qt_dia_fixo,
		dt_base_fixo,
		tx_pmc_neg,
		tx_pmc_pos,
		cd_grupo_material,
		cd_classe_material,
		cd_subgrupo_material,
		nr_seq_estrutura,
		ie_tipo_material,
		tx_pfb_neg,
		tx_pfb_pos,
		ie_dividir_indice_pmc,
		ie_dividir_indice_pfb,
		ie_tipo_atendimento,
		dt_final_vigencia,
		cd_plano,
		vl_minimo,
		vl_maximo
	into STRICT
		cd_convenio_w,
		cd_categoria_w,
		dt_inicio_vigencia_w,
		tx_preco_fabrica_w,
		tx_brasindice_pmc_w,
		nm_usuario_w,
		ie_situacao_w,
		qt_dia_fixo_w,
		dt_base_fixo_w,
		tx_pmc_neg_w,
		tx_pmc_pos_w,
		cd_grupo_material_w,
		cd_classe_material_w,
		cd_subgrupo_material_w,
		nr_seq_estrutura_w,
		ie_tipo_material_ww,
		tx_pfb_neg_ww,
		tx_pfb_pos_ww,
		ie_dividir_indice_pmc_w,
		ie_dividir_indice_pfb_w,
		ie_tipo_atendimento_w,
		dt_final_vigencia_w,
		cd_plano_w,
		vl_minimo_brasind_w,
		vl_maximo_brasind_w
	from	convenio_brasindice
	where	nr_sequencia = nr_sequencia_p;

	open c001;
	loop
		fetch	c001	into
			cd_categoria_convenio_w;
		EXIT WHEN NOT FOUND; /* apply on c001 */
		if (cd_categoria_convenio_w <> cd_categoria_w)	then

			insert into convenio_brasindice(cd_convenio,
				cd_categoria,
				dt_inicio_vigencia,
				tx_preco_fabrica,
				tx_brasindice_pmc,
				dt_atualizacao,
				nm_usuario,
				ie_situacao,
				qt_dia_fixo,
				dt_base_fixo,
				cd_estabelecimento,
				tx_pmc_neg,
				tx_pmc_pos,
				nr_sequencia,
				cd_grupo_material,
				cd_classe_material,
				cd_subgrupo_material,
				nr_seq_estrutura,
				ie_tipo_material,
				tx_pfb_neg,
				tx_pfb_pos,
				ie_dividir_indice_pmc,
				ie_dividir_indice_pfb,
				ie_tipo_atendimento,
				dt_final_vigencia,
				cd_plano,
				vl_minimo,
				vl_maximo)
			values (cd_convenio_w,
				cd_categoria_convenio_w,
				dt_inicio_vigencia_w,
				tx_preco_fabrica_w,
				tx_brasindice_pmc_w,
				clock_timestamp(),
				nm_usuario_p,
				ie_situacao_w,
				qt_dia_fixo_w,
				dt_base_fixo_w,
				cd_estabelecimento_p,
				tx_pmc_neg_w,
				tx_pmc_pos_w,
				nextval('convenio_brasindice_seq'),
				cd_grupo_material_w,
				cd_classe_material_w,
				cd_subgrupo_material_w,
				nr_seq_estrutura_w,
				ie_tipo_material_ww,
				tx_pfb_neg_ww,
				tx_pfb_pos_ww,
				ie_dividir_indice_pmc_w,
				ie_dividir_indice_pfb_w,
				ie_tipo_atendimento_w,
				dt_final_vigencia_w,
				cd_plano_w,
				vl_minimo_brasind_w,
				vl_maximo_brasind_w);
		end if;
	end loop;
	close c001;
end;
elsif (tabela_p = 2)	then      /* regra_ajuste_procedimento */
begin
	select 	nr_sequencia,
		cd_estabelecimento,
		cd_convenio,
		dt_inicio_vigencia,
		ie_situacao,
		nm_usuario,
		cd_categoria,
		cd_edicao_amb,
		cd_area_procedimento,
		cd_especialidade,
		cd_grupo_proc,
		cd_procedimento,
		ie_origem_proced,
		ie_preco_informado,
		vl_proc_ajustado,
		ie_glosa,
		cd_procedimento_esp,
		tx_ajuste,
		nr_seq_regra_preco,
		dt_final_vigencia,
		cd_tipo_acomodacao,
		ie_tipo_atendimento,
		cd_setor_atendimento,
		vl_medico,
		vl_custo_operacional,
		qt_filme,
		nr_auxiliares,
		qt_porte_anestesico,
		tx_ajuste_custo_oper,
		tx_ajuste_medico,
		tx_ajuste_filme,
		ie_credenciado,
		pr_glosa,
		cd_cid,
		qt_idade_min,
		qt_idade_max,
		nr_seq_proc_interno,
		nr_seq_exame,
		cd_plano,
		ie_clinica,
		cd_empresa_ref,
		cd_motivo_exc_conta,
		cd_medico,
		coalesce(ie_atend_retorno,'A'),
		ie_autor_particular,
		nr_seq_grupo,
		nr_seq_subgrupo,
		nr_seq_forma_org,
		cd_setor_atend_prescr,
		cd_tabela_servico,
		nr_seq_grupo_lab,
		nr_seq_grupo_int,
		nr_seq_espec_int,
		nr_seq_area_int,
		nr_seq_estrutura,
		ie_ignora_ch_edicao_amb,
		ie_spect,
		ie_consiste_prescr,
		ie_paciente_deficiente,
		ie_estrangeiro,
		ds_observacao,
		ie_utiliza_video,
		ie_prior_edicao_ajuste
	into STRICT	nr_sequencia_w,
		cd_estabelecimento_w,
		cd_convenio_w,
		dt_inicio_vigencia_w,
		ie_situacao_w,
		nm_usuario_w,
		cd_categoria_w,
		cd_edicao_amb_w,
		cd_area_procedimento_w,
		cd_especialidade_w,
		cd_grupo_proc_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		ie_preco_informado_w,
		vl_proc_ajustado_w,
		ie_glosa_w,
		cd_procedimento_esp_w,
		tx_ajuste_w,
		nr_seq_regra_preco_w,
		dt_final_vigencia_w,
		cd_tipo_acomodacao_w,
		ie_tipo_atendimento_w,
		cd_setor_atendimento_w,
		vl_medico_w,
		vl_custo_operacional_w,
		qt_filme_w,
		nr_auxiliares_w,
		qt_porte_anestesico_w,
		tx_ajuste_custo_oper_w,
		tx_ajuste_medico_w,
		tx_ajuste_filme_w,
		ie_credenciado_w,
		pr_glosa_w,
		cd_cid_w,
		qt_idade_min_w,
		qt_idade_max_w,
		nr_seq_proc_interno_w,
		nr_seq_exame_w,
		cd_plano_w,
		ie_clinica_w,
		cd_empresa_ref_w,
		cd_motivo_exc_conta_w,
		cd_medico_w,
		ie_atend_retorno_w,
		ie_autor_particular_w,
		nr_seq_grupo_w,
		nr_seq_subgrupo_w,
		nr_seq_forma_org_w,
		cd_setor_atend_prescr_w,
		cd_tabela_servico_w,
		nr_seq_grupo_lab_w,
		nr_seq_grupo_int_w,
		nr_seq_espec_int_w,
		nr_seq_area_int_w,
		nr_seq_estrutura_ww,
		ie_ignora_ch_edicao_amb_w,
		ie_spect_w,
		ie_consiste_prescr_w,
		ie_paciente_deficiente_w,
		ie_estrangeiro_w,
		ds_observacao_w,
		ie_utiliza_video_w,
		ie_prior_edicao_ajuste_w
	from 	regra_ajuste_proc
	where 	nr_sequencia = nr_sequencia_p;

	if (ie_todas_categorias_w = 'S') then
		open	c002;
		loop
			fetch	c002	into
				cd_categoria_convenio_w;
			EXIT WHEN NOT FOUND; /* apply on c002 */
			if (cd_categoria_convenio_w <> cd_categoria_w)	then
			begin
			insert into regra_ajuste_proc(nr_sequencia,
				cd_estabelecimento,
				cd_convenio,
				dt_inicio_vigencia,
				ie_situacao,
				dt_atualizacao,
				nm_usuario,
				cd_categoria,
				cd_edicao_amb,
				cd_area_procedimento,
				cd_especialidade,
				cd_grupo_proc,
				cd_procedimento,
				ie_origem_proced,
				ie_preco_informado,
				vl_proc_ajustado,
				ie_glosa,
				cd_procedimento_esp,
				tx_ajuste,
				nr_seq_regra_preco,
				dt_final_vigencia,
				cd_tipo_acomodacao,
				ie_tipo_atendimento,
				cd_setor_atendimento,
				vl_medico,
				vl_custo_operacional,
				qt_filme,
				nr_auxiliares,
				qt_porte_anestesico,
				tx_ajuste_custo_oper,
				tx_ajuste_medico,
				tx_ajuste_filme,
				ie_credenciado,
				pr_glosa,
				cd_cid,
				qt_idade_min,
				qt_idade_max,
				nr_seq_proc_interno,
				nr_seq_exame,
				cd_plano,
				ie_clinica,
				cd_empresa_ref,
				cd_motivo_exc_conta,
				cd_medico,
				ie_atend_retorno,
				ie_autor_particular,
				nr_seq_grupo,
				nr_seq_subgrupo,
				nr_seq_forma_org,
				cd_setor_atend_prescr,
				cd_tabela_servico,
				nr_seq_grupo_lab,
				nr_seq_grupo_int,
				nr_seq_espec_int,
				nr_seq_area_int,
				nr_seq_estrutura,
				ie_ignora_ch_edicao_amb,
				ie_spect,
				ie_consiste_prescr,
				ie_paciente_deficiente,
				ie_estrangeiro,
				ds_observacao,
				ie_utiliza_video,
				ie_prior_edicao_ajuste)
			values (nextval('regra_ajuste_proc_seq'),
				cd_estabelecimento_w,
				cd_convenio_w,
				dt_inicio_vigencia_w,
				ie_situacao_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_categoria_convenio_w,
				cd_edicao_amb_w,
				cd_area_procedimento_w,
				cd_especialidade_w,
				cd_grupo_proc_w,
				cd_procedimento_w,
				ie_origem_proced_w,
				ie_preco_informado_w,
				vl_proc_ajustado_w,
				ie_glosa_w,
				cd_procedimento_esp_w,
				tx_ajuste_w,
				nr_seq_regra_preco_w,
				dt_final_vigencia_w,
				cd_tipo_acomodacao_w,
				ie_tipo_atendimento_w,
				cd_setor_atendimento_w,
				vl_medico_w,
				vl_custo_operacional_w,
				qt_filme_w,
				nr_auxiliares_w,
				qt_porte_anestesico_w,
				tx_ajuste_custo_oper_w,
				tx_ajuste_medico_w,
				tx_ajuste_filme_w,
				ie_credenciado_w,
				pr_glosa_w,
				cd_cid_w,
				qt_idade_min_w,
				qt_idade_max_w,
				nr_seq_proc_interno_w,
				nr_seq_exame_w,
				cd_plano_w,
				ie_clinica_w,
				cd_empresa_ref_w,
				cd_motivo_exc_conta_w,
				cd_medico_w,
				ie_atend_retorno_w,
				ie_autor_particular_w,
				nr_seq_grupo_w,
				nr_seq_subgrupo_w,
				nr_seq_forma_org_w,
				cd_setor_atend_prescr_w,
				cd_tabela_servico_w,
				nr_seq_grupo_lab_w,
				nr_seq_grupo_int_w,
				nr_seq_espec_int_w,
				nr_seq_area_int_w,
				nr_seq_estrutura_ww,
				ie_ignora_ch_edicao_amb_w,
				ie_spect_w,
				ie_consiste_prescr_w,
				ie_paciente_deficiente_w,
				ie_estrangeiro_w,
				ds_observacao_w,
				ie_utiliza_video_w,
				ie_prior_edicao_ajuste_w);
			end;
			end if;
		end loop;
		close c002;
	else
		insert into regra_ajuste_proc(nr_sequencia,
			cd_estabelecimento,
			cd_convenio,
			dt_inicio_vigencia,
			ie_situacao,
			dt_atualizacao,
			nm_usuario,
			cd_categoria,
			cd_edicao_amb,
			cd_area_procedimento,
			cd_especialidade,
			cd_grupo_proc,
			cd_procedimento,
			ie_origem_proced,
			ie_preco_informado,
			vl_proc_ajustado,
			ie_glosa,
			cd_procedimento_esp,
			tx_ajuste,
			nr_seq_regra_preco,
			dt_final_vigencia,
			cd_tipo_acomodacao,
			ie_tipo_atendimento,
			cd_setor_atendimento,
			vl_medico,
			vl_custo_operacional,
			qt_filme,
			nr_auxiliares,
			qt_porte_anestesico,
			tx_ajuste_custo_oper,
			tx_ajuste_medico,
			tx_ajuste_filme,
			ie_credenciado,
			pr_glosa,
			cd_cid,
			qt_idade_min,
			qt_idade_max,
			nr_seq_proc_interno,
			nr_seq_exame,
			cd_plano,
			ie_clinica,
			cd_empresa_ref,
			cd_motivo_exc_conta,
			cd_medico,
			ie_atend_retorno,
			ie_autor_particular,
			nr_seq_grupo,
			nr_seq_subgrupo,
			nr_seq_forma_org,
			cd_setor_atend_prescr,
			cd_tabela_servico,
			nr_seq_grupo_lab,
			nr_seq_grupo_int,
			nr_seq_espec_int,
			nr_seq_area_int,
			nr_seq_estrutura,
			ie_ignora_ch_edicao_amb,
			ie_spect,
			ie_consiste_prescr,
			ie_paciente_deficiente,
			ie_estrangeiro,
			ds_observacao,
			ie_utiliza_video,
			ie_prior_edicao_ajuste)
		values (nextval('regra_ajuste_proc_seq'),
			cd_estabelecimento_w,
			cd_convenio_w,
			dt_inicio_vigencia_w,
			ie_situacao_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_categoria_w,
			cd_edicao_amb_w,
			cd_area_procedimento_w,
			cd_especialidade_w,
			cd_grupo_proc_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			ie_preco_informado_w,
			vl_proc_ajustado_w,
			ie_glosa_w,
			cd_procedimento_esp_w,
			tx_ajuste_w,
			nr_seq_regra_preco_w,
			dt_final_vigencia_w,
			cd_tipo_acomodacao_w,
			ie_tipo_atendimento_w,
			cd_setor_atendimento_w,
			vl_medico_w,
			vl_custo_operacional_w,
			qt_filme_w,
			nr_auxiliares_w,
			qt_porte_anestesico_w,
			tx_ajuste_custo_oper_w,
			tx_ajuste_medico_w,
			tx_ajuste_filme_w,
			ie_credenciado_w,
			pr_glosa_w,
			cd_cid_w,
			qt_idade_min_w,
			qt_idade_max_w,
			nr_seq_proc_interno_w,
			nr_seq_exame_w,
			cd_plano_w,
			ie_clinica_w,
			cd_empresa_ref_w,
			cd_motivo_exc_conta_w,
			cd_medico_w,
			ie_atend_retorno_w,
			ie_autor_particular_w,
			nr_seq_grupo_w,
			nr_seq_subgrupo_w,
			nr_seq_forma_org_w,
			cd_setor_atend_prescr_w,
			cd_tabela_servico_w,
			nr_seq_grupo_lab_w,
			nr_seq_grupo_int_w,
			nr_seq_espec_int_w,
			nr_seq_area_int_w,
			nr_seq_estrutura_ww,
			ie_ignora_ch_edicao_amb_w,
			ie_spect_w,
			ie_consiste_prescr_w,
			ie_paciente_deficiente_w,
			ie_estrangeiro_w,
			ds_observacao_w,
			ie_utiliza_video_w,
			ie_prior_edicao_ajuste_w);
	end if;
end;
elsif (tabela_p = 3)	then 		/* regra_ajuste_material */
begin
	select 	nr_sequencia,
		cd_estabelecimento,
		cd_convenio,
		dt_inicio_vigencia,
		ie_situacao,
		cd_categoria,
		cd_grupo_material,
		cd_subgrupo_material,
		cd_classe_material,
		cd_material,
		tx_ajuste,
		vl_negociado,
		ie_preco_informado,
		ie_glosa,
		tx_brasindice_pfb,
		tx_brasindice_pmc,
		tx_afaturar,
		dt_final_vigencia,
		cd_tipo_acomodacao,
		ie_tipo_atendimento,
		cd_setor_atendimento,
		ie_origem_preco,
		ie_precedencia_preco,
		pr_glosa,
		ie_tipo_material,
		tx_pmc_neg,
		tx_pmc_pos,
		cd_cid,
		cd_tabela_preco,
		cd_motivo_exc_conta,
		ie_sexo,
		cd_plano,
		ie_autor_particular,
		tx_pfb_neg,
		tx_pfb_pos,
		ie_clinica,
		IE_KIT_MATERIAL,
		ie_tipo_preco_autor
	into STRICT	nr_sequencia_w,
		cd_estabelecimento_w,
		cd_convenio_w,
		dt_inicio_vigencia_w,
		ie_situacao_w,
		cd_categoria_w,
		cd_grupo_material_w,
		cd_subgrupo_material_w,
		cd_classe_material_w,
		cd_material_w,
		tx_ajuste_w,
		vl_negociado_w,
		ie_preco_informado_w,
		ie_glosa_w,
		tx_brasindice_pfb_w,
		tx_brasindice_pmc_w,
		tx_afaturar_w,
		dt_final_vigencia_w,
		cd_tipo_acomodacao_w,
		ie_tipo_atendimento_w,
		cd_setor_atendimento_w,
		ie_origem_preco_w,
		ie_precedencia_preco_w,
		pr_glosa_w,
		ie_tipo_material_w,
		tx_pmc_neg_w,
		tx_pmc_pos_w,
		cd_cid_w,
		cd_tabela_preco_w,
		cd_motivo_exc_conta_w,
		ie_sexo_w,
		cd_plano_w,
		ie_autor_particular_w,
		tx_pfb_neg_w,
		tx_pfb_pos_w,
		ie_clinica_w,
		IE_KIT_MATERIAL_w,
		ie_tipo_preco_autor_w
	from 	regra_ajuste_material
	where 	nr_sequencia = nr_sequencia_p;

	if (ie_todas_categorias_w = 'S') then
		open	c002;
		loop
			fetch	c002	into
				cd_categoria_convenio_w;
			EXIT WHEN NOT FOUND; /* apply on c002 */
			if (cd_categoria_convenio_w <> cd_categoria_w)	then
			begin
			insert into regra_ajuste_material(nr_sequencia,
				cd_estabelecimento,
				cd_convenio,
				dt_inicio_vigencia,
				ie_situacao,
				dt_atualizacao,
				nm_usuario,
				cd_categoria,
				cd_grupo_material,
				cd_subgrupo_material,
				cd_classe_material,
				cd_material,
				tx_ajuste,
				vl_negociado,
				ie_preco_informado,
				ie_glosa,
				tx_brasindice_pfb,
				tx_brasindice_pmc,
				tx_afaturar,
				dt_final_vigencia,
				cd_tipo_acomodacao,
				ie_tipo_atendimento,
				cd_setor_atendimento,
				ie_origem_preco,
				ie_precedencia_preco,
				pr_glosa,
				ie_tipo_material,
				tx_pmc_neg,
				tx_pmc_pos,
				cd_cid,
				cd_tabela_preco,
				cd_motivo_exc_conta,
				ie_sexo,
				cd_plano,
				ie_autor_particular,
				tx_pfb_neg,
				tx_pfb_pos,
				ie_clinica,
				IE_KIT_MATERIAL,
				ie_tipo_preco_autor)
			values (nextval('regra_ajuste_material_seq'),
				cd_estabelecimento_w,
				cd_convenio_w,
				dt_inicio_vigencia_w,
				ie_situacao_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_categoria_convenio_w,
				cd_grupo_material_w,
				cd_subgrupo_material_w,
				cd_classe_material_w,
				cd_material_w,
				tx_ajuste_w,
				vl_negociado_w,
				ie_preco_informado_w,
				ie_glosa_w,
				tx_brasindice_pfb_w,
				tx_brasindice_pmc_w,
				tx_afaturar_w,
				dt_final_vigencia_w,
				cd_tipo_acomodacao_w,
				ie_tipo_atendimento_w,
				cd_setor_atendimento_w,
				ie_origem_preco_w,
				ie_precedencia_preco_w,
				pr_glosa_w,
				ie_tipo_material_w,
				tx_pmc_neg_w,
				tx_pmc_pos_w,
				cd_cid_w,
				cd_tabela_preco_w,
				cd_motivo_exc_conta_w,
				ie_sexo_w,
				cd_plano_w,
				ie_autor_particular_w,
				tx_pfb_neg_w,
				tx_pfb_pos_w,
				ie_clinica_w,
				coalesce(IE_KIT_MATERIAL_w,'T'),
				ie_tipo_preco_autor_w);
			end;
			end if;
		end loop;
		close c002;
	else
		insert into regra_ajuste_material(nr_sequencia,
			cd_estabelecimento,
			cd_convenio,
			dt_inicio_vigencia,
			ie_situacao,
			dt_atualizacao,
			nm_usuario,
			cd_categoria,
			cd_grupo_material,
			cd_subgrupo_material,
			cd_classe_material,
			cd_material,
			tx_ajuste,
			vl_negociado,
			ie_preco_informado,
			ie_glosa,
			tx_brasindice_pfb,
			tx_brasindice_pmc,
			tx_afaturar,
			dt_final_vigencia,
			cd_tipo_acomodacao,
			ie_tipo_atendimento,
			cd_setor_atendimento,
			ie_origem_preco,
			ie_precedencia_preco,
			pr_glosa,
			ie_tipo_material,
			tx_pmc_neg,
			tx_pmc_pos,
			cd_cid,
			cd_tabela_preco,
			cd_motivo_exc_conta,
			ie_sexo,
			cd_plano,
			ie_autor_particular,
			tx_pfb_neg,
			tx_pfb_pos,
			IE_KIT_MATERIAL)
		values (nextval('regra_ajuste_material_seq'),
			cd_estabelecimento_w,
			cd_convenio_w,
			dt_inicio_vigencia_w,
			ie_situacao_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_categoria_w,
			cd_grupo_material_w,
			cd_subgrupo_material_w,
			cd_classe_material_w,
			cd_material_w,
			tx_ajuste_w,
			vl_negociado_w,
			ie_preco_informado_w,
			ie_glosa_w,
			tx_brasindice_pfb_w,
			tx_brasindice_pmc_w,
			tx_afaturar_w,
			dt_final_vigencia_w,
			cd_tipo_acomodacao_w,
			ie_tipo_atendimento_w,
			cd_setor_atendimento_w,
			ie_origem_preco_w,
			ie_precedencia_preco_w,
			pr_glosa_w,
			ie_tipo_material_w,
			tx_pmc_neg_w,
			tx_pmc_pos_w,
			cd_cid_w,
			cd_tabela_preco_w,
			cd_motivo_exc_conta_w,
			ie_sexo_w,
			cd_plano_w,
			ie_autor_particular_w,
			tx_pfb_neg_w,
			tx_pfb_pos_w,
			coalesce(IE_KIT_MATERIAL_w,'T'));
	end if;
end;
elsif (tabela_p = 4)	then
begin
	select	cd_estabelecimento,
		cd_convenio,
		cd_categoria,
		ie_taxa_servico,
		cd_taxa_servico,
		qt_min_seghr_cirurgia,
		qt_min_tolerancia,
   		ie_origem_proced,
		nr_seq_evento,
		nr_seq_proc_interno,
		ie_situacao
	into STRICT	cd_estabelecimento_w,
		cd_convenio_w,
		cd_categoria_w,
		ie_taxa_servico_w,
		cd_taxa_servico_w,
		qt_min_seghr_cirurgia_w,
		qt_min_tolerancia_w,
   		ie_origem_proced_w,
		nr_seq_evento_w,
		nr_seq_proc_interno_w,
		ie_situacao_w
	from	convenio_taxa_servico
	where	cd_convenio = cd_convenio_p
	and	ie_taxa_servico = ie_taxa_servico_p
	and	cd_categoria = cd_categoria_p
	and	cd_estabelecimento = cd_estabelecimento_p;

	open	c003;
	loop
		fetch	c003	into
			cd_categoria_convenio_w;
		EXIT WHEN NOT FOUND; /* apply on c003 */
		if (cd_categoria_convenio_w <> cd_categoria_w)	then
		begin
			insert into convenio_taxa_servico(cd_estabelecimento,
				cd_convenio,
				cd_categoria,
				ie_taxa_servico,
				cd_taxa_servico,
				dt_atualizacao,
				nm_usuario,
				qt_min_seghr_cirurgia,
				qt_min_tolerancia,
				ie_origem_proced,
				nr_seq_evento,
				nr_seq_proc_interno,
				ie_situacao)
			values (cd_estabelecimento_w,
				cd_convenio_w,
				cd_categoria_convenio_w,
				ie_taxa_servico_w,
				cd_taxa_servico_w,
				clock_timestamp(),
				nm_usuario_p,
				qt_min_seghr_cirurgia_w,
				qt_min_tolerancia_w,
				ie_origem_proced_w,
				nr_seq_evento_w,
				nr_seq_proc_interno_w,
				ie_situacao_w);
		end;
		end if;
	end loop;
	close c003;
end;
elsif (tabela_p = 5)	then
begin
	select	cd_estabelecimento,
		cd_categoria,
		nr_porte_anestesico,
		cd_taxa_cirurgia,
		ie_origem_proced,
		cd_setor_atendimento,
		ie_tipo_atendimento,
		coalesce(ie_tipo_regra,'C'),
		cd_tipo_acomodacao,
		nr_seq_proc_interno
	into STRICT	cd_estabelecimento_w,
		cd_categoria_w,
		nr_porte_anestesico_w,
		cd_taxa_cirurgia_w,
		ie_origem_proced_w,
		cd_setor_atendimento_w,
		ie_tipo_atendimento_w,
		ie_tipo_regra_w,
		cd_tipo_acomodacao_w,
		nr_seq_proc_interno_w
	from	convenio_taxa_cirurgia
	where	nr_sequencia = nr_sequencia_p;

	if (ie_todas_categorias_w = 'S') then

		open	c002;
		loop
			fetch	c002	into
				cd_categoria_convenio_w;
			EXIT WHEN NOT FOUND; /* apply on c002 */
			if (cd_categoria_w <> cd_categoria_convenio_w)	then
			begin
				insert into convenio_taxa_cirurgia(cd_estabelecimento,
					cd_convenio,
					cd_categoria,
					nr_porte_anestesico,
					cd_taxa_cirurgia,
					dt_atualizacao,
					nm_usuario,
					ie_origem_proced,
					cd_setor_atendimento,
					ie_tipo_atendimento,
					nr_sequencia,
					ie_tipo_regra,
					cd_tipo_acomodacao,
					nr_seq_proc_interno)
				values (cd_estabelecimento_w,
					cd_convenio_p,
					cd_categoria_convenio_w,
					nr_porte_anestesico_w,
					cd_taxa_cirurgia_w,
					clock_timestamp(),
					nm_usuario_p,
					ie_origem_proced_w,
					cd_setor_atendimento_w,
					ie_tipo_atendimento_w,
					nextval('convenio_taxa_cirurgia_seq'),
					ie_tipo_regra_w,
					cd_tipo_acomodacao_w,
					nr_seq_proc_interno_w);
			end;
			end if;
		end loop;
		close c002;
	else
		insert into convenio_taxa_cirurgia(cd_estabelecimento,
			cd_convenio,
			cd_categoria,
			nr_porte_anestesico,
			cd_taxa_cirurgia,
			dt_atualizacao,
			nm_usuario,
			ie_origem_proced,
			cd_setor_atendimento,
			ie_tipo_atendimento,
			nr_sequencia,
			ie_tipo_regra,
			cd_tipo_acomodacao,
			nr_seq_proc_interno)
		values (cd_estabelecimento_w,
			cd_convenio_p,
			cd_categoria_w,
			nr_porte_anestesico_w,
			cd_taxa_cirurgia_w,
			clock_timestamp(),
			nm_usuario_p,
			ie_origem_proced_w,
			cd_setor_atendimento_w,
			ie_tipo_atendimento_w,
			nextval('convenio_taxa_cirurgia_seq'),
			ie_tipo_regra_w,
			cd_tipo_acomodacao_w,
			nr_seq_proc_interno_w);
	end if;
end;
elsif (tabela_p = 6)	then
begin
	select	cd_estabelecimento,
		cd_convenio,
		cd_categoria,
		cd_procedimento,
		ie_origem_proced,
		tx_procedimento,
		ie_criterio_taxa,
		ie_evento_calculo,
		ie_origem_taxa,
		cd_especialidade,
		cd_grupo_proc,
		cd_area_procedimento,
		ie_situacao
	into STRICT	cd_estabelecimento_w,
		cd_convenio_w,
		cd_categoria_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		tx_procedimento_w,
		ie_criterio_taxa_w,
		ie_evento_calculo_w,
		ie_origem_taxa_w,
		cd_especialidade_w,
		cd_grupo_proc_w,
		cd_area_procedimento_w,
		ie_situacao_ww
	from	convenio_taxa_exame
	where	nr_sequencia = nr_sequencia_p;
	open	c004;
	loop
		fetch	c004	into
			cd_categoria_convenio_w;
		EXIT WHEN NOT FOUND; /* apply on c004 */
		if (cd_categoria_w <> cd_categoria_convenio_w)	then
		begin
			insert into convenio_taxa_exame(cd_estabelecimento,
				cd_convenio,
				cd_categoria,
				cd_procedimento,
				cd_taxa_exame,
				dt_atualizacao,
				nm_usuario,
				ie_origem_proced,
				tx_procedimento,
				ie_criterio_taxa,
				ie_evento_calculo,
				ie_origem_taxa,
				ie_regra_filme,
				nr_sequencia,
				cd_especialidade,
				cd_grupo_proc,
				cd_area_procedimento,
				ie_situacao)
			values (cd_estabelecimento_w,
				cd_convenio_w,
				cd_categoria_convenio_w,
				cd_procedimento_p,
				cd_taxa_exame_p,
				clock_timestamp(),
				nm_usuario_p,
				ie_origem_proced_w,
				tx_procedimento_w,
				ie_criterio_taxa_w,
				ie_evento_calculo_w,
				ie_origem_taxa_w,
				ie_regra_filme_p,
				nextval('convenio_taxa_exame_seq'),
				cd_especialidade_w,
				cd_grupo_proc_w,
				cd_area_procedimento_w,
				ie_situacao_ww);
		end;
		end if;
	end loop;
	close c004;
end;
elsif (tabela_p = 7)	then
begin
	select	tx_ajuste_geral,
		vl_ch_honorarios,
		vl_ch_custo_oper,
		vl_filme,
		ie_situacao,
		nr_seq_tiss_tabela
	into STRICT	tx_ajuste_geral_w,
		vl_ch_honorarios_w,
		vl_ch_custo_oper_w,
		vl_filme_w,
		ie_situacao_w,
		nr_seq_tiss_tabela_w
	from	convenio_amb
	where	cd_estabelecimento = cd_estabelecimento_p
	and	cd_convenio = cd_convenio_p
	and	cd_categoria = cd_categoria_p
	and	dt_inicio_vigencia = dt_inicio_vigencia_p
	and	ie_prioridade = ie_prioridade_p;
	open	c005;
	loop
		fetch	c005	into
			cd_categoria_convenio_w;
		EXIT WHEN NOT FOUND; /* apply on c005 */
		if (cd_categoria_convenio_w <> cd_categoria_p)	then
		begin
			insert into convenio_amb(cd_estabelecimento,
				cd_convenio,
				cd_categoria,
				dt_inicio_vigencia,
				ie_prioridade,
				cd_edicao_amb,
				tx_ajuste_geral,
				dt_atualizacao,
				nm_usuario,
				vl_ch_honorarios,
				vl_ch_custo_oper,
				vl_filme,
				ie_situacao,
				nr_seq_tiss_tabela)
			values (cd_estabelecimento_p,
				cd_convenio_p,
				cd_categoria_convenio_w,
				dt_inicio_vigencia_p,
				ie_prioridade_p,
				cd_edicao_amb_p,
				tx_ajuste_geral_w,
				clock_timestamp(),
				nm_usuario_p,
				vl_ch_honorarios_w,
				vl_ch_custo_oper_w,
				vl_filme_w,
				ie_situacao_w,
				nr_seq_tiss_tabela_w);
		end;
		end if;
	end loop;
	close	c005;
end;
elsif (tabela_p = 8)	then
begin
	select	dt_liberacao_tabela,
		ie_situacao,
		nr_prioridade,
		nr_seq_tiss_tabela,
		dt_termino,
		tx_ajuste_geral
	into STRICT	dt_liberacao_tabela_w,
		ie_situacao_w,
		nr_prioridade_w,
		nr_seq_tiss_tabela_w,
		dt_termino_w,
		tx_ajuste_geral_w
	from	convenio_servico
	where	nr_sequencia = nr_sequencia_p;
	open c006;
	loop
		fetch c006 into
			cd_categoria_convenio_w;
		EXIT WHEN NOT FOUND; /* apply on c006 */
		if (cd_categoria_convenio_w <> cd_categoria_p)	then
		begin
			insert into convenio_servico(nr_sequencia,
				cd_estabelecimento,
				cd_convenio,
				cd_categoria,
				dt_liberacao_tabela,
				cd_tabela_servico,
				dt_atualizacao,
				nm_usuario,
				ie_situacao,
				nr_prioridade,
				nr_seq_tiss_tabela,
				dt_termino,
				tx_ajuste_geral)
			values (nextval('convenio_servico_seq'),
				cd_estabelecimento_p,
				cd_convenio_p,
				cd_categoria_convenio_w,
				dt_liberacao_tabela_w,
				cd_tabela_servico_p,
				clock_timestamp(),
				nm_usuario_p,
				ie_situacao_w,
				nr_prioridade_w,
				nr_seq_tiss_tabela_w,
				dt_termino_w,
				tx_ajuste_geral_w);
		end;
		end if;
	end loop;
	close c006;
end;
elsif (tabela_p = 9)	then
begin
	select	tx_ajuste_tabela_mat,
		ie_situacao,
		nr_prioridade,
		dt_inicio_vigencia,
		dt_final_vigencia,
		ie_tab_adicional,
		cd_tab_mat_atualizacao,
		ie_integracao_opme
	into STRICT	tx_ajuste_tabela_mat_w,
		ie_situacao_w,
		nr_prioridade_w,
		dt_inicio_vigencia_w,
		dt_final_vigencia_w,
		ie_tab_adicional_w,
		cd_tab_mat_atualizacao_w,
		ie_integracao_opme_w
	from	convenio_preco_mat
	where	cd_estabelecimento = cd_estabelecimento_p
	and	cd_convenio = cd_convenio_p
	and	cd_categoria = cd_categoria_p
	and	dt_liberacao_tabela = dt_inicio_vigencia_p;
	open	c007;
	loop
		fetch c007 into
			cd_categoria_convenio_w;
		EXIT WHEN NOT FOUND; /* apply on c007 */
		if (cd_categoria_p <> cd_categoria_convenio_w)	then
		begin
			insert into convenio_preco_mat(
				cd_estabelecimento,
				cd_convenio,
				cd_categoria,
				dt_liberacao_tabela,
				cd_tab_preco_mat,
				dt_atualizacao,
				nm_usuario,
				tx_ajuste_tabela_mat,
				ie_situacao,
				nr_prioridade,
				dt_inicio_vigencia,
				dt_final_vigencia,
				ie_tab_adicional,
				cd_tab_mat_atualizacao,
				ie_integracao_opme)
			values (cd_estabelecimento_p,
				cd_convenio_p,
				cd_categoria_convenio_w,
				dt_inicio_vigencia_p,
				cd_tab_preco_mat_p,
				clock_timestamp(),
				nm_usuario_p,
				tx_ajuste_tabela_mat_w,
				ie_situacao_w,
				nr_prioridade_w,
				dt_inicio_vigencia_w,
				dt_final_vigencia_w,
				ie_tab_adicional_w,
				cd_tab_mat_atualizacao_w,
				ie_integracao_opme_w);
		end;
		end if;
	end loop;
	close c007;
end;
elsif (tabela_p = 10)	then
begin
	select	tx_preco_fabrica,
		tx_pmc,
		ie_situacao,
		qt_dia_fixo,
		dt_base_fixo,
		ie_tipo_preco,
		cd_grupo_material,
		cd_classe_material,
		cd_subgrupo_material,
		vl_minimo,
		vl_maximo,
		ie_primeira_versao
	into STRICT	tx_preco_fabrica_w,
		tx_pmc_w,
		ie_situacao_w,
		qt_dia_fixo_w,
		dt_base_fixo_w,
		ie_tipo_preco_w,
		cd_grupo_material_w,
		cd_classe_material_w,
		cd_subgrupo_material_w,
		vl_minimo_simpro_w,
		vl_maximo_simpro_w,
		ie_primeira_versao_w
	from	convenio_simpro
	where	nr_sequencia	= nr_sequencia_p;
	open	c008;
	loop
		fetch c008 into
			cd_categoria_convenio_w;
		EXIT WHEN NOT FOUND; /* apply on c008 */
		if (cd_categoria_p <> cd_categoria_convenio_w)	then
		begin
			insert into convenio_simpro(
				nr_sequencia,
				cd_convenio,
				cd_categoria,
				dt_inicio_vigencia,
				dt_atualizacao,
				nm_usuario,
				tx_preco_fabrica,
				tx_pmc,
				ie_situacao,
				dt_base_fixo,
				qt_dia_fixo,
				ie_tipo_preco,
				cd_grupo_material,
				cd_classe_material,
				cd_subgrupo_material,
				vl_minimo,
				vl_maximo,
				ie_primeira_versao)
			values (nextval('convenio_simpro_seq'),
				cd_convenio_p,
				cd_categoria_convenio_w,
				dt_inicio_vigencia_p,
				clock_timestamp(),
				nm_usuario_p,
				tx_preco_fabrica_w,
				tx_pmc_w,
				ie_situacao_w,
				dt_base_fixo_w,
				qt_dia_fixo_w,
				ie_tipo_preco_w,
				cd_grupo_material_w,
				cd_classe_material_w,
				cd_subgrupo_material_w,
				vl_minimo_simpro_w,
				vl_maximo_simpro_w,
				ie_primeira_versao_w);
		end;
		end if;
	end loop;
	close c008;
end;
elsif (tabela_p = 11)	then

	select	nextval('convenio_preco_fornec_seq')
	into STRICT	nr_sequencia_new_w
	;

	insert into convenio_preco_fornec(
		nr_sequencia,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_convenio,
		cd_cgc_fornec,
		dt_inicio_vigencia,
		dt_fim_vigencia)
	SELECT	nr_sequencia_new_w,
		cd_estabelecimento,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_convenio,
		cd_cgc_fornec,
		dt_inicio_vigencia,
		dt_fim_vigencia
	from	convenio_preco_fornec
	where	nr_sequencia 		= nr_sequencia_p
	and	cd_estabelecimento 	= cd_estabelecimento_p;

	insert into convenio_preco_mat_fornec(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_conv_preco,
		cd_material,
		vl_material )
	SELECT	nextval('convenio_preco_mat_fornec_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_sequencia_new_w,
		cd_material,
		vl_material
	from	convenio_preco_mat_fornec
	where	nr_seq_conv_preco	= nr_sequencia_p;

elsif (tabela_p = 12) then

	select	nextval('convenio_preco_fornec_seq')
	into STRICT	nr_sequencia_new_w
	;

	insert into convenio_preco_fornec(
		nr_sequencia,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_convenio,
		cd_cgc_fornec,
		dt_inicio_vigencia,
		dt_fim_vigencia)
	SELECT	nr_sequencia_new_w,
		cd_estabelecimento,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_convenio_p,
		cd_cgc_fornec,
		dt_inicio_vigencia,
		dt_fim_vigencia
	from	convenio_preco_fornec
	where	nr_sequencia 		= nr_sequencia_p
	and	cd_estabelecimento 	= cd_estabelecimento_p;

	insert into convenio_preco_mat_fornec(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_conv_preco,
		cd_material,
		vl_material )
	SELECT	nextval('convenio_preco_mat_fornec_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_sequencia_new_w,
		cd_material,
		vl_material
	from	convenio_preco_mat_fornec
	where	nr_seq_conv_preco	= nr_sequencia_p;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicar_regra_preco ( nr_sequencia_p bigint, tabela_p bigint, cd_convenio_p text, nm_usuario_p text, cd_categoria_p text, dt_inicio_vigencia_p timestamp, ie_taxa_servico_p bigint, cd_tab_preco_mat_p bigint, cd_tabela_servico_p bigint, cd_procedimento_p bigint, cd_taxa_exame_p bigint, cd_estabelecimento_p bigint, ie_regra_filme_p text, ie_prioridade_p bigint, cd_edicao_amb_p bigint) FROM PUBLIC;

