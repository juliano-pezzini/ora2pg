-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_lote_prog (nr_seq_mes_ref_p bigint, dt_movimento_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_tipo_lote_contabil_w         lote_contabil.cd_tipo_lote_contabil%type  := 48;
ds_compl_historico_w            ctb_movimento.ds_compl_historico%type;
nr_parcela_atual_w              ctb_regra_movto_prog.qt_parcela%type;
nr_lote_contabil_w              lote_contabil.nr_lote_contabil%type;
vl_total_movto_w                ctb_regra_movto_prog.vl_saldo%type;
ctb_movimento_doc_w             ctb_online_pck.ctb_movimento_doc;
ds_erro_w                       varchar(4000);
nm_agrupador_w                  varchar(255);
qt_reg_w                        bigint;
nr_seq_agrupamento_w            bigint;
qt_dias_vigente_w               bigint;
vl_diario_w                     double precision;
qt_dia_variavel_w               bigint;
dt_referencia_w                 timestamp;
dt_mes_inicial_w                timestamp;
dt_atualizacao_saldo_w          timestamp;

c01 CURSOR FOR
    SELECT  b.nr_sequencia,
            b.ds_titulo,
            b.cd_conta_debito,
            b.cd_conta_credito,
            b.cd_centro_custo,
            b.cd_historico,
            coalesce(b.vl_parcela,0) vl_movimento,
            coalesce(coalesce(b.vl_prim_parcela,b.vl_parcela),0) vl_prim_parcela,
            b.nr_seq_mes_ref,
            b.qt_parcela,
            b.nr_seq_crit_rateio,
            b.vl_saldo,
            b.ie_tipo_parcela,
            b.dt_fim_vigencia,
            b.dt_inicio_vigencia,
            b.vl_total
    from    ctb_regra_movto_prog b
    where   ie_situacao = 'A'
    and     cd_estabelecimento      = cd_estabelecimento_p
    and     dt_referencia_w between trunc(b.dt_inicio_vigencia,'mm') and trunc(b.dt_fim_vigencia,'mm');

c01_w           c01%rowtype;


BEGIN
/* Verificar se ja existe um lote de lancamentos programados gerado no mes
Se ja existir exibe mensagem impedindo a geracao */
select  count(*)
into STRICT    qt_reg_w
from    lote_contabil
where   nr_seq_mes_ref = nr_seq_mes_ref_p
and     cd_tipo_lote_contabil   = cd_tipo_lote_contabil_w
and     cd_estabelecimento      = cd_estabelecimento_p  LIMIT 1;

/* Ja existe um lote de lancamentos programados neste mes! */

if (qt_reg_w > 0) then

        CALL wheb_mensagem_pck.exibir_mensagem_abort(274426);
end if;

begin
/*
Pegar a data do mes da contabilidade e criar o lote para os lancamentos programados
Tipo: 48 - Lancamentos programados
*/
select  dt_referencia
into STRICT    dt_referencia_w
from    ctb_mes_ref
where   nr_sequencia = nr_seq_mes_ref_p;

nr_lote_contabil_w := ctb_gerar_lote_digitacao(nr_seq_mes_ref_p, cd_estabelecimento_p, nm_usuario_p, nr_lote_contabil_w, cd_tipo_lote_contabil_w);
exception when others then
        nr_lote_contabil_w := 0;
end;

begin
select  dt_atualizacao_saldo
into STRICT    dt_atualizacao_saldo_w
from    lote_contabil
where   nr_lote_contabil = nr_lote_contabil_w;
exception
when others then
        dt_atualizacao_saldo_w := null;
end;

if (dt_atualizacao_saldo_w IS NOT NULL AND dt_atualizacao_saldo_w::text <> '') then
        ds_erro_w := ctb_desatualizar_lote(nr_lote_contabil_w, nm_usuario_p, ds_erro_w);
end if;

if (coalesce(nr_lote_contabil_w,0) > 0) then

    nm_agrupador_w  := coalesce(trim(both obter_agrupador_contabil(cd_tipo_lote_contabil_w)),'NR_SEQ_REGRA');

    open c01;
    loop
    fetch c01 into
            c01_w;
    EXIT WHEN NOT FOUND; /* apply on c01 */

            nr_parcela_atual_w      := 0;
            qt_dia_variavel_w       := 0;
            begin
            /* Pegar a data do mes inicial */

            select  dt_referencia
            into STRICT    dt_mes_inicial_w
            from    ctb_mes_ref
            where   nr_sequencia    = c01_w.nr_seq_mes_ref;
            exception when others then
                    dt_mes_inicial_w        := null;
            end;

            /* So gera apos o mes inicial definido na regra */

            if (dt_mes_inicial_w <= dt_referencia_w) then

                    nr_parcela_atual_w      := abs(months_between(dt_mes_inicial_w,dt_referencia_w))+1;

                    if (coalesce(c01_w.ie_tipo_parcela, 'F') = 'F') then

                            /* Se o tipo de parcela for fixo */

                            if      ((trunc(dt_referencia_w,'mm') = trunc(c01_w.dt_fim_vigencia,'mm')) and (c01_w.vl_movimento <> c01_w.vl_saldo)) then

                                    select  coalesce(sum(vl_movimento),0)
                                    into STRICT    vl_total_movto_w
                                    from    ctb_movimento
                                    where   nr_seq_regra_lanc = c01_w.nr_sequencia;

                                    c01_w.vl_movimento := c01_w.vl_total - vl_total_movto_w;

                            elsif (c01_w.nr_seq_mes_ref = nr_seq_mes_ref_p) then

                                    c01_w.vl_movimento := c01_w.vl_prim_parcela;
                            end if;
                    else
                            /* Se o tipo de parcela for variavel */

                            if (trunc(dt_referencia_w,'mm') = trunc(c01_w.dt_fim_vigencia,'mm')) then

                                    select  coalesce(sum(vl_movimento),0)
                                    into STRICT    vl_total_movto_w
                                    from    ctb_movimento
                                    where   nr_seq_regra_lanc = c01_w.nr_sequencia;

                                    c01_w.vl_movimento := c01_w.vl_total - vl_total_movto_w;
                            else

                                    /* Contar a quantidade de dias em que a regra fica vigente */

                                    qt_dias_vigente_w       := obter_dias_entre_datas(c01_w.dt_inicio_vigencia,c01_w.dt_fim_vigencia)+1;

                                    /* Obter o valor diario COM QUATRO DECIMAIS */

                                    vl_diario_w             := round((dividir_sem_round(c01_w.vl_total, qt_dias_vigente_w))::numeric, 4);

                                    /* Se for o primeiro mes conta tambem os dias desde o inicio da vigeecia ate o primeiro mes
                                    para casos em que o primeiro mes e apos o inicio da vigencia */
                                    if (c01_w.nr_seq_mes_ref = nr_seq_mes_ref_p) then

                                            qt_dia_variavel_w := qt_dia_variavel_w + obter_dias_entre_datas(c01_w.dt_inicio_vigencia, last_day(dt_referencia_w)) + 1;
                                    else

                                            /* Pegar a quantidade de dias do mes */

                                            qt_dia_variavel_w       := somente_numero(obter_qt_dias_mes(dt_referencia_w));
                                    end if;
                                    c01_w.vl_movimento := vl_diario_w * qt_dia_variavel_w;

                            end if;
                    end if;

                    /* Atribuir a informacao do agrupador */

                    if (nm_agrupador_w = 'NR_SEQ_REGRA')then
                            nr_seq_agrupamento_w    := c01_w.nr_sequencia;
                    end if;

                    if (coalesce(nr_seq_agrupamento_w,0) = 0)then
                            nr_seq_agrupamento_w    := c01_w.nr_sequencia;
                    end if;

                    /* Parametro Historico */


                    /*ctb_online_pck.definir_atrib_compl(cd_tipo_lote_contabil_w);
                    ctb_online_pck.set_value_compl_hist('DS_TITULO', c01_w.ds_titulo);
                    ctb_online_pck.set_value_compl_hist('NR_PARCELA', wheb_mensagem_pck.get_texto(691565) || ': ' || nr_parcela_atual_w);
                    ctb_online_pck.set_value_compl_hist('QT_PARCELA', '/' || c01_w.qt_parcela);
                    */
                    ds_compl_historico_w    := substr(c01_w.ds_titulo ||' ' || wheb_mensagem_pck.get_texto(691565) || ': ' || nr_parcela_atual_w || '/' || c01_w.qt_parcela,1,255);

                    ctb_movimento_doc_w := null;
                    ctb_movimento_doc_w.nr_lote_contabil            := nr_lote_contabil_w;
                    ctb_movimento_doc_w.cd_tipo_lote_contabil       := cd_tipo_lote_contabil_w;
                    ctb_movimento_doc_w.cd_estabelecimento          := cd_estabelecimento_p;
                    ctb_movimento_doc_w.dt_movimento                := dt_movimento_p;
                    ctb_movimento_doc_w.vl_movimento                := c01_w.vl_movimento;
                    ctb_movimento_doc_w.cd_conta_debito             := c01_w.cd_conta_debito;
                    ctb_movimento_doc_w.cd_conta_credito            := c01_w.cd_conta_credito;
                    ctb_movimento_doc_w.cd_classif_debito           := substr(ctb_obter_classif_conta(c01_w.cd_conta_debito,null,dt_referencia_w),1,40);
                    ctb_movimento_doc_w.cd_classif_credito          := substr(ctb_obter_classif_conta(c01_w.cd_conta_credito,null,dt_referencia_w),1,40);
                    ctb_movimento_doc_w.cd_historico                := c01_w.cd_historico;
                    ctb_movimento_doc_w.nr_seq_agrupamento          := nr_seq_agrupamento_w;
                    ctb_movimento_doc_w.ds_compl_historico          := ds_compl_historico_w;
                    ctb_movimento_doc_w.cd_centro_custo             := c01_w.cd_centro_custo;
                    ctb_movimento_doc_w.nr_seq_regra_lanc           := c01_w.nr_sequencia;

                    ctb_movimento_doc_w := ctb_online_pck.ctb_gravar_movto(ctb_movimento_doc_w, nm_usuario_p, 'S');

                  if (coalesce(c01_w.cd_centro_custo,0) = 0) and (coalesce(c01_w.nr_seq_crit_rateio,0) <> 0) then

                        CALL ctb_rateio_lancamento(  ctb_movimento_doc_w.nr_sequencia,
                                    c01_w.nr_seq_crit_rateio,
                                    nm_usuario_p,
                                    dt_movimento_p);
                    end if;

                    select  coalesce(sum(vl_movimento),0)
                    into STRICT    vl_total_movto_w
                    from    ctb_movimento
                    where   nr_seq_regra_lanc = c01_w.nr_sequencia;

                    c01_w.vl_saldo := c01_w.vl_total - vl_total_movto_w;

                    update  ctb_regra_movto_prog
                    set     vl_saldo        = c01_w.vl_saldo
                    where   nr_sequencia    = c01_w.nr_sequencia;
            end if;
    end loop;
    close c01;

    ds_erro_w := ctb_consistir_lote(nr_lote_contabil_w, ds_erro_w, nm_usuario_p);
    commit;
end if;

update  lote_contabil
set     ie_situacao      = 'A',
        dt_geracao_lote  = clock_timestamp(),
        dt_integracao    = clock_timestamp()
where   nr_lote_contabil = nr_lote_contabil_w;

begin
ds_erro_w := ctb_atualizar_saldo(nr_lote_contabil_w, 'S', nm_usuario_p, 'N', ds_erro_w, 'S');
exception
  when others then
    null;
end;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_lote_prog (nr_seq_mes_ref_p bigint, dt_movimento_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

