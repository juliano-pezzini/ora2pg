-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_interf_i300_ecd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE



dt_movimento_w			timestamp;
ie_apres_conta_ctb_w		varchar(15);
cd_classificacao_w			varchar(40);
cd_conta_contabil_w		varchar(40);
cd_centro_custo_w			varchar(8);
vl_debito_w			double precision;
vl_credito_w			double precision;
nr_linha_w			bigint := qt_linha_p;
nr_seq_registro_w			bigint := nr_sequencia_p;
ds_arquivo_w			varchar(4000);
ds_compl_arquivo_w		varchar(4000);
ds_linha_w			varchar(8000);
sep_w				varchar(1) := '|';
tp_registro_w			varchar(15);
ie_consolida_empresa_w		ctb_regra_sped.ie_consolida_empresa%type;

c01 CURSOR FOR
SELECT	distinct
	trunc(a.dt_movimento,'dd') dt_movimento
from	ctb_movimento_v a,
        estabelecimento b
where	dt_movimento between dt_inicio_p and dt_fim_p
and     b.cd_empresa = cd_empresa_p
and     coalesce(b.ie_gerar_sped,'S') = 'S'
and     ie_consolida_empresa_w = 'S'
and 	a.cd_estabelecimento = b.cd_estabelecimento

union all

SELECT	distinct
        trunc(a.dt_movimento,'dd') dt_movimento
from	ctb_movimento_v a
where	dt_movimento between dt_inicio_p and dt_fim_p
and     ie_consolida_empresa_w = 'N'
and	    a.cd_estabelecimento = cd_estabelecimento_p
order by 1;

c02 CURSOR FOR
SELECT	a.cd_classificacao,
        a.cd_conta_contabil,
        CASE WHEN a.ie_centro_custo='N' THEN null  ELSE b.cd_centro_custo END  cd_centro_custo,
        sum(coalesce(CASE WHEN a.cd_conta_contabil=a.cd_conta_debito THEN  b.vl_movimento  ELSE 0 END , a.vl_debito)) vl_debito,
        sum(coalesce(CASE WHEN a.cd_conta_contabil=a.cd_conta_credito THEN  b.vl_movimento  ELSE 0 END ,a.vl_credito)) vl_credito
FROM estabelecimento c, ctb_movimento_v a
LEFT OUTER JOIN ctb_movto_centro_custo b ON (a.nr_sequencia = b.nr_seq_movimento)
WHERE a.dt_movimento between dt_movimento_w and fim_dia(dt_movimento_w) and c.cd_empresa = cd_empresa_p and coalesce(c.ie_gerar_sped,'S') = 'S' and ie_consolida_empresa_w = 'S' and a.cd_estabelecimento = c.cd_estabelecimento group by	a.cd_classificacao,
	        a.cd_conta_contabil,
	        CASE WHEN a.ie_centro_custo='N' THEN null  ELSE b.cd_centro_custo END

union all

SELECT	a.cd_classificacao,
        a.cd_conta_contabil,
        CASE WHEN a.ie_centro_custo='N' THEN null  ELSE b.cd_centro_custo END  cd_centro_custo,
        sum(coalesce(CASE WHEN a.cd_conta_contabil=a.cd_conta_debito THEN  b.vl_movimento  ELSE 0 END , a.vl_debito)) vl_debito,
        sum(coalesce(CASE WHEN a.cd_conta_contabil=a.cd_conta_credito THEN  b.vl_movimento  ELSE 0 END ,a.vl_credito)) vl_credito
FROM ctb_movimento_v a
LEFT OUTER JOIN ctb_movto_centro_custo b ON (a.nr_sequencia = b.nr_seq_movimento)
WHERE a.dt_movimento between dt_movimento_w and fim_dia(dt_movimento_w) and ie_consolida_empresa_w = 'N' and a.cd_estabelecimento = cd_estabelecimento_p group by	a.cd_classificacao,
	        a.cd_conta_contabil,
	        CASE WHEN a.ie_centro_custo='N' THEN null  ELSE b.cd_centro_custo END;


BEGIN

select	coalesce(max(a.ie_apres_conta_ctb),'CD'),
    	coalesce(max(a.ie_consolida_empresa), 'N')
into STRICT	ie_apres_conta_ctb_w,
	ie_consolida_empresa_w
from	ctb_regra_sped a,
	ctb_sped_controle b
where	b.nr_seq_regra_sped 	= a.nr_sequencia
and	b.nr_sequencia		= nr_seq_controle_p;

open C01;
loop
fetch C01 into	
	dt_movimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	tp_registro_w := 'I300';
	
	ds_linha_w	:= substr(	sep_w || tp_registro_w 				||
				sep_w || to_char(dt_movimento_w,'ddmmyyyy') 	|| sep_w,1,8000);
	
	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_compl_arquivo_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w		:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;
		
	insert into ctb_sped_registro(
		nr_sequencia,
		ds_arquivo,                     
		dt_atualizacao,                 
		nm_usuario,                     
		dt_atualizacao_nrec,            
		nm_usuario_nrec,                
		nr_seq_controle_sped,           
		ds_arquivo_compl,               
		cd_registro,
		nr_linha)
	values (	nr_seq_registro_w,
		ds_arquivo_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_controle_p,
		ds_compl_arquivo_w,
		tp_registro_w,
		nr_linha_w);

	tp_registro_w := 'I310';

	open C02;
	loop
	fetch C02 into	
		cd_classificacao_w,
		cd_conta_contabil_w,
		cd_centro_custo_w,
		vl_debito_w,
		vl_credito_w;	
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		
		if (ie_apres_conta_ctb_w = 'CL') then
			cd_conta_contabil_w	:= cd_classificacao_w;
		elsif (ie_apres_conta_ctb_w = 'CP') then
			cd_conta_contabil_w	:= substr(replace(cd_classificacao_w,'.',''),1,40);
		end if;
		
		ds_linha_w	:= substr(	sep_w || tp_registro_w			||
					sep_w || cd_conta_contabil_w 		|| 
					sep_w || cd_centro_custo_w 			|| 
					sep_w || sped_obter_campo_valor(vl_debito_w)	|| 
					sep_w || sped_obter_campo_valor(vl_credito_w)	|| sep_w,1,8000);
	
		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_compl_arquivo_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w		:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;
		
		insert into ctb_sped_registro(
			nr_sequencia,
			ds_arquivo,                     
			dt_atualizacao,                 
			nm_usuario,                     
			dt_atualizacao_nrec,            
			nm_usuario_nrec,                
			nr_seq_controle_sped,           
			ds_arquivo_compl,               
			cd_registro,
			nr_linha)
		values ( nr_seq_registro_w,
			ds_arquivo_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_controle_p,
			ds_compl_arquivo_w,
			tp_registro_w,
			nr_linha_w);
		end;
	end loop;
	close c02;
	end;
end loop;
close C01;

commit;
qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_interf_i300_ecd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

