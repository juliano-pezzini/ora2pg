-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_relat_itens_fat ( dt_inicio_p text, dt_fim_p text, ie_servico_p text, nr_seq_prest_protoc_p bigint, nr_seq_prest_exec_p bigint, nr_seq_regra_proc_mat_p bigint, cd_procedimento_param_p text, nr_seq_material_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
dt_inicio_w			timestamp;
dt_fim_w			timestamp;
nr_seq_prest_protoc_w		bigint;
nr_seq_prest_exec_w		bigint;
nr_seq_regra_proc_mat_w		bigint;
nr_seq_material_w		bigint;
cd_procedimento_param_w		bigint;

C01 CURSOR(	dt_inicio_pc		timestamp, 
		dt_fim_pc		timestamp, 
		nr_seq_prest_protoc_pc	bigint, 
		nr_seq_prest_exec_pc	bigint) FOR 
	SELECT	/*+ USE_CONCAT*/z.nr_sequencia nr_seq_conta, 
		substr(pls_obter_dados_segurado(z.nr_seq_segurado,'CR'),1,50) cd_usuario_plano, 
		z.cd_guia, 
		substr(pls_obter_cod_prestador(x.nr_seq_prestador,null),1,10) || ' - ' || substr(pls_obter_dados_prestador(x.nr_seq_prestador,'N'),1,200) ds_prestador_prot, 
		substr(pls_obter_dados_prestador(z.nr_seq_prestador_exec,'CD'),1,10) || ' - ' || substr(pls_obter_dados_prestador(z.nr_seq_prestador_exec,'N'),1,200) ds_prestador_pgto 
	from	pls_conta			z, 
		pls_protocolo_conta		x 
	where	x.nr_sequencia		= z.nr_seq_protocolo 
	and	x.dt_mes_competencia	between dt_inicio_pc and dt_fim_pc 
	and (x.nr_seq_prestador 		= nr_seq_prest_protoc_pc or coalesce(nr_seq_prest_protoc_pc::text, '') = '') 
	and (z.nr_seq_prestador_exec 	= nr_seq_prest_exec_pc or coalesce(nr_seq_prest_exec_pc::text, '') = '') 
	and	exists	(SELECT	1 
			from	pls_conta_pos_estabelecido d 
			where	z.nr_sequencia		= d.nr_seq_conta 
			and	(d.nr_seq_lote_fat IS NOT NULL AND d.nr_seq_lote_fat::text <> '') 
			and	d.ie_status_faturamento	= 'L' 
			and	((d.ie_situacao	= 'A') or (coalesce(d.ie_situacao::text, '') = ''))  LIMIT 1);

C02 CURSOR(	nr_seq_conta_pc			bigint, 
		nr_seq_regra_proc_mat_pc 	bigint, 
		cd_procedimento_param_pc 	bigint) FOR 
	SELECT	/*+ USE_CONCAT*/ coalesce(x.qt_item,1) qt_item, 
		substr(pls_obter_tab_preco_proc_mat(e.nr_sequencia, null), 1, 255) nm_tabela, 
		e.dt_procedimento dt_proc_mat, 
		coalesce(x.vl_beneficiario,0) vl_calculado, 
		e.nr_id_analise nr_identificador, 
		e.cd_procedimento cd_proc_mat, 
		substr(pls_obter_desc_procedimento(e.cd_procedimento,e.ie_origem_proced),1,255) ds_proc_mat, 
		e.nr_seq_regra nr_seq_criterio 
	from	pls_conta_pos_estabelecido	x, 
		pls_conta_proc			e, 
		pls_fatura_proc			d, 
		pls_fatura_conta		c, 
		pls_fatura_evento		b, 
		pls_fatura			a 
	where	a.nr_sequencia		= b.nr_seq_fatura 
	and	b.nr_sequencia		= c.nr_seq_fatura_evento 
	and	c.nr_sequencia		= d.nr_seq_fatura_conta 
	and	e.nr_sequencia		= d.nr_seq_conta_proc 
	and	x.nr_sequencia		= d.nr_seq_conta_pos_estab 
	and	c.nr_seq_conta		= nr_seq_conta_pc 
	and	((x.ie_situacao		= 'A') or (coalesce(x.ie_situacao::text, '') = '')) 
	and (e.nr_seq_regra		= nr_seq_regra_proc_mat_pc or coalesce(nr_seq_regra_proc_mat_pc::text, '') = '') 
	and (e.cd_procedimento	= cd_procedimento_param_pc or coalesce(cd_procedimento_param_pc::text, '') = '');

C03 CURSOR(	nr_seq_conta_pc			bigint, 
		nr_seq_regra_proc_mat_pc	bigint, 
		nr_seq_material_pc		bigint) FOR 
	SELECT	/*+ USE_CONCAT*/ coalesce(x.qt_item,1) qt_item, 
		substr(pls_obter_tab_preco_proc_mat(e.nr_sequencia, null), 1, 255) nm_tabela, 
		e.dt_atendimento dt_proc_mat, 
		coalesce(x.vl_beneficiario,0) vl_calculado, 
		e.nr_id_analise nr_identificador, 
		(substr(pls_obter_seq_codigo_material(e.nr_seq_material,null),1,15))::numeric  cd_proc_mat, 
		substr(pls_obter_dados_material(e.nr_seq_material,'DS'),1,255) ds_proc_mat, 
		e.nr_seq_regra nr_seq_criterio 
	from	pls_conta_pos_estabelecido	x, 
		pls_conta_mat			e, 
		pls_fatura_mat			d, 
		pls_fatura_conta		c, 
		pls_fatura_evento		b, 
		pls_fatura			a 
	where	a.nr_sequencia		= b.nr_seq_fatura 
	and	b.nr_sequencia		= c.nr_seq_fatura_evento 
	and	c.nr_sequencia		= d.nr_seq_fatura_conta 
	and	e.nr_sequencia		= d.nr_seq_conta_mat 
	and	x.nr_sequencia		= d.nr_seq_conta_pos_estab 
	and	c.nr_seq_conta		= nr_seq_conta_pc 
	and	((x.ie_situacao		= 'A') or (coalesce(x.ie_situacao::text, '') = '')) 
	and (e.nr_seq_regra		= nr_seq_regra_proc_mat_pc or coalesce(nr_seq_regra_proc_mat_pc::text, '') = '') 
	and (e.nr_seq_material	= nr_seq_material_pc or coalesce(nr_seq_material_pc::text, '') = '');
	
BEGIN 
delete	FROM w_pls_relat_item_faturado 
where	nm_usuario = nm_usuario_p;
 
commit;
 
nr_seq_prest_protoc_w := nr_seq_prest_protoc_p;
nr_seq_prest_exec_w := nr_seq_prest_exec_p;
nr_seq_regra_proc_mat_w := nr_seq_regra_proc_mat_p;
nr_seq_material_w := nr_seq_material_p;
cd_procedimento_param_w := cd_procedimento_param_p;
 
begin 
dt_inicio_w := to_date(coalesce(dt_inicio_p,clock_timestamp()),'dd/mm/yyyy');
exception 
when others then 
	dt_inicio_w := clock_timestamp();
end;
 
begin 
dt_fim_w := to_date(coalesce(dt_fim_p,clock_timestamp()),'dd/mm/yyyy');
exception 
when others then 
	dt_fim_w := clock_timestamp();
end;
 
if (coalesce(trim(both nr_seq_prest_protoc_w),'0') = '0') then 
	nr_seq_prest_protoc_w := null;
end if;
 
if (coalesce(trim(both nr_seq_prest_exec_w),'0') = '0') then 
	nr_seq_prest_exec_w := null;
end if;
 
if (coalesce(trim(both nr_seq_regra_proc_mat_w),'0') = '0') then 
	nr_seq_regra_proc_mat_w := null;
end if;
 
if (coalesce(trim(both nr_seq_material_w),'0') = '0') then 
	nr_seq_material_w := null;
end if;
 
if (coalesce(trim(both cd_procedimento_param_w),'0') = '0') then 
	cd_procedimento_param_w := null;
end if;
 
for r_C01_w in C01( dt_inicio_w, dt_fim_w, nr_seq_prest_protoc_w, nr_seq_prest_exec_w) loop 
 
	if (trim(both r_C01_w.ds_prestador_prot) = '-') then 
		r_C01_w.ds_prestador_prot := null;
	end if;
	 
	if (trim(both r_C01_w.ds_prestador_pgto) = '-') then 
		r_C01_w.ds_prestador_pgto := null;
	end if;
 
	if (ie_servico_p = 'P') then 
		 
		for r_C02_w in C02( r_C01_w.nr_seq_conta, nr_seq_regra_proc_mat_w, cd_procedimento_param_w) loop 
		 
			insert into w_pls_relat_item_faturado(nm_usuario, 
				nr_seq_conta, 
				cd_usuario_plano, 
				cd_guia, 
				ds_prestador_prot, 
				ds_prestador_pgto, 
				qt_item, 
				nm_tabela, 
				dt_proc_mat, 
				vl_calculado, 
				nr_identificador, 
				cd_proc_mat, 
				ds_proc_mat, 
				nr_seq_criterio) 
			values (nm_usuario_p, 
				r_C01_w.nr_seq_conta, 
				r_C01_w.cd_usuario_plano, 
				r_C01_w.cd_guia, 
				r_C01_w.ds_prestador_prot, 
				r_C01_w.ds_prestador_pgto, 
				r_C02_w.qt_item, 
				r_C02_w.nm_tabela, 
				r_C02_w.dt_proc_mat, 
				r_C02_w.vl_calculado, 
				r_C02_w.nr_identificador, 
				r_C02_w.cd_proc_mat, 
				r_C02_w.ds_proc_mat, 
				r_C02_w.nr_seq_criterio);
		end loop;
	 
	elsif (ie_servico_p = 'M') then 
 
		for r_C03_w in C03( r_C01_w.nr_seq_conta, nr_seq_regra_proc_mat_w, nr_seq_material_w) loop 
			insert into w_pls_relat_item_faturado(nm_usuario, 
				nr_seq_conta, 
				cd_usuario_plano, 
				cd_guia, 
				ds_prestador_prot, 
				ds_prestador_pgto, 
				qt_item, 
				nm_tabela, 
				dt_proc_mat, 
				vl_calculado, 
				nr_identificador, 
				cd_proc_mat, 
				ds_proc_mat, 
				nr_seq_criterio) 
			values (nm_usuario_p, 
				r_C01_w.nr_seq_conta, 
				r_C01_w.cd_usuario_plano, 
				r_C01_w.cd_guia, 
				r_C01_w.ds_prestador_prot, 
				r_C01_w.ds_prestador_pgto, 
				r_C03_w.qt_item, 
				r_C03_w.nm_tabela, 
				r_C03_w.dt_proc_mat, 
				r_C03_w.vl_calculado, 
				r_C03_w.nr_identificador, 
				r_C03_w.cd_proc_mat, 
				r_C03_w.ds_proc_mat, 
				r_C03_w.nr_seq_criterio);
		end loop;
		 
	end if;
 
	commit;
end loop;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_relat_itens_fat ( dt_inicio_p text, dt_fim_p text, ie_servico_p text, nr_seq_prest_protoc_p bigint, nr_seq_prest_exec_p bigint, nr_seq_regra_proc_mat_p bigint, cd_procedimento_param_p text, nr_seq_material_p bigint, nm_usuario_p text) FROM PUBLIC;

