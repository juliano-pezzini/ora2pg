-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE envia_informativo_os_acordo ( nr_seq_acordo_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_ordem_w			bigint;
mail_gerente_w			varchar(100);
nm_gerente_w			varchar(50);
nr_seq_comunic_w		bigint;
cd_gerente_w			varchar(10);
ds_dano_breve_w			varchar(100);
ds_ordem_servico_w		varchar(4000);
ds_informativo_w		varchar(8000);


c01 CURSOR FOR
	SELECT distinct	a.cd_responsavel
	from	gerencia_wheb a
	where	(a.cd_responsavel IS NOT NULL AND a.cd_responsavel::text <> '');


c02 CURSOR FOR
	SELECT	a.nr_seq_ordem_servico
	from	desenv_acordo_os a
	where	a.nr_seq_acordo = nr_seq_acordo_p
	and	a.nr_seq_ordem_servico in ( SELECT	b.nr_sequencia
					    from	man_ordem_servico b,
							grupo_desenvolvimento c,
							gerencia_wheb d
					    where	b.nr_sequencia = a.nr_seq_ordem_servico
					    and		b.nr_seq_grupo_des = c.nr_sequencia
					    and		d.nr_sequencia = c.nr_seq_gerencia
					    and		d.cd_responsavel = cd_gerente_w);


BEGIN

open c01;
loop
fetch c01 into
	cd_gerente_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
		ds_informativo_w   := null;
		ds_ordem_servico_w := null;
		nm_gerente_w	   := null;


		select	max(ds_email)
		into STRICT	mail_gerente_w
		from	usuario
		where	cd_pessoa_fisica = cd_gerente_w;


		open c02;
		loop
		fetch c02 into
			nr_seq_ordem_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
				select	ds_dano_breve
				into STRICT	ds_dano_breve_w
				from	man_ordem_servico
				where	nr_sequencia = nr_seq_ordem_w;

				ds_ordem_servico_w := ds_ordem_servico_w || '     ' || nr_seq_ordem_w || ' - ' || ds_dano_breve_w || chr(13) || chr(10);
			end;
		end loop;
		close c02;


		if (ds_ordem_servico_w IS NOT NULL AND ds_ordem_servico_w::text <> '') then
		begin
			ds_informativo_w := 'Criado o acordo ' || nr_seq_acordo_p || '.' || chr(13) || chr(10);
			ds_informativo_w := ds_informativo_w || 'Este acordo contém as seguintes ordens de serviço :' || chr(13) || chr(10);
			ds_informativo_w := ds_informativo_w || ds_ordem_servico_w;
		end;
		end if;


		if (ds_informativo_w IS NOT NULL AND ds_informativo_w::text <> '') then
		begin
			if (mail_gerente_w IS NOT NULL AND mail_gerente_w::text <> '') then
			begin
				CALL enviar_email(obter_desc_expressao(283174)/*'Acordo '*/
 || nr_seq_acordo_p,
					ds_informativo_w,
					'support.informatics@philips.com',
					mail_gerente_w,
					nm_usuario_p,
					'M');
			end;
			else	-- Caso não tenha um gerente, envia para o Lucas
			begin
				CALL enviar_email(obter_desc_expressao(283174)/*'Acordo '*/
 || nr_seq_acordo_p,
					ds_informativo_w,
					'support.informatics@philips.com',
					'lucas.fernando@wheb.com.br',
					nm_usuario_p,
					'M');
			end;
			end if;


			select	nextval('comunic_interna_seq')
			into STRICT	nr_seq_comunic_w
			;

			select	nm_usuario
			into STRICT	nm_gerente_w
			from	usuario
			where	cd_pessoa_fisica = cd_gerente_w;

			if (nm_gerente_w IS NOT NULL AND nm_gerente_w::text <> '') then
			begin
				insert into comunic_interna(
					dt_comunicado,
					ds_comunicado,
					ds_titulo,
					nm_usuario,
					dt_atualizacao,
					ie_geral,
					nm_usuario_destino,
					nr_sequencia,
					ie_gerencial,
					dt_liberacao)
				values (	clock_timestamp(),
					ds_informativo_w,
					obter_desc_expressao(283174)/*'Acordo '*/
 || nr_seq_acordo_p,
					nm_usuario_p,
					clock_timestamp(),
					'N',
					nm_gerente_w,
					nr_seq_comunic_w,
					'N',
					clock_timestamp());
			end;
			else	-- Caso não tenha um gerente, envia para o Lucas
			begin
				insert into comunic_interna(
					dt_comunicado,
					ds_comunicado,
					ds_titulo,
					nm_usuario,
					dt_atualizacao,
					ie_geral,
					nm_usuario_destino,
					nr_sequencia,
					ie_gerencial,
					dt_liberacao)
				values (	clock_timestamp(),
					ds_informativo_w,
					obter_desc_expressao(283174)/*'Acordo '*/
 || nr_seq_acordo_p,
					nm_usuario_p,
					clock_timestamp(),
					'N',
					'lfrfranca',
					nr_seq_comunic_w,
					'N',
					clock_timestamp());
			end;
			end if;
		end;
		end if;
	end;
end loop;
close c01;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE envia_informativo_os_acordo ( nr_seq_acordo_p bigint, nm_usuario_p text) FROM PUBLIC;

