-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixa_total_tit_pagar ( cd_estabelecimento_p bigint, cd_tipo_baixa_p bigint, nr_titulo_p bigint, vl_baixa_p bigint, nm_usuario_p text, nr_seq_trans_financ_p bigint, nr_bordero_p bigint, nr_seq_escrit_p bigint, dt_transacao_p timestamp) AS $body$
DECLARE

 
nr_seq_conta_banco_w		bigint;
nr_titulo_w			bigint;
vl_titulo_w			double precision;
vl_bordero_w			double precision;
vl_escritural_w 		double precision;

c01 CURSOR FOR			/* Bordero */
 
SELECT a.nr_titulo, 
	a.vl_bordero 
from  titulo_pagar_bordero_v a 
where  a.nr_bordero	= nr_bordero_p 
and	coalesce(a.dt_liquidacao::text, '') = '';

c02 CURSOR FOR			/* Escritural */
 
SELECT 	b.nr_titulo, 
	b.vl_escritural 
from  	Banco_Escritural a, 
	titulo_pagar_escrit b		 
where	a.nr_sequencia = nr_seq_escrit_p 
and	b.nr_seq_escrit = nr_seq_escrit_p;


BEGIN 
 
if (nr_bordero_p IS NOT NULL AND nr_bordero_p::text <> '') then 
	 
	CALL GERAR_MOVTO_TRANS_BORDERO(nr_bordero_p, 
				cd_estabelecimento_p, 
				dt_transacao_p,	 
				null, 
				'I',				 
				nm_usuario_p);
 
	open c01;
	loop 
	fetch c01 into 
		nr_titulo_w, 
		vl_bordero_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	 
		CALL Baixa_Titulo_Pagar(	cd_estabelecimento_p, 
				cd_tipo_baixa_p, 
				nr_titulo_w, 
				vl_bordero_w, 
				nm_usuario_p, 
				null, 
				nr_bordero_p, 
				null, 
				null, 
				null);
 
		CALL Atualizar_Saldo_Tit_Pagar(nr_titulo_w, nm_usuario_p);
		CALL Gerar_W_Tit_Pag_imposto(nr_titulo_w,nm_usuario_p);
	 
	end loop;
	close c01;
 
	update	bordero_pagamento 
	set	dt_real_pagamento	= dt_transacao_p, 
		nm_usuario		= nm_usuario_p, 
		dt_atualizacao		= clock_timestamp() 
	where	nr_bordero 		= nr_bordero_p;
 
elsif (nr_seq_escrit_p IS NOT NULL AND nr_seq_escrit_p::text <> '') then 
	 
	SELECT 	nr_seq_conta_banco 
	INTO STRICT  	nr_seq_conta_banco_w 
	FROM 	banco_escritural 
	WHERE 	nr_sequencia = nr_seq_escrit_p;
	 
	if (nr_seq_conta_banco_w IS NOT NULL AND nr_seq_conta_banco_w::text <> '') then 
		CALL gerar_movto_trans_bco(nr_seq_escrit_p, dt_transacao_p, cd_estabelecimento_p, nm_usuario_p,'N');
	else 
		open c02;
		loop 
		fetch c02 into 
			nr_titulo_w, 
			vl_escritural_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			CALL Baixa_Titulo_Pagar(	cd_estabelecimento_p, 
					  	cd_tipo_baixa_p, 
					  	nr_titulo_w, 
						vl_escritural_w, 
						nm_usuario_p, 
						null, 
						null, 
						nr_seq_escrit_p, 
						dt_transacao_p, 
						null);
			CALL Atualizar_Saldo_Tit_Pagar(nr_titulo_w, nm_usuario_p);
			CALL Gerar_W_Tit_Pag_imposto(nr_titulo_w,nm_usuario_p);
		 
		end loop;
		close c02;
			 
	end if;		
	 
else 
	CALL Baixa_Titulo_Pagar(	cd_estabelecimento_p, 
				cd_tipo_baixa_p, 
				nr_titulo_p, 
				vl_baixa_p, 
				nm_usuario_p, 
				nr_seq_trans_financ_p, 
				nr_bordero_p, 
				nr_seq_escrit_p, 
				dt_transacao_p, 
				null);
 
	CALL Atualizar_Saldo_Tit_Pagar(nr_titulo_p, nm_usuario_p);
	CALL Gerar_W_Tit_Pag_imposto(nr_titulo_p,nm_usuario_p);
 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixa_total_tit_pagar ( cd_estabelecimento_p bigint, cd_tipo_baixa_p bigint, nr_titulo_p bigint, vl_baixa_p bigint, nm_usuario_p text, nr_seq_trans_financ_p bigint, nr_bordero_p bigint, nr_seq_escrit_p bigint, dt_transacao_p timestamp) FROM PUBLIC;

