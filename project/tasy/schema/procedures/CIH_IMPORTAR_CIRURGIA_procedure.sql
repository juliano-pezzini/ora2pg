-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cih_importar_cirurgia ( nr_ficha_ocorrencia_p bigint, nm_usuario_p text, ie_importar_medic_p text, ie_importar_propaci_p text, nr_atendimento_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE


nr_atendimento_w		bigint;
nr_seq_unidade_w		bigint;
nr_seq_cirurgia_cih_w		bigint;
dt_inicio_w			timestamp;
ds_procedimento_w		varchar(255);
cd_medico_cirurgiao_w		bigint;
cd_tipo_cirurgia_w		bigint;
cd_tipo_anestesia_w		varchar(10);
ie_asa_estado_paciente_w 	varchar(3);
ie_carater_cirurgia_w		varchar(1);
nr_min_duracao_real_w		bigint;
cd_procedimento_W		bigint;
ie_origem_proced_w		bigint;
dt_inicio_real_w		timestamp;
dt_fim_cirurgia_w		timestamp;
nr_seq_cirurgia_w		bigint;
nr_seq_interno_w		bigint;
dt_entrada_unidade_w		timestamp;
ie_duracao_cirurgia_w		varchar(10);
cd_clinica_w			bigint;
cd_medicamento_w		bigint;
dt_inicial_utilizacao_w		timestamp;
nr_seq_medic_cirur_w		bigint;
nr_ficha_ocorr_ant_w		bigint;
nr_ficha_ocorr_w		bigint;
ds_aux_w			varchar(70);
ds_erro_w			varchar(4000);
ie_video_w			varchar(1);
ie_tipo_inf_medic_w		varchar(1);
nr_seq_proc_interno_w		bigint;
cd_pessoa_fisica_w		atendimento_paciente.cd_pessoa_fisica%TYPE;
cirurgia_outros_atend_w		varchar(1);
C01 CURSOR FOR
SELECT	a.nr_cirurgia,
	coalesce(dt_inicio_real, dt_inicio_prevista),
	b.ds_procedimento,
	cd_medico_cirurgiao,
	coalesce(cd_tipo_cirurgia,1),
	cd_tipo_anestesia,
	ie_asa_estado_paciente,
	ie_carater_cirurgia,
	coalesce(a.nr_min_duracao_real,0),
	b.cd_procedimento,
	a.ie_origem_proced,
	a.dt_inicio_real,
	CASE WHEN coalesce(a.dt_fim_cirurgia::text, '') = '' THEN coalesce(a.dt_termino,clock_timestamp())  ELSE a.dt_fim_cirurgia END ,
	coalesce(a.dt_entrada_unidade,clock_timestamp()),
	NULL ie_video,
	a.NR_SEQ_PROC_INTERNO
FROM	procedimento b,
	cirurgia a
WHERE	a.nr_atendimento	= coalesce(nr_atendimento_p, nr_atendimento_w)
AND 	(a.dt_entrada_unidade IS NOT NULL AND a.dt_entrada_unidade::text <> '')
AND	a.cd_procedimento_princ	= b.cd_procedimento
AND	a.ie_origem_proced	= b.ie_origem_proced
AND	NOT EXISTS (SELECT 1 FROM cih_cirurgia c  WHERE c.nr_seq_cirurgia_pac = a.nr_cirurgia)
AND (cih_importar_procedimento(b.cd_procedimento,b.ie_origem_proced) = 'S')
AND	ie_importar_propaci_p	= 'N'

UNION

SELECT	a.nr_cirurgia,
	coalesce(a.dt_inicio_real, a.dt_inicio_prevista),
	b.ds_procedimento,
	coalesce(c.cd_medico_executor, a.cd_medico_cirurgiao),
	coalesce(a.cd_tipo_cirurgia,1),
	a.cd_tipo_anestesia,
	a.ie_asa_estado_paciente,
	a.ie_carater_cirurgia,
	coalesce(a.nr_min_duracao_real,0),
	b.cd_procedimento,
	b.ie_origem_proced,
	a.dt_inicio_real,
	CASE WHEN coalesce(a.dt_fim_cirurgia::text, '') = '' THEN coalesce(a.dt_termino,clock_timestamp())  ELSE a.dt_fim_cirurgia END ,
	coalesce(a.dt_entrada_unidade,clock_timestamp()),
	c.ie_video,
	a.NR_SEQ_PROC_INTERNO
FROM	procedimento b,
	procedimento_paciente c,
	cirurgia a
WHERE	a.nr_atendimento		= coalesce(nr_atendimento_p, nr_atendimento_w)
AND 	(a.dt_entrada_unidade IS NOT NULL AND a.dt_entrada_unidade::text <> '')
AND	a.nr_atendimento		= c.nr_atendimento
AND	a.nr_cirurgia		= c.nr_cirurgia
AND	c.cd_procedimento		= b.cd_procedimento
AND	c.ie_origem_proced		= b.ie_origem_proced
AND	NOT EXISTS (SELECT 1 FROM cih_cirurgia c WHERE	c.nr_seq_cirurgia_pac = a.nr_cirurgia)
AND (cih_importar_procedimento(b.cd_procedimento,b.ie_origem_proced) = 'S')
AND	obter_classif_material_proced(NULL, c.cd_procedimento, c.ie_origem_proced) = '1'
AND	ie_importar_propaci_p	= 'S';

C02 CURSOR FOR
SELECT	c.cd_medicamento,
	MIN(a.dt_atendimento) dt_inicial_utilizacao
FROM	material_atend_paciente a,
	material c
WHERE	a.nr_atendimento	= coalesce(nr_atendimento_p, nr_atendimento_w)
AND	a.cd_material	= c.cd_material
AND	a.nr_cirurgia	= nr_seq_cirurgia_w
AND	(c.cd_medicamento IS NOT NULL AND c.cd_medicamento::text <> '')
AND	ie_tipo_inf_medic_w = 'C'
GROUP	BY c.cd_medicamento,
	c.qt_dia_profilatico,
	c.qt_dia_terapeutico

UNION

SELECT	c.cd_medicamento,
	MIN(b.dt_inicio_adm) dt_inicial_utilizacao
FROM	cirurgia_agente_anestesico a,
	cirurgia_agente_anest_ocor b,
	material c
WHERE	b.nr_seq_cirur_agente = a.nr_sequencia
AND	a.cd_material	= c.cd_material
AND	a.nr_cirurgia	= nr_seq_cirurgia_w
AND	(c.cd_medicamento IS NOT NULL AND c.cd_medicamento::text <> '')
AND	((ie_tipo_inf_medic_w = 'A') OR (ie_tipo_inf_medic_w = 'P'))
AND	coalesce(a.ie_situacao,'A') = 'A'
AND	coalesce(b.ie_situacao,'A') = 'A'
GROUP	BY c.cd_medicamento,
	c.qt_dia_profilatico,
	c.qt_dia_terapeutico

UNION

SELECT	MAX(c.cd_medicamento),
	MIN(e.dt_alteracao) dt_inicial_utilizacao
FROM	prescr_mat_alteracao e,
	prescr_medica a,
	prescr_material b,
	material c
WHERE 	e.nr_prescricao     	= b.nr_prescricao
AND 	e.nr_seq_prescricao	= b.nr_sequencia
AND	a.nr_prescricao		= b.nr_prescricao
AND	b.cd_material	  	= c.cd_material
AND 	a.nr_atendimento	= coalesce(nr_atendimento_p, nr_atendimento_w)
AND	(c.cd_medicamento IS NOT NULL AND c.cd_medicamento::text <> '')
AND (ie_tipo_inf_medic_w = 'A')
AND	obter_classif_setor(a.cd_setor_atendimento) = 2
AND	a.dt_prescricao BETWEEN TO_DATE(obter_dados_cirurgia(nr_seq_cirurgia_w,'DT'),'dd/mm/yyyy hh24:mi:ss') AND TO_DATE(obter_dados_cirurgia(nr_seq_cirurgia_w,'DT'),'dd/mm/yyyy hh24:mi:ss') + 1
AND	e.ie_alteracao = 3
AND EXISTS (	SELECT 	1
		FROM	prescr_mat_alteracao x
		WHERE	x.nr_sequencia = (SELECT MAX(y.nr_sequencia)
					FROM	prescr_mat_alteracao y
					WHERE	y.nr_prescricao = e.nr_prescricao
					AND	y.nr_seq_prescricao = e.nr_seq_prescricao
					AND	y.ie_alteracao = 3
					AND	coalesce(y.dt_hor_acm_sn,SUBSTR(plt_obter_dados_hor_item(coalesce(coalesce(coalesce(coalesce(y.nr_seq_horario, y.nr_seq_horario_proc), y.nr_seq_horario_rec),y.nr_seq_horario_dieta),y.nr_seq_horario_sae),y.ie_tipo_item,'H'),1,19)) =
						coalesce(x.dt_hor_acm_sn,SUBSTR(plt_obter_dados_hor_item(coalesce(coalesce(coalesce(coalesce(x.nr_seq_horario, x.nr_seq_horario_proc), x.nr_seq_horario_rec),x.nr_seq_horario_dieta),x.nr_seq_horario_sae),x.ie_tipo_item,'H'),1,19)))
		AND	x.nr_sequencia = e.nr_sequencia)
GROUP	BY c.cd_medicamento,
	e.cd_um_dose_adm,
	c.qt_dia_profilatico,
	c.qt_dia_terapeutico;


C03 CURSOR FOR
SELECT	a.nr_cirurgia,
	d.nr_ficha_ocorrencia
FROM	procedimento b,
	cirurgia a,
	cih_cirurgia d
WHERE	a.nr_atendimento		= coalesce(nr_atendimento_p, nr_atendimento_w)
AND 	(a.dt_entrada_unidade IS NOT NULL AND a.dt_entrada_unidade::text <> '')
AND	a.cd_procedimento_princ	= b.cd_procedimento
AND	a.ie_origem_proced		= b.ie_origem_proced
AND	d.nr_seq_cirurgia_pac 	= a.nr_cirurgia
AND	d.nr_ficha_ocorrencia 	<> nr_ficha_ocorrencia_p
AND (cih_importar_procedimento(b.cd_procedimento,b.ie_origem_proced) = 'S')

UNION

SELECT	a.nr_cirurgia,
	d.nr_ficha_ocorrencia
FROM	procedimento b,
	procedimento_paciente c,
	cirurgia a,
	cih_cirurgia d
WHERE	a.nr_atendimento		= coalesce(nr_atendimento_p, nr_atendimento_w)
AND 	(a.dt_entrada_unidade IS NOT NULL AND a.dt_entrada_unidade::text <> '')
AND	a.nr_atendimento		= c.nr_atendimento
AND	a.nr_cirurgia		= c.nr_cirurgia
AND	c.cd_procedimento		= b.cd_procedimento
AND	c.ie_origem_proced		= b.ie_origem_proced
AND	d.nr_seq_cirurgia_pac 	= a.nr_cirurgia
AND	d.nr_ficha_ocorrencia 	<> nr_ficha_ocorrencia_p
AND	ie_importar_propaci_p	= 'S'
AND (cih_importar_procedimento(b.cd_procedimento,b.ie_origem_proced) = 'S')
ORDER BY nr_ficha_ocorrencia;


BEGIN


IF (nr_ficha_ocorrencia_p <> 0) AND (nr_ficha_ocorrencia_p IS NOT NULL AND nr_ficha_ocorrencia_p::text <> '') THEN

	SELECT	nr_atendimento,
		cd_clinica
	INTO STRICT	nr_atendimento_w,
		cd_clinica_w
	FROM	cih_ficha_ocorrencia
	WHERE	nr_ficha_ocorrencia = nr_ficha_ocorrencia_p;

	SELECT 	coalesce(MAX(ie_tipo_inf_medic),'C')
	INTO STRICT	ie_tipo_inf_medic_w
	FROM	cih_parametros
	WHERE (cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
	OR (coalesce(cd_estabelecimento::text, '') = ''
	AND NOT EXISTS (SELECT	1
			FROM	cih_parametros
			WHERE	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento)));

	OPEN C01;
	LOOP
	FETCH C01 INTO
		nr_seq_cirurgia_w,
		dt_inicio_w,
		ds_procedimento_w,
		cd_medico_cirurgiao_w,
		cd_tipo_cirurgia_w,
		cd_tipo_anestesia_w,
		ie_asa_estado_paciente_w,
		ie_carater_cirurgia_w,
		nr_min_duracao_real_w,
		cd_procedimento_W,
		ie_origem_proced_w,
		dt_inicio_real_w,
		dt_fim_cirurgia_w,
		dt_entrada_unidade_w,
		ie_video_w,
		nr_seq_proc_interno_w;

	EXIT WHEN NOT FOUND; /* apply on C01 */

		IF (coalesce(ie_video_w::text, '') = '') THEN

			SELECT 	MAX(ie_video)
			INTO STRICT	ie_video_w
			FROM	procedimento_paciente
			WHERE	nr_cirurgia = nr_seq_cirurgia_w
			AND	cd_procedimento = cd_procedimento_W
			AND	ie_origem_proced = ie_origem_proced_w;

		END IF;

		SELECT	coalesce(MAX(nr_seq_cirurgia),0) + 1
		INTO STRICT	nr_seq_cirurgia_cih_w
		FROM	cih_cirurgia
		WHERE	nr_ficha_ocorrencia 	= nr_ficha_ocorrencia_p;

		SELECT	coalesce(MAX(b.nr_seq_interno),0)
		INTO STRICT	nr_seq_interno_w
		FROM	atend_paciente_unidade a,
			unidade_atendimento b
		WHERE	a.cd_unidade_basica	= b.cd_unidade_basica
		AND	a.cd_setor_atendimento 	= b.cd_setor_atendimento
		AND	a.cd_unidade_compl 	= b.cd_unidade_compl
		AND	a.nr_atendimento		= coalesce(nr_atendimento_p, nr_atendimento_w)
		AND	a.dt_entrada_unidade	= dt_entrada_unidade_w;

		ie_duracao_cirurgia_w := 1;

		IF (nr_min_duracao_real_w > 0) THEN

			IF (nr_min_duracao_real_w < 120) THEN
				ie_duracao_cirurgia_w := 2;
			ELSIF (nr_min_duracao_real_w > 600) THEN
				ie_duracao_cirurgia_w := 7;
			ELSIF (nr_min_duracao_real_w > 480) THEN
				ie_duracao_cirurgia_w := 6;
			ELSIF (nr_min_duracao_real_w > 360) THEN
				ie_duracao_cirurgia_w := 5;
			ELSIF (nr_min_duracao_real_w > 240) THEN
				ie_duracao_cirurgia_w := 4;
			ELSIF (nr_min_duracao_real_w > 120) THEN
				ie_duracao_cirurgia_w := 3;
			END IF;

		END IF;


		INSERT INTO cih_cirurgia(NR_FICHA_OCORRENCIA,
			NR_SEQ_CIRURGIA,
			DT_CIRURGIA,
			DS_CIRURGIA,
			CD_MEDICO_CIRURGIAO,
			IE_DURACAO_CIRURGIA,
			CD_TIPO_CIRURGIA,
			DT_ATUALIZACAO,
			NM_USUARIO,
			CD_TIPO_ANESTESIA,
			IE_ASA_ESTADO_PACIENTE,
			IE_CARATER_CIRURGIA,
			NR_MIN_DURACAO_REAL,
			CD_PROCEDIMENTO,
			IE_ORIGEM_PROCED,
			DT_INICIO_REAL,
			DT_FIM_CIRURGIA,
			NR_SEQ_UNIDADE,
			NR_SEQ_CIRURGIA_PAC,
			IE_VIDEO,
			nr_seq_proc_interno)
		VALUES (nr_ficha_ocorrencia_p,
			nr_seq_cirurgia_cih_w,
			dt_inicio_w,
			ds_procedimento_w,
			cd_medico_cirurgiao_w,
			ie_duracao_cirurgia_w,
			cd_tipo_cirurgia_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_tipo_anestesia_w,
			ie_asa_estado_paciente_w,
			ie_carater_cirurgia_w,
			nr_min_duracao_real_w,
			cd_procedimento_W,
			ie_origem_proced_w,
			dt_inicio_real_w,
			dt_fim_cirurgia_w,
			nr_seq_interno_w,
			nr_seq_cirurgia_w,
			ie_video_w,
			nr_seq_proc_interno_w);

		IF ( ie_importar_medic_p = 'S') THEN

			OPEN C02;
			LOOP
			FETCH C02 INTO
				cd_medicamento_w,
				dt_inicial_utilizacao_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */

				SELECT coalesce(MAX(nr_sequencia),0) + 1
				INTO STRICT nr_seq_medic_cirur_w
				FROM cih_cirurgia_medic;

				INSERT INTO cih_cirurgia_medic(nr_sequencia,
					nr_seq_cirurgia,
					nr_ficha_ocorrencia,
					cd_medicamento,
					dt_atendimento,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec)
				VALUES ( nextval('cih_cirurgia_medic_seq'), --nr_seq_medic_cirur_w,
					nr_seq_cirurgia_cih_w,
					nr_ficha_ocorrencia_p,
					cd_medicamento_w,
					dt_inicial_utilizacao_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p);

			END LOOP;
			CLOSE C02;
		END IF;
	END LOOP;
	CLOSE C01;


	nr_ficha_ocorr_ant_w	:= NULL;
	OPEN C03;
	LOOP
	FETCH C03 INTO
		nr_seq_cirurgia_w,
		nr_ficha_ocorr_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */

		ds_aux_w	:= NULL;

		IF (nr_ficha_ocorr_w <> nr_ficha_ocorr_ant_w) OR (coalesce(nr_ficha_ocorr_ant_w::text, '') = '') THEN
			ds_aux_w := WHEB_MENSAGEM_PCK.get_texto(277633,'NR_FICHA_OCORR='||nr_ficha_ocorr_w);
			IF (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') THEN
				ds_aux_w	:= CHR(10) || ds_aux_w;
			END IF;
		END IF;

		ds_erro_w		:= ds_erro_w || ds_aux_w || nr_seq_cirurgia_w || ' ';
		nr_ficha_ocorr_ant_w	:= nr_ficha_ocorr_w;

	END LOOP;
	CLOSE C03;

	/*  Só executar esse bloco, quando a procedure for chamada pela função Ficha de ocorrência CIH.*/

	if (coalesce(Obter_Funcao_Ativa, 0) = 936) then

		SELECT	MAX(cd_pessoa_fisica)
		INTO STRICT	cd_pessoa_fisica_w
		FROM	atendimento_paciente
		WHERE	nr_atendimento = coalesce(nr_atendimento_p, nr_atendimento_w);

		IF (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') THEN

			SELECT	CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'S' END
			INTO STRICT	cirurgia_outros_atend_w
			FROM	cirurgia
			WHERE	cd_pessoa_fisica = cd_pessoa_fisica_w
			AND	nr_atendimento <> coalesce(nr_atendimento_p, nr_atendimento_w)
			AND	cih_importar_procedimento(cd_procedimento_princ, ie_origem_proced) = 'S';

			IF (cirurgia_outros_atend_w = 'S') THEN
				ds_aux_w := obter_desc_expressao(737150, '');
				ds_erro_w := ds_aux_w || CHR(13) || CHR(10) || ds_erro_w;
			END IF;

		END IF;

	end if;

	ds_erro_p	:= SUBSTR(ds_erro_w,1,255);

END IF;

IF (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') THEN COMMIT; END IF;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cih_importar_cirurgia ( nr_ficha_ocorrencia_p bigint, nm_usuario_p text, ie_importar_medic_p text, ie_importar_propaci_p text, nr_atendimento_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

