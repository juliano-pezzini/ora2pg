-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualiza_guia_lib_contrat ( nr_seq_guia_p bigint, ds_observacao_p text, nm_usuario_p text) AS $body$
DECLARE


qt_itens_lib_w			bigint;
qt_proc_lib_w			bigint;
qt_mat_lib_w			bigint;
qt_itens_neg_w			bigint;
qt_proc_neg_w			bigint;
qt_mat_neg_w			bigint;
cd_senha_w			varchar(20);
dt_validade_w			timestamp;
nr_seq_segurado_w		bigint;
dt_solicitacao_w		timestamp;
ie_tipo_guia_w			varchar(4);
ie_tipo_processo_w		varchar(4);
qt_dias_validade_w		bigint;
ie_status_w			varchar(4);
ie_estagio_w			bigint;
qt_reg_analise_w		bigint;
ds_observacao_w			varchar(4000);
ds_observacao_ww		varchar(4000);


BEGIN

select	count(1)
into STRICT	qt_proc_lib_w
from	pls_guia_plano_proc
where	nr_seq_guia	= nr_seq_guia_p
and	ie_status	= 'L';

select	count(1)
into STRICT	qt_mat_lib_w
from	pls_guia_plano_mat
where	nr_seq_guia	= nr_seq_guia_p
and	ie_status	= 'L';

qt_itens_lib_w	:= qt_proc_lib_w + qt_mat_lib_w;

select	count(1)
into STRICT	qt_proc_neg_w
from	pls_guia_plano_proc
where	nr_seq_guia	= nr_seq_guia_p
and	ie_status	= 'K';

select	count(1)
into STRICT	qt_mat_neg_w
from	pls_guia_plano_mat
where	nr_seq_guia	= nr_seq_guia_p
and	ie_status	= 'K';

qt_itens_neg_w	:= qt_proc_neg_w + qt_mat_neg_w;

if (qt_itens_lib_w	> 0) and (qt_itens_neg_w	> 0) then
	select	nr_seq_segurado,
		dt_solicitacao,
		ie_tipo_guia,
		ie_tipo_processo
	into STRICT	nr_seq_segurado_w,
		dt_solicitacao_w,
		ie_tipo_guia_w,
		ie_tipo_processo_w
	from	pls_guia_plano
	where	nr_sequencia	= nr_seq_guia_p;

	if (ie_tipo_processo_w <> 'P') then
		qt_dias_validade_w := (obter_valor_param_usuario(1204, 3, Obter_Perfil_Ativo, nm_usuario_p, 0))::numeric;
	else
		qt_dias_validade_w := (pls_obter_param_padrao_funcao(11, 1247))::numeric;
	end if;

	SELECT * FROM pls_gerar_validade_senha(	nr_seq_guia_p, nr_seq_segurado_w, qt_dias_validade_w, dt_solicitacao_w, ie_tipo_guia_w, nm_usuario_p, dt_validade_w, cd_senha_w) INTO STRICT dt_validade_w, cd_senha_w;

	ds_observacao_ww	:= substr(ds_observacao_w||chr(10)||ds_observacao_p,1,4000);

	update	pls_guia_plano
	set	ie_status		= '1',
		ie_estagio		= 10,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		dt_validade_senha	= dt_validade_w,
		cd_senha		= cd_senha_w,
		ds_observacao		= ds_observacao_ww,
		dt_autorizacao		= clock_timestamp()
	where	nr_sequencia		= nr_seq_guia_p;

	ie_status_w	:= '1';
	ie_estagio_w	:= 10;
elsif (qt_itens_lib_w	= 0) and (qt_itens_neg_w	> 0) then

	ds_observacao_ww	:= substr(ds_observacao_w||chr(10)||ds_observacao_p,1,4000);

	update	pls_guia_plano
	set	ie_status		= '3',
		ie_estagio		= 4,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		ds_observacao		= ds_observacao_ww
	where	nr_sequencia		= nr_seq_guia_p;

	ie_status_w	:= '3';
	ie_estagio_w	:= 4;
elsif (qt_itens_lib_w	> 0) and (qt_itens_neg_w	= 0) then
	select	nr_seq_segurado,
		dt_solicitacao,
		ie_tipo_guia,
		ie_tipo_processo,
		ds_observacao
	into STRICT	nr_seq_segurado_w,
		dt_solicitacao_w,
		ie_tipo_guia_w,
		ie_tipo_processo_w,
		ds_observacao_w
	from	pls_guia_plano
	where	nr_sequencia	= nr_seq_guia_p;

	if (ie_tipo_processo_w <> 'P') then
		qt_dias_validade_w := (obter_valor_param_usuario(1204, 3, Obter_Perfil_Ativo, nm_usuario_p, 0))::numeric;
	else
		qt_dias_validade_w := (pls_obter_param_padrao_funcao(11, 1247))::numeric;
	end if;

	SELECT * FROM pls_gerar_validade_senha(	nr_seq_guia_p, nr_seq_segurado_w, qt_dias_validade_w, dt_solicitacao_w, ie_tipo_guia_w, nm_usuario_p, dt_validade_w, cd_senha_w) INTO STRICT dt_validade_w, cd_senha_w;

	ds_observacao_ww	:= substr(ds_observacao_w||chr(10)||ds_observacao_p,1,4000);

	update	pls_guia_plano
	set	ie_status		= '1',
		ie_estagio		= 6,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		dt_validade_senha	= dt_validade_w,
		cd_senha		= cd_senha_w,
		ds_observacao		= ds_observacao_ww,
		dt_autorizacao		= clock_timestamp()
	where	nr_sequencia		= nr_seq_guia_p;

	ie_status_w	:= '1';
	ie_estagio_w	:= 6;
end if;

CALL pls_guia_gravar_historico(	nr_seq_guia_p, 5, 'Status: ' || ie_status_w ||
				' / Estágio: ' || ie_estagio_w || ' / Observação: ' || substr(ds_observacao_p,1,255),
				null, nm_usuario_p);


select	count(1)
into STRICT	qt_reg_analise_w
from	pls_auditoria
where	nr_seq_guia	= nr_seq_guia_p
and	coalesce(dt_liberacao::text, '') = ''
and	ie_status	<> 'F';

if (qt_reg_analise_w	> 0) then
	update	pls_auditoria
	set	ie_status	= 'F',
		dt_liberacao	= clock_timestamp(),
		dt_atualizacao	= clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where	nr_seq_guia	= nr_seq_guia_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualiza_guia_lib_contrat ( nr_seq_guia_p bigint, ds_observacao_p text, nm_usuario_p text) FROM PUBLIC;

