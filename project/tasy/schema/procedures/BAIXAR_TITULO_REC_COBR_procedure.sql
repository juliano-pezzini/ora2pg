-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixar_titulo_rec_cobr ( nr_seq_tit_rec_cobr_p bigint, ie_acao_p text, nm_usuario_p text, dt_recebimento_p timestamp, nr_seq_movto_trans_fin_p bigint default null) AS $body$
DECLARE


ds_erro_w			varchar(4000);
ie_desfazer_baixa_w		varchar(255);
cd_cgc_w			varchar(14);
cd_pessoa_fisica_w		varchar(10);
ie_acao_w			varchar(3);
ie_acresc_cobr_w		varchar(2);
ie_dt_baixa_cobr_escrit_w	varchar(1);
ie_trans_tit_cobr_escrit_w	varchar(1);
ie_estornar_perda_w		varchar(1);
ie_rejeitado_w			varchar(1);
ie_gerar_nc_pag_duplic_w	varchar(1)	:= 'N';
ie_movto_bco_cobr_escrit_w	varchar(1);
ie_apropriar_w			varchar(1);
vl_baixa_w			double precision;
vl_desconto_w			double precision;
vl_acrescimo_w			double precision;
vl_juro_w			double precision;
vl_multa_w			double precision;
vl_credito_w			double precision;
vl_titulos_nc_w			double precision;
vl_saldo_titulo_w		double precision;
vl_juros_w			double precision;
vl_rec_maior_w			double precision;
nr_seq_trans_financ_w		bigint	:= null;
nr_seq_conta_banco_w		bigint;
nr_seq_carteira_cobr_w		bigint;
cd_tipo_recebimento_w		bigint;
nr_seq_cobranca_w		bigint;
nr_titulo_w			bigint;
qt_tit_nc_w			bigint;
nr_titulo_pagar_w		bigint;
nr_seq_trans_fin_abat_w		bigint;
nr_seq_trans_fin_abat_pag_w	bigint;
nr_seq_liq_w			bigint;
nr_seq_regra_w			bigint;
nr_seq_baixa_estorno_w		bigint;
nr_seq_classe_w			bigint;
vl_Recebido_w			double precision;
pr_multa_padrao_w		double precision;
nr_seq_baixa_w			integer	:= null;
cd_convenio_w			integer;
cd_moeda_padrao_w		integer;
cd_tipo_receb_abat_w		integer;
cd_tipo_baixa_abat_w		integer;
cd_estabelecimento_w		smallint;
cd_banco_w			banco_estabelecimento.cd_banco%type;
dt_liq_cobr_w			timestamp;
dt_baixa_w			timestamp;
dt_liq_titulo_cobr_w		timestamp;
vl_despesa_bancaria_w		double precision;
ie_valor_desp_cobr_w		varchar(1) := 'N';
vl_amortizacao_w		double precision := 0;
nr_titulo_contab_w		bigint;
dt_credito_bancario_w	cobranca_escritural.dt_credito_bancario%type;
ie_aprop_mens_w				varchar(1);
ie_pf_pj_w					varchar(1);
ie_juros_multa_mens_w		pls_parametros_cr.ie_juros_multa_mens%type;
ie_origem_titulo_w			titulo_receber.ie_origem_titulo%type;
ie_apropriar_juros_multa_w	titulo_receber_liq.ie_apropriar_juros_multa%type := 'N';
cd_tipo_receb_escrit_w		parametro_contas_receber.cd_tipo_receb_escrit%type;	
dt_remessa_retorno_w		cobranca_escritural.dt_remessa_retorno%type;
nr_seq_cob_previa_w		titulo_receber.nr_seq_cob_previa%type;
nr_seq_requisicao_w		pls_requisicao.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	nr_titulo_pagar
	from	titulo_receber_nc
	where	nr_titulo_rec	= nr_titulo_w;

C02 CURSOR FOR
	SELECT	a.nr_sequencia
	from	tipo_recebimento b,
		titulo_receber_liq a
	where	a.nr_titulo		= nr_titulo_w
	and	a.cd_tipo_recebimento	= b.cd_tipo_recebimento
	and	b.ie_tipo_consistencia	= 9
	and (a.vl_recebido > 0 or a.vl_perdas > 0);


BEGIN

select	b.cd_banco,
	d.nr_seq_conta_banco,		-- Edgar 25/11/2008, OS 118259, troquei o a.nr_seq_conta_banco pelo d.nr_seq_conta_banco
	a.nr_seq_carteira_cobr,
	a.cd_estabelecimento,
	a.cd_pessoa_fisica,
	a.cd_cgc,
	CASE WHEN obter_convenio_tit_rec(a.nr_titulo)=0 THEN null  ELSE obter_convenio_tit_rec(a.nr_titulo) END ,
	d.nr_sequencia,
	d.cd_estabelecimento,
	c.dt_liquidacao,
	coalesce(c.vl_liquidacao,0) + coalesce(c.vl_despesa_bancaria,0) - coalesce(c.vl_acrescimo,0) -
		CASE WHEN coalesce(c.vl_juros,0)=0 THEN 			CASE WHEN coalesce(b.ie_cobr_juro_multa_calc,'N')='S' THEN coalesce(c.vl_juros_calc,0)  ELSE 0 END   ELSE c.vl_juros END  - 
		CASE WHEN coalesce(c.vl_multa,0)=0 THEN 			CASE WHEN coalesce(b.ie_cobr_juro_multa_calc,'N')='S' THEN coalesce(c.vl_multa_calc,0)  ELSE 0 END   ELSE c.vl_multa END , --Alterado para obter o valor de juros e multa calculados, caso o valor de juros e multa nao estiver preenchido - OS 435423
	coalesce(c.vl_desconto,0),
	coalesce(c.vl_acrescimo,0),
	coalesce(c.vl_liquidacao,0),
	a.nr_titulo,
	CASE WHEN coalesce(c.vl_juros,0)=0 THEN 		CASE WHEN coalesce(b.ie_cobr_juro_multa_calc,'N')='S' THEN coalesce(c.vl_juros_calc,0)  ELSE 0 END   ELSE c.vl_juros END , --Alterado para obter o valor de juros calculado, caso o valor de juros e multa nao estiver preenchido - OS 435423
	CASE WHEN coalesce(c.vl_multa,0)=0 THEN 		CASE WHEN coalesce(b.ie_cobr_juro_multa_calc,'N')='S' THEN coalesce(c.vl_multa_calc,0)  ELSE 0 END   ELSE c.vl_multa END , --Alterado para obter o valor de multa calculado, caso o valor de juros e multa nao estiver preenchido - OS 435423
	e.ie_rejeitado,
	coalesce(c.vl_despesa_bancaria,0),
	c.nr_seq_trans_financ,
	d.dt_credito_bancario,
	d.dt_remessa_retorno
into STRICT	cd_banco_w,
	nr_seq_conta_banco_w,
	nr_seq_carteira_cobr_w,
	cd_estabelecimento_w,
	cd_pessoa_fisica_w,
	cd_cgc_w,
	cd_convenio_w,
	nr_seq_cobranca_w,
	cd_estabelecimento_w,
	dt_liq_cobr_w,
	vl_baixa_w,
	vl_desconto_w,
	vl_acrescimo_w,
	vl_credito_w,
	nr_titulo_w,
	vl_juros_w,
	vl_multa_w,
	ie_rejeitado_w,
	vl_despesa_bancaria_w,
	nr_seq_trans_financ_w,
	dt_credito_bancario_w,
	dt_remessa_retorno_w
FROM cobranca_escritural d, titulo_receber a
LEFT OUTER JOIN banco_estabelecimento b ON (a.nr_seq_conta_banco = b.nr_sequencia)
, titulo_receber_cobr c
LEFT OUTER JOIN banco_ocorr_escrit_ret e ON (c.nr_seq_ocorrencia_ret = e.nr_sequencia)
WHERE c.nr_titulo		= a.nr_titulo and c.nr_seq_cobranca	= d.nr_sequencia and c.nr_sequencia		= nr_seq_tit_rec_cobr_p;

select	max(ie_valor_desp_cobr)
into STRICT	ie_valor_desp_cobr_w
from	banco_estabelecimento
where	nr_sequencia = nr_seq_conta_banco_w;

if (coalesce(ie_valor_desp_cobr_w,'N') = 'N') then
	vl_despesa_bancaria_w := 0;
else
	vl_baixa_w := vl_baixa_w - vl_despesa_bancaria_w;
end if;

ie_desfazer_baixa_w := Obter_Param_Usuario(815, 17, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_desfazer_baixa_w);
ie_estornar_perda_w := Obter_Param_Usuario(815, 19, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_estornar_perda_w);
ie_aprop_mens_w := Obter_Param_Usuario(815, 48, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_aprop_mens_w); -- AAMFIRMO OS 1204964.
if (ie_estornar_perda_w = 'S') and (ie_rejeitado_w = 'L') and (ie_acao_p <> 'E') then
	open C02;
	loop
	fetch C02 into
		nr_seq_liq_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */

		CALL estornar_tit_receber_liq(nr_titulo_w,nr_seq_liq_w,clock_timestamp(),nm_usuario_p,'N',WHEB_MENSAGEM_PCK.get_texto(278931),'S');

	end loop;
	close C02;
end if;

select	cd_moeda_padrao,
	coalesce(ie_dt_baixa_cobr_escrit,'A'),
	pr_multa_padrao,
	ie_acresc_cobr,
	coalesce(ie_trans_tit_cobr_escrit,'N'),
	nr_seq_trans_fin_abat,
	cd_tipo_receb_abat,
	ie_movto_bco_cobr_escrit,
	coalesce(vl_maximo_amortizacao,0)
into STRICT	cd_moeda_padrao_w,
	ie_dt_baixa_cobr_escrit_w,
	pr_multa_padrao_w,
	ie_acresc_cobr_w,
	ie_trans_tit_cobr_escrit_w,
	nr_seq_trans_fin_abat_w,
	cd_tipo_receb_abat_w,
	ie_movto_bco_cobr_escrit_w,
	vl_amortizacao_w
from	parametro_contas_receber
where	cd_estabelecimento	= cd_estabelecimento_w;

/*Coloquei separado aqui pois no select acima nenhum campo tem max*/

select	max(a.cd_tipo_receb_escrit)
into STRICT	cd_tipo_receb_escrit_w
from	parametro_contas_receber a
where	cd_estabelecimento	= cd_estabelecimento_w;	

select	min(cd_tipo_recebimento)
into STRICT	cd_tipo_recebimento_w
from	tipo_recebimento
where	ie_tipo_consistencia = 1
and     ((cd_estabelecimento = cd_estabelecimento_w) or (coalesce(cd_estabelecimento::text, '') = ''))
and 	ie_situacao = 'A';

if (coalesce(nr_seq_trans_financ_w::text, '') = '') then

	if (ie_trans_tit_cobr_escrit_w = 'S') then

		select	max(nr_seq_trans_fin_baixa)
		into STRICT	nr_seq_trans_financ_w
		from	titulo_receber
		where	nr_titulo	= nr_titulo_w;

	else

		nr_seq_trans_financ_w := obter_trans_fin_regra('ETR', cd_estabelecimento_w, cd_pessoa_fisica_w, cd_cgc_w, cd_convenio_w, cd_banco_w, null, nr_seq_conta_banco_w, nr_seq_carteira_cobr_w, null, nr_seq_trans_financ_w);

	end if;

	if (coalesce(nr_seq_trans_financ_w::text, '') = '') then

		select	nr_seq_trans_cobr_escrit
		into STRICT	nr_seq_trans_financ_w
		from	parametro_contas_receber
		where	cd_estabelecimento	= cd_estabelecimento_w;

		if (coalesce(nr_seq_trans_financ_w::text, '') = '') then

			select	min(nr_sequencia)
			into STRICT	nr_seq_trans_financ_w
			from	transacao_financeira
			where	ie_acao	= 1
			and	cd_estabelecimento	= cd_estabelecimento_w;

		end if;

	end if;

end if;

select	coalesce(max(nr_sequencia),0) + 1
into STRICT	nr_seq_baixa_w
from	titulo_receber_liq
where	nr_titulo	= nr_titulo_w;

if (ie_dt_baixa_cobr_escrit_w = 'A') then
	dt_baixa_w	:= dt_liq_cobr_w;
elsif (ie_dt_baixa_cobr_escrit_w = 'L') then
	dt_baixa_w	:= dt_recebimento_p;
elsif (ie_dt_baixa_cobr_escrit_w = 'R') then
	dt_baixa_w	:= dt_remessa_retorno_w;
end if;

if (ie_acresc_cobr_w = 'S' and coalesce(vl_acrescimo_w,0) > 0) then -- afstringari - OS165149 - 14/09/2009
	vl_multa_w	:= ((vl_baixa_w + vl_acrescimo_w) * pr_multa_padrao_w) / 100;
	vl_juro_w	:= vl_acrescimo_w - vl_multa_w;
else
	vl_juro_w	:= coalesce(vl_acrescimo_w,0) + coalesce(vl_juros_w,0);
end if;

if (ie_acao_p = 'E') then
	vl_baixa_w	:= vl_baixa_w * -1;
	vl_desconto_w	:= vl_desconto_w * -1;
	vl_acrescimo_w	:= vl_acrescimo_w * -1;
	vl_multa_w	:= vl_multa_w * -1;
	vl_juro_w	:= vl_juro_w * -1;
end if;

if (nr_seq_baixa_w = 1) and (vl_baixa_w < 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(181574,'NR_TITULO=' || nr_titulo_w);
end if;

if (coalesce(ie_aprop_mens_w,'N') = 'S') then
	
	/*Mesmo select do objeto 368737 utilizado no evento DmCorCre_dm.Titulo_Receber_liq_qBeforePost
	Verificar se o titulo e de PF*/
	select 	CASE WHEN coalesce(max(a.cd_pessoa_fisica)::text, '') = '' THEN 'N'  ELSE 'S' END
	into STRICT	ie_pf_pj_w
	from 	titulo_receber a
	where 	a.nr_titulo = nr_titulo_w;
	
	/*Mesmo select do objeto 368735 utilizado no evento DmCorCre_dm.Titulo_Receber_liq_qBeforePost
	Verificar como esta o parametro para apropria no OPS*/
	select	coalesce(max(a.ie_juros_multa_mens),'S')
	into STRICT	ie_juros_multa_mens_w
	from	pls_parametros_cr a
	where	cd_estabelecimento	= coalesce(obter_estabelecimento_ativo, cd_estabelecimento_w);
	
	/*Mesmo select do objeto 369134 utilizado no evento DmCorCre_dm.Titulo_Receber_liq_qBeforePost
	Verificar a origem do titulo*/
	
	select	max(a.ie_origem_titulo)
	into STRICT	ie_origem_titulo_w
	from	titulo_receber a
	where	a.nr_titulo = nr_titulo_w;
	
	if ((ie_juros_multa_mens_w = 'S') or (ie_juros_multa_mens_w = 'PF' AND ie_pf_pj_w = 'S')) and (ie_origem_titulo_w = '3') then
		ie_apropriar_juros_multa_w := 'S';
	else
		ie_apropriar_juros_multa_w := 'N';
	end if;

end if;

/* Se for estorno, estornar a baixa que ja havia sido lancada e nao gerar uma nova, devido aos tratamentos que sao feitos na baixa original */

if (ie_acao_p = 'E') then
	/* Buscar a baixa anterior */

	select	max(a.nr_sequencia)
	into STRICT	nr_seq_baixa_w
	from	titulo_receber_liq a
	where	not exists (SELECT	1
		from	titulo_receber_liq x
		where	x.nr_seq_liq_origem	= a.nr_sequencia
		and	x.nr_titulo		= a.nr_titulo)
	and	coalesce(a.nr_seq_liq_origem::text, '') = ''
	and	a.nr_titulo		= nr_titulo_w
	and	a.nr_seq_cobranca	= nr_seq_cobranca_w;

	if (nr_seq_baixa_w IS NOT NULL AND nr_seq_baixa_w::text <> '') then
	CALL estornar_tit_receber_liq(nr_titulo_w,nr_seq_baixa_w,coalesce(dt_baixa_w, trunc(clock_timestamp(),'dd')),nm_usuario_p,'N',null,ie_movto_bco_cobr_escrit_w);
	end if;

	select	max(nr_sequencia)
	into STRICT	nr_seq_baixa_estorno_w
	from	titulo_receber_liq a
	where	a.nr_titulo	= nr_titulo_w;
	
	if (nr_seq_baixa_estorno_w IS NOT NULL AND nr_seq_baixa_estorno_w::text <> '') then
		update	titulo_receber_liq
		set	nr_seq_cobranca	= nr_seq_cobranca_w,
			nr_seq_movto_trans_fin = nr_seq_movto_trans_fin_p
		where	nr_titulo	= nr_titulo_w
		and	nr_sequencia	= nr_seq_baixa_estorno_w;
	end if;
else
	insert into titulo_receber_liq(nr_titulo,
		nr_sequencia,
		dt_recebimento,
		vl_recebido,
		vl_descontos,
		vl_juros,
		vl_multa,
		vl_rec_maior,
		vl_glosa,
		cd_moeda,
		dt_atualizacao,
		nm_usuario,
		cd_tipo_recebimento,
		ie_acao,
		nr_lote_contabil,
		nr_seq_trans_fin,
		ie_lib_caixa,
		nr_seq_conta_banco,
		nr_seq_cobranca,
		nr_lote_contab_antecip,
		nr_lote_contab_pro_rata,
		vl_despesa_bancaria,
		nr_seq_movto_trans_fin,
		dt_credito_banco,
		dt_real_recebimento,
		ie_apropriar_juros_multa)
	values (nr_titulo_w,
		nr_seq_baixa_w,
		coalesce(dt_baixa_w, trunc(clock_timestamp(),'dd')),
		vl_baixa_w,
		vl_desconto_w,
		vl_juro_w,
		vl_multa_w,
		0,
		0,
		cd_moeda_padrao_w,
		clock_timestamp(),
		nm_usuario_p,
		coalesce(cd_tipo_receb_escrit_w,cd_tipo_recebimento_w),
		'I', 
		0, 
		nr_seq_trans_financ_w, 
		'S',
		nr_seq_conta_banco_w,
		nr_seq_cobranca_w,
		0,
		0,
		vl_despesa_bancaria_w,
		nr_seq_movto_trans_fin_p,
		dt_credito_bancario_w,
		dt_credito_bancario_w,
		coalesce(ie_apropriar_juros_multa_w,'N'));
end if;			
	
/* Elton em 22/02/2010 OS 195860 - Criado para baixar as notas de credito do titulo a receber ao realizar a baixa pela cobranca escritural */
	
select	vl_saldo_titulo
into STRICT	vl_saldo_titulo_w
from	titulo_receber
where	nr_titulo	= nr_titulo_w;

select	cd_tipo_baixa_abat,
	nr_seq_trans_fin_abat
into STRICT	cd_tipo_baixa_abat_w,
	nr_seq_trans_fin_abat_pag_w
from	parametros_contas_pagar
where	cd_estabelecimento	= cd_estabelecimento_w;

select	coalesce(sum(a.vl_saldo_titulo),0)
into STRICT	vl_titulos_nc_w
from	titulo_receber_nc b,
	titulo_pagar a
where	a.nr_titulo		= b.nr_titulo_pagar
and	b.nr_titulo_rec		= nr_titulo_w;

if	((vl_credito_w + vl_titulos_nc_w) = vl_saldo_titulo_w) then
	open C01;
	loop
	fetch C01 into
		nr_titulo_pagar_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */	

		if (nr_titulo_pagar_w IS NOT NULL AND nr_titulo_pagar_w::text <> '') then
			BAIXAR_TITULOS_ABATIMENTO(0,
						nr_titulo_w,
						nr_titulo_pagar_w,
						cd_tipo_baixa_abat_w,
						cd_tipo_receb_abat_w,
						nr_seq_trans_fin_abat_pag_w,
						nr_seq_trans_fin_abat_w,
						nm_usuario_p,
						dt_recebimento_p,
						'',
						'');
		end if;				
	end loop;
	close C01;
end if;
/* Fim Elton OS 195860*/



/* Francisco - 10/02/2010 - OS 194892 */

if (vl_amortizacao_w = 0) then
	CALL pls_gerar_amortizacao_regra(nr_titulo_w, nr_seq_baixa_w, nm_usuario_p, 'N');
end if;

SELECT * FROM obter_regra_acao_pag_duplic(dt_recebimento_p, cd_estabelecimento_w, nm_usuario_p, nr_seq_regra_w, ie_acao_w) INTO STRICT nr_seq_regra_w, ie_acao_w;
	
if (ie_acao_w in ('NC','NCM')) then
	ie_apropriar_w := tratar_baixa_duplicidade_tit(nr_seq_tit_rec_cobr_p, null, nr_seq_baixa_w, ie_acao_p, dt_recebimento_p, nm_usuario_p, ie_apropriar_w);
end if;

select	max(a.nr_seq_cob_previa)
into STRICT	nr_seq_cob_previa_w
from	titulo_receber	a
where	a.nr_titulo	= nr_titulo_w;

if (nr_seq_cob_previa_w IS NOT NULL AND nr_seq_cob_previa_w::text <> '') and (vl_baixa_w = vl_saldo_titulo_w) then
	begin
		CALL pls_atualiza_situacao_cobranca(	nr_seq_cob_previa_w, nm_usuario_p, 'N');
	exception
	when others then
		select	max(nr_seq_requisicao)
		into STRICT	nr_seq_requisicao_w
		from	pls_cobranca_previa_serv
		where	nr_sequencia	= nr_seq_cob_previa_w;
		
		if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
		CALL pls_requisicao_gravar_hist(	nr_seq_requisicao_w,
					'L',
					'Titulo '||nr_titulo_w||' da requisicao '||nr_seq_requisicao_w||' nao finalizado. Erro:'|| sqlerrm ||'.',
					null,
					nm_usuario_p);
		end if;
	end;
end if;

/* Francisco - 28/09/2010 */


/* Diether - 26/08/2011 -  OS  344588 - Alterado para chamar a rotina apos tratar a baixa em duplicidade pois neste momento se chamar a atualizar_saldo_tit_rec a baixa ja tera o valor ajustado e nota de credito gerada */

if (coalesce(ie_apropriar_w,'S') = 'S') then
	CALL pls_apropriar_juros_multa_mens(nr_titulo_w,nr_seq_baixa_w,nm_usuario_p,cd_estabelecimento_w,'N',ie_acao_p);
end if;

update	titulo_receber_cobr
set	dt_liquidacao	= trunc(clock_timestamp(),'dd')
where	coalesce(dt_liquidacao::text, '') = ''
and	nr_sequencia	= nr_seq_tit_rec_cobr_p;

begin
CALL Atualizar_Saldo_Tit_Rec(nr_titulo_w, nm_usuario_p);
exception
when others then
	ds_erro_w	:= sqlerrm;
	if (coalesce(ie_desfazer_baixa_w, 'N') = 'S') then
		delete	from titulo_receber_liq
		where	nr_titulo	= nr_titulo_w
		and	nr_sequencia	= nr_seq_baixa_w;

		update	titulo_receber_cobr
		set	dt_liquidacao		 = NULL,
			ds_inconsistencia	= ds_erro_w
		where	(dt_liquidacao IS NOT NULL AND dt_liquidacao::text <> '')
		and	nr_sequencia		= nr_seq_tit_rec_cobr_p;
	else
		CALL wheb_mensagem_pck.exibir_mensagem_abort(181577,'DS_ERRO=' || ds_erro_w || ';' ||'NR_TITULO_W=' || nr_titulo_w);
	end if;
end;

if (ie_acao_p <> 'E') then
	/* ebcabral - 10/09/2012 - OS 470103 - Alterado para gerar a classificacao da baixa apos executar as rotinas que realizam tratamentos na baixa */
	CALL gerar_titulo_rec_liq_cc(cd_estabelecimento_w,
			null,
			nm_usuario_p,
			nr_titulo_w,
			nr_seq_baixa_w);
			
	nr_titulo_contab_w := pls_gerar_tit_rec_liq_mens(nr_titulo_w, nr_seq_baixa_w, nm_usuario_p, nr_titulo_contab_w);
	
	if (nr_titulo_contab_w IS NOT NULL AND nr_titulo_contab_w::text <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(236517, 'NR_TITULO=' || nr_titulo_contab_w);
	end if;	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixar_titulo_rec_cobr ( nr_seq_tit_rec_cobr_p bigint, ie_acao_p text, nm_usuario_p text, dt_recebimento_p timestamp, nr_seq_movto_trans_fin_p bigint default null) FROM PUBLIC;

