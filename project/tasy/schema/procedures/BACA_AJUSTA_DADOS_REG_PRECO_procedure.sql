-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_ajusta_dados_reg_preco ( nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
qt_existe_w				bigint;
nr_seq_licitacao_w				bigint;
nr_sequencia_w				bigint;
nr_seq_lic_item_w				bigint;
nr_seq_reg_compra_w				bigint;
vl_item_w					double precision;
qt_item_w				double precision;
pr_inflacao_w				double precision;

c01 CURSOR FOR 
SELECT	nr_seq_licitacao, 
	nr_seq_lic_item, 
	nr_sequencia 
from	reg_compra_item 
where	coalesce(vl_item::text, '') = '' 
and	coalesce(dt_cancelamento::text, '') = '';

c02 CURSOR FOR 
SELECT	nr_seq_licitacao, 
	nr_seq_lic_item, 
	nr_sequencia 
from	reg_compra_item 
where	coalesce(qt_item::text, '') = '' 
and	coalesce(dt_cancelamento::text, '') = '';

c03 CURSOR FOR 
SELECT	nr_sequencia, 
	nr_seq_reg_compra, 
	nr_seq_licitacao, 
	nr_seq_lic_item 
from	reg_lic_compra_item 
where	coalesce(vl_item::text, '') = '';

c04 CURSOR FOR 
SELECT	nr_seq_licitacao, 
	nr_seq_lic_item 
from	reg_lic_item 
where	coalesce(pr_inflacao::text, '') = '' 
and not exists ( 
	SELECT	1 
	from	reg_lic_item 
	where	(pr_inflacao IS NOT NULL AND pr_inflacao::text <> ''));


BEGIN 
 
select	count(*) 
into STRICT	qt_existe_w 
from	reg_compra_item 
where	coalesce(vl_item::text, '') = '' 
and	coalesce(dt_cancelamento::text, '') = '';
 
if (qt_existe_w > 0) then 
 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_licitacao_w, 
		nr_seq_lic_item_w, 
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		vl_item_w := lic_obter_valor_vencedor_item(nr_seq_licitacao_w, nr_seq_lic_item_w);
		 
		update	reg_compra_item 
		set	vl_item		= vl_item_w 
		where	nr_sequencia	= nr_sequencia_w;
		 
		end;
	end loop;
	close C01;
end if;
 
select	count(*) 
into STRICT	qt_existe_w 
from	reg_compra_item 
where	coalesce(qt_item::text, '') = '' 
and	coalesce(dt_cancelamento::text, '') = '';
 
if (qt_existe_w > 0) then 
 
	open C02;
	loop 
	fetch C02 into	 
		nr_seq_licitacao_w, 
		nr_seq_lic_item_w, 
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		 
		qt_item_w := lic_obter_qt_item(nr_seq_licitacao_w, nr_seq_lic_item_w);
		 
		update	reg_compra_item 
		set	qt_item		= qt_item_w 
		where	nr_sequencia	= nr_sequencia_w;
		 
		end;
	end loop;
	close C02;
end if;
 
select	count(*) 
into STRICT	qt_existe_w 
from	reg_lic_compra_item 
where	coalesce(vl_item::text, '') = '';
 
if (qt_existe_w > 0) then 
 
	open C03;
	loop 
	fetch C03 into	 
		nr_sequencia_w, 
		nr_seq_reg_compra_w, 
		nr_seq_licitacao_w, 
		nr_seq_lic_item_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		 
		begin 
		select	coalesce(vl_item,0) 
		into STRICT	vl_item_w 
		from	reg_compra_item 
		where	nr_seq_reg_compra	= nr_seq_reg_compra_w 
		and	nr_seq_lic_item		= nr_seq_lic_item_w 
		and	coalesce(dt_cancelamento::text, '') = '';
		exception 
		when others then 
			vl_item_w := lic_obter_valor_vencedor_item(nr_seq_licitacao_w, nr_seq_lic_item_w);
		end;
				 
		update	reg_lic_compra_item 
		set	vl_item		= vl_item_w 
		where	nr_sequencia	= nr_sequencia_w;
		 
		end;
	end loop;
	close C03;
end if;	
 
pr_inflacao_w := coalesce(obter_dados_parametro_compras(cd_estabelecimento_p, 11),0);
 
open C04;
loop 
fetch C04 into	 
	nr_seq_licitacao_w, 
	nr_seq_lic_item_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin 
	 
	update	reg_lic_item 
	set	pr_inflacao = pr_inflacao_w 
	where	coalesce(pr_inflacao::text, '') = '';
	 
	end;
end loop;
close C04;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_ajusta_dados_reg_preco ( nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

