-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_obter_qtd_perm_check (nr_seq_turno_p bigint, ie_dia_semana_p text, nr_seq_unid_p bigint, cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, nr_seq_ponto_acesso_p bigint, qt_vagas_p INOUT bigint, qt_ocupado_p INOUT bigint, qt_vagas_esp_p INOUT bigint, qt_ocupado_esp_p INOUT bigint) AS $body$
DECLARE

    /*
      A Rotina é chamada pela função hd_obter_se_perm_check e no calendario de ocupação.
      Antes de qualquer alteração verificar o funcionamento nas duas funcionalidades.
    */
    qt_vagas_w     integer;
    qt_vagas_esp_w integer;

    qt_ocupado_w     integer;
    qt_ocupado_esp_w integer;
    qt_marcado_tmp_w integer := 0;


BEGIN
    SELECT coalesce(MAX(qt_vagas), 0),
           coalesce(MAX(qt_vagas_esp), 0)
      INTO STRICT qt_vagas_w,
           qt_vagas_esp_w
      FROM hd_regra_turno_vaga
     WHERE nr_seq_unidade = nr_seq_unid_p
       AND nr_seq_turno = nr_seq_turno_p
       AND ie_dia_semana = ie_dia_semana_p
       AND cd_estabelecimento = cd_estabelecimento_p;
    -- Verifica se tem  ponto de Acesso  e Soma os temporarios ---
    IF (nr_seq_ponto_acesso_p IS NOT NULL AND nr_seq_ponto_acesso_p::text <> '') THEN
        SELECT COUNT(*)
          INTO STRICT qt_marcado_tmp_w
          FROM hd_escala_dialise_temp
         WHERE cd_pessoa_fisica != cd_pessoa_fisica_p
           AND nr_seq_turno = nr_seq_turno_p
           AND ie_dia_semana = ie_dia_semana_p
           AND nr_seq_unid_dialise = nr_seq_unid_p
           AND ie_acao = 'I';
    END IF;

    SELECT COUNT(*)
      INTO STRICT qt_ocupado_w
      FROM hd_escala_dialise     a,
           hd_escala_dialise_dia b
     WHERE b.nr_seq_turno = nr_seq_turno_p
       AND b.ie_dia_semana = ie_dia_semana_p
       AND a.nr_sequencia = b.nr_seq_escala
       AND a.nr_seq_unid_dialise = nr_seq_unid_p
       AND (b.nr_seq_ponto = nr_seq_ponto_acesso_p OR coalesce(nr_seq_ponto_acesso_p::text, '') = '')
       AND coalesce(a.dt_fim::text, '') = ''
       AND hd_obter_se_paciente_ativo(cd_pessoa_fisica) = 'S'
       AND coalesce(b.dt_fim_escala_dia::text, '') = ''
       AND NOT EXISTS (SELECT 1
              FROM hd_classificacao_sorologia c,
                   hd_paciente_classif_sor    d
             WHERE c.nr_sequencia = d.nr_seq_classificacao
               AND c.ie_situacao = 'A'
               AND c.ie_necessita_vaga_esp = 'S'
               AND d.cd_pessoa_fisica = a.cd_pessoa_fisica
               AND coalesce(d.dt_fim::text, '') = ''
               AND coalesce(ie_prioridade, 999) = (SELECT MIN(coalesce(ie_prioridade, 999))
                                                FROM hd_classificacao_sorologia e,
                                                     hd_paciente_classif_sor    f
                                               WHERE e.nr_sequencia = f.nr_seq_classificacao
                                                 AND e.ie_situacao = 'A'
                                                 AND f.cd_pessoa_fisica = d.cd_pessoa_fisica
                                                 AND coalesce(f.dt_fim::text, '') = ''))
       AND NOT EXISTS (SELECT 1
              FROM hd_escala_dialise_temp
             WHERE nr_seq_escala = b.nr_seq_escala
               AND ie_dia_semana = ie_dia_semana_p
               AND cd_pessoa_fisica = cd_pessoa_fisica_p
               AND nr_seq_turno = nr_seq_turno_p
               AND nr_seq_ponto = nr_seq_ponto_acesso_p
               AND ie_acao = 'D');

    SELECT COUNT(*)
      INTO STRICT qt_ocupado_esp_w
      FROM hd_escala_dialise     a,
           hd_escala_dialise_dia b
     WHERE b.nr_seq_turno = nr_seq_turno_p
       AND b.ie_dia_semana = ie_dia_semana_p
       AND a.nr_sequencia = b.nr_seq_escala
       AND a.nr_seq_unid_dialise = nr_seq_unid_p
       AND (b.nr_seq_ponto = nr_seq_ponto_acesso_p OR coalesce(nr_seq_ponto_acesso_p::text, '') = '')
       AND coalesce(a.dt_fim::text, '') = ''
       AND hd_obter_se_paciente_ativo(cd_pessoa_fisica) = 'S'
       AND coalesce(b.dt_fim_escala_dia::text, '') = ''
       AND EXISTS (SELECT 1
              FROM hd_classificacao_sorologia c,
                   hd_paciente_classif_sor    d
             WHERE c.nr_sequencia = d.nr_seq_classificacao
               AND c.ie_situacao = 'A'
               AND c.ie_necessita_vaga_esp = 'S'
               AND d.cd_pessoa_fisica = a.cd_pessoa_fisica
               AND coalesce(d.dt_fim::text, '') = ''
               AND coalesce(ie_prioridade, 999) = (SELECT MIN(coalesce(ie_prioridade, 999))
                                                FROM hd_classificacao_sorologia e,
                                                     hd_paciente_classif_sor    f
                                               WHERE e.nr_sequencia = f.nr_seq_classificacao
                                                 AND e.ie_situacao = 'A'
                                                 AND f.cd_pessoa_fisica = d.cd_pessoa_fisica
                                                 AND coalesce(f.dt_fim::text, '') = ''))
       AND NOT EXISTS (SELECT 1
              FROM hd_escala_dialise_temp
             WHERE nr_seq_escala = b.nr_seq_escala
               AND ie_dia_semana = ie_dia_semana_p
               AND cd_pessoa_fisica = cd_pessoa_fisica_p
               AND nr_seq_turno = nr_seq_turno_p
               AND nr_seq_ponto = nr_seq_ponto_acesso_p
               AND ie_acao = 'D');

    qt_ocupado_esp_p := qt_ocupado_esp_w + qt_marcado_tmp_w;
    qt_vagas_esp_p   := qt_vagas_esp_w;
    qt_ocupado_p     := qt_ocupado_w + qt_marcado_tmp_w;
    qt_vagas_p       := qt_vagas_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_obter_qtd_perm_check (nr_seq_turno_p bigint, ie_dia_semana_p text, nr_seq_unid_p bigint, cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, nr_seq_ponto_acesso_p bigint, qt_vagas_p INOUT bigint, qt_ocupado_p INOUT bigint, qt_vagas_esp_p INOUT bigint, qt_ocupado_esp_p INOUT bigint) FROM PUBLIC;

