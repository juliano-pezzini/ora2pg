-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sup_gerar_itens_transf_ordem ( nr_ordem_compra_p bigint, nr_seq_ordem_prod_p bigint, nm_usuario_p text) AS $body$
DECLARE


-- Sequencia do item da transferencia;
nr_sequencia_w				bigint;

-- Campos do Cursor C01;
cd_material_w                           		integer;
qt_dose_w				double precision;
cd_unid_med_item_presc_w			varchar(30);
nr_seq_lote_fornec_w			bigint;

-- Quantidade estoque do material;
qt_estoque_mat_w				double precision;
cd_unidade_medida_estoque_w		varchar(30);
qt_material_w				double precision;

-- Quantidade compra do material;
qt_compra_mat_w				double precision;
cd_unidade_medida_compra_w		varchar(30);

-- Select da ordem;
cd_estab_w				integer;
dt_ordem_compra_w			timestamp;
dt_entrega_w				timestamp;
vl_unitario_item_oc_w			double precision;

-- Campos do insert na tabela TRANSF_ORDEM_PROD;
nr_seq_transf_prod_w			bigint;

C01 CURSOR FOR
SELECT	cd_material,
	qt_dose_real,
	cd_unidade_medida_real,
	nr_seq_lote_fornec
FROM	can_ordem_prod_mat
WHERE	nr_seq_ordem = nr_seq_ordem_prod_p;


BEGIN
select	cd_estabelecimento,
	dt_ordem_compra,
	dt_entrega
into STRICT	cd_estab_w,
	dt_ordem_compra_w,
	dt_entrega_w
from	ordem_compra
where	nr_ordem_compra = nr_ordem_compra_p;

open C01;
loop
fetch C01 into
	cd_material_w,
	qt_dose_w,
	cd_unid_med_item_presc_w,
	nr_seq_lote_fornec_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	qt_estoque_mat_w := obter_saldo_estoque(cd_estab_w, cd_material_w, null, trunc(dt_ordem_compra_w, 'mm'), qt_estoque_mat_w);
	vl_unitario_item_oc_w 		:= obter_custo_medio_material(cd_estab_w, clock_timestamp(), cd_material_w);
	qt_material_w 			:= obter_quantidade_convertida(cd_material_w, qt_dose_w, cd_unid_med_item_presc_w, 'UME');
	cd_unidade_medida_estoque_w	:= substr(obter_dados_material_estab(cd_material_w,cd_estab_w,'UME'),1,30);

	select	coalesce(max(nr_item_oci),0) + 1
	into STRICT	nr_sequencia_w
	from	ordem_compra_item
	where	nr_ordem_compra = nr_ordem_compra_p;

	insert into ordem_compra_item(
		nr_ordem_compra,
		nr_item_oci,
		cd_material,
		cd_unidade_medida_compra,
		vl_unitario_material,
		qt_material,
		qt_original,
		dt_atualizacao,
		nm_usuario,
		ie_situacao,
		nr_seq_lote_fornec,
		nr_seq_ordem_prod,
		vl_total_item)
	values (	nr_ordem_compra_p,
		nr_sequencia_w,
		cd_material_w,
		cd_unidade_medida_estoque_w,
		vl_unitario_item_oc_w,
		qt_material_w,
		qt_material_w,
		clock_timestamp(),
		nm_usuario_p,
		'A',
		nr_seq_lote_fornec_w,
		nr_seq_ordem_prod_p,
		round((vl_unitario_item_oc_w * qt_material_w)::numeric,4));

	insert into ordem_compra_item_entrega(
		nr_sequencia,
		nr_ordem_compra,
		nr_item_oci,
		qt_prevista_entrega,
		dt_prevista_entrega,
		dt_atualizacao,
		nm_usuario)
	values (nextval('ordem_compra_item_entrega_seq'),
		nr_ordem_compra_p,
		nr_sequencia_w,
		qt_material_w,
		dt_entrega_w,
		clock_timestamp(),
		nm_usuario_p);
	end;
end loop;
close C01;

select	nextval('transf_ordem_prod_seq')
into STRICT	nr_seq_transf_prod_w
;

insert into transf_ordem_prod(
	nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	nr_ordem_compra,
	nr_seq_ordem_prod)
values (	nr_seq_transf_prod_w,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	nr_ordem_compra_p,
	nr_seq_ordem_prod_p);

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_gerar_itens_transf_ordem ( nr_ordem_compra_p bigint, nr_seq_ordem_prod_p bigint, nm_usuario_p text) FROM PUBLIC;

