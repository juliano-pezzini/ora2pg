-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_procedimentos_rotina ( nr_seq_agenda_p bigint, ds_lista_proced_p text, ds_erro_p INOUT text, nm_usuario_p text, cd_medico_p text default null) AS $body$
DECLARE


ds_lista_proced_w		varchar(4000);
ds_proced_w		varchar(255);
nr_seq_grupo_item_w 	bigint;
qt_tam_lista_w		bigint;
ie_pos_virgula_w 		integer;
ie_pos_separador_w	integer;
ds_erro_w		varchar(255);
ds_pos_separador_w	varchar(255);
qt_procedimento_w	integer;
ie_lado_w			varchar(1);


BEGIN
if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') and (ds_lista_proced_p IS NOT NULL AND ds_lista_proced_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	begin

	ds_lista_proced_w := ds_lista_proced_p;

	while(ds_lista_proced_w IS NOT NULL AND ds_lista_proced_w::text <> '') loop
		begin
		qt_tam_lista_w		:= length(ds_lista_proced_w);
		ie_pos_virgula_w	:= position(',' in ds_lista_proced_w);


		if (ie_pos_virgula_w <> 0) then
			begin
				ds_proced_w		:= substr(ds_lista_proced_w,1,(ie_pos_virgula_w - 1));
				ds_lista_proced_w	:= substr(ds_lista_proced_w,(ie_pos_virgula_w + 1),qt_tam_lista_w);


				ie_pos_separador_w	:= position('-' in ds_proced_w);
				nr_seq_grupo_item_w	:= (substr(ds_proced_w,1,(ie_pos_separador_w - 1)))::numeric;

				ds_pos_separador_w 	:= substr(ds_proced_w,ie_pos_separador_w + 1,(ie_pos_virgula_w - 1));
				ie_pos_separador_w	:= position('-' in ds_pos_separador_w );

				begin
					ie_lado_w	:= substr(ds_pos_separador_w,1,(ie_pos_separador_w - 1));
					if (ie_lado_w = 'null') then
						ie_lado_w := null;
					end if;
				exception
					when others then
					ie_lado_w := null;
				end;


				ds_pos_separador_w 	:= substr(ds_pos_separador_w,ie_pos_separador_w + 1,(ie_pos_virgula_w - 1));
				ie_pos_separador_w	:= position('-' in ds_pos_separador_w );

				begin
					qt_procedimento_w	:= (substr(ds_pos_separador_w,1,(ie_pos_separador_w - 1)))::numeric;
					if (qt_procedimento_w = 0) then
						qt_procedimento_w := 1;
					end if;
				exception
					when others then
					qt_procedimento_w := 1;
				end;
			end;
		else
			begin
				ie_pos_separador_w	:= position('-' in ds_lista_proced_w);
				nr_seq_grupo_item_w	:= (substr(ds_lista_proced_w,1,(ie_pos_separador_w - 1)))::numeric;


				ds_pos_separador_w 	:= substr(ds_proced_w,ie_pos_separador_w + 1,(ie_pos_virgula_w - 1));
				ie_pos_separador_w	:= position('-' in ds_pos_separador_w);

				begin
					ie_lado_w	:= substr(ds_pos_separador_w,1,(ie_pos_separador_w - 1));
					if (ie_lado_w = 'null') then
						ie_lado_w := null;
					end if;
				exception
					when others then
					ie_lado_w := null;
				end;


				ds_pos_separador_w 	:= substr(ds_pos_separador_w,ie_pos_separador_w + 1,(ie_pos_virgula_w - 1));
				ie_pos_separador_w	:= position('-' in ds_pos_separador_w );

				begin
					qt_procedimento_w	:= (substr(ds_pos_separador_w,1,(ie_pos_separador_w - 1)))::numeric;
					if (qt_procedimento_w = 0) then
						qt_procedimento_w := 1;
					end if;
				exception
					when others then
					qt_procedimento_w := 1;
				end;


				ds_lista_proced_w	:= null;
			end;
		end if;

		if (nr_seq_grupo_item_w IS NOT NULL AND nr_seq_grupo_item_w::text <> '') and (nr_seq_grupo_item_w > 0) then
			begin
			ds_erro_w := gerar_proc_rotina_adic_exam(
				nr_seq_agenda_p, nr_seq_grupo_item_w, nm_usuario_p, ds_erro_w, cd_medico_p, qt_procedimento_w, ie_lado_w);
			end;
		end if;
		end;
	end loop;
	end;
end if;
commit;
ds_erro_p		:= ds_erro_w;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_procedimentos_rotina ( nr_seq_agenda_p bigint, ds_lista_proced_p text, ds_erro_p INOUT text, nm_usuario_p text, cd_medico_p text default null) FROM PUBLIC;

