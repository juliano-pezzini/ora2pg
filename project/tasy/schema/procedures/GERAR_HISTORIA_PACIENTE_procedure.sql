-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE v_informacao_w AS (
	ds_campo_valor_w		varchar(2000),
	cd_expressao_campo_w	bigint);
CREATE TYPE v_informacao_cpoe_w AS (
						dt_registro_cpoe_w		timestamp,
						ds_profissional_cpoe_w	varchar(255),
						nr_prescricao_cpoe_w		bigint,
						nr_sequencia_cpoe_w		bigint,
						nr_atendimento_cpoe_w	bigint,
						ds_conteudo_cpoe_w		varchar(2000),
						ds_subgrupo_cpoe_w		varchar(255),
						cd_funcao_cpoe_w		bigint);


CREATE OR REPLACE PROCEDURE gerar_historia_paciente ( dt_inicial_p timestamp, dt_final_p timestamp, cd_pessoa_fisica_p text, nr_atendimento_p bigint, cd_estabelecimento_p bigint, nr_seq_modelo_p bigint, nm_usuario_p text, ie_nome_amigavel_p text default 'N', nr_seq_protocolo_p bigint DEFAULT NULL, ie_problema_paciente_p text DEFAULT NULL) AS $body$
DECLARE


nr_seq_mod_jornada_w		bigint;
w_jornada_pac_grupo_w		bigint;
w_jornada_pac_grupo_ww		bigint := 0;
w_jornada_pac_subgrupo_w	bigint;
w_jornada_pac_registro_w	bigint;
w_jornada_pac_problema_w	bigint;
nr_seq_receita_w		bigint;
nr_seq_med_receita_w		bigint;
nr_seq_solic_exame_w		bigint;
nr_seq_item_solic_w		bigint;
ie_contem_separador_w		bigint;
qt_problema_receita_w		bigint;
qt_problema_solic_ext_w		bigint;
nr_seq_presc_cpoe_w		bigint;
nr_seq_reg_cpoe_w			bigint;
qt_problema_cpoe_w			bigint;
qt_length_receita_w			bigint;
nr_indice_w					bigint := 0;
nr_indice_problema_w		bigint := 0;
qt_horarios_cpoe_w			bigint := 0;
nr_atendimento_w			bigint;
nr_seq_tab_escala_w			bigint;
nr_seq_dbpanel_escala_w		bigint;
ds_receita_w				varchar(1800);
ds_grupo_informacao_w		varchar(255);
ds_informacao_final_w		varchar(4000);
ie_sexo_pf_w				varchar(1);
ds_subgrupo_w				varchar(255);
cd_subgrupo_w				varchar(3);
ds_status_w					varchar(255);
ds_tipo_consulta_w			varchar(255);
ds_exame_w					varchar(1800);
ds_exame_sem_cadastro_w		varchar(1800);
ds_proc_interno_w			varchar(1800);
ds_procedimento_cirurgia_w	varchar(1800);
ds_exame_lab_w				varchar(1800);
ds_material_exame_w			varchar(1800);
ds_expressao_func_w			varchar(255);
ie_altura_regra_sv_w		varchar(1);
ie_peso_regra_sv_w			varchar(1);
ie_temp_regra_sv_w			varchar(1);
ie_freq_card_regra_sv_w		varchar(1);
ie_pa_sis_regra_sv_w		varchar(1);
ie_pa_dia_regra_sv_w		varchar(1);
ie_retorno_sv_w				varchar(1);
nr_seq_w_jornada_pac_registro w_jornada_pac_registro.nr_sequencia%TYPE;
nr_seq_prot_int_pac_w protocolo_int_paciente.nr_sequencia%type;
ds_prot_int_pac_w protocolo_int_paciente.ds_tratamento%type;
ie_linha_separada_w item_suep.IE_LINHA_SEPARADA%type;
ie_separar_eventos_atrasados_w item_suep.IE_SEPARAR_EVENTOS_ATRASADOS%type;
nr_indice_pi_separado_w integer := 0;
qt_protoclos_int_pac_w integer := 0;
ie_tipo_atendimento_w atendimento_paciente.ie_tipo_atendimento%type;
ie_possui_atendimentos_w varchar(1) := 'N';
ie_obito_w  motivo_alta.ie_obito%type;

dt_inicio_exec_w			timestamp;
dt_final_exec_w				timestamp;
ie_jornada_paciente_w		bigint;
qt_jornada_grupo_w			bigint;
qt_jornada_subgrupo_w		bigint;
dt_ultima_geracao_w			timestamp;
ds_intervencao_w			pe_procedimento.ds_procedimento%type;
nr_sequencia_evento_w		bigint := 0;

exibe_prot_sem_liberacao_w varchar(1) := 'S';
nm_usuario_logado_w varchar(244);
type vetor is table of v_informacao_w index by integer;
v_informacao_final_w			vetor;

/*
a.DT_PRESCRICAO,
SUBSTR((select obter_nome_pf(a.cd_medico) from dual),1,60) ds_profissional,
a.nr_prescricao,
b.nr_Sequencia,
a.NR_ATENDIMENTO nr_atendimento_reg,
OBTER_DESC_MATERIAL(b.cd_material) ds_conteudo,
ds_subgrupo_w,
2314 cd_funcao
*/
type vetor_cpoe is table of v_informacao_cpoe_w index by integer;
vt_cpoe_w			vetor_cpoe;

type vetor_final is table of w_jornada_pac_registro%ROWTYPE index by integer;
vt_final_w			vetor_final;

/*type v_problema_final_w is record (
						nr_seq_problema_w		number(10),
						nr_seq_grupo_w	 		number(10),
						nr_seq_origem_w	 		number(10));
type vetor_problema is table of v_problema_final_w index by binary_integer;
vt_problema_final_w			vetor_problema;*/


--Cursor que busca os cadastros
C01 CURSOR FOR
	SELECT 	nr_sequencia,
			ie_tipo_item
	from 	item_suep
	where 	nr_seq_suep = nr_seq_modelo_p
  order by coalesce(NR_SEQ_APRES, 9999), obter_valor_dominio(8828, IE_TIPO_ITEM);

-- Cursor que busca os agendamentos do paciente
C02 CURSOR FOR
	SELECT	b.nr_sequencia cd_agenda,
			a.ds_agenda,
			b.dt_agenda,
			SUBSTR(obter_desc_expressao(298345),1,30) ds_tipo,
			866 cd_funcao,
			b.nr_atendimento nr_atendimento_reg,
			(SELECT OBTER_NOME_PF(OBTER_PROFISSIONAL_AGENDA(a.cd_agenda)) ) ds_profissional,
			'AGENDA_CONSULTA' nm_tabela
	FROM	agenda a,
			agenda_consulta b
	WHERE	a.cd_agenda = b.cd_agenda
	AND		a.cd_tipo_agenda = 5
	AND		b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		b.ie_status_agenda NOT IN ('C','L','B')
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, b.nr_atendimento) = 'S')
	and		dt_agenda between dt_inicio_exec_w and dt_final_exec_w
	
UNION ALL

	SELECT	a.cd_agenda,
			a.ds_agenda,
			b.dt_agenda,
			SUBSTR(obter_desc_expressao(285916),1,30) ds_tipo,
			821 cd_funcao,
			b.nr_atendimento nr_atendimento_reg,
			(select OBTER_NOME_PF(OBTER_PROFISSIONAL_AGENDA(a.cd_agenda)) ) ds_profissional,
			'AGENDA_CONSULTA' nm_tabela
	FROM	agenda a,
			agenda_consulta b
	WHERE	a.cd_agenda = b.cd_agenda
	AND		a.cd_tipo_agenda IN (3,4)
	AND		b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		b.ie_status_agenda NOT IN ('C','L','B')
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, b.nr_atendimento) = 'S')
	and		dt_agenda between dt_inicio_exec_w and dt_final_exec_w
	
UNION ALL

	SELECT	b.nr_sequencia cd_agenda,
			a.ds_agenda,
			PKG_DATE_UTILS.get_DateTime(b.dt_agenda, b.HR_INICIO) dt_agenda,
			SUBSTR(obter_desc_expressao(761511),1,330) ds_tipo,
			820 cd_funcao,
			b.nr_atendimento nr_atendimento_reg,
			(select OBTER_NOME_PF(OBTER_PROFISSIONAL_AGENDA(a.cd_agenda)) ) ds_profissional,
			'AGENDA_PACIENTE' nm_tabela
	FROM	agenda a,
			agenda_paciente b
	WHERE	a.cd_agenda = b.cd_agenda
	AND		a.cd_tipo_agenda = 2
	AND		b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		b.ie_status_agenda NOT IN ('C','L','B')
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, b.cd_doenca_cid, b.nr_atendimento) = 'S')
	and		PKG_DATE_UTILS.get_DateTime(b.dt_agenda, b.HR_INICIO) between dt_inicio_exec_w and dt_final_exec_w
	
UNION ALL

	SELECT	b.nr_sequencia cd_agenda,
			a.ds_agenda,
			PKG_DATE_UTILS.get_DateTime(b.dt_agenda, b.HR_INICIO) dt_agenda,
			SUBSTR(obter_desc_expressao(486364),1,330) ds_tipo,
			871 cd_funcao,
			b.nr_atendimento nr_atendimento_reg,
			(select OBTER_NOME_PF(OBTER_PROFISSIONAL_AGENDA(a.cd_agenda)) ) ds_profissional,
			'AGENDA_PACIENTE' nm_tabela
	FROM	agenda a,
			agenda_paciente b
	WHERE	a.cd_agenda = b.cd_agenda
	AND		a.cd_tipo_agenda = 1
	AND		b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		b.ie_status_agenda NOT IN ('C','L','B')
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, b.cd_doenca_cid, b.nr_atendimento) = 'S')
	and		PKG_DATE_UTILS.get_DateTime(b.dt_agenda, b.HR_INICIO) between dt_inicio_exec_w and dt_final_exec_w
	
UNION ALL

	SELECT  a.nr_sequencia cd_agenda,
			SUBSTR(rxt_obter_desc_equipamento(a.nr_seq_equipamento),1,80) ds_agenda,
			a.dt_agenda,
			SUBSTR(obter_desc_expressao(297224),1,255) ds_tipo,
			3030 cd_funcao,
			a.nr_atendimento nr_atendimento_reg,
			SUBSTR((select obter_nome_medico_rxt_tumor(a.nr_seq_tratamento, a.nr_sequencia) ),1,80) ds_profissional,
			'RXT_AGENDA' nm_tabela
	FROM 	rxt_agenda a
	WHERE	a.ie_status_agenda NOT IN ('C','L','B')
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	AND		a.cd_pessoa_fisica = cd_pessoa_fisica_p
	and		dt_agenda between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 2 DESC;

-- Cursor que busca os avaliacoes nutricionais do paciente
C03 CURSOR FOR
	SELECT  a.nr_sequencia,
			a.dt_avaliacao,
			substr((SELECT obter_nome_pf(a.cd_profissional) ),1,255) ds_profissional,
			obter_valor_dominio(4844, a.ie_aval_nut) ds_aval_nut,
			281 cd_funcao,
			41  nr_seq_item_pront,
			a.nr_atendimento nr_atendimento_reg,
			'AVAL_NUTRICAO' nm_tabela
	from 	aval_nutricao a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	and 	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and 	coalesce(a.dt_inativacao::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, a.cd_doenca_cid, a.nr_atendimento) = 'S')
	and		coalesce(a.dt_liberacao, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	order by 3;

-- Cursor que busca os diagnosticos do paciente
C04 CURSOR FOR
	SELECT	a.NR_SEQ_INTERNO,
			coalesce(a.dt_cid, a.dt_diagnostico) dt_diagnostico,
			SUBSTR((SELECT obter_nome_pf(obter_nome_pf(a.cd_medico)) ),1,255) ds_profissional,
			SUBSTR(a.CD_DOENCA || ' - ' || (select obter_desc_cid(a.CD_DOENCA) ),1,200) ds_diagnostico,
			281 cd_funcao,
			1  nr_seq_item_pront,
			a.nr_atendimento nr_atendimento_reg,
			a.IE_NIVEL_ATENCAO,
			a.CD_DOENCA,
			'DIAGNOSTICO_DOENCA' nm_tabela
	FROM 	diagnostico_doenca a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND 	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	AND 	coalesce(a.dt_inativacao::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, a.cd_doenca, a.nr_atendimento) = 'S')
	and		coalesce(a.dt_liberacao, coalesce(a.dt_cid, a.dt_diagnostico)) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 3;

-- Cursor que busca as amamentacoes da paciente
C05 CURSOR FOR
	SELECT	a.nr_sequencia,
			a.dt_registro,
			SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,255) ds_profissional,
			281 cd_funcao,
			1043  nr_seq_item_pront,
			a.nr_atendimento nr_atendimento_reg,
			'NASCIMENTO_AMAMENTACAO' nm_tabela
	FROM	nascimento_amamentacao a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND 	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	AND		coalesce(a.IE_SITUACAO,'A') = 'A'
	AND 	coalesce(a.dt_inativacao::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.dt_liberacao, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 3;

--Cursor que busca as glicemias das prescricoes do paciente

--Cursor CIG
C06 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_glicemia,
			b.dt_prescricao,
			SUBSTR((SELECT obter_nome_pf(b.cd_prescritor) ),1,60) ds_profissional,
			SUBSTR((select obter_nome_prot_glic(a.nr_seq_prot_glic) ),1,80) nm_prot_glic,
			1113 cd_funcao,
			b.nr_atendimento nr_atendimento_reg,
			b.IE_NIVEL_ATENCAO,
			'ATEND_GLICEMIA' nm_tabela
	FROM    atend_glicemia a,
			prescr_medica b
	WHERE   a.nr_prescricao = b.nr_prescricao
	AND     a.nr_atendimento = b.nr_atendimento
	AND     ((coalesce(a.nr_seq_prot_glic::text, '') = '') OR (EXISTS (SELECT 1 FROM pep_protocolo_glicemia c WHERE c.nr_sequencia = a.nr_seq_prot_glic AND c.ie_tipo = 'I')))
	AND     a.ie_status_glic NOT IN ('P')
	AND     b.cd_pessoa_fisica = cd_pessoa_fisica_p
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		a.DT_ATUALIZACAO_NREC between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 3;

C07 CURSOR FOR
	SELECT  a.nr_sequencia nr_seq_glicemia,
			b.dt_prescricao,
			SUBSTR((SELECT obter_nome_pf(b.cd_prescritor) ),1,60) ds_profissional,
			SUBSTR((select obter_nome_prot_glic(a.nr_seq_prot_glic) ),1,80) nm_prot_glic,
			1113 cd_funcao,
			b.nr_atendimento nr_atendimento_reg,
			b.IE_NIVEL_ATENCAO,
			'ATEND_GLICEMIA' nm_tabela
	FROM    atend_glicemia a,
			prescr_medica b,
			prescr_procedimento c
	WHERE   a.nr_prescricao = b.nr_prescricao
	AND     a.nr_atendimento = b.nr_atendimento
	and		c.nr_prescricao = a.nr_prescricao
	AND     coalesce(c.ie_suspenso,'N')  <> 'S'
	AND     ((coalesce(a.nr_seq_prot_glic::text, '') = '') OR (EXISTS (SELECT 1 FROM pep_protocolo_glicemia c WHERE c.nr_sequencia = a.nr_seq_prot_glic AND c.ie_tipo = 'I')))
	AND     a.ie_status_glic = 'P'
	AND     coalesce(b.dt_suspensao::text, '') = ''
	AND     b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND     NOT EXISTS  (   SELECT   1
							FROM     atend_glicemia x,
									 prescr_procedimento d
							WHERE    x.nr_atendimento     = a.nr_atendimento
							and		 d.nr_prescricao = x.nr_prescricao
							AND      coalesce(d.ie_suspenso,'N') <> 'S'
							AND      ((coalesce(x.nr_seq_prot_glic::text, '') = '') OR (EXISTS (SELECT 1 FROM pep_protocolo_glicemia c WHERE c.nr_sequencia = x.nr_seq_prot_glic AND c.ie_tipo = 'I')))
							AND      x.ie_status_glic     NOT IN ('P','T')
							AND      x.nr_sequencia       <> a.nr_sequencia)
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		a.DT_ATUALIZACAO_NREC between dt_inicio_exec_w and dt_final_exec_w
	
union all
  --CCG
	SELECT  a.nr_sequencia nr_seq_glicemia,
			b.dt_prescricao,
			SUBSTR((select obter_nome_pf(b.cd_prescritor) ),1,60) ds_profissional,
			SUBSTR((select obter_nome_prot_glic(a.nr_seq_prot_glic) ),1,80) nm_prot_glic,
			1113 cd_funcao,
			b.nr_atendimento nr_atendimento_reg,
			b.IE_NIVEL_ATENCAO,
			'ATEND_GLICEMIA' nm_tabela
	FROM    atend_glicemia a,
			prescr_medica b,
			pep_protocolo_glicemia c
	WHERE   a.nr_prescricao = b.nr_prescricao
	AND     a.nr_atendimento = b.nr_atendimento
	AND     c.nr_sequencia = a.nr_seq_prot_glic
	AND     c.ie_tipo = 'C'
	AND     coalesce(b.dt_suspensao::text, '') = ''
	AND     (a.nr_seq_prot_glic IS NOT NULL AND a.nr_seq_prot_glic::text <> '')
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')  
	and		  a.DT_ATUALIZACAO_NREC between dt_inicio_exec_w and dt_final_exec_w
	AND     b.cd_pessoa_fisica = cd_pessoa_fisica_p
	ORDER BY 3;

--Cursor que busca o cadastro da CPOE do paciente
C08 CURSOR FOR
	SELECT  a.IE_TIPO_INF a, obter_valor_dominio(8829, a.IE_TIPO_INF) b
	from    INFORMACAO_SUEP a,
			ITEM_SUEP b
	where   b.nr_sequencia = a.nr_seq_item
	and    	b.nr_seq_suep = nr_seq_modelo_p
	and 	b.ie_tipo_item = 'CP';

--Cursor que buscar informacoes da CPOE
C09 CURSOR FOR
	SELECT  a.DT_PRESCRICAO, --Medicamentos
			SUBSTR((SELECT obter_nome_pf(a.cd_medico) ),1,60) ds_profissional,
			a.nr_prescricao,
			b.nr_Sequencia,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			(select OBTER_DESC_MATERIAL(b.cd_material) ) ds_conteudo,
			ds_subgrupo_w,
			2314 cd_funcao,
			a.IE_NIVEL_ATENCAO,
			c.nr_sequencia nr_seq_cpoe,
			null ie_tipo_reg,
			'CPOE_MATERIAL' nm_tabela
	FROM	prescr_medica a,
			prescr_material b,
			cpoe_material c
	WHERE	a.nr_prescricao = b.nr_prescricao
	AND		b.nr_seq_mat_cpoe = c.nr_sequencia
	AND		c.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		coalesce(c.ie_material,'N') = 'N'
	AND		b.ie_agrupador IN (1,4)
	AND		coalesce(a.dt_suspensao::text, '') = ''
	AND		coalesce(c.DT_LIB_SUSPENSAO::text, '') = ''
	AND		coalesce(c.DT_SUSPENSAO::text, '') = ''
	AND		cd_subgrupo_w = 'ME'
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or (obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S' or
             obter_se_problema_paciente(ie_problema_paciente_p, null, c.nr_atendimento) = 'S'))   
	and 	coalesce(a.dt_prescricao_original, a.dt_liberacao_medico) between dt_inicio_exec_w and dt_final_exec_w
	
UNION

	SELECT	a.DT_PRESCRICAO, -- Nutricao
			SUBSTR((select obter_nome_pf(a.cd_medico) ),1,60) ds_profissional,
			a.nr_prescricao,
			c.nr_Sequencia,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			(select OBTER_DESC_MATERIAL(b.cd_material) ) ds_conteudo,
			ds_subgrupo_w,
			2314 cd_funcao,
			a.IE_NIVEL_ATENCAO,
			c.nr_sequencia nr_seq_cpoe,
			'NM' ie_tipo_reg,
			'CPOE_DIETA' nm_tabela
	from    prescr_medica a,
			cpoe_dieta b,
			PRESCR_MATERIAL c
	where   1 = 1
	and     a.nr_prescricao = c.nr_prescricao
	AND		c.nr_seq_dieta_cpoe = b.nr_sequencia
	and     c.IE_AGRUPADOR in (12, 8)
	AND		coalesce(a.dt_suspensao::text, '') = ''
	AND		coalesce(b.DT_LIB_SUSPENSAO::text, '') = ''
	AND		coalesce(b.DT_SUSPENSAO::text, '') = ''
	AND		cd_subgrupo_w = 'NT'
	AND		b.cd_pessoa_fisica = cd_pessoa_fisica_p
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or (obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S' or 
             obter_se_problema_paciente(ie_problema_paciente_p, b.cd_doenca_cid, b.nr_atendimento) = 'S')) 
	and 	coalesce(a.dt_prescricao_original, a.dt_liberacao_medico) between dt_inicio_exec_w and dt_final_exec_w
	
union

    SELECT	a.DT_PRESCRICAO, -- Nutricao
			SUBSTR((select obter_nome_pf(a.cd_medico) ),1,60) ds_profissional,
			a.nr_prescricao,
			c.nr_Sequencia,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			SUBSTR((select obter_nome_dieta(b.CD_DIETA) ),1,80) ds_conteudo,
			ds_subgrupo_w,
			2314 cd_funcao,
			a.IE_NIVEL_ATENCAO,
			c.nr_sequencia nr_seq_cpoe,
			'NT' ie_tipo_reg,
			'CPOE_DIETA' nm_tabela
	from    prescr_medica a,
			cpoe_dieta b,
			prescr_dieta c
	where   1 = 1
	and     a.nr_prescricao = c.nr_prescricao
	AND		c.nr_seq_dieta_cpoe = b.nr_sequencia
	AND		coalesce(a.dt_suspensao::text, '') = ''
	AND		coalesce(b.DT_LIB_SUSPENSAO::text, '') = ''
	AND		coalesce(b.DT_SUSPENSAO::text, '') = ''
	AND		cd_subgrupo_w = 'NT'
	AND		b.cd_pessoa_fisica = cd_pessoa_fisica_p
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or (obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S' or 
             obter_se_problema_paciente(ie_problema_paciente_p, b.cd_doenca_cid, b.nr_atendimento) = 'S')) 
	and 	coalesce(a.dt_prescricao_original, a.dt_liberacao_medico) between dt_inicio_exec_w and dt_final_exec_w
	
union

	SELECT	a.DT_PRESCRICAO, -- Nutricao
			SUBSTR((select obter_nome_pf(a.cd_medico) ),1,60) ds_profissional,
			a.nr_prescricao,
			c.nr_Sequencia,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			(select substr(obter_desc_tipo_jejum(c.nr_seq_tipo),1,80) ) ds_conteudo,
			ds_subgrupo_w,
			2314 cd_funcao,
			a.IE_NIVEL_ATENCAO,
			c.nr_sequencia nr_seq_cpoe,
			'NR' ie_tipo_reg,
			'CPOE_DIETA' nm_tabela
	from    prescr_medica a,
			cpoe_dieta b,
			rep_jejum c
	where   1 = 1
	and     a.nr_prescricao = c.nr_prescricao
	AND		c.nr_seq_dieta_cpoe = b.nr_sequencia
	AND		coalesce(a.dt_suspensao::text, '') = ''
	AND		coalesce(b.DT_LIB_SUSPENSAO::text, '') = ''
	AND		coalesce(b.DT_SUSPENSAO::text, '') = ''
	AND		cd_subgrupo_w = 'NT'
	AND		b.cd_pessoa_fisica = cd_pessoa_fisica_p
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or (obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S' or 
            obter_se_problema_paciente(ie_problema_paciente_p, b.cd_doenca_cid, b.nr_atendimento) = 'S')) 
	and 	coalesce(a.dt_prescricao_original, a.dt_liberacao_medico) between dt_inicio_exec_w and dt_final_exec_w
	
UNION

	SELECT	a.DT_PRESCRICAO, --Gasoterapia
			SUBSTR((select obter_nome_pf(a.cd_medico) ),1,60) ds_profissional,
			a.nr_prescricao,
			b.nr_Sequencia,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			SUBSTR((select cpoe_obter_desc_gas(c.nr_seq_gas,c.dt_liberacao) ),1,254) ds_conteudo,
			ds_subgrupo_w,
			2314 cd_funcao,
			a.IE_NIVEL_ATENCAO,
			c.nr_sequencia nr_seq_cpoe,
			null ie_tipo_reg,
			'CPOE_GASOTERAPIA' nm_tabela
	FROM	prescr_medica a,
			prescr_gasoterapia b,
			cpoe_gasoterapia c
	WHERE	a.nr_prescricao = b.nr_prescricao
	AND		b.nr_seq_gas_cpoe = c.nr_sequencia
	AND		c.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		coalesce(a.dt_suspensao::text, '') = ''
	AND		coalesce(c.DT_LIB_SUSPENSAO::text, '') = ''
	AND		coalesce(c.DT_SUSPENSAO::text, '') = ''
	AND		cd_subgrupo_w = 'GA'
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or (obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S' or 
             obter_se_problema_paciente(ie_problema_paciente_p, null, c.nr_atendimento) = 'S')) 
	and 	coalesce(a.dt_prescricao_original, a.dt_liberacao_medico) between dt_inicio_exec_w and dt_final_exec_w
	
UNION

	SELECT	a.DT_PRESCRICAO, -- Recomendacao
			SUBSTR((select obter_nome_pf(a.cd_medico) ),1,60) ds_profissional,
			a.nr_prescricao,
			b.nr_Sequencia,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			SUBSTR((select cpoe_obter_desc_recomendacao(c.cd_recomendacao,c.dt_liberacao) ),1,255) ds_conteudo,
			ds_subgrupo_w,
			2314 cd_funcao,
			a.IE_NIVEL_ATENCAO,
			c.nr_sequencia nr_seq_cpoe,
			null ie_tipo_reg,
			'CPOE_RECOMENDACAO' nm_tabela
	FROM	prescr_medica a,
			prescr_recomendacao b,
			cpoe_recomendacao c
	WHERE	a.nr_prescricao = b.nr_prescricao
	AND		b.nr_seq_rec_cpoe = c.nr_sequencia
	AND		c.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		coalesce(a.dt_suspensao::text, '') = ''
	AND		coalesce(c.DT_LIB_SUSPENSAO::text, '') = ''
	AND		coalesce(c.DT_SUSPENSAO::text, '') = ''
	AND		cd_subgrupo_w = 'RE'
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or (obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S' or 
             obter_se_problema_paciente(ie_problema_paciente_p, null, c.nr_atendimento) = 'S')) 
	and 	coalesce(a.dt_prescricao_original, a.dt_liberacao_medico) between dt_inicio_exec_w and dt_final_exec_w
	
UNION

	SELECT	a.DT_PRESCRICAO,-- Hemoterapia
			SUBSTR((select obter_nome_pf(a.cd_medico) ),1,60) ds_profissional,
			a.nr_prescricao,
			d.nr_Sequencia,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			SUBSTR((select cpoe_obter_desc_info_hemote(c.NR_SEQUENCIA) ),1,255) ds_conteudo,
			ds_subgrupo_w,
			2314 cd_funcao,
			a.IE_NIVEL_ATENCAO,
			c.nr_sequencia nr_seq_cpoe,
			null ie_tipo_reg,
			'CPOE_HEMOTERAPIA' nm_tabela
	FROM	prescr_medica a,
			prescr_solic_bco_sangue b,
			cpoe_hemoterapia c,
			PRESCR_PROCEDIMENTO d
	WHERE	a.nr_prescricao = b.nr_prescricao
	AND		b.nr_seq_hemo_cpoe = c.nr_sequencia
	AND		c.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		coalesce(a.dt_suspensao::text, '') = ''
	AND		coalesce(c.DT_LIB_SUSPENSAO::text, '') = ''
	AND		coalesce(c.DT_SUSPENSAO::text, '') = ''
	AND		cd_subgrupo_w = 'HE'
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or (obter_se_problema_paciente(ie_problema_paciente_p,  b.cd_doenca_cid, a.nr_atendimento) = 'S' or 
             obter_se_problema_paciente(ie_problema_paciente_p, c.cd_doenca_cid, c.nr_atendimento) = 'S')) 
	and   	d.NR_SEQ_SOLIC_SANGUE = b.nr_sequencia
	and 	coalesce(nr_seq_exame_sangue::text, '') = ''
	and (obter_se_mostra_proced(d.nr_prescricao,d.nr_sequencia,'BS') = 'S'
	or 		obter_se_mostra_proced(d.nr_prescricao,d.nr_sequencia,'AT') = 'S'
	or 		obter_se_mostra_proced(d.nr_prescricao,d.nr_sequencia,'BSHE') = 'S')
	and 	coalesce(a.dt_prescricao_original, a.dt_liberacao_medico) between dt_inicio_exec_w and dt_final_exec_w
	
UNION

	SELECT	a.DT_PRESCRICAO,--Dialese
			SUBSTR((select obter_nome_pf(a.cd_medico) ),1,60) ds_profissional,
			a.nr_prescricao,
			b.nr_Sequencia,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			SUBSTR(obter_valor_dominio(1934,b.IE_TIPO_HEMODIALISE),1,255) ds_conteudo,
			ds_subgrupo_w,
			2314 cd_funcao,
			a.IE_NIVEL_ATENCAO,
			c.nr_sequencia nr_seq_cpoe,
			null ie_tipo_reg,
			'CPOE_DIALISE' nm_tabela
	FROM	prescr_medica a,
			hd_prescricao b,
			cpoe_dialise c
	WHERE	a.nr_prescricao = b.nr_prescricao
	AND		c.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		b.nr_seq_dialise_cpoe = c.nr_sequencia
	AND		coalesce(a.dt_suspensao::text, '') = ''
	AND		coalesce(c.DT_LIB_SUSPENSAO::text, '') = ''
	AND		cd_subgrupo_w = 'DI'
	AND		coalesce(c.DT_SUSPENSAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or (obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S' or 
            obter_se_problema_paciente(ie_problema_paciente_p, null, c.nr_atendimento) = 'S')) 
	and 	coalesce(a.dt_prescricao_original, a.dt_liberacao_medico) between dt_inicio_exec_w and dt_final_exec_w
	
UNION

	SELECT	a.DT_PRESCRICAO, --Intervencao
			SUBSTR(obter_nome_pf(a.CD_PRESCRITOR),1,60) ds_profissional,
			a.nr_prescricao,
			b.nr_Sequencia,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			SUBSTR((select obter_desc_intervencoes(c.nr_seq_proc) ),1,255) ds_conteudo,
			ds_subgrupo_w,
			2314 cd_funcao,
			null IE_NIVEL_ATENCAO,
			c.nr_sequencia nr_seq_cpoe,
			null ie_tipo_reg,
			'CPOE_INTERVENCAO' nm_tabela
	FROM cpoe_intervencao c, pe_prescricao a, pe_prescr_proc b
LEFT OUTER JOIN intervalo_prescricao x ON (b.cd_intervalo = x.cd_intervalo)
WHERE a.nr_sequencia = b.nr_seq_prescr AND b.nr_seq_cpoe_interv = c.nr_sequencia AND c.cd_pessoa_fisica = cd_pessoa_fisica_p AND cd_subgrupo_w = 'IT'  AND coalesce(a.dt_suspensao::text, '') = '' AND coalesce(c.DT_LIB_SUSPENSAO::text, '') = '' AND coalesce(c.DT_SUSPENSAO::text, '') = '' AND coalesce(ie_problema_paciente_p::text, '') = '' and coalesce(a.dt_liberacao, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	 
UNION

	SELECT	a.DT_PRESCRICAO, --Material
			SUBSTR((select obter_nome_pf(a.cd_medico) ),1,60) ds_profissional,
			a.nr_prescricao,
			b.nr_Sequencia,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			(select OBTER_DESC_MATERIAL(b.cd_material) ) ds_conteudo,
			ds_subgrupo_w,
			2314 cd_funcao,
			a.IE_NIVEL_ATENCAO,
			c.nr_sequencia nr_seq_cpoe,
			null ie_tipo_reg,
			'CPOE_MATERIAL' nm_tabela
	FROM	prescr_medica a,
			prescr_material b,
			cpoe_material c
	WHERE	a.nr_prescricao = b.nr_prescricao
	AND		b.nr_seq_mat_cpoe = c.nr_sequencia
	AND		c.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		ie_material = 'S'
	AND		cd_subgrupo_w = 'MA'
	AND		coalesce(a.dt_suspensao::text, '') = ''
	AND		coalesce(c.DT_LIB_SUSPENSAO::text, '') = ''
	AND		coalesce(c.DT_SUSPENSAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or (obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S' or 
           obter_se_problema_paciente(ie_problema_paciente_p, null, c.nr_atendimento) = 'S')) 
	and 	coalesce(a.dt_prescricao_original, a.dt_liberacao_medico) between dt_inicio_exec_w and dt_final_exec_w
	
UNION

	SELECT	a.DT_PRESCRICAO, --Patologia
			SUBSTR((select obter_nome_pf(a.cd_medico) ),1,60) ds_profissional,
			a.nr_prescricao,
			b.nr_Sequencia,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			SUBSTR((select cpoe_obter_desc_proc_interno(c.nr_seq_proc_interno) ),1,255) ds_conteudo,
			ds_subgrupo_w,
			2314 cd_funcao,
			a.IE_NIVEL_ATENCAO,
			c.nr_sequencia nr_seq_cpoe,
			null ie_tipo_reg,
			'CPOE_ANATOMIA_PATOLOGICA' nm_tabela
	FROM	prescr_medica a,
			prescr_procedimento b,
			cpoe_anatomia_patologica c
	WHERE	a.nr_prescricao = b.nr_prescricao
	AND		b.nr_seq_proc_cpoe = c.nr_sequencia
	AND		coalesce(a.dt_suspensao::text, '') = ''
	AND		coalesce(c.DT_LIB_SUSPENSAO::text, '') = ''
	AND		coalesce(c.DT_SUSPENSAO::text, '') = ''
	AND		c.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		cd_subgrupo_w = 'PA'
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or (obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S' or 
           obter_se_problema_paciente(ie_problema_paciente_p, null, c.nr_atendimento) = 'S'))  
	and 	coalesce(a.dt_prescricao_original, a.dt_liberacao_medico) between dt_inicio_exec_w and dt_final_exec_w
	
UNION

	SELECT	a.DT_PRESCRICAO, --Procedimento
			SUBSTR((select obter_nome_pf(a.cd_medico) ),1,60) ds_profissional,
			a.nr_prescricao,
			b.nr_Sequencia,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			SUBSTR(cpoe_obter_desc_proc_interno(c.nr_seq_proc_interno),1,255) ds_conteudo,
			ds_subgrupo_w,
			2314 cd_funcao,
			a.IE_NIVEL_ATENCAO,
			c.nr_sequencia nr_seq_cpoe,
			null ie_tipo_reg,
			'CPOE_PROCEDIMENTO' nm_tabela
	FROM	prescr_medica a,
			prescr_procedimento b,
			cpoe_procedimento c
	WHERE	a.nr_prescricao = b.nr_prescricao
	AND		b.nr_seq_proc_cpoe = c.nr_sequencia
	AND		coalesce(a.dt_suspensao::text, '') = ''
	AND		coalesce(c.DT_LIB_SUSPENSAO::text, '') = ''
	AND		coalesce(c.DT_SUSPENSAO::text, '') = ''
	AND		c.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		cd_subgrupo_w = 'PR'
	and   	coalesce(b.nr_seq_origem::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, c.cd_doenca, a.nr_atendimento) = 'S')  
	and 	coalesce(a.dt_prescricao_original, a.dt_liberacao_medico) between dt_inicio_exec_w and dt_final_exec_w
	order by 2;

--Cursor que busca os dispositivos do paciente
C10 CURSOR FOR
	SELECT 	a.nr_sequencia nr_sequencia,
			SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,60) ds_profissional,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			SUBSTR(obter_descricao_padrao('DISPOSITIVO','DS_DISPOSITIVO', a.NR_SEQ_DISPOSITIVO),1,80) ds_conteudo,
			99056 cd_funcao,
			a.DT_INSTALACAO,
			a.DT_RETIRADA,
			'ATEND_PAC_DISPOSITIVO' nm_tabela
	FROM 	ATEND_PAC_DISPOSITIVO a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		a.DT_ATUALIZACAO_NREC between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 2;

--Cursor que busca as escalas e indices do paciente
C11 CURSOR FOR
	SELECT	a.NR_SEQ_INF cd, substr(obter_descricao_padrao('PEP_INFORMACAO','DS_INFORMACAO',NR_SEQ_INF),1,100) ds
	from    INFORMACAO_SUEP a,
			ITEM_SUEP b
	where   b.nr_sequencia = a.nr_seq_item
	and    	b.nr_seq_suep = nr_seq_modelo_p
	and 	b.ie_tipo_item = 'EI'
	ORDER BY 2;

C12 CURSOR FOR
	SELECT	a.dt_apache dt_registro,
			a.NR_SEQUENCIA nr_sequencia,
			a.QT_APACHE_II qt_ponto,
			NULL ds_ponto,
			SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,60) ds_profissional,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'APACHE' nm_tabela,
			1 ie_escala
	FROM   	APACHE a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_APACHE) between dt_inicio_exec_w and dt_final_exec_w
	order by 5;

C13 CURSOR FOR
	SELECT	 a.dt_avaliacao dt_registro,
			 a.nr_sequencia nr_sequencia,
			 a.QT_PONTUACAO qt_ponto,
			 SUBSTR(obter_desc_escala_barthel(qt_pontuacao),1,100) ds_ponto,
			 SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,60) ds_profissional,
			 a.NR_ATENDIMENTO nr_atendimento_reg,
			 281 cd_funcao,
			 374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'ESCALA_BARTHEL' nm_tabela,
			33 ie_escala
	FROM   	 ESCALA_BARTHEL a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	order by 5;

C14 CURSOR FOR
	SELECT	 a.dt_avaliacao dt_registro,
			 a.nr_sequencia nr_sequencia,
			 a.QT_PONTUACAO qt_ponto,
			 SUBSTR(get_bishop_scale_info(a.nr_sequencia,'G'),1,100) ds_ponto,
			 SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,60) ds_profissional,
			 a.NR_ATENDIMENTO nr_atendimento_reg,
			 281 cd_funcao,
			 374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'ESCALA_BISHOP' nm_tabela,
			188 ie_escala
	FROM   	 ESCALA_BISHOP a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 5;

C15 CURSOR FOR
	SELECT	 a.dt_avaliacao dt_registro,
			 a.nr_sequencia nr_sequencia,
			 a.QT_PONTUACAO qt_ponto,
			 ds_resultado ds_ponto,
			 SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,60) ds_profissional,
			 a.NR_ATENDIMENTO nr_atendimento_reg,
			 281 cd_funcao,
			 374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'ESCALA_CAPRINI' nm_tabela,
			191 ie_escala
	FROM   	 ESCALA_CAPRINI a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 5;

C16 CURSOR FOR
	SELECT	 a.dt_avaliacao dt_registro,
			 a.nr_sequencia nr_sequencia,
			 a.QT_PONTUACAO qt_ponto,
			 SUBSTR(obter_result_child_pugh(qt_pontuacao),1,255) ds_ponto,
			 SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,60) ds_profissional,
			 a.NR_ATENDIMENTO nr_atendimento_reg,
			 281 cd_funcao,
			 374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'ESCALA_CHILD_PUGH' nm_tabela,
			45 ie_escala
	FROM   	 ESCALA_CHILD_PUGH a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 5;

C17 CURSOR FOR
	SELECT	 a.dt_avaliacao dt_registro,
			 a.nr_sequencia nr_sequencia,
			 a.IE_NIVEL_ECOG qt_ponto,
			 SUBSTR(Obter_desc_nivel_capacid_ecog(ie_nivel_ecog),1,250) ds_ponto,
			 SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,60) ds_profissional,
			 a.NR_ATENDIMENTO nr_atendimento_reg,
			 281 cd_funcao,
			 374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'ESCALA_ECOG' nm_tabela,
			43 ie_escala
	FROM   	 ESCALA_ECOG a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 5;

C18 CURSOR FOR
	SELECT	 a.dt_avaliacao dt_registro,
			 a.nr_sequencia nr_sequencia,
			 a.QT_PONTUACAO qt_ponto,
			 SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,60) ds_profissional,
			 a.NR_ATENDIMENTO nr_atendimento_reg,
			 281 cd_funcao,
			 374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'ESCALA_APGAR' nm_tabela,
			76 ie_escala
	FROM   	 ESCALA_APGAR a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 5;

C19 CURSOR FOR
	SELECT	 a.dt_avaliacao dt_registro,
			 a.nr_sequencia nr_sequencia,
			 a.IE_FORREST qt_ponto,
			 SUBSTR(obter_valor_dominio(8627,IE_FORREST),1,255) ds_ponto,
			 SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,60) ds_profissional,
			 a.NR_ATENDIMENTO nr_atendimento_reg,
			 281 cd_funcao,
			 374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'ESCALA_FORREST' nm_tabela,
			184 ie_escala
	FROM   	 ESCALA_FORREST a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 5;

C20 CURSOR FOR
	SELECT	 a.dt_avaliacao dt_registro,
			 a.nr_sequencia nr_sequencia,
			 a.IE_GOLD qt_ponto,
			 obter_result_gold(nr_sequencia) ds_ponto,
			 SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,60) ds_profissional,
			 a.NR_ATENDIMENTO nr_atendimento_reg,
			 281 cd_funcao,
			 374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'ESCALA_GOLD' nm_tabela,
			185 ie_escala
	FROM   	 ESCALA_GOLD a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 5;

C21 CURSOR FOR
	SELECT	 a.dt_avaliacao dt_registro,
			 a.nr_sequencia nr_sequencia,
			 a.QT_PONTUACAO qt_ponto,
			 get_score_escala_helios(nr_sequencia) ds_ponto,
			 SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,60) ds_profissional,
			 a.NR_ATENDIMENTO nr_atendimento_reg,
			 281 cd_funcao,
			 374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'ESCALA_HELIOS' nm_tabela,
			189 ie_escala
	FROM   	 ESCALA_HELIOS a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 5;

C22 CURSOR FOR
	SELECT	 a.dt_avaliacao dt_registro,
			 a.nr_sequencia nr_sequencia,
			 a.IE_KARNOFSKY qt_ponto,
			 SUBSTR(obter_valor_dominio(1531,IE_KARNOFSKY),1,255) ds_ponto,
			 SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,60) ds_profissional,
			 a.NR_ATENDIMENTO nr_atendimento_reg,
			 281 cd_funcao,
			 374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'ESCALA_KARNOFSKY' nm_tabela,
			40 ie_escala
	FROM   	 ESCALA_KARNOFSKY a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 5;

C23 CURSOR FOR
	SELECT	 a.dt_avaliacao dt_registro,
			 a.nr_sequencia nr_sequencia,
			 a.QT_PONTUACAO qt_ponto,
			 SUBSTR(Obter_Resul_nrs(qt_pontuacao),1,255) ds_ponto,
			 SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,60) ds_profissional,
			 a.NR_ATENDIMENTO nr_atendimento_reg,
			 281 cd_funcao,
			 374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'ESCALA_NRS' nm_tabela,
			48 ie_escala
	FROM   	 ESCALA_NRS a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 5;

C24 CURSOR FOR
	SELECT	 a.dt_avaliacao dt_registro,
			 a.nr_sequencia nr_sequencia,
			 a.IE_PULS qt_ponto,
			 SUBSTR(IE_PULS || ' - ' || obter_valor_dominio(8637,IE_PULS),1,255) ds_ponto,
			 SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,60) ds_profissional,
			 a.NR_ATENDIMENTO nr_atendimento_reg,
			 281 cd_funcao,
			 374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'ESCALA_PULS' nm_tabela,
			192 ie_escala
	FROM   	 ESCALA_PULS a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 5;

C25 CURSOR FOR
	SELECT	 a.dt_avaliacao dt_registro,
			 a.nr_sequencia nr_sequencia,
			 a.QT_PONTUACAO qt_ponto,
			 NULL ds_ponto,
			 SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,60) ds_profissional,
			 a.NR_ATENDIMENTO nr_atendimento_reg,
			 281 cd_funcao,
			 374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'TISS_INTERV_TERAPEUTICA_10' nm_tabela,
			190 ie_escala
	FROM   	 TISS_INTERV_TERAPEUTICA_10 a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 5;

C54 CURSOR FOR
	SELECT	a.dt_avaliacao dt_registro,
			a.nr_sequencia nr_sequencia,
			a.QT_PONTo qt_ponto,
			substr(obter_resultado_braden(qt_ponto),1,100) ds_ponto,
			SUBSTR(obter_nome_pf(a.cd_pessoa_fisica),1,60) ds_profissional,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'ATEND_ESCALA_BRADEN' nm_tabela,
			2 ie_escala
	FROM   	 ATEND_ESCALA_BRADEN a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 5;

C55 CURSOR FOR
	SELECT	a.dt_avaliacao dt_registro,
			a.nr_sequencia nr_sequencia,
			a.QT_PONTUACAO qt_ponto,
			null ds_ponto,
			SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,60) ds_profissional,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'ESCALA_CHARLSON' nm_tabela,
			74 ie_escala
	FROM   	 ESCALA_CHARLSON a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 5;

C56 CURSOR FOR
	SELECT	a.dt_avaliacao dt_registro,
			a.nr_sequencia nr_sequencia,
			a.QT_PONTUACAO qt_ponto,
			substr(obter_descr_escala_downton(QT_PONTUACAO),1,255) ds_ponto,
			SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,60) ds_profissional,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'ESCALA_DOWNTON' nm_tabela,
			78 ie_escala
	FROM   	ESCALA_DOWNTON a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 5;

C57 CURSOR FOR
	SELECT	a.dt_avaliacao dt_registro,
			a.nr_sequencia nr_sequencia,
			a.QT_GLASGOW qt_ponto,
			substr(obter_resultado_glasgow(qt_glasgow),1,100) ds_ponto,
			SUBSTR(obter_nome_pf(a.CD_PESSOA_FISICA),1,60) ds_profissional,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'ATEND_ESCALA_INDICE' nm_tabela,
			3 ie_escala
	FROM   	ATEND_ESCALA_INDICE a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 5;

C58 CURSOR FOR
	SELECT	a.dt_avaliacao dt_registro,
			a.nr_sequencia nr_sequencia,
			a.QT_PONTUACAO qt_ponto,
			null ds_ponto,
			SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,60) ds_profissional,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'ESCALA_MADDREY' nm_tabela,
			186 ie_escala
	FROM   	ESCALA_MADDREY a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 5;

C59 CURSOR FOR
	SELECT	a.dt_avaliacao dt_registro,
			a.nr_sequencia nr_sequencia,
			null qt_ponto,
			null ds_ponto,
			SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,60) ds_profissional,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'ESCALA_NYHA' nm_tabela,
			187 ie_escala
	FROM   	ESCALA_NYHA a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 5;

C60 CURSOR FOR
	SELECT	a.dt_avaliacao dt_registro,
			a.nr_sequencia nr_sequencia,
			null qt_ponto,
			substr(obter_valor_dominio(2922,QT_SCORE),1,255) ds_ponto,
			SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,60) ds_profissional,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'ESCALA_PPS' nm_tabela,
			59 ie_escala
	FROM   	ESCALA_PPS a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 5;

C61 CURSOR FOR
	SELECT	a.dt_avaliacao dt_registro,
			a.nr_sequencia nr_sequencia,
			QT_PONTUACAO qt_ponto,
			null ds_ponto,
			SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,60) ds_profissional,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'ESCALA_SOFA' nm_tabela,
			18 ie_escala
	FROM   	ESCALA_SOFA a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 5;

C62 CURSOR FOR
	SELECT	a.dt_avaliacao dt_registro,
			a.nr_sequencia nr_sequencia,
			QT_PONTUACAO qt_ponto,
			substr(obter_classif_tiss(qt_pontuacao),1,255) ds_ponto,
			SUBSTR(obter_nome_pf(a.CD_PESSOA_FISICA),1,60) ds_profissional,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			374 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'TISS_INTERV_TERAPEUTICA' nm_tabela,
			12 ie_escala
	FROM   	TISS_INTERV_TERAPEUTICA a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		(a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	AND		coalesce(a.DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.DT_LIBERACAO, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY 5;

--Cursor para Carta medica
C26 CURSOR FOR
	SELECT	a.dt_atualizacao_nrec dt_registro,
			a.nr_sequencia nr_sequencia,
			IE_REVISAO,
			DT_LIBERACAO,
			obter_se_carta_mensagem(a.nr_sequencia, NULL) IE_MENSAGEM,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			9960 cd_funcao,
			NULL nr_seq_item_pront,
			'CARTA_MEDICA' nm_tabela
	FROM   	carta_medica a
	WHERE	cd_pessoa_fisica = cd_pessoa_fisica_p
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	ORDER BY 5;

--Cursor para exames laboratoriais
C27 CURSOR FOR
	SELECT 	b.dt_prescricao dt_registro,
			a.NR_SEQ_RESULTADO nr_sequencia,
			SUBSTR(obter_nome_pf(b.CD_MEDICO),1,60) ds_profissional,
			OBTER_DESC_EXAME_LAB(a.NR_SEQ_EXAME, NULL, NULL, NULL) ds_exame,
			b.NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			2 nr_seq_item_pront,
			b.IE_NIVEL_ATENCAO,
			--SUEP_OBTER_SE_LAB_REF(d.nr_prescricao,x.nr_sequencia,b.nr_seq_exame,b.nr_seq_material,b.ds_resultado,b.qt_resultado,b.pr_resultado) ie_valor_normal
			null ie_valor_normal,
			'RESULT_LABORATORIO' nm_tabela
	FROM prescr_medica b, prescr_procedimento c
LEFT OUTER JOIN result_laboratorio a ON (c.nr_prescricao = a.nr_prescricao AND c.nr_sequencia = a.nr_seq_prescricao)
WHERE c.nr_prescricao  = b.nr_prescricao AND b.cd_pessoa_fisica = cd_pessoa_fisica_p AND ((coalesce(c.ie_exame_bloqueado,'N') <> 'S') AND (Obter_se_exame_bloq_result(c.nr_prescricao, c.nr_sequencia) <> 'S')) AND coalesce(a.ie_status,'A') <> 'I' AND coalesce(b.dt_suspensao::text, '') = '' AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, b.nr_atendimento) = 'S') and b.dt_prescricao between dt_inicio_exec_w and dt_final_exec_w
	
UNION

	SELECT 	a.dt_prescricao dt_registro,
			b.NR_SEQ_EXAME nr_sequencia,
			SUBSTR(obter_nome_pf(a.CD_MEDICO),1,60) ds_profissional,
			OBTER_DESC_EXAME_LAB(c.NR_SEQ_EXAME, NULL, NULL, NULL) ds_exame,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			2 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			--SUEP_OBTER_SE_LAB_REF(d.nr_prescricao,x.nr_sequencia,b.nr_seq_exame,b.nr_seq_material,b.ds_resultado,b.qt_resultado,b.pr_resultado) ie_valor_normal
			null ie_valor_normal,
			'EXAME_LABORATORIO' nm_tabela
	FROM	exame_laboratorio c,
			prescr_procedimento b,
			prescr_medica a
	WHERE 	b.nr_prescricao = a.nr_prescricao
	AND		b.nr_seq_exame = c.nr_seq_exame
	AND		a.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		((coalesce(b.ie_exame_bloqueado,'N') <> 'S') AND (Obter_se_exame_bloq_result(b.nr_prescricao, b.nr_sequencia) <> 'S'))
	AND		((a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') OR (a.dt_liberacao_medico IS NOT NULL AND a.dt_liberacao_medico::text <> ''))
	AND		coalesce(a.dt_suspensao::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		a.dt_prescricao between dt_inicio_exec_w and dt_final_exec_w
	
UNION

	SELECT 	a.dt_prescricao dt_registro,
			b.NR_SEQ_EXAME nr_sequencia,
			SUBSTR(obter_nome_pf(a.CD_MEDICO),1,60) ds_profissional,
			OBTER_DESC_EXAME_LAB(c.NR_SEQ_EXAME, NULL, NULL, NULL) ds_exame,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			2 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			--SUEP_OBTER_SE_LAB_REF(d.nr_prescricao,x.nr_sequencia,b.nr_seq_exame,b.nr_seq_material,b.ds_resultado,b.qt_resultado,b.pr_resultado) ie_valor_normal
			null ie_valor_normal,
			'EXAME_LABORATORIO' nm_tabela
	FROM	exame_laboratorio c,
			prescr_procedimento b,
			prescr_medica a
	WHERE 	b.nr_prescricao = a.nr_prescricao
	AND		b.nr_seq_exame = c.nr_seq_exame
	AND		a.cd_pessoa_fisica = cd_pessoa_fisica_p
	AND		((coalesce(b.ie_exame_bloqueado,'N') <> 'S') AND (Obter_se_exame_bloq_result(b.nr_prescricao, b.nr_sequencia) <> 'S'))
	AND		coalesce(a.dt_suspensao::text, '') = ''
	AND		((a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') OR (a.dt_liberacao_medico IS NOT NULL AND a.dt_liberacao_medico::text <> ''))
	AND		exists (	SELECT 	1
						FROM	exame_lab_result_item x,
								exame_lab_resultado y
						WHERE 	x.nr_seq_resultado = y.nr_seq_resultado
						AND		b.nr_prescricao = y.nr_prescricao
						AND		b.nr_sequencia = x.nr_seq_prescr)
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')          
	and		a.dt_prescricao between dt_inicio_exec_w and dt_final_exec_w
	
UNION

	SELECT 	d.DT_RESULTADO dt_registro,
			e.NR_SEQ_RESULTADO nr_sequencia,
			SUBSTR(obter_nome_pf(d.CD_MEDICO),1,60) ds_profissional,
			OBTER_DESC_EXAME_LAB(e.NR_SEQ_EXAME, NULL, NULL, NULL) ds_exame,
			d.NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			2 nr_seq_item_pront,
			d.IE_NIVEL_ATENCAO,
			--SUEP_OBTER_SE_LAB_REF(d.nr_prescricao,x.nr_sequencia,b.nr_seq_exame,b.nr_seq_material,b.ds_resultado,b.qt_resultado,b.pr_resultado) ie_valor_normal
			null ie_valor_normal,
			'EXAME_LAB_RESULT_ITEM' nm_tabela
	FROM	exame_lab_resultado d,
			exame_lab_result_item e
	WHERE 	d.nr_seq_resultado = e.nr_seq_resultado
	AND		d.cd_pessoa_fisica = cd_pessoa_fisica_p
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, d.nr_atendimento) = 'S')
	and		d.DT_RESULTADO between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY dt_registro desc,
			 ds_exame asc;

--Cursor para exames nao laboratoriais
C28 CURSOR FOR
	SELECT a.nr_sequencia nr_sequencia,
         coalesce(a.dt_exame, obter_dt_exame_externo(a.nr_sequencia)) dt_registro,
         a.nm_medico_resp ds_profissional,
         substr(obter_proceds_laudo(a.nr_sequencia), 1, 255) ds_procedimento,
         a.nr_atendimento nr_atendimento_reg,
         281 cd_funcao,
         3 nr_seq_item_pront,
         a.ie_nivel_atencao,
         'LAUDO_PACIENTE' nm_tabela
    FROM laudo_paciente_v      a,
         procedimento_paciente c,
         procedimento          b
   WHERE a.cd_pessoa_fisica = cd_pessoa_fisica_p
     AND a.nr_seq_proc = c.nr_sequencia
     AND c.cd_procedimento = b.cd_procedimento
     AND c.ie_origem_proced = b.ie_origem_proced
     AND (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
     AND coalesce(a.dt_cancelamento::text, '') = ''
     AND (coalesce(ie_problema_paciente_p::text, '') = '' or (obter_se_problema_paciente(ie_problema_paciente_p, b.cd_doenca_cid, a.nr_atendimento) = 'S' or
          obter_se_problema_paciente(ie_problema_paciente_p, c.cd_doenca_cid, c.nr_atendimento) = 'S' or
          obter_se_problema_paciente(ie_problema_paciente_p, b.cd_cid_secundario, null) = 'S'))
     AND coalesce(a.dt_exame, obter_dt_exame_externo(a.nr_sequencia)) BETWEEN dt_inicio_exec_w AND dt_final_exec_w

UNION ALL

  SELECT e.nr_sequencia,
         coalesce(e.dt_exame, e.dt_liberacao) dr_registro,
         obter_nome_pf(e.cd_profissional) ds_profissional,
         substr(obter_valor_dominio(3966, e.ie_exame_pac), 1, 50) ds_procedimento,
         ac.nr_atendimento nr_atendimento_reg,
         281 cd_funcao,
         93 nr_seq_item_pront,
         NULL ie_nivel_atencao,
         'PACIENTE_EXAME' nm_tabela
    FROM paciente_exame e
    LEFT JOIN atend_consulta_pepa ac
      ON ac.nr_sequencia = e.nr_seq_atend_cons_pepa
   WHERE e.cd_pessoa_fisica = cd_pessoa_fisica_p
     AND (e.dt_liberacao IS NOT NULL AND e.dt_liberacao::text <> '')
     AND e.ie_situacao <> 'I'
     AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, ac.nr_atendimento) = 'S')
     AND coalesce(e.dt_exame, e.dt_liberacao) BETWEEN dt_inicio_exec_w AND dt_final_exec_w;

--Cursor para eventos do paciente
C29 CURSOR FOR
	SELECT  a.dt_evento dt_registro,
			a.nr_sequencia,
			SUBSTR((SELECT obter_nome_pf(a.cd_profissional) ),1,60) ds_profissional,
			DS_EVENTO,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			273 nr_seq_item_pront,
			'QUA_EVENTO_PACIENTE' nm_tabela
	from  	QUA_EVENTO_PACIENTE a
	where (	cd_pessoa_fisica = cd_pessoa_fisica_p
				or a.nr_atendimento  IN (	SELECT nr_atendimento
											FROM atendimento_paciente
											WHERE cd_pessoa_fisica = cd_pessoa_fisica_p))
	and   	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and   	coalesce(dt_inativacao::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(dt_liberacao, DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	order by 3;

--Cursor para historico de parto
C30 CURSOR FOR
	SELECT  a.dt_inicio_parto dt_registro,
			a.dt_fim_parto dt_registro_fim,
			a.NR_ATENDIMENTO nr_sequencia,
			SUBSTR((SELECT obter_nome_pf(a.cd_medico) ),1,60) ds_profissional,
			CASE WHEN OBTER_TIPO_PARTO(a.NR_ATENDIMENTO, 'F')='C' THEN  284828  ELSE 293983 END  ds_parto,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			364 nr_seq_item_pront,
			'PARTO' nm_tabela
	from  	PARTO a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and 	a.NR_ATENDIMENTO not in (	select  c.NR_SEQ_ORIGEM
										from    w_jornada_pac a,
												w_jornada_pac_grupo v,
												w_jornada_pac_registro c
										where   a.nr_sequencia = v.nr_seq_mod_jornada
										and		c.nr_seq_jornada_grupo = v.nr_sequencia
										and		a.cd_pessoa_fisica = cd_pessoa_fisica_p
										and     v.ie_grupo_inf = 'HP')
	order by 4;

--Cursor para oftalmo
C31 CURSOR FOR
	SELECT  a.dt_consulta dt_registro,
			a.nr_sequencia nr_sequencia,
			SUBSTR((SELECT (select obter_nome_pf(a.cd_medico) ) ),1,60) ds_profissional,
			a.NR_SEQ_TIPO_CONSULTA,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			3010 cd_funcao,
			null nr_seq_item_pront,
			'OFT_CONSULTA' nm_tabela
	from    OFT_CONSULTA a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		a.DT_ATUALIZACAO_NREC between dt_inicio_exec_w and dt_final_exec_w
	order by 3;

--Cursor para lista de problemas
C32 CURSOR FOR
	SELECT  dt_inicio dt_registro,
			dt_fim dt_registro_fim,
			nr_sequencia,
			SUBSTR((SELECT (select obter_nome_pf(a.cd_medico) ) ),1,60) ds_profissional,
			substr(obter_valor_dominio(8221,IE_STATUS),1,255) ds_status,
			ds_problema,
			NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			1498 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'LISTA_PROBLEMA_PAC' nm_tabela
	from    LISTA_PROBLEMA_PAC a
	where	cd_pessoa_fisica = cd_pessoa_fisica_p
	and     coalesce(nr_seq_problema_sup::text, '') = ''
	and     (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and     coalesce(DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, a.cd_doenca, a.nr_atendimento) = 'S')
	and		coalesce(dt_fim, coalesce(dt_liberacao, DT_ATUALIZACAO_NREC)) between dt_inicio_exec_w and dt_final_exec_w
	order by 4;

--Cursor loco regional
C33 CURSOR FOR
	SELECT  DT_AVALIACAO dt_registro,
			nr_sequencia,
			SUBSTR((SELECT obter_nome_pf(cd_medico) ),1,60) ds_profissional,
			substr(obter_desc_cid(CD_DOENCA_CID),1,255) ds_cid,
			CD_TUMOR_PRIMARIO T,
			CD_LINFONODO_REGIONAL N,
			CD_METASTASE_DISTANCIA M,
			CD_TUMOR_PRIM_PAT pT,
			CD_LINFONODO_REG_PAT pN,
			CD_METASTASE_DIST_PAT pM,
			NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			390 nr_seq_item_pront,
			'CAN_LOCO_REGIONAL' nm_tabela
	from    CAN_LOCO_REGIONAL
	where   CD_PESSOA_FISICA = cd_pessoa_fisica_p
	and     (DT_LIBERACAO IS NOT NULL AND DT_LIBERACAO::text <> '')
	and     coalesce(DT_INATIVACAO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, cd_doenca_cid, nr_atendimento) = 'S')
	and		coalesce(dt_liberacao, DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	order by 3;

--Cursor feridas e curativos
C34 CURSOR FOR
	SELECT  coalesce(DT_INICIO_FERIDA, clock_timestamp()) dt_registro,
			nr_sequencia,
			SUBSTR((SELECT obter_nome_pf(a.cd_medico) ),1,60) ds_profissional,
			substr(Obter_Desc_Tipo_Ferida(nr_seq_tipo_ferida),1,60) ds_tipo_ferida,
			substr(Obter_localizacao_ferida(NR_SEQ_LOCALIZACAO),1,60) ds_localizacao,
			NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			53 nr_seq_item_pront,
			'CUR_FERIDA' nm_tabela
	from    CUR_FERIDA a
	where   CD_PESSOA_FISICA = cd_pessoa_fisica_p
	and     (DT_LIBERACAO IS NOT NULL AND DT_LIBERACAO::text <> '')
	and     coalesce(DT_INATIVACAO::text, '') = ''
	and 	nr_sequencia not in (	select  a.NR_SEQ_ORIGEM
									from    w_jornada_pac_registro a,
											w_jornada_pac_grupo b
									where   a.NR_SEQ_JORNADA_GRUPO = b.nr_Sequencia
									and     b.IE_GRUPO_INF = 'FC')
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, nr_atendimento) = 'S')
	and		DT_INICIO_FERIDA between dt_inicio_exec_w and dt_final_exec_w;

--Cursor cirurgias
C35 CURSOR FOR
  SELECT coalesce(dt_inicio_cirurgia, dt_inicio_prevista) dt_registro,
         substr(obter_exame_agenda(cd_procedimento_princ, ie_origem_proced, nr_seq_proc_interno), 1, 240) ds_procedimento,
         nr_cirurgia nr_sequencia,
         nr_atendimento nr_atendimento_reg,
         281 cd_funcao,
         6 nr_seq_item_pront,
         a.ie_nivel_atencao,
         'CIRURGIA' nm_tabela
    FROM cirurgia a
   WHERE cd_pessoa_fisica = cd_pessoa_fisica_p
     AND coalesce(dt_cancelamento::text, '') = ''
     AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
     AND coalesce(dt_liberacao, coalesce(dt_inicio_cirurgia, dt_inicio_prevista)) BETWEEN dt_inicio_exec_w AND dt_final_exec_w

UNION ALL

  SELECT coalesce(dt_cirurgia, dt_atualizacao_nrec) dt_registro,
         substr(obter_exame_agenda(cd_procedimento, ie_origem_proced, nr_seq_proc_interno), 1, 240) ds_procedimento,
         nr_sequencia,
         nr_atendimento nr_atendimento_reg,
         281 cd_funcao,
         93 nr_seq_item_pront,
         NULL ie_nivel_atencao,
         'HISTORICO_SAUDE_CIRURGIA' nm_tabela
    FROM historico_saude_cirurgia
   WHERE cd_pessoa_fisica = cd_pessoa_fisica_p
     AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, cd_doenca_cid, nr_atendimento) = 'S')
     AND  coalesce(dt_cirurgia, dt_atualizacao_nrec) BETWEEN dt_inicio_exec_w AND dt_final_exec_w
   ORDER BY 1;

--Cursor Atendimentos
C36 CURSOR FOR
	SELECT  DT_ENTRADA dt_registro,
			dt_alta,
			substr(obter_valor_dominio(12,a.ie_tipo_atendimento),1,30) ds_tipo_atendimento,
			nr_atendimento nr_sequencia,
			NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			8 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'ATENDIMENTO_PACIENTE' nm_tabela,
      a.cd_motivo_alta
	from    atendimento_paciente a
	where   cd_pessoa_fisica = cd_pessoa_fisica_p
	and     coalesce(dt_cancelamento::text, '') = ''
  and     a.ie_tipo_atendimento = coalesce(ie_tipo_atendimento_w, a.ie_tipo_atendimento)
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and (a.DT_ATUALIZACAO_NREC between dt_inicio_exec_w and dt_final_exec_w
  or     a.DT_ATUALIZACAO between dt_inicio_exec_w and dt_final_exec_w
  or     a.dt_alta between dt_inicio_exec_w and dt_final_exec_w)
	order by 4;

--Cursor evolucoes
c37_w  REFCURSOR;

-- dados do cursor de evolucao paciente
ev_dt_registro        evolucao_paciente.dt_evolucao%type;
ev_nr_sequencia       evolucao_paciente.cd_evolucao%type;
ev_ds_profissional    varchar(255);
ev_ds_funcao_usuario  varchar(255);
ev_ds_tipo_evolucao   varchar(255);
ev_nr_atendimento_reg evolucao_paciente.NR_ATENDIMENTO%type;
ev_cd_funcao          bigint;
ev_nr_seq_item_pront  bigint;
ev_ie_nivel_atencao   evolucao_paciente.ie_nivel_atencao%type;
ev_nm_tabela          varchar(255);


--Cursor transfusao
C38 CURSOR FOR
  SELECT dt_transfusao dt_registro,
         nr_sequencia,
         substr(obter_nome_pf(cd_pf_realizou), 1, 60) ds_profissional,
         nr_atendimento nr_atendimento_reg,
         450 cd_funcao,
         NULL nr_seq_item_pront,
         'SAN_TRANSFUSAO' nm_tabela
    FROM san_transfusao a
   WHERE cd_pessoa_fisica = cd_pessoa_fisica_p
     AND ie_status <> 'C'
     AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
     AND dt_atualizacao_nrec between dt_inicio_exec_w and dt_final_exec_w
  
UNION ALL

  SELECT coalesce(t.dt_transfusao, coalesce(t.dt_liberacao, coalesce(t.dt_registro, t.dt_atualizacao))) dt_registro,
         t.nr_sequencia,
         obter_nome_pf(t.cd_profissional) ds_profissional,
         ac.nr_atendimento nr_atendimento_reg,
         281 cd_funcao,
         93 nr_seq_item_pront,
         'PACIENTE_TRANSFUSAO' nm_tabela
    FROM paciente_transfusao t
    LEFT JOIN atend_consulta_pepa ac
      ON ac.nr_sequencia = t.nr_seq_atend_cons_pepa
   WHERE t.cd_pessoa_fisica = cd_pessoa_fisica_p
     AND t.ie_situacao <> 'I'
     AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, ac.nr_atendimento) = 'S') 
     AND coalesce(t.dt_transfusao, coalesce(t.dt_liberacao, coalesce(t.dt_registro, t.dt_atualizacao))) between dt_inicio_exec_w and dt_final_exec_w
   ORDER BY 3;

--Cursor Receitas
C39 CURSOR FOR
	SELECT  a.DT_RECEITA dt_registro,
			a.NR_SEQUENCIA nr_sequencia,
			SUBSTR((SELECT obter_nome_pf(a.cd_medico) ),1,60) ds_profissional,
			a.DT_VALIDADE_RECEITA,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			73 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'FA_RECEITA_FARMACIA' nm_tabela
	from    FA_RECEITA_FARMACIA a
	where   a.cd_pessoa_fisica = cd_pessoa_fisica_p
	and     (a.DT_LIBERACAO IS NOT NULL AND a.DT_LIBERACAO::text <> '')
	and     coalesce(a.DT_CANCELAMENTO::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(DT_LIBERACAO, DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	order by 1;

C40 CURSOR FOR
	SELECT  nr_sequencia, substr(obter_desc_material(cd_material),1,255) ds
	from    FA_RECEITA_FARMACIA_ITEM
	where 	nr_seq_receita = nr_seq_receita_w;

C41 CURSOR FOR
	SELECT	distinct
			b.dt_inclusao,
			a.nm_programa,
			a.nr_sequencia,
			null nr_atendimento_reg,
			10152 cd_funcao,
			null nr_seq_item_pront,
			'MPREV_PROGRAMA' nm_tabela
	FROM	mprev_programa a,
			mprev_programa_partic b,
			mprev_participante c
	WHERE	a.nr_sequencia = b.nr_seq_programa
	AND		c.nr_sequencia = b.nr_seq_participante
	AND		c.cd_pessoa_fisica = cd_pessoa_fisica_p
  AND   coalesce(ie_problema_paciente_p::text, '') = ''
	and		c.DT_ATUALIZACAO_NREC between dt_inicio_exec_w and dt_final_exec_w
	ORDER BY ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_inclusao) desc;

C42 CURSOR FOR
	SELECT  a.dt_indicacao dt_agendamento,
			a.nr_sequencia,
			mprev_obter_desc_programa(b.nr_seq_programa) ds_descricao,
			null nr_atendimento_reg,
			10152 cd_funcao,
			null nr_seq_item_pront,
			'MPREV_CAPTACAO' nm_tabela
	from    mprev_indicacao_paciente a,
			mprev_captacao_destino b,
			mprev_captacao c
	where   c.nr_seq_indicacao = a.nr_sequencia
	and     c.nr_sequencia = b.nr_seq_captacao
	and     a.cd_pessoa_fisica = cd_pessoa_fisica_p
	and     (a.dt_confirmacao IS NOT NULL AND a.dt_confirmacao::text <> '')
  AND     coalesce(ie_problema_paciente_p::text, '') = ''
	and     mprev_obter_se_programa(cd_pessoa_fisica_p,b.nr_seq_programa) = 'N'
	and		c.DT_ATUALIZACAO_NREC between dt_inicio_exec_w and dt_final_exec_w
	
union all

	SELECT  dt_agendamento dt_agendamento,
			CD_AGENDA nr_sequencia,
			obter_desc_espec_medica(cd_especialidade) ds_descricao,
			null nr_atendimento_reg,
			10152 cd_funcao,
			null nr_seq_item_pront,
			'AGENDA_LISTA_ESPERA' nm_tabela
	from    agenda_lista_espera a
	where   cd_pessoa_fisica = cd_pessoa_fisica_p
	and     ie_status_espera = 'A'
	and     nm_tabela_pedido = 'ATEND_ENCAMINHAMENTO'
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, a.cd_cid, a.nr_atendimento) = 'S')
	and		a.DT_ATUALIZACAO_NREC between dt_inicio_exec_w and dt_final_exec_w
	
union all

	select  dt_agendamento dt_agendamento,
			CD_AGENDA nr_sequencia,
			obter_exame_lista_agenda(nr_sequencia) ds_descricao,
			null nr_atendimento_reg,
			10152 cd_funcao,
			null nr_seq_item_pront,
			'AGENDA_LISTA_ESPERA' nm_tabela
	from    agenda_lista_espera a
	where   cd_pessoa_fisica = cd_pessoa_fisica_p
	and     ie_status_espera = 'A'
	and     nm_tabela_pedido = 'PEDIDO_EXAME_EXTERNO'
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, a.cd_cid, a.nr_atendimento) = 'S')  
	and		a.DT_ATUALIZACAO_NREC between dt_inicio_exec_w and dt_final_exec_w
	order by  dt_agendamento desc;

--Cursor Sinais Vitais
C43 CURSOR FOR
	SELECT  DT_SINAL_VITAL,
			NR_SEQUENCIA,
			SUBSTR((SELECT obter_nome_pf(CD_PESSOA_FISICA) ),1,60) ds_profissional,
			QT_PA_SISTOLICA,
			QT_PA_DIASTOLICA,
			QT_FREQ_RESP,
			QT_FREQ_CARDIACA,
			QT_TEMP,
			NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			13 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			QT_PESO, QT_ALTURA_CM,
			'ATENDIMENTO_SINAL_VITAL' nm_tabela
	from    atendimento_sinal_vital a
	where   cd_paciente = cd_pessoa_fisica_p
	and     (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and     coalesce(dt_inativacao::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(dt_liberacao, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	order by 3;

--Cursor Solic externa
C44 CURSOR FOR
	SELECT  DT_SOLICITACAO dt_registro,
			NR_SEQUENCIA,
			SUBSTR((SELECT obter_nome_pf(CD_PROFISSIONAL) ),1,60) ds_profissional,
			SUBSTR(obter_desc_cid(CD_DOENCA),1,200) ds_diagnostico,
			NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			385 nr_seq_item_pront,
			a.IE_NIVEL_ATENCAO,
			'PEDIDO_EXAME_EXTERNO' nm_tabela
	from    PEDIDO_EXAME_EXTERNO a
	where   cd_pessoa_fisica = cd_pessoa_fisica_p
	and     (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and     coalesce(dt_inativacao::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, a.cd_doenca, a.nr_atendimento) = 'S')
	and		coalesce(dt_liberacao, a.DT_ATUALIZACAO_NREC) between dt_inicio_exec_w and dt_final_exec_w
	order by 3;

C45 CURSOR FOR
	SELECT  nr_sequencia,
			substr(Obter_Med_Exame_Externo(nr_sequencia),1,255) ds_exame,
			DS_EXAME_SEM_CAD ds_exame_sem_cadastro,
			OBTER_DESC_PROC_INTERNO(NR_PROC_INTERNO) ds_proc_interno,
			substr(obter_descricao_procedimento(CD_PROCEDIMENTO,IE_ORIGEM_PROCED),1,240) ds_procedimento_cirurgia,
			OBTER_DESC_EXAME_LAB(NR_SEQ_EXAME_LAB, null, null, null) ds_exame_lab,
			OBTER_DESC_MATERIAL_EXAME_LAB(CD_MATERIAL_EXAME) ds_material_exame
	from    PEDIDO_EXAME_EXTERNO_ITEM a
	where   NR_SEQ_PEDIDO = nr_seq_solic_exame_w;

-- Cursor Vacinas
C46 CURSOR FOR
	SELECT  nr_sequencia,
			coalesce(a.dt_registro, dt_liberacao) dt_registro,
			substr((SELECT obter_nome_pf(a.cd_profissional) ),1,255) ds_profissional,
			substr(obter_descricao_padrao('VACINA','DS_VACINA',nr_seq_vacina),1,255) ds_vacina,
			substr(obter_valor_dominio(1018,ie_dose),1,100) ds_dose,
			substr(obter_desc_expressao(289766),1,255) ds_vacina_exec_w,
			NR_ATENDIMENTO nr_atendimento_reg,
			281 cd_funcao,
			93 nr_seq_item_pront,
			'PACIENTE_VACINA' nm_tabela
	from    PACIENTE_VACINA a
	where   cd_pessoa_fisica = cd_pessoa_fisica_p
	and 	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and 	coalesce(dt_inativacao::text, '') = ''
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and		coalesce(a.dt_registro, dt_liberacao) between dt_inicio_exec_w and dt_final_exec_w
	
union all

	select	b.nr_sequencia,
			ADD_MONTHS(clock_timestamp(), (( Obter_idade_min_max_vacina(c.nr_sequencia,'MIN') / 365) - obter_dados_pf(cd_pessoa_fisica_p,'I')) * 12) dt_registro,
			null ds_profissional,
			substr(obter_descricao_padrao('VACINA','DS_VACINA',b.nr_sequencia),1,500) ds_vacina,
			substr(obter_valor_dominio(1018,ie_dose),1,200) ds_dose,
			substr(obter_desc_expressao(295406),1,255) ds_vacina_exec_w,
			null nr_atendimento_reg,
			903 cd_funcao,
			null nr_seq_item_pront,
			'VACINA' nm_tabela
	from  	vacina b,
			vacina_calendario c
	where	b.nr_sequencia	= c.nr_seq_vacina
	and 	(Obter_idade_min_max_vacina(c.nr_sequencia,'MIN') IS NOT NULL AND (Obter_idade_min_max_vacina(c.nr_sequencia,'MIN'))::text <> '')
	and   	not exists (select 1 from paciente_vacina e where e.nr_seq_vacina = b.nr_sequencia and e.cd_pessoa_fisica = cd_pessoa_fisica_p and c.ie_dose = e.ie_dose)
	and		ADD_MONTHS(clock_timestamp(), (( Obter_idade_min_max_vacina(c.nr_sequencia,'MIN') / 365) - obter_dados_pf(cd_pessoa_fisica_p,'I')) * 12) <= clock_timestamp()
  AND   coalesce(ie_problema_paciente_p::text, '') = '' 
	and		b.DT_ATUALIZACAO_NREC between dt_inicio_exec_w and dt_final_exec_w
	
union all

	select	b.nr_sequencia,
			ADD_MONTHS(clock_timestamp(), (( Obter_idade_min_max_vacina(c.nr_sequencia,'MIN') / 365) - obter_dados_pf(cd_pessoa_fisica_p,'I')) * 12) dt_registro,
			null ds_profissional,
			substr(obter_descricao_padrao('VACINA','DS_VACINA',b.nr_sequencia),1,500) ds_vacina,
			substr(obter_valor_dominio(1018,ie_dose),1,200) ds_dose,
			substr(obter_desc_expressao(311525),1,255) ds_vacina_exec_w,
			null nr_atendimento_reg,
			903 cd_funcao,
			null nr_seq_item_pront,
			'VACINA' nm_tabela
	from  	vacina b,
			vacina_calendario c
	where	b.nr_sequencia	= c.nr_seq_vacina
	and 	(Obter_idade_min_max_vacina(c.nr_sequencia,'MIN') IS NOT NULL AND (Obter_idade_min_max_vacina(c.nr_sequencia,'MIN'))::text <> '')
	and		ADD_MONTHS(clock_timestamp(), (( Obter_idade_min_max_vacina(c.nr_sequencia,'MIN') / 365) - obter_dados_pf(cd_pessoa_fisica_p,'I')) * 12) > clock_timestamp()
	and   	not exists (select 1 from paciente_vacina e where e.nr_seq_vacina = b.nr_sequencia and e.cd_pessoa_fisica = cd_pessoa_fisica_p and c.ie_dose = e.ie_dose)
  AND   coalesce(ie_problema_paciente_p::text, '') = ''
	and		b.DT_ATUALIZACAO_NREC between dt_inicio_exec_w and dt_final_exec_w
	order by dt_registro;

--Cursor MOvimentacoes do paciente
C47 CURSOR FOR
	SELECT  a.DT_ENTRADA_UNIDADE,
			a.DT_SAIDA_UNIDADE,
			a.NR_ATENDIMENTO nr_sequencia,
			substr((SELECT obter_nome_setor(a.CD_SETOR_ATENDIMENTO) ),1,40) ds_setor,
			substr(obter_valor_dominio(1493, Obter_Tipo_Unidade_Atend(a.nr_atendimento, a.nr_seq_interno, a.ie_passagem_setor)),1,100) ds_tipo_passagem,
			SUBSTR(obter_valor_dominio(1, OBTER_CLASSIF_SETOR(a.CD_SETOR_ATENDIMENTO)),1,255) ds_classif_setor,
			a.NR_ATENDIMENTO nr_atendimento_reg,
			3111 cd_funcao,
			null nr_seq_item_pront,
			'ATEND_PACIENTE_UNIDADE' nm_tabela
	from    ATEND_PACIENTE_UNIDADE a,
			atendimento_paciente b
	where	a.nr_atendimento = b.nr_atendimento
	and 	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	and		OBTER_CLASSIF_SETOR(a.CD_SETOR_ATENDIMENTO) in (4, 2, 3)
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
	and (a.DT_ATUALIZACAO_NREC between dt_inicio_exec_w and dt_final_exec_w or a.DT_ATUALIZACAO between dt_inicio_exec_w and dt_final_exec_w)
	order by 1, 2;

--Cursor Quimioterapia
C48 CURSOR FOR

    SELECT  a.NR_SEQ_PACIENTE nr_sequencia,
            SUBSTR(obter_nome_pf(a.cd_medico_resp),1,60) ds_profissional,
            SUBSTR(obter_desc_protocolo(a.cd_protocolo),1,255) ds_protocolo,
            NULL nr_atendimento_reg,
            281 cd_funcao,
            223 nr_seq_item_pront
    FROM    PACIENTE_SETOR a
    WHERE   cd_pessoa_fisica = cd_pessoa_fisica_p
    AND     a.ie_status <> 'I'
    AND     SUBSTR(obter_se_ciclo_suspenso(nr_seq_paciente),1,1) <> 'S'
    AND     EXISTS (
        SELECT nr_seq_atendimento
        FROM paciente_atendimento
        WHERE coalesce(dt_real,dt_prevista) BETWEEN dt_inicio_exec_w AND dt_final_exec_w
    )
	order by 1;

C49 CURSOR FOR
	SELECT  NR_CICLO,
			DS_DIA_CICLO,
			DT_PREVISTA,
			DT_REAL,
			coalesce(DT_REAL, DT_PREVISTA) dt_registro,
			nr_atendimento nr_atendimento_reg,
			NR_SEQ_ATENDIMENTO,
			dt_inicio_adm,
			dt_fim_adm,
			nr_seq_local,
			ie_exige_liberacao,
			dt_chegada,
			DT_CANCELAMENTO,
			'PACIENTE_ATENDIMENTO' nm_tabela,
			obter_status_dia_ciclo(NR_SEQ_ATENDIMENTO) ds_status
	from 	PACIENTE_ATENDIMENTO
	where 	nr_seq_paciente = nr_seq_receita_w
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, NR_ATENDIMENTO) = 'S')
	order by 1,2,3;

--Cursor regra sinal vital
C50 CURSOR FOR
	SELECT 	12 QT_PESO,
			13 QT_ALTURA_CM,
			4 QT_TEMP,
			9 QT_FREQ_CARDIAC,
			1 QT_PA_SISTOLICA,
			2 QT_PA_DIASTOLIC
	;

--Cursor Receitas problemas

/*cursor C51 is
	select	NR_SEQ_PROBLEMA
	from 	soap_item_sintoma
	where	NR_SEQ_RECEITA_AMB = nr_seq_receita_w
	and		NR_SEQ_MED_RECEITA = nr_seq_med_receita_w;*/


--Cursor Receitas problemas

/*cursor C52 is
	select	NR_SEQ_PROBLEMA
	from 	soap_item_sintoma
	where	NR_SEQ_SOLIC_EXAME = NR_SEQ_SOLIC_EXAME_w
	and		NR_SEQ_ITEM_SOLIC = nr_seq_item_solic_w;*/


/*cursor C53 is
	select  nr_seq_problema
	from    prescr_item_sintoma
	where   cd_subgrupo_w in ('DI')
	and     NR_PRESCRICAO = nr_seq_presc_cpoe_w
	and     NR_SEQ_DIALISE = nr_seq_reg_cpoe_w
	union all
	select  nr_seq_problema
	from    prescr_item_sintoma
	where   cd_subgrupo_w in ('NT')
	and     NR_PRESCRICAO = nr_seq_presc_cpoe_w
	and     NR_SEQ_DIETA = nr_seq_reg_cpoe_w
	union all
	select  nr_seq_problema
	from    prescr_item_sintoma
	where   cd_subgrupo_w in ('HE')
	and     NR_PRESCRICAO = nr_seq_presc_cpoe_w
	and     NR_SEQ_HEMOTERAPIA = nr_seq_reg_cpoe_w
	union all
	select  nr_seq_problema
	from    prescr_item_sintoma
	where   cd_subgrupo_w in ('ME')
	and     NR_PRESCRICAO = nr_seq_presc_cpoe_w
	and     NR_SEQ_MEDIC = nr_seq_reg_cpoe_w;*/
C63 CURSOR FOR
	SELECT  nr_sequencia
	from    w_jornada_pac_registro
	where   NR_SEQ_JORNADA_GRUPO in (SELECT  nr_sequencia
									 from    w_jornada_pac_grupo
                                     where   IE_GRUPO_INF = 'CM');

/*cursor C64 is
	select  nr_sequencia
	from    LISTA_PROBLEMA_PAC b
	where   nr_atendimento_w = b.nr_atendimento
	and     nr_seq_problema_sup is null
	and     dt_liberacao IS NOT NULL
	and     DT_INATIVACAO is null;*/
C65 CURSOR FOR
	SELECT  NR_SEQ_PROBLEMA nr_sequencia
	from    LISTA_PROBLEMA_PAC_INCID b
	where   nr_atendimento_w = b.nr_atendimento;

--Cursor Radioterapia
C66 CURSOR FOR
  SELECT
      fase.nr_sequencia,
      protocolo.nm_protocolo,
      agenda.dt_agenda,
      dominio.ds_valor_dominio AS status,
      fase.nr_seq_dia AS dia,
      fase.nr_seq_dia_fase AS dia_fase
  FROM
      rxt_agenda_fase fase,
      rxt_agenda agenda,
      valor_dominio_v dominio,
      rxt_tratamento tratamento,
      rxt_protocolo protocolo,
      rxt_tumor tumor
  WHERE
      coalesce(tumor.cd_pessoa_fisica,agenda.cd_pessoa_fisica) = cd_pessoa_fisica_p
  AND agenda.dt_agenda BETWEEN dt_inicio_exec_w AND dt_final_exec_w
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or (obter_se_problema_paciente(ie_problema_paciente_p, null, agenda.nr_atendimento) = 'S' or
           obter_se_problema_paciente(ie_problema_paciente_p, tumor.cd_doenca, tumor.nr_atendimento) = 'S'))
  AND fase.nr_seq_agenda_rxt = agenda.nr_sequencia
  AND dominio.cd_dominio = 2217
  AND dominio.vl_dominio = agenda.ie_status_agenda
  AND agenda.nr_seq_tratamento = tratamento.nr_sequencia
  AND tratamento.nr_seq_protocolo = protocolo.nr_sequencia
  AND tratamento.nr_seq_tumor = tumor.nr_sequencia;

--Cursor Etapas Protocolo Integrado
C67 CURSOR FOR
SELECT
    etapa.nr_sequencia,
    etapa.dt_inicial_previsto AS dt_inicio,
    etapa.dt_final_previsto AS dt_fim,
    etapa.dt_inicial_previsto || ' - ' || etapa.dt_final_previsto AS periodo_previsto,
    PKG_DATE_FORMATERS_TZ.to_varchar(etapa.dt_inicial_real,'shortDate', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone) || ' - ' || PKG_DATE_FORMATERS_TZ.to_varchar(etapa.dt_final_real,'shortDate', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone) AS periodo_executado,
    etapa.nr_dias_atraso,
    CASE WHEN ie_nome_amigavel_p='S' THEN  coalesce(etapa.ds_etapa_paciente, etapa.ds_etapa)  ELSE etapa.ds_etapa END  ds_etapa,
    paciente.NR_SEQUENCIA NR_SEQUENCIA_PROTOCOLO
FROM
    protocolo_int_pac_etapa etapa,
    protocolo_int_paciente paciente
WHERE
    paciente.cd_pessoa_fisica = cd_pessoa_fisica_p
AND etapa.nr_seq_protocolo_int_pac = paciente.nr_sequencia
AND (
        (dt_inicio_exec_w BETWEEN etapa.dt_inicial_previsto AND etapa.dt_final_previsto)
    OR (dt_final_exec_w BETWEEN etapa.dt_inicial_previsto AND etapa.dt_final_previsto)
    OR (dt_inicio_exec_w <= etapa.dt_inicial_previsto AND dt_final_exec_w >= etapa.dt_final_previsto)
    )
	AND NOT(ie_nome_amigavel_p = 'S'
	AND coalesce(etapa.ie_ocultar_visao_paciente, 'N') = 'S'
	AND NOT EXISTS (SELECT 1
					 FROM protocolo_int_pac_evento evento
					 WHERE etapa.nr_sequencia = evento.nr_seq_prt_int_pac_etapa
					 AND coalesce(evento.ie_ocultar_visao_paciente, 'N') = 'N'))
AND (
        exibe_prot_sem_liberacao_w = 'S'
        OR paciente.nm_usuario = nm_usuario_logado_w
        OR paciente.ie_status IN ('A', 'F', 'S')
    )
AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, paciente.cd_cid_doenca, null) = 'S')
AND (coalesce(nr_seq_protocolo_p::text, '') = '' OR paciente.nr_sequencia = nr_seq_protocolo_p);


--Cursor Eventos Protocolo Integrado
C68 CURSOR FOR
SELECT
    evento.nr_sequencia,
    CASE WHEN ie_nome_amigavel_p='S' THEN  coalesce(evento.ds_evento_plano_paciente, evento.ds_evento_plano)  ELSE evento.ds_evento_plano END  ds_evento_plano,
    evento.nr_dia_previsto,
    evento.nr_dia_real,
    evento.nr_dias_atraso,
    evento.ie_desconsiderar_atraso,
	evento.ie_tipo_evento AS ie_tipo_evento,
  evento.ie_realizado_externamente,
	evento.nr_seq_intervencao,
    dominio.vl_dominio,
    dominio.DS_EXPRESSAO AS tipo_evento,
     (SELECT tip_agend.ds_expressao
       FROM valor_dominio_v tip_agend
      WHERE tip_agend.cd_dominio = 2772
        AND tip_agend.vl_dominio = evento.ie_tipo_agendamento
        AND evento.ie_tipo_evento = 'AG') tipo_agendamento,
    evento.dt_prevista,
    evento.dt_real,
	evento.ds_resultado_evento,
	coalesce(evento.ie_evento_critico, 'N') ie_evento_critico,
	coalesce(evento.ie_variacao, 'N') ie_variacao,
	evento.ds_variacao,
  paciente.NR_SEQUENCIA NR_SEQUENCIA_PROTOCOLO,
  etapa.dt_inicial_previsto AS dt_inicial_etapa
FROM
    protocolo_int_pac_evento evento,
    protocolo_int_pac_etapa etapa,
    protocolo_int_paciente paciente,
    valor_dominio_v dominio
WHERE
    paciente.cd_pessoa_fisica = cd_pessoa_fisica_p
AND etapa.nr_sequencia = evento.nr_seq_prt_int_pac_etapa
AND paciente.nr_sequencia = etapa.nr_seq_protocolo_int_pac
AND dominio.cd_dominio = 8828
AND dominio.vl_dominio = evento.ie_tipo_evento
AND evento.dt_prevista BETWEEN dt_inicio_exec_w AND dt_final_exec_w
AND NOT(ie_nome_amigavel_p = 'S' AND coalesce(evento.ie_ocultar_visao_paciente, 'N') = 'S')
AND (
        exibe_prot_sem_liberacao_w = 'S'
        OR paciente.nm_usuario = nm_usuario_logado_w
        OR paciente.ie_status IN ('A', 'F', 'S')
    )
AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, paciente.cd_cid_doenca, null) = 'S')
AND (coalesce(nr_seq_protocolo_p::text, '') = '' OR paciente.nr_sequencia = nr_seq_protocolo_p)
ORDER BY nr_seq_ordem ASC;

--Cursor Protocolo Integrado do Paciente - Mostrar eles separados
C69 CURSOR FOR
SELECT paciente.nr_sequencia nr_sequencia,
	paciente.ds_tratamento ds_tratamento
FROM protocolo_int_paciente paciente
WHERE
    paciente.cd_pessoa_fisica = cd_pessoa_fisica_p
AND (
        exibe_prot_sem_liberacao_w = 'S'
        OR paciente.nm_usuario = nm_usuario_logado_w
        OR paciente.ie_status('A', 'F', 'S')
    )
AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, paciente.cd_cid_doenca, null) = 'S')
AND (coalesce(nr_seq_protocolo_p::text, '') = '' OR paciente.nr_sequencia = nr_seq_protocolo_p);

--Cursor Etapas Protocolo Integrado - Mostrar eles separados
C70 CURSOR FOR
SELECT
    etapa.nr_sequencia,
    etapa.dt_inicial_previsto AS dt_inicio,
    etapa.dt_final_previsto AS dt_fim,
    etapa.dt_inicial_previsto || ' - ' || etapa.dt_final_previsto AS periodo_previsto,
    TO_CHAR(etapa.dt_inicial_real,'dd/mm/yyyy') || ' - ' || TO_CHAR(etapa.dt_final_real,'dd/mm/yyyy') AS periodo_executado,
    etapa.nr_dias_atraso,
    CASE WHEN ie_nome_amigavel_p='S' THEN  coalesce(etapa.ds_etapa_paciente, etapa.ds_etapa)  ELSE etapa.ds_etapa END  ds_etapa,
    OBTER_PROTOCOLO_INT_PACIENTE(etapa.nr_sequencia, 'PROTOCOLO_INT_PAC_ETAPA') NR_SEQUENCIA_PROTOCOLO
FROM
    protocolo_int_pac_etapa etapa
WHERE
	etapa.nr_seq_protocolo_int_pac = nr_seq_prot_int_pac_w
AND (
        (dt_inicio_exec_w BETWEEN etapa.dt_inicial_previsto AND etapa.dt_final_previsto)
    OR (dt_final_exec_w BETWEEN etapa.dt_inicial_previsto AND etapa.dt_final_previsto)
    OR (dt_inicio_exec_w <= etapa.dt_inicial_previsto AND dt_final_exec_w >= etapa.dt_final_previsto)
    )
	AND NOT(ie_nome_amigavel_p = 'S'
	AND coalesce(etapa.ie_ocultar_visao_paciente, 'N') = 'S'
	AND NOT EXISTS (SELECT 1
					 FROM protocolo_int_pac_evento evento
					 WHERE etapa.nr_sequencia = evento.nr_seq_prt_int_pac_etapa
					 AND coalesce(evento.ie_ocultar_visao_paciente, 'N') = 'N'));

--Cursor Eventos Protocolo Integrado - Mostrar eles separados
C71 CURSOR FOR
SELECT
    evento.nr_sequencia,
    CASE WHEN ie_nome_amigavel_p='S' THEN  coalesce(evento.ds_evento_plano_paciente, evento.ds_evento_plano)  ELSE evento.ds_evento_plano END  ds_evento_plano,
    evento.nr_dia_previsto,
    evento.nr_dia_real,
    evento.nr_dias_atraso,
    evento.ie_desconsiderar_atraso,
	evento.ie_tipo_evento,
  evento.ie_realizado_externamente,
	evento.nr_seq_intervencao,
    dominio.vl_dominio,
    dominio.DS_EXPRESSAO AS tipo_evento,
     (SELECT tip_agend.ds_expressao
       FROM valor_dominio_v tip_agend
      WHERE tip_agend.cd_dominio = 2772
        AND tip_agend.vl_dominio = evento.ie_tipo_agendamento
        AND evento.ie_tipo_evento = 'AG') tipo_agendamento,
    evento.dt_prevista,
    evento.dt_real,
	evento.ds_resultado_evento,
	coalesce(evento.ie_evento_critico, 'N') ie_evento_critico,
	coalesce(evento.ie_variacao, 'N') ie_variacao,
	evento.ds_variacao,
  OBTER_PROTOCOLO_INT_PACIENTE(etapa.nr_sequencia, 'PROTOCOLO_INT_PAC_ETAPA') NR_SEQUENCIA_PROTOCOLO,
  etapa.dt_inicial_previsto AS dt_inicial_etapa
FROM
    protocolo_int_pac_evento evento,
    protocolo_int_pac_etapa etapa,
    valor_dominio_v dominio
WHERE
    etapa.nr_sequencia = evento.nr_seq_prt_int_pac_etapa
AND nr_seq_prot_int_pac_w = etapa.nr_seq_protocolo_int_pac
AND dominio.cd_dominio = 8828
AND dominio.vl_dominio = evento.ie_tipo_evento
AND evento.dt_prevista BETWEEN dt_inicio_exec_w AND dt_final_exec_w
AND NOT(ie_nome_amigavel_p = 'S' AND coalesce(evento.ie_ocultar_visao_paciente, 'N') = 'S')
AND (coalesce(nr_seq_protocolo_p::text, '') = '' OR etapa.nr_seq_protocolo_int_pac = nr_seq_protocolo_p)
ORDER BY nr_seq_ordem ASC;

--Cursor Protocolos Gerenciados - Protcolos (Visualizado no Gantt do Mentor)
C72 CURSOR FOR
SELECT
  a.nr_sequencia,
  a.DS_NOME_PROTOCOLO,
  a.DT_PREVISTA_INICIO,
  a.DT_PREVISTA_FIM
from gqa_protocolo_pac a
where
  (
    ((cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') and a.cd_pessoa_fisica = cd_pessoa_fisica_p)
    or (coalesce(cd_pessoa_fisica_p::text, '') = '' and (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and nr_atendimento_w = a.nr_atendimento)
  )
  and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
  and a.ie_situacao = 'A'
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
  and (
    (dt_inicio_exec_w BETWEEN a.DT_PREVISTA_INICIO AND a.DT_PREVISTA_FIM)
    OR (dt_final_exec_w BETWEEN a.DT_PREVISTA_INICIO AND a.DT_PREVISTA_FIM)
    OR (dt_inicio_exec_w <= a.DT_PREVISTA_INICIO AND dt_final_exec_w >= a.DT_PREVISTA_FIM)
  );

--Cursor Protocolos Gerenciados - Etapas (Visualizado no Gantt do Mentor)
C73 CURSOR FOR
SELECT
  b.nr_sequencia,
  b.DS_NOME_ETAPA,
  b.DT_PREVISTA_INICIO
from gqa_protocolo_etapa_pac b,
  gqa_protocolo_pac a
where b.nr_seq_prot_pac = a.nr_sequencia  --nr_seq_prot_pac_w;
  and (
    ((cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') and a.cd_pessoa_fisica = cd_pessoa_fisica_p)
    or (coalesce(cd_pessoa_fisica_p::text, '') = '' and (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and nr_atendimento_w = a.nr_atendimento)
  )
  and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
  and a.ie_situacao = 'A'
  AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
  and (
    (dt_inicio_exec_w BETWEEN a.DT_PREVISTA_INICIO AND a.DT_PREVISTA_FIM)
    OR (dt_final_exec_w BETWEEN a.DT_PREVISTA_INICIO AND a.DT_PREVISTA_FIM)
    OR (dt_inicio_exec_w <= a.DT_PREVISTA_INICIO AND dt_final_exec_w >= a.DT_PREVISTA_FIM)
  );

--Cursor Tipos de atendimentos
C74 CURSOR FOR
SELECT a.vl_dominio, OBTER_DESC_EXPRESSAO(CD_EXP_VALOR_DOMINIO) ds_dominio
from VALOR_DOMINIO a
where a.cd_dominio = 12--Codigo do dominio tipo de atendimento
order by 2;

--Cursor Agendamentos - Agenda de servico
C75 CURSOR FOR
SELECT	b.nr_sequencia cd_agenda,
    a.ds_agenda,
    b.dt_agenda,
    SUBSTR(obter_desc_expressao(298345),1,30) ds_tipo,
    866 cd_funcao,
    b.nr_atendimento nr_atendimento_reg,
    (SELECT OBTER_NOME_PF(OBTER_PROFISSIONAL_AGENDA(a.cd_agenda)) ) ds_profissional,
    'AGENDA_CONSULTA' nm_tabela
FROM	agenda a,
    agenda_consulta b
WHERE	a.cd_agenda = b.cd_agenda
AND		a.cd_tipo_agenda = 5
AND		b.cd_pessoa_fisica = cd_pessoa_fisica_p
AND		b.ie_status_agenda NOT IN ('C','L','B')
AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, b.nr_atendimento) = 'S')
and		dt_agenda between dt_inicio_exec_w and dt_final_exec_w;

--Cursor Agendamentos - Agenda de consulta
C76 CURSOR FOR
SELECT	a.cd_agenda,
		a.ds_agenda,
		b.dt_agenda,
		SUBSTR(obter_desc_expressao(285916),1,30) ds_tipo,
		821 cd_funcao,
		b.nr_atendimento nr_atendimento_reg,
		(SELECT OBTER_NOME_PF(OBTER_PROFISSIONAL_AGENDA(a.cd_agenda)) ) ds_profissional,
		'AGENDA_CONSULTA' nm_tabela
FROM	agenda a,
		agenda_consulta b
WHERE	a.cd_agenda = b.cd_agenda
AND		a.cd_tipo_agenda IN (3,4)
AND		b.cd_pessoa_fisica = cd_pessoa_fisica_p
AND		b.ie_status_agenda NOT IN ('C','L','B')
AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, b.nr_atendimento) = 'S')
and		dt_agenda between dt_inicio_exec_w and dt_final_exec_w;

--Cursor Agendamentos - Agenda de exames
C77 CURSOR FOR
SELECT	b.nr_sequencia cd_agenda,
		a.ds_agenda,
		PKG_DATE_UTILS.get_DateTime(b.dt_agenda, b.HR_INICIO) dt_agenda,
		SUBSTR(obter_desc_expressao(761511),1,330) ds_tipo,
		820 cd_funcao,
		b.nr_atendimento nr_atendimento_reg,
		(SELECT OBTER_NOME_PF(OBTER_PROFISSIONAL_AGENDA(a.cd_agenda)) ) ds_profissional,
		'AGENDA_PACIENTE' nm_tabela
FROM	agenda a,
		agenda_paciente b
WHERE	a.cd_agenda = b.cd_agenda
AND		a.cd_tipo_agenda = 2
AND		b.cd_pessoa_fisica = cd_pessoa_fisica_p
AND		b.ie_status_agenda NOT IN ('C','L','B')
AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, b.cd_doenca_cid, b.nr_atendimento) = 'S')
and		PKG_DATE_UTILS.get_DateTime(b.dt_agenda, b.HR_INICIO) between dt_inicio_exec_w and dt_final_exec_w;

--Cursor Agendamentos - Agenda Cirurgica
C78 CURSOR FOR
SELECT	b.nr_sequencia cd_agenda,
		a.ds_agenda,
		PKG_DATE_UTILS.get_DateTime(b.dt_agenda, b.HR_INICIO) dt_agenda,
		SUBSTR(obter_desc_expressao(486364),1,330) ds_tipo,
		871 cd_funcao,
		b.nr_atendimento nr_atendimento_reg,
		(SELECT OBTER_NOME_PF(OBTER_PROFISSIONAL_AGENDA(a.cd_agenda)) ) ds_profissional,
		'AGENDA_PACIENTE' nm_tabela
FROM	agenda a,
		agenda_paciente b
WHERE	a.cd_agenda = b.cd_agenda
AND		a.cd_tipo_agenda = 1
AND		b.cd_pessoa_fisica = cd_pessoa_fisica_p
AND		b.ie_status_agenda NOT IN ('C','L','B')
AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, b.cd_doenca_cid, b.nr_atendimento) = 'S')
and		PKG_DATE_UTILS.get_DateTime(b.dt_agenda, b.HR_INICIO) between dt_inicio_exec_w and dt_final_exec_w;

--Cursor Agendamentos - Outras agendas
C79 CURSOR FOR
SELECT  a.nr_sequencia cd_agenda,
		SUBSTR(rxt_obter_desc_equipamento(a.nr_seq_equipamento),1,80) ds_agenda,
		a.dt_agenda,
		SUBSTR(obter_desc_expressao(297224),1,255) ds_tipo,
		3030 cd_funcao,
		a.nr_atendimento nr_atendimento_reg,
		SUBSTR((SELECT obter_nome_medico_rxt_tumor(a.nr_seq_tratamento, a.nr_sequencia) ),1,80) ds_profissional,
		'RXT_AGENDA' nm_tabela
FROM 	rxt_agenda a
WHERE	a.ie_status_agenda NOT IN ('C','L','B')
AND (coalesce(ie_problema_paciente_p::text, '') = '' or obter_se_problema_paciente(ie_problema_paciente_p, null, a.nr_atendimento) = 'S')
AND		a.cd_pessoa_fisica = cd_pessoa_fisica_p
and		dt_agenda between dt_inicio_exec_w and dt_final_exec_w;
----------------------------------------------------------------------------------------------------------Procedures-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
procedure insert_jornada_pac is;
BEGIN
	if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
		select	count(*)
		into STRICT	ie_jornada_paciente_w
		from	w_jornada_pac
		where	cd_pessoa_fisica = cd_pessoa_fisica_p
		and 	nr_seq_modelo = nr_seq_modelo_p;

		if (ie_jornada_paciente_w = 0) then
			select	nextval('w_jornada_pac_seq')
			into STRICT	nr_seq_mod_jornada_w
			;

			insert into w_jornada_pac(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_estabelecimento,
				cd_pessoa_fisica,
				nr_atendimento,
				nr_seq_modelo)
			values (
				nr_seq_mod_jornada_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				cd_estabelecimento_p,
				cd_pessoa_fisica_p,
				nr_atendimento_p,
				nr_seq_modelo_p);

			commit;
		else
			select	max(nr_sequencia)
			into STRICT	nr_seq_mod_jornada_w
			from	w_jornada_pac
			where	cd_pessoa_fisica = cd_pessoa_fisica_p;
		end if;
	end if;
end;

procedure insert_jornada_pac_grupo( ie_grupo_inf_p			varchar2,
									nr_grupo_informacao_p	number,
									ie_alteracao_cadastro_p	varchar2,
									ie_tipo_visualizacao_p	varchar2 default 'G',
									ds_tratamento_p			varchar2 ) is
begin
	if (nr_seq_mod_jornada_w IS NOT NULL AND nr_seq_mod_jornada_w::text <> '') then
		select	count(*)
		into STRICT	qt_jornada_grupo_w
		from	w_jornada_pac_grupo
		where	nr_seq_mod_jornada = nr_seq_mod_jornada_w
		and 	IE_GRUPO_INF = ie_grupo_inf_p;

		if (qt_jornada_grupo_w = 0) then
			select	nextval('w_jornada_pac_grupo_seq')
			into STRICT	w_jornada_pac_grupo_w
			;

			insert into w_jornada_pac_grupo(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_mod_jornada,
				ie_grupo_inf,
				ds_grupo_informacao,
				dt_ultima_geracao,
				ie_alteracao_cadastro,
				IE_CONTINUO)
			values (
				w_jornada_pac_grupo_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_mod_jornada_w,
				ie_grupo_inf_p,
				coalesce(ds_tratamento_p, substr(obter_desc_expressao(nr_grupo_informacao_p),1,255)),
				clock_timestamp(),
				ie_alteracao_cadastro_p,
				ie_tipo_visualizacao_p);

			commit;
		else
			select	max(nr_sequencia)
			into STRICT	w_jornada_pac_grupo_w
			from	w_jornada_pac_grupo
			where	nr_seq_mod_jornada = nr_seq_mod_jornada_w
			and 	IE_GRUPO_INF = ie_grupo_inf_p;

			select 	max(DT_ULTIMA_GERACAO)
			into STRICT	dt_ultima_geracao_w
			from	w_jornada_pac_grupo
			where	nr_seq_mod_jornada = nr_seq_mod_jornada_w
			and 	IE_GRUPO_INF = ie_grupo_inf_p;
		end if;

		if (dt_ultima_geracao_w IS NOT NULL AND dt_ultima_geracao_w::text <> '') then
			dt_inicio_exec_w := dt_ultima_geracao_w;
		else
			if (ie_jornada_paciente_w = 0) then
				dt_inicio_exec_w := to_date('01.01.1900 00:00','dd-mm-yyyy hh24:mi');
			else
				dt_inicio_exec_w := dt_inicial_p;
			end if;
		end if;
	end if;
end;

procedure insert_jornada_pac_subgrupo( ds_subgrupo_p varchar2, cd_subgrupo_p varchar2  , nr_seq_cod_tab_p number  , nr_seq_cod_tela_p number  ) is
begin
	if (w_jornada_pac_grupo_w IS NOT NULL AND w_jornada_pac_grupo_w::text <> '') then
		select 	count(*)
		into STRICT	qt_jornada_subgrupo_w
		from	w_jornada_pac_subgrupo
		where	NR_SEQ_JORNADA_GRUPO = w_jornada_pac_grupo_w
		and		CD_SUBGRUPO = cd_subgrupo_p;

		if (qt_jornada_subgrupo_w = 0) then
			select	nextval('w_jornada_pac_subgrupo_seq')
			into STRICT	w_jornada_pac_subgrupo_w
			;

			insert into w_jornada_pac_subgrupo(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_subgrupo,
				ds_subgrupo,
				nr_seq_jornada_grupo,
				cd_subgrupo,
				nr_seq_cod_tab,
				nr_seq_cod_tela)
			values (
				w_jornada_pac_subgrupo_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				'S',
				ds_subgrupo_p,
				w_jornada_pac_grupo_w,
				cd_subgrupo_p,
				nr_seq_cod_tab_p,
				nr_seq_cod_tela_p);

			commit;
		else
			select	max(nr_sequencia)
			into STRICT	w_jornada_pac_subgrupo_w
			from	w_jornada_pac_subgrupo
			where	NR_SEQ_JORNADA_GRUPO = w_jornada_pac_grupo_w
			and		cd_subgrupo = cd_subgrupo_p;
		end if;
	end if;
end;

procedure delete_reg_futuro_pac is
begin
	delete
	from	w_jornada_pac_registro a
	where	dt_registro between clock_timestamp() and dt_final_p;
	commit;
end;

procedure insert_jornada_pac_problema( nr_sequencia_p	number	) is
begin
	if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') then
		select	nextval('w_jornada_pac_problema_seq')
		into STRICT	w_jornada_pac_problema_w
		;

		insert into w_jornada_pac_problema(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			NR_SEQ_PROBLEMA,
			NR_SEQ_REGISTRO)
		values (
			w_jornada_pac_problema_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_sequencia_p,
			w_jornada_pac_registro_w);

		commit;
	end if;
end;

procedure add_vector_final(	nr_seq_origem_p			number,
							nr_seq_item_pront_p 	number,
							cd_funcao_p				number,
							dt_registro_p			date,
							cd_doenca_p				varchar2,
							nr_atendimento_reg_p	number,
							ie_nivel_atencao_p		varchar2,
							ie_valor_normal_p		varchar2,
							ds_informacao_p			varchar,
							w_nm_tabela_p			varchar2,
							dt_inicial_registro_p 	date ,
							dt_final_registro_p 	date ,
							ie_escala_p 	number ,
							ie_grupo_inf_p VARCHAR2 ,
							ds_registro_p VARCHAR2 ,
              nr_seq_protocolo_pac_p number ,
              ie_atraso_p varchar2 ,
              ie_desconsiderar_atraso_p varchar2 ,
              ie_alta_p varchar2 ) is
begin
	nr_indice_w := nr_indice_w + 1;

  SELECT nextval('w_jornada_pac_registro_seq')
  INTO STRICT nr_seq_w_jornada_pac_registro
;

  vt_final_w[nr_indice_w].nr_sequencia := nr_seq_w_jornada_pac_registro;
  vt_final_w[nr_indice_w].dt_atualizacao := clock_timestamp();
  vt_final_w[nr_indice_w].nm_usuario := nm_usuario_p;
  vt_final_w[nr_indice_w].dt_atualizacao_nrec := clock_timestamp();
  vt_final_w[nr_indice_w].nm_usuario_nrec := nm_usuario_p;
	vt_final_w[nr_indice_w].dt_inicio := dt_inicial_registro_p;
	vt_final_w[nr_indice_w].dt_fim := dt_final_registro_p;
	vt_final_w[nr_indice_w].nr_seq_origem := nr_seq_origem_p;
	vt_final_w[nr_indice_w].nr_seq_item_pront := nr_seq_item_pront_p;
	vt_final_w[nr_indice_w].cd_funcao := cd_funcao_p;
	vt_final_w[nr_indice_w].dt_registro := dt_registro_p;
	vt_final_w[nr_indice_w].nr_seq_jornada_grupo := w_jornada_pac_grupo_w;
	vt_final_w[nr_indice_w].cd_doenca := cd_doenca_p;
	vt_final_w[nr_indice_w].nr_atendimento := nr_atendimento_reg_p;
	vt_final_w[nr_indice_w].nr_seq_jornada_subgrupo := w_jornada_pac_subgrupo_w;
	vt_final_w[nr_indice_w].ie_valor_normal := ie_valor_normal_p;
	vt_final_w[nr_indice_w].ie_nivel_atencao := ie_nivel_atencao_p;
	vt_final_w[nr_indice_w].ds_informacao := ds_informacao_p;
	vt_final_w[nr_indice_w].nm_tabela := w_nm_tabela_p;
	vt_final_w[nr_indice_w].ie_escala := ie_escala_p;
	-- vt_final_w(nr_indice_w).ie_situacao := NULL;

	-- vt_final_w(nr_indice_w).nr_seq_cpoe := NULL;
	vt_final_w[nr_indice_w].ie_grupo_inf := ie_grupo_inf_p;
	vt_final_w[nr_indice_w].ds_registro := ds_registro_p;
  vt_final_w[nr_indice_w].nr_seq_evento_protocolo := nr_seq_protocolo_pac_p;
  vt_final_w[nr_indice_w].ie_atraso := ie_atraso_p;
  vt_final_w[nr_indice_w].ie_desconsiderar_atraso := ie_desconsiderar_atraso_p;
  vt_final_w[nr_indice_w].ie_alta := ie_alta_p;

	if (w_jornada_pac_grupo_w <> w_jornada_pac_grupo_ww) then
		w_jornada_pac_grupo_ww := w_jornada_pac_grupo_w;
		update 	w_jornada_pac_grupo
		set		dt_ultima_geracao = clock_timestamp()
		where  	nr_sequencia = w_jornada_pac_grupo_w;
		commit;
	end if;
	/*if (nr_atendimento_reg_p is not null) then
		nr_atendimento_w := nr_atendimento_reg_p;
		for c64_w in C64 loop
			nr_indice_problema_w := nr_indice_problema_w + 1;
			vt_problema_final_w(nr_indice_problema_w).nr_seq_problema_w := c64_w.nr_sequencia;
			vt_problema_final_w(nr_indice_problema_w).nr_seq_grupo_w := w_jornada_pac_grupo_w;
			vt_problema_final_w(nr_indice_problema_w).nr_seq_origem_w := nr_seq_origem_p;
		end loop;
		for c65_w in C65 loop
			nr_indice_problema_w := nr_indice_problema_w + 1;
			vt_problema_final_w(nr_indice_problema_w).nr_seq_problema_w := c65_w.nr_sequencia;
			vt_problema_final_w(nr_indice_problema_w).nr_seq_grupo_w := w_jornada_pac_grupo_w;
			vt_problema_final_w(nr_indice_problema_w).nr_seq_origem_w := nr_seq_origem_p;
		end loop;
	end if;*/
end;

procedure adicionar_hint_evento(expressao_p number,
								valor_p varchar) is
begin
	nr_sequencia_evento_w := nr_sequencia_evento_w + 1;

	 v_informacao_final_w[nr_sequencia_evento_w].cd_expressao_campo_w := expressao_p;
   if (valor_p IS NOT NULL AND valor_p::text <> '') then
    v_informacao_final_w[nr_sequencia_evento_w].ds_campo_valor_w := valor_p;
   end if;

end;

----------------------------------------------------------------------------------------------------------Procedures-Final-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------Functions----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function montar_informacao_final
		return;
	for i in 1..v_informacao_final_w.count loop
		begin
			if (v_informacao_final_w[i](.ds_campo_valor_w IS NOT NULL AND .ds_campo_valor_w::text <> '')) then
				ds_expressao_func_w := substr(obter_desc_expressao(v_informacao_final_w[i].cd_expressao_campo_w),1,255);


				select	position(':' in ds_expressao_func_w)
				into STRICT	ie_contem_separador_w
				;

				if (ie_contem_separador_w = 0) then
					ds_expressao_func_w := ds_expressao_func_w || ':';
				end if;

				ds_informacao_final_w := substr(ds_informacao_final_w || ds_expressao_func_w || ' ' || v_informacao_final_w[i].ds_campo_valor_w || '<br>', 1, 2000);
			end if;
			v_informacao_final_w[i].ds_campo_valor_w := null;
			v_informacao_final_w[i].cd_expressao_campo_w := null;
			ie_contem_separador_w := null;
			ds_expressao_func_w := null;
		end;
	end loop;

	return;
end;

function exibir_prot_sem_liberacao
    return;
begin
    if pkg_i18n.get_user_locale in ('ja_JP') then
        exibe_prot_sem_liberacao := 'N';
    end if;

    return;
end;

function obter_desc_item_perfil(nr_item_pront_w number)
return;
begin
  select max(DS_ITEM_INSTITUICAO)
  into STRICT ds_item_instituicao_w
  from PERFIL_ITEM_PRONT
  where cd_perfil = WHEB_USUARIO_PCK.get_cd_perfil
    and nr_seq_item_pront = nr_item_pront_w;

  if (coalesce(ds_item_instituicao_w::text, '') = '') THEN
    select max(coalesce(a.DS_ITEM_INSTITUICAO, substr(obter_desc_expressao(a.CD_EXP_DESC_ITEM_HTML), 1, 250)))
    into STRICT ds_item_instituicao_w
    from prontuario_item a
    where nr_sequencia = nr_item_pront_w;
  end if;

  return;
end;
----------------------------------------------------------------------------------------------------------Functions-Final---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------Procedures que utilizam as functions------------------------------------------------------------------------------------------------------------------------------------------------------------------
procedure add_etapa_linha_cuidado(c67_w C67%rowtype) is
begin
v_informacao_final_w[1].cd_expressao_campo_w := 289624;--Etapa
v_informacao_final_w[1].ds_campo_valor_w := c67_w.ds_etapa;
v_informacao_final_w[2].cd_expressao_campo_w := 296293;--Previsto
v_informacao_final_w[2].ds_campo_valor_w := c67_w.periodo_previsto;
v_informacao_final_w[3].cd_expressao_campo_w := 289766;--Executado
v_informacao_final_w[3].ds_campo_valor_w := c67_w.periodo_executado;
v_informacao_final_w[4].cd_expressao_campo_w := 283915;--Atraso
v_informacao_final_w[4].ds_campo_valor_w := c67_w.nr_dias_atraso;

add_vector_final(
  nr_seq_origem_p => c67_w.nr_sequencia,
  nr_seq_item_pront_p => 1558,
  cd_funcao_p => 281,
  dt_registro_p => c67_w.dt_inicio,
  cd_doenca_p => NULL,
  nr_atendimento_reg_p => NULL,
  ie_nivel_atencao_p => NULL,
  ie_valor_normal_p => null,
  ds_informacao_p => montar_informacao_final(),
  w_nm_tabela_p => 'RXT_AGENDA_FASE',
  dt_inicial_registro_p => c67_w.dt_inicio,
  dt_final_registro_p => c67_w.dt_fim,
  ds_registro_p => c67_w.ds_etapa,
  nr_seq_protocolo_pac_p => c67_w.NR_SEQUENCIA_PROTOCOLO
  );
end;

procedure add_evento_linha_cuidado(c68_w C68%rowtype, ie_tipo varchar2) is

  ie_atraso_w varchar2(1) := 'N';
  nr_dias_atraso_w protocolo_int_pac_evento.nr_dias_atraso%TYPE;
  ds_dias_atraso_w varchar(50);

begin
  IF (coalesce(c68_w.dt_real::text, '') = '') THEN
    -- atraso sem data real, calculado na hora com base no dia de hoje
    nr_dias_atraso_w := (clock_timestamp() - c68_w.dt_inicial_etapa + 1) - c68_w.nr_dia_previsto;
    ds_dias_atraso_w := nr_dias_atraso_w || ' ' || obter_desc_expressao(1049791);
  ELSE
    -- atraso calculado com base na data real, quando salva o evento na PEP
    nr_dias_atraso_w := coalesce(c68_w.nr_dias_atraso, 0);
    ds_dias_atraso_w := nr_dias_atraso_w || ' ' || obter_desc_expressao(287752);
  END IF;

  if (ie_separar_eventos_atrasados_w = 'N' or
      (ie_separar_eventos_atrasados_w = 'S' and 
       ((ie_tipo = 'EA' and nr_dias_atraso_w > 0 and coalesce(c68_w.ie_desconsiderar_atraso, 'N') = 'N') or (ie_tipo = 'EV' and (nr_dias_atraso_w <= 0 or coalesce(c68_w.ie_desconsiderar_atraso, 'N') = 'S'))))     
  ) then
    
    if (c68_w.ie_evento_critico = 'S') then
      adicionar_hint_evento(expressao_p => 0, valor_p => substr(obter_desc_expressao(1032588),1,255)); -- Evento critico
    end if;
      adicionar_hint_evento(expressao_p => 289651, valor_p => c68_w.ds_evento_plano); -- Evento
    if (c68_w.ie_variacao = 'S') then
      adicionar_hint_evento(expressao_p => 301561, valor_p => c68_w.ds_variacao); --Variacao
    end if;
    /*adicionar_hint_evento(expressao_p => 308003, valor_p => c68_w.nr_dia_previsto); -- Dia previsto
    adicionar_hint_evento(expressao_p => 330796, valor_p => c68_w.nr_dia_real); -- Dia executado*/
    if (nr_dias_atraso_w > 0) then
      ie_atraso_w := 'S';
      if (coalesce(c68_w.ie_desconsiderar_atraso, 'N') <> 'S') then
         adicionar_hint_evento(expressao_p => 283915, valor_p => ds_dias_atraso_w); -- Atraso
      end if;
    end if;

    if (coalesce(c68_w.tipo_agendamento::text, '') = '') then
      adicionar_hint_evento(expressao_p => 299368, valor_p => c68_w.tipo_evento); -- Tipo
    else
      adicionar_hint_evento(expressao_p => 299368, valor_p => c68_w.tipo_evento || ' (' || c68_w.tipo_agendamento || ')'); -- Tipo    
    end if;

    if c68_w.ie_realizado_externamente = 'S' then
       adicionar_hint_evento(expressao_p => 1045523, valor_p => obter_desc_expressao(928855)); -- Realizado externamente SIM
    else
      adicionar_hint_evento(expressao_p => 1045523, valor_p => obter_desc_expressao(928857)); -- Realizado externamente NAO
    end if;
    adicionar_hint_evento(expressao_p => 297817, valor_p => c68_w.ds_resultado_evento); -- Resultado
    if (c68_w.ie_tipo_evento = 'NC') then

      select  max(ds_procedimento) ds
      into STRICT
        ds_intervencao_w
      from pe_procedimento
      where nr_sequencia = c68_w.nr_seq_intervencao;

      adicionar_hint_evento(expressao_p => 292220, valor_p => ds_intervencao_w); -- Intervencao
    end if;
    adicionar_hint_evento(expressao_p => 287126,
                valor_p =>	to_char(c68_w.dt_prevista, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)))); -- Intervencao
    adicionar_hint_evento(expressao_p => 287160,
                valor_p =>	to_char(c68_w.dt_real, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)))); -- Intervencao
    add_vector_final(
      nr_seq_origem_p => c68_w.nr_sequencia,
      nr_seq_item_pront_p => 1558,
      cd_funcao_p => 281,
      dt_registro_p => c68_w.dt_prevista,
      cd_doenca_p => NULL,
      nr_atendimento_reg_p => NULL,
      ie_nivel_atencao_p => NULL,
      ie_valor_normal_p => null,
      ds_informacao_p => montar_informacao_final() || '<p hidden>' || 'code:' || c68_w.ie_tipo_evento || '</p>',
      w_nm_tabela_p => 'PROTOCOLO_INT_PAC_EVENTO',
      ie_grupo_inf_p => c68_w.vl_dominio,
      nr_seq_protocolo_pac_p => c68_w.NR_SEQUENCIA_PROTOCOLO,
      ie_atraso_p => ie_atraso_w,
      ie_desconsiderar_atraso_p => c68_w.ie_desconsiderar_atraso
    );

  end if;
end;

procedure adicionar_linha_agendamentos(c02_w C02%rowtype) is
begin
  v_informacao_final_w[1].ds_campo_valor_w := to_char(c02_w.dt_agenda, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
  v_informacao_final_w[1].cd_expressao_campo_w := 327202; --Data
  v_informacao_final_w[2].ds_campo_valor_w := c02_w.ds_agenda;
  v_informacao_final_w[2].cd_expressao_campo_w := 313423;--Descricao
  v_informacao_final_w[3].ds_campo_valor_w := c02_w.ds_profissional;
  v_informacao_final_w[3].cd_expressao_campo_w := 728918;--Profissional
  v_informacao_final_w[4].ds_campo_valor_w := c02_w.ds_tipo;
  v_informacao_final_w[4].cd_expressao_campo_w := 330345;--Agenda
  add_vector_final(c02_w.cd_agenda, null, c02_w.cd_funcao, c02_w.dt_agenda, null, c02_w.nr_atendimento_reg, null, null, montar_informacao_final(), c02_w.nm_tabela);
end;
----------------------------------------------------------------------------------------------------------Procedures que utilizam as functions-Final------------------------------------------------------------------------------------------------------------------------------------------------------------------
begin

    nm_usuario_logado_w := wheb_usuario_pck.get_nm_usuario;
    exibe_prot_sem_liberacao_w := exibir_prot_sem_liberacao();
	dt_final_exec_w := ESTABLISHMENT_TIMEZONE_UTILS.ENDOFDAY(dt_final_p);
	delete_reg_futuro_pac();
	insert_jornada_pac();

	select	obter_sexo_pf(cd_pessoa_fisica_p, 'C')
	into STRICT	ie_sexo_pf_w
	;
	for c01_w in C01 loop
		begin
  IF (c01_w.ie_tipo_item = 'PI') THEN
-------------------------------------------------------------------------------------------------------------------Cursores que buscam as etapas e eventos dos Protocolos integrados do paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    select coalesce(max(IE_LINHA_SEPARADA), 'N'), coalesce(max(IE_SEPARAR_EVENTOS_ATRASADOS), 'N')
    into STRICT ie_linha_separada_w, ie_separar_eventos_atrasados_w
    from item_suep
    where nr_sequencia = c01_w.nr_sequencia;
    if (ie_linha_separada_w = 'N') then--------------------Todos os protocolos agrupados--------------------
      select count(*) qt, max(ds_tratamento)
      into STRICT qt_protoclos_int_pac_w, ds_prot_int_pac_w
      from protocolo_int_paciente
      where cd_pessoa_fisica = cd_pessoa_fisica_p;
      if (qt_protoclos_int_pac_w = 1) then
        insert_jornada_pac_grupo('PI', 950575, 'N', 'S', ds_prot_int_pac_w);--Protocolo integrado
      else
        insert_jornada_pac_grupo('PI', 950575, 'N', 'S');--Protocolo integrado
      end if;
      insert_jornada_pac_subgrupo(substr(obter_desc_expressao(289637),1,255), 'ET');--Etapas
      FOR c67_w IN C67 LOOP
        BEGIN
          add_etapa_linha_cuidado(c67_w);
        END;
      END LOOP;

      insert_jornada_pac_subgrupo(substr(obter_desc_expressao(289664),1,255), 'EV');--Eventos
      FOR c68_w IN C68 LOOP
        BEGIN
          add_evento_linha_cuidado(c68_w, 'EV');
        END;
      END LOOP;

      if (ie_separar_eventos_atrasados_w = 'S') then
        insert_jornada_pac_subgrupo(substr(obter_desc_expressao(1054888),1,255), 'EA');--Eventos atrasados
        FOR c68_w IN C68 LOOP
          BEGIN
            add_evento_linha_cuidado(c68_w, 'EA');
          END;
        END LOOP;
      end if;
    else --------------------Separados por protocolos--------------------
      FOR c69_w IN C69 LOOP
      BEGIN
        nr_seq_prot_int_pac_w := c69_w.nr_sequencia;
        ds_prot_int_pac_w := c69_w.ds_tratamento;

        insert_jornada_pac_grupo('PIS'||nr_indice_pi_separado_w, 950575, 'N', 'S', ds_prot_int_pac_w);--Protocolo integrado
        insert_jornada_pac_subgrupo(substr(obter_desc_expressao(289637),1,255), 'ET');--Etapas
        FOR c70_w IN C70 LOOP
        BEGIN
          add_etapa_linha_cuidado(c70_w);
        END;
        END LOOP;

        insert_jornada_pac_subgrupo(substr(obter_desc_expressao(289664),1,255), 'EV');--Eventos
        FOR c71_w IN C71 LOOP
        BEGIN
          add_evento_linha_cuidado(c71_w, 'EV');
        END;
        END LOOP;

        if (ie_separar_eventos_atrasados_w = 'S') then
          insert_jornada_pac_subgrupo(substr(obter_desc_expressao(1054888),1,255), 'EA');--Eventos atrasados
          FOR c71_w IN C71 LOOP
          BEGIN
            add_evento_linha_cuidado(c71_w, 'EA');
          END;
          END LOOP;
        end if;
        nr_indice_pi_separado_w := nr_indice_pi_separado_w + 1;
      END;
      END LOOP;
    end if;
		w_jornada_pac_subgrupo_w := null;
  elsif (c01_w.ie_tipo_item = 'PG') then

    insert_jornada_pac_grupo('PG', 296595, 'N', 'S');

    insert_jornada_pac_subgrupo(substr(obter_desc_expressao(305866),1,255), 'PR');--Protocolos
    for c72_w in c72 loop
      begin

        v_informacao_final_w[1].cd_expressao_campo_w := 330090;--Protocolo
        v_informacao_final_w[1].ds_campo_valor_w := c72_w.DS_NOME_PROTOCOLO;
        v_informacao_final_w[2].cd_expressao_campo_w := 292022;--Inicio previsto
        v_informacao_final_w[2].ds_campo_valor_w := to_char(c72_w.dt_prevista_inicio, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
        v_informacao_final_w[3].cd_expressao_campo_w := 290124;--Fim previsto
        v_informacao_final_w[3].ds_campo_valor_w := to_char(c72_w.dt_prevista_fim, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));

        add_vector_final(
          nr_seq_origem_p => c72_w.nr_sequencia,
          nr_seq_item_pront_p => null,
          cd_funcao_p => 355,--Mentor
          dt_registro_p => c72_w.dt_prevista_inicio,
          cd_doenca_p => NULL,
          nr_atendimento_reg_p => NULL,
          ie_nivel_atencao_p => NULL,
          ie_valor_normal_p => null,
          ds_informacao_p => montar_informacao_final(),
          w_nm_tabela_p => 'GQA_PROTOCOLO_PAC',
          dt_inicial_registro_p => c72_w.dt_prevista_inicio,
          dt_final_registro_p => c72_w.dt_prevista_fim,
          ds_registro_p => c72_w.DS_NOME_PROTOCOLO
        );
      end;
    end loop;

    insert_jornada_pac_subgrupo(substr(obter_desc_expressao(289637),1,255), 'ET');--Etapas
    for c73_w in c73 loop
      begin

        v_informacao_final_w[1].cd_expressao_campo_w := 289624;--Etapa
        v_informacao_final_w[1].ds_campo_valor_w := c73_w.DS_NOME_ETAPA;
        v_informacao_final_w[2].cd_expressao_campo_w := 292022;--Inicio previsto
        v_informacao_final_w[2].ds_campo_valor_w := to_char(c73_w.DT_PREVISTA_INICIO, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));

          add_vector_final(
            nr_seq_origem_p => c73_w.nr_sequencia,
            nr_seq_item_pront_p => null,
            cd_funcao_p => 355,--Mentor
            dt_registro_p => c73_w.dt_prevista_inicio,
            cd_doenca_p => NULL,
            nr_atendimento_reg_p => NULL,
            ie_nivel_atencao_p => NULL,
            ie_valor_normal_p => null,
            ds_informacao_p => montar_informacao_final(),
            w_nm_tabela_p => 'GQA_PROTOCOLO_ETAPA_PAC'
          );
      end;
    end loop;
    w_jornada_pac_subgrupo_w := null;
	ELSIF (c01_w.ie_tipo_item = 'AG') then
---------------------------------------------------------------------------------------------------------------- Cursor que busca os agendamentos do paciente----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    select coalesce(max(IE_AGENDA_SEPARADA), 'N')
    into STRICT ie_linha_separada_w
    from item_suep
    where nr_sequencia = c01_w.nr_sequencia;
    if (ie_linha_separada_w = 'N') then--------------------Todos os protocolos agrupados--------------------
      insert_jornada_pac_grupo('AG', 283246, 'N');--Agendamentos
      for c02_w in C02 loop
        begin
          adicionar_linha_agendamentos(C02_w);
        end;
      end loop;
    else

      insert_jornada_pac_grupo('AG', 283246, 'N', 'S');--Agendamentos
      insert_jornada_pac_subgrupo(substr(obter_desc_expressao(318908),1,255), 'SE');--Agenda de servico
      for c75_w in C75 loop
        begin
          adicionar_linha_agendamentos(c75_w);
        end;
      end loop;

      insert_jornada_pac_subgrupo(substr(obter_desc_expressao(308113),1,255), 'CO');--Agenda de consulta
      for c76_w in C76 loop
        begin
          adicionar_linha_agendamentos(c76_w);
        end;
      end loop;

      insert_jornada_pac_subgrupo(substr(obter_desc_expressao(317519),1,255), 'EX');--Agenda de exames
      for c77_w in C77 loop
        begin
          adicionar_linha_agendamentos(c77_w);
        end;
      end loop;

      insert_jornada_pac_subgrupo(substr(obter_desc_expressao(669669),1,255), 'CI');--Agenda Cirurgica
      for c78_w in C78 loop
        begin
          adicionar_linha_agendamentos(c78_w);
        end;
      end loop;

      insert_jornada_pac_subgrupo(substr(obter_desc_expressao(1038950),1,255), 'OA');--Outras agendas
      for c79_w in C79 loop
        begin
          adicionar_linha_agendamentos(c79_w);
        end;
      end loop;

    end if;
  elsif (c01_w.ie_tipo_item = 'AN') then
---------------------------------------------------------------------------------------------------------------- Cursor que busca os avaliacoes nutricionais do paciente----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo(
          ie_grupo_inf_p => 'AN',
          nr_grupo_informacao_p => 669697,
          ie_alteracao_cadastro_p	=> 'N',
          ds_tratamento_p => obter_desc_item_perfil(41)
        );--Avaliacao Nutricional
				for c03_w in C03 loop
					begin

						v_informacao_final_w[1].ds_campo_valor_w := to_char(c03_w.dt_avaliacao, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
						v_informacao_final_w[2].ds_campo_valor_w := c03_w.ds_profissional;
						v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
						v_informacao_final_w[3].ds_campo_valor_w := c03_w.ds_aval_nut;
						v_informacao_final_w[3].cd_expressao_campo_w := 287708;--Diagnostico nutricional
						add_vector_final( c03_w.nr_sequencia, c03_w.nr_seq_item_pront, c03_w.cd_funcao, c03_w.dt_avaliacao, null, c03_w.nr_atendimento_reg, null, null, montar_informacao_final(), c03_w.nm_tabela);
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'CD') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca os diagnosticos do paciente-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo(
          ie_grupo_inf_p => 'CD',
          nr_grupo_informacao_p => 827065,
          ie_alteracao_cadastro_p	=> 'N',
          ds_tratamento_p => obter_desc_item_perfil(1));--Diagnosticos
				for c04_w in C04 loop
					begin
						v_informacao_final_w[1].ds_campo_valor_w := to_char(c04_w.dt_diagnostico, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
						v_informacao_final_w[2].ds_campo_valor_w := c04_w.ds_profissional;
						v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
						v_informacao_final_w[3].ds_campo_valor_w := c04_w.ds_diagnostico;
						v_informacao_final_w[3].cd_expressao_campo_w := 614792;--Diagnostico
						add_vector_final( c04_w.nr_seq_interno, c04_w.nr_seq_item_pront, c04_w.cd_funcao, c04_w.dt_diagnostico, c04_w.cd_doenca, c04_w.nr_atendimento_reg, c04_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c04_w.nm_tabela);
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'CG') then
-------------------------------------------------------------------------------------------------------------------Cursor que busca as glicemias das prescricoes do paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo('CG', 290912, 'N');--Glicemia
				for c06_w in C06 loop
					begin
						v_informacao_final_w[1].ds_campo_valor_w := to_char(c06_w.dt_prescricao, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
						v_informacao_final_w[2].ds_campo_valor_w := c06_w.ds_profissional;
						v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
						v_informacao_final_w[3].ds_campo_valor_w := c06_w.nm_prot_glic;
						v_informacao_final_w[3].cd_expressao_campo_w := 328829;--Protocolo
						add_vector_final( c06_w.nr_seq_glicemia, null, c06_w.cd_funcao, c06_w.dt_prescricao, null, c06_w.nr_atendimento_reg, c06_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c06_w.nm_tabela);
					end;
				end loop;
				for c07_w in C07 loop
					begin
						v_informacao_final_w[1].ds_campo_valor_w := to_char(c07_w.dt_prescricao, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
						v_informacao_final_w[2].ds_campo_valor_w := c07_w.ds_profissional;
						v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
						v_informacao_final_w[3].ds_campo_valor_w := c07_w.nm_prot_glic;
						v_informacao_final_w[3].cd_expressao_campo_w := 328829;--Protocolo
						add_vector_final( c07_w.nr_seq_glicemia, null, c07_w.cd_funcao, c07_w.dt_prescricao, null, c07_w.nr_atendimento_reg, c07_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c07_w.nm_tabela);
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'DI') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca os dispositivos do paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo(
          ie_grupo_inf_p => 'DI',
          nr_grupo_informacao_p => 308070,
          ie_alteracao_cadastro_p	=> 'N',
          ds_tratamento_p => obter_desc_item_perfil(1214));--Dispositivos
				for c10_w in C10 loop
					begin
						v_informacao_final_w[1].ds_campo_valor_w := c10_w.ds_conteudo;
						v_informacao_final_w[1].cd_expressao_campo_w := 349604;--Dispositivo
						v_informacao_final_w[2].ds_campo_valor_w := to_char(c10_w.DT_INSTALACAO, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[2].cd_expressao_campo_w := 287008;--Data instalacao
						v_informacao_final_w[3].ds_campo_valor_w := to_char(c10_w.DT_RETIRADA, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[3].cd_expressao_campo_w := 287200;--Data retirada
						v_informacao_final_w[4].ds_campo_valor_w := c10_w.ds_profissional;
						v_informacao_final_w[4].cd_expressao_campo_w := 728918;--Profissional
						add_vector_final( c10_w.nr_sequencia, null, c10_w.cd_funcao, c10_w.DT_INSTALACAO, null, c10_w.nr_atendimento_reg, null, null, montar_informacao_final(), c10_w.nm_tabela, c10_w.DT_INSTALACAO, c10_w.DT_RETIRADA);
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'CP') then
-------------------------------------------------------------------------------------------------------------------Cursor que busca as CPOE do paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo('CP', 608679, 'N', 'S', obter_desc_item_perfil(1383));--CPOE
				for c08_w in C08 loop
					begin
						cd_subgrupo_w := to_char(c08_w.a);
						ds_subgrupo_w := c08_w.b;
						insert_jornada_pac_subgrupo(c08_w.b, cd_subgrupo_w);

						for c09_w in C09 loop
							begin
								nr_seq_reg_cpoe_w := c09_w.nr_seq_cpoe;

								qt_horarios_cpoe_w := 0;

								if (cd_subgrupo_w = 'ME' or cd_subgrupo_w = 'MA') then
									select 	count(*)
									into STRICT	qt_horarios_cpoe_w
									from	prescr_mat_hor b
									where  	b.nr_prescricao = c09_w.nr_prescricao
									and	 	b.nr_seq_material = c09_w.nr_sequencia
									and 	coalesce(b.dt_suspensao::text, '') = ''
									and 	coalesce(b.dt_fim_horario::text, '') = '';
								elsif (cd_subgrupo_w = 'RE') then
									select 	count(*)
									into STRICT	qt_horarios_cpoe_w
									from	prescr_rec_hor b
									where  	b.nr_prescricao = c09_w.nr_prescricao
									and	 	b.nr_seq_recomendacao = c09_w.nr_sequencia
									and 	coalesce(b.dt_suspensao::text, '') = ''
									and 	coalesce(b.dt_fim_horario::text, '') = '';
								elsif (cd_subgrupo_w = 'GA') then
									select 	count(*)
									into STRICT	qt_horarios_cpoe_w
									from	prescr_gasoterapia_hor b
									where  	b.nr_prescricao = c09_w.nr_prescricao
									and	 	b.nr_seq_gasoterapia = c09_w.nr_sequencia
									and 	coalesce(b.dt_suspensao::text, '') = ''
									and 	coalesce(b.dt_fim_horario::text, '') = '';
								elsif (cd_subgrupo_w = 'IT') then
									select 	count(*)
									into STRICT	qt_horarios_cpoe_w
									from	pe_prescr_proc_hor b
									where  	b.nr_seq_pe_prescr = c09_w.nr_prescricao
									and	 	b.nr_seq_pe_proc = c09_w.nr_sequencia
									and 	coalesce(b.dt_suspensao::text, '') = ''
									and 	coalesce(b.dt_fim_horario::text, '') = '';
								elsif (cd_subgrupo_w = 'DI') then
									select 	count(*)
									into STRICT	qt_horarios_cpoe_w
									from	prescr_solucao b,
											hd_prescricao_evento a
									where 	a.nr_seq_solucao  	= b.nr_seq_solucao
									and   	b.nr_prescricao = c09_w.nr_prescricao
									and   	b.nr_prescricao = a.nr_prescricao
									and	 	b.nr_seq_dialise = c09_w.nr_sequencia
									and 	coalesce(b.dt_suspensao::text, '') = ''
									and  	a.ie_evento not in ('T', 'SI');
								elsif (cd_subgrupo_w = 'HE') then
									select 	count(*)
									into STRICT	qt_horarios_cpoe_w
									from	prescr_proc_hor b
									where  	b.nr_prescricao = c09_w.nr_prescricao
									and	 	b.nr_seq_procedimento = c09_w.nr_sequencia
									and 	coalesce(b.dt_suspensao::text, '') = ''
									and 	coalesce(b.dt_fim_horario::text, '') = '';
								elsif (cd_subgrupo_w = 'PA' or cd_subgrupo_w = 'PR') then
									select 	count(*)
									into STRICT	qt_horarios_cpoe_w
									from	prescr_proc_hor b
									where  	b.nr_prescricao = c09_w.nr_prescricao
									and	 	b.nr_seq_procedimento = c09_w.nr_sequencia
									and 	coalesce(b.dt_suspensao::text, '') = ''
									and 	coalesce(b.dt_fim_horario::text, '') = '';
								elsif (c09_w.ie_tipo_reg = 'NM') then
									select 	count(*)
									into STRICT	qt_horarios_cpoe_w
									from	prescr_mat_hor b
									where  	b.nr_prescricao = c09_w.nr_prescricao
									and	 	b.nr_seq_material = c09_w.nr_sequencia
									and 	coalesce(b.dt_suspensao::text, '') = ''
									and 	coalesce(b.dt_fim_horario::text, '') = '';
								elsif (c09_w.ie_tipo_reg = 'NT') then
									select 	count(*)
									into STRICT	qt_horarios_cpoe_w
									from	prescr_dieta_hor b
									where  	b.nr_prescricao = c09_w.nr_prescricao
									and	 	b.NR_SEQ_DIETA = c09_w.nr_sequencia
									and 	coalesce(b.dt_suspensao::text, '') = ''
									and 	coalesce(b.dt_fim_horario::text, '') = '';
								elsif (c09_w.ie_tipo_reg = 'NR') then
									select	count(*)
									into STRICT	qt_horarios_cpoe_w
									from 	rep_jejum b
									where  	b.nr_prescricao = c09_w.nr_prescricao
									and	 	b.NR_SEQ_DIETA_CPOE = c09_w.nr_sequencia
									and 	b.IE_SUSPENSO <> 'S'
									and  	coalesce(b.DT_FIM::text, '') = '';
								end if;

								if (qt_horarios_cpoe_w > 0) then
									v_informacao_final_w[6].ds_campo_valor_w := substr(obter_desc_expressao(295406),1,255);
								else
									v_informacao_final_w[6].ds_campo_valor_w := substr(obter_desc_expressao(289766),1,255);
								end if;
								v_informacao_final_w[6].cd_expressao_campo_w := 326269;--Status
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c09_w.dt_prescricao, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c09_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								v_informacao_final_w[3].ds_campo_valor_w := c09_w.nr_prescricao;
								v_informacao_final_w[3].cd_expressao_campo_w := 325814;--Prescricao
								v_informacao_final_w[4].ds_campo_valor_w := ds_subgrupo_w;
								v_informacao_final_w[4].cd_expressao_campo_w := 330233;--Grupo
								v_informacao_final_w[5].ds_campo_valor_w := c09_w.ds_conteudo;
								v_informacao_final_w[5].cd_expressao_campo_w := 606383;--Item
								add_vector_final( c09_w.nr_prescricao, null, c09_w.cd_funcao, c09_w.dt_prescricao, null, c09_w.nr_atendimento_reg, c09_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c09_w.nm_tabela);

								/*select	count(*)
								into	qt_problema_cpoe_w
								from 	prescr_item_sintoma
								where	NR_PRESCRICAO = c09_w.nr_prescricao;
								if (qt_problema_cpoe_w > 0) then
									nr_seq_presc_cpoe_w := c09_w.nr_prescricao;for c53_w in C53 loop
										begin
											insert_jornada_pac_problema(c53_w.nr_seq_problema);
										end;
									end loop;
								end if;*/
							end;
						end loop;
					end;
				end loop;
				w_jornada_pac_subgrupo_w := null;
			elsif (c01_w.ie_tipo_item = 'EI') then
-------------------------------------------------------------------------------------------------------------------Cursor que busca as escalas e indices do paciente---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo('EI', 314487, 'N', 'S', obter_desc_item_perfil(374));--Escalas e indices
				for c11_w in C11 loop
					begin
						cd_subgrupo_w := to_char(c11_w.cd);
						ds_subgrupo_w := c11_w.ds;
						insert_jornada_pac_subgrupo(c11_w.ds, cd_subgrupo_w);

						if (cd_subgrupo_w = '257') then --APACHE II
							for c12_w in C12 loop
							begin
								nr_seq_tab_escala_w := 39547;
								nr_seq_dbpanel_escala_w := 39550;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c12_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c12_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								add_vector_final( c12_w.nr_sequencia, c12_w.nr_seq_item_pront, c12_w.cd_funcao, c12_w.dt_registro, null, c12_w.nr_atendimento_reg, c12_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c12_w.nm_tabela, null, null, c12_w.ie_escala);
							end;
							end loop;
						elsif (cd_subgrupo_w = '318') then -- Barthel
							for c13_w in C13 loop
							begin
								nr_seq_tab_escala_w := 39667;
								nr_seq_dbpanel_escala_w := 39670;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c13_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c13_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								v_informacao_final_w[3].ds_campo_valor_w := substr(c13_w.qt_ponto || ' - ' || c13_w.ds_ponto,1 ,255);
								v_informacao_final_w[3].cd_expressao_campo_w := 287493;--Descricao
								add_vector_final( c13_w.nr_sequencia, c13_w.nr_seq_item_pront, c13_w.cd_funcao, c13_w.dt_registro, null, c13_w.nr_atendimento_reg, c13_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c13_w.nm_tabela, null, null, c13_w.ie_escala);
							end;
							end loop;
						elsif (cd_subgrupo_w = '326') then -- Bishop
							for c14_w in C14 loop
							begin
								nr_seq_tab_escala_w := 1037115;
								nr_seq_dbpanel_escala_w := 1037118;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c14_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c14_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								v_informacao_final_w[3].ds_campo_valor_w := substr(c14_w.qt_ponto || ' - ' || c14_w.ds_ponto,1 ,255);
								v_informacao_final_w[3].cd_expressao_campo_w := 287493;--Descricao
								add_vector_final( c14_w.nr_sequencia, c14_w.nr_seq_item_pront, c14_w.cd_funcao, c14_w.dt_registro, null, c14_w.nr_atendimento_reg, c14_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c14_w.nm_tabela, null, null, c14_w.ie_escala);
							end;
							end loop;
						elsif (cd_subgrupo_w = '327') then -- Caprini Score
							for c15_w in C15 loop
							begin
								nr_seq_tab_escala_w := 1037467;
								nr_seq_dbpanel_escala_w := 1037470;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c15_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c15_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								v_informacao_final_w[3].ds_campo_valor_w := substr(c15_w.qt_ponto || ' - ' || c15_w.ds_ponto,1 ,255);
								v_informacao_final_w[3].cd_expressao_campo_w := 287493;--Descricao
								add_vector_final( c15_w.nr_sequencia, c15_w.nr_seq_item_pront, c15_w.cd_funcao, c15_w.dt_registro, null, c15_w.nr_atendimento_reg, c15_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c15_w.nm_tabela, null, null, c15_w.ie_escala);
							end;
							end loop;
						elsif (cd_subgrupo_w = '323') then -- Child Pigh
							for c16_w in C16 loop
							begin
								nr_seq_tab_escala_w := 39714;
								nr_seq_dbpanel_escala_w := 39717;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c16_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c16_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								v_informacao_final_w[3].ds_campo_valor_w := substr(c16_w.qt_ponto || ' - ' || c16_w.ds_ponto,1 ,255);
								v_informacao_final_w[3].cd_expressao_campo_w := 287493;--Descricao
								add_vector_final( c16_w.nr_sequencia, c16_w.nr_seq_item_pront, c16_w.cd_funcao, c16_w.dt_registro, null, c16_w.nr_atendimento_reg, c16_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c16_w.nm_tabela, null, null, c16_w.ie_escala);
							end;
							end loop;
						elsif (cd_subgrupo_w = '330') then -- ECOG
							for c17_w in C17 loop
							begin
								nr_seq_tab_escala_w := 39706;
								nr_seq_dbpanel_escala_w := 39709;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c17_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c17_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								v_informacao_final_w[3].ds_campo_valor_w := c17_w.ds_ponto;
								v_informacao_final_w[3].cd_expressao_campo_w := 287493;--Descricao
								add_vector_final( c17_w.nr_sequencia, c17_w.nr_seq_item_pront, c17_w.cd_funcao, c17_w.dt_registro, null, c17_w.nr_atendimento_reg, c17_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c17_w.nm_tabela, null, null, c17_w.ie_escala);
							end;
							end loop;
						elsif (cd_subgrupo_w = '329') then -- APGAR
							for c18_w in C18 loop
							begin
								nr_seq_tab_escala_w := 39770;
								nr_seq_dbpanel_escala_w := 39773;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c18_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c18_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								v_informacao_final_w[3].ds_campo_valor_w := c18_w.qt_ponto;
								v_informacao_final_w[3].cd_expressao_campo_w := 287493;--Descricao
								add_vector_final( c18_w.nr_sequencia, c18_w.nr_seq_item_pront, c18_w.cd_funcao, c18_w.dt_registro, null, c18_w.nr_atendimento_reg, c18_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c18_w.nm_tabela, null, null, c18_w.ie_escala);
							end;
							end loop;
						elsif (cd_subgrupo_w = '325') then -- FOREST
							for c19_w in C19 loop
							begin
								nr_seq_tab_escala_w := 1036002;
								nr_seq_dbpanel_escala_w := 1036007;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c19_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c19_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								v_informacao_final_w[3].ds_campo_valor_w := c19_w.ds_ponto;
								v_informacao_final_w[3].cd_expressao_campo_w := 287493;--Descricao
								add_vector_final( c19_w.nr_sequencia, c19_w.nr_seq_item_pront, c19_w.cd_funcao, c19_w.dt_registro, null, c19_w.nr_atendimento_reg, c19_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c19_w.nm_tabela, null, null, c19_w.ie_escala);
							end;
							end loop;
						elsif (cd_subgrupo_w = '324') then -- GOLD
							for c20_w in C20 loop
							begin
								nr_seq_tab_escala_w := 1036295;
								nr_seq_dbpanel_escala_w := 1036298;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c20_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c20_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								v_informacao_final_w[3].ds_campo_valor_w := c20_w.ds_ponto;
								v_informacao_final_w[3].cd_expressao_campo_w := 287493;--Descricao
								add_vector_final( c20_w.nr_sequencia, c20_w.nr_seq_item_pront, c20_w.cd_funcao, c20_w.dt_registro, null, c20_w.nr_atendimento_reg, c20_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c20_w.nm_tabela, null, null, c20_w.ie_escala);
							end;
							end loop;
						elsif (cd_subgrupo_w = '320') then -- Helios
							for c21_w in C21 loop
							begin
								nr_seq_tab_escala_w := 1037212;
								nr_seq_dbpanel_escala_w := 1037217;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c21_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c21_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								v_informacao_final_w[3].ds_campo_valor_w := substr(c21_w.qt_ponto || ' - ' || c21_w.ds_ponto,1 ,255);
								v_informacao_final_w[3].cd_expressao_campo_w := 287493;--Descricao
								add_vector_final( c21_w.nr_sequencia, c21_w.nr_seq_item_pront, c21_w.cd_funcao, c21_w.dt_registro, null, c21_w.nr_atendimento_reg, c21_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c21_w.nm_tabela, null, null, c21_w.ie_escala);
							end;
							end loop;
						elsif (cd_subgrupo_w = '331') then -- Karnofsky
							for c22_w in C22 loop
							begin
								nr_seq_tab_escala_w := 39691;
								nr_seq_dbpanel_escala_w := 39694;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c22_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c22_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								v_informacao_final_w[3].ds_campo_valor_w := substr(c22_w.qt_ponto || ' - ' || c22_w.ds_ponto,1 ,255);
								v_informacao_final_w[3].cd_expressao_campo_w := 287493;--Descricao
								add_vector_final( c22_w.nr_sequencia, c22_w.nr_seq_item_pront, c22_w.cd_funcao, c22_w.dt_registro, null, c22_w.nr_atendimento_reg, c22_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c22_w.nm_tabela, null, null, c22_w.ie_escala);
							end;
							end loop;
						elsif (cd_subgrupo_w = '319') then -- Maddrey
							for c58_w in C58 loop
							begin
								nr_seq_tab_escala_w := 1036755;
								nr_seq_dbpanel_escala_w := 1036994;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c58_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c58_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								v_informacao_final_w[3].ds_campo_valor_w := c58_w.qt_ponto;
								v_informacao_final_w[3].cd_expressao_campo_w := 287493;--Descricao
								add_vector_final( c58_w.nr_sequencia, c58_w.nr_seq_item_pront, c58_w.cd_funcao, c58_w.dt_registro, null, c58_w.nr_atendimento_reg, c58_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c58_w.nm_tabela, null, null, c58_w.ie_escala);
							end;
							end loop;
						elsif (cd_subgrupo_w = '322') then -- NRS
							for c23_w in C23 loop
							begin
								nr_seq_tab_escala_w := 39734;
								nr_seq_dbpanel_escala_w := 39737;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c23_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c23_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								v_informacao_final_w[3].ds_campo_valor_w := substr(c23_w.qt_ponto || ' - ' || c23_w.ds_ponto,1 ,255);
								v_informacao_final_w[3].cd_expressao_campo_w := 287493;--Descricao
								add_vector_final( c23_w.nr_sequencia, c23_w.nr_seq_item_pront, c23_w.cd_funcao, c23_w.dt_registro, null, c23_w.nr_atendimento_reg, c23_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c23_w.nm_tabela, null, null, c23_w.ie_escala);
							end;
							end loop;
						elsif (cd_subgrupo_w = '260') then -- Puls
							for c24_w in C24 loop
							begin
								nr_seq_tab_escala_w := 1037480;
								nr_seq_dbpanel_escala_w := 1037483;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c24_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c24_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								v_informacao_final_w[3].ds_campo_valor_w := c24_w.ds_ponto;
								v_informacao_final_w[3].cd_expressao_campo_w := 287493;--Descricao
								add_vector_final( c24_w.nr_sequencia, c24_w.nr_seq_item_pront, c24_w.cd_funcao, c24_w.dt_registro, null, c24_w.nr_atendimento_reg, c24_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c24_w.nm_tabela, null, null, c24_w.ie_escala);
							end;
							end loop;
						elsif (cd_subgrupo_w = '321') then -- Tiss-10
							for c25_w in C25 loop
							begin
								nr_seq_tab_escala_w := 1037379;
								nr_seq_dbpanel_escala_w := 1037412;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c25_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c25_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								v_informacao_final_w[3].ds_campo_valor_w := c25_w.qt_ponto;
								v_informacao_final_w[3].cd_expressao_campo_w := 287493;--Descricao
								add_vector_final( c25_w.nr_sequencia, c25_w.nr_seq_item_pront, c25_w.cd_funcao, c25_w.dt_registro, null, c25_w.nr_atendimento_reg, c25_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c25_w.nm_tabela, null, null, c25_w.ie_escala);
							end;
							end loop;
						elsif (cd_subgrupo_w = '256') then -- Braden
							for c54_w in C54 loop
							begin
								nr_seq_tab_escala_w := 39539;
								nr_seq_dbpanel_escala_w := 39542;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c54_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c54_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								v_informacao_final_w[3].ds_campo_valor_w := substr(c54_w.qt_ponto || ' - ' || c54_w.ds_ponto,1 ,255);
								v_informacao_final_w[3].cd_expressao_campo_w := 287493;--Descricao
								add_vector_final( c54_w.nr_sequencia, c54_w.nr_seq_item_pront, c54_w.cd_funcao, c54_w.dt_registro, null, c54_w.nr_atendimento_reg, c54_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c54_w.nm_tabela, null, null, c54_w.ie_escala);
							end;
							end loop;
						elsif (cd_subgrupo_w = '317') then --Charlson
							for c55_w in C55 loop
							begin
								nr_seq_tab_escala_w := 39977;
								nr_seq_dbpanel_escala_w := 39980;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c55_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c55_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								v_informacao_final_w[3].ds_campo_valor_w := c55_w.qt_ponto;
								v_informacao_final_w[3].cd_expressao_campo_w := 287493;--Descricao
								add_vector_final( c55_w.nr_sequencia, c55_w.nr_seq_item_pront, c55_w.cd_funcao, c55_w.dt_registro, null, c55_w.nr_atendimento_reg, c55_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c55_w.nm_tabela, null, null, c55_w.ie_escala);
							end;
							end loop;
						elsif (cd_subgrupo_w = '258') then -- Downton
							for c56_w in C56 loop
							begin
								nr_seq_tab_escala_w := 39985;
								nr_seq_dbpanel_escala_w := 39988;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c56_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c56_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								v_informacao_final_w[3].ds_campo_valor_w := substr(c56_w.qt_ponto || ' - ' || c56_w.ds_ponto,1 ,255);
								v_informacao_final_w[3].cd_expressao_campo_w := 287493;--Descricao
								add_vector_final( c56_w.nr_sequencia, c56_w.nr_seq_item_pront, c56_w.cd_funcao, c56_w.dt_registro, null, c56_w.nr_atendimento_reg, c56_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c56_w.nm_tabela, null, null, c56_w.ie_escala);
							end;
							end loop;
						elsif (cd_subgrupo_w = '22') then -- Glasgow
							for c57_w in C57 loop
							begin
								nr_seq_tab_escala_w := 39535;
								nr_seq_dbpanel_escala_w := 39538;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c57_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c57_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								v_informacao_final_w[3].ds_campo_valor_w := substr(c57_w.qt_ponto || ' - ' || c57_w.ds_ponto,1 ,255);
								v_informacao_final_w[3].cd_expressao_campo_w := 287493;--Descricao
								add_vector_final( c57_w.nr_sequencia, c57_w.nr_seq_item_pront, c57_w.cd_funcao, c57_w.dt_registro, null, c57_w.nr_atendimento_reg, c57_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c57_w.nm_tabela, null, null, c57_w.ie_escala);
							end;
							end loop;
						elsif (cd_subgrupo_w = '333') then -- NYHA
							for c59_w in C59 loop
							begin
								nr_seq_tab_escala_w := 1037031;
								nr_seq_dbpanel_escala_w := 1037035;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c59_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c59_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								add_vector_final( c59_w.nr_sequencia, c59_w.nr_seq_item_pront, c59_w.cd_funcao, c59_w.dt_registro, null, c59_w.nr_atendimento_reg, c59_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c59_w.nm_tabela, null, null, c59_w.ie_escala);
							end;
							end loop;
						elsif (cd_subgrupo_w = '261') then -- PPS
							for c60_w in C60 loop
							begin
								nr_seq_tab_escala_w := 39913;
								nr_seq_dbpanel_escala_w := 39916;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c60_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c60_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								v_informacao_final_w[3].ds_campo_valor_w := c60_w.ds_ponto;
								v_informacao_final_w[3].cd_expressao_campo_w := 287493;--Descricao
								add_vector_final( c60_w.nr_sequencia, c60_w.nr_seq_item_pront, c60_w.cd_funcao, c60_w.dt_registro, null, c60_w.nr_atendimento_reg, c60_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c60_w.nm_tabela, null, null, c60_w.ie_escala);
							end;
							end loop;
						elsif (cd_subgrupo_w = '255') then -- SOFA
							for c61_w in C61 loop
							begin
								nr_seq_tab_escala_w := 39607;
								nr_seq_dbpanel_escala_w := 39610;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c61_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c61_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								v_informacao_final_w[3].ds_campo_valor_w := c61_w.qt_ponto;
								v_informacao_final_w[3].cd_expressao_campo_w := 287493;--Descricao
								add_vector_final( c61_w.nr_sequencia, c61_w.nr_seq_item_pront, c61_w.cd_funcao, c61_w.dt_registro, null, c61_w.nr_atendimento_reg, c61_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c61_w.nm_tabela, null, null, c61_w.ie_escala);
							end;
							end loop;
						elsif (cd_subgrupo_w = '259') then -- TISS - 28
							for c62_w in C62 loop
							begin
								nr_seq_tab_escala_w := 39583;
								nr_seq_dbpanel_escala_w := 39586;
								v_informacao_final_w[1].ds_campo_valor_w := to_char(c62_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
								v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
								v_informacao_final_w[2].ds_campo_valor_w := c62_w.ds_profissional;
								v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
								v_informacao_final_w[3].ds_campo_valor_w := substr(c62_w.qt_ponto || ' - ' || c62_w.ds_ponto,1 ,255);
								v_informacao_final_w[3].cd_expressao_campo_w := 287493;--Descricao
								add_vector_final( c62_w.nr_sequencia, c62_w.nr_seq_item_pront, c62_w.cd_funcao, c62_w.dt_registro, null, c62_w.nr_atendimento_reg, c62_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c62_w.nm_tabela, null, null, c62_w.ie_escala);
							end;
							end loop;
						end if;

						if (nr_seq_tab_escala_w IS NOT NULL AND nr_seq_tab_escala_w::text <> '' AND nr_seq_dbpanel_escala_w IS NOT NULL AND nr_seq_dbpanel_escala_w::text <> '') then
							update	w_jornada_pac_subgrupo
							set		NR_SEQ_COD_TAB = nr_seq_tab_escala_w,
									NR_SEQ_COD_TELA = nr_seq_dbpanel_escala_w
							where 	nr_sequencia = w_jornada_pac_subgrupo_w;

							commit;
						end if;
					end;
				end loop;
				w_jornada_pac_subgrupo_w := null;
			elsif (c01_w.ie_tipo_item = 'CM') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca as castas medicas do paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				for c63_w in C63 loop
					begin
						delete
						from	w_jornada_pac_problema
						where	nr_seq_registro = c63_w.nr_sequencia;
						commit;

						delete
						from	w_jornada_pac_registro
						where	nr_sequencia = c63_w.nr_sequencia;
						commit;
					end;
				end loop;


				insert_jornada_pac_grupo(
          ie_grupo_inf_p => 'CM',
          nr_grupo_informacao_p => 786670,
          ie_alteracao_cadastro_p	=> 'N',
          ds_tratamento_p => obter_desc_item_perfil(1525));--Carta Medica
				for c26_w in C26 loop
					begin
						if (coalesce(c26_w.DT_LIBERACAO::text, '') = '' and c26_w.IE_REVISAO <> 'S') then
							ds_status_w := substr(obter_desc_expressao(802158),1,255);--Em execucao
						elsif (c26_w.IE_REVISAO = 'S') then
							ds_status_w := substr(obter_desc_expressao(294047),1,255);
						elsif (c26_w.IE_MENSAGEM = 'S') then
							ds_status_w := substr(obter_desc_expressao(787147),1,255);
						elsif (c26_w.DT_LIBERACAO IS NOT NULL AND c26_w.DT_LIBERACAO::text <> '') then
							ds_status_w := substr(obter_desc_expressao(774769),1,255);
						end if;

						v_informacao_final_w[1].ds_campo_valor_w := to_char(c26_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
						v_informacao_final_w[2].ds_campo_valor_w := ds_status_w;
						v_informacao_final_w[2].cd_expressao_campo_w := 326269;--Status
						add_vector_final( c26_w.nr_sequencia, c26_w.nr_seq_item_pront, c26_w.cd_funcao, c26_w.dt_registro, null, c26_w.nr_atendimento_reg, null, null, montar_informacao_final(), c26_w.nm_tabela);
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'EX') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca exames laboratoriais  do paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo(
          ie_grupo_inf_p => 'EX',
          nr_grupo_informacao_p => 289710,
          ie_alteracao_cadastro_p	=> 'N',
          ds_tratamento_p => obter_desc_item_perfil(2));--Exames Laboratoriais
				for c27_w in C27 loop
					begin
						v_informacao_final_w[1].ds_campo_valor_w := to_char(c27_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
						v_informacao_final_w[2].ds_campo_valor_w := c27_w.ds_profissional;
						v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
						v_informacao_final_w[3].ds_campo_valor_w := c27_w.ds_exame;
						v_informacao_final_w[3].cd_expressao_campo_w := 621805;--Exame
						add_vector_final( c27_w.nr_sequencia, c27_w.nr_seq_item_pront, c27_w.cd_funcao, c27_w.dt_registro, null, c27_w.nr_atendimento_reg, c27_w.IE_NIVEL_ATENCAO, c27_w.ie_valor_normal, montar_informacao_final(), c27_w.nm_tabela);
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'EN') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca exames nao laboratoriais  do paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo(
          ie_grupo_inf_p => 'EN',
          nr_grupo_informacao_p => 289737,
          ie_alteracao_cadastro_p	=> 'N',
          ds_tratamento_p => obter_desc_item_perfil(3));--Exames Nao Laboratoriais
				for c28_w in C28 loop
					begin
						v_informacao_final_w[1].ds_campo_valor_w := to_char(c28_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
						v_informacao_final_w[2].ds_campo_valor_w := c28_w.ds_profissional;
						v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
						v_informacao_final_w[3].ds_campo_valor_w := c28_w.ds_procedimento;
						v_informacao_final_w[3].cd_expressao_campo_w := 296423;--Procedimento
						add_vector_final( c28_w.nr_sequencia, c28_w.nr_seq_item_pront, c28_w.cd_funcao, c28_w.dt_registro, null, c28_w.nr_atendimento_reg, c28_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c28_w.nm_tabela);
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'ET') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca os eventos  do paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo(
          ie_grupo_inf_p => 'ET',
          nr_grupo_informacao_p => 849599,
          ie_alteracao_cadastro_p	=> 'N',
          ds_tratamento_p => obter_desc_item_perfil(273));--Eventos
				for c29_w in C29 loop
					begin
						v_informacao_final_w[1].ds_campo_valor_w := to_char(c29_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
						v_informacao_final_w[2].ds_campo_valor_w := c29_w.ds_profissional;
						v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
						v_informacao_final_w[3].ds_campo_valor_w := substr(c29_w.ds_evento, 1, 1800);
						v_informacao_final_w[3].cd_expressao_campo_w := 313423;--Evento
						add_vector_final( c29_w.nr_sequencia, c29_w.nr_seq_item_pront, c29_w.cd_funcao, c29_w.dt_registro, null, c29_w.nr_atendimento_reg, null, null, montar_informacao_final(), c29_w.nm_tabela);
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'CO') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca os consultas oftalmologicas  do paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo('CO', 823277, 'N');--Consulta Oftalmologica
				for c31_w in C31 loop
					begin
						Select	max(ds_tipo_consulta)
						into STRICT	ds_tipo_consulta_w
						from 	OFT_TIPO_CONSULTA
						where 	nr_sequencia = c31_w.NR_SEQ_TIPO_CONSULTA;

						v_informacao_final_w[1].ds_campo_valor_w := to_char(c31_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
						v_informacao_final_w[2].ds_campo_valor_w := ds_tipo_consulta_w;
						v_informacao_final_w[2].cd_expressao_campo_w := 653057;--Tipo Consulta
						add_vector_final( c31_w.nr_sequencia, c31_w.nr_seq_item_pront, c31_w.cd_funcao, c31_w.dt_registro, null, c31_w.nr_atendimento_reg, null, null, montar_informacao_final(), c31_w.nm_tabela);
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'LI') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca os problemas  do paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo('LI', 656354, 'N', 'C', obter_desc_item_perfil(1498));--Lista de Problema
				for c32_w in C32 loop
					begin
						v_informacao_final_w[1].ds_campo_valor_w := to_char(c32_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
						v_informacao_final_w[2].ds_campo_valor_w := c32_w.ds_profissional;
						v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
						v_informacao_final_w[3].ds_campo_valor_w := substr(c32_w.ds_problema, 1, 1800);
						v_informacao_final_w[3].cd_expressao_campo_w := 287493;--Descricao
						v_informacao_final_w[4].ds_campo_valor_w := to_char(c32_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[4].cd_expressao_campo_w := 621386;--Data Inicio
						v_informacao_final_w[5].ds_campo_valor_w := to_char(c32_w.dt_registro_fim, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[5].cd_expressao_campo_w := 342820;--Data Final
						v_informacao_final_w[6].ds_campo_valor_w := c32_w.ds_status;
						v_informacao_final_w[6].cd_expressao_campo_w := 326269;--Status
						add_vector_final( c32_w.nr_sequencia, c32_w.nr_seq_item_pront, c32_w.cd_funcao, c32_w.dt_registro, null, c32_w.nr_atendimento_reg, c32_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c32_w.nm_tabela, c32_w.dt_registro, c32_w.dt_registro_fim);
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'LR') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca os locos regionais do paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo(
          ie_grupo_inf_p => 'LR',
          nr_grupo_informacao_p => 292751,
          ie_alteracao_cadastro_p	=> 'N',
          ds_tratamento_p => obter_desc_item_perfil(390));--Loco Regional
				for c33_w in C33 loop
					begin
						v_informacao_final_w[1].ds_campo_valor_w := to_char(c33_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
						v_informacao_final_w[2].ds_campo_valor_w := c33_w.ds_profissional;
						v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
						v_informacao_final_w[3].ds_campo_valor_w := substr(c33_w.ds_cid, 1, 1800);
						v_informacao_final_w[3].cd_expressao_campo_w := 515514;--CID
						v_informacao_final_w[4].ds_campo_valor_w := c33_w.T;
						v_informacao_final_w[4].cd_expressao_campo_w := 309167;--T
						v_informacao_final_w[5].ds_campo_valor_w := c33_w.N;
						v_informacao_final_w[5].cd_expressao_campo_w := 311130;--N
						v_informacao_final_w[6].ds_campo_valor_w := c33_w.M;
						v_informacao_final_w[6].cd_expressao_campo_w := 311131;--M
						v_informacao_final_w[7].ds_campo_valor_w := c33_w.pT;
						v_informacao_final_w[7].cd_expressao_campo_w := 651662;--pT
						v_informacao_final_w[8].ds_campo_valor_w := c33_w.pN;
						v_informacao_final_w[8].cd_expressao_campo_w := 651663;--pN
						v_informacao_final_w[9].ds_campo_valor_w := c33_w.pM;
						v_informacao_final_w[9].cd_expressao_campo_w := 651665;--pM
						add_vector_final( c33_w.nr_sequencia, c33_w.nr_seq_item_pront, c33_w.cd_funcao, c33_w.dt_registro, null, c33_w.nr_atendimento_reg, null, null, montar_informacao_final(), c33_w.nm_tabela);
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'FC') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca os feridas do paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo(
          ie_grupo_inf_p => 'FC',
          nr_grupo_informacao_p => 554552,
          ie_alteracao_cadastro_p	=> 'N',
          ds_tratamento_p => obter_desc_item_perfil(53));--Feridas e curativos
				for c34_w in C34 loop
					begin
						v_informacao_final_w[1].ds_campo_valor_w := to_char(c34_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
						v_informacao_final_w[2].ds_campo_valor_w := c34_w.ds_tipo_ferida;
						v_informacao_final_w[2].cd_expressao_campo_w := 734610;--Tipo de ferida
						v_informacao_final_w[3].ds_campo_valor_w := substr(c34_w.ds_localizacao, 1, 1800);
						v_informacao_final_w[3].cd_expressao_campo_w := 332091;--Localizacao da ferida
						add_vector_final( c34_w.nr_sequencia, c34_w.nr_seq_item_pront, c34_w.cd_funcao, c34_w.dt_registro, null, c34_w.nr_atendimento_reg, null, null, montar_informacao_final(), c34_w.nm_tabela);
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'CI') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca as cirurgias do paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo(
          ie_grupo_inf_p => 'CI',
          nr_grupo_informacao_p => 689750,
          ie_alteracao_cadastro_p	=> 'N',
          ds_tratamento_p => obter_desc_item_perfil(6));--Cirurgias
				for c35_w in C35 loop
					begin
						v_informacao_final_w[1].ds_campo_valor_w := to_char(c35_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
						v_informacao_final_w[2].ds_campo_valor_w := c35_w.ds_procedimento;
						v_informacao_final_w[2].cd_expressao_campo_w := 296423;--Procedimento
						add_vector_final( c35_w.nr_sequencia, c35_w.nr_seq_item_pront, c35_w.cd_funcao, c35_w.dt_registro, null, c35_w.nr_atendimento_reg, c35_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c35_w.nm_tabela);
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'AT') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca os atebdimentos do paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        insert_jornada_pac_grupo('AT', 302642, 'N', 'S', obter_desc_item_perfil(8));--Atendimentos
        for c74_w in C74 loop--Dominio Tipos de atendimentos
          begin
            ie_tipo_atendimento_w := c74_w.vl_dominio;

            select coalesce(max('S'), 'N')
            into STRICT ie_possui_atendimentos_w
            from atendimento_paciente
            where cd_pessoa_fisica = cd_pessoa_fisica_p
              and ie_tipo_atendimento = ie_tipo_atendimento_w;

            if (ie_possui_atendimentos_w = 'S') then
              insert_jornada_pac_subgrupo(c74_w.ds_dominio, ie_tipo_atendimento_w);
              for c36_w in C36 loop
                begin
                  v_informacao_final_w[1].ds_campo_valor_w := to_char(c36_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
                  v_informacao_final_w[1].cd_expressao_campo_w := 326146;--Data Entrada
                  v_informacao_final_w[2].ds_campo_valor_w := to_char(c36_w.dt_alta, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
                  v_informacao_final_w[2].cd_expressao_campo_w := 513293;--Data Saida
                  v_informacao_final_w[3].ds_campo_valor_w := c36_w.ds_tipo_atendimento;
                  v_informacao_final_w[3].cd_expressao_campo_w := 614154;--Procedimento
                  v_informacao_final_w[4].ds_campo_valor_w := c36_w.nr_atendimento_reg;
                  v_informacao_final_w[4].cd_expressao_campo_w := 283863;--Atendimento
                  add_vector_final( c36_w.nr_sequencia, c36_w.nr_seq_item_pront, c36_w.cd_funcao, c36_w.dt_registro, null, c36_w.nr_atendimento_reg, c36_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c36_w.nm_tabela, c36_w.dt_registro, c36_w.dt_alta);

                  if (c36_w.dt_alta IS NOT NULL AND c36_w.dt_alta::text <> '') then
                    select coalesce(max(ie_obito), 'N')
                    into STRICT ie_obito_w
                    from motivo_alta
                    where cd_motivo_alta = c36_w.cd_motivo_alta;

                    v_informacao_final_w[1].ds_campo_valor_w := to_char(c36_w.dt_alta, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
                    if (ie_obito_w = 'S') then
                      v_informacao_final_w[1].cd_expressao_campo_w := 286749;--Data de obito
                      ie_obito_w := 'O';
                    else
                      v_informacao_final_w[1].cd_expressao_campo_w := 286657;--Data da alta
                      ie_obito_w := 'S';
                    end if;

                    v_informacao_final_w[2].ds_campo_valor_w := to_char(c36_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
                    v_informacao_final_w[2].cd_expressao_campo_w := 326146;--Data Entrada
                    v_informacao_final_w[3].ds_campo_valor_w := c36_w.nr_atendimento_reg;
                    v_informacao_final_w[3].cd_expressao_campo_w := 283863;--Atendimento
                    add_vector_final(
                      nr_seq_origem_p => c36_w.nr_sequencia,
                      nr_seq_item_pront_p => c36_w.nr_seq_item_pront,
                      cd_funcao_p => c36_w.cd_funcao,
                      dt_registro_p => c36_w.dt_alta,
                      cd_doenca_p => NULL,
                      nr_atendimento_reg_p => c36_w.nr_atendimento_reg,
                      ie_nivel_atencao_p => c36_w.IE_NIVEL_ATENCAO,
                      ie_valor_normal_p => null,
                      ds_informacao_p => montar_informacao_final(),
                      w_nm_tabela_p => c36_w.nm_tabela,
                      dt_inicial_registro_p => c36_w.dt_registro,
                      dt_final_registro_p => c36_w.dt_alta,
                      ie_alta_p => ie_obito_w
                    );

                  end if;
                end;

              end loop;
            end if;

            ie_tipo_atendimento_w := null;
          end;
        end loop;
        w_jornada_pac_subgrupo_w := null;
			elsif (c01_w.ie_tipo_item = 'EV') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca as evolucoes do paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo(
          ie_grupo_inf_p => 'EV',
          nr_grupo_informacao_p => 308082,
          ie_alteracao_cadastro_p	=> 'N',
          ds_tratamento_p => obter_desc_item_perfil(5)
        );--Evolucoes
        SELECT pj_cursor_evolucoes(dt_inicio_exec_w, dt_final_exec_w, cd_pessoa_fisica_p, nr_seq_modelo_p, ie_problema_paciente_p)
        INTO STRICT c37_w
;

				loop
        FETCH c37_w INTO ev_dt_registro,ev_nr_sequencia,ev_ds_profissional,ev_ds_funcao_usuario,ev_ds_tipo_evolucao,ev_nr_atendimento_reg,ev_cd_funcao,ev_nr_seq_item_pront,ev_ie_nivel_atencao,ev_nm_tabela;
          EXIT WHEN NOT FOUND; /* apply on c37_w */
					begin
						v_informacao_final_w[1].ds_campo_valor_w := to_char(ev_dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
						v_informacao_final_w[2].ds_campo_valor_w := ev_ds_profissional;
						v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
						v_informacao_final_w[3].ds_campo_valor_w := ev_ds_funcao_usuario;
						v_informacao_final_w[3].cd_expressao_campo_w := 487905;--Funcao do usuario
						v_informacao_final_w[4].ds_campo_valor_w := ev_ds_tipo_evolucao;
						v_informacao_final_w[4].cd_expressao_campo_w := 792029;--Tipo de nota clinica
						add_vector_final(ev_nr_sequencia, ev_nr_seq_item_pront, ev_cd_funcao, ev_dt_registro, null, ev_nr_atendimento_reg, ev_IE_NIVEL_ATENCAO, null, montar_informacao_final(), ev_nm_tabela);
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'TR') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca as transfusoes da paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo('TR', 300409, 'N');--Transfusao
				for c38_w in C38 loop
					begin
						v_informacao_final_w[1].ds_campo_valor_w := to_char(c38_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
						v_informacao_final_w[2].ds_campo_valor_w := c38_w.ds_profissional;
						v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
						add_vector_final( c38_w.nr_sequencia, c38_w.nr_seq_item_pront, c38_w.cd_funcao, c38_w.dt_registro, null, c38_w.nr_atendimento_reg, null, null, montar_informacao_final(), c38_w.nm_tabela);
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'RA') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca as receitas da paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo(
          ie_grupo_inf_p => 'RA',
          nr_grupo_informacao_p => 757342,
          ie_alteracao_cadastro_p	=> 'N',
          ds_tratamento_p => obter_desc_item_perfil(73));--Receitas
				for c39_w in C39 loop
					begin
						nr_seq_receita_w := c39_w.nr_sequencia;
						ds_receita_w := null;

						/*select	count(*)
						into	qt_problema_receita_w
						from 	soap_item_sintoma
						where	NR_SEQ_RECEITA_AMB = nr_seq_receita_w;*/
						for c40_w in C40 loop
							begin
								ds_receita_w := substr(ds_receita_w || c40_w.ds || ', ',1 ,1800);
								/*if (qt_problema_receita_w > 0) then
									nr_seq_med_receita_w := c40_w.nr_sequencia;
									for c51_w in C51 loop
										begin
											insert_jornada_pac_problema(c51_w.nr_seq_problema);
										end;
									end loop;
								end if;*/
							end;
						end loop;

						select 	length(ds_receita_w)
						into STRICT 	qt_length_receita_w
						;

						if (qt_length_receita_w > 0) then
							ds_receita_w := substr(ds_receita_w, 1, qt_length_receita_w - 2);
						end if;

						v_informacao_final_w[1].ds_campo_valor_w := to_char(c39_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
						v_informacao_final_w[2].ds_campo_valor_w := c39_w.ds_profissional;
						v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
						v_informacao_final_w[3].ds_campo_valor_w := to_char(c39_w.DT_VALIDADE_RECEITA, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[3].cd_expressao_campo_w := 326272;--Data Validade
						v_informacao_final_w[4].ds_campo_valor_w := ds_receita_w;
						v_informacao_final_w[4].cd_expressao_campo_w := 871799;--Medicamentos
						add_vector_final( c39_w.nr_sequencia, c39_w.nr_seq_item_pront, c39_w.cd_funcao, c39_w.dt_registro, null, c39_w.nr_atendimento_reg, c39_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c39_w.nm_tabela);
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'PS') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca as transfusoes da paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo('PS', 781448, 'N');--Programas de saude
				for c41_w in C41 loop
					begin
						v_informacao_final_w[1].ds_campo_valor_w := to_char(c41_w.dt_inclusao, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
						v_informacao_final_w[2].ds_campo_valor_w := c41_w.nm_programa;
						v_informacao_final_w[2].cd_expressao_campo_w := 648224;--Profissional
						add_vector_final( c41_w.nr_sequencia, c41_w.nr_seq_item_pront, c41_w.cd_funcao, c41_w.dt_inclusao, null, c41_w.nr_atendimento_reg, null, null, montar_informacao_final(), c41_w.nm_tabela);
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'LP') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca as listas de pendencia da paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo('LP', 792382, 'N');--Lista de pendencias
				for c42_w in C42 loop
					begin
						v_informacao_final_w[1].ds_campo_valor_w := to_char(c42_w.dt_agendamento, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
						v_informacao_final_w[2].ds_campo_valor_w := c42_w.ds_descricao;
						v_informacao_final_w[2].cd_expressao_campo_w := 287493;--descricao
						add_vector_final( c42_w.nr_sequencia, c42_w.nr_seq_item_pront, c42_w.cd_funcao, c42_w.dt_agendamento, null, c42_w.nr_atendimento_reg, null, null, montar_informacao_final(), c42_w.nm_tabela);
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'SV') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca sinais vitais da paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo(
          ie_grupo_inf_p => 'SV',
          nr_grupo_informacao_p => 772203,
          ie_alteracao_cadastro_p	=> 'N',
          ds_tratamento_p => obter_desc_item_perfil(13));--Sinais vitais
				for c43_w in C43 loop
					begin
						ie_retorno_sv_w := 'N';

						/*select Obter_Limite_Sinal_vital_PJ(cd_pessoa_fisica_p, 12, c43_w.QT_PESO, nm_usuario_p),
							   Obter_Limite_Sinal_vital_PJ(cd_pessoa_fisica_p, 13, c43_w.QT_ALTURA_CM, nm_usuario_p),
							   Obter_Limite_Sinal_vital_PJ(cd_pessoa_fisica_p, 9, c43_w.QT_FREQ_CARDIACA, nm_usuario_p),
							   Obter_Limite_Sinal_vital_PJ(cd_pessoa_fisica_p, 1, c43_w.QT_PA_SISTOLICA, nm_usuario_p),
							   Obter_Limite_Sinal_vital_PJ(cd_pessoa_fisica_p, 2, c43_w.QT_PA_DIASTOLICA, nm_usuario_p),
							   Obter_Limite_Sinal_vital_PJ(cd_pessoa_fisica_p, 4, c43_w.QT_TEMP, nm_usuario_p)
						into   ie_peso_regra_sv_w,
							   ie_altura_regra_sv_w,
							   ie_freq_card_regra_sv_w,
							   ie_pa_sis_regra_sv_w,
							   ie_pa_dia_regra_sv_w,
							   ie_temp_regra_sv_w
						from dual;*/
						if (ie_peso_regra_sv_w <> 'N') then
							if (ie_peso_regra_sv_w <> 'A') then
								ie_retorno_sv_w := 'F';
							else
								ie_retorno_sv_w := 'A';
							end if;
						end if;

						if (ie_altura_regra_sv_w <> 'N' and ie_retorno_sv_w <> 'F') then
							if (ie_altura_regra_sv_w <> 'A') then
								ie_retorno_sv_w := 'F';
							else
								ie_retorno_sv_w := 'A';
							end if;
						end if;

						if (ie_freq_card_regra_sv_w <> 'N' and ie_retorno_sv_w <> 'F') then
							if (ie_freq_card_regra_sv_w <> 'A') then
								ie_retorno_sv_w := 'F';
							else
								ie_retorno_sv_w := 'A';
							end if;
						end if;

						if (ie_pa_sis_regra_sv_w <> 'N' and ie_retorno_sv_w <> 'F') then
							if (ie_pa_sis_regra_sv_w <> 'A') then
								ie_retorno_sv_w := 'F';
							else
								ie_retorno_sv_w := 'A';
							end if;
						end if;

						if (ie_pa_dia_regra_sv_w <> 'N' and ie_retorno_sv_w <> 'F') then
							if (ie_pa_dia_regra_sv_w <> 'A') then
								ie_retorno_sv_w := 'F';
							else
								ie_retorno_sv_w := 'A';
							end if;
						end if;

						if (ie_temp_regra_sv_w <> 'N' and ie_retorno_sv_w <> 'F') then
							if (ie_temp_regra_sv_w <> 'A') then
								ie_retorno_sv_w := 'F';
							else
								ie_retorno_sv_w := 'A';
							end if;
						end if;

						v_informacao_final_w[1].ds_campo_valor_w := to_char(c43_w.DT_SINAL_VITAL, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
						v_informacao_final_w[2].ds_campo_valor_w := c43_w.ds_profissional;
						v_informacao_final_w[2].cd_expressao_campo_w := 648224;--Profissional
						v_informacao_final_w[3].ds_campo_valor_w := c43_w.QT_PA_SISTOLICA;
						v_informacao_final_w[3].cd_expressao_campo_w := 295132;--PA max
						v_informacao_final_w[4].ds_campo_valor_w := c43_w.QT_PA_DIASTOLICA;
						v_informacao_final_w[4].cd_expressao_campo_w := 671314;--PA min
						v_informacao_final_w[5].ds_campo_valor_w := c43_w.QT_FREQ_RESP;
						v_informacao_final_w[5].cd_expressao_campo_w := 558642;--FR
						v_informacao_final_w[6].ds_campo_valor_w := c43_w.QT_FREQ_CARDIACA;
						v_informacao_final_w[6].cd_expressao_campo_w := 311848;--FC
						v_informacao_final_w[7].ds_campo_valor_w := c43_w.QT_TEMP;
						v_informacao_final_w[7].cd_expressao_campo_w := 692223;--Temperatura C
						add_vector_final( c43_w.nr_sequencia, c43_w.nr_seq_item_pront, c43_w.cd_funcao, c43_w.DT_SINAL_VITAL, null, c43_w.nr_atendimento_reg, c43_w.IE_NIVEL_ATENCAO, ie_retorno_sv_w, montar_informacao_final(), c43_w.nm_tabela);
						ie_retorno_sv_w := null;
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'SE') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca as solici externas da paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo(
          ie_grupo_inf_p => 'SE',
          nr_grupo_informacao_p => 754654,
          ie_alteracao_cadastro_p	=> 'N',
          ds_tratamento_p => obter_desc_item_perfil(385));--solici externas
				for c44_w in C44 loop
					begin
						nr_seq_solic_exame_w := c44_w.nr_sequencia;

						/*select	count(*)
						into	qt_problema_solic_ext_w
						from 	soap_item_sintoma
						where	nr_seq_solic_exame = nr_seq_solic_exame_w;*/
						for c45_w in C45 loop
							begin
								if (c45_w.ds_exame IS NOT NULL AND c45_w.ds_exame::text <> '') then
									ds_exame_w := substr(ds_exame_w || ' - ' || c45_w.ds_exame, 1, 1500);
								end if;
								if (c45_w.ds_exame_sem_cadastro IS NOT NULL AND c45_w.ds_exame_sem_cadastro::text <> '') then
									ds_exame_sem_cadastro_w := substr(ds_exame_sem_cadastro_w || ' - ' || c45_w.ds_exame_sem_cadastro,1 ,1800);
								end if;
								if (c45_w.ds_proc_interno IS NOT NULL AND c45_w.ds_proc_interno::text <> '') then
									ds_proc_interno_w := substr(ds_proc_interno_w || ' - ' || c45_w.ds_proc_interno,1 ,1800);
								end if;
								if (c45_w.ds_procedimento_cirurgia IS NOT NULL AND c45_w.ds_procedimento_cirurgia::text <> '') then
									ds_procedimento_cirurgia_w := substr(ds_procedimento_cirurgia_w || ' - ' || c45_w.ds_procedimento_cirurgia, 1, 1500);
								end if;
								if (c45_w.ds_exame_lab IS NOT NULL AND c45_w.ds_exame_lab::text <> '') then
									ds_exame_lab_w := substr(ds_exame_lab_w || ' - ' || c45_w.ds_exame_lab,1 ,1800);
								end if;
								if (c45_w.ds_material_exame IS NOT NULL AND c45_w.ds_material_exame::text <> '') then
									ds_material_exame_w := substr(ds_material_exame_w || ' - ' || c45_w.ds_material_exame,1 ,1800);
								end if;

								/*if (qt_problema_solic_ext_w > 0) then
									nr_seq_item_solic_w := c45_w.nr_sequencia;
									for c52_w in C52 loop
										begin
											insert_jornada_pac_problema(c52_w.nr_seq_problema);
										end;
									end loop;
								end if;*/
							end;
						end loop;

						v_informacao_final_w[1].ds_campo_valor_w := to_char(c44_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
						v_informacao_final_w[2].ds_campo_valor_w := c44_w.ds_profissional;
						v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
						v_informacao_final_w[3].ds_campo_valor_w := c44_w.ds_diagnostico;
						v_informacao_final_w[3].cd_expressao_campo_w := 515514;--CID
						v_informacao_final_w[4].ds_campo_valor_w := ds_exame_w;
						v_informacao_final_w[4].cd_expressao_campo_w := 289728;--Exames
						v_informacao_final_w[5].ds_campo_valor_w := ds_exame_sem_cadastro_w;
						v_informacao_final_w[5].cd_expressao_campo_w := 289722;--Exame sem cadastro
						v_informacao_final_w[6].ds_campo_valor_w := ds_proc_interno_w;
						v_informacao_final_w[6].cd_expressao_campo_w := 651873;--Procedimento Interno
						v_informacao_final_w[7].ds_campo_valor_w := ds_procedimento_cirurgia_w;
						v_informacao_final_w[7].cd_expressao_campo_w := 718703;--Procedimento Cirurgia
						v_informacao_final_w[8].ds_campo_valor_w := ds_exame_lab_w;
						v_informacao_final_w[8].cd_expressao_campo_w := 289710;--Exame laboratorial
						v_informacao_final_w[9].ds_campo_valor_w := ds_material_exame_w;
						v_informacao_final_w[9].cd_expressao_campo_w := 292970;--Material exame
						add_vector_final( c44_w.nr_sequencia, c44_w.nr_seq_item_pront, c44_w.cd_funcao, c44_w.dt_registro, null, c44_w.nr_atendimento_reg, c44_w.IE_NIVEL_ATENCAO, null, montar_informacao_final(), c44_w.nm_tabela);
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'VA') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca as vacinas da paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo('VA', 314074, 'N');--Vacinas
				for c46_w in C46 loop
					begin
						v_informacao_final_w[1].ds_campo_valor_w := to_char(c46_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
						v_informacao_final_w[2].ds_campo_valor_w := c46_w.ds_profissional;
						v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
						v_informacao_final_w[3].ds_campo_valor_w := c46_w.ds_vacina;
						v_informacao_final_w[3].cd_expressao_campo_w := 301214;--Vacina
						v_informacao_final_w[4].ds_campo_valor_w := c46_w.ds_dose;
						v_informacao_final_w[4].cd_expressao_campo_w := 326100;--Dose
						v_informacao_final_w[4].ds_campo_valor_w := c46_w.ds_vacina_exec_w;
						v_informacao_final_w[4].cd_expressao_campo_w := 326269;--Status
						add_vector_final( c46_w.nr_sequencia, c46_w.nr_seq_item_pront, c46_w.cd_funcao, c46_w.dt_registro, null, c46_w.nr_atendimento_reg, null, null, montar_informacao_final(), c46_w.nm_tabela);
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'MP') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca as movimentacoes  da paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo('MP', 491425, 'N', 'G');--movimentacoes do paciente
				for c47_w in C47 loop
					begin
						v_informacao_final_w[1].ds_campo_valor_w := to_char(c47_w.DT_ENTRADA_UNIDADE, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[1].cd_expressao_campo_w := 286838;--Data Entrada
						v_informacao_final_w[2].ds_campo_valor_w := to_char(c47_w.DT_SAIDA_UNIDADE, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
						v_informacao_final_w[2].cd_expressao_campo_w := 287214;--Data saida
						v_informacao_final_w[3].ds_campo_valor_w := c47_w.ds_setor;
						v_informacao_final_w[3].cd_expressao_campo_w := 298360;--Setor
						v_informacao_final_w[4].ds_campo_valor_w := c47_w.ds_tipo_passagem;
						v_informacao_final_w[4].cd_expressao_campo_w := 299900;--Tipo passagem
						v_informacao_final_w[5].ds_campo_valor_w := c47_w.ds_classif_setor;
						v_informacao_final_w[5].cd_expressao_campo_w := 10652113;--Classificacao setor
						add_vector_final( c47_w.nr_sequencia, c47_w.nr_seq_item_pront, c47_w.cd_funcao, c47_w.DT_ENTRADA_UNIDADE, null, c47_w.nr_atendimento_reg, null, null, montar_informacao_final(), c47_w.nm_tabela, c47_w.DT_ENTRADA_UNIDADE, c47_w.DT_SAIDA_UNIDADE);
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'QT') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca os tratamentos oncologicos  da paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				insert_jornada_pac_grupo('QT', 297210, 'N');--Quimioterapia
				for c48_w in C48 loop
					begin
						nr_seq_receita_w := c48_w.nr_sequencia;
						for c49_w in C49 loop
							begin
								v_informacao_final_w[1].ds_campo_valor_w := c48_w.ds_protocolo;
								v_informacao_final_w[1].cd_expressao_campo_w := 328829;--Protocolo
								v_informacao_final_w[2].ds_campo_valor_w := c49_w.NR_CICLO;
								v_informacao_final_w[2].cd_expressao_campo_w := 284890;--Ciclo
								v_informacao_final_w[3].ds_campo_valor_w := c49_w.DS_DIA_CICLO;
								v_informacao_final_w[3].cd_expressao_campo_w := 619522;--Dia
								v_informacao_final_w[4].ds_campo_valor_w := c49_w.DT_PREVISTA;
								v_informacao_final_w[4].cd_expressao_campo_w := 287126;--Data prevista
								v_informacao_final_w[5].ds_campo_valor_w := c49_w.DT_REAL;
								v_informacao_final_w[5].cd_expressao_campo_w := 287160;--Data real
								v_informacao_final_w[6].ds_campo_valor_w := c49_w.DS_STATUS;
								v_informacao_final_w[6].cd_expressao_campo_w := 326292;--Status
								add_vector_final( c48_w.nr_sequencia, c48_w.nr_seq_item_pront, c48_w.cd_funcao, c49_w.dt_registro, null, c49_w.nr_atendimento_reg, null, null, montar_informacao_final(), c49_w.nm_tabela);
							end;
						end loop;
					end;
				end loop;
			elsif (c01_w.ie_tipo_item = 'AM') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca as amamnetacoes da paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				if (ie_sexo_pf_w = 'F') then
					insert_jornada_pac_grupo('AM', 283427, 'N');--Amamentacao
					for c05_w in C05 loop
						begin
							v_informacao_final_w[1].ds_campo_valor_w := to_char(c05_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
							v_informacao_final_w[1].cd_expressao_campo_w := 327202;--Data
							v_informacao_final_w[2].ds_campo_valor_w := c05_w.ds_profissional;
							v_informacao_final_w[2].cd_expressao_campo_w := 728918;--Profissional
							add_vector_final( c05_w.nr_sequencia, c05_w.nr_seq_item_pront, c05_w.cd_funcao, c05_w.dt_registro, null, c05_w.nr_atendimento_reg, null, null, montar_informacao_final(), c05_w.nm_tabela);
						end;
					end loop;
				end if;
			elsif (c01_w.ie_tipo_item = 'HP') then
				if (ie_sexo_pf_w = 'F') then
----------------------------------------------------------------------------------------------------------------- Cursor que busca historicos de parto da paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
					insert_jornada_pac_grupo('HP', 314195, 'N');--Historico de parto
					for c30_w in C30 loop
						begin
							v_informacao_final_w[1].ds_campo_valor_w := to_char(c30_w.dt_registro, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
							v_informacao_final_w[1].cd_expressao_campo_w := 621386;--Data Inicio
							v_informacao_final_w[2].ds_campo_valor_w := to_char(c30_w.dt_registro_fim, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)));
							v_informacao_final_w[2].cd_expressao_campo_w := 342820;--Data Final
							v_informacao_final_w[3].ds_campo_valor_w := c30_w.ds_profissional;
							v_informacao_final_w[3].cd_expressao_campo_w := 728918;--Profissional
							v_informacao_final_w[4].ds_campo_valor_w := substr(obter_desc_expressao(c30_w.ds_parto),1,255);
							v_informacao_final_w[4].cd_expressao_campo_w := 299677;--Tipo de parto
							add_vector_final( c30_w.nr_sequencia, c30_w.nr_seq_item_pront, c30_w.cd_funcao, c30_w.dt_registro, null, c30_w.nr_atendimento_reg, null, null, montar_informacao_final(), c30_w.nm_tabela);
						end;
					end loop;
				end if;
			ELSIF (c01_w.ie_tipo_item = 'RX') THEN
-------------------------------------------------------------------------------------------------------------------Cursor que busca as fases de Radioterapia do paciente------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        insert_jornada_pac_grupo('RX', 297224, 'N');--Radioterapia
        FOR c66_w IN C66 LOOP
          BEGIN
            v_informacao_final_w[1].cd_expressao_campo_w := 300444;--Tratamento
            v_informacao_final_w[1].ds_campo_valor_w := c66_w.nm_protocolo;
            v_informacao_final_w[2].cd_expressao_campo_w := 327202;--Data
            v_informacao_final_w[2].ds_campo_valor_w := c66_w.dt_agenda;
            v_informacao_final_w[3].cd_expressao_campo_w := 326269;--Status
            v_informacao_final_w[3].ds_campo_valor_w := c66_w.status;
            v_informacao_final_w[4].cd_expressao_campo_w := 619522;--Dia
            v_informacao_final_w[4].ds_campo_valor_w := c66_w.dia;
            v_informacao_final_w[5].cd_expressao_campo_w := 326827;--Dia fase
            v_informacao_final_w[5].ds_campo_valor_w := c66_w.dia_fase;

            add_vector_final(c66_w.nr_sequencia, NULL, 3030, c66_w.dt_agenda, NULL, NULL, NULL, null, montar_informacao_final(), 'RXT_AGENDA_FASE');
          END;
        END LOOP;
      END IF;
		end;
	end loop;

-------Vetor final
	FORALL i IN INDICES OF vt_final_w
		INSERT INTO w_jornada_pac_registro
		VALUES vt_final_w(i);

	commit;

	/*for i in 1..vt_problema_final_w.count loop
		begin
			select	max(nr_sequencia)
			into	w_jornada_pac_registro_w
			from	w_jornada_pac_registro
			where	nr_seq_origem = vt_problema_final_w(i).nr_seq_origem_w
			and		NR_SEQ_JORNADA_GRUPO = vt_problema_final_w(i).nr_seq_grupo_w;

			insert_jornada_pac_problema(vt_problema_final_w(i).nr_seq_problema_w);
		end;
	end loop;*/
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_historia_paciente ( dt_inicial_p timestamp, dt_final_p timestamp, cd_pessoa_fisica_p text, nr_atendimento_p bigint, cd_estabelecimento_p bigint, nr_seq_modelo_p bigint, nm_usuario_p text, ie_nome_amigavel_p text default 'N', nr_seq_protocolo_p bigint DEFAULT NULL, ie_problema_paciente_p text DEFAULT NULL) FROM PUBLIC;

