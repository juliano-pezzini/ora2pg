-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_aviso_result_prescr ( nr_prescricao_p bigint, nr_sequencia_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_exame_p bigint) AS $body$
DECLARE

 
ie_tipo_corresp_w	varchar(15);
cd_medico_w		varchar(10);
nm_paciente_w		varchar(60);
ds_procedimento_w	procedimento.ds_procedimento%TYPE;
ds_exame_w		varchar(240);
nr_seq_comunic_w	bigint;
nm_usuario_w		varchar(15);

ds_assunto_w		varchar(255);
ds_mensagem_w		varchar(255);
ds_email_destino_w	usuario.ds_email%type;
ie_avisar_result_W	varchar(1) := 'N';

nr_telefone_celular_w	varchar(40);
ds_esconder_ddi_w	varchar(1);

id_sms_w			bigint;


BEGIN 
 
ds_esconder_ddi_w := OBTER_VALOR_PARAM_USUARIO(0,214,0,obter_usuario_ativo,obter_estabelecimento_ativo);
 
if (nr_prescricao_p > 0) and (nr_sequencia_p > 0) then 
 
	select	a.cd_medico, 
		substr(obter_nome_pf(a.cd_pessoa_fisica),1,60), 
		substr(obter_descricao_procedimento(b.cd_procedimento,b.ie_origem_proced),1,255), 
		substr(obter_desc_exame(nr_seq_exame),1,240), 
		a.nm_usuario_original, 
		coalesce(b.ie_avisar_result,'N') 
	into STRICT	cd_medico_w, 
		nm_paciente_w, 
		ds_procedimento_w, 
		ds_exame_w, 
		nm_usuario_w, 
		ie_avisar_result_W 
	from	prescr_procedimento b, 
		prescr_medica a 
	where	a.nr_prescricao	= nr_prescricao_p 
	and	a.nr_prescricao	= b.nr_prescricao 
	and	b.nr_sequencia	= nr_sequencia_p;
	 
elsif (nr_prescricao_p > 0) and 
	((nr_seq_exame_p IS NOT NULL AND nr_seq_exame_p::text <> '') or (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '')) then 
 
	select	a.cd_medico, 
		substr(obter_nome_pf(a.cd_pessoa_fisica),1,60), 
		substr(obter_descricao_procedimento(cd_procedimento_p,ie_origem_proced_p),1,240), 
		substr(obter_desc_exame(nr_seq_exame_p),1,240), 
		a.nm_usuario_original, 
		'S' 
	into STRICT	cd_medico_w, 
		nm_paciente_w, 
		ds_procedimento_w, 
		ds_exame_w, 
		nm_usuario_w, 
		ie_avisar_result_W 
	from	prescr_medica a 
	where	a.nr_prescricao	= nr_prescricao_p;
end if;
 
begin 
 
select	Obter_forma_corresp_prescr(cd_medico_w) 
into STRICT	ie_tipo_corresp_w
;
exception 
when others then 
	ie_tipo_corresp_w := null;
end;
 
if (ie_avisar_result_W = 'S') and (ie_tipo_corresp_w IS NOT NULL AND ie_tipo_corresp_w::text <> '') then 
	 
	select	coalesce(max(a.nm_usuario),nm_usuario_w), 
		max(a.ds_email), 
		CASE WHEN ds_esconder_ddi_w='S' THEN  max(b.nr_ddd_celular)||max(b.nr_telefone_celular)  ELSE max(b.nr_ddi_celular)||max(b.nr_telefone_celular) END  nr_telefone_celular 
	into STRICT	nm_usuario_w, 
		ds_email_destino_w, 
		nr_telefone_celular_w 
	from	pessoa_fisica b, usuario a 
	where	a.cd_pessoa_fisica	= cd_medico_w 
	and	a.ie_situacao		= 'A' 
	and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica;
	 
	if (ds_exame_w IS NOT NULL AND ds_exame_w::text <> '') then 
		ds_procedimento_w	:= ds_exame_w;
	end if;
 
	ds_assunto_w	:= Wheb_mensagem_pck.get_texto(308499); --'Resultado de exame/laudo.'; 
	ds_mensagem_w	:= Wheb_mensagem_pck.get_texto(308500) || ' - ' /*'Prescrição - '*/||to_char(nr_prescricao_p) || chr(13)||chr(10)||
			  Wheb_mensagem_pck.get_texto(308501) || ' - ' /*'Paciente - '*/||nm_paciente_w ||chr(13)||chr(10)|| 
			  Wheb_mensagem_pck.get_texto(308502) || ' - '/*'Exame/laudo - '*/||ds_procedimento_w;
 
	if (ie_tipo_corresp_w = 'Email') and (ds_email_destino_w IS NOT NULL AND ds_email_destino_w::text <> '') then 
 
		CALL Enviar_Email(ds_assunto_w,ds_mensagem_w,null,ds_email_destino_w,nm_usuario_w,'M');
 
	elsif (ie_tipo_corresp_w = 'CI') then 
	 
		select	nextval('comunic_interna_seq') 
		into STRICT	nr_seq_comunic_w 
		;	
 
		insert	into comunic_interna(dt_comunicado, 
			ds_titulo, 
			ds_comunicado, 
			nm_usuario, 
			dt_atualizacao, 
			nr_sequencia,  
			ie_gerencial, 
			nm_usuario_destino, 
			dt_liberacao, 
			ie_geral) 
		values (	clock_timestamp(), 
			ds_assunto_w, 
			ds_mensagem_w, 
			'Tasy', 
			clock_timestamp(), 
			nr_seq_comunic_w, 
			'N', 
			nm_usuario_w||',', 
			clock_timestamp(), 
			'N');
	elsif (ie_tipo_corresp_w = 'MCel') and (nr_telefone_celular_w IS NOT NULL AND nr_telefone_celular_w::text <> '') then 
		ds_mensagem_w	:= Wheb_mensagem_pck.get_texto(308504)||':'/*'Prescr:'*/ || to_char(nr_prescricao_p) || 
				 ' ' || Wheb_mensagem_pck.get_texto(308505) /*' Pac:'*/ || obter_iniciais_nome(null, nm_paciente_w) || 
				 ' ' || Wheb_mensagem_pck.get_texto(308506) /*' Exame:'*/ || substr(ds_procedimento_w,1,100);				
		id_sms_w := wheb_sms.enviar_sms('SMS-'||wheb_mensagem_pck.get_texto(333002), nr_telefone_celular_w, ds_mensagem_w, obter_usuario_ativo, id_sms_w);
	end if;
end if;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_aviso_result_prescr ( nr_prescricao_p bigint, nr_sequencia_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_exame_p bigint) FROM PUBLIC;

