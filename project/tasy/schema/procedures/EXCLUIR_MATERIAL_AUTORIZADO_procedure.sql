-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE excluir_material_autorizado ( nr_atendimento_p bigint, nr_seq_mat_autor_p bigint, nr_seq_material_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_material_w		double precision;
qt_solicitada_w		double precision;
qt_autor_conv_w		bigint;
nr_seq_autorizacao_w	bigint;
ie_atual_qt_solic_autor_w	varchar(5);
cd_convenio_w		integer;
ds_observacao_w		autorizacao_convenio.ds_observacao%type;


BEGIN

select	coalesce(qt_material,0)
into STRICT	qt_material_w
from	material_atend_paciente
where	nr_sequencia	= nr_seq_material_p;

begin
select	coalesce(qt_solicitada,0),
	a.nr_sequencia,
	a.cd_convenio
into STRICT	qt_solicitada_w,
	nr_seq_autorizacao_w,
	cd_convenio_w
from	autorizacao_convenio a,
	material_autorizado b
where	b.nr_sequencia		= nr_seq_mat_autor_p
and	b.nr_sequencia_autor	= a.nr_sequencia
and	a.nr_atendimento		= nr_atendimento_p;
exception
when others then
	qt_solicitada_w := 0;
end;

if	((qt_solicitada_w - qt_material_w) > 0) then

	select	coalesce(max(ie_atual_qt_solic_autor),'N')
	into STRICT	ie_atual_qt_solic_autor_w
	from	convenio_estabelecimento
	where	cd_convenio		= cd_convenio_w
	and	cd_estabelecimento	= Wheb_usuario_pck.Get_cd_estabelecimento;

	update	material_autorizado a
	set	a.qt_solicitada		= a.qt_solicitada - qt_material_w,
		a.nm_usuario		= nm_usuario_p,
		a.dt_atualizacao		= clock_timestamp()
	where	a.nr_sequencia		= nr_seq_mat_autor_p
	and	((ie_atual_qt_solic_autor_w = 'S' AND a.qt_autorizada > a.qt_solicitada)
		or (exists (	SELECT	1
				from 	estagio_autorizacao y,
					autorizacao_convenio x
				where	x.nr_seq_estagio	= y.nr_sequencia
				and	x.nr_sequencia	= a.nr_sequencia_autor
				and	y.ie_interno	= '1'))); --Necessidade
else

	update	material_atend_paciente m
	set	m.nr_seq_mat_autor	 = NULL
	where	m.nr_seq_mat_autor in (	SELECT	a.nr_sequencia
					from material_autorizado a
					where	a.nr_sequencia	= nr_seq_mat_autor_p
					and	exists (select	1
							from 	estagio_autorizacao y,
								autorizacao_convenio x
							where	x.nr_seq_estagio	= y.nr_sequencia
							and	x.nr_sequencia	= a.nr_sequencia_autor
							and	y.ie_interno	= '1'));

	delete	from material_autorizado a
	where	a.nr_sequencia	= nr_seq_mat_autor_p
	and	exists (SELECT	1
			from 	estagio_autorizacao y,
				autorizacao_convenio x
			where	x.nr_seq_estagio	= y.nr_sequencia
			and	x.nr_sequencia	= a.nr_sequencia_autor
			and	y.ie_interno	= '1'); --Necessidade
end if;

if (coalesce(nr_seq_autorizacao_w,0) <> 0) then

	select	count(1)
	into STRICT	qt_autor_conv_w
	from	material_autorizado where	nr_sequencia_autor = nr_seq_autorizacao_w LIMIT 1;

	if (qt_autor_conv_w = 0) then
		select	count(1)
		into STRICT	qt_autor_conv_w
		from	procedimento_autorizado where	nr_sequencia_autor = nr_seq_autorizacao_w LIMIT 1;
	end if;

	if (qt_autor_conv_w = 0) then
		--Cancelado pela exclusão do item Conta / Execução prescrição
		ds_observacao_w	:= substr(wheb_mensagem_pck.get_texto(305291),1,2000);

		update	autorizacao_convenio a
		set	a.nr_seq_estagio = (	SELECT	max(x.nr_sequencia)
						from	estagio_autorizacao x
						where	x.ie_interno = '70'),
			a.dt_atualizacao = clock_timestamp(),
			a.ds_observacao	 = ds_observacao_w,
			a.nm_usuario	 = nm_usuario_p
		where	a.nr_sequencia   = nr_seq_autorizacao_w;

	end if;

end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE excluir_material_autorizado ( nr_atendimento_p bigint, nr_seq_mat_autor_p bigint, nr_seq_material_p bigint, nm_usuario_p text) FROM PUBLIC;

