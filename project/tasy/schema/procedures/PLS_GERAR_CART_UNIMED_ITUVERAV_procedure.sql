-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_cart_unimed_ituverav ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

			 
nr_seq_segurado_w		bigint;
ds_header_w			varchar(4000);
ds_sub_header_w			varchar(4000);
cd_usuario_plano_w		varchar(30);
nm_beneficiario_w		varchar(250);
tp_contratacao_w		varchar(20);
dt_nascimento_w			varchar(20);
dt_validade_carteira_w		varchar(20);
ds_produto_w			varchar(50);
cd_abrangencia_w		varchar(10);
ds_abrangencia_w		varchar(50);
ds_registro_ans_w		varchar(50);
ds_acomodacao_w			varchar(50);
ds_mensagem_cpt_w		varchar(15);
nm_empresa_w			varchar(50);
ds_rede_atendimento_w		varchar(50);
ds_carencia_ww			varchar(4000);	
ds_carencia_w			varchar(4000);
nr_via_solicitacao_w		bigint;
ds_regiao_w			varchar(4000);
ds_trilha_2_w			pls_segurado_carteira.ds_trilha2%type;
nr_protocolo_ans_w		varchar(100);
dt_carencia_w			varchar(100);
CD_MATRICULA_FAMILIAR_w		varchar(100);
cd_local_cobranca_w		varchar(100);
ds_observacao_w			bigint;
---------------------------------------------------------------------- 
cd_cgc_estipulante_w		varchar(20);
cd_pf_estipulante_w		varchar(20);
i				bigint;
qt_registros_w			bigint;
nr_seq_plano_w			bigint;
nr_seq_regiao_w			bigint;
ie_preenche_vazio_w		varchar(10);
dt_contratacao_w		timestamp;
			
C01 CURSOR FOR 
	SELECT	b.nr_sequencia 
	from	pls_segurado_carteira	a, 
		pls_segurado		b, 
		pls_carteira_emissao	c, 
		pls_lote_carteira	d 
	where	a.nr_seq_segurado	= b.nr_sequencia 
	and	c.nr_seq_seg_carteira	= a.nr_sequencia 
	and	c.nr_seq_lote		= d.nr_sequencia 
	and	d.nr_sequencia		= nr_seq_lote_p;

C05 CURSOR FOR	 
	SELECT	dt_carencia, 
		ie_preenche_vazio 
	from (	SELECT	b.ds_carencia, 
				CASE WHEN a.qt_dias='0' THEN 'SEM CARÊNCIAS A CUMPRIR'  ELSE to_char(coalesce(a.dt_fim_vigencia,coalesce(a.dt_inicio_vigencia,dt_contratacao_w)+a.qt_dias),'dd/mm/yyyy') END  dt_carencia, 
				coalesce(b.nr_apresentacao,10) nr_apresentacao, 
				'N' ie_preenche_vazio 
			from	pls_carencia		a, 
				pls_tipo_carencia	b, 
				pls_segurado		c 
			where	a.nr_seq_tipo_carencia	= b.nr_sequencia 
			and	a.nr_seq_segurado	= c.nr_sequencia 
			and	c.nr_sequencia		= nr_seq_segurado_w 
			and	coalesce(b.ie_padrao_carteira,'N')	= 'S' 
			and	b.ie_cpt	= 'N' 
			
union all
 
			select	b.ds_carencia, 
				CASE WHEN a.qt_dias='0' THEN 'SEM CARÊNCIAS A CUMPRIR'  ELSE to_char(coalesce(a.dt_fim_vigencia,coalesce(a.dt_inicio_vigencia,dt_contratacao_w)+a.qt_dias),'dd/mm/yyyy') END , 
				coalesce(b.nr_apresentacao,10), 
				'N' ie_preenche_vazio 
			from	pls_carencia		a, 
				pls_tipo_carencia	b, 
				pls_segurado		c, 
				pls_contrato		d 
			where	a.nr_seq_tipo_carencia	= b.nr_sequencia 
			and	c.nr_seq_contrato	= d.nr_sequencia 
			and	a.nr_seq_contrato	= d.nr_sequencia 
			and	c.nr_sequencia		= nr_seq_segurado_w 
			and	coalesce(b.ie_padrao_carteira,'N')	= 'S' 
			and	b.ie_cpt	= 'N' 
			and (	select	count(*) 
					from	pls_carencia		a, 
						pls_tipo_carencia	b, 
						pls_segurado		c 
					where	a.nr_seq_tipo_carencia	= b.nr_sequencia 
					and	a.nr_seq_segurado	= c.nr_sequencia 
					and	c.nr_sequencia		= nr_seq_segurado_w 
					and	b.ie_cpt		='N') = 0 
			
union all
 
			select	b.ds_carencia,		 
				CASE WHEN a.qt_dias='0' THEN 'SEM CARÊNCIAS A CUMPRIR'  ELSE to_char(coalesce(a.dt_fim_vigencia,coalesce(a.dt_inicio_vigencia,dt_contratacao_w)+a.qt_dias),'dd/mm/yyyy') END , 
				coalesce(b.nr_apresentacao,10), 
				'N' ie_preenche_vazio 
			from	pls_carencia		a, 
				pls_tipo_carencia	b, 
				pls_segurado		c, 
				pls_plano		d 
			where	a.nr_seq_tipo_carencia	= b.nr_sequencia 
			and	c.nr_seq_plano		= d.nr_sequencia 
			and	a.nr_seq_plano		= d.nr_sequencia 
			and	c.nr_sequencia		= nr_seq_segurado_w 
			and	coalesce(b.ie_padrao_carteira,'N')	= 'S' 
			and	b.ie_cpt	= 'N' 
			and (	select	count(*) 
					from	pls_carencia		a, 
						pls_tipo_carencia	b, 
						pls_segurado		c 
					where	a.nr_seq_tipo_carencia	= b.nr_sequencia 
					and	a.nr_seq_segurado	= c.nr_sequencia 
					and	c.nr_sequencia		= nr_seq_segurado_w 
					and	b.ie_cpt		= 'N') = 0 
			and (	select	count(*) 
					from	pls_carencia		a, 
						pls_tipo_carencia	b, 
						pls_segurado		c, 
						pls_contrato		d 
					where	a.nr_seq_tipo_carencia	= b.nr_sequencia 
					and	c.nr_seq_contrato	= d.nr_sequencia 
					and	a.nr_seq_contrato	= d.nr_sequencia 
					and	c.nr_sequencia		= nr_seq_segurado_w 
					and	b.ie_cpt		= 'N') = 0 
			
union all
 
			select	'', 
				'', 
				99999, 
				'S' ie_preenche_vazio 
			from	tabela_sistema) alias21 ORDER BY	nr_apresentacao LIMIT 13;


BEGIN 
 
ds_header_w	:= 	'"Numero";"Codigo";"Nome Beneficiário";"Validade";"Nascimento";"Contratante";"Acomodacao";"Cod-prod-ANS";"magtrack";"Matricula Funcionario";'|| 
			'"Carencia1";"Carencia2";"Carencia3";"Carencia4";"Carencia5";"Carencia6";"Carencia7";"Carencia8";"Carencia9";"Carencia11";"Carencia12";"Carencia13";"Carencia14";'|| 
			'"Natureza";"Via Cartao";"Tipo Regulamentacao";"Tipo Abrangencia";"Descricao-Plano";"Cpt";"Rede Atendimento";Local Atendimento;';
 
delete	FROM w_pls_interface_carteira 
where	nr_seq_lote	= nr_seq_lote_p;
 
insert into w_pls_interface_carteira(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec, 
		nr_seq_lote,ds_header,ie_tipo_reg) 
values (	nextval('w_pls_interface_carteira_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p, 
		nr_seq_lote_p,ds_header_w,1);
		 
ds_observacao_w	:= 0;
		 
open C01;
loop 
fetch C01 into	 
	nr_seq_segurado_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	ds_observacao_w	:= ds_observacao_w + 1;
	 
	select	c.cd_usuario_plano, 
		substr(a.nm_pessoa_fisica,1,25), 
		to_char(a.dt_nascimento,'dd/mm/yyyy'), 
		substr(d.ds_carteira_acomodacao,1,17), 
		substr(pls_obter_dados_cart_unimed(b.nr_sequencia,d.nr_sequencia,'DASJ',1),1,50), 
		to_char(c.dt_validade_carteira,'dd/mm/yyyy'), 
		f.cd_cgc_estipulante, 
		CASE WHEN D.IE_TIPO_CONTRATACAO='I' THEN '2-FÍSICA' WHEN D.IE_TIPO_CONTRATACAO='CA' THEN '4-ADESÃO' WHEN D.IE_TIPO_CONTRATACAO='CE' THEN '3-EMPRESARIAL' END , 
		CASE WHEN D.IE_REGULAMENTACAO='R' THEN 'Plano Não Regulamentado'  ELSE 'Plano Regulamentado' END , 
		upper(Obter_Valor_Dominio(1667,d.ie_abrangencia)), 
		c.nr_via_solicitacao, 
		d.nr_sequencia, 
		CASE WHEN D.IE_REGULAMENTACAO='R' THEN d.cd_scpa  ELSE d.nr_protocolo_ans END , 
		substr(replace(replace(replace(ds_trilha2,'%',''),'?',''),';',''),1,40), 
		f.cd_pf_estipulante, 
		b.CD_MATRICULA_ESTIPULANTE, 
		b.dt_contratacao 
	into STRICT	cd_usuario_plano_w, 
		nm_beneficiario_w, 
		dt_nascimento_w, 
		ds_produto_w, 
		ds_acomodacao_w, 
		dt_validade_carteira_w, 
		cd_cgc_estipulante_w, 
		tp_contratacao_w, 
		ds_registro_ans_w, 
		ds_abrangencia_w, 
		nr_via_solicitacao_w, 
		nr_seq_plano_w, 
		nr_protocolo_ans_w, 
		ds_trilha_2_w, 
		cd_pf_estipulante_w, 
		CD_MATRICULA_FAMILIAR_w, 
		dt_contratacao_w 
	from	pls_contrato		f, 
		pls_plano		d, 
		pls_segurado_carteira	c, 
		pls_segurado		b, 
		pessoa_fisica		a 
	where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica 
	and	c.nr_seq_segurado	= b.nr_sequencia 
	and	b.nr_seq_plano		= d.nr_sequencia	 
	and	b.nr_seq_contrato	= f.nr_sequencia 
	and	b.nr_sequencia		= nr_seq_segurado_w;
	 
	cd_usuario_plano_w	:= substr(cd_usuario_plano_w,1,1)||' '||substr(cd_usuario_plano_w,2,3)||' '||substr(cd_usuario_plano_w,5,12)||' '||substr(cd_usuario_plano_w,17,1);
	 
	nm_beneficiario_w	:= upper(nm_beneficiario_w);
	if (length(nm_beneficiario_w) < 25) then 
		nm_beneficiario_w	:= rpad(nm_beneficiario_w,25,' ');
	end if;	
	 
	if (coalesce(cd_pf_estipulante_w::text, '') = '') then 
		nm_empresa_w	:= substr(coalesce(obter_dados_pf_pj('',cd_cgc_estipulante_w,'ABV'),obter_dados_pf_pj('',cd_cgc_estipulante_w,'F')),1,18);
	else 
		nm_empresa_w	:= 'INDIV./FAMILIAR';
	end if;
	 
	ds_carencia_w	:= '';
	 
	nr_protocolo_ans_w	:= 'Cód. Prod. ANS na Unimed Contratada:'||nr_protocolo_ans_w;
	 
	open C05;
	loop 
	fetch C05 into	 
		dt_carencia_w, 
		ie_preenche_vazio_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin 
		 
		if (ie_preenche_vazio_w = 'N') then 
		 
			if (dt_carencia_w <> 'SEM CARÊNCIAS A CUMPRIR') and (to_date(dt_carencia_w) < clock_timestamp()) then 
				dt_carencia_w := 'SEM CARÊNCIAS A CUMPRIR';
			end if;
			 
			ds_carencia_w	:= ds_carencia_w||dt_carencia_w||';';
		else 
			ds_carencia_w	:= ds_carencia_w||';';
		end if;
		 
		end;
	end loop;
	close C05;
	 
	ds_carencia_w	:= substr(ds_carencia_w,1,length(ds_carencia_w)-2);
	 
	ds_mensagem_cpt_w	:= pls_obter_dados_cart_unimed(nr_seq_segurado_w, nr_seq_plano_w,'DCPT',6);
	ds_rede_atendimento_w	:= pls_obter_rede_ref_produto(nr_seq_plano_w,cd_estabelecimento_p,'C');
	 
	cd_local_cobranca_w	:= '244';
	 
	insert into w_pls_interface_carteira(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec, 
			nr_seq_lote,ie_tipo_reg,cd_usuario_plano,dt_nascimento,ds_tipo_contratacao, 
			dt_validade_carteira,nm_beneficiario,nm_plano,ds_abrangencia,NR_PROTOCOLO_ANS, 
			ds_registro_ans,ds_acomodacao,dt_cpt,ds_estipulante,ds_rede_atendimento, 
			ds_carencia,ds_trilha_2,nr_seq_segurado,nr_via_cartao,CD_MATRICULA_FAMILIAR, 
			cd_local_cobranca,ds_observacao) 
	values (	nextval('w_pls_interface_carteira_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p, 
			nr_seq_lote_p,3,cd_usuario_plano_w,dt_nascimento_w,tp_contratacao_w, 
			dt_validade_carteira_w,nm_beneficiario_w,ds_produto_w,ds_abrangencia_w,nr_protocolo_ans_w, 
			ds_registro_ans_w,ds_acomodacao_w,ds_mensagem_cpt_w,nm_empresa_w,ds_rede_atendimento_w, 
			ds_carencia_w,ds_trilha_2_w,nr_seq_segurado_w,nr_via_solicitacao_w,CD_MATRICULA_FAMILIAR_w, 
			cd_local_cobranca_w,to_char(ds_observacao_w));
	 
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_cart_unimed_ituverav ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

