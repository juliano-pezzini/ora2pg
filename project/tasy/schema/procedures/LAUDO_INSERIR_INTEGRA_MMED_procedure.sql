-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE laudo_inserir_integra_mmed ( nr_acesso_dicom_p bigint, ds_nome_diretorio_p text, ds_sigla_conselho_p text, ds_codigo_prof_p text, uf_conselho_p text, ds_laudo_p text ) AS $body$
DECLARE


nr_prescricao_w		bigint;
nr_seq_prescricao_w	bigint;

nr_sequencia_w		bigint;
nr_seq_imagem_w		bigint;
nr_laudo_w		bigint;
nr_atendimento_w	bigint;
cd_medico_resp_w	varchar(10) := null;
dt_entrada_unidade_w	timestamp;
ds_titulo_laudo_w	varchar(255);
nr_seq_propaci_w	bigint;
dt_procedimento_w	timestamp;
nr_seq_laudo_w		bigint;
nr_seq_proc_interno_w	bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
qt_procedimento_w	bigint;
cd_setor_atendimento_w	bigint;
dt_prev_execucao_w	timestamp;
cd_medico_exec_w	varchar(10);
ie_lado_w		varchar(15);
ds_laudo_copia_w	text;
nr_seq_laudo_ant_w	bigint;
nr_seq_laudo_atual_w	bigint;
cd_especialidade_w		integer;

ie_status_execucao_w	varchar(3);
nr_seq_conselho_w	bigint;

cd_medico_prescr_w	varchar(10);

nr_interno_conta_w	bigint;
ie_status_acerto_w	smallint;
nm_usuario_w		varchar(15);


BEGIN

CALL gravar_log_cdi(987,	'log01'||nr_acesso_dicom_p||'-'||
			ds_nome_diretorio_p||'-'||
			ds_sigla_conselho_p||'-'||
			ds_codigo_prof_p||'-'||
			uf_conselho_p||'-'||
			substr(ds_laudo_p,1,3500)
			,'tasy');
--commit;
if (nr_acesso_dicom_p IS NOT NULL AND nr_acesso_dicom_p::text <> '') and (ds_nome_diretorio_p IS NOT NULL AND ds_nome_diretorio_p::text <> '') then

	select	max(a.nr_prescricao),
		max(a.nr_sequencia),
		max(nr_seq_proc_interno),
		max(cd_procedimento),
		max(ie_origem_proced),
		max(qt_procedimento),
		max(cd_setor_atendimento),
		max(dt_prev_execucao),
		max(cd_medico_exec),
		max(coalesce(ie_lado,'A'))
	into STRICT	nr_prescricao_w,
		nr_seq_prescricao_w,
		nr_seq_proc_interno_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		qt_procedimento_w,
		cd_setor_atendimento_w,
		dt_prev_execucao_w,
		cd_medico_exec_w,
		ie_lado_w
	from	prescr_procedimento a
	where	a.nr_acesso_dicom = nr_acesso_dicom_p;


	/*--  Início busca o médico do conselho informado  --*/

	if	((ds_sigla_conselho_p = 'CRM') or (ds_sigla_conselho_p = 'CRO') or (ds_sigla_conselho_p = 'CRF')) then

		select 	max(cd_pessoa_fisica)
		into STRICT	cd_medico_resp_w
		from	medico
		where	nr_crm = ds_codigo_prof_p
		and	uf_crm = uf_conselho_p;


	end if;

	if (coalesce(cd_medico_resp_w::text, '') = '') then

		select	max(nr_sequencia)
		into STRICT	nr_seq_conselho_w
		from	conselho_profissional
		where	sg_conselho = ds_sigla_conselho_p;


		if (nr_seq_conselho_w IS NOT NULL AND nr_seq_conselho_w::text <> '') then

			select	max(cd_pessoa_fisica)
			into STRICT	cd_medico_resp_w
			from	pessoa_fisica
			where	nr_seq_conselho 	= nr_seq_conselho_w
			and	ds_codigo_prof		= ds_codigo_prof_p
			and	sg_emissora_ci		= uf_conselho_p;

		end if;

	end if;


	if (coalesce(cd_medico_resp_w::text, '') = '') then

		select	max(a.cd_medico)
		into STRICT	cd_medico_resp_w
		from	prescr_medica a
		where	a.nr_prescricao = nr_prescricao_w;

	end if;

	/*--  Fim busca o médico do conselho informado  --*/

	select	coalesce(max(a.nr_laudo),0)+1
	into STRICT	nr_laudo_w
	from	laudo_paciente a
	where	a.nr_prescricao = nr_prescricao_w;

	/*Executando a prescrição*/

	select	coalesce(max(a.nr_sequencia),0),
		max(a.nr_atendimento),
		max(a.dt_entrada_unidade),
		max(a.dt_procedimento)
	into STRICT	nr_seq_propaci_w,
		nr_atendimento_w,
		dt_entrada_unidade_w,
		dt_procedimento_w
	from	procedimento_paciente a, conta_paciente b
	where	a.nr_interno_conta = b.nr_interno_conta
	and		coalesce(b.ie_cancelamento::text, '') = ''
	and a.nr_prescricao		= nr_prescricao_w
	and	a.nr_sequencia_prescricao	= nr_seq_prescricao_w;

	if (nr_seq_propaci_w = 0) then
		begin

		CALL Gerar_Proc_Pac_item_Prescr(	nr_prescricao_w,
						nr_seq_prescricao_w,
						null,
						null,
						nr_seq_proc_interno_w,
						cd_procedimento_w,
						ie_origem_proced_w,
						qt_procedimento_w,
						cd_setor_atendimento_w,
						9,
						dt_prev_execucao_w,
						'Multimed',
						coalesce(cd_medico_resp_w, cd_medico_exec_w),
						null,
						ie_lado_w,
						null);

		select	max(nr_sequencia),
			max(nr_atendimento),
			max(dt_entrada_unidade),
			max(dt_procedimento),
			max(nr_interno_conta),
			max(nm_usuario)
		into STRICT	nr_seq_propaci_w,
			nr_atendimento_w,
			dt_entrada_unidade_w,
			dt_procedimento_w,
			nr_interno_conta_w,
			nm_usuario_w
		from	procedimento_paciente
		where	nr_prescricao		= nr_prescricao_w
		and	nr_sequencia_prescricao	= nr_seq_prescricao_w;

		CALL gerar_lancamento_automatico(nr_atendimento_w,
									null,
									34,
									'Multimed',
									nr_seq_propaci_w,
									null,
									null,
									null,
									null,
									nr_interno_conta_w);

		end;
	end if;

	select	nextval('laudo_paciente_seq')
	into STRICT	nr_seq_laudo_w
	;


	select	max(substr(obter_desc_prescr_proc_laudo(cd_procedimento, ie_origem_proced, nr_seq_proc_interno, ie_lado,  nr_seq_propaci_w),1,255))
	into STRICT	ds_titulo_laudo_w
	from	prescr_procedimento a
	where	a.nr_prescricao = nr_prescricao_w
	and	a.nr_sequencia	= nr_seq_prescricao_w;

	insert into laudo_paciente(
			nr_sequencia,
			nr_atendimento,
			dt_entrada_unidade,
			nr_laudo,
			nm_usuario,
			dt_atualizacao,
			cd_medico_resp,
			ds_titulo_laudo,
			dt_laudo,
			nr_prescricao,
			nr_seq_proc,
			nr_seq_prescricao,
			dt_liberacao,
			qt_imagem,
			ie_status_laudo,
			dt_exame,
			dt_integracao,
			ds_arquivo,
			ie_formato,
			ds_laudo
			)
		values (	nr_seq_laudo_w,
			nr_atendimento_w,
			dt_entrada_unidade_w,
			nr_laudo_w,
			'Multimed',
			clock_timestamp(),
			cd_medico_resp_w,
			ds_titulo_laudo_w,
			clock_timestamp(),
			nr_prescricao_w,
			nr_seq_propaci_w,
			nr_seq_prescricao_w,
			clock_timestamp(),
			0,
			'LL',
			dt_procedimento_w,
			clock_timestamp(),
			ds_nome_diretorio_p,
			3,
			ds_laudo_p
			);

	select 	max(ie_status_acerto)
	into STRICT	ie_status_acerto_w
	from 	conta_paciente
	where 	nr_interno_conta = nr_interno_conta_w;

	if (coalesce(ie_status_acerto_w,1) <> 2) then

		select	max(cd_medico)
		into STRICT	cd_medico_prescr_w
		from	prescr_medica
		where	nr_prescricao	= nr_prescricao_w;

		cd_especialidade_w := (obter_especialidade_medico(coalesce(cd_medico_resp_w,cd_medico_exec_w),'C'))::numeric;

		update	procedimento_paciente
		set	nr_laudo	   = nr_seq_laudo_w,
			cd_medico_req	   = cd_medico_prescr_w,
			cd_medico_executor = coalesce(cd_medico_exec_w, cd_medico_resp_w),
			cd_especialidade = cd_especialidade_w
		where	nr_sequencia	   = nr_seq_propaci_w;

	else

		CALL gravar_log_cdi(987, 'log02 conta '||nr_interno_conta_w||' com status 2, não pode ser alterada, nr_seq_proc'|| nr_seq_propaci_w,'tasy');

	end if;


	/* *****  Atualiza status execução na prescrição ***** */

	update	prescr_procedimento a
	set	a.ie_status_execucao 	= '40',
		a.dt_baixa = clock_timestamp(),
                a.cd_motivo_baixa = 1,
		a.nm_usuario 	= 'Multimed'
	where	a.nr_prescricao = nr_prescricao_w
	and	a.nr_sequencia  in (	SELECT	b.nr_sequencia_prescricao
					from	procedimento_paciente b
					where	b.nr_prescricao 	= a.nr_prescricao
					and	b.nr_sequencia_prescricao = a.nr_sequencia
					and	b.nr_laudo 		= nr_seq_prescricao_w);


	select 	max(ie_status_execucao)
	into STRICT	ie_status_execucao_w
	from	prescr_procedimento a
	where	a.nr_prescricao = nr_prescricao_w
	and	a.nr_sequencia  = nr_seq_prescricao_w;

	if (ie_status_execucao_w <> '40') then

		update	prescr_procedimento a
		set	a.ie_status_execucao = '40',
			a.dt_baixa = clock_timestamp(),
                        a.cd_motivo_baixa = 1,
			a.nm_usuario 	= 'Multimed'
		where	a.nr_prescricao = nr_prescricao_w
		and	a.nr_sequencia  in (	SELECT	b.nr_sequencia_prescricao
						from	procedimento_paciente b
						where	b.nr_prescricao = a.nr_prescricao
						and 	b.nr_prescricao = nr_prescricao_w
						and	b.nr_sequencia_prescricao = a.nr_sequencia
						and	b.nr_sequencia_prescricao = nr_seq_prescricao_w);
	end if;

	insert	into laudo_paciente_pdf(
		nr_sequencia,
		nr_acesso_dicom,
		nr_seq_laudo,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec
		)
	values (
		nextval('laudo_paciente_pdf_seq'),
		nr_acesso_dicom_p,
		nr_seq_laudo_w,
		clock_timestamp(),
		'Multimed',
		clock_timestamp(),
		'Multimed'
		);

end if;

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE laudo_inserir_integra_mmed ( nr_acesso_dicom_p bigint, ds_nome_diretorio_p text, ds_sigla_conselho_p text, ds_codigo_prof_p text, uf_conselho_p text, ds_laudo_p text ) FROM PUBLIC;

