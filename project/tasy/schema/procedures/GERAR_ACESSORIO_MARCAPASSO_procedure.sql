-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_acessorio_marcapasso ( ds_gerador_p text, qt_freq_magnetica_p bigint, qt_eri_p bigint, ds_eletr_atrial_p text, dt_impl_eletrodo_atrial_p timestamp, ds_eletr_ventricular_p text, dt_impl_eletr_ventricular_p timestamp, cd_profissional_p bigint, dt_inicio_p timestamp, ie_acao_p text, nr_seq_pac_acessorio_p bigint, nr_seq_cir_marcapasso_p bigint, ie_tabela_p text, nr_seq_nivel_seg_p bigint, cd_pessoa_fisica_p text ) AS $body$
DECLARE


const_acao_insert_w		constant varchar(1) := 'I';
const_acao_update_w		constant varchar(1) := 'U';
const_acao_delete_w		constant varchar(1) := 'D';
const_acao_release_w	constant varchar(1) := 'R';
const_acao_disable_w	constant varchar(2) := 'IN';
const_ie_situacao_w		constant varchar(1) := 'A';

const_cir_marcapasso_w		constant varchar(2) := 'CM';
const_paciente_acessorio_w	constant varchar(2) := 'PA';

nr_seq_cir_marca_w	cir_marcapasso.nr_sequencia%type;
ds_justificativa_w	paciente_acessorio.ds_justificativa%type;
nr_seq_marcapasso_w	paciente_acessorio.nr_sequencia%type;
nr_seq_acessorio_w	acessorio_paciente.nr_sequencia%type;
cd_modo_ritmo_w     paciente_acessorio.cd_modo_ritmo%type;


BEGIN

	if (const_paciente_acessorio_w = ie_tabela_p) then
		if (nr_seq_pac_acessorio_p IS NOT NULL AND nr_seq_pac_acessorio_p::text <> '') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_marcapasso_w
			from	cir_marcapasso
			where	nr_seq_pac_acessorio = nr_seq_pac_acessorio_p;

			select	max(ds_justificativa)
			into STRICT	ds_justificativa_w
			from	paciente_acessorio
			where	nr_sequencia = nr_seq_pac_acessorio_p;
		end if;

		if (ie_acao_p = const_acao_insert_w or (coalesce(nr_seq_marcapasso_w::text, '') = '' and ie_acao_p = const_acao_update_w)) then
			select	nextval('cir_marcapasso_seq')
			into STRICT	nr_seq_cir_marca_w
			;

			insert into cir_marcapasso(
				nr_sequencia,
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				nr_cirurgia, 
				ds_gerador, 
				dt_impl_gerador, 
				qt_freq_magnetica, 
				qt_eri, 
				ds_eletr_atrial, 
				dt_impl_eletrodo_atrial, 
				ds_eletr_ventricular, 
				dt_impl_eletr_ventricular, 
				cd_profissional,
				nr_seq_pac_acessorio, 
				ie_situacao
			) values (
				nr_seq_cir_marca_w,
				clock_timestamp(),
				wheb_usuario_pck.get_nm_usuario,
				clock_timestamp(),
				wheb_usuario_pck.get_nm_usuario,
				null,
				ds_gerador_p,
				dt_inicio_p,
				qt_freq_magnetica_p,
				qt_eri_p,
				ds_eletr_atrial_p,
				dt_impl_eletrodo_atrial_p,
				ds_eletr_ventricular_p,
				dt_impl_eletr_ventricular_p,
				cd_profissional_p,
				nr_seq_pac_acessorio_p,
				const_ie_situacao_w
			);

		elsif (ie_acao_p = const_acao_update_w) then
			update 	cir_marcapasso
			set		dt_atualizacao = clock_timestamp(),
					nm_usuario = wheb_usuario_pck.get_nm_usuario,
					ds_gerador = ds_gerador_p,
					dt_impl_gerador = dt_inicio_p,
					qt_freq_magnetica = qt_freq_magnetica_p, 
					qt_eri = qt_eri_p, 
					ds_eletr_atrial = ds_eletr_atrial_p, 
					dt_impl_eletrodo_atrial = dt_impl_eletrodo_atrial_p, 
					ds_eletr_ventricular = ds_eletr_ventricular_p, 
					dt_impl_eletr_ventricular = dt_impl_eletr_ventricular_p, 
					cd_profissional = cd_profissional_p
			where	nr_sequencia = nr_seq_marcapasso_w;
			
		elsif (ie_acao_p = const_acao_delete_w) then
			delete	FROM cir_marcapasso
			where	nr_sequencia = nr_seq_marcapasso_w;
		
		elsif (ie_acao_p = const_acao_release_w) then
			update	cir_marcapasso
			set		dt_liberacao = clock_timestamp()
			where	nr_sequencia = nr_seq_marcapasso_w;
			
		elsif (ie_acao_p = const_acao_disable_w) then
			update	cir_marcapasso
			set		nm_usuario_inativacao = wheb_usuario_pck.get_nm_usuario,
					dt_inativacao = clock_timestamp(),
					ie_situacao = 'I',
					ds_justificativa = ds_justificativa_w
			where	nr_sequencia = nr_seq_marcapasso_w;
		end if;
		
	elsif (const_cir_marcapasso_w = ie_tabela_p) then
		if (ie_acao_p = const_acao_insert_w or (coalesce(nr_seq_pac_acessorio_p::text, '') = '' and ie_acao_p = const_acao_update_w)) then

			select	nextval('paciente_acessorio_seq')
			into STRICT	nr_seq_marcapasso_w
			;

			select	max(nr_sequencia) nr_seq_acessorio
			into STRICT	nr_seq_acessorio_w
			from  	acessorio_paciente
			where	ie_situacao = const_ie_situacao_w
			and	    ie_tipo_acessorio = 'MAR';

			select	max(cd_modo_ritmo)
			into STRICT	cd_modo_ritmo_w
			from	cir_marcapasso
			where	nr_sequencia = nr_seq_cir_marcapasso_p;
			
			insert into paciente_acessorio(
				nr_sequencia,
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				nr_seq_acessorio, 
				cd_profissional, 
				dt_registro, 
				cd_pessoa_fisica, 
				ie_situacao, 
				nr_seq_nivel_seg, 
				dt_inicio,
				cd_modo_ritmo,
				ie_proposito
			) values (
				nr_seq_marcapasso_w,
				clock_timestamp(),
				wheb_usuario_pck.get_nm_usuario,
				clock_timestamp(),
				wheb_usuario_pck.get_nm_usuario,
				nr_seq_acessorio_w,
				cd_profissional_p,
				clock_timestamp(),
				cd_pessoa_fisica_p,
				const_ie_situacao_w,
				nr_seq_nivel_seg_p,
				dt_inicio_p,
				cd_modo_ritmo_w,
				'0'
			);
			
			update	cir_marcapasso
			set		nr_seq_pac_acessorio = nr_seq_marcapasso_w
			where	nr_sequencia = nr_seq_cir_marcapasso_p;
			
		elsif (ie_acao_p = const_acao_update_w) then
			update	paciente_acessorio
			set		cd_profissional = cd_profissional_p,
					nr_seq_nivel_seg = nr_seq_nivel_seg_p,
					dt_inicio = dt_inicio_p
			where	nr_sequencia = nr_seq_pac_acessorio_p;

		elsif (ie_acao_p = const_acao_delete_w) then
			delete	FROM paciente_acessorio
			where	nr_sequencia = nr_seq_pac_acessorio_p;
		
		elsif (ie_acao_p = const_acao_release_w) then
			update	paciente_acessorio
			set		dt_liberacao = clock_timestamp(),
					nm_usuario_liberacao = wheb_usuario_pck.get_nm_usuario
			where	nr_sequencia = nr_seq_pac_acessorio_p;
			
		elsif (ie_acao_p = const_acao_disable_w) then
			select	max(ds_justificativa)
			into STRICT	ds_justificativa_w
			from	cir_marcapasso
			where	nr_sequencia = nr_seq_cir_marcapasso_p;
		
			update	paciente_acessorio
			set		nm_usuario_inativacao = wheb_usuario_pck.get_nm_usuario,
					dt_inativacao = clock_timestamp(),
					ie_situacao = 'I',
					ds_justificativa = ds_justificativa_w
			where	nr_sequencia = nr_seq_pac_acessorio_p;
			
		end if;
	end if;

	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then
		commit;
	end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_acessorio_marcapasso ( ds_gerador_p text, qt_freq_magnetica_p bigint, qt_eri_p bigint, ds_eletr_atrial_p text, dt_impl_eletrodo_atrial_p timestamp, ds_eletr_ventricular_p text, dt_impl_eletr_ventricular_p timestamp, cd_profissional_p bigint, dt_inicio_p timestamp, ie_acao_p text, nr_seq_pac_acessorio_p bigint, nr_seq_cir_marcapasso_p bigint, ie_tabela_p text, nr_seq_nivel_seg_p bigint, cd_pessoa_fisica_p text ) FROM PUBLIC;

