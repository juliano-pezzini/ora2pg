-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_gerar_os_incid_banco ( ie_evento_p bigint, nm_usuario_p text, ds_dano_breve_p text,/*Não utilizado*/
 ds_dano_p text, ds_historico_p text, ds_module_p text, ds_client_info_p text, /*Não tratado*/
 ds_arquivo_anexo_p text, nr_seq_ordem_serv_p INOUT bigint, ds_dir_anexo_p INOUT text) AS $body$
DECLARE

 
 
cd_pessoa_solicitante_w		varchar(10);
nr_seq_localizacao_w		bigint;
nr_seq_equipamento_w		bigint;
ds_dano_breve_w			varchar(80);
ie_prioridade_w			varchar(01);
ie_tipo_ordem_w			integer;
nr_seq_ordem_serv_w		bigint;
dt_fim_desejado_w			timestamp;
nr_seq_grupo_trabalho_w		bigint;
nr_seq_grupo_planejamento_w	bigint;
nm_usuario_exec_w		varchar(15);
nr_seq_estagio_w			bigint;
nr_sequencia_w			bigint;
qt_registro_w			bigint;
cd_funcao_w			bigint;
qt_caracter_w			bigint;
ds_historico_w			varchar(32764);
ie_grau_satisfacao_w		varchar(3);
ie_forma_receb_w			varchar(01);
nr_seq_origem_dano_w		bigint;

C01 CURSOR FOR 
SELECT	nm_usuario_exec 
from	man_regra_os_incid_exec 
where	nr_seq_regra	= nr_sequencia_w;


BEGIN 
 
/*busca a regra do evento recebido*/
 
select	max(nr_sequencia) 
into STRICT	nr_sequencia_w 
from	man_regra_os_incid_banco 
where	ie_evento = ie_evento_p;
 
if (ds_arquivo_anexo_p IS NOT NULL AND ds_arquivo_anexo_p::text <> '') then 
	ds_dir_anexo_p := obter_param_usuario(299, 8, obter_perfil_Ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ds_dir_anexo_p);
	if (substr(ds_dir_anexo_p,length(ds_dir_anexo_p),1) != '\') then 
		ds_dir_anexo_p := ds_dir_anexo_p || '\';
	end if;
end if;
 
 
 
qt_caracter_w	:= length(ds_historico_p);
 
if (qt_caracter_w > 32000) then 
	qt_caracter_w := 32000;
end if;
 
 
 
ds_historico_w := substr(ds_historico_p,1,qt_caracter_w);
 
 
 
ds_historico_w := replace(ds_historico_w,chr(13), ' \par ');
ds_historico_w := replace(ds_historico_w,chr(10), ' ');
ds_historico_w := replace(ds_historico_w,chr(0), ' \par\par ');
 
ds_historico_w :=  '{\rtf1\ansi\deff0{\fonttbl{\f0\fnil\fcharset0 Courier New;}{\f1\fnil\fcharset0 Calibri;}{\f2\fnil\fcharset0 Arial;}}'|| 
		'{\colortbl ;\red0\green0\blue128;}'|| 
		'\viewkind4\uc1\pard\cf1\lang1046\f0\fs20 '|| ds_historico_w || ' \par \f1\fs20\f2 }';
 
 
		 
if (coalesce(nr_sequencia_w,0) > 0) then 
	begin 
	/*busca as informações da regra encontrada*/
 
	select	coalesce(cd_pessoa_solicitante, substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,10)), 
		nr_seq_localizacao, 
		nr_seq_equipamento, 
		--nvl(ds_dano_breve_p, ds_dano_breve), 
		ds_dano_breve, 
		ie_prioridade, 
		ie_tipo_ordem, 
		nr_seq_grupo_trabalho, 
		nr_seq_grupo_planejamento, 
		nr_seq_estagio_inicial, 
		ie_grau_satisfacao, 
		ie_forma_receb, 
		nr_seq_origem_dano		 
	into STRICT	cd_pessoa_solicitante_w, 
		nr_seq_localizacao_w, 
		nr_seq_equipamento_w, 
		ds_dano_breve_w, 
		ie_prioridade_w, 
		ie_tipo_ordem_w, 
		nr_seq_grupo_trabalho_w, 
		nr_seq_grupo_planejamento_w, 
		nr_seq_estagio_w, 
		ie_grau_satisfacao_w, 
		ie_forma_receb_w, 
		nr_seq_origem_dano_w 
	from	man_regra_os_incid_banco 
	where	nr_sequencia = nr_sequencia_w;
 
	/*Se existir uma OS aberta com mesmo dano, atualiza a OS, senão cria uma nova*/
 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_ordem_Serv_w 
	from	man_ordem_servico 
	where	ie_status_ordem <> '3' 
	and	ds_dano = ds_dano_p;
	 
	if (coalesce(nr_seq_ordem_serv_w,0) > 0) then 
		begin 
		if (coalesce(ds_historico_w,'X') <> 'X') then 
			insert into man_ordem_serv_tecnico( 
					nr_sequencia, 
					nr_seq_ordem_serv, 
					dt_atualizacao, 
					nm_usuario, 
					ds_relat_tecnico, 
					dt_historico, 
					ie_origem, 
					dt_liberacao, 
					nm_usuario_lib) 
				values (	nextval('man_ordem_serv_tecnico_seq'), 
					nr_seq_ordem_serv_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					ds_historico_w, 
					clock_timestamp(), 
					'I', 
					clock_timestamp(), 
					nm_usuario_p);
		end if;
		/*Atualiza o estágio da OS existente com o estágio da regra*/
 
		if (coalesce(nr_seq_estagio_w,0) > 0) then 
			update	man_ordem_servico 
			set	nr_seq_estagio 	= nr_seq_estagio_w 
			where	nr_sequencia	= nr_seq_ordem_serv_w;
		end if;
		end;
	else 
		begin 
		 
		/*Obter a função do comando*/
 
		select	coalesce(max(cd_funcao),6001) 
		into STRICT	cd_funcao_w 
		from	funcao 
		where	upper(ds_form) like trim(both upper(substr(ds_module_p,position(' ' in ds_module_p),length(ds_module_p)))) 
		and	ie_situacao = 'A';
		 
		select	nextval('man_ordem_servico_seq') 
		into STRICT	nr_seq_ordem_serv_w 
		;
 
		if (ie_prioridade_w = 'E') then 
			dt_fim_desejado_w := trunc(clock_timestamp(),'dd') + 18/24;
		elsif (ie_prioridade_w = 'A') then 
			dt_fim_desejado_w := clock_timestamp() + interval '7 days';
		elsif (ie_prioridade_w = 'M') then 
			dt_fim_desejado_w := clock_timestamp() + interval '14 days';
		elsif (ie_prioridade_w = 'B') then 
			dt_fim_desejado_w := clock_timestamp() + interval '30 days';
		end if;
		  
		insert into man_ordem_servico( 
				nr_sequencia, 
				nr_seq_localizacao, 
				nr_seq_equipamento, 
				cd_pessoa_solicitante, 
				dt_ordem_servico, 
				ie_prioridade, 
				ie_parado, 
				ds_dano_breve, 
				dt_atualizacao, 
				nm_usuario, 
				ds_dano, 
				ie_tipo_ordem, 
				nr_grupo_planej, 
				nr_grupo_trabalho, 
				ie_status_ordem, 
				dt_inicio_desejado, 
				dt_conclusao_desejada, 
				ie_origem_os, 
				nr_seq_estagio, 
				cd_funcao, 
				ie_classificacao, 
				nr_seq_regra_incid_banco, 
				ie_grau_satisfacao, 
				ie_forma_receb, 
				nr_seq_origem_dano) 
			values (	nr_seq_ordem_serv_w, 
				nr_seq_localizacao_w, 
				nr_seq_equipamento_w, 
				cd_pessoa_solicitante_w, 
				clock_timestamp(), 
				coalesce(ie_prioridade_w,'M'), 
				'N', 
				ds_dano_breve_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				ds_dano_p, 
				coalesce(ie_tipo_ordem_w,'1'), 
				nr_seq_grupo_planejamento_w, 
				nr_seq_grupo_trabalho_w, 
				1, 
				clock_timestamp(), 
				dt_fim_desejado_w, 
				'4', 
				nr_seq_estagio_w, 
				cd_funcao_w, 
				'S', 
				nr_sequencia_w, 
				ie_grau_satisfacao_w, 
				ie_forma_receb_w, 
				nr_seq_origem_dano_w);
 
		if (coalesce(ds_historico_w,'X') <> 'X') then 
			insert into man_ordem_serv_tecnico( 
					nr_sequencia, 
					nr_seq_ordem_serv, 
					dt_atualizacao, 
					nm_usuario, 
					ds_relat_tecnico, 
					dt_historico, 
					ie_origem, 
					dt_liberacao, 
					nm_usuario_lib) 
				values (	nextval('man_ordem_serv_tecnico_seq'), 
					nr_seq_ordem_serv_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					ds_historico_w, 
					clock_timestamp(), 
					'I', 
					clock_timestamp(), 
					nm_usuario_p);
		end if;
				 
		open C01;
		loop 
		fetch C01 into	 
			nm_usuario_exec_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			insert into man_ordem_servico_exec( 
						nr_sequencia, 
						nr_seq_ordem, 
						dt_atualizacao, 
						nm_usuario, 
						nm_usuario_exec) 
					values (	nextval('man_ordem_servico_exec_seq'), 
						nr_seq_ordem_serv_w, 
						clock_timestamp(), 
						nm_usuario_p, 
						nm_usuario_exec_w);
			end;
		end loop;
		close C01;
		end;
	end if;
	nr_seq_ordem_serv_p	:= nr_seq_ordem_serv_w;
	 
	if (ds_arquivo_anexo_p IS NOT NULL AND ds_arquivo_anexo_p::text <> '') then 
	 
		select 	count(*) 
		into STRICT	qt_registro_w 
		from	man_ordem_serv_arq 
		where	nr_seq_ordem = nr_seq_ordem_serv_p 
		and		upper(ds_arquivo) like upper(ds_dir_anexo_p||ds_arquivo_anexo_p);
		 
		 
		if (qt_registro_w = 0) then 
			insert into man_ordem_serv_arq( 
				nr_sequencia, 
				nr_seq_ordem, 
				dt_atualizacao, 
				nm_usuario,       
				ds_arquivo, 
				ie_anexar_email, 
				ie_status_anexo, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec 
			) values ( 
				nextval('man_ordem_serv_arq_seq'), 
				nr_seq_ordem_serv_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				ds_dir_anexo_p||ds_arquivo_anexo_p, 
				'S', 
				null, 
				clock_timestamp(), 
				nm_usuario_p 
			);
		end if;
	end if;
	end;
end if;
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_gerar_os_incid_banco ( ie_evento_p bigint, nm_usuario_p text, ds_dano_breve_p text, ds_dano_p text, ds_historico_p text, ds_module_p text, ds_client_info_p text,  ds_arquivo_anexo_p text, nr_seq_ordem_serv_p INOUT bigint, ds_dir_anexo_p INOUT text) FROM PUBLIC;

