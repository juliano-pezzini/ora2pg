-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_consumo_mensal ( cd_estabelecimento_p bigint, cd_local_estoque_p bigint, cd_centro_custo_p bigint, dt_mesano_movto_p timestamp, dt_mesano_saldo_p timestamp, qt_meses_p bigint, ie_restringe_cc_p text, ie_conv_comercial_p text, ie_quebra_local_p text, ie_quebra_cc_p text, ie_consumo_p text, nm_usuario_p text) AS $body$
DECLARE


cd_material_w			integer;
cd_local_estoque_w		smallint;
cd_centro_custo_w			integer;
qt_mes0_w			double precision;
qt_mes1_w			double precision;
qt_mes2_w			double precision;
qt_mes3_w			double precision;
qt_mes4_w			double precision;
qt_mes5_w			double precision;
qt_mes6_w			double precision;
qt_mes7_w			double precision;
qt_mes8_w			double precision;
qt_mes9_w			double precision;
qt_mes10_w			double precision;
qt_mes11_w			double precision;
qt_mes12_w			double precision;
qt_saldo_atual_w			double precision;
vl_custo_medio_w			double precision;
qt_media_w			double precision;
ie_consumo_w			varchar(1)	:= ie_consumo_p;
nr_sequencia_w			bigint;

C01 CURSOR FOR
/* Primeiro union OS22512*/

SELECT	cd_material,
	CASE WHEN ie_quebra_local_p='S' THEN cd_local_estoque  ELSE cd_local_estoque_p END ,
	CASE WHEN ie_quebra_cc_p='S' THEN cd_centro_custo  ELSE cd_centro_custo_p END ,
	sum(CASE WHEN dt_mesano_referencia=dt_mesano_movto_p THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 1, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 2, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 3, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 4, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 5, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 6, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 7, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 8, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 9, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 10, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 11, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 12, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END )
from 	operacao_estoque b,
	movto_estoque_operacao_v a
where	a.cd_operacao_estoque 	= b.cd_operacao_estoque
and	cd_estabelecimento 	= cd_estabelecimento_p
and (coalesce(cd_local_estoque_p::text, '') = '' or cd_local_estoque = cd_local_estoque_p)
and (coalesce(cd_centro_custo_p::text, '') = '' or cd_centro_custo = cd_centro_custo_p)
and	dt_mesano_referencia between PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - qt_meses_p, 0) and dt_mesano_movto_p
and	((coalesce(ie_restringe_cc_p,'N') = 'N') or (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> ''))
and	ie_consumo_w		= 'P'
and	b.ie_tipo_requisicao	in (3,4,9)
group by
	cd_material,
	CASE WHEN ie_quebra_local_p='S' THEN cd_local_estoque  ELSE cd_local_estoque_p END ,
	CASE WHEN ie_quebra_cc_p='S' THEN cd_centro_custo  ELSE cd_centro_custo_p END

union

select	cd_material,
	CASE WHEN ie_quebra_local_p='S' THEN cd_local_estoque  ELSE cd_local_estoque_p END ,
	CASE WHEN ie_quebra_cc_p='S' THEN cd_centro_custo  ELSE cd_centro_custo_p END ,
	sum(CASE WHEN dt_mesano_referencia=dt_mesano_movto_p THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 1, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 2, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 3, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 4, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 5, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 6, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 7, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 8, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 9, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 10, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 11, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 12, 0) THEN  coalesce(a.qt_consumo,0)  ELSE 0 END )
from 	operacao_estoque b,
	movto_estoque_operacao_v a
where	a.cd_operacao_estoque 	= b.cd_operacao_estoque
and	cd_estabelecimento 	= cd_estabelecimento_p
and (coalesce(cd_local_estoque_p::text, '') = '' or cd_local_estoque = cd_local_estoque_p)
and (coalesce(cd_centro_custo_p::text, '') = '' or cd_centro_custo = cd_centro_custo_p)
and	dt_mesano_referencia between PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - qt_meses_p, 0) and dt_mesano_movto_p
and	((coalesce(ie_restringe_cc_p,'N') = 'N') or (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> ''))
and	ie_consumo_w		= 'C'
group by
	cd_material,
	CASE WHEN ie_quebra_local_p='S' THEN cd_local_estoque  ELSE cd_local_estoque_p END ,
	CASE WHEN ie_quebra_cc_p='S' THEN cd_centro_custo  ELSE cd_centro_custo_p END 

union

select	cd_material,
	CASE WHEN ie_quebra_local_p='S' THEN cd_local_estoque  ELSE cd_local_estoque_p END ,
	CASE WHEN ie_quebra_cc_p='S' THEN cd_centro_custo  ELSE cd_centro_custo_p END ,
	sum(CASE WHEN dt_mesano_referencia=dt_mesano_movto_p THEN (coalesce(a.qt_consumo,0) + coalesce(a.qt_transf,0))  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 1, 0) THEN (coalesce(a.qt_consumo,0) + coalesce(a.qt_transf,0))  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 2, 0) THEN (coalesce(a.qt_consumo,0) + coalesce(a.qt_transf,0))  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 3, 0) THEN (coalesce(a.qt_consumo,0) + coalesce(a.qt_transf,0))  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 4, 0) THEN (coalesce(a.qt_consumo,0) + coalesce(a.qt_transf,0))  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 5, 0) THEN (coalesce(a.qt_consumo,0) + coalesce(a.qt_transf,0))  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 6, 0) THEN (coalesce(a.qt_consumo,0) + coalesce(a.qt_transf,0))  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 7, 0) THEN (coalesce(a.qt_consumo,0) + coalesce(a.qt_transf,0))  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 8, 0) THEN (coalesce(a.qt_consumo,0) + coalesce(a.qt_transf,0))  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 9, 0) THEN (coalesce(a.qt_consumo,0) + coalesce(a.qt_transf,0))  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 10, 0) THEN (coalesce(a.qt_consumo,0) + coalesce(a.qt_transf,0))  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 11, 0) THEN (coalesce(a.qt_consumo,0) + coalesce(a.qt_transf,0))  ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 12, 0) THEN (coalesce(a.qt_consumo,0) + coalesce(a.qt_transf,0))  ELSE 0 END )
from 	operacao_estoque b,
	movto_estoque_operacao_v a
where	a.cd_operacao_estoque 	= b.cd_operacao_estoque
and	cd_estabelecimento 	= cd_estabelecimento_p
and (coalesce(cd_local_estoque_p::text, '') = '' or cd_local_estoque = cd_local_estoque_p)
and (coalesce(cd_centro_custo_p::text, '') = '' or cd_centro_custo = cd_centro_custo_p)
and	dt_mesano_referencia between PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - qt_meses_p, 0) and dt_mesano_movto_p
and	((coalesce(ie_restringe_cc_p,'N') = 'N') or (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> ''))
and	ie_consumo_w		= 'T'
group by
	cd_material,
	CASE WHEN ie_quebra_local_p='S' THEN cd_local_estoque  ELSE cd_local_estoque_p END ,
	CASE WHEN ie_quebra_cc_p='S' THEN cd_centro_custo  ELSE cd_centro_custo_p END 

union

select	cd_material,
	CASE WHEN ie_quebra_local_p='S' THEN cd_local_estoque  ELSE cd_local_estoque_p END ,
	CASE WHEN ie_quebra_cc_p='S' THEN cd_centro_custo  ELSE cd_centro_custo_p END ,
	sum(CASE WHEN dt_mesano_referencia=dt_mesano_movto_p THEN  CASE WHEN ie_consumo_w='E' THEN  qt_consumo_entrada  ELSE qt_consumo_saida END   ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 1, 0) THEN 		CASE WHEN ie_consumo_w='E' THEN  qt_consumo_entrada  ELSE qt_consumo_saida END   ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 2, 0) THEN 		CASE WHEN ie_consumo_w='E' THEN  qt_consumo_entrada  ELSE qt_consumo_saida END   ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 3, 0) THEN 		CASE WHEN ie_consumo_w='E' THEN  qt_consumo_entrada  ELSE qt_consumo_saida END   ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 4, 0) THEN 		CASE WHEN ie_consumo_w='E' THEN  qt_consumo_entrada  ELSE qt_consumo_saida END   ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 5, 0) THEN 		CASE WHEN ie_consumo_w='E' THEN  qt_consumo_entrada  ELSE qt_consumo_saida END   ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 6, 0) THEN 		CASE WHEN ie_consumo_w='E' THEN  qt_consumo_entrada  ELSE qt_consumo_saida END   ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 7, 0) THEN 		CASE WHEN ie_consumo_w='E' THEN  qt_consumo_entrada  ELSE qt_consumo_saida END   ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 8, 0) THEN 		CASE WHEN ie_consumo_w='E' THEN  qt_consumo_entrada  ELSE qt_consumo_saida END   ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 9, 0) THEN 		CASE WHEN ie_consumo_w='E' THEN  qt_consumo_entrada  ELSE qt_consumo_saida END   ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 10, 0) THEN 		CASE WHEN ie_consumo_w='E' THEN  qt_consumo_entrada  ELSE qt_consumo_saida END   ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 11, 0) THEN 		CASE WHEN ie_consumo_w='E' THEN  qt_consumo_entrada  ELSE qt_consumo_saida END   ELSE 0 END ),
	sum(CASE WHEN dt_mesano_referencia=PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - 12, 0) THEN 		CASE WHEN ie_consumo_w='E' THEN  qt_consumo_entrada  ELSE qt_consumo_saida END   ELSE 0 END )
from 	operacao_estoque b,
	movto_estoque_operacao_v a
where	a.cd_operacao_estoque 	= b.cd_operacao_estoque
and	cd_estabelecimento 	= cd_estabelecimento_p
and (coalesce(cd_local_estoque_p::text, '') = '' or cd_local_estoque = cd_local_estoque_p)
and (coalesce(cd_centro_custo_p::text, '') = '' or cd_centro_custo = cd_centro_custo_p)
and	dt_mesano_referencia between PKG_DATE_UTILS.ADD_MONTH(dt_mesano_movto_p, - qt_meses_p, 0) and dt_mesano_movto_p
and	((coalesce(ie_restringe_cc_p,'N') = 'N') or (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> ''))
and	ie_consumo_w		in ('E','S')
group by
	cd_material,
	CASE WHEN ie_quebra_local_p='S' THEN cd_local_estoque  ELSE cd_local_estoque_p END ,
	CASE WHEN ie_quebra_cc_p='S' THEN cd_centro_custo  ELSE cd_centro_custo_p END;

C02 CURSOR FOR
	SELECT	cd_material,
		CASE WHEN ie_quebra_local_p='S' THEN cd_local_estoque  ELSE cd_local_estoque_p END , coalesce(sum(qt_estoque),0),
			coalesce(avg(vl_custo_medio),0)
	from	saldo_estoque a
	where	cd_estabelecimento = cd_estabelecimento_p
	and	coalesce(cd_local_estoque_p, cd_local_estoque) = cd_local_estoque
	and	dt_mesano_referencia = dt_mesano_saldo_p
	and	not exists (
		SELECT	1
		from	w_consumo_mensal b
		where	b.cd_material = a.cd_material
		and	b.cd_local_estoque = a.cd_local_estoque
		or	coalesce(b.cd_local_estoque::text, '') = '')
	group by
		cd_material,
		CASE WHEN ie_quebra_local_p='S' THEN cd_local_estoque  ELSE cd_local_estoque_p END;


BEGIN

delete FROM w_consumo_mensal;

open C01;
loop
	fetch C01 into	cd_material_w,
				cd_local_estoque_w,
				cd_centro_custo_w,
				qt_mes0_w,
				qt_mes1_w,
				qt_mes2_w,
				qt_mes3_w,
				qt_mes4_w,
				qt_mes5_w,
				qt_mes6_w,
				qt_mes7_w,
				qt_mes8_w,
				qt_mes9_w,
				qt_mes10_w,
				qt_mes11_w,
				qt_mes12_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */

		begin
		select	coalesce(sum(qt_estoque),0),
			coalesce(avg(vl_custo_medio),0)
		into STRICT	qt_saldo_atual_w,
			vl_custo_medio_w
		from	saldo_estoque
		where	cd_estabelecimento = cd_estabelecimento_p
		and	cd_local_estoque = coalesce(cd_local_estoque_w, cd_local_estoque)
		and	dt_mesano_referencia = dt_mesano_saldo_p
		and	cd_material = cd_material_w;
		exception
			when others then
				qt_saldo_atual_w := 0;
				vl_custo_medio_w := 0;
		end;

		select	nextval('w_consumo_mensal_seq')
		into STRICT	nr_sequencia_w
		;

		qt_media_w := (	qt_mes1_w + qt_mes2_w + qt_mes3_w +
					qt_mes4_w + qt_mes5_w +	qt_mes6_w + qt_mes7_w + qt_mes8_w +
					qt_mes9_w + qt_mes10_w + qt_mes11_w + qt_mes12_w) / qt_meses_p;

		insert into w_consumo_mensal(	cd_material, cd_material_comercial,
							cd_local_estoque, cd_centro_custo,qt_mes0, qt_mes1,
							qt_mes2, qt_mes3, qt_mes4, qt_mes5,
							qt_mes6, qt_mes7, qt_mes8, qt_mes9,
							qt_mes10, qt_mes11, qt_mes12,
							qt_saldo_atual, vl_custo_medio, qt_media,
							dt_atualizacao, nm_usuario, nr_sequencia)
					values (	cd_material_w,
							CASE WHEN ie_conv_comercial_p='S' THEN 							obter_mat_comercial(cd_material_w,'C')  ELSE cd_material_w END ,
							cd_local_estoque_w, cd_centro_custo_w, qt_mes0_w, qt_mes1_w,
							qt_mes2_w, qt_mes3_w, qt_mes4_w, qt_mes5_w,
							qt_mes6_w, qt_mes7_w, qt_mes8_w, qt_mes9_w,
							qt_mes10_w, qt_mes11_w, qt_mes12_w,
							qt_saldo_atual_w, vl_custo_medio_w, qt_media_w,
							clock_timestamp(), nm_usuario_p, nr_sequencia_w);
end loop;
close C01;

open C02;
loop
	fetch C02 into	cd_material_w,
				cd_local_estoque_w,
				qt_saldo_atual_w,
				vl_custo_medio_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */

	select nextval('w_consumo_mensal_seq')
	into STRICT	nr_sequencia_w
	;

		insert into w_consumo_mensal(	cd_material, cd_material_comercial,
							cd_local_estoque, cd_centro_custo, qt_mes0, qt_mes1,
							qt_mes2, qt_mes3, qt_mes4, qt_mes5,
							qt_mes6, qt_mes7, qt_mes8, qt_mes9,
							qt_mes10, qt_mes11, qt_mes12,
							qt_saldo_atual, vl_custo_medio, qt_media,
							dt_atualizacao, nm_usuario, nr_sequencia)
					values (	cd_material_w,
							CASE WHEN ie_conv_comercial_p='S' THEN 							 obter_mat_comercial(cd_material_w,'C')  ELSE cd_material_w END ,
							cd_local_estoque_w, cd_centro_custo_w, 0, 0,
							0, 0, 0, 0,
							0, 0, 0, 0,
							0, 0, 0,
							qt_saldo_atual_w, vl_custo_medio_w, 0, clock_timestamp(), nm_usuario_p, nr_sequencia_w);
end loop;
close C02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_consumo_mensal ( cd_estabelecimento_p bigint, cd_local_estoque_p bigint, cd_centro_custo_p bigint, dt_mesano_movto_p timestamp, dt_mesano_saldo_p timestamp, qt_meses_p bigint, ie_restringe_cc_p text, ie_conv_comercial_p text, ie_quebra_local_p text, ie_quebra_cc_p text, ie_consumo_p text, nm_usuario_p text) FROM PUBLIC;

