-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_gerar_itens_prescricao ( nr_atendimento_p atendimento_paciente.nr_atendimento%type, nr_prescricao_p prescr_medica.nr_prescricao%type, dt_referencia_p timestamp, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, cd_perfil_p perfil.cd_perfil%type, cd_setor_atendimento_p setor_atendimento.cd_setor_atendimento%type, nm_usuario_p usuario.nm_usuario%type, itens_liberar_p text, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type default null, ie_interv_farmacia_p text default 'N', ie_copia_diaria_p char default 'N', nr_prescricao_out_p INOUT prescr_medica.nr_prescricao%type DEFAULT NULL, ie_copia_sem_lib_enf_farm_p text default 'N', ie_disp_semanal_p text default 'N') AS $body$
DECLARE


ie_check_sem_apresent_w    boolean := false;
ie_possui_dieta_w      char(1):='N';
ds_erro_w          varchar(2000);
ds_usuario_w         varchar(2000);
ds_perfil_w          varchar(2000);
ds_proced_glosa_w      varchar(2000);
ie_opcao_prescr_ww      varchar(4000);
ie_opcao_prescr_w      varchar(255);
item_w            varchar(255);
nr_seq_reg_item_w      bigint;
nr_seq_rep_w        bigint;
nr_count_w          bigint;
i              smallint;
nr_seq_evento_w        regra_envio_sms.nr_seq_evento%type;
cd_perfil_w          perfil.cd_perfil%type;
ie_origem_inf_w        prescr_medica.ie_origem_inf%type;
dt_inicio_prescr_w      prescr_medica.dt_primeiro_horario%type:=dt_referencia_p;
dt_prim_hor_ret_w      prescr_medica.dt_primeiro_horario%type;
dt_prim_horario_item_w    prescr_medica.dt_primeiro_horario%type;
nr_horas_validade_w      prescr_medica.nr_horas_validade%type;
nr_seq_pend_pac_acao_w    prescr_medica.nr_seq_pend_pac_acao%type:=null;
dt_validade_prescr_w    prescr_medica.dt_validade_prescr%type;
cd_setor_prescr_w      setor_atendimento.cd_setor_atendimento%type:=cd_setor_atendimento_p;
nr_seq_agrupamento_w    setor_atendimento.nr_seq_agrupamento%type;
cd_pf_usuario_w        pessoa_fisica.cd_pessoa_fisica%type;
cd_pessoa_fisica_w      pessoa_fisica.cd_pessoa_fisica%type;
cd_convenio_w        convenio.cd_convenio%type;
nr_seq_jejum_w        rep_jejum.nr_sequencia%type;
dt_fim_w          cpoe_dieta.dt_fim%type;
ie_gerar_kit_proc_w      varchar(5);
ie_gerar_prescr_evol_w    varchar(1);
cd_evolucao_w bigint;
sql_w                 varchar(200);
nr_horas_val_a_w      prescr_medica.nr_horas_validade%type;
nr_horas_val_b_w      prescr_medica.nr_horas_validade%type;

c01 CURSOR FOR
  SELECT  nr_seq_evento
  from  regra_envio_sms
  where  cd_estabelecimento  = cd_estabelecimento_p
  and  ie_evento_disp = 'ECPOE'
  and  coalesce(ie_situacao,'A') = 'A';


BEGIN
if (cd_perfil_p   > 0) then
  cd_perfil_w  := cd_perfil_p;
end if;

CALL wheb_usuario_pck.set_informacoes_usuario(2314,cd_perfil_w,cd_estabelecimento_p,cd_setor_atendimento_p,nm_usuario_p,0,'AtePac_OE');
CALL wheb_assist_pck.set_informacoes_usuario(2314,cd_perfil_w,cd_estabelecimento_p,cd_setor_atendimento_p,nm_usuario_p,0,'AtePac_OE');
ie_gerar_prescr_evol_w := Obter_param_Usuario(281, 1590, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_gerar_prescr_evol_w);
-- obter inf usuario
select   max(a.cd_pessoa_fisica)
into STRICT  cd_pf_usuario_w
from  usuario a
where  a.nm_usuario = nm_usuario_p;

if (cd_pf_usuario_w IS NOT NULL AND cd_pf_usuario_w::text <> '') then
  select  coalesce(max('1'),'3')
  into STRICT  ie_origem_inf_w
  from  medico
  where  cd_pessoa_fisica  = cd_pf_usuario_w
  and  coalesce(ie_situacao,'A') = 'A';

else
  ie_origem_inf_w  := '3';
end if;

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
  select  max(cd_pessoa_fisica)
  into STRICT  cd_pessoa_fisica_w
  from  atendimento_paciente
  where  nr_atendimento = nr_atendimento_p;

  cd_convenio_w  := obter_convenio_atendimento(nr_atendimento_p);
  cd_setor_prescr_w    := coalesce(cd_setor_atendimento_p,cpoe_obter_setor_atend_prescr(nr_atendimento_p,cd_estabelecimento_p,cd_perfil_w,nm_usuario_p));
else
  cd_pessoa_fisica_w  := cd_pessoa_fisica_p;
end if;

ie_possui_dieta_w := 'N';

if (itens_liberar_p IS NOT NULL AND itens_liberar_p::text <> '') then
  ie_opcao_prescr_ww := itens_liberar_p;

  for i in 1..length(ie_opcao_prescr_ww) loop

    if (length(ie_opcao_prescr_ww) > 1) then
      -- R,12;M,12345;D,1233;M,2312;
      BEGIN
          sql_w := 'begin obter_opc_cpoe_gerar_presc_md (:1, :2, :3, :4); end;';
          EXECUTE sql_w USING OUT item_w,
                                        OUT ie_opcao_prescr_w, 
                                        OUT nr_seq_reg_item_w,  
                                        IN OUT ie_opcao_prescr_ww;
      EXCEPTION
          WHEN OTHERS THEN
              item_w := NULL;
              ie_opcao_prescr_w := NULL;
              nr_seq_reg_item_w := NULL;
              ie_opcao_prescr_ww := NULL;
      END;

      if (ie_opcao_prescr_w = 'DI') or (ie_opcao_prescr_w = 'DP') then
        ie_opcao_prescr_w := 'D';
      end if;

      nr_seq_rep_w := 0;

      if (ie_opcao_prescr_w IS NOT NULL AND ie_opcao_prescr_w::text <> '') then

        CALL gravar_log_cpoe(substr('CPOE_GERAR_ITENS_PRESCRICAO LOG LOOP ITENS :'
          || 'nr_atendimento_p: ' || nr_atendimento_p
          || 'ie_opcao_prescr_w: ' || ie_opcao_prescr_w
          ||'nr_prescricao_p : ' || nr_prescricao_p
          ||'nr_seq_reg_item_w : '|| nr_seq_reg_item_w
          ||'cd_estabelecimento_p : ' || cd_estabelecimento_p
          ||'cd_perfil_w :' || cd_perfil_w
          ||'nm_usuario_p : '  || nm_usuario_p
		  ||'cd_setor_atendimento_p: ' || cd_setor_atendimento_p
          ||'cd_setor_prescr_w : '|| cd_setor_prescr_w
          ||'nr_seq_agrupamento_w : '  || nr_seq_agrupamento_w
          ||'cd_convenio_w : '|| cd_convenio_w
          ||'ie_origem_inf_w:'||ie_origem_inf_w
          ||'cd_pessoa_fisica_w: '||cd_pessoa_fisica_w
          ||'dt_inicio_prescr_w :'|| to_char(dt_inicio_prescr_w, 'dd/mm/yyyy hh24:mi:ss')
          ||'dt_prim_hor_ret_w : '|| to_char(dt_prim_hor_ret_w,'dd/mm/yyyy hh24:mi:ss')
          ||' Sequencia CPOE :' || nr_seq_reg_item_w,1,2000),
          nr_atendimento_p);

        case ie_opcao_prescr_w
          when 'R' then --Recomendacao
              dt_prim_hor_ret_w := cpoe_inserir_recom_prescr_reg(  nr_atendimento_p, cd_pessoa_fisica_p, nr_prescricao_p, nr_seq_reg_item_w, cd_estabelecimento_p, cd_perfil_w, nm_usuario_p, cd_setor_prescr_w, nr_seq_agrupamento_w, cd_convenio_w, dt_inicio_prescr_w, dt_prim_hor_ret_w, ie_copia_diaria_p);

            --Gerar Log quando nao gerou item na rep
            select  coalesce(max(nr_sequencia),0)
            into STRICT  nr_seq_rep_w
            from  prescr_recomendacao
            where  nr_seq_rec_cpoe = nr_seq_reg_item_w
            and   nr_prescricao = nr_prescricao_p;
            if (ie_gerar_prescr_evol_w = 'S') then
				begin
                cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_seq_reg_item_w, 'CPOE_ITEMS', 4, 'P', 1, cd_evolucao_w, nr_prescricao_p, 1);
				exception when others then
					CALL gravar_log_cpoe(substr('CPOE_GERAR_ITENS_PRESCRICAO EXCEPTION clinical_notes_pck.gerar_soap: '|| substr(to_char(sqlerrm),1,2000)
					||'//nr_atendimento_p: ' || nr_atendimento_p
					||'nr_prescricao_p : ' || nr_prescricao_p
					||'nr_seq_reg_item_w : ' || nr_seq_reg_item_w
					||'cd_estabelecimento_p : ' || cd_estabelecimento_p
					||'nm_usuario_p : ' || nm_usuario_p,1,2000),
					nr_atendimento_p);
				end;
				
                update cpoe_recomendacao
                set cd_evolucao = cd_evolucao_w
                where nr_sequencia = nr_seq_reg_item_w;
            end if;
            if (coalesce(nr_seq_rep_w,0) = 0) then
              CALL gravar_log_cpoe('CPOE_GERAR_ITENS_PRESCRICAO LOG RECOMENDACAO SEM PRESCR', nr_atendimento_p, 'R', nr_seq_reg_item_w);
            end if;

          when 'N' then --Nutricao
            dt_prim_hor_ret_w := cpoe_insert_dieta_prescr_reg( nr_atendimento_p, nr_prescricao_p, nr_seq_reg_item_w, cd_estabelecimento_p, cd_perfil_w, nm_usuario_p, ie_origem_inf_w, dt_inicio_prescr_w, dt_prim_hor_ret_w);
            ie_possui_dieta_w := 'S';
			if (ie_gerar_prescr_evol_w = 'S') then
			
                begin
                cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_seq_reg_item_w, 'CPOE_ITEMS', 0, 'P', 1, cd_evolucao_w, nr_prescricao_p, 1);
				exception when others then
					CALL gravar_log_cpoe(substr('CPOE_GERAR_ITENS_PRESCRICAO EXCEPTION clinical_notes_pck.gerar_soap: '|| substr(to_char(sqlerrm),1,2000)
					||'//nr_atendimento_p: ' || nr_atendimento_p
					||'nr_prescricao_p : ' || nr_prescricao_p
					||'nr_seq_reg_item_w : ' || nr_seq_reg_item_w
					||'cd_estabelecimento_p : ' || cd_estabelecimento_p
					||'nm_usuario_p : ' || nm_usuario_p,1,2000),
					nr_atendimento_p);
				end;		
				
                update cpoe_dieta
                set cd_evolucao = cd_evolucao_w
                where nr_sequencia = nr_seq_reg_item_w;
            end if;
          when 'M' then --Medicamento/Solucao
            dt_prim_hor_ret_w := cpoe_insert_material_reg( nr_atendimento_p, nr_prescricao_p, nr_seq_reg_item_w, cd_estabelecimento_p, cd_perfil_w, nm_usuario_p, ie_origem_inf_w, dt_inicio_prescr_w, dt_prim_hor_ret_w, cd_pessoa_fisica_w, ie_copia_diaria_p, ie_disp_semanal_p);

            ie_check_sem_apresent_w  := true;

            --Gerar Log quando nao gerou item na rep
            select  coalesce(max(nr_sequencia),0)
            into STRICT  nr_seq_rep_w
            from  prescr_material
            where  nr_seq_mat_cpoe = nr_seq_reg_item_w
            and   nr_prescricao = nr_prescricao_p;
			if (ie_gerar_prescr_evol_w = 'S') then
				begin
                cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_seq_reg_item_w, 'CPOE_ITEMS', 1, 'P', 1, cd_evolucao_w, nr_prescricao_p, 1);
				exception when others then
					CALL gravar_log_cpoe(substr('CPOE_GERAR_ITENS_PRESCRICAO EXCEPTION clinical_notes_pck.gerar_soap: '|| substr(to_char(sqlerrm),1,2000)
					||'//nr_atendimento_p: ' || nr_atendimento_p
					||'nr_prescricao_p : ' || nr_prescricao_p
					||'nr_seq_reg_item_w : ' || nr_seq_reg_item_w
					||'cd_estabelecimento_p : ' || cd_estabelecimento_p
					||'nm_usuario_p : ' || nm_usuario_p,1,2000),
					nr_atendimento_p);
				end;				
				
                update cpoe_material
                set cd_evolucao = cd_evolucao_w
                where nr_sequencia = nr_seq_reg_item_w;
            end if;
            if (coalesce(nr_seq_rep_w,0) = 0) then
              CALL gravar_log_cpoe('CPOE_GERAR_ITENS_PRESCRICAO LOG MEDICAMENTO/SOLUCAO SEM PRESCR', nr_atendimento_p, 'M', nr_seq_reg_item_w);
            end if;

          when 'MA' then --Material
            dt_prim_hor_ret_w := cpoe_insert_material_reg( nr_atendimento_p, nr_prescricao_p, nr_seq_reg_item_w, cd_estabelecimento_p, cd_perfil_w, nm_usuario_p, ie_origem_inf_w, dt_inicio_prescr_w, dt_prim_hor_ret_w, cd_pessoa_fisica_w, ie_copia_diaria_p, ie_disp_semanal_p);

            ie_check_sem_apresent_w  := true;

            --Gerar Log quando nao gerou item na rep
            select  coalesce(max(nr_sequencia),0)
            into STRICT  nr_seq_rep_w
            from  prescr_material
            where  nr_seq_mat_cpoe = nr_seq_reg_item_w
            and   nr_prescricao = nr_prescricao_p;
			if (ie_gerar_prescr_evol_w = 'S') then
 				begin
                cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_seq_reg_item_w, 'CPOE_ITEMS', 8, 'P', 1, cd_evolucao_w, nr_prescricao_p, 1);
				exception when others then
					CALL gravar_log_cpoe(substr('CPOE_GERAR_ITENS_PRESCRICAO EXCEPTION clinical_notes_pck.gerar_soap: '|| substr(to_char(sqlerrm),1,2000)
					||'//nr_atendimento_p: ' || nr_atendimento_p
					||'nr_prescricao_p : ' || nr_prescricao_p
					||'nr_seq_reg_item_w : ' || nr_seq_reg_item_w
					||'cd_estabelecimento_p : ' || cd_estabelecimento_p
					||'nm_usuario_p : ' || nm_usuario_p,1,2000),
					nr_atendimento_p);
				end;				
				
                update cpoe_material
                set cd_evolucao = cd_evolucao_w
                where nr_sequencia = nr_seq_reg_item_w;
            end if;
            if (coalesce(nr_seq_rep_w,0) = 0) then
              CALL gravar_log_cpoe('CPOE_GERAR_ITENS_PRESCRICAO LOG MATERIAL SEM PRESCR', nr_atendimento_p, 'M', nr_seq_reg_item_w);
            end if;
          when 'P' then --Procedimentos
            dt_prim_hor_ret_w := cpoe_insert_prescr_proced_reg( nr_atendimento_p, nr_prescricao_p, nr_seq_reg_item_w, cd_estabelecimento_p, cd_perfil_w, nm_usuario_p, cd_setor_prescr_w, ie_origem_inf_w, cd_convenio_w, dt_inicio_prescr_w, cd_pessoa_fisica_w, ie_copia_diaria_p);

            --Gerar Log quando nao gerou item na rep
            select  coalesce(max(nr_sequencia),0)
            into STRICT  nr_seq_rep_w
            from  prescr_procedimento
            where  nr_seq_proc_cpoe = nr_seq_reg_item_w
            and   nr_prescricao = nr_prescricao_p;
			if (ie_gerar_prescr_evol_w = 'S') then

				
				begin
                cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_seq_reg_item_w, 'CPOE_ITEMS', 2, 'P', 1, cd_evolucao_w, nr_prescricao_p, 1);
				exception when others then
					CALL gravar_log_cpoe(substr('CPOE_GERAR_ITENS_PRESCRICAO EXCEPTION clinical_notes_pck.gerar_soap: '|| substr(to_char(sqlerrm),1,2000)
					||'//nr_atendimento_p: ' || nr_atendimento_p
					||'nr_prescricao_p : ' || nr_prescricao_p
					||'nr_seq_reg_item_w : ' || nr_seq_reg_item_w
					||'cd_estabelecimento_p : ' || cd_estabelecimento_p
					||'nm_usuario_p : ' || nm_usuario_p,1,2000),
					nr_atendimento_p);
				end;				
				
                update cpoe_procedimento
                set cd_evolucao = cd_evolucao_w
                where nr_sequencia = nr_seq_reg_item_w;
            end if;
            if (coalesce(nr_seq_rep_w,0) = 0) then
              CALL gravar_log_cpoe('CPOE_GERAR_ITENS_PRESCRICAO LOG PROCEDIMENTO SEM PRESCR', nr_atendimento_p, 'P', nr_seq_reg_item_w);
            end if;

          when 'G' then --Gasoterapia
            dt_prim_hor_ret_w := cpoe_inserir_gas_prescr_reg( nr_atendimento_p, nr_prescricao_p, nr_seq_reg_item_w, cd_estabelecimento_p, cd_perfil_w, nm_usuario_p, ie_origem_inf_w, dt_inicio_prescr_w, cd_pessoa_fisica_w, dt_prim_hor_ret_w);

            --Gerar Log quando nao gerou item na rep
            select  coalesce(max(nr_sequencia),0)
            into STRICT  nr_seq_rep_w
            from  prescr_gasoterapia
            where  nr_seq_gas_cpoe = nr_seq_reg_item_w
            and   nr_prescricao = nr_prescricao_p;
			if (ie_gerar_prescr_evol_w = 'S') then
				begin
                cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_seq_reg_item_w, 'CPOE_ITEMS', 3, 'P', 1, cd_evolucao_w, nr_prescricao_p, 1);
				exception when others then
					CALL gravar_log_cpoe(substr('CPOE_GERAR_ITENS_PRESCRICAO EXCEPTION clinical_notes_pck.gerar_soap: '|| substr(to_char(sqlerrm),1,2000)
					||'//nr_atendimento_p: ' || nr_atendimento_p
					||'nr_prescricao_p : ' || nr_prescricao_p
					||'nr_seq_reg_item_w : ' || nr_seq_reg_item_w
					||'cd_estabelecimento_p : ' || cd_estabelecimento_p
					||'nm_usuario_p : ' || nm_usuario_p,1,2000),
					nr_atendimento_p);
				end;				
				
                update cpoe_gasoterapia
                set cd_evolucao = cd_evolucao_w
                where nr_sequencia = nr_seq_reg_item_w;
            end if;
            if (coalesce(nr_seq_rep_w,0) = 0) then
              CALL gravar_log_cpoe('CPOE_GERAR_ITENS_PRESCRICAO LOG GASOTERAPIA SEM PRESCR', nr_atendimento_p, 'G', nr_seq_reg_item_w);
            end if;

          when 'H' then --Hemoterapia
            dt_prim_hor_ret_w  := cpoe_inserir_hemoterapia_reg( nr_atendimento_p, cd_pessoa_fisica_p, nr_prescricao_p, nr_seq_reg_item_w, cd_estabelecimento_p, cd_perfil_w, nm_usuario_p, cd_setor_prescr_w, ie_origem_inf_w, cd_convenio_w, dt_inicio_prescr_w, dt_prim_hor_ret_w );

            --Gerar Log quando nao gerou item na rep
            select  coalesce(max(nr_sequencia),0)
            into STRICT  nr_seq_rep_w
            from  prescr_solic_bco_sangue
            where  nr_seq_hemo_cpoe = nr_seq_reg_item_w
            and   nr_prescricao = nr_prescricao_p;
			if (ie_gerar_prescr_evol_w = 'S') then
				begin
                cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_seq_reg_item_w, 'CPOE_ITEMS', 5, 'P', 1, cd_evolucao_w, nr_prescricao_p, 1);
				exception when others then
					CALL gravar_log_cpoe(substr('CPOE_GERAR_ITENS_PRESCRICAO EXCEPTION clinical_notes_pck.gerar_soap: '|| substr(to_char(sqlerrm),1,2000)
					||'//nr_atendimento_p: ' || nr_atendimento_p
					||'nr_prescricao_p : ' || nr_prescricao_p
					||'nr_seq_reg_item_w : ' || nr_seq_reg_item_w
					||'cd_estabelecimento_p : ' || cd_estabelecimento_p
					||'nm_usuario_p : ' || nm_usuario_p,1,2000),
					nr_atendimento_p);
				end;				
				
                update cpoe_hemoterapia
                set cd_evolucao = cd_evolucao_w
                where nr_sequencia = nr_seq_reg_item_w;
            end if;
            if (coalesce(nr_seq_rep_w,0) = 0) then
              CALL gravar_log_cpoe('CPOE_GERAR_ITENS_PRESCRICAO LOG HEMOTERAPIA SEM PRESCR', nr_atendimento_p, 'H', nr_seq_reg_item_w);
            end if;
          when 'D' then --Dialise
              if (ie_copia_diaria_p = 'S') then
                dt_prim_hor_ret_w  := cpoe_inserir_dialise_reg( nr_atendimento_p, cd_pessoa_fisica_p, nr_prescricao_p, nr_seq_reg_item_w, cd_estabelecimento_p, cd_perfil_w, nm_usuario_p, dt_inicio_prescr_w, dt_prim_hor_ret_w );

                --Gerar Log quando nao gerou item na rep
                select  coalesce(max(nr_sequencia),0)
                into STRICT  nr_seq_rep_w
                from  hd_prescricao
                where  nr_seq_dialise_cpoe = nr_seq_reg_item_w
                and   nr_prescricao = nr_prescricao_p;

                if (coalesce(nr_seq_rep_w,0) = 0) then
                  CALL gravar_log_cpoe('CPOE_GERAR_ITENS_PRESCRICAO LOG DIALISE SEM PRESCR', nr_atendimento_p, 'D', nr_seq_reg_item_w);
                end if;
              end if;
          when 'AP' then --Anatomia Patologica
              if (coalesce(ie_copia_diaria_p, 'N') = 'N')  then

                dt_prim_hor_ret_w := cpoe_gerar_anatomia_patologica( nr_atendimento_p, nr_prescricao_p, nr_seq_reg_item_w, cd_estabelecimento_p, cd_perfil_w, nm_usuario_p, cd_setor_prescr_w, ie_origem_inf_w, dt_inicio_prescr_w, dt_prim_hor_ret_w, cd_pessoa_fisica_w );

                --Gerar Log quando nao gerou item na rep
                select  coalesce(max(nr_sequencia),0)
                into STRICT  nr_seq_rep_w
                from  prescr_procedimento
                where  nr_seq_proc_cpoe = nr_seq_reg_item_w
                and   nr_prescricao = nr_prescricao_p;
				if (ie_gerar_prescr_evol_w = 'S') then
					begin
					cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_seq_reg_item_w, 'CPOE_ITEMS', 9, 'P', 1, cd_evolucao_w, nr_prescricao_p, 1);
					exception when others then
						CALL gravar_log_cpoe(substr('CPOE_GERAR_ITENS_PRESCRICAO EXCEPTION clinical_notes_pck.gerar_soap: '|| substr(to_char(sqlerrm),1,2000)
						||'//nr_atendimento_p: ' || nr_atendimento_p
						||'nr_prescricao_p : ' || nr_prescricao_p
						||'nr_seq_reg_item_w : ' || nr_seq_reg_item_w
						||'cd_estabelecimento_p : ' || cd_estabelecimento_p
						||'nm_usuario_p : ' || nm_usuario_p,1,2000),
						nr_atendimento_p);
					end;					
					
                    update cpoe_anatomia_patologica
                    set cd_evolucao = cd_evolucao_w
                    where nr_sequencia = nr_seq_reg_item_w;
                end if;
                if (coalesce(nr_seq_rep_w,0) = 0) then
                  CALL gravar_log_cpoe('CPOE_GERAR_ITENS_PRESCRICAO LOG ANATOMIA SEM PRESCR', nr_atendimento_p);
                end if;
              end if;
          end case;

        begin
          CALL cpoe_inserir_interacao_prescr(nr_prescricao_p,nr_atendimento_p,nr_seq_reg_item_w,nm_usuario_p);
        exception when others then
          CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO_REP EXCEPTION CPOE_INSERIR_INTERACAO_PRESCR: '|| substr(to_char(sqlerrm),1,2000)
            ||'//nr_atendimento_p: ' || nr_atendimento_p
            ||'nr_prescricao_p : ' || nr_prescricao_p
            ||'nr_seq_reg_item_w : ' || nr_seq_reg_item_w
            ||'cd_estabelecimento_p : ' || cd_estabelecimento_p
            ||'nm_usuario_p : ' || nm_usuario_p,1,2000),
            nr_atendimento_p);
        end;

		if (coalesce(nr_seq_pend_pac_acao_w::text, '') = '') then
			select  max(nr_seq_pend_pac_acao)
			into STRICT  nr_seq_pend_pac_acao_w
			from  gqa_cpoe_item_v
			where  nr_atendimento = nr_atendimento_p
			and    nr_sequencia = nr_seq_reg_item_w;
		end if;

        if (coalesce(dt_prim_horario_item_w::text, '') = '') or (dt_prim_hor_ret_w > dt_prim_horario_item_w) then
          dt_prim_horario_item_w := dt_prim_hor_ret_w;
        end if;

      end if;
    end if;
  end loop;
end if;

begin
  if (ie_check_sem_apresent_w) then
    CALL rep_verificar_apresent_medic( nr_prescricao_p, nm_usuario_p, cd_estabelecimento_p, null);
  end if;
exception when others then
  CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO_REP EXCEPTION REP_VERIFICAR_APRESENT_MEDIC: '|| substr(to_char(sqlerrm),1,2000)
    ||'//nr_atendimento_p: ' || nr_atendimento_p
    ||'nr_prescricao_p : ' || nr_prescricao_p
    ||'cd_estabelecimento_p : ' || cd_estabelecimento_p
    ||'nm_usuario_p : ' || nm_usuario_p,1,2000),
    nr_atendimento_p);
end;

BEGIN
    nr_horas_val_a_w := coalesce(obter_tempo_entre_datas(dt_inicio_prescr_w, dt_prim_horario_item_w, 'T'), 0) + 42;
    nr_horas_val_b_w := coalesce(obter_tempo_entre_datas(dt_inicio_prescr_w, dt_prim_horario_item_w, 'T'), 0) + 36;

    sql_w := 'CALL cpoe_hr_val_itens_presc_md(:1, :2, :3, :4) INTO :nr_horas_validade_w';

    EXECUTE sql_w USING IN ie_copia_diaria_p,
                                  IN ie_copia_sem_lib_enf_farm_p, 
                                  IN nr_horas_val_a_w, 
                                  IN nr_horas_val_b_w, 
                                  OUT nr_horas_validade_w;
EXCEPTION
    WHEN OTHERS THEN
        nr_horas_validade_w := NULL;
END;

update  prescr_medica
set    nr_horas_validade    = nr_horas_validade_w,
    nr_seq_pend_pac_acao  = coalesce(nr_seq_pend_pac_acao_w,nr_seq_pend_pac_acao)
where  nr_prescricao       = nr_prescricao_p;

if (ie_possui_dieta_w = 'S') then

  select  coalesce(max(a.dt_validade_prescr),max(b.dt_fim)),
      coalesce(max(b.nr_sequencia),0),
      max(c.dt_fim)
  into STRICT  dt_validade_prescr_w,
      nr_seq_jejum_w,
      dt_fim_w
  from  prescr_medica a,
    rep_jejum b,
    cpoe_dieta c
  where  c.nr_sequencia = b.nr_seq_dieta_cpoe
  and   a.nr_prescricao = b.nr_prescricao
  and  (b.nr_seq_dieta_cpoe IS NOT NULL AND b.nr_seq_dieta_cpoe::text <> '')
  and  a.nr_prescricao = nr_prescricao_p;

  if (nr_seq_jejum_w > 0) and
    ((dt_fim_w > dt_validade_prescr_w) or (coalesce(dt_fim_w::text, '') = '')) then

    update rep_jejum
    set dt_fim = dt_validade_prescr_w
    where nr_sequencia = nr_seq_jejum_w
    and  nr_prescricao  = nr_prescricao_p;
    commit;

  end if;

end if;

if (ie_interv_farmacia_p = 'S') then
  CALL hmtl_gerar_evento_interv_farm( nr_prescricao_p, nm_usuario_p);
end if;

if (itens_liberar_p IS NOT NULL AND itens_liberar_p::text <> '') then
  begin

    ie_gerar_kit_proc_w := obter_param_Usuario(924, 58, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p, ie_gerar_kit_proc_w);

    if (coalesce(ie_gerar_kit_proc_w,'N') = 'S') then
      CALL Gerar_kit_procedimento( cd_estabelecimento_p, nr_prescricao_p, null, nm_usuario_p);
    end if;
  exception when others then
    CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO_REP EXCEPTION GERAR_KIT_PROCEDIMENTO: '|| substr(to_char(sqlerrm),1,2000)
      ||'//nr_atendimento_p: ' || nr_atendimento_p
      ||'nr_prescricao_p : ' || nr_prescricao_p
      ||'cd_estabelecimento_p : '  || cd_estabelecimento_p
      ||'nm_usuario_p : '  || nm_usuario_p,1,2000),
      nr_atendimento_p);
  end;

  begin
    CALL Gerar_kit_solucao(  nr_prescricao_p, nm_usuario_p, cd_perfil_p);
  exception when others then
    CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO_REP EXCEPTION GERAR_KIT_SOLUCAO: '|| substr(to_char(sqlerrm),1,2000)
      ||'//cd_perfil_p: '|| cd_perfil_p
      ||'nr_prescricao_p : '|| nr_prescricao_p
      ||'nm_usuario_p : '|| nm_usuario_p,1,2000),
      nr_atendimento_p);
  end;

  begin
    CALL Gerar_kit_Medic_Prescricao(  cd_estabelecimento_p, nr_prescricao_p,  null, nm_usuario_p);
  exception when others then
    CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO_REP EXCEPTION GERAR_KIT_MEDIC_PRESCRICAO: '|| substr(to_char(sqlerrm),1,2000)
      ||'//nr_prescricao_p : ' || nr_prescricao_p
      ||'nm_usuario_p : '|| nm_usuario_p
      ||'cd_estabelecimento_p:'|| cd_estabelecimento_p,1,2000),
      nr_atendimento_p);
  end;

  begin
    CALL Gerar_Kit_rec_Prescricao( cd_estabelecimento_p, nr_prescricao_p, null, nm_usuario_p);
  exception when others then
    CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO_REP EXCEPTION GERAR_KIT_REC_PRESCRICAO: '|| substr(to_char(sqlerrm),1,2000)
      ||'//nr_prescricao_p : '  || nr_prescricao_p
      ||'nm_usuario_p : '  || nm_usuario_p
      ||'cd_estabelecimento_p:'|| cd_estabelecimento_p,1,2000),
      nr_atendimento_p);
  end;

  consistir_prescricao( nr_prescricao_p, cd_perfil_w, nm_usuario_p, ds_erro_w, ds_usuario_w, ds_perfil_w, ds_proced_glosa_w);
  nr_prescricao_out_p := nr_prescricao_p;
end if;

exception when others then
  ds_erro_w  := substr(to_char(sqlerrm),1,2000);
  CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO_REP EXCEPTION: '|| ds_erro_w
                     ||' /Parametros: nr_atendimento_p:'   || nr_atendimento_p
                     ||' dt_referencia_p : '         || to_char(dt_referencia_p, 'dd/mm/yyyy hh24:mi:ss')
                     ||' cd_estabelecimento_p : '       || cd_estabelecimento_p
                     ||' cd_perfil_p : '       || cd_perfil_p
                     ||' cd_setor_atendimento_p :'     || cd_setor_atendimento_p
                     ||' nm_usuario_p : '       || nm_usuario_p
                     ||' itens_liberar_p : '     || itens_liberar_p
                     ||' cd_pessoa_fisica_p :'       || cd_pessoa_fisica_p,1,2000),
          nr_atendimento_p);

  open C01;
  loop
  fetch C01 into
    nr_seq_evento_w;
  EXIT WHEN NOT FOUND; /* apply on C01 */
    begin
    CALL gerar_evento_paciente_trigger(  nr_seq_evento_w  ,
            nr_atendimento_p,
            cd_pessoa_fisica_w,
            null,
            nm_usuario_p,
            ds_erro_w);
    commit;
    end;
  end loop;
  close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_gerar_itens_prescricao ( nr_atendimento_p atendimento_paciente.nr_atendimento%type, nr_prescricao_p prescr_medica.nr_prescricao%type, dt_referencia_p timestamp, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, cd_perfil_p perfil.cd_perfil%type, cd_setor_atendimento_p setor_atendimento.cd_setor_atendimento%type, nm_usuario_p usuario.nm_usuario%type, itens_liberar_p text, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type default null, ie_interv_farmacia_p text default 'N', ie_copia_diaria_p char default 'N', nr_prescricao_out_p INOUT prescr_medica.nr_prescricao%type DEFAULT NULL, ie_copia_sem_lib_enf_farm_p text default 'N', ie_disp_semanal_p text default 'N') FROM PUBLIC;

