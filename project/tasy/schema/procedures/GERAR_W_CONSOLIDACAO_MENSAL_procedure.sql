-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_consolidacao_mensal ( nr_seq_wheb_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_mes_w	smallint	:= -48;
dt_ano_w	timestamp;
ds_ano_w	varchar(255);

vl_janeiro_w	double precision;
vl_fevereiro_w	double precision;
vl_marco_w	double precision;
vl_abril_w	double precision;
vl_maio_w	double precision;
vl_junho_w	double precision;
vl_julho_w	double precision;
vl_agosto_w	double precision;
vl_setembro_w	double precision;
vl_outubro_w	double precision;
vl_novembro_w	double precision;
vl_dezembro_w	double precision;
vl_total_w	double precision;

c01 CURSOR FOR
SELECT	max(CASE WHEN PKG_DATE_UTILS.extract_field('MONTH', a.dt_referencia)=1 THEN  a.vl_indicador  ELSE 0 END ) vl_janeiro,
	max(CASE WHEN PKG_DATE_UTILS.extract_field('MONTH', a.dt_referencia)=2 THEN  a.vl_indicador  ELSE 0 END ) vl_fevereiro,
	max(CASE WHEN PKG_DATE_UTILS.extract_field('MONTH', a.dt_referencia)=3 THEN  a.vl_indicador  ELSE 0 END ) vl_marco,
	max(CASE WHEN PKG_DATE_UTILS.extract_field('MONTH', a.dt_referencia)=4 THEN  a.vl_indicador  ELSE 0 END ) vl_abril,
	max(CASE WHEN PKG_DATE_UTILS.extract_field('MONTH', a.dt_referencia)=5 THEN  a.vl_indicador  ELSE 0 END ) vl_maio,
	max(CASE WHEN PKG_DATE_UTILS.extract_field('MONTH', a.dt_referencia)=6 THEN  a.vl_indicador  ELSE 0 END ) vl_junho,
	max(CASE WHEN PKG_DATE_UTILS.extract_field('MONTH', a.dt_referencia)=7 THEN  a.vl_indicador  ELSE 0 END ) vl_julho,
	max(CASE WHEN PKG_DATE_UTILS.extract_field('MONTH', a.dt_referencia)=8 THEN  a.vl_indicador  ELSE 0 END ) vl_agosto,
	max(CASE WHEN PKG_DATE_UTILS.extract_field('MONTH', a.dt_referencia)=9 THEN  a.vl_indicador  ELSE 0 END ) vl_setembro,
	max(CASE WHEN PKG_DATE_UTILS.extract_field('MONTH', a.dt_referencia)=10 THEN  a.vl_indicador  ELSE 0 END ) vl_outubro,
	max(CASE WHEN PKG_DATE_UTILS.extract_field('MONTH', a.dt_referencia)=11 THEN  a.vl_indicador  ELSE 0 END ) vl_novembro,
	max(CASE WHEN PKG_DATE_UTILS.extract_field('MONTH', a.dt_referencia)=12 THEN  a.vl_indicador  ELSE 0 END ) vl_dezembro,
        sum(a.vl_indicador) vl_total
from	eis_evolucao_movto_mes_v a
where   a.nr_seq_wheb	= nr_seq_wheb_p
and     a.dt_ano       	= PKG_DATE_UTILS.start_of(dt_ano_w,'year',0)
group by
	a.dt_ano, a.ds_ano;


BEGIN
if (nr_seq_wheb_p IS NOT NULL AND nr_seq_wheb_p::text <> '') then
	begin
	delete
	from	w_consolidacao_mensal
	where	nm_usuario = nm_usuario_p;

	insert into w_consolidacao_mensal(
		nm_usuario,
		nr_seq_wheb)
	values (
		nm_usuario_p,
		nr_seq_wheb_p);

	dt_ano_w	:= PKG_DATE_UTILS.ADD_MONTH(clock_timestamp(),nr_mes_w,0);

	while nr_mes_w <= 0 loop
		begin
		open c01;
		loop
		fetch c01 into	vl_janeiro_w,
				vl_fevereiro_w,
				vl_marco_w,
				vl_abril_w,
				vl_maio_w,
				vl_junho_w,
				vl_julho_w,
				vl_agosto_w,
				vl_setembro_w,
				vl_outubro_w,
				vl_novembro_w,
				vl_dezembro_w,
				vl_total_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			if (abs(nr_mes_w) = 48) then
				begin
				update	w_consolidacao_mensal
				set	vl_janeiro_48	= coalesce(vl_janeiro_w,0),
					vl_fevereiro_48	= coalesce(vl_fevereiro_w,0),
					vl_marco_48 	= coalesce(vl_marco_w,0),
					vl_abril_48 	= coalesce(vl_abril_w,0),
					vl_maio_48 	= coalesce(vl_maio_w,0),
					vl_junho_48 	= coalesce(vl_junho_w,0),
					vl_julho_48 	= coalesce(vl_julho_w,0),
					vl_agosto_48 	= coalesce(vl_agosto_w,0),
					vl_setembro_48 	= coalesce(vl_setembro_w,0),
					vl_outubro_48 	= coalesce(vl_outubro_w,0),
					vl_novembro_48 	= coalesce(vl_novembro_w,0),
					vl_dezembro_48 	= coalesce(vl_dezembro_w,0),
					vl_total_48	= coalesce(vl_total_w,0)
				where	nm_usuario 	= nm_usuario_p
				and	nr_seq_wheb	= nr_seq_wheb_p;
				end;
			end if;
			if (abs(nr_mes_w) = 36) then
				begin
				update	w_consolidacao_mensal
				set	vl_janeiro_36	= coalesce(vl_janeiro_w,0),
					vl_fevereiro_36	= coalesce(vl_fevereiro_w,0),
					vl_marco_36 	= coalesce(vl_marco_w,0),
					vl_abril_36 	= coalesce(vl_abril_w,0),
					vl_maio_36 	= coalesce(vl_maio_w,0),
					vl_junho_36 	= coalesce(vl_junho_w,0),
					vl_julho_36 	= coalesce(vl_julho_w,0),
					vl_agosto_36 	= coalesce(vl_agosto_w,0),
					vl_setembro_36 	= coalesce(vl_setembro_w,0),
					vl_outubro_36 	= coalesce(vl_outubro_w,0),
					vl_novembro_36 	= coalesce(vl_novembro_w,0),
					vl_dezembro_36 	= coalesce(vl_dezembro_w,0),
					vl_total_36	= coalesce(vl_total_w,0)
				where	nm_usuario 	= nm_usuario_p
				and	nr_seq_wheb	= nr_seq_wheb_p;
				end;
			end if;
			if (abs(nr_mes_w) = 24) then
				begin
				update	w_consolidacao_mensal
				set	vl_janeiro_24	= coalesce(vl_janeiro_w,0),
					vl_fevereiro_24	= coalesce(vl_fevereiro_w,0),
					vl_marco_24 	= coalesce(vl_marco_w,0),
					vl_abril_24 	= coalesce(vl_abril_w,0),
					vl_maio_24 	= coalesce(vl_maio_w,0),
					vl_junho_24 	= coalesce(vl_junho_w,0),
					vl_julho_24 	= coalesce(vl_julho_w,0),
					vl_agosto_24 	= coalesce(vl_agosto_w,0),
					vl_setembro_24 	= coalesce(vl_setembro_w,0),
					vl_outubro_24 	= coalesce(vl_outubro_w,0),
					vl_novembro_24 	= coalesce(vl_novembro_w,0),
					vl_dezembro_24 	= coalesce(vl_dezembro_w,0),
					vl_total_24	= coalesce(vl_total_w,0)
				where	nm_usuario 	= nm_usuario_p
				and	nr_seq_wheb	= nr_seq_wheb_p;
				end;
			end if;
			if (abs(nr_mes_w) = 12) then
				begin
				update	w_consolidacao_mensal
				set	vl_janeiro_12	= coalesce(vl_janeiro_w,0),
					vl_fevereiro_12	= coalesce(vl_fevereiro_w,0),
					vl_marco_12 	= coalesce(vl_marco_w,0),
					vl_abril_12 	= coalesce(vl_abril_w,0),
					vl_maio_12 	= coalesce(vl_maio_w,0),
					vl_junho_12 	= coalesce(vl_junho_w,0),
					vl_julho_12 	= coalesce(vl_julho_w,0),
					vl_agosto_12 	= coalesce(vl_agosto_w,0),
					vl_setembro_12 	= coalesce(vl_setembro_w,0),
					vl_outubro_12 	= coalesce(vl_outubro_w,0),
					vl_novembro_12 	= coalesce(vl_novembro_w,0),
					vl_dezembro_12 	= coalesce(vl_dezembro_w,0),
					vl_total_12	= coalesce(vl_total_w,0)
				where	nm_usuario 	= nm_usuario_p
				and	nr_seq_wheb	= nr_seq_wheb_p;
				end;
			end if;
			if (abs(nr_mes_w) = 0) then
				begin
				update	w_consolidacao_mensal
				set	vl_janeiro	= coalesce(vl_janeiro_w,0),
					vl_fevereiro	= coalesce(vl_fevereiro_w,0),
					vl_marco 	= coalesce(vl_marco_w,0),
					vl_abril 	= coalesce(vl_abril_w,0),
					vl_maio 	= coalesce(vl_maio_w,0),
					vl_junho 	= coalesce(vl_junho_w,0),
					vl_julho 	= coalesce(vl_julho_w,0),
					vl_agosto 	= coalesce(vl_agosto_w,0),
					vl_setembro 	= coalesce(vl_setembro_w,0),
					vl_outubro 	= coalesce(vl_outubro_w,0),
					vl_novembro 	= coalesce(vl_novembro_w,0),
					vl_dezembro 	= coalesce(vl_dezembro_w,0),
					vl_total	= coalesce(vl_total_w,0)
				where	nm_usuario 	= nm_usuario_p
				and	nr_seq_wheb	= nr_seq_wheb_p;
				end;
			end if;
			end;
		end loop;
		close c01;
		nr_mes_w	:= nr_mes_w + 12;
		dt_ano_w	:= PKG_DATE_UTILS.ADD_MONTH(clock_timestamp(),nr_mes_w,0);
		end;
	end loop;
	end;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_consolidacao_mensal ( nr_seq_wheb_p bigint, nm_usuario_p text) FROM PUBLIC;

