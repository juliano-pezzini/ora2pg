-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pat_calc_deprec_inpc ( nm_usuario_p text, cd_estabelecimento_p bigint, dt_referencia_p timestamp) AS $body$
DECLARE


/*
******************************************************************************
* Rotina desenvolvida com base na legislação do México em 01/12/2015
******************************************************************************
* LEY DEL IMPUESTO SOBRE LA RENTA
* Nueva Ley DOF 11-12-2013
* http://www.diputados.gob.mx/LeyesBiblio/ref/lisr.htm
*****************************************************************************
1) Para implantação do sistema os bens sem depreciação calculada para ser gerado via Tasy:
	* Devem ser importados os bem considerando o último mês do ano
	  imediatamente anterior ao que se deseja iniciar os cálculos.
	  Ex: Para se calcular o ano de 2015, deve-se importar os bens
	  objetivando calcular a primeira depreciação em 31/12/2014.

	* DT_INICIO_DEPREC = Deve ser a data em que se inicia a depreciação
	  Na primeira depreciação calculada conforme regra acima, será atribuído
	  ao valor de depreciação fiscal acumulado, o mesmo valor de depreciação
	  acumulada(Depreciação contábil).

2) Para implantação do sistema importando a primeira depreciação:
	* <Detalhar>

*****************************************************************************
* Tabelas de INPC disponíveis em
http://www.inegi.org.mx/
Item 'Índices de Precios'
*****************************************************************************
*/
vl_deprec_acum_fis_ano_atual_w	pat_valor_bem.vl_deprec_acum_fis_ano_atual%type;
vl_deprec_acum_fis_ano_w	pat_valor_bem.vl_deprec_acum_fis_ano%type;
tx_indice_mes_w			indice_reajuste_valor.tx_ajuste%type;
tx_metade_periodo_w		pat_valor_bem.tx_indice_mes%type;
pr_fator_atualizacao_w		pat_valor_bem.vl_fator_atualizacao%type;
qt_meses_w			smallint;
mes_metade_periodo_w		timestamp;
dt_valor_mes_ant_w		timestamp;
dt_inicio_w			timestamp;
dt_valor_w			timestamp;
dt_fim_w			timestamp;

c01 CURSOR FOR
	SELECT	b.nr_sequencia,
		b.nr_seq_bem,
		b.tx_indice_aquisicao,
		b.tx_indice_mes,
		a.dt_aquisicao,
		a.dt_inicio_uso,
		a.dt_inicio_deprec,
		b.vl_deprec_mes_fis
	from	pat_bem a,
		pat_valor_bem b
	where	a.nr_sequencia = b.nr_seq_bem
	and	a.cd_estabelecimento = cd_estabelecimento_p
	and	b.dt_valor = dt_valor_w
	--and	a.nr_sequencia = 90514
	order by
		1;

c01_w		c01%rowtype;


BEGIN
/* A data de depreciação deve ser o último dia do mês que está sendo calculado */

dt_valor_w := pkg_date_utils.start_of(pkg_date_utils.end_of(dt_referencia_p, 'MONTH', 0), 'DD', 0);

/* Data de depreciação do mês anterior */

dt_valor_mes_ant_w := pkg_date_utils.add_month(dt_valor_w,-1, 0);

/* Obter o indice de reajuste INPC das regras */

begin
select	a.tx_ajuste
into STRICT	tx_indice_mes_w
from	pat_param_contabil c,
	tipo_indice_reajuste b,
	indice_reajuste_valor a
where	a.nr_seq_indice = c.nr_seq_indice_deprec_fiscal
and	a.nr_seq_indice = b.nr_sequencia
and	dt_valor_w between a.dt_inicio_vigencia and a.dt_fim_vigencia
and	b.cd_estabelecimento = cd_estabelecimento_p
and	b.ie_situacao = 'A'
and	c.cd_estabelecimento = cd_estabelecimento_p;
exception
when too_many_rows then
	/*R.aise_application_error(-20011,	'Existe mais de um índice INPC vigente para o mesmo período!' || chr(13) || chr(10) ||
					'Data: ' || to_char(dt_valor_w,'dd/mm/yyyy'));*/
	CALL wheb_mensagem_pck.exibir_mensagem_abort(360464,'DT_VALOR='||to_char(dt_valor_w,'dd/mm/yyyy'));
when no_data_found then
	/*R.aise_application_error(-20011,	'Não existe índice INCP cadastrado para o período!!!' || chr(13) || chr(10) ||
					'Data: ' || to_char(dt_valor_w,'dd/mm/yyyy'));*/
	CALL wheb_mensagem_pck.exibir_mensagem_abort(360466,'DT_VALOR='||to_char(dt_valor_w,'dd/mm/yyyy'));
end;
/*
 *********************************************************************
 Incluir consistências caso necessário
 *********************************************************************
*/


/*
Cálculo obrigatório do fator de atualização e atualização da depreciação do ano em
DECLARAÇÃO ANUAL DE FINAL DE ANO
ou
BAIXA OU VENDA DO BEM
*/
open c01;
loop
fetch c01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	pr_fator_atualizacao_w := 0;
	/* Se não existe indice de aquisição informado */

	if (coalesce(c01_w.tx_indice_aquisicao,0) = 0) then
		begin
		/* Se o bem teve o início de uso no mesmo mês do cálculo */

		if (pkg_date_utils.start_of(c01_w.dt_aquisicao, 'MONTH', 0) = pkg_date_utils.start_of(dt_valor_w, 'MONTH', 0)) then
			begin
			c01_w.tx_indice_aquisicao := tx_indice_mes_w;
			end;
		else /* Situação normal obtém o índice de aquisição já gerado em outros meses */
			begin
			begin
			/* Busca o índice de aquisição do bem que já deve estar gerado no mês anterior */

			select	a.tx_indice_aquisicao
			into STRICT	c01_w.tx_indice_aquisicao
			from	pat_valor_bem a
			where	a.nr_seq_bem = c01_w.nr_seq_bem
			and	a.dt_valor = dt_valor_mes_ant_w;
			exception
			when no_data_found then
				c01_w.tx_indice_aquisicao := 0;
				/* R.aise_application_error(-20011,	'Não foi possível obter o índice de aquisição do bem, verifique se existe depreciação gerada no mês anterior!' || chr(13) || chr(10) ||
								'Seq Bem: ' || c01_w.nr_seq_bem || chr(13) || chr(10) ||
								'Mês anterior: ' || to_char(dt_valor_mes_ant_w,'dd/mm/yyyy')); */

				--wheb_mensagem_pck.exibir_mensagem_abort(360476,'NR_SEQ_BEM='||c01_w.nr_seq_bem||';DT_VALOR='||to_char(dt_valor_mes_ant_w,'dd/mm/yyyy'));
			end;

			/* Se não possuir índice de aquisição gerado no mês anterior, busca o índice de aquisição da regra */

			if (coalesce(c01_w.tx_indice_aquisicao,0) = 0) then
				begin
				begin
				select	a.tx_ajuste
				into STRICT	c01_w.tx_indice_aquisicao
				from	pat_param_contabil c,
					tipo_indice_reajuste b,
					indice_reajuste_valor a
				where	a.nr_seq_indice = c.nr_seq_indice_deprec_fiscal
				and	a.nr_seq_indice = b.nr_sequencia
				and	c01_w.dt_aquisicao between a.dt_inicio_vigencia and a.dt_fim_vigencia
				and	b.cd_estabelecimento = cd_estabelecimento_p
				and	b.ie_situacao = 'A'
				and	c.cd_estabelecimento = cd_estabelecimento_p;
				exception
				when too_many_rows then
					/*R.aise_application_error(-20011,	'Existe mais de um índice INPC vigente para o mesmo período!' || chr(13) || chr(10) ||
									'Data: ' || to_char(dt_valor_w,'dd/mm/yyyy'));*/
					CALL wheb_mensagem_pck.exibir_mensagem_abort(360464,'DT_VALOR='||to_char(c01_w.dt_aquisicao,'dd/mm/yyyy'));
				when no_data_found then
					/*R.aise_application_error(-20011,	'Não existe índice INCP cadastrado para o período!!!' || chr(13) || chr(10) ||
									'Data: ' || to_char(dt_valor_w,'dd/mm/yyyy'));*/
					CALL wheb_mensagem_pck.exibir_mensagem_abort(360466,'DT_VALOR='||to_char(c01_w.dt_aquisicao,'dd/mm/yyyy'));
				end;
				end;
			end if;
			end;
		end if;
		end;
	end if;

	if (c01_w.dt_inicio_uso < dt_valor_w) then
		begin

		/* Se o início de uso do bem for no mesmo ano do cálculo, considera os meses desde o início de uso
		     Se não então o inicio de uso foi em anos anteriores, então a data de início é primeiro de janeiro do ano de cálculo */
		if (pkg_date_utils.start_of(c01_w.dt_inicio_uso, 'YEAR', 0) = pkg_date_utils.start_of(dt_valor_w, 'YEAR', 0)) then
			begin
			/* A data de início é o mês de início de uso do bem */

			dt_inicio_w := pkg_date_utils.start_of(c01_w.dt_inicio_uso, 'MONTH', 0);
			end;
		else
			begin
			/* A data de início é o mês de início de uso do bem */

			dt_inicio_w := pkg_date_utils.start_of(dt_valor_w, 'YEAR', 0);
			end;
		end if;

		/* A data de fim é o mês de cálculo de depreciação (calcular fator de atualização todo mês) - primeiro dia do mês */

		dt_fim_w := pkg_date_utils.start_of(dt_valor_w, 'MONTH', 0);

		/* Quantidade de meses entre o [início do ano ou data de aquisição] E [fim do ano ou data de baixa, fora mês baixa] */


		/* De janeiro a dezembro 11 meses */

		qt_meses_w := trunc(months_between(dt_fim_w, dt_inicio_w))+1;


		/* Quantidade de meses até a metade do período, a priori mês inteiro anterior */


		/* De janeiro a dezembro é o mês 06 */


		/* De janeiro a novembro é o mês 05 */

		qt_meses_w := floor(qt_meses_w/2);

		/* Reduz um mês da variável para somar ao mês inicial  */

		if (qt_meses_w >= 1) then
			begin
			qt_meses_w := qt_meses_w - 1;
			end;
		end if;

		/* Mês da  metade do período do exercício */

		mes_metade_periodo_w := pkg_date_utils.add_month(dt_inicio_w, qt_meses_w, 0);

		/* Obter o índice das regras no Shift+F11 */

		begin
			select	a.tx_ajuste
			into STRICT	tx_metade_periodo_w
			from	pat_param_contabil c,
				tipo_indice_reajuste b,
				indice_reajuste_valor a
			where	a.nr_seq_indice = c.nr_seq_indice_deprec_fiscal
			and	a.nr_seq_indice = b.nr_sequencia
			and	mes_metade_periodo_w between a.dt_inicio_vigencia and a.dt_fim_vigencia
			and	b.cd_estabelecimento = cd_estabelecimento_p
			and	b.ie_situacao = 'A'
			and	c.cd_estabelecimento = cd_estabelecimento_p;
		exception
		when too_many_rows then
			/*R.aise_application_error(-20011,	'Existe mais de um índice INPC vigente para o mesmo período!' || chr(13) || chr(10) ||
							'Data: ' || to_char(dt_valor_w,'dd/mm/yyyy'));*/
			CALL wheb_mensagem_pck.exibir_mensagem_abort(360464,'DT_VALOR='||to_char(mes_metade_periodo_w,'dd/mm/yyyy'));
		when no_data_found then
			/* R.aise_application_error(-20011,	'Não existe índice INCP cadastrado para o período!!!' || chr(13) || chr(10) ||
							'Data: ' || to_char(mes_metade_periodo_w,'dd/mm/yyyy') || chr(13) || chr(10) ||
							'Estab: '|| cd_estabelecimento_p || chr(13) || chr(10) ||
							'Estab: '|| dt_inicio_w || chr(13) || chr(10) ||
							'Estab: '|| qt_meses_w); */
			CALL wheb_mensagem_pck.exibir_mensagem_abort(360466,'DT_VALOR='||to_char(mes_metade_periodo_w,'dd/mm/yyyy'));
		end;

		/* Calcula o fator  de atualização da depreciação fiscal */

		pr_fator_atualizacao_w := trunc(tx_metade_periodo_w / c01_w.tx_indice_aquisicao,4);

		/* Caso o fator de atualização seja menor que 1 deve ser utilizado 1 */

		if (pr_fator_atualizacao_w < 1) then
			begin
			pr_fator_atualizacao_w := 1;
			end;
		end if;

		begin
		vl_deprec_acum_fis_ano_w := 0;
		/* Iniciar o acumulo de valor todo ano */

		if (pkg_date_utils.extract_field('MONTH',dt_valor_w) > 1) then
			begin
			select	a.vl_deprec_acum_fis_ano
			into STRICT	vl_deprec_acum_fis_ano_w
			from	pat_valor_bem a
			where	a.nr_seq_bem = c01_w.nr_seq_bem
			and	a.dt_valor = dt_valor_mes_ant_w;
			end;
			vl_deprec_acum_fis_ano_w := coalesce(vl_deprec_acum_fis_ano_w,0);
		end if;
		exception
		when others then
			vl_deprec_acum_fis_ano_w := 0;
		end;

		/* Acumular o valor de depreciação fiscal do ano */

		vl_deprec_acum_fis_ano_w := vl_deprec_acum_fis_ano_w + c01_w.vl_deprec_mes_fis;

		/* Atualizar o valor de depreciação fiscal do ano com o fator de atualização */

		vl_deprec_acum_fis_ano_atual_w := trunc(pr_fator_atualizacao_w * vl_deprec_acum_fis_ano_w,4);

		end;
	else
		begin
		pr_fator_atualizacao_w := 0;
		vl_deprec_acum_fis_ano_w := 0;
		vl_deprec_acum_fis_ano_atual_w := 0;
		end;
	end if;

	update	pat_valor_bem
	set	tx_indice_mes = tx_indice_mes_w,
		tx_indice_aquisicao = c01_w.tx_indice_aquisicao,
		vl_fator_atualizacao = pr_fator_atualizacao_w,
		vl_deprec_acum_fis_ano = vl_deprec_acum_fis_ano_w,
		vl_deprec_acum_fis_ano_atual = vl_deprec_acum_fis_ano_atual_w
	where	nr_seq_bem = c01_w.nr_seq_bem
	and	dt_valor = dt_valor_w;

	end;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pat_calc_deprec_inpc ( nm_usuario_p text, cd_estabelecimento_p bigint, dt_referencia_p timestamp) FROM PUBLIC;

