-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_lote_presc_agrup ( nr_seq_lote_p bigint, ie_opcao_p text, nm_usuario_p text, nm_maquina_p text default null) AS $body$
DECLARE


/* 
ie_opcao_p	=	ID - Inicio Dispensacao	
		AF - Atendimento Farmacia
		E  - Estornar (Voltar lote para status "Gerado")
*/
ds_maq_user_w 		varchar(80);
cd_perfil_ativo_w		integer;
cd_estabelecimento_w		bigint;
cd_motivo_baixa_w		bigint;
ie_dispensa_w		varchar(1);
qt_existe_w		bigint;
nr_atendimento_w	ap_lote.nr_atendimento%type;
nr_seq_lote_w		ap_lote.nr_sequencia%type;

c01 CURSOR FOR
	SELECT	c.nr_sequencia nr_sequencia
	from	prescr_mat_hor b,
		ap_lote_item a, 
		ap_lote c
	where	c.nr_lote_agrupamento = nr_seq_lote_p
	and	c.nr_sequencia = a.nr_seq_lote
	and	a.nr_seq_mat_hor = b.nr_sequencia
	and	coalesce(b.dt_suspensao::text, '') = ''
	and	coalesce(a.dt_supensao::text, '') = ''
	and	c.ie_status_lote in ('G','A')
	and	obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S'
	group by 
		a.cd_material,
		b.nr_seq_material,
		substr(obter_desc_material(a.cd_material),1,60),
		c.nr_prescricao,
		c.nr_sequencia
	having	sum(a.qt_dispensar) > 0
	
union all

	SELECT	nr_seq_lote_p nr_sequencia
	;
		

BEGIN

select	substr(obter_inf_sessao(0) ||' - ' || obter_inf_sessao(1),1,80)
into STRICT	ds_maq_user_w
;

begin
cd_perfil_ativo_w	:= obter_perfil_ativo;
exception when others then
cd_perfil_ativo_w	:= null;
end;

if (nm_maquina_p IS NOT NULL AND nm_maquina_p::text <> '') then
	ds_maq_user_w := substr(nm_maquina_p ||' - ' || nm_usuario_p,1,80);
end if;

select	max(nr_atendimento)
into STRICT	nr_atendimento_w
from	ap_lote
where 	nr_sequencia = nr_seq_lote_p;

select	coalesce(max(a.cd_estabelecimento),obter_estabelecimento_ativo)
into STRICT	cd_estabelecimento_w
from	prescr_medica a
where	a.nr_atendimento = nr_atendimento_w;

cd_motivo_baixa_w := Obter_Param_Usuario(7029, 54, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_w, cd_motivo_baixa_w);
ie_dispensa_w := Obter_Param_Usuario(7029, 85, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_w, ie_dispensa_w);

open c01;
loop
fetch c01 into
	nr_seq_lote_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	select	count(1)
	into STRICT	qt_existe_w
	from	ap_lote_item
	where	nr_seq_lote = nr_seq_lote_w
	and	coalesce(dt_controle::text, '') = '';

	if (qt_existe_w > 0) and (ie_opcao_p = 'AF') then
		CALL grava_log_ap_lote_hist(nr_seq_lote_w, wheb_mensagem_pck.get_texto(311536), wheb_mensagem_pck.get_texto(311536),nm_usuario_p);
	end if;

	if (ie_opcao_p = 'ID') then

		update	ap_lote
		set	dt_inicio_dispensacao = clock_timestamp(),
			nm_usuario_ini_disp = nm_usuario_p,
			ds_maquina_ini_disp = ds_maq_user_w
		where 	nr_sequencia = nr_seq_lote_w;
		commit;
		
		update	ap_lote
		set	cd_perfil_ini_disp = CASE WHEN cd_perfil_ativo_w=0 THEN null  ELSE cd_perfil_ativo_w END
		where 	nr_sequencia = nr_seq_lote_w;

	elsif (ie_opcao_p = 'AF') then

		update	ap_lote	
		set	dt_atend_farmacia = clock_timestamp(),
			nm_usuario_atend = nm_usuario_p,
			ie_status_lote   = 'A'
		where 	nr_sequencia = nr_seq_lote_w;
		commit;
		
		/* Retirado na OS396912
		insert into logxxxxx_Tasy (cd_log, ds_log, nm_usuario, dt_atualizacao)
			values (55880, 'Lote = ' || nr_seq_lote_p, nm_usuario_p, sysdate);*/
		
		update	ap_lote	
		set	cd_perfil_atend = CASE WHEN cd_perfil_ativo_w=0 THEN null  ELSE cd_perfil_ativo_w END
		where 	nr_sequencia = nr_seq_lote_w;
		
		update	ap_lote	
		set	ds_maquina_atend = coalesce(ds_maq_user_w,'')
		where 	nr_sequencia = nr_seq_lote_w;
		
		if (cd_motivo_baixa_w > 0) then
			update	prescr_mat_hor
			set	cd_motivo_baixa = cd_motivo_baixa_w
			where	nr_seq_lote = nr_seq_lote_w;
		end if;
		
		if (coalesce(ie_dispensa_w,'N') = 'S') then
			CALL Atualiza_Status_Lote(nr_seq_lote_w, cd_estabelecimento_w, 0, nm_usuario_p, 'D',nm_maquina_p);
		end if;

	elsif (ie_opcao_p = 'E') then

		/*insert into logxxxx_Tasy (cd_log, ds_log, nm_usuario, dt_atualizacao)
			values (7029, 'Lote = ' || nr_seq_lote_p, nm_usuario_p, sysdate);*/
		if (cd_motivo_baixa_w > 0) then
			update	prescr_mat_hor
			set	cd_motivo_baixa = 0
			where	nr_seq_lote = nr_seq_lote_w;
		end if;
		
		update	ap_lote	
		set	dt_atend_farmacia 	 = NULL,
			nm_usuario_atend 	 = NULL,
			ds_maquina_atend 	 = NULL,
			cd_perfil_atend		 = NULL,
			dt_inicio_dispensacao 	 = NULL,
			nm_usuario_ini_disp 	 = NULL,
			ds_maquina_ini_disp 	 = NULL,
			cd_perfil_ini_disp	 = NULL,
			cd_tipo_baixa		 = NULL,
			ie_status_lote   	= 'G'
		where 	nr_sequencia = nr_seq_lote_w;
		commit;
	end if;
	end;
end loop;
close c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_lote_presc_agrup ( nr_seq_lote_p bigint, ie_opcao_p text, nm_usuario_p text, nm_maquina_p text default null) FROM PUBLIC;

