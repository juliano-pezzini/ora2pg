-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_regra_partic_mat ( nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, ie_tipo_tabela_p bigint, ie_tipo_part_regra_p INOUT text, ie_comp_pacote_p text) AS $body$
DECLARE


/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Obter regras de participação cadastradas na função OPS - Faturamento > Cadastros > Conversão tipo participação PTU > Material
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Pontos de atenção: 		UTILIZADA NA ROTINA 'PLS_GERAR_PTU_NOTA_SERVICO'
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_tipo_tabela_w		smallint := ie_tipo_tabela_p;
cd_material_ops_w		pls_material.cd_material_ops%type;
ie_tipo_despesa_mat_w		pls_conta_mat.ie_tipo_despesa%type;
ie_tipo_guia_w			pls_conta.ie_tipo_guia%type;
ie_tipo_participacao_w		pls_regra_tp_part_ptu_mat.ie_tipo_participacao%type;
dt_atendimento_w		pls_conta_mat.dt_atendimento%type;

C01 CURSOR FOR
	SELECT	a.ie_tipo_participacao
	from	pls_regra_tp_part_ptu_mat	a
	where	((coalesce(a.ie_tipo_tabela,ie_tipo_tabela_w) = ie_tipo_tabela_w) or coalesce(ie_tipo_tabela_w::text, '') = '')
	and	((coalesce(a.ie_tipo_despesa_mat,ie_tipo_despesa_mat_w) = ie_tipo_despesa_mat_w) or coalesce(ie_tipo_despesa_mat_w::text, '') = '')
	and	((coalesce(a.ie_tipo_guia,ie_tipo_guia_w) = ie_tipo_guia_w) or coalesce(ie_tipo_guia_w::text, '') = '')
	and	((coalesce(a.cd_material_inicial::text, '') = ''	and coalesce(cd_material_final::text, '') = '') or (cd_material_ops_w between(cd_material_inicial) and (cd_material_final)))
	and (a.ie_comp_pacote = ie_comp_pacote_p)
	and	dt_atendimento_w between dt_inicio_vigencia and fim_dia(coalesce(dt_fim_vigencia,dt_atendimento_w))
	order by
		coalesce(ie_tipo_tabela,0),
		coalesce(ie_tipo_despesa_mat,'X'),
		coalesce(cd_material_inicial,0),
		coalesce(cd_material_final,0),
		coalesce(ie_tipo_guia,0);


BEGIN
select	max(b.cd_material_ops),
	max(a.ie_tipo_despesa),
	max(c.ie_tipo_guia),
	coalesce(max(a.dt_atendimento),clock_timestamp())
into STRICT	cd_material_ops_w,
	ie_tipo_despesa_mat_w,
	ie_tipo_guia_w,
	dt_atendimento_w
from	pls_conta c,
	pls_material b,
	pls_conta_mat a
where	c.nr_sequencia	= a.nr_seq_conta
and	b.nr_sequencia	= a.nr_seq_material
and	a.nr_sequencia	= nr_seq_conta_mat_p;

if (coalesce(ie_tipo_tabela_w::text, '') = '') then
	if (ie_tipo_despesa_mat_w = 1) then
		ie_tipo_tabela_w := 2;
	elsif (ie_tipo_despesa_mat_w = 2) then
		ie_tipo_tabela_w := 3;
	elsif (ie_tipo_despesa_mat_w = 3) then
		ie_tipo_tabela_w := 2;
	elsif (ie_tipo_despesa_mat_w = 7) then
		ie_tipo_tabela_w := 2;
	end if;
end if;

open C01;
loop
fetch C01 into
	ie_tipo_part_regra_p;
EXIT WHEN NOT FOUND; /* apply on C01 */
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_regra_partic_mat ( nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, ie_tipo_tabela_p bigint, ie_tipo_part_regra_p INOUT text, ie_comp_pacote_p text) FROM PUBLIC;

