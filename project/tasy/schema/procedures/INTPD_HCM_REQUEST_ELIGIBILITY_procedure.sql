-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE intpd_hcm_request_eligibility ( nr_sequencia_p bigint, xml_p text) AS $body$
DECLARE



_ora2pg_r RECORD;
eligibility_w		w_insurance_eligibility%rowtype;
ie_conversao_w			intpd_eventos_sistema.ie_conversao%type;
nr_seq_projeto_xml_w	intpd_eventos_sistema.nr_seq_projeto_xml%type;
nr_seq_sistema_w		intpd_eventos_sistema.nr_seq_sistema%type;
nm_usuario_w		intpd_fila_transmissao.nm_usuario%type;

reg_integracao_w		gerar_int_padrao.reg_integracao_conv;
nr_seq_regra_w			intpd_eventos_sistema.nr_seq_regra_conv%type;
nr_sequencia_w  	bigint;
ds_erro_w			varchar(4000);
ds_fathers_name 	varchar(100);
ds_mothers_name 	varchar(100);
ds_notes_w      	varchar(4000);
ie_lower_age_w  	varchar(15);
vl_credit_w     	double precision;
ie_pregnant_w   	varchar(15);
ie_gynecology_w 	varchar(15);
i					bigint;
cd_response_w	  	varchar(10);
ds_response_w	  	varchar(255);
ie_exception_w		varchar(1) := 'N';
ie_erro_w		  	varchar(1) := 'N';
xml_w				xml;

c_insurance_data CURSOR FOR
SELECT	*
from	xmltable(
			xmlnamespaces('http://www.w3.org/2003/05/soap-envelope' AS "soap",
			'http://www.w3.org/2005/08/addressing' AS "wsa",
			'http://schemas.xmlsoap.org/soap/envelope' AS "env",
			'http://www.christusmuguerza.com.mx/EnterpriseObjects/Beneficiary' AS "ns0",
			'http://www.christusmuguerza.com.mx/EnterpriseObjects/Beneficiary/Custom' AS "ns1",
			'http://www.christusmuguerza.com.mx/EnterpriseObjects/GCM/Common' AS "com"),
			'/soap:Envelope/soap:Body/ns0:ProcessBeneficiaryResponseEBM/ns0:BeneficiaryEBO' passing xml_w columns
		   cd_insurance		 varchar(40)	path 	'ns0:Organization/com:Identification/com:ID',
		   ds_company		 varchar(255)	path	'ns0:Organization/com:LegalEntityReference/com:Description',
		   dt_validity_end   varchar(255)	path 	'ns0:EffectivePeriod/com:EndDateTime',
       xml_person    xml    path  'ns0:Person',
		   xml_custom		 xml		path	'ns0:Custom/ns1:BeneficiaryValueSet'
		);
c_insurance_w	 c_insurance_data%rowtype;


c_response CURSOR FOR
SELECT *
from	xmltable(
			xmlnamespaces('http://www.w3.org/2003/05/soap-envelope' AS "soap",
			'http://www.w3.org/2005/08/addressing' AS "wsa",
			'http://schemas.xmlsoap.org/soap/envelope' AS "env",
			'http://www.christusmuguerza.com.mx/EnterpriseObjects/Beneficiary' AS "ns0",
			'http://www.christusmuguerza.com.mx/EnterpriseObjects/Beneficiary/Custom' AS "ns1",
			'http://www.christusmuguerza.com.mx/EnterpriseObjects/GCM/Common' AS "com"),
			'/soap:Envelope/soap:Body/ns0:ProcessBeneficiaryResponseEBM/ns0:Response' passing xml_w columns
			cd_response		varchar(20)	path	'com:Code',
			ds_response		varchar(255)	path	'com:Message'
		);
c_response_w	c_response%rowtype;


c_person CURSOR FOR
SELECT	*
from	xmltable(
			xmlnamespaces('http://www.w3.org/2003/05/soap-envelope' AS "soap",
			'http://www.w3.org/2005/08/addressing' AS "wsa",
			'http://schemas.xmlsoap.org/soap/envelope' AS "env",
			'http://www.christusmuguerza.com.mx/EnterpriseObjects/Beneficiary' AS "ns0",
			'http://www.christusmuguerza.com.mx/EnterpriseObjects/Beneficiary/Custom' AS "ns1",
			'http://www.christusmuguerza.com.mx/EnterpriseObjects/GCM/Common' AS "com"),
			'ns0:Person' passing c_insurance_w.xml_person columns
		   ds_given_name     varchar(255)	path 	'com:FirstName',
		   ds_middle_name    varchar(255)  path 	'com:MiddleName',
		   cd_person_id		 varchar(200)  path	'com:Identification/com:ID',
		   ie_gender      	 varchar(15)  	path 	'com:Gender/com:Code',
		   dt_birthday  	 varchar(255)	path  	'com:BirthInformation/com:FullDate',
		   cd_social_sec	 varchar(255)	path	'com:SocialInformation/com:SocialSecurityNumber',
		   ie_marital_status varchar(15)	path 	'com:SocialInformation/com:MaritalStatus/com:Code',
		   ds_relationship	 varchar(50)   path	'@relationship',
		   xml_person		 xml		path	'.');
c_person_w	 c_person%rowtype;


c_family CURSOR FOR
SELECT *
from  xmltable(
			xmlnamespaces('http://www.w3.org/2003/05/soap-envelope' AS "soap",
			'http://www.w3.org/2005/08/addressing' AS "wsa",
			'http://schemas.xmlsoap.org/soap/envelope' AS "env",
			'http://www.christusmuguerza.com.mx/EnterpriseObjects/Beneficiary' AS "ns0",
			'http://www.christusmuguerza.com.mx/EnterpriseObjects/Beneficiary/Custom' AS "ns1",
			'http://www.christusmuguerza.com.mx/EnterpriseObjects/GCM/Common' AS "com"),
			'/ns0:Person/com:LastName'	passing c_person_w.xml_person columns
			ds_last_name varchar(255)	path '.',
			ds_type_name varchar(255) 	path '@type'
		);
 c_family_w	c_family%rowtype;


c_conditions CURSOR FOR
SELECT	*
from	xmltable(
			xmlnamespaces('http://www.w3.org/2003/05/soap-envelope' AS "soap",
			'http://www.w3.org/2005/08/addressing' AS "wsa",
			'http://schemas.xmlsoap.org/soap/envelope' AS "env",
			'http://www.christusmuguerza.com.mx/EnterpriseObjects/Beneficiary' AS "ns0",
			'http://www.christusmuguerza.com.mx/EnterpriseObjects/Beneficiary/Custom' AS "ns1",
			'http://www.christusmuguerza.com.mx/EnterpriseObjects/GCM/Common' AS "com"),
			'/ns1:BeneficiaryValueSet/com:ValueSetLine' passing c_insurance_w.xml_custom columns
		ds_condition	varchar(255)	path	'com:Application/com:Name',
		ds_value		varchar(200)	path	'com:Value');
c_conditions_w	c_conditions%rowtype;


BEGIN

   xml_w	:= xmlparse(DOCUMENT, convert_from(, 'utf-8'));

  update intpd_fila_transmissao
  set	ds_xml_retorno = xml_p,
		ie_status = 'R',
		ie_response_procedure = 'S'
  where nr_sequencia = nr_sequencia_p;

  commit;

 begin

  select coalesce(b.ie_conversao,'I'),
		nr_seq_sistema,
		nr_seq_projeto_xml,
		nr_seq_regra_conv
  into STRICT	ie_conversao_w,
		nr_seq_sistema_w,
		nr_seq_projeto_xml_w,
		nr_seq_regra_w
  from	intpd_fila_transmissao a,
		intpd_eventos_sistema b
  where	a.nr_seq_evento_sistema = b.nr_sequencia
  and	a.nr_sequencia = nr_sequencia_p;

  ie_erro_w		:= 'N';

  reg_integracao_w.nr_seq_fila_transmissao	:=	nr_sequencia_p;
  reg_integracao_w.ie_envio_recebe			:=	'R';
  reg_integracao_w.ie_sistema_externo		:=	nr_seq_sistema_w;
  reg_integracao_w.ie_conversao				:=	ie_conversao_w;
  reg_integracao_w.nr_seq_projeto_xml		:=	nr_seq_projeto_xml_w;
  reg_integracao_w.nr_seq_regra_conversao	:=	nr_seq_regra_w;
  reg_integracao_w.intpd_log_receb.delete;
  reg_integracao_w.qt_reg_log				:=	0;

  reg_integracao_w.nm_tabela				:=	'W_INSURANCE_ELIGIBILITY';
  reg_integracao_w.nm_elemento				:=	'ProcessBeneficiaryResponseEBM';
  reg_integracao_w.nr_seq_visao				:=	99249;

  Select nm_usuario
  into STRICT nm_usuario_w
  from intpd_fila_transmissao
  where nr_sequencia = nr_sequencia_p;

  open c_response;
	loop
	fetch c_response into
		cd_response_w,
		ds_response_w;
	EXIT WHEN NOT FOUND; /* apply on c_response */
	end loop;
  close c_response;

	if cd_response_w <> '0000' then
		ie_erro_w := 'S';
		ds_erro_w := ds_response_w;
	end if;

  if (ie_erro_w = 'N') then

  open c_insurance_data;
	loop
	fetch c_insurance_data into
		c_insurance_w;
	EXIT WHEN NOT FOUND; /* apply on c_insurance_data */
	begin

		select nextval('w_insurance_eligibility_seq')
		into STRICT nr_sequencia_w
		;

		eligibility_w.nr_sequencia := nr_sequencia_w;
		eligibility_w.dt_atualizacao := clock_timestamp();
		eligibility_w.nm_usuario := nm_usuario_w;
		eligibility_w.dt_atualizacao_nrec := clock_timestamp();
		eligibility_w.nm_usuario_nrec := nm_usuario_w;

		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'insuranceId', c_insurance_w.cd_insurance, 'S', eligibility_w.cd_insurance) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; eligibility_w.cd_insurance := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'razao_social', c_insurance_w.ds_company, 'S', eligibility_w.ds_company) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; eligibility_w.ds_company := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'effectiveEndDate', to_date(c_insurance_w.dt_validity_end, 'DD-MM-YYYY"T"HH24:MI:SS'), 'S', eligibility_w.dt_validity_end) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; eligibility_w.dt_validity_end := _ora2pg_r.ds_valor_retorno_p;

		open c_conditions;
		loop
		fetch c_conditions into
			c_conditions_w;
		EXIT WHEN NOT FOUND; /* apply on c_conditions */
			begin

		if Upper(c_conditions_w.ds_condition) = 'OBSERVACIONES' then
			select c_conditions_w.ds_value
			into STRICT ds_notes_w
			;
		elsif upper(c_conditions_w.ds_condition) = 'MENOR16' then
			select CASE WHEN upper(c_conditions_w.ds_value)='Y' THEN  'S'  ELSE 'N' END
			into STRICT ie_lower_age_w
			;
		elsif upper(c_conditions_w.ds_condition) = 'LIMITE_CREDITO' then
			select c_conditions_w.ds_value
			into STRICT vl_credit_w
			;
		elsif upper(c_conditions_w.ds_condition) = 'EMBARAZADA' then
			select CASE WHEN upper(c_conditions_w.ds_value)='Y' THEN  'S'  ELSE 'N' END
			into STRICT ie_pregnant_w
			;
		elsif upper(c_conditions_w.ds_condition) = 'SERVICIO_GINE' then
			select CASE WHEN upper(c_conditions_w.ds_value)='Y' THEN  'S'  ELSE 'N' END
			into STRICT  ie_gynecology_w
			;
		end if;

			end;
		end loop;
		close c_conditions;

		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'setValueObsValue', ds_notes_w, 'S', eligibility_w.ds_notes) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; eligibility_w.ds_notes := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'setValueIdadeValue', ie_lower_age_w, 'S', eligibility_w.ie_lower_age) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; eligibility_w.ie_lower_age := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'setValueCreditoValue', vl_credit_w, 'S', eligibility_w.vl_credit) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; eligibility_w.vl_credit := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'setValueGineValue', ie_gynecology_w, 'S', eligibility_w.ie_gynecology) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; eligibility_w.ie_gynecology := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'setValueGravidaValue', ie_pregnant_w, 'S', eligibility_w.ie_pregnant) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; eligibility_w.ie_pregnant := _ora2pg_r.ds_valor_retorno_p;


		open c_person;
		loop
		fetch c_person into
			c_person_w;
		EXIT WHEN NOT FOUND; /* apply on c_person */
		begin

			open c_family;
			loop
			fetch c_family into
				c_family_w;
			EXIT WHEN NOT FOUND; /* apply on c_family */

			if (c_family_w.ds_type_name = 'FATHERS') then
				ds_fathers_name := c_family_w.ds_last_name;
			elsif (c_family_w.ds_type_name = 'MOTHERS') then
				ds_mothers_name := c_family_w.ds_last_name;
			end if;

			end loop;
			close c_family;

			eligibility_w.ds_relationship := c_person_w.ds_relationship;

			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'socialSecurityNr', c_person_w.cd_social_sec, 'S', eligibility_w.nr_social_segurity) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; eligibility_w.nr_social_segurity := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'personId', c_person_w.cd_person_id, 'S', eligibility_w.cd_person) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; eligibility_w.cd_person := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'middleName', c_person_w.ds_middle_name, 'S', eligibility_w.ds_given_name) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; eligibility_w.ds_given_name := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'firstName', c_person_w.ds_given_name ||' '|| c_person_w.ds_middle_name, 'S', eligibility_w.ds_given_name) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; eligibility_w.ds_given_name := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'familyName', ds_mothers_name, 'S', eligibility_w.ds_family_name) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; eligibility_w.ds_family_name := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'lastName', ds_fathers_name, 'S', eligibility_w.ds_component_name_1) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; eligibility_w.ds_component_name_1 := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'genderCode', c_person_w.ie_gender, 'S', eligibility_w.ie_gender) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; eligibility_w.ie_gender := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'fullDate', to_date(c_person_w.dt_birthday, 'DD-MM-YYYY"T"HH24:MI:SS'), 'S', eligibility_w.dt_birthday) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; eligibility_w.dt_birthday := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'maritalStatus', c_person_w.ie_marital_status, 'S', eligibility_w.ie_marital_status) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; eligibility_w.ie_marital_status := _ora2pg_r.ds_valor_retorno_p;

		end;
		end loop; -- c_person
		close c_person;

		if (reg_integracao_w.qt_reg_log = 0) then
			insert into w_insurance_eligibility values (eligibility_w.*);
			commit;
		end if;

	eligibility_w := null;

	end; -- c_insurance_data
	end loop;
	close c_insurance_data;
	end if;

exception
when others then
	begin
	/*'Em caso de qualquer falha o sistema captura a mensagem de erro, efetua o rollback, atualiza o status para Erro e registra a falha ocorrida'*/

	ds_erro_w	:=	substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);

	rollback;
	update	intpd_fila_transmissao
	set	ie_status = 'E',
		ds_log = ds_erro_w
	where	nr_sequencia = nr_sequencia_p;
	end;

	ie_exception_w := 'S';
end;

if (ie_exception_w = 'N') then

	if	((reg_integracao_w.qt_reg_log > 0) or (coalesce(ie_erro_w,'N') = 'S')) then
	begin
		/*'Em caso de qualquer consistência o sistema efetua rollback, atualiza o status para Erro e registra todos os logs de consistência'*/

		rollback;

		update	intpd_fila_transmissao
		set	ie_status = 'E',
			ds_log = ds_erro_w
		where	nr_sequencia = nr_sequencia_p;

		for i in 0..reg_integracao_w.qt_reg_log-1 loop
			intpd_gravar_log_recebimento(nr_sequencia_p,reg_integracao_w.intpd_log_receb[i].ds_log,'INTPDTASY');
		end loop;
	end;
	else
		update	intpd_fila_transmissao
		set	ie_status 	 = 'S'
		where	nr_sequencia = nr_sequencia_p;
	end if;
end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intpd_hcm_request_eligibility ( nr_sequencia_p bigint, xml_p text) FROM PUBLIC;

