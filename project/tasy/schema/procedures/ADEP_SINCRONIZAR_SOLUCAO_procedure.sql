-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE adep_sincronizar_solucao ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_sol_realizadas_p text, ie_exibir_sol_suspensas_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, ie_agrupar_acm_sn_p text, ie_solucoes_continuas_p text, dt_horario_p timestamp, nr_horario_p integer, ie_prescr_setor_p text, ie_formato_solucoes_p text, cd_setor_paciente_p bigint) AS $body$
DECLARE

				 
ds_sep_bv_w		varchar(50);				
nr_prescricao_w		bigint;
nr_seq_solucao_w	integer;
nr_seq_horario_w	bigint;
ie_status_horario_w	varchar(15);
ds_comando_update_w	varchar(4000);
nr_etapa_sol_w		bigint;

c01 CURSOR FOR	 
SELECT	a.nr_prescricao, 
	x.nr_seq_solucao, 
	substr(obter_status_hor_sol_processo(a.nr_prescricao,x.nr_seq_solucao,1),1,15) 
from	prescr_solucao x, 
	prescr_medica a 
where	x.nr_prescricao = a.nr_prescricao 
and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S' 
and	a.nr_atendimento = nr_atendimento_p 
and	a.dt_validade_prescr > dt_validade_limite_p 
and	obter_se_prescr_lib_adep(coalesce(a.dt_liberacao_medico, x.dt_lib_material), coalesce(a.dt_liberacao, x.dt_lib_material), coalesce(a.dt_liberacao_farmacia, x.dt_lib_farmacia), ie_data_lib_prescr_p) = 'S' 
and	coalesce(x.nr_seq_dialise::text, '') = '' 
and	x.ie_status = 'N' 
and	((ie_exibir_sol_realizadas_p = 'S') or (x.ie_status <> 'T')) 
and	((ie_exibir_sol_suspensas_p = 'S') or (coalesce(x.dt_suspensao::text, '') = '')) 
and	((ie_exibir_suspensos_p = 'S') or (coalesce(x.dt_suspensao::text, '') = '')) 
and	((ie_solucoes_continuas_p = 'S') or (obter_se_sol_continua(a.nr_prescricao,x.nr_seq_solucao,x.ds_solucao) = 'N')) 
and	((ie_regra_inclusao_p = 'S') or 
	 ((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'SOL', 
																	cd_estabelecimento_p, 
																	cd_setor_usuario_p, 
																	cd_perfil_p, 
																	null, 
																	null, 
																	null, 
																	null, 
																	a.cd_setor_atendimento, 
																	null, 
																	null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e nÃ£o haviam passado nada 
																	null) = 'S'))) -- nr_seq_exame_p 
and	x.dt_status = dt_horario_p 
and	((ie_prescr_setor_p = 'N') or (ie_prescr_setor_p = 'S' AND a.cd_setor_atendimento = cd_setor_paciente_p)) 
group by 
	a.nr_prescricao, 
	x.nr_seq_solucao;
	
c02 CURSOR FOR 
SELECT	a.nr_prescricao, 
	x.nr_seq_solucao, 
	substr(obter_status_hor_sol(c.dt_inicio_horario,c.dt_fim_horario,c.dt_suspensao,c.dt_interrupcao,c.ie_dose_especial,c.nr_seq_processo,c.nr_seq_area_prep),1,15), 
	c.nr_etapa_sol 
from	prescr_solucao x, 
	prescr_mat_hor c, 
	prescr_medica a 
where	x.nr_prescricao = c.nr_prescricao 
and	x.nr_seq_solucao = c.nr_seq_solucao 
and	x.nr_prescricao = a.nr_prescricao 
and	c.nr_prescricao = a.nr_prescricao 
and	obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S' 
and	a.nr_atendimento = nr_atendimento_p 
--and	a.dt_validade_prescr > dt_validade_limite_p 
and	obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_p) = 'S' 
and	coalesce(x.nr_seq_dialise::text, '') = '' 
and	((ie_exibir_suspensos_p = 'S') or (coalesce(x.dt_suspensao::text, '') = '')) 
and	coalesce(c.ie_situacao,'A') = 'A' 
and	coalesce(c.ie_adep,'S') = 'S' 
and	c.ie_agrupador = 4 
--and	c.dt_horario between dt_inicial_horarios_p and dt_final_horarios_p 
and	adep_obter_se_gerar_sol_hor(c.dt_horario, c.dt_inicio_horario, c.dt_fim_horario, c.dt_suspensao, dt_inicial_horarios_p, dt_final_horarios_p) = 'S' 
--and	((nvl(c.ie_horario_especial,'N') = 'N') or (c.dt_fim_horario is not null)) 
and	((ie_exibir_sol_realizadas_p = 'S') or (coalesce(c.dt_fim_horario::text, '') = '')) 
and	((ie_exibir_sol_suspensas_p = 'S') or (coalesce(c.dt_suspensao::text, '') = '')) 
and	((ie_solucoes_continuas_p = 'S') or (obter_se_sol_continua(a.nr_prescricao,x.nr_seq_solucao,x.ds_solucao) = 'N')) 
and	((ie_regra_inclusao_p = 'S') or 
	 ((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao('SOL', cd_estabelecimento_p, cd_setor_usuario_p, cd_perfil_p, null, null, null, null,a.cd_setor_atendimento,null, null, null) = 'S'))) 
and	((ie_prescr_setor_p = 'N') or 
	 (ie_prescr_setor_p = 'S' AND a.cd_setor_atendimento = cd_setor_paciente_p)) 
and	c.dt_horario = dt_horario_p 
and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S' 
group by 
	a.nr_prescricao, 
	x.nr_seq_solucao, 
	c.dt_inicio_horario, 
	c.dt_fim_horario, 
	c.dt_interrupcao, 
	c.dt_suspensao, 
	c.ie_dose_especial, 
	c.nr_seq_processo, 
	c.nr_seq_area_prep, 
	c.nr_etapa_sol;
	

BEGIN 
ds_sep_bv_w	:= obter_separador_bv;
 
if (ie_formato_solucoes_p = 'I') then 
	begin 
	open c01;
	loop 
	fetch c01 into	nr_prescricao_w, 
			nr_seq_solucao_w, 
			ie_status_horario_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		ds_comando_update_w	:=	' update w_adep_t ' || 
						' set hora' || to_char(nr_horario_p) || ' = :vl_hora, ' || 
						' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao) ' || 
						' where nm_usuario = :nm_usuario ' || 
						' and ie_tipo_item = :ie_tipo ' || 
						' and nvl(nr_prescricao,nvl(:nr_prescricao,0)) = nvl(:nr_prescricao,0) ' || 
						' and nvl(nr_seq_item,nvl(:nr_seq_item,0)) = nvl(:nr_seq_item,0) ';
					 
		CALL exec_sql_dinamico_bv('ADEP', ds_comando_update_w,	'vl_hora=S' || to_char(nr_seq_horario_w) || 'H' || ie_status_horario_w || ds_sep_bv_w || 
									'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w || 
									'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
									'ie_tipo=SOL' || ds_sep_bv_w || 
									'nr_seq_item=' || to_char(nr_seq_solucao_w) || ds_sep_bv_w );
		end;
	end loop;
	close c01;
	end;
elsif (ie_formato_solucoes_p = 'H') then 
	begin 
	open c02;
	loop 
	fetch c02 into	nr_prescricao_w, 
			nr_seq_solucao_w, 
			ie_status_horario_w, 
			nr_etapa_sol_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
		ds_comando_update_w	:=	' update w_adep_t ' || 
						' set hora' || to_char(nr_horario_p) || ' = :vl_hora, ' || 
						' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao) ' || 
						' where nm_usuario = :nm_usuario ' || 
						' and ie_tipo_item = :ie_tipo ' || 
						' and nvl(nr_prescricao,nvl(:nr_prescricao,0)) = nvl(:nr_prescricao,0) ' || 
						' and nvl(nr_seq_item,nvl(:nr_seq_item,0)) = nvl(:nr_seq_item,0) ';
						 
					 
		CALL exec_sql_dinamico_bv('ADEP', ds_comando_update_w,	'vl_hora=S' || to_char(nr_seq_horario_w) || to_char(nr_etapa_sol_w)|| 'H' || ie_status_horario_w || ds_sep_bv_w || 
									'nr_prescricao=' || to_char(nr_prescricao_w) || ds_sep_bv_w || 									 
									'nm_usuario=' || nm_usuario_p || ds_sep_bv_w || 
									'ie_tipo=SOL' || ds_sep_bv_w || 
									'nr_seq_item=' || to_char(nr_seq_solucao_w) || ds_sep_bv_w );
		end;
	end loop;
	close c02;	
	end;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE adep_sincronizar_solucao ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_sol_realizadas_p text, ie_exibir_sol_suspensas_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_exibir_suspensos_p text, ie_agrupar_acm_sn_p text, ie_solucoes_continuas_p text, dt_horario_p timestamp, nr_horario_p integer, ie_prescr_setor_p text, ie_formato_solucoes_p text, cd_setor_paciente_p bigint) FROM PUBLIC;

