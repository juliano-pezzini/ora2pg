-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE limpar_log_integracao_sistemas (ie_nologging_p boolean default true) AS $body$
DECLARE


nr_seq_log_integracao_w		bigint;
qt_dias_log_w			bigint;

C01 CURSOR FOR
	SELECT	a.nr_sequencia
	from	log_integracao a
	where	exists (SELECT	1
				from	informacao_integracao b
				where	b.nr_sequencia 	= a.nr_seq_informacao
				and	a.dt_atualizacao < clock_timestamp()-b.qt_dias_log);

C02 CURSOR FOR
	SELECT	a.nr_sequencia
	from	tasy_assinat_dig_log a
	where	ie_evento not in ('GXML', 'Envio', 'Retorno', 'Valida', 'Verificar', 'ErroAssinar', 'ErroValidar', 'Validado')
	and	dt_atualizacao < clock_timestamp() - interval '90 days'  LIMIT 99999;

s_array 	LT_NUMBER;	
	


i		integer := 1;
type Vetor is table of LT_NUMBER index by integer;
Vetor_c01_w	Vetor;
Vetor_c02_w	Vetor;


BEGIN
if (ie_nologging_p) then
	CALL exec_sql_dinamico('Tasy','ALTER TABLE LOG_INTEGRACAO NOLOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE LOG_INTEGRACAO_XML NOLOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE LOG_INTEGRACAO_HL7 NOLOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE LOG_INTEGRACAO_EVENTO NOLOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE AGENDAMENTO_INTEGRACAO NOLOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE TASY_ASSINAT_DIG_LOG NOLOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE TASY_ASSINAT_DIG_ERRO NOLOGGING');	
	CALL exec_sql_dinamico('Tasy','ALTER TABLE TASY_XML_BANCO NOLOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE TASY_VALOR_XML_BANCO NOLOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE TASY_LOG_WS NOLOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE TISS_LOG_VALOR_XML NOLOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE TISS_LOG_XML NOLOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE TISS_LOG NOLOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE TASY_VALOR_XML_BANCO NOLOGGING');	
end if;
CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(311202),'LIMPAR_LOG_INTEGRACAO_SISTEMAS',-1); --alimentando o vetor
open c01;
loop
FETCH C01 BULK COLLECT INTO s_array LIMIT 100;
	Vetor_c01_w(i) := s_array;
	i := i + 1;
EXIT WHEN NOT FOUND; /* apply on C01 */
END LOOP;
CLOSE C01;

CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(311203),'LIMPAR_LOG_INTEGRACAO_SISTEMAS',-1); --Percorrendo o vetor
for i in 1..Vetor_c01_w.COUNT loop
	s_array := Vetor_c01_w(i);

	CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(311204),'LIMPAR_LOG_INTEGRACAO_SISTEMAS',-1); --Limpando LOG_INTEGRACAO_XML
	
	delete	from	log_integracao_xml
	where	nr_seq_log in ( SELECT column_value from table(cast(s_array as LT_NUMBER)));

	commit;

	CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(311206),'LIMPAR_LOG_INTEGRACAO_SISTEMAS',-1); --Limpando LOG_INTEGRACAO_HL7
	
	delete	from	log_integracao_hl7
	where	nr_seq_log in ( SELECT column_value from table(cast(s_array as LT_NUMBER)));
	
	commit;

	CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(311207),'LIMPAR_LOG_INTEGRACAO_SISTEMAS',-1); --Limpando LOG_INTEGRACAO_EVENTO 
	
	delete	from	log_integracao_evento
	where	nr_seq_log in ( SELECT column_value from table(cast(s_array as LT_NUMBER)));
	
	commit;
	CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(311209),'LIMPAR_LOG_INTEGRACAO_SISTEMAS',-1); --Limpando AGENDAMENTO_INTEGRACAO	
	delete	from	AGENDAMENTO_INTEGRACAO
	where	nr_seq_log in ( SELECT column_value from table(cast(s_array as LT_NUMBER)));
	
	CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(311210),'LIMPAR_LOG_INTEGRACAO_SISTEMAS',-1); --Limpando LOG_INTEGRACAO	
	
	/*Limpar o vinculo com a fila para poder deletar a log_integracao. E usar a intpd_log_cleaning para limpar a fila de transmissao*/

	update	intpd_fila_transmissao
	set	nr_seq_log_integracao  = NULL
	where	nr_seq_log_integracao in (SELECT column_value from table(cast(s_array as lt_number)));
	
	delete	from	log_integracao
	where	nr_sequencia in ( SELECT column_value from table(cast(s_array as LT_NUMBER)));
	
	commit;
end loop;

CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(311202),'TASY_ASSINAT_DIG_LOG',-1); --alimentando o vetor
i:= 1;
open c02;
loop
FETCH C02 BULK COLLECT INTO s_array LIMIT 100;
	Vetor_c02_w(i) := s_array;
	i := i + 1;
EXIT WHEN NOT FOUND; /* apply on C02 */
END LOOP;
CLOSE C02;

CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(311213),'TASY_ASSINAT_DIG_LOG',-1); --Percorrendo o vetor
for i in 1..Vetor_c02_w.COUNT loop
	s_array := Vetor_c02_w(i);

	CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(311204),'TASY_ASSINAT_DIG_ERRO',-1); --Limpando LOG_INTEGRACAO_XML
	delete	from	TASY_ASSINAT_DIG_ERRO
	where	nr_seq_log in ( SELECT column_value from table(cast(s_array as LT_NUMBER)));
	
	CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(311204),'TASY_ASSINAT_DIG_LOG',-1); --Limpando LOG_INTEGRACAO_XML
	
	delete	from	tasy_assinat_dig_log
	where	nr_sequencia in ( SELECT column_value from table(cast(s_array as LT_NUMBER)));

	commit;
end loop;
								
delete from tasy_Assinat_dig_pend
where dt_atualizacao_nrec < clock_timestamp() - interval '180 days';
								
commit;

CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(311209),'LIMPAR_LOG_INTEGRACAO_SISTEMAS',-1); --Limpando AGENDAMENTO_INTEGRACAO
delete	from AGENDAMENTO_INTEGRACAO
where	dt_atualizacao < clock_timestamp() - interval '90 days';

commit;

CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(311216),'LIMPAR_LOG_INTEGRACAO_SISTEMAS',-1); --Limpando TASY_XML_BANCO	
delete	from	tasy_xml_banco
where	dt_atualizacao < clock_timestamp() - interval '90 days';

commit;

CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(311218),'LIMPAR_LOG_INTEGRACAO_SISTEMAS',-1);		 --Limpando TASY_VALOR_XML_BANCO
delete	from	tasy_valor_xml_banco
where	dt_atualizacao < clock_timestamp() - interval '90 days';

commit;

CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(311220),'LIMPAR_LOG_INTEGRACAO_SISTEMAS',-1); --Limpando TASY_LOG_WS	
delete	from	tasy_log_ws
where	dt_atualizacao < clock_timestamp() - interval '90 days';

commit;

CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(311243),'LIMPAR_LOG_INTEGRACAO_SISTEMAS',-1); --Limpando TISS_LOG_VALOR_XML		

/*TABELAS COM XMLS DO TISS*/

delete	from	tiss_log_valor_xml b
where	exists (SELECT 1
				from	tiss_log a
				where	a.nr_sequencia = b.nr_seq_log_tiss
				and		a.dt_atualizacao	< clock_timestamp() - interval '30 days');

commit;
				
CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(311245),'LIMPAR_LOG_INTEGRACAO_SISTEMAS',-1); --Limpando TISS_LOG_XML
				
delete	from	tiss_log_xml b
where	exists (SELECT 1
				from	tiss_log a
				where	a.nr_sequencia = b.nr_seq_log_tiss
				and		a.dt_atualizacao	< clock_timestamp() - interval '30 days');

commit;


CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(311249),'LIMPAR_LOG_INTEGRACAO_SISTEMAS',-1); --Limpando TISS_LOG		
				
CALL CALL LIMPAR_TABELA('TISS_LOG', 'AND DT_ATUALIZACAO < SYSDATE - :QT_DIAS', 180);

CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(311209),'LIMPAR_LOG_INTEGRACAO_SISTEMAS',-1); --Limpando AGENDAMENTO_INTEGRACAO		
				
delete	from	agendamento_integracao a
where	a.dt_atualizacao < clock_timestamp() - interval '7 days'
  and not exists (SELECT 1 from log_integracao b
		  where b.nr_sequencia = a.nr_seq_log);

commit;

if (ie_nologging_p) then
	CALL exec_sql_dinamico('Tasy','ALTER TABLE LOG_INTEGRACAO LOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE LOG_INTEGRACAO_XML LOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE LOG_INTEGRACAO_HL7 LOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE LOG_INTEGRACAO_EVENTO LOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE AGENDAMENTO_INTEGRACAO LOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE TASY_ASSINAT_DIG_LOG LOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE TASY_ASSINAT_DIG_ERRO LOGGING');	
	CALL exec_sql_dinamico('Tasy','ALTER TABLE TASY_XML_BANCO LOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE TASY_VALOR_XML_BANCO LOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE TASY_LOG_WS LOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE TISS_LOG_VALOR_XML LOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE TISS_LOG_XML LOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE TISS_LOG LOGGING');
	CALL exec_sql_dinamico('Tasy','ALTER TABLE TASY_VALOR_XML_BANCO LOGGING');
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE limpar_log_integracao_sistemas (ie_nologging_p boolean default true) FROM PUBLIC;

