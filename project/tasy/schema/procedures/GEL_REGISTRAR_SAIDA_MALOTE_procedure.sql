-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gel_registrar_saida_malote ( nr_seq_malote_p bigint, ie_acao_p text, nr_seq_local_p text, nm_usuario_p text) AS $body$
DECLARE


/*
ie_acao_p
-S - Saida
-E - Entrega
*/
nr_seq_envelope_w	bigint;
dt_atual_w		timestamp := clock_timestamp();

C01 CURSOR FOR
SELECT	a.nr_sequencia
FROM	malote_envelope_item b,
	envelope_laudo a
WHERE	a.nr_sequencia = b.nr_seq_envelope
AND	b.nr_Seq_malote = nr_seq_malote_p
AND	(((coalesce(a.dt_saida_entrega::text, '') = '') AND (ie_acao_p = 'S')) OR
	 ((coalesce(a.dt_entrega::text, '') = '') AND (ie_acao_p = 'E')));


BEGIN

IF (ie_acao_p = 'S') THEN
	begin
	UPDATE	malote_envelope_laudo
	SET	dt_saida_entrega = dt_atual_w,
		nm_usuario_saida_entrega = nm_usuario_p,
		dt_atualizacao = dt_atual_w,
		nm_usuario = nm_usuario_p,
		nr_seq_status_malote = 20
	WHERE	nr_sequencia = nr_seq_malote_p;

	if (nr_seq_local_p IS NOT NULL AND nr_seq_local_p::text <> '') then
		CALL Inserir_Local_Ent_Malote(nr_seq_malote_p, nr_seq_local_p, nm_usuario_p);
	end if;

	OPEN C01;
	LOOP
	FETCH C01 INTO
		nr_seq_envelope_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN

		UPDATE  malote_envelope_item
		SET	dt_saida_entrega = dt_atual_w,
			nm_usuario_saida_entrega = nm_usuario_p,
			dt_atualizacao = dt_atual_w,
			nm_usuario = nm_usuario_p
		WHERE	nr_seq_envelope = nr_seq_envelope_w;

		update	envelope_laudo
		set	dt_saida_entrega = dt_atual_w,
			nm_usuario_saida_entrega = nm_usuario_p,
			DT_ATUALIZACAO = DT_ATUAL_W,
			NM_USUARIO = NM_USUARIO_P,
			nr_seq_status_envelope = 30
		where	nr_sequencia = nr_seq_envelope_w;

		END;
	END LOOP;
	CLOSE C01;
	end;
ELSE
	UPDATE	malote_envelope_laudo
	SET	dt_entrega = dt_atual_w,
		nm_usuario_entrega = nm_usuario_p,
		DT_ATUALIZACAO = DT_ATUAL_W,
		nm_usuario = nm_usuario_p,
		nr_seq_status_malote = 30
	WHERE	nr_sequencia = nr_seq_malote_p;

	OPEN C01;
	LOOP
	FETCH C01 INTO
		nr_seq_envelope_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN

		UPDATE  envelope_laudo
		SET	dt_entrega = dt_atual_w,
			nm_usuario_entrega = nm_usuario_p,
			nr_seq_status_envelope = 40,
			dt_atualizacao = dt_atual_w,
			nm_usuario = nm_usuario_p
		WHERE	nr_sequencia = nr_seq_envelope_w;

		END;
	END LOOP;
	CLOSE C01;
END IF;
COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gel_registrar_saida_malote ( nr_seq_malote_p bigint, ie_acao_p text, nr_seq_local_p text, nm_usuario_p text) FROM PUBLIC;

