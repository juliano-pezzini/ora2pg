-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_item_proc_vinc ( nr_prescricao_p bigint, nr_seq_rotina_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
cd_categoria_w			bigint;
cd_convenio_w			bigint;
cd_estabelecimento_w	smallint;
cd_plano_w				atend_categoria_convenio.cd_plano_convenio%type;
cd_procedimento_w		bigint;
ie_origem_proc_filtro_w	bigint;
ie_origem_proced_w		bigint;
ie_sexo_prescr_w		varchar(1);
ie_tipo_atendimento_w	smallint;
ie_tipo_convenio_w		smallint;
nr_atendimento_w		bigint;
nr_seq_atecaco_w		bigint;
nr_seq_item_w			bigint;
nr_seq_proc_interno_w	bigint;
qt_idade_pac_w			bigint;
qt_proced_w				double precision;
cd_medico_w				bigint;

C01 CURSOR FOR 
SELECT a.nr_sequencia, 
	a.qt_proc_adic, 
	a.cd_procedimento, 
	a.ie_origem_proced, 
	a.nr_seq_proc_int_adic 
FROM	proc_int_proc_prescr a 
WHERE	a.nr_seq_proc_interno	= nr_seq_proc_interno_w 
and 	coalesce(a.cd_convenio,cd_convenio_w) = cd_convenio_w 
and		((coalesce(a.cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_w)) 
and	coalesce(a.ie_situacao,'A')	= 'A' 
and	coalesce(a.ie_somente_agenda_cir,'N') = 'N' 
and 	((coalesce(a.cd_convenio_excluir::text, '') = '') or (a.cd_convenio_excluir <> cd_convenio_w)) 
and	((coalesce(a.cd_categoria_convenio::text, '') = '') or (a.cd_categoria_convenio = cd_categoria_w)) 
and	((a.cd_plano_convenio	= cd_plano_w) or (coalesce(a.cd_plano_convenio::text, '') = '')) 
and	((coalesce(a.cd_medico_prescritor::text, '') = '') or (a.cd_medico_prescritor = cd_medico_w)) 
and	((coalesce(a.cd_medico_excluir::text, '') = '') or (a.cd_medico_excluir <> cd_medico_w)) 
and 	((a.ie_origem_proc_filtro = ie_origem_proc_filtro_w) or (coalesce(a.ie_origem_proc_filtro::text, '') = '')) 
and 	((coalesce(a.ie_permite_duplicado,'N')	= 'S') or (not exists ( 
		SELECT	1 
		from	prescr_procedimento b 
		where	b.nr_prescricao	= nr_prescricao_p 
		and	b.nr_seq_proc_interno	= a.nr_seq_proc_int_adic))) 
and	(((coalesce(qt_idade_pac_w::text, '') = '') or (coalesce(a.qt_idade_min::text, '') = '' and coalesce(a.qt_idade_max::text, '') = '')) or 
	((qt_idade_pac_w IS NOT NULL AND qt_idade_pac_w::text <> '') and (qt_idade_pac_w between coalesce(a.qt_idade_min,qt_idade_pac_w) and 
	coalesce(a.qt_idade_max,qt_idade_pac_w)))) 
and	((ie_sexo = ie_sexo_prescr_w) or (coalesce(ie_sexo::text, '') = ''));

BEGIN
 
Select	max(nr_proc_interno) 
into STRICT	nr_seq_proc_interno_w 
from	procedimento_rotina 
where	nr_sequencia	= nr_seq_rotina_p;
 
if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then 
	Select	max(a.nr_atendimento), 
		max(obter_atecaco_atendimento(a.nr_atendimento)), 
		max(a.cd_estabelecimento), 
		max(cd_medico) 
	into STRICT	nr_atendimento_w, 
		nr_seq_atecaco_w, 
		cd_estabelecimento_w, 
		cd_medico_w 
	from	prescr_medica a 
	where	a.nr_prescricao = nr_prescricao_p;
 
	Select	coalesce(max(c.cd_convenio),0), 
		coalesce(max(c.cd_categoria),0), 
		coalesce(max(c.cd_plano_convenio),0), 
		coalesce(max(Obter_Idade(p.dt_nascimento,coalesce(p.dt_obito,clock_timestamp()), 'A')),0), 
		max(a.ie_tipo_atendimento) 
	into STRICT	cd_convenio_w, 
		cd_categoria_w, 
		cd_plano_w, 
		qt_idade_pac_w, 
		ie_tipo_atendimento_w 
	from	Pessoa_fisica p, 
		atend_categoria_convenio c, 
		atendimento_paciente a 
	where	a.cd_pessoa_fisica	= p.cd_pessoa_fisica 
	and 	c.nr_Atendimento	= a.nr_atendimento 
	and 	c.nr_Seq_interno	= nr_seq_atecaco_w 
	and 	a.nr_Atendimento	= nr_atendimento_w;
	 
	select 	max(ie_tipo_convenio) 
	into STRICT	ie_tipo_convenio_w 
	from 	convenio 
	where 	cd_convenio = cd_convenio_w;
	 
	ie_sexo_prescr_w := Obter_Sexo_Prescricao(nr_prescricao_p);
	ie_origem_proc_filtro_w:= Obter_Origem_Proced_Cat(cd_estabelecimento_w, ie_tipo_atendimento_w, ie_tipo_convenio_w, cd_convenio_w, cd_categoria_w);
	 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_item_w, 
		qt_proced_w, 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		nr_seq_proc_interno_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		Delete	from w_item_prescr 
		where	nr_seq_item	= nr_seq_item_w 
		and	nr_prescricao	= nr_prescricao_p;
		 
		insert into w_item_prescr( 
			nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			nr_prescricao, 
			nr_seq_item, 
			qt_dose, 
			nr_seq_proc_interno, 
			cd_procedimento, 
			ie_origem_proced, 
			cd_protocolo, 
			ie_origem_inf) 
		Values (nextval('w_item_prescr_seq'), 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_prescricao_p, 
			nr_seq_item_w, 
			qt_proced_w, 
			nr_seq_proc_interno_w, 
			cd_procedimento_w, 
			ie_origem_proced_w, 
			nr_seq_rotina_p, 
			'PVPi');
		end;
	end loop;
	close C01;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_item_proc_vinc ( nr_prescricao_p bigint, nr_seq_rotina_p bigint, nm_usuario_p text) FROM PUBLIC;

