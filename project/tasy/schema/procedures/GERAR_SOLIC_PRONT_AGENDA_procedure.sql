-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_solic_pront_agenda ( cd_pessoa_fisica_p text, nr_seq_agenda_p bigint, cd_agenda_p bigint, dt_agenda_p timestamp, nm_usuario_p text) AS $body$
DECLARE


nr_prontuario_w			bigint;
nr_seq_prontuario_w		bigint;
nr_seq_solic_w			bigint;
cd_setor_atendimento_w		bigint;
cd_estabelecimento_w		bigint;
qt_existe_cpi_w			bigint;
nr_sequencia_w			bigint;
cd_tipo_agenda_w		bigint;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%TYPE;
nr_seq_pront_w			bigint;
qt_pront_w			bigint;
nr_prontuario_novo_w		pessoa_fisica.nr_prontuario%type;
ie_existe_reg_w		bigint;


BEGIN

SELECT	MAX(cd_setor_exclusivo),
	MAX(cd_estabelecimento),
	MAX(cd_tipo_agenda)
INTO STRICT	cd_setor_atendimento_w,
	cd_estabelecimento_w,
	cd_tipo_agenda_w
FROM	agenda
WHERE	cd_agenda		= cd_agenda_p;

/*select	nvl(max(nr_prontuario), 0)
into	nr_prontuario_w
from	pessoa_fisica
where 	cd_pessoa_fisica	= cd_pessoa_fisica_p;
Matheus OS 182242*/
nr_prontuario_w	:= coalesce(obter_prontuario_pf(cd_estabelecimento_w, cd_pessoa_fisica_p),0);

ie_existe_reg_w := 0;

SELECT  MAX(cd_pessoa_fisica)
INTO STRICT	cd_pessoa_fisica_w
FROM	same_cpi_prontuario
WHERE 	nr_prontuario = nr_prontuario_w;

IF (cd_pessoa_fisica_w <> cd_pessoa_fisica_p) AND (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') THEN
	BEGIN
	SELECT	COUNT(*)
	INTO STRICT	qt_pront_w
	FROM	same_cpi_prontuario
	WHERE	cd_pessoa_fisica = cd_pessoa_fisica_w;
	nr_prontuario_novo_w := coalesce(obter_prontuario_pf(cd_estabelecimento_w,cd_pessoa_fisica_w),0);
	IF (qt_pront_w = 1) and (nr_prontuario_novo_w > 0) THEN
		BEGIN
		
		select count(1)
		into STRICT ie_existe_reg_w
		from same_cpi_prontuario
		where cd_pessoa_fisica = cd_pessoa_fisica_w
		and nr_prontuario = nr_prontuario_novo_w;
		
		if (ie_existe_reg_w = 0) then
			begin
				UPDATE	same_cpi_prontuario
				SET	nr_prontuario = nr_prontuario_novo_w
				WHERE	cd_pessoa_fisica = cd_pessoa_fisica_w;
			end;
		else
			CALL gravar_log_tasy(99990,obter_desc_expressao(604756)||
					' -  '||wheb_mensagem_pck.get_texto(799828)||': '||nr_prontuario_novo_w||
					' -  '||wheb_mensagem_pck.get_texto(799920)||': '||cd_pessoa_fisica_w,nm_usuario_p);
		end if;
		
		
		end;
	ELSE
		DELETE	FROM same_cpi_prontuario
		WHERE	cd_pessoa_fisica = cd_pessoa_fisica_w
		AND	nr_prontuario <> nr_prontuario_novo_w;
	
	END IF;
	END;

END IF;

SELECT	COUNT(*)
INTO STRICT	qt_existe_cpi_w
FROM	same_cpi_prontuario
WHERE	cd_pessoa_fisica	= cd_pessoa_fisica_p
AND	nr_prontuario		= nr_prontuario_w
AND	cd_estabelecimento	= cd_estabelecimento_w;


IF (qt_existe_cpi_w = 0) AND (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') AND (nr_prontuario_w > 0) THEN

	SELECT	nextval('same_cpi_prontuario_seq')
	INTO STRICT	nr_sequencia_w
	;

	INSERT INTO same_cpi_prontuario(
		nr_sequencia,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		nr_prontuario,
		cd_pessoa_fisica,
		qt_volume,
		ds_localizacao,
		dt_atualizacao_nrec,
		nm_usuario_nrec)
	VALUES (	nr_sequencia_w,
		cd_estabelecimento_w,
		clock_timestamp(),
		nm_usuario_p,
		nr_prontuario_w,
		cd_pessoa_fisica_p,
		1,
		NULL,
		clock_timestamp(),
		nm_usuario_p);
END IF;

SELECT	coalesce(MAX(nr_sequencia),0)
INTO STRICT	nr_seq_prontuario_w
FROM	same_cpi_prontuario
WHERE	nr_prontuario		= nr_prontuario_w
AND		cd_estabelecimento	= cd_estabelecimento_w;

IF (nr_seq_prontuario_w > 0) AND (cd_setor_atendimento_w > 0) AND (cd_estabelecimento_w > 0) THEN
	BEGIN

	SELECT	coalesce(MAX(nr_sequencia),0)
	INTO STRICT	nr_seq_solic_w
	FROM	same_cpi_solic
	WHERE	cd_estabelecimento		= cd_estabelecimento_w
	AND	nr_prontuario		= nr_prontuario_w
	AND	cd_setor_atendimento	= cd_setor_atendimento
	AND	cd_agenda		= cd_agenda_p
	AND	coalesce(dt_cancelamento::text, '') = ''
	AND	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_desejada)	= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_p);

	IF (nr_seq_solic_w = 0) THEN
		BEGIN

		SELECT	nextval('same_cpi_solic_seq')
		INTO STRICT	nr_seq_solic_w
		;

		IF (cd_tipo_agenda_w = 2) THEN
			INSERT 	INTO same_cpi_solic(nr_sequencia,
				cd_estabelecimento,
				nr_prontuario,
				dt_atualizacao,
				nm_usuario,
				nr_seq_agenda_cir,
				cd_setor_atendimento,
				dt_solicitacao,
				dt_desejada,
				ie_status_solic,
				nm_usuario_solic,
				cd_agenda)
			VALUES (	nr_seq_solic_w,
				cd_estabelecimento_w,
				nr_prontuario_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_agenda_p,
				cd_setor_atendimento_w,
				clock_timestamp(),
				dt_agenda_p,
				'A',
				nm_usuario_p,
				cd_agenda_p);
		ELSE
			INSERT 	INTO same_cpi_solic(nr_sequencia,
				cd_estabelecimento,
				nr_prontuario,
				dt_atualizacao,
				nm_usuario,
				nr_seq_agenda,
				cd_setor_atendimento,
				dt_solicitacao,
				dt_desejada,
				ie_status_solic,
				nm_usuario_solic,
				cd_agenda)
			VALUES (	nr_seq_solic_w,
				cd_estabelecimento_w,
				nr_prontuario_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_agenda_p,
				cd_setor_atendimento_w,
				clock_timestamp(),
				dt_agenda_p,
				'A',
				nm_usuario_p,
				cd_agenda_p);
		END IF;
		END;
	END IF;

	END;
END IF;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_solic_pront_agenda ( cd_pessoa_fisica_p text, nr_seq_agenda_p bigint, cd_agenda_p bigint, dt_agenda_p timestamp, nm_usuario_p text) FROM PUBLIC;

