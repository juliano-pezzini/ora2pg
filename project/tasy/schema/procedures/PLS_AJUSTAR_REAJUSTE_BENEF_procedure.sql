-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_ajustar_reajuste_benef () AS $body$
DECLARE


nr_seq_historico_w		bigint;
nr_seq_tabela_seg_w		bigint;
ds_observacao_w			varchar(4000);
pos_hist_w			bigint;
ds_auxiliar_w			varchar(4000);
nr_tabela_w			bigint;
nr_seq_plano_preco_w		bigint;
qt_idade_inicial_w		integer;
nr_seq_reajuste_w		bigint;
nr_seq_plano_atual_w		bigint;
qt_reajuste_w			bigint;
dt_reajuste_w			timestamp;
nr_seq_segurado_w		bigint;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_tabela,
		b.nr_sequencia,
		b.ds_observacao
	from	pls_segurado a,
		pls_segurado_historico b
	where	a.nr_sequencia	= b.nr_seq_segurado
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	trunc(dt_historico,'dd')	= to_date('21/05/2009')
	and	b.ds_historico = 'Mudança de tabela';

C02 CURSOR FOR
	SELECT	nr_sequencia,
		qt_idade_inicial
	from	pls_plano_preco
	where	nr_seq_tabela	= nr_tabela_w;

C03 CURSOR FOR
	SELECT	nr_sequencia,
		dt_reajuste
	from	pls_reajuste_preco
	where	nr_seq_preco	= nr_seq_plano_preco_w;


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_segurado_w,
	nr_seq_tabela_seg_w,
	nr_seq_historico_w,
	ds_observacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	position('Alterada tabela de preço de'  ds_observacao_w) + 28
	into STRICT	pos_hist_w
	;

	if (pos_hist_w >= 29) then
		select	substr(ds_observacao_w,pos_hist_w,length(ds_observacao_w))
		into STRICT	ds_auxiliar_w
		;

		select	(substr(ds_auxiliar_w,1,position(' ' in ds_auxiliar_w)))::numeric
		into STRICT	nr_tabela_w
		;

		open C02;
		loop
		fetch C02 into
			nr_seq_plano_preco_w,
			qt_idade_inicial_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			select	max(nr_sequencia)
			into STRICT	nr_seq_plano_atual_w
			from	pls_plano_preco
			where	nr_seq_tabela	= nr_seq_tabela_seg_w
			and	qt_idade_inicial	= qt_idade_inicial_w;

			if (coalesce(nr_seq_plano_atual_w,0) <> 0) then
				open C03;
				loop
				fetch C03 into
					nr_seq_reajuste_w,
					dt_reajuste_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin

					select	count(*)
					into STRICT	qt_reajuste_w
					from	pls_reajuste_preco
					where	nr_seq_preco		= nr_seq_plano_atual_w
					and	trunc(dt_reajuste,'dd')	= dt_reajuste_w;

					if (qt_reajuste_w	= 0) then
						insert into pls_reajuste_preco(	nr_sequencia,
										dt_atualizacao,
										nm_usuario,
										dt_atualizacao_nrec,
										nm_usuario_nrec,
										nr_seq_reajuste,
										dt_reajuste,
										pr_reajustado,
										vl_base,
										vl_reajustado,
										nr_seq_preco,
										nr_seq_tabela,
										dt_liberacao,
										nm_usuario_lib,
										dt_periodo_inicial,
										dt_periodo_final,
										dt_autorizacao_ans,
										vl_preco_nao_subsidiado,
										vl_preco_nao_subsid_base)
									(SELECT	nextval('pls_reajuste_preco_seq'),
										clock_timestamp(),
										nm_usuario,
										clock_timestamp(),
										nm_usuario,
										nr_seq_reajuste,
										dt_reajuste,
										pr_reajustado,
										vl_base,
										vl_reajustado,
										nr_seq_plano_atual_w,
										nr_seq_tabela,
										dt_liberacao,
										nm_usuario_lib,
										dt_periodo_inicial,
										dt_periodo_final,
										dt_autorizacao_ans,
										vl_preco_nao_subsidiado,
										vl_preco_nao_subsid_base
									from	pls_reajuste_preco
									where	nr_sequencia	= nr_seq_reajuste_w);
					end if;
					end;
				end loop;
				close C03;
			end if;

			end;
		end loop;
		close C02;
	end if;

	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ajustar_reajuste_benef () FROM PUBLIC;

