-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importar_cep_cargas_txt (ds_arquivo_p text, ds_linha_p text, ie_opcao_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_posicao_w      bigint;
ds_titulo_w      varchar(72);
ie_tipo_log_w      varchar(125);
ds_insert_w      varchar(4000);
ds_comando_w      varchar(4000);
ds_parametros_w      varchar(4000);
ds_linha_w      varchar(4000);
sg_pais_w      pais.sg_pais%type;
nm_pais_w      pais.nm_pais%type;
ds_uf_w        cep_log.ds_uf%type;
cd_cep_w        cep_log.cd_cep%type;
ie_tipo_w      cep_loc.ie_tipo%type;
nr_seq_loc_w      cep_log.nr_seq_loc%type;
ie_operacao_w      cep_log.ie_operacao%type;
nr_sequencia_w      cep_log.nr_sequencia%type;
ie_log_ativo_w      cep_log.ie_log_ativo%type;
ds_bairro_w      cep_bairro.ds_bairro%type;
nm_logradouro_w      cep_log.nm_logradouro%type;
ds_preposicao_w      cep_log.ds_preposicao%type;
ds_patente_w      cep_log.ds_patente%type;
nm_localidade_w      cep_loc.nm_localidade%type;
ds_complemento_w      cep_log.ds_complemento%type;
cd_bairro_final_w      cep_log.cd_bairro_final%type;
nr_seq_superior_w      cep_loc.nr_seq_superior%type;
cd_bairro_inicial_w    cep_log.cd_bairro_inicial%type;
ds_tipo_logradouro_w    cep_log.ds_tipo_logradouro%type;



BEGIN

if (upper(substr(ds_linha_p,1,1)) <> '#') and (upper(substr(ds_linha_p,1,1)) <> 'C') and (upper(ds_arquivo_p) = 'PAISES') then

  sg_pais_w    := trim(both substr(ds_linha_p,2,2));
  nm_pais_w    := trim(both substr(ds_linha_p,7,30));

  insert  into pais(  nr_sequencia,
        dt_atualizacao,
        dt_atualizacao_nrec,
        nm_usuario,
        nm_usuario_nrec,
        nm_pais,
        sg_pais,
        ie_situacao)
       SELECT nextval('pais_seq'),
        clock_timestamp(),
        clock_timestamp(),
        nm_usuario_p,
        nm_usuario_p,
        nm_pais_w,
        sg_pais_w,
        'A'

      where not exists (SELECT 1 from pais a where a.sg_pais = sg_pais_w);

elsif (upper(substr(ds_linha_p,1,1)) <> '#') and (upper(substr(ds_linha_p,1,1)) <> 'C') and (upper(ds_arquivo_p) like('%LOCALIDADES%')) then

  ds_uf_w      := trim(both substr(ds_linha_p,4,2));
  cd_cep_w      := trim(both substr(ds_linha_p,92,8));
  nm_localidade_w    := trim(both substr(ds_linha_p,20,72));
  ie_tipo_w    := trim(both substr(ds_linha_p,136,1));
  nr_sequencia_w    := (substr(ds_linha_p,12,8))::numeric;
  nr_seq_superior_w    := somente_numero(substr(ds_linha_p,144,8));

  CALL gravar_processo_longo(ds_comando_w,'IMPORTAR_CEP_LOCALIDADE',null);
  insert  into w_cep_loc(  nr_sequencia,
        nm_localidade,
        cd_cep,
        ds_uf,
        ie_tipo,
        nr_seq_superior,
        ie_operacao,
        dt_atualizacao,
        nm_usuario)
      values ( nr_sequencia_w,
        nm_localidade_w,
        cd_cep_w,
        ds_uf_w,
        ie_tipo_w,
        nr_seq_superior_w,
        ie_operacao_w,
        clock_timestamp(),
        nm_usuario_p);

elsif (upper(substr(ds_linha_p,1,1)) <> '#') and (upper(substr(ds_linha_p,1,1)) <> 'C') and (upper(ds_arquivo_p) like('%BAIRROS%')) then

  ds_uf_w      := trim(both substr(ds_linha_p,2,2));
  ds_bairro_w    := trim(both substr(ds_linha_p,103,72));
  nr_sequencia_w    := (substr(ds_linha_p,95,8))::numeric;
  nr_seq_loc_w    := (substr(ds_linha_p,10,8))::numeric;

  CALL gravar_processo_longo(ds_comando_w,'IMPORTAR_CEP_BAIRRO',null);
  insert  into w_cep_bairro( nr_sequencia,
          ds_bairro,
          nr_seq_loc,
          ds_uf,
          ie_operacao,
          dt_atualizacao,
          nm_usuario)
      values (    nr_sequencia_w,
          ds_bairro_w,
          nr_seq_loc_w,
          ds_uf_w,
          ie_operacao_w,
          clock_timestamp(),
          nm_usuario_p);

elsif (upper(substr(ds_linha_p,1,1)) <> '#') and (upper(substr(ds_linha_p,1,1)) <> 'C') and (upper(ds_arquivo_p) like('%LOGRADOUROS%')) then

  nr_posicao_w    := 0;
  nr_sequencia_w    := (substr(ds_linha_p,367,8))::numeric;
  ds_patente_w    := trim(both substr(ds_linha_p,289,72));
  ds_preposicao_w  := trim(both substr(ds_linha_p,286,3));
  nm_logradouro_w    := trim(both substr(ds_linha_p,375,72));
  nr_seq_loc_w    := (substr(ds_linha_p,10,8))::numeric;
  cd_cep_w      := trim(both substr(ds_linha_p,519,8));
  ds_uf_w      := trim(both substr(ds_linha_p,2,2));
  ds_complemento_w    := trim(both substr(ds_linha_p,483,36)) || ' ' ||
           trim(both substr(ds_linha_p,90,5))   || ' ' ||
           trim(both substr(ds_linha_p,175,5));
  cd_bairro_inicial_w  := (substr(ds_linha_p,95,8))::numeric;
  cd_bairro_final_w    := (substr(ds_linha_p,180,8))::numeric;
  ds_tipo_logradouro_w  := trim(both substr(ds_linha_p,260,26));

  if (ie_opcao_p = 0) then
    if (upper(substr(ds_linha_p,1,1)) = 'D') then
      ie_log_ativo_w  := trim(both substr(ds_linha_p,528,1));
      nr_posicao_w  := 0;

    elsif (upper(substr(ds_linha_p,1,1)) = 'S') then
      nr_posicao_w  := 30;
      nm_logradouro_w  := trim(both substr(ds_linha_p,375,72)) || ' ' ||
             wheb_mensagem_pck.get_texto(570246,'NR_INICIAL='  || trim(both substr(ds_linha_p,528,11)) || ';NR_FINAL=' || trim(both substr(ds_linha_p,539,11)));

    elsif (upper(substr(ds_linha_p,1,1)) = 'N') then
      nr_posicao_w  := 19;
      nm_logradouro_w  := trim(both substr(ds_linha_p,375,72)) || ' ' ||
             trim(both substr(ds_linha_p,528,11));

    elsif (upper(substr(ds_linha_p,1,1)) = 'K') then
      nr_posicao_w  := 74;
      nm_logradouro_w  := trim(both substr(ds_linha_p,375,72)) || ' ' ||
             trim(both substr(ds_linha_p,528,11)) || ' ' ||
             trim(both substr(ds_linha_p,539,11)) || ' ' ||
             trim(both substr(ds_linha_p,575,11));

    elsif (upper(substr(ds_linha_p,1,1)) = 'Q') then
      ie_log_ativo_w  := 'S';
      nr_posicao_w  := 0;
    end if;

  elsif (ie_opcao_p = 1) then
    if (upper(substr(ds_linha_p,1,1)) = 'D') then
      ie_log_ativo_w  := trim(both substr(ds_linha_p,528,1));
      nr_posicao_w  := 0;

    elsif (upper(substr(ds_linha_p,1,1)) = 'S') then
      nr_posicao_w  := 31;
      nm_logradouro_w  := trim(both substr(ds_linha_p,375,72)) || ' ' ||
             wheb_mensagem_pck.get_texto(570246,'NR_INICIAL='  || trim(both substr(ds_linha_p,528,11)) || ';NR_FINAL=' || trim(both substr(ds_linha_p,539,11)));

    elsif (upper(substr(ds_linha_p,1,1)) = 'N') then
      nr_posicao_w  := 19;
      nm_logradouro_w  := trim(both substr(ds_linha_p,375,72)) || ' ' ||
             trim(both substr(ds_linha_p,528,11));

    elsif (upper(substr(ds_linha_p,1,1)) = 'K') then
      nr_posicao_w  := 74;
      nm_logradouro_w  := trim(both substr(ds_linha_p,375,72)) || ' ' ||
             trim(both substr(ds_linha_p,528,11)) || ' ' ||
             trim(both substr(ds_linha_p,539,11)) || ' ' ||
             trim(both substr(ds_linha_p,575,11));
    end if;
  end if;

  if (ie_opcao_p = 0) and (nr_posicao_w > 0) then
    ie_log_ativo_w := trim(both substr(ds_linha_p,529 + nr_posicao_w ,1));
  elsif (ie_opcao_p = 1) and (nr_posicao_w > 0) then
    ie_log_ativo_w := trim(both substr(ds_linha_p,528 + nr_posicao_w ,1));
  end if;

  select substr(trim(both ds_patente_w || CASE WHEN ds_preposicao_w='' THEN ''  ELSE ' ' || ds_preposicao_w END  || ' ' || nm_logradouro_w),1,125) into STRICT nm_logradouro_w;

  CALL gravar_processo_longo(ds_comando_w,'IMPORTAR_CEP_LOGRADOURO',null);
  insert  into w_cep_log(  nr_sequencia,
        nm_logradouro,
        nr_seq_loc,
        cd_cep,
        ds_uf,
        ds_complemento,
        cd_bairro_inicial,
        cd_bairro_final,
        ds_tipo_logradouro,
        ds_preposicao,
        ds_patente,
        ie_log_ativo,
        ie_operacao,
        dt_atualizacao,
        nm_usuario)
      values ( nr_sequencia_w,
        nm_logradouro_w,
        nr_seq_loc_w,
        cd_cep_w,
        ds_uf_w,
        ds_complemento_w,
        cd_bairro_inicial_w,
        cd_bairro_final_w,
        ds_tipo_logradouro_w,
        ds_preposicao_w,
        ds_patente_w,
        ie_log_ativo_w,
        ie_operacao_w,
        clock_timestamp(),
        nm_usuario_p);


elsif (upper(substr(ds_linha_p,1,1)) <> '#') and
  ((upper(substr(ds_linha_p,1,1)) = 'D') or (upper(substr(ds_linha_p,1,1)) = 'E')) and (upper(ds_arquivo_p) like('%GRANDES_USUARIOS%')) then

  ie_operacao_w    := '';
  ds_linha_w    := ds_linha_p;
  ds_uf_w      := trim(both substr(ds_linha_w,2,2));
  cd_cep_w      := trim(both substr(ds_linha_w,261,8));
  ds_complemento_w    := trim(both substr(ds_linha_w,189,72));
  cd_bairro_inicial_w  := (substr(ds_linha_w,95,8))::numeric;
  nr_seq_loc_w    := (substr(ds_linha_w,10,8))::numeric;
  nr_sequencia_w    := (substr(ds_linha_w,181,8))::numeric;

  if (ie_opcao_p = 1) then
     ie_operacao_w := trim(both substr(ds_linha_w,305,1));
  end if;

  ds_linha_w    := substr(ds_linha_p,position(chr(10) in ds_linha_p)+1,length(ds_linha_p));

  ie_log_ativo_w    := 'G';
  ds_preposicao_w    := trim(both substr(ds_linha_w,88,3));
  ie_tipo_log_w    := trim(both substr(ds_linha_w,16,72));
  ds_titulo_w    := trim(both substr(ds_linha_w,91,72));

  if (ds_preposicao_w IS NOT NULL AND ds_preposicao_w::text <> '') then
    nm_logradouro_w := trim(both substr(ds_titulo_w || ' ' || ds_preposicao_w || ' ' || substr(ds_linha_w,177,72) ,1,125));
  else
    nm_logradouro_w := trim(both substr(ds_titulo_w || ' ' || substr(ds_linha_w,177,72) ,1,125));
  end if;


  CALL gravar_processo_longo(ds_comando_w,'IMPORTAR_CEP_LOGRADOURO',null);
  insert  into w_cep_log(  nr_sequencia,
        nm_logradouro,
        nr_seq_loc,
        cd_cep,
        ds_uf,
        ie_log_ativo,
        dt_atualizacao,
        cd_bairro_inicial,
        ie_operacao,
        ds_complemento,
        ds_tipo_logradouro,
        nm_usuario)
      values (nr_sequencia_w,
        nm_logradouro_w,
        nr_seq_loc_w,
        cd_cep_w,
        ds_uf_w,
        ie_log_ativo_w,
        clock_timestamp(),
        cd_bairro_inicial_w,
        ie_operacao_w,
        ds_complemento_w,
        ie_tipo_log_w,
        nm_usuario_p);


elsif (upper(substr(ds_linha_p,1,1)) <> '#') and (upper(substr(ds_linha_p,1,1)) <> 'C') and (upper(ds_arquivo_p) like('%CAIXA_POSTAIS_COMUNIT%')) then

  ie_operacao_w    := '';
  ds_uf_w      := trim(both substr(ds_linha_p,2,2));
  cd_cep_w      := trim(both substr(ds_linha_p,90,8));
  ds_patente_w    := trim(both substr(ds_linha_p,289,72));
  ds_complemento_w    := trim(both substr(ds_linha_p,250,6)) || ' ' || trim(both substr(ds_linha_p,256,6));
  cd_bairro_inicial_w  := (substr(ds_linha_p,170,8))::numeric;
  nr_seq_loc_w    := (substr(ds_linha_p,10,8))::numeric;
  nr_sequencia_w    := (substr(ds_linha_p,170,8))::numeric;
  nm_logradouro_w  := trim(both substr(ds_linha_p,178,72));

  if (ie_opcao_p = 1) then
     ie_operacao_w := trim(both substr(ds_linha_p,334,1));
  end if;

  ie_log_ativo_w    := 'C';
  ds_preposicao_w    := '';

  CALL gravar_processo_longo(ds_comando_w,'IMPORTAR_CEP_LOGRADOURO',null);
  insert into w_cep_log( nr_sequencia,
        nm_logradouro,
        nr_seq_loc,
        cd_cep,
        ds_uf,
        ds_complemento,
        cd_bairro_inicial,
        ds_preposicao,
        ds_patente,
        ie_log_ativo,
        ie_operacao,
        dt_atualizacao,
        nm_usuario)
      values ( nr_sequencia_w,
        nm_logradouro_w,
        nr_seq_loc_w,
        cd_cep_w,
        ds_uf_w,
        ds_complemento_w,
        cd_bairro_inicial_w,
        ds_preposicao_w,
        ds_patente_w,
        ie_log_ativo_w,
        ie_operacao_w,
        clock_timestamp(),
        nm_usuario_p);

end if;

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importar_cep_cargas_txt (ds_arquivo_p text, ds_linha_p text, ie_opcao_p bigint, nm_usuario_p text) FROM PUBLIC;

