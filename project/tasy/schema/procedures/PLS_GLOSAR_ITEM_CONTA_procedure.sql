-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_glosar_item_conta ( nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

				
/* Felipe - OS 355351 - 25/08/2011 - Ajustado para o valor glosa ser o valor apresentado, mas se for zerado então será o valor total liberado */
ie_status_fatura_w		varchar(10);
ie_via_acesso_w			varchar(5);
ie_via_acesso_inf_w		varchar(5);
ie_origem_conta_w		varchar(1);
ie_via_acesso_regra_w		varchar(1);
ie_via_acesso_imp_w		varchar(1);
ie_vl_calculado_glosa_w		varchar(1);
vl_glosa_w			double precision;
vl_liberado_w			double precision;
vl_apresentado_w		double precision;
vl_procedimento_imp_w		double precision;
vl_procedimento_w		double precision;
nr_seq_protocolo_w		bigint;
nr_seq_conta_w			bigint;
vl_total_procedimento_w		bigint;
vl_material_w			bigint;
qt_glosa_mat_w			bigint;
qt_glosa_proc_w			bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_conta_mat_w		bigint;
nr_seq_analise_w		bigint;
nr_seq_pos_estab_w		bigint;
nr_seq_regra_via_acesso_w	bigint;
qt_glosa_ativa_w		bigint;
nr_seq_fatura_w			bigint;
dt_devolucao_w			timestamp;
vl_material_imp_w		double precision;
ie_analise_cm_nova_w		varchar(3);
ie_via_acesso_manual_w		pls_conta_proc.ie_via_acesso_manual%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		coalesce(vl_procedimento_imp,0),
		coalesce(vl_procedimento,0)
	from	pls_conta_proc
	where	nr_seq_conta	= nr_seq_conta_p
	and	ie_status	<> 'D'
	order by 1;	

C02 CURSOR FOR
	SELECT	nr_sequencia,
		vl_material_imp,
		vl_material
	from	pls_conta_mat
	where	nr_seq_conta	= nr_seq_conta_p
	and	ie_status	<> 'D'
	order by 1;

C03 CURSOR FOR
	SELECT	nr_sequencia,
		ie_via_acesso,
		ie_via_acesso_imp,
		nr_seq_regra_via_acesso,
		ie_via_acesso_manual
	from	pls_conta_proc
	where	nr_seq_conta	= nr_seq_conta_w
	and	ie_status	<> 'D'
	order by 1;

BEGIN
nr_seq_pos_estab_w	:= 0;

select	coalesce(ie_calculo_base_glosa, 'N'),
	coalesce(ie_analise_cm_nova,'N')
into STRICT	ie_vl_calculado_glosa_w,
	ie_analise_cm_nova_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;

if (coalesce(nr_seq_conta_p,0) > 0) then
	/* Felipe - 28/03/2011 - OS 288481 - Histórico 25/03/2011 10:18:59 */

	begin
	select	a.nr_seq_fatura
	into STRICT	nr_seq_fatura_w
	from	pls_conta a
	where	a.nr_sequencia	= nr_seq_conta_p;
	exception
		when others then
		nr_seq_fatura_w	:= null;
	end;
	
	if (nr_seq_fatura_w IS NOT NULL AND nr_seq_fatura_w::text <> '') then
		select	a.ie_status,
			a.dt_devolucao
		into STRICT	ie_status_fatura_w,
			dt_devolucao_w
		from	ptu_fatura a
		where	a.nr_sequencia	= nr_seq_fatura_w;
		
		if (ie_status_fatura_w <> 'CA') and (coalesce(dt_devolucao_w::text, '') = '') then
			select	count(1)
			into STRICT	qt_glosa_ativa_w
			from	pls_conta_glosa	a
			where	a.nr_seq_conta	= nr_seq_conta_p
			and	coalesce(a.nr_seq_conta_proc::text, '') = ''
			and	coalesce(a.nr_seq_conta_mat::text, '') = ''
			and	coalesce(a.nr_seq_proc_partic::text, '') = ''
			and	a.ie_situacao	= 'A';
			
			if (qt_glosa_ativa_w = 0) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(210739);
			end if;
		end if;
	end if;
	
	open C01;
	loop
	fetch C01 into	
		nr_seq_conta_proc_w,
		vl_procedimento_imp_w,
		vl_procedimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		nr_seq_pos_estab_w := 0;
		
		vl_glosa_w := vl_procedimento_imp_w;

		update	pls_conta_proc a
		set	a.vl_liberado		= 0,
			a.qt_procedimento	= 0,
			a.vl_unitario		= 0,
			a.vl_glosa		= vl_glosa_w,
			a.vl_prestador		= 0,
			a.vl_pag_medico_conta	= 0,
			a.ie_status		= 'L',
			a.ds_log		= 'pls_glosar_item_conta',
			a.ie_glosa		= 'S',
			a.ie_status_pagamento	= 'G',
			vl_liberado_hi		= 0,
			vl_liberado_co          = 0,
			vl_liberado_material    = 0,
			vl_liberado_regra       = 0,
			vl_lib_original         = 0,
			vl_lib_taxa_co          = 0,
			vl_lib_taxa_material    = 0,
			vl_lib_taxa_servico     = 0,
			vl_glosa_co    		= vl_co_ptu_imp,         
			vl_glosa_hi             = vl_procedimento_ptu_imp,
			vl_glosa_material       = vl_material_ptu_imp,
			vl_glosa_taxa_co        = vl_taxa_co_imp,
			vl_glosa_taxa_material	= vl_taxa_material_imp,
			vl_glosa_taxa_servico   = vl_taxa_servico_imp
		where	a.nr_sequencia		= nr_seq_conta_proc_w;
		
		CALL pls_delete_pls_conta_pos_estab(	nr_seq_conta_proc_w,null,null,
						null);
		
		CALL pls_deletar_coparticipacao(nr_seq_conta_p,null,'S', 'N', null, null, nm_usuario_p,cd_estabelecimento_p);
		end;
	end loop;
	close C01;
	
	open C02;
	loop
	fetch C02 into	
		nr_seq_conta_mat_w,
		vl_material_imp_w,
		vl_material_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		if (vl_material_imp_w = 0 ) and (ie_vl_calculado_glosa_w = 'S') then
			vl_glosa_w := vl_material_w;
		else
			vl_glosa_w := vl_material_imp_w;
		end if;
		
		nr_seq_pos_estab_w := 0;
		update	pls_conta_mat a
		set	a.vl_liberado	= 0,
			a.qt_material	= 0,
			a.vl_unitario	= 0,
			a.vl_glosa	= vl_glosa_w,
			a.ie_status		= 'L',
			a.ie_glosa		= 'S',
			a.ds_log		= 'pls_glosar_item_conta',
			a.ie_status_pagamento	= 'G',		
			vl_liberado_regra       = 0,
			vl_lib_original         = 0,
			vl_lib_taxa_material    = 0,
			vl_glosa_taxa_material  = vl_taxa_material_imp
		where	a.nr_sequencia	= nr_seq_conta_mat_w;
		
		CALL pls_delete_pls_conta_pos_estab(	null, nr_seq_conta_mat_w,null,
						null);
		
		CALL pls_deletar_coparticipacao(nr_seq_conta_p,null,'S', 'N', null, null, nm_usuario_p,cd_estabelecimento_p);
		end;
	end loop;
	close C02;

	nr_seq_conta_w		:= nr_seq_conta_p;
	
	CALL pls_atualizar_conta_resumo(	nr_seq_conta_p,
					cd_estabelecimento_p,
					nm_usuario_p);
					
				
	CALL pls_cta_consistir_pck.gerar_resumo_conta(null, null, null, nr_seq_conta_w, nm_usuario_p, cd_estabelecimento_p);
	
	select	max(nr_seq_analise)
	into STRICT	nr_seq_analise_w
	from	pls_conta
	where	nr_sequencia = nr_seq_conta_p;
	
	select	max(ie_origem_conta)
	into STRICT	ie_origem_conta_w
	from	pls_conta
	where	nr_sequencia	= nr_seq_conta_p;
	
	if (coalesce(nr_seq_analise_w,0) > 0) and (ie_analise_cm_nova_w = 'N') then
		if (ie_origem_conta_w = 'A') then
			CALL pls_atual_w_resumo_conta_ptu(	nr_seq_conta_p,
							null,
							null,
							null,
							nr_seq_analise_w,
							nm_usuario_p);
		else
			CALL pls_atualiza_w_resumo_conta(	nr_seq_conta_p,
							null,
							null,
							null,
							nr_seq_analise_w,
							nm_usuario_p);
		end if;
	end if;
elsif (coalesce(nr_seq_conta_proc_p,0) > 0) then
	select	nr_seq_conta,
		vl_procedimento,
		vl_procedimento_imp
	into STRICT	nr_seq_conta_w,
		vl_procedimento_w,
		vl_procedimento_imp_w
	from	pls_conta_proc
	where	nr_sequencia	= nr_seq_conta_proc_p;

	select	max(ie_origem_conta)
	into STRICT	ie_origem_conta_w
	from	pls_conta
	where	nr_sequencia = nr_seq_conta_w;
	
	if (vl_procedimento_imp_w = 0 ) and (ie_vl_calculado_glosa_w = 'S') then
		vl_glosa_w := vl_procedimento_w;
	else
		vl_glosa_w := vl_procedimento_imp_w;
	end if;
	
	update	pls_conta_proc
	set	vl_liberado		= 0,
		qt_procedimento		= 0,
		vl_unitario		= 0,
		vl_prestador		= 0,
		vl_pag_medico_conta	= 0,
		ie_status		= 'L',
		ds_log			= 'pls_glosar_item_conta',
		ie_glosa		= 'S',
		vl_liberado_hi		= 0,
		vl_liberado_co          = 0,
		vl_liberado_material    = 0,
		vl_liberado_regra       = 0,
		vl_lib_original         = 0,
		vl_lib_taxa_co          = 0,
		vl_lib_taxa_material    = 0,
		vl_lib_taxa_servico     = 0
	where	nr_sequencia		= nr_seq_conta_proc_p;
	
	
	CALL pls_delete_pls_conta_pos_estab(	nr_seq_conta_proc_p, null,null,
					null);
	
	CALL pls_deletar_coparticipacao(nr_seq_conta_p,null,'S', 'N', null, null, nm_usuario_p,cd_estabelecimento_p);
		
	select	coalesce(ie_via_acesso_regra, 'N')
	into STRICT	ie_via_acesso_regra_w
	from	pls_parametros
	where	cd_estabelecimento	= cd_estabelecimento_p;
	
	open C03;
	loop
	fetch C03 into	
		nr_seq_conta_proc_w,
		ie_via_acesso_w,
		ie_via_acesso_imp_w,
		nr_seq_regra_via_acesso_w,
		ie_via_acesso_manual_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		ie_via_acesso_inf_w	:= 'S';
		
		if (coalesce(ie_origem_conta_w, 'D') = 'E') and (ie_via_acesso_regra_w = 'S') then
			if (coalesce(ie_via_acesso_w, 'X') = coalesce(ie_via_acesso_imp_w, 'X')) and (not ie_via_acesso_manual_w	= 'S')then
				ie_via_acesso_inf_w	:= 'N';
			end if;
		end if;
		
		if (ie_via_acesso_inf_w = 'N') or (coalesce(nr_seq_regra_via_acesso_w, 0) > 0)then
			update	pls_conta_proc
			set	ie_via_acesso		 = NULL,
				nr_seq_regra_via_acesso	 = NULL,
				tx_item			= 100,
				nr_seq_proc_ref		 = NULL
			where	nr_sequencia		= nr_seq_conta_proc_w;
		end if;
		end;
	end loop;
	close C03;

	
	/*Retirado pois estava gerando inconsistêcncia no valor total liberado da conta
	Alinhado com o analista Diogo*/
	/*pls_consiste_procedimento(	nr_seq_conta_w,
					'CC',
					nm_usuario_p,
					cd_estabelecimento_p);
					
	pls_atualizar_via_acesso_conta(	nr_seq_conta_w,
					nm_usuario_p);
					
	pls_recalcular_conta(	nr_seq_conta_w,
				nm_usuario_p,
				'G',
				'S');*/
	
	select	vl_procedimento,
		vl_procedimento_imp
	into STRICT	vl_procedimento_w,
		vl_procedimento_imp_w
	from	pls_conta_proc
	where	nr_sequencia	= nr_seq_conta_proc_p;
	
	if (vl_procedimento_imp_w = 0) and (ie_vl_calculado_glosa_w = 'S') then
		vl_glosa_w	:= vl_procedimento_w;
	else
		vl_glosa_w	:= vl_procedimento_imp_w;
	end if;
	
	update	pls_conta_proc
	set	vl_glosa	= vl_glosa_w
	where	nr_sequencia	= nr_seq_conta_proc_p;
	
	CALL pls_atualizar_conta_resumo(	nr_seq_conta_w,
					cd_estabelecimento_p,
					nm_usuario_p);
					
	CALL pls_cta_consistir_pck.gerar_resumo_conta(null, null, null, nr_seq_conta_w, nm_usuario_p, cd_estabelecimento_p);
	
elsif (coalesce(nr_seq_conta_mat_p, 0) > 0) then
	select	nr_seq_conta,
		vl_material_w
	into STRICT	nr_seq_conta_w,
		vl_material_w
	from	pls_conta_mat
	where	nr_sequencia	= nr_seq_conta_mat_p;

	/*Diego OS 303277 -	Alterada a linha decode(nvl(vl_material_imp,0),0,nvl(vl_material,0)),
			Quando existe o valor do importado importado e tenta-se glosar, o valor da glosa é jogado nulo pois não existia o senão do decode*/
	
	/* Felipe - 04/07/2011 - OS 327943 - O valor glosado, deve ser o total que será pago através do resumo */

	select	coalesce(sum(vl_liberado),vl_material_w)
	into STRICT	vl_liberado_w
	from	pls_conta_medica_resumo
	where	nr_seq_conta_mat	= nr_seq_conta_mat_p
	and	nr_seq_conta		= nr_seq_conta_w
	and	((ie_situacao != 'I') or (coalesce(ie_situacao::text, '') = ''));
	
	update	pls_conta_mat
	set	vl_liberado	= 0,
		qt_material	= 0,
		vl_unitario	= 0,
		vl_glosa	= CASE WHEN coalesce(vl_material_imp, 0)=0 THEN  vl_liberado_w  ELSE vl_material_imp END ,
		ie_status	= 'L',
		ie_glosa	= 'S',		
		vl_liberado_regra       = 0,
		vl_lib_original         = 0,
		vl_lib_taxa_material    = 0
	where	nr_sequencia	= nr_seq_conta_mat_p;

	CALL pls_atualizar_item_resumo(	nr_seq_conta_mat_p,
					'M',
					nm_usuario_p,
					'N');
	
	CALL pls_delete_pls_conta_pos_estab(	null, nr_seq_conta_mat_p,null,
					null);
					
	
	CALL pls_deletar_coparticipacao(nr_seq_conta_p,null,'S', 'N', null, null, nm_usuario_p,cd_estabelecimento_p);
end if;

select	count(1)
into STRICT	qt_glosa_proc_w
from	pls_conta_proc
where	nr_seq_conta	= nr_seq_conta_w
and	coalesce(ie_glosa,'N')	= 'N';

select	count(1)
into STRICT	qt_glosa_mat_w
from	pls_conta_mat
where	nr_seq_conta	= nr_seq_conta_w
and	coalesce(ie_glosa,'N')	= 'N';

if (coalesce(qt_glosa_proc_w,0) = 0) and (coalesce(qt_glosa_mat_w,0) = 0) then
	update	pls_conta
	set	ie_glosa	= 'S'
	where	nr_sequencia	= nr_seq_conta_w;
	if (coalesce(obter_valor_param_usuario(1322, 1, Obter_Perfil_Ativo, nm_usuario_p, 0), 'N')	= 'S') then
		CALL pls_gerar_documento_conta( nr_seq_conta_w||',', cd_estabelecimento_p, nm_usuario_p);
	end if;
end if;

CALL pls_atualizar_utilizacao_guia(nr_seq_conta_w, cd_estabelecimento_p, nm_usuario_p);

CALL pls_fechar_conta(nr_seq_conta_w,
		'N',
		'S',
		'S',
		cd_estabelecimento_p,
		nm_usuario_p,
		null,
		null);

select	nr_seq_protocolo
into STRICT	nr_seq_protocolo_w
from	pls_conta
where	nr_sequencia	= nr_seq_conta_w;

CALL pls_altera_status_protocolo(	nr_seq_protocolo_w,
				'L',
				'N',
				cd_estabelecimento_p,
				nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_glosar_item_conta ( nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

