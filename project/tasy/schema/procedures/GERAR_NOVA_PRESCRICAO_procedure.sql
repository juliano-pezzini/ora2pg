-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nova_prescricao ( nr_atendimento_p bigint, cd_setor_prescr_p bigint, dt_prescricao_p timestamp, ie_substitui_p text, nr_prescr_orig_p bigint, hr_prescricao_p text, ie_adep_p text, nm_usuario_p text, ie_prescr_emergencia_p text, cd_funcao_p bigint, nr_seq_transcricao_p bigint default null, nr_nova_prescr_p INOUT bigint DEFAULT NULL, ie_motivo_prescr_p bigint DEFAULT NULL, ie_estender_p text default null, cd_pessoa_fisica_p text DEFAULT NULL, cd_perfil_p bigint DEFAULT NULL, cd_estabelecimento_p bigint DEFAULT NULL, cd_medico_p text DEFAULT NULL, ie_hemodialise_p text default null, qt_dias_extensao_p bigint default null, nr_horas_validade_p bigint default null) AS $body$
DECLARE


cd_pf_usuario_w		varchar(10);
ie_usuario_medico_w	varchar(1);
ie_permite_prescricao_w varchar(1);
ie_tipo_evol_w		varchar(3);
cd_medico_atend_w	varchar(10);
nr_nova_prescr_w	bigint;
nr_horas_validade_w	bigint;
cd_estabelecimento_w	bigint;
cd_setor_w		bigint;
ie_regra_setor_w	varchar(10);
ie_calcula_validade_w	varchar(10);
ie_estender_w		varchar(10);
qt_peso_w		real;
qt_altura_cm_w		real;
nr_atendimento_w	bigint;
cd_pessoa_fisica_w	varchar(10);
dt_inicio_prescr_orig_w	timestamp;
dt_validade_prescr_orig_w timestamp;
dt_validade_prescr_nova_w timestamp;
nr_horas_validade_orig_w integer;
cd_medico_prescri_w	varchar(10);
dt_primeiro_horario_w	timestamp;
hr_horario_setor_w	varchar(10);
ie_extensao_regra_w	varchar(1)	:= 'N';
ie_origem_inf_w		varchar(1);
ie_prescritor_aux_w	varchar(1);
ie_prescr_pos_alta_w	varchar(1);
dt_alta_medico_w		timestamp;
ie_adep_w				varchar(1);
ie_parametro_adep_w		varchar(10);
qt_regra_w			bigint;
ie_setor_entrega_w	varchar(1);
cd_setor_entrega_w	integer;
nr_seq_transcricao_w	bigint;
ie_pac_usu_w		varchar(5);


BEGIN

ie_pac_usu_w := '';

if (cd_funcao_p = 924) then
	ie_pac_usu_w := obter_param_usuario(924, 42, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_pac_usu_w);
elsif (cd_funcao_p = 950) then
	ie_pac_usu_w := obter_param_usuario(950, 6, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_pac_usu_w);
end if;

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
	cd_pessoa_fisica_w	:= coalesce(obter_pessoa_atendimento(nr_atendimento_p,'C'),cd_pessoa_fisica_p);
else
	cd_pessoa_fisica_w	:= cd_pessoa_fisica_p;
end if;

if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and ((cd_setor_prescr_p IS NOT NULL AND cd_setor_prescr_p::text <> '') or ie_pac_usu_w = 'B') and (dt_prescricao_p IS NOT NULL AND dt_prescricao_p::text <> '') and (hr_prescricao_p IS NOT NULL AND hr_prescricao_p::text <> '') and (ie_adep_p IS NOT NULL AND ie_adep_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then

	/* obter inf usuario */

	select	cd_pessoa_fisica,
		substr(obter_se_medico(cd_pessoa_fisica,'M'),1,1), /*OS 138646*/
		ie_tipo_evolucao
	into STRICT	cd_pf_usuario_w,
		ie_usuario_medico_w,
		ie_tipo_evol_w
	from	usuario
	where	nm_usuario = nm_usuario_p;
	
	select 	CASE WHEN nr_seq_transcricao_p=0 THEN null  ELSE nr_seq_transcricao_p END
	into STRICT 	nr_seq_transcricao_w
	;

	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
	
		/* obter inf atend */

		select	max(cd_medico_resp),
				max(dt_alta_medico)
		into STRICT	cd_medico_atend_w,
				dt_alta_medico_w
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_p;
		
		ie_prescr_pos_alta_w := Obter_Param_Usuario(924, 174, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_prescr_pos_alta_w);
		
		if (ie_prescr_pos_alta_w	= 'N') and (dt_alta_medico_w IS NOT NULL AND dt_alta_medico_w::text <> '') then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(283054);
		end if;
		
		begin
		qt_altura_cm_w	:= obter_sinal_vital(nr_atendimento_P,obter_desc_expressao(283402));		
		exception
		when others then
		qt_altura_cm_w	:= null;
		end;

		begin
		qt_peso_w	:= obter_sinal_vital(nr_atendimento_P,obter_desc_expressao(295698));
		exception
		when others then
		qt_peso_w	:= null;
		end;		
	else
		select	max(nr_atendimento)
		into STRICT	nr_atendimento_w
		from	atendimento_paciente
		where	cd_pessoa_fisica = cd_pessoa_fisica_w
		and	coalesce(obter_setor_atendimento(nr_atendimento),0) > 0
		and     coalesce(dt_alta::text, '') = '';
	end if;	
	/* obter sequence */

	select	nextval('prescr_medica_seq')
	into STRICT	nr_nova_prescr_w
	;
	
	if (cd_funcao_p	= 950) then
		ie_calcula_validade_w	:= 'S';
	else
		ie_calcula_validade_w := Obter_Param_Usuario(924, 98, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_calcula_validade_w);	
	end if;
	ie_regra_setor_w := Obter_Param_Usuario(924, 42, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_regra_setor_w);
	ie_prescritor_aux_w := Obter_Param_Usuario(924, 580, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_prescritor_aux_w);
	
	cd_setor_w	:= cd_setor_prescr_p;
	if (ie_regra_setor_w = 'R') then
		cd_setor_w	:= Obter_setor_prescr_regra(cd_perfil_p);
	end if;	
	
	select  coalesce(max(ie_permite_prescricao),'S')
	into STRICT  ie_permite_prescricao_w
	from setor_atendimento 
	where cd_setor_atendimento = cd_setor_w;
	
	if (ie_permite_prescricao_w = 'N') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(270411);
	end if;
	
	ie_permite_prescricao_w := Obter_se_permite_prescr(cd_perfil_p, cd_setor_w, nr_atendimento_p);
	
	if (ie_permite_prescricao_w = 'N') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(270411);
	end if;
	
	if (ie_calcula_validade_w	= 'R') then
		ie_calcula_validade_w	:= obter_se_calcula_validade(cd_setor_w);
	end if;
	
	if (coalesce(ie_estender_p::text, '') = '') then
		ie_estender_w := Obter_Param_Usuario(924, 249, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_estender_w);
	else
		ie_estender_w := ie_estender_p;
	end if;	
	
	dt_primeiro_horario_w	:= to_date(substr(to_char(dt_prescricao_p,'dd/mm/yyyy'),1,10) || ' ' || hr_prescricao_p || ':00','dd/mm/yyyy hh24:mi:ss');
	
	if (ie_substitui_p = 'N') then
		nr_horas_validade_w	:= 24;
		if (ie_calcula_validade_w	<> 'N') and ((coalesce(nr_atendimento_p,nr_atendimento_w) IS NOT NULL AND (coalesce(nr_atendimento_p,nr_atendimento_w))::text <> '')) then
			select	coalesce(Obter_Horas_Validade_Prescr( to_date(substr(to_char(dt_prescricao_p,'dd/mm/yyyy'),1,10) || ' ' || hr_prescricao_p || ':00','dd/mm/yyyy hh24:mi:ss'),
										coalesce(nr_atendimento_p,nr_atendimento_w),
										ie_estender_w,
										'A',
										trunc(dt_prescricao_p,'mi'), null),24)
			into STRICT	nr_horas_validade_w
			;	

			ie_extensao_regra_w	:= Obter_se_questiona_extensao(cd_perfil_p,cd_setor_w,nr_atendimento_p);
			
			if (ie_estender_p		= 'SE') and (nr_horas_validade_w	< 24) and (ie_extensao_regra_w	= 'S') then
				nr_horas_validade_w := nr_horas_validade_w + 24;
			end if;
			
		end if;
	else
	
		select	max(dt_inicio_prescr),
			max(dt_validade_prescr),
			max(nr_horas_validade)
		into STRICT	dt_inicio_prescr_orig_w,
			dt_validade_prescr_orig_w,
			nr_horas_validade_orig_w
		from	prescr_medica
		where	nr_prescricao = nr_prescr_orig_p;
		
		if (dt_inicio_prescr_orig_w	> clock_timestamp()) then
			nr_horas_validade_w		:= nr_horas_validade_orig_w;
			dt_primeiro_horario_w		:= dt_inicio_prescr_orig_w;
			dt_validade_prescr_nova_w	:= dt_validade_prescr_orig_w;
		else
			dt_primeiro_horario_w	:= to_date(substr(to_char(dt_prescricao_p,'dd/mm/yyyy'),1,10) || ' ' || hr_prescricao_p || ':00','dd/mm/yyyy hh24:mi:ss');
			if (trunc(dt_prescricao_p,'mi')	> dt_primeiro_horario_w) then
				dt_primeiro_horario_w	:= dt_primeiro_horario_w + 1;
			end if;
			if (dt_validade_prescr_orig_w	> dt_primeiro_horario_w) then
				nr_horas_validade_w	:= trunc(obter_hora_entre_datas(dt_primeiro_horario_w,dt_validade_prescr_orig_w + 1/86400));
			else
				dt_validade_prescr_nova_w	:= plt_obter_final_extensao(trunc(dt_prescricao_p,'mi'),hr_prescricao_p,nr_prescr_orig_p,nr_atendimento_p,cd_estabelecimento_p,cd_perfil_p,nm_usuario_p,null);
				nr_horas_validade_w		:= trunc(obter_hora_entre_datas(dt_primeiro_horario_w,dt_validade_prescr_nova_w + 1/86400));
			end if;	

			select	max(to_char(hr_inicio_prescricao,'hh24:mi'))
			into STRICT	hr_horario_setor_w
			from	setor_atendimento
			where	cd_setor_atendimento = cd_setor_w;
			
			if (hr_horario_setor_w IS NOT NULL AND hr_horario_setor_w::text <> '') and (hr_horario_setor_w <> to_char((dt_primeiro_horario_w + nr_horas_validade_w/24),'hh24:mi')) then
				nr_horas_validade_w	:= nr_horas_validade_w + 1;
			end if;
			dt_primeiro_horario_w	:= to_date(substr(to_char(dt_prescricao_p,'dd/mm/yyyy'),1,10) || ' ' || hr_prescricao_p || ':00','dd/mm/yyyy hh24:mi:ss');
		end if;
		
		if (ie_estender_p		= 'SE') and (nr_horas_validade_w	< 24)  then
			
			ie_extensao_regra_w := 'S';
						
			Select 	count(nr_sequencia)
			into STRICT	qt_regra_w
			from	periodo_questiona_extensao LIMIT 1;
			
			if (qt_regra_w > 0) then
				ie_extensao_regra_w	:= Obter_se_questiona_extensao(cd_perfil_p,cd_setor_w,nr_atendimento_p);
			end if;
			
			if (ie_extensao_regra_w = 'S') then
				nr_horas_validade_w := nr_horas_validade_w + 24;	
			end if;			
		end if;
		
	end if;	
	
	if (cd_medico_p IS NOT NULL AND cd_medico_p::text <> '') then
	      cd_medico_prescri_w  :=  cd_medico_p;
	elsif (ie_usuario_medico_w = 'S') then
              cd_medico_prescri_w   := cd_pf_usuario_w;
	else
              cd_medico_prescri_w  :=  cd_medico_atend_w;
	end if;
	
	select	coalesce(max('1'),'3')
	into STRICT	ie_origem_inf_w
	from	Medico b,
		Usuario a
	where	a.nm_usuario		= nm_usuario_p
	and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	b.ie_situacao		= 'A';
	
	if (ie_prescritor_aux_w = 'S') and (cd_medico_prescri_w = Obter_Pf_Usuario(nm_usuario_p,'C')) then
		nr_nova_prescr_p := null;
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(268800);
	end if;
	
	ie_parametro_adep_w := Obter_Param_Usuario(924, 246, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_parametro_adep_w);
		
	if (ie_parametro_adep_w = 'DS') then
		select	coalesce(max(ie_adep),'N')
		into STRICT	ie_adep_w
		from	setor_atendimento
		where	cd_setor_atendimento = cd_setor_w;	
	elsif (ie_parametro_adep_w in ('NV','PNV')) then
		ie_adep_w := 'N';
	elsif (ie_parametro_adep_w in ('SV','PV')) then
		ie_adep_w := 'S';
	end if;

	ie_setor_entrega_w := Obter_Param_Usuario(924, 167, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_setor_entrega_w);
	if (ie_setor_entrega_w = 'S') then
		cd_setor_entrega_w := obter_setor_usuario(nm_usuario_p);
	elsif (ie_setor_entrega_w = 'P') and (cd_setor_w IS NOT NULL AND cd_setor_w::text <> '') then
		cd_setor_entrega_w := cd_setor_w;
	end if;

	/* gerar nova prescricao */

	insert into prescr_medica(
		nr_prescricao,
		cd_pessoa_fisica,
		nr_atendimento,
		cd_medico,
		dt_prescricao,
		dt_atualizacao,
		nm_usuario,
		nr_horas_validade,
		dt_primeiro_horario,
		cd_setor_atendimento,
		ie_recem_nato,
		ie_origem_inf,
		nm_usuario_original,
		ie_motivo_prescricao,
		cd_estabelecimento,
		cd_prescritor,
		ie_emergencia,
		ie_funcao_prescritor,
		ie_prescricao_alta,
		ie_prescr_emergencia,
		ie_adep,
		nr_seq_transcricao,
		qt_altura_cm,
		qt_peso,
		cd_funcao_origem,
		cd_perfil_ativo,
		ie_hemodialise,
		qt_dias_extensao,
		ie_prescritor_aux,
		cd_setor_entrega)
	values (nr_nova_prescr_w,
		cd_pessoa_fisica_w,
		nr_atendimento_p,
		cd_medico_prescri_w,
		trunc(dt_prescricao_p,'mi'),
		clock_timestamp(),
		nm_usuario_p,
		coalesce(nr_horas_validade_p,nr_horas_validade_w),
		dt_primeiro_horario_w,
		cd_setor_w,
		'N',
		ie_origem_inf_w,
		nm_usuario_p,
		ie_motivo_prescr_p, -- null,
		cd_estabelecimento_p,
		cd_pf_usuario_w,
		'N',
		ie_tipo_evol_w,
		'N',
		coalesce(ie_prescr_emergencia_p,'N'),
		ie_adep_w,
		nr_seq_transcricao_w,
		qt_altura_cm_w,	
		qt_peso_w,
		cd_funcao_p,
		cd_perfil_p,
		ie_hemodialise_p,
		coalesce(qt_dias_extensao_p,'0'),
		ie_prescritor_aux_w,
		cd_setor_entrega_w);
	
	if (trunc(dt_prescricao_p,'mi') > trunc(clock_timestamp(),'mi')) then
		update	prescr_medica
		set	dt_prescricao	= clock_timestamp()
		where	nr_prescricao	= nr_nova_prescr_w;
	end if;
	
end if;

/* retornar nova prescricao */

if (nr_nova_prescr_w > 0) then
	nr_nova_prescr_p := nr_nova_prescr_w;
else
	nr_nova_prescr_p := null;
end if;

commit;

CALL gerar_plt_controle(cd_pessoa_fisica_w,nr_atendimento_p,nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nova_prescricao ( nr_atendimento_p bigint, cd_setor_prescr_p bigint, dt_prescricao_p timestamp, ie_substitui_p text, nr_prescr_orig_p bigint, hr_prescricao_p text, ie_adep_p text, nm_usuario_p text, ie_prescr_emergencia_p text, cd_funcao_p bigint, nr_seq_transcricao_p bigint default null, nr_nova_prescr_p INOUT bigint DEFAULT NULL, ie_motivo_prescr_p bigint DEFAULT NULL, ie_estender_p text default null, cd_pessoa_fisica_p text DEFAULT NULL, cd_perfil_p bigint DEFAULT NULL, cd_estabelecimento_p bigint DEFAULT NULL, cd_medico_p text DEFAULT NULL, ie_hemodialise_p text default null, qt_dias_extensao_p bigint default null, nr_horas_validade_p bigint default null) FROM PUBLIC;

