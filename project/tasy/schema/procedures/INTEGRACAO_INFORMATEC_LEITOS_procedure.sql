-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE integracao_informatec_leitos (cd_estabelecimento_p bigint) AS $body$
DECLARE

 
arq_texto_w			utl_file.file_type;
arq_texto_ww			utl_file.file_type;
nm_local_grav_w			varchar(60) := '';		 --Caminho onde será salvo o arquivo  **** CAMINHO VÁLIDO, HABILITADO NO ORACLE ****						 
qt_tentativas_w			bigint := 0;
ie_aberto_w			varchar(1);	
ie_eof_w				varchar(1);	
ds_line_w				varchar(1000);
nr_pos_inicio_w			bigint;
nr_seq_interno_w			bigint;
ie_status_unidade_w		varchar(5);
ie_status_unidade_atual_w		varchar(3);
cd_unidade_basica_w		varchar(20);
cd_unidade_compl_w		varchar(20);	
cd_setor_atendimento_w		bigint;
nr_ramal_w			bigint;
nr_status_unidade_w		bigint;
nm_arquivo_w			varchar(255);
cd_cod_funcionario_w		varchar(10);
nm_usuario_ww			varchar(15);
nr_seq_gv_w			bigint;
cd_pessoa_fisica_w		varchar(10);


BEGIN 
 
select	Obter_Valor_Param_Usuario(3111, 74, 0, 'TASY', cd_estabelecimento_p) 
--select	'/tmp/' 
into STRICT	nm_local_grav_w
;
 
/* 
--teste 
nm_arquivo_w	:=	'TasyAlteraStatus.txt'; 
arq_texto_w := utl_file.fopen(nm_local_grav_w,nm_arquivo_w , 'A'); 
utl_file.put_line(arq_texto_w,'00123 #00005 11636    1520   ;28/09/2010 08:47:44 Caixa Postal=' || '01520' || 'Estado de Quarto=' || '00005' ||'Apartamento='||'1520'||'Camareira='||'11636'||''); 
utl_file.fclose(arq_texto_w); 
*/
 
 
ie_aberto_w := 'N';
 
while(ie_aberto_w = 'N') and (qt_tentativas_w < 500) loop 
	begin 
	qt_tentativas_w := qt_tentativas_w + 1;
	utl_file.fcopy(nm_local_grav_w, 'rstatus.txt', nm_local_grav_w, 'temprstatus.txt');	
	ie_aberto_w := 'S';
	exception 
	when others then	 
	ie_aberto_w := 'N';	
	end;
end loop;
 
 
if (qt_tentativas_w < 500) then		 
	arq_texto_w := utl_file.fopen(nm_local_grav_w, 'temprstatus.txt', 'R');	
	ie_eof_w := 'N';
	 
	while(ie_eof_w = 'N') loop 
		begin		 
		utl_file.get_line(arq_texto_w, ds_line_w );			
		 
		if (substr(ds_line_w, 1, 1) = '"') then 
			ds_line_w := substr(ds_line_w, 2, length(ds_line_w)-2);
		end if;
		 
		select	somente_numero(substr(ds_line_w,1, 5)) 
		into STRICT	nr_ramal_w 
		;
		 
				 
		select	trim(both substr(ds_line_w, position('#' in ds_line_w) + 1 , 5)) 
		into STRICT	nr_status_unidade_w 
		;		
		 
				 
		/*Verifica qual será o status para atualizar*/
 
		if (00001 = nr_status_unidade_w) then 
			ie_status_unidade_w := 'H';
		elsif (00002 = nr_status_unidade_w) then 
			ie_status_unidade_w := 'L';
		elsif (00003 = nr_status_unidade_w) then	 
			ie_status_unidade_w := 'E';
		elsif (00004 = nr_status_unidade_w) then		 
			ie_status_unidade_w := 'G';
		elsif (00005 = nr_status_unidade_w) then		 
			ie_status_unidade_w := 'C';
		elsif (00006 = nr_status_unidade_w) then			 
			ie_status_unidade_w := 'H';
		end if;	
		 
		select	trim(both substr(ds_line_w, 14 , 10)) 
		into STRICT	cd_cod_funcionario_w 
		;
		 
				 
		If (cd_cod_funcionario_w IS NOT NULL AND cd_cod_funcionario_w::text <> '') then 
			select	max(a.nm_usuario), 
				max(a.cd_pessoa_fisica) 
			into STRICT	nm_usuario_ww, 
				cd_pessoa_fisica_w 
			from	pessoa_fisica b, 
				usuario a 
			where	a.cd_pessoa_fisica = b.cd_pessoa_fisica 
			and	b.cd_funcionario = cd_cod_funcionario_w;			
			 
		end if;
			 
		if (coalesce(nm_usuario_ww::text, '') = '') then 
			nm_usuario_ww := 'TASY';
		end if;	
			 
		/* busca status anterior da unidade */
 
		select	max(a.ie_status_unidade),	 
			max(a.cd_unidade_basica), 
			max(a.cd_unidade_compl), 
			max(a.cd_setor_atendimento) 
		into STRICT	ie_status_unidade_atual_w, 
			cd_unidade_basica_w, 
			cd_unidade_compl_w, 
			cd_setor_atendimento_w 
		from	unidade_atendimento a, 
			setor_atendimento b 
		where	a.nr_ramal 	  	= nr_ramal_w 
		and	a.cd_setor_atendimento	= b.cd_setor_atendimento 
		and	b.cd_estabelecimento	= cd_estabelecimento_p;
					 
		/* Altera status da unidade */
	 
				 
				 
		/*Status "livre "ou "Aguardando Higienizacao" para Higienizacao*/
 
		if (ie_status_unidade_w  = 'H') and (ie_status_unidade_atual_w = 'L') or (ie_status_unidade_atual_w = 'G') then 
			 
			update	unidade_atendimento 
			set	dt_inicio_higienizacao 	= clock_timestamp(), 
				ie_status_unidade = ie_status_unidade_w, 
				nm_usuario	 = nm_usuario_ww, 
				dt_atualizacao 	 = clock_timestamp() 
			where	nr_ramal 	  = nr_ramal_w 
			and	cd_unidade_basica	=	cd_unidade_basica_w 
			and	cd_unidade_compl	=	cd_unidade_compl_w 
			and	cd_setor_atendimento	=	cd_setor_atendimento_w;
			 
			select 	max(b.nr_sequencia) 
			into STRICT	nr_seq_gv_w 
			from	unidade_atendimento a, 
				sl_unid_atend b 
			where	trunc(b.dt_prevista) = trunc(clock_timestamp()) 
			and 	a.cd_setor_atendimento = cd_setor_atendimento_w 
			and	a.cd_unidade_basica = cd_unidade_basica_w 
			and	a.cd_unidade_compl = cd_unidade_compl_w 
			and	b.nr_seq_unidade = a.nr_seq_interno 
			and	coalesce(b.dt_inicio::text, '') = '';
			 
			if (nr_seq_gv_w > 0) then 
				CALL gerar_dados_gestao_servico(nr_seq_gv_w, clock_timestamp(),clock_timestamp(),cd_pessoa_fisica_w,'I','',cd_pessoa_fisica_w,'');
			end if;
			 
		/*Status Higienização para Livre*/
	 
		elsif (ie_status_unidade_atual_w = 'H') and (ie_status_unidade_w = 'L') then 
 
			update	unidade_atendimento 
			set	nm_usuario_fim_higienizacao 	= nm_usuario_ww, 
				dt_higienizacao 		= clock_timestamp(), 
				ie_status_unidade = ie_status_unidade_w, 
				nm_usuario	 = nm_usuario_ww, 
				dt_atualizacao 	 = clock_timestamp() 
			where	nr_ramal 	  = nr_ramal_w 
			and	cd_unidade_basica	=	cd_unidade_basica_w 
			and	cd_unidade_compl	=	cd_unidade_compl_w 
			and	cd_setor_atendimento	=	cd_setor_atendimento_w;	
 
			select 	max(b.nr_sequencia) 
			into STRICT	nr_seq_gv_w 
			from	unidade_atendimento a, 
				sl_unid_atend b 
			where	trunc(b.dt_prevista) = trunc(clock_timestamp()) 
			and 	a.cd_setor_atendimento = cd_setor_atendimento_w 
			and	a.cd_unidade_basica = cd_unidade_basica_w 
			and	a.cd_unidade_compl = cd_unidade_compl_w 
			and	b.nr_seq_unidade = a.nr_seq_interno 
			and	(b.dt_inicio IS NOT NULL AND b.dt_inicio::text <> '') 
			and 	coalesce(b.dt_fim::text, '') = '';
			 
			if (nr_seq_gv_w > 0) then 
				CALL gerar_dados_gestao_servico(nr_seq_gv_w, clock_timestamp(),clock_timestamp(),cd_pessoa_fisica_w,'F','',cd_pessoa_fisica_w,'');
			end if;
 
		/*Status "Livre" ou "Em processo de alta" ou "Chamado para manutenção"  para  "Manutenção"*/
 
		elsif 	((ie_status_unidade_atual_w = 'L') or (ie_status_unidade_atual_w = 'A') or (ie_status_unidade_atual_w = 'C')) and (ie_status_unidade_w = 'E') then 
 
			CALL atualizar_leito_manutencao(nm_usuario_ww,cd_unidade_basica_w,cd_unidade_compl_w,cd_setor_atendimento_w,'M');
		 
		/*Status "Livre" ou "Em processo de alta" ou "Em Higienização" para  "Chamado para manutenção"*/
			 
		elsif 	((ie_status_unidade_atual_w = 'L') or (ie_status_unidade_atual_w = 'A') or (ie_status_unidade_atual_w = 'H')) and (ie_status_unidade_w = 'C') then 
	 
			CALL atualizar_leito_chamado_manut(nm_usuario_ww,cd_unidade_basica_w,cd_unidade_compl_w,cd_setor_atendimento_w,'C');
		 
		/*Status "Manutenção" para "Aguardando Higienização"*/
 
		elsif (ie_status_unidade_atual_w = 'E') and (ie_status_unidade_w = 'G') then 
			 
			CALL atualizar_leito_manutencao(nm_usuario_ww,cd_unidade_basica_w,cd_unidade_compl_w,cd_setor_atendimento_w,'G');
			 
		end if;			
	 
				 
		exception 
		when no_data_found then 
			ie_eof_w := 'S';
		end;
	end loop;  	
	utl_file.fclose(arq_texto_w);	
	utl_file.fremove(nm_local_grav_w,'temprstatus.txt');	
	end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE integracao_informatec_leitos (cd_estabelecimento_p bigint) FROM PUBLIC;

