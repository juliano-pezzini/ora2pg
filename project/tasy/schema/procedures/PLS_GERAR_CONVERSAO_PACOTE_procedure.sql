-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_conversao_pacote ( nr_seq_guia_req_p bigint, nr_seq_item_p bigint, ie_tipo_item_p text, ie_origem_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

				
/* ie_tipo_item_p
	P - Procedimento
	M - Material
*/


/* ie_origem_p
	A - Autorização
	C - Contas médicas
	R - Requisição
	E - Execução
	W - Portal Wheb (Autorização)
*/
			
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_grupo_proc_w			bigint;
cd_especialidade_w		bigint;
cd_area_procedimento_w		bigint;
nr_seq_regra_w			bigint;
nr_seq_regra_ww			bigint;
nr_seq_prestador_w		bigint;
nr_seq_conversao_w		bigint;
nr_seq_pacote_w			bigint;
cd_proc_pacote_w		bigint;
ie_origem_pacote_w		bigint;
nr_seq_guia_w			bigint;
qt_registro_w			bigint	:= 0;
ie_tipo_guia_w			varchar(2);
nr_seq_tipo_acomod_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_requisicao_w		bigint;
ie_excluir_item_w		varchar(10);
nr_seq_grupo_proc_w		bigint;
ie_grupo_pacote_w		varchar(10)	:= 'S';
nr_seq_req_proc_w		bigint;
nr_seq_preco_pacote_w		bigint;
nr_seq_guia_proc_w		bigint;
ie_restringe_estab_w		varchar(2);
ie_regra_preco_w		varchar(1)	:= 'N';
nr_seq_segurado_w		bigint;
dt_preco_w			timestamp;
nr_seq_plano_w			bigint;
nr_seq_intercambio_w		bigint;
nr_seq_tipo_acomodacao_w	bigint;
vl_pacote_w			double precision;
vl_medico_w			double precision;
vl_anestesista_w		double precision;
vl_auxiliares_w			double precision;
vl_custo_operacional_w		double precision;
vl_materiais_w			double precision;
ie_internado_w			varchar(2)	:= null;
ie_origem_conta_w		varchar(2)	:= null;
nr_seq_regra_pacote_w		bigint;
ie_gerar_convercao_pacote_w	varchar(1)	:= 'S';
nr_contrato_w			bigint;
nr_seq_congenere_w		bigint;
sg_estado_int_w			pessoa_juridica.sg_estado%type;
sg_estado_w			pessoa_juridica.sg_estado%type;
ie_tipo_intercambio_w		varchar(3);
nr_seq_classificacao_prest_w	bigint;
cd_proc_pacote_ret_w		bigint;
ie_origem_pacote_ret_w		bigint;

qt_solicitada_w			pls_requisicao_proc.qt_solicitado%type;
qt_solicitada_ww		pls_requisicao_proc.qt_solicitado%type;
qt_autorizada_w			double precision;
ie_regra_quantidade_w		varchar(1);
qt_reg_w			bigint;
ie_regra_quantidade_ww		varchar(1);
ie_regra_preco_pct_w		varchar(1);
ie_regra_consiste_pacote_w	varchar(1);
ie_tipo_processo_w		varchar(1);
ie_gerou_excecao_w		varchar(1);
nr_seq_categoria_w		pls_categoria.nr_sequencia%type;
nr_seq_classificacao_w		pls_prestador.nr_seq_classificacao%type;
ie_preco_w			pls_plano.ie_preco%type;
ie_tipo_segurado_w		pls_segurado.ie_tipo_segurado%type;
ie_tipo_repasse_w		varchar(255);
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
nr_seq_grupo_operadora_w	pls_regra_conversao_pacote.nr_seq_grupo_operadora%type;
nr_seq_grupo_contrato_w		pls_regra_conversao_pacote.nr_seq_grupo_contrato%type;
nr_seq_grupo_produto_w		pls_regra_conversao_pacote.nr_seq_grupo_produto%type;
ie_grupo_operadora_w    	varchar(1);
ie_grupo_produto_w		varchar(2);
ie_tipo_acomodacao_w		pls_tipo_acomodacao.ie_tipo_acomodacao%type;
ie_grupo_contrato_w		varchar(1);

nr_seq_conta_proc_nv_w		pls_conta_proc.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		coalesce(a.ie_excluir_item,'N'),
		a.nr_seq_grupo_proc,
		a.ie_regra_quantidade,
		a.nr_seq_grupo_operadora,
		a.nr_seq_grupo_contrato,
		a.nr_seq_grupo_produto
	from	pls_regra_conversao_pacote a
	where	((ie_restringe_estab_w	= 'N') or (ie_restringe_estab_w	= 'S' AND a.cd_estabelecimento = cd_estabelecimento_p))
	and	a.ie_situacao		= 'A'
	and	coalesce(a.nr_seq_prestador,		coalesce(nr_seq_prestador_w,0)) 	= coalesce(nr_seq_prestador_w,0)
	and	coalesce(a.cd_procedimento, 		coalesce(cd_procedimento_w,0))	= coalesce(cd_procedimento_w,0)
	and	coalesce(a.ie_origem_proced, 	coalesce(ie_origem_proced_w,0))	= coalesce(ie_origem_proced_w,0)
	and	coalesce(a.cd_grupo_proc, 		coalesce(cd_grupo_proc_w,0))		= coalesce(cd_grupo_proc_w,0)
	and	coalesce(a.cd_especialidade, 	coalesce(cd_especialidade_w,0))	= coalesce(cd_especialidade_w,0)
	and	coalesce(a.cd_area_procedimento,	coalesce(cd_area_procedimento_w,0))	= coalesce(cd_area_procedimento_w,0)
	and	coalesce(a.ie_tipo_guia, 		coalesce(ie_tipo_guia_w,0))		= coalesce(ie_tipo_guia_w,0)
	and	coalesce(a.nr_seq_tipo_acomodacao, 	coalesce(nr_seq_tipo_acomod_w,0))	= coalesce(nr_seq_tipo_acomod_w,0)
	and	((ie_origem_p 	= 'A' AND a.ie_autorizacao 		= 'S') or
	 	(ie_origem_p 	= 'C' AND a.ie_conta_medica 		= 'S') or
		(ie_origem_p 	= 'E' AND a.ie_exec_requisicao 	= 'S') or
		(ie_origem_p 	= 'R' AND a.ie_requisicao 		= 'S') or
		(ie_origem_p 	= 'W' AND a.ie_autorizacao_web 	= 'S'))
	and	(coalesce(nr_seq_grupo_prestador::text, '') = '' or exists (	SELECT	1
								from	pls_preco_prestador x
								where	x.nr_seq_grupo = a.nr_seq_grupo_prestador
								and	((coalesce(x.nr_seq_prestador::text, '') = '') or (x.nr_seq_prestador = nr_seq_prestador_w))
								and	((coalesce(x.nr_seq_classificacao::text, '') = '') or (x.nr_seq_classificacao = nr_seq_classificacao_w))))
	and	(((coalesce(ie_tipo_repasse_w::text, '') = '') and (coalesce(a.ie_preco, coalesce(ie_preco_w,0)) = coalesce(ie_preco_w,0))) or
		(((ie_tipo_repasse_w = 'C') and (a.ie_preco in ('2','3'))) or
		(ie_tipo_repasse_w = 'P' AND a.ie_preco = '1') or (ie_tipo_repasse_w IS NOT NULL AND ie_tipo_repasse_w::text <> '') and (coalesce(ie_preco_w::text, '') = '')))
	and	coalesce(a.nr_seq_congenere,		coalesce(nr_seq_congenere_w,0))	= coalesce(nr_seq_congenere_w,0)
	and	coalesce(a.nr_seq_categoria, 	coalesce(nr_seq_categoria_w,0))	= coalesce(nr_seq_categoria_w,0)
	and	coalesce(a.ie_tipo_segurado, 	coalesce(ie_tipo_segurado_w,'X'))	= coalesce(ie_tipo_segurado_w,'X')
	and	coalesce(a.nr_seq_contrato, 		coalesce(nr_seq_contrato_w,0))	= coalesce(nr_seq_contrato_w,0)
	and	coalesce(a.nr_seq_plano, 		coalesce(nr_seq_plano_w,0))		= coalesce(nr_seq_plano_w,0)
	and	((coalesce(a.ie_acomodacao,'N') = 'N') or (a.ie_acomodacao = coalesce(ie_tipo_acomodacao_w,'N')))
	and	((coalesce(a.ie_tipo_intercambio,'T') = 'T') or (a.ie_tipo_intercambio = coalesce(ie_tipo_intercambio_w,'T')))
	and	coalesce(a.ie_internado,'N') = coalesce(ie_internado_w,'N')
	and	exists	(select	1
			from	pls_conversao_pacote b
			where	b.nr_seq_regra	= a.nr_sequencia
			and	b.ie_situacao	= 'A'
			and	(((coalesce(b.dt_inicio_vigencia::text, '') = '') or (b.dt_inicio_vigencia < dt_preco_w))
			and	((coalesce(b.dt_fim_vigencia::text, '') = '') or (b.dt_fim_vigencia > dt_preco_w))))
	order by coalesce(a.nr_seq_grupo_proc,0),
		coalesce(a.cd_area_procedimento,0),
		coalesce(a.cd_especialidade,0),
		coalesce(a.cd_grupo_proc,0),
		coalesce(a.cd_procedimento,0),
		coalesce(a.nr_seq_prestador,0),
		coalesce(a.nr_seq_grupo_prestador,0);
		
C02 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_pacote
	from	pls_conversao_pacote
	where	nr_seq_regra	= nr_seq_regra_w
	and	ie_situacao	= 'A'
	and	(((coalesce(dt_inicio_vigencia::text, '') = '') or (dt_inicio_vigencia < dt_preco_w))
	and	((coalesce(dt_fim_vigencia::text, '') = '') or (dt_fim_vigencia > dt_preco_w)));


BEGIN

if (ie_origem_p	in ('A','W')) then
	if (ie_tipo_item_p	= 'P') then
		begin
			select	a.cd_procedimento,
				a.ie_origem_proced,
				a.nr_seq_guia,
				a.qt_solicitada,
				b.nr_seq_prestador,
				b.ie_tipo_guia,
				b.nr_seq_tipo_acomodacao,
				b.nr_seq_segurado,
				coalesce(b.dt_solicitacao,clock_timestamp()),
				b.ie_tipo_processo,
				b.ie_tipo_intercambio
			into STRICT	cd_procedimento_w,
				ie_origem_proced_w,
				nr_seq_guia_w,
				qt_solicitada_w,
				nr_seq_prestador_w,
				ie_tipo_guia_w,
				nr_seq_tipo_acomod_w,
				nr_seq_segurado_w,
				dt_preco_w,
				ie_tipo_processo_w,
				ie_tipo_intercambio_w
			from	pls_guia_plano		b,
				pls_guia_plano_proc	a
			where	a.nr_seq_guia	= b.nr_sequencia
			and	a.nr_sequencia	= nr_seq_item_p;
		exception
		when others then
			cd_procedimento_w	:= null;
			ie_origem_proced_w	:= null;
			nr_seq_guia_w		:= null;
			qt_solicitada_w		:= null;
			nr_seq_prestador_w	:= null;
			ie_tipo_guia_w		:= null;
			nr_seq_tipo_acomod_w	:= null;
			nr_seq_segurado_w	:= null;
			dt_preco_w		:= null;
			ie_tipo_processo_w	:= null;
			ie_tipo_intercambio_w	:= null;
		end;
	end if;
elsif (ie_origem_p	= 'C') then
	if (ie_tipo_item_p	= 'P') then
		select	a.cd_procedimento,
			a.ie_origem_proced,
			a.nr_seq_conta,
			b.nr_seq_prestador_exec,
			b.ie_tipo_guia,
			b.nr_seq_tipo_acomodacao,
			b.nr_seq_segurado,
			coalesce(b.dt_atendimento_referencia, coalesce(b.dt_autorizacao, coalesce(b.dt_entrada, clock_timestamp()))),
			substr(pls_obter_se_internado(b.nr_sequencia,'X'),1,1),
			ie_origem_conta
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_conta_w,
			nr_seq_prestador_w,
			ie_tipo_guia_w,
			nr_seq_tipo_acomod_w,
			nr_seq_segurado_w,
			dt_preco_w,
			ie_internado_w,
			ie_origem_conta_w
		from	pls_conta	b,
			pls_conta_proc	a
		where	a.nr_seq_conta	= b.nr_sequencia
		and	a.nr_sequencia	= nr_seq_item_p;
	end if;
elsif (ie_origem_p	= 'R') then
	if (ie_tipo_item_p	= 'P') then
		begin
			select	a.cd_procedimento,
				a.ie_origem_proced,
				a.qt_solicitado,
				a.nr_seq_requisicao,
				coalesce(b.nr_seq_prestador_exec, b.nr_seq_prestador),
				b.ie_tipo_guia,
				b.nr_seq_tipo_acomodacao,
				b.nr_seq_segurado,
				coalesce(b.dt_requisicao, clock_timestamp()),
				b.nr_seq_plano,
				b.ie_tipo_processo,
				b.ie_tipo_intercambio
			into STRICT	cd_procedimento_w,
				ie_origem_proced_w,
				qt_solicitada_w,
				nr_seq_requisicao_w,
				nr_seq_prestador_w,
				ie_tipo_guia_w,
				nr_seq_tipo_acomod_w,
				nr_seq_segurado_w,
				dt_preco_w,
				nr_seq_plano_w,
				ie_tipo_processo_w,
				ie_tipo_intercambio_w
			from	pls_requisicao b,
				pls_requisicao_proc a
			where	a.nr_seq_requisicao	= b.nr_sequencia
			and	a.nr_sequencia		= nr_seq_item_p;
		exception
		when others then
			cd_procedimento_w	:= null;
			ie_origem_proced_w	:= null;
			qt_solicitada_w		:= null;
			nr_seq_requisicao_w	:= null;
			nr_seq_prestador_w	:= null;
			ie_tipo_guia_w		:= null;
			nr_seq_tipo_acomod_w	:= null;
			nr_seq_segurado_w	:= null;
			dt_preco_w		:= null;
			nr_seq_plano_w		:= null;
			ie_tipo_intercambio_w	:= null;
			
			if (coalesce(nr_seq_tipo_acomod_w::text, '') = '') then
				nr_seq_tipo_acomod_w := pls_obter_dados_produto(nr_seq_plano_w,'AP');
			end if;
		end;
	end if;
end if;

select	max(nr_seq_categoria)
into STRICT	nr_seq_categoria_w
from	pls_regra_categoria
where	nr_seq_tipo_acomodacao = nr_seq_tipo_acomod_w;

select	max(nr_seq_classificacao)
into STRICT	nr_seq_classificacao_w
from	pls_prestador
where	nr_sequencia = nr_seq_prestador_w;

select	max(a.nr_contrato),
	max(b.ie_tipo_segurado),
	max(b.nr_seq_congenere),
	max(b.nr_seq_intercambio),
	max(b.nr_seq_tipo_acomodacao)
into STRICT	nr_seq_contrato_w,
	ie_tipo_segurado_w,
	nr_seq_congenere_w,
	nr_seq_intercambio_w,
	nr_seq_tipo_acomodacao_w
from	pls_contrato	a,
	pls_segurado	b
where	a.nr_sequencia	= b.nr_seq_contrato
and	b.nr_sequencia	= nr_seq_segurado_w;

if (nr_seq_tipo_acomodacao_w IS NOT NULL AND nr_seq_tipo_acomodacao_w::text <> '') then
	select 	max(ie_tipo_acomodacao)
	into STRICT	ie_tipo_acomodacao_w
	from	pls_tipo_acomodacao
	where	nr_sequencia = nr_seq_tipo_acomodacao_w;
end if;

if (ie_tipo_segurado_w in ('I','C','T','H')) then /* Se responsabilidade assumida, verifica a formação de preço do beneficiário */
	select	max(ie_tipo_repasse)
	into STRICT	ie_tipo_repasse_w
	from	pls_segurado
	where	nr_sequencia = nr_seq_segurado_w;
else
	select	max(ie_preco)
	into STRICT	ie_preco_w
	from	pls_plano
	where	nr_sequencia = nr_seq_plano_w;
end if;

SELECT * FROM pls_obter_estrut_proc(cd_procedimento_w, ie_origem_proced_w, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w;

ie_restringe_estab_w	:= pls_obter_se_controle_estab('GP');

open C01;
loop
fetch C01 into	
	nr_seq_regra_ww,
	ie_excluir_item_w,
	nr_seq_grupo_proc_w,
	ie_regra_quantidade_ww,
	nr_seq_grupo_operadora_w,
	nr_seq_grupo_contrato_w,
	nr_seq_grupo_produto_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	ie_grupo_pacote_w := 'S';
	if (nr_seq_grupo_proc_w IS NOT NULL AND nr_seq_grupo_proc_w::text <> '') then
		ie_grupo_pacote_w := pls_tratar_grupo_pacote(nr_seq_grupo_proc_w, nr_seq_conta_w, nr_seq_guia_w, nr_seq_requisicao_w, cd_procedimento_w, ie_origem_proced_w, ie_grupo_pacote_w);
	end if;
	
	if (ie_grupo_pacote_w = 'S') then
		nr_seq_regra_w := nr_seq_regra_ww;
		ie_regra_quantidade_w := ie_regra_quantidade_ww;
	end if;
	
	ie_grupo_operadora_w := 'S';
	if (nr_seq_grupo_operadora_w IS NOT NULL AND nr_seq_grupo_operadora_w::text <> '') then
		ie_grupo_operadora_w := pls_se_grupo_preco_operadora(nr_seq_grupo_operadora_w, nr_seq_congenere_w);
	end if;
	
	ie_grupo_contrato_w := 'S';
	if (nr_seq_grupo_contrato_w IS NOT NULL AND nr_seq_grupo_contrato_w::text <> '') then
		if	((nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') or (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '')) then
			ie_grupo_contrato_w := pls_se_grupo_preco_contrato(nr_seq_grupo_contrato_w, nr_seq_contrato_w, nr_seq_intercambio_w);
		end if;
	end if;
	
	ie_grupo_produto_w := 'S';
	if (nr_seq_grupo_produto_w IS NOT NULL AND nr_seq_grupo_produto_w::text <> '') then
		ie_grupo_produto_w := pls_se_grupo_preco_produto(nr_seq_grupo_produto_w, nr_seq_plano_w);
	end if;
	
	ie_gerou_excecao_w := pls_verifica_se_excesao_pacote(nr_seq_regra_ww, nr_seq_segurado_w, cd_estabelecimento_p, ie_tipo_processo_w, nr_seq_prestador_w);
	
	if (ie_grupo_operadora_w = 'N') or (ie_grupo_contrato_w = 'N') or (ie_grupo_produto_w = 'N') or (ie_gerou_excecao_w = 'S') then
		nr_seq_regra_w := 0;
	end if;
	
	end;
end loop;
close C01;

if (coalesce(nr_seq_regra_w,0) > 0) then
	if (ie_regra_quantidade_w = 'M') then
		qt_solicitada_ww := qt_solicitada_w;
	elsif (ie_regra_quantidade_w = 'R') then
		select	count(1)
		into STRICT	qt_reg_w
		from	pls_regra_qtde_pacote
		where	nr_seq_regra_conv_pacote = nr_seq_regra_w
		and	ie_situacao = 'A';
		
		if (qt_reg_w > 0) then
			select	max(qt_lancamento)
			into STRICT	qt_solicitada_ww
			from	pls_regra_qtde_pacote
			where	nr_seq_regra_conv_pacote = nr_seq_regra_w
			and	ie_situacao = 'A'
			and	qt_inicial <= qt_solicitada_w
			and	qt_final >= qt_solicitada_w;
		end if;	
	end if;
	
	if (coalesce(qt_solicitada_ww,0) = 0) then
		qt_solicitada_ww := 1;
	end if;
	
	open C02;
	loop
	fetch C02 into
		nr_seq_conversao_w,
		nr_seq_pacote_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		select	cd_procedimento,
			ie_origem_proced
		into STRICT	cd_proc_pacote_w,
			ie_origem_pacote_w
		from	pls_pacote
		where	nr_sequencia	= nr_seq_pacote_w;
		
		ie_regra_preco_w := coalesce(obter_valor_param_usuario(1321, 3, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p), 'N');
		
		if (ie_regra_preco_w = 'S') or (ie_regra_preco_pct_w = 'S') then
			begin
				select	max(nr_seq_classificacao)
				into STRICT	nr_seq_classificacao_prest_w
				from	pls_prestador
				where	nr_sequencia = nr_seq_prestador_w;
				
				begin
				select	a.nr_seq_plano
				into STRICT	nr_seq_plano_w
				from	pls_segurado			a
				where	a.nr_sequencia = nr_seq_segurado_w;
				exception
				when others then
					nr_seq_plano_w := null;
				end;
				
				if (ie_origem_p	in ('A','W')) then
					if (ie_tipo_item_p	= 'P') then
						select	max(b.nr_seq_plano)
						into STRICT	nr_seq_plano_w
						from	pls_guia_plano		b,
							pls_guia_plano_proc	a
						where	a.nr_seq_guia	= b.nr_sequencia
						and	a.nr_sequencia	= nr_seq_item_p;					
					end if;
				elsif (ie_origem_p	= 'R') then
					if (ie_tipo_item_p	= 'P') then
						select	max(b.nr_seq_plano)
						into STRICT	nr_seq_plano_w
						from	pls_requisicao b,
							pls_requisicao_proc a
						where	a.nr_seq_requisicao	= b.nr_sequencia
						and	a.nr_sequencia		= nr_seq_item_p;
					end if;
				end if;
				
				select	coalesce(a.nr_contrato,0),
					b.nr_seq_congenere
				into STRICT	nr_contrato_w,
					nr_seq_congenere_w
				from	pls_contrato	a,
					pls_segurado	b
				where	a.nr_sequencia	= b.nr_seq_contrato
				and	b.nr_sequencia	= nr_seq_segurado_w;
			exception
			when others then
				nr_contrato_w	:= 0;
			end;
			
			select	max(nr_seq_intercambio)
			into STRICT	nr_seq_intercambio_w
			from	pls_segurado
			where	nr_sequencia	= nr_seq_segurado_w;
			
			-- Obter a UF da operadora - Tasy
			begin
				select	sg_estado
				into STRICT	sg_estado_w
				from	pessoa_juridica
				where	cd_cgc	= (	SELECT	cd_cgc_outorgante
							from	pls_outorgante
							where	cd_estabelecimento	= cd_estabelecimento_p);
			exception
			when others then
				sg_estado_w	:= 'X';
			end;
			
			select	coalesce(max(a.sg_estado),'X')
			into STRICT	sg_estado_int_w
			from	pessoa_juridica	a,
				pls_congenere	b
			where	a.cd_cgc	= b.cd_cgc
			and	b.nr_sequencia	= nr_seq_congenere_w;
			
			if (sg_estado_w <> 'X') and (sg_estado_int_w <> 'X') then
				if (sg_estado_w	= sg_estado_int_w) then
					ie_tipo_intercambio_w	:= 'E';
				else	
					ie_tipo_intercambio_w	:= 'N';
				end if;
			else
				ie_tipo_intercambio_w	:= 'A';
			end if;
			
			SELECT * FROM pls_define_preco_pacote(cd_estabelecimento_p, nr_seq_prestador_w, nr_seq_tipo_acomod_w, dt_preco_w, cd_proc_pacote_w, ie_origem_pacote_w, ie_internado_w, nr_seq_plano_w, nr_contrato_w, nr_seq_congenere_w, nm_usuario_p, ie_origem_conta_w, ie_tipo_intercambio_w, nr_seq_pacote_w, nr_seq_regra_pacote_w, cd_proc_pacote_ret_w, ie_origem_pacote_ret_w, vl_pacote_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, vl_materiais_w, nr_seq_intercambio_w, nr_seq_classificacao_prest_w, nr_seq_item_p, nr_seq_segurado_w, null, 'N', null, 1) INTO STRICT nr_seq_pacote_w, nr_seq_regra_pacote_w, cd_proc_pacote_ret_w, ie_origem_pacote_ret_w, vl_pacote_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, vl_materiais_w;
			
			if (coalesce(nr_seq_regra_pacote_w,0) > 0) then
				ie_gerar_convercao_pacote_w 	:= 'S';
			else
				ie_gerar_convercao_pacote_w 	:= 'N';
			end if;
			
		end if;
		
		if (coalesce(ie_gerar_convercao_pacote_w,'S') = 'S') then
			if (ie_origem_p	in ('A','W')) then
				select	count(1)
				into STRICT	qt_registro_w
				from	pls_guia_plano_proc
				where	nr_seq_guia		= nr_seq_guia_w
				and	cd_procedimento		= cd_proc_pacote_w
				and	ie_origem_proced	= ie_origem_pacote_w;
				
				select	max(ie_consiste_pacote)
				into STRICT	ie_regra_consiste_pacote_w
				from	pls_param_autorizacao;
				
				if (qt_registro_w	= 0) then
					select	nextval('pls_guia_plano_proc_seq')
					into STRICT	nr_seq_guia_proc_w
					;
					
					if (coalesce(ie_regra_consiste_pacote_w,'N') 	= 'N') then
						insert into pls_guia_plano_proc(nr_sequencia, dt_atualizacao, nm_usuario,
							dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_guia,
							cd_procedimento, ie_origem_proced, qt_solicitada,
							ie_status, nr_seq_proc_princ, nr_seq_pacote,
							nr_seq_conversao_pacote, qt_autorizada)
						values (	nr_seq_guia_proc_w, clock_timestamp(), nm_usuario_p,
							clock_timestamp(), nm_usuario_p, nr_seq_guia_w,
							cd_proc_pacote_w, ie_origem_pacote_w, qt_solicitada_ww,
							'S', nr_seq_item_p, nr_seq_pacote_w,
							nr_seq_conversao_w, qt_solicitada_ww);
					else
						insert into pls_guia_plano_proc(nr_sequencia, dt_atualizacao, nm_usuario,
							dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_guia,
							cd_procedimento, ie_origem_proced, qt_solicitada,
							ie_status, nr_seq_proc_princ, nr_seq_pacote,
							nr_seq_conversao_pacote, qt_autorizada)
						values (	nr_seq_guia_proc_w, clock_timestamp(), nm_usuario_p,
							clock_timestamp(), nm_usuario_p, nr_seq_guia_w,
							cd_proc_pacote_w, ie_origem_pacote_w, qt_solicitada_ww,
							'U', nr_seq_item_p, nr_seq_pacote_w,
							nr_seq_conversao_w, 0);
					end if;
					
					CALL pls_atualiza_valor_pacote(nr_seq_guia_proc_w,'G',nm_usuario_p, 'S', 'N');
					
					begin
					select	coalesce(nr_seq_preco_pacote,0)
					into STRICT	nr_seq_preco_pacote_w
					from	pls_guia_plano_proc
					where	nr_sequencia	= nr_seq_guia_proc_w;
					exception
					when others then
						nr_seq_preco_pacote_w	:= 0;
					end;
					
					if (nr_seq_preco_pacote_w	<> 0) then
						CALL pls_abrir_proc_pacote(
								nr_seq_preco_pacote_w, null, nr_seq_guia_w, null, 'A',
								nr_seq_prestador_w, ie_tipo_guia_w, dt_preco_w, nm_usuario_p);
					end if;
					
					if (ie_tipo_processo_w = 'I') then
						CALL pls_gerar_de_para_aut_intercam(	nr_seq_guia_proc_w, '', cd_estabelecimento_p,
										nm_usuario_p);
					end if;
				end if;
			elsif (ie_origem_p	= 'C') then
				select	count(1)
				into STRICT	qt_registro_w
				from	pls_conta_proc
				where	nr_seq_conta		= nr_seq_conta_w
				and	cd_procedimento		= cd_proc_pacote_w
				and	ie_origem_proced	= ie_origem_pacote_w;
				
				if (qt_registro_w	= 0) then
					insert into pls_conta_proc(nr_sequencia, dt_atualizacao, nm_usuario,
						dt_atualizacao_nrec, nm_usuario_nrec, dt_procedimento,
						cd_procedimento, ie_origem_proced, qt_procedimento_imp,
						qt_procedimento, nr_seq_conta, tx_item,
						ie_status, nr_seq_proc_princ, nr_seq_conversao_pacote,
						ie_situacao)
					values (	nextval('pls_conta_proc_seq'), clock_timestamp(), nm_usuario_p,
						clock_timestamp(), nm_usuario_p, clock_timestamp(),
						cd_proc_pacote_w, ie_origem_pacote_w, 1,
						1, nr_seq_conta_w, 100,
						'U', nr_seq_item_p, nr_seq_conversao_w,
						'D') returning nr_sequencia into nr_seq_conta_proc_nv_w;
						
					CALL pls_cta_proc_mat_regra_pck.cria_registro_regra_proc(nr_seq_conta_proc_nv_w, nm_usuario_p);
					CALL pls_cta_proc_mat_regra_pck.gera_seq_tiss_proc(nr_seq_conta_proc_nv_w, null, null, nr_seq_conta_w, nm_usuario_p);
				end if;
			elsif (ie_origem_p	= 'R') then
				select	count(1)
				into STRICT	qt_registro_w
				from	pls_requisicao_proc
				where	nr_seq_requisicao	= nr_seq_requisicao_w
				and	cd_procedimento		= cd_proc_pacote_w
				and	ie_origem_proced	= ie_origem_pacote_w;
				
				if (qt_registro_w	= 0) then
					select	nextval('pls_requisicao_proc_seq')
					into STRICT	nr_seq_req_proc_w
					;
					
					insert	into pls_requisicao_proc(nr_sequencia, dt_atualizacao, nm_usuario,
						 cd_procedimento, ie_origem_proced, ie_status,
						 ie_estagio, nr_seq_pacote, nr_seq_requisicao,
						 qt_procedimento, qt_proc_executado, qt_solicitado,
						 nr_seq_conversao_pacote, nr_seq_proc_princ)
					values (nr_seq_req_proc_w, clock_timestamp(), nm_usuario_p,
						 cd_proc_pacote_w, ie_origem_pacote_w, 'U',
						 'AE', nr_seq_pacote_w, nr_seq_requisicao_w,
						 null, null, qt_solicitada_ww,
						 nr_seq_conversao_w, nr_seq_item_p);
					
					CALL pls_consistir_requisicao_proc(nr_seq_req_proc_w,cd_estabelecimento_p,nm_usuario_p);
					CALL pls_atualiza_valor_pacote(nr_seq_req_proc_w,'R',nm_usuario_p, 'S', 'N');
					
					if (ie_tipo_processo_w = 'I') then	
						CALL pls_gerar_de_para_req_intercam(	nr_seq_req_proc_w, '', null,
										null, null, null,
										null, cd_estabelecimento_p, nm_usuario_p);
					end if;
					
					begin
					select	coalesce(nr_seq_preco_pacote,0)
					into STRICT	nr_seq_preco_pacote_w
					from	pls_requisicao_proc
					where	nr_sequencia	= nr_seq_req_proc_w;
					exception
					when others then
						nr_seq_preco_pacote_w	:= 0;
					end;
					
					if (nr_seq_preco_pacote_w	<> 0) then
						CALL pls_abrir_proc_pacote(
								nr_seq_preco_pacote_w, null, null, nr_seq_requisicao_w, 'R',
								nr_seq_prestador_w, ie_tipo_guia_w, dt_preco_w, nm_usuario_p);
					end if;
				end if;
			end if;
		end if;
		
		end;
	end loop;
	close C02;
	
	if (ie_origem_p	<> 'C') then
		select	ie_excluir_item
		into STRICT	ie_excluir_item_w
		from	pls_regra_conversao_pacote
		where	nr_sequencia	= nr_seq_regra_w;
	end if;
	
	if (ie_excluir_item_w	= 'S') then
		if (ie_origem_p	= 'R') then
			delete	FROM pls_requisicao_proc
			where	nr_sequencia	= nr_seq_item_p;
		elsif (ie_origem_p	in ('A','W')) then
			delete	FROM pls_guia_plano_proc
			where	nr_sequencia	= nr_seq_item_p;
		end if;
	else
		if (ie_origem_p	= 'R') then
			update	pls_requisicao_proc
			set	nr_seq_conversao_pacote	= nr_seq_regra_w
			where	nr_sequencia		= nr_seq_item_p;
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_conversao_pacote ( nr_seq_guia_req_p bigint, nr_seq_item_p bigint, ie_tipo_item_p text, ie_origem_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

