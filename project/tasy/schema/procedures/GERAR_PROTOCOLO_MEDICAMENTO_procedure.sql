-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_protocolo_medicamento (cd_protocolo_dest_p bigint , nr_seq_destino_p bigint , nr_seq_medicamento_p text) AS $body$
DECLARE

														
qt_unitaria_w               bigint;
ds_observacao_w             varchar(4000);
ie_lado_w                   varchar(1);
ie_indicacao_w              varchar(1);
ie_uso_antimicrobiano_w     varchar(1);
cd_microorganismo_cih_w     bigint;
cd_amostra_cih_w            bigint;
cd_topografia_cih_w         bigint;
ie_origem_infeccao_w        varchar(1);
ie_objetivo_w               varchar(1);
qt_hora_aplicacao_w         smallint;
ie_acm_w                    varchar(1);
ie_aplic_lenta_w            varchar(1);
ie_aplic_bolus_w            varchar(1);
qt_min_aplicacao_w          smallint;
ie_se_necessario_w          varchar(1);
ds_dose_diferenciada_w      varchar(50);
ie_bomba_infusao_w          varchar(15);
qt_solucao_w                bigint;
ie_urgencia_w               varchar(3);
ie_via_aplicacao_w          varchar(5);
ds_horarios_w               varchar(2000);
cd_intervalo_w              varchar(7);
qt_dose_w                   bigint;
cd_unidade_medida_w         varchar(30);
cd_material_w               integer;
ie_medicacao_paciente_w     varchar(1);
ie_multiplicar_dose_w       varchar(1);
-- campos solucao
qt_hora_fase_w              varchar(5);
qt_limite_quatro_hora_w     bigint;
qt_intervalo_bloqueio_w     bigint;
qt_bolus_pca_w              bigint;
qt_vol_infusao_pca_w        bigint;
qt_dose_inicial_pca_w       bigint;
ie_pca_modo_prog_w          varchar(15);
ie_tipo_analgesia_w         varchar(15);
ie_tipo_solucao_w           varchar(15);
ds_solucao_w                varchar(100);
nr_etapas_w                 smallint;
qt_volume_w                 bigint;
nr_seq_protocolo_w          integer;
qt_tempo_aplicacao_w        bigint;
qt_solucao_total_w          bigint;
qt_dosagem_w                bigint;
ie_tipo_dosagem_w           varchar(3);
-- controle: (s)solucao (n)medicamento
ie_controle_tempo_w         varchar(3);
-- diluentes
cd_unid_med_dose_dil_w      varchar(30);
ds_dose_diferenciada_dil_w  varchar(50);
qt_dose_dil_w               bigint;
cd_mat_dil_w                integer;
qt_dose_adic_dil_w          bigint;
qt_dose_ataque_dil_w        bigint;
-- materiais extras (itens)
cd_mat_comp_w               integer;
cd_unid_med_dose_comp_w     varchar(30);
ds_dose_diferenciada_comp_w varchar(50);
qt_dose_comp_w              bigint;
nm_usuario_w                varchar(255);
nr_agrupamento_w            protocolo_medic_material.nr_agrupamento%type;
nr_seq_material_w		  	protocolo_medic_material.nr_seq_material%type;

c01 CURSOR FOR
SELECT cd_amostra_cih
     , cd_intervalo
     , cd_mat_dil
     , cd_material
     , cd_microorganismo_cih
     , cd_topografia_cih
     , cd_unid_med_dose_dil
     , cd_unidade_medida
     , ds_dose_diferenciada_dil
     , ds_dose_diferenciada
     , ds_horarios
	 , ds_observacao
     , ds_solucao
     , coalesce(ie_acm, 'N') as ie_acm
     , coalesce(ie_aplic_bolus, 'N') as ie_aplic_bolus
     , coalesce(ie_aplic_lenta, 'N') as ie_aplic_lenta
     , coalesce(ie_bomba_infusao, 'N') as ie_bomba_infusao
     , ie_controle_tempo
     , ie_indicacao
     , ie_lado
     , ie_medicacao_paciente
     , ie_objetivo
     , ie_origem_infeccao
     , ie_pca_modo_prog
     , ie_se_necessario
     , ie_tipo_analgesia
     , ie_tipo_dosagem
     , ie_tipo_solucao
     , coalesce(ie_urgencia, 'N') as ie_urgencia
     , ie_uso_antimicrobiano
     , ie_via_aplicacao
     , nr_etapas
     , nr_seq_protocolo
     , qt_bolus_pca
     , qt_dosagem
     , qt_dose_adic_dil
     , qt_dose_ataque_dil
     , qt_dose_dil
     , qt_dose_inicial_pca
     , coalesce(qt_dose, coalesce(qt_unitaria, 0)) as qt_dose
     , qt_hora_aplicacao
     , qt_hora_fase
     , qt_intervalo_bloqueio
     , qt_limite_quatro_hora
     , qt_min_aplicacao
     , qt_solucao_total
     , qt_solucao
     , qt_tempo_aplicacao
     , qt_unitaria
     , qt_vol_infusao_pca
     , qt_volume
     , cd_mat_red
     , qt_dose_red
     , qt_dose_recons
     , cd_unid_med_dose_red
	 , cd_mat_recons
	 , cd_unid_med_dose_recons
	 , qt_dias_solicitado
	 , ie_ref_calculo
from   cpoe_material
where  nr_sequencia = nr_seq_medicamento_p;

c02 CURSOR FOR
SELECT cd_mat_comp
       , cd_unid_med_dose_comp
       , ds_dose_diferenciada_comp
       , qt_dose_comp
from   cpoe_solucao_med_comp_v
where  nr_sequencia = nr_seq_medicamento_p;

BEGIN
    nm_usuario_w := wheb_usuario_pck.get_nm_usuario;

    nr_agrupamento_w := Obter_agrup_prot_medic_mat(cd_protocolo_dest_p, nr_seq_destino_p, 0);

    if (nr_seq_medicamento_p IS NOT NULL AND nr_seq_medicamento_p::text <> '') then
		for t1 in c01
		loop
			
			select	coalesce(max(nr_seq_material),0) +1
			into STRICT 	nr_seq_material_w
			from 	protocolo_medic_material
			where 	cd_protocolo = cd_protocolo_dest_p
			and	  	nr_sequencia = nr_seq_destino_p;
			
			if ( t1.ie_controle_tempo = 'S' ) then -- Solucao
			
				insert into protocolo_medic_solucao(cd_protocolo
						   , nr_sequencia
						   , nr_seq_solucao
						   , nr_agrupamento
						   , dt_atualizacao
						   , nm_usuario
						   , qt_dosagem
						   , ie_tipo_dosagem
						   , qt_volume
						   , qt_solucao_total
						   , qt_tempo_aplicacao
						   , nr_etapas
						   , ie_bomba_infusao
						   , ds_horarios
						   , ie_esquema_alternado
						   , ie_calc_aut
						   , ie_acm
						   , ie_se_necessario
						   , qt_hora_fase
						   , ds_solucao
						   , ie_tipo_solucao
						   , ie_hemodialise
						   , nr_seq_protocolo
						   , ie_tipo_analgesia
						   , ie_pca_modo_prog
						   , qt_dose_inicial_pca
						   , qt_vol_infusao_pca
						   , qt_bolus_pca
						   , qt_intervalo_bloqueio
						   , qt_limite_quatro_hora
						   , nr_seq_interno
						   , ie_via_aplicacao
						   , cd_intervalo
						   , ie_tipo_sol
						   , ie_ref_calculo)
				values (cd_protocolo_dest_p
					   , nr_seq_destino_p
					   , nr_seq_material_w
					   , nr_agrupamento_w
					   , clock_timestamp()
					   , nm_usuario_w
					   , t1.qt_dosagem
					   , t1.ie_tipo_dosagem
					   , t1.qt_volume
					   , t1.qt_solucao_total
					   , t1.qt_tempo_aplicacao
					   , t1.nr_etapas
					   , t1.ie_bomba_infusao
					   , t1.ds_horarios
					   , 'N'
					   , 'S'
					   , t1.ie_acm
					   , t1.ie_se_necessario
					   , converter_hora_para_decimal(t1.qt_hora_fase)
					   , t1.ds_solucao
					   , t1.ie_tipo_solucao
					   , 'N'
					   , t1.nr_seq_protocolo
					   , t1.ie_tipo_analgesia
					   , t1.ie_pca_modo_prog
					   , t1.qt_dose_inicial_pca
					   , t1.qt_vol_infusao_pca
					   , t1.qt_bolus_pca
					   , t1.qt_intervalo_bloqueio
					   , t1.qt_limite_quatro_hora
					   , nextval('protocolo_medic_solucao_seq')
					   , t1.ie_via_aplicacao
					   , t1.cd_intervalo
					   , CASE WHEN t1.ie_tipo_solucao='I' THEN  '1' WHEN t1.ie_tipo_solucao='C' THEN  '3' WHEN t1.ie_tipo_solucao='V' THEN  '4' WHEN t1.ie_tipo_solucao='P' THEN  '5'  ELSE '3' END
					   , t1.ie_ref_calculo);
		
				/* Item Principal */

				CALL incluir_prot_derivado_material(
					cd_protocolo_dest_p
					, nr_seq_destino_p
					, t1.cd_material
					, null
					, 4
					, t1.qt_dose
					, t1.ds_dose_diferenciada
					, t1.ie_via_aplicacao
					, t1.cd_unidade_medida
					, t1.ds_horarios
					, null
					, t1.cd_intervalo
					, null
					, t1.ie_aplic_bolus
					, t1.ie_aplic_lenta
					, clock_timestamp()
					, t1.ie_urgencia
					, 'N'
					, 'S'
					, 'N'
					, null
					, nr_seq_material_w);
		
				/* Diluente */

				if (t1.cd_mat_dil IS NOT NULL AND t1.cd_mat_dil::text <> '') then
					CALL incluir_prot_derivado_material(
						cd_protocolo_dest_p
						, nr_seq_destino_p
						, t1.cd_mat_dil
						, null
						, 4
						, t1.qt_dose_dil
						, t1.ds_dose_diferenciada
						, t1.ie_via_aplicacao
						, t1.cd_unid_med_dose_dil
						, t1.ds_horarios
						, null
						, t1.cd_intervalo
						, null
						, t1.ie_aplic_bolus
						, t1.ie_aplic_lenta
						, clock_timestamp()
						, t1.ie_urgencia
						, 'N'
						, 'S'
						, 'N'
						, null
						, nr_seq_material_w);
				end if;
		
				/* Rediluente */

				if (t1.cd_mat_red IS NOT NULL AND t1.cd_mat_red::text <> '') then
					CALL incluir_prot_derivado_material(
						cd_protocolo_dest_p
						, nr_seq_destino_p
						, t1.cd_mat_red
						, null
						, 4
						, t1.qt_dose_red
						, t1.ds_dose_diferenciada
						, t1.ie_via_aplicacao
						, t1.cd_unid_med_dose_red
						, t1.ds_horarios
						, null
						, t1.cd_intervalo
						, null
						, t1.ie_aplic_bolus
						, t1.ie_aplic_lenta
						, clock_timestamp()
						, t1.ie_urgencia
						, 'N'
						, 'S'
						, 'N'
						, null
						, nr_seq_material_w);
				end if;
		
				/* itens complementares */

				for m1 in c02
				loop
					CALL incluir_prot_derivado_material(
						cd_protocolo_dest_p
						, nr_seq_destino_p
						, m1.cd_mat_comp
						, null
						, 4
						, m1.qt_dose_comp
						, m1.ds_dose_diferenciada_comp
						, t1.ie_via_aplicacao
						, m1.cd_unid_med_dose_comp
						, t1.ds_horarios
						, null
						, t1.cd_intervalo
						, null
						, t1.ie_aplic_bolus
						, t1.ie_aplic_lenta
						, clock_timestamp()
						, t1.ie_urgencia
						, 'N'
						, 'S'
						, 'N'
						, null
						, nr_seq_material_w);
				end loop;
				
			elsif ( t1.ie_controle_tempo = 'N' ) then -- Medicamento
				begin
					insert into protocolo_medic_material(cd_protocolo
									   , nr_sequencia
									   , nr_seq_material
									   , cd_material
									   , qt_dose
									   , cd_unidade_medida
									   , ds_dias_aplicacao
									   , dt_atualizacao
									   , nm_usuario
									   , nr_agrupamento
									   , ds_recomendacao
									   , ie_via_aplicacao
									   , ie_agrupador
									   , cd_intervalo
									   , ds_horarios
									   , ie_se_necessario
									   , qt_minuto_aplicacao
									   , qt_hora_aplicacao
									   , ie_bomba_infusao
									   , ie_aplic_bolus
									   , ie_aplic_lenta
									   , ie_acm
									   , ds_dose_diferenciada
									   , qt_solucao
									   , ie_urgencia
									   , ie_intervalo_fixo
									   , ie_lado
									   , ie_objetivo
									   , cd_topografia_cih
									   , cd_microorganismo_cih
									   , cd_amostra_cih
									   , ie_origem_infeccao
									   , ie_indicacao
									   , ie_uso_antimicrobiano
									   , ie_medicacao_paciente
									   , qt_dias_prev_util)
							values (cd_protocolo_dest_p
								  , nr_seq_destino_p
								  , nr_seq_material_w
								  , t1.cd_material
								  , t1.qt_dose
								  , t1.cd_unidade_medida
								  , ''
								  , clock_timestamp()
								  , nm_usuario_w
								  , nr_agrupamento_w
								  , t1.ds_observacao
								  , t1.ie_via_aplicacao
								  , 1
								  , t1.cd_intervalo
								  , t1.ds_horarios
								  , t1.ie_se_necessario
								  , t1.qt_min_aplicacao
								  , t1.qt_hora_aplicacao
								  , t1.ie_bomba_infusao
								  , t1.ie_aplic_bolus
								  , t1.ie_aplic_lenta
								  , t1.ie_acm
								  , t1.ds_dose_diferenciada
								  , t1.qt_solucao
								  , t1.ie_urgencia
								  , 'N'
								  , t1.ie_lado
								  , t1.ie_objetivo
								  , t1.cd_topografia_cih
								  , t1.cd_microorganismo_cih
								  , t1.cd_amostra_cih
								  , t1.ie_origem_infeccao
								  , t1.ie_indicacao
								  , t1.ie_uso_antimicrobiano
								  , t1.ie_medicacao_paciente
								  , t1.qt_dias_solicitado);
				exception
				when unique_violation then
					null;
				end;

                /* Diluente */

				if (t1.cd_mat_dil IS NOT NULL AND t1.cd_mat_dil::text <> '') then
					CALL incluir_prot_derivado_material(
						cd_protocolo_dest_p
						, nr_seq_destino_p
						, t1.cd_mat_dil
						, null
						, 3
						, t1.qt_dose_dil
						, t1.ds_dose_diferenciada
						, t1.ie_via_aplicacao
						, t1.cd_unid_med_dose_dil
						, t1.ds_horarios
						, null
						, t1.cd_intervalo
						, null
						, t1.ie_aplic_bolus
						, t1.ie_aplic_lenta
						, clock_timestamp()
						, t1.ie_urgencia
						, 'N'
						, 'S'
						, 'N'
						, null
						, null
						, nr_seq_material_w);
                end if;

                /* Rediluente */

                if (t1.cd_mat_red IS NOT NULL AND t1.cd_mat_red::text <> '') then
					CALL incluir_prot_derivado_material(
						cd_protocolo_dest_p
						, nr_seq_destino_p
						, t1.cd_mat_red
						, null
						, 7
						, t1.qt_dose_red
						, t1.ds_dose_diferenciada
						, t1.ie_via_aplicacao
						, t1.cd_unid_med_dose_red
						, t1.ds_horarios
						, null
						, t1.cd_intervalo
						, null
						, t1.ie_aplic_bolus
						, t1.ie_aplic_lenta
						, clock_timestamp()
						, t1.ie_urgencia
						, 'N'
						, 'S'
						, 'N'
						, null
						, null
						, nr_seq_material_w);
                end if;
		
				if (t1.cd_mat_recons IS NOT NULL AND t1.cd_mat_recons::text <> '') then
					CALL Incluir_prot_derivado_material(		cd_protocolo_dest_p,
						nr_seq_destino_p,
						t1.cd_mat_recons,
						null,
						9,
						t1.qt_dose_recons,
						t1.ds_dose_diferenciada,
						t1.ie_via_aplicacao,
						t1.cd_unid_med_dose_recons,
						t1.ds_horarios,
						null,
						t1.cd_intervalo,
						null,
						t1.ie_aplic_bolus,
						t1.ie_aplic_lenta,
						clock_timestamp(),
						t1.ie_urgencia,
						'N',
						'N',
						'N',
						null,
						null,
						nr_seq_material_w);
				end if;
				
				/* itens complementares */

				for m1 in c02
				loop
					CALL incluir_prot_derivado_material(
						cd_protocolo_dest_p
						, nr_seq_destino_p
						, m1.cd_mat_comp
						, nr_agrupamento_w
						, 1
						, m1.qt_dose_comp
						, m1.ds_dose_diferenciada_comp
						, t1.ie_via_aplicacao
						, m1.cd_unid_med_dose_comp
						, t1.ds_horarios
						, null
						, t1.cd_intervalo
						, null
						, t1.ie_aplic_bolus
						, t1.ie_aplic_lenta
						, clock_timestamp()
						, t1.ie_urgencia
						, 'N'
						, 'S'
						, 'N');
				end loop;
			end if;
		end loop;
    end if;

    commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_protocolo_medicamento (cd_protocolo_dest_p bigint , nr_seq_destino_p bigint , nr_seq_medicamento_p text) FROM PUBLIC;

