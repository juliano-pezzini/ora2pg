-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_ajustar_base_adm ( nm_usuario_p text) AS $body$
DECLARE


dt_versao_atual_cliente_w 	timestamp;
qt_registro_w			bigint;
ds_erro_w			varchar(4000);
cd_estabelecimento_w		smallint;
ds_tipo_obj_w			varchar(255);
ie_cooperativa_w		varchar(1);


BEGIN

/* Rotina do grupo OPS - Administrativo e Receitas - LÍDER: Ricardo Lepinski */

dt_versao_atual_cliente_w	:= coalesce(to_date(to_char(obter_data_geracao_versao-1,'dd/mm/yyyy') ||' 23:59:59','dd/mm/yyyy hh24:mi:ss'),clock_timestamp() - interval '90 days');

/* 08/08/2011 - Criar a trigger para atualização da pessoa física */

CALL tasy_criar_trigger_pf_alt();

/*26/09/2011 - Criar a trigger para atualização do complemento de pessoa física*/

CALL tasy_criar_trigger_complpf_alt();

/*22/04/2013 - Criar a trigger para atualização da regra de via adicional na alteração de pessoa física. Coloqueri no ajustar base devido a OS 582995, para o tratamento do commit*/

CALL pls_criar_trigger_pf_via_adic();

select	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	pls_outorgante;

/*aaschlote -Atualiuzar o campo IE_TIPO_CONSISTENCIA*/

if (dt_versao_atual_cliente_w < to_date('07/06/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	PLS_REGRA_BLOQUEIO_SIMUL
	where	coalesce(IE_TIPO_CONSISTENCIA::text, '') = '';

	if (qt_registro_w > 0) then
		update	PLS_REGRA_BLOQUEIO_SIMUL
		set	IE_TIPO_CONSISTENCIA	= 'PF'
		where	coalesce(IE_TIPO_CONSISTENCIA::text, '') = '';
	end if;
end if;

/*aaschlote -Atualiuzar o campo IE_POSSUI_PROCURACAO_VALIDA*/

if (dt_versao_atual_cliente_w < to_date('13/06/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	REGRA_GRAU_PARENT_CONTRATO
	where	coalesce(IE_POSSUI_PROCURACAO_VALIDA::text, '') = '';

	if (qt_registro_w > 0) then
		update	REGRA_GRAU_PARENT_CONTRATO
		set	IE_POSSUI_PROCURACAO_VALIDA	= 'N'
		where	coalesce(IE_POSSUI_PROCURACAO_VALIDA::text, '') = '';
	end if;
end if;

/*Lepinski -Atualiuzar o campo IE_MES_COBRANCA_REAJ*/

if (dt_versao_atual_cliente_w < to_date('23/06/2012','dd/mm/yyyy')) then
	update	pls_contrato
	set	ie_mes_cobranca_reaj	= 'R'
	where	coalesce(ie_mes_cobranca_reaj::text, '') = '';
end if;

/*aaschlote -Atualiuzar o campo IE_PAGADOR_CONTRATO_PRINC*/

if (dt_versao_atual_cliente_w < to_date('25/06/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	PLS_PARAMETROS
	where	coalesce(IE_PAGADOR_CONTRATO_PRINC::text, '') = '';

	if (qt_registro_w > 0) then
		update	PLS_PARAMETROS
		set	IE_PAGADOR_CONTRATO_PRINC	= 'S'
		where	coalesce(IE_PAGADOR_CONTRATO_PRINC::text, '') = '';
	end if;
end if;

/*sideker -Atualiuzar o campo IE_BENEFICIO_OBITO*/

if (dt_versao_atual_cliente_w < to_date('27/06/2012','dd/mm/yyyy')) then
	update	pls_regra_intercambio
	set	ie_beneficio_obito = 'N'
	where	coalesce(ie_beneficio_obito::text, '') = '';
end if;

/*aaschlote -Atualiuzar o campo IE_PCMSO*/

if (dt_versao_atual_cliente_w < to_date('29/06/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	PLS_REGRA_INTERCAMBIO
	where	coalesce(IE_PCMSO::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_regra_intercambio
		set	ie_pcmso = 'N'
		where	coalesce(ie_pcmso::text, '') = '';
	end if;
end if;

/*aaschlote -Atualiuzar o campo IE_PCMSO*/

if (dt_versao_atual_cliente_w < to_date('01/07/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_reajuste
	where	coalesce(dt_reajuste_aux::text, '') = '';

	if (qt_registro_w > 0) then
		CALL pls_ajustar_data_aux_reajuste();
	end if;
end if;

/* Lepinski -Atualiuzar o campo IE_REAJUSTE */

if (dt_versao_atual_cliente_w < to_date('03/07/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_parametros
	where	coalesce(ie_reajuste::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_parametros
		set	ie_reajuste = 'C'
		where	coalesce(ie_reajuste::text, '') = '';
	end if;
end if;

/*aaschlote -Atualiuzar o campo NR_VIA_INICIAL*/

if (dt_versao_atual_cliente_w < to_date('04/07/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	PLS_REGRA_SEGURADO_CART
	where	coalesce(NR_VIA_INICIAL::text, '') = '';

	if (qt_registro_w > 0) then
		update	PLS_REGRA_SEGURADO_CART
		set	NR_VIA_INICIAL	= 2
		where	coalesce(NR_VIA_INICIAL::text, '') = '';
	end if;
end if;

/*rlepinski - Ajustar campo IE_GERACAO_NOTA_TITULO_PF */

if (dt_versao_atual_cliente_w < to_date('03/08/2012','dd/mm/yyyy')) then
	begin
	update	pls_parametros
	set	ie_geracao_nota_titulo_pf = ie_geracao_nota_titulo;
	exception
	when others then
		ds_erro_w	:= '';
	end;
end if;

/*rlepinski - OS 474067 - Ajuste na descrição do item*/

if (dt_versao_atual_cliente_w < to_date('04/08/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_cadastro_regra_item
	where	nr_sequencia	= 8;

	if (qt_registro_w > 0) then
		update	pls_cadastro_regra_item
		set	ds_item 	= 'Regra via carteira'
		where	nr_sequencia	= 8;
	end if;
end if;

/* rlepinski - Ajustar descrição do dominio 3324 */

if (dt_versao_atual_cliente_w < to_date('04/08/2012','dd/mm/yyyy')) then
	update	valor_dominio
	set	ds_valor_dominio	= 'Cônjuge/Companheira'
	where	cd_dominio		= 3324
	and	vl_dominio		= '4';
end if;

/* aaschlote - Ajustar o campo  IE_VENC_CART_FIM_MES*/

if (dt_versao_atual_cliente_w < to_date('08/08/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	PLS_PARAMETROS
	where	coalesce(IE_VENC_CART_FIM_MES::text, '') = '';

	if (qt_registro_w > 0) then
		update	PLS_PARAMETROS
		set	IE_VENC_CART_FIM_MES	= 'N'
		where	coalesce(IE_VENC_CART_FIM_MES::text, '') = '';
	end if;
end if;

/* aaschlote - Ajustar o campo  IE_PESSOA_CONTRATO*/

if (dt_versao_atual_cliente_w < to_date('09/08/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	PLS_PARAMETROS
	where	coalesce(IE_PESSOA_CONTRATO::text, '') = '';

	if (qt_registro_w > 0) then
		update	PLS_PARAMETROS
		set	IE_PESSOA_CONTRATO	= 'N'
		where	coalesce(IE_PESSOA_CONTRATO::text, '') = '';
	end if;
end if;

/*aaschlote 15/08/2012 - Inseir os itens dos parâmetros da OPS na administração de sistemas da função OPS - Gestão de Operadora*/

if (dt_versao_atual_cliente_w < to_date('15/08/2012','dd/mm/yyyy')) then
	CALL pls_ajustar_itens_param_ops(nm_usuario_p);
end if;

/*aaschlote 20/08/2012 - Ajustar o campo nr_seq_lote_referencia da tabela pls_lote_reaj_segurado*/

if (dt_versao_atual_cliente_w < to_date('20/08/2012','dd/mm/yyyy')) then
	CALL pls_ajustar_lote_ref_reajuste(nm_usuario_p);
end if;

/* aaschlote - Ajustar o campo  ie_controle_carteira*/

if (dt_versao_atual_cliente_w < to_date('21/08/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_intercambio
	where	coalesce(ie_controle_carteira::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_intercambio
		set	ie_controle_carteira	= 'A'
		where	coalesce(ie_controle_carteira::text, '') = '';
	end if;
end if;

/* sideker - Ajustar o campo  IE_PERMITE_VISUALIZAR_CANAL*/

if (dt_versao_atual_cliente_w < to_date('24/08/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_vendedor_vinculado
	where	coalesce(ie_permite_visualizar_canal::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_vendedor_vinculado
		set	ie_permite_visualizar_canal = 'N'
		where	coalesce(ie_permite_visualizar_canal::text, '') = '';
	end if;
end if;

/* lepinski - Ajustar o campo  IE_COPIAR_SCA_PLANO*/

if (dt_versao_atual_cliente_w < to_date('28/08/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_proposta_beneficiario
	where	coalesce(ie_copiar_sca_plano::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_proposta_beneficiario
		set	ie_copiar_sca_plano = 'S';
	end if;
end if;

/* aaschlote - Ajustar o campo  IE_ENVIO_LOTE_GUIAS*/

if (dt_versao_atual_cliente_w < to_date('29/08/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	PLS_CONVERSAO_PROC
	where	coalesce(IE_ENVIO_LOTE_GUIAS::text, '') = '';

	if (qt_registro_w > 0) then
		update	PLS_CONVERSAO_PROC
		set	IE_ENVIO_LOTE_GUIAS = 'N';
	end if;
end if;

/* lepinski - Ajustar o campo  NR_PARCELA_BENEF */

if (dt_versao_atual_cliente_w < to_date('30/08/2012','dd/mm/yyyy')) then
	CALL pls_baca_parcela_repasse_mens();
end if;

/* aaschllote - Ajustar o campo  DT_PERIODO_INICIAL e DT_PERIODO_FINAL */

if (dt_versao_atual_cliente_w < to_date('03/09/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_lote_mov_benef
	where	coalesce(dt_periodo_inicial::text, '') = ''
	and	coalesce(dt_periodo_final::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_lote_mov_benef
		set	dt_periodo_inicial	= trunc(dt_referencia,'month'),
			dt_periodo_final	= last_day(dt_referencia)
		where	coalesce(dt_periodo_inicial::text, '') = ''
		and	coalesce(dt_periodo_final::text, '') = '';
	end if;
end if;

/* aaschlote - Ajustar o campo  IE_TIPO_DATA*/

if (dt_versao_atual_cliente_w < to_date('04/09/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	PLS_REGRA_DECLARACAO_PROP
	where	coalesce(IE_TIPO_DATA::text, '') = '';

	if (qt_registro_w > 0) then
		update	PLS_REGRA_DECLARACAO_PROP
		set	IE_TIPO_DATA = 'N'
		where	coalesce(IE_TIPO_DATA::text, '') = '';
	end if;
end if;

/* aaschlote - Ajustar o campo  IE_GERAR_USUARIO_EVEN_REPASSE*/

if (dt_versao_atual_cliente_w < to_date('05/09/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	PLS_PARAMETROS
	where	coalesce(IE_GERAR_USUARIO_EVEN_REPASSE::text, '') = '';

	if (qt_registro_w > 0) then
		update	PLS_PARAMETROS
		set	IE_GERAR_USUARIO_EVEN_REPASSE = 'S'
		where	coalesce(IE_GERAR_USUARIO_EVEN_REPASSE::text, '') = '';
	end if;
end if;

/*aaschlote - Ajustar dados para as regras de mensagem na mensalidade*/

if (dt_versao_atual_cliente_w < to_date('10/09/2012','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	PLS_CADASTRO_REGRA_ITEM
	where	nr_sequencia	= 561;

	if (qt_registro_w > 0) then
		update	PLS_CADASTRO_REGRA_ITEM
		set	DS_ITEM		= 'Mensalidade',
			NR_SEQ_SUPERIOR	= 561
		where	nr_sequencia	= 51;
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	PLS_MACRO_MENSALIDADE
	where	coalesce(IE_TIPO_MENSAGEM::text, '') = '';

	if (qt_registro_w > 0) then
		update	PLS_MACRO_MENSALIDADE
		set	IE_TIPO_MENSAGEM	= 'M'
		where	coalesce(IE_TIPO_MENSAGEM::text, '') = '';
	end if;
end if;

/*aaschlote - Ajustar dados para as regras de tabelas de preço de intercâmbio*/

if (dt_versao_atual_cliente_w < to_date('14/09/2012','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	PLS_CADASTRO_REGRA_ITEM
	where	nr_sequencia	= 175
	and	IE_LIBERACAO_PERFIL	= 'S';

	if (qt_registro_w > 0) then
		update	PLS_CADASTRO_REGRA_ITEM
		set	IE_LIBERACAO_PERFIL	= 'N'
		where	nr_sequencia		= 175;
	end if;

	CALL pls_ajust_lib_perfil_regra_tab(cd_estabelecimento_w);
end if;

/* aaschlote - Ajustar o campo  IE_MANTER_CCO_MIGRACAO*/

if (dt_versao_atual_cliente_w < to_date('08/10/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	PLS_PARAMETROS
	where	coalesce(IE_MANTER_CCO_MIGRACAO::text, '') = '';

	if (qt_registro_w > 0) then
		update	PLS_PARAMETROS
		set	IE_MANTER_CCO_MIGRACAO = 'N'
		where	coalesce(IE_MANTER_CCO_MIGRACAO::text, '') = '';
	end if;
end if;

/* aaschlote - Ajustar o campo  IE_DEPENDENTE_VENC_TITULAR*/

if (dt_versao_atual_cliente_w < to_date('11/10/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	PLS_PARAM_REGRA_CARTEIRA
	where	coalesce(IE_DEPENDENTE_VENC_TITULAR::text, '') = '';

	if (qt_registro_w > 0) then
		update	PLS_PARAM_REGRA_CARTEIRA
		set	IE_DEPENDENTE_VENC_TITULAR = 'N'
		where	coalesce(IE_DEPENDENTE_VENC_TITULAR::text, '') = '';
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	PLS_CARTEIRA_RENOVACAO
	where	coalesce(IE_DEPENDENTE_VENC_TITULAR::text, '') = '';

	if (qt_registro_w > 0) then
		update	PLS_CARTEIRA_RENOVACAO
		set	IE_DEPENDENTE_VENC_TITULAR = 'N'
		where	coalesce(IE_DEPENDENTE_VENC_TITULAR::text, '') = '';
	end if;
end if;

/* aaschlote - Ajustar o campo  IE_CARENCIA_ABRANGENCIA_ANT*/

if (dt_versao_atual_cliente_w < to_date('16/10/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	PLS_PARAMETROS
	where	coalesce(IE_CARENCIA_ABRANGENCIA_ANT::text, '') = '';

	if (qt_registro_w > 0) then
		update	PLS_PARAMETROS
		set	IE_CARENCIA_ABRANGENCIA_ANT = 'N'
		where	coalesce(IE_CARENCIA_ABRANGENCIA_ANT::text, '') = '';
	end if;
end if;

/*apoberziner - Ajustar o campo NR_CONTRATO  da tabela PLS_LOTE_REAJ_SEGURADO*/

if (dt_versao_atual_cliente_w < to_date('30/10/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from 	pls_lote_reaj_segurado
	where	coalesce(nr_contrato::text, '') = '';

	if (qt_registro_w > 0) then
		CALL pls_ajustar_reaj_contr_colet(nm_usuario_p);
	end if;
end if;

/*aaschlote 30/10/2012 - Ajustar a inconsistência de inclusão número 14*/

if (dt_versao_atual_cliente_w < to_date('30/10/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_inconsistencia_inc_seg
	where	nr_sequencia		= 14;

	if (qt_registro_w > 0) then
		update	pls_inconsistencia_inc_seg
		set	ds_inconsistencia	= 'CPF não informado (Titular e dependente acima de 18 anos)'
		where	nr_sequencia		= 14;
	end if;
end if;

/*aaschlote 07/11/2012 - Ajustar o campo DT_INICIO_VIGENCIA da tabela PLS_REGRA_CARENCIA_ISENCAO devido ao valor padrão*/

if (dt_versao_atual_cliente_w < to_date('07/11/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	PLS_REGRA_CARENCIA_ISENCAO
	where	coalesce(nr_seq_contrato::text, '') = ''
	and	coalesce(nr_seq_intercambio::text, '') = ''
	and	(DT_INICIO_VIGENCIA IS NOT NULL AND DT_INICIO_VIGENCIA::text <> '');

	if (qt_registro_w > 0) then
		update	PLS_REGRA_CARENCIA_ISENCAO
		set	DT_INICIO_VIGENCIA	 = NULL
		where	coalesce(nr_seq_contrato::text, '') = ''
		and	coalesce(nr_seq_intercambio::text, '') = ''
		and	(DT_INICIO_VIGENCIA IS NOT NULL AND DT_INICIO_VIGENCIA::text <> '');
	end if;
end if;

/*aaschlote 09/11/2012 - Ajustar o campo IE_TIPO_DATA da tabela PLS_BONIFICACAO_RESTRICAO*/

if (dt_versao_atual_cliente_w < to_date('09/11/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	PLS_BONIFICACAO_RESTRICAO
	where	coalesce(IE_TIPO_DATA::text, '') = '';

	if (qt_registro_w > 0) then
		update	PLS_BONIFICACAO_RESTRICAO
		set	IE_TIPO_DATA = 'P'
		where	coalesce(IE_TIPO_DATA::text, '') = '';
	end if;
end if;

/*aaschlote 15/11/2012 - Ajustar o campo IE_ORIGEM_ALT_PRODUTO da tabela PLS_REGRA_LANC_AUTOMATICO*/

if (dt_versao_atual_cliente_w < to_date('15/11/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	PLS_REGRA_LANC_AUTOMATICO
	where	coalesce(IE_ORIGEM_ALT_PRODUTO::text, '') = '';

	if (qt_registro_w > 0) then
		update	PLS_REGRA_LANC_AUTOMATICO
		set	IE_ORIGEM_ALT_PRODUTO = 'A'
		where	coalesce(IE_ORIGEM_ALT_PRODUTO::text, '') = '';
	end if;
end if;

/* Lepinski - 28/11/2012 - Retirar a obrigatoriedade do campo cd_centro_custo */

if (dt_versao_atual_cliente_w < to_date('28/11/2012','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	pls_regra_centro_custo
	where	coalesce(ie_centro_custo::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_regra_centro_custo
		set	ie_centro_custo = 'R'
		where	coalesce(ie_centro_custo::text, '') = '';
	end if;
end if;

/*aaschlote 05/12/2012 - Ajustar o campo IE_BENEFICIARIO da tabela PLS_REGRA_SOLIC_ALT_PF*/

if (dt_versao_atual_cliente_w < to_date('05/12/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	PLS_REGRA_SOLIC_ALT_PF
	where	coalesce(IE_BENEFICIARIO::text, '') = '';

	if (qt_registro_w > 0) then
		update	PLS_REGRA_SOLIC_ALT_PF
		set	IE_BENEFICIARIO = 'N'
		where	coalesce(IE_BENEFICIARIO::text, '') = '';
	end if;
end if;

/* Lepinski - Ajustar o campo IE_TIPO_PARCELA da tabela PLS_REGRA_ADIC_MENSAL */

if (dt_versao_atual_cliente_w < to_date('11/12/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_regra_adic_mensal
	where	coalesce(ie_tipo_parcela::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_regra_adic_mensal
		set	ie_tipo_parcela = 'B'
		where	coalesce(ie_tipo_parcela::text, '') = '';
	end if;
end if;

/* Lepinski - Ajustar o campo IE_PERMITE_GERAR_MENS_CONTAB da tabela PLS_PARAMETRO_CONTABIL */

if (dt_versao_atual_cliente_w < to_date('18/12/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_parametro_contabil
	where	coalesce(ie_permite_gerar_mens_contab::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_parametro_contabil
		set	ie_permite_gerar_mens_contab = 'S'
		where	coalesce(ie_permite_gerar_mens_contab::text, '') = '';
	end if;
end if;

/*aaschlote 24/12/2012 - Ajustar o campo IE_SEM_VENCIMENTO da tabela PLS_PARAM_REGRA_CARTEIRA*/

if (dt_versao_atual_cliente_w < to_date('24/12/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	PLS_PARAM_REGRA_CARTEIRA
	where	coalesce(IE_SEM_VENCIMENTO::text, '') = '';

	if (qt_registro_w > 0) then
		update	PLS_PARAM_REGRA_CARTEIRA
		set	IE_SEM_VENCIMENTO = 'N'
		where	coalesce(IE_SEM_VENCIMENTO::text, '') = '';
	end if;
end if;

/* Lepinski - Ajustar o campo IE_CONSITENCIA_GRUPO_ANS da tabela PLS_PARAMETRO_CONTABIL */

if (dt_versao_atual_cliente_w < to_date('26/12/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_parametro_contabil
	where	coalesce(ie_consitencia_grupo_ans::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_parametro_contabil
		set	ie_consitencia_grupo_ans = 'S'
		where	coalesce(ie_consitencia_grupo_ans::text, '') = '';
	end if;
end if;

/* Lepinski - Ajustar o campo QT_VIDAS da tabela PLS_REPASSE_VEND */

if (dt_versao_atual_cliente_w < to_date('27/12/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_repasse_vend
	where	coalesce(qt_vidas::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_repasse_vend a
		set	a.qt_vidas = (SELECT count(1) from pls_repasse_mens x where x.nr_seq_repasse = a.nr_sequencia)
		where	coalesce(a.qt_vidas::text, '') = '';
	end if;
end if;

/*aaschlote -28/12/2012 - Ajustar o campo IE_TIPO_LOTE da tabela PLS_LOTE_PESSOA_INCONSIST*/

if (dt_versao_atual_cliente_w < to_date('28/12/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	PLS_LOTE_PESSOA_INCONSIST
	where	coalesce(IE_TIPO_LOTE::text, '') = '';

	if (qt_registro_w > 0) then
		update	PLS_LOTE_PESSOA_INCONSIST
		set	IE_TIPO_LOTE = 'C'
		where	coalesce(IE_TIPO_LOTE::text, '') = '';
	end if;
end if;

/*sideker - 02/01/2013 - Inserir regras de codificação */

if (dt_versao_atual_cliente_w < to_date('02/01/2013','dd/mm/yyyy')) then
	CALL pls_baca_atualizar_codificacao();
end if;

/*aaschlote 02/01/2013 - Ajustar o campo IE_POSSUI_PORTABILIDADE da tabela PLS_REGRA_CARENCIA_ISENCAO */

if (dt_versao_atual_cliente_w < to_date('02/01/2013','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_regra_carencia_isencao
	where	coalesce(ie_possui_portabilidade::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_regra_carencia_isencao
		set	ie_possui_portabilidade	= 'A'
		where	coalesce(ie_possui_portabilidade::text, '') = '';
	end if;
end if;

/* Lepinski - Ajustar os lançamentos manuais */

if (dt_versao_atual_cliente_w < to_date('07/01/2013','dd/mm/yyyy')) then
	CALL pls_baca_acerto_lanc_manual();
end if;

/* Lepinski - Ajustar o campo IE_PERMITE_GERAR_PROTOCOLO da tabela PLS_PARAMETRO_CONTABIL */

if (dt_versao_atual_cliente_w < to_date('09/01/2013','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_parametro_contabil
	where	coalesce(ie_permite_gerar_protocolo::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_parametro_contabil
		set	ie_permite_gerar_protocolo = 'S'
		where	coalesce(ie_permite_gerar_protocolo::text, '') = '';
	end if;
end if;

/* Lepinski - Alterar a descrição do domínio */

if (dt_versao_atual_cliente_w < to_date('17/01/2013','dd/mm/yyyy')) then
	update	valor_dominio
	set	ds_valor_dominio = 'Conta de pagamento da pessoa prestador'
	where	cd_dominio	= 3977
	and	vl_dominio	= 'JP';
end if;

/*aaschlote -Atualiuzar o campo IE_VINCULAR_PAG_COOP_A100*/

if (dt_versao_atual_cliente_w < to_date('28/01/2013','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	PLS_PARAMETROS
	where	coalesce(IE_VINCULAR_PAG_COOP_A100::text, '') = '';

	if (qt_registro_w > 0) then
		update	PLS_PARAMETROS
		set	IE_VINCULAR_PAG_COOP_A100	= 'N'
		where	coalesce(IE_VINCULAR_PAG_COOP_A100::text, '') = '';
	end if;
end if;

/*aaschlote -Atualiuzar o campo IE_ABRANGENCIA_REPASSE*/

if (dt_versao_atual_cliente_w < to_date('30/01/2013','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	ptu_regra_tabela_a800
	where	coalesce(ie_abrangencia_repasse::text, '') = '';

	if (qt_registro_w > 0) then
		update	ptu_regra_tabela_a800
		set	ie_abrangencia_repasse	= 'A'
		where	coalesce(ie_abrangencia_repasse::text, '') = '';
	end if;
end if;

/*aaschlote -Atualiuzar o campo IE_REAJUSTAR_BENEF_CANCELADO*/

if (dt_versao_atual_cliente_w < to_date('11/02/2013','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	pls_reajuste
	where	coalesce(IE_REAJUSTAR_BENEF_CANCELADO::text, '') = '';

	if (qt_registro_w	> 0) then
		update	pls_reajuste
		set	IE_REAJUSTAR_BENEF_CANCELADO	= 'T'
		where	coalesce(IE_REAJUSTAR_BENEF_CANCELADO::text, '') = '';
	end if;
end if;

/*aaschlote -Atualiuzar o campo IE_CARENCIA_ESPECIFICA_ACOMOD*/

if (dt_versao_atual_cliente_w < to_date('18/02/2013','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	PLS_TIPO_CARENCIA
	where	coalesce(IE_CARENCIA_ESPECIFICA_ACOMOD::text, '') = '';

	if (qt_registro_w	> 0) then
		update	PLS_TIPO_CARENCIA
		set	IE_CARENCIA_ESPECIFICA_ACOMOD	= 'N'
		where	coalesce(IE_CARENCIA_ESPECIFICA_ACOMOD::text, '') = '';
	end if;
end if;

/* Ana Oberziner - Inserir o campo NR_CONTRATO na tabela PLS_VIA_ADIC_CART_LOTE*/

if (dt_versao_atual_cliente_w < to_date('26/03/2013','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_via_adic_cart_lote
	where	coalesce(nr_contrato::text, '') = ''
	and	(nr_seq_contrato IS NOT NULL AND nr_seq_contrato::text <> '');

	if (qt_registro_w > 0) then
		CALL pls_ajustar_nr_contr_via_adic();
	end if;
end if;

/*aaschlote -Atualiuzar o campo IE_PORTADOR_EXCLUSIVO,IE_GERAR_COBR_ESCRIT,IE_DESTACAR_REAJUSTE*/

if (dt_versao_atual_cliente_w < to_date('02/04/2013','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	PLS_REGRA_PORTADOR_MENS
	where	coalesce(IE_PORTADOR_EXCLUSIVO::text, '') = '';

	if (qt_registro_w	> 0) then
		update	PLS_REGRA_PORTADOR_MENS
		set	IE_PORTADOR_EXCLUSIVO	= 'S',
			IE_GERAR_COBR_ESCRIT	= 'S',
			IE_DESTACAR_REAJUSTE	= 'N'
		where	coalesce(IE_PORTADOR_EXCLUSIVO::text, '') = '';
	end if;
end if;

/*aaschlote - Ajustar os itens da analise de adesão para os perfis com a função OPS - Análise de Adesão para Beneficiários*/

if (dt_versao_atual_cliente_w < to_date('02/04/2013','dd/mm/yyyy')) then
	CALL pls_ajust_itens_analise_adesao(nm_usuario_p);
end if;

--bshadlich - OS 606365 - 11/07/2013 - Transfere o convênio de atendimento e o motivo de cancelamento da agenda da função OPS - Gestão de operadoras para a função OPS - Cadastro de regras
if (dt_versao_atual_cliente_w < to_date('11/07/2013','dd/mm/yyyy')) then
	CALL pls_baca_motivo_cancel_agenda();
end if;

if (dt_versao_atual_cliente_w < to_date('12/08/2013','dd/mm/yyyy')) then
	CALL baca_declaracao_proposta();
end if;

if (dt_versao_atual_cliente_w < to_date('19/08/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_intercambio
	where	coalesce(ie_tipo_repasse::text, '') = '';

	if (qt_registro_w	> 0) then
		CALL pls_ajustar_tipo_repasse_inter();
	end if;
end if;

/*aaschlote 28/08/2013 OS 631364 - Ajustar itens do cadastros de regras*/

if (dt_versao_atual_cliente_w < to_date('28/08/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_cadastro_regra_item
	where	nr_sequencia	= 567
	and	nr_seq_modulo	= 1017;

	if (qt_registro_w > 0)then
		update	PLS_CADASTRO_REGRA_ITEM
		set	NR_SEQ_SUPERIOR	= 631,
			NR_SEQ_MODULO	= 1032,
			ds_item		= 'Materiais envio de guias XML'
		where	nr_sequencia	= 567;
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	pls_cadastro_regra_item
	where	nr_sequencia	= 32
	and	nr_seq_superior	= 111;

	if (qt_registro_w > 0)then
		update	PLS_CADASTRO_REGRA_ITEM
		set	NR_SEQ_SUPERIOR	= 631,
			DS_ITEM		= 'Procedimentos'
		where	nr_sequencia	= 32;
	end if;
end if;

/* Lepinski OS 639412 - Ajustar valor para campo novo*/

if (dt_versao_atual_cliente_w < to_date('02/10/2013','dd/mm/yyyy')) then
	update	pls_lote_mensalidade_ted
	set	ie_geracao_lote	= 'Mensalidade'
	where	coalesce(ie_geracao_lote::text, '') = '';
end if;

/*aaschlote 10/10/2013 - OS - 638023 - Ajustar valor para campo novo*/

if (dt_versao_atual_cliente_w < to_date('10/10/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_via_adic_cart_lote
	where	coalesce(ie_processo::text, '') = '';

	if (qt_registro_w	> 0) then
		update	pls_via_adic_cart_lote
		set	ie_processo	= 'M'
		where	coalesce(ie_processo::text, '') = '';
	end if;
end if;

/*aaschlote 23/10/2013 - OS - 633640 - Ajustar valor para campo novo*/

if (dt_versao_atual_cliente_w < to_date('23/10/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	PLS_REGRA_COPARTICIPACAO
	where	coalesce(IE_INCIDENCIA_VALOR_MAXIMO::text, '') = '';

	if (qt_registro_w	> 0) then
		update	PLS_REGRA_COPARTICIPACAO
		set	IE_INCIDENCIA_VALOR_MAXIMO	= 'U'
		where	coalesce(IE_INCIDENCIA_VALOR_MAXIMO::text, '') = '';
	end if;
end if;

/*aaschlote  28/10/2013 - Ajustar o o valor do dominio 6004*/

if (dt_versao_atual_cliente_w < to_date('28/10/2013','dd/mm/yyyy')) then
	update	VALOR_DOMINIO
	set	DS_VALOR_DOMINIO	= 'Extrato mensalidade'
	where	cd_dominio		= 6004
	and	VL_DOMINIO		= 'EX';
end if;

/*ekjunior	01/11/2013 -  OS 622744 - Ajustar campo QT_REGISTROS_LOTE na tabela PLS_LOTE_RETORNO_SIB*/

if (dt_versao_atual_cliente_w < to_date('01/11/2013','dd/mm/yyyy')) then
	select count(1)
	into STRICT	qt_registro_w
	from	pls_lote_retorno_sib
	where	coalesce(qt_registros_lote::text, '') = '';

	if (qt_registro_w	> 0) then
		CALL pls_ajustar_reg_qt_lote_conf();
	end if;
end if;

/* Lepinski OS - 672733 - Ajustar valor para campo novo*/

if (dt_versao_atual_cliente_w < to_date('04/12/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_regra_coparticipacao
	where	coalesce(ie_forma_cobr_internacao::text, '') = '';

	if (qt_registro_w	> 0) then
		update	pls_regra_coparticipacao
		set	ie_forma_cobr_internacao = 'C'
		where	coalesce(ie_forma_cobr_internacao::text, '') = '';
	end if;
end if;

/*Lepinski - Ajuste no módulo do item */

if (dt_versao_atual_cliente_w < to_date('06/12/2013','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_cadastro_regra_item
	where	nr_sequencia	= 534;

	if (qt_registro_w > 0) then
		update	pls_cadastro_regra_item
		set	nr_seq_modulo 	= 1018
		where	nr_sequencia	= 534;
	end if;
end if;

/*aaschlote  - 06/01/2014 OS - 635507 */

if (dt_versao_atual_cliente_w < to_date('06/01/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	titulo_receber
	where	ie_origem_titulo	= '13'
	and	coalesce(nr_seq_pagador::text, '') = ''  LIMIT 1;

	if (qt_registro_w = 0) then
		CALL pls_ajustar_pagador_fat_titulo();
	end if;
end if;

/*Lepinski - Ajuste na situação do endereço adicional */

if (dt_versao_atual_cliente_w < to_date('19/02/2014','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	compl_pf_tel_adic
	where	coalesce(ie_situacao::text, '') = '';

	if (qt_registro_w > 0) then
		update	compl_pf_tel_adic
		set	ie_situacao	= 'A'
		where	coalesce(ie_situacao::text, '') = '';
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'COMPL_PF_TEL_ADIC'
	and	nullable 	= 'Y'
	and	column_name	= 'IE_SITUACAO';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('rlepinski', 'alter table COMPL_PF_TEL_ADIC modify IE_SITUACAO not null');
	end if;
end if;

/*Lepinski - Ajustar IE_TIPO_COMPLEMENTO da pessoa física */

if (dt_versao_atual_cliente_w < to_date('19/02/2014','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	compl_pessoa_fisica
	where	ie_tipo_complemento = 7
	and	(nr_seq_tipo_compl_adic IS NOT NULL AND nr_seq_tipo_compl_adic::text <> '');

	if (qt_registro_w > 0) then
		begin
		update	compl_pessoa_fisica
		set	ie_tipo_complemento	= 9
		where	ie_tipo_complemento	= 7
		and	(nr_seq_tipo_compl_adic IS NOT NULL AND nr_seq_tipo_compl_adic::text <> '');
		exception
		when others then
			null;
		end;
	end if;
end if;

/*aaschlote 26/02/2014 - OS - 697134 - Ajustar valor para campo novo*/

if (dt_versao_atual_cliente_w < to_date('26/02/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	PLS_NOTIFICACAO_REGRA
	where	coalesce(IE_DIAS_ACUMULATIVOS::text, '') = '';

	if (qt_registro_w	> 0) then
		update	PLS_NOTIFICACAO_REGRA
		set	IE_DIAS_ACUMULATIVOS	= 'N'
		where	coalesce(IE_DIAS_ACUMULATIVOS::text, '') = '';
	end if;
end if;

/* lepinski - Ajustar valor cadastro de regras */

if (dt_versao_atual_cliente_w < to_date('26/02/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_cadastro_regra_item;

	if (qt_registro_w	> 0) then
		update	pls_cadastro_regra_item
		set	ie_liberacao_perfil	= 'N'
		where	nr_sequencia in (175,570,159,3,500,85,83,39,38,21,18,9,7,118,111,109,1,575,631,561);

		select	count(1)
		into STRICT	qt_registro_w
		from	pls_cad_regra_item_perfil a
		where	exists (SELECT	1
				from	pls_cadastro_regra_item x
				where	x.nr_sequencia = a.nr_seq_item
				and	x.ie_liberacao_perfil = 'N');

		if (qt_registro_w > 0) then
			delete	from	pls_cad_regra_item_perfil a
			where	exists (SELECT	1
					from	pls_cadastro_regra_item x
					where	x.nr_sequencia = a.nr_seq_item
					and	x.ie_liberacao_perfil = 'N');
		end if;
	end if;
end if;

/*aaschlote 11/03/2014 - OS - 712265 - Ajustar valor para campo novo*/

if (dt_versao_atual_cliente_w < to_date('11/03/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	PLS_REGRA_COPARTICIPACAO
	where	coalesce(IE_CONSIDERA_OUTRA_OCOR_REGRA::text, '') = '';

	if (qt_registro_w	> 0) then
		update	PLS_REGRA_COPARTICIPACAO
		set	IE_CONSIDERA_OUTRA_OCOR_REGRA	= 'N'
		where	coalesce(IE_CONSIDERA_OUTRA_OCOR_REGRA::text, '') = '';
	end if;
end if;

/*lepinski - OS - 649149 - Ajustar palavra */

if (dt_versao_atual_cliente_w < to_date('12/03/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_dossie_item
	where	nr_sequencia = 16
	and	ds_item = 'Co-participação';

	if (qt_registro_w	> 0) then
		update	pls_dossie_item
		set	ds_item	= 'Coparticipação'
		where	nr_sequencia = 16;
	end if;
end if;

/*lepinski - Ajustar NR_CONTRATO */

if (dt_versao_atual_cliente_w < to_date('18/04/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_contrato_grupo
	where	coalesce(nr_contrato::text, '') = ''
	and	(nr_seq_contrato IS NOT NULL AND nr_seq_contrato::text <> '');

	if (qt_registro_w	> 0) then
		update	pls_contrato_grupo
		set	nr_contrato	= pls_obter_dados_contrato(nr_seq_contrato,'N')
		where	coalesce(nr_contrato::text, '') = ''
		and	(nr_seq_contrato IS NOT NULL AND nr_seq_contrato::text <> '');
	end if;
end if;

if (dt_versao_atual_cliente_w < to_date('16/05/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name	= 'LIBERAR_REGRA_APROPRIACAO';

	if (coalesce(qt_registro_w,0)	> 0) then
		CALL Exec_sql_Dinamico('Lepinski', 'drop procedure LIBERAR_REGRA_APROPRIACAO'
);
	end if;
end if;

if (dt_versao_atual_cliente_w < to_date('19/06/2014','dd/mm/yyyy')) then
	CALL baca_ajustar_dominio_1720();
end if;

/*aaschlote 04/08/2014 - OS - 684754 - Ajustar valor para campo novo*/

if (dt_versao_atual_cliente_w < to_date('04/08/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	PLS_PARAMETROS
	where	coalesce(IE_GERAR_COD_TIT::text, '') = '';

	if (qt_registro_w	> 0) then
		update	PLS_PARAMETROS
		set	IE_GERAR_COD_TIT	= 'S'
		where	coalesce(IE_GERAR_COD_TIT::text, '') = '';
	end if;
end if;

/*aaschlote 18/08/2014 - Ajustar valor para campo novo*/

if (dt_versao_atual_cliente_w < to_date('18/08/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	PLS_AME_REGRA_GERACAO
	where	coalesce(IE_ORIGEM_CNPJ::text, '') = '';

	if (qt_registro_w	> 0) then
		update	PLS_AME_REGRA_GERACAO
		set	IE_ORIGEM_CNPJ	= 'E'
		where	coalesce(IE_ORIGEM_CNPJ::text, '') = '';
	end if;
end if;

/*aaschlote 18/08/2014 - Ajustar valor para campo novo*/

if (dt_versao_atual_cliente_w < to_date('01/10/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	PLS_AME_REGRA_GERACAO
	where	coalesce(IE_GERAR_SEM_TITULO::text, '') = '';

	if (qt_registro_w	> 0) then
		update	PLS_AME_REGRA_GERACAO
		set	IE_GERAR_SEM_TITULO	= 'N'
		where	coalesce(IE_GERAR_SEM_TITULO::text, '') = '';
	end if;
end if;

/*aaschlote 07/10/2014 - Ajustar valor para campo novo*/

if (dt_versao_atual_cliente_w < to_date('07/10/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	PLS_DESC_EMPRESA
	where	coalesce(IE_GERAR_NOTA_FISCAL::text, '') = '';

	if (qt_registro_w	> 0) then
		update	PLS_DESC_EMPRESA
		set	IE_GERAR_NOTA_FISCAL	= 'N'
		where	coalesce(IE_GERAR_NOTA_FISCAL::text, '') = '';
	end if;
end if;

/* Lepinski - Ajustar valor para campo novo */

if (dt_versao_atual_cliente_w < to_date('15/12/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_regra_coparticipacao
	where	coalesce(ie_incidencia_proc_mat::text, '') = '';

	if (qt_registro_w	> 0) then
		update	pls_regra_coparticipacao
		set	ie_incidencia_proc_mat	= 'P'
		where	coalesce(ie_incidencia_proc_mat::text, '') = '';
	end if;
end if;

/* Lepinski - Ajustar valor para campo novo */

if (dt_versao_atual_cliente_w < to_date('02/02/2015','dd/mm/yyyy')) then
	CALL pls_baca_status_mov_portal();
end if;

/* acstapassoli - Ajustar datas de referencia */

if (dt_versao_atual_cliente_w < to_date('13/02/2015','dd/mm/yyyy')) then
	CALL pls_baca_atu_dt_refer_lanc();
end if;

/* sideker - Ajustar valor para campo novo */

if (dt_versao_atual_cliente_w < to_date('02/03/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_lote_mens_ir
	where	coalesce(ie_tipo_lote::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_lote_mens_ir
		set	ie_tipo_lote = 'PF'
		where	coalesce(ie_tipo_lote::text, '') = '';
	end if;
end if;

/* Lepinski - Ajustar valor para campos novos */

if (dt_versao_atual_cliente_w < to_date('16/03/2015','dd/mm/yyyy')) then
	CALL pls_baca_perf_copartic();
	CALL pls_baca_perf_pos_estab();
	CALL pls_baca_vl_nao_coberto(cd_estabelecimento_w);
end if;

/* Lepinski - Ajustar valor para campo novo */

if (dt_versao_atual_cliente_w < to_date('26/03/2015','dd/mm/yyyy')) then
	CALL pls_baca_processo_notif();
end if;

/* Brown - Dropar procedures não utilizadas que executam a procedure pls_gerar_valor_sca_segurado */

if (dt_versao_atual_cliente_w < to_date('10/04/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name	= 'PLS_LIBERAR_SCA_BNU';

	if (coalesce(qt_registro_w,0)	> 0) then
		CALL Exec_sql_Dinamico('Brown', 'drop procedure PLS_LIBERAR_SCA_BNU'
);
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name	= 'PLS_IMP_SCA_TAB_PRECO_ADVANCE';

	if (coalesce(qt_registro_w,0)	> 0) then
		CALL Exec_sql_Dinamico('Brown', 'drop procedure PLS_IMP_SCA_TAB_PRECO_ADVANCE'
);
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name	= 'PLS_IMP_SCA_TAB_PRECO_ASES';

	if (coalesce(qt_registro_w,0)	> 0) then
		CALL Exec_sql_Dinamico('Brown', 'drop procedure PLS_IMP_SCA_TAB_PRECO_ASES'
);
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name	= 'PLS_USUARIO_AGUARDANDO_ACAO';

	if (coalesce(qt_registro_w,0)	> 0) then
		CALL Exec_sql_Dinamico('Brown', 'drop procedure PLS_USUARIO_AGUARDANDO_ACAO'
);
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name	= 'PLS_USUARIO_AGUARDANDO';

	if (coalesce(qt_registro_w,0)	> 0) then
		CALL Exec_sql_Dinamico('Brown', 'drop procedure PLS_USUARIO_AGUARDANDO'
);
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name	= 'PLS_CONSIS_GUIA';

	if (coalesce(qt_registro_w,0)	> 0) then
		CALL Exec_sql_Dinamico('Brown', 'drop procedure PLS_CONSIS_GUIA'
);
	end if;
end if;

/* Lepinski - Ajuste ortográfico */

if (dt_versao_atual_cliente_w < to_date('13/04/2015','dd/mm/yyyy')) then
	update	sib_conferencia_diverg
	set	ds_divergencia	= 'Motivo de cancelamento inválido'
	where	nr_sequencia	= 18;
end if;

/* Lepinski - Ajuste campo novo */

if (dt_versao_atual_cliente_w < to_date('17/04/2015','dd/mm/yyyy')) then
	update	pls_indicacao_venda
	set	nr_seq_segurado_indicacao = nr_seq_segurado
	where	(nr_seq_segurado IS NOT NULL AND nr_seq_segurado::text <> '');

	update	pls_indicacao_venda
	set	nr_seq_segurado  = NULL
	where	(nr_seq_segurado IS NOT NULL AND nr_seq_segurado::text <> '');
end if;

/* Lepinski - Ajuste na descrição */

if (dt_versao_atual_cliente_w < to_date('20/04/2015','dd/mm/yyyy')) then
	update	pls_inconsistencia_inc_seg
	set	ds_inconsistencia =	'Data de nascimento não informada ou inválida',
		ds_observacao	  =	'Será gerada inconsistência quando:'||chr(13)||chr(13)||
					'- Data de nascimento for nula;'||chr(13)||
					'- Data de nascimento menor que 01/01/1890.'
	where	nr_sequencia	= 8;
end if;

/* Lepinski - Ajuste em campo novo */

if (dt_versao_atual_cliente_w < to_date('23/04/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_regra_doc_proposta
	where	coalesce(ie_tipo_processo::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_regra_doc_proposta
		set	ie_tipo_processo = 'A'
		where	coalesce(ie_tipo_processo::text, '') = '';
	end if;
end if;

/* Lepinski - Excluir inconsistências criadas pelo suporte */

if (dt_versao_atual_cliente_w < to_date('29/04/2015','dd/mm/yyyy')) then
	delete	from	pls_cad_inc_pes_log_alt
	where	cd_inconsistencia in (13,14);

	delete	from	pls_lote_pes_inc_espec a
	where	exists (SELECT	1
			from	pls_cad_inconsist_pessoa x
			where	x.nr_sequencia = a.cd_inconsistencia
			and	x.cd_inconsistencia in (13,14));

	delete	from	pls_cad_inconsist_pessoa
	where	cd_inconsistencia in (13,14);

	update	pls_cad_inconsist_pessoa
	set	cd_inconsistencia = 13
	where	cd_inconsistencia = 15;

	select	count(1)
	into STRICT	qt_registro_w
	from	pls_cad_inconsist_pessoa
	where	cd_inconsistencia = 13;

	if (qt_registro_w = 0) then
		insert	into	pls_cad_inconsist_pessoa(	cd_inconsistencia,ds_inconsistencia,ds_acao_usuario,ie_tipo_pessoa,ie_estipulante,
			ie_beneficiario,ie_pagador,ie_prestador,ie_pessoa_fisica,ie_operadora,ie_menor_idade,
			ie_situacao,qt_dias_revisao,nr_sequencia,cd_estabelecimento,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec)
		values (13,'CNS não informado','','PF','N','S','N','N','S','N','S','A',null,48,1,
			to_date('28/04/2015 08:39:48','dd/mm/yyyy hh24:mi:ss'),'gclasen',to_date('24/04/2015 14:29:19','dd/mm/yyyy hh24:mi:ss'),'rlepinski');
	end if;
end if;

/* Lepinski - Gerar taxa de pós estab */

if (dt_versao_atual_cliente_w < to_date('30/04/2015','dd/mm/yyyy')) then
	CALL pls_baca_gerar_tx_pos_estab();
end if;


/* Lepinski - Valor padrão para novo campo */

if (dt_versao_atual_cliente_w < to_date('19/05/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_inconsistencia_inc_seg
	where	coalesce(ie_tipo_contrato::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_inconsistencia_inc_seg
		set	ie_tipo_contrato = 'A'
		where	coalesce(ie_tipo_contrato::text, '') = '';
	end if;
end if;

/* Lepinski - Valor padrão para novo campo */

if (dt_versao_atual_cliente_w < to_date('20/05/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_web_param_geral
	where	coalesce(ie_juros_multa_barras_bloq::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_web_param_geral
		set	ie_juros_multa_barras_bloq = 'R'
		where	coalesce(ie_juros_multa_barras_bloq::text, '') = '';
	end if;
end if;

/* Lepinski - Ajustar descrição do domínio */

if (dt_versao_atual_cliente_w < to_date('21/05/2015','dd/mm/yyyy')) then
	update	valor_dominio
	set	cd_exp_valor_dominio = 671326,
		ds_valor_dominio = 'Controle de coparticipações e pós-estabelecidos'
	where	cd_dominio = 7346
	and	vl_dominio = '2';
end if;

/* Lepinski - Ajustar descrição de inconsistência */

if (dt_versao_atual_cliente_w < to_date('22/05/2015','dd/mm/yyyy')) then
	update	pls_inconsistencia_inc_seg
	set	ds_inconsistencia = 'Data de admissão do titular não informada ou inválida'
	where	cd_inconsistencia = 53;
end if;

/* Brown - Ajustar campo valor de coparticipação. */

if (dt_versao_atual_cliente_w < to_date('01/06/2015','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('ebcabral', 'alter table PLS_AR_COPARTICIPACAO modify VL_COPARTICIPACAO number(15,2)');
end if;

/* Lepinski - Ajustar campo novo */

if (dt_versao_atual_cliente_w < to_date('30/06/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_grupo_contrato
	where	coalesce(ie_tipo_relacionamento::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_grupo_contrato
		set	ie_tipo_relacionamento = '1'
		where	coalesce(ie_tipo_relacionamento::text, '') = '';
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_GRUPO_CONTRATO'
	and	nullable 	= 'Y'
	and	column_name	= 'IE_TIPO_RELACIONAMENTO';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('rlepinski', 'alter table PLS_GRUPO_CONTRATO modify IE_TIPO_RELACIONAMENTO not null');
	end if;
end if;

/* Lepinski - Apagar item do dossiê  - OS 856497 */

if (dt_versao_atual_cliente_w < to_date('09/07/2015','dd/mm/yyyy')) then
	delete	from	pls_dossie_item_perfil
	where	nr_seq_item	= 40;

	delete	from	pls_dossie_item
	where	nr_sequencia	= 40;
end if;

/* Lepinski - Ajustar campo novo */

if (dt_versao_atual_cliente_w < to_date('23/07/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_lote_mensalidade
	where	coalesce(ie_visualizar_portal::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_lote_mensalidade
		set	ie_visualizar_portal = 'S'
		where	coalesce(ie_visualizar_portal::text, '') = '';
	end if;
end if;

/* Lepinski - Ajustar descrição de inconsistência */

if (dt_versao_atual_cliente_w < to_date('20/08/2015','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_inconsistencia_inc_seg
	where	nr_sequencia	= 14;

	if (qt_registro_w > 0) then
		update	pls_inconsistencia_inc_seg
		set	ds_inconsistencia = 'CPF não informado (Titular e dependente acima de 16 anos)',
			ds_observacao = 'Instrução Normativa nº 1548 da Receita Federal, prevê a obrigatoriedade do CPF para os dependentes a partir dos 16 anos na DMED e declaração de Imposto de Renda.'
		where	cd_inconsistencia = 14;
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	pls_inconsistencia_inc_seg
	where	nr_sequencia	= 33;

	if (qt_registro_w > 0) then
		update	pls_inconsistencia_inc_seg
		set	ds_inconsistencia = 'CPF não informado (Dependente menor de 16 anos)'
		where	cd_inconsistencia = 33;
	end if;
end if;

/* Stefanie - inserir os campos que serão consistidos quanto à duplicidade na solicitação de lead */

if (dt_versao_atual_cliente_w < to_date('24/08/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_cad_duplicidade_lead;

	if (qt_registro_w = 0) then
		insert into pls_cad_duplicidade_lead -- Data de nascimento
			(	nr_sequencia, ie_situacao, cd_exp_consistencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec)
		values (	nextval('pls_cad_duplicidade_lead_seq'), 'A', 303344, clock_timestamp(), 'sideker', clock_timestamp(), 'sideker');

		insert into pls_cad_duplicidade_lead -- Telefone
			(	nr_sequencia, ie_situacao, cd_exp_consistencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec)
		values (	nextval('pls_cad_duplicidade_lead_seq'), 'A', 299149, clock_timestamp(), 'sideker', clock_timestamp(), 'sideker');

		insert into pls_cad_duplicidade_lead -- E-mail
			(	nr_sequencia, ie_situacao, cd_exp_consistencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec)
		values (	nextval('pls_cad_duplicidade_lead_seq'), 'A', 289120, clock_timestamp(), 'sideker', clock_timestamp(), 'sideker');
	end if;
end if;

/* Stefanie - inserir o campo CNPJ que será consistido quanto à duplicidade na solicitação de lead */

if (dt_versao_atual_cliente_w < to_date('30/09/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_cad_duplicidade_lead;

	if (qt_registro_w = 3) then
		insert into pls_cad_duplicidade_lead -- CNPJ
			(	nr_sequencia, ie_situacao, cd_exp_consistencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec)
		values (	nextval('pls_cad_duplicidade_lead_seq'), 'A', 285188, clock_timestamp(), 'sideker', clock_timestamp(), 'sideker');
	end if;
end if;

/* Stefanie - inserir valor no campo IE_UTILIZACAO das regras de inconsistência da proposta de adesão/portal */

if (dt_versao_atual_cliente_w < to_date('16/10/2015','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_inconsistencia_inc_seg;

	if (qt_registro_w > 0) then
		update	pls_inconsistencia_inc_seg
		set	ie_utilizacao = 'A'
		where	cd_inconsistencia in (10,11,22)
		and	coalesce(ie_utilizacao::text, '') = '';

		update	pls_inconsistencia_inc_seg
		set	ie_utilizacao = 'P'
		where	coalesce(ie_utilizacao::text, '') = '';
	end if;
end if;

/* Stefanie - ajustar o status dos lotes de comissão - OS 999550 */

if (dt_versao_atual_cliente_w < to_date('09/03/2016','dd/mm/yyyy')) then
	CALL pls_baca_status_lote_comissao();
end if;

/* Lepinski - Ajustar valor padrão para campo novo */

if (dt_versao_atual_cliente_w < to_date('22/03/2016','dd/mm/yyyy')) then
	update	pls_plano
	set	ie_consistir_idade_sca_mens = 'S'
	where	ie_tipo_operacao = 'A' --SCA
	and	coalesce(ie_consistir_idade_sca_mens::text, '') = '';
end if;

/* sideker - OS 1032812 */

if (dt_versao_atual_cliente_w < to_date('30/03/2016','dd/mm/yyyy')) then
	ie_cooperativa_w := pls_obter_se_cooperativa(null);

	if (ie_cooperativa_w = 'N') then
		CALL pls_ajusta_cd_usuario_plano_op();
	end if;
end if;

/* Lepinski - Ajustar valor padrão para campo novo */

if (dt_versao_atual_cliente_w < to_date('02/05/2016','dd/mm/yyyy')) then
	update	pls_regra_devolucao_mens
	set	ie_tipo_pagador	= 'A'
	where	coalesce(ie_tipo_pagador::text, '') = '';
end if;

/* sideker - OS 1081388 - Alimentar campo com o número do título a receber vinculado ao repasse */

if (dt_versao_atual_cliente_w < to_date('16/05/2016','dd/mm/yyyy')) then
	update	pls_repasse_mens	a
	set	nr_titulo_receber = (	SELECT	max(x.nr_titulo)
					from	titulo_receber	x
					where	x.nr_seq_mensalidade = a.nr_seq_mensalidade)
	where	coalesce(a.nr_titulo_receber::text, '') = '';
end if;

/* sideker - OS 1092576 - Ajustar valor padrão para campo novo - Situação ativa */

if (dt_versao_atual_cliente_w < to_date('17/05/2016','dd/mm/yyyy')) then
	update	pls_vendedor_regra
	set	ie_situacao = 'A'
	where	coalesce(ie_situacao::text, '') = '';
end if;

/* sideker - OS 1040776 - Ajustar valor padrão para campo novo - Considerar carências */

if (dt_versao_atual_cliente_w < to_date('19/05/2016','dd/mm/yyyy')) then
	update	pls_vendedor_regra
	set	ie_considerar_carencias = '0'
	where	coalesce(ie_considerar_carencias::text, '') = '';
end if;

/* lepinski - OS 1093599 - Ajustar valor padrão para campo novo */

if (dt_versao_atual_cliente_w < to_date('02/06/2016','dd/mm/yyyy')) then
	update	tipo_recebimento
	set	ie_apropriar_juro_multa_mens = '0'
	where	coalesce(ie_apropriar_juro_multa_mens::text, '') = '';
end if;

--Lepinski - Excluir item
if (dt_versao_atual_cliente_w < to_date('19/08/2016','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	pls_cadastro_regra_item
	where	nr_sequencia	= 652;

	if (qt_registro_w > 0) then
		delete	from pls_cad_regra_item_perfil
		where	nr_seq_item	= 652;

		delete	from pls_cadastro_regra_item
		where	nr_sequencia	= 652;
	end if;
end if;

/* lepinski - OS 1109497 - Ajustar valor padrão para campo novo */

if (dt_versao_atual_cliente_w < to_date('07/09/2016','dd/mm/yyyy')) then
	update	pls_plano
	set	ie_permite_reajuste = 'S'
	where	coalesce(ie_permite_reajuste::text, '') = '';
end if;

/* lepinski - OS 1155350 - Ajustar valor padrão para campo novo */

if (dt_versao_atual_cliente_w < to_date('03/10/2016','dd/mm/yyyy')) then
	update	pls_regra_segurado_cart
	set	ie_renovacao = 'N'
	where	coalesce(ie_renovacao::text, '') = '';
end if;

/* lepinski - OS 1259663 - Ajustar valor padrão para campo novo */

if (dt_versao_atual_cliente_w < to_date('21/10/2016','dd/mm/yyyy')) then
	update	pls_processo_adic_versao
	set	ie_consiste_mensalidade = 'N'
	where	coalesce(ie_consiste_mensalidade::text, '') = '';
end if;

/* lepinski - OS 1259663 - Ajustar valor padrão para campo novo */

if (dt_versao_atual_cliente_w < to_date('02/11/2016','dd/mm/yyyy')) then
	update	pls_contrato_grupo
	set	ie_reajuste_grupo = 'S'
	where	coalesce(ie_reajuste_grupo::text, '') = '';
end if;

/* Ajustar valor domínio */

if (dt_versao_atual_cliente_w < to_date('02/01/2017','dd/mm/yyyy')) then
	update	valor_dominio
	set	vl_dominio = '95'
	where	cd_dominio = 7854
	and	vl_dominio = '98'
	and	not exists (	SELECT	1
				from	valor_dominio x
				where	x.cd_dominio	= 7854
				and	x.vl_dominio	= '95');

	update	valor_dominio
	set	cd_exp_valor_dominio = 756292,
		ds_valor_dominio = 'Consistir regra de valor mínimo'
	where	cd_dominio = 7854
	and	vl_dominio = '9';
end if;

/* Ajustar valor domínio */

if (dt_versao_atual_cliente_w < to_date('27/06/2017','dd/mm/yyyy')) then
	update	valor_dominio
	set	cd_exp_valor_dominio = 784134,
		ds_valor_dominio = 'Reinclusão'
	where	cd_dominio = 8352
	and	vl_dominio = '5';
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ajustar_base_adm ( nm_usuario_p text) FROM PUBLIC;

