-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_regra_lib_tit_pagar (nr_seq_nota_fiscal_p bigint, vl_titulo_p bigint, cd_cgc_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_regra_p INOUT bigint, ie_liberar_p INOUT text, ds_resultado_p INOUT text, dt_emissao_p timestamp, nr_seq_proj_rec_p bigint, ie_tipo_titulo_p text, nr_seq_classe_p bigint, ie_origem_titulo_p text) AS $body$
DECLARE


ds_resultado_w		varchar(1);
ie_tipo_pessoa_w	varchar(1);
qt_regra_w		bigint;
nr_seq_regra_w		bigint;
cd_tipo_pessoa_w	smallint;
cd_operacao_nf_w	bigint;
ie_liberar_w		varchar(1);
vl_nota_fiscal_w	double precision;
nr_ordem_compra_w	bigint;

c01 CURSOR FOR
SELECT	nr_sequencia,
	ie_liberar
from	(SELECT	a.nr_sequencia,
		a.ie_liberar,
		(select	coalesce(max(2),1)
		from	regra_lib_tit_perfil x
		where	x.nr_seq_regra	= a.nr_sequencia) ie_perfil,
		(select	coalesce(max(2),1)
		from	regra_lib_tit_usuario x
		where	x.nr_seq_regra	= a.nr_sequencia) ie_usuario,
		a.cd_operacao_nf,
		a.cd_tipo_pj,
		a.ie_tipo_pessoa,
		a.cd_cgc,
		a.ie_tipo_titulo,
		a.nr_seq_classe,
		a.ie_origem_titulo,
		a.ie_exige_nota_fiscal
	from	regra_lib_tit_pagar a
	where (coalesce(a.ie_ordem_compra, 'N') = 'N' or (nr_ordem_compra_w IS NOT NULL AND nr_ordem_compra_w::text <> ''))
	and (coalesce(a.ie_projeto_recurso,'N') = 'N' or (nr_seq_proj_rec_p IS NOT NULL AND nr_seq_proj_rec_p::text <> ''))
	and	dt_emissao_p	between trunc(coalesce(a.dt_inicio_vigencia,dt_emissao_p)) and fim_dia(coalesce(a.dt_fim_vigencia,dt_emissao_p))
	and	a.cd_estabelecimento				= cd_estabelecimento_p
	and	((coalesce(a.ie_valor_nf,'N') = 'N' and vl_titulo_p between coalesce(a.vl_minimo,vl_titulo_p) and coalesce(a.vl_maximo,vl_titulo_p)) or (a.ie_valor_nf = 'S' and coalesce(vl_nota_fiscal_w,vl_titulo_p) between coalesce(a.vl_minimo,coalesce(vl_nota_fiscal_w,vl_titulo_p)) and coalesce(a.vl_maximo,coalesce(vl_nota_fiscal_w,vl_titulo_p))))
	and (a.ie_tipo_pessoa = 'A' or a.ie_tipo_pessoa 		= ie_tipo_pessoa_w)
	and	coalesce(a.cd_operacao_nf, coalesce(cd_operacao_nf_w, -1))	= coalesce(cd_operacao_nf_w, -1)
	and	coalesce(coalesce(a.cd_tipo_pj,cd_tipo_pessoa_w),0)		= coalesce(cd_tipo_pessoa_w,0)
	and	coalesce(coalesce(a.cd_cgc,cd_cgc_p),0)				= coalesce(cd_cgc_p,0)
	and	coalesce(coalesce(a.ie_tipo_titulo, ie_tipo_titulo_p), 0) = coalesce(ie_tipo_titulo_p,0)
	and	coalesce(coalesce(a.nr_seq_classe, nr_seq_classe_p), 0) = coalesce(nr_seq_classe_p, 0)
	and	coalesce(coalesce(a.ie_origem_titulo, ie_origem_titulo_p), 0) = coalesce(ie_origem_titulo_p, 0)
	and	( (coalesce(a.ie_exige_nota_fiscal,'N') = 'N') or
	  ( (coalesce(a.ie_exige_nota_fiscal,'N') = 'S') and (nr_seq_nota_fiscal_p IS NOT NULL AND nr_seq_nota_fiscal_p::text <> '') ) 
		)
	) alias53
order by	coalesce(cd_operacao_nf,0), 
	coalesce(cd_tipo_pj,0),
	coalesce(ie_tipo_pessoa,0),
	coalesce(cd_cgc,0),
	coalesce(ie_tipo_titulo,0),
	coalesce(nr_seq_classe,0),
	coalesce(ie_origem_titulo,0),
	coalesce(ie_exige_nota_fiscal,0),
	ie_perfil,
	ie_usuario;


BEGIN

if (coalesce(cd_cgc_p::text, '') = '') then
	ie_tipo_pessoa_w	:= 'F';
else
	ie_tipo_pessoa_w	:= 'J';

	select	max(a.cd_tipo_pessoa)
	into STRICT	cd_tipo_pessoa_w
	from	pessoa_juridica a
	where	a.cd_cgc	= cd_cgc_p;

end if;

if (nr_seq_nota_fiscal_p IS NOT NULL AND nr_seq_nota_fiscal_p::text <> '') then

	select	max(cd_operacao_nf),
		max(vl_total_nota),
		max(nr_ordem_compra)
	into STRICT	cd_operacao_nf_w,
		vl_nota_fiscal_w,
		nr_ordem_compra_w
	from	nota_fiscal	
	where	nr_sequencia	= nr_seq_nota_fiscal_p;

end if;

/* verifica se existe regra para o tipo de pessoa do titulo */

select	count(*)
into STRICT	qt_regra_w
from	regra_lib_tit_pagar a
where	dt_emissao_p	between trunc(coalesce(a.dt_inicio_vigencia,clock_timestamp())) and fim_dia(coalesce(a.dt_fim_vigencia,clock_timestamp()))
and	a.cd_estabelecimento	= cd_estabelecimento_p
and (a.ie_tipo_pessoa = 'A' or a.ie_tipo_pessoa = ie_tipo_pessoa_w);

if (qt_regra_w	> 0) then

	open c01;
	loop
	fetch c01 into
		nr_seq_regra_w,
		ie_liberar_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	
	end loop;
	close c01;

	if (coalesce(nr_seq_regra_w::text, '') = '') then
		ds_resultado_w	:= 'N';
	else
		select	count(*)
		into STRICT	qt_regra_w
		from	regra_lib_tit_usuario a
		where	a.nr_seq_regra	= nr_seq_regra_w;

		/* verifica se o usuario tem permissao para liberar o titulo */

		if (qt_regra_w	> 0) then

			select	coalesce(max('S'),'N')
			into STRICT	ds_resultado_w
			from	regra_lib_tit_usuario a
			where	a.nr_seq_regra		= nr_seq_regra_w
			and	a.nm_usuario_lib	= nm_usuario_p;
		else
			ds_resultado_w	:= 'S';
		end if;

		if (ds_resultado_w = 'S') then

			select	count(*)
			into STRICT	qt_regra_w
			from	regra_lib_tit_perfil a
			where	a.nr_seq_regra	= nr_seq_regra_w;

			/* verifica se o perfil tem permissao para liberar o titulo */

			if (qt_regra_w > 0) then

				select	coalesce(max('S'),'N')
				into STRICT	ds_resultado_w
				from	regra_lib_tit_perfil a
				where	a.nr_seq_regra		= nr_seq_regra_w
				and	a.cd_perfil		= obter_perfil_ativo;

			end if;
		end if;
	end if;

else
	ds_resultado_w	:= 'S';
end if;

nr_seq_regra_p	:= nr_seq_regra_w;
ie_liberar_p	:= ie_liberar_w;
ds_resultado_p	:= ds_resultado_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_regra_lib_tit_pagar (nr_seq_nota_fiscal_p bigint, vl_titulo_p bigint, cd_cgc_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_regra_p INOUT bigint, ie_liberar_p INOUT text, ds_resultado_p INOUT text, dt_emissao_p timestamp, nr_seq_proj_rec_p bigint, ie_tipo_titulo_p text, nr_seq_classe_p bigint, ie_origem_titulo_p text) FROM PUBLIC;

