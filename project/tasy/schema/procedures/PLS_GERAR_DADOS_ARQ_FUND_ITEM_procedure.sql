-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_dados_arq_fund_item ( nr_seq_lote_p pls_lote_arq_fundacao_txt.nr_sequencia%type, nr_seq_fatura_p pls_fatura.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[ ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_prestador_contratado_w	varchar(255);
cd_especialidade_med_w		pls_prestador_med_espec.cd_especialidade%type;
ds_especialidade_w		especialidade_medica.ds_especialidade%type;
nr_seq_tipo_prestador_w		pls_prestador.nr_seq_tipo_prestador%type;
cd_cid_w			pls_diagnostico_conta.cd_doenca%type;
cd_medico_prest_exec_w		pls_prestador.cd_pessoa_fisica%type;
ie_tipo_ptu_w			pls_tipo_prestador.ie_tipo_ptu%type;
nr_seq_conselho_w		pessoa_fisica.nr_seq_conselho%type;
cd_unimed_w			pls_congenere.cd_cooperativa%type;
cd_cbo_w			sus_cbo_pessoa_fisica.cd_cbo%type;
cd_ans_w			pls_outorgante.cd_ans%type;
nr_crm_w			medico.nr_crm%type;
uf_crm_w			medico.uf_crm%type;
nm_prestador_solicitante_w	varchar(30);
cd_cpf_cnpj_solicitante_w	varchar(14);
cd_cpf_cnpj_solicitante_aut_w	varchar(14);
cd_cpf_cnpj_executante_w	varchar(14);
nr_cpf_w			varchar(14);
ie_tipo_participacao_w		varchar(1);
ie_tipo_atendimento_w		varchar(2);
ie_tipo_acomodacao_w		varchar(2);
ie_nivel_hospital_w		varchar(5) := '0';
ds_tipo_prestador_w		varchar(2);
ie_motivo_saida_w		varchar(2);
cd_medico_solic_w		varchar(10);
cd_motivo_saida_w		varchar(2);
nr_matricula_w			varchar(10) := lpad('0',10,'0');
cd_sublocal_w			varchar(5) := lpad('0',5,'0');
ie_carater_internacao_w		varchar(1);
ie_tipo_internacao_w		varchar(1);
nr_lote_w			bigint;
ie_tipo_guia_w			pls_conta.ie_tipo_guia%type;
cd_unimed_cart_w		varchar(3);
cd_contra_cart_w		varchar(4);
cd_usuari_cart_w		varchar(16);
cd_depend_cart_w		varchar(2);
ie_tipo_ato_w			varchar(1);
ie_origem_protocolo_w		pls_protocolo_conta.ie_origem_protocolo%type;
dt_atendimento_referencia_w	pls_conta.dt_atendimento_referencia%type;
dt_entrada_w			pls_conta.dt_entrada%type;
dt_alta_w			pls_conta.dt_alta%type;
dt_autorizacao_w		varchar(4);
cgc_unimed_origem_w		pls_congenere.cd_cgc%type;
nr_seq_tipo_acom_guia_w		pls_guia_plano.nr_seq_tipo_acomodacao%type;
sg_conselho_prof_w		conselho_profissional.sg_conselho%type;
ie_tipo_acom_guia_w		pls_tipo_acomodacao.ie_tipo_acomodacao_ptu%type;
nr_seq_plano_w			pls_segurado.nr_seq_plano%type;
ie_status_w			smallint;
cont_item_w			integer := 0;
cd_guia_cd_guia_prestador_w	pls_conta.cd_guia%type;
cd_prest_a400_w			pls_prestador.cd_prest_a400%type;
cd_prestador_w			pls_prestador.cd_prestador%type;
cd_prestador_executante_w	pls_movto_arq_fundacao_txt.cd_prestador_executante%type;
nr_seq_congenere_w		pls_protocolo_conta.nr_seq_congenere%type;
nm_cooperativa_w		varchar(255);
nr_declaracao_obito_w		pls_diagnost_conta_obito.nr_declaracao_obito%type;
cd_cgc_congenere_w		varchar(14);
cd_despesa_w			varchar(1);
cd_tabela_w			varchar(2);
cd_medico_solicitante_w		pls_guia_plano.cd_medico_solicitante%type;
cid_obito_w			pls_diagnost_conta_obito.cd_doenca%type;
ie_tipo_acomodacao_conv_w	pls_tipo_acomodacao.ie_tipo_acomodacao_ptu%type;
ds_indicacao_clinica_w		varchar(100);
nr_declaracao_nasc_vivos_w	pls_diagnostico_nasc_vivo.nr_decl_nasc_vivo%type;
cd_senha_w			varchar(10);
cd_medico_executor_w		pls_conta.cd_medico_executor%type;
nr_seq_pagador_w		pls_fatura.nr_seq_pagador%type;
cd_carater_solic_w		varchar(1);
tx_adm_w			varchar(10);
vl_servico_w			varchar(13);
cd_pessoa_fisica_w		pls_prestador.cd_pessoa_fisica%type;
cd_cgc_w			pls_prestador.cd_cgc%type;
vl_servico_filme_w		varchar(15);
vl_servico_filme_number_w	double precision;
cd_cnes_w			pls_movto_arq_fundacao_txt.cd_cnes_exec%type;
ie_tipo_part_regra_w		pls_regra_tp_part_ptu_proc.ie_tipo_participacao%type;
ie_tipo_mat_tabela_w		integer;
ie_ato_cooperativo_w		varchar(1);
dt_alta_format_w		varchar(8);
dt_internacao_w			varchar(8);
nr_seq_clinica_w		pls_conta.nr_seq_clinica%type;
ie_regime_internacao_w		pls_conta.ie_regime_internacao%type;
nr_seq_prestador_w		pls_proc_participante.nr_seq_prestador%type;
ie_tipo_faturamento_w		pls_conta.ie_tipo_faturamento%type;
dt_atendimento_w		pls_conta.dt_atendimento%type;
nr_seq_prestador_pgto_w		pls_conta_medica_resumo.nr_seq_prestador_pgto%type;
qt_registros_w			integer;
nr_seq_lote_fat_w		pls_lote_arq_fundacao_txt.nr_seq_lote_fat%type;
qt_reg_int_w			integer;
cd_cgc_prestador_exec_w		pessoa_juridica.cd_cgc%type;
ds_servico_w			varchar(255);
ie_diaria_w			varchar(5) := 'N';
ie_gerar_fat_contab_w		pls_parametro_faturamento.ie_gerar_fat_contab%type;

c01 CURSOR(nr_seq_fatura_pc		pls_fatura.nr_sequencia%type) FOR
	SELECT	c.nr_sequencia,
		c.nr_seq_conta,
		coalesce(a.dt_atendimento,a.dt_emissao) dt_atendimento,
		a.ie_gestacao,
		a.ie_obito,
		a.ie_transtorno,
		a.ie_complicacao_puerperio,
		a.ie_atend_rn_sala_parto,
		a.ie_complicacao_neonatal,
		a.ie_baixo_peso,
		a.ie_parto_cesaria,
		a.ie_parto_normal,
		a.ie_obito_mulher,
		substr(coalesce(d.nr_seq_intercambio,pls_obter_dados_segurado(a.nr_seq_segurado,'CC')),1,4) nr_contrato,
		substr(d.cd_matricula_familia,1,6) cd_usuario,
		substr(d.ie_titularidade,1,2) cd_dependente,
		substr(obter_nome_pf(d.cd_pessoa_fisica),1,25) nm_usuario_benef,
		to_char(coalesce(a.dt_emissao,clock_timestamp()),'ddmmyyyy') dt_emissao,
		a.cd_medico_solicitante,
		a.ie_tipo_consulta,
		a.nr_seq_prestador_exec,
		substr(a.ds_indicacao_clinica,1,100) ds_indicacao_clinica,
		a.cd_medico_executor,
		substr(a.cd_cnes,1,7) cd_cnes,
		a.nr_seq_tipo_atendimento,
		coalesce(a.ie_carater_internacao, e.ie_carater_internacao) ie_carater_internacao,
		a.ie_regime_internacao,
		a.nr_seq_tipo_acomodacao,
		a.nr_seq_saida_int,
		a.cd_guia_referencia,
		a.qt_obito_precoce,
		a.qt_obito_tardio,
		a.qt_nasc_vivos_termo,
		a.qt_nasc_mortos,
		a.qt_nasc_vivos_prematuros,
		a.ie_tipo_guia,
		a.nr_seq_protocolo,
		a.cd_guia,
		a.nr_seq_grau_partic,
		a.qt_diarias_sip,
		a.dt_hora_emissao,
		coalesce(a.ie_recem_nascido,'N') ie_recem_nascido,
		ptu_obter_tp_ind_acidente(a.ie_indicacao_acidente) ie_indicacao_acidente,
		coalesce(e.dt_entrada,coalesce(a.dt_inicio_faturamento,a.dt_entrada)) dt_ini_fat,
		coalesce(e.dt_alta,coalesce(a.dt_fim_faturamento,a.dt_alta)) dt_fim_fat,
		a.cd_guia_prestador,
		pls_obter_dados_segurado(c.nr_seq_segurado,'CR') cd_usuario_plano,
		a.cd_guia_ok,
		a.nr_seq_segurado,
		a.ie_origem_conta,
		a.nr_seq_saida_consulta,
		d.nr_seq_pagador,
		a.nr_seq_guia,
		a.nr_seq_nota_cobranca,
		substr(obter_codigo_cbo_saude(a.nr_seq_cbo_saude),1,6) cd_cbo_conta,
		a.nr_seq_analise,
		f.nr_seq_prestador,
		a.dt_atendimento_referencia,
		coalesce(a.dt_inicio_faturamento,a.dt_entrada) dt_entrada_int,
		coalesce(a.dt_fim_faturamento,a.dt_alta) dt_alta_int,
		a.nr_seq_clinica,
		a.ie_tipo_faturamento
	from	pls_segurado		d,
		pls_conta		a,
		pls_fatura_conta 	c,
		pls_fatura_evento 	b,
		pls_conta_pos_cab_v	e,
		pls_protocolo_conta 	f
	where	f.nr_sequencia		= a.nr_seq_protocolo
	and	a.nr_sequencia		= c.nr_seq_conta
	and	b.nr_sequencia		= c.nr_seq_fatura_evento
	and	d.nr_sequencia		= a.nr_seq_segurado
	and	a.nr_sequencia		= e.nr_sequencia
	and	b.nr_seq_fatura		= nr_seq_fatura_pc;
	
c02 CURSOR( nr_seq_fatura_conta_pc	pls_fatura_conta.nr_sequencia%type) FOR
	-- PÓS ANTIGO
	SELECT	a.nr_seq_conta_proc,
		null nr_seq_conta_mat,
		substr(c.cd_procedimento,1,10) cd_servico,
		substr(obter_descricao_procedimento(c.cd_procedimento,c.ie_origem_proced),1,50) ds_servico,
		elimina_caractere_especial(coalesce(b.qt_item,1)) qt_servico,
		campo_mascara_virgula(to_char(coalesce(d.vl_medico,0) + coalesce(d.vl_custo_operacional_ind,0))) vl_servico,
		'' vl_servico_ch,
		to_char(coalesce(d.vl_materiais,0)) vl_servico_filme,
		coalesce(d.vl_materiais,0) vl_servico_filme_number,
		campo_mascara_virgula(coalesce((coalesce(a.vl_faturado,0) + coalesce(a.vl_faturado_ndc,0)),0)) vl_servico_integral,
		coalesce(c.dt_procedimento,clock_timestamp()) dt_atendimento,
		CASE WHEN c.ie_via_acesso='U' THEN 0 WHEN c.ie_via_acesso='M' THEN 1 WHEN c.ie_via_acesso='D' THEN 2  ELSE 0 END  ie_via_acesso,
		elimina_caractere_especial(to_char(coalesce(c.tx_item,0))) tx_item,
		null cd_unidade_medida,
		substr(campo_mascara_virgula(replace(to_char(coalesce(a.vl_faturado_ndc,0)),'.','')),1,8) vl_unitario,
		c.ie_tipo_despesa ie_tipo_despesa,
		substr(campo_mascara_virgula(coalesce(d.vl_administracao,0)),1,8) tx_adm,
		c.cd_procedimento cd_procedimento,
		c.ie_origem_proced ie_origem_proced,
		null cd_medico,
		null nr_seq_grau_partic,
		coalesce(d.vl_administracao,0) vl_administracao,
		0 vl_glosa_taxa,
		0 vl_glosa,
		null cd_cbo_part,
		null nr_seq_proc_participante,
		c.nr_seq_conta,
		null nr_seq_tuss_mat_item,
		c.dt_inicio_proc,
		coalesce(d.vl_medico,0) + coalesce(d.vl_custo_operacional_ind,0) vl_servico_number,
		coalesce(a.vl_faturado,0) + coalesce(a.vl_faturado_ndc,0) vl_total_faturado_number,
		b.nr_sequencia nr_seq_conta_pos,
		b.ds_item_ptu,
		'N' ie_pos_novo,
		d.nr_sequencia nr_seq_estab_contab,
		c.ie_ato_cooperado
	from	pls_conta_pos_estab_contab	d,
		pls_conta_proc			c,
		pls_conta_pos_estabelecido	b,
		pls_fatura_proc			a,
		pls_fatura_conta		z
	where	z.nr_sequencia			= a.nr_seq_fatura_conta
	and	b.nr_sequencia			= a.nr_seq_conta_pos_estab
	and	c.nr_sequencia			= b.nr_seq_conta_proc
	and	a.nr_seq_fatura_conta		= nr_seq_fatura_conta_pc
	and	b.nr_sequencia			= d.nr_seq_conta_pos
	and	d.nr_sequencia			= a.nr_seq_conta_pos_contab
	and	exists (	SELECT	1
			from	pls_conta_pos_estab_partic w
			where	w.nr_seq_conta_pos = b.nr_sequencia
			having	count(1) != 1)
	and	ie_gerar_fat_contab_w = 'S'
	
union all

	-- PÓS ANTIGO
	select	a.nr_seq_conta_proc,
		null nr_seq_conta_mat,
		substr(c.cd_procedimento,1,10) cd_servico,
		substr(obter_descricao_procedimento(c.cd_procedimento,c.ie_origem_proced),1,50) ds_servico,
		elimina_caractere_especial(coalesce(b.qt_item,1)) qt_servico,
		campo_mascara_virgula(to_char((	select	sum(coalesce(dd.vl_medico,0) + coalesce(dd.vl_custo_operacional_ind,0))
						from	pls_conta_pos_estab_contab	dd
						where	dd.nr_seq_conta_pos = d.nr_seq_conta_pos))) vl_servico,
		'' vl_servico_ch,
		to_char((	select	sum(coalesce(dd.vl_materiais,0))
				from	pls_conta_pos_estab_contab	dd
				where	dd.nr_seq_conta_pos = d.nr_seq_conta_pos)) vl_servico_filme,
		coalesce(d.vl_materiais,0) vl_servico_filme_number,
		campo_mascara_virgula(coalesce((coalesce(a.vl_faturado,0) + coalesce(a.vl_faturado_ndc,0)),0)) vl_servico_integral,
		coalesce(c.dt_procedimento,clock_timestamp()) dt_atendimento,
		CASE WHEN c.ie_via_acesso='U' THEN 0 WHEN c.ie_via_acesso='M' THEN 1 WHEN c.ie_via_acesso='D' THEN 2  ELSE 0 END  ie_via_acesso,
		elimina_caractere_especial(to_char(coalesce(c.tx_item,0))) tx_item,
		null cd_unidade_medida,
		substr(campo_mascara_virgula(replace(to_char(coalesce(a.vl_faturado_ndc,0)),'.','')),1,8) vl_unitario,
		c.ie_tipo_despesa ie_tipo_despesa,
		substr(campo_mascara_virgula(coalesce(	(select	sum(dd.vl_administracao)
							from	pls_conta_pos_estab_contab	dd
							where	dd.nr_seq_conta_pos = d.nr_seq_conta_pos), 0)), 1, 8) tx_adm,
		c.cd_procedimento cd_procedimento,
		c.ie_origem_proced ie_origem_proced,
		null cd_medico,
		null nr_seq_grau_partic,
		coalesce(d.vl_administracao,0) vl_administracao,
		0 vl_glosa_taxa,
		0 vl_glosa,
		null cd_cbo_part,
		null nr_seq_proc_participante,
		c.nr_seq_conta,
		null nr_seq_tuss_mat_item,
		c.dt_inicio_proc,
		coalesce(d.vl_medico,0) + coalesce(d.vl_custo_operacional_ind,0) vl_servico_number,
		coalesce(a.vl_faturado,0) + coalesce(a.vl_faturado_ndc,0) vl_total_faturado_number,
		b.nr_sequencia nr_seq_conta_pos,
		b.ds_item_ptu,
		'N' ie_pos_novo,
		d.nr_sequencia nr_seq_estab_contab,
		c.ie_ato_cooperado
	from	pls_conta_pos_estab_contab	d,
		pls_conta_proc			c,
		pls_conta_pos_estabelecido	b,
		pls_fatura_proc			a,
		pls_fatura_conta		z
	where	z.nr_sequencia			= a.nr_seq_fatura_conta
	and	b.nr_sequencia			= a.nr_seq_conta_pos_estab
	and	c.nr_sequencia			= b.nr_seq_conta_proc
	and	a.nr_seq_fatura_conta		= nr_seq_fatura_conta_pc
	and	b.nr_sequencia			= d.nr_seq_conta_pos
	and	d.nr_sequencia			= a.nr_seq_conta_pos_contab
	and	exists (	select	1
			from	pls_conta_pos_estab_partic w
			where	w.nr_seq_conta_pos = b.nr_sequencia
			having	count(1) != 1)
	and	ie_gerar_fat_contab_w = 'N'
	
union all

	select	a.nr_seq_conta_proc,
		null nr_seq_conta_mat,
		substr(c.cd_procedimento,1,10) cd_servico,
		substr(obter_descricao_procedimento(c.cd_procedimento,c.ie_origem_proced),1,50) ds_servico,
		elimina_caractere_especial(coalesce(b.qt_item,1)) qt_servico,
		campo_mascara_virgula(to_char(e.vl_participante_pos - e.vl_administracao)) vl_servico,
		'' vl_servico_ch,
		to_char(coalesce(b.vl_materiais,0)) vl_servico_filme,
		coalesce(b.vl_materiais,0) vl_servico_filme_number,
		campo_mascara_virgula(coalesce((coalesce(a.vl_faturado,0) + coalesce(a.vl_faturado_ndc,0)),0)) vl_servico_integral,
		coalesce(c.dt_procedimento,clock_timestamp()) dt_atendimento,
		CASE WHEN c.ie_via_acesso='U' THEN 0 WHEN c.ie_via_acesso='M' THEN 1 WHEN c.ie_via_acesso='D' THEN 2  ELSE 0 END  ie_via_acesso,
		elimina_caractere_especial(to_char(coalesce(c.tx_item,0))) tx_item,
		null cd_unidade_medida,
		substr(campo_mascara_virgula(replace(to_char(coalesce(a.vl_faturado_ndc,0)),'.','')),1,8) vl_unitario,
		c.ie_tipo_despesa ie_tipo_despesa,
		substr(campo_mascara_virgula(coalesce(e.vl_administracao,0)),1,8) tx_adm,
		c.cd_procedimento cd_procedimento,
		c.ie_origem_proced ie_origem_proced,
		d.cd_medico,
		d.nr_seq_grau_partic,
		coalesce(e.vl_administracao,0) vl_administracao,
		0 vl_glosa_taxa,
		0 vl_glosa,
		substr(obter_codigo_cbo_saude(d.nr_seq_cbo_saude),1,6) cd_cbo_part,
		d.nr_sequencia nr_seq_proc_participante,
		c.nr_seq_conta,
		null nr_seq_tuss_mat_item,
		c.dt_inicio_proc,
		coalesce(e.vl_participante_pos - e.vl_administracao,0) vl_servico_number,
		coalesce(a.vl_faturado,0) + coalesce(a.vl_faturado_ndc,0) vl_total_faturado_number,
		b.nr_sequencia nr_seq_conta_pos,
		b.ds_item_ptu,
		'N' ie_pos_novo,
		x.nr_sequencia nr_seq_estab_contab,
		c.ie_ato_cooperado
	from	pls_conta_pos_estab_contab	x,
		pls_conta_pos_estab_partic	e,
		pls_proc_participante		d,
		pls_conta_proc			c,
		pls_conta_pos_estabelecido	b,
		pls_fatura_proc			a,
		pls_fatura_conta		z
	where	z.nr_sequencia			= a.nr_seq_fatura_conta
	and	b.nr_sequencia			= a.nr_seq_conta_pos_estab
	and	c.nr_sequencia			= b.nr_seq_conta_proc
	and	c.nr_sequencia			= d.nr_seq_conta_proc
	and	e.nr_seq_proc_partic		= d.nr_sequencia
	and	e.nr_seq_conta_pos		= b.nr_sequencia
	and	b.nr_sequencia			= x.nr_seq_conta_pos
	and	x.nr_sequencia			= a.nr_seq_conta_pos_contab
	and	a.nr_seq_fatura_conta		= nr_seq_fatura_conta_pc
	and	exists (	select	1
			from	pls_conta_pos_estab_partic w
			where	w.nr_seq_conta_pos = b.nr_sequencia
			having	count(1) = 1)
	
union all

	select	null nr_seq_conta_proc,
		a.nr_seq_conta_mat,
		substr(pls_obter_dados_material(c.nr_seq_material,'CO'),1,10) cd_servico,
		substr(pls_obter_dados_material(c.nr_seq_material,'DS'),1,50) ds_servico,
		elimina_caractere_especial(coalesce(b.qt_item,1)) qt_servico,
		campo_mascara_virgula(to_char(coalesce(b.vl_materiais,0))) vl_servico,
		'' vl_servico_ch,
		'' vl_servico_filme,
		b.vl_materiais vl_servico_filme_number,
		campo_mascara_virgula(coalesce((coalesce(a.vl_faturado,0) + coalesce(a.vl_faturado_ndc,0)),0)) vl_servico_integral,
		coalesce(c.dt_atendimento,clock_timestamp()) dt_atendimento,
		0 ie_via_acesso,
		'0' tx_item,
		x.cd_unidade_medida,
		substr(campo_mascara_virgula(replace(to_char(coalesce(a.vl_faturado_ndc,0)),'.','')),1,8) vl_unitario,
		c.ie_tipo_despesa ie_tipo_despesa,
		substr(campo_mascara_virgula(coalesce(b.vl_lib_taxa_material,0)),1,8) tx_adm,
		null cd_procedimento,
		null ie_origem_proced,
		null cd_medico,
		null nr_seq_grau_partic,
		coalesce(b.vl_administracao,0) vl_administracao,
		coalesce(c.vl_glosa_taxa_material,0) vl_glosa_taxa,
		coalesce(c.vl_glosa,0) - coalesce(c.vl_glosa_taxa_material,0) vl_glosa,
		null cd_cbo_part,
		null nr_seq_proc_participante,
		c.nr_seq_conta,
		x.nr_seq_tuss_mat_item,
		null dt_inicio_proc,
		0 vl_servico_number,
		coalesce(a.vl_faturado,0) + coalesce(a.vl_faturado_ndc,0) vl_total_faturado_number,
		b.nr_sequencia nr_seq_conta_pos,
		b.ds_item_ptu,
		'N' ie_pos_novo,
		null nr_seq_estab_contab,
		c.ie_ato_cooperado
	FROM pls_fatura_conta z, pls_conta_pos_estabelecido b, pls_fatura_mat a, pls_conta_mat c
LEFT OUTER JOIN pls_material x ON (c.nr_seq_material = x.nr_sequencia)
WHERE z.nr_sequencia			= a.nr_seq_fatura_conta and b.nr_sequencia			= a.nr_seq_conta_pos_estab and c.nr_sequencia			= b.nr_seq_conta_mat  and a.nr_seq_fatura_conta		= nr_seq_fatura_conta_pc
	
union all

	-- PÓS NOVO
	select	a.nr_seq_conta_proc,
		null nr_seq_conta_mat,
		substr(c.cd_procedimento,1,10) cd_servico,
		substr(obter_descricao_procedimento(c.cd_procedimento,c.ie_origem_proced),1,50) ds_servico,
		elimina_caractere_especial(coalesce(b.qt_item,1)) qt_servico,
		campo_mascara_virgula(to_char(coalesce(b.vl_medico,0) + coalesce(b.vl_custo_operacional,0))) vl_servico,
		'' vl_servico_ch,
		to_char(coalesce(b.vl_materiais,0)) vl_servico_filme,
		coalesce(b.vl_materiais,0) vl_servico_filme_number,
		campo_mascara_virgula(coalesce((coalesce(a.vl_faturado,0) + coalesce(a.vl_faturado_ndc,0)),0)) vl_servico_integral,
		coalesce(c.dt_procedimento,clock_timestamp()) dt_atendimento,
		CASE WHEN c.ie_via_acesso='U' THEN 0 WHEN c.ie_via_acesso='M' THEN 1 WHEN c.ie_via_acesso='D' THEN 2  ELSE 0 END  ie_via_acesso,
		elimina_caractere_especial(to_char(coalesce(c.tx_item,0))) tx_item,
		null cd_unidade_medida,
		substr(campo_mascara_virgula(replace(to_char(coalesce(a.vl_faturado_ndc,0)),'.','')),1,8) vl_unitario,
		c.ie_tipo_despesa ie_tipo_despesa,
		substr(campo_mascara_virgula(coalesce(b.vl_taxa_co,0) + coalesce(b.vl_taxa_material,0) + coalesce(b.vl_taxa_servico,0)),1,8) tx_adm,
		c.cd_procedimento cd_procedimento,
		c.ie_origem_proced ie_origem_proced,
		null cd_medico,
		null nr_seq_grau_partic,
		coalesce(b.vl_taxa_co,0) + coalesce(b.vl_taxa_material,0) + coalesce(b.vl_taxa_servico,0) vl_administracao,
		0 vl_glosa_taxa,
		0 vl_glosa,
		null cd_cbo_part,
		null nr_seq_proc_participante,
		c.nr_seq_conta,
		null nr_seq_tuss_mat_item,
		c.dt_inicio_proc,
		coalesce(b.vl_medico,0) + coalesce(b.vl_custo_operacional,0) vl_servico_number,
		coalesce(a.vl_faturado,0) + coalesce(a.vl_faturado_ndc,0) vl_total_faturado_number,
		b.nr_sequencia nr_seq_conta_pos,
		b.ds_item_ptu,
		'S' ie_pos_novo,
		null nr_seq_estab_contab,
		c.ie_ato_cooperado
	from	pls_conta_proc			c,
		pls_conta_pos_proc		b,
		pls_fatura_proc			a,
		pls_fatura_conta		z
	where	z.nr_sequencia			= a.nr_seq_fatura_conta
	and	b.nr_sequencia			= a.nr_seq_pos_proc
	and	c.nr_sequencia			= b.nr_seq_conta_proc
	and	a.nr_seq_fatura_conta		= nr_seq_fatura_conta_pc
	and	not exists (	select	1
				from	pls_conta_pos_proc_part x
				where	x.nr_seq_conta_pos_proc = b.nr_sequencia)
	
union all

	select	a.nr_seq_conta_proc,
		null nr_seq_conta_mat,
		substr(c.cd_procedimento,1,10) cd_servico,
		substr(obter_descricao_procedimento(c.cd_procedimento,c.ie_origem_proced),1,50) ds_servico,
		elimina_caractere_especial(coalesce(b.qt_item,1)) qt_servico,
		campo_mascara_virgula(to_char(e.vl_participante_pos - e.vl_administracao)) vl_servico,
		'' vl_servico_ch,
		to_char(coalesce(b.vl_materiais,0)) vl_servico_filme,
		coalesce(b.vl_materiais,0) vl_servico_filme_number,
		campo_mascara_virgula(coalesce((coalesce(a.vl_faturado,0) + coalesce(a.vl_faturado_ndc,0)),0)) vl_servico_integral,
		coalesce(c.dt_procedimento,clock_timestamp()) dt_atendimento,
		CASE WHEN c.ie_via_acesso='U' THEN 0 WHEN c.ie_via_acesso='M' THEN 1 WHEN c.ie_via_acesso='D' THEN 2  ELSE 0 END  ie_via_acesso,
		elimina_caractere_especial(to_char(coalesce(c.tx_item,0))) tx_item,
		null cd_unidade_medida,
		substr(campo_mascara_virgula(replace(to_char(coalesce(a.vl_faturado_ndc,0)),'.','')),1,8) vl_unitario,
		c.ie_tipo_despesa ie_tipo_despesa,
		substr(campo_mascara_virgula(coalesce(e.vl_administracao,0)),1,8) tx_adm,
		c.cd_procedimento cd_procedimento,
		c.ie_origem_proced ie_origem_proced,
		d.cd_medico,
		d.nr_seq_grau_partic,
		coalesce(e.vl_administracao,0) vl_administracao,
		0 vl_glosa_taxa,
		0 vl_glosa,
		substr(obter_codigo_cbo_saude(d.nr_seq_cbo_saude),1,6) cd_cbo_part,
		d.nr_sequencia nr_seq_proc_participante,
		c.nr_seq_conta,
		null nr_seq_tuss_mat_item,
		c.dt_inicio_proc,
		coalesce(e.vl_participante_pos - e.vl_administracao,0) vl_servico_number,
		coalesce(a.vl_faturado,0) + coalesce(a.vl_faturado_ndc,0) vl_total_faturado_number,
		b.nr_sequencia nr_seq_conta_pos,
		b.ds_item_ptu,
		'S' ie_pos_novo,
		null nr_seq_estab_contab,
		c.ie_ato_cooperado
	from	pls_conta_pos_proc_part		e,
		pls_proc_participante		d,
		pls_conta_proc			c,
		pls_conta_pos_proc		b,
		pls_fatura_proc			a,
		pls_fatura_conta		z
	where	z.nr_sequencia			= a.nr_seq_fatura_conta
	and	b.nr_sequencia			= a.nr_seq_pos_proc
	and	c.nr_sequencia			= b.nr_seq_conta_proc
	and	c.nr_sequencia			= d.nr_seq_conta_proc
	and	e.nr_seq_proc_partic		= d.nr_sequencia
	and	e.nr_seq_conta_pos_proc		= b.nr_sequencia
	and	a.nr_seq_fatura_conta		= nr_seq_fatura_conta_pc
	
union all

	select	null nr_seq_conta_proc,
		a.nr_seq_conta_mat,
		substr(pls_obter_dados_material(c.nr_seq_material,'CO'),1,10) cd_servico,
		substr(pls_obter_dados_material(c.nr_seq_material,'DS'),1,50) ds_servico,
		elimina_caractere_especial(coalesce(b.qt_item,1)) qt_servico,
		campo_mascara_virgula(to_char(coalesce(b.vl_materiais,0))) vl_servico,
		'' vl_servico_ch,
		'' vl_servico_filme,
		b.vl_materiais vl_servico_filme_number,
		campo_mascara_virgula(coalesce((coalesce(a.vl_faturado,0) + coalesce(a.vl_faturado_ndc,0)),0)) vl_servico_integral,
		coalesce(c.dt_atendimento,clock_timestamp()) dt_atendimento,
		0 ie_via_acesso,
		'0' tx_item,
		x.cd_unidade_medida,
		substr(campo_mascara_virgula(replace(to_char(coalesce(a.vl_faturado_ndc,0)),'.','')),1,8) vl_unitario,
		c.ie_tipo_despesa ie_tipo_despesa,
		substr(campo_mascara_virgula(coalesce(b.vl_lib_taxa_material,0)),1,8) tx_adm,
		null cd_procedimento,
		null ie_origem_proced,
		null cd_medico,
		null nr_seq_grau_partic,
		coalesce(b.vl_administracao,0) vl_administracao,
		coalesce(c.vl_glosa_taxa_material,0) vl_glosa_taxa,
		coalesce(c.vl_glosa,0) - coalesce(c.vl_glosa_taxa_material,0) vl_glosa,
		null cd_cbo_part,
		null nr_seq_proc_participante,
		c.nr_seq_conta,
		x.nr_seq_tuss_mat_item,
		null dt_inicio_proc,
		0 vl_servico_number,
		coalesce(a.vl_faturado,0) + coalesce(a.vl_faturado_ndc,0) vl_total_faturado_number,
		b.nr_sequencia nr_seq_conta_pos,
		b.ds_item_ptu,
		'S' ie_pos_novo,
		null nr_seq_estab_contab,
		c.ie_ato_cooperado
	FROM pls_fatura_conta z, pls_conta_pos_mat b, pls_fatura_mat a, pls_conta_mat c
LEFT OUTER JOIN pls_material x ON (c.nr_seq_material = x.nr_sequencia)
WHERE z.nr_sequencia			= a.nr_seq_fatura_conta and b.nr_sequencia			= a.nr_seq_pos_mat and c.nr_sequencia			= b.nr_seq_conta_mat  and a.nr_seq_fatura_conta		= nr_seq_fatura_conta_pc;

BEGIN

select	coalesce(ie_gerar_fat_contab, 'S')
into STRICT	ie_gerar_fat_contab_w
from	pls_parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_p;

-- NR_REGISTRO_ANS
select	substr(max(cd_ans),1,6)
into STRICT	cd_ans_w
from	pls_outorgante
where	cd_estabelecimento = cd_estabelecimento_p;

select	max(nr_seq_lote_fat)
into STRICT	nr_seq_lote_fat_w
from	pls_lote_arq_fundacao_txt
where	nr_sequencia	= nr_seq_lote_p;

-- CONTAS
for r_C01_w in C01( nr_seq_fatura_p ) loop
	cont_item_w	:= 0; -- Zerar o contador a cada conta
	cd_usuari_cart_w	:= substr(r_C01_w.cd_usuario_plano, 9, 6);
	cd_unimed_cart_w	:= substr(r_C01_w.cd_usuario_plano, 2, 3);
	cd_contra_cart_w	:= substr(r_C01_w.cd_usuario_plano, 5, 4);
	cd_depend_cart_w	:= substr(r_C01_w.cd_usuario_plano, 15, 2);
	
	dt_alta_format_w	:= '';
	dt_internacao_w		:= '';
	ie_tipo_internacao_w	:= null;
	
	--Informações da internação
	if (r_C01_w.ie_tipo_guia <> '5') then
		select	min(dt_atendimento_referencia),
			min(coalesce(dt_entrada,dt_inicio_faturamento)),		-- Alterado para atender OS 1306800 Unimed Blumenau
			max(coalesce(dt_alta,dt_fim_faturamento)),
			min(ie_regime_internacao),
			min(nr_seq_clinica),
			min(ie_tipo_faturamento),
			count(1) qt_reg
		into STRICT	dt_atendimento_referencia_w,
			dt_entrada_w,
			dt_alta_w,
			ie_regime_internacao_w,
			nr_seq_clinica_w,
			ie_tipo_faturamento_w,
			qt_reg_int_w
		from	pls_conta
		where	nr_seq_segurado		= r_C01_w.nr_seq_segurado
		and	cd_guia_ok		= r_C01_w.cd_guia_ok
		and	ie_tipo_guia		= '5'
		and	r_C01_w.dt_atendimento between dt_inicio_faturamento and dt_fim_faturamento;
		
		if (qt_reg_int_w = 0) then
			select	min(dt_atendimento_referencia),
				min(coalesce(dt_inicio_faturamento,dt_entrada)),
				max(coalesce(dt_fim_faturamento,dt_alta)),
				min(ie_regime_internacao),
				min(nr_seq_clinica),
				min(ie_tipo_faturamento)
			into STRICT	dt_atendimento_referencia_w,
				dt_entrada_w,
				dt_alta_w,
				ie_regime_internacao_w,
				nr_seq_clinica_w,
				ie_tipo_faturamento_w
			from	pls_conta
			where	nr_seq_segurado		= r_C01_w.nr_seq_segurado
			and	cd_guia_ok		= r_C01_w.cd_guia_ok
			and	ie_tipo_guia		= '5';
		end if;
	else
		dt_atendimento_referencia_w	:= r_C01_w.dt_atendimento_referencia;
		dt_entrada_w			:= r_C01_w.dt_entrada_int;
		dt_alta_w			:= r_C01_w.dt_alta_int;
		ie_regime_internacao_w		:= r_C01_w.ie_regime_internacao;
		nr_seq_clinica_w		:= r_C01_w.nr_seq_clinica;
		ie_tipo_faturamento_w		:= r_C01_w.ie_tipo_faturamento;
	end if;
	
	/*aaschlote 11/05/2016 OS 1090711*/

	if (ie_tipo_faturamento_w = 'P') then
		ie_tipo_faturamento_w	:= '1';
	elsif (ie_tipo_faturamento_w = 'F') then
		ie_tipo_faturamento_w	:= '2';
	elsif (ie_tipo_faturamento_w = 'C') then
		ie_tipo_faturamento_w	:= '3';
	elsif (ie_tipo_faturamento_w = 'T') then
		ie_tipo_faturamento_w	:= '4';
	end if;
	
	if (dt_entrada_w IS NOT NULL AND dt_entrada_w::text <> '') then
		dt_internacao_w	:= to_char(dt_entrada_w,'ddmmyyyy');
	end if;
	
	if (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') then
		dt_alta_format_w	:= to_char(dt_alta_w,'ddmmyyyy');
	end if;
	
	if (nr_seq_clinica_w IS NOT NULL AND nr_seq_clinica_w::text <> '') then
		select	coalesce(max(cd_tiss),1)
		into STRICT	ie_tipo_internacao_w
		from	pls_clinica
		where	nr_sequencia 		= nr_seq_clinica_w;
	end if;
		

	select	max(cd_doenca)
	into STRICT	cd_cid_w
	from	pls_diagnostico_conta
	where	nr_seq_conta		= r_C01_w.nr_seq_conta
	and (ie_classificacao	= 'P' or coalesce(ie_classificacao::text, '') = '');

	-- 'CÓDIGO DA CD_ESPECIALIDADE' UTILIZANDO O 'NR_SEQ_PRESTADOR_EXEC'
	begin
	select	max(cd_especialidade)
	into STRICT	cd_especialidade_med_w
	from	pls_prestador_med_espec
	where	nr_seq_prestador	= r_C01_w.nr_seq_prestador_exec;
	exception
	when others then
		cd_especialidade_med_w	:= null;
	end;

	-- 'DESCRIÇÃO DA ESPECIALIDADE' UTILIZANDO O 'CD_ESPECIALIDADE_MED_W'
	begin
	select	substr(max(ds_especialidade),1,11)
	into STRICT	ds_especialidade_w
	from	especialidade_medica
	where	cd_especialidade	= cd_especialidade_med_w;
	exception
	when others then
		ds_especialidade_w	:= null;
	end;

	if (r_C01_w.nr_seq_saida_consulta IS NOT NULL AND r_C01_w.nr_seq_saida_consulta::text <> '') then
		begin
			select	substr(cd_tiss,1,1)
			into STRICT	ie_motivo_saida_w
			from	pls_motivo_saida_consulta
			where	nr_sequencia	= 	r_C01_w.nr_seq_saida_consulta;
		exception
		when others then
			ie_motivo_saida_w	:= null;
		end;
	else
		ie_motivo_saida_w	:= null;
	end if;

	-- 'TIPO ATENDIMENTO' UTILIZANDO O 'NR_SEQ_TIPO_ATENDIMENTO' DA 'PLS_CONTA'
	if (r_C01_w.nr_seq_tipo_atendimento IS NOT NULL AND r_C01_w.nr_seq_tipo_atendimento::text <> '') and (r_C01_w.ie_tipo_guia = 4) then
		begin
		select	substr(cd_tiss,1,2)
		into STRICT	ie_tipo_atendimento_w
		from    pls_tipo_atendimento
		where	nr_sequencia		= r_C01_w.nr_seq_tipo_atendimento;
		exception
		when others then
			ie_tipo_atendimento_w	:= null;
		end;
	else
		ie_tipo_atendimento_w	:= null;
	end if;

	-- 'TIPO ACOMODAÇÃO' UTILIZANDO O 'NR_SEQ_TIPO_ACOMODACAO' DA 'PLS_CONTA'
	select	coalesce(max(ie_tipo_acomodacao_ptu),'A')
	into STRICT	ie_tipo_acomodacao_w
	from	pls_tipo_acomodacao
	where	nr_sequencia		= r_C01_w.nr_seq_tipo_acomodacao;

	-- 'CÓDIGO MOTIVO SAÍDA' UTILIZANDO O 'NR_SEQ_SAIDA_INT' DA 'PLS_CONTA'. OS 1258213, alterado para retornar o 'cd_tiss' no lugar do 'cd_ptu'.
	select	max(cd_tiss)
	into STRICT	cd_motivo_saida_w
	from	pls_motivo_saida
	where	nr_sequencia		= r_C01_w.nr_seq_saida_int;

	cd_cnes_w := null;
	-- CPF/CNPJ PRESTADOR EXECUTANTE
	if (r_C01_w.nr_seq_prestador_exec IS NOT NULL AND r_C01_w.nr_seq_prestador_exec::text <> '') then
		begin
		select	pls_obter_dados_prestador(nr_sequencia,'N'),
			nr_seq_tipo_prestador,
			lpad('0',10,'0'), --substr(to_char(pls_obter_dados_prestador(nr_sequencia,'MT')),1,10),
			cd_prest_a400,
			cd_prestador,
			substr(pls_obter_cnes_prestador(nr_sequencia),1,7),
			cd_cgc
		into STRICT	ds_prestador_contratado_w,
			nr_seq_tipo_prestador_w,
			nr_matricula_w,
			cd_prest_a400_w,
			cd_prestador_w,
			cd_cnes_w,
			cd_cgc_prestador_exec_w
		from	pls_prestador
		where	nr_sequencia		= r_C01_w.nr_seq_prestador_exec;
		exception
		when others then
			ds_prestador_contratado_w	:= null;
			nr_seq_tipo_prestador_w		:= null;
			nr_matricula_w			:= lpad('0',10,'0');
			cd_prest_a400_w			:= null;
			cd_prestador_w			:= null;
			cd_cnes_w			:= null;
		end;
	end if;

	nr_lote_w	:= (r_C01_w.nr_seq_conta + r_C01_w.nr_seq_protocolo)::numeric;

	-- PROCEDIMENTO / MATERIAIS
	for r_C02_w in C02( r_C01_w.nr_sequencia ) loop
		cont_item_w := cont_item_w + 1;
		ie_tipo_participacao_w		:= null;
		cd_cpf_cnpj_executante_w	:= null;
		cd_cbo_w			:= null;
		vl_servico_filme_w		:= null;
		vl_servico_filme_number_w	:= null;
		nr_seq_prestador_w		:= null;
		ie_tipo_part_regra_w		:= '';
		
		nr_seq_prestador_pgto_w	:= null;
		
		if (r_C02_w.nr_seq_conta_proc IS NOT NULL AND r_C02_w.nr_seq_conta_proc::text <> '') then
			select	max(nr_seq_prestador_pgto)
			into STRICT	nr_seq_prestador_pgto_w
			from	pls_conta_medica_resumo
			where	nr_seq_conta_proc	= r_C02_w.nr_seq_conta_proc
			and	nr_seq_conta		= r_C02_w.nr_seq_conta
			and	ie_situacao		= 'A'
			and	ie_tipo_item != 'I';

		elsif (r_C02_w.nr_seq_conta_mat IS NOT NULL AND r_C02_w.nr_seq_conta_mat::text <> '') then
			select	max(nr_seq_prestador_pgto)
			into STRICT	nr_seq_prestador_pgto_w
			from	pls_conta_medica_resumo
			where	nr_seq_conta_mat	= r_C02_w.nr_seq_conta_mat
			and	nr_seq_conta		= r_C02_w.nr_seq_conta
			and	ie_situacao		= 'A'
			and	ie_tipo_item != 'I';
		end if;
		
		/*if	(nr_seq_prestador_pgto_w is not null) then
			begin
			select	decode(cd_cgc,'','S','N')
			into	ie_ato_cooperativo_w
			from	pls_prestador
			where	nr_sequencia	= nr_seq_prestador_pgto_w;
			exception
			when others then
				ie_ato_cooperativo_w	:= 'N';
			end;
		end if;*/
		
		ie_ato_cooperativo_w := 'N';
		if (r_C02_w.ie_ato_cooperado = '1') then
			ie_ato_cooperativo_w := 'S';
		end if;

		if (r_C02_w.nr_seq_conta_proc IS NOT NULL AND r_C02_w.nr_seq_conta_proc::text <> '') then
			dt_atendimento_w := r_C02_w.dt_inicio_proc;
		elsif (r_C02_w.nr_seq_conta_mat IS NOT NULL AND r_C02_w.nr_seq_conta_mat::text <> '') then
			dt_atendimento_w := r_C01_w.dt_atendimento;
		else
			dt_atendimento_w := r_C01_w.dt_atendimento;
		end if;
		
		select	max(cd_ptu)
		into STRICT	ie_tipo_participacao_w
		from	pls_grau_participacao
		where	nr_sequencia		= r_C02_w.nr_seq_grau_partic;

		if (r_C02_w.nr_seq_conta_proc IS NOT NULL AND r_C02_w.nr_seq_conta_proc::text <> '') then
			ie_tipo_part_regra_w := pls_obter_regra_partic_proc(	r_C02_w.nr_seq_conta_proc, r_C02_w.cd_procedimento, r_C02_w.ie_origem_proced, cd_estabelecimento_p, r_C02_w.nr_seq_grau_partic, ie_tipo_part_regra_w, 'N', ie_diaria_w);


		else
			if (r_C02_w.ie_tipo_despesa in ('1','7','3')) then
				ie_tipo_mat_tabela_w	:= 2;
			elsif (r_C02_w.ie_tipo_despesa = '2') then
				ie_tipo_mat_tabela_w	:= 3;
			end if;

			ie_tipo_part_regra_w := pls_obter_regra_partic_mat(	r_C02_w.nr_seq_conta_mat, ie_tipo_mat_tabela_w, ie_tipo_part_regra_w, 'N');
		end if;

		ie_tipo_participacao_w	:= coalesce(ie_tipo_part_regra_w,ie_tipo_participacao_w);

		select	CASE WHEN r_C01_w.ie_tipo_guia='3' THEN '1' WHEN r_C01_w.ie_tipo_guia='4' THEN '2' WHEN r_C01_w.ie_tipo_guia='5' THEN '3' WHEN r_C01_w.ie_tipo_guia='6' THEN '4'  ELSE '5' END
		into STRICT	ie_tipo_guia_w
		;
		
		begin
		select	ie_tipo_ptu
		into STRICT	ie_tipo_ptu_w
		from	pls_tipo_prestador
		where	nr_sequencia	= nr_seq_tipo_prestador_w;
		exception
		when others then
			ie_tipo_ptu_w	:= null;
		end;

		ds_tipo_prestador_w	:= '05';
		ie_origem_protocolo_w	:= null;
		if (ie_tipo_ptu_w IS NOT NULL AND ie_tipo_ptu_w::text <> '') then
			select	CASE WHEN ie_tipo_ptu_w='01' THEN '01' WHEN ie_tipo_ptu_w='03' THEN '02' WHEN ie_tipo_ptu_w='02' THEN '04' WHEN ie_tipo_ptu_w='04' THEN '05' WHEN ie_tipo_ptu_w='12' THEN '06'  ELSE '05' END
			into STRICT	ds_tipo_prestador_w
			;

			begin
				select	ie_origem_protocolo,
					nr_seq_congenere
				into STRICT	ie_origem_protocolo_w,
					nr_seq_congenere_w
				from	pls_protocolo_conta
				where	nr_sequencia	= r_C01_w.nr_seq_protocolo;
			exception
			when others then
				ie_origem_protocolo_w	:= null;
			end;

			if (coalesce(ie_origem_protocolo_w,'X') = 'A') then
				ds_tipo_prestador_w		:= '07';

				if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
					select	coalesce(pls_obter_nome_congenere(nr_seq_congenere_w),'Unimed')
					into STRICT	ds_prestador_contratado_w
					;
				end if;
			end if;
		end if;

		if (coalesce(ds_tipo_prestador_w::text, '') = '') then
			ds_tipo_prestador_w	:= '05';
		end if;

		if (dt_atendimento_referencia_w between dt_entrada_w and dt_alta_w) then
			ie_tipo_ato_w	:= 'I';
		else
			ie_tipo_ato_w	:= 'E';
		end if;

		cd_guia_cd_guia_prestador_w	:= coalesce(r_C01_w.cd_guia,r_C01_w.cd_guia_prestador);

		-- CONTAS AUTORIZADAS
		if (r_C01_w.nr_seq_guia IS NOT NULL AND r_C01_w.nr_seq_guia::text <> '') then
			begin
			select	to_char(dt_autorizacao, 'yyyy'),
				nr_seq_tipo_acomodacao,
				1,
				coalesce(cd_cpf_solicitante_imp, cd_cpf_solicitante_imp),
				cd_medico_solicitante,
				substr(ds_indicacao_clinica,1,100),
				substr(coalesce(cd_senha_externa,cd_senha),1,10)
			into STRICT	dt_autorizacao_w,
				nr_seq_tipo_acom_guia_w,
				ie_status_w,
				cd_cpf_cnpj_solicitante_aut_w,
				cd_medico_solicitante_w,
				ds_indicacao_clinica_w,
				cd_senha_w
			from	pls_guia_plano
			where	nr_sequencia	= r_C01_w.nr_seq_guia
			and	nr_seq_segurado	= r_c01_w.nr_seq_segurado
			and	ie_status	= 1;
			exception
			when others then
				dt_autorizacao_w 		:= null;
				nr_seq_tipo_acom_guia_w		:= null;
				ie_status_w			:= null;
				cd_cpf_cnpj_solicitante_aut_w	:= null;
				cd_medico_solicitante_w		:= null;
				ds_indicacao_clinica_w		:= null;
				cd_senha_w			:= null;
			end;

		elsif (r_C01_w.cd_guia IS NOT NULL AND r_C01_w.cd_guia::text <> '') then
			begin
			select	to_char(dt_autorizacao, 'yyyy'),
				nr_seq_tipo_acomodacao,
				ie_status,
				cd_medico_solicitante,
				substr(ds_indicacao_clinica,1,100),
				substr(coalesce(cd_senha_externa,cd_senha),1,10)
			into STRICT	dt_autorizacao_w,
				nr_seq_tipo_acom_guia_w,
				ie_status_w,
				cd_medico_solicitante_w,
				ds_indicacao_clinica_w,
				cd_senha_w
			from	pls_guia_plano
			where	cd_guia		= r_c01_w.cd_guia
			and	nr_seq_segurado	= r_c01_w.nr_seq_segurado
			and	ie_status	= 1;
			exception
			when others then
				dt_autorizacao_w		:= null;
				nr_seq_tipo_acom_guia_w		:= null;
				ie_status_w			:= null;
				cd_medico_solicitante_w		:= null;
				ds_indicacao_clinica_w		:= null;
				cd_senha_w			:= null;
			end;
		else
			dt_autorizacao_w		:= null;
			nr_seq_tipo_acom_guia_w		:= null;
			ie_status_w			:= null;
			cd_medico_solicitante_w		:= null;
			ds_indicacao_clinica_w		:= null;
			cd_senha_w			:= null;
		end if;

		ds_indicacao_clinica_w		:= coalesce(r_C01_w.ds_indicacao_clinica,ds_indicacao_clinica_w);

		if (ie_status_w = 1) then
			if (nr_seq_tipo_acom_guia_w IS NOT NULL AND nr_seq_tipo_acom_guia_w::text <> '') then
				select	coalesce(max(ie_tipo_acomodacao_ptu),'A')
				into STRICT	ie_tipo_acom_guia_w
				from	pls_tipo_acomodacao
				where	nr_sequencia		= nr_seq_tipo_acom_guia_w;
			elsif (r_c01_w.nr_seq_segurado IS NOT NULL AND r_c01_w.nr_seq_segurado::text <> '') then
				select	max(nr_seq_plano)
				into STRICT	nr_seq_plano_w
				from	pls_segurado
				where	nr_sequencia		= r_c01_w.nr_seq_segurado;

				if (nr_seq_plano_w IS NOT NULL AND nr_seq_plano_w::text <> '') then
					select	CASE WHEN max(ie_acomodacao)='I' THEN 'B' WHEN max(ie_acomodacao)='C' THEN 'A'  ELSE null END
					into STRICT	ie_tipo_acom_guia_w
					from	pls_plano
					where	nr_sequencia	= nr_seq_plano_w;
				end if;
			end if;
		else
			ie_tipo_acom_guia_w	:= null;
		end if;

		begin
			select	nr_seq_pagador
			into STRICT	nr_seq_pagador_w
			from	pls_fatura
			where	nr_sequencia	= nr_seq_fatura_p;
		exception
		when others then
			nr_seq_pagador_w	:= null;
		end;

		ie_tipo_acomodacao_conv_w	:= null;
		if (r_C02_w.nr_seq_conta_proc IS NOT NULL AND r_C02_w.nr_seq_conta_proc::text <> '') then
			ie_tipo_acomodacao_conv_w  := pls_obter_tipo_acomod_fat_fund(	nr_seq_pagador_w, r_C02_w.cd_procedimento, r_C02_w.ie_origem_proced, ie_tipo_acomodacao_conv_w );

			if (ie_tipo_acomodacao_conv_w IS NOT NULL AND ie_tipo_acomodacao_conv_w::text <> '') then
				ie_tipo_acom_guia_w	:= ie_tipo_acomodacao_conv_w;
			end if;
		end if;

		if (coalesce(ie_tipo_acomodacao_conv_w::text, '') = '') then

			ie_tipo_acom_guia_w	:= null;
		end if;

		-- CONTAS DE INTERNAÇÃO
		if (r_C01_w.ie_tipo_guia <> 5) then
			cd_motivo_saida_w		:= null;
			ie_carater_internacao_w		:= null;
			nr_declaracao_obito_w		:= null;
			nr_declaracao_nasc_vivos_w	:= null;
		else
			begin
				select	substr(max(nr_declaracao_obito),1,15),
					substr(max(cd_doenca),1,10)
				into STRICT	nr_declaracao_obito_w,
					cid_obito_w
				from	pls_diagnost_conta_obito
				where	nr_seq_conta		= r_C01_w.nr_seq_conta
				and	r_C01_w.ie_tipo_guia 	= 5;
			exception
			when others then
				nr_declaracao_obito_w	:= null;
			end;

			begin
				select	substr(max(nr_decl_nasc_vivo),1,15)
				into STRICT	nr_declaracao_nasc_vivos_w
				from	pls_diagnostico_nasc_vivo
				where	nr_seq_conta		= r_C01_w.nr_seq_conta
				and	r_C01_w.ie_tipo_guia 	= 5;
			exception
			when others then
				nr_declaracao_nasc_vivos_w	:= null;
			end;

			ie_carater_internacao_w		:= r_C01_w.ie_carater_internacao;
		end if;

		if (r_C01_w.ie_tipo_guia = 6) then
			select	max(ie_carater_internacao)
			into STRICT	ie_carater_internacao_w
			from	pls_conta
			where	ie_tipo_guia	= 5
			and	cd_guia		= r_c01_w.cd_guia_referencia;
		end if;
		
		tx_adm_w		:= substr(replace(replace(r_C02_w.tx_adm,',',''),'.',''),1,8);
		vl_servico_w		:= r_C02_w.vl_servico;
		vl_servico_filme_w	:= r_C02_w.vl_servico_filme;

		-- CONTAS DE ORIGEM A500
		cd_unimed_w	:= null;
		if (r_C01_w.ie_origem_conta = 'A') then
			ds_tipo_prestador_w		:= '07';

			begin
			select	max((	select	substr(b.cd_cooperativa, 0, 4)
					from	pls_congenere	b
					where	b.nr_sequencia	= a.nr_seq_congenere)),
				max(a.nr_seq_congenere)
			into STRICT	cd_unimed_w,
				nr_seq_congenere_w
			from	pls_protocolo_conta	a
			where	a.nr_sequencia		= r_C01_w.nr_seq_protocolo;
			exception
			when others then
				cd_unimed_w		:= null;
				nr_seq_congenere_w	:= null;
			end;

			if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
				select	pls_obter_nome_congenere(nr_seq_congenere_w)
				into STRICT	nm_cooperativa_w
				;

				select	max(cd_cgc)
				into STRICT	cd_cgc_congenere_w
				from	pls_congenere
				where	nr_sequencia	= nr_seq_congenere_w;
			end if;

			ds_prestador_contratado_w	:= coalesce(nm_cooperativa_w, 'Unimed');
			cd_prestador_executante_w	:= substr(cd_unimed_w,1,10);
			cd_unimed_w			:= substr(cd_unimed_w,1,4);

			begin
			select (	select	max(d.cd_cgc)
					from	pls_congenere		d
					where	lpad(c.cd_unimed_origem,4,'0')	= lpad(d.cd_cooperativa,4,'0'))
			into STRICT	cgc_unimed_origem_w
			from	pls_conta		a,
				ptu_nota_cobranca	b,
				ptu_fatura		c
			where	a.nr_seq_nota_cobranca	= b.nr_sequencia
			and	b.nr_seq_fatura		= c.nr_sequencia
			and	a.nr_sequencia		= r_C01_w.nr_seq_conta;
			--group	by a.nr_sequencia;
			exception
			when others then
				cgc_unimed_origem_w	:= null;
			end;
			
			begin
			nr_cpf_w			:= coalesce(cd_cgc_congenere_w, coalesce(cgc_unimed_origem_w, nr_cpf_w));
			exception
			when others then
				null;
			end;
			
		else
			cd_prestador_executante_w	:= substr(coalesce(cd_prest_a400_w,cd_prestador_w),1,10);
			cd_unimed_w			:= substr((pls_obter_unimed_estab(cd_estabelecimento_p))::numeric ,1,4);
			if (r_C01_w.nr_seq_prestador_exec IS NOT NULL AND r_C01_w.nr_seq_prestador_exec::text <> '') then
				begin
				select	CASE WHEN coalesce(a.cd_pessoa_fisica::text, '') = '' THEN pls_obter_dados_prestador(a.nr_sequencia,'CGC')  ELSE pls_obter_dados_prestador(a.nr_sequencia,'CPF') END
				into STRICT	nr_cpf_w
				from	pls_prestador	a
				where	a.nr_sequencia	= r_C01_w.nr_seq_prestador_exec;
				exception
				when others then
					nr_cpf_w	:= null;
				end;
			end if;
		end if;
		
		cd_unimed_w	:= lpad(cd_unimed_w,4,'0');
		
		-- CONTA DE "CONSULTA" OU "SP/SADT" BUSCA O NOME DO SOLICITANTE PELO PLS_CONTA.CD_MEDICO_SOLICITANTE (CONTA)
		if (r_C01_w.ie_tipo_guia in (3,4)) then
			cd_medico_solicitante_w	:= r_C01_w.cd_medico_solicitante;
		end if;
		
		if (cd_medico_solicitante_w IS NOT NULL AND cd_medico_solicitante_w::text <> '') then
			begin
				select	substr(ptu_somente_caracter_permitido(obter_nome_medico(cd_medico_solicitante_w,'N'),'ANS'),1,30)
				into STRICT	nm_prestador_solicitante_w
				;
			exception
			when others then
				nm_prestador_solicitante_w	:= null;
			end;
		end if;
		
		--BUSCA OS DADOS DO EXECUTANTE DO PARTICIPANTE, SE HOUVER
		if (r_c02_w.nr_seq_proc_participante IS NOT NULL AND r_c02_w.nr_seq_proc_participante::text <> '') and (r_c02_w.ie_pos_novo = 'N') then
			select	max(nr_seq_prestador)
			into STRICT	nr_seq_prestador_w
			from	pls_proc_participante
			where	nr_sequencia	= r_c02_w.nr_seq_proc_participante;
			
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_conta_pos_estab_partic
			where	nr_seq_conta_pos	= r_c02_w.nr_seq_conta_pos;
			
			--Caso existir apenas um participante e existir divergência nos valores faturados, então busca da tabela de contabilidade, onde os registros estão mais corretos
			if (qt_registros_w = 1) and
				((r_c02_w.vl_servico_number + r_c02_w.vl_servico_filme_number + r_c02_w.vl_administracao) <> r_c02_w.vl_total_faturado_number) then

				--Busca o valor da contabilidade, onde o existe o lote de faturamento para aquele item (tratamento para não buscar itens refaturados ou do recurso de glosa)
				select	campo_mascara_virgula(sum(coalesce(vl_medico,0) + coalesce(vl_custo_operacional_ind,0))),
					campo_mascara_virgula(sum(coalesce(vl_materiais,0))),
					campo_mascara_virgula(sum(coalesce(vl_administracao,0)))
				into STRICT	vl_servico_w,
					vl_servico_filme_w,
					tx_adm_w
				from	pls_conta_pos_estab_contab
				where	nr_seq_conta_pos	= r_c02_w.nr_seq_conta_pos;
				
				tx_adm_w := substr(replace(replace(tx_adm_w,',',''),'.',''),1,8);
			end if;
		end if;
		
		-- SENÃO BUSCA PELO PRESTADOR EXECUTOR DA PLS_CONTA
		if	((coalesce(nr_seq_prestador_w::text, '') = '') and (r_c01_w.nr_seq_prestador_exec IS NOT NULL AND r_c01_w.nr_seq_prestador_exec::text <> '')) or
			((cd_cgc_prestador_exec_w IS NOT NULL AND cd_cgc_prestador_exec_w::text <> '') and -- Se o prestador executor da conta for PJ, utiliza os dados do mesmo
			(r_c01_w.nr_seq_prestador_exec IS NOT NULL AND r_c01_w.nr_seq_prestador_exec::text <> '')) then
			nr_seq_prestador_w	:= r_c01_w.nr_seq_prestador_exec;
		end if;
		
		if (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') then
			select	cd_pessoa_fisica,
				cd_cgc
			into STRICT	cd_pessoa_fisica_w,
				cd_cgc_w
			from	pls_prestador
			where	nr_sequencia	= nr_seq_prestador_w;
			
			if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
				select	to_char(nr_cpf)
				into STRICT	cd_cpf_cnpj_executante_w
				from	pessoa_fisica
				where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
				
				cd_cpf_cnpj_executante_w	:= lpad(cd_cpf_cnpj_executante_w,11,'0');
				cd_cpf_cnpj_executante_w	:= lpad(cd_cpf_cnpj_executante_w,14,' ');
			else
				cd_cpf_cnpj_executante_w	:= cd_cgc_w;
			end if;
		else	-- CASO NÃO TENHA PRESTADOR EXECUTOR(A500) PEGA O CGC DA UNIMED ORIGEM
			cd_cpf_cnpj_executante_w	:= cgc_unimed_origem_w;
		end if;
		
		cd_cpf_cnpj_executante_w	:= lpad(cd_cpf_cnpj_executante_w,14,'0');
		cd_medico_executor_w		:= coalesce(r_C01_w.cd_medico_executor, r_C02_w.cd_medico);
		
		if (cd_medico_executor_w IS NOT NULL AND cd_medico_executor_w::text <> '') then
			begin
			select	b.nr_crm,
				a.nr_seq_conselho,
				b.uf_crm
			into STRICT	nr_crm_w,
				nr_seq_conselho_w,
				uf_crm_w
			from	medico			b,
				pessoa_fisica		a
			where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
			and	b.cd_pessoa_fisica	= cd_medico_executor_w;
			exception
			when others then
				nr_crm_w		:= null;
				nr_seq_conselho_w	:= null;
				uf_crm_w		:= null;
			end;

			begin
			select	sg_conselho
			into STRICT	sg_conselho_prof_w
			from	conselho_profissional
			where	coalesce(ie_situacao,'A')	= 'A'
			and	nr_sequencia		= nr_seq_conselho_w;
			exception
			when others then
				sg_conselho_prof_w := null;
			end;
		else
			nr_crm_w		:= null;
			nr_seq_conselho_w	:= null;
			uf_crm_w		:= null;
			sg_conselho_prof_w	:= null;
		end if;

		if (coalesce(trim(both r_C02_w.cd_cbo_part),'0') <> '0') then
			cd_cbo_w := r_C02_w.cd_cbo_part;
		end if;

		if (coalesce(trim(both cd_cbo_w),'0') = '0') then
			begin
			select	somente_numero(max(cd_cbo))
			into STRICT	cd_cbo_w
			from	sus_cbo_pessoa_fisica
			where	cd_pessoa_fisica = cd_medico_executor_w;
			exception
			when others then
				cd_cbo_w := null;
			end;
		end if;

		cd_cpf_cnpj_solicitante_w	:= '';

		if (r_C01_w.ie_tipo_guia in ('4','5')) and (cd_medico_solicitante_w IS NOT NULL AND cd_medico_solicitante_w::text <> '') then
			begin
				select	to_char(a.nr_cpf)
				into STRICT	cd_cpf_cnpj_solicitante_w
				from	medico				b,
					pessoa_fisica			a
				where	a.cd_pessoa_fisica		= b.cd_pessoa_fisica
				and	b.cd_pessoa_fisica		= cd_medico_solicitante_w;
			exception
			when others then
				cd_cpf_cnpj_solicitante_w	:= null;
			end;

			if (coalesce(trim(both cd_cbo_w),'0') = '0') then
				begin
				select	somente_numero(max(cd_cbo))
				into STRICT	cd_cbo_w
				from	sus_cbo_pessoa_fisica
				where	cd_pessoa_fisica = cd_medico_solicitante_w;
				exception
				when others then
					cd_cbo_w := null;
				end;
			end if;
			
			if (cd_cpf_cnpj_solicitante_w IS NOT NULL AND cd_cpf_cnpj_solicitante_w::text <> '') then
				cd_cpf_cnpj_solicitante_w	:= lpad(cd_cpf_cnpj_solicitante_w,11,'0');
				cd_cpf_cnpj_solicitante_w	:= lpad(cd_cpf_cnpj_solicitante_w,14,' ');
			end if;
		end if;

		if (nr_cpf_w IS NOT NULL AND nr_cpf_w::text <> '') and (coalesce(cd_cpf_cnpj_solicitante_w::text, '') = '') then
			cd_cpf_cnpj_solicitante_w	:= nr_cpf_w;
			
			if (length(nr_cpf_w) < 14) then
				cd_cpf_cnpj_solicitante_w	:= lpad(cd_cpf_cnpj_solicitante_w,11,'0');
				cd_cpf_cnpj_solicitante_w	:= lpad(cd_cpf_cnpj_solicitante_w,14,' ');
			end if;	
		end if;

		ds_prestador_contratado_w	:= substr(ptu_somente_caracter_permitido(ds_prestador_contratado_w,'ANS'),1,40);

		cd_despesa_w	:= null;
		if (r_C02_w.nr_seq_conta_proc IS NOT NULL AND r_C02_w.nr_seq_conta_proc::text <> '') then
			select	CASE WHEN r_C02_w.ie_tipo_despesa='1' THEN  '22' WHEN r_C02_w.ie_tipo_despesa='2' THEN  '18' WHEN r_C02_w.ie_tipo_despesa='3' THEN  '18' WHEN r_C02_w.ie_tipo_despesa='4' THEN  '98' END
			into STRICT	cd_tabela_w
			;

			select	CASE WHEN r_C02_w.ie_tipo_despesa='2' THEN  '4' WHEN r_C02_w.ie_tipo_despesa='3' THEN  '5' END
			into STRICT	cd_despesa_w
			;
		else

			if (coalesce(r_C02_w.nr_seq_tuss_mat_item::text, '') = '') then
				cd_tabela_w	:= '00';
			else
				select	CASE WHEN r_C02_w.ie_tipo_despesa='1' THEN  '18' WHEN r_C02_w.ie_tipo_despesa='2' THEN  '20' WHEN r_C02_w.ie_tipo_despesa='3' THEN  '19' WHEN r_C02_w.ie_tipo_despesa='7' THEN  '19' END
				into STRICT	cd_tabela_w
				;
			end if;
			
			select	CASE WHEN r_C02_w.ie_tipo_despesa='1' THEN  '1' WHEN r_C02_w.ie_tipo_despesa='2' THEN  '2' WHEN r_C02_w.ie_tipo_despesa='3' THEN  '3' WHEN r_C02_w.ie_tipo_despesa='7' THEN  '3' END
			into STRICT	cd_despesa_w
			;
		end if;
		
		/* Se não tiver carater de solicitação na PLS_CONTA é necessário verificar na função OPS - Contas de Intercâmbio (A500) */

		cd_carater_solic_w	:= null;
		if (coalesce(r_C01_w.ie_carater_internacao::text, '') = '') and (r_C01_w.nr_seq_nota_cobranca IS NOT NULL AND r_C01_w.nr_seq_nota_cobranca::text <> '') then
			select	to_char(ie_carater_atendimento)
			into STRICT	cd_carater_solic_w
			from	ptu_nota_cobranca
			where	nr_sequencia	= r_C01_w.nr_seq_nota_cobranca;
		else
			cd_carater_solic_w	:= r_C01_w.ie_carater_internacao;
		end  if;
		
		ds_indicacao_clinica_w := substr(replace(replace(ds_indicacao_clinica_w,chr(13),' '),chr(10),' '),1,100);
		
		if (coalesce(cd_cnes_w::text, '') = '') then
			cd_cnes_w := coalesce(r_C01_w.cd_cnes,'9999999');
		end if;
		
		if (coalesce(trim(both cd_cbo_w),'0') = '0') then
			cd_cbo_w := '999999';
		end if;
		
		-- 1257527 - O sistema prioriza o valor do campo 'pls_conta_pos_estabelecido.ds_item_ptu', visto que este é a descrição que pode ser alterada via análise de pós
		if (r_C02_w.ds_item_ptu IS NOT NULL AND r_C02_w.ds_item_ptu::text <> '') then
			ds_servico_w := substr(r_C02_w.ds_item_ptu, 1, 50);
		else
			-- Se for código genérico o sistema prioriza o 'pls_conta_mat.ds_material_imp' que é a descrição que vem por XML do prestador, caso não encontre utiliza o 'pls_material.ds_material'
			if (r_C02_w.nr_seq_conta_mat IS NOT NULL AND r_C02_w.nr_seq_conta_mat::text <> '') then
				if (ptu_obter_dados_serv_generico(somente_numero(r_C02_w.cd_servico),'SE') = 'S') then
					select	substr(coalesce(ds_material_imp, r_C02_w.ds_servico), 1, 50)
					into STRICT	ds_servico_w
					from	pls_conta_mat
					where	nr_sequencia = r_C02_w.nr_seq_conta_mat;
				else
					ds_servico_w := r_C02_w.ds_servico;
				end if;
			else
				ds_servico_w := r_C02_w.ds_servico;
			end if;
		end if;
		
		insert into pls_movto_arq_fundacao_txt(
			nr_seq_conta,					nr_seq_conta_proc,					nr_seq_conta_mat,
			nm_usuario,					nr_sequencia,						dt_atualizacao,
			dt_atualizacao_nrec,				nm_usuario_nrec,					cd_cid,
			nr_cons_profissional_exec,			cd_operadora_cnpj_cpf,					sg_cons_profissional_exec,
			uf_cons_profissional_exec,			cd_tipo_consulta,					cd_tipo_saida,
			cd_dependente,					cd_especialidade_prest,					cd_prestador_executante,
			cd_servico,					cd_sublocal,						cd_unimed,
			cd_usuario,					ds_especialidade_prest,					ds_prestador_contratado,
			cd_carater_solic,				ds_indicacao_clinica,					cd_cnes_exec,
			cd_tipo_atendimento,				ie_carater_atendimento,					cd_tipo_internacao,
			cd_regime_internacao,				qt_diaria_solicitada,					ie_tipo_acomodacao_aut,
			cd_motivo_saida,				ie_tipo_faturamento,					nr_guia_referencia,
			nr_seq_referencia_servico,			cd_despesa,						cd_tabela,
			cd_cpf_cnpj_executante,				dt_atendimento,						cd_cpf_cnpj_solicitante,
			ie_obito_mulher,				ie_obito_neonatal_precoce,				ie_obito_neonatal_tardio,
			nr_nasc_vivos,					nr_nasc_vivos_termo,					nr_nasc_mortos,
			nr_nasc_prematuros,				cid_obito,						nr_decl_obito,
			ie_tipo_guia,					cd_senha_aut,						dt_ano_senha_aut,
			nr_lote,					cd_guia,						nr_seq_servico_guia,
			cd_unimed_executora,				ds_servico,						ds_tipo_prestador,
			dt_alta,					dt_emissao,						dt_internacao,
			hr_entrada_hospital,				hr_saida_hospital,					hr_servico_executado,
			ie_ato_cooperativo,				ie_nivel_hospital,					ie_tipo_ato,
			ie_tipo_participacao,				ie_via_acesso,						nm_prestador_solicitante,
			nm_usuario_benef,				nr_contrato,						nr_contrato_interno,
			nr_documento,					nr_matricula,						nr_seq_lote,
			qt_servico,					tx_adm,							vl_servico,
			vl_servico_ch,					vl_servico_filme,					vl_servico_integral,
			ie_int_obst_gestacao,				ie_int_obst_aborto,					ie_int_obst_transt_mat,
			ie_int_obst_puerperio,				ie_int_obst_atend_parto,				ie_int_obst_compl_neonatal,
			ie_int_obst_baixo_peso,				ie_int_obst_parto_cesareo,				ie_int_obst_parto_normal,
			cd_registro_ans,				cd_cbos,						ie_atendimento_rn,
			ie_indicacao_acidente,				tx_reducao_acrescimo,					cd_unidade_medida,
			vl_unitario,					dt_inicio_faturamento,					dt_fim_faturamento,
			ie_taxa_adm)
		values (r_C01_w.nr_seq_conta,				r_C02_w.nr_seq_conta_proc,				r_C02_w.nr_seq_conta_mat,
			nm_usuario_p,					nextval('pls_movto_arq_fundacao_txt_seq'),			clock_timestamp(),
			clock_timestamp(),					nm_usuario_p,						cd_cid_w,
			nr_crm_w,					nr_cpf_w,						sg_conselho_prof_w,
			uf_crm_w,					r_C01_w.ie_tipo_consulta,				ie_motivo_saida_w,
			cd_depend_cart_w,				cd_especialidade_med_w,					cd_prestador_executante_w,
			r_C02_w.cd_servico,				cd_sublocal_w,						cd_unimed_cart_w,
			cd_usuari_cart_w,				ds_especialidade_w,					ds_prestador_contratado_w,
			coalesce(cd_carater_solic_w, 'E'),			ds_indicacao_clinica_w,					cd_cnes_w,
			lpad(ie_tipo_atendimento_w,2,'0'),		ie_carater_internacao_w,				ie_tipo_internacao_w,
			ie_regime_internacao_w,				r_C01_w.qt_diarias_sip,					ie_tipo_acom_guia_w,
			cd_motivo_saida_w,				ie_tipo_faturamento_w,					r_C01_w.cd_guia_referencia,
			'',						cd_despesa_w,						cd_tabela_w,
			cd_cpf_cnpj_executante_w,			to_char(r_C02_w.dt_atendimento,'ddmmyyyy'),		cd_cpf_cnpj_solicitante_w,
			r_C01_w.ie_obito_mulher,			r_C01_w.qt_obito_precoce,				r_C01_w.qt_obito_tardio,
			nr_declaracao_nasc_vivos_w,			r_C01_w.qt_nasc_vivos_termo,				r_C01_w.qt_nasc_mortos,
			r_C01_w.qt_nasc_vivos_prematuros,		cid_obito_w,						substr(nr_declaracao_obito_w,1,7),
			ie_tipo_guia_w,					cd_senha_w,						dt_autorizacao_w,
			nr_lote_w,					cd_guia_cd_guia_prestador_w,				substr(to_char(cont_item_w),1,5),
			cd_unimed_w,					ds_servico_w,						ds_tipo_prestador_w,
			dt_alta_format_w,				r_C01_w.dt_emissao,					dt_internacao_w,
			to_char(dt_entrada_w,'hh24mi'),			to_char(dt_alta_w,'hh24mi'),				to_char(dt_atendimento_w,'hh24mi'),
			ie_ato_cooperativo_w,				ie_nivel_hospital_w,					ie_tipo_ato_w,
			ie_tipo_participacao_w,				r_C02_w.ie_via_acesso,					nm_prestador_solicitante_w,
			r_C01_w.nm_usuario_benef,			cd_contra_cart_w,					cd_contra_cart_w, --r_C01_w.nr_contrato,
			cd_guia_cd_guia_prestador_w,			nr_matricula_w,						nr_seq_lote_p,
			r_C02_w.qt_servico,				tx_adm_w,						vl_servico_w,
			r_C02_w.vl_servico_ch,				vl_servico_filme_w,					r_C02_w.vl_servico_integral,
			r_C01_w.ie_gestacao,				r_C01_w.ie_obito,					r_C01_w.ie_transtorno,
			r_C01_w.ie_complicacao_puerperio,		r_C01_w.ie_atend_rn_sala_parto,				r_C01_w.ie_complicacao_neonatal,
			r_C01_w.ie_baixo_peso,				r_C01_w.ie_parto_cesaria,				r_C01_w.ie_parto_normal,
			cd_ans_w,					coalesce(r_C01_w.cd_cbo_conta,cd_cbo_w),			r_C01_w.ie_recem_nascido,
			r_C01_w.ie_indicacao_acidente,			r_C02_w.tx_item,					substr(r_C02_w.cd_unidade_medida,1,3),
			r_C02_w.vl_unitario,				to_char(r_C01_w.dt_ini_fat,'ddmmyyyy'),			to_char(r_C01_w.dt_fim_fat,'ddmmyyyy'),
			'S');
	end loop;
	
	-- alterado pois era feito este select e update em todos os itens da conta uma vez para cada item

	-- quando acredito que seja feito uma vez por conta para todos os itens
	select	max(ie_tipo_acomodacao_aut)
	into STRICT	ie_tipo_acom_guia_w
	from	pls_movto_arq_fundacao_txt
	where	(ie_tipo_acomodacao_aut IS NOT NULL AND ie_tipo_acomodacao_aut::text <> '')
	and	(nr_seq_conta_proc IS NOT NULL AND nr_seq_conta_proc::text <> '')
	and	nr_seq_conta		= r_C01_w.nr_seq_conta;

	update	pls_movto_arq_fundacao_txt
	set	ie_tipo_acomodacao_aut	= ie_tipo_acom_guia_w
	where	nr_seq_conta		= r_C01_w.nr_seq_conta;
end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_dados_arq_fund_item ( nr_seq_lote_p pls_lote_arq_fundacao_txt.nr_sequencia%type, nr_seq_fatura_p pls_fatura.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

