-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE substituir_lote_item_convenio (nr_seq_lote_p ap_lote.nr_sequencia%type, cd_material_p ap_lote_item.cd_material%type, nr_seq_mat_hor_p prescr_mat_hor.nr_sequencia%type, cd_material_subst_p INOUT ap_lote_item.cd_material%type, ie_item_substituido_p INOUT ap_lote_item.ie_item_substituido%type) AS $body$
DECLARE



cd_convenio_w			atend_categoria_convenio.cd_convenio%type;
cd_categoria_conv_w		atend_categoria_convenio.cd_categoria%type;
cd_plano_conv_w			convenio_plano.cd_plano%type;
ie_tipo_convenio_w		atendimento_paciente.ie_tipo_convenio%type;
nr_atendimento_w		ap_lote.nr_sequencia%type;
qt_existe_w				integer;
qt_substituido_w		integer;
nr_seq_lote_w			ap_lote.nr_sequencia%type := nr_seq_lote_p;
cd_material_w			ap_lote_item.cd_material%type := cd_material_p;
nr_seq_mat_hor_w		prescr_mat_hor.nr_sequencia%type := nr_seq_mat_hor_p;

regras CURSOR FOR
	SELECT	cd_material_subst
	from 	ap_lote_item_subs
	where	cd_material = cd_material_w
	and (coalesce(cd_convenio::text, '') = '' or cd_convenio = cd_convenio_w)
	and (coalesce(cd_categoria::text, '') = '' or cd_categoria = cd_categoria_conv_w)
	and (coalesce(cd_plano_convenio::text, '') = '' or cd_plano_convenio = cd_plano_conv_w)
	and (coalesce(ie_tipo_convenio::text, '') = '' or ie_tipo_convenio = ie_tipo_convenio_w);

BEGIN

ie_item_substituido_p := 'N';

/*Verifica se existe regra*/

select	coalesce(max(nr_sequencia),0)
into STRICT	qt_existe_w
from 	ap_lote_item_subs
where	cd_material = cd_material_w;

/*verifica se ja foi substituido*/

select 	coalesce(max(nr_sequencia),0)
into STRICT	qt_substituido_w
from	prescr_mat_hor a
where 	a.nr_sequencia = nr_seq_mat_hor_w
and 	a.cd_material = cd_material_w;

if (qt_existe_w > 0) and (qt_substituido_w > 0) then
	
	select	max(nr_atendimento)
	into STRICT	nr_atendimento_w
	from 	ap_lote
	where 	nr_sequencia = nr_seq_lote_w;
	
	cd_convenio_w 		:= Obter_Convenio_Atendimento(nr_atendimento_p => nr_atendimento_w);
	cd_plano_conv_w 	:= Obter_Plano_Convenio_Atend(nr_atendimento_p => nr_atendimento_w, ie_cod_desc_p => 'C');
	ie_tipo_convenio_w 	:= obter_tipo_convenio_atend(nr_atendimento_p => nr_atendimento_w);
	
	select  max(a.cd_categoria)
	into STRICT 	cd_categoria_conv_w
	from 	atend_categoria_convenio a join categoria_convenio b on
			a.cd_convenio			= b.cd_convenio	
	where	a.nr_atendimento		= nr_atendimento_w
	and 	a.cd_convenio			= cd_convenio_w;
	
	<<loop_regra>>
	for regrasList in regras loop
		cd_material_subst_p := regrasList.cd_material_subst;
		ie_item_substituido_p := 'S';
	end loop loop_regra;
end if;

if (coalesce(cd_material_subst_p::text, '') = '') then
	cd_material_subst_p := cd_material_p;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE substituir_lote_item_convenio (nr_seq_lote_p ap_lote.nr_sequencia%type, cd_material_p ap_lote_item.cd_material%type, nr_seq_mat_hor_p prescr_mat_hor.nr_sequencia%type, cd_material_subst_p INOUT ap_lote_item.cd_material%type, ie_item_substituido_p INOUT ap_lote_item.ie_item_substituido%type) FROM PUBLIC;

