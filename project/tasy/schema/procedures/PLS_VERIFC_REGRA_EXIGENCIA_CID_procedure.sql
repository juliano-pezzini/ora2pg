-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_verifc_regra_exigencia_cid ( nr_seq_requisicao_p bigint, nr_seq_guia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Verifica regra de exigência de cid informada na função OPS - Cadastro de Reras > OPS - Atendimento > Exigência CID, para glosar a guia caso a mesma se encaixe.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_retorno_w		bigint;
ie_tipo_guia_w			varchar(4);
ie_tipo_atendimento_w		varchar(4);
qt_registros_cid_w		bigint;
nr_seq_prestador_w		bigint;
ie_tipo_processo_w		varchar(2);
ie_tipo_intercambio_w		varchar(2);


BEGIN

if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	begin
		select	coalesce(ie_tipo_guia,'X'),
			coalesce(ie_tipo_atendimento,'X'),
			nr_seq_prestador,
			ie_tipo_processo,
			ie_tipo_intercambio
		into STRICT	ie_tipo_guia_w,
			ie_tipo_atendimento_w,
			nr_seq_prestador_w,
			ie_tipo_processo_w,
			ie_tipo_intercambio_w
		from	pls_requisicao
		where	nr_sequencia	= nr_seq_requisicao_p;
	exception
	when others then
		ie_tipo_guia_w		:= 'X';
		ie_tipo_atendimento_w	:= 'X';
		ie_tipo_processo_w	:= 'X';
		ie_tipo_intercambio_w	:= 'X';
	end;
elsif (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	begin
		select	coalesce(ie_tipo_guia,'X'),
			coalesce(ie_tipo_atend_tiss,'X'),
			nr_seq_prestador,
			ie_tipo_processo,
			ie_tipo_intercambio
		into STRICT	ie_tipo_guia_w,
			ie_tipo_atendimento_w,
			nr_seq_prestador_w,
			ie_tipo_processo_w,
			ie_tipo_intercambio_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_guia_p;
	exception
	when others then
		ie_tipo_guia_w		:= 'X';
		ie_tipo_atendimento_w	:= 'X';
		ie_tipo_processo_w	:= 'X';
		ie_tipo_intercambio_w	:= 'X';
	end;
end if;

if (pls_obter_se_controle_estab('RE') = 'S')then
	begin
		select	max(nr_sequencia)
		into STRICT	nr_seq_retorno_w
		from	pls_regra_exige_cid_aut
		where (coalesce(ie_tipo_guia::text, '') = ''	or ie_tipo_guia		= ie_tipo_guia_w)
		and (coalesce(ie_tipo_atend_tiss::text, '') = ''	or ie_tipo_atend_tiss	= ie_tipo_atendimento_w)
		and 	coalesce(cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento;
	exception
	when others then
		nr_seq_retorno_w	:= 0;
	end;
else
	begin
		select	max(nr_sequencia)
		into STRICT	nr_seq_retorno_w
		from	pls_regra_exige_cid_aut
		where (coalesce(ie_tipo_guia::text, '') = ''	or ie_tipo_guia		= ie_tipo_guia_w)
		and (coalesce(ie_tipo_atend_tiss::text, '') = ''	or ie_tipo_atend_tiss	= ie_tipo_atendimento_w);
	exception
	when others then
		nr_seq_retorno_w	:= 0;
	end;
end if;

if (coalesce(nr_seq_retorno_w,0)	<> 0 ) and (coalesce(ie_tipo_intercambio_w,'X')	<> 'E') then
	if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
		select	count(1)
		into STRICT	qt_registros_cid_w
		from	pls_requisicao_diagnostico
		where	nr_seq_requisicao	= nr_seq_requisicao_p;

		if (qt_registros_cid_w	= 0) then
			CALL pls_gravar_requisicao_glosa(	'1508', nr_seq_requisicao_p, null,
							null, '', nm_usuario_p,
							nr_seq_prestador_w, cd_estabelecimento_p, null,
							null);
		end if;
	elsif (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
		select	count(1)
		into STRICT	qt_registros_cid_w
		from	pls_diagnostico
		where	nr_seq_guia	= nr_seq_guia_p;
		if (qt_registros_cid_w	= 0) then
			CALL pls_gravar_motivo_glosa(	'1508',nr_seq_guia_p,null,
							null,'',nm_usuario_p,
							'','CG',nr_seq_prestador_w,
							null,null);
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_verifc_regra_exigencia_cid ( nr_seq_requisicao_p bigint, nr_seq_guia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

