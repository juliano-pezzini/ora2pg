-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_presc_mat_lib_indiv ( nr_prescricao_p bigint, ie_momento_p text, cd_perfil_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


c01 CURSOR FOR
	SELECT 	b.nr_sequencia,
			coalesce(a.cd_grupo_material,0),
			coalesce(a.cd_subgrupo_material,0),
			coalesce(a.cd_classe_material,0),
			coalesce(a.nr_seq_familia,0),
			coalesce(a.cd_material,0),
			CASE WHEN coalesce(b.ie_agrupador,0)=13 THEN 'S'  ELSE 'N' END  ie_hemodialise
	from   	estrutura_material_v a,
			prescr_material b
	where	a.cd_material 	= b.cd_material
	and		b.nr_prescricao	= nr_prescricao_p
	and		not exists (SELECT 1 from prescr_mat_hor x where x.nr_prescricao = b.nr_prescricao and x.nr_seq_material = b.nr_sequencia and (x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> ''));

nr_sequencia_w		bigint;
cd_grupo_material_w	integer;
cd_subgrupo_material_w	integer;
cd_classe_material_w	integer;
nr_seq_familia_w	bigint;
cd_material_w		integer;
ie_tem_regra_w		varchar(1):='N';
ie_hemodialise_w  	varchar(1):='N';


BEGIN

open c01;
loop
fetch c01 into
	nr_sequencia_w,
	cd_grupo_material_w,
	cd_subgrupo_material_w,
	cd_classe_material_w,
	nr_seq_familia_w,
	cd_material_w,
	ie_hemodialise_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	select 	coalesce(max('S'),'N')
	into STRICT	ie_tem_regra_w
	from   	regra_gerar_hor_lib
	where  	coalesce(cd_grupo_material,cd_grupo_material_w) = cd_grupo_material_w
	and		coalesce(cd_subgrupo_material,cd_subgrupo_material_w) = cd_subgrupo_material_w
	and		coalesce(cd_classe_material,cd_classe_material_w) = cd_classe_material_w
	and		coalesce(nr_seq_familia,nr_seq_familia_w) = nr_seq_familia_w
	and		coalesce(cd_material,cd_material_w) = cd_material_w
	and 	coalesce(ie_hemodialise,ie_hemodialise_w) = ie_hemodialise_w
	and		ie_momento = ie_momento_p;

	if (ie_tem_regra_w = 'S') then
		CALL Gerar_prescr_mat_sem_dt_lib(nr_prescricao_p,nr_sequencia_w,cd_perfil_p,'S',nm_usuario_p,null);
		if (ie_momento_p = 'E') and (ie_hemodialise_w = 'S') then

				select 	coalesce(max('S'),'N')
				into STRICT	ie_tem_regra_w
				from   	regra_gerar_hor_lib
				where  	coalesce(cd_grupo_material,cd_grupo_material_w) = cd_grupo_material_w
				and		coalesce(cd_subgrupo_material,cd_subgrupo_material_w) = cd_subgrupo_material_w
				and		coalesce(cd_classe_material,cd_classe_material_w) = cd_classe_material_w
				and		coalesce(nr_seq_familia,nr_seq_familia_w) = nr_seq_familia_w
				and		coalesce(cd_material,cd_material_w) = cd_material_w
				and 	ie_hemodialise = ie_hemodialise_w
				and		ie_momento = ie_momento_p;

				if (ie_tem_regra_w = 'S') then
						update 	prescr_medica
						set		ie_lib_farm = 'N'
						where	nr_prescricao = nr_prescricao_p;
				end if;

		end if;
	end if;
	end;
end loop;
close c01;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_presc_mat_lib_indiv ( nr_prescricao_p bigint, ie_momento_p text, cd_perfil_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

