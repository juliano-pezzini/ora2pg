-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE suspender_hor_item_posterior ( nr_prescricao_p bigint, nr_seq_item_p bigint, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, nm_tabela_p text) AS $body$
DECLARE


nr_sequencia_w		prescr_mat_hor.nr_sequencia%type;
ds_erro_w			varchar(255);
ie_suspendeu_w		boolean := false;
ds_mensagem_susp_w	varchar(30);
nr_seq_lote_w					ap_lote.nr_sequencia%type;
nr_seq_lote_ant_w				ap_lote.nr_sequencia%type := 0;
reg_integracao_p				gerar_int_padrao.reg_integracao;
cd_local_estoque_w				local_estoque.cd_local_estoque%type;
cd_setor_atendimento_w			setor_atendimento.cd_setor_atendimento%type;

/* PRESCR_MATERIAL */

c01 CURSOR FOR
SELECT	nr_sequencia
from	prescr_mat_hor
where	nr_prescricao	= nr_prescricao_p
and		nr_seq_material = nr_seq_item_p
and		dt_horario 		>= clock_timestamp()
and		coalesce(coalesce(dt_suspensao,dt_fim_horario)::text, '') = ''
and		Obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S'
order by
	dt_horario;

C07 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_local_estoque,
		a.cd_setor_atendimento
	from	ap_lote a,
		prescr_mat_hor b
	where	a.nr_prescricao = b.nr_prescricao
	and	a.nr_prescricao = nr_prescricao_p
	and	b.nr_seq_material = nr_seq_item_p
	and	coalesce(b.dt_suspensao::text, '') = ''
	and	a.ie_status_lote = 'G'
	and	Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S'
	order by 1;
	

BEGIN

if (nm_tabela_p = 'PRESCR_MATERIAL') then
	-- Suspensao do horario na REP
	ds_mensagem_susp_w	:= substr(wheb_mensagem_pck.get_texto(289835) || '.',1,30);
	
	open C07;
	loop
	fetch C07 into	
		nr_seq_lote_w,
		cd_local_estoque_w,
		cd_setor_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C07 */
		begin
		if (nr_seq_lote_w <> nr_seq_lote_ant_w) then
			reg_integracao_p.cd_estab_documento	:= wheb_usuario_pck.get_cd_estabelecimento;
			reg_integracao_p.cd_local_estoque	:= cd_local_estoque_w;
			reg_integracao_p.nr_seq_agrupador	:= nr_seq_lote_w;
			reg_integracao_p.cd_setor_atendimento	:= cd_setor_atendimento_w;
			reg_integracao_p := gerar_int_padrao.gravar_integracao('275', nr_seq_lote_w, nm_usuario_p, reg_integracao_p);
		end if;	
		nr_seq_lote_ant_w := nr_seq_lote_w;
		end;
	end loop;
	close C07;
	
	
	open C01;
	loop
	fetch C01 into	
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		ds_erro_w := Consiste_susp_prescr_mat_hor(nr_prescricao_p, nr_sequencia_w, cd_estabelecimento_p, nm_usuario_p, ds_erro_w);
		if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
			-- #@ERRO#@
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(214150,'ERRO='||ds_erro_w);	
		else
			ie_suspendeu_w := true;
			CALL suspender_prescr_mat_hor(nr_sequencia_w, nm_usuario_p, null, ds_mensagem_susp_w ,'N',null);
		end if;
		
	end loop;
	close C01;

	if (ie_suspendeu_w) then
		update	prescr_material
		set		nm_usuario_susp_agora = nm_usuario_p,
				dt_susp_agora = clock_timestamp()
		where	nr_prescricao	= nr_prescricao_p
		and		nr_sequencia = nr_seq_item_p;
		
		commit;
	end if;
	
	nr_seq_lote_ant_w := 0;
	
	open C07;
	loop
	fetch C07 into	
		nr_seq_lote_w,
		cd_local_estoque_w,
		cd_setor_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C07 */
		begin
		if (nr_seq_lote_w <> nr_seq_lote_ant_w) then
			reg_integracao_p.cd_estab_documento	:= wheb_usuario_pck.get_cd_estabelecimento;
			reg_integracao_p.cd_local_estoque	:= cd_local_estoque_w;
			reg_integracao_p.nr_seq_agrupador	:= nr_seq_lote_w;
			reg_integracao_p.cd_setor_atendimento	:= cd_setor_atendimento_w;
			reg_integracao_p := gerar_int_padrao.gravar_integracao('260', nr_seq_lote_w, nm_usuario_p, reg_integracao_p);
		end if;	
		nr_seq_lote_ant_w := nr_seq_lote_w;
		end;
	end loop;
	close C07;
	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE suspender_hor_item_posterior ( nr_prescricao_p bigint, nr_seq_item_p bigint, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, nm_tabela_p text) FROM PUBLIC;

