-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_comunicar_hist_usuarios ( nr_seq_ordem_serv_p bigint, ds_comunicado_p text, ds_titulo_p text, ds_perfil_adicional_p text, ds_setor_adicional_p text, nm_usuario_destino_p text, ie_anexo_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_transf_anexo_p text, nr_seq_grupo_usuario_p bigint, nr_seq_agrupamento_p bigint) AS $body$
DECLARE



c01 CURSOR FOR
SELECT	ds_arquivo
from	man_ordem_serv_arq
where	ie_anexar_email	= 'S'
and	nr_seq_ordem 	= nr_seq_ordem_serv_p;

c02 CURSOR FOR
SELECT	distinct
	nm_usuario_grupo
from	usuario_grupo
where	nr_seq_grupo	= nr_seq_grupo_usuario_p
and	ie_situacao	= 'A';

C03 CURSOR FOR
	SELECT	cd_setor_atendimento
	from	setor_atendimento
	where	coalesce(ie_situacao,'A') = 'A'
	and	nr_seq_agrupamento = nr_seq_agrupamento_p
	order by 1;

nr_sequencia_w			bigint;
ds_arquivo_w			varchar(255);
nr_seq_classif_w		bigint;
ds_caminho_w			varchar(255);
nm_usuario_grupo_w		varchar(15);
ds_usuarios_destino_w		varchar(4000) := '';
ds_dano_breve_w			varchar(255) := '';
ds_dano_w			varchar(4000):= '';
ds_comunicado_w			varchar(32000);
VarD2010_w			boolean;
ds_pos_inicio_rtf_w		bigint;
ds_pos_inicio_rtf_java_w	bigint;
cd_setor_agrupamento_w		integer;
ds_setores_agrupados_w		varchar(2000) := '';


BEGIN
ds_usuarios_destino_w := nm_usuario_destino_p;
VarD2010_w			:= False;

select	substr(wheb_mensagem_pck.get_texto(305951)|| ' ' || substr(ds_dano_breve,1,242),1,255),
	substr(wheb_mensagem_pck.get_texto(305952)|| ' ' || substr(ds_dano,1,3994),1,4000)
into STRICT	ds_dano_breve_w,
	ds_dano_w
from	man_ordem_servico
where	nr_sequencia	= nr_seq_ordem_serv_p;

select	max(obter_valor_param_usuario(299, 183, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p))
into STRICT	ds_caminho_w
;

select	obter_classif_comunic('F')
into STRICT	nr_seq_classif_w
;

if (coalesce(nr_seq_grupo_usuario_p,0) > 0) then
	open C02;
	loop
	fetch C02 into
		nm_usuario_grupo_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		ds_usuarios_destino_w := substr(ds_usuarios_destino_w || nm_usuario_grupo_w || ',',1,4000);
		end;
	end loop;
	close C02;
end if;

if (nr_seq_agrupamento_p IS NOT NULL AND nr_seq_agrupamento_p::text <> '') then
	begin
	open C03;
	loop
	fetch C03 into
		cd_setor_agrupamento_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		ds_setores_agrupados_w	:= substr(ds_setores_agrupados_w || cd_setor_agrupamento_w || ',',1,2000);
		end;
	end loop;
	close C03;
	end;
end if;

select	nextval('comunic_interna_seq')
into STRICT	nr_sequencia_w
;


/*Pega o cabecalho do RTF*/

if (position('deflang1046' in ds_comunicado_p) > 0) then     --Delphi 2010
	begin
	VarD2010_w 		:= True;
	ds_pos_inicio_rtf_w 	:= position('\f0\fs20' in ds_comunicado_p) +8;

	ds_comunicado_w 	:= substr(ds_comunicado_p,1,ds_pos_inicio_rtf_w);
	end;
elsif (position('JWord2' in ds_comunicado_p) > 0) then
	begin
	ds_pos_inicio_rtf_java_w 	:= position('JWord2' in ds_comunicado_p) + 8;

	ds_comunicado_w 	:= substr(ds_comunicado_p,1,ds_pos_inicio_rtf_java_w);
	end;
else
	begin
	ds_pos_inicio_rtf_w 	:= position('lang1046' in ds_comunicado_p) +8;

	ds_comunicado_w 	:= substr(ds_comunicado_p,1,ds_pos_inicio_rtf_w) || 'fs20 ';
	end;
end if;

if (ds_pos_inicio_rtf_w <> 8) then /* RTF */
	begin
	ds_comunicado_w 	:= ds_comunicado_w || chr(13) || chr(10) || ds_dano_breve_w || '\par ' || '\par ' ||
					chr(13) || chr(10) || ds_dano_w || '\par ' || '\par ' ||
					wheb_mensagem_pck.get_texto(305953)|| ' ' || '\par ';

	/*Acrecenta resto do conteudo do RTF*/

	ds_comunicado_w := ds_comunicado_w || '\par ';

	if (VarD2010_w) then     --Delphi 2010
		ds_comunicado_w := ds_comunicado_w || '\f0\fs20';
	end if;

	ds_comunicado_w := ds_comunicado_w || substr(ds_comunicado_p,ds_pos_inicio_rtf_w,length(ds_comunicado_p));
	end;
elsif (ds_pos_inicio_rtf_java_w <> 8) then /* RTF */
	begin

	ds_comunicado_w 	:= ds_comunicado_w || chr(13) || chr(10) || ds_dano_breve_w || '\par ' || '\par ' ||
					chr(13) || chr(10) || ds_dano_w || '\par ' || '\par ' ||
					wheb_mensagem_pck.get_texto(305953) || '\par ';

	/*Acrecenta resto do conteudo do RTF*/

	ds_comunicado_w := ds_comunicado_w || '\par ';

	if (VarD2010_w) then     --Delphi 2010
		ds_comunicado_w := ds_comunicado_w || '\f0\fs20';
	end if;

	ds_comunicado_w := ds_comunicado_w || substr(ds_comunicado_p,ds_pos_inicio_rtf_java_w,length(ds_comunicado_p));
	end;
elsif (ds_pos_inicio_rtf_w = 8) then
	ds_comunicado_w		:= substr(	ds_dano_breve_w || chr(13) || chr(10) || chr(13) || chr(10) ||
						ds_dano_w || chr(13) || chr(10) || chr(13) || chr(10) ||
						wheb_mensagem_pck.get_texto(305953)|| chr(13) || chr(10) || chr(13) || chr(10) || ds_comunicado_p,1,32000);
end if;

insert into comunic_interna(
	dt_comunicado,
	ds_titulo,
	ds_comunicado,
	nm_usuario,
	dt_atualizacao,
	ie_geral,
	nm_usuario_destino,
	nr_sequencia,
	ie_gerencial,
	nr_seq_classif,
	dt_liberacao,
	ds_perfil_adicional,
	ds_setor_adicional)
values (	clock_timestamp(),
	ds_titulo_p,
	ds_comunicado_w,
	nm_usuario_p,
	clock_timestamp(),
	'N',
	ds_usuarios_destino_w,
	nr_sequencia_w,
	'N',
	nr_seq_classif_w,
	clock_timestamp(),
	ds_perfil_adicional_p,
	substr(ds_setores_agrupados_w || ds_setor_adicional_p,1,2000));

if (ie_anexo_p = 'S') then
	begin
	open C01;
	loop
	fetch C01 into
		ds_arquivo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		if (ie_transf_anexo_p = 'S') then
			while(position('\' in ds_arquivo_w) > 0) loop
				begin
				ds_arquivo_w := substr(ds_arquivo_w,position('\' in ds_arquivo_w)+1, length(ds_arquivo_w));
				end;
			end loop;
		ds_arquivo_w := ds_caminho_w||ds_arquivo_w;
		end if;

		insert into comunic_interna_arq(
					nr_sequencia,
					nr_seq_comunic,
					dt_atualizacao,
					nm_usuario,
					ds_arquivo)
				values (	nextval('comunic_interna_arq_seq'),
					nr_sequencia_w,
					clock_timestamp(),
					nm_usuario_p,
					ds_arquivo_w);
		end;
	end loop;
	close C01;
	end;
end if;

Insert into man_ordem_serv_envio(
	nr_sequencia,
	nr_seq_ordem,
	dt_atualizacao,
	nm_usuario,
	dt_envio,
	ie_tipo_envio,
	ds_destino,
	ds_observacao)
values (	nextval('man_ordem_serv_envio_seq'),
	nr_seq_ordem_serv_p,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	'I',
	coalesce(substr(nm_usuario_destino_p,1,255),wheb_mensagem_pck.get_texto(305955)),
	wheb_mensagem_pck.get_texto(305956));
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_comunicar_hist_usuarios ( nr_seq_ordem_serv_p bigint, ds_comunicado_p text, ds_titulo_p text, ds_perfil_adicional_p text, ds_setor_adicional_p text, nm_usuario_destino_p text, ie_anexo_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_transf_anexo_p text, nr_seq_grupo_usuario_p bigint, nr_seq_agrupamento_p bigint) FROM PUBLIC;

