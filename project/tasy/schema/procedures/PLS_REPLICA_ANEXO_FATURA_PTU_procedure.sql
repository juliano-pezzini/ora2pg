-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_replica_anexo_fatura_ptu ( nr_seq_fatura_p ptu_fatura.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: replica os anexos pertinentes as contas geradas na importação do A500 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ X] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
nr_seq_conta_w			pls_util_cta_pck.t_number_table;
nr_seq_analise_w		pls_util_cta_pck.t_number_table;
ds_arquivo_w			pls_util_cta_pck.t_varchar2_table_255;
qt_registro_transacao_w		integer := 2000;

-- Carrega as informações para os anexos de conta 
c01 CURSOR(	nr_seq_fatura_pc	ptu_fatura.nr_sequencia%type) FOR 
	SELECT	c.nr_sequencia nr_seq_conta, 
		a.ds_arquivo 
	from	ptu_nota_cobranca_anexo	a, 
		ptu_nota_cobranca	b, 
		pls_conta		c 
	where	b.nr_sequencia		= a.nr_seq_nota_cobr 
	and	c.nr_seq_nota_cobranca	= b.nr_sequencia 
	and	b.nr_seq_fatura		= nr_seq_fatura_pc 
	and	not exists (	SELECT	1 
				from	pls_conta_anexo	x 
				where	x.nr_seq_conta	= c.nr_sequencia 
				and	x.ds_anexo	= a.ds_arquivo);

-- Carrega as informações para os anexos de conta 
c02 CURSOR(	nr_seq_fatura_pc	ptu_fatura.nr_sequencia%type) FOR 
	SELECT	c.nr_seq_analise, 
		a.ds_arquivo 
	from	ptu_nota_cobranca_anexo	a, 
		ptu_nota_cobranca	b, 
		pls_conta		c 
	where	b.nr_sequencia		= a.nr_seq_nota_cobr 
	and	c.nr_seq_nota_cobranca	= b.nr_sequencia 
	and	b.nr_seq_fatura		= nr_seq_fatura_pc 
	and	not exists (	SELECT	1 
				from	pls_analise_conta_anexo	x 
				where	x.nr_seq_analise	= c.nr_seq_analise 
				and	x.ds_arquivo		= a.ds_arquivo);

BEGIN
 
if (nr_seq_fatura_p IS NOT NULL AND nr_seq_fatura_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then 
	 
	-- Replica para as contas 
	open c01(nr_seq_fatura_p);
	loop 
	nr_seq_conta_w.delete;
	ds_arquivo_w.delete;
	 
	fetch c01 bulk collect into nr_seq_conta_w, ds_arquivo_w limit qt_registro_transacao_w;
	exit when nr_seq_conta_w.count = 0;
	 
		-- replica para as contas 
		forall i in nr_seq_conta_w.first..nr_seq_conta_w.last 
			insert into pls_conta_anexo(	nr_sequencia, 
							nr_seq_conta, 
							dt_anexo, 
							ds_anexo, 
							dt_atualizacao, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec) 
			values (	nextval('pls_conta_anexo_seq'), 
					nr_seq_conta_w(i), 
					clock_timestamp(), 
					ds_arquivo_w(i), 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p);
		commit;
	 
	end loop; -- fim c01 - contas 
	 
	-- Replica para as analises 
	open c02(nr_seq_fatura_p);
	loop 
	nr_seq_analise_w.delete;
	ds_arquivo_w.delete;
	 
	fetch c02 bulk collect into nr_seq_analise_w, ds_arquivo_w limit qt_registro_transacao_w;
	exit when nr_seq_analise_w.count = 0;
 
		-- replica para as analises 
		forall i in nr_seq_analise_w.first..nr_seq_analise_w.last 
			insert into pls_analise_conta_anexo(	nr_sequencia, 
								nr_seq_analise, 
								dt_anexo, 
								ds_arquivo, 
								dt_atualizacao, 
								nm_usuario, 
								dt_atualizacao_nrec, 
								nm_usuario_nrec) 
			values (	nextval('pls_analise_conta_anexo_seq'), 
					nr_seq_analise_w(i), 
					clock_timestamp(), 
					ds_arquivo_w(i), 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p);
		commit;
		 
	end loop; -- fim c02 - analise 
	
 
	 
	 
	 
 
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_replica_anexo_fatura_ptu ( nr_seq_fatura_p ptu_fatura.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

