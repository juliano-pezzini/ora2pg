-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_evento_pac ( nr_seq_evento_p bigint, nr_seq_laudo_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_forma_ev_w		varchar(15);
ie_pessoa_destino_w	varchar(15);
cd_pf_destino_w		varchar(10);
ds_mensagem_w		varchar(4000);
ds_titulo_w		varchar(100);
cd_pessoa_destino_w	varchar(10);
nr_sequencia_w		bigint;
ds_maquina_w		varchar(80);
nm_paciente_w		varchar(60);
ds_unidade_w		varchar(60);
ds_setor_atendimento_w	varchar(60);
ie_usuario_aceite_w	varchar(1);
qt_corresp_w		integer;
cd_setor_atendimento_w	integer;
cd_perfil_w		integer;
cd_pessoa_regra_w	varchar(10);
nr_seq_evento_w		bigint;
nr_atendimento_w	bigint;
cd_pessoa_fisica_w	varchar(10);
nm_usuario_destino_w	varchar(15);
cd_setor_atend_pac_w	bigint;
nr_seq_grupo_usuario_w	bigint;

C01 CURSOR FOR
	SELECT	ie_forma_ev,
		ie_pessoa_destino,
		cd_pf_destino,
		coalesce(ie_usuario_aceite,'N'),
		cd_setor_atendimento,
		cd_perfil,
		nr_seq_grupo_usuario
	from	ev_evento_regra_dest
	where	nr_seq_evento	=	nr_seq_evento_w
	and		coalesce(cd_setor_atend_pac,cd_setor_atend_pac_w)	= cd_setor_atend_pac_w
	order by ie_forma_ev;

C02 CURSOR FOR
	SELECT	obter_dados_usuario_opcao(nm_usuario,'C')
	from	usuario_setor_v
	where	cd_setor_atendimento = cd_setor_atendimento_w
	and	ie_forma_ev_w in (2,3)
	and	(obter_dados_usuario_opcao(nm_usuario,'C') IS NOT NULL AND (obter_dados_usuario_opcao(nm_usuario,'C'))::text <> '');

C03 CURSOR FOR
	SELECT	obter_dados_usuario_opcao(nm_usuario,'C'),
		nm_usuario
	from	usuario_perfil
	where	cd_perfil = cd_perfil_w
	and	ie_forma_ev_w in (2,3)
	and	(obter_dados_usuario_opcao(nm_usuario,'C') IS NOT NULL AND (obter_dados_usuario_opcao(nm_usuario,'C'))::text <> '');

c05 CURSOR FOR
	SELECT	x.cd_medico
	from	prescr_medica x
	where	x.nr_atendimento	= nr_atendimento_w
	and		x.dt_prescricao  between clock_timestamp() - interval '36 days'/24 and clock_timestamp()
	
union

	SELECT	x.cd_medico
	from	evolucao_paciente x
	where	x.nr_atendimento	= nr_atendimento_w
	and		x.ie_tipo_evolucao = 1
	and		x.dt_evolucao  between clock_timestamp() - interval '36 days'/24 and clock_timestamp();


C09 CURSOR FOR
	SELECT	obter_dados_usuario_opcao(b.nm_usuario_grupo,'C')
	from	usuario_grupo b
	where	b.ie_situacao = 'A'
	and	ie_forma_ev_w in (2,3)
	and	(obter_dados_usuario_opcao(b.nm_usuario_grupo,'C') IS NOT NULL AND (obter_dados_usuario_opcao(b.nm_usuario_grupo,'C'))::text <> '')
	and	b.nr_seq_grupo = nr_seq_grupo_usuario_w;



BEGIN
select	substr(obter_inf_sessao(0),1,80)
into STRICT	ds_maquina_w
;


select	nr_seq_evento,
	nr_atendimento,
	cd_pessoa_fisica
into STRICT	nr_seq_evento_w,
	nr_atendimento_w,
	cd_pessoa_fisica_w
from	ev_evento_paciente
where	nr_sequencia	=	nr_seq_evento_p;

begin
cd_setor_atend_pac_w	:= coalesce(obter_setor_atendimento(nr_atendimento_w),0);

exception
when others then
	cd_setor_atend_pac_w	:= 0;
end;



update	ev_evento_paciente
set	dt_liberacao	=	clock_timestamp(),
	nm_usuario	=	nm_usuario_p
where	nr_sequencia	=	nr_seq_evento_p
and	coalesce(dt_liberacao::text, '') = '';
if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

open C01;
loop
fetch C01 into
	ie_forma_ev_w,
	ie_pessoa_destino_w,
	cd_pf_destino_w,
	ie_usuario_aceite_w,
	cd_setor_atendimento_w,
	cd_perfil_w,
	nr_seq_grupo_usuario_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	qt_corresp_w	:= 1;
	if (ie_pessoa_destino_w = '1') then /* Médico do atendimento */
		begin
		select	max(cd_medico_atendimento)
		into STRICT	cd_pessoa_destino_w
		from	atendimento_paciente
		where	nr_atendimento	= nr_atendimento_w;
		end;
	elsif (ie_pessoa_destino_w = '2') then /*Médico responsável pelo paciente*/
		begin
		select	max(cd_medico_resp)
		into STRICT	cd_pessoa_destino_w
		from	atendimento_paciente
		where	nr_atendimento	= nr_atendimento_w;
		end;
	elsif (ie_pessoa_destino_w = '3') then /*Médico laudante*/
		begin
		select	max(cd_medico_resp)
		into STRICT	cd_pessoa_destino_w
		from	laudo_paciente
		where	nr_sequencia	= nr_seq_laudo_p;
		end;
	elsif (ie_pessoa_destino_w = '4') then /*Médico referido*/
		begin
		select	max(cd_medico_referido)
		into STRICT	cd_pessoa_destino_w
		from	atendimento_paciente
		where	nr_atendimento	= nr_atendimento_w;
		end;
	elsif (ie_pessoa_destino_w = '5') or (ie_pessoa_destino_w = '12') then /*Pessoa fixa ou Usuário fixo*/
		cd_pessoa_destino_w	:= cd_pf_destino_w;
	elsif (ie_pessoa_destino_w = '14') then /*Méd aux*/
		begin
		open C05;
		loop
		fetch C05 into
			cd_pessoa_destino_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin
			qt_corresp_w	:= 1;

			if (ie_usuario_aceite_w = 'S') then
				select	count(*)
				into STRICT	qt_corresp_w
				from	pessoa_fisica_corresp
				where	cd_pessoa_fisica	= cd_pessoa_destino_w
				and	ie_tipo_corresp		= CASE WHEN ie_forma_ev_w='1' THEN 'MCel' WHEN ie_forma_ev_w='3' THEN 'CI' WHEN ie_forma_ev_w='4' THEN 'Email' END
				and	ie_tipo_doc		= 'AE';
			end if;


			if (qt_corresp_w > 0) then

				insert into ev_evento_pac_destino(
					nr_sequencia,
					nr_seq_ev_pac,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_pessoa_fisica,
					ie_forma_ev,
					ie_status,
					dt_ciencia,
					ie_pessoa_destino,
					dt_evento)
				values (	nextval('ev_evento_pac_destino_seq'),
					nr_seq_evento_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_pessoa_destino_w,
					ie_forma_ev_w,
					'G',
					null,
					ie_pessoa_destino_w,
					clock_timestamp());
				end if;
			end;
		end loop;
		close C05;
		end;
		cd_pessoa_destino_w	:= null;
	end if;

	if (ie_usuario_aceite_w = 'S') and (cd_pessoa_destino_w IS NOT NULL AND cd_pessoa_destino_w::text <> '') and (ie_forma_ev_w = '1') then
		begin
		select	count(*)
		into STRICT	qt_corresp_w
		from	pessoa_fisica_corresp
		where	cd_pessoa_fisica	= cd_pessoa_destino_w
		and	ie_tipo_corresp		= 'MCel'
		and	ie_tipo_doc		= 'AE';
		end;
	elsif (ie_usuario_aceite_w = 'S') and (cd_pessoa_destino_w IS NOT NULL AND cd_pessoa_destino_w::text <> '') and (ie_forma_ev_w = '3') then
		begin
		select	count(*)
		into STRICT	qt_corresp_w
		from	pessoa_fisica_corresp
		where	cd_pessoa_fisica	= cd_pessoa_destino_w
		and	ie_tipo_corresp		= 'CI'
		and	ie_tipo_doc		= 'AE';
		end;
	elsif (ie_usuario_aceite_w = 'S') and (cd_pessoa_destino_w IS NOT NULL AND cd_pessoa_destino_w::text <> '') and (ie_forma_ev_w = '4') then
		begin
		select	count(*)
		into STRICT	qt_corresp_w
		from	pessoa_fisica_corresp
		where	cd_pessoa_fisica	= cd_pessoa_destino_w
		and	ie_tipo_corresp		= 'Email'
		and	ie_tipo_doc		= 'AE';
		end;
	end if;

	if (cd_pessoa_destino_w IS NOT NULL AND cd_pessoa_destino_w::text <> '') and (qt_corresp_w > 0) then
		begin
		insert into ev_evento_pac_destino(
			nr_sequencia,
			nr_seq_ev_pac,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_pessoa_fisica,
			ie_forma_ev,
			ie_status,
			dt_ciencia,
			ie_pessoa_destino,
			dt_evento)
		values (	nextval('ev_evento_pac_destino_seq'),
			nr_seq_evento_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_pessoa_destino_w,
			ie_forma_ev_w,
			'G',
			null,
			ie_pessoa_destino_w,
			clock_timestamp());
		end;
	end if;

	open C02;
	loop
	fetch C02 into
		cd_pessoa_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		insert into ev_evento_pac_destino(
			nr_sequencia,
			nr_seq_ev_pac,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_pessoa_fisica,
			ie_forma_ev,
			ie_status,
			dt_ciencia,
			ie_pessoa_destino,
			dt_evento)
		values (	nextval('ev_evento_pac_destino_seq'),
			nr_seq_evento_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_pessoa_regra_w,
			ie_forma_ev_w,
			'G',
			null,
			ie_pessoa_destino_w,
			clock_timestamp());
		end;
	end loop;
	close C02;

	open C03;
	loop
	fetch C03 into
		cd_pessoa_regra_w,
		nm_usuario_destino_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		insert into ev_evento_pac_destino(
			nr_sequencia,
			nr_seq_ev_pac,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_pessoa_fisica,
			ie_forma_ev,
			ie_status,
			dt_ciencia,
			nm_usuario_dest,
			ie_pessoa_destino,
			dt_evento)
		values (	nextval('ev_evento_pac_destino_seq'),
			nr_seq_evento_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_pessoa_regra_w,
			ie_forma_ev_w,
			'G',
			null,
			nm_usuario_destino_w,
			ie_pessoa_destino_w,
			clock_timestamp());
		end;
	end loop;
	close C03;

	open C09;
	loop
	fetch C09 into
		cd_pessoa_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C09 */
		begin
		if (cd_pessoa_regra_w IS NOT NULL AND cd_pessoa_regra_w::text <> '') then
			insert into ev_evento_pac_destino(
				nr_sequencia,
				nr_seq_ev_pac,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_pessoa_fisica,
				ie_forma_ev,
				ie_status,
				dt_ciencia,
				ie_pessoa_destino,
				dt_evento)
			values (	nextval('ev_evento_pac_destino_seq'),
				nr_seq_evento_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				cd_pessoa_regra_w,
				ie_forma_ev_w,
				'G',
				null,
				ie_pessoa_destino_w,
				clock_timestamp());
		end if;
		end;
	end loop;
	close C09;



	end;
end loop;
close C01;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

begin
	CALL Enviar_lembrete_ev_dixtal(nr_seq_evento_p,nm_usuario_p);
exception
	when others then
	null;
end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_evento_pac ( nr_seq_evento_p bigint, nr_seq_laudo_p bigint, nm_usuario_p text) FROM PUBLIC;

