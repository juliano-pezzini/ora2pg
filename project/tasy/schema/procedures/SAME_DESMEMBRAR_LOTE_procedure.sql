-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE same_desmembrar_lote (nr_seq_lote_p bigint, ds_prontuario_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


ds_prontuario_w		varchar(400);
ds_prontuario_tratado_w	varchar(400);
ie_contador_w		bigint	:= 0;
tam_lista_w		bigint;
ie_pos_virgula_w	smallint;
nr_seq_lote_w		bigint;
ie_lote_entregue_w	varchar(1);

nr_seq_pront_w		bigint;
nr_seq_solic_w		bigint;
nr_seq_solic_old_w	bigint;

ds_parametro_w		varchar(10) := obter_valor_param_usuario(941,103,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p);

c01 CURSOR FOR
	SELECT	nr_sequencia
	from	same_solic_pront
	where	nr_seq_lote	= nr_seq_lote_p
	and	((ds_parametro_w = 'N') or (cd_estabelecimento = cd_estabelecimento_p))
	order by nr_sequencia;


BEGIN

/* Cria o lote */

select	nextval('same_solic_pront_lote_seq')
into STRICT	nr_seq_lote_w
;

insert into same_solic_pront_lote(
	nr_sequencia,
	cd_estabelecimento,
	dt_solicitacao,
	dt_atualizacao,
	nm_usuario,
	ie_status,
	dt_prevista,
	dt_entrega,
	cd_pessoa_solicitante,
	ie_tipo_solicitacao,
	ie_urgente,
	nr_seq_motivo,
	dt_devolucao_prevista,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	cd_setor_solicitante,
	dt_liberacao
)
SELECT	nr_seq_lote_w,
	cd_estabelecimento,
	dt_solicitacao,
	clock_timestamp(),
	nm_usuario_p,
	ie_status,
	dt_prevista,
	dt_entrega,
	cd_pessoa_solicitante,
	ie_tipo_solicitacao,
	ie_urgente,
	nr_seq_motivo,
	dt_devolucao_prevista,
	clock_timestamp(),
	nm_usuario_p,
	cd_setor_solicitante,
	dt_liberacao
from	same_solic_pront_lote
where	nr_sequencia	= nr_seq_lote_p;

open c01;
loop
fetch c01 into
	nr_seq_solic_old_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	/* Cria as solicitações do lote */

	select  nextval('same_solic_pront_seq')
	into STRICT    nr_seq_solic_w
	;

	insert into same_solic_pront(
	        nr_sequencia,
	        cd_estabelecimento,
	        dt_solicitacao,
	        dt_atualizacao,
	        nm_usuario,
	        ie_status,
	        cd_pessoa_fisica,
	        nr_atendimento,
	        dt_prevista,
	        dt_entrega,
	        ds_observacao,
	        cd_pessoa_solicitante,
	        ie_tipo_solicitacao,
	        ie_urgente,
	        nr_seq_lote,
	        nr_seq_motivo,
	        dt_devolucao_prevista,
	        dt_atualizacao_nrec,
	        nm_usuario_nrec,
	        dt_devolucao,
	        cd_setor_solicitante,
	        dt_recebimento,
	        nm_usuario_receb,
	        dt_periodo_inicial,
	        dt_periodo_final,
	        dt_liberacao
	)
	SELECT  nr_seq_solic_w,
	        cd_estabelecimento,
	        dt_solicitacao,
	        clock_timestamp(),
	        nm_usuario_p,
	        ie_status,
	        cd_pessoa_fisica,
	        nr_atendimento,
	        dt_prevista,
	        dt_entrega,
	        ds_observacao,
	        cd_pessoa_solicitante,
	        ie_tipo_solicitacao,
	        ie_urgente,
	        nr_seq_lote_w,
	        nr_seq_motivo,
	        dt_devolucao_prevista,
	        clock_timestamp(),
	        nm_usuario_p,
	        dt_devolucao,
	        cd_setor_solicitante,
	        dt_recebimento,
	        nm_usuario_receb,
	        dt_periodo_inicial,
	        dt_periodo_final,
	        dt_liberacao
	from    same_solic_pront
	where   nr_sequencia    = nr_seq_solic_old_w;
	/* Cria os prontuários da solicitação */

	insert into same_solic_pront_envelope(
	        nr_sequencia,
	        nr_seq_solic,
	        nr_seq_prontuario,
	        dt_atualizacao,
	        nm_usuario,
	        dt_atualizacao_nrec,
	        nm_usuario_nrec
	)
	SELECT	nextval('same_solic_pront_envelope_seq'),
	        nr_seq_solic_w,
	        nr_seq_prontuario,
	        clock_timestamp(),
	        nm_usuario_p,
	        clock_timestamp(),
	        nm_usuario_p
	from	same_solic_pront_envelope
	where	nr_seq_solic	= nr_seq_solic_old_w;

	end;
end loop;
close c01;

/* Tratar os prontuários */

ds_prontuario_w		:= ds_prontuario_p;
ds_prontuario_tratado_w	:= '(';
while   (ds_prontuario_w IS NOT NULL AND ds_prontuario_w::text <> '') or
	ie_contador_w > 200 loop
	begin
	tam_lista_w		:= length(ds_prontuario_w);
	ie_pos_virgula_w	:= position(',' in ds_prontuario_w);
	if (ie_pos_virgula_w <> 0) then
		nr_seq_pront_w		:= substr(ds_prontuario_w,1,(ie_pos_virgula_w-1));
		ds_prontuario_w		:= substr(ds_prontuario_w,(ie_pos_virgula_w+1),tam_lista_w);
	end if;
	if (ds_prontuario_tratado_w = '(') then
		ds_prontuario_tratado_w	:= ds_prontuario_tratado_w || nr_seq_pront_w;
	else
		ds_prontuario_tratado_w	:= ds_prontuario_tratado_w || ',' || nr_seq_pront_w;
	end if;
	ie_contador_w	:= ie_contador_w + 1;
	end;
end loop;
ds_prontuario_tratado_w	:= ds_prontuario_tratado_w || ')';

/* Exclui todos os prontuários não selecionados no novo lote */

delete	from same_solic_pront_envelope a
where	obter_se_contido(a.nr_seq_prontuario, ds_prontuario_tratado_w) = 'N'
and	a.nr_seq_solic in (
	SELECT	b.nr_sequencia
	from	same_solic_pront b
	where	b.nr_seq_lote	= nr_seq_lote_w);

/* Excluir todos os prontuários selecionados no lote antigo */

delete	from same_solic_pront_envelope a
where	obter_se_contido(a.nr_seq_prontuario, ds_prontuario_tratado_w) = 'S'
and	a.nr_seq_solic in (
	SELECT	b.nr_sequencia
	from	same_solic_pront b
	where	b.nr_seq_lote	= nr_seq_lote_p);

/* Exclui todas as solicitações sem prontuários informados */

delete	from same_solic_pront a
where	not exists (	SELECT	1
			from 	same_solic_pront_envelope b
			where	b.nr_seq_solic	= a.nr_sequencia)
and	a.nr_seq_lote	in (nr_seq_lote_p, nr_seq_lote_w);

/* Verifica se o lote ficou apenas com solicitações entregues para alterar o status do lote também */

select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_lote_entregue_w
from	same_solic_pront a
where	a.nr_seq_lote = nr_seq_lote_p
and	a.ie_status = 'E'
and not exists (	SELECT	1
		from	same_solic_pront b
		where	b.nr_seq_lote = nr_seq_lote_p
		and	b.ie_status not in ('C','E'));

if (ie_lote_entregue_w = 'S') then
	update 	same_solic_pront_lote
	set 	ie_status	= 'E',
		dt_entrega	= clock_timestamp(),
		dt_atualizacao	= clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where	nr_sequencia 	= nr_seq_lote_p
	and	ie_status	= 'P';
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE same_desmembrar_lote (nr_seq_lote_p bigint, ds_prontuario_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

