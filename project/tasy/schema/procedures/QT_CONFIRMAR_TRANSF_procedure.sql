-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE qt_confirmar_transf ( NR_SEQ_PEND_AGENDA_P bigint, NM_USUARIO_P text) AS $body$
DECLARE

 
NR_SEQ_ATENDIMENTO_W		bigint;
NR_SEQ_ATENDIMENTO_WW		bigint;
NR_SEQ_PACIENTE_W		bigint;
CD_PESSOA_FISICA_W		varchar(10);
DT_AGENDA_W			timestamp;
NR_SEQ_LOCAL_W			bigint;
NR_DURACAO_W			bigint;
NR_SEQ_MARCACAO_W		bigint;
NR_SEQ_PROF_W			bigint;
IE_TIPO_AGENDAMENTO_W		varchar(15);
QT_GERADO_W			bigint;
NR_SEQ_AGENDA_W			bigint;
CD_ESTABELECIMENTO_W		numeric(20);
NR_SEQ_MOT_TRANSF_W		bigint;
IE_GERAR_AGENDA_CONS_W		varchar(1);
NR_SEQ_AGENDA_ORIGEM_W		AGENDA_CONSULTA.NR_SEQUENCIA%TYPE;
NR_SEQ_AGEINT_W			AGENDA_INTEGRADA.NR_SEQUENCIA%TYPE;
NR_SEQ_AGEINT_ITEM_W		AGENDA_INTEGRADA_ITEM.NR_SEQUENCIA%TYPE;
NR_SEQ_PROC_INTERNO_W		PACIENTE_ATEND_PROC.NR_SEQ_PROC_INTERNO%TYPE;
IE_ORIGEM_PROCED_W		PACIENTE_ATEND_PROC.IE_ORIGEM_PROCED%TYPE;
CD_PROCEDIMENTO_W		PACIENTE_ATEND_PROC.CD_PROCEDIMENTO%TYPE;
CD_CONVENIO_W			PACIENTE_SETOR_CONVENIO.CD_CONVENIO%TYPE;
CD_CATEGORIA_W			PACIENTE_SETOR_CONVENIO.CD_CATEGORIA%TYPE;
CD_PLANO_W			PACIENTE_SETOR_CONVENIO.CD_PLANO%TYPE;
DT_PREVISTA_ITEM_W		timestamp;
CD_PROTOCOLO_W			PACIENTE_SETOR.CD_PROTOCOLO%TYPE;
IE_CLASSIF_AGENDA_W		PROTOCOLO_MEDIC_PROC.IE_CLASSIF_AGENDA%TYPE;
CD_ESPECIALIDADE_PROC_W		PROTOCOLO_MEDIC_PROC.CD_ESPECIALIDADE%TYPE;
DS_OBSERVACAO_W			PROTOCOLO_MEDIC_PROC.DS_OBSERVACAO%TYPE;
DS_COR_W			PROTOCOLO_MEDIC_PROC.DS_COR%TYPE;
ie_atualiza_estab_w		varchar(1);
cd_estab_local_w		smallint;

C01 CURSOR FOR 
	SELECT	nr_sequencia, 
		dt_agenda, 
		nr_seq_local, 
		nr_duracao, 
		nr_seq_prof, 
		ie_tipo_agendamento, 
		nr_seq_atendimento 
	from	agenda_quimio_marcacao 
	where	nr_seq_pend_agenda	= nr_seq_pend_agenda_p 
	and	ie_gerado		= 'N' 
	and	ie_transferencia	= 'S';
	
C02 CURSOR FOR	 
	SELECT	max(a.nr_seq_proc_interno), 
			max(a.ie_origem_proced), 
			max(a.cd_procedimento), 
			max(trunc(b.dt_prevista)) 
	from	paciente_atend_proc a,	 
			paciente_atendimento b 
	where	a.nr_seq_atendimento = b.nr_seq_atendimento 
	and		b.nr_seq_atendimento = nr_seq_atendimento_ww 
	and		((a.nr_seq_proc_interno IS NOT NULL AND a.nr_seq_proc_interno::text <> '') or (a.cd_procedimento IS NOT NULL AND a.cd_procedimento::text <> '')) 
	order by 1;	
	 

BEGIN 
 
ie_atualiza_estab_w := obter_param_usuario(865, 132, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualiza_estab_w);
 
select	max(a.cd_pessoa_Fisica) 
into STRICT	cd_pessoa_fisica_w 
from	paciente_setor a, 
		paciente_atendimento b 
where	b.nr_seq_pend_agenda	= nr_seq_pend_agenda_p 
and		a.nr_seq_paciente	= b.nr_seq_paciente;
 
select	max(nr_sequencia) 
into STRICT	nr_seq_mot_transf_w 
from	qt_motivo_reagendamento;
 
--ParÃ¢metros da agenda de quimioterapia(Shift + F11) 
select	max(coalesce(ie_gerar_agenda_cons,'N'))		 
into STRICT	ie_gerar_agenda_cons_w 
from	parametro_agenda_quimio 
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;
 
open C01;
loop 
fetch C01 into	 
	nr_seq_marcacao_w, 
	dt_agenda_w, 
	nr_seq_local_w, 
	nr_duracao_w, 
	nr_seq_prof_w, 
	ie_tipo_agendamento_w, 
	nr_seq_atendimento_ww;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	select	max(nr_seq_atendimento) 
	into STRICT	nr_seq_atendimento_w 
	from	paciente_atendimento 
	where	nr_seq_pend_agenda	= nr_seq_pend_agenda_p 
	and		nr_seq_atendimento = nr_seq_atendimento_ww 
	and	trunc(coalesce(dt_real, dt_prevista))		= trunc(dt_agenda_w);
	/* excluir marcacao anterior */
 
	 
	delete	FROM agenda_quimio_marcacao 
	where	nr_seq_pend_agenda	= nr_seq_pend_agenda_p 
	and		nr_seq_atendimento = nr_seq_atendimento_ww 
	and	trunc(dt_agenda)	= trunc(dt_agenda_w) 
	and	ie_gerado			= 'S' 
	and	ie_transferencia	= 'N';
	/* update novo horario */
 
	 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_agenda_w 
	from	agenda_quimio 
	where	nr_seq_atendimento	= nr_seq_atendimento_w;
	 
	delete	FROM w_agenda_quimio 
	where	nr_seq_agequi	= nr_seq_agenda_w;
	 
	select	max(cd_estabelecimento) 
	into STRICT	cd_estabelecimento_w 
	from	qt_local 
	where	nr_sequencia = nr_seq_local_w;
	 
	if (nr_seq_agenda_w	> 0) then 
		update	agenda_quimio 
		set	dt_agenda		= dt_agenda_w, 
			nr_seq_local		= nr_seq_local_w, 
			nr_seq_prof		= nr_seq_prof_w, 
			nm_usuario		= nm_usuario_p,			 
			dt_Atualizacao		= clock_timestamp(), 
			cd_estabelecimento	= cd_estabelecimento_w, 
			nr_seq_mot_reagendamento	= nr_seq_mot_transf_w 
		where	trunc(dt_agenda)	= trunc(dt_agenda_w) 
		and		nr_seq_atendimento	= nr_seq_atendimento_w;
	else 
		insert into agenda_quimio(nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			cd_pessoa_fisica, 
			nr_seq_prof, 
			nr_seq_local, 
			nr_seq_atendimento, 
			nr_minuto_duracao, 
			dt_agenda, 
			ie_tipo_pend_agenda, 
			ie_status_agenda, 
			ie_tipo_agendamento, 
			nr_seq_mot_reagendamento) 
		values (nextval('agenda_quimio_seq'), 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			cd_pessoa_fisica_w, 
			nr_seq_prof_w, 
			nr_seq_local_w, 
			nr_seq_atendimento_w, 
			nr_duracao_w, 
			dt_agenda_w, 
			'Q', 
			'N', 
			ie_tipo_agendamento_w, 
			nr_seq_mot_transf_w);	
	end if;
		 
	update	paciente_atendimento 
	set	dt_real			= dt_agenda_w, 
		nm_usuario		= nm_usuario_p, 
		dt_atualizacao		= clock_timestamp(), 
		ie_reagendamento	= 'S' 
		--nr_seq_local		= nr_seq_local_w 
	where	nr_seq_pend_agenda	= nr_seq_pend_agenda_p 
	and	nr_seq_atendimento	= nr_seq_atendimento_w 
	and	trunc(dt_real)		= trunc(dt_agenda_w);
		 
	/* alterar marcacao horario transferencia = 'N' */
 
	update	agenda_quimio_marcacao 
	set	ie_gerado			= 'S', 
		ie_transferencia	= 'N', 
		nr_seq_prof		= nr_seq_prof_w, 
		nr_seq_local		= nr_seq_local_w 
	where	nr_sequencia			= nr_seq_marcacao_w 
	and		nr_seq_atendimento	= nr_seq_atendimento_w;
	 
	--Transferir agendamento de consulta 
	if (ie_gerar_agenda_cons_w = 'S') then 
	 
		--Gerar novos itens 
		open C02;
		loop 
		fetch C02 into	 
			nr_seq_proc_interno_w, 
			ie_origem_proced_w, 
			cd_procedimento_w, 
			dt_prevista_item_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			select	max(c.cd_convenio), 
					max(c.cd_categoria), 
					max(c.cd_plano), 
					max(b.cd_protocolo) 
			into STRICT	cd_convenio_w, 
					cd_categoria_w, 
					cd_plano_w, 
					cd_protocolo_w 
			from	paciente_atendimento a, 
					paciente_setor b, 
					paciente_setor_convenio c 
			where	a.nr_seq_paciente		= b.nr_seq_paciente 
			and		b.nr_seq_paciente		= c.nr_seq_paciente 
			and		a.nr_seq_pend_agenda	= nr_seq_pend_agenda_p 
			and		nr_seq_atendimento   = nr_seq_atendimento_ww 
			and		coalesce(a.dt_suspensao::text, '') = '' 
			and 	coalesce(a.dt_cancelamento::text, '') = '' 
			and		trunc(coalesce(dt_prevista_agenda,coalesce(a.dt_real, a.dt_prevista))) = trunc(dt_agenda_w);
			 
			if (cd_protocolo_w IS NOT NULL AND cd_protocolo_w::text <> '') or (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '')then 
				 
				SELECT	MAX(A.IE_CLASSIF_AGENDA), 
					MAX(A.CD_ESPECIALIDADE), 
					MAX(A.DS_OBSERVACAO), 
					MAX(A.DS_COR) 
				INTO STRICT	IE_CLASSIF_AGENDA_W, 
					CD_ESPECIALIDADE_PROC_W, 
					DS_OBSERVACAO_W, 
					DS_COR_W 
				FROM	PROTOCOLO_MEDIC_PROC A	 
				WHERE	A.CD_PROTOCOLO 	= CD_PROTOCOLO_W 
				AND	((NR_SEQ_PROC_INTERNO = NR_SEQ_PROC_INTERNO_W) OR (CD_PROCEDIMENTO = CD_PROCEDIMENTO_W)) 
				AND	(A.IE_CLASSIF_AGENDA IS NOT NULL AND A.IE_CLASSIF_AGENDA::text <> '');							
			 
			 
				CALL QT_GERAR_AGEND_CONS_INTEGRADA(	NR_SEQ_ATENDIMENTO_WW, 
								NR_SEQ_PEND_AGENDA_P, 
								CD_PESSOA_FISICA_W, 
								CD_PROCEDIMENTO_W, 
								NR_SEQ_PROC_INTERNO_W, 
								IE_ORIGEM_PROCED_W, 
								CD_CONVENIO_W, 
								CD_CATEGORIA_W, 
								CD_PLANO_W, 
								WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, 
								'T', 
								DT_PREVISTA_ITEM_W, 
								IE_CLASSIF_AGENDA_W, 
								CD_ESPECIALIDADE_PROC_W, 
								NM_USUARIO_P, 
								DS_OBSERVACAO_W, 
								DS_COR_W);
			end if;
			end;
		end loop;
		close C02;		
	 
	end	if;
	 
	if (ie_atualiza_estab_w = 'S') then 
		select	max(cd_estabelecimento) 
		into STRICT	cd_estab_local_w 
		from	qt_local 
		where	nr_sequencia = nr_seq_local_w;
		 
		update	paciente_atendimento 
		set	cd_estabelecimento = cd_estab_local_w 
		where	nr_seq_atendimento = nr_seq_atendimento_w;
	end if;
	 
	end;
end loop;
close C01;
 
update	qt_pendencia_agenda 
set	dt_liberacao	= clock_timestamp(), 
	dt_atualizacao	= clock_timestamp(), 
	nm_usuario	= nm_usuario_p 
where	nr_sequencia	= nr_seq_pend_agenda_p;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE qt_confirmar_transf ( NR_SEQ_PEND_AGENDA_P bigint, NM_USUARIO_P text) FROM PUBLIC;

