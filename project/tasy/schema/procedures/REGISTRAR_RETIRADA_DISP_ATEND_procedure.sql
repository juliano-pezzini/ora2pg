-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE registrar_retirada_disp_atend ( nr_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_dispositivo,
    ds_observacao
	from	atend_pac_dispositivo	a
	where	nr_atendimento				= nr_atendimento_p
	and	obter_se_exibe_graf_disp(nr_sequencia)	= 'S'
	and	not exists (SELECT	1
				from	dispositivo	x
				where	x.nr_sequencia	= a.nr_seq_dispositivo
				and	coalesce(x.ie_permite_disp_alta,'N')		= 'S'
				and	a.dt_retirada < clock_timestamp())
	and	coalesce(dt_retirada::text, '') = '';
	
nr_sequencia_w		bigint;
qt_registro_w		bigint;
qt_registro_sae_w	bigint;
nr_seq_proc_interno_w	bigint;
nr_seq_dispositivo_w	bigint;
ds_observacao_w varchar(255);


BEGIN

open C01;
loop
fetch C01 into	
	nr_sequencia_w,
	nr_seq_dispositivo_w,
  ds_observacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	count(*)
	into STRICT	qt_registro_w
	from	dispositivo_proc_interno
	where	nr_seq_dispositivo	=	nr_seq_dispositivo_w
	and		ie_acao			=	'R';
	
	
	select	count(*)
	into STRICT	qt_registro_sae_w
	from	pe_proc_dispositivo
	where	nr_seq_dispositivo = nr_seq_dispositivo_w
	and		(nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '')
	and		ie_acao			=	'R';	
	
	update	atend_pac_dispositivo
	set		dt_retirada		=	clock_timestamp(),
      -- (Retirado pelo sistema por motivo de obito do paciente) = 729677
			ds_observacao		=	substr(ds_observacao || obter_desc_expressao(729677),1,255)
	where	nr_sequencia		=	nr_sequencia_w;
	
	if (qt_registro_w = 1) then
	
		select	nr_seq_proc_interno
		into STRICT	nr_seq_proc_interno_w
		from	dispositivo_proc_interno
		where	nr_seq_dispositivo	=	nr_seq_dispositivo_w
		and		ie_acao			=	'R';
			
		insert into atend_pac_disp_proc(
			nr_sequencia,
			nr_seq_disp_pac,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_proc_interno,
			dt_procedimento,
			cd_pessoa_fisica,
			cd_setor_atendimento,
			nr_seq_reversao,
      ds_observacao)
		values (
			nextval('atend_pac_disp_proc_seq'),
			nr_sequencia_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_proc_interno_w,
			clock_timestamp(),
			Obter_Dados_Usuario_Opcao(nm_usuario_p,'C'),
			null,
			null,
      substr(ds_observacao_w || obter_desc_expressao(729677),1,255));
			
	elsif (qt_registro_sae_w = 1) then
	
			select	max(nr_seq_proc_interno)
			into STRICT	nr_seq_proc_interno_w
			from	pe_proc_dispositivo
			where	nr_seq_dispositivo = nr_seq_dispositivo_w
			and		ie_acao			=	'R';	
			
			
			insert into atend_pac_disp_proc(
				nr_sequencia,
				nr_seq_disp_pac,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_proc_interno,
				dt_procedimento,
				cd_pessoa_fisica,
				cd_setor_atendimento,
				nr_seq_reversao,
        ds_observacao)
			values (
				nextval('atend_pac_disp_proc_seq'),
				nr_sequencia_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_proc_interno_w,
				clock_timestamp(),
				Obter_Dados_Usuario_Opcao(nm_usuario_p,'C'),
				null,
				null,
        substr(ds_observacao_w || obter_desc_expressao(729677),1,255));			
	
	end if;
	
	end;
end loop;
close C01;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE registrar_retirada_disp_atend ( nr_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

