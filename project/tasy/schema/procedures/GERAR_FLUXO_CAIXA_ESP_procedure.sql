-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_fluxo_caixa_esp ( cd_estabelecimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text, cd_empresa_p bigint, ie_restringe_estab_p text, ie_operacao_p text, ie_somente_ativa_p text, ie_classif_p text default null, cd_moeda_p bigint default null) AS $body$
DECLARE

 
/*--------------------------------------------------------------- ATENÇÃO ----------------------------------------------------------------*/
 
/* Cuidado ao realizar alterações no fluxo de caixa. Toda e qualquer alteração realizada em qualquer uma das    */
 
/* procedures do fluxo de caixa deve ser cuidadosamente verificada e realizada no fluxo de caixa em lote.      */
 
/* Devemos garantir que os dois fluxos de caixa tragam os mesmos valores no resultado, evitando assim que      */
 
/* existam diferenças entre os fluxos de caixa.                                                        */
 
/*--------------- AO ALTERAR O FLUXO DE CAIXA ALTERAR TAMBÉM O FLUXO DE CAIXA EM LOTE ---------------*/
 
 
ie_regra_origem_w        varchar(255);
ie_regra_data_w         varchar(255);
ie_acumular_fluxo_w       varchar(255);
ie_operacao_w          varchar(255);
nr_dia_fixo_w          bigint;
qt_mes_anterior_w        bigint;
vl_fixo_w            double precision;
cd_conta_financ_w        bigint;
nr_seq_regra_w         bigint;
dt_vigencia_inicial_w      timestamp;
dt_vigencia_final_w       timestamp;
dt_inicial_w          timestamp;
dt_final_w           timestamp;
ie_conta_financ_ativa_w     varchar(1);
ie_media_regra_w		varchar(1);
ie_classif_fluxo_w		regra_fluxo_caixa.ie_classif_fluxo%type;

C01 CURSOR FOR 
    SELECT nr_sequencia, 
        cd_conta_financ, 
        ie_regra_origem, 
        ie_regra_data, 
        nr_dia_fixo, 
        qt_mes_anterior, 
        vl_fixo, 
        dt_vigencia_inicial, 
        dt_vigencia_final, 
        ie_acumular_fluxo, 
		coalesce(ie_classif_fluxo,'R') 
    from  regra_fluxo_caixa 
    where (cd_estabelecimento = cd_estabelecimento_p or ie_restringe_estab_p = 'N')
;

 

BEGIN 
open C01;
loop 
fetch C01 into 
    nr_seq_regra_w, 
    cd_conta_financ_w, 
    ie_regra_origem_w, 
    ie_regra_data_w, 
    nr_dia_fixo_w, 
    qt_mes_anterior_w, 
    vl_fixo_w, 
    dt_vigencia_inicial_w, 
    dt_vigencia_final_w, 
    ie_acumular_fluxo_w, 
	ie_classif_fluxo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
    dt_inicial_w      := dt_inicial_p;
    if (dt_vigencia_inicial_w IS NOT NULL AND dt_vigencia_inicial_w::text <> '') and (dt_vigencia_inicial_w > dt_inicial_p) then 
        dt_inicial_w  := dt_vigencia_inicial_w;
    end if;
 
    dt_final_w       := dt_final_p;
    if (dt_vigencia_final_w IS NOT NULL AND dt_vigencia_final_w::text <> '') and (dt_vigencia_final_w < dt_final_p) then 
        dt_final_w   := dt_vigencia_final_w;
    end if;
 
    /* Esta parte só poderá ser executada quando não for fluxo de caixa realizado. No fluxo de caixa realizado será executado somente o cálculo de saldos bancário e tesouraria. */
 
	if (ie_classif_p <> 'P') then 
		if (ie_regra_origem_w = 'FS') and (ie_classif_fluxo_w = 'R') then 
			ie_operacao_w  := null;
 
			select obter_operacao_conta_financ(cd_conta_financ_w) 
			into STRICT  ie_operacao_w 
			;
 
			if   ((ie_operacao_p = 'S' AND ie_operacao_w <> 'D') or 
				 (ie_operacao_p = 'D' AND ie_operacao_w <> 'S') or (ie_operacao_p = 'A')) then 
 
				select CASE WHEN ie_somente_ativa_p='S' THEN ie_situacao  ELSE 'A' END  
				into STRICT  ie_conta_financ_ativa_w 
				from  conta_financeira 
				where  cd_conta_financ = cd_conta_financ_w;
 
				if (ie_conta_financ_ativa_w = 'A') then 
					CALL gerar_fluxo_caixa_sus(cd_estabelecimento_p, 
						cd_conta_financ_w, 
						ie_regra_data_w, 
						nr_dia_fixo_w, 
						qt_mes_anterior_w, 
						dt_inicial_w, 
						dt_final_w, 
						ie_acumular_fluxo_w, 
						nm_usuario_p, 
						cd_empresa_p);
				end if;
			end if;
		elsif (ie_regra_origem_w = 'RP') and (ie_classif_fluxo_w = 'R') then 
			ie_operacao_w  := null;
 
			select obter_operacao_conta_financ(cd_conta_financ_w) 
			into STRICT  ie_operacao_w 
			;
 
			if   ((ie_operacao_p = 'S' AND ie_operacao_w <> 'D') or 
				 (ie_operacao_p = 'D' AND ie_operacao_w <> 'S') or (ie_operacao_p = 'A')) then 
 
				select CASE WHEN ie_somente_ativa_p='S' THEN ie_situacao  ELSE 'A' END  
				into STRICT  ie_conta_financ_ativa_w 
				from  conta_financeira 
				where  cd_conta_financ = cd_conta_financ_w;
 
				if (ie_conta_financ_ativa_w = 'A') then 
					CALL gerar_fluxo_caixa_repasse(cd_estabelecimento_p, 
						cd_conta_financ_w, 
						ie_regra_data_w, 
						nr_dia_fixo_w, 
						qt_mes_anterior_w, 
						dt_inicial_w, 
						dt_final_w, 
						ie_acumular_fluxo_w, 
						nm_usuario_p, 
						cd_empresa_p);
				end if;
			end if;
 
		elsif (ie_regra_origem_w = 'VF') then 
			ie_operacao_w  := null;
 
			select obter_operacao_conta_financ(cd_conta_financ_w) 
			into STRICT  ie_operacao_w 
			;
 
			if   ((ie_operacao_p = 'S' AND ie_operacao_w <> 'D') or 
				 (ie_operacao_p = 'D' AND ie_operacao_w <> 'S') or (ie_operacao_p = 'A')) then 
 
				select CASE WHEN ie_somente_ativa_p='S' THEN ie_situacao  ELSE 'A' END , 
					coalesce(ie_media_regra,'N') 
				into STRICT  ie_conta_financ_ativa_w, 
					ie_media_regra_w 
				from  conta_financeira 
				where  cd_conta_financ = cd_conta_financ_w;
 
				if (ie_conta_financ_ativa_w = 'A')and (ie_media_regra_w = 'N') then 
					gerar_fluxo_caixa_valor_fixo(cd_conta_financ_w, 
						nr_dia_fixo_w, 
						vl_fixo_w, 
						dt_inicial_w, 
						dt_final_w, 
						ie_acumular_fluxo_w, 
						cd_empresa_p, 
						nr_seq_regra_w, 
						cd_estabelecimento_p, 
						nm_usuario_p, 
						ie_classif_fluxo_w);
				elsif (ie_conta_financ_ativa_w = 'A') and (ie_media_regra_w = 'S') then 
					CALL gerar_fluxo_caixa_valor_regra(cd_conta_financ_w, 
						nr_dia_fixo_w, 
						vl_fixo_w, 
						dt_inicial_w, 
						dt_final_w, 
						ie_acumular_fluxo_w, 
						cd_empresa_p, 
						nr_seq_regra_w, 
						cd_estabelecimento_p, 
						nm_usuario_p, 
						ie_classif_fluxo_w);
				end if;
			end if;
		elsif (ie_regra_origem_w = 'MA') and (ie_classif_fluxo_w = 'R') then 
			ie_operacao_w  := null;
 
			select obter_operacao_conta_financ(cd_conta_financ_w) 
			into STRICT  ie_operacao_w 
			;
 
			if   ((ie_operacao_p = 'S' AND ie_operacao_w <> 'D') or 
				 (ie_operacao_p = 'D' AND ie_operacao_w <> 'S') or (ie_operacao_p = 'A')) then 
 
				select CASE WHEN ie_somente_ativa_p='S' THEN ie_situacao  ELSE 'A' END  
				into STRICT  ie_conta_financ_ativa_w 
				from  conta_financeira 
				where  cd_conta_financ = cd_conta_financ_w;
 
				if (ie_conta_financ_ativa_w = 'A') then 
					CALL gerar_fluxo_caixa_mes_anterior(cd_estabelecimento_p, 
						cd_conta_financ_w, 
						ie_regra_data_w, 
						nr_dia_fixo_w, 
						qt_mes_anterior_w, 
						dt_inicial_w, 
						dt_final_w, 
						ie_acumular_fluxo_w, 
						nm_usuario_p, 
						cd_empresa_p, 
						nr_seq_regra_w);
				end if;
			end if;
		end if;
	else 
		if (ie_regra_origem_w = 'TC') and (ie_classif_fluxo_w = 'P') then 
			ie_operacao_w  := obter_operacao_conta_financ(cd_conta_financ_w);
			 
			if   ((ie_operacao_p = 'S' AND ie_operacao_w <> 'D') or 
				(ie_operacao_p = 'D' AND ie_operacao_w <> 'S') or (ie_operacao_p = 'A')) then 
				 
				select CASE WHEN ie_somente_ativa_p='S' THEN ie_situacao  ELSE 'A' END  
				into STRICT  ie_conta_financ_ativa_w 
				from  conta_financeira 
				where  cd_conta_financ = cd_conta_financ_w;
 
				if (ie_conta_financ_ativa_w = 'A') then 
					gerar_fluxo_regra_saldo(cd_conta_financ_w, 
								nr_seq_regra_w, 
								dt_inicial_w, 
								dt_final_w, 
								cd_empresa_p, 
								cd_estabelecimento_p, 
								nm_usuario_p, 
								ie_classif_fluxo_w, 
								ie_restringe_estab_p, 
								'C', 
								null, 
								cd_moeda_p);
				end if;
			end if;
		end if;
	end if;
end loop;
close C01;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_fluxo_caixa_esp ( cd_estabelecimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text, cd_empresa_p bigint, ie_restringe_estab_p text, ie_operacao_p text, ie_somente_ativa_p text, ie_classif_p text default null, cd_moeda_p bigint default null) FROM PUBLIC;

