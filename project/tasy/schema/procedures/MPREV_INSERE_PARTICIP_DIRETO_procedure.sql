-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE mprev_insere_particip_direto ( cd_pessoa_fisica_p bigint, nr_seq_programa_p bigint, nr_seq_campanha_p bigint, nm_usuario_p text, ie_incluso_p INOUT text, nm_incluso_p INOUT text, dt_inclusao_p timestamp ) AS $body$
DECLARE

                    
/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Inserir uma pessoa da Medicina Preventiva em alguma campanha ou programa diretamente, sem precisar captar
---------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionario [X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 --------------------------------------------------------------------------------------------------------------------
Pontos de atencao:
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_participante_w	    mprev_participante.nr_sequencia%type;
ie_status_w		            mprev_participante.ie_status%type;
ie_situacao_w		        mprev_participante.ie_situacao%type;
nr_seq_programa_partic_w    mprev_programa_partic.nr_sequencia%type;
nr_seq_programa_w	        mprev_programa.nr_sequencia%type	:= null;
nr_seq_campanha_w	        mprev_campanha.nr_sequencia%type	:= null;
nr_seq_busca_emp_w	        mprev_busca_empresarial.nr_sequencia%type;
nr_seq_contrato_emp_w	    pls_contrato.nr_sequencia%type	:= null;
ie_partic_programa_w	    varchar(1)	:= 'N';
ie_partic_campanha_w	    varchar(1)	:= 'N';
ie_incluso_w		        varchar(1)	:= 'N';
nm_incluso_w		        varchar(255)	:= null;



BEGIN

  	begin
	select	a.nr_sequencia
	into STRICT	nr_seq_participante_w
	from	mprev_participante a
	where	a.cd_pessoa_fisica = cd_pessoa_fisica_p;
	exception
		when others then
		nr_seq_participante_w	:= null;
	end;

    nr_seq_programa_w	:= nr_seq_programa_p;
	nr_seq_campanha_w	:= nr_seq_campanha_p;

	/* Se a pessoa ainda nao tem participante na Medicina Preventiva, criar */

	if (coalesce(nr_seq_participante_w::text, '') = '') then

		select	nextval('mprev_participante_seq')
		into STRICT	nr_seq_participante_w
		;

		/* Tratamento para quando esta em triagem ainda */

		if (coalesce(nr_seq_programa_p::text, '') = '') and (coalesce(nr_seq_campanha_p::text, '') = '') then
			ie_status_w	:= '2';
			ie_situacao_w	:= 'I';
		end if;

		insert into mprev_participante(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			cd_pessoa_fisica,
			ie_status,
			ie_situacao,
			ie_internacao,
			ie_cronico)
		values (nr_seq_participante_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_pessoa_fisica_p,
			ie_status_w,
			ie_situacao_w,
			'N',
			'N');

	else
		/* Consitir se a pessoa ja esta programa ou campanha informado */

		if (nr_seq_programa_p IS NOT NULL AND nr_seq_programa_p::text <> '') then
			select	coalesce(mprev_consiste_data('DT_INCLUSAO',
					trunc(clock_timestamp(),'dd'),
					'DT_EXCLUSAO',
					null,
					'MPREV_PROGRAMA_PARTIC',
					'NR_SEQ_PARTICIPANTE',
					nr_seq_participante_w,
					'NR_SEQ_PROGRAMA',
					nr_seq_programa_p,
					0,
					null),'N')
			into STRICT	ie_partic_programa_w
			;
		elsif (nr_seq_campanha_p IS NOT NULL AND nr_seq_campanha_p::text <> '') then
			select	coalesce(mprev_consiste_data('DT_INCLUSAO',
					trunc(clock_timestamp(),'dd'),
					'DT_EXCLUSAO',
					null,
					'MPREV_CAMPANHA_PARTIC',
					'NR_SEQ_PARTICIPANTE',
					nr_seq_participante_w,
					'NR_SEQ_CAMPANHA',
					nr_seq_campanha_p,
					0,
					null),'N')
			into STRICT	ie_partic_campanha_w
			;
		else
			/* Tratamento para quando esta em triagem ainda */

			ie_status_w	:= '2';
			ie_situacao_w	:= 'I';

			update	mprev_participante
			set	ie_status	= ie_status_w,
				ie_situacao	= ie_situacao_w
			where	nr_sequencia	= nr_seq_participante_w;
		end if;
	end if;
	/* Se passou na consistencia ou nao chegou a fazer, insere o participante no programa ou campanha */

	if (nr_seq_programa_w IS NOT NULL AND nr_seq_programa_w::text <> '') then
		if (ie_partic_programa_w = 'N') then
			insert into mprev_programa_partic(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_programa,
				nr_seq_participante,
				dt_inclusao,
				nr_seq_capt_destino,
				nr_seq_contrato_emp)
			values (nextval('mprev_programa_partic_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_programa_w,
				nr_seq_participante_w,
				dt_inclusao_p,
				null,
				nr_seq_contrato_emp_w)
			returning nr_sequencia into nr_seq_programa_partic_w;

			ie_incluso_w	:= 'S';

			update	mprev_participante
			set	ie_status	= '3',
				ie_situacao	= 'A'
			where	nr_sequencia	= nr_seq_participante_w;


		end if;
		nm_incluso_w	:= wheb_mensagem_pck.get_texto(327473) || ' - ' || substr(mprev_obter_desc_programa(nr_seq_programa_w),1,200);
	elsif (nr_seq_campanha_w IS NOT NULL AND nr_seq_campanha_w::text <> '') then
		if (ie_partic_campanha_w = 'N') then
			insert into mprev_campanha_partic(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_campanha,
				nr_seq_participante,
				dt_inclusao,
				nr_seq_capt_destino)
			values (nextval('mprev_campanha_partic_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_campanha_w,
				nr_seq_participante_w,
				dt_inclusao_p,
				null);

			ie_incluso_w	:= 'S';
		end if;
		nm_incluso_w	:= wheb_mensagem_pck.get_texto(327474) || ' - ' || substr(mprev_obter_desc_campanha(nr_seq_campanha_w),1,200);
	end if;

ie_incluso_p := ie_incluso_w;
nm_incluso_p := nm_incluso_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_insere_particip_direto ( cd_pessoa_fisica_p bigint, nr_seq_programa_p bigint, nr_seq_campanha_p bigint, nm_usuario_p text, ie_incluso_p INOUT text, nm_incluso_p INOUT text, dt_inclusao_p timestamp ) FROM PUBLIC;

