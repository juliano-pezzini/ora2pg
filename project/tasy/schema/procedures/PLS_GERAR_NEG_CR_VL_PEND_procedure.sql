-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_neg_cr_vl_pend ( nr_seq_pagador_p text, nm_usuario_p text, cd_estabelecimento_p text) AS $body$
DECLARE

 
 
nr_titulo_w			bigint;
cd_pessoa_fisica_w		varchar(10);
cd_cgc_w			varchar(14);
dt_recebimento_notif_w		timestamp;
nr_seq_negociacao_w		bigint;
vl_juros_w			double precision;
vl_multa_w			double precision;
vl_negociado_w			double precision;
ie_tipo_negociacao_w		varchar(1)	:= 'N';
qt_aberto_w			integer;
qt_inad_w			integer;
				
C01 CURSOR FOR 
SELECT	a.nr_titulo nr_titulo, 
	a.vl_saldo_titulo 
from  titulo_receber		a, 
    pls_mensalidade 	b 
where  a.nr_seq_mensalidade	= b.nr_sequencia 
and   b.nr_seq_pagador  	= nr_seq_pagador_p 
and   a.ie_situacao = '1' 
order by 
	nr_titulo;

c02 CURSOR FOR 
SELECT	a.nr_titulo nr_titulo, 
	obter_valor_baixa_inad_tit(a.nr_titulo) 
from  titulo_receber		a, 
    pls_mensalidade 	b 
where  a.nr_seq_mensalidade	= b.nr_sequencia 
and   b.nr_seq_pagador  	= nr_seq_pagador_p 
and   a.ie_situacao = '2' 
and	a.ie_liq_inadimplencia = 'S' 
and	coalesce(a.ie_negociado,'N') = 'N' 
order by 
	nr_titulo;
			

BEGIN 
 
if (nr_seq_pagador_p IS NOT NULL AND nr_seq_pagador_p::text <> '') then 
 
	 
	select	a.cd_pessoa_fisica, 
		a.cd_cgc 
	into STRICT	cd_pessoa_fisica_w, 
		cd_cgc_w 
	from	pls_contrato_pagador a 
	where	a.nr_sequencia	= nr_seq_pagador_p;
	 
	/* Uma negociação para os valores ainda em aberto */
 
	select	count(*) 
	into STRICT	qt_aberto_w 
	from  titulo_receber		a, 
		pls_mensalidade 	b 
	where  a.nr_seq_mensalidade	= b.nr_sequencia 
	and   b.nr_seq_pagador  	= nr_seq_pagador_p 
	and   a.ie_situacao = '1';
	 
	if (qt_aberto_w > 0) then 
 
		select	nextval('negociacao_cr_seq') 
		into STRICT	nr_seq_negociacao_w 
		;
			 
		insert into	negociacao_cr(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				cd_estabelecimento, 
				cd_pessoa_fisica, 
				cd_cgc, 
				dt_negociacao, 
				vl_negociado, 
				ie_status, 
				vl_juros, 
				vl_multa, 
				vl_desconto, 
				ie_tipo_negociacao) 
		values (nr_seq_negociacao_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				cd_estabelecimento_p, 
				cd_pessoa_fisica_w, 
				cd_cgc_w, 
				clock_timestamp(), 
				0, 
				'AS', 
				0, 
				0, 
				0, 
				'N');
 
		open C01;
		loop 
		fetch C01 into 
			nr_titulo_w,         
			vl_negociado_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			 
			vl_juros_w	:= obter_juros_multa_titulo(nr_titulo_w,clock_timestamp(),'R','J');
			vl_multa_w	:= obter_juros_multa_titulo(nr_titulo_w,clock_timestamp(),'R','M');
 
			insert into titulo_rec_negociado(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				nr_seq_negociacao, 
				nr_titulo,          	 
				vl_juros,                
				vl_multa,                 
				vl_negociado) 
			values (nextval('titulo_rec_negociado_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_negociacao_w, 
				nr_titulo_w,          	 
				vl_juros_w,                
				vl_multa_w,                 
				vl_negociado_w);	
			 
			end;
		end loop;
		close C01;
		 
		CALL atualizar_valores_neg_cr(nr_seq_negociacao_w,nm_usuario_p,'N');
	end if;
	 
	select	count(*) 
	into STRICT	qt_inad_w 
	from  titulo_receber		a, 
		pls_mensalidade 	b 
	where  a.nr_seq_mensalidade	= b.nr_sequencia 
	and   b.nr_seq_pagador  	= nr_seq_pagador_p 
	and   a.ie_situacao = '2' 
	and	a.ie_liq_inadimplencia = 'S' 
	and	coalesce(a.ie_negociado,'N') = 'N';
	 
	if (qt_inad_w > 0) then 
		select	nextval('negociacao_cr_seq') 
		into STRICT	nr_seq_negociacao_w 
		;
			 
		insert into	negociacao_cr(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				cd_estabelecimento, 
				cd_pessoa_fisica, 
				cd_cgc, 
				dt_negociacao, 
				vl_negociado, 
				ie_status, 
				vl_juros, 
				vl_multa, 
				vl_desconto, 
				ie_tipo_negociacao) 
		values (nr_seq_negociacao_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				cd_estabelecimento_p, 
				cd_pessoa_fisica_w, 
				cd_cgc_w, 
				clock_timestamp(), 
				0, 
				'AS', 
				0, 
				0, 
				0, 
				'IN');
 
		open C02;
		loop 
		fetch C02 into 
			nr_titulo_w,         
			vl_negociado_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			 
			vl_juros_w	:= obter_juros_multa_titulo(nr_titulo_w,clock_timestamp(),'R','J');
			vl_multa_w	:= obter_juros_multa_titulo(nr_titulo_w,clock_timestamp(),'R','M');
 
			insert into titulo_rec_negociado(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				nr_seq_negociacao, 
				nr_titulo,          	 
				vl_juros,                
				vl_multa,                 
				vl_negociado) 
			values (nextval('titulo_rec_negociado_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_negociacao_w, 
				nr_titulo_w,          	 
				vl_juros_w,                
				vl_multa_w,                 
				vl_negociado_w);	
			 
			end;
		end loop;
		close C02;
		 
		CALL atualizar_valores_neg_cr(nr_seq_negociacao_w,nm_usuario_p,'N');
	end if;
 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_neg_cr_vl_pend ( nr_seq_pagador_p text, nm_usuario_p text, cd_estabelecimento_p text) FROM PUBLIC;

