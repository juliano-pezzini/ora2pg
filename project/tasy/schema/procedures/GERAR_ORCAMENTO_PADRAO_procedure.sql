-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_orcamento_padrao ( nr_seq_orcamento_p bigint, nr_seq_orcamento_padrao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

					
					
					
cd_material_w		bigint;
qt_item_w		double precision;	
nr_sequencia_w		bigint;	
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;			

ds_arquivo_w		varchar(255);
ds_documento_w		text;
ie_imprime_doc_w	varchar(1);

nr_seq_proc_interno_w	bigint;
cd_estabelecimento_w	smallint;
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
cd_kit_material_w	integer;
ie_tipo_atendimento_w	smallint;
ie_tipo_convenio_w	smallint;
cd_plano_w		varchar(10);
cd_tipo_acomodacao_w	smallint;
nr_seq_exame_w		bigint;
ds_erro_w		varchar(500);
nr_seq_proc_interno_aux_w	bigint;
cd_setor_w		integer;
cd_material_exame_w	orcamento_paciente_proc.cd_material_exame%Type;


c01 CURSOR FOR
	SELECT	cd_material,
		qt_material
	from	orcamento_padrao_material
	where	nr_seq_orcamento_padrao		= nr_seq_orcamento_padrao_p
	and	ie_situacao			= 'A';
	
C02 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		qt_procedimento,
		nr_seq_proc_interno,
		nr_seq_exame
	from	orcamento_padrao_proc
	where	nr_seq_orcamento_padrao		= nr_seq_orcamento_padrao_p
	and	ie_situacao			= 'A';
	
C03 CURSOR FOR
	SELECT	ie_imprime_doc,
		ds_arquivo,
		ds_documento
	from	orcamento_padrao_doc
	where	nr_seq_orcamento_padrao		= nr_seq_orcamento_padrao_p;
	
C04 CURSOR FOR
	SELECT	cd_kit_material
	from	proc_interno
	where	nr_sequencia 			= nr_seq_proc_interno_w
	and	ie_situacao			= 'A';
	
C05 CURSOR FOR
	SELECT	cd_material,
		qt_material
	from	proc_interno_opme
	where	nr_seq_proc_interno 		= nr_seq_proc_interno_w;


C06 CURSOR FOR
	SELECT 	b.cd_material_exame
	from 	material_exame_lab b,
		exame_lab_material a
	where 	a.nr_seq_material  = b.nr_sequencia
	and 	a.ie_situacao = 'A' 
	and 	a.nr_seq_exame = nr_seq_exame_w
	order by a.ie_prioridade, 
		b.ds_material_exame;

C07 CURSOR FOR
	SELECT	nr_sequencia,
			ds_item,
			nr_seq_regra,
			nr_seq_apresent,
			qt_item
	from	orc_padrao_item_incluso
	where	nr_seq_orcamento_padrao = nr_seq_orcamento_padrao_p
	order by nr_sequencia;
c07_w			c07%rowtype;

C08 CURSOR FOR
	SELECT	nr_sequencia,
			ds_item,
			nr_seq_regra,
			nr_seq_apresent,
			qt_item
	from	orc_padrao_item_excluso
	where	nr_seq_orcamento_padrao = nr_seq_orcamento_padrao_p
	order by nr_sequencia;
c08_w			c08%rowtype;


BEGIN

select	max(cd_estabelecimento),
	max(cd_convenio),
	max(cd_categoria),
	max(cd_plano),
	max(cd_tipo_acomodacao),
	max(ie_tipo_atendimento),
	max(Obter_Tipo_Convenio(cd_convenio))
into STRICT	cd_estabelecimento_w,
	cd_convenio_w,
	cd_categoria_w,
	cd_plano_w,
	cd_tipo_acomodacao_w,
	ie_tipo_atendimento_w,
	ie_tipo_convenio_w
from	orcamento_paciente
where	nr_sequencia_orcamento = nr_seq_orcamento_p;

open C01;
loop
fetch C01 into	
	cd_material_w,
	qt_item_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	nextval('orcamento_paciente_mat_seq')
	into STRICT	nr_sequencia_w
	;
	insert into ORCAMENTO_PACIENTE_MAT(	nr_sequencia_orcamento,
						cd_material,
						qt_material,
						vl_material,
						dt_atualizacao,
						nm_usuario,
						ie_valor_informado,
						nr_sequencia,
						nr_seq_orcamento_padrao)
			values (	nr_seq_orcamento_p,
						cd_material_w,
						qt_item_w,
						0,
						clock_timestamp(),
						nm_usuario_p,
						'N',
						nr_sequencia_w,
						nr_seq_orcamento_padrao_p);
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into	
	cd_procedimento_w,
	ie_origem_proced_w,
	qt_item_w,
	nr_seq_proc_interno_w,
	nr_seq_exame_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	
	if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') and (coalesce(cd_procedimento_w::text, '') = '')     and (coalesce(nr_seq_exame_w::text, '') = '')     then
	
		SELECT * FROM Obter_Proc_Tab_Interno_Conv(	nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), cd_tipo_acomodacao_w, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
				
		if (coalesce(cd_procedimento_w,0) > 0) and (coalesce(ie_origem_proced_w,0) > 0) then

			select	nextval('orcamento_paciente_proc_seq')
			into STRICT	nr_sequencia_w
			;
		
			insert	into orcamento_paciente_proc(	nr_sequencia_orcamento,
								cd_procedimento,
								ie_origem_proced,
								qt_procedimento,
								dt_atualizacao,
								nm_usuario,
								vl_procedimento,
								ie_valor_informado,
								nr_sequencia,
								nr_seq_proc_interno,
								ie_procedimento_principal,
								nr_seq_orcamento_padrao,
								cd_procedimento_loc)
						values (	nr_seq_orcamento_p,
								cd_procedimento_w,
								ie_origem_proced_w,
								qt_item_w,
								clock_timestamp(),
								nm_usuario_p,
								0,
								'N',
								nr_sequencia_w,
								nr_seq_proc_interno_w,
								'N',
								nr_seq_orcamento_padrao_p,
								obter_cod_proc_loc(cd_procedimento_w,ie_origem_proced_w));							
								
			
			open C04;
			loop
			fetch C04 into	
				cd_kit_material_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin
				
				CALL gerar_kit_material_orc(	nr_seq_orcamento_p,
							qt_item_w,
							cd_kit_material_w,
							null,
							nm_usuario_p,
							null,
							nr_seq_orcamento_padrao_p);
				
				end;
			end loop;
			close C04;

			open C05;
			loop
			fetch C05 into	
				cd_material_w,
				qt_item_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin
				
				select	nextval('orcamento_paciente_mat_seq')
				into STRICT	nr_sequencia_w
				;
				insert into orcamento_paciente_mat(	nr_sequencia_orcamento,
									cd_material,
									qt_material,
									vl_material,
									dt_atualizacao,
									nm_usuario,
									ie_valor_informado,
									nr_sequencia,
									nr_seq_orcamento_padrao)
						values (	nr_seq_orcamento_p,
									cd_material_w,
									qt_item_w,
									0,
									clock_timestamp(),
									nm_usuario_p,
									'N',
									nr_sequencia_w,
									nr_seq_orcamento_padrao_p);
				
				end;
			end loop;
			close C05;

		end if;	
	
	elsif (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') and (coalesce(nr_seq_proc_interno_w::text, '') = '')     and (coalesce(nr_seq_exame_w::text, '') = '')     then		
	
		select	nextval('orcamento_paciente_proc_seq')
		into STRICT	nr_sequencia_w
		;
	
		insert	into orcamento_paciente_proc(	nr_sequencia_orcamento,
							cd_procedimento,
							ie_origem_proced,
							qt_procedimento,
							dt_atualizacao,
							nm_usuario,
							vl_procedimento,
							ie_valor_informado,
							nr_sequencia,
							ie_procedimento_principal,
							nr_seq_orcamento_padrao,
							cd_procedimento_loc)
					values (	nr_seq_orcamento_p,
							cd_procedimento_w,
							ie_origem_proced_w,
							qt_item_w,
							clock_timestamp(),
							nm_usuario_p,
							0,
							'N',
							nr_sequencia_w,
							'N',
							nr_seq_orcamento_padrao_p,
							obter_cod_proc_loc(cd_procedimento_w,ie_origem_proced_w));								

	elsif (coalesce(nr_seq_proc_interno_w::text, '') = '') and (coalesce(cd_procedimento_w::text, '') = '') and (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
	
		SELECT * FROM OBTER_EXAME_LAB_CONVENIO(	nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estabelecimento_w, ie_tipo_convenio_w, null, null, cd_plano_w, cd_setor_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w, clock_timestamp()) INTO STRICT cd_setor_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w;
				
		if (coalesce(cd_procedimento_w,0) > 0) and (coalesce(ie_origem_proced_w,0) > 0) then

			cd_material_exame_w:= null;

			open C06;
			loop
			fetch C06 into	
				cd_material_exame_w;
			EXIT WHEN NOT FOUND; /* apply on C06 */
				begin								
				cd_material_exame_w:= cd_material_exame_w;
				exit;
				end;
			end loop;
			close C06;


			select	nextval('orcamento_paciente_proc_seq')
			into STRICT	nr_sequencia_w
			;
		
			insert	into orcamento_paciente_proc(	nr_sequencia_orcamento,
								cd_procedimento,
								ie_origem_proced,
								qt_procedimento,
								dt_atualizacao,
								nm_usuario,
								vl_procedimento,
								ie_valor_informado,
								nr_sequencia,
								nr_seq_exame,
								ie_procedimento_principal,
								cd_material_exame,
								nr_seq_orcamento_padrao,
								cd_procedimento_loc)
						values (	nr_seq_orcamento_p,
								cd_procedimento_w,
								ie_origem_proced_w,
								qt_item_w,
								clock_timestamp(),
								nm_usuario_p,
								0,
								'N',
								nr_sequencia_w,
								nr_seq_exame_w,
								'N',
								cd_material_exame_w,
								nr_seq_orcamento_padrao_p,						
								obter_cod_proc_loc(cd_procedimento_w,ie_origem_proced_w));							
		end if;						
	end if;	
	
	
	end;
end loop;
close C02;

open C03;
loop
fetch C03 into	
	ie_imprime_doc_w,
	ds_arquivo_w,
	ds_documento_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	
	select 	nextval('orcamento_pac_doc_seq')
	into STRICT	nr_sequencia_w
	;
		
	
	insert into orcamento_pac_doc(	nr_sequencia,
					nr_orc_pac,
					dt_atualizacao,
					nm_usuario,
					ds_documento,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ie_imprime_doc,
					ds_arquivo)
	values (	nr_sequencia_w,
		nr_seq_orcamento_p,
		clock_timestamp(),
		nm_usuario_p,
		ds_documento_w,
		clock_timestamp(),
		nm_usuario_p,
		ie_imprime_doc_w,
		ds_arquivo_w);
	


	end;
end loop;
close C03;

open C07;
loop
fetch C07 into	
	c07_w;
EXIT WHEN NOT FOUND; /* apply on C07 */
	begin
		select	nextval('orcamento_item_incluso_seq')
		into STRICT	nr_sequencia_w
		;
		
		insert into orcamento_item_incluso(
						nr_sequencia,
						nr_seq_orcamento,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ds_item,
						nr_seq_apresent,
						nr_seq_regra,
						qt_item)
		values (nr_sequencia_w,
						nr_seq_orcamento_p,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						c07_w.ds_item,
						c07_w.nr_seq_apresent,
						c07_w.nr_seq_regra,
						c07_w.qt_item);
	end;
end loop;
close C07;

open C08;
loop
fetch C08 into	
	c08_w;
EXIT WHEN NOT FOUND; /* apply on C08 */
	begin
		select	nextval('orcamento_item_excluso_seq')
		into STRICT	nr_sequencia_w
		;
		
		insert into orcamento_item_excluso(
						nr_sequencia,
						nr_seq_orcamento,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ds_item,
						nr_seq_apresent,
						nr_seq_regra,
						qt_item)
		values (nr_sequencia_w,
						nr_seq_orcamento_p,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						c08_w.ds_item,
						c08_w.nr_seq_apresent,
						c08_w.nr_seq_regra,
						c08_w.qt_item);
	end;
end loop;
close C08;


CALL calcular_orcamento_paciente(nr_seq_orcamento_p,nm_usuario_p,cd_estabelecimento_p);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_orcamento_padrao ( nr_seq_orcamento_p bigint, nr_seq_orcamento_padrao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

