-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_reserva_paciente ( cd_pessoa_fisica_p text, cd_convenio_p bigint, ie_tipo_atendimento_p bigint, ie_clinica_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, cd_setor_atendimento_p INOUT bigint, cd_unidade_basica_p INOUT text, cd_unidade_compl_p INOUT text, cd_tipo_acomodacao_p INOUT bigint, qt_reserva_convenio_p INOUT bigint, ds_mesangem_p INOUT text ) AS $body$
DECLARE

					 
 
cd_setor_atendimento_w		integer;
cd_unidade_basica_w		varchar(10);
cd_unidade_compl_w		varchar(10);
ds_setor_atendimento_w		varchar(60);
ie_status_unidade_w		varchar(3);
cd_tipo_acomodacao_w		smallint;
qt_itens_regras_w		smallint;
ie_verificar_w			varchar(1);
ie_verifica_estabelecimento_w	varchar(1);
ie_reserva_pac_atend_w 		varchar(1);
ds_status_unidade_w		varchar(255);
qt_reg_w			smallint;
	

BEGIN 
 
ie_reserva_pac_atend_w := Obter_Param_Usuario(916, 1107, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_reserva_pac_atend_w);
ie_verifica_estabelecimento_w := Obter_Param_Usuario(916, 670, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_verifica_estabelecimento_w);
 
if (ie_reserva_pac_atend_w = 'S') then	 
	 
	select	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END  
	into STRICT	ie_verificar_w 
	from	regra_consiste_reserva_pac;
 
	if (ie_verificar_w = 'N') then 
 
		select CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
		into STRICT	ie_verificar_w	 
		from	regra_consiste_reserva_pac 
		where	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_p) = ie_tipo_atendimento_p 
		and	coalesce(ie_clinica,ie_clinica_p) = ie_clinica_p;
		 
	end if;
	 
	if (ie_verificar_w = 'S') then 
 
		qt_reserva_convenio_p	:= 0;
		 
		SELECT 	coalesce(max(1), 0)	 
		into STRICT 	qt_reg_w 
		FROM 	unidade_atendimento 
		WHERE	cd_paciente_reserva = cd_pessoa_fisica_p;
		 
		if (qt_reg_w > 0) then 
			if (ie_verifica_estabelecimento_w = 'S') then 
 
				begin 
				select	max(cd_setor_atendimento), 
					cd_unidade_basica, 
					cd_unidade_compl, 
					substr(obter_nome_setor(cd_setor_atendimento),1,60), 
					ie_status_unidade, 
					cd_tipo_acomodacao 
				into STRICT	cd_setor_atendimento_w, 
					cd_unidade_basica_w, 
					cd_unidade_compl_w, 
					ds_setor_atendimento_w, 
					ie_status_unidade_w, 
					cd_tipo_acomodacao_w 
				from	ocupacao_unidade_v 
				where	cd_paciente_reserva   =	cd_pessoa_fisica_p 
				and	cd_setor_atendimento in (SELECT	cd_setor_atendimento 
								 from  setor_atendimento 
								 where cd_estabelecimento = cd_estabelecimento_p)   
				group by substr(obter_nome_setor(cd_setor_atendimento),1,60), 
					ie_status_unidade, 
					cd_unidade_basica, 
					cd_unidade_compl, 
					cd_tipo_acomodacao;
				exception 
					when others then 
						cd_setor_atendimento_w	:= null;
				 
				end;
		 
			else 
	 
				begin 
				select	max(cd_setor_atendimento), 
					cd_unidade_basica, 
					cd_unidade_compl, 
					substr(obter_nome_setor(cd_setor_atendimento),1,60), 
					ie_status_unidade, 
					cd_tipo_acomodacao 
				into STRICT	cd_setor_atendimento_w, 
					cd_unidade_basica_w, 
					cd_unidade_compl_w, 
					ds_setor_atendimento_w, 
					ie_status_unidade_w, 
					cd_tipo_acomodacao_w 
				from	ocupacao_unidade_v 
				where	cd_paciente_reserva   =	cd_pessoa_fisica_p 
				group by substr(obter_nome_setor(cd_setor_atendimento),1,60), 
					ie_status_unidade, 
					cd_unidade_basica, 
					cd_unidade_compl, 
					cd_tipo_acomodacao;
				exception 
					when others then 
						cd_setor_atendimento_w	:= null;
				end;
			end if;		
		end if;
 
		if	((cd_setor_atendimento_w IS NOT NULL AND cd_setor_atendimento_w::text <> '') and (ie_status_unidade_w in ('L','R'))) then 
			ds_mesangem_p		:= wheb_mensagem_pck.get_texto(88938);--'Há um leito reservado para este paciente, deseja utilizá-lo?'; 
			cd_setor_atendimento_p	:= cd_setor_atendimento_w;
			cd_unidade_basica_p	:= cd_unidade_basica_w;
			cd_unidade_compl_p	:= cd_unidade_compl_w;
			cd_tipo_acomodacao_p	:= cd_tipo_acomodacao_w;
		elsif (cd_setor_atendimento_w IS NOT NULL AND cd_setor_atendimento_w::text <> '') then 
			begin 
				select 	substr(obter_valor_dominio(82,ie_status_unidade_w),1,80) 
				into STRICT	ds_status_unidade_w 
				;
			exception 
			when others then 
				ds_status_unidade_w := ' ';
			end;			
			ds_mesangem_p		:= wheb_mensagem_pck.get_texto(728770, 'DS_STATUS=' || ds_status_unidade_w);							
		end if;
 
		SELECT 	coalesce(MAX(1),0) 
		into STRICT	qt_reg_w 
		FROM 	unidade_atendimento 
		WHERE	coalesce(cd_paciente_reserva::text, '') = '' 
		and	cd_convenio_reserva = cd_convenio_p;
		 
		if (qt_reg_w > 0) then 
		 
			if (coalesce(cd_setor_atendimento_w::text, '') = '') and (ie_verifica_estabelecimento_w = 'N') then 
				select	count(*) 
				into STRICT	qt_reserva_convenio_p 
				from	ocupacao_unidade_v 
				where	coalesce(cd_paciente_reserva::text, '') = '' 
				and	cd_convenio_reserva = cd_convenio_p 
				and	ie_status_unidade in ('L','R');
				 
				ds_mesangem_p	:= wheb_mensagem_pck.get_texto(88939);--'Há um leito reservado para o convênio deste paciente, deseja utilizá-lo?'; 
			elsif (coalesce(cd_setor_atendimento_w::text, '') = '') and (ie_verifica_estabelecimento_w = 'S') then
				select	count(*) 
				into STRICT	qt_reserva_convenio_p 
				from	ocupacao_unidade_v 
				where	coalesce(cd_paciente_reserva::text, '') = '' 
				and	cd_convenio_reserva = cd_convenio_p 
				and	ie_status_unidade in ('L','R') 
				and	cd_setor_atendimento in (SELECT	cd_setor_atendimento 
								from  setor_atendimento 
								where cd_estabelecimento = cd_estabelecimento_p);
		 
				ds_mesangem_p	:= wheb_mensagem_pck.get_texto(88939);--'Há um leito reservado para o convênio deste paciente, deseja utilizá-lo?'; 
		
			end if;
		 
		end if;
	end if;
		 
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_reserva_paciente ( cd_pessoa_fisica_p text, cd_convenio_p bigint, ie_tipo_atendimento_p bigint, ie_clinica_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, cd_setor_atendimento_p INOUT bigint, cd_unidade_basica_p INOUT text, cd_unidade_compl_p INOUT text, cd_tipo_acomodacao_p INOUT bigint, qt_reserva_convenio_p INOUT bigint, ds_mesangem_p INOUT text ) FROM PUBLIC;

