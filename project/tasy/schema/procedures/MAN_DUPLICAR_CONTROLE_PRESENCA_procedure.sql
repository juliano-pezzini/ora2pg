-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_duplicar_controle_presenca ( nr_sequencia_p bigint, dt_final_p timestamp, ie_sabado_p text, ie_dominto_p text, ie_feriado_p text, nm_usuario_p text) AS $body$
DECLARE


dt_entrada_w		timestamp;
dt_saida_w		timestamp;
dt_referencia_w		timestamp;
nr_sequencia_w		bigint;
qt_min_interv_w		integer;
qt_min_lanche_w		integer;
ie_dia_reg_w		varchar(1);


BEGIN

begin
select	dt_entrada,
	dt_saida,
	qt_min_intervalo,
	qt_min_lanche
into STRICT	dt_entrada_w,
	dt_saida_w,
	qt_min_interv_w,
	qt_min_lanche_w
from	usuario_controle
where	nr_sequencia = nr_sequencia_p;
exception
when others then
	null;
end;

if (dt_entrada_w IS NOT NULL AND dt_entrada_w::text <> '') and (dt_final_p IS NOT NULL AND dt_final_p::text <> '') and (dt_entrada_w < dt_final_p) then
	begin
	dt_entrada_w	:= dt_entrada_w+1;
	dt_saida_w 	:= dt_saida_w+1;
	dt_referencia_w	:= trunc(dt_entrada_w);

	while(trunc(dt_entrada_w) <= trunc(dt_final_p)) loop
		begin
		select	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END
		into STRICT	ie_dia_reg_w
		from	usuario_controle
		where	nm_usuario = nm_usuario_p
		and	dt_referencia = dt_referencia_w;

		if (ie_dia_reg_w = 'S') then
			if (coalesce(ie_sabado_p,'N') = 'N') and (pkg_date_utils.get_WeekDay(dt_entrada_w) = 7) then /* SÃ¡bado */
				ie_dia_reg_w := 'N';
			elsif (coalesce(ie_dominto_p,'N') = 'N')
				and (pkg_date_utils.get_WeekDay(dt_entrada_w) = 1) then /* Domingo */
				ie_dia_reg_w := 'N';
			elsif (coalesce(ie_feriado_p,'N') = 'N') and (obter_se_feriado(wheb_usuario_pck.get_cd_estabelecimento,dt_entrada_w) > 0) then /* Reriado */
				ie_dia_reg_w := 'N';
			end if;
		end if;

		if (ie_dia_reg_w = 'S') then
			begin
			select	nextval('usuario_controle_seq')
			into STRICT	nr_sequencia_w
			;

			insert into usuario_controle(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_entrada,
					dt_saida,
					qt_min_intervalo,
					qt_min_os,
					qt_min_atividade,
					qt_min_total,
					qt_min_nreg,
					dt_referencia,
					qt_min_lanche,
					qt_min_normal,
					qt_min_extra)
				values (	nr_sequencia_w,
					clock_timestamp(),
					nm_usuario_p,
					dt_entrada_w,
					dt_saida_w,
					qt_min_interv_w,
					0,
					0,
					0,
					0,
					dt_referencia_w,
					qt_min_lanche_w,
					0,
					0);
			if (dt_saida_w IS NOT NULL AND dt_saida_w::text <> '') then
				CALL atualizar_ativ_usuario(nr_sequencia_w);
			end if;
			end;
		end if;

		dt_entrada_w	:= dt_entrada_w+1;
		dt_saida_w 	:= dt_saida_w+1;
		dt_referencia_w	:= trunc(dt_entrada_w);
		end;
	end loop;

	commit;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_duplicar_controle_presenca ( nr_sequencia_p bigint, dt_final_p timestamp, ie_sabado_p text, ie_dominto_p text, ie_feriado_p text, nm_usuario_p text) FROM PUBLIC;

