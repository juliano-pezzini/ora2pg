-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sup_gerar_ordens_solic_liberar ( nr_solic_compra_p bigint, cd_comprador_p text, dt_ordem_p timestamp, dt_inclusao_p timestamp, dt_entrega_p timestamp, cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, ie_frete_p text, cd_moeda_p bigint, ie_aviso_chegada_p text, ie_emite_obs_p text, ie_urgente_p text, nm_usuario_p text, nr_seq_tipo_compra_p bigint, nr_seq_mod_compra_p bigint, ie_entrega_solic_p text, ds_lista_oc_p INOUT text) AS $body$
DECLARE


cd_cgc_contratado_w		varchar(14);
cd_pessoa_contratada_w		varchar(10);
cd_condicao_pagamento_w		bigint;
cd_unidade_medida_compra_w	varchar(30);
cd_material_w			integer;
cd_conta_contabil_w		varchar(20);
cd_centro_custo_w		integer;
cd_centro_custo_ww		ordem_compra_item.cd_centro_custo%type;
nr_seq_crit_rateio_w		bigint;
nr_seq_conta_financ_w		bigint;
qt_material_w			double precision;
vl_pagto_w			double precision;
nr_ordem_compra_w		bigint;
nr_ordem_compra_ant_w		bigint;
nr_item_oci_w			integer	:= 0;
ie_tipo_conta_w			integer	:= 2;
nr_seq_proj_rec_w		bigint;
cd_pessoa_solicitante_w		varchar(10);
cd_local_estoque_w		smallint;
nr_item_solic_compra_w		integer;
nr_seq_regra_contrato_w		bigint;
qt_existe_regra_disp_mer_w	bigint;
ie_acao_disp_mercado_w		varchar(1) 	:= 'N';
qt_itens_gerados_w		bigint	:= 0;
nr_seq_contrato_w		bigint;
nr_seq_contrato_ant_w		bigint;
ds_observacao_orig_w		varchar(255);
ds_observacao_w			varchar(255);
ds_lista_oc_w			varchar(2000);
dt_entrega_solicitada_w		timestamp;
ie_estoque_w			varchar(1);
cd_estabelecimento_w		bigint;
cd_material_contrato_w		bigint;
dt_entrega_w			timestamp;
qt_entrega_solicitada_w		double precision;
qt_dias_entrega_w		integer;
linha_w				integer;
nr_item_solic_compra_entr_w	integer;
qt_dias_ajustado_w		integer;
dt_prog_entrega_w		timestamp;
dt_entrega_atual_w		timestamp;
dt_entrega_ref_w		timestamp;
cd_moeda_w			smallint;
cd_comprador_w			varchar(10);
dt_aprovacao_w			timestamp;
ie_aprova_auto_w		varchar(1);
cd_perfil_w			bigint;
ie_envia_email_w		varchar(1);
nr_seq_regra_w			bigint := 0;
ds_email_adicional_w		varchar(2000);
cd_perfil_disparar_w		varchar(10);
ie_momento_envio_w		varchar(1);
ds_email_destino_w		varchar(2000);
ds_email_origem_w		varchar(255);
nm_usuario_origem_w		varchar(255);
ds_assunto_padrao_w		varchar(255);
ds_mensagem_padrao_w		varchar(4000);
qt_reg_lic_tipo_compra_w		bigint;
ds_observacao_ordem_w		solic_compra.ds_observacao%type;
nr_seq_marca_w			contrato_regra_nf.nr_seq_marca%type;
vl_desconto_w			contrato_regra_nf.vl_desconto%type;
pr_desconto_w			contrato_regra_nf.pr_desconto%type;
ie_aplica_tributos_oc_w		varchar(15);
cd_tributo_w			contrato_regra_pagto_trib.cd_tributo%type;
vl_tributo_w			contrato_regra_pagto_trib.vl_tributo%type;
pr_tributo_w			contrato_regra_pagto_trib.pr_tributo%type;
ie_corpo_item_w			contrato_regra_pagto_trib.ie_corpo_item%type;
vl_total_item_w			ordem_compra_item.vl_total_item%type;
nr_seq_item_contrato_w	contrato_regra_nf.nr_sequencia%type;
ie_preco_oc_w			contrato_regra_nf.ie_preco_oc%type;
qt_material_fixa_w		contrato_regra_nf.qt_material_fixa%type;
vl_pagto_solic_compra_w	solic_compra_item.vl_unit_previsto%type;
ie_centro_custo_oc_contr_w	parametro_compras.ie_centro_custo_oc_contr%type;
pr_desc_financ_w		contrato_regra_pagto.pr_desc_financ%type;

c01 CURSOR FOR
SELECT	max(a.nr_sequencia),
	b.nr_item_solic_compra,
	max(a.vl_pagto),
	max(a.ie_preco_oc),
	max(a.cd_material),
	max(qt_dias_entrega),
	max(a.nr_seq_marca),
	max(vl_desconto),
	max(pr_desconto),
	max(a.nr_seq_item),
	max(a.nr_seq_crit_rateio),
	max(a.qt_material_fixa)
from   	(SELECT	b.nr_sequencia,
		a.cd_material,
		a.vl_pagto,
		a.ie_preco_oc,
		a.qt_dias_entrega,
		a.nr_seq_marca,
		a.vl_desconto,
		a.pr_desconto,
		a.nr_sequencia nr_seq_item,
		a.nr_seq_crit_rateio,
		a.qt_material_fixa
	from	contrato_regra_nf a,
		contrato b
	where	a.nr_seq_contrato = b.nr_sequencia
	and	((b.cd_estabelecimento = cd_estabelecimento_p) or
		exists (select	1
			from	contrato_estab_adic c
			where	b.nr_sequencia = c.nr_seq_contrato
			and	c.cd_estab_adic = cd_estabelecimento_p))
	and ((coalesce(a.cd_estab_regra::text, '') = '') or (a.cd_estab_regra = cd_estabelecimento_p) or (exists (select	1
												from	contrato_regra_nf_estab x
												where	x.cd_estab_regra = cd_estabelecimento_p
												and	x.nr_seq_regra_nf = a.nr_sequencia)))
	and	(((b.cd_cgc_contratado IS NOT NULL AND b.cd_cgc_contratado::text <> '') and (substr(obter_dados_pf_pj(null,b.cd_cgc_contratado,'S'),1,1) = 'A')) or (b.cd_pessoa_contratada IS NOT NULL AND b.cd_pessoa_contratada::text <> ''))
	and	((coalesce(a.dt_inicio_vigencia::text, '') = '') or (trunc(a.dt_inicio_vigencia,'dd') <= trunc(clock_timestamp(),'dd')))
	and	((coalesce(a.dt_fim_vigencia::text, '') = '') or (trunc(a.dt_fim_vigencia,'dd') >= trunc(clock_timestamp(),'dd')))
    and (coalesce(a.ie_situacao::text, '') = '' or a.ie_situacao = 'A')
	and	coalesce(cd_pessoa_contratada::text, '') = ''
	and	coalesce(b.ie_situacao,'A') = 'A'
	
union

	select	b.nr_sequencia,
		a.cd_material,
		a.vl_pagto,
		a.ie_preco_oc,
		a.qt_dias_entrega,
		a.nr_seq_marca,
		a.vl_desconto,
		a.pr_desconto,
		a.nr_sequencia nr_seq_item,
		a.nr_seq_crit_rateio,
		a.qt_material_fixa
	from	contrato_regra_nf a,
		contrato b
	where	a.nr_seq_contrato = b.nr_sequencia
	and	((b.cd_estabelecimento = cd_estabelecimento_p) or 
		exists (select	1
			from	contrato_estab_adic c
			where	b.nr_sequencia = c.nr_seq_contrato
			and	c.cd_estab_adic = cd_estabelecimento_p))
	and ((coalesce(a.cd_estab_regra::text, '') = '') or (a.cd_estab_regra = cd_estabelecimento_p) or (exists (select	1
												from	contrato_regra_nf_estab x
												where	x.cd_estab_regra = cd_estabelecimento_p
												and	x.nr_seq_regra_nf = a.nr_sequencia)))
	and	(((b.cd_cgc_contratado IS NOT NULL AND b.cd_cgc_contratado::text <> '') and (substr(obter_dados_pf_pj(null,b.cd_cgc_contratado,'S'),1,1) = 'A')) or (b.cd_pessoa_contratada IS NOT NULL AND b.cd_pessoa_contratada::text <> ''))
	and	((coalesce(a.dt_inicio_vigencia::text, '') = '') or (trunc(a.dt_inicio_vigencia,'dd') <= trunc(clock_timestamp(),'dd')))
	and	((coalesce(a.dt_fim_vigencia::text, '') = '') or (trunc(a.dt_fim_vigencia,'dd') >= trunc(clock_timestamp(),'dd')))
    and (coalesce(a.ie_situacao::text, '') = '' or a.ie_situacao = 'A')
	and	(cd_pessoa_contratada IS NOT NULL AND cd_pessoa_contratada::text <> '')
	and	coalesce(b.ie_situacao,'A') = 'A') a,
	solic_compra_item b
where	((ie_estoque_w = 'N' AND a.cd_material = b.cd_material) or
	((ie_estoque_w = 'S') and (obter_dados_material(a.cd_material,'EST') = obter_dados_material(b.cd_material,'EST'))))
and	b.nr_solic_compra = nr_solic_compra_p
and	not exists (select	1
			from	ordem_compra_item x
			where	x.nr_solic_compra = b.nr_solic_compra
			and	x.nr_item_solic_compra = b.nr_item_solic_compra)
and	(((coalesce(b.nr_contrato::text, '') = '') and (coalesce(b.nr_seq_regra_contrato::text, '') = '')) 
or (b.nr_contrato = a.nr_sequencia AND b.nr_seq_regra_contrato = a.nr_seq_item))
group by	b.nr_item_solic_compra
order by	max(a.nr_sequencia);

c02 CURSOR FOR
SELECT	dt_entrega_solicitada,
	qt_entrega_solicitada
from	solic_compra_item_entrega
where	nr_solic_compra = nr_solic_compra_p
AND	nr_item_solic_compra = nr_item_solic_compra_w
and	ie_entrega_solic_p = 'S';

c03 CURSOR FOR
SELECT	row_number() OVER () AS linha,
	nr_item_solic_compra_entr,
	dt_entrega
from (	SELECT	nr_item_solic_compra_entr,
		trunc(dt_entrega_solicitada,'dd') dt_entrega
	from	solic_compra_item_entrega
	where	nr_solic_compra = nr_solic_compra_p
	and	nr_item_solic_compra = nr_item_solic_compra_w
	order by	dt_entrega_solicitada) alias1;

c04 CURSOR FOR
SELECT	cd_tributo,
	vl_tributo,
	pr_tributo,
	ie_corpo_item
from	contrato_regra_pagto_trib
where	nr_seq_regra_nf = coalesce(nr_seq_regra_contrato_w,nr_seq_item_contrato_w);


BEGIN

cd_comprador_w := cd_comprador_p;

if (coalesce(cd_comprador_w::text, '') = '') then
	cd_comprador_w := substr(obter_dados_parametro_compras(cd_estabelecimento_p, 16),1,10);
end if;

select	a.cd_estabelecimento,
	a.cd_centro_custo,
	a.cd_local_estoque,
	a.cd_pessoa_solicitante,
	0,
	a.ds_observacao
into STRICT	cd_estabelecimento_w,
	cd_centro_custo_w,
	cd_local_estoque_w,
	cd_pessoa_solicitante_w,
	nr_seq_contrato_ant_w,
	ds_observacao_ordem_w
from	solic_compra a
where	a.nr_solic_compra = nr_solic_compra_p;

cd_perfil_w	:= obter_perfil_ativo;

select (max(obter_valor_param_usuario(913, 185, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w))),
	(max(obter_valor_param_usuario(913, 222, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w))),
	(max(obter_valor_param_usuario(913, 289, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)))
into STRICT	ie_estoque_w,
	ie_aprova_auto_w,
	ie_aplica_tributos_oc_w
;

select	count(1)
into STRICT	qt_existe_regra_disp_mer_w
from	consiste_disp_mercado
where	cd_evento = 'OS';

open c01;
loop
fetch c01 into
	nr_seq_contrato_w,
	nr_item_solic_compra_w,
	vl_pagto_w,
	ie_preco_oc_w,
	cd_material_contrato_w,
	qt_dias_entrega_w,
	nr_seq_marca_w,
	vl_desconto_w,
	pr_desconto_w,
	nr_seq_item_contrato_w,
	nr_seq_crit_rateio_w,
	qt_material_fixa_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	if (nr_seq_contrato_ant_w <> nr_seq_contrato_w) then /* Cria nova OC se for contrato diferente do anterior */
		begin
		if (coalesce(nr_ordem_compra_ant_w,0) > 0) then /* Atualizar dados da OC anterior */
			begin
			if (coalesce(qt_itens_gerados_w,0) = 0) then
				begin

				delete 	from ordem_compra
				where	nr_ordem_compra = nr_ordem_compra_ant_w;

				end;
			else
				begin

				CALL Gerar_Ordem_Compra_Venc(nr_ordem_compra_ant_w, nm_usuario_p);
				ds_lista_oc_w	:= ds_lista_oc_w || nr_ordem_compra_ant_w || ', ';

				if (ie_aprova_auto_w = 'S') then
					begin
					select	dt_aprovacao
					into STRICT	dt_aprovacao_w
					from	ordem_compra
					where	nr_ordem_compra = nr_ordem_compra_ant_w;

					if (coalesce(dt_aprovacao_w::text, '') = '') then
						Calcular_Liquido_Ordem_Compra(nr_ordem_compra_ant_w, nm_usuario_p);
						CALL Gerar_Aprov_Ordem_Compra(nr_ordem_compra_ant_w, null, 'S', nm_usuario_p);
					end if;
					end;
				end if;
				end;
			end if;
			end;
		end if;

		select	cd_cgc_contratado,
			cd_pessoa_contratada,
			cd_condicao_pagamento
		into STRICT	cd_cgc_contratado_w,
			cd_pessoa_contratada_w,
			cd_condicao_pagamento_w
		from	contrato
		where	nr_sequencia = nr_seq_contrato_w;
		
		select 	obter_desconto_financ_contr(nr_seq_contrato_w)
		into STRICT   	pr_desc_financ_w
		;

		if (coalesce(cd_condicao_pagamento_w::text, '') = '') then
			/*(-20011,'Nao existe condicao de pagamento informada no contrato seq. ' || nr_seq_contrato_w || '.');*/

			CALL wheb_mensagem_pck.exibir_mensagem_abort(196114, 'NR_CONTRATO=' || nr_seq_contrato_w);
		end if;

		if (coalesce(cd_cgc_contratado_w::text, '') = '') and (coalesce(cd_pessoa_contratada_w::text, '') = '') then
			/*(-20011,'Nao existe pessoa fisica ou juridica informada no contrato seq. ' || nr_seq_contrato_w || ' para a geracao da ordem de compras.');*/

			CALL wheb_mensagem_pck.exibir_mensagem_abort(196115, 'NR_CONTRATO=' || nr_seq_contrato_w);
		end if;

		select	nextval('ordem_compra_seq')
		into STRICT nr_ordem_compra_w
		;

		if (ie_entrega_solic_p = 'S') then
			dt_entrega_w	:= clock_timestamp();
		else
			dt_entrega_w	:= dt_entrega_p;
		end if;

		cd_moeda_w := cd_moeda_p;
		if (coalesce(cd_moeda_p::text, '') = '') then
			select	max(cd_moeda)
			into STRICT	cd_moeda_w
			from	contrato_regra_pagto
			where	nr_seq_contrato = nr_seq_contrato_w;

			if (coalesce(cd_moeda_w::text, '') = '') then
				cd_moeda_w := obter_dados_parametro_compras(cd_estabelecimento_p,1);
			end if;
		end if;

		if (nr_seq_tipo_compra_p IS NOT NULL AND nr_seq_tipo_compra_p::text <> '')then
			begin
				select count(1)
				into STRICT qt_reg_lic_tipo_compra_w
				from REG_LIC_TIPO_COMPRA
				where nr_sequencia = nr_seq_tipo_compra_p;

				if (qt_reg_lic_tipo_compra_w = 0)then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(1043648);
				end if;
			end;
		end if;

		insert into ordem_compra(
			nr_ordem_compra,
			cd_estabelecimento,
			cd_cgc_fornecedor,
			cd_condicao_pagamento,
			cd_comprador,
			dt_ordem_compra,
			dt_atualizacao,
			nm_usuario,
			cd_moeda,
			ie_situacao,
			dt_inclusao,
			cd_pessoa_solicitante,
			ie_frete,
			vl_frete,
			pr_desconto,
			pr_desc_pgto_antec,
			pr_juros_negociado,
			dt_entrega,
			ie_aviso_chegada,
			cd_pessoa_fisica,
			ie_emite_obs,
			ie_urgente,
			cd_setor_atendimento,
			pr_desc_financeiro,
			vl_desconto,
			ie_somente_pagto,
			ie_tipo_ordem,
			cd_local_entrega,
			nr_seq_tipo_compra,
			nr_seq_mod_compra,
			ds_observacao)
		values (	nr_ordem_compra_w,
			cd_estabelecimento_p,
			cd_cgc_contratado_w,
			cd_condicao_pagamento_w,
			cd_comprador_w,
			coalesce(dt_ordem_p,clock_timestamp()),
			clock_timestamp(),
			nm_usuario_p,
			cd_moeda_w,
			'A',
			coalesce(dt_inclusao_p,clock_timestamp()),
			cd_pessoa_solicitante_w,
			coalesce(ie_frete_p,clock_timestamp()),
			0,
			0,
			0,
			0,
			dt_entrega_w,
			ie_aviso_chegada_p,
			cd_pessoa_contratada_w,
			ie_emite_obs_p,
			ie_urgente_p,
			cd_setor_atendimento_p,
			pr_desc_financ_w,
			0,
			'N',
			'C',
			cd_local_estoque_w,
			nr_seq_tipo_compra_p,
			nr_seq_mod_compra_p,
			ds_observacao_ordem_w);

		nr_item_oci_w		:= 0;
		qt_itens_gerados_w	:= 0;

		nr_ordem_compra_ant_w	:= nr_ordem_compra_w;

		end;
	end if;

	if (nr_ordem_compra_w > 0) then
		begin
		select	CASE WHEN ie_estoque_w='S' THEN coalesce(cd_material_contrato_w,a.cd_material)  ELSE a.cd_material END ,
			a.qt_material,
			a.vl_unit_previsto,
			a.cd_unidade_medida_compra,
			a.nr_item_solic_compra,
			a.nr_seq_proj_rec,
			a.nr_seq_regra_contrato
		into STRICT	cd_material_w,
			qt_material_w,
			vl_pagto_solic_compra_w,
			cd_unidade_medida_compra_w,
			nr_item_solic_compra_w,
			nr_seq_proj_rec_w,
			nr_seq_regra_contrato_w
		from	solic_compra_item a
		where	a.nr_solic_compra 	= nr_solic_compra_p
		and	a.nr_item_solic_compra = nr_item_solic_compra_w;

		if	((coalesce(vl_pagto_w,0) = 0) and (ie_preco_oc_w = 'V') and (coalesce(vl_pagto_solic_compra_w, 0) > 0)) then
			vl_pagto_w := vl_pagto_solic_compra_w;
		end if;

		if (qt_existe_regra_disp_mer_w > 0) then
			begin
			/* Verifica se possui evento na 'Regra para consistencia do item disp. mercado', e se o material esta disponivel no mercado */

			select  substr(obter_acao_regra_disp_mercado('OS', cd_material_w, null, cd_estabelecimento_p),1,1) ie_acao_regra
			into STRICT	ie_acao_disp_mercado_w
			;

			if (ie_acao_disp_mercado_w <> 'N') then
				begin
				CALL grava_consiste_disp_mercado( 917,
						     cd_material_w,
						     nm_usuario_p,
						     ie_acao_disp_mercado_w);
				end;
			end if;
			end;
		end if;

		if (ie_acao_disp_mercado_w in ('M', 'N')) then
			begin
			select	coalesce(max(nr_item_oci),0) + 1
			into STRICT	nr_item_oci_w
			from	ordem_compra_item
			where	nr_ordem_compra = nr_ordem_compra_w;

            if (nr_seq_regra_contrato_w > 0) then

                select 	max(coalesce(ie_centro_custo_oc_contr,'SC'))
                into STRICT 	ie_centro_custo_oc_contr_w
                from 	parametro_compras
                where 	cd_estabelecimento = cd_estabelecimento_p;

                if (ie_centro_custo_oc_contr_w = 'CO') then
                    select	cd_centro_custo
                    into STRICT	cd_centro_custo_w
                    from	contrato_regra_nf
                    where	nr_sequencia = nr_seq_regra_contrato_w;
                end if;

                select	cd_conta_contabil
                into STRICT	cd_conta_contabil_w
                from	contrato_regra_nf
                where	nr_sequencia = nr_seq_regra_contrato_w;

            end if;

            cd_centro_custo_ww := cd_centro_custo_w;

			if (coalesce(cd_conta_contabil_w::text, '') = '') then
				if (coalesce(cd_centro_custo_w::text, '') = '') then
					ie_tipo_conta_w	:= 2;
				else
					ie_tipo_conta_w	:= 3;
				end if;

				SELECT * FROM define_conta_material(	cd_estabelecimento_p, cd_material_w, ie_tipo_conta_w, null, null, null, null, null, null, null, cd_local_estoque_w, Null, dt_ordem_p, cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
			end if;

			vl_total_item_w := round((vl_pagto_w * qt_material_w)::numeric,4);

			insert into ordem_compra_item(
				nr_ordem_compra,
				nr_item_oci,
				cd_material,
				cd_unidade_medida_compra,
				vl_unitario_material,
				qt_material,
				qt_original,
				dt_atualizacao,
				nm_usuario,
				ie_situacao,
				cd_pessoa_solicitante,
				pr_descontos,
				cd_local_estoque,
				vl_item_liquido,
				cd_centro_custo,
				cd_conta_contabil,
				pr_desc_financ,
				vl_desconto,
				ie_geracao_solic,
				nr_contrato,
				nr_seq_proj_rec,
				nr_solic_compra,
				nr_item_solic_compra,
				nr_seq_marca,
				vl_total_item,
				nr_seq_criterio_rateio,
                nr_seq_regra_contrato,
				cd_sequencia_parametro)
			values (	nr_ordem_compra_w,
				nr_item_oci_w,
				cd_material_w,
				cd_unidade_medida_compra_w,
				vl_pagto_w,
				qt_material_w,
				qt_material_w,
				clock_timestamp(),
				nm_usuario_p,
				'A',
				cd_pessoa_solicitante_w,
				pr_desconto_w,
				cd_local_estoque_w,
				vl_pagto_w,
				cd_centro_custo_w,
				cd_conta_contabil_w,
				0,
				vl_desconto_w,
				'U',
				nr_seq_contrato_w,
				nr_seq_proj_rec_w,
				nr_solic_compra_p,
				nr_item_solic_compra_w,
				nr_seq_marca_w,
				vl_total_item_w,
				nr_seq_crit_rateio_w,
                nr_seq_regra_contrato_w,
				philips_contabil_pck.get_parametro_conta_contabil);

			if (ie_aplica_tributos_oc_w = 'S') and (coalesce(nr_seq_regra_contrato_w,nr_seq_item_contrato_w) > 0) then		
				open C04;
				loop
				fetch C04 into	
					cd_tributo_w,
					vl_tributo_w,
					pr_tributo_w,
					ie_corpo_item_w;					
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin

					if (coalesce(pr_tributo_w,0) = 0) then
						pr_tributo_w :=  dividir(vl_tributo_w , (coalesce(qt_material_fixa_w,1) * vl_pagto_w)) * 100; -- gerar percentual
					end if;
					vl_tributo_w :=  vl_total_item_w/100*pr_tributo_w;

					insert into ordem_compra_item_trib(
						nr_ordem_compra,
						nr_item_oci,
						cd_tributo,
						pr_tributo,
						vl_tributo,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ie_corpo_item)
					values (	nr_ordem_compra_w,
						nr_item_oci_w,
						cd_tributo_w,
						coalesce(pr_tributo_w,dividir((vl_tributo_w * 100),(vl_total_item_w))),
						coalesce(vl_tributo_w,0),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						ie_corpo_item_w);
					end;
				end loop;
				close C04;
			end if;				

			if (ie_entrega_solic_p = 'S')	 then
				begin
				open C02;
				loop
				fetch C02 into	
					dt_entrega_solicitada_w,
					qt_entrega_solicitada_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin
					insert into ordem_compra_item_entrega(
						nr_ordem_compra,
						nr_item_oci,
						dt_prevista_entrega,
						qt_prevista_entrega,
						dt_atualizacao,
						nm_usuario,
						nr_sequencia)
					values (	nr_ordem_compra_w,
						nr_item_oci_w,
						dt_entrega_solicitada_w,
						qt_entrega_solicitada_w,
						clock_timestamp(),
						nm_usuario_p,
						nextval('ordem_compra_item_entrega_seq'));
					end;
				end loop;
				close C02;
				end;
			else
				begin
				insert into ordem_compra_item_entrega(
					nr_ordem_compra,
					nr_item_oci,
					dt_prevista_entrega,
					qt_prevista_entrega,
					dt_atualizacao,
					nm_usuario,
					nr_sequencia)
				values (	nr_ordem_compra_w,
					nr_item_oci_w,
					dt_entrega_w,
					qt_material_w,
					clock_timestamp(),
					nm_usuario_p,
					nextval('ordem_compra_item_entrega_seq'));
				end;
			end if;	

			select	ds_observacao
			into STRICT	ds_observacao_orig_w
			from	solic_compra_item
			where	nr_solic_compra = nr_solic_compra_p
			and	nr_item_solic_compra = nr_item_solic_compra_w;

			ds_observacao_w	:= Wheb_mensagem_pck.get_Texto(307071, 'NR_ORDEM_COMPRA_W='|| NR_ORDEM_COMPRA_W); /*'Gerada ordem de compra ' || nr_ordem_compra_w || ' a partir do item do contrato.';*/
			if (ds_observacao_orig_w IS NOT NULL AND ds_observacao_orig_w::text <> '') then
				ds_observacao_w	:=	substr(ds_observacao_orig_w || chr(10) || chr(13) || ds_observacao_w,1,255);
			end if;

			update	solic_compra_item
			set	ds_observacao = ds_observacao_w
			where	nr_solic_compra = nr_solic_compra_p
			and	nr_item_solic_compra = nr_item_solic_compra_w;

			qt_itens_gerados_w := coalesce(qt_itens_gerados_w,0) + 1;		
			end;
		end if;

		end;
	end if;

	nr_seq_contrato_ant_w	:= nr_seq_contrato_w;

	end;
end loop;
close c01;

if (ie_entrega_solic_p = 'S') then
	begin

	select	min(dt_prevista_entrega)
	into STRICT	dt_entrega_w
	from	ordem_compra_item_entrega
	where	nr_ordem_compra = nr_ordem_compra_w;

	update	ordem_compra
	set	dt_entrega = dt_entrega_w
	where	nr_ordem_compra = nr_ordem_compra_w;

	end;
end if;

if (coalesce(qt_itens_gerados_w,0) = 0) then
	begin

	delete 	from ordem_compra
	where	nr_ordem_compra = nr_ordem_compra_ant_w;

	end;
else
	begin

	CALL Gerar_Ordem_Compra_Venc(nr_ordem_compra_ant_w, nm_usuario_p);
	ds_lista_oc_w	:= ds_lista_oc_w || nr_ordem_compra_ant_w || ', ';

	if (ie_aprova_auto_w = 'S') then
		begin
		select	dt_aprovacao
		into STRICT	dt_aprovacao_w
		from	ordem_compra
		where	nr_ordem_compra = nr_ordem_compra_ant_w;

		if (coalesce(dt_aprovacao_w::text, '') = '') then
			Calcular_Liquido_Ordem_Compra(nr_ordem_compra_ant_w, nm_usuario_p);
			CALL Gerar_Aprov_Ordem_Compra(nr_ordem_compra_ant_w, null, 'S', nm_usuario_p);
		end if;
		end;
	end if;
	end;
end if;

if (ds_lista_oc_w IS NOT NULL AND ds_lista_oc_w::text <> '') then
	begin
	commit;
	ds_lista_oc_w	:= substr(ds_lista_oc_w,1,length(ds_lista_oc_w) -2);
	end;
end if;

ds_lista_oc_p	:= ds_lista_oc_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_gerar_ordens_solic_liberar ( nr_solic_compra_p bigint, cd_comprador_p text, dt_ordem_p timestamp, dt_inclusao_p timestamp, dt_entrega_p timestamp, cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, ie_frete_p text, cd_moeda_p bigint, ie_aviso_chegada_p text, ie_emite_obs_p text, ie_urgente_p text, nm_usuario_p text, nr_seq_tipo_compra_p bigint, nr_seq_mod_compra_p bigint, ie_entrega_solic_p text, ds_lista_oc_p INOUT text) FROM PUBLIC;

