-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cadastro_regras_estab ( Cd_Estab_Principal_P bigint, Cd_Estabelecimento_P bigint, Nm_Tabela_P text, Nm_Usuario_P text) AS $body$
DECLARE


    Valores_Estab_W	varchar(2000);
    Atributo_Sequencia_W varchar(2000);
    Atrib_Tab_W varchar(2000);
    Insert_Dinamico_W varchar(32000);
    retorno_W varchar(32000);

    C01 CURSOR FOR
    SELECT CASE WHEN rownum=1 THEN  ''  ELSE ',' END ||Nm_Atributo From Tabela_Atributo
    Where Nm_Tabela = Nm_Tabela_P
    And Nm_Atributo <> Atributo_Sequencia_W
    And Nm_Atributo <> 'CD_ESTABELECIMENTO'
    And Nm_Atributo <> 'DT_ATUALIZACAO'
    And Nm_Atributo <> 'DT_ATUALIZACAO_NREC'
    And Nm_Atributo <> 'NM_USUARIO'
    And Nm_Atributo <> 'NM_USUARIO_NREC'
    and ie_tipo_atributo <> 'FUNCTION';


BEGIN

        Select Nm_Atributo Into STRICT Atributo_Sequencia_W From Tabela_Atributo Where Nm_Tabela = Nm_Tabela_P And Ie_Obrigatorio = 'S' And Qt_Seq_Inicio = 1;

            If (Cd_Estabelecimento_P IS NOT NULL AND Cd_Estabelecimento_P::text <> '') Then
                If (Nm_Tabela_P IS NOT NULL AND Nm_Tabela_P::text <> '') Then

                    Insert_Dinamico_W := 'Insert into '||Nm_Tabela_P||' (';
                    Valores_Estab_W := '';

                    Open C01;
                    Loop
                    Fetch C01 Into
                        ATRIB_TAB_W;
                    EXIT WHEN NOT FOUND; /* apply on C01 */
                    Begin
                      Insert_Dinamico_W := Insert_Dinamico_W || ATRIB_TAB_W;
                    End;
                    End Loop;
                    close C01;

                    Insert_Dinamico_W := Insert_Dinamico_W || ',' || atributo_sequencia_w || ', CD_ESTABELECIMENTO, DT_ATUALIZACAO, DT_ATUALIZACAO_NREC, NM_USUARIO, NM_USUARIO_NREC) select ';

                    Open C01;
                    Loop
                    Fetch C01 Into
                        ATRIB_TAB_W;
                    EXIT WHEN NOT FOUND; /* apply on C01 */
                    Begin
                      Insert_Dinamico_W := Insert_Dinamico_W || ATRIB_TAB_W;
                    End;
                    End Loop;
                    close C01;

                    Insert_Dinamico_W := Insert_Dinamico_W || ',' || Nm_Tabela_P || '_seq.nextval , ' || Cd_Estabelecimento_P || ' , '''|| clock_timestamp() || ''' , '''|| clock_timestamp() || ''' , '''|| Nm_Usuario_P || ''' , '''|| Nm_Usuario_P ||
                    ''' from ' || nm_tabela_p || ' where cd_estabelecimento = ' || Cd_Estab_Principal_P;

                    EXECUTE Insert_Dinamico_W;
                    commit;

                End If;
            End If;


      End;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cadastro_regras_estab ( Cd_Estab_Principal_P bigint, Cd_Estabelecimento_P bigint, Nm_Tabela_P text, Nm_Usuario_P text) FROM PUBLIC;

