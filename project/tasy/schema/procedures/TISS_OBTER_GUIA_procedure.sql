-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_obter_guia (ie_tiss_tipo_guia_p text, nr_interno_conta_p bigint, cd_autorizacao_p INOUT text, ie_honorario_p text, cd_medico_honorario_p text, cd_cgc_prestador_p text, ie_responsavel_credito_p text, ie_funcao_medico_p text, cd_cbos_p text, ie_guia_p INOUT text, nr_seq_pedido_p bigint, nr_prescricao_p bigint, cd_senha_p text, cd_setor_atendimento_p bigint, cd_medico_req_p text, nr_prescr_proced_p bigint, cd_medico_solic_prescr_p text, dt_referencia_p timestamp, cd_funcionario_p text, nr_seq_material_p bigint, nr_seq_procedimento_p bigint, nr_prescr_mat_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_pep_med_fatur_p bigint, nr_seq_pedido_exame_p bigint default null) AS $body$
DECLARE


cd_convenio_w			bigint;
ie_tipo_atendimento_w		bigint;
cd_estabelecimento_w		bigint;
nr_doc_convenio_w		varchar(255);
nr_sequencia_w			bigint;
ie_forma_w			varchar(255);
ds_adicional_w			varchar(255);
nr_inicial_w			bigint;
nr_final_w			bigint;
nr_atual_w			bigint;
ds_mascara_w			varchar(255);
cd_perfil_comunic_w		bigint;
nr_doc_conv_comunic_w		varchar(255);
nr_doc_mascara_w			varchar(255);
nr_atendimento_w			bigint;
ds_convenio_w			varchar(255);
ds_tipo_atendimento_w		varchar(255);
ie_guia_tiss_w			varchar(255);
ds_versao_w			varchar(255);
ie_guia_honorario_w		varchar(255);
ie_guia_w			varchar(10);
qt_item_guia_w			bigint;
nr_seq_procedimento_w		bigint;
QT_MAX_PROC_w			bigint;
qt_procedimento_w		bigint;
qt_itens_w			bigint;
qt_itens_guia_w			bigint;
nr_seq_guia_w			bigint;
ie_guia_prestador_w		varchar(255);
ie_responsavel_credito_w		varchar(255);
nr_digito_verificador_w		varchar(255);
ie_grau_partic_w			varchar(255);
ie_cbos_exec_w			varchar(255);
ie_guia_medico_w			varchar(20);
cd_autorizacao_w			varchar(20);
ie_senha_w			varchar(255);
ie_setor_atendimento_w		varchar(255);
ie_medico_req_w			varchar(255);
ie_prescricao_w			varchar(255);
ie_medico_solic_prescr_w		varchar(255);
nr_guia_geral_w			bigint;
ie_tipo_atend_conta_w		bigint;
ie_funcionario_w		varchar(255);
nr_doc_convenio_ww		varchar(255);
cont_w				bigint;
nr_seq_proc_principal_w		bigint;
nr_doc_conv_atend_w		varchar(255);
cd_setor_regra_w		bigint;
ie_considerar_setor_w		varchar(255);
ie_tipo_guia_atend_w		varchar(255);
cd_grupo_proc_w			bigint;
cd_area_procedimento_w		bigint;
cd_especialidade_w		bigint;
cd_proc_regra_w			bigint;
cd_grupo_regra_w			bigint;
cd_area_regra_w			bigint;
cd_espec_regra_w			bigint;
cd_senha_w			varchar(20);
ie_considerar_tipo_guia_w		varchar(10);
ie_tipo_guia_conta_w		varchar(10);
cd_tipo_procedimento_w		smallint;
ie_tipo_procedimento_w		varchar(255);
ie_data_item_w			varchar(10);
ie_tipo_atend_tiss_proc_w		varchar(10);
ie_tipo_atend_tiss_w		varchar(10);
ie_restringir_conta_w		varchar(10);
ie_setor_proc_prescr_w		varchar(10);
cd_setor_proc_prescr_w		integer;
ie_restringir_honor_w		varchar(10);
ie_funcao_medico_w		varchar(10);
cd_categoria_convenio_w		varchar(10);
cd_cgc_prestador_w		varchar(14);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
dt_execucao_w			timestamp;
nr_seq_proc_pacote_w		bigint;
ie_proc_pacote_w		varchar(10);
cd_medico_solic_prescr_w	varchar(10);
cd_proc_principal_w		bigint;
cd_usuario_convenio_w		varchar(30);
dt_mesano_referencia_w		timestamp;
cd_cgc_honorario_tiss_w		procedimento_paciente.cd_cgc_honorario_tiss%type;
cd_cgc_prestador_tiss_w		procedimento_paciente.cd_cgc_prestador_tiss%type;
nr_sequencia_autor_w		bigint;
nr_seq_proc_autor_w		bigint;
nr_seq_mat_autor_w		bigint;
nr_doc_autor_w			varchar(20);
cd_senha_autor_w		varchar(20);
ie_autorizado_w			varchar(10);
ds_trunc_w			varchar(4) := 'dd';
dt_periodo_inicial_w		conta_paciente.dt_periodo_inicial%type;
dt_periodo_final_w		conta_paciente.dt_periodo_final%type;
nr_seq_proc_gatilho_w		procedimento_paciente.nr_sequencia%type;
nr_prescr_gatilho_w		procedimento_paciente.nr_prescricao%type;
nr_seq_proc_prescr_gatilho_w	procedimento_paciente.nr_sequencia_prescricao%type;
v_sqlPedido			varchar(4000);
v_sql				varchar(4000);
v_sql1				varchar(4000);
v_sql2				varchar(4000);
v_sql3				varchar(4000);
v_group_by			varchar(4000);
v_cursor     			integer;
var_retorno_w			integer;
nr_doc_aux_w			varchar(255);
i				integer;
ie_utiliza_doc_cursor_w		varchar(1) := 'N';
v_where_sql			varchar(4000);
c01 CURSOR FOR
SELECT	nr_sequencia,
	ie_forma,
	ds_adicional,
	nr_inicial,
	nr_final,
	nr_atual,
	ds_mascara,
	cd_perfil_comunic,
	nr_doc_conv_comunic,
	ie_guia_honorario,
	qt_max_proc,
	ie_guia_prestador,
	ie_responsavel_credito,
	ie_funcao_medico,
	ie_cbos,
	ie_guia_medico,
	qt_itens_guia,
	ie_guia,
	ie_senha,
	coalesce(ie_setor_atendimento,'N'),
	coalesce(ie_medico_req,'N'),
	coalesce(ie_prescricao,'N'),
	coalesce(ie_medico_solic_prescr,'N'),
	coalesce(ie_funcionario,'N'),
	cd_setor_atendimento,
	coalesce(ie_considerar_setor,'N'),
	cd_procedimento,
	cd_grupo_proc,
	cd_especialidade,
	cd_area_procedimento,
	coalesce(ie_considerar_tipo_guia,'S'),
	coalesce(ie_tipo_procedimento,'N'),
	coalesce(ie_data_item,'N'),
	coalesce(ie_tipo_atend_tiss_proc,'N'),
	coalesce(ie_restringir_conta, 'S'),
	coalesce(ie_setor_proc_prescr,'N'),
	coalesce(ie_restringir_honor,'S'),
	coalesce(ie_proc_pacote,'N')
from 	tiss_regra_guia
where	cd_convenio						= cd_convenio_w
and	cd_estabelecimento					= cd_estabelecimento_w
and	coalesce(ie_situacao,'A')					= 'A'
and	coalesce(ie_tipo_atendimento, ie_tipo_atendimento_w) 	= ie_tipo_atendimento_w
and 	coalesce(ie_tipo_atend_conta, coalesce(ie_tipo_atend_conta_w,0))	= coalesce(ie_tipo_atend_conta_w,0)
and	coalesce(ie_tiss_tipo_guia, ie_tiss_tipo_guia_p)		= ie_tiss_tipo_guia_p
and	coalesce(cd_funcao, coalesce(ie_funcao_medico_w,0)) 		= coalesce(ie_funcao_medico_w,0)
and	coalesce(ie_tipo_guia_atend,coalesce(ie_tipo_guia_atend_w,'X'))	= coalesce(ie_tipo_guia_atend_w,'X')
and	coalesce(ie_responsavel_credito, coalesce(ie_responsavel_credito_p, 'X')) 	= coalesce(ie_responsavel_credito_p, 'X')
and	coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_p, -1))		= coalesce(cd_setor_atendimento_p, -1)
and	(((coalesce(nr_seq_pedido_p,0) > 0) and (ie_guia = 'EE')) or
	 ((ie_guia <> 'EE') and (coalesce(nr_seq_pedido_p,0) = 0)))
and	(((coalesce(nr_prescricao_p,0) > 0) and (ie_guia = 'PE')) or
	 ((ie_guia <> 'PE') and (coalesce(nr_prescricao_p,0) = 0)))
and	(((coalesce(nr_seq_pep_med_fatur_p,0) > 0) and (ie_guia = 'FM')) or
	 ((ie_guia <> 'FM') and (coalesce(nr_seq_pep_med_fatur_p,0) = 0)))
and	coalesce(cd_procedimento,coalesce(cd_procedimento_p,0))		= coalesce(cd_procedimento_p,0)
and	((ie_origem_proced	= ie_origem_proced_p)	or (coalesce(ie_origem_proced::text, '') = '') or (coalesce(cd_procedimento_p::text, '') = ''))
and	coalesce(cd_area_procedimento, coalesce(cd_area_procedimento_w,0)) = coalesce(cd_area_procedimento_w,0)
and	coalesce(cd_especialidade, coalesce(cd_especialidade_w,0))	= coalesce(cd_especialidade_w,0)
and	coalesce(cd_grupo_proc, coalesce(cd_grupo_proc_w,0))		= coalesce(cd_grupo_proc_w,0)
and	coalesce(cd_categoria, coalesce(cd_categoria_convenio_w,'X'))	= coalesce(cd_categoria_convenio_w,'X')
and	((coalesce(ie_somente_honorario,'T') = 'T') or (position(ie_honorario_p in ie_somente_honorario) > 0))
order	by coalesce(cd_procedimento, 0),
	coalesce(cd_grupo_proc, 0),
	coalesce(cd_especialidade, 0),
	coalesce(cd_area_procedimento, 0),
	CASE WHEN coalesce(cd_setor_atendimento::text, '') = '' THEN 0  ELSE 1 END ,
	coalesce(cd_funcao,-1),
	CASE WHEN coalesce(ie_responsavel_credito::text, '') = '' THEN 0  ELSE 1 END ,
	coalesce(ie_tipo_atendimento,0),
	coalesce(ie_tipo_atend_conta,0),
	coalesce(ie_tiss_tipo_guia,'X'),
	coalesce(cd_categoria,'X');

c02 CURSOR FOR
SELECT	a.nr_doc_convenio,
	sum(qt_procedimento) qt_procedimento,
	count(*) qt_itens
from
	(SELECT	/*+ USE_CONCAT */ nr_doc_convenio,
		dt_procedimento dt_item,
		qt_procedimento
	from	procedimento_paciente a
	where	((ie_tiss_tipo_guia			= ie_tiss_tipo_guia_p) or (coalesce(ie_considerar_tipo_guia_w,'S') 	= 'N')) /*lhalves OS359299 em 13/09/2011*/
	and	((a.nr_interno_conta		= nr_interno_conta_p) or (ie_restringir_conta_w		= 'N' 	and a.nr_atendimento = nr_atendimento_w))
	and	(nr_doc_convenio IS NOT NULL AND nr_doc_convenio::text <> '')
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	and	ie_honorario_p			= 'N'
	and (a.ie_responsavel_credito 	= ie_responsavel_credito_w or coalesce(ie_responsavel_credito_w::text, '') = '')
	and	a.ie_responsavel_credito not in (select	x.ie_resp_credito_fora
						from	tiss_regra_guia_adic x
						where	x.nr_seq_regra	= nr_sequencia_w)
	and	((ie_guia_prestador_w 		= 'N') or (coalesce(cd_cgc_prestador_tiss, cd_cgc_prestador) = coalesce(cd_cgc_prestador_tiss_w,cd_cgc_prestador_p))) --alterado por lhalves em 13/02/2015 OS 837346 - pois ja que valida o prestador do TISS dos itens que ja estao na conta, tem que validar o item que esta sendo calculado.
	and	((ie_grau_partic_w		= 'N')	or (coalesce(ie_funcao_medico, 'X')	= coalesce(ie_funcao_medico_w, 'X')))
	and	((ie_cbos_exec_w		= 'N')	or (coalesce(tiss_obter_cbos_medico(cd_medico_executor, cd_especialidade, ds_versao_w,cd_convenio_w), 'X') = coalesce(cd_cbos_p, 'X')))
	and	((coalesce(cd_medico_executor, 'X')	= coalesce(cd_medico_honorario_p,'X')) or (ie_guia_medico_w		= 'N'))
	and	((ie_senha_w			= 'N') or (coalesce(cd_senha, 'X')		= coalesce(cd_senha_p, 'X')))
	and	((ie_setor_atendimento_w	= 'N') or (coalesce(cd_setor_atendimento,0)	= coalesce(cd_setor_atendimento_p,0)))
	and	((ie_medico_req_w		= 'N') or (coalesce(a.cd_medico_req,'X')	= coalesce(cd_medico_req_p,'X')))
	and	((ie_prescricao_w		= 'N') or (coalesce(a.nr_prescricao, 0)	= coalesce(nr_prescr_proced_p,0)))
	and	((ie_medico_solic_prescr_w	= 'N') or (coalesce(cd_medico_solic_prescr_w::text, '') = '') or (coalesce(tiss_obter_med_proc_presc(a.nr_prescricao, a.nr_sequencia_prescricao),'X')	= coalesce(cd_medico_solic_prescr_w,'X')))
	and	((ie_funcionario_w		= 'N') or (coalesce(a.cd_pessoa_fisica,'X')	= coalesce(cd_funcionario_p,'X')))
	and 	cd_setor_atendimento		= coalesce(cd_setor_regra_w,cd_setor_atendimento)
	and 	((ie_considerar_setor_w		= 'N') or
		 ((nr_doc_convenio		= coalesce(to_char(nr_atual_w),nr_doc_convenio)) or (coalesce(cd_setor_regra_w::text, '') = '')
		 )
		) /*lhalves OS252698 - 01/10/2010 - Sem esta linha nao aplicava a regra de setor diferente. Sempre gerava a mesma numeracao.*/
	and	((coalesce(cd_proc_regra_w::text, '') = '') or (a.cd_procedimento			= cd_procedimento_p))
	and	((coalesce(cd_grupo_regra_w::text, '') = '') or ((obter_grupo_procedimento(a.cd_procedimento,a.ie_origem_proced,'C'))::numeric  = cd_grupo_proc_w))
	and	((coalesce(cd_area_regra_w::text, '') = '') or (OBTER_AREA_PROCEDIMENTO(a.cd_procedimento,a.ie_origem_proced) 	= cd_area_procedimento_w))
	and	((coalesce(cd_espec_regra_w::text, '') = '') or (OBTER_ESPECIALIDADE_PROCED(a.cd_procedimento,a.ie_origem_proced) 	= cd_especialidade_w))
	and	((ie_tipo_procedimento_w		= 'N') or ((Obter_tipo_procedimento(a.cd_procedimento,a.ie_origem_proced,'C'))::numeric 	= cd_tipo_procedimento_w))
	and	((ie_data_item_w			= 'N') or (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_procedimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_referencia_p)))
	and	((ie_tipo_atend_tiss_proc_w		= 'N') or (coalesce(a.ie_tipo_atend_tiss,'X')		= coalesce(ie_tipo_atend_tiss_w,'X')))
	and	((ie_setor_proc_prescr_w		= 'N') or ((TISS_OBTER_DADOS_PROC_PRESCR(a.nr_prescricao,a.nr_sequencia_prescricao,'S'))::numeric 	= cd_setor_proc_prescr_w))
	and	((ie_proc_pacote_w 			= 'N') or (nr_seq_procedimento_p 		<> coalesce(nr_seq_proc_pacote_w,0) and
		  a.nr_sequencia 			<> coalesce(nr_seq_proc_pacote_w,0) and
		  coalesce(a.nr_seq_proc_pacote::text, '') = ''))
	
union all

	select	/*+ USE_CONCAT */ nr_doc_honor_conv,
		dt_procedimento dt_item,
		qt_procedimento
	from	procedimento_paciente a
	where	((ie_tiss_tipo_guia_honor		= ie_tiss_tipo_guia_p) or (coalesce(ie_considerar_tipo_guia_w,'S') 	= 'N')) /*lhalves OS359299 em 13/09/2011*/
	and	((a.nr_interno_conta		= nr_interno_conta_p) or (ie_restringir_conta_w		= 'N' 	and a.nr_atendimento = nr_atendimento_w))
	and	(nr_doc_honor_conv IS NOT NULL AND nr_doc_honor_conv::text <> '')
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	and (ie_honorario_p			= 'S' or ie_restringir_honor_w = 'N') --lhalves410286 em 06/02/2012
	and (a.ie_responsavel_credito	= ie_responsavel_credito_w or coalesce(ie_responsavel_credito_w::text, '') = '')
	and	a.ie_responsavel_credito not in (select	x.ie_resp_credito_fora
						from	tiss_regra_guia_adic x
						where	x.nr_seq_regra	= nr_sequencia_w)
	and	((ie_guia_honorario_w		= 'N') or (cd_medico_executor		= cd_medico_honorario_p))
	and	((ie_grau_partic_w		= 'N') or (coalesce(ie_funcao_medico, 'X')	= coalesce(ie_funcao_medico_w, 'X')))
	and	((ie_guia_prestador_w 	= 'N') or (coalesce(coalesce(cd_cgc_honorario_tiss, cd_cgc_prestador_tiss), cd_cgc_prestador) = coalesce(coalesce(cd_cgc_honorario_tiss_w,cd_cgc_prestador_tiss_w),cd_cgc_prestador_p)))
	and	((ie_senha_w		= 'N') or (coalesce(cd_senha, 'X')	= coalesce(cd_senha_p, 'X')))
	and	((ie_setor_atendimento_w	= 'N') or (coalesce(cd_setor_atendimento,0)	= coalesce(cd_setor_atendimento_p,0)))
	and	((ie_medico_req_w		= 'N') or (coalesce(a.cd_medico_req,'X')	= coalesce(cd_medico_req_p,'X')))
	and	((ie_prescricao_w		= 'N') or (coalesce(a.nr_prescricao, 0)	= coalesce(nr_prescr_proced_p,0)))
	and	((ie_medico_solic_prescr_w	= 'N') or (coalesce(cd_medico_solic_prescr_w::text, '') = '') or (coalesce(tiss_obter_med_proc_presc(a.nr_prescricao, a.nr_sequencia_prescricao),'X')	= coalesce(cd_medico_solic_prescr_w,'X')))
	and	((ie_funcionario_w		= 'N') or (coalesce(a.cd_pessoa_fisica,'X')	= coalesce(cd_funcionario_p,'X')))
	and	((ie_tipo_procedimento_w		= 'N') or ((Obter_tipo_procedimento(a.cd_procedimento,a.ie_origem_proced,'C'))::numeric 	= cd_tipo_procedimento_w))
	and	((ie_data_item_w			= 'N') or (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_procedimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_referencia_p)))
	and	((ie_tipo_atend_tiss_proc_w		= 'N') or (coalesce(a.ie_tipo_atend_tiss,'X')		= coalesce(ie_tipo_atend_tiss_w,'X')))
	and	((ie_setor_proc_prescr_w		= 'N') or ((TISS_OBTER_DADOS_PROC_PRESCR(a.nr_prescricao,a.nr_sequencia_prescricao,'S'))::numeric 	= cd_setor_proc_prescr_w))
	and	((ie_proc_pacote_w 			= 'N') or (nr_seq_procedimento_p 		<> coalesce(nr_seq_proc_pacote_w,0) and
		  a.nr_sequencia 			<> coalesce(nr_seq_proc_pacote_w,0) and
		  coalesce(a.nr_seq_proc_pacote::text, '') = ''))
	
union all

	select	/*+ USE_CONCAT */ b.nr_doc_honor_conv,
		a.dt_procedimento dt_item,
		a.qt_procedimento
	from	procedimento_paciente a,
		procedimento_participante b
	where	b.nr_sequencia			= a.nr_sequencia
	and	((a.ie_tiss_tipo_guia_honor		= ie_tiss_tipo_guia_p) or (coalesce(ie_considerar_tipo_guia_w,'S') 	= 'N')) /*lhalves OS359299 em 13/09/2011*/
	and	((a.nr_interno_conta		= nr_interno_conta_p) or (ie_restringir_conta_w		= 'N' 	and a.nr_atendimento = nr_atendimento_w))
	and	(b.nr_doc_honor_conv IS NOT NULL AND b.nr_doc_honor_conv::text <> '')
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	and (ie_honorario_p			= 'P' or ie_restringir_honor_w = 'N') --lhalves410286 em 06/02/2012
	and (a.ie_responsavel_credito	= ie_responsavel_credito_w or coalesce(ie_responsavel_credito_w::text, '') = '')
	and	a.ie_responsavel_credito not in (select	x.ie_resp_credito_fora
						from	tiss_regra_guia_adic x
						where	x.nr_seq_regra	= nr_sequencia_w)
	and	((ie_guia_honorario_w		= 'N') or (b.cd_pessoa_fisica		= cd_medico_honorario_p))
	and	((ie_grau_partic_w		= 'N') or (coalesce(b.ie_funcao, 'X') 	= coalesce(ie_funcao_medico_w, 'X')))
	and	((ie_guia_prestador_w 		= 'N') or (coalesce(b.cd_cgc_prestador_tiss, cd_cgc_prestador) = cd_cgc_prestador_p))
	and	((ie_senha_w			= 'N') or (coalesce(cd_senha, 'X')		= coalesce(cd_senha_p, 'X')))
	and	((ie_setor_atendimento_w	= 'N') or (coalesce(a.cd_setor_atendimento,0)	= coalesce(cd_setor_atendimento_p,0)))
	and	((ie_medico_req_w		= 'N') or (coalesce(a.cd_medico_req,'X')	= coalesce(cd_medico_req_p,'X')))
	and	((ie_prescricao_w		= 'N') or (coalesce(a.nr_prescricao, 0)	= coalesce(nr_prescr_proced_p,0)))
	and	((ie_medico_solic_prescr_w	= 'N') or (coalesce(cd_medico_solic_prescr_w::text, '') = '') or (coalesce(tiss_obter_med_proc_presc(a.nr_prescricao, a.nr_sequencia_prescricao),'X')	= coalesce(cd_medico_solic_prescr_w,'X')))
	and	((ie_funcionario_w		= 'N') or (coalesce(a.cd_pessoa_fisica,'X')	= coalesce(cd_funcionario_p,'X')))
	and	((ie_tipo_procedimento_w		= 'N') or ((Obter_tipo_procedimento(a.cd_procedimento,a.ie_origem_proced,'C'))::numeric 	= cd_tipo_procedimento_w))
	and	((ie_data_item_w			= 'N') or (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_procedimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_referencia_p)))
	and	((ie_tipo_atend_tiss_proc_w		= 'N') or (coalesce(a.ie_tipo_atend_tiss,'X')		= coalesce(ie_tipo_atend_tiss_w,'X')))
	and	((ie_setor_proc_prescr_w		= 'N') or ((TISS_OBTER_DADOS_PROC_PRESCR(a.nr_prescricao,a.nr_sequencia_prescricao,'S'))::numeric 	= cd_setor_proc_prescr_w))
	and	((ie_proc_pacote_w 			= 'N') or (nr_seq_procedimento_p 		<> coalesce(nr_seq_proc_pacote_w,0) and
		  a.nr_sequencia 			<> coalesce(nr_seq_proc_pacote_w,0) and
		  coalesce(a.nr_seq_proc_pacote::text, '') = ''))
	
union all

	select	/*+ USE_CONCAT */ nr_doc_convenio,
		dt_atendimento dt_item,
		0 qt_procedimento
	from	material_atend_paciente a
	where	((ie_tiss_tipo_guia_p			= '7') or (coalesce(ie_considerar_tipo_guia_w,'S') 	= 'N')) /*lhalves OS359299 em 13/09/2011*/
	and	((a.nr_interno_conta		= nr_interno_conta_p) or (ie_restringir_conta_w		= 'N' 	and a.nr_atendimento = nr_atendimento_w))
	and	(nr_doc_convenio IS NOT NULL AND nr_doc_convenio::text <> '')
	and (a.ie_responsavel_credito	= ie_responsavel_credito_w or coalesce(ie_responsavel_credito_w::text, '') = '')
	and	((ie_prescricao_w		= 'N') or (coalesce(a.nr_prescricao, 0)	= coalesce(nr_prescr_mat_p,0)))
	and	((ie_setor_atendimento_w	= 'N') or (coalesce(cd_setor_atendimento,0)	= coalesce(cd_setor_atendimento_p,0)))
	and 	((ie_considerar_setor_w		= 'N') or
		 ((nr_doc_convenio		= coalesce(to_char(nr_atual_w),nr_doc_convenio)) or (coalesce(cd_setor_regra_w::text, '') = '')
		 )
		) /*lhalves OS283356 - 01/10/2010 - Sem esta linha nao aplicava a regra de setor diferente. Sempre gerava a mesma numeracao.*/
	and	a.ie_responsavel_credito not in (select	x.ie_resp_credito_fora
						from	tiss_regra_guia_adic x
						where	x.nr_seq_regra	= nr_sequencia_w)
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	and	((ie_data_item_w			= 'N') or (PKG_DATE_UTILS.start_of(a.dt_atendimento,ds_trunc_w,0)		= PKG_DATE_UTILS.start_of(dt_referencia_p,ds_trunc_w,0)))
	
union all

	select	a.cd_autorizacao,
		dt_solicitacao,
		0 qt_exame
	from	pedido_exame_externo a
	where	nr_sequencia			= nr_seq_pedido_p
	and	coalesce(nr_interno_conta_p::text, '') = ''
	and	coalesce(nr_seq_pedido_exame_p::text, '') = ''
	
union all

	select	b.nr_doc_convenio,
		b.dt_execucao,
		0 qt_exame
	from	pedido_exame_externo_item b,
		pedido_exame_externo a
	where	b.nr_seq_pedido			= a.nr_sequencia
	and	a.nr_sequencia			= nr_seq_pedido_p
	and	(nr_seq_pedido_exame_p IS NOT NULL AND nr_seq_pedido_exame_p::text <> '')
	and	coalesce(nr_interno_conta_p::text, '') = ''
	and	(b.nr_doc_convenio IS NOT NULL AND b.nr_doc_convenio::text <> '')
	and	((ie_guia_prestador_w 		= 'N') or (coalesce(b.cd_cgc,'X')  			= coalesce(cd_cgc_prestador_w,'X')))
	and	((coalesce(cd_proc_regra_w::text, '') = '') or (b.cd_procedimento			= cd_procedimento_w))
	and	((coalesce(cd_grupo_regra_w::text, '') = '') or ((obter_grupo_procedimento(b.cd_procedimento,b.ie_origem_proced,'C'))::numeric  = cd_grupo_proc_w))
	and	((coalesce(cd_area_regra_w::text, '') = '') or (OBTER_AREA_PROCEDIMENTO(b.cd_procedimento,b.ie_origem_proced) 	= cd_area_procedimento_w))
	and	((coalesce(cd_espec_regra_w::text, '') = '') or (OBTER_ESPECIALIDADE_PROCED(b.cd_procedimento,b.ie_origem_proced) 	= cd_especialidade_w))
	and	((ie_tipo_procedimento_w		= 'N') or ((Obter_tipo_procedimento(b.cd_procedimento,b.ie_origem_proced,'C'))::numeric 	= cd_tipo_procedimento_w))
	and	((ie_data_item_w			= 'N') or (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_execucao) =  ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_execucao_w)))
	order by 2) a
group 	by a.nr_doc_convenio
order by a.nr_doc_convenio,
	qt_procedimento desc;

c03 CURSOR FOR
SELECT	nr_doc_convenio,
	sum(QT_PROCEDIMENTO) qt_procedimento,
	count(*)
from	prescr_procedimento a
where	a.nr_prescricao	= nr_prescricao_p
and	coalesce(nr_interno_conta_p::text, '') = ''
and 	(nr_doc_convenio IS NOT NULL AND nr_doc_convenio::text <> '')
and	((ie_setor_atendimento_w		= 'N') or (coalesce(cd_setor_atendimento,0)		= coalesce(cd_setor_atendimento_p,0)))
and (a.cd_setor_atendimento			= cd_setor_regra_w or coalesce(cd_setor_regra_w::text, '') = '') --lhalves OS260017,25/10/10-Buscar o numero de guia conforme o setor do item e o da regra encontrada
and	a.cd_setor_atendimento not in (SELECT	x.cd_setor_prescr_fora
						from	tiss_regra_guia_adic x
						where	x.nr_seq_regra	= nr_sequencia_w)
and	((coalesce(cd_proc_regra_w::text, '') = '') or (a.cd_procedimento			= cd_procedimento_p))
and	((coalesce(cd_grupo_regra_w::text, '') = '') or ((obter_grupo_procedimento(a.cd_procedimento,a.ie_origem_proced,'C'))::numeric  = cd_grupo_proc_w))
and	((coalesce(cd_area_regra_w::text, '') = '') or (OBTER_AREA_PROCEDIMENTO(a.cd_procedimento,a.ie_origem_proced) 	= cd_area_procedimento_w))
and	((coalesce(cd_espec_regra_w::text, '') = '') or (OBTER_ESPECIALIDADE_PROCED(a.cd_procedimento,a.ie_origem_proced) 	= cd_especialidade_w))
group by nr_doc_convenio
order by nr_doc_convenio,
	qt_procedimento desc;



BEGIN

nr_doc_convenio_w				:= cd_autorizacao_p;

if (coalesce(nr_doc_convenio_w, obter_desc_expressao(778770)) = obter_desc_expressao(778770)) and
	((coalesce(nr_interno_conta_p, 0) > 0) or (coalesce(nr_seq_pedido_p,0) > 0) or (coalesce(nr_prescricao_p,0) > 0) or (coalesce(nr_seq_pep_med_fatur_p,0) > 0)) then

	if (coalesce(nr_interno_conta_p, 0) > 0) then

		select	a.cd_convenio_parametro,
			b.ie_tipo_atendimento,
			a.ie_tipo_atend_conta,
			a.cd_estabelecimento,
			a.nr_atendimento,
			a.ie_tipo_guia,
			a.cd_categoria_parametro,
			a.dt_mesano_referencia,
			a.dt_periodo_inicial,
			a.dt_periodo_final
		into STRICT	cd_convenio_w,
			ie_tipo_atendimento_w,
			ie_tipo_atend_conta_w,
			cd_estabelecimento_w,
			nr_atendimento_w,
			ie_tipo_guia_conta_w,
			cd_categoria_convenio_w,
			dt_mesano_referencia_w,
			dt_periodo_inicial_w,
			dt_periodo_final_w
		from	atendimento_paciente b,
			conta_paciente a
		where	a.nr_atendimento	= b.nr_atendimento
		and	a.nr_interno_conta	= nr_interno_conta_p;

		select 	max(a.ie_tipo_guia),
			max(a.cd_senha),
			max(a.cd_usuario_convenio)
		into STRICT	ie_tipo_guia_atend_w,
			cd_senha_w,
			cd_usuario_convenio_w
		from	atendimento_paciente b,
			atend_categoria_convenio a
		where	a.nr_atendimento	= b.nr_atendimento
		and	a.nr_seq_interno	= obter_atecaco_atendimento(nr_atendimento_w)
		and	b.nr_atendimento	= nr_atendimento_w;

	elsif (coalesce(nr_seq_pedido_p,0) > 0) then

		select	nr_atendimento
		into STRICT	nr_atendimento_w
		from	pedido_exame_externo
		where	nr_sequencia		= nr_seq_pedido_p;

		if (nr_atendimento_w > 0) then

			select	a.cd_convenio,
				b.ie_tipo_atendimento,
				b.cd_estabelecimento,
				a.ie_tipo_guia,
				a.cd_categoria,
				a.cd_usuario_convenio
			into STRICT	cd_convenio_w,
				ie_tipo_atendimento_w,
				cd_estabelecimento_w,
				ie_tipo_guia_atend_w,
				cd_categoria_convenio_w,
				cd_usuario_convenio_w
			from	atendimento_paciente b,
				atend_categoria_convenio a
			where	a.nr_atendimento	= b.nr_atendimento
			and	a.nr_seq_interno	= obter_atecaco_atendimento(nr_atendimento_w)
			and	b.nr_atendimento	= nr_atendimento_w;

			/*Nao precisa fazer separado lhalves 07/06/2012
			select 	max(a.ie_tipo_guia)
			into	ie_tipo_guia_atend_w
			from	atendimento_paciente b,
				atend_categoria_convenio a
			where	a.nr_atendimento	= b.nr_atendimento
			and	a.nr_seq_interno	= obter_atecaco_atendimento(nr_atendimento_w);*/
		end if;

		if (coalesce(nr_seq_pedido_exame_p,0) > 0) then

			select	max(b.cd_cgc),
				max(b.cd_procedimento),
				max(b.ie_origem_proced),
				max(b.dt_execucao)
			into STRICT	cd_cgc_prestador_w,
				cd_procedimento_w,
				ie_origem_proced_w,
				dt_execucao_w
			from	pedido_exame_externo_item b,
				pedido_exame_externo a
			where	a.nr_sequencia		= b.nr_seq_pedido
			and	b.nr_sequencia		= nr_seq_pedido_exame_p
			and	a.nr_sequencia		= nr_seq_pedido_p;

		end if;

	elsif (coalesce(nr_prescricao_p,0) > 0) then

		select	nr_atendimento
		into STRICT	nr_atendimento_w
		from	prescr_medica
		where	nr_prescricao		= nr_prescricao_p;

		select	max(a.cd_convenio),
			max(b.ie_tipo_atendimento),
			max(b.cd_estabelecimento),
			max(a.ie_tipo_guia),
			max(a.cd_categoria),
			max(a.cd_usuario_convenio)
		into STRICT	cd_convenio_w,
			ie_tipo_atendimento_w,
			cd_estabelecimento_w,
			ie_tipo_guia_atend_w,
			cd_categoria_convenio_w,
			cd_usuario_convenio_w
		from	atendimento_paciente b,
			atend_categoria_convenio a
		where	a.nr_atendimento	= b.nr_atendimento
		and	a.nr_seq_interno	= obter_atecaco_atendimento(nr_atendimento_w)
		and	b.nr_atendimento	= nr_atendimento_w;

	elsif (coalesce(nr_seq_pep_med_fatur_p,0) > 0) then

		select	nr_atendimento
		into STRICT	nr_atendimento_w
		from	pep_med_fatur
		where	nr_sequencia	= nr_seq_pep_med_fatur_p;

		select	max(a.cd_convenio),
			max(b.ie_tipo_atendimento),
			max(b.cd_estabelecimento),
			max(a.ie_tipo_guia),
			max(a.cd_categoria),
			max(a.cd_usuario_convenio)
		into STRICT	cd_convenio_w,
			ie_tipo_atendimento_w,
			cd_estabelecimento_w,
			ie_tipo_guia_atend_w,
			cd_categoria_convenio_w,
			cd_usuario_convenio_w
		from	atendimento_paciente b,
			atend_categoria_convenio a
		where	a.nr_atendimento	= b.nr_atendimento
		and	a.nr_seq_interno	= obter_atecaco_atendimento(nr_atendimento_w)
		and	b.nr_atendimento	= nr_atendimento_w;

	end if;

	if	((coalesce(cd_procedimento_w,0) > 0) and (coalesce(ie_origem_proced_w,0) > 0)) then

		begin
			select	a.cd_grupo_proc,
				substr(OBTER_AREA_PROCEDIMENTO(cd_procedimento, ie_origem_proced),1,200),
				substr(OBTER_ESPECIALIDADE_PROCED(cd_procedimento, ie_origem_proced),1,200),
				a.cd_tipo_procedimento
			into STRICT	cd_grupo_proc_w,
				cd_area_procedimento_w,
				cd_especialidade_w,
				cd_tipo_procedimento_w
			from	procedimento a
			where	cd_procedimento		= cd_procedimento_w
			and	ie_origem_proced	= ie_origem_proced_w  LIMIT 1;
		exception
		when others then
			cd_grupo_proc_w		:= null;
			cd_area_procedimento_w	:= null;
			cd_especialidade_w	:= null;
			cd_tipo_procedimento_w	:= null;
		end;


	else
		begin
			select	a.cd_grupo_proc,
				substr(OBTER_AREA_PROCEDIMENTO(cd_procedimento_p, ie_origem_proced_p),1,200),
				substr(OBTER_ESPECIALIDADE_PROCED(cd_procedimento_p, ie_origem_proced_p),1,200),
				a.cd_tipo_procedimento
			into STRICT	cd_grupo_proc_w,
				cd_area_procedimento_w,
				cd_especialidade_w,
				cd_tipo_procedimento_w
			from	procedimento a
			where	cd_procedimento		= cd_procedimento_p
			and	ie_origem_proced	= ie_origem_proced_p  LIMIT 1;
		exception
		when others then
			cd_grupo_proc_w		:= null;
			cd_area_procedimento_w	:= null;
			cd_especialidade_w	:= null;
			cd_tipo_procedimento_w	:= null;
		end;

	end if;

	cd_medico_solic_prescr_w	:= cd_medico_solic_prescr_p;

	if (coalesce(nr_seq_procedimento_p,0) > 0) then

		select	max(a.cd_tipo_procedimento),
			max(b.ie_tipo_atend_tiss),
			(max(TISS_OBTER_DADOS_PROC_PRESCR(b.nr_prescricao,b.nr_sequencia_prescricao,'S')))::numeric ,
			max(b.ie_funcao_medico),
			max(b.nr_seq_proc_pacote),
			max(TISS_OBTER_MED_PROC_PRESC(b.nr_prescricao, b.nr_sequencia_prescricao)), --Sempre buscar o medico solicitante da precricao com base no nr_seq_procedimento_p
			max(cd_cgc_honorario_tiss),
			max(cd_cgc_prestador_tiss)
		into STRICT	cd_tipo_procedimento_w,
			ie_tipo_atend_tiss_w,
			cd_setor_proc_prescr_w,
			ie_funcao_medico_w,
			nr_seq_proc_pacote_w,
			cd_medico_solic_prescr_w,
			cd_cgc_honorario_tiss_w,
			cd_cgc_prestador_tiss_w
		from	procedimento a,
			procedimento_paciente b
		where	b.cd_procedimento	= a.cd_procedimento
		and	b.ie_origem_proced	= a.ie_origem_proced
		and	b.nr_sequencia		= nr_seq_procedimento_p;

	end if;

	ie_funcao_medico_w	:= coalesce(ie_funcao_medico_p,ie_funcao_medico_w);

	select	max(tiss_obter_versao(cd_convenio_w, cd_estabelecimento_w,dt_mesano_referencia_w))
	into STRICT	ds_versao_w
	;

	ie_guia_tiss_w	:= obter_valor_conv_estab(cd_convenio_w, cd_estabelecimento_w, 'IE_DOC_CONVENIO');


	if (ie_guia_tiss_w = 'T') then

		ie_forma_w		:= null;
		ds_mascara_w		:= null;
		qt_max_proc_w		:= null;

		OPEN C01;
		LOOP
		FETCH C01 into
			nr_sequencia_w,
			ie_forma_w,
			ds_adicional_w,
			nr_inicial_w,
			nr_final_w,
			nr_atual_w,
			ds_mascara_w,
			cd_perfil_comunic_w,
			nr_doc_conv_comunic_w,
			ie_guia_honorario_w,
			qt_max_proc_w,
			ie_guia_prestador_w,
			ie_responsavel_credito_w,
			ie_grau_partic_w,
			ie_cbos_exec_w,
			ie_guia_medico_w,
			qt_itens_guia_w,
			ie_guia_w,
			ie_senha_w,
			ie_setor_atendimento_w,
			ie_medico_req_w,
			ie_prescricao_w,
			ie_medico_solic_prescr_w,
			ie_funcionario_w,
			cd_setor_regra_w,
			ie_considerar_setor_w,
			cd_proc_regra_w,
			cd_grupo_regra_w,
			cd_espec_regra_w,
			cd_area_regra_w,			
			ie_considerar_tipo_guia_w,
			ie_tipo_procedimento_w,
			ie_data_item_w,
			ie_tipo_atend_tiss_proc_w,
			ie_restringir_conta_w,
			ie_setor_proc_prescr_w,
			ie_restringir_honor_w,
			ie_proc_pacote_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		END LOOP;
		CLOSE C01;
		ie_utiliza_doc_cursor_w := 'N';
		nr_doc_convenio_w	:= '';
		qt_item_guia_w		:= null;
		v_sql 			:= null;
		v_sql1 			:= null;
		v_sql2 			:= null;
		v_sql3 			:= null;
		
		if  ie_forma_w in ('PGA','IN','INV', 'VIM11', 'AIN', 'VIN', 'GAI','A','AV','AUT','VA','U6AV','AINVA','GAINV','NGR','PR','GPA', 'GAUTIN') then
			ie_utiliza_doc_cursor_w  := 'S';
		end if;

			
		if (ie_utiliza_doc_cursor_w = 'S') then
		
			if (coalesce(ie_data_item_w,'N') = 'S') then
				ds_trunc_w  := 'dd';
			elsif (coalesce(ie_data_item_w,'N') = 'H') then
				ds_trunc_w := 'hh24';
			elsif (coalesce(ie_data_item_w,'N') = 'M') then
				ds_trunc_w := 'mi';
			else
				ds_trunc_w := 'dd';
			end if;

		
			if (coalesce(nr_prescricao_p, 0) > 0) and (coalesce(nr_interno_conta_p, 0) = 0) then

				open c03;
				loop
				fetch c03 into
					nr_doc_convenio_w,
					qt_procedimento_w,
					qt_itens_w;
				EXIT WHEN NOT FOUND; /* apply on c03 */
				end loop;
				close c03;
			elsif (coalesce(nr_interno_conta_p,0) > 0) then

                v_where_sql := '';

                if (coalesce(ie_restringir_conta_w,'S') = 'S') then
                    v_where_sql := v_where_sql || ' and a.nr_interno_conta = :nr_interno_conta_p';
                else	
                    v_where_sql := v_where_sql || ' and a.nr_atendimento = :nr_atendimento_w';
                end if;

                if (ie_responsavel_credito_w IS NOT NULL AND ie_responsavel_credito_w::text <> '') then
                    v_where_sql	:= v_where_sql || ' and a.ie_responsavel_credito 	= :ie_responsavel_credito_w';
                end if;

                if (ie_data_item_w	= 'S') then
                    v_where_sql := v_where_sql || ' and PKG_DATE_UTILS.start_of(a.dt_procedimento,:ds_trunc_w,0) = PKG_DATE_UTILS.start_of(:dt_referencia_p,:ds_trunc_w,0)';
                end if;

                if (ie_senha_w = 'S') and (cd_senha_p IS NOT NULL AND cd_senha_p::text <> '') then
                    v_where_sql := v_where_sql || ' and cd_senha = :cd_senha_p';
                end if;
				
                if (ie_medico_req_w = 'S') and (coalesce(cd_medico_req_p,'X') <> 'X') then
                    v_where_sql := v_where_sql || ' and a.cd_medico_req = :cd_medico_req_p';
                end if;

                if (ie_prescricao_w = 'S') and (coalesce(nr_prescr_proced_p,0) > 0) then
                    v_where_sql := v_where_sql || ' and a.nr_prescricao = :nr_prescr_proced_p';
                end if;

                if (ie_medico_solic_prescr_w = 'S') and (cd_medico_solic_prescr_w IS NOT NULL AND cd_medico_solic_prescr_w::text <> '') then
                    v_where_sql := v_where_sql || ' and tiss_obter_med_proc_presc(a.nr_prescricao, a.nr_sequencia_prescricao) = :cd_medico_solic_prescr_w';
                end if;

                if (ie_funcionario_w = 'S') and (coalesce(cd_funcionario_p,'X') <> 'X') then
                    v_where_sql := v_where_sql || ' and a.cd_pessoa_fisica = :cd_funcionario_p';
                end if;
                
                if (ie_tipo_procedimento_w	= 'S') then
                    v_where_sql := v_where_sql || ' and to_number(Obter_tipo_procedimento(a.cd_procedimento,a.ie_origem_proced,''C'')) = :cd_tipo_procedimento_w';
                end if;

                if (ie_tipo_atend_tiss_proc_w = 'S') and (coalesce(ie_tipo_atend_tiss_w,'X') <> 'X') then
                    v_where_sql := v_where_sql || ' and a.ie_tipo_atend_tiss = :ie_tipo_atend_tiss_w';
                end if;

                if (ie_setor_proc_prescr_w	= 'S') and (coalesce(cd_setor_proc_prescr_w,0) > 0) then
                    v_where_sql := v_where_sql || ' and to_number(TISS_OBTER_DADOS_PROC_PRESCR(a.nr_prescricao,a.nr_sequencia_prescricao,''S'')) = :cd_setor_proc_prescr_w';
                end if;

                if (ie_proc_pacote_w = 'S') and (nr_seq_procedimento_p 	<> coalesce(nr_seq_proc_pacote_w,0)) then
                    v_where_sql := v_where_sql || ' and ((a.nr_sequencia <> nvl(:nr_seq_proc_pacote_w,0)) and a.nr_seq_proc_pacote is null)';
                end if;

				if (ie_honorario_p			= 'N') then
				
					v_sql :='select	a.nr_doc_convenio,
							sum(qt_procedimento) qt_procedimento,
							count(*) qt_itens
					from	(select	nr_doc_convenio,
							dt_procedimento dt_item,
							qt_procedimento
						from	procedimento_paciente a
						where	1 = 1
						and	nr_doc_convenio			is not null
						and	cd_motivo_exc_conta		is null
						and	a.ie_responsavel_credito not in (select	x.ie_resp_credito_fora
											from	tiss_regra_guia_adic x
											where	x.nr_seq_regra	= :nr_sequencia_w)';
						
					v_sql := v_sql || v_where_sql;
                    
                    if (coalesce(ie_considerar_tipo_guia_w,'S') = 'S') then 
						v_sql := v_sql ||' and ie_tiss_tipo_guia = :ie_tiss_tipo_guia_p';
					end if;					
					
					if (ie_guia_prestador_w = 'S') and ((coalesce(cd_cgc_prestador_tiss_w,cd_cgc_prestador_p) IS NOT NULL AND (coalesce(cd_cgc_prestador_tiss_w,cd_cgc_prestador_p))::text <> '')) then
						v_sql := v_sql || ' and nvl(cd_cgc_prestador_tiss, cd_cgc_prestador) = :cd_cgc_prestador_param1';
					end if;
					
					if (ie_grau_partic_w = 'S') and (coalesce(ie_funcao_medico_w,'X') <> 'X')then
						v_sql := v_sql || ' and ie_funcao_medico = :ie_funcao_medico_w';
					end if;
					if (ie_cbos_exec_w	= 'S') and (coalesce(cd_cbos_p,'X') <> 'X') then
						v_sql := v_sql || ' and tiss_obter_cbos_medico(cd_medico_executor, cd_especialidade, :ds_versao_w,:cd_convenio_w) = :cd_cbos_p';
						
					end if;	
					if (ie_guia_medico_w = 'S') and (coalesce(cd_medico_honorario_p,'X') <> 'X') then
						v_sql := v_sql || ' and cd_medico_executor = :cd_medico_honorario_p';
					end if;
					
					if (ie_setor_atendimento_w = 'S') and (coalesce(cd_setor_atendimento_p,0) > 0) then
						v_sql := v_sql || ' and cd_setor_atendimento = :cd_setor_atendimento_p';
					end if;	
					
					if (coalesce(cd_setor_regra_w,0) > 0) then
						v_sql := v_sql || ' and cd_setor_atendimento = :cd_setor_regra_w';
					end if;
					if (ie_considerar_setor_w = 'S') and (coalesce(nr_atual_w,0) > 0) and (coalesce(cd_setor_regra_w,0) > 0) then
						v_sql := v_sql || ' and nr_doc_convenio = to_char(:nr_atual_w)';
					end if;
					if (cd_proc_regra_w IS NOT NULL AND cd_proc_regra_w::text <> '') then
						v_sql := v_sql || ' and a.cd_procedimento = :cd_procedimento_p';
					end if;
					if (cd_grupo_regra_w IS NOT NULL AND cd_grupo_regra_w::text <> '') then
						v_sql := v_sql || ' and to_number(obter_grupo_procedimento(a.cd_procedimento,a.ie_origem_proced,''C'')) = :cd_grupo_proc_w';
					end if;
					if (cd_area_regra_w IS NOT NULL AND cd_area_regra_w::text <> '') then
						v_sql := v_sql || ' and OBTER_AREA_PROCEDIMENTO(a.cd_procedimento,a.ie_origem_proced) = :cd_area_procedimento_w';
					end if;
					if (cd_espec_regra_w IS NOT NULL AND cd_espec_regra_w::text <> '') then
						v_sql := v_sql || ' and OBTER_ESPECIALIDADE_PROCED(a.cd_procedimento,a.ie_origem_proced) = :cd_especialidade_w';
					end if;
				end if;
				
				
				/*ALGUMAS RESTRICOES NAO SAO APLICADAS NESTE UNION SE COMPARADO AO PRIMEIRO SELECT*/

				
				if (ie_restringir_honor_w = 'N') or (ie_honorario_p = 'S') then
					if (v_sql IS NOT NULL AND v_sql::text <> '') then
						v_sql1 := ' union all ';
					else
						v_sql1 :=	'select	a.nr_doc_convenio,
									sum(a.qt_procedimento) qt_procedimento,
									count(*) qt_itens
								from	(';
					end if;
					
					v_sql1 := v_sql1 || ' 	select	a.nr_doc_honor_conv nr_doc_convenio,
									a.dt_procedimento dt_item,
									a.qt_procedimento qt_procedimento
								from	procedimento_paciente a
								where	1 = 1
								and	nr_doc_honor_conv		is not null
								and	cd_motivo_exc_conta		is null
								and	a.ie_responsavel_credito not in (select	x.ie_resp_credito_fora
													from	tiss_regra_guia_adic x
													where	x.nr_seq_regra	= :nr_sequencia_w)';
							
					v_sql1 := v_sql1 || v_where_sql;
                    
                    if (coalesce(ie_considerar_tipo_guia_w,'S') = 'S') then 
						v_sql1 := v_sql1 || ' and ie_tiss_tipo_guia_honor = :ie_tiss_tipo_guia_p';
					end if;
					
					if (ie_guia_honorario_w = 'S') and (cd_medico_honorario_p IS NOT NULL AND cd_medico_honorario_p::text <> '')then
						v_sql1 := v_sql1 || ' and cd_medico_executor = :cd_medico_honorario_p';
					end if;
					if (ie_grau_partic_w = 'S') and (coalesce(ie_funcao_medico_w,'X') <> 'X')then
						v_sql1 := v_sql1 || ' and ie_funcao_medico = :ie_funcao_medico_w';
					end if;
					if (ie_guia_prestador_w = 'S') and (coalesce(coalesce(cd_cgc_honorario_tiss_w,cd_cgc_prestador_tiss_w),cd_cgc_prestador_p) is not null) then
						v_sql1 := v_sql1 || ' and nvl(NVL(cd_cgc_honorario_tiss, cd_cgc_prestador_tiss), cd_cgc_prestador) = :cd_cgc_prestador_param2';
					end if;
	
					if (ie_setor_atendimento_w = 'S') and (coalesce(cd_setor_atendimento_p,0) > 0) then
						v_sql1 := v_sql1 || ' and cd_setor_atendimento = :cd_setor_atendimento_p';
					end if;
				end if;
				
				if (ie_restringir_honor_w = 'N') or (ie_honorario_p = 'P') then
					
					if (v_sql IS NOT NULL AND v_sql::text <> '') or (v_sql1 IS NOT NULL AND v_sql1::text <> '') then
						v_sql2 := ' union all ';
					else
						v_sql2 :='select	a.nr_doc_convenio,
									sum(a.qt_procedimento) qt_procedimento,
									count(*) qt_itens
								from	(';
					end if;
					
					v_sql2 := v_sql2 || ' 	select	b.nr_doc_honor_conv nr_doc_convenio,
									a.dt_procedimento dt_item,
									a.qt_procedimento
								from	procedimento_paciente a,
									procedimento_participante b
								where	b.nr_sequencia	= a.nr_sequencia
								and	b.nr_doc_honor_conv		is not null
								and	a.cd_motivo_exc_conta		is null
								and	a.ie_responsavel_credito not in (select	x.ie_resp_credito_fora
													from	tiss_regra_guia_adic x
													where	x.nr_seq_regra	= :nr_sequencia_w)';
						
					v_sql2 := v_sql2 || v_where_sql;
                    
                    if (coalesce(ie_considerar_tipo_guia_w,'S') = 'S') then 
						v_sql2 := v_sql2 || ' and a.ie_tiss_tipo_guia_honor = :ie_tiss_tipo_guia_p';
					end if;	

					if (ie_guia_honorario_w = 'S') and (cd_medico_honorario_p IS NOT NULL AND cd_medico_honorario_p::text <> '')then
						v_sql2 := v_sql2 || ' and b.cd_pessoa_fisica = :cd_medico_honorario_p';
					end if;
					if (ie_grau_partic_w = 'S') and (coalesce(ie_funcao_medico_w,'X') <> 'X')then
						v_sql2 := v_sql2 || ' and b.ie_funcao = :ie_funcao_medico_w';
					end if;
					if (ie_guia_prestador_w = 'S') and (cd_cgc_prestador_p IS NOT NULL AND cd_cgc_prestador_p::text <> '') then
						v_sql2 := v_sql2 || ' and nvl(b.cd_cgc_prestador_tiss, cd_cgc_prestador) = :cd_cgc_prestador_param3';
					end if;
	
					if (ie_setor_atendimento_w = 'S') and (coalesce(cd_setor_atendimento_p,0) > 0) then
						v_sql2 := v_sql2 || ' and a.cd_setor_atendimento = :cd_setor_atendimento_p';
					end if;
				end if;
				
				if (ie_considerar_tipo_guia_w = 'N') or (ie_tiss_tipo_guia_p = '7') then
					
					if (v_sql IS NOT NULL AND v_sql::text <> '') or (v_sql1 IS NOT NULL AND v_sql1::text <> '') or (v_sql2 IS NOT NULL AND v_sql2::text <> '') then
						v_sql3 := ' union all ';
					else
						v_sql3 :='select	a.nr_doc_convenio,
									sum(qt_procedimento) qt_procedimento,
									count(*) qt_itens
								from	(';
					end if;
					
					v_sql3 := v_sql3 || ' 	select	a.nr_doc_convenio,
									a.dt_atendimento dt_item,
									0 qt_procedimento
								from	material_atend_paciente a
								where	1 = 1
								and	nr_doc_convenio		is not null
								and	cd_motivo_exc_conta	is null
								and	a.ie_responsavel_credito not in (select	x.ie_resp_credito_fora
													from	tiss_regra_guia_adic x
													where	x.nr_seq_regra	= :nr_sequencia_w)';
							
					if (coalesce(ie_restringir_conta_w,'S') = 'S') then
						v_sql3 := v_sql3 || ' and a.nr_interno_conta = :nr_interno_conta_p';
					else	
						v_sql3 := v_sql3 || ' and a.nr_atendimento = :nr_atendimento_w';
					end if;
					if (ie_responsavel_credito_w IS NOT NULL AND ie_responsavel_credito_w::text <> '') then
						v_sql3	:= v_sql3 || ' and a.ie_responsavel_credito = :ie_responsavel_credito_w';
					end if;
					if (ie_prescricao_w = 'S') and (coalesce(nr_prescr_mat_p,0) > 0) then
						v_sql3 := v_sql3 || ' and a.nr_prescricao = :nr_prescr_mat_p';
					end if;
					if (ie_setor_atendimento_w = 'S') and (coalesce(cd_setor_atendimento_p,0) > 0) then
						v_sql3 := v_sql3 || ' and cd_setor_atendimento = :cd_setor_atendimento_p';
					end if;		
					if (ie_considerar_setor_w = 'S') and (coalesce(nr_atual_w,0) > 0) and (coalesce(cd_setor_regra_w,0) > 0) then
						v_sql3 := v_sql3 || ' and nr_doc_convenio = to_char(:nr_atual_w)';
					end if;
					if (ie_data_item_w	= 'S') then
						v_sql3 := v_sql3 || ' and PKG_DATE_UTILS.start_of(a.dt_atendimento,:ds_trunc_w,0) = PKG_DATE_UTILS.start_of(:dt_referencia_p,:ds_trunc_w,0)';
					end if;
						
					if (ie_senha_w = 'S') and (cd_senha_p IS NOT NULL AND cd_senha_p::text <> '') then
						v_sql3 := v_sql3 || ' and cd_senha = :cd_senha_p ';
					end if;
						
				end if;
				
				v_group_by := ' order by 2) a
						group 	by a.nr_doc_convenio
						order by a.nr_doc_convenio,
							qt_procedimento desc';
					
			
				
				
				
				v_cursor := DBMS_SQL.OPEN_CURSOR;
				
				DBMS_SQL.PARSE(v_cursor, v_sql||v_sql1||v_sql2||v_sql3||v_group_by,DBMS_SQL.NATIVE);
				-- commit;  Removed according to Service Order 2148770
				
				DBMS_SQL.BIND_VARIABLE(v_cursor, 'nr_sequencia_w', nr_sequencia_w);
				if (coalesce(ie_considerar_tipo_guia_w,'S') = 'S') then 
					DBMS_SQL.BIND_VARIABLE(v_cursor,'ie_tiss_tipo_guia_p', ie_tiss_tipo_guia_p);
				end if;		

				if (coalesce(ie_restringir_conta_w,'S') = 'S') then
					DBMS_SQL.BIND_VARIABLE(v_cursor,'nr_interno_conta_p', nr_interno_conta_p);
				else	
					DBMS_SQL.BIND_VARIABLE(v_cursor,'nr_atendimento_w', nr_atendimento_w);
				end if;

				if (ie_responsavel_credito_w IS NOT NULL AND ie_responsavel_credito_w::text <> '') then
					DBMS_SQL.BIND_VARIABLE(v_cursor,'ie_responsavel_credito_w', ie_responsavel_credito_w);
				end if;
                				
				if (ie_grau_partic_w = 'S') and (coalesce(ie_funcao_medico_w,'X') <> 'X')then
					DBMS_SQL.BIND_VARIABLE(v_cursor,'ie_funcao_medico_w', ie_funcao_medico_w);
				end if;

				if (ie_honorario_p = 'N') and (ie_guia_medico_w = 'S') and (coalesce(cd_medico_honorario_p,'X') <> 'X') then
					DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_medico_honorario_p',cd_medico_honorario_p);
				end if;

				if (ie_senha_w = 'S') and (cd_senha_p IS NOT NULL AND cd_senha_p::text <> '') then
					DBMS_SQL.BIND_VARIABLE(v_cursor,':cd_senha_p',cd_senha_p);
				end if;
				if (ie_setor_atendimento_w = 'S') and (coalesce(cd_setor_atendimento_p,0) > 0) then
					DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_setor_atendimento_p',cd_setor_atendimento_p);
				end if;
				if (ie_medico_req_w = 'S') and (coalesce(cd_medico_req_p,'X') <> 'X') then
					DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_medico_req_p',cd_medico_req_p);
				end if;
				if (ie_prescricao_w = 'S') and (coalesce(nr_prescr_proced_p,0) > 0) then
					DBMS_SQL.BIND_VARIABLE(v_cursor,'nr_prescr_proced_p',nr_prescr_proced_p);
				end if;

				if (ie_medico_solic_prescr_w = 'S') and (cd_medico_solic_prescr_w IS NOT NULL AND cd_medico_solic_prescr_w::text <> '') then
					DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_medico_solic_prescr_w',cd_medico_solic_prescr_w);
				end if;
				if (ie_funcionario_w = 'S') and (coalesce(cd_funcionario_p,'X') <> 'X') then
					DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_funcionario_p',cd_funcionario_p);
				end if;
				

				if ((v_sql IS NOT NULL AND v_sql::text <> '') or (v_sql3 IS NOT NULL AND v_sql3::text <> '')) and (ie_considerar_setor_w = 'S') and (coalesce(nr_atual_w,0) > 0) and (coalesce(cd_setor_regra_w,0) > 0) then
					DBMS_SQL.BIND_VARIABLE(v_cursor,'nr_atual_w',nr_atual_w);
				end if;
				
                if (v_sql IS NOT NULL AND v_sql::text <> '') then

                    if (ie_guia_prestador_w = 'S') and ((coalesce(cd_cgc_prestador_tiss_w,cd_cgc_prestador_p) IS NOT NULL AND (coalesce(cd_cgc_prestador_tiss_w,cd_cgc_prestador_p))::text <> '')) AND (v_sql IS NOT NULL AND v_sql::text <> '') then
                        DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_cgc_prestador_param1',coalesce(cd_cgc_prestador_tiss_w,cd_cgc_prestador_p));
                    end if;

                    if (ie_cbos_exec_w	= 'S') and (coalesce(cd_cbos_p,'X') <> 'X') and (v_sql IS NOT NULL AND v_sql::text <> '') then
                        DBMS_SQL.BIND_VARIABLE(v_cursor,'ds_versao_w',ds_versao_w);
                        DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_convenio_w',cd_convenio_w);
                        DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_cbos_p',cd_cbos_p);
                    end if;	

                    if (coalesce(cd_setor_regra_w,0) > 0) then
                        DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_setor_regra_w',cd_setor_regra_w);
                    end if;

                    if (cd_proc_regra_w IS NOT NULL AND cd_proc_regra_w::text <> '') then
                        DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_procedimento_p',cd_procedimento_p);
                    end if;

                    if (cd_grupo_regra_w IS NOT NULL AND cd_grupo_regra_w::text <> '') then
                        DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_grupo_proc_w',cd_grupo_proc_w);
                    end if;

                    if (cd_area_regra_w IS NOT NULL AND cd_area_regra_w::text <> '') then              
                        DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_area_procedimento_w',cd_area_procedimento_w);
                    end if;

                    if (cd_espec_regra_w IS NOT NULL AND cd_espec_regra_w::text <> '') then
                        DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_especialidade_w',cd_especialidade_w);
                    end if;

                end if;

				if (ie_tipo_procedimento_w	= 'S') then
					DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_tipo_procedimento_w',cd_tipo_procedimento_w);
				end if;
				if (ie_data_item_w	= 'S') then
					DBMS_SQL.BIND_VARIABLE(v_cursor,'ds_trunc_w',ds_trunc_w);
					DBMS_SQL.BIND_VARIABLE(v_cursor,'dt_referencia_p',dt_referencia_p);

				end if;
				if (ie_tipo_atend_tiss_proc_w = 'S') and (coalesce(ie_tipo_atend_tiss_w,'X') <> 'X') then
					DBMS_SQL.BIND_VARIABLE(v_cursor,'ie_tipo_atend_tiss_w',ie_tipo_atend_tiss_w);

				end if;
				if (ie_setor_proc_prescr_w	= 'S') and (coalesce(cd_setor_proc_prescr_w,0) > 0) then
					DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_setor_proc_prescr_w',cd_setor_proc_prescr_w);

				end if;
				if (ie_proc_pacote_w = 'S') and (nr_seq_procedimento_p 	<> coalesce(nr_seq_proc_pacote_w,0)) then
					DBMS_SQL.BIND_VARIABLE(v_cursor,'nr_seq_proc_pacote_w',nr_seq_proc_pacote_w);	

				end if;
		
				--SEGUNDO UNION
				if (ie_restringir_honor_w = 'N' or ie_honorario_p = 'P' or ie_honorario_p = 'S') and (ie_guia_honorario_w = 'S') and (cd_medico_honorario_p IS NOT NULL AND cd_medico_honorario_p::text <> '')then
					DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_medico_honorario_p',cd_medico_honorario_p);
				end if;
				if (ie_guia_prestador_w = 'S') and (coalesce(coalesce(cd_cgc_honorario_tiss_w,cd_cgc_prestador_tiss_w),cd_cgc_prestador_p) is not null) and (v_sql1 IS NOT NULL AND v_sql1::text <> '')then
					DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_cgc_prestador_param2',coalesce(coalesce(cd_cgc_honorario_tiss_w,cd_cgc_prestador_tiss_w),cd_cgc_prestador_p));
                     
				end if;

				--union PARTICIPANTES
				if (ie_guia_prestador_w = 'S') and (cd_cgc_prestador_p IS NOT NULL AND cd_cgc_prestador_p::text <> '') and (v_sql2 IS NOT NULL AND v_sql2::text <> '') then
					DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_cgc_prestador_param3',cd_cgc_prestador_p);
				end if;
				--MATERIAL UNION
				if (ie_prescricao_w = 'S') and (coalesce(nr_prescr_mat_p,0) > 0)and (v_sql3 IS NOT NULL AND v_sql3::text <> '') then
					DBMS_SQL.BIND_VARIABLE(v_cursor,'nr_prescr_mat_p',nr_prescr_mat_p);
				end if;
				
				DBMS_SQL.DEFINE_COLUMN(v_cursor, 1, nr_doc_convenio_w, 255);
				DBMS_SQL.DEFINE_COLUMN(v_cursor, 2, qt_procedimento_w);
				DBMS_SQL.DEFINE_COLUMN(v_cursor, 3, qt_itens_w);
				i := 0;
				var_retorno_w := DBMS_SQL.EXECUTE(v_cursor);
	
				
				while(DBMS_SQL.FETCH_ROWS(v_cursor) > 0) loop 
					i := i + 1;
					      DBMS_SQL.COLUMN_VALUE(v_cursor, 1, nr_doc_convenio_w);
					      DBMS_SQL.COLUMN_VALUE(v_cursor, 2, qt_procedimento_w);
					      DBMS_SQL.COLUMN_VALUE(v_cursor, 3, qt_itens_w);
					
					/*insert into log_tiss_obter_Guia (ds_where02) values ('Indice='|| i||  ' ; nr_doc_convenio_w='||nr_doc_convenio_w||' ; qt_procedimento_w='||qt_procedimento_w||' ; qt_itens_w='||qt_itens_w);
					commit;*/
									
				
				END LOOP;
                
				DBMS_SQL.close_cursor(v_cursor);

			elsif (coalesce(nr_seq_pedido_p,0) > 0) then
			
				v_sqlPedido :='select	a.nr_doc_convenio,
							sum(qt_procedimento) qt_procedimento,
							count(*) qt_itens
						from	(';
				
				
				if (coalesce(nr_seq_pedido_exame_p::text, '') = '') then
					v_sqlPedido := v_sqlPedido || ' select	a.cd_autorizacao nr_doc_convenio,
										dt_solicitacao,
										0 QT_PROCEDIMENTO
									from	pedido_exame_externo a
									where	nr_sequencia		= :nr_seq_pedido_p';
				else
					v_sqlPedido := v_sqlPedido || ' select	b.nr_doc_convenio nr_doc_convenio,
										b.dt_execucao,
										0 QT_PROCEDIMENTO 
									from	pedido_exame_externo_item b,
										pedido_exame_externo a
									where	b.nr_seq_pedido			= a.nr_sequencia
									and	a.nr_sequencia			= :nr_seq_pedido_p
									and	b.nr_doc_convenio		is not null';
							
					if (ie_guia_prestador_w = 'S') and (coalesce(cd_cgc_prestador_w,'X') <> 'X') then
						v_sqlPedido := v_sqlPedido || ' and b.cd_cgc  = :cd_cgc_prestador_param4';
					end if;
					if (cd_proc_regra_w IS NOT NULL AND cd_proc_regra_w::text <> '') then
						v_sqlPedido := v_sqlPedido || ' and b.cd_procedimento = :cd_procedimento_w';
					end if;
					if (cd_grupo_regra_w IS NOT NULL AND cd_grupo_regra_w::text <> '') then
						v_sqlPedido := v_sqlPedido || ' and to_number(obter_grupo_procedimento(b.cd_procedimento,b.ie_origem_proced,''C'')) = :cd_grupo_proc_w';
					end if;
					if (cd_area_regra_w IS NOT NULL AND cd_area_regra_w::text <> '') then
						v_sqlPedido := v_sqlPedido || ' and OBTER_AREA_PROCEDIMENTO(b.cd_procedimento,b.ie_origem_proced) = :cd_area_procedimento_w';
					end if;
					if (cd_espec_regra_w IS NOT NULL AND cd_espec_regra_w::text <> '') then
						v_sqlPedido := v_sqlPedido || ' and OBTER_ESPECIALIDADE_PROCED(b.cd_procedimento,b.ie_origem_proced) = :cd_especialidade_w';
					end if;
					if (ie_tipo_procedimento_w	= 'S') then
						v_sqlPedido := v_sqlPedido || ' and to_number(Obter_tipo_procedimento(b.cd_procedimento,b.ie_origem_proced,''C'')) = :cd_tipo_procedimento_w';
					end if;
					if (ie_data_item_w	= 'S') then
						v_sqlPedido := v_sqlPedido || ' and PKG_DATE_UTILS.start_of(b.dt_execucao,:ds_trunc_w,0) = PKG_DATE_UTILS.start_of(:dt_referencia_p,:ds_trunc_w,0)';
					end if;
				end if;
				
				v_sqlPedido := v_sqlPedido ||' order by 2) a
							group 	by a.nr_doc_convenio
							order by a.nr_doc_convenio,
								qt_procedimento desc';
								


				v_cursor := DBMS_SQL.OPEN_CURSOR;
				DBMS_SQL.PARSE(v_cursor, v_sqlPedido,DBMS_SQL.NATIVE);

				DBMS_SQL.BIND_VARIABLE(v_cursor, 'nr_seq_pedido_p', nr_seq_pedido_p);
				
				if	(nr_seq_pedido_exame_p IS NOT NULL AND nr_seq_pedido_exame_p::text <> '') then

					if (ie_guia_prestador_w = 'S') and (coalesce(cd_cgc_prestador_w,'X') <> 'X') and (nr_seq_pedido_exame_p IS NOT NULL AND nr_seq_pedido_exame_p::text <> '') then
						DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_cgc_prestador_param4',cd_cgc_prestador_w);
					end if;

					if (cd_proc_regra_w IS NOT NULL AND cd_proc_regra_w::text <> '')and (nr_seq_pedido_exame_p IS NOT NULL AND nr_seq_pedido_exame_p::text <> '') then													
						DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_procedimento_w',cd_procedimento_w);
					end if;

					if (cd_grupo_regra_w IS NOT NULL AND cd_grupo_regra_w::text <> '')and (nr_seq_pedido_exame_p IS NOT NULL AND nr_seq_pedido_exame_p::text <> '') then
						DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_grupo_proc_w',cd_grupo_proc_w);
					end if;

					if (cd_area_regra_w IS NOT NULL AND cd_area_regra_w::text <> '')and (nr_seq_pedido_exame_p IS NOT NULL AND nr_seq_pedido_exame_p::text <> '') then
						DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_area_procedimento_w',cd_area_procedimento_w);
					end if;

					if (cd_espec_regra_w IS NOT NULL AND cd_espec_regra_w::text <> '')and (nr_seq_pedido_exame_p IS NOT NULL AND nr_seq_pedido_exame_p::text <> '') then
						DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_especialidade_w',cd_especialidade_w);
					end if;

					if (ie_tipo_procedimento_w	= 'S')and (nr_seq_pedido_exame_p IS NOT NULL AND nr_seq_pedido_exame_p::text <> '') then
						DBMS_SQL.BIND_VARIABLE(v_cursor,'cd_tipo_procedimento_w',cd_tipo_procedimento_w);
					end if;

						
																									
					if (ie_data_item_w	= 'S') then
						DBMS_SQL.BIND_VARIABLE(v_cursor,'ds_trunc_w',ds_trunc_w);
						DBMS_SQL.BIND_VARIABLE(v_cursor,'dt_referencia_p',dt_referencia_p);
		
	    
					end if;
				
				end if;
				
				
				DBMS_SQL.DEFINE_COLUMN(v_cursor, 1, nr_doc_convenio_w, 255);
				DBMS_SQL.DEFINE_COLUMN(v_cursor, 2, qt_procedimento_w);
				DBMS_SQL.DEFINE_COLUMN(v_cursor, 3, qt_itens_w);
				
				var_retorno_w := DBMS_SQL.EXECUTE(v_cursor);
				
				while(DBMS_SQL.FETCH_ROWS(v_cursor) > 0) loop

				      DBMS_SQL.COLUMN_VALUE(v_cursor, 1, nr_doc_convenio_w);
				      DBMS_SQL.COLUMN_VALUE(v_cursor, 2, qt_procedimento_w);
				      DBMS_SQL.COLUMN_VALUE(v_cursor, 3, qt_itens_w);
				
				END LOOP;
				DBMS_SQL.close_cursor(v_cursor);
				
			end if;
			
			

			if (coalesce(qt_max_proc_w, 0) > 0) and (coalesce(qt_procedimento_w, 0) >= coalesce(qt_max_proc_w, 0)) then
				nr_doc_convenio_w	:= null;
			end if;

			if (coalesce(qt_itens_guia_w,0) > 0) and (coalesce(qt_itens_w,0) >= coalesce(qt_itens_guia_w, 0)) then
				nr_doc_convenio_w	:= null;
			end if;
		
		
		end if;
		
		
		if (ie_forma_w = 'SAPC') then 	

				select 	max(a.cd_senha)
				into STRICT 	nr_doc_convenio_w
				from	atend_categoria_convenio a
				where 	a.nr_atendimento	= nr_atendimento_w
				and	((dt_periodo_inicial_w  >= a.dt_inicio_vigencia) and (dt_periodo_final_w  <= coalesce(a.dt_final_vigencia,dt_periodo_final_w)));
		end if;

		if (ie_forma_w = 'IC') then		-- Edgar OS 137402, 22/04/2009, zerar o nr_doc_convenio_w para que entre no elsif abaixo
			nr_doc_convenio_w	:= null;
		end if;

		if (ie_forma_w = 'GP') then /*lhalves OS234784 em 06/08/2010 - Guia do procedimento na prescricao.*/
			begin
			if (coalesce(nr_prescr_proced_p, 0) > 0) and (coalesce(nr_interno_conta_p, 0) > 0) then
				
				if (coalesce(nr_seq_proc_pacote_w,0) > 0) and (nr_seq_proc_pacote_w = nr_seq_procedimento_p) then					
					select	max(nr_seq_proc_origem)
					into STRICT	nr_seq_proc_gatilho_w
					from 	atendimento_pacote
					where 	nr_atendimento = nr_atendimento_w
					and	nr_seq_procedimento = nr_seq_procedimento_p;					
				end if;
				
				select 	coalesce(max(b.nr_doc_convenio),max(a.nr_doc_conv)) -- procedimento da prescricao ou prescricao.
				into STRICT 	nr_doc_convenio_w
				from 	prescr_medica a,
					prescr_procedimento b,
					procedimento_paciente c
				where 	a.nr_prescricao	= b.nr_prescricao
				and 	b.nr_prescricao	= c.nr_prescricao
				and 	b.nr_sequencia	= c.nr_sequencia_prescricao
				and 	c.nr_sequencia	= coalesce(nr_seq_proc_gatilho_w, nr_seq_procedimento_p);
			elsif (coalesce(nr_prescr_proced_p, 0) = 0) and /*lhalves OS260365 em 22/10/10 Se nao tem prescricao deve buscar o menor numero de guia gerado para a

prescricao do atendimento*/
				(coalesce(nr_interno_conta_p, 0) > 0) then
				select 	coalesce(min(c.nr_doc_convenio),min(b.nr_doc_conv))
				into STRICT 	nr_doc_convenio_w
				from 	conta_paciente a,
					prescr_medica b,
					prescr_procedimento c
				where	a.nr_atendimento	= b.nr_atendimento
				and 	b.nr_prescricao		= c.nr_prescricao
				and 	a.nr_interno_conta	= nr_interno_conta_p;
			end if;
			exception
			when others then
				null;
			end;
		end if;

		if (ie_forma_w = 'GPR') then /*lhalves OS237875 em 11/08/2010 - Guia do procedimento principal do item */
			if (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') then
				select 	max(nr_seq_proc_princ)
				into STRICT 	nr_seq_proc_principal_w
				from	material_atend_paciente
				where 	nr_sequencia 	= nr_seq_material_p;
			elsif (nr_seq_procedimento_p IS NOT NULL AND nr_seq_procedimento_p::text <> '') then
				select 	max(nr_seq_proc_princ)
				into STRICT 	nr_seq_proc_principal_w
				from	procedimento_paciente
				where 	nr_sequencia 	= nr_seq_procedimento_p;
			end if;

			if (nr_seq_proc_principal_w IS NOT NULL AND nr_seq_proc_principal_w::text <> '') then
				select 	max(nr_doc_convenio)
				into STRICT 	nr_doc_convenio_w
				from 	procedimento_paciente
				where 	nr_sequencia	= nr_seq_proc_principal_w;
			else
				select	max(a.nr_doc_convenio)
				into STRICT	nr_doc_convenio_w
				from	atend_categoria_convenio a
				where	a.nr_atendimento	= nr_atendimento_w
				and	a.cd_convenio	= cd_convenio_w
				and	a.nr_seq_interno	=
						(SELECT	max(x.nr_seq_interno)
						from	atend_categoria_convenio x
						where	x.nr_atendimento	= a.nr_atendimento
						and	x.cd_convenio	= a.cd_convenio);
			end if;
		end if;

		if (ie_forma_w = 'CGA') then /*lhaves OS 239990 em 13/08/2010 = Numero da conta + guia do atend*/
			if (coalesce(nr_interno_conta_p, 0) > 0) then
				select	max(a.nr_doc_convenio)
				into STRICT	nr_doc_convenio_w
				from	atend_categoria_convenio a
				where	a.nr_atendimento	= nr_atendimento_w
				and	a.cd_convenio	= cd_convenio_w
				and	a.nr_seq_interno	=
						(SELECT	max(x.nr_seq_interno)
						from	atend_categoria_convenio x
						where	x.nr_atendimento	= a.nr_atendimento
						and	x.cd_convenio	= a.cd_convenio);

				nr_doc_convenio_w	:= nr_interno_conta_p||nr_doc_convenio_w;
			end if;
		end if;

		if (ie_forma_w = 'GA') then /*lhalves OS274011 em 11/06/2010 - Para guia do atendimento nao precisa verificar se nr_doc_convenio_w is null, porque nao tem quebra*/
			select	max(a.nr_doc_convenio)
			into STRICT	nr_doc_convenio_w
			from	atend_categoria_convenio a
			where	a.nr_atendimento	= nr_atendimento_w
			and	a.cd_convenio	= cd_convenio_w
			and	a.nr_seq_interno	=
					(SELECT	max(x.nr_seq_interno)
					from	atend_categoria_convenio x
					where	x.nr_atendimento	= a.nr_atendimento
					and	x.cd_convenio	= a.cd_convenio);

			if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') then
				begin
				select	trim(both TISS_OBTER_COD_USUARIO_MASC(nr_doc_convenio_w, ds_mascara_w))
				into STRICT	nr_doc_mascara_w
				;
				exception
					when others then
						nr_doc_mascara_w := null;
				end;

				if (nr_doc_mascara_w IS NOT NULL AND nr_doc_mascara_w::text <> '') then
					nr_doc_convenio_w	:= nr_doc_mascara_w;
				end if;
			end if;
			
		end if;


		if (ie_forma_w = 'GAG') then /*lhalves OS 362868*/
			select	max(a.nr_doc_convenio)
			into STRICT	nr_doc_convenio_w
			from	atend_categoria_convenio a
			where	a.nr_atendimento	= nr_atendimento_w
			and	a.cd_convenio		= cd_convenio_w
			and	a.ie_tipo_guia		= ie_tipo_guia_conta_w
			and	a.nr_seq_interno	=
							(SELECT	max(x.nr_seq_interno)
							from	atend_categoria_convenio x
							where	x.nr_atendimento	= a.nr_atendimento
							and	x.cd_convenio		= a.cd_convenio
							and	x.ie_tipo_guia		= ie_tipo_guia_conta_w);

			if (coalesce(nr_doc_convenio_w::text, '') = '') then
				select	max(a.nr_doc_convenio)
				into STRICT	nr_doc_convenio_w
				from	atend_categoria_convenio a
				where	a.nr_atendimento	= nr_atendimento_w
				and	a.cd_convenio		= cd_convenio_w
				and	a.nr_seq_interno	=
								(SELECT	max(x.nr_seq_interno)
								from	atend_categoria_convenio x
								where	x.nr_atendimento	= a.nr_atendimento
								and	x.cd_convenio		= a.cd_convenio);
			end if;

			if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') then
				begin
				select	trim(both TISS_OBTER_COD_USUARIO_MASC(nr_doc_convenio_w, ds_mascara_w))
				into STRICT	nr_doc_mascara_w
				;
				exception
					when others then
						nr_doc_mascara_w := null;
				end;

				if (nr_doc_mascara_w IS NOT NULL AND nr_doc_mascara_w::text <> '') then
					nr_doc_convenio_w	:= nr_doc_mascara_w;
				end if;
			end if;
		end if;

		if (ie_forma_w = 'SA') then
			nr_doc_convenio_w	:= cd_senha_w;
		end if;

		if (ie_forma_w = 'CP') then
			nr_doc_convenio_w	:= substr(cd_usuario_convenio_w,1,20);
		end if;

		if (ie_forma_w in ('GAUT', 'GAUTIN')) then --Guia da autorizacao do item	lhalves OS 820397 em 07/07/2015
			begin
			SELECT * FROM OBTER_AUTOR_ITEM_CONTA(	nr_seq_procedimento_p, nr_seq_material_p, nr_sequencia_autor_w, nr_seq_proc_autor_w, nr_seq_mat_autor_w, nr_doc_autor_w, cd_senha_autor_w, ie_autorizado_w, 'C') INTO STRICT nr_sequencia_autor_w, nr_seq_proc_autor_w, nr_seq_mat_autor_w, nr_doc_autor_w, cd_senha_autor_w, ie_autorizado_w;
			exception
			when others then
				nr_doc_autor_w	:= null;
				ie_autorizado_w	:= 'N';
			end;	

			

			if (ie_autorizado_w = 'S') and (nr_doc_autor_w IS NOT NULL AND nr_doc_autor_w::text <> '') then
				nr_doc_convenio_w	:= nr_doc_autor_w;
			end if;		
			
			if 	ie_forma_w = 'GAUTIN'
				and (nr_doc_convenio_w IS NOT NULL AND nr_doc_convenio_w::text <> '')
				and coalesce(nr_doc_autor_w::text, '') = ''
				and nr_doc_convenio_w	<> to_char(nr_atual_w) then
				nr_doc_convenio_w := null;
			elsif	ie_forma_w = 'GAUT' and
				coalesce(nr_doc_convenio_w::text, '') = '' then
				
				select	max(a.nr_doc_convenio)
				into STRICT	nr_doc_convenio_w
				from	atend_categoria_convenio a
				where	a.nr_atendimento	= nr_atendimento_w
				and	a.cd_convenio		= cd_convenio_w
				and	dt_referencia_p	between dt_inicio_vigencia and coalesce(dt_final_vigencia,pkg_date_utils.get_time(dt_referencia_p, 0,0,0) + 89399/89400);

				if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') then
					begin
					select	trim(both TISS_OBTER_COD_USUARIO_MASC(nr_doc_convenio_w, ds_mascara_w))
					into STRICT	nr_doc_mascara_w
					;
					exception
						when others then
							nr_doc_mascara_w := null;
					end;

					if (nr_doc_mascara_w IS NOT NULL AND nr_doc_mascara_w::text <> '') then
						nr_doc_convenio_w	:= nr_doc_mascara_w;
					end if;
				end if;
			
			end if;
			
			if (coalesce(nr_doc_convenio_w::text, '') = '') and (ie_forma_w = 'GAUTIN') then /* If the item authorization form wasn't found, consider the item numeration ('IN' behaviour') */

				select	nr_atual
				into STRICT	nr_atual_w
				from	tiss_regra_guia
				where	nr_sequencia	= nr_sequencia_w;

				if (nr_atual_w < nr_final_w) then
					if (nr_atual_w < nr_inicial_w) then
						nr_atual_w	:= nr_inicial_w;
					else
						nr_atual_w	:= nr_atual_w + 1;
					end if;

					nr_doc_convenio_w	:= nr_atual_w;

					update 	tiss_regra_guia
					set	nr_atual	= nr_atual_w
					where	nr_sequencia	= nr_sequencia_w;

					if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') then
						begin
						select	trim(both TISS_OBTER_COD_USUARIO_MASC(nr_doc_convenio_w, ds_mascara_w))
						into STRICT	nr_doc_mascara_w
						;
						exception
						when others then
							nr_doc_mascara_w := null;
						end;

						if (nr_doc_mascara_w IS NOT NULL AND nr_doc_mascara_w::text <> '') then
							nr_doc_convenio_w	:= nr_doc_mascara_w;
						end if;
					end if;

				end if;
			end if;
			
		end if;

		if (ie_forma_w = 'PGA') then

			if (coalesce(nr_interno_conta_p,0) > 0) then

				select	max(nr_doc_convenio)
				into STRICT	nr_doc_convenio_w
				from	procedimento_paciente
				where	nr_interno_conta		= nr_interno_conta_p
				and	coalesce(cd_motivo_exc_conta::text, '') = ''
				and	ie_proc_princ_atend	= 'S';

			elsif (coalesce(nr_seq_pedido_p,0) > 0) then

				select	max(cd_autorizacao)
				into STRICT	nr_doc_convenio_w
				from	pedido_exame_externo
				where	nr_sequencia	= nr_seq_pedido_p;

			elsif (coalesce(nr_prescricao_p,0) > 0) then

				select	max(nr_doc_conv)
				into STRICT	nr_doc_convenio_w
				from	prescr_medica
				where	nr_prescricao	= nr_prescricao_p;

			elsif (coalesce(nr_seq_pep_med_fatur_p,0) > 0) then

				select	max(nr_doc_convenio)
				into STRICT	nr_doc_convenio_w
				from	pep_med_fatur
				where	nr_sequencia	= nr_seq_pep_med_fatur_p;

			end if;

			if (coalesce(nr_doc_convenio_w::text, '') = '') then

				select	max(coalesce(Obter_Proc_Principal(nr_atendimento_w, cd_convenio_w, ie_tipo_atendimento_w, nr_interno_conta_p, 'SEQ'), 0))
				into STRICT	nr_seq_procedimento_w
				;

				if (coalesce(nr_seq_procedimento_w, 0) <> 0) then
					select	max(nr_doc_convenio)
					into STRICT	nr_doc_convenio_w
					from	procedimento_paciente
					where	nr_sequencia		= nr_seq_procedimento_w
					and	coalesce(cd_motivo_exc_conta::text, '') = '';
				else /*Se nao encontrou a sequencia, busca pelo Codigo, para o caso da regra para 'Consulta'*/
					select	max(coalesce(Obter_Proc_Principal(nr_atendimento_w, cd_convenio_w, ie_tipo_atendimento_w, nr_interno_conta_p, 'CD'), 0))
					into STRICT	cd_proc_principal_w
					;

					if (coalesce(cd_proc_principal_w,0) <> 0) then
						select	max(nr_doc_convenio)
						into STRICT	nr_doc_convenio_w
						from	procedimento_paciente
						where	nr_interno_conta	= nr_interno_conta_p
						and	cd_procedimento		= cd_proc_principal_w
						and	coalesce(cd_motivo_exc_conta::text, '') = '';
					end if;
				end if;

				if (coalesce(nr_doc_convenio_w::text, '') = '') then
					select	max(a.nr_doc_convenio)
					into STRICT	nr_doc_convenio_w
					from	atend_categoria_convenio a
					where	a.nr_atendimento	= nr_atendimento_w
					and	a.cd_convenio	= cd_convenio_w
					and	a.nr_seq_interno	=
							(SELECT	max(x.nr_seq_interno)
							from	atend_categoria_convenio x
							where	x.nr_atendimento	= a.nr_atendimento
							and	x.cd_convenio	= a.cd_convenio);
				end if;
			end if;

		elsif	((coalesce(nr_doc_convenio_w::text, '') = '') or
			(ie_forma_w = 'GAC')) then -- dsantos/lhalves em 25/01/2010 -> sem este 'or', qdo utilizada a opcao GAC, gerava a guia para o primeiro material
			-- mas para todos os outros materiais lancados era utilizado o mesmo nro do primeiro lancamento. A regra nunca passava duas vezes na mesma conta.
			ie_forma_w	:= coalesce(ie_forma_w,'N');
			if (ie_forma_w = 'A') then
				nr_doc_convenio_w	:= nr_atendimento_w;
			elsif (ie_forma_w = 'AV') then
				nr_doc_convenio_w	:= nr_atendimento_w || ds_adicional_w;
			elsif (ie_forma_w = 'AUT') then

				select	max(cd_autorizacao)
				into STRICT	cd_autorizacao_w
				from	conta_paciente
				where	nr_interno_conta = nr_interno_conta_p;

				nr_doc_convenio_w	:= ds_adicional_w || coalesce(cd_autorizacao_w, nr_interno_conta_p);
			elsif (ie_forma_w = 'VA') then
				nr_doc_convenio_w	:= ds_adicional_w || nr_atendimento_w;
			elsif (ie_forma_w = 'IC') then
				nr_doc_convenio_w	:= nr_interno_conta_p;
			elsif (ie_forma_w = 'U6AV') then
				nr_doc_convenio_w	:= substr(nr_atendimento_w, length(nr_atendimento_w) - 6,6) || ds_adicional_w;
			elsif (ie_forma_w = 'AINVA') then --Atendimento + Intervalor de numeracao (por atendimento)
				begin
					select	coalesce(coalesce(max(nr_intervalo_atual),nr_inicial_w),0) + 1
					into STRICT	nr_atual_w
					from	tiss_atend_pac_guia_regra
					where	nr_atendimento	= nr_atendimento_w;

					if (nr_atual_w > nr_final_w) then
						nr_atual_w	:= nr_final_w;
					end if;

					nr_doc_convenio_w	:= nr_atendimento_w || nr_atual_w;

					insert 	into tiss_atend_pac_guia_regra(dt_atualizacao,
						nr_seq_regra,
						nr_atendimento,
						nr_intervalo_atual)
					values (clock_timestamp(),
						nr_sequencia_w,
						nr_atendimento_w,
						nr_atual_w);
				exception
				when others then
					null;
				end;

			elsif (ie_forma_w = 'GAINV') then /*lhalves OS 793841 em 31/10/2014 - Guia do atendimento + Intervalo de numeracao (por atendimento)*/
				select	max(a.nr_doc_convenio)
				into STRICT	nr_doc_convenio_w
				from	atend_categoria_convenio a
				where	a.nr_atendimento	= nr_atendimento_w
				and	a.cd_convenio		= cd_convenio_w
				and	a.nr_seq_interno	=
						(SELECT	max(x.nr_seq_interno)
						from	atend_categoria_convenio x
						where	x.nr_atendimento	= a.nr_atendimento
						and	x.cd_convenio		= a.cd_convenio);

				if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') then
					begin
					select	trim(both TISS_OBTER_COD_USUARIO_MASC(nr_doc_convenio_w, ds_mascara_w))
					into STRICT	nr_doc_mascara_w
					;
					exception
						when others then
							nr_doc_mascara_w := null;
					end;

					if (nr_doc_mascara_w IS NOT NULL AND nr_doc_mascara_w::text <> '') then
						nr_doc_convenio_w	:= nr_doc_mascara_w;
					end if;
				end if;

				begin
					select	coalesce(coalesce(max(nr_intervalo_atual),nr_inicial_w),0) + 1
					into STRICT	nr_atual_w
					from	tiss_atend_pac_guia_regra
					where	nr_atendimento	= nr_atendimento_w;

					if (nr_atual_w > nr_final_w) then
						nr_atual_w	:= nr_final_w;
					end if;

					nr_doc_convenio_w	:= nr_doc_convenio_w || nr_atual_w;

					insert 	into tiss_atend_pac_guia_regra(dt_atualizacao,
						nr_seq_regra,
						nr_atendimento,
						nr_intervalo_atual)
					values (clock_timestamp(),
						nr_sequencia_w,
						nr_atendimento_w,
						nr_atual_w);
				exception
				when others then
					null;
				end;

			elsif (ie_forma_w in ('IN','INV', 'VIM11', 'AIN', 'VIN', 'GAI')) then

				select	nr_atual
				into STRICT	nr_atual_w
				from	tiss_regra_guia
				where	nr_sequencia	= nr_sequencia_w;

				if (nr_atual_w < nr_final_w) then
					if (nr_atual_w < nr_inicial_w) then
						nr_atual_w	:= nr_inicial_w;
					else
						nr_atual_w	:= nr_atual_w + 1;
					end if;


					nr_doc_convenio_w	:= nr_atual_w;

					update 	tiss_regra_guia
					set	nr_atual	= nr_atual_w
					where	nr_sequencia	= nr_sequencia_w;

					if (ie_forma_w = 'INV') then
						nr_doc_convenio_w	:= nr_doc_convenio_w||ds_adicional_w;
					elsif (ie_forma_w = 'AIN') then
						nr_doc_convenio_w	:= nr_atendimento_w || nr_doc_convenio_w;
					elsif (ie_forma_w = 'VIN') then
						if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') then
							begin
							select	trim(both to_char(somente_numero(nr_doc_convenio_w),ds_mascara_w))
							into STRICT	nr_doc_mascara_w
							;
							exception
								when others then
									nr_doc_mascara_w := null;
							end;

							if (nr_doc_mascara_w IS NOT NULL AND nr_doc_mascara_w::text <> '') then
								nr_doc_convenio_w	:= ds_adicional_w ||nr_doc_mascara_w;
							end if;
						else
							nr_doc_convenio_w	:= ds_adicional_w || nr_doc_convenio_w;
						end if;
					elsif (ie_forma_w = 'VIM11') then

						if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') then
							begin
							select	trim(both to_char(somente_numero(nr_doc_convenio_w),ds_mascara_w))
							into STRICT	nr_doc_mascara_w
							;
							exception
								when others then
									nr_doc_mascara_w := null;
							end;

							if (nr_doc_mascara_w IS NOT NULL AND nr_doc_mascara_w::text <> '') then
								nr_doc_convenio_w	:= nr_doc_mascara_w;
							end if;
						end if;
						nr_doc_convenio_w	:= ds_adicional_w || nr_doc_convenio_w;
						nr_digito_verificador_w	:= Calcula_Digito('MODULO11', nr_doc_convenio_w);
						nr_doc_convenio_w	:= nr_doc_convenio_w || nr_digito_verificador_w;
					elsif (ie_forma_w = 'GAI') then
						select	max(a.nr_doc_convenio)
						into STRICT	nr_doc_conv_atend_w
						from	atend_categoria_convenio a
						where	a.nr_atendimento	= nr_atendimento_w
						and	a.cd_convenio	= cd_convenio_w
						and	a.nr_seq_interno	=
								(SELECT	max(x.nr_seq_interno)
								from	atend_categoria_convenio x
								where	x.nr_atendimento	= a.nr_atendimento
								and	x.cd_convenio		= a.cd_convenio);

						nr_doc_convenio_w	:= nr_doc_conv_atend_w || nr_doc_convenio_w;
					elsif (ie_forma_w = 'GAPI') then

						select	max(a.nr_doc_convenio)
						into STRICT	nr_doc_conv_atend_w
						from	atend_categoria_convenio a
						where	a.nr_atendimento	= nr_atendimento_w
						and	a.cd_convenio		= cd_convenio_w
						and	dt_referencia_p	between dt_inicio_vigencia and coalesce(dt_final_vigencia,pkg_date_utils.get_time(dt_referencia_p, 0,0,0) + 89399/89400);

						nr_doc_convenio_w	:= nr_doc_conv_atend_w || nr_doc_convenio_w;

					elsif (ie_forma_w = 'IN') then
						if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') then
							begin
							select	trim(both TISS_OBTER_COD_USUARIO_MASC(nr_doc_convenio_w, ds_mascara_w))
							into STRICT	nr_doc_mascara_w
							;
							exception
							when others then
								nr_doc_mascara_w := null;
							end;

							if (nr_doc_mascara_w IS NOT NULL AND nr_doc_mascara_w::text <> '') then
								nr_doc_convenio_w	:= nr_doc_mascara_w;
							end if;
						end if;
					end if;
				end if;

			elsif (ie_forma_w = 'GAC') then
				select	max(a.nr_doc_convenio)
				into STRICT	nr_doc_convenio_w
				from	atend_categoria_convenio a
				where	a.nr_atendimento	= nr_atendimento_w
				and	a.cd_convenio	= cd_convenio_w
				and	dt_referencia_p	between dt_inicio_vigencia and coalesce(dt_final_vigencia,pkg_date_utils.get_time(dt_referencia_p, 0,0,0) + 89399/89400); --lhalves OS280060 26/01/2011 - Alterado para o fim_dya apenas na dt_referencia_p.
				if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') then
					begin
					select	trim(both TISS_OBTER_COD_USUARIO_MASC(nr_doc_convenio_w, ds_mascara_w))
					into STRICT	nr_doc_mascara_w
					;
					exception
						when others then
							nr_doc_mascara_w := null;
					end;

					if (nr_doc_mascara_w IS NOT NULL AND nr_doc_mascara_w::text <> '') then
						nr_doc_convenio_w	:= nr_doc_mascara_w;
					end if;
				end if;
			elsif (ie_forma_w = 'NGR') then --lhalves OS 198516 10/03 - gerar o numero de guia dos parametros gerais
				select 	max(nr_guia_atual)
				into STRICT	nr_guia_geral_w
				from 	tiss_parametros
				where	cd_estabelecimento = cd_estabelecimento_w;

				nr_doc_convenio_w	:= nr_guia_geral_w;

				if (qt_itens_guia_w IS NOT NULL AND qt_itens_guia_w::text <> '') and (coalesce(nr_prescricao_p, 0) > 0) then

					select 	count(*)
					into STRICT 	cont_w
					from 	prescr_procedimento
					where	nr_prescricao				= nr_prescricao_p
					and 	nr_doc_convenio				= nr_guia_geral_w
					and	coalesce(nr_interno_conta_p::text, '') = '';

					if (cont_w >= qt_itens_guia_w) then
						nr_doc_convenio_w	:= nr_guia_geral_w + 1;
					end if;
				end if;

				update 	tiss_parametros
				set	nr_guia_atual		= nr_doc_convenio_w
				where	cd_estabelecimento 	= cd_estabelecimento_w;

			elsif (ie_forma_w = 'PR') then --lhalves OS 234789 em 24/06/2010 - Numero da prescricao.
				if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then
					nr_doc_convenio_w 	:= nr_prescricao_p;
				elsif (nr_prescr_proced_p IS NOT NULL AND nr_prescr_proced_p::text <> '') then
					nr_doc_convenio_w	:= nr_prescr_proced_p;
				end if;

			elsif (ie_forma_w = 'GPA') then --lhalves OS 506195 em 24/10/2012 - Numero da guia principal do atendimento
				select	max(a.nr_doc_conv_principal)
				into STRICT	nr_doc_convenio_w
				from	atend_categoria_convenio a
				where	a.nr_atendimento	= nr_atendimento_w
				and	a.cd_convenio		= cd_convenio_w
				and	dt_referencia_p	between dt_inicio_vigencia and coalesce(dt_final_vigencia,pkg_date_utils.get_time(dt_referencia_p, 0,0,0) + 89399/89400);

				if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') then
					begin
					select	trim(both TISS_OBTER_COD_USUARIO_MASC(nr_doc_convenio_w, ds_mascara_w))
					into STRICT	nr_doc_mascara_w
					;
					exception
						when others then
							nr_doc_mascara_w := null;
					end;

					if (nr_doc_mascara_w IS NOT NULL AND nr_doc_mascara_w::text <> '') then
						nr_doc_convenio_w	:= nr_doc_mascara_w;
					end if;
				end if;
			end if;			

			if (nr_doc_convenio_w = nr_doc_conv_comunic_w) and (cd_perfil_comunic_w IS NOT NULL AND cd_perfil_comunic_w::text <> '') then

				begin
				select	substr(obter_nome_convenio(cd_convenio),1,60),
					substr(obter_valor_dominio(12,ie_tipo_atendimento),1,100)
				into STRICT	ds_convenio_w,
					ds_tipo_atendimento_w
				from	tiss_regra_guia
				where	nr_sequencia	= nr_sequencia_w;

				CALL gerar_comunic_padrao(clock_timestamp(),
						WHEB_MENSAGEM_PCK.get_texto(309626),
						WHEB_MENSAGEM_PCK.get_texto(309629,'DS_CONVENIO_W=' || ds_convenio_w || ';' ||
										'DS_TIPO_ATENDIMENTO_W=' || ds_tipo_atendimento_w),
						'Tasy',
						'N',
						null,
						'N',
						null,
						to_char(cd_perfil_comunic_w) || ',',
						cd_estabelecimento_w,
						null,
						clock_timestamp(),
						null,
						null);
				exception
					when others then
						null;
				end;
			end if;

			if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') and (ie_forma_w <> 'VIM11') and (ie_forma_w <> 'VIN') and (ie_forma_w <> 'GA') then

				begin
				select	trim(both to_char(somente_numero(nr_doc_convenio_w),ds_mascara_w))
				into STRICT	nr_doc_mascara_w
				;
				exception
					when others then
						nr_doc_mascara_w := null;
				end;

				if (nr_doc_mascara_w IS NOT NULL AND nr_doc_mascara_w::text <> '') then
					nr_doc_convenio_w	:= nr_doc_mascara_w;
				end if;
			end if;
		end if;
	end if;
end if;

ie_guia_p		:= ie_guia_w;
cd_autorizacao_p	:= nr_doc_convenio_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_obter_guia (ie_tiss_tipo_guia_p text, nr_interno_conta_p bigint, cd_autorizacao_p INOUT text, ie_honorario_p text, cd_medico_honorario_p text, cd_cgc_prestador_p text, ie_responsavel_credito_p text, ie_funcao_medico_p text, cd_cbos_p text, ie_guia_p INOUT text, nr_seq_pedido_p bigint, nr_prescricao_p bigint, cd_senha_p text, cd_setor_atendimento_p bigint, cd_medico_req_p text, nr_prescr_proced_p bigint, cd_medico_solic_prescr_p text, dt_referencia_p timestamp, cd_funcionario_p text, nr_seq_material_p bigint, nr_seq_procedimento_p bigint, nr_prescr_mat_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_pep_med_fatur_p bigint, nr_seq_pedido_exame_p bigint default null) FROM PUBLIC;

