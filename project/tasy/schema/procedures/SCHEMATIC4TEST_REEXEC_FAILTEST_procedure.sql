-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE schematic4test_reexec_failtest (NR_SEQUENCIA_P bigint, NR_SEQ_SCRIPT_P bigint, NR_SEQ_GRID_P bigint, NM_USUARIO_P text) AS $body$
DECLARE

NR_SEQUENCIA_W bigint;
DS_VERSION_W varchar(255);
NM_SCRIPT_W varchar(255);
NM_SUITE_W varchar(255);
NR_SEQ_PRESET_W bigint;
NR_SEQ_URL_W bigint;
NM_SUITE_W2 varchar(255);
NR_SEQ_SCRIPT_W bigint;
NR_SEQ_EXECUTION_W bigint;
NR_SEQ_BROWSER_W bigint;
NR_SEQ_SERVICE_W bigint;
NR_SEQ_ROBOT_W2 bigint;
NR_SEQ_GRID_W2 bigint;
NR_SEQ_ROBOT_W bigint;
NR_SEQ_GRID_W bigint;
IE_RUNTYPE_W smallint;
NR_SEQ_SUITE_W bigint;
NEWSEQUENCETEST bigint;
NEWSEQUENCESCHEDULE bigint;
NR_SEQ_EXECUTION_W2 bigint;
NR_SEQ_SUITE_W2 bigint;
NR_SEQ_URL_W2 bigint;
NR_SEQ_SERVICE_W2 bigint;
QTD bigint;
QTD_W bigint;
QTD_W2 bigint;
QTD_W3 bigint;
NR_SEQ_PACKAGE_W bigint;


BEGIN
    --procedure that reexec fail to script
	INSERT INTO SCHEM_TEST_BEHOLDER(nr_sequencia, nm_usuario, dt_atualizacao, nm_usuario_nrec, dt_atualizacao_nrec, ds_interaction, ds_param_a, ds_param_b, ds_param_c)
	VALUES (nextval('schem_test_beholder_seq'), NM_USUARIO_P, clock_timestamp(), 'Robot', clock_timestamp(), 'SCHEMATIC4TEST_REEXEC_FAILTEST', 
	'NR_SEQUENCIA_P as '||NR_SEQUENCIA_P, 
	'NR_SEQ_SCRIPT_P as '||NR_SEQ_SCRIPT_P, 
	'NR_SEQ_GRID_P as '||NR_SEQ_GRID_P);

   SELECT COUNT(schedule.NR_SEQUENCIA) QTD
      INTO STRICT QTD
  FROM SCHEM_TEST_SCHEDULE schedule 
  INNER JOIN SCHEM_TEST_SUITE suite ON (schedule.NR_SEQ_SUITE = suite.NR_SEQUENCIA)
  INNER JOIN SCHEM_TEST_LOG log1 ON (log1.NR_SEQ_SCHEDULE = schedule.NR_SEQUENCIA)
  WHERE schedule.NR_SEQUENCIA = NR_SEQUENCIA_P
  AND log1.IE_STATUS = '2'
  AND suite.DS_REPO = '1';
  
  IF (QTD <> 0) THEN
    SELECT schedule.NR_SEQUENCIA NR_SEQUENCIA, schedule.DS_VERSION DS_VERSION, suite.NM_SUITE NM_SUITE, suite.NR_SEQ_PRESET NR_SEQ_PRESET, suite.NR_SEQUENCIA NR_SEQ_SUITE, schedule.NR_SEQ_URL NR_SEQ_URL, schedule.NR_SEQ_SERVICE NR_SEQ_SERVICE, schedule.NR_SEQ_PACKAGE NR_SEQ_PACKAGE
        INTO STRICT NR_SEQUENCIA_W, DS_VERSION_W, NM_SUITE_W, NR_SEQ_PRESET_W, NR_SEQ_SUITE_W2, NR_SEQ_URL_W2, NR_SEQ_SERVICE_W2, NR_SEQ_PACKAGE_W
    FROM SCHEM_TEST_SCHEDULE schedule 
    INNER JOIN SCHEM_TEST_SUITE suite ON (schedule.NR_SEQ_SUITE = suite.NR_SEQUENCIA) 
    INNER JOIN SCHEM_TEST_PRESET preset ON (suite.NR_SEQ_PRESET = preset.NR_SEQUENCIA)
    INNER JOIN SCHEM_TEST_GRID grid ON (preset.NR_SEQ_GRID = grid.NR_SEQUENCIA)
    WHERE schedule.NR_SEQUENCIA = NR_SEQUENCIA_P
    AND suite.DS_REPO = '1';
  
  IF (NR_SEQUENCIA_W IS NOT NULL AND NR_SEQUENCIA_W::text <> '') THEN  
      UPDATE SCHEM_TEST_SCHEDULE SET IE_STATUS = '7' WHERE NR_SEQUENCIA = NR_SEQUENCIA_W;
      COMMIT;

      SELECT NM_SCRIPT 
        INTO STRICT NM_SCRIPT_W
      FROM SCHEM_TEST_SCRIPT 
      WHERE NR_SEQUENCIA = NR_SEQ_SCRIPT_P;

      NM_SUITE_W2 := 'Failure from '||NR_SEQUENCIA_W||' - '||NM_SUITE_W||' - Test fail - Script - '||NM_SCRIPT_W;

      INSERT INTO SCHEM_TEST_SUITE(nr_sequencia, nm_suite, ds_version, ie_runtype, nm_owner, dt_last, dt_atualizacao, nm_usuario, nm_usuario_nrec, dt_atualizacao_nrec, nr_seq_preset, ds_repo, ie_jobs, ie_test_local, ie_situacao) 
          VALUES (nextval('schem_test_suite_seq'), NM_SUITE_W2, '0', 1, NM_USUARIO_P, clock_timestamp(), clock_timestamp(), NM_USUARIO_P, NM_USUARIO_P, clock_timestamp(), NR_SEQ_PRESET_W, '0', '0', '0', 'I');
      COMMIT;
            
      IF (coalesce(NR_SEQ_EXECUTION_W::text, '') = '') THEN 
          NR_SEQ_EXECUTION_W := 0;
      END IF;

      SELECT MAX(suite.NR_SEQUENCIA) NR_SEQUENCIA
          INTO STRICT NR_SEQ_SUITE_W
      FROM SCHEM_TEST_SUITE suite 
      WHERE suite.NM_SUITE like NM_SUITE_W2;

      SELECT preset.NR_SEQ_URL NR_SEQ_URL, preset.NR_SEQ_BROWSER NR_SEQ_BROWSER, preset.NR_SEQ_SERVICE NR_SEQ_SERVICE, preset.NR_SEQ_ROBOT NR_SEQ_ROBOT, preset.NR_SEQ_GRID NR_SEQ_GRID, preset.IE_RUNTYPE IE_RUNTYPE
         INTO STRICT NR_SEQ_URL_W, NR_SEQ_BROWSER_W, NR_SEQ_SERVICE_W, NR_SEQ_ROBOT_W, NR_SEQ_GRID_W, IE_RUNTYPE_W
      FROM SCHEM_TEST_PRESET preset 
      WHERE preset.NR_SEQUENCIA = NR_SEQ_PRESET_W;
  
  
              SELECT COUNT(teste.NR_SEQ_ROBOT) QTD_W3
                  INTO STRICT QTD_W3
              FROM SCHEM_TEST_TEST teste
              WHERE teste.NR_SEQ_SUITE = NR_SEQ_SUITE_W2
              AND teste.NR_SEQ_SCRIPT =  NR_SEQ_SCRIPT_P
              AND teste.IE_SWITCH <> '0';

              IF (QTD_W3 <> 0) THEN
                SELECT teste.NR_SEQ_ROBOT NR_SEQ_ROBOT, teste.NR_SEQ_GRID NR_SEQ_GRID
                    INTO STRICT NR_SEQ_ROBOT_W2, NR_SEQ_GRID_W2
                FROM SCHEM_TEST_TEST teste
                WHERE teste.NR_SEQ_SUITE = NR_SEQ_SUITE_W2
                AND teste.NR_SEQ_SCRIPT =  NR_SEQ_SCRIPT_P
                AND teste.IE_SWITCH <> '0'  LIMIT 1;
					
                SELECT nextval('schem_test_test_seq')     
                  INTO STRICT NEWSEQUENCETEST
;
              
                INSERT INTO SCHEM_TEST_TEST(nr_sequencia, nr_seq_execution, nr_seq_script, nr_seq_suite, nr_seq_robot, nr_seq_grid, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ie_jobs, ie_switch) 
                    VALUES (NEWSEQUENCETEST, NR_SEQ_EXECUTION_W+5, NR_SEQ_SCRIPT_P, NR_SEQ_SUITE_W, NR_SEQ_ROBOT_W2, NR_SEQ_GRID_P, clock_timestamp(), NM_USUARIO_P, clock_timestamp(), NM_USUARIO_P, '0', '1');
                COMMIT;

                SELECT NR_SEQ_EXECUTION   
                  INTO STRICT NR_SEQ_EXECUTION_W
              FROM SCHEM_TEST_TEST
              WHERE NR_SEQUENCIA = NEWSEQUENCETEST;
            END IF;

      SELECT test.NR_SEQ_EXECUTION 
          INTO STRICT NR_SEQ_EXECUTION_W2
      FROM SCHEM_TEST_TEST test
      WHERE test.NR_SEQUENCIA = NEWSEQUENCETEST;

      IF (NR_SEQ_EXECUTION_W2 IS NOT NULL AND NR_SEQ_EXECUTION_W2::text <> '') THEN 
          SELECT nextval('schem_test_schedule_seq')
              INTO STRICT NEWSEQUENCESCHEDULE
;
              
          INSERT INTO SCHEM_TEST_SCHEDULE(nr_sequencia, ds_version, dt_schedule, ie_status, nm_owner, nr_seq_suite, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_url, nr_seq_service, nr_seq_browser, ie_jobs, nr_seq_package)
					     VALUES (NEWSEQUENCESCHEDULE, DS_VERSION_W, clock_timestamp(), '1', NM_USUARIO_P, NR_SEQ_SUITE_W, clock_timestamp(), NM_USUARIO_P, clock_timestamp(), NM_USUARIO_P, NR_SEQ_URL_W2, NR_SEQ_SERVICE_W2, NR_SEQ_BROWSER_W, '2', NR_SEQ_PACKAGE_W);
          COMMIT;

          SELECT COUNT(NR_SEQUENCIA)
              INTO STRICT QTD_W
          FROM SCHEM_TEST_SCHEDULE
          WHERE NR_SEQ_PACKAGE = NR_SEQ_PACKAGE_W
          AND IE_STATUS NOT IN ('2','3','4','5','6','7')
          AND IE_JOBS <> '1';

          IF (QTD_W = 1) THEN
            SELECT COUNT(NR_SEQUENCIA)
                INTO STRICT QTD_W2
            FROM SCHEM_TEST_PACKAGE_SCHED
            WHERE NR_SEQUENCIA = NR_SEQ_PACKAGE_W
            AND IE_STATUS <> '2';

            IF (QTD_W2 <> 0) THEN
              UPDATE SCHEM_TEST_PACKAGE_SCHED SET IE_STATUS = '1' WHERE NR_SEQUENCIA = NR_SEQ_PACKAGE_W;
              COMMIT;
            END IF;
          END IF;
      END IF;
    END IF;
  END IF;
  EXCEPTION
  WHEN no_data_found THEN
    RAISE NOTICE 'Erro: Data not found';
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE schematic4test_reexec_failtest (NR_SEQUENCIA_P bigint, NR_SEQ_SCRIPT_P bigint, NR_SEQ_GRID_P bigint, NM_USUARIO_P text) FROM PUBLIC;

