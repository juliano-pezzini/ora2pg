-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE deletar_propaci_propaci ( nr_seq_propaci_p bigint, nr_seq_propaci_old_p bigint) AS $body$
DECLARE

			
/* Esta Procedure Executa um "Cascade" completo pela Propaci_propaci_FK da procedimento_paciente. 
    Ao alterar, lembrar que ela e chamada recursivamente ate que nao existam  mais filhos, 
    logo todo select/function/procedure vai ser executado inumeras vezes, uma em cada instancia.*/
	
nr_seq_filho_w			bigint;
nr_seq_w			bigint;
nr_prescricao_w			bigint;
nr_sequencia_prescricao_w	bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	procedimento_paciente
	where	nr_seq_proc_princ = nr_seq_propaci_p
	and	nr_sequencia 	<> nr_seq_propaci_old_p;/*Tratamento para referencia circular*/
	
c02 CURSOR FOR
	SELECT	nr_sequencia
	from	procedimento_paciente
	where	nr_seq_proc_princ	= nr_seq_propaci_p;


BEGIN

open C01;
loop
fetch C01 into	
	nr_seq_filho_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	/* Nao executa se o filho do procedimento for ele mesmo, referencia em loop */

	if (nr_seq_filho_w <> nr_seq_propaci_p) then
		CALL Deletar_propaci_propaci(nr_seq_filho_w, nr_seq_propaci_p );
	end if;
	
end loop;
close C01;

 -- O if colocado para garantir que o update seja feito apenas uma vez, considerando que na desfazer_execucao_procedimento esta vindo como null o parametro.	
if (coalesce(nr_seq_propaci_old_p::text, '') = '') then
	select	max(nr_prescricao),
		max(nr_sequencia_prescricao)
	into STRICT	nr_prescricao_w,
		nr_sequencia_prescricao_w
	from	procedimento_paciente
	where	nr_sequencia = nr_seq_propaci_p;
end if;

delete	
from 	material_atend_paciente a
where	nr_seq_proc_princ	= nr_seq_propaci_p
and	exists (SELECT	1
	from	conta_paciente x
	where 	x.nr_interno_conta	= a.nr_interno_conta
	and	coalesce(x.ie_cancelamento::text, '') = '');
	
update	material_atend_paciente
set	nr_seq_proc_princ	 = NULL
where	nr_seq_proc_princ	= nr_seq_propaci_p;

open	c02;
loop
fetch	c02 into
	nr_seq_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	delete	from material_atend_paciente a
	where	nr_seq_proc_princ	= nr_seq_w
	and	exists (SELECT	1
		from	conta_paciente x
		where 	x.nr_interno_conta	= a.nr_interno_conta
		and	coalesce(x.ie_cancelamento::text, '') = '');
end loop;
close c02;

delete	
from 	procedimento_paciente a
where	nr_seq_proc_princ = nr_seq_propaci_p
and	exists (SELECT	1
	from	conta_paciente x
	where 	x.nr_interno_conta	= a.nr_interno_conta
	and	coalesce(x.ie_cancelamento::text, '') = '');

update 	procedimento_paciente
set 	nr_seq_proc_princ	 = NULL
where 	nr_seq_proc_princ	= nr_seq_propaci_p;
	
delete	
from	procedimento_paciente a
where	nr_sequencia	= nr_seq_propaci_p
and	exists (SELECT	1
	from	conta_paciente x
	where 	x.nr_interno_conta	= a.nr_interno_conta
	and	coalesce(x.ie_cancelamento::text, '') = '');
	
if (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then
	update	procedimento_paciente a
	set	nr_prescricao		 = NULL,
		dt_prescricao		 = NULL,
		nr_sequencia_prescricao  = NULL
	where 	nr_prescricao		= nr_prescricao_w
	and	nr_sequencia_prescricao	= nr_sequencia_prescricao_w;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE deletar_propaci_propaci ( nr_seq_propaci_p bigint, nr_seq_propaci_old_p bigint) FROM PUBLIC;

