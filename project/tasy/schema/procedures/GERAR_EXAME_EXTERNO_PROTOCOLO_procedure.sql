-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_exame_externo_protocolo (nr_seq_pedido_p bigint, nr_seq_protocolo_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_dados_clinicos_w		varchar(255);
ds_exame_ant_w			varchar(255);
qt_exame_w			integer;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_sequencia_w			bigint;
nr_seq_exame_w			bigint;
nr_seq_exame_lab_w		bigint;
nr_atendimento_w		bigint;
cd_convenio_w		bigint;
cd_categoria_w		varchar(10);
ie_tipo_atendimento_w	smallint;	
ds_erro_w		varchar(4000);	
cd_setor_atendimento_w	bigint;
ds_justificativa_w 	varchar(255);
cd_procedimento_ww	bigint;
ie_origem_proced_ww	bigint;
nr_seq_proc_interno_w	bigint;
nr_seq_proc_interno_aux_w bigint;
cd_plano_convenio_w	varchar(10);

C01 CURSOR FOR
	SELECT	c.nr_sequencia,
		coalesce(c.qt_exame,1) qt_exame,
		b.nr_seq_apresent,
		b.ie_lado,
		c.ds_justificativa,
		c.cd_procedimento,
		c.ie_origem_proced,
		c.nr_seq_exame,
		c.nr_proc_interno,
		c.cd_material_exame
	from	med_exame_padrao c,
		med_exame_protocolo b,
		med_protocolo_exame a
	where	a.nr_sequencia	= nr_seq_protocolo_p
	and	a.nr_sequencia	= b.nr_seq_protocolo
	and	b.nr_seq_exame	= c.nr_sequencia
	
union all

	SELECT	null nr_sequencia,
		1 qt_exame,
		b.nr_seq_apresent,
		b.ie_lado,
		null ds_justificativa,
		b.cd_procedimento,
		b.ie_origem_proced,
		b.nr_seq_exame_lab nr_seq_exame,
		b.nr_proc_interno,
		NULL cd_material_exame
	from	med_exame_protocolo b,
		med_protocolo_exame a
	where	a.nr_sequencia	= nr_seq_protocolo_p
	and	a.nr_sequencia	= b.nr_seq_protocolo
	and	coalesce(b.nr_seq_exame::text, '') = '';
	
c01_w	c01%rowtype;


BEGIN

select	max(ds_dados_clinicos),
	max(ds_exame_anterior),
	max(ds_justificativa)
into STRICT	ds_dados_clinicos_w,
	ds_exame_ant_w,
	ds_justificativa_w
from	med_protocolo_exame
where	nr_sequencia		= nr_seq_protocolo_p;

update	pedido_exame_externo
set	ds_dados_clinicos 	= substr(ds_dados_clinicos ||' '||ds_dados_clinicos_w,1,255),
	ds_exame_ant		= substr(ds_exame_ant ||' '||ds_exame_ant_w,1,255),
	ds_justificativa	= substr(ds_justificativa ||' '||ds_justificativa_w,1,255)
where	nr_sequencia		= nr_seq_pedido_p;

select	max(nr_atendimento)
into STRICT	nr_atendimento_w
from	pedido_exame_externo
where	nr_sequencia	= nr_seq_pedido_p;


/*
insert into pedido_exame_externo_item(
	nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	nr_seq_pedido,
	nr_seq_exame,
	qt_exame,
	nr_seq_apresent,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	ie_lado,
	ds_justificativa,
	cd_procedimento,
	ie_origem_proced,
	nr_seq_exame_lab,
	nr_proc_interno)
select	pedido_exame_externo_item_seq.nextval,
	sysdate,
	nm_usuario_p,
	nr_seq_pedido_p,
	c.nr_sequencia,
	nvl(c.qt_exame,1),
	b.nr_seq_apresent,
	sysdate,
	nm_usuario_p,
	c.ie_lado,
	c.ds_justificativa,
	c.cd_procedimento,
	c.ie_origem_proced,
	c.nr_seq_exame,
	c.nr_proc_interno
from	med_exame_padrao c,
	med_exame_protocolo b,
	med_protocolo_exame a
where	a.nr_sequencia	= nr_seq_protocolo_p
and	a.nr_sequencia	= b.nr_seq_protocolo
and	b.nr_seq_exame	= c.nr_sequencia;

*/
open C01;
loop
fetch C01 into	


	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	nr_seq_exame_w		:= c01_w.nr_seq_exame;
	cd_procedimento_w	:= c01_w.cd_procedimento;
	ie_origem_proced_w	:= c01_w.ie_origem_proced;
	nr_seq_proc_interno_w	:= c01_w.nr_proc_interno;
	nr_sequencia_w		:= c01_w.nr_sequencia;

	IF (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') THEN
		IF (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') THEN

			SELECT	MAX(cd_convenio),
				MAX(cd_categoria),
				MAX(ie_tipo_Atendimento),
				MAX(cd_plano_convenio)
			INTO STRICT	cd_convenio_w,
				cd_categoria_w,
				ie_tipo_atendimento_w,
				cd_plano_convenio_w
			FROM	atendimento_paciente_v
			WHERE	nr_atendimento	= nr_atendimento_w;

			SELECT * FROM Obter_Exame_Lab_Convenio(	nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, wheb_usuario_pck.get_cd_estabelecimento, NULL, NULL, NULL, cd_plano_convenio_w, cd_setor_atendimento_w, cd_procedimento_ww, ie_origem_proced_ww, ds_erro_w, nr_seq_proc_interno_aux_w) INTO STRICT cd_setor_atendimento_w, cd_procedimento_ww, ie_origem_proced_ww, ds_erro_w, nr_seq_proc_interno_aux_w;

			if (nr_seq_proc_interno_aux_w > 0) then
				nr_seq_proc_interno_w 	:= nr_seq_proc_interno_aux_w;
			end if;
			if (coalesce(cd_procedimento_ww,0)	<> 0) then
				cd_procedimento_w	:= cd_procedimento_ww;
				ie_origem_proced_w	:= ie_origem_proced_ww;
			end if;	
		elsif (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
			SELECT * FROM Obter_Proc_Tab_Interno(nr_seq_proc_interno_w, null, nr_atendimento_w, null, cd_procedimento_w, ie_origem_proced_w, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;	
		end if;
	end if;
	
	insert into pedido_exame_externo_item(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_pedido,
						nr_seq_exame,
						qt_exame,
						nr_seq_apresent,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ie_lado,
						ds_justificativa,
						cd_procedimento,
						ie_origem_proced,
						nr_seq_exame_lab,
						nr_proc_interno,
						NR_SEQ_PROTOCOLO,
						cd_material_exame)
values (	nextval('pedido_exame_externo_item_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_pedido_p,
						c01_w.nr_sequencia,
						coalesce(c01_w.qt_exame,1),
						c01_w.nr_seq_apresent,
						clock_timestamp(),
						nm_usuario_p,
						c01_w.ie_lado,
						c01_w.ds_justificativa,
						cd_procedimento_w,
						ie_origem_proced_w,
						nr_seq_exame_w,
						c01_w.nr_proc_interno,
						nr_seq_protocolo_p,
						c01_w.cd_material_exame);
	end;
end loop;
close C01;
	
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_exame_externo_protocolo (nr_seq_pedido_p bigint, nr_seq_protocolo_p bigint, nm_usuario_p text) FROM PUBLIC;

