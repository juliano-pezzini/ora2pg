-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_gerar_medic_uso_padrao ( nr_prescricao_p bigint, ds_lista_medic_p text, ie_origem_inf_p bigint, ie_sem_aprazamento_p text, nm_usuario_p text, nr_sequencia_solucao_p bigint) AS $body$
DECLARE

					 
				 
lista_informacao_w		varchar(1000);
ie_contador_w			bigint	:= 0;
tam_lista_w			bigint;
ie_pos_virgula_w		smallint;
nr_seq_medic_hd_w		bigint;

cd_material_w			integer;
ie_via_aplicacao_w		varchar(5);
ie_tipo_medic_hd_w		varchar(1);
cd_unidade_medida_w		varchar(30);
qt_dose_w			double precision;
cd_intervalo_w			varchar(7);
ie_aplic_bolus_w		varchar(1);
ie_aplic_lenta_w		varchar(1);
ie_bomba_infusao_w		varchar(1);

nr_seq_material_w		bigint;
hr_prim_horario_w		varchar(5);
cd_unidade_consumo_w		varchar(30);
cd_estabelecimento_w		smallint;
dt_prescricao_w			timestamp;
dt_primeiro_horario_w		timestamp;
nr_horas_validade_w		integer;
cd_setor_atendimento_w		integer;
ds_horarios_w			varchar(2000);
ds_horarios_ww			varchar(2000);
nr_agrupamento_w		double precision;
nr_intervalo_w			bigint;
qt_conversao_dose_w		double precision;
qt_unitaria_w			double precision;
qt_produto_w			double precision;
qt_total_dispensar_w		double precision;
ds_erro_w			varchar(255);
ie_regra_disp_w			varchar(1);/* Rafael em 15/3/8 OS86206 */
qt_solucao_w			double precision;


BEGIN 
 
lista_informacao_w	:= ds_lista_medic_p;
 
while	(lista_informacao_w IS NOT NULL AND lista_informacao_w::text <> '') or 
	ie_contador_w > 200 loop 
	begin 
	 
	tam_lista_w			:= length(lista_informacao_w);
	ie_pos_virgula_w		:= position(',' in lista_informacao_w);
 
	/* Obter a sequÃªncia lida */
 
	if (ie_pos_virgula_w <> 0) then 
		nr_seq_medic_hd_w	:= substr(lista_informacao_w,1,(ie_pos_virgula_w - 1));
		lista_informacao_w	:= substr(lista_informacao_w,(ie_pos_virgula_w + 1),tam_lista_w);
	end if;
	 
	/* Obter dados prescricao */
 
	select	cd_estabelecimento, 
		dt_prescricao, 
		coalesce(dt_primeiro_horario,dt_inicio_prescr), 
		nr_horas_validade, 
		cd_setor_atendimento 
	into STRICT	cd_estabelecimento_w, 
		dt_prescricao_w, 
		dt_primeiro_horario_w, 
		nr_horas_validade_w, 
		cd_setor_atendimento_w 
	from	prescr_medica 
	where	nr_prescricao 		= nr_prescricao_p;	
 
	/* Obter os dados do material selecionado */
 
	select 	cd_material, 
		ie_via_aplicacao, 
		cd_unidade_medida, 
		qt_dose, 
		cd_intervalo 
	into STRICT	cd_material_w, 
		ie_via_aplicacao_w, 
		cd_unidade_medida_w, 
		qt_dose_w, 
		cd_intervalo_w 
	from	medic_uso_continuo_padrao 
	where	nr_Sequencia = nr_seq_medic_hd_w;
	 
	/* Gerar dados produto */
 
	select	coalesce(max(nr_sequencia),0)+1, 
		coalesce(max(nr_agrupamento),0)					 
	into STRICT	nr_seq_material_w, 
		nr_agrupamento_w 
	from	prescr_material 
	where	nr_prescricao = nr_prescricao_p;
	 
	/* Obter primeiro horario */
 
	select	obter_primeiro_horario(cd_intervalo_w, nr_prescricao_p, cd_material_w,ie_via_aplicacao_w) 
	into STRICT	hr_prim_horario_w 
	;
 
	/* Obter unidade consumo material */
 
	select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo 
	into STRICT	cd_unidade_consumo_w 
	from	material 
	where	cd_material 		= cd_material_w;
 
	/* Calcular horarios */
 
	SELECT * FROM calcular_horario_prescricao(nr_prescricao_p, cd_intervalo_w, dt_primeiro_horario_w, to_date(to_char(dt_primeiro_horario_w,'dd/mm/yyyy') || ' ' || hr_prim_horario_w,'dd/mm/yyyy hh24:mi'), nr_horas_validade_w, cd_material_w, 0, 0, nr_intervalo_w, ds_horarios_w, ds_horarios_ww, 'N', null) INTO STRICT nr_intervalo_w, ds_horarios_w, ds_horarios_ww;
	 
	ds_horarios_w			:= ds_horarios_w || ds_horarios_ww;
 
	/* Obter conversao dose */
 
	select	obter_conversao_unid_med(cd_material_w, cd_unidade_medida_w) 
	into STRICT	qt_conversao_dose_w 
	;
 
	/* Obter quantidade consumo */
 
	select	obter_conversao_unid_med_cons(cd_material_w, cd_unidade_medida_w, qt_dose_w) 
	into STRICT	qt_unitaria_w 
	;
 
	/* Obter quantidade dispensar */
 
	SELECT * FROM obter_quant_dispensar(cd_estabelecimento_w, cd_material_w, nr_prescricao_p, 0, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, 0, nr_intervalo_w, null, null, cd_unidade_medida_w, null, qt_produto_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w, 'N', 'N') INTO STRICT qt_produto_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w;
 
 
	/* atualizar agrupamento */
 
	nr_agrupamento_w		:= nr_agrupamento_w + 1;
	 
	/* calcular dose ml*/
 
	qt_solucao_w	:= coalesce(obter_conversao_ml(cd_material_w,qt_dose_w,cd_unidade_medida_w), 0);
	 
	/* Insere o medicamento */
             
	insert into prescr_material( 
		nr_prescricao, 
		nr_sequencia, 
		ie_origem_inf, 
		cd_material, 
		cd_unidade_medida, 
		qt_dose, 
		qt_unitaria, 
		qt_material, 
		qt_total_dispensar, 
		dt_atualizacao, 
		nm_usuario,       
		ie_via_aplicacao,    
		nr_agrupamento,     
		cd_unidade_medida_dose, 
		hr_prim_horario, 
		ie_sem_aprazamento, 
		cd_motivo_baixa, 
		ie_utiliza_kit, 
		ie_urgencia, 
		ie_medicacao_paciente, 
		ie_suspenso, 
		ie_se_necessario, 
		ie_acm, 
		ie_status_cirurgia, 
		ie_cultura_cih, 
		ie_antibiograma, 
		ie_uso_antimicrobiano, 
		ie_recons_diluente_fixo, 
		ie_cobra_paciente, 
		ie_dose_espec_agora, 
		ie_agrupador, 
		qt_conversao_dose, 
		qt_baixa_especial, 
		ie_erro, 
		nr_ocorrencia, 
		cd_intervalo, 
		ds_horarios, 
		ie_regra_disp, 
		nr_sequencia_solucao, 
		qt_solucao 
	) values ( 
		nr_prescricao_p, 
		nr_seq_material_w, 
		ie_origem_inf_p, 
		cd_material_w, 
		cd_unidade_consumo_w, 
		qt_dose_w, 
		qt_unitaria_w, 
		qt_produto_w, 
		qt_total_dispensar_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		ie_via_aplicacao_w, 
		nr_agrupamento_w, 
		cd_unidade_medida_w, 
		hr_prim_horario_w, 
		ie_sem_aprazamento_p, 
		0, 
		'N', 
		'N', 
		'N', 
		'N', 
		'N', 
		'N', 
		'GI', 
		'N', 
		'N', 
		'N', 
		'N', 
		'S', 
		'N', 
		13, 
		qt_conversao_dose_w, 
		0, 
		0, 
		nr_intervalo_w, 
		cd_intervalo_w, 
		ds_horarios_w, 
		ie_regra_disp_w, 
		nr_sequencia_solucao_p, 
		qt_solucao_w 
	);
 
	ie_contador_w	:= ie_contador_w + 1;
	 
	end;
end loop;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_gerar_medic_uso_padrao ( nr_prescricao_p bigint, ds_lista_medic_p text, ie_origem_inf_p bigint, ie_sem_aprazamento_p text, nm_usuario_p text, nr_sequencia_solucao_p bigint) FROM PUBLIC;

