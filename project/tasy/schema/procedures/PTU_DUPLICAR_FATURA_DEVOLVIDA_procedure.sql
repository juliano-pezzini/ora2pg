-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_duplicar_fatura_devolvida (nr_seq_fatura_p bigint, vl_informado_p bigint, nm_usuario_p text, nr_seq_fatura_duplicada_p INOUT bigint) AS $body$
DECLARE

 
nr_seq_fatura_duplicada_w 	bigint;

/*Cursor C01 - ptu_fatura_boleto*/
 
nr_fatura_boleto_w		bigint;
dt_documento_w			timestamp;
dt_processamento_w		timestamp;
ie_aceite_w			varchar(2);
ds_especie_w			varchar(4);
cd_especie_doc_w		varchar(5);
cd_banc_w 			varchar(5);
cd_nosso_numero_w 		varchar(20);
cd_agencia_cedente_w		varchar(25);
cd_barras_w			varchar(44);
ds_local_pagamento_w		varchar(60);
ds_obs_local_pagto_w		varchar(60);
ds_instrucao_w			varchar(60);
ds_linha_digitavel_w		varchar(60);
ds_observacao_w			varchar(60);
ds_obs_banco_w			varchar(15);
ds_carteira_w			varchar(10);
nr_seq_nota_boleto_w		bigint;
vl_documento_w			double precision;

/*Cursor C02 - ptu_nota_cobranca*/
 
dt_atendimento_w		timestamp;
ie_pcmso_w			varchar(1);
cd_excecao_w			varchar(1);
ie_paciente_w			varchar(1);
ie_tipo_saida_spdat_w		varchar(1);
ie_envia_conta_w		varchar(1);
ie_doc_fisico_conf_w		varchar(1);
ie_tipo_atendimento_w		varchar(2);
cd_cid_w			varchar(6);
cd_unimed_w			varchar(10);
cd_usuario_plano_w		varchar(13);
nm_beneficiario_w		varchar(25);
ie_carater_atendimento_w	smallint;
nr_lote_w			integer;
nr_seq_nota_cobr_w		bigint;
nr_seq_cobr_duplicada_w		bigint;	
nr_guia_principal_w		ptu_nota_cobranca.nr_guia_principal%type;
nr_nota_w			ptu_nota_cobranca.nr_nota%type;
pr_taxa_w			double precision;

/*Cursor C03 - ptu_nota_hospitalar*/
 
dt_internacao_w			timestamp;
dt_alta_w			timestamp;
ie_int_gestacao_w		varchar(1);
ie_int_aborto_w			varchar(1);
ie_int_transtorno_w		varchar(1);
ie_tipo_acomodacao_w		varchar(1);
ie_ind_acidente_w		varchar(1);
ie_int_puerperio_w		varchar(1);
ie_int_recem_nascido_w		varchar(1);
ie_int_neonatal_w		varchar(1);
ie_int_baixo_peso_w		varchar(1);
ie_int_parto_cesarea_w		varchar(1);
ie_int_parto_normal_w		varchar(1);
cd_motivo_saida_w		varchar(2);
cd_cid_obito_w			varchar(6);
cd_cgc_hospital_w		varchar(14);
nr_declara_obito_w		varchar(17);
nm_hospital_w			varchar(25);
qt_obito_tardio_w		smallint;
ie_tipo_internacao_w		smallint;
qt_obito_precoce_w		smallint;
ie_faturamento_w		smallint;
ie_obito_mulher_w		smallint;
qt_nasc_vivos_w			smallint;
qt_nasc_mortos_w		smallint;
qt_nasc_vivos_pre_w		smallint;
cd_unimed_hospital_w		smallint;
tx_mult_amb_w			double precision;
cd_hospital_w			integer;
nr_seq_nota_hosp_w		bigint;
nr_seq_hosp_duplicada_w		bigint;

/*Cursor C04 - ptu_nota_hosp_compl*/
 
nr_declara_vivo_w		bigint;	
 
/*Cursor C05 - ptu_nota_servico*/
 
dt_procedimento_w		timestamp;
ie_tipo_participacao_w		varchar(1);
ie_rede_propria_w		varchar(1);
ie_tipo_pessoa_prestador_w	varchar(1);
ie_pacote_w			varchar(1);
cd_ato_w			varchar(1);
ie_reembolso_w			varchar(1);
sg_uf_cons_req_w		varchar(2);
ie_tipo_prestador_w		varchar(2);
sg_uf_cons_prest_w		varchar(2);
cd_cnes_prest_w			varchar(7);
ds_hora_procedimento_w		varchar(8);
cd_unimed_pre_req_w		varchar(10);	
cd_unimed_prestador_w		varchar(10);
cd_unimed_autorizadora_w	varchar(10);
sg_cons_prof_prest_w		varchar(12);
sg_cons_prof_req_w		varchar(12);
nr_cgc_cpf_w			varchar(14);
nr_cgc_cpf_req_w		varchar(14);
nr_cons_prof_req_w		varchar(15);
nr_cons_prof_prest_w		varchar(15);
nm_prestador_w			varchar(40);
nm_prestador_requisitante_w	varchar(40);
nm_profissional_prestador_w	varchar(40);
ie_tipo_tabela_w		smallint;
ie_via_acesso_w			smallint;
cd_especialidade_w		smallint;
cd_prestador_req_w		integer;
qt_procedimento_w		integer;
tx_procedimento_w		double precision;
nr_seq_nota_serv_w		bigint;
nr_autorizacao_w		bigint;
ie_origem_proced_w		bigint;
cd_prestador_w			bigint;
nr_seq_nota_w			bigint;
cd_procedimento_w		bigint;
vl_procedimento_w		double precision;
vl_custo_operacional_w		double precision;
vl_filme_w			double precision;
cd_porte_anestesico_w		double precision;
vl_adic_procedimento_w		double precision;
vl_adic_co_w			double precision;
vl_adic_filme_w			double precision;
vl_pago_prest_w			double precision;

/*Cursor C06 - ptu_nota_complemento*/
 
ds_complemento_w		varchar(100);
ie_tipo_complemento_w		smallint;

/*Cursor C07 - ptu_nota_fiscal*/
 
ds_link_nfe_w			varchar(120);
nr_seq_nota_fiscal_w		bigint;
nr_nota_fiscal_w		bigint;

/*Cursor C08 - ptu_fatura_cedente*/
 
ie_tipo_w			varchar(1);
sg_uf_w				varchar(2);
cd_cep_w			varchar(8);
cd_ans_w			varchar(10);
cd_cgc_cpf_w			varchar(14);
nr_inscricao_estadual_w		varchar(20);
ds_bairro_w			varchar(30);
nm_cidade_w			varchar(30);
ds_endereco_w			varchar(40);
nm_cedente_sacado_w		varchar(60);
nr_ddd_w			smallint;
nr_telefone_w			integer;
nr_fax_w			integer;
nr_seq_cedente_w		bigint;

/*Cursor C09 - ptu_fatura_corpo*/
 
ds_linha_w			varchar(74);
nr_linha_w			smallint;
nr_seq_corpo_w			bigint;
vl_item_w			double precision;

 
C01 CURSOR FOR 
	SELECT	cd_banc, 
		cd_agencia_cedente, 
		cd_nosso_numero, 
		vl_documento, 
		ds_local_pagamento, 
		ds_obs_local_pagto, 
		ds_instrucao, 
		ds_linha_digitavel, 
		cd_barras, 
		ds_obs_banco, 
		ds_carteira, 
		ds_especie, 
		dt_documento, 
		cd_especie_doc, 
		ie_aceite, 
		dt_processamento, 
		ds_observacao	 
	from	ptu_fatura_boleto 
	where	nr_seq_fatura = nr_seq_fatura_p;
	
C02 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_lote, 
		nr_nota, 
		cd_unimed, 
		cd_usuario_plano, 
		nm_beneficiario, 
		dt_atendimento, 
		cd_excecao, 
		ie_carater_atendimento, 
		cd_cid, 
		ie_paciente, 
		ie_tipo_saida_spdat, 
		ie_tipo_atendimento, 
		nr_guia_principal, 
		ie_pcmso, 
		pr_taxa, 
		ie_envia_conta, 
		ie_doc_fisico_conf 
	from	ptu_nota_cobranca 
	where	nr_seq_fatura = nr_seq_fatura_p;

C03 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_lote, 
		nr_nota, 
		cd_unimed_hospital, 
		cd_hospital, 
		qt_obito_tardio, 
		ie_int_gestacao, 
		ie_int_aborto, 
		ie_int_transtorno, 
		nm_hospital, 
		ie_tipo_acomodacao, 
		dt_internacao, 
		dt_alta,tx_mult_amb, 
		ie_ind_acidente, 
		cd_motivo_saida, 
		cd_cgc_hospital, 
		ie_tipo_internacao, 
		qt_nasc_vivos, 
		qt_nasc_mortos, 
		qt_nasc_vivos_pre, 
		qt_obito_precoce, 
		ie_int_puerperio, 
		ie_int_recem_nascido, 
		ie_int_neonatal, 
		ie_int_baixo_peso, 
		ie_int_parto_cesarea, 
		ie_int_parto_normal, 
		ie_faturamento, 
		cd_cid_obito, 
		ie_obito_mulher, 
		nr_declara_obito 
	from	ptu_nota_hospitalar 
	where	nr_seq_nota_cobr = nr_seq_nota_cobr_w;	
		 
C04 CURSOR FOR 
	SELECT	nr_declara_vivo, 
		cd_cid_obito, 
		nr_declara_obito 
	from	ptu_nota_hosp_compl 
	where	nr_seq_nota_hosp = nr_seq_nota_hosp_w;
	
C05 CURSOR FOR 
	SELECT	nr_lote, 
		cd_unimed_prestador, 
		cd_prestador, 
		nm_prestador, 
		ie_tipo_participacao, 
		dt_procedimento, 
		cd_procedimento, 
		ie_origem_proced, 
		qt_procedimento, 
		ie_tipo_prestador, 
		ie_rede_propria, 
		ie_tipo_pessoa_prestador, 
		nr_cgc_cpf, 
		tx_procedimento, 
		ie_pacote, 
		cd_ato, 
		ie_tipo_tabela, 
		nr_cgc_cpf_req, 
		nm_prestador_requisitante, 
		sg_cons_prof_req, 
		nr_cons_prof_req, 
		sg_uf_cons_req, 
		ie_reembolso, 
		nr_autorizacao, 
		nr_nota, 
		vl_procedimento, 
		vl_custo_operacional, 
		vl_filme, 
		cd_porte_anestesico, 
		cd_unimed_autorizadora, 
		cd_unimed_pre_req, 
		cd_prestador_req, 
		ie_via_acesso, 
		vl_adic_procedimento, 
		vl_adic_co, 
		vl_adic_filme, 
		cd_especialidade, 
		nr_seq_nota, 
		ds_hora_procedimento, 
		cd_cnes_prest, 
		nm_profissional_prestador, 
		sg_cons_prof_prest, 
		nr_cons_prof_prest, 
		sg_uf_cons_prest, 
		vl_pago_prest 
	from	ptu_nota_servico 
	where	nr_seq_nota_cobr = nr_seq_nota_cobr_w;	
	 
C06 CURSOR FOR 
	SELECT	nr_lote, 
		nr_nota, 
		ie_tipo_complemento, 
		ds_complemento 
	from	ptu_nota_complemento 
	where	nr_seq_nota_cobr = nr_seq_nota_cobr_w;
	
C07 CURSOR FOR 
	SELECT	ds_link_nfe, 
		nr_nota_fiscal 
	from	ptu_nota_fiscal 
	where	nr_seq_nota_cobr = nr_seq_nota_cobr_w;	
	 
C08 CURSOR FOR 
	SELECT	ie_tipo, 
		nm_cedente_sacado, 
		ds_endereco, 
		cd_cep, 
		nm_cidade, 
		sg_uf, 
		cd_cgc_cpf, 
		cd_ans, 
		ds_complemento, 
		ds_bairro, 
		nr_inscricao_estadual, 
		nr_ddd, 
		nr_telefone, 
		nr_fax 
	from	ptu_fatura_cedente 
	where	nr_seq_fatura = nr_seq_fatura_p;
	
C09 CURSOR FOR 
	SELECT	nr_linha, 
		ds_linha, 
		vl_item 
	from	ptu_fatura_corpo 
	where	nr_seq_fatura = nr_seq_fatura_p;	
					 

BEGIN 
if (nr_seq_fatura_p IS NOT NULL AND nr_seq_fatura_p::text <> '') then 
	select	nextval('ptu_fatura_seq') 
	into STRICT	nr_seq_fatura_duplicada_w 
	;	
	 
	insert into ptu_fatura(nr_sequencia, 
		cd_estabelecimento, 
		cd_unimed_destino, 
		cd_unimed_origem, 
		dt_geracao, 
		nr_competencia, 
		nr_fatura, 
		dt_vencimento_fatura, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		dt_emissao_fatura, 
		vl_total_fatura, 
		nr_versao_transacao, 
		vl_ir, 
		ie_tipo_fatura, 
		ie_operacao, 
		dt_recebimento_fatura, 
		ie_fatura_fisica, 
		nr_linha, 
		ie_status) 
	SELECT nr_seq_fatura_duplicada_w, 
		cd_estabelecimento, 
		cd_unimed_destino, 
		cd_unimed_origem, 
		dt_geracao, 
		nr_competencia, 
		nr_fatura, 
		dt_vencimento_fatura, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		dt_emissao_fatura, 
		vl_total_fatura, 
		nr_versao_transacao, 
		vl_ir, 
		ie_tipo_fatura, 
		ie_operacao, 
		clock_timestamp(), 
		ie_fatura_fisica, 
		nr_linha, 
		'FD' 
	from	ptu_fatura 
	where	nr_sequencia = nr_seq_fatura_p;
	 
	open C01;
	loop 
	fetch C01 into	 
		cd_banc_w, 
		cd_agencia_cedente_w, 
		cd_nosso_numero_w, 
		vl_documento_w, 
		ds_local_pagamento_w, 
		ds_obs_local_pagto_w, 
		ds_instrucao_w, 
		ds_linha_digitavel_w, 
		cd_barras_w, 
		ds_obs_banco_w, 
		ds_carteira_w, 
		ds_especie_w, 
		dt_documento_w, 
		cd_especie_doc_w, 
		ie_aceite_w, 
		dt_processamento_w, 
		ds_observacao_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		select	nextval('ptu_fatura_boleto_seq') 
		into STRICT	nr_fatura_boleto_w 
		;
		 
		insert into ptu_fatura_boleto(nr_sequencia, 
			nr_seq_fatura, 
			cd_banc, 
			cd_agencia_cedente, 
			cd_nosso_numero, 
			vl_documento, 
			ds_local_pagamento, 
			ds_obs_local_pagto, 
			ds_instrucao, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			ds_linha_digitavel, 
			cd_barras, 
			ds_obs_banco, 
			ds_carteira, 
			ds_especie, 
			dt_documento, 
			cd_especie_doc, 
			ie_aceite, 
			dt_processamento, 
			ds_observacao) 
		values (nr_fatura_boleto_w, 
			nr_seq_fatura_duplicada_w, 
			cd_banc_w, 
			cd_agencia_cedente_w, 
			cd_nosso_numero_w, 
			vl_documento_w, 
			ds_local_pagamento_w, 
			ds_obs_local_pagto_w, 
			ds_instrucao_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			ds_linha_digitavel_w, 
			cd_barras_w, 
			ds_obs_banco_w, 
			ds_carteira_w, 
			ds_especie_w, 
			dt_documento_w, 
			cd_especie_doc_w, 
			ie_aceite_w, 
			dt_processamento_w, 
			ds_observacao_w);
		end;
	end loop;
	close C01;	
	 
	open C02;
	loop 
	fetch C02 into	 
		nr_seq_nota_cobr_w, 
		nr_lote_w, 
		nr_nota_w, 
		cd_unimed_w, 
		cd_usuario_plano_w, 
		nm_beneficiario_w, 
		dt_atendimento_w, 
		cd_excecao_w, 
		ie_carater_atendimento_w, 
		cd_cid_w, 
		ie_paciente_w, 
		ie_tipo_saida_spdat_w, 
		ie_tipo_atendimento_w, 
		nr_guia_principal_w, 
		ie_pcmso_w, 
		pr_taxa_w, 
		ie_envia_conta_w, 
		ie_doc_fisico_conf_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		select	nextval('ptu_nota_cobranca_seq') 
		into STRICT	nr_seq_cobr_duplicada_w 
		;
		 
		insert into ptu_nota_cobranca(nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			nr_seq_fatura, 
			nr_lote, 
			nr_nota, 
			cd_unimed, 
			cd_usuario_plano, 
			nm_beneficiario, 
			dt_atendimento, 
			cd_excecao, 
			ie_carater_atendimento, 
			cd_cid, 
			ie_paciente, 
			ie_tipo_saida_spdat, 
			ie_tipo_atendimento, 
			nr_guia_principal, 
			ie_pcmso, 
			pr_taxa, 
			ie_envia_conta, 
			ie_doc_fisico_conf) 
		values (nr_seq_cobr_duplicada_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_fatura_duplicada_w, 
			nr_lote_w, 
			nr_nota_w, 
			cd_unimed_w, 
			cd_usuario_plano_w, 
			nm_beneficiario_w, 
			dt_atendimento_w, 
			cd_excecao_w, 
			ie_carater_atendimento_w, 
			cd_cid_w, 
			ie_paciente_w, 
			ie_tipo_saida_spdat_w, 
			ie_tipo_atendimento_w, 
			nr_guia_principal_w, 
			ie_pcmso_w, 
			pr_taxa_w, 
			ie_envia_conta_w, 
			ie_doc_fisico_conf_w);
		 
		open C03;
		loop 
		fetch C03 into	 
			nr_seq_nota_hosp_w, 
			nr_lote_w, 
			nr_nota_w, 
			cd_unimed_hospital_w, 
			cd_hospital_w, 
			qt_obito_tardio_w, 
			ie_int_gestacao_w, 
			ie_int_aborto_w, 
			ie_int_transtorno_w, 
			nm_hospital_w, 
			ie_tipo_acomodacao_w, 
			dt_internacao_w, 
			dt_alta_w, 
			tx_mult_amb_w, 
			ie_ind_acidente_w, 
			cd_motivo_saida_w, 
			cd_cgc_hospital_w, 
			ie_tipo_internacao_w, 
			qt_nasc_vivos_w, 
			qt_nasc_mortos_w, 
			qt_nasc_vivos_pre_w, 
			qt_obito_precoce_w, 
			ie_int_puerperio_w, 
			ie_int_recem_nascido_w, 
			ie_int_neonatal_w, 
			ie_int_baixo_peso_w, 
			ie_int_parto_cesarea_w, 
			ie_int_parto_normal_w, 
			ie_faturamento_w, 
			cd_cid_obito_w, 
			ie_obito_mulher_w, 
			nr_declara_obito_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin 
			select	nextval('ptu_nota_hospitalar_seq') 
			into STRICT	nr_seq_hosp_duplicada_w 
			;
			 
			insert into ptu_nota_hospitalar(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				nr_seq_nota_cobr, 
				nr_lote, 
				nr_nota, 
				cd_unimed_hospital, 
				cd_hospital, 
				qt_obito_tardio, 
				ie_int_gestacao, 
				ie_int_aborto, 
				ie_int_transtorno, 
				nm_hospital, 
				ie_tipo_acomodacao, 
				dt_internacao, 
				dt_alta, 
				tx_mult_amb, 
				ie_ind_acidente, 
				cd_motivo_saida, 
				cd_cgc_hospital, 
				ie_tipo_internacao, 
				qt_nasc_vivos, 
				qt_nasc_mortos, 
				qt_nasc_vivos_pre, 
				qt_obito_precoce, 
				ie_int_puerperio, 
				ie_int_recem_nascido, 
				ie_int_neonatal, 
				ie_int_baixo_peso, 
				ie_int_parto_cesarea, 
				ie_int_parto_normal, 
				ie_faturamento, 
				cd_cid_obito, 
				ie_obito_mulher, 
				nr_declara_obito) 
			values (nr_seq_hosp_duplicada_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_cobr_duplicada_w, 
				nr_lote_w, 
				nr_nota_w, 
				cd_unimed_hospital_w, 
				cd_hospital_w, 
				qt_obito_tardio_w, 
				ie_int_gestacao_w, 
				ie_int_aborto_w, 
				ie_int_transtorno_w, 
				nm_hospital_w, 
				ie_tipo_acomodacao_w, 
				dt_internacao_w, 
				dt_alta_w, 
				tx_mult_amb_w, 
				ie_ind_acidente_w, 
				cd_motivo_saida_w, 
				cd_cgc_hospital_w, 
				ie_tipo_internacao_w, 
				qt_nasc_vivos_w, 
				qt_nasc_mortos_w, 
				qt_nasc_vivos_pre_w, 
				qt_obito_precoce_w, 
				ie_int_puerperio_w, 
				ie_int_recem_nascido_w, 
				ie_int_neonatal_w, 
				ie_int_baixo_peso_w, 
				ie_int_parto_cesarea_w, 
				ie_int_parto_normal_w, 
				ie_faturamento_w, 
				cd_cid_obito_w, 
				ie_obito_mulher_w, 
				nr_declara_obito_w);
			 
			open C04;
			loop 
			fetch C04 into	 
				nr_declara_vivo_w, 
				cd_cid_obito_w, 
				nr_declara_obito_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin 
				insert into ptu_nota_hosp_compl(nr_sequencia, 
					nr_seq_nota_hosp, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					nr_declara_vivo, 
					cd_cid_obito, 
					nr_declara_obito) 
				values (nextval('ptu_nota_hosp_compl_seq'), 
					nr_seq_hosp_duplicada_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					nr_declara_vivo_w, 
					cd_cid_obito_w, 
					nr_declara_obito_w);
				end;
			end loop;
			close C04;
			end;
		end loop;
		close C03;
		 
		open C05;
		loop 
		fetch C05 into	 
			nr_lote_w, 
			cd_unimed_prestador_w, 
			cd_prestador_w, 
			nm_prestador_w, 
			ie_tipo_participacao_w, 
			dt_procedimento_w, 
			cd_procedimento_w, 
			ie_origem_proced_w, 
			qt_procedimento_w, 
			ie_tipo_prestador_w, 
			ie_rede_propria_w, 
			ie_tipo_pessoa_prestador_w, 
			nr_cgc_cpf_w, 
			tx_procedimento_w, 
			ie_pacote_w, 
			cd_ato_w, 
			ie_tipo_tabela_w, 
			nr_cgc_cpf_req_w, 
			nm_prestador_requisitante_w, 
			sg_cons_prof_req_w, 
			nr_cons_prof_req_w, 
			sg_uf_cons_req_w, 
			ie_reembolso_w, 
			nr_autorizacao_w, 
			nr_nota_w, 
			vl_procedimento_w, 
			vl_custo_operacional_w, 
			vl_filme_w, 
			cd_porte_anestesico_w, 
			cd_unimed_autorizadora_w, 
			cd_unimed_pre_req_w, 
			cd_prestador_req_w, 
			ie_via_acesso_w, 
			vl_adic_procedimento_w, 
			vl_adic_co_w, 
			vl_adic_filme_w, 
			cd_especialidade_w, 
			nr_seq_nota_w, 
			ds_hora_procedimento_w, 
			cd_cnes_prest_w, 
			nm_profissional_prestador_w, 
			sg_cons_prof_prest_w, 
			nr_cons_prof_prest_w, 
			sg_uf_cons_prest_w, 
			vl_pago_prest_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin 
			select	nextval('ptu_nota_servico_seq') 
			into STRICT	nr_seq_nota_serv_w 
			;
			 
			insert into ptu_nota_servico(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				nr_seq_nota_cobr, 
				nr_lote, 
				cd_unimed_prestador, 
				cd_prestador, 
				nm_prestador, 
				ie_tipo_participacao, 
				dt_procedimento, 
				cd_procedimento, 
				ie_origem_proced, 
				qt_procedimento, 
				ie_tipo_prestador, 
				ie_rede_propria, 
				ie_tipo_pessoa_prestador, 
				nr_cgc_cpf, 
				tx_procedimento, 
				ie_pacote, 
				cd_ato, 
				ie_tipo_tabela, 
				nr_cgc_cpf_req, 
				nm_prestador_requisitante, 
				sg_cons_prof_req, 
				nr_cons_prof_req, 
				sg_uf_cons_req, 
				ie_reembolso, 
				nr_autorizacao, 
				nr_nota, 
				vl_procedimento, 
				vl_custo_operacional, 
				vl_filme, 
				cd_porte_anestesico, 
				cd_unimed_autorizadora, 
				cd_unimed_pre_req, 
				cd_prestador_req, 
				ie_via_acesso, 
				vl_adic_procedimento, 
				vl_adic_co, 
				vl_adic_filme, 
				cd_especialidade, 
				nr_seq_nota, 
				ds_hora_procedimento, 
				cd_cnes_prest, 
				nm_profissional_prestador, 
				sg_cons_prof_prest, 
				nr_cons_prof_prest, 
				sg_uf_cons_prest, 
				vl_pago_prest) 
			values (nr_seq_nota_serv_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_cobr_duplicada_w, 
				nr_lote_w, 
				cd_unimed_prestador_w, 
				cd_prestador_w, 
				nm_prestador_w, 
				ie_tipo_participacao_w, 
				dt_procedimento_w, 
				cd_procedimento_w, 
				ie_origem_proced_w, 
				qt_procedimento_w, 
				ie_tipo_prestador_w, 
				ie_rede_propria_w, 
				ie_tipo_pessoa_prestador_w, 
				nr_cgc_cpf_w, 
				tx_procedimento_w, 
				ie_pacote_w, 
				cd_ato_w, 
				ie_tipo_tabela_w, 
				nr_cgc_cpf_req_w, 
				nm_prestador_requisitante_w, 
				sg_cons_prof_req_w, 
				nr_cons_prof_req_w, 
				sg_uf_cons_req_w, 
				ie_reembolso_w, 
				nr_autorizacao_w, 
				nr_nota_w, 
				vl_procedimento_w, 
				vl_custo_operacional_w, 
				vl_filme_w, 
				cd_porte_anestesico_w, 
				cd_unimed_autorizadora_w, 
				cd_unimed_pre_req_w, 
				cd_prestador_req_w, 
				ie_via_acesso_w, 
				vl_adic_procedimento_w, 
				vl_adic_co_w, 
				vl_adic_filme_w, 
				cd_especialidade_w, 
				nr_seq_nota_w, 
				ds_hora_procedimento_w, 
				cd_cnes_prest_w, 
				nm_profissional_prestador_w, 
				sg_cons_prof_prest_w, 
				nr_cons_prof_prest_w, 
				sg_uf_cons_prest_w, 
				vl_pago_prest_w);		
			end;
		end loop;
		close C05;
		 
		open C06;
		loop 
		fetch C06 into	 
			nr_lote_w, 
			nr_nota_w, 
			ie_tipo_complemento_w, 
			ds_complemento_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin 
			insert into ptu_nota_complemento(nr_sequencia, 
				nr_seq_nota_cobr, 
				nr_lote, 
				nr_nota, 
				ie_tipo_complemento, 
				ds_complemento, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec) 
			values (nextval('ptu_nota_complemento_seq'), 
				nr_seq_cobr_duplicada_w, 
				nr_lote_w, 
				nr_nota_w, 
				ie_tipo_complemento_w, 
				ds_complemento_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p);
			end;
		end loop;
		close C06;
		 
		open C07;
		loop 
		fetch C07 into	 
			ds_link_nfe_w, 
			nr_nota_fiscal_w;
		EXIT WHEN NOT FOUND; /* apply on C07 */
			begin 
			select	nextval('ptu_nota_fiscal_seq') 
			into STRICT	nr_seq_nota_fiscal_w 
			;
			 
			insert into ptu_nota_fiscal(nr_sequencia, 
				nr_seq_nota_cobr, 
				ds_link_nfe, 
				nr_nota_fiscal, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec) 
			values (nr_seq_nota_fiscal_w, 
				nr_seq_cobr_duplicada_w, 
				ds_link_nfe_w, 
				nr_nota_fiscal_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p);
			end;
		end loop;
		close C07;					
		end;
	end loop;
	close C02;
	 
	 
	open C08;
	loop 
	fetch C08 into	 
		ie_tipo_w, 
		nm_cedente_sacado_w, 
		ds_endereco_w, 
		cd_cep_w, 
		nm_cidade_w, 
		sg_uf_w, 
		cd_cgc_cpf_w, 
		cd_ans_w, 
		ds_complemento_w, 
		ds_bairro_w, 
		nr_inscricao_estadual_w, 
		nr_ddd_w, 
		nr_telefone_w, 
		nr_fax_w;
	EXIT WHEN NOT FOUND; /* apply on C08 */
		begin 
		select	nextval('ptu_fatura_cedente_seq') 
		into STRICT	nr_seq_cedente_w 
		;
		 
		insert into ptu_fatura_cedente(nr_sequencia, 
			nr_seq_fatura, 
			ie_tipo, 
			nm_cedente_sacado, 
			ds_endereco, 
			cd_cep, 
			nm_cidade, 
			sg_uf, 
			cd_cgc_cpf, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			cd_ans, 
			ds_complemento, 
			ds_bairro, 
			nr_inscricao_estadual, 
			nr_ddd, 
			nr_telefone, 
			nr_fax) 
		values (nr_seq_cedente_w, 
			nr_seq_fatura_duplicada_w, 
			ie_tipo_w, 
			nm_cedente_sacado_w, 
			ds_endereco_w, 
			cd_cep_w, 
			nm_cidade_w, 
			sg_uf_w, 
			cd_cgc_cpf_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			cd_ans_w, 
			ds_complemento_w, 
			ds_bairro_w, 
			nr_inscricao_estadual_w, 
			nr_ddd_w, 
			nr_telefone_w, 
			nr_fax_w);
		end;
	end loop;
	close C08;
	 
	open C09;
	loop 
	fetch C09 into	 
		nr_linha_w, 
		ds_linha_w, 
		vl_item_w;
	EXIT WHEN NOT FOUND; /* apply on C09 */
		begin 
		select	nextval('ptu_fatura_corpo_seq') 
		into STRICT	nr_seq_corpo_w 
		;
		 
		insert into ptu_fatura_corpo(nr_sequencia, 
			nr_seq_fatura, 
			nr_linha, 
			ds_linha, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			vl_item) 
		values (nr_seq_corpo_w, 
			nr_seq_fatura_duplicada_w, 
			nr_linha_w, 
			ds_linha_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			vl_item_w);
		end;
	end loop;
	close C09;
	 
	nr_seq_fatura_duplicada_p := nr_seq_fatura_duplicada_w;
	 
	update	ptu_fatura 
	set	vl_total_fatura	= (vl_informado_p)::numeric , 
		nm_usuario	= nm_usuario_p, 
		dt_atualizacao	= clock_timestamp() 
	where	nr_sequencia	= nr_seq_fatura_duplicada_w;
		 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_duplicar_fatura_devolvida (nr_seq_fatura_p bigint, vl_informado_p bigint, nm_usuario_p text, nr_seq_fatura_duplicada_p INOUT bigint) FROM PUBLIC;

