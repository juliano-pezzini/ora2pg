-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_avaliacao_fornecedor ( dt_referencia_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_referencia_w			timestamp;
dt_fim_mes_w			timestamp;
qt_dias_consulta_w		bigint;
qt_peso_pontualidade_w		bigint;
qt_peso_eficiencia_w		bigint;
qt_peso_integridade_w		bigint;
qt_real_inspecao_w		bigint;
qt_real_entrega_w			bigint;
cd_cgc_w			varchar(14);
qt_devolucao_w			bigint;
qt_nao_conform_w			bigint;
qt_nota_devolucao_w		bigint;
qt_nota_devol_rnc_w		bigint;
nr_documento_w			bigint;
ie_origem_documento_w		varchar(1);
nr_seq_avaliacao_w		bigint;
ie_avaliar_mes_ref_w		varchar(1);
ie_conceito_insp_real_w		varchar(1);

/*pontualidade entrega*/

qt_pontualidade_entrega_w		bigint;
ie_pontualidade_entrega_w		varchar(1);
pr_pontualidade_w			bigint;

/*eficiencia no atendimento*/

qt_eficiencia_atendimento_w	bigint;
qt_eficiencia_atend_w		bigint;
ie_eficiencia_atendimento_w		varchar(1);
pr_eficiencia_w			bigint;
ie_considera_quantidade_w		varchar(1);
qt_pontos_quantidade_w		bigint := 0;
qt_pontos_cond_pagto_w		bigint := 0;
ie_considera_condicao_w		varchar(1);

/*integridade dos produtos*/

qt_integridade_produto_w		bigint;
ie_integridade_produto_w		varchar(1);
pr_integridade_w			bigint;

/*Conceito geral do fornecedor*/

qt_div_conceito_geral_w		bigint;
qt_conceito_geral_w		bigint;
ie_conceito_geral_w		varchar(1);
ie_consid_so_atrasada_pont_w	varchar(1);

ie_cons_cad_div_w			parametro_compras.ie_cons_cad_div%type;	


/* Conforme falei com Itamar, a avaliacao deve somente com base no que teve inspecao
cursor C01 is
select	cd_cgc,
	count(*)
from	nota_fiscal b,
	nota_fiscal_item a
where	a.nr_sequencia = b.nr_sequencia
and	b.dt_atualizacao_estoque IS NOT NULL
and	b.dt_entrada_saida > (dt_referencia_p - qt_dias_consulta_w)
and	b.cd_estabelecimento = cd_estabelecimento_p
and	b.ie_situacao = '1'
and	(obter_se_nota_entrada_saida(b.nr_sequencia) = 'E')
and	cd_cgc is not null
and exists(
	select	1
	from	inspecao_recebimento x
	where	x.cd_cgc	= b.cd_cgc
	and	x.dt_recebimento > (dt_referencia_p - qt_dias_consulta_w))
group by cd_cgc;*/
C01 CURSOR FOR
SELECT	cd_cgc,
	count(*)
from	inspecao_recebimento
where	dt_recebimento > (dt_referencia_p - qt_dias_consulta_w)
and	ie_avaliar_mes_ref_w = 'N'
and	(cd_cgc IS NOT NULL AND cd_cgc::text <> '')
and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
group by cd_cgc

union

SELECT	cd_cgc,
	count(*)
from	inspecao_recebimento
where	dt_recebimento between dt_referencia_w and dt_fim_mes_w
and	ie_avaliar_mes_ref_w = 'S'
and	(cd_cgc IS NOT NULL AND cd_cgc::text <> '')
and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
group by cd_cgc;

C02 CURSOR FOR
SELECT	nr_sequencia
from	inspecao_recebimento
where	cd_cgc	= cd_cgc_w
and	(((ie_avaliar_mes_ref_w = 'N') and
	(dt_recebimento > (dt_referencia_p - qt_dias_consulta_w))) or
	(ie_avaliar_mes_ref_w = 'S' AND dt_recebimento between dt_referencia_w and dt_fim_mes_w))
and	ie_consid_so_atrasada_pont_w = 'N'
and	(dt_entrega_real IS NOT NULL AND dt_entrega_real::text <> '')
and	dt_entrega_real <> obter_dt_prev_oci_inspecao(nr_Sequencia)
and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')

union

SELECT	nr_sequencia
from	inspecao_recebimento
where	cd_cgc	= cd_cgc_w
and	(((ie_avaliar_mes_ref_w = 'N') and 
	(dt_recebimento > (dt_referencia_p - qt_dias_consulta_w))) or
	(ie_avaliar_mes_ref_w = 'S' AND dt_recebimento between dt_referencia_w and dt_fim_mes_w))
and	ie_consid_so_atrasada_pont_w = 'S'
and	(dt_entrega_real IS NOT NULL AND dt_entrega_real::text <> '')
and	dt_entrega_real > obter_dt_prev_oci_inspecao(nr_Sequencia)
and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

c03 CURSOR FOR
SELECT	nr_documento,
	ie_origem_documento
from	(SELECT	nr_sequencia nr_documento,
		'I' ie_origem_documento
	from	inspecao_recebimento
	where	cd_cgc	= cd_cgc_w
	and	ie_considera_quantidade_w = 'S'
	and	PKG_DATE_UTILS.start_of(dt_recebimento,'MONTH', 0) = dt_referencia_w
	and	obter_qt_prev_oci_inspecao(nr_sequencia) > 0
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and	qt_inspecao <> obter_qt_prev_oci_inspecao(nr_sequencia)
	
union all

	select	nr_sequencia,
		'I'
	from	inspecao_recebimento
	where	cd_cgc	= cd_cgc_w
	and	ie_considera_condicao_w = 'S'
	and	PKG_DATE_UTILS.start_of(dt_recebimento,'MONTH', 0) = dt_referencia_w
	and	(cd_condicao_pagamento IS NOT NULL AND cd_condicao_pagamento::text <> '')
	and	(nr_ordem_compra IS NOT NULL AND nr_ordem_compra::text <> '')
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and	cd_condicao_pagamento <> obter_dados_ordem_compra(nr_ordem_compra,'CP')
	
union all

	select	nr_sequencia,
		'I'
	from	inspecao_recebimento
	where	cd_cgc	= cd_cgc_w
	and	(((ie_avaliar_mes_ref_w = 'N') and
		(dt_recebimento > (dt_referencia_p - qt_dias_consulta_w))) or
		(ie_avaliar_mes_ref_w = 'S' AND dt_recebimento between dt_referencia_w and dt_fim_mes_w))
	and ((ie_motivo_devolucao IS NOT NULL AND ie_motivo_devolucao::text <> '') or (nr_seq_tipo_nao_conf IS NOT NULL AND nr_seq_tipo_nao_conf::text <> ''))
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	
union all

	select 	b.nr_sequencia,
		'G'
	from	nota_fiscal a,
		qua_nao_conformidade b
	where	a.cd_cgc_emitente = cd_cgc_w
	and	a.cd_cgc_emitente = b.cd_fornecedor
	and	(((ie_avaliar_mes_ref_w = 'N') and 
		(a.dt_entrada_saida > (dt_referencia_p - qt_dias_consulta_w))) or
		(ie_avaliar_mes_ref_w = 'S' AND a.dt_entrada_saida between dt_referencia_w and dt_fim_mes_w))
	and	(((ie_avaliar_mes_ref_w = 'N') and 
		(b.dt_abertura > (dt_referencia_p - qt_dias_consulta_w))) or
		(ie_avaliar_mes_ref_w = 'S' AND b.dt_abertura between dt_referencia_w and dt_fim_mes_w))
	and	exists (	select	1
			from	operacao_nota x
			where	x.cd_operacao_nf = a.cd_operacao_nf 
			and	x.ie_devolucao = 'S')) alias32
group by	nr_documento,
	ie_origem_documento;

c04 CURSOR FOR
SELECT	nr_sequencia
from	inspecao_recebimento
where	cd_cgc	= cd_cgc_w
and	ie_avaliar_mes_ref_w = 'N'
and	dt_recebimento > (dt_referencia_p - qt_dias_consulta_w)
and	(ie_motivo_devolucao IS NOT NULL AND ie_motivo_devolucao::text <> '')
and	ie_motivo_devolucao = 'F'
and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')

union

SELECT	nr_sequencia
from	inspecao_recebimento
where	cd_cgc	= cd_cgc_w
and	ie_avaliar_mes_ref_w = 'S'
and	dt_recebimento between dt_referencia_w and dt_fim_mes_w
and	(ie_motivo_devolucao IS NOT NULL AND ie_motivo_devolucao::text <> '')
and	ie_motivo_devolucao = 'F'
and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

c05 CURSOR FOR
SELECT	nr_sequencia nr_documento,
	'I' ie_origem_documento
from	inspecao_recebimento
where	cd_cgc	= cd_cgc_w
and	(((ie_avaliar_mes_ref_w = 'N') and
	(dt_recebimento > (dt_referencia_p - qt_dias_consulta_w))) or
	(ie_avaliar_mes_ref_w = 'S' AND dt_recebimento between dt_referencia_w and dt_fim_mes_w))
and	(ie_motivo_devolucao IS NOT NULL AND ie_motivo_devolucao::text <> '')
and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')

union all

SELECT	nr_sequencia,
	'N'
from 	nota_fiscal_v a
where	a.cd_cgc = cd_cgc_w
and	(((ie_avaliar_mes_ref_w = 'N') and 
	(a.dt_entrada_saida > (dt_referencia_p - qt_dias_consulta_w))) or
	(ie_avaliar_mes_ref_w = 'S' AND a.dt_entrada_saida between dt_referencia_w and dt_fim_mes_w))
and	coalesce(a.ie_situacao,'1') = '1'
and	exists (	select	1
			from	operacao_nota x
			where	x.cd_operacao_nf = a.cd_operacao_nf 
			and	x.ie_devolucao = 'S');

c06 CURSOR FOR
SELECT	nr_sequencia nr_documento,
	'I' ie_origem_documento
from	inspecao_recebimento
where	cd_cgc	= cd_cgc_w
and	(((ie_avaliar_mes_ref_w = 'N') and
	(dt_recebimento > (dt_referencia_p - qt_dias_consulta_w))) or
	(ie_avaliar_mes_ref_w = 'S' AND dt_recebimento between dt_referencia_w and dt_fim_mes_w))
and	(nr_seq_tipo_nao_conf IS NOT NULL AND nr_seq_tipo_nao_conf::text <> '')
and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')

union all
	
SELECT	nr_sequencia,
	'Q'
from	qua_nao_conformidade a
where	a.cd_fornecedor = cd_cgc_w
and	(((ie_avaliar_mes_ref_w = 'N') and 
	(a.dt_abertura > (dt_referencia_p - qt_dias_consulta_w))) or
	(ie_avaliar_mes_ref_w = 'S' AND a.dt_abertura between dt_referencia_w and dt_fim_mes_w));



BEGIN
dt_referencia_w		:= PKG_DATE_UTILS.start_of(dt_referencia_p,'MONTH', 0);

select	coalesce(max(qt_dias_considera_avaliacao), 90),
	coalesce(max(qt_peso_aval_pontualidade), 40),
	coalesce(max(qt_peso_aval_eficiencia), 25),
	coalesce(max(qt_peso_aval_integridade), 35),
	coalesce(max(ie_considera_qtde_aval_fornec),'N'),
	coalesce(max(ie_considera_cond_aval_fornec),'N'),
	coalesce(max(ie_consid_so_atrasada_pont),'N'),
	coalesce(max(ie_avaliar_mes_ref),'N'),
	coalesce(max(ie_conceito_insp_real),'N'),
	coalesce(max(ie_cons_cad_div),'N')
into STRICT	qt_dias_consulta_w,
	qt_peso_pontualidade_w,
	qt_peso_eficiencia_w,
	qt_peso_integridade_w,
	ie_considera_quantidade_w,
	ie_considera_condicao_w,
	ie_consid_so_atrasada_pont_w,
	ie_avaliar_mes_ref_w,
	ie_conceito_insp_real_w,
	ie_cons_cad_div_w
from	parametro_compras
where	cd_estabelecimento = cd_estabelecimento_p;

if (ie_cons_cad_div_w = 'S') then
	CALL gerar_aval_fornec_tp_diver(dt_referencia_p, cd_estabelecimento_p, nm_usuario_p);
	goto final_da_rotina;
end if;

/* Caso seja para atualizar pelo mes e o dia atual
seja igual ao primeiro do mes, atualiza o do mes anterior */
if (ie_avaliar_mes_ref_w = 'S') and (PKG_DATE_UTILS.start_of(dt_referencia_p,'dd',0) = dt_referencia_w) then
	dt_referencia_w	:= PKG_DATE_UTILS.ADD_MONTH(dt_referencia_w,-1,0);
end if;
	
dt_fim_mes_w		:= PKG_DATE_UTILS.end_of(dt_referencia_w, 'MONTH', 0);

delete
from	avaliacao_fornecedor
where	dt_mesano_referencia = dt_referencia_w
and cd_estabelecimento = cd_estabelecimento_p;

open C01;
loop
fetch C01 INTO
	cd_cgc_w,
	qt_real_inspecao_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	select	nextval('avaliacao_fornecedor_seq')
	into STRICT	nr_seq_avaliacao_w
	;

	/*Identifica a quantidade real de entregas do fornecedor*/

	select	count(*)
	into STRICT	qt_real_entrega_w
	from	nota_fiscal b,
		nota_fiscal_item a
	where	a.nr_sequencia = b.nr_sequencia
	and	(b.dt_atualizacao_estoque IS NOT NULL AND b.dt_atualizacao_estoque::text <> '')
	and	(((ie_avaliar_mes_ref_w = 'N') and
		(b.dt_entrada_saida > (dt_referencia_p - qt_dias_consulta_w))) or
		(ie_avaliar_mes_ref_w = 'S' AND b.dt_entrada_saida between dt_referencia_w and dt_fim_mes_w))
	and	b.cd_estabelecimento = cd_estabelecimento_p
	and	b.ie_situacao = '1'
	and (obter_se_nota_entrada_saida(b.nr_sequencia) = 'E')
	and	cd_cgc = cd_cgc_w;

	/*Identifica os atrazos na pontualidade de entrega*/

	
	if (ie_consid_so_atrasada_pont_w = 'N') then

		select	count(*)
		into STRICT	qt_pontualidade_entrega_w
		from	inspecao_recebimento
		where	cd_cgc	= cd_cgc_w
		and	(((ie_avaliar_mes_ref_w = 'N') and
			(dt_recebimento > (dt_referencia_p - qt_dias_consulta_w))) or
			(ie_avaliar_mes_ref_w = 'S' AND dt_recebimento between dt_referencia_w and dt_fim_mes_w))
		and	(dt_entrega_real IS NOT NULL AND dt_entrega_real::text <> '')
		and	dt_entrega_real <> obter_dt_prev_oci_inspecao(nr_Sequencia)
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

	else

		select	count(*)
		into STRICT	qt_pontualidade_entrega_w
		from	inspecao_recebimento
		where	cd_cgc	= cd_cgc_w
		and	(((ie_avaliar_mes_ref_w = 'N') and
			(dt_recebimento > (dt_referencia_p - qt_dias_consulta_w))) or
			(ie_avaliar_mes_ref_w = 'S' AND dt_recebimento between dt_referencia_w and dt_fim_mes_w))
		and	(dt_entrega_real IS NOT NULL AND dt_entrega_real::text <> '')
		and	dt_entrega_real > obter_dt_prev_oci_inspecao(nr_Sequencia)
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

	end if;
	
	pr_pontualidade_w	:= round(dividir(((qt_real_inspecao_w - qt_pontualidade_entrega_w) * 100), qt_real_inspecao_w));
	
	select	substr(obter_conceito_aval_fornec(cd_estabelecimento_p, pr_pontualidade_w),1,1)
	into STRICT	ie_pontualidade_entrega_w
	;
	

	/*Se o parametro de compras esta setado, o sistema considera tambem os erros de quantidadena eficiencia do atendimento */

	if (ie_considera_quantidade_w = 'S') then
		select	count(*)
		into STRICT	qt_pontos_quantidade_w
		from	inspecao_recebimento
		where	cd_cgc	= cd_cgc_w
		and	PKG_DATE_UTILS.start_of(dt_recebimento,'MONTH', 0) = dt_referencia_w
		and	obter_qt_prev_oci_inspecao(nr_sequencia) > 0
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	qt_inspecao <> obter_qt_prev_oci_inspecao(nr_sequencia);
	end if;
	
	/*Se o parametro de compras esta setado, o sistema considera tambem os erros de condicao de pagamento na eficiencia do atendimento */

	if (ie_considera_condicao_w = 'S') then
		select	count(*)
		into STRICT	qt_pontos_cond_pagto_w
		from	inspecao_recebimento
		where	cd_cgc	= cd_cgc_w
		and	PKG_DATE_UTILS.start_of(dt_recebimento,'MONTH', 0) = dt_referencia_w
		and	(cd_condicao_pagamento IS NOT NULL AND cd_condicao_pagamento::text <> '')
		and	(nr_ordem_compra IS NOT NULL AND nr_ordem_compra::text <> '')
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	cd_condicao_pagamento <> obter_dados_ordem_compra(nr_ordem_compra,'CP');	
	end if;
		
	/*Identifica a quantidade de vezes que houve devolucoes ou nao conformidades, e que indicam indice de eficiencia no atendimento*/

	select	count(*)
	into STRICT	qt_eficiencia_atendimento_w
	from	inspecao_recebimento
	where	cd_cgc	= cd_cgc_w
	and	(((ie_avaliar_mes_ref_w = 'N') and
		(dt_recebimento > (dt_referencia_p - qt_dias_consulta_w))) or
		(ie_avaliar_mes_ref_w = 'S' AND dt_recebimento between dt_referencia_w and dt_fim_mes_w))
	and ((ie_motivo_devolucao IS NOT NULL AND ie_motivo_devolucao::text <> '') or (nr_seq_tipo_nao_conf IS NOT NULL AND nr_seq_tipo_nao_conf::text <> ''))
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
	
	select 	count(*)
	into STRICT	qt_eficiencia_atend_w
	from	nota_fiscal a,
		qua_nao_conformidade b
	where	a.cd_cgc_emitente = cd_cgc_w
	and	a.cd_cgc_emitente = b.cd_fornecedor
	and	(((ie_avaliar_mes_ref_w = 'N') and
		(a.dt_entrada_saida > (dt_referencia_p - qt_dias_consulta_w))) or
		(ie_avaliar_mes_ref_w = 'S' AND a.dt_entrada_saida between dt_referencia_w and dt_fim_mes_w))
	and	(((ie_avaliar_mes_ref_w = 'N') and 
		(b.dt_abertura > (dt_referencia_p - qt_dias_consulta_w))) or
		(ie_avaliar_mes_ref_w = 'S' AND b.dt_abertura between dt_referencia_w and dt_fim_mes_w))
	and	exists (	SELECT	1
			from	operacao_nota x
			where	x.cd_operacao_nf = a.cd_operacao_nf 
			and	x.ie_devolucao = 'S');

	--286667	
	qt_eficiencia_atendimento_w  := qt_eficiencia_atendimento_w + qt_eficiencia_atend_w;
	
	qt_eficiencia_atendimento_w := qt_eficiencia_atendimento_w + qt_pontos_quantidade_w + qt_pontos_cond_pagto_w;
	
	pr_eficiencia_w		:= round(dividir(((qt_real_inspecao_w - qt_eficiencia_atendimento_w) * 100), qt_real_inspecao_w));
	
	select	substr(obter_conceito_aval_fornec(cd_estabelecimento_p, pr_eficiencia_w),1,1)
	into STRICT	ie_eficiencia_atendimento_w
	;

	/*Identifica quantidade de devolucoes com tipo(Integridade), e que indicam indice de integridade dos produtos*/

	select	count(*)
	into STRICT	qt_integridade_produto_w
	from	inspecao_recebimento
	where	cd_cgc	= cd_cgc_w
	and	(((ie_avaliar_mes_ref_w = 'N') and
		(dt_recebimento > (dt_referencia_p - qt_dias_consulta_w))) or
		(ie_avaliar_mes_ref_w = 'S' AND dt_recebimento between dt_referencia_w and dt_fim_mes_w))
	and	(ie_motivo_devolucao IS NOT NULL AND ie_motivo_devolucao::text <> '')
	and	ie_motivo_devolucao = 'F'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
	
	pr_integridade_w		:= round(dividir(((qt_real_inspecao_w - qt_integridade_produto_w) * 100), qt_real_inspecao_w));
	
	select	substr(obter_conceito_aval_fornec(cd_estabelecimento_p, pr_integridade_w),1,1)
	into STRICT	ie_integridade_produto_w
	;
	
	--286667
	
	select	count(*)
	into STRICT	qt_devolucao_w
	from	inspecao_recebimento
	where	cd_cgc	= cd_cgc_w
	and	(((ie_avaliar_mes_ref_w = 'N') and
		(dt_recebimento > (dt_referencia_p - qt_dias_consulta_w))) or
		(ie_avaliar_mes_ref_w = 'S' AND dt_recebimento between dt_referencia_w and dt_fim_mes_w))
	and	(ie_motivo_devolucao IS NOT NULL AND ie_motivo_devolucao::text <> '')
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
	
	select	count(*)
	into STRICT	qt_nota_devolucao_w
	from 	nota_fiscal_v a
	where	a.cd_cgc = cd_cgc_w
	and	(((ie_avaliar_mes_ref_w = 'N') and 
		(a.dt_entrada_saida > (dt_referencia_p - qt_dias_consulta_w))) or
		(ie_avaliar_mes_ref_w = 'S' AND a.dt_entrada_saida between dt_referencia_w and dt_fim_mes_w))
	and	coalesce(a.ie_situacao,'1') = '1'
	and	exists (	SELECT	1
			from	operacao_nota x
			where	x.cd_operacao_nf = a.cd_operacao_nf 
			and	x.ie_devolucao = 'S');
			
	qt_devolucao_w	:= qt_devolucao_w + qt_nota_devolucao_w;
	
	select	count(*)
	into STRICT	qt_nao_conform_w
	from	inspecao_recebimento
	where	cd_cgc	= cd_cgc_w
	and	(((ie_avaliar_mes_ref_w = 'N') and
		(dt_recebimento > (dt_referencia_p - qt_dias_consulta_w))) or
		(ie_avaliar_mes_ref_w = 'S' AND dt_recebimento between dt_referencia_w and dt_fim_mes_w))
	and	(nr_seq_tipo_nao_conf IS NOT NULL AND nr_seq_tipo_nao_conf::text <> '')
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
	
	select	count(*)
	into STRICT	qt_nota_devol_rnc_w
	from	qua_nao_conformidade a
	where	a.cd_fornecedor = cd_cgc_w
	and	(((ie_avaliar_mes_ref_w = 'N') and
		(a.dt_abertura > (dt_referencia_p - qt_dias_consulta_w))) or
		(ie_avaliar_mes_ref_w = 'S' AND a.dt_abertura between dt_referencia_w and dt_fim_mes_w));
	
	qt_nao_conform_w  := qt_nao_conform_w + qt_nota_devol_rnc_w;
	
	--Fim 286667
	if (ie_conceito_insp_real_w = 'S') then
		qt_div_conceito_geral_w	:= qt_real_inspecao_w;
	else
		qt_div_conceito_geral_w	:= (qt_pontualidade_entrega_w + qt_eficiencia_atendimento_w + qt_integridade_produto_w);
	end if;

	/*Identifica o conceito geral do fornecedor*/

	qt_conceito_geral_w	:= 100 - (
				dividir(((qt_pontualidade_entrega_w * qt_peso_pontualidade_w) +
					 (qt_eficiencia_atendimento_w * qt_peso_eficiencia_w) +
					 (qt_integridade_produto_w * qt_peso_integridade_w)),
				(qt_div_conceito_geral_w)));

	select	substr(obter_conceito_aval_fornec(cd_estabelecimento_p, qt_conceito_geral_w),1,1)
	into STRICT	ie_conceito_geral_w
	;

	insert into avaliacao_fornecedor(
		nr_sequencia,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_fornecedor,
		dt_mesano_referencia,
		qt_dias_consulta,
		qt_real_entrega,
		qt_real_inspecao,
		qt_pontualidade_entrega,
		ie_pontualidade_entrega,
		qt_eficiencia_atendimento,
		ie_eficiencia_atendimento,
		qt_integridade_produto,
		ie_integridade_produto,
		qt_conceito_geral,
		ie_conceito_geral,
		qt_devolucao,
		qt_nao_conformidade)
	values (nr_seq_avaliacao_w,
		cd_estabelecimento_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_cgc_w,
		dt_referencia_w,
		qt_dias_consulta_w,
		qt_real_entrega_w,
		qt_real_inspecao_w,
		qt_pontualidade_entrega_w,
		ie_pontualidade_entrega_w,
		qt_eficiencia_atendimento_w,
		ie_eficiencia_atendimento_w,
		qt_integridade_produto_w,
		ie_integridade_produto_w,
		qt_conceito_geral_w,
		ie_conceito_geral_w,
		qt_devolucao_w,
		qt_nao_conform_w);

	/*Atualizar detalhes da avaliacao do fornecedor - Pontualidade*/

	if (qt_pontualidade_entrega_w > 0) then
		begin

		open c02;
		loop
		fetch c02 into
			nr_documento_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin

			insert into aval_fornec_inspecao(
				nr_sequencia,
				nr_seq_avaliacao,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_documento,
				ie_origem_documento,
				ie_tipo_avaliacao) values (
					nextval('aval_fornec_inspecao_seq'),
					nr_seq_avaliacao_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_documento_w,
					'I',
					'P');

			end;
		end loop;
		close c02;

		end;
	end if;

	/*Atualizar detalhes da avaliacao do fornecedor - eficiencia*/

	if (qt_eficiencia_atendimento_w > 0) then
		begin

		open c03;
		loop
		fetch c03 into
			nr_documento_w,
			ie_origem_documento_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin

			insert into aval_fornec_inspecao(
				nr_sequencia,
				nr_seq_avaliacao,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_documento,
				ie_origem_documento,
				ie_tipo_avaliacao) values (
					nextval('aval_fornec_inspecao_seq'),
					nr_seq_avaliacao_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_documento_w,
					ie_origem_documento_w,
					'E');

			end;
		end loop;
		close c03;

		end;
	end if;

	/*Atualizar detalhes da avaliacao do fornecedor - Integridade*/

	if (qt_integridade_produto_w > 0) then
		begin

		open c04;
		loop
		fetch c04 into
			nr_documento_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
			begin

			insert into aval_fornec_inspecao(
				nr_sequencia,
				nr_seq_avaliacao,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_documento,
				ie_origem_documento,
				ie_tipo_avaliacao) values (
					nextval('aval_fornec_inspecao_seq'),
					nr_seq_avaliacao_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_documento_w,
					'I',
					'I');			

			end;
		end loop;
		close c04;

		end;
	end if;

	/*Atualizar detalhes da avaliacao do fornecedor - devolucoes*/

	if (qt_devolucao_w > 0) then
		begin

		open c05;
		loop
		fetch c05 into
			nr_documento_w,
			ie_origem_documento_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */
			begin

			insert into aval_fornec_inspecao(
				nr_sequencia,
				nr_seq_avaliacao,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_documento,
				ie_origem_documento,
				ie_tipo_avaliacao) values (
					nextval('aval_fornec_inspecao_seq'),
					nr_seq_avaliacao_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_documento_w,
					ie_origem_documento_w,
					'D');

			end;
		end loop;
		close c05;

		end;
	end if;

	/*Atualizar detalhes da avaliacao do fornecedor - Nao conformidade*/

	if (qt_nao_conform_w > 0) then
		begin

		open c06;
		loop
		fetch c06 into
			nr_documento_w,
			ie_origem_documento_w;
		EXIT WHEN NOT FOUND; /* apply on c06 */
			begin

			insert into aval_fornec_inspecao(
				nr_sequencia,
				nr_seq_avaliacao,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_documento,
				ie_origem_documento,
				ie_tipo_avaliacao) values (
					nextval('aval_fornec_inspecao_seq'),
					nr_seq_avaliacao_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_documento_w,
					ie_origem_documento_w,
					'C');

			end;
		end loop;
		close c06;

		end;
	end if;


	end;
end loop;
close c01;

<<final_da_rotina>>

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_avaliacao_fornecedor ( dt_referencia_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

