-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rp_alterar_dt_inicio ( dt_inicio_p timestamp, nr_sequencia_p bigint, ie_opcao_p text) AS $body$
DECLARE

dt_inicio_agendamento_w	timestamp;
dt_fim_agendamento_w	timestamp;


BEGIN
--verifica se está passando todos os parâmetros
if (dt_inicio_p IS NOT NULL AND dt_inicio_p::text <> '' AND nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') then
	--verifica se é individual
	if (ie_opcao_p = 'I') then
		--coleta os dados atuais
		select 	dt_inicio_agendamento,
				dt_fim_agendamento
		into STRICT	dt_inicio_agendamento_w,
				dt_fim_agendamento_w
		from	rp_pac_agend_individual
		where	nr_sequencia = nr_sequencia_p;

		--verifica se a data de inicio é menor q a data de fim
		if (dt_inicio_p < dt_fim_agendamento_w or coalesce(dt_fim_agendamento_w::text, '') = '') then
			--verifica se a nova data é maior q a antiga data de inicio,
			if (dt_inicio_p > dt_inicio_agendamento_w) then
				--se sim, cancela os agendamentos do período
				update	agenda_consulta
				set		ie_status_agenda = 'C',
						nm_usuario_cancelamento = wheb_usuario_pck.get_nm_usuario,
						ds_observacao = wheb_mensagem_pck.get_texto(795860) || ' ' || lower(wheb_mensagem_pck.get_texto(795861)),
						dt_cancelamento = clock_timestamp()
				where	nr_seq_rp_item_ind = nr_sequencia_p
				and		dt_agenda	between dt_inicio_agendamento_w and dt_inicio_p;

			end if;
			--seta a nova data de início
			update	rp_pac_agend_individual
			set		dt_inicio_agendamento = dt_inicio_p
			where	nr_sequencia = nr_sequencia_p;

		end if;
	else if (ie_opcao_p = 'M') then  --verifica se é modelo
			--coleta os dados atuais
			select	dt_inicio_agendamento,
					dt_fim_agendamento
			into STRICT	dt_inicio_agendamento_w,
					dt_fim_agendamento_w
			from	rp_pac_modelo_agendamento
			where	nr_sequencia = nr_sequencia_p;

			--verifica se a data de inicio é menor q a data de fim
			if (dt_inicio_p < dt_fim_agendamento_w or coalesce(dt_fim_agendamento_w::text, '') = '') then

				if (dt_inicio_agendamento_w < dt_inicio_p) then --se sim, cancela os agendamentos do período
					update	agenda_consulta
					set		ie_status_agenda = 'C',
							nm_usuario_cancelamento = wheb_usuario_pck.get_nm_usuario,
							ds_observacao = wheb_mensagem_pck.get_texto(795860) || ' ' || lower(wheb_mensagem_pck.get_texto(795861)),
							dt_cancelamento = clock_timestamp()
					where	dt_agenda	between dt_inicio_agendamento_w and dt_inicio_p
					and		nr_seq_rp_item_ind  in (SELECT	nr_sequencia
													from 	rp_pac_modelo_agend_item
													where 	nr_seq_modelo_pac = nr_sequencia_p);
				end if;

				--seta a nova data de início
				update	rp_pac_modelo_agendamento
				set		dt_inicio_agendamento = dt_inicio_p
				where	nr_sequencia = nr_sequencia_p;

			end if;

		end if;
	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rp_alterar_dt_inicio ( dt_inicio_p timestamp, nr_sequencia_p bigint, ie_opcao_p text) FROM PUBLIC;

