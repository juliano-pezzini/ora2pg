-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE update_into_material_from_mims ( cd_material_p imp_material.cd_material%type, cd_material_w material.cd_material%type, nm_usuario_p text, nr_mims_version_p MIMS_FICHA_PROD.NR_SEQ_MIMS_VERSION%type default null) AS $body$
DECLARE


imp_material_w imp_material%rowtype;
prodcode_w mims_material_tasy.prodcode%type;
nr_seq_ficha_tecnica_w 	bigint := 0;
cd_mat_gen_tasy_w	bigint := null;
formcode_w mims_material_tasy.formcode%type;
packcode_w mims_material_tasy.packcode%type;
nr_pbs_updates_w				smallint := 0;
ie_change_in_mat_estab_w IMP_MATERIAL_ESTAB.IE_DIRTY_CHECK%type;
IE_IMP_CLASSIF_CUSTO_W IMP_MATERIAL_ESTAB.IE_CLASSIF_CUSTO%TYPE;

c_material_pbs CURSOR(imp_cd_material_w bigint) FOR
	SELECT a.* from imp_material_pbs a where a.cd_material = imp_cd_material_w;

BEGIN
    -- check material
	select	a.*
	into STRICT   	imp_material_w
	from   	imp_material a
	where  	a.cd_material = cd_material_p
	and 	a.ie_dirty_check = 1;

if (imp_material_w.cd_material IS NOT NULL AND imp_material_w.cd_material::text <> '') then

  select	max(prodcode)
  into STRICT	prodcode_w
  from 	mims_material_tasy
  where 	cd_imp_material = cd_material_p;

  nr_seq_ficha_tecnica_w := material_ficha_tecnica_prod(	prodcode_w, nm_usuario_p, nr_seq_ficha_tecnica_w, nr_mims_version_p
				);
  commit;

begin
  select formcode, packcode
  into STRICT formcode_w, packcode_w
   from 	mims_material_tasy
  where 	cd_imp_material = cd_material_p and prodcode = prodcode_w  LIMIT 1;

  if ((prodcode_w IS NOT NULL AND prodcode_w::text <> '') and (formcode_w IS NOT NULL AND formcode_w::text <> '') and (packcode_w IS NOT NULL AND packcode_w::text <> '')) then
    cd_mat_gen_tasy_w := insert_material_gen_mims(prodcode_w, formcode_w, packcode_w, coalesce(WHEB_USUARIO_PCK.get_cd_estabelecimento(), 1), cd_mat_gen_tasy_w);
  end if;
exception when others then
   null;
end;

	update 	material a
	set		--a.ie_tipo_material 			= imp_material_w.ie_tipo_material,
			--a.ds_reduzida 				= imp_material_w.ds_reduzida,

			--a.cd_unidade_medida_compra 	= imp_material_w.cd_unidade_medida_compra,

			--a.cd_unidade_medida_estoque = imp_material_w.cd_unidade_medida_estoque,

			--a.cd_unidade_medida_consumo = imp_material_w.cd_unidade_medida_consumo,

			--a.cd_unidade_medida_solic 	= imp_material_w.cd_unidade_medida_solic,
			a.ds_orientacao_usuario 	= imp_material_w.ds_orientacao_usuario,
			--a.ie_via_aplicacao 			= imp_material_w.ie_via_aplicacao,

			--a.qt_conversao_mg 			= imp_material_w.qt_conversao_mg,

			--a.cd_unid_med_concetracao 	= imp_material_w.cd_unid_med_concetracao,

			--a.dt_cadastramento 			= imp_material_w.dt_cadastramento,
			a.dt_atualizacao 			= clock_timestamp(),
			a.nm_usuario 				= imp_material_w.nm_usuario_nrec,
			--a.nm_usuario_nrec 			= imp_material_w.nm_usuario_nrec,
      a.NR_SEQ_FICHA_TECNICA = nr_seq_ficha_tecnica_w,
	  a.CD_MATERIAL_GENERICO = cd_mat_gen_tasy_w,
			a.cd_sistema_ant 			= imp_material_w.cd_sistema_ant
	where  	a.cd_material = cd_material_w;
	--update 	imp_material a

	--set    	a.ie_dirty_check = 0

	--where  	a.cd_material = cd_material_p;
	begin
		--update PBS only when changes detected

		/* select count(1) into nr_pbs_updates_w from imp_material_pbs
		where cd_material = cd_material_p and IE_DIRTY_CHECK in (1,2); */
		SELECT coalesce(IE_PBS_DIRTY_CHECK,0) INTO STRICT nr_pbs_updates_w from imp_material where cd_material = cd_material_p;
		
		if (nr_pbs_updates_w > 0) then
		
			update	material_pbs
			set	dt_start_validity = coalesce(dt_start_validity,clock_timestamp()),
				dt_end_validity = clock_timestamp(),
				nm_usuario = nm_usuario_p,
				dt_atualizacao = clock_timestamp()
			where cd_material = cd_material_w;
		
		for r_material_pbs in c_material_pbs(cd_material_p) loop
			begin
				--cd_material_w
				INSERT INTO material_pbs(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_estabelecimento,
					cd_pbs,
					cd_material,
					dt_start_validity,
					dt_end_validity,
					nr_seq_indication
				) VALUES (
					nextval('material_pbs_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					r_material_pbs.cd_estabelecimento,
					r_material_pbs.cd_pbs,
					cd_material_w,
					clock_timestamp(),
					null,
					r_material_pbs.nr_seq_indication
				);
				
			exception when others then null;
			end;
		end loop;	
		
		end if;
		
	exception when others then null;
	end;


	--update material_estab only if changes exists
	CALL wheb_usuario_pck.set_ie_executar_trigger('N');
	BEGIN
	SELECT coalesce(IE_DIRTY_CHECK,0)
		INTO STRICT ie_change_in_mat_estab_w
		FROM IMP_MATERIAL_ESTAB WHERE CD_MATERIAL = cd_material_p;
	if ( ie_change_in_mat_estab_w <> 0 ) then
		SELECT IE_CLASSIF_CUSTO
			INTO STRICT IE_IMP_CLASSIF_CUSTO_W
			FROM IMP_MATERIAL_ESTAB WHERE CD_MATERIAL = cd_material_p;

		Update MATERIAL_ESTAB set IE_CLASSIF_CUSTO = IE_IMP_CLASSIF_CUSTO_W where cd_material = cd_material_w;

	end if;
	exception when others then null;
	END;
	CALL wheb_usuario_pck.set_ie_executar_trigger('S');

end if;
exception when others then null;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE update_into_material_from_mims ( cd_material_p imp_material.cd_material%type, cd_material_w material.cd_material%type, nm_usuario_p text, nr_mims_version_p MIMS_FICHA_PROD.NR_SEQ_MIMS_VERSION%type default null) FROM PUBLIC;

