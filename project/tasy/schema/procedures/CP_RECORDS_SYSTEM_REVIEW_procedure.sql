-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cp_records_system_review (nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


si_import_status_w	varchar(10)	:= 'SP';
	/* 	SP - System pending
		SR - System reviewed
		UP - User pending
		UR - User reviewed */
nr_seq_care_plan_w				care_plan.nr_sequencia%type;
nr_seq_interv_plan_w			cp_interv_plan_assoc.nr_sequencia%type;
nr_seq_prev_care_plan_w			care_plan.nr_sequencia%type;
nr_seq_goal_w					cp_goal.nr_sequencia%type;
nr_seq_indicator_w				cp_indicator.nr_sequencia%type;
nr_seq_possible_prob_w			cp_possible_prob.nr_sequencia%type;
nr_seq_prev_interv_plan_w		cp_interv_plan.nr_sequencia%type;
nr_seq_interv_plan_own_w		cp_interv_plan.nr_sequencia%type;
nr_seq_intervention_w			cp_intervention.nr_sequencia%type;
si_care_plan_review_w			varchar(1);/* Indicates if a care plan should be reviewed */
si_indicator_review_w			varchar(1);/* Indicates if a indicator should be reviewed */
si_goal_review_w				varchar(1);/* Indicates if a goal should be reviewed */
si_interv_plan_review_w			varchar(1);/* Indicates if a intervention plan should be reviewed */
qt_rec_w						bigint;/* Quantity of records */
ds_alternative_w				varchar(2000);

c_care_plan CURSOR FOR
SELECT	a.nr_sequencia,
		a.ds_alternative,
		a.ds_unique_value
from	care_plan a
where	a.ie_origin = 'E'
and		a.ie_situacao = 'I'
and		a.si_import_status = 'SP';

/* Association tables */

c_cp_clinical_term_assoc CURSOR FOR
SELECT	a.nr_sequencia,
		b.si_import_status,
		a.si_import_status si_import_status_reg
from	cp_clinical_term b,
		cp_clinical_term_assoc a
where	a.nr_seq_clin_term = b.nr_sequencia
and		a.nr_seq_care_plan = nr_seq_care_plan_w;

c_cp_possible_prob CURSOR FOR
SELECT	a.nr_sequencia,
		a.si_import_status,
		b.si_import_status si_import_status_reg,
		a.nr_seq_care_plan
from	cp_problem b,
		cp_possible_prob a
where	a.nr_seq_problem = b.nr_sequencia
and		a.nr_seq_care_plan = nr_seq_care_plan_w;

c_old_possible_prob CURSOR FOR
SELECT	a.nr_sequencia
from	cp_possible_prob a
where	a.nr_seq_care_plan = nr_seq_prev_care_plan_w;

c_cp_problem_goal CURSOR FOR
SELECT	a.nr_sequencia,
		b.si_import_status,
		b.nr_sequencia nr_seq_goal
from	cp_goal b,
		cp_problem_goal a
where	a.nr_seq_goal = b.nr_sequencia
and		a.nr_seq_possible_prob = nr_seq_possible_prob_w;

c_cp_education CURSOR FOR
SELECT	a.nr_sequencia,
		b.si_import_status,
		a.si_import_status si_import_status_reg,
		b.nr_sequencia nr_seq_goal
from	cp_goal b,
		cp_education a
where	a.nr_seq_goal = b.nr_sequencia
and		a.nr_seq_care_plan = nr_seq_care_plan_w;

c_goal_indicator CURSOR FOR
SELECT	a.nr_sequencia,
		b.si_import_status,
		a.si_import_status si_import_status_reg,
		b.nr_sequencia nr_seq_indicator
from	cp_indicator b,
		cp_goal_indicator a
where	a.nr_seq_indicator = b.nr_sequencia
and		a.nr_seq_goal = nr_seq_goal_w;

c_indicator_measure CURSOR FOR
SELECT	a.nr_sequencia,
		b.si_import_status,
		a.si_import_status si_import_status_reg
from	cp_measure b,
		cp_indicator_measure a
where	a.nr_seq_measure = b.nr_sequencia
and		a.nr_seq_indicator = nr_seq_indicator_w;

c_cp_goal_clin_term CURSOR FOR
SELECT	a.nr_sequencia,
		b.si_import_status,
		a.si_import_status si_import_status_reg
from	cp_clinical_term b,
		cp_goal_clin_term a
where	a.nr_seq_clinical_term = b.nr_sequencia
and		a.nr_seq_goal = nr_seq_goal_w;

c_cp_population CURSOR FOR
SELECT	a.nr_sequencia,
		a.ie_population,
		a.nr_seq_care_plan
from	cp_population a
where	a.nr_seq_care_plan = nr_seq_care_plan_w;

c_cp_keyword CURSOR FOR
SELECT	a.nr_sequencia,
		a.ds_keyword,
		a.nr_seq_care_plan
from	cp_keyword a
where	a.nr_seq_care_plan = nr_seq_care_plan_w;

c_cp_interv_plan CURSOR FOR
SELECT	a.nr_sequencia,
		a.ds_unique_value
from	cp_interv_plan a
where	a.nr_seq_possible_prob = nr_seq_possible_prob_w
and		a.ie_situacao = 'I'
and		a.si_import_status = 'SP';

c_cp_interv_plan_assoc CURSOR FOR
SELECT	a.nr_sequencia
from	cp_interv_plan_assoc a
where	a.nr_seq_interv_plan = nr_seq_interv_plan_w
and		a.ie_situacao = 'I'
and		a.si_import_status = 'SP';

c_cp_interv_plan_guid CURSOR FOR
SELECT	a.nr_sequencia
from	cp_interv_plan_guid a
where	a.nr_seq_interv_plan = nr_seq_interv_plan_w
and		a.ie_situacao = 'I'
and		a.si_import_status = 'SP';

/* Base Records */

c_cp_clinical_term CURSOR FOR
SELECT	a.nr_sequencia,
		a.cd_clinical_term
from	cp_clinical_term a
where	a.ie_situacao = 'I'
and		a.si_import_status = 'SP';

c_cp_measure CURSOR FOR
SELECT	a.nr_sequencia,
		a.ds_unique_value
from	cp_measure a
where	a.ie_situacao = 'I'
and		a.si_import_status = 'SP';

c_cp_intervention_item CURSOR FOR
SELECT	a.nr_sequencia,
		a.ds_unique_value
from	cp_intervention_item a
where	a.ie_situacao = 'I'
and		a.si_import_status = 'SP';

c_cp_intervention CURSOR FOR
SELECT	a.nr_sequencia,
		a.ds_unique_value
from	cp_intervention a
where	a.ie_situacao = 'I'
and		a.si_import_status = 'SP';

c_cp_indicator CURSOR FOR
SELECT	a.nr_sequencia,
		a.ds_unique_value
from	cp_indicator a
where	a.ie_situacao = 'I'
and		a.si_import_status = 'SP';

c_cp_goal CURSOR FOR
SELECT	a.nr_sequencia,
		a.ds_unique_value
from	cp_goal a
where	a.ie_situacao = 'I'
and		a.si_import_status = 'SP';

c_cp_problem CURSOR FOR
SELECT	a.nr_sequencia,
		a.ds_unique_value
from	cp_problem a
where	a.ie_situacao = 'I'
and		a.si_import_status = 'SP';

c_cp_intervention_clin_term CURSOR FOR
SELECT	a.nr_sequencia,
		a.nr_seq_intervention
from	cp_intervention_clin_term a
where	a.ie_situacao = 'I'
and		a.si_import_status = 'SP';

c_cp_guidance CURSOR FOR
SELECT	a.nr_sequencia,
		a.ds_guidance
from	cp_guidance a
where	a.ie_situacao = 'I'
and		a.si_import_status = 'SP';

/* - SUB PROCEDURE - */

	procedure review_goal(nr_seq_goal_p bigint) is
		;
BEGIN
		si_goal_review_w	:= 'N';
		/* Education indicator */

		nr_seq_goal_w	:= nr_seq_goal_p;
		for r_c_goal_indicator in c_goal_indicator loop
			nr_seq_indicator_w	:= r_c_goal_indicator.nr_seq_indicator;
			/* Indicator measure */

			for r_c_indicator_measure in c_indicator_measure loop
				update	cp_indicator_measure
				set		si_import_status = r_c_indicator_measure.si_import_status
				where	nr_sequencia = r_c_indicator_measure.nr_sequencia;
				
				if (r_c_indicator_measure.si_import_status = 'UP') or (r_c_indicator_measure.si_import_status_reg = 'UP') then
					si_indicator_review_w	:= 'Y';
				end if;
			end loop;

			if (r_c_goal_indicator.si_import_status = 'UP') or (r_c_goal_indicator.si_import_status_reg = 'UP') or (si_indicator_review_w = 'Y') then
				si_import_status_w:= 'UP';
				si_goal_review_w	:= 'Y';
			else
				si_import_status_w	:= 'SR';
			end if;
			
			update	cp_goal_indicator
			set		si_import_status = r_c_goal_indicator.si_import_status
			where	nr_sequencia = r_c_goal_indicator.nr_sequencia;
		end loop;

		for r_c_cp_goal_clin_term in c_cp_goal_clin_term loop
			update	cp_goal_clin_term
			set		si_import_status = r_c_cp_goal_clin_term.si_import_status
			where	nr_sequencia = r_c_cp_goal_clin_term.nr_sequencia;
			
			if (r_c_cp_goal_clin_term.si_import_status = 'UP') or (r_c_cp_goal_clin_term.si_import_status_reg = 'UP')  then
				si_goal_review_w	:= 'Y';
			end if;
		end loop;
		end;

begin
/* Verify each base record to identify if there is user changes */

for	r_c_cp_clinical_term in c_cp_clinical_term loop

	select	count(1)
	into STRICT	qt_rec_w
	from	cp_clinical_term a
	where	a.cd_clinical_term =  r_c_cp_clinical_term.cd_clinical_term
	and		a.ie_situacao = 'A'
	and		a.ie_origin = 'P';

	if (qt_rec_w > 0) then
		si_import_status_w	:= 'UP';
	else
		si_import_status_w	:= 'SR';
	end if;
	
	if (si_import_status_w IS NOT NULL AND si_import_status_w::text <> '') then
		update	cp_clinical_term
		set		si_import_status = si_import_status_w
		where	nr_sequencia = r_c_cp_clinical_term.nr_sequencia;
	end if;
	
end loop;


for	r_c_cp_measure in c_cp_measure loop

	select	max(ds_alternative)
	into STRICT	ds_alternative_w
	from	cp_measure a
	where	a.ds_unique_value =  r_c_cp_measure.ds_unique_value
	and		a.ie_situacao = 'A';

	if (ds_alternative_w IS NOT NULL AND ds_alternative_w::text <> '') then
		si_import_status_w	:= 'UP';
	else
		si_import_status_w	:= 'SR';
	end if;
	
	if (si_import_status_w IS NOT NULL AND si_import_status_w::text <> '') then
		update	cp_measure
		set		si_import_status = si_import_status_w,
				ds_alternative = ds_alternative_w
		where	nr_sequencia = r_c_cp_measure.nr_sequencia;
	end if;
	
end loop;

for	r_c_cp_intervention_item in c_cp_intervention_item loop

	select	max(ds_alternative)
	into STRICT	ds_alternative_w
	from	cp_intervention_item a
	where	a.ds_unique_value =  r_c_cp_intervention_item.ds_unique_value
	and		a.ie_situacao = 'A';

	if (ds_alternative_w IS NOT NULL AND ds_alternative_w::text <> '') then
		si_import_status_w	:= 'UP';
	else
		si_import_status_w	:= 'SR';
	end if;
	
	if (si_import_status_w IS NOT NULL AND si_import_status_w::text <> '') then
		update	cp_intervention_item
		set		si_import_status = si_import_status_w,
				ds_alternative = ds_alternative_w
		where	nr_sequencia = r_c_cp_intervention_item.nr_sequencia;
	end if;
	
end loop;

for	r_c_cp_intervention in c_cp_intervention loop

	select	max(nr_sequencia)
	into STRICT	nr_seq_intervention_w
	from	cp_intervention a
	where	a.ds_unique_value =  r_c_cp_intervention.ds_unique_value
	and		a.ie_situacao = 'A';
	
	if (nr_seq_intervention_w > 0) then
	
		insert into cp_intervention_item_assoc(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_intervention,
			nr_seq_interv_item,
			ie_origin,
			ie_situacao,
			si_import_status)
		SELECT
			nextval('cp_intervention_item_assoc_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			r_c_cp_intervention.nr_sequencia,
			nr_seq_interv_item,
			ie_origin,
			'I',
			'UP'
		from	cp_intervention_item_assoc
		where	nr_seq_intervention = nr_seq_intervention_w
		and		ie_situacao = 'A'
		and		ie_origin = 'P';
	
		select	max(ds_alternative)
		into STRICT	ds_alternative_w
		from	cp_intervention
		where	nr_sequencia = nr_seq_intervention_w
		and		ie_situacao = 'A';
		
		if (ds_alternative_w IS NOT NULL AND ds_alternative_w::text <> '') then			
			si_import_status_w	:= 'UP';
		else
			select 	count(1)
			into STRICT	qt_rec_w
			from	cp_intervention_item_assoc
			where	nr_seq_intervention = r_c_cp_intervention.nr_sequencia
			and (ie_origin = 'P' or si_import_status = 'UP')
			and		ie_situacao = 'A';
			
			if (qt_rec_w > 0) then
				si_import_status_w	:= 'UP';
			else
				si_import_status_w	:= 'SR';
			end if;
		end if;
	
	end if;
	
	if (si_import_status_w IS NOT NULL AND si_import_status_w::text <> '') then
		update	cp_intervention
		set		si_import_status = si_import_status_w,
				ds_alternative = ds_alternative_w
		where	nr_sequencia = r_c_cp_intervention.nr_sequencia;
	end if;	
	
end loop;

for	r_c_cp_intervention_clin_term in c_cp_intervention_clin_term loop

	select	count(1)
	into STRICT	qt_rec_w
	from	cp_intervention a
	where	a.nr_sequencia = r_c_cp_intervention_clin_term.nr_seq_intervention
	and		a.si_import_status = 'UP';

	if (qt_rec_w > 0) then
		si_import_status_w	:= 'UP';
	else
		si_import_status_w	:= 'SR';
	end if;
	
	update	cp_intervention_clin_term
	set		si_import_status = si_import_status_w
	where	nr_sequencia = r_c_cp_intervention_clin_term.nr_sequencia;
	
end loop;

for	r_c_cp_indicator in c_cp_indicator loop

	select	max(nr_sequencia)
	into STRICT	nr_seq_indicator_w
	from	cp_indicator a
	where	a.ds_unique_value =  r_c_cp_indicator.ds_unique_value
	and		a.ie_situacao = 'A'
	and		a.ie_origin = 'E';

	if (nr_seq_indicator_w > 0) then
	
	/* Copy the own records */

		insert into cp_indicator_measure(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_indicator,
			nr_seq_measure,
			ie_origin,
			ie_situacao,
			si_import_status,
			nr_seq_goal_indic)
		SELECT
			nextval('cp_indicator_measure_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			r_c_cp_indicator.nr_sequencia,
			nr_seq_measure,
			ie_origin,
			'I',
			'UP',
			nr_seq_goal_indic
		from	cp_indicator_measure
		where	nr_seq_indicator = nr_seq_indicator_w
		and		ie_situacao = 'A'
		and		ie_origin = 'P';
		
		select	max(ds_alternative)
		into STRICT	ds_alternative_w
		from	cp_indicator
		where	nr_sequencia = nr_seq_indicator_w
		and		ie_situacao = 'A';
		
		if (ds_alternative_w IS NOT NULL AND ds_alternative_w::text <> '') then			
			si_import_status_w	:= 'UP';
		else
			select 	count(1)
			into STRICT	qt_rec_w
			from	cp_indicator_measure
			where	nr_seq_indicator = r_c_cp_indicator.nr_sequencia
			and (ie_origin = 'P' or si_import_status = 'UP')
			and		ie_situacao = 'A';
			
			if (qt_rec_w > 0) then
				si_import_status_w	:= 'UP';
			else
				si_import_status_w	:= 'SR';
			end if;
		end if;
			
	end if;
	
	if (si_import_status_w IS NOT NULL AND si_import_status_w::text <> '') then
		update	cp_indicator
		set		si_import_status = si_import_status_w,
				ds_alternative = ds_alternative_w
		where	nr_sequencia = r_c_cp_indicator.nr_sequencia;
	end if;
	
end loop;

for	r_c_cp_goal in c_cp_goal loop

	select	max(nr_sequencia)
	into STRICT	nr_seq_goal_w
	from	cp_goal a
	where	a.ds_unique_value =  r_c_cp_goal.ds_unique_value
	and		a.ie_situacao = 'A';

	if (nr_seq_goal_w > 0) then
	
		/* Copy the own records */

		insert into cp_goal_indicator(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_goal,
			nr_seq_indicator,
			ie_origin,
			ie_situacao,
			si_import_status)
		SELECT
			nextval('cp_goal_indicator_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			r_c_cp_goal.nr_sequencia,
			nr_seq_indicator,
			ie_origin,
			'I',
			'UP'
		from	cp_goal_indicator
		where	nr_seq_goal = nr_seq_goal_w
		and		ie_situacao = 'A'
		and		ie_origin = 'P';
		
		insert into cp_goal_clin_term(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_goal,
			nr_seq_clinical_term,
			ie_origin,
			ie_situacao,
			si_import_status)
		SELECT
			nextval('cp_goal_clin_term_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			r_c_cp_goal.nr_sequencia,
			nr_seq_clinical_term,
			ie_origin,
			ie_situacao,
			'UP'
		from	cp_goal_clin_term
		where	nr_seq_goal = nr_seq_goal_w
		and		ie_situacao = 'A'
		and		ie_origin = 'P';
	
		select	max(ds_alternative)
		into STRICT	ds_alternative_w
		from	cp_goal
		where	nr_sequencia = nr_seq_goal_w
		and		ie_situacao = 'A';
		
		if (ds_alternative_w IS NOT NULL AND ds_alternative_w::text <> '') then			
			si_import_status_w	:= 'UP';
		else
			select 	count(1)
			into STRICT	qt_rec_w
			from	cp_goal_indicator
			where	nr_seq_goal = r_c_cp_goal.nr_sequencia
			and (ie_origin = 'P' or si_import_status = 'UP')
			and		ie_situacao = 'A';
			
			if (qt_rec_w > 0) then
				si_import_status_w	:= 'UP';
			else
				select 	count(1)
				into STRICT	qt_rec_w
				from	cp_goal_clin_term
				where	nr_seq_goal = r_c_cp_goal.nr_sequencia
				and (ie_origin = 'P' or si_import_status = 'UP')
				and		ie_situacao = 'A';
				
				if (qt_rec_w > 0) then
					si_import_status_w	:= 'UP';
				else
					si_import_status_w	:= 'SR';
				end if;
					
			end if;
		end if;
	
	end if;
	
	if (si_import_status_w IS NOT NULL AND si_import_status_w::text <> '') then
		update	cp_goal
		set		si_import_status = si_import_status_w,
				ds_alternative = ds_alternative_w
		where	nr_sequencia = r_c_cp_goal.nr_sequencia;
	end if;
	
	
end loop;

for	r_c_cp_problem in c_cp_problem loop

	select	max(ds_alternative)
	into STRICT	ds_alternative_w
	from	cp_problem a
	where	a.ds_unique_value =  r_c_cp_problem.ds_unique_value
	and		a.ie_situacao = 'A'
	and		(a.ds_alternative IS NOT NULL AND a.ds_alternative::text <> '');

	if (ds_alternative_w IS NOT NULL AND ds_alternative_w::text <> '') then
		si_import_status_w	:= 'UP';
	else
		si_import_status_w	:= 'SR';
	end if;
	
	if (si_import_status_w IS NOT NULL AND si_import_status_w::text <> '') then
		update	cp_problem
		set		si_import_status = si_import_status_w,
				ds_alternative = ds_alternative_w
		where	nr_sequencia = r_c_cp_problem.nr_sequencia;
	end if;
	
end loop;

for	r_c_cp_guidance in c_cp_guidance loop

	select	count(1)
	into STRICT	qt_rec_w
	from	cp_guidance a
	where	a.ds_guidance =  r_c_cp_guidance.ds_guidance
	and		a.ie_situacao = 'A'
	and		a.ie_origin = 'P';

	if (qt_rec_w > 0) then
		si_import_status_w	:= 'UP';
	else
		si_import_status_w	:= 'SR';
	end if;
	
	if (si_import_status_w IS NOT NULL AND si_import_status_w::text <> '') then
		update	cp_guidance
		set		si_import_status = si_import_status_w
		where	nr_sequencia = r_c_cp_guidance.nr_sequencia;
	end if;
	
end loop;
	
/* --------------------Start checking the care plans--------------------------- */

for r_c_care_plan in c_care_plan loop
	nr_seq_care_plan_w 		:= r_c_care_plan.nr_sequencia;
	si_care_plan_review_w	:= 'N';
	
	/* Previous care plan */

	select	max(a.nr_sequencia)
	into STRICT	nr_seq_prev_care_plan_w
	from	care_plan a
	where	a.ie_situacao = 'A'
	and		a.ds_unique_value = r_c_care_plan.ds_unique_value
	and		a.nr_sequencia <> r_c_care_plan.nr_sequencia;
	
	/* --------------Clinical terms--------------- */


	
	/* Copy the own records */

	insert into cp_clinical_term_assoc(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_care_plan,
		nr_seq_clin_term,
		ie_origin,
		ie_situacao,
		si_import_status)
	SELECT
		nextval('cp_clinical_term_assoc_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_care_plan_w,
		nr_seq_clin_term,
		ie_origin,
		'I',
		'UP'
	from	cp_clinical_term_assoc
	where	nr_seq_care_plan = nr_seq_prev_care_plan_w
	and		ie_situacao = 'A'
	and		ie_origin = 'P';
	
	/*Verifiy if any pending */

	for r_c_cp_clinical_term_assoc in c_cp_clinical_term_assoc loop
		update	cp_clinical_term_assoc
		set		si_import_status = r_c_cp_clinical_term_assoc.si_import_status
		where	nr_sequencia = r_c_cp_clinical_term_assoc.nr_sequencia;
		
		if (r_c_cp_clinical_term_assoc.si_import_status = 'UP') or (r_c_cp_clinical_term_assoc.si_import_status_reg = 'UP')  then
			si_care_plan_review_w	:= 'Y';
		end if;
	end loop;
	
	/* ----------------Education--------------- */


	
	/* Copy own records */

	insert into cp_education(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_care_plan,
		nr_seq_goal,
		ie_origin,
		ie_situacao,
		si_import_status)
	SELECT
		nextval('cp_education_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_care_plan_w,
		nr_seq_goal,
		ie_origin,
		'I',
		'UP'
	from	cp_education
	where	nr_seq_care_plan = nr_seq_prev_care_plan_w
	and		ie_situacao = 'A'
	and		ie_origin = 'P';
	
	for r_c_cp_education in c_cp_education loop
		review_goal(r_c_cp_education.nr_seq_goal);
		
		if (r_c_cp_education.si_import_status = 'UP') or (r_c_cp_education.si_import_status_reg = 'UP') or (si_goal_review_w = 'Y') then
			si_import_status_w := 'UP';
		else
			si_import_status_w	:= 'SR';
		end if;
		
		if (si_import_status_w IS NOT NULL AND si_import_status_w::text <> '') then
			update	cp_education
			set		si_import_status = si_import_status_w
			where	nr_sequencia = r_c_cp_education.nr_sequencia;
		end if;
	end loop;
	
	select	count(1)
	into STRICT	qt_rec_w
	from	cp_education
	where	nr_seq_care_plan = nr_seq_care_plan_w
	and		si_import_status = 'UP'
	and		ie_situacao = 'A';

	if (qt_rec_w > 0) then
		si_care_plan_review_w	:= 'Y';
	end if;
	
	/* Problems */

	
	insert into cp_possible_prob(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_care_plan,
		nr_seq_problem,
		ie_origin,
		ie_situacao,
		si_import_status)
	SELECT
		nextval('cp_possible_prob_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_care_plan_w,
		nr_seq_problem,
		ie_origin,
		'I',
		'UP'
	from	cp_possible_prob
	where	nr_seq_care_plan = nr_seq_prev_care_plan_w
	and		ie_situacao = 'A'
	and		ie_origin = 'P';
			
	for	r_c_cp_possible_prob in c_cp_possible_prob loop
		nr_seq_possible_prob_w	:= r_c_cp_possible_prob.nr_sequencia;
		/* Goals */
		
	
		for r_c_cp_problem_goal in c_cp_problem_goal loop
			review_goal(r_c_cp_problem_goal.nr_seq_goal);
		end loop;
		
		/* Intervention plan associated */

		for r_c_cp_interv_plan in c_cp_interv_plan loop
			nr_seq_interv_plan_w	:= r_c_cp_interv_plan.nr_sequencia;
		
			/* Previous intervention_plan */

			select	max(a.nr_sequencia)
			into STRICT	nr_seq_prev_interv_plan_w
			from	cp_interv_plan a
			where	a.ie_situacao = 'A'
			and		a.ds_unique_value = r_c_cp_interv_plan.ds_unique_value;
			
			insert into cp_interv_plan(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_possible_prob,
					ds_unique_value,
					ds_display_name,
					nr_seq_order,
					ds_alternative,
					ie_origin,
					ie_situacao,
					si_import_status)
				SELECT
					nextval('cp_interv_plan_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_interv_plan_w,
					ds_unique_value,
					ds_display_name,
					nr_seq_order,
					ds_alternative,
					ie_origin,
					'I',
					'UP'
				from	cp_interv_plan
				where	nr_sequencia = nr_seq_prev_interv_plan_w
				and		ie_situacao = 'A'
				and		ie_origin = 'P';
				
			insert into cp_interv_plan_assoc(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_interv_plan,
					nr_seq_intervention,
					ie_origin,
					ie_situacao,
					si_import_status)
				SELECT
					nextval('cp_interv_plan_assoc_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_interv_plan_w,
					nr_seq_intervention,
					ie_origin,
					'I',
					'UP'
				from	cp_interv_plan_assoc
				where	nr_seq_interv_plan = nr_seq_prev_interv_plan_w
				and		ie_situacao = 'A'
				and		ie_origin = 'P';
			
			insert into cp_interv_plan_guid(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_interv_plan,
					nr_seq_guidance,
					ie_origin,
					ie_situacao,
					si_import_status)
				SELECT
					nextval('cp_interv_plan_guid_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_interv_plan_w,
					nr_seq_guidance,
					ie_origin,
					'I',
					'UP'
				from	cp_interv_plan_guid
				where	nr_seq_interv_plan = nr_seq_prev_interv_plan_w
				and		ie_situacao = 'A'
				and		ie_origin = 'P';
			
			for r_c_cp_interv_plan_assoc in c_cp_interv_plan_assoc loop
			
				qt_rec_w	:= 0;
				if (nr_seq_prev_interv_plan_w IS NOT NULL AND nr_seq_prev_interv_plan_w::text <> '') then
					select	count(1)
					into STRICT	qt_rec_w
					from	cp_intervention b,
							cp_interv_plan_assoc a
					where	b.nr_sequencia = a.nr_seq_intervention
					and (b.ie_origin = 'P' or b.si_import_status = 'UP')
					and		a.ie_situacao = 'A'
					and		a.nr_seq_interv_plan = nr_seq_prev_interv_plan_w;
				end if;
				
				if (qt_rec_w > 0) then
					si_import_status_w	:= 'UP';
					si_interv_plan_review_w	:= 'Y';
				else
					si_import_status_w	:= 'SR';
				end if;
			
				if (si_import_status_w IS NOT NULL AND si_import_status_w::text <> '') then
					update	cp_interv_plan_assoc
					set		si_import_status = si_import_status_w
					where	nr_sequencia = r_c_cp_interv_plan_assoc.nr_sequencia;
				end if;
				
			end loop;
			
			for r_c_cp_interv_plan_guid in c_cp_interv_plan_guid loop
				qt_rec_w	:= 0;
				
				if (nr_seq_prev_interv_plan_w IS NOT NULL AND nr_seq_prev_interv_plan_w::text <> '') then
					select	count(1)
					into STRICT	qt_rec_w
					from	cp_guidance b,
							cp_interv_plan_guid a
					where	a.nr_seq_guidance = b.nr_sequencia
					and (b.ie_origin = 'P' or b.si_import_status = 'UP')
					and		a.ie_situacao = 'A'
					and		a.nr_seq_interv_plan = nr_seq_prev_interv_plan_w;
				end if;
			
				if (qt_rec_w > 0) then
					si_import_status_w	:= 'UP';
					si_interv_plan_review_w	:= 'Y';
				else
					si_import_status_w	:= 'SR';
				end if;
			
				if (si_import_status_w IS NOT NULL AND si_import_status_w::text <> '') then
					update	cp_interv_plan_guid
					set		si_import_status = si_import_status_w
					where	nr_sequencia = r_c_cp_interv_plan_guid.nr_sequencia;
				end if;
				
			end loop;
			
			if (si_interv_plan_review_w = 'Y') then
				si_import_status_w	:= 'UP';
			end if;
			
			if (si_import_status_w IS NOT NULL AND si_import_status_w::text <> '') then
				update	cp_interv_plan
				set		si_import_status = si_import_status_w
				where	nr_sequencia = r_c_cp_interv_plan.nr_sequencia;
			end if;
			
		end loop;
	
		if (r_c_cp_possible_prob.si_import_status = 'UP') or (r_c_cp_possible_prob.si_import_status_reg = 'UP') or (si_goal_review_w = 'Y') or (si_interv_plan_review_w = 'Y') then
			si_import_status_w	:= 'UP';
			si_care_plan_review_w	:= 'Y';
		else
			si_import_status_w	:= 'SR';
		end if;
	
		if (si_import_status_w IS NOT NULL AND si_import_status_w::text <> '') then
			update	cp_possible_prob
			set		si_import_status = si_import_status_w
			where	nr_sequencia = r_c_cp_possible_prob.nr_sequencia;
		end if;
		
	end loop;
	
	/* Population */


	
	/* Copy own records */

	insert into cp_population(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_care_plan,
		ie_population,
		ie_origin,
		ie_situacao,
		qt_min_age_years,
		qt_max_age_years,
		qt_min_age_months,
		qt_max_age_months,
		qt_min_age_days,
		qt_max_age_days,
		ie_clinica,
		si_import_status)
	SELECT
		nextval('cp_population_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_care_plan_w,
		ie_population,
		ie_origin,
		'I',
		qt_min_age_years,
		qt_max_age_years,
		qt_min_age_months,
		qt_max_age_months,
		qt_min_age_days,
		qt_max_age_days,
		ie_clinica,
		'UP'
	from	cp_population
	where	nr_seq_care_plan = nr_seq_prev_care_plan_w
	and		ie_situacao = 'A'
	and		ie_origin = 'P';
	
	for r_c_cp_population in c_cp_population loop
	
		select	count(1)
		into STRICT	qt_rec_w
		from	cp_population  a
		where	a.nr_seq_care_plan = r_c_cp_population.nr_seq_care_plan
		and		a.ie_situacao = 'A'
		and		a.ie_origin = 'P';

		if (qt_rec_w > 0) then
			si_import_status_w	:= 'UP';
			si_care_plan_review_w	:= 'Y';
		else
			si_import_status_w	:= 'SR';
		end if;
		
		if (si_import_status_w IS NOT NULL AND si_import_status_w::text <> '') then
			update	cp_population
			set		si_import_status = si_import_status_w
			where	nr_sequencia = r_c_cp_population.nr_sequencia;
		end if;
		
	end loop;
	
	/* Keyword */


	
	/* Copy own records */

	insert into cp_keyword(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_care_plan,
		ie_origin,
		ie_situacao,
		ds_keyword,
		si_import_status)
	SELECT
		nextval('cp_keyword_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_care_plan_w,
		ie_origin,
		'I',
		ds_keyword,
		'UP'
	from	cp_keyword
	where	nr_seq_care_plan = nr_seq_prev_care_plan_w
	and		ie_situacao = 'A'
	and		ie_origin = 'P';
	
	for r_c_cp_keyword in c_cp_keyword loop
	
		select	count(1)
		into STRICT	qt_rec_w
		from	cp_keyword  a
		where	a.nr_seq_care_plan =  r_c_cp_keyword.nr_seq_care_plan
		and		a.ie_situacao = 'A'
		and		a.ie_origin = 'P';

		if (qt_rec_w > 0) then
			si_import_status_w	:= 'UP';
			si_care_plan_review_w	:= 'Y';
		else
			si_import_status_w	:= 'SR';
		end if;
		
		if (si_import_status_w IS NOT NULL AND si_import_status_w::text <> '') then
			update	cp_keyword
			set		si_import_status = si_import_status_w
			where	nr_sequencia = r_c_cp_keyword.nr_sequencia;
		end if;
		
	end loop;
	
	if (r_c_care_plan.ds_alternative IS NOT NULL AND r_c_care_plan.ds_alternative::text <> '') then
		si_care_plan_review_w	:= 'Y';
	end if;
	
	if (si_care_plan_review_w = 'Y') then
	
		update	care_plan
		set		si_import_status = 'UP'
		where	nr_sequencia = nr_seq_care_plan_w;
		
	else
	
		update	care_plan
		set		si_import_status = 'SR'
		where	nr_sequencia = nr_seq_care_plan_w;
	
		CALL cp_active_inactive_care_plan(nr_seq_care_plan_w, nm_usuario_p);
	end if;
	
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cp_records_system_review (nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

