-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE contabiliza_perdas_receitas ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


cd_material_w                   integer;
cd_procedimento_w               bigint;
ie_origem_proced_w              bigint;
qt_existe_prot_w                integer;
cd_conta_credito_w              varchar(20);
cd_conta_debito_w               varchar(20);
cd_convenio_w                   integer := 0;
cd_categoria_w                  varchar(10);
cd_centro_custo_w               integer;
ie_tipo_atendimento_w           smallint;
ie_cancelamento_w               varchar(01);
nr_atendimento_w                bigint;
nr_doc_convenio_w               varchar(20);
cd_conta_contabil_w             varchar(20);
cd_setor_atendimento_w          integer;
vl_material_w                   double precision;
ie_valor_contabil_w             varchar(1) := 'P';
cd_estabelecimento_w            smallint;
ie_data_lote_w                  varchar(2) := 'S';
cd_tipo_lote_contabil_w         bigint;
cd_evento_w                     bigint;
nr_sequencia_movto_w            integer;
cd_acao_w                       varchar(1);
ie_debito_credito_w             varchar(1);
cd_historico_w                  bigint := 602;
ds_compl_historico_w            varchar(2000);
ds_compl_historico_ww           varchar(2000);
dt_movimento_w                  timestamp;
dt_proc_mat_w                   timestamp;
dt_mesano_referencia_w          timestamp;
nr_seq_agrupamento_w            bigint;
ie_tipo_contab_w                integer := 0;
ds_convenio_w                   varchar(255);
cd_centro_custo_mat_w           integer;
ie_centro_custo_w               varchar(1);
nr_reg_contab_w                 integer;
nr_reg_sem_conta_w              integer;
nm_pessoa_fisica_w              varchar(80);
nm_pessoa_nota_fiscal_w         varchar(80);
ie_contab_atendimento_w         varchar(1) := 'N';
cd_procedimento_sc_w            bigint;
cd_material_sc_w                integer;
nr_atend_mat_sc_w               bigint;
nr_atend_proc_sc_w              bigint;
nr_seq_prot_lido_w              bigint;
nr_seq_protocolo_w              bigint;
nr_seq_protocolo_par_w          bigint;
nr_seq_protocolo_nota_w         bigint;
dt_entrega_convenio_w           timestamp;
ie_nf_contab_rec_w              varchar(01);
ie_nf_contab_rec_particular_w   varchar(01);
ie_nf_contab_rec_convenio_w     varchar(01);
nr_nf_protocolo_w               varchar(255);
ie_lote_ctb_trib_nf_w           varchar(15);
nr_seq_trans_rec_w              bigint;
nr_documento_w                  varchar(255);
dt_contabil_w                   timestamp;
vl_transacao_w                  double precision;
cd_pessoa_fisica_w              varchar(10);
cd_cgc_w                        varchar(14);
nr_sequencia_w                  bigint;
nr_nota_fiscal_w                varchar(255);
ds_retorno_w                    varchar(4000);
ie_prot_ctb_rec_w               varchar(15);
nr_protocolo_w                  varchar(40);
ds_titulos_conta_w              varchar(255);
ds_titulos_prot_w               varchar(255);
ie_tit_ctb_rec_w                varchar(01);
nr_interno_conta_w              bigint;
nr_interno_conta_nota_w         bigint;
ds_mesano_referencia_w          varchar(40);
ds_mesano_referencia_abrev_w    varchar(40);
ie_tipo_convenio_w              smallint;
ds_conteudo_w                   varchar(255) := '';
ie_compl_hist_w                 varchar(3);
ie_contab_repasse_receita_w     varchar(1);
ds_retorno_rep_w                varchar(255);
vl_repasse_w                    double precision;
cd_local_estoque_w              smallint;
ie_classif_contab_conv_w        varchar(1);
nr_documento_ww                 movimento_contabil.nr_documento%type;
ie_origem_documento_w           movimento_contabil.ie_origem_documento%type;
nm_agrupador_w                  varchar(255);
nr_seq_proc_interno_w           procedimento_paciente.nr_seq_proc_interno%type;
cd_sequencia_parametro_w        bigint;

/* cursor para ler a conta a ser contabilizada da procedimento_paciente */

c010 CURSOR FOR
    SELECT  x.cd_convenio,
            m.cd_categoria,
            a.ie_tipo_atendimento,
            coalesce(c.ie_cancelamento,'N'),
            c.nr_atendimento,
            coalesce(m.nr_doc_convenio, '0'),
            /*m.cd_conta_contabil, retirado por fabio, porque busco com a define_conta_material*/

            m.cd_setor_atendimento,
            sum(obter_custo_medio_material(a.cd_estabelecimento, trunc(m.dt_atendimento,'mm'), m.cd_material)) vl_material,
            coalesce(obter_valor_conv_estab(x.cd_convenio, a.cd_estabelecimento, 'IE_VALOR_CONTABIL'),'P'),
            a.cd_estabelecimento,
            c.dt_mesano_referencia,
            c.nr_seq_protocolo,
            c.nr_interno_conta,
            sum(ctb_obter_valor_repasse(m.nr_sequencia,'M',ie_contab_repasse_receita_w, c.ie_cancelamento)),
            trunc(m.dt_atendimento),
            m.cd_material,
            m.cd_local_estoque,
            null,
            null,
            null nr_seq_proc_interno
    from    convenio x,
            conta_paciente c,
            atendimento_paciente a,
            material_atend_paciente m
    where   m.nr_atendimento                = a.nr_atendimento
    and     m.nr_lote_contabil              = nr_lote_contabil_p
    and     coalesce(m.nr_seq_proc_pacote,0)     <> m.nr_sequencia
    and     m.nr_interno_conta              = c.nr_interno_conta
    and     coalesce(cd_motivo_exc_conta::text, '') = ''
    and     coalesce(ds_retorno_w::text, '') = ''
    and     coalesce(vl_material,0)              <> 0
    and     ie_exclusao_p                   <> 'S'
    and     c.cd_convenio_parametro = x.cd_convenio
    group by x.cd_convenio,
             m.cd_categoria,
             a.ie_tipo_atendimento,
             coalesce(c.ie_cancelamento,'N'),
             c.nr_atendimento,
             coalesce(m.nr_doc_convenio, '0'),
             m.cd_setor_atendimento,
             coalesce(obter_valor_conv_estab(x.cd_convenio, a.cd_estabelecimento, 'IE_VALOR_CONTABIL'),'P'),
             a.cd_estabelecimento,
             c.dt_mesano_referencia,
             c.nr_seq_protocolo,
             c.nr_interno_conta,
             m.cd_material,
             trunc(m.dt_atendimento),
             m.cd_local_estoque

union all

    SELECT  x.cd_convenio,
            p.cd_categoria,
            a.ie_tipo_atendimento,
            coalesce(c.ie_cancelamento,'N'),
            c.nr_atendimento,
            coalesce(p.nr_doc_convenio, '0'),
            /*p.cd_conta_contabil, retirado por fabio, porque busco com a define_conta_material*/

            p.cd_setor_atendimento,
            sum(vl_procedimento) vl_procedimento,
            coalesce(obter_valor_conv_estab(x.cd_convenio, a.cd_estabelecimento, 'IE_VALOR_CONTABIL'),'P'),
            a.cd_estabelecimento,
            c.dt_mesano_referencia,
            c.nr_seq_protocolo,
            c.nr_interno_conta,
            sum(ctb_obter_valor_repasse(p.nr_sequencia,'P',ie_contab_repasse_receita_w, c.ie_cancelamento)),
            trunc(p.dt_procedimento),
            null,
            null,
            p.cd_procedimento,
            p.ie_origem_proced,
            p.nr_seq_proc_interno
    from    convenio x,
            conta_paciente c,
            atendimento_paciente a,
            procedimento_paciente p
    where   p.nr_atendimento                = a.nr_atendimento
    and     p.nr_lote_contabil              = nr_lote_contabil_p
    and     coalesce(p.nr_seq_proc_pacote,0)     <> p.nr_sequencia
    and     p.nr_interno_conta              = c.nr_interno_conta
    and     coalesce(p.cd_motivo_exc_conta::text, '') = ''
    and     coalesce(ds_retorno_w::text, '') = ''
    and     ie_exclusao_p           <> 'S'
    and     coalesce(vl_procedimento, 0) <> 0
    and     c.cd_convenio_parametro = x.cd_convenio
    group by        x.cd_convenio,
            p.cd_categoria,
            a.ie_tipo_atendimento,
            coalesce(c.ie_cancelamento,'N'),
            c.nr_atendimento,
            coalesce(p.nr_doc_convenio, '0'),
            p.cd_setor_atendimento,
            coalesce(obter_valor_conv_estab(x.cd_convenio, a.cd_estabelecimento, 'IE_VALOR_CONTABIL'),'P'),
            a.cd_estabelecimento,
            c.dt_mesano_referencia,
            c.nr_seq_protocolo,
            c.nr_interno_conta,
            trunc(p.dt_procedimento),
            p.cd_procedimento,
            p.ie_origem_proced,
            p.nr_seq_proc_interno;

/* cursor para ler os tributos da nota fiscal */

c020 CURSOR FOR
    SELECT  b.nr_seq_trans_rec,
            x.nr_sequencia,
            a.vl_tributo,
            x.cd_pessoa_fisica,
            x.cd_cgc,
            x.nr_nota_fiscal,
            x.nr_seq_protocolo,
            x.nr_interno_conta,
            substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc),1,80)
    from    tributo b,
            nota_fiscal_trib a,
            nota_fiscal x
    where   a.cd_tributo            = b.cd_tributo
    and     a.nr_sequencia  = x.nr_sequencia
    and     x.nr_lote_contabil      = nr_lote_contabil_p
    and     (b.nr_seq_trans_rec IS NOT NULL AND b.nr_seq_trans_rec::text <> '');



BEGIN
    /*Validacao para impedir a geracao em lotes incorretos */

        if (ie_exclusao_p <> 'S') then
                select b.cd_tipo_lote_contabil
                into STRICT cd_tipo_lote_contabil_w
                from lote_contabil b
                where b.nr_lote_contabil = nr_lote_contabil_p;
                if (cd_tipo_lote_contabil_w <> 20) then
                        CALL wheb_mensagem_pck.exibir_mensagem_abort(261346);
                end if;
        end if;

    delete
    from    lote_contabil_log
    where   nr_lote_contabil = nr_lote_contabil_p
    and     cd_log_lote in (9,10);

    commit;

    cd_sequencia_parametro_w := null;
    ds_retorno_w    := null;

    select  obter_se_compl_tipo_lote(cd_estabelecimento, cd_tipo_lote_contabil),
            cd_tipo_lote_contabil
    into STRICT    ie_compl_hist_w,
            cd_tipo_lote_contabil_w
    from    lote_contabil
    where   nr_lote_contabil        = nr_lote_contabil_p;

    delete  from w_movimento_contabil
    where   nr_lote_contabil        = nr_lote_contabil_p;
    commit;

    /* leitura para identificar o codigo do historico */

    select  cd_estabelecimento
    into STRICT    cd_estabelecimento_w
    from    lote_contabil
    where   nr_lote_contabil        = nr_lote_contabil_p;

    select  max(cd_historico)
    into STRICT    cd_historico_w
    from    evento_contabil_param_estab
    where   cd_tipo_lote_contabil = 6
    and     cd_estabelecimento      = cd_estabelecimento_w;

    select  coalesce(max(ie_nf_contab_rec),'N'),
            coalesce(max(ie_nf_contab_rec_conv),'N'),
            coalesce(max(ie_lote_ctb_trib_nf),'LNF'),
            coalesce(max(ie_prot_ctb_rec),'N'),
            coalesce(max(ie_titulo_ctb_receita),'N'),
            coalesce(max(ie_contab_repasse_receita),'N')
    into STRICT    ie_nf_contab_rec_particular_w,
            ie_nf_contab_rec_convenio_w,
            ie_lote_ctb_trib_nf_w,
            ie_prot_ctb_rec_w,
            ie_tit_ctb_rec_w,
            ie_contab_repasse_receita_w
    from    parametro_faturamento
    where   cd_estabelecimento      = cd_estabelecimento_w;

    /* identifica se e exclusao do lote */

    if (ie_exclusao_p          = 'S') then
            delete  from movimento_contabil
            where   nr_lote_contabil        = nr_lote_contabil_p;

            update  lote_contabil
            set     vl_credito              = 0,
                    vl_debito               = 0
            where   nr_lote_contabil        = nr_lote_contabil_p;

            update  material_atend_paciente
            set     nr_lote_contabil        = 0
            where   nr_lote_contabil        = nr_lote_contabil_p;

            update  procedimento_paciente
            set     nr_lote_contabil        = 0
            where   nr_lote_contabil        = nr_lote_contabil_p;

            update  conta_paciente
            set     nr_lote_contabil         = NULL,
                    nr_lote_repasse = 0
            where   nr_lote_contabil        = nr_lote_contabil_p;

            update  nota_fiscal
            set     nr_lote_contabil        = 0
            where   nr_lote_contabil        = nr_lote_contabil_p;

    /*      zerar os lotes contabeis de repasse se desfaco um lote de receitas*/

            update  material_repasse
            set     nr_lote_contabil        = 0
            where   nr_lote_contabil        = nr_lote_contabil_p;

            update  procedimento_repasse
            set     nr_lote_contabil        = 0
            where   nr_lote_contabil        = nr_lote_contabil_p;

            update  conta_paciente
            set     nr_lote_repasse = 0
            where   nr_lote_repasse = nr_lote_contabil_p;

            update  protocolo_convenio
            set     nr_seq_lote_repasse= 0
            where   nr_seq_lote_repasse     = nr_lote_contabil_p;
    else
            select  max(vl_parametro)
            into STRICT    nr_seq_protocolo_par_w
            from    lote_contabil_parametro
            where   nr_lote_contabil        = nr_lote_contabil_p
            and     nr_seq_parametro        = 1;
            if (coalesce(nr_seq_protocolo_par_w::text, '') = '') then
                    --'Nao foi informado o numero do protocolo!');
                    CALL wheb_mensagem_pck.exibir_mensagem_abort(182399);
            end if;

            select  substr(max(ds_valor_parametro),1,20)
            into STRICT    cd_conta_debito_w
            from    lote_contabil_parametro
            where   nr_lote_contabil        = nr_lote_contabil_p
            and     nr_seq_parametro        = 2;

            /*select        substr(max(ds_valor_parametro),1,20)
            into    cd_conta_credito_w
            from    lote_contabil_parametro
            where   nr_lote_contabil        = nr_lote_contabil_p
            and     nr_seq_parametro        = 3;*/
            if (coalesce(cd_conta_debito_w,'0') = '0')  then
                    --'Nao foi informado a conta de Debito!' || '#@#@');
                    CALL wheb_mensagem_pck.exibir_mensagem_abort(182397);
            end if;

            select  count(*)
            into STRICT    qt_existe_prot_w
            from    protocolo_convenio
            where   nr_seq_protocolo = nr_seq_protocolo_par_w;
            if (qt_existe_prot_w = 0) then
                    --'Nao existe protocolo = ' || nr_seq_protocolo_par_w);
                    CALL wheb_mensagem_pck.exibir_mensagem_abort(182398, 'NR_SEQ_PROTOCOLO_PAR='||nr_seq_protocolo_par_w);
            end if;

            update  conta_paciente
            set     nr_lote_contabil = nr_lote_contabil_p
            where   nr_interno_conta  in (
                    SELECT  b.nr_interno_conta
                    from    conta_paciente b,
                            protocolo_convenio a
                    where   a.nr_seq_protocolo = b.nr_seq_protocolo
                    and     coalesce(nr_lote_contabil,0) = 0
                    and     a.ie_status_protocolo   = 2
                    and     a.nr_seq_protocolo = nr_seq_protocolo_par_w);

            update  procedimento_paciente
            set     nr_lote_contabil        =  nr_lote_contabil_p
            where   nr_interno_conta in (
                    SELECT  nr_interno_conta
                    from    conta_paciente
                    where   nr_lote_contabil = nr_lote_contabil_p);

            update  material_atend_paciente
            set     nr_lote_contabil        =  nr_lote_contabil_p
            where   nr_interno_conta in (
                    SELECT  nr_interno_conta
                    from    conta_paciente
                    where   nr_lote_contabil        = nr_lote_contabil_p);

            nr_sequencia_movto_w    := 0;
            select  coalesce(dt_referencia, trunc(clock_timestamp(),'month'))
            into STRICT    dt_movimento_w
            from    lote_contabil
            where   nr_lote_contabil = nr_lote_contabil_p;

            ie_data_lote_w := obter_param_usuario(135, 3, 0, nm_usuario_p, cd_estabelecimento_w, ie_data_lote_w);

            nm_agrupador_w  := coalesce(trim(both obter_agrupador_contabil(20)),'NR_ATENDIMENTO');


            open c010;
            loop
            fetch c010 into
                    cd_convenio_w,
                    cd_categoria_w,
                    ie_tipo_atendimento_w,
                    ie_cancelamento_w,
                    nr_atendimento_w,
                    nr_doc_convenio_w,
                    cd_setor_atendimento_w,
                    vl_material_w,
                    ie_valor_contabil_w,
                    cd_estabelecimento_w,
                    dt_mesano_referencia_w,
                    nr_seq_prot_lido_w,
                    nr_interno_conta_w,
                    vl_repasse_w,
                    dt_proc_mat_w,
                    cd_material_w,
                    cd_local_estoque_w,
                    cd_procedimento_w,
                    ie_origem_proced_w,
                    nr_seq_proc_interno_w;
            EXIT WHEN NOT FOUND; /* apply on c010 */
                    cd_centro_custo_w       := 0;
                    cd_conta_contabil_w     := '';

                    select  coalesce(max(ie_classif_contabil),'0')
                    into STRICT    ie_classif_contab_conv_w
                    from    convenio
                    where   cd_convenio = cd_convenio_w;

                    if (nm_agrupador_w = 'NR_INTERNO_CONTA') then
                               nr_seq_agrupamento_w := nr_interno_conta_w;
                    elsif (nm_agrupador_w = 'NR_ATENDIMENTO')       then
                               nr_seq_agrupamento_w := nr_atendimento_w;
                    end if;

                    if (coalesce(nr_seq_agrupamento_w,0) = 0)then
                            nr_seq_agrupamento_w := nr_atendimento_w;
                    end if;


                    /* obter a conta de despesa */

                    if (coalesce(cd_material_w,0) > 0) then
                            SELECT * FROM define_conta_material(
                                            cd_estabelecimento_w, cd_material_w, 3, null, cd_setor_atendimento_w, ie_classif_contab_conv_w, ie_tipo_atendimento_w, null, cd_convenio_w, cd_categoria_w, cd_local_estoque_w, null, dt_proc_mat_w, cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;

                    else
                            SELECT * FROM define_conta_procedimento(
                                            cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_w, 3, null, cd_setor_atendimento_w, ie_classif_contab_conv_w, ie_tipo_atendimento_w, null, cd_convenio_w, cd_categoria_w, dt_proc_mat_w, cd_conta_contabil_w, cd_centro_custo_w, null, 'N', null, null, null, null, null, null, null, nr_seq_proc_interno_w) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;

                    end if;

                    cd_sequencia_parametro_w := philips_contabil_pck.get_parametro_conta_contabil();

                    select  max(b.nm_pessoa_fisica)
                    into STRICT    nm_pessoa_fisica_w
                    from    atendimento_paciente a,
                            pessoa_fisica b
                    where   a.nr_atendimento                = nr_atendimento_w
                    and     a.cd_pessoa_fisica              = b.cd_pessoa_fisica;

                    ie_nf_contab_rec_w      := ie_nf_contab_rec_particular_w;

                    select  coalesce(max(ie_tipo_convenio), 1)
                    into STRICT    ie_tipo_convenio_w
                    from    convenio
                    where   cd_convenio = cd_convenio_w;
                    if (ie_tipo_convenio_w = 2) then
                            ie_nf_contab_rec_w      := ie_nf_contab_rec_convenio_w;
                    end if;

                    if (ie_nf_contab_rec_w = 'S') then

                            if ((nr_seq_prot_lido_w IS NOT NULL AND nr_seq_prot_lido_w::text <> '') and
                                     coalesce(nr_seq_protocolo_w::text, '') = '') or (nr_seq_prot_lido_w <> nr_seq_protocolo_w) then
                                    begin
                                    nr_seq_protocolo_w      := nr_seq_prot_lido_w;

                                    select  dt_entrega_convenio,
                                            substr(obter_nota_conta_protocolo(nr_seq_prot_lido_w,0),1,254),
                                            nr_protocolo,
                                            substr(obter_mes_extenso(substr(obter_desc_mes_ano(dt_mesano_referencia,'N'),1,2),'A'),1,20) || '/' ||
                                                    substr(to_char(dt_mesano_referencia,'dd/mm/yyyy'),7,4),
                                            substr(obter_desc_mes_ano(dt_mesano_referencia,'AB'),1,20)
                                    into STRICT    dt_entrega_convenio_w,
                                            nr_nf_protocolo_w,
                                            nr_protocolo_w,
                                            ds_mesano_referencia_w,
                                            ds_mesano_referencia_abrev_w
                                    from    protocolo_convenio
                                    where   nr_seq_protocolo        = nr_seq_protocolo_w;
                                    exception when others then
                                            dt_entrega_convenio_w := null;
                                    end;

                            select  max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc),1,80))
                            into STRICT    nm_pessoa_nota_fiscal_w
                            from    nota_fiscal x
                            where   x.nr_sequencia = (
                                    SELECT  max(nr_sequencia)
                                    from    nota_fiscal
                                    where   nr_seq_protocolo = nr_seq_protocolo_w);
                            end if;
                    elsif (ie_nf_contab_rec_w = 'C') then
                            begin
                            select  dt_entrega_convenio,
                                    substr(obter_nota_conta_protocolo(nr_seq_prot_lido_w,nr_interno_conta_w),1,254),
                                    nr_protocolo,
                                    substr(obter_mes_extenso(substr(obter_desc_mes_ano(dt_mesano_referencia,'N'),1,2),'A'),1,20) || '/' ||
                                            substr(to_char(dt_mesano_referencia,'dd/mm/yyyy'),7,4),
                                    substr(obter_desc_mes_ano(dt_mesano_referencia,'AB'),1,20)
                            into STRICT    dt_entrega_convenio_w,
                                    nr_nf_protocolo_w,
                                    nr_protocolo_w,
                                    ds_mesano_referencia_w,
                                    ds_mesano_referencia_abrev_w
                            from    protocolo_convenio
                            where   nr_seq_protocolo        = nr_seq_prot_lido_w;
                            exception when others then
                                    dt_entrega_convenio_w := null;
                            end;

                            select  max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc),1,80))
                            into STRICT    nm_pessoa_nota_fiscal_w
                            from    nota_fiscal x
                            where   x.nr_sequencia = (
                                    SELECT  max(nr_sequencia)
                                    from    nota_fiscal
                                    where   nr_interno_conta = nr_interno_conta_w);
                    end if;

                    if (coalesce(ds_mesano_referencia_w::text, '') = '') and (nr_seq_prot_lido_w > 0) then

                            select  substr(obter_mes_extenso(substr(obter_desc_mes_ano(dt_mesano_referencia,'N'),1,2),'A'),1,20) || '/' ||
                                            substr(to_char(dt_mesano_referencia,'dd/mm/yyyy'),7,4),
                                    substr(obter_desc_mes_ano(dt_mesano_referencia,'AB'),1,20)
                            into STRICT    ds_mesano_referencia_w,
                                    ds_mesano_referencia_abrev_w
                            from    protocolo_convenio
                            where   nr_seq_protocolo        = nr_seq_prot_lido_w;
                    end if;

                    if (ie_data_lote_w = 'N') then
                            dt_movimento_w := coalesce(dt_entrega_convenio_w,dt_mesano_referencia_w);
                    end if;
                    nr_sequencia_movto_w  := nr_sequencia_movto_w + 1;
                    ds_compl_historico_w  := null;
                    cd_centro_custo_mat_w := null;

                    /* define o centro de custo da receita */

                    begin
                    select  ie_centro_custo
                    into STRICT    ie_centro_custo_w
                    from    conta_contabil
                    where   cd_conta_contabil = cd_conta_contabil_w;
                    exception when others then
                                    ie_centro_custo_w := 'N';
                    end;
                    if (ie_centro_custo_w = 'S') then
                            select  coalesce(cd_centro_custo_receita, cd_centro_custo)
                            into STRICT    cd_centro_custo_mat_w
                            from    setor_atendimento
                            where   cd_setor_atendimento = cd_setor_atendimento_w;
                    end if;

                            /* define historico por protocolo, atendimento ou guia */

                    if (ie_valor_contabil_w = 'P') then
                            ds_compl_historico_w    :=      nr_lote_contabil_p || ' ' || ds_convenio_w;
                    elsif (ie_valor_contabil_w = 'A') then
                            ds_compl_historico_w    := nr_atendimento_w || ',' || nm_pessoa_fisica_w;
                    else
                            ds_compl_historico_w    := nr_doc_convenio_w || ',' || nm_pessoa_fisica_w;
                    end if;

                    if (ie_nf_contab_rec_w = 'C') or (ie_nf_contab_rec_w = 'S') then
                            ds_compl_historico_w            := ds_compl_historico_w || ' ' || wheb_mensagem_pck.get_texto(799410) || ': '   || nr_nf_protocolo_w;
                    end if;

                    if (ie_prot_ctb_rec_w = 'PI') and (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '') then
                            ds_compl_historico_w            := ds_compl_historico_w || ' ' || wheb_mensagem_pck.get_texto(807469) || ': ' || nr_seq_protocolo_w;
                    end if;

                    if (ie_prot_ctb_rec_w = 'PC') and (nr_protocolo_w IS NOT NULL AND nr_protocolo_w::text <> '') then
                            ds_compl_historico_w            := ds_compl_historico_w || ' ' || wheb_mensagem_pck.get_texto(807469) || ': ' || nr_protocolo_w;
                    end if;

                    if (ie_tit_ctb_rec_w = 'S') then
                            select  substr(obter_titulos_protocolo(nr_seq_protocolo_w),1,200),
                                    substr(obter_titulo_conta_protocolo(nr_seq_protocolo_w,nr_interno_conta_w),1,200)
                            into STRICT    ds_titulos_prot_w,
                                    ds_titulos_conta_w
;
                    end if;

                    if (ds_titulos_prot_w IS NOT NULL AND ds_titulos_prot_w::text <> '') or (ds_titulos_conta_w IS NOT NULL AND ds_titulos_conta_w::text <> '') then
                            ds_compl_historico_w            := ds_compl_historico_w || ' ' || wheb_mensagem_pck.get_texto(807483) || ': '  || coalesce(ds_titulos_conta_w,ds_titulos_prot_w);
                    end if;

                    if (ie_compl_hist_w = 'S') then
                            ds_conteudo_w   := substr(cd_convenio_w                 || '#@' ||
                                                    ds_convenio_w                   || '#@' ||
                                                    nr_atendimento_w                || '#@' ||
                                                    nm_pessoa_fisica_w              || '#@' ||
                                                    nr_interno_conta_w              || '#@' ||
                                                    nr_seq_prot_lido_w              || '#@' ||
                                                    nr_protocolo_w                  || '#@' ||
                                                    nr_doc_convenio_w               || '#@' ||
                                                    nr_nf_protocolo_w               || '#@' ||
                                                    ds_titulos_conta_w              || '#@' ||
                                                    ds_titulos_prot_w               || '#@' ||
                                                    ds_mesano_referencia_w          || '#@' ||
                                                    ds_mesano_referencia_abrev_w    || '#@' ||
                                                    nm_pessoa_nota_fiscal_w,1,255);

                            select  substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w, ds_conteudo_w),1,255)
                            into STRICT    ds_compl_historico_ww
;

                            ds_compl_historico_w    := substr(coalesce(ds_compl_historico_ww, ds_compl_historico_w),1,255);
                    end if;

                    ds_compl_historico_w            := substr(ds_compl_historico_w,1,255);

                    /* Grava movimento debito */

                    if (coalesce(nr_nf_protocolo_w,'0')<> '0') then
                            nr_documento_ww                 := nr_nf_protocolo_w;
                            ie_origem_documento_w           := 1;
                    else
                            nr_documento_ww                 := nr_seq_prot_lido_w;
                            ie_origem_documento_w           := 5;
                    end if;

                    insert into w_movimento_contabil(
                            nr_lote_contabil,
                            nr_sequencia,
                            cd_conta_contabil,
                            ie_debito_credito,
                            cd_historico,
                            dt_movimento,
                            vl_movimento,
                            cd_centro_custo,
                            ds_compl_historico,
                            ds_doc_agrupamento,
                            nr_seq_agrupamento,
                            nr_seq_trans_fin,
                            cd_cgc,
                            cd_pessoa_fisica,
                            nr_documento,
                            ie_origem_documento,
                            cd_sequencia_parametro)
                    values (nr_lote_contabil_p,
                            nr_sequencia_movto_w,
                            cd_conta_debito_w,
                            'D',
                            cd_historico_w,
                            dt_movimento_w,
                            vl_material_w,
                            null,
                            ds_compl_historico_w,
                            null,
                            nr_seq_agrupamento_w,
                            null,
                            null,
                            null,
                            nr_documento_ww,
                            ie_origem_documento_w,
                            cd_sequencia_parametro_w);

                    /* grava movimento credito */

                    if (ie_contab_repasse_receita_w = 'N') or
                            (vl_material_w > 0 AND ie_contab_repasse_receita_w = 'S') then

                            insert into w_movimento_contabil(
                                    nr_lote_contabil,
                                    nr_sequencia,
                                    cd_conta_contabil,
                                    ie_debito_credito,
                                    cd_historico,
                                    dt_movimento,
                                    vl_movimento,
                                    cd_centro_custo,
                                    ds_compl_historico,
                                    ds_doc_agrupamento,
                                    nr_seq_agrupamento,
                                    nr_seq_trans_fin,
                                    cd_cgc,
                                    cd_pessoa_fisica,
                                    nr_documento,
                                    ie_origem_documento,
                                    cd_sequencia_parametro)
                            values (nr_lote_contabil_p,
                                    nr_sequencia_movto_w,
                                    cd_conta_contabil_w,
                                    'C',
                                    cd_historico_w,
                                    dt_movimento_w,
                                    vl_material_w,
                                    cd_centro_custo_mat_w,
                                    ds_compl_historico_w,
                                    null,
                                    nr_seq_agrupamento_w,
                                    null, null,
                                    null,
                                    nr_documento_ww,
                                    ie_origem_documento_w,
                                    cd_sequencia_parametro_w);
                    end if;
            end loop;
            close c010;

            /* contabilizar os repasses junto com a receita
            if      (ie_contab_repasse_receita_w = 'S') then
                    contabiliza_repasse(nr_lote_contabil_p, nm_usuario_p, 'X', ds_retorno_rep_w);
            end if;*/


            /* contabilizar tributos da nota fiscal gerada a partir dos protocolos */

            if (ie_lote_ctb_trib_nf_w = 'LREC') then

                    update  nota_fiscal
                    set     nr_lote_contabil = nr_lote_contabil_p
                    where   nr_seq_protocolo in (
                            SELECT  distinct nr_seq_protocolo
                            from    conta_paciente
                            where   nr_lote_contabil= nr_lote_contabil_p);

                    update  nota_fiscal
                    set     nr_lote_contabil = nr_lote_contabil_p
                    where   nr_interno_conta in (
                            SELECT  distinct nr_interno_conta
                            from    conta_paciente
                            where   nr_lote_contabil= nr_lote_contabil_p);

                    open c020;
                    loop
                    fetch c020 into
                            nr_seq_trans_rec_w,
                            nr_sequencia_w,
                            vl_transacao_w,
                            cd_pessoa_fisica_w,
                            cd_cgc_w,
                            nr_nota_fiscal_w,
                            nr_seq_protocolo_nota_w,
                            nr_interno_conta_nota_w,
                            nm_pessoa_nota_fiscal_w;
                    EXIT WHEN NOT FOUND; /* apply on c020 */

                            nm_pessoa_fisica_w := '';

                            if (nr_interno_conta_nota_w IS NOT NULL AND nr_interno_conta_nota_w::text <> '') then
                                    select  substr(obter_nome_convenio(cd_convenio_parametro),1,60)
                                    into STRICT    ds_convenio_w
                                    from    conta_paciente
                                    where   nr_interno_conta = nr_interno_conta_nota_w;
                            end if;

                            if (nr_seq_protocolo_nota_w IS NOT NULL AND nr_seq_protocolo_nota_w::text <> '') then
                                    select  substr(obter_nome_convenio(cd_convenio),1,60)
                                    into STRICT    ds_convenio_w
                                    from    protocolo_convenio
                                    where   nr_seq_protocolo = nr_seq_protocolo_nota_w;
                                    nr_documento_w          := substr(nr_lote_contabil_p || ' ' || ds_convenio_w || ' ' || wheb_mensagem_pck.get_texto(799410) || ': ' || nr_nota_fiscal_w,1,255);

                                    if (ie_prot_ctb_rec_w = 'PI') and (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '') then
                                            nr_documento_w  := nr_documento_w || ' ' || wheb_mensagem_pck.get_texto(807469) || ': ' || nr_seq_protocolo_nota_w;
                                    end if;

                                    if (ie_prot_ctb_rec_w = 'PC') and (nr_protocolo_w IS NOT NULL AND nr_protocolo_w::text <> '') then
                                            nr_documento_w  := nr_documento_w || ' ' || wheb_mensagem_pck.get_texto(807469) || ': ' || nr_seq_protocolo_nota_w;
                                    end if;
                            end if;

                            nr_seq_agrupamento_w    := nr_sequencia_w;
                            ds_conteudo_w           := '';

                            if (ie_compl_hist_w = 'S') then
                                    ds_conteudo_w   := substr(cd_convenio_w                 || '#@' ||
                                                            ds_convenio_w                   || '#@' ||
                                                            nr_atendimento_w                        || '#@' ||
                                                            nm_pessoa_fisica_w                      || '#@' ||
                                                            nr_interno_conta_nota_w         || '#@' ||
                                                            nr_seq_protocolo_nota_w         || '#@' ||
                                                            nr_protocolo_w                  || '#@' ||
                                                            nr_doc_convenio_w                       || '#@' ||
                                                            nr_nota_fiscal_w                        || '#@' ||
                                                            ds_titulos_conta_w                      || '#@' ||
                                                            ds_titulos_prot_w                       || '#@' ||
                                                            ds_mesano_referencia_abrev_w    || '#@' ||
                                                            nm_pessoa_nota_fiscal_w,1,255);
                            end if;

                            nr_documento_ww                 := nr_nota_fiscal_w;
                            ie_origem_documento_w           := 1;

                            nr_sequencia_movto_w := gerar_contab_trans_financ(
                                    cd_estabelecimento_w, null, nr_lote_contabil_p, nm_usuario_p, '', 0, nr_documento_w, nr_seq_agrupamento_w, dt_movimento_w, vl_transacao_w, nr_seq_trans_rec_w, null, 'VL_TRIBUTO', cd_pessoa_fisica_w, cd_cgc_w, null, null, nr_documento_ww, null, ds_conteudo_w, null, null, null, null, null, null, null, null, null, null, null, null, null, null, nr_sequencia_movto_w, null, null, null, ie_origem_documento_w);
                    end loop;
                    close c020;

                    nm_pessoa_nota_fiscal_w := '';
            end if;

            /*  agrupar o movimento caso todos os registros contenham a conta contabil */

            select  count(*),
                    sum(CASE WHEN coalesce(cd_conta_contabil::text, '') = '' THEN 1  ELSE 0 END )
            into STRICT    nr_reg_contab_w,
                    nr_reg_sem_conta_w
            from    w_movimento_contabil
            where   nr_lote_contabil = nr_lote_contabil_p;
            if (nr_reg_contab_w > 0) then
                    if (nr_reg_sem_conta_w = 0) then
                            commit;
                            CALL agrupa_movimento_contabil( nr_lote_contabil_p, nm_usuario_p);
                    else
                            select  coalesce(max(nr_atendimento),0)
                            into STRICT    nr_atend_mat_sc_w
                            from    material_atend_paciente
                            where   nr_lote_contabil = nr_lote_contabil_p
                            and     coalesce(cd_conta_contabil::text, '') = '';

                            if (nr_atend_mat_sc_w > 0) then
                                    select  coalesce(max(cd_material),0)
                                    into STRICT    cd_material_sc_w
                                    from    material_atend_paciente
                                    where   nr_atendimento = nr_atend_mat_sc_w
                                    and     nr_lote_contabil = nr_lote_contabil_p
                                    and     coalesce(cd_conta_contabil::text, '') = '';
                            end if;

                            select  coalesce(max(nr_atendimento),0)
                            into STRICT    nr_atend_proc_sc_w
                            from    procedimento_paciente
                            where   nr_lote_contabil = nr_lote_contabil_p
                            and     coalesce(cd_conta_contabil::text, '') = '';

                            if (nr_atend_proc_sc_w > 0) then
                                    select  coalesce(max(cd_procedimento),0)
                                    into STRICT    cd_procedimento_sc_w
                                    from    procedimento_paciente
                                    where   nr_lote_contabil = nr_lote_contabil_p
                                    and     coalesce(cd_conta_contabil::text, '') = ''
                                    and     nr_atendimento = nr_atend_proc_sc_w;
                            end if;

                            ds_retorno_w    :=
                                    wheb_mensagem_pck.get_texto(807470) ||chr(13)||chr(10)||
                                    wheb_mensagem_pck.get_texto(807471) || ' = ' || nr_atend_mat_sc_w    ||chr(13)||chr(10)||
                                    wheb_mensagem_pck.get_texto(807474) || ' = ' || cd_material_sc_w     ||chr(13)||chr(10)||
                                    wheb_mensagem_pck.get_texto(809926) || ' = ' || nr_atend_proc_sc_w   ||chr(13)||chr(10)||
                                    wheb_mensagem_pck.get_texto(807476) || ' = ' || cd_procedimento_sc_w ||chr(13)||chr(10)||
                                    wheb_mensagem_pck.get_texto(809927) || ' = ' || nr_seq_protocolo_w   ||chr(13)||chr(10)||
                                    wheb_mensagem_pck.get_texto(799470) || ' = ' || nr_protocolo_w;
                    end if;
            end if;
    end if;

if (coalesce(ds_retorno_w::text, '') = '') then
        update  lote_contabil
        set     ie_situacao = 'A',
                dt_geracao_lote = clock_timestamp()
        where   nr_lote_contabil = nr_lote_contabil_p;

        if (ie_exclusao_p = 'S') then
                ds_retorno_w            := Wheb_mensagem_pck.get_texto(799475);
                CALL ctb_gravar_log_lote( nr_lote_contabil_p, 2, '', nm_usuario_p);
        else
                CALL ctb_gravar_log_lote( nr_lote_contabil_p, 1, '', nm_usuario_p);
                ds_retorno_w            := Wheb_mensagem_pck.get_texto(799476);
        end if;
        commit;
else
        rollback;
end if;

ds_retorno_p            := substr(ds_retorno_w,1,255);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE contabiliza_perdas_receitas ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

