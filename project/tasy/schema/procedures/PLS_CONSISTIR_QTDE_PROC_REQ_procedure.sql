-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_qtde_proc_req ( nr_seq_requisicao_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_solicitado_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_menssagem_p INOUT text, qt_solicitada_p INOUT bigint, qt_permitida_p INOUT bigint) AS $body$
DECLARE


ie_origem_proced_w		bigint;
cd_grupo_proc_w			bigint;
cd_especialidade_w		bigint;
cd_area_procedimento_w		bigint;
nr_seq_regra_w			bigint	:= 0;
ie_tipo_quantidade_w		varchar(3)	:= 'X';
qt_permitida_w			double precision;
dt_solicitacao_w		timestamp;
qt_solicitado_w			double precision	:= 0;
cd_estabelecimento_w		smallint;
qt_solicitada_w			double precision	:= 0;
qt_tipo_quantidade_w		bigint;
dt_requisicao_w			timestamp;
nr_seq_segurado_w		bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		ie_tipo_quantidade,
		qt_permitida,
		qt_tipo_quantidade
	from (
		SELECT	a.nr_sequencia,
			a.ie_tipo_quantidade,
			a.qt_permitida,
			a.qt_tipo_quantidade,
			a.cd_area_procedimento,
			a.cd_especialidade,
			a.cd_grupo_proc,
			a.cd_procedimento
		from	pls_requisicao_qtde_proc	a
		where	a.ie_situacao		= 'A'
		and	a.cd_estabelecimento	= cd_estabelecimento_p
		--and	a.nr_seq_prestador	= nr_seq_prestador_w
		and	coalesce(a.cd_procedimento, coalesce(cd_procedimento_p,0))		= coalesce(cd_procedimento_p,0)
		and	coalesce(a.ie_origem_proced, coalesce(ie_origem_proced_w,0))		= coalesce(ie_origem_proced_w,0)
		and	coalesce(a.cd_grupo_proc, coalesce(cd_grupo_proc_w,0))			= coalesce(cd_grupo_proc_w,0)
		and	coalesce(a.cd_especialidade, coalesce(cd_especialidade_w,0))		= coalesce(cd_especialidade_w,0)
		and	coalesce(a.cd_area_procedimento, coalesce(cd_area_procedimento_w,0)) 	= coalesce(cd_area_procedimento_w,0)
		and (cd_estabelecimento = cd_estabelecimento_p and (pls_obter_se_controle_estab('RE') = 'S'))
		
union all

		select	a.nr_sequencia,
			a.ie_tipo_quantidade,
			a.qt_permitida,
			a.qt_tipo_quantidade,
			a.cd_area_procedimento,
			a.cd_especialidade,
			a.cd_grupo_proc,
			a.cd_procedimento
		from	pls_requisicao_qtde_proc	a
		where	a.ie_situacao		= 'A'
		and	a.cd_estabelecimento	= cd_estabelecimento_p
		--and	a.nr_seq_prestador	= nr_seq_prestador_w
		and	coalesce(a.cd_procedimento, coalesce(cd_procedimento_p,0))		= coalesce(cd_procedimento_p,0)
		and	coalesce(a.ie_origem_proced, coalesce(ie_origem_proced_w,0))		= coalesce(ie_origem_proced_w,0)
		and	coalesce(a.cd_grupo_proc, coalesce(cd_grupo_proc_w,0))			= coalesce(cd_grupo_proc_w,0)
		and	coalesce(a.cd_especialidade, coalesce(cd_especialidade_w,0))		= coalesce(cd_especialidade_w,0)
		and	coalesce(a.cd_area_procedimento, coalesce(cd_area_procedimento_w,0)) 	= coalesce(cd_area_procedimento_w,0)
		and (pls_obter_se_controle_estab('RE') = 'N')) alias35
	order by cd_area_procedimento,
		cd_especialidade,
		cd_grupo_proc,
		cd_procedimento;


BEGIN

select  dt_requisicao,
	nr_seq_segurado
into STRICT	dt_requisicao_w,
	nr_seq_segurado_w
from	pls_requisicao
where	nr_sequencia	= nr_seq_requisicao_p;

SELECT * FROM pls_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w;

open C01;
loop
fetch C01 into
	nr_seq_regra_w,
	ie_tipo_quantidade_w,
	qt_permitida_w,
	qt_tipo_quantidade_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
end loop;
close C01;

if (nr_seq_regra_w	> 0) then
	if (ie_tipo_quantidade_w	= 'D') then
		select 	coalesce(sum(a.qt_solicitado),0)
		into STRICT	qt_solicitado_w
		from	pls_requisicao		b,
			pls_requisicao_proc	a
		where	a.nr_seq_requisicao	= b.nr_sequencia
		and	b.nr_seq_segurado	= nr_seq_segurado_w
		and	a.cd_procedimento	= cd_procedimento_p
		and	a.ie_origem_proced	= ie_origem_proced_p
		and	trunc(b.dt_requisicao) between
			(trunc(dt_requisicao_w) - (qt_tipo_quantidade_w - 1)) and trunc(dt_requisicao_w);
			qt_solicitado_w	:= qt_solicitado_w + qt_solicitado_p;

	elsif (ie_tipo_quantidade_w	= 'M') then
		select 	coalesce(sum(a.qt_solicitado),0)
		into STRICT	qt_solicitado_w
		from	pls_requisicao		b,
			pls_requisicao_proc	a
		where	a.nr_seq_requisicao	= b.nr_sequencia
		and	b.nr_seq_segurado	= nr_seq_segurado_w
		and	a.cd_procedimento	= cd_procedimento_p
		and	a.ie_origem_proced	= ie_origem_proced_p
		and	trunc(b.dt_requisicao, 'month') between
			(trunc(add_months(dt_requisicao_w, - (qt_tipo_quantidade_w - 1)), 'month')) and trunc(dt_requisicao_w, 'month');
			qt_solicitado_w	:= qt_solicitado_w + qt_solicitado_p;

	elsif (ie_tipo_quantidade_w	= 'A') then
		select 	coalesce(sum(a.qt_solicitado),0)
		into STRICT	qt_solicitado_w
		from	pls_requisicao		b,
			pls_requisicao_proc	a
		where	a.nr_seq_requisicao	= b.nr_sequencia
		and	b.nr_seq_segurado	= nr_seq_segurado_w
		and	a.cd_procedimento	= cd_procedimento_p
		and	a.ie_origem_proced	= ie_origem_proced_p
		and	trunc(b.dt_requisicao, 'yyyy') between
			(trunc(add_months(dt_requisicao_w, - ( 12 * (qt_tipo_quantidade_w - 1))), 'yyyy')) and trunc(dt_requisicao_w, 'yyyy');
			qt_solicitado_w	:= qt_solicitado_w + qt_solicitado_p;

	elsif (ie_tipo_quantidade_w	= 'R') then
		select 	coalesce(sum(a.qt_solicitado),0)
		into STRICT	qt_solicitado_w
		from	pls_requisicao_proc	a
		where	a.nr_seq_requisicao	= nr_seq_requisicao_p
		and	a.cd_procedimento	= cd_procedimento_p
		and	a.ie_origem_proced	= ie_origem_proced_p;

		qt_solicitado_w	:= qt_solicitado_w + qt_solicitado_p;

	end if;

	if (qt_solicitado_w > qt_permitida_w) then
		ds_menssagem_p	:= 'A quantidade solicitada é superior a quantidade permitida, conforme regra cadastrada na função OPS - Cadastro de Regras > Requisição > Requisição X Qtde. procedimento.' || chr(10) || chr(13) ||
		'Quantidade solicitada: ' || qt_solicitado_w || '/ permitida: ' || qt_permitida_w || '.';
		qt_solicitada_p := qt_solicitado_w;
		qt_permitida_p := qt_permitida_w;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_qtde_proc_req ( nr_seq_requisicao_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_solicitado_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_menssagem_p INOUT text, qt_solicitada_p INOUT bigint, qt_permitida_p INOUT bigint) FROM PUBLIC;

