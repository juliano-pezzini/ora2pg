-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_recomendacao (nr_prescricao_p bigint, cd_recomendacao_p bigint, nr_seq_classif_p bigint, cd_intervalo_p text, nm_usuario_p text, cd_perfil_p bigint, ie_gerar_kit_p text) AS $body$
DECLARE

 
nr_sequencia_w				integer;
hr_prim_horario_w			varchar(5);
ie_recomendacao_alta_w		varchar(5);
cd_estabelecimento_w		smallint;
nr_seq_topografia_w			bigint;
ie_prim_horario_w			varchar(255);
ds_horario1_w				varchar(255);
ds_horario2_w				varchar(255);
ds_complemento_w			varchar(2000);
dt_inicio_prescr_w			timestamp;
dt_hora_inicio_w			timestamp;
nr_horas_validade_w			integer;
nr_ocorrencia_w				bigint := 0;
ie_prescr_rec_sem_lib_w		varchar(255);
cd_kit_w					bigint;
cd_setor_prescricao_w		bigint;
dt_primeiro_horario_w		timestamp;
ie_atualiza_prescr_alta_w	varchar(1);
ie_seleciona_kit_rec_w		varchar(1);
ie_selec_recomendacoes_w	varchar(1);
ds_erro_w					varchar(2000);
ie_limpa_prim_hor_w			varchar(1) := 'N';
ie_sem_aprazamento_w		varchar(1) := 'N';
ie_urgencia_w			varchar(1);
ie_agora_w			varchar(1);
cd_intervalo_w			varchar(10);
cd_convenio_w			bigint;
nr_seq_agrupamento_w		bigint;
ie_kit_automaticamente_w	varchar(1);
cd_interv_setor_rec_w		varchar(7);
ie_check_intervalo_w		varchar(1);
ie_agora_acm_sn_w		varchar(6);
ie_acm_w 	 		varchar(1);
ie_se_necessario_w 		varchar(1);

C01 CURSOR FOR 
SELECT	cd_kit 
from	kit_mat_recomendacao 
where	cd_recomendacao = cd_recomendacao_p 
and		((coalesce(cd_perfil,0) = 0) or (cd_perfil = cd_perfil_p)) 
and		((coalesce(cd_setor_atendimento,0) = 0) or (cd_setor_atendimento = cd_setor_prescricao_w)) 
and	((coalesce(cd_convenio::text, '') = '') or (cd_convenio = cd_convenio_w)) 
and	((coalesce(nr_seq_agrupamento::text, '') = '') or (nr_seq_agrupamento = nr_seq_agrupamento_w)) 
and		Obter_se_gera_kit_rec_setor(nr_sequencia,cd_setor_prescricao_w) = 'S';


BEGIN 
 
select	max(to_char(coalesce(dt_primeiro_horario,dt_inicio_prescr),'hh24:mi')), 
	max(cd_estabelecimento), 
	max(dt_inicio_prescr), 
	max(nr_horas_validade), 
	max(cd_setor_atendimento), 
	max(obter_convenio_atendimento(nr_atendimento)) 
into STRICT	hr_prim_horario_w, 
	cd_estabelecimento_w, 
	dt_inicio_prescr_w, 
	nr_horas_validade_w, 
	cd_setor_prescricao_w, 
	cd_convenio_w 
from	prescr_medica 
where	nr_prescricao	= nr_prescricao_p;
 
/*Obter_Param_Usuario(924,208,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w,ie_prim_horario_w);*/
 
ie_prim_horario_w := Obter_Param_Usuario(924, 208, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_prim_horario_w); 	/*David em 22/08/2008 OS 103459 - Não gerava o primeiro horário.*/
ie_atualiza_prescr_alta_w := Obter_Param_Usuario(924, 409, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_atualiza_prescr_alta_w);
ie_seleciona_kit_rec_w := Obter_Param_Usuario(924, 458, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_seleciona_kit_rec_w);
ie_prescr_rec_sem_lib_w := Obter_Param_Usuario(924, 530, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_prescr_rec_sem_lib_w);
ie_selec_recomendacoes_w := Obter_Param_Usuario(924, 182, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_selec_recomendacoes_w);
ie_kit_automaticamente_w := Obter_Param_Usuario(924, 968, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_kit_automaticamente_w);
ie_check_intervalo_w := Obter_Param_Usuario(924, 809, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_check_intervalo_w);
 
 
select	max(nr_seq_agrupamento) 
into STRICT	nr_seq_agrupamento_w 
from	setor_atendimento 
where	cd_setor_atendimento = cd_setor_prescricao_w;
 
select	substr(ds_complemento,1,2000), 
	nr_seq_topografia, 
	coalesce(ie_urgencia,'N') 
into STRICT	ds_complemento_w, 
	nr_seq_topografia_w, 
	ie_urgencia_w 
from	tipo_recomendacao 
where	cd_tipo_recomendacao	= cd_recomendacao_p;
 
cd_interv_setor_rec_w := Obter_se_interv_setor_rec(cd_recomendacao_p, cd_setor_prescricao_w);
 
if (cd_interv_setor_rec_w IS NOT NULL AND cd_interv_setor_rec_w::text <> '') then 
	cd_intervalo_w	:= cd_interv_setor_rec_w;
else 
	cd_intervalo_w	:= cd_intervalo_p;
end if;
 
if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') or (ie_urgencia_w = 'S') then	 
	 
	ie_agora_w 	:= obter_se_intervalo_agora(cd_intervalo_w);
	if (ie_agora_w 	= 'N') 	and (ie_urgencia_w 	= 'S')	then 
		 
		select	max(cd_intervalo) 
		into STRICT	cd_intervalo_w 
		from 	intervalo_prescricao 
		where 	ie_agora = 'S' 
		and 	((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_w)) 
		and 	obter_se_intervalo(cd_intervalo,'R') = 'S' 
		and 	ie_situacao = 'A';
	end if;
	 
	if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then 
		select	coalesce(max(ie_limpa_prim_hor),'N'), 
			coalesce(max(ie_sem_aprazamento),'N') 
		into STRICT	ie_limpa_prim_hor_w, 
			ie_sem_aprazamento_w 
		from	intervalo_prescricao 
		where	cd_intervalo = cd_intervalo_w;
		 
		 
		if (ie_limpa_prim_hor_w = 'S') then 
			hr_prim_horario_w := null;
		elsif (obter_se_intervalo_agora(cd_intervalo_w) = 'S') and (ie_urgencia_w = 'S') then 
			select to_char(clock_timestamp(),'hh24:mi') 
			into STRICT	hr_prim_horario_w 
			;
		else 
			select	coalesce(max(obter_primeiro_horario(cd_intervalo_w, nr_prescricao_p, 0, null)), hr_prim_horario_w) 
			into STRICT	hr_prim_horario_w 
			;
		end if;
		 
		 
	end if;
end if;
 
if (ie_prim_horario_w = 'N') then 
	hr_prim_horario_w	:= '';
end if;
 
if (length(hr_prim_horario_w) = 5) then 
	dt_hora_inicio_w := to_date(to_char(dt_inicio_prescr_w,'dd/mm/yyyy') || hr_prim_horario_w || ':00', 'dd/mm/yyyy hh24:mi:ss');
end if;
 
select	coalesce(max(nr_sequencia),0) + 1 
into STRICT	nr_sequencia_w 
from 	prescr_recomendacao 
where	nr_prescricao	= nr_prescricao_p;
 
if (ie_sem_aprazamento_w = 'N') then 
	SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, coalesce(cd_intervalo_w,cd_intervalo_w), dt_inicio_prescr_w, dt_hora_inicio_w, nr_horas_validade_w, 0, 0, 0, nr_ocorrencia_w, ds_horario1_w, ds_horario2_w, 'N', null) INTO STRICT nr_ocorrencia_w, ds_horario1_w, ds_horario2_w;
end if;
 
 
if (ie_check_intervalo_w = 'S') then 
	begin	 
	ie_agora_acm_sn_w := obter_se_interv_agora_acm_sn(cd_intervalo_w);		
	if (ie_agora_acm_sn_w IS NOT NULL AND ie_agora_acm_sn_w::text <> '') then 
		begin 
		ie_acm_w 	  := 'N';
		ie_se_necessario_w := 'N';
		ie_urgencia_w 	  := 'N';		
		 
		if (ie_agora_acm_sn_w = 'AGORA') then 
			ie_urgencia_w := 'S';
		 
		elsif (ie_agora_acm_sn_w = 'SN') then 
			ie_se_necessario_w := 'S';
		 
		elsif (ie_agora_acm_sn_w = 'ACM') then			 
			ie_acm_w := 'S';			
		end if;
		end;
	end if;	
	end;
end if;
			 
insert into prescr_recomendacao( 
	nr_prescricao, 
	nr_sequencia, 
	ie_destino_rec, 
	dt_atualizacao, 
	nm_usuario, 
	cd_recomendacao, 
	nr_seq_classif, 
	ie_suspenso, 
	cd_intervalo, 
	hr_prim_horario, 
	ds_horarios, 
	ds_recomendacao, 
	nr_seq_topografia, 
	ie_urgencia, 
	ie_acm, 
	ie_se_necessario) 
values (	nr_prescricao_p, 
	nr_sequencia_w, 
	'E', 
	clock_timestamp(), 
	nm_usuario_p, 
	cd_recomendacao_p, 
	nr_seq_classif_p, 
	'N', 
	cd_intervalo_w, 
	hr_prim_horario_w, 
	ds_horario1_w || ds_horario2_w, 
	ds_complemento_w, 
	nr_seq_topografia_w, 
	ie_urgencia_w, 
	ie_acm_w, 
	ie_se_necessario_w);	
	 
commit;
CALL Gerar_proced_assoc_rec(nr_prescricao_p, cd_recomendacao_p, nm_usuario_p,'I');	
ds_erro_w := Consistir_prescr_recomendacao(nr_prescricao_p, nr_sequencia_w, cd_estabelecimento_w, cd_perfil_p, nm_usuario_p, ds_erro_w);
 
if	((ie_seleciona_kit_rec_w = 'N') or (ie_selec_recomendacoes_w = 'S')) and (ie_gerar_kit_p = 'N')	then 
	open C01;
	loop 
	fetch C01 into	 
		cd_kit_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		CALL Inserir_kit_recomendacao(nm_usuario_p, nr_prescricao_p, nr_sequencia_w, cd_recomendacao_p, cd_kit_w);
	end loop;
	close C01;
	if (ie_kit_automaticamente_w = 'S') then 
		CALL Gerar_Kit_rec_Prescricao(cd_estabelecimento_w,nr_prescricao_p,nr_sequencia_w,'N', 'N');
	end if;	
end if;
 
	if (ie_gerar_kit_p = 'S') and (ie_kit_automaticamente_w = 'S') then 
		CALL Gerar_Kit_rec_Prescricao(cd_estabelecimento_w,nr_prescricao_p,nr_sequencia_w,'N', 'N');
	end if;	
 
		 
if (ie_prescr_rec_sem_lib_w = 'S') then 
	CALL Gerar_prescr_hor_sem_lib(nr_prescricao_p,nr_sequencia_w,cd_perfil_p,'N',nm_usuario_p);
end if;	
 
delete 
from	w_prescr_recomendacao 
where	nr_prescricao = nr_prescricao_p;
 
select	Obter_se_recomendacao_alta(nr_prescricao_p) 
into STRICT	ie_recomendacao_alta_w
;
 
if (ie_recomendacao_alta_w = 'S') then 
	 
	select	max(CASE WHEN ie_atualiza_prescr_alta_w='N' THEN dt_primeiro_horario  ELSE dt_prescricao END ), 
		max(nr_horas_validade) 
	into STRICT	dt_primeiro_horario_w, 
		nr_horas_validade_w 
	from	prescr_medica 
	where	nr_prescricao = nr_prescricao_p;
 
	if (ie_atualiza_prescr_alta_w = 'T') then 
		nr_horas_validade_w	:= 24;		
	end if;
	 
	update	prescr_medica 
    set	ie_prescricao_alta 	= 'S', 
		dT_primeiro_horario 	= dt_primeiro_horario_w, 
		nr_horas_validade	= nr_horas_validade_w 
	where	nr_prescricao = nr_prescricao_p;
	 
	if (ie_atualiza_prescr_alta_w	<> 'N') then 
		CALL Recalcular_hor_prescricao(nr_prescricao_p, nm_usuario_p);
		CALL recalcular_hora_sol(nr_prescricao_p, dt_primeiro_horario_w, cd_estabelecimento_w, cd_perfil_p, nm_usuario_p);
	end if;
	 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_recomendacao (nr_prescricao_p bigint, cd_recomendacao_p bigint, nr_seq_classif_p bigint, cd_intervalo_p text, nm_usuario_p text, cd_perfil_p bigint, ie_gerar_kit_p text) FROM PUBLIC;

