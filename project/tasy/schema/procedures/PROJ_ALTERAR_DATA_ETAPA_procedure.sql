-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE proj_alterar_data_etapa ( nr_seq_etapa_p bigint, dt_anterior_p timestamp, dt_atual_p timestamp, nm_usuario_p text) AS $body$
DECLARE


qt_diferenca_w		double precision;
nr_seq_cronograma_w	bigint;
nr_seq_etapa_w		bigint;
nr_seq_superior_w	bigint;
nr_seq_etapa_atual_w	bigint;
qt_reg_fim_prev_w	bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	proj_cron_etapa
	where	nr_seq_cronograma	= nr_seq_cronograma_w
	and	nr_sequencia		>= nr_seq_etapa_p
	and	coalesce(ie_situacao,'A') 	= 'A'
	order by nr_sequencia;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	proj_cron_etapa
	where	nr_seq_superior		= nr_seq_etapa_atual_w
	and	coalesce(ie_situacao,'A') 	= 'A'
	order by nr_sequencia;


BEGIN

select (dt_atual_p - dt_anterior_p)
into STRICT	qt_diferenca_w
;

select	nr_seq_cronograma
into STRICT	nr_seq_cronograma_w
from	proj_cron_etapa
where	nr_sequencia	= nr_seq_etapa_p;

open C01;
loop
fetch C01 into
	nr_seq_etapa_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	update	proj_cron_etapa
	set	dt_inicio_prev = (dt_inicio_prev + qt_diferenca_w)
	where	nr_sequencia = nr_seq_etapa_w;

	select	count(*)
	into STRICT	qt_reg_fim_prev_w
	from	proj_cron_etapa
	where	nr_sequencia	= nr_seq_etapa_w
	and	(dt_fim_prev IS NOT NULL AND dt_fim_prev::text <> '');

	if (qt_reg_fim_prev_w	> 0) then
		update	proj_cron_etapa
		set	dt_fim_prev = (dt_fim_prev + qt_diferenca_w)
		where	nr_sequencia = nr_seq_etapa_w;
	else
		update	proj_cron_etapa
		set	dt_fim_prev = dt_inicio_prev + (coalesce(qt_hora_prev,0) / 24)
		where	nr_sequencia = nr_seq_etapa_w;
	end if;

	end;
end loop;
close C01;

select	coalesce(max(nr_seq_superior),0)
into STRICT	nr_seq_etapa_atual_w
from	proj_cron_etapa
where	nr_sequencia	= nr_seq_etapa_p;

WHILE(nr_seq_etapa_atual_w <> 0) LOOP
	begin

	update	proj_cron_etapa
	set	dt_inicio_prev = (dt_inicio_prev + qt_diferenca_w)
	where	nr_sequencia = nr_seq_etapa_atual_w;

	select	count(*)
	into STRICT	qt_reg_fim_prev_w
	from	proj_cron_etapa
	where	nr_sequencia	= nr_seq_etapa_atual_w
	and	(dt_fim_prev IS NOT NULL AND dt_fim_prev::text <> '');

	if (qt_reg_fim_prev_w	> 0) then
		update	proj_cron_etapa
		set	dt_fim_prev = (dt_fim_prev + qt_diferenca_w)
		where	nr_sequencia = nr_seq_etapa_atual_w;
	else
		update	proj_cron_etapa
		set	dt_fim_prev = dt_inicio_prev + (coalesce(qt_hora_prev,0) / 24)
		where	nr_sequencia = nr_seq_etapa_atual_w;
	end if;

	select	coalesce(max(nr_seq_superior),0)
	into STRICT	nr_seq_etapa_atual_w
	from	proj_cron_etapa
	where	nr_sequencia	= nr_seq_etapa_atual_w;

	end;
END loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE proj_alterar_data_etapa ( nr_seq_etapa_p bigint, dt_anterior_p timestamp, dt_atual_p timestamp, nm_usuario_p text) FROM PUBLIC;

