-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_pac_internado_hora ( dt_parametro_p timestamp, nm_usuario_p text) AS $body$
DECLARE

 
nr_atendimento_w	bigint;
cd_pessoa_fisica_w	varchar(10);
cd_procedencia_w	integer;
ie_tipo_atendimento_w	smallint;
cd_medico_resp_w	varchar(10);
cd_motivo_alta_w	smallint;
ie_clinica_w		integer;
nr_seq_classificacao_w	bigint;
cd_setor_atendimento_w	integer;
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
cd_religiao_w		integer;
cd_estabelecimento_w	smallint;
hr_internado_w		timestamp;
nr_sequencia_w		bigint;										
 
C01 CURSOR FOR 
SELECT	a.nr_atendimento, 
	a.cd_pessoa_fisica, 
	a.cd_procedencia, 
	a.ie_tipo_atendimento, 
	a.cd_medico_resp, 
	a.cd_motivo_alta, 
	a.ie_clinica, 
	a.nr_seq_classificacao, 
	a.cd_setor_atendimento, 
	a.cd_convenio, 
	a.cd_categoria, 
	a.cd_religiao, 
	a.cd_estabelecimento, 
	trunc(a.dt_entrada_unidade,'hh') 
from  	paciente_internado_v2 a 
where (coalesce(a.dt_saida_unidade,a.dt_saida_interno) >= dt_parametro_p) 
and (a.dt_entrada_unidade < fim_dia(dt_parametro_p)) 
and (coalesce(a.dt_saida_unidade, fim_dia(dt_parametro_p) + 1) > fim_dia(dt_parametro_p)) 
and 	not exists (SELECT 1 from motivo_alta y where a.cd_motivo_alta = y.cd_motivo_alta  and y.ie_censo_diario = 'N') 
and 	obter_se_setor_ocupacao_hosp(a.cd_setor_atendimento) = 'S' 
and	obter_classif_setor(a.cd_setor_atendimento) in (3,4);	
 

BEGIN 
 
delete from eis_internado_hora where trunc(dt_referencia) = trunc(dt_parametro_p);
commit;
 
open c01;
loop 
fetch c01 into 
	nr_atendimento_w, 
	cd_pessoa_fisica_w, 
	cd_procedencia_w, 
	ie_tipo_atendimento_w, 
	cd_medico_resp_w, 
	cd_motivo_alta_w, 
	ie_clinica_w, 
	nr_seq_classificacao_w, 
	cd_setor_atendimento_w, 
	cd_convenio_w, 
	cd_categoria_w, 
	cd_religiao_w, 
	cd_estabelecimento_w, 
	hr_internado_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
 
	select	coalesce(max(nr_sequencia),0) + 1 
	into STRICT	nr_sequencia_w 
	from	eis_internado_hora;
 
	insert into eis_internado_hora( 
			nr_sequencia, 
			dt_referencia, 
			nr_atendimento, 
			cd_pessoa_fisica, 
			cd_procedencia, 
			ie_tipo_atendimento, 
			cd_medico_resp, 
			cd_motivo_alta, 
			ie_clinica, 
			nr_seq_classificacao, 
			cd_setor_atendimento, 
			cd_convenio, 
			cd_categoria, 
			cd_religiao, 
			hr_internado, 
			cd_estabelecimento, 
			nm_usuario, 
			dt_atualizacao, 
			nm_usuario_nrec, 
			dt_atualizacao_nrec) 
		values (nr_sequencia_w, 
			trunc(dt_parametro_p), 
			nr_atendimento_w, 
			cd_pessoa_fisica_w, 
			cd_procedencia_w, 
			ie_tipo_atendimento_w, 
			cd_medico_resp_w, 
			cd_motivo_alta_w, 
			ie_clinica_w, 
			nr_seq_classificacao_w, 
			cd_setor_atendimento_w, 
			cd_convenio_w, 
			cd_categoria_w, 
			cd_religiao_w, 
			hr_internado_w, 
			cd_estabelecimento_w, 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp());
		 
 
end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_pac_internado_hora ( dt_parametro_p timestamp, nm_usuario_p text) FROM PUBLIC;

