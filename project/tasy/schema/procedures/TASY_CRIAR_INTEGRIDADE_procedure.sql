-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tasy_criar_integridade ( nm_tabela_p text, nm_integridade_p text, ie_dropar_p text) AS $body$
DECLARE


nm_atributo_w          		varchar(50)      := '';
nm_tabela_referencia_w		varchar(50)	:= '';
ie_regra_delecao_w		varchar(15)	:= '';
ds_virgula_w			varchar(01)	:= '';
ds_comando_w			varchar(2000);
vl_retorno_w			varchar(255);
nm_atributo_ref_w		varchar(50);
ds_ref_w			varchar(2000);
qt_indice_w			bigint;
qt_indice_philips_w		bigint;

C010 CURSOR FOR
SELECT nm_atributo,
	nm_atributo_ref
FROM Integridade_Atributo
WHERE nm_tabela				= nm_tabela_p
  AND nm_integridade_referencial	= nm_integridade_p
order by ie_sequencia_criacao;

C020 CURSOR FOR
SELECT nm_atributo
FROM Indice_Atributo b, indice a
WHERE a.nm_tabela		= nm_tabela_referencia_w
  and a.nm_indice		= b.nm_indice
  and a.nm_tabela		= b.nm_tabela
  and a.ie_tipo		= 'PK'
  and coalesce(ds_ref_w::text, '') = ''
order by nr_sequencia;


BEGIN

if (ie_dropar_p = 'S') then
	begin
		ds_comando_w	:= 'Alter Table ' || nm_tabela_p;
		ds_comando_w	:= ds_comando_w || ' drop constraint ' || nm_integridade_p;
		CALL gravar_processo_longo(ds_comando_w,'TASY_CRIAR_INTEGRIDADE',null);
		vl_retorno_w := Obter_Valor_Dinamico(ds_comando_w, vl_retorno_w);
	exception
	when others then
		null;
		--insert into Logxxxxx_Tasy values (sysdate, 'Tasy', 751, ds_comando_w);
	end;
end if;

begin

	select	count(*)
	into STRICT	qt_indice_w
	from	user_indexes
	where	upper(index_name) = upper(nm_integridade_p)||'_I';


	select	count(1)
	into STRICT	qt_indice_philips_w
	from	indice
	where	nm_indice = upper(nm_integridade_p)||'_I';

	if (qt_indice_w > 0 or qt_indice_philips_w = 0) then

		SELECT nm_tabela_referencia,
			ie_regra_delecao
		INTO STRICT	nm_tabela_referencia_w,
			ie_regra_delecao_w
		FROM	integridade_referencial
		WHERE	nm_tabela				= nm_tabela_p
		  AND	nm_integridade_referencial	= nm_integridade_p;

		ds_comando_w	:= 'Alter Table ' || nm_tabela_p || ' add (constraint ';
		ds_comando_w	:= ds_comando_w  || nm_integridade_p || ' foreign key ( ';
		ds_virgula_w	:= '';
		ds_ref_w	:= '';
		OPEN C010;
		LOOP
			FETCH C010 INTO
					nm_atributo_w,
					nm_atributo_ref_w;
			EXIT WHEN NOT FOUND; /* apply on C010 */
				ds_comando_w	:= ds_comando_w  || ds_virgula_w || nm_atributo_w;
				if (nm_atributo_ref_w IS NOT NULL AND nm_atributo_ref_w::text <> '') then
					ds_ref_w	:= ds_ref_w || ds_virgula_w || nm_atributo_ref_w;
				end if;
				ds_virgula_w	:= ',';
		END LOOP;
		CLOSE C010;
		ds_comando_w	:= ds_comando_w  || ')';

		ds_comando_w	:= ds_comando_w  || ' references ' || nm_tabela_referencia_w || '(';
		ds_virgula_w	:= '';
		OPEN C020;
		LOOP
			FETCH C020 INTO 	nm_atributo_w;
			EXIT WHEN NOT FOUND; /* apply on C020 */
				ds_comando_w	:= ds_comando_w  || ds_virgula_w || nm_atributo_w;
				ds_virgula_w	:= ',';
		END LOOP;
		CLOSE C020;
		if (ds_ref_w IS NOT NULL AND ds_ref_w::text <> '') then
			ds_comando_w	:= ds_comando_w  || ds_ref_w;
		end if;
		ds_comando_w	:= ds_comando_w  || ')';
		if (ie_regra_delecao_w = 'CASCADE') then
			ds_comando_w	:= ds_comando_w  || ' ON DELETE CASCADE';
		end if;

		if (wheb_usuario_pck.get_nm_usuario = 'NOVALIDATE') then
			ds_comando_w	:= ds_comando_w  || ' novalidate) ';
		else
			ds_comando_w	:= ds_comando_w  || ' ) ';
		end if;

		CALL gravar_processo_longo(ds_comando_w,'TASY_CRIAR_INTEGRIDADE',null);
		vl_retorno_w := Obter_Valor_Dinamico(ds_comando_w, vl_retorno_w);

	end if;

exception
when others then
	null;
	--insert into Logxxxx_Tasy values (sysdate, 'Tasy', 751, ds_comando_w);
end;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tasy_criar_integridade ( nm_tabela_p text, nm_integridade_p text, ie_dropar_p text) FROM PUBLIC;

