-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_valida_ocor_aut_caract_fin ( nr_seq_ocor_combinada_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_segurado_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, ie_utiliza_filtro_p text, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
Procedure utilizada para validar informacoes da regra de caracteristicas financeiras, esta rotina e
utilizada para geracao de ocorrencia na Autorizacao / Requisicao e Execucao
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  ]  Objetos do dicionario [x  Tasy (Delphi/Java) [ x] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
 Rotina utilizada para geracao de ocorrencia na Autorizacao / Requisicao e Execucao
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
C01 CURSOR FOR
	SELECT	qt_dias_mensal_vencido,
		ie_cheque_devolvido,
		ie_tipo_pagador,
		ie_venc_titulo,
		coalesce(ie_pagador_complementar,'N')
	from	pls_validacao_aut_fin
	where	ie_situacao	= 'A'
	and	nr_seq_ocor_aut_combinada	= nr_seq_ocor_combinada_p;

C02 CURSOR(nr_seq_guia_pc 	bigint) FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced
	from	pls_guia_plano_proc
	where	nr_seq_guia	= nr_seq_guia_pc;

C03 CURSOR(nr_seq_guia_pc 	bigint) FOR
	SELECT	nr_sequencia,
		nr_seq_material
	from	pls_guia_plano_mat
	where	nr_seq_guia	= nr_seq_guia_pc;

C04 CURSOR(nr_seq_requisicao_pc	bigint) FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_pc;

C05 CURSOR(nr_seq_requisicao_pc	bigint) FOR
	SELECT	nr_sequencia,
		nr_seq_material
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_pc;

C12 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced
	from	pls_execucao_req_item
	where	nr_seq_execucao		= nr_seq_execucao_p;

C13 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_material
	from	pls_execucao_req_item
	where	nr_seq_execucao		= nr_seq_execucao_p;


ie_gerar_ocorrencia_w			varchar(2)	:= 'N';
ie_gerou_ocor_cabecalho_w		varchar(2);
ie_regra_w				varchar(2);
ie_tipo_ocorrencia_w			varchar(2);
nr_seq_oc_benef_w			bigint;
qt_dias_mensal_vencido_w		integer;
ie_cheque_devolvido_w			varchar(1);
ie_tipo_pagador_w			varchar(2);
ie_vec_titulo_w				varchar(1);
ie_pagador_complementar_w		pls_validacao_aut_fin.ie_pagador_complementar%type;
ie_tipo_item_w				bigint;
nr_seq_exec_item_w			bigint;
nr_seq_material_w			bigint;
cd_procedimento_w			varchar(10);
ie_origem_proced_w			varchar(2);
ie_gerar_retorno_w			varchar(255);
nr_titulo_w				titulo_receber.nr_titulo%type;
cd_tipo_portador_w			titulo_receber.cd_tipo_portador%type;
ds_observacao_w				varchar(255);

BEGIN
open C01;
loop
fetch C01 into
	qt_dias_mensal_vencido_w,
	ie_cheque_devolvido_w,
	ie_tipo_pagador_w,
	ie_vec_titulo_w,
	ie_pagador_complementar_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
		ie_gerar_retorno_w	:= pls_obter_se_aut_financ_comb(nr_seq_ocor_combinada_p, nr_seq_segurado_p, qt_dias_mensal_vencido_w,
									ie_cheque_devolvido_w, ie_tipo_pagador_w, ie_vec_titulo_w, ie_pagador_complementar_w);

		if (length(ie_gerar_retorno_w) > 1) then
			begin
				nr_titulo_w	:= (substr(ie_gerar_retorno_w,2, length(ie_gerar_retorno_w)))::numeric;

				select	cd_tipo_portador
				into STRICT	cd_tipo_portador_w
				from	titulo_receber
				where	nr_titulo = nr_titulo_w;

				ds_observacao_w := 'Gerada devido ao titulo numero: ' || to_char(nr_titulo_w) || '. ';
			exception
			when others then
				nr_titulo_w		:= null;
				cd_tipo_portador_w	:= null;
			end;
		end if;

		ie_gerar_ocorrencia_w	:= substr(ie_gerar_retorno_w,1,1);
		
		-- Se utilizar filtros, so deve gerar a ocorrencia para os procedimentos/materiais que se encaixarem no filtro.
		if (ie_utiliza_filtro_p = 'S') and (ie_gerar_ocorrencia_w = 'S') then

			for r_C02_w in C02(nr_seq_guia_p) loop
				begin
				/* Tratamento para filtros */

				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, r_C02_w.nr_sequencia, null, null, null, null, r_C02_w.cd_procedimento, r_C02_w.ie_origem_proced, null, ie_gerou_ocor_cabecalho_w, null, null, cd_tipo_portador_w, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;

				if (ie_regra_w	= 'S') then
					ie_gerar_ocorrencia_w	:= 'S';
					
					nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, r_C02_w.nr_sequencia, null, nr_seq_ocor_combinada_p, nm_usuario_p, ds_observacao_w, nr_seq_motivo_glosa_p, 1, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
					
					CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
									nr_seq_guia_p, null, null,
									r_C02_w.nr_sequencia, null, null,
									null, null, null,
									nm_usuario_p, cd_estabelecimento_p);
					
				elsif (ie_regra_w	in ('E','N')) then
					ie_gerar_ocorrencia_w	:= 'N';
				end if;
				end;
			end loop;

			for r_C03_w in C03(nr_seq_guia_p) loop
				begin
				/* Tratamento para filtros */

				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, null, r_C03_w.nr_sequencia, null, null, null, null, null, r_C03_w.nr_seq_material, ie_gerou_ocor_cabecalho_w, null, null, cd_tipo_portador_w, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;

				if (ie_regra_w	= 'S') then
					ie_gerar_ocorrencia_w	:= 'S';
					
					nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, null, r_C03_w.nr_sequencia, nr_seq_ocor_combinada_p, nm_usuario_p, ds_observacao_w, nr_seq_motivo_glosa_p, 2, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
					
					CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
									nr_seq_guia_p, null, null,
									null, r_C03_w.nr_sequencia, null,
									null, null, null,
									nm_usuario_p, cd_estabelecimento_p);
				elsif (ie_regra_w	in ('E','N')) then
					ie_gerar_ocorrencia_w	:= 'N';
				end if;
				end;
			end loop;
		-- Se nao utilizar filtros, deve gerar a ocorrencia para todos os itens da guia	
		elsif (ie_utiliza_filtro_p = 'N') and (ie_gerar_ocorrencia_w = 'S') then
			for r_C02_w in C02(nr_seq_guia_p) loop

				nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, r_C02_w.nr_sequencia, null, nr_seq_ocor_combinada_p, nm_usuario_p, ds_observacao_w, nr_seq_motivo_glosa_p, 1, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
				
				CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
								nr_seq_guia_p, null, null,
								r_C02_w.nr_sequencia, null, null,
								null, null, null,
								nm_usuario_p, cd_estabelecimento_p);
			end loop;
			
			for r_C03_w in C03(nr_seq_guia_p) loop
			
				nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, null, r_C03_w.nr_sequencia, nr_seq_ocor_combinada_p, nm_usuario_p, ds_observacao_w, nr_seq_motivo_glosa_p, 2, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
				
				CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
								nr_seq_guia_p, null, null,
								null, r_C03_w.nr_sequencia, null,
								null, null, null,
								nm_usuario_p, cd_estabelecimento_p);
			end loop;
		end if;

	elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
		ie_gerar_retorno_w	:= pls_obter_se_aut_financ_comb(nr_seq_ocor_combinada_p, nr_seq_segurado_p, qt_dias_mensal_vencido_w,
									ie_cheque_devolvido_w, ie_tipo_pagador_w, ie_vec_titulo_w, ie_pagador_complementar_w);

		if (length(ie_gerar_retorno_w) > 1) then
			begin
				nr_titulo_w	:= (substr(ie_gerar_retorno_w,2, length(ie_gerar_retorno_w)))::numeric;

				select	cd_tipo_portador
				into STRICT	cd_tipo_portador_w
				from	titulo_receber
				where	nr_titulo = nr_titulo_w;

				ds_observacao_w := 'Gerada devido ao titulo numero: ' || to_char(nr_titulo_w) || '. ';
			exception
			when others then
				nr_titulo_w		:= null;
				cd_tipo_portador_w	:= null;
			end;
		end if;

		ie_gerar_ocorrencia_w	:= substr(ie_gerar_retorno_w,1,1);
		
		-- Se utilizar filtros, so deve gerar a ocorrencia para os procedimentos/materiais que se encaixarem no filtro.
		if (ie_utiliza_filtro_p = 'S') and (ie_gerar_ocorrencia_w = 'S') then
			for r_C04_w in C04(nr_seq_requisicao_p) loop
				begin
				/* Tratamento para filtros */

				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, r_C04_w.nr_sequencia, null, null, r_C04_w.cd_procedimento, r_C04_w.ie_origem_proced, null, ie_gerou_ocor_cabecalho_w, null, null, cd_tipo_portador_w, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;

				if (ie_regra_w	= 'S') then
					ie_gerar_ocorrencia_w	:= 'S';
					
					nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, r_C04_w.nr_sequencia, null, nr_seq_ocor_combinada_p, nm_usuario_p, ds_observacao_w, nr_seq_motivo_glosa_p, 5, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
								
					CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
									null, nr_seq_requisicao_p, null,
									null, null, r_C04_w.nr_sequencia,
									null, null, null,
									nm_usuario_p, cd_estabelecimento_p);
				elsif (ie_regra_w	in ('E','N')) then
					ie_gerar_ocorrencia_w	:= 'N';
				end if;
				end;
			end loop;

			for r_C05_w in C05(nr_seq_requisicao_p) loop
				begin
				/* Tratamento para filtros */

				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, null, r_C05_w.nr_sequencia, null, null, null, r_C05_w.nr_seq_material, ie_gerou_ocor_cabecalho_w, null, null, cd_tipo_portador_w, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;

				if (ie_regra_w	= 'S') then
					ie_gerar_ocorrencia_w	:= 'S';
					
					nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, null, r_C05_w.nr_sequencia, nr_seq_ocor_combinada_p, nm_usuario_p, ds_observacao_w, nr_seq_motivo_glosa_p, 6, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
								
					CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
									null, nr_seq_requisicao_p, null,
									null, null, null,
									r_C05_w.nr_sequencia, null, null,
									nm_usuario_p, cd_estabelecimento_p);
				elsif (ie_regra_w	in ('E','N')) then
					ie_gerar_ocorrencia_w	:= 'N';
				end if;
				end;
			end loop;
		-- Se nao utilizar filtros, deve gerar a ocorrencia para todos os itens da guia	
		elsif (ie_utiliza_filtro_p = 'N') and (ie_gerar_ocorrencia_w	= 'S')	then
			for r_C04_w in C04(nr_seq_requisicao_p) loop

				nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, r_C04_w.nr_sequencia, null, nr_seq_ocor_combinada_p, nm_usuario_p, ds_observacao_w, nr_seq_motivo_glosa_p, 5, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
							
				CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
								null, nr_seq_requisicao_p, null,
								null, null, r_C04_w.nr_sequencia,
								null, null, null,
								nm_usuario_p, cd_estabelecimento_p);
			end loop;
				
			for r_C05_w in C05(nr_seq_requisicao_p) loop

				nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, null, r_C05_w.nr_sequencia, nr_seq_ocor_combinada_p, nm_usuario_p, ds_observacao_w, nr_seq_motivo_glosa_p, 6, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
							
				CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
								null, nr_seq_requisicao_p, null,
								null, null, null,
								r_C05_w.nr_sequencia, null, null,
								nm_usuario_p, cd_estabelecimento_p);
			end loop;
		end if;

	elsif (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then
		ie_gerar_retorno_w	:= pls_obter_se_aut_financ_comb(nr_seq_ocor_combinada_p, nr_seq_segurado_p, qt_dias_mensal_vencido_w,
									ie_cheque_devolvido_w, ie_tipo_pagador_w, ie_vec_titulo_w, ie_pagador_complementar_w);

		if (length(ie_gerar_retorno_w) > 1) then
			begin
				nr_titulo_w	:= (substr(ie_gerar_retorno_w,2, length(ie_gerar_retorno_w)))::numeric;

				select	cd_tipo_portador
				into STRICT	cd_tipo_portador_w
				from	titulo_receber
				where	nr_titulo = nr_titulo_w;

				ds_observacao_w := 'Gerada devido ao titulo numero: ' || to_char(nr_titulo_w) || '. ';
			exception
			when others then
				nr_titulo_w		:= null;
				cd_tipo_portador_w	:= null;
			end;
		end if;

		ie_gerar_ocorrencia_w	:= substr(ie_gerar_retorno_w,1,1);

		if (ie_gerar_ocorrencia_w = 'S') then
			open C12;
			loop
			fetch C12 into
				nr_seq_exec_item_w,
				cd_procedimento_w,
				ie_origem_proced_w;
			EXIT WHEN NOT FOUND; /* apply on C12 */
				begin
				/* Tratamento para filtros */

				if (ie_utiliza_filtro_p = 'S') then
					SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, nr_seq_exec_item_w, cd_procedimento_w, ie_origem_proced_w, null, ie_gerou_ocor_cabecalho_w, null, null, cd_tipo_portador_w, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;

					if (ie_regra_w	= 'S') then
						if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, null, null, nr_seq_exec_item_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, ds_observacao_w, nr_seq_motivo_glosa_p, 10, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_oc_benef_w, null, null, null, null);

							CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
											null, null, nr_seq_execucao_p,
											null, null, null,
											null, nr_seq_exec_item_w, null,
											nm_usuario_p, cd_estabelecimento_p);
						end if;
					elsif (ie_regra_w	in ('E','N')) then
						ie_gerar_ocorrencia_w	:= 'N';
					end if;
				else
					if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
						nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, null, null, nr_seq_exec_item_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, ds_observacao_w, nr_seq_motivo_glosa_p, 10, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_oc_benef_w, null, null, null, null);

						CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
										null, null, nr_seq_execucao_p,
										null, null, null,
										null, nr_seq_exec_item_w, null,
										nm_usuario_p, cd_estabelecimento_p);
					end if;
				end if;
				end;
			end loop;
			close C12;

			open C13;
			loop
			fetch C13 into
				nr_seq_exec_item_w,
				nr_seq_material_w;
			EXIT WHEN NOT FOUND; /* apply on C13 */
				begin
				if (ie_utiliza_filtro_p = 'S') then
					/* Tratamento para filtros */

					SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, nr_seq_exec_item_w, null, null, nr_seq_material_w, ie_gerou_ocor_cabecalho_w, null, null, cd_tipo_portador_w, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;

					if (ie_regra_w	= 'S') then
						if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
							nr_seq_oc_benef_w := pls_inserir_ocorrencia(		nr_seq_segurado_p, nr_seq_ocorrencia_p, null, null, null, null, nr_seq_exec_item_w, nr_seq_ocor_combinada_p, nm_usuario_p, ds_observacao_w, nr_seq_motivo_glosa_p, 11, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_oc_benef_w, null, null, null, null);

							CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
											null, null, nr_seq_execucao_p,
											null, null, null,
											null, null, nr_seq_exec_item_w,
											nm_usuario_p, cd_estabelecimento_p);
						end if;
					elsif (ie_regra_w	in ('E','N')) then
						ie_gerar_ocorrencia_w	:= 'N';
					end if;
				else
					if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
						nr_seq_oc_benef_w := pls_inserir_ocorrencia(		nr_seq_segurado_p, nr_seq_ocorrencia_p, null, null, null, null, nr_seq_exec_item_w, nr_seq_ocor_combinada_p, nm_usuario_p, ds_observacao_w, nr_seq_motivo_glosa_p, 11, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_oc_benef_w, null, null, null, null);

						CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p,
										null, null, nr_seq_execucao_p,
										null, null, null,
										null, null, nr_seq_exec_item_w,
										nm_usuario_p, cd_estabelecimento_p);
					end if;
				end if;
				end;
			end loop;
			close C13;
		end if;
	end if;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_valida_ocor_aut_caract_fin ( nr_seq_ocor_combinada_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_segurado_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, ie_utiliza_filtro_p text, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

