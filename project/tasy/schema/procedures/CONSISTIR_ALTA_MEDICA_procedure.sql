-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_alta_medica (cd_estabelecimento_p bigint, nr_atendimento_p bigint, nm_usuario_p text, ds_erro_p INOUT text, ds_erro_2_p INOUT text, nr_seq_item_p INOUT bigint) AS $body$
DECLARE


qt_regra_w		bigint;
qt_existe_w		bigint;
ie_diagnostico_w	varchar(1);
ie_prescricao_alta_w	varchar(1);
ie_evolucao_w		varchar(1);
ie_sumario_alta_w	varchar(1);
ie_orientacao_alta_w	varchar(1);
ie_tipo_atendimento_w	smallint;
cd_setor_atendimento_w	integer;
nr_seq_tipo_avaliacao_w	bigint;
ie_avaliacao_w		varchar(10);
ie_anamnese_w		varchar(10);
quebra_w		varchar(10)	:= chr(13)||chr(10);
ds_erro_w		varchar(2000);
ie_tipo_convenio_w	bigint;
ie_laudo_sus_w		varchar(1);
nr_seq_template_w	bigint;
ds_template_w		varchar(255);
ie_evolucao_clinica_w	varchar(3);
cd_convenio_w		integer;
ie_solic_just_lib_w   varchar(1);
qt_registros_just_w   bigint;
nr_seq_teste_vacina_w	bigint;
nr_atend_mae_w			bigint;
ie_sum_alta_transf_w    varchar(1);
nr_seq_rn_w		bigint;
ie_regra_req_inf_w    varchar(1);
ie_lista_tarefas_w		consistencia_alta_medica.ie_lista_tarefas%type;
qt_lista_inserida_w			bigint := 0;

C01 CURSOR FOR
	SELECT	coalesce(max(ie_diagnostico),'N'),
		coalesce(max(ie_prescricao_alta),'N'),
		coalesce(max(ie_evolucao),'N'),
		coalesce(max(ie_sumario_alta),'N'),
		coalesce(max(ie_orientacao_alta),'N'),
		coalesce(max(IE_AVALIACAO),'N'),
		coalesce(max(ie_anamnese),'N'),
		max(NR_SEQ_TIPO_AVALIACAO),
		coalesce(max(ie_laudo_sus),'N'),
		max(nr_seq_template),
		max(ie_evolucao_clinica),
		coalesce(max(ie_solic_just_lib),'N'),
		coalesce(max(ie_sum_alta_transf),'N'),
		coalesce(max(ie_req_informacao),'N'),
		coalesce(max(ie_lista_tarefas),'N')
	from	consistencia_alta_medica
	where	cd_estabelecimento	= cd_estabelecimento_p
	and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w)	= ie_tipo_atendimento_w
	and	coalesce(cd_setor_atendimento,cd_setor_atendimento_w) = cd_setor_atendimento_w
	and	coalesce(ie_tipo_convenio, coalesce(ie_tipo_convenio_w,0)) = coalesce(ie_tipo_convenio_w,0)
	and	coalesce(cd_convenio, coalesce(cd_convenio_w,0)) = coalesce(cd_convenio_w,0)
	and	coalesce(NR_SEQ_TESTE_VACINA,0) = 0
	order by coalesce(ie_tipo_atendimento,0),
		coalesce(cd_setor_atendimento,0);
		
C02 CURSOR FOR
	SELECT	coalesce(nr_seq_teste_vacina,0)
	from	consistencia_alta_medica
	where	cd_estabelecimento	= cd_estabelecimento_p
	and	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w)	= ie_tipo_atendimento_w
	and	coalesce(cd_setor_atendimento,cd_setor_atendimento_w) = cd_setor_atendimento_w
	and	coalesce(ie_tipo_convenio, coalesce(ie_tipo_convenio_w,0)) = coalesce(ie_tipo_convenio_w,0)
	and	coalesce(cd_convenio, coalesce(cd_convenio_w,0)) = coalesce(cd_convenio_w,0)
	and	coalesce(NR_SEQ_TESTE_VACINA,0) > 0
	order by coalesce(ie_tipo_atendimento,0),
		coalesce(cd_setor_atendimento,0);
		
C03 CURSOR FOR
	SELECT	distinct obter_valor_dominio(8672, c.cd_categoria) ds_categoria_p
	from	wl_worklist a,
			wl_regra_item b,
			wl_item c
	where	a.nr_seq_regra = b.nr_sequencia
	and     a.NR_SEQ_ITEM = c.nr_sequencia
	and		coalesce(a.dt_final_real::text, '') = ''
	and		a.nr_atendimento = nr_atendimento_p
	and		coalesce(c.ie_situacao,'A') = 'A'
	and		coalesce(b.ie_situacao, 'A') = 'A'
	and		b.ie_considerar_alta = 'S'
	and		c.cd_categoria <> 'MT';
	
C04 CURSOR FOR
	SELECT	distinct obter_valor_dominio(8672, c.cd_categoria) ds_categoria_p
	from	wl_worklist a,
			wl_regra_item b,
			wl_item c
	where	a.nr_seq_regra = b.nr_sequencia
	and     a.NR_SEQ_ITEM = c.nr_sequencia
	and		coalesce(a.dt_final_real::text, '') = ''
	and		((a.cd_pessoa_fisica = obter_pessoa_atendimento(nr_atendimento_p,'C')) or (a.nr_atendimento = nr_atendimento_p))
	and		coalesce(c.ie_situacao,'A') = 'A'
	and		coalesce(b.ie_situacao, 'A') = 'A'
	and		b.ie_considerar_alta = 'S'
	and		c.cd_categoria = 'MT';

BEGIN
nr_seq_item_p	:= 0;
select	count(*)
into STRICT	qt_regra_w
from	consistencia_alta_medica
where	cd_estabelecimento	= cd_estabelecimento_p;

if (qt_regra_w > 0) then	/*Tabela restringe 1 por estabelecimento*/
	
	select	ie_tipo_atendimento,
		obter_setor_atendimento(nr_atendimento),
		Obter_Tipo_Convenio(Obter_Convenio_Atendimento(nr_atendimento)),
		Obter_Convenio_Atendimento(nr_atendimento)
	into STRICT	ie_tipo_atendimento_w,
		cd_setor_atendimento_w,
		ie_tipo_convenio_w,
		cd_convenio_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_p;
	
	open C01;
	loop
	fetch C01 into	
		ie_diagnostico_w,
		ie_prescricao_alta_w,
		ie_evolucao_w,
		ie_sumario_alta_w,
		ie_orientacao_alta_w,
		ie_avaliacao_w,
		ie_anamnese_w,
		nr_seq_tipo_avaliacao_w,
		ie_laudo_sus_w,
		nr_seq_template_w,
		ie_evolucao_clinica_w,
		ie_solic_just_lib_w,
		ie_sum_alta_transf_w,
		ie_regra_req_inf_w,
		ie_lista_tarefas_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;
	
	if (ie_diagnostico_w = 'S') then
		select	count(*)
		into STRICT	qt_existe_w
		from	diagnostico_doenca
		where	nr_atendimento		= nr_atendimento_p
		and	ie_classificacao_doenca	= 'P';

		if (qt_existe_w = 0) then
			ds_erro_w	:= wheb_mensagem_pck.get_texto(278671);
			nr_seq_item_p	:= 1;
		end if;
	elsif (ie_diagnostico_w = 'E') then
	
		select	count(*)
		into STRICT	qt_existe_w
		from	diagnostico_doenca
		where	nr_atendimento		= nr_atendimento_p
		and	IE_TIPO_DIAGNOSTICO	IN (2, 3)
		and	coalesce(dt_inativacao::text, '') = ''
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

		if (qt_existe_w = 0) then
			ds_erro_w	:= wheb_mensagem_pck.get_texto(278673);
			nr_seq_item_p	:= 1;
		end if;	
	
	elsif (ie_diagnostico_w = 'D') then
		select	count(*)
		into STRICT	qt_existe_w
		from	diagnostico_doenca b,
			diagnostico_medico a
		where	a.nr_atendimento		= nr_atendimento_p
		and	a.nr_atendimento		= b.nr_atendimento
		and	a.dt_diagnostico		= b.dt_diagnostico
		and	a.ie_tipo_diagnostico		IN (2, 3)
		and	b.ie_classificacao_doenca	= 'P';
		
		if (qt_existe_w = 0) then
			ds_erro_w	:= wheb_mensagem_pck.get_texto(278674);
			nr_seq_item_p	:= 1;
		end if;
	elsif (ie_diagnostico_w = 'M') then
		select	count(*)
		into STRICT	qt_existe_w
		from	diagnostico_doenca b,
			diagnostico_medico a
		where	a.nr_atendimento		= nr_atendimento_p
		and	a.nr_atendimento		= b.nr_atendimento
		and	a.dt_diagnostico		= b.dt_diagnostico
		and	a.ie_tipo_diagnostico		IN (2, 3)
		and	b.ie_classificacao_doenca	= 'P'
		and	a.dt_diagnostico		> clock_timestamp() - interval '1 days';
		
		if (qt_existe_w = 0) then
			ds_erro_w	:= wheb_mensagem_pck.get_texto(278676);
			nr_seq_item_p	:= 1;
		end if;
	elsif (ie_diagnostico_w	= 'I') then
		select	count(*)
		into STRICT	qt_existe_w
		from	diagnostico_doenca
		where	nr_atendimento		= nr_atendimento_p
		and	coalesce(dt_inativacao::text, '') = ''
		and	(NR_SEQ_DIAG_INTERNO IS NOT NULL AND NR_SEQ_DIAG_INTERNO::text <> '');
		
		if (qt_existe_w = 0) then
			ds_erro_w	:= wheb_mensagem_pck.get_texto(278678);
			nr_seq_item_p	:= 1;
		end if;
	elsif (ie_diagnostico_w	= 'T') then
	
		select	count(*)
		into STRICT	qt_existe_w
		from	diagnostico_doenca
		where	nr_atendimento		= nr_atendimento_p
		and	coalesce(dt_inativacao::text, '') = '';
		if (qt_existe_w = 0) then
			ds_erro_w	:= wheb_mensagem_pck.get_texto(278679);
			nr_seq_item_p	:= 1;
		end if;			
	end if;
	
	if (ie_regra_req_inf_w	= 'S') then
		begin
		
			
		CALL pep_gerar_informacao_req(nr_atendimento_p, nm_usuario_p, 'M');		
		
		select  obter_se_regra_req_inf(nr_atendimento_p, nm_usuario_p)
		into STRICT	qt_existe_w
		;
		
			
		if (qt_existe_w > 0) then
			begin			
			
			ds_erro_w 		:= ds_erro_w || wheb_mensagem_pck.get_texto(333542);		
			nr_seq_item_p 	:= 99999;			
				
			end;
		end if;	
		end;
	end if;

	if (ie_prescricao_alta_w = 'S') then
		select	count(*)
		into STRICT	qt_existe_w
		from	prescr_medica
		where	nr_atendimento		= nr_atendimento_p
		and	ie_prescricao_alta	= 'S'
		and	(dt_liberacao_medico IS NOT NULL AND dt_liberacao_medico::text <> '');

		if (qt_existe_w = 0) then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(278680);
		end if;
	end if;

	if (ie_evolucao_w = 'S') then
		if ((trim(both ie_evolucao_clinica_w) IS NOT NULL AND (trim(both ie_evolucao_clinica_w))::text <> '')) then
			select	count(*)
			into STRICT	qt_existe_w
			from	evolucao_paciente_lib_v
			where	nr_atendimento	= nr_atendimento_p
			and	ie_evolucao_clinica = ie_evolucao_clinica_w;
			if (qt_existe_w = 0) then
				ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(278681, 'DS_TIPO_EVOLUCAO_P=' || substr(obter_descricao_padrao('TIPO_EVOLUCAO','DS_TIPO_EVOLUCAO', ie_evolucao_clinica_w),1,100));
				nr_seq_item_p	:= 5;
			end if;
		else
			select	count(*)
			into STRICT	qt_existe_w
			from	evolucao_paciente_lib_v
			where	nr_atendimento	= nr_atendimento_p;
			
			if (qt_existe_w = 0) then
				ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(278685);
				nr_seq_item_p	:= 5;
			end if;
		end if;
	end if;

	if (ie_sumario_alta_w = 'S') then
		select	count(*)
		into STRICT	qt_existe_w
		from	evolucao_paciente_lib_v
		where	nr_atendimento		= nr_atendimento_p
		and	ie_evolucao_clinica	= 'S';
		
		if (qt_existe_w = 0) then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(278687);
			nr_seq_item_p	:= 5;
		end if;
	end if;
	
	
	
	if (ie_orientacao_alta_w = 'S') then
		select	count(*)
		into STRICT	qt_existe_w
		from	atendimento_alta
		where	nr_atendimento		= nr_atendimento_p
		and	ie_tipo_orientacao	<> 'P'
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	coalesce(dt_inativacao::text, '') = '';
		
		if (qt_existe_w = 0) then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(278691);
		end if;
	end if;
	
	if (ie_avaliacao_w		= 'S') then
		select	count(*)
		into STRICT	qt_existe_w
		from	med_avaliacao_paciente
		where	nr_atendimento	= nr_atendimento_p
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	coalesce(dt_inativacao::text, '') = ''
		and	((coalesce(nr_seq_tipo_avaliacao_w::text, '') = '')or (nr_seq_tipo_avaliacao	= nr_seq_tipo_avaliacao_w));
		if (qt_existe_w	= 0) then
			ds_erro_w := ds_erro_w|| wheb_mensagem_pck.get_texto(278692, 'DS_QUEBRA_P=' || quebra_w);
			if (nr_seq_tipo_avaliacao_w IS NOT NULL AND nr_seq_tipo_avaliacao_w::text <> '') then
				ds_erro_w := ds_erro_w|| wheb_mensagem_pck.get_texto(278693, 'MED_TIPO_AVALIACAO_P=' || substr(obter_descricao_padrao('MED_TIPO_AVALIACAO','DS_TIPO', NR_SEQ_TIPO_AVALIACAO_w),1,100) ||
												';DS_QUEBRA_P=' || quebra_w);
			end if;
		
		end if;
			
		nr_seq_item_p	:= 7;
	end if;
	
	if (ie_anamnese_w		= 'S') then
		select	count(*)
		into STRICT	qt_existe_w
		from	anamnese_paciente
		where	nr_atendimento	= nr_atendimento_p
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	coalesce(dt_inativacao::text, '') = '';
		
		if (qt_existe_w = 0) then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(278698);
		end if;
		nr_seq_item_p	:= 83;
	end if;
	
	if (ie_laudo_sus_w		= 'S') then
		select	count(*)
		into STRICT	qt_existe_w
		from	sus_laudo_paciente
		where	nr_atendimento	= nr_atendimento_p
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	coalesce(dt_cancelamento::text, '') = '';
		
		if (qt_existe_w = 0) then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(278701);
		end if;
	end if;
	
	if (nr_seq_template_w IS NOT NULL AND nr_seq_template_w::text <> '') then
		select	count(*)
		into STRICT	qt_existe_w
		from	ehr_registro a,
			ehr_reg_template b
		where	a.nr_sequencia = b.nr_seq_reg
		and	a.nr_atendimento = nr_atendimento_p
		and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and	coalesce(a.dt_inativacao::text, '') = ''
		and	b.nr_seq_template	= nr_seq_template_w;
		
		if (qt_existe_w = 0) then
			select	max(ds_template)
			into STRICT	ds_template_w
			from	ehr_template
			where	nr_sequencia	= nr_seq_template_w;
		
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(278702, 'DS_TEMPLATE_P=' || ds_template_w);
		end if;
		
	end if;
	
		if (ie_solic_just_lib_w = 'S') then
		select count(nr_sequencia)
		into STRICT	qt_registros_just_w
		from	paciente_justificativa
		where   coalesce(dt_liberacao::text, '') = ''
		and		nr_atendimento = nr_atendimento_p;
		
		if (qt_registros_just_w > 0) then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(278706);
		end if;
	
	end if;

	if (ie_sum_alta_transf_w = 'S') then
		select 	count(*)
		into STRICT	qt_existe_w
		from	atend_sumario_alta
		where   (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and		nr_atendimento = nr_atendimento_p
		and		coalesce(dt_inativacao::text, '') = '';
		
		if (qt_existe_w = 0) then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(315746);
			nr_seq_item_p	:= 1173;
		end if;
	
	end if;
	
	if (ie_lista_tarefas_w = 'S') then		
		for c03_w in C03 loop
			begin
				if (qt_lista_inserida_w = 0) then
					ds_erro_w := ds_erro_w || wheb_mensagem_pck.get_texto(1036223) || quebra_w;
					qt_lista_inserida_w := qt_lista_inserida_w + 1;
				end if;
				
				ds_erro_w := ds_erro_w || ' - ' || c03_w.DS_CATEGORIA_P || quebra_w;
			end;
		end loop;
		for c04_w in C04 loop
			begin
				if (qt_lista_inserida_w = 0) then
					ds_erro_w := ds_erro_w || wheb_mensagem_pck.get_texto(1036223) || quebra_w;
					qt_lista_inserida_w := qt_lista_inserida_w + 1;
				end if;
				
				ds_erro_w := ds_erro_w || ' - ' || c04_w.DS_CATEGORIA_P || quebra_w;
			end;
		end loop;
	end if;
	
end if;

open C02;
loop
fetch C02 into	
	nr_seq_teste_vacina_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	select	coalesce(max(nr_atendimento_mae),0)
	into STRICT	nr_atend_mae_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;
	
	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_rn_w
	from	nascimento
	where	nr_atend_rn = nr_atendimento_p;
	
	if (nr_atend_mae_w > 0) then
		select	count(*)
		into STRICT	qt_existe_w
		from	atend_vacina_teste a
		where	a.nr_atendimento = nr_atend_mae_w
		and		nr_seq_teste_vacina = nr_seq_teste_vacina_w
		and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and		coalesce(dt_inativacao::text, '') = ''
		and	nr_seq_nascimento = nr_seq_rn_w;
		
		if (qt_existe_w = 0) then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(295390, 'DS_EXAME_P=' || substr(obter_desc_teste_vacina(nr_seq_teste_vacina_w),1,100));
			nr_seq_item_p	:= 364;
		end if;
	end if;
	
	end;
end loop;
close C02;

ds_erro_p	:= substr(ds_erro_w,1,254);
ds_erro_2_p	:= substr(ds_erro_w,255,255);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_alta_medica (cd_estabelecimento_p bigint, nr_atendimento_p bigint, nm_usuario_p text, ds_erro_p INOUT text, ds_erro_2_p INOUT text, nr_seq_item_p INOUT bigint) FROM PUBLIC;

