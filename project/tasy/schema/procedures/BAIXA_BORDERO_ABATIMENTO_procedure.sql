-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixa_bordero_abatimento (nr_bordero_p bigint, ie_acao_p text, nm_usuario_p text, qt_resultado_p INOUT text) AS $body$
DECLARE

/* 
ie_acao_p 
	'BP'	Baixa de borderô a pagar 
	'EP'	Estorno de borderô a pagar 
*/
 
 
/* dados do borderô */
 
cd_estabelecimento_w	smallint;
nr_seq_conta_banco_w	bigint;
ie_tipo_w		varchar(1);

/* título a pagar */
 
nr_titulo_w		bigint;
vl_bordero_w		double precision;
cd_cgc_w		varchar(14);
cd_pessoa_fisica_w	varchar(10);
vl_baixa_w		double precision;
nr_seq_baixa_w		bigint;
cd_tipo_baixa_w		integer;
nr_seq_trans_abat_w	bigint;
vl_saldo_bordero_w	double precision;

/* título a receber */
 
nr_titulo_rec_w		bigint;
vl_saldo_titulo_w	double precision	:= 0;
cd_tipo_recebimento_w	integer;
nr_seq_trans_financ_w	bigint;
nr_seq_liq_w		bigint;
vl_recebido_w		double precision;
qt_titulo_w		bigint	:= 0;
qt_tit_rec_abat_w	bigint;

vl_abatimento_w		w_titulo_abatimento.vl_abatimento%type;	
 
/* todos os títulos do borderô */
 
c01 CURSOR FOR 
SELECT	'T' ie_tipo, 
	a.nr_titulo, 
	a.vl_bordero, 
	a.cd_cgc, 
	a.cd_pessoa_fisica 
from	titulo_pagar a 
where	a.nr_bordero	= nr_bordero_p 

union
 
SELECT	'B' ie_tipo, 
	b.nr_titulo, 
	a.vl_bordero, 
	b.cd_cgc, 
	b.cd_pessoa_fisica 
from	titulo_pagar b, 
	bordero_tit_pagar a 
where	a.nr_titulo	= b.nr_titulo 
and	a.nr_bordero	= nr_bordero_p 
order by	vl_bordero desc;

/* títulos a receber da mesma pessoa do título a pagar */
 
c02 CURSOR FOR 
SELECT	a.nr_titulo, 
	a.vl_saldo_titulo 
from	titulo_receber a 
where	a.ie_situacao		= '1' 
and	a.vl_saldo_titulo	> 0 
and	(((cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') and a.cd_cgc = cd_cgc_w) or ((cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and a.cd_pessoa_fisica = cd_pessoa_fisica_w)) 
and (coalesce(qt_tit_rec_abat_w,0) = 0 or 
	exists (	SELECT	1 
		from	w_titulo_abatimento x 
		where	x.nr_titulo_ref	= a.nr_titulo 
		and	x.ie_pagar_receber = 'P' 
		and	x.nr_bordero = nr_bordero_p)) 
order by	a.vl_saldo_titulo desc;

/* baixas por abatimento */
 
c03 CURSOR FOR 
SELECT	a.nr_titulo, 
	a.nr_sequencia, 
	a.vl_recebido 
from	titulo_pagar_baixa b, 
	titulo_receber_liq a 
where	a.nr_sequencia	= 
	(SELECT	max(y.nr_sequencia) 
	from	titulo_receber_liq y, 
		titulo_pagar_baixa x 
	where	x.nr_sequencia	= y.nr_seq_baixa_pagar 
	and	x.nr_titulo	= y.nr_tit_pagar 
	and	x.nr_bordero	= nr_bordero_p 
	and	x.nr_titulo	= b.nr_titulo) 
and	a.nr_seq_baixa_pagar	= b.nr_sequencia 
and	a.nr_tit_pagar		= b.nr_titulo 
and	a.nr_tit_pagar		= nr_titulo_w;


BEGIN 
 
select	count(*) 
into STRICT	qt_tit_rec_abat_w 
from	w_titulo_abatimento a 
where	a.ie_pagar_receber = 'P' 
and	a.nr_bordero = nr_bordero_p;
 
select	max(a.cd_estabelecimento), 
	max(a.nr_seq_conta_banco) 
into STRICT	cd_estabelecimento_w, 
	nr_seq_conta_banco_w 
from	bordero_pagamento a 
where	a.nr_bordero	= nr_bordero_p;
 
select	max(a.cd_tipo_baixa_padrao), 
	max(a.nr_seq_trans_fin_abat) 
into STRICT	cd_tipo_baixa_w, 
	nr_seq_trans_abat_w 
from	parametros_contas_pagar a 
where	a.cd_estabelecimento	= cd_estabelecimento_w;
 
select	max(a.nr_seq_trans_fin_abat) 
into STRICT	nr_seq_trans_financ_w 
from	parametro_contas_receber a 
where	a.cd_estabelecimento	= cd_estabelecimento_w;
 
select	max(a.cd_tipo_recebimento), 
	coalesce(nr_seq_trans_financ_w,max(a.nr_seq_trans_fin)) 
into STRICT	cd_tipo_recebimento_w, 
	nr_seq_trans_financ_w 
from	tipo_recebimento a 
where	a.ie_tipo_consistencia	= 12 /* tipo abatimento */
 
and   ((a.cd_estabelecimento = cd_estabelecimento_w) or (coalesce(a.cd_estabelecimento::text, '') = ''));
 
if (coalesce(cd_tipo_recebimento_w::text, '') = '') then 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(197089);
end if;
 
open	c01;
loop 
fetch	c01 into 
	ie_tipo_w, 
	nr_titulo_w, 
	vl_bordero_w, 
	cd_cgc_w, 
	cd_pessoa_fisica_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
 
	vl_saldo_bordero_w	:= vl_bordero_w;
	vl_baixa_w		:= 0;
 
	select	coalesce(max(a.nr_sequencia),0) + 1 
	into STRICT	nr_seq_baixa_w 
	from	titulo_pagar_baixa a 
	where	a.nr_titulo	= nr_titulo_w;
 
	if (ie_acao_p = 'BP') then	/* baixar */
 
 
		open	c02;
		loop 
		fetch	c02 into 
			nr_titulo_rec_w, 
			vl_saldo_titulo_w;
		exit	when(c02%notfound or vl_saldo_bordero_w <= 0);
 
			/*	se o saldo do título a receber for maior do que o saldo restante do título a pagar, 
				então a baixa parcial será feita no título a receber, senão a baixa parcial será no título a pagar */
 
			if (vl_saldo_bordero_w	< vl_saldo_titulo_w) then 
				vl_saldo_titulo_w	:= vl_saldo_bordero_w;
			end if;
			 
			select	max(vl_abatimento) 
			into STRICT	vl_abatimento_w 
			from	w_titulo_abatimento 
			where	nr_bordero 	= nr_bordero_p 
			and		nr_titulo_ref	= nr_titulo_rec_w;
			 
			if (vl_abatimento_w IS NOT NULL AND vl_abatimento_w::text <> '') then 
				vl_saldo_titulo_w := vl_abatimento_w;
			end if;
			 
			CALL baixa_titulo_receber(	cd_estabelecimento_w, 
						cd_tipo_recebimento_w, 
						nr_titulo_rec_w, 
						nr_seq_trans_financ_w, 
						vl_saldo_titulo_w, 
						clock_timestamp(), 
						nm_usuario_p, 
						0, 
						null, 
						nr_seq_conta_banco_w, 
						0, 
						0);
 
			select	max(a.nr_sequencia) 
			into STRICT	nr_seq_liq_w 
			from	titulo_receber_liq a 
			where	a.nr_titulo	= nr_titulo_rec_w;
 
			update	titulo_receber_liq 
			set	nr_tit_pagar		= nr_titulo_w, 
				nr_seq_baixa_pagar	= nr_seq_baixa_w 
			where	nr_sequencia		= nr_seq_liq_w 
			and	nr_titulo		= nr_titulo_rec_w;
 
			CALL Atualizar_Saldo_Tit_Rec(nr_titulo_rec_w, nm_usuario_p);
 
			vl_saldo_bordero_w	:= vl_saldo_bordero_w - vl_saldo_titulo_w;
			vl_baixa_w		:= coalesce(vl_baixa_w,0) + vl_saldo_titulo_w;
			qt_titulo_w		:= qt_titulo_w + 1;
			vl_abatimento_w	:= null;
 
		end	loop;
		close	c02;
 
	elsif (ie_acao_p = 'EP') then /* estornar */
 
 
		open	c03;
		loop 
		fetch	c03 into 
			nr_titulo_rec_w, 
			nr_seq_liq_w, 
			vl_recebido_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
 
			CALL estornar_tit_receber_liq(	nr_titulo_rec_w, 
							nr_seq_liq_w, 
							null, 
							nm_usuario_p, 
							'N', 
							wheb_mensagem_pck.get_texto(305634), 
							'P'); --OS 1485326 -> Para estorno de abatimento, deve ser 'P' aqui. Na rotina de estorno do abatimento (estornar_titulos_abatimento) no Titulo a Pagar, já foi tratado na OS 618966 em 2013. 
			select	max(a.nr_sequencia) 
			into STRICT	nr_seq_liq_w 
			from	titulo_receber_liq a 
			where	a.nr_titulo	= nr_titulo_rec_w;
 
			update	titulo_receber_liq 
			set	nr_tit_pagar		= nr_titulo_w, 
				nr_seq_baixa_pagar	= nr_seq_baixa_w 
			where	nr_sequencia		= nr_seq_liq_w 
			and	nr_titulo		= nr_titulo_rec_w;
 
			vl_baixa_w	:= coalesce(vl_baixa_w,0) - vl_recebido_w;
			qt_titulo_w	:= qt_titulo_w + 1;
 
		end	loop;
		close	c03;
 
	end if;
 
	if (coalesce(vl_baixa_w,0) <> 0) then 
 
		CALL baixa_titulo_pagar(	cd_estabelecimento_w, 
					cd_tipo_baixa_w, 
					nr_titulo_w, 
					vl_baixa_w, 
					nm_usuario_p, 
					nr_seq_trans_abat_w, 
					null, 
					null, 
					clock_timestamp(), 
					nr_seq_conta_banco_w);
 
		update	titulo_pagar_baixa 
		set	nr_bordero	= nr_bordero_p 
		where	nr_sequencia	= nr_seq_baixa_w 
		and	nr_titulo	= nr_titulo_w;
 
		/* atualizar o valor do borderô, senão, se sobrar algum valor à ser baixado, 
		  vai dar problema na hora de baixar o borderô pela forma convencional*/
 
		if (ie_tipo_w = 'T') then	/* tabela que deve ser atualizada */
 
 
			update	titulo_pagar 
			set	vl_bordero	= vl_bordero - vl_baixa_w 
			where	nr_titulo	= nr_titulo_w 
			and	nr_bordero	= nr_bordero_p;
 
		elsif (ie_tipo_w = 'B') then 
 
			update	bordero_tit_pagar 
			set	vl_bordero	= vl_bordero - vl_baixa_w 
			where	nr_titulo	= nr_titulo_w 
			and	nr_bordero	= nr_bordero_p;
 
		end if;
 
		CALL atualizar_saldo_tit_pagar(nr_titulo_w,nm_usuario_p);
		CALL Gerar_W_Tit_Pag_imposto(nr_titulo_w,nm_usuario_p);
 
	end if;	
 
end	loop;
close	c01;
 
delete	from w_titulo_abatimento 
where	ie_pagar_receber = 'P' 
and	nr_bordero = nr_bordero_p;
 
qt_resultado_p	:= qt_titulo_w;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixa_bordero_abatimento (nr_bordero_p bigint, ie_acao_p text, nm_usuario_p text, qt_resultado_p INOUT text) FROM PUBLIC;

