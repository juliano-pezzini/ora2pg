-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE Agendas AS (nr_sequencia 		agenda_paciente.nr_sequencia%type,
			cd_agenda		agenda_paciente.cd_agenda%type,
		        dt_agenda		timestamp,
			hr_inicio		timestamp,
			nr_minuto_duracao       agenda_paciente.nr_minuto_duracao%type,
			ie_status_agenda        agenda_paciente.ie_status_agenda%type,
			cd_pessoa_fisica	agenda_paciente.cd_pessoa_fisica%type,
			ie_alterou_inicio	varchar(2),
			nr_seq_apresentacao	bigint);


CREATE OR REPLACE PROCEDURE gerar_agenda_paciente_de (nr_seq_agenda_dest_p bigint, nr_seq_agenda_orig_p bigint, nr_minuto_duracao_dest_p bigint, nm_usuario_p text, nr_seq_motivo_p bigint, ds_motivo_p text) AS $body$
DECLARE



nr_sequencia_dest_w		agenda_paciente.nr_sequencia%type;
nr_sequencia_orig_w		agenda_paciente.nr_sequencia%type;
nr_minuto_duracao_dest_w	agenda_paciente.nr_minuto_duracao%type;
nr_minuto_duracao_orig_w	agenda_paciente.nr_minuto_duracao%type;
hr_inicio_dest_w		timestamp;
hr_inicio_orig_w		timestamp;
ie_status_agenda_dest_w		agenda_paciente.ie_status_agenda%type;
ie_status_agenda_orig_w		agenda_paciente.ie_status_agenda%type;
nr_seq_agenda_orig_w		agenda_paciente.nr_sequencia%type;
nr_seq_agenda_dest_w		agenda_paciente.nr_sequencia%type;
cd_agenda_dest_w		agenda_paciente.cd_agenda%type;
cd_pessoa_fisica_orig_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_pessoa_fisica_dest_w		pessoa_fisica.cd_pessoa_fisica%type;
dt_agenda_orig_w		timestamp;
dt_agenda_dest_w		timestamp;
ie_ctrl_loop_w			bigint;
		
type VetorAgendas is table of Agendas index by integer;
array_agendas_w  VetorAgendas;

c_agenda CURSOR(nr_seq_agenda_dest_p    bigint, nr_seq_agenda_orig_p    bigint, cd_pessoa_fisica_orig_p	   text) FOR
	SELECT	a.nr_sequencia,
		a.cd_agenda,
		a.dt_agenda,
		a.hr_inicio,
		nr_minuto_duracao_dest_p nr_minuto_duracao,
		a.ie_status_agenda,
		cd_pessoa_fisica_orig_p cd_pessoa_fisica,
		1 nr_seq_apresentacao
	from 	agenda_paciente a
	where	a.nr_sequencia	= nr_seq_agenda_dest_p
	
union

	SELECT	a.nr_sequencia,
		a.cd_agenda,
		a.dt_agenda,
		a.hr_inicio + (nr_minuto_duracao_dest_p / 1440) hr_inicio,
		a.nr_minuto_duracao,
		a.ie_status_agenda,
		a.cd_pessoa_fisica,
		2 nr_seq_apresentacao
	from 	agenda_paciente a
	where	a.nr_sequencia	= nr_seq_agenda_dest_p
	and	a.ie_status_agenda not in ('C','E')
	
union

	select	a.nr_sequencia,
		a.cd_agenda,
		a.dt_agenda,
		a.hr_inicio,
		a.nr_minuto_duracao,
		a.ie_status_agenda,
		a.cd_pessoa_fisica,	
		3 nr_seq_apresentacao
	from 	agenda_paciente a
	where	a.cd_agenda     = cd_agenda_dest_w
	and	a.nr_sequencia	<> nr_seq_agenda_dest_p
	and	a.nr_sequencia  <> nr_seq_agenda_orig_p
	and	a.hr_inicio between  hr_inicio_dest_w and fim_dia(hr_inicio_dest_w)
	and	a.ie_status_agenda not in ('C','E')
	order by nr_seq_apresentacao, hr_inicio;
	
BEGIN


select max(nr_sequencia),
       max(hr_inicio),
       max(nr_minuto_duracao),
       max(ie_status_agenda),
       max(cd_pessoa_fisica),
       max(cd_agenda),
       max(dt_agenda)
into STRICT   nr_sequencia_dest_w,
       hr_inicio_dest_w,
       nr_minuto_duracao_dest_w,
       ie_status_agenda_dest_w,
       cd_pessoa_fisica_dest_w,
       cd_agenda_dest_w,
       dt_agenda_dest_w
from   agenda_paciente
where  nr_sequencia = nr_seq_agenda_dest_p;


select max(nr_sequencia),
       max(hr_inicio),
       max(nr_minuto_duracao),
       max(ie_status_agenda),
       max(cd_pessoa_fisica),
       max(dt_agenda)
into STRICT   nr_sequencia_orig_w,
       hr_inicio_orig_w,
       nr_minuto_duracao_orig_w,
       ie_status_agenda_orig_w,
       cd_pessoa_fisica_orig_w,
       dt_agenda_orig_w
from   agenda_paciente
where  nr_sequencia = nr_seq_agenda_orig_p;

ie_ctrl_loop_w := 1;

for r_c_agenda in c_agenda(nr_seq_agenda_dest_p, nr_seq_agenda_orig_p, cd_pessoa_fisica_orig_w) loop
	array_agendas_w[ie_ctrl_loop_w].nr_sequencia 	    := r_c_agenda.nr_sequencia;
	array_agendas_w[ie_ctrl_loop_w].cd_agenda 	    := r_c_agenda.cd_agenda;
	array_agendas_w[ie_ctrl_loop_w].dt_agenda 	    := r_c_agenda.dt_agenda;
	array_agendas_w[ie_ctrl_loop_w].hr_inicio 	    := r_c_agenda.hr_inicio;
	array_agendas_w[ie_ctrl_loop_w].nr_minuto_duracao   := r_c_agenda.nr_minuto_duracao;
	array_agendas_w[ie_ctrl_loop_w].ie_status_agenda    := r_c_agenda.ie_status_agenda;
	array_agendas_w[ie_ctrl_loop_w].cd_pessoa_fisica    := r_c_agenda.cd_pessoa_fisica;
	array_agendas_w[ie_ctrl_loop_w].nr_seq_apresentacao := r_c_agenda.nr_seq_apresentacao;
	array_agendas_w[ie_ctrl_loop_w].ie_alterou_inicio   := 'N';
	ie_ctrl_loop_w := ie_ctrl_loop_w + 1;
end loop;


for i in 1..array_agendas_w.count loop
	if (i + 1 <= array_agendas_w.count) then
		if ((array_agendas_w[i].hr_inicio + (array_agendas_w[i].nr_minuto_duracao / 1440)) >  array_agendas_w[i + 1].hr_inicio) then
		     array_agendas_w[i + 1].hr_inicio := (array_agendas_w[i].hr_inicio + (array_agendas_w[i].nr_minuto_duracao / 1440));
			
			 if (array_agendas_w[i + 1].ie_status_agenda <> 'L') then
				array_agendas_w[i + 1].ie_alterou_inicio := 'S';
			 end if;
		elsif (array_agendas_w[i].nr_seq_apresentacao = 1 and array_agendas_w[i + 1].ie_status_agenda <> 'L') then
		     array_agendas_w[i + 1].ie_alterou_inicio := 'S';
		else
		    exit;
		end if;
	end if;	
end loop;


for x IN REVERSE array_agendas_w.count..1 loop
	if (array_agendas_w[x].ie_alterou_inicio = 'S') then
	    CALL transfer_patient_pac_gs(array_agendas_w[x].nr_sequencia, nm_usuario_p, array_agendas_w[x].cd_agenda, array_agendas_w[x].dt_agenda, array_agendas_w[x].hr_inicio, array_agendas_w[x].nr_minuto_duracao, null, null);	
	end if;
end loop;

if (ie_status_agenda_dest_w = 'L') then
    CALL generate_consis_transf_cir(nr_seq_agenda_orig_p, nr_seq_agenda_dest_p);
    CALL transferir_agenda_pac(nr_seq_agenda_orig_p, nr_seq_agenda_dest_p, nm_usuario_p, nr_seq_motivo_p, ds_motivo_p, null, null);
else
    CALL transfer_patient_pac_gs(nr_seq_agenda_orig_p, nm_usuario_p, cd_agenda_dest_w, dt_agenda_dest_w, hr_inicio_dest_w, nr_minuto_duracao_dest_p, nr_seq_motivo_p, ds_motivo_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_agenda_paciente_de (nr_seq_agenda_dest_p bigint, nr_seq_agenda_orig_p bigint, nr_minuto_duracao_dest_p bigint, nm_usuario_p text, nr_seq_motivo_p bigint, ds_motivo_p text) FROM PUBLIC;

