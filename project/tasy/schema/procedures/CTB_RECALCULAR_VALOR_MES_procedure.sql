-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_recalcular_valor_mes ( cd_empresa_p bigint, cd_estabelecimento_p bigint, nr_seq_mes_ref_p bigint, ie_vago_p text, nm_usuario_p text) AS $body$
DECLARE

 
ds_retorno_w				varchar(4000);
dt_referencia_w				timestamp;
ind					bigint	:= 0;
nr_Lote_contabil_w			lote_contabil.nr_lote_contabil%Type;
nr_sequencia_w				bigint;
qt_contador_w				bigint	:= 0;
qt_registro_w				bigint;

c01 CURSOR FOR 
SELECT	a.nr_lote_contabil, 
	a.cd_tipo_lote_contabil, 
	a.nr_seq_mes_ref, 
	a.dt_atualizacao_saldo 
from	lote_contabil a 
where	trunc(a.dt_referencia,'mm') = dt_referencia_w 
and	a.cd_estabelecimento	= cd_estabelecimento_p 
and	a.cd_tipo_lote_contabil in (3, 25, 45) 
order	by a.cd_tipo_lote_contabil;

vet01	c01%RowType;
type lotes is table of c01%RowType index by integer;
lotes_w					lotes;

BEGIN 
 
select	trunc(max(a.dt_referencia),'mm') 
into STRICT	dt_referencia_w 
from	ctb_mes_ref a 
where	a.nr_sequencia	= nr_seq_mes_ref_p;
 
/*Abre o mês*/
 
CALL gravar_processo_longo(Wheb_mensagem_pck.get_texto(795920),'CTB_RECALCULAR_VALOR_MES',qt_contador_w);
 
/*ctb_abrir_fechar_mes(nr_seq_mes_ref_p,'N',nm_usuario_p);*/
 
/* Valoriza o estoque*/
 
CALL gravar_processo_longo(Wheb_mensagem_pck.get_texto(795917),'CTB_RECALCULAR_VALOR_MES',qt_contador_w);
CALL valorizar_estoque(dt_referencia_w, cd_Estabelecimento_p, 'N',nm_usuario_p);
/*Resumo do estoque */
 
CALL gravar_processo_longo(Wheb_mensagem_pck.get_texto(795922),'CTB_RECALCULAR_VALOR_MES',qt_contador_w);
CALL gerar_resumo_movto_estoque(dt_referencia_w, cd_estabelecimento_p, nm_usuario_p);
/*Retirando lote da contabilidade*/
 
CALL gravar_processo_longo(Wheb_mensagem_pck.get_texto(795941),'CTB_RECALCULAR_VALOR_MES',qt_contador_w);
 
begin 
select	1 
into STRICT	qt_registro_w 
from	lote_contabil a 
where	cd_estabelecimento	= cd_estabelecimento_p 
and	dt_referencia		= dt_referencia_w 
and	cd_tipo_lote_contabil	= 45  LIMIT 1;
exception when others then 
	qt_registro_w	:= 0;
end;
 
if (qt_registro_w = 0) then 
	CALL gerar_lote_contabil(cd_estabelecimento_p, 45, dt_referencia_w, nm_usuario_p);
	ind				:= ind + 1;
	select	max(a.nr_lote_contabil) 
	into STRICT	lotes_w[ind].nr_lote_contabil 
	from	lote_contabil a 
	where	cd_estabelecimento	= cd_estabelecimento_p 
	and	dt_referencia		= dt_referencia_w 
	and	cd_tipo_lote_contabil	= 45;
	 
end if;
 
open C01;
loop 
fetch C01 into	 
	vet01;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	ind					:= ind + 1;
	lotes_w[ind].nr_lote_contabil		:= vet01.nr_lote_contabil;
	lotes_w[ind].cd_tipo_lote_contabil	:= vet01.cd_tipo_lote_contabil;
	lotes_w[ind].nr_seq_mes_ref		:= vet01.nr_seq_mes_ref;
	lotes_w[ind].dt_atualizacao_saldo	:= vet01.dt_atualizacao_saldo;
	 
	if (vet01.dt_atualizacao_saldo IS NOT NULL AND vet01.dt_atualizacao_saldo::text <> '') then 
		ds_retorno_w := CTB_Desatualizar_Lote(vet01.nr_lote_contabil, nm_usuario_p, ds_retorno_w);
	end if;
	if (vet01.nr_seq_mes_ref IS NOT NULL AND vet01.nr_seq_mes_ref::text <> '') then 
		CALL ctb_excluir_lote(vet01.nr_lote_contabil, nm_usuario_p);
	end if;
	end;
end loop;
close C01;
commit;
 
for i in 1..lotes_w.Count loop 
	begin 
	/*Recalculando lote contábil:*/
 
	CALL gravar_processo_longo(Wheb_mensagem_pck.get_texto(795943) || ' ' || lotes_w[i].nr_lote_contabil,'CTB_RECALCULAR_VALOR_MES',qt_contador_w);
	qt_registro_w	:= 0;
	/* Desfazer os lotes de consumo*/
 
	if (lotes_w[i].cd_tipo_lote_contabil = 3) then 
		begin 
		ds_retorno_w := contabiliza_consumo_mensal(lotes_w[i].nr_lote_contabil, nm_usuario_p, 'S', ds_retorno_w);
		ds_retorno_w := contabiliza_consumo_mensal(lotes_w[i].nr_lote_contabil, nm_usuario_p, 'N', ds_retorno_w);
				 
		begin 
		select	count(*) 
		into STRICT	qt_registro_w 
		from	lote_contabil a, 
			movimento_contabil b 
		where	a.nr_lote_contabil	= b.nr_lote_contabil 
		and	a.nr_lote_contabil	= lotes_w[i].nr_lote_contabil;
		exception when no_data_found then 
			qt_registro_w	:= 0;
		end;
		 
		if (qt_registro_w = 0) then 
		/*Não gerou movimento do lote de consumo*/
 
			ds_retorno_w	:= substr(Wheb_mensagem_pck.get_texto(795944) || ' ' || lotes_w[i].nr_lote_contabil,1,255);
			CALL wheb_mensagem_pck.exibir_mensagem_abort(260995,'DS_MSG=' || ds_retorno_w);
		end if;
		 
		end;
	elsif (lotes_w[i].cd_tipo_lote_contabil = 25) then /* Desfazer os lotes de produção*/
 
		begin 
		ds_retorno_w := contabiliza_lote_producao(lotes_w[i].nr_lote_contabil, nm_usuario_p, ds_retorno_w, 'S');
		ds_retorno_w := contabiliza_lote_producao(lotes_w[i].nr_lote_contabil, nm_usuario_p, ds_retorno_w, 'N');
		begin 
		select	count(*) 
		into STRICT	qt_registro_w 
		from	lote_contabil a, 
			movimento_contabil b 
		where	a.nr_lote_contabil	= b.nr_lote_contabil 
		and	a.nr_lote_contabil	= lotes_w[i].nr_lote_contabil;
		exception when no_data_found then 
			qt_registro_w	:= 0;
		end;
		 
		if (qt_registro_w = 0) then 
		/*Não gerou movimento do lote de produção*/
 
			ds_retorno_w	:= substr(Wheb_mensagem_pck.get_texto(795945) || ' ' || lotes_w[i].nr_lote_contabil,1,255);
			CALL wheb_mensagem_pck.exibir_mensagem_abort(260995,'DS_MSG=' || ds_retorno_w);
		end if;
		 
		end;
	elsif (lotes_w[i].cd_tipo_lote_contabil = 45) then /* Desfazer os lotes de produção*/
 
		begin 
		ds_retorno_w := contabiliza_ajuste_producao(lotes_w[i].nr_lote_contabil, nm_usuario_p, ds_retorno_w, 'S');
		ds_retorno_w := contabiliza_ajuste_producao(lotes_w[i].nr_lote_contabil, nm_usuario_p, ds_retorno_w, 'N');
		 
		begin 
		select	count(*) 
		into STRICT	qt_registro_w 
		from	lote_contabil a, 
			movimento_contabil b 
		where	a.nr_lote_contabil	= b.nr_lote_contabil 
		and	a.nr_lote_contabil	= lotes_w[i].nr_lote_contabil;
		exception when no_data_found then 
			qt_registro_w	:= 0;
		end;
		 
		if (qt_registro_w = 0) then 
		/*Não gerou movimento do lote de ajuste de produção*/
 
			ds_retorno_w	:= substr(Wheb_mensagem_pck.get_texto(795947) || ' ' || lotes_w[i].nr_lote_contabil,1,255);
			CALL wheb_mensagem_pck.exibir_mensagem_abort(260995,'DS_MSG=' || ds_retorno_w);
		end if;
		 
		end;
	end if;
	CALL gravar_processo_longo(Wheb_mensagem_pck.get_texto(795924) || ' ' || lotes_w[i].nr_lote_contabil,'CTB_RECALCULAR_VALOR_MES',qt_contador_w);
	if (qt_registro_w > 0) then 
		begin 
		begin 
		CALL ctb_integrar_lote(lotes_w[i].nr_lote_contabil, nr_seq_mes_ref_p, nm_usuario_p);
		exception when others then 
		/*Não gerou movimento do lote*/
 
			ds_retorno_w	:= substr(Wheb_mensagem_pck.get_texto(795948) || ' ' || lotes_w[i].nr_lote_contabil || ' ' || qt_registro_w,1,255);
			CALL wheb_mensagem_pck.exibir_mensagem_abort(260995,'DS_MSG=' || ds_retorno_w);
		end;
		 
		ds_retorno_w := ctb_consistir_lote(lotes_w[i].nr_lote_contabil, ds_retorno_w, nm_usuario_p);
		commit;
		/*Atualizando lote contábil*/
 
		CALL gravar_processo_longo(Wheb_mensagem_pck.get_texto(795951) || ' ' || lotes_w[i].nr_lote_contabil,'CTB_RECALCULAR_VALOR_MES',qt_contador_w);
		ds_retorno_w := ctb_atualizar_saldo(lotes_w[i].nr_lote_contabil, 'S', nm_usuario_p, 'N', ds_retorno_w, 'S');
		end;
	end if;
	 
	end;
end loop;
 
commit;
if (coalesce(ds_retorno_w,'X') <> 'X') then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(260995,'DS_MSG=' || ds_retorno_w);
else 
	ds_retorno_w	:= Wheb_mensagem_pck.get_texto(795936);
	CALL wheb_mensagem_pck.exibir_mensagem_abort(260995,'DS_MSG=' || ds_retorno_w);
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_recalcular_valor_mes ( cd_empresa_p bigint, cd_estabelecimento_p bigint, nr_seq_mes_ref_p bigint, ie_vago_p text, nm_usuario_p text) FROM PUBLIC;

