-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_contas_proc_list ( ds_procedimentos_p text, qt_procedimentos_p text, ie_origem_proced_p text, dt_procedimento_p timestamp, dt_hora_inicio_p timestamp, dt_hora_fim_p timestamp, dt_procedimento2_p timestamp, dt_hora_inicio2_p timestamp, dt_hora_fim2_p timestamp, dt_procedimento3_p timestamp, dt_hora_inicio3_p timestamp, dt_hora_fim3_p timestamp, dt_procedimento4_p timestamp, dt_hora_inicio4_p timestamp, dt_hora_fim4_p timestamp, dt_procedimento5_p timestamp, dt_hora_inicio5_p timestamp, dt_hora_fim5_p timestamp, ie_utiliza_data_p text, nr_seq_conta_p bigint, ie_lista_proc_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_procedimento_w		timestamp;
dt_hora_inicio_w		timestamp;
dt_hora_fim_w			timestamp;
qt_proc_informados_w	integer := 0;
ie_permite_inserir_w	varchar(1) := 'N';
ie_lista_proc_w			varchar(20);
ds_ordem_proc_w			varchar(1);
ds_procedimentos_w 		varchar(255);
ds_quantidade_w  		varchar(255);
ds_origem_proced_w 		varchar(255);
ds_utiliza_data_w		varchar(255);
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
ie_utiliza_data_w	varchar(2);
qt_procedimento_w	bigint;


BEGIN

ds_procedimentos_w 	:= ds_procedimentos_p;
ds_quantidade_w  	:= qt_procedimentos_p;
ds_origem_proced_w 	:= ie_origem_proced_p;
ds_utiliza_data_w	:= ie_utiliza_data_p;

while(position(',' in ds_procedimentos_w) <> 0) loop
	begin

	--obtem-se a primeira regra
	cd_procedimento_w 	:= substr(ds_procedimentos_w,1,position(',' in ds_procedimentos_w)-1);
	--obtem-se a quantidade do procedimento.
	qt_procedimento_w 	:= substr(ds_quantidade_w,1,position(',' in ds_quantidade_w)-1);
	--obtem-se a origem do procedimento
	ie_origem_proced_w 	:= substr(ds_origem_proced_w,1,position(',' in ds_origem_proced_w)-1);

	ie_utiliza_data_w  	:= substr(ds_utiliza_data_w,1,position(',' in ds_utiliza_data_w)-1);

	ds_ordem_proc_w  	:= substr( ie_lista_proc_p,1,position(',' in ie_lista_proc_p)-1);
	--remove-se o procedimento do conjunto
	ds_procedimentos_w 	:= substr(ds_procedimentos_w,position(',' in ds_procedimentos_w)+1,255);
	--remove-se a quantidade do conjunto
	ds_quantidade_w	  	:= substr(ds_quantidade_w,position(',' in ds_quantidade_w)+1,255);
	--remove-se a origem do proced do conjunto
	ds_origem_proced_w   	:= substr(ds_origem_proced_w,position(',' in ds_origem_proced_w)+1,255);

	ds_utiliza_data_w 	:= substr(ds_utiliza_data_w,position(',' in ds_utiliza_data_w)+1,255);

	ie_lista_proc_w := substr(ie_lista_proc_p,position(',' in ie_lista_proc_p)+1,255);

	if (coalesce(ie_utiliza_data_w,'N') = 'N') then
		dt_procedimento_w 	:= null;
		dt_hora_inicio_w	:= null;
		dt_hora_fim_w		:= null;

	else

		if (ds_ordem_proc_w = '1') then
			dt_procedimento_w 	:= to_date(to_char(dt_procedimento_p,'DD/MM/YYYY'), 'DD/MM/YYYY');
			dt_hora_inicio_w	:= to_date(dt_hora_inicio_p,'DD/MM/YYYY hh24:mi:ss');
			dt_hora_fim_w		:= to_date(dt_hora_fim_p,'DD/MM/YYYY hh24:mi:ss');

		elsif (ds_ordem_proc_w = '2') then
			dt_procedimento_w 	:= to_date(to_char(dt_procedimento2_p,'DD/MM/YYYY'), 'DD/MM/YYYY');
		    dt_hora_inicio_w	:= dt_hora_inicio2_p;
		    dt_hora_fim_w		:= dt_hora_fim2_p;

		elsif (ds_ordem_proc_w = '3') then
			dt_procedimento_w 	:= to_date(to_char(dt_procedimento3_p,'DD/MM/YYYY'), 'DD/MM/YYYY');
		    dt_hora_inicio_w	:= dt_hora_inicio3_p;
		    dt_hora_fim_w		:= dt_hora_fim3_p;

		elsif (ds_ordem_proc_w = '4') then
			dt_procedimento_w 	:= to_date(to_char(dt_procedimento4_p,'DD/MM/YYYY'), 'DD/MM/YYYY');
		    dt_hora_inicio_w	:= dt_hora_inicio4_p;
		    dt_hora_fim_w		:= dt_hora_fim4_p;

		else
			dt_procedimento_w 	:= to_date(to_char(dt_procedimento5_p,'DD/MM/YYYY'), 'DD/MM/YYYY');
			dt_hora_inicio_w	:= dt_hora_inicio5_p;
			dt_hora_fim_w		:= dt_hora_fim5_p;

		end if;

	end if;

	dt_procedimento_w 	:= null;
	dt_hora_inicio_w	:= null;
	dt_hora_fim_w		:= null;

	ie_permite_inserir_w  := pls_verifica_proc_existente(	nm_usuario_p, cd_estabelecimento_p, nr_seq_conta_p, cd_procedimento_w, ie_origem_proced_w, qt_procedimento_w, dt_procedimento_w, dt_hora_inicio_w, dt_hora_fim_w, ie_permite_inserir_w );
	/* SE NAO EXISTIR REGISTRO DE PROCEDIMENTO  COM MESMA QUANTIDADE , ENTAO INSERE O PROCEDIMENTO QUE ESTA INFORMADO NO FiLTRO DAS DIGITAÇÕES*/

	if (ie_permite_inserir_w = 'S')  then
		CALL pls_gerar_conta_proc_consulta(	nr_seq_conta_p, cd_procedimento_w, ie_origem_proced_w,
						qt_procedimento_w, nm_usuario_p, cd_estabelecimento_p,
						dt_procedimento_w,dt_hora_inicio_w, dt_hora_fim_w);
	end if;

	end;
end loop;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_contas_proc_list ( ds_procedimentos_p text, qt_procedimentos_p text, ie_origem_proced_p text, dt_procedimento_p timestamp, dt_hora_inicio_p timestamp, dt_hora_fim_p timestamp, dt_procedimento2_p timestamp, dt_hora_inicio2_p timestamp, dt_hora_fim2_p timestamp, dt_procedimento3_p timestamp, dt_hora_inicio3_p timestamp, dt_hora_fim3_p timestamp, dt_procedimento4_p timestamp, dt_hora_inicio4_p timestamp, dt_hora_fim4_p timestamp, dt_procedimento5_p timestamp, dt_hora_inicio5_p timestamp, dt_hora_fim5_p timestamp, ie_utiliza_data_p text, nr_seq_conta_p bigint, ie_lista_proc_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

