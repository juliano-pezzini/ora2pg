-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_gerar_dev_processo ( nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_processo_p bigint, cd_estabelecimento_p bigint, cd_local_estoque_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE

					 
nr_atendimento_w		bigint;
nr_seq_processo_w		bigint;
ds_erro_w				varchar(255);
ie_permite_dev_item_w  varchar(1);
nr_seq_material_w		prescr_mat_hor.nr_seq_material%type;					
nr_prescricao_w			bigint;
nr_sequencia_prescricao_w	integer;
qt_material_w			double precision;
cd_motivo_devolucao_w		varchar(3);
ie_devol_item_adm_pac_w		varchar(3);

c01 CURSOR FOR 
	SELECT	a.nr_sequencia_prescricao, 
		sum(a.qt_material) 
	FROM material b, material_em_devolucao_v a
LEFT OUTER JOIN tipo_baixa_prescricao c ON (a.cd_motivo_baixa = c.cd_tipo_baixa AND a.ie_prescr_dev = c.ie_prescricao_devolucao)
WHERE a.cd_material = b.cd_material and (a.nr_sequencia_prescricao = nr_seq_material_w or nr_seq_material_w = 0) and a.nr_seq_processo = nr_seq_processo_w and a.nr_atendimento = nr_atendimento_w and not exists (	SELECT	1 
				from	item_devolucao_material_pac x 
				where	x.nr_seq_processo = a.nr_seq_processo 
				and	x.nr_prescricao = a.nr_prescricao 
				and	x.nr_sequencia_prescricao = a.nr_sequencia_prescricao)   and ((a.qt_material < 0) or (a.cd_local_estoque IS NOT NULL AND a.cd_local_estoque::text <> '') or (c.ie_atualiza_estoque = 'N' AND c.ie_conta_paciente = 'S')) 
	having	sum(a.qt_material) > 0 group by a.cd_material, 
		a.dt_atendimento, 
		a.cd_unidade_medida, 
		a.nr_sequencia_prescricao, 
		a.dt_entrada_unidade, 
		a.nr_sequencia, 
		a.cd_local_estoque, 
		a.nr_seq_lote_fornec;

c02 CURSOR FOR 
	SELECT	nr_atendimento, 
		nr_prescricao, 
		nr_seq_processo, 
		nr_seq_material 
	from	w_dev_material_processo 
	where	nm_usuario = nm_usuario_p 
	group by nr_atendimento, 
		nr_prescricao, 
		nr_seq_processo, 
		nr_seq_material 
	order by nr_atendimento, 
		nr_prescricao, 
		nr_seq_processo, 
		nr_seq_material;					
					 
					 
					 

BEGIN 
ds_erro_w := '';
cd_motivo_devolucao_w		:= coalesce(obter_valor_param_usuario(42, 15, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'0');
ie_devol_item_adm_pac_w := coalesce(obter_valor_param_usuario(42, 128, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'0');
 
if (cd_motivo_devolucao_w = '0') then 
	ds_erro_w := wheb_mensagem_pck.get_texto(802590);
elsif (cd_motivo_devolucao_w <> '0') then 
	 
	open c02;
	loop 
	fetch c02 into	 
		nr_atendimento_w, 
		nr_prescricao_w, 
		nr_seq_processo_w, 
		nr_seq_material_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
	 
		open c01;
		loop 
		fetch c01 into 
			nr_sequencia_prescricao_w, 
			qt_material_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin 
			 
			if (ie_devol_item_adm_pac_w = 'N') then 
				ie_permite_dev_item_w := coalesce(consiste_dev_item_adm(nr_prescricao_w, nr_sequencia_prescricao_w, qt_material_w, nr_seq_processo_w), 'S');
				if (ie_permite_dev_item_w = 'N') then 
					ds_erro_w := wheb_mensagem_pck.get_texto(802589);
				end if;
			end if;
			 
			end;
		end loop;
		close c01;
		 
		end;
	end loop;
	close c02;
		 
end if;
 
ds_erro_p := ds_erro_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_gerar_dev_processo ( nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_processo_p bigint, cd_estabelecimento_p bigint, cd_local_estoque_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

