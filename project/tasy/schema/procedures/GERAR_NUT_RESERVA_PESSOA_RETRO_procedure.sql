-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nut_reserva_pessoa_retro ( nr_seq_servico_p bigint, dt_referencia_p timestamp, cd_pessoa_fisica_p text, nm_usuario_p text, nr_seq_restaurante_p bigint, qt_Reserva_p bigint, nr_seq_tipo_refeicao_p bigint, cd_estabelecimento_p bigint, ds_observacao_p text, nr_seq_local_refeicao_p bigint default null, nr_sequencia_p bigint DEFAULT NULL, hr_entrega_p timestamp default null) AS $body$
DECLARE


nr_seq_perfil_pf_w		bigint;
qt_reserva_w		integer;
nm_usuario_reserva_w	varchar(15);
ie_gerar_funcionario_w	varchar(1);
qt_perfil_nut_w		bigint;
qt_perfil_liberado_w		bigint;
ie_informa_hora_entrega_w 	varchar(1);


BEGIN

ie_gerar_funcionario_w := Obter_Param_Usuario(7026, 25, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_gerar_funcionario_w);
ie_informa_hora_entrega_w := Obter_Param_Usuario(7026, 34, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_informa_hora_entrega_w); -- N
if (nr_seq_servico_p IS NOT NULL AND nr_seq_servico_p::text <> '') and (dt_referencia_p IS NOT NULL AND dt_referencia_p::text <> '') and (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then

	select	coalesce(max(nr_seq_nut_perfil),0)
	into STRICT	nr_seq_perfil_pf_w
	from	pessoa_fisica
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;

	select 	count(*)
	into STRICT	qt_perfil_nut_w
	from   	nut_perfil_reserva
	where  	nr_seq_nut_reserva = nr_sequencia_p;

	select 	count(*)
	into STRICT	qt_perfil_liberado_w
	from   	nut_perfil_reserva
	where  	nr_seq_nut_reserva = nr_sequencia_p
	and	nr_seq_perfil = nr_seq_perfil_pf_w;

	if (qt_perfil_nut_w > 0) and ((nr_seq_perfil_pf_w = 0) or (qt_perfil_liberado_w = 0)) then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(262606);
	end if;

	select	max(nm_usuario)
	into STRICT	nm_usuario_reserva_w
	from	usuario
	where	cd_pessoa_fisica	= cd_pessoa_fisica_p;

	if (coalesce(nm_usuario_reserva_w::text, '') = '') then
		nm_usuario_reserva_w := nm_usuario_p;
	end if;

	if (nm_usuario_reserva_w IS NOT NULL AND nm_usuario_reserva_w::text <> '') then
		insert into nut_reserva_pf(
			nr_sequencia,
			nr_seq_nut_reserva,
			qt_reserva,
			cd_pessoa_fisica,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_atualizacao,
			nr_seq_tipo_refeicao,
			nm_usuario,
			cd_setor_atendimento,
			cd_estabelecimento,
			ds_observacao,
			ie_status,
			nr_seq_local_refeicao,
			hr_entrega)
			SELECT	nextval('nut_reserva_pf_seq'),
				nr_sequencia,
				qt_reserva_p,
				cd_pessoa_fisica_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				CASE WHEN nr_seq_tipo_refeicao_p=0 THEN null  ELSE nr_seq_tipo_refeicao_p END ,
				nm_usuario_reserva_w,
				wheb_usuario_pck.get_cd_setor_atendimento,
				cd_estabelecimento_p,
				ds_observacao_p,
				'P',
				nr_seq_local_refeicao_p,
				hr_entrega_p
			from	nut_reserva a
			where	nr_seq_servico = nr_seq_servico_p
			and	((nr_seq_restaurante = nr_seq_restaurante_p) or (nr_seq_restaurante_p = 0))
			and	trunc(dt_servico) = trunc(dt_referencia_p)
			and	'S' = obter_se_perfil_nut_liberado(nr_seq_perfil_pf_w, nr_sequencia)
			AND 	((hr_entrega_p IS NOT NULL AND hr_entrega_p::text <> '')
	                AND (ie_informa_hora_entrega_w = 'S')
			AND 	hr_entrega_p BETWEEN TO_DATE(TO_CHAR(dt_servico,'dd/mm/yyyy') || ' ' || TO_CHAR(hr_inicio,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')
			AND 	TO_DATE(TO_CHAR(dt_servico,'dd/mm/yyyy') || ' ' || TO_CHAR(hr_final,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')
	                OR (ie_informa_hora_entrega_w = 'N'))
			AND	((ie_gerar_funcionario_w = 'S') or
				(((ie_gerar_funcionario_w = 'V')
				and not exists (
					SELECT	1
					from	nut_reserva_pf b
					where	b.nr_seq_nut_reserva = a.nr_sequencia
					and	b.cd_pessoa_fisica = cd_pessoa_fisica_p
					and	a.nr_seq_servico = nr_seq_servico_p
					and	trunc(a.dt_servico) = trunc(dt_referencia_p)
					and	coalesce(b.nr_seq_tipo_refeicao, 0) = coalesce(nr_seq_tipo_refeicao_p, 0)))
				or	((ie_gerar_funcionario_w = 'N')
					and not exists (
						select	1
						from	nut_reserva_pf b
						where	b.nr_seq_nut_reserva = a.nr_sequencia
						and	b.cd_pessoa_fisica = cd_pessoa_fisica_p
						and	a.nr_seq_servico = nr_seq_servico_p
						and	trunc(a.dt_servico) = trunc(dt_referencia_p)))));
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nut_reserva_pessoa_retro ( nr_seq_servico_p bigint, dt_referencia_p timestamp, cd_pessoa_fisica_p text, nm_usuario_p text, nr_seq_restaurante_p bigint, qt_Reserva_p bigint, nr_seq_tipo_refeicao_p bigint, cd_estabelecimento_p bigint, ds_observacao_p text, nr_seq_local_refeicao_p bigint default null, nr_sequencia_p bigint DEFAULT NULL, hr_entrega_p timestamp default null) FROM PUBLIC;

