-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE get_ihc_trg ( nr_seq_claim_p ihc_claim.nr_sequencia%type, nm_usuario_p ihc_claim.nm_usuario%type) AS $body$
DECLARE


nr_records_w        ihc_claim.nr_sequencia%type;
nr_sequencia_w      ihc_trg.nr_sequencia%type;
qt_transport_time_w	ihc_trg.qt_transport_time%type;
vl_hospital_cid_w	ihc_claim.vl_hospital%type;
vl_charge_cid_w     ihc_claim.vl_charge%type;
qt_hours_w          varchar(2);
qt_minutes_w        varchar(2);

c1 CURSOR FOR
SELECT	a.nr_seq_veiculo as nr_seq_veiculo,
		a.qt_km_percorrido as qt_distance,
		a.ds_endereco as ds_from_locality,
		a.dt_chamado as dt_chamado,
		a.nr_seq_destino as ds_to_locality,
		a.dt_fim_atend as dt_fim_atend,
		a.dt_inicio_atend as dt_inicio_atend,
		b.vl_fatura as vl_charge,
		c.nr_seq_tipo as ie_transport,
		d.nr_account as nr_account,
		a.nr_sequencia as nr_seq_chamado,
		b.nr_sequencia as nr_seq_fat,
		c.nr_sequencia as nr_seq_veic
from	eme_chamado a,
		eme_faturamento b,
		eme_veiculo c,
		ihc_claim d
where	a.nr_seq_faturamento = b.nr_sequencia
and		a.nr_seq_veiculo = c.nr_sequencia
and		a.nr_atendimento = d.nr_episode
and		d.nr_sequencia = nr_seq_claim_p;
c1_w c1%rowtype;


BEGIN
  open c1;
  loop
  fetch c1 into c1_w;
  EXIT WHEN NOT FOUND; /* apply on c1 */
  begin
    if (coalesce(c1_w.vl_charge::text, '') = '') then
      CALL generate_inco_eclipse(c1_w.nr_account, 1, obter_desc_expressao(587168) || ' (Seq: ' || c1_w.nr_seq_fat || ')', nm_usuario_p);
    end if;

    if (coalesce(c1_w.qt_distance::text, '') = '') then 
      CALL generate_inco_eclipse(c1_w.nr_account, 1, obter_desc_expressao(961471) || ' (Seq: ' || c1_w.nr_seq_chamado || ')', nm_usuario_p);
    end if;

    if (coalesce(c1_w.ds_from_locality::text, '') = '') then 
      CALL generate_inco_eclipse(c1_w.nr_account, 1, obter_desc_expressao(961473) || ' (Seq: ' || c1_w.nr_seq_chamado || ')', nm_usuario_p);
    end if;

    if (coalesce(c1_w.dt_chamado::text, '') = '') then 
      CALL generate_inco_eclipse(c1_w.nr_account, 1, obter_desc_expressao(961479) || ' (Seq: ' || c1_w.nr_seq_chamado || ')', nm_usuario_p);
    end if;

    if (coalesce(c1_w.ds_to_locality::text, '') = '') then 
      CALL generate_inco_eclipse(c1_w.nr_account, 1, obter_desc_expressao(961481) || ' (Seq: ' || c1_w.nr_seq_chamado || ')', nm_usuario_p);
    end if;

    if (coalesce(c1_w.ie_transport::text, '') = '') then 
      CALL generate_inco_eclipse(c1_w.nr_account, 1, obter_desc_expressao(961485)|| ' (Seq: ' || c1_w.nr_seq_veic || ')', nm_usuario_p);
    end if;

    if (coalesce(c1_w.dt_inicio_atend::text, '') = '') then
      CALL generate_inco_eclipse(c1_w.nr_account, 1, obter_desc_expressao(511280) || ' (Seq: ' || c1_w.nr_seq_chamado || ')', nm_usuario_p);
    end if;

    if (coalesce(c1_w.dt_fim_atend::text, '') = '') then
      CALL generate_inco_eclipse(c1_w.nr_account, 1, obter_desc_expressao(963603) || ' (Seq: ' || c1_w.nr_seq_chamado || ')', nm_usuario_p);
    end if;
	
	if (c1_w.dt_fim_atend < c1_w.dt_inicio_atend) then
		CALL generate_inco_eclipse(c1_w.nr_account, 3, obter_desc_expressao(511279) || ' (Seq: ' || c1_w.nr_seq_chamado || ')', nm_usuario_p);
	end if;

    select  lpad(trunc(24*(c1_w.dt_fim_atend - c1_w.dt_inicio_atend)),2,0),
            lpad(trunc(mod(mod(c1_w.dt_fim_atend - c1_w.dt_inicio_atend,1)*24,1)*60 ),2,0)
    into STRICT 	qt_hours_w,
			qt_minutes_w
;

    if (qt_hours_w > 99) then
      qt_transport_time_w := '9959';
    else
      qt_transport_time_w := qt_hours_w || qt_minutes_w;
    end if;

    select  count(nr_sequencia)
    into STRICT    nr_records_w
    from    eclipse_inco_account
    where   nr_interno_conta = c1_w.nr_account;

    if (billing_i18n_pck.get_validate_eclipse() = 'N') and (nr_records_w = 0) then
       
      select  nextval('ihc_trg_seq')
      into STRICT    nr_sequencia_w
;

      insert into ihc_trg(
        nr_sequencia,
        nr_seq_claim,
        cd_ambulance,
        vl_charge,
        ie_charge_raised,
        qt_distance,
        ds_from_locality,
        dt_service,
        dt_start_time,
        ds_to_locality,
        qt_transport_time,
        ie_transport,
        dt_atualizacao,
        nm_usuario,
        nm_usuario_nrec,
        dt_atualizacao_nrec) 
      values (
        nr_sequencia_w,
        nr_seq_claim_p,
        c1_w.nr_seq_veiculo,
        c1_w.vl_charge,
        CASE WHEN coalesce(c1_w.vl_charge,0)=0 THEN  'I'  ELSE 'C' END ,
        c1_w.qt_distance,
        c1_w.ds_from_locality,
        c1_w.dt_chamado,
        c1_w.dt_chamado,
        c1_w.ds_to_locality,
        qt_transport_time_w,
        c1_w.ie_transport,
        clock_timestamp(),
        nm_usuario_p,
        nm_usuario_p,
        clock_timestamp());

      if (c1_w.vl_charge IS NOT NULL AND c1_w.vl_charge::text <> '') then
        select  vl_hospital,
                vl_charge
        into STRICT    vl_hospital_cid_w,
                vl_charge_cid_w
        from    ihc_claim
        where   nr_sequencia = nr_seq_claim_p;

        update  ihc_claim
        set     vl_hospital   = vl_hospital_cid_w + c1_w.vl_charge,
                vl_charge     = vl_charge_cid_w + c1_w.vl_charge
        where   nr_sequencia  = nr_seq_claim_p;

      end if;
    end if;
  end;
  end loop;
  close c1;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE get_ihc_trg ( nr_seq_claim_p ihc_claim.nr_sequencia%type, nm_usuario_p ihc_claim.nm_usuario%type) FROM PUBLIC;

