-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_validar_consistencias ( vl_atributo_p text, ie_consistencia_p bigint, nr_seq_fatura_p bigint, ie_tipo_registro_p text, nm_atributo_p text, nr_sequencia_p bigint, ds_valores_validos_p text, ds_valores_invalidos_p text, nr_linha_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_valores_valido_w		varchar(255);
ds_valores_invalido_w		varchar(255);
ds_valor_valido_w		varchar(255);
ds_valor_invalido_w		varchar(255);
ie_consistir_w			varchar(10);
qt_contar_w			bigint;
ds_valor_valido_num_w		bigint;
ds_valor_invalido_num_w		bigint;


BEGIN
ds_valores_valido_w	:= ds_valores_validos_p;
ds_valores_invalido_w	:= ds_valores_invalidos_p;

if (coalesce(trim(both vl_atributo_p),'0') <> 'XXX') then
	if (ie_consistencia_p = 1) then
		if (coalesce(trim(both vl_atributo_p),'XXX') = 'XXX') then
			CALL ptu_inserir_consist_fatura(	nr_seq_fatura_p,
							ie_consistencia_p,
							ie_tipo_registro_p,
							nm_atributo_p,
							null,
							null,
							nr_sequencia_p,
							nr_linha_p,
							nm_usuario_p);
		end if;
	end if;

	if (ie_consistencia_p = 2) then
		-- VALORES VALIDOS
		if (ds_valores_validos_p IS NOT NULL AND ds_valores_validos_p::text <> '') then
			ie_consistir_w	:= 'S';
			qt_contar_w	:= 0;
			while qt_contar_w <= length(ds_valores_validos_p) loop
				if (qt_contar_w = 0) then
					ds_valor_valido_w	:= substr(ds_valores_valido_w, 1, position(',' in ds_valores_valido_w)-1);
				else
					ds_valores_valido_w	:= substr(ds_valores_valido_w, position(',' in ds_valores_valido_w)+1,length(ds_valores_valido_w));

					ds_valor_valido_w	:= substr(ds_valores_valido_w, 1, position(',' in ds_valores_valido_w)-1);
				end if;

				if (position(',' in ds_valores_valido_w) = 0) then
					ds_valor_valido_w	:= ds_valores_valido_w;
				end if;

				begin
				select	(ds_valor_valido_w)::numeric
				into STRICT	ds_valor_valido_num_w
				;
				exception
					when others then
					ds_valor_valido_num_w	:= -1;
				end;


				if (vl_atributo_p = ds_valor_valido_w) or (vl_atributo_p = ds_valor_valido_num_w) then
					ie_consistir_w	:= 'N';
				end if;

				qt_contar_w	:= qt_contar_w + 1;
			end loop;

			if (ie_consistir_w	= 'S') then
				CALL ptu_inserir_consist_fatura(	nr_seq_fatura_p,
								ie_consistencia_p,
								ie_tipo_registro_p,
								nm_atributo_p,
								vl_atributo_p,
								'Valores válidos: ' || ds_valores_validos_p,
								nr_sequencia_p,
								nr_linha_p,
								nm_usuario_p);
			end if;
		end if;

		-- VALORES INVALIDOS
		if (ds_valores_invalidos_p IS NOT NULL AND ds_valores_invalidos_p::text <> '') then
			ie_consistir_w	:= 'S';
			qt_contar_w	:= 0;
			while qt_contar_w <= length(ds_valores_invalidos_p) loop
				if (qt_contar_w = 0) then
					ds_valor_invalido_w	:= substr(ds_valores_invalido_w, 1, position(',' in ds_valores_invalido_w)-1);
				else
					ds_valores_invalido_w	:= substr(ds_valores_invalido_w, position(',' in ds_valores_invalido_w)+1,length(ds_valores_invalido_w));

					ds_valor_invalido_w	:= substr(ds_valores_invalido_w, 1, position(',' in ds_valores_invalido_w)-1);
				end if;

				if (position(',' in ds_valores_invalido_w) = 0) then
					ds_valor_invalido_w	:= ds_valores_invalido_w;
				end if;

				begin
				select	(ds_valor_invalido_w)::numeric
				into STRICT	ds_valor_invalido_num_w
				;
				exception
					when others then
					ds_valor_invalido_num_w	:= -1.5;
				end;


				if (vl_atributo_p <> ds_valor_invalido_w) or
					(vl_atributo_p <> ds_valor_invalido_num_w AND ds_valor_invalido_num_w <> -1.5) then
					ie_consistir_w	:= 'N';
				end if;

				qt_contar_w	:= qt_contar_w + 1;
			end loop;

			if (ie_consistir_w	= 'S') then
				CALL ptu_inserir_consist_fatura(	nr_seq_fatura_p,
								ie_consistencia_p,
								ie_tipo_registro_p,
								nm_atributo_p,
								vl_atributo_p,
								'Valores inválidos: ' || ds_valores_invalidos_p,
								nr_sequencia_p,
								nr_linha_p,
								nm_usuario_p);
			end if;
		end if;
	end if;

	if (ie_consistencia_p = 3) then
		if (vl_atributo_p IS NOT NULL AND vl_atributo_p::text <> '') then
			CALL ptu_inserir_consist_fatura(	nr_seq_fatura_p,
							ie_consistencia_p,
							ie_tipo_registro_p,
							nm_atributo_p,
							vl_atributo_p,
							null,
							nr_sequencia_p,
							nr_linha_p,
							nm_usuario_p);
		end if;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_validar_consistencias ( vl_atributo_p text, ie_consistencia_p bigint, nr_seq_fatura_p bigint, ie_tipo_registro_p text, nm_atributo_p text, nr_sequencia_p bigint, ds_valores_validos_p text, ds_valores_invalidos_p text, nr_linha_p bigint, nm_usuario_p text) FROM PUBLIC;

