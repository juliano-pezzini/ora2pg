-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_auditoria_externa (nr_seq_auditoria_p bigint, nm_usuario_p text) AS $body$
DECLARE



cd_estabelecimento_w	bigint;
nr_interno_conta_w	bigint;	
ie_status_acerto_w	varchar(01);	
cd_tipo_baixa_prescr_w	bigint;		
nr_seq_tipo_baixa_w	bigint;
ie_atualiza_estoque_w	varchar(01);
ie_proc_mat_w		varchar(1);
nr_seq_item_w		bigint;
qt_ajuste_w		double precision;
indice_w		integer:= 1;
qt_original_w		double precision;
nr_sequencia_w		bigint;
nr_seq_w		bigint;
qt_registro_w		bigint;
cd_convenio_w		integer;
qt_ajustado_w		bigint;
ie_resumo_auditoria_w	varchar(1);
ds_texto_302309_w    	dic_objeto.ds_informacao%type;

c01 CURSOR FOR
	SELECT	b.ie_tipo_item,
		b.nr_sequencia,
		b.qt_ajuste,
		b.qt_original
	from	auditoria_externa b,
		auditoria_conta_paciente a
	where	a.nr_sequencia	= nr_seq_auditoria_p
	and 	a.nr_sequencia  = b.nr_seq_auditoria
	order by b.ie_tipo_item;
	
c02 CURSOR FOR
	SELECT 	nr_seq_item
	from 	auditoria_externa_item
	where 	nr_seq_audit_ext = nr_seq_item_w
	and 	ie_tipo_item = ie_proc_mat_w;
				

BEGIN

ds_texto_302309_w       := WHEB_MENSAGEM_PCK.get_texto(302309);

select	max(cd_estabelecimento),
	max(nr_interno_conta)
into STRICT	cd_estabelecimento_w,
	nr_interno_conta_w
from	atendimento_paciente b,
	auditoria_conta_paciente a
where	a.nr_sequencia		= nr_seq_auditoria_p
and	a.nr_atendimento	= b.nr_atendimento;

select	coalesce(max(ie_status_acerto),1)
into STRICT	ie_status_acerto_w
from	conta_paciente
where	nr_interno_conta	= nr_interno_conta_w;

if (ie_status_acerto_w = 2) then
	--r.aise_application_error(-20011, 'A conta esta com status em definitivo, nao pode ser auditada!#@#@');
	CALL wheb_mensagem_pck.exibir_mensagem_abort(237395);
end if;	

select	coalesce(max(obter_valor_param_usuario(1116, 1, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w)), 1)
into STRICT	cd_tipo_baixa_prescr_w
;

select	nr_sequencia,
	ie_atualiza_estoque
into STRICT	nr_seq_tipo_baixa_w,
	ie_atualiza_estoque_w
from	tipo_baixa_prescricao
where	cd_tipo_baixa		= cd_tipo_baixa_prescr_w
and	ie_prescricao_devolucao	= 'P';

open	c01;
loop
fetch	c01 into
	ie_proc_mat_w,
	nr_seq_item_w,
	qt_ajuste_w,
	qt_original_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	if (ie_proc_mat_w	= 'M') then
		
		begin

		select	nextval('material_atend_paciente_seq')
		into STRICT	nr_sequencia_w
		;
		
		select 	max(nr_seq_item)
		into STRICT	nr_seq_w
		from 	auditoria_externa_item
		where 	nr_seq_audit_ext = nr_seq_item_w
		and 	ie_tipo_item = ie_proc_mat_w;
		
		
		if (coalesce(qt_ajuste_w, qt_original_w) >= qt_original_w)  then
			indice_w:= 1;
		else
			indice_w:= -1;
		end if;
			
		insert	into material_atend_paciente(nr_sequencia,
			nr_atendimento,
			nm_usuario,
			dt_atualizacao,
			dt_entrada_unidade,
			cd_material,
			dt_atendimento,
			cd_unidade_medida,
			qt_material,
			cd_convenio,
			cd_categoria,
			dt_prescricao,
			cd_material_prescricao,
			ie_via_aplicacao,
			cd_tab_preco_material,
			dt_vigencia_tabela,
			dt_acerto_conta,
			dt_acerto_convenio,
			nr_prescricao,
			nr_sequencia_prescricao,
			cd_local_estoque,
			dt_atualizacao_estoque,
			cd_acao,
			cd_setor_atendimento,
			nr_doc_convenio,
			qt_executada,
			dt_conta,
			nr_aih,
			nr_lote_contabil,
			cd_material_convenio,
			nr_seq_autorizacao,
			nr_interno_conta,
			nr_seq_proc_princ,
			ie_guia_informada,
			cd_especialidade,
			nm_usuario_original,
			nr_seq_proc_pacote,
			ie_emite_conta,
			cd_setor_receita,
			cd_cgc_fornecedor,
			nr_seq_lote_fornec,
			cd_material_exec,
			nr_seq_atepacu,
			ie_tipo_guia,
			nr_doc_interno,
			nr_seq_grupo_rec,
			cd_motivo_ajuste,
			nr_seq_tipo_baixa,
			nr_seq_cor_exec,
			nr_seq_origem,
			ie_dispersao,
			nr_seq_conta_origem,
			cd_setor_paciente,
			nr_seq_parcial,
			cd_cgc_prestador,
			nr_seq_aih,
			ie_valor_informado,
			vl_unitario,
			vl_material,
			nr_seq_orig_audit)
		(SELECT	nr_sequencia_w,
			nr_atendimento,
			nm_usuario_p,
			clock_timestamp(),
			dt_entrada_unidade,
			cd_material,
			dt_atendimento,
			cd_unidade_medida,
			CASE WHEN coalesce(qt_ajuste_w, qt_original_w)=qt_original_w THEN  qt_original_w  ELSE coalesce(qt_ajuste_w, qt_original_w) - qt_original_w END ,
			cd_convenio,
			cd_categoria,
			dt_prescricao,
			cd_material_prescricao,
			ie_via_aplicacao,
			cd_tab_preco_material,
			dt_vigencia_tabela,
			dt_acerto_conta,
			dt_acerto_convenio,
			nr_prescricao,
			nr_sequencia_prescricao,
			CASE WHEN ie_atualiza_estoque_w='S' THEN  cd_local_estoque  ELSE null END ,
			dt_atualizacao_estoque,
			cd_acao,
			cd_setor_atendimento,
			nr_doc_convenio,
			coalesce(qt_ajuste_w, qt_material),
			dt_conta,
			nr_aih,
			nr_lote_contabil,
			cd_material_convenio,
			nr_seq_autorizacao,
			nr_interno_conta,
			nr_seq_proc_princ,
			ie_guia_informada,
			cd_especialidade,
			nm_usuario_original,
			nr_seq_proc_pacote,
			ie_emite_conta,
			cd_setor_receita,
			cd_cgc_fornecedor,
			nr_seq_lote_fornec,
			cd_material_exec,
			nr_seq_atepacu,
			ie_tipo_guia,
			nr_doc_interno,			
			nr_seq_grupo_rec,
			cd_motivo_ajuste,
			nr_seq_tipo_baixa_w,
			431,
			nr_seq_origem,
			ie_dispersao,
			nr_seq_conta_origem,
			cd_setor_paciente,
			nr_seq_parcial,
			cd_cgc_prestador,
			nr_seq_aih,
			ie_valor_informado,
			vl_unitario,
			(vl_unitario * CASE WHEN coalesce(qt_ajuste_w, qt_original_w)=qt_original_w THEN  qt_original_w  ELSE coalesce(qt_ajuste_w, qt_original_w) - qt_original_w END ),
			nr_sequencia
		from	material_atend_paciente
		where	nr_sequencia	= nr_seq_w
		and (coalesce(qt_ajuste_w, qt_original_w) - qt_original_w) <> 0);
		
		CALL gerar_mat_atend_pac_auditoria(nr_sequencia_w, nr_seq_auditoria_p, nm_usuario_p);
		
		CALL atualiza_preco_material(nr_sequencia_w, nm_usuario_p);

		update	material_atend_paciente
		set	ie_auditoria	= 'S'
		where	nr_sequencia	= nr_sequencia_w;
		
		open C02;
		loop
		fetch C02 into	
			nr_seq_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			
			update	material_atend_paciente
			set	ie_auditoria	= 'S',
				ds_observacao	= substr(ds_observacao || ' ' || ds_texto_302309_w || nm_usuario_p || ' ' || to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss'),1,255)
			where	nr_sequencia	= nr_seq_w;
			
			end;
		end loop;
		close C02;						
		
		end;
		
	else
	
		begin
	
		select	nextval('procedimento_paciente_seq')
		into STRICT	nr_sequencia_w
		;

		select 	max(nr_seq_item)
		into STRICT	nr_seq_w
		from 	auditoria_externa_item
		where 	nr_seq_audit_ext = nr_seq_item_w
		and 	ie_tipo_item = ie_proc_mat_w;

		
		if (coalesce(qt_ajuste_w, qt_original_w) >= qt_original_w)  then
			indice_w:= 1;
		else
			indice_w:= -1;
		end if;
			
		insert	into procedimento_paciente(nr_sequencia,
			nr_atendimento,
			dt_entrada_unidade,
			cd_procedimento,
			dt_procedimento,
			qt_procedimento,
			dt_atualizacao,
			nm_usuario,
			cd_medico,
			cd_convenio,
			cd_categoria,
			cd_pessoa_fisica,
			dt_prescricao,
			ds_observacao,
			vl_procedimento,
			vl_medico,
			vl_anestesista,
			vl_materiais,
			cd_edicao_amb,
			cd_tabela_servico,
			dt_vigencia_preco,
			cd_procedimento_princ,
			dt_procedimento_princ,
			dt_acerto_conta,
			dt_acerto_convenio,
			dt_acerto_medico,
			vl_auxiliares,
			vl_custo_operacional,
			tx_medico,
			tx_anestesia,
			nr_prescricao,
			nr_sequencia_prescricao,
			cd_motivo_exc_conta,
			ds_compl_motivo_excon,
			cd_acao,
			qt_devolvida,
			cd_motivo_devolucao,
			nr_cirurgia,
			nr_doc_convenio,
			cd_medico_executor,
			ie_cobra_pf_pj,
			nr_laudo,
			dt_conta,
			cd_setor_atendimento,
			cd_conta_contabil,
			cd_procedimento_aih,
			ie_origem_proced,
			nr_aih,
			ie_responsavel_credito,
			tx_procedimento,
			cd_equipamento,
			ie_valor_informado,
			cd_estabelecimento_custo,
			cd_tabela_custo,
			cd_situacao_glosa,
			nr_lote_contabil,
			cd_procedimento_convenio,
			nr_seq_autorizacao,
			ie_tipo_servico_sus,
			ie_tipo_ato_sus,
			cd_cgc_prestador,
			nr_nf_prestador,
			cd_atividade_prof_bpa,
			nr_interno_conta,
			nr_seq_proc_princ,
			ie_guia_informada,
			dt_inicio_procedimento,
			ie_emite_conta,
			ie_funcao_medico,
			ie_classif_sus,
			cd_especialidade,
			nm_usuario_original,
			nr_seq_proc_pacote,
			ie_tipo_proc_sus,
			cd_setor_receita,
			vl_adic_plant,
			qt_porte_anestesico,
			tx_hora_extra,
			ie_emite_conta_honor,
			nr_seq_atepacu,
			ie_proc_princ_atend,
			cd_medico_req,
			ie_tipo_guia,
			ie_video,
			nr_doc_interno,
			ie_auditoria,
			nr_seq_grupo_rec,
			cd_medico_convenio,
			cd_motivo_ajuste,
			nr_seq_cor_exec,
			ie_via_acesso,
			nr_seq_exame,
			ie_intercorrencia,
			nr_seq_origem,
			ie_dispersao,
			cd_setor_paciente,
			nr_seq_conta_origem,
			nr_seq_parcial,
			nr_seq_proc_interno,
			cd_senha,
			nr_seq_aih,
			nr_doc_honor_conv,
			dt_conferencia,
			ie_tipo_atend_bpa,
			ie_grupo_atend_bpa,
			cd_cgc_prestador_conta,
			cd_medico_exec_conta,
			nr_seq_pq_proc,
			ie_tecnica_utilizada,
			nr_seq_orig_audit)
		(SELECT	nr_sequencia_w,
			nr_atendimento,
			dt_entrada_unidade,
			cd_procedimento,
			dt_procedimento,
			CASE WHEN coalesce(qt_ajuste_w, qt_original_w)=qt_original_w THEN  qt_original_w  ELSE coalesce(qt_ajuste_w, qt_original_w) - qt_original_w END ,
			clock_timestamp(),
			nm_usuario_p,
			cd_medico,
			cd_convenio,
			cd_categoria,
			cd_pessoa_fisica,
			dt_prescricao,
			ds_observacao,
			vl_procedimento * indice_w,
			vl_medico * indice_w,
			vl_anestesista * indice_w,
			vl_materiais * indice_w,
			cd_edicao_amb,
			cd_tabela_servico,
			dt_vigencia_preco,
			cd_procedimento_princ,
			dt_procedimento_princ,
			dt_acerto_conta,
			dt_acerto_convenio,
			dt_acerto_medico,
			vl_auxiliares,
			vl_custo_operacional,
			tx_medico,
			tx_anestesia,
			nr_prescricao,
			nr_sequencia_prescricao,
			cd_motivo_exc_conta,
			ds_compl_motivo_excon,
			cd_acao,
			qt_devolvida,
			cd_motivo_devolucao,
			nr_cirurgia,
			nr_doc_convenio,
			cd_medico_executor,
			ie_cobra_pf_pj,
			nr_laudo,
			dt_conta,
			cd_setor_atendimento,
			cd_conta_contabil,
			cd_procedimento_aih,
			ie_origem_proced,
			nr_aih,
			ie_responsavel_credito,
			tx_procedimento,
			cd_equipamento,
			ie_valor_informado,
			cd_estabelecimento_custo,
			cd_tabela_custo,
			cd_situacao_glosa,
			nr_lote_contabil,
			cd_procedimento_convenio,
			nr_seq_autorizacao,
			ie_tipo_servico_sus,
			ie_tipo_ato_sus,
			cd_cgc_prestador,
			nr_nf_prestador,
			cd_atividade_prof_bpa,
			nr_interno_conta,
			nr_seq_proc_princ,
			ie_guia_informada,
			dt_inicio_procedimento,
			ie_emite_conta,
			ie_funcao_medico,
			ie_classif_sus,
			cd_especialidade,
			nm_usuario_original,
			nr_seq_proc_pacote,
			ie_tipo_proc_sus,
			cd_setor_receita,
			vl_adic_plant,
			qt_porte_anestesico,
			tx_hora_extra,
			ie_emite_conta_honor,
			nr_seq_atepacu,
			ie_proc_princ_atend,
			cd_medico_req,
			ie_tipo_guia,
			ie_video,
			nr_doc_interno,
			ie_auditoria,
			nr_seq_grupo_rec,
			cd_medico_convenio,
			cd_motivo_ajuste,
			431,
			ie_via_acesso,
			nr_seq_exame,
			ie_intercorrencia,
			nr_seq_origem,
			ie_dispersao,
			cd_setor_paciente,
			nr_seq_conta_origem,
			nr_seq_parcial,
			nr_seq_proc_interno,
			cd_senha,
			nr_seq_aih,
			nr_doc_honor_conv,
			dt_conferencia,
			ie_tipo_atend_bpa,
			ie_grupo_atend_bpa,
			cd_cgc_prestador_conta,
			cd_medico_exec_conta,
			nr_seq_pq_proc,
			ie_tecnica_utilizada,
			nr_sequencia
		from	procedimento_paciente
		where	nr_sequencia	= nr_seq_w
		and (coalesce(qt_ajuste_w, qt_original_w) - qt_original_w) <> 0);
			
		CALL gerar_proc_pac_auditoria(nr_sequencia_w, nr_seq_auditoria_p, nm_usuario_p);
		
		select 	count(*)
		into STRICT	qt_registro_w
		from	procedimento_participante
		where	nr_sequencia	= nr_seq_w;
		
		select 	count(*)
		into STRICT	qt_ajustado_w
		from 	procedimento_paciente
		where	nr_sequencia	= nr_seq_w
		and (coalesce(qt_ajuste_w, qt_original_w) - qt_original_w) <> 0;
				
		if (qt_registro_w		> 0 ) and (qt_ajustado_w		> 0) then
						
			insert into procedimento_participante(	
					nr_sequencia,
					nr_seq_partic,
					ie_funcao,
					dt_atualizacao,
					nm_usuario,
					cd_pessoa_fisica,
					cd_cgc,
					ie_valor_informado,
					ie_emite_conta,
					vl_participante ,
					vl_conta ,
					nr_lote_contabil,
					nr_conta_medico,
					ie_tipo_servico_sus,
					ie_tipo_ato_sus,
					qt_ponto_sus ,
					vl_ponto_sus ,
					vl_original ,
					ie_responsavel_credito,
					pr_procedimento,
					cd_especialidade,
					pr_faturar,
					cd_medico_convenio,
					nr_doc_honor_conv,
					nr_seq_proc_crit_repasse,
					ie_tiss_tipo_guia,
					nr_cirurgia ,
					cd_cbo,
					ie_doc_executor,
					ie_participou_sus)  
				(SELECT	nr_sequencia_w,
					nr_seq_partic,
					ie_funcao,
					dt_atualizacao,
					nm_usuario,
					cd_pessoa_fisica,
					cd_cgc,
					ie_valor_informado,
					ie_emite_conta,
					vl_participante * indice_w,
					vl_conta * indice_w,
					nr_lote_contabil,
					nr_conta_medico,
					ie_tipo_servico_sus,
					ie_tipo_ato_sus,
					qt_ponto_sus * indice_w,
					vl_ponto_sus * indice_w,
					vl_original * indice_w,
					ie_responsavel_credito,
					pr_procedimento,
					cd_especialidade,
					pr_faturar,    
					cd_medico_convenio,
					nr_doc_honor_conv,
					nr_seq_proc_crit_repasse,
					ie_tiss_tipo_guia,
					nr_cirurgia ,
					cd_cbo,
					ie_doc_executor,
					ie_participou_sus
				from	procedimento_participante
				where	nr_sequencia	= nr_seq_w);
		
		end if;	
		
		select 	max(cd_convenio)
		into STRICT	cd_convenio_w
		from 	procedimento_paciente
		where 	nr_sequencia = nr_seq_w;
		
		CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_w, nm_usuario_p);
		
		update	procedimento_paciente
		set	ie_auditoria	= 'S'
		where	nr_sequencia	= nr_sequencia_w;

		open C02;
		loop
		fetch C02 into	
			nr_seq_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			
			update	procedimento_paciente
			set	ie_auditoria	= 'S',
				ds_observacao	= substr(ds_observacao || ' ' || ds_texto_302309_w || nm_usuario_p || ' ' || to_char(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss'),1,255)
			where	nr_sequencia	= nr_seq_w;
			
			end;
		end loop;
		close C02;
	
		end;
	end if;
	end;
	
end loop;
close c01;

update	auditoria_conta_paciente
set	dt_liberacao	= clock_timestamp(),
	dt_atualizacao	= clock_timestamp(),
	nm_usuario	= nm_usuario_p,
	nm_usuario_lib	= nm_usuario_p,
	vl_auditoria_lib	= obter_valor_auditoria(nr_sequencia,nr_interno_conta)
where	nr_sequencia	= nr_seq_auditoria_p;

ie_resumo_auditoria_w := coalesce(obter_valor_param_usuario(1116, 193, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'S');

if (ie_resumo_auditoria_w = 'S') then
	CALL Atualizar_Resumo_Auditoria(nr_seq_auditoria_p,'F',nm_usuario_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_auditoria_externa (nr_seq_auditoria_p bigint, nm_usuario_p text) FROM PUBLIC;

