-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_liberar_tabela_preco ( nr_seq_tabela_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE


-- Campos do cursor 1
nr_seq_plano_preco_w		pls_plano_preco.nr_sequencia%type;
qt_idade_inicial_w		pls_plano_preco.qt_idade_inicial%type;
qt_idade_final_w		pls_plano_preco.qt_idade_final%type;
ie_grau_titularidade_w		pls_plano_preco.ie_grau_titularidade%type;
qt_vidas_inicial_w		pls_plano_preco.qt_vidas_inicial%type;
qt_vidas_final_w		pls_plano_preco.qt_vidas_final%type;
vl_preco_inicial_w		pls_plano_preco.vl_preco_inicial%type;
vl_preco_atual_w		pls_plano_preco.vl_preco_atual%type;
vl_preco_nao_subsid_atual_w	pls_plano_preco.vl_preco_nao_subsid_atual%type;
tx_acrescimo_w			pls_plano_preco.tx_acrescimo%type;
tx_acrescimo_erro_w		double precision;
vl_preco_ant_w			double precision;
qt_idade_inicio_w		integer;
nr_seq_preco_ant_w		bigint;
nr_seq_faixa_etaria_w		pls_faixa_etaria.nr_sequencia%type;
qt_consiste_fx_w		smallint;
qt_idade_inicial_ww		pls_faixa_etaria_item.qt_idade_inicial%type;
qt_idade_final_ww		pls_faixa_etaria_item.qt_idade_final%type;
ds_erro_w			varchar(16000) := null;
ds_erro_ww			varchar(16000) := null;
nr_seq_tabela_w			bigint;
ie_tabela_principal_w		varchar(2);
qt_faixa_etaria_w		bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		qt_idade_inicial,
		qt_idade_final,
		ie_grau_titularidade,
		qt_vidas_inicial,
		qt_vidas_final,
		vl_preco_inicial,
		vl_preco_atual,
		vl_preco_nao_subsid_atual,
		tx_acrescimo
	from	pls_plano_preco
	where	nr_seq_tabela	= nr_seq_tabela_w
	order by qt_idade_inicial;

C02 CURSOR FOR
	SELECT	qt_idade_inicial,
		qt_idade_final
	from	pls_faixa_etaria_item
	where	nr_seq_faixa_etaria = nr_seq_faixa_etaria_w
	group by
		qt_idade_inicial,
		qt_idade_final;

C03 CURSOR FOR
	SELECT 	nr_sequencia,
		CASE WHEN coalesce(nr_seq_principal::text, '') = '' THEN 'N'  ELSE 'S' END
	from 	pls_tabela_preco
	where 	nr_sequencia 		= nr_seq_tabela_p
	or 	nr_seq_principal	= nr_seq_tabela_p;


BEGIN

select	count(1)
into STRICT	qt_faixa_etaria_w
from	pls_plano_preco
where	nr_seq_tabela = nr_seq_tabela_p;

if (qt_faixa_etaria_w = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(821778, null);
end if;

CALL pls_consiste_faixa_tit_tabela(nr_seq_tabela_p);

open C03;
loop
fetch C03 into
	nr_seq_tabela_w,
	ie_tabela_principal_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	if (coalesce(nr_seq_tabela_w,0) > 0) then
		begin
		select	max(nr_seq_faixa_etaria)
		into STRICT	nr_seq_faixa_etaria_w
		from	pls_tabela_preco
		where	nr_sequencia	= nr_seq_tabela_w;
		exception
		when others then
			nr_seq_faixa_etaria_w := null;
		end;
		
		if (nr_seq_faixa_etaria_w IS NOT NULL AND nr_seq_faixa_etaria_w::text <> '') then
			open C02;
			loop
			fetch C02 into
				qt_idade_inicial_ww,
				qt_idade_final_ww;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				
				select	count(1)
				into STRICT	qt_consiste_fx_w
				from	pls_plano_preco
				where	nr_seq_tabela = nr_seq_tabela_w
				and	qt_idade_inicial = qt_idade_inicial_ww
				and	qt_idade_final = qt_idade_final_ww;
				
				if (qt_consiste_fx_w = 0) then
					--Não foi cadastrada a faixa etária de #@QT_IDADE_INICIAL#@ a #@QT_IDADE_FINAL#@ anos.
					CALL wheb_mensagem_pck.exibir_mensagem_abort(392860,'QT_IDADE_INICIAL='||qt_idade_inicial_ww||';'||'QT_IDADE_FINAL='||qt_idade_final_ww);
				end if;
				
				end;
			end loop;
			close C02;
		end if;
		
		open C01;
		loop
		fetch C01 into
			nr_seq_plano_preco_w,
			qt_idade_inicial_w,
			qt_idade_final_w,
			ie_grau_titularidade_w,
			qt_vidas_inicial_w,
			qt_vidas_final_w,
			vl_preco_inicial_w,
			vl_preco_atual_w,
			vl_preco_nao_subsid_atual_w,
			tx_acrescimo_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			select	coalesce(min(qt_idade_inicial),0)
			into STRICT	qt_idade_inicio_w
			from	pls_plano_preco
			where	nr_seq_tabela	= nr_seq_tabela_w;
			
			if (qt_idade_inicial_w <> qt_idade_inicio_w) then
				select	coalesce(max(nr_sequencia),0)
				into STRICT	nr_seq_preco_ant_w
				from	pls_plano_preco
				where	nr_seq_tabela	 = nr_seq_tabela_w
				and	qt_idade_inicial < qt_idade_inicial_w;
				
				if (nr_seq_preco_ant_w > 0) then
					select	coalesce(vl_preco_inicial,0)
					into STRICT	vl_preco_ant_w
					from	pls_plano_preco
					where	nr_sequencia = nr_seq_preco_ant_w;
					
					begin
					tx_acrescimo_w := (dividir_sem_round(vl_preco_inicial_w,vl_preco_ant_w) * 100) - 100;
					exception
					when others then
						tx_acrescimo_erro_w := (dividir_sem_round(vl_preco_inicial_w,vl_preco_ant_w) * 100) - 100;
						
						CALL wheb_mensagem_pck.exibir_mensagem_abort(200503,'QT_IDADE='||qt_idade_inicial_w||';'||'TX_ACRESCIMO='||tx_acrescimo_erro_w);
						-- Mensagem: O valor do acréscimo da faixa etária QT_IDADE chegou no limite: TX_ACRESCIMO
					end;
					
					if (tx_acrescimo_w < 0)	then
						tx_acrescimo_w := 0;
					end if;	
					
					update	pls_plano_preco
					set	tx_acrescimo	= tx_acrescimo_w,
						nm_usuario	= nm_usuario_p,
						dt_atualizacao	= clock_timestamp()
					where	nr_sequencia	= nr_seq_plano_preco_w;
				end if;
			end if;
			
			if (ie_tabela_principal_w = 'N') then
				ds_erro_w := pls_consiste_tab_faixa_etaria(	nr_seq_tabela_p, nr_seq_plano_preco_w, qt_idade_inicial_w, qt_idade_final_w, ie_grau_titularidade_w, qt_vidas_inicial_w, qt_vidas_final_w, vl_preco_atual_w, vl_preco_nao_subsid_atual_w, tx_acrescimo_w, ds_erro_w);
			end if;
			
			if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
				ds_erro_ww := ds_erro_ww || 'Faixa etária '||qt_idade_inicial_w||'-'||qt_idade_final_w||' anos (' || nr_seq_plano_preco_w || '):' || chr(13)
							 || ds_erro_w || chr(13);
			end if;
			end;
		end loop;
		close C01;
		
		ds_erro_w := pls_consistir_tabela_rn63(nr_seq_tabela_w, ds_erro_w);
		if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
			ds_erro_ww	:= ds_erro_ww || ds_erro_w || chr(13);
		end if;
		
		if (ds_erro_ww IS NOT NULL AND ds_erro_ww::text <> '') then
			rollback;
			
			if (length(ds_erro_ww) > 252) then
				ds_erro_p := substr(ds_erro_ww, 1, 252) || '...';
			else
				ds_erro_p := ds_erro_ww;
			end if;
		else
			update	pls_tabela_preco
			set	dt_liberacao	= clock_timestamp(),
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= nr_seq_tabela_w;
			
			commit;
		end if;
	end if;
	end;
end loop;
close C03;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_liberar_tabela_preco ( nr_seq_tabela_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

