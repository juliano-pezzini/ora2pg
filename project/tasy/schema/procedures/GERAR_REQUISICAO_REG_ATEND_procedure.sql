-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_requisicao_reg_atend ( ie_tipo_integracao_p text, nr_seq_segurado_p bigint, nr_seq_regulacao_p bigint, cd_cpf_medico_p text, cd_cpf_benef_p text, nm_beneficiario_p text, nm_mae_benef_p text, dt_nasc_benef_p timestamp, ie_sexo_p text, cd_nascionalidade_p text, cd_prestador_p text, cd_cgc_p text, ds_observacao_p text, ds_indicacao_clinica_p text, nm_usuario_p text, nr_seq_requisicao_p INOUT bigint, ie_tipo_p pls_requisicao.ie_tipo%type default null, cd_procedimento_p bigint DEFAULT NULL, ie_origem_proced_p text DEFAULT NULL, qt_solicitado_p bigint DEFAULT NULL, nr_seq_prioridade_p text DEFAULT NULL, cd_material_p bigint DEFAULT NULL, qt_material_p bigint DEFAULT NULL) AS $body$
DECLARE


nr_seq_plano_w			bigint;
nr_seq_requisicao_w		bigint;
nr_seq_uni_exec_w		bigint;
nr_seq_segurado_w		bigint;
ie_lanc_auto_w			varchar(1);
ie_sexo_benef_w			varchar(1);
ie_tipo_segurado_w		varchar(255);
ie_tipo_processo_w		varchar(255)	:= 'M';
ie_tipo_intercambio_w	varchar(255);
nm_beneficiario_w		varchar(255);
nm_mae_benef_w			varchar(255);
nr_seq_cbo_w			tiss_cbo_saude.nr_seq_cbo_saude%type;
cd_cooperativa_w		varchar(10);
cd_medico_w				varchar(10);
cd_pessoa_fisica_w		varchar(10);
cd_nacionalidade_w		varchar(10);
dt_nasc_benef_w			timestamp;
nr_seq_prestador_w		bigint;
nr_parecer_w			bigint;


BEGIN

if (ie_tipo_integracao_p = 'N') then

	nr_seq_segurado_w := nr_seq_segurado_p;

	if (coalesce(nr_seq_segurado_w,0) = 0) then

		if ((trim(both cd_cpf_benef_p) IS NOT NULL AND (trim(both cd_cpf_benef_p))::text <> '')) then

			select	max(cd_pessoa_fisica),
					max(dt_nascimento),
					max(cd_nacionalidade),
					max(nm_pessoa_fisica),
					max(ie_sexo),
					max(substr(obter_nome_mae_pf(cd_pessoa_fisica),1,255))
			into STRICT	cd_pessoa_fisica_w,
					dt_nasc_benef_w,
					cd_nacionalidade_w,
					nm_beneficiario_w,
					ie_sexo_benef_w,
					nm_mae_benef_w
			from	pessoa_fisica
			where	NR_CPF = cd_cpf_medico_p;

			if	(((trim(both dt_nasc_benef_p) IS NOT NULL AND (trim(both dt_nasc_benef_p))::text <> '')) and (dt_nasc_benef_w 		= dt_nasc_benef_p)) 	and
				(((trim(both cd_nascionalidade_p) IS NOT NULL AND (trim(both cd_nascionalidade_p))::text <> '')) and (cd_nacionalidade_w 	= cd_nascionalidade_p)) and
				(((trim(both nm_beneficiario_p) IS NOT NULL AND (trim(both nm_beneficiario_p))::text <> '')) and (nm_beneficiario_w 	= nm_beneficiario_p)) 	and
				(((trim(both ie_sexo_p) IS NOT NULL AND (trim(both ie_sexo_p))::text <> '')) and (ie_sexo_benef_w 		= ie_sexo_p)) 			and
				(((trim(both nm_mae_benef_p) IS NOT NULL AND (trim(both nm_mae_benef_p))::text <> '')) and (nm_mae_benef_w 		= nm_mae_benef_p)) then

				select	max(a.nr_sequencia)
				into STRICT	nr_seq_segurado_w
				from	pls_segurado a
				where	a.cd_pessoa_fisica = cd_pessoa_fisica_w;

			end if;

		end if;

	end if;

	if (coalesce(nr_seq_segurado_w,0) > 0) then

		select	nextval('pls_requisicao_seq')
		into STRICT	nr_seq_requisicao_w
		;

		select	max(nr_seq_plano)
		into STRICT	nr_seq_plano_w
		from	pls_segurado
		where	nr_sequencia = nr_seq_segurado_w;

		ie_tipo_segurado_w	:= pls_obter_dados_segurado(nr_seq_segurado_w, 'TP');

		if (coalesce(ie_tipo_segurado_w,'X')	= 'I') then
			ie_tipo_processo_w	:= 'I';
			ie_tipo_intercambio_w	:= 'I';
		end if;

		/* Caso tenha sido informado o médico, é obtido o CBO deste médico para gravar na requisição */

		if (cd_cpf_medico_p IS NOT NULL AND cd_cpf_medico_p::text <> '') then
			begin
				select	max(cd_pessoa_fisica)
				into STRICT	cd_medico_w
				from	pessoa_fisica
				where	NR_CPF = cd_cpf_medico_p;

				select	max(substr(PLS_OBTER_CBO_MEDICO(cd_medico_w),1,255))
				into STRICT	nr_seq_cbo_w
				;
			exception
			when others then
				nr_seq_cbo_w	:= null;
			end;
		end if;

		if (coalesce(cd_prestador_p,0) > 0) then

			select	max(nr_sequencia)
			into STRICT	nr_seq_prestador_w
			from	pls_prestador
			where	cd_prestador = cd_prestador_p;

		else

			select	max(nr_sequencia)
			into STRICT	nr_seq_prestador_w
			from	pls_prestador
			where	cd_pessoa_fisica = cd_pessoa_fisica_w;

		end if;

		insert into pls_requisicao(	nr_sequencia,
									dt_requisicao,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_seq_segurado,
									cd_medico_solicitante,
									nr_seq_plano,
									cd_estabelecimento,
									ie_tipo_guia,
									ie_estagio,
									ie_tipo_requisicao,
									nm_usuario_solic,
									ie_origem_solic,
									nr_seq_prestador,
									ie_tipo_processo,
									ie_tipo_intercambio,
									ie_tipo_gat,
									nr_seq_cbo_saude,
									nr_seq_regulacao,
									ie_integracao,
									ie_estagio_regulacao,
									nr_seq_prioridade,
									ds_observacao,
									ds_indicacao_clinica,
									ie_tipo)
						values (	nr_seq_requisicao_w,
									clock_timestamp(),
									clock_timestamp(),
									nm_usuario_p,
									clock_timestamp(),
									nm_usuario_p,
									nr_seq_segurado_w,
									cd_medico_w,
									nr_seq_plano_w,
									obter_estabelecimento_ativo,
									null,
									1,
									'M', -- ie_tipo_requisicao
									nm_usuario_p,
									'R',  -- ie_origem_solic
									nr_seq_prestador_w,
									'E', --ie_tipo_processo
									ie_tipo_intercambio_w,
									'N',
									nr_seq_cbo_w,
									nr_seq_regulacao_p,
									ie_tipo_integracao_p,
									'AG',
									coalesce(nr_seq_prioridade_p,1),
									ds_observacao_p,
									ds_indicacao_clinica_p,
									ie_tipo_p);
		commit;
		

		if ((nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') and (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and (ie_origem_proced_p IS NOT NULL AND ie_origem_proced_p::text <> ''))then
			CALL gerar_requisicao_int_proc(nr_seq_requisicao_w, cd_procedimento_p, ie_origem_proced_p, qt_solicitado_p, nm_usuario_p ,nr_seq_prioridade_p);
		elsif ((nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') and (cd_material_p IS NOT NULL AND cd_material_p::text <> '') and (qt_material_p IS NOT NULL AND qt_material_p::text <> '')) then
			CALL gerar_mat_req_reg(cd_material_p, qt_material_p, nr_seq_requisicao_w, nm_usuario_p );
		end if;

		CALL pls_requisicao_gravar_hist(	nr_seq_requisicao_w,
									'L',
									'Requisição nº '||nr_seq_requisicao_w||' criada pelo usuário '||nm_usuario_p||' em '||to_char(clock_timestamp(),'dd/mm/yyyy hh24:mi:ss'),
									null,
									nm_usuario_p);

		CALL pls_consistir_requisicao(nr_seq_requisicao_w, obter_estabelecimento_ativo, nm_usuario_p);

		nr_seq_requisicao_p := nr_seq_requisicao_w;

	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_requisicao_reg_atend ( ie_tipo_integracao_p text, nr_seq_segurado_p bigint, nr_seq_regulacao_p bigint, cd_cpf_medico_p text, cd_cpf_benef_p text, nm_beneficiario_p text, nm_mae_benef_p text, dt_nasc_benef_p timestamp, ie_sexo_p text, cd_nascionalidade_p text, cd_prestador_p text, cd_cgc_p text, ds_observacao_p text, ds_indicacao_clinica_p text, nm_usuario_p text, nr_seq_requisicao_p INOUT bigint, ie_tipo_p pls_requisicao.ie_tipo%type default null, cd_procedimento_p bigint DEFAULT NULL, ie_origem_proced_p text DEFAULT NULL, qt_solicitado_p bigint DEFAULT NULL, nr_seq_prioridade_p text DEFAULT NULL, cd_material_p bigint DEFAULT NULL, qt_material_p bigint DEFAULT NULL) FROM PUBLIC;

