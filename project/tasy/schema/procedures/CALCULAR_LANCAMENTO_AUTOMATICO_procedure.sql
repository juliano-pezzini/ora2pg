-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_lancamento_automatico (CD_ESTABELECIMENTO_P bigint, CD_CONVENIO_P bigint, CD_CATEGORIA_P bigint, DT_CONTA_P timestamp, CD_TIPO_ACOMODACAO_P bigint, CD_ITEM_P bigint, IE_ORIGEM_PROCED_P bigint, CD_MEDICO_P text, CD_FUNCAO_MEDICO_P bigint, QT_IDADE_P bigint, NR_SEQUENCIA_P bigint, NR_SEQ_EXAME_LAB_P bigint, NR_SEQ_PROC_INTERNO_P bigint, IE_TIPO_ATENDIMENTO_P bigint, CD_SETOR_ATENDIMENTO_P bigint, CD_USUARIO_CONVENIO_P text, CD_PLANO_P text, IE_CLINICA_P bigint, CD_EMPRESA_REF_P bigint, IE_TIPO_ITEM_P bigint, CD_CGC_FORNECEDOR_P text, cd_edicao_amb_p bigint, ie_separa_kit_p text, vl_kit_p INOUT bigint, VL_LANC_AUTO_W INOUT bigint) AS $body$
DECLARE

				


vl_lanc_auto_ww			double precision;
qt_pontos_w			preco_amb.qt_pontuacao%type;
vl_kit_ww			double precision;
nr_seq_lanc_w			bigint;
cd_material_w			bigint;
cd_procedimento_w		bigint;
qt_lancamento_w			double precision;
ie_origem_proced_w		bigint;
dt_ult_vigencia_w		timestamp;
cd_tab_preco_mat_w		smallint;
ie_origem_preco_w		smallint;
vl_material_w			double precision;
VL_PROCEDIMENTO_w		double precision;
VL_CUSTO_OPERACIONAL_w		double precision;
VL_ANESTESISTA_w		double precision;
VL_MEDICO_w			double precision;
VL_AUXILIARES_w			double precision;
VL_MATERIAIS_w			double precision;
VL_PTO_PROCEDIMENTO_w		double precision;
VL_PTO_CUSTO_OPERAC_w		double precision;
VL_PTO_ANESTESISTA_w		double precision;
VL_PTO_MEDICO_w			double precision;
VL_PTO_AUXILIARES_w		double precision;
VL_PTO_MATERIAIS_w		double precision;
QT_PORTE_ANESTESICO_w		smallint;
CD_EDICAO_AMB_w			integer;
ie_preco_informado_w		varchar(01);
ie_classificacao_w		varchar(1);
nr_seq_proc_interno_w		bigint;
nr_seq_exame_w			bigint;
ie_tipo_convenio_w		regra_lanc_automatico.ie_tipo_convenio%type;
ds_ret_w			bigint;
ds_erro_w			varchar(255);
nr_seq_proc_interno_aux_w	bigint;
nr_seq_bras_preco_w		bigint;
nr_seq_mat_bras_w		bigint;
nr_seq_conv_bras_w		bigint;
nr_seq_conv_simpro_w		bigint;
nr_seq_mat_simpro_w		bigint;
nr_seq_simpro_preco_w		bigint;
nr_seq_ajuste_proc_w		bigint;
nr_seq_ajuste_mat_w		bigint;
ie_situacao_w  varchar(1);

cd_grupo_proc_w			grupo_proc.cd_grupo_proc%type;
cd_especialidade_proc_w		especialidade_proc.cd_especialidade%type;
cd_area_procedimento_w		area_procedimento.cd_area_procedimento%type;

vl_proc_teste_w		bigint;


C00 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_lanc
	from 	regra_lanc_automatico a
	where	cd_estabelecimento 	= cd_estabelecimento_p
	and	((coalesce(cd_procedimento::text, '') = '') or (cd_procedimento = cd_item_p))
	and	((coalesce(ie_origem_proced::text, '') = '') or (coalesce(cd_procedimento::text, '') = '') or (ie_origem_proced = ie_origem_proced_p))
	and	((coalesce(cd_grupo_proc::text, '') = '') or (cd_grupo_proc = cd_grupo_proc_w))
	and	((coalesce(cd_especialidade::text, '') = '') or (cd_especialidade = cd_especialidade_proc_w))
	and	((coalesce(cd_area_procedimento::text, '') = '') or (cd_area_procedimento = cd_area_procedimento_w))	
	and	((coalesce(ie_tipo_atendimento::text, '') = '') or (ie_tipo_atendimento = ie_tipo_atendimento_p))
	and	((coalesce(cd_tipo_acomodacao::text, '') = '') or (cd_tipo_acomodacao = cd_tipo_acomodacao_p))
	and 	coalesce(cd_edicao_amb, coalesce(cd_edicao_amb_p,0)) = coalesce(cd_edicao_amb_p,0)
	and     cd_convenio = cd_convenio_p 	--deixei como obrigatorio pois o resto da rotina (sem cursor) faz da mesma forma
	and	((coalesce(cd_categoria::text, '') = '') or (cd_categoria = cd_categoria_p))
	and	((coalesce(cd_setor_atendimento::text, '') = '') or (cd_setor_atendimento = cd_setor_atendimento_p))
	and	((coalesce(ie_clinica::text, '') = '') or (ie_clinica = ie_clinica_p))
	and	dt_conta_p between coalesce(dt_inicio_vigencia,dt_conta_p) and fim_dia(coalesce(dt_final_vigencia,dt_conta_p))
	and	coalesce(a.nr_seq_proc_interno::text, '') = ''
	and	nr_seq_evento = 34
	and (coalesce(ie_tipo_convenio,coalesce(ie_tipo_convenio_w,0)) = coalesce(ie_tipo_convenio_w,0))
	and	coalesce(ie_situacao, 'A') = 'A'	
	order by
		coalesce(a.cd_setor_atendimento,0),
		coalesce(a.ie_tipo_atendimento,0),
		coalesce(a.cd_convenio,0),
		coalesce(a.cd_edicao_amb,0),
		coalesce(a.cd_procedimento,0),
		coalesce(a.cd_grupo_proc,0),
		coalesce(a.cd_especialidade_proc,0),
		coalesce(a.cd_area_procedimento,0),		
		coalesce(a.ie_clinica,0),
		coalesce(cd_categoria,'0'),
		coalesce(cd_tipo_acomodacao,0);		

C01 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		cd_material,
		coalesce(qt_lancamento,1), 
		nr_seq_proc_interno,
		nr_seq_exame
	from	regra_lanc_aut_pac
	where	nr_seq_regra = nr_seq_lanc_w
	and 	coalesce(ie_adic_orcamento,'N') = 'N';

c00_w				c00%RowType;
	

BEGIN

vl_lanc_auto_ww		:= 0;
vl_kit_ww		:= 0;
vl_kit_p		:= 0;


select 	coalesce(ie_tipo_convenio,0)
into STRICT 	ie_tipo_convenio_w
from 	convenio
where 	cd_convenio = cd_convenio_p;

if (IE_TIPO_ITEM_P = 4) then

	if (coalesce(IE_TIPO_ATENDIMENTO_P,0) = 0) then
		
		Select	coalesce(max(nr_sequencia), 0)
		into STRICT	nr_seq_lanc_w
		from	regra_lanc_automatico
		where	cd_estabelecimento =  CD_ESTABELECIMENTO_P
		and	nr_seq_proc_interno =  NR_SEQ_PROC_INTERNO_P
		and     coalesce(cd_convenio, CD_CONVENIO_P) = CD_CONVENIO_P
		and	((coalesce(cd_categoria::text, '') = '') or (cd_categoria = cd_categoria_p))
		and 	coalesce(cd_edicao_amb, coalesce(cd_edicao_amb_p,0)) = coalesce(cd_edicao_amb_p,0)
		and	coalesce(ie_tipo_atendimento::text, '') = ''
		and (coalesce(ie_tipo_convenio,coalesce(ie_tipo_convenio_w,0)) = coalesce(ie_tipo_convenio_w,0))
		and	coalesce(ie_situacao, 'A') = 'A';
	else
		Select	coalesce(max(nr_sequencia), 0)
		into STRICT	nr_seq_lanc_w
		from	regra_lanc_automatico
		where	cd_estabelecimento =  CD_ESTABELECIMENTO_P
		and	nr_seq_proc_interno =  NR_SEQ_PROC_INTERNO_P
		and     coalesce(cd_convenio,CD_CONVENIO_P)  = CD_CONVENIO_P
		and	((coalesce(cd_categoria::text, '') = '') or (cd_categoria = cd_categoria_p))
		and 	coalesce(cd_edicao_amb, coalesce(cd_edicao_amb_p,0)) = coalesce(cd_edicao_amb_p,0)
		and	ie_tipo_atendimento = IE_TIPO_ATENDIMENTO_P
		and (coalesce(ie_tipo_convenio,coalesce(ie_tipo_convenio_w,0)) = coalesce(ie_tipo_convenio_w,0))		
		and	coalesce(ie_situacao, 'A') = 'A';
	end if;


elsif (IE_TIPO_ITEM_P in (0,1)) and (NR_SEQ_EXAME_LAB_P = 0) then

	if (coalesce(IE_TIPO_ATENDIMENTO_P,0) = 0) then
		Select	coalesce(max(nr_sequencia), 0)
		into STRICT	nr_seq_lanc_w
		from	regra_lanc_automatico 
		where	cd_estabelecimento = CD_ESTABELECIMENTO_P
		and	cd_procedimento	= CD_ITEM_P
		and	ie_origem_proced = IE_ORIGEM_PROCED_P
		and     cd_convenio = CD_CONVENIO_P
		and	((coalesce(cd_categoria::text, '') = '') or (cd_categoria = cd_categoria_p))
		and 	coalesce(cd_edicao_amb, coalesce(cd_edicao_amb_p,0)) = coalesce(cd_edicao_amb_p,0)
		and	coalesce(ie_tipo_atendimento::text, '') = ''
		and (coalesce(ie_tipo_convenio,coalesce(ie_tipo_convenio_w,0)) = coalesce(ie_tipo_convenio_w,0))
		and	coalesce(ie_situacao, 'A') = 'A';
	else	
		Select	coalesce(max(nr_sequencia), 0)
		into STRICT	nr_seq_lanc_w
		from	regra_lanc_automatico 
		where	cd_estabelecimento = CD_ESTABELECIMENTO_P
		and	cd_procedimento	= CD_ITEM_P
		and	ie_origem_proced = IE_ORIGEM_PROCED_P
		and     cd_convenio = CD_CONVENIO_P
		and	((coalesce(cd_categoria::text, '') = '') or (cd_categoria = cd_categoria_p))
		and 	coalesce(cd_edicao_amb, coalesce(cd_edicao_amb_p,0)) = coalesce(cd_edicao_amb_p,0)
		and	ie_tipo_atendimento = IE_TIPO_ATENDIMENTO_P
		and (coalesce(ie_tipo_convenio,coalesce(ie_tipo_convenio_w,0)) = coalesce(ie_tipo_convenio_w,0))
		and	coalesce(ie_situacao, 'A') = 'A';
	end if;	

	if (coalesce(nr_seq_lanc_w,0) = 0) then
	
		begin
		
			select	b.cd_grupo_proc,
				c.cd_especialidade,
				d.cd_area_procedimento			
			into STRICT	cd_grupo_proc_w,
			        cd_especialidade_proc_w,
			        cd_area_procedimento_w			
			from	procedimento a,
				grupo_proc b,
				especialidade_proc c,
				area_procedimento d
			where	a.cd_grupo_proc		= b.cd_grupo_proc
			and	b.cd_especialidade	= c.cd_especialidade
			and	c.cd_area_procedimento	= d.cd_area_procedimento
			and	a.cd_procedimento	= cd_item_p
			and	a.ie_origem_proced	= ie_origem_proced_p;
			
		exception
		when others then
			cd_grupo_proc_w		:= 0;
			cd_especialidade_proc_w := 0;
			cd_area_procedimento_w	:= 0;		
		end;
		

		open C00;
		loop
		fetch C00 into	
			c00_w;
		EXIT WHEN NOT FOUND; /* apply on C00 */
			begin			
			nr_seq_lanc_w := c00_w.nr_seq_lanc;					
			end;
		end loop;
		close C00;
	
	end if;
	

elsif (IE_TIPO_ITEM_P = 0) and (NR_SEQ_EXAME_LAB_P > 0) then

	if (coalesce(IE_TIPO_ATENDIMENTO_P,0) = 0) then
		
		Select	coalesce(max(nr_sequencia), 0)
		into STRICT	nr_seq_lanc_w
		from	regra_lanc_automatico
		where	cd_estabelecimento =  CD_ESTABELECIMENTO_P
		and	nr_seq_exame =  NR_SEQ_EXAME_LAB_P
		and     coalesce(cd_convenio, CD_CONVENIO_P) = CD_CONVENIO_P
		and	((coalesce(cd_categoria::text, '') = '') or (cd_categoria = cd_categoria_p))
		and 	coalesce(cd_edicao_amb, coalesce(cd_edicao_amb_p,0)) = coalesce(cd_edicao_amb_p,0)
		and	coalesce(ie_tipo_atendimento::text, '') = ''
		and (coalesce(ie_tipo_convenio,coalesce(ie_tipo_convenio_w,0)) = coalesce(ie_tipo_convenio_w,0))		
		and	coalesce(ie_situacao, 'A') = 'A';
	else
		Select	coalesce(max(nr_sequencia), 0)
		into STRICT	nr_seq_lanc_w
		from	regra_lanc_automatico
		where	cd_estabelecimento =  CD_ESTABELECIMENTO_P
		and	nr_seq_exame =  NR_SEQ_EXAME_LAB_P
		and     coalesce(cd_convenio,CD_CONVENIO_P)  = CD_CONVENIO_P
		and	((coalesce(cd_categoria::text, '') = '') or (cd_categoria = cd_categoria_p))
		and 	coalesce(cd_edicao_amb, coalesce(cd_edicao_amb_p,0)) = coalesce(cd_edicao_amb_p,0)
		and	ie_tipo_atendimento = IE_TIPO_ATENDIMENTO_P
		and (coalesce(ie_tipo_convenio,coalesce(ie_tipo_convenio_w,0)) = coalesce(ie_tipo_convenio_w,0))		
		and	coalesce(ie_situacao, 'A') = 'A';
	end if;		
end if;

OPEN C01;
LOOP
	FETCH C01 into
		cd_procedimento_w,
		ie_origem_proced_w,
		cd_material_w,
		qt_lancamento_w,
		nr_seq_proc_interno_w,
		nr_seq_exame_w;	
	EXIT WHEN NOT FOUND; /* apply on c01 */
	
	begin	
	if  not(coalesce(cd_material_w::text, '') = '') then

    if (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then
      select 	coalesce(max(ie_situacao),'A')
      into STRICT	ie_situacao_w
      from	material
      where	cd_material	 = cd_material_w;
		
      if (ie_situacao_w = 'I') then
        goto continue_loop;
      end if;
    end if;

		SELECT * FROM define_preco_material(CD_ESTABELECIMENTO_P, CD_CONVENIO_P, CD_CATEGORIA_P, DT_CONTA_P, cd_material_w, CD_TIPO_ACOMODACAO_P, IE_TIPO_ATENDIMENTO_P, CD_SETOR_ATENDIMENTO_P, CD_CGC_FORNECEDOR_P, QT_IDADE_P, NR_SEQUENCIA_P, cd_plano_p, null, null, null, null, null, null, null, vl_material_w, dt_ult_vigencia_w, cd_tab_preco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w) INTO STRICT vl_material_w, dt_ult_vigencia_w, cd_tab_preco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w;

		vl_lanc_auto_ww:= vl_lanc_auto_ww + (qt_lancamento_w * vl_material_w);						
		
	elsif (not(coalesce(cd_procedimento_w::text, '') = '')) or (not(coalesce(nr_seq_exame_w::text, '') = '')) or (not(coalesce(nr_seq_proc_interno_w::text, '') = '')) then
	
    /*tratar para ir para o final caso o proc interno da ação da regra esteja inativo*/

    if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
			select	coalesce(max(ie_situacao),'A')
			into STRICT	ie_situacao_w
			from	proc_interno
			where	nr_sequencia = nr_seq_proc_interno_w;

			if (ie_situacao_w = 'I') then
				goto continue_loop;
			end if;
    end if;

		/* heckmann - os 238389 - 04/08/2010 Para calcular o lançamento automático quando existe RLA por exame ou proc interno*/

		if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
			SELECT * FROM Obter_Proc_Tab_Interno_Conv(nr_seq_proc_interno_w, cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, cd_plano_p, cd_setor_atendimento_p, cd_procedimento_w, ie_origem_proced_w, null, dt_conta_p, cd_tipo_acomodacao_p, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
		end if;
	
		if	((coalesce(nr_seq_exame_w,0) > 0) and (coalesce(cd_procedimento_w,0) = 0)) then
			SELECT * FROM Obter_Exame_Lab_Convenio(nr_seq_exame_w, cd_convenio_p, cd_categoria_p, ie_tipo_atendimento_p, cd_estabelecimento_p, ie_tipo_convenio_w, nr_seq_proc_interno_w, null, cd_plano_p, ds_ret_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w) INTO STRICT ds_ret_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w;
		end if;
	

	    /*Após obter o código do procedimento através do proc interno ou exame de laboratório testar novamente para ver se o código está ativo.*/

    if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
      select 	coalesce(max(ie_situacao),'A')
      into STRICT	ie_situacao_w
      from	procedimento
      where	cd_procedimento	 = cd_procedimento_w
      and	ie_origem_proced = ie_origem_proced_w;
		
      if (ie_situacao_w = 'I') then
        goto continue_loop;
      end if;
    end if;

		select 	coalesce(max(ie_classificacao),1)
		into STRICT	ie_classificacao_w
		from 	procedimento
		where 	cd_procedimento = cd_procedimento_w
		and 	ie_origem_proced = ie_origem_proced_w;
		
		if (ie_classificacao_w = 1) then
		
			SELECT * FROM define_preco_procedimento(CD_ESTABELECIMENTO_P, CD_CONVENIO_P, CD_CATEGORIA_P, DT_CONTA_P, cd_procedimento_w, CD_TIPO_ACOMODACAO_P, IE_TIPO_ATENDIMENTO_P, CD_SETOR_ATENDIMENTO_P, CD_MEDICO_P, CD_FUNCAO_MEDICO_P, QT_IDADE_P, NR_SEQ_EXAME_LAB_P, NR_SEQ_PROC_INTERNO_W, CD_USUARIO_CONVENIO_P, CD_PLANO_P, IE_CLINICA_P, CD_EMPRESA_REF_P, null, vl_procedimento_w, VL_CUSTO_OPERACIONAL_w, VL_ANESTESISTA_w, VL_MEDICO_w, VL_AUXILIARES_w, VL_MATERIAIS_w, VL_PTO_PROCEDIMENTO_w, VL_PTO_CUSTO_OPERAC_w, VL_PTO_ANESTESISTA_w, VL_PTO_MEDICO_w, VL_PTO_AUXILIARES_w, VL_PTO_MATERIAIS_w, QT_PORTE_ANESTESICO_w, qt_pontos_w, CD_EDICAO_AMB_w, ie_preco_informado_w, nr_seq_ajuste_proc_w, NR_SEQUENCIA_P, null, 0, null, null, NULL, NULL, null, null, null, null, null, null, null, null, null, null, null, null, null) INTO STRICT vl_procedimento_w, VL_CUSTO_OPERACIONAL_w, VL_ANESTESISTA_w, VL_MEDICO_w, VL_AUXILIARES_w, VL_MATERIAIS_w, VL_PTO_PROCEDIMENTO_w, VL_PTO_CUSTO_OPERAC_w, VL_PTO_ANESTESISTA_w, VL_PTO_MEDICO_w, VL_PTO_AUXILIARES_w, VL_PTO_MATERIAIS_w, QT_PORTE_ANESTESICO_w, qt_pontos_w, CD_EDICAO_AMB_w, ie_preco_informado_w, nr_seq_ajuste_proc_w;
			
		else
			SELECT * FROM define_preco_servico(CD_ESTABELECIMENTO_P, CD_CONVENIO_P, CD_CATEGORIA_P, DT_CONTA_P, cd_procedimento_w, coalesce(CD_SETOR_ATENDIMENTO_P,0), coalesce(IE_TIPO_ATENDIMENTO_P,0), coalesce(CD_TIPO_ACOMODACAO_P,0), CD_USUARIO_CONVENIO_P, CD_PLANO_P, coalesce(IE_CLINICA_P,0), coalesce(CD_EMPRESA_REF_P,0), null, vl_procedimento_w, nr_seq_ajuste_proc_w, null, 0, null, NR_SEQ_PROC_INTERNO_W, null, null, null, null, null, null, null, null, null, cd_medico_p) INTO STRICT vl_procedimento_w, nr_seq_ajuste_proc_w;

		end if;			
		
		vl_kit_ww:= 0;

		vl_kit_ww := Calcular_Preco_Kit(CD_ESTABELECIMENTO_P, CD_CONVENIO_P, CD_CATEGORIA_P, DT_CONTA_P, cd_procedimento_w, CD_TIPO_ACOMODACAO_P, QT_IDADE_P, NR_SEQUENCIA_P, IE_TIPO_ATENDIMENTO_P, CD_SETOR_ATENDIMENTO_P, 0, CD_CGC_FORNECEDOR_P, vl_kit_ww);		
		
		if (coalesce(ie_separa_kit_p,'N') = 'S') then
			vl_kit_p := (vl_kit_p + vl_kit_ww);
			vl_lanc_auto_ww := vl_lanc_auto_ww + ( qt_lancamento_w * vl_procedimento_w );
		else
			vl_lanc_auto_ww := vl_lanc_auto_ww + (qt_lancamento_w * ( vl_procedimento_w + vl_kit_ww ));
		end if;			
	end if;			
	end;
	<<continue_loop>>
	ie_situacao_w := null;
END LOOP;
CLOSE C01;

VL_LANC_AUTO_W:= vl_lanc_auto_ww;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_lancamento_automatico (CD_ESTABELECIMENTO_P bigint, CD_CONVENIO_P bigint, CD_CATEGORIA_P bigint, DT_CONTA_P timestamp, CD_TIPO_ACOMODACAO_P bigint, CD_ITEM_P bigint, IE_ORIGEM_PROCED_P bigint, CD_MEDICO_P text, CD_FUNCAO_MEDICO_P bigint, QT_IDADE_P bigint, NR_SEQUENCIA_P bigint, NR_SEQ_EXAME_LAB_P bigint, NR_SEQ_PROC_INTERNO_P bigint, IE_TIPO_ATENDIMENTO_P bigint, CD_SETOR_ATENDIMENTO_P bigint, CD_USUARIO_CONVENIO_P text, CD_PLANO_P text, IE_CLINICA_P bigint, CD_EMPRESA_REF_P bigint, IE_TIPO_ITEM_P bigint, CD_CGC_FORNECEDOR_P text, cd_edicao_amb_p bigint, ie_separa_kit_p text, vl_kit_p INOUT bigint, VL_LANC_AUTO_W INOUT bigint) FROM PUBLIC;

