-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_agenda_mensal_part_js ( nm_usuario_p text, dt_referencia_p timestamp, cd_estabelecimento_p bigint, ie_status_p INOUT text, ds_agenda_p INOUT text) AS $body$
DECLARE


dt_inicio_mes_w		timestamp;
dt_final_mes_w		timestamp;
ie_status_w		varchar(4000) := '';
dt_atual_w		timestamp;
ie_dia_semana_w		varchar(10);
ie_dia_feriado_w	varchar(10);
ie_status_dia_w		varchar(10);
qt_agenda_gerada_w	bigint := 0;
qt_livre_w		bigint;
qt_bloqueada_w		bigint;
qt_marcado_w		bigint;
nm_usuario_w		varchar(100);
ds_mes_w		varchar(30);
qt_agenda_w		bigint := 0;
qt_hr_inicio_w		bigint;


BEGIN

dt_inicio_mes_w	:= trunc(dt_referencia_p,'month');
dt_final_mes_w	:= last_day(dt_referencia_p);

dt_atual_w	:= trunc(dt_inicio_mes_w, 'dd');

/* Status por Dia
	L - Existem Livres
	B - Todos Bloqueado
	N - Não tem Agenda Dia
	X - Todos horários Livres
	T - Todos Horarios Ocupados
	D - Sabados e Domingos
*/
while(dt_atual_w	<= trunc(dt_final_mes_w)) loop
	begin
	ie_status_dia_w := '';

	ie_dia_semana_w	:= obter_cod_dia_semana(dt_atual_w);

	select	count(*)
	into STRICT	qt_agenda_gerada_w
	from 	agenda_tasy
	where 	nm_usuario_agenda = nm_usuario_p
	and	dt_agenda between trunc(dt_atual_w) and fim_dia(dt_atual_w)
	and	ie_status	<> 'C'
	and (ie_dia_semana_w between 2 and 6
	or   ie_status <> 'L');

	if (coalesce(qt_agenda_gerada_w,0) > 0) then

		SELECT	coalesce(SUM(CASE WHEN ie_status='L' THEN 1  ELSE 0 END ),0),
			coalesce(SUM(CASE WHEN ie_status='B' THEN 1  ELSE 0 END ),0),
			coalesce(SUM(CASE WHEN ie_status='M' THEN 1  ELSE 0 END ),0) + coalesce(SUM(CASE WHEN ie_status='F' THEN 1  ELSE 0 END ),0) + coalesce(SUM(CASE WHEN ie_status='E' THEN 1  ELSE 0 END ),0)
		into STRICT	qt_livre_w,
			qt_bloqueada_w,
			qt_marcado_w
		FROM 	agenda_tasy
		WHERE 	nm_usuario_agenda = nm_usuario_p
		AND	dt_agenda between trunc(dt_atual_w) and fim_dia(dt_atual_w)
		AND	ie_status	<> 'C';

		if (coalesce(qt_livre_w,0) = 0) and (coalesce(qt_marcado_w,0) = 0) and (coalesce(qt_bloqueada_w, 0) > 0) and (coalesce(qt_bloqueada_w, 0) = coalesce(qt_agenda_gerada_w,0)) then
			ie_status_dia_w	:= 'B';
		elsif	((coalesce(qt_agenda_gerada_w,0) > 0) and (coalesce(qt_livre_w,0) > 0) and (coalesce(qt_agenda_gerada_w,0) = coalesce(qt_livre_w,0))) then
			ie_status_dia_w	:= 'X';
		elsif	((coalesce(qt_agenda_gerada_w,0) > 0) and (coalesce(qt_marcado_w,0) > 0) and
			(coalesce(qt_agenda_gerada_w,0) = (coalesce(qt_marcado_w,0) + coalesce(qt_bloqueada_w, 0)))) then
			ie_status_dia_w	:= 'T';
		elsif (coalesce(qt_agenda_gerada_w,0) > 0) and (coalesce(qt_livre_w,0) > 0) and (coalesce(qt_agenda_gerada_w,0) <> coalesce(qt_livre_w,0)) then
			ie_status_dia_w	:= 'L';
		end if;
	else
		SELECT  count(1)
		into STRICT	qt_agenda_gerada_w
		FROM	agenda_tasy_horario a
		WHERE	TO_DATE(a.hr_inicio,'hh24:mi') < TO_DATE(a.hr_final,'hh24:mi')
		AND	coalesce(qt_min_intervalo,0) > 0
		AND	nm_usuario_agenda	= nm_usuario_p
		AND	((ie_dia_semana	= 9
		AND	ie_dia_semana_w BETWEEN 2 AND 6
		AND	NOT EXISTS (SELECT 1
				FROM	agenda_tasy_horario
				WHERE	ie_dia_semana	= ie_dia_semana_w
				AND	nm_usuario_agenda	= nm_usuario_p))
		OR (ie_dia_semana		= ie_dia_semana_w))
		order by 1;

		if (coalesce(qt_hr_inicio_w,0) > 0) and (trunc(dt_atual_w) <> trunc(clock_timestamp())) then
			ie_status_dia_w	:= 'X';
		elsif (coalesce(qt_hr_inicio_w,0) = 0) and
			((ie_dia_semana_w = '1') or (ie_dia_semana_w = '7'))then
			ie_status_dia_w	:= 'D';
		else
			ie_status_dia_w	:= 'N';
		end if;
	end if;

	ie_status_w	:= ie_status_w || ie_status_dia_w;
	dt_atual_w	:= dt_atual_w + 1;

	end;
end loop;

ie_status_p := ie_status_w;


nm_usuario_w := substr(Obter_Nome_Usuario(nm_usuario_p),1,100);
ds_mes_w := substr(Obter_desc_mes_data(dt_inicio_mes_w,'D'),1,30);

ds_agenda_p := substr(obter_texto_dic_objeto(327250, wheb_usuario_pck.get_nr_seq_idioma, 'NM_AGENDA='||nm_usuario_w),1,255);


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_agenda_mensal_part_js ( nm_usuario_p text, dt_referencia_p timestamp, cd_estabelecimento_p bigint, ie_status_p INOUT text, ds_agenda_p INOUT text) FROM PUBLIC;

