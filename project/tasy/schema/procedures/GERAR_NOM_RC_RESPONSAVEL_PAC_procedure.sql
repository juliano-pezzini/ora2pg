-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nom_rc_responsavel_pac ( nr_seq_cabecalho_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* Persona responsable del paciente */

nr_atendimento_w			atendimento_paciente.nr_atendimento%type;
nr_seq_episodio_w			episodio_paciente.nr_sequencia%type;

cd_pessoa_fisica_resp_w		pessoa_fisica.cd_pessoa_fisica%type;
ie_grau_parentesco_w		varchar(20);
nm_primeiro_nome_resp_w		person_name.ds_given_name%type;
nm_sobrenome_pai_resp_w		person_name.ds_family_name%type;
nm_sobrenome_mae_resp_w		person_name.ds_component_name_1%type;
nr_telefone_w				compl_pessoa_fisica.nr_telefone%type;
ds_email_w					compl_pessoa_fisica.ds_email%type;

nr_seq_pessoa_endereco_w	pessoa_endereco.nr_sequencia%type;	
ds_endereco_completo_w		varchar(2000);	
cd_tipo_vialidade_w			varchar(255);
ds_rua_vialidade_w			varchar(255);
nr_numero_externo_w			varchar(255);
nr_numero_interno_w			varchar(255);
cd_tipo_asentamento_w		varchar(255);
nm_assentamento_w		    varchar(255);
cd_localidade_w				varchar(255);
cd_municipio_w				varchar(255);
cd_entidade_w				varchar(255);
cd_postal_w					varchar(255);
cd_pais_w					varchar(255);
nr_domicilio_ext_alfa_w		varchar(255);
nr_domicilio_int_w			varchar(255);

nr_seq_catalogo_w			end_catalogo.nr_sequencia%type;


BEGIN

delete from nom_rc_pessoa_fisica
where nr_seq_cabecalho = nr_seq_cabecalho_p
and	ie_tipo = 'RES';

select	a.nr_atendimento,
		a.nr_seq_episodio
into STRICT	nr_atendimento_w,
		nr_seq_episodio_w
from	nom_rc_cabecalho a
where	a.nr_sequencia	= nr_seq_cabecalho_p;


if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
	null;
elsif (nr_seq_episodio_w IS NOT NULL AND nr_seq_episodio_w::text <> '') then
	select	min(nr_atendimento)
	into STRICT	nr_atendimento_w
	from	atendimento_paciente a
	where	a.nr_seq_episodio = nr_seq_episodio_w;
end if;

if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
	/*Pessoa */

	begin
	select 	a.cd_pessoa_responsavel,
			CASE WHEN a.ie_responsavel=4 THEN 'FTH' WHEN a.ie_responsavel=5 THEN 'MTH' WHEN a.ie_responsavel=11 THEN 'AUNT' WHEN a.ie_responsavel=10 THEN 'UNCLE' WHEN a.ie_responsavel=7 THEN CASE WHEN ie_sexo='M' THEN 'SON' WHEN ie_sexo='F' THEN 'DAU' END  WHEN a.ie_responsavel=21 THEN CASE WHEN ie_sexo='M' THEN 'BRO' WHEN ie_sexo='F' THEN 'SIS' END  WHEN a.ie_responsavel=8 THEN 'GRPRN' WHEN a.ie_responsavel=9 THEN 'GRPRN' WHEN a.ie_responsavel=24 THEN 'GRNDCHILD' WHEN a.ie_responsavel=6 THEN CASE WHEN ie_sexo='M' THEN 'HUSB' WHEN ie_sexo='F' THEN 'WIFE' END				 END  ie_grau_parentesco /*id_52 and id_53 */
,
			z.ds_given_name nm_primeiro_nome_resp, /* id_70 */
			z.ds_family_name nm_sobrenome_pai_resp, /* id_71 */
			coalesce(z.ds_component_name_1, 'SIN INFORMACION') nm_sobrenome_mae_resp, /* id_72 */
			obter_nom_rc_telefone(a.cd_pessoa_fisica, null, null) nr_telefone, /* id_68 */
			obter_compl_pf(b.cd_pessoa_fisica,1,'M') ds_email /* id_69 */
	into STRICT	cd_pessoa_fisica_resp_w,
			ie_grau_parentesco_w,
			nm_primeiro_nome_resp_w,
			nm_sobrenome_pai_resp_w,
			nm_sobrenome_mae_resp_w,
			nr_telefone_w,
			ds_email_w
	FROM atendimento_paciente a, pessoa_fisica b
LEFT OUTER JOIN person_name z ON (b.nr_seq_person_name = z.nr_sequencia AND 'main' = z.ds_type)
WHERE a.cd_pessoa_responsavel = b.cd_pessoa_fisica   and a.nr_atendimento	= nr_atendimento_w;
	exception
		when no_data_found then
		null;
	end;

	if (cd_pessoa_fisica_resp_w IS NOT NULL AND cd_pessoa_fisica_resp_w::text <> '') then
		/* Endere√ßo */

		begin
		select	nr_seq_pessoa_endereco,	
				get_complete_address_desc(a.nr_seq_pessoa_endereco,null,null,null,null,'Y') ds_endereco_completo, /* id_54 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'TIPO_LOGRAD','C') cd_tipo_vialidade, /* id_55 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'RUA_VIALIDADE','D') ds_rua_vialidade, /* id_56 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'NUMERO','D') nr_numero_externo,	/* id_57 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'COMPLEMENTO','D') nr_numero_interno, /* id_60 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'TIPO_BAIRRO','C') cd_tipo_asentamento, /* id_61 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'BAIRRO_VILA','D') nm_assentamento, /* id_62 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'LOCALIDADE_AREA','C') cd_localidade, /* id_63 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'MUNICIPIO','C') cd_municipio, /* id_64 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'ESTADO_PROVINCI','C') cd_entidade, /* id_65 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'CODIGO_POSTAL','D') cd_postal,  /* id_66 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'PAIS','C') cd_pais, /* id_67 */
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'NUM_EXT_ALFA','D') nr_domicilio_ext_alfa,
				get_info_end_endereco(nr_seq_pessoa_endereco,'NUMERO_INT','D') nr_domicilio_int 
		into STRICT	nr_seq_pessoa_endereco_w,	
				ds_endereco_completo_w,
				cd_tipo_vialidade_w,
				ds_rua_vialidade_w,
				nr_numero_externo_w,
				nr_numero_interno_w,
				cd_tipo_asentamento_w, 
				nm_assentamento_w,
				cd_localidade_w,
				cd_municipio_w,
				cd_entidade_w,
				cd_postal_w,
				cd_pais_w,
				nr_domicilio_ext_alfa_w,
				nr_domicilio_int_w
		from	compl_pessoa_fisica a
		where	a.cd_pessoa_fisica	= cd_pessoa_fisica_resp_w
		and		a.ie_tipo_complemento	= 1;
		exception
			when no_data_found then
			null;
		end;

		select	max(b.nr_seq_catalogo)
		into STRICT	nr_seq_catalogo_w
		from	end_endereco b,
				pessoa_endereco_item a
		where	b.nr_sequencia = a.nr_seq_end_endereco
		and		a.nr_seq_pessoa_endereco = nr_seq_pessoa_endereco_w;
	end if;


	insert into nom_rc_pessoa_fisica(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ie_tipo,
		ds_domicilio,
		cd_tipo_vialidade,
		nm_vialidade,
		nr_domicilio_ext,
		nr_domicilio_ext_alfa,
		nr_domicilio_int,
		nr_domicilio_int_alfa,
		cd_tipo_assentamento,
		nm_assentamento,
		cd_localidade,
		cd_municipio,
		cd_entidade_fed,
		cd_postal,
		cd_pais,
		nr_telefone,
		ds_email,
		nm_primeiro_nome,
		nm_sobrenome_1_pai,
		nm_sobrenome_2_mae,
		nr_seq_cabecalho,
		nr_seq_catalogo,
		cd_tipo_vinculo)
	values (nextval('nom_rc_pessoa_fisica_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		'RES',
		ds_endereco_completo_w,
		cd_tipo_vialidade_w,
		ds_rua_vialidade_w,
		nr_numero_externo_w,
		nr_domicilio_ext_alfa_w,
		nr_domicilio_int_w,
		nr_numero_interno_w,
		cd_tipo_asentamento_w,
		nm_assentamento_w,
		cd_localidade_w,
		cd_municipio_w,
		cd_entidade_w,
		cd_postal_w,
		cd_pais_w,
		nr_telefone_w,
		ds_email_w,
		nm_primeiro_nome_resp_w,
		nm_sobrenome_pai_resp_w,
		nm_sobrenome_mae_resp_w,
		nr_seq_cabecalho_p,
		nr_seq_catalogo_w,
		ie_grau_parentesco_w);
end if;



end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nom_rc_responsavel_pac ( nr_seq_cabecalho_p bigint, nm_usuario_p text) FROM PUBLIC;

