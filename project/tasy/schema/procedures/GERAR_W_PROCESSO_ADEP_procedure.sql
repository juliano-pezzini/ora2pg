-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_processo_adep ( cd_setor_atendimento_p text, dt_inicio_p timestamp, dt_fim_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, nr_agrupamento_filtro_p bigint) AS $body$
DECLARE

				 
 
nr_prescricao_w			bigint;
nr_atendimento_w			bigint;
cd_unidade_basica_w		varchar(10);
cd_unidade_compl_w		varchar(10);
cd_pessoa_fisica_w		varchar(10);
cd_estabelecimento_w		smallint;
cd_perfil_w			integer;
cd_setor_atendimento_w		bigint;
cd_setor_usuario_w			bigint;

dt_horario_rec_w	timestamp;
dt_horario_proc_w	timestamp;
dt_horario_glic_w	timestamp;
dt_horario_mat_w	timestamp;
dt_horario_sne_w	timestamp;
dt_horario_sol_w	timestamp;
dt_horario_die_w	timestamp;
dt_horario_gas_w	timestamp;

qt_pend_rec_w		bigint;
qt_atras_rec_w		bigint;
qt_fut_rec_w		bigint;
nr_seq_rec_w		bigint;
nr_prescr_rec_w		bigint;

qt_pend_proc_w		bigint;
qt_atras_proc_w		bigint;
qt_fut_proc_w		bigint;

qt_pend_glic_w		bigint;
qt_atras_glic_w		bigint;
qt_fut_glic_w		bigint;

qt_glic_proc_w		bigint;
qt_glic_proc_w		bigint;
qt_glic_proc_w		bigint;

qt_pend_mat_w		bigint;
qt_atras_mat_w		bigint;
qt_fut_mat_w		bigint;

qt_pend_sne_w		bigint;
qt_atras_sne_w		bigint;
qt_fut_sne_w		bigint;

qt_pend_sol_w		bigint;
qt_atras_sol_w		bigint;
qt_fut_sol_w		bigint;

qt_pend_die_w		bigint;
qt_atras_die_w		bigint;
qt_fut_die_w		bigint;

qt_pend_col_w	 	bigint;
qt_atras_col_w		bigint;
qt_fut_col_w		bigint;

qt_pend_gaso_w		bigint;
qt_atras_gaso_w		bigint;
qt_fut_gaso_w		bigint;

qt_total_pend_w		bigint := 0;	
 
 
 
/*Variáveis dos medicamentos*/
 
nr_seq_wadep_w		bigint;
nr_seq_material_w	integer;
cd_material_w		integer;
ds_material_w		varchar(255);
ie_acm_sn_w		varchar(1);
ie_medicacao_paciente_w	varchar(1);
cd_intervalo_w		varchar(7);
qt_dose_w		double precision;
nr_agrupamento_w	double precision;
ds_prescricao_w		varchar(240);
ds_dil_obs_w		varchar(2000);
ie_status_w		varchar(1);
ie_diluido_w		varchar(5);
ie_lib_pend_rep_w	varchar(1);
ie_obs_medico_w		varchar(1);
ie_horario_w		varchar(1);
ie_via_aplicacao_w	varchar(5);
cd_motivo_baixa_w	bigint;
ie_composto_w		varchar(1);
ie_alto_risco_w		varchar(1);
dt_fim_w	timestamp;	
 
 
/*Variáveis procedimentos*/
 
cd_procedimento_w	bigint;
qt_procedimento_w	double precision;
ie_associados_w		varchar(1);
nr_seq_proc_interno_w	bigint;
ie_classif_adep_w	varchar(15);

 
 
 
/*Variáveis da recomendação*/
 
cd_recomendacao_w	varchar(255);
ds_recomendacao_w	varchar(4000);
qt_recomendacao_w	double precision;
ds_intervalo_w		varchar(255);
ds_diluicao_w		varchar(2000);

/*Variáveis solucao*/
 
nr_seq_solucao_w	integer;
ds_solucao_w		varchar(255);
ie_status_solucao_w	varchar(15);
ie_suspensa_w		varchar(1);
dt_prev_prox_etapa_w	timestamp;

 
--Todos os pacientes do setor que possuem prescrições 
c00 CURSOR FOR 
SELECT	a.nr_atendimento, 
	a.cd_unidade_basica, 
	a.cd_unidade_compl, 
	obter_pessoa_atendimento(a.nr_atendimento,'C') cd_pessoa_fisica, 
	a.cd_setor_atendimento 
from	unidade_atendimento a 
where	a.cd_setor_atendimento = cd_setor_atendimento_p 
and 	coalesce(a.NR_AGRUPAMENTO,0) = coalesce(nr_agrupamento_filtro_p, coalesce(a.NR_AGRUPAMENTO,0)) 
and	(a.nr_atendimento IS NOT NULL AND a.nr_atendimento::text <> '') 

union
 
SELECT	a.nr_atendimento, 
	b.cd_unidade_basica, 
	b.cd_unidade_compl, 
	a.cd_pessoa_fisica, 
    c.cd_setor_atendimento 
from	pessoa_fisica m, 
	pessoa_fisica p, 
	setor_atendimento c, 
	atend_paciente_unidade b, 
	atendimento_paciente a, 
	unidade_atendimento f 
where	a.nr_atendimento  		= b.nr_atendimento 
and	b.nr_seq_interno    	= obter_atepacu_paciente(a.nr_atendimento, 'A') 
and	b.cd_setor_atendimento		= c.cd_setor_atendimento 
and	a.cd_pessoa_fisica			= p.cd_pessoa_fisica 
and	b.CD_SETOR_ATENDIMENTO		= f.CD_SETOR_ATENDIMENTO 
and	b.CD_UNIDADE_BASICA			= f.CD_UNIDADE_BASICA 
and b.CD_UNIDADE_COMPL			= f.CD_UNIDADE_COMPL 
and	coalesce(f.NR_AGRUPAMENTO,0) = coalesce(nr_agrupamento_filtro_p, coalesce(f.NR_AGRUPAMENTO,0)) 
and   a.cd_medico_resp        = m.cd_pessoa_fisica 
and	c.cd_classif_setor		= '1' 
and   a.cd_estabelecimento      	= cd_estabelecimento_p 
and   c.ie_situacao         	= 'A' 
and   c.ie_adep           	<> 'N' 
and c.cd_setor_atendimento = cd_setor_atendimento_p 
and	a.dt_entrada between clock_timestamp() - interval '120 days' /24 and clock_timestamp() 
and   a.dt_alta_interno        = '30/12/2999' 

union
 
select	a.nr_atendimento, 
		b.cd_unidade_basica, 
		b.cd_unidade_compl, 
		a.cd_pessoa_fisica, 
    c.cd_setor_atendimento 
FROM pessoa_fisica p, pessoa_fisica m, setor_atendimento c, atendimento_paciente a, atend_paciente_unidade b
LEFT OUTER JOIN unidade_atendimento f ON (b.cd_setor_atendimento = f.cd_setor_atendimento AND b.cd_unidade_basica = f.cd_unidade_basica AND b.cd_unidade_compl = f.cd_unidade_compl)
WHERE a.nr_atendimento  			= b.nr_atendimento and b.nr_seq_interno    	= obter_atepacu_paciente(a.nr_atendimento, 'A') and b.cd_setor_atendimento		= c.cd_setor_atendimento and a.cd_pessoa_fisica			= p.cd_pessoa_fisica    and coalesce(f.NR_AGRUPAMENTO,0) 	= coalesce(nr_agrupamento_filtro_p, coalesce(f.NR_AGRUPAMENTO,0)) and a.cd_medico_resp        = m.cd_pessoa_fisica and c.cd_classif_setor				= '2' and a.cd_estabelecimento      	= cd_estabelecimento_p and c.ie_situacao         	= 'A' and c.ie_adep           	<> 'N' and c.cd_setor_atendimento = cd_setor_atendimento_p and a.dt_entrada between clock_timestamp() - interval '120 days' /24 and clock_timestamp() and a.dt_alta_interno        = '30/12/2999';

 
/*Recomendações*/
 
c02 CURSOR FOR 
SELECT	substr(cd_recomendacao,1,200), 
	substr(ds_recomendacao,1,200), 
	ie_acm_sn,	 
	substr(cd_intervalo,1,200), 
	qt_recomendacao, 
	substr(ds_prescricao,1,200), 
	substr(ds_diluicao,1,200), 
	dt_horario 
from	( 
	SELECT	a.nr_prescricao, 
		c.nr_seq_recomendacao, 
		coalesce(to_char(x.cd_recomendacao),x.ds_recomendacao) cd_recomendacao, 
		coalesce(y.ds_tipo_recomendacao,x.ds_recomendacao) ds_recomendacao, 
		obter_se_acm_sn_rec(x.ds_horarios, x.ie_se_necessario) ie_acm_sn,		 
		x.cd_intervalo, 
		x.qt_recomendacao, 
		w.ds_prescricao ds_prescricao, 
		coalesce(x.ie_suspenso,'N') ie_suspenso, 
		(CASE WHEN coalesce(x.ie_faose::text, '') = '' THEN ''  ELSE 'FAOSE: ' END  || substr(obter_valor_dominio(3554, x.ie_faose),1,50) || ' ' || substr(x.DS_RECOMENDACAO,1,1000)) ds_diluicao, 
		c.dt_horario dt_horario 
	FROM prescr_rec_hor c, prescr_medica a, prescr_recomendacao x
LEFT OUTER JOIN intervalo_prescricao w ON (x.cd_intervalo = w.cd_intervalo)
LEFT OUTER JOIN tipo_recomendacao y ON (x.cd_recomendacao = y.cd_tipo_recomendacao)
WHERE x.nr_prescricao = c.nr_prescricao and x.nr_sequencia = c.nr_seq_recomendacao and x.nr_prescricao = a.nr_prescricao and c.nr_prescricao = a.nr_prescricao and obter_se_exibir_rep_adep_setor(cd_setor_atendimento_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S' and a.nr_atendimento = nr_atendimento_w and c.dt_horario between dt_inicio_p and dt_fim_p and coalesce(x.dt_suspensao::text, '') = '' and coalesce(c.ie_situacao,'A') = 'A' and coalesce(c.dt_fim_horario::text, '') = '' and coalesce(c.dt_suspensao::text, '') = '' and Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S' and adep_obter_regra_inclusao(	'REC', 
									cd_estabelecimento_w, 
									cd_setor_usuario_w, 
									cd_perfil_w, 
									null, 
									null, 
									null, 
									null, 
									a.cd_setor_atendimento, 
									null, 
									a.nr_prescricao, 
									null) = 'S' -- nr_seq_exame_p 
  and coalesce(c.ie_horario_especial,'N') <> 'S' group by 
		a.nr_prescricao, 
		c.nr_seq_recomendacao, 
		x.cd_recomendacao, 
		x.ds_recomendacao, 
		y.ds_tipo_recomendacao, 
		x.ds_horarios, 
		x.cd_intervalo, 
		x.qt_recomendacao, 
		w.ds_prescricao, 
		x.ie_suspenso, 
		x.ie_se_necessario, 
		CASE WHEN coalesce(x.ie_faose::text, '') = '' THEN ''  ELSE 'FAOSE: ' END  || substr(obter_valor_dominio(3554, x.ie_faose),1,50) || ' ' || substr(x.DS_RECOMENDACAO,1,1000), 
		c.dt_horario 
	) alias28 
group by 
	cd_recomendacao, 
	ds_recomendacao, 
	ie_acm_sn,	 
	cd_intervalo, 
	qt_recomendacao, 
	ds_prescricao, 
	ds_diluicao, 
	dt_horario;

/*Procedimentos*/
 
c03 CURSOR FOR 
SELECT	cd_procedimento, 
	ie_acm_sn,		 
	cd_intervalo, 
	qt_procedimento, 
	ds_prescricao, 
	null, 
	ie_associados, 
	nr_seq_proc_interno, 
	ie_classif_adep, 
	dt_horario 
from ( 
	SELECT	a.nr_prescricao, 
		c.nr_seq_procedimento, 
		c.nr_seq_procedimento||a.nr_prescricao nr_seq_proced_prescr, 
		c.cd_procedimento, 
		obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn,		 
		x.cd_intervalo, 
		x.qt_procedimento, 
		substr(adep_obter_dados_prescr_proc(a.nr_prescricao,c.nr_seq_procedimento,'QIL','S',x.ie_acm,x.ie_se_necessario),1,100) ds_prescricao, 
		coalesce(x.ie_suspenso,'N') ie_suspenso, 
		substr(obter_se_associado_dif(a.nr_prescricao,c.nr_seq_procedimento),1,1) ie_associados, 
		c.nr_seq_proc_interno, 
		'P' ie_classif_adep, 
		c.dt_horario dt_horario 
	from	procedimento y, 
		prescr_procedimento x, 
		prescr_proc_hor c, 
		prescr_medica a 
	where	y.cd_procedimento = x.cd_procedimento 
	and	y.ie_origem_proced = x.ie_origem_proced 
	and	y.cd_procedimento = c.cd_procedimento 
	and	y.ie_origem_proced = c.ie_origem_proced 
	and	x.nr_prescricao = c.nr_prescricao 
	and	x.nr_sequencia = c.nr_seq_procedimento 
	and	x.nr_prescricao = a.nr_prescricao 
	and	c.nr_prescricao = a.nr_prescricao 
	and	obter_se_exibir_rep_adep_setor(cd_setor_atendimento_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S' 
	and	a.nr_atendimento = nr_atendimento_w 
	and	c.dt_horario between dt_inicio_p and dt_fim_p 
	and	coalesce(x.nr_seq_proc_interno::text, '') = '' 
	and	coalesce(x.nr_seq_exame::text, '') = '' 
	and	coalesce(x.nr_seq_solic_sangue::text, '') = '' 
	and	coalesce(x.nr_seq_derivado::text, '') = '' 
	and	coalesce(x.nr_seq_exame_sangue::text, '') = '' 
	and	coalesce(x.dt_suspensao::text, '') = '' 
	and	coalesce(c.dt_fim_horario::text, '') = '' 
	and	coalesce(c.dt_suspensao::text, '') = '' 
	and	coalesce(c.ie_situacao,'A') = 'A' 
	and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S' 
	and	adep_obter_regra_inclusao(	'PROC', 
									cd_estabelecimento_w, 
									cd_setor_usuario_w, 
									cd_perfil_w, 
									null, 
									x.cd_procedimento, 
									x.ie_origem_proced, 
									x.nr_seq_proc_interno, 
									a.cd_setor_atendimento, 
									x.cd_setor_atendimento, 
									a.nr_prescricao, 
									x.nr_seq_exame) = 'S' -- nr_seq_exame_p 
	and	coalesce(c.ie_horario_especial,'N') <> 'S'	 
	group by 
		a.nr_prescricao, 
		c.nr_seq_procedimento, 
		c.nr_seq_procedimento||a.nr_prescricao, 
		c.cd_procedimento, 
		x.ie_acm, 
		x.ie_se_necessario,		 
		x.cd_intervalo, 
		x.qt_procedimento, 
		x.ie_suspenso, 
		x.ds_rotina, 
		c.nr_seq_proc_interno, 
		'P', 
		c.dt_horario 
	
union all
 
	select	a.nr_prescricao, 
		c.nr_seq_procedimento, 
		c.nr_seq_procedimento||a.nr_prescricao nr_seq_proced_prescr, 
		c.cd_procedimento, 
		obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn,		 
		x.cd_intervalo, 
		x.qt_procedimento, 
		substr(adep_obter_dados_prescr_proc(a.nr_prescricao,c.nr_seq_procedimento,'QIL','S',x.ie_acm,x.ie_se_necessario),1,100) ds_prescricao, 
		coalesce(x.ie_suspenso,'N') ie_suspenso, 
		substr(obter_se_associado_dif(a.nr_prescricao,c.nr_seq_procedimento),1,1) ie_associados, 
		c.nr_seq_proc_interno, 
		coalesce(w.ie_classif_adep,'P') ie_classif_adep, 
		c.dt_horario dt_horario 
	from	procedimento y, 
		proc_interno w, 
		prescr_procedimento x, 
		prescr_proc_hor c, 
		prescr_medica a 
	where	y.cd_procedimento = x.cd_procedimento 
	and	y.ie_origem_proced = x.ie_origem_proced 
	and	y.cd_procedimento = c.cd_procedimento 
	and	y.ie_origem_proced = c.ie_origem_proced		 
	and	w.nr_sequencia = x.nr_seq_proc_interno 
	and	w.nr_sequencia = c.nr_seq_proc_interno 
	and	x.nr_prescricao = c.nr_prescricao 
	and	x.nr_sequencia = c.nr_seq_procedimento 
	and	x.nr_prescricao = a.nr_prescricao 
	and	c.nr_prescricao = a.nr_prescricao 
	and	obter_se_exibir_rep_adep_setor(cd_setor_atendimento_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S' 
	and	a.nr_atendimento = nr_atendimento_w 
	and	c.dt_horario between dt_inicio_p and dt_fim_p 
	and	w.ie_tipo <> 'G' 
	and	w.ie_tipo <> 'BS' 
	and	coalesce(w.ie_ivc,'N') <> 'S' 
	and	coalesce(w.ie_ctrl_glic,'NC') = 'NC' 
	and	(x.nr_seq_proc_interno IS NOT NULL AND x.nr_seq_proc_interno::text <> '') 
	and	coalesce(x.nr_seq_prot_glic::text, '') = '' 
	and	coalesce(x.nr_seq_exame::text, '') = '' 
	and	coalesce(x.nr_seq_solic_sangue::text, '') = '' 
	and	coalesce(x.nr_seq_derivado::text, '') = '' 
	and	coalesce(x.nr_seq_exame_sangue::text, '') = '' 
	and	coalesce(x.dt_suspensao::text, '') = '' 
	and	coalesce(c.dt_fim_horario::text, '') = '' 
	and	coalesce(c.dt_suspensao::text, '') = '' 
	and	coalesce(c.ie_situacao,'A') = 'A' 
	and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S' 
	and	adep_obter_regra_inclusao(	'PROC', 
									cd_estabelecimento_w, 
									cd_setor_usuario_w, 
									cd_perfil_w, 
									null, 
									x.cd_procedimento, 
									x.ie_origem_proced, 
									x.nr_seq_proc_interno, 
									a.cd_setor_atendimento, 
									x.cd_setor_atendimento, 
									a.nr_prescricao, 
									x.nr_seq_exame) = 'S' -- nr_seq_exame_p 
	and	coalesce(c.ie_horario_especial,'N') <> 'S' 
	group by 
		a.nr_prescricao, 
		c.nr_seq_procedimento, 
		c.nr_seq_procedimento||a.nr_prescricao, 
		c.cd_procedimento, 
		w.ds_proc_exame, 
		x.ie_acm, 
		x.ie_se_necessario,		 
		x.cd_intervalo, 
		x.qt_procedimento, 
		x.ie_suspenso, 
		x.ds_rotina, 
		c.nr_seq_proc_interno, 
		w.ie_classif_adep, 
		c.dt_horario 
	) alias44 
group by 
	cd_procedimento, 
	ie_acm_sn,	 
	cd_intervalo, 
	qt_procedimento, 
	ds_prescricao, 
	null, 
	ie_associados, 
	nr_seq_proc_interno, 
	ie_classif_adep, 
	dt_horario;

/*Controle glicemia*/
 
c31 CURSOR FOR 
SELECT	a.dt_horario 
from	prescr_medica c, 
	prescr_proc_hor a, 
	prescr_procedimento b, 
	pep_protocolo_glicemia d 
where	a.nr_prescricao 	= b.nr_prescricao 
and	a.nr_seq_procedimento	= b.nr_sequencia 
and	a.nr_prescricao 	= c.nr_prescricao 
and	d.nr_sequencia		= b.nr_seq_prot_glic 
and	d.ie_tipo		= 'C' 
and	c.nr_atendimento	= nr_atendimento_w 
and	coalesce(b.nr_seq_origem::text, '') = '' 
and	c.ie_adep 		= 'S' 
and	Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S' 
and	adep_obter_regra_inclusao(	'CCG', 
								cd_estabelecimento_w, 
								cd_setor_usuario_w, 
								cd_perfil_w, 
								null, 
								b.cd_procedimento, 
								b.ie_origem_proced, 
								b.nr_seq_proc_interno, 
								c.cd_setor_atendimento, 
								b.cd_setor_atendimento, 
								c.nr_prescricao, 
								b.nr_seq_exame) = 'S' -- nr_seq_exame_p 
and	a.dt_horario between dt_inicio_p and dt_fim_p 
and	Obter_se_exibe_proced(b.nr_prescricao,b.nr_sequencia,b.ie_tipo_proced,'O') = 'S' 
and	coalesce(a.ie_horario_especial,'N') <> 'S' 
and	(b.nr_seq_prot_glic IS NOT NULL AND b.nr_seq_prot_glic::text <> '') 
and	coalesce(a.dt_suspensao::text, '') = '' 
and	coalesce(a.dt_fim_horario::text, '') = '';

/*Medicamentos*/
 
c04 CURSOR FOR 
SELECT	cd_material, 
	ds_material, 
	ie_acm_sn, 
	cd_intervalo, 
	qt_dose, 
	nr_agrupamento, 
	ds_prescricao, 
	ie_via_aplicacao, 
	ie_medicacao_paciente, 
	ie_diluido, 
	ie_composto, 
	ie_alto_risco, 
	dt_horario 
from ( 
	SELECT	a.nr_prescricao, 
		c.nr_seq_material, 
		c.cd_material, 
		y.ds_material, 
		obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn, 
		x.cd_intervalo, 
		x.qt_dose, 
		CASE WHEN obter_se_agrupa_composto(a.nr_prescricao,c.nr_seq_material,x.nr_agrupamento,c.cd_material)='S' THEN x.nr_agrupamento  ELSE 0 END  nr_agrupamento, 
		substr(adep_obter_um_dosagem_prescr(a.nr_prescricao,c.nr_seq_material,x.ie_acm,x.ie_se_necessario),1,100) ds_prescricao, 
		CASE WHEN obter_se_acm_sn(x.ie_acm,x.ie_se_necessario)='S' THEN substr(adep_obter_inf_dil_obs(a.nr_prescricao,c.nr_seq_material),1,2000)  ELSE null END  ds_dil_obs, 
		coalesce(x.ie_suspenso,'N') ie_suspenso, 
		x.ie_via_aplicacao, 
		x.ie_medicacao_paciente, 
		substr(obter_se_material_diluido(x.nr_prescricao, x.nr_sequencia),1,5) ie_diluido, 
		CASE WHEN coalesce(trim(both x.ds_observacao)::text, '') = '' THEN ''  ELSE 'S' END  ie_obs_medico, 
		VIPE_obter_se_medic_composto(a.nr_prescricao, x.nr_sequencia, x.nr_agrupamento, 'A') ie_composto, 
		y.ie_alto_risco, 
		c.dt_horario dt_horario 
	from	material y, 
		prescr_material x, 
		prescr_mat_hor c, 
		prescr_medica a 
	where	y.cd_material = x.cd_material 
	and	x.nr_prescricao = c.nr_prescricao 
	and	x.nr_sequencia = c.nr_seq_material 
	and	x.nr_prescricao = a.nr_prescricao 
	and	c.nr_prescricao = a.nr_prescricao 
	and	obter_se_exibir_rep_adep_setor(cd_setor_atendimento_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S' 
	and	a.nr_atendimento = nr_atendimento_w 
	and	c.dt_horario between dt_inicio_p and dt_fim_p 
	and	x.ie_agrupador = 1 
	and	obter_se_gerar_item_adep('M',a.nr_prescricao,c.nr_seq_material,x.nr_agrupamento,'N') = 'S' 
	and	coalesce(c.ie_situacao,'A') = 'A' 
	and	coalesce(c.ie_adep,'S') = 'S' 
	and	c.ie_agrupador = 1 
	and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S' 
	and	adep_obter_regra_inclusao(	'MED', 
									cd_estabelecimento_w, 
									cd_setor_usuario_w, 
									cd_perfil_w, 
									x.cd_material, 
									null, 
									null, 
									null, 
									a.cd_setor_atendimento, 
									null, 
									a.nr_prescricao, 
									null) = 'S' -- nr_seq_exame_p 
	and	coalesce(c.ie_horario_especial,'N') <> 'S' 
	and	x.ie_origem_inf <> 'K' 
	and	coalesce(x.nr_seq_kit::text, '') = '' 
	and	coalesce(c.dt_fim_horario::text, '') = '' 
	and	coalesce(c.dt_suspensao::text, '') = '' 
	group by 
		a.nr_prescricao, 
		c.nr_seq_material, 
		c.cd_material, 
		y.ds_material, 
		x.ie_acm, 
		x.ie_se_necessario, 
		x.cd_intervalo, 
		x.qt_dose, 
		x.nr_agrupamento, 
		x.ie_suspenso, 
		x.ie_via_aplicacao, 
		x.ie_medicacao_paciente, 
		substr(obter_se_material_diluido(x.nr_prescricao, x.nr_sequencia),1,5), 
		CASE WHEN coalesce(trim(both x.ds_observacao)::text, '') = '' THEN ''  ELSE 'S' END , 
		VIPE_obter_se_medic_composto(a.nr_prescricao, x.nr_sequencia, x.nr_agrupamento, 'A'), 
		y.ie_alto_risco, 
		c.dt_horario 
	) alias29 
group by 
	cd_material, 
	ds_material, 
	ie_acm_sn, 
	cd_intervalo, 
	qt_dose, 
	nr_agrupamento, 
	ds_prescricao, 
	ie_via_aplicacao, 
	ie_medicacao_paciente, 
	ie_diluido, 
	ie_composto, 
	ie_alto_risco, 
	dt_horario;
	
	 
/*Procedimentos Laboratoriais*/
 
C10 CURSOR FOR 
SELECT	cd_procedimento, 
	ie_acm_sn,		 
	cd_intervalo, 
	qt_procedimento, 
	ds_prescricao, 
	null, 
	ie_associados, 
	nr_seq_proc_interno, 
	ie_classif_adep, 
	dt_horario 
from ( 
	SELECT	a.nr_prescricao, 
		c.nr_seq_procedimento, 
		c.nr_seq_procedimento||a.nr_prescricao nr_seq_proced_prescr, 
		c.cd_procedimento, 
		obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn,		 
		x.cd_intervalo, 
		x.qt_procedimento, 
		substr(adep_obter_dados_prescr_proc(a.nr_prescricao,c.nr_seq_procedimento,'QIL','S',x.ie_acm,x.ie_se_necessario),1,100) ds_prescricao, 
		coalesce(x.ie_suspenso,'N') ie_suspenso, 
		substr(obter_se_associado_dif(a.nr_prescricao,c.nr_seq_procedimento),1,1) ie_associados, 
		c.nr_seq_proc_interno, 
		'P' ie_classif_adep, 
		c.dt_horario dt_horario 
	from	procedimento y, 
		prescr_procedimento x, 
		prescr_proc_hor c, 
		prescr_medica a 
	where	y.cd_procedimento = x.cd_procedimento 
	and	y.ie_origem_proced = x.ie_origem_proced 
	and	y.cd_procedimento = c.cd_procedimento 
	and	y.ie_origem_proced = c.ie_origem_proced 
	and	x.nr_prescricao = c.nr_prescricao 
	and	x.nr_sequencia = c.nr_seq_procedimento 
	and	x.nr_prescricao = a.nr_prescricao 
	and	c.nr_prescricao = a.nr_prescricao 
	and	obter_se_exibir_rep_adep_setor(cd_setor_atendimento_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S' 
	and	a.nr_atendimento = nr_atendimento_w 
	and	c.dt_horario between dt_inicio_p and dt_fim_p 
	and	coalesce(x.nr_seq_proc_interno::text, '') = '' 
	and	(x.nr_seq_exame IS NOT NULL AND x.nr_seq_exame::text <> '') 
	and	coalesce(x.nr_seq_solic_sangue::text, '') = '' 
	and	coalesce(x.nr_seq_derivado::text, '') = '' 
	and	coalesce(x.nr_seq_exame_sangue::text, '') = '' 
	and	coalesce(x.dt_suspensao::text, '') = '' 
	and	coalesce(c.dt_fim_horario::text, '') = '' 
	and	coalesce(c.dt_suspensao::text, '') = '' 
	and	coalesce(c.ie_situacao,'A') = 'A' 
	and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S' 
	and	adep_obter_regra_inclusao(	'LAB', 
									cd_estabelecimento_w, 
									cd_setor_usuario_w, 
									cd_perfil_w, 
									null, 
									x.cd_procedimento, 
									x.ie_origem_proced, 
									x.nr_seq_proc_interno, 
									a.cd_setor_atendimento, 
									x.cd_setor_atendimento, 
									a.nr_prescricao, 
									x.nr_seq_exame) = 'S' -- nr_seq_exame_p 
	and	coalesce(c.ie_horario_especial,'N') <> 'S'	 
	group by 
		a.nr_prescricao, 
		c.nr_seq_procedimento, 
		c.nr_seq_procedimento||a.nr_prescricao, 
		c.cd_procedimento, 
		x.ie_acm, 
		x.ie_se_necessario,		 
		x.cd_intervalo, 
		x.qt_procedimento, 
		x.ie_suspenso, 
		x.ds_rotina, 
		c.nr_seq_proc_interno, 
		'P', 
		c.dt_horario 
	
union all
 
	select	a.nr_prescricao, 
		c.nr_seq_procedimento, 
		c.nr_seq_procedimento||a.nr_prescricao nr_seq_proced_prescr, 
		c.cd_procedimento, 
		obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn,		 
		x.cd_intervalo, 
		x.qt_procedimento, 
		substr(adep_obter_dados_prescr_proc(a.nr_prescricao,c.nr_seq_procedimento,'QIL','S',x.ie_acm,x.ie_se_necessario),1,100) ds_prescricao, 
		coalesce(x.ie_suspenso,'N') ie_suspenso, 
		substr(obter_se_associado_dif(a.nr_prescricao,c.nr_seq_procedimento),1,1) ie_associados, 
		c.nr_seq_proc_interno, 
		coalesce(w.ie_classif_adep,'P') ie_classif_adep, 
		c.dt_horario dt_horario 
	from	procedimento y, 
		proc_interno w, 
		prescr_procedimento x, 
		prescr_proc_hor c, 
		prescr_medica a 
	where	y.cd_procedimento = x.cd_procedimento 
	and	y.ie_origem_proced = x.ie_origem_proced 
	and	y.cd_procedimento = c.cd_procedimento 
	and	y.ie_origem_proced = c.ie_origem_proced		 
	and	w.nr_sequencia = x.nr_seq_proc_interno 
	and	w.nr_sequencia = c.nr_seq_proc_interno 
	and	x.nr_prescricao = c.nr_prescricao 
	and	x.nr_sequencia = c.nr_seq_procedimento 
	and	x.nr_prescricao = a.nr_prescricao 
	and	c.nr_prescricao = a.nr_prescricao 
	and	obter_se_exibir_rep_adep_setor(cd_setor_atendimento_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S' 
	and	a.nr_atendimento = nr_atendimento_w 
	and	c.dt_horario between dt_inicio_p and dt_fim_p 
	and	w.ie_tipo <> 'G' 
	and	w.ie_tipo <> 'BS' 
	and	coalesce(w.ie_ivc,'N') <> 'S' 
	and	coalesce(w.ie_ctrl_glic,'NC') = 'NC' 
	and	coalesce(x.nr_seq_prot_glic::text, '') = '' 
	and	(x.nr_seq_proc_interno IS NOT NULL AND x.nr_seq_proc_interno::text <> '') 
	and	(x.nr_seq_exame IS NOT NULL AND x.nr_seq_exame::text <> '') 
	and	coalesce(x.nr_seq_solic_sangue::text, '') = '' 
	and	coalesce(x.nr_seq_derivado::text, '') = '' 
	and	coalesce(x.nr_seq_exame_sangue::text, '') = '' 
	and	coalesce(x.dt_suspensao::text, '') = '' 
	and	coalesce(c.dt_fim_horario::text, '') = '' 
	and	coalesce(c.dt_suspensao::text, '') = '' 
	and	coalesce(c.ie_situacao,'A') = 'A' 
	and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S' 
	and	adep_obter_regra_inclusao(	'LAB', 
									cd_estabelecimento_w, 
									cd_setor_usuario_w, 
									cd_perfil_w, 
									null, 
									x.cd_procedimento, 
									x.ie_origem_proced, 
									x.nr_seq_proc_interno, 
									a.cd_setor_atendimento, 
									x.cd_setor_atendimento, 
									a.nr_prescricao, 
									x.nr_seq_exame) = 'S' -- nr_seq_exame_p 
	and	coalesce(c.ie_horario_especial,'N') <> 'S' 
	group by 
		a.nr_prescricao, 
		c.nr_seq_procedimento, 
		c.nr_seq_procedimento||a.nr_prescricao, 
		c.cd_procedimento, 
		w.ds_proc_exame, 
		x.ie_acm, 
		x.ie_se_necessario,		 
		x.cd_intervalo, 
		x.qt_procedimento, 
		x.ie_suspenso, 
		x.ds_rotina, 
		c.nr_seq_proc_interno, 
		w.ie_classif_adep, 
		c.dt_horario 
	) alias44 
group by 
	cd_procedimento, 
	ie_acm_sn,	 
	cd_intervalo, 
	qt_procedimento, 
	ds_prescricao, 
	null, 
	ie_associados, 
	nr_seq_proc_interno, 
	ie_classif_adep, 
	dt_horario;
	
 
/*SNE*/
 
c41 CURSOR FOR 
SELECT	x.dt_status 
from	prescr_mat_hor c, 
	prescr_material x, 
	prescr_medica a 
where	x.nr_prescricao = a.nr_prescricao 
and	x.nr_prescricao = c.nr_prescricao 
and	x.nr_sequencia = c.nr_seq_material 
and	x.nr_prescricao = a.nr_prescricao	 
and	obter_se_exibir_rep_adep_setor(cd_setor_atendimento_w,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S' 
and	a.nr_atendimento = nr_atendimento_w 
and	x.ie_agrupador in (8,12) 
and	x.dt_status between dt_inicio_p and dt_fim_p 
and	obter_status_hor_medic(c.dt_fim_horario,c.dt_suspensao,c.ie_dose_especial,c.nr_seq_processo,c.nr_seq_area_prep) <> 'A' 
and	adep_obter_regra_inclusao(	'SNE', 
								cd_estabelecimento_w, 
								cd_setor_usuario_w, 
								cd_perfil_w, 
								null, 
								null, 
								null, 
								null, 
								a.cd_setor_atendimento, 
								null, 
								a.nr_prescricao, 
								null) = 'S' -- nr_seq_exame_p 
and	coalesce(x.dt_suspensao::text, '') = '' 
and	coalesce(c.dt_suspensao::text, '') = '' 
and	coalesce(x.nr_seq_kit::text, '') = '' 
and	coalesce(c.ie_horario_especial,'N') <> 'S' 
and	x.ie_origem_inf <> 'K';
--group by 
--	x.dt_status; 
 
 
 
/*Soluções*/
c42 CURSOR FOR 
SELECT	nr_prescricao, 
	nr_seq_solucao, 
	ds_solucao, 
	ie_acm_sn,	 
	ds_prescricao, 
	ie_status_solucao, 
	null, 
	dt_prev_prox_etapa, 
	dt_horario 
from ( 
	SELECT	a.nr_prescricao, 
		x.nr_seq_solucao, 
		substr(coalesce(x.ds_solucao,obter_prim_comp_sol(a.nr_prescricao,x.nr_seq_solucao)),1,240) ds_solucao, 
		obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn, 
		substr(obter_desc_vol_etapa_adep2(a.nr_prescricao,x.nr_seq_solucao,x.ie_acm,x.ie_se_necessario),1,240) ds_prescricao, 
		substr(obter_status_solucao_prescr(1,a.nr_prescricao,x.nr_seq_solucao),1,3) ie_status_solucao, 
		coalesce(x.ie_suspenso,'N') ie_suspenso, 
		x.dt_prev_prox_etapa, 
		c.dt_horario dt_horario 
	from	prescr_solucao x, 
		prescr_mat_hor c, 
		prescr_medica a 
	where	x.nr_prescricao = c.nr_prescricao 
	and	x.nr_seq_solucao = c.nr_seq_solucao 
	and	x.nr_prescricao = a.nr_prescricao 
	and	obter_se_exibir_rep_adep_setor(cd_setor_atendimento_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S' 
	and	a.nr_atendimento = nr_atendimento_w 
	and	coalesce(x.nr_seq_dialise::text, '') = '' 
	and	c.dt_horario between dt_inicio_p and dt_fim_p 
	and	x.ie_status <> 'T' 
	and	coalesce(x.dt_suspensao::text, '') = '' 
	and	coalesce(c.dt_suspensao::text, '') = '' 
	and	coalesce(x.nr_seq_dialise::text, '') = '' 
	and	c.ie_agrupador = 4 
	and	coalesce(c.dt_fim_horario::text, '') = '' 
	and	coalesce(c.dt_inicio_horario::text, '') = '' 
	and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S' 
	and	adep_obter_regra_inclusao(	'SOL', 
									cd_estabelecimento_w, 
									cd_setor_usuario_w, 
									cd_perfil_w, 
									null, 
									null, 
									null, 
									null, 
									a.cd_setor_atendimento, 
									null, 
									a.nr_prescricao, 
									null) = 'S' -- nr_seq_exame_p 
	and	coalesce(c.ie_horario_especial,'N') <> 'S' 
	group by 
		a.nr_prescricao, 
		x.nr_seq_solucao, 
		x.ds_solucao, 
		x.ie_acm, 
		x.DS_ORIENTACAO, 
		x.ie_se_necessario, 
		x.ie_suspenso, 
		x.dt_prev_prox_etapa, 
		c.dt_horario 
	) alias20 
group by 
	nr_prescricao, 
	nr_seq_solucao, 
	ds_solucao, 
	ie_acm_sn,	 
	ds_prescricao, 
	ie_status_solucao, 
	null, 
	dt_prev_prox_etapa, 
	dt_horario;

/*Dietas*/
 
c05 CURSOR FOR 
SELECT	c.dt_horario 
from	prescr_dieta_hor c, 
	prescr_medica a 
where	c.nr_prescricao = a.nr_prescricao 
and	obter_se_exibir_rep_adep_setor(cd_setor_atendimento_w,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S' 
and	a.nr_atendimento = nr_atendimento_w 
and	coalesce(c.ie_situacao,'A') = 'A' 
and	c.dt_horario between dt_inicio_p and dt_fim_p 
and	coalesce(c.dt_fim_horario::text, '') = '' 
and	coalesce(c.dt_suspensao::text, '') = '' 
and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S' 
and	adep_obter_regra_inclusao(	'DO', 
								cd_estabelecimento_w, 
								cd_setor_usuario_w, 
								cd_perfil_w, 
								null, 
								null, 
								null, 
								null, 
								a.cd_setor_atendimento, 
								null, 
								a.nr_prescricao, 
								null) = 'S' 
group by 
	c.dt_horario;

/*Gasoterapia*/
 
c06 CURSOR FOR 
SELECT	c.dt_horario dt_horario 
from	prescr_gasoterapia_hor c, 
	prescr_gasoterapia x, 
	prescr_medica a 
	where		x.nr_prescricao = a.nr_prescricao 
	and		x.nr_prescricao = c.nr_prescricao 
	and		x.nr_sequencia = c.nr_seq_gasoterapia 
	and		obter_se_exibir_rep_adep_setor(cd_setor_atendimento_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S' 
	and		a.nr_atendimento = nr_atendimento_w 
	and 		adep_obter_regra_inclusao(	'OX', 
													cd_estabelecimento_w, 
													cd_setor_usuario_w, 
													cd_perfil_w, 
													null, 
													null, 
													null, 
													null, 
													a.cd_setor_Atendimento, 
													null, 
													null,			 
													null) = 'S'	 
	and		coalesce(c.dt_suspensao::text, '') = '' 
	and		coalesce(c.dt_fim_horario::text, '') = '' 
	and		c.dt_horario between dt_inicio_p and dt_fim_p	 
group by c.dt_horario;

c07 CURSOR FOR 
SELECT	coalesce(x.dt_prev_execucao, a.dt_inicio_prescr) dt_horario 
from	prescr_gasoterapia x, 
	prescr_medica a 
where	x.nr_prescricao = a.nr_prescricao 
and	obter_se_exibir_rep_adep_setor(cd_setor_atendimento_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S' 
and	a.nr_atendimento = nr_atendimento_w 
and 	coalesce(x.dt_prev_execucao, a.dt_inicio_prescr) between dt_inicio_p and dt_fim_p 
and 	adep_obter_regra_inclusao(	'OX', 
											cd_estabelecimento_w, 
											cd_setor_usuario_w, 
											cd_perfil_w, 
											null, 
											null, 
											null, 
											null, 
											a.cd_setor_Atendimento, 
											null, 
											null,			 
											null) = 'S' 
and	substr(Obter_Status_Gasoterapia(x.nr_sequencia, 'C'),1,80) = 'N' 
group by coalesce(x.dt_prev_execucao, a.dt_inicio_prescr);


BEGIN 
 
delete from	w_processo_adep;
 
cd_estabelecimento_w	:=	Wheb_Usuario_pck.get_cd_estabelecimento;
cd_setor_usuario_w	:=	Wheb_Usuario_pck.get_cd_setor_atendimento;
cd_perfil_w				:=	Wheb_Usuario_pck.get_cd_perfil;
 
 
open C00;
loop 
fetch C00 into	 
	nr_atendimento_w, 
	cd_unidade_basica_w, 
	cd_unidade_compl_w, 
	cd_pessoa_fisica_w, 
	cd_setor_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on C00 */
	begin 
	 
	qt_pend_rec_w	:= 0;
	qt_atras_rec_w	:= 0;
	qt_fut_rec_w	:= 0;
	 
	qt_pend_proc_w	:= 0;
	qt_atras_proc_w	:= 0;
	qt_fut_proc_w	:= 0;
	 
	qt_pend_glic_w	:= 0;
	qt_atras_glic_w	:= 0;
	qt_fut_glic_w	:= 0;
 
	qt_pend_mat_w	:= 0;
	qt_atras_mat_w	:= 0;
	qt_fut_mat_w	:= 0;
	 
	qt_pend_sne_w	:= 0;
	qt_atras_sne_w	:= 0;
	qt_fut_sne_w	:= 0;
	 
	qt_pend_sol_w	:= 0;
	qt_atras_sol_w	:= 0;
	qt_fut_sol_w	:= 0;
	 
	qt_pend_die_w	:= 0;
	qt_atras_die_w	:= 0;
	qt_fut_die_w	:= 0;
	 
	qt_pend_col_w 	:= 0;
	qt_atras_col_w	:= 0;
	qt_fut_col_w	:= 0;
 
	qt_pend_gaso_w	 := 0;
	qt_atras_gaso_w 	:= 0;
	qt_fut_gaso_w  	:= 0;
 
	qt_total_pend_w := 0;
	 
	/*Recomendações */
 
	open C02;
	loop 
	fetch C02 into	 
		cd_recomendacao_w, 
		ds_recomendacao_w, 
		ie_acm_sn_w, 
		cd_intervalo_w, 
		qt_recomendacao_w, 
		ds_intervalo_w, 
		ds_diluicao_w, 
		dt_horario_rec_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
	 
		if (dt_horario_rec_w < clock_timestamp()) then 
			qt_atras_rec_w := qt_atras_rec_w +1;
		elsif (dt_horario_rec_w > clock_timestamp()) then 
			qt_fut_rec_w := qt_fut_rec_w +1;
		end if;
			 
		qt_pend_rec_w := qt_atras_rec_w + qt_fut_rec_w;
		end;
	end loop;
	close C02;
	 
	/*Procedimentos*/
 
	open C03;
	loop 
	fetch C03 into 
		cd_procedimento_w, 
		ie_acm_sn_w, 
		cd_intervalo_w, 
		qt_procedimento_w, 
		ds_prescricao_w, 
		ie_status_w, 
		ie_associados_w, 
		nr_seq_proc_interno_w, 
		ie_classif_adep_w, 
		dt_horario_proc_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin		 
			 
		if (dt_horario_proc_w < clock_timestamp()) then 
			qt_atras_proc_w := qt_atras_proc_w +1;
		elsif (dt_horario_proc_w > clock_timestamp()) then 
			qt_fut_proc_w := qt_fut_proc_w +1;
		end if;
			 
		qt_pend_proc_w := qt_atras_proc_w + qt_fut_proc_w;
		end;
	end loop;
	close C03;
	 
	 
		/*Procedimentos Laboratoriais*/
 
	open C10;
    loop 
	fetch C10 into 
		cd_procedimento_w, 
		ie_acm_sn_w, 
		cd_intervalo_w, 
		qt_procedimento_w, 
		ds_prescricao_w, 
		ie_status_w, 
		ie_associados_w, 
		nr_seq_proc_interno_w, 
		ie_classif_adep_w, 
		dt_horario_proc_w;
	EXIT WHEN NOT FOUND; /* apply on C10 */
		begin		 
			 
		if (dt_horario_proc_w < clock_timestamp()) then 
			qt_atras_col_w := qt_atras_col_w +1;
		elsif (dt_horario_proc_w > clock_timestamp()) then 
			qt_fut_col_w := qt_fut_col_w +1;
		end if;
			 
		qt_pend_col_w := qt_atras_col_w + qt_fut_col_w;
		end;
	end loop;
	close C10;
	 
	 
	/*Controle Glicemia*/
 
	open C31;
	loop 
	fetch C31 into	 
		dt_horario_glic_w;
	EXIT WHEN NOT FOUND; /* apply on C31 */
		begin 
							 
		if (dt_horario_glic_w < clock_timestamp()) then 
			qt_atras_glic_w := qt_atras_glic_w +1;
		elsif (dt_horario_glic_w > clock_timestamp()) then 
			qt_fut_glic_w := qt_fut_glic_w +1;
		end if;
			 
		qt_pend_glic_w := qt_atras_glic_w + qt_fut_glic_w;
		end;
	end loop;
	close C31;	
	 
	/*Medicamentos*/
 
	open C04;
	loop 
	fetch C04 into	 
		cd_material_w, 
		ds_material_w, 
		ie_acm_sn_w, 
		cd_intervalo_w, 
		qt_dose_w, 
		nr_agrupamento_w, 
		ds_prescricao_w, 
		ie_via_aplicacao_w, 
		ie_medicacao_paciente_w, 
		ie_diluido_w, 
		ie_composto_w, 
		ie_alto_risco_w, 
		dt_horario_mat_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin		 
			 
		if (dt_horario_mat_w < clock_timestamp()) then 
			qt_atras_mat_w := qt_atras_mat_w +1;
		elsif (dt_horario_mat_w > clock_timestamp()) then 
			qt_fut_mat_w := qt_fut_mat_w +1;
		end if;
			 
		qt_pend_mat_w := qt_atras_mat_w + qt_fut_mat_w;
		end;
	end loop;
	close C04;
	 
	/*Suporte Nutricional Enteral*/
 
	open C41;
	loop 
	fetch C41 into	 
		dt_horario_sne_w;
	EXIT WHEN NOT FOUND; /* apply on C41 */
		begin		 
			 
		if (dt_horario_sne_w < clock_timestamp()) then 
			qt_atras_sne_w := qt_atras_sne_w +1;
		elsif (dt_horario_sne_w > clock_timestamp()) then 
			qt_fut_sne_w := qt_fut_sne_w +1;
		end if;
			 
		qt_pend_sne_w := qt_atras_sne_w + qt_fut_sne_w;
		end;
	end loop;
	close C41;
	 
	/*Solução*/
 
	open C42;
	loop 
	fetch C42 into	 
		nr_prescricao_w, 
		nr_seq_solucao_w, 
		ds_solucao_w, 
		ie_acm_sn_w, 
		ds_prescricao_w, 
		ie_status_solucao_w, 
		ie_suspensa_w, 
		dt_prev_prox_etapa_w, 
		dt_horario_sol_w;
	EXIT WHEN NOT FOUND; /* apply on C42 */
		begin		 
			 
		if (dt_horario_sol_w < clock_timestamp()) then 
			qt_atras_sol_w := qt_atras_sol_w +1;
		elsif (dt_horario_sol_w > clock_timestamp()) then 
			qt_fut_sol_w := qt_fut_sol_w +1;
		end if;
			 
		qt_pend_sol_w := qt_atras_sol_w + qt_fut_sol_w;
		end;
	end loop;
	close C42;
	 
	/*SDietas*/
 
	open C05;
	loop 
	fetch C05 into	 
		dt_horario_die_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin		 
			 
		if (dt_horario_die_w < clock_timestamp()) then 
			qt_atras_die_w := qt_atras_die_w +1;
		elsif (dt_horario_die_w > clock_timestamp()) then 
			qt_fut_die_w := qt_fut_die_w +1;
		end if;
			 
		qt_pend_die_w := qt_atras_die_w + qt_fut_die_w;
		end;
	end loop;
	close C05;
	 
	/*Gasoterapia*/
	 
	if (obter_parametro_funcao(1113, 538, nm_usuario_p) = 'S') then	 
		begin 
		open C06;
		loop 
		fetch C06 into	 
			dt_horario_gas_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin 
			if (dt_horario_gas_w < clock_timestamp()) then 
				qt_atras_gaso_w := qt_atras_gaso_w +1;
			elsif (dt_horario_gas_w > clock_timestamp()) then 
				qt_fut_gaso_w := qt_fut_gaso_w +1;
			end if;
				 
			qt_pend_gaso_w := qt_atras_gaso_w + qt_fut_gaso_w;
			end;
		end loop;
		close C06;
		end;
	else 
		begin 
		open c07;
		loop 
		fetch C07 into	 
			dt_horario_gas_w;
		EXIT WHEN NOT FOUND; /* apply on C07 */
			begin 
			if (dt_horario_gas_w < clock_timestamp()) then 
				qt_atras_gaso_w := qt_atras_gaso_w +1;
			elsif (dt_horario_gas_w > clock_timestamp()) then 
				qt_fut_gaso_w := qt_fut_gaso_w +1;
			end if;
				 
			qt_pend_gaso_w := qt_atras_gaso_w + qt_fut_gaso_w;
			end;
		end loop;
		close C07;
		end;
	end if;	
	 
	qt_total_pend_w := qt_pend_rec_w + qt_pend_glic_w + qt_pend_proc_w + qt_pend_mat_w + qt_pend_sne_w + qt_pend_sol_w + qt_pend_die_w + qt_pend_col_w + qt_pend_gaso_w;
	 
	insert into w_processo_adep( 
		nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		cd_pessoa_fisica, 
		nr_atendimento, 
		qt_total, 
		qt_dieta_atras, 
		qt_dieta_futuro, 
		qt_sne_atras, 
		qt_sne_futuro, 
		qt_solucao_atras, 
		qt_solucao_futuro, 
		qt_medic_atras, 
		qt_medic_futuro, 
		qt_proced_atras, 
		qt_proced_futuro, 
		qt_glicemia_atras, 
		qt_glicemia_futuro, 
		qt_recomendacao_atras, 
		qt_recomendacao_futuro, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		cd_setor_atendimento, 
		cd_unidade_basica, 
		cd_unidade_compl, 
		qt_coleta_atras, 
		qt_coleta_futuro, 
		qt_gaso_atras, 
		qt_gaso_futuro) 
	values (	nextval('w_processo_adep_seq'), 
		clock_timestamp(), 
		nm_usuario_p, 
		cd_pessoa_fisica_w, 
		nr_atendimento_w, 
		qt_total_pend_w, 
		qt_atras_die_w, 
		qt_fut_die_w, 
		qt_atras_sne_w, 
		qt_fut_sne_w, 
		qt_atras_sol_w, 
		qt_fut_sol_w, 
		qt_atras_mat_w, 
		qt_fut_mat_w, 
		qt_atras_proc_w, 
		qt_fut_proc_w, 
		qt_atras_glic_w, 
		qt_fut_glic_w, 
		qt_atras_rec_w, 
		qt_fut_rec_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		cd_setor_atendimento_w, 
		cd_unidade_basica_w, 
		cd_unidade_compl_w, 
		qt_atras_col_w, 
		qt_fut_col_w, 
		qt_atras_gaso_w, 
		qt_fut_gaso_w);
		 
	commit;
	 
	end;
end loop;
close C00;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_processo_adep ( cd_setor_atendimento_p text, dt_inicio_p timestamp, dt_fim_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, nr_agrupamento_filtro_p bigint) FROM PUBLIC;

