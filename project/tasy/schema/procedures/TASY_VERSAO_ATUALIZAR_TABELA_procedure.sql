-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE lista AS (
	nm varchar(50),
	vl varchar(32764),
	vl_2 bytea);


CREATE OR REPLACE PROCEDURE tasy_versao_atualizar_tabela (nm_tabela_p text, ds_condicao_p text, nr_ordem_p bigint, ie_paralelism_p boolean default false) AS $body$
DECLARE

		
ds_virgula_w		varchar(01);
ds_comando_w		varchar(2000);
vl_retorno_w		varchar(255);
nm_atributo_w          	varchar(50);
ds_update_w		varchar(4000);
ds_update2_w		text;
ds_parametros_w		varchar(32000);
ds_restricao_w		varchar(4000);
ds_restricao_delete_w	varchar(4000);
ds_select_w		varchar(4000);
ds_delete_w		varchar(4000);
nm_owner_origem_w	varchar(15);
c001			integer;
c002			integer;
c003			integer;
teste_w			varchar(4000);

ie_exportar_w		varchar(1);
retorno_w			integer;
ds_erro_w		varchar(4000);
QT_REG_ORIG_W	bigint;
ds_date_w		varchar(100);
ds_where_w		varchar(4000);
ds_sub_atrib_w varchar(32764);
nm_fase_w       cloud_upgrade_log.nm_fase_atualizacao%type := 'TASY_VERSAO_ATUALIZAR_TABELA';
nm_paralelism_w varchar(1000);
type myArray is table of lista index by integer;

/*Contem os parametros do SQL*/

ar_parametros_w   myArray;

/*TIPOS DE COLUNAS*/

dtab_w        dbms_sql.desc_tab;
col_cnt_w     integer;
l_date_w      timestamp;
l_long_raw_w bytea;
vl_parametro_w varchar(32764);
BEGIN

	ds_comando_w	:= 'Select count(*) from TASY_VERSAO.'|| nm_tabela_p||' a ' ||ds_condicao_p;	
	qt_reg_orig_w := Obter_valor_Dinamico(ds_comando_w, qt_reg_orig_w);

	if (qt_reg_orig_w > 0) then	

		ds_virgula_w		:= '';
		ds_comando_w	:=	' SELECT	nm_atributo ' ||
					' FROM		TASY_VERSAO.tabela_atributo ' ||
					' WHERE		nm_tabela = :nm_tabela ' ||
					' AND		ie_tipo_atributo <> :ie_tipo_atributo ' ||
					' AND		((nm_atributo = '||chr(39)||'DT_ATUALIZACAO'||chr(39)||') or (ie_atualizar_versao = :ie_atualizar_versao)) ' ||
					' order by nr_sequencia_criacao';

		C003 := DBMS_SQL.OPEN_CURSOR;
		DBMS_SQL.PARSE(C003, ds_comando_w, dbms_sql.Native);
		DBMS_SQL.DEFINE_COLUMN(c003,1,nm_atributo_w,50);		
		DBMS_SQL.BIND_VARIABLE(c003,'NM_TABELA', nm_tabela_p,50);
		DBMS_SQL.BIND_VARIABLE(c003,'IE_TIPO_ATRIBUTO', 'FUNCTION',50);
		DBMS_SQL.BIND_VARIABLE(c003,'IE_ATUALIZAR_VERSAO', 'S',50);
		retorno_w := DBMS_SQL.execute(c003);

		while( DBMS_SQL.FETCH_ROWS(C003) > 0 ) loop

			DBMS_SQL.COLUMN_VALUE(C003, 1, nm_atributo_w);

			if ( obter_se_atrib_constraint(nm_tabela_p,nm_atributo_w,'PK') = 'S')  then
				ds_restricao_w		:= ds_restricao_w || ' AND ' || nm_atributo_w || ' = :' || nm_atributo_w;
				ds_update_w		:= ds_update_w || ds_virgula_w || nm_atributo_w || ' = '|| nm_atributo_w;
				ds_restricao_delete_w	:= ds_restricao_delete_w || ' AND a.' || nm_atributo_w || '= b.' || nm_atributo_w;
			else
				ds_update_w	:= ds_update_w || ds_virgula_w || nm_atributo_w || ' = :'|| nm_atributo_w;
			end if;
			ds_select_w	:= ds_select_w || ds_virgula_w || 'a.' || nm_atributo_w;
			ds_virgula_w	:= ',';

		END LOOP;

		DBMS_SQL.CLOSE_CURSOR(C003);

		if (ds_select_w IS NOT NULL AND ds_select_w::text <> '') and (ds_restricao_w IS NOT NULL AND ds_restricao_w::text <> '') then

            ds_select_w	:= 'SELECT ' || ds_select_w || ' FROM TASY_VERSAO.' ||nm_tabela_p || ' a ' || ds_condicao_p;
			--ds_select_w	:= 'SELECT ' || ds_select_w || ' FROM TASY_VERSAO.' ||nm_tabela_p || ' a ' || ds_condicao_p||' or a.nm_tabela = ''TISS_REGRA_TABELA_MAT'' ';
			C001 := DBMS_SQL.OPEN_CURSOR;
			DBMS_SQL.PARSE(C001, ds_select_w, dbms_sql.Native);
			DBMS_SQL.describe_columns(c001,col_cnt_w,dtab_w);

			FOR i IN 1..col_cnt_w LOOP
				if ( dtab_w[i].col_type = 12 ) then
						dbms_sql.define_column(c001,i,l_date_w);
					else
					if (dtab_w[i].col_type = 24) then
						dbms_sql.DEFINE_COLUMN_RAW(c001,i,l_long_raw_w,32764);
					else
						dbms_sql.define_column(c001,i,vl_parametro_w,32764);		
					end if;
					end if;
			end loop;

			Retorno_w := DBMS_SQL.execute(c001);
			ds_update_w := 	'    UPDATE TASY_VERSAO.' || nm_tabela_p  || ' SET ' || ds_update_w ||
					' WHERE	 1=1 ' || ds_restricao_w;	

			while( DBMS_SQL.FETCH_ROWS(C001) > 0 ) loop		
				for i in 1.. col_cnt_w loop
					if ( dtab_w[i].col_type = 12 ) then
						begin
						DBMS_SQL.COLUMN_VALUE(c001, i, l_date_w);
						vl_parametro_w := to_char(l_date_w,'dd/mm/yyyy hh24:mi:ss');
						exception		
						when OTHERS then
							DBMS_SQL.COLUMN_VALUE(c001, i, vl_parametro_w);		
						end;
					else
						if ( dtab_w[i].col_type = 24 ) then
							DBMS_SQL.COLUMN_VALUE_RAW(c001, i, l_long_raw_w);
						else
							dbms_sql.column_value(c001,i,vl_parametro_w);
						end if;
					end if;
					ar_parametros_w[i].nm := upper(dtab_w[i].col_name);

					if ( dtab_w[i].col_type = 24 ) then
						ar_parametros_w[i].vl_2 := l_long_raw_w;
					else
						ar_parametros_w[i].vl := vl_parametro_w;
					end if;
				END LOOP;		

				/*INICIO*/

				c002 := DBMS_SQL.OPEN_CURSOR;
				DBMS_SQL.PARSE(c002, ds_update_w, dbms_sql.Native);
				DBMS_SQL.describe_columns(c001,col_cnt_w,dtab_w);			

				ds_update2_w:= 'update '||nm_tabela_p|| ' set ';
				ds_where_w:= ' where 1 = 1 ';

				for contador_w in 1..ar_parametros_w.count loop

				if (ar_parametros_w[contador_w](.vl IS NOT NULL AND .vl::text <> '')) then

					if (dtab_w[contador_w].col_type = 12 ) then
							l_date_w := to_date(ar_parametros_w[contador_w].vl,'dd/mm/yyyy hh24:mi:ss');
							ds_date_w := 'to_date('||chr(39)||to_char(l_date_w,'dd/mm/yyyy hh24:mi:ss')||chr(39)||','||chr(39)||'dd/mm/yyyy hh24:mi:ss'||chr(39)||')';	
							ds_update2_w:= ds_update2_w||ar_parametros_w[contador_w].nm|| ' = ' || ds_date_w;
							if ( obter_se_atrib_constraint(nm_tabela_p,ar_parametros_w[contador_w].nm,'PK') = 'S')  then
								ds_where_w:= ds_where_w|| ' and '|| ar_parametros_w[contador_w].nm|| ' = ' || ds_date_w;
							end if;
					elsif (dtab_w[contador_w].col_type = 2 ) then
						ds_update2_w:= ds_update2_w||ar_parametros_w[contador_w].nm|| ' = ' || chr(39)||ar_parametros_w[contador_w].vl|| chr(39);
						if ( obter_se_atrib_constraint(nm_tabela_p,ar_parametros_w[contador_w].nm,'PK') = 'S')  then
							ds_where_w:= ds_where_w|| ' and '||ar_parametros_w[contador_w].nm|| ' = ' ||ar_parametros_w[contador_w].vl;
						end if;
					elsif (dtab_w[contador_w].col_type = 1 ) then
						ar_parametros_w[contador_w].vl:= replace(ar_parametros_w[contador_w].vl,chr(39),chr(39)||chr(39));
						ar_parametros_w[contador_w].vl:= substr(ar_parametros_w[contador_w].vl,1,length(ar_parametros_w[contador_w].vl));
                        if (position(chr(39) in ar_parametros_w[contador_w].vl) > 0) then
                            vl_parametro_w := translate(substr(ar_parametros_w[contador_w].vl,1,32764),chr(39),chr(39)||chr(39));
                        end if;

						ds_update2_w := ds_update2_w||ar_parametros_w[contador_w].nm|| ' = ' || chr(39)||ar_parametros_w[contador_w].vl||chr(39);
						if ( obter_se_atrib_constraint(nm_tabela_p,ar_parametros_w[contador_w].nm,'PK') = 'S')  then
							ds_where_w:= ds_where_w|| ' and '||ar_parametros_w[contador_w].nm|| ' = ' || chr(39)||ar_parametros_w[contador_w].vl||chr(39);
						end if;					
					end if;

				else
                    if (dtab_w[contador_w].col_type <> 24) then
                        ds_update2_w:= ds_update2_w||ar_parametros_w[contador_w].nm|| ' = null';
                    end if;
				end if;

				if (contador_w <> ar_parametros_w.count) then
						if (SUBSTR(ds_update2_w, length(ds_update2_w)-3) <> ', '||chr(10)||chr(13)) then
                            ds_update2_w:= ds_update2_w|| ', '||chr(10)||chr(13);
                        end if;
					end if;
				end loop;

				ds_update2_w:= ds_update2_w||ds_where_w;
                if (not nm_tabela_p in ('DIC_EXPRESSAO_IDIOMA','REGRA_CONDICAO')) then
                    if (ie_paralelism_p) then
                        nm_paralelism_w := '/*+PARALLEL('||nm_tabela_p||')*/';
                    end if;
                    ds_update2_w:= REPLACE(ds_update2_w,'    UPDATE TASY_VERSAO.',' UPDATE /*+PARALLEL('||nm_tabela_p||')*/ ');
                end if;

				insert into TABELA_VERSAO_OFFLINE_W(nr_sequencia, nr_ordem, ds_comando, ds_log) values (nextval('tabela_versao_offline_w_seq'),nr_ordem_p,ds_update2_w,'D');			
				commit;
                CALL insert_log_cloud(null,null, 'atualizacao', nm_fase_w||'_LOG', null, nm_fase_w);

				DBMS_SQL.CLOSE_CURSOR(c002);
				/*FIM*/

				commit;
				ds_parametros_w := '';
			end loop;
			DBMS_SQL.CLOSE_CURSOR(C001);
		end if;

		commit;

	end if;


END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tasy_versao_atualizar_tabela (nm_tabela_p text, ds_condicao_p text, nr_ordem_p bigint, ie_paralelism_p boolean default false) FROM PUBLIC;

