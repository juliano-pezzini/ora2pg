-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_obter_padrao_terap_prescr ( nr_atendimento_p bigint, cd_pessoa_fisica_p text, cd_material_p bigint, ie_via_aplicacao_p text, ie_se_necessario_p text, cd_intervalo_p text, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, cd_intervalo_out_p INOUT text, qt_dose_out_p INOUT bigint, cd_unidade_medida_out_p INOUT text, ie_bomba_infusao_out_p INOUT text, hr_prim_horario_out_p INOUT text, ie_tipo_dosagem_out_p INOUT text, ds_observacao_out_p INOUT text, qt_min_aplicacao_out_p INOUT bigint, qt_solucao_out_p INOUT bigint, ie_se_necessario_out_p INOUT text, nr_seq_mat_prescr_out_p INOUT bigint, qt_dose_atual_p bigint DEFAULT 0, qt_dose_terapeutica_out_p INOUT bigint DEFAULT NULL, qt_dose_terap_limite_out_p INOUT bigint DEFAULT NULL, nr_seq_dose_terap_out_p INOUT bigint DEFAULT NULL, qt_dose_terap_min_p INOUT bigint  DEFAULT NULL) AS $body$
DECLARE


    ie_justificativa_padrao_w  varchar(2);
    cd_unidade_basica_w        varchar(30);
    qt_idade_w                 double precision;
    qt_idade_gestacional_w     double precision;
    qt_idade_min_w             double precision;
    qt_idade_max_w             double precision;
    cd_pessoa_fisica_w         pessoa_fisica.cd_pessoa_fisica%TYPE;
    qt_peso_w                  prescr_medica.qt_peso%TYPE;
    cd_setor_atend_prescr_w    setor_atendimento.cd_setor_atendimento%TYPE;
    nr_seq_agrupamento_w       setor_atendimento.nr_seq_agrupamento%TYPE;
    cd_unidade_medida_out_w    material_prescr.cd_unidade_medida%TYPE;
    ie_via_aplic_padrao_w      material_prescr.ie_via_aplic_padrao%TYPE;
    qt_dias_solicitado_w       material_prescr.qt_dias_solicitado%TYPE;
    ie_dose_w                  material_prescr.ie_dose%TYPE;
    ds_justificativa_w         material_prescr.ds_justificativa%TYPE;
    ie_diluicao_w              material_prescr.ie_diluicao%TYPE;
    ie_se_necessario_w         material_prescr.ie_se_necessario%TYPE;
    ie_dose_nula_w             material_prescr.ie_dose_nula%TYPE;
    ie_urgencia_w              material_prescr.ie_gerar_agora%TYPE;
    ie_obedecer_limite_w       material_prescr.ie_obedecer_limite%TYPE;
    ds_mensagem_w              material_prescr.ds_mensagem%TYPE;
    ie_obriga_just_dose_w      material_prescr.ie_obriga_just_dose%TYPE;
    qt_dose_terapeutica_w      material_prescr.qt_dose_terap_limite%TYPE;
    qt_dose_terap_min_w        material_prescr.qt_dose_terap_min%TYPE;
    qt_dose_terap_limite_w     material_prescr.qt_dose_terapeutica%TYPE;
    nr_seq_dose_terap_w        material_prescr.nr_seq_dose_terap%TYPE;
    ds_horarios_w              material_prescr.ds_horarios%TYPE;
    qt_dose_ataque_w           material_prescr.qt_dose_especial%TYPE;
    ie_limpar_prim_hor_w       material_prescr.ie_limpar_prim_hor%TYPE;
    ie_fracao_dose_w           unidade_medida.ie_fracao_dose%TYPE;
    ds_observacao_w            cpoe_material.ds_observacao%TYPE;
    ie_unid_med_padrao_w       material.ie_unid_med_padrao%TYPE;
    sql_w                      varchar(200);
    qt_dose_out_w              double precision;
    cd_unidade_medida_aux_w    varchar(200) := NULL;
    ds_observacao_aux_w        cpoe_material.ds_observacao%TYPE;
    qt_dose_out_aux_w          double precision;
    ie_mostra_orient_w		   varchar(1);
    c01 CURSOR FOR
    SELECT
        qt_dose,
        substr(a.cd_intervalo, 1, 7),
        substr(a.cd_unidade_medida, 1, 30),
        a.ie_via_aplic_padrao,
        a.ie_dispositivo_infusao,
        a.qt_dias_solicitado,
        a.ie_dose,
        a.ds_justificativa,
        a.qt_solucao,
        a.ie_diluicao,
        a.hr_prim_horario,
        a.ie_se_necessario,
        obter_dados_medic_atb_var(a.cd_material, cd_estabelecimento_p, a.ie_justificativa_padrao, 'JP', NULL,
                                  NULL, NULL),
        coalesce(a.ie_dose_nula, 'N'),
        coalesce(a.ie_gerar_agora, 'N'),
        coalesce(obter_idade_param_prescr2(coalesce(a.qt_idade_min, 0), coalesce(a.qt_idade_min_mes, 0), coalesce(a.qt_idade_min_dia, 0), coalesce(a.qt_idade_max,
        0), coalesce(a.qt_idade_max_mes, 0),
                                      coalesce(a.qt_idade_max_dia, 0),
                                      'MIN'),
            0)         qt_idade_min,
        coalesce(obter_idade_param_prescr2(coalesce(a.qt_idade_min, 0), coalesce(a.qt_idade_min_mes, 0), coalesce(a.qt_idade_min_dia, 0), coalesce(a.qt_idade_max,
        0), coalesce(a.qt_idade_max_mes, 0),
                                      coalesce(a.qt_idade_max_dia, 0),
                                      'MAX'),
            9999999)   qt_idade_max,
        a.ie_obedecer_limite,
        a.ds_mensagem,
        a.ie_obriga_just_dose,
        a.qt_dose_terapeutica,
        a.qt_dose_terap_limite,
        a.qt_dose_terap_min,
        a.nr_seq_dose_terap,
        a.ds_horarios,
        a.qt_dose_especial,
        a.ds_obs_padrao,
        coalesce(a.ie_limpar_prim_hor, 'N'),
        a.ie_tipo_dosagem,
        a.nr_sequencia
    FROM
        material_prescr a
    WHERE
            a.cd_material = cd_material_p
        AND a.ie_tipo = '1'
        AND coalesce(a.cd_setor_atendimento, coalesce(cd_setor_atend_prescr_w, 0)) = coalesce(cd_setor_atend_prescr_w, 0)
        AND coalesce(a.cd_unidade_basica, coalesce(cd_unidade_basica_w, '0')) = coalesce(cd_unidade_basica_w, '0')
        AND ( ( coalesce(a.ie_via_aplicacao::text, '') = '' )
              OR ( a.ie_via_aplicacao = ie_via_aplicacao_p ) )
        AND coalesce(qt_peso_w, 1) BETWEEN coalesce(a.qt_peso_min, 0) AND coalesce(a.qt_peso_max, 999999)
        AND ( ( coalesce(nr_seq_agrupamento::text, '') = '' )
              OR ( nr_seq_agrupamento = nr_seq_agrupamento_w ) )
        AND ( ( ( coalesce(qt_ig_min::text, '') = '' )
                AND ( coalesce(qt_ig_max::text, '') = '' ) )
              OR ( ( qt_idade_gestacional_w BETWEEN coalesce(qt_ig_min, 0) AND coalesce(qt_ig_max, 9999999) )
                   AND ( qt_idade_gestacional_w < 41 ) ) )
        AND coalesce(trunc(qt_idade_w), 1) BETWEEN coalesce(obter_idade_param_prescr2(coalesce(a.qt_idade_min, 0), coalesce(a.qt_idade_min_mes, 0), coalesce(
        a.qt_idade_min_dia, 0), coalesce(a.qt_idade_max, 0), coalesce(a.qt_idade_max_mes, 0),
                                                                            coalesce(a.qt_idade_max_dia, 0),
                                                                            'MIN'),
                                                  0) AND coalesce(obter_idade_param_prescr2(coalesce(a.qt_idade_min, 0), coalesce(a.qt_idade_min_mes,
                                                  0), coalesce(a.qt_idade_min_dia, 0), coalesce(a.qt_idade_max, 0), coalesce(a.qt_idade_max_mes,
                                                  0),
                                                                                       coalesce(a.qt_idade_max_dia, 0),
                                                                                       'MAX'),
                                                             9999999)
        AND NOT EXISTS (
            SELECT
                1
            FROM
                regra_setor_mat_prescr b
            WHERE
                    a.nr_sequencia = b.nr_seq_mat_prescr
                AND b.cd_setor_excluir = cd_setor_atend_prescr_w
        )
        AND ( ( coalesce(a.ie_somente_sn, 'N') = 'N' )
              OR ( ie_se_necessario_p = 'S' ) )
        AND ( ( coalesce(a.cd_estabelecimento::text, '') = '' )
              OR ( a.cd_estabelecimento = cd_estabelecimento_p ) )
        AND ( ( coalesce(a.cd_intervalo_filtro::text, '') = '' )
              OR ( a.cd_intervalo_filtro = cd_intervalo_p ) )
        AND ( ( coalesce(cd_doenca_cid::text, '') = '' )
              OR ( obter_se_cid_atendimento(nr_atendimento_p, cd_doenca_cid) = 'S' ) )
        AND cpoe_obter_se_exibe_interv(nr_atendimento_p, cd_estabelecimento_p, a.cd_intervalo, cd_perfil_p, nm_usuario_p) = 'S'
    ORDER BY
        a.ie_somente_sn,
        coalesce(a.cd_setor_atendimento, 99999) DESC,
        a.qt_idade_min,
        a.qt_idade_max,
        coalesce(a.ie_via_aplicacao, 'zzzzzzzz') DESC,
        coalesce(a.qt_peso_min, 99999999) DESC,
        a.nr_sequencia;

    c02 CURSOR FOR
    SELECT
        cd_unidade_medida
    FROM
        unidade_medida_dose_v
    WHERE
        ie_prioridade NOT IN ( 8, 9 )
        AND cd_material = cd_material_p
        AND coalesce(ie_unidade_adm, 'S') = 'S'
        AND obter_se_unid_consumo(cd_material, 1, ie_prioridade) = 'S'
    ORDER BY
        ie_prioridade DESC;


BEGIN
    IF ( coalesce(cd_material_p::text, '') = '' ) THEN
        RETURN;
    END IF;
    cd_setor_atend_prescr_w := cpoe_obter_setor_atend_prescr(nr_atendimento_p, cd_estabelecimento_p, cd_perfil_p, nm_usuario_p);
    cd_unidade_basica_w := obter_unidade_atendimento(nr_atendimento_p, 'A', 'UB');
    IF ( coalesce(cd_pessoa_fisica_p::text, '') = '' ) THEN
        cd_pessoa_fisica_w := obter_pessoa_atendimento(nr_atendimento_p, 'C');
    ELSE
        cd_pessoa_fisica_w := cd_pessoa_fisica_p;
    END IF;

    SELECT
        MAX(obter_idade(b.dt_nascimento, coalesce(b.dt_obito, clock_timestamp()), 'DIA')),
        coalesce(MAX(obter_semana_idade_igc(clock_timestamp(), b.dt_nascimento, b.dt_nascimento_ig, b.qt_dias_ig, b.qt_semanas_ig)), 0)
    INTO STRICT
        qt_idade_w,
        qt_idade_gestacional_w
    FROM
        pessoa_fisica b
    WHERE
        b.cd_pessoa_fisica = cd_pessoa_fisica_w;

    SELECT
        MAX(nr_seq_agrupamento)
    INTO STRICT nr_seq_agrupamento_w
    FROM
        setor_atendimento
    WHERE
        cd_setor_atendimento = cd_setor_atend_prescr_w;

    BEGIN
        qt_peso_w := obter_sinal_vital(nr_atendimento_p, 'Peso');
    EXCEPTION
        WHEN OTHERS THEN
            qt_peso_w := NULL;
    END;

    OPEN c01;
    LOOP
        FETCH c01 INTO
            qt_dose_out_p,
            cd_intervalo_out_p,
            cd_unidade_medida_out_p,
            ie_via_aplic_padrao_w,
            ie_bomba_infusao_out_p,
            qt_dias_solicitado_w,
            ie_dose_w,
            ds_justificativa_w,
            qt_solucao_out_p,
            ie_diluicao_w,
            hr_prim_horario_out_p,
            ie_se_necessario_w,
            ie_justificativa_padrao_w,
            ie_dose_nula_w,
            ie_urgencia_w,
            qt_idade_min_w,
            qt_idade_max_w,
            ie_obedecer_limite_w,
            ds_mensagem_w,
            ie_obriga_just_dose_w,
            qt_dose_terapeutica_w,
            qt_dose_terap_limite_w,
            qt_dose_terap_min_w,
            nr_seq_dose_terap_w,
            ds_horarios_w,
            qt_dose_ataque_w,
            ds_observacao_w,
            ie_limpar_prim_hor_w,
            ie_tipo_dosagem_out_p,
            nr_seq_mat_prescr_out_p;

        EXIT WHEN NOT FOUND; /* apply on c01 */
-- Precisa pegar a ultima regra existente do item, regra de prioridade no order by
    END LOOP;

    CLOSE c01;

--Atencao = qt_dose_out_p nao pode ter nvl, pelo fato das prioridade das regras OS 1011864
    IF (qt_dose_out_p IS NOT NULL AND qt_dose_out_p::text <> '') THEN
        SELECT
            coalesce(MAX(ie_fracao_dose), 'N')
        INTO STRICT ie_fracao_dose_w
        FROM
            unidade_medida
        WHERE
            cd_unidade_medida = cd_unidade_medida_out_p;

--  INICIO MD 
        BEGIN
            sql_w := 'CALL OBTER_DOSE_TERAP_PRESCR_MD(:1, :2, :3, :4) INTO :qt_dose_out_W';
            EXECUTE sql_w
                USING IN ie_dose_w, IN ie_fracao_dose_w, IN qt_peso_w, IN qt_dose_out_p, OUT qt_dose_out_w;

        EXCEPTION
            WHEN OTHERS THEN
                qt_dose_out_w := NULL;
        END;

        qt_dose_out_p := qt_dose_out_w;

--FIM MD
    END IF;

    IF ( length(hr_prim_horario_out_p) = 2 ) THEN
        hr_prim_horario_out_p := hr_prim_horario_out_p || ':00';
    END IF;

    SELECT
        coalesce(MAX(ie_unid_med_padrao), 'N')
    INTO STRICT ie_unid_med_padrao_w
    FROM
        material
    WHERE
        cd_material = cd_material_p;

    IF ( coalesce(qt_dose_out_p::text, '') = '' ) THEN
        SELECT
            MAX(qt_dose_prescricao),
            MAX(cd_unidade_medida_prescr)
        INTO STRICT
            qt_dose_out_p,
            cd_unidade_medida_out_p
        FROM
            material
        WHERE
            cd_material = cd_material_p;

		-- OS 1010748 e 1002456 = Se nos cadastros acima estiver vazio/zero, e este o valor da dose que tem que ir para cpoe.
		if (coalesce(qt_dose_out_p::text, '') = '') and (coalesce(qt_dose_atual_p,0) = 0) and (ie_unid_med_padrao_w = 'N') then		
			if (coalesce(cd_unidade_medida_out_p::text, '') = '') then
				open c02;
				loop
				  fetch c02 into cd_unidade_medida_out_w;
				  EXIT WHEN NOT FOUND; /* apply on c02 */
				  begin
					cd_unidade_medida_out_w := cd_unidade_medida_out_w;
				  end;
				end loop;
				close c02;
				cd_unidade_medida_out_p := cd_unidade_medida_out_w;
			end if;
			-- Caso encontrar unidade de medida padrao, substitui dose e unidade_medida
			qt_dose_out_p	:= obter_conversao_unid_med(cd_material_p, cd_unidade_medida_out_p);
		end if;
    END IF;

    ie_se_necessario_out_p := ie_se_necessario_w;
    qt_min_aplicacao_out_p := cpoe_obter_regra_padrao(cd_material_p, cd_perfil_p, nm_usuario_p, ie_via_aplicacao_p, ie_se_necessario_out_p,
                                                     cd_estabelecimento_p,
                                                     nr_atendimento_p,
                                                     cd_pessoa_fisica_w,
                                                     cd_intervalo_out_p,
                                                     qt_dose_out_p,
                                                     cd_unidade_medida_out_p,
                                                     1);
--INICIO MD
    BEGIN

        ie_mostra_orient_w :=  obter_se_apres_orient_mat(cd_material_p, cd_pessoa_fisica_p);
        ds_observacao_aux_w := obter_orientacao_medic(cd_material_p);
        sql_w := 'begin calc_dose_padr_terap_presc_md  (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14); end;';
        EXECUTE sql_w
            USING IN ie_unid_med_padrao_w, IN ie_mostra_orient_w, IN qt_dose_terapeutica_w, IN qt_dose_terap_limite_w,
            IN nr_seq_dose_terap_w, IN ds_observacao_aux_w, OUT qt_dose_terapeutica_out_p, OUT qt_dose_terap_limite_out_p, OUT nr_seq_dose_terap_out_p,
            OUT ds_observacao_out_p, IN OUT cd_unidade_medida_out_p, IN OUT qt_dose_terap_min_p, IN OUT ds_observacao_w, IN OUT qt_min_aplicacao_out_p;

    EXCEPTION
        WHEN OTHERS THEN
            qt_dose_terapeutica_out_p := NULL;
            qt_dose_terap_limite_out_p := NULL;
            nr_seq_dose_terap_out_p := NULL;
            cd_unidade_medida_out_p := NULL;
            ds_observacao_out_p := NULL;
            qt_dose_terap_min_p := NULL;
            ds_observacao_w := NULL;
            qt_min_aplicacao_out_p := NULL;
    END;

--FIM MD
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_obter_padrao_terap_prescr ( nr_atendimento_p bigint, cd_pessoa_fisica_p text, cd_material_p bigint, ie_via_aplicacao_p text, ie_se_necessario_p text, cd_intervalo_p text, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, cd_intervalo_out_p INOUT text, qt_dose_out_p INOUT bigint, cd_unidade_medida_out_p INOUT text, ie_bomba_infusao_out_p INOUT text, hr_prim_horario_out_p INOUT text, ie_tipo_dosagem_out_p INOUT text, ds_observacao_out_p INOUT text, qt_min_aplicacao_out_p INOUT bigint, qt_solucao_out_p INOUT bigint, ie_se_necessario_out_p INOUT text, nr_seq_mat_prescr_out_p INOUT bigint, qt_dose_atual_p bigint DEFAULT 0, qt_dose_terapeutica_out_p INOUT bigint DEFAULT NULL, qt_dose_terap_limite_out_p INOUT bigint DEFAULT NULL, nr_seq_dose_terap_out_p INOUT bigint DEFAULT NULL, qt_dose_terap_min_p INOUT bigint  DEFAULT NULL) FROM PUBLIC;

