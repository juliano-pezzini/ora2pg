-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_ocor_aut_proc ( nr_seq_ocor_filtro_p bigint, nr_seq_guia_proc_p bigint, nr_seq_req_proc_p bigint, nr_seq_exec_item_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, ie_gerar_ocorrencia_p INOUT text, ie_tipo_ocorrencia_p INOUT text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
Rotina utilizada para validar os servicos definidos na regra de ocorrencia combinada
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [x ] Tasy (Delphi/Java) [  x] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao: Performance
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


/*
IE_TIPO_OCORRENCIA_W	= C - Gera a ocorrencia para o cabecalho
			= I - Gera ocorrencia para os itens
*/
qt_registro_regra_w		bigint;
ie_gerar_ocorrencia_w		varchar(2);
qt_registros_dut_rol_w		bigint;
qt_registros_pac_rol_w		bigint;
cd_especialidade_w		bigint;
cd_area_procedimento_w		bigint;
cd_grupo_proc_w			bigint;
nr_seq_grupo_rec_w		grupo_receita.nr_sequencia%type;
ie_origem_proced_w		bigint;
ie_grupo_servico_w		varchar(2);
nr_seq_proc_princ_w		pls_guia_plano_proc.nr_seq_proc_princ%type;		
ie_pacote_w			varchar(2);
nr_seq_req_proc_w		pls_execucao_req_item.nr_seq_req_proc%type;
dt_inicio_vigencia_w	timestamp;


C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_grupo_servico,
		ie_valida_pac,
		ie_valida_dut,
		ie_pacote_honorario,
		nr_seq_estrutura
	from	pls_ocor_aut_filtro_proc
	where	nr_seq_ocor_aut_filtro	= nr_seq_ocor_filtro_p
	and	ie_situacao		= 'A'
	and	((coalesce(cd_procedimento::text, '') = '')
	or (cd_procedimento	= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p))
	and	((coalesce(nr_seq_grupo_rec::text, '') = '') 	or (nr_seq_grupo_rec = nr_seq_grupo_rec_w))
	and	((coalesce(cd_area_procedimento::text, '') = '') or (cd_area_procedimento = cd_area_procedimento_w))
	and	((coalesce(cd_especialidade::text, '') = '') 	or (cd_especialidade = cd_especialidade_w))
	and	((coalesce(cd_grupo_proc::text, '') = '') 	or (cd_grupo_proc = cd_grupo_proc_w));

BEGIN
	qt_registros_pac_rol_w := 0;
	qt_registros_dut_rol_w := 0;
		
if (coalesce(cd_procedimento_p,0) <> 0) then
	SELECT * FROM pls_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w;
				
	begin
		select	nr_seq_grupo_rec
		into STRICT	nr_seq_grupo_rec_w
		from	procedimento
		where	cd_procedimento		= cd_procedimento_p
		and	ie_origem_proced	= ie_origem_proced_p;
	exception
	when others then
		nr_seq_grupo_rec_w := null;
	end;
end if;
	
	
for r_C01_w in C01 loop
	
		ie_grupo_servico_w	:= 'S';
		
		ie_gerar_ocorrencia_w	:= 'S';

		/* Valida estrutura de itens cadastrada em OPS - Glosas e Ocorrencias > Cadastros > Estruturas */

		if (r_C01_w.nr_seq_estrutura IS NOT NULL AND r_C01_w.nr_seq_estrutura::text <> '') then
			if (pls_obter_se_estrut_ocorrencia(r_C01_w.nr_seq_estrutura, cd_procedimento_p, ie_origem_proced_p, null) = 'S') then
				ie_gerar_ocorrencia_w := 'S';
			else
				ie_gerar_ocorrencia_w := 'N';
			end if;
		end if;

		if (r_C01_w.nr_seq_grupo_servico IS NOT NULL AND r_C01_w.nr_seq_grupo_servico::text <> '') then
			ie_grupo_servico_w	:= pls_se_grupo_preco_servico(r_C01_w.nr_seq_grupo_servico, cd_procedimento_p, ie_origem_proced_p);
			
			if (ie_grupo_servico_w = 'S') then
				ie_gerar_ocorrencia_w := 'S';
			else
				ie_gerar_ocorrencia_w := 'N';
			end if;
			
		end if;
		
		
		if (r_C01_w.ie_valida_dut	= 'S') or (r_C01_w.ie_valida_pac = 'S') then
			begin
				select	max(dt_inicio_vigencia)
				into STRICT	dt_inicio_vigencia_w
				from	pls_rol
				where  trunc(dt_inicio_vigencia) <= trunc(clock_timestamp());
			exception
			when others then
				dt_inicio_vigencia_w := null;
			end;
		end if;
		
		if (r_C01_w.ie_valida_dut	= 'S') and (ie_gerar_ocorrencia_w = 'S') then
			select	count(1)
			into STRICT	qt_registros_dut_rol_w
			from	pls_rol_procedimento		a,
					pls_rol_grupo_proc		b,
					pls_rol_subgrupo		c,
					pls_rol_grupo			d,
					pls_rol_capitulo		e,
					pls_rol				f
			where	f.nr_sequencia			= e.nr_seq_rol
			and		e.nr_sequencia			= d.nr_seq_capitulo
			and		d.nr_sequencia			= c.nr_seq_grupo
			and		c.nr_sequencia			= b.nr_seq_subgrupo
			and		b.nr_sequencia			= a.nr_seq_rol_grupo
			and		a.cd_procedimento		= cd_procedimento_p
			and		a.ie_origem_proced		= ie_origem_proced_p
			and		b.ie_diretriz_utilizacao	= 'S'
			and		b.ie_situacao			= 'A'
			and		c.ie_situacao			= 'A'
			and		d.ie_situacao			= 'A'
			and		e.ie_situacao			= 'A'
			and		f.dt_inicio_vigencia		= dt_inicio_vigencia_w
			and		trunc(f.dt_inicio_vigencia) <= trunc(clock_timestamp());--DUT
			
			if (qt_registros_dut_rol_w	= 0) then
				ie_gerar_ocorrencia_w 	:= 'N';
			end if;
			
		end if;
		
		if (r_C01_w.ie_valida_pac	= 'S') and (ie_gerar_ocorrencia_w = 'S') then
			select	count(1)
			into STRICT	qt_registros_pac_rol_w
			from	pls_rol_procedimento		a,
					pls_rol_grupo_proc		b,
					pls_rol_subgrupo		c,
					pls_rol_grupo			d,
					pls_rol_capitulo		e,
					pls_rol				f
			where	f.nr_sequencia			= e.nr_seq_rol
			and		e.nr_sequencia			= d.nr_seq_capitulo
			and		d.nr_sequencia			= c.nr_seq_grupo
			and		c.nr_sequencia			= b.nr_seq_subgrupo
			and		b.nr_sequencia			= a.nr_seq_rol_grupo
			and		a.cd_procedimento		= cd_procedimento_p
			and		a.ie_origem_proced		= ie_origem_proced_p
			and     b.ie_complexidade       	= 'S'
			and		b.ie_situacao			= 'A'
			and		c.ie_situacao			= 'A'
			and		d.ie_situacao			= 'A'
			and		e.ie_situacao			= 'A'		
			and		f.dt_inicio_vigencia		= dt_inicio_vigencia_w
			and		trunc(f.dt_inicio_vigencia) <= trunc(clock_timestamp());--PAC
			
			if (qt_registros_pac_rol_w	= 0) then
				ie_gerar_ocorrencia_w 	:= 'N';
			end if;
		end if;		
		
		if (r_C01_w.ie_pacote_honorario = 'S') and (ie_gerar_ocorrencia_w = 'S') then
			if (coalesce(nr_seq_guia_proc_p,0) > 0) then			
			
				select	nr_seq_proc_princ,
					CASE WHEN coalesce(nr_seq_pacote::text, '') = '' THEN 'N'  ELSE 'S' END
				into STRICT	nr_seq_proc_princ_w,
					ie_pacote_w
				from	pls_guia_plano_proc
				where	nr_sequencia = nr_seq_guia_proc_p;

				if	((ie_pacote_w = 'S') and (coalesce(nr_seq_proc_princ_w,0) = 0)) then
					ie_gerar_ocorrencia_w	:= 'S';
				else
					ie_gerar_ocorrencia_w	:= 'N';
				end if;
			elsif (coalesce(nr_seq_req_proc_p,0) > 0) then			
			
				select	nr_seq_proc_princ,
					CASE WHEN coalesce(nr_seq_pacote::text, '') = '' THEN 'N'  ELSE 'S' END
				into STRICT	nr_seq_proc_princ_w,
					ie_pacote_w
				from	pls_requisicao_proc
				where	nr_sequencia = nr_seq_req_proc_p;
					
				if	((ie_pacote_w = 'S') and (coalesce(nr_seq_proc_princ_w,0) = 0)) then
					ie_gerar_ocorrencia_w	:= 'S';
				else
					ie_gerar_ocorrencia_w	:= 'N';
				end if;
			elsif (coalesce(nr_seq_exec_item_p,0) > 0) then			
				
				select	nr_seq_req_proc
				into STRICT	nr_seq_req_proc_w
				from	pls_execucao_req_item
				where	nr_sequencia = nr_seq_exec_item_p;
				
				begin
					select	nr_seq_proc_princ,
						CASE WHEN coalesce(nr_seq_pacote::text, '') = '' THEN 'N'  ELSE 'S' END
					into STRICT	nr_seq_proc_princ_w,
						ie_pacote_w
					from	pls_requisicao_proc
					where	nr_sequencia = nr_seq_req_proc_w;
						
					if	((ie_pacote_w = 'S') and (coalesce(nr_seq_proc_princ_w,0) = 0)) then
						ie_gerar_ocorrencia_w	:= 'S';
					else
						ie_gerar_ocorrencia_w	:= 'N';
					end if;
				exception
				when others then
					ie_gerar_ocorrencia_w	:= 'N';
				end;
			end if;
		end if;
		
		if (ie_gerar_ocorrencia_w	= 'S') then
			ie_tipo_ocorrencia_p	:= 'I';
			exit;
		end if;
end loop;

ie_gerar_ocorrencia_p := ie_gerar_ocorrencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_ocor_aut_proc ( nr_seq_ocor_filtro_p bigint, nr_seq_guia_proc_p bigint, nr_seq_req_proc_p bigint, nr_seq_exec_item_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, ie_gerar_ocorrencia_p INOUT text, ie_tipo_ocorrencia_p INOUT text) FROM PUBLIC;

