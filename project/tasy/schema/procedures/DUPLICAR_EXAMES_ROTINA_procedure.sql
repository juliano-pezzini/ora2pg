-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE duplicar_exames_rotina (nm_usuario_p text, cd_perfil_origem_p bigint, cd_perfil_destino_p bigint, ie_pasta_p text) AS $body$
DECLARE


nr_seq2_w	bigint;
nr_sequencia_w	bigint;


c01 CURSOR FOR
SELECT	nr_sequencia
from	exame_lab_rotina
where	cd_perfil	= cd_perfil_origem_p;

c02 CURSOR FOR
SELECT	cd_estabelecimento,
	nr_seq_exame_rotina,
	cd_especialidade,
	ie_tipo_atendimento,
	cd_setor_atendimento,
	cd_classif_setor_pac,
	cd_perfil,
	ie_clinica,
	cd_setor_prescr,
	ie_permite
from	exame_lab_rotina_lib
where	cd_perfil = cd_perfil_origem_p;

c02_w c02%rowtype;

c03 CURSOR FOR
SELECT	nr_sequencia
from	procedimento_rotina
where	cd_perfil	= cd_perfil_origem_p;

c04 CURSOR FOR
SELECT	cd_estabelecimento,
	NR_SEQ_PROC_ROTINA,
	cd_especialidade,
	ie_tipo_atendimento,
	cd_setor_atendimento,
	cd_classif_setor_pac,
	cd_perfil,
	ie_clinica,
	cd_setor_prescr,
	ie_permite
from	procedimento_rotina_lib
where	cd_perfil = cd_perfil_origem_p;

c04_w c04%rowtype;


BEGIN
	open C01;
	loop
	fetch C01 into
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

		update	exame_lab_rotina
		set	cd_perfil	 = NULL
		where	nr_sequencia	= nr_sequencia_w;

		select	nextval('exame_lab_rotina_lib_seq')
		into STRICT	nr_seq2_w
		;

		insert into exame_lab_rotina_lib(
			nr_sequencia, cd_estabelecimento, nr_seq_exame_rotina,
			dt_atualizacao, nm_usuario, cd_perfil, dt_atualizacao_nrec, nm_usuario_nrec, ie_permite)
		values (
			nr_seq2_w, c02_w.cd_estabelecimento, nr_sequencia_w,
			clock_timestamp(), nm_usuario_p, cd_perfil_origem_p, clock_timestamp(), nm_usuario_p, 'S');

		select	nextval('exame_lab_rotina_lib_seq')
		into STRICT	nr_seq2_w
		;

		insert into exame_lab_rotina_lib(
			nr_sequencia, cd_estabelecimento, nr_seq_exame_rotina,
			dt_atualizacao, nm_usuario, cd_perfil, dt_atualizacao_nrec, nm_usuario_nrec, ie_permite)
		values (
			nr_seq2_w, c02_w.cd_estabelecimento, nr_sequencia_w,
			clock_timestamp(), nm_usuario_p, cd_perfil_destino_p, clock_timestamp(), nm_usuario_p, 'S');

	end loop;
	close C01;

	open C02;
	loop
	fetch C02 into
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		select	nextval('exame_lab_rotina_lib_seq')
		into STRICT	nr_seq2_w
		;

		insert into exame_lab_rotina_lib(
			nr_sequencia, cd_estabelecimento, nr_seq_exame_rotina,
			dt_atualizacao, nm_usuario, cd_especialidade,
			ie_tipo_atendimento, cd_setor_atendimento, cd_classif_setor_pac,
			cd_perfil, ie_clinica, cd_setor_prescr,
			dt_atualizacao_nrec, nm_usuario_nrec, ie_permite )
		values (
			nr_seq2_w, c02_w.cd_estabelecimento, c02_w.nr_seq_exame_rotina,
			clock_timestamp(), nm_usuario_p, c02_w.cd_especialidade,
			c02_w.ie_tipo_atendimento, c02_w.cd_setor_atendimento, c02_w.cd_classif_setor_pac,
			cd_perfil_destino_p, c02_w.ie_clinica, c02_w.cd_setor_prescr,
			clock_timestamp(), nm_usuario_p, c02_w.ie_permite);

	end loop;
	close C02;

	open C03;
	loop
	fetch C03 into
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */

		update	procedimento_rotina
		set	cd_perfil	 = NULL
		where	nr_sequencia	= nr_sequencia_w;

		select	nextval('procedimento_rotina_lib_seq')
		into STRICT	nr_seq2_w
		;

		insert into procedimento_rotina_lib(
			nr_sequencia, cd_estabelecimento, NR_SEQ_PROC_ROTINA,
			dt_atualizacao, nm_usuario, cd_perfil, dt_atualizacao_nrec, nm_usuario_nrec, ie_permite)
		values (
			nr_seq2_w, c02_w.cd_estabelecimento, nr_sequencia_w,
			clock_timestamp(), nm_usuario_p, cd_perfil_origem_p, clock_timestamp(), nm_usuario_p, 'S');

		select	nextval('procedimento_rotina_lib_seq')
		into STRICT	nr_seq2_w
		;

		insert into procedimento_rotina_lib(
			nr_sequencia, cd_estabelecimento, NR_SEQ_PROC_ROTINA,
			dt_atualizacao, nm_usuario, cd_perfil, dt_atualizacao_nrec, nm_usuario_nrec, ie_permite)
		values (
			nr_seq2_w, c02_w.cd_estabelecimento, nr_sequencia_w,
			clock_timestamp(), nm_usuario_p, cd_perfil_destino_p, clock_timestamp(), nm_usuario_p, 'S');

	end loop;
	close C03;

	open C04;
	loop
	fetch C04 into
		c04_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		select	nextval('procedimento_rotina_lib_seq')
		into STRICT	nr_seq2_w
		;

		insert into procedimento_rotina_lib(
			nr_sequencia, cd_estabelecimento, NR_SEQ_PROC_ROTINA,
			dt_atualizacao, nm_usuario, cd_especialidade,
			ie_tipo_atendimento, cd_setor_atendimento, cd_classif_setor_pac,
			cd_perfil, ie_clinica, cd_setor_prescr,
			dt_atualizacao_nrec, nm_usuario_nrec, ie_permite )
		values (
			nr_seq2_w, c04_w.cd_estabelecimento, c04_w.NR_SEQ_PROC_ROTINA,
			clock_timestamp(), nm_usuario_p, c04_w.cd_especialidade,
			c04_w.ie_tipo_atendimento, c04_w.cd_setor_atendimento, c04_w.cd_classif_setor_pac,
			cd_perfil_destino_p, c04_w.ie_clinica, c04_w.cd_setor_prescr,
			clock_timestamp(), nm_usuario_p, c04_w.ie_permite);

	end loop;
	close C04;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicar_exames_rotina (nm_usuario_p text, cd_perfil_origem_p bigint, cd_perfil_destino_p bigint, ie_pasta_p text) FROM PUBLIC;

