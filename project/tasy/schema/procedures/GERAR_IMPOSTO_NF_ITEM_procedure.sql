-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE itensDescV AS (itensDescV integer[999]);


CREATE OR REPLACE PROCEDURE gerar_imposto_nf_item ( nr_seq_nota_p bigint, nr_item_nf_p bigint, nm_usuario_p text, nr_seq_sit_trib_p bigint, cd_tributo_p bigint, ie_previa_p text default 'N', vl_desconto_p bigint default 0) AS $body$
DECLARE


cd_tributo_w			smallint;
pr_imposto_w			double precision;
cd_estabelecimento_w	smallint;
cd_cgc_emitente_w		varchar(14);
cd_serie_nf_w			nota_fiscal.cd_serie_nf%type;
IE_TIPO_TRIBUTACAO_w	varchar(255);
nr_nota_fiscal_w		varchar(255);
nr_sequencia_nf_w		bigint;
nr_item_nf_w			integer;
vl_total_nota_w			double precision;
vl_total_item_w			double precision;
vl_total_imposto_nota_w	double precision	:= 0;
vl_total_imposto_item_w	double precision	:= 0;
vl_minimo_tributo_w		double precision;
vl_reducao_base_w		nota_fiscal_item_trib.vl_reducao_base%type := 0;
ie_considera_desc_w		varchar(1);
vl_desconto_nf_w		double precision;
nr_item_nf_param_w		bigint;
vl_minimo_base_w		double precision;
vl_teto_base_w			double precision;
vl_desc_dependente_w	double precision;
vl_trib_anterior_w		double precision;
vl_total_base_w			double precision;
vl_reducao_w			double precision;
vl_mercadoria_w			double precision;
ie_soma_diminui_w		varchar(01);
cd_convenio_w			integer;
nr_interno_conta_w		bigint;
nr_seq_protocolo_w		bigint;
dt_emissao_w			timestamp;
VL_TRIB_NAO_RETIDO_w	double precision;
VL_BASE_NAO_RETIDO_w	double precision;
VL_TRIB_ADIC_w			double precision;
VL_BASE_ADIC_w			double precision;
vl_soma_trib_nao_retido_w	double precision;
vl_soma_base_nao_retido_w	double precision;
VL_TRIBUTO_W				double precision;
VL_MINIMO_BASE_CALCULO_W	double precision;
VL_TRIBUTO_A_RETER_W		double precision;
VL_BASE_A_RETER_W		double precision;
vl_soma_trib_adic_w		double precision;
vl_soma_base_adic_w		double precision;
vl_descontos_w			double precision;
nr_seq_item_serv_w		bigint;
qt_regra_rps_w			bigint;
cd_pessoa_fisica_w		varchar(10);
ie_acumulativo_w		varchar(10);
cd_cgc_w				varchar(14);
nr_seq_sit_trib_w		bigint;
vl_mercadoria_liq_ww	double precision;
cd_condicao_pagamento_w	bigint;
ie_forma_pagamento_w	smallint;
vl_vencimento_w			double precision;
qt_venctos_w			bigint;
qt_existe_w				bigint;
nr_ccm_w				bigint	:= null;
ie_vago_w				varchar(255);
nr_seq_regra_w			bigint;
nr_seq_lote_protocolo_w	bigint;
nr_seq_eme_fatura_w		bigint;
ie_tipo_tributo_w		varchar(15);
nr_seq_mensalidade_w	bigint;
ie_saldo_tit_rec_w		varchar(1);
ie_isento_w				tributo.ie_isento%type;
ie_retencao_w			regra_calculo_imposto.ie_retencao%type;
ie_exporta_xml_w		regra_calculo_imposto.ie_exporta_xml%type;
vl_imposto_ipi_w		double precision;
ie_tipo_tributo_ww		tributo.ie_tipo_tributo%type;
ie_base_calc_icms_w		varchar(1);
vl_unitario_item_nf_w	nota_fiscal_item.vl_unitario_item_nf%type;
qt_item_nf_w			nota_fiscal_item.qt_item_nf%type;
vl_desconto_item_w		nota_fiscal_item.vl_desconto%type;
vl_base_calculo_w		nota_fiscal_item_trib.vl_base_calculo%type;
cd_material_w			nota_fiscal_item.cd_material%type;
ie_tributa_mat_monofasico_w		tributo.ie_tributa_mat_monofasico%type;
ie_tributar_monofasico_w		varchar(1);	
vl_total_item_ww				nota_fiscal_item.vl_total_item_nf%type;
ie_incide_desc_conta_pacien_w	regra_calculo_imposto.ie_incide_desc_conta_pacien%type;
cd_darf_w						regra_calculo_imposto.cd_darf%type;
pr_desc_base_w					regra_calculo_imposto.pr_desc_base%type;
vl_liquido_item_w				nota_fiscal_item.vl_liquido%type;
desc_porc_w				double precision;
vl_desc_item_trib_w		nota_fiscal_item_trib.vl_base_calculo%type;
vl_desconto_total_w		nota_fiscal_item_trib.vl_base_calculo%type;
vl_diferenca_w			double precision;
cd_tributo_ww			nota_fiscal_item_trib.cd_tributo%type;
tx_tributo_w			nota_fiscal_item_trib.tx_tributo%type;
cd_operacao_nf_w		nota_fiscal.cd_operacao_nf%type;
cd_natureza_operacao_w	nota_fiscal.cd_natureza_operacao%type;
itensDescL_w itensDescV := itensDescV();
qtd_total_itens_w bigint := 0;

C01 CURSOR FOR
	SELECT	b.cd_tributo,
		coalesce(b.ie_isento,'N'),
		coalesce(ie_tributa_mat_monofasico,'S')
	from	tributo b
	where	b.ie_corpo_item	= 'I'
	and	b.ie_situacao	= 'A'
	and	b.ie_pf_pj in ('A',CASE WHEN coalesce(cd_pessoa_fisica_w::text, '') = '' THEN 'PJ'  ELSE 'PF' END )
	and	(((coalesce(ie_previa_p,'N') = 'N') and (not exists (	SELECT	1
				from	nota_fiscal_trib x
				where	x.nr_sequencia	= nr_seq_nota_p
				and	x.cd_tributo	= b.cd_tributo))) or
		((coalesce(ie_previa_p,'N') = 'S') and (not exists (	select	1
				from	nota_fiscal_trib_prev x
				where	x.nr_seq_nota	= nr_seq_nota_p
				and	x.cd_tributo	= b.cd_tributo))))
	and (coalesce(nr_ccm_w::text, '') = '' or coalesce(b.ie_ccm,'S') = 'S')
	and	((coalesce(ie_tipo_tributacao_w, 'X') <> '0') or (coalesce(ie_super_simples, 'S') = 'S'))
	and	((coalesce(b.ie_gera_nf_devolucao,'S') = 'S') or (coalesce(b.ie_gera_nf_devolucao,'S') = 'N' and sup_obter_se_nf_devolucao(nr_seq_nota_p) = 'N'))
	and	not exists (select	1
				from	pls_mensalidade_trib	y,					
					pls_mensalidade		z,
					nota_fiscal 		x
				where	y.cd_tributo		= b.cd_tributo
				and	z.nr_sequencia		= y.nr_seq_mensalidade
				and	z.nr_sequencia		= x.nr_seq_mensalidade
				and	x.nr_sequencia		= nr_seq_nota_p)
	order 	by b.cd_tributo;

C02 CURSOR FOR /* Impostos dos itens da nota fiscal */
	SELECT	a.pr_imposto,
		a.cd_tributo,
		b.ie_soma_diminui,
		a.vl_minimo_tributo,
		a.vl_minimo_base_calculo,
		a.nr_seq_sit_trib
	from	regra_calculo_imposto	a,
		tributo			b
	where	a.cd_tributo		= b.cd_tributo
	and	b.ie_corpo_item		= 'I'
	and	b.ie_situacao		= 'A'
	and	((coalesce(b.ie_gera_nf_devolucao,'S') = 'S') or (coalesce(b.ie_gera_nf_devolucao,'S') = 'N' and sup_obter_se_nf_devolucao(nr_seq_nota_p) = 'N'))
	and	coalesce(a.nr_seq_item_serv, coalesce(nr_seq_item_serv_w, 0))	= coalesce(nr_seq_item_serv_w, 0)		
	and	coalesce(a.ie_nota_fiscal,'N')	= 'S' /* Matheus OS 101021*/
	and (coalesce(a.cd_estabelecimento, cd_estabelecimento_w)	= cd_estabelecimento_w)
	and	coalesce(a.cd_convenio, coalesce(cd_convenio_w,0))= coalesce(cd_convenio_w,0)
	and	b.ie_pf_pj in ('A',CASE WHEN coalesce(cd_pessoa_fisica_w::text, '') = '' THEN 'PJ'  ELSE 'PF' END )
	and (coalesce(nr_ccm_w::text, '') = '' or coalesce(b.ie_ccm,'S') = 'S')
	and	a.dt_vigencia	=	(SELECT max(x.dt_vigencia)
					from	regra_calculo_imposto x
					where	x.cd_tributo		= a.cd_tributo
					and	coalesce(x.cd_convenio, coalesce(cd_convenio_w,0)) = coalesce(cd_convenio_w,0)
					and	x.dt_vigencia		<= dt_emissao_w)
	and	fim_dia(coalesce(a.dt_fim_vigencia, dt_emissao_w)) >= dt_emissao_w
	order 	by coalesce(a.cd_convenio, 0), coalesce(a.nr_seq_item_serv, 0);

c03 CURSOR FOR
	SELECT	nr_item_nf,
		vl_total_item_nf,
		vl_unitario_item_nf,
		qt_item_nf,
		vl_desconto,
		cd_material
	from	nota_fiscal_item
	where	nr_sequencia	= nr_seq_nota_p
	and	((nr_item_nf = nr_item_nf_param_w) or (nr_item_nf_param_w = 0));

C05 CURSOR FOR
	SELECT	cd_tributo,
		vl_base_calculo,
		tx_tributo
	from	nota_fiscal_item_trib
	where	nr_sequencia	= nr_seq_nota_p
	and 	nr_item_nf 	= nr_item_nf_w
	order by
		cd_tributo;


BEGIN

select 	count(*)
into STRICT 	qtd_total_itens_w
from 	nota_fiscal_item 
where 	nr_sequencia = nr_seq_nota_p;

itensDescL_w.EXTEND(qtd_total_itens_w);

if (coalesce(ie_previa_p,'N') = 'S') then
	delete from nota_fiscal_item_trib_prev
	where	nr_seq_nota = nr_seq_nota_p
	and	nr_item_nf = nr_item_nf_p;
end if;

nr_item_nf_param_w	:= coalesce(nr_item_nf_p,0);

select	cd_estabelecimento,
		vl_total_nota,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_nota_fiscal,
		nr_sequencia_nf,
		dt_emissao,
		coalesce(nr_interno_conta,0),
		coalesce(nr_seq_protocolo,0),
		coalesce(nr_seq_lote_prot,0),
		coalesce(vl_mercadoria,0),
		cd_cgc,
		cd_pessoa_fisica,
		coalesce(vl_descontos,0),
		cd_condicao_pagamento,
		coalesce(nr_seq_eme_fatura,0),
		nr_seq_mensalidade,
		cd_operacao_nf,
		cd_natureza_operacao
into STRICT	cd_estabelecimento_w,
		vl_total_nota_w,
		cd_cgc_emitente_w,
		cd_serie_nf_w,
		nr_nota_fiscal_w,
		nr_sequencia_nf_w,
		dt_emissao_w,
		nr_interno_conta_w,
		nr_seq_protocolo_w,
		nr_seq_lote_protocolo_w,
		vl_mercadoria_w,
		cd_cgc_w,
		cd_pessoa_fisica_w,
		vl_descontos_w,
		cd_condicao_pagamento_w,
		nr_seq_eme_fatura_w,
		nr_seq_mensalidade_w,
		cd_operacao_nf_w,
		cd_natureza_operacao_w
from	nota_fiscal
where	nr_sequencia = nr_seq_nota_p;

select	max(ie_tipo_tributacao)
into STRICT	ie_tipo_tributacao_w
from	pessoa_juridica
where	cd_cgc	= cd_cgc_w;

select count(*)
into STRICT	qt_regra_rps_w
from (SELECT 1
	from	nota_fiscal_item	i,
		procedimento		r
	where	i.cd_procedimento	= r.cd_procedimento
	and	i.ie_origem_proced	= r.ie_origem_proced
	and	(r.nr_seq_item_serv IS NOT NULL AND r.nr_seq_item_serv::text <> '')
	and	i.nr_sequencia = nr_seq_nota_p	
	
union all

	SELECT	1
	from	nota_fiscal_item	i,
		material_fiscal		r
	where  i.cd_material	= r.cd_material
	and    i.nr_sequencia	= nr_seq_nota_p) alias2;

if (qt_regra_rps_w > 0) then
	select max(nr_seq_item_serv)
	into STRICT	nr_seq_item_serv_w
	from (SELECT	r.nr_seq_item_serv
		from	nota_fiscal_item	i,
			procedimento		r
		where	i.cd_procedimento	= r.cd_procedimento
		and	i.ie_origem_proced	= r.ie_origem_proced
		and	(r.nr_seq_item_serv IS NOT NULL AND r.nr_seq_item_serv::text <> '')
		and	i.nr_sequencia		= nr_seq_nota_p
		
union all

		SELECT	r.nr_seq_item_serv
		from	nota_fiscal_item	i,
			material_fiscal		r
		where	i.cd_material	= r.cd_material
		and	(r.nr_seq_item_serv IS NOT NULL AND r.nr_seq_item_serv::text <> '')
		and	i.nr_sequencia	= nr_seq_nota_p) alias4;
end if;	

select	max(ie_tipo_tributacao)
into STRICT	ie_tipo_tributacao_w
from	pessoa_juridica
where	cd_cgc	= cd_cgc_w;

if (nr_interno_conta_w > 0) then
	select	max(a.cd_convenio_parametro)
	into STRICT	cd_convenio_w
	from	Atendimento_Paciente	b,
		Conta_Paciente		a
	where	a.nr_interno_conta	= nr_interno_conta_w
	  and	a.nr_atendimento	= b.nr_atendimento;
elsif (nr_seq_protocolo_w > 0) then
	select	max(cd_convenio)
	into STRICT	cd_convenio_w
	from	protocolo_convenio
	where	nr_seq_protocolo	= nr_seq_protocolo_w;
elsif (nr_seq_lote_protocolo_w > 0) then
	select	max(cd_convenio)
	into STRICT	cd_convenio_w
	from	lote_protocolo
	where	nr_sequencia = nr_seq_lote_protocolo_w;
elsif (nr_seq_eme_fatura_w > 0) then
	select	max(a.cd_convenio)
	into STRICT	cd_convenio_w
	from	eme_contrato	a,
		eme_faturamento	b
	where	a.nr_sequencia	= b.nr_seq_contrato
	and	b.nr_sequencia	= nr_seq_eme_fatura_w;
else
	select	max(cd_convenio)
	into STRICT	cd_convenio_w
	from	convenio_retorno	b,
		convenio_retorno_nf	a
	where	a.nr_seq_retorno	= b.nr_sequencia
	and	a.nr_seq_nota_fiscal	= nr_seq_nota_p;
end if;

if (coalesce(cd_convenio_w::text, '') = '') then
	select	max(a.cd_conv_integracao)
	into STRICT	cd_convenio_w
	from	nota_fiscal	a
	where	a.nr_sequencia	= nr_seq_nota_p;
end if;

select	ie_forma_pagamento 		
into STRICT	ie_forma_pagamento_w
from	condicao_pagamento
where	cd_condicao_pagamento	= cd_condicao_pagamento_w;

vl_desconto_total_w := 0;

open C01;
loop
fetch C01 into
	cd_tributo_w,
	ie_isento_w,
	ie_tributa_mat_monofasico_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	ie_incide_desc_conta_pacien_w := 'N';
		
	SELECT * FROM obter_dados_trib_tit_rec(cd_tributo_w, cd_estabelecimento_w, cd_convenio_w, dt_emissao_w, 'N', pr_imposto_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_pessoa_fisica_w, cd_cgc_w, ie_vago_w, null, nr_seq_item_serv_w, nr_seq_regra_w, cd_darf_w, nr_seq_nota_p, nr_item_nf_p, cd_operacao_nf_w, cd_natureza_operacao_w) INTO STRICT pr_imposto_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, nr_seq_regra_w, cd_darf_w;
				
	select	ie_soma_diminui
	into STRICT	ie_soma_diminui_w
	from	tributo
	where	cd_tributo	= cd_tributo_w;
	
	if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
		select	vl_minimo_tributo,
				vl_minimo_base_calculo,
				nr_seq_sit_trib,
				ie_incide_desc_conta_pacien,
				pr_desc_base
		into STRICT	vl_minimo_tributo_w,
				vl_minimo_base_calculo_w,
				nr_seq_sit_trib_w,
				ie_incide_desc_conta_pacien_w,
				pr_desc_base_w
		from	regra_calculo_imposto
		where	nr_sequencia	= nr_seq_regra_w;
	end if;

	if (pr_imposto_w > 0) or (philips_param_pck.get_cd_pais = 2 AND nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
		open C03;
		loop
		fetch c03 into
			nr_item_nf_w,
			vl_total_item_w,
			vl_unitario_item_nf_w,
			qt_item_nf_w,
			vl_desconto_item_w,
			cd_material_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			
			vl_total_item_ww := 0;	
			vl_desc_item_trib_w := 0;
			vl_reducao_base_w := 0;
			
			ie_tributar_monofasico_w := obter_param_usuario(40, 481, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_tributar_monofasico_w);
			
			if ((ie_tributar_monofasico_w = 'S') or (ie_tributa_mat_monofasico_w = 'S')) or
			   ((ie_tributar_monofasico_w = 'N') and (ie_tributa_mat_monofasico_w = 'N') and (obter_tipo_tributacao_item(cd_estabelecimento_w, cd_material_w) = 'N')) then
				vl_total_item_ww  := coalesce(vl_total_item_w,0) - coalesce(vl_desconto_item_w,0);
			end if;
			
			delete	from nota_fiscal_item_trib
			where	nr_sequencia	= nr_seq_nota_p
			and	nr_item_nf	= nr_item_nf_w
			and	cd_tributo	= cd_tributo_w;
			
			select	coalesce(max(o.ie_base_calc_icms),'N')		
			into STRICT	ie_base_calc_icms_w
			from	nota_fiscal_item i,
				natureza_operacao o	
			where	i.cd_natureza_operacao  = o.cd_natureza_operacao
			and 	i.nr_sequencia	= nr_seq_nota_p
			and	i.nr_item_nf	= nr_item_nf_w;
			
			if (ie_base_calc_icms_w = 'I') then
				
				select	coalesce(sum(vl_tributo),0)
				into STRICT	vl_imposto_ipi_w
				from 	nota_fiscal_item_trib n,
					tributo t
				where	n.cd_tributo = t.cd_tributo
				and	n.nr_sequencia	= nr_seq_nota_p
				and	n.nr_item_nf	= nr_item_nf_w
				and	t.ie_tipo_tributo = 'IPI';
				
				if (ie_tipo_tributo_ww = 'ICMS') then
					vl_total_item_ww := coalesce(vl_imposto_ipi_w,0) + vl_total_item_ww;
				end if;				
			end if;
			
			/*obter desconto do item conforme parametro de desconto*/

			if (coalesce(vl_desconto_p,0) > 0 and coalesce(vl_mercadoria_w,0) > 0 and coalesce(ie_incide_desc_conta_pacien_w,'N') = 'S') then
				
				select	coalesce(vl_liquido,0)
				into STRICT	vl_liquido_item_w
				from 	nota_fiscal_item
				where	nr_sequencia = nr_seq_nota_p
				and	nr_item_nf = nr_item_nf_w;
				
				desc_porc_w := vl_mercadoria_w / vl_liquido_item_w;
				vl_desc_item_trib_w := vl_desconto_p * desc_porc_w;
				
				/*diminuir a base do tributo do item caso tenha desconto parametrizado tributo*/

				if (vl_desc_item_trib_w > 0) then
					vl_total_item_ww := vl_total_item_ww - vl_desc_item_trib_w;
					if (coalesce(itensDescL_w(nr_item_nf_w),0) = 0) then
						itensDescL_w(nr_item_nf_w) := 1;
						vl_desconto_total_w := vl_desconto_total_w + vl_desc_item_trib_w;
					end if;				
				end if;
				
			end if;

			select	ie_tipo_tributo
			into STRICT	ie_tipo_tributo_ww
			from	tributo
			where	cd_tributo = cd_tributo_w;
			
			if (ie_tipo_tributo_ww = 'IVA')then
				vl_total_item_ww		:= ((qt_item_nf_w * vl_unitario_item_nf_w) - vl_desconto_item_w); --ALTERADO -- AQUI NO MEXICO O VALOR QUE DEVE SER GERADO COMO BASE E O VALOR SEM DESCONTO E IMPOSTO
			end if;		
			
			if (pr_desc_base_w > 0) then
				vl_reducao_base_w	:= vl_total_item_ww * (pr_desc_base_w / 100);
				vl_total_item_ww	:= vl_total_item_ww - vl_reducao_base_w;
			end if;
			
			vl_tributo_w	:= (vl_total_item_ww * pr_imposto_w) / 100;		
				
			if (vl_tributo_w >= coalesce(vl_minimo_tributo_w, 0)) and (vl_total_item_ww >= vl_minimo_base_calculo_w) then
				if (coalesce(ie_previa_p,'N') = 'N') then
					select	count(*)
					into STRICT	qt_existe_w
					from	nota_fiscal_item_trib
					where	nr_sequencia = nr_seq_nota_p
					and	nr_item_nf = nr_item_nf_w
					and	cd_tributo = cd_tributo_w;
				
					if (qt_existe_w = 0) then
						insert into nota_fiscal_item_trib(nr_sequencia,
							cd_estabelecimento,
							cd_cgc_emitente,
							cd_serie_nf,
							nr_nota_fiscal,
							nr_sequencia_nf,
							nr_item_nf,
							cd_tributo,
							vl_tributo,
							dt_atualizacao,
							nm_usuario,
							vl_base_calculo,
							tx_tributo,
							vl_reducao_base,
							vl_trib_nao_retido,
							vl_base_nao_retido,
							vl_trib_adic,
							vl_base_adic,
							ie_rateio,
							nr_seq_sit_trib,
							nr_seq_regra_trib)
						values (nr_seq_nota_p,
							cd_estabelecimento_w,
							cd_cgc_emitente_w,
							cd_serie_nf_w,
							nr_nota_fiscal_w,
							nr_sequencia_nf_w,
							nr_item_nf_w,
							cd_tributo_w,
							vl_tributo_w,
							clock_timestamp(),
							nm_usuario_p,
							vl_total_item_ww,
							pr_imposto_w,
							vl_reducao_base_w,
							0,
							0,
							0,
							0,
							'N',
							nr_seq_sit_trib_w,
							nr_seq_regra_w);

							if (ie_soma_diminui_w = 'S') then
								vl_total_imposto_item_w	:= vl_total_imposto_item_w + vl_tributo_w;
							elsif (ie_soma_diminui_w = 'D') then
								vl_total_imposto_item_w	:= vl_total_imposto_item_w - vl_tributo_w;
							end if;
					end if;
				else
					select	count(*)
					into STRICT	qt_existe_w
					from	nota_fiscal_item_trib_prev
					where	nr_seq_nota = nr_seq_nota_p
					and	nr_item_nf = nr_item_nf_w
					and	cd_tributo = cd_tributo_w;
					
					if (qt_existe_w = 0) then
						insert into nota_fiscal_item_trib_prev(nr_sequencia,
							cd_estabelecimento,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_nota,
							nr_item_nf,
							cd_tributo,
							vl_tributo,
							vl_base_calculo,
							tx_tributo,
							vl_reducao_base,
							nr_seq_regra_trib)
						values (nextval('nota_fiscal_item_trib_prev_seq'),
							cd_estabelecimento_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_nota_p,
							nr_item_nf_w,
							cd_tributo_w,
							vl_tributo_w,
							vl_total_item_ww,
							pr_imposto_w,
							vl_reducao_base_w,
							nr_seq_regra_w);
					end if;				
				end if;
			end if;
			end;
		end loop;
		close C03;
	end if;
	end;
end loop;
close C01;


/*Caso tenha diferencao de 0.1 aplicar no item de maior valor*/

if (coalesce(vl_desconto_total_w,0) > 0 and vl_desconto_p > 0) then
	
	vl_diferenca_w := vl_desconto_p - vl_desconto_total_w;
	
	
	if ((coalesce(vl_diferenca_w,0) <= 0.1) and (coalesce(vl_diferenca_w,0) > 0)) then
		
		select 	nr_item_nf
		into STRICT 	nr_item_nf_w
		from (	SELECT nr_item_nf
			from 	nota_fiscal_item
			where	nr_sequencia = nr_seq_nota_p
			order by vl_liquido desc) alias5 LIMIT 1;
		
		open C05;
		loop
		fetch c05 into
			cd_tributo_ww,
			vl_base_calculo_w,
			tx_tributo_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin
			
				update 	nota_fiscal_item_trib
				set	vl_base_calculo = vl_base_calculo_w - vl_diferenca_w,
					vl_tributo = (vl_base_calculo_w - vl_diferenca_w) * tx_tributo_w
				where	nr_sequencia	= nr_seq_nota_p
				and 	nr_item_nf = nr_item_nf_w
				and 	cd_tributo = cd_tributo_ww;
				
			end;
		end loop;
		close C05;
		
	end if;
	
end if;

CALL atualiza_total_nota_fiscal(	nr_seq_nota_p,
				nm_usuario_p);

select	count(*)
into STRICT	qt_venctos_w
from	nota_fiscal_venc
where	nr_sequencia	= nr_seq_nota_p;

if (ie_forma_pagamento_w <> 10) and (coalesce(ie_previa_p,'N') = 'N') then

	select	coalesce(vl_total_nota,0)
	into STRICT	vl_total_nota_w
	from	nota_fiscal
	where	nr_sequencia	= nr_seq_nota_p;

	select	coalesce(sum(vl_vencimento),0)
	into STRICT	vl_vencimento_w
	from	nota_fiscal_venc
	where	nr_sequencia	= nr_seq_nota_p;

	if (coalesce(vl_vencimento_w,0) <> coalesce(vl_total_nota_w,0)) then
		begin
		if (qt_venctos_w = 1) then
			update	nota_fiscal_venc
			set	vl_vencimento	= vl_vencimento + vl_total_nota_w - vl_vencimento_w
			where	nr_sequencia	= nr_seq_nota_p;
		elsif (qt_venctos_w > 1) then
			update	nota_fiscal_venc
			set	vl_vencimento	= vl_vencimento + vl_total_nota_w - vl_vencimento_w
			where	nr_sequencia	= nr_seq_nota_p
			and	dt_vencimento	= dt_emissao_w;
		end if;
		end;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_imposto_nf_item ( nr_seq_nota_p bigint, nr_item_nf_p bigint, nm_usuario_p text, nr_seq_sit_trib_p bigint, cd_tributo_p bigint, ie_previa_p text default 'N', vl_desconto_p bigint default 0) FROM PUBLIC;

