-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ident_integracao_sv_tempo () AS $body$
DECLARE

  last_notification_status_w varchar(10);
  last_notification_exists_w bigint;
  tempo_limite_w bigint;
  count_sinal_vitais_w bigint;
  date_yesterday_w timestamp := clock_timestamp() - interval '1 days';
  date_today_w timestamp := clock_timestamp();

  c1_w CURSOR FOR
  SELECT distinct a.nr_atendimento
  from atendimento_sinal_vital a,
  atendimento_paciente    b,
  atend_paciente_unidade  c,
  unidade_atendimento e
  where a.nr_atendimento = b.nr_atendimento
  and c.nr_atendimento = b.nr_atendimento
  and e.cd_unidade_compl = c.cd_unidade_compl
  and e.cd_unidade_basica = c.cd_unidade_basica
  and e.cd_setor_atendimento = c.cd_setor_atendimento
  and e.ie_leito_monitorado = 'S'
  and coalesce(c.dt_saida_unidade::text, '') = ''
  and a.ie_integracao = 'S'
  and coalesce(b.dt_alta::text, '') = ''
  and a.dt_atualizacao between date_yesterday_w and date_today_w;

  r1_w c1_w%rowtype;

BEGIN

  open c1_w;
  <<loop_nr_atendimento>> loop

    fetch c1_w into r1_w;
    EXIT WHEN NOT FOUND; /* apply on c1_w */

    begin

      tempo_limite_w := 0;
      count_sinal_vitais_w := 0;
      last_notification_status_w := '';
      last_notification_exists_w := 0;

      select * into STRICT tempo_limite_w
      from (SELECT (clock_timestamp() - aa.dt_atualizacao) * 24 * 60 as valor
      from atendimento_sinal_vital aa where aa.nr_atendimento = r1_w.nr_atendimento
	  and aa.ie_integracao = 'S'
      order by aa.dt_atualizacao desc) alias2 LIMIT 1;

      if tempo_limite_w < 5 then
        goto loop_nr_atendimento;
      end if;

      -- 1 - a mais de 5 minutos gerar - sem notificacao existente.
      -- 2- a mais de 5 minutos e ja existe uma notificacao e se estiver como nao lida - nao gerar outra. se lida gera.
      -- 3 - mais de 5 minutos - existe integtacao mais recente e esta marcado como - sendo lida ou nao lida  - gera.
      select count(g.ie_viewed) into STRICT last_notification_exists_w
      from integration_notifications g
      where g.nr_encounter = r1_w.nr_atendimento
      and g.ds_mensagem = 'SVI';

      if last_notification_exists_w > 0 then
        select * into STRICT last_notification_status_w
        from (SELECT g.ie_viewed status_r
        from integration_notifications g
        where g.nr_encounter = r1_w.nr_atendimento
        and g.ds_mensagem = 'SVI'
        order by g.dt_atualizacao desc) alias0 LIMIT 1;
      end if;

      select count(a.nr_atendimento) into STRICT count_sinal_vitais_w
      from atendimento_sinal_vital a
      where a.nr_atendimento = r1_w.nr_atendimento
	  and a.ie_integracao = 'S'
      and a.dt_atualizacao >
      (SELECT * from (select g.dt_atualizacao
      from integration_notifications g
      where g.nr_encounter = r1_w.nr_atendimento
      and g.ds_mensagem = 'SVI'
      order by 1 desc) alias1 LIMIT 1);

      -- Nao existe notificacoes pra o atendimento.
      if coalesce(last_notification_status_w::text, '') = '' or last_notification_status_w = '' then
        last_notification_status_w := '0';
      end if;

      RAISE NOTICE 'ident_integracao_SV_tempo: Atendimento: %', r1_w.nr_atendimento;
      RAISE NOTICE 'ident_integracao_SV_tempo: Notif. atendimento atual (viewed): %', last_notification_status_w;
      RAISE NOTICE 'ident_integracao_SV_tempo: Sinais Vitais data maior q notificacao: %', count_sinal_vitais_w;

      -- Verificar os usuarios cadastrados para receber os alerts.
      -- 1 - Estabelecimento
      -- 2 - Por Usuario(CPF)
      -- 3 - Por Perfil
      -- 4 - Tipo Evolucao
      if last_notification_status_w = 'N' and count_sinal_vitais_w > 0 then
        RAISE NOTICE 'ident_integracao_SV_tempo: Inserindo notif. - last_notification_status_w = N and count_sinal_vitais_w > 0';
        CALL ident_integracao_record('SV','SVI',r1_w.nr_atendimento);
      else
        if last_notification_status_w = 'S' or last_notification_status_w = '0' then
          RAISE NOTICE 'ident_integracao_SV_tempo: Inserindo notif. - last_notification_status_w = S';
          CALL ident_integracao_record('SV','SVI',r1_w.nr_atendimento);
        end if;
      end if;


    end;
  end loop;

  close c1_w;
  commit;
  RAISE NOTICE 'ident_integracao_SV_tempo: Executado com sucesso.';
exception
  when others then
    CALL gravar_log_sistema(20304, 'ident_integracao_SV_tempo: Erro - ' || SUBSTR(SQLERRM, 1, 200), 'Tasy');

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ident_integracao_sv_tempo () FROM PUBLIC;

