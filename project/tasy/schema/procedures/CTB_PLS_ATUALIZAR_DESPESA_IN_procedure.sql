-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_atualizar_despesa_in ( nr_seq_protocolo_p bigint, nr_seq_atualizacao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, qt_movimento_p INOUT bigint, nr_seq_conta_p bigint default null) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Atualizar as informações contábies dos itens das contas conforme a regra de
esquema contábil
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
	IE_CONTA_GLOSA_W - conforme domínio 3976
		11 - Conta médica - Participação dos Beneficiários em eventos/
			sinistros indenizados
		12 - Conta médica - Recuperação/Ressarcimento de Eventos
-------------------------------------------------------------------------------------------------------------------
Referências:
	PLS_ATUALIZAR_CONTAS_CONTABEIS
	PLS_ATUALIZAR_CONTA_CONTABIL
	PLS_ATUALIZAR_CONTAS_PROTOCOLO
	PLS_ATUALIZAR_CTA_CONTAB_DESP
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_erro_w			varchar(4000);
cd_classificacao_credito_w	varchar(255);
cd_classificacao_debito_w	varchar(255);
ie_tipo_ato_w			varchar(255)	:= '1';
ie_tipo_grupo_ans_w		varchar(255);
ie_proc_mat_w			varchar(255);
ie_tipo_w			varchar(255);
ds_mascara_w			varchar(40);
vl_fixo_w			varchar(30);
cd_classificacao_item_w		varchar(30);
cd_conta_credito_w		varchar(20);
cd_conta_debito_w		varchar(20);
cd_conta_contabil_w		varchar(20);
cd_cgc_prestador_atend_w	varchar(14);
cd_cgc_prestador_exec_w		varchar(14);
cd_cgc_prestador_solic_w	varchar(14);
cd_cgc_prestador_w		varchar(14);
cd_medico_executor_w		varchar(10);
ie_tipo_prestador_w		varchar(10);
ie_tipo_prestador_atend_w	varchar(10);
ie_tipo_prestador_exec_w	varchar(10);
ie_tipo_prestador_solic_w	varchar(10);
cd_pf_prestador_atend_w		varchar(10);
cd_pf_prestador_exec_w		varchar(10);
cd_pf_prestador_solic_w		varchar(10);
cd_pf_prestador_w		varchar(10);
ie_tipo_prestador_ww		varchar(10);
ie_classif_grupo_w		varchar(5);
ie_classif_grupo_ww		varchar(5);
ie_tipo_segurado_w		varchar(3);
ie_preco_w			varchar(2);
ie_tipo_relacao_w		varchar(2);
ie_regulamentacao_w		varchar(2);
ie_tipo_contratacao_w		varchar(2);
ie_segmentacao_w		varchar(2);
ie_tipo_contrato_w		varchar(2);
ie_tipo_guia_w			varchar(2);
ie_codificacao_w		varchar(2);
ie_conta_glosa_w		varchar(2);
ie_tipo_vinculo_operadora_w	varchar(2);
ie_tipo_relacao_atend_w		varchar(2);
ie_tipo_relacao_exec_w		varchar(2);
ie_tipo_relacao_solic_w		varchar(2);
ie_tipo_relacao_ww		varchar(2);
ie_tipo_despesa_w		varchar(1);
ie_regime_internacao_w		varchar(1);
ie_ato_cooperado_w		varchar(1);
ie_debito_credito_w		varchar(1);
ie_prestador_codificacao_w	varchar(1);
cd_procedimento_w		bigint;
nr_seq_grupo_ans_w		bigint;
nr_seq_grupo_superior_w		bigint;
nr_seq_grupo_ans_ww		bigint;
nr_seq_plano_w			bigint;
nr_seq_esquema_w		bigint;
cd_historico_padrao_w		bigint;
cd_historico_estorno_w		bigint;
cd_historico_baixa_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_conta_item_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_tipo_atendimento_w	bigint;
nr_seq_conselho_w		bigint;
nr_seq_prestador_w		bigint;
nr_seq_tipo_prestador_w		bigint;
nr_seq_sca_cobertura_w		bigint;
nr_seq_classificacao_sca_w	bigint;
nr_seq_contrato_w		bigint;
qt_cooperado_w			bigint;
nr_seq_intercambio_w		bigint;
nr_seq_prestador_atend_w	bigint;
nr_seq_prestador_exec_w		bigint;
nr_seq_prestador_solic_w	bigint;
nr_seq_tipo_prestador_atend_w	bigint;
nr_seq_tipo_prestador_solic_w	bigint;
nr_seq_tipo_prestador_exec_w	bigint;
nr_seq_prestador_ww		bigint;
nr_seq_tipo_prestador_ww	bigint;
nr_seq_esquema_ww		bigint;
cd_historico_padrao_ww		bigint;
cd_historico_estorno_ww		bigint;
cd_historico_baixa_ww		bigint;
qt_cooperado_prest_solic_w	bigint;
qt_cooperado_prest_atend_w	bigint;
qt_cooperado_prest_exec_w	bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_conta_mat_w		bigint;
qt_movimento_w			bigint;
dt_referencia_w			timestamp;
cd_empresa_w			estabelecimento.cd_empresa%type;

c_contas CURSOR FOR
	SELECT	a.nr_sequencia,
		d.ie_tipo_contratacao,
		d.ie_preco,
		d.ie_segmentacao,
		d.ie_regulamentacao,
		trunc(b.dt_mes_competencia,'month'),
		coalesce(c.ie_tipo_segurado,'B'),
		d.nr_sequencia,
		c.ie_tipo_vinculo_operadora,
		c.nr_seq_contrato,
		c.nr_seq_intercambio,
		a.ie_tipo_guia,
		b.nr_seq_prestador,
		a.nr_seq_prestador_exec,
		a.nr_seq_prestador
	from	pls_conta 		a,
		pls_protocolo_conta	b,
		pls_segurado		c,
		pls_plano 		d
	where	b.nr_sequencia	= a.nr_seq_protocolo
	and	c.nr_sequencia	= a.nr_seq_segurado
	and	d.nr_sequencia	= a.nr_seq_plano
	and	b.nr_sequencia	= nr_seq_protocolo_p
	and	(a.nr_seq_plano IS NOT NULL AND a.nr_seq_plano::text <> '')
	and	coalesce(a.ie_tipo_conta,'O') in ('O','C')
	
union all

	SELECT	a.nr_sequencia,
		d.ie_tipo_contratacao,
		d.ie_preco,
		d.ie_segmentacao,
		d.ie_regulamentacao,
		trunc(b.dt_mes_competencia,'month'),
		coalesce(c.ie_tipo_segurado,'B'),
		d.nr_sequencia,
		c.ie_tipo_vinculo_operadora,
		c.nr_seq_contrato,
		c.nr_seq_intercambio,
		a.ie_tipo_guia,
		b.nr_seq_prestador,
		a.nr_seq_prestador_exec,
		a.nr_seq_prestador
	from	pls_conta 		a,
		pls_protocolo_conta	b,
		pls_segurado		c,
		pls_plano 		d
	where	b.nr_sequencia	= a.nr_seq_protocolo
	and	c.nr_sequencia	= a.nr_seq_segurado
	and	d.nr_sequencia	= c.nr_seq_plano
	and	b.nr_sequencia	= nr_seq_protocolo_p
	and	coalesce(a.nr_seq_plano::text, '') = ''
	and	coalesce(a.ie_tipo_conta,'O') in ('O','C')
	
union all

	select	a.nr_sequencia,
		d.ie_tipo_contratacao,
		d.ie_preco,
		d.ie_segmentacao,
		d.ie_regulamentacao,
		trunc(b.dt_mes_competencia,'month'),
		coalesce(c.ie_tipo_segurado,'B'),
		d.nr_sequencia,
		c.ie_tipo_vinculo_operadora,
		c.nr_seq_contrato,
		c.nr_seq_intercambio,
		a.ie_tipo_guia,
		b.nr_seq_prestador,
		a.nr_seq_prestador_exec,
		a.nr_seq_prestador
	from	pls_conta 		a,
		pls_protocolo_conta	b,
		pls_segurado		c,
		pls_plano 		d
	where	b.nr_sequencia	= a.nr_seq_protocolo
	and	c.nr_sequencia	= a.nr_seq_segurado
	and	d.nr_sequencia	= a.nr_seq_plano
	and	a.nr_sequencia	= nr_seq_conta_p
	and	coalesce(a.ie_tipo_conta,'O') in ('O','C');

c_itens_conta CURSOR FOR
	SELECT	11, --ie_conta_glosa_w decode(ie_cancelamento_w,'C',13,11)
		nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		null,
		nr_seq_grupo_ans,
		ie_ato_cooperado,
		nr_seq_sca_cobertura,
		'P' ie_proc_mat
	from	pls_conta_proc
	where	nr_seq_conta	= nr_seq_conta_w
	
union all

	SELECT	11,
		nr_sequencia,
		null,
		null,
		ie_tipo_despesa,
		nr_seq_grupo_ans,
		ie_ato_cooperado,
		nr_seq_sca_cobertura,
		'M' ie_proc_mat
	from	pls_conta_mat
	where	nr_seq_conta	= nr_seq_conta_w
	
union all
 /* GLOSAS */
	select	12, --ie_conta_glosa_w decode(ie_cancelamento_w,'C',13,11)
		nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		null,
		nr_seq_grupo_ans,
		ie_ato_cooperado,
		nr_seq_sca_cobertura,
		'P' ie_proc_mat
	from	pls_conta_proc
	where	nr_seq_conta	= nr_seq_conta_w
	
union all

	select	12,
		nr_sequencia,
		null,
		null,
		ie_tipo_despesa,
		nr_seq_grupo_ans,
		ie_ato_cooperado,
		nr_seq_sca_cobertura,
		'M' ie_proc_mat
	from	pls_conta_mat
	where	nr_seq_conta	= nr_seq_conta_w;

c_esquema CURSOR FOR
	SELECT	nr_sequencia,
		cd_historico_padrao,
		cd_historico_estorno,
		cd_historico_baixa,
		ie_prestador_codificacao,
		nr_seq_prestador,
		ie_tipo_relacao,
		ie_tipo_ptu,
		nr_seq_tipo_prestador
	from	pls_esquema_contabil
	where	cd_estabelecimento	= cd_estabelecimento_p
	and	ie_tipo_regra		= 'CM'
	and	dt_referencia_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia,dt_referencia_w)
	and	((nr_seq_plano = nr_seq_plano_w) or (coalesce(nr_seq_plano::text, '') = ''))
	and	((ie_tipo_segurado = ie_tipo_segurado_w) or (coalesce(ie_tipo_segurado::text, '') = ''))
	and	ie_tipo_movimentacao = ie_conta_glosa_w
	and	((ie_tipo_vinculo_operadora = ie_tipo_vinculo_operadora_w) or (coalesce(ie_tipo_vinculo_operadora::text, '') = ''))
	and	((nr_seq_classif_sca = nr_seq_classificacao_sca_w) or (coalesce(nr_seq_classif_sca::text, '') = ''))
	and	((nr_seq_contrato = nr_seq_contrato_w) or (coalesce(nr_seq_contrato::text, '') = ''))
	and	((ie_tipo_guia = ie_tipo_guia_w) or (coalesce(ie_tipo_guia::text, '') = ''))
	order by
		coalesce(nr_seq_prestador,0),
		coalesce(nr_seq_contrato,0),
		coalesce(nr_seq_plano,0),
		coalesce(ie_tipo_guia,' '),
		coalesce(ie_tipo_relacao,' '),
		coalesce(nr_seq_tipo_prestador,0),
		coalesce(ie_tipo_ptu,' '),
		coalesce(ie_tipo_segurado,' '),
		coalesce(nr_seq_classif_sca,0),
		coalesce(ie_tipo_vinculo_operadora,' '),
		coalesce(dt_inicio_vigencia,clock_timestamp());

c_segmentacao CURSOR FOR
	SELECT	ie_codificacao,
		vl_fixo,
		cd_conta_contabil,
		ie_debito_credito,
		ds_mascara
	from	pls_esquema_contabil_seg
	where	nr_seq_regra_esquema	= nr_seq_esquema_w
	order by
		ie_debito_credito,
		nr_seq_apresentacao;


BEGIN
qt_movimento_w	:= qt_movimento_p;

select	max(cd_empresa)
into STRICT	cd_empresa_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_p;

open c_contas;
loop
fetch c_contas into
	nr_seq_conta_w,
	ie_tipo_contratacao_w,
	ie_preco_w,
	ie_segmentacao_w,
	ie_regulamentacao_w,
	dt_referencia_w,
	ie_tipo_segurado_w,
	nr_seq_plano_w,
	ie_tipo_vinculo_operadora_w,
	nr_seq_contrato_w,
	nr_seq_intercambio_w,
	ie_tipo_guia_w,
	nr_seq_prestador_atend_w,
	nr_seq_prestador_exec_w,
	nr_seq_prestador_solic_w;
EXIT WHEN NOT FOUND; /* apply on c_contas */
	begin
	/*Dados do prestador de atendimento*/

	if (nr_seq_prestador_atend_w IS NOT NULL AND nr_seq_prestador_atend_w::text <> '') then
		select	ie_tipo_relacao,
			nr_seq_tipo_prestador,
			cd_cgc,
			cd_pessoa_fisica
		into STRICT	ie_tipo_relacao_atend_w,
			nr_seq_tipo_prestador_atend_w,
			cd_cgc_prestador_atend_w,
			cd_pf_prestador_atend_w
		from	pls_prestador
		where	nr_sequencia	= nr_seq_prestador_atend_w  LIMIT 1;

		if (nr_seq_tipo_prestador_atend_w IS NOT NULL AND nr_seq_tipo_prestador_atend_w::text <> '') then
			select	ie_tipo_ptu
			into STRICT	ie_tipo_prestador_atend_w
			from	pls_tipo_prestador
			where	nr_sequencia	= nr_seq_tipo_prestador_atend_w  LIMIT 1;
		end if;

		select	count(1)
		into STRICT	qt_cooperado_prest_atend_w
		from	pls_cooperado
		where	((cd_cgc = cd_cgc_prestador_atend_w) or (coalesce(cd_cgc_prestador_atend_w::text, '') = ''))
		and	((cd_pessoa_fisica = cd_pf_prestador_atend_w) or (coalesce(cd_pf_prestador_atend_w::text, '') = ''))
		and	dt_referencia_w between coalesce(dt_inclusao,dt_referencia_w) and coalesce(dt_exclusao,dt_referencia_w);
	end if;

	/*Dados do prestador executante*/

	if (nr_seq_prestador_exec_w IS NOT NULL AND nr_seq_prestador_exec_w::text <> '') then
		select	ie_tipo_relacao,
			nr_seq_tipo_prestador,
			cd_cgc,
			cd_pessoa_fisica
		into STRICT	ie_tipo_relacao_exec_w,
			nr_seq_tipo_prestador_exec_w,
			cd_cgc_prestador_exec_w,
			cd_pf_prestador_exec_w
		from	pls_prestador
		where	nr_sequencia	= nr_seq_prestador_exec_w  LIMIT 1;

		if (nr_seq_tipo_prestador_exec_w IS NOT NULL AND nr_seq_tipo_prestador_exec_w::text <> '') then
			select	ie_tipo_ptu
			into STRICT	ie_tipo_prestador_exec_w
			from	pls_tipo_prestador
			where	nr_sequencia	= nr_seq_tipo_prestador_exec_w  LIMIT 1;
		end if;

		select	count(1)
		into STRICT	qt_cooperado_prest_exec_w
		from	pls_cooperado
		where	((cd_cgc = cd_cgc_prestador_exec_w) or (coalesce(cd_cgc_prestador_exec_w::text, '') = ''))
		and	((cd_pessoa_fisica = cd_pf_prestador_exec_w) or (coalesce(cd_pf_prestador_exec_w::text, '') = ''))
		and	dt_referencia_w between coalesce(dt_inclusao,dt_referencia_w) and coalesce(dt_exclusao,dt_referencia_w);
	end if;

	/*Dados do prestador solicitante*/

	if (nr_seq_prestador_solic_w IS NOT NULL AND nr_seq_prestador_solic_w::text <> '') then
		select	ie_tipo_relacao,
			nr_seq_tipo_prestador,
			cd_cgc,
			cd_pessoa_fisica
		into STRICT	ie_tipo_relacao_solic_w,
			nr_seq_tipo_prestador_solic_w,
			cd_cgc_prestador_solic_w,
			cd_pf_prestador_solic_w
		from	pls_prestador
		where	nr_sequencia	= nr_seq_prestador_solic_w  LIMIT 1;

		if (nr_seq_tipo_prestador_solic_w IS NOT NULL AND nr_seq_tipo_prestador_solic_w::text <> '') then
			select	ie_tipo_ptu
			into STRICT	ie_tipo_prestador_solic_w
			from	pls_tipo_prestador
			where	nr_sequencia	= nr_seq_tipo_prestador_solic_w  LIMIT 1;
		end if;

		select	count(1)
		into STRICT	qt_cooperado_prest_solic_w
		from	pls_cooperado
		where	((cd_cgc = cd_cgc_prestador_solic_w) or (coalesce(cd_cgc_prestador_solic_w::text, '') = ''))
		and	((cd_pessoa_fisica = cd_pf_prestador_solic_w) or (coalesce(cd_pf_prestador_solic_w::text, '') = ''))
		and	dt_referencia_w between coalesce(dt_inclusao,dt_referencia_w) and coalesce(dt_exclusao,dt_referencia_w);
	end if;

	if (coalesce(nr_seq_contrato_w,0) <> 0) then
		select	CASE WHEN coalesce(cd_pf_estipulante::text, '') = '' THEN  'PJ'  ELSE 'PF' END
		into STRICT	ie_tipo_contrato_w
		from	pls_contrato
		where	nr_sequencia	= nr_seq_contrato_w;
	elsif (coalesce(nr_seq_intercambio_w,0) <> 0) then
		select	CASE WHEN coalesce(cd_pessoa_fisica::text, '') = '' THEN  'PJ'  ELSE 'PF' END
		into STRICT	ie_tipo_contrato_w
		from	pls_intercambio
		where	nr_sequencia	= nr_seq_intercambio_w;
	end if;

	open c_itens_conta;
	loop
	fetch c_itens_conta into
		ie_conta_glosa_w,
		nr_seq_conta_item_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		ie_tipo_despesa_w,
		nr_seq_grupo_ans_w,
		ie_ato_cooperado_w,
		nr_seq_sca_cobertura_w,
		ie_proc_mat_w;
	EXIT WHEN NOT FOUND; /* apply on c_itens_conta */
		begin
		cd_conta_credito_w		:= null;
		cd_conta_debito_w		:= null;
		cd_classificacao_credito_w	:= null;
		cd_classificacao_debito_w	:= null;
		nr_seq_esquema_w		:= null;
		cd_historico_padrao_w		:= null;

		select	max(nr_seq_classificacao)
		into STRICT	nr_seq_classificacao_sca_w
		from	pls_plano
		where	nr_sequencia	= nr_seq_sca_cobertura_w;

		open c_esquema;
		loop
		fetch c_esquema into
			nr_seq_esquema_ww,
			cd_historico_padrao_ww,
			cd_historico_estorno_ww,
			cd_historico_baixa_ww,
			ie_prestador_codificacao_w,
			nr_seq_prestador_ww,
			ie_tipo_relacao_ww,
			ie_tipo_prestador_ww,
			nr_seq_tipo_prestador_ww;
		EXIT WHEN NOT FOUND; /* apply on c_esquema */
			begin

			if (ie_prestador_codificacao_w = 'E') then
				nr_seq_prestador_w	:= nr_seq_prestador_exec_w;
				ie_tipo_relacao_w	:= ie_tipo_relacao_exec_w;
				ie_tipo_prestador_w	:= ie_tipo_prestador_exec_w;
				nr_seq_tipo_prestador_w	:= nr_seq_tipo_prestador_exec_w;
				cd_cgc_prestador_w	:= cd_cgc_prestador_exec_w;
				cd_pf_prestador_w	:= cd_pf_prestador_exec_w;
				qt_cooperado_w		:= qt_cooperado_prest_exec_w;
			elsif (ie_prestador_codificacao_w = 'S') then
				nr_seq_prestador_w	:= nr_seq_prestador_solic_w;
				ie_tipo_relacao_w	:= ie_tipo_relacao_solic_w;
				ie_tipo_prestador_w	:= ie_tipo_prestador_solic_w;
				nr_seq_tipo_prestador_w	:= nr_seq_tipo_prestador_solic_w;
				cd_cgc_prestador_w	:= cd_cgc_prestador_solic_w;
				cd_pf_prestador_w	:= cd_pf_prestador_solic_w;
				qt_cooperado_w		:= qt_cooperado_prest_solic_w;
			else
				nr_seq_prestador_w	:= nr_seq_prestador_atend_w;
				ie_tipo_relacao_w	:= ie_tipo_relacao_atend_w;
				ie_tipo_prestador_w	:= ie_tipo_prestador_atend_w;
				nr_seq_tipo_prestador_w	:= nr_seq_tipo_prestador_atend_w;
				cd_cgc_prestador_w	:= cd_cgc_prestador_atend_w;
				cd_pf_prestador_w	:= cd_pf_prestador_atend_w;
				qt_cooperado_w		:= qt_cooperado_prest_atend_w;
			end if;

			if	((coalesce(nr_seq_prestador_ww,coalesce(nr_seq_prestador_w,0)) = coalesce(nr_seq_prestador_w,0)) and (coalesce(ie_tipo_relacao_ww,coalesce(ie_tipo_relacao_w,'X')) = coalesce(ie_tipo_relacao_w,'X')) and (coalesce(ie_tipo_prestador_ww,coalesce(ie_tipo_prestador_w,'X')) = coalesce(ie_tipo_prestador_w,'X')) and (coalesce(nr_seq_tipo_prestador_ww,coalesce(nr_seq_tipo_prestador_w,0)) = coalesce(nr_seq_tipo_prestador_w,0)) and (coalesce(ie_tipo_relacao_ww,coalesce(ie_tipo_relacao_w,0)) = coalesce(ie_tipo_relacao_w,0))) then

				nr_seq_esquema_w	:= nr_seq_esquema_ww;
				cd_historico_padrao_w	:= cd_historico_padrao_ww;
				cd_historico_estorno_w	:= cd_historico_estorno_ww;
				cd_historico_baixa_w	:= cd_historico_baixa_ww;
			end if;
			end;
		end loop;
		close c_esquema;

		cd_classificacao_credito_w	:= null;
		cd_classificacao_debito_w	:= null;

		/* GRUPO ANS */

		/*
		if	(nvl(nr_seq_grupo_ans_w,0) = 0) then
			select	nr_seq_tipo_atendimento,
				cd_medico_executor,
				ie_regime_internacao
			into	nr_seq_tipo_atendimento_w,
				cd_medico_executor_w,
				ie_regime_internacao_w
			from	pls_conta
			where	nr_sequencia = nr_seq_conta_w;

			select	max(nr_seq_conselho)
			into	nr_seq_conselho_w
			from	pessoa_fisica
			where	cd_pessoa_fisica	= cd_medico_executor_w;

			select	pls_obter_grupo_ans(cd_procedimento_w, ie_origem_proced_w, nr_seq_conselho_w,
				nr_seq_tipo_atendimento_w, ie_tipo_guia_w, ie_regime_internacao_w,
				ie_tipo_despesa_w, 'G', nvl(cd_estabelecimento_p,0))
			into	nr_seq_grupo_ans_w
			from	dual;
		end if;
		*/
		/* 5 - Grupo ANS com base nos valores do ITAMED */

		if (coalesce(nr_seq_grupo_ans_w,0) > 0) then
			select	max(nr_seq_grupo_superior)
			into STRICT	nr_seq_grupo_superior_w
			from	ans_grupo_despesa
			where	nr_sequencia	= nr_seq_grupo_ans_w;
		end if;

		if (coalesce(nr_seq_grupo_superior_w,0) = 0) then
			nr_seq_grupo_ans_ww	:= nr_seq_grupo_ans_w;
		else
			nr_seq_grupo_ans_ww	:= nr_seq_grupo_superior_w;
		end if;

		select	max(ie_tipo_grupo_ans)
		into STRICT	ie_tipo_grupo_ans_w
		from	ans_grupo_despesa
		where	nr_sequencia	= nr_seq_grupo_ans_ww;

		if (ie_tipo_grupo_ans_w = '10') then /* 1 - Consultas */
			ie_classif_grupo_w	:= '1';
			ie_classif_grupo_ww	:= '0';
		elsif (ie_tipo_grupo_ans_w = '20') then /* 49 - Exames */
			ie_classif_grupo_w	:= '2';
			ie_classif_grupo_ww	:= '0';
		elsif (ie_tipo_grupo_ans_w = '30') then /* 51 - Terapias */
			ie_classif_grupo_w	:= '3';
			ie_classif_grupo_ww	:= '0';
		elsif (ie_tipo_grupo_ans_w = '41') then /* 7 - Internação - Honorário médico */
			ie_classif_grupo_w	:= '4';
			ie_classif_grupo_ww	:= '1';
		elsif (ie_tipo_grupo_ans_w = '42') then /* 8 - Internação - Exames */
			ie_classif_grupo_w	:= '4';
			ie_classif_grupo_ww	:= '2';
		elsif (ie_tipo_grupo_ans_w = '43') then /* 9 - Internação - Terapias*/
			ie_classif_grupo_w	:= '4';
			ie_classif_grupo_ww	:= '3';
		elsif (ie_tipo_grupo_ans_w = '44') then /* 10 - Internação - Materiais médicos */
			ie_classif_grupo_w	:= '4';
			ie_classif_grupo_ww	:= '4';
		elsif (ie_tipo_grupo_ans_w = '45') then /* 11 - Internação - Medicamentos */
			ie_classif_grupo_w	:= '4';
			ie_classif_grupo_ww	:= '5';
		elsif (ie_tipo_grupo_ans_w = '46') then /* 12 - Internação - Outras despesas */
			ie_classif_grupo_w	:= '4';
			ie_classif_grupo_ww	:= '6';
		elsif (ie_tipo_grupo_ans_w = '49') then /* 12 - Internação - Outras despesas */
			ie_classif_grupo_w	:= '4';
			ie_classif_grupo_ww	:= '9';
		elsif (ie_tipo_grupo_ans_w = '50') then /* 6 - Outros atendimentos - Ambulatoriais */
			ie_classif_grupo_w	:= '5';
			ie_classif_grupo_ww	:= '0';
		elsif (ie_tipo_grupo_ans_w = '60') then /* 16 - Demais despesas assistenciais */
			ie_classif_grupo_w	:= '6';
			ie_classif_grupo_ww	:= '0';
		end if;
		/* FIM GRUPO ANS */

		open c_segmentacao;
		loop
		fetch c_segmentacao into
			ie_codificacao_w,
			vl_fixo_w,
			cd_conta_contabil_w,
			ie_debito_credito_w,
			ds_mascara_w;
		EXIT WHEN NOT FOUND; /* apply on c_segmentacao */
			begin
			cd_classificacao_item_w	:= null;

			if (ie_debito_credito_w = 'C') then /* Classificação CRÉDITO */
				if (ie_codificacao_w = 'CR') then /* Código reduzido */
					select	max(cd_classificacao_atual)
					into STRICT	cd_classificacao_credito_w
					from	conta_contabil
					where	cd_conta_contabil	= cd_conta_contabil_w;

					cd_conta_credito_w	:= cd_conta_contabil_w;
				elsif (ie_codificacao_w = 'JP') then
					if (coalesce(cd_cgc_prestador_w,0) <> 0) then
						select	max(cd_conta_contabil)
						into STRICT	cd_conta_contabil_w
						from	pessoa_jur_conta_cont a
						where	a.cd_cgc	= cd_cgc_prestador_w
						and	a.cd_empresa	= cd_empresa_w
						and	a.ie_tipo_conta	= 'P'
						and	dt_referencia_w between coalesce(a.dt_inicio_vigencia,dt_referencia_w) and coalesce(a.dt_fim_vigencia,dt_referencia_w);
					elsif (coalesce(cd_pf_prestador_w,0) <> 0 ) then
						select	max(cd_conta_contabil)
						into STRICT	cd_conta_contabil_w
						from	pessoa_fisica_conta_ctb	a
						where	a.cd_pessoa_fisica 	= cd_pf_prestador_w
						and	a.cd_empresa		= cd_empresa_w
						and	coalesce(a.cd_estabelecimento,cd_estabelecimento_p)	= cd_estabelecimento_p
						and	a.ie_tipo_conta		= 'P'
						and	dt_referencia_w between coalesce(a.dt_inicio_vigencia,dt_referencia_w) and coalesce(a.dt_fim_vigencia,dt_referencia_w);
					end if;

					select	max(cd_classificacao_atual)
					into STRICT	cd_classificacao_credito_w
					from	conta_contabil
					where	cd_conta_contabil	= cd_conta_contabil_w;

					cd_conta_credito_w	:= cd_conta_contabil_w;
				elsif (ie_codificacao_w = 'FX') then /* Fixo */
					cd_classificacao_item_w	:= vl_fixo_w;
				elsif (ie_codificacao_w = 'FP') then /* Formação de Preço */
					if (ie_preco_w in ('1','2','3')) then
						cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_formacao_preco(ie_preco_w);
					else
						cd_classificacao_item_w	:= 'FP';
					end if;
				elsif (ie_codificacao_w = 'R') then /* Regulamentação */
					cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_regulamentacao(ie_regulamentacao_w);
				elsif (ie_codificacao_w = 'TC') then /* Tipo de contratação */
					if (ie_tipo_contratacao_w in ('I','CE','CA')) then
						cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_tipo_contratacao(ie_tipo_contratacao_w);
					else
						cd_classificacao_item_w	:= 'TC';
					end if;
				elsif (ie_codificacao_w = 'TP') then /* Tipo de Contrato (Pessoa física ou Júrídica) */
					if (ie_tipo_contrato_w in ('PF','PJ')) then
						cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_tipo_pessoa_contrato(ie_tipo_contrato_w);
					else
						cd_classificacao_item_w	:= 'TP';
					end if;
				elsif (ie_codificacao_w = 'S') then /* Segmentação */
					cd_classificacao_item_w	:= lpad(ie_segmentacao_w,2,'0');
				elsif (ie_codificacao_w = 'TA') then /* Tipo de ato cooperado */
					if (ie_ato_cooperado_w in ('1','2','3')) then
						cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_ato_cooperado(ie_ato_cooperado_w);
					else
						cd_classificacao_item_w	:= 'TA';
					end if;
				elsif (ie_codificacao_w = 'TR') then /* Tipo de relação com a OPS */
					cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_tipo_relacao(ie_tipo_relacao_w);
				elsif (ie_codificacao_w = 'GA') then /* Grupo ANS */
					if (ie_classif_grupo_w IS NOT NULL AND ie_classif_grupo_w::text <> '') then
						cd_classificacao_item_w	:= ie_classif_grupo_w;
					else
						cd_classificacao_item_w	:= 'GA';
					end if;
				elsif (ie_codificacao_w = 'CG') then /* Complemento grupo ANS */
					if (ie_classif_grupo_ww IS NOT NULL AND ie_classif_grupo_ww::text <> '') then
						cd_classificacao_item_w	:= ie_classif_grupo_ww;
					else
						cd_classificacao_item_w	:= 'CG';
					end if;
				elsif (ie_codificacao_w = 'RC') then /* Tipo de contratação / Regulamentação */
					cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_contratacao_regulamentacao(ie_tipo_contratacao_w,ie_regulamentacao_w);
				end if;

				if (cd_classificacao_item_w IS NOT NULL AND cd_classificacao_item_w::text <> '') then
					if (ds_mascara_w = '00') then
						cd_classificacao_item_w	:= lpad(cd_classificacao_item_w,2,'0') || '.';
					elsif (ds_mascara_w = '0.0') then
						cd_classificacao_item_w	:= substr(lpad(cd_classificacao_item_w,2,'0'),1,1) ||'.'||substr(lpad(cd_classificacao_item_w,2,'0'),2,1) || '.';
					elsif (ds_mascara_w = '0_') then
						cd_classificacao_item_w	:= cd_classificacao_item_w;
					else
						cd_classificacao_item_w	:= cd_classificacao_item_w || '.';
					end if;

					cd_classificacao_credito_w	:= cd_classificacao_credito_w || cd_classificacao_item_w;
				end if;
			elsif (ie_debito_credito_w = 'D') then /* Classificação DÉBITO */
				if (ie_codificacao_w = 'CR') then /* Código reduzido */
					select	max(cd_classificacao_atual)
					into STRICT	cd_classificacao_debito_w
					from	conta_contabil
					where	cd_conta_contabil	= cd_conta_contabil_w;

					cd_conta_debito_w	:= cd_conta_contabil_w;
				elsif (ie_codificacao_w = 'JP') then
					if (coalesce(cd_cgc_prestador_w,0) <> 0) then
						select	max(cd_conta_contabil)
						into STRICT	cd_conta_contabil_w
						from	pessoa_jur_conta_cont a
						where	a.cd_cgc	= cd_cgc_prestador_w
						and	a.cd_empresa	= cd_empresa_w
						and	a.ie_tipo_conta	= 'P'
						and	dt_referencia_w between coalesce(a.dt_inicio_vigencia,dt_referencia_w) and coalesce(a.dt_fim_vigencia,dt_referencia_w);
					elsif (coalesce(cd_pf_prestador_w,0) <> 0 ) then
						select	max(cd_conta_contabil)
						into STRICT	cd_conta_contabil_w
						from	pessoa_fisica_conta_ctb	a
						where	a.cd_pessoa_fisica 	= cd_pf_prestador_w
						and	a.cd_empresa		= cd_empresa_w
						and	coalesce(a.cd_estabelecimento,cd_estabelecimento_p)	= cd_estabelecimento_p
						and	a.ie_tipo_conta	= 'P'
						and	dt_referencia_w between coalesce(a.dt_inicio_vigencia,dt_referencia_w) and coalesce(a.dt_fim_vigencia,dt_referencia_w);
					end if;

					select	max(cd_classificacao_atual)
					into STRICT	cd_classificacao_debito_w
					from	conta_contabil
					where	cd_conta_contabil	= cd_conta_contabil_w;

					cd_conta_debito_w	:= cd_conta_contabil_w;
				elsif (ie_codificacao_w = 'FX') then /* Fixo */
					cd_classificacao_item_w	:= vl_fixo_w;
				elsif (ie_codificacao_w = 'FP') then /* Formação de Preço */
					if (ie_preco_w in ('1','2','3')) then
						cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_formacao_preco(ie_preco_w);
					else
						cd_classificacao_item_w	:= 'FP';
					end if;
				elsif (ie_codificacao_w = 'R') then /* Regulamentação */
					cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_regulamentacao(ie_regulamentacao_w);
				elsif (ie_codificacao_w = 'TC') then /* Tipo de contratação */
					if (ie_tipo_contratacao_w in ('I','CE','CA')) then
						cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_tipo_contratacao(ie_tipo_contratacao_w);
					else
						cd_classificacao_item_w	:= 'TC';
					end if;
				elsif (ie_codificacao_w = 'S') then /* Segmentação */
					cd_classificacao_item_w	:= lpad(ie_segmentacao_w,2,'0');
				elsif (ie_codificacao_w = 'TP') then /* Tipo de Contrato (Pessoa física ou Júrídica) */
					if (ie_tipo_contrato_w in ('PF','PJ')) then
						cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_tipo_pessoa_contrato(ie_tipo_contrato_w);
					else
						cd_classificacao_item_w	:= 'TP';
					end if;
				elsif (ie_codificacao_w = 'TA') then /* Tipo de ato cooperado */
					if (ie_ato_cooperado_w in ('1','2','3')) then
						cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_ato_cooperado(ie_ato_cooperado_w);
					else
						cd_classificacao_item_w	:= 'TA';
					end if;
				elsif (ie_codificacao_w = 'TR') then /* Tipo de relação com a OPS */
					cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_tipo_relacao(ie_tipo_relacao_w);
				elsif (ie_codificacao_w = 'GA') then /* Grupo ANS */
					if (ie_classif_grupo_w IS NOT NULL AND ie_classif_grupo_w::text <> '') then
						cd_classificacao_item_w	:= ie_classif_grupo_w;
					else
						cd_classificacao_item_w	:= 'GA';
					end if;
				elsif (ie_codificacao_w = 'CG') then /* Complemento grupo ANS */
					if (ie_classif_grupo_ww IS NOT NULL AND ie_classif_grupo_ww::text <> '') then
						cd_classificacao_item_w	:= ie_classif_grupo_ww;
					else
						cd_classificacao_item_w	:= 'CG';
					end if;
				elsif (ie_codificacao_w = 'RC') then /* Tipo de contratação / Regulamentação */
					cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_contratacao_regulamentacao(ie_tipo_contratacao_w,ie_regulamentacao_w);
				end if;

				if (cd_classificacao_item_w IS NOT NULL AND cd_classificacao_item_w::text <> '') then
					if (ds_mascara_w = '00') then
						cd_classificacao_item_w	:= lpad(cd_classificacao_item_w,2,'0') || '.';
					elsif (ds_mascara_w = '0.0') then
						cd_classificacao_item_w	:= substr(lpad(cd_classificacao_item_w,2,'0'),1,1) ||'.'||substr(lpad(cd_classificacao_item_w,2,'0'),2,1) || '.';
					elsif (ds_mascara_w = '0_') then
						cd_classificacao_item_w	:= cd_classificacao_item_w;
					else
						cd_classificacao_item_w	:= cd_classificacao_item_w || '.';
					end if;

					cd_classificacao_debito_w	:= cd_classificacao_debito_w || cd_classificacao_item_w;
				end if;
			end if;
			end;
		end loop;
		close c_segmentacao;

		/* Remover o último ponto da classificação */

		if (substr(cd_classificacao_credito_w,length(cd_classificacao_credito_w),length(cd_classificacao_credito_w)) = '.') then
			cd_classificacao_credito_w	:= substr(cd_classificacao_credito_w,1,length(cd_classificacao_credito_w)-1);
		end if;

		if (substr(cd_classificacao_debito_w,length(cd_classificacao_debito_w),length(cd_classificacao_debito_w)) = '.') then
			cd_classificacao_debito_w	:= substr(cd_classificacao_debito_w,1,length(cd_classificacao_debito_w)-1);
		end if;

		if (coalesce(cd_conta_credito_w::text, '') = '') then
			cd_conta_credito_w	:= ctb_obter_conta_classif(cd_classificacao_credito_w,dt_referencia_w,cd_estabelecimento_p);
		end if;

		if (coalesce(cd_conta_debito_w::text, '') = '') then
			cd_conta_debito_w	:= ctb_obter_conta_classif(cd_classificacao_debito_w,dt_referencia_w,cd_estabelecimento_p);
		end if;

		if (ie_conta_glosa_w = 11) then /* DESPESA */
			ie_tipo_w	:= 'C';

			if 	(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then
				update	pls_conta_proc
				set	cd_conta_cred		= cd_conta_credito_w,
					cd_conta_deb		= cd_conta_debito_w,
					cd_classif_cred		= cd_classificacao_credito_w,
					cd_classif_deb		= cd_classificacao_debito_w,
					nr_seq_esquema		= nr_seq_esquema_w,
					cd_historico		= cd_historico_padrao_w,
					nr_seq_grupo_ans	= nr_seq_grupo_ans_w,
					nr_seq_grupo_ans_sup	= nr_seq_grupo_superior_w
				where	nr_sequencia		= nr_seq_conta_item_w;
			elsif (ie_tipo_despesa_w IS NOT NULL AND ie_tipo_despesa_w::text <> '') then
				update	pls_conta_mat
				set	cd_conta_cred		= cd_conta_credito_w,
					cd_conta_deb		= cd_conta_debito_w,
					cd_classif_cred		= cd_classificacao_credito_w,
					cd_classif_deb		= cd_classificacao_debito_w,
					nr_seq_esquema		= nr_seq_esquema_w,
					cd_historico		= cd_historico_padrao_w,
					nr_seq_grupo_ans	= nr_seq_grupo_ans_w,
					nr_seq_grupo_ans_sup	= nr_seq_grupo_superior_w
				where	nr_sequencia		= nr_seq_conta_item_w;
			end if;
		elsif (ie_conta_glosa_w = 12) then /* GLOSA */
			ie_tipo_w	:= 'G';

			if 	(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then
				update	pls_conta_proc
				set	cd_conta_glosa_cred	= cd_conta_credito_w,
					cd_conta_glosa_deb	= cd_conta_debito_w,
					cd_classif_glosa_cred	= cd_classificacao_credito_w,
					cd_classif_glosa_deb	= cd_classificacao_debito_w,
					nr_seq_esquema_glosa	= nr_seq_esquema_w,
					cd_historico_glosa	= cd_historico_padrao_w,
					nr_seq_grupo_ans	= nr_seq_grupo_ans_w,
					nr_seq_grupo_ans_sup	= nr_seq_grupo_superior_w
				where	nr_sequencia		= nr_seq_conta_item_w;

				qt_movimento_w	:= qt_movimento_w + 1;
			elsif (ie_tipo_despesa_w IS NOT NULL AND ie_tipo_despesa_w::text <> '') then
				update	pls_conta_mat
				set	cd_conta_glosa_cred	= cd_conta_credito_w,
					cd_conta_glosa_deb	= cd_conta_debito_w,
					cd_classif_glosa_cred	= cd_classificacao_credito_w,
					cd_classif_glosa_deb	= cd_classificacao_debito_w,
					nr_seq_esquema_glosa	= nr_seq_esquema_w,
					cd_historico_glosa	= cd_historico_padrao_w,
					nr_seq_grupo_ans	= nr_seq_grupo_ans_w,
					nr_seq_grupo_ans_sup	= nr_seq_grupo_superior_w
				where	nr_sequencia		= nr_seq_conta_item_w;

				qt_movimento_w	:= qt_movimento_w + 1;
			end if;
		end if;

		if (nr_seq_atualizacao_p IS NOT NULL AND nr_seq_atualizacao_p::text <> '') then
			nr_seq_conta_proc_w	:= null;
			nr_seq_conta_mat_w	:= null;

			if (ie_proc_mat_w = 'P') then
				nr_seq_conta_proc_w	:= nr_seq_conta_item_w;
			else
				nr_seq_conta_mat_w	:= nr_seq_conta_item_w;
			end if;

			if (coalesce(nr_seq_esquema_w::text, '') = '') then
				CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,
							1,
							null,
							nr_seq_conta_proc_w,
							nr_seq_conta_mat_w,
							ie_tipo_w,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							nm_usuario_p,
							nr_seq_esquema_w);
			elsif	((coalesce(cd_conta_credito_w::text, '') = '') or (coalesce(cd_conta_debito_w::text, '') = '')) then
				CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,
							2,
							null,
							nr_seq_conta_proc_w,
							nr_seq_conta_mat_w,
							ie_tipo_w,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							nm_usuario_p,
							nr_seq_esquema_w);
			end if;
		end if;
		end;
	end loop;
	close c_itens_conta;
	end;
end loop;
close c_contas;

qt_movimento_p	:= qt_movimento_w;
--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_atualizar_despesa_in ( nr_seq_protocolo_p bigint, nr_seq_atualizacao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, qt_movimento_p INOUT bigint, nr_seq_conta_p bigint default null) FROM PUBLIC;

