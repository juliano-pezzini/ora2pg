-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_registro_isbt ( nr_prescricao_p bigint, nr_seq_procedimento_p bigint, nr_bolsa_p text, nr_bolsa_isbt_p text, cd_bolsa_p text, qt_volume_p bigint, nm_usuario_p text, ie_lavado_p text, ie_irradiado_p text, ie_filtrado_p text, ie_aliquotado_p text, nr_seq_horario_p bigint default 0, nr_seq_horario_out_p INOUT bigint DEFAULT NULL) AS $body$
DECLARE


nr_sequencia_w		bigint;
nr_bolsas_w			bigint;
ie_status_bolsa_w	varchar(3);
dt_horario_w		timestamp;
nr_seq_horario_w	bigint;
nr_prescricao_w		prescr_procedimento.nr_prescricao%type;
nr_seq_proc_w		prescr_procedimento.nr_sequencia%type;
dt_atualizacao_w 	timestamp;
param597 			varchar(1);
ds_observacao_w		prescr_solucao_evento.ds_observacao%type;


BEGIN

  if ((coalesce(nr_prescricao_p, 0) > 0) or (coalesce(nr_seq_procedimento_p, 0) > 0)) then

    dt_atualizacao_w := clock_timestamp();

    if	((coalesce(nr_prescricao_p, 0) = 0) and (coalesce(nr_seq_procedimento_p, 0) > 0)) then
      select	max(nr_prescricao),
          max(nr_seq_procedimento)
      into STRICT	nr_prescricao_w,
          nr_seq_proc_w
      from	prescr_proc_hor
      where	nr_sequencia =	nr_seq_procedimento_p;
    else
      nr_seq_proc_w	:= nr_seq_procedimento_p;
      nr_prescricao_w	:= nr_prescricao_p;	
    end if;

    if (coalesce(nr_seq_horario_p,0) > 0) then
      nr_seq_horario_w	:= nr_seq_horario_p;

      select	coalesce(count(nr_sequencia),0)
      into STRICT	nr_bolsas_w
      from	prescr_proc_bolsa
      where	nr_prescricao	= nr_prescricao_w
      and		nr_seq_horario	= nr_seq_horario_w;
    else
      select	coalesce(count(nr_sequencia),0)
      into STRICT	nr_bolsas_w
      from	prescr_proc_bolsa
      where	nr_seq_procedimento  = nr_seq_proc_w
      and		nr_prescricao		 = nr_prescricao_w;	
    end if;

    if (coalesce(nr_bolsas_w,0) = 0) then

	    if (coalesce(nr_seq_horario_p,0) = 0) then	
	        select	min(nr_sequencia)
      		into STRICT	nr_seq_horario_w
      		from	prescr_proc_hor
      		where	nr_seq_procedimento = nr_seq_proc_w
      		and		nr_prescricao 		= nr_prescricao_w;	
		end if;

      update	prescr_proc_hor
      set		qt_vol_hemocomp = qt_volume_p		
      where		nr_sequencia    = nr_seq_horario_w;

      param597 := Wheb_assist_pck.obterParametroFuncao(1113,597);

      if (param597 = 'U') then
        update	prescr_proc_hor
        set		dt_horario 	= dt_atualizacao_w
        where	nr_sequencia 	= nr_seq_horario_w;
      end if;
    else	
      dt_horario_w := obter_horario_apraz_bolsa(obter_perfil_ativo, nr_prescricao_w, nr_seq_proc_w);	
      nr_seq_horario_w := gerar_horario_bolsa_hm(nr_prescricao_w, nr_seq_proc_w, dt_horario_w, qt_volume_p, nm_usuario_p, nr_seq_horario_w);
    end if;

    if (nr_seq_horario_w = 0) then
      nr_seq_horario_w	:= null;
    end if;

    if (coalesce(nr_seq_horario_w, 0) > 0) then
      insert into prescr_proc_bolsa(nr_sequencia,
        dt_atualizacao,
        nm_usuario,
        dt_atualizacao_nrec,
        nm_usuario_nrec,
        nr_prescricao,
        nr_seq_procedimento,
        nr_bolsa,
        nr_bolsa_isbt,
        cd_bolsa,
        qt_volume,
        nr_seq_horario,
        ie_lavado,
        ie_irradiado,
        ie_filtrado,
        ie_aliquotado)
      values (nextval('prescr_proc_bolsa_seq'),
        dt_atualizacao_w,
        nm_usuario_p,
        dt_atualizacao_w,
        nm_usuario_p,
        nr_prescricao_w,
        nr_seq_proc_w,
        nr_bolsa_p,
        nr_bolsa_isbt_p,
        cd_bolsa_p,
        qt_volume_p,
        nr_seq_horario_w,
        ie_lavado_p,
        ie_irradiado_p,
        ie_filtrado_p,
        ie_aliquotado_p);

      select	coalesce(max(ie_status),'N')
      into STRICT	ie_status_bolsa_w
      from	prescr_procedimento
      where	(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '')
      and		nr_sequencia = nr_seq_proc_w
      and		nr_prescricao = nr_prescricao_w;

      if (ie_status_bolsa_w = 'T') then
        update	prescr_procedimento
        set		dt_atualizacao = clock_timestamp(),
            nm_usuario = nm_usuario_p,
            ie_status = 'N'
        where	(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '')
        and		nr_sequencia = nr_seq_proc_w
        and		nr_prescricao = nr_prescricao_w;
        commit;
      end if;

	if ((nr_bolsa_p IS NOT NULL AND nr_bolsa_p::text <> '') and (coalesce(cd_bolsa_p::text, '') = '')) then
		ds_observacao_w := obter_desc_expressao(574896)||': '||nr_bolsa_p;
	elsif (cd_bolsa_p IS NOT NULL AND cd_bolsa_p::text <> '') then		
		ds_observacao_w := obter_desc_expressao(574896)||': '||cd_bolsa_p;
	elsif (nr_bolsa_isbt_p IS NOT NULL AND nr_bolsa_isbt_p::text <> '') then
		ds_observacao_w := obter_desc_expressao(574896)||': '||nr_bolsa_isbt_p;
	end if;

	  /* obter sequencia */

      select	nextval('prescr_solucao_evento_seq')
      into STRICT	nr_sequencia_w
;

      /* gerar evento */

      insert into prescr_solucao_evento(
        nr_sequencia,
        dt_atualizacao,
        nm_usuario,
        dt_atualizacao_nrec,
        nm_usuario_nrec,
        nr_prescricao,
        nr_seq_solucao,
        nr_seq_material,
        nr_seq_procedimento,
        nr_seq_nut,
        nr_seq_nut_neo,
        ie_forma_infusao,
        ie_tipo_dosagem,
        qt_dosagem,
        qt_vol_infundido,
        qt_vol_desprezado,
        qt_volume_parcial,
        cd_pessoa_fisica,
        ie_alteracao,
        dt_alteracao,
        ie_evento_valido,
        nr_seq_motivo,
        ds_observacao,
        ie_tipo_solucao,
        qt_volume_fase,
        nr_etapa_evento,
        dt_horario)
      values (
        nr_sequencia_w,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        nr_prescricao_w,
        null,
        null,
        nr_seq_proc_w,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        obter_dados_usuario_opcao(nm_usuario_p, 'C'),
        28,
        clock_timestamp(),
        'S',
        null,
        ds_observacao_w,
        3,
        null,
        null,
        dt_horario_w);
    end if;

    nr_seq_horario_out_p := nr_seq_horario_w;

    commit;

  end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_registro_isbt ( nr_prescricao_p bigint, nr_seq_procedimento_p bigint, nr_bolsa_p text, nr_bolsa_isbt_p text, cd_bolsa_p text, qt_volume_p bigint, nm_usuario_p text, ie_lavado_p text, ie_irradiado_p text, ie_filtrado_p text, ie_aliquotado_p text, nr_seq_horario_p bigint default 0, nr_seq_horario_out_p INOUT bigint DEFAULT NULL) FROM PUBLIC;

