-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_participante_proced ( nr_cirurgia_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_gera_partic_cirur_proc_w	varchar(1) := 'N';
cd_medico_anestesista_w	varchar(10);
cd_medico_cirurgiao_w	varchar(10);
cd_medico_exec_w		varchar(10);
cd_funcao_w		smallint;
nr_seq_agenda_w		agenda_paciente.nr_sequencia%type;
	
C01 CURSOR FOR
	SELECT	distinct a.cd_medico_exec
	from	prescr_procedimento a,
		cirurgia b
	where	a.nr_prescricao = b.nr_prescricao
	and	nr_cirurgia = nr_cirurgia_p
	order by 1;
	

BEGIN

select	max(nr_sequencia)
into STRICT	nr_seq_agenda_w
from	agenda_paciente
where 	nr_cirurgia = nr_cirurgia_p;

select	max(cd_medico_anestesista),
		max(cd_medico_cirurgiao)
into STRICT	cd_medico_anestesista_w,   
		cd_medico_cirurgiao_w
from	cirurgia
where	nr_cirurgia	=	nr_cirurgia_p;
	
if (cd_medico_anestesista_w IS NOT NULL AND cd_medico_anestesista_w::text <> '') then
	select	min(cd_funcao)
	into STRICT	cd_funcao_w
	from	funcao_medico
	where	ie_anestesista	=	'S';
	
	if (cd_funcao_w > 0) then
		CALL gerar_participante_cirurgia(cd_medico_anestesista_w, nr_cirurgia_p,cd_funcao_w,'A',nm_usuario_p);
	end if;
end if;

if (cd_medico_cirurgiao_w IS NOT NULL AND cd_medico_cirurgiao_w::text <> '') then
	select	min(cd_funcao)
	into STRICT	cd_funcao_w
	from	funcao_medico
	where	ie_cirurgiao	=	'S';
	
	if (cd_funcao_w > 0) then
		CALL gerar_participante_cirurgia(cd_medico_cirurgiao_w, nr_cirurgia_p,cd_funcao_w,'C',nm_usuario_p);
	end if;
end if;

select	min(cd_funcao)
into STRICT	cd_funcao_w
from	funcao_medico
where	ie_cirurgiao = 'S';

if (cd_funcao_w IS NOT NULL AND cd_funcao_w::text <> '') then
	open C01;
	loop
	fetch C01 into	
		cd_medico_exec_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
			if (cd_medico_exec_w IS NOT NULL AND cd_medico_exec_w::text <> '') then
				CALL gerar_participante_cirurgia(cd_medico_exec_w, nr_cirurgia_p,cd_funcao_w,'C',nm_usuario_p);
			end if;
		end;
	end loop;
	close C01;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_participante_proced ( nr_cirurgia_p bigint, nm_usuario_p text) FROM PUBLIC;

