-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_duplicar_tabela_mat ( nr_seq_material_preco_p pls_material_preco.nr_sequencia%type, dt_vigencia_p timestamp, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_setar_data_fim_vig_p text, ie_duplica_inativo_p text default 'N') AS $body$
DECLARE


NR_SEQ_VALOR_ITEM_W	pls_material_valor_item.nr_sequencia%type;
dt_inicio_vigencia_w	pls_material_valor_item.dt_inicio_vigencia%type;
dt_vigencia_w		pls_material_valor_item.dt_inicio_vigencia%type;
ie_situacao_w		pls_material.ie_situacao%type;
dt_exclusao_w		pls_material.dt_exclusao%type;
ie_duplica_inativo_w	varchar(1);
ie_gera_w		varchar(1);

C01 CURSOR(	nr_seq_material_preco_pc		pls_material_preco.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_material
	from	pls_material_preco_item	a
	where	a.nr_seq_material_preco = nr_seq_material_preco_pc
	and	exists (SELECT	1
			from	pls_material_valor_item b
			where	a.nr_sequencia = b.nr_seq_preco_item);

BEGIN

dt_vigencia_w := trunc(dt_vigencia_p);
ie_duplica_inativo_w := coalesce(ie_duplica_inativo_p,'N');

for r_c01_w in C01(nr_seq_material_preco_p) loop
	begin

	ie_gera_w := 'S';

	select	max(ie_situacao),
		max(dt_exclusao)
	into STRICT	ie_situacao_w,
		dt_exclusao_w
	from	pls_material
	where	nr_sequencia = r_c01_w.nr_seq_material;

	if (ie_duplica_inativo_w = 'N') and
		((ie_situacao_w = 'I') or (dt_exclusao_w < dt_vigencia_w)) then
		ie_gera_w := 'N';
	end if;

	if (ie_gera_w = 'S') then
		select  max(nr_sequencia),
			max(dt_inicio_vigencia)
		into STRICT	nr_seq_valor_item_w,
			dt_inicio_vigencia_w
		from	pls_material_valor_item
		where	nr_seq_preco_item = r_c01_w.nr_sequencia
		and	trunc(dt_inicio_vigencia) = (SELECT	max(trunc(dt_inicio_vigencia))
						     from	pls_material_valor_item
						     where	nr_seq_preco_item = r_c01_w.nr_sequencia);

		if (trunc(dt_inicio_vigencia_w)	!= dt_vigencia_w) then
			insert into pls_material_valor_item(	nr_sequencia, dt_atualizacao, nm_usuario,
						dt_atualizacao_nrec, nm_usuario_nrec, cd_moeda,
						vl_material, nr_seq_preco_item, dt_inicio_vigencia,
						ie_tipo_preco, qt_convercao )
				SELECT		nextval('pls_material_valor_item_seq'), clock_timestamp(), nm_usuario_p,
						clock_timestamp(), nm_usuario_p, cd_moeda,
						vl_material, nr_seq_preco_item, dt_vigencia_w,
						ie_tipo_preco, qt_convercao
				from	pls_material_valor_item
				where	nr_sequencia = nr_seq_valor_item_w;
		end if;
	end if;

	end;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_duplicar_tabela_mat ( nr_seq_material_preco_p pls_material_preco.nr_sequencia%type, dt_vigencia_p timestamp, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_setar_data_fim_vig_p text, ie_duplica_inativo_p text default 'N') FROM PUBLIC;

