-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ajustar_prescr_material ( nr_prescricao_p bigint, nr_sequencia_p bigint, ie_atualiza_regra_disp_p text default null) AS $body$
DECLARE


nr_ocorrencia_w				double precision;
nr_sequencia_w				integer;
qt_conversao_dose_w			double precision;
cd_material_w				integer;
cd_material_param_w			integer;
qt_unitaria_w				double precision;
qt_unitaria_pai_w			double precision;
qt_material_w				double precision;
qt_dose_especial_w			double precision;
qt_dose_especial_ww			double precision;
ds_dose_diferenciada_w		varchar(50);
ie_origem_inf_w				varchar(1);
qt_dispensar_w				double precision;
qt_total_disp_w				double precision;
ds_erro_w					varchar(2000);
cd_intervalo_w				varchar(7);
cd_intervalo_cad_w			varchar(7);
cd_intervalo_novo_w			varchar(7);
ie_acm_w					varchar(1);
ie_se_necessario_w			varchar(1);
ie_agrupador_w				smallint;
ie_urgencia_w				varchar(1);
ie_suspenso_w				varchar(1);
cd_unidade_medida_consumo_w	varchar(30);
cd_unidade_medida_dose_w	varchar(30);
cd_unid_med_dose_w			varchar(30);
qt_dose_w       			double precision;
qt_horas_estabilidade_w		double precision;
qt_dose_medic_w				double precision;
ds_horarios					varchar(2000);
ds_horarios_ordenados_w		varchar(2000);
ds_horarios_validade_w		varchar(2000);
k							bigint;
i							bigint;
ds_dose_w					varchar(20);
ds_hora_w					varchar(255);
ds_horario_final_w			varchar(2000) :='';
teste_w						bigint := 0;
ds_prim_horario_w			varchar(5);
cd_estabelecimento_w		smallint;
ie_via_aplicacao_w			varchar(5);
ie_medicacao_paciente_W		varchar(1);
ie_recons_diluente_fixo_w	varchar(1);
qt_operacao_w				double precision;
dt_prim_horario_w			timestamp;
hr_prim_horario_w			timestamp;
hr_prim_horario_ww			varchar(5);
nr_horas_validade_w			integer;
ds_horario_w				varchar(255);
ds_horario_ww				varchar(255);
qt_diluente_hora_w			double precision;
qt_dose_espec_w				double precision;
qt_dif_w					double precision;
ie_diluicao_recons_w		varchar(15);
nm_usuario_original_w		varchar(15);
ie_regra_disp_w				varchar(1);/* Rafael em 15/3/8 OS86206 */
ie_atualiza_reconst_w		varchar(1);
cd_perfil_w					integer;
qt_hora_intervalo_w			smallint;
qt_min_intervalo_w			integer;
ie_operacao_w				varchar(1);
ie_tratar_fixo_validade_w	varchar(1)	:= 'N';
ie_dose_diferenciada_w		varchar(1)	:= 'N';	
nr_ocorrencia_ww			double precision;
qt_dia_prim_hor_w			bigint;
cd_setor_atendimento_w		bigint;
ds_horarios_medic_w			varchar(2000);
nr_agrupador_w				double precision;
ie_Calc_vol_dil_aftpost_w	varchar(1);
nr_seq_alteracao_w			bigint;
ie_mesmo_zerado_w			varchar(1);
nr_atendimento_w			bigint;
qt_itens_compostos_w		bigint;
vl_union_w			varchar(1);
nr_sequencia_diluicao_w		prescr_material.nr_sequencia_diluicao%type;
qt_dose_extra_w			prescr_material.qt_dose%type;
cd_kit_material_w		prescr_material.cd_kit_material%type;
cd_intervalo_kit_w		componente_kit.cd_intervalo%type;
nr_ocorrencia_kit_w		prescr_material.nr_ocorrencia%type;
cd_um_dose_w			prescr_material.cd_unidade_medida_dose%type;
ds_horarios_kit_w		prescr_material.ds_horarios%type;
ds_horarios_novo_w		prescr_material.ds_horarios%type;
hr_dose_especial_w		prescr_material.hr_dose_especial%type;
hr_dose_especial_ww		prescr_material.hr_dose_especial%type;
ie_dose_espec_agora_w	prescr_material.ie_dose_espec_agora%type;
nr_seq_recomendacao_w	prescr_material.nr_seq_recomendacao%type;	
cd_funcao_w				prescr_medica.nr_prescricao%type;

C01 CURSOR FOR
SELECT	coalesce(a.nr_sequencia,0),
		coalesce(a.cd_material,0),
		coalesce(a.qt_unitaria,0),
		coalesce(a.qt_material,0),
		coalesce(a.ds_dose_diferenciada,''),
		coalesce(a.ie_origem_inf,'1'),
		coalesce(a.ie_agrupador,3),
		substr(obter_dados_material_estab(b.cd_material,cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo,
		a.qt_dose,
		a.ie_via_aplicacao,
		coalesce(a.ie_recons_diluente_fixo,'N'),
		a.cd_intervalo,
		coalesce(x.dt_primeiro_horario,x.dt_prescricao),
		ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(x.dt_prescricao, coalesce(a.hr_prim_horario, to_char(coalesce(x.dt_primeiro_horario, x.dt_prescricao), 'hh24:mi'))),
		x.nr_horas_validade,
		a.qt_hora_intervalo,
		a.qt_min_intervalo,
		a.cd_unidade_medida_dose,
		1,
		qt_conversao_dose,
		nr_sequencia_diluicao,
		a.cd_kit_material,
		a.nr_ocorrencia,
		a.ds_horarios
from	material b,
		prescr_material a,
		prescr_medica x
where	1 = 1
and		a.cd_material			= b.cd_material
and		a.ie_agrupador in (3,7,9)
and		(a.cd_material IS NOT NULL AND a.cd_material::text <> '')
and		a.nr_sequencia_diluicao 	= nr_sequencia_p
and		x.nr_prescricao			= a.nr_prescricao
and		x.nr_prescricao 		= nr_prescricao_p

union

SELECT	coalesce(a.nr_sequencia,0),
		coalesce(a.cd_material,0),
		coalesce(a.qt_unitaria,0),
		coalesce(a.qt_material,0),
		coalesce(a.ds_dose_diferenciada,''),
		coalesce(a.ie_origem_inf,'1'),
		coalesce(a.ie_agrupador,3),
		substr(obter_dados_material_estab(b.cd_material,cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo,
		a.qt_dose,
		a.ie_via_aplicacao,
		coalesce(a.ie_recons_diluente_fixo,'N'),
		a.cd_intervalo,
		coalesce(x.dt_primeiro_horario,x.dt_prescricao),
		ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(x.dt_prescricao, coalesce(a.hr_prim_horario, to_char(coalesce(x.dt_primeiro_horario, x.dt_prescricao), 'hh24:mi'))),
		x.nr_horas_validade,
		a.qt_hora_intervalo,
		a.qt_min_intervalo,
		a.cd_unidade_medida_dose,
		2,
		qt_conversao_dose,
		nr_sequencia_diluicao,
		a.cd_kit_material,
		a.nr_ocorrencia,
		a.ds_horarios
from	material b,
		prescr_material a,
		prescr_medica x
where	1 = 1
and		a.cd_material			= b.cd_material
and		(a.cd_material IS NOT NULL AND a.cd_material::text <> '')
and		a.nr_seq_kit 			= nr_sequencia_p
and		x.nr_prescricao			= a.nr_prescricao
and 	((coalesce(a.nr_seq_recomendacao::text, '') = '') or (a.nr_seq_recomendacao = nr_seq_recomendacao_w))
and		x.nr_prescricao 		= nr_prescricao_p

union

select	coalesce(a.nr_sequencia,0),
	coalesce(a.cd_material,0),
	coalesce(a.qt_unitaria,0),
	coalesce(a.qt_material,0),
	coalesce(a.ds_dose_diferenciada,''),
	coalesce(a.ie_origem_inf,'1'),
	coalesce(a.ie_agrupador,1),
	substr(obter_dados_material_estab(b.cd_material,cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo,
	a.qt_dose,
	a.ie_via_aplicacao,
	coalesce(a.ie_recons_diluente_fixo,'N'),
	a.cd_intervalo,
	coalesce(x.dt_primeiro_horario,x.dt_prescricao),
	ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(x.dt_prescricao, coalesce(a.hr_prim_horario, to_char(coalesce(x.dt_primeiro_horario, x.dt_prescricao), 'hh24:mi'))),
	x.nr_horas_validade,
	a.qt_hora_intervalo,
	a.qt_min_intervalo,
	a.cd_unidade_medida_dose,
	3,
	qt_conversao_dose,
	nr_sequencia_diluicao,
	a.cd_kit_material,
	a.nr_ocorrencia,
	a.ds_horarios
from	material b,
	prescr_material a,
	prescr_medica x
where	a.cd_material			= b.cd_material
and	(a.cd_material IS NOT NULL AND a.cd_material::text <> '')
and	a.nr_sequencia 			= nr_sequencia_p
and	x.nr_prescricao			= a.nr_prescricao
and	x.nr_prescricao 		= nr_prescricao_p
and	coalesce(ie_fator_correcao, 'N') 	= 'S'
and	ie_agrupador 			= 1;

c02 CURSOR FOR
SELECT	nr_sequencia
from	prescr_mat_alteracao
where	1 = 1
and	cd_item	<> to_char(cd_material_param_w)
and	nr_seq_prescricao	= nr_sequencia_p
and	nr_prescricao		= nr_prescricao_p;


BEGIN

CALL Ajustar_Dose_Diluente(nr_prescricao_p,nr_sequencia_p);

select	coalesce(max(cd_estabelecimento),1),
	max(nm_usuario_original),
	max(nr_atendimento),
	max(cd_funcao_origem)
into STRICT	cd_estabelecimento_w,
	nm_usuario_original_w,
	nr_atendimento_w,
	cd_funcao_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

cd_perfil_w	:= obter_perfil_ativo;
ie_diluicao_recons_w := Obter_Param_Usuario(924, 195, cd_perfil_w, nm_usuario_original_w, cd_estabelecimento_w, ie_diluicao_recons_w);
ie_atualiza_reconst_w := Obter_Param_Usuario(924, 214, cd_perfil_w, nm_usuario_original_w, cd_estabelecimento_w, ie_atualiza_reconst_w);
ie_Calc_vol_dil_aftpost_w := Obter_Param_Usuario(924, 600, cd_perfil_w, nm_usuario_original_w, cd_estabelecimento_w, ie_Calc_vol_dil_aftpost_w);
begin
if (ie_diluicao_recons_w = 'S') and (ie_atualiza_reconst_w = 'N') then
	CALL Gerar_Reconst_Diluicao(nr_prescricao_p, nr_sequencia_p, 'R');
end if;
exception when others then
	CALL gerar_log_prescricao(nr_prescricao_p, nr_sequencia_p, 1, null, null, to_char(sqlerrm), wheb_usuario_pck.get_nm_usuario, 4092, 'S');
end;

Select	coalesce(max(cd_intervalo),obter_interv_prescr_padrao(cd_estabelecimento_w)),
		coalesce(max(ie_acm),'N'),
		coalesce(max(ie_se_necessario),'N'),
		coalesce(max(qt_unitaria),1),
		coalesce(max(nr_ocorrencia),1),
		coalesce(max(ie_urgencia),'N'),
		coalesce(max(ie_suspenso),'N'),
		coalesce(max(qt_dose_especial),0),
		coalesce(max(ie_medicacao_paciente),'N'),
		coalesce(max(qt_total_dispensar),1),
		coalesce(max(cd_unidade_medida_dose),''),
		coalesce(max(qt_dose),0),
		max(hr_prim_horario),
		max(qt_dia_prim_hor),
		max(ds_horarios),
		max(nr_agrupamento),
		max(cd_material),
		max(hr_dose_especial),
		coalesce(max(ie_dose_espec_agora),'N'),
		max(nr_seq_recomendacao)
into STRICT	cd_intervalo_w,
		ie_acm_w,
		ie_se_necessario_w,
		qt_unitaria_pai_w,
		nr_ocorrencia_w,
		ie_urgencia_w,
		ie_suspenso_w,
		qt_dose_especial_w,
		ie_medicacao_paciente_W,
		qt_total_disp_w,
		cd_unidade_medida_dose_w,
		qt_dose_medic_w,
		hr_prim_horario_ww,
		qt_dia_prim_hor_w,
		ds_horarios_medic_w,
		nr_agrupador_w,
		cd_material_param_w,
		hr_dose_especial_w,
		ie_dose_espec_agora_w,
		nr_seq_recomendacao_w
from	prescr_material
where	1 = 1
and		(cd_material IS NOT NULL AND cd_material::text <> '')
and		nr_sequencia  = nr_sequencia_p 	
and		nr_prescricao = nr_prescricao_p;

select	max(cd_setor_atendimento)
into STRICT	cd_setor_atendimento_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

begin

open C02;
loop
fetch C02 into	
	nr_seq_alteracao_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	
	update	prescr_mat_alteracao
	set		cd_item		= to_char(cd_material_param_w)
	where	nr_sequencia	= nr_seq_alteracao_w;
	
	end;
end loop;
close C02;

open C01;
loop
fetch C01 into
	nr_sequencia_w,
	cd_material_w,
	qt_unitaria_w,
	qt_material_w,
	ds_dose_diferenciada_w,
	ie_origem_inf_w,
	ie_agrupador_w,
	cd_unidade_medida_consumo_w,
	qt_dose_w,
	ie_via_aplicacao_w,
	ie_recons_diluente_fixo_w,
	cd_intervalo_cad_w,
	dt_prim_horario_w,
	hr_prim_horario_w,
	nr_horas_validade_w,
	qt_hora_intervalo_w,
	qt_min_intervalo_w,
	cd_unid_med_dose_w,
	vl_union_w,
	qt_conversao_dose_w,
	nr_sequencia_diluicao_w,
	cd_kit_material_w,
	nr_ocorrencia_kit_w,
	ds_horarios_kit_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	qt_dose_especial_ww := null;
	hr_dose_especial_ww	:= hr_dose_especial_w;
	
	if (ie_recons_diluente_fixo_w = 'S') then
		begin	
		if (ie_agrupador_w = 7) then
			begin
			select	coalesce(max(cd_intervalo),cd_intervalo_w)
			into STRICT	cd_intervalo_cad_w
			from	prescr_material
			where	1 = 1
			and		ie_agrupador = 3
			and		nr_sequencia_diluicao = nr_sequencia_p
			and		nr_prescricao = nr_prescricao_p;
			exception
			when others then
				cd_intervalo_cad_w	:= cd_intervalo_w;				
				CALL gerar_log_prescricao(nr_prescricao_p, nr_sequencia_w, ie_agrupador_w, null, null, to_char(sqlerrm), wheb_usuario_pck.get_nm_usuario, 4092, 'S');
			end;
		end if;

		cd_intervalo_novo_w	:= cd_intervalo_cad_w;

		SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_novo_w, dt_prim_horario_w, hr_prim_horario_w, nr_horas_validade_w, cd_material_w, qt_hora_intervalo_w, qt_min_intervalo_w, qt_operacao_w, ds_horario_w, ds_horario_ww, 'N', null) INTO STRICT qt_operacao_w, ds_horario_w, ds_horario_ww;

	
		end;
	else

		cd_intervalo_novo_w	:= cd_intervalo_w;
		qt_operacao_w		:= nr_ocorrencia_w;
		ds_horarios_novo_w 	:= ds_horarios_medic_w;
				
		if (cd_kit_material_w IS NOT NULL AND cd_kit_material_w::text <> '') then
		
			select	max(cd_intervalo)
			into STRICT	cd_intervalo_kit_w
			from 	componente_kit
			where	cd_kit_material = cd_kit_material_w
			and		cd_material = cd_material_w;
		
			if (cd_intervalo_kit_w IS NOT NULL AND cd_intervalo_kit_w::text <> '') and (cd_intervalo_kit_w = cd_intervalo_cad_w) then
			
				if (hr_prim_horario_ww IS NOT NULL AND hr_prim_horario_ww::text <> '') then
					hr_prim_horario_w := trunc(to_date(to_char(hr_prim_horario_w, 'dd/mm/yyyy') || ' ' || hr_prim_horario_ww, 'dd/mm/yyyy hh24:mi'), 'mi');
				end if;

				SELECT * FROM calcular_horario_prescricao(nr_prescricao_p => nr_prescricao_p, cd_intervalo_p => cd_intervalo_kit_w, dt_prim_horario_presc_p => dt_prim_horario_w, dt_hora_inicio_p => hr_prim_horario_w, nr_hora_validade_p => nr_horas_validade_w, cd_material_p => cd_material_w, qt_hora_intervalo_p => qt_hora_intervalo_w, qt_min_intervalo_p => qt_min_intervalo_w, nr_intervalo_p => nr_ocorrencia_kit_w, ds_horarios_p => ds_horarios_kit_w, ds_horarios2_p => ds_horario_ww, ie_solucao_p => 'N', ds_dose_diferenciada_p => null) INTO STRICT nr_intervalo_p => nr_ocorrencia_kit_w, ds_horarios_p => ds_horarios_kit_w, ds_horarios2_p => ds_horario_ww;

				cd_intervalo_novo_w := cd_intervalo_cad_w;
				qt_operacao_w := nr_ocorrencia_kit_w;
				ds_horarios_novo_w := ds_horarios_kit_w || ds_horario_ww;
		
			end if;
		end if;
		
	end if;

	if (ie_acm_w = 'S') or (ie_se_necessario_w = 'S') then
		
		select	coalesce(max(b.qt_se_necessario),0),
				coalesce(max(b.ie_mesmo_zerado),'N')
		into STRICT	qt_operacao_w,
				ie_mesmo_zerado_w
		from	intervalo_setor b,
				intervalo_prescricao a
		where	a.cd_intervalo 		= b.cd_intervalo
		and		coalesce(b.cd_setor_atendimento,cd_setor_atendimento_w)	= cd_setor_atendimento_w
		and		coalesce(b.cd_estab, cd_estabelecimento_w)			= cd_estabelecimento_w
		and		((b.cd_material = cd_material_w) or (coalesce(b.cd_material::text, '') = ''))
		and		((b.ie_via_aplicacao = coalesce(ie_via_aplicacao_w,b.ie_via_aplicacao)) or (coalesce(b.ie_via_aplicacao::text, '') = ''))
		and		((b.cd_unidade_basica = coalesce(obter_unid_atend_setor_atual(nr_atendimento_w,cd_setor_atendimento_w,'UB'),b.cd_unidade_basica)) or (coalesce(b.cd_unidade_basica::text, '') = ''))
		and		a.cd_intervalo 		= cd_intervalo_novo_w;
		
		if (coalesce(qt_operacao_w,0) = 0) and (ie_mesmo_zerado_w = 'N') then
			Select	coalesce(max(qt_se_necessario),1)
			into STRICT	qt_operacao_w
			from	intervalo_prescricao
			where	cd_intervalo = cd_intervalo_novo_w;
		end if;
	end if;

	if (qt_dose_especial_w > 0) then
		qt_dose_especial_ww	:= obter_conversao_unid_med_cons(cd_material_w,cd_unid_med_dose_w,qt_dose_w);
	end if;
	
	if (ie_agrupador_w = 9) then
		qt_operacao_w		:= qt_total_disp_w;
		qt_dose_especial_ww	:= null;
	end if;

		
	--Tratamento criado por conta do Fator de correcao	
	qt_dose_extra_w	:= 0;	
	if (qt_dose_w IS NOT NULL AND qt_dose_w::text <> '') and (qt_conversao_dose_w > 0) and (coalesce(ds_dose_diferenciada_w::text, '') = '') then			
		
		if (ie_agrupador_w in (3,7,9)) then
			qt_dose_extra_w := Obter_dose_extra_disp(nr_sequencia_diluicao_w, nr_prescricao_p, cd_unid_med_dose_w, cd_material_w, qt_dose_w);
		elsif (ie_agrupador_w = 1 ) then
			qt_dose_extra_w := Obter_dose_extra_disp(nr_sequencia_w, nr_prescricao_p, cd_unidade_medida_dose_w, cd_material_w, qt_dose_w);			
		end if;
		
		if (qt_dose_extra_w > 0) then
			qt_unitaria_w := (qt_dose_w + qt_dose_extra_w)/qt_conversao_dose_w;
		end if;			
	end if;
	--Fim tratamento fator correcao

	
	
	-- Considerar a cd_unid_med_dose_w quando o item for de kit ou diluente
	if ((cd_kit_material_w IS NOT NULL AND cd_kit_material_w::text <> '') or (nr_sequencia_diluicao_w IS NOT NULL AND nr_sequencia_diluicao_w::text <> '')) then
		cd_um_dose_w := cd_unid_med_dose_w;
	else
		cd_um_dose_w := cd_unidade_medida_dose_w;
	end if;
	
	if (coalesce(qt_dose_especial_ww,0) = 0) then
		hr_dose_especial_ww := null;
	end if;	
		
	SELECT * FROM Obter_Quant_Dispensar(wheb_usuario_pck.get_cd_estabelecimento, cd_material_w, nr_prescricao_p, nr_sequencia_w, cd_intervalo_novo_w, ie_via_aplicacao_w, qt_unitaria_w, qt_dose_especial_ww, qt_operacao_w, null, ie_origem_inf_w, cd_um_dose_w, 1, qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w;

	
				
	if	(ie_agrupador_w = 1 AND qt_dose_extra_w > 0) then
	
		Update	prescr_material
		set	nr_ocorrencia		= qt_operacao_w,
			qt_total_dispensar	= qt_dispensar_w,
			qt_unitaria		= qt_unitaria_w,
			qt_material		= qt_material_w
		where	nr_sequencia		= nr_sequencia_w
		and	nr_prescricao		= nr_prescricao_p;
	
	else
	
		Update	prescr_material
		set	nr_ocorrencia		= qt_operacao_w,
			qt_total_dispensar	= qt_dispensar_w,
			qt_unitaria			= qt_unitaria_w,
			qt_material			= qt_material_w,
			cd_intervalo		= cd_intervalo_novo_w,
			ie_acm				= ie_acm_w,
			ie_se_necessario	= ie_se_necessario_w,
			ie_medicacao_paciente	= ie_medicacao_paciente_W,
			ie_utiliza_kit		= 'N',
			ie_urgencia			= ie_urgencia_w,
			ie_suspenso			= ie_suspenso_w,
			ie_regra_disp		= CASE WHEN ie_atualiza_regra_disp_p='N' THEN  ie_regra_disp  ELSE CASE WHEN coalesce(ie_regra_disp, 'X')='D' THEN  ie_regra_disp  ELSE ie_regra_disp_w END  END ,
			qt_dia_prim_hor		= qt_dia_prim_hor_w,
			ds_horarios			= CASE WHEN ie_se_necessario_w='S' THEN 'SN'  ELSE coalesce(ds_horarios_novo_w,ds_horarios) END ,
			hr_prim_horario		= CASE WHEN ie_se_necessario_w='S' THEN hr_prim_horario_ww  ELSE coalesce(hr_prim_horario_ww,hr_prim_horario) END ,
			qt_dose_especial	= qt_dose_especial_ww,
			hr_dose_especial 	= hr_dose_especial_ww,
			ie_dose_espec_agora = ie_dose_espec_agora_w		
		where	nr_sequencia		= nr_sequencia_w
		and	nr_prescricao		= nr_prescricao_p;
		
	end if;

end loop;
close C01;

exception when others then
	ds_erro_w	:= substr(to_char(sqlerrm),1,2000);
	CALL gerar_log_prescricao(nr_prescricao_p, nr_sequencia_p, 1, null, null, ds_erro_w, wheb_usuario_pck.get_nm_usuario, 4092, 'S');
end;

select	coalesce(max(a.ds_dose_diferenciada),'0'),
		coalesce(max(b.ds_horarios),max(a.hr_prim_horario)),
		coalesce(max(a.hr_prim_horario),'0'),
		coalesce(max(b.ie_operacao),'X')
into STRICT	ds_dose_diferenciada_w,
		ds_horarios,
		ds_prim_horario_w ,
		ie_operacao_w
from	intervalo_prescricao b,
		prescr_material a
where	a.cd_intervalo  = b.cd_intervalo
and		a.nr_sequencia  = nr_sequencia_p 
and		a.nr_prescricao = nr_prescricao_p;

ds_dose_diferenciada_w	:= ds_dose_diferenciada_w ||'-';
ds_horarios		:= ds_horarios ||' ';

if (ie_operacao_w = 'V') then
	ds_horarios_ordenados_w	:= reordenar_horarios(obter_data_medic_dose_dif(nr_prescricao_p,hr_prim_horario_ww),ds_horarios);
	if (ds_horarios_ordenados_w IS NOT NULL AND ds_horarios_ordenados_w::text <> '') and ((trim(both ds_horarios_ordenados_w) IS NOT NULL AND (trim(both ds_horarios_ordenados_w))::text <> '')) then
		ds_horarios_validade_w	:= tratar_validade_horarios_rep(nr_prescricao_p,ds_horarios_ordenados_w,hr_prim_horario_ww);
		if (ds_horarios_validade_w IS NOT NULL AND ds_horarios_validade_w::text <> '') and ((trim(both ds_horarios_validade_w) IS NOT NULL AND (trim(both ds_horarios_validade_w))::text <> '')) then
			ds_horarios			:= ds_horarios_validade_w;
			ie_tratar_fixo_validade_w	:= 'S';
		end if;
	end if;
end if;
begin
while(ds_dose_diferenciada_w IS NOT NULL AND ds_dose_diferenciada_w::text <> '') or (teste_w > 1000) LOOP
	begin
	ie_dose_diferenciada_w	:= 'S';
	teste_w := teste_w + 1;
	select position('-' in ds_dose_diferenciada_w) into STRICT k;
	select position(' ' in ds_horarios) into STRICT i;
	if (k > 0) then
		ds_dose_w		:= substr(ds_dose_diferenciada_w, 1, k-1);
		ds_dose_diferenciada_w	:= substr(ds_dose_diferenciada_w, k + 1, 250);
		ds_hora_w		:= substr(ds_horarios, 1, i-1);
		ds_horarios		:= substr(ds_horarios, i + 1, 250);	
	
		if (ds_dose_w <> '0') then			
			ds_horario_final_w := ds_horario_final_w || ds_hora_w ||' ';
		end if;
	end if;
	end;
END LOOP;

exception when others then
	CALL gerar_log_prescricao(nr_prescricao_p, nr_sequencia_p, 1, null, null, to_char(sqlerrm), wheb_usuario_pck.get_nm_usuario, 4092, 'S');
end;

if (ie_dose_diferenciada_w = 'S') and (ie_tratar_fixo_validade_w = 'S') then
	nr_ocorrencia_ww	:= obter_ocorrencias_horarios_rep(ds_horario_final_w);
else
	nr_ocorrencia_ww	:= -1;
end if;

begin
	qt_horas_estabilidade_w	:= obter_estabilidade_mat_prescr(nr_prescricao_p, nr_sequencia_p);	
exception when others then
	qt_horas_estabilidade_w := null;
	CALL gerar_log_prescricao(nr_prescricao_p, nr_sequencia_p, 1, null, null, to_char(sqlerrm), wheb_usuario_pck.get_nm_usuario, 4092, 'S');
end;

update	prescr_material
set		qt_horas_estabilidade	= qt_horas_estabilidade_w
where	1 = 1
and		nr_sequencia		= nr_sequencia_p
and		nr_prescricao		= nr_prescricao_p;

update	prescr_material
set		qt_horas_estabilidade	= qt_horas_estabilidade_w
where	1 = 1
and		nr_sequencia_diluicao	= nr_sequencia_p
and		nr_prescricao		= nr_prescricao_p;

/* 	OS 127208 - Caldas e Edilson.
if	(somente_numero(length(ds_horario_final_w)) > 0) and
	(ds_prim_horario_w <> '0') then
	update	prescr_material
	set	ds_horarios	= ds_horario_final_w,
		nr_ocorrencia	= decode(nr_ocorrencia_ww, -1, nr_ocorrencia, nr_ocorrencia_ww)
	where	nr_prescricao	= nr_prescricao_p
	and	nr_sequencia	= nr_sequencia_p;
end if;
*/
if (ie_Calc_vol_dil_aftpost_w = 'S' and cd_funcao_w <> 2314) then
	CALL calcular_vol_dil_Prescr_mat(nr_prescricao_p,nr_agrupador_w,nm_usuario_original_w);
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

Select	count(nr_agrupamento)
into STRICT	qt_itens_compostos_w
from	prescr_material
where	nr_prescricao	= nr_prescricao_p
and	nr_agrupamento	= nr_agrupador_w
and	nr_sequencia	<> nr_sequencia_p
and 	ie_agrupador = 1;

if (qt_itens_compostos_w > 0) then
	
	CALL Ajustar_itens_compostos(nr_prescricao_p, nr_sequencia_p,coalesce(wheb_usuario_pck.get_nm_usuario,nm_usuario_original_w));
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ajustar_prescr_material ( nr_prescricao_p bigint, nr_sequencia_p bigint, ie_atualiza_regra_disp_p text default null) FROM PUBLIC;

