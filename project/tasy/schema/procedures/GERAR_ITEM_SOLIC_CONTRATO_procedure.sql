-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_item_solic_contrato ( nr_solic_compra_p bigint, ie_utilizacao_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_item_w			integer;
cd_unidade_medida_compra_w	varchar(30);
cd_material_w			integer;
qt_material_w			integer;
vl_pagto_w			double precision;
nr_contrato_w			bigint;
nr_seq_regra_contrato_w		bigint;
nr_seq_contrato_w			bigint;
ie_tipo_conta_w			integer	:= 2;
cd_local_estoque_w		bigint;
cd_conta_contabil_w		varchar(20);
cd_centro_custo_w			bigint;
qt_registro_w			bigint;
param_w					funcao_param_usuario.vl_parametro%type;
nr_seq_crit_rateio_w		bigint;

qt_dias_entrega_w		contrato_regra_nf.qt_dias_entrega%type := 7;
qt_dia_corrido_w		bigint := 0;
qt_dia_util_w		bigint := 0;
param14_w					funcao_param_usuario.vl_parametro%type;
param38_w					funcao_param_usuario.vl_parametro%type;
cd_paciente_soli_compra_w   			CONTRATO_REGRA_NF.CD_PACIENTE_SOLI_COMPRA%type;
		
C01 CURSOR FOR
	SELECT	a.cd_material,
		a.qt_contrato,
		a.vl_pagto,
		a.nr_seq_regra_contrato,
		a.nr_seq_contrato,
		b.nr_seq_crit_rateio,
		b.cd_paciente_soli_compra
	from 	w_itens_contrato_selec a,
		contrato_regra_nf b
	where 	a.nr_seq_regra_contrato	= b.nr_sequencia
	and   	coalesce(a.ie_utilizacao,'SC') = ie_utilizacao_p;


BEGIN
select	count(*)
into STRICT	qt_registro_w
from	contrato
where	nr_sequencia in (SELECT	nr_seq_contrato
						from	w_itens_contrato_selec
						where	coalesce(ie_utilizacao,'SC') = ie_utilizacao_p)
and	coalesce(dt_aprovacao::text, '') = ''
and	coalesce(dt_reprovacao::text, '') = '';

param_w := obter_valor_param_usuario(913, 109, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);
param14_w := obter_valor_param_usuario(913, 14, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);
param38_w := obter_valor_param_usuario(913, 38, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);

if (qt_registro_w > 0) and (coalesce(param_w,'N') = 'S') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(140933);/*Favor salvar o registro da solicitacao de compras antes de acionar a opcao para gerar os itens a partir de um contrato.*/
end if;

select	count(*)
into STRICT	qt_registro_w
from	solic_compra
where	nr_solic_compra = nr_solic_compra_p;

if (qt_registro_w = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(460154);/*Favor salvar o registro da solicitacao de compras antes de acionar a opcao para gerar os itens a partir de um contrato.*/
end if;

select	cd_local_estoque,
	cd_centro_custo
into STRICT	cd_local_estoque_w,
	cd_centro_custo_w
from	solic_compra
where	nr_solic_compra = nr_solic_compra_p;

open C01;
loop
fetch C01 into	
	cd_material_w,
	qt_material_w,
	vl_pagto_w,
	nr_seq_regra_contrato_w,
	nr_seq_contrato_w,
	nr_seq_crit_rateio_w,
	cd_paciente_soli_compra_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	SELECT * FROM SELECT * FROM define_conta_contabil(
		2, cd_estabelecimento_p, null, null, null, null, cd_material_w, null, null, cd_local_estoque_w, cd_conta_contabil_w, cd_centro_custo_w, null, clock_timestamp()) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w INTO cd_conta_contabil_w, cd_centro_custo_w;

	if (length(cd_conta_contabil_w) = 0) then
		begin
		ie_tipo_conta_w	:= 3;
		if (coalesce(cd_centro_custo_w::text, '') = '') then
			ie_tipo_conta_w	:= 2;
		end if;
		SELECT * FROM define_conta_material(
			cd_estabelecimento_p, cd_material_w, ie_tipo_conta_w, null, null, null, null, null, null, null, cd_local_estoque_w, Null, clock_timestamp(), cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
		end;
	end if;
	
	select	coalesce(max(nr_item_solic_compra),0) + 1
	into STRICT	nr_item_w
	from	solic_compra_item
	where	nr_solic_compra = nr_solic_compra_p;

	select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UMC'),1,30) cd_unidade_medida_compra
	into STRICT	cd_unidade_medida_compra_w
	from	material
	where	cd_material = cd_material_w;
	
	qt_dias_entrega_w := 7;
	qt_dia_util_w := 0;
	qt_dia_corrido_w := 0;
		
	if (param38_w = 'C') then
		select coalesce(qt_dias_entrega,7)
		  into STRICT qt_dias_entrega_w
		  from contrato_regra_nf
		 where nr_seq_contrato = nr_seq_contrato_w
		   and nr_sequencia = nr_seq_regra_contrato_w;
	end if;		
	
	if (param14_w = 'S') then
		begin
			while(qt_dia_util_w <= qt_dias_entrega_w) loop
					
				if (obter_se_dia_util(clock_timestamp() + qt_dia_corrido_w, cd_estabelecimento_p) = 'S') then
					qt_dia_util_w	:= qt_dia_util_w + 1;
				end if;
							
				qt_dia_corrido_w	:= qt_dia_corrido_w + 1;
			
			end loop;
			
			qt_dias_entrega_w := qt_dia_corrido_w - 1;
		end;
	end if;

        insert into solic_compra_item(
		nr_solic_compra,
		nr_item_solic_compra,
		cd_material,
		cd_unidade_medida_compra,
		qt_material,
		dt_atualizacao,
		nm_usuario,
		ie_situacao,
		ie_geracao,
		dt_solic_item,
		nr_contrato,
		vl_unit_previsto,
		qt_conv_compra_est_orig,
		nr_seq_regra_contrato,
		cd_conta_contabil,
		qt_saldo_disp_estoque,
		nr_seq_criterio_rateio,
		cd_paciente_soli_compra
		)
	values (	nr_solic_compra_p,
		nr_item_w,
		cd_material_w,
		cd_unidade_medida_compra_w,
		qt_material_w,
		clock_timestamp(),
		nm_usuario_p,
		'A',
		'S',
		trunc(clock_timestamp() + qt_dias_entrega_w, 'dd'),
		nr_seq_contrato_w,
		coalesce(vl_pagto_w,0),
		obter_dados_material(cd_material_w,'QCE'),
		nr_seq_regra_contrato_w,
		cd_conta_contabil_w,
		obter_saldo_disp_estoque(cd_estabelecimento_p, cd_material_w, cd_local_estoque_w, trunc(clock_timestamp(),'mm')),
		nr_seq_crit_rateio_w,
		cd_paciente_soli_compra_w
		);

        insert into solic_compra_item_entrega(
		nr_solic_compra,
		nr_item_solic_compra,
		nr_item_solic_compra_entr,
		qt_entrega_solicitada,
		dt_entrega_solicitada,
		dt_atualizacao,
		nm_usuario)
	values (	nr_solic_compra_p,
		nr_item_w,
		1,
		qt_material_w,
		trunc(clock_timestamp() + qt_dias_entrega_w, 'dd'),
		clock_timestamp(),
		nm_usuario_p);

	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_item_solic_contrato ( nr_solic_compra_p bigint, ie_utilizacao_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

