-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE controlar_diag_pac_filho ( cd_doenca_p text, cd_doenca_superior_p text, nr_atendimento_p bigint, dt_diagnostico_p timestamp, nr_seq_interno_p bigint, nm_usuario_p text, ds_status_p text, ie_commit_p text default 'S') AS $body$
DECLARE

	
diagnostico_doenca_w	diagnostico_doenca%rowtype;
diagnostico_medico_w	diagnostico_medico%rowtype;
ds_comando_w		varchar(2000);
ds_atrib_visao_w	tabela_visao_atributo.nm_atributo%type;

classificacao_c CURSOR FOR
	SELECT 	ie_classificacao_diagnostico
	from 	classificacao_diagnostico
	where 	ie_valor_padrao = 'S'
	and 	(ie_classificacao_diagnostico IS NOT NULL AND ie_classificacao_diagnostico::text <> '');
	
BEGIN
	if (ds_status_p = 'LIBERAR') then
		update	diagnostico_doenca
		set		dt_liberacao = clock_timestamp(),
				ie_situacao = 'A'
		where	cd_doenca_superior = cd_doenca_p
		and		nr_atendimento = nr_atendimento_p
		and		dt_diagnostico = dt_diagnostico_p;
		
	elsif (ds_status_p = 'INATIVAR') then
		update	diagnostico_doenca
		set		dt_inativacao = clock_timestamp(),
				nm_usuario_inativacao = nm_usuario_p,
				ie_situacao = 'I'
		where	cd_doenca_superior = cd_doenca_p
		and		nr_atendimento = nr_atendimento_p
		and		dt_diagnostico = dt_diagnostico_p;
		
	elsif (ds_status_p = 'DELETAR') then
		delete from diagnostico_doenca
		where	cd_doenca_superior = cd_doenca_p
		and		nr_atendimento = nr_atendimento_p
		and		dt_diagnostico = dt_diagnostico_p;
	
	elsif (ds_status_p = 'IMPORTAR') then
	
		if (coalesce(cd_doenca_superior_p::text, '') = '') then
			diagnostico_medico_w.nr_atendimento :=  nr_atendimento_p;
			diagnostico_medico_w.dt_diagnostico := dt_diagnostico_p;
			diagnostico_medico_w.ie_tipo_diagnostico := 2;
			diagnostico_medico_w.cd_medico := obter_dados_atendimento(nr_atendimento_p, 'MR');
			diagnostico_medico_w.dt_atualizacao := clock_timestamp();
			diagnostico_medico_w.nm_usuario := nm_usuario_p;
			diagnostico_medico_w.ie_nivel_atencao := wheb_assist_pck.get_nivel_atencao_perfil;
			
			insert into diagnostico_medico values (diagnostico_medico_w.*);
		end if;
		
		diagnostico_doenca_w.cd_doenca := cd_doenca_p;
		diagnostico_doenca_w.cd_doenca_superior := cd_doenca_superior_p;
		diagnostico_doenca_w.ie_tipo_diagnostico := 2;
		diagnostico_doenca_w.nr_atendimento := nr_atendimento_p;
		diagnostico_doenca_w.dt_diagnostico := dt_diagnostico_p;
		diagnostico_doenca_w.dt_atualizacao := clock_timestamp();
		diagnostico_doenca_w.nm_usuario := nm_usuario_p;
		diagnostico_doenca_w.ie_situacao := 'A';
		diagnostico_doenca_w.ie_nivel_atencao := wheb_assist_pck.get_nivel_atencao_perfil;
		
		select	nextval('diagnostico_doenca_seq')
		into STRICT	diagnostico_doenca_w.nr_seq_interno
		;
		
		insert into diagnostico_doenca values (diagnostico_doenca_w.*);
		
		if (PKG_I18N.get_user_locale() = 'de_DE') then
			for r_conversao_w in classificacao_c loop
				begin
				
				if (r_conversao_w.ie_classificacao_diagnostico = 'DPE') then
					ds_atrib_visao_w := 'IE_DIAG_PRINC_EPISODIO';
				elsif (r_conversao_w.ie_classificacao_diagnostico = 'UBE') then
					ds_atrib_visao_w := 'IE_DIAG_REFERENCIA';
				elsif (r_conversao_w.ie_classificacao_diagnostico = 'BEH') then
					ds_atrib_visao_w := 'IE_DIAG_TRATAMENTO';
				elsif (r_conversao_w.ie_classificacao_diagnostico = 'AUF') then
					ds_atrib_visao_w := 'IE_DIAG_ADMISSAO';
				elsif (r_conversao_w.ie_classificacao_diagnostico = 'ENT') then
					ds_atrib_visao_w := 'IE_DIAG_ALTA';
				elsif (r_conversao_w.ie_classificacao_diagnostico = 'OPD') then
					ds_atrib_visao_w := 'IE_DIAG_CIRURGIA';
				elsif (r_conversao_w.ie_classificacao_diagnostico = 'TOD') then
					ds_atrib_visao_w := 'IE_DIAG_OBITO';
				elsif (r_conversao_w.ie_classificacao_diagnostico = 'POD') then
					ds_atrib_visao_w := 'IE_DIAG_PRE_CIR';
				elsif (r_conversao_w.ie_classificacao_diagnostico = 'FAC') then
					ds_atrib_visao_w := 'IE_DIAG_PRINC_DEPART';
				elsif (r_conversao_w.ie_classificacao_diagnostico = 'BHS') then
					ds_atrib_visao_w := 'IE_DIAG_TRAT_CERT';
				elsif (r_conversao_w.ie_classificacao_diagnostico = 'FAL') then
					ds_atrib_visao_w := 'IE_DIAG_CRONICO';
				elsif (r_conversao_w.ie_classificacao_diagnostico = 'ASV') then
					ds_atrib_visao_w := 'IE_DIAG_TRAT_ESPECIAL';		
				end if;
				
				if (ds_atrib_visao_w IS NOT NULL AND ds_atrib_visao_w::text <> '')then
					ds_comando_w	:= 	'update diagnostico_doenca 
								 set '||ds_atrib_visao_w||' = ''S''
								 where nr_seq_interno = '|| diagnostico_doenca_w.nr_seq_interno;
										
					EXECUTE ds_comando_w;
				end if;
				end;
			end loop;
		end if;
	end if;
	
	if (coalesce(ie_commit_p,'N') = 'S') and (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then
		commit;
	end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE controlar_diag_pac_filho ( cd_doenca_p text, cd_doenca_superior_p text, nr_atendimento_p bigint, dt_diagnostico_p timestamp, nr_seq_interno_p bigint, nm_usuario_p text, ds_status_p text, ie_commit_p text default 'S') FROM PUBLIC;

