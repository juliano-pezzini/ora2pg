-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_conta ( nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

_ora2pg_r RECORD;
/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Consistir a conta no complemento de contas medicas
----------------------------------------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [  ] Tasy (Delphi/Java) [ x ] Portal [  ] Relatorios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------

Pontos de atencao:  

Alteracoes
-------------------------------------------------------------------------------------------------------------------

jjung OS 621943 - 22/06/2013 - 

Alteracao:	Incluido passagem do parametro NR_SEQ_ACAO_ANALISE_P para a rotina 
	PLS_OC_CTA_GERAR_COMBINADA.

Motivo:	Foi criada estrutura para que seja possivel reconsistir algumas ocorrencias na analise 
	apos tomar alguma acao sobre o item. As ocorrencias que serao reconsistidas para cada
	acao serao definidas pelo usuario, portanto ao executar a acao sera chamada a 
	PLS_OC_CTA_GERAR_COMBINADA passando acao desejada.
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ie_situacao_protocolo_w	= 'A'	(aceito)
	ie_situacao_protocolo_w	= 'RE'	(rejeitado);
*/nr_seq_prestador_w		bigint;
nr_seq_prestador_exec_w		bigint;
nr_seq_saida_sadt_w		bigint;
ie_espec_valido_w		varchar(1);
ie_valida_guia_null_w		varchar(1);
nr_seq_tipo_atend_w		bigint;
nr_seq_tipo_acomod_w		bigint;
nr_seq_saida_int_w		bigint;
nr_seq_grau_partic_w		bigint;
nr_seq_diagnostico_w		bigint;
cd_doenca_imp_w			varchar(10);
ds_diagnostico_imp_w		varchar(2000);
ie_classificacao_w		varchar(2);
qt_controle_w			bigint;
cd_medico_executor_w		varchar(10);
cont_w				bigint;
nr_seq_segurado_w		bigint;
nr_seq_segurado_guia_w		bigint;
ie_situacao_protocolo_w		varchar(3)	:= 'A';
ie_situacao_prot_proc_w		varchar(3)	:= 'A';
ie_situacao_prot_mat_w		varchar(3)	:= 'A';
qt_registros_w			bigint;
ie_internacao_w			varchar(1)	:= 'N';
ie_tipo_guia_ref_w		varchar(2);
ds_tipo_guia_ref_w		varchar(100);
nr_seq_prestador_guia_w		bigint;
qt_nasc_vivos_termo_w		varchar(2);
ie_consistir_guia_w		varchar(2);
nr_crm_solic_w			varchar(20);
nr_seq_cbo_saude_w		bigint;
dt_envio_contas_w		timestamp;
qt_dias_envio_contas_w		integer;
nr_seq_guia_ref_w		bigint;
ie_status_guia_w		varchar(1);
ds_mensagem_guia_w		varchar(255);
cd_doenca_obito_imp_w		varchar(10);
ds_doenca_obito_imp_w		varchar(255);
nm_tabela_obito_imp_w		varchar(255);
nr_declaracao_obito_imp_w	varchar(20);
nr_seq_diagnostico_obito_w	bigint;
ds_observacao_w			varchar(4000) := '';
nr_seq_saida_consulta_w		bigint;
nr_seq_diagnostico_nasc_vivo_w	bigint;
nr_decl_diag_nasc_vivo_w	varchar(15);
cd_medico_solic_w		bigint;
qt_contas_w			bigint;
nm_prestador_imp_w		varchar(255);
qt_registro_w			bigint;
cd_cgc_prestador_prot_imp_w	varchar(14);
nr_cpf_prestador_prot_imp_w	varchar(11);
nr_seq_prestador_prot_imp_w	bigint;
nr_seq_clinica_ww		bigint;
ie_variacao_valor_w		varchar(2);
ie_variacao_qtd_w		varchar(2);
qt_permitida_w			bigint;
vl_permitido_w			double precision;
cd_versao_tiss_w		varchar(20);
dt_rescisao_w			timestamp;
dt_limite_utilizacao_w		timestamp;
ie_tipo_guia_prot_w		varchar(10);
ie_ignora_caracter_cid_w	varchar(2);
nm_usuario_w			varchar(20);
nr_seq_lote_conta_w		bigint;
qt_itens_w			bigint;
qt_diagnostico_w		bigint;
dt_validade_carteira_w		pls_guia_plano.dt_validade_senha%type;
cd_prestador_imp_w		varchar(255);
cd_guia_pesquisa_w		varchar(20);
cd_guia_w			varchar(20);
nr_seq_guia_cursor_w		bigint;
nr_seq_conselho_exec_w		bigint;
nr_seq_conselho_solic_w		bigint;
ie_tipo_segurado_w		varchar(255);
nr_seq_guia_benef_w		bigint;
ie_independe_regra_w		varchar(3);
cd_guia_imp_ww			varchar(20);
qt_material_w			bigint;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
cd_estabelecimento_w		pls_conta.cd_estabelecimento%type;
nr_seq_prestador_imp_w		pls_conta.nr_seq_prestador_imp%type;
cd_cgc_prestador_imp_w		pls_conta.cd_cgc_prestador_imp%type;
cd_cpf_prestador_imp_w		pls_conta.cd_cpf_prestador_imp%type;
nr_seq_prestador_exec_imp_w	pls_conta.nr_seq_prestador_exec_imp%type;
cd_cgc_prestador_exec_imp_w	pls_conta.cd_cgc_executor_imp%type;
cd_cpf_prestador_exec_imp_w	pls_conta.cd_cpf_executor_imp%type;	
cd_guia_imp_w			pls_conta.cd_guia_imp%type;
dt_autorizacao_imp_w		pls_conta.dt_autorizacao_imp%type;
cd_senha_imp_w			pls_conta.cd_senha_imp%type;
dt_validade_senha_imp_w		pls_conta.dt_validade_senha_imp%type;
dt_emissao_imp_w		pls_conta.dt_emissao_imp%type;
cd_medico_solicitante_imp_w	pls_conta.cd_medico_solicitante_imp%type;
ie_indicacao_acidente_imp_w	pls_conta.ie_indicacao_acidente_imp%type;
ie_tipo_doenca_imp_w		pls_conta.ie_tipo_doenca_imp%type;
ie_carater_internacao_imp_w	pls_conta.ie_carater_internacao_imp%type;
nr_seq_clinica_imp_w		pls_conta.nr_seq_clinica_imp%type;
ie_regime_internacao_imp_w	pls_conta.ie_regime_internacao_imp%type;
cd_guia_solic_imp_w		pls_conta.cd_guia_solic_imp%type;
vl_procedimentos_imp_w		pls_conta.vl_procedimentos_imp%type;
vl_diarias_imp_w		pls_conta.vl_diarias_imp%type;
vl_taxas_imp_w			pls_conta.vl_taxas_imp%type;
vl_materiais_imp_w		pls_conta.vl_materiais_imp%type;
vl_medicamentos_imp_w		pls_conta.vl_medicamentos_imp%type;
vl_gases_imp_w			pls_conta.vl_gases_imp%type;
vl_opm_imp_w			pls_conta.vl_opm_imp%type;
vl_total_imp_w			pls_conta.vl_total_imp%type;
cd_guia_prestador_imp_w		pls_conta.cd_guia_prestador_imp%type;
cd_tipo_acomocadao_imp_w	pls_conta.cd_tipo_acomodacao_imp%type;
ie_tipo_atendimento_imp_w	pls_conta.ie_tipo_atendimento_imp%type;
cd_motivo_alta_imp_w		pls_conta.cd_motivo_alta_imp%type;
dt_entrada_imp_w		pls_conta.dt_entrada_imp%type;
ie_aborto_imp_w			pls_conta.ie_aborto_imp%type;
ie_atend_rn_sala_parto_imp_w	pls_conta.ie_atend_rn_sala_parto_imp%type;
ie_baixo_peso_imp_w		pls_conta.ie_baixo_peso_imp%type;
ie_complicacao_neonatal_imp_w	pls_conta.ie_complicacao_neonatal_imp%type;
ie_complicacao_puerperio_imp_w	pls_conta.ie_complicacao_puerperio_imp%type;
ie_gestacao_imp_w		pls_conta.ie_gestacao_imp%type;
ie_obito_imp_w			pls_conta.ie_obito_imp%type;
ie_parto_cesaria_imp_w		pls_conta.ie_parto_cesaria_imp%type;
ie_parto_normal_imp_w		pls_conta.ie_parto_normal_imp%type;
ie_transtorno_imp_w		pls_conta.ie_transtorno_imp%type;
ie_tipo_guia_w			pls_conta.ie_tipo_guia%type;
sg_conselho_exec_imp_w		pls_conta.sg_conselho_exec_imp%type;
cd_usuario_plano_imp_w		pls_conta.cd_usuario_plano_imp%type;
sg_conselho_solic_imp_w		pls_conta.sg_conselho_exec_imp%type;
cd_ans_w			pls_conta.cd_ans_imp%type;
cd_cnes_imp_w			pls_conta.cd_cnes_imp%type;
cd_cnes_w			pls_conta.cd_cnes%type;
qt_nasc_vivos_prematuros_imp_w	pls_conta.qt_nasc_vivos_prematuros_imp%type;
qt_obito_precoce_imp_w		pls_conta.qt_obito_precoce_imp%type;
qt_obito_tardio_imp_w		pls_conta.qt_obito_tardio_imp%type;
qt_nasc_vivos_imp_w		pls_conta.qt_nasc_vivos_imp%type;
qt_nasc_mortos_imp_w		pls_conta.qt_nasc_mortos_imp%type;
ie_tipo_faturamento_w		pls_conta.ie_tipo_faturamento%type;
nr_crm_exec_imp_w		pls_conta.nr_crm_exec_imp%type;
uf_crm_exec_imp_w		pls_conta.uf_crm_exec_imp%type;
cd_cbo_saude_exec_imp_w		pls_conta.cd_cbo_saude_exec_imp%type;
nm_medico_executor_imp_w	pls_conta.nm_medico_executor_imp%type;
ie_funcao_executor_imp_w	pls_conta.ie_funcao_executor_imp%type;
nr_crm_prest_solic_imp_w	pls_conta.nr_crm_prest_solic_imp%type;
sg_cons_prest_solic_imp_w	pls_conta.sg_cons_prest_solic_imp%type;
uf_crm_prest_solic_imp_w	pls_conta.uf_crm_prest_solic_imp%type;
dt_alta_imp_w			pls_conta.dt_alta_imp%type;
dt_atendimento_w		pls_conta.dt_atendimento_imp%type;
qt_nasc_vivos_w			pls_conta.qt_nasc_vivos%type;
cd_prestador_exec_imp_w		pls_conta.cd_prestador_exec_imp%type;
cd_prestador_solic_imp_w	pls_conta.cd_prestador_solic_imp%type;
ie_tipo_consulta_imp_w		pls_conta.ie_tipo_consulta_imp%type;
qt_glosa_ativa_w		integer;
ie_recem_nascido_imp_w		pls_conta.ie_recem_nascido_imp%type;
dt_fim_faturamento_w		pls_conta.dt_fim_faturamento_imp%type;
dt_inicio_faturamento_w		pls_conta.dt_inicio_faturamento_imp%type;
ie_indicador_dorn_w		pls_diagnost_conta_obito.ie_indicador_dorn%type;
ie_motivo_encerramento_w	pls_conta.ie_motivo_encerramento%type;
cd_motivo_alta_w		pls_conta.cd_motivo_alta_imp%type;
nr_seq_prestador_imp_prot_w	pls_protocolo_conta.nr_seq_prestador_imp%type;
cd_tipo_atend_odont_imp_w	pls_conta.cd_tipo_atend_odont_imp%type;
cd_tipo_atend_odont_w		pls_conta.cd_tipo_atend_odont%type;
qt_classificacao_princ_w	integer;
nr_seq_guia_cta_w		pls_guia_plano.nr_sequencia%type;
cd_guia_ok_w			pls_conta.cd_guia_ok%type;

/* Criadao parametro para tratar em todas as glosas da conta,  o mesmo sempre e limpado no inicio do loop */

ds_observacao_glosa_w		varchar(4000) := '';
ds_indicacao_clinica_imp_w	pls_conta.ds_indicacao_clinica_imp%type;
nr_seq_prestador_aux_w		pls_protocolo_conta.nr_seq_prestador%type;
ie_prestador_autorizacao_w	pls_param_importacao_conta.ie_prestador_autorizacao%type;
ie_codigo_prest_operadora_w	pls_param_importacao_conta.ie_codigo_prest_operadora%type;
cd_cgc_guia_w			pls_prestador.cd_cgc%type;
cd_pf_guia_w			pls_prestador.cd_pessoa_fisica%type;
cd_prestador_aux_w		pls_prestador.cd_prestador_upper_espe%type;
cd_prestador_autorizacao_w	pls_prestador.cd_prestador%type;
nr_seq_guia_w			pls_guia_plano.nr_sequencia%type;
nr_seq_guia_ww			pls_guia_plano.nr_sequencia%type;
cd_cbo_saude_solic_imp_w	pls_conta.cd_cbo_saude_solic_imp%type;
nr_seq_cbo_saude_solic_w	pls_conta.nr_seq_cbo_saude_solic%type;
ds_observacao_data_w		pls_conta_glosa.ds_observacao%type;
dt_ref_atendimento_w		pls_conta.dt_atendimento_referencia%type;
ie_ocorrencia_w			pls_controle_estab.ie_ocorrencia%type := 'N';
ie_valoriza_w			pls_regra_valorizacao_cta.ie_valoriza%type;
ie_origem_protocolo_w		pls_protocolo_conta.ie_origem_protocolo%type;
cd_senha_externa_w		pls_conta.cd_senha_externa%type;
dt_protocolo_w			pls_protocolo_conta.dt_protocolo%type;
cd_guia_pesq_aut_w		pls_guia_plano.cd_guia_pesquisa%type;
dt_alta_w				timestamp;
ie_validar_prazo_env_princ_w	pls_parametros.ie_validar_prazo_env_princ%type;
dt_comparar_w			timestamp;
ie_agrupar_xml_web_w	pls_param_importacao_conta.ie_agrupar_xml_web%type;
nr_seq_lote_w			pls_lote_protocolo_conta.nr_sequencia%type;
nr_protocolo_prestador_w	pls_protocolo_conta.nr_protocolo_prestador%type;

c01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_estabelecimento,
		nr_seq_prestador_imp,
		substr(elimina_caractere_especial(cd_cgc_prestador_imp),1,14) cd_cgc_prestador_imp,
		substr(elimina_caractere_especial(cd_cpf_prestador_imp),1,11) cd_cpf_prestador_imp,		
		nr_seq_prestador_exec_imp,
		substr(elimina_caractere_especial(cd_cgc_executor_imp),1,14) cd_cgc_executor_imp,
		substr(elimina_caractere_especial(cd_cpf_executor_imp),1,11) cd_cpf_executor_imp,
		cd_guia_imp,
		dt_autorizacao_imp,
		cd_senha_imp,
		dt_validade_senha_imp,
		dt_atendimento_imp_referencia,
		cd_medico_solicitante_imp,
		ie_indicacao_acidente_imp,
		ie_tipo_doenca_imp,
		substr(ie_carater_internacao_imp,1,1) ie_carater_internacao_imp, /*Diego 337251- Documentacao vide OS(Hist, 25/07/2011 08:47:14).*/
		nr_seq_clinica_imp,
		ie_regime_internacao_imp,
		cd_guia_solic_imp,		
		vl_procedimentos_imp,
		vl_diarias_imp,
		vl_taxas_imp,
		vl_materiais_imp,
		vl_medicamentos_imp,
		vl_gases_imp,
		vl_opm_imp,
		vl_total_imp,
		cd_guia_prestador_imp,
		cd_tipo_acomodacao_imp,
		ie_tipo_atendimento_imp,
		cd_motivo_alta_imp,		
		dt_entrada_imp,
		ie_aborto_imp,
		ie_atend_rn_sala_parto_imp,
		ie_baixo_peso_imp,
		ie_complicacao_neonatal_imp,
		ie_complicacao_puerperio_imp,
		ie_gestacao_imp,
		ie_obito_imp,
		ie_parto_cesaria_imp,
		ie_parto_normal_imp,
		ie_transtorno_imp,
		ie_tipo_guia,
		sg_conselho_exec_imp,
		cd_usuario_plano_imp,
		coalesce(sg_conselho_exec_imp, sg_conselho_solic_imp) sg_conselho_solic_imp,
		cd_ans_imp,
		cd_cnes_executor_imp,
		coalesce(qt_nasc_vivos_prematuros_imp,'0') qt_nasc_vivos_prematuros_imp,
		coalesce(qt_obito_precoce_imp,'0') qt_obito_precoce_imp,
		coalesce(qt_obito_tardio_imp,'0') qt_obito_tardio_imp,
		coalesce(qt_nasc_vivos_imp,'0') qt_nasc_vivos_imp,
		coalesce(qt_nasc_mortos_imp,'0') qt_nasc_mortos_imp,
		substr(ie_tipo_faturamento_imp,1,1) ie_tipo_faturamento_imp,
		nr_crm_exec_imp,
		uf_crm_exec_imp,
		cd_cbo_saude_exec_imp,
		nm_medico_executor_imp,
		ie_funcao_executor_imp,
		nr_crm_prest_solic_imp,
		sg_cons_prest_solic_imp,
		uf_crm_prest_solic_imp,
		dt_alta_imp,
		dt_atendimento_imp,
		qt_nasc_vivos,
		cd_prestador_exec_imp,
		cd_prestador_solic_imp,
		ie_tipo_consulta_imp,
		nr_seq_segurado,
		ie_recem_nascido_imp,
		dt_fim_faturamento_imp,
		dt_inicio_faturamento_imp,
		ie_motivo_encerramento,
		ds_indicacao_clinica_imp,
		cd_tipo_atend_odont_imp,
		nr_seq_guia,
		cd_cbo_saude_solic_imp,
		dt_atendimento_referencia,
		nr_seq_guia,
		ie_tipo_segurado
	from	pls_conta
	where	nr_seq_protocolo = nr_seq_protocolo_p;

c04 CURSOR FOR
	SELECT	nr_sequencia,
		CASE WHEN coalesce(ie_ignora_caracter_cid_w,'N')='N' THEN  cd_doenca_imp  ELSE replace(replace(replace(cd_doenca_imp,'.', ''),',', ''),'-', '') END ,
		ds_diagnostico_imp,
		ie_indicacao_acidente_imp,
		ie_tipo_doenca_imp
	from	pls_diagnostico_conta a
	where	nr_seq_conta	= nr_seq_conta_w
	order by nr_sequencia;

c05 CURSOR FOR
	SELECT	nr_sequencia,
		CASE WHEN coalesce(ie_ignora_caracter_cid_w,'N')='N' THEN  cd_doenca_imp  ELSE replace(replace(replace(cd_doenca_imp,'.', ''),',', ''),'-', '') END ,
		nm_tabela_imp,
		ds_doenca_imp,
		nr_declaracao_obito_imp,
		ie_indicador_dorn_imp
	from	pls_diagnost_conta_obito
	where	nr_seq_conta	= nr_seq_conta_w;
	
c06 CURSOR FOR
	SELECT	nr_sequencia,
		nr_decl_nasc_vivo_imp
	from	pls_diagnostico_nasc_vivo
	where	nr_seq_conta = nr_seq_conta_w;
	
/* Cursor para obter todas as guia do beneficiario */

c09 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_guia
	from	pls_guia_plano a
	where	a.nr_seq_segurado = nr_seq_segurado_w;
	

BEGIN
ie_ocorrencia_w := pls_obter_se_controle_estab('GO');

CALL wheb_usuario_pck.set_nm_usuario(nm_usuario_p);

/* Rotina chamada pora setar o campo DT_INICIO_VALIDACAO da tabela PLS_XML_ARQUIVO
Esta rotina e utilizada somente para importacao por lote  existe um COMMIT dentro da rotina por isso deve ser chamada no inicio */
CALL pls_gerar_conta_imp_fila_web(nr_seq_protocolo_p);

SELECT * FROM pls_obter_glosa_producao_med(nr_seq_protocolo_p, null, null, null, null, null, null, ie_variacao_valor_w, ie_variacao_qtd_w, qt_permitida_w, vl_permitido_w) INTO STRICT ie_variacao_valor_w, ie_variacao_qtd_w, qt_permitida_w, vl_permitido_w;
			

if (ie_variacao_valor_w = 'ME') then
	ds_observacao_w := 'O valor do protocolo e menor que o valor estabelecido pelo operadora com base no(s) ultimo(s) protocolo(s) enviado(s) (OPS - Cadastro de Regra - Contas Medicas - Controle de Producao Medica).'||
			   'O valor do protocolo atual deve ser maior que R$'||Campo_Mascara_virgula_casas(vl_permitido_w,2)||'.';
elsif (ie_variacao_valor_w = 'MA') then
	ds_observacao_w := 'O valor do protocolo e maior que o valor estabelecido pelo operadora com base no(s) ultimo(s) protocolo(s) enviado(s) (OPS - Cadastro de Regra - Contas Medicas - Controle de Producao Medica).'||
			   'O valor do protocolo atual deve ser menor que R$'||Campo_Mascara_virgula_casas(vl_permitido_w,2)||'.';
end if;

if (ie_variacao_qtd_w = 'QE') then

	if (coalesce(ds_observacao_w,'X') <> 'X') then
		ds_observacao_w := ds_observacao_w||chr(10)||chr(13);
	end if;

	ds_observacao_w := ds_observacao_w||
			   'A quantidade de contas do protocolo e menor que a quantidade estabelecido pelo operadora com base no(s) ultimo(s) protocolo(s) enviado(s) (OPS - Cadastro de Regra - Contas Medicas - Controle de Producao Medica).'||
			   ' A quantidade do protocolo atual deve ser maior que '||qt_permitida_w||'.';
elsif (ie_variacao_qtd_w = 'QA') then

	if (coalesce(ds_observacao_w,'X') <> 'X') then
		ds_observacao_w := ds_observacao_w||chr(10)||chr(13);
	end if;	
	
	ds_observacao_w := ds_observacao_w||
			   'A quantidade de contas do protocolo e maior que a quantidade estabelecido pelo operadora com base no(s) ultimo(s) protocolo(s) enviado(s) (OPS - Cadastro de Regra - Contas Medicas - Controle de Producao Medica).'||
			   ' A quantidade do protocolo atual deve ser menor que '||qt_permitida_w||'.';
end if;

select	cd_estabelecimento,
	nm_prestador_imp,
	substr(elimina_caractere_especial(cd_cgc_prestador_imp),1,14),
	substr(elimina_caractere_especial(nr_cpf_prestador_imp),1,11),
	substr(nr_seq_prestador_imp_ref,1,10),
	cd_versao_tiss,
	ie_tipo_guia,
	nm_usuario,
	nr_seq_lote_conta,
	cd_prestador_imp,
	nr_seq_prestador_imp,
	ie_origem_protocolo,
	dt_protocolo,
	nr_protocolo_prestador
into STRICT	cd_estabelecimento_w,
	nm_prestador_imp_w,
	cd_cgc_prestador_prot_imp_w,
	nr_cpf_prestador_prot_imp_w,
	nr_seq_prestador_prot_imp_w,
	cd_versao_tiss_w,
	ie_tipo_guia_prot_w,
	nm_usuario_w,
	nr_seq_lote_conta_w,
	cd_prestador_imp_w,
	nr_seq_prestador_imp_prot_w,
	ie_origem_protocolo_w,
	dt_protocolo_w,
	nr_protocolo_prestador_w
from	pls_protocolo_conta
where	nr_sequencia = nr_seq_protocolo_p;

select	max(ie_ignora_caracter_cid),
	coalesce(max(ie_prestador_autorizacao),'N'),
	max(ie_codigo_prest_operadora),
	coalesce(max(ie_agrupar_xml_web),'N')
into STRICT	ie_ignora_caracter_cid_w,
	ie_prestador_autorizacao_w,
	ie_codigo_prest_operadora_w,
	ie_agrupar_xml_web_w
from	pls_param_importacao_conta
where	cd_estabelecimento = cd_estabelecimento_w;

select 	coalesce(max(ie_validar_prazo_env_princ),'N')
into STRICT	ie_validar_prazo_env_princ_w
from	pls_parametros
where	cd_estabelecimento = cd_estabelecimento_w;

/* Obter os prestadores do protocolo */
	
if (cd_cgc_prestador_prot_imp_w IS NOT NULL AND cd_cgc_prestador_prot_imp_w::text <> '') then
	nr_seq_prestador_aux_w	:= pls_obter_prestador_cgc(	cd_cgc_prestador_prot_imp_w,null);
	
	if (nr_seq_prestador_aux_w IS NOT NULL AND nr_seq_prestador_aux_w::text <> '') then
		nr_seq_prestador_prot_imp_w	:= nr_seq_prestador_aux_w;
	end if;	
end if;

if (coalesce(nr_seq_prestador_prot_imp_w::text, '') = '') then
	nr_seq_prestador_prot_imp_w	:= pls_obter_prestador_imp(cd_cgc_prestador_prot_imp_w, nr_cpf_prestador_prot_imp_w, nr_seq_prestador_imp_prot_w, null, null, null, 'C', null, dt_protocolo_w);
end if;

qt_controle_w := 0;
CALL gravar_processo_longo('','PLS_GERAR_CONTA',qt_controle_w);
CALL pls_consistir_elegibibilidade(nr_seq_protocolo_p, null, nm_usuario_p, cd_estabelecimento_w);

--begin
open c01;
loop
fetch c01 into
	nr_seq_conta_w,
	cd_estabelecimento_w,
	nr_seq_prestador_imp_w,
	cd_cgc_prestador_imp_w,
	cd_cpf_prestador_imp_w,
	nr_seq_prestador_exec_imp_w,
	cd_cgc_prestador_exec_imp_w,
	cd_cpf_prestador_exec_imp_w,	
	cd_guia_imp_w,
	dt_autorizacao_imp_w,
	cd_senha_imp_w,
	dt_validade_senha_imp_w,
	dt_emissao_imp_w,
	cd_medico_solicitante_imp_w,
	ie_indicacao_acidente_imp_w,
	ie_tipo_doenca_imp_w,
	ie_carater_internacao_imp_w,
	nr_seq_clinica_imp_w,
	ie_regime_internacao_imp_w,
	cd_guia_solic_imp_w,	
	vl_procedimentos_imp_w,
	vl_diarias_imp_w,
	vl_taxas_imp_w,
	vl_materiais_imp_w,
	vl_medicamentos_imp_w,
	vl_gases_imp_w,
	vl_opm_imp_w,
	vl_total_imp_w,
	cd_guia_prestador_imp_w,
	cd_tipo_acomocadao_imp_w,
	ie_tipo_atendimento_imp_w,
	cd_motivo_alta_imp_w,
	dt_entrada_imp_w,
	ie_aborto_imp_w,
	ie_atend_rn_sala_parto_imp_w,
	ie_baixo_peso_imp_w,
	ie_complicacao_neonatal_imp_w,
	ie_complicacao_puerperio_imp_w,
	ie_gestacao_imp_w,
	ie_obito_imp_w,
	ie_parto_cesaria_imp_w,
	ie_parto_normal_imp_w,
	ie_transtorno_imp_w,
	ie_tipo_guia_w,
	sg_conselho_exec_imp_w,
	cd_usuario_plano_imp_w,
	sg_conselho_solic_imp_w,
	cd_ans_w,
	cd_cnes_imp_w,
	qt_nasc_vivos_prematuros_imp_w,
	qt_obito_precoce_imp_w,
	qt_obito_tardio_imp_w,
	qt_nasc_vivos_imp_w,
	qt_nasc_mortos_imp_w,
	ie_tipo_faturamento_w,
	nr_crm_exec_imp_w,
	uf_crm_exec_imp_w,
	cd_cbo_saude_exec_imp_w,
	nm_medico_executor_imp_w,
	ie_funcao_executor_imp_w,
	nr_crm_prest_solic_imp_w,
	sg_cons_prest_solic_imp_w,
	uf_crm_prest_solic_imp_w,
	dt_alta_imp_w,
	dt_atendimento_w,
	qt_nasc_vivos_w,
	cd_prestador_exec_imp_w,
	cd_prestador_solic_imp_w,
	ie_tipo_consulta_imp_w,
	nr_seq_segurado_w,
	ie_recem_nascido_imp_w,
	dt_fim_faturamento_w,
	dt_inicio_faturamento_w,
	ie_motivo_encerramento_w,
	ds_indicacao_clinica_imp_w,
	cd_tipo_atend_odont_imp_w,
	nr_seq_guia_ww,
	cd_cbo_saude_solic_imp_w,
	dt_ref_atendimento_w,
	nr_seq_guia_w,
	ie_tipo_segurado_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	
	select	max(dt_alta)
	into STRICT	dt_alta_w
	from	pls_conta
	where	cd_guia_referencia	= cd_guia_solic_imp_w
	and		nr_seq_segurado = nr_seq_segurado_w
	and		ie_tipo_guia = 5;
	
	if (ie_validar_prazo_env_princ_w = 'S') then
	
		dt_comparar_w := dt_alta_w;
		if (coalesce(dt_comparar_w::text, '') = '') then
			dt_comparar_w 	:= dt_emissao_imp_w;
		end if;
	else
		dt_comparar_w 	:= dt_emissao_imp_w;
	end if;
	
	nr_seq_prestador_w	:= null;
	nr_seq_prestador_exec_w	:= null;
	
	cd_guia_pesquisa_w	:= pls_converte_cd_guia_pesquisa(cd_guia_imp_w);
	
	/* Obter os prestadores da conta */

	if (cd_cgc_prestador_exec_imp_w IS NOT NULL AND cd_cgc_prestador_exec_imp_w::text <> '') then
		nr_seq_prestador_aux_w	:= pls_obter_prestador_cgc(	cd_cgc_prestador_exec_imp_w,null, cd_estabelecimento_w);
		if (nr_seq_prestador_aux_w IS NOT NULL AND nr_seq_prestador_aux_w::text <> '') then
			nr_seq_prestador_exec_w	:= nr_seq_prestador_aux_w;
		end if;	
	end if;

	if (coalesce(nr_seq_prestador_exec_w::text, '') = '') then
	
		--Somente faz sentido essa verficacao para setar o prestador executor, quando for via codigo, pois nesse caso podem existir mais 

		--de um prestador com mesmo codigo e entao se estiver parametrizado para buscar o prestador autorizado, entao busca a 
		if (ie_prestador_autorizacao_w = 'S' and ie_codigo_prest_operadora_w = 'C') then
			if (nr_seq_guia_ww IS NOT NULL AND nr_seq_guia_ww::text <> '') then
			        select	max(nr_seq_prestador)
				into STRICT	nr_seq_prestador_guia_w		
				from	pls_guia_plano a
				where	a.nr_sequencia = nr_seq_guia_ww;
			else
				select 	max(nr_seq_prestador)
				into STRICT	nr_seq_prestador_guia_w		
				from	pls_guia_plano a
				where	a.cd_guia_pesquisa = cd_guia_pesquisa_w;
			end if;
			
			
			if (nr_seq_prestador_guia_w IS NOT NULL AND nr_seq_prestador_guia_w::text <> '') then
				begin
				select 	max(cd_cgc),
					max(cd_pessoa_fisica),
					max(cd_prestador)
				into STRICT	cd_cgc_guia_w,
					cd_pf_guia_w,
					cd_prestador_autorizacao_w
				from	pls_prestador
				where	nr_sequencia = nr_seq_prestador_guia_w
				and	ie_situacao 	= 'A'
				and	((coalesce(dt_exclusao::text, '') = '') or (dt_exclusao 	>= clock_timestamp()));
				end;
			end if;

			if	(	( coalesce(cd_cgc_guia_w,'x') 	    = coalesce(cd_cgc_prestador_exec_imp_w,'Z')) or ( coalesce(cd_prestador_exec_imp_w, 'X') = coalesce(cd_prestador_autorizacao_w,'Z')) or ( coalesce(cd_pf_guia_w,'X') 	    = coalesce( cd_cpf_prestador_exec_imp_w,'Z'))
				) then
				nr_seq_prestador_exec_w := nr_seq_prestador_guia_w;
			end if;
			
		end if;
		
		if (coalesce(nr_seq_prestador_exec_w::text, '') = '') then
			nr_seq_prestador_exec_w	:= pls_obter_prestador_imp(cd_cgc_prestador_exec_imp_w, cd_cpf_prestador_exec_imp_w, nr_seq_prestador_exec_imp_w,
									null, null, null,'C',cd_estabelecimento_w,dt_ref_atendimento_w);
		end if;
	end if;
	
	cd_medico_executor_w	:= null;
	cd_medico_solic_w	:= null;
	ds_observacao_glosa_w	:= '';
	
	if (ie_tipo_guia_prot_w = '4') then  /* Felipe - 11/08/2011 - OS 338408 - Nao existe medico solic. para resumo de internacao */
		SELECT * FROM pls_valida_medico_importacao(nr_seq_protocolo_p, 'MS', null, null, nr_seq_conta_w, cd_estabelecimento_w, nm_usuario_p, cd_medico_solic_w, nr_crm_solic_w) INTO STRICT _ora2pg_r;
 cd_medico_solic_w := _ora2pg_r.cd_medico_p; nr_crm_solic_w := _ora2pg_r.cd_crm_p;
	end if;
	
	if (coalesce(ds_observacao_w,'X') <> 'X') then		
		CALL pls_gravar_conta_glosa('1099', nr_seq_conta_w, null,
						null, 'N', ds_observacao_w,
						nm_usuario_p,'A','IA',
						nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
	end if;
	
	ie_internacao_w		:= pls_obter_se_internado(nr_seq_conta_w, 'C');
	cd_usuario_plano_imp_w	:= elimina_caracteres_especiais(cd_usuario_plano_imp_w);
	
	/*	Localizar prestador contratado 
	--Diego 19/09/2011 - Removido nvl - Estava ocorrendo problemas na importacao caso o beneficiario nao fosse encontrado (carterinha errada)*/

		
	if	(nr_seq_segurado_w is not null) then
		select	max(dt_rescisao),
			max(fim_dia(dt_limite_utilizacao)) 
		into	dt_rescisao_w,
			dt_limite_utilizacao_w 
		from	pls_segurado a
		where	a.nr_sequencia	= nr_seq_segurado_w;
	end if;		
		
	/* Francisco - 16/11/2012  - Tratamento Cartao Intercambio - OS 518840*/

	if (cd_guia_imp_w IS NOT NULL AND cd_guia_imp_w::text <> '') and (ie_tipo_segurado_w in ('I','H') or coalesce(nr_seq_segurado_w::text, '') = '') then
		/* Achar a guia */

		select	max(a.nr_sequencia)
		into STRICT	nr_seq_guia_benef_w
		from	pls_guia_plano a
		where	a.cd_guia_pesquisa	= cd_guia_pesquisa_w;
		
		if (nr_seq_guia_benef_w IS NOT NULL AND nr_seq_guia_benef_w::text <> '') then

			select	max(a.nr_seq_segurado)
			into STRICT	nr_seq_segurado_guia_w
			from	pls_guia_plano a
			where	a.nr_sequencia = nr_seq_guia_benef_w;
			
			if (coalesce(nr_seq_segurado_w,0) <> nr_seq_segurado_guia_w) then
				select	max(a.nr_seq_segurado)
				into STRICT	nr_seq_segurado_w
				from	pls_segurado b,
					pls_segurado_carteira a
				where	a.nr_seq_segurado	= b.nr_sequencia
				and	b.ie_tipo_segurado	= 'T'
				and	a.nr_cartao_intercambio	= cd_usuario_plano_imp_w;
			end if;
		end if;
	end if;

	/*o restante das glosas deve ser tratado dentro da pls_consistir eligibibilidade*/

	if (coalesce(nr_seq_segurado_w,0) > 0) then
		CALL pls_consistir_elegibilidade(	nr_seq_segurado_w, 'IA', nr_seq_conta_w,
						'C', nr_seq_prestador_exec_w, null,
						'', nm_usuario_p, cd_estabelecimento_w);

		select	nr_seq_guia,
			cd_guia_ok
		into STRICT	nr_seq_guia_cta_w,
			cd_guia_ok_w
		from	pls_conta
		where	nr_sequencia = nr_seq_conta_w;
		
		if (coalesce(nr_seq_guia_cta_w::text, '') = '') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_guia_cta_w
			from	pls_guia_plano
			where	cd_guia		= cd_guia_ok_w
			and	ie_status 	= '1';
		end if;
		
		if (coalesce(nr_seq_guia_cta_w::text, '') = '') then
			if (dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') and (dt_emissao_imp_w > dt_limite_utilizacao_w) then
				CALL pls_gravar_conta_glosa('1014',nr_seq_conta_w,null,  
							null,'N','',   
							nm_usuario_p,'A','IA',   
							nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
			end if;
		end if;
	end if;
	
	/* Caso o prestador do protocolo nao for encontrado, o sistema ira lancar glosa para todas as contas do protocolo.*/

	if (coalesce(nr_seq_prestador_prot_imp_w,0) = 0) then
		CALL pls_gravar_conta_glosa('1203', nr_seq_conta_w, null,
					null, 'N', 'Prestador do protocolo nao encontrado na base. CGC: ' || cd_cgc_prestador_prot_imp_w || 
						'. CPF: ' || nr_cpf_prestador_prot_imp_w || '. Codigo: ' || cd_prestador_imp_w, 
					nm_usuario_p,'A','IA',
					nr_seq_prestador_prot_imp_w, cd_estabelecimento_w, '', null);
	end if;
	
	/* Felipe - OS 295904 - 28/02/2011 
	No campo NM_PRESTADOR_IMP_W, e gravado o codigo do prestador logado no portal.
	Com isso e possivel testar se o prestador que enviou o arquivo XML e diferente do prestador logado */
	
	if (coalesce(to_char(nr_seq_prestador_prot_imp_w),0) <> coalesce(nm_prestador_imp_w,0)) then
		CALL pls_gravar_conta_glosa('1299', nr_seq_conta_w, null, 
					null, 'N', 
					'Prestador do protocolo (Origem) diferente do prestador que enviou o arquivo (' || 
					nr_seq_prestador_prot_imp_w || ' - ' || nm_prestador_imp_w || ')',
					nm_usuario_p, 'A', 'IA',
					nr_seq_prestador_w, cd_estabelecimento_w, '', null);
	end if;
	
	select	sum(qt_itens)
	into STRICT	qt_itens_w
	from (	SELECT	count(1) qt_itens
			from	pls_conta_proc    
			where	nr_seq_conta = nr_seq_conta_w  
			
union
   
			SELECT	count(1) qt_itens    
			from	pls_conta_mat
			where	nr_seq_conta = nr_seq_conta_w) alias3;

	if (qt_itens_w = 0) then
		CALL pls_gravar_conta_glosa('1199', nr_seq_conta_w, null,
					null, 'N', 'Nenhum item foi lancado para esta conta. Verifique!', 
					nm_usuario_p,'A','IA',
					nr_seq_prestador_w, cd_estabelecimento_w, '',null);
	end if;
	
	/* Francisco - 07/08/2012 - Performance */

	if (coalesce(nr_seq_guia_w::text, '') = '') then
		/* Procurar primeiro pelo CD_GUIA_PESQUISA, senao achar, abrir todas as guias beneficiario e comparar */

		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_guia_w
		from	pls_guia_plano a
		where	a.cd_guia_pesquisa	= cd_guia_pesquisa_w
		and	a.nr_seq_segurado	= nr_seq_segurado_w;
	end if;
	/* Obter os prestadores da conta */

	if (cd_cgc_prestador_imp_w IS NOT NULL AND cd_cgc_prestador_imp_w::text <> '') then
		nr_seq_prestador_aux_w	:= pls_obter_prestador_cgc(	cd_cgc_prestador_imp_w,null, cd_estabelecimento_w);
		if (nr_seq_prestador_aux_w IS NOT NULL AND nr_seq_prestador_aux_w::text <> '') then
			nr_seq_prestador_w	:= nr_seq_prestador_aux_w;
		end if;	
	end if;

	if (coalesce(nr_seq_prestador_w::text, '') = '') then
		nr_seq_prestador_w	:= pls_obter_prestador_imp(cd_cgc_prestador_imp_w, cd_cpf_prestador_imp_w, nr_seq_prestador_imp_w,
								nr_crm_prest_solic_imp_w, sg_cons_prest_solic_imp_w, uf_crm_prest_solic_imp_w, 'C', cd_estabelecimento_w, dt_ref_atendimento_w);
	end if;
	
	nr_seq_grau_partic_w	:= pls_obter_dados_gerar_conta(nr_seq_conta_w, 'G');
	nr_seq_cbo_saude_w	:= pls_obter_dados_gerar_conta(nr_seq_conta_w, 'CBO');	
	nr_seq_cbo_saude_solic_w:= pls_obter_dados_gerar_conta(nr_seq_conta_w, 'CBOSOLIC');
	

	if (cd_versao_tiss_w >= '3.01.00') then
		if pls_util_pck.is_number(ie_carater_internacao_imp_w) <> 'OK' then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(355567);
		end if;
		if (coalesce(ie_carater_internacao_imp_w, 0) > 0) then
			if (ie_carater_internacao_imp_w = 1) then
				ie_carater_internacao_imp_w := 'E';
			elsif (ie_carater_internacao_imp_w = 2) then
				ie_carater_internacao_imp_w := 'U';
			end if;
		end if;
	end if;
	
	cd_medico_executor_w:= null;
	SELECT * FROM pls_valida_medico_importacao(null, 'ME', null, nr_seq_prestador_exec_w, nr_seq_conta_w, cd_estabelecimento_w, nm_usuario_p, cd_medico_executor_w, nr_crm_exec_imp_w) INTO STRICT _ora2pg_r;
 cd_medico_executor_w := _ora2pg_r.cd_medico_p; nr_crm_exec_imp_w := _ora2pg_r.cd_crm_p;
	if (coalesce(cd_medico_executor_w::text, '') = '') then
		cd_medico_executor_w	:= pls_obter_dados_gerar_conta(nr_seq_conta_w, 'M');
	end if;
	
	if (coalesce(cd_medico_executor_w,0) = 0) then
		cd_medico_executor_w := null;
	end if;
	
	select  max(cd_senha_externa)
	into STRICT  	cd_senha_externa_w
	from  	pls_guia_plano
	where  nr_sequencia    = nr_seq_guia_w;

	update	pls_conta
	set	nr_seq_prestador_exec_imp_ref 	= nr_seq_prestador_exec_w,
		nr_seq_cbo_saude		= nr_seq_cbo_saude_w,
		ie_carater_internacao		= ie_carater_internacao_imp_w,
		nr_seq_grau_partic		= nr_seq_grau_partic_w,
		cd_medico_executor		= cd_medico_executor_w,
		cd_senha_externa		= cd_senha_externa_w
	where	nr_sequencia			= nr_seq_conta_w;
	
	if (coalesce(nr_seq_prestador_exec_w,0)	= 0) then
		/* Felipe - 26/07/2011 - OS 338209 - Criada a glosa 1203*/

		if (coalesce(cd_cgc_prestador_exec_imp_w,'X') = 'X') and (coalesce(cd_cpf_prestador_exec_imp_w,'X') = 'X') and (coalesce(nr_seq_prestador_exec_imp_w,'0') = '0') and (coalesce(cd_prestador_exec_imp_w,'0') = '0') then
			CALL pls_gravar_conta_glosa(	'1311', nr_seq_conta_w, null,
						null, 'N', 'Nao ha a informacao do prestador executor dessa conta', 
						nm_usuario_p,'A','IA',
						nr_seq_prestador_w, cd_estabelecimento_w, '',null);
		else
			CALL pls_gravar_conta_glosa(	'1203', nr_seq_conta_w, null,
						null, 'N', 'Prestador nao encontrado na base. CGC: ' || cd_cgc_prestador_exec_imp_w || 
							'. CPF: ' || cd_cpf_prestador_exec_imp_w || '. Codigo: ' || cd_prestador_exec_imp_w, 
						nm_usuario_p,'A','IA',
						nr_seq_prestador_w, cd_estabelecimento_w, '', null);
		end if;
	else
		/* Obter dados do prestador */

		select	clock_timestamp() - coalesce(qt_dias_envio_contas,0),
			coalesce(qt_dias_envio_contas,0)
		into STRICT	dt_envio_contas_w,
			qt_dias_envio_contas_w
		from	pls_prestador
		where	nr_sequencia	= nr_seq_prestador_exec_w;
		
		if (qt_dias_envio_contas_w > 0) and (dt_comparar_w < dt_envio_contas_w) then
			CALL pls_gravar_conta_glosa('1701', nr_seq_conta_w, null,
						null, 'N', 'Data atendimento referencia: ' || dt_comparar_w || ' / Data minima permitida: ' || (clock_timestamp() - coalesce(qt_dias_envio_contas_w,0)) || 'Data atual menos ' ||
						qt_dias_envio_contas_w || ' dias.', 
						nm_usuario_p,'A','IA',
						nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
		end if;		
	end if;
	
	ds_observacao_data_w := pls_valida_regra_data_conta(dt_ref_atendimento_w);
	
	if (ds_observacao_data_w IS NOT NULL AND ds_observacao_data_w::text <> '') then
		CALL pls_gravar_conta_glosa(	'1701', nr_seq_conta_w, null,
					null, 'N', ds_observacao_data_w, 
					nm_usuario_p,'A','IA',
					nr_seq_prestador_exec_w, cd_estabelecimento_w, '', 
					null);
	end if;
	
	/*Robson da silva - OS 374623 - Data de Validade da Senha e anterior a Data do Atendimento*/

	if (nr_seq_guia_ww IS NOT NULL AND nr_seq_guia_ww::text <> '') then
		select	dt_validade_senha
		into STRICT	dt_validade_carteira_w
		from	pls_guia_plano
		where	nr_sequencia = nr_seq_guia_ww;

		if (dt_validade_carteira_w IS NOT NULL AND dt_validade_carteira_w::text <> '') and (fim_dia(dt_validade_carteira_w) < dt_emissao_imp_w) then
				CALL pls_gravar_conta_glosa('1405',nr_seq_conta_w,null, 
							null,'N','',  
							nm_usuario_p,'A','IA',  
							nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
		end if;
	end if;
	
	if (nr_seq_cbo_saude_w IS NOT NULL AND nr_seq_cbo_saude_w::text <> '')	then
		ie_espec_valido_w	:= pls_obter_se_espec_cbo(nr_seq_cbo_saude_w,nr_seq_prestador_exec_w);
		if (ie_espec_valido_w	= 'N')		then
			CALL pls_gravar_conta_glosa('1217',nr_seq_conta_w,null,
						null,'N','Especialidade nao cadastrada para o prestador',  
						nm_usuario_p,'A','IA',  
						nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
		end if;
	end if;

	if (ie_tipo_guia_w = '3') then
	
		--Motivo de saida em consulta no tiss 3 ou superior nao esta mais presente	.
		if ((cd_versao_tiss_w < '3.01.00') or (coalesce(cd_versao_tiss_w::text, '') = '')) then
			/*Diego 25/01/2011 - Incluido por causa das guias de consulta , ao integrar as contas o campo Motivo saida consulta nao era informado.*/
	
			select	max(nr_sequencia)
			into STRICT	nr_seq_saida_consulta_w
			from	pls_motivo_saida_consulta
			where	cd_tiss  = cd_motivo_alta_imp_w
			and	cd_estabelecimento = cd_estabelecimento_w;
		
			
			/* 1609 - Motivo Saida Invalido */
	
			if (coalesce(nr_seq_saida_consulta_w::text, '') = '') then
				CALL pls_gravar_conta_glosa('1609', nr_seq_conta_w, null,
							null, 'N', 'O motivo saida nao foi informado ou inconsistente com o padrao TISS.', 
							nm_usuario_p,'A','IA',
							nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
			end if;	
		
		end if;
	--SP/SADT
	elsif (ie_tipo_guia_w = '4') then

		if (cd_versao_tiss_w >= '3.01.00') then
			begin
				nr_seq_saida_int_w := pls_obter_seq_mot_saida_tiss(ie_motivo_encerramento_w, cd_versao_tiss_w, cd_estabelecimento_w);
			exception
			when others then
				nr_seq_saida_int_w := nr_seq_saida_int_w;			
			end;
		else
			select	max(nr_sequencia)
			into STRICT	nr_seq_saida_sadt_w
			from	pls_motivo_saida_sadt
			where	cd_tiss	= cd_motivo_alta_imp_w
			and	cd_estabelecimento	= cd_estabelecimento_w;
		end if;
		
		/* 1602 - Tipo de atendimento invalido ou nao informado */

		select	max(nr_sequencia)
		into STRICT	nr_seq_tipo_atend_w
		from	pls_tipo_atendimento
		where	cd_tiss			= ie_tipo_atendimento_imp_w
		and	cd_estabelecimento	= cd_estabelecimento_w;
		if (coalesce(nr_seq_tipo_atend_w::text, '') = '') then
			CALL pls_gravar_conta_glosa('1602', nr_seq_conta_w, null,
						null, 'N', ie_tipo_atendimento_imp_w,
						nm_usuario_p,'A','IA',
						nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
		end if;
		
		if (pls_obter_se_glosa_versao_tiss(cd_versao_tiss_w, '1604', null) = 'S') then
			/* 1604 - Tipo de saida invalido */
		
			if (coalesce(nr_seq_saida_sadt_w::text, '') = '') then
				CALL pls_gravar_conta_glosa('1604', nr_seq_conta_w, null,
							null, 'N', 'Tipo saida: ' || nr_seq_saida_sadt_w,
							nm_usuario_p,'A','IA',
							nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
			end if;
		end if;
		
		/* 1213 - CBOS(especialidade) invalido */

		if	((ie_tipo_atendimento_imp_w	= '04') and (coalesce(cd_cbo_saude_exec_imp_w::text, '') = '')) then
			if (coalesce(nr_crm_exec_imp_w::text, '') = '' ) then
				ds_observacao_glosa_w := ' CBO do medico executor e medico executor complementar da conta nao informado ';
			else
				ds_observacao_glosa_w := ' CBO do medico executor complementar da conta nao informado. Medico: '|| nm_medico_executor_imp_w ||' CRM: '|| nr_crm_exec_imp_w;
			end if;
			
			CALL pls_gravar_conta_glosa('1213', nr_seq_conta_w, null,
						null, 'N', ds_observacao_glosa_w, nm_usuario_p,
						'A', 'IA', nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
			ds_observacao_glosa_w := '';
			
		elsif (cd_cbo_saude_exec_imp_w IS NOT NULL AND cd_cbo_saude_exec_imp_w::text <> '')	then
			
			if (coalesce(nr_seq_cbo_saude_w::text, '') = '')	then
				CALL pls_gravar_conta_glosa('1213', nr_seq_conta_w, null,
							null, 'N', 'Codigo do CBO inativo, CBO: '||cd_cbo_saude_exec_imp_w, nm_usuario_p,
							'A', 'IA', nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);	
			end if;
		
		
		end if;	
	elsif (ie_tipo_guia_w in ('5','6')) then
		
		if (cd_versao_tiss_w >= '3.01.00') then
			cd_motivo_alta_w := ie_motivo_encerramento_w;
		else
			cd_motivo_alta_w := cd_motivo_alta_imp_w;
		end if;			
		
		begin	
			nr_seq_saida_int_w := pls_obter_seq_mot_saida_tiss(cd_motivo_alta_w, cd_versao_tiss_w, cd_estabelecimento_w);
		exception
		when others then
			nr_seq_saida_int_w := nr_seq_saida_int_w;
		end;

		/* 1901 - Acomodacao invalida */

		select	max(nr_sequencia)
		into STRICT	nr_seq_tipo_acomod_w
		from	pls_tipo_acomodacao a
		where	(cd_tiss)::numeric  = (cd_tipo_acomocadao_imp_w)::numeric
		and	a.ie_situacao = 'A';

		if (coalesce(nr_seq_tipo_acomod_w::text, '') = '') then

			select	max(nr_sequencia)
			into STRICT	nr_seq_tipo_acomod_w
			from	pls_tipo_acomodacao a
			where	cd_tiss = cd_tipo_acomocadao_imp_w
			and	a.ie_situacao = 'A';
		end if;

		if (coalesce(nr_seq_tipo_acomod_w::text, '') = '') and (cd_tipo_acomocadao_imp_w IS NOT NULL AND cd_tipo_acomocadao_imp_w::text <> '') then

			CALL pls_gravar_conta_glosa('1901', nr_seq_conta_w, null,
						null, 'N', '', 
						nm_usuario_p,'A','IA',
						nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
		end if;

		if (ie_tipo_guia_w = '5') then
			if (coalesce(ie_regime_internacao_imp_w,'X') not in ('1','2','3')) then
				CALL pls_gravar_conta_glosa('1505', nr_seq_conta_w, null,
							null, 'N', ie_regime_internacao_imp_w, 
							nm_usuario_p,'A','IA',
							nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
			end if;
		end if;
	end if;

	if (ie_tipo_guia_w = '5') then	

		if (cd_versao_tiss_w >= '3.01.00') then
			/* 1609 - Motivo Saida Invalido */

			if (coalesce(nr_seq_saida_int_w::text, '') = '') then
				CALL pls_gravar_conta_glosa('5033', nr_seq_conta_w, null,
							null, 'N', '', 
							nm_usuario_p,'A','IA',
							nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
			end if;	
		else
			/* 1609 - Motivo Saida Invalido */
		
			if (coalesce(nr_seq_saida_int_w::text, '') = '') then
				CALL pls_gravar_conta_glosa('1609', nr_seq_conta_w, null,
							null, 'N', '', 
							nm_usuario_p,'A','IA',
							nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
			end if;	
		end if;

		/*9912 -  Diagnostico nao informado para a conta OS 372943*/

		select	count(1)
		into STRICT	qt_diagnostico_w   
		from	pls_diagnostico_conta   
		where	nr_seq_conta	= nr_seq_conta_w;

		if (qt_diagnostico_w	= 0) then   
			CALL pls_gravar_conta_glosa('9912', nr_seq_conta_w, null,
					null, 'N', 'Verificar na pasta Diagnostico',
					nm_usuario_p, 'A', 'IA', 
					nr_seq_prestador_exec_w, cd_estabelecimento_w, '',null);
		end if;
	end if;

	/* De acordo com o Schema, para as guias de SP/SADT e Honorario individual vem a informacao do medico executor na conta tambem, sendo que para HI essa informacao e obrigatoria */

	if (ie_tipo_guia_w in ('4','6')) then
		if (coalesce(cd_medico_executor_w,0) <> 0) then
			select	count(1)
			into STRICT	cont_w
			from	pls_prestador a
			where	not exists (	SELECT	1
						from	pls_prestador_medico b
						where	b.cd_medico	= cd_medico_executor_w
						and	a.nr_sequencia	= b.nr_seq_prestador
						and	ie_situacao	= 'A'
						and	trunc(coalesce(dt_emissao_imp_w,clock_timestamp()),'dd') between trunc(coalesce(dt_inclusao,coalesce(dt_emissao_imp_w,clock_timestamp())),'dd') and  fim_dia(coalesce(dt_exclusao,coalesce(dt_emissao_imp_w,clock_timestamp()))))
			and	a.nr_sequencia	= nr_seq_prestador_exec_w
			and	(a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '');
					
			/* 1207 - Credenciado nao pertence a Rede Credenciada */

			if (cont_w > 0) then
				CALL pls_gravar_conta_glosa('1207', nr_seq_conta_w, null,
							null, 'N', '', 
							nm_usuario_p,'A','IA',
							nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
			end if;
			
			/* 9915 - Dados do conselho profissional nao informado */

			if (coalesce(sg_conselho_exec_imp_w,'0') = '0') then
				CALL pls_gravar_conta_glosa('9915', nr_seq_conta_w, null,
							null, 'N', sg_conselho_exec_imp_w, 
							nm_usuario_p,'A','IA',
							nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
			end if;
			
			/* Felipe - 29/07/2010 - OS 236501 - Grau de participacao e obrigatorio apenas para equipe*/


			/*Diego - 25/07/2011 - OS 337786 - Modificada a validacao para caso nao seja nula verificar se segue padroes TISS.*/

			if	((coalesce(nr_seq_grau_partic_w,0) = 0) and (ie_tipo_guia_w = 6)) then /*O grau de participacao so existe realmente em guias de honorario individual.*/
				CALL pls_gravar_conta_glosa('1838', nr_seq_conta_w, null,
							null, 'N', 'Grau de participacao do medico executor incompativel com os padroes TISS.', 
							nm_usuario_p,'A','IA',
							nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
			end if;			
		else
			cd_medico_executor_w := null;
		end if;
	end if;

	commit;

	if (ie_internacao_w = 'S') then
		select	coalesce(max(ie_tipo_guia),'1')
		into STRICT	ie_tipo_guia_ref_w
		from	pls_guia_plano
		where	cd_guia	= cd_guia_solic_imp_w
		and	nr_seq_segurado = nr_seq_segurado_w
		and	ie_status <> '3'; -- 3 = Negado
		
		if (ie_tipo_guia_ref_w	not in ('1','8')) then
			ds_tipo_guia_ref_w	:= obter_valor_dominio(1746, ie_tipo_guia_ref_w) || ' (' || ie_tipo_guia_ref_w || ')';
			CALL pls_gravar_conta_glosa('1302', nr_seq_conta_w, null,
						null, 'N', 'Tipo guia referencia: ' || ds_tipo_guia_ref_w, 
						nm_usuario_p,'A','IA',
						nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
		end if;
	end if;
	
	open c04;
	loop
	fetch c04 into	
		nr_seq_diagnostico_w,
		cd_doenca_imp_w,
		ds_diagnostico_imp_w,
		ie_indicacao_acidente_imp_w,
		ie_tipo_doenca_imp_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin	
		
		select	count(1)
		into STRICT	qt_classificacao_princ_w
		from	pls_diagnostico_conta a
		where	a.nr_seq_conta = nr_seq_conta_w
		and	ie_classificacao = 'P';
		
		/*Se nao tiver um CID principal para essa conta, entao deve setar a classificacao como
		    principal, aso contrario sera secundaria. OS 864140
		*/
		if (qt_classificacao_princ_w = 0 ) then
			ie_classificacao_w := 'P';
		else
			ie_classificacao_w := 'S';
		end if;

		if (coalesce(cd_doenca_imp_w,'X') = 'X') then
			if (ie_tipo_guia_w	<> '3') then
				if 	((ie_tipo_guia_w	<> '4') or (nr_seq_tipo_atend_w not in ('5','6','1','4'))) and (cd_versao_tiss_w not in ('3.01.00', '3.02.00'))then
					CALL pls_gravar_conta_glosa('1508', nr_seq_conta_w, null,
									null, 'N', '', 
									nm_usuario_p,'A','IA',
									nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
				end if;
			end if;
		else		
			select	count(1)
			into STRICT	qt_registro_w
			from	cid_doenca
			where	upper(cd_doenca_cid)	= upper(cd_doenca_imp_w);
			
			if (qt_registro_w	= 0) then
				if (ie_tipo_guia_w	<> '3') then
					CALL pls_gravar_conta_glosa('1509', nr_seq_conta_w, null,
								null, 'N', 'Codigo informado: '||cd_doenca_imp_w, 
								nm_usuario_p,'A','IA',
								nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
				end if;				
			end if;
		end if;
		
		if (coalesce(cd_doenca_imp_w::text, '') = '') then 
			update	pls_diagnostico_conta
			set	ds_diagnostico		= ds_diagnostico_imp_w,
				ie_classificacao	= ie_classificacao_w,
				ie_indicacao_acidente	= ie_indicacao_acidente_imp_w,
				ie_tipo_doenca		= ie_tipo_doenca_imp_w,
				nm_usuario		= nm_usuario_p
			where	nr_sequencia		= nr_seq_diagnostico_w;
		else		
			--Se for zero, entao e um Codigo nao cadastrado na base ainda.
			if (qt_registro_w <> 0) then
				update	pls_diagnostico_conta
				set	cd_doenca		= upper(cd_doenca_imp_w),
					ds_diagnostico		= ds_diagnostico_imp_w,
					ie_classificacao	= ie_classificacao_w,
					ie_indicacao_acidente	= ie_indicacao_acidente_imp_w,
					ie_tipo_doenca		= ie_tipo_doenca_imp_w,
					nm_usuario		= nm_usuario_p
				where	nr_sequencia		= nr_seq_diagnostico_w;
			end if;
		end if;	
		
		end;
	end loop;
	close c04;
	
	open c05;
	loop
	fetch c05 into	
		nr_seq_diagnostico_obito_w,
		cd_doenca_obito_imp_w,
		nm_tabela_obito_imp_w,
		ds_doenca_obito_imp_w,		
		nr_declaracao_obito_imp_w,
		ie_indicador_dorn_w;
	EXIT WHEN NOT FOUND; /* apply on c05 */
		begin
		
		select	count(1)
		into STRICT	qt_registro_w
		from	cid_doenca
		where	cd_doenca_cid	= cd_doenca_obito_imp_w;
		
		if	(qt_registro_w	= 0 AND cd_doenca_obito_imp_w IS NOT NULL AND cd_doenca_obito_imp_w::text <> '') then		
			CALL pls_gravar_conta_glosa( '1509', nr_seq_conta_w, null,
						null, 'N', 'Codigo CID obito: '||cd_doenca_obito_imp_w, 
						nm_usuario_p,'A','IA',
						nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
				
			--Devido a nao obrigatoriedade de ter o diagnostico obito, entao faz-se o update das informacoes aqui tambem
			update	pls_diagnost_conta_obito
			set	nm_tabela		= nm_tabela_obito_imp_w,
				ds_doenca		= ds_doenca_obito_imp_w,
				nr_declaracao_obito	= nr_declaracao_obito_imp_w,
				nm_usuario		= nm_usuario_p,
				ie_indicador_dorn	= ie_indicador_dorn_w
			where	nr_sequencia		= nr_seq_diagnostico_obito_w;
		
		else
			update	pls_diagnost_conta_obito
			set	cd_doenca		= cd_doenca_obito_imp_w,
				nm_tabela		= nm_tabela_obito_imp_w,
				ds_doenca		= ds_doenca_obito_imp_w,
				nr_declaracao_obito	= nr_declaracao_obito_imp_w,
				nm_usuario		= nm_usuario_p,
				ie_indicador_dorn	= ie_indicador_dorn_w
			where	nr_sequencia		= nr_seq_diagnostico_obito_w;
		end if;
		
		end;
	end loop;
	close c05;
	
	open c06;
	loop
	fetch c06 into	
		nr_seq_diagnostico_nasc_vivo_w,
		nr_decl_diag_nasc_vivo_w;
	EXIT WHEN NOT FOUND; /* apply on c06 */
		begin		
		update	pls_diagnostico_nasc_vivo
		set	nr_decl_nasc_vivo	= nr_decl_diag_nasc_vivo_w,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_sequencia		= nr_seq_diagnostico_nasc_vivo_w;
		end;
	end loop;
	close c06;

	/*Diego OPS - Os 284320 - Esta alteracao foi realizada ja que em guias de consulta, na impoortacao, os dados do proceimento nao eram gerados nos campos quente.
			       Visto com o sro Eder J. da Silva*/

	/*Gera a conversao dos itens*/

	ie_situacao_prot_proc_w := pls_gerar_conversao_item(nr_seq_conta_w, nr_seq_prestador_prot_imp_w, nr_seq_segurado_w, nm_usuario_p, cd_estabelecimento_w, nr_seq_prestador_prot_imp_w, ie_situacao_prot_proc_w, cd_versao_tiss_w);
	/* Geracao dos PROCEDIMENTOS */

	ie_situacao_prot_proc_w := pls_gerar_conta_proc(nr_seq_conta_w, coalesce(nr_seq_prestador_exec_w,nr_seq_prestador_prot_imp_w), nr_seq_segurado_w, nm_usuario_p, cd_estabelecimento_w, nr_seq_prestador_prot_imp_w, ie_situacao_prot_proc_w, cd_versao_tiss_w);
	commit;
	
	if (ie_tipo_guia_w	<> '3') then		
		select	count(1)
		into STRICT	qt_material_w
		from	pls_conta_mat
		where	nr_seq_conta = nr_seq_conta_w;
		
		if (qt_material_w > 0) then
		/* Geracao dos MATERIAIS */

		ie_situacao_prot_mat_w := pls_gerar_conta_mat(	nr_seq_conta_w, nr_seq_prestador_exec_w, nr_seq_segurado_w, nm_usuario_p, cd_estabelecimento_w, ie_situacao_prot_mat_w, cd_versao_tiss_w, nr_seq_prestador_prot_imp_w );
		end if;
		commit;
	end if;
	
	--aaschlote 13/03/2015 - 819807 - Colocada essa linha, pois acima pode acontecer que limpe a data de referencide de atendimento nas triggers dos itens, no qual essa linha vai atualizar a data do atendimento caso esteja vazia
	update	pls_conta
	set	cd_guia		= cd_guia
	where	nr_sequencia	= nr_seq_conta_w;

	/* Se nao achou, procurar por esse numero de guia em todas as guias desse beneficiario */

	if (nr_seq_guia_w = 0) then
		open c09;
		loop
		fetch c09 into
			nr_seq_guia_cursor_w,
			cd_guia_w;
		EXIT WHEN NOT FOUND; /* apply on c09 */
			begin
			cd_guia_w	:= pls_converte_cd_guia_pesquisa(cd_guia_w);
			if (cd_guia_w = cd_guia_pesquisa_w) then
				nr_seq_guia_w	:= nr_seq_guia_cursor_w;
			end if;
			end;
		end loop;
		close c09;
	end if;
	/* Francisco - 07/08/2012 - Fim tratamento Performance */

	
	cd_guia_imp_ww := cd_guia_imp_w;
	
	-- Feito o select do codigo da guia na autorizacao pois caso o cliente

	-- utilize a regra de prefixo de codigo de guia e necessario obter da autorizacao
	if (nr_seq_guia_w <> 0) then
		select	max(cd_guia_pesquisa)
		into STRICT	cd_guia_pesq_aut_w
		from	pls_guia_plano
		where	nr_sequencia = nr_seq_guia_w;
		
		if (cd_guia_pesquisa_w = cd_guia_pesq_aut_w) then
			select	max(cd_guia)
			into STRICT	cd_guia_imp_w
			from	pls_guia_plano
			where	nr_sequencia	= nr_seq_guia_w;
		end if;
	end if;
	if (coalesce(nr_seq_prestador_exec_w::text, '') = '')	then
		nr_seq_prestador_exec_w :=  0;
	end if;
	
	ie_consistir_guia_w	:= 	pls_obter_se_exige_guia(nr_seq_conta_w,0, nr_seq_prestador_exec_w);
	
	if (ie_ocorrencia_w = 'N') then
		select	coalesce(max(ie_independe_regra),'N'),
			coalesce(max(ie_valida_guia_nula),'N')
		into STRICT	ie_independe_regra_w,
			ie_valida_guia_null_w
		from	pls_regra_glosa_1307 a;
	else
		select	coalesce(max(ie_independe_regra),'N'),
			coalesce(max(ie_valida_guia_nula),'N')
		into STRICT	ie_independe_regra_w,
			ie_valida_guia_null_w
		from	pls_regra_glosa_1307 a
		where	a.cd_estabelecimento = cd_estabelecimento_w;
	end if;
	--jjung OS 522430 - Conforme solicitado por Joao - LES, foi criado o campo ie_valida_guia_nula da pls_regra_glosa_1307 para nao gerar a glosa caso a guia nao esteja informada no arquivo
	if	(((ie_valida_guia_null_w = 'S') and ((coalesce(cd_guia_imp_w,cd_guia_imp_ww) IS NOT NULL AND (coalesce(cd_guia_imp_w,cd_guia_imp_ww))::text <> ''))) or (ie_valida_guia_null_w = 'N')) then
		if (ie_independe_regra_w = 'S') or (ie_consistir_guia_w = 'S') then
			
			select	coalesce(max(nr_seq_segurado),0)
			into STRICT	nr_seq_segurado_guia_w
			from	pls_guia_plano
			where	nr_sequencia	= nr_seq_guia_w
			and	ie_status 	<> '3';
			
			if (nr_seq_guia_w = 0) then
				ds_mensagem_guia_w	:= 'Operadora exige autorizacao para esta conta. (IA)';
			elsif (nr_seq_segurado_w <> nr_seq_segurado_guia_w) then		
				ds_mensagem_guia_w	:= 'Beneficiario da guia nao e o mesmo da autorizacao. (IA)';
			end if;
			
			if (coalesce(ds_mensagem_guia_w,'X') <> 'X') then
				CALL pls_gravar_conta_glosa('1307', nr_seq_conta_w, null,
							null, 'N', ds_mensagem_guia_w,
							nm_usuario_p,'A','IA',
							nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
			else
				select	max(ie_status)
				into STRICT	ie_status_guia_w
				from	pls_guia_plano
				where	nr_sequencia	= nr_seq_guia_w
				and	ie_status 	<> '3';
				
				if (ie_status_guia_w <> '1') then
					CALL pls_gravar_conta_glosa('1399',nr_seq_conta_w,null,
								null,'N','Guia nao autorizada',
								nm_usuario_p,'A','IA',
								nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
				end if;
			end if;	
			ds_mensagem_guia_w	:= '';
			
			if (cd_guia_solic_imp_w IS NOT NULL AND cd_guia_solic_imp_w::text <> '') then
				/* Francisco - 07/08/2012 - Performance */

				cd_guia_pesquisa_w	:= pls_converte_cd_guia_pesquisa(cd_guia_solic_imp_w);
				
				/* Procurar primeiro pelo CD_GUIA_PESQUISA, senao achar, abrir todas as guias beneficiario e comparar */

				select	coalesce(max(nr_sequencia),0)
				into STRICT	nr_seq_guia_ref_w
				from	pls_guia_plano a
				where	a.cd_guia_pesquisa	= cd_guia_pesquisa_w
				and	a.nr_seq_segurado	= nr_seq_segurado_w;
				
				/* Se nao achou, procurar por esse numero de guia em todas as guias desse beneficiario */

				if (nr_seq_guia_ref_w = 0) then
					open c09;
					loop
					fetch c09 into
						nr_seq_guia_cursor_w,
						cd_guia_w;
					EXIT WHEN NOT FOUND; /* apply on c09 */
						begin
						cd_guia_w	:= pls_converte_cd_guia_pesquisa(cd_guia_w);
						if (cd_guia_w = cd_guia_pesquisa_w) then
							nr_seq_guia_ref_w	:= nr_seq_guia_cursor_w;
						end if;
						end;
					end loop;
					close c09;
				end if;
				/* Francisco - 07/08/2012 - Fim tratamento Performance */

				
				if (coalesce(nr_seq_guia_ref_w,0) = 0) then
					CALL pls_gravar_conta_glosa('1307', nr_seq_conta_w, null,
								null, 'N', 'Guia de solicitacao informada no arquivo nao encontrada na base guia :'||cd_guia_solic_imp_w,
								nm_usuario_p,'A','IA',
								nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);
				end if;
			end if;
		end if;
	end if;

	CALL pls_tiss_consistir_autorizacao(nr_seq_conta_w, 'C', 'IA',
			coalesce(nr_seq_prestador_exec_w,nr_seq_prestador_prot_imp_w), null, '', 
			nm_usuario_p, cd_estabelecimento_w,null);
			
	commit;
			
	CALL pls_tiss_consistir_atendimento(nr_seq_conta_w, 'C', 'IA',
			nr_seq_prestador_exec_w, null, '', 
			nm_usuario_p, cd_estabelecimento_w, nr_seq_segurado_w);
			
	commit;
	
	CALL pls_tiss_consistir_diagnostico(nr_seq_conta_w, 'C', 'IA',
			nr_seq_prestador_exec_w, null, '', 
			nm_usuario_p, cd_estabelecimento_w);
			
	commit;
			
	CALL pls_tiss_consistir_diaria(nr_seq_conta_w, 'C', 'IA',
			nr_seq_prestador_exec_w, '', nr_seq_segurado_w,
			nm_usuario_p, cd_estabelecimento_w);
			
	commit;
			
	CALL pls_tiss_consistir_prestador(nr_seq_conta_w, 'C', 'IA',
			nr_seq_prestador_exec_w, null, '', 
			nm_usuario_p, cd_estabelecimento_w);
			
	commit;

	if (coalesce(nr_seq_prestador_exec_w,0)	> 0) then
		select	count(1)
		into STRICT	qt_glosa_ativa_w
		from	tiss_motivo_glosa	tiss
		where	cd_motivo_tiss	= '2514'
		and	pls_obter_se_evento_glosa(tiss.nr_sequencia, null, cd_estabelecimento_w) = 'S';
		if (qt_glosa_ativa_w > 0) then
			CALL pls_consistir_prest_plano('IA',nr_seq_prestador_exec_w,nr_seq_conta_w,null,null,null,null,null,cd_estabelecimento_w,nm_usuario_p);
			commit;
		end if;
	end if;		

	CALL pls_tiss_consistir_guia(nr_seq_conta_w, 'C', 'IA',
				nr_seq_prestador_exec_w, null, '', 
				nm_usuario_p, cd_estabelecimento_w);
			
	commit;
			
	if (ie_tipo_guia_w = '6') then
		CALL pls_tiss_consistir_honorario(nr_seq_conta_w, 'C', 'IA',
			nr_seq_prestador_exec_w, null, '', 
			nm_usuario_p, cd_estabelecimento_w, null);
	end if;
	
	commit;
	
	begin
		select	nr_sequencia
		into STRICT	nr_seq_clinica_ww
		from	pls_clinica
		where	cd_tiss = nr_seq_clinica_imp_w;
	exception
	when others then
		nr_seq_clinica_ww := null;
	end;
	
	CALL pls_gerar_ocorrencia_conta_web(	nr_seq_conta_w, null, null,
					nr_seq_segurado_w,nr_seq_prestador_prot_imp_w, nr_seq_prestador_w,nr_seq_prestador_exec_w,
					nm_usuario_p, cd_estabelecimento_w);
	
	qt_nasc_vivos_termo_w	:= 0;
	if (qt_nasc_vivos_imp_w	<> 0) then
		qt_nasc_vivos_termo_w	:= qt_nasc_vivos_imp_w;
		qt_nasc_vivos_imp_w 	:= 0;
	elsif (qt_nasc_vivos_w	<> 0) then
		qt_nasc_vivos_termo_w	:= qt_nasc_vivos_w;
		qt_nasc_vivos_imp_w 	:= 0;
	end if;
	
	if (cd_guia_solic_imp_w IS NOT NULL AND cd_guia_solic_imp_w::text <> '') then
		/* Francisco - 07/08/2012 - Performance */

		cd_guia_pesquisa_w := pls_converte_cd_guia_pesquisa(cd_guia_solic_imp_w);
		
		/* Procurar primeiro pelo CD_GUIA_PESQUISA, senao achar, abrir todas as guias beneficiario e comparar */

		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_guia_ref_w
		from	pls_guia_plano a
		where	a.cd_guia_pesquisa = cd_guia_pesquisa_w
		and	a.nr_seq_segurado = nr_seq_segurado_w;
		
		/* Se nao achou, procurar por esse numero de guia em todas as guias desse beneficiario */

		if (nr_seq_guia_ref_w = 0) then
			open c09;
			loop
			fetch c09 into
				nr_seq_guia_cursor_w,
				cd_guia_w;
			EXIT WHEN NOT FOUND; /* apply on c09 */
				cd_guia_w := pls_converte_cd_guia_pesquisa(cd_guia_w);

				if (cd_guia_w = cd_guia_pesquisa_w) then

					nr_seq_guia_ref_w := nr_seq_guia_cursor_w;
				end if;
			end loop;
			close c09;
		end if;
		/* Francisco - 07/08/2012 - Fim tratamento Performance */

		if (nr_seq_guia_ref_w <> 0) then
			select	max(cd_guia)
			into STRICT	cd_guia_solic_imp_w
			from	pls_guia_plano
			where	nr_sequencia = nr_seq_guia_ref_w;
		end if;
	end if;
	
	if (coalesce(nr_seq_cbo_saude_w::text, '') = '') and
		(not(ie_tipo_atendimento_imp_w	= '04' AND ie_tipo_guia_w = '4')) then
		if (pls_obter_se_regra_cbo(ie_tipo_guia_w,nr_seq_prestador_exec_w,nr_seq_tipo_atend_w) = 'S') then
			CALL pls_gravar_conta_glosa('1213', nr_seq_conta_w, null,
						null, 'N', 'Codigo do CBO invalido, CBO: '||cd_cbo_saude_exec_imp_w, nm_usuario_p,
						'A', 'IA', nr_seq_prestador_exec_w, cd_estabelecimento_w, '', null);	
		end if;
	end if;
	
	if (nr_seq_prestador_exec_w = 0) then
		nr_seq_prestador_exec_w := null;
	end if;
	
	--Se versao do TISS for maior ou igual a 3, entao tem que converter o ie_faturamento
	if (cd_versao_tiss_w >= '3.01.00') then

		nr_seq_conselho_exec_w	:= pls_obter_seq_conselho_tiss(sg_conselho_exec_imp_w);
		nr_seq_conselho_solic_w	:= pls_obter_seq_conselho_tiss(sg_conselho_solic_imp_w);
		
		ie_tipo_faturamento_w 	:= pls_obter_tipo_faturamento(ie_tipo_faturamento_w);
		uf_crm_exec_imp_w	:= pls_obter_sg_uf_tiss(uf_crm_exec_imp_w);
	end if;

	cd_tipo_atend_odont_w	:= null;
	if (cd_tipo_atend_odont_imp_w IS NOT NULL AND cd_tipo_atend_odont_imp_w::text <> '') then
		select	max(cd_tipo)
		into STRICT	cd_tipo_atend_odont_w
		from	tiss_tipo_atend_odont
		where	cd_tipo		= cd_tipo_atend_odont_imp_w;
	end if;
	
	if (nr_seq_prestador_exec_w IS NOT NULL AND nr_seq_prestador_exec_w::text <> '') then
		cd_cnes_w := coalesce(substr(pls_obter_cnes_prestador(nr_seq_prestador_exec_w), 1, 40), cd_cnes_imp_w);
	end if;
	
	update	pls_conta
	set	cd_guia				= cd_guia_imp_w,
		cd_guia_prestador		= cd_guia_prestador_imp_w,
		cd_guia_referencia		= cd_guia_solic_imp_w,
		cd_medico_executor		= CASE WHEN cd_medico_executor_w=0 THEN  null  ELSE cd_medico_executor_w END ,
		cd_medico_solicitante		= cd_medico_solic_w,
		cd_senha			= cd_senha_imp_w,
		dt_autorizacao			= dt_autorizacao_imp_w,
		dt_emissao			= dt_emissao_imp_w,
		dt_validade_senha		= dt_validade_senha_imp_w,
		ie_indicacao_acidente		= ie_indicacao_acidente_imp_w,
		ie_regime_internacao		= ie_regime_internacao_imp_w,
		ie_tipo_doenca			= ie_tipo_doenca_imp_w,
		nm_usuario			= nm_usuario_p,
		nr_seq_prestador		= nr_seq_prestador_w,
		nr_seq_prestador_exec		= nr_seq_prestador_exec_w,
		vl_diarias			= coalesce(vl_diarias_imp_w,0),
		vl_gases			= coalesce(vl_gases_imp_w,0),
		vl_materiais			= coalesce(vl_materiais_imp_w,0),
		vl_medicamentos			= coalesce(vl_medicamentos_imp_w,0),
		vl_procedimentos		= coalesce(vl_procedimentos_imp_w,0),
		vl_taxas			= coalesce(vl_taxas_imp_w,0),
		vl_opm				= coalesce(vl_opm_imp_w,0),
		vl_cobrado			= coalesce(vl_total_imp_w,0),
		nr_seq_clinica			= nr_seq_clinica_ww,
		nr_seq_tipo_acomodacao		= nr_seq_tipo_acomod_w,
		nr_seq_saida_int		= nr_seq_saida_int_w,
		nr_seq_saida_spsadt		= nr_seq_saida_sadt_w,
		nr_seq_tipo_atendimento		= nr_seq_tipo_atend_w,
		dt_entrada			= dt_entrada_imp_w,
		dt_alta				= dt_alta_imp_w,
		ie_aborto			= CASE WHEN ie_aborto_imp_w='0' THEN  'N' WHEN ie_aborto_imp_w='1' THEN  'S'  ELSE CASE WHEN upper(ie_aborto_imp_w)='TRUE' THEN  'S'  ELSE 'N' END  END ,
		ie_atend_rn_sala_parto		= CASE WHEN ie_atend_rn_sala_parto_imp_w='0' THEN  'N' WHEN ie_atend_rn_sala_parto_imp_w='1' THEN  'S'  ELSE CASE WHEN upper(ie_atend_rn_sala_parto_imp_w)='TRUE' THEN  'S'  ELSE 'N' END  END ,
		ie_baixo_peso			= CASE WHEN ie_baixo_peso_imp_w='0' THEN  'N' WHEN ie_baixo_peso_imp_w='1' THEN  'S'  ELSE CASE WHEN upper(ie_baixo_peso_imp_w)='TRUE' THEN  'S'  ELSE 'N' END  END ,
		ie_complicacao_neonatal		= CASE WHEN ie_complicacao_neonatal_imp_w='0' THEN  'N' WHEN ie_complicacao_neonatal_imp_w='1' THEN  'S'  ELSE CASE WHEN upper(ie_complicacao_neonatal_imp_w)='TRUE' THEN  'S'  ELSE 'N' END  END ,
		ie_complicacao_puerperio	= CASE WHEN ie_complicacao_puerperio_imp_w='0' THEN  'N' WHEN ie_complicacao_puerperio_imp_w='1' THEN  'S'  ELSE CASE WHEN upper(ie_complicacao_puerperio_imp_w)='TRUE' THEN  'S'  ELSE 'N' END  END ,
		ie_gestacao			= CASE WHEN ie_gestacao_imp_w='0' THEN  'N' WHEN ie_gestacao_imp_w='1' THEN  'S'  ELSE CASE WHEN upper(ie_gestacao_imp_w)='TRUE' THEN  'S'  ELSE 'N' END  END ,
		ie_obito			= CASE WHEN ie_obito_imp_w='0' THEN  'N' WHEN ie_obito_imp_w='1' THEN  'S'  ELSE CASE WHEN upper(ie_obito_imp_w)='TRUE' THEN  'S'  ELSE 'N' END  END ,
		ie_parto_cesaria		= CASE WHEN ie_parto_cesaria_imp_w='0' THEN  'N' WHEN ie_parto_cesaria_imp_w='1' THEN  'S'  ELSE CASE WHEN upper(ie_parto_cesaria_imp_w)='TRUE' THEN  'S'  ELSE 'N' END  END ,
		ie_parto_normal			= CASE WHEN ie_parto_normal_imp_w='0' THEN  'N' WHEN ie_parto_normal_imp_w='1' THEN  'S'  ELSE CASE WHEN upper(ie_parto_normal_imp_w)='TRUE' THEN  'S'  ELSE 'N' END  END ,
		ie_transtorno			= CASE WHEN ie_transtorno_imp_w='0' THEN  'N' WHEN ie_transtorno_imp_w='1' THEN  'S'  ELSE CASE WHEN upper(ie_transtorno_imp_w)='TRUE' THEN  'S'  ELSE 'N' END  END ,
		nr_seq_grau_partic		= nr_seq_grau_partic_w,
		sg_conselho_exec		= sg_conselho_exec_imp_w,
		nr_crm_exec			= nr_crm_exec_imp_w,
		uf_crm_exec			= uf_crm_exec_imp_w,
		nr_seq_conselho_exec		= nr_seq_conselho_exec_w,
		nr_seq_conselho_solic		= nr_seq_conselho_solic_w,
		cd_ans				= cd_ans_w,
		cd_cnes				= cd_cnes_w,
		qt_obito_precoce		= qt_obito_precoce_imp_w,
		qt_obito_tardio			= qt_obito_tardio_imp_w,
		qt_nasc_vivos			= qt_nasc_vivos_imp_w,
		qt_nasc_vivos_termo		= qt_nasc_vivos_termo_w,
		qt_nasc_mortos			= qt_nasc_mortos_imp_w,
		qt_nasc_vivos_prematuros	= qt_nasc_vivos_prematuros_imp_w,
		ie_tipo_faturamento		= ie_tipo_faturamento_w,
		nr_seq_cbo_saude		= nr_seq_cbo_saude_w,
		nr_seq_saida_consulta		= nr_seq_saida_consulta_w,
		dt_atendimento			= dt_atendimento_w,
		ie_tipo_consulta		= ie_tipo_consulta_imp_w,
		ie_recem_nascido		= ie_recem_nascido_imp_w,
		dt_fim_faturamento		= dt_fim_faturamento_w,
		dt_inicio_faturamento		= dt_inicio_faturamento_w,
		ds_observacao			= ds_observacao_imp,
		ds_indicacao_clinica		= ds_indicacao_clinica_imp_w,
		cd_tipo_atend_odont		= cd_tipo_atend_odont_w,
		dt_fim_geracao_conta		= clock_timestamp(),
		nr_seq_cbo_saude_solic		= nr_seq_cbo_saude_solic_w
	where	nr_sequencia			= nr_seq_conta_w;
	
	/* Francisco - 07/08/2012 - Coloquei commit, por causa da performance, sera feito tratamento no status
	caso ocorra algum erro */
	commit;
	
	qt_controle_w := qt_controle_w + 1;
	CALL gravar_processo_longo('Validando contas','PLS_GERAR_CONTA',qt_controle_w);
	end;
end loop;
close c01;

ie_valoriza_w := pls_obter_se_valoriza_portal(ie_origem_protocolo_w, cd_estabelecimento_w);

if (ie_valoriza_w = 'S') then
	CALL pls_cta_consistir_pck.gera_valorizacao(	null, nr_seq_protocolo_p, null, null,
						null, null, nm_usuario_p, cd_estabelecimento_w,'IA');
end if;

/* Francisco - 13/05/2013 - Chamada das ocorrencias combinadas */

CALL pls_oc_cta_gerar_combinada(	'IMP', 'A', null, nr_seq_protocolo_p, null, null, null, null, null, null,
				null, null, null, null, cd_estabelecimento_w, nm_usuario_p);

select	count(1)
into STRICT	qt_registros_w
from	pls_conta a
where	a.nr_seq_protocolo = nr_seq_protocolo_p
and	exists (
		SELECT	1
		from	pls_conta_glosa b,
			tiss_motivo_glosa c
		where	b.nr_seq_conta = a.nr_sequencia
		and	c.nr_sequencia = b.nr_seq_motivo_glosa
		
union all

		SELECT	1
		from	pls_conta_glosa b,
			tiss_motivo_glosa c,
			pls_conta_proc d
		where	d.nr_seq_conta = a.nr_sequencia
		and	b.nr_seq_conta_proc = d.nr_sequencia
		and	c.nr_sequencia = b.nr_seq_motivo_glosa
		
union all

		select	1
		from	pls_conta_glosa b,
			tiss_motivo_glosa c,
			pls_conta_mat d
		where	d.nr_seq_conta = a.nr_sequencia
		and	b.nr_seq_conta_mat = d.nr_sequencia
		and	c.nr_sequencia = b.nr_seq_motivo_glosa
);

if (qt_registros_w > 0) then
	ie_situacao_protocolo_w	:= 'RE';
end if;	

/*Diego OS - 284508*/

select	count(1)
into STRICT	qt_contas_w
from	pls_conta
where	nr_seq_protocolo = nr_seq_protocolo_p;

update	pls_protocolo_conta
set	qt_contas_informadas	= qt_contas_w,
	ie_situacao 		= ie_situacao_protocolo_w
where	nr_sequencia		= nr_seq_protocolo_p;

/* Cancelar as contas de protocolos rejeitados */

if (coalesce(ie_situacao_protocolo_w,'X') = 'RE') then
	begin

	--Se estiver utilizando o parametro para agrupar os protocolos w for WhebService, entao ao rejeitar um protocolo devera vincula-lo a um novo lote
	if	(nm_usuario_w = 'WebService' AND ie_agrupar_xml_web_w = 'S') then
	
		nr_seq_lote_w := pls_gerar_lote_analise(nr_seq_prestador_prot_imp_w, null, nm_usuario_p, wheb_usuario_pck.get_nm_usuario, null, nr_seq_lote_w, nr_protocolo_prestador_w);
		CALL pls_vinc_protocolo_lote_conta(nr_seq_lote_w, nr_seq_protocolo_p, nm_usuario_p);
	
	end if;
	
	CALL pls_cancelar_protocolo_conta(	nr_seq_protocolo_p, 'N', cd_estabelecimento_w,
					nm_usuario_p, null, null);
	exception
	when others then
		null;
	end;
end if;

if (nm_usuario_w = 'WebService') and (ie_situacao_protocolo_w = 'A') then

	CALL pls_confirmar_envio_lote(	nr_seq_lote_conta_w, cd_estabelecimento_w, nm_usuario_p);
end if;

CALL wheb_usuario_pck.set_nm_usuario('');

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_conta ( nr_seq_protocolo_p pls_protocolo_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

