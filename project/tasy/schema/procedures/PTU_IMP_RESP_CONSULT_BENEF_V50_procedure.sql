-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_imp_resp_consult_benef_v50 ( ds_arquivo_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  importar resposta da consulta benef_v40

Rotina utilizada nas transações ptu via scs homologadas com a unimed brasil.
quando for alterar, favor verificar com o análista responsável para a realização de testes.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
Perfomance
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_import_w			bigint;
ds_conteudo_w			varchar(4000);
cd_transacao_w			varchar(5);
ie_tipo_cliente_w		varchar(15);
cd_unimed_exec_w		smallint;
cd_unimed_benef_w		smallint;
ie_confirmacao_w		varchar(2);
cd_mens_espec_1			smallint;
nr_seq_execucao_w		bigint;
nr_seq_origem_w			bigint;
nm_beneficiario_w		varchar(25);
nm_empresa_w			varchar(18);
cd_unimed_w			smallint;
cd_usuario_plano_w		varchar(13);
nm_compl_benef_w		varchar(120);
nm_plano_w			varchar(20);
nm_tipo_acomodacao_w		varchar(20);
ie_abrangencia_w		varchar(2);
cd_local_cobranca_w		smallint;
ie_sexo_w			varchar(2);
nr_via_cartao_w			smallint;
dt_auxiliar_1			varchar(8);
dt_auxiliar_2			varchar(8);
dt_auxiliar_3			varchar(8);
dt_auxiliar_4			varchar(8);
dt_nascimento_w			timestamp;
dt_inclusao_benef_w		timestamp;
dt_exclusao_benef_w		timestamp;
dt_validade_carteira_w		timestamp;
nr_seq_resp_benef_w		bigint;
nr_seq_inf_conta_interc_w	bigint;
nr_versao_w			varchar(3);
cd_rede_atend_w			varchar(4);
ie_regulamentacao_w		smallint;

c01 CURSOR FOR
	SELECT	nr_seq_importacao,
		ds_valores
	from	w_scs_importacao
	where	nm_usuario	= nm_usuario_p
	order by nr_seq_importacao;


BEGIN

open c01;
loop
fetch c01 into
	nr_seq_import_w,
	ds_conteudo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	if (substr(ds_conteudo_w,1,4)	<> 'FIM$') then
		if (nr_seq_import_w	= 1) then

			select  substr(ds_conteudo_w,1,5),
				trim(both substr(ds_conteudo_w,6,15)),
				CASE WHEN (substr(ds_conteudo_w,21,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,21,4))::numeric  END ,
				CASE WHEN (substr(ds_conteudo_w,25,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,25,4))::numeric  END ,
				trim(both substr(ds_conteudo_w,29,1)),
				CASE WHEN (substr(ds_conteudo_w,30,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,30,4))::numeric  END ,
				CASE WHEN (substr(ds_conteudo_w,34,10))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,34,10))::numeric  END ,
				CASE WHEN (substr(ds_conteudo_w,44,10))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,44,10))::numeric  END ,
				trim(both substr(ds_conteudo_w,54,3))
			into STRICT	cd_transacao_w,
				ie_tipo_cliente_w,
				cd_unimed_exec_w,
				cd_unimed_benef_w,
				ie_confirmacao_w,
				cd_mens_espec_1,
				nr_seq_execucao_w,
				nr_seq_origem_w,
				nr_versao_w
			;

			if (ie_tipo_cliente_w	= 'UNIMED') then
				ie_tipo_cliente_w	:= 'U';
			elsif (ie_tipo_cliente_w	= 'PORTAL') then
				ie_tipo_cliente_w	:= 'P';
			elsif (ie_tipo_cliente_w	= 'PRESTADOR') then
				ie_tipo_cliente_w	:= 'R';
			end if;

			select	nextval('ptu_resp_consulta_benef_seq')
			into STRICT	nr_seq_resp_benef_w
			;

			insert	into ptu_resp_consulta_benef(nr_sequencia, cd_transacao, ie_tipo_cliente,
				 cd_unimed_executora, cd_unimed_beneficiario, nr_seq_execucao,
				 nr_seq_origem, ie_confirmacao, dt_atualizacao,
				 nm_usuario, nr_seq_requisicao, nr_seq_guia,
				 ds_arquivo_pedido, cd_mensagem_erro, nm_usuario_nrec,
				 dt_atualizacao_nrec, nr_versao)
			values (nr_seq_resp_benef_w, cd_transacao_w, ie_tipo_cliente_w,
				 cd_unimed_exec_w, cd_unimed_benef_w, nr_seq_execucao_w,
				 nr_seq_origem_w, ie_confirmacao_w, clock_timestamp(),
				 nm_usuario_p, null, nr_seq_execucao_w,
				 ds_arquivo_p, cd_mens_espec_1, nm_usuario_p,
				 clock_timestamp(), nr_versao_w);

			if (cd_mens_espec_1	<> 0) then
				CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_1,'',cd_estabelecimento_p, nr_seq_resp_benef_w, 'CB',
								cd_transacao_w, null, null, null, nm_usuario_p);
			end if;
		elsif (nr_seq_import_w	>= 2) then
			select	trim(both substr(ds_conteudo_w,1,25)),
				trim(both substr(ds_conteudo_w,34,18)),
				CASE WHEN (substr(ds_conteudo_w,52,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,52,4))::numeric  END ,
				trim(both substr(ds_conteudo_w,56,13)),
				trim(both substr(ds_conteudo_w,69,120)),
				trim(both substr(ds_conteudo_w,189,20)),
				trim(both substr(ds_conteudo_w,209,20)),
				CASE WHEN (substr(ds_conteudo_w,229,1))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,229,1))::numeric  END ,
				CASE WHEN (substr(ds_conteudo_w,230,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,230,4))::numeric  END ,
				trim(both substr(ds_conteudo_w,258,1)),
				CASE WHEN (substr(ds_conteudo_w,259,2))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,259,2))::numeric  END ,
				trim(both substr(ds_conteudo_w,261,4)),
				CASE WHEN (substr(ds_conteudo_w,265,1))::numeric =0 THEN null  ELSE (substr(ds_conteudo_w,265,1))::numeric  END
			into STRICT	nm_beneficiario_w,
				nm_empresa_w,
				cd_unimed_w,
				cd_usuario_plano_w,
				nm_compl_benef_w,
				nm_plano_w,
				nm_tipo_acomodacao_w,
				ie_abrangencia_w,
				cd_local_cobranca_w,
				ie_sexo_w,
				nr_via_cartao_w,
				cd_rede_atend_w,
				ie_regulamentacao_w
			;

			dt_auxiliar_1		:= trim(both substr(ds_conteudo_w,32,2))||trim(both substr(ds_conteudo_w,30,2))||trim(both substr(ds_conteudo_w,26,4));
			dt_auxiliar_2		:= trim(both substr(ds_conteudo_w,240,2))||trim(both substr(ds_conteudo_w,238,2))||trim(both substr(ds_conteudo_w,234,4));
			dt_auxiliar_3		:= trim(both substr(ds_conteudo_w,248,2))||trim(both substr(ds_conteudo_w,246,2))||trim(both substr(ds_conteudo_w,242,4));
			dt_auxiliar_4		:= trim(both substr(ds_conteudo_w,256,2))||trim(both substr(ds_conteudo_w,254,2))||trim(both substr(ds_conteudo_w,250,4));

			dt_nascimento_w		:= to_date(dt_auxiliar_1, 'dd/mm/yyyy');
			dt_inclusao_benef_w	:= to_date(dt_auxiliar_2, 'dd/mm/yyyy');
			dt_exclusao_benef_w	:= to_date(dt_auxiliar_3, 'dd/mm/yyyy');
			dt_validade_carteira_w	:= to_date(dt_auxiliar_4, 'dd/mm/yyyy');

			insert	into ptu_resp_nomes_benef(nr_sequencia, nr_seq_resp_benef, nm_beneficiario,
				 dt_nascimento, nm_empresa_abrev, cd_unimed,
				 cd_usuario_plano, nm_compl_benef, nm_plano,
				 dt_atualizacao, nm_usuario, nm_tipo_acomodacao,
				 ie_abrangencia, cd_local_cobranca, dt_validade_carteira,
				 dt_inclusao_benef, dt_exclusao_benef, ie_sexo,
				 nr_via_cartao, nm_usuario_nrec, dt_atualizacao_nrec,
				 cd_rede_atendimento, ie_tipo_plano)
			values (nextval('ptu_resp_nomes_benef_seq'), nr_seq_resp_benef_w, nm_beneficiario_w,
				 dt_nascimento_w, nm_empresa_w, cd_unimed_w,
				 cd_usuario_plano_w,nm_compl_benef_w, nm_plano_w,
				 clock_timestamp(), nm_usuario_p, nm_tipo_acomodacao_w,
				 ie_abrangencia_w, 0, dt_validade_carteira_w,
				 dt_inclusao_benef_w, dt_exclusao_benef_w, ie_sexo_w,
				 nr_via_cartao_w, nm_usuario_p, clock_timestamp(),
				 cd_rede_atend_w, ie_regulamentacao_w);
		end if;
	end if;

	end;
end loop;
close c01;

begin
	select	nr_seq_inf_conta_interc
	into STRICT	nr_seq_inf_conta_interc_w
	from	ptu_consulta_beneficiario
	where	nr_sequencia	= nr_seq_execucao_w;
exception
when others then
	nr_seq_inf_conta_interc_w	:= null;
end;

if (nr_seq_inf_conta_interc_w IS NOT NULL AND nr_seq_inf_conta_interc_w::text <> '') then
	CALL pls_atualiza_infor_conta_inter(	nr_seq_inf_conta_interc_w, nr_seq_resp_benef_w, null,
					null, null, nm_usuario_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_imp_resp_consult_benef_v50 ( ds_arquivo_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

