-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_alt_titularid_intercambio ( nr_seq_segurado_p bigint, nr_seq_titular_p bigint, nr_grau_parentesco_p bigint, ie_opcao_p bigint, nr_seq_mtvo_rescisao_p bigint, dt_rescisao_p timestamp, ds_observacao_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*	ie_opcao_p
	1 - Transformar dependente em titular
	2 - Transformar titular em dependente
	3 - Alterar titular do dependente
*/
nr_seq_titular_w		bigint;
nm_titular_w			varchar(255);
nr_seq_intercambio_w		bigint;
nr_seq_titular_ant_w		bigint;
ie_titular_pf_w			varchar(1);
ds_observacao_w			varchar(100);
cd_matricula_familia_w		bigint;
nm_pessoa_fisica_w		varchar(255);
nr_seq_seg_titular_w		bigint;
nm_titular_ant_w		varchar(255);
cd_pessoa_fisica_estip_w	varchar(10);

nr_seq_seg_dependente_w		bigint;
dt_contratacao_titular_w	timestamp;
dt_contratacao_w		timestamp;
dt_rescisao_w			timestamp;
dt_rescisao_tit_w		timestamp;
ie_reativa_titular_w		varchar(1)	:= 'N';
ie_titular_familia_w		varchar(10);
ie_alterar_matricula_benef_w	varchar(10);

C01 CURSOR FOR
	SELECT	nr_sequencia,
		dt_rescisao
	from	pls_segurado
	where	nr_seq_titular = nr_seq_titular_ant_w
	and	nr_seq_contrato	= nr_seq_intercambio_w;


BEGIN

ie_titular_pf_w		:= coalesce(obter_valor_param_usuario(1277, 2, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p), 'N');
ie_titular_familia_w	:= coalesce(obter_valor_param_usuario(1277,13,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p),'N');

if (coalesce(ie_opcao_p,0) <> 0) then
	select 	max(nr_seq_intercambio),
		max(cd_matricula_familia)
	into STRICT	nr_seq_intercambio_w,
		cd_matricula_familia_w
	from	pls_segurado
	where 	nr_sequencia = nr_seq_segurado_p;

	select	max(cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_estip_w
	from	pls_intercambio
	where	nr_sequencia	= nr_seq_intercambio_w;


	/* Deve apenas alterar a matricula, quando permitir mais de 1 titular no contrato PF, para contratos PJ pode ser alterado*/

	if (ie_titular_pf_w = 'S') and (cd_pessoa_fisica_estip_w IS NOT NULL AND cd_pessoa_fisica_estip_w::text <> '') then
		ie_alterar_matricula_benef_w	:= 'N';
	else
		ie_alterar_matricula_benef_w	:= 'S';
	end if;

	if (coalesce(ie_opcao_p,0) = 1) then
		select	nr_seq_titular,
			substr(pls_obter_dados_segurado(nr_seq_titular,'N'),1,255),
			dt_rescisao
		into STRICT	nr_seq_titular_ant_w,
			nm_titular_ant_w,
			dt_rescisao_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_segurado_p;

		update	pls_segurado
		set	nr_seq_titular		 = NULL,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p,
			nr_seq_parentesco	 = NULL,
			cd_matricula_familia	= CASE WHEN ie_alterar_matricula_benef_w='S' THEN null  ELSE cd_matricula_familia END
		where	nr_sequencia	= nr_seq_segurado_p;

		CALL pls_gerar_vl_seg_intercambio(
				null, nr_seq_segurado_p, 'T',
				cd_estabelecimento_p, nm_usuario_p, 'N', 'N',
				'N', 'N');

		if (dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') then
			ie_reativa_titular_w	:= 'S';
			CALL pls_reativar_seg_intercambio(nr_seq_segurado_p,clock_timestamp(),'Reativação do beneficiário ao transformar de dependente para titular','B','N','N',null,cd_estabelecimento_p,nm_usuario_p);
		end if;

		CALL pls_atualizar_familia_pf(nr_seq_segurado_p,cd_estabelecimento_p,nm_usuario_p);

		CALL pls_gerar_segurado_historico(	nr_seq_segurado_p, '28', clock_timestamp(), 'Alteração de titularidade',
						'Alteração da matrícula do beneficiário', null, null, null,
						null, clock_timestamp(), null, null,
						null, null, null, null,
						nm_usuario_p, 'N');

		if	((ie_titular_pf_w = 'S') and (cd_pessoa_fisica_estip_w IS NOT NULL AND cd_pessoa_fisica_estip_w::text <> '') or (ie_titular_familia_w = 'S')) then
			open C01;
			loop
			fetch C01 into
				nr_seq_seg_dependente_w,
				dt_rescisao_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin

				update	pls_segurado
				set	nr_seq_titular	= nr_seq_segurado_p
				where	nr_sequencia	= nr_seq_seg_dependente_w;

				if	(dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '' AND ie_reativa_titular_w = 'S') then
					CALL pls_reativar_seg_intercambio(nr_seq_seg_dependente_w,clock_timestamp(),'Reativação do beneficiário ao transformar de dependente para titular','B','N','N',null,cd_estabelecimento_p,nm_usuario_p);
				end if;

				/* Gerar histórico */

				CALL pls_gerar_segurado_historico(
					nr_seq_seg_dependente_w, '12', clock_timestamp(),
					'Alteração do titular do dependente (Titular anterior: ' || nm_titular_ant_w || ')', ds_observacao_p, null,
					null, null, null,
					clock_timestamp(), null, null,
					null, null, null,
					null, nm_usuario_p, 'S');

				CALL pls_atualizar_familia_pf(nr_seq_seg_dependente_w,cd_estabelecimento_p,nm_usuario_p);

				CALL pls_gerar_segurado_historico(	nr_seq_seg_dependente_w, '28', clock_timestamp(), 'Alteração de titularidade',
								'Alteração da matrícula do beneficiário', null, null, null,
								null, clock_timestamp(), null, null,
								null, null, null, null,
								nm_usuario_p, 'N');

				end;
			end loop;
			close C01;

			select	max(dt_rescisao)
			into STRICT	dt_rescisao_tit_w
			from	pls_segurado
			where	nr_sequencia	= nr_seq_titular_ant_w;

			if (coalesce(dt_rescisao_tit_w::text, '') = '') then
				/* Rescindir o segurado */

				if (coalesce(nr_seq_mtvo_rescisao_p,0) <> 0) then
					CALL pls_rescindir_segurado(nr_seq_titular_ant_w, dt_rescisao_p, dt_rescisao_p, nr_seq_mtvo_rescisao_p, 'Beneficiário foi rescindido, pois seu dependente agora virou titular', cd_estabelecimento_p, nm_usuario_p, 'B', 'N',null, null);
				else
					update	pls_segurado
					set	dt_rescisao			= clock_timestamp(),
						nm_usuario			= nm_usuario_p,
						dt_atualizacao			= clock_timestamp(),
						ie_situacao_atend		= 'I',
						ie_tipo_rescisao		= 'B'
					where	nr_sequencia			= nr_seq_titular_ant_w;

					/* Rescindir a carteirinha */

					update	pls_segurado_carteira
					set	dt_validade_carteira	= clock_timestamp(),
						nm_usuario		= nm_usuario_p,
						dt_atualizacao		= clock_timestamp()
					where	nr_seq_segurado		= nr_seq_titular_ant_w
					and	coalesce(dt_validade_carteira::text, '') = '';

					ds_observacao_w	:= 'Beneficiário foi rescindido, pois seu dependente agora virou titular';

					/* Gerar histórico */

					CALL pls_gerar_segurado_historico(	nr_seq_titular_ant_w, '1', clock_timestamp(), 'Rescisão',
									ds_observacao_w, null, null, null,
									null, clock_timestamp(), null, null,
									null, null, null, null,
									nm_usuario_p, 'N');
				end if;
			end if;
		end if;
		/* Gerar histórico */

		CALL pls_gerar_segurado_historico(
			nr_seq_segurado_p, '12', clock_timestamp(),
			'Alteração de dependente para titular (Titular anterior: ' || nm_titular_ant_w || ')', ds_observacao_p, null,
			null, null, null,
			clock_timestamp(), null, null,
			nr_seq_titular_ant_w, null, null,
			null, nm_usuario_p, 'S');

	elsif (coalesce(ie_opcao_p,0) = 2) then

		update	pls_segurado
		set	nr_seq_titular		= nr_seq_titular_p,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p,
			nr_seq_parentesco	= nr_grau_parentesco_p
		where	nr_sequencia		= nr_seq_segurado_p;

		CALL pls_gerar_vl_seg_intercambio(
				null, nr_seq_segurado_p, 'T',
				cd_estabelecimento_p, nm_usuario_p,'N',
				'N','N', 'N');

		/* Gerar histórico */

		CALL pls_gerar_segurado_historico(
			nr_seq_segurado_p, '12', clock_timestamp(),
			'Alteração de titular para dependente', ds_observacao_p, null,
			null, null, null,
			clock_timestamp(), null, null,
			null, null, null,
			null, nm_usuario_p, 'S');

		CALL pls_atualizar_familia_pf(nr_seq_segurado_p,cd_estabelecimento_p,nm_usuario_p);

		CALL pls_gerar_segurado_historico(	nr_seq_segurado_p, '28', clock_timestamp(), 'Alteração de titularidade',
						'Alteração da matrícula do beneficiário', null, null, null,
						null, clock_timestamp(), null, null,
						null, null, null, null,
						nm_usuario_p, 'N');

	elsif (coalesce(ie_opcao_p,0) = 3) then

		select	nr_seq_titular,
			substr(pls_obter_dados_segurado(nr_seq_titular,'N'),1,255)
		into STRICT	nr_seq_titular_w,
			nm_titular_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_segurado_p;

		if (nr_seq_titular_w <> nr_seq_titular_p) then
			update	pls_segurado
			set	nr_seq_titular		= nr_seq_titular_p,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p,
				nr_seq_parentesco	= CASE WHEN nr_grau_parentesco_p=0 THEN nr_seq_parentesco  ELSE nr_grau_parentesco_p END
			where	nr_sequencia		= nr_seq_segurado_p;

			/* Gerar histórico */

			CALL pls_gerar_segurado_historico(
				nr_seq_segurado_p, '12', clock_timestamp(),
				'Alteração do titular do dependente (Titular anterior: ' || nm_titular_w || ')', ds_observacao_p, null,
				null, null, null,
				clock_timestamp(), null, null,
				null, null, null,
				null, nm_usuario_p, 'S');

		CALL pls_atualizar_familia_pf(nr_seq_segurado_p,cd_estabelecimento_p,nm_usuario_p);

		CALL pls_gerar_segurado_historico(	nr_seq_segurado_p, '28', clock_timestamp(), 'Alteração de titularidade',
						'Alteração da matrícula do beneficiário', null, null, null,
						null, clock_timestamp(), null, null,
						null, null, null, null,
						nm_usuario_p, 'N');


		end if;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_alt_titularid_intercambio ( nr_seq_segurado_p bigint, nr_seq_titular_p bigint, nr_grau_parentesco_p bigint, ie_opcao_p bigint, nr_seq_mtvo_rescisao_p bigint, dt_rescisao_p timestamp, ds_observacao_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

