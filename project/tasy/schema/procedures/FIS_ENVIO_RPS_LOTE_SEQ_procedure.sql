-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_envio_rps_lote_seq ( cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_transmissao_w		nfe_transmissao.nr_sequencia%type;
nr_seq_lote_w				lote_nfe_transmissao.nr_sequencia%type;
nr_seq_lote_conf_w			config_lote_nf_trans.nr_sequencia%type;
nr_seq_lote_nota_w			nota_fiscal_lote_nfe.nr_sequencia%type;
nr_rps_sequencial_w			nota_fiscal.nr_rps_sequencial%type;
ie_inconsistencia_w			varchar(1);
qt_transacao_lote_w			bigint;
qt_registro_w				bigint;

--Serie
C00 CURSOR FOR
SELECT 	cd_serie_nf,
		nr_sequencia
from 	config_lote_serie
where 	nr_seq_lote_conf   = nr_seq_lote_conf_w;

--Notas
C01 CURSOR(	cd_serie_nf_pc	config_lote_serie.cd_serie_nf%type ) FOR
SELECT 	n.nr_sequencia
from 	nota_fiscal n,
		operacao_nota o
where 	n.cd_operacao_nf = o.cd_operacao_nf
and	((n.dt_atualizacao_estoque IS NOT NULL AND n.dt_atualizacao_estoque::text <> '' AND n.ie_situacao = 1) or ((coalesce(n.dt_atualizacao_estoque::text, '') = '') and (n.ie_situacao = 8)))
and	o.ie_servico = 'S'
and	o.ie_nf_eletronica = 'S'
and	o.ie_operacao_fiscal = 'S'
and	coalesce(n.nr_nfe_imp::text, '') = ''
and	coalesce(n.ie_status_envio::text, '') = ''
and	n.cd_estabelecimento = cd_estabelecimento_p
and n.cd_serie_nf = cd_serie_nf_pc
order by n.dt_emissao asc;

BEGIN
--Limpa tabela para envio automatico
delete	FROM w_nfse_envio_automatico
where	nm_usuario 	= nm_usuario_p
and		cd_estabelecimento	= cd_estabelecimento_p;

--Configuracao
select	coalesce(max(qt_transmissao_lote),1),
		max(nr_sequencia)
into STRICT	qt_transacao_lote_w,
		nr_seq_lote_conf_w
from	config_lote_nf_trans
where	cd_estabelecimento	= cd_estabelecimento_p
and		ie_tipo_nota = 2;

--Verifica as series configuradas para envio
for r_C00_w in C00() loop
	--Zerar registro
	qt_registro_w := 0;
	
	--Verifica ultima sequencia RPS para a serie
	SELECT 	coalesce(max(a.nr_rps_sequencial),0)
	into STRICT	nr_rps_sequencial_w
	FROM 	nota_fiscal a
	where 	a.cd_serie_nf = r_C00_w.cd_serie_nf;

	--Abre cursor com as notas da serie
	for r_C01_w in C01(r_C00_w.cd_serie_nf) loop
				
		--Verifica se a nota possui inconsistencia
		select 	coalesce(substr(obter_inconsist_nfse_regra(r_C01_w.nr_sequencia,'2'),1,1),'N')
		into STRICT	ie_inconsistencia_w
		;
		--Se possuir inconsistencia nem grava a transmissao	
		if (ie_inconsistencia_w = 'N') then
			
			--Incrementa quantidade de registros do lote
			qt_registro_w := qt_registro_w+1;
			
			--Nova sequencia RPS para a serie
			nr_rps_sequencial_w := nr_rps_sequencial_w+1;
			
			--No primeiro registro gera o lote
			if (qt_registro_w = 1) then
				begin
				select	nextval('nota_fiscal_lote_nfe_seq')
				into STRICT	nr_seq_lote_nota_w
				;
				--Inserir lote da nota	
				insert into nota_fiscal_lote_nfe(		nr_sequencia,
								cd_estabelecimento, 
								dt_atualizacao, 
								nm_usuario, 
								dt_atualizacao_nrec, 
								nm_usuario_nrec, 
								dt_geracao, 
								dt_envio, 
								ds_mensagem_envio, 
								dt_retorno, 
								ds_mensagem_retorno, 
								nr_protocolo, 
								ie_status_nfe, 
								nr_seq_transmissao)
					values ( 	nr_seq_lote_nota_w, 
								cd_estabelecimento_p, 
								clock_timestamp(), 
								nm_usuario_p, 
								clock_timestamp(), 
								nm_usuario_p, 
								clock_timestamp(), 
								clock_timestamp(), 
								'', 
								clock_timestamp(),
								'', 
								'', 
								null, 
								null);
			
				select 	nextval('lote_nfe_transmissao_seq')
				into STRICT	nr_seq_lote_w
				;
				--Lote transmissao
				insert into lote_nfe_transmissao(	
						 nr_sequencia,
						 cd_estabelecimento,             
						 dt_atualizacao,                 
						 nm_usuario,                     
						 dt_atualizacao_nrec,            
						 nm_usuario_nrec,                
						 ie_tipo_nota,
						 ie_status_lote,
						 nr_seq_config_serie,
						 nr_seq_lote_nota)
				values (	nr_seq_lote_w,
						cd_estabelecimento_p,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						'NFSE',
						'1',
						r_C00_w.nr_sequencia,
						nr_seq_lote_nota_w);
						
				---Inserir lote para leitura do envio automatico			 
				insert into w_nfse_envio_automatico(	
							nr_seq_transmissao,
							cd_estabelecimento,
							qt_espera_consulta,
							nm_usuario,
							nr_seq_lote)
					values (	null,
							cd_estabelecimento_p,
							0,
							nm_usuario_p,
							nr_seq_lote_w);
							
				--Gravar transmissao
				select 	nextval('nfe_transmissao_seq')
				into STRICT	nr_seq_transmissao_w
				;

				--Inserir transmissao
				insert into nfe_transmissao(nr_sequencia,
								 dt_atualizacao,
								 nm_usuario,
								 dt_atualizacao_nrec,
								 nm_usuario_nrec,
								 ie_tipo_nota,
								 ie_tipo_transmissao,
								 nr_seq_lote,
								 ie_status_transmissao)
				values (nr_seq_transmissao_w,
							 clock_timestamp(),
							 nm_usuario_p,
							 clock_timestamp(),
							 nm_usuario_p,
							 'NFSE',
							 1,
							 nr_seq_lote_w,
							 'IT');
							
				end;
			end if;
		
			if (nr_seq_transmissao_w IS NOT NULL AND nr_seq_transmissao_w::text <> '') then
				--Inserir nota para transmissao
				insert into nfe_transmissao_nf(nr_sequencia,
                                dt_atualizacao,
                                nm_usuario,
                                dt_atualizacao_nrec,
                                nm_usuario_nrec,
                                nr_seq_transmissao,
                                nr_seq_nota_fiscal,
								nr_ordem,
								nr_rps_sequencial)
				values ( nextval('nfe_transmissao_nf_seq'),
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_transmissao_w,
								r_C01_w.nr_sequencia,
								qt_registro_w,
								nr_rps_sequencial_w
								);			
								
				--Altera status da nota	
				update	nota_fiscal
				set		ie_status_envio = 'T'
				where	nr_sequencia = r_C01_w.nr_sequencia;
			
				--Setar uma transmissao de nota para o lote pois a classe EnviarNotaFiscalEletronicaServico precisa de uma transmissao valida 

				--para poder buscar o metodo de transmissao (1- envio, 2- cancelamento, 3- consulta)
				update	w_nfse_envio_automatico
				set		nr_seq_transmissao 	= nr_seq_transmissao_w
				where	nr_seq_lote 		= nr_seq_lote_w
				and		cd_estabelecimento 	= cd_estabelecimento_p
				and		nm_usuario 			= nm_usuario_p;
				
				--Atualiza ultimo numero RPS sequencial para serie
				update	config_lote_serie
				set		nr_rps_sequencial 	= nr_rps_sequencial_w
				where	nr_seq_lote_conf   	= nr_seq_lote_conf_w
				and		cd_serie_nf			= r_C00_w.cd_serie_nf;
				
				--Atualiza transmissao final do lote de transmissao no lote da nota
				update	nota_fiscal_lote_nfe
				set		nr_seq_transmissao 	= nr_seq_transmissao_w
				where	nr_sequencia 		= nr_seq_lote_nota_w;
			end if;
			
		end if;
		--Se atingiu o numero de notas configuradas pro lote zera
		if (qt_transacao_lote_w = qt_registro_w) then
			qt_registro_w := 0;
		end if;	
		
		commit;
			
	end loop;--C01
	
end loop;--C00
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_envio_rps_lote_seq ( cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

