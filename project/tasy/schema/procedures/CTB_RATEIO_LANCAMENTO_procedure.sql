-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_rateio_lancamento ( nr_sequencia_p bigint, nr_seq_criterio_p bigint, nm_usuario_p text, dt_vigencia_p timestamp ) AS $body$
DECLARE


nr_seq_movto_cc_w		ctb_movto_centro_custo.nr_sequencia%type;
nr_seq_agrupamento_w		ctb_movimento.nr_seq_agrupamento%type;
cd_estab_movto_w		ctb_movimento.cd_estabelecimento%type;
nr_lote_contabil_w		ctb_movimento.nr_lote_contabil%type;
cd_conta_credito_w		ctb_movimento.cd_conta_credito%type;
cd_conta_debito_w		ctb_movimento.cd_conta_debito%type;
nr_seq_movto_rat_w		ctb_movimento.nr_sequencia%type;
nr_seq_movto_w			ctb_movimento.nr_sequencia%type;
vl_movimento_w			ctb_movimento.vl_movimento%type;
vl_rateio_soma_w		ctb_movimento.vl_movimento%type;

c01 CURSOR(
	vl_movimento_pc  ctb_movimento.vl_movimento%type,
	nr_seq_crit_rateio_pc  ctb_criterio_rateio.nr_sequencia%type,
	dt_vigencia_pc  timestamp
	) FOR
	SELECT	x.cd_estabelecimento,
		x.cd_centro_custo,
		x.pr_rateio,
		x.ie_situacao,
		case when(qt_rateio_desc = 1) then x.vl_por_estab + x.vl_sobra_rateio else x.vl_por_estab end vl_por_estab,
	        case when(qt_rateio_desc = 1) then x.vl_rateio + x.vl_sobra_rateio else x.vl_rateio end vl_rateio
	from (
	SELECT	c.cd_estabelecimento,
		a.cd_centro_custo,
		a.pr_rateio,
		round(((vl_movimento_pc*(a.pr_rateio))/100),2) vl_rateio,
		vl_movimento_pc - sum(round(((vl_movimento_pc*(a.pr_rateio))/100),2)) over () vl_sobra_rateio,
		count(*) over (order by a.pr_rateio desc, a.nr_sequencia desc) qt_rateio_desc,
		sum(round(((vl_movimento_pc*(a.pr_rateio))/100),2)) over (partition by c.cd_estabelecimento) vl_por_estab,
		d.ie_situacao
		from	ctb_criterio_rateio_item a,
			centro_custo c,
			ctb_criterio_rateio d
		where	a.nr_seq_criterio = nr_seq_crit_rateio_pc
		and	(a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> '')
		and	a.cd_centro_custo = c.cd_centro_custo
		and (dt_vigencia_pc >= coalesce(a.dt_inicio_vigencia,dt_vigencia_pc) and dt_vigencia_pc <= coalesce(a.dt_fim_vigencia,dt_vigencia_pc))
        and d.nr_sequencia = a.nr_seq_criterio
		order by
			a.pr_rateio desc,
			a.nr_sequencia desc
	) x;

c01_w c01%rowtype;


BEGIN

delete	FROM ctb_movto_centro_custo
where	nr_seq_movimento = nr_sequencia_p;

select	a.vl_movimento,
	coalesce(a.cd_estabelecimento,b.cd_estabelecimento),
	a.nr_lote_contabil,
	a.cd_conta_credito,
	a.cd_conta_debito,
	a.nr_seq_agrupamento
into STRICT	vl_movimento_w,
	cd_estab_movto_w,
	nr_lote_contabil_w,
	cd_conta_credito_w,
	cd_conta_debito_w,
	nr_seq_agrupamento_w
from	lote_contabil b,
	ctb_movimento a
where	a.nr_lote_contabil = b.nr_lote_contabil
and	a.nr_sequencia = nr_sequencia_p;

select	coalesce(max(nr_sequencia),0)
into STRICT	nr_seq_movto_rat_w
from	ctb_movimento a;

open c01(
	vl_movimento_pc => vl_movimento_w,
	nr_seq_crit_rateio_pc => nr_seq_criterio_p,
	dt_vigencia_pc => dt_vigencia_p
	);
loop
fetch c01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	select	nextval('ctb_movto_centro_custo_seq')
	into STRICT	nr_seq_movto_cc_w
	;

	nr_seq_movto_w := nr_sequencia_p;
	if (cd_estab_movto_w <> c01_w.cd_estabelecimento) then
		select	coalesce(max(a.nr_sequencia),0)
		into STRICT	nr_seq_movto_w
		from	ctb_movimento a
		where	a.cd_estabelecimento = c01_w.cd_estabelecimento
		and	a.nr_lote_contabil = nr_lote_contabil_w
		and	coalesce(a.cd_conta_credito,'0') = coalesce(cd_conta_credito_w,'0')
		and	coalesce(a.cd_conta_debito,'0') = coalesce(cd_conta_debito_w,'0')
		and	coalesce(a.nr_seq_agrupamento,'0') = coalesce(nr_seq_agrupamento_w,'0')
		and	nr_sequencia > nr_seq_movto_rat_w;

		if (nr_seq_movto_w = 0) then
			select	nextval('ctb_movimento_seq')
			into STRICT	nr_seq_movto_w
			;

			insert into ctb_movimento(
				nr_sequencia,
				nr_lote_contabil,
				nr_seq_mes_ref,
				dt_movimento,
				vl_movimento,
				dt_atualizacao,
				nm_usuario,
				cd_historico,
				cd_conta_debito,
				cd_conta_credito,
				ds_compl_historico,
				nr_seq_agrupamento,
				ie_revisado,
				cd_estabelecimento,
				ds_consistencia,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_classif_debito,
				cd_classif_credito,
				ds_observacao,
				nr_seq_movto_corresp,
				dt_revisao,
				nm_usuario_revisao,
				nr_seq_apres,
				nr_seq_conta_ans_deb,
				nr_seq_conta_ans_cred,
				nr_agrup_sequencial,
				nr_documento,
				nr_seq_regra_lanc,
				ie_origem_documento,
				nr_seq_movto_partida,
				nr_seq_reg_concil,
				ie_status_concil,
				ie_status_origem,
				nr_seq_mutacao_pl,
				ds_justificativa,
				ie_transitorio,
				dt_atualizacao_saldo,
				dt_lancto_ext)
			SELECT	nr_seq_movto_w,
				nr_lote_contabil,
				nr_seq_mes_ref,
				dt_movimento,
				c01_w.vl_por_estab,
				clock_timestamp(),
				nm_usuario_p,
				cd_historico,
				cd_conta_debito,
				cd_conta_credito,
				ds_compl_historico,
				nr_seq_agrupamento,
				ie_revisado,
				c01_w.cd_estabelecimento,
				ds_consistencia,
				clock_timestamp(),
				nm_usuario_p,
				cd_classif_debito,
				cd_classif_credito,
				ds_observacao,
				nr_seq_movto_corresp,
				dt_revisao,
				nm_usuario_revisao,
				nr_seq_apres,
				nr_seq_conta_ans_deb,
				nr_seq_conta_ans_cred,
				nr_agrup_sequencial,
				nr_documento,
				nr_seq_regra_lanc,
				ie_origem_documento,
				nr_seq_movto_partida,
				nr_seq_reg_concil,
				ie_status_concil,
				ie_status_origem,
				nr_seq_mutacao_pl,
				ds_justificativa,
				ie_transitorio,
				dt_atualizacao_saldo,
				dt_lancto_ext
			from 	ctb_movimento
			where	nr_sequencia = nr_sequencia_p;
		end if;
	end if;

	insert into	ctb_movto_centro_custo(
		nr_sequencia,
		nr_seq_movimento,
		cd_centro_custo,
		dt_atualizacao,
		nm_usuario,
		vl_movimento,
		pr_rateio)
	values (	nr_seq_movto_cc_w,
		nr_seq_movto_w,
		c01_w.cd_centro_custo,
		clock_timestamp(),
		nm_usuario_p,
		c01_w.vl_rateio,
		c01_w.pr_rateio);
	vl_rateio_soma_w := coalesce(vl_rateio_soma_w, 0) + coalesce(c01_w.vl_rateio, 0);

    if (c01_w.ie_situacao = 'I')then
        CALL wheb_mensagem_pck.exibir_mensagem_abort(1109674);
    end if;
end loop;
close c01;

select	coalesce(sum(a.vl_movimento),0)
into STRICT	vl_movimento_w
from	ctb_movto_centro_custo a
where	a.nr_seq_movimento = nr_sequencia_p;

if (vl_rateio_soma_w = 0 or coalesce(vl_rateio_soma_w::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1109493);
end if;

if (vl_movimento_w <> 0) then
	update	ctb_movimento a
	set	vl_movimento = vl_movimento_w
	where	a.nr_sequencia = nr_sequencia_p;
else
	delete
	from	ctb_movimento a
	where	a.nr_sequencia = nr_sequencia_p;
end if;

--ctb_atualizar_rateio_movto(nr_sequencia_p, nm_usuario_p);
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_rateio_lancamento ( nr_sequencia_p bigint, nr_seq_criterio_p bigint, nm_usuario_p text, dt_vigencia_p timestamp ) FROM PUBLIC;

