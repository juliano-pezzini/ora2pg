-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_mat_esp_nao_autor_cir ( nr_atendimento_p bigint, nr_seq_agenda_p bigint, nr_cirurgia_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_material_w		bigint;
ds_material_w		varchar(255);
qt_mat_lib_w		smallint;
qt_material_w		smallint;
nr_sequencia_w		bigint;
ds_obs_mat_w		varchar(255);
ie_exige_just_w		varchar(1);
nr_seq_aut_mat_w	bigint;



c01 CURSOR FOR
	--Busca os materiais lançados na prescrição que possuem autorização, porém com quantidade utilizada superior a autorizada
	SELECT	b.cd_material,
		SUBSTR(obter_desc_material(b.cd_material),1,255) ds_materiais,
		g.qt_material qt_material,
		CASE WHEN b.IE_APROVACAO='N' THEN 0  ELSE b.qt_material END  qt_materia_lib,
		'' ds_observacao,
		'N' ie_exige_justif,
		b.nr_sequencia
	FROM    autorizacao_cirurgia a,
		material_autor_cirurgia b,
		agenda_paciente d,
		cirurgia e,
		prescr_medica f,
		prescr_material g
	WHERE   b.nr_seq_autorizacao = a.nr_sequencia
	AND	d.nr_cirurgia = e.nr_cirurgia
	AND 	coalesce(f.ie_tipo_prescr_cirur,0) <> 2
	AND	f.nr_cirurgia = e.nr_cirurgia
	AND     g.nr_prescricao = f.nr_prescricao
	AND     a.nr_seq_agenda = d.nr_sequencia
	AND     b.CD_MATERIAL = g.cd_material
	AND     coalesce(b.qt_material,0) > 0
	and	coalesce(a.nr_atendimento,0)	= coalesce(nr_atendimento_p,a.nr_atendimento)
	and	coalesce(a.nr_seq_agenda,0) 	= coalesce(nr_seq_agenda_p,a.nr_seq_agenda)
	AND     ((b.IE_APROVACAO  = 'S' AND b.QT_MATERIAL < g.QT_MATERIAL) OR (b.IE_APROVACAO = 'N'))
	AND	coalesce(b.nr_seq_marca,0) = coalesce(g.nr_seq_marca,0)
	AND	coalesce(b.cd_cgc_fornec,0) = coalesce(g.cd_fornec_consignado,0)
	and	a.ie_estagio_autor <> 6
	
UNION

	--Busca os materiais lançados na prescrição que não possuem autorização, porém com autorização  de especiais já criada
	SELECT	g.cd_material,
		SUBSTR(obter_desc_material(g.cd_material),1,255) ds_materiais,
		g.qt_material qt_material,
		0 qt_materia_lib,
		'' ds_observacao,
		'N' ie_exige_justif,
		null nr_sequencia
	FROM    autorizacao_cirurgia a,
		agenda_paciente d,
		cirurgia e,
		prescr_medica f,
		prescr_material g
	WHERE   a.nr_seq_agenda = d.nr_sequencia
	AND	d.nr_cirurgia = e.nr_cirurgia
	AND 	coalesce(f.ie_tipo_prescr_cirur,0) <> 2
	AND	f.nr_cirurgia = e.nr_cirurgia
	AND     g.nr_prescricao = f.nr_prescricao
	AND     a.nr_seq_agenda = d.nr_sequencia
	and	coalesce(a.nr_atendimento,0)	= coalesce(nr_atendimento_p,a.nr_atendimento)
	and	coalesce(a.nr_seq_agenda,0) 	= coalesce(nr_seq_agenda_p,a.nr_seq_agenda)
	and	a.ie_estagio_autor <> 6
	AND     NOT EXISTS (	SELECT  1
				FROM    material_autorizado b
				WHERE   b.nr_seq_prescricao 	= g.nr_sequencia
				and	b.nr_prescricao	 	= g.nr_prescricao);

c02 CURSOR FOR
	--Busca os materiais lançados na prescrição que possuem autorização, porém com quantidade utilizada superior a autorizada na função Autorização convênio
	SELECT	b.cd_material,
		SUBSTR(obter_desc_material(b.cd_material),1,255) ds_materiais,
		c.qt_material qt_material,
		CASE WHEN coalesce(b.dt_aprovacao::text, '') = '' THEN 0  ELSE b.qt_autorizada END  qt_materia_lib,
		'' ds_observacao,
		'N' ie_exige_justif,
		b.nr_sequencia
	from	autorizacao_convenio a,
		material_autorizado b,
		prescr_material c
	where  	a.nr_sequencia			= b.nr_sequencia_autor
	and	b.nr_prescricao			= c.nr_prescricao
	and	b.nr_seq_prescricao		= c.nr_sequencia
	and    	coalesce(b.qt_solicitada,0)  	> 0
	and	coalesce(a.nr_atendimento,0)		= coalesce(nr_atendimento_p,a.nr_atendimento)
	and	coalesce(a.nr_seq_agenda,0) 		= coalesce(nr_seq_agenda_p,a.nr_seq_agenda)
	and	coalesce(b.nr_seq_marca,0) 		= coalesce(c.nr_seq_marca,0)
	and	coalesce(b.cd_cgc_fabricante,0)	= coalesce(c.cd_fornec_consignado,0)
	and	obter_estagio_autor(a.nr_seq_estagio,'C') <> 70
	and	((b.dt_aprovacao IS NOT NULL AND b.dt_aprovacao::text <> '' AND b.qt_autorizada < c.qt_material) or (coalesce(b.dt_aprovacao::text, '') = ''));



BEGIN
-- Autorização de materiais especiais
if (coalesce(nr_atendimento_p,0) > 0) or (coalesce(nr_seq_agenda_p,0) > 0) then
	open C01;
	loop
	fetch C01 into
		cd_material_w,
		ds_material_w,
		qt_mat_lib_w,
		qt_material_w,
		ds_obs_mat_w,
		ie_exige_just_w,
		nr_seq_aut_mat_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		select 	nextval('pepo_mat_proc_justif_autor_seq')
		into STRICT	nr_sequencia_w
		;

		insert into  pepo_mat_proc_justif_autor(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_cirurgia,
							cd_procedimento,
							cd_material,
							ie_origem_proced,
							qt_solicitada,
							qt_realizada,
							ds_justificativa,
							ds_material,
							ie_exige_justificativa,
							nr_seq_mat_autor_cir)
		values (	nr_sequencia_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_cirurgia_p,
							null,
							cd_material_w,
							null,
							coalesce(qt_mat_lib_w,0),
							coalesce(qt_material_w,0),
							null,
							ds_material_w,
							ie_exige_just_w,
							nr_seq_aut_mat_w);

		end;
	end loop;
	close c01;

	-- Autorização convênio
	open C02;
	loop
	fetch C02 into
		cd_material_w,
		ds_material_w,
		qt_mat_lib_w,
		qt_material_w,
		ds_obs_mat_w,
		ie_exige_just_w,
		nr_seq_aut_mat_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		select 	nextval('pepo_mat_proc_justif_autor_seq')
		into STRICT	nr_sequencia_w
		;

		insert into  pepo_mat_proc_justif_autor(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_cirurgia,
							cd_procedimento,
							cd_material,
							ie_origem_proced,
							qt_solicitada,
							qt_realizada,
							ds_justificativa,
							ds_material,
							ie_exige_justificativa,
							nr_seq_mat_autor)
		values (	nr_sequencia_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_cirurgia_p,
							null,
							cd_material_w,
							null,
							coalesce(qt_mat_lib_w,0),
							coalesce(qt_material_w,0),
							null,
							ds_material_w,
							ie_exige_just_w,
							nr_seq_aut_mat_w);

		end;
	end loop;
	close C02;
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_mat_esp_nao_autor_cir ( nr_atendimento_p bigint, nr_seq_agenda_p bigint, nr_cirurgia_p bigint, nm_usuario_p text) FROM PUBLIC;

