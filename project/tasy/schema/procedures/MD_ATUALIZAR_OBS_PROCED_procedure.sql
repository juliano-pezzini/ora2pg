-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE md_atualizar_obs_proced (nr_prescricao_p bigint, nr_seq_mapa_p bigint, nr_atendimento_p bigint, qt_hora_p bigint, dt_final_p timestamp, dt_dieta_p timestamp, cd_refeicao_p text, cd_pessoa_fisica_p text, nm_usuario_p text, ie_opcao_p text) AS $body$
DECLARE


nr_prescricao_ww		bigint;
ds_observacao_proced_w		varchar(2000);
ds_observacao_proced_ww		varchar(2000);
ie_prescr_liberadas_enferm_w	varchar(1);
varPrescrRN_w			varchar(1);
nr_seq_mapa_w			bigint;
dt_dieta_x			timestamp;

C01 CURSOR FOR
	SELECT	substr(a.ds_observacao,1,2000) || ' | '
	from	prescr_procedimento a,
		mapa_regra_proced b
	where	a.nr_prescricao = nr_prescricao_ww
	and	a.ie_origem_proced = b.ie_origem_proced
	and	a.cd_procedimento = b.cd_procedimento
	and	(a.ds_observacao IS NOT NULL AND a.ds_observacao::text <> '');


BEGIN

ie_prescr_liberadas_enferm_w := obter_param_usuario(1000, 114, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_prescr_liberadas_enferm_w);
varPrescrRN_w := obter_param_usuario(1000, 19, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, varPrescrRN_w);

if (ie_opcao_p = 'P') then
	begin

	if (coalesce(nr_prescricao_p,0) <> 0) then
		nr_prescricao_ww := nr_prescricao_p;
	else
		select	coalesce(max(a.nr_prescricao),0)
		into STRICT	nr_prescricao_ww
		from	prescr_medica a
		where 	a.nr_atendimento	= nr_atendimento_p
		and	(((coalesce(a.dt_liberacao,a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao,a.dt_liberacao_medico))::text <> '') and ie_prescr_liberadas_enferm_w = 'N')
		or	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> ''))
		and 	a.dt_prescricao	> clock_timestamp() - (qt_hora_p / 24)
		and	a.dt_prescricao <= dt_final_p
		and	((coalesce(a.ie_recem_nato,'N') = 'N') or (a.ie_recem_nato = varPrescrRN_w));
	end if;

	nr_seq_mapa_w := nr_seq_mapa_p;

	end;
elsif (ie_opcao_p = 'T') then
	begin

	if (nr_prescricao_p <> 0) then
		nr_prescricao_ww := nr_prescricao_p;
	else
		select	coalesce(max(a.nr_prescricao),0)
		into STRICT	nr_prescricao_ww
		from 	prescr_medica a
		where 	a.nr_atendimento	= nr_atendimento_p
		and	(((coalesce(a.dt_liberacao,a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao,a.dt_liberacao_medico))::text <> '') and ie_prescr_liberadas_enferm_w = 'N')
		or	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> ''))
		and 	a.dt_prescricao	> clock_timestamp() - (qt_hora_p / 24)
		and	a.dt_prescricao <= dt_final_p
		and	((coalesce(a.ie_recem_nato,'N') = 'N') or (a.ie_recem_nato = varPrescrRN_w))
		and	not exists (	SELECT 	1
					from 	mapa_dieta z
					where	z.cd_pessoa_fisica		= a.cd_pessoa_fisica
					and 	z.dt_dieta			= dt_dieta_p
					and	z.cd_refeicao			= cd_refeicao_p
					and	(z.dt_liberacao IS NOT NULL AND z.dt_liberacao::text <> ''));
	end if;

	if (coalesce(nr_seq_mapa_p,0) <> 0) then
		nr_seq_mapa_w := nr_seq_mapa_p;
	else
		select max(nr_sequencia)
		into STRICT	nr_seq_mapa_w
		from 	mapa_dieta
		where 	cd_pessoa_fisica	= cd_pessoa_fisica_p
		and 	dt_dieta		= trunc(dt_dieta_p,'dd')
		and 	cd_refeicao		= cd_refeicao_p
		and 	ie_destino_dieta	= 'P'
		and	coalesce(nr_seq_superior::text, '') = '';
	end if;

	end;

end if;

ds_observacao_proced_w := '';

open C01;
loop
fetch C01 into
	ds_observacao_proced_ww;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	ds_observacao_proced_w := ds_observacao_proced_w || ds_observacao_proced_ww;

	end;
end loop;
close c01;

ds_observacao_proced_w := substr(ds_observacao_proced_w,1,length(ds_observacao_proced_w)-3);

if (coalesce(ds_observacao_proced_w,' ') <> ' ') then

	update 	mapa_dieta
	set	ds_observacao_proced = ds_observacao_proced_w
	where 	nr_sequencia 	= nr_seq_mapa_w;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE md_atualizar_obs_proced (nr_prescricao_p bigint, nr_seq_mapa_p bigint, nr_atendimento_p bigint, qt_hora_p bigint, dt_final_p timestamp, dt_dieta_p timestamp, cd_refeicao_p text, cd_pessoa_fisica_p text, nm_usuario_p text, ie_opcao_p text) FROM PUBLIC;

