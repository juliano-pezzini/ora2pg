-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE verifica_dose_maxima_npt ( nr_prescricao_p bigint, nr_seq_nut_ele_mat_p bigint, ie_utiliza_horarios_p text, ds_erro_p INOUT text, ds_erro2_p INOUT text) AS $body$
DECLARE


qt_max_prescricao_w			double precision;
cd_unidade_medida_consumo_w		varchar(30);
cd_unid_med_limite_w			varchar(30);
qt_limite_pessoa_w			double precision;
qt_conversao_dose_w			double precision;
qt_conversao_dose_limite_w			double precision;
qt_dose_w				double precision;
qt_dose_ww				nut_pac_elem_mat.qt_volume%type;
qt_dose_limite_w				double precision;
qt_dose_npt_ped_w			double precision;
nr_ocorrencia_npt_ped_w			double precision;
qt_volume_npt_ped_w			double precision;
qt_dose_npt_ad_w				double precision;
nr_ocorrencia_npt_ad_w			double precision;
qt_volume_npt_ad_w			double precision;
qt_dose_npt_prot_w			double precision;
nr_ocorrencia_npt_prot_w			double precision;
qt_volume_npt_prot_w			double precision;
cd_unidade_medida_dose_w			varchar(50);
ds_observacao_w				varchar(255);
ds_mensagem_regra_w			varchar(255);
cd_pessoa_fisica_w			varchar(30);
cd_material_w				material.cd_material%type;
ie_dose_limite_w				varchar(15);
nr_ocorrencia_w				double precision;
ie_via_aplicacao_w				varchar(5);
nr_seq_agrupamento_w			bigint;
ie_justificativa_w				varchar(5);
ds_justificativa_w				varchar(4000);
cd_prescritor_w				varchar(50);
cd_setor_atendimento_w			integer;
qt_regra_w				bigint;
qt_idade_w				bigint;
qt_idade_dia_w				double precision;
qt_solucao_w				nut_pac_elem_mat.qt_volume%type;
qt_ml_componente_w			nut_pac_elem_mat.qt_volume%type;
qt_total_w				double precision;
qt_dose_www				nut_pac_elem_mat.qt_volume%type;
qt_idade_mes_w				double precision;
qt_peso_w				double precision;
qt_limite_peso_w				double precision;
nr_horas_validade_w			integer;
cd_estabelecimento_w			bigint;
ie_somar_dose_medic_w			varchar(5);
nr_atendimento_w				bigint;
ie_agrupador_w				prescr_material.ie_agrupador%type;
nr_ocorrencia_sol_w			double precision;
qt_dose_sol_w				double precision;
qt_solucao_sol_w				double precision;
qt_solucao_mat_w				double precision;
ds_elemento_w				varchar(255);
ds_produto_w				varchar(100);

c01 CURSOR FOR
SELECT	coalesce(qt_limite_pessoa,0),
	coalesce(ie_dose_limite,'DOSE'),
	cd_unid_med_limite,
	coalesce(ie_justificativa,'S'),
	ds_observacao,
	ds_mensagem_regra
from	material_prescr
where	cd_material = cd_material_w
and	coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0)
and	coalesce(ie_via_aplicacao, coalesce(ie_via_aplicacao_w,0)) = coalesce(ie_via_aplicacao_w,0)
and	(qt_limite_pessoa IS NOT NULL AND qt_limite_pessoa::text <> '')
and	qt_idade_w between coalesce(qt_idade_min,0) and coalesce(qt_idade_max,999)
and	qt_idade_dia_w between coalesce(qt_idade_min_dia,0) and coalesce(qt_idade_max_dia,55000)
and	qt_idade_mes_w between coalesce(qt_idade_min_mes,0) and coalesce(qt_idade_max_mes,55000)
and	((coalesce(nr_seq_agrupamento::text, '') = '') or (nr_seq_agrupamento = nr_seq_agrupamento_w))
and	qt_peso_w between coalesce(qt_peso_min,0) and coalesce(qt_peso_max,999)
and	coalesce(cd_protocolo::text, '') = ''
and	ie_tipo = '2'
and 	coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
and	Obter_se_setor_regra_prescr(nr_sequencia, cd_setor_atendimento_w) = 'S'
and	((coalesce(cd_especialidade::text, '') = '') or (obter_se_especialidade_medico(cd_prescritor_w, cd_especialidade) = 'S'))
and	((coalesce(cd_doenca_cid::text, '') = '') or (obter_se_cid_atendimento(nr_atendimento_w,cd_doenca_cid) = 'S'))
and (coalesce(ie_tipo_item,'TOD') in ('OUT','TOD'))
order by	nr_sequencia,
				cd_especialidade;
				
c02 CURSOR FOR
SELECT	c.cd_material, --- NPT Adulta Antiga
	coalesce(c.cd_unidade_medida,obter_unid_med_usua('ml')),
	coalesce(c.qt_dose,coalesce(c.qt_volume,0)),
	null ds_justificativa,
	coalesce(c.qt_volume,0),
	coalesce(c.qt_volume,0),
	coalesce(c.qt_dose,coalesce(c.qt_volume,0))
from	nut_paciente a,
	nut_paciente_elemento b,
	nut_pac_elem_mat c
where	a.nr_sequencia = b.nr_seq_nut_pac
and	b.nr_sequencia = c.nr_seq_nut_pac_ele
and	a.nr_prescricao = nr_prescricao_p
and	c.nr_sequencia = nr_seq_nut_ele_mat_p

union all

SELECT	c.cd_material, --- NPT Adulta Protocolo
	coalesce(c.cd_unidade_medida,obter_unid_med_usua('ml')),
	coalesce(c.qt_dose,coalesce(c.qt_volume,0)),
	a.ds_justificativa,
	coalesce(c.qt_volume,0),
	coalesce(c.qt_volume,0),
	coalesce(c.qt_dose,coalesce(c.qt_volume,0))
from	nut_pac a,
	nut_pac_elem_mat c
where	a.nr_sequencia = c.nr_seq_nut_pac
and	coalesce(a.ie_npt_adulta,'S') = 'S'
and	a.nr_prescricao = nr_prescricao_p
and	c.nr_sequencia = nr_seq_nut_ele_mat_p

union all

select	d.cd_material, --- NPT Pedi-trica e Neonatal
	coalesce(c.cd_unidade_medida,obter_unid_med_usua('ml')),	
	coalesce(c.qt_dose,coalesce(c.qt_volume,0)),
	a.ds_justificativa,
	coalesce(c.qt_volume,0),
	coalesce(c.qt_volume,0),
	coalesce(c.qt_dose,coalesce(c.qt_volume,0))
from	nut_pac a,
	nut_pac_elemento b,
	nut_pac_elem_mat c,
	nut_elem_material d
where	a.nr_sequencia = b.nr_seq_nut_pac
and	b.nr_sequencia = c.nr_seq_pac_elem
and	b.nr_seq_elemento = d.nr_seq_elemento
and	d.nr_sequencia = c.nr_seq_elem_mat
and	a.nr_prescricao = nr_prescricao_p
and	c.nr_sequencia = nr_seq_nut_ele_mat_p;


BEGIN

select	coalesce(max(ie_somar_dose_medic),'N')
into STRICT	ie_somar_dose_medic_w
from	parametro_medico
where	cd_estabelecimento = Wheb_usuario_pck.get_cd_estabelecimento;

ds_erro_p	:= '';
ds_erro2_p	:= '';

/* 
Criado o cursor para que n-o seja necess-rio fazer um select individual para cada NPT
*/
open c02;
loop
fetch c02 into
	cd_material_w,
	cd_unidade_medida_dose_w,
	qt_dose_ww,
	ds_justificativa_w,
	qt_solucao_w,
	qt_ml_componente_w,
	qt_dose_www;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	nr_ocorrencia_w := 1;
	end;
end loop;
close c02;

select 	max(ie_via_aplicacao)
into STRICT	ie_via_aplicacao_w
from 	via_aplicacao
where 	coalesce(ie_situacao,'A') = 'A'
and 	coalesce(ie_endovenosa,'N') = 'S';

if (ie_somar_dose_medic_w = 'S') then
	-- Realizar a soma dos componentes de solu--o
	select	coalesce(sum(obter_dose_convertida(cd_material, qt_dose, cd_unidade_medida_dose, cd_unidade_medida_dose_w)),0),
			coalesce(sum(nr_ocorrencia),0),
			coalesce(sum(qt_solucao),0)
	into STRICT	qt_dose_sol_w,
			nr_ocorrencia_sol_w,
			qt_solucao_sol_w
	from	prescr_material
	where	ie_agrupador = 4
	and		cd_material		= cd_material_w
	and		nr_prescricao	= nr_prescricao_p;
	
	--- NPT Adulta Antiga
	select	coalesce(sum(obter_dose_convertida(c.cd_material, coalesce(c.qt_dose,c.qt_volume), coalesce(c.cd_unidade_medida,obter_unid_med_usua('ml')), cd_unidade_medida_dose_w)),0),
			sum(1),
			coalesce(sum(c.qt_volume),0)
	into STRICT	qt_dose_npt_ad_w,
			nr_ocorrencia_npt_ad_w,
			qt_volume_npt_ad_w
	from	nut_paciente a,
			nut_paciente_elemento b,
			nut_pac_elem_mat c
	where	a.nr_sequencia = b.nr_seq_nut_pac
	and		b.nr_sequencia = c.nr_seq_nut_pac_ele
	and		a.nr_prescricao = nr_prescricao_p
	and		cd_material = cd_material_w;

	--- NPT Adulta Protocolo
	select	coalesce(sum(obter_dose_convertida(c.cd_material, coalesce(c.qt_dose,c.qt_volume), coalesce(c.cd_unidade_medida,obter_unid_med_usua('ml')), cd_unidade_medida_dose_w)),0),
			sum(1),
			coalesce(sum(c.qt_volume),0)
	into STRICT	qt_dose_npt_prot_w,
			nr_ocorrencia_npt_prot_w,
			qt_volume_npt_prot_w
	from	nut_pac a,
			nut_pac_elem_mat c
	where	a.nr_sequencia = c.nr_seq_nut_pac
	and		coalesce(a.ie_npt_adulta,'S') = 'S'
	and		a.nr_prescricao = nr_prescricao_p
	and		c.cd_material = cd_material_w;

	--- NPT Pedi-trica e Neonatal
	select	coalesce(sum(obter_dose_convertida(d.cd_material, coalesce(c.qt_dose,c.qt_volume), coalesce(c.cd_unidade_medida,obter_unid_med_usua('ml')), cd_unidade_medida_dose_w)),0),
			sum(1),
			coalesce(sum(c.qt_volume),0)
	into STRICT	qt_dose_npt_ped_w,
			nr_ocorrencia_npt_ped_w,
			qt_volume_npt_ped_w
	from	nut_pac a,
			nut_pac_elemento b,
			nut_pac_elem_mat c,
			nut_elem_material d
	where	a.nr_sequencia = b.nr_seq_nut_pac
	and		b.nr_sequencia = c.nr_seq_pac_elem
	and		b.nr_seq_elemento = d.nr_seq_elemento
	and		d.nr_sequencia = c.nr_seq_elem_mat
	and		a.nr_prescricao = nr_prescricao_p
	and		d.cd_material = cd_material_w;
	
	
	-- Realizar a soma dos medicamentos (incluindo o item principal)	
	select	coalesce(sum(obter_dose_convertida(cd_material, qt_dose, cd_unidade_medida_dose, cd_unidade_medida_dose_w)),0),
			coalesce(sum(nr_ocorrencia),0),
			coalesce(sum(qt_solucao),0)
	into STRICT	qt_dose_ww,
			nr_ocorrencia_w,
			qt_solucao_w
	from	prescr_material
	where	ie_agrupador = 1
	and		cd_material		= cd_material_w
	and		nr_prescricao	= nr_prescricao_p;
	
	qt_dose_ww := (qt_dose_ww + qt_dose_npt_ped_w + qt_dose_npt_prot_w + qt_dose_npt_ad_w);
	nr_ocorrencia_w := (nr_ocorrencia_w + nr_ocorrencia_npt_ped_w + nr_ocorrencia_npt_prot_w + nr_ocorrencia_npt_ad_w);
	qt_solucao_w := (qt_solucao_w + qt_volume_npt_ped_w + qt_volume_npt_prot_w + qt_volume_npt_ad_w);
	
end if;

select	max(cd_prescritor),
	coalesce(max(nr_horas_validade),24),
	max(cd_estabelecimento),
	max(cd_setor_atendimento),
	max(nr_atendimento)
into STRICT	cd_prescritor_w,
	nr_horas_validade_w,
	cd_estabelecimento_w,
	cd_setor_atendimento_w,
	nr_atendimento_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

select	max(nr_seq_agrupamento)
into STRICT	nr_seq_agrupamento_w
from	setor_atendimento
where	cd_setor_atendimento	= cd_setor_atendimento_w;

if (coalesce(cd_material_w,0) > 0) and (cd_unidade_medida_dose_w IS NOT NULL AND cd_unidade_medida_dose_w::text <> '') and
	((coalesce(qt_dose_sol_w,0) + coalesce(qt_dose_ww,0)) > 0) then
	begin
	
	-- Informa--es da prescri--o
	select	max(cd_setor_atendimento),
		coalesce(max((obter_idade_pf(cd_pessoa_fisica, clock_timestamp(), 'A'))::numeric ),0),
		coalesce(max(qt_peso),0),
		max(cd_pessoa_fisica)
	into STRICT	cd_setor_atendimento_w,
		qt_idade_w,
		qt_peso_w,
		cd_pessoa_fisica_w
	from	prescr_medica
	where	nr_prescricao	= nr_prescricao_p;
	
	-- Informa--es do paciente
	select	max(obter_idade(b.dt_nascimento,coalesce(b.dt_obito,clock_timestamp()),'DIA')),
		max(obter_idade(b.dt_nascimento,coalesce(b.dt_obito,clock_timestamp()),'M'))
	into STRICT	qt_idade_dia_w,
		qt_idade_mes_w
	from	pessoa_fisica b
	where	b.cd_pessoa_fisica	= cd_pessoa_fisica_w;
	
	-- Informa--es do material
	select	coalesce(max(qt_max_prescricao),0),
		max(cd_unidade_medida_consumo),
		max(cd_unid_med_limite),
		coalesce(max(qt_limite_pessoa),0),
		coalesce(max(ie_dose_limite),'DOSE')
	into STRICT	qt_max_prescricao_w,
		cd_unidade_medida_consumo_w,
		cd_unid_med_limite_w,
		qt_limite_pessoa_w,
		ie_dose_limite_w
	from	material
	where	cd_material	= cd_material_w;

	select	count(*)
	into STRICT	qt_regra_w
	from	material where		(qt_limite_pessoa IS NOT NULL AND qt_limite_pessoa::text <> '')
	and		cd_material	= cd_material_w LIMIT 1;

	select	max(substr(obter_descricao_padrao('NUT_ELEMENTO','DS_ELEMENTO',b.nr_seq_elemento),1,40)),
		max(substr(obter_desc_mat_npt(nr_seq_elem_mat),1,100))
	into STRICT	ds_elemento_w,
		ds_produto_w
	from	nut_pac a,
		nut_pac_elemento b,
		nut_pac_elem_mat c
	where	a.nr_sequencia = b.nr_seq_nut_pac
	and	b.nr_sequencia = c.nr_seq_pac_elem
	and	nr_prescricao = nr_prescricao_p
	and	c.nr_sequencia = nr_seq_nut_ele_mat_p;

	if (qt_regra_w > 0) then
		begin
		if (cd_unidade_medida_consumo_w = cd_unidade_medida_dose_w) then
			qt_conversao_dose_w	:= 1;
		else
			begin
			select	coalesce(max(qt_conversao),1)
			into STRICT	qt_conversao_dose_w
			from	material_conversao_unidade
			where	cd_material		= cd_material_w
			and	cd_unidade_medida	= cd_unidade_medida_dose_w;
			exception
				when others then
				qt_conversao_dose_w	:= 1;
			end;
		end if;
		
		if (coalesce(qt_solucao_w,0) > 0) then
			if (ie_agrupador_w = 4) then
				qt_total_w		:= qt_ml_componente_w;
			else
				qt_total_w	:=  coalesce(qt_solucao_w,qt_dose_www);
			end if;
			
			if (qt_total_w > 0) then
				qt_dose_ww	:= dividir((qt_dose_ww * qt_solucao_w), qt_total_w);
			end if;
	
			qt_dose_w	:= dividir(trunc(dividir(qt_dose_ww * 1000, qt_conversao_dose_w)), 1000);
		else
			qt_dose_w	:= dividir(trunc(dividir(qt_dose_ww * 1000, qt_conversao_dose_w)), 1000);
		end if;

		if (qt_max_prescricao_w > 0) and (qt_max_prescricao_w < coalesce(qt_dose_w,0)) then
			-- A dose unit-ria - maior que a usual prevista #@QT_MAX_PRESCRICAO_P#@ #@CD_UNIDADE_MEDIDA_CONSUMO_P#@
			ds_erro_p	:= wheb_mensagem_pck.get_texto(277286, 'QT_MAX_PRESCRICAO_P=' || qt_max_prescricao_w || ';CD_UNIDADE_MEDIDA_CONSUMO_P=' || cd_unidade_medida_consumo_w);
		end if;

		if (cd_unidade_medida_consumo_w = cd_unid_med_limite_w) then
			qt_conversao_dose_limite_w	:= 1;
		else
			begin
			select	coalesce(max(qt_conversao),1)
			into STRICT	qt_conversao_dose_limite_w
			from	material_conversao_unidade
			where	cd_material		= cd_material_w
			and	cd_unidade_medida	= cd_unid_med_limite_w;
			exception
				when others then
					qt_conversao_dose_limite_w	:= 1;
			end;
		end if;

		qt_dose_w		:= dividir(trunc(dividir(qt_dose_ww * 1000, qt_conversao_dose_w)), 1000);
		qt_dose_limite_w	:= dividir(trunc(dividir(qt_limite_pessoa_w * 1000, qt_conversao_dose_limite_w)), 1000);
		if (ie_dose_limite_w = 'DIA') then
			begin
			if (nr_horas_validade_w	> 24) then
				nr_ocorrencia_w	:= trunc(dividir((nr_ocorrencia_w * 24), nr_horas_validade_w));
			end if;
			qt_dose_w	:= qt_dose_w * coalesce(nr_ocorrencia_w,1);
			qt_dose_w	:= qt_dose_w + obter_dose_npt_dia(nr_prescricao_p,nr_seq_nut_ele_mat_p,ie_utiliza_horarios_p);
			end;
		elsif (ie_dose_limite_w = 'AT') then
			begin
			qt_dose_w	:= qt_dose_w * coalesce(nr_ocorrencia_w,1);
			qt_dose_w	:= qt_dose_w + obter_dose_npt_atend_dia(nr_prescricao_p,nr_seq_nut_ele_mat_p,qt_dose_w,ie_utiliza_horarios_p);
			end;
		elsif (qt_peso_w > 0) and (ie_dose_limite_w = 'KG/DIA') then
			begin
			-- Por kg
			qt_dose_w	:= dividir(qt_dose_w, coalesce(qt_peso_w,1));

			qt_dose_w	:= qt_dose_w * coalesce(nr_ocorrencia_w,1);
			qt_dose_w	:= qt_dose_w + obter_dose_npt_dia(nr_prescricao_p,nr_seq_nut_ele_mat_p,ie_utiliza_horarios_p);
			
			-- Por dia				

			-- Caso possua solu--o prescrita, dever- ser adicionada a convers-o dos componentes - dose
			if (qt_solucao_sol_w > 0) then
				if (nr_horas_validade_w > 24) then
					nr_ocorrencia_sol_w	:= trunc(dividir((nr_ocorrencia_sol_w * 24), nr_horas_validade_w));
					qt_solucao_sol_w	:= qt_solucao_sol_w * nr_ocorrencia_sol_w;
				end if;
				
				qt_dose_w	:= qt_dose_w + obter_dose_convertida(cd_material_w, qt_solucao_sol_w, obter_unid_med_usua('ml'), cd_unidade_medida_consumo_w);
			end if;
			end;
		elsif (qt_peso_w > 0) and (ie_dose_limite_w = 'KG/D') then
			begin
			qt_dose_w	:= dividir(qt_dose_w, coalesce(qt_peso_w,1));/*por KG*/


			/*por dose*/

			qt_dose_w	:= qt_dose_w + obter_dose_npt_dia(nr_prescricao_p,nr_seq_nut_ele_mat_p,ie_utiliza_horarios_p);
			end;
		end if;

		if (qt_dose_limite_w > 0) and (qt_dose_limite_w < coalesce(qt_dose_w,0)) then

			if (ds_elemento_w IS NOT NULL AND ds_elemento_w::text <> '') and (ds_produto_w IS NOT NULL AND ds_produto_w::text <> '') and (Obter_Funcao_Ativa in (924, 950)) then
				-- (#@DS_ELEMENTO_P#@ / #@DS_PRODUTO_P#@)

				-- A dose unit-ria - maior que a dose limite #@QT_LIMITE_PESSOA_P#@ #@CD_UNID_MED_LIMITE_P#@ por #@IE_DOSE_LIMITE_P#@
				ds_erro2_p := wheb_mensagem_pck.get_texto(1123984, 'QT_LIMITE_PESSOA_P=' || qt_limite_pessoa_w || ';CD_UNID_MED_LIMITE_P=' || cd_unid_med_limite_w || ';DS_DOSE_LIMITE_P=' || lower(ie_dose_limite_w) || ';DS_ELEMENTO_P=' || ds_elemento_w  || ';DS_PRODUTO_P=' || ds_produto_w);
			else
				-- A dose unit-ria - maior que a dose limite #@QT_LIMITE_PESSOA_P#@ #@CD_UNID_MED_LIMITE_P#@ por #@DS_DOSE_LIMITE_P#@
				ds_erro2_p	:= wheb_mensagem_pck.get_texto(277256, 'QT_LIMITE_PESSOA_P=' || qt_limite_pessoa_w || ';CD_UNID_MED_LIMITE_P=' || cd_unid_med_limite_w || ';DS_DOSE_LIMITE_P=' || lower(ie_dose_limite_w));
			end if;

		end if;
		end;
	else
		begin
		-- Verifica se tem alguma regra para os dados informados 
		open c01;
		loop
		fetch c01 into
			qt_limite_pessoa_w,
			ie_dose_limite_w,
			cd_unid_med_limite_w,
			ie_justificativa_w,
			ds_observacao_w,
			ds_mensagem_regra_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			
			ds_erro2_p :=  null;
			
			if (cd_unidade_medida_consumo_w = cd_unidade_medida_dose_w) then
				qt_conversao_dose_w	:= 1;
			else
				begin
				select	coalesce(max(qt_conversao),1)
				into STRICT	qt_conversao_dose_w
				from	material_conversao_unidade
				where	cd_material		= cd_material_w
				and		cd_unidade_medida	= cd_unidade_medida_dose_w;
				exception
					when others then
						qt_conversao_dose_w	:= 1;
				end;
			end if;

			if (qt_max_prescricao_w > 0) and (qt_max_prescricao_w < coalesce(qt_dose_w,0)) then
				-- A dose unit-ria - maior que a usual prevista #@QT_MAX_PRESCRICAO_P#@ #@CD_UNIDADE_MEDIDA_CONSUMO_P#@

				-- #@DS_OBSERVACAO_P#@
				ds_erro_p	:= substr(wheb_mensagem_pck.get_texto(278059, 'QT_MAX_PRESCRICAO_P=' || qt_max_prescricao_w ||';CD_UNIDADE_MEDIDA_CONSUMO_P=' || cd_unidade_medida_consumo_w ||';DS_OBSERVACAO_P=' || coalesce(ds_observacao_w, ' ')),1,255);
				if (ds_mensagem_regra_w IS NOT NULL AND ds_mensagem_regra_w::text <> '') then
					ds_erro_p := ds_mensagem_regra_w;
				end if;
			end if;

			if (cd_unidade_medida_consumo_w = cd_unid_med_limite_w) then
				qt_conversao_dose_limite_w	:= 1;
			else
				begin
				select	coalesce(max(qt_conversao),1)
				into STRICT	qt_conversao_dose_limite_w
				from	material_conversao_unidade
				where	cd_material		= cd_material_w
				and		cd_unidade_medida	= cd_unid_med_limite_w;
				exception
					when others then
						qt_conversao_dose_limite_w	:= 1;
				end;
			end if;
			
			if (coalesce(qt_solucao_w,0) > 0) then
				if (ie_agrupador_w = 4) then
					qt_total_w		:= qt_ml_componente_w;
				else
					qt_total_w	:= coalesce(qt_solucao_w,qt_dose_www);
				end if;
			
				if (qt_total_w > 0) then
					qt_dose_ww	:= dividir((qt_total_w * qt_conversao_dose_limite_w), qt_conversao_dose_w);
				end if;
				qt_dose_w	:=  dividir((qt_dose_ww * qt_dose_www), qt_total_w);
			else
				qt_dose_w	:= dividir(trunc(dividir(qt_dose_ww * 1000, qt_conversao_dose_limite_w)), 1000);
			end if;
			
			if (coalesce(qt_solucao_w,0) = 0) then
				qt_dose_w		:= dividir(trunc(dividir(qt_dose_ww * 1000, qt_conversao_dose_w)), 1000);
			else
				qt_dose_w		:= dividir(trunc(dividir(qt_dose_w * 1000, qt_conversao_dose_limite_w)), 1000);
			end if;
			
			qt_dose_limite_w	:= dividir(trunc(dividir(qt_limite_pessoa_w * 1000, qt_conversao_dose_limite_w)), 1000);
			
			if (ie_dose_limite_w = 'DIA') then
				qt_dose_w	:= qt_dose_w * coalesce(nr_ocorrencia_w,1);
				qt_dose_w	:= qt_dose_w + obter_dose_npt_dia(nr_prescricao_p,nr_seq_nut_ele_mat_p,ie_utiliza_horarios_p);
				
				-- Caso possua solu--o prescrita, dever- ser adicionada a convers-o dos componentes - dose
				if (qt_solucao_sol_w > 0) then
					if (nr_horas_validade_w > 24) then
						nr_ocorrencia_sol_w	:= trunc(dividir((nr_ocorrencia_sol_w * 24), nr_horas_validade_w));
						qt_solucao_sol_w	:= qt_solucao_sol_w * nr_ocorrencia_sol_w;
					end if;
					
					qt_dose_w	:= qt_dose_w + obter_dose_convertida(cd_material_w, qt_solucao_sol_w, obter_unid_med_usua('ml'), cd_unidade_medida_consumo_w);
				end if;
			elsif (ie_dose_limite_w = 'AT') then
				begin
				qt_dose_w	:= qt_dose_w * coalesce(nr_ocorrencia_w,1);
				qt_dose_w	:= qt_dose_w + obter_dose_npt_atend_dia(nr_prescricao_p,nr_seq_nut_ele_mat_p,qt_dose_w,ie_utiliza_horarios_p);
				end;
			elsif (qt_peso_w > 0) then
				if (ie_dose_limite_w = 'KG') then
					qt_dose_w	:= dividir(qt_dose_w, coalesce(qt_peso_w,1));
				elsif (ie_dose_limite_w = 'KG/DIA') then
					begin
					/*por KG*/

					qt_dose_w	:= dividir(qt_dose_w, coalesce(qt_peso_w,1));
					
					qt_dose_w	:= qt_dose_w * coalesce(nr_ocorrencia_w,1);
					qt_dose_w	:= qt_dose_w + obter_dose_npt_dia(nr_prescricao_p,nr_seq_nut_ele_mat_p,ie_utiliza_horarios_p);
					
					-- Por dia

					-- Caso possua solu--o prescrita, dever- ser adicionada a convers-o dos componentes - dose
					if (qt_solucao_sol_w > 0) then
						if (nr_horas_validade_w > 24) then
							nr_ocorrencia_sol_w	:= trunc(dividir((nr_ocorrencia_sol_w * 24), nr_horas_validade_w));
							qt_solucao_sol_w	:= qt_solucao_sol_w * nr_ocorrencia_sol_w;
						end if;
						
						qt_dose_w	:= qt_dose_w + obter_dose_convertida(cd_material_w, qt_solucao_sol_w, obter_unid_med_usua('ml'), cd_unidade_medida_consumo_w);
					end if;
					end;
				elsif (ie_dose_limite_w = 'KG/D') then
					qt_dose_w	:= dividir(qt_dose_w, coalesce(qt_peso_w,1));/*por KG*/
					qt_dose_w	:= qt_dose_w + obter_dose_npt_dia(nr_prescricao_p,nr_seq_nut_ele_mat_p,ie_utiliza_horarios_p);
				end if;
			end if;

			if (qt_dose_limite_w > 0) and (qt_dose_limite_w < coalesce(qt_dose_w,0)) and
				((ie_justificativa_w = 'S') or (coalesce(ds_justificativa_w::text, '') = '')) then

				if (ds_elemento_w IS NOT NULL AND ds_elemento_w::text <> '') and (ds_produto_w IS NOT NULL AND ds_produto_w::text <> '') and (Obter_Funcao_Ativa in (924, 950)) then
					-- (#@DS_ELEMENTO_P#@ / #@DS_PRODUTO_P#@)

					-- A dose unit-ria - maior que a dose limite #@QT_LIMITE_PESSOA_P#@ #@CD_UNID_MED_LIMITE_P#@ por #@IE_DOSE_LIMITE_P#@

					--  #@DS_OBSERVACAO_P#@
					ds_erro2_p := wheb_mensagem_pck.get_texto(1124065, 'QT_LIMITE_PESSOA_P=' || qt_limite_pessoa_w || ';CD_UNID_MED_LIMITE_P=' || cd_unid_med_limite_w || ';DS_DOSE_LIMITE_P=' || lower(ie_dose_limite_w) || ';DS_ELEMENTO_P=' || ds_elemento_w  || ';DS_PRODUTO_P=' || ds_produto_w);
				else
					-- A dose unit-ria - maior que a dose limite #@QT_LIMITE_PESSOA_P#@ #@CD_UNID_MED_LIMITE_P#@ por #@IE_DOSE_LIMITE_P#@

					--  #@DS_OBSERVACAO_P#@
					ds_erro2_p	:= substr(wheb_mensagem_pck.get_texto(278070, 'QT_LIMITE_PESSOA_P='||QT_LIMITE_PESSOA_W||';CD_UNID_MED_LIMITE_P=' ||CD_UNID_MED_LIMITE_W||';IE_DOSE_LIMITE_P='||lower(IE_DOSE_LIMITE_W)||';DS_OBSERVACAO_P='||coalesce(DS_OBSERVACAO_W, ' ')),1,255);
				end if;

				if (ds_mensagem_regra_w IS NOT NULL AND ds_mensagem_regra_w::text <> '') then
					ds_erro2_p := ds_mensagem_regra_w;
				end if;
			end if;

			end;
		end loop;
		close c01;

		end;
	end if;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE verifica_dose_maxima_npt ( nr_prescricao_p bigint, nr_seq_nut_ele_mat_p bigint, ie_utiliza_horarios_p text, ds_erro_p INOUT text, ds_erro2_p INOUT text) FROM PUBLIC;

