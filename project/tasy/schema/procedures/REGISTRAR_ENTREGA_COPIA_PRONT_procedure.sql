-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE registrar_entrega_copia_pront (nr_seq_solic_p bigint, cd_pessoa_entrega_p text, dt_entrega_p timestamp, nm_usuario_p text, nr_atendimento_p text, cd_paciente_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_copia_w		bigint;
nr_seq_prontuario_w	bigint;
nr_sequencia_w		bigint;
qt_pront_w		bigint;
qt_entrega_w		bigint;
ds_parametro_w		varchar(10) := obter_valor_param_usuario(941,103,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p);
ds_status_devolv_w	varchar(1)  := coalesce(obter_valor_param_usuario(941,130,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p),'N');

C01 CURSOR FOR
	SELECT	nr_seq_prontuario
	from	same_solic_pront_envelope
	where	nr_seq_solic = nr_seq_solic_p;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	same_prontuario
	where	((nr_atendimento = coalesce(nr_atendimento_p,0))
	or (cd_pessoa_fisica = cd_paciente_p) and coalesce(nr_atendimento_p::text, '') = '')
	and	((ds_parametro_w = 'N') or (cd_estabelecimento = cd_estabelecimento_p));


BEGIN

select	count(*)
into STRICT	qt_pront_w
from	same_solic_pront_envelope
where	nr_seq_solic = nr_seq_solic_p;

select 	count(*)
into STRICT	qt_entrega_w
from	same_copia_prontuario
where	nr_seq_solic = nr_seq_solic_p;

if (qt_entrega_w > 0) then

	CALL Wheb_mensagem_pck.exibir_mensagem_abort(264193);

end if;

if (qt_pront_w > 0) then

	begin

	open C01;
	loop
	fetch C01 into
		nr_seq_prontuario_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

		begin

		select	nextval('same_copia_prontuario_seq')
		into STRICT 	nr_seq_copia_w
		;


			insert into same_copia_prontuario( nr_sequencia,
					           dt_atualizacao,
					           nm_usuario,
						   dt_atualizacao_nrec,
						   nm_usuario_nrec,
						   dt_entrega_pront,
						   cd_pessoa_fisica,
						   nr_seq_prontuario,
						   nr_seq_solic)
					values ( nr_seq_copia_w,
						   clock_timestamp(),
						   nm_usuario_p,
						   clock_timestamp(),
						   nm_usuario_p,
						   dt_entrega_p,
						   cd_pessoa_entrega_p,
						   nr_seq_prontuario_w,
						   nr_seq_solic_p);

	end;
	end loop;
	close C01;

	end;

elsif (qt_pront_w = 0) then

	begin

	open C02;
	loop
	fetch C02 into
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */

		begin

		select	nextval('same_copia_prontuario_seq')
		into STRICT 	nr_seq_copia_w
		;

		insert into same_copia_prontuario( nr_sequencia,
						   dt_atualizacao,
						   nm_usuario,
						   dt_atualizacao_nrec,
						   nm_usuario_nrec,
						   dt_entrega_pront,
						   cd_pessoa_fisica,
						   nr_seq_prontuario,
						   nr_seq_solic)
					values ( nr_seq_copia_w,
						   clock_timestamp(),
						   nm_usuario_p,
						   clock_timestamp(),
						   nm_usuario_p,
						   dt_entrega_p,
						   cd_pessoa_entrega_p,
						   nr_sequencia_w,
						   nr_seq_solic_p);
        end;
	end loop;
	close C02;

	if (coalesce(nr_sequencia_w::text, '') = '') then

		select	nextval('same_copia_prontuario_seq')
		into STRICT 	nr_seq_copia_w
		;

		insert into same_copia_prontuario( nr_sequencia,
						   dt_atualizacao,
						   nm_usuario,
						   dt_atualizacao_nrec,
						   nm_usuario_nrec,
						   dt_entrega_pront,
						   cd_pessoa_fisica,
						   nr_seq_prontuario,
						   nr_seq_solic)
					values ( nr_seq_copia_w,
						   clock_timestamp(),
						   nm_usuario_p,
						   clock_timestamp(),
						   nm_usuario_p,
						   dt_entrega_p,
						   cd_pessoa_entrega_p,
						   null,
						   nr_seq_solic_p);
	end if;

	end;

end if;

if (ds_status_devolv_w = 'S') then
	update	same_solic_pront
	set	ie_status = 'D'
	where	nr_Sequencia = nr_seq_solic_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE registrar_entrega_copia_pront (nr_seq_solic_p bigint, cd_pessoa_entrega_p text, dt_entrega_p timestamp, nm_usuario_p text, nr_atendimento_p text, cd_paciente_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

