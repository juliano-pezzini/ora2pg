-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE transferir_agenda_consulta (cd_estabelecimento_p bigint, nr_seq_origem_p bigint, nr_seq_destino_p bigint, ie_transfere_copia_p text, nr_seq_motivo_p bigint, dt_agenda_p timestamp, nm_usuario_p text, ds_motivo_transf_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


cd_agenda_w		bigint;
cd_agenda_dest_w		bigint;
nr_minuto_duracao_w	bigint;
ie_status_agenda_w	varchar(05);
ie_classif_agenda_w	varchar(05);
nr_seq_classif_med_w	bigint;
cd_convenio_w		integer;
cd_pessoa_fisica_w	varchar(10);
nm_pessoa_contato_w	varchar(255);
ds_observacao_w		varchar(2000);/* rafael em 29/02/2007 os51268 alterado tamanho do campo para 2000 */
ie_status_paciente_w	varchar(03);
nm_paciente_w		varchar(80);
nr_atendimento_w		bigint;
dt_confirmacao_w		timestamp;
ds_confirmacao_w		varchar(80);
nr_telefone_w		varchar(80);
qt_idade_pac_w		smallint;
nr_seq_plano_w		bigint;
nr_seq_agenda_w		agenda_consulta_proc.nr_seq_agenda%type := 0;
dt_agenda_ww		timestamp;
cd_pessoa_dest_w		varchar(10);
ie_necessita_contato_w	varchar(01);
nr_seq_sala_w		bigint;
cd_categoria_w		varchar(10);
cd_tipo_acomodacao_w	smallint;
cd_usuario_convenio_w	varchar(30);
cd_complemento_w		varchar(30);
dt_validade_carteira_w	timestamp;
nr_doc_convenio_w	varchar(20);
cd_senha_w		varchar(20);
ds_senha_w		varchar(10);
dt_nascimento_pac_w	timestamp;
cd_tipo_agenda_w		bigint;
nr_controle_secao_w	bigint;
qt_diaria_prev_w		smallint;
ie_tipo_atendimento_ww	smallint;
dt_agenda_orig_w	timestamp;
nr_seq_w bigint;
dt_cur_date_w timestamp;
nr_seq_reab_time_w bigint;
nr_seq_tratament_w bigint;
is_record_exist_w varchar(1);
cd_proced_w		bigint;
ie_origem_w		bigint;
nr_seq_interno_w		bigint;
ie_exec_proc_w		varchar(1);
nm_usuario_origem_w	varchar(15);
dt_agendamento_w	timestamp;
ie_ok_w			varchar(01) := 'S';

nr_seq_proc_interno_w	bigint;/* rafael em 27/07/06 os37032 */
cd_procedimento_w	bigint;/* rafael em 27/07/06 os37032 */
ie_origem_proced_w	bigint;/* rafael em 27/07/06 os37032 */
qt_total_secao_w		smallint;/* rafael em 27/07/06 os37032 */
nr_secao_w		smallint;/* rafael em 27/07/06 os37032 */
cd_medico_w		varchar(10);/* rafael em 27/07/06 os37032 */
 /* cfe os41566 nao leva mais medico executor */
cd_medico_solic_w		varchar(10);/* rafael em 27/07/06 os37032 */
qt_prescricao_w		bigint;/* rafael em 27/07/06 os37032 */
ie_gravar_atendimento_w	varchar(1);/* rafael em 18/08/06 os37032 */
ie_gravar_atend_serv_w	varchar(2);/* rafael em 05/02/07 os49728 */
ie_preservar_classif_w	varchar(1);/* rafael em 15/09/06 os40695 */
ie_manter_senha_transf_w 	varchar(1);
ie_manter_senha_copia_w 	varchar(1);
ie_manter_senha_w		varchar(1);

ie_manter_medico_copia_w 	varchar(1);
ie_manter_medico_transf_w 	varchar(1);
ie_manter_medico_w	varchar(1);
nr_doc_convenio_copia_w	varchar(1);
nr_doc_convenio_transf_w	varchar(1);


ie_tipo_atendimento_w	smallint;/* rafael em 22/09/06 os41119 */
nr_seq_agepaci_w		agenda_consulta.nr_seq_agepaci%type;/* rafael em 29/03/2007 os53763 */
ie_liberado_w		varchar(1):= 'S';/* oraci em 23/04/2007 os55301 */
ds_convenio_w		varchar(255);/* oraci em 23/04/2007 os55301 */
ie_duplic_dia_w		varchar(1);/* rafael em 25/05/2007 os57381 */
dt_agenda_dest_w		timestamp;/* rafael em 25/05/2007 os57381 */
qt_pac_dia_w		bigint;/* rafael em 25/05/2007 os57381 */
nr_seq_indicacao_w	bigint;/* ivan em 07/07/2007 os62231 */
cd_setor_atendimento_w	bigint;/* ivan em 07/07/2007 os62231 */
ie_permite_sessao_w	varchar(1):= 'N';/* oraci em 17/09/2007 os68280 */
ie_atend_agenda_aberto_w 	varchar(1);

cd_estabelecimento_w	smallint;	/* oraci em 21/09/2007 os69151 */
cd_medico_agenda_w	varchar(10);	/* oraci em 21/09/2007 os69151 */
nm_medico_agenda_w	varchar(100);	/* oraci em 21/09/2007 os69151 */
ie_med_credenciado_w	varchar(1);	/* oraci em 21/09/2007 os69151 */
nr_seq_agenda_sessao_w	agenda_consulta.nr_seq_agenda_sessao%type;
ie_consiste_medico_solic_w 	varchar(1);
qt_procedimento_w		integer;
qt_proced_princ_w		integer;

nr_prontuario_w		bigint;
qt_existe_cpi_solic_w	bigint;
ie_canc_agenda_transf_w	varchar(2);
ie_autorizacao_w		varchar(3);
cd_especialidade_w	bigint;
ie_campo_autorizacao_copia_w	varchar(1);
ie_campo_autorizacao_transf_w	varchar(1);
ie_campo_especialidade_copia_w	varchar(1);
ie_campo_especialidade_trans_w	varchar(1);
ie_campo_obs_copia_w		varchar(1);
ie_campo_obs_trans_w		varchar(1);
ie_somente_atendimento_w	varchar(3);

nr_seq_vaga_w				bigint;

ie_estab_agenda_w			varchar(1);
ie_status_aguardando_w			varchar(1);
ie_enviar_sms_transf_w			varchar(1);
ie_alterar_vaga_w				varchar(1);
cd_estab_gestao_w			smallint;
ie_solicitacao_w				varchar(15);
ie_tipo_vaga_w				varchar(15);
ie_status_gv_w				varchar(1);
dt_prevista_w				timestamp;
ds_setor_desejado_w			varchar(255);
cd_unidade_basica_w			varchar(10);
cd_unidade_compl_w			varchar(10);
cd_tipo_acomod_desej_w			bigint;
ds_retorno_w				varchar(255) := '';
ie_procedencia_copia_w			varchar(1);
ie_procedencia_transf_w			varchar(1);
ie_tipo_atend_copia_w			varchar(1);
ie_tipo_atend_transf_w			varchar(1);
ie_setor_atendimento_copia_w		varchar(1);
ie_setor_atendimento_transf_w		varchar(1);
cd_procedencia_w			integer;
cd_agenda_destino_w			bigint;
nm_estab_dest_w				varchar(255);
hr_destino_w				timestamp;
cd_plano_w				varchar(10);

nr_reserva_w				varchar(20);
cd_estab_origem_w				smallint;
cd_estab_destino_w			smallint;
ie_modo_gerar_reserva_w			varchar(1);
ds_abrev_origem_w 			varchar(50);
ds_abrev_dest_w				varchar(50);

nr_telefone_celular_w			varchar(40);
ds_remetente_sms_w			varchar(255);

ie_reserva_transf_w			varchar(1);
qt_regra_comunic_w			bigint;
ie_forma_agend_copia_w			varchar(1);
ie_forma_agend_transf_w			varchar(1);
ie_cid_copia_w				varchar(1);
ie_cid_transf_w				varchar(1);
ie_carater_atend_copia_w		varchar(1);
ie_carater_atend_transf_w		varchar(1);
ie_forma_agendamento_w			smallint;
cd_cid_w				varchar(10);
ie_carater_inter_sus_w			varchar(2);
nr_seq_exame_w				bigint;
ie_atendimento_copia_w		varchar(1);
ie_atendimento_transf_w		varchar(1);
ie_conv_nao_lib_agenda_w	varchar(1);
nr_seq_exame_ww			bigint;	
ie_cons_obito_pac_w		varchar(1);
ie_tipo_obito_pessoa_w	varchar(1);
nr_seq_lista_reab_w		bigint;

atrib_oldvalue_w		varchar(255);
atrib_newvalue_w		varchar(255);
cd_setor_agenda_w		agenda.cd_setor_agenda%type;

dt_provavel_term_w		agenda_consulta.dt_provavel_term%type;
ie_consistencia_w			varchar(255);
ie_agenda_w				varchar(1);
ds_esconder_ddi_w		varchar(1);
ds_mensagem_bloq_w		varchar(4000);

ie_Atualizar_autorizacao_w			varchar(1);
nr_sequencia_autor_w			bigint;								
ie_dependente_w			agenda_consulta_proc.ie_dependente%type;

ie_campo_sala_transf_w  parametro_agenda.ie_campo_sala_transf%type;
ie_campo_sala_copia_w   parametro_agenda.ie_campo_sala_copia%type;

cd_material_exame_w	agenda_consulta_proc.cd_material_exame%type;
ds_material_especial_w	agenda_consulta_proc.ds_material_especial%type;

nr_seq_segurado_w       agenda_consulta.nr_seq_segurado%type;

cd_pessoa_responsavel_w		agenda_consulta.cd_pessoa_responsavel%type;
nm_pessoa_responsavel_w		agenda_consulta.nm_pessoa_responsavel%type;
nr_ddi_resp_w			agenda_consulta.nr_ddi_resp%type;
nr_tel_responsavel_w 	agenda_consulta.nr_tel_responsavel%type;
nr_seq_controle_mipres_w	agenda_consulta_proc.nr_seq_controle_mipres%TYPE;
nr_sequencia_mipres_w		agenda_consulta_proc.nr_seq_controle_mipres%TYPE;
nr_prescr_mipres_w			controle_mipres_agenda.nr_prescr_mipres%TYPE;
dt_validity_w				controle_mipres_agenda.dt_validity%TYPE;
nr_seq_agen_con_proc_w		agenda_consulta_proc.nr_sequencia%TYPE;

c01 CURSOR FOR
	SELECT	a.cd_procedimento,
			a.ie_origem_proced,
			a.nr_seq_proc_interno,
			a.ie_executar_proc,
			a.qt_procedimento,
			a.nr_seq_exame,
			a.ie_dependente,
			a.cd_material_exame,
			a.ds_material_especial,
			a.nr_seq_controle_mipres
	from	agenda_consulta_proc a
	where	a.nr_seq_agenda	= nr_seq_origem_p
	and not exists (SELECT	1
			from 	agenda_consulta_proc w 
			where a.nr_seq_proc_interno = w.nr_seq_proc_interno
			and w.nr_seq_agenda 		= nr_seq_destino_p);

c02 CURSOR FOR
	SELECT	nr_sequencia
	from	autorizacao_convenio
	where	nr_seq_agenda_consulta	= nr_seq_origem_p
	and	((ie_campo_autorizacao_copia_w = 'S' AND ie_transfere_copia_p = 'C') or
		(ie_campo_autorizacao_transf_w = 'S' AND ie_transfere_copia_p = 'T'));
		

BEGIN
dt_cur_date_w := trunc(clock_timestamp());
select	coalesce(max(a.cd_agenda),0),
	max(b.cd_tipo_agenda),
	max(a.dt_agenda),
	max(b.cd_estabelecimento),
	max(b.cd_pessoa_fisica),
	max(substr(obter_nome_estabelecimento(b.cd_estabelecimento),1,255)),
	max(a.dt_agenda),
	max(b.cd_setor_agenda)
into STRICT	cd_agenda_dest_w,
	cd_tipo_agenda_w,
	dt_agenda_dest_w,
	cd_estabelecimento_w,
	cd_medico_agenda_w,
	nm_estab_dest_w,
	hr_destino_w,
	cd_setor_agenda_w
from	agenda b, agenda_consulta a
where	a.nr_sequencia	= nr_seq_destino_p
and	a.cd_agenda	= b.cd_agenda
and	coalesce(a.ie_status_agenda,'L')	in ('L','LF');

if (coalesce(cd_agenda_dest_w, 0) = 0) then
	CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(1045786);
end if;

if (cd_estabelecimento_w IS NOT NULL AND cd_estabelecimento_w::text <> '') then
	select	max(ds_remetente_sms)
	into STRICT	ds_remetente_sms_w
	from	parametro_agenda
	where	cd_estabelecimento	= cd_estabelecimento_w;
end if;


select	cd_agenda,
	nr_minuto_duracao,
	ie_status_agenda,
	ie_classif_agenda,
	cd_convenio,
	cd_pessoa_fisica,
	nm_pessoa_contato,
	ds_observacao,
	ie_status_paciente,
	nm_paciente,
	nr_atendimento,
	dt_confirmacao,
	ds_confirmacao,
	nr_telefone,
	qt_idade_pac,
	nr_seq_plano,
	dt_agenda,
	ie_necessita_contato,
	nr_seq_sala,
	cd_categoria,
	cd_tipo_acomodacao,
	cd_usuario_convenio,    
	cd_complemento,         
	dt_validade_carteira,
	nr_doc_convenio,        
	cd_senha,
	ds_senha,
	dt_nascimento_pac,
	nm_usuario_origem,
	dt_agendamento,
	nr_seq_proc_interno,
	cd_procedimento,
	ie_origem_proced,
	qt_total_secao,
	cd_medico_solic,
	nr_seq_agepaci,
	nr_seq_indicacao,
	cd_setor_atendimento,
	CASE WHEN coalesce(nr_seq_agenda_sessao::text, '') = '' THEN  nr_sequencia  ELSE nr_seq_agenda_sessao END ,
	cd_medico,
	qt_procedimento,
	nr_controle_secao,
	ie_autorizacao,
	cd_especialidade,
	qt_diaria_prev,
	cd_procedencia,
	obter_estab_agenda(cd_agenda),
	nr_reserva,
	ie_tipo_atendimento,
	cd_plano,
	ie_forma_agendamento,
	cd_cid,
	ie_carater_inter_sus,
	nr_seq_classif_med,
	nr_seq_exame,
	nr_seq_lista_reab,
	nr_seq_segurado,
	cd_pessoa_responsavel,
	nm_pessoa_responsavel,
	nr_ddi_resp,
	nr_tel_responsavel
into STRICT	cd_agenda_w,
	nr_minuto_duracao_w,
	ie_status_agenda_w,
	ie_classif_agenda_w,
	cd_convenio_w,
	cd_pessoa_fisica_w,
	nm_pessoa_contato_w,
	ds_observacao_w,
	ie_status_paciente_w,
	nm_paciente_w,
	nr_atendimento_w,
	dt_confirmacao_w,
	ds_confirmacao_w,
	nr_telefone_w,
	qt_idade_pac_w,
	nr_seq_plano_w,
	dt_agenda_orig_w,
	ie_necessita_contato_w,
	nr_seq_sala_w,
	cd_categoria_w,           
	cd_tipo_acomodacao_w,
	cd_usuario_convenio_w,    
	cd_complemento_w,         
	dt_validade_carteira_w,
	nr_doc_convenio_w,        
	cd_senha_w,
	ds_senha_w,
	dt_nascimento_pac_w,
	nm_usuario_origem_w,
	dt_agendamento_w,
	nr_seq_proc_interno_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	qt_total_secao_w,
	cd_medico_solic_w,
	nr_seq_agepaci_w,
	nr_seq_indicacao_w,
	cd_setor_atendimento_w,
	nr_seq_agenda_sessao_w,
	cd_medico_w,
	qt_proced_princ_w,
	nr_controle_secao_w,
	ie_autorizacao_w,			
	cd_especialidade_w,
	qt_diaria_prev_w,
	cd_procedencia_w,
	cd_estab_origem_w,
	nr_reserva_w,
	ie_tipo_atendimento_ww,
	cd_plano_w,
	ie_forma_agendamento_w,
	cd_cid_w,
	ie_carater_inter_sus_w,
	nr_seq_classif_med_w,
	nr_seq_exame_ww,
	nr_seq_lista_reab_w,
	nr_seq_segurado_w,
	cd_pessoa_responsavel_w,
	nm_pessoa_responsavel_w,
	nr_ddi_resp_w,
	nr_tel_responsavel_w
from	agenda_consulta
where	nr_sequencia		= nr_seq_origem_p;


ie_somente_atendimento_w := coalesce(obter_valor_param_usuario(866, 128, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p), 'AC');

ie_alterar_vaga_w := Obter_Param_Usuario(866, 136, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_alterar_vaga_w);
ie_estab_agenda_w := Obter_Param_Usuario(866, 137, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_estab_agenda_w);
ie_status_aguardando_w := Obter_Param_Usuario(866, 138, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_status_aguardando_w);
ie_enviar_sms_transf_w := Obter_Param_Usuario(866, 149, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_enviar_sms_transf_w);
ie_cons_obito_pac_w := Obter_Param_Usuario(866, 239, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_cons_obito_pac_w);
ie_Atualizar_autorizacao_w := Obter_Param_Usuario(866, 310, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_Atualizar_autorizacao_w);
/* rafael em 25/05/07 os57381 */

select	coalesce(max(obter_valor_param_usuario(898, 49, obter_perfil_ativo, nm_usuario_p, coalesce(cd_estabelecimento_p,0))),'S')
into STRICT	ie_duplic_dia_w
;

ds_mensagem_bloq_w := obter_msg_bloq_geral_agenda_js(cd_estabelecimento_p,
			cd_agenda_dest_w,
			nr_seq_origem_p,
			null,
			dt_agenda_dest_w,
			'N',
			'N',
			nr_seq_proc_interno_w,
			cd_procedimento_w,
			ie_origem_proced_w);

if (ds_mensagem_bloq_w IS NOT NULL AND ds_mensagem_bloq_w::text <> '') then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(ds_mensagem_bloq_w);
end if;

if (cd_tipo_agenda_w = 3) and (ie_duplic_dia_w = 'N') then
	if (ie_transfere_copia_p <> 'T') then
		select	count(*)
		into STRICT	qt_pac_dia_w
		from	agenda_consulta
		where	cd_agenda = cd_agenda_dest_w
		and	cd_pessoa_fisica = cd_pessoa_fisica_w
		and	trunc(dt_agenda, 'dd') = trunc(dt_agenda_dest_w)
		and	ie_status_agenda not in ('C','L','B','F','I','LF');
	else
		select	count(*)
		into STRICT	qt_pac_dia_w
		from	agenda_consulta
		where	cd_agenda = cd_agenda_dest_w
		and	cd_pessoa_fisica = cd_pessoa_fisica_w
		and	trunc(dt_agenda, 'dd') = trunc(dt_agenda_dest_w)
		and	ie_status_agenda not in ('C','L','B','F','I','LF')
		and	nr_sequencia <> nr_seq_origem_p;
	end if;	

	if (qt_pac_dia_w > 0) then
		CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(202471);
	end if;
end if;
/* fim rafael em 25/05/07 os57381 */



/* rafael em 22/09/2006 os41119 */

select	obter_tipo_atendimento(nr_atendimento_w)
into STRICT	ie_tipo_atendimento_w
;

/* oraci em 17/09/2007 os68280 */

select	coalesce(max(obter_valor_param_usuario(866, 21, obter_perfil_ativo, nm_usuario_p,coalesce(cd_estabelecimento_p,0))),'N')
into STRICT	ie_permite_sessao_w
;

select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_CONSISTE_MEDICO_SOLIC_COPIA', 'S')
into STRICT	ie_consiste_medico_solic_w
;

if (nr_seq_destino_p IS NOT NULL AND nr_seq_destino_p::text <> '') then
	select	cd_agenda
	into STRICT	cd_agenda_destino_w
	from	agenda_consulta
	where	nr_sequencia	= nr_seq_destino_p;
end if;

/* rafael em 27/07/06 os37032 - validar atendimento x procedimento x sessoes */

if (ie_permite_sessao_w		= 'N') then /* oraci em 17/09/2007 os68280 */
	if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and
		((cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') or (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '')) and (cd_medico_solic_w IS NOT NULL AND cd_medico_solic_w::text <> '') and (qt_total_secao_w IS NOT NULL AND qt_total_secao_w::text <> '') then

		if (ie_transfere_copia_p <> 'T') then
			if (qt_total_secao_w > 1)then
				select	max(nr_secao) + 1
				into STRICT	nr_secao_w
				from	agenda_consulta
				where	ie_status_agenda	not in ('C','F','I')
				and		nr_atendimento	= nr_atendimento_w
				and		((cd_procedimento 	= cd_procedimento_w AND ie_origem_proced 	= ie_origem_proced_w) or (nr_seq_proc_interno	= nr_seq_proc_interno_w));
			else
				nr_secao_w	:= 1;			
			end if;
			

		else	select	max(nr_secao)
				into STRICT	nr_secao_w
				from	agenda_consulta
				where	ie_status_agenda	<> 'C'
				and		nr_atendimento	= nr_atendimento_w
				and		((cd_procedimento 	= cd_procedimento_w AND ie_origem_proced 	= ie_origem_proced_w) or (nr_seq_proc_interno	= nr_seq_proc_interno_w));
		end if;	
		

	elsif (coalesce(nr_atendimento_w::text, '') = '') and
			((cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') or (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '')) and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and (ie_transfere_copia_p 	<> 'T') then
			CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(202475);

	elsif (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and
			((cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') or (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '')) and (coalesce(cd_medico_solic_w::text, '') = '') and (ie_transfere_copia_p 	<> 'T') and (ie_consiste_medico_solic_w = 'S') then
			CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(202476);

	elsif (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and
			((cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') or (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '')) and (coalesce(qt_total_secao_w::text, '') = '') and (ie_tipo_atendimento_w		<> 1) and (ie_transfere_copia_p 	<> 'T') then
			CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(202478);
	else
			qt_total_secao_w	:= null;
			nr_secao_w	 	:= null;
	end if;
elsif (ie_permite_sessao_w		= 'S') then

	if	((cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') or (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '')) and (cd_medico_solic_w IS NOT NULL AND cd_medico_solic_w::text <> '') and (qt_total_secao_w IS NOT NULL AND qt_total_secao_w::text <> '') then

		if (ie_transfere_copia_p <> 'T') then
			if (qt_total_secao_w > 1)then
				select	max(nr_secao) + 1
				into STRICT	nr_secao_w
				from	agenda_consulta
				where	ie_status_agenda	<> 'C'
				and		nr_sequencia		= nr_seq_origem_p
				and		((cd_procedimento 	= cd_procedimento_w AND ie_origem_proced 	= ie_origem_proced_w) or (nr_seq_proc_interno	= nr_seq_proc_interno_w));
			else
				nr_secao_w	:= 1;
			end if;
			
				
			if	((ie_status_agenda_w = 'F') or (ie_status_agenda_w = 'I')) then
				nr_secao_w := nr_secao_w - 1;
			end if;

		else	select	max(nr_secao)
				into STRICT	nr_secao_w
				from	agenda_consulta
				where	ie_status_agenda	<> 'C'
				and		nr_sequencia		= nr_seq_origem_p
				and		((cd_procedimento 	= cd_procedimento_w AND ie_origem_proced 	= ie_origem_proced_w) or (nr_seq_proc_interno	= nr_seq_proc_interno_w));
		end if;	

	elsif	((cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') or (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '')) and (coalesce(cd_medico_solic_w::text, '') = '') and (ie_transfere_copia_p 	<> 'T') and (ie_consiste_medico_solic_w = 'S') then
			CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(202476);

	elsif	((cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') or (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '')) and (coalesce(qt_total_secao_w::text, '') = '') and (ie_tipo_atendimento_w		<> 1) and (ie_transfere_copia_p 	<> 'T') then
			CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(202478);
	else
			qt_total_secao_w	:= null;
			nr_secao_w	 	:= null;
	end if;

end if;

/* rafael em 18/08/06 os39215 */

select	coalesce(max(obter_valor_param_usuario(898, 73, obter_perfil_ativo, nm_usuario_p, coalesce(cd_estabelecimento_p,0))),'S')
into STRICT	ie_gravar_atendimento_w
;

/* rafael em 05/02/07 os49728 */

select	coalesce(max(obter_valor_param_usuario(866, 16, obter_perfil_ativo, nm_usuario_p, coalesce(cd_estabelecimento_p,0))),'S')
into STRICT	ie_gravar_atend_serv_w
;

/* rafael em 15/09/06 os40695 */

select	coalesce(max(obter_valor_param_usuario(866, 13, obter_perfil_ativo, nm_usuario_p, coalesce(cd_estabelecimento_p,0))),'S')
into STRICT	ie_preservar_classif_w
;

select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_CAMPO_SENHA_TRANSF', 'S')
into STRICT	ie_manter_senha_transf_w
;
	
select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_CAMPO_SENHA_COPIA', 'S')
into STRICT	ie_manter_senha_copia_w
;

select	CASE WHEN ie_transfere_copia_p='T' THEN ie_manter_senha_transf_w WHEN ie_transfere_copia_p='C' THEN ie_manter_senha_copia_w END
into STRICT	ie_manter_senha_w
;



select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_CAMPO_MEDICO_COPIA', 'S')
into STRICT	ie_manter_medico_copia_w
;

select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_CAMPO_MEDICO_TRANSF', 'S')
into STRICT	ie_manter_medico_transf_w
;

select 	obter_parametro_agenda(cd_estabelecimento_p, 'IE_DOC_CONV_COPIA', 'S')
into STRICT	nr_doc_convenio_copia_w
;

select 	obter_parametro_agenda(cd_estabelecimento_p, 'IE_DOC_CONV_TRANSF', 'N')
into STRICT	nr_doc_convenio_transf_w
;

ie_campo_autorizacao_copia_w	:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_AUTORIZACAO_COPIA', 'N');

ie_campo_autorizacao_transf_w	:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_AUTORIZACAO_TRANSF', 'N');

ie_campo_especialidade_copia_w	:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_ESPECIALIDADE_COPIA', 'N');

ie_campo_especialidade_trans_w	:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_ESPECIALIDADE_TRANSF', 'N');

ie_campo_obs_copia_w			:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_OBS_COPIA', 'S');

ie_campo_obs_trans_w			:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_OBS_TRANSFERENCIA', 'S');

ie_setor_atendimento_transf_w 	:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_SETOR_TRANSFERENCIA', 'S');

ie_setor_atendimento_copia_w 	:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_SETOR_COPIA', 'N');

ie_procedencia_transf_w			:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_PROCEDENCIA_TRANSF', 'N');

ie_procedencia_copia_w			:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_PROCEDENCIA_COPIA', 'N');

ie_tipo_atend_copia_w			:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_TIPO_ATEND_COPIA', 'N');

ie_tipo_atend_transf_w			:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_TIPO_ATEND_TRANSF', 'N');

ie_reserva_transf_w				:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_RESERVA_TRANSF', 'S');

ie_modo_gerar_reserva_w			:= obter_valor_param_usuario(869, 102, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);

ie_forma_agend_copia_w			:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_FORMA_AGEND_COPIA', 'N');

ie_forma_agend_transf_w			:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_FORMA_AGEND_TRANSF', 'N');

ie_cid_copia_w					:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_CID_COPIA', 'N');

ie_cid_transf_w					:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_CID_TRANSF', 'N');

ie_carater_atend_copia_w		:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_CARATER_ATEND_COPIA', 'N');

ie_carater_atend_transf_w		:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_CARATER_ATEND_TRANSF', 'N');

ie_atendimento_copia_w			:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_ATEND_COPIA', 'N');

ie_atendimento_transf_w			:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_ATEND_TRANSF', 'N');

ie_campo_sala_transf_w          := obter_parametro_agenda(cd_estabelecimento_p, 'IE_CAMPO_SALA_TRANSF', 'N');

ie_campo_sala_copia_w           := obter_parametro_agenda(cd_estabelecimento_p, 'IE_CAMPO_SALA_COPIA', 'N');

select	CASE WHEN ie_transfere_copia_p='T' THEN ie_manter_medico_transf_w WHEN ie_transfere_copia_p='C' THEN ie_manter_medico_copia_w END
into STRICT	ie_manter_medico_w
;

if	((coalesce(ie_gravar_atendimento_w, 'S') = 'N') and (cd_tipo_agenda_w = 3)) or
	((coalesce(ie_gravar_atend_serv_w, 'S') = 'N') and (cd_tipo_agenda_w = 5) and (ie_gravar_atend_serv_w <> 'CP')) then
	nr_atendimento_w := null;
end if;

if (coalesce(ie_preservar_classif_w, 'S') = 'N') then
	select	max(ie_classif_agenda),
		max(nr_seq_classif_med)
	into STRICT	ie_classif_agenda_w,
		nr_seq_classif_med_w
	from	agenda_consulta
	where	nr_sequencia	= nr_seq_destino_p;
end if;

if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then /* oraci em 16/07/2007 os62296 */
	if (ie_somente_atendimento_w	= 'AC') then
		select	obter_se_atend_agenda_aberto(nr_seq_origem_p)
		into STRICT	ie_atend_agenda_aberto_w
		;
	end if;

	if (ie_atend_agenda_aberto_w = 'N') then
		nr_atendimento_w:= null;
	end if;
end if;

/* oraci em 21/09/2007 os69151 - consiste se medico credenciado para o convenio */

select	coalesce(max(obter_valor_param_usuario(898, 4, obter_perfil_ativo, nm_usuario_p, coalesce(cd_estabelecimento_p,0))),'N')
into STRICT	ie_med_credenciado_w
;

if (nr_seq_destino_p IS NOT NULL AND nr_seq_destino_p::text <> '') and (ie_med_credenciado_w = 'S') then
	if (cd_agenda_w <> cd_agenda_dest_w) and (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') and (cd_medico_agenda_w IS NOT NULL AND cd_medico_agenda_w::text <> '') then
		select	obter_nome_convenio(cd_convenio_w),
			obter_nome_medico(cd_medico_agenda_w, 'N')
		into STRICT	ds_convenio_w,
			nm_medico_agenda_w
		;

		select	obter_se_medico_conveniado(cd_estabelecimento_w, cd_medico_agenda_w, cd_convenio_w, null, null,null,null,null,null, ie_tipo_atendimento_w, null)
		into STRICT	ie_liberado_w
		;

		if (ie_liberado_w = 'N') then
			CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(202480, 'nm_medico_agenda=' || nm_medico_agenda_w || ';ds_convenio=' || ds_convenio_w);
		end if;
	end if;
end if;

/* oraci em 23/04/2007 os55301 - consiste o convenio do medico */
if (nr_seq_destino_p IS NOT NULL AND nr_seq_destino_p::text <> '') then
	select	max(obter_nome_convenio(cd_convenio_w))
	into STRICT	ds_convenio_w
	;
	
	select	dt_agenda
	into STRICT	dt_agenda_ww
	from	agenda_consulta
	where	nr_sequencia = nr_seq_destino_p;
	
	if (cd_agenda_w = cd_agenda_dest_w) then
		select	consiste_lib_conv_turno(cd_agenda_w, cd_convenio_w, dt_agenda_ww, cd_categoria_w, nr_seq_origem_p)
		into STRICT	ie_liberado_w
		;
		
	
		if (ie_liberado_w = 'N') then
			CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(202492, 'ds_convenio=' || ds_convenio_w);
		elsif (ie_liberado_w = 'Q') then
			CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(202495, 'ds_convenio=' || ds_convenio_w);
		end if;
	else	
		select	consiste_lib_conv_turno(cd_agenda_dest_w, cd_convenio_w, dt_agenda_ww, cd_categoria_w, nr_seq_origem_p)
		into STRICT	ie_liberado_w
		;
		
		
		if (ie_liberado_w = 'N') then
			CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(202492, 'ds_convenio=' || ds_convenio_w);
		elsif (ie_liberado_w = 'Q') then
			CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(202495, 'ds_convenio=' || ds_convenio_w);
		end if;
	end if;
end if;

if (nr_doc_convenio_copia_w = 'N') and (ie_transfere_copia_p = 'C')then /* tbyegmann em 01/12/2010 OS271578 - consisitir no momento da copia da agenda se o numero da guia sera copiado tambem, junto com os outros dados*/
	nr_doc_convenio_w := '';
end if;		

if (nr_doc_convenio_transf_w = 'N') and (ie_transfere_copia_p = 'T')then
	nr_doc_convenio_w := '';
end if;		

if (ie_campo_obs_copia_w = 'N') then
	ds_observacao_w := '';
end if;

if (ie_campo_obs_trans_w = 'N') then
	ds_observacao_w := '';
end if;

if (ie_campo_autorizacao_copia_w = 'N') then
	ie_autorizacao_w := '';
end if;		

if (ie_campo_especialidade_copia_w = 'N') then
	cd_especialidade_w := '';
end if;

if (ie_setor_atendimento_copia_w	= 'A') then
	cd_setor_atendimento_w	:= obter_setor_agenda(cd_agenda_destino_w);
elsif (ie_setor_atendimento_copia_w) = 'E' then
	cd_setor_atendimento_w	:= cd_setor_agenda_w;
elsif (ie_setor_atendimento_copia_w	= 'N') then
	cd_setor_atendimento_w	:= null;
end if;

if (ie_setor_atendimento_transf_w	= 'A') then
	cd_setor_atendimento_w	:= obter_setor_agenda(cd_agenda_destino_w);
elsif (ie_setor_atendimento_transf_w	= 'E') then
	cd_setor_atendimento_w	:= cd_setor_agenda_w;
elsif (ie_setor_atendimento_transf_w	= 'N') then
	cd_setor_atendimento_w	:= null;
end if;

if (ie_transfere_copia_p = 'C') and (ie_procedencia_copia_w = 'N') then
	cd_procedencia_w := null;
end if;		

if (ie_transfere_copia_p = 'T') and (ie_procedencia_transf_w = 'N') then
	cd_procedencia_w := null;
end if;

if (ie_transfere_copia_p = 'C') and (ie_forma_agend_copia_w = 'N') then
	ie_forma_agendamento_w := null;
end if;		

if (ie_transfere_copia_p = 'T') and (ie_forma_agend_transf_w = 'N') then
	ie_forma_agendamento_w := null;
end if;

if (ie_transfere_copia_p = 'C') and (ie_cid_copia_w = 'N') then
	cd_cid_w := null;
end if;		

if (ie_transfere_copia_p = 'T') and (ie_cid_transf_w = 'N') then
	cd_cid_w := null;
end if;

if (ie_transfere_copia_p = 'C') and (ie_carater_atend_copia_w = 'N') then
	ie_carater_inter_sus_w := null;
end if;		

if (ie_transfere_copia_p = 'T') and (ie_carater_atend_transf_w = 'N') then
	ie_carater_inter_sus_w := null;
end if;

if (ie_transfere_copia_p = 'C') and (ie_atendimento_copia_w = 'N') and (ie_gravar_atend_serv_w = 'CP')then
	nr_atendimento_w := null;
end if;		

if (ie_transfere_copia_p = 'T') and (ie_atendimento_transf_w = 'N') and (ie_gravar_atend_serv_w = 'CP')then
	nr_atendimento_w := null;
end if;


if (ie_transfere_copia_p = 'C') and (ie_tipo_atend_copia_w = 'N') then
	ie_tipo_atendimento_ww := null;
end if;		

if (ie_transfere_copia_p = 'T') and (ie_tipo_atend_transf_w = 'N') then
	ie_tipo_atendimento_ww := null;
end if;

if (ie_campo_sala_copia_w = 'N') then
	nr_seq_sala_w := null;
end if;

if (ie_campo_sala_transf_w = 'N') then
	nr_seq_sala_w := null;
end if;

if (cd_estab_origem_w	<> cd_estabelecimento_w) then
	if (ie_modo_gerar_reserva_w	= '1') then			
		if (ie_transfere_copia_p = 'T') then
			ds_abrev_origem_w 	:= upper(obter_abrev_estabelecimento(cd_estab_origem_w));
			ds_abrev_dest_w		:= upper(obter_abrev_estabelecimento(cd_estabelecimento_w));
			nr_reserva_w		:= substr(replace(nr_reserva_w,ds_abrev_origem_w,ds_abrev_dest_w),1,20);
		else
			nr_reserva_w	:= Ageint_Obter_Reserva_Pac(nr_seq_destino_p, hr_destino_w, cd_pessoa_fisica_w, cd_estabelecimento_w,'S');
		end if;
	end if;
end if;


select	max(obter_se_conv_lib_agenda_serv(cd_agenda_dest_w, cd_convenio_w))
into STRICT	ie_conv_nao_lib_agenda_w
;

if (ie_conv_nao_lib_agenda_w = 'N') then
	CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(220661);
end if;

if (ie_cons_obito_pac_w = 'S')then

	select	coalesce(obter_se_paciente_obito(cd_pessoa_fisica_w), 'N')
	into STRICT	ie_tipo_obito_pessoa_w
	;
	
	if (ie_tipo_obito_pessoa_w <> 'N') and (ie_tipo_obito_pessoa_w = 'A')then
		--Este paciente possui um atendimento com motivo de alta obito!
		CALL wheb_mensagem_pck.exibir_mensagem_abort(223096);
	elsif (ie_tipo_obito_pessoa_w <> 'N') and (ie_tipo_obito_pessoa_w = 'C')then
		--Este paciente possui data de obito informada no cadastro de pessoas!
		CALL wheb_mensagem_pck.exibir_mensagem_abort(223098);
	end if;
	
end if;

SELECT * FROM consistir_classif_agecon(cd_estabelecimento_p, cd_pessoa_fisica_w, hr_destino_w, cd_agenda_w, cd_convenio_w, null, null, null, ie_classif_agenda_w, nr_seq_destino_p, ie_consistencia_w, ie_agenda_w) INTO STRICT ie_consistencia_w, ie_agenda_w;
	if (ie_agenda_w = 'N') then
		CALL liberar_horario_agenda_cons(nr_seq_destino_p, nm_usuario_p);
		CALL Wheb_mensagem_pck.exibir_mensagem_abort( 262328 , 'DS_MENSAGEM='||ie_consistencia_w);
	end if;

if (nr_seq_destino_p IS NOT NULL AND nr_seq_destino_p::text <> '') then
	begin

	if (cd_agenda_w	= cd_agenda_dest_w) then
		begin
		update	agenda_consulta
		set	nr_minuto_duracao	= nr_minuto_duracao_w,
			ie_status_agenda	= 'N',
			cd_convenio		= cd_convenio_w,
			cd_pessoa_fisica	= cd_pessoa_fisica_w,
			nm_pessoa_contato	= nm_pessoa_contato_w,
			ds_observacao		= ds_observacao_w,
			ie_status_paciente	= ie_status_paciente_w,
			nm_paciente		= nm_paciente_w,
			nr_telefone		= nr_telefone_w,
			qt_idade_pac		= qt_idade_pac_w,
			nr_seq_plano		= nr_seq_plano_w,
			ie_classif_agenda	= ie_classif_agenda_w,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p,
			ie_necessita_contato	= ie_necessita_contato_w,
			nr_seq_sala		= coalesce(nr_seq_sala_w, nr_seq_sala),
			cd_categoria		= cd_categoria_w,
			cd_tipo_acomodacao	= cd_tipo_acomodacao_w,
			cd_usuario_convenio	= cd_usuario_convenio_w,
			cd_complemento		= cd_complemento_w,
			dt_validade_carteira	= dt_validade_carteira_w,
			nr_doc_convenio		= nr_doc_convenio_w,
			cd_senha		= cd_senha_w,
			ds_senha		= CASE WHEN ie_manter_senha_w='S' THEN ds_senha_w  ELSE null END ,
			dt_nascimento_pac      	= dt_nascimento_pac_w,
			nm_usuario_origem	= CASE WHEN ie_transfere_copia_p='C' THEN  coalesce(nm_usuario_p, nm_usuario_origem_w)  ELSE coalesce(nm_usuario_origem_w, nm_usuario_p) END ,
			dt_agendamento		= coalesce(dt_agendamento_w, clock_timestamp()),
			nr_seq_proc_interno	= nr_seq_proc_interno_w,
			cd_procedimento		= cd_procedimento_w,
			ie_origem_proced	= ie_origem_proced_w,
			nr_atendimento		= nr_atendimento_w,
			qt_total_secao		= qt_total_secao_w,
			nr_secao		= nr_secao_w,
			cd_medico_solic		= cd_medico_solic_w,
			nr_seq_agepaci		= nr_seq_agepaci_w,
			nr_seq_indicacao	= nr_seq_indicacao_w,
			cd_setor_atendimento	= cd_setor_atendimento_w,
			nm_usuario_copia_trans	= nm_usuario_p,
			dt_copia_trans		= clock_timestamp(),
			nr_seq_motivo_transf	= nr_seq_motivo_p,
			nr_seq_agenda_sessao	= CASE WHEN ie_transfere_copia_p='C' THEN  null  ELSE nr_seq_agenda_sessao_w END ,
			cd_medico		= CASE WHEN ie_manter_medico_w='S' THEN cd_medico_w  ELSE cd_medico END ,
			qt_procedimento		= qt_proced_princ_w,
			nr_controle_secao	= nr_controle_secao_w,
			ie_autorizacao		= ie_autorizacao_w,
			cd_especialidade	= cd_especialidade_w,
			cd_procedencia		= cd_procedencia_w,
			ie_tipo_atendimento	= ie_tipo_atendimento_ww,
			nr_reserva		= CASE WHEN ie_reserva_transf_w='S' THEN  nr_reserva_w  ELSE null END ,
			ie_transferido		= CASE WHEN ie_transfere_copia_p='T' THEN 'S'  ELSE 'N' END ,
			cd_plano		= cd_plano_w,
			ie_forma_agendamento	= ie_forma_agendamento_w,
			cd_cid			= cd_cid_w,
			ie_carater_inter_sus	= ie_carater_inter_sus_w,
			nr_seq_classif_med	= nr_seq_classif_med_w,
			ds_confirmacao		= ds_confirmacao_w,
			nr_seq_exame		= nr_seq_exame_ww,
			nr_seq_lista_reab	= nr_seq_lista_reab_w,
			ds_motivo_copia_trans = substr(ds_motivo_transf_p,1,255),
			nr_seq_segurado = nr_seq_segurado_w,
			cd_pessoa_responsavel	= cd_pessoa_responsavel_w,
			nm_pessoa_responsavel	= nm_pessoa_responsavel_w,
			nr_ddi_resp		= nr_ddi_resp_w,
			nr_tel_responsavel	= nr_tel_responsavel_w
		where	nr_sequencia		= nr_seq_destino_p;

		end;
	else
		begin
		update	agenda_consulta
		set	ie_status_agenda	= 'N',
			cd_convenio		= cd_convenio_w,
			cd_pessoa_fisica	= cd_pessoa_fisica_w,
			nm_pessoa_contato	= nm_pessoa_contato_w,
			ds_observacao		= ds_observacao_w,
			ie_status_paciente	= ie_status_paciente_w,
			nm_paciente		= nm_paciente_w,
			nr_telefone		= nr_telefone_w,
			qt_idade_pac		= qt_idade_pac_w,
			nr_seq_plano		= nr_seq_plano_w,
			ie_classif_agenda	= ie_classif_agenda_w,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p,
			ie_necessita_contato	= ie_necessita_contato_w,
			nr_seq_sala		= coalesce(nr_seq_sala_w, nr_seq_sala),
			cd_categoria		= cd_categoria_w,
			cd_tipo_acomodacao	= cd_tipo_acomodacao_w,
			cd_usuario_convenio	= cd_usuario_convenio_w,
			cd_complemento		= cd_complemento_w,
			dt_validade_carteira	= dt_validade_carteira_w,
			nr_doc_convenio		= nr_doc_convenio_w,
			cd_senha		= cd_senha_w,
			ds_senha		= CASE WHEN ie_manter_senha_w='S' THEN ds_senha_w  ELSE null END ,
			dt_nascimento_pac      	= dt_nascimento_pac_w,
			nm_usuario_origem	= CASE WHEN ie_transfere_copia_p='C' THEN  coalesce(nm_usuario_p, nm_usuario_origem_w)  ELSE coalesce(nm_usuario_origem_w, nm_usuario_p) END ,
			dt_agendamento		= coalesce(dt_agendamento_w, clock_timestamp()),
			nr_seq_proc_interno	= nr_seq_proc_interno_w,
			cd_procedimento		= cd_procedimento_w,
			ie_origem_proced	= ie_origem_proced_w,
			nr_atendimento		= nr_atendimento_w,
			qt_total_secao		= qt_total_secao_w,
			nr_secao		= nr_secao_w,
			cd_medico_solic		= cd_medico_solic_w,
			nr_seq_agepaci		= nr_seq_agepaci_w,
			nr_seq_indicacao	= nr_seq_indicacao_w,
			cd_setor_atendimento	= cd_setor_atendimento_w,
			nm_usuario_copia_trans	= nm_usuario_p,
			dt_copia_trans		= clock_timestamp(),
			nr_seq_motivo_transf	= nr_seq_motivo_p,
			nr_seq_agenda_sessao	= CASE WHEN ie_transfere_copia_p='C' THEN  null  ELSE nr_seq_agenda_sessao_w END ,
			cd_medico		= CASE WHEN ie_manter_medico_w='S' THEN cd_medico_w  ELSE cd_medico END ,
			qt_procedimento		= qt_proced_princ_w,
			nr_controle_secao	= nr_controle_secao_w,
			ie_autorizacao		= ie_autorizacao_w,
			cd_especialidade	= cd_especialidade_w,
			cd_procedencia		= cd_procedencia_w,
			ie_tipo_atendimento	= ie_tipo_atendimento_ww,
			nr_reserva		= CASE WHEN ie_reserva_transf_w='S' THEN  nr_reserva_w  ELSE null END ,
			ie_transferido		= CASE WHEN ie_transfere_copia_p='T' THEN 'S'  ELSE 'N' END ,
			cd_plano		= cd_plano_w,
			ie_forma_agendamento	= ie_forma_agendamento_w,
			cd_cid			= cd_cid_w,
			ie_carater_inter_sus	= ie_carater_inter_sus_w,
			nr_seq_classif_med	= nr_seq_classif_med_w,
			ds_confirmacao		= ds_confirmacao_w,
			nr_seq_exame		= nr_seq_exame_ww,
			nr_seq_lista_reab	= nr_seq_lista_reab_w,
			ds_motivo_copia_trans = substr(ds_motivo_transf_p,1,255),
			nr_seq_segurado = nr_seq_segurado_w,
			cd_pessoa_responsavel	= cd_pessoa_responsavel_w,
			nm_pessoa_responsavel	= nm_pessoa_responsavel_w,
			nr_ddi_resp		= nr_ddi_resp_w,
			nr_tel_responsavel	= nr_tel_responsavel_w
		where	nr_sequencia		= nr_seq_destino_p;
		end;
	end if;
	
	if (ie_transfere_copia_p = 'T') and (ie_alterar_vaga_w = 'S') then
	
		select	max(nr_sequencia)
		into STRICT	nr_seq_vaga_w
		from	gestao_vaga
		where	nr_seq_agenda = nr_seq_origem_p;
						
		if (nr_seq_vaga_w > 0) then
			
			select	max(cd_estabelecimento),
					max(ie_solicitacao),
					max(ie_tipo_vaga),
					max(ie_status),
					max(dt_prevista),
					max(obter_nome_setor(cd_setor_desejado)),
					max(cd_unidade_basica),
					max(cd_unidade_compl),
					max(cd_tipo_acomod_desej)
				into STRICT	cd_estab_gestao_w,
					ie_solicitacao_w,
					ie_tipo_vaga_w,
					ie_status_gv_w,
					dt_prevista_w,
					ds_setor_desejado_w,
					cd_unidade_basica_w,
					cd_unidade_compl_w,
					cd_tipo_acomod_desej_w
			from	gestao_vaga
			where	nr_sequencia = nr_seq_vaga_w;
			
			if (ie_estab_agenda_w = 'S') then
							
				if (cd_estab_gestao_w IS NOT NULL AND cd_estab_gestao_w::text <> '') and (cd_estab_gestao_w <> cd_estabelecimento_w) then
				
					CALL cancelar_gestao_vaga(nr_seq_origem_p,null,nm_usuario_p,cd_estabelecimento_p);

					update	gestao_vaga
					set	nr_seq_agenda  = NULL
					where	nr_seq_agenda = nr_seq_origem_p;
				
					ds_retorno_w := Ageint_Gerar_necessidade_vaga(nr_seq_destino_p, ie_solicitacao_w, ie_tipo_vaga_w, cd_tipo_acomod_desej_w, cd_estab_gestao_w, nm_usuario_p, 'S', ds_retorno_w);
					
					select	max(nr_sequencia)
					into STRICT	nr_seq_vaga_w
					from	gestao_vaga
					where	nr_seq_agenda = nr_seq_destino_p;
					
					if (nr_seq_vaga_w IS NOT NULL AND nr_seq_vaga_w::text <> '') then
						update	gestao_vaga
						set	qt_dia		= qt_diaria_prev_w
						where	nr_sequencia	= nr_seq_vaga_w;
					end if;			
										
				elsif (cd_estab_gestao_w IS NOT NULL AND cd_estab_gestao_w::text <> '') and (cd_estab_gestao_w = cd_estabelecimento_w) then
					
					if (ie_status_aguardando_w = 'S') and
						((ie_status_gv_w = 'R') or (ie_status_gv_w = 'P')) then -- Somente sera alterado o status quando a data prevista for em dia diferente da data da agenda, momento da transferencia de agendamento
						if (to_char(dt_prevista_w,'dd/mm/yyyy') <> to_char(dt_agenda_dest_w,'dd/mm/yyyy')) then
							CALL Desfazer_reserva_leito(nr_seq_vaga_w,nm_usuario_p);
							ds_retorno_w:= 	WHEB_MENSAGEM_PCK.get_texto(456897,'ds_setor_desejado_w='||ds_setor_desejado_w||';cd_unidade_basica_w='||cd_unidade_basica_w||
									';cd_unidade_compl_w='||cd_unidade_compl_w||';nm_paciente_w='||nm_paciente_w);
						end if;	
					end if;
					
					update	gestao_vaga
					set	dt_prevista	= dt_agenda_dest_w,
						nr_seq_agenda	= nr_seq_destino_p
					where	nr_sequencia	= nr_seq_vaga_w;
					
				end if;			
			end if;	
		end if;		
	end if;
	
	
	commit;
	end;

else
	begin
	select	nextval('agenda_consulta_seq')
	into STRICT	nr_seq_agenda_w
	;	


	begin
	insert	into agenda_consulta(
		nr_sequencia,
		cd_agenda,
		dt_agenda,
		nr_minuto_duracao,
		ie_status_agenda,
		ie_classif_agenda,
		dt_atualizacao,
		nm_usuario,
		cd_convenio,
		cd_pessoa_fisica,
		nm_pessoa_contato,
		ds_observacao,
		ie_status_paciente,
		nr_seq_consulta,
		nm_paciente,
		nr_atendimento,
		dt_confirmacao,
		ds_confirmacao,
		nr_telefone,
		qt_idade_pac,
		nr_seq_plano,
		ie_necessita_contato,
		nr_seq_sala,
		cd_categoria,
		cd_tipo_acomodacao,
		cd_usuario_convenio,    
		cd_complemento,         
		dt_validade_carteira,
		nr_doc_convenio,        
		cd_senha,
		ds_senha,
		dt_nascimento_pac,
		nm_usuario_origem,
		dt_agendamento,
		nr_seq_proc_interno,
		cd_procedimento,
		ie_origem_proced,
		qt_total_secao,
		nr_secao,
		cd_medico_solic,
		nr_seq_agepaci,
		nr_seq_indicacao,
		cd_setor_atendimento,
		nm_usuario_copia_trans,
		dt_copia_trans,
		nr_seq_motivo_transf,
		nr_seq_agenda_sessao,
		cd_medico,
		qt_procedimento,
		cd_procedencia,
		ie_tipo_atendimento,
		cd_plano,
		nr_seq_classif_med,
		nr_seq_exame,
		nr_seq_lista_reab,
		ds_motivo_copia_trans,
		nr_seq_segurado,
		cd_pessoa_responsavel,
		nm_pessoa_responsavel,
		nr_ddi_resp,
		nr_tel_responsavel)
	values (nr_seq_agenda_w,
		cd_agenda_w,
		dt_agenda_p,
		nr_minuto_duracao_w,
		ie_status_agenda_w,
		ie_classif_agenda_w,
		clock_timestamp(),
		nm_usuario_p,
		cd_convenio_w,
		cd_pessoa_fisica_w,
		nm_pessoa_contato_w,
		ds_observacao_w,
		ie_status_paciente_w,
		null,
		nm_paciente_w,
		nr_atendimento_w,
		dt_confirmacao_w,
		ds_confirmacao_w,
		nr_telefone_w,
		qt_idade_pac_w,
		nr_seq_plano_w,
		ie_necessita_contato_w,
		nr_seq_sala_w,
		cd_categoria_w,           
		cd_tipo_acomodacao_w,
		cd_usuario_convenio_w,    
		cd_complemento_w,         
		dt_validade_carteira_w,
		nr_doc_convenio_w,        
		cd_senha_w,
		CASE WHEN ie_manter_senha_w='S' THEN ds_senha_w  ELSE null END ,
		dt_nascimento_pac_w,
		CASE WHEN ie_transfere_copia_p='C' THEN  coalesce(nm_usuario_p, nm_usuario_origem_w)  ELSE coalesce(nm_usuario_origem_w, nm_usuario_p) END ,
		coalesce(dt_agendamento_w, clock_timestamp()),
		nr_seq_proc_interno_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		qt_total_secao_w,
		nr_secao_w,
		cd_medico_solic_w,
		nr_seq_agepaci_w,
		nr_seq_indicacao_w,
		cd_setor_atendimento_w,
		nm_usuario_p,
		clock_timestamp(),
		nr_seq_motivo_p,
		nr_seq_agenda_sessao_w,
		CASE WHEN ie_manter_medico_w='S' THEN cd_medico_w  ELSE null END ,
		qt_proced_princ_w,
		cd_procedencia_w,
		ie_tipo_atendimento_ww,
		cd_plano_w,
		nr_seq_classif_med_w,
		nr_seq_exame_ww,
		nr_seq_lista_reab_w,
		substr(ds_motivo_transf_p,1,255),
		nr_seq_segurado_w,
		cd_pessoa_responsavel_w,
		nm_pessoa_responsavel_w,
		nr_ddi_resp_w,
		nr_tel_responsavel_w);
	
	end;
	end;
end if;

IF ( nr_seq_agenda_w = 0 ) THEN
    nr_seq_w := nr_seq_destino_p;
ELSE
    nr_seq_w := nr_seq_agenda_w;
END IF;

begin
	select	nr_seq_reab_times,
			nr_seq_tratamento,
			gerenciador_mipres_agenda_pck.get_valid_mipres_agenda(nr_seq_controle_mipres, dt_agenda_dest_w)
	into STRICT	nr_seq_reab_time_w,
			nr_seq_tratament_w,
			nr_seq_controle_mipres_w
	from    agenda_consulta_adic
	where	nr_seq_agenda = nr_seq_origem_p;
exception when no_data_found then
			nr_seq_reab_time_w			:= null;
			nr_seq_tratament_w			:= null;
			nr_seq_controle_mipres_w	:= null;
		  when too_many_rows then
			nr_seq_reab_time_w			:= null;
			nr_seq_tratament_w			:= null;
			nr_seq_controle_mipres_w	:= null;
		  when data_exception then
  			nr_seq_reab_time_w			:= null;
			nr_seq_tratament_w			:= null;
			nr_seq_controle_mipres_w	:= null;
end;

if (ie_transfere_copia_p = 'T') then
	delete from agenda_consulta_adic
	where  nr_seq_agenda = nr_seq_origem_p;
end if;

select  coalesce(max('S'), 'N')
into STRICT 	is_record_exist_w
from    agenda_consulta_adic
where   nr_seq_agenda = nr_seq_w;

if (is_record_exist_w = 'S') then
    begin
        update	agenda_consulta_adic
        set		nr_seq_reab_times 		= nr_seq_reab_time_w,
				nm_usuario 				= nm_usuario_p,
				dt_atualizacao 			= dt_cur_date_w,
				nr_seq_tratamento		= nr_seq_tratament_w,
				nr_seq_controle_mipres	= nr_seq_controle_mipres_w
        where   nr_seq_agenda 		= nr_seq_w;

    end;
else
    insert into agenda_consulta_adic(
        nr_seq_agenda,
        dt_atualizacao,
        nm_usuario,
        nr_seq_reab_times,
        nr_seq_tratamento,
		nr_seq_controle_mipres
    ) values (
        nr_seq_w,
        dt_cur_date_w,
        nm_usuario_p,
        nr_seq_reab_time_w,
        nr_seq_tratament_w,
		nr_seq_controle_mipres_w
    );

end if;

open	c01;
loop
fetch	c01 into
	cd_proced_w,
	ie_origem_w,
	nr_seq_interno_w,
	ie_exec_proc_w,
	qt_procedimento_w,
	nr_seq_exame_w,
	ie_dependente_w,
	cd_material_exame_w,
	ds_material_especial_w,
	nr_seq_controle_mipres_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	nr_sequencia_mipres_w := gerenciador_mipres_agenda_pck.get_valid_mipres_agenda(nr_seq_controle_mipres_w, dt_agenda_dest_w);

	select	nextval('agenda_consulta_proc_seq')
	into STRICT	nr_seq_agen_con_proc_w
	;

	insert into agenda_consulta_proc(nr_sequencia,
		nr_seq_agenda,
		cd_procedimento,
		ie_origem_proced,
		nr_seq_proc_interno,
		dt_atualizacao,
		nm_usuario,
		ie_executar_proc,
		qt_procedimento,
		nr_seq_exame,
		ie_dependente,
		cd_material_exame,
		ds_material_especial,
		nr_seq_controle_mipres)
	values (nr_seq_agen_con_proc_w,
		coalesce(nr_seq_destino_p, nr_seq_agenda_w),
		cd_proced_w,
		ie_origem_w,
		nr_seq_interno_w,
		clock_timestamp(),
		nm_usuario_p,
		ie_exec_proc_w,
		coalesce(qt_procedimento_w,1),
		nr_seq_exame_w,
		ie_dependente_w,
		cd_material_exame_w,
		ds_material_especial_w,
		nr_sequencia_mipres_w);

	if (coalesce(nr_sequencia_mipres_w, 0) > 0) then
		select cma.nr_prescr_mipres,
			   cma.dt_validity
		  into STRICT nr_prescr_mipres_w,
			   dt_validity_w
		  from controle_mipres_agenda cma
		 where cma.nr_sequencia = nr_sequencia_mipres_w;

		CALL insert_log_mipres(cd_pessoa_fisica_w,
						  cd_agenda_w,
						  0,
						  nr_sequencia_mipres_w,
						  null,
						  null,
						  null,
						  nr_prescr_mipres_w,
						  null,
						  dt_validity_w,
						  null,
						  coalesce(nr_seq_destino_p, nr_seq_agenda_w),
						  null,
						  null,
						  null,
						  null,
						  nr_seq_agen_con_proc_w,
						  null,
						  null);
	end if;

	end;
end loop;
close c01;


select	max(dt_provavel_term)
into STRICT	dt_provavel_term_w
from	agenda_consulta
where	nr_controle_secao = nr_controle_secao_w
and	((cd_pessoa_fisica = cd_pessoa_fisica_w) or (nm_paciente = nm_paciente_w))
and	((cd_procedimento  = cd_procedimento_w) or (coalesce(cd_procedimento_w::text, '') = ''));

if (dt_provavel_term_w < dt_agenda_dest_w) then
	update	agenda_consulta
	set	dt_provavel_term = dt_agenda_dest_w
	where	nr_controle_secao = nr_controle_secao_w
	and	((cd_pessoa_fisica = cd_pessoa_fisica_w)
		or (nm_paciente = nm_paciente_w))
	and	((cd_procedimento  = cd_procedimento_w) or (coalesce(cd_procedimento_w::text, '') = ''));

	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
end if;

if (ie_transfere_copia_p = 'T') then
	begin
	if (trunc(dt_agenda_ww,'dd') < trunc(clock_timestamp(),'dd')) then /* oraci em 23/07/2007 os55802 */
		CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(202496);					
	end if;
	
	update	agenda_cons_servico
	set	nr_seq_agenda = nr_seq_destino_p
	where	nr_seq_agenda = nr_seq_origem_p;
	
	update	agenda_pac_sangue
	set	nr_seq_agenda_cons = nr_seq_destino_p
	where	nr_seq_agenda_cons = nr_seq_origem_p;
	
	update	agenda_pac_desc_material
	set	nr_seq_agenda_cons = nr_seq_destino_p
	where	nr_seq_agenda_cons = nr_seq_origem_p;

	select	coalesce(max(cd_pessoa_fisica),'0')
	into STRICT	cd_pessoa_dest_w
	from	agenda_consulta
	where	nr_sequencia	= nr_seq_destino_p;
	
	update	ANEXO_AGENDA_CONS
	set	nr_seq_agenda_cons	= nr_seq_destino_p
	where	nr_seq_agenda_cons	= nr_seq_origem_p;
	
	nr_prontuario_w	:= coalesce(obter_prontuario_pf(cd_estabelecimento_w, cd_pessoa_fisica_w),0);

	select	count(*)
	into STRICT	qt_existe_cpi_solic_w
	from	same_cpi_solic
	where	nr_prontuario		= nr_prontuario_w
	and	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_agenda		= cd_agenda_w
	and	dt_desejada  		= dt_agenda_dest_w;

	
	if (qt_existe_cpi_solic_w = 0) then	
		
		update	same_cpi_solic
		set	nr_seq_agenda = nr_seq_destino_p,
			dt_desejada   = dt_agenda_dest_w
		where	nr_seq_agenda = nr_seq_origem_p;

	end if;

	update same_solic_pront
	set nr_seq_agecons = nr_seq_destino_p
	where nr_seq_agecons = nr_seq_origem_p;

	if (cd_pessoa_dest_w = cd_pessoa_fisica_w) or (cd_pessoa_dest_w = '0') then
		begin

		if (ie_ok_w = 'S') then
			begin

			/* rafael em 07/08/06 projeto hdh */

			select	coalesce(count(*),0)
			into STRICT	qt_prescricao_w
			from	prescr_medica
			where	nr_seq_agecons = nr_seq_origem_p;

			if (qt_prescricao_w > 0) then
				update	prescr_medica
				set	nr_seq_agecons	= nr_seq_destino_p
				where	nr_seq_agecons	= nr_seq_origem_p;

				commit;
			end if;			
			/* fim rafael em 07/08/06 projeto hdh */

	
			select	coalesce(max(obter_valor_param_usuario(866, 121, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'S')
			into STRICT	ie_canc_agenda_transf_w
			;
	
			if (ie_canc_agenda_transf_w	= 'S') then
				update	agenda_consulta
				set	ie_status_agenda		= 'C',
					nm_usuario_status		= nm_usuario_p,
					dt_status			= clock_timestamp(),
					ds_motivo_status		= OBTER_DESC_EXPRESSAO(618480),
					nm_usuario			= nm_usuario_p
				where	nr_sequencia			= nr_seq_origem_p;
			else
				delete	from agenda_consulta
				where	nr_sequencia	= nr_seq_origem_p;
			end if;

			/*insert into log_exclusao
				(nm_tabela,
				dt_atualizacao,
				nm_usuario,
				ds_chave)
			values	('AGENDA_CONSULTA',
				sysdate,
				nm_usuario_p,
				substr('NR_SEQUENCIA='|| nr_seq_origem_p || ', CD_AGENDA=' || cd_agenda_w || ', DT_AGENDA=' || 
to_char(dt_agenda_ww, 'dd/mm/yyyy hh24:mi:ss') || ', IE_CLASSIF_AGENDA=' || ie_classif_agenda_w || ', CD_PESSOA_FISICA=' || 
cd_pessoa_fisica_w || ', DS_OBSERVACAO=TRASFERENCIA PARA AGENDA ' || nr_seq_destino_p, 1,255));*/
			CALL gravar_log_exclusao('AGENDA_CONSULTA',nm_usuario_p,
				substr('NR_SEQUENCIA='|| nr_seq_origem_p || ', CD_AGENDA=' || cd_agenda_w || ', DT_AGENDA=' ||
				to_char(dt_agenda_ww, 'dd/mm/yyyy hh24:mi:ss') || ', IE_CLASSIF_AGENDA=' || ie_classif_agenda_w || ', CD_PESSOA_FISICA=' || 
				cd_pessoa_fisica_w || ', DS_OBSERVACAO=TRASFERENCIA PARA AGENDA ' || nr_seq_destino_p, 1,255),'N');
			end;
		end if;
		end;
	end if;
	
	if (ie_Atualizar_autorizacao_w	= 'S') then
		open c02;
		loop
		fetch c02 into
			nr_sequencia_autor_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin		
			update	autorizacao_convenio
			set	nr_seq_agenda_consulta	= nr_seq_destino_p
			where	nr_sequencia		= nr_sequencia_autor_w;
			end;
		end loop;
		close c02;
	end if;
	end;
end if;

/* rafael em 28/07/06 os37032;*/


/* 
   retirado por rafael em 07/11/2006 os43821.
   conforme combinado com rosane hdh, por telefone.
   sera utilizada a opcao de mouse lado direito, liberar e executar, disponivel na funcao!

select	nvl(count(*),0)
into	qt_prescricao_w
from	prescr_medica
where	nr_seq_agecons = nr_seq_destino_p;

if	(ie_transfere_copia_p	<> 'T') and
	(qt_prescricao_w		= 0) and
	(nr_atendimento_w 		is not null) and
	((nr_seq_proc_interno_w 	is not null) or
	 ((cd_procedimento_w 	is not null) and
	 (ie_origem_proced_w		is not null))) and
	(cd_medico_solic_w		is not null) and
	(((qt_total_secao_w		is not null) and
	  (nr_secao_w			is not null) and
	  (nr_secao_w			<= qt_totala_secao_w)) or
	  (ie_tipo_atendimento_w	= 1)) then
	gerar_prescr_agenda_servico(nr_seq_destino_p, nm_usuario_p);
end if;
*/


/* rafael em 14/09/06 os40640 */

if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
	update	agenda_consulta
	set	ie_status_agenda	= 'N'
	where	nr_sequencia		= nr_seq_destino_p;
end if;


if (ie_enviar_sms_transf_w = 'S') and (cd_tipo_agenda_w = 5) and (ie_transfere_copia_p = 'T') then

	ds_esconder_ddi_w := OBTER_VALOR_PARAM_USUARIO(0,214,0,obter_usuario_ativo,obter_estabelecimento_ativo);
	
	select  CASE WHEN ds_esconder_ddi_w='S' THEN  max(nr_ddd_celular)||max(nr_telefone_celular)  ELSE max(nr_ddi_celular)||max(nr_telefone_celular) END
	into STRICT	nr_telefone_celular_w
	from	pessoa_fisica
	where	cd_pessoa_fisica	= cd_pessoa_fisica_w;

	if (coalesce(ds_remetente_sms_w::text, '') = '') then
		ds_remetente_sms_w	:= substr(nm_estab_dest_w,1,12);
	end if;
	
	if (nr_telefone_celular_w IS NOT NULL AND nr_telefone_celular_w::text <> '') then
		CALL enviar_sms_agenda(ds_remetente_sms_w,
				nr_telefone_celular_w, 
				WHEB_MENSAGEM_PCK.get_texto(456937,'nm_paciente_w='||nm_paciente_w||';dt_agenda_dest_w='||to_char(dt_agenda_dest_w, 'dd/mm/yyyy hh24:mi')), 
				cd_agenda_dest_w, 
				nr_seq_destino_p, 
				nm_usuario_p);	
	end if;	
end if;

if (ie_transfere_copia_p = 'T') then
	select	count(*)
	into STRICT	qt_regra_comunic_w
	from	agenda_regra_envio_ci
	where	coalesce(ie_transferencia,'N') = 'S'
	and	((cd_agenda = cd_agenda_dest_w) or (coalesce(cd_agenda::text, '') = ''));

	if (cd_tipo_agenda_w = 5) and (qt_regra_comunic_w > 0)then	
		CALL Gerar_comunic_ageserv('T',
				cd_agenda_dest_w,
				nm_paciente_w,
				dt_agenda_dest_w,
				nm_usuario_p,
				cd_estabelecimento_p,
				cd_convenio_w,
				ds_observacao_w,
				ie_classif_agenda_w);
	end if;
end if;
ds_retorno_p	:= ds_retorno_w;

if (cd_agenda_w IS NOT NULL AND cd_agenda_w::text <> '' AND cd_agenda_destino_w IS NOT NULL AND cd_agenda_destino_w::text <> '') then

	if (ie_transfere_copia_p = 'T') then

		/* gerar historico */

		atrib_oldvalue_w := substr(obter_desc_agenda(cd_agenda_w),1,50);
		atrib_newvalue_w := substr(obter_desc_agenda(cd_agenda_destino_w),1,50);

		CALL gerar_agenda_consulta_hist(cd_agenda_destino_w,nr_seq_origem_p,'T',nm_usuario_p,WHEB_MENSAGEM_PCK.get_texto(456905,'atrib_oldvalue_w='||atrib_oldvalue_w||';dt_agenda_orig_w='||to_char(dt_agenda_orig_w,'dd/mm/yyyy hh24:mi:ss')||
					';atrib_newvalue_w='||atrib_newvalue_w||';dt_agenda_dest_w='||to_char(dt_agenda_dest_w,'dd/mm/yyyy hh24:mi:ss')),cd_pessoa_fisica_w,nm_paciente_w,dt_agenda_dest_w);
	elsif (ie_transfere_copia_p = 'C') then
		/* gerar historico */

		atrib_oldvalue_w := substr(obter_desc_agenda(cd_agenda_w),1,50);
		atrib_newvalue_w := substr(obter_desc_agenda(cd_agenda_destino_w),1,50);

		CALL gerar_agenda_consulta_hist(cd_agenda_destino_w,nr_seq_origem_p,'CP',nm_usuario_p,WHEB_MENSAGEM_PCK.get_texto(456927,'atrib_oldvalue_w='||atrib_oldvalue_w||';dt_agenda_orig_w='||to_char(dt_agenda_orig_w,'dd/mm/yyyy hh24:mi:ss')||
					';atrib_newvalue_w='||atrib_newvalue_w||';dt_agenda_dest_w='||to_char(dt_agenda_dest_w,'dd/mm/yyyy hh24:mi:ss')),cd_pessoa_fisica_w,nm_paciente_w,dt_agenda_dest_w);
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE transferir_agenda_consulta (cd_estabelecimento_p bigint, nr_seq_origem_p bigint, nr_seq_destino_p bigint, ie_transfere_copia_p text, nr_seq_motivo_p bigint, dt_agenda_p timestamp, nm_usuario_p text, ds_motivo_transf_p text, ds_retorno_p INOUT text) FROM PUBLIC;

