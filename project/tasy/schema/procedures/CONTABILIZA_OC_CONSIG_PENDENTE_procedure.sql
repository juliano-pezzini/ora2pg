-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE contabiliza_oc_consig_pendente ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Contabilizar os valores de Ordem de Compra.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[  ]  Objetos do dicionario [ x ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
        IE_CONTAB_OC_CANCEL_W - Define se sera conciderado a OC cancelada, desde que, ela nao
        tenha sido baixada anterior a data do Lote.
        Funcao: Gerenciamento dos parametros de suprimentos.
                Parametros Compras/ Gerais
                Contabiliza OC cancelada.

        IE_CONTAB_W - Define se sera contabilizado a OC conforme o convenio do atendimento da OC.
        Funcao: Cadastros do convenio.
                Relacionamento/Estab
                Contabiliza lote consignado.
-------------------------------------------------------------------------------------------------------------------

Referencias:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_sequencia_movto_w                    movimento_contabil.nr_sequencia%type            := 0;
nr_ordem_compra_w                       bigint;
nm_fornecedor_w                         varchar(254);
cd_conta_debito_w                       varchar(20);
cd_conta_credito_w                      varchar(20);
cd_centro_custo_w                       integer;
cd_historico_w                          bigint;
cd_estabelecimento_w                    integer;
cd_tipo_lote_contabil_w                 bigint;
cd_material_w                           integer;
dt_movimento_w                          timestamp;
vl_movimento_w                          double precision;
dt_referencia_w                         timestamp;
dt_estorno_w                            timestamp;
ds_doc_agrupamento_w                    varchar(50)    := '0';
ds_conteudo_w                           varchar(500);
ds_compl_historico_w                    varchar(255);
ds_material_w                           varchar(255);
ie_compl_hist_w                         varchar(1);
nr_atendimento_W                        bigint;
cd_convenio_w                           bigint;
ie_contab_w                             varchar(1);
nm_agrupador_w                          varchar(255);
nr_seq_agrupamento_w                    bigint;
ie_origem_documento_w                   movimento_contabil.ie_origem_documento%Type;
nr_documento_ww                         movimento_contabil.nr_documento%Type;
ie_contab_oc_cancel_w                   parametro_compras.ie_contab_oc_cancel%type;
dt_movimento_trunc_w                    timestamp;
nm_tabela_w                             w_movimento_contabil.nm_tabela%type;
nm_atributo_w                           w_movimento_contabil.nm_atributo%type;
nr_seq_tab_orig_w                       w_movimento_contabil.nr_seq_tab_orig%type;
ie_tipo_ordem_compra_w                  lote_contabil_parametro.ds_valor_parametro%type;
cd_sequencia_parametro_w				ordem_compra_item.cd_sequencia_parametro%type;

c01 CURSOR FOR
        SELECT  a.cd_conta_contabil,
                a.cd_centro_custo,
                obter_vl_pend_oci(b.nr_ordem_compra,a.nr_item_oci,dt_movimento_w) vl_item_liquido,
                b.nr_ordem_compra,
                a.cd_material,
                b.nr_atendimento,
                'VL_LIQ_ITEM_PEND' nm_atributo,
				a.cd_sequencia_parametro
        from    ordem_compra            b,
                ordem_compra_item       a
        where   a.nr_ordem_compra       = b.nr_ordem_compra
        and     b.cd_estabelecimento    = cd_estabelecimento_w
        and     ie_contab_oc_cancel_w   = 'N'
        and     coalesce(b.nr_seq_motivo_cancel::text, '') = ''
        and     (a.cd_conta_contabil IS NOT NULL AND a.cd_conta_contabil::text <> '')
        and     (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> '')
        and     coalesce(a.dt_reprovacao::text, '') = ''
        and     obter_se_mat_consignado(a.cd_material) <> '0'
        and (coalesce(b.dt_baixa::text, '') = '' or b.dt_baixa >= dt_movimento_w)
        and     b.dt_ordem_compra <= dt_movimento_w
        and     substr(obter_se_item_oc_cancelado(b.nr_ordem_compra, a.nr_item_oci),1,1) = 'N'
        and     ((coalesce(b.ie_tipo_ordem::text, '') = '' and coalesce(ie_tipo_ordem_compra_w::text, '') = '') or (b.ie_tipo_ordem = coalesce(ie_tipo_ordem_compra_w,b.ie_tipo_ordem)))

union all

        SELECT  a.cd_conta_contabil,
                a.cd_centro_custo,
                (obter_vl_pend_oci(b.nr_ordem_compra,a.nr_item_oci,dt_movimento_w)) vl_item_liquido,
                b.nr_ordem_compra,
                a.cd_material,
                b.nr_atendimento,
                'VL_LIQ_ITEM_PEND' nm_atributo,
				a.cd_sequencia_parametro
        from    ordem_compra            b,
                ordem_compra_item       a
        where   a.nr_ordem_compra       = b.nr_ordem_compra
        and     b.cd_estabelecimento    = cd_estabelecimento_w
        and     ie_contab_oc_cancel_w   = 'S'
        and     ((coalesce(b.nr_seq_motivo_cancel::text, '') = '') or ((b.nr_seq_motivo_cancel IS NOT NULL AND b.nr_seq_motivo_cancel::text <> '') and b.dt_baixa >= dt_movimento_w))
        and     (a.cd_conta_contabil IS NOT NULL AND a.cd_conta_contabil::text <> '')
        and     (a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> '')
        and     coalesce(a.dt_reprovacao::text, '') = ''
        and     obter_se_mat_consignado(a.cd_material) <> '0'
        and (coalesce(b.dt_baixa::text, '') = '' or b.dt_baixa >= dt_movimento_w)
        and     b.dt_ordem_compra <= dt_movimento_w
        and     substr(obter_se_item_oc_cancelado(b.nr_ordem_compra, a.nr_item_oci),1,1) = 'N'
        and     ((coalesce(b.ie_tipo_ordem::text, '') = '' and coalesce(ie_tipo_ordem_compra_w::text, '') = '') or (b.ie_tipo_ordem = coalesce(ie_tipo_ordem_compra_w,b.ie_tipo_ordem)));


BEGIN
/*Validacao para impedir a geracao em lotes incorretos */

if (ie_exclusao_p <> 'S') then
        select b.cd_tipo_lote_contabil
        into STRICT cd_tipo_lote_contabil_w
        from lote_contabil b
        where b.nr_lote_contabil = nr_lote_contabil_p;
        if (cd_tipo_lote_contabil_w <> 26) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(261346);
        end if;
end if;
/* identifica se eh exclusao do lote */

if (ie_exclusao_p = 'S') then

        delete
        from    movimento_contabil
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update  lote_contabil
        set     vl_credito              = 0,
                vl_debito               = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;
        commit;
else
        select  pkg_date_utils.start_of(dt_referencia,'MONTH',0),
                cd_estabelecimento,
                cd_tipo_lote_contabil
        into STRICT    dt_referencia_w,
                cd_estabelecimento_w,
                cd_tipo_lote_contabil_w
        from    lote_contabil
        where   nr_lote_contabil = nr_lote_contabil_p;

        begin
        ie_compl_hist_w := substr(obter_se_compl_tipo_lote(cd_estabelecimento_w,cd_tipo_lote_contabil_w),1,1);
        exception
        when others then
                ie_compl_hist_w := 'N';
        end;

        dt_movimento_w          := pkg_date_utils.end_of(dt_referencia_w, 'MONTH', 0);
        dt_movimento_trunc_w    := pkg_date_utils.start_of(pkg_date_utils.END_OF(dt_referencia_w, 'MONTH', 0),'dd',0);

        /* leitura para identificar o codigo do historico */

        begin
                select  vl_parametro
                into STRICT    cd_historico_w
                from    lote_contabil_parametro
                where   nr_lote_contabil        = nr_lote_contabil_p
                and     nr_seq_parametro        = 1;
        exception when no_data_found then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(218800);
        end;

        /* leitura para identificar o codigo da conta devedora */

        begin
                select  ds_valor_parametro
                into STRICT    cd_conta_credito_w
                from    lote_contabil_parametro
                where   nr_lote_contabil = nr_lote_contabil_p
                and     nr_seq_parametro        = 2;
        exception when no_data_found then
                cd_conta_credito_w := '';
        end;

        /*Leitura da Descricao do tipo de lote contabil, quando o mesmo for do tipo Ordem consignado pendente*/

        begin
                select  ds_valor_parametro
                into STRICT    ie_tipo_ordem_compra_w
                from    lote_contabil_parametro
                where   nr_lote_contabil = nr_lote_contabil_p
                and     nr_seq_parametro        = 3;
        exception when no_data_found then
                ie_tipo_ordem_compra_w := null;
        end;

        if (coalesce(cd_historico_w::text, '') = '') or (coalesce(cd_conta_credito_w::text, '') = '') then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(218801);
        end if;

        select  coalesce(max(ie_contab_oc_cancel),'N')
        into STRICT    ie_contab_oc_cancel_w
        from    parametro_compras
        where   cd_estabelecimento = cd_estabelecimento_w;

        delete
        from    w_movimento_contabil
        where nr_lote_contabil        = nr_lote_contabil_p;

        nm_agrupador_w  := coalesce(trim(both obter_agrupador_contabil(cd_tipo_lote_contabil_w)),'NR_ORDEM_COMPRA');

        open c01;
        loop
        fetch c01 into
                cd_conta_debito_w,
                cd_centro_custo_w,
                vl_movimento_w,
                nr_ordem_compra_w,
                cd_material_w,
                nr_atendimento_w,
                nm_atributo_w,
				cd_sequencia_parametro_w;
        EXIT WHEN NOT FOUND; /* apply on c01 */

                nm_tabela_w             := 'ORDEM_COMPRA_ITEM';
                nr_seq_tab_orig_w       := nr_ordem_compra_w;

                if (nm_atributo_w = 'VL_LIQUIDO') then
                        nm_tabela_w     := 'NOTA_FISCAL_ITEM';
                end if;

                ie_contab_w             := 'S';
                nr_sequencia_movto_w    := nr_sequencia_movto_w + 1;

                if (nm_agrupador_w = 'NR_ORDEM_COMPRA')then
                        nr_seq_agrupamento_w    := nr_ordem_compra_w;
                end if;

                if (coalesce(nr_seq_agrupamento_w,0) = 0)then
                        nr_seq_agrupamento_w    := nr_ordem_compra_w;
                end if;

                nm_fornecedor_w         := substr(obter_dados_ordem_compra(nr_ordem_compra_w,'F'),1,254);
                ds_material_w           := substr(obter_desc_material(cd_material_w),1,255);

                if (ie_compl_hist_w        = 'S') then

                        ds_conteudo_w   :=      substr( nm_fornecedor_w                 || '#@' ||
                                                        nr_ordem_compra_w               || '#@' ||
                                                        cd_material_w                   || '#@' ||
                                                        ds_material_w                   || '#@' ||
                                                        nr_atendimento_w,1,500);

                        ds_compl_historico_w    := substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w, ds_conteudo_w),1,255);

                end if;

                if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
                        cd_convenio_w   := obter_convenio_atendimento(nr_atendimento_w);

                        if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') then
                                select  coalesce(max(ie_contab_lote_consig),'N')
                                into STRICT    ie_contab_w
                                from    convenio_estabelecimento
                                where   cd_convenio             = cd_convenio_w
                                and     cd_estabelecimento      = cd_estabelecimento_w;
                        end if;
                end if;

                nr_documento_ww := nr_ordem_compra_w;
                ie_origem_documento_w := 10;

                if (ie_contab_w = 'S') then
                        insert into w_movimento_contabil(nr_lote_contabil,
                                nr_sequencia,
                                cd_conta_contabil,
                                cd_centro_custo,
                                ie_debito_credito,
                                cd_historico,
                                dt_movimento,
                                vl_movimento,
                                ds_compl_historico,
                                ds_doc_agrupamento,
                                nr_seq_agrupamento,
                                ie_transitorio,
                                nr_documento,
                                ie_origem_documento,
                                nm_tabela,
                                nm_atributo,
                                nr_seq_tab_orig,
                                nr_seq_info,
								cd_sequencia_parametro)
                        values (nr_lote_contabil_p,
                                nr_sequencia_movto_w,
                                cd_conta_debito_w,
                                cd_centro_custo_w,
                                'D',
                                cd_historico_w,
                                dt_movimento_w,
                                vl_movimento_w,
                                ds_compl_historico_w,
                                ds_doc_agrupamento_w,
                                nr_seq_agrupamento_w,
                                'N',
                                nr_documento_ww,
                                ie_origem_documento_w,
                                nm_tabela_w,
                                nm_atributo_w,
                                nr_seq_tab_orig_w,
                                10,
								cd_sequencia_parametro_w);

                        insert into w_movimento_contabil(nr_lote_contabil,
                                nr_sequencia,
                                cd_conta_contabil,
                                ie_debito_credito,
                                cd_historico,
                                dt_movimento,
                                vl_movimento,
                                ds_compl_historico,
                                ds_doc_agrupamento,
                                nr_seq_agrupamento,
                                ie_transitorio,
                                nr_documento,
                                ie_origem_documento,
                                nm_tabela,
                                nm_atributo,
                                nr_seq_tab_orig,
                                nr_seq_info)
                        values (nr_lote_contabil_p,
                                nr_sequencia_movto_w,
                                cd_conta_credito_w,
                                'C',
                                cd_historico_w,
                                dt_movimento_w,
                                vl_movimento_w,
                                ds_compl_historico_w,
                                ds_doc_agrupamento_w,
                                nr_seq_agrupamento_w,
                                'N',
                                nr_documento_ww,
                                ie_origem_documento_w,
                                nm_tabela_w,
                                nm_atributo_w,
                                nr_seq_tab_orig_w,
                                10);
                end if;
        end loop;
        close c01;

        CALL agrupa_movimento_contabil(nr_lote_contabil_p, nm_usuario_p);

        /*reverter os lancamentos no primeiro dia do mes subsequente */

        dt_estorno_w    := pkg_date_utils.start_of(pkg_date_utils.ADD_MONTH(dt_referencia_w,1,0),'MONTH',0);

        select  max(nr_sequencia)
        into STRICT    nr_sequencia_movto_w
        from    movimento_contabil
        where   nr_lote_contabil        = nr_lote_contabil_p;

        insert into movimento_contabil(nr_lote_contabil,
                nr_sequencia,
                cd_conta_contabil,
                ie_debito_credito,
                cd_historico,
                dt_movimento,
                vl_movimento,
                dt_atualizacao,
                nm_usuario,
                cd_centro_custo,
                ds_compl_historico,
                nr_seq_trans_fin,
                nr_documento,
                nr_seq_agrupamento,
                ie_transitorio,
                cd_estabelecimento,
                ie_origem_documento)
        SELECT  nr_lote_contabil,
                nr_sequencia_movto_w + row_number() OVER () AS rownum,
                cd_conta_contabil,
                CASE WHEN ie_debito_credito='D' THEN 'C'  ELSE 'D' END ,
                cd_historico,
                dt_estorno_w,
                vl_movimento,
                dt_atualizacao,
                nm_usuario,
                cd_centro_custo,
                substr(ds_compl_historico || ' ' || wheb_mensagem_pck.get_texto(799478) || ' ',1,255),
                nr_seq_trans_fin,
                nr_documento,
                nr_seq_agrupamento,
                'N',
                cd_estabelecimento,
                ie_origem_documento
        from    movimento_contabil
        where   nr_lote_contabil        = nr_lote_contabil_p;
        commit;
end if;

if (ie_exclusao_p = 'S') then
        ds_retorno_p            :=  wheb_mensagem_pck.get_texto(799475);

        CALL ctb_gravar_log_lote(    nr_lote_contabil_p,
                                2,
                                '',
                                nm_usuario_p);
else
        ds_retorno_p            := wheb_mensagem_pck.get_texto(799476);

        CALL ctb_gravar_log_lote(    nr_lote_contabil_p,
                                1,
                                '',
                                nm_usuario_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE contabiliza_oc_consig_pendente ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

