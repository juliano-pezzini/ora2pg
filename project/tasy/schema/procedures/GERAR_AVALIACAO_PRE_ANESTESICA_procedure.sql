-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_avaliacao_pre_anestesica ( nr_seq_agenda_p bigint, nm_usuario_p text, nr_sequencia_p INOUT bigint) AS $body$
DECLARE

 
nr_sequencia_w		  		bigint;
cd_pessoa_fisica_w	  		varchar(10);
cd_medico_w		    	varchar(10);
dt_cirurgia_w		  	 	timestamp;
cd_procedimento_w	  		bigint;
ie_origem_proced_w	    	bigint;
nr_seq_proc_interno_w	  		bigint;
cd_doenca_cid_w		    	varchar(10);
nr_atendimento_w		  	bigint;
nr_cirurgia_w		    	bigint;
cd_template_w		    	bigint;
nr_seq_ehr_reg_template_w		bigint;
nr_seq_ehr_registro_w			bigint;
ie_obter_hist_saude_w			varchar(1) := 'N';
nr_seq_aval_pre_anestesica_w		bigint;
ds_doenca_w				varchar(2000);
ds_cirurgia_w				varchar(2000);
ds_anestesia_w				varchar(2000);
ds_medicamento_uso_w			varchar(2000);	
ds_habito_w				varchar(2000);
ds_alergia_w				varchar(2000);
ie_eh_medico_w  			varchar(1);
ie_usuario_logado_w			varchar(1);

 

BEGIN 
 
ie_obter_hist_saude_w := Obter_Param_Usuario(874, 17, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_obter_hist_saude_w);
cd_template_w := Obter_Param_Usuario(874, 40, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, cd_template_w);
ie_usuario_logado_w := Obter_Param_Usuario(874, 55, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_usuario_logado_w);
 
select	max(cd_pessoa_fisica), 
	max(cd_medico), 
	max(hr_inicio), 
	max(cd_procedimento), 
	max(ie_origem_proced), 
	max(nr_seq_proc_interno), 
	max(cd_doenca_cid), 
	max(nr_atendimento), 
	max(nr_cirurgia) 
into STRICT	cd_pessoa_fisica_w, 
	cd_medico_w, 
	dt_cirurgia_w, 
	cd_procedimento_w, 
	ie_origem_proced_w, 
	nr_seq_proc_interno_w, 
	cd_doenca_cid_w, 
	nr_atendimento_w, 
	nr_cirurgia_w 
from	agenda_paciente 
where	nr_sequencia	= nr_seq_agenda_p;
 
if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then 
	select	coalesce(max('S'),'N') 
	into STRICT	ie_eh_medico_w 
	from	medico 
	where 	cd_pessoa_fisica = cd_medico_w;
 
	if (ie_eh_medico_w = 'N') then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(352989);
	end if;
 
	select	nextval('aval_pre_anestesica_seq') 
	into STRICT	nr_sequencia_w 
	;
 
	nr_sequencia_p	:= nr_sequencia_w;
 
	insert into aval_pre_anestesica( 
		nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		nr_seq_agenda, 
		nr_cirurgia, 
		dt_avaliacao, 
		cd_avaliador, 
		cd_pessoa_fisica, 
		cd_medico, 
		cd_procedimento, 
		ie_origem_proced, 
		nr_seq_proc_interno, 
		cd_doenca_cid, 
		dt_cirurgia, 
		nr_atendimento, 
		ie_situacao) 
	values ( 
		nr_sequencia_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_seq_agenda_p, 
		nr_cirurgia_w, 
		clock_timestamp(), 
		obter_pessoa_fisica_usuario(nm_usuario_p,'C'), 
		cd_pessoa_fisica_w, 
		cd_medico_w, 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		nr_seq_proc_interno_w, 
		cd_doenca_cid_w, 
		dt_cirurgia_w, 
		nr_atendimento_w, 
		'A');
 
	update	agenda_paciente 
	set	nr_seq_aval_pre = nr_sequencia_w 
	where 	nr_sequencia = nr_seq_agenda_p;
 
 
	if (ie_obter_hist_saude_w = 'S') then 
 
	begin 
		SELECT	SUBSTR(obter_inf_hist_saude(cd_pessoa_fisica_w,'D'),1,2000), 
			SUBSTR(obter_inf_hist_saude(cd_pessoa_fisica_w,'C'),1,2000), 
			SUBSTR(obter_inf_hist_saude(cd_pessoa_fisica_w,'A'),1,2000), 
			SUBSTR(obter_inf_hist_saude(cd_pessoa_fisica_w,'M'),1,2000), 
			SUBSTR(obter_inf_hist_saude(cd_pessoa_fisica_w,'H'),1,2000), 
			SUBSTR(obter_inf_hist_saude(cd_pessoa_fisica_w,'AL'),1,2000) 
		into STRICT 	ds_doenca_w, 
			ds_cirurgia_w, 
			ds_anestesia_w, 
			ds_medicamento_uso_w, 
			ds_habito_w, 
			ds_alergia_w											 
		;
		 
		 
		select	nextval('anamnese_apae_seq') 
		into STRICT	nr_seq_aval_pre_anestesica_w 
		;
		 
		insert into 	anamnese_apae(nr_sequencia,	 
				dt_atualizacao, 
				nm_usuario, 
				nm_usuario_nrec, 
				nr_seq_aval_pre, 
				ds_doenca, 
				ds_cirurgia, 
				ds_anestesia, 
				ds_medicamento_uso, 
				ds_habito, 
				ds_alergia) 
			values (nr_seq_aval_pre_anestesica_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				nm_usuario_p, 
				nr_sequencia_w, 
				substr(ds_doenca_w,1,2000), 
				substr(ds_cirurgia_w,1,2000), 
				substr(ds_anestesia_w,1,2000), 
				substr(ds_medicamento_uso_w,1,2000), 
				substr(ds_habito_w,1,2000), 
				substr(ds_alergia_w,1,2000));
 
	exception 
	when others then 
		null;	
	end;
		 
	end if;
 
	if (coalesce(cd_template_w,0) > 0) then 
 
		select 	nextval('ehr_registro_seq') 
		into STRICT	nr_seq_ehr_registro_w 
		;
		 
		select	nextval('ehr_reg_template_seq') 
		into STRICT	nr_seq_ehr_reg_template_w 
		;
 
		insert into ehr_registro( 
							nr_sequencia, 
							cd_paciente, 
							dt_atualizacao, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							dt_registro, 
							cd_profissional, 
							nr_seq_aval_pre, 
							nr_atendimento) 
						values ( 
							nr_seq_ehr_registro_w, 
							cd_pessoa_fisica_w, 
							clock_timestamp(), 
							nm_usuario_p, 
							clock_timestamp(), 
							nm_usuario_p, 
							clock_timestamp(), 
							CASE WHEN ie_usuario_logado_w='N' THEN cd_medico_w  ELSE obter_pessoa_fisica_usuario(nm_usuario_p,'C') END , 
							nr_sequencia_w, 
							nr_atendimento_w);
							 
		insert into ehr_reg_template( 
							nr_sequencia, 
							nr_seq_reg, 
							dt_atualizacao, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							dt_registro, 
							nr_seq_template) 
						values ( 
							nr_seq_ehr_reg_template_w, 
							nr_seq_ehr_registro_w, 
							clock_timestamp(), 
							nm_usuario_p, 
							clock_timestamp(), 
							nm_usuario_p, 
							clock_timestamp(), 
							cd_template_w);						
 
	end if;
 
	commit;
end if;	
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_avaliacao_pre_anestesica ( nr_seq_agenda_p bigint, nm_usuario_p text, nr_sequencia_p INOUT bigint) FROM PUBLIC;

