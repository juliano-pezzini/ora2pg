-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_atualiz_usu_controle_extra ( nr_sequencia_p bigint, ie_opcao_p text, ie_ativ_ant_os_p text, nm_usuario_p text) AS $body$
DECLARE


/*	Sequência das atividades
	-1 - Almoço
	-2 - Café

	ie_opcao_p
	I - Iniciar atividade
	F - Finalizar atividade	*/
nr_seq_usuario_cont_w		bigint;
nr_seq_ativ_real_os_w		bigint;
ie_atividade_w			varchar(15);
dt_inicio_ativ_w			timestamp;
param36_w	varchar(1);


BEGIN
select	max(nr_sequencia)
into STRICT	nr_seq_usuario_cont_w
from	usuario_controle
where	dt_referencia	= trunc(clock_timestamp())
and	nm_usuario	= nm_usuario_p;

if (coalesce(nr_sequencia_p,0) <> 0) and (coalesce(nr_seq_usuario_cont_w,0) > 0) then
	begin

	param36_w := Obter_Param_Usuario(297, 36, wheb_usuario_pck.get_cd_perfil(), nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento(), param36_w);

	if (ie_opcao_p = 'I') then
		begin
		if (coalesce(ie_ativ_ant_os_p,'N') = 'S') then
			begin
			if (coalesce(param36_w, 'S') = 'S') then
				select	max(c.nr_sequencia)
				into STRICT	nr_seq_ativ_real_os_w
				from	man_estagio_processo d,
					man_ordem_serv_ativ c,
					man_ordem_ativ_prev b,
					man_ordem_servico a
				where	a.nr_sequencia		= b.nr_seq_ordem_serv
				and	b.nr_sequencia		= c.nr_seq_ativ_prev
				and	d.nr_sequencia		= a.nr_seq_estagio
				and (d.ie_desenv		= 'S'
					or d.ie_tecnologia		= 'S')
				and	c.nm_usuario_exec		= nm_usuario_p
				and	trunc(c.dt_atividade)	= trunc(clock_timestamp())
				and	coalesce(b.dt_real::text, '') = ''
				and	coalesce(c.dt_fim_atividade::text, '') = '';
			else
				select	max(c.nr_sequencia)
				into STRICT	nr_seq_ativ_real_os_w
				from	man_estagio_processo d,
					man_ordem_serv_ativ c,
					man_ordem_servico a
				where	a.nr_sequencia		= c.nr_seq_ordem_serv
				and	d.nr_sequencia		= a.nr_seq_estagio
				and (d.ie_desenv	= 'S'
					or d.ie_tecnologia	= 'S' or d.ie_suporte = 'S')
				and	c.nm_usuario_exec		= nm_usuario_p
				and	trunc(c.dt_atividade)	= trunc(clock_timestamp())
				and	coalesce(c.dt_fim_atividade::text, '') = '';
			end if;

			if (coalesce(nr_seq_ativ_real_os_w,0) > 0) then
				update	man_ordem_serv_ativ
				set	dt_atualizacao	= clock_timestamp(),
					dt_fim_atividade	= clock_timestamp(),
					nm_usuario	= nm_usuario_p,
					qt_minuto		= obter_min_entre_datas(dt_atividade,clock_timestamp(),1),
					qt_minuto_cobr	= obter_min_entre_datas(dt_atividade,clock_timestamp(),1)
				where	nr_sequencia	= nr_seq_ativ_real_os_w;
			end if;
			end;
		end if;

		insert into usuario_controle_extra(
				nr_sequencia,
				nr_seq_usuario_cont,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_inicio,
				dt_fim,
				ie_atividade,
				nr_seq_ativ_os)
			values (	nextval('usuario_controle_extra_seq'),
				nr_seq_usuario_cont_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				null,
				nr_sequencia_p,
				nr_seq_ativ_real_os_w);

		if (coalesce(nr_sequencia_p,0) > 0) then
			begin
			insert into usuario_atividade(
					nr_sequencia,
					nr_seq_controle,
					dt_atualizacao,
					nm_usuario,
					dt_atividade,
					nr_seq_tipo_ativ,
					qt_minuto,
					ds_observacao,
					cd_setor_atendimento,
					dt_fim_atividade)
				values (	nextval('usuario_atividade_seq'),
					nr_seq_usuario_cont_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nr_sequencia_p,
					0,
					' ',
					null,
					null);
			end;
		end if;
		end;
	elsif (ie_opcao_p = 'F') then
		begin
		begin
		select	ie_atividade,
			dt_inicio,
			nr_seq_ativ_os
		into STRICT	ie_atividade_w,
			dt_inicio_ativ_w,
			nr_seq_ativ_real_os_w
		from	usuario_controle_extra
		where	nr_sequencia = nr_sequencia_p;
		exception
		when others then
			ie_atividade_w := '0';
		end;

		if (ie_atividade_w = '-1') then
			begin
			update	usuario_controle
			set	qt_min_intervalo	= obter_min_entre_datas(dt_inicio_ativ_w,clock_timestamp(),1)
			where	nr_sequencia	= nr_seq_usuario_cont_w;
			end;
		elsif (ie_atividade_w = '-2') then
			begin
			update	usuario_controle
			set	qt_min_lanche	= qt_min_lanche + obter_min_entre_datas(dt_inicio_ativ_w,clock_timestamp(),1)
			where	nr_sequencia	= nr_seq_usuario_cont_w;
			end;
		elsif (ie_atividade_w <> '0') then
			begin
			update	usuario_atividade
			set	dt_fim_atividade	= clock_timestamp(),
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p,
				qt_minuto		= obter_min_entre_datas(dt_atividade,clock_timestamp(),1)
			where	nr_seq_controle	= nr_seq_usuario_cont_w
			and	nr_seq_tipo_ativ	= ie_atividade_w
			and	qt_minuto		= 0
			and	coalesce(dt_fim_atividade::text, '') = '';
			end;
		end if;

		CALL atualizar_ativ_usuario(nr_seq_usuario_cont_w);

		if (coalesce(ie_ativ_ant_os_p,'N') = 'S') and (coalesce(nr_seq_ativ_real_os_w,0) > 0) then
			begin
			if (coalesce(param36_w, 'S') = 'S') then
				select	max(c.nr_sequencia)
				into STRICT	nr_seq_ativ_real_os_w
				from	man_estagio_processo d,
					man_ordem_serv_ativ c,
					man_ordem_ativ_prev b,
					man_ordem_servico a
				where	a.nr_sequencia	= b.nr_seq_ordem_serv
				and	b.nr_sequencia	= c.nr_seq_ativ_prev
				and	d.nr_sequencia	= a.nr_seq_estagio
				and (d.ie_desenv	= 'S'
					or d.ie_tecnologia	= 'S')
				and	c.nr_sequencia	= nr_seq_ativ_real_os_w
				and	coalesce(b.dt_real::text, '') = ''
				and	obter_se_os_prior_usuario(c.nm_usuario_exec,b.nr_sequencia,a.nr_sequencia) = 'N';
			else
				select	max(c.nr_sequencia)
				into STRICT	nr_seq_ativ_real_os_w
				from	man_estagio_processo d,
					man_ordem_serv_ativ c,
					man_ordem_servico a
				where	a.nr_sequencia	= c.nr_seq_ordem_serv
				and	d.nr_sequencia	= a.nr_seq_estagio
				and (d.ie_desenv	= 'S'
					or d.ie_tecnologia	= 'S' or d.ie_suporte = 'S')
				and	c.nr_sequencia	= nr_seq_ativ_real_os_w;
			end if;

			if (coalesce(nr_seq_ativ_real_os_w,0) > 0) then
				begin
				insert into man_ordem_serv_ativ(
						nr_sequencia,
						nr_seq_ordem_serv,
						dt_atualizacao,
						nm_usuario,
						dt_atividade,
						nr_seq_funcao,
						qt_minuto,
						qt_minuto_cobr,
						nm_usuario_exec,
						nr_seq_ativ_prev,
						nr_seq_proj_cron_etapa,
						nr_seq_grupo_des,
						nr_seq_grupo_des_os,
						dt_atualizacao_nrec,
						nm_usuario_nrec)
					SELECT	nextval('man_ordem_serv_ativ_seq'),
						nr_seq_ordem_serv,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nr_seq_funcao,
						0,
						0,
						nm_usuario_p,
						nr_seq_ativ_prev,
						nr_seq_proj_cron_etapa,
						nr_seq_grupo_des,
						nr_seq_grupo_des_os,
						clock_timestamp(),
						nm_usuario_p
					from	man_ordem_serv_ativ
					where	nr_sequencia = nr_seq_ativ_real_os_w;

				if (coalesce(param36_w, 'S') = 'S') then
					CALL man_gerar_previsao_dia(trunc(clock_timestamp()),nm_usuario_p);
				end if;
				end;
			end if;
			end;
		end if;

		update	usuario_controle_extra
		set	dt_fim		= clock_timestamp(),
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where	nr_sequencia	= nr_sequencia_p;
		end;
	end if;

	commit;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_atualiz_usu_controle_extra ( nr_sequencia_p bigint, ie_opcao_p text, ie_ativ_ant_os_p text, nm_usuario_p text) FROM PUBLIC;

