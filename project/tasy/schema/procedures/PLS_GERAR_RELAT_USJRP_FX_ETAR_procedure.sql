-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_relat_usjrp_fx_etar ( dt_inicio_p text, dt_fim_p text, nr_contrato_in_p bigint, nr_contrato_fi_p bigint, nr_familia_in_p bigint, nr_familia_fi_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* Cursor 1 */

nr_seq_contrato_w	bigint;
nr_contrato_w		bigint;

/* Cursor 2 */

qt_idade_inicial_w	bigint;
qt_idade_final_w	bigint;

/* Cursor 3 */

nr_seq_segurado_w	bigint;
dt_adesao_w		timestamp;
dt_rescisao_w		timestamp;
nr_seq_plano_w		bigint;

/* Cursor 4 */

dt_referencia_w		timestamp;
nr_titulo_w		bigint;
nr_seq_mens_seg_w	bigint;
dt_mesano_refer_w	timestamp;

/* Cursor 5 */

ie_tipo_mensalidade_w	varchar(1);
vl_item_w		double precision;
ie_tipo_item_w		varchar(2);
nr_seq_tipo_lanc_w	bigint;

/* Cursor 6 */

ie_operacao_motivo_w	varchar(1);

/* Outros */

qt_fat_anterior_w	bigint;
qt_mov_incl_w		bigint;
qt_mov_excl_w		bigint;
qt_atual_w		bigint;
vl_tot_desc_w		double precision;
vl_copartic_w		double precision;
vl_total_w		double precision;
qt_mens_retro_w		bigint;
vl_mens_retro_w		double precision;
vl_even_acres_w		double precision;
nr_seq_segur_antec_w	bigint;
nr_seq_segur_mens_w	bigint;

C01 CURSOR FOR
	SELECT	distinct c.nr_sequencia,
		c.nr_contrato
	from	pls_mensalidade		a,
		pls_contrato_pagador	b,
		pls_contrato		c
	where	b.nr_sequencia	= a.nr_seq_pagador
	and	c.nr_sequencia	= b.nr_seq_contrato
	and	a.dt_referencia between to_date(dt_inicio_p,'dd/mm/yyyy') and to_date(dt_fim_p,'dd/mm/yyyy');

C02 CURSOR FOR
	SELECT	a.qt_idade_inicial,
		a.qt_idade_final
	from	pls_plano_preco		a,
		pls_tabela_preco	b,
		pls_contrato_plano	c,
		pls_contrato		d
	where	b.nr_sequencia 	= a.nr_seq_tabela
	and	b.nr_sequencia	= c.nr_seq_tabela
	and	d.nr_sequencia	= c.nr_seq_contrato
	and	d.nr_sequencia 	= nr_seq_contrato_w
	and	c.nr_sequencia 	= (	SELECT	max(x.nr_sequencia)
					from	pls_contrato_plano	x
					where	x.nr_seq_contrato = d.nr_sequencia)
	order by 1;

C03 CURSOR FOR
	SELECT	distinct c.nr_sequencia,
		c.dt_contratacao,
		c.dt_rescisao,
		g.nr_sequencia
	from	pls_mensalidade_segurado	a,
		pls_segurado_carteira		b,
		pls_segurado			c,
		pessoa_fisica			d,
		pls_contrato_pagador		e,
		pls_contrato			f,
		pls_plano			g
	where	c.nr_sequencia		= a.nr_seq_segurado
	and	c.nr_sequencia 		= b.nr_seq_segurado
	and	d.cd_pessoa_fisica	= c.cd_pessoa_fisica
	and	e.nr_sequencia		= c.nr_seq_pagador
	and	f.nr_sequencia		= c.nr_seq_contrato
	and	f.nr_sequencia		= e.nr_seq_contrato
	and	g.nr_sequencia 		= c.nr_seq_plano
	and	f.nr_sequencia		= nr_seq_contrato_w
	and	trunc(months_between(clock_timestamp(), d.dt_nascimento) / 12) between qt_idade_inicial_w and qt_idade_final_w
	and (substr(b.cd_usuario_plano,5,4) between nr_contrato_in_p and nr_contrato_fi_p or (coalesce(nr_contrato_in_p,0) = 0 and coalesce(nr_contrato_fi_p,0) = 0))
	and (substr(b.cd_usuario_plano,9,6) between nr_familia_in_p and nr_familia_fi_p or (coalesce(nr_familia_in_p,0) = 0 and coalesce(nr_familia_fi_p,0) = 0))
	order by	c.nr_sequencia;

C04 CURSOR FOR
	SELECT	c.dt_referencia,
		b.nr_titulo,
		a.nr_sequencia,
		a.dt_mesano_referencia
	from	pls_mensalidade_segurado	a,
		titulo_receber			b,
		pls_mensalidade			c
	where	c.nr_sequencia	= a.nr_seq_mensalidade
	and	c.nr_sequencia	= b.nr_seq_mensalidade
	and	a.nr_seq_segurado = nr_seq_segurado_w
	and	c.dt_referencia <= to_date(dt_fim_p,'dd/mm/yyyy')
	and	b.cd_estabelecimento = cd_estabelecimento_p;

C05 CURSOR FOR
	SELECT	a.ie_tipo_mensalidade,
		a.vl_item,
		a.ie_tipo_item,
		a.nr_seq_tipo_lanc
	from	pls_mensalidade_seg_item	a
	where	a.nr_seq_mensalidade_seg = nr_seq_mens_seg_w
	and (coalesce(a.nr_seq_tipo_lanc::text, '') = '' or a.nr_seq_tipo_lanc not(9,40));

C06 CURSOR FOR
	SELECT	coalesce(a.ie_operacao_motivo,'S')
	from	pls_tipo_lanc_adic	a
	where	a.nr_sequencia = nr_seq_tipo_lanc_w;


BEGIN
CALL exec_sql_dinamico(nm_usuario_p,'truncate table w_relat_faixa_etaria');

open C01;
loop
fetch C01 into
	nr_seq_contrato_w,
	nr_contrato_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	open C02;
	loop
	fetch C02 into
		qt_idade_inicial_w,
		qt_idade_final_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		nr_seq_segur_antec_w	:= 0;
		nr_seq_segur_mens_w	:= 0;

		open C03;
		loop
		fetch C03 into
			nr_seq_segurado_w,
			dt_adesao_w,
			dt_rescisao_w,
			nr_seq_plano_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin

			qt_fat_anterior_w	:= 0;
			qt_mov_incl_w		:= 0;
			qt_mov_excl_w		:= 0;
			qt_atual_w		:= 0;

			nr_titulo_w	:= 0;

			open C04;
			loop
			fetch C04 into
				dt_referencia_w,
				nr_titulo_w,
				nr_seq_mens_seg_w,
				dt_mesano_refer_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin

				vl_tot_desc_w	:= 0;
				vl_copartic_w	:= 0;
				vl_total_w	:= 0;
				qt_mens_retro_w	:= 0;
				vl_mens_retro_w	:= 0;
				vl_even_acres_w	:= 0;

				if (dt_referencia_w <= add_months(to_date(dt_inicio_p, 'dd/mm/yyyy'), -1)) and (dt_adesao_w <= add_months(to_date(dt_inicio_p, 'dd/mm/yyyy'), -1)) and (nr_seq_segur_antec_w <> nr_seq_segurado_w) then

					qt_fat_anterior_w := qt_fat_anterior_w + 1;
					nr_seq_segur_antec_w	:= nr_seq_segurado_w;

				elsif (dt_referencia_w between to_date(dt_inicio_p,'dd/mm/yyyy') and to_date(dt_fim_p,'dd/mm/yyyy')) then

					if (nr_seq_segur_mens_w <> nr_seq_segurado_w) then
						if (dt_adesao_w between to_date(dt_inicio_p,'dd/mm/yyyy') and to_date(dt_fim_p,'dd/mm/yyyy')) then
							qt_mov_incl_w := qt_mov_incl_w + 1;
						end if;

						if (dt_rescisao_w between to_date(dt_inicio_p,'dd/mm/yyyy') and to_date(dt_fim_p,'dd/mm/yyyy')) then
							qt_mov_excl_w := qt_mov_excl_w + 1;
						end if;

						if (coalesce(dt_rescisao_w::text, '') = '') or (dt_rescisao_w > to_date(dt_fim_p,'dd/mm/yyyy')) then
							qt_atual_w := qt_atual_w + 1;
						end if;

						nr_seq_segur_mens_w	:= nr_seq_segurado_w;
					end if;

					open C05;
					loop
					fetch C05 into
						ie_tipo_mensalidade_w,
						vl_item_w,
						ie_tipo_item_w,
						nr_seq_tipo_lanc_w;
					EXIT WHEN NOT FOUND; /* apply on C05 */
						begin

						if (ie_tipo_mensalidade_w = 'N') then
							vl_total_w := vl_total_w + vl_item_w;
						end if;

						if (ie_tipo_item_w = '3') then
							vl_copartic_w := vl_copartic_w + vl_item_w;
						elsif (ie_tipo_item_w = '1') then
							if (dt_referencia_w <> dt_mesano_refer_w) then
								qt_mens_retro_w := qt_mens_retro_w + 1;
								vl_mens_retro_w	:= vl_mens_retro_w + vl_item_w;
							end if;
						end if;

						if (nr_seq_tipo_lanc_w IS NOT NULL AND nr_seq_tipo_lanc_w::text <> '') then
							open C06;
							loop
							fetch C06 into
								ie_operacao_motivo_w;
							EXIT WHEN NOT FOUND; /* apply on C06 */
								begin
								if (ie_operacao_motivo_w = 'D') then
									vl_tot_desc_w 	:= vl_tot_desc_w + vl_item_w;
								elsif (ie_operacao_motivo_w = 'S') then
									vl_even_acres_w	:= vl_even_acres_w + vl_item_w;
								end if;
								end;
							end loop;
							close C06;
						end if;

						end;
					end loop;
					close C05;

				end if;

				/* Fat. Anterior */

				if (qt_fat_anterior_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, nr_seq_plano, nr_seq_contrato, nr_titulo, ie_tipo_informacao,
							qt_idade_inicial, qt_idade_final)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							qt_fat_anterior_w, nr_seq_plano_w, nr_seq_contrato_w, nr_titulo_w, 'FA',
							qt_idade_inicial_w, qt_idade_final_w);
				end if;

				/* Mov. Incl. */

				if (qt_mov_incl_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, nr_seq_plano, nr_seq_contrato, nr_titulo, ie_tipo_informacao,
							qt_idade_inicial, qt_idade_final)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							qt_mov_incl_w, nr_seq_plano_w, nr_seq_contrato_w, nr_titulo_w, 'MI',
							qt_idade_inicial_w, qt_idade_final_w);
				end if;

				/* Mov. Excl. */

				if (qt_mov_excl_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, nr_seq_plano, nr_seq_contrato, nr_titulo, ie_tipo_informacao,
							qt_idade_inicial, qt_idade_final)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							qt_mov_excl_w, nr_seq_plano_w, nr_seq_contrato_w, nr_titulo_w, 'ME',
							qt_idade_inicial_w, qt_idade_final_w);
				end if;

				/* Atual */

				if (qt_atual_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, nr_seq_plano, nr_seq_contrato, nr_titulo, ie_tipo_informacao,
							qt_idade_inicial, qt_idade_final)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							qt_atual_w, nr_seq_plano_w, nr_seq_contrato_w, nr_titulo_w, 'AT',
							qt_idade_inicial_w, qt_idade_final_w);
				end if;

				/* Tot. Desc. */

				if (vl_tot_desc_w <> 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							vl_faixa_etaria, nr_seq_plano, nr_seq_contrato, nr_titulo, ie_tipo_informacao,
							qt_idade_inicial, qt_idade_final)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							vl_tot_desc_w, nr_seq_plano_w, nr_seq_contrato_w, nr_titulo_w, 'TD',
							qt_idade_inicial_w, qt_idade_final_w);
				end if;

				/* Copart. */

				if (vl_copartic_w <> 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							vl_faixa_etaria, nr_seq_plano, nr_seq_contrato, nr_titulo, ie_tipo_informacao,
							qt_idade_inicial, qt_idade_final)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							vl_copartic_w, nr_seq_plano_w, nr_seq_contrato_w, nr_titulo_w, 'CO',
							qt_idade_inicial_w, qt_idade_final_w);
				end if;

				/* Vl. Total */

				if (vl_total_w <> 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							vl_faixa_etaria, nr_seq_plano, nr_seq_contrato, nr_titulo, ie_tipo_informacao,
							qt_idade_inicial, qt_idade_final)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							vl_total_w, nr_seq_plano_w, nr_seq_contrato_w, nr_titulo_w, 'TO',
							qt_idade_inicial_w, qt_idade_final_w);
				end if;

				/* Qtde Mens Retroativas */

				if (qt_mens_retro_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, nr_seq_plano, nr_seq_contrato, nr_titulo, ie_tipo_informacao,
							qt_idade_inicial, qt_idade_final)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							qt_mens_retro_w, nr_seq_plano_w, nr_seq_contrato_w, nr_titulo_w, 'QM',
							qt_idade_inicial_w, qt_idade_final_w);
				end if;

				/* Vl. Total Mens Retroativas*/

				if (vl_mens_retro_w <> 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							vl_faixa_etaria, nr_seq_plano, nr_seq_contrato, nr_titulo, ie_tipo_informacao,
							qt_idade_inicial, qt_idade_final)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							vl_mens_retro_w, nr_seq_plano_w, nr_seq_contrato_w, nr_titulo_w, 'VM',
							qt_idade_inicial_w, qt_idade_final_w);
				end if;

				/* Eventos de acréscimo */

				if (vl_even_acres_w <> 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							vl_faixa_etaria, nr_seq_plano, nr_seq_contrato, nr_titulo, ie_tipo_informacao,
							qt_idade_inicial, qt_idade_final)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							vl_even_acres_w, nr_seq_plano_w, nr_seq_contrato_w, nr_titulo_w, 'EA',
							qt_idade_inicial_w, qt_idade_final_w);
				end if;

				end;
			end loop;
			close C04;
			end;
		end loop;
		close C03;
		end;
	end loop;
	close C02;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_relat_usjrp_fx_etar ( dt_inicio_p text, dt_fim_p text, nr_contrato_in_p bigint, nr_contrato_fi_p bigint, nr_familia_in_p bigint, nr_familia_fi_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

