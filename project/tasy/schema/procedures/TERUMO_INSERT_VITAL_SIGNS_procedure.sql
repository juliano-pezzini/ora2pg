-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE terumo_insert_vital_signs ( nr_atendimento_p bigint, ds_xml_p text, nm_usuario_p text, nr_vital_sequence INOUT text ) AS $body$
DECLARE


    xml_w                   xml;
    nr_sequencia_w          atendimento_sinal_vital.nr_sequencia%type;
    qt_pa_sistolica_w       atendimento_sinal_vital.qt_pa_sistolica%type;
    qt_pa_diastolica_w      atendimento_sinal_vital.qt_pa_diastolica%type;
    qt_freq_cardiaca_w      atendimento_sinal_vital.qt_freq_cardiaca%type;
    qt_saturacao_o2_w       atendimento_sinal_vital.qt_saturacao_o2%type;
    qt_spo2r_w              atendimento_sinal_vital.qt_spo2r%type;
    qt_temp_w               atendimento_sinal_vital.qt_temp%type;
    qt_glicemia_capilar_w   atendimento_sinal_vital.qt_glicemia_capilar%type;
    qt_perfusion_index_w    varchar(255);
    ds_value4_w             varchar(255);
    nr_sequence_list_w      varchar(32000);
    ie_glucose_capture_w    varchar(2);
    record_date_w           timestamp;

c01 CURSOR FOR
	SELECT	ds_type,
       measrecordnum ,
       message_code,
       x.*
       from xmltable('/transvi/terumo' passing xml_w columns
		ds_type varchar(100) path 'type',
        message_code varchar(4) path 'code',
        measrecordnum smallint path 'measrecordnum'),
        ( SELECT
		cd_patient,
        ds_meastime,
		to_number(ds_value1, '999999999D99999999','NLS_NUMERIC_CHARACTERS=''.,''') ds_value1,
        to_number(ds_value2, '999999999D99999999','NLS_NUMERIC_CHARACTERS=''.,''') ds_value2,
        to_number(ds_value3, '999999999D99999999','NLS_NUMERIC_CHARACTERS=''.,''') ds_value3,
        to_number(ds_value4, '999999999D99999999','NLS_NUMERIC_CHARACTERS=''.,''') ds_value4,
        to_number(ds_value5, '999999999D99999999','NLS_NUMERIC_CHARACTERS=''.,''') ds_value5
   from  xmltable('/transvi/terumo/measrecord' passing xml_w columns
        cd_patient varchar(200) path 'patientid',
        ds_meastime varchar(200) path 'meastime',
        ds_value1 varchar(200) path 'measvalue/value1',
        ds_value2 varchar(200) path 'measvalue/value2',
        ds_value3 varchar(200) path 'measvalue/value3',
        ds_value4 varchar(200) path 'measvalue/value4',
        ds_value5 varchar(200) path 'measvalue/value5')) x;

BEGIN
    xml_w := xmlparse(DOCUMENT, convert_from(, 'utf-8'));
    for r_c01 in c01 loop begin
        if ( r_c01.message_code = 'MN00' ) then
            select  nextval('atendimento_sinal_vital_seq')
            into STRICT      nr_sequencia_w
;

            ds_value4_w := r_c01.ds_value4;
            
            if ( r_c01.ds_type = 'BP' ) then
                qt_pa_sistolica_w := r_c01.ds_value1;
                qt_pa_diastolica_w := r_c01.ds_value2;
                qt_freq_cardiaca_w := r_c01.ds_value3;

            elsif ( r_c01.ds_type = 'DM' ) then
                if ( r_c01.ds_value3 = 0 ) then
                    qt_glicemia_capilar_w := r_c01.ds_value1;
                end if;
                ie_glucose_capture_w := r_c01.ds_value2;

            elsif ( r_c01.ds_type = 'ET' ) then
                qt_temp_w := r_c01.ds_value1;
                ds_value4_w := r_c01.ds_value2;

            elsif ( r_c01.ds_type = 'SP' ) then
                qt_saturacao_o2_w := r_c01.ds_value1;
                qt_perfusion_index_w := r_c01.ds_value2;
                qt_spo2r_w := r_c01.ds_value3;
            end if;

              if (r_c01.ds_type in ('BP', 'SP', 'ET') and  ds_value4_w = '1')  then
                record_date_w := clock_timestamp();
            else
                record_date_w := to_date(r_c01.ds_meastime, 'YYYYMMDDHH24MISS');
            end if;

            insert into atendimento_sinal_vital(
                nr_sequencia,
                nr_atendimento,
                qt_pa_sistolica,
                qt_pa_diastolica,
                qt_freq_cardiaca,
                nm_usuario,
                nm_usuario_nrec,
                dt_atualizacao,
                dt_atualizacao_nrec,
                dt_sinal_vital,
                ie_relevante_apap,
                qt_saturacao_o2,
                qt_spo2r,
                qt_temp,
                qt_glicemia_capilar,
                ie_integracao,
                cd_pessoa_fisica,
                 qt_perfusion_index
            ) values (
                nr_sequencia_w,
                nr_atendimento_p,
                qt_pa_sistolica_w,
                qt_pa_diastolica_w,
                qt_freq_cardiaca_w,
                nm_usuario_p,
                nm_usuario_p,
                clock_timestamp(),
                clock_timestamp(),
                record_date_w,
                'S',
                qt_saturacao_o2_w,
                qt_spo2r_w,
                qt_temp_w,
                qt_glicemia_capilar_w,
                'S',
                obter_pessoa_fisica_usuario(nm_usuario_p, 	'C'),
                qt_perfusion_index_w
            );
            commit;

        elsif ( r_c01.message_code like 'ME00' ) then
            nr_sequencia_w := '-1000';
        elsif ( r_c01.message_code like 'ME01' ) then
            nr_sequencia_w := '-1001';
        elsif ( r_c01.message_code like 'ME02' ) then
            nr_sequencia_w := '-1002';
        end if;

        if ( coalesce(nr_sequence_list_w::text, '') = '' ) then
            nr_sequence_list_w := trim(both nr_sequencia_w);
        else
            nr_sequence_list_w := nr_sequence_list_w  ||  ','  || trim(both nr_sequencia_w);
        end if;

    end;
    end loop;

    commit;

    nr_vital_sequence := nr_sequence_list_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE terumo_insert_vital_signs ( nr_atendimento_p bigint, ds_xml_p text, nm_usuario_p text, nr_vital_sequence INOUT text ) FROM PUBLIC;

