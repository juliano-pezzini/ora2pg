-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_inconsistencias_ciha (nr_seq_lote_p bigint, ds_diretorio_p text, nm_arquivo_p text default null) AS $body$
DECLARE


-- ds_diretorio_p - Caminho onde será salvo o arquivo   **** CAMINHO VÁLIDO, HABILITADO NO ORACLE ****
/* create table w_inconsistencias_ciha(nr_atendimento	number(10),
			    nm_paciente	varchar2(60),
			    dt_entrada	date,
			    dt_alta		date,
			    ds_procedimento	varchar2(40),
			    cd_motivo_alta	number(10),
			    ds_inconsistencia	varchar(255))
*/
arq_texto_w			utl_file.file_type;
qt_tentativas_w			bigint := 0;

ie_aberto_w			varchar(1);
ie_eof_w			varchar(1);
ds_linha_pront_w		varchar(20);
ds_line_w			varchar(1000);
ds_prontuario_w			varchar(10);
/*Atributos da tabela  */

ds_inconsistencia_w		varchar(100);
nr_atendimento_w		bigint;
cd_motivo_alta_w		bigint;
ds_procedimento_w		varchar(40);
nm_paciente_w			varchar(60);
dt_entrada_w			timestamp;
dt_alta_w			timestamp;
ie_existe_tabela_w		varchar(1);
nm_arquivo_w			varchar(255);

C01 CURSOR FOR

	SELECT  nr_atendimento,
		cd_motivo_alta,
		ds_procedimento,
		nm_paciente,
		dt_entrada,
		dt_alta
	from    lote_cih_item
	where   nr_prontuario = ds_prontuario_w
	and	nr_seq_lote = nr_seq_lote_p;



BEGIN

select	coalesce(max('S'),'N')
into STRICT	ie_existe_tabela_w
from	user_tables
where	table_name = 'W_INCONSISTENCIAS_CIHA';

If (ie_existe_tabela_w = 'N') then
	CALL Exec_Sql_Dinamico('TASY','create table w_inconsistencias_ciha(nr_atendimento	number(10),'||
				'		nm_paciente	varchar2(60), ' ||
				'		dt_entrada	date, '||
				'		dt_alta		date, '||
				'		ds_procedimento	varchar2(40), '||
				'		cd_motivo_alta	number(10), '||
				'		ds_inconsistencia	varchar(255))');
End if;

ie_aberto_w := 'N';
If (coalesce(nm_arquivo_p::text, '') = '') then
	nm_arquivo_w := 'LogErros.txt';
Else
	nm_arquivo_w := nm_arquivo_p;
End if;

while(ie_aberto_w = 'N') and (qt_tentativas_w < 500) loop
	begin
	qt_tentativas_w := qt_tentativas_w + 1;
	arq_texto_w := utl_file.fopen(ds_diretorio_p, nm_arquivo_w, 'R');
	ie_aberto_w := 'S';

	exception
		when 	no_data_found then
			RAISE NOTICE '%', WHEB_MENSAGEM_PCK.get_texto(278945,null);
		when 	Utl_file.Invalid_path then
			RAISE NOTICE '%', WHEB_MENSAGEM_PCK.get_texto(278946,null);
		when 	Utl_file.Invalid_operation then
			RAISE NOTICE '%', WHEB_MENSAGEM_PCK.get_texto(278947,null);
		when 	Utl_file.Invalid_mode then
			RAISE NOTICE '%', WHEB_MENSAGEM_PCK.get_texto(278949,null);
		when 	others then
			ie_aberto_w := 'N';

	end;
end loop;

if (qt_tentativas_w < 500) then

	delete from w_inconsistencias_ciha;
	arq_texto_w := utl_file.fopen(ds_diretorio_p, nm_arquivo_w, 'R');
	ie_eof_w := 'N';
	while(ie_eof_w = 'N') loop
		begin

		utl_file.get_line(arq_texto_w, ds_line_w);

		select 	substr(trim(both ds_line_w),1,12)
		into STRICT	ds_linha_pront_w
		;

		if (substr(ds_linha_pront_w,1,1) = '0') then

			ds_prontuario_w := pls_elimina_zeros_esquerda(ds_linha_pront_w);
			utl_file.get_line(arq_texto_w, ds_line_w);
			ds_inconsistencia_w := trim(both ds_line_w);

			open C01;
			loop
			fetch C01 into
				nr_atendimento_w,
				cd_motivo_alta_w,
				ds_procedimento_w,
				nm_paciente_w,
				dt_entrada_w,
				dt_alta_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin

				insert into w_inconsistencias_ciha(
						nr_atendimento,
						nm_paciente,
						dt_entrada,
						dt_alta,
						ds_procedimento,
						cd_motivo_alta,
						ds_inconsistencia)
				values (
						nr_atendimento_w,
						nm_paciente_w,
						dt_entrada_w,
						dt_alta_w,
						ds_procedimento_w,
						cd_motivo_alta_w,
						ds_inconsistencia_w);

				end;
			end loop;
			close C01;

		end if;
		exception
		when others then
		ie_eof_w := 'S';

		end;

	end loop;

	utl_file.fclose(arq_texto_w);

end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_inconsistencias_ciha (nr_seq_lote_p bigint, ds_diretorio_p text, nm_arquivo_p text default null) FROM PUBLIC;

