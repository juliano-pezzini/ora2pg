-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_comunic_transf_agetasy (nr_seq_agenda_p bigint, nm_usuario_p text, ds_titulo_p text default null) AS $body$
DECLARE


lista_usuario_w	varchar(2000) := '';
nm_usuario_w		varchar(15);
ds_mensagem_w		text;
nr_sequencia_w	bigint;

dt_agenda_w		timestamp;
ds_agenda_w		varchar(100);
nr_minutos_w		bigint;
ds_local_w		varchar(80);
ds_observacao_w	varchar(2000);

expressao1_w	varchar(255) := obter_desc_expressao_idioma(327202, null, wheb_usuario_pck.get_nr_seq_idioma);--Data:
expressao2_w	varchar(255) := obter_desc_expressao_idioma(343783, null, wheb_usuario_pck.get_nr_seq_idioma);--Duração:
expressao3_w	varchar(255) := obter_desc_expressao_idioma(325812, null, wheb_usuario_pck.get_nr_seq_idioma);--Local:
expressao4_w	varchar(255) := obter_desc_expressao_idioma(619557, null, wheb_usuario_pck.get_nr_seq_idioma);--minutos.
expressao5_w	varchar(255) := obter_desc_expressao_idioma(692668, null, wheb_usuario_pck.get_nr_seq_idioma);--Observações:
c01 CURSOR FOR
SELECT	nm_usuario_convidado
from	agenda_tasy_convite
where	nr_seq_agenda = nr_seq_agenda_p;


BEGIN
/* obter dados agenda */

select	dt_agenda,
	ds_agenda,
	nr_minuto_duracao,
	CASE WHEN coalesce(nr_seq_local::text, '') = '' THEN  ds_local  ELSE obter_local_agenda_tasy(nr_seq_local)||'.' END ,
	ds_observacao
into STRICT	dt_agenda_w,
	ds_agenda_w,
	nr_minutos_w,
	ds_local_w,
	ds_observacao_w
from 	agenda_tasy
where	nr_sequencia = nr_seq_agenda_p;

/* obter convidados */

open c01;
loop
fetch c01 into nm_usuario_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	if (length(lista_usuario_w || nm_usuario_w || ', ') < 2000) then
		lista_usuario_w := lista_usuario_w || nm_usuario_w || ', ';
	end if;
	end;
end loop;
close c01;

/* validar lista convidados */

if (length(lista_usuario_w) > 0) then
	begin
	/* obter seqüência */

 	select	nextval('comunic_interna_seq')
 	into STRICT	nr_sequencia_w
 	;

	/* montar mensagem */

	/*
	ds_mensagem_w	:= ds_agenda_w	|| chr(13) || chr(13) ||
			   'Data: ' 		|| to_char(dt_agenda_w,'dd/mm/yyyy hh24:mi:ss') || '.' || chr(13) ||
			   'Duração: ' 	|| to_char(nr_minutos_w) || ' minutos.' || chr(13) ||
			   'Local: ' 		|| ds_local_w || chr(13) ||
			   'Observações: ' 	|| ds_observacao_w;
	*/
	ds_mensagem_w	:= ds_agenda_w	|| wheb_rtf_pck.get_quebra_linha || wheb_rtf_pck.get_quebra_linha ||
			   expressao1_w || ' ' || to_char(dt_agenda_w,'dd/mm/yyyy hh24:mi:ss') || '.' || wheb_rtf_pck.get_quebra_linha ||
			   expressao2_w || ' ' || to_char(nr_minutos_w) || ' ' || expressao4_w || wheb_rtf_pck.get_quebra_linha ||
			   expressao3_w || ' ' || ds_local_w || wheb_rtf_pck.get_quebra_linha ||
			   expressao5_w || ' ' || ds_observacao_w;

	/* inserir registro */

	insert into comunic_interna(
					dt_comunicado,
					ds_titulo,
					ds_comunicado,
  					nm_usuario,
  					dt_atualizacao,
	  				ie_geral,
  					nm_usuario_destino,
  					cd_perfil,
  					nr_sequencia,
  					ie_gerencial,
	  				nr_seq_classif,
  					ds_perfil_adicional,
  					cd_setor_destino,
  					cd_estab_destino,
  					ds_setor_adicional,
	  				dt_liberacao,
					nr_seq_agenda)
				values (
					clock_timestamp(),
	  				coalesce(ds_titulo_p,ds_agenda_w),
  					wheb_rtf_pck.get_texto_rtf(ds_mensagem_w),
  					nm_usuario_p,
  					clock_timestamp(),
  					'N',
	  				lista_usuario_w,
					null,
					nr_sequencia_w,
					'N',
					null,
					null,
					null,
					null,
					null,
					clock_timestamp(),
					nr_seq_agenda_p);
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_comunic_transf_agetasy (nr_seq_agenda_p bigint, nm_usuario_p text, ds_titulo_p text default null) FROM PUBLIC;

