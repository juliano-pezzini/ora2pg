-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copia_tabelas_proc_interno ( nr_seq_proc_interno_p bigint, nr_seq_proc_interno_destino_p bigint, ie_cme_p text, ie_opme_p text, ie_caixa_opme_p text, ie_procedimentos_p text, nm_usuario_p text) AS $body$
DECLARE


			

	
	
c02 CURSOR FOR
	SELECT	*
	from	proc_interno_opme
	where	nr_seq_proc_interno	= nr_seq_proc_interno_p;
	
	
c03 CURSOR FOR
	SELECT	*
	from	proc_interno_cme
	where	nr_seq_proc_interno	= nr_seq_proc_interno_p;
	
	
c04 CURSOR FOR
	SELECT	*
	from	proc_interno_caixa_opme
	where	nr_seq_proc_interno	= nr_seq_proc_interno_p;

C05 CURSOR FOR
	SELECT	*
	from	proc_interno_conv
	where	nr_seq_proc_interno	= nr_seq_proc_interno_p;

c02_w c02%rowtype;	
c03_w c03%rowtype;
c04_w c04%rowtype;
c05_w c05%rowtype;

nr_seq_proc_interno_w		bigint;

BEGIN
if (ie_opme_p		='S') then
	open c02;
	loop
	fetch c02 into	
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		insert into proc_interno_opme(
		nr_sequencia, nr_seq_proc_interno, dt_atualizacao, 
		nm_usuario, cd_material, qt_material, 
		ie_autorizacao, ie_padrao, nr_seq_apres, 
		dt_atualizacao_nrec, nm_usuario_nrec, cd_medico, 
		cd_convenio, cd_cgc, cd_estabelecimento, cd_plano) 
		 values ( 
		 nextval('proc_interno_opme_seq'), nr_seq_proc_interno_destino_p, clock_timestamp() ,
		nm_usuario_p, c02_w.cd_material, c02_w.qt_material, 
		c02_w.ie_autorizacao, c02_w.ie_padrao, c02_w.nr_seq_apres, 
		clock_timestamp(), nm_usuario_p, c02_w.cd_medico, 
		c02_w.cd_convenio, c02_w.cd_cgc, c02_w.cd_estabelecimento, c02_w.cd_plano);
		end;
	end loop;
	close c02;
end if;
if (ie_cme_p	= 'S') then
	open c03;
	loop
	fetch c03 into	
		c03_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
		insert into proc_interno_cme(
		nr_sequencia, nr_seq_proc_interno, dt_atualizacao, 
		nm_usuario, nr_seq_conjunto, qt_conjunto, 
		cd_medico, dt_atualizacao_nrec, nm_usuario_nrec, 
		ie_obrigatorio, ie_soma_proc_adic, nr_seq_classif, 
		nr_seq_grupo ) 
		 values ( 
		nextval('proc_interno_cme_seq'), nr_seq_proc_interno_destino_p ,clock_timestamp(), 
		 nm_usuario_p, c03_w.nr_seq_conjunto, c03_w.qt_conjunto, 
		c03_w.cd_medico, clock_timestamp(), nm_usuario_p, 
		c03_w.ie_obrigatorio, c03_w.ie_soma_proc_adic, c03_w.nr_seq_classif, 
		c03_w.nr_seq_grupo );
		end;
	end loop;
	close c03;
end if;

if (ie_caixa_opme_p	= 'S') then
	open c04;
	loop
	fetch c04 into	
		c04_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin
		insert into proc_interno_caixa_opme(
		nr_sequencia, nr_seq_proc_interno, dt_atualizacao, 
		nm_usuario, nr_seq_tipo_caixa_opme, qt_material, 
		ie_autorizacao, ie_padrao, nr_seq_apres, 
		cd_medico, dt_atualizacao_nrec, nm_usuario_nrec ) 
		 values ( 
		nextval('proc_interno_caixa_opme_seq'), nr_seq_proc_interno_destino_p, clock_timestamp(), 
		nm_usuario_p, c04_w.nr_seq_tipo_caixa_opme, c04_w.qt_material, 
		c04_w.ie_autorizacao, c04_w.ie_padrao, c04_w.nr_seq_apres, 
		c04_w.cd_medico, clock_timestamp(), nm_usuario_p);
		end;
	end loop;
	close c04;
end if;

if (ie_procedimentos_p	= 'S') then
	open C05;
	loop
	fetch C05 into	
		c05_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin
		insert into proc_interno_conv(
		nr_sequencia,nr_seq_proc_interno,dt_atualizacao,nm_usuario,cd_convenio,cd_procedimento,ie_origem_proced,
		cd_edicao_amb,	ie_tipo_atendimento,ie_situacao,dt_atualizacao_nrec,nm_usuario_nrec,qt_procedimento,
		ie_origem_proc_filtro,cd_setor_atendimento,cd_estabelecimento, ie_tipo_setor, dt_inicio_vigencia, dt_final_vigencia) 
		 values ( 
		nextval('proc_interno_conv_seq'), nr_seq_proc_interno_destino_p, clock_timestamp(), 
		nm_usuario_p, c05_w.cd_convenio, c05_w.cd_procedimento, c05_w.ie_origem_proced, c05_w.cd_edicao_amb,
		c05_w.ie_tipo_atendimento, c05_w.ie_situacao, clock_timestamp(), nm_usuario_p, c05_w.qt_procedimento, c05_w.ie_origem_proc_filtro,
		c05_w.cd_setor_atendimento,c05_w.cd_estabelecimento, c05_w.ie_tipo_setor, c05_w.dt_inicio_vigencia, c05_w.dt_final_vigencia);
		end;
	end loop;
	close C05;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copia_tabelas_proc_interno ( nr_seq_proc_interno_p bigint, nr_seq_proc_interno_destino_p bigint, ie_cme_p text, ie_opme_p text, ie_caixa_opme_p text, ie_procedimentos_p text, nm_usuario_p text) FROM PUBLIC;

