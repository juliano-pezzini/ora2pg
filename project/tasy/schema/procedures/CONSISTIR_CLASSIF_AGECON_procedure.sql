-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_classif_agecon (cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, dt_referencia_p timestamp, cd_agenda_p bigint, cd_convenio_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, ie_classif_agenda_p text, nr_sequencia_p bigint, ie_consistencia_p INOUT text, ie_agenda_p INOUT text, dt_inicial_p timestamp DEFAULT NULL, dt_final_p timestamp DEFAULT NULL, cd_medico_exec_p text DEFAULT NULL) AS $body$
DECLARE


cd_area_proced_w	integer;
cd_espec_proced_w	integer;
cd_grupo_proced_w	bigint;
qt_exclusivo_w		bigint;
nr_seq_regra_w		bigint;
ie_consistencia_w	varchar(255)	:= '';
ie_agenda_w		varchar(1)	:= 'S';
cd_municipio_ibge_w	varchar(10);
qt_regra_w		bigint;
qt_agenda_w		bigint;
dt_referencia_w		timestamp;
nr_seq_forma_org_w	bigint;
nr_seq_grupo_w		bigint;
nr_seq_subgrupo_w	bigint;
cd_medico_w		varchar(10);
ie_dia_semana_w		smallint;
ie_periodo_w		varchar(1)	:= 'D';
ds_mensagem_w		varchar(255);
ie_todas_classif_w	varchar(1);
ie_todos_convenio_w	varchar(1);
hr_inicial_w		timestamp;
hr_final_w		timestamp;
ie_mesmo_pac_w    	varchar(1);
qt_idade_pf_w		smallint;
qt_idade_min_w		smallint;
qt_idade_max_w		smallint;
ie_classif_agenda_w	varchar(5);
qt_permissao_w      agenda_consulta_regra.qt_permissao%type;
ie_error_type_w     agenda_consulta_regra.ie_error_type%type;

ie_estab_agenda_w varchar(1);
cd_estabelecimento_w bigint;

C01 CURSOR FOR
	SELECT	coalesce(nr_sequencia,0)
	FROM	agenda_consulta_regra
	WHERE	cd_estabelecimento 	= cd_estabelecimento_w
	AND	cd_agenda 		= cd_agenda_p
	AND	((ie_classif_agenda = coalesce(ie_classif_agenda_p,ie_classif_agenda_w))	OR (coalesce(ie_classif_agenda::text, '') = ''))
	AND	((ie_dia_semana		= ie_dia_semana_w) OR (coalesce(ie_dia_semana::text, '') = '') OR ((ie_dia_semana = 9) AND (ie_dia_Semana_w NOT IN (7,1))))
	AND	((cd_convenio = cd_convenio_p) OR (coalesce(cd_convenio::text, '') = ''))
	AND (dt_referencia_p BETWEEN TO_DATE(TO_CHAR(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_referencia_p),'dd/mm/yyyy') ||' '|| TO_CHAR(coalesce(hr_inicial,ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_referencia_p)),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') 
				AND 	TO_DATE(TO_CHAR(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_referencia_p),'dd/mm/yyyy') ||' '|| TO_CHAR(coalesce(hr_final,ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(dt_referencia_p)),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'))
	AND	((coalesce(obter_profissional_agenda(cd_Agenda),0)	= cd_medico_w) or ((obter_tipo_agenda(cd_agenda_p) = 5) and cd_medico_w = '0'))
	AND	ie_periodo	= 'M'
	AND (cd_perfil = Obter_perfil_Ativo OR coalesce(cd_perfil::text, '') = '')
	and	qt_idade_pf_w >= coalesce(qt_idade_min, qt_idade_pf_w) 
	and 	qt_idade_pf_w <= coalesce(qt_idade_max, qt_idade_pf_w)
	ORDER BY coalesce(cd_convenio,0),
			 ie_classif_agenda desc,
			 cd_estabelecimento desc ,
			 coalesce(cd_perfil,0),
			 hr_inicial desc, 
			 hr_final desc;
	
C02 CURSOR FOR
	SELECT	coalesce(nr_sequencia,0),
    qt_permissao
	FROM	agenda_consulta_regra
	WHERE	cd_estabelecimento 	= cd_estabelecimento_w
	AND	cd_agenda 		= cd_agenda_p
	AND	((ie_classif_agenda = coalesce(ie_classif_agenda_p,ie_classif_agenda_w))	OR (coalesce(ie_classif_agenda::text, '') = ''))
	AND	((ie_dia_semana		= ie_dia_semana_w) OR (coalesce(ie_dia_semana::text, '') = '') OR ((ie_dia_semana = 9) AND (ie_dia_Semana_w NOT IN (7,1))))
	AND	((cd_convenio = cd_convenio_p) OR (coalesce(cd_convenio::text, '') = ''))
	AND (dt_referencia_p BETWEEN TO_DATE(TO_CHAR(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_referencia_p),'dd/mm/yyyy') ||' '|| TO_CHAR(coalesce(hr_inicial,ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_referencia_p)),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') 
				AND 	TO_DATE(TO_CHAR(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_referencia_p),'dd/mm/yyyy') ||' '|| TO_CHAR(coalesce(hr_final,ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(dt_referencia_p)),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'))
	AND	((coalesce(obter_profissional_agenda(cd_Agenda),0)	= cd_medico_w) or ((obter_tipo_agenda(cd_agenda_p) = 5) and cd_medico_w = '0'))
	AND	ie_periodo	= 'S'
	AND (cd_perfil = Obter_perfil_Ativo OR coalesce(cd_perfil::text, '') = '')
	and	qt_idade_pf_w >= coalesce(qt_idade_min, qt_idade_pf_w)	
	and 	qt_idade_pf_w <= coalesce(qt_idade_max, qt_idade_pf_w)
	ORDER BY coalesce(cd_convenio,0),
			 ie_classif_agenda desc,
			 cd_estabelecimento desc ,
			 coalesce(cd_perfil,0),
			 hr_inicial desc, 
			 hr_final desc;

C03 CURSOR FOR
	SELECT	coalesce(nr_sequencia,0),
    qt_permissao
	FROM	agenda_consulta_regra
	WHERE	cd_estabelecimento 	= cd_estabelecimento_w
	AND	cd_agenda 		= cd_agenda_p
	AND	((ie_classif_agenda = coalesce(ie_classif_agenda_p,ie_classif_agenda_w))	OR (coalesce(ie_classif_agenda::text, '') = ''))
	AND	((ie_dia_semana		= ie_dia_semana_w) OR (coalesce(ie_dia_semana::text, '') = '') OR ((ie_dia_semana = 9) AND (ie_dia_Semana_w NOT IN (7,1))))
	AND	((cd_convenio = cd_convenio_p) OR (coalesce(cd_convenio::text, '') = ''))
	AND (dt_referencia_p BETWEEN TO_DATE(TO_CHAR(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_referencia_p),'dd/mm/yyyy') ||' '|| TO_CHAR(coalesce(hr_inicial,ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_referencia_p)),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') 
				AND 	TO_DATE(TO_CHAR(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_referencia_p),'dd/mm/yyyy') ||' '|| TO_CHAR(coalesce(hr_final,ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(dt_referencia_p)),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'))
	AND	((coalesce(obter_profissional_agenda(cd_Agenda),0)	= cd_medico_w) or ((obter_tipo_agenda(cd_agenda_p) = 5) and cd_medico_w = '0'))
	AND	ie_periodo	= 'D'
	AND (cd_perfil = Obter_perfil_Ativo OR coalesce(cd_perfil::text, '') = '')
	and	qt_idade_pf_w >= coalesce(qt_idade_min, qt_idade_pf_w) 
	and 	qt_idade_pf_w <= coalesce(qt_idade_max, qt_idade_pf_w)
	ORDER BY coalesce(cd_convenio,0),
			 ie_classif_agenda desc,
			 cd_estabelecimento desc ,
			 coalesce(cd_perfil,0),
			 hr_inicial desc, 
			 hr_final desc;
	


BEGIN
--Atualizar o estabelecimento do usuario conforme o estabelecimento da agenda ao navegar
ie_estab_agenda_w := obter_valor_param_usuario(821, 19, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario , coalesce(obter_estabelecimento_ativo,cd_estabelecimento_p));

if (ie_estab_agenda_w = 'S') then
	cd_estabelecimento_w := obter_estab_agenda(cd_agenda_p);
else
    cd_estabelecimento_w := cd_estabelecimento_p;
end if;

select	max(ie_classif_agenda)
into STRICT	ie_classif_agenda_w
from	agenda_consulta
where	nr_sequencia  = nr_sequencia_p;

dt_referencia_w	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_referencia_p);

SELECT	coalesce(obter_profissional_agenda(cd_agenda_p),'0')
INTO STRICT	cd_medico_w
;

SELECT pkg_date_utils.get_WeekDay(dt_referencia_p)
INTO STRICT	ie_dia_semana_w
;

select	(coalesce(obter_dados_pf(cd_pessoa_fisica_p, 'I'),0))::numeric
into STRICT	qt_idade_pf_w
;


IF (cd_estabelecimento_w IS NOT NULL AND cd_estabelecimento_w::text <> '') THEN
	OPEN C01;
	LOOP
	FETCH C01 INTO	
		nr_seq_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		BEGIN
		nr_seq_regra_w := nr_seq_regra_w;
		END;
	END LOOP;
	CLOSE C01;
	
	IF (nr_seq_regra_w > 0) THEN
	
		SELECT	coalesce(MAX(qt_permissao),0),
			coalesce(MAX(ie_periodo),'D'),
			MAX(ds_mensagem),
			MAX(coalesce(ie_todas_classif,'N')),
			MAX(hr_inicial),
			MAX(hr_final),
			MAX(coalesce(ie_todos_convenios,'N')),
			MAX(coalesce(ie_mesmo_pac,'N')),
			MAX(qt_idade_min),
			MAX(qt_idade_max)
		INTO STRICT	qt_regra_w,
			ie_periodo_w,
			ds_mensagem_w,
			ie_todas_classif_w,
			hr_inicial_w,
			hr_final_w,
			ie_todos_convenio_w,
			ie_mesmo_pac_w,
			qt_idade_min_w,
			qt_idade_max_w
		FROM	agenda_consulta_regra
		WHERE	nr_sequencia = nr_seq_regra_w;	
		
		
		SELECT	COUNT(*)
		INTO STRICT	qt_agenda_w
		FROM	agenda_consulta
		WHERE	cd_agenda				= cd_agenda_p
		AND	TRUNC(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda),'month')		= TRUNC(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_referencia_w),'month')
		AND	ie_status_agenda NOT IN ('C','L','F')
		AND	((coalesce(obter_profissional_agenda(cd_Agenda),0)	= cd_medico_w) or ((obter_tipo_agenda(cd_agenda_p) = 5) and cd_medico_w = '0'))
		AND 	nr_sequencia	<> nr_sequencia_p
		AND	((ie_classif_agenda			= coalesce(ie_classif_agenda_p,ie_classif_agenda_w)) OR (ie_todas_classif_w = 'S'))
		AND	((cd_convenio				= cd_convenio_p) OR (coalesce(cd_convenio_p::text, '') = '') OR (ie_todos_convenio_w = 'S'))
		AND (dt_agenda BETWEEN TO_DATE(TO_CHAR(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda),'dd/mm/yyyy') ||' '|| TO_CHAR(coalesce(hr_inicial_w,ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda)),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')
			AND 	TO_DATE(TO_CHAR(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda),'dd/mm/yyyy') ||' '|| TO_CHAR(coalesce(hr_final_w,ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(dt_agenda)),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'))
		AND	(nm_paciente IS NOT NULL AND nm_paciente::text <> '')
		AND	((ie_mesmo_pac_w = 'S' AND cd_pessoa_fisica = cd_pessoa_fisica_p) or (ie_mesmo_pac_w = 'N'))
		and	((coalesce(cd_pessoa_fisica::text, '') = '' and coalesce(qt_idade_pac::text, '') = '') 
		or (coalesce((obter_dados_pf(cd_pessoa_fisica, 'I'))::numeric , qt_idade_pac) >= coalesce(qt_idade_min_w, (obter_dados_pf(cd_pessoa_fisica, 'I'))::numeric , qt_idade_pac)
		and (coalesce((obter_dados_pf(cd_pessoa_fisica, 'I'))::numeric , qt_idade_pac) <= coalesce(qt_idade_max_w, (obter_dados_pf(cd_pessoa_fisica, 'I'))::numeric , qt_idade_pac))));
	
		IF (qt_agenda_w >= qt_regra_w) THEN
			ie_agenda_w	:= 'N';
		END IF;
		
		IF (ie_agenda_w IN ('N', 'Q')) THEN
			IF (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') THEN
				ie_consistencia_w := ds_mensagem_w;
			ELSE
				ie_consistencia_w := WHEB_MENSAGEM_PCK.get_texto(277563,NULL);
			END IF;
		END IF;
	END IF;
	
	IF (ie_agenda_w <> 'N') THEN
		OPEN C02;
		LOOP
		FETCH C02 INTO	
			nr_seq_regra_w,
            qt_permissao_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			BEGIN
			nr_seq_regra_w := nr_seq_regra_w;
			END;
		END LOOP;
		CLOSE C02;
		
		IF (nr_seq_regra_w > 0) THEN
		
			SELECT	coalesce(MAX(qt_permissao),0),
				coalesce(MAX(ie_periodo),'D'),
				MAX(ds_mensagem),
				MAX(coalesce(ie_todas_classif,'N')),
				MAX(hr_inicial),
				MAX(hr_final),
				MAX(coalesce(ie_todos_convenios,'N')),
				MAX(coalesce(ie_mesmo_pac,'N')),
				MAX(qt_idade_min),
				MAX(qt_idade_max),
                MAX(ie_error_type)
			INTO STRICT	qt_regra_w,
				ie_periodo_w,
				ds_mensagem_w,
				ie_todas_classif_w,
				hr_inicial_w,
				hr_final_w,
				ie_todos_convenio_w,
				ie_mesmo_pac_w,
				qt_idade_min_w,
				qt_idade_max_w,
                ie_error_type_w
			FROM	agenda_consulta_regra
			WHERE	nr_sequencia = nr_seq_regra_w;	


			SELECT	COUNT(*)
			INTO STRICT	qt_agenda_w
			FROM	agenda_consulta
			WHERE	cd_agenda				= cd_agenda_p
			AND	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda) BETWEEN obter_inicio_fim_semana(dt_referencia_w,'I') AND obter_inicio_fim_semana(dt_referencia_w,'F')
			AND	ie_status_agenda NOT IN ('C','L','F')
			AND	((coalesce(obter_profissional_agenda(cd_Agenda),0)	= cd_medico_w) or ((obter_tipo_agenda(cd_agenda_p) = 5) and cd_medico_w = '0'))
			AND 	nr_sequencia	<> nr_sequencia_p
			AND	((ie_classif_agenda			= coalesce(ie_classif_agenda_p,ie_classif_agenda_w)) OR (ie_todas_classif_w = 'S'))
			AND	((cd_convenio				= cd_convenio_p) OR (coalesce(cd_convenio_p::text, '') = '') OR (ie_todos_convenio_w = 'S'))
			AND (dt_agenda BETWEEN TO_DATE(TO_CHAR(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda),'dd/mm/yyyy') ||' '|| TO_CHAR(coalesce(hr_inicial_w,ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda)),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')
				AND 	TO_DATE(TO_CHAR(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda),'dd/mm/yyyy') ||' '|| TO_CHAR(coalesce(hr_final_w,ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(dt_agenda)),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'))
			AND	(nm_paciente IS NOT NULL AND nm_paciente::text <> '')
			AND	((ie_mesmo_pac_w = 'S' AND cd_pessoa_fisica = cd_pessoa_fisica_p) or (ie_mesmo_pac_w = 'N'))
			and	((coalesce(cd_pessoa_fisica::text, '') = '' and coalesce(qt_idade_pac::text, '') = '') 
			or (coalesce((obter_dados_pf(cd_pessoa_fisica, 'I'))::numeric , qt_idade_pac) >= coalesce(qt_idade_min_w, (obter_dados_pf(cd_pessoa_fisica, 'I'))::numeric , qt_idade_pac)
			and (coalesce((obter_dados_pf(cd_pessoa_fisica, 'I'))::numeric , qt_idade_pac) <= coalesce(qt_idade_max_w, (obter_dados_pf(cd_pessoa_fisica, 'I'))::numeric , qt_idade_pac))));
			
			IF (qt_agenda_w >= qt_regra_w) THEN
				ie_agenda_w	:= 'N';
			END IF;

            IF (ie_agenda_w IN ('N', 'Q')) THEN
				IF (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') THEN
                    ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@allowedAmounts',qt_permissao_w),1,255);
                    ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@allowedScheduleUnits',qt_agenda_w),1,255);
                    IF (ie_periodo_w = 'S') THEN
                        ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@durationType', '(' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_inicial_p + 1, 'shortDate', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone) || ' - '  || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_final_p + 1, 'shortDate', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)|| ')'),1,255);
                    ELSE
                        ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@durationType', PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_inicial_p + 1, 'shortDate', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)),1,255);
                    END IF;
                    ie_consistencia_w := substr(replace_macro(ds_mensagem_w,'@physician',obter_nome_pf(cd_medico_exec_p)),1,255);
                    IF (ie_error_type_w = 'E') THEN
                        CALL wheb_mensagem_pck.abort_msg_without_log(ie_consistencia_w);
                    ELSE
                        ie_consistencia_w := ie_consistencia_w;
                    END IF;
				ELSE
					ie_consistencia_w := WHEB_MENSAGEM_PCK.get_texto(277563,NULL);
				END IF;
			END IF;
			
		END IF;
	END IF;

	IF (ie_agenda_w <> 'N') THEN
	
		
		OPEN C03;
		LOOP
		FETCH C03 INTO	
			nr_seq_regra_w,
            qt_permissao_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			BEGIN
			nr_seq_regra_w := nr_seq_regra_w;
			END;
		END LOOP;
		CLOSE C03;		
				
		IF (nr_seq_regra_w > 0) THEN
		
		
			SELECT	coalesce(MAX(qt_permissao),0),
				coalesce(MAX(ie_periodo),'D'),
				MAX(ds_mensagem),
				MAX(coalesce(ie_todas_classif,'N')),
				MAX(hr_inicial),
				MAX(hr_final),
				MAX(coalesce(ie_todos_convenios,'N')),
				MAX(coalesce(ie_mesmo_pac,'N')),
				MAX(qt_idade_min),
				MAX(qt_idade_max),
                MAX(ie_error_type)
			INTO STRICT	qt_regra_w,
				ie_periodo_w,
				ds_mensagem_w,
				ie_todas_classif_w,
				hr_inicial_w,
				hr_final_w,
				ie_todos_convenio_w,
				ie_mesmo_pac_w,
				qt_idade_min_w,
				qt_idade_max_w,
                ie_error_type_w
			FROM	agenda_consulta_regra
			WHERE	nr_sequencia = nr_seq_regra_w;	
			
			SELECT	COUNT(*)
			INTO STRICT	qt_agenda_w
			FROM	agenda_consulta
			WHERE	cd_agenda				= cd_agenda_p
			AND	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda)			= dt_referencia_w
			AND	ie_status_agenda NOT IN ('C','L','F')
			AND	((coalesce(obter_profissional_agenda(cd_Agenda),0)	= cd_medico_w) or ((obter_tipo_agenda(cd_agenda_p) = 5) and cd_medico_w = '0'))
			AND 	nr_sequencia	<> nr_sequencia_p
			AND	((ie_classif_agenda			= coalesce(ie_classif_agenda_p,ie_classif_agenda_w)) OR (ie_todas_classif_w = 'S'))
			AND	((cd_convenio				= cd_convenio_p) OR (coalesce(cd_convenio_p::text, '') = '') OR (ie_todos_convenio_w = 'S'))
			AND (dt_agenda BETWEEN TO_DATE(TO_CHAR(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda),'dd/mm/yyyy') ||' '|| TO_CHAR(coalesce(hr_inicial_w,ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda)),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')
			AND 	TO_DATE(TO_CHAR(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda),'dd/mm/yyyy') ||' '|| TO_CHAR(coalesce(hr_final_w,ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(dt_agenda)),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'))
			AND	(nm_paciente IS NOT NULL AND nm_paciente::text <> '')
			AND	((ie_mesmo_pac_w = 'S' AND cd_pessoa_fisica = cd_pessoa_fisica_p) or (ie_mesmo_pac_w = 'N'))
			and	((coalesce(cd_pessoa_fisica::text, '') = '' and coalesce(qt_idade_pac::text, '') = '') 
			or (coalesce((obter_dados_pf(cd_pessoa_fisica, 'I'))::numeric , qt_idade_pac) >= coalesce(qt_idade_min_w, (obter_dados_pf(cd_pessoa_fisica, 'I'))::numeric , qt_idade_pac)
			and (coalesce((obter_dados_pf(cd_pessoa_fisica, 'I'))::numeric , qt_idade_pac) <= coalesce(qt_idade_max_w, (obter_dados_pf(cd_pessoa_fisica, 'I'))::numeric , qt_idade_pac))));
			
			IF (qt_agenda_w >= qt_regra_w) THEN
				ie_agenda_w	:= 'N';
			END IF;
			
			IF (ie_agenda_w IN ('N', 'Q')) THEN
				IF (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') THEN

                    ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@allowedAmounts',qt_permissao_w),1,255);
                    ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@allowedScheduleUnits',qt_agenda_w),1,255);
                    IF (ie_periodo_w = 'S') THEN
                        ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@durationType', '(' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_inicial_p + 1, 'shortDate', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone) || ' - '  || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_final_p + 1, 'shortDate', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone) || ')'),1,255);
																															
                        ds_mensagem_w := substr(replace_macro(ds_mensagem_w,'@durationType', PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_inicial_p + 1, 'shortDate', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)),1,255);
                    END IF;
                    ie_consistencia_w := substr(replace_macro(ds_mensagem_w,'@physician',obter_nome_pf(cd_medico_exec_p)),1,255);
                    IF (ie_error_type_w = 'E') THEN
                        CALL wheb_mensagem_pck.abort_msg_without_log(ie_consistencia_w);
                    ELSE
                        ie_consistencia_w := ie_consistencia_w;
                    END IF;
				ELSE
					ie_consistencia_w := WHEB_MENSAGEM_PCK.get_texto(277563,NULL);
				END IF;

			END IF;
			
		END IF;
	END IF;																	
END IF;

ie_consistencia_p := ie_consistencia_w;
ie_agenda_p := ie_agenda_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_classif_agecon (cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, dt_referencia_p timestamp, cd_agenda_p bigint, cd_convenio_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, ie_classif_agenda_p text, nr_sequencia_p bigint, ie_consistencia_p INOUT text, ie_agenda_p INOUT text, dt_inicial_p timestamp DEFAULT NULL, dt_final_p timestamp DEFAULT NULL, cd_medico_exec_p text DEFAULT NULL) FROM PUBLIC;

