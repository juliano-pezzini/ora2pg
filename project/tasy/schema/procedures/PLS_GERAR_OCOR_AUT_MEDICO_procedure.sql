-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_ocor_aut_medico ( nr_seq_ocor_filtro_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, nr_seq_exec_item_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, ie_gerar_ocorrencia_p INOUT text, ie_tipo_ocorrencia_p INOUT text) AS $body$
DECLARE



/*
IE_TIPO_OCORRENCIA_W	= C - Gera a ocorrência para o cabeçalho
			= I - Gera ocorrência para os itens
*/
ie_gerar_ocorrencia_w		varchar(2)	:= 'N';
ie_regra_com_itens_w		varchar(1);
nr_seq_requisicao_w		bigint;
cd_medico_solicitante_w		varchar(10);
ie_grupo_medico_w		varchar(2);
cd_especialidade_w		varchar(10);
cd_especialidade_med_w		varchar(10);
nr_seq_prestador_w		bigint;
ie_medico_vinculo_prest_w	varchar(1);
qt_medico_prest_w		bigint;
cd_medico_executor_w		varchar(10);
ie_valida_medico_coop_w		pls_ocor_aut_filtro_medic.ie_valida_medico_coop%type;
ie_tipo_relacao_w		pls_ocor_aut_filtro_medic.ie_valida_medico_coop%type;
ie_medico_cooperado_w		varchar(1);
nr_seq_conselho_w		pessoa_fisica.nr_seq_conselho%type;
nr_crm_solicitante_w		medico.nr_crm%type;
nr_seq_cbo_saude_w		cbo_saude.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	nr_seq_grupo_medico
	from	pls_ocor_aut_filtro_medic
	where	nr_seq_ocor_aut_filtro	= nr_seq_ocor_filtro_p
	and	coalesce(ie_situacao,'A')	= 'A'
	and (coalesce(cd_especialidade::text, '') = '' or cd_especialidade = cd_especialidade_med_w)
	and	((coalesce(ie_valida_medico_coop, 'A') = 'A')
	or 	(ie_medico_cooperado_w IS NOT NULL AND ie_medico_cooperado_w::text <> '' AND ie_valida_medico_coop = ie_medico_cooperado_w))
	and 	((coalesce(ie_medico_vinculo_prest, 'N') = 'N') or (ie_medico_vinculo_prest = 'S' and qt_medico_prest_w > 0))
	and	((coalesce(nr_seq_conselho_solic::text, '') = '') 	 or (nr_seq_conselho_solic = nr_seq_conselho_w))
	and	((coalesce(cd_medico_executor_solic::text, '') = '') 	 or (cd_medico_executor_solic = coalesce(cd_medico_solicitante_w,cd_medico_executor_w)))
	and	((coalesce(nr_crm_solicitante::text, '') = '') 		 or (nr_crm_solicitante = nr_crm_solicitante_w))
	and	((coalesce(nr_seq_cbo_saude::text, '') = '')		 or (nr_seq_cbo_saude = nr_seq_cbo_saude_w));

BEGIN



if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	begin
		select	nr_seq_prestador,
			cd_medico_solicitante,
			cd_especialidade,
			nr_seq_cbo_saude
		into STRICT	nr_seq_prestador_w,
			cd_medico_solicitante_w,
			cd_especialidade_med_w,
			nr_seq_cbo_saude_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_guia_p;
	exception
	when others then
		cd_medico_solicitante_w		:= null;
		nr_seq_prestador_w		:= null;
		cd_especialidade_med_w		:= null;
	end;

	if (cd_medico_solicitante_w IS NOT NULL AND cd_medico_solicitante_w::text <> '') then
		select	CASE WHEN pls_obter_se_cooperado_ativo(cd_medico_solicitante_w, clock_timestamp(), null)='S' THEN  'C'  ELSE 'N' END
		into STRICT	ie_medico_cooperado_w
		;

		if (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') then
			select	count(1)
			into STRICT	qt_medico_prest_w
			from	pls_prestador_medico
			where	nr_seq_prestador	= nr_seq_prestador_w
			and	cd_medico		= cd_medico_solicitante_w;
		end if;
	end if;
elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	begin
		select	nr_seq_prestador,
			cd_medico_solicitante,
			cd_especialidade,
			nr_seq_cbo_saude
		into STRICT	nr_seq_prestador_w,
			cd_medico_solicitante_w,
			cd_especialidade_med_w,
			nr_seq_cbo_saude_w
		from	pls_requisicao
		where	nr_sequencia	= nr_seq_requisicao_p;
	exception
	when others then
		cd_medico_solicitante_w		:= null;
		nr_seq_prestador_w		:= null;
		cd_especialidade_med_w		:= null;
	end;

	if (cd_medico_solicitante_w IS NOT NULL AND cd_medico_solicitante_w::text <> '') then
		select 	CASE WHEN pls_obter_se_cooperado_ativo(cd_medico_solicitante_w, clock_timestamp(), null)='S' THEN  'C'  ELSE 'N' END
		into STRICT	ie_medico_cooperado_w
		;

		if (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') then
			select	count(1)
			into STRICT	qt_medico_prest_w
			from	pls_prestador_medico
			where	nr_seq_prestador	= nr_seq_prestador_w
			and	cd_medico		= cd_medico_solicitante_w;
		end if;
	end if;
elsif (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then
	begin
		select	nr_seq_requisicao,
			nr_seq_prestador
		into STRICT	nr_seq_requisicao_w,
			nr_seq_prestador_w
		from	pls_execucao_requisicao
		where	nr_sequencia	= nr_seq_execucao_p;
	exception
	when others then
		nr_seq_requisicao_w	:= null;
	end;

	if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
		begin
			select	cd_especialidade,
				nr_seq_cbo_saude
			into STRICT	cd_especialidade_med_w,
				nr_seq_cbo_saude_w
			from	pls_requisicao
			where	nr_sequencia	= nr_seq_requisicao_w;
		exception
		when others then
			cd_especialidade_med_w	:= null;
		end;
	end if;

	if (nr_seq_exec_item_p IS NOT NULL AND nr_seq_exec_item_p::text <> '') then
		begin
			select	cd_medico_executor
			into STRICT	cd_medico_executor_w
			from	pls_execucao_req_item
			where	nr_sequencia	= nr_seq_exec_item_p
			and	nr_seq_execucao	= nr_seq_execucao_p;
		exception
		when others then
			cd_medico_executor_w	:= null;
		end;
	end if;

	if (cd_medico_executor_w IS NOT NULL AND cd_medico_executor_w::text <> '') then
		select	CASE WHEN pls_obter_se_cooperado_ativo(cd_medico_executor_w, clock_timestamp(), null)='S' THEN  'C'  ELSE 'N' END
		into STRICT	ie_medico_cooperado_w
		;

		if (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') then
			select	count(1)
			into STRICT	qt_medico_prest_w
			from	pls_prestador_medico
			where	nr_seq_prestador	= nr_seq_prestador_w
			and	cd_medico		= cd_medico_executor_w;
		end if;
	end if;
end if;

begin
	select	nr_seq_conselho
	into STRICT	nr_seq_conselho_w
	from	pessoa_fisica
	where	cd_pessoa_fisica = coalesce(cd_medico_solicitante_w,cd_medico_executor_w);
exception
when others then
	nr_seq_conselho_w := null;
end;

begin
	select	nr_crm
	into STRICT	nr_crm_solicitante_w
	from	medico
	where	cd_pessoa_fisica	= coalesce(cd_medico_solicitante_w,cd_medico_executor_w);
exception
when others then
	nr_crm_solicitante_w := null;
end;

for	r_C01_w in C01 loop
	ie_gerar_ocorrencia_w 	:= 'S';

	if (r_C01_w.nr_seq_grupo_medico > 0) and ((coalesce(cd_medico_executor_w, cd_medico_solicitante_w) IS NOT NULL AND (coalesce(cd_medico_executor_w, cd_medico_solicitante_w))::text <> '')) then
		ie_grupo_medico_w 	:= pls_obter_se_grupo_medico(r_C01_w.nr_seq_grupo_medico, coalesce(cd_medico_executor_w, cd_medico_solicitante_w));

		if (ie_grupo_medico_w = 'N') then
			ie_gerar_ocorrencia_w 	:= 'N';
		end if;
	end if;

	if (ie_gerar_ocorrencia_w 	= 'S') then
		exit;
	end if;
end loop;

if (ie_gerar_ocorrencia_w = 'S') then
	ie_regra_com_itens_w  :=  pls_obter_se_oco_aut_fil_itens(nr_seq_ocor_filtro_p);

	if (ie_regra_com_itens_w = 'S') then
		ie_tipo_ocorrencia_p := 'I';
	else
		ie_tipo_ocorrencia_p := 'C';
	end if;
end if;

ie_gerar_ocorrencia_p	:= ie_gerar_ocorrencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_ocor_aut_medico ( nr_seq_ocor_filtro_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, nr_seq_exec_item_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, ie_gerar_ocorrencia_p INOUT text, ie_tipo_ocorrencia_p INOUT text) FROM PUBLIC;

