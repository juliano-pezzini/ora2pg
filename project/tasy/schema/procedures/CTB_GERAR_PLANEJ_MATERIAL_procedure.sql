-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_planej_material ( nr_seq_planej_p ctb_orc_cenario.nr_sequencia%type, cd_estabelecimento_p bigint, cd_grupo_material_p bigint, cd_subgrupo_material_p bigint, cd_classe_material_p bigint, cd_material_p bigint, nm_usuario_p text, ie_sobrepor_p text) AS $body$
DECLARE


cd_conta_contabil_w	ctb_planej_orc_material.cd_conta_contabil%type;
cd_centro_custo_w	parametros_conta_contabil.cd_centro_custo%type;
cd_material_w		ctb_planej_orc_material.cd_material%type := 0;
ctb_orc_cenario_w	ctb_orc_cenario%rowtype;
dt_inicial_ant_w	timestamp;
dt_inicial_w		timestamp;
dt_final_ant_w		timestamp;
dt_final_w		timestamp;
nr_sequencia_w		ctb_planej_orc_material.nr_sequencia%type;
qt_planej_w		ctb_planej_orc_material.qt_planej%type;
vl_planej_w		ctb_planej_orc_material.vl_planej%type;
qt_cursor_w		bigint := 0;
nr_vetor_w		bigint := 0;

c_material CURSOR FOR
	SELECT	a.cd_centro_custo,
		a.cd_estabelecimento,
		a.cd_material,
		Sum(CASE WHEN a.dt_mesano_referencia=dt_inicial_ant_w THEN  a.qt_estoque  ELSE 0 END ) qt_mes_01,
		Sum(CASE WHEN a.dt_mesano_referencia=dt_inicial_ant_w THEN  a.vl_estoque  ELSE 0 END ) vl_mes_01,
		Sum(CASE WHEN a.dt_mesano_referencia=add_months(dt_inicial_ant_w, 01) THEN  a.qt_estoque  ELSE 0 END ) qt_mes_02,
		Sum(CASE WHEN a.dt_mesano_referencia=add_months(dt_inicial_ant_w, 01) THEN  a.vl_estoque  ELSE 0 END ) vl_mes_02,
		Sum(CASE WHEN a.dt_mesano_referencia=add_months(dt_inicial_ant_w, 02) THEN  a.qt_estoque  ELSE 0 END ) qt_mes_03,
		Sum(CASE WHEN a.dt_mesano_referencia=add_months(dt_inicial_ant_w, 02) THEN  a.vl_estoque  ELSE 0 END ) vl_mes_03,
		Sum(CASE WHEN a.dt_mesano_referencia=add_months(dt_inicial_ant_w, 03) THEN  a.qt_estoque  ELSE 0 END ) qt_mes_04,
		Sum(CASE WHEN a.dt_mesano_referencia=add_months(dt_inicial_ant_w, 03) THEN  a.vl_estoque  ELSE 0 END ) vl_mes_04,
		Sum(CASE WHEN a.dt_mesano_referencia=add_months(dt_inicial_ant_w, 04) THEN  a.qt_estoque  ELSE 0 END ) qt_mes_05,
		Sum(CASE WHEN a.dt_mesano_referencia=add_months(dt_inicial_ant_w, 04) THEN  a.vl_estoque  ELSE 0 END ) vl_mes_05,
		Sum(CASE WHEN a.dt_mesano_referencia=add_months(dt_inicial_ant_w, 05) THEN  a.qt_estoque  ELSE 0 END ) qt_mes_06,
		Sum(CASE WHEN a.dt_mesano_referencia=add_months(dt_inicial_ant_w, 05) THEN  a.vl_estoque  ELSE 0 END ) vl_mes_06,
		Sum(CASE WHEN a.dt_mesano_referencia=add_months(dt_inicial_ant_w, 06) THEN  a.qt_estoque  ELSE 0 END ) qt_mes_07,
		Sum(CASE WHEN a.dt_mesano_referencia=add_months(dt_inicial_ant_w, 06) THEN  a.vl_estoque  ELSE 0 END ) vl_mes_07,
		Sum(CASE WHEN a.dt_mesano_referencia=add_months(dt_inicial_ant_w, 07) THEN  a.qt_estoque  ELSE 0 END ) qt_mes_08,
		Sum(CASE WHEN a.dt_mesano_referencia=add_months(dt_inicial_ant_w, 07) THEN  a.vl_estoque  ELSE 0 END ) vl_mes_08,
		Sum(CASE WHEN a.dt_mesano_referencia=add_months(dt_inicial_ant_w, 08) THEN  a.qt_estoque  ELSE 0 END ) qt_mes_09,
		Sum(CASE WHEN a.dt_mesano_referencia=add_months(dt_inicial_ant_w, 08) THEN  a.vl_estoque  ELSE 0 END ) vl_mes_09,
		Sum(CASE WHEN a.dt_mesano_referencia=add_months(dt_inicial_ant_w, 09) THEN  a.qt_estoque  ELSE 0 END ) qt_mes_10,
		Sum(CASE WHEN a.dt_mesano_referencia=add_months(dt_inicial_ant_w, 09) THEN  a.vl_estoque  ELSE 0 END ) vl_mes_10,
		Sum(CASE WHEN a.dt_mesano_referencia=add_months(dt_inicial_ant_w, 10) THEN  a.qt_estoque  ELSE 0 END ) qt_mes_11,
		Sum(CASE WHEN a.dt_mesano_referencia=add_months(dt_inicial_ant_w, 10) THEN  a.vl_estoque  ELSE 0 END ) vl_mes_11,
		Sum(CASE WHEN a.dt_mesano_referencia=add_months(dt_inicial_ant_w, 11) THEN  a.qt_estoque  ELSE 0 END ) qt_mes_12,
		Sum(CASE WHEN a.dt_mesano_referencia=add_months(dt_inicial_ant_w, 11) THEN  a.vl_estoque  ELSE 0 END ) vl_mes_12
	from	estabelecimento      e,
		estrutura_material_v b,
		resumo_movto_estoque a
	where	a.cd_material		= b.cd_material
	and	e.cd_estabelecimento	= a.cd_estabelecimento
	and	e.cd_estabelecimento	= coalesce(ctb_orc_cenario_w.cd_estab_exclusivo, cd_estabelecimento_p)
	and	e.cd_empresa		= ctb_orc_cenario_w.cd_empresa
	and	b.cd_grupo_material	= coalesce(cd_grupo_material_p, b.cd_grupo_material)
	and	b.cd_subgrupo_material	= coalesce(cd_subgrupo_material_p, b.cd_subgrupo_material)
	and	b.cd_classe_material	= coalesce(cd_classe_material_p, b.cd_classe_material)
	and	a.cd_material		= coalesce(cd_material_p, a.cd_material)
	and	b.ie_tipo_material	= '1'
	and	(a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> '')
	and	a.dt_mesano_referencia between dt_inicial_ant_w and dt_final_ant_w
	and	a.qt_estoque > 0
	group	by	a.cd_centro_custo,
			a.cd_estabelecimento,
			a.cd_material
	order	by	a.cd_material,
			a.cd_estabelecimento,
			a.cd_centro_custo;

/*Criacao do array com o tipo sendo do cursor eespecificado - c_material*/

type reg_c_material is table of c_material%RowType;
vetRegc_material reg_c_material;

/*Criacao do array com o tipo sendo da tabela eespecificada - ctb_planej_orc_material */

type registro is table of ctb_planej_orc_material%rowtype index by integer;
registros_w registro;

conta_material_w	dbms_sql.varchar2_table;
BEGIN

/*Buscar dados do planejamento */

select	a.*
into STRICT	ctb_orc_cenario_w
from	ctb_orc_cenario a
where	a.nr_sequencia = nr_seq_planej_p;

/*Definir o periodo para buscar os materiais e consumo */

dt_inicial_w := ctb_obter_mes_ref(ctb_orc_cenario_w.nr_seq_mes_inicio);
dt_final_w   := ctb_obter_mes_ref(ctb_orc_cenario_w.nr_seq_mes_fim);

dt_inicial_ant_w := add_months(dt_inicial_w, -12);
dt_final_ant_w   := add_months(dt_final_w, -12);
/*
open c_material
fetch c_material bulk collect 500 limit 1000 into*/
cd_material_w := 0;
open c_material;
loop fetch c_material bulk collect into vetRegc_material limit 1000;
	for i in 1 .. vetRegc_material.Count loop
		/*Incrementa a variavel para o array*/

		qt_cursor_w := qt_cursor_w + 1;

		if (vetRegc_material[i].cd_material != cd_material_w) then

			cd_conta_contabil_w := '';
			conta_material_w.delete;
		
			SELECT * FROM define_conta_material(	cd_estabelecimento_p	=> vetregc_material[i].cd_estabelecimento, cd_material_p		=> vetregc_material[i].cd_material, ie_tipo_conta_p		=> 3, ie_clinica_p		=> null, cd_setor_atendimento_p	=> null, ie_classif_convenio_p	=> null, ie_tipo_atendimento_p	=> null, ie_tipo_convenio_p	=> null, cd_convenio_p		=> null, cd_categoria_convenio_p	=> null, cd_local_estoque_p	=> null, cd_operacao_estoque_p	=> null, dt_vigencia_p		=> dt_inicial_w, cd_conta_contabil_p	=> cd_conta_contabil_w, cd_centro_custo_p	=> cd_centro_custo_w, cd_plano_p		=> null, ie_regra_pacote_p	=> 'N', nr_seq_motivo_solic_p	=> null, ie_complexidade_sus_p	=> null, ie_tipo_financ_sus_p	=> null, cd_operacao_nf_p	=> null, ie_cancelamento_p	=> null, cd_natureza_operacao_p	=> null) INTO STRICT cd_conta_contabil_p	=> cd_conta_contabil_w, cd_centro_custo_p	=> cd_centro_custo_w;
		

			if (coalesce(cd_conta_contabil_w, '0') != '0') then
				conta_material_w(1) := cd_conta_contabil_w;
			end if;
		
			cd_conta_contabil_w := '';

			SELECT * FROM define_conta_material(	cd_estabelecimento_p	=> vetregc_material[i].cd_estabelecimento, cd_material_p		=> vetregc_material[i].cd_material, ie_tipo_conta_p		=> 2, ie_clinica_p		=> null, cd_setor_atendimento_p	=> null, ie_classif_convenio_p	=> null, ie_tipo_atendimento_p	=> null, ie_tipo_convenio_p	=> null, cd_convenio_p		=> null, cd_categoria_convenio_p	=> null, cd_local_estoque_p	=> null, cd_operacao_estoque_p	=> null, dt_vigencia_p		=> dt_inicial_w, cd_conta_contabil_p	=> cd_conta_contabil_w, cd_centro_custo_p	=> cd_centro_custo_w, cd_plano_p		=> null, ie_regra_pacote_p	=> 'N', nr_seq_motivo_solic_p	=> null, ie_complexidade_sus_p	=> null, ie_tipo_financ_sus_p	=> null, cd_operacao_nf_p	=> null, ie_cancelamento_p	=> null, cd_natureza_operacao_p	=> null) INTO STRICT cd_conta_contabil_p	=> cd_conta_contabil_w, cd_centro_custo_p	=> cd_centro_custo_w;

			if (coalesce(cd_conta_contabil_w, '0') != '0') then
				conta_material_w(2) := cd_conta_contabil_w;
			end if;
		
		end if;


		for ii in 1 .. conta_material_w.count loop

			update	ctb_planej_orc_material
			set	dt_atualizacao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p,
				qt_planej_01	= vetRegc_material[i].qt_mes_01,
				qt_planej_02	= vetRegc_material[i].qt_mes_02,
				qt_planej_03	= vetRegc_material[i].qt_mes_03,
				qt_planej_04	= vetRegc_material[i].qt_mes_04,
				qt_planej_05	= vetRegc_material[i].qt_mes_05,
				qt_planej_06	= vetRegc_material[i].qt_mes_06,
				qt_planej_07	= vetRegc_material[i].qt_mes_07,
				qt_planej_08	= vetRegc_material[i].qt_mes_08,
				qt_planej_09	= vetRegc_material[i].qt_mes_09,
				qt_planej_10	= vetRegc_material[i].qt_mes_10,
				qt_planej_11	= vetRegc_material[i].qt_mes_11,
				qt_planej_12	= vetRegc_material[i].qt_mes_12,
				vl_planej_01	= vetRegc_material[i].vl_mes_01,
				vl_planej_02	= vetRegc_material[i].vl_mes_02,
				vl_planej_03	= vetRegc_material[i].vl_mes_03,
				vl_planej_04	= vetRegc_material[i].vl_mes_04,
				vl_planej_05	= vetRegc_material[i].vl_mes_05,
				vl_planej_06	= vetRegc_material[i].vl_mes_06,
				vl_planej_07	= vetRegc_material[i].vl_mes_07,
				vl_planej_08	= vetRegc_material[i].vl_mes_08,
				vl_planej_09	= vetRegc_material[i].vl_mes_09,
				vl_planej_10	= vetRegc_material[i].vl_mes_10,
				vl_planej_11	= vetRegc_material[i].vl_mes_11,
				vl_planej_12	= vetRegc_material[i].vl_mes_12
			where	cd_estabelecimento	= vetRegc_material[i].cd_estabelecimento
			and	cd_material		= vetRegc_material[i].cd_material
			and	cd_centro_custo		= vetRegc_material[i].cd_centro_custo
			and	cd_conta_contabil	= conta_material_w(ii)
			and	ie_sobrepor_p 		= 'S'
			and	coalesce(nr_seq_proj_gpi::text, '') = '';
			if (NOT FOUND) then
			
				select	coalesce(max(nr_sequencia),0)
				into STRICT	nr_sequencia_w
				from	ctb_planej_orc_material
				where	cd_estabelecimento	= vetRegc_material[i].cd_estabelecimento
				and	cd_material		= vetRegc_material[i].cd_material
				and	cd_centro_custo		= vetRegc_material[i].cd_centro_custo
				and	cd_conta_contabil	= conta_material_w(ii)
				and	coalesce(nr_seq_proj_gpi::text, '') = '';
				
				if (nr_sequencia_w = 0 ) then
					/*incrementa variavel para realizar o forall quando chegar no valor limite*/

					nr_vetor_w := nr_vetor_w + 1;
					
					select	nextval('ctb_planej_orc_material_seq')			
					into STRICT	nr_sequencia_w
					;

					registros_w[nr_vetor_w].nr_sequencia		:= nr_sequencia_w;
					registros_w[nr_vetor_w].cd_material		:= vetRegc_material[i].cd_material;
					registros_w[nr_vetor_w].nr_seq_planej		:= nr_seq_planej_p;
					registros_w[nr_vetor_w].cd_estabelecimento	:= vetRegc_material[i].cd_estabelecimento;
					registros_w[nr_vetor_w].cd_centro_custo		:= vetRegc_material[i].cd_centro_custo;
					registros_w[nr_vetor_w].cd_conta_contabil	:= conta_material_w(ii);
                    registros_w[nr_vetor_w].cd_conta_financ     := ctb_obter_conta_fin(registros_w[nr_vetor_w].cd_conta_contabil, null, dt_inicial_w);
					registros_w[nr_vetor_w].dt_atualizacao		:= clock_timestamp();
					registros_w[nr_vetor_w].nm_usuario		:= nm_usuario_p;
					registros_w[nr_vetor_w].dt_atualizacao_nrec	:= clock_timestamp();
					registros_w[nr_vetor_w].nm_usuario_nrec		:= nm_usuario_p;
					registros_w[nr_vetor_w].qt_planej_01		:= vetRegc_material[i].qt_mes_01;
					registros_w[nr_vetor_w].qt_planej_02		:= vetRegc_material[i].qt_mes_02;
					registros_w[nr_vetor_w].qt_planej_03		:= vetRegc_material[i].qt_mes_03;
					registros_w[nr_vetor_w].qt_planej_04		:= vetRegc_material[i].qt_mes_04;
					registros_w[nr_vetor_w].qt_planej_05		:= vetRegc_material[i].qt_mes_05;
					registros_w[nr_vetor_w].qt_planej_06		:= vetRegc_material[i].qt_mes_06;
					registros_w[nr_vetor_w].qt_planej_07		:= vetRegc_material[i].qt_mes_07;
					registros_w[nr_vetor_w].qt_planej_08		:= vetRegc_material[i].qt_mes_08;
					registros_w[nr_vetor_w].qt_planej_09		:= vetRegc_material[i].qt_mes_09;
					registros_w[nr_vetor_w].qt_planej_10		:= vetRegc_material[i].qt_mes_10;
					registros_w[nr_vetor_w].qt_planej_11		:= vetRegc_material[i].qt_mes_11;
					registros_w[nr_vetor_w].qt_planej_12		:= vetRegc_material[i].qt_mes_12;
					registros_w[nr_vetor_w].vl_planej_01		:= vetRegc_material[i].vl_mes_01;
					registros_w[nr_vetor_w].vl_planej_02		:= vetRegc_material[i].vl_mes_02;
					registros_w[nr_vetor_w].vl_planej_03		:= vetRegc_material[i].vl_mes_03;
					registros_w[nr_vetor_w].vl_planej_04		:= vetRegc_material[i].vl_mes_04;
					registros_w[nr_vetor_w].vl_planej_05		:= vetRegc_material[i].vl_mes_05;
					registros_w[nr_vetor_w].vl_planej_06		:= vetRegc_material[i].vl_mes_06;
					registros_w[nr_vetor_w].vl_planej_07		:= vetRegc_material[i].vl_mes_07;
					registros_w[nr_vetor_w].vl_planej_08		:= vetRegc_material[i].vl_mes_08;
					registros_w[nr_vetor_w].vl_planej_09		:= vetRegc_material[i].vl_mes_09;
					registros_w[nr_vetor_w].vl_planej_10		:= vetRegc_material[i].vl_mes_10;
					registros_w[nr_vetor_w].vl_planej_11		:= vetRegc_material[i].vl_mes_11;
					registros_w[nr_vetor_w].vl_planej_12		:= vetRegc_material[i].vl_mes_12;
				end if;
			end if;
		end loop;


		cd_material_w := vetRegc_material[i].cd_material;

		if (nr_vetor_w >= 1000) then
			/*Inserindo registros definitivamente na tabela especifica - ctb_planej_orc_material */

			forall i in registros_w.first .. registros_w.last
				insert into ctb_planej_orc_material values registros_w(i);

			nr_vetor_w := 0;
			registros_w.delete;

			commit;
		end if;
	end loop;

EXIT WHEN NOT FOUND; /* apply on c_material */
end loop;
close c_material;

if (registros_w.count > 0) then
	/*Inserindo registros definitivamente na tabela especifica - ctb_planej_orc_material */

	forall i in registros_w.first .. registros_w.last
		insert into ctb_planej_orc_material values registros_w(i);

	nr_vetor_w := 0;
	registros_w.delete;

	commit;
end if;

/*Libera memoria*/

dbms_session.free_unused_user_memory;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_planej_material ( nr_seq_planej_p ctb_orc_cenario.nr_sequencia%type, cd_estabelecimento_p bigint, cd_grupo_material_p bigint, cd_subgrupo_material_p bigint, cd_classe_material_p bigint, cd_material_p bigint, nm_usuario_p text, ie_sobrepor_p text) FROM PUBLIC;

