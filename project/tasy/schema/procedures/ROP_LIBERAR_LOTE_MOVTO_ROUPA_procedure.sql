-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rop_liberar_lote_movto_roupa ( nr_seq_lote_movto_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro INOUT text, ds_aviso_p INOUT text) AS $body$
DECLARE


ds_erro_w			varchar(255):= '';
ds_erro_item_w			varchar(255):= '';
nr_seq_movto_roupa_w		bigint;
nr_seq_roupa_movto_w		bigint;
nr_seq_roupa_w			bigint;
ie_operacao_w			varchar(15);
nr_seq_local_w			bigint;
nr_seq_local_orig_dest_w		bigint;
ds_aviso_w			varchar(255) := '';
qt_vida_util_lav_w			integer;
dt_liberacao_w			timestamp;
qt_vida_util_w			integer;
nr_seq_lote_roupa_w		bigint;
ds_tipo_w			varchar(100);
ds_lista_lotes_w			varchar(255) := '';
ie_avisa_termino_vida_util_w		varchar(1);
ie_operacao_avisa_w		varchar(1);
cd_motivo_baixa_w			integer;
ie_exige_conferencia_w		varchar(1);
ie_avisou_vida_util_w		varchar(1);
ie_avisa_somente_uma_vez_w	varchar(1);
ie_atingiu_terminou_w		boolean; -- Varíavel que identifica se atingiu ou terminou a vida util da peça.
/* Verifica a consistência das peças do lote */

c01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_roupa
	from	rop_movto_roupa
	where	nr_seq_lote = nr_seq_lote_movto_p
	order 	by	nr_sequencia;

/* Sem consistências, lê todas as peças do lote para gravar o local atual da peça */

c02 CURSOR FOR
	SELECT	nr_seq_roupa
	from	rop_movto_roupa
	where	nr_seq_lote = nr_seq_lote_movto_p
	and	((ie_exige_conferencia_w = 'N') or
		((ie_exige_conferencia_w = 'S') and (coalesce(nr_seq_motivo_falta::text, '') = '')));


BEGIN

select	Obter_Valor_Param_Usuario(1301, 57, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),
	Obter_Valor_Param_Usuario(1301, 66, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)
into STRICT	ie_exige_conferencia_w,
	ie_avisa_somente_uma_vez_w
;

select	coalesce(max(nr_seq_motivo_baixa),0)
into STRICT	cd_motivo_baixa_w
from	rop_lote_movto
where	nr_sequencia = nr_seq_lote_movto_p;

select	substr(coalesce(obter_valor_param_usuario(1301, 10, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N'),1,1)
into STRICT	ie_avisa_termino_vida_util_w
;

/* Consiste o lote de movimentação das peças */

ds_erro_w := Rop_Consiste_Lote_Movto_Roupa(nr_seq_lote_movto_p, ds_erro_w);
/* Se o lote possuir alguma consistência, avisa o usuário, caso o lote não possuir nenhuma consistência, é verificada as peças do lote */

select	rop_obter_dados_operacao(nr_seq_operacao,'A')
into STRICT	ie_operacao_avisa_w
from	rop_lote_movto
where	nr_sequencia = nr_seq_lote_movto_p;

if (coalesce(ds_erro_w::text, '') = '') then
	open c01;
	loop
	fetch c01 into
		nr_seq_movto_roupa_w,
		nr_seq_roupa_movto_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		ds_erro_item_w := Rop_Consiste_item_Movto_Roupa(nr_seq_movto_roupa_w, nr_seq_roupa_movto_w, nm_usuario_p, cd_estabelecimento_p, ds_erro_item_w);
		ds_erro_w	:= substr(ds_erro_w || ds_erro_item_w,1,255);

		if (ie_avisa_termino_vida_util_w = 'S') and (ie_operacao_avisa_w = 'S') then

			ie_atingiu_terminou_w := False;

			select	coalesce(a.qt_vida_util_lav,0),
				a.dt_liberacao,
				a.nr_sequencia,
				substr(obter_descricao_padrao('ROP_TIPO_ROUPA','DS_TIPO', a.nr_seq_tipo),1,100) ds_tipo,
				coalesce(b.ie_avisou_vida_util,'N')
			into STRICT	qt_vida_util_lav_w,
				dt_liberacao_w,
				nr_seq_lote_roupa_w,
				ds_tipo_w,
				ie_avisou_vida_util_w
			from	rop_lote_roupa a,
				rop_roupa b
			where	a.nr_sequencia = b.nr_seq_lote_roupa
			and	b.nr_sequencia = nr_seq_roupa_movto_w;

			if (qt_vida_util_lav_w > 0) and (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then

				qt_vida_util_w := qt_vida_util_lav_w - rop_obter_qtde_lavagens(nr_seq_roupa_movto_w);

				if (qt_vida_util_w <= 0) and 						/* Este if é para avisar quando atingiu ou terminou a vida útil da peça*/
					(obter_se_contido_char(nr_seq_lote_roupa_w,ds_lista_lotes_w) = 'N') then 	/* Esta linha é para não repetir a mensagem para o mesmo lote*/
					if	((ie_avisa_somente_uma_vez_w = 'N') or
						(ie_avisa_somente_uma_vez_w = 'S' AND ie_avisou_vida_util_w = 'N')) then
						/*ds_aviso_w 	:= substr( ds_aviso_w	|| 'Terminou a vida útil da peça ' || nr_seq_roupa_movto_w
											|| ', lote ' || nr_seq_lote_roupa_w || ' - ' || ds_tipo_w
											|| '. Vida Útil Mês: ' || qt_vida_util_lav_w
											|| '. Qt de lavagens: ' || rop_obter_qtde_lavagens(nr_seq_roupa_movto_w) || '.' || chr(13) || chr(10),1,255);*/
						ds_aviso_w 	:= substr( ds_aviso_w	|| wheb_mensagem_pck.get_texto(311793, 	'NR_SEQ_ROUPA_MOVTO=' || nr_seq_roupa_movto_w || ';' ||
																'NR_SEQ_LOTE_ROUPA=' || nr_seq_lote_roupa_w || ';' ||
																'DS_TIPO=' || ds_tipo_w || ';' ||
																'QT_VIDA_UTIL_LAV=' || qt_vida_util_lav_w || ';' ||
																'QT_LAVAGENS=' || rop_obter_qtde_lavagens(nr_seq_roupa_movto_w)) || '.' || chr(13) || chr(10),1,255);
						ds_lista_lotes_w	:= ds_lista_lotes_w   || nr_seq_lote_roupa_w || ',';
					end if;

					update	rop_roupa
					set	ie_avisou_vida_util	= 'S'
					where	nr_sequencia		= nr_seq_roupa_movto_w;

					ie_atingiu_terminou_w := True;
				end if;

				if (qt_vida_util_w <= 2) and 						/* Este if é para avisar quando falta menos de uma lavagem da peça*/
					(not ie_atingiu_terminou_w) and 					/*  Identifica se atingiu ou terminou a vida util da peça. */
					(obter_se_contido_char(nr_seq_lote_roupa_w,ds_lista_lotes_w) = 'N') then	/* Esta linha é para não repetir a mensagem para o mesmo lote */
					/*ds_aviso_w 	:= substr( ds_aviso_w	|| 'A vida útil de lavagens da peça ' || nr_seq_roupa_movto_w
										|| ', lote ' || nr_seq_lote_roupa_w || ' - ' || ds_tipo_w || ' está terminando. '
										|| 'Vida Útil Mês: ' || qt_vida_util_lav_w
										|| '. Qt de lavagens: ' || rop_obter_qtde_lavagens(nr_seq_roupa_movto_w) || '.' || chr(13) || chr(10),1,255);*/
					ds_aviso_w 	:= substr( ds_aviso_w	|| wheb_mensagem_pck.get_texto(311797, 	'NR_SEQ_ROUPA_MOVTO=' || nr_seq_roupa_movto_w || ';' ||
															'NR_SEQ_LOTE_ROUPA=' || nr_seq_lote_roupa_w || ';' ||
															'DS_TIPO=' || ds_tipo_w || ';' ||
															'QT_VIDA_UTIL_LAV=' || qt_vida_util_lav_w || ';' ||
															'QT_LAVAGENS=' || rop_obter_qtde_lavagens(nr_seq_roupa_movto_w)) || '.' || chr(13) || chr(10),1,255);
					ds_lista_lotes_w	:= ds_lista_lotes_w   || nr_seq_lote_roupa_w || ',';
				end if;
			ie_atingiu_terminou_w := False;
			end if;
		end if;

		end;
	end loop;
	close c01;
end if;

ds_erro 	:= substr(ds_erro_w,1,255);

/* Se não possuir nenhuma consistência, o lote será liberado e o local atual de cada peça será atualizado */

if (coalesce(ds_erro::text, '') = '') then
	begin
	select	substr(rop_obter_dados_operacao(nr_seq_operacao, 'T'),1,15),
		nr_seq_local,
		nr_seq_local_orig_dest
	into STRICT	ie_operacao_w,
		nr_seq_local_w,
		nr_seq_local_orig_dest_w
	from	rop_lote_movto
	where	nr_sequencia = nr_seq_lote_movto_p;

	open c02;
	loop
	fetch c02 into
		nr_seq_roupa_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		if	((ie_operacao_w = 'Reg') or (ie_operacao_w = 'B')) then
			update	rop_roupa
			set	nr_seq_local	= nr_seq_local_w,
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= nr_seq_roupa_w;
		else
			update	rop_roupa
			set	nr_seq_local	= nr_seq_local_orig_dest_w,
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= nr_seq_roupa_w;
		end if;
		if (ie_operacao_w = 'B') then
			update	rop_roupa
			set	dt_baixa		= clock_timestamp(),
				cd_motivo_baixa 	= cd_motivo_baixa_w,
				ie_situacao	= 'I'
			where	nr_sequencia	= nr_seq_roupa_w;
		end if;
		end;
	end loop;
	close c02;

	update	rop_lote_movto
	set	dt_liberacao	= clock_timestamp()
	where	nr_sequencia	= nr_seq_lote_movto_p;

	commit;

	end;
end if;

ds_aviso_p := substr(ds_aviso_w,1,255);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rop_liberar_lote_movto_roupa ( nr_seq_lote_movto_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro INOUT text, ds_aviso_p INOUT text) FROM PUBLIC;

