-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_tributos_fatura ( nr_seq_fatura_p bigint, ie_opcao_p text, nm_usuario_p text) AS $body$
DECLARE

--	IE_OPCAO_P

--	'F'		Gerar tributos sobre o valor da FATURA

--	'NDC'		Gerar tributos sobre o valor da NOTA DE REEMBOLSO 

--	'NDC+F'		Gerar tributos sobre o valor da NOTA DE REEMBOLSO + FATURA
ie_vago_w			varchar(255);
ie_tipo_tributo_w		varchar(15);
cd_cgc_w			varchar(14);
cd_pessoa_fisica_w		varchar(10);
ie_acumulativo_w		varchar(10);
ie_origem_titulo_w		varchar(10);
ie_ato_cooperado_w		varchar(1)	:= 'N';
vl_fatura_w			double precision;
vl_fatura_ww			double precision;
vl_fatura_orig_w		double precision;
vl_minimo_tributo_w		double precision;
vl_minimo_base_calculo_w	double precision;
vl_tributo_w			double precision;
vl_trib_nao_retido_w		double precision;
vl_base_nao_retido_w		double precision;
vl_trib_adic_w			double precision;
vl_base_adic_w			double precision;
vl_soma_trib_nao_retido_w	double precision;
vl_soma_base_nao_retido_w	double precision;
vl_soma_trib_adic_w		double precision;
vl_soma_base_adic_w		double precision;
vl_tributo_a_reter_w		double precision;
vl_base_a_reter_w		double precision;
vl_minimo_base_w		double precision;
vl_teto_base_w			double precision;
vl_desc_dependente_w		double precision;
vl_trib_anterior_w		double precision;
vl_total_base_w			double precision;
vl_reducao_w			double precision;
vl_proc_cooperado_w		double precision;
nr_seq_regra_w			bigint;
nr_seq_pagador_w		bigint;
pr_imposto_w			double precision;
cd_estabelecimento_w		smallint;
cd_tributo_w			smallint;
dt_emissao_w			timestamp;
nr_seq_regra_irpf_w		regra_calculo_irpf.nr_sequencia%type;
ie_saldo_tit_rec_w		varchar(2)	:= 'N';

cd_darf_w		regra_calculo_imposto.cd_darf%type;

C01 CURSOR FOR
	SELECT	b.cd_tributo
	from	tributo b
	where	b.ie_corpo_item	= 'C'
	and	b.ie_situacao	= 'A'
	and	b.ie_pf_pj	in ('A',CASE WHEN coalesce(cd_pessoa_fisica_w::text, '') = '' THEN 'PJ'  ELSE 'PF' END )
	order 	by b.cd_tributo;


BEGIN
select	b.cd_estabelecimento,
	CASE WHEN ie_opcao_p='NDC+F' THEN  coalesce(a.vl_fatura,0) + coalesce(a.vl_total_ndc,0) WHEN ie_opcao_p='NDC' THEN  coalesce(a.vl_total_ndc,0) WHEN ie_opcao_p='F' THEN  coalesce(a.vl_fatura,0) END ,
	coalesce(a.dt_emissao, coalesce(b.dt_emissao, clock_timestamp())),
	'13',
	a.nr_seq_pagador
into STRICT	cd_estabelecimento_w,
	vl_fatura_w,
	dt_emissao_w,
	ie_origem_titulo_w,
	nr_seq_pagador_w
from	pls_lote_faturamento b,
	pls_fatura a
where	a.nr_sequencia		= nr_seq_fatura_p
and	a.nr_seq_lote		= b.nr_sequencia;

select	max(a.cd_pessoa_fisica),
	max(a.cd_cgc)
into STRICT	cd_pessoa_fisica_w,
	cd_cgc_w
from	pls_contrato_pagador a
where	a.nr_sequencia = nr_seq_pagador_w;

if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
	cd_cgc_w	:= null;
end if;

vl_fatura_orig_w	:=	vl_fatura_w;

open	C01;
loop
fetch	C01 into
	cd_tributo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	ie_tipo_tributo
	into STRICT	ie_tipo_tributo_w
	from	tributo
	where	cd_tributo	= cd_tributo_w;

	vl_fatura_w		:= vl_fatura_orig_w;
	ie_ato_cooperado_w	:= 'N';
	
	--if	(ie_opcao_p in ('NDC','NDC+F')) and (ie_tipo_tributo_w in ('IR','IRRF')) then
		select	coalesce(sum(x.vl_beneficiario),0)
		into STRICT	vl_proc_cooperado_w
		from	pls_conta_proc x
		where	x.nr_sequencia in (SELECT	f.nr_sequencia
			from	pls_cooperado			i,
				pls_prestador			h,
				pls_conta_proc			f,
				pls_conta			e,
				pls_fatura_conta		b,
				pls_fatura_evento         	k,
				pls_fatura                      l
			where	l.nr_sequencia			= nr_seq_fatura_p
			and     l.nr_sequencia                  = k.nr_seq_fatura
			and     k.nr_sequencia                  = b.nr_seq_fatura_evento
			and	f.nr_seq_conta			= e.nr_sequencia
			and     e.nr_sequencia                  = b.nr_seq_conta
			and	e.nr_seq_prestador_exec		= h.nr_sequencia
			and	h.cd_pessoa_fisica		= i.cd_pessoa_fisica
			and     f.nr_seq_evento_fat is  null
			and	f.ie_ato_cooperado	= '1'
			and	exists (select 1
					FROM e
LEFT OUTER JOIN pls_conta_medica_resumo m ON (e.nr_sequencia = m.nr_seq_conta)
LEFT OUTER JOIN pls_prestador g ON (m.nr_seq_prestador_pgto = g.nr_sequencia)
LEFT OUTER JOIN pls_cooperado j ON (g.cd_pessoa_fisica = j.cd_pessoa_fisica) ));

	SELECT * FROM obter_dados_trib_tit_rec(cd_tributo_w, cd_estabelecimento_w, null, dt_emissao_w, ie_ato_cooperado_w, pr_imposto_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_pessoa_fisica_w, cd_cgc_w, ie_vago_w, ie_origem_titulo_w, 0, nr_seq_regra_w, cd_darf_w) INTO STRICT pr_imposto_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, nr_seq_regra_w, cd_darf_w;
				
	if (coalesce(nr_seq_regra_w::text, '') = '') then
		if (ie_ato_cooperado_w = 'N') then
			ie_ato_cooperado_w := 'S';
		else
			ie_ato_cooperado_w := 'N';
		end if;
	
		SELECT * FROM obter_dados_trib_tit_rec(cd_tributo_w, cd_estabelecimento_w, null, dt_emissao_w, ie_ato_cooperado_w, pr_imposto_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_pessoa_fisica_w, cd_cgc_w, ie_vago_w, ie_origem_titulo_w, 0, nr_seq_regra_w, cd_darf_w) INTO STRICT pr_imposto_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, nr_seq_regra_w, cd_darf_w;
	end if;
	
	select	coalesce(max(ie_ato_cooperado),'N'),
		coalesce(max(ie_saldo_tit_rec),'N')
	into STRICT	ie_ato_cooperado_w,
		ie_saldo_tit_rec_w
	from	regra_calculo_imposto
	where	nr_sequencia = nr_seq_regra_w;
	
	if (ie_ato_cooperado_w = 'S') then
		vl_fatura_w	:= vl_proc_cooperado_w;
	end if;

	if (pr_imposto_w > 0) then
		vl_fatura_ww	:= vl_fatura_w;

		SELECT * FROM obter_valores_tributo(	ie_acumulativo_w, pr_imposto_w, vl_minimo_base_w, vl_minimo_tributo_w, vl_soma_trib_nao_retido_w, vl_soma_trib_adic_w, vl_soma_base_nao_retido_w, vl_soma_base_adic_w, vl_fatura_ww, vl_tributo_w, vl_trib_nao_retido_w, vl_trib_adic_w, vl_base_nao_retido_w, vl_base_adic_w, vl_teto_base_w, vl_trib_anterior_w, 'N', vl_total_base_w, vl_reducao_w, vl_desc_dependente_w, 0, 0, 0, null, 0, clock_timestamp(), nr_seq_regra_irpf_w) INTO STRICT pr_imposto_w, vl_fatura_ww, vl_tributo_w, vl_trib_nao_retido_w, vl_trib_adic_w, vl_base_nao_retido_w, vl_base_adic_w, vl_reducao_w, vl_desc_dependente_w, nr_seq_regra_irpf_w;

		insert	into pls_fatura_trib(	nr_sequencia,cd_tributo,tx_tributo,vl_tributo,vl_base_calculo,
				dt_atualizacao,nm_usuario,nr_seq_fatura,vl_trib_nao_retido,vl_base_nao_retido,
				vl_trib_adic,vl_base_adic,ie_tipo_valor_fat,ie_origem_tributo,dt_tributo,
				nr_seq_regra_trib)
		SELECT		nextval('titulo_receber_trib_seq'),cd_tributo_w,pr_imposto_w,vl_tributo_w,vl_fatura_ww,
				clock_timestamp(),nm_usuario_p,nr_seq_fatura_p,vl_trib_nao_retido_w,vl_base_nao_retido_w,
				vl_trib_adic_w,vl_base_adic_w,ie_opcao_p,CASE WHEN ie_saldo_tit_rec_w='S' THEN 'CD'  ELSE 'C' END ,dt_emissao_w,
				nr_seq_regra_w
		;
	end if;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_tributos_fatura ( nr_seq_fatura_p bigint, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

