-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_52_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) AS $body$
DECLARE



_ora2pg_r RECORD;
bind_sql_valor_w		sql_pck.t_dado_bind;
tb_seq_selecao_w		pls_util_cta_pck.t_number_table;
tb_valido_w			pls_util_cta_pck.t_varchar2_table_1;
tb_observacao_w			pls_util_cta_pck.t_varchar2_table_4000;
-- Servicos da tabela de selecao que nao esta habilitados para o prestador quando a validacao estiver sendo feita na importacao do arquivo
cursor_w			sql_pck.t_cursor;
ds_sql_w			varchar(4000);
ds_restricao_sub_w		varchar(4000);		-- Restricao do select usado no FROM
ds_restricao_w			varchar(4000);		-- restricao do select do cursor com TABLE FUNCTION
ds_tabelas_w			varchar(4000);
ds_nr_seq_prestador_w		varchar(50);
ds_nr_seq_tipo_prestador_w	varchar(50);
ds_cd_prestador_princ_w		varchar(50);
ds_nr_seq_tipo_atendimento_w	varchar(50);
ds_ie_internado_w		varchar(50);
ds_nr_seq_prestador_exec_w	varchar(50);
			
-- Informacoes da regra de validacao dos procedimentos nao habilitados.
C02 CURSOR(	nr_seq_oc_cta_comb_pc	pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia	nr_seq_validacao,
		a.ie_valida_procedimento,
		a.ie_tipo_prestador
	from	pls_oc_cta_val_serv_prest a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_pc;

BEGIN
-- S? ir? executar qualquer copnsulta e\ou validacao quando existir informacao v?lida da regra.
if (nr_seq_combinada_p IS NOT NULL AND nr_seq_combinada_p::text <> '') then

	-- gerencia a atualiza??o da tabela TM
	CALL pls_gerencia_upd_obj_pck.atualizar_objetos('tasy', 'PLS_OC_CTA_TRATAR_VAL_52', 'PLS_GRUPO_SERVICO_TM');
	
	-- Informacoes da regra de validacao da carteira.
	for	r_C02_w in C02(nr_seq_combinada_p) loop
	
		-- Se tiver informacao na tabela e a informacao for diferente de nenhuma sera verificado, caso contrario sai da rotina e nem abre as informacoes das contas.
		if (r_C02_w.ie_valida_procedimento = 'S') and (r_C02_w.ie_tipo_prestador IS NOT NULL AND r_C02_w.ie_tipo_prestador::text <> '') then
			
			--- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
			CALL pls_ocor_imp_pck.atualiza_campo_auxiliar(	'V',
									'N', 
									nr_id_transacao_p, 
									null,
									'N');
			
			ds_restricao_sub_w:=	'';
			ds_restricao_w:=	'';			
			if (r_C02_w.ie_tipo_prestador = 'P') then
			
				ds_tabelas_w :=			'		pls_conta_proc_ocor_imp_v		a'	|| pls_tipos_ocor_pck.enter_w;

				ds_nr_seq_prestador_w:=		' a.nr_seq_prestador_prot ';
				
			elsif (r_C02_w.ie_tipo_prestador = 'C') then
			
				ds_tabelas_w :=			'		pls_conta_proc_ocor_imp_v		a '	|| pls_tipos_ocor_pck.enter_w;

				ds_nr_seq_prestador_w:=		' a.nr_seq_prestador_exec';
				
			elsif (r_C02_w.ie_tipo_prestador = 'R') then
				ds_tabelas_w:=			'		pls_conta_proc_ocor_imp_v		a,'|| pls_tipos_ocor_pck.enter_w ||
								'		pls_conta_item_equipe_imp	item ';
				ds_restricao_sub_w := ds_restricao_sub_w ||
								'	and 	a.nr_sequencia 	= item.nr_seq_conta_proc ';
				ds_nr_seq_prestador_w:=		'			item.nr_seq_prestador_conv';
			end if;

			ds_restricao_w := ds_restricao_w ||
					'	where	(select	count(1) ' 			|| pls_tipos_ocor_pck.enter_w ||
					'		from	table (pls_grupos_aux_pck.obter_proc_lib_prest ( ' || pls_tipos_ocor_pck.enter_w ||
					'			a.nr_seq_prestador,'			|| pls_tipos_ocor_pck.enter_w ||
					'			a.dt_inicio_faturamento,' 		|| pls_tipos_ocor_pck.enter_w ||
					'			a.ie_tipo_guia, ' 			|| pls_tipos_ocor_pck.enter_w ||
					'			a.nr_seq_prestador_exec, '		|| pls_tipos_ocor_pck.enter_w ||
					'			a.nr_seq_tipo_prest_exec,'		|| pls_tipos_ocor_pck.enter_w ||
					'			a.cd_prestador_exec,'			|| pls_tipos_ocor_pck.enter_w ||
					'			a.ie_carater_atendimento,'		|| pls_tipos_ocor_pck.enter_w ||
					'			a.nr_seq_tipo_atend,'		|| pls_tipos_ocor_pck.enter_w ||
					'			pls_obter_se_internado_imp(a.nr_seq_conta,null, a.ie_tipo_guia, a.nr_seq_tipo_atend, null, a.cd_estabelecimento, ''N'', null, null, null),' || pls_tipos_ocor_pck.enter_w ||
					'		        a.nr_seq_plano, '			|| pls_tipos_ocor_pck.enter_w ||
					'			a.ie_origem_proced, ' 				|| pls_tipos_ocor_pck.enter_w ||
					'			a.cd_procedimento,   '				|| pls_tipos_ocor_pck.enter_w ||
					'		      	a.nr_seq_tipo_prest_prot'			|| pls_tipos_ocor_pck.enter_w ||
					'				)) pm) = 0 '					|| pls_tipos_ocor_pck.enter_w;
					
			ds_sql_w := 	'	select 		a.nr_sequencia,'			|| pls_tipos_ocor_pck.enter_w ||
					'			a.ie_valido,'				|| pls_tipos_ocor_pck.enter_w ||
					'			a.ds_observacao'			|| pls_tipos_ocor_pck.enter_w ||
					'	from		('					|| pls_tipos_ocor_pck.enter_w ||
					'	select 		x.nr_sequencia, ' 			|| pls_tipos_ocor_pck.enter_w ||
					'			''S'' ie_valido, '			|| pls_tipos_ocor_pck.enter_w ||
					'			''O procedimento informado nao est? habilitado para o prestador '' || '	|| pls_tipos_ocor_pck.enter_w ||
					'				decode('''|| r_C02_w.ie_tipo_prestador ||''',''P'',''do protocolo:'',''C'',''executor da conta:'',''participante:'') || '	|| pls_tipos_ocor_pck.enter_w ||
					'				'' '' || '			|| pls_tipos_ocor_pck.enter_w ||
					'				pls_obter_dados_prestador(' || ds_nr_seq_prestador_w || ', ''N'') || ' 		|| pls_tipos_ocor_pck.enter_w ||
					'				decode('''|| r_C02_w.ie_tipo_prestador ||''',''A'',''.'',''. Prestador executor: '' || pls_obter_dados_prestador(a.nr_seq_prestador_exec, ''N'') || ''.'') ds_observacao, ' || pls_tipos_ocor_pck.enter_w ||
					'			' || ds_nr_seq_prestador_w || ' nr_seq_prestador,'		|| pls_tipos_ocor_pck.enter_w ||
					'			a.dt_inicio_faturamento,' 	|| pls_tipos_ocor_pck.enter_w ||
					'			a.ie_tipo_guia, ' 		|| pls_tipos_ocor_pck.enter_w ||
					'			a.nr_seq_prestador_exec,'	|| pls_tipos_ocor_pck.enter_w ||
					'			a.nr_seq_tipo_prest_prot ,'	|| pls_tipos_ocor_pck.enter_w ||
					'			a.cd_prestador_exec,'		|| pls_tipos_ocor_pck.enter_w ||
					'			a.ie_carater_atendimento,'	|| pls_tipos_ocor_pck.enter_w ||
					'			a.nr_seq_tipo_atend,'		|| pls_tipos_ocor_pck.enter_w ||
					'			pls_obter_se_internado_imp(a.nr_seq_conta,null, a.ie_tipo_guia, a.nr_seq_tipo_atend, null, a.cd_estabelecimento, ''N'', null, null, null) ie_internado,'	|| pls_tipos_ocor_pck.enter_w ||
					'			a.nr_seq_plano, ' 		|| pls_tipos_ocor_pck.enter_w ||
					'			a.ie_origem_proced, ' 			|| pls_tipos_ocor_pck.enter_w ||
					'			a.cd_procedimento, '	 		|| pls_tipos_ocor_pck.enter_w ||
					'			a.nr_seq_conta,	'			|| pls_tipos_ocor_pck.enter_w ||					
					'			a.cd_estabelecimento, '			|| pls_tipos_ocor_pck.enter_w ||
					'			a.nr_seq_tipo_prest_exec '		|| pls_tipos_ocor_pck.enter_w ||
					'	from	pls_oc_cta_selecao_imp	x, ' 			|| pls_tipos_ocor_pck.enter_w ||
					ds_tabelas_w							|| pls_tipos_ocor_pck.enter_w ||	
					'	where	x.ie_valido		= ''S'' '		|| pls_tipos_ocor_pck.enter_w ||
					'	and	x.nr_id_transacao	= :nr_id_transacao_pc '	|| pls_tipos_ocor_pck.enter_w ||
					'	and	a.nr_sequencia 		= x.nr_seq_conta_proc '	|| pls_tipos_ocor_pck.enter_w ||
					'	and	a.cd_procedimento 	is not null '	|| pls_tipos_ocor_pck.enter_w ||
					'	and	a.ie_origem_proced	is not null '		|| pls_tipos_ocor_pck.enter_w ||
					'	and	' || ds_nr_seq_prestador_w || ' is not null '	|| pls_tipos_ocor_pck.enter_w ||
					ds_restricao_sub_w						|| pls_tipos_ocor_pck.enter_w ||
					'	) a  ' 							|| pls_tipos_ocor_pck.enter_w ||
					ds_restricao_w;
			
			bind_sql_valor_w := sql_pck.bind_variable(':nr_id_transacao_pc', nr_id_transacao_p, bind_sql_valor_w);
			
			bind_sql_valor_w := sql_pck.executa_sql_cursor(ds_sql_w, bind_sql_valor_w);
			--limpa as variaveis
			SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;

			loop
				fetch 	cursor_w bulk collect
				into	tb_seq_selecao_w, tb_valido_w, tb_observacao_w
				limit pls_util_cta_pck.qt_registro_transacao_w;
				exit when tb_seq_selecao_w.count = 0;
								
				--Grava as informacoes na tabela de selecao
				CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
										tb_valido_w,
										tb_observacao_w, 
										nr_id_transacao_p, 
										'SEQ');
				--limpa as variaveis
				SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;									

			end loop;

			close cursor_w;			
		
			-- seta os registros que serao validos ou invalidos apos o processamento 
			CALL pls_ocor_imp_pck.atualiza_campo_valido('V',
								'N', 
								ie_regra_excecao_p, 
								null,
								nr_id_transacao_p, 
								null);
		end if;
	end loop; -- C02
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_52_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) FROM PUBLIC;

