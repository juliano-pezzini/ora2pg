-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE adep_gerar_lancto_dispositivo ( nr_seq_proced_princ_p bigint, nr_seq_disp_proc_p bigint, nr_atendimento_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_procedimento_p bigint, nm_usuario_p text, ie_mudar_data_p text DEFAULT 'N') AS $body$
DECLARE

			
nr_sequencia_w		bigint;
cd_setor_atendimento_w	integer;
cd_setor_atendimento_ww	integer;
dt_entrada_unidade_w	timestamp;
cd_unidade_medida_w	varchar(30);
nr_seq_atepacu_w		bigint;
cd_convenio_w		integer;
nr_doc_convenio_w	varchar(20);
ie_tipo_guia_w		varchar(2);
cd_senha_w		varchar(20);
ie_consignado_w		varchar(1);
cd_material_estoque_w	integer;
qt_conv_estoque_consumo_w	double precision;
cd_unidade_medida_estoque_w	varchar(30);
cd_unidade_medida_consumo_w	varchar(30);
qt_estoque_w			double precision;
cd_estab_w			bigint;
dt_entrada_unidade_ww		timestamp;
cd_pessoa_fisica_w		varchar(10);
dt_inicio_real_w			timestamp;
cd_medico_cirurgiao_w		varchar(10);
cd_medico_anestesista_w		varchar(10);
nr_seq_interno_w			bigint;
ds_erro_w			varchar(255);
nr_seq_proc_w			bigint;
ie_classificacao_w			varchar(1);
cd_tipo_procedimento_w		smallint;
DT_RETIRADA_W			timestamp;
qt_procedimento_w		double precision;
ie_forma_apresentacao_w	smallint;

nr_atendimento_w		prescr_medica.nr_atendimento%type;
qt_lancamento_w			double precision;
dt_execucao_w			timestamp;
cd_medico_executor_w	prescr_medica.cd_medico%type;
cd_categoria_w			varchar(10);
nr_cirurgia_propaci_w	bigint;
nr_interno_conta_ww		bigint;
cd_setor_proc_w			integer;
cd_categoria_glosa_w		bigint;
ie_acao_excesso_w		varchar(255);
ds_texto_aux_w				varchar(255);
qt_excedida_w			double precision;
cd_convenio_excesso_w	integer;
cd_categoria_excesso_w		varchar(10);
nr_seq_proc_interno_w		bigint;
nr_seq_excedido_w		procedimento_paciente.nr_sequencia%type;
nr_conta_w				conta_paciente.nr_interno_conta%type;
cd_motivo_exc_conta_w	parametro_faturamento.cd_motivo_exc_conta%type;
cd_convenio_glosa_w			bigint;
qt_idade_pac_w			double precision;
cd_medico_ww			varchar(10);
cd_material_w			prescr_material.cd_material%type;
qt_dose_w				prescr_material.qt_dose%type;
nr_seq_map_w			bigint;
cd_local_estoque_w		bigint;		
ie_cobra_setor_atual_w  varchar(10);
nr_seq_dispositivo_w    bigint;
valor_parametro_w  varchar(10);

c01 CURSOR FOR
SELECT	a.nr_sequencia,
		a.cd_material,
		a.cd_unidade_medida,
		a.qt_dose		
from	proc_int_mat_prescr a
where	Obter_se_mat_setor(a.nr_sequencia, cd_setor_proc_w, a.cd_convenio_exc, obter_tipo_atendimento(nr_atendimento_w)) = 'S'
and		coalesce(qt_idade_pac_w,1) between coalesce(obter_idade_mat_int_prescr(a.nr_sequencia,'MIN'),0) and coalesce(obter_idade_mat_int_prescr(a.nr_sequencia,'MAX'),9999999)
and		((cd_setor_proc_w = a.cd_setor_atendimento) or (coalesce(a.cd_setor_atendimento::text, '') = ''))
and		((coalesce(a.cd_medico::text, '') = '') or (a.cd_medico = cd_medico_ww))
and		((coalesce(a.cd_estabelecimento::text, '') = '') or (a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento))
and		a.nr_seq_proc_interno	= nr_seq_proced_princ_p
order by
	coalesce(a.cd_setor_atendimento,999);


BEGIN

cd_medico_ww	:= Obter_Pf_Usuario(nm_usuario_p,'C');

SELECT * FROM obter_convenio_execucao(nr_atendimento_p, clock_timestamp(), cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w) INTO STRICT cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w;

select	cd_estabelecimento
into STRICT	cd_estab_w
from  	atendimento_paciente
where 	nr_atendimento = nr_atendimento_p;

if (nr_seq_proced_princ_p IS NOT NULL AND nr_seq_proced_princ_p::text <> '') and (coalesce(nr_seq_disp_proc_p,0) > 0) then
	select	c.cd_pessoa_fisica,
		a.dt_instalacao,
		--cd_medico_cirurgiao, /*   ????? */

		--cd_medico_anestesista, /*   ????? */
		a.dt_retirada,
		b.cd_setor_Atendimento,
		a.nr_seq_dispositivo
	into STRICT	cd_pessoa_fisica_w,
		dt_inicio_real_w,
		--cd_medico_cirurgiao_w,

		--cd_medico_anestesista_w,
		dt_retirada_w,
		cd_setor_atendimento_ww,
		nr_seq_dispositivo_w
	from	atendimento_paciente c,
		ATEND_PAC_DISPOSITIVO a,
		ATEND_PAC_DISP_PROC b
	where	b.NR_SEQ_DISP_PAC	= a.nr_sequencia
	and 	c.nr_atendimento 	= a.nr_atendimento
	and 	b.nr_sequencia		= nr_seq_disp_proc_p;	
	
	select	max(ie_cobra_setor_atual)
	into STRICT	ie_cobra_setor_atual_w
	from	regra_cobranca_dispositivo
	where	nr_seq_dispositivo     = nr_seq_dispositivo_w
	and 	ie_acao = 'J'
	and 	nr_seq_proc_interno = nr_seq_proced_princ_p
	and 	((cd_procedimento = cd_procedimento_p) or (coalesce(cd_procedimento::text, '') = ''));
		
	if((cd_setor_atendimento_ww IS NOT NULL AND cd_setor_atendimento_ww::text <> '')
	and (coalesce(ie_cobra_setor_atual_w, 'N') = 'S'))then
		cd_setor_atendimento_ww := coalesce(Obter_Setor_Atend_Classi(nr_atendimento_p), cd_setor_atendimento_ww);
	end if;
	
	begin
	Select	Max(nr_seq_interno)
	into STRICT	nr_seq_interno_w
	from	atend_paciente_unidade
	where	nr_atendimento		= nr_atendimento_p
	and	cd_setor_atendimento	= cd_setor_atendimento_ww;
	
	Select	dt_entrada_unidade
	into STRICT	dt_entrada_unidade_ww
	from	atend_paciente_unidade
	where	nr_atendimento	= nr_Atendimento_p
	and	nr_seq_interno	= nr_seq_interno_w;	
	exception
	when no_data_found then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(237841,'DS_SETOR='||substr(Obter_nome_setor(cd_setor_atendimento_w),1,40));
	end;

	ds_erro_w := Consiste_Paciente_Proc(nr_seq_proced_princ_p, nr_atendimento_p, cd_pessoa_fisica_w, cd_procedimento_p, ie_origem_proced_p, ds_erro_w);
		
	if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(237842,'DS_SETOR='||ds_erro_w);
	end if;	

	SELECT	ie_forma_apresentacao
	INTO STRICT	ie_forma_apresentacao_w
	FROM	procedimento
	WHERE	cd_procedimento		= cd_procedimento_p
	AND	ie_origem_proced	= ie_origem_proced_p;
	
	if (ie_forma_apresentacao_w in (2,3,10, 11)) then	
		qt_procedimento_w := obter_qte_proced_cirurgia(cd_procedimento_p, ie_origem_proced_p, dt_retirada_w, dt_inicio_real_w);
	else
		qt_procedimento_w := qt_procedimento_p;
	end if;

    valor_parametro_w := Obter_Param_Usuario( 99056, 3, Obter_perfil_Ativo, nm_usuario_p, obter_estabelecimento_ativo, valor_parametro_w);

	if (ie_mudar_data_p = 'S' and valor_parametro_w = 'S')then
        	dt_inicio_real_w := clock_timestamp();
    	end if;

	select	nextval('procedimento_paciente_seq')
	into STRICT	nr_seq_proc_w
	;

	insert into procedimento_paciente(
		nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		qt_procedimento,
		cd_pessoa_fisica,
		ie_funcao_medico,
		cd_convenio,
		cd_categoria,
		ie_proc_princ_atend,
		ie_video,
		tx_medico,
		tx_anestesia,
		tx_procedimento,
		ie_valor_informado,
		ie_guia_informada,
		cd_situacao_glosa,
		nm_usuario_original,
		nr_atendimento,
		cd_setor_atendimento,
		dt_entrada_unidade,
		nr_seq_atepacu,
		cd_senha,
		ie_auditoria,
		ie_emite_conta,
		cd_cgc_prestador,
		nr_seq_proc_interno,
		dt_procedimento,
		dt_atualizacao,
		nm_usuario,
		nr_cirurgia,
		--cd_medico_executor,

		--cd_medico_req,
		dt_conta)
	values (
		nr_seq_proc_w,
		cd_procedimento_p,
		ie_origem_proced_p,
		coalesce(qt_procedimento_w,qt_procedimento_p),
		CASE WHEN ie_origem_proced_p=7 THEN null  ELSE obter_pessoa_fisica_usuario(nm_usuario_p,'C') END ,
		'1',
		cd_convenio_w,
		cd_categoria_w,
		'N',
		'N',
		100,
		100,
		100,
		'N',
		'N',
		0,
		nm_usuario_p,
		nr_atendimento_p,
		cd_setor_atendimento_ww,
		dt_entrada_unidade_ww,
		nr_seq_interno_w,
		cd_senha_w,
		'N',
		'N',
		obter_cgc_estabelecimento(cd_estab_w),
		nr_seq_proced_princ_p,
		dt_inicio_real_w,
		clock_timestamp(),
		nm_usuario_p,
		null,
		--cd_medico_cirurgiao_w,

		--cd_medico_cirurgiao_w,
		clock_timestamp());
		
	CALL atualiza_preco_servico(nr_seq_proc_w,nm_usuario_p);
	--Gerar_Lancamento_automatico(nr_atendimento_p,null,34,nm_usuario_p,nr_seq_proc_w,null,null,null,null,null);
	CALL gerar_autor_regra(nr_atendimento_p,null,nr_seq_proc_w,null,null,nr_seq_proced_princ_p,'EP',nm_usuario_p,null,null,null,null,null,null,'','','');
	
	select	max(nr_atendimento),
			max(qt_procedimento),
			max(dt_procedimento),
			max(cd_medico_executor),
			max(cd_categoria),
			max(nr_cirurgia),
			max(nr_interno_conta),
			max(cd_setor_atendimento),
			obter_idade_pf(max(cd_pessoa_fisica), clock_timestamp(), 'A')
	into STRICT	nr_atendimento_w,
			qt_lancamento_w,
			dt_execucao_w,
			cd_medico_executor_w,
			cd_categoria_w,
			nr_cirurgia_propaci_w,
			nr_interno_conta_ww,
			cd_setor_proc_w,
			qt_idade_pac_w
	from	procedimento_paciente
	where	nr_sequencia = nr_seq_proc_w;
			
		SELECT * FROM obter_regra_qtde_proc_exec(nr_atendimento_w, cd_procedimento_p, ie_origem_proced_p, 0, dt_execucao_w, cd_medico_executor_w, ie_acao_excesso_w, qt_excedida_w, ds_erro_w, cd_convenio_excesso_w, cd_categoria_excesso_w, nr_seq_proced_princ_p, cd_categoria_w, null, nr_interno_conta_ww, nr_cirurgia_propaci_w, null, cd_setor_proc_w, null) INTO STRICT ie_acao_excesso_w, qt_excedida_w, ds_erro_w, cd_convenio_excesso_w, cd_categoria_excesso_w;
																	
		if (ie_acao_excesso_w = 'E') then
			if (qt_excedida_w   > 0) then			
				
				if 	((qt_lancamento_w - qt_excedida_w) >= 0) then

					nr_seq_excedido_w := inserir_procedimento_paciente(cd_procedimento_p, qt_excedida_w, null, nr_seq_proced_princ_p, ie_origem_proced_p, cd_setor_atendimento_ww, nr_atendimento_w, cd_estab_w, nm_usuario_p, null, 'S', cd_medico_executor_w, nr_seq_interno_w, dt_execucao_w, cd_convenio_w, cd_categoria_w, nr_seq_excedido_w);
					CALL atualiza_preco_procedimento(nr_seq_excedido_w, cd_convenio_w, nm_usuario_p);

					select 	max(nr_interno_conta)
					into STRICT	nr_conta_w
					from 	procedimento_paciente
					where 	nr_sequencia = nr_seq_excedido_w;
					
					--Excluido pela regra de uso da funcao Cadastro de Convenios
					ds_texto_aux_w := substr(wheb_mensagem_pck.get_texto(300556),1,255);
					
					select	max(cd_motivo_exc_conta)
					into STRICT	cd_motivo_exc_conta_w
					from	parametro_faturamento
					where	cd_estabelecimento = cd_estab_w;
										
					CALL excluir_matproc_conta(nr_seq_excedido_w, nr_conta_w, coalesce(cd_motivo_exc_conta_w, 12), ds_texto_aux_w, 'P', nm_usuario_p);

					if ((qt_lancamento_w - qt_excedida_w) = 0) then
						delete	from procedimento_paciente
						where	nr_sequencia = nr_seq_proc_w;
					else
						qt_lancamento_w := qt_lancamento_w - qt_excedida_w;
						
						update	procedimento_paciente
						set		qt_procedimento = qt_lancamento_w
						where	nr_sequencia = nr_seq_proc_w;
					end if;
				end if;
										
			end if;
			
		elsif (ie_acao_excesso_w = 'P') then
			if (qt_excedida_w   > 0) then
				
				 SELECT * FROM obter_convenio_particular_pf(cd_estab_w, cd_convenio_w, '', dt_execucao_w, cd_convenio_glosa_w, cd_categoria_glosa_w) INTO STRICT cd_convenio_glosa_w, cd_categoria_glosa_w;
					
				update	procedimento_paciente
				set	nr_interno_conta	 = NULL,
					cd_convenio		= cd_convenio_glosa_w,
					cd_categoria		= cd_categoria_glosa_w
				where	nr_sequencia 		= nr_sequencia_w;
				
				
				CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_w, nm_usuario_p);
				
				CALL Ajustar_Conta_Vazia(nr_atendimento_w, nm_usuario_p);
				
			end if;
			
		elsif (ie_acao_excesso_w = 'Z') then
			if (qt_excedida_w   > 0) then
			
				update	procedimento_paciente
				set	vl_anestesista		= 0,
					vl_auxiliares		= 0,
					vl_custo_operacional	= 0,
					vl_materiais		= 0,
					vl_medico		= 0,
					vl_procedimento		= 0,
					ie_valor_informado	= 'S'
				where	nr_sequencia 		= nr_sequencia_w;
				
			
			end if;
		
		elsif (ie_acao_excesso_w = 'C') then
		
			if (qt_excedida_w   > 0) and
				(cd_convenio_excesso_w IS NOT NULL AND cd_convenio_excesso_w::text <> '' AND cd_categoria_excesso_w IS NOT NULL AND cd_categoria_excesso_w::text <> '') then
				update	procedimento_paciente
				set	nr_interno_conta	 = NULL,
					cd_convenio		= cd_convenio_excesso_w,
					cd_categoria		= cd_categoria_excesso_w
				where	nr_sequencia 		= nr_sequencia_w;
				
				
				CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_excesso_w, nm_usuario_p);
				
				CALL Ajustar_Conta_Vazia(nr_atendimento_w, nm_usuario_p);
			end if;
		elsif (coalesce(qt_excedida_w,0) = 0) then
					
			cd_local_estoque_w	:= obter_local_estoque_setor(Obter_Unidade_Atendimento(nr_atendimento_w,'IA','CS'), coalesce(wheb_usuario_pck.get_cd_estabelecimento,1));
				
			open C01;
			loop
			fetch C01 into	
				nr_sequencia_w,
				cd_material_w,
				cd_unidade_medida_w,
				qt_dose_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
								
				select	nextval('material_atend_paciente_seq')
				into STRICT	nr_seq_map_w
				;
				
				INSERT INTO MATERIAL_ATEND_PACIENTE( NR_SEQUENCIA, NR_ATENDIMENTO, DT_ENTRADA_UNIDADE
					, DT_ATENDIMENTO, CD_UNIDADE_MEDIDA, QT_MATERIAL, DT_ATUALIZACAO, NM_USUARIO, CD_CONVENIO
					, CD_CATEGORIA, DT_PRESCRICAO, CD_MATERIAL_PRESCRICAO, DS_OBSERVACAO, VL_MATERIAL
					, DT_VIGENCIA_TABELA, DT_ACERTO_CONTA, NR_PRESCRICAO, CD_LOCAL_ESTOQUE, DT_ATUALIZACAO_ESTOQUE
					, CD_ACAO, CD_SETOR_ATENDIMENTO, NR_CIRURGIA, NR_DOC_CONVENIO, QT_EXECUTADA, DT_CONTA
					, VL_UNITARIO, CD_CONTA_CONTABIL, QT_AJUSTE_CONTA, IE_VALOR_INFORMADO, CD_ESTABELECIMENTO_CUSTO
					, CD_TABELA_CUSTO, CD_SITUACAO_GLOSA, NR_LOTE_CONTABIL, CD_MATERIAL_CONVENIO, NR_INTERNO_CONTA
					, IE_GUIA_INFORMADA, CD_ESPECIALIDADE, NM_USUARIO_ORIGINAL, IE_EMITE_CONTA, CD_SETOR_RECEITA
					, CD_MATERIAL_EXEC, NR_SEQ_ATEPACU, IE_AUDITORIA, NR_SEQ_GRUPO_REC, NR_SEQ_COR_EXEC
					, IE_DISPERSAO, CD_SETOR_PACIENTE, CD_CGC_PRESTADOR, DT_ATUALIZACAO_NREC, NM_USUARIO_NREC 
					, IE_ORIGEM_PRECO, CD_MATERIAL, IE_TISS_TIPO_GUIA_DESP, IE_TISS_TIPO_DESPESA, CD_CGC_PRESTADOR_TISS
					, DS_MATERIAL_TISS, TX_MATERIAL, NR_SEQ_DOACAO, NR_SEQ_PROC_PRINC, CD_FUNCAO ) VALUES ( 
					nr_seq_map_w, nr_atendimento_p,  dt_entrada_unidade_ww,  clock_timestamp()
					, cd_unidade_medida_w, qt_dose_w,  clock_timestamp(), nm_usuario_p
					, cd_convenio_w, cd_categoria_w,  clock_timestamp(), cd_material_w
					, ''
					, null,  null,  null
					, null, cd_local_estoque_w,  null, '1'
					, cd_setor_atendimento_ww, null, null, null,  null 
					, null, null, 0, 'N', null
					, null, 0, 0, null, null 
					, 'N', null, nm_usuario_p, null, null 
					, cd_material_w, nr_seq_interno_w, 'N', null, 907 
 					, 'N', cd_setor_atendimento_ww, null, clock_timestamp(), nm_usuario_p 
					, 0, cd_material_w, null, null, null 
					, '', null, null, nr_seq_proc_w, 281); 		
				
				end;
			end loop;
			close C01;
		
		end if;
	
	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE adep_gerar_lancto_dispositivo ( nr_seq_proced_princ_p bigint, nr_seq_disp_proc_p bigint, nr_atendimento_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_procedimento_p bigint, nm_usuario_p text, ie_mudar_data_p text DEFAULT 'N') FROM PUBLIC;

