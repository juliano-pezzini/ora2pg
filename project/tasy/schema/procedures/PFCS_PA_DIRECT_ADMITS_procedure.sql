-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_pa_direct_admits ( cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_indicator_w              pfcs_panel.nr_seq_indicator%type := 119;
pfcs_panel_detail_seq_w         pfcs_panel_detail.nr_sequencia%type;
pfcs_detail_bed_seq_w           pfcs_detail_bed.nr_sequencia%type;
pfcs_panel_seq_w                pfcs_panel.nr_sequencia%type;
qt_admits_unit_w            numeric(20) :=0;

c01 CURSOR FOR
SELECT  enc.id_encounter nr_encounter,
    pfcs_get_human_name(pat.nr_sequencia, 'Patient') nm_patient,
    pat.patient_id id_patient,
    pat.birthdate dt_birthdate,
    round(months_between(coalesce(pat.deceased_date, clock_timestamp()), pat.birthdate)) qt_patient_age,
    pat.gender ds_gender,
    pfcs_get_edi_score(enc.nr_sequencia) qt_trs,
    pfcs_obs_contributor_pck.get_edi_vital_warnings(enc.nr_sequencia) ds_edi_vitals_warn,
    pfcs_obs_contributor_pck.get_edi_contributors(enc.nr_sequencia) ds_edi_contrb,
    pfcs_get_patient_diagnosis(enc.nr_sequencia) ds_problem,
    pfcs_get_human_name(pfcs_get_practitioner_seq(enc.nr_sequencia, '405279007'), 'Practitioner') nm_practioner,
    pfcs_get_code_status(pat.nr_sequencia, enc.nr_sequencia, 'S') cd_code_status,
    pfcs_get_special_requests(enc.nr_sequencia, uni.nr_seq_location,'E') ds_special_requests,
    pfcs_get_checklist(enc.nr_sequencia, pat.nr_sequencia, 'MPL') ds_care_status,
    pfcs_get_checklist(enc.nr_sequencia, pat.nr_sequencia, 'TOOLTIP') ds_checklist,
    pfcs_get_frequent_flyer(enc.nr_sequencia) ie_frequent_flyer,
    pfcs_get_lace_plus(enc.nr_sequencia, enc.nr_seq_organization) ds_readmission_risk,
    pfcs_obs_contributor_pck.get_laceplus(enc.nr_sequencia) ds_readm_risk_contrb,
    pfcs_obs_contributor_pck.get_freqflyer_visits(enc.nr_sequencia) ds_recur_pat_adm_data,
    pfcs_obs_contributor_pck.get_freqflyer_comorbidities(enc.nr_sequencia) ds_recur_pat_comorbd,
    pfcs_obs_contributor_pck.get_freqflyer_visit_reason(enc.nr_sequencia) ds_recur_pat_reasons,
    pfcs_get_recurring_patient(pat.nr_sequencia) ds_recur_pat,
    (sec.ds_setor_atendimento || '-' || uni.cd_unidade_basica || '-' || uni.cd_unidade_compl) ds_location,
    uni.ie_status_unidade cd_status,
    sec.ds_setor_atendimento ds_department,
    coalesce(psr.dt_authored_on, psr.dt_atualizacao) dt_request
from pfcs_encounter enc,
    pfcs_service_request psr,
    pfcs_patient pat,
    unidade_atendimento uni,
    setor_atendimento sec
where pat.nr_sequencia = enc.nr_seq_patient
    and enc.nr_sequencia = psr.nr_seq_encounter
    and psr.nr_seq_location = uni.nr_seq_location
    and uni.cd_setor_atendimento = sec.cd_setor_atendimento
    and pat.ie_active = '1'
    and upper(enc.si_status) = 'PLANNED'
    and (enc.cd_admit_source IS NOT NULL AND enc.cd_admit_source::text <> '')
    and upper(enc.cd_admit_source) not in ('HOSP-TRANS','EMD')
    and upper(psr.cd_service) = 'E0401'
    and upper(psr.si_intent) = 'PLAN'
    and upper(psr.si_status) = 'ACTIVE'
    and sec.cd_estabelecimento = cd_estabelecimento_p;

    
BEGIN  
for c01_w in c01 loop

  qt_admits_unit_w := qt_admits_unit_w + 1;

    select  nextval('pfcs_panel_detail_seq')
    into STRICT  pfcs_panel_detail_seq_w
;

    insert into pfcs_panel_detail(
        nr_sequencia,
        nm_usuario,
        dt_atualizacao,
        nm_usuario_nrec,
        dt_atualizacao_nrec,
        ie_situation,
        nr_seq_indicator,
        nr_seq_operational_level)
    values (
        pfcs_panel_detail_seq_w,
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        'T',
        nr_seq_indicator_w,
        cd_estabelecimento_p);

    insert into pfcs_detail_bed(
        nr_sequencia,
        nm_usuario,
        dt_atualizacao,
        nm_usuario_nrec,
        dt_atualizacao_nrec,
        nr_seq_detail,
        ds_location,
        ds_department,
        cd_status)
    values (
        nextval('pfcs_detail_bed_seq'),
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        pfcs_panel_detail_seq_w,
        c01_w.ds_location,
        c01_w.ds_department,
        c01_w.cd_status);

    insert into pfcs_detail_patient(
        nr_sequencia,
        nm_usuario,
        dt_atualizacao,
        nm_usuario_nrec,
        dt_atualizacao_nrec,
        nr_seq_detail,
        nr_encounter_varchar,
        id_patient,
        nm_patient,
        ds_gender,
        dt_birthdate,
        ds_age_range,
        ds_dnr_status,
        ds_special_request,
        ds_physician,
        ds_symptoms,
        dt_request,
        qt_edi_score,
        ds_care_status,
        ds_checklist,
        ie_freq_flyer,
        ds_readmission_risk,
        ds_readm_risk_contrb,
        ds_rec_pat_adm_data,
        ds_rec_pat_comorbd,
        ds_rec_pat_reasons,
        ds_edi_vitals_warn,
        ds_edi_contrb)
    values (
        nextval('pfcs_detail_patient_seq'),
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        pfcs_panel_detail_seq_w,
        c01_w.nr_encounter,
        c01_w.id_patient,
        c01_w.nm_patient,
        c01_w.ds_gender,
        c01_w.dt_birthdate,
        c01_w.qt_patient_age,
        c01_w.cd_code_status,
        c01_w.ds_special_requests,
        c01_w.nm_practioner,
        c01_w.ds_problem,
        c01_w.dt_request,
        c01_w.qt_trs,
        c01_w.ds_care_status,
        c01_w.ds_checklist,
        c01_w.ie_frequent_flyer,
        c01_w.ds_readmission_risk,
        c01_w.ds_readm_risk_contrb,
        c01_w.ds_recur_pat_adm_data,
        c01_w.ds_recur_pat_comorbd,
        c01_w.ds_recur_pat_reasons,
        c01_w.ds_edi_vitals_warn,
        c01_w.ds_edi_contrb);

end loop;

     := pfcs_pck.pfcs_generate_results(
        vl_indicator_p => qt_admits_unit_w, nr_seq_indicator_p => nr_seq_indicator_w, nr_seq_operational_level_p => cd_estabelecimento_p, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => pfcs_panel_seq_w);

    CALL pfcs_pck.pfcs_update_detail(
            nr_seq_indicator_p => nr_seq_indicator_w,
            nr_seq_panel_p => pfcs_panel_seq_w,
            nr_seq_operational_level_p => cd_estabelecimento_p,
            nm_usuario_p => nm_usuario_p);

    CALL pfcs_pck.pfcs_activate_records(
            nr_seq_indicator_p => nr_seq_indicator_w,
            nr_seq_operational_level_p => cd_estabelecimento_p,
            nm_usuario_p => nm_usuario_p);

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_pa_direct_admits ( cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

