-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_tipo_doc_obrig_pf ( cd_pessoa_fisica_p text, nm_usuario_p text) AS $body$
DECLARE


c01 CURSOR FOR
	SELECT	nr_seq_tipo_documentacao,
		ie_controle,
		ie_validade
	from	regra_tipo_doc_obrig_pf
	where	ie_situacao = 'A'
	and	substr(obter_se_regra_tipo_doc_lib(nr_sequencia),1,1) = 'S';

c01_w c01%rowtype;

c02 CURSOR FOR
	SELECT	a.nr_sequencia,
		coalesce(b.ie_cart_convenio, 'N') ie_cart_convenio
	from	tipo_documentacao b,
		pessoa_documentacao a
	where	a.nr_seq_documento = b.nr_sequencia
	and	a.cd_pessoa_fisica = cd_pessoa_fisica_p
	and	a.nr_seq_documento = c01_w.nr_seq_tipo_documentacao
	and	coalesce(a.ie_situacao,'A') = 'A';

c02_w c02%rowtype;

qt_registro_w  		bigint;
ds_inconsistencia_w 	varchar(255);


BEGIN

delete
from	pessoa_fisica_doc_inconsis
where	cd_pessoa_fisica = cd_pessoa_fisica_p;

commit;

if (coalesce(cd_pessoa_fisica_p, 'X') <> 'X') then
	begin

	open c01;
	loop
	fetch c01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		select	count(1)
		into STRICT	qt_registro_w
		from	pessoa_documentacao
		where	cd_pessoa_fisica = cd_pessoa_fisica_p
		and	nr_seq_documento = c01_w.nr_seq_tipo_documentacao
		and	coalesce(ie_situacao,'A') = 'A';

		if (qt_registro_w = 0) then
			begin
			insert into pessoa_documentacao(
				nr_seq_documento,
				ie_entregue,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				ie_situacao,
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				cd_pessoa_fisica,
				dt_entrega)
			values (	c01_w.nr_seq_tipo_documentacao,
				'N',
				nm_usuario_p,
				clock_timestamp(),
				'A',
				nextval('pessoa_documentacao_seq'),
				clock_timestamp(),
				nm_usuario_p,
				cd_pessoa_fisica_p,
				clock_timestamp());
			end;
		end if;

		open c02;
		loop
		fetch c02 into
			c02_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin

			ds_inconsistencia_w := 'X';

			select	sum(qt_registros) qt_registros
			into STRICT	qt_registro_w
			from (SELECT	count(*) qt_registros
				from	pessoa_doc_foto
				where	nr_seq_pessoa_doc = c02_w.nr_sequencia
				
union all

				SELECT	count(*) qt_registros
				from	pessoa_fisica_arquivo
				where	nr_seq_documentacao = c02_w.nr_sequencia) alias3;

			if (qt_registro_w = 0) then
				begin
				ds_inconsistencia_w := substr(obter_desc_tipo_documentacao(c01_w.nr_seq_tipo_documentacao),1,255);
				end;
			end if;

			if	(c01_w.ie_validade = 'S' AND c02_w.ie_cart_convenio = 'S') then
				begin

				select	count(1)
				into STRICT	qt_registro_w
				from	pessoa_titular_convenio
				where	dt_validade_carteira < clock_timestamp()
				and	cd_pessoa_fisica = cd_pessoa_fisica_p
				and	nr_seq_pessoa_doc = c02_w.nr_sequencia;


				if (qt_registro_w > 0) then
					begin
					ds_inconsistencia_w := wheb_mensagem_pck.get_texto(305792); -- Carteirinha do convÃªnio vencida
					end;
				end if;

				end;
			end if;
			if (ds_inconsistencia_w <> 'X') then
				begin
				insert into pessoa_fisica_doc_inconsis(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_pessoa_fisica,
					cd_inconsistencia,
					ds_inconsistencia,
					nr_seq_tipo_documentacao)
				values (	nextval('pessoa_fisica_doc_inconsis_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_pessoa_fisica_p,
					c01_w.ie_controle,
					ds_inconsistencia_w,
					c01_w.nr_seq_tipo_documentacao);
				end;
			end if;

			end;
		end loop;
		close c02;
		end;
	end loop;
	close c01;

	commit;
	end;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_tipo_doc_obrig_pf ( cd_pessoa_fisica_p text, nm_usuario_p text) FROM PUBLIC;

