-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_impor_arq_a100_xml_simpl ( nm_arquivo_p text, nm_usuario_p text) AS $body$
DECLARE



dt_geracao_w		timestamp;
cd_uni_destino_w	ptu_intercambio_lote_receb.cd_unimed_destino%type;
cd_uni_origem_w		ptu_intercambio_lote_receb.cd_unimed_origem%type;
dt_ini_mov_w		varchar(8);
dt_fim_mov_w		varchar(8);
nr_transacao_w		ptu_intercambio_lote_receb.nr_transacao%type;
nr_versao_transacao_w	ptu_intercambio_lote_receb.nr_versao_transacao%type;
nm_arquivo_w		varchar(100);
nr_seq_lote_w		ptu_intercambio_lote_receb.nr_sequencia%type;
/*beneficiário*/

cd_unimed_w		ptu_intercambio_benef_simp.cd_unimed%type;
id_benef_w		ptu_intercambio_benef_simp.cd_beneficiario%type;
cd_cpf_w		ptu_intercambio_benef_simp.cd_cpf%type;
nm_completo_w		ptu_intercambio_benef_simp.nm_completo%type;
dt_nascimento_w		timestamp;
tp_contrato_local_w	ptu_intercambio_benef_simp.ie_tipo_contrato_local%type;
dt_ini_comp_risco_w	timestamp;
dt_fim_comp_risco_w	timestamp;
ds_ptu_w		varchar(4);
ds_conteudo_w		varchar(1000);
cd_un_origem_benef_w	ptu_intercambio_benef_simp.cd_unimed_origem%type;
cd_un_destino_benef_w	ptu_intercambio_benef_simp.cd_unimed_destino%type;

C01 CURSOR FOR
	SELECT	ds_conteudo,
		ie_tipo_registro,
		ie_tipo_compartilhamento,
		ie_tipo_repasse,
		ie_tipo_movimento,
		ie_proprio_recebido
	from	w_importar_xml_a100
	where	nm_usuario = nm_usuario_p
	order by 2;

BEGIN

for c_01 in C01 loop
	begin
	ds_conteudo_w	:= c_01.ds_conteudo;
	
	if (position('ptu:'  c_01.ds_conteudo) > 0 ) then
		ds_ptu_w := 'ptu:';
	else
		ds_ptu_w := '';
	end if;
	
	if (c_01.ie_tipo_registro = '1') then --Cabeçalho
		dt_geracao_w		:= to_date(pls_extrair_dado_tag_xml(c_01.ds_conteudo,'<'||ds_ptu_w||'dt_geracao>'),'yyyymmdd');
		cd_uni_destino_w	:= pls_extrair_dado_tag_xml(c_01.ds_conteudo,'<'||ds_ptu_w||'cd_Uni_Destino>');
		cd_uni_origem_w		:= pls_extrair_dado_tag_xml(c_01.ds_conteudo,'<'||ds_ptu_w||'cd_Uni_Origem>');
		dt_ini_mov_w		:= pls_extrair_dado_tag_xml(c_01.ds_conteudo,'<'||ds_ptu_w||'dt_Ini_Mov>');
		dt_fim_mov_w		:= pls_extrair_dado_tag_xml(c_01.ds_conteudo,'<'||ds_ptu_w||'dt_Fim_Mov>');
		nr_transacao_w		:= pls_extrair_dado_tag_xml(c_01.ds_conteudo,'<'||ds_ptu_w||'nr_transacao>');
		nr_versao_transacao_w	:= pls_extrair_dado_tag_xml(c_01.ds_conteudo,'<'||ds_ptu_w||'nrVerTra_PTU>');
		nm_arquivo_w		:= obter_nome_arquivo(nm_arquivo_p, 'N');
		
		insert	into	ptu_intercambio_lote_receb(	nr_sequencia, cd_estabelecimento, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				nr_transacao, nr_versao_transacao, cd_unimed_origem, cd_unimed_destino, dt_geracao, dt_importacao,
				nm_arquivo)
			values (	nextval('ptu_intercambio_lote_receb_seq'), wheb_usuario_pck.get_cd_estabelecimento, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
				nr_transacao_w, nr_versao_transacao_w, cd_uni_origem_w, cd_uni_destino_w, dt_geracao_w, clock_timestamp(),
				nm_arquivo_w)
			returning nr_sequencia into nr_seq_lote_w;
	elsif (c_01.ie_tipo_registro = '2') then
		cd_unimed_w		:= pls_extrair_dado_tag_xml(c_01.ds_conteudo,'<'||ds_ptu_w||'cd_Unimed>');
		id_benef_w		:= pls_extrair_dado_tag_xml(c_01.ds_conteudo,'<'||ds_ptu_w||'id_Benef>');
		cd_cpf_w		:= pls_extrair_dado_tag_xml(c_01.ds_conteudo,'<'||ds_ptu_w||'cd_cpf>');
		nm_completo_w		:= pls_extrair_dado_tag_xml(c_01.ds_conteudo,'<'||ds_ptu_w||'nm_compl_benef>');
		dt_nascimento_w		:= to_date(pls_extrair_dado_tag_xml(c_01.ds_conteudo,'<'||ds_ptu_w||'dt_Nasc>'),'yyyymmdd');
		tp_contrato_local_w	:= pls_extrair_dado_tag_xml(c_01.ds_conteudo,'<'||ds_ptu_w||'tp_contr_local>');
		dt_ini_comp_risco_w	:= to_date(pls_extrair_dado_tag_xml(c_01.ds_conteudo,'<'||ds_ptu_w||'dt_ini_comp_risco>'),'yyyymmdd');
		dt_fim_comp_risco_w	:= to_date(pls_extrair_dado_tag_xml(c_01.ds_conteudo,'<'||ds_ptu_w||'dt_fim_comp_risco>'),'yyyymmdd');
		cd_un_origem_benef_w	:= pls_extrair_dado_tag_xml(c_01.ds_conteudo,'<'||ds_ptu_w||'cd_Uni_Origem>');
		cd_un_destino_benef_w	:= pls_extrair_dado_tag_xml(c_01.ds_conteudo,'<'||ds_ptu_w||'cd_Uni_Destino>');
		
		insert	into	ptu_intercambio_benef_simp(	nr_sequencia, nr_seq_intercambio, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				cd_unimed, cd_beneficiario, cd_cpf, nm_completo, dt_nascimento, ie_tipo_contrato_local, dt_compartilhamento, dt_fim_compartilhamento,
				nr_seq_segurado, cd_usuario_plano, ie_status, nm_usuario_cancelamento, dt_cancelamento, nr_seq_motivo_rejeicao, ie_proprio_recebido,
				nr_seq_lote_receb, cd_unimed_destino, cd_unimed_origem)
			values (	nextval('ptu_intercambio_benef_simp_seq'), null, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
				cd_unimed_w, id_benef_w, cd_cpf_w, nm_completo_w, dt_nascimento_w, tp_contrato_local_w,dt_ini_comp_risco_w, dt_fim_comp_risco_w,
				null, lpad(cd_unimed_w,4,'0') || lpad(id_benef_w,13,'0'), 'I', null, null, null, c_01.ie_proprio_recebido,
				nr_seq_lote_w, coalesce(cd_un_destino_benef_w,cd_uni_destino_w) , coalesce(cd_un_origem_benef_w,cd_uni_origem_w));
	end if;
	end;
end loop;

CALL ptu_a100_simplificado_pck.consistir_lote(nr_seq_lote_w, wheb_usuario_pck.get_cd_estabelecimento, nm_usuario_p);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_impor_arq_a100_xml_simpl ( nm_arquivo_p text, nm_usuario_p text) FROM PUBLIC;

