-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE excluir_diluicao ( nr_prescricao_p bigint, nr_sequencia_p bigint, cd_perfil_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text ) AS $body$
DECLARE


ie_existe_w	varchar(1);
ie_reg_alteracao_farm_w	varchar(1);
ie_reg_alteracao_med_w	varchar(1);
cd_material_w	integer;
qt_dose_w	double precision;
qt_solucao_w	double precision;
cd_unidade_medida_dose_w varchar(30);



BEGIN

ie_reg_alteracao_farm_w := obter_param_usuario(7010, 48, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_reg_alteracao_farm_w);
ie_reg_alteracao_med_w := obter_param_usuario(924, 527, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_reg_alteracao_med_w);

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	begin

	select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_existe_w
	from 	prescr_medica
	where 	nr_prescricao = nr_prescricao_p;

	if (ie_existe_w = 'S') then
		begin

		select  max(cd_material),
				max(qt_dose),
				max(qt_solucao),
				max(cd_unidade_medida_dose)
		into STRICT	cd_material_w,
				qt_dose_w,
				qt_solucao_w,
				cd_unidade_medida_dose_w
		from    prescr_material
		where   nr_prescricao           = nr_prescricao_p
		and     nr_sequencia_diluicao   = nr_sequencia_p
		and     ie_agrupador            = 3;

		delete   FROM prescr_material
		where    nr_prescricao           = nr_prescricao_p
		and      nr_sequencia_diluicao   = nr_sequencia_p
		and      ie_agrupador            = 3;

		if (coalesce(wheb_usuario_pck.get_cd_funcao,0) <> 7010) then
			update   prescr_material
			set      qt_hora_aplicacao  = NULL, qt_min_aplicacao  = NULL, qt_solucao  = NULL
			where    nr_prescricao     = nr_prescricao_p
			and      nr_sequencia      = nr_sequencia_p;
		else
			update   prescr_material
			set      qt_hora_aplicacao  = NULL, qt_min_aplicacao  = NULL, qt_solucao  = NULL, ds_diluicao_edit  = NULL
			where    nr_prescricao     = nr_prescricao_p
			and      nr_sequencia      = nr_sequencia_p;
		end if;

		if (ie_reg_alteracao_farm_w = 'S') or (ie_reg_alteracao_med_w = 'S') then
			CALL gerar_historico_dil_red_rec('N', 3, 3, nr_prescricao_p, nr_sequencia_p, cd_material_w, 0, qt_dose_w, 0, qt_solucao_w, 0, cd_unidade_medida_dose_w,
			'', cd_estabelecimento_p, nm_usuario_p);
		end if;

		end;
	end if;
	end;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE excluir_diluicao ( nr_prescricao_p bigint, nr_sequencia_p bigint, cd_perfil_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text ) FROM PUBLIC;

