-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rep_copia_npt_adulta_prot ( nr_prescricao_orig_p bigint, nr_prescricao_p bigint, nr_seq_regra_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_pac_elem_mat_w	bigint;
qt_dia_npt_w		bigint;
nr_nut_pac_w		bigint;
nut_pac_elem_w		bigint;
nr_seq_pac_elem_w	bigint;
ie_copiar_w		varchar(10);
ie_copia_valid_igual_w	varchar(1);
nr_horas_validade_w	    prescr_medica.nr_horas_validade%type;
ie_prim_horario_setor_w	varchar(10);
hr_setor_w		varchar(10);
cd_setor_atendimento_w	bigint;
cd_estabelecimento_w	smallint;
nr_atendimento_w	bigint;
dt_prescricao_www	timestamp;
dt_inicio_prescr_w	timestamp;
dt_primeiro_horario_w	timestamp;
dt_validade_origem_w	timestamp;
dt_validade_nova_w	timestamp;
nr_atend_prescr_origem_w	bigint;
VarPrimHorNPT_w				varchar(15);
ie_horas_fixas_npt_w	varchar(1);
qt_hora_inf_w		nut_pac.qt_hora_inf%type;

c03 CURSOR FOR
SELECT	nr_sequencia
from	nut_pac_elemento
where	nr_seq_nut_pac	= (	select	min(b.nr_sequencia)
				from	nut_pac b
				where	b.nr_prescricao = nr_prescricao_orig_p
				and	coalesce(b.dt_suspensao::text, '') = ''
				and	coalesce(ie_npt_adulta,'N') = 'S')
order by nr_sequencia;

c04 CURSOR FOR
SELECT	nr_sequencia
from	nut_pac_elem_mat
where	nr_seq_nut_pac	= (	Select	min(b.nr_sequencia)
				from	nut_pac b
				where	b.nr_prescricao = nr_prescricao_orig_p
				and	coalesce(b.dt_suspensao::text, '') = ''
				and	coalesce(ie_npt_adulta,'N') = 'S')
order by nr_sequencia;


BEGIN

select	coalesce(max(ie_copiar),'S')
into STRICT	ie_copiar_w
from	rep_regra_copia_crit
where	nr_seq_regra	= nr_seq_regra_p
and	ie_tipo_item	= 'NPA';

VarPrimHorNPT_w := Obter_Param_Usuario(924, 918, obter_perfil_ativo, nm_usuario_p, Obter_estab_usuario(nm_usuario_p), VarPrimHorNPT_w);
ie_horas_fixas_npt_w := Obter_Param_Usuario(924, 1149, obter_perfil_ativo, nm_usuario_p, Obter_estab_usuario(nm_usuario_p), ie_horas_fixas_npt_w);

if (ie_copiar_w	= 'S') then

	nr_atend_prescr_origem_w	:= obter_atendimento_prescr(nr_prescricao_orig_p);

	select	coalesce(max(a.qt_dia_npt),0) + 1
	into STRICT	qt_dia_npt_w
	from	nut_pac a,
		prescr_medica b
	where	a.nr_prescricao = b.nr_prescricao
	and	b.dt_prescricao between clock_timestamp() - interval '7 days' and trunc(clock_timestamp())
	and	b.nr_atendimento = nr_atend_prescr_origem_w
	and	coalesce(a.ie_npt_adulta,'N') = 'S';

	Select	nextval('nut_pac_seq')
	into STRICT	nr_nut_pac_w
	;

	select  max(nr_horas_validade)
	into STRICT 	nr_horas_validade_w
	from 	prescr_medica
	where 	nr_prescricao = nr_prescricao_p;

	qt_hora_inf_w	:= coalesce(nr_horas_validade_w,24);

	Insert into nut_pac(
		cd_intervalo,
		ds_diagnostico,
		ds_justificativa,
		ds_orientacao,
		dt_atualizacao,
		dt_atualizacao_nrec,
		hr_prim_horario,
		ie_ajustar_potassio,
		ie_ajustar_sodio,
		ie_bomba_infusao,
		ie_calcula_vel,
		ie_calculo_auto,
		ie_correcao,
		ie_dispositivo_infusao,
		ie_emissao,
		ie_forma,
		ie_forma_infusao,
		ie_gera_produto,
		ie_npt_adulta,
		ie_permite_alteracao,
		ie_suplementacao,
		ie_suspenso,
		ie_via_administracao,
		nm_usuario,
		nm_usuario_nrec,
		nr_prescricao,
		nr_prescricao_original,
		nr_seq_anterior,
		nr_seq_assinatura,
		nr_seq_fator_ativ,
		nr_seq_fator_stress,
		nr_seq_interf_farm,
		nr_seq_protocolo,
		nr_sequencia,
		pr_carboidrato,
		pr_conc_glic_solucao,
		pr_conc_lipidio_solucao,
		pr_conc_proteina_solucao,
		pr_lipidio,
		pr_npt,
		pr_proteina,
		qt_altura_cm,
		qt_aporte_hidrico_diario,
		qt_dia_npt,
		qt_equipo,
		qt_fase_npt,
		qt_gotejo_npt,
		qt_grama_nitrogenio,
		qt_grama_proteina_kg_dia,
		qt_hora_inf,
		qt_idade_ano,
		qt_idade_dia,
		qt_idade_mes,
		qt_kcal_carboidrato,
		qt_kcal_kg,
		qt_kcal_kg_ped,
		qt_kcal_lipidio,
		qt_kcal_nao_proteico,
		qt_kcal_proteico,
		qt_kcal_proteina,
		qt_kcal_total,
		qt_min_inf,
		qt_multiplicador,
		qt_nec_hidrica_diaria,
		qt_nec_hidrica_diaria_ped,
		qt_nec_kcal_dia,
		qt_nec_kcal_kg_dia,
		qt_osmolaridade_total,
		qt_peso,
		qt_peso_ajustado,
		qt_peso_calorico,
		qt_peso_ideal,
		qt_rel_cal_nit,
		qt_tempo_etapa,
		qt_tmb,
		qt_vel_inf_glicose,
		qt_volume_adep,
		qt_volume_diario,
		nr_sequencia_anterior,
		ie_editado)
	SELECT	cd_intervalo,
		ds_diagnostico,
		ds_justificativa,
		ds_orientacao,
		clock_timestamp(),
		clock_timestamp(),
		coalesce(VarPrimHorNPT_w, hr_prim_horario),
		ie_ajustar_potassio,
		ie_ajustar_sodio,
		ie_bomba_infusao,
		ie_calcula_vel,
		ie_calculo_auto,
		ie_correcao,
		ie_dispositivo_infusao,
		0,
		ie_forma,
		ie_forma_infusao,
		ie_gera_produto,
		ie_npt_adulta,
		ie_permite_alteracao,
		ie_suplementacao,
		'N',
		ie_via_administracao,
		nm_usuario_p,
		nm_usuario_p,
		nr_prescricao_p,
		nr_prescricao_orig_p,
		nr_seq_anterior,
		nr_seq_assinatura,
		nr_seq_fator_ativ,
		nr_seq_fator_stress,
		nr_seq_interf_farm,
		nr_seq_protocolo,
		nr_nut_pac_w,
		pr_carboidrato,
		pr_conc_glic_solucao,
		pr_conc_lipidio_solucao,
		pr_conc_proteina_solucao,
		pr_lipidio,
		pr_npt,
		pr_proteina,
		qt_altura_cm,
		qt_aporte_hidrico_diario,
		qt_dia_npt_w,
		qt_equipo,
		qt_fase_npt,
		CASE WHEN ie_calculo_auto='S' THEN round(dividir_sem_round(qt_volume_diario, CASE WHEN ie_horas_fixas_npt_w='S' THEN qt_hora_inf_w  ELSE qt_hora_inf END ))  ELSE qt_gotejo_npt END ,
		qt_grama_nitrogenio,
		qt_grama_proteina_kg_dia,
		CASE WHEN ie_horas_fixas_npt_w='S' THEN qt_hora_inf_w  ELSE qt_hora_inf END ,
		qt_idade_ano,
		qt_idade_dia,
		qt_idade_mes,
		qt_kcal_carboidrato,
		qt_kcal_kg,
		qt_kcal_kg_ped,
		qt_kcal_lipidio,
		qt_kcal_nao_proteico,
		qt_kcal_proteico,
		qt_kcal_proteina,
		qt_kcal_total,
		qt_min_inf,
		qt_multiplicador,
		qt_nec_hidrica_diaria,
		qt_nec_hidrica_diaria_ped,
		qt_nec_kcal_dia,
		qt_nec_kcal_kg_dia,
		qt_osmolaridade_total,
		qt_peso,
		qt_peso_ajustado,
		qt_peso_calorico,
		qt_peso_ideal,
		qt_rel_cal_nit,
		qt_tempo_etapa,
		qt_tmb,
		qt_vel_inf_glicose,
		qt_volume_adep,
		qt_volume_diario,
		nr_sequencia,
		ie_editado
	from	nut_pac
	where	nr_prescricao	= nr_prescricao_orig_p
	and	coalesce(DT_SUSPENSAO::text, '') = ''
	and	nr_sequencia	= (	SELECT	min(b.nr_sequencia)
					from	nut_pac b
					where	b.nr_prescricao = nr_prescricao_orig_p
					and	coalesce(DT_SUSPENSAO::text, '') = ''
					and	coalesce(ie_npt_adulta,'N') = 'S');




	open c03;
	loop
	fetch c03 into
		nut_pac_elem_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
		select	nextval('nut_pac_elemento_seq')
		into STRICT	nr_seq_pac_elem_w
		;

		Insert into nut_pac_elemento(
			nr_sequencia,
			nr_seq_nut_pac,
			nr_seq_elemento,
			dt_atualizacao,
			nm_usuario,
			cd_unidade_medida,
			qt_elem_kg_dia,
			qt_diaria,
			pr_total,
			qt_kcal,
			ie_prim_fase,
			ie_seg_fase,
			ie_terc_fase,
			ie_quar_fase,
			ie_npt,
			qt_protocolo)
		SELECT	nr_seq_pac_elem_w,
			nr_nut_pac_w,
			nr_seq_elemento,
			clock_timestamp(),
			nm_usuario_p,
			cd_unidade_medida,
			qt_elem_kg_dia,
			qt_diaria,
			pr_total,
			qt_kcal,
			ie_prim_fase,
			ie_seg_fase,
			ie_terc_fase,
			ie_quar_fase,
			ie_npt,
			qt_protocolo
		from	nut_pac_elemento
		where	nr_sequencia = nut_pac_elem_w;
		end;
	end loop;
	close c03;
	open c04;
	loop
	fetch c04 into
		nr_seq_pac_elem_mat_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */

		insert into nut_pac_elem_mat(
			cd_material,
			cd_unidade_medida,
			dt_atualizacao,
			dt_atualizacao_nrec,
			nm_usuario,
			nm_usuario_nrec,
			nr_seq_elem_mat,
			nr_seq_interf_farm,
			nr_seq_nut_pac,
			nr_seq_pac_elem,
			nr_sequencia,
			qt_dose,
			qt_protocolo,
			qt_vol_cor,
			qt_volume,
			qt_vol_1_fase,
			qt_vol_2_fase,
			qt_vol_3_fase,
			qt_vol_4_fase)
		SELECT	cd_material,
			cd_unidade_medida,
			clock_timestamp(),
			clock_timestamp(),
			nm_usuario_p,
			nm_usuario_p,
			nr_seq_elem_mat,
			nr_seq_interf_farm,
			nr_nut_pac_w,
			nr_seq_pac_elem,
			nextval('nut_pac_elem_mat_seq'),
			qt_dose,
			qt_protocolo,
			qt_vol_cor,
			qt_volume,
			qt_vol_1_fase,
			qt_vol_2_fase,
			qt_vol_3_fase,
			qt_vol_4_fase
		from	nut_pac_elem_mat
		where	nr_sequencia	= nr_seq_pac_elem_mat_w;

	end loop;
	close c04;

	commit;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rep_copia_npt_adulta_prot ( nr_prescricao_orig_p bigint, nr_prescricao_p bigint, nr_seq_regra_p bigint, nm_usuario_p text) FROM PUBLIC;

