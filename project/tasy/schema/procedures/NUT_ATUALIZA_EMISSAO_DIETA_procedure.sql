-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE nut_atualiza_emissao_dieta (dt_servico_p timestamp) AS $body$
DECLARE


nr_seq_dieta_w		bigint;
nr_seq_presc_w		bigint;
nr_seq_nut_impress_w	nut_impressao_relatorio.nr_sequencia%type;

c01 CURSOR FOR
	SELECT	c.nr_sequencia
	from	nut_atend_serv_dia a,
		prescr_medica b,
		prescr_dieta c,
		nut_servico d
	where	a.nr_atendimento = b.nr_atendimento
	and	((a.dt_servico between b.dt_inicio_prescr and b.dt_validade_prescr) or (coalesce(b.dt_validade_prescr::text, '') = ''))
	and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	and	b.nr_prescricao = c.nr_prescricao
	and	a.nr_seq_servico = d.nr_sequencia
	and	exists (SELECT	max(1)
			from	nut_servico_horario e
			where	e.nr_seq_servico = d.nr_sequencia
			and	dt_servico_p between to_date(to_char(dt_servico_p,'dd/mm/yyyy')||coalesce(e.ds_horario_corte_inic,' 00:00'),'dd/mm/yyyy hh24:mi') and to_date(to_char(dt_servico_p,'dd/mm/yyyy')||coalesce(e.ds_horario_corte_fim,' 23:59'),'dd/mm/yyyy hh24:mi')  LIMIT 1)
	and	trunc(a.dt_servico) = trunc(dt_servico_p)
	and	c.ie_urgencia = 'S'
	and	coalesce(c.dt_impressao_nutricao::text, '') = ''
	group by c.nr_sequencia;

c02 CURSOR FOR
	SELECT	c.nr_prescricao nr_seq
	FROM	prescr_medica b,
		prescr_dieta c
	WHERE	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	AND	b.nr_prescricao = c.nr_prescricao
	AND	c.ie_urgencia = 'S'
	AND	coalesce(c.dt_impressao_nutricao::text, '') = ''
	AND 	trunc(b.dt_prescricao) = trunc(clock_timestamp());

c03 CURSOR FOR
	SELECT	w.nr_prescricao nr_seq
	FROM	prescr_medica w,
		rep_jejum q
	WHERE	(w.dt_liberacao IS NOT NULL AND w.dt_liberacao::text <> '')
	AND	trunc(w.dt_prescricao) 	= trunc(clock_timestamp())
	AND	w.nr_prescricao 	= q.nr_prescricao
	AND 	NOT EXISTS (SELECT 1
				from 	nut_impressao_relatorio t
				where	t.ie_tipo_relatorio = 'TJ'
				and	t.nr_prescricao	    = q.nr_prescricao);


BEGIN

open c01;
loop
fetch c01 into nr_seq_dieta_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		update	prescr_dieta
		set	dt_impressao_nutricao = dt_servico_p
		where	nr_sequencia = nr_seq_dieta_w;

		end;
end loop;
close c01;

open c02;
loop
fetch c02 into nr_seq_presc_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		update	prescr_dieta
		set	dt_impressao_nutricao = clock_timestamp()
		where	nr_prescricao = nr_seq_presc_w;

		end;
end loop;
close c02;

if (Obter_Valor_Param_Usuario(10028, 10, Obter_Perfil_Ativo, Wheb_Usuario_Pck.get_nm_usuario, 0) = 'S')then

	open c03;
	loop
	fetch c03 into nr_seq_presc_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin

			select	nextval('nut_impressao_relatorio_seq')
			into STRICT	nr_seq_nut_impress_w
			;

			insert into nut_impressao_relatorio(nr_sequencia, dt_atualizacao, dt_atualizacao_nrec,
								dt_impressao, nm_usuario, ie_tipo_relatorio,
								nr_prescricao)
			values (nr_seq_nut_impress_w, clock_timestamp(), clock_timestamp(),
				clock_timestamp(), Wheb_Usuario_Pck.get_nm_usuario, 'TJ',
				nr_seq_presc_w);

			end;
	end loop;
	close c03;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nut_atualiza_emissao_dieta (dt_servico_p timestamp) FROM PUBLIC;

