-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_reativar_ocor_conta ( nr_seq_ocorrencia_p bigint, nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nm_usuario_p text, qt_excedido_p pls_conta_proc.qt_excedido%type default null, nr_seq_oc_cta_comb_p pls_ocorrencia_benef.nr_seq_oc_cta_comb%type default null) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Encapsular a reativação das ocorrências de conta médica, pois agora terá de ser
feito em duas rotinas diferentes
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_conta_pos_estab_w	bigint;


BEGIN

if (nr_seq_ocorrencia_p IS NOT NULL AND nr_seq_ocorrencia_p::text <> '') then
	if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
		update	pls_ocorrencia_benef
		set	ie_situacao		= 'A',
			ie_forma_inativacao	 = NULL,
			qt_excedido		= qt_excedido_p,
			nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p
		where	nr_seq_ocorrencia	= nr_seq_ocorrencia_p
		and	nr_seq_conta		= nr_seq_conta_p
		and	nr_seq_proc		= nr_seq_conta_proc_p
		and (coalesce(ie_forma_inativacao::text, '') = '' or ie_forma_inativacao 	= 'S')
		and (coalesce(ie_lib_manual::text, '') = '' or ie_lib_manual 	<> 'S');

		update	pls_conta_glosa
		set	ie_situacao		= 'A',
			ie_forma_inativacao 	 = NULL
		where	nr_seq_conta_proc	= nr_seq_conta_proc_p
		and (coalesce(ie_forma_inativacao::text, '') = '' or ie_forma_inativacao = 'S')
		and	nr_seq_ocorrencia	= nr_seq_ocorrencia_p
		and	(nr_seq_ocorrencia_benef IS NOT NULL AND nr_seq_ocorrencia_benef::text <> '')
		and (coalesce(ie_lib_manual::text, '') = '' or ie_lib_manual <> 'S');
		/*Necessário replicar o código para os casos onde o item foi liberado pelo usuário e pelo sistema*/

		update	pls_ocorrencia_benef
		set	ie_situacao		= 'I',
			ie_forma_inativacao	= 'U'
		where	nr_seq_ocorrencia	= nr_seq_ocorrencia_p
		and	nr_seq_conta		= nr_seq_conta_p
		and	nr_seq_proc		= nr_seq_conta_proc_p
		and	ie_forma_inativacao 	= 'US'
		and (coalesce(ie_lib_manual::text, '') = '' or ie_lib_manual 	<> 'S');

		update	pls_conta_glosa
		set	ie_situacao		= 'I',
			ie_forma_inativacao 	= 'U'
		where	nr_seq_conta_proc	= nr_seq_conta_proc_p
		and	ie_forma_inativacao 	= 'US'
		and	nr_seq_ocorrencia	= nr_seq_ocorrencia_p
		and	(nr_seq_ocorrencia_benef IS NOT NULL AND nr_seq_ocorrencia_benef::text <> '')
		and (coalesce(ie_lib_manual::text, '') = '' or ie_lib_manual <> 'S');

		begin
			select	a.nr_sequencia
			into STRICT	nr_seq_conta_pos_estab_w
			from	pls_conta_pos_estabelecido a
			where	a.nr_seq_conta_proc	= nr_seq_conta_proc_p
			and	((a.ie_situacao	= 'A') or (coalesce(a.ie_situacao::text, '') = ''));
		exception
			when others then
			nr_seq_conta_pos_estab_w	:= null;
		end;

		if (nr_seq_conta_pos_estab_w IS NOT NULL AND nr_seq_conta_pos_estab_w::text <> '') then
			update	pls_ocorrencia_benef
			set	ie_situacao		= 'A',
				ie_forma_inativacao	 = NULL,
				qt_excedido		= qt_excedido_p,
				nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p
			where	nr_seq_ocorrencia	= nr_seq_ocorrencia_p
			and	nr_seq_conta_pos_estab	= nr_seq_conta_pos_estab_w
			and	(nr_seq_ocor_pag IS NOT NULL AND nr_seq_ocor_pag::text <> '')
			and (coalesce(ie_forma_inativacao::text, '') = '' or ie_forma_inativacao = 'S');

			update	pls_ocorrencia_benef
			set	ie_situacao		= 'I',
				ie_forma_inativacao	= 'U'
			where	nr_seq_ocorrencia	= nr_seq_ocorrencia_p
			and	nr_seq_conta_pos_estab	= nr_seq_conta_pos_estab_w
			and	(nr_seq_ocor_pag IS NOT NULL AND nr_seq_ocor_pag::text <> '')
			and	ie_forma_inativacao 	= 'US';

		end if;
	elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
		update	pls_ocorrencia_benef
		set	ie_situacao 		= 'A',
			ie_forma_inativacao	 = NULL,
			qt_excedido		= qt_excedido_p,
			nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p
		where	nr_seq_ocorrencia	= nr_seq_ocorrencia_p
		and	nr_seq_conta		= nr_seq_conta_p
		and	nr_seq_mat		= nr_seq_conta_mat_p
		and (coalesce(ie_forma_inativacao::text, '') = '' or ie_forma_inativacao = 'S')
		and (coalesce(ie_lib_manual::text, '') = '' or ie_lib_manual <> 'S');

		update	pls_conta_glosa
		set	ie_situacao		= 'A',
			ie_forma_inativacao 	 = NULL
		where	nr_seq_conta_mat	= nr_seq_conta_mat_p
		and (coalesce(ie_forma_inativacao::text, '') = '' or ie_forma_inativacao = 'S')
		and	nr_seq_ocorrencia	= nr_seq_ocorrencia_p
		and	(nr_seq_ocorrencia_benef IS NOT NULL AND nr_seq_ocorrencia_benef::text <> '')
		and (coalesce(ie_lib_manual::text, '') = '' or ie_lib_manual <> 'S');

		update	pls_ocorrencia_benef
		set	ie_situacao 		= 'I',
			ie_forma_inativacao	= 'U'
		where	nr_seq_ocorrencia	= nr_seq_ocorrencia_p
		and	nr_seq_conta		= nr_seq_conta_p
		and	nr_seq_mat		= nr_seq_conta_mat_p
		and	ie_forma_inativacao 	= 'US'
		and (coalesce(ie_lib_manual::text, '') = '' or ie_lib_manual <> 'S');

		update	pls_conta_glosa
		set	ie_situacao		= 'I',
			ie_forma_inativacao 	= 'U'
		where	nr_seq_conta_mat	= nr_seq_conta_mat_p
		and	ie_forma_inativacao 	= 'US'
		and	nr_seq_ocorrencia	= nr_seq_ocorrencia_p
		and	(nr_seq_ocorrencia_benef IS NOT NULL AND nr_seq_ocorrencia_benef::text <> '')
		and (coalesce(ie_lib_manual::text, '') = '' or ie_lib_manual <> 'S');

		begin
			select	a.nr_sequencia
			into STRICT	nr_seq_conta_pos_estab_w
			from	pls_conta_pos_estabelecido a
			where	a.nr_seq_conta_mat	= nr_seq_conta_mat_p
			and	((a.ie_situacao	= 'A') or (coalesce(a.ie_situacao::text, '') = ''));
		exception
			when others then
			nr_seq_conta_pos_estab_w	:= null;
		end;

		if (nr_seq_conta_pos_estab_w IS NOT NULL AND nr_seq_conta_pos_estab_w::text <> '') then
			update	pls_ocorrencia_benef
			set	ie_situacao		= 'A',
				ie_forma_inativacao	 = NULL,
				qt_excedido		= qt_excedido_p
			where	nr_seq_ocorrencia	= nr_seq_ocorrencia_p
			and	nr_seq_conta_pos_estab	= nr_seq_conta_pos_estab_w
			and	(nr_seq_ocor_pag IS NOT NULL AND nr_seq_ocor_pag::text <> '')
			and (coalesce(ie_forma_inativacao::text, '') = '' or ie_forma_inativacao = 'S');

			update	pls_ocorrencia_benef
			set	ie_situacao		= 'I',
				ie_forma_inativacao	= 'U'
			where	nr_seq_ocorrencia	= nr_seq_ocorrencia_p
			and	nr_seq_conta_pos_estab	= nr_seq_conta_pos_estab_w
			and	(nr_seq_ocor_pag IS NOT NULL AND nr_seq_ocor_pag::text <> '')
			and	ie_forma_inativacao 	= 'US';

		end if;
	elsif (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then
		update	pls_ocorrencia_benef
		set	ie_situacao		= 'A',
			ie_forma_inativacao	 = NULL,
			qt_excedido		= qt_excedido_p,
			nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p
		where	nr_seq_ocorrencia	= nr_seq_ocorrencia_p
		and	nr_seq_conta		= nr_seq_conta_p
		and	coalesce(nr_seq_conta_proc::text, '') = ''
		and	coalesce(nr_seq_conta_mat::text, '') = ''
		and (coalesce(ie_forma_inativacao::text, '') = '' or ie_forma_inativacao = 'S')
		and (coalesce(ie_lib_manual::text, '') = '' or ie_lib_manual <> 'S');

		update	pls_conta_glosa
		set	ie_situacao		= 'A',
			ie_forma_inativacao 	 = NULL
		where	nr_seq_conta		= nr_seq_conta_p
		and	coalesce(nr_seq_conta_proc::text, '') = ''
		and	coalesce(nr_seq_conta_mat::text, '') = ''
		and (coalesce(ie_forma_inativacao::text, '') = '' or ie_forma_inativacao = 'S')
		and	nr_seq_ocorrencia	= nr_seq_ocorrencia_p
		and	(nr_seq_ocorrencia_benef IS NOT NULL AND nr_seq_ocorrencia_benef::text <> '')
		and (coalesce(ie_lib_manual::text, '') = '' or ie_lib_manual <> 'S');

		update	pls_ocorrencia_benef
		set	ie_situacao		= 'I',
			ie_forma_inativacao	= 'U'
		where	nr_seq_ocorrencia	= nr_seq_ocorrencia_p
		and	nr_seq_conta		= nr_seq_conta_p
		and	coalesce(nr_seq_conta_proc::text, '') = ''
		and	coalesce(nr_seq_conta_mat::text, '') = ''
		and	ie_forma_inativacao 	= 'US'
		and (coalesce(ie_lib_manual::text, '') = '' or ie_lib_manual <> 'S');

		update	pls_conta_glosa
		set	ie_situacao		= 'I',
			ie_forma_inativacao 	= 'U'
		where	nr_seq_conta		= nr_seq_conta_p
		and	coalesce(nr_seq_conta_proc::text, '') = ''
		and	coalesce(nr_seq_conta_mat::text, '') = ''
		and	ie_forma_inativacao 	= 'US'
		and	nr_seq_ocorrencia	= nr_seq_ocorrencia_p
		and	(nr_seq_ocorrencia_benef IS NOT NULL AND nr_seq_ocorrencia_benef::text <> '')
		and (coalesce(ie_lib_manual::text, '') = '' or ie_lib_manual <> 'S');

	end if;
end if;

/* Sem commit */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_reativar_ocor_conta ( nr_seq_ocorrencia_p bigint, nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nm_usuario_p text, qt_excedido_p pls_conta_proc.qt_excedido%type default null, nr_seq_oc_cta_comb_p pls_ocorrencia_benef.nr_seq_oc_cta_comb%type default null) FROM PUBLIC;

