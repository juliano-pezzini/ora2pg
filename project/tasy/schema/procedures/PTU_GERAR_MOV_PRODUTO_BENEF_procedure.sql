-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_mov_produto_benef ( nr_seq_empresa_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_contrato_w		bigint;
nr_seq_segurado_w		bigint;
cd_cooperativa_w		varchar(10);
cd_usuario_plano_w		varchar(13);
nm_beneficiario_w		varchar(120);
cd_plano_intercambio_w		varchar(3);
dt_nascimento_w			timestamp;
ie_sexo_w			varchar(1);
ie_estado_civil_w		varchar(1);
dt_inclusao_operadora_w		timestamp;
ie_preco_w			varchar(1);
nr_seq_parentesco_w		smallint;
cd_cgc_w			varchar(4);
nr_cpf_w			varchar(15);
nr_identidade_w			varchar(15);
sg_emissora_ci_w		varchar(2);
dt_rescisao_w			timestamp;
ie_nascido_plano_w		smallint;
dt_validade_carteira_w		timestamp;
nr_seq_tabela_origem_w		bigint;
nm_abreviado_w			varchar(25);
cd_plano_w			varchar(80);
nr_seq_titular_w		bigint;
cd_pessoa_fisica_w		varchar(10);
cd_titular_plano_w		varchar(13);
nr_seq_segurado_ww		bigint;
nr_seq_beneficiario_w		bigint;
nr_seq_congenere_w		bigint;
id_filho_w			ptu_regra_id_filho.id_filho%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_congenere
	from	pls_segurado
	where	nr_seq_contrato	= nr_seq_contrato_w;


BEGIN

select	max(nr_seq_contrato)
into STRICT	nr_seq_contrato_w
from	ptu_mov_produto_empresa
where	nr_sequencia	= nr_seq_empresa_p;

open C01;
loop
fetch C01 into
	nr_seq_segurado_w,
	nr_seq_congenere_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	max(cd_cooperativa),
		max(substr(cd_cgc,1,4))
	into STRICT	cd_cooperativa_w,
		cd_cgc_w
	from	pls_congenere
	where	nr_sequencia	= nr_seq_congenere_w;

	select	substr(b.nm_pessoa_fisica,1,120),
		b.cd_pessoa_fisica,
		c.cd_plano_intercambio,
		b.dt_nascimento,
		b.ie_sexo,
		b.ie_estado_civil,
		a.dt_inclusao_operadora,
		substr(c.ie_preco,1,1),
		a.nr_seq_parentesco,
		b.nr_cpf,
		b.nr_identidade,
		b.sg_emissora_ci,
		a.dt_rescisao,
		a.ie_nascido_plano,
		b.nm_abreviado,
		a.nr_seq_titular,
		substr(c.cd_plano_intercambio,1,13),
		a.nr_seq_congenere
	into STRICT	nm_beneficiario_w,
		cd_pessoa_fisica_w,
		cd_plano_intercambio_w,
		dt_nascimento_w,
		ie_sexo_w,
		ie_estado_civil_w,
		dt_inclusao_operadora_w,
		ie_preco_w,
		nr_seq_parentesco_w,
		nr_cpf_w,
		nr_identidade_w,
		sg_emissora_ci_w,
		dt_rescisao_w,
		ie_nascido_plano_w,
		nm_abreviado_w,
		nr_seq_titular_w,
		cd_plano_w,
		nr_seq_congenere_w
	from	pls_plano	c,
		pessoa_fisica	b,
		pls_segurado	a
	where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
	and	a.nr_seq_plano		= c.nr_sequencia
	and	a.nr_sequencia		= nr_seq_segurado_w;

	begin
	select	substr(cd_usuario_plano,1,13),
		dt_validade_carteira
	into STRICT	cd_usuario_plano_w,
		dt_validade_carteira_w
	from	pls_segurado_carteira
	where	nr_seq_segurado	= nr_seq_segurado_w;
	exception
	when others then
		cd_usuario_plano_w	:= null;
	end;

	begin
	select	a.nr_seq_tabela_origem
	into STRICT	nr_seq_tabela_origem_w
	from	pls_segurado		b,
		pls_tabela_preco	a
	where	a.nr_sequencia	= b.nr_seq_tabela
	and	b.nr_sequencia	= nr_seq_segurado_w;
	exception
	when others then
		nr_seq_tabela_origem_w	:= null;
	end;

	if (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') then
		select	max(cd_usuario_plano)
		into STRICT	cd_titular_plano_w
		from	pls_segurado_carteira
		where	nr_seq_segurado =	nr_seq_titular_w;
	elsif (coalesce(nr_seq_titular_w::text, '') = '') then
		begin
		select	max(cd_usuario_plano)
		into STRICT	cd_titular_plano_w
		from	pls_segurado_carteira
		where	nr_seq_segurado = nr_seq_segurado_w;
		exception
		when others then
			cd_titular_plano_w	:= null;
		end;
	end if;

	nr_seq_segurado_ww :=	nr_seq_segurado_w;

	if (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') then
		nr_seq_segurado_ww	:= nr_seq_titular_w;
	end if;

	if (coalesce(cd_cooperativa_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(251442,'NR_SEQ_SEGURADO=' || nr_seq_segurado_w);
	end if;

	if (coalesce(nm_abreviado_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(251447,'CD_PESSOA_FISICA=' || cd_pessoa_fisica_w);
	end if;

	if (coalesce(ie_sexo_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(251449,'CD_PESSOA_FISICA=' || cd_pessoa_fisica_w);
	end if;

	if (coalesce(ie_estado_civil_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(251450,'CD_PESSOA_FISICA=' || cd_pessoa_fisica_w);
	end if;

	if (coalesce(cd_plano_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(251460,'NR_SEQ_SEGURADO=' || nr_seq_segurado_w||';'||'NR_SEQ_CONTRATO=' || nr_seq_contrato_w);
	end if;

	if (coalesce(cd_usuario_plano_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(251459,'NR_SEQ_SEGURADO=' || nr_seq_segurado_w||';'||'NR_SEQ_CONTRATO=' || nr_seq_contrato_w);
	end if;

	if (coalesce(nr_seq_parentesco_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(251458,'NR_SEQ_SEGURADO=' || nr_seq_segurado_w||';'||'NR_SEQ_CONTRATO=' || nr_seq_contrato_w);
	end if;

	if (coalesce(cd_titular_plano_w::text, '') = '') then
		 CALL wheb_mensagem_pck.exibir_mensagem_abort(251456,'NR_SEQ_SEGURADO=' || nr_seq_segurado_ww||';'||'NR_SEQ_CONTRATO=' || nr_seq_contrato_w);
	end if;

	if (coalesce(dt_nascimento_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(251451,'CD_PESSOA_FISICA=' || cd_pessoa_fisica_w);
	end if;

	if (coalesce(dt_inclusao_operadora_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(251455,'NR_SEQ_SEGURADO=' || nr_seq_segurado_w||';'||'NR_SEQ_CONTRATO=' || nr_seq_contrato_w);
	end if;

	if (coalesce(dt_validade_carteira_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(251454,'NR_SEQ_SEGURADO=' || nr_seq_segurado_w);
	end if;

	select	nextval('ptu_mov_produto_benef_seq')
	into STRICT	nr_seq_beneficiario_w
	;

	id_filho_w	:= pls_obter_id_regra_ident_filho(nr_seq_segurado_w);

	insert into ptu_mov_produto_benef(nr_sequencia, nr_seq_empresa, cd_unimed,
		cd_usuario_plano, cd_familia, nm_benef_abreviado,
		cd_plano_destino, dt_nascimento, ie_sexo,
		ie_estado_civil, dt_atualizacao, nm_usuario,
		dt_atualizacao_nrec, nm_usuario_nrec, dt_inclusao,
		cd_dependencia, dt_repasse, dt_inclusao_plano_dest,
		cd_cgc_cpf, nr_rg, sg_uf_rg,
		dt_exclusao, ie_filho, nr_identidade,
		dt_base_carencia, cd_empresa_origem, cd_titular_plano,
		nm_beneficiario, dt_inclusao_empr_uni, ie_tipo_acomodacao)
	values ( nr_seq_beneficiario_w, nr_seq_empresa_p, cd_cooperativa_w,
		cd_usuario_plano_w, 000000, nm_abreviado_w,
		cd_plano_intercambio_w, dt_nascimento_w, ie_sexo_w,
		ie_estado_civil_w, clock_timestamp(), nm_usuario_p,
		clock_timestamp(), nm_usuario_p, dt_inclusao_operadora_w,
		nr_seq_parentesco_w, clock_timestamp(), clock_timestamp(),
		nr_cpf_w, nr_identidade_w, sg_emissora_ci_w,
		dt_rescisao_w, id_filho_w, null,
		dt_validade_carteira_w, cd_plano_w, cd_titular_plano_w,
		nm_beneficiario_w, clock_timestamp(), 'A');

	CALL ptu_gerar_mov_benef_compl(nr_seq_beneficiario_w,cd_pessoa_fisica_w,nm_usuario_p);

	end;
end loop;
close C01;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_mov_produto_benef ( nr_seq_empresa_p bigint, nm_usuario_p text) FROM PUBLIC;

