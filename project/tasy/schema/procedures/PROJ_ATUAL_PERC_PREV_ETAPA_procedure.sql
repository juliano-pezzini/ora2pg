-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE proj_atual_perc_prev_etapa ( nr_seq_etapa_p bigint, nm_usuario_p text ) AS $body$
DECLARE


qt_total_horas_w		double precision := 0;
qt_horas_util_w			double precision := 0;
ie_etapa_mae_w			varchar(1);
pr_previsto_w			double precision := 0;
pr_prev_ativs_inf_w		double precision := 0;
qt_ativs_inf_w			double precision := 0;
nr_seq_superior_w		bigint;
qt_horas_prev_mae_w		double precision := 0;
--qt_horas_trab_w		number(15,2) := 0;
c01 CURSOR FOR
SELECT	pr_prev_etapa,
		qt_hora_prev
from	proj_cron_etapa
where	nr_seq_superior = nr_seq_etapa_p;

BEGIN

select	CASE WHEN count(*)=0 THEN  'N'  ELSE 'S' END
into STRICT	ie_etapa_mae_w
from	proj_cron_etapa
where	nr_seq_superior = nr_seq_etapa_p;

if (ie_etapa_mae_w = 'S') then
	begin
		select	QT_HORA_PREV
		into STRICT	qt_horas_prev_mae_w
		from	proj_cron_etapa
		where	nr_sequencia = nr_seq_etapa_p;

		if (qt_horas_prev_mae_w <> 0) then
			for r_c01 in c01 loop
				-- Cálculo do % previsto das atividades mãe, devem considerar o peso das atividade filhas em relação a ela, e não sisplismente a quantidade de atividades filhas
				--( Peso da atividade filha em relação a mãe = (100 * r_c01.qt_hora_prev) / qt_horas_prev_mae_w)
				pr_previsto_w := pr_previsto_w +  ((((100 * r_c01.qt_hora_prev) / qt_horas_prev_mae_w) * r_c01.pr_prev_etapa) / 100);
			end loop;
		end if;
	end;
else

	select	coalesce((dt_fim_prev - dt_inicio_prev) * 24, 1),
		coalesce((clock_timestamp() - dt_inicio_prev) * 24, 0)
	into STRICT	qt_total_horas_w,
		qt_horas_util_w
	from	proj_cron_etapa
	where	nr_sequencia = nr_seq_etapa_p;

end if;

if (qt_total_horas_w < 1) then
	qt_total_horas_w := 1;
end if;

if (ie_etapa_mae_w = 'N') then
	pr_previsto_w := (qt_horas_util_w / qt_total_horas_w) * 100;
end if;

if (pr_previsto_w < 0) then
	pr_previsto_w := 0;
elsif (pr_previsto_w > 100) then
	pr_previsto_w := 100;
end if;

update	proj_cron_etapa
set	pr_prev_etapa = pr_previsto_w,
	nm_usuario = nm_usuario_p,
	dt_atualizacao = clock_timestamp()
where	nr_sequencia = nr_seq_etapa_p;

select	nr_seq_superior
into STRICT	nr_seq_superior_w
from	proj_cron_etapa
where	nr_sequencia = nr_seq_etapa_p;

if (nr_seq_superior_w IS NOT NULL AND nr_seq_superior_w::text <> '') then
	CALL proj_atual_perc_prev_etapa(nr_seq_superior_w, nm_usuario_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE proj_atual_perc_prev_etapa ( nr_seq_etapa_p bigint, nm_usuario_p text ) FROM PUBLIC;

