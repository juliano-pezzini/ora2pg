-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE swcf_criar_objeto_banco ((nr_seq_objeto_p bigint, ds_erro_p out text) as nm_objeto_w objeto_sistema.nm_objeto%typeDEFAULT null) AS $body$
DECLARE

ds_erro_w	varchar(2000):= null;
BEGIN

    select  max(e.text)
    into STRICT    ds_erro_w
    from    user_errors e,
            user_objects o
    where	e.name = o.object_name
    and	o.object_type in ('PROCEDURE', 'VIEW', 'TRIGGER', 'PACKAGE','PACKAGE BODY', 'FUNCTION')
    and	o.status = 'INVALID'
    and	substr(e.text,1,9) not in ('PLS-00905','ORA-06575','ORA-04063')
    and	substr(e.text,1,17) not in ('PL/SQL: ORA-06575', 'PL/SQL: ORA-04063')
    and	e.name = upper(nm_objeto_p);
    
    return;

end;

begin

    ds_erro_p:= null;

    select max(nm_objeto)
    into STRICT nm_objeto_w
    from objeto_sistema
    where nr_sequencia = nr_seq_objeto_p;

    select 	count(table_name)
    into STRICT	qt_registro_w
    from	user_tables
    where	table_name = 'W_SWCF_OBJETO_SISTEMA';

    if ( qt_registro_w = 0 ) then
        CALL exec_sql_dinamico('SwCF','create TABLE w_swcf_objeto_sistema( ds_script_criacao clob,ie_tipo_objeto varchar2(15)) ');
    else
        CALL exec_sql_dinamico('SwCF','truncate table w_swcf_objeto_sistema');
    end if;

    EXECUTE 'insert into W_SWCF_OBJETO_SISTEMA select TO_LOB(ds_script_criacao),ie_tipo_objeto from objeto_sistema where nm_objeto = upper(' || chr(39) || nm_objeto_w || chr(39) ||')';

    commit;

    ds_sql_w := ' '||
        ' select 	ds_script_criacao, ' ||
        '		ie_tipo_objeto ' ||
        ' from 		W_SWCF_OBJETO_SISTEMA';

    c001 := DBMS_SQL.OPEN_CURSOR;
    DBMS_SQL.PARSE(c001, ds_sql_w, dbms_sql.native);

    dbms_sql.define_column(c001,1,ds_script_criacao_w);
    dbms_sql.define_column(c001,2,ie_tipo_objeto_w,15);

    vl_retorno_w := DBMS_SQL.EXECUTE(c001);
    vl_retorno_w := DBMS_SQL.fetch_rows(c001);

    DBMS_SQL.COLUMN_VALUE(c001, 1, ds_script_criacao_w);
    DBMS_SQL.COLUMN_VALUE(c001, 2, ie_tipo_objeto_w);
    DBMS_SQL.CLOSE_CURSOR(c001);

    qt_caracteres_w := octet_length(ds_script_criacao_w);
    qt_loops_w	:= round(qt_caracteres_w / 256) + 1;
    if (qt_caracteres_w > 0) then

		for j in 1..qt_loops_w loop
			begin
                ds_linha_w := replace(substr(ds_script_criacao_w,256,((j*256)-255)),chr(13),null); 		

                if (length(trim(both ds_linha_w)) > 0) then	
                    ub := ub+1;
                    v_text(ub) := ds_linha_w;

                    qt_pos_barra_w := position(chr(10)||'/'||chr(10) in ds_linha_w);
                    if (qt_pos_barra_w > 0) and (j < (qt_loops_w - 3))  then

                        ds_resto_linha_w := substr(v_text(ub),qt_pos_barra_w + 2,256);				

                        v_text(ub) := substr(v_text(ub),1,(qt_pos_barra_w - 1));

                        cursor1 := dbms_sql.open_cursor;
                        dbms_sql.parse(cursor1, v_text, lb, ub, null, dbms_sql.native);	
                        ret_val := dbms_sql.execute(cursor1);
                        dbms_sql.close_cursor(cursor1);	

                        ub := 1;
                        v_text(ub) := ds_resto_linha_w;
                    end if;

                end if;			
			end;
		end loop;


		if (position('/' in v_text(ub)) > 0) then
			v_text(ub) := substr(v_text(ub),1,instr(v_text(ub),'/',-1)-1);
		end if;

		if (ie_tipo_objeto_w = 'View') then		
			v_text(ub) := replace(v_text(ub),';',null);		
		end if;

        begin
            cursor1 := dbms_sql.open_cursor;
            dbms_sql.parse(cursor1, v_text, lb, ub, null, dbms_sql.native);	
            ret_val := dbms_sql.execute(cursor1);
            dbms_sql.close_cursor(cursor1);
        exception
            when no_data_found  then
                ds_erro_p:= get_error_compile(nm_objeto_w);
            when others then
                ds_erro_p:= get_error_compile(nm_objeto_w);
        end;

	end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE swcf_criar_objeto_banco ((nr_seq_objeto_p bigint, ds_erro_p out text) as nm_objeto_w objeto_sistema.nm_objeto%typeDEFAULT null) FROM PUBLIC;

