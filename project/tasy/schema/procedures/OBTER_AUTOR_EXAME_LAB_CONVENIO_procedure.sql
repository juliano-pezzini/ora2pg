-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_autor_exame_lab_convenio (nr_seq_exame_p bigint, cd_convenio_p bigint, cd_categoria_p text, ie_tipo_atendimento_p bigint, cd_estabelecimento_p bigint, ie_tipo_convenio_p bigint, nr_seq_proc_interno_p bigint, ie_autorizacao_p INOUT text) AS $body$
DECLARE

		
cd_procedimento_w		bigint;
cd_setor_exclusivo_w		integer;
ie_origem_proced_w		bigint;
nr_seq_convenio_w		bigint;
ie_autorizacao_w		varchar(002);
nr_seq_proc_interno_w		bigint;
ie_origem_proced_sus_w		bigint;
ds_erro_w			varchar(255);

ie_prioridade_edicao_w		varchar(01);	
ie_prioridade_ajuste_proc_w	varchar(01);
cd_edicao_amb_w			bigint;
vl_ch_honorarios_w		double precision	:= 1;
vl_ch_custo_oper_w		double precision	:= 1;
vl_m2_filme_w			double precision	:= 0;
tx_ajuste_geral_w		double precision	:= 1;
dt_inicio_vigencia_w		timestamp;
cd_proc_exame_w			bigint;
ie_origem_proc_exame_w		bigint;
nr_seq_exame_proc_w		bigint;
nr_seq_cbhpm_edicao_w		bigint;
ie_tipo_convenio_w		smallint;
ie_utiliza_proc_interno_w	varchar(01);

c01 CURSOR FOR
	SELECT	nr_sequencia
	from	exame_lab_convenio
	where	coalesce(cd_convenio, cd_convenio_p)		= cd_convenio_p
	and	coalesce(cd_categoria, cd_categoria_p)	= cd_categoria_p
	and	coalesce(cd_edicao_amb, coalesce(cd_edicao_amb_w,0)) = coalesce(cd_edicao_amb_w,0)
	and	coalesce(ie_tipo_atendimento, coalesce(ie_tipo_atendimento_p,0)) = coalesce(ie_tipo_atendimento_p,0)
	and	nr_seq_exame				= nr_seq_exame_p
	and	((ie_origem_proced_sus_w	not in (2,3))  or (ie_origem_proced = ie_origem_proced_sus_w)) /*Elemar - 11/01/06 - OS27412*/
	and	coalesce(dt_inicio_vigencia,clock_timestamp()) <= clock_timestamp()
	and	coalesce(dt_fim_vigencia,clock_timestamp()) 	>= clock_timestamp()
	and	coalesce(ie_situacao,'A') 		= 'A'
	and	coalesce(ie_tipo_convenio,ie_tipo_convenio_w) = ie_tipo_convenio_w
	order by coalesce(cd_categoria,0),  coalesce(cd_convenio, 0), coalesce(cd_edicao_amb, 0),  coalesce(dt_inicio_vigencia,clock_timestamp());


BEGIN

ie_origem_proced_sus_w		:= obter_origem_proced_cat(cd_estabelecimento_p,
					ie_tipo_atendimento_p, ie_tipo_convenio_p, cd_convenio_p, cd_categoria_p);

Select	coalesce(max(ie_proc_interno),'N')
into STRICT	ie_utiliza_proc_interno_w
from	lab_parametro;



if (ie_utiliza_proc_interno_w	= 'S') and (coalesce(nr_seq_proc_interno_p,0)> 0) then
	
	SELECT * FROM Obter_Proc_Tab_Interno_Conv2(nr_seq_proc_interno_p, cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, null, clock_timestamp(), null, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_p) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
	select	max(b.cd_setor_exclusivo)
	into STRICT	cd_setor_exclusivo_w
	from	procedimento b
	where	b.cd_procedimento	= cd_procedimento_w
	and	b.ie_origem_proced	= ie_origem_proced_w;
else
	select	coalesce(max(a.cd_procedimento),0),
		coalesce(max(a.ie_origem_proced),0),
		max(b.cd_setor_exclusivo)
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		cd_setor_exclusivo_w
	from	procedimento b,
		exame_laboratorio a
	where	a.nr_seq_exame		= nr_seq_exame_p
	and	a.cd_procedimento	= b.cd_procedimento
	and	a.ie_origem_proced	= b.ie_origem_proced;
end if;

if (cd_procedimento_w	> 0) and
	((ie_utiliza_proc_interno_w	<> 'S') or (coalesce(nr_seq_proc_interno_p,0)= 0)) then
	begin
	
	select 	max(ie_tipo_convenio)
	into STRICT	ie_tipo_convenio_w
	from	convenio
	where	cd_convenio = cd_convenio_p;

	select	coalesce(max(ie_prioridade_edicao_amb), 'N'),
		coalesce(max(IE_PRIORIDADE_AJUSTE_PROC), 'N')
	into STRICT	ie_prioridade_edicao_w,
		IE_PRIORIDADE_AJUSTE_PROC_w
	from	parametro_faturamento
	where	cd_estabelecimento	= cd_estabelecimento_p;


	if (ie_prioridade_edicao_w = 'N') then	
		select	coalesce(max(cd_edicao_amb),0)
		into STRICT	cd_edicao_amb_w
		from convenio_amb
		where (cd_estabelecimento     = cd_estabelecimento_p)
		  and (cd_convenio            = cd_convenio_p)
	       	  and (cd_categoria	      = cd_categoria_p)
		  and (coalesce(ie_situacao,'A')   = 'A')
		  and (dt_inicio_vigencia     = (SELECT max(dt_inicio_vigencia)
					         from convenio_amb a
						 where (a.cd_estabelecimento  = cd_estabelecimento_p)
					           and (a.cd_convenio         = cd_convenio_p)
					           and (a.cd_categoria        = cd_categoria_p)
						   and (coalesce(a.ie_situacao,'A')= 'A')
					           and (a.dt_inicio_vigencia <=  clock_timestamp())));
	else
		SELECT * FROM obter_edicao_proc_conv(cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, clock_timestamp(), cd_procedimento_w, cd_edicao_amb_w, vl_ch_honorarios_w, vl_ch_custo_oper_w, vl_m2_filme_w, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w) INTO STRICT cd_edicao_amb_w, vl_ch_honorarios_w, vl_ch_custo_oper_w, vl_m2_filme_w, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w;
	end if;
	

	open c01;
	loop
		fetch c01 into nr_seq_convenio_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
	end loop;
	close c01;

	if (nr_seq_convenio_w IS NOT NULL AND nr_seq_convenio_w::text <> '') then
		begin
		select	a.cd_procedimento,
			a.ie_origem_proced,
			a.ie_autorizacao,
			b.cd_setor_exclusivo
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w,
			ie_autorizacao_w,
			cd_setor_exclusivo_w
		from	procedimento b,
			exame_lab_convenio a
		where	a.nr_seq_exame		= nr_seq_exame_p
		and	a.cd_procedimento	= b.cd_procedimento
		and	a.ie_origem_proced	= b.ie_origem_proced
		and	a.nr_sequencia		= nr_seq_convenio_w;
		if (ie_autorizacao_w = 'NL') then
      --622752
			ds_erro_w	:= obter_desc_expressao(622752);
		elsif (ie_autorizacao_w = 'LG') then
      --622753
			ds_erro_w	:= obter_desc_expressao(622753);
		elsif (ie_autorizacao_w = 'LS') then
      --622754
			ds_erro_w	:= obter_desc_expressao(622754);
		end if;
		end;
	end if;
	end;
elsif	((ie_utiliza_proc_interno_w	<> 'S') or (coalesce(nr_seq_proc_interno_p,0)= 0)) then
     --622755
	ds_erro_w	:= obter_desc_expressao(622755);
end if;

ie_autorizacao_p	:= ie_autorizacao_w;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_autor_exame_lab_convenio (nr_seq_exame_p bigint, cd_convenio_p bigint, cd_categoria_p text, ie_tipo_atendimento_p bigint, cd_estabelecimento_p bigint, ie_tipo_convenio_p bigint, nr_seq_proc_interno_p bigint, ie_autorizacao_p INOUT text) FROM PUBLIC;

