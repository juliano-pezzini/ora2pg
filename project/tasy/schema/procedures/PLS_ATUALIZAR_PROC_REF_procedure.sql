-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_proc_ref ( nr_seq_conta_proc_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text ) AS $body$
DECLARE


/*Caso a conta filha estier consistida, e a pai for excluida, deve ser refeita a consistencia, pois teve ser atualizado o campo NR_SEQ_PROC_REF, por que se não rotinas futuras não irão contabilizar, pois é consideradas os procedimento com NR_SEQ_PROC_REF = null*/

/*Só será considerado o mesmo ato caso a data e hora de todos os itens estiverem informados. (OS 314640 - Histórico 30/11/2011 17:29:23)*/

cd_guia_w			varchar(20);
cd_guia_ref_w			varchar(20);
nr_seq_conta_w			bigint;
nr_seq_segurado_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		smallint;
ie_tipo_guia_w			smallint;
nr_seq_proc_ref_w		bigint	:= null;
nr_seq_conta_ww			bigint;
nr_seq_proc_ref_www		bigint;
qt_autor_w			bigint;
nr_seq_proc_ref_ww		bigint;
dt_procedimento_w		varchar(20);
dt_inicio_proc_w		varchar(20);
dt_fim_proc_w			varchar(20);
nr_seq_conta_www		bigint;
ie_origem_conta_w		varchar(1);
nr_seq_proc_ref_wwww		bigint	:= null;
nr_seq_analise_w		bigint;
nr_seq_participante_hi_w	bigint;


C01 CURSOR FOR
	SELECT	b.nr_sequencia
	from	pls_conta_proc	b,
		pls_conta	a
	where	a.nr_seq_segurado	= nr_seq_segurado_w
	and	a.ie_tipo_guia		= 4
	and	b.cd_procedimento	= cd_procedimento_w
	and	((a.cd_guia_referencia	= cd_guia_ref_w) or (a.cd_guia_referencia = cd_guia_w))
	and	b.ie_origem_proced	= ie_origem_proced_w
	and	b.ie_status not in ('D')
	and	coalesce(b.ie_glosa,'N')	= 'N'
	and	a.nr_sequencia		= b.nr_seq_conta
	and	coalesce(to_char(b.dt_procedimento,'dd/mm/yyyy'),'X')	= coalesce(dt_procedimento_w,'Y')
	and	coalesce(to_char(b.dt_inicio_proc,'hh24:mi:ss'),'X')	= coalesce(dt_inicio_proc_w,'Y');

C02 CURSOR FOR
	SELECT	max(b.nr_sequencia),
		a.nr_sequencia
	from	pls_conta_proc	b,
		pls_conta	a
	where	a.cd_guia_referencia	= cd_guia_ref_w
	and	a.nr_seq_segurado	= nr_seq_segurado_w
	and	b.cd_procedimento	= cd_procedimento_w
	and	b.ie_origem_proced	= ie_origem_proced_w
	and	a.ie_status 	<>	'D'
	and	a.ie_tipo_guia		= 6
	and	a.nr_sequencia		= b.nr_seq_conta
	and	coalesce(to_char(b.dt_procedimento,'dd/mm/yyyy'),'X')	= coalesce(dt_procedimento_w,'Y')
	and	coalesce(to_char(b.dt_inicio_proc,'hh24:mi:ss'),'X')	= coalesce(dt_inicio_proc_w,'Y')
	and	coalesce(b.ie_glosa,'N')	= 'N'
	and     coalesce(b.nr_seq_proc_ref::text, '') = ''
	and	a.nr_sequencia = nr_seq_conta_w
	group by a.nr_sequencia;

C03 CURSOR FOR
	SELECT	a.nr_sequencia,
		b.nr_seq_analise
	from	pls_conta_proc	a,
		pls_conta	b
	where	a.nr_seq_conta		= b.nr_sequencia
	and	a.nr_seq_conta		= nr_seq_conta_w
	and	a.cd_procedimento	= cd_procedimento_w
	and	a.ie_origem_proced	= ie_origem_proced_w
	and	coalesce(b.ie_glosa,'N')	= 'N'
	and	coalesce(to_char(a.dt_procedimento,'dd/mm/yyyy'),'X')	= coalesce(dt_procedimento_w,'Y')
	and	coalesce(to_char(a.dt_inicio_proc,'hh24:mi:ss'),'X')	= coalesce(dt_inicio_proc_w,'Y')
	order by a.nr_sequencia asc;


BEGIN

/*Obter os dados da conta*/

select	b.cd_guia,
	b.cd_guia_referencia,
	b.nr_sequencia,
	b.nr_seq_segurado,
	a.cd_procedimento,
	a.ie_origem_proced,
	b.ie_tipo_guia,
	coalesce(to_char(a.dt_procedimento,'dd/mm/yyyy'),'X'),
	to_char(a.dt_inicio_proc,'hh24:mi:ss'),
	b.ie_origem_conta,
	nr_seq_participante_hi
into STRICT	cd_guia_w,
	cd_guia_ref_w,
	nr_seq_conta_w,
	nr_seq_segurado_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	ie_tipo_guia_w,
	dt_procedimento_w,
	dt_inicio_proc_w,
	ie_origem_conta_w,
	nr_seq_participante_hi_w
from	pls_conta_proc a,
	pls_conta b
where	a.nr_sequencia = nr_seq_conta_proc_p
and	b.nr_sequencia = a.nr_seq_conta;
/*retirado o tratamento pois devido a análise nova o procedimento referencia não  estava funcionando de acordo com o propósito OS 462958 Diogo*/

/*Nos casos de ser conta de importação A500*/

/*if	(ie_origem_conta_w = 'A') then
	open C03;
	loop
	fetch C03 into
		nr_seq_proc_ref_w,
		nr_seq_analise_w;
	exit when C03%notfound;
		begin
		if	(nr_seq_proc_ref_wwww is null) then
			nr_seq_proc_ref_wwww := nr_seq_proc_ref_w;

			update	pls_conta_proc
			set	nr_seq_proc_ref 	= null
			where	nr_sequencia		= nr_seq_proc_ref_w;
		else
			update	pls_conta_proc
			set	nr_seq_proc_ref 	= nr_seq_proc_ref_wwww
			where	nr_sequencia		= nr_seq_proc_ref_w;
		end if;

		update	w_pls_resumo_conta
		set	nr_seq_item_ref = nr_seq_proc_ref_wwww
		where	nr_seq_analise	= nr_seq_analise_w
		and	nr_seq_item	= nr_seq_proc_ref_w
		and	ie_tipo_item	in ('P','R');

		end;
	end loop;
	close C03;

else*/
	update	pls_conta_proc
	set	nr_seq_proc_ref  = NULL
	where	nr_sequencia	= nr_seq_conta_proc_p;

	if (nr_seq_participante_hi_w IS NOT NULL AND nr_seq_participante_hi_w::text <> '') then
		begin
		select	a.nr_seq_conta_proc
		into STRICT	nr_seq_proc_ref_w
		from	pls_proc_participante a
		where	a.nr_sequencia	= nr_seq_participante_hi_w;
		exception
			when no_data_found then
			nr_seq_proc_ref_w	:= null;
		end;

		if (nr_seq_proc_ref_w IS NOT NULL AND nr_seq_proc_ref_w::text <> '') then
			update	pls_conta_proc
			set	nr_seq_proc_ref	= nr_seq_proc_ref_w
			where	nr_sequencia	= nr_seq_conta_proc_p
			and	coalesce(ie_glosa,'N') = 'N';
		end if;
	end if;

	if (coalesce(nr_seq_proc_ref_w::text, '') = '') then
		if (ie_tipo_guia_w = 6) then
		/*
			1º Caso :	Em guias de honorário individual tem que existir um correspondente nas guias de internação.
				Logo todo procedimento existente na guia de HI é considerado uma referencia a um procedimento existente na internação.

				O proc da guia de HI ira receber a referencia da seq do procedimento que ele representa na internação

				Não havendo ainda a guia de internação e existindo mais de uma guia de HI é definido que a menor guia de HI será considerada a pai
				até o momento em que a guia de internação seja lança no sistema. Neste momento esta rotina ira atualizar corretamente o valor das guias filhas
				referenciando a guia pai.
		*/
				select	min(b.nr_sequencia)
				into STRICT	nr_seq_proc_ref_w
				from	pls_conta_proc	b,
					pls_conta	a
				where	a.cd_guia_referencia			= cd_guia_ref_w
				and 	a.ie_tipo_guia 				= 5
				and	a.nr_seq_segurado			= nr_seq_segurado_w
				and	b.cd_procedimento			= cd_procedimento_w
				and	b.ie_origem_proced			= ie_origem_proced_w
				and	a.ie_status 				<> 'D'
				and	coalesce(b.ie_glosa,'N')			= 'N'
				and	coalesce(to_char(b.dt_procedimento,'dd/mm/yyyy'),'X')	= coalesce(dt_procedimento_w,'Y')
				and	coalesce(to_char(b.dt_inicio_proc,'hh24:mi:ss'),'X')	 = coalesce(dt_inicio_proc_w,'Y')
				and	a.nr_sequencia					 = b.nr_seq_conta
				and	not exists (	SELECT	1
							from	pls_conta_proc x
							where	b.nr_sequencia = x.nr_seq_proc_ref
							and	x.nr_seq_conta = nr_seq_conta_w);


				if (coalesce(nr_seq_proc_ref_w::text, '') = '') then
					select	min(b.nr_sequencia)
					into STRICT	nr_seq_proc_ref_w
					from	pls_conta_proc	b,
						pls_conta	a
					where	a.cd_guia_referencia	= cd_guia_ref_w
					and 	a.ie_tipo_guia 		= 6
					and	a.nr_seq_segurado	= nr_seq_segurado_w
					and	b.cd_procedimento	= cd_procedimento_w
					and	b.ie_origem_proced	= ie_origem_proced_w
					and	a.ie_status <>	('D')
					and	coalesce(b.nr_seq_proc_ref::text, '') = ''
					and	coalesce(b.ie_glosa,'N')	= 'N'
					and	a.nr_sequencia		<> nr_seq_conta_w
					and	a.nr_sequencia		= b.nr_seq_conta
					and	coalesce(to_char(b.dt_procedimento,'dd/mm/yyyy'),'X')	= coalesce(dt_procedimento_w,'Y')
					and	coalesce(to_char(b.dt_inicio_proc,'hh24:mi:ss'),'X')	= coalesce(dt_inicio_proc_w,'Y')
					and	not exists (	SELECT	1
								from	pls_conta_proc x
								where	b.nr_sequencia = x.nr_seq_proc_ref
								and	x.nr_seq_conta = nr_seq_conta_w);
				end if;

				open C02;
				loop
				fetch C02 into
					nr_seq_proc_ref_ww,
					nr_seq_conta_www;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin
					select	min(nr_seq_conta)
					into STRICT	nr_seq_conta_ww
					from	pls_conta_proc
					where	nr_sequencia = nr_seq_proc_ref_w;

					if (nr_seq_conta_ww	= nr_seq_conta_www) then
						nr_seq_proc_ref_www	:= null;
					else
						nr_seq_proc_ref_www := nr_seq_proc_ref_w;

						if (nr_seq_proc_ref_w	= nr_seq_proc_ref_ww) then
							nr_seq_proc_ref_www	:= null;
						else
							nr_seq_proc_ref_www := nr_seq_proc_ref_w;
						end if;
					end if;

					update	pls_conta_proc a
					set	a.nr_seq_proc_ref = nr_seq_proc_ref_www
					where	a.nr_sequencia	= nr_seq_proc_ref_ww
					and	coalesce(a.ie_glosa,'N') = 'N';
					end;
				end loop;
				close C02;

		elsif (ie_tipo_guia_w = 5) then
		/*Se for uma guia de internação é verificado se existe guias filhas no sistema. Se existir atualiza a referencia com a que esta se consistindo*/

			open C02;
			loop
			fetch C02 into
				nr_seq_proc_ref_w,
				nr_seq_conta_www;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin

				update	pls_conta_proc
				set	nr_seq_proc_ref = nr_seq_conta_proc_p
				where	nr_sequencia	= nr_seq_proc_ref_w
				and	coalesce(ie_glosa,'N') = 'N';

				end;
			end loop;
			close C02;

		elsif (ie_tipo_guia_w = 4) then
			update	pls_conta_proc
			set	nr_seq_proc_ref  = NULL
			where	nr_sequencia	= nr_seq_conta_proc_p;
		/*
			2º Caso :	Em guias de SP/SADT poode haver procedimentos que referenciam outras guias de SP/SADT.
				As guias de SP/SADT que referenciam outras guias de sp/sadt possuem informado na guia_ref o cd_guia da guia principal.
				A guia principal não possui guia ref informado
		*/
			/*Qunado for guia filha*/

			if (coalesce(cd_guia_ref_w,'X') <> 'X') then

				/*Se existir uma guia na base com a guia informada significa que esta não é uma situação onde há o mesmo procedimento.*/

				select	min(nr_sequencia)
				into STRICT	nr_seq_proc_ref_w
				from (
					SELECT	b.nr_sequencia
					from	pls_conta_proc	b,
						pls_conta	a
					where	a.cd_guia		= cd_guia_ref_w
					and	a.nr_seq_segurado	= nr_seq_segurado_w
					and	b.cd_procedimento	= cd_procedimento_w
					and	b.ie_origem_proced	= ie_origem_proced_w
					and	b.ie_status 		<>	'D'
					and	coalesce(b.ie_glosa,'N')	= 'N'
					and	a.ie_tipo_guia		= 4
					and	a.nr_sequencia		= b.nr_seq_conta
					and	b.nr_seq_conta		<> nr_seq_conta_w
					and	coalesce(to_char(b.dt_procedimento,'dd/mm/yyyy'),'X')	= coalesce(dt_procedimento_w,'Y')
					and	coalesce(to_char(b.dt_inicio_proc,'hh24:mi:ss'),'X')	= coalesce(dt_inicio_proc_w,'Y')
					and	not exists (	SELECT	1
								from	pls_conta_proc x
								where	b.nr_sequencia = x.nr_seq_proc_ref
								and	x.nr_seq_conta = nr_seq_conta_w)
					
union

					select	b.nr_sequencia
					from	pls_conta_proc	b,
						pls_conta	a
					where	a.cd_guia_referencia	= cd_guia_ref_w
					and	a.nr_seq_segurado	= nr_seq_segurado_w
					and	b.cd_procedimento	= cd_procedimento_w
					and	b.ie_origem_proced	= ie_origem_proced_w
					and	b.nr_seq_conta		<> nr_seq_conta_w
					and	b.ie_status 		<> 'D'
					and	coalesce(b.ie_glosa,'N')		= 'N'
					and	coalesce(to_char(b.dt_procedimento,'dd/mm/yyyy'),'X')	= coalesce(dt_procedimento_w,'Y')
					and	coalesce(to_char(b.dt_inicio_proc,'hh24:mi:ss'),'X')	= coalesce(dt_inicio_proc_w,'Y')
					and	a.ie_tipo_guia		= 4
					and	a.nr_sequencia		= b.nr_seq_conta
					and	not exists (	select	1
								from	pls_conta_proc x
								where	b.nr_sequencia = x.nr_seq_proc_ref
								and	x.nr_seq_conta = nr_seq_conta_w)) alias19;
					/*and	not exists (		select	b.nr_sequencia
									from	pls_conta_proc	b,
										pls_conta	a
									where	a.cd_guia		= cd_guia_ref_w
									and	a.nr_seq_segurado	= nr_seq_segurado_w
									and	b.cd_procedimento	= cd_procedimento_w
									and	b.ie_origem_proced	= ie_origem_proced_w
									and	a.ie_status not in	('D')
									and	nvl(b.ie_glosa,'N')	= 'N'
									and	a.ie_tipo_guia		= 4
									and	a.nr_sequencia		= b.nr_seq_conta
									and	nvl(to_char(b.dt_procedimento,'dd/mm/yyyy'),'X')	= nvl(dt_procedimento_w,'Y')
									and	nvl(to_char(b.dt_inicio_proc,'hh24:mi:ss'),'X')	= nvl(dt_inicio_proc_w,'Y')))*/
				select	min(nr_seq_conta)
				into STRICT	nr_seq_conta_ww
				from	pls_conta_proc
				where	nr_sequencia = nr_seq_proc_ref_w;

				nr_seq_proc_ref_ww := nr_seq_proc_ref_w;

				if (nr_seq_conta_ww = nr_seq_conta_w) then
					nr_seq_proc_ref_w := null;
				end if;
			---	insert into dgk values ('proc ref '||nr_seq_proc_ref_w||'  conta proc '||nr_seq_conta_proc_p);
				update	pls_conta_proc
				set	nr_seq_proc_ref = nr_seq_proc_ref_w
				where	nr_sequencia	= nr_seq_conta_proc_p
				and	coalesce(ie_glosa,'N') = 'N';
			end if;

			/*Se a guia principal não for encontrada é verificado se já existe na base uma guia filha da guia que se esta consistindo(ou seja a que se esta consistindo é na verdade a principal)*/

			/*if	(nvl(nr_seq_proc_ref_ww,0) = 0) then
				open C01;
				loop
				fetch C01 into
					nr_seq_proc_ref_ww;
				exit when C01%notfound;
					begin
					select	min(nr_seq_conta)
					into	nr_seq_conta_ww
					from	pls_conta_proc
					where	nr_sequencia = nr_seq_proc_ref_ww;

					if	(nr_seq_conta_ww = nr_seq_conta_w) then
						nr_seq_proc_ref_ww := null;
					end if;

					update	pls_conta_proc
					set	nr_seq_proc_ref = nr_seq_conta_proc_p
					where	nr_sequencia	= nr_seq_proc_ref_ww;
					end;
				end loop;
				close C01;

			end if;*/
		end if;
	end if;
--end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_proc_ref ( nr_seq_conta_proc_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text ) FROM PUBLIC;

