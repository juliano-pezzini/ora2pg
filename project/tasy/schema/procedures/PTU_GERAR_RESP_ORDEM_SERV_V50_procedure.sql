-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_resp_ordem_serv_v50 ( nr_seq_retorno_p bigint, nr_versao_ptu_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Gerar a transação PTU de resposta de ordem de serviço, via SCS 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ X] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção:Performance. 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
ie_tipo_cliente_w		varchar(2);
cd_unimed_executora_w		smallint;
cd_unimed_beneficiario_w	varchar(4);
nr_transacao_solicitante_w	bigint;
cd_unimed_w			smallint;
cd_usuario_plano_w		varchar(17);
nr_seq_guia_w			bigint;
cd_servico_w			integer;
ie_origem_proced_w		smallint;
qt_servico_aut_w		smallint;
ie_status_requisicao_w		smallint;
ie_status_w			varchar(2);
nr_seq_resposta_w		bigint;
ie_classificacao_w		smallint;
ie_tipo_despesa_w		smallint;
ie_tipo_tabela_w		varchar(2);
nr_seq_prestador_w		bigint;
nm_prest_alto_custo_w		varchar(60)	:= '';
ie_prest_alto_custo_w		varchar(2);
nr_seq_requisicao_w		bigint;
cd_unimed_solicitante_w		smallint;
nr_seq_material_w		pls_material.nr_sequencia%type;
nr_seq_resp_req_serv_w		ptu_resposta_req_servico.nr_sequencia%type;
qt_registros_w			integer;
ie_aceito_w			varchar(1);
nr_seq_ordem_serv_w		bigint;

C01 CURSOR FOR 
	SELECT	cd_servico, 
		cd_servico_consersao, 
		ie_origem_servico, 
		ie_tipo_tabela, 
		qt_servico_aut 
	from	ptu_req_ord_serv_servico 
	where	nr_seq_req_ord = nr_seq_ordem_serv_w;

BEGIN 
 
select	coalesce(nr_seq_ordem_serv,0) 
into STRICT	nr_seq_ordem_serv_w 
from	ptu_controle_execucao 
where	nr_sequencia	= nr_seq_retorno_p;
 
select	ie_tipo_cliente, 
	cd_unimed_executora, 
	cd_unimed_beneficiario, 
	nr_transacao_solicitante, 
	cd_unimed, 
	cd_usuario_plano, 
	nr_seq_guia, 
	nr_seq_requisicao, 
	coalesce(nr_seq_prestador,0), 
	cd_unimed_solicitante 
into STRICT	ie_tipo_cliente_w, 
	cd_unimed_executora_w, 
	cd_unimed_beneficiario_w, 
	nr_transacao_solicitante_w, 
	cd_unimed_w, 
	cd_usuario_plano_w, 
	nr_seq_guia_w, 
	nr_seq_requisicao_w, 
	nr_seq_prestador_w, 
	cd_unimed_solicitante_w 
from	ptu_requisicao_ordem_serv 
where	nr_sequencia	= nr_seq_ordem_serv_w;
 
select	nextval('ptu_resposta_req_ord_serv_seq') 
into STRICT	nr_seq_resposta_w
;
 
insert	into ptu_resposta_req_ord_serv(nr_sequencia, cd_transacao, ie_tipo_cliente, 
	 cd_unimed_executora, cd_unimed_beneficiario, cd_unimed_solicitante, 
	 nr_seq_execucao, cd_unimed, cd_usuario_plano, 
	 nr_seq_origem, nm_prest_alto_custo, nr_seq_requisicao, 
	 nr_seq_guia, ds_observacao, nm_usuario, 
	 dt_atualizacao, nm_usuario_nrec, dt_atualizacao_nrec, 
	 nr_versao) 
values (nr_seq_resposta_w, '00807', ie_tipo_cliente_w, 
	 cd_unimed_executora_w, cd_unimed_beneficiario_w, cd_unimed_solicitante_w, 
	 nr_seq_retorno_p, cd_unimed_w, cd_usuario_plano_w, 
	 nr_transacao_solicitante_w, nm_prest_alto_custo_w, nr_seq_requisicao_w, 
	 nr_seq_guia_w, '', nm_usuario_p, 
	 clock_timestamp(), nm_usuario_p, clock_timestamp(), 
	 nr_versao_ptu_p);
 
for	r_c01_w	in c01	loop 
	if (r_c01_w.ie_tipo_tabela	in ('0','1','4')) then 
		if (cd_unimed_solicitante_w	= cd_unimed_beneficiario_w) then 
			ie_aceito_w	:= ptu_obter_item_req_ord_aceito(	coalesce(r_c01_w.cd_servico_consersao, r_c01_w.cd_servico), r_c01_w.ie_origem_servico, null, 
										cd_unimed_beneficiario_w);
		else 
			ie_aceito_w	:= 'S';
		end if;
 
		select	nextval('ptu_resposta_req_servico_seq') 
		into STRICT	nr_seq_resp_req_serv_w 
		;
 
		insert	into ptu_resposta_req_servico(nr_sequencia, nr_seq_resp_req_ord, cd_servico, 
			 qt_servico_aut, ie_status_requisicao, ie_tipo_tabela, 
			 nm_usuario, dt_atualizacao, nm_usuario_nrec, 
			 dt_atualizacao_nrec) 
		values (nr_seq_resp_req_serv_w, nr_seq_resposta_w, r_c01_w.cd_servico, 
			 CASE WHEN ie_aceito_w='S' THEN r_c01_w.qt_servico_aut  ELSE 0 END , CASE WHEN ie_aceito_w='S' THEN 2  ELSE 1 END , r_c01_w.ie_tipo_tabela, 
			 nm_usuario_p, clock_timestamp(), nm_usuario_p, 
			 clock_timestamp());
 
		if (ie_aceito_w	= 'N') then 
			CALL ptu_inserir_inconsistencia(	null, null, 2010, 
							'',cd_estabelecimento_p, nr_seq_resposta_w, 
							'OR', '00807', nr_seq_resp_req_serv_w, 
							null, null, nm_usuario_p);
		end if;
	elsif (r_c01_w.ie_tipo_tabela	in ('2','3')) then 
		nr_seq_material_w	:= substr(pls_obter_dados_material_a900(coalesce(r_c01_w.cd_servico_consersao, r_c01_w.cd_servico),null,'NR'),1,255);
		 
		if (coalesce(nr_seq_material_w,0)	= 0) then 
			nr_seq_material_w	:= substr(pls_obter_seq_codigo_material('',coalesce(r_c01_w.cd_servico_consersao, r_c01_w.cd_servico)),1,8);
		end if;
 
		if (cd_unimed_solicitante_w	= cd_unimed_beneficiario_w) then 
			ie_aceito_w	:= ptu_obter_item_req_ord_aceito(null, null, nr_seq_material_w, cd_unimed_beneficiario_w);
		else 
			ie_aceito_w	:= 'S';
		end if;
		 
		select	nextval('ptu_resposta_req_servico_seq') 
		into STRICT	nr_seq_resp_req_serv_w 
		;
 
		insert	into ptu_resposta_req_servico(nr_sequencia, nr_seq_resp_req_ord, cd_servico, 
			 qt_servico_aut, ie_status_requisicao, ie_tipo_tabela, 
			 nm_usuario, dt_atualizacao, nm_usuario_nrec, 
			 dt_atualizacao_nrec) 
		values (nr_seq_resp_req_serv_w, nr_seq_resposta_w, r_c01_w.cd_servico, 
			 CASE WHEN ie_aceito_w='S' THEN r_c01_w.qt_servico_aut  ELSE 0 END , CASE WHEN ie_aceito_w='S' THEN 2  ELSE 1 END , r_c01_w.ie_tipo_tabela, 
			 nm_usuario_p, clock_timestamp(), nm_usuario_p, 
			 clock_timestamp());
 
		if (ie_aceito_w	= 'N') then 
			CALL ptu_inserir_inconsistencia(	null, null, 2010, 
							'',cd_estabelecimento_p, nr_seq_resposta_w, 
							'OR', '00807', null, 
							nr_seq_resp_req_serv_w, null, nm_usuario_p);
		end if;
	end if;
end loop;
 
select	count(1) 
into STRICT	qt_registros_w 
from	ptu_resposta_req_servico 
where	ie_status_requisicao	= 2 
and	nr_seq_resp_req_ord	= nr_seq_resposta_w;
 
if (qt_registros_w	> 0) then 
	-- Se a resposta da ordem de serviço vier com serviços recusados e aceitos, a ordem de serviço fica pendente de pedido de autorização 
	update	ptu_requisicao_ordem_serv 
	set	ie_estagio			= 8 
	where	nr_sequencia		= nr_seq_ordem_serv_w;
else 
	-- Se a resposta da ordem de serviço for totalmente recusada, se encerra o processo 
	update	ptu_requisicao_ordem_serv 
	set	ie_estagio			= 4 
	where	nr_sequencia		= nr_seq_ordem_serv_w;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_resp_ordem_serv_v50 ( nr_seq_retorno_p bigint, nr_versao_ptu_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

