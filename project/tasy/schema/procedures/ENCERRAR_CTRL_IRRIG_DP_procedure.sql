-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE encerrar_ctrl_irrig_dp (nr_prescricao_p bigint, nr_seq_solucao_p bigint, dt_encerramento_p timestamp, nm_usuario_p text) AS $body$
DECLARE


nr_seq_evento_w	bigint;
nr_seq_event_hor_w	hd_prescricao_evento.nr_sequencia%type;
nr_seq_map_w	material_atend_paciente.nr_sequencia%type;
ie_regra_lanc_conta_w	varchar(2);

C01 CURSOR FOR
SELECT	a.nr_sequencia nr_seq_horario,
		a.nr_etapa_sol nr_etapa_evento
from	prescr_mat_hor a
where	coalesce(a.ie_horario_especial,'N') = 'N'
and		coalesce(a.dt_suspensao::text, '') = ''
and		(a.dt_inicio_horario IS NOT NULL AND a.dt_inicio_horario::text <> '')
and		coalesce(a.dt_fim_horario::text, '') = ''
and		a.nr_seq_solucao	= nr_seq_solucao_p
and		a.nr_prescricao 	= nr_prescricao_p
order by 	a.nr_etapa_sol,
			a.nr_sequencia;

BEGIN
if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') and (dt_encerramento_p IS NOT NULL AND dt_encerramento_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	
	ie_regra_lanc_conta_w	:= obter_regra_lanc_conta_adep(	cd_estabelecimento_p	=> wheb_usuario_pck.get_cd_estabelecimento,
															cd_perfil_p				=> obter_perfil_ativo, 
															nm_usuario_p			=> nm_usuario_p, 
															ie_momento_p			=> 'AP');

	if (ie_regra_lanc_conta_w = 'N') then
		ie_regra_lanc_conta_w	:= obter_regra_lanc_conta_adep(	cd_estabelecimento_p	=> wheb_usuario_pck.get_cd_estabelecimento,
																cd_perfil_p				=> obter_perfil_ativo, 
																nm_usuario_p			=> nm_usuario_p, 
																ie_momento_p			=> 'CG');
	end if;
	
	for c01_w in c01 loop
		update	prescr_mat_hor
		set		dt_fim_horario 	= clock_timestamp(),
				dt_interrupcao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
		where	nr_sequencia	= c01_w.nr_seq_horario;
		
		if (ie_regra_lanc_conta_w = 'S') then
			nr_seq_map_p 			=> nr_seq_map_w := gerar_estornar_adep_map(nr_seq_processo_p 		=> null, nr_seq_horario_p 		=> c01_w.nr_seq_horario, nr_seq_area_prep_p 		=> null, ie_gerar_estornar_p 	=> 'G', dt_gerar_estornar_p 	=> clock_timestamp(), nm_usuario_p 			=> nm_usuario_p, nr_seq_map_p 			=> nr_seq_map_w, ie_momento_p 			=> null, qt_material_p 			=> null, nr_seq_lote_fornec_p	=> null);

		elsif (ie_regra_lanc_conta_w = 'L') and (obter_se_lote_hor_conta_pac(c01_w.nr_seq_horario) = 'S') then

			nr_seq_map_p 			=> nr_seq_map_w := gerar_estornar_adep_map(nr_seq_processo_p 		=> null, nr_seq_horario_p 		=> c01_w.nr_seq_horario, nr_seq_area_prep_p 		=> null, ie_gerar_estornar_p 	=> 'G', dt_gerar_estornar_p 	=> clock_timestamp(), nm_usuario_p 			=> nm_usuario_p, nr_seq_map_p 			=> nr_seq_map_w, ie_momento_p 			=> null, qt_material_p 			=> null, nr_seq_lote_fornec_p	=> null);
		end if;
		
		select 	max(a.nr_sequencia)
		into STRICT	nr_seq_event_hor_w
		from	hd_prescricao_evento a
		where	a.nr_prescricao = nr_prescricao_p
		and		a.nr_seq_solucao = nr_seq_solucao_p
		and		a.nr_etapa_evento = c01_w.nr_etapa_evento
		and		coalesce(a.ie_evento_valido, 'S') <> 'N'
		and		a.ie_evento = 'IT';
		
		if (coalesce(nr_seq_event_hor_w::text, '') = '') then

			select	nextval('hd_prescricao_evento_seq')
			into STRICT	nr_seq_evento_w
			;

			insert into hd_prescricao_evento(
				nr_sequencia,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_atualizacao,
				nm_usuario,
				nr_prescricao,
				nr_seq_solucao,
				nr_etapa_evento,
				ie_evento,
				dt_evento,
				cd_pessoa_evento)
			values (
				nr_seq_evento_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_prescricao_p,
				nr_seq_solucao_p,
				c01_w.nr_etapa_evento,
				'IT',
				dt_encerramento_p,
				substr(obter_dados_usuario_opcao(nm_usuario_p,'C'),1,10));
		end if;
	end loop;

	update	prescr_solucao
	set	ie_status		= 'T',
		dt_status 		= dt_encerramento_p
	where	nr_prescricao 	= nr_prescricao_p
	and	nr_seq_solucao 	= nr_seq_solucao_p;	

	select	nextval('hd_prescricao_evento_seq')
	into STRICT	nr_seq_evento_w
	;

	insert into hd_prescricao_evento(
		nr_sequencia,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_atualizacao,
		nm_usuario,
		nr_prescricao,
		nr_seq_solucao,
		ie_evento,
		dt_evento,
		cd_pessoa_evento,
		qt_volume)
	values (
		nr_seq_evento_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_prescricao_p,
		nr_seq_solucao_p,
		'T',
		dt_encerramento_p,
		substr(obter_dados_usuario_opcao(nm_usuario_p,'C'),1,10),
		null);
		
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE encerrar_ctrl_irrig_dp (nr_prescricao_p bigint, nr_seq_solucao_p bigint, dt_encerramento_p timestamp, nm_usuario_p text) FROM PUBLIC;

