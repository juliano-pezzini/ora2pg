-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_debito_sicredi_150 ( nr_seq_cobr_escrit_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE
 	
 
 
	 
ds_conteudo_w		varchar(4000);	
nr_contador_w		bigint	:= 0;
vl_soma_debito_w	double precision	:= 0;
	
/* VARIÁVEIS REGISTRO 'A' HEADER DE ARQUIVO */
					 
ie_tipo_registro_w	varchar(1);
ie_remessa_retorno_w	smallint;	
cd_convenio_w		varchar(20);
nm_empresa_w		varchar(20);
cd_banco_w		smallint;
nm_banco_w		varchar(20);
dt_geracao_w		varchar(8);
nr_seq_arquivo		varchar(6);
nr_versao_layout_w	varchar(2);
ds_servico_w		varchar(17);

/* VARIÁVEIS REGISTRO 'E' */
 
--ie_tipo_registro_w		varchar2(1); 
cd_agencia_debitada_w	varchar(4);
dt_vencimento_w		varchar(8);
vl_debito_w		varchar(15);
ie_tipo_moeda_w		varchar(2);
ds_titulo_w		varchar(60);
ie_tipo_pessoa_w	smallint;
ds_cgc_cpf_w		varchar(15);
ie_tipo_movimento_w	smallint;
vl_cobranca_w		double precision	:= 0;
cd_carteira_w		varchar(25);

/* VARIÁVEIS REGISTRO 'Z' TRAILER DE ARQUIVO */
 
--ie_tipo_registro_w		varchar2(1); 
qt_reg_arquivo_w	varchar(6);
vl_soma_valores_w	varchar(20);
nr_seq_arquivo_w	varchar(15);
nr_remessa_w		bigint;
nr_conta_w		varchar(20);
	
C01 CURSOR FOR 
	SELECT	rpad(coalesce(pls_obter_dados_pagador_fin(e.nr_seq_pagador,'A'),b.cd_agencia_bancaria),4,' '), 
		rpad(lpad(coalesce(pls_obter_dados_pagador_fin(e.nr_seq_pagador,'C'),b.nr_conta),6,'0') || coalesce(pls_obter_dados_pagador_fin(e.nr_seq_pagador,'DC'),b.ie_digito_conta),14,' '), 
		rpad(substr(to_char(d.dt_pagamento_previsto,'yyyymmdd'),1,8),8,' '), 
		rpad(d.nr_titulo,60,' '), 
		replace(to_char(b.vl_cobranca, 'fm0000000000000.00'), '.', ''), 
		CASE WHEN coalesce(d.cd_pessoa_fisica::text, '') = '' THEN  '1'  ELSE '2' END , 
		lpad(coalesce(d.cd_cgc,coalesce(obter_cpf_pessoa_fisica(d.cd_pessoa_fisica),'0')),15,'0'), 
		b.vl_cobranca, 
		rpad(coalesce(substr(pls_obter_dados_segurado(pls_obter_segurado_pagador(e.nr_seq_pagador),'C'),1,25),'0'),25,' ') 
	FROM banco_estabelecimento c, titulo_receber_cobr b, cobranca_escritural a, titulo_receber d
LEFT OUTER JOIN pls_mensalidade e ON (d.nr_seq_mensalidade = e.nr_sequencia)
WHERE a.nr_seq_conta_banco	= c.nr_sequencia and b.nr_seq_cobranca	= a.nr_sequencia and b.nr_titulo		= d.nr_titulo  and a.nr_sequencia		= nr_seq_cobr_escrit_p;


BEGIN 
delete from	w_envio_banco;
 
/*==================== REGISTRO 'A'HEADER ====================*/
 
nr_contador_w		:= nr_contador_w + 1;
ds_conteudo_w		:= '';
ie_tipo_registro_w	:= 'A';
ie_remessa_retorno_w	:= 1; --Remessa 
dt_geracao_w		:= rpad((to_char(clock_timestamp(),'yyyymmdd')),8,' ');
nr_seq_arquivo_w	:= lpad(nr_remessa_w,6,'0');
nr_versao_layout_w	:= '04';
ds_servico_w		:= 'DEBITO AUTOMATICO';
 
select	rpad(coalesce(c.cd_conv_banco_deb,c.cd_convenio_banco),20,' ') cd_convenio_banco, 
	rpad(substr(obter_razao_social(b.cd_cgc),1,100),20,' ') nm_empresa, 
	rpad(c.cd_banco,3,' '), 
	rpad(substr(obter_nome_banco(a.cd_banco),1,100),20,' ') ds_banco, 
	a.nr_remessa 
into STRICT	cd_convenio_w, 
	nm_empresa_w, 
	cd_banco_w, 
	nm_banco_w, 
	nr_remessa_w 
from	estabelecimento b, 
	banco_estabelecimento c, 
	cobranca_escritural a 
where	a.cd_estabelecimento	= b.cd_estabelecimento 
and	a.nr_seq_conta_banco	= c.nr_sequencia 
and	a.nr_sequencia		= nr_seq_cobr_escrit_p;
 
ds_conteudo_w	:=	ie_tipo_registro_w	||	ie_remessa_retorno_w	||	cd_convenio_w		||	nm_empresa_w	|| 
			cd_banco_w		||	nm_banco_w		||	dt_geracao_w		|| lpad(coalesce(nr_remessa_w,'0'),6,'0') || 
			nr_versao_layout_w	||	ds_servico_w		||	rpad(' ', 52, ' ');
			 
insert into	w_envio_banco(nr_sequencia, 
	cd_estabelecimento, 
	nm_usuario, 
	dt_atualizacao, 
	nm_usuario_nrec, 
	dt_atualizacao_nrec, 
	ds_conteudo, 
	nr_seq_apres) 
values (nextval('w_envio_banco_seq'), 
	cd_estabelecimento_p, 
	nm_usuario_p, 
	clock_timestamp(), 
	nm_usuario_p, 
	clock_timestamp(), 
	ds_conteudo_w, 
	nr_contador_w);
 
/*==================== REGISTRO 'E' ====================*/
 
ds_conteudo_w		:= '';
ie_tipo_registro_w	:= 'E';
ie_tipo_movimento_w	:= 0;
ie_tipo_moeda_w		:= '03'; --Real 
open C01;
loop 
fetch C01 into	 
	cd_agencia_debitada_w, 
	nr_conta_w, 
	dt_vencimento_w, 
	ds_titulo_w, 
	vl_debito_w, 
	ie_tipo_pessoa_w, 
	ds_cgc_cpf_w, 
	vl_cobranca_w, 
	cd_carteira_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	nr_contador_w		:= nr_contador_w + 1;
	vl_soma_debito_w	:= vl_soma_debito_w + vl_cobranca_w;
	 
	ds_conteudo_w	:=	ie_tipo_registro_w	||	cd_carteira_w		||	cd_agencia_debitada_w	||	nr_conta_w || 
				dt_vencimento_w		||	vl_debito_w		||	ie_tipo_moeda_w		||	ds_titulo_w	|| 
				'        '/*ie_tipo_pessoa_w	||	ds_cgc_cpf_w*/		||	rpad(' ',4,' ')		||	ie_tipo_movimento_w;
 
	insert into	w_envio_banco(nr_sequencia, 
		cd_estabelecimento, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		ds_conteudo, 
		nr_seq_apres) 
	values (nextval('w_envio_banco_seq'), 
		cd_estabelecimento_p, 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		ds_conteudo_w, 
		nr_contador_w);	
	end;
end loop;
close C01;	
 
/*==================== REGISTRO 'Z' TRAILER====================*/
 
nr_contador_w		:= nr_contador_w + 1;
ds_conteudo_w		:= '';
ie_tipo_registro_w	:= 'Z';
qt_reg_arquivo_w	:= lpad(nr_contador_w,6,'0');
vl_soma_valores_w	:= replace(to_char(vl_soma_debito_w, 'fm000000000000000.00'), '.', '');
 
ds_conteudo_w		:= ie_tipo_registro_w	||	qt_reg_arquivo_w	||	vl_soma_valores_w	||	rpad(' ',126,' ');
 
insert into	w_envio_banco(nr_sequencia, 
	cd_estabelecimento, 
	nm_usuario, 
	dt_atualizacao, 
	nm_usuario_nrec, 
	dt_atualizacao_nrec, 
	ds_conteudo, 
	nr_seq_apres) 
values (nextval('w_envio_banco_seq'), 
	cd_estabelecimento_p, 
	nm_usuario_p, 
	clock_timestamp(), 
	nm_usuario_p, 
	clock_timestamp(), 
	ds_conteudo_w, 
	nr_contador_w);	
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_debito_sicredi_150 ( nr_seq_cobr_escrit_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

