-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_gerar_prestador_proc (nr_seq_procedimento_p bigint, nm_usuario_p text, ie_honorario_p text) AS $body$
DECLARE


cd_convenio_w			bigint;
cd_estabelecimento_w		bigint;
cd_especialidade_w		integer;
cd_medico_atendimento_w		bigint;
cd_medico_convenio_w		varchar(15);
cd_medico_executor_w		bigint;
cd_setor_atendimento_w		bigint;
cd_setor_entrada_w		bigint;
ds_campo_w			varchar(255);
ie_conveniado_w			varchar(10);
ie_honor_spsadt_w		varchar(10);
ie_origem_w			varchar(255);
ie_responsavel_credito_w	varchar(255);
ie_tipo_atendimento_w		smallint;
ie_tipo_guia_proc_w		varchar(255);
ie_tipo_guia_proc_honor_w	varchar(255);
ie_tiss_tipo_guia_w		varchar(255);
nr_atendimento_w		bigint;
nr_crm_w			varchar(255);
nr_cpf_w			varchar(255);
nr_seq_campo_prest_w		bigint;
nr_seq_regra_w			bigint;
ie_funcao_medico_w		varchar(10);
cd_cgc_prestador_w		varchar(14);

c01 CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_campo_prest
from	tiss_regra_campo_prest
where	cd_estabelecimento					= cd_estabelecimento_w
and	cd_convenio						= cd_convenio_w
and	tiss_obter_tipo_guia_prest(nr_seq_campo_prest)		= ie_tiss_tipo_guia_w
and	coalesce(cd_cgc_prestador,coalesce(cd_cgc_prestador_w,'X'))	= coalesce(cd_cgc_prestador_w,'X')
order by cd_cgc_prestador;

c02 CURSOR FOR
SELECT	ie_origem
from	tiss_regra_prest_origem
where	nr_seq_regra		= nr_seq_regra_w
order by coalesce(ie_prioridade,0);	


BEGIN

delete 	from proc_paciente_tiss_prest
where	nr_seq_procedimento 	= nr_seq_procedimento_p;

select	max(a.nr_atendimento),
	max(c.cd_medico_executor),
	max(a.cd_medico_resp),
	max(b.cd_convenio_parametro),
	max(b.cd_estabelecimento),
	max(c.cd_especialidade),
	max(c.cd_setor_atendimento),
	max(c.ie_tiss_tipo_guia),
	max(c.ie_tiss_tipo_guia_honor),
	max(c.ie_responsavel_credito),
	max(a.ie_tipo_atendimento),
	max(OBTER_SETOR_ATENDIMENTO(a.nr_atendimento)),
	max(c.ie_funcao_medico),
	max(c.cd_cgc_prestador)
into STRICT	nr_atendimento_w,
	cd_medico_executor_w,
	cd_medico_atendimento_w,
	cd_convenio_w,
	cd_estabelecimento_w,
	cd_especialidade_w,
	cd_setor_atendimento_w,
	ie_tipo_guia_proc_w,
	ie_tipo_guia_proc_honor_w,
	ie_responsavel_credito_w,
	ie_tipo_atendimento_w,
	cd_setor_entrada_w,
	ie_funcao_medico_w,
	cd_cgc_prestador_w
from	atendimento_paciente a,
	conta_paciente b,
	procedimento_paciente c
where	a.nr_atendimento	= b.nr_atendimento
and	b.nr_interno_conta	= c.nr_interno_conta
and	c.nr_sequencia		= nr_seq_procedimento_p;

/*
ie_honor_spsadt_w	:= TISS_OBTER_SE_HONOR_SPSADT
					(cd_convenio_w,
					cd_estabelecimento_w,
					ie_responsavel_credito_w,
					ie_tipo_atendimento_w,
					cd_setor_entrada_w,
					'S');
*/


--Obter tipo de guia do procedimento
ie_tiss_tipo_guia_w	:= 'SADT';

if (ie_tipo_guia_proc_w = '4') and (ie_honorario_p = 'N') then
	ie_tiss_tipo_guia_w	:= 'SADT';
elsif (ie_tipo_guia_proc_honor_w = '4') and (ie_honorario_p = 'S') then
	ie_tiss_tipo_guia_w	:= 'SADTH';
end if;

open c01;
loop
fetch c01 into
	nr_seq_regra_w,
	nr_seq_campo_prest_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	
	ds_campo_w	:= null;

	open c02;
	loop
	fetch c02 into
		ie_origem_w;
	EXIT WHEN NOT FOUND or (ds_campo_w IS NOT NULL AND ds_campo_w::text <> '');  /* apply on c02 */

		if (ie_origem_w = 'N') then

			ds_campo_w := 'X';			

		elsif (ie_origem_w in ('CPFMA','CRMMA','CPMA')) then

			if (cd_medico_atendimento_w IS NOT NULL AND cd_medico_atendimento_w::text <> '') then			
		
				if (ie_origem_w = 'CPFMA') then -- CPF - Médico do atendimento
					select	obter_cpf_pessoa_fisica(cd_medico_atendimento_w)
					into STRICT	ds_campo_w
					;

				elsif (ie_origem_w = 'CRMMA') then -- CRM - Médico do atendimento
		
					select	obter_crm_medico(cd_medico_atendimento_w)
					into STRICT	ds_campo_w
					;

				elsif (ie_origem_w = 'CPMA') then -- Código do prestador - Médico do atendimento
					select	coalesce(max(obter_se_medico_conveniado(cd_estabelecimento_w,cd_medico_atendimento_w, cd_convenio_w, null,cd_especialidade_w, null,null,null,null, null, null)), 'N')
					into STRICT	ie_conveniado_w	
					;
	
					if (ie_conveniado_w = 'S') then
						select	max(tiss_obter_codigo_prestador(cd_convenio_w,cd_estabelecimento_w, cd_medico_atendimento_w, null, cd_setor_atendimento_w, 'CI',clock_timestamp(),ie_tipo_atendimento_w,null))
						into STRICT	ds_campo_w
						;
					else
						ds_campo_w := 'X';
					end if;					
				end if;
			end if;

		elsif (ie_origem_w in ('CPFME','CRMME','CPME','CPFMEC','CPFMENC','CPMEC','CRMMEC','CRMMENC')) then

			if (cd_medico_executor_w IS NOT NULL AND cd_medico_executor_w::text <> '') then

				select	coalesce(max(obter_se_medico_conveniado(cd_estabelecimento_w,cd_medico_executor_w, cd_convenio_w, null, cd_especialidade_w, null,null,null,null, null, null,ie_funcao_medico_w)), 'N')
				into STRICT	ie_conveniado_w	
				;		
				
				if (ie_origem_w = 'CPFME') then -- CPF - Médico executor
		
					select	obter_cpf_pessoa_fisica(cd_medico_executor_w)
					into STRICT	ds_campo_w
					;

				elsif (ie_origem_w = 'CRMME') then -- CRM - Médico executor		
			
					select	obter_crm_medico(cd_medico_executor_w)
					into STRICT	ds_campo_w
					;

				elsif (ie_origem_w = 'CPME') then -- Código do prestador - Médico executor
					if (ie_conveniado_w = 'S') then
						select	max(tiss_obter_codigo_prestador(cd_convenio_w,cd_estabelecimento_w, cd_medico_executor_w, null, cd_setor_atendimento_w, 'CI',clock_timestamp(),ie_tipo_atendimento_w,null,ie_funcao_medico_w))
						into STRICT	ds_campo_w
						;
					else
						ds_campo_w := 'X';
					end if;

				elsif (ie_origem_w = 'CPFMEC') then

					if (ie_conveniado_w = 'S') then
						select	obter_cpf_pessoa_fisica(cd_medico_executor_w)
						into STRICT	ds_campo_w
						;
					else
						ds_campo_w := 'X';
					end if;	

				elsif (ie_origem_w = 'CPFMENC') then
					
					if (ie_conveniado_w = 'N') then
						select	obter_cpf_pessoa_fisica(cd_medico_executor_w)
						into STRICT	ds_campo_w
						;
					else
						ds_campo_w := 'X';
					end if;

				elsif (ie_origem_w = 'CPMEC') then

					if (ie_conveniado_w = 'S') then
						select	max(tiss_obter_codigo_prestador(cd_convenio_w,cd_estabelecimento_w, cd_medico_executor_w, null, cd_setor_atendimento_w, 'CI',clock_timestamp(),ie_tipo_atendimento_w,null,ie_funcao_medico_w))
						into STRICT	ds_campo_w
						;
					else
						ds_campo_w := 'X';
					end if;

				elsif (ie_origem_w = 'CRMMEC') then

					if (ie_conveniado_w = 'S') then
						select	obter_crm_medico(cd_medico_executor_w)
						into STRICT	ds_campo_w
						;
					else
						ds_campo_w := 'X';
					end if;

				elsif (ie_origem_w = 'CRMMENC') then
				
					if (ie_conveniado_w = 'N') then
						select	obter_crm_medico(cd_medico_executor_w)
						into STRICT	ds_campo_w
						;
					else
						ds_campo_w := 'X';
					end if;
					
				end if;
			end if;

		elsif (ie_origem_w = 'MA') then
			if (cd_medico_atendimento_w IS NOT NULL AND cd_medico_atendimento_w::text <> '') then

				select	substr(obter_nome_pf_pj(cd_medico_atendimento_w,null),1,255)
				into STRICT	ds_campo_w
				;

			end if;	
	
		elsif (ie_origem_w in ('ME','MEC','MENC')) then

			if (cd_medico_executor_w IS NOT NULL AND cd_medico_executor_w::text <> '') then
			
				if (ie_origem_w = 'ME') then

					select	substr(obter_nome_pf_pj(cd_medico_executor_w,null),1,255)
					into STRICT	ds_campo_w 
					;

				elsif (ie_origem_w = 'MEC') then

					select	coalesce(max(obter_se_medico_conveniado(cd_estabelecimento_w,cd_medico_executor_w, cd_convenio_w, null, cd_especialidade_w, null,null,null,null, null, null)), 'N')
					into STRICT	ie_conveniado_w	
					;
				
					if (ie_conveniado_w = 'S') then
						select	substr(obter_nome_pf_pj(cd_medico_executor_w,null),1,255)
						into STRICT	ds_campo_w
						;										
					end if;
				elsif (ie_origem_w = 'MENC') then
					
					select	coalesce(max(obter_se_medico_conveniado(cd_estabelecimento_w,cd_medico_executor_w, cd_convenio_w, null, cd_especialidade_w, null,null,null,null, null, null)), 'N')
					into STRICT	ie_conveniado_w	
					;
		
					if (ie_conveniado_w = 'N') then
						select	substr(obter_nome_pf_pj(cd_medico_executor_w,null),1,255)
						into STRICT	ds_campo_w
						;
					else
						ds_campo_w := 'X';
					end if;
				end if;
		
			end if;
		elsif (ie_origem_w in ('FME')) then		
			if (ie_funcao_medico_w IS NOT NULL AND ie_funcao_medico_w::text <> '') then
				ds_campo_w	:= tiss_obter_grau_partic(ie_funcao_medico_w);
			end if;			
		end if;	

	end loop;
	close c02;
	

	if (ds_campo_w IS NOT NULL AND ds_campo_w::text <> '') then
		
		insert into proc_paciente_tiss_prest(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_procedimento,
			nr_seq_campo_prest,
			ds_campo)
		values (nextval('proc_paciente_tiss_prest_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_procedimento_p,
			nr_seq_campo_prest_w,
			ds_campo_w);
	end if;

end loop;
close c01;

--if (nvl(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_gerar_prestador_proc (nr_seq_procedimento_p bigint, nm_usuario_p text, ie_honorario_p text) FROM PUBLIC;

