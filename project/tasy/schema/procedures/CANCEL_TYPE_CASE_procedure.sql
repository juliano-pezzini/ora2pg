-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cancel_type_case (( cd_tipo_agenda_p agenda.cd_tipo_agenda%TYPE, ds_grupo_p text, nr_atendimento_p atendimento_paciente.nr_atendimento%TYPE, nr_grouping_his_p bigint ) IS nr_sequencia_w bigint) RETURNS bigint AS $body$
DECLARE

        tam_lista_w bigint;

BEGIN
        SELECT
            length(ds)
        INTO STRICT tam_lista_w
;

        RETURN tam_lista_w;
    END;

    FUNCTION get_position(
                          ds     IN   CLOB,
                          item   IN   VARCHAR2
    ) RETURN NUMBER IS
        ie_pos_w NUMBER(5);
    BEGIN
        SELECT
            position(item in ds)
        INTO STRICT ie_pos_w
;

        RETURN ie_pos_w;
    END;

BEGIN
    BEGIN
        ds_grupo_w := ds_grupo_p;
        WHILE(ds_grupo_w IS NOT NULL AND ds_grupo_w::text <> '') LOOP
            ie_pos_w := get_position(ds_grupo_w, '#');
            IF ( ie_pos_w <> 0 ) THEN
                nr_sequencia_w := (substr(ds_grupo_w, 1,(ie_pos_w - 1)))::numeric;

                ds_grupo_w := substr(ds_grupo_w,(ie_pos_w + 1), get_length(ds_grupo_w));

                IF ( cd_tipo_agenda_p = 1 ) THEN

                    SELECT MAX(ie_status_agenda)
                    INTO STRICT ds_prev_status_agepac_w
                    FROM agenda_paciente
                    WHERE nr_sequencia = nr_sequencia_w;

                    CALL cancelar_agenda_paciente_html(nr_sequencia_w, NULL, wheb_mensagem_pck.get_texto(1060228));

                    CALL insert_atend_hist_paciente(nr_atendimento_p, cd_tipo_agenda_p, NULL, NULL, NULL, NULL, nr_sequencia_w, NULL, nr_grouping_his_p, NULL, ds_prev_status_agepac_w);

                ELSIF ( cd_tipo_agenda_p = 2 ) THEN
                    SELECT
                        MAX(cd_agenda),
                        MAX(ie_status_agenda)
                    INTO STRICT cd_agenda_w,
                        ds_prev_status_agepac_w
                    FROM
                        agenda_paciente
                    WHERE
                        nr_sequencia = nr_sequencia_w;

                    CALL alterar_status_agenda(cd_agenda_w, nr_sequencia_w, 'C', NULL, wheb_mensagem_pck.get_texto(1060228),
                                          'N', wheb_usuario_pck.get_nm_usuario, 0);
                    CALL insert_atend_hist_paciente(nr_atendimento_p, cd_tipo_agenda_p, NULL, NULL, NULL, NULL, nr_sequencia_w, NULL, nr_grouping_his_p, NULL, ds_prev_status_agepac_w);

                ELSIF ( cd_tipo_agenda_p = 3 ) THEN
                    SELECT
                        MAX(cd_agenda),
                        MAX(ie_status_agenda)
                    INTO STRICT cd_agenda_w,
                        ds_prev_status_agecon_w
                    FROM
                        agenda_consulta
                    WHERE
                        nr_sequencia = nr_sequencia_w;

                    CALL alterar_status_agecons(cd_agenda_w, nr_sequencia_w, 'C', NULL, wheb_mensagem_pck.get_texto(1060228),
                                           'N', wheb_usuario_pck.get_nm_usuario, 0);

                    CALL insert_atend_hist_paciente(nr_atendimento_p, cd_tipo_agenda_p, NULL, NULL, NULL, NULL, nr_sequencia_w, NULL, nr_grouping_his_p, NULL, ds_prev_status_agecon_w);

                ELSIF ( cd_tipo_agenda_p = 5 ) THEN

                    SELECT MAX(ie_status_agenda)
                    INTO STRICT ds_prev_status_agecon_w
                    FROM agenda_consulta
                    WHERE nr_sequencia = nr_sequencia_w;

                    CALL alterar_status_agenda_dia_cons(nr_sequencia_w, 'C', wheb_usuario_pck.get_nm_usuario);

                    CALL insert_atend_hist_paciente(nr_atendimento_p, cd_tipo_agenda_p, NULL, NULL, NULL, NULL, nr_sequencia_w, NULL, nr_grouping_his_p, NULL, ds_prev_status_agecon_w);

                ELSIF ( cd_tipo_agenda_p = 10 ) THEN

                    SELECT  gv.ie_status
                    INTO STRICT  ds_prev_status_bed_w
                    FROM gestao_vaga gv
                    WHERE gv.nr_sequencia = nr_sequencia_w;

                    atualizar_status_gestao_html('C', wheb_usuario_pck.get_nm_usuario, nr_sequencia_w, NULL, NULL,
                                                 NULL, NULL, wheb_usuario_pck.get_nm_usuario, NULL, NULL);

                    CALL insert_atend_hist_paciente(nr_atendimento_p, cd_tipo_agenda_p, NULL, NULL, NULL, NULL, nr_sequencia_w, NULL, nr_grouping_his_p, NULL, ds_prev_status_bed_w);

                END IF;

            ELSE
                ds_grupo_w := NULL;
            END IF;

        END LOOP;

    EXCEPTION
        WHEN OTHERS THEN
            INSERT INTO log_atendimento(
                dt_atualizacao,
                nm_usuario,
                cd_log,
                ds_log
            ) VALUES (
                clock_timestamp(),
                wheb_usuario_pck.get_nm_usuario,
                17,
                substr('cancel_type_case_cancel - cd_tipo_p:'
                       || cd_tipo_agenda_p
                       || ' nr_seq_w:'
                       || nr_sequencia_w
                       || ' nr_atend_p:'
                       || nr_atendimento_p
                       || ' list:'
                       || ds_grupo_p, 1, 2000)
            );

            COMMIT;
    END;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cancel_type_case (( cd_tipo_agenda_p agenda.cd_tipo_agenda%TYPE, ds_grupo_p text, nr_atendimento_p atendimento_paciente.nr_atendimento%TYPE, nr_grouping_his_p bigint ) IS nr_sequencia_w bigint) FROM PUBLIC;

