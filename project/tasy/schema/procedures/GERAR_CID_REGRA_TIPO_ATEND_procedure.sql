-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cid_regra_tipo_atend ( nr_seq_proc_interno_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_medico_p text, nr_atendimento_p bigint, nm_usuario_p text DEFAULT null) AS $body$
DECLARE

cd_doenca_cid_w		varchar(10);
ie_existe_w		bigint;
dt_diagnostico_w	timestamp;
ie_clinica_w		integer;
ie_tipo_atendimento_w	smallint;
ie_tipo_diagnostico_w	integer;
cd_setor_atendimento_w	integer;
cd_medico_resp_w	varchar(10);
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
ie_classif_doenca_w	varchar(1);
ie_tipo_diagnostico_reg_w	smallint;

C01 CURSOR FOR
	SELECT	cd_doenca_cid,
		ie_classificacao_doenca,
		ie_tipo_diagnostico
	from	regra_tipo_atend_cid
	where	((nr_seq_proc_interno = nr_seq_proc_interno_p) or (cd_procedimento = cd_procedimento_p AND ie_origem_proced = ie_origem_proced_p))	
	and	((cd_setor_atendimento = cd_setor_atendimento_w) or (coalesce(cd_setor_atendimento::text, '') = ''))
	and	((ie_clinica = ie_clinica_w) or (coalesce(ie_clinica::text, '') = ''))
	and	((ie_tipo_atendimento = ie_tipo_atendimento_w) or (coalesce(ie_tipo_atendimento::text, '') = ''))
	and	((cd_medico = cd_medico_resp_w) or (coalesce(cd_medico::text, '') = ''));

BEGIN
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then

	ie_tipo_diagnostico_w := obter_param_usuario(916, 83, obter_perfil_ativo, coalesce(nm_usuario_p, wheb_usuario_pck.get_nm_usuario), wheb_usuario_pck.get_cd_estabelecimento, ie_tipo_diagnostico_w);


	select  max(ie_clinica),
		max(ie_tipo_atendimento),
		max(obter_setor_atendimento(nr_atendimento)),
		max(cd_medico_resp)
	into STRICT	ie_clinica_w,
		ie_tipo_atendimento_w,
		cd_setor_atendimento_w,
		cd_medico_resp_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;


	open C01;
	loop
	fetch C01 into	
		cd_doenca_cid_w,
		ie_classif_doenca_w,
		ie_tipo_diagnostico_reg_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		select	count(*)
		into STRICT	ie_existe_w
		from	diagnostico_medico
		where	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_diagnostico)	= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp())
		and	nr_atendimento		= nr_atendimento_p
		and	cd_medico		= cd_medico_resp_w;

		if (ie_existe_w = 0) then
			dt_diagnostico_w	:= clock_timestamp();
			insert into diagnostico_medico(
				nr_atendimento,
				dt_diagnostico,
				ie_tipo_diagnostico,
				cd_medico,
				dt_atualizacao,
				nm_usuario,
				ds_diagnostico)
			Values (	
				nr_atendimento_p,
				dt_diagnostico_w,
				coalesce(ie_tipo_diagnostico_reg_w, coalesce(ie_tipo_diagnostico_w,2)),
				cd_medico_resp_w,
				clock_timestamp(),
				coalesce(nm_usuario_p, wheb_usuario_pck.get_nm_usuario),
				null);
		else
			select	max(dt_diagnostico)
			into STRICT	dt_diagnostico_w
			from	diagnostico_medico
			where	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_diagnostico)	= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp())
			and	nr_atendimento		= nr_atendimento_p
			and	cd_medico		= cd_medico_resp_w;
		end if;

		Insert into diagnostico_doenca(
			NR_ATENDIMENTO,
			DT_DIAGNOSTICO, 
			CD_DOENCA, 
			DT_ATUALIZACAO, 
			NM_USUARIO, 
			DS_DIAGNOSTICO, 
			IE_CLASSIFICACAO_DOENCA,
			ie_tipo_diagnostico)
		SELECT	nr_atendimento_p,
			dt_diagnostico_w,
			cd_doenca_cid_w,
			clock_timestamp(),
			coalesce(nm_usuario_p, wheb_usuario_pck.get_nm_usuario),
			null,
			coalesce(ie_classif_doenca_w,'S'),
			coalesce(ie_tipo_diagnostico_reg_w, coalesce(ie_tipo_diagnostico_w,2))
		
		where	not exists (SELECT	1
					from	diagnostico_doenca
					where	nr_atendimento	= nr_atendimento_p
					and	cd_doenca	= cd_doenca_cid_w
					and	dt_diagnostico	= dt_diagnostico_w);
		end;
	end loop;
	close C01;


end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cid_regra_tipo_atend ( nr_seq_proc_interno_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_medico_p text, nr_atendimento_p bigint, nm_usuario_p text DEFAULT null) FROM PUBLIC;

