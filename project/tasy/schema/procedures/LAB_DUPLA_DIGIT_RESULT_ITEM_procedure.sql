-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_dupla_digit_result_item ( nr_seq_result_p bigint, nr_seq_prescr_p bigint, nm_usuario_p text) AS $body$
DECLARE



ie_contem_registro_dig_w	varchar(1);
nm_usuario_w				varchar(255);
nm_usuario_seg_w			varchar(255);
nr_seq_result_item_w		bigint;
nr_seq_result_antib_w		bigint;
ds_resultado_w				varchar(2000);
qt_resultado_w				double precision;
pr_resultado_w				double precision;
ie_status_w					bigint;

c01 CURSOR FOR
	SELECT 	a.nr_sequencia
	FROM	exame_lab_result_item a,
			exame_lab_resultado b,
			prescr_procedimento c
	WHERE	a.nr_seq_resultado = b.nr_seq_resultado
	AND		b.nr_prescricao = c.nr_prescricao
	AND		a.nr_seq_prescr = c.nr_sequencia
	AND		coalesce(obter_data_aprov_lab(b.nr_prescricao, a.nr_seq_prescr)::text, '') = ''
	AND		c.ie_status_atend < 35
	AND		b.nr_seq_resultado = nr_seq_result_p
	AND		a.nr_seq_prescr	= nr_seq_prescr_p;

c02 CURSOR FOR
	SELECT	a.nr_sequencia
	FROM	exame_lab_result_antib a
	WHERE	a.nr_seq_resultado = nr_seq_result_p
	AND		a.nr_seq_result_item = nr_seq_result_item_w;


BEGIN

IF (nr_seq_result_p IS NOT NULL AND nr_seq_result_p::text <> '') THEN

	BEGIN
		SELECT 	nm_usuario_prim_dig,
				nm_usuario_seg_dig,
				a.ie_status,
				ds_resultado,
				qt_resultado,
				pr_resultado
		INTO STRICT 	nm_usuario_w,
				nm_usuario_seg_w,
				ie_status_w,
				ds_resultado_w,
				qt_resultado_w,
				pr_resultado_w
		FROM 	exame_lab_result_item a,
				exame_lab_resultado b,
				prescr_procedimento c
		WHERE 	a.nr_seq_resultado = b.nr_seq_resultado
		AND		b.nr_prescricao = c.nr_prescricao
		AND		a.nr_seq_prescr = c.nr_sequencia
		AND		a.nr_seq_resultado = nr_seq_result_p
		AND		a.nr_seq_prescr = nr_seq_prescr_p
		AND		coalesce(obter_data_aprov_lab(b.nr_prescricao, a.nr_seq_prescr)::text, '') = ''
		AND		c.ie_status_atend < 35
		AND		a.nr_sequencia = (SELECT 	min(nr_sequencia)
								from 	exame_lab_result_item x
								where 	a.nr_seq_resultado = x.nr_seq_resultado
								and		a.nr_seq_prescr = x.nr_seq_prescr
								and 	(x.nm_usuario_prim_dig IS NOT NULL AND x.nm_usuario_prim_dig::text <> ''));


		SELECT 	CASE WHEN COUNT(*)=0 THEN  'N'  ELSE 'S' END
		INTO STRICT 	ie_contem_registro_dig_w
		FROM 	exame_lab_result_dig
		WHERE 	nr_seq_resultado = nr_seq_result_p
		AND 	nr_seq_prescr = nr_seq_prescr_p;
	EXCEPTION
		WHEN no_data_found THEN
			nm_usuario_w := null;
			nm_usuario_seg_w := null;
			ie_status_w := null;
			ds_resultado_w := null;
			qt_resultado_w := null;
			pr_resultado_w := null;
			ie_contem_registro_dig_w := null;
	END;

	IF (UPPER(nm_usuario_p) = UPPER(nm_usuario_w)) THEN

		IF ((coalesce(ds_resultado_w::text, '') = ''
			AND coalesce(qt_resultado_w::text, '') = ''
			AND coalesce(pr_resultado_w::text, '') = '')
			AND (ie_contem_registro_dig_w = 'S')) THEN

			MERGE INTO exame_lab_result_item a
			USING(SELECT 	nr_seq_result_item,
							nr_seq_resultado,
							nr_seq_prescr,
							qt_resultado,
							ds_resultado,
							pr_resultado,
							ds_observacao,
							nm_usuario_prim_dig
					FROM 	exame_lab_result_dig
					WHERE 	nr_seq_resultado = nr_seq_result_p
					AND		nr_seq_prescr = nr_seq_prescr_p) b
			ON (a.nr_sequencia = b.nr_seq_result_item
				AND a.nr_seq_resultado = b.nr_seq_resultado
				AND a.nr_seq_prescr = b.nr_seq_prescr)
			WHEN MATCHED THEN
				UPDATE SET 	a.qt_resultado = b.qt_resultado,
							a.ds_resultado = b.ds_resultado,
							a.pr_resultado = b.pr_resultado,
							a.ds_observacao = b.ds_observacao,
							a.nm_usuario_prim_dig = nm_usuario_prim_dig;

			COMMIT;
		END IF;
	ELSIF (ie_contem_registro_dig_w = 'S'
			AND coalesce(nm_usuario_seg_w::text, '') = '') THEN

		OPEN c01;
		LOOP
		FETCH c01 INTO
				nr_seq_result_item_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */

			UPDATE 	exame_lab_result_item
			SET		qt_resultado  = NULL,
					ds_resultado  = NULL,
					pr_resultado  = NULL,
					nm_usuario = nm_usuario_p
			WHERE 	nr_sequencia = nr_seq_result_item_w
			AND   	nr_seq_prescr = nr_seq_prescr_p
			AND   	nr_seq_resultado = nr_seq_result_p;

			OPEN c02;
			LOOP
			FETCH c02 INTO
				nr_seq_result_antib_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */

				DELETE FROM exame_lab_result_antib
				WHERE 	nr_sequencia 		= nr_seq_result_antib_w
				AND   	nr_seq_result_item	= nr_seq_result_item_w
				AND   	nr_seq_resultado 	= nr_seq_result_p;

			END LOOP;
			CLOSE c02;

		END LOOP;
		CLOSE c01;

		COMMIT;
	END IF;
END IF;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_dupla_digit_result_item ( nr_seq_result_p bigint, nr_seq_prescr_p bigint, nm_usuario_p text) FROM PUBLIC;

