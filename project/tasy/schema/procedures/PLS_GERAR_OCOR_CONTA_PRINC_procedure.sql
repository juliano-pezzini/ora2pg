-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_ocor_conta_princ ( nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_grupo_atual_p pls_grupo_auditor.nr_sequencia%type default null) AS $body$
DECLARE


nr_seq_conta_proc_w		pls_conta_proc.nr_sequencia%type;
nr_seq_conta_mat_w		pls_conta_mat.nr_sequencia%type;
ie_tipo_item_w			varchar(1);
nr_seq_ocorrencia_w		pls_ocorrencia.nr_sequencia%type;
nr_seq_conta_pos_estab_w	pls_conta_pos_estabelecido.nr_sequencia%type;
ie_fechar_conta_w		pls_ocorrencia.ie_fechar_conta%type;
ie_auditoria_w			pls_ocorrencia.ie_auditoria_conta%type;
nr_seq_nivel_lib_w		pls_ocorrencia.nr_seq_nivel_lib%type;
ie_tipo_glosa_w			pls_ocorrencia.ie_tipo_glosa%type;
ie_finalizar_analise_w		pls_ocorrencia.ie_finalizar_analise%type;
ie_nivel_liberacao_w		pls_nivel_liberacao.nr_nivel_liberacao%type;
ds_documentacao_ww		varchar(255);
qt_liberada_w			pls_conta_proc_v.qt_procedimento%type;
nr_seq_mot_liberacao_w		pls_mot_lib_analise_conta.nr_sequencia%type;
qt_glosa_fat_w			pls_conta_proc_v.qt_procedimento%type;
qt_apresentada_w		pls_conta_proc_v.qt_procedimento_imp%type;
qt_ocorrencia_w			integer;
nr_seq_glosa_w			pls_conta_glosa.nr_sequencia%type;
nr_seq_motivo_glosa_w		pls_conta_glosa.nr_seq_motivo_glosa%type;
qt_glosa_w			integer;
nr_seq_conta_proc_pct_w		pls_conta_proc.nr_sequencia%type;
nr_seq_proc_partic_w		pls_proc_participante.nr_sequencia%type;
qt_partic_w			integer;
ds_log_call_w			varchar(1500);
vl_liberado_w			pls_conta_proc.vl_liberado%type;
vl_glosa_w			pls_conta_proc.vl_glosa%type;
ie_glosa_parcial_w		varchar(1);
ie_glosa_parc_regra_w		pls_regra_preco_pos_estab.ie_glosa_parc_valor%type;
ie_gera_glosa_w			varchar(1);

C01 CURSOR(	nr_seq_conta_proc_pc		pls_conta_proc.nr_sequencia%type,
		nr_seq_conta_mat_pc		pls_conta_mat.nr_sequencia%type,
		nr_seq_conta_pc			pls_conta.nr_sequencia%type,
		nr_seq_conta_pos_estab_pc	pls_conta_pos_estabelecido.nr_sequencia%type,
		nr_seq_conta_proc_pct_pc	pls_conta_proc.nr_sequencia%type) FOR
	SELECT	'P',
		a.nr_sequencia,
		b.qt_glosa_fat,
		b.nr_seq_proc_partic
	from	pls_ocorrencia a,
		pls_ocorrencia_benef b
	where	coalesce(nr_seq_conta_proc_pct_pc::text, '') = ''
	and	b.nr_seq_conta_proc = nr_seq_conta_proc_pc
	and	a.nr_sequencia = b.nr_seq_ocorrencia
	and	a.ie_glosar_faturamento = 'S'
	and	b.ie_situacao = 'A'
	and not exists (	SELECT	1
			from	pls_ocorrencia_benef c
			where	c.nr_seq_conta_pos_estab = nr_seq_conta_pos_estab_pc
			and	c.nr_seq_ocorrencia = a.nr_sequencia
			and	c.ie_forma_inativacao in ('U','US'))
	
union all

	select	'M',
		a.nr_sequencia,
		b.qt_glosa_fat,
		null
	from	pls_ocorrencia a,
		pls_ocorrencia_benef b
	where	coalesce(nr_seq_conta_proc_pct_pc::text, '') = ''
	and	b.nr_seq_conta_mat = nr_seq_conta_mat_pc
	and	a.nr_sequencia = b.nr_seq_ocorrencia
	and	a.ie_glosar_faturamento = 'S'
	and	b.ie_situacao = 'A'
	and not exists (	select	1
			from	pls_ocorrencia_benef c
			where	c.nr_seq_conta_pos_estab = nr_seq_conta_pos_estab_pc
			and	c.nr_seq_ocorrencia = a.nr_sequencia
			and	c.ie_forma_inativacao in ('U','US'))
	
union all

	select	'C',
		a.nr_sequencia,
		null qt_glosa_fat,
		null
	from	pls_ocorrencia a,
		pls_ocorrencia_benef b
	where	b.nr_seq_conta = nr_seq_conta_pc
	and	a.nr_sequencia = b.nr_seq_ocorrencia
	and	coalesce(b.nr_seq_conta_proc::text, '') = ''
	and	coalesce(b.nr_seq_conta_mat::text, '') = ''
	and	a.ie_glosar_faturamento = 'S'
	and	b.ie_situacao = 'A'
	and not exists (	select	1
			from	pls_ocorrencia_benef c
			where	c.nr_seq_conta_pos_estab = nr_seq_conta_pos_estab_pc
			and	c.nr_seq_ocorrencia = a.nr_sequencia
			and	c.ie_forma_inativacao in ('U','US'))
	
union all

	select	'T',
		a.nr_sequencia,
		b.qt_glosa_fat,
		null
	from	pls_ocorrencia a,
		pls_ocorrencia_benef b
	where	b.nr_seq_conta_proc = nr_seq_conta_proc_pct_pc
	and	a.nr_sequencia = b.nr_seq_ocorrencia
	and	a.ie_glosar_faturamento = 'S'
	and	b.ie_situacao = 'A'
	and not exists (	select	1
			from	pls_ocorrencia_benef c
			where	c.nr_seq_conta_pos_estab = nr_seq_conta_pos_estab_pc
			and	c.nr_seq_ocorrencia = a.nr_sequencia
			and	c.ie_forma_inativacao in ('U','US'));

C02 CURSOR( nr_seq_conta_pc	pls_conta.nr_sequencia%type) FOR
	SELECT	pos.nr_seq_conta_proc,
		pos.nr_seq_conta_mat,
		pos.nr_sequencia
	from	pls_conta_pos_estabelecido pos
	where	pos.nr_seq_conta = nr_seq_conta_pc
	and	pos.ie_status_faturamento	!= 'A'
	and	pos.ie_cobrar_mensalidade	!= 'A'
	and	((pos.ie_situacao = 'A') or (coalesce(pos.ie_situacao::text, '') = ''))

	and	not exists (	SELECT	1
				from	pls_analise_conta	analise
				where	analise.nr_sequencia	= pos.nr_seq_analise
				and	analise.ie_origem_analise = '7');

C03 CURSOR(	nr_seq_conta_proc_pc		pls_conta_proc.nr_sequencia%type,
		nr_seq_conta_mat_pc		pls_conta_mat.nr_sequencia%type,
		nr_seq_conta_pc			pls_conta.nr_sequencia%type,
		nr_seq_conta_pos_estab_pc	pls_conta_pos_estabelecido.nr_sequencia%type,
		nr_seq_conta_proc_pct_pc	pls_conta_proc.nr_sequencia%type) FOR
	SELECT	'P',
		a.nr_sequencia,
		a.qt_glosa_fat,
		a.nr_seq_motivo_glosa,
		a.nr_seq_proc_partic
	from	pls_conta_glosa		a
	where	coalesce(nr_seq_conta_proc_pct_pc::text, '') = ''
	and	a.nr_seq_conta_proc 	= nr_seq_conta_proc_pc
	and	coalesce(a.nr_seq_conta_pos_estab::text, '') = ''
	and	a.ie_situacao		= 'A'
	and	not exists (	SELECT	1
				from	pls_ocorrencia_benef c
				where	c.nr_seq_conta_pos_estab	= nr_seq_conta_pos_estab_pc
				and	c.nr_seq_glosa			= a.nr_sequencia
				and	c.ie_forma_inativacao		in ('U','US'))
	and	not exists (	select	1
				from	pls_ocorrencia x,
					pls_ocorrencia_benef y
				where 	x.nr_sequencia		= y.nr_seq_ocorrencia
				and	x.nr_sequencia 		= a.nr_seq_ocorrencia
				and	y.ie_situacao = 'A')
	
union all

	select	'M',
		a.nr_sequencia,
		a.qt_glosa_fat,
		a.nr_seq_motivo_glosa,
		null
	from	pls_conta_glosa 	a
	where	coalesce(nr_seq_conta_proc_pct_pc::text, '') = ''
	and	coalesce(a.nr_seq_conta_pos_estab::text, '') = ''
	and	a.nr_seq_conta_mat 	= nr_seq_conta_mat_pc
	and	a.ie_situacao		= 'A'
	and	not exists (	select	1
				from	pls_ocorrencia_benef c
				where	c.nr_seq_conta_pos_estab	= nr_seq_conta_pos_estab_pc
				and	c.nr_seq_glosa			= a.nr_sequencia
				and	c.ie_forma_inativacao		in ('U','US'))
	and	not exists (	select	1
				from	pls_ocorrencia x,
					pls_ocorrencia_benef y
				where 	x.nr_sequencia		= y.nr_seq_ocorrencia
				and	x.nr_sequencia 		= a.nr_seq_ocorrencia
				and	y.ie_situacao = 'A')
	
union all

	select	'C',
		a.nr_sequencia,
		null qt_glosa_fat,
		a.nr_seq_motivo_glosa,
		null
	from	pls_conta_glosa 	a
	where	a.nr_seq_conta		= nr_seq_conta_pc
	and	coalesce(a.nr_seq_conta_proc::text, '') = ''
	and	coalesce(a.nr_seq_conta_mat::text, '') = ''
	and	coalesce(a.nr_seq_conta_pos_estab::text, '') = ''
	and	a.ie_situacao		= 'A'
	and	not exists (	select	1
				from	pls_ocorrencia_benef c
				where	c.nr_seq_conta_pos_estab	= nr_seq_conta_pos_estab_pc
				and	c.nr_seq_glosa			= a.nr_sequencia
				and	c.ie_forma_inativacao		in ('U','US'))
	and	not exists (	select	1
				from	pls_ocorrencia x,
					pls_ocorrencia_benef y
				where 	x.nr_sequencia		= y.nr_seq_ocorrencia
				and	y.nr_seq_conta		= a.nr_seq_conta
				and	y.ie_situacao = 'A')
	
union all

	select	'T',
		a.nr_sequencia,
		a.qt_glosa_fat,
		a.nr_seq_motivo_glosa,
		null
	from	pls_conta_glosa		a
	where	a.nr_seq_conta_proc 	= nr_seq_conta_proc_pct_pc
	and	coalesce(a.nr_seq_conta_pos_estab::text, '') = ''
	and	a.ie_situacao		= 'A'
	and	not exists (	select	1
				from	pls_ocorrencia_benef c
				where	c.nr_seq_conta_pos_estab	= nr_seq_conta_pos_estab_pc
				and	c.nr_seq_glosa			= a.nr_sequencia
				and	c.ie_forma_inativacao		in ('U','US'))
	and	not exists (	select	1
				from	pls_ocorrencia x,
					pls_ocorrencia_benef y
				where 	x.nr_sequencia		= y.nr_seq_ocorrencia
				and	x.nr_sequencia 		= a.nr_seq_ocorrencia
				and	y.ie_situacao = 'A');

C04 CURSOR(	nr_seq_conta_pc		pls_conta.nr_sequencia%type) FOR
	SELECT	a.qt_glosa_fat,
		b.nr_seq_conta_mat,
		b.nr_seq_conta_proc,
		b.nr_sequencia
	from	pls_ocorrencia_benef		a,
		pls_conta_pos_estabelecido	b
	where	a.nr_seq_conta_pos_estab	= b.nr_sequencia
	and	b.nr_seq_conta			= nr_seq_conta_pc
	and	b.ie_status_faturamento		!= 'A'
	and	b.ie_cobrar_mensalidade		!= 'A'
	and	((a.ie_situacao	= 'A') or (coalesce(a.ie_situacao::text, '') = ''))
	and	b.qt_original > b.qt_item
	order by 1;

BEGIN

open C02(nr_seq_conta_p);
loop
fetch C02 into
	nr_seq_conta_proc_w,
	nr_seq_conta_mat_w,
	nr_seq_conta_pos_estab_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	nr_seq_conta_proc_pct_w:= null;

	-- tratamento provisório para pacotes, quando é um material ou procedimento que originou de um pacote
	-- precisa buscar a glosa do pacote e vincular ao material/procedimento da conta pós
	if (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then

		select	max(nr_seq_proc_pct)
		into STRICT	nr_seq_conta_proc_pct_w
		from	pls_conta_mat a
		where	a.nr_sequencia = nr_seq_conta_mat_w;

	elsif (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then

		select	max(nr_seq_proc_pct)
		into STRICT	nr_seq_conta_proc_pct_w
		from	pls_conta_proc a
		where	a.nr_sequencia = nr_seq_conta_proc_w;
	end if;

	open C01(	nr_seq_conta_proc_w, nr_seq_conta_mat_w,
			nr_seq_conta_p, nr_seq_conta_pos_estab_w,
			nr_seq_conta_proc_pct_w);
	loop
	fetch C01 into
		ie_tipo_item_w,
		nr_seq_ocorrencia_w,
		qt_glosa_fat_w,
		nr_seq_proc_partic_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		qt_liberada_w	:= null;
		qt_partic_w	:= 0;

		if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then

			select	coalesce(max(qt_procedimento_imp),0)
			into STRICT	qt_apresentada_w
			from	pls_conta_proc
			where	nr_sequencia = nr_seq_conta_proc_w;

			-- Se estiver consistindo uma ocorrencia de participante verificar
			-- se existe algum participante sem ocorrencia, pois caso exista,
			-- a ocorrencia nao pode ir para o pos-estabelecido OS 1163202
			if (nr_seq_proc_partic_w IS NOT NULL AND nr_seq_proc_partic_w::text <> '') then
				select	count(1)
				into STRICT	qt_partic_w
				from	pls_proc_participante a
				where	a.nr_seq_conta_proc = nr_seq_conta_proc_w
				and	not exists (	SELECT 	1
							from	pls_ocorrencia_benef b
							where	b.nr_seq_proc_partic = a.nr_sequencia)
				and	not exists (	select	1
							from	pls_conta_glosa b
							where	b.nr_seq_proc_partic = a.nr_sequencia);
			end if;

		elsif (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then

			select	coalesce(max(qt_material_imp),0)
			into STRICT	qt_apresentada_w
			from	pls_conta_mat
			where	nr_sequencia = nr_seq_conta_mat_w;
		end if;

		if (qt_glosa_fat_w > 0) then
			qt_liberada_w	:= qt_apresentada_w - qt_glosa_fat_w;
		end if;

		select	max(ie_auditoria_conta),
			max(nr_seq_nivel_lib),
			coalesce(max(ie_fechar_conta),'S'),
			max(ie_tipo_glosa),
			max(ie_finalizar_analise)
		into STRICT	ie_auditoria_w,
			nr_seq_nivel_lib_w,
			ie_fechar_conta_w,
			ie_tipo_glosa_w,
			ie_finalizar_analise_w
		from	pls_ocorrencia
		where	nr_sequencia	= nr_seq_ocorrencia_w;

		select	max(nr_nivel_liberacao)
		into STRICT	ie_nivel_liberacao_w
		from	pls_nivel_liberacao
		where	nr_sequencia	= nr_seq_nivel_lib_w;

		select	substr(max(a.ds_documentacao),1,255)
		into STRICT	ds_documentacao_ww
		from	pls_ocorrencia	a
		where 	a.nr_sequencia	= nr_seq_ocorrencia_w;

		if (nr_seq_ocorrencia_w IS NOT NULL AND nr_seq_ocorrencia_w::text <> '') and (qt_partic_w = 0) then

			select	count(1)
			into STRICT	qt_ocorrencia_w
			from	pls_ocorrencia_benef c
			where	c.nr_seq_conta_pos_estab	= nr_seq_conta_pos_estab_w
			and	c.nr_seq_ocorrencia		= nr_seq_ocorrencia_w;



			if (qt_ocorrencia_w = 0) then

				insert into pls_ocorrencia_benef(
					nr_sequencia, nr_seq_segurado, nr_seq_ocorrencia,
					nr_seq_conta_pos_estab, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_requisicao,
					nr_seq_regra, nr_seq_guia_plano, ie_auditoria,
					nr_nivel_liberacao, ds_observacao, ie_fechar_conta,
					nr_seq_glosa_fat, qt_glosa, vl_glosa,
					ie_tipo_glosa, ds_documentacao, nr_seq_proc_partic,
					ie_finalizar_analise, ie_situacao, qt_glosa_fat
				) values (
					nextval('pls_ocorrencia_benef_seq'), nr_seq_segurado_p, nr_seq_ocorrencia_w,
					nr_seq_conta_pos_estab_w, clock_timestamp(), nm_usuario_p,
					clock_timestamp(), nm_usuario_p, null,
					null, null, ie_auditoria_w,
					ie_nivel_liberacao_w, null, ie_fechar_conta_w,
					null, null, null,
					ie_tipo_glosa_w, ds_documentacao_ww, null,
					ie_finalizar_analise_w, 'A', qt_glosa_fat_w
				);

				-- Grava o histórico do lançamento da glosa
				CALL pls_gerar_ocor_cta_hist(nr_seq_conta_p, nr_seq_ocorrencia_w, nm_usuario_p, 'L');
			else
				update	pls_ocorrencia_benef
				set	ie_situacao			= 'A',
					ie_forma_inativacao		 = NULL,
					qt_glosa_fat			= qt_glosa_fat_w
				where	nr_seq_conta_pos_estab		= nr_seq_conta_pos_estab_w
				and	nr_seq_ocorrencia		= nr_seq_ocorrencia_w
				and	ie_forma_inativacao		= 'S';
			end if;
			--Necessário realimentar a tabela de glosa da análise
			CALL pls_gerar_w_analise_pos_ocor(	nr_seq_analise_p, null, null,
							null, null, nr_seq_conta_pos_estab_w,
							null, nm_usuario_p);

			select	max(nr_sequencia)
			into STRICT	nr_seq_mot_liberacao_w
			from	pls_mot_lib_analise_conta
			where	ie_tipo_motivo 		= 'N'
			and	ie_situacao		= 'A'
			and	coalesce(ie_analise_conta_med,'S') = 'S'
			and	cd_estabelecimento = cd_estabelecimento_p
			and     not(	ie_pre_analise	 = 'S'
				or	ie_reconsistencia	 = 'S'
				or 	ie_substitui_item	 = 'S'
				or	ie_documento_fisico = 'S'
				or	ie_glosa_manual	 = 'S'
				or	ie_liberacao_especial	 = 'S');

			CALL pls_analise_glosar_item_pos(	nr_seq_analise_p, nr_seq_conta_p, nr_seq_conta_proc_w,
							nr_seq_conta_mat_w, nr_seq_conta_pos_estab_w, qt_liberada_w,
							nr_seq_mot_liberacao_w, null,cd_estabelecimento_p,
							nr_seq_grupo_atual_p, null,null,
							nm_usuario_p,'S');
		end if;
		end;
	end loop;
	close C01;

	open C03(	nr_seq_conta_proc_w, nr_seq_conta_mat_w,
			nr_seq_conta_p, nr_seq_conta_pos_estab_w,
			nr_seq_conta_proc_pct_w);
	loop
	fetch C03 into
		ie_tipo_item_w,
		nr_seq_glosa_w,
		qt_glosa_fat_w,
		nr_seq_motivo_glosa_w,
		nr_seq_proc_partic_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		qt_liberada_w		:= null;
		qt_partic_w		:= 0;
		ie_glosa_parcial_w 	:= 'N';
		ie_glosa_parc_regra_w	:= 'N';
		ie_gera_glosa_w		:= 'S';

		if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then

			select	coalesce(max(qt_procedimento_imp),0),
				coalesce(max(vl_liberado),0),
				coalesce(max(vl_glosa),0)
			into STRICT	qt_apresentada_w,
				vl_liberado_w,
				vl_glosa_w
			from	pls_conta_proc
			where	nr_sequencia = nr_seq_conta_proc_w;

			-- Se estiver consistindo uma glosa de participante verificar
			-- se existe algum participante sem glosa, pois caso exista,
			-- a glosa nao pode ir para o pos-estabelecido OS 1163202
			if (nr_seq_proc_partic_w IS NOT NULL AND nr_seq_proc_partic_w::text <> '') then
				select	count(1)
				into STRICT	qt_partic_w
				from	pls_proc_participante a
				where	a.nr_seq_conta_proc = nr_seq_conta_proc_w
				and	not exists (	SELECT 	1
							from	pls_ocorrencia_benef b
							where	b.nr_seq_proc_partic = a.nr_sequencia)
				and	not exists (	select	1
							from	pls_conta_glosa b
							where	b.nr_seq_proc_partic = a.nr_sequencia);
			end if;
		elsif (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then

			select	coalesce(max(qt_material_imp),0),
				coalesce(max(vl_liberado),0),
				coalesce(max(vl_glosa),0)
			into STRICT	qt_apresentada_w,
				vl_liberado_w,
				vl_glosa_w
			from	pls_conta_mat
			where	nr_sequencia = nr_seq_conta_mat_w;
		end if;

		select	coalesce(max(b.ie_glosa_parc_valor),'N')
		into STRICT	ie_glosa_parc_regra_w
		from	pls_conta_pos_estabelecido a,
			pls_regra_preco_pos_estab b
		where	a.nr_seq_regra_tp_pos = b.nr_sequencia
		and	a.nr_sequencia = nr_seq_conta_pos_estab_w;

		if (vl_liberado_w > 0) and (vl_glosa_w > 0) then
			ie_glosa_parcial_w := 'S';
		end if;

		if (ie_glosa_parc_regra_w = 'S') and (ie_glosa_parcial_w = 'S') then
			ie_gera_glosa_w := 'N';
		end if;

		if (qt_glosa_fat_w > 0) then
			qt_liberada_w	:= qt_apresentada_w - qt_glosa_fat_w;
		end if;

		if (nr_seq_glosa_w IS NOT NULL AND nr_seq_glosa_w::text <> '') and (qt_partic_w = 0) and (ie_gera_glosa_w = 'S') then

			select	count(1)
			into STRICT	qt_glosa_w
			from	pls_conta_glosa c
			where	c.nr_seq_conta_pos_estab = nr_seq_conta_pos_estab_w;

			if (qt_glosa_w = 0) then

				insert into pls_conta_glosa(
					ds_observacao, dt_atualizacao, dt_atualizacao_nrec,
					dt_liberacao, ie_lib_manual, ie_situacao,
					nm_usuario, nm_usuario_lib, nm_usuario_nrec,
					nr_seq_conta, nr_seq_conta_mat, nr_seq_conta_proc,
					nr_seq_motivo_glosa, nr_sequencia,qt_glosa_fat,
					nr_seq_conta_pos_estab
				) values (
					'Glosa gerada atraves da Glosa Principal', clock_timestamp(), clock_timestamp(),
					clock_timestamp(), 'N', 'A',
					nm_usuario_p, nm_usuario_p, nm_usuario_p,
					nr_seq_conta_p, nr_seq_conta_mat_w, nr_seq_conta_proc_w,
					nr_seq_motivo_glosa_w, nextval('pls_conta_glosa_seq'), qt_glosa_fat_w,
					nr_seq_conta_pos_estab_w
				);
			else
				update	pls_conta_glosa
				set	ie_situacao			= 'A',
					qt_glosa_fat			= qt_glosa_fat_w
				where	nr_seq_conta_pos_estab		= nr_seq_conta_pos_estab_w
				and	nr_sequencia			= nr_seq_glosa_w;
			end if;

			--Necessário realimentar a tabela de glosa da análise
			CALL pls_gerar_w_analise_pos_ocor(	nr_seq_analise_p, null, null,
							null, null, nr_seq_conta_pos_estab_w,
							null, nm_usuario_p);

			select	max(nr_sequencia)
			into STRICT	nr_seq_mot_liberacao_w
			from	pls_mot_lib_analise_conta
			where	ie_tipo_motivo 		= 'N'
			and	ie_situacao		= 'A'
			and	coalesce(ie_analise_conta_med,'S') = 'S'
			and	cd_estabelecimento = cd_estabelecimento_p
			and     not(	ie_pre_analise	 = 'S'
				or	ie_reconsistencia	 = 'S'
				or 	ie_substitui_item	 = 'S'
				or	ie_documento_fisico = 'S'
				or	ie_glosa_manual	 = 'S'
				or	ie_liberacao_especial	 = 'S');

			CALL pls_analise_glosar_item_pos(	nr_seq_analise_p, nr_seq_conta_p, nr_seq_conta_proc_w,
							nr_seq_conta_mat_w, nr_seq_conta_pos_estab_w, qt_liberada_w,
							nr_seq_mot_liberacao_w, null,cd_estabelecimento_p,
							nr_seq_grupo_atual_p, null,null,
							nm_usuario_p,'S');
		end if;
		end;
	end loop;
	close C03;
	end;
end loop;
close C02;

for r_c04_w in C04(	nr_seq_conta_p) loop

	if (r_c04_w.qt_glosa_fat > 0) then
		qt_liberada_w	:= null;

		if (r_c04_w.nr_seq_conta_proc IS NOT NULL AND r_c04_w.nr_seq_conta_proc::text <> '') then

			select	coalesce(max(qt_procedimento_imp),0)
			into STRICT	qt_apresentada_w
			from	pls_conta_proc
			where	nr_sequencia = r_c04_w.nr_seq_conta_proc;

		elsif (r_c04_w.nr_seq_conta_mat IS NOT NULL AND r_c04_w.nr_seq_conta_mat::text <> '') then

			select	coalesce(max(qt_material_imp),0)
			into STRICT	qt_apresentada_w
			from	pls_conta_mat
			where	nr_sequencia = r_c04_w.nr_seq_conta_mat;
		end if;

		qt_liberada_w	:= qt_apresentada_w - r_c04_w.qt_glosa_fat;

		--Necessário realimentar a tabela de glosa da análise
		CALL pls_gerar_w_analise_pos_ocor(	nr_seq_analise_p, null, null,
						null, null,r_c04_w.nr_sequencia ,
						null, nm_usuario_p);

		select	max(nr_sequencia)
		into STRICT	nr_seq_mot_liberacao_w
		from	pls_mot_lib_analise_conta
		where	ie_tipo_motivo 		= 'N'
		and	ie_situacao		= 'A'
		and	coalesce(ie_analise_conta_med,'S') = 'S'
		and	cd_estabelecimento = cd_estabelecimento_p
		and     not(	ie_pre_analise	 = 'S'
			or	ie_reconsistencia	 = 'S'
			or 	ie_substitui_item	 = 'S'
			or	ie_documento_fisico = 'S'
			or	ie_glosa_manual	 = 'S'
			or	ie_liberacao_especial	 = 'S');

		CALL pls_analise_glosar_item_pos(	nr_seq_analise_p, nr_seq_conta_p, r_c04_w.nr_seq_conta_proc,
						r_c04_w.nr_seq_conta_mat, r_c04_w.nr_sequencia, qt_liberada_w,
						nr_seq_mot_liberacao_w, null,cd_estabelecimento_p,
						nr_seq_grupo_atual_p, null,null,
						nm_usuario_p,'S');
	end if;
end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_ocor_conta_princ ( nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_analise_p pls_analise_conta.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_grupo_atual_p pls_grupo_auditor.nr_sequencia%type default null) FROM PUBLIC;

