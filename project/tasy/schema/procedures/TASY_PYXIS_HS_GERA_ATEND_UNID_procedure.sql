-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function tasy_pyxis_hs_gera_atend_unid as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE tasy_pyxis_hs_gera_atend_unid (nr_atendimento_p bigint) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'CALL tasy_pyxis_hs_gera_atend_unid_atx ( ' || quote_nullable(nr_atendimento_p) || ' )';
	PERFORM * FROM dblink(v_conn_str, v_query) AS p (ret boolean);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE tasy_pyxis_hs_gera_atend_unid_atx (nr_atendimento_p bigint) AS $body$
DECLARE


arq_texto_w		utl_file.file_type;
ds_linha_arquivo_w	varchar(2000);
nm_arquivo_w		varchar(100);
ds_diretorio_w		varchar(255);
qt_itens_w		 integer;

C01 CURSOR FOR
	SELECT  'EPA' ||
        '|' ||
        TO_CHAR(clock_timestamp(),'MMDDYYYYHHMMSS') ||
        '|' ||
        SUBSTR(c.NM_PESSOA_FISICA, 0, 29) ||
        '|' ||
        a.nr_atendimento ||
        '||' || -- Código alternativo de identificação do paciente
        '|' || -- Sem descrição
	obter_ds_descricao_setor(obter_setor_atendimento(nr_atendimento_p)) ||
        '|' ||
        LTRIM(RTRIM(obter_unidade_atendimento(a.nr_atendimento, 'IA', 'U'))) ||
        '|01' ||
        '|' ||
        '||' ||
        a.nr_atendimento ||
        '|' ||
        TO_CHAR(dt_entrada,'MMDDYYYYHHMMSS') ||
        '|||||||||||||' ||
        c.ie_sexo ||
        '|' ||
        TO_CHAR(c.dt_nascimento,'YYYYMMDD') ||
        '|||||' ||
        'SHS' ||
        '|||'
	FROM    ocupacao_hospitalar a,
	        atendimento_paciente b,
	        pessoa_fisica c
	WHERE   a.cd_setor_atendimento IN (2, 26, 13, 5, 12,25, 11,47,248)
	AND     a.nr_atendimento = b.nr_atendimento
	AND     a.nr_atendimento = nr_atendimento_p
	AND     b.cd_pessoa_fisica = c.cd_pessoa_fisica
	ORDER BY c.nm_pessoa_fisica;
BEGIN

select	substr(obter_valor_param_usuario(3111, 74, Obter_perfil_ativo, 'Bruna', ''),1,255)
into STRICT	ds_diretorio_w
;

if (ds_diretorio_w IS NOT NULL AND ds_diretorio_w::text <> '') then

	select	count(*)
	into STRICT	qt_itens_w
	FROM    ocupacao_hospitalar a,
	        atendimento_paciente b,
	        pessoa_fisica c
	WHERE   a.cd_setor_atendimento IN (2, 26, 13, 5, 12,11,25,47,248)
	AND     a.nr_atendimento = b.nr_atendimento
	AND     a.nr_atendimento = nr_atendimento_p
	AND     b.cd_pessoa_fisica = c.cd_pessoa_fisica
	ORDER BY c.nm_pessoa_fisica;

	nm_arquivo_w	:= to_char(clock_timestamp(),'MMDDYYYYHHMMSS') || '.pyx';

	if (qt_itens_w > 0) then
		arq_texto_w 	:= utl_file.fopen(ds_diretorio_w,nm_arquivo_w,'W');

		open C01;
		loop
		fetch C01 into
			ds_linha_arquivo_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			--gera uma nova linha no arquivo
		utl_file.put_line(arq_texto_w,ds_linha_arquivo_w);
		utl_file.fflush(arq_texto_w);
		end loop;
		close C01;
		--fecha e libera o arquivo
		utl_file.fclose(arq_texto_w);
	end if;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tasy_pyxis_hs_gera_atend_unid (nr_atendimento_p bigint) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE tasy_pyxis_hs_gera_atend_unid_atx (nr_atendimento_p bigint) FROM PUBLIC;

