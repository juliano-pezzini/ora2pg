-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_coleta_mat_exame_lab (ds_lista_mat_exame_lab_p text, nr_atendimento_p bigint, dt_alteracao_p timestamp, ie_alteracao_p bigint, ds_justificativa_p text, nm_usuario_p text) AS $body$
DECLARE


ds_lista_mat_exame_lab_w	varchar(1000);
ds_procedimento_w			procedimento.ds_procedimento%TYPE;
tam_lista_w			bigint;
ie_pos_virgula_w		smallint;
nr_prescricao_w		bigint;
nr_seq_proced_w		integer;
cd_procedimento_w		varchar(15);
dt_horario_w			timestamp;
nr_seq_horario_w		bigint;
nr_seq_alteracao_w		bigint;
qt_procedimento_w			prescr_procedimento.qt_procedimento%type;
cd_estabelecimento_w		bigint;
cd_evolucao_w				evolucao_paciente.cd_evolucao%type;
ie_altera_status_lab_w		varchar(1);
dt_atualizacao_w		timestamp := clock_timestamp();
dt_alteracao_w			timestamp;
ds_alerta_w			varchar(240) := '';
ie_status_exame_w		bigint;
cd_setor_atendimento_aten_w	setor_atendimento.cd_setor_atendimento%TYPE;
nr_seq_proc_int_w		prescr_procedimento.nr_seq_proc_interno%type;
ie_susp_gestao_exame_w		varchar(1);


BEGIN

select	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_p;

ie_altera_status_lab_w := obter_param_usuario(1113, 166, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_altera_status_lab_w);

if (ds_lista_mat_exame_lab_p IS NOT NULL AND ds_lista_mat_exame_lab_p::text <> '') then
	ds_lista_mat_exame_lab_w := ds_lista_mat_exame_lab_p;

	/* obter horario alteracao */

	if (dt_alteracao_p IS NOT NULL AND dt_alteracao_p::text <> '') then
		dt_alteracao_w := dt_alteracao_p;
	else
		dt_alteracao_w := dt_atualizacao_w;
	end if;

	/* obter horarios coleta */

	while	(ds_lista_mat_exame_lab_w IS NOT NULL AND ds_lista_mat_exame_lab_w::text <> '') loop
		begin
		tam_lista_w		:= length(ds_lista_mat_exame_lab_w);
		ie_pos_virgula_w	:= position(',' in ds_lista_mat_exame_lab_w);

		if (ie_pos_virgula_w <> 0) then
			nr_seq_horario_w		:= (substr(ds_lista_mat_exame_lab_w,1,(ie_pos_virgula_w - 1)))::numeric;
			ds_lista_mat_exame_lab_w	:= substr(ds_lista_mat_exame_lab_w,(ie_pos_virgula_w + 1),tam_lista_w);
		end if;

		/* obter dados horario e gerar coleta material horario */

		if (coalesce(nr_seq_horario_w,0) > 0) then
			select	max(c.nr_prescricao),
				max(c.nr_seq_procedimento),
				max(to_char(c.cd_procedimento)),
				max(c.dt_horario),
				max(c.nr_seq_proc_interno),
				max(b.qt_procedimento),
				max(substr(obter_desc_prescr_proc(b.cd_procedimento,b.ie_origem_proced,b.nr_seq_proc_interno),1,255))
			into STRICT	nr_prescricao_w,
				nr_seq_proced_w,
				cd_procedimento_w,
				dt_horario_w,
				nr_seq_proc_int_w,
				qt_procedimento_w,
				ds_procedimento_w
			from	prescr_proc_hor c,
					prescr_procedimento b
			where	c.nr_prescricao = b.nr_prescricao
			and		c.nr_seq_procedimento = b.nr_sequencia
			and		c.nr_sequencia = nr_seq_horario_w
			and		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S';

			/* gerar coleta material horario */

			if (ie_alteracao_p in (3,8)) then
				update	prescr_proc_hor
				set	dt_fim_horario = dt_atualizacao_w
				where	nr_sequencia = nr_seq_horario_w;
				
				select	max(cd_estabelecimento)
				into STRICT	cd_estabelecimento_w
				from	prescr_medica
				where	nr_prescricao	= nr_prescricao_w;
				
				IF (Wheb_assist_pck.obterParametroFuncao(1113,670) = 'S') THEN
					cd_setor_atendimento_aten_w	:= obter_unidade_atendimento(nr_atendimento_p,'A','CS');

					SELECT	MAX(IE_STATUS_ATEND)
					INTO STRICT   	ie_status_exame_w
					FROM   	adep_parametros_setor
					WHERE  	cd_setor_atendimento = cd_setor_atendimento_aten_w;
				END IF;

				IF (coalesce(ie_status_exame_w::text, '') = '') THEN
					BEGIN
					ie_status_exame_w	:= wheb_assist_pck.obterparametrofuncao(1113,464);
					EXCEPTION
					WHEN OTHERS THEN
						ie_status_exame_w := NULL;
					END;
				END IF;
				
				cd_evolucao_p		=>	cd_evolucao_w := Gerar_evolPaci_automa(	ie_tipo_item_p		=>	'L', nm_usuario_p		=>	nm_usuario_p, nr_atendimento_p	=>	nr_atendimento_p, ds_item_p			=>	ds_procedimento_w, nr_seq_horario_p	=>	nr_seq_horario_w, ie_opcao_p			=>	'A', ds_hint_p			=>	obter_expressao_idioma(488570), /*Administracao do horario*/
										dt_evento_p			=>	dt_atualizacao_w, nr_prescricao_p		=>	nr_prescricao_w, qt_dose_p			=>	qt_procedimento_w, ds_unid_med_p		=>	'', ie_via_adm_p		=>	null, cd_evolucao_p		=>	cd_evolucao_w, ie_palm_p			=>	'N');

				if (ie_altera_status_lab_w	= 'S') then
					update	prescr_procedimento
					set	dt_coleta = dt_atualizacao_w,
						ie_amostra = 'S',
						ie_Status_atend	= coalesce(ie_status_exame_w,20),
						nm_usuario = nm_usuario_p
					where	nr_prescricao = nr_prescricao_w
					and	nr_sequencia = nr_seq_proced_w;
				end if;
				
			elsif (ie_alteracao_p = 4) then
				update	prescr_proc_hor
				set	dt_fim_horario  = NULL
				where	nr_sequencia = nr_seq_horario_w;

			elsif (ie_alteracao_p in (5,9)) then
				update	prescr_proc_hor
				set		dt_suspensao 			= dt_atualizacao_w,
						nm_usuario_susp			= nm_usuario_p,
						dt_primeira_checagem	 = NULL
				where	nr_sequencia 			= nr_seq_horario_w;

			ie_susp_gestao_exame_w	:= Wheb_assist_pck.obterParametroFuncao(1113,201);

			if (ie_susp_gestao_exame_w = 'S') then
				UPDATE	prescr_procedimento
				SET		dt_suspensao		= dt_atualizacao_w,
						ie_suspenso			= 'S',
						nm_usuario_susp		= nm_usuario_p
				WHERE	nr_prescricao		= nr_prescricao_w
				AND		nr_sequencia		= nr_seq_proced_w
				AND		coalesce(dt_suspensao::text, '') = '';

			end if;

			elsif (ie_alteracao_p = 6) then
				update	prescr_proc_hor
				set	dt_suspensao  = NULL
				where	nr_sequencia = nr_seq_horario_w;
			end if;

			/* gerar evento coleta */

			select	nextval('prescr_mat_alteracao_seq')
			into STRICT	nr_seq_alteracao_w
			;

			insert	into	prescr_mat_alteracao(
								nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_prescricao,
								nr_seq_procedimento,
								nr_seq_horario_proc,
								dt_alteracao,
								cd_pessoa_fisica,
								ie_alteracao,
								ds_justificativa,
								ie_tipo_item,
								dt_horario,
								nr_atendimento,
								cd_item,
								nr_seq_proc_interno
								)
							values (
								nr_seq_alteracao_w,
								dt_atualizacao_w,
								nm_usuario_p,
								dt_atualizacao_w,
								nm_usuario_p,
								nr_prescricao_w,
								nr_seq_proced_w,
								nr_seq_horario_w,
								dt_alteracao_w,
								obter_dados_usuario_opcao(nm_usuario_p,'C'),
								ie_alteracao_p,
								ds_justificativa_p,
								'P',
								dt_horario_w,
								nr_atendimento_p,
								cd_procedimento_w,
								nr_seq_proc_int_w
								);
		end if;
		end;
	end loop;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_coleta_mat_exame_lab (ds_lista_mat_exame_lab_p text, nr_atendimento_p bigint, dt_alteracao_p timestamp, ie_alteracao_p bigint, ds_justificativa_p text, nm_usuario_p text) FROM PUBLIC;

