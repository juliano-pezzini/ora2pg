-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_alta_enfermagem_pa ( nr_atendimento_p bigint, nm_usuario_p text, ds_mensagem_p INOUT text) AS $body$
DECLARE

 
ds_mensagem_w			varchar(32000)	:= '';
cd_estabelecimento_w		bigint;
cd_perfil_w			bigint;
qt_reg_w			bigint := 0;
ie_consistencia_w		varchar(5);
qt_informacao_w			bigint;			
 
C01 CURSOR FOR 
	SELECT	ie_consistencia 
	from	consistencia_alta_enf 
	where	cd_estabelecimento = cd_estabelecimento_w 
	and	coalesce(cd_perfil,cd_perfil_w) = cd_perfil_w 
	order by ie_consistencia,cd_perfil;


BEGIN 
 
select	coalesce(max(cd_estabelecimento),0) 
into STRICT	cd_estabelecimento_w 
from	atendimento_paciente 
where	nr_atendimento	= nr_atendimento_p;
 
cd_perfil_w := coalesce(obter_perfil_ativo,0);
 
select	count(*) 
into STRICT	qt_reg_w 
from	consistencia_alta_enf 
where	cd_estabelecimento = cd_estabelecimento_w;
 
if (qt_reg_w > 0) then 
 
	open C01;
	loop 
	fetch C01 into	 
		ie_consistencia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		if (ie_consistencia_w = 'FC') then 
		 
			select 	count(*) 
			into STRICT	qt_informacao_w 
			from	atendimento_paciente 
			where	nr_atendimento = nr_atendimento_p 
			and	(dt_atend_medico IS NOT NULL AND dt_atend_medico::text <> '') 
			and	coalesce(dt_fim_consulta::text, '') = '';
 
			If (qt_informacao_w > 0) then 
 
				ds_mensagem_w := ds_mensagem_w|| 'Falta finalizar a consulta.' || chr(13);	
		 
			end if;	
		 
		elsif (ie_consistencia_w = 'FO') then 
		 
			select 	count(*) 
			into STRICT	qt_informacao_w 
			from	atendimento_paciente 
			where	nr_atendimento = nr_atendimento_p 
			and	(dt_inicio_observacao IS NOT NULL AND dt_inicio_observacao::text <> '') 
			and	coalesce(dt_fim_observacao::text, '') = '';
 
			If (qt_informacao_w > 0) then 
 
				ds_mensagem_w := ds_mensagem_w|| 'Falta finalizar a observação.' || chr(13);	
		 
			end if;	
		 
		 
		elsif (ie_consistencia_w = 'FR') then 
		 
			select 	count(*) 
			into STRICT	qt_informacao_w 
			from	atendimento_paciente 
			where	nr_atendimento = nr_atendimento_p 
			and	(dt_inicio_reavaliacao IS NOT NULL AND dt_inicio_reavaliacao::text <> '') 
			and	(dt_fim_reavaliacao IS NOT NULL AND dt_fim_reavaliacao::text <> '');
 
			If (qt_informacao_w > 0) then 
 
				ds_mensagem_w := ds_mensagem_w|| 'Falta finalizar a reavaliação.' || chr(13);
 
			end if;		
		 
		elsif (ie_consistencia_w = 'LEV') then 
		 
		 
			Select	count(*) 
			into STRICT	qt_informacao_w 
			from	evolucao_paciente 
			where	nr_atendimento = nr_atendimento_p 
			and	coalesce(dt_liberacao::text, '') = '' 
			and 	coalesce(dt_inativacao::text, '') = '';		
		 
			If (qt_informacao_w > 0) then 
 
				ds_mensagem_w := ds_mensagem_w|| 'Existem evoluções pendentes de liberação.' || chr(13);
 
			end if;	
			 
		elsif (ie_consistencia_w = 'LAN') then 
		 
		 
			Select	count(*) 
			into STRICT	qt_informacao_w 
			from	anamnese_paciente 
			where	nr_atendimento = nr_atendimento_p 
			and	coalesce(dt_liberacao::text, '') = '' 
			and 	coalesce(dt_inativacao::text, '') = '';		
		 
			If (qt_informacao_w > 0) then 
 
				ds_mensagem_w := ds_mensagem_w|| 'Existem anamnese pendentes de liberação.' || chr(13);
 
			end if;
 
		elsif (ie_consistencia_w = 'LPM') then 
		 
		 
			Select	count(*) 
			into STRICT	qt_informacao_w 
			from	parecer_medico_req 
			where	nr_atendimento = nr_atendimento_p 
			and	coalesce(dt_liberacao::text, '') = '' 
			and 	coalesce(dt_inativacao::text, '') = '';		
		 
			If (qt_informacao_w > 0) then 
 
				ds_mensagem_w := ds_mensagem_w|| 'Existem pedido de parecer pendentes de liberação.' || chr(13);
 
			end if;			
		 
		end if;
		 
		end;
	end loop;
	close C01;
 
end if;
 
ds_mensagem_p := substr(ds_mensagem_w,1,2000);
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_alta_enfermagem_pa ( nr_atendimento_p bigint, nm_usuario_p text, ds_mensagem_p INOUT text) FROM PUBLIC;

