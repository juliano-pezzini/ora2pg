-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_conta_mat ( nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_consistindo_conta_p text, nm_usuario_p usuario.nm_usuario%type, ie_utilizar_regra_mat_p text, ie_processo_novo_p text default 'N') AS $body$
DECLARE


nr_seq_conta_mat_w		pls_conta_mat.nr_sequencia%type;
nr_seq_material_w		pls_material.nr_sequencia%type;
ie_tipo_despesa_w		varchar(1);
nr_seq_prestador_exec_w		pls_prestador.nr_sequencia%type;
vl_calculado_w			double precision;
nr_seq_guia_w			pls_guia_plano.nr_sequencia%type;
cd_guia_w			varchar(20);
qt_lanc_glosa_w			integer;
qt_utilizada_glosa_w		double precision;
qt_utilizada_w			double precision;
qt_autorizada_w			double precision;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
qt_glosa_w			bigint;
qt_solicitada_w			bigint;
ie_liberar_item_autor_w		varchar(1);
ie_existe_regra_w		varchar(1);
nr_seq_conta_w			pls_conta.nr_sequencia%type;
ie_tipo_guia_w			pls_conta.ie_tipo_guia%type;
nr_seq_plano_w			pls_segurado.nr_seq_plano%type;
nr_seq_regra_valor_w		pls_regra_valor_conta.nr_sequencia%type;
ie_conta_intercambio_w		varchar(10);
nr_seq_prestador_retorno_w	pls_prestador.nr_sequencia%type;
nr_seq_regra_retorno_w		bigint;
nr_seq_congenere_w		pls_protocolo_conta.nr_seq_congenere%type;
nr_seq_protocolo_w		pls_protocolo_conta.nr_sequencia%type;
ie_origem_conta_w		pls_conta.ie_origem_conta%type;
nr_seq_evento_w			pls_evento.nr_sequencia%type;
nr_seq_evento_prod_w		pls_evento_regra_producao.nr_sequencia%type;
nr_seq_tipo_atendimento_w	pls_conta.nr_seq_tipo_atendimento%type;
ie_evento_w			varchar(2);
ie_tipo_conta_w			varchar(10);
nr_seq_regra_preco_w		bigint;
ie_regra_liberacao_w		pls_regra_valor_conta.ie_regra_liberacao%type;
ie_carencia_abrangencia_ant_w	pls_parametros.ie_carencia_abrangencia_ant%type;
ie_mat_ativo_w			varchar(1);
cd_medico_executor_w		pessoa_fisica.cd_pessoa_fisica%type;
nr_seq_conselho_w		pessoa_fisica.nr_seq_conselho%type;
ie_regime_internacao_w		pls_conta.ie_regime_internacao%type;
nr_seq_grupo_ans_w		pls_conta_mat.nr_seq_grupo_ans%type;
ie_tipo_desp_mat_w		pls_material.ie_tipo_despesa%type;
dt_atendimento_w		timestamp;
ie_limitacao_w			varchar(1);
ie_carencia_w			varchar(1);
ie_gerar_grupo_ans_w		varchar(3);
ie_tipo_segurado_w		varchar(10);
qt_saldo_w			pls_conta_mat.qt_material_imp%type;
nr_seq_preco_pacote_w		pls_conta_mat.nr_seq_preco_pacote%type;
qt_glosa_ativa_w		integer;
ie_tipo_protocolo_w		pls_protocolo_conta.ie_tipo_protocolo%type;
nr_seq_prest_fornec_w		pls_prestador.nr_sequencia%type;
nr_seq_regra_autor_w		pls_regra_autorizacao.nr_sequencia%type;
dt_atendimento_referencia_w	pls_conta_mat.dt_atendimento_referencia%type;
ds_obs_data_w				pls_conta_glosa.ds_observacao%type;
ie_regime_atendimento_w		pls_conta.ie_regime_atendimento%type;
ie_saude_ocupacional_w		pls_conta.ie_saude_ocupacional%type;


BEGIN
ie_evento_w := 'CC';

select	coalesce(max(ie_consitencia_grupo_ans), 'S')
into STRICT	ie_gerar_grupo_ans_w
from	pls_parametro_contabil
where	cd_estabelecimento	= cd_estabelecimento_p;

select	nr_seq_conta,
	nr_sequencia,
	nr_seq_material,
	ie_tipo_despesa,
	qt_material_imp,
	dt_atendimento,
	nr_seq_preco_pacote,
	coalesce(vl_material,0),
	nr_seq_regra,
	nr_seq_regra_valor,
	nr_seq_prest_fornec,
	dt_atendimento_referencia
into STRICT	nr_seq_conta_w,
	nr_seq_conta_mat_w,
	nr_seq_material_w,
	ie_tipo_despesa_w,
	qt_solicitada_w,
	dt_atendimento_w,
	nr_seq_preco_pacote_w,
	vl_calculado_w,
	nr_seq_regra_preco_w,
	nr_seq_regra_valor_w,
	nr_seq_prest_fornec_w,
	dt_atendimento_referencia_w
from	pls_conta_mat
where	nr_sequencia	= nr_seq_conta_mat_p;

select	coalesce(ie_carencia_abrangencia_ant,'N')
into STRICT	ie_carencia_abrangencia_ant_w
from	pls_parametros
where	cd_estabelecimento = cd_estabelecimento_p;

-- Obter dados da conta
select	coalesce(cd_guia_referencia,cd_guia),
	nr_seq_prestador_exec,
	nr_seq_segurado,
	ie_tipo_guia,
	CASE WHEN coalesce(ie_tipo_conta,'O')='O' THEN 'N'  ELSE 'I' END ,
	nr_seq_protocolo,
	ie_origem_conta,
	nr_seq_tipo_atendimento,
	coalesce(ie_tipo_conta,'O'),
	cd_medico_executor,
	ie_regime_internacao,
	nr_seq_guia,
	ie_tipo_segurado,
	ie_regime_atendimento,
	ie_saude_ocupacional
into STRICT	cd_guia_w,
	nr_seq_prestador_exec_w,
	nr_seq_segurado_w,
	ie_tipo_guia_w,
	ie_conta_intercambio_w,
	nr_seq_protocolo_w,
	ie_origem_conta_w,
	nr_seq_tipo_atendimento_w,
	ie_tipo_conta_w,
	cd_medico_executor_w,
	ie_regime_internacao_w,
	nr_seq_guia_w,
	ie_tipo_segurado_w,
	ie_regime_atendimento_w,
	ie_saude_ocupacional_w
from	pls_conta
where	nr_sequencia = nr_seq_conta_w;

if (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '') then

	select	coalesce(max(ie_tipo_protocolo), 'C')
	into STRICT	ie_tipo_protocolo_w
	from	pls_protocolo_conta
	where	nr_sequencia = nr_seq_protocolo_w;
end if;

if (ie_tipo_protocolo_w = 'R') then

	ie_evento_w := 'CR';
end if;

select	max(nr_seq_conselho)
into STRICT	nr_seq_conselho_w
from	pessoa_fisica
where	cd_pessoa_fisica = cd_medico_executor_w;

if (ie_conta_intercambio_w	<> 'I') then
	SELECT * FROM pls_obter_tipo_prest_consist(	nr_seq_conta_w, nm_usuario_p, nr_seq_prestador_retorno_w, nr_seq_regra_retorno_w) INTO STRICT nr_seq_prestador_retorno_w, nr_seq_regra_retorno_w;

	if (nr_seq_prestador_retorno_w IS NOT NULL AND nr_seq_prestador_retorno_w::text <> '') then
		nr_seq_prestador_exec_w	:= nr_seq_prestador_retorno_w;
	end if;
end if;

-- Obter dados do segurado
select	max(nr_seq_plano)
into STRICT	nr_seq_plano_w
from	pls_segurado
where	nr_sequencia = nr_seq_segurado_w;

-- Obter conta intercambio para ocorrencia
if (ie_tipo_conta_w = 'I') then

	ie_evento_w := 'I5';
end if;

if (ie_tipo_despesa_w = '3') then

	CALL pls_tiss_consistir_material(	nr_seq_conta_mat_w, 'CM', ie_evento_w,
					nr_seq_prestador_exec_w, null, '', 
					nm_usuario_p, cd_estabelecimento_p);
end if;

if (ie_tipo_despesa_w = '7') then

	CALL pls_tiss_consistir_opm(	nr_seq_conta_mat_w, 'CM', ie_evento_w,
				nr_seq_prestador_exec_w, null, '', 
				nm_usuario_p, cd_estabelecimento_p);
end if;

if (ie_tipo_despesa_w = '2') then

	CALL pls_tiss_consistir_medicamento(	nr_seq_conta_mat_w, 'CM', ie_evento_w,
					nr_seq_prestador_exec_w, null, '', 
					nm_usuario_p, cd_estabelecimento_p);
end if;

ie_liberar_item_autor_w	:= 'N';

if (coalesce(nr_seq_material_w::text, '') = '') then

	if (ie_tipo_despesa_w = '1') then

		CALL pls_gravar_conta_glosa('2301',null,null,
					nr_seq_conta_mat_w,'N','',
					nm_usuario_p,'A',ie_evento_w,
					nr_seq_prestador_exec_w, cd_estabelecimento_p, '',
					null);
	elsif (ie_tipo_despesa_w = '2') then

		CALL pls_gravar_conta_glosa('2101',null,null,
					nr_seq_conta_mat_w,'N','',
					nm_usuario_p,'A',ie_evento_w,
					nr_seq_prestador_exec_w, cd_estabelecimento_p, '', 
					null);
	elsif (ie_tipo_despesa_w = '3') then

		CALL pls_gravar_conta_glosa('2001',null,null,
					nr_seq_conta_mat_w,'N','',
					nm_usuario_p,'A',ie_evento_w,
					nr_seq_prestador_exec_w, cd_estabelecimento_p, '', 
					null);
	elsif (ie_tipo_despesa_w = '4') then

		CALL pls_gravar_conta_glosa('2201',null,null,
					nr_seq_conta_mat_w,'N','',
					nm_usuario_p,'A',ie_evento_w,
					nr_seq_prestador_exec_w, cd_estabelecimento_p, '', 
					null);
	end if;
else
	select	count(1)
	into STRICT	qt_glosa_ativa_w
	from	tiss_motivo_glosa tiss
	where	cd_motivo_tiss in ('1410','1423')
	and	pls_obter_se_evento_glosa(tiss.nr_sequencia, null, cd_estabelecimento_p) = 'S';

	if (qt_glosa_ativa_w > 0) then

		qt_glosa_w := pls_consistir_cobertura_mat(	nr_seq_segurado_w, '', nr_seq_conta_mat_w, nr_seq_material_w, '', cd_estabelecimento_p, 0, nm_usuario_p, ie_evento_w, qt_glosa_w, 'C');

		if (coalesce(qt_glosa_w,0) = 0) then

			ie_carencia_w := pls_obter_se_gera_glosa_conta(	'1410', null, ie_evento_w, cd_estabelecimento_p);

			if (ie_carencia_w = 'S') then

				CALL pls_consistir_carencia_mat(	nr_seq_segurado_w, null, null,
								nr_seq_conta_mat_w, null, nr_seq_material_w,
								null, null, null,
								'', ie_carencia_abrangencia_ant_w, cd_estabelecimento_p,
								nm_usuario_p);
			end if;

			ie_limitacao_w := pls_obter_se_gera_glosa_conta('1423', null, ie_evento_w, cd_estabelecimento_p);

			if (ie_limitacao_w = 'S') then

				CALL pls_consistir_limitacao_mat(	nr_seq_segurado_w, null, nr_seq_conta_mat_w,
								null, nr_seq_material_w, 0,
								nr_seq_guia_w, cd_estabelecimento_p, nm_usuario_p);
			end if;
		end if;
	end if;
	
	select 	coalesce(max(qt_saldo),0),
		coalesce(max(qt_utilizada),0),
		coalesce(max(qt_autorizada),0)
	into STRICT	qt_saldo_w,
		qt_utilizada_w,
		qt_autorizada_w
	from 	table(pls_conta_autor_pck.obter_dados(nr_seq_guia_w,'M', cd_estabelecimento_p, null, null, nr_seq_material_w));

	SELECT * FROM pls_consiste_mat_autor(	nr_seq_conta_w, nr_seq_conta_mat_w, nm_usuario_p, cd_estabelecimento_p, nr_seq_prestador_exec_w, ie_liberar_item_autor_w, ie_existe_regra_w, nr_seq_regra_autor_w) INTO STRICT ie_liberar_item_autor_w, ie_existe_regra_w, nr_seq_regra_autor_w;

	if (ie_liberar_item_autor_w = 'S') then

		if (nr_seq_guia_w <> 0) then
			
			if (qt_utilizada_w = 0) then

				qt_utilizada_w := qt_solicitada_w;
			end if;

			/*So ira verificar se o material nao estiver glosado*/
		
			if	(qt_saldo_w < 0 AND qt_utilizada_w > 0) or (qt_autorizada_w = 0) then

				if (ie_tipo_despesa_w in ('1', '2', '3')) then

					CALL pls_gravar_conta_glosa(	'2009',null,null,
								nr_seq_conta_mat_w, 'N', '[1] Quantidade de materiais utilizados excede a quantidade de materiais autorizados. '||
											'Autorizada: '||qt_autorizada_w||' Utilizada: '||qt_utilizada_w || '. Regra de autorizacao: ' || nr_seq_regra_autor_w,
								nm_usuario_p, 'A', ie_evento_w,
								nr_seq_prestador_exec_w, cd_estabelecimento_p, '',
								null);
	
				elsif (ie_tipo_despesa_w = '7') then /* OPM */
					qt_utilizada_glosa_w := qt_utilizada_w - qt_autorizada_w;
					qt_lanc_glosa_w := pls_obter_qt_glosa_item(	null, null, nr_seq_material_w,
								   			nr_seq_guia_w, '2206');
				
					if (qt_lanc_glosa_w < qt_utilizada_glosa_w) then

						CALL pls_gravar_conta_glosa(	'2206',null,null,
									nr_seq_conta_mat_w,'N','[1] Quantidade de OPMs utilizados excede a quantidade autorizada. '||
												'Autorizada: '||qt_autorizada_w||' Utilizada: '||qt_utilizada_w || '. Regra de autorizacao: ' || nr_seq_regra_autor_w,
									nm_usuario_p, 'A', ie_evento_w,
									nr_seq_prestador_exec_w, cd_estabelecimento_p, '',
									null);
					end if;
				end if;
			end if;		
		else
			if (coalesce(qt_solicitada_w,0) > 0) then

				if (ie_tipo_despesa_w in ('1', '2', '3')) then
					CALL pls_gravar_conta_glosa('2009',null,null,
								nr_seq_conta_mat_w,'N','[2] Quantidade de materiais utilizados excede a quantidade de materiais autorizados. '||
								'Autorizada: 0 Utilizada: '||qt_solicitada_w || '. Regra de autorizacao: ' || nr_seq_regra_autor_w,
								nm_usuario_p,'A',ie_evento_w,
								nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
		
				elsif (ie_tipo_despesa_w = '7') then /* OPM */
					CALL pls_gravar_conta_glosa('2206',null,null,
								nr_seq_conta_mat_w,'N','[2] - OPM sem autorizacao valida. Regra de autorizacao: ' || nr_seq_regra_autor_w,
								nm_usuario_p,'A',ie_evento_w,
								nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
				end if;
			end if;
		end if;	
	end if;
end if;

select	count(1)
into STRICT	qt_glosa_ativa_w
from	tiss_motivo_glosa tiss
where	cd_motivo_tiss	= '1214'
and	pls_obter_se_evento_glosa(tiss.nr_sequencia, null, cd_estabelecimento_p) = 'S';

if (ie_tipo_conta_w <> 'I') and (ie_tipo_protocolo_w <> 'R') and (qt_glosa_ativa_w > 0) then

	CALL pls_consistir_mat_prestador(	nr_seq_prestador_exec_w, nr_seq_conta_mat_p, null,
					null, null, cd_estabelecimento_p, nm_usuario_p);
end if;

/*OS 406815 - Quando for regra de vl calculado zerado na liberacao de valores da conta, entao nao gera glosa - Solicitacao do Felipe da UNIMED RIO PRETO*/


/* ESTE TRATAMENTO INFLUI NAS GLOSAS 1707 E 9919*/

select	coalesce(max(ie_regra_liberacao), 0)
into STRICT	ie_regra_liberacao_w
from 	pls_regra_valor_conta 	a
where	a.nr_sequencia = nr_seq_regra_valor_w;

/*Material ativo*/

ie_mat_ativo_w := pls_obter_se_mat_ativo(	nr_seq_material_w,dt_atendimento_w);
if (ie_mat_ativo_w = 'N') then

	CALL pls_gravar_conta_glosa(	'9920', null, null,
				nr_seq_conta_mat_w, 'N', 'O material nao esta ativo.',
				nm_usuario_p, 'A', ie_evento_w,
				nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);

elsif (ie_mat_ativo_w = 'D') then

	CALL pls_gravar_conta_glosa(	'9920', null, null,
				nr_seq_conta_mat_w, 'N', 'O material esta fora da data de vigencia.',
				nm_usuario_p, 'A', ie_evento_w,
				nr_seq_prestador_exec_w, cd_estabelecimento_p, '' , null);
end if;

-- verifica se e para utilizar o campo da regra de preco combinada ou campo nr_seq_regra
if (pls_filtro_regra_preco_cta_pck.usar_nova_regra_crit_preco(cd_estabelecimento_p) = 'S') then

	select 	max(nr_seq_cp_comb_filtro)
	into STRICT	nr_seq_regra_preco_w
	from	pls_conta_mat_regra
	where	nr_sequencia = nr_seq_conta_mat_w;
end if;

-- Conforme visto com o Adriano, Diego e Bollaga. Caso nao exista regra de preco no item, e gerado glosa 1707 - 25/01/2012
if (coalesce(nr_seq_regra_preco_w,0) = 0) and (coalesce(nr_seq_preco_pacote_w,0)= 0) and (ie_regra_liberacao_w <> 3)  then

	CALL pls_gravar_conta_glosa(	'1707',null,null,
				nr_seq_conta_mat_w,'N','O sistema nao pode calcular um preco para este item.'||chr(13)||chr(10)||
				'Possiveis motivos: '||chr(13)||chr(10)||
				'1)Nao existe regras de preco adequadas ao item, cadastradas na funcao OPS - Regras e Criterios de Preco.',
				nm_usuario_p,'A',ie_evento_w,
				nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);

-- Caso exista regra de preco, mas o valor calculado esta zerado  e nao tenha se encaixado na regra de liberacao de valores da conta com regra de "valor calculado zerado" , gera a glos especifica 9919
elsif (coalesce(vl_calculado_w,0) = 0) and (ie_regra_liberacao_w <> 3) then

	CALL pls_gravar_conta_glosa('9919',null, null,
				nr_seq_conta_mat_w,'N', 'O sistema obteve uma regra de valorizacao adequada, mas nao foi possivel realizar o calculo do item.'||chr(13)||chr(10)||
				'Possiveis motivos: '||chr(13)||chr(10)||				
				'1)Nao existe o procedimento cadastrado na tabela de precos apontada pela regra.',
				nm_usuario_p,'A',ie_evento_w,
				nr_seq_prestador_exec_w, cd_estabelecimento_p, '', null);
end if;

SELECT * FROM pls_obter_evento_item(	null, null, nr_seq_material_w, cd_estabelecimento_p, ie_tipo_guia_w, ie_origem_conta_w, nr_seq_tipo_atendimento_w, ie_tipo_despesa_w, nr_seq_segurado_w, nr_seq_conta_w, 'N', coalesce(nr_seq_prest_fornec_w,nr_seq_prestador_exec_w), nr_seq_evento_w, nr_seq_evento_prod_w, 'C', ie_regime_atendimento_w, ie_saude_ocupacional_w) INTO STRICT nr_seq_evento_w, nr_seq_evento_prod_w;

-- removida a rotina pls_obter_regra_valor_glosa a mesma nao e mais utilizada
if (coalesce(nr_seq_material_w,0) > 0) then

	select	coalesce(max(ie_tipo_despesa),'')
	into STRICT	ie_tipo_desp_mat_w
	from	pls_material
	where	nr_sequencia	= nr_seq_material_w;
end if;

if (ie_gerar_grupo_ans_w = 'S') then

	nr_seq_grupo_ans_w := pls_obter_grupo_ans(	null, null, nr_seq_conselho_w,
							nr_seq_tipo_atendimento_w, ie_tipo_guia_w, ie_regime_internacao_w, 
							ie_tipo_desp_mat_w, 'G', cd_estabelecimento_p, nr_seq_conta_w);
end if;

-- so alimenta quando for o processo antigo, no novo nao
if (ie_processo_novo_p = 'N') then

	update	pls_conta_mat
	set	nr_seq_evento = nr_seq_evento_w,
		nr_seq_evento_prod = nr_seq_evento_prod_w,
		nr_seq_grupo_ans = nr_seq_grupo_ans_w,
		qt_autorizado = qt_autorizada_w
	where	nr_sequencia = nr_seq_conta_mat_p;
end if;

if (coalesce(nr_seq_grupo_ans_w::text, '') = '') and (ie_gerar_grupo_ans_w = 'S') then

	CALL pls_gravar_conta_glosa(	'9908', '', null,
				nr_seq_conta_mat_p, 'N', 'Verificar as regras de materiais X Grupo ANS',
				nm_usuario_p, 'A', ie_evento_w,
				nr_seq_prestador_exec_w, cd_estabelecimento_p, '',
				null);
end if;

ds_obs_data_w := pls_valida_regra_data_conta(dt_atendimento_referencia_w);

if (ds_obs_data_w IS NOT NULL AND ds_obs_data_w::text <> '') then
	CALL pls_gravar_conta_glosa(	'1701', nr_seq_conta_w, null,
				null, 'N', ds_obs_data_w || '. Seq item: ' || nr_seq_conta_mat_p,
				nm_usuario_p, 'A', ie_evento_w,
				nr_seq_prestador_exec_w, cd_estabelecimento_p, '',
				null);
end if;
 	
if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then

	-- Se a origem da conta for de A500, o recebida de outras operadoras
	if (ie_origem_conta_w = 'A') then

		ie_tipo_conta_w	:= 'I';
	/* Se o tipo de beneficiario for Usuario eventual (Resp. Assumida), Intercambio entre OPS congeneres (Resp. Assumida) ou 
		Intercambio entre cooperativas (Resp. Assumida) o tipo de conta e para ser faturado para outra operadora*/
	elsif (ie_tipo_segurado_w in ('I','C','T','H')) then
		ie_tipo_conta_w	:= 'C';
	else
		ie_tipo_conta_w	:= 'O';
	end if;
	
	-- so gera as ocorrencias quando for o processo antigo, no novo nao gera
	if (ie_processo_novo_p = 'N') then
		/* Alexandre - OS 248576 - Gerar ocorrencias para o material da conta  */


		/* Francisco - 20/05/2012 - OS 418741 - Quando estiver consistindo toda a conta,  vai passar so uma vez na PLS_GERAR_OCORRENCIA */

		if (coalesce(ie_consistindo_conta_p,'N') = 'N') then
			
			-- Obter dados do protocolo
			select	max(nr_seq_congenere)
			into STRICT	nr_seq_congenere_w
			from	pls_protocolo_conta
			where	nr_sequencia = nr_seq_protocolo_w;
			
			CALL pls_gerar_ocorrencia(	nr_seq_segurado_w, 'P', null,
						nr_seq_conta_w, null, nr_seq_conta_mat_w,
						null, null, nr_seq_material_w,
						ie_tipo_guia_w, nr_seq_plano_w, 'C',
						null, null,nr_seq_prestador_exec_w,
						null,'I','',
						ie_origem_conta_w,nm_usuario_p, cd_estabelecimento_p,
						nr_seq_congenere_w ,ie_tipo_conta_w, null,
						null, 'S');
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_conta_mat ( nr_seq_conta_mat_p pls_conta_mat.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ie_consistindo_conta_p text, nm_usuario_p usuario.nm_usuario%type, ie_utilizar_regra_mat_p text, ie_processo_novo_p text default 'N') FROM PUBLIC;

