-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_conpaci_desc_proc ( nr_sequencia_p bigint, ie_acao_p text, nm_usuario_p text) AS $body$
DECLARE


nr_interno_conta_w		bigint;
cd_estrutura_w			integer;
pr_desconto_w			double precision;
vl_desconto_w			double precision;
vl_liquido_w			double precision;
ds_view_w			varchar(30);
ds_erro_w			varchar(254);
nr_sequencia_w			bigint;
vl_procedimento_w		double precision	:= 0;
vl_medico_w			double precision	:= 0;
vl_custo_operacional_w		double precision	:= 0;
vl_materiais_w			double precision	:= 0;
ie_valor_informado_w		varchar(1);
vl_anestesista_w		double precision	:= 0;
vl_auxiliares_w			double precision	:= 0;
vl_medico_conta_w		double precision	:= 0;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
ie_classificacao_w		smallint;
cd_estabelecimento_w    	smallint  	:= 0;
ie_tipo_atendimento_w   	smallint    	:= 0;
cd_setor_Atendimento_w  	integer  	:= 0;
cd_medico_executor_w		varchar(10);
ie_emite_conta_w		varchar(3);
ie_emite_conta_honor_w		varchar(3);
ie_emite_honor_original_w	varchar(3);
vl_desc_partic_w		double precision	:= 0;
vl_desc_procedimento_w 		double precision	:= 0;
vl_desc_medico_w		double precision	:= 0;
vl_desc_custo_oper_w 		double precision	:= 0;
vl_desc_materiais_w 		double precision	:= 0;
vl_desc_anestesista_w 		double precision	:= 0;
vl_desc_auxiliares_w 		double precision	:= 0;
vl_desc_medico_conta_w		double precision	:= 0;
vl_soma_descontos_w 		double precision	:= 0;
vl_proc_valor_w			double precision	:= 0;
qt_procedimento_w		bigint;
nr_seq_w			bigint;
vl_desc_acum_w			double precision;
vl_proc_acum_w			double precision;
vl_partic_acum_w		double precision;
vl_participante_w		double precision;
nr_seq_partic_w			bigint;
vl_partic_w			double precision;
ie_entra_conta_w		varchar(10);
vl_original_proc_w		double precision;
ie_desc_material_w		varchar(2);
vl_proced_w			double precision;
ie_responsavel_credito_w	varchar(05);
nr_seq_desconto_w		bigint;
ie_mudou_valor_w		varchar(01);
vl_proc_total_w			double precision;

vl_proced_var_w			double precision;

ie_tipo_desconto_w		bigint;
cd_setor_estrut_w		bigint;

cd_proc_filtro_w		bigint;
ie_origem_filtro_w		bigint;
vl_conta_w			double precision;
vl_diferenca_w			double precision;
nr_seq_proc_pacote_w		bigint;

nr_seq_valor_desc_w		bigint;
IE_VALOR_INF_DESCONTO_W		varchar(01);
ie_pacote_w			varchar(1);
ie_resp_credito_partic_w	varchar(5);
vl_participantes_w		double precision;
ie_aplica_desc_partic_w		varchar(1);
ds_erro_ww			varchar(2000);
ie_arred_proc_partic_w		varchar(1);
vl_total_proc_w			double precision	:= 0;
vl_total_campos_proc_w		double precision	:= 0;
vl_total_partic_w		double precision	:= 0;
vl_proc_dif_w			double precision	:= 0;
ie_aplic_desc_vl_unit_w		varchar(1);
vl_proc_atual_w			double precision;
ie_valor_inf_w			conta_paciente_desconto.ie_valor_inf%type;
vl_conta_item_w			conta_paciente_desc_item.vl_conta%type;
vl_proc_original_w		procedimento_paciente.vl_procedimento%type;
nr_seq_proc_pacote_item_w	procedimento_paciente.nr_seq_proc_pacote%type;
qt_desc_w			smallint := 0;

-- Ricardo 17/04/2006 - Modificada a liha do vl_material abaixo.Problema ao desfazer com valor 0 (zero) OS 33016
c01 CURSOR FOR
SELECT 	a.nr_sequencia,
	max(coalesce(a.vl_procedimento,0)),
	max(coalesce(CASE WHEN coalesce(d.ie_entra_conta,'S')='N' THEN  0  ELSE a.vl_medico END ,0)),
	max(coalesce(a.vl_custo_operacional,0)),
	max(coalesce(a.vl_materiais,0)),
	a.ie_valor_informado,
	max(coalesce(CASE WHEN coalesce(d.ie_entra_conta,'S')='N' THEN  0  ELSE a.vl_anestesista END ,0)),
	max(coalesce(CASE WHEN coalesce(d.ie_entra_conta,'S')='N' THEN  0  ELSE a.vl_auxiliares END ,0)),
	max(coalesce(obter_valor_medico_proc(a.nr_sequencia),0)),
	a.cd_convenio,
	a.cd_categoria,
	a.cd_procedimento,
	a.ie_origem_proced,
	b.ie_classificacao,
	c.cd_estabelecimento,
	c.ie_tipo_atendimento,
	a.cd_setor_atendimento,
	a.cd_medico_executor,
	a.ie_emite_conta,
	coalesce(a.ie_emite_conta_honor, a.ie_emite_conta),
	coalesce(d.ie_entra_conta, 'X'),
	a.qt_procedimento,
	coalesce(a.vl_procedimento, 0),
	a.ie_emite_conta_honor,
	a.ie_responsavel_credito,
	a.nr_seq_proc_pacote
FROM atendimento_paciente c, procedimento b, procedimento_paciente a
LEFT OUTER JOIN regra_honorario d ON (a.ie_responsavel_credito = d.cd_regra)
WHERE a.cd_procedimento			= b.cd_procedimento and a.ie_origem_proced			= b.ie_origem_proced and a.nr_interno_conta			= nr_interno_conta_w and a.nr_atendimento			= c.nr_atendimento and a.ie_origem_proced 			not in (2,3) and a.nr_sequencia				<> coalesce(a.nr_seq_proc_pacote,0) and ((ie_pacote_w = 'A') or
	((ie_pacote_w = 'F') and (coalesce(a.nr_seq_proc_pacote, 0) = 0)) or
	((ie_pacote_w = 'P') and (coalesce(a.nr_seq_proc_pacote, 0) > 0))) and (coalesce(a.ie_emite_conta_honor, a.ie_emite_conta) IS NOT NULL AND (coalesce(a.ie_emite_conta_honor, a.ie_emite_conta))::text <> '') and ((ie_tipo_desconto_W in (8,9,10)) or (to_char(cd_estrutura_w) 		in (a.ie_emite_conta_honor, a.ie_emite_conta)))  and ((vl_procedimento <> 0) or (ie_acao_p = 'E')) and coalesce(a.cd_motivo_exc_conta::text, '') = '' and ((ie_tipo_desconto_W <> 5)  or (a.cd_setor_atendimento = cd_setor_estrut_w)) and ((ie_tipo_desconto_W <> 8)  or (a.cd_setor_atendimento = cd_setor_estrut_w)) and ((ie_tipo_desconto_W <> 9)  or (a.cd_setor_atendimento = cd_setor_estrut_w)) and ((ie_tipo_desconto_W <> 10)  or (a.cd_setor_atendimento = cd_setor_estrut_w)) and ((ie_tipo_desconto_W <> 6)  or (a.cd_procedimento = cd_proc_filtro_w AND a.ie_origem_proced = ie_origem_filtro_w)) and ((ie_tipo_desconto_W <> 11)  or (a.cd_procedimento = cd_proc_filtro_w AND a.ie_origem_proced = ie_origem_filtro_w)) and ((ie_tipo_desconto_W <> 7)  or (a.nr_seq_proc_pacote = nr_seq_proc_pacote_w)) and ((ie_acao_p = 'E') or (ie_valor_inf_w = 'A') or (ie_valor_inf_w = coalesce(a.ie_valor_informado,'N'))) and exists (select	1
	from	conta_paciente_desc_item x
	where	x.cd_estrutura		= to_char(coalesce(cd_estrutura_w, x.cd_estrutura))
	and	x.nr_seq_desconto 	= nr_seq_desconto_w
	and	x.ie_calcula		= 'S'
	and	not ie_tipo_desconto_W in (8,9,10)
	
union

	SELECT 	1
	where 	ie_tipo_desconto_W in (8,9,10)) group by a.nr_sequencia,
	a.ie_valor_informado,
	a.cd_convenio,
	a.cd_categoria,
	a.cd_procedimento,
	a.ie_origem_proced,
	b.ie_classificacao,
	c.cd_estabelecimento,
	c.ie_tipo_atendimento,
	a.cd_setor_atendimento,
	a.cd_medico_executor,
	a.ie_emite_conta,
	coalesce(a.ie_emite_conta_honor, a.ie_emite_conta),
	coalesce(d.ie_entra_conta, 'X'),
	a.qt_procedimento,
	coalesce(a.vl_procedimento, 0),
	a.ie_emite_conta_honor,
	a.ie_responsavel_credito,
	a.nr_seq_proc_pacote
order	by 2;

C03 CURSOR FOR
SELECT	nr_seq_partic,
	vl_conta
from	procedimento_participante
where	nr_sequencia = nr_sequencia_w
and 	ie_valor_informado = 'N'
and	vl_conta <> 0;


BEGIN

ie_aplic_desc_vl_unit_w	:= coalesce(obter_valor_param_usuario(67, 605, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');
ie_arred_proc_partic_w	:= obter_valor_param_usuario(67,614,Obter_Perfil_ativo,nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);

select	b.nr_interno_conta,
	a.nr_seq_desconto,
	b.IE_TIPO_DESCONTO,
	a.cd_setor_atendimento,
	a.cd_procedimento,
	a.ie_origem_proced,
	a.nr_seq_proc_pacote,
	coalesce(b.ie_pacote,'A'),
	coalesce(b.ie_valor_inf,'A')
into STRICT	nr_interno_conta_w,
	nr_seq_desconto_w,
	ie_tipo_desconto_w,
	cd_setor_estrut_w,
	cd_proc_filtro_w,
	ie_origem_filtro_w,
	nr_seq_proc_pacote_w,
	ie_pacote_w,
	ie_valor_inf_w
from	conta_paciente_desconto 	b,
	conta_paciente_desc_item 	a
where	a.nr_seq_desconto = b.nr_sequencia
and	a.nr_sequencia = nr_sequencia_p;

IF (not ie_tipo_desconto_W in (8,9,10)) THEN
	begin
	select	a.cd_estrutura,
		a.pr_desconto,
		a.vl_desconto,
		a.vl_liquido,
		b.ds_view,
		a.ie_desc_material,
		a.vl_conta
	into STRICT	cd_estrutura_w,
		pr_desconto_w,
		vl_desconto_w,
		vl_liquido_w,
		ds_view_w,
		ie_desc_material_w,
		vl_conta_item_w
	from	conta_paciente_estrutura b,
		conta_paciente_desc_item a
	where	a.cd_estrutura = b.cd_estrutura
	and	a.nr_sequencia = nr_sequencia_p
	and	(a.cd_estrutura IS NOT NULL AND a.cd_estrutura::text <> '');
	exception
		when others then
			cd_estrutura_w	:= cd_estrutura_w;
	end;
end if;

IF (ie_tipo_desconto_W in (8,9,10)) THEN
	begin
	select	max(c.ie_emite_conta),
		max(a.pr_desconto),
		max(a.vl_desconto),
		max(a.vl_liquido),
		max(b.ds_view),
		max(a.ie_desc_material),
		max(a.vl_conta)
	into STRICT	cd_estrutura_w,
		pr_desconto_w,
		vl_desconto_w,
		vl_liquido_w,
		ds_view_w,
		ie_desc_material_w,
		vl_conta_item_w
	from	conta_paciente_estrutura b,
		conta_paciente_v c,
		conta_paciente_desc_item a
	where	a.cd_setor_atendimento	= c.cd_setor_atendimento
	and	a.nr_sequencia	 	= nr_sequencia_p
	and	c.nr_interno_conta	= nr_interno_conta_w
	and	c.cd_setor_atendimento	= a.cd_setor_atendimento
	and	coalesce(a.cd_estrutura::text, '') = '';
	exception
		when others then
			cd_estrutura_w	:= cd_estrutura_w;
	end;
end if;

vl_desc_acum_w		:= 0;
vl_proc_acum_w		:= 0;
vl_partic_acum_w	:= 0;

OPEN C01;
LOOP
FETCH C01 into
	nr_sequencia_w,
	vl_procedimento_w,
	vl_medico_w,
	vl_custo_operacional_w,
	vl_materiais_w,
	ie_valor_informado_w,
	vl_anestesista_w,
	vl_auxiliares_w,
	vl_medico_conta_w,
	cd_convenio_w,
	cd_categoria_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	ie_classificacao_w,
	cd_estabelecimento_w,
	ie_tipo_atendimento_w,
	cd_setor_atendimento_w,
	cd_medico_executor_w,
	ie_emite_conta_w,
	ie_emite_conta_honor_w,
	ie_entra_conta_w,
	qt_procedimento_w,
	vl_original_proc_w,
	ie_emite_honor_original_w,
	ie_responsavel_credito_w,
	nr_seq_proc_pacote_item_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	vl_procedimento_w	:= 0;
	ie_mudou_valor_w	:= 'N';

	if (ie_acao_p	= 'I') then

		nr_seq_partic_w		:= 0;
		vl_desc_medico_w	:= 0;
		vl_desc_anestesista_w 	:= 0;
		vl_desc_auxiliares_w 	:= 0;
		vl_desc_custo_oper_w 	:= 0;
		vl_desc_materiais_w 	:= 0;
		vl_desc_medico_conta_w  := 0;

		/*1 - Taxa 	  2 - Valor desconto    3 - Valor líquido*/

		if (ie_tipo_desconto_w in (1,2,3)) then

			select	count(1)
			into STRICT	qt_desc_w
			from 	proc_paciente_valor
			where	nr_seq_procedimento	= nr_sequencia_w
			and	ie_tipo_valor		= 3 -- TIPO DESCONTO
			and 	nr_seq_desconto		= nr_seq_desconto_w  LIMIT 1;
			/*Descontos por Taxa, Valor de desconto ou Valor liquido sao calculados apenas 1 vez por item, mesmo que este item
			se encaixe em dois calculos: por emite conta e por emite conta honor. */
			if (qt_desc_w > 0) then
				goto final_c01;
			end if;
		end if;

		if (coalesce(pr_desconto_w,0) > 0) then

			if (ie_tipo_desconto_w = 6) and (coalesce(vl_desconto_w,0) > 0) and (coalesce(vl_conta_item_w,0) > 0) then
				pr_desconto_w	:= ((vl_desconto_w * 100) / vl_conta_item_w);
			end if;

			if (ie_aplic_desc_vl_unit_w = 'S') and (coalesce(qt_procedimento_w,0) <> 0) then
				vl_original_proc_w	:= dividir(vl_original_proc_w, qt_procedimento_w);
			end if;

			vl_desc_procedimento_w	:= ((vl_original_proc_w * pr_desconto_w) / 100);

			if (ie_aplic_desc_vl_unit_w = 'S') and (coalesce(qt_procedimento_w,0) <> 0) then
				vl_desc_procedimento_w	:= round((vl_desc_procedimento_w)::numeric,2) * qt_procedimento_w;
				vl_original_proc_w	:= vl_original_proc_w * qt_procedimento_w;
			end if;

		end if;

		if (pr_desconto_w	= 0) and (vl_desconto_w < 1) then
			vl_desc_procedimento_w	:= vl_desconto_w;
		end if;



		if	(cd_estrutura_w = ie_emite_conta_w AND ie_emite_conta_w = ie_emite_conta_honor_w) or
			(cd_estrutura_w  = ie_emite_conta_honor_w AND ie_emite_conta_w <> ie_emite_conta_honor_w) then

			vl_desc_medico_w	:= ((vl_medico_w * pr_desconto_w)/100);
			vl_desc_anestesista_w 	:= ((vl_anestesista_w * pr_desconto_w)/100);
			vl_desc_auxiliares_w 	:= ((vl_auxiliares_w * pr_desconto_w)/100);
			vl_desc_medico_conta_w	:= ((vl_medico_conta_w * pr_desconto_w)/100) -
						   vl_desc_medico_w - vl_desc_anestesista_w - vl_desc_auxiliares_w;


			vl_procedimento_w	:= (vl_medico_w + vl_anestesista_w + vl_auxiliares_w);

			vl_participantes_w:= 0;
			if (ie_tipo_desconto_w in (2,3)) then
				select	coalesce(sum(vl_conta),0)
				into STRICT	vl_participantes_w
				from	procedimento_participante
				where	nr_sequencia = nr_sequencia_w
				and	vl_conta <> 0;
			end if;

			vl_proc_total_w		:= (vl_medico_w + vl_anestesista_w + vl_auxiliares_w + vl_custo_operacional_w + vl_materiais_w + vl_participantes_w);

			if (vl_proc_total_w <> vl_original_proc_w) then
				vl_procedimento_w	:= vl_original_proc_w;
				ie_mudou_valor_w	:= 'S';
			end if;

		end if;

		if	((cd_estrutura_w = ie_emite_conta_w) and
			 ((ie_emite_conta_w <> ie_emite_conta_honor_w) or (vl_medico_w = 0 AND vl_custo_operacional_w <> 0))) or
			((cd_estrutura_w = ie_emite_conta_w) and (coalesce(ie_emite_honor_original_w::text, '') = '')) and (ie_mudou_valor_w = 'N') then

			vl_desc_custo_oper_w 	:= ((vl_custo_operacional_w * pr_desconto_w)/100);
			vl_desc_materiais_w 	:= ((vl_materiais_w * pr_desconto_w)/100);

			if (ie_desc_material_w = 'N') then
				vl_desc_custo_oper_w	:= vl_desc_custo_oper_w + vl_desc_materiais_w;
				vl_desc_materiais_w	:= 0;
			end if;


			vl_procedimento_w  	:= vl_procedimento_w + vl_custo_operacional_w + vl_materiais_w;

		end if;

		-- Edgar 15/03/2006 OS 31427
		-- verificar se sum(vl_medico_w + vl_anestesista_w + vl_auxiliares_w + vl_custo_operacional_w + vl_materiais_w) é zero
		-- 1.este valor é o valor atribuído ao procedimento
		-- 2.se este valor for zero, temos que atribuir o vl_original_proc ao vl_procedimento
		if (vl_procedimento_w = 0) then

			vl_procedimento_w	:= vl_original_proc_w;
		end if;

/*
		if	(vl_procedimento_w < 0) then

			vl_desc_procedimento_w	:= vl_desc_procedimento_w * -1;
			vl_desc_medico_w	:= vl_desc_medico_w * -1;
			vl_desc_custo_oper_w	:= vl_desc_custo_oper_w * -1;
			vl_desc_materiais_w	:= vl_desc_materiais_w * -1;
			vl_desc_anestesista_w	:= vl_desc_anestesista_w * -1;
			vl_desc_auxiliares_w	:= vl_desc_auxiliares_w * -1;


		end if;

*/
		vl_soma_descontos_w	:= 		vl_desc_medico_w +
							vl_desc_custo_oper_w +
							vl_desc_materiais_w +
							vl_desc_anestesista_w +
							vl_desc_auxiliares_w +
							vl_desc_medico_conta_w;

		if (vl_soma_descontos_w <> 0) and (vl_soma_descontos_w <> vl_desc_procedimento_w) then
			vl_desc_procedimento_w	:= vl_soma_descontos_w;
		end if;

		vl_desc_acum_w	:= vl_desc_acum_w + vl_desc_procedimento_w;

		select	coalesce(sum(vl_conta),0)
		into STRICT	vl_participante_w
		from	procedimento_participante
		where	nr_sequencia = nr_sequencia_w
		and	vl_conta <> 0;

		vl_partic_acum_w	:= vl_partic_acum_w + vl_participante_w;

		if	(vl_Procedimento_w > 0 AND vl_desc_procedimento_w > 0) or
			(vl_Procedimento_w < 0 AND vl_desc_procedimento_w < 0) or
			(vl_Procedimento_w < 0 AND vl_desc_procedimento_w > 0) or
			(vl_Procedimento_w > 0 AND vl_desc_procedimento_w < 0) then /* Ricardo 02/10/2006 - Incluí a linha ao lado OS37060 */
			/* atualizar procedimento_paciente */

			update procedimento_paciente
			set	 ie_valor_informado 	= 'S',
				 vl_medico		= (vl_medico - vl_desc_medico_w),
				 vl_custo_operacional	= (vl_custo_operacional - vl_desc_custo_oper_w),
				 vl_materiais		= (vl_materiais - vl_desc_materiais_w),
				 vl_anestesista		= (vl_anestesista - vl_desc_anestesista_w),
				 vl_auxiliares		= (vl_auxiliares - vl_desc_auxiliares_w)
			where	 nr_sequencia		= nr_sequencia_w;

			if (ie_mudou_valor_w	= 'N') then
				begin
					update	procedimento_paciente
					set	vl_procedimento		= CASE WHEN ie_entra_conta_w='N' THEN  0  ELSE vl_medico END  + vl_custo_operacional +  vl_materiais+
								  vl_anestesista + vl_auxiliares
					where	nr_sequencia		= nr_sequencia_w
					and (CASE WHEN ie_entra_conta_w='N' THEN  0  ELSE vl_medico END  + vl_custo_operacional +  vl_materiais+
								  vl_anestesista + vl_auxiliares) <> 0;

					update	procedimento_paciente
					set	vl_procedimento		= (vl_Procedimento_w - vl_desc_procedimento_w)
					where	nr_sequencia		= nr_sequencia_w
					and (vl_medico + vl_custo_operacional +  vl_materiais+
							  vl_anestesista + vl_auxiliares) = 0;
				end;
			else
				update	procedimento_paciente
				set	vl_procedimento		= (vl_Procedimento_w - vl_desc_procedimento_w)
				where	nr_sequencia		= nr_sequencia_w;
			end if;

			delete	from proc_paciente_valor
			where	nr_seq_procedimento	= nr_sequencia_w
			and	ie_tipo_valor		= 3 -- TIPO DESCONTO
			and 	nr_seq_desconto		= nr_seq_desconto_w;

			/* gerar proc_paciente_valor */

			select	coalesce(max(nr_sequencia), 0)
			into STRICT	nr_seq_w
			from	proc_paciente_valor
			where	nr_seq_procedimento	= nr_sequencia_w;

			nr_seq_w			:= nr_seq_w + 1;

			select	sum(vl_procedimento)
			into STRICT	vl_proc_atual_w
			from	procedimento_paciente
			where	nr_sequencia = nr_sequencia_w;

			if	(vl_proc_atual_w <> (vl_Procedimento_w - round((vl_desc_procedimento_w)::numeric,2))) then
				vl_desc_procedimento_w := vl_Procedimento_w - vl_proc_atual_w;
			end if;


			begin
			insert into proc_paciente_valor(nr_seq_procedimento,
				nr_sequencia,
				ie_tipo_valor,
				dt_atualizacao,
				nm_usuario,
				vl_procedimento,
				vl_medico,
				vl_anestesista,
				vl_materiais,
				vl_custo_operacional,
				vl_auxiliares,
				cd_convenio,
				cd_categoria,
				pr_valor,
				nr_seq_desconto)
			values (nr_sequencia_w,
				nr_seq_w,
				3,
				clock_timestamp(),
				nm_usuario_p,
				vl_desc_procedimento_w,
				vl_desc_medico_w,
				vl_desc_anestesista_w,
				vl_desc_materiais_w,
				vl_desc_custo_oper_w,
				vl_desc_auxiliares_w,
				cd_convenio_w,
				cd_categoria_w,
				pr_desconto_w,
				nr_seq_desconto_w);
			exception
				when others then
				ds_erro_ww:= substr(sqlerrm,1,2000);
			end;


			select	coalesce(max(ie_responsavel_credito),'@')
			into STRICT	ie_resp_credito_partic_w
			from	procedimento_participante
			where	nr_sequencia = nr_sequencia_w
			and	vl_conta <> 0;

			if (ie_resp_credito_partic_w <> '@') then
				select 	coalesce(max(ie_entra_conta),ie_entra_conta_w)
				into STRICT	ie_entra_conta_w
				from 	regra_honorario
				where 	cd_regra = ie_resp_credito_partic_w;
			end if;


--			if (vl_desc_medico_w > 0) then Edgar 22/03/2005 OS 16382
			if (vl_desc_medico_w > 0) or (ie_entra_conta_w = 'S') then
				vl_total_partic_w	:= 0;

				open C03;
				loop
				fetch C03 into
					nr_seq_partic_w,
					vl_partic_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					select	coalesce(max(ie_aplica_desc_partic),'S')
					into STRICT	ie_aplica_desc_partic_w
					from	parametro_faturamento
					where	cd_estabelecimento = cd_estabelecimento_w;

					if (ie_aplica_desc_partic_w = 'S') then
						update	procedimento_participante
						set	vl_conta		= vl_conta - (vl_conta * pr_desconto_w) / 100,
							vl_participante		= vl_participante - (vl_conta * pr_desconto_w) / 100,
							ie_valor_informado	= 'S'
						where	nr_sequencia		= nr_sequencia_w
						and	nr_seq_partic		= nr_seq_partic_w;
					end if;

					select 	coalesce(sum(vl_conta),0)
					into STRICT	vl_conta_w
					from 	procedimento_participante
					where 	nr_sequencia		= nr_sequencia_w
					and	nr_seq_partic		= nr_seq_partic_w;

					if (vl_conta_w > 0) and (ie_entra_conta_w = 'S') and (ie_tipo_desconto_w in (2,3)) then
						update	procedimento_paciente
						set	vl_procedimento	= vl_procedimento + vl_conta_w
						where	nr_sequencia	= nr_sequencia_w;
					end if;

				end loop;
				close C03;

				if (coalesce(ie_arred_proc_partic_w,'N') = 'S') then

					select	coalesce(sum(vl_procedimento),0),
						coalesce(sum(vl_medico) + sum(vl_auxiliares) + sum(vl_anestesista) + sum(vl_materiais) + sum(vl_custo_operacional),0)
					into STRICT	vl_total_proc_w,
						vl_total_campos_proc_w
					from	procedimento_paciente
					where	nr_sequencia = nr_sequencia_w;

					select 	coalesce(sum(vl_conta),0)
					into STRICT	vl_total_partic_w
					from 	procedimento_participante
					where 	nr_sequencia = nr_sequencia_w;

					if (coalesce(vl_total_proc_w,0) <> 0) and (coalesce(vl_total_campos_proc_w + vl_total_partic_w,0) <> 0) and (coalesce(vl_total_proc_w,0) <> coalesce(vl_total_campos_proc_w + vl_total_partic_w,0)) then

						update	procedimento_paciente
						set	vl_procedimento = (vl_total_campos_proc_w + vl_total_partic_w)
						where	nr_sequencia = nr_sequencia_w;

					end if;

				end if;

			end if;

			select	coalesce(max(vl_procedimento) + vl_desc_procedimento_w,0)
			into STRICT	vl_proc_dif_w
			from	procedimento_paciente
			where	nr_sequencia = nr_sequencia_w;
			--valor do proc antes do desconto <> vl proc atual + desconto dado no item
			if (coalesce(vl_original_proc_w,0) <> coalesce(vl_proc_dif_w,0)) then

				vl_desc_procedimento_w	:= vl_desc_procedimento_w + (coalesce(vl_original_proc_w,0) - coalesce(vl_proc_dif_w,0));

				update	proc_paciente_valor
				set	vl_procedimento 	= vl_desc_procedimento_w
				where	nr_seq_procedimento	= nr_sequencia_w
				and	ie_tipo_valor		= 3
				and 	nr_seq_desconto		= nr_seq_desconto_w;

			end if;

		end if;
	else
		/*----------------------------------------- DESFAZENDO O DESCONTO ------------------------------------------- */

		select	coalesce(max(IE_VALOR_INF_DESCONTO), 'N')
		into STRICT	IE_VALOR_INF_DESCONTO_w
		from	parametro_faturamento
		where	cd_estabelecimento	= cd_estabelecimento_w;


		-- Edgar 28/03/2005, OS 16232, alterei para tratar proc glosado
		if (qt_procedimento_w <> 0) and (coalesce(nr_seq_proc_pacote_item_w,0) = 0) then

			update	procedimento_paciente
			set	ie_valor_informado 	= 'N'
			where	nr_sequencia		= nr_sequencia_w;
			update	procedimento_participante
			set	ie_valor_informado 	= 'N'
			where	nr_sequencia		= nr_sequencia_w;

			CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_w, nm_usuario_p);

		else
			select	coalesce(sum(vl_procedimento),0),
				coalesce(sum(vl_medico),0),
				coalesce(sum(vl_custo_operacional),0),
				coalesce(sum(vl_materiais),0),
				coalesce(sum(vl_anestesista),0),
				coalesce(sum(vl_auxiliares),0)
			into STRICT	vl_proc_valor_w,
				vl_medico_w,
				vl_custo_operacional_w,
				vl_materiais_w,
				vl_anestesista_w,
				vl_auxiliares_w
			from	proc_paciente_valor
			where	nr_seq_procedimento	= nr_sequencia_w
			and 	nr_seq_desconto	  	= nr_seq_desconto_w
			and	ie_tipo_valor		= 3;

			update	procedimento_paciente
			set	vl_procedimento		= vl_procedimento + vl_proc_valor_w,
				vl_medico		= vl_medico + vl_medico_w,
				vl_custo_operacional	= vl_custo_operacional + vl_custo_operacional_w,
				vl_materiais		= vl_materiais + vl_materiais_w,
				vl_anestesista		= vl_anestesista + vl_anestesista_w,
				vl_auxiliares		= vl_auxiliares + vl_auxiliares_w
			where	nr_sequencia		= nr_sequencia_w;
		end if;

		/*APAGA OS VALORES DE DESCONTO GERADOS PARA O PROCEDIMENTO*/

		delete	from proc_paciente_valor
		where	nr_seq_procedimento 	= nr_sequencia_w
		--and 	nr_seq_desconto		= nr_seq_desconto_w
		and	ie_tipo_valor		= 3;

		/*Ao desfazer desconto, voltar o valor inf do item*/

		if (IE_VALOR_INF_DESCONTO_w = 'S') and (coalesce(nr_seq_proc_pacote_item_w,0) = 0) then
			begin

			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_valor_desc_w
			from	proc_paciente_valor
			where	nr_seq_procedimento	= nr_sequencia_w
			and	ie_tipo_valor		= 96;

			if (nr_seq_valor_desc_w 	<> 0) then
				select	coalesce(VL_PROCEDIMENTO,0),
					coalesce(VL_MEDICO,0),
					coalesce(VL_ANESTESISTA,0),
					coalesce(VL_MATERIAIS,0),
					coalesce(VL_AUXILIARES,0),
					coalesce(VL_CUSTO_OPERACIONAL,0)
				into STRICT	VL_PROCEDIMENTO_w,
					VL_MEDICO_w,
					VL_ANESTESISTA_w,
					VL_MATERIAIS_w,
					VL_AUXILIARES_w,
					VL_CUSTO_OPERACIONAL_w
				from 	proc_paciente_valor
				where 	nr_seq_procedimento	= nr_sequencia_w
				and	ie_tipo_valor		= 96 -- valor original antes de aplicar o desconto
				and	nr_sequencia		= nr_seq_valor_desc_w;


				update	procedimento_paciente
				set	ie_valor_informado	= 'S',
					vl_procedimento		= VL_PROCEDIMENTO_w,
					VL_MEDICO		= VL_MEDICO_w,
					VL_ANESTESISTA		= VL_ANESTESISTA_w,
					VL_MATERIAIS		= VL_MATERIAIS_w,
					VL_AUXILIARES		= VL_AUXILIARES_w,
					VL_CUSTO_OPERACIONAL	= VL_CUSTO_OPERACIONAL_w
				where	nr_sequencia		= nr_sequencia_w;


			end if;
			end;
		end if;

	end if;
	<<final_c01>>
	null;
END LOOP;
CLOSE C01;

/* Ricardo 04/04/2006 - Incluída a variável vl_partic_acum_w para acumular o valor dos participantes junto ao valor de liquido */

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_conpaci_desc_proc ( nr_sequencia_p bigint, ie_acao_p text, nm_usuario_p text) FROM PUBLIC;

