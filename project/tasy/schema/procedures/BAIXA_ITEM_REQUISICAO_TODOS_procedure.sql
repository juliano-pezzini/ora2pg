-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixa_item_requisicao_todos ( nr_requisicao_p bigint, nr_sequencia_p bigint, qt_baixar_p bigint, cd_motivo_baixa_p bigint, nr_seq_lote_fornec_p bigint, cd_material_lido_p bigint, nm_usuario_p text, cd_barras_p text) AS $body$
DECLARE



cd_estabelecimento_w	integer;
cd_local_estoque_w	smallint;
cd_operacao_estoque_w	integer;
dt_atendimento_w		timestamp;
qt_material_requisitada_w	double precision;
qt_material_atendida_w 	double precision;
cd_material_w		integer;
ds_erro_w		varchar(255);
var_motivo_padrao_w	smallint;
Var_baixa_sem_saldo_w	varchar(1);
var_motivo_baixa_w	smallint;
qt_liberada_w		bigint;

/*
Procedure criada por Fabio em 10/08/2010.
Deve perver os tipos de atendimento para utilização no PALM
*/
BEGIN
dt_atendimento_w		:= clock_timestamp();

begin

select	cd_local_estoque,
	cd_operacao_estoque
into STRICT	cd_local_estoque_w,
	cd_operacao_estoque_w
from	requisicao_material
where	nr_requisicao		= nr_requisicao_p;
exception when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(183877, 'NR_REQUISICAO=' || nr_requisicao_p);
	/*Ra.ise_application_error(-20011, 'Não foi possível localizar a requisição = ' || nr_requisicao_p);*/

end;

select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	local_estoque
where	cd_local_estoque = cd_local_estoque_w;

select	count(*)
into STRICT	qt_liberada_w
from	requisicao_material
where	nr_requisicao = nr_requisicao_p
and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
if (qt_liberada_w = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(183878, 'NR_REQUISICAO=' || nr_requisicao_p);
	/*Ra.ise_application_error(-20011, 'A requisição ' || nr_requisicao_p || ' não está liberada para atendimento.' );*/

end if;

var_motivo_padrao_w := obter_param_usuario(109, 19, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, var_motivo_padrao_w);
Var_baixa_sem_saldo_w := obter_param_usuario(109, 5, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, Var_baixa_sem_saldo_w);

if (coalesce(cd_motivo_baixa_p,0) > 0) then
	var_motivo_baixa_w := cd_motivo_baixa_p;
else
	var_motivo_baixa_w := var_motivo_padrao_w;
end if;

select	max(qt_material_requisitada),
	max(cd_material)
into STRICT	qt_material_requisitada_w,
	cd_material_w
from	item_requisicao_material
where	nr_requisicao		= nr_requisicao_p
and	nr_sequencia		= nr_sequencia_p;


if (var_motivo_baixa_w in (1,4)) then
	begin
		CALL baixar_item_requisicao(
			nr_requisicao_p,
			cd_material_w,
			cd_material_lido_p,
			qt_baixar_p,
			nr_seq_lote_fornec_p,
			var_motivo_baixa_w,
			cd_operacao_estoque_w,
			Var_baixa_sem_saldo_w,
			clock_timestamp(),
			cd_barras_p,
			nm_usuario_p);
	
	if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(183879, 'DS_ERRO=' || ds_erro_w);
		/*ra.ise_application_error(-20011,'Erro ao baixar o item:' || chr(13) || ds_erro_w);*/

	end if;
	end;
else
	begin

	if (qt_baixar_p < qt_material_requisitada_w) then
		CALL baixar_item_req_motivo_pda(
				nr_requisicao_p,
				nr_sequencia_p,
				qt_baixar_p,
				nr_seq_lote_fornec_p,
				var_motivo_baixa_w,
				nm_usuario_p);
	else
		update	item_requisicao_material
		set	qt_material_atendida	= CASE WHEN obter_tipo_motivo_baixa_req(cd_motivo_baixa)=5 THEN  qt_material_requisitada_w  ELSE 0 END ,
			dt_atendimento		= dt_atendimento_w,
			cd_motivo_baixa		= var_motivo_baixa_w
		where	nr_requisicao		= nr_requisicao_p
		and	nr_sequencia		= nr_sequencia_p;
	end if;

	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixa_item_requisicao_todos ( nr_requisicao_p bigint, nr_sequencia_p bigint, qt_baixar_p bigint, cd_motivo_baixa_p bigint, nr_seq_lote_fornec_p bigint, cd_material_lido_p bigint, nm_usuario_p text, cd_barras_p text) FROM PUBLIC;

