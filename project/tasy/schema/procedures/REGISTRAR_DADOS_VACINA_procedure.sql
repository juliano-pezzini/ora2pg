-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE registrar_dados_vacina (nr_seq_vacina_p bigint, ie_opcao_p text, nm_usuario_p text, nr_seq_motivo_canc_p bigint) AS $body$
DECLARE


C01 CURSOR FOR
	SELECT 	a.cd_material,
		a.qt_material,
		a.cd_unidade_medida,
		a.nr_seq_lote	   	
	from   	vacina_paciente_material a,
		paciente_vacina b
	where  	b.nr_sequencia = nr_seq_vacina_p
	and	a.nr_seq_vacina = b.nr_sequencia;

cd_material_w		bigint;
qt_material_w		double precision;
cd_unidade_medida_w	varchar(35);
ie_retornar_estoque_w	varchar(1);
nr_seq_lote_w		bigint;
ie_estorna_proc_w	varchar(1);
nr_atendimento_w	atendimento_paciente.nr_atendimento%type;
	

BEGIN
ie_retornar_estoque_w 	:= coalesce(obter_valor_param_usuario(903,25,Obter_Perfil_ativo,nm_usuario_p,obter_estabelecimento_ativo),'N');
ie_estorna_proc_w 		:= coalesce(obter_valor_param_usuario(903,38,Obter_Perfil_ativo,nm_usuario_p,obter_estabelecimento_ativo),'N');

	/* Opção
	L - Liberação
	S - Suspensão
	*/
if (ie_opcao_p = 'L') then
	
	update	paciente_vacina
	set	dt_liberacao		= clock_timestamp(),
		nm_usuario_liberacao	= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	nr_sequencia		= nr_seq_vacina_p;

elsif (ie_opcao_p = 'S') then
	update	paciente_vacina
	set	dt_cancelamento		= clock_timestamp(),
		nm_usuario_cancelamento	= nm_usuario_p,
		nr_seq_motivo_canc	= nr_seq_motivo_canc_p,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	nr_sequencia		= nr_seq_vacina_p;
	
	select	max(nr_atendimento)
	into STRICT	nr_atendimento_w
	from	paciente_vacina
	where	nr_sequencia	= nr_seq_vacina_p;

	if (ie_estorna_proc_w = 'S') then
		CALL estornar_proc_vacina(nr_atendimento_w, nr_seq_vacina_p, nm_usuario_p);
	end if;
	
	if ('S' = ie_retornar_estoque_w) then
	
	
		open C01;
		loop
		fetch C01 into	
			cd_material_w,
			qt_material_w,
			cd_unidade_medida_w,
			 nr_seq_lote_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin					
			CALL Inserir_Mat_Med_Vacina(nr_seq_vacina_p, cd_material_w, qt_material_w, cd_unidade_medida_w, obter_estabelecimento_ativo, nm_usuario_p, 'D', nr_seq_lote_w);
			end;
		end loop;
		close C01;	
	end if;
	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE registrar_dados_vacina (nr_seq_vacina_p bigint, ie_opcao_p text, nm_usuario_p text, nr_seq_motivo_canc_p bigint) FROM PUBLIC;

