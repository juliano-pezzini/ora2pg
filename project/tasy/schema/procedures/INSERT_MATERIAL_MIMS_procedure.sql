-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE insert_material_mims (cd_estabelecimento_p bigint, nr_version_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_generic_w               varchar(3000);
ds_volume_w                varchar(30);
ds_drug_name_w             varchar(3000);
ds_mims_drug_key           varchar(3000);
ds_mims_generic_key_w      varchar(3000);
ds_unitsperpack_w          varchar(200);
ds_unit_cons_w             varchar(2000);
pbsinfo_w                  varchar(2000);
cd_subgrupo_material_w     imp_subgrupo_material.cd_subgrupo_material%TYPE;
cd_classe_material_w       imp_classe_material.cd_classe_material%TYPE;
qt_sub_grupo_material_w    bigint;
qt_classe_material_w       bigint;
cd_tasy_material_w         material.cd_material%TYPE;
cd_material_w              imp_material.cd_material%TYPE;
ds_orientacao_usuario_w    imp_material.ds_orientacao_usuario%TYPE;
cd_mat_gen_tasy_w          imp_material.cd_material_generico%TYPE;
nr_seq_mat_estab_w         imp_material_estab.nr_sequencia%TYPE;
nr_seq_mat_reacao_w        imp_material_reacao.nr_sequencia%TYPE;
ds_reacao_w                imp_material_reacao.ds_reacao%TYPE;
nr_seq_conversao_w         imp_material_sistema_ext.nr_sequencia%TYPE;
material_w                 imp_material%ROWTYPE;
material_estab_w           imp_material_estab%ROWTYPE;
material_reacao_w          imp_material_reacao%ROWTYPE;
mims_mat_tasy_mat_w        mims_material_tasy%ROWTYPE;
material_sistema_externo_w imp_material_sistema_ext%ROWTYPE;
cd_unidade_medida_form_w   varchar(30);
cd_active_units_w          varchar(30);
cd_form_w                  varchar(100);
cd_per_vol_units_w         varchar(30);
atccode_w                  varchar(255);
ds_use_w                   proddat.USE%TYPE;
ds_pr_w                    proddat.pr%TYPE;
ds_pc_w                    proddat.pc%TYPE;
ds_wa_w                    proddat.wa%TYPE;
ds_ci_w                    proddat.ci%TYPE;
ds_ar_w                    proddat.ar%TYPE;
ds_qld_w                   ppsdat.qld%TYPE;
qt_exist_indication_w      bigint;
qt_reg_w                   bigint 		:= 0;
nr_mims_version            bigint 			:= nr_version_p;
nm_usuario_w               varchar(15)	 	:= nm_usuario_p;
QT_ORIG_MED_TOTAL_CONC_W   imp_material.QT_ORIG_MED_TOTAL_CONC%type;
QT_BASE_MED_TOTAL_CONC_W   imp_material.QT_BASE_MED_TOTAL_CONC%type;
cd_active_units_ml_w          varchar(30);
end_position_w  bigint;
pbs_auth_code_w pbs_indication.CD_AUTHORITY_CODE%type;

ds_category_a              varchar(1000) := 'Category A' || chr(13) || chr(10) ||
											'Drugs which have been taken by a large number of pregnant women and women of childbearing age '||
											'without any proven increase in the frequency of malformations or other direct or indirect harmful '||
											'effects on the fetus having been observed.';

ds_category_b1             varchar(1000) := 'Category B1' || chr(13) || chr(10) ||
											'Drugs which have been taken by only a limited number of pregnant women and women of ' ||
											'childbearing age, without an increase in the frequency of malformation or other direct or indirect '||
											'harmful effects on the human fetus having been observed.' || chr(13) || chr(10) ||
											'Studies in animals have not shown evidence of an increased occurrence of fetal damage.';
ds_category_b2             varchar(1000) := 'Category B2' || chr(13) || chr(10) ||
											'Drugs which have been taken by only a limited number of pregnant women and women of ' ||
											'childbearing age, without an increase in the frequency of malformation or other direct or indirect '||
											'harmful effects on the human fetus having been observed.' || chr(13) || chr(10) ||
											'Studies in animals are inadequate or may be lacking, but available data show no evidence of an increased occurrence of fetal damage.';
ds_category_b3             varchar(1000) := 'Category B3' || chr(13) || chr(10) ||
											'Drugs which have been taken by only a limited number of pregnant women and women of ' ||
											'childbearing age, without an increase in the frequency of malformation or other direct or indirect '||
											'harmful effects on the human fetus having been observed.' || chr(13) || chr(10) ||
											'Studies in animals have shown evidence of an increased occurrence of fetal damage, the significance of which is considered uncertain in humans.';
ds_category_c              varchar(1000) := 'Category C' || chr(13) || chr(10) ||
											'Drugs which, owing to their pharmacological effects, have caused or may be suspected of causing, '||
											'harmful effects on the human fetus or neonate without causing malformations. These effects may be '||
											'reversible. Accompanying texts should be consulted for further details.';
ds_category_d              varchar(1000) := 'Category D' || chr(13) || chr(10) ||
											'Drugs which have caused, are suspected to have caused or may be expected to cause, an increased '||
											'incidence of human fetal malformations or irreversible damage. These drugs may also have adverse '||
											'pharmacological effects. Accompanying texts should be consulted for further details.';
ds_category_x              varchar(1000) := 'Category X' || chr(13) || chr(10) ||
											'Drugs which have such a high risk of causing permanent damage to the fetus that they should not be '||
											'used in pregnancy or when there is a possibility of pregnancy.';
--SUBGRUPO_MATERIAL
c99 CURSOR FOR
	SELECT	SECTION,
			title
	FROM   	sectdat;

--CLASSE_MATERIAL
c98 CURSOR(p_section bigint) FOR
	SELECT	SECTION,
			subsection,
			subtitle,
			subtext
	FROM   	subdat
	WHERE  	SECTION = p_section;

--Product Form and Package
c01 CURSOR(p_section bigint, p_subsection text) FOR
	SELECT	g.prodcode,
			g.formcode,
			min(g.packcode) packcode,
			c.product product,
			--d.brand product,
			d.form,
			g.active || ' ' || g.active_units misc,
			g.misc miscpack,
			g.active,
			g.active_units,
			g.per_volume,
			g.per_vol_units,
			g.unit_volume,
			g.unit_vol_units,
			g.units_per_pack,
			--g.pbs_code,

			--g.pbs,
			c.subsection
	FROM   	proddat c,
			formdat d,
			packdat g
	WHERE  	c.prodcode = d.prodcode
	AND 	d.prodcode = g.prodcode
	AND 	d.formcode = g.formcode
	AND 	coalesce(c.deleted::text, '') = ''  --DO  NOT IMPORT DELETED
	AND (SECTION, subsection ) IN (p_section, p_subsection)
	GROUP  	BY	g.prodcode,
				g.formcode,
				c.product,
				--d.brand,
				g.active,
				g.active_units,
				d.form,
				g.misc,
				g.per_volume,
				g.per_vol_units,
				g.unit_volume,
				g.unit_vol_units,
				g.units_per_pack,
				--g.pbs_code,

				--g.pbs,
				c.subsection
	ORDER  	BY prodcode;
-- Routes
c03 CURSOR(p_productcode bigint, p_formcode  bigint, p_packcode  bigint) FOR
	SELECT	a.productcode
			, a.formcode
			, a.packcode
			, a.itemcode
			, a.routeid
			, a.routedes
			, mims_convert_route_adm(a.routeid) ie_via_aplicacao
	FROM   	itemroa a
			, packitem b
	WHERE (a.productcode, a.formcode, a.packcode ) IN (p_productcode, p_formcode, p_packcode)
	AND 	a.productcode = b.productcode
	AND 	a.formcode = b.formcode
	AND 	a.packcode = b.packcode
	AND 	a.itemcode = b.itemcode;

-- PBS of the medicine is being performed in the procedure Import_mims_material
c_pbs_indication CURSOR FOR
	SELECT *
	FROM   inddat;

BEGIN

COMMIT;
FOR r_c_pbs_indication IN c_pbs_indication LOOP
	BEGIN

	SELECT	count(*)
	INTO STRICT   	qt_exist_indication_w
	FROM   	pbs_indication
	WHERE  	nr_mims_indication = r_c_pbs_indication.indcode
	AND 	ie_situacao = 'A';

	BEGIN
		end_position_w := -1;
		pbs_auth_code_w := NULL;
	IF ( position('<B>' in r_c_pbs_indication.note) = 1 ) THEN
		end_position_w := (position('</B>' in r_c_pbs_indication.note))::numeric;
		pbs_auth_code_w := to_char(replace(SUBSTR(to_char(r_c_pbs_indication.note),1,(end_position_w - 1)), '<B>', ''));
	ELSE
		end_position_w := -1;
		pbs_auth_code_w := NULL;	
	END IF;
	EXCEPTION WHEN OTHERS THEN
		end_position_w := -1;
		pbs_auth_code_w := NULL;
	END;

	IF (qt_exist_indication_w > 0 ) THEN
		UPDATE	pbs_indication
		SET		ds_note = r_c_pbs_indication.note,
				ds_abrev_ind = r_c_pbs_indication.abbrev_indication,
				ds_indication = r_c_pbs_indication.indication,
				dt_atualizacao = clock_timestamp(),
				CD_AUTHORITY_CODE = to_char(pbs_auth_code_w),
				nm_usuario = nm_usuario_w
		WHERE 	nr_mims_indication = r_c_pbs_indication.indcode;
	ELSE
		INSERT INTO pbs_indication(nr_sequencia
					 , dt_atualizacao
					 , nm_usuario
					 , dt_atualizacao_nrec
					 , nm_usuario_nrec
					 , ds_note
					 , ds_abrev_ind
					 , ds_indication
					 , nr_mims_indication
					 , CD_AUTHORITY_CODE
					 , ie_situacao)
		VALUES (nextval('pbs_indication_seq')
					 , clock_timestamp()
					 , nm_usuario_w
					 , clock_timestamp()
					 , nm_usuario_w
					 , r_c_pbs_indication.note
					 , r_c_pbs_indication.abbrev_indication
					 , r_c_pbs_indication.indication
					 , r_c_pbs_indication.indcode
					 , to_char(pbs_auth_code_w)
					 , 'A'); -- Active
	END IF;

	END;
END LOOP;

FOR r99 IN c99 LOOP -- imp_subgrupo_material
	BEGIN

	SELECT	count(*)
	INTO STRICT   	qt_sub_grupo_material_w
	FROM   	imp_subgrupo_material
	WHERE  	cd_sistema_ant = r99.SECTION
	and 	nr_seq_mims_version = nr_version_p;

	IF (qt_sub_grupo_material_w = 0 ) THEN
		select nextval('imp_subgrupo_material_seq')
		into STRICT cd_subgrupo_material_w
		;


		INSERT INTO imp_subgrupo_material(cd_subgrupo_material
					 , ds_subgrupo_material
					 , cd_grupo_material
					 , ie_situacao
					 , dt_atualizacao
					 , nm_usuario
					 , cd_sistema_ant
					 ,nr_seq_mims_version

					 , dt_atualizacao_nrec

					 , nm_usuario_nrec)
		VALUES ( cd_subgrupo_material_w
					 , r99.title
					 , 1
					 , -- Medicine Group
					 'A'
					 , clock_timestamp()
					 , nm_usuario_w
					 , r99.SECTION
					 , nr_version_p

					 , clock_timestamp()

					 , nm_usuario_w);
	ELSE

		SELECT	cd_subgrupo_material
		INTO STRICT   	cd_subgrupo_material_w
		FROM   	imp_subgrupo_material
		WHERE  	cd_sistema_ant = r99.SECTION
		and 	nr_seq_mims_version = nr_version_p;
	END IF;

	FOR r98 IN c98(r99.SECTION) LOOP -- CLASSE_MATERIAL
		BEGIN

		SELECT	count(*)
		INTO STRICT   	qt_classe_material_w
		FROM   	imp_classe_material
		WHERE  	cd_sistema_ant = r98.subsection
		AND 	cd_subgrupo_material = (SELECT	max(x.cd_subgrupo_material)
										FROM	imp_subgrupo_material x
										WHERE  	x.cd_sistema_ant = r98.SECTION
										and 	nr_seq_mims_version = nr_version_p);

		IF (qt_classe_material_w = 0 ) THEN

			SELECT	nextval('imp_classe_material_seq')
			INTO STRICT   	cd_classe_material_w						
			;

			INSERT INTO imp_classe_material(cd_classe_material
						 , ds_classe_material
						 , cd_subgrupo_material
						 , ie_situacao
						 , dt_atualizacao
						 , nm_usuario
						 , cd_sistema_ant
						 ,nr_seq_mims_version

						 , dt_atualizacao_nrec

						, nm_usuario_nrec)
			VALUES ( cd_classe_material_w
						 , r98.subtitle
						 , cd_subgrupo_material_w
						 , 'A'
						 , clock_timestamp()
						 , nm_usuario_w
						 , r98.subsection
						 , nr_version_p

						 , clock_timestamp()

						, nm_usuario_w);
		ELSE
			SELECT	cd_classe_material
			INTO STRICT   	cd_classe_material_w
			FROM   	imp_classe_material
			WHERE  	cd_sistema_ant = r98.subsection
			AND 	cd_subgrupo_material = (SELECT	max(x.cd_subgrupo_material)
											FROM   	imp_subgrupo_material x
											WHERE	x.cd_sistema_ant = r98.SECTION
											and 	nr_seq_mims_version = nr_version_p);
		END IF;

		FOR r1 IN c01(r99.SECTION, r98.subsection) LOOP -- MATERIAL
			BEGIN
			qt_reg_w := qt_reg_w + 1;

			CALL gravar_processo_longo(	'Importing item '
									||r1.prodcode
									||' - '
									||r1.product,
									'INSERT_MATERIAL_RECORD',
									qt_reg_w);

			ds_generic_w := '';
			ds_volume_w := '';
			ds_mims_drug_key := '';
			ds_mims_generic_key_w := '';
			ds_unitsperpack_w := '';
			ds_unit_cons_w := '';
			pbsinfo_w := '';
			ds_drug_name_w := r1.product;

			/* IF (r1.pbs_code IS NOT NULL) and
				(r1.pbs IS NOT NULL )then
			pbsinfo_w := ' ('||r1.pbs_code
							||' - '
							|| r1.pbs
							||')';
			END IF; */
			IF (coalesce(trim(both r1.misc), 'X') <> 'X') THEN
				ds_drug_name_w := substr(ds_drug_name_w
										 ||' '
										 ||r1.misc, 1, 255);
			end if;

			ds_volume_w := NULL;

			IF (r1.per_volume IS NOT NULL AND r1.per_volume::text <> '') and (r1.per_vol_units IS NOT NULL AND r1.per_vol_units::text <> '') then
				ds_volume_w := substr('/'
									  || r1.per_volume
									  || r1.per_vol_units, 1, 30);
			END IF;

			IF (r1.unit_volume IS NOT NULL AND r1.unit_volume::text <> '') and (r1.unit_vol_units IS NOT NULL AND r1.unit_vol_units::text <> '') then
				ds_volume_w := substr(ds_volume_w
									  || ' '
									  || r1.unit_volume
									  || r1.unit_vol_units, 1, 30);
			END IF;

			IF (coalesce(trim(both r1.miscpack), 'X') <> 'X') THEN

				IF (coalesce(ds_volume_w::text, '') = '' ) THEN
					ds_volume_w := substr(' ' || r1.miscpack, 1, 30);

				elsif	(((coalesce(r1.per_volume::text, '') = '') AND (coalesce(r1.per_vol_units::text, '') = '')) AND
						(r1.unit_volume IS NOT NULL AND r1.unit_volume::text <> '' AND r1.unit_vol_units IS NOT NULL AND r1.unit_vol_units::text <> ''))
				then
					ds_volume_w := substr(ds_volume_w
										||' '
										|| r1.miscpack, 1, 30);
				END IF;
			END IF;

			ds_unitsperpack_w := substr(ds_volume_w
										|| ' ('
										|| r1.units_per_pack
										||')',1,255);

			ds_drug_name_w := substr(ds_drug_name_w || ds_unitsperpack_w,1,255);

			IF (r1.FORM IS NOT NULL AND r1.FORM::text <> '') THEN
				ds_drug_name_w := substr(ds_drug_name_w
									 || ' '
									 || r1.FORM, 1, 255);
			END IF;
			
			-- ds_drug_name_w := substr(ds_drug_name_w || ' ' || pbsInfo_w,1,255);
			
			ds_drug_name_w := substr(ds_drug_name_w,1,255);

			ds_mims_drug_key := coalesce(r1.prodcode, -9)
								  ||' '
								  ||coalesce(r1.formcode, -9)
								  ||' '
								  ||coalesce(r1.packcode, -9);

			ds_orientacao_usuario_w := NULL;

			SELECT	max(USE),
					max(pr),
					max(upper(pc)),
					max(wa),
					max(ci),
					max(ar)
			INTO STRICT   	ds_use_w,
					ds_pr_w,
					ds_pc_w,
					ds_wa_w,
					ds_ci_w,
					ds_ar_w
			FROM   	proddat
			WHERE  	prodcode = r1.prodcode;

			IF (coalesce(ds_use_w, 'X') <> 'X') THEN
				ds_orientacao_usuario_w := 'Use: ' || substr(ds_use_w, 1, 4000)|| chr(13)|| chr(10);
			END IF;

			IF (coalesce(ds_pr_w, 'X') <> 'X') THEN
				ds_orientacao_usuario_w := substr(ds_orientacao_usuario_w || 'Precautions: ' || ds_pr_w || chr(13) || chr(10), 1, 4000);
			END IF;

			IF (ds_pc_w = 'A') THEN
				ds_orientacao_usuario_w := substr(ds_orientacao_usuario_w || 'ADEC Pregnancy Category: ' || ds_category_a || chr(13)|| chr(10), 1, 4000);

			ELSIF (ds_pc_w = 'B1') THEN
				ds_orientacao_usuario_w := substr(ds_orientacao_usuario_w || 'ADEC Pregnancy Category: ' || ds_category_b1 || chr(13) || chr(10), 1, 4000);

			ELSIF (ds_pc_w = 'B2') THEN
				ds_orientacao_usuario_w := substr(ds_orientacao_usuario_w || 'ADEC Pregnancy Category: ' || ds_category_b2 || chr(13) || chr(10), 1, 4000);

			ELSIF (ds_pc_w = 'B3') THEN
				ds_orientacao_usuario_w := substr(ds_orientacao_usuario_w || 'ADEC Pregnancy Category: ' || ds_category_b3 || chr(13) || chr(10), 1, 4000);

			ELSIF (ds_pc_w = 'C') THEN
				ds_orientacao_usuario_w := substr(ds_orientacao_usuario_w || 'ADEC Pregnancy Category: ' || ds_category_c || chr(13) || chr(10), 1, 4000);

			ELSIF (ds_pc_w = 'D') THEN
				ds_orientacao_usuario_w := substr(ds_orientacao_usuario_w || 'ADEC Pregnancy Category: ' || ds_category_d || chr(13) || chr(10), 1, 4000);

			ELSIF (ds_pc_w = 'X' ) THEN
				ds_orientacao_usuario_w := substr(ds_orientacao_usuario_w || 'ADEC Pregnancy Category: ' || ds_category_x || chr(13) || chr(10), 1, 4000);
			END IF;

			IF (coalesce(ds_wa_w, 'X') <> 'X' ) THEN
				ds_orientacao_usuario_w := substr(ds_orientacao_usuario_w || 'Other Warnings: ' || ds_wa_w, 1, 4000);
			END IF;

			SELECT	nextval('imp_material_seq')
			INTO STRICT   	cd_material_w
			;

			material_w.nr_seq_ficha_tecnica := imp_ficha_tecnica_prod(r1.prodcode, nm_usuario_w, material_w.nr_seq_ficha_tecnica, nr_version_p);

			cd_active_units_w := substr(replace(trim(both r1.active_units),' ',''),1,30);
			cd_per_vol_units_w := substr(replace(trim(both r1.per_vol_units),' ',''),1, 30);
			cd_form_w := r1.form;

			IF (position(' ' in cd_form_w) > 0) THEN
				cd_form_w := replace(cd_form_w, ')', '');
				cd_form_w := replace(cd_form_w, '(', '');
				cd_form_w := replace(cd_form_w, ',', '');
				cd_form_w := initcap(cd_form_w);
				cd_form_w := replace(cd_form_w, ' ', '');
			END IF;

			cd_form_w := substr(cd_form_w, 1, 30);

			IF (cd_form_w IS NOT NULL AND cd_form_w::text <> '') THEN
				SELECT	max(cd_unidade_medida)
				INTO STRICT   	cd_unidade_medida_form_w
				FROM   	imp_unidade_medida
				WHERE  	upper(cd_unidade_medida) = upper(cd_form_w);

				IF (cd_unidade_medida_form_w IS NOT NULL AND cd_unidade_medida_form_w::text <> '') THEN
					cd_form_w := cd_unidade_medida_form_w;
				END IF;

			END IF;

			if (coalesce(r1.FORM,'X') <> 'X') then
				CALL mims_import_unit(cd_form_w,r1.FORM, nm_usuario_w,nr_version_p);
			else
				CALL mims_import_unit(cd_active_units_w,r1.active_units,nm_usuario_w,nr_version_p);
			end if;

			  material_w.cd_material := cd_material_w;
			  material_w.ie_tipo_material := 2;
			  -- COMMERCIAL MEDICINE
			  material_w.ds_material := trim(both substr(ds_drug_name_w, 1, 255));
			  material_w.ds_reduzida := trim(both substr(ds_drug_name_w, 1, 255));
			  material_w.cd_classe_material :=
			  cd_classe_material_w;

			material_w.cd_unidade_medida_compra		:= coalesce(cd_form_w,cd_active_units_w);
			material_w.cd_unidade_medida_estoque 	:= coalesce(cd_form_w,cd_active_units_w);
			material_w.cd_unidade_medida_consumo 	:= coalesce(cd_form_w,cd_active_units_w);
			material_w.cd_unidade_medida_solic 		:= coalesce(cd_form_w,cd_active_units_w);
			material_w.ds_orientacao_usuario 		:= ds_orientacao_usuario_w;
			material_w.ie_via_aplicacao 			:= NULL;
			material_w.qt_conversao_mg 				:= NULL;
			material_w.cd_unid_med_concetracao 		:= NULL;
			material_w.QT_ORIG_MED_TOTAL_CONC := null;
			material_w.CD_ORIG_MED_CONC_UNIT := null;
			material_w.QT_BASE_MED_TOTAL_CONC := null;
			material_w.CD_BASE_MED_CONC_UNIT := null;
			material_w.QT_CONVERSAO_MG := null;
			material_w.CD_UNID_MED_CONCETRACAO := null;
			material_w.CD_UNID_MED_BASE_CONC := null;

			IF	regexp_replace(r1.active, '[^0-9|.]', '') = r1.active THEN
				--tdpaula
			  material_w.qt_conversao_mg 			:= r1.active;
				material_w.cd_unid_med_concetracao 	:= coalesce(cd_form_w, cd_active_units_w);
			END IF;
			
			--SO-2296676 - handling of infusion rates for r1.per_vol_units = mL
			QT_ORIG_MED_TOTAL_CONC_W := 0;
			QT_BASE_MED_TOTAL_CONC_W := 0;
			if ( lower(coalesce(r1.per_vol_units,'XX'))  ='ml' and (r1.active IS NOT NULL AND r1.active::text <> '') and coalesce(r1.per_volume,0) !=0 ) then
				if ( regexp_replace( trim(both r1.active), '[^0-9|.,]', '') = trim(both r1.active)
					and regexp_replace( trim(both r1.per_volume), '[^0-9|.,]', '') = trim(both r1.per_volume) ) then
					
					cd_active_units_ml_w := substr(replace(trim(both r1.active_units),' ',''),1,30);
					CALL mims_import_unit(cd_active_units_ml_w,r1.active_units,nm_usuario_w,nr_version_p);
					
					QT_ORIG_MED_TOTAL_CONC_W := REGEXP_replace(trim(both r1.active), ',', '');
					QT_BASE_MED_TOTAL_CONC_W := REGEXP_replace(trim(both r1.per_volume), ',', '');
				
					material_w.QT_CONVERSAO_MG := round((QT_ORIG_MED_TOTAL_CONC_W/QT_BASE_MED_TOTAL_CONC_W)::numeric,2);
					material_w.CD_UNID_MED_CONCETRACAO := cd_active_units_ml_w;
					
					material_w.QT_ORIG_MED_TOTAL_CONC := QT_ORIG_MED_TOTAL_CONC_W;
					material_w.CD_ORIG_MED_CONC_UNIT := SUBSTR(r1.active_units,1,30);
					material_w.QT_BASE_MED_TOTAL_CONC := QT_BASE_MED_TOTAL_CONC_W;
					material_w.CD_BASE_MED_CONC_UNIT := SUBSTR(lower(r1.PER_VOL_UNITS),1,30);  --unidade_medida has entry for ml, and not for mL
					
					CALL mims_import_unit(SUBSTR(lower(r1.PER_VOL_UNITS),1,30),r1.PER_VOL_UNITS,nm_usuario_w,nr_version_p);
					material_w.CD_UNID_MED_BASE_CONC := SUBSTR(lower(r1.PER_VOL_UNITS),1,30);
					
				end if;
			end if;

			material_w.ie_padronizado 				:= 'S';
			material_w.cd_material_estoque 			:= cd_material_w;
			material_w.ie_material_estoque 			:= 'S';
			material_w.ie_receita 					:= 'N';
			material_w.ie_cobra_paciente 			:= 'S';
			material_w.ie_baixa_inteira 			:= 'S';
			material_w.ie_situacao 					:= 'A';
			material_w.dt_cadastramento 			:= clock_timestamp();
			material_w.dt_atualizacao 				:= clock_timestamp();
			material_w.nm_usuario 					:= nm_usuario_w;
			material_w.nr_minimo_cotacao 			:= 1;
			--material_w.ie_obriga_via_aplicacao    := 'N';
			material_w.ie_disponivel_mercado 		:= 'S';
			material_w.qt_minimo_multiplo_solic 	:= r1.units_per_pack; --- Added the quantity in the pack for Dispensation Rule proposal
			material_w.qt_conv_compra_estoque 		:= 1;
			material_w.ie_prescricao 				:= 'S';
			material_w.qt_conv_estoque_consumo 		:= 1;
			material_w.ie_preco_compra 				:= 'N';
			material_w.ie_material_direto 			:= 'N';
			material_w.ie_consignado 				:= 0;
			material_w.ie_dias_util_medic 			:= 'N';
			material_w.ie_controle_medico 			:= 0;
			material_w.ie_baixa_estoq_pac 			:= 'N';
			material_w.ie_curva_abc 				:= 'S';
			material_w.ie_bomba_infusao 			:= 'N';
			material_w.ie_diluicao 					:= 'N';
			material_w.ie_solucao 					:= 'N';
			material_w.ie_mistura 					:= 'N';
			material_w.ie_abrigo_luz 				:= 'N';
			material_w.ie_umidade_controlada 		:= 'N';
			material_w.ie_gravar_obs_prescr 		:= 'N';
			material_w.nm_usuario_nrec 				:= 'MIMS';
			material_w.ie_inf_ultima_compra 		:= 'S';
			material_w.ie_gerar_lote 				:= 'S';
			material_w.ie_alto_risco 				:= 'N';
			--material_w.nr_sequencia 				:= imp_material_seq.nextval;
			material_w.nr_seq_mims_version 			:= nr_mims_version;
			--material_w.ie_gerar_lote_separado    	:= 'N';
			material_w.cd_sistema_ant 				:= r1.prodcode||'.'||r1.formcode||'.'||r1.packcode;

			FOR r3 IN c03(r1.prodcode, r1.formcode, r1.packcode) LOOP
				-- ROUTE ADMINISTRATION
				BEGIN
				IF (r3.ie_via_aplicacao IS NOT NULL AND r3.ie_via_aplicacao::text <> '') THEN
					CALL mims_imp_via_adm(r3.ie_via_aplicacao,r3.routedes,nm_usuario_w,nr_version_p);

					material_w.ie_via_aplicacao 	:= r3.ie_via_aplicacao;
				END IF;

				END;
			END LOOP;

       BEGIN 
          SELECT max(a.cd_material) into STRICT cd_tasy_material_w
          FROM   material a
          WHERE
            a.cd_sistema_ant = material_w.cd_sistema_ant;
      EXCEPTION 
				WHEN	no_data_found 
				THEN	cd_tasy_material_w := NULL;
					
			END;

			INSERT INTO imp_material VALUES (material_w.*);

			mims_mat_tasy_mat_w.prodcode		:= r1.prodcode;
			mims_mat_tasy_mat_w.formcode 		:= r1.formcode;
			mims_mat_tasy_mat_w.packcode 		:= r1.packcode;
			mims_mat_tasy_mat_w.cd_imp_material := cd_material_w;
      mims_mat_tasy_mat_w.NR_SEQ_MIMS_VERSION := nr_version_p;
      mims_mat_tasy_mat_w.CD_MATERIAL_TASY := cd_tasy_material_w;
			INSERT INTO mims_material_tasy VALUES (mims_mat_tasy_mat_w.*);
			
			/*Insert into IMP_MATERIAL_PBS */

			begin
				CALL mims_imp_mat_pbs_insert(material_w.cd_material, material_w.cd_sistema_ant, nr_version_p, nm_usuario_w, cd_estabelecimento_p);
			exception when others then
				null;
			end;

			SELECT	nextval('imp_material_estab_seq')
			INTO STRICT   	nr_seq_mat_estab_w
			;

			IF (coalesce(cd_active_units_w, 'X') <> 'X') AND (regexp_replace(r1.active, '[^0-9|.]', '') = r1.active) THEN
				--tdpaula
     			 CALL mims_imp_mat_conv_unit(cd_material_w,cd_active_units_w,r1.active_units,r1.active,1,nm_usuario_w,nr_version_p);
			END IF;

			begin
			IF (coalesce(cd_per_vol_units_w, 'X') <> 'X' ) THEN
       			CALL mims_imp_mat_conv_unit(cd_material_w,cd_per_vol_units_w,r1.per_vol_units,r1.per_volume,2,nm_usuario_w,nr_version_p);
			END IF;

		--	exception when others then

		--	commit;
			end;

			material_estab_w.nr_sequencia			:= nr_seq_mat_estab_w;
			material_estab_w.cd_estabelecimento 	:= cd_estabelecimento_p;
			material_estab_w.cd_material 			:= cd_material_w;
			material_estab_w.dt_atualizacao 		:= clock_timestamp();
			material_estab_w.nm_usuario 			:= nm_usuario_w;
			material_estab_w.ie_baixa_estoq_pac 	:= 'N';
			material_estab_w.ie_material_estoque 	:= 'N';
			material_estab_w.qt_estoque_minimo 		:= 1;
			material_estab_w.qt_ponto_pedido 		:= 1;
			material_estab_w.qt_estoque_maximo 		:= 999;
			material_estab_w.nr_minimo_cotacao 		:= 1;
			material_estab_w.ie_ressuprimento 		:= 'N';
			material_estab_w.nm_usuario_nrec 		:= nm_usuario_w;
			material_estab_w.ie_classif_custo		:= 'B';
			material_estab_w.ie_prescricao 			:= 'S';
			material_estab_w.ie_padronizado 		:= 'S';
			material_estab_w.ie_estoque_lote 		:= 'N';
			material_estab_w.ie_requisicao 			:= 'N';
			material_estab_w.ie_controla_serie 		:= 'N';
			material_estab_w.ie_unid_consumo_prescr := 'S';

			INSERT INTO imp_material_estab VALUES (material_estab_w.*);

			SELECT	nextval('imp_material_reacao_seq')
			INTO STRICT   	nr_seq_mat_reacao_w
			;

			IF (coalesce(ds_ci_w, 'X') <> 'X') THEN
				ds_reacao_w := substr('Contraindications: '
								  || ds_ci_w
								  || chr(13)
								  || chr(10),1,4000);
			END IF;

			IF (coalesce(ds_ar_w, 'X') <> 'X') THEN
				ds_reacao_w := substr(ds_reacao_w
								  || 'Adverse reactions: '
								  || ds_ar_w, 1, 4000);
			END IF;

			material_reacao_w.cd_material 			:= cd_material_w;
			material_reacao_w.ds_reacao 			:= ds_reacao_w;
			material_reacao_w.dt_atualizacao 		:= clock_timestamp();
			material_reacao_w.dt_atualizacao_nrec 	:= clock_timestamp();
			material_reacao_w.nm_usuario 			:= nm_usuario_w;
			material_reacao_w.nm_usuario_nrec 		:= nm_usuario_w;
			material_reacao_w.nr_sequencia 			:= nr_seq_mat_reacao_w;

			INSERT INTO imp_material_reacao VALUES (material_reacao_w.*);

			FOR r3 IN c03(r1.prodcode, r1.formcode, r1.packcode) LOOP
				-- ROUTE ADMINISTRATION
				BEGIN

				IF (r3.ie_via_aplicacao IS NOT NULL AND r3.ie_via_aplicacao::text <> '') THEN
					CALL mims_imp_via_adm_mat(cd_material_w,r3.ie_via_aplicacao,r3.routedes,nm_usuario_w,nr_version_p);
				END IF;

				END;
			END LOOP; -- r3 ROUTE ADMINISTRATION
			SELECT	max(qld)
			INTO STRICT   	ds_qld_w
			FROM   	ppsdat
			WHERE  	prodcode = r1.prodcode
			AND 	formcode = r1.formcode
			AND 	packcode = r1.packcode;

			IF (coalesce(ds_qld_w, 'X') <> 'X') THEN
				CALL mims_imp_contro_med(cd_material_w,ds_qld_w,nm_usuario_w,nr_version_p);
			END IF;

			/*UPDATE	imp_material
			SET    	cd_material_generico = cd_mat_gen_tasy_w
			WHERE  	cd_material = cd_material_w;*/
			END;
			if (mod(c01%rowcount,20)=0)then
				commit;
			end if;
		END LOOP; -- r1 MATERIAL
		END; -- r98 CLASSE_MATERIAL
	END LOOP;
	END; -- r99 SUBGRUPO_MATERIAL
END LOOP;
CALL gravar_processo_longo('', '', 0);
COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE insert_material_mims (cd_estabelecimento_p bigint, nr_version_p bigint, nm_usuario_p text) FROM PUBLIC;

