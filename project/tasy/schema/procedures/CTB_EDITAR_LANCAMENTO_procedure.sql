-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_editar_lancamento ( nr_sequencia_p bigint, nr_lote_contabil_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
 
 
nr_seq_agrupamento_w		ctb_movimento.nr_seq_agrupamento%type;
dt_movimento_w				timestamp;
nr_lancamento_w				ctb_movimento.nr_agrup_sequencial%type;
nr_seq_dados_lcmt_w			w_ctb_dados_lancamento.nr_sequencia%type;
vl_debito_w					ctb_movimento.vl_movimento%type;
vl_credito_w				ctb_movimento.vl_movimento%type;
nr_seq_lancamento_w			bigint;
qt_lancamento_w				bigint;

 
c_lancamentos CURSOR FOR 
	SELECT	nr_agrup_sequencial, 
			cd_estabelecimento, 
			nr_sequencia, 
			cd_conta_debito, 
			cd_conta_credito, 
			vl_movimento, 
			nr_seq_agrupamento, 
			cd_historico, 
			ds_compl_historico, 
			ds_observacao, 
			ds_consistencia, 
			nr_seq_mes_ref, 
			cd_classif_credito, 
			cd_classif_debito, 
			ie_status_concil, 
			ie_status_origem, 
			nr_documento, 
			nr_seq_movto_partida, 
			nr_seq_reg_concil, 
			nr_seq_regra_lanc, 
			dt_movimento, 
			ie_revisado 
	from	ctb_movimento 
	where	nr_agrup_sequencial = nr_lancamento_w 
	and		nr_lote_contabil  = nr_lote_contabil_p;

Vet01	c_lancamentos%RowType;

c_centro_resultado CURSOR FOR 
	SELECT	cd_centro_custo, 
			vl_movimento, 
			pr_rateio, 
			nr_sequencia 
	from	ctb_movto_centro_custo 
	where	nr_seq_movimento = vet01.nr_sequencia;

vet02  c_centro_resultado%rowtype;


BEGIN 
 
select nr_seq_agrupamento, 
		dt_movimento, 
		(nr_agrup_sequencial) 
into STRICT	nr_seq_agrupamento_w, 
		dt_movimento_w, 
		nr_lancamento_w 
from	ctb_movimento 
where	nr_sequencia 	 = nr_sequencia_p 
and		nr_lote_contabil = nr_lote_contabil_p;
 
if (coalesce(nr_lancamento_w,0) = 0) then 
	select ctb_obter_lancamento_contabil(nr_lote_contabil_p) 
	into STRICT  nr_lancamento_w 
	;
end if;
 
select sum(CASE WHEN coalesce(cd_conta_debito::text, '') = '' THEN  0  ELSE vl_movimento END ) vl_debito, 
    sum(CASE WHEN coalesce(cd_conta_credito::text, '') = '' THEN  0  ELSE vl_movimento END ) vl_credito 
into STRICT	vl_debito_w, 
		vl_credito_w 
from  ctb_movimento 
where	nr_agrup_sequencial = nr_lancamento_w 
and		nr_lote_contabil 	= nr_lote_contabil_p;
 
select count(*) 
into STRICT	qt_lancamento_w 
from	w_ctb_dados_lancamento 
where	nr_lote_contabil = nr_lote_contabil_p 
and		nr_lancamento	=	nr_lancamento_w;
 
 
if (qt_lancamento_w = 0)then 
	insert into w_ctb_dados_lancamento(dt_abertura, 
												dt_atualizacao, 
												dt_atualizacao_nrec, 
												dt_fechamento, 
												dt_lancamento, 
												nm_usuario, 
												nm_usuario_nrec, 
												nr_lancamento, 
												nr_lote_contabil, 
												nr_seq_agrupamento, 
												nr_sequencia, 
												vl_credito, 
												vl_debito, 
												ie_operacao) 
										values (clock_timestamp(), 
												clock_timestamp(), 
												clock_timestamp(), 
												clock_timestamp(), 
												dt_movimento_w, 
												nm_usuario_p, 
												nm_usuario_p, 
												nr_lancamento_w, 
												nr_lote_contabil_p, 
												nr_seq_agrupamento_w, 
												nextval('w_ctb_dados_lancamento_seq'), 
												vl_credito_w, 
												vl_debito_w, 
												'E');
 
	commit;
 
	select max(nr_sequencia) 
	into STRICT	nr_seq_dados_lcmt_w 
	from	w_ctb_dados_lancamento 
	where	nr_lote_contabil = nr_lote_contabil_p;
 
	open c_lancamentos;
	loop 
	fetch c_lancamentos into 
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on c_lancamentos */
		begin 
		 
 
		insert into w_ctb_lancamento(nr_sequencia, 
											nr_agrup_sequencial, 
											cd_estabelecimento, 
											cd_conta_debito, 
											cd_conta_credito, 
											vl_movimento, 
											nr_seq_agrupamento, 
											cd_historico, 
											ds_compl_historico, 
											ds_observacao, 
											ds_consistencia, 
											nr_seq_mes_ref, 
											cd_classif_credito, 
											cd_classif_debito, 
											ie_status_concil, 
											ie_status_origem, 
											nr_documento, 
											nr_seq_movto_partida, 
											nr_seq_reg_concil, 
											nr_seq_regra_lanc, 
											nr_seq_movto_corresp, 
											nm_usuario, 
											dt_atualizacao, 
											dt_movimento, 
											nr_lote_contabil, 
											ie_revisado, 
											nr_seq_lancamento) 
									values (nextval('w_ctb_lancamento_seq'), 
											vet01.nr_agrup_sequencial, 
											vet01.cd_estabelecimento, 
											vet01.cd_conta_debito, 
											vet01.cd_conta_credito, 
											vet01.vl_movimento, 
											vet01.nr_seq_agrupamento, 
											vet01.cd_historico, 
											vet01.ds_compl_historico, 
											vet01.ds_observacao, 
											vet01.ds_consistencia, 
											vet01.nr_seq_mes_ref, 
											vet01.cd_classif_credito, 
											vet01.cd_classif_debito, 
											vet01.ie_status_concil, 
											'UA', 
											vet01.nr_documento, 
											vet01.nr_seq_movto_partida, 
											vet01.nr_seq_reg_concil, 
											vet01.nr_seq_regra_lanc, 
											vet01.nr_sequencia, 
											nm_usuario_p, 
											clock_timestamp(), 
											vet01.dt_movimento, 
											nr_lote_contabil_p, 
											vet01.ie_revisado, 
											nr_seq_dados_lcmt_w);
 
 
		open c_centro_resultado;
		loop 
		fetch c_centro_resultado into 
			vet02;
		EXIT WHEN NOT FOUND; /* apply on c_centro_resultado */
			begin 
 
			select	max(nr_sequencia) 
			into STRICT	nr_seq_lancamento_w 
			from	w_ctb_lancamento 
			where	nr_lote_contabil = nr_lote_contabil_p;
 
			insert into w_ctb_movto_centro_lcmt( 
				vl_movimento, 
				pr_rateio, 
				nr_sequencia, 
				nr_seq_movimento, 
				nm_usuario, 
				dt_atualizacao, 
				cd_centro_custo, 
				nr_seq_movto_corresp, 
				ie_status_origem) 
			values (	vet02.vl_movimento, 
				vet02.pr_rateio, 
				nextval('w_ctb_movto_centro_lcmt_seq'), 
				nr_seq_lancamento_w, 
				nm_usuario_p, 
				clock_timestamp(), 
				vet02.cd_centro_custo, 
				vet02.nr_sequencia, 
				'UA');
 
 
 
			end;
		end loop;
		close c_centro_resultado;
 
		end;
	end loop;
	close c_lancamentos;
 
	commit;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_editar_lancamento ( nr_sequencia_p bigint, nr_lote_contabil_p bigint, nm_usuario_p text) FROM PUBLIC;

