-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_fluxo_item_drilldown (dt_referencia_p timestamp, ie_restringe_estab_p text, ie_classif_fluxo_p text, ie_periodo_p text, ie_integracao_p text, cd_conta_financ_p bigint, cd_empresa_p bigint, dt_inicial_p timestamp, ie_regra_atraso_p text, ie_tit_rec_p text, ie_tit_pagar_p text, ie_cheque_p text, ie_cartao_p text, ie_protocolo_p text, ie_ordem_compra_p text, ie_contrato_p text, ie_fluxo_especial_p text, ie_pagto_bordero_p text, qtd_dias_fluxo_oc_p bigint, ie_pagto_escrit_p text, cd_moeda_estrang_p bigint default null) AS $body$
DECLARE

									

	
ie_cartao_cr_real_w		parametro_fluxo_caixa.ie_cartao_cr_real%type;
ie_tit_pagar_transf_w		parametro_fluxo_caixa.ie_tit_pagar_transf%type;
ie_classif_baixa_cp_w		parametro_fluxo_caixa.ie_classif_baixa_cp%type;
cd_conta_financ_cpa_w		parametro_fluxo_caixa.cd_conta_financ_cpa%type;
cd_conta_financ_cre_w		parametro_fluxo_caixa.cd_conta_financ_cre%type;
ie_protocolo_conv_w		parametro_fluxo_caixa.ie_protocolo_conv%type;
ie_adiant_receb_w		parametro_fluxo_caixa.ie_adiant_receb%type;
ie_adiant_pago_w		parametro_fluxo_caixa.ie_adiant_pago%type;
ie_convenio_receb_w		parametro_fluxo_caixa.ie_convenio_receb%type;
ie_fim_semana_passado_w		parametro_fluxo_caixa.ie_fim_semana_passado%type;
ie_tratar_fim_semana_w	parametro_fluxo_caixa.ie_tratar_fim_semana%type;
ie_tit_rec_fluxo_w		parametro_fluxo_caixa.ie_tit_rec_fluxo%type;
ie_tit_pag_fluxo_w		parametro_fluxo_caixa.ie_tit_pag_fluxo%type;
ie_tit_rec_canc_w		parametro_fluxo_caixa.ie_tit_rec_canc%type;
ie_oc_parcial_w			parametro_fluxo_caixa.ie_oc_parcial%type;
ie_oc_aprovada_w		parametro_fluxo_caixa.ie_oc_aprovada%type;
ie_cheque_pago_pend_w		parametro_fluxo_caixa.ie_cheque_pago_pend%type;
ie_cheque_cp_mes_w		parametro_fluxo_caixa.ie_cheque_cp_mes%type;
ie_data_tit_adiant_w		parametro_fluxo_caixa.ie_data_tit_adiant%type;
ie_movto_bco_pend_w		parametro_fluxo_caixa.ie_movto_bco_pend%type;
ie_deposito_fluxo_real_w	parametro_fluxo_caixa.ie_deposito_fluxo_real%type;
ie_forma_calculo_contrato_w	parametro_fluxo_caixa.ie_forma_calculo_contrato%type;
ie_fluxo_externo_w		parametro_fluxo_caixa.ie_fluxo_externo%type;
ie_data_tit_adiant_rec_w	parametro_fluxo_caixa.ie_data_tit_adiant_rec%type;
ie_trans_fin_conta_w		parametro_fluxo_caixa.ie_trans_fin_conta%type;
ie_calc_fluxo_oc_w		parametro_fluxo_caixa.ie_calc_fluxo_oc%type;
ie_acumular_vencidos_w		parametro_fluxo_caixa.ie_acumular_vencidos%type;
ie_conta_finan_trans_w		parametro_fluxo_caixa.ie_conta_finan_trans%type;
ie_titulo_caixa_w		parametro_fluxo_caixa.ie_titulo_caixa%type;
ie_tit_pagar_desdob_w		parametro_fluxo_caixa.ie_tit_pagar_desdob%type;
ie_dt_credito_banco_cre_w	parametro_fluxo_caixa.ie_dt_credito_banco_cre%type;
cd_moeda_empresa_w		empresa.cd_moeda_ref%type;
cd_moeda_cr_w			bigint;
cd_moeda_cp_w			bigint;
ie_drilldown_gerado_w		varchar(1);
IE_SOMENTE_FUTURO_W	varchar(02);
dt_inicio_w			timestamp;
	
c01 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			0 nr_titulo,
			b.vl_conta vl_titulo,
			substr(WHEB_MENSAGEM_PCK.get_texto(799411) || a.nr_protocolo || ' - ' || c.ds_convenio, 1, 100) ds_pessoa,
			'' ie_tipo_titulo,
			0 cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			0 ie_union,
			substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			'' ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		from convenio c,
			conta_paciente b,
			protocolo_convenio a
		where a.nr_seq_protocolo = b.nr_seq_protocolo
			and a.cd_convenio = c.cd_convenio
			and (
				('S' = ie_protocolo_conv_w AND a.ie_status_protocolo = 1)
				or (
					('A' = ie_protocolo_conv_w)
					and (a.ie_status_protocolo in (1, 3))
					)
				)
			--and trunc(a.dt_vencimento, 'dd') = dt_referencia_p
			and	trunc(a.dt_vencimento, 'dd')	between	dt_inicio_w and dt_referencia_p
			and obter_conta_financ_protocolo('E', a.cd_estabelecimento, a.cd_convenio) = (cd_conta_financ_p)::numeric 
			and (
				a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or ie_restringe_estab_p = 'N'
				)
			and obter_empresa_estab(a.cd_estabelecimento) = cd_empresa_p
			and coalesce(b.ie_cancelamento::text, '') = ''			
			and cd_moeda_empresa_w = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w)
			and not exists (
				select 1
				from titulo_receber x
				where x.nr_seq_protocolo = a.nr_seq_protocolo
					or x.nr_interno_conta = b.nr_interno_conta
				)
			and 'S' = ie_protocolo_p
			--and ie_protocolo_conv_w = 'S'
			and ie_classif_fluxo_p = 'R'
			and ie_periodo_p = 'D'
			and ie_integracao_p = 'PC'
		) alias22
	order by 1;
	
c02 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			0 nr_titulo,
			b.vl_conta vl_titulo,
			substr(WHEB_MENSAGEM_PCK.get_texto(799411) || a.nr_protocolo || ' - ' || c.ds_convenio, 1, 100) ds_pessoa,
			'' ie_tipo_titulo,
			0 cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			1 ie_union,
			substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			'' ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		from convenio c,
			conta_paciente b,
			protocolo_convenio a
		where a.nr_seq_protocolo = b.nr_seq_protocolo
			and a.cd_convenio = c.cd_convenio
			and (
				('S' = ie_protocolo_conv_w AND a.ie_status_protocolo = 1)
				or (
					('A' = ie_protocolo_conv_w)
					and (a.ie_status_protocolo in (1, 3))
					)
				)
			and trunc(a.dt_vencimento, 'month') = trunc(to_date(dt_referencia_p), 'month')
			and obter_conta_financ_protocolo('E', a.cd_estabelecimento, a.cd_convenio) = (cd_conta_financ_p)::numeric
			and (
				a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or ie_restringe_estab_p = 'N'
				)
			and obter_empresa_estab(a.cd_estabelecimento) = cd_empresa_p
			and coalesce(b.ie_cancelamento::text, '') = ''
			and cd_moeda_empresa_w = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w)
			and not exists (
				select 1
				from titulo_receber x
				where x.nr_seq_protocolo = a.nr_seq_protocolo
					or x.nr_interno_conta = b.nr_interno_conta
				)
			and 'S' = ie_protocolo_p
			and ie_classif_fluxo_p = 'R'
			and 'M' = ie_periodo_p
			and ie_integracao_p = 'PC'
		) alias24
	order by 1;
	
c03 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			0 nr_titulo,
			Obter_valor_fluxo_regra(wheb_usuario_pck.get_cd_estabelecimento, nr_sequencia, dt_referencia_p, null, cd_empresa_p) vl_titulo,
			substr(ds_titulo, 1, 60) ds_pessoa,
			'' ie_tipo_titulo,
			0 cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			2 ie_union,
			substr(obter_nome_estabelecimento(cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			'' ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		from regra_fluxo_caixa
		where cd_conta_financ = cd_conta_financ_p
			and ie_integracao_p = 'RE'
			and (
				cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				)
			and obter_empresa_estab(cd_estabelecimento) = cd_empresa_p
			and ie_classif_fluxo_p = 'R'
			and 'D' = ie_periodo_p
			and cd_moeda_empresa_w = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w)
			and Obter_valor_fluxo_regra(wheb_usuario_pck.get_cd_estabelecimento, nr_sequencia, dt_referencia_p, null, cd_empresa_p) > 0
			and 'S' = ie_fluxo_especial_p
			and 'N' = Obter_se_media_regra(cd_conta_financ_p)
		) alias13
	order by 1;

c04 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			0 nr_titulo,
			Obter_valor_fluxo_regra(wheb_usuario_pck.get_cd_estabelecimento, nr_sequencia, trunc(to_date(dt_referencia_p), 'month'), last_day(to_date(dt_referencia_p)), cd_empresa_p) vl_titulo,
			substr(ds_titulo, 1, 60) ds_pessoa,
			'' ie_tipo_titulo,
			0 cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			3 ie_union,
			substr(obter_nome_estabelecimento(cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			'' ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		from regra_fluxo_caixa
		where cd_conta_financ = cd_conta_financ_p
			and ie_integracao_p = 'RE'
			and (
				cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				)
			and obter_empresa_estab(cd_estabelecimento) = cd_empresa_p
			and ie_classif_fluxo_p = 'R'
			and 'M' = ie_periodo_p
			and cd_moeda_empresa_w = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w)
			and Obter_valor_fluxo_regra(wheb_usuario_pck.get_cd_estabelecimento, nr_sequencia, trunc(to_date(dt_referencia_p), 'month'), last_day(to_date(dt_referencia_p)), cd_empresa_p) > 0
			and 'S' = ie_fluxo_especial_p
			and 'N' = Obter_se_media_regra(cd_conta_financ_p)
		) alias21
	order by 1;

c05 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			0 nr_titulo,
			dividir_sem_round(coalesce(d.vl_classificacao, b.vl_transacao), b.vl_transacao) * CASE WHEN ie_cartao_cr_real_w='P' THEN  a.vl_parcela  ELSE a.vl_liquido END  vl_titulo,
			substr(obter_nome_pf_pj(b.cd_pessoa_fisica, b.cd_cgc), 1, 100) ds_pessoa,
			'' ie_tipo_titulo,
			coalesce(d.cd_conta_financ, obter_conta_financ_cartao_cr(a.nr_seq_movto)) cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			4 ie_union,
			substr(obter_nome_estabelecimento(b.cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			b.nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			substr(b.ds_observacao, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		FROM parametro_fluxo_caixa c, movto_cartao_cr_parcela a, movto_cartao_cr b
LEFT OUTER JOIN movto_cartao_cr_classif d ON (b.nr_sequencia = d.nr_seq_movto)
WHERE c.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento and a.nr_seq_movto = b.nr_sequencia  and a.vl_saldo_liquido > 0 and (b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') and coalesce(b.dt_cancelamento::text, '') = '' and cd_moeda_empresa_w = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
				obter_se_conta_financ_estab(coalesce(d.cd_conta_financ, obter_conta_financ_cartao_cr(a.nr_seq_movto)), wheb_usuario_pck.get_cd_estabelecimento, ie_restringe_estab_p) = 'S'
				or ie_restringe_estab_p = 'N'
				) and (
				b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or ie_restringe_estab_p = 'N'
				) and obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_p and coalesce(d.cd_conta_financ, obter_conta_financ_cartao_cr(a.nr_seq_movto)) = (cd_conta_financ_p)::numeric and (
				(
					'D' = ie_periodo_p
					and (
						(trunc(CASE WHEN c.IE_TRATAR_FIM_SEMANA='N' THEN  a.dt_parcela  ELSE obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, a.dt_parcela) END , 'dd') = dt_referencia_p)
						or (
							ie_acumular_vencidos_w = 'S'
							and trunc(to_date(dt_referencia_p), 'dd') = trunc(to_date(dt_inicio_w, 'dd/mm/yyyy'), 'dd')
							and trunc(CASE WHEN c.IE_TRATAR_FIM_SEMANA='N' THEN  a.dt_parcela  ELSE obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, a.dt_parcela) END , 'dd') < to_date(dt_inicio_w, 'dd/mm/yyyy')
							)
						)
					)
				or (
					'M' = ie_periodo_p
					and trunc(CASE WHEN c.IE_TRATAR_FIM_SEMANA='N' THEN  a.dt_parcela  ELSE obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, a.dt_parcela) END , 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				) and 'CR' = ie_integracao_p and coalesce(b.ie_lib_caixa, 'S') = 'S' and ie_classif_fluxo_p = 'R' and 'S' = ie_cartao_p
		 ) alias45
	order by 1;

c06 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			/* Cheque Pre */

			0 nr_titulo,
			CASE WHEN obter_se_moeda_estrang(cd_moeda_estrang_p,cd_moeda_empresa_w)='S' THEN dividir_sem_round(coalesce(d.vl_classificacao, a.vl_cheque), a.vl_cheque) * coalesce(a.vl_cheque_estrang, 0)  ELSE coalesce(d.vl_classificacao, a.vl_cheque) END  vl_titulo,
			substr(obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc), 1, 100) ds_pessoa,
			'' ie_tipo_titulo,
			coalesce(d.cd_conta_pre, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 1, ie_restringe_estab_p)) cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			5 ie_union,
			substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
			a.nr_cheque,
			'' nr_autorizacao,
			a.cd_moeda cd_moeda,
			(cd_moeda_cr_w)::numeric  cd_moeda_padrao,
			substr(a.ds_observacao, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		FROM parametro_fluxo_caixa b, cheque_cr a
LEFT OUTER JOIN motivo_dev_cheque c ON (a.nr_seq_motivo_dev = c.nr_sequencia)
LEFT OUTER JOIN cheque_cr_classif d ON (a.nr_seq_cheque = d.nr_seq_cheque)
WHERE b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento and obter_se_filtro_fluxo(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, wheb_usuario_pck.get_nm_usuario, null) = 'S' and coalesce(d.cd_conta_pre, obter_conta_fin_cheque_estab(a.nr_seq_cheque, 1, ie_restringe_estab_p)) = cd_conta_financ_p and coalesce(a.dt_compensacao::text, '') = '' and coalesce(a.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
				obter_status_cheque(a.nr_seq_cheque) in (1, 3)
				or (
					obter_status_cheque(a.nr_seq_cheque) = 5
					and coalesce(c.ie_tipo_devolucao, 'N') = 'B'
					)
				or (
					'S' = ie_deposito_fluxo_real_w
					and obter_status_cheque(a.nr_seq_cheque) = 2
					)
				)   and (
				a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				) and obter_empresa_estab(a.cd_estabelecimento) = cd_empresa_p and (
				trunc(coalesce(a.dt_vencimento_atual, a.dt_vencimento), 'dd') <> trunc(a.dt_contabil, 'dd')
				or b.ie_cheque_avista_real = 'S'
				) and (coalesce(a.dt_vencimento_atual, a.dt_vencimento) IS NOT NULL AND (coalesce(a.dt_vencimento_atual, a.dt_vencimento))::text <> '') and (
				(
					'D' = ie_periodo_p
					and (
						(trunc(CASE WHEN b.IE_TRATAR_FIM_SEMANA='N' THEN  coalesce(coalesce(a.dt_prev_terc_desbloqueio, coalesce(a.dt_prev_seg_desbloqueio, a.dt_prev_desbloqueio)), coalesce(a.dt_vencimento_atual, a.dt_vencimento))  ELSE obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, coalesce(coalesce(a.dt_prev_terc_desbloqueio, coalesce(a.dt_prev_seg_desbloqueio, a.dt_prev_desbloqueio)), coalesce(a.dt_vencimento_atual, a.dt_vencimento))) END , 'dd') = dt_referencia_p)
						or (
							ie_acumular_vencidos_w = 'S'
							and trunc(to_date(dt_referencia_p), 'dd') = trunc(to_date(dt_inicio_w, 'dd/mm/yyyy'), 'dd')
							and trunc(CASE WHEN b.IE_TRATAR_FIM_SEMANA='N' THEN  coalesce(coalesce(a.dt_prev_terc_desbloqueio, coalesce(a.dt_prev_seg_desbloqueio, a.dt_prev_desbloqueio)), coalesce(a.dt_vencimento_atual, a.dt_vencimento))  ELSE obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, coalesce(coalesce(a.dt_prev_terc_desbloqueio, coalesce(a.dt_prev_seg_desbloqueio, a.dt_prev_desbloqueio)), coalesce(a.dt_vencimento_atual, a.dt_vencimento))) END , 'dd') < to_date(dt_inicio_w, 'dd/mm/yyyy')
							)
						)
					)
				or (
					'M' = ie_periodo_p
					and trunc(CASE WHEN b.IE_TRATAR_FIM_SEMANA='N' THEN  coalesce(coalesce(a.dt_prev_terc_desbloqueio, coalesce(a.dt_prev_seg_desbloqueio, a.dt_prev_desbloqueio)), coalesce(a.dt_vencimento_atual, a.dt_vencimento))  ELSE obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, coalesce(coalesce(a.dt_prev_terc_desbloqueio, coalesce(a.dt_prev_seg_desbloqueio, a.dt_prev_desbloqueio)), coalesce(a.dt_vencimento_atual, a.dt_vencimento))) END , 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				) and 'CR' = ie_integracao_p and ie_classif_fluxo_p = 'R' and 'S' = ie_cheque_p
		 ) alias84
	order by 1;

c07 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE VL_TITULO_ESTRANG END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT /*+ index (b TITPAGA_I2) */			0 nr_ordem_compra,
			b.nr_titulo,
			/* Fluxo a realizar */

			CASE WHEN ie_tit_pag_fluxo_w='T' THEN					sum((dividir_sem_round(coalesce(a.vl_titulo, (obter_dados_tit_pagar(b.nr_titulo, 'VT'))::numeric ) + (							dividir_sem_round((b.vl_saldo_juros + b.vl_saldo_multa), /* juros e multa  */
								(obter_dados_tit_pagar(b.nr_titulo, 'VT'))::numeric ) * coalesce(a.vl_titulo, (obter_dados_tit_pagar(b.nr_titulo, 'VT'))::numeric )							) /* juros e multa  */
						, (obter_dados_tit_pagar(b.nr_titulo, 'VT'))::numeric )					) * Obter_Saldo_Titulo_pagar(b.nr_titulo, trunc(clock_timestamp(), 'dd'))) WHEN ie_tit_pag_fluxo_w='L' THEN 					sum((dividir_sem_round(coalesce(a.vl_titulo, (obter_dados_tit_pagar(b.nr_titulo, 'VT'))::numeric ) + (							dividir_sem_round((b.vl_saldo_juros + b.vl_saldo_multa), /* juros e multa  */
								(obter_dados_tit_pagar(b.nr_titulo, 'VT'))::numeric ) * coalesce(a.vl_titulo, (obter_dados_tit_pagar(b.nr_titulo, 'VT'))::numeric )							) /* juros e multa  */
						, (obter_dados_tit_pagar(b.nr_titulo, 'VT'))::numeric )					) * b.vl_saldo_titulo) END  vl_titulo,
			coalesce(CASE WHEN ie_tit_pag_fluxo_w='T' THEN  sum(coalesce(Obter_Valor_Moeda_strang(wheb_usuario_pck.get_cd_estabelecimento, coalesce(b.VL_TITULO_ESTRANG,0), b.cd_moeda, dt_referencia_p),0) + coalesce(b.vl_saldo_juros,0) + coalesce(b.vl_saldo_multa,0)) WHEN ie_tit_pag_fluxo_w='L' THEN sum(coalesce(Obter_Valor_Moeda_strang(wheb_usuario_pck.get_cd_estabelecimento, coalesce(b.VL_TITULO_ESTRANG,0), b.cd_moeda, dt_referencia_p),0)) END ,0) VL_TITULO_ESTRANG,																																																																																														
			substr(obter_nome_pf_pj(b.cd_pessoa_fisica, b.cd_cgc), 1, 60) ds_pessoa,
			'CP' ie_tipo_titulo,
			0 cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			6 ie_union,
			substr(obter_nome_estabelecimento(b.cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			b.cd_moeda cd_moeda,
			(cd_moeda_cp_w)::numeric  cd_moeda_padrao,
			substr(b.ds_observacao_titulo, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			substr(obter_dados_nota_fiscal(b.nr_seq_nota_fiscal, '0'), 1, 255) nr_nota_fiscal,
			'' ds_conta_baixa
		FROM titulo_pagar b
LEFT OUTER JOIN titulo_pagar_classif a ON (b.nr_titulo = a.nr_titulo)
WHERE coalesce(a.nr_seq_conta_financ, cd_conta_financ_cpa_w) = cd_conta_financ_p and obter_se_filtro_fluxo(null, null, null, wheb_usuario_pck.get_nm_usuario, null) = 'S'  and b.ie_situacao = 'A' and cd_moeda_empresa_w = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
				(
					'D' = ie_periodo_p
					and (
						(obter_venc_titulo(b.nr_titulo, null) = dt_referencia_p)
						or (
							ie_acumular_vencidos_w = 'S'
							and trunc(dt_referencia_p, 'dd') = trunc(dt_inicio_w, 'dd')
							and obter_venc_titulo(b.nr_titulo, null) < dt_inicio_w
							)
						)
					)
				or (
					'M' = ie_periodo_p
					and trunc(obter_venc_titulo(b.nr_titulo, null), 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				) and ie_integracao_p = 'CP' and (
				((
						b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
						or cd_estab_financeiro = wheb_usuario_pck.get_cd_estabelecimento
						) AND 'S' = ie_restringe_estab_p)
				or (b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento AND 'E' = ie_restringe_estab_p)
				or ('N' = ie_restringe_estab_p)
				) and b.dt_vencimento_atual between CASE WHEN ie_acumular_vencidos_w='S' THEN  b.dt_vencimento_atual  ELSE fim_dia(dt_referencia_p) - 40 END and CASE WHEN ie_acumular_vencidos_w='S' THEN  b.dt_vencimento_atual  ELSE fim_dia(dt_referencia_p) END /* nao tirar, problema de performance */
  and ie_classif_fluxo_p = 'R' and 'S' = ie_tit_pagar_p and obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_p and coalesce(b.nr_titulo_transf::text, '') = '' and (
				not exists (
					select 1
					from ordem_compra y,
						nota_fiscal x
					where coalesce(y.dt_baixa::text, '') = ''
						and x.nr_ordem_compra = y.nr_ordem_compra
						and x.nr_sequencia = b.nr_seq_nota_fiscal
					)
				or 'S' = ie_oc_parcial_w
				) group by b.nr_titulo,
			substr(obter_nome_pf_pj(b.cd_pessoa_fisica, b.cd_cgc), 1, 60),
			substr(obter_nome_estabelecimento(b.cd_estabelecimento), 1, 255),
			b.cd_moeda,
			substr(b.ds_observacao_titulo, 1, 255),
			substr(obter_dados_nota_fiscal(b.nr_seq_nota_fiscal, '0'), 1, 255)
		) alias93
	order by 1;

c08 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			nr_titulo,
			sum(CASE WHEN ie_tit_rec_fluxo_w='T' THEN  CASE WHEN coalesce(vl_classificacao::text, '') = '' THEN  vl_saldo_titulo - vl_recurso  ELSE vl_classificacao * dividir_sem_round(vl_saldo_titulo - vl_recurso, vl_bruto) END  WHEN ie_tit_rec_fluxo_w='L' THEN  CASE WHEN coalesce(vl_classificacao::text, '') = '' THEN  PERFORM dividir_sem_round(vl_saldo_titulo - vl_recurso, vl_bruto) * vl_liquido  ELSE (dividir_sem_round(vl_classificacao, vl_titulo) * vl_liquido) * dividir_sem_round(vl_saldo_titulo - vl_recurso, vl_bruto) END  END ) vl_titulo,
			ds_pessoa,
			'CR' ie_tipo_titulo,
			0 cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			7 ie_union,
			ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			cd_moeda,
			(cd_moeda_cr_w)::numeric  cd_moeda_padrao,
			ds_observacao,
			dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			nr_nota_fiscal,
			'' ds_conta_baixa
		from (
			select /*+ index (b TITRECE_I9) */				b.nr_titulo,
				a.vl_classificacao,
				b.vl_saldo_titulo,
				(obter_dados_titulo_receber(b.nr_titulo, 'V'))::numeric  vl_bruto,
				(obter_dados_titulo_receber(b.nr_titulo, 'VLL'))::numeric  vl_liquido,
				substr(obter_nome_pf_pj(b.cd_pessoa_fisica, b.cd_cgc), 1, 60) ds_pessoa,
				substr(obter_nome_estabelecimento(b.cd_estabelecimento), 1, 255) ds_estabelecimento,
				b.cd_moeda cd_moeda,
				substr(b.ds_observacao_titulo, 1, 255) ds_observacao,
				obter_venc_titulo(null, b.nr_titulo) dt_venc_orig,
				substr(obter_dados_nota_fiscal(b.nr_seq_nf_saida, '0'), 1, 255) nr_nota_fiscal,
				obter_vl_recurso_titulo(b.nr_titulo) vl_recurso,
				b.vl_titulo
			FROM titulo_receber b
LEFT OUTER JOIN titulo_receber_classif a ON (b.nr_titulo = a.nr_titulo)
LEFT OUTER JOIN banco_estabelecimento c ON (b.nr_seq_conta_banco = c.nr_sequencia)
WHERE cd_conta_financ_p = coalesce(a.cd_conta_financ, cd_conta_financ_cre_w) and obter_se_filtro_fluxo(b.nr_seq_conta_banco, null, null, wheb_usuario_pck.get_nm_usuario, null) = 'S'   and cd_moeda_empresa_w = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
					(
						'D' = ie_periodo_p
						and (
							obter_dt_venc_tit_rec(b.cd_cgc, obter_venc_titulo(null, b.nr_titulo), ie_regra_atraso_p, c.cd_banco, b.cd_pessoa_fisica) = dt_referencia_p
							or (
								ie_acumular_vencidos_w = 'S'
								and trunc(dt_referencia_p, 'dd') = trunc(dt_inicio_w, 'dd')
								and obter_dt_venc_tit_rec(b.cd_cgc, obter_venc_titulo(null, b.nr_titulo), ie_regra_atraso_p, c.cd_banco, b.cd_pessoa_fisica) < dt_inicio_w
								)
							)
						)
					or (
						'M' = ie_periodo_p
						and trunc(obter_dt_venc_tit_rec(b.cd_cgc, obter_venc_titulo(null, b.nr_titulo), ie_regra_atraso_p, c.cd_banco, b.cd_pessoa_fisica), 'month') = trunc(to_date(dt_referencia_p), 'month')
						)
					) and 'CR' = ie_integracao_p and b.ie_situacao = '1' and (
					((
							b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
							or cd_estab_financeiro = wheb_usuario_pck.get_cd_estabelecimento
							) AND 'S' = ie_restringe_estab_p)
					or (b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento AND 'E' = ie_restringe_estab_p)
					or ('N' = ie_restringe_estab_p)
					) and coalesce(b.dt_pagamento_previsto, b.dt_vencimento) between CASE WHEN ie_acumular_vencidos_w='S' THEN  coalesce(b.dt_pagamento_previsto, b.dt_vencimento)  ELSE fim_dia(dt_referencia_p) - 40 END and CASE WHEN ie_acumular_vencidos_w='S' THEN  coalesce(b.dt_pagamento_previsto, b.dt_vencimento)  ELSE fim_dia(dt_referencia_p) END /* nao tirar, problema de performance */
  and 'R' = ie_classif_fluxo_p and 'S'	= ie_tit_rec_p and obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_p and not exists (
					select 1
					from fluxo_caixa_excecao x
					where x.ie_integracao = 'TR'
						and x.ie_origem_titulo_rec = b.ie_origem_titulo
						and x.ie_tipo_fluxo = 'R'
					)
			 ) alias56
		group by nr_titulo,
			ds_pessoa,
			ds_estabelecimento,
			cd_moeda,
			ds_observacao,
			dt_venc_orig,
			nr_nota_fiscal
		) alias57
	order by 1;

c09 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		/* valor de glosas a recuperar */

		SELECT 0 nr_ordem_compra,
			nr_titulo,
			sum(vl_recurso) vl_titulo,
			ds_pessoa,
			'CR' ie_tipo_titulo,
			0 cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			7.5 ie_union,
			ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			cd_moeda,
			(cd_moeda_cr_w)::numeric  cd_moeda_padrao,
			ds_observacao,
			to_date(dt_referencia_p) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			nr_nota_fiscal,
			ds_conta_baixa
		from (
			select /*+ index (b TITRECE_I9) */				b.nr_titulo,
				substr(obter_nome_pf_pj(b.cd_pessoa_fisica, b.cd_cgc), 1, 60) ds_pessoa,
				substr(obter_nome_estabelecimento(b.cd_estabelecimento), 1, 255) ds_estabelecimento,
				b.cd_moeda cd_moeda,
				substr(b.ds_observacao_titulo, 1, 255) ds_observacao,
				OBTER_VENC_TITULO(null, b.nr_titulo) dt_venc_orig,
				substr(obter_dados_nota_fiscal(b.nr_seq_nf_saida, '0'), 1, 255) nr_nota_fiscal,
				obter_vl_recurso_titulo(b.nr_titulo) vl_recurso,
				OBTER_DT_VENC_TIT_REC(b.cd_cgc, OBTER_VENC_TITULO(null, b.nr_titulo), ie_regra_atraso_p, c.cd_banco, b.cd_pessoa_fisica) dt_vencimento,
				g.ds_conta ds_conta_baixa
			FROM transacao_financeira d, titulo_receber_liq a
LEFT OUTER JOIN banco_estabelecimento_v g ON (a.nr_seq_conta_banco = g.nr_sequencia)
, titulo_receber b
LEFT OUTER JOIN banco_estabelecimento c ON (b.nr_seq_conta_banco = c.nr_sequencia)
WHERE (d.cd_conta_financ IS NOT NULL AND d.cd_conta_financ::text <> '') and cd_conta_financ_p = d.cd_conta_financ and d.nr_sequencia = a.nr_seq_trans_fin and obter_se_filtro_fluxo(b.nr_seq_conta_banco, null, null, wheb_usuario_pck.get_nm_usuario, null) = 'S' and b.nr_titulo = a.nr_titulo and coalesce(a.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and a.nr_sequencia = (
					select max(x.nr_sequencia)
					from titulo_receber_liq x
					where x.nr_titulo = b.nr_titulo
						and not exists (
							select 1
							from titulo_receber_liq w
							where w.nr_seq_liq_origem = x.nr_sequencia
								and w.nr_titulo = x.nr_titulo
							)
						and coalesce(x.nr_seq_liq_origem::text, '') = ''
						and coalesce(x.vl_recurso, 0) <> 0
					)   and 'CR' = ie_integracao_p and b.ie_situacao = '1' and (
					((
							b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
							or cd_estab_financeiro = wheb_usuario_pck.get_cd_estabelecimento
							) AND 'S' = ie_restringe_estab_p)
					or (b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento AND 'E' = ie_restringe_estab_p)
					or ('N' = ie_restringe_estab_p)
					) and coalesce(b.dt_pagamento_previsto, b.dt_vencimento) between coalesce(b.dt_pagamento_previsto, b.dt_vencimento) and coalesce(b.dt_pagamento_previsto, b.dt_vencimento) and 'R' = ie_classif_fluxo_p and 'S'	= ie_tit_rec_p and obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_p and b.vl_saldo_titulo > 0 and not exists (
					select 1
					from fluxo_caixa_excecao x
					where x.ie_integracao = 'TR'
						and x.ie_origem_titulo_rec = b.ie_origem_titulo
						and x.ie_tipo_fluxo = 'R'
					)
			 ) alias36
		where coalesce(vl_recurso, 0) <> 0
			and CASE WHEN(trunc(dt_vencimento, 'dd') - trunc(to_date(dt_referencia_p), 'dd')) - abs(trunc(dt_vencimento, 'dd') - trunc(to_date(dt_referencia_p), 'dd'))=0 THEN  dt_vencimento + 1  ELSE dt_referencia_p END  = dt_referencia_p
		group by nr_titulo,
			ds_pessoa,
			ds_estabelecimento,
			cd_moeda,
			ds_observacao,
			dt_venc_orig,
			nr_nota_fiscal,
			ds_conta_baixa
		) alias46
	order by 1;


c10 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			0 nr_titulo,
			a.vl_fluxo vl_titulo,
			substr(obter_descricao_padrao('CONTA_FINANCEIRA', 'DS_CONTA_FINANC', a.cd_conta_financ), 1, 60) ds_pessoa,
			'D' ie_tipo_titulo,
			a.cd_conta_financ,
			a.ie_periodo,
			a.ie_classif_fluxo,
			8 ie_union,
			substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			'' ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		from fluxo_caixa a
		where a.cd_conta_financ = cd_conta_financ_p
			and (
				(
					'D' = ie_periodo_p
					and a.dt_referencia = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(a.dt_referencia, 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				)
			and (
				a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				)
			and a.ie_origem = 'D'
			and ie_integracao_p = 'D'
			and ie_classif_fluxo_p = 'R'
			and coalesce(a.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w)
			and a.cd_empresa = cd_empresa_p
		) alias17
	order by 1;
	
	
c11 CURSOR FOR	
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT /*+ index(a ORDCOMP_I1) */			a.nr_ordem_compra,
			0 nr_titulo,
			CASE WHEN a.cd_moeda=(cd_moeda_cr_w)::numeric  THEN  OBTER_VALOR_VENC_OC(a.nr_ordem_compra, dt_referencia_p, cd_conta_financ_p, d.IE_TRATAR_FIM_SEMANA, null, ie_oc_parcial_w)  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, OBTER_VALOR_VENC_OC(a.nr_ordem_compra, dt_referencia_p, cd_conta_financ_p, d.IE_TRATAR_FIM_SEMANA, null, ie_oc_parcial_w), a.cd_moeda, dt_referencia_p) END  vl_titulo,
			substr(obter_nome_pf_pj(a.CD_PESSOA_FISICA, a.CD_CGC_FORNECEDOR), 1, 100) ds_pessoa,
			'OC' ie_tipo_titulo,
			(cd_conta_financ_p)::numeric  cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			9 ie_union,
			substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			substr(a.ds_observacao, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		from parametro_fluxo_caixa d,
			ordem_compra a
		where (
				a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				)
			and d.cd_estabelecimento = a.cd_estabelecimento
			and coalesce(a.dt_baixa::text, '') = ''
			and a.dt_ordem_compra >= clock_timestamp() - coalesce(qtd_dias_fluxo_oc_p, 180)
			and cd_moeda_empresa_w = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w)
			and CASE WHEN a.cd_moeda=(cd_moeda_cr_w)::numeric  THEN  OBTER_VALOR_VENC_OC(a.nr_ordem_compra, dt_referencia_p, cd_conta_financ_p, d.IE_TRATAR_FIM_SEMANA, null, ie_oc_parcial_w)  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, OBTER_VALOR_VENC_OC(a.nr_ordem_compra, dt_referencia_p, cd_conta_financ_p, d.IE_TRATAR_FIM_SEMANA, null, ie_oc_parcial_w), a.cd_moeda, dt_referencia_p) END  > 0
			and (
				(
					(not exists (	select	1
							from	ordem_compra_venc x
							where	x.nr_ordem_compra = a.nr_ordem_compra) 
					or (ie_calc_fluxo_oc_w	= 'E'))
					and a.dt_ordem_compra between to_date(dt_referencia_p) - coalesce(qtd_dias_fluxo_oc_p, 180)
						and to_date(dt_referencia_p)
					)
				or (
					ie_calc_fluxo_oc_w = 'V'
					and exists (
						select 1
						from ordem_compra_venc x
						where x.nr_ordem_compra = a.nr_ordem_compra
							and CASE WHEN ie_tratar_fim_semana_w='S' THEN obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento,x.dt_vencimento)  ELSE x.dt_vencimento END  between to_date(dt_referencia_p)
								and to_date(dt_referencia_p)
						)
					)
				)
			and ie_integracao_p = 'OC'
			and ie_classif_fluxo_p = 'R'
			and 'S' = ie_ordem_compra_p
			and 'D' = ie_periodo_p
			and obter_empresa_estab(a.cd_estabelecimento) = cd_empresa_p
			and (
				(ie_oc_aprovada_w = 'N')
				or (a.DT_APROVACAO IS NOT NULL AND a.DT_APROVACAO::text <> '')
				)
		) alias40
	order by 1;

c12 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT /*+ index(a ORDCOMP_I1) */			a.nr_ordem_compra,
			0 nr_titulo,
			CASE WHEN a.cd_moeda=(cd_moeda_cr_w)::numeric  THEN  OBTER_VALOR_VENC_OC(a.nr_ordem_compra, trunc(to_date(dt_referencia_p), 'month'), cd_conta_financ_p, d.IE_TRATAR_FIM_SEMANA, last_day(to_date(dt_referencia_p)), ie_oc_parcial_w)  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, OBTER_VALOR_VENC_OC(a.nr_ordem_compra, trunc(to_date(dt_referencia_p), 'month'), cd_conta_financ_p, d.IE_TRATAR_FIM_SEMANA, last_day(to_date(dt_referencia_p)), ie_oc_parcial_w), a.cd_moeda, dt_referencia_p) END  vl_titulo,
			substr(obter_nome_pf_pj(a.CD_PESSOA_FISICA, a.CD_CGC_FORNECEDOR), 1, 100) ds_pessoa,
			'OC' ie_tipo_titulo,
			(cd_conta_financ_p)::numeric  cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			10 ie_union,
			substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			substr(a.ds_observacao, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		from parametro_fluxo_caixa d,
			ordem_compra a
		where (
				a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				)
			and d.cd_estabelecimento = a.cd_estabelecimento
			and coalesce(a.dt_baixa::text, '') = ''
			and cd_moeda_empresa_w = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w)
			and CASE WHEN a.cd_moeda=(cd_moeda_cr_w)::numeric  THEN  OBTER_VALOR_VENC_OC(a.nr_ordem_compra, trunc(to_date(dt_referencia_p), 'month'), cd_conta_financ_p, d.IE_TRATAR_FIM_SEMANA, last_day(to_date(dt_referencia_p)), ie_oc_parcial_w)  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, OBTER_VALOR_VENC_OC(a.nr_ordem_compra, trunc(to_date(dt_referencia_p), 'month'), cd_conta_financ_p, d.IE_TRATAR_FIM_SEMANA, last_day(to_date(dt_referencia_p)), ie_oc_parcial_w), a.cd_moeda, dt_referencia_p) END  > 0
			and a.dt_ordem_compra > clock_timestamp() - interval '180 days'
			and ie_integracao_p = 'OC'
			and ie_classif_fluxo_p = 'R'
			and 'S' = ie_ordem_compra_p
			and 'M' = ie_periodo_p
			and (
				(ie_oc_aprovada_w = 'N')
				or (a.DT_APROVACAO IS NOT NULL AND a.DT_APROVACAO::text <> '')
				)
			and obter_empresa_estab(a.cd_estabelecimento) = cd_empresa_p
		) alias42
	order by 1;

c13 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE VL_TITULO_ESTRANG END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT nr_ordem_compra,
			nr_titulo,
			CASE WHEN obter_se_moeda_estrang(cd_moeda_estrang_p,cd_moeda_empresa_w)='S' THEN vl_titulo_estrang  ELSE (vl_titulo +																					 CASE WHEN coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(cd_estabelecimento), 'JCP', cd_cgc, null, dt_referencia_p, cd_estabelecimento), 0)=0 THEN  vl_juros  ELSE 0 END  + 																					 CASE WHEN coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(cd_estabelecimento), 'MCP', cd_cgc, null, dt_referencia_p, cd_estabelecimento), 0)=0 THEN  vl_multa  ELSE 0 END  - 																					 CASE WHEN coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(cd_estabelecimento), 'DCP', cd_cgc, null, dt_referencia_p, cd_estabelecimento), 0)=0 THEN  vl_desconto  ELSE 0 END  + 																					 CASE WHEN coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(cd_estabelecimento), 'OCP', cd_cgc, null, dt_referencia_p, cd_estabelecimento), 0)=0 THEN  vl_outros_acrescimos  ELSE 0 END  +																					 CASE WHEN coalesce(obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(cd_estabelecimento), 'ODP', cd_cgc, null, dt_referencia_p, cd_estabelecimento), 0)=0 THEN  VL_OUTRAS_DESPESAS  ELSE 0 END ) END  vl_titulo,
			Obter_Valor_Moeda_strang(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo_estrang, cd_moeda, dt_referencia_p) vl_titulo_estrang,
			substr(ds_pessoa, 1, 100) ds_pessoa,
			ie_tipo_titulo,
			cd_conta_financ,
			ie_periodo,
			ie_classif_fluxo,
			ie_union,
			substr(obter_nome_estabelecimento(cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			cd_moeda,
			(cd_moeda_cp_w)::numeric  cd_moeda_padrao,
			ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			ds_banco,
			nr_nota_fiscal,
			ds_conta_baixa
		from (
			select 0 nr_ordem_compra,
				b.nr_titulo,
				sum(dividir_sem_round((coalesce(CASE WHEN ie_tit_pagar_transf_w='S' THEN  CASE WHEN b.ie_situacao='T' THEN  a.vl_original  ELSE a.vl_titulo END   ELSE a.vl_titulo END , CASE WHEN ie_tit_pagar_transf_w='S' THEN  CASE WHEN b.ie_situacao='T' THEN  obter_valor_tit_transf(b.nr_titulo, c.dt_baixa, 'CP')  ELSE OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT') END   ELSE OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT') END )), (CASE WHEN ie_tit_pagar_transf_w='S' THEN  CASE WHEN b.ie_situacao='T' THEN  obter_valor_tit_transf(b.nr_titulo, c.dt_baixa, 'CP')  ELSE OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT') END   ELSE OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT') END )) * c.vl_baixa) vl_titulo,
				sum(dividir_sem_round((coalesce(CASE WHEN ie_tit_pagar_transf_w='S' THEN  CASE WHEN b.ie_situacao='T' THEN  a.vl_original  ELSE a.vl_titulo END   ELSE a.vl_titulo END , CASE WHEN ie_tit_pagar_transf_w='S' THEN  CASE WHEN b.ie_situacao='T' THEN  obter_valor_tit_transf(b.nr_titulo, c.dt_baixa, 'CP')  ELSE OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT') END   ELSE OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT') END )), (CASE WHEN ie_tit_pagar_transf_w='S' THEN  CASE WHEN b.ie_situacao='T' THEN  obter_valor_tit_transf(b.nr_titulo, c.dt_baixa, 'CP')  ELSE OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT') END   ELSE OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT') END )) * c.vl_baixa_estrang) vl_titulo_estrang,
				sum((dividir_sem_round((coalesce(a.vl_titulo, (OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric )), ((OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric ))) * c.vl_juros) vl_juros,
				sum((dividir_sem_round((coalesce(a.vl_titulo, (OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric )), ((OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric ))) * c.vl_multa) vl_multa,
				sum((dividir_sem_round((coalesce(a.vl_titulo, (OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric )), ((OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric ))) * c.vl_descontos) vl_desconto,
				sum((dividir_sem_round((coalesce(a.vl_titulo, (OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric )), ((OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric ))) * c.vl_outros_acrescimos) vl_outros_acrescimos,
				sum((dividir_sem_round((coalesce(a.vl_titulo, (OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric )), ((OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric ))) *  coalesce(c.VL_OUTRAS_DESPESAS,0)) VL_OUTRAS_DESPESAS,
				substr(obter_nome_pf_pj(b.cd_pessoa_fisica, b.cd_cgc), 1, 60) ds_pessoa,
				'CP' ie_tipo_titulo,
				0 cd_conta_financ,
				'' ie_periodo,
				'' ie_classif_fluxo,
				11 ie_union,
				b.cd_estabelecimento,
				b.cd_cgc,
				b.cd_moeda cd_moeda,
				substr(b.ds_observacao_titulo, 1, 255) ds_observacao,
				'' ds_banco,
				substr(obter_dados_nota_fiscal(b.nr_seq_nota_fiscal, '0'), 1, 255) nr_nota_fiscal,
				g.ds_conta ds_conta_baixa
			FROM tipo_baixa_cpa d, titulo_pagar b, titulo_pagar_baixa c
LEFT OUTER JOIN movto_trans_financ f ON (c.nr_seq_movto_trans_fin = f.nr_sequencia)
LEFT OUTER JOIN banco_estabelecimento_v g ON (c.nr_seq_conta_banco = g.nr_sequencia)
LEFT OUTER JOIN titulo_pagar_classif a ON (c.nr_titulo = a.nr_titulo)
WHERE coalesce(a.nr_seq_conta_financ, cd_conta_financ_cpa_w) = cd_conta_financ_p   and obter_se_filtro_fluxo(c.nr_seq_conta_banco, null, null, wheb_usuario_pck.get_nm_usuario, f.nr_seq_caixa) = 'S'  and b.nr_titulo = c.nr_titulo and c.cd_tipo_baixa = d.cd_tipo_baixa and coalesce(c.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
					(
						'D' = ie_periodo_p
						and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(c.dt_baixa, 'dd'))  ELSE trunc(c.dt_baixa, 'dd') END  = dt_referencia_p
						)
					or (
						'M' = ie_periodo_p
						and trunc(c.dt_baixa, 'month') = trunc(to_date(dt_referencia_p), 'month')
						)
					) and ie_integracao_p = 'CP' and (
					((
							b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
							or cd_estab_financeiro = wheb_usuario_pck.get_cd_estabelecimento
							) AND 'S' = ie_restringe_estab_p)
					or (b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento AND 'E' = ie_restringe_estab_p)
					or ('N' = ie_restringe_estab_p)
					) and ie_classif_fluxo_p = 'P' and b.ie_situacao <> 'C' and (
					(b.ie_situacao <> 'T')
					or ('S' = ie_tit_pagar_transf_w)
					) and (
					(b.ie_situacao <> 'D')
					or ('S' = ie_tit_pagar_desdob_w)
					) and coalesce(d.ie_fluxo_passado, 'S') = 'S' and obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_p and coalesce(b.nr_titulo_transf::text, '') = '' and (
					not exists (
						select 1
						from titulo_pagar_baixa_cc x
						where x.nr_titulo = c.nr_titulo
							and x.nr_seq_baixa = c.nr_sequencia
						)
					or ('N' = ie_classif_baixa_cp_w)
					) group by b.nr_titulo,
				substr(obter_nome_pf_pj(b.cd_pessoa_fisica, b.cd_cgc), 1, 60),
				b.cd_estabelecimento,
				b.cd_cgc,
				b.cd_moeda,
				substr(b.ds_observacao_titulo, 1, 255),
				substr(obter_dados_nota_fiscal(b.nr_seq_nota_fiscal, '0'), 1, 255),
				g.ds_conta
			
			
union all

			
			select 0 nr_ordem_compra,
				b.nr_titulo,
				sum(e.vl_baixa) vl_titulo,
				sum(e.vl_baixa_estrang) vl_titulo_estrang,
				sum(e.vl_juros) vl_juros,
				sum(e.vl_multa) vl_multa,
				sum(e.vl_desconto) vl_desconto,
				sum(e.vl_outros_acrescimos) vl_outros_acrescimos,
				sum(coalesce(e.VL_OUTRAS_DESPESAS,0)) VL_OUTRAS_DESPESAS,
				substr(obter_nome_pf_pj(b.cd_pessoa_fisica, b.cd_cgc), 1, 60) ds_pessoa,
				'CP' ie_tipo_titulo,
				0 cd_conta_financ,
				'' ie_periodo,
				'' ie_classif_fluxo,
				11.5 ie_union,
				b.cd_estabelecimento,
				b.cd_cgc,
				b.cd_moeda cd_moeda,
				substr(b.ds_observacao_titulo, 1, 255) ds_observacao,
				'' ds_banco,
				substr(obter_dados_nota_fiscal(b.nr_seq_nota_fiscal, '0'), 1, 255) nr_nota_fiscal,
				g.ds_conta ds_conta_baixa
			FROM titulo_pagar_baixa_cc e, tipo_baixa_cpa d, titulo_pagar b, titulo_pagar_baixa c
LEFT OUTER JOIN movto_trans_financ f ON (c.nr_seq_movto_trans_fin = f.nr_sequencia)
LEFT OUTER JOIN banco_estabelecimento_v g ON (c.nr_seq_conta_banco = g.nr_sequencia)
WHERE coalesce(e.cd_conta_financ, cd_conta_financ_cpa_w) = cd_conta_financ_p   and obter_se_filtro_fluxo(c.nr_seq_conta_banco, null, null, wheb_usuario_pck.get_nm_usuario, f.nr_seq_caixa) = 'S' and c.nr_titulo = e.nr_titulo and c.nr_sequencia = e.nr_seq_baixa and b.nr_titulo = c.nr_titulo and c.cd_tipo_baixa = d.cd_tipo_baixa and coalesce(c.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
					(
						'D' = ie_periodo_p
						and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(c.dt_baixa, 'dd'))  ELSE trunc(c.dt_baixa, 'dd') END  = dt_referencia_p
						)
					or (
						'M' = ie_periodo_p
						and trunc(c.dt_baixa, 'month') = trunc(to_date(dt_referencia_p), 'month')
						)
					) and ie_integracao_p = 'CP' and (
					((
							b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
							or cd_estab_financeiro = wheb_usuario_pck.get_cd_estabelecimento
							) AND 'S' = ie_restringe_estab_p)
					or (b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento AND 'E' = ie_restringe_estab_p)
					or ('N' = ie_restringe_estab_p)
					) and ie_classif_fluxo_p = 'P' and b.ie_situacao <> 'C' and (
					(b.ie_situacao <> 'T')
					or ('S' = ie_tit_pagar_transf_w)
					) and (
					(b.ie_situacao <> 'D')
					or ('S' = ie_tit_pagar_desdob_w)
					) and coalesce(d.ie_fluxo_passado, 'S') = 'S' and obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_p and coalesce(b.nr_titulo_transf::text, '') = '' and 'S' = ie_classif_baixa_cp_w group by b.nr_titulo,
				substr(obter_nome_pf_pj(b.cd_pessoa_fisica, b.cd_cgc), 1, 60),
				b.cd_estabelecimento,
				b.cd_cgc,
				b.cd_moeda,
				substr(b.ds_observacao_titulo, 1, 255),
				substr(obter_dados_nota_fiscal(b.nr_seq_nota_fiscal, '0'), 1, 255),
				g.ds_conta
			) alias183
		) alias184
	order by 1;

c14 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			b.nr_titulo,
			/* ADIANTAMENTO_PAGO */

			sum(((coalesce(a.vl_titulo, OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT')) - coalesce(a.vl_desconto, 0) + coalesce(a.vl_acrescimo, 0)) / (OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT') - coalesce(a.vl_desconto, 0) + coalesce(a.vl_acrescimo, 0))) * CASE WHEN obter_se_moeda_estrang(cd_moeda_estrang_p,cd_moeda_empresa_w)='S' THEN c.vl_adto_estrang  ELSE c.vl_adiantamento END  ) vl_titulo,
			substr(obter_nome_pf_pj(b.cd_pessoa_fisica, b.cd_cgc), 1, 60) ds_pessoa,
			'CP' ie_tipo_titulo,
			0 cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			12 ie_union,
			substr(obter_nome_estabelecimento(b.cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			b.cd_moeda cd_moeda,
			(cd_moeda_cp_w)::numeric  cd_moeda_padrao,
			substr(b.ds_observacao_titulo, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			substr(obter_dados_nota_fiscal(b.nr_seq_nota_fiscal, '0'), 1, 255) nr_nota_fiscal,
			'' ds_conta_baixa
		FROM adiantamento_pago d, titulo_pagar b, titulo_pagar_adiant c
LEFT OUTER JOIN titulo_pagar_classif a ON (c.nr_titulo = a.nr_titulo)
WHERE c.nr_adiantamento = d.nr_adiantamento and coalesce(CASE WHEN ie_conta_finan_trans_w='S' THEN (						select x.cd_conta_financ						from transacao_financeira x						where x.nr_sequencia = d.nr_seq_trans_fin						)  ELSE a.nr_seq_conta_financ END , cd_conta_financ_cpa_w) = cd_conta_financ_p and obter_se_filtro_fluxo(null, null, null, wheb_usuario_pck.get_nm_usuario, null) = 'S'  and b.nr_titulo = c.nr_titulo and coalesce(d.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN  coalesce(obter_dt_credito_banco_cre(a.nr_titulo, a.nr_sequencia), CASE WHEN ie_data_tit_adiant_w='S' THEN  d.dt_adiantamento  ELSE c.dt_atualizacao END )  ELSE CASE WHEN ie_data_tit_adiant_w='S' THEN  d.dt_adiantamento  ELSE c.dt_atualizacao END  END , 'dd'))  ELSE trunc(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN  coalesce(obter_dt_credito_banco_cre(a.nr_titulo, a.nr_sequencia), CASE WHEN ie_data_tit_adiant_w='S' THEN  d.dt_adiantamento  ELSE c.dt_atualizacao END )  ELSE CASE WHEN ie_data_tit_adiant_w='S' THEN  d.dt_adiantamento  ELSE c.dt_atualizacao END  END , 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN  coalesce(obter_dt_credito_banco_cre(a.nr_titulo, a.nr_sequencia), CASE WHEN ie_data_tit_adiant_w='S' THEN  d.dt_adiantamento  ELSE c.dt_atualizacao END )  ELSE CASE WHEN ie_data_tit_adiant_w='S' THEN  d.dt_adiantamento  ELSE c.dt_atualizacao END  END , 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				) and ie_integracao_p = 'CP' and (
				((
						b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
						or cd_estab_financeiro = wheb_usuario_pck.get_cd_estabelecimento
						) AND 'S' = ie_restringe_estab_p)
				or (b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento AND 'E' = ie_restringe_estab_p)
				or ('N' = ie_restringe_estab_p)
				) and ie_classif_fluxo_p = 'P' and b.ie_situacao <> 'C' and (
				(b.ie_situacao <> 'T')
				or ('S' = ie_tit_pagar_transf_w)
				) and (
				(b.ie_situacao <> 'D')
				or ('S' = ie_tit_pagar_desdob_w)
				) and ie_adiant_pago_w in ('A', 'TP') and obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_p and not exists (
				select 1
				from titulo_pagar x
				where x.nr_adiant_pago = c.nr_adiantamento
				) and coalesce(obter_se_tit_pagar_transf(b.nr_titulo), 'N') = 'N' group by b.nr_titulo,
			substr(obter_nome_pf_pj(b.cd_pessoa_fisica, b.cd_cgc), 1, 60),
			substr(obter_nome_estabelecimento(b.cd_estabelecimento), 1, 255),
			b.cd_moeda,
			substr(b.ds_observacao_titulo, 1, 255),
			substr(obter_dados_nota_fiscal(b.nr_seq_nota_fiscal, '0'), 1, 255)
		) alias67
	order by 1;

c15 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT /*+ USE_CONCAT*/			0 nr_ordem_compra,
			b.nr_titulo,
			CASE WHEN obter_se_moeda_estrang(cd_moeda_estrang_p,cd_moeda_empresa_w)='S' THEN																				sum(dividir_sem_round(coalesce(CASE WHEN ie_tit_rec_canc_w='N' THEN  a.vl_classificacao  ELSE CASE WHEN b.ie_situacao='3' THEN  a.vl_original  ELSE a.vl_classificacao END  END , (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ), (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ) * coalesce(c.vl_recebido_estrang,0))  ELSE sum(dividir_sem_round(coalesce(CASE WHEN ie_tit_rec_canc_w='N' THEN  a.vl_classificacao  ELSE CASE WHEN b.ie_situacao='3' THEN  a.vl_original  ELSE a.vl_classificacao END  END , (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ), (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ) * 																									  (c.vl_recebido + CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'DCR', b.cd_cgc, coalesce(b.cd_convenio_conta, (select coalesce(t.cd_convenio_parametro,0) from conta_paciente t where b.nr_interno_conta = t.nr_interno_conta)), trunc(c.dt_recebimento, 'dd'), b.cd_estabelecimento) IS NULL THEN  0  ELSE c.vl_descontos END  + CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'VLM', b.cd_cgc, coalesce(b.cd_convenio_conta, (select coalesce(t.cd_convenio_parametro,0) from conta_paciente t where b.nr_interno_conta = t.nr_interno_conta)), trunc(c.dt_recebimento, 'dd'), b.cd_estabelecimento)=cd_conta_financ_p THEN  c.vl_rec_maior  ELSE 0 END )																					) + coalesce(c.vl_cambial_ativo, 0) END  vl_titulo,
			substr(obter_nome_pf_pj(b.cd_pessoa_fisica, b.cd_cgc), 1, 60) ds_pessoa,
			'CR' ie_tipo_titulo,
			0 cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			13 ie_union,
			substr(obter_nome_estabelecimento(b.cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			b.cd_moeda cd_moeda,
			(cd_moeda_cr_w)::numeric  cd_moeda_padrao,
			substr(b.ds_observacao_titulo, 1, 255) ds_observacao,
			OBTER_VENC_TITULO(null, b.nr_titulo) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			substr(obter_dados_nota_fiscal(b.nr_seq_nf_saida, '0'), 1, 255) nr_nota_fiscal,
			g.ds_conta ds_conta_baixa
		FROM tipo_recebimento d, titulo_receber b
LEFT OUTER JOIN titulo_receber_classif a ON (b.nr_titulo = a.nr_titulo)
, titulo_receber_liq c
LEFT OUTER JOIN movto_trans_financ f ON (c.nr_seq_movto_trans_fin = f.nr_sequencia)
LEFT OUTER JOIN banco_estabelecimento_v g ON (c.nr_seq_conta_banco = g.nr_sequencia)
LEFT OUTER JOIN adiantamento e ON (c.nr_adiantamento = e.nr_adiantamento)
WHERE coalesce(a.cd_conta_financ, coalesce(obter_conta_transacao(CASE WHEN ie_trans_fin_conta_w='M' THEN  f.nr_seq_trans_financ  ELSE c.nr_seq_trans_fin END ), cd_conta_financ_cre_w)) = cd_conta_financ_p and obter_se_filtro_fluxo(c.nr_seq_conta_banco, null, c.nr_seq_caixa_rec, wheb_usuario_pck.get_nm_usuario, f.nr_seq_caixa) = 'S'    and d.ie_fluxo_passado = 'S' and c.cd_tipo_recebimento = d.cd_tipo_recebimento and (
				(b.ie_situacao <> '3')
				or ('S' = ie_tit_rec_canc_w)
				) and (b.ie_situacao <> '5') and coalesce(c.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
				('N' = ie_restringe_estab_p)
				or ((
						b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
						or cd_estab_financeiro = wheb_usuario_pck.get_cd_estabelecimento
						) AND 'S' = ie_restringe_estab_p)
				or (b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento AND 'E' = ie_restringe_estab_p)
				) and obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_p and c.nr_titulo = b.nr_titulo and (
				(
					'D' = ie_periodo_p
					and obter_dia_util_fluxo_caixa(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN  coalesce(trunc(c.dt_credito_banco), CASE WHEN ie_data_tit_adiant_rec_w='S' THEN  trunc(coalesce(e.dt_adiantamento, c.dt_recebimento))  ELSE trunc(c.dt_recebimento) END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN  trunc(coalesce(e.dt_adiantamento, c.dt_recebimento))  ELSE trunc(c.dt_recebimento) END  END , wheb_usuario_pck.get_cd_estabelecimento, 'P', ie_tratar_fim_semana_w, ie_fim_semana_passado_w) = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and CASE WHEN ie_dt_credito_banco_cre_w='S' THEN  coalesce(trunc(c.dt_credito_banco, 'month'), CASE WHEN ie_data_tit_adiant_rec_w='S' THEN  trunc(coalesce(e.dt_adiantamento, c.dt_recebimento), 'month')  ELSE trunc(c.dt_recebimento, 'month') END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN  trunc(coalesce(e.dt_adiantamento, c.dt_recebimento), 'month')  ELSE trunc(c.dt_recebimento, 'month') END  END  = trunc(to_date(dt_referencia_p), 'month')
					)
				)  and c.ie_lib_caixa = 'S' and (
				ie_adiant_receb_w in ('A', 'TR')
				or coalesce(c.nr_adiantamento::text, '') = ''
				) and (
				ie_movto_bco_pend_w in ('N', 'A', 'TP')
				or not exists (
					select 1
					from movto_banco_pend_baixa x
					where x.nr_titulo = a.nr_titulo
						and x.nr_seq_baixa = a.nr_sequencia
					)
				) and not exists /* ahoffelder - 06/09/2012 - OS 442630 - ja entra no fluxo pela MOVTO_TRANS_FINANC */
 (
				select 1
				from movto_trans_financ x
				where (
						(x.nr_seq_movto_cartao IS NOT NULL AND x.nr_seq_movto_cartao::text <> '')
						or (x.nr_seq_cheque IS NOT NULL AND x.nr_seq_cheque::text <> '')
						)
					and coalesce(x.nr_seq_titulo_receber::text, '') = ''
					and x.nr_sequencia = c.nr_seq_movto_trans_fin
				) and (
				coalesce(ie_titulo_caixa_w, 'S') = 'S'
				or not exists (
					select 1
					from caixa y,
						movto_trans_financ x
					where x.vl_transacao <> 0
						and coalesce(x.nr_seq_titulo_receber::text, '') = ''
						and coalesce(y.ie_movto_fluxo, 'S') = 'S'
						and x.nr_seq_caixa = y.nr_sequencia
						and x.nr_seq_caixa_rec = c.nr_seq_caixa_rec
					)
				) and coalesce(c.nr_seq_retorno::text, '') = '' and 'P' = ie_classif_fluxo_p and 'CR' = ie_integracao_p group by b.nr_titulo,
			b.cd_pessoa_fisica,
			b.cd_cgc,
			b.cd_estabelecimento,
			b.cd_moeda,
			substr(b.ds_observacao_titulo, 1, 255),
			substr(obter_dados_nota_fiscal(b.nr_seq_nf_saida, '0'), 1, 255),
			coalesce(c.vl_cambial_ativo, 0),
			g.ds_conta
		) alias101
	order by 1;

c16 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT /*+ USE_CONCAT*/			0 nr_ordem_compra,
			b.nr_titulo,
			coalesce(sum(dividir_sem_round(coalesce(CASE WHEN ie_tit_rec_canc_w='N' THEN a.vl_classificacao  ELSE CASE WHEN b.ie_situacao='3' THEN a.vl_original  ELSE a.vl_classificacao END  END ,
				(obter_dados_titulo_receber(b.nr_titulo, 'V'))::numeric ),
					coalesce(CASE WHEN (obter_dados_titulo_receber(b.nr_titulo, 'V'))::numeric =0 THEN a.vl_original  ELSE (obter_dados_titulo_receber(b.nr_titulo, 'V'))::numeric  END ,0)) * c.vl_rec_maior),0) vl_titulo,			
			substr(obter_nome_pf_pj(b.cd_pessoa_fisica, b.cd_cgc), 1, 60) ds_pessoa,
			'CR' ie_tipo_titulo,
			0 cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			131 ie_union,
			substr(obter_nome_estabelecimento(b.cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			b.cd_moeda cd_moeda,
			(cd_moeda_cr_w)::numeric  cd_moeda_padrao,
			substr(b.ds_observacao_titulo, 1, 255) ds_observacao,
			OBTER_VENC_TITULO(null, b.nr_titulo) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			substr(obter_dados_nota_fiscal(b.nr_seq_nf_saida, '0'), 1, 255) nr_nota_fiscal,
			g.ds_conta ds_conta_baixa
		FROM tipo_recebimento d, titulo_receber b
LEFT OUTER JOIN titulo_receber_classif a ON (b.nr_titulo = a.nr_titulo)
, titulo_receber_liq c
LEFT OUTER JOIN movto_trans_financ f ON (c.nr_seq_movto_trans_fin = f.nr_sequencia)
LEFT OUTER JOIN banco_estabelecimento_v g ON (c.nr_seq_conta_banco = g.nr_sequencia)
LEFT OUTER JOIN adiantamento e ON (c.nr_adiantamento = e.nr_adiantamento)
WHERE coalesce(a.cd_conta_financ, coalesce(obter_conta_transacao(CASE WHEN ie_trans_fin_conta_w='M' THEN  f.nr_seq_trans_financ  ELSE c.nr_seq_trans_fin END ), cd_conta_financ_cre_w)) <> cd_conta_financ_cre_w and obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'VLM', b.cd_cgc, coalesce(b.cd_convenio_conta, (select coalesce(t.cd_convenio_parametro,0) from conta_paciente t where b.nr_interno_conta = t.nr_interno_conta)), trunc(c.dt_recebimento, 'dd'), b.cd_estabelecimento) = cd_conta_financ_p and obter_se_filtro_fluxo(c.nr_seq_conta_banco, null, c.nr_seq_caixa_rec, wheb_usuario_pck.get_nm_usuario, f.nr_seq_caixa) = 'S'    and d.ie_fluxo_passado = 'S' and c.cd_tipo_recebimento = d.cd_tipo_recebimento and (
				(b.ie_situacao <> '3')
				or ('S' = ie_tit_rec_canc_w)
				) and (b.ie_situacao <> '5') and coalesce(c.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
				('N' = ie_restringe_estab_p)
				or ((
						b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
						or cd_estab_financeiro = wheb_usuario_pck.get_cd_estabelecimento
						) AND 'S' = ie_restringe_estab_p)
				or (b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento AND 'E' = ie_restringe_estab_p)
				) and obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_p and c.nr_titulo = b.nr_titulo and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_dt_credito_banco_cre_w='S' THEN  coalesce(trunc(c.dt_credito_banco), CASE WHEN ie_data_tit_adiant_rec_w='S' THEN  trunc(coalesce(e.dt_adiantamento, c.dt_recebimento))  ELSE trunc(c.dt_recebimento) END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN  trunc(coalesce(e.dt_adiantamento, c.dt_recebimento))  ELSE trunc(c.dt_recebimento) END  END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and CASE WHEN ie_dt_credito_banco_cre_w='S' THEN  coalesce(trunc(c.dt_credito_banco, 'month'), CASE WHEN ie_data_tit_adiant_rec_w='S' THEN  trunc(coalesce(e.dt_adiantamento, c.dt_recebimento), 'month')  ELSE trunc(c.dt_recebimento, 'month') END )  ELSE CASE WHEN ie_data_tit_adiant_rec_w='S' THEN  trunc(coalesce(e.dt_adiantamento, c.dt_recebimento), 'month')  ELSE trunc(c.dt_recebimento, 'month') END  END  = trunc(to_date(dt_referencia_p), 'month')
					)
				)  and c.ie_lib_caixa = 'S' and (
				ie_adiant_receb_w in ('A', 'TR')
				or coalesce(c.nr_adiantamento::text, '') = ''
				) and (
				ie_movto_bco_pend_w in ('N', 'A', 'TP')
				or not exists (
					select 1
					from movto_banco_pend_baixa x
					where x.nr_titulo = a.nr_titulo
						and x.nr_seq_baixa = a.nr_sequencia
					)
				) and not exists /* ahoffelder - 06/09/2012 - OS 442630 - ja entra no fluxo pela MOVTO_TRANS_FINANC */
 (
				select 1
				from movto_trans_financ x
				where (
						(x.nr_seq_movto_cartao IS NOT NULL AND x.nr_seq_movto_cartao::text <> '')
						or (x.nr_seq_cheque IS NOT NULL AND x.nr_seq_cheque::text <> '')
						)
					and coalesce(x.nr_seq_titulo_receber::text, '') = ''
					and x.nr_sequencia = c.nr_seq_movto_trans_fin
				) and coalesce(c.nr_seq_retorno::text, '') = '' and 'P' = ie_classif_fluxo_p and 'CR' = ie_integracao_p group by b.nr_titulo,
			b.cd_pessoa_fisica,
			b.cd_cgc,
			b.cd_estabelecimento,
			b.cd_moeda,
			substr(b.ds_observacao_titulo, 1, 255),
			substr(obter_dados_nota_fiscal(b.nr_seq_nf_saida, '0'), 1, 255),
			g.ds_conta
		) alias81
	order by 1;


c17 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT /*+ USE_CONCAT*/			0 nr_ordem_compra,
			b.nr_titulo,
			CASE WHEN obter_se_moeda_estrang(cd_moeda_estrang_p,cd_moeda_empresa_w)='S' THEN sum(dividir_sem_round(coalesce(a.vl_original, obter_valor_tit_transf(b.nr_titulo, c.dt_recebimento, 'CR')), obter_valor_tit_transf(b.nr_titulo, c.dt_recebimento, 'CR')) * coalesce(c.vl_recebido_estrang,0))  ELSE sum(dividir_sem_round(coalesce(a.vl_original, obter_valor_tit_transf(b.nr_titulo, c.dt_recebimento, 'CR')), obter_valor_tit_transf(b.nr_titulo, c.dt_recebimento, 'CR')) * (c.vl_recebido + CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'DCR', b.cd_cgc, (obter_dados_titulo_receber(b.nr_titulo, 'CO'))::numeric , trunc(c.dt_recebimento, 'dd'), b.cd_estabelecimento) IS NULL THEN  0  ELSE c.vl_descontos END )) END  vl_titulo,
			substr(obter_nome_pf_pj(b.cd_pessoa_fisica, b.cd_cgc), 1, 60) ds_pessoa,
			'CR' ie_tipo_titulo,
			0 cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			132 ie_union,
			substr(obter_nome_estabelecimento(b.cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			b.cd_moeda cd_moeda,
			(cd_moeda_cr_w)::numeric  cd_moeda_padrao,
			substr(b.ds_observacao_titulo, 1, 255) ds_observacao,
			OBTER_VENC_TITULO(null, b.nr_titulo) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			substr(obter_dados_nota_fiscal(b.nr_seq_nf_saida, '0'), 1, 255) nr_nota_fiscal,
			g.ds_conta ds_conta_baixa
		FROM tipo_recebimento d, titulo_receber b
LEFT OUTER JOIN titulo_receber_classif a ON (b.nr_titulo = a.nr_titulo)
, titulo_receber_liq c
LEFT OUTER JOIN movto_trans_financ f ON (c.nr_seq_movto_trans_fin = f.nr_sequencia)
LEFT OUTER JOIN banco_estabelecimento_v g ON (c.nr_seq_conta_banco = g.nr_sequencia)
WHERE coalesce(a.cd_conta_financ, cd_conta_financ_cre_w) = cd_conta_financ_p and obter_se_filtro_fluxo(c.nr_seq_conta_banco, null, c.nr_seq_caixa_rec, wheb_usuario_pck.get_nm_usuario, f.nr_seq_caixa) = 'S'    and d.ie_fluxo_passado = 'S' and c.cd_tipo_recebimento = d.cd_tipo_recebimento and (
				(b.ie_situacao <> '3')
				or ('S' = ie_tit_rec_canc_w)
				) and (b.ie_situacao = '5' AND 'S' = ie_tit_pagar_transf_w) and coalesce(c.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
				('N' = ie_restringe_estab_p)
				or ((
						b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
						or cd_estab_financeiro = wheb_usuario_pck.get_cd_estabelecimento
						) AND 'S' = ie_restringe_estab_p)
				or (b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento AND 'E' = ie_restringe_estab_p)
				) and obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_p and c.nr_titulo = b.nr_titulo and (
				(
					'D' = ie_periodo_p
					--and obter_dia_util_fluxo_caixa(trunc(c.dt_recebimento, 'dd'), wheb_usuario_pck.get_cd_estabelecimento, 'P', ie_tratar_fim_semana_w, ie_fim_semana_passado_w) = dt_referencia_p --1797048
					and CASE WHEN ie_dt_credito_banco_cre_w='S' THEN  coalesce(trunc(c.dt_credito_banco), obter_dia_util_fluxo_caixa(trunc(c.dt_recebimento, 'dd'), wheb_usuario_pck.get_cd_estabelecimento, 'P', ie_tratar_fim_semana_w, ie_fim_semana_passado_w))  ELSE obter_dia_util_fluxo_caixa(trunc(c.dt_recebimento, 'dd'), wheb_usuario_pck.get_cd_estabelecimento, 'P', ie_tratar_fim_semana_w, ie_fim_semana_passado_w) END  = dt_referencia_p
				
					)
				or (
					'M' = ie_periodo_p
					--and trunc(c.dt_recebimento, 'month') = trunc(to_date(dt_referencia_p), 'month')
					and CASE WHEN ie_dt_credito_banco_cre_w='S' THEN  coalesce(trunc(c.dt_credito_banco, 'month'), obter_dia_util_fluxo_caixa(trunc(c.dt_recebimento, 'month'), wheb_usuario_pck.get_cd_estabelecimento, 'P', ie_tratar_fim_semana_w, ie_fim_semana_passado_w))  ELSE obter_dia_util_fluxo_caixa(trunc(c.dt_recebimento, 'dd'), wheb_usuario_pck.get_cd_estabelecimento, 'P', ie_tratar_fim_semana_w, ie_fim_semana_passado_w) END  = trunc(to_date(dt_referencia_p), 'month') )
				) and c.ie_lib_caixa = 'S' and (
				ie_adiant_receb_w in ('A', 'TR')
				or coalesce(c.nr_adiantamento::text, '') = ''
				) and (
				ie_movto_bco_pend_w in ('N', 'A', 'TP')
				or not exists (
					select 1
					from movto_banco_pend_baixa x
					where x.nr_titulo = a.nr_titulo
						and x.nr_seq_baixa = a.nr_sequencia
					)
				) and not exists /* ahoffelder - 06/09/2012 - OS 442630 - ja entra no fluxo pela MOVTO_TRANS_FINANC */
 (
				select 1
				from movto_trans_financ x
				where (
						(x.nr_seq_movto_cartao IS NOT NULL AND x.nr_seq_movto_cartao::text <> '')
						or (x.nr_seq_cheque IS NOT NULL AND x.nr_seq_cheque::text <> '')
						)
					and coalesce(x.nr_seq_titulo_receber::text, '') = ''
					and x.nr_sequencia = c.nr_seq_movto_trans_fin
				) and coalesce(c.nr_seq_retorno::text, '') = '' and 'P' = ie_classif_fluxo_p and 'CR' = ie_integracao_p group by b.nr_titulo,
			b.cd_pessoa_fisica,
			b.cd_cgc,
			b.cd_estabelecimento,
			b.cd_moeda,
			substr(b.ds_observacao_titulo, 1, 255),
			substr(obter_dados_nota_fiscal(b.nr_seq_nf_saida, '0'), 1, 255),
			g.ds_conta
		) alias76
	order by 1;
	
c18 CURSOR FOR	
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			0 nr_titulo,
			a.vl_fluxo vl_titulo,
			substr(obter_descricao_padrao('CONTA_FINANCEIRA', 'DS_CONTA_FINANC', a.cd_conta_financ), 1, 60) ds_pessoa,
			'D' ie_tipo_titulo,
			a.cd_conta_financ,
			a.ie_periodo,
			a.ie_classif_fluxo,
			14 ie_union,
			substr(obter_nome_estabelecimento(cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			'' ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		from fluxo_caixa a
		where a.cd_conta_financ = cd_conta_financ_p
			and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(a.dt_referencia, 'dd'))  ELSE trunc(a.dt_referencia, 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(a.dt_referencia, 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				)
			and (a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
					or 'N' = ie_restringe_estab_p)
			and a.ie_origem = 'D'
			and ie_integracao_p = 'D'
			and ie_classif_fluxo_p = 'P'
			and coalesce(a.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w)
			and a.cd_empresa = cd_empresa_p
		) alias20
	order by 1;

c19 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT distinct 0 nr_ordem_compra,
			0 nr_titulo,
			Obter_valor_fluxo_contrato(a.cd_estabelecimento, b.nr_seq_contrato, b.cd_conta_financ, dt_referencia_p, ie_periodo_p,dt_inicial_p) vl_titulo,
			(substr(a.ds_objeto_contrato, 1, 100) || ' - ' || substr(obter_nome_pf_pj(a.cd_pessoa_contratada, a.cd_cgc_contratado), 1, 60)) ds_pessoa,
			'' ie_tipo_titulo,
			b.cd_conta_financ cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			15 ie_union,
			substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			'' ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa,
			a.nr_sequencia
		from contrato a,
			contrato_regra_pagto b
		where a.nr_sequencia = b.nr_seq_contrato
			and b.cd_conta_financ = cd_conta_financ_p
			and	coalesce(PKG_DATE_UTILS.start_of(b.dt_inicio_vigencia,'dd',0),pkg_date_utils.get_date(1900, 1, 1, 0)) <= CASE WHEN ie_periodo_p='D' THEN  dt_referencia_p  ELSE PKG_DATE_UTILS.end_of(dt_referencia_p, 'MONTH', 0) END
			and	coalesce(PKG_DATE_UTILS.start_of(b.dt_final_vigencia,'dd',0),pkg_date_utils.get_date(2099, 1, 1, 0))	>= CASE WHEN ie_periodo_p='D' THEN  dt_referencia_p  ELSE PKG_DATE_UTILS.start_of(dt_referencia_p,'MONTH', 0) END 
			and ie_integracao_p = 'CO'
			and cd_moeda_empresa_w = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w)
			and (
				a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				)
			and Obter_valor_fluxo_contrato(a.cd_estabelecimento, b.nr_seq_contrato, b.cd_conta_financ, dt_referencia_p, ie_periodo_p,dt_inicial_p) > 0
			and obter_empresa_estab(a.cd_estabelecimento) = cd_empresa_p
			and a.ie_situacao = 'A'
			and b.ie_forma in ('M', 'T', 'F')
			and a.ie_pagar_receber = 'P'
			and coalesce(b.vl_pagto, 0) > 0
			and b.ie_tipo_valor = 'V'
			and 'S' = ie_contrato_p
			and (
				obter_se_conta_financ_estab(b.cd_conta_financ, wheb_usuario_pck.get_cd_estabelecimento, ie_restringe_estab_p) = 'S'
				or ie_restringe_estab_p = 'N'
				)
			and not exists (
				select 1
				from nota_fiscal b,
					nota_fiscal_item a
				where a.nr_sequencia = b.nr_sequencia
					and a.nr_contrato = a.nr_sequencia
					and (b.dt_atualizacao_estoque IS NOT NULL AND b.dt_atualizacao_estoque::text <> '')
					and trunc(b.dt_atualizacao_estoque, 'month') = trunc(to_date(obter_data_venc_contrato(dt_inicial_p)), 'month')
				)
			and not exists (
				select 1 -- se possuir titulo na nota gerada pelo contrato nao exibe o contrato, pois ja entra no titulo.
				from nota_fiscal y,
					titulo_pagar x
				where x.nr_seq_nota_fiscal = y.nr_sequencia
					and y.nr_contrato = a.nr_sequencia
					and (y.dt_atualizacao_estoque IS NOT NULL AND y.dt_atualizacao_estoque::text <> '')
					and	coalesce(x.nr_seq_tributo::text, '') = ''  -- so deve considerar o titulo para pagamento do fornecedor do contrato, nao pode considerar os titulos de tributos gerados a partir deste
					and trunc(x.dt_vencimento_atual, 'month') = trunc(to_date(obter_data_venc_contrato(dt_inicial_p)), 'month')
				)
			and not exists (
				select 1 -- se possuir titulo gerado pelo contrato nao exibe o contrato, pois ja entra no titulo.
				from titulo_pagar x
				where  x.nr_seq_contrato = a.nr_sequencia
				and	coalesce(x.nr_seq_tributo::text, '') = ''  -- so deve considerar o titulo para pagamento do fornecedor do contrato, nao pode considerar os titulos de tributos gerados a partir deste
				and  x.ie_situacao <> 'C' /* OS 2291609 - Ajuste para nao considerar contratos com titulos cancelados */
				and trunc(x.dt_vencimento_atual, 'month') = trunc(to_date(dt_inicial_p), 'month')
			)
			and 'R' = ie_forma_calculo_contrato_w
			and Obter_se_media_regra(b.cd_conta_financ) = 'N'
		) alias46
	order by 1;

c20 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			b.nr_titulo,
			CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'JCP', b.cd_cgc, null, dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  sum((dividir_sem_round((coalesce(a.vl_titulo, (OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric )), ((OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric ))) * c.vl_juros)  ELSE 0 END  +
					CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'MCP', b.cd_cgc, null, dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  sum((dividir_sem_round((coalesce(a.vl_titulo, (OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric )), ((OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric ))) * c.vl_multa)  ELSE 0 END  + 
					CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'DCP', b.cd_cgc, null, dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  sum((dividir_sem_round((coalesce(a.vl_titulo, (OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric )), ((OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric ))) * c.vl_descontos)  ELSE 0 END  + 
					CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'OCP', b.cd_cgc, null, dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  sum((dividir_sem_round((coalesce(a.vl_titulo, (OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric )), ((OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric ))) * c.vl_outros_acrescimos)  ELSE 0 END  +
					CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'ODP', b.cd_cgc, null, dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  sum((dividir_sem_round((coalesce(a.vl_titulo, (OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric )), ((OBTER_DADOS_TIT_PAGAR(b.nr_titulo, 'VT'))::numeric ))) * coalesce(c.VL_OUTRAS_DESPESAS,0))  ELSE 0 END  vl_titulo,
			substr(obter_nome_pf_pj(b.cd_pessoa_fisica, b.cd_cgc), 1, 60) ds_pessoa,
			'CP' ie_tipo_titulo,
			0 cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			16 ie_union,
			substr(obter_nome_estabelecimento(b.cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			b.cd_moeda cd_moeda,
			(cd_moeda_cp_w)::numeric  cd_moeda_padrao,
			substr(b.ds_observacao_titulo, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			substr(obter_dados_nota_fiscal(b.nr_seq_nota_fiscal, '0'), 1, 255) nr_nota_fiscal,
			g.ds_conta ds_conta_baixa
		FROM titulo_pagar b, titulo_pagar_baixa c
LEFT OUTER JOIN titulo_pagar_classif a ON (c.nr_titulo = a.nr_titulo)
LEFT OUTER JOIN banco_estabelecimento_v g ON (c.nr_seq_conta_banco = g.nr_sequencia)
WHERE (cd_conta_financ_p)::numeric  in (obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'JCP', b.cd_cgc, null, dt_referencia_p, b.cd_estabelecimento), obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'MCP', b.cd_cgc, null, dt_referencia_p, b.cd_estabelecimento), obter_conta_financ_regra_fc(cd_empresa_p, 'DCP', b.cd_cgc, null, dt_referencia_p, b.cd_estabelecimento), obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'OCP', b.cd_cgc, null, dt_referencia_p, b.cd_estabelecimento), obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'ODP', b.cd_cgc, null, dt_referencia_p, b.cd_estabelecimento)) and obter_se_filtro_fluxo(c.nr_seq_conta_banco, null, null, wheb_usuario_pck.get_nm_usuario, null) = 'S'   and b.nr_titulo = c.nr_titulo and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(c.dt_baixa, 'dd'))  ELSE trunc(c.dt_baixa, 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(c.dt_baixa, 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				) and ie_integracao_p = 'CP' and cd_moeda_empresa_w = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
				((
						b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
						or cd_estab_financeiro = wheb_usuario_pck.get_cd_estabelecimento
						) AND 'S' = ie_restringe_estab_p)
				or (b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento AND 'E' = ie_restringe_estab_p)
				or ('N' = ie_restringe_estab_p)
				) and obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_p and ie_classif_fluxo_p = 'P' and b.ie_situacao <> 'C' and (
				(b.ie_situacao <> 'T')
				or ('S' = ie_tit_pagar_transf_w)
				) and coalesce(obter_se_tit_pagar_transf(b.nr_titulo), 'N') = 'N' GROUP BY b.nr_titulo,
			substr(obter_nome_pf_pj(b.cd_pessoa_fisica, b.cd_cgc), 1, 60),
			substr(obter_nome_estabelecimento(b.cd_estabelecimento), 1, 255),
			b.cd_estabelecimento,
			b.cd_cgc,
			b.cd_moeda,
			substr(b.ds_observacao_titulo, 1, 255),
			substr(obter_dados_nota_fiscal(b.nr_seq_nota_fiscal, '0'), 1, 255),
			g.ds_conta
		 HAVING sum(CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'JCP', b.cd_cgc, null, dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  c.vl_juros  ELSE 0 END  + 
					CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'MCP', b.cd_cgc, null, dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  c.vl_multa  ELSE 0 END  + 
					CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'DCP', b.cd_cgc, null, dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  c.vl_descontos  ELSE 0 END  + 
					CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'OCP', b.cd_cgc, null, dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  c.vl_outros_acrescimos  ELSE 0 END  +
					CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'ODP', b.cd_cgc, null, dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN   coalesce(c.VL_OUTRAS_DESPESAS,0)  ELSE 0 END ) <> 0
		) alias135
	order by 1;

c21 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		/* ahoffelder - OS 280475 - 10/01/2011 - coloquei esse comando no lugar do comando abaixo dele */

		SELECT 0 nr_ordem_compra,
			nr_titulo,
			vl_titulo,
			substr(obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc), 1, 60) ds_pessoa,
			'CR' ie_tipo_titulo,
			0 cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			17 ie_union,
			substr(obter_nome_estabelecimento(cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			cd_moeda,
			(cd_moeda_cr_w)::numeric  cd_moeda_padrao,
			'' ds_observacao,
			OBTER_VENC_TITULO(null, nr_titulo) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			nr_nota_fiscal,
			ds_conta_baixa
		from (
			select /*+ CHOOSE*/				b.nr_titulo,
				CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'JCR', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio_parametro), dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN sum(dividir_sem_round(coalesce(a.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ), (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ) * c.vl_juros)  ELSE 0 END  +
																CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'MCR', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio_parametro), dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  sum(dividir_sem_round(coalesce(a.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ), (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ) * c.vl_multa)  ELSE 0 END  + 
																CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'VLM', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio_parametro), dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  sum(dividir_sem_round(coalesce(a.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ), (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ) * c.vl_rec_maior)  ELSE 0 END  + 
																CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'DCR', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio_parametro), dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  sum(dividir_sem_round(coalesce(a.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ), (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ) * c.vl_descontos)  ELSE 0 END  + 
																CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'DBCR', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio_parametro), dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  sum(dividir_sem_round(coalesce(a.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ), (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ) * coalesce(c.vl_despesa_bancaria, 0))  ELSE 0 END  + 
																CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'GLO', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio_parametro), dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  sum(dividir_sem_round(coalesce(a.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ), (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ) * coalesce(c.vl_glosa, 0))  ELSE 0 END  vl_titulo,
				b.cd_pessoa_fisica,
				b.cd_cgc,
				b.cd_estabelecimento,
				b.cd_moeda cd_moeda,
				substr(b.ds_observacao_titulo, 1, 255) ds_observacao,
				'' ds_banco,
				substr(obter_dados_nota_fiscal(b.nr_seq_nf_saida, '0'), 1, 255) nr_nota_fiscal,
				g.ds_conta ds_conta_baixa
			FROM conta_paciente e, tipo_recebimento d, titulo_receber_liq c
LEFT OUTER JOIN banco_estabelecimento_v g ON (c.nr_seq_conta_banco = g.nr_sequencia)
, titulo_receber b
LEFT OUTER JOIN titulo_receber_classif a ON (b.nr_titulo = a.nr_titulo)
WHERE b.nr_interno_conta = e.nr_interno_conta and obter_se_filtro_fluxo(c.nr_seq_conta_banco, null, c.nr_seq_caixa_rec, wheb_usuario_pck.get_nm_usuario, null) = 'S'   and coalesce(d.ie_fluxo_passado, 'S') = 'S' and c.cd_tipo_recebimento = d.cd_tipo_recebimento and cd_moeda_empresa_w = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
					(
						'D' = ie_periodo_p
						and CASE WHEN ie_dt_credito_banco_cre_w='S' THEN  coalesce(trunc(c.dt_credito_banco), obter_dia_util_fluxo_caixa(trunc(c.dt_recebimento, 'dd'), wheb_usuario_pck.get_cd_estabelecimento, 'P', ie_tratar_fim_semana_w, ie_fim_semana_passado_w))  ELSE obter_dia_util_fluxo_caixa(trunc(c.dt_recebimento, 'dd'), wheb_usuario_pck.get_cd_estabelecimento, 'P', ie_tratar_fim_semana_w, ie_fim_semana_passado_w) END  = dt_referencia_p
						)
					or (
						'M' = ie_periodo_p
						and CASE WHEN ie_dt_credito_banco_cre_w='S' THEN  coalesce(trunc(c.dt_credito_banco, 'month'), trunc(c.dt_recebimento, 'month'))  ELSE trunc(c.dt_recebimento, 'month') END  = trunc(to_date(dt_referencia_p), 'month')
						)
					) and (
					ie_adiant_receb_w in ('A', 'TR')
					or coalesce(c.nr_adiantamento::text, '') = ''
					) and (
					ie_movto_bco_pend_w in ('N', 'A', 'TP')
					or not exists (
						select 1
						from movto_banco_pend_baixa x
						where x.nr_titulo = a.nr_titulo
							and x.nr_seq_baixa = a.nr_sequencia
						)
					) and not exists /* ahoffelder - 06/09/2012 - OS 442630 - ja entra no fluxo pela MOVTO_TRANS_FINANC */
 (
					select 1
					from movto_trans_financ x
					where (
							(x.nr_seq_movto_cartao IS NOT NULL AND x.nr_seq_movto_cartao::text <> '')
							or (x.nr_seq_cheque IS NOT NULL AND x.nr_seq_cheque::text <> '')
							)
						and coalesce(x.nr_seq_titulo_receber::text, '') = ''
						and x.nr_sequencia = c.nr_seq_movto_trans_fin
					) and coalesce(c.nr_seq_retorno::text, '') = '' and b.nr_titulo = c.nr_titulo and (
					('E' = ie_restringe_estab_p)
					or ((
							b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
							or cd_estab_financeiro = wheb_usuario_pck.get_cd_estabelecimento
							) AND 'S' = ie_restringe_estab_p)
					or (b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento AND 'E' = ie_restringe_estab_p)
					) and (cd_conta_financ_p)::numeric  in (obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'JCR', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio_parametro), dt_referencia_p, b.cd_estabelecimento), 
													 obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'MCR', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio_parametro), dt_referencia_p, b.cd_estabelecimento), 
													 obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'DCR', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio_parametro), dt_referencia_p, b.cd_estabelecimento), 
													 obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'VLM', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio_parametro), dt_referencia_p, b.cd_estabelecimento), 
													 obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'DBCR', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio_parametro), dt_referencia_p, b.cd_estabelecimento), 
													 obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'GLO', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio_parametro), dt_referencia_p, b.cd_estabelecimento)
													 ) and obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_p and b.ie_situacao <> '3' and (b.nr_interno_conta IS NOT NULL AND b.nr_interno_conta::text <> '') and 'P' = ie_classif_fluxo_p and 'CR' = ie_integracao_p group by b.nr_titulo,
				b.cd_pessoa_fisica,
				b.cd_cgc,
				b.cd_estabelecimento,
				b.cd_moeda,
				substr(b.ds_observacao_titulo, 1, 255),
				b.cd_convenio_conta,
				e.cd_convenio_parametro,
				substr(obter_dados_nota_fiscal(b.nr_seq_nf_saida, '0'), 1, 255),
				g.ds_conta
			
			
union all

			
			select b.nr_titulo,
				CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'JCR', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio), dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  sum(dividir_sem_round(coalesce(a.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ), (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ) * c.vl_juros)  ELSE 0 END  + 
								CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'MCR', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio), dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  sum(dividir_sem_round(coalesce(a.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ), (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ) * c.vl_multa)  ELSE 0 END  + 
								CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'VLM', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio), dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  sum(dividir_sem_round(coalesce(a.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ), (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ) * c.vl_rec_maior)  ELSE 0 END  + 
								CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'DCR', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio), dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  sum(dividir_sem_round(coalesce(a.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ), (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ) * c.vl_descontos)  ELSE 0 END  + 
								CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'DBCR', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio), dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  sum(dividir_sem_round(coalesce(a.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ), (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ) * coalesce(c.vl_despesa_bancaria, 0))  ELSE 0 END  + 
								CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'GLO', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio), dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  sum(dividir_sem_round(coalesce(a.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ), (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ) * coalesce(c.vl_glosa, 0))  ELSE 0 END  vl_titulo,
				b.cd_pessoa_fisica,
				b.cd_cgc,
				b.cd_estabelecimento,
				b.cd_moeda cd_moeda,
				substr(b.ds_observacao_titulo, 1, 255) ds_observacao,
				'' ds_banco,
				substr(obter_dados_nota_fiscal(b.nr_seq_nf_saida, '0'), 1, 255) nr_nota_fiscal,
				g.ds_conta ds_conta_baixa
			FROM protocolo_convenio e, tipo_recebimento d, titulo_receber_liq c
LEFT OUTER JOIN banco_estabelecimento_v g ON (c.nr_seq_conta_banco = g.nr_sequencia)
, titulo_receber b
LEFT OUTER JOIN titulo_receber_classif a ON (b.nr_titulo = a.nr_titulo)
WHERE b.nr_seq_protocolo = e.nr_seq_protocolo and obter_se_filtro_fluxo(c.nr_seq_conta_banco, null, c.nr_seq_caixa_rec, wheb_usuario_pck.get_nm_usuario, null) = 'S'   and coalesce(d.ie_fluxo_passado, 'S') = 'S' and c.cd_tipo_recebimento = d.cd_tipo_recebimento and cd_moeda_empresa_w = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
					(
						'D' = ie_periodo_p
						and CASE WHEN ie_dt_credito_banco_cre_w='S' THEN  coalesce(trunc(c.dt_credito_banco), obter_dia_util_fluxo_caixa(trunc(c.dt_recebimento, 'dd'), wheb_usuario_pck.get_cd_estabelecimento, 'P', ie_tratar_fim_semana_w, ie_fim_semana_passado_w))  ELSE obter_dia_util_fluxo_caixa(trunc(c.dt_recebimento, 'dd'), wheb_usuario_pck.get_cd_estabelecimento, 'P', ie_tratar_fim_semana_w, ie_fim_semana_passado_w) END  = dt_referencia_p
						)
					or (
						'M' = ie_periodo_p
						and CASE WHEN ie_dt_credito_banco_cre_w='S' THEN  coalesce(trunc(c.dt_credito_banco, 'month'), trunc(c.dt_recebimento, 'month'))  ELSE trunc(c.dt_recebimento, 'month') END  = trunc(to_date(dt_referencia_p), 'month')
						)
					) and (
					ie_adiant_receb_w in ('A', 'TR')
					or coalesce(c.nr_adiantamento::text, '') = ''
					) and (
					ie_movto_bco_pend_w in ('N', 'A', 'TP')
					or not exists (
						select 1
						from movto_banco_pend_baixa x
						where x.nr_titulo = a.nr_titulo
							and x.nr_seq_baixa = a.nr_sequencia
						)
					) and not exists /* ahoffelder - 06/09/2012 - OS 442630 - ja entra no fluxo pela MOVTO_TRANS_FINANC */
 (
					select 1
					from movto_trans_financ x
					where (
							(x.nr_seq_movto_cartao IS NOT NULL AND x.nr_seq_movto_cartao::text <> '')
							or (x.nr_seq_cheque IS NOT NULL AND x.nr_seq_cheque::text <> '')
							)
						and coalesce(x.nr_seq_titulo_receber::text, '') = ''
						and x.nr_sequencia = c.nr_seq_movto_trans_fin
					) and coalesce(c.nr_seq_retorno::text, '') = '' and b.nr_titulo = c.nr_titulo and (
					('E' = ie_restringe_estab_p)
					or ((
							b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
							or cd_estab_financeiro = wheb_usuario_pck.get_cd_estabelecimento
							) AND 'S' = ie_restringe_estab_p)
					or (b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento AND 'E' = ie_restringe_estab_p)
					) and (cd_conta_financ_p)::numeric  in (obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'JCR', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio), dt_referencia_p, b.cd_estabelecimento), 
													 obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'MCR', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio), dt_referencia_p, b.cd_estabelecimento), 
													 obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'DCR', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio), dt_referencia_p, b.cd_estabelecimento), 
													 obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'VLM', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio), dt_referencia_p, b.cd_estabelecimento), 
													 obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'DBCR', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio), dt_referencia_p, b.cd_estabelecimento), 
													 obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'GLO', b.cd_cgc, coalesce(b.cd_convenio_conta, e.cd_convenio), dt_referencia_p, b.cd_estabelecimento)
													 ) and obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_p and b.ie_situacao <> '3' and (b.nr_seq_protocolo IS NOT NULL AND b.nr_seq_protocolo::text <> '') and coalesce(b.nr_interno_conta::text, '') = '' and 'P' = ie_classif_fluxo_p and 'CR' = ie_integracao_p group by b.nr_titulo,
				b.cd_pessoa_fisica,
				b.cd_cgc,
				b.cd_estabelecimento,
				b.cd_moeda,
				substr(b.ds_observacao_titulo, 1, 255),
				b.cd_convenio_conta,
				e.cd_convenio,
				substr(obter_dados_nota_fiscal(b.nr_seq_nf_saida, '0'), 1, 255),
				g.ds_conta
			
			
union all

			
			select nr_titulo,
				sum(CASE WHEN cd_conta_juros=cd_conta_financ THEN  vl_titulo * vl_juros  ELSE 0 END  + CASE WHEN cd_conta_multa=cd_conta_financ THEN  vl_titulo * vl_multa  ELSE 0 END  + CASE WHEN cd_conta_rec_maior=cd_conta_financ THEN  vl_titulo * vl_rec_maior  ELSE 0 END  + CASE WHEN cd_conta_descontos=cd_conta_financ THEN  vl_titulo * vl_descontos  ELSE 0 END  + CASE WHEN cd_conta_despesa=cd_conta_financ THEN  vl_titulo * vl_despesa_bancaria  ELSE 0 END  + CASE WHEN cd_conta_glosa=cd_conta_financ THEN  vl_titulo * vl_glosa  ELSE 0 END ) vl_titulo,
				cd_pessoa_fisica,
				cd_cgc,
				cd_estabelecimento,
				cd_moeda,
				ds_observacao,
				'' ds_banco,
				nr_nota_fiscal,
				ds_conta_baixa
			from (
				select nr_titulo,
					dividir_sem_round(coalesce(vl_classificacao, vl_titulo), vl_titulo) vl_titulo,
					obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(cd_estabelecimento), 'JCR', cd_cgc, cd_convenio, dt_referencia_p, cd_estabelecimento) cd_conta_juros,
					obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(cd_estabelecimento), 'MCR', cd_cgc, cd_convenio, dt_referencia_p, cd_estabelecimento) cd_conta_multa,
					obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(cd_estabelecimento), 'VLM', cd_cgc, cd_convenio, dt_referencia_p, cd_estabelecimento) cd_conta_rec_maior,
					obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(cd_estabelecimento), 'DCR', cd_cgc, cd_convenio, dt_referencia_p, cd_estabelecimento) cd_conta_descontos,
					obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(cd_estabelecimento), 'DBCR', cd_cgc, cd_convenio, dt_referencia_p, cd_estabelecimento) cd_conta_despesa,
					obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(cd_estabelecimento), 'GLO', cd_cgc, cd_convenio, dt_referencia_p, cd_estabelecimento) cd_conta_glosa,
					vl_juros,
					vl_multa,
					vl_rec_maior,
					vl_descontos,
					vl_despesa_bancaria,
					vl_glosa,
					cd_pessoa_fisica,
					cd_cgc,
					cd_estabelecimento,
					cd_moeda,
					ds_observacao,
					nr_nota_fiscal,
					(cd_conta_financ_p)::numeric  cd_conta_financ,
					ds_conta_baixa
				from (
					select b.nr_titulo,
						coalesce(b.cd_convenio_conta, (select coalesce(t.cd_convenio_parametro,0) from conta_paciente t where b.nr_interno_conta = t.nr_interno_conta)) cd_convenio,
						coalesce((obter_dados_titulo_receber(b.nr_titulo, 'V'))::numeric , 0) vl_titulo,
						b.cd_cgc,
						coalesce(a.vl_classificacao, 0) vl_classificacao,
						coalesce(c.vl_juros, 0) vl_juros,
						coalesce(c.vl_multa, 0) vl_multa,
						coalesce(c.vl_rec_maior, 0) vl_rec_maior,
						coalesce(c.vl_descontos, 0) vl_descontos,
						coalesce(c.vl_despesa_bancaria, 0) vl_despesa_bancaria,
						coalesce(c.vl_glosa, 0) vl_glosa,
						b.cd_pessoa_fisica,
						b.cd_estabelecimento,
						b.cd_moeda,
						substr(b.ds_observacao_titulo, 1, 255) ds_observacao,
						substr(obter_dados_nota_fiscal(b.nr_seq_nf_saida, '0'), 1, 255) nr_nota_fiscal,
						g.ds_conta ds_conta_baixa
					FROM tipo_recebimento d, titulo_receber_liq c
LEFT OUTER JOIN banco_estabelecimento_v g ON (c.nr_seq_conta_banco = g.nr_sequencia)
, titulo_receber b
LEFT OUTER JOIN titulo_receber_classif a ON (b.nr_titulo = a.nr_titulo)
WHERE (
							ie_movto_bco_pend_w in ('N', 'A', 'TP')
							or not exists (
								select 1
								from movto_banco_pend_baixa x
								where x.nr_titulo = a.nr_titulo
									and x.nr_seq_baixa = a.nr_sequencia
								)
							)   and coalesce(d.ie_fluxo_passado, 'S') = 'S' and c.cd_tipo_recebimento = d.cd_tipo_recebimento and cd_moeda_empresa_w = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
							ie_adiant_receb_w in ('A', 'TR')
							or coalesce(c.nr_adiantamento::text, '') = ''
							) and not exists (
							select 1
							from movto_trans_financ x
							where (
									(x.nr_seq_movto_cartao IS NOT NULL AND x.nr_seq_movto_cartao::text <> '')
									or (x.nr_seq_cheque IS NOT NULL AND x.nr_seq_cheque::text <> '')
									)
								and coalesce(x.nr_seq_titulo_receber::text, '') = ''
								and x.nr_sequencia = c.nr_seq_movto_trans_fin
							) and (
							(
								'D' = ie_periodo_p
								and CASE WHEN ie_dt_credito_banco_cre_w='S' THEN  coalesce(trunc(c.dt_credito_banco), obter_dia_util_fluxo_caixa(trunc(c.dt_recebimento, 'dd'), wheb_usuario_pck.get_cd_estabelecimento, 'P', ie_tratar_fim_semana_w, ie_fim_semana_passado_w))  ELSE obter_dia_util_fluxo_caixa(trunc(c.dt_recebimento, 'dd'), wheb_usuario_pck.get_cd_estabelecimento, 'P', ie_tratar_fim_semana_w, ie_fim_semana_passado_w) END  = dt_referencia_p
								)
							or (
								'M' = ie_periodo_p
								and CASE WHEN ie_dt_credito_banco_cre_w='S' THEN  coalesce(trunc(c.dt_credito_banco, 'month'), trunc(c.dt_recebimento, 'month'))  ELSE trunc(c.dt_recebimento, 'month') END  = trunc(to_date(dt_referencia_p), 'month')
								)
							) and substr(obter_se_filtro_fluxo(c.nr_seq_conta_banco, null, c.nr_seq_caixa_rec, wheb_usuario_pck.get_nm_usuario, null), 1, 1) = 'S' and coalesce(c.nr_seq_retorno::text, '') = '' and b.nr_titulo = c.nr_titulo and (
							'N' = ie_restringe_estab_p
							or (
								'S' = ie_restringe_estab_p
								or (
									b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
									or cd_estab_financeiro = wheb_usuario_pck.get_cd_estabelecimento
									)
								)
							or (
								'E' = ie_restringe_estab_p
								or b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
								)
							) and obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_p and b.ie_situacao <> '3' and (b.cd_cgc IS NOT NULL AND b.cd_cgc::text <> '') and coalesce(b.nr_seq_protocolo::text, '') = '' and coalesce(b.nr_interno_conta::text, '') = '' and 'P' = ie_classif_fluxo_p and 'CR' = ie_integracao_p
					 ) alias343
				) alias344
			where cd_conta_financ in (cd_conta_juros, cd_conta_multa, cd_conta_rec_maior, cd_conta_descontos, cd_conta_despesa, cd_conta_glosa)
			group by nr_titulo,
				cd_pessoa_fisica,
				cd_cgc,
				cd_estabelecimento,
				cd_moeda,
				ds_observacao,
				nr_nota_fiscal,
				ds_conta_baixa
			
			
union all

			
			select b.nr_titulo,
				CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'JCR', b.cd_cgc, cd_convenio_conta, dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  sum(dividir_sem_round(coalesce(a.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ), (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ) * c.vl_juros)  ELSE 0 END  + 
								CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'MCR', b.cd_cgc, cd_convenio_conta, dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  sum(dividir_sem_round(coalesce(a.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ), (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ) * c.vl_multa)  ELSE 0 END  + 
								CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'VLM', b.cd_cgc, cd_convenio_conta, dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  sum(dividir_sem_round(coalesce(a.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ), (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ) * c.vl_rec_maior)  ELSE 0 END  + 
								CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'DCR', b.cd_cgc, cd_convenio_conta, dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  sum(dividir_sem_round(coalesce(a.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ), (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ) * c.vl_descontos)  ELSE 0 END  + 
								CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'DBCR', b.cd_cgc, cd_convenio_conta, dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  sum(dividir_sem_round(coalesce(a.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ), (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ) * coalesce(c.vl_despesa_bancaria, 0))  ELSE 0 END  + 
								CASE WHEN obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'GLO', b.cd_cgc, cd_convenio_conta, dt_referencia_p, b.cd_estabelecimento)=(cd_conta_financ_p)::numeric  THEN  sum(dividir_sem_round(coalesce(a.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ), (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric ) * coalesce(c.vl_glosa, 0))  ELSE 0 END  vl_titulo,
				b.cd_pessoa_fisica,
				b.cd_cgc,
				b.cd_estabelecimento,
				b.cd_moeda cd_moeda,
				substr(b.ds_observacao_titulo, 1, 255) ds_observacao,
				'' ds_banco,
				substr(obter_dados_nota_fiscal(b.nr_seq_nf_saida, '0'), 1, 255) nr_nota_fiscal,
				g.ds_conta ds_conta_baixa
			FROM tipo_recebimento d, titulo_receber_liq c
LEFT OUTER JOIN banco_estabelecimento_v g ON (c.nr_seq_conta_banco = g.nr_sequencia)
, titulo_receber b
LEFT OUTER JOIN titulo_receber_classif a ON (b.nr_titulo = a.nr_titulo)
WHERE obter_se_filtro_fluxo(c.nr_seq_conta_banco, null, c.nr_seq_caixa_rec, wheb_usuario_pck.get_nm_usuario, null) = 'S' and coalesce(d.ie_fluxo_passado, 'S') = 'S' and c.cd_tipo_recebimento = d.cd_tipo_recebimento and cd_moeda_empresa_w = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
					(
						'D' = ie_periodo_p
						and CASE WHEN ie_dt_credito_banco_cre_w='S' THEN  coalesce(trunc(c.dt_credito_banco), obter_dia_util_fluxo_caixa(trunc(c.dt_recebimento, 'dd'), wheb_usuario_pck.get_cd_estabelecimento, 'P', ie_tratar_fim_semana_w, ie_fim_semana_passado_w))  ELSE obter_dia_util_fluxo_caixa(trunc(c.dt_recebimento, 'dd'), wheb_usuario_pck.get_cd_estabelecimento, 'P', ie_tratar_fim_semana_w, ie_fim_semana_passado_w) END  = dt_referencia_p
						)
					or (
						'M' = ie_periodo_p
						and CASE WHEN ie_dt_credito_banco_cre_w='S' THEN  coalesce(trunc(c.dt_credito_banco, 'month'), trunc(c.dt_recebimento, 'month'))  ELSE trunc(c.dt_recebimento, 'month') END  = trunc(to_date(dt_referencia_p), 'month')
						)
					) and (
					ie_adiant_receb_w in ('A', 'TR')
					or coalesce(c.nr_adiantamento::text, '') = ''
					) and (
					ie_movto_bco_pend_w in ('N', 'A', 'TP')
					or not exists (
						select 1
						from movto_banco_pend_baixa x
						where x.nr_titulo = a.nr_titulo
							and x.nr_seq_baixa = a.nr_sequencia
						)
					) and not exists /* ahoffelder - 06/09/2012 - OS 442630 - ja entra no fluxo pela MOVTO_TRANS_FINANC */
 (
					select 1
					from movto_trans_financ x
					where (
							(x.nr_seq_movto_cartao IS NOT NULL AND x.nr_seq_movto_cartao::text <> '')
							or (x.nr_seq_cheque IS NOT NULL AND x.nr_seq_cheque::text <> '')
							)
						and coalesce(x.nr_seq_titulo_receber::text, '') = ''
						and x.nr_sequencia = c.nr_seq_movto_trans_fin
					) and coalesce(c.nr_seq_retorno::text, '') = '' and b.nr_titulo = c.nr_titulo and (
					('E' = ie_restringe_estab_p)
					or ((
							b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
							or cd_estab_financeiro = wheb_usuario_pck.get_cd_estabelecimento
							) AND 'S' = ie_restringe_estab_p)
					or (b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento AND 'E' = ie_restringe_estab_p)
					) and (cd_conta_financ_p)::numeric  in (obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'JCR', b.cd_cgc, cd_convenio_conta, dt_referencia_p, b.cd_estabelecimento), 
													 obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'MCR', b.cd_cgc, cd_convenio_conta, dt_referencia_p, b.cd_estabelecimento), 
													 obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'DCR', b.cd_cgc, cd_convenio_conta, dt_referencia_p, b.cd_estabelecimento), 
													 obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'VLM', b.cd_cgc, cd_convenio_conta, dt_referencia_p, b.cd_estabelecimento), 
													 obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'DBCR', b.cd_cgc, cd_convenio_conta, dt_referencia_p, b.cd_estabelecimento), 
													 obter_conta_financ_regra_fc(OBTER_EMPRESA_ESTAB(b.cd_estabelecimento), 'GLO', b.cd_cgc, cd_convenio_conta, dt_referencia_p, b.cd_estabelecimento)) and obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_p and b.ie_situacao <> '3' and coalesce(b.cd_cgc::text, '') = '' and coalesce(b.nr_seq_protocolo::text, '') = '' and coalesce(b.nr_interno_conta::text, '') = '' and 'P' = ie_classif_fluxo_p and 'CR' = ie_integracao_p group by b.nr_titulo,
				b.cd_pessoa_fisica,
				b.cd_cgc,
				b.cd_estabelecimento,
				b.cd_moeda,
				substr(b.ds_observacao_titulo, 1, 255),
				b.cd_convenio_conta,
				substr(obter_dados_nota_fiscal(b.nr_seq_nf_saida, '0'), 1, 255),
				g.ds_conta
			) alias467
		where vl_titulo <> 0
		) alias468
	order by 1;

c22 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			0 nr_titulo,
			dividir_sem_round(coalesce(c.vl_classificacao, b.vl_transacao), b.vl_transacao) * CASE WHEN coalesce(d.ie_despesa_cartao, 'N')='S' THEN  coalesce(a.vl_baixa, 0) + coalesce(a.vl_despesa, 0)  ELSE a.vl_baixa END  vl_titulo,
			substr(obter_nome_pf_pj(b.cd_pessoa_fisica, b.cd_cgc), 1, 100) ds_pessoa,
			'' ie_tipo_titulo,
			coalesce(c.cd_conta_financ, obter_conta_financ_cartao_cr(b.nr_sequencia)) cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			18 ie_union,
			substr(obter_nome_estabelecimento(b.cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			b.nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			substr(coalesce(a.ds_observacao, b.ds_observacao), 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		FROM parametro_fluxo_caixa d, movto_cartao_cr_baixa a, movto_cartao_cr b
LEFT OUTER JOIN movto_cartao_cr_classif c ON (b.nr_sequencia = c.nr_seq_movto)
WHERE a.nr_seq_movto = b.nr_sequencia and d.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento and obter_se_filtro_fluxo(a.nr_seq_conta_banco, null, null, wheb_usuario_pck.get_nm_usuario, null) = 'S'  and cd_moeda_empresa_w = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
				b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				) and coalesce(c.cd_conta_financ, obter_conta_financ_cartao_cr(b.nr_sequencia)) = (cd_conta_financ_p)::numeric and obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_p and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(a.dt_baixa, 'dd'))  ELSE trunc(a.dt_baixa, 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(a.dt_baixa, 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				) and coalesce(b.dt_cancelamento::text, '') = '' and (b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') and 'CR' = ie_integracao_p and ie_classif_fluxo_p = 'P'
		 ) alias35
	order by 1;

c23 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			/* Cheques a vista */

			0 nr_titulo,
			CASE WHEN obter_se_moeda_estrang(cd_moeda_estrang_p,cd_moeda_empresa_w)='S' THEN dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0)  ELSE coalesce(b.vl_classificacao, a.vl_cheque) END  vl_titulo,
			substr(obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc), 1, 100) ds_pessoa,
			'' ie_tipo_titulo,
			coalesce(b.cd_conta_avista, obter_conta_financ_cheque_cr(a.nr_seq_cheque, 0)) cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			19 ie_union,
			substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
			a.nr_cheque,
			'' nr_autorizacao,
			a.cd_moeda cd_moeda,
			(cd_moeda_cr_w)::numeric  cd_moeda_padrao,
			substr(a.ds_observacao, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		FROM cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE (
				a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				) and obter_se_filtro_fluxo(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, wheb_usuario_pck.get_nm_usuario, null) = 'S' and obter_empresa_estab(a.cd_estabelecimento) = cd_empresa_p and obter_se_cheque_cr_avista(a.nr_seq_cheque) = 'S' and coalesce(a.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  trunc(obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, coalesce(a.dt_prev_desbloqueio, coalesce(a.dt_vencimento_atual, a.dt_vencimento))))  ELSE trunc(coalesce(a.dt_prev_desbloqueio, coalesce(a.dt_vencimento_atual, a.dt_vencimento)), 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(coalesce(a.dt_prev_desbloqueio, coalesce(a.dt_vencimento_atual, a.dt_vencimento)), 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				) and coalesce(b.cd_conta_avista, obter_conta_financ_cheque_cr(a.nr_seq_cheque, 0)) = (cd_conta_financ_p)::numeric  and 'CR' = ie_integracao_p and ie_classif_fluxo_p = 'P'
		 ) alias41
	order by 1;

c24 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			/* Cheques custodia */

			0 nr_titulo,
			coalesce(b.vl_classificacao, a.vl_cheque) vl_titulo,
			substr(obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc), 1, 100) ds_pessoa,
			'' ie_tipo_titulo,
			coalesce(b.cd_conta_custodia, obter_conta_financ_cheque_cr(a.nr_seq_cheque, 11)) cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			19.5 ie_union,
			substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
			a.nr_cheque,
			'' nr_autorizacao,
			a.cd_moeda cd_moeda,
			(cd_moeda_cr_w)::numeric  cd_moeda_padrao,
			substr(a.ds_observacao, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		FROM cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE (
				a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				) and obter_se_filtro_fluxo(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, wheb_usuario_pck.get_nm_usuario, null) = 'S' and obter_empresa_estab(a.cd_estabelecimento) = cd_empresa_p and obter_se_cheque_cr_avista(a.nr_seq_cheque) = 'S' and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(a.dt_custodia))  ELSE trunc(a.dt_custodia, 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(a.dt_custodia, 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				) and coalesce(b.cd_conta_custodia, obter_conta_financ_cheque_cr(a.nr_seq_cheque, 11)) = (cd_conta_financ_p)::numeric  and 'CR' = ie_integracao_p and ie_classif_fluxo_p = 'P'
		 ) alias29
	order by 1;

c25 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			/* DEPOSITO DO CHEQUE NAO A VISTA */

			0 nr_titulo,
			CASE WHEN obter_se_moeda_estrang(cd_moeda_estrang_p,cd_moeda_empresa_w)='S' THEN dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0)  ELSE coalesce(b.vl_classificacao, a.vl_cheque) END  vl_titulo,
			substr(obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc), 1, 100) ds_pessoa,
			'' ie_tipo_titulo,
			coalesce(b.cd_conta_dep, obter_conta_financ_cheque_cr(a.nr_seq_cheque, 2)) cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			20 ie_union,
			substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
			a.nr_cheque,
			'' nr_autorizacao,
			a.cd_moeda cd_moeda,
			(cd_moeda_cr_w)::numeric  cd_moeda_padrao,
			substr(a.ds_observacao, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		FROM cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE (
				a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				) and obter_se_filtro_fluxo(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, wheb_usuario_pck.get_nm_usuario, null) = 'S' and obter_empresa_estab(a.cd_estabelecimento) = cd_empresa_p and obter_se_cheque_cr_avista(a.nr_seq_cheque) = 'N' and coalesce(a.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(coalesce(a.dt_prev_desbloqueio, a.dt_deposito)))  ELSE trunc(coalesce(a.dt_prev_desbloqueio, a.dt_deposito), 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(coalesce(a.dt_prev_desbloqueio, a.dt_deposito), 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				) and coalesce(b.cd_conta_dep, obter_conta_financ_cheque_cr(a.nr_seq_cheque, 2)) = (cd_conta_financ_p)::numeric and (a.dt_deposito IS NOT NULL AND a.dt_deposito::text <> '')  and 'CR' = ie_integracao_p and ie_classif_fluxo_p = 'P'
		 ) alias39
	order by 1;

c26 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			/* DEVOLUCAO DO CHEQUE */

			0 nr_titulo,
			CASE WHEN obter_se_moeda_estrang(cd_moeda_estrang_p,cd_moeda_empresa_w)='S' THEN dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0)  ELSE coalesce(b.vl_classificacao, a.vl_cheque) END  vl_titulo,
			substr(obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc), 1, 100) ds_pessoa,
			'' ie_tipo_titulo,
			coalesce(b.cd_conta_dev, obter_conta_financ_cheque_cr(a.nr_seq_cheque, 3)) cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			21 ie_union,
			substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
			a.nr_cheque,
			'' nr_autorizacao,
			a.cd_moeda cd_moeda,
			(cd_moeda_cr_w)::numeric  cd_moeda_padrao,
			substr(a.ds_observacao, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		FROM cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE (
				a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				) and obter_se_filtro_fluxo(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, wheb_usuario_pck.get_nm_usuario, null) = 'S' and coalesce(a.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and obter_empresa_estab(a.cd_estabelecimento) = cd_empresa_p and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(a.dt_devolucao_banco, 'dd'))  ELSE trunc(a.dt_devolucao_banco, 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(a.dt_devolucao_banco, 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				) and coalesce(b.cd_conta_dev, obter_conta_financ_cheque_cr(a.nr_seq_cheque, 3)) = (cd_conta_financ_p)::numeric  and 'CR' = ie_integracao_p and ie_classif_fluxo_p = 'P'
		 ) alias34
	order by 1;

c27 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			/* REAPRESENTACAO DO CHEQUE */

			0 nr_titulo,
			CASE WHEN obter_se_moeda_estrang(cd_moeda_estrang_p,cd_moeda_empresa_w)='S' THEN dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0)  ELSE coalesce(b.vl_classificacao, a.vl_cheque) END  vl_titulo,
			substr(obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc), 1, 100) ds_pessoa,
			'' ie_tipo_titulo,
			coalesce(b.cd_conta_reap, obter_conta_financ_cheque_cr(a.nr_seq_cheque, 4)) cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			22 ie_union,
			substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
			a.nr_cheque,
			'' nr_autorizacao,
			a.cd_moeda cd_moeda,
			(cd_moeda_cr_w)::numeric  cd_moeda_padrao,
			substr(a.ds_observacao, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		FROM cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE (
				a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				) and obter_se_filtro_fluxo(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, wheb_usuario_pck.get_nm_usuario, null) = 'S' and obter_empresa_estab(a.cd_estabelecimento) = cd_empresa_p and coalesce(a.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(coalesce(a.dt_prev_seg_desbloqueio, a.dt_reapresentacao), 'dd'))  ELSE trunc(coalesce(a.dt_prev_seg_desbloqueio, a.dt_reapresentacao), 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(coalesce(a.dt_prev_seg_desbloqueio, a.dt_reapresentacao), 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				) and coalesce(b.cd_conta_reap, obter_conta_financ_cheque_cr(a.nr_seq_cheque, 4)) = (cd_conta_financ_p)::numeric  and 'CR' = ie_integracao_p and ie_classif_fluxo_p = 'P'
		 ) alias37
	order by 1;

c28 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			/* SEGUNDA DEVOLUCAO */

			0 nr_titulo,
			CASE WHEN obter_se_moeda_estrang(cd_moeda_estrang_p,cd_moeda_empresa_w)='S' THEN dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0)  ELSE coalesce(b.vl_classificacao, a.vl_cheque) END  vl_titulo,
			substr(obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc), 1, 100) ds_pessoa,
			'' ie_tipo_titulo,
			coalesce(b.cd_conta_seg_dev, obter_conta_financ_cheque_cr(a.nr_seq_cheque, 5)) cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			23 ie_union,
			substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
			a.nr_cheque,
			'' nr_autorizacao,
			a.cd_moeda cd_moeda,
			(cd_moeda_cr_w)::numeric  cd_moeda_padrao,
			substr(a.ds_observacao, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		FROM cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE (
				a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				) and obter_se_filtro_fluxo(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, wheb_usuario_pck.get_nm_usuario, null) = 'S' and obter_empresa_estab(a.cd_estabelecimento) = cd_empresa_p and coalesce(a.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(a.dt_seg_devolucao, 'dd'))  ELSE trunc(a.dt_seg_devolucao, 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(a.dt_seg_devolucao, 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				) and coalesce(b.cd_conta_seg_dev, obter_conta_financ_cheque_cr(a.nr_seq_cheque, 5)) = (cd_conta_financ_p)::numeric  and 'CR' = ie_integracao_p and ie_classif_fluxo_p = 'P'
		 ) alias34
	order by 1;

c29 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			/* SEGUNDA REAPRESENTACAO DO CHEQUE */

			0 nr_titulo,
			CASE WHEN obter_se_moeda_estrang(cd_moeda_estrang_p,cd_moeda_empresa_w)='S' THEN dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0)  ELSE coalesce(b.vl_classificacao, a.vl_cheque) END  vl_titulo,
			substr(obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc), 1, 100) ds_pessoa,
			'' ie_tipo_titulo,
			coalesce(b.cd_conta_seg_reap, obter_conta_financ_cheque_cr(a.nr_seq_cheque, 9)) cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			24 ie_union,
			substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
			a.nr_cheque,
			'' nr_autorizacao,
			a.cd_moeda cd_moeda,
			(cd_moeda_cr_w)::numeric  cd_moeda_padrao,
			substr(a.ds_observacao, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		FROM cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE (
				a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				) and obter_se_filtro_fluxo(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, wheb_usuario_pck.get_nm_usuario, null) = 'S' and obter_empresa_estab(a.cd_estabelecimento) = cd_empresa_p and coalesce(a.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(coalesce(a.dt_prev_terc_desbloqueio, a.dt_seg_reapresentacao), 'dd'))  ELSE trunc(coalesce(a.dt_prev_terc_desbloqueio, a.dt_seg_reapresentacao), 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(coalesce(a.dt_prev_terc_desbloqueio, a.dt_seg_reapresentacao), 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				) and coalesce(b.cd_conta_seg_reap, obter_conta_financ_cheque_cr(a.nr_seq_cheque, 9)) = (cd_conta_financ_p)::numeric  and 'CR' = ie_integracao_p and ie_classif_fluxo_p = 'P'
		 ) alias37
	order by 1;
	
c30 CURSOR FOR	
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			/* TERCEIRA DEVOLUCAO */

			0 nr_titulo,
			CASE WHEN obter_se_moeda_estrang(cd_moeda_estrang_p,cd_moeda_empresa_w)='S' THEN dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0)  ELSE coalesce(b.vl_classificacao, a.vl_cheque) END  vl_titulo,
			substr(obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc), 1, 100) ds_pessoa,
			'' ie_tipo_titulo,
			coalesce(b.cd_conta_terc_dev, obter_conta_financ_cheque_cr(a.nr_seq_cheque, 10)) cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			25 ie_union,
			substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
			a.nr_cheque,
			'' nr_autorizacao,
			a.cd_moeda cd_moeda,
			(cd_moeda_cr_w)::numeric  cd_moeda_padrao,
			substr(a.ds_observacao, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		FROM cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE (
				a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				) and obter_se_filtro_fluxo(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, wheb_usuario_pck.get_nm_usuario, null) = 'S' and obter_empresa_estab(a.cd_estabelecimento) = cd_empresa_p and coalesce(a.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(a.dt_terc_devolucao, 'dd'))  ELSE trunc(a.dt_terc_devolucao, 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(a.dt_terc_devolucao, 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				) and coalesce(b.cd_conta_terc_dev, obter_conta_financ_cheque_cr(a.nr_seq_cheque, 10)) = (cd_conta_financ_p)::numeric  and 'CR' = ie_integracao_p and ie_classif_fluxo_p = 'P'
		 ) alias34
	order by 1;

c31 CURSOR FOR	
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			/* DEVOLUCAO AO PACIENTE*/

			0 nr_titulo,
			CASE WHEN obter_se_moeda_estrang(cd_moeda_estrang_p,cd_moeda_empresa_w)='S' THEN dividir_sem_round(coalesce(b.vl_classificacao,a.vl_cheque),a.vl_cheque) * coalesce(a.vl_cheque_estrang,0)  ELSE coalesce(b.vl_classificacao, a.vl_cheque) END  vl_titulo,
			substr(obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc), 1, 100) ds_pessoa,
			'' ie_tipo_titulo,
			coalesce(b.cd_conta_dev_pac, obter_conta_financ_cheque_cr(a.nr_seq_cheque, 6)) cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			26 ie_union,
			substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
			a.nr_cheque,
			'' nr_autorizacao,
			a.cd_moeda cd_moeda,
			(cd_moeda_cr_w)::numeric  cd_moeda_padrao,
			substr(a.ds_observacao, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		FROM cheque_cr a
LEFT OUTER JOIN cheque_cr_classif b ON (a.nr_seq_cheque = b.nr_seq_cheque)
WHERE (
				a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				) and obter_se_filtro_fluxo(null, a.nr_seq_cheque, a.nr_seq_caixa_rec, wheb_usuario_pck.get_nm_usuario, null) = 'S' and obter_empresa_estab(a.cd_estabelecimento) = cd_empresa_p and coalesce(a.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(a.dt_devolucao, 'dd'))  ELSE trunc(a.dt_devolucao, 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(a.dt_devolucao, 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				) and coalesce(b.cd_conta_dev_pac, obter_conta_financ_cheque_cr(a.nr_seq_cheque, 6)) = (cd_conta_financ_p)::numeric  and 'CR' = ie_integracao_p and ie_classif_fluxo_p = 'P'
		 ) alias34
	order by 1;

c32 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			0 nr_titulo,
			CASE WHEN obter_se_moeda_estrang(cd_moeda_estrang_p,cd_moeda_empresa_w)='S' THEN coalesce(d.vl_transacao_estrang, a.vl_transacao_estrang)  ELSE coalesce(d.vl_transacao, a.vl_transacao) END  vl_titulo,
			substr(b.ds_caixa || ' - ' || c.ds_transacao || ' - ' || obter_nome_pf_pj(null, a.cd_cgc), 1, 255) ds_pessoa,
			'' ie_tipo_titulo,
			coalesce(a.cd_conta_financ, coalesce(d.cd_conta_financ, c.cd_conta_financ)) cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			27 ie_union,
			substr(obter_nome_estabelecimento(b.cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			substr(a.ds_historico, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			substr(obter_movto_trans_financ_od(a.nr_sequencia, 'D'), 1, 255) ds_orig_dest,
			substr(obter_nome_conta_estab(a.nr_seq_banco_od), 1, 255) ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		FROM transacao_financeira c, caixa b, movto_trans_financ a
LEFT OUTER JOIN movto_trans_financ_cc d ON (a.nr_sequencia = d.nr_seq_movto_trans)
WHERE a.nr_seq_caixa = b.nr_sequencia and obter_se_filtro_fluxo(a.nr_seq_banco, null, a.nr_seq_caixa_rec, wheb_usuario_pck.get_nm_usuario, a.nr_seq_caixa) = 'S' and a.nr_seq_trans_financ = c.nr_sequencia  and coalesce(d.vl_transacao, a.vl_transacao) <> 0 and coalesce(a.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and ( ( (ie_restringe_estab_p = 'E') and (obter_estab_movto_trans_financ(a.nr_seq_caixa, a.nr_seq_banco) = wheb_usuario_pck.get_cd_estabelecimento) ) or
				  ( (ie_restringe_estab_p = 'S') and ( (obter_estab_movto_trans_financ(a.nr_seq_caixa, a.nr_seq_banco) = wheb_usuario_pck.get_cd_estabelecimento) or (obter_estab_financeiro(obter_estab_movto_trans_financ(a.nr_seq_caixa, a.nr_seq_banco)) = wheb_usuario_pck.get_cd_estabelecimento) ) ) or (ie_restringe_estab_p = 'N') ) and coalesce(a.nr_seq_titulo_pagar::text, '') = '' and coalesce(a.nr_seq_titulo_receber::text, '') = '' and (
				coalesce(a.nr_seq_conv_receb::text, '') = ''
				or 'N' = ie_convenio_receb_w
				) and (coalesce(b.ie_movto_fluxo, 'S') = 'S') and (
				not exists (
					select 1
					from titulo_pagar_adiant x
					where x.nr_adiantamento = a.nr_adiant_pago
					)
				or ie_adiant_pago_w = 'CB'
				) and (
				ie_adiant_pago_w in ('A', 'CB')
				or coalesce(a.nr_adiant_pago::text, '') = ''
				) and (
				not exists (
					select 1
					from titulo_receber_liq x
					where x.nr_adiantamento = a.nr_adiantamento
					)
				or ie_adiant_receb_w = 'CB'
				) and (
				ie_adiant_receb_w in ('A', 'CB')
				or coalesce(a.nr_adiantamento::text, '') = ''
				) and (
				not exists (
					select 1
					from movto_banco_pend x
					where x.nr_seq_movto_trans_fin = a.nr_sequencia
						and x.vl_saldo = 0
						and ie_movto_bco_pend_w in ('A', 'TP')
					)
				or ie_movto_bco_pend_w in ('CB', 'N')
				) and obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_p and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(a.dt_transacao, 'dd'))  ELSE trunc(a.dt_transacao, 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(a.dt_transacao, 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				) and coalesce(a.cd_conta_financ, coalesce(d.cd_conta_financ, c.cd_conta_financ)) = (cd_conta_financ_p)::numeric and 'T' = ie_integracao_p and ie_classif_fluxo_p = 'P' and (coalesce(a.ie_origem_lancamento, CASE WHEN coalesce(a.nr_seq_caixa::text, '') = '' THEN  'C'  ELSE 'T' END ) = CASE WHEN coalesce(a.nr_seq_caixa::text, '') = '' THEN  'C'  ELSE 'T' END ) /* Edgar 31/03/2008, OS 87684 */
 ) alias73
	order by 1;

c33 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			0 nr_titulo,
			CASE WHEN obter_se_moeda_estrang(cd_moeda_estrang_p,cd_moeda_empresa_w)='S' THEN coalesce(d.vl_transacao_estrang, a.vl_transacao_estrang)  ELSE coalesce(d.vl_transacao, a.vl_transacao) END  vl_titulo,
			substr(b.ds_banco || ' - ' || c.ds_transacao || ' - ' || obter_nome_pf_pj(null, a.cd_cgc), 1, 255) ds_pessoa,
			'' ie_tipo_titulo,
			coalesce(a.cd_conta_financ, coalesce(d.cd_conta_financ, c.cd_conta_financ)) cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			28 ie_union,
			substr(obter_nome_estabelecimento(coalesce(b.cd_estabelecimento,wheb_usuario_pck.get_cd_estabelecimento)), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			substr(a.ds_historico, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			substr(obter_movto_trans_financ_od(a.nr_sequencia, 'D'), 1, 255) ds_orig_Dest,
			substr(obter_nome_conta_estab(a.nr_seq_banco_od), 1, 255) ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		FROM transacao_financeira c, banco_estabelecimento_v b, movto_trans_financ a
LEFT OUTER JOIN movto_trans_financ_cc d ON (a.nr_sequencia = d.nr_seq_movto_trans)
WHERE a.nr_seq_banco = b.nr_sequencia and obter_se_filtro_fluxo(a.nr_seq_banco, null, null, wheb_usuario_pck.get_nm_usuario, null) = 'S' and a.nr_seq_trans_financ = c.nr_sequencia  and coalesce(d.vl_transacao, a.vl_transacao) <> 0 and coalesce(a.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and (
				coalesce(b.cd_estabelecimento,wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				) and coalesce(a.nr_seq_titulo_pagar::text, '') = '' and coalesce(a.nr_seq_titulo_receber::text, '') = '' and (
				coalesce(a.nr_seq_conv_receb::text, '') = ''
				or 'N' = ie_convenio_receb_w
				) and (
				not exists (
					select 1
					from titulo_pagar_adiant x
					where x.nr_adiantamento = a.nr_adiant_pago
					)
				or ie_adiant_pago_w = 'CB'
				) and (
				ie_adiant_pago_w in ('A', 'CB')
				or coalesce(a.nr_adiant_pago::text, '') = ''
				) and (
				not exists (
					select 1
					from titulo_receber_liq x
					where x.nr_adiantamento = a.nr_adiantamento
					)
				or ie_adiant_receb_w = 'CB'
				) and (
				ie_adiant_receb_w in ('A', 'CB')
				or coalesce(a.nr_adiantamento::text, '') = ''
				) and (
				not exists (
					select 1
					from movto_banco_pend x
					where x.nr_seq_movto_trans_fin = a.nr_sequencia
						and x.vl_saldo = 0
						and ie_movto_bco_pend_w in ('A', 'TP')
					)
				or ie_movto_bco_pend_w in ('CB', 'N')
				) and b.cd_empresa			= cd_empresa_p and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(a.dt_transacao, 'dd'))  ELSE trunc(a.dt_transacao, 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(a.dt_transacao, 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				) and coalesce(a.cd_conta_financ, coalesce(d.cd_conta_financ, c.cd_conta_financ)) = (cd_conta_financ_p)::numeric and 'CB' = ie_integracao_p and ie_classif_fluxo_p = 'P' and (coalesce(a.ie_origem_lancamento, CASE WHEN coalesce(a.nr_seq_caixa::text, '') = '' THEN  'C'  ELSE 'T' END ) = CASE WHEN coalesce(a.nr_seq_caixa::text, '') = '' THEN  'C'  ELSE 'T' END ) /* Edgar 31/03/2008, OS 87684  - aamfirmo em 09/09/2015 tirei o nvl que considerava a.ie_origem_lancamento OS 878477 --Nao pode ser retirado, ajustado ponto que gerava transacao do tipo T para o controle bancario*/
 ) alias59
	order by 1;

c34 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			0 nr_titulo,
			CASE WHEN obter_se_moeda_estrang(cd_moeda_estrang_p,cd_moeda_empresa_w)='S' THEN coalesce(a.vl_moeda_original,0)  ELSE coalesce(CASE WHEN a.vl_deposito=0 THEN  a.vl_recebimento  ELSE a.vl_deposito END , 0) END  vl_titulo,
			b.ds_convenio ds_pessoa,
			'' ie_tipo_titulo,
			obter_conta_financ_conv_receb(a.cd_estabelecimento, a.cd_convenio) cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			29 ie_union,
			substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			substr(a.ds_observacao, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		from convenio b,
			convenio_receb a
		where a.cd_convenio = b.cd_convenio
			and obter_se_filtro_fluxo(a.nr_seq_conta_banco, null, null, wheb_usuario_pck.get_nm_usuario, null) = 'S'
			and CASE WHEN a.vl_deposito=0 THEN  a.vl_recebimento  ELSE a.vl_deposito END  <> 0
			and (
				a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				)
			and obter_empresa_estab(a.cd_estabelecimento) = cd_empresa_p
			and coalesce(a.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w)
			and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(coalesce(coalesce(a.dt_recebimento, a.DT_LIBERACAO), a.dt_fluxo_caixa), 'dd'))  ELSE trunc(coalesce(coalesce(a.dt_recebimento, a.DT_LIBERACAO), a.dt_fluxo_caixa), 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(coalesce(coalesce(a.dt_recebimento, a.DT_LIBERACAO), a.dt_fluxo_caixa), 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				)
			and obter_conta_financ_conv_receb(a.cd_estabelecimento, a.cd_convenio) = (cd_conta_financ_p)::numeric
			and 'RC' = ie_integracao_p
			and ie_classif_fluxo_p = 'P'
			and coalesce(a.ie_integrar_cb_fluxo, 'S') = 'S'
			and ie_convenio_receb_w = 'S'
		) alias34
	order by 1;

c35 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			0 nr_titulo,
			(a.VL_ESTORNO * - 1) vl_titulo,
			c.ds_convenio ds_pessoa,
			'' ie_tipo_titulo,
			obter_conta_financ_conv_receb(b.cd_estabelecimento, b.cd_convenio) cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			30 ie_union,
			substr(obter_nome_estabelecimento(b.cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			substr(b.ds_observacao, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		from convenio c,
			convenio_receb b,
			convenio_receb_estorno a
		where b.cd_convenio = c.cd_convenio
			and obter_se_filtro_fluxo(b.nr_seq_conta_banco, null, null, wheb_usuario_pck.get_nm_usuario, null) = 'S'
			and a.nr_seq_receb = b.nr_sequencia
			and a.vl_estorno <> 0
			and coalesce(b.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w)
			and (
				b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				)
			and obter_empresa_estab(b.cd_estabelecimento) = cd_empresa_p
			and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(a.DT_ESTORNO, 'dd'))  ELSE trunc(a.DT_ESTORNO, 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(a.DT_ESTORNO, 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				)
			and obter_conta_financ_conv_receb(b.cd_estabelecimento, b.cd_convenio) = (cd_conta_financ_p)::numeric
			and 'RC' = ie_integracao_p
			and ie_classif_fluxo_p = 'P'
			and coalesce(b.ie_integrar_cb_fluxo, 'S') = 'S'
			and ie_convenio_receb_w = 'S'
		) alias26
	order by 1;

c36 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			0 nr_titulo,
			CASE WHEN obter_se_moeda_estrang(cd_moeda_estrang_p,cd_moeda_empresa_w)='S' THEN a.vl_cheque_estrang  ELSE a.vl_cheque END  vl_titulo,
			substr(coalesce(a.ds_destinatario, obter_nome_pf_pj(a.cd_pessoa_destinatario, a.cd_cgc_destinatario)), 1, 255) ds_pessoa,
			'' ie_tipo_titulo,
			obter_conta_financ_cheque_cp(a.nr_sequencia, 1) cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			31 ie_union,
			substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
			a.nr_cheque nr_cheque,
			'' nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			substr(a.ds_observacao, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		from cheque a
		where (
				a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				)
			and obter_se_filtro_fluxo(a.nr_seq_conta_banco, null, null, wheb_usuario_pck.get_nm_usuario, null) = 'S'
			and obter_empresa_estab(a.cd_estabelecimento) = cd_empresa_p
			and (
				coalesce(a.dt_compensacao::text, '') = ''
				or dt_compensacao > dt_referencia_p
				)
			and coalesce(a.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w)
			and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(dt_emissao, 'dd'))  ELSE trunc(dt_emissao, 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(dt_emissao, 'dd') = trunc(to_date(dt_referencia_p), 'month')
					)
				)
			and obter_conta_financ_cheque_cp(a.nr_sequencia, 1) = (cd_conta_financ_p)::numeric
			and 'CP' = ie_integracao_p
			and ie_classif_fluxo_p = 'P'
			and (
				(ie_cheque_cp_mes_w = 'N')
				or (trunc(dt_emissao, 'month') <> trunc(coalesce(a.dt_compensacao, add_months(a.dt_emissao, 1)), 'month'))
				)
		) alias37
	order by 1;

c37 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			0 nr_titulo,
			CASE WHEN obter_se_moeda_estrang(cd_moeda_estrang_p,cd_moeda_empresa_w)='S' THEN a.vl_cheque_estrang  ELSE a.vl_cheque END  vl_titulo,
			substr(coalesce(a.ds_destinatario, obter_nome_pf_pj(a.cd_pessoa_destinatario, a.cd_cgc_destinatario)), 1, 255) ds_pessoa,
			'' ie_tipo_titulo,
			obter_conta_financ_cheque_cp(a.nr_sequencia, 2) cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			32 ie_union,
			substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
			a.nr_cheque nr_cheque,
			'' nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			substr(a.ds_observacao, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		from cheque a
		where (
				a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				)
			and obter_se_filtro_fluxo(a.nr_seq_conta_banco, null, null, wheb_usuario_pck.get_nm_usuario, null) = 'S'
			and obter_empresa_estab(a.cd_estabelecimento) = cd_empresa_p
			and (a.dt_compensacao IS NOT NULL AND a.dt_compensacao::text <> '')
			and coalesce(a.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w)
			and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(dt_compensacao, 'dd'))  ELSE trunc(dt_compensacao, 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(dt_compensacao, 'dd') = trunc(to_date(dt_referencia_p), 'month')
					)
				)
			and obter_conta_financ_cheque_cp(a.nr_sequencia, 2) = (cd_conta_financ_p)::numeric
			and 'CP' = ie_integracao_p
			and ie_classif_fluxo_p = 'P'
			and (
				(ie_cheque_cp_mes_w = 'N')
				or (trunc(dt_emissao, 'month') <> trunc(coalesce(a.dt_compensacao, add_months(a.dt_emissao, 1)), 'month'))
				)
		) alias36
	order by 1;

c38 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			0 nr_titulo,
			CASE WHEN obter_se_moeda_estrang(cd_moeda_estrang_p,cd_moeda_empresa_w)='S' THEN sum(coalesce(c.vl_baixa_estrang,0) * (d.vl_titulo/(obter_dados_tit_pagar(e.nr_titulo, 'VT'))::numeric ))  ELSE sum(c.vl_baixa * (d.vl_titulo / (obter_dados_tit_pagar(e.nr_titulo, 'VT'))::numeric )) END  vl_titulo,
			substr(coalesce(a.ds_destinatario, obter_nome_pf_pj(a.cd_pessoa_destinatario, a.cd_cgc_destinatario)), 1, 255) ds_pessoa,
			'' ie_tipo_titulo,
			obter_conta_financ_cheque_cp(a.nr_sequencia, 2) cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			34 ie_union,
			substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
			a.nr_cheque nr_cheque,
			'' nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			substr(a.ds_observacao, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			substr(obter_dados_nota_fiscal(e.nr_seq_nota_fiscal, '0'), 1, 255) nr_nota_fiscal,
			g.ds_conta ds_conta_baixa
		FROM tipo_baixa_cpa f, titulo_pagar e, titulo_pagar_classif d, cheque_bordero_titulo b, cheque a, titulo_pagar_baixa c
LEFT OUTER JOIN banco_estabelecimento_v g ON (c.nr_seq_conta_banco = g.nr_sequencia)
WHERE a.nr_sequencia = b.nr_seq_cheque and e.nr_titulo = d.nr_titulo and e.nr_titulo = c.nr_titulo  and b.nr_titulo = e.nr_titulo and c.nr_bordero		= b.nr_bordero   -- OS  2116784
  and coalesce(c.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w) and c.cd_tipo_baixa = f.cd_tipo_baixa and f.ie_fluxo_passado_cheque = 'S' and (
				a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				) and obter_se_filtro_fluxo(a.nr_seq_conta_banco, null, null, wheb_usuario_pck.get_nm_usuario, null) = 'S' and coalesce(a.dt_cancelamento::text, '') = '' and 'CP' = ie_integracao_p and ie_classif_fluxo_p = 'P' and coalesce(obter_conta_financ_cheque_cp(a.nr_sequencia, 2)::text, '') = '' and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(dt_compensacao, 'dd'))  ELSE trunc(dt_compensacao, 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(dt_compensacao, 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				) and (a.dt_compensacao IS NOT NULL AND a.dt_compensacao::text <> '') and (d.nr_seq_conta_financ IS NOT NULL AND d.nr_seq_conta_financ::text <> '') and d.nr_seq_conta_financ = cd_conta_financ_p group by a.ds_destinatario,
			a.nr_sequencia,
			a.cd_pessoa_destinatario,
			a.cd_cgc_destinatario,
			a.cd_estabelecimento,
			a.nr_cheque,
			a.ds_observacao,
			substr(obter_dados_nota_fiscal(e.nr_seq_nota_fiscal, '0'), 1, 255),
			g.ds_conta
		) alias43
	order by 1;

c39 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			0 nr_titulo,
			CASE WHEN obter_se_moeda_estrang(cd_moeda_estrang_p,cd_moeda_empresa_w)='S' THEN a.vl_cheque_estrang  ELSE a.vl_cheque END  vl_titulo,
			substr(coalesce(a.ds_destinatario, obter_nome_pf_pj(a.cd_pessoa_destinatario, a.cd_cgc_destinatario)), 1, 255) ds_pessoa,
			'' ie_tipo_titulo,
			obter_conta_financ_cheque_cp(a.nr_sequencia, 1) cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			35 ie_union,
			substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
			a.nr_cheque nr_cheque,
			'' nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			substr(a.ds_observacao, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		from cheque a
		where a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
			and obter_se_filtro_fluxo(a.nr_seq_conta_banco, null, null, wheb_usuario_pck.get_nm_usuario, null) = 'S'
			and 'S' = ie_cheque_pago_pend_w
			and coalesce(a.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w)
			and coalesce(a.dt_cancelamento::text, '') = ''
			and trunc(a.dt_emissao, 'dd') < dt_referencia_p
			and (
				coalesce(a.dt_compensacao::text, '') = ''
				or a.dt_compensacao > dt_referencia_p
				)
			and obter_conta_financ_cheque_cp(a.nr_sequencia, 1) = (cd_conta_financ_p)::numeric
			and (
				(ie_cheque_cp_mes_w = 'N')
				or (trunc(dt_emissao, 'month') <> trunc(coalesce(a.dt_compensacao, add_months(a.dt_emissao, 1)), 'month'))
				)
		) alias28
	order by 1;
	
	
c40 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			b.nr_titulo nr_titulo,
			a.vl_tributo vl_titulo,
			substr(obter_nome_pf_pj(b.cd_pessoa_fisica, b.cd_cgc), 1, 255) ds_pessoa,
			'' ie_tipo_titulo,
			c.cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			36 ie_union,
			substr(obter_nome_estabelecimento(b.cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			substr(b.ds_observacao_titulo, 1, 255) ds_observacao,
			OBTER_VENC_TITULO(null, b.nr_titulo) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			substr(obter_dados_nota_fiscal(b.nr_seq_nf_saida, '0'), 1, 255) nr_nota_fiscal,
			'' ds_conta_baixa
		from tributo c,
			titulo_receber_trib a,
			titulo_receber b
		where c.cd_tributo = a.cd_tributo
			and obter_se_filtro_fluxo(b.nr_seq_conta_banco, null, null, wheb_usuario_pck.get_nm_usuario, null) = 'S'
			and a.nr_titulo = b.nr_titulo
			and b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
			and b.ie_situacao <> '3'
			and a.ie_origem_tributo = 'D'
			and cd_moeda_empresa_w = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w)
			and (c.cd_conta_financ IS NOT NULL AND c.cd_conta_financ::text <> '')
			and trunc(b.dt_emissao, 'dd') = dt_referencia_p
		) alias15
	order by 1;

c41 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			0 nr_titulo,
			a.vl_movimento vl_titulo,
			'' ds_pessoa,
			'' ie_tipo_titulo,
			a.cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			37 ie_union,
			'' ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			'' ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		from projeto_recurso_fin a
		where (a.cd_conta_financ IS NOT NULL AND a.cd_conta_financ::text <> '')
			and trunc(a.dt_referencia, 'dd') = dt_referencia_p
			and cd_moeda_empresa_w = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w)
		) alias7
	order by 1;

c42 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT distinct 0 nr_ordem_compra,
			0 nr_titulo,
			CASE WHEN obter_se_moeda_estrang(cd_moeda_estrang_p,cd_moeda_empresa_w)='S' THEN obter_saldo_banco_diario_estr(a.nr_seq_saldo_banco,fim_dia(a.dt_transacao))  ELSE obter_saldo_banco_diario(a.nr_seq_saldo_banco, fim_dia(a.dt_transacao)) END  vl_titulo,
			substr(obter_nome_conta_estab(a.nr_seq_banco), 1, 60) ds_pessoa,
			'' ie_tipo_titulo,
			b.cd_conta_financ_inf cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			38 ie_union,
			'' ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			'' ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		from movto_trans_financ a,
			BANCO_ESTABELECIMENTO b
		where a.nr_seq_banco = b.nr_sequencia
			and trunc(a.dt_transacao, 'dd') = dt_referencia_p
			and b.cd_conta_financ_inf = cd_conta_financ_p
			and coalesce(a.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w)
			and obter_saldo_banco_diario(a.nr_seq_saldo_banco, fim_dia(a.dt_transacao)) <> 0
		) alias16
	order by 1;

c43 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			b.nr_titulo,
			(dividir_sem_round(coalesce(c.vl_titulo, b.vl_titulo), b.vl_titulo) * b.vl_titulo) vl_titulo,
			substr(obter_nome_pf_pj(b.cd_pessoa_fisica, b.cd_cgc), 1, 60) ds_pessoa,
			'CP' ie_tipo_titulo,
			c.nr_seq_conta_financ cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			39 ie_union,
			substr(obter_nome_estabelecimento(b.cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			b.cd_moeda,
			(cd_moeda_cp_w)::numeric  cd_moeda_padrao,
			substr(b.ds_observacao_titulo, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			substr(obter_dados_nota_fiscal(b.nr_seq_nota_fiscal, '0'), 1, 255) nr_nota_fiscal,
			'' ds_conta_baixa
		from estabelecimento d,
			titulo_pagar_classif c,
			titulo_pagar b
		where (
				ie_restringe_estab_p = 'N'
				or substr(obter_se_conta_financ_estab(c.nr_seq_conta_financ, wheb_usuario_pck.get_cd_estabelecimento, ie_restringe_estab_p), 1, 1) = 'S'
				)
			and c.nr_seq_conta_financ = cd_conta_financ_p
			and b.nr_titulo = c.nr_titulo
			and (
				ie_restringe_estab_p = 'N'
				or b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				)
			and d.cd_empresa = cd_empresa_p
			and b.cd_estabelecimento = d.cd_estabelecimento
			and cd_moeda_empresa_w = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w)
			and b.ie_situacao <> 'C'
			and (
				(
					'D' = ie_periodo_p
					and trunc(b.dt_vencimento_atual, 'dd') = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(b.dt_vencimento_atual, 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				)
			and 'S' = ie_contrato_p
			and 'CO' = ie_integracao_p
			and 'M' = ie_forma_calculo_contrato_w
		) alias27
	order by 1;

c44 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			0 nr_titulo,
			(obter_saldo_receb_convenio(a.nr_sequencia, clock_timestamp()) * -1) vl_titulo,
			b.ds_convenio ds_pessoa,
			'' ie_tipo_titulo,
			obter_conta_financ_conv_receb(a.cd_estabelecimento, a.cd_convenio) cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			40 ie_union,
			substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			0 cd_moeda,
			0 cd_moeda_padrao,
			substr(a.ds_observacao, 1, 255) ds_observacao,
			to_date(null) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		from Convenio_receb a,
			convenio b
		where a.cd_convenio = b.cd_convenio
			and a.ie_status <> 'T'
			and coalesce(a.cd_moeda, cd_moeda_empresa_w) = coalesce(cd_moeda_estrang_p, cd_moeda_empresa_w)
			and obter_se_filtro_fluxo(a.nr_seq_conta_banco, null, null, wheb_usuario_pck.get_nm_usuario, null) = 'S'
			and obter_saldo_receb_convenio(a.nr_sequencia, clock_timestamp()) > 0
			and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(coalesce(coalesce(a.dt_recebimento, a.DT_LIBERACAO), a.dt_fluxo_caixa), 'dd'))  ELSE trunc(coalesce(coalesce(a.dt_recebimento, a.DT_LIBERACAO), a.dt_fluxo_caixa), 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and trunc(coalesce(coalesce(a.dt_recebimento, a.DT_LIBERACAO), a.dt_fluxo_caixa), 'month') = trunc(to_date(dt_referencia_p), 'month')
					)
				)
			and (
				a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				or 'N' = ie_restringe_estab_p
				)
			and obter_empresa_estab(a.cd_estabelecimento) = cd_empresa_p
			and obter_conta_financ_conv_receb(a.cd_estabelecimento, a.cd_convenio) = (cd_conta_financ_p)::numeric
			and 'RC' = ie_integracao_p
			and ie_classif_fluxo_p = 'R'
			and coalesce(a.ie_integrar_cb_fluxo, 'S') = 'S'
			and ie_convenio_receb_w = 'S'
		) alias36
	order by 1;

c45 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			0 nr_titulo,
			((coalesce(vl_classif, coalesce(vl_bordero, vl_titulo)) + vl_saldo_juros + vl_saldo_multa - vl_desconto_bordero )/ coalesce(vl_bordero, vl_titulo)) * Obter_Saldo_Titulo_pagar(nr_titulo, trunc(clock_timestamp(), 'dd')) vl_titulo,
			ds_pessoa,
			'CR' ie_tipo_titulo,
			cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			42 ie_union,
			ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			cd_moeda,
			(cd_moeda_cr_w)::numeric  cd_moeda_padrao,
			'' ds_observacao,
			dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		from (
			select a.nr_titulo nr_titulo,
				b.vl_titulo vl_classif,
				(OBTER_DADOS_TIT_PAGAR(a.nr_titulo, 'VT'))::numeric  vl_titulo,
				c.vl_bordero vl_bordero,
				coalesce(b.nr_seq_conta_financ, cd_conta_financ_cpa_w) cd_conta_financ,
				substr(obter_pessoa_titulo_pagar(a.nr_titulo), 1, 255) ds_pessoa,
				substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
				a.cd_moeda,
				coalesce(a.vl_saldo_juros,0) vl_saldo_juros,
				coalesce(a.vl_saldo_multa,0) vl_saldo_multa,
				coalesce(c.vl_desconto_bordero,0) vl_desconto_bordero,
				(
					select max(coalesce(x.dt_real_pagamento, x.dt_prev_pagamento))
					from bordero_pagamento x
					where x.nr_bordero = coalesce(c.nr_bordero, a.nr_bordero)
					) dt_venc_orig
			FROM estabelecimento d, titulo_pagar a
LEFT OUTER JOIN bordero_tit_pagar c ON (a.nr_titulo = c.nr_titulo)
LEFT OUTER JOIN titulo_pagar_classif b ON (a.nr_titulo = b.nr_titulo)
WHERE obter_se_filtro_fluxo(null, null, null, wheb_usuario_pck.get_nm_usuario, null) = 'S'   and coalesce(b.nr_seq_conta_financ, cd_conta_financ_cpa_w) = cd_conta_financ_p and (
					a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
					or ie_restringe_estab_p = 'N'
					) and a.cd_estabelecimento = d.cd_estabelecimento and d.cd_empresa = cd_empresa_p and (
					ie_restringe_estab_p = 'N'
					or (
						ie_restringe_estab_p = 'E'
						and a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
						)
					or (
						ie_restringe_estab_p = 'S'
						and (
							a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
							or a.cd_estab_financeiro = wheb_usuario_pck.get_cd_estabelecimento
							)
						)
					) and coalesce(substr(obter_se_tit_pagar_transf(a.nr_titulo), 1, 255), 'N') = 'N' and (
					not exists (
						select 1
						from ordem_compra y,
							nota_fiscal x
						where coalesce(y.dt_baixa::text, '') = ''
							and x.nr_ordem_compra = y.nr_ordem_compra
							and x.nr_sequencia = a.nr_seq_nota_fiscal
						)
					or 'S' = ie_oc_parcial_w
					) and (
					(a.nr_bordero IS NOT NULL AND a.nr_bordero::text <> '')
					or exists (
						select 1
						from bordero_tit_pagar x
						where x.nr_titulo = a.nr_titulo
						)
					) and coalesce(a.dt_liquidacao::text, '') = '' and a.vl_saldo_titulo > 0 and a.ie_situacao = 'A'
			 ) alias43
		where (
				ie_restringe_estab_p = 'N'
				or SUBSTR(obter_se_conta_financ_estab(cd_conta_financ, wheb_usuario_pck.get_cd_estabelecimento, ie_restringe_estab_p), 1, 1) = 'S'
				)
			and ('R' = ie_classif_fluxo_p)
			and ('BP' = ie_integracao_p)
			and ('S' = ie_pagto_bordero_p)
			and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, TRUNC(dt_venc_orig, 'dd'))  ELSE TRUNC(dt_venc_orig, 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and TRUNC(dt_venc_orig, 'month') = TRUNC(TO_DATE(dt_referencia_p), 'month')
					)
				)
		) alias59
	order by 1;

c46 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		/* valor de glosas a recuperar */

		SELECT 0 nr_ordem_compra,
			nr_titulo,
			SUM(vl_recebido) vl_titulo,
			ds_pessoa,
			'CR' ie_tipo_titulo,
			0 cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			41 ie_union,
			ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			cd_moeda,
			(cd_moeda_cr_w)::numeric  cd_moeda_padrao,
			ds_observacao,
			TO_DATE(dt_referencia_p) dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			nr_nota_fiscal,
			ds_conta_baixa
		from (
			select /*+ index (b TITRECE_I9) */				b.nr_titulo,
				SUBSTR(obter_nome_pf_pj(b.cd_pessoa_fisica, b.cd_cgc), 1, 60) ds_pessoa,
				SUBSTR(obter_nome_estabelecimento(b.cd_estabelecimento), 1, 255) ds_estabelecimento,
				b.cd_moeda cd_moeda,
				SUBSTR(b.ds_observacao_titulo, 1, 255) ds_observacao,
				OBTER_VENC_TITULO(null, b.nr_titulo) dt_venc_orig,
				SUBSTR(obter_dados_nota_fiscal(b.nr_seq_nf_saida, '0'), 1, 255) nr_nota_fiscal,
				obter_vl_recurso_titulo(b.nr_titulo) vl_recurso,
			/* Adicionado o decode para nao chamar a function quando nao houver vl_recurso para a baixa, pois a function retornaria o vl_recebido, evitando a execucao da consulta sem necessidade. Problema de performance. */

				CASE WHEN coalesce(a.vl_recurso,0)=0 THEN a.vl_recebido  ELSE obter_vl_recurso_baixa(b.nr_titulo,a.nr_sequencia,a.vl_recebido,pkg_date_utils.start_of(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(obter_dt_credito_banco_cre(a.nr_titulo,a.nr_sequencia),CASE WHEN ie_data_tit_adiant_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END ,'DD',0)) END  vl_recebido,
				OBTER_DT_VENC_TIT_REC(b.cd_cgc, OBTER_VENC_TITULO(null, b.nr_titulo), ie_regra_atraso_p, j.cd_banco, b.cd_pessoa_fisica) dt_vencimento,
				g.ds_conta ds_conta_baixa
			FROM transacao_financeira m, estabelecimento k, tipo_recebimento d, titulo_receber b
LEFT OUTER JOIN banco_estabelecimento j ON (b.nr_seq_conta_banco = j.nr_sequencia)
, titulo_receber_liq a
LEFT OUTER JOIN titulo_receber_classif c ON (a.nr_titulo = c.nr_titulo)
LEFT OUTER JOIN banco_estabelecimento_v g ON (a.nr_seq_conta_banco = g.nr_sequencia)
LEFT OUTER JOIN movto_trans_financ f ON (a.nr_seq_movto_trans_fin = f.nr_sequencia)
LEFT OUTER JOIN adiantamento e ON (a.nr_adiantamento = e.nr_adiantamento)
WHERE (m.cd_conta_financ IS NOT NULL AND m.cd_conta_financ::text <> '') and cd_conta_financ_p = m.cd_conta_financ and m.nr_sequencia = a.nr_seq_trans_fin and (
					ie_restringe_estab_p = 'N'
					or SUBSTR(obter_se_conta_financ_estab(m.cd_conta_financ, wheb_usuario_pck.get_cd_estabelecimento, ie_restringe_estab_p), 1, 1) = 'S'
					)  /* Adicionado a condicao para nao chamar a function quando nao houver vl_recurso para a baixa, pois a function retornaria 0, evitando a execucao da consulta sem necessidade. Problema de performance. */

  and (b.nr_titulo = a.nr_titulo and coalesce(a.nr_seq_retorno::text, '') = '' or (b.nr_titulo = a.nr_titulo and coalesce(a.vl_recurso,0) <> 0 and obter_vl_recurso_baixa(b.nr_titulo,a.nr_sequencia,0,pkg_date_utils.start_of(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(obter_dt_credito_banco_cre(a.nr_titulo,a.nr_sequencia),CASE WHEN ie_data_tit_adiant_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END ,'DD',0)) > 0)) and k.cd_empresa = cd_empresa_p and b.cd_estabelecimento = k.cd_estabelecimento and coalesce(d.ie_fluxo_passado, 'S') = 'S' and a.cd_tipo_recebimento = d.cd_tipo_recebimento  and not exists (
					select 1
					from fluxo_caixa_excecao x
					where x.ie_integracao = 'TR'
						and x.ie_origem_titulo_rec = b.ie_origem_titulo
						and x.ie_tipo_fluxo = 'P'
					) and (
					ie_restringe_estab_p = 'N'
					or (
						ie_restringe_estab_p = 'E'
						and b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
						)
					or (
						ie_restringe_estab_p = 'S'
						and (
							b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
							or b.cd_estab_financeiro = wheb_usuario_pck.get_cd_estabelecimento
							)
						)
					) and (
					b.ie_situacao <> '3'
					or ie_tit_rec_canc_w = 'S'
					) and b.ie_situacao <> '5' and a.nr_titulo = b.nr_titulo   and (
					(
						'D' = ie_periodo_p
						and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, TRUNC(a.dt_recebimento, 'dd'))  ELSE TRUNC(a.dt_recebimento, 'dd') END  = dt_referencia_p
						)
					or (
						'M' = ie_periodo_p
						and TRUNC(a.dt_recebimento, 'month') = TRUNC(TO_DATE(dt_referencia_p), 'month')
						)
					)  and (
					ie_movto_bco_pend_w in ('N', 'A', 'TP')
					or not exists (
						select 1
						from movto_banco_pend_baixa x
						where x.nr_titulo = a.nr_titulo
							and x.nr_seq_baixa = a.nr_sequencia
						)
					) and not exists (
					select 1
					from movto_trans_financ x
					where (
							(x.nr_seq_movto_cartao IS NOT NULL AND x.nr_seq_movto_cartao::text <> '')
							or (x.nr_seq_cheque IS NOT NULL AND x.nr_seq_cheque::text <> '')
							)
						and coalesce(x.nr_seq_titulo_receber::text, '') = ''
						and x.nr_sequencia = a.nr_seq_movto_trans_fin
					) and (
					ie_adiant_receb_w in ('A', 'TR')
					or coalesce(a.nr_adiantamento::text, '') = ''
					) and (
					(a.nr_seq_retorno IS NOT NULL AND a.nr_seq_retorno::text <> '')
					or (obter_vl_recurso_baixa(b.nr_titulo, a.nr_sequencia, 0, a.dt_recebimento)) > 0
					) /*is null para is not null conforme OS 1089064, pedido de jbneto*/
  and coalesce(a.ie_lib_caixa, 'S') = 'S' and ie_integracao_p not in ('RC', 'CB') and (
					coalesce(ie_titulo_caixa_w, 'S') = 'S'
					or not exists (
						select 1
						from caixa y,
							movto_trans_financ x
						where x.vl_transacao <> 0
							and coalesce(x.nr_seq_titulo_receber::text, '') = ''
							and coalesce(y.ie_movto_fluxo, 'S') = 'S'
							and x.nr_seq_caixa = y.nr_sequencia
							and x.nr_seq_caixa_rec = a.nr_seq_caixa_rec
						)
					)
			
			
union

			
			select /*+ index (b TITRECE_I9) */				b.nr_titulo,
				substr(obter_nome_pf_pj(b.cd_pessoa_fisica, b.cd_cgc), 1, 60) ds_pessoa,
				substr(obter_nome_estabelecimento(b.cd_estabelecimento), 1, 255) ds_estabelecimento,
				b.cd_moeda cd_moeda,
				substr(b.ds_observacao_titulo, 1, 255) ds_observacao,
				obter_venc_titulo(null, b.nr_titulo) dt_venc_orig,
				substr(obter_dados_nota_fiscal(b.nr_seq_nf_saida, '0'), 1, 255) nr_nota_fiscal,
				obter_vl_recurso_titulo(b.nr_titulo) vl_recurso,
				/* Adicionado o decode para nao chamar a function quando nao houver vl_recurso para a baixa, pois a function retornaria o vl_recebido, evitando a execucao da consulta sem necessidade. Problema de performance. */

				CASE WHEN coalesce(a.vl_recurso,0)=0 THEN a.vl_recebido  ELSE obter_vl_recurso_baixa(b.nr_titulo,a.nr_sequencia,a.vl_recebido,pkg_date_utils.start_of(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(obter_dt_credito_banco_cre(a.nr_titulo,a.nr_sequencia),CASE WHEN ie_data_tit_adiant_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END ,'DD',0)) END  vl_recebido,
				obter_dt_venc_tit_rec(b.cd_cgc, obter_venc_titulo(null, b.nr_titulo), ie_regra_atraso_p, j.cd_banco, b.cd_pessoa_fisica) dt_vencimento,
				g.ds_conta ds_conta_baixa
			FROM transacao_financeira m, estabelecimento k, tipo_recebimento d, titulo_receber b
LEFT OUTER JOIN banco_estabelecimento j ON (b.nr_seq_conta_banco = j.nr_sequencia)
, titulo_receber_liq a
LEFT OUTER JOIN titulo_receber_classif c ON (a.nr_titulo = c.nr_titulo)
LEFT OUTER JOIN banco_estabelecimento_v g ON (a.nr_seq_conta_banco = g.nr_sequencia)
LEFT OUTER JOIN movto_trans_financ f ON (a.nr_seq_movto_trans_fin = f.nr_sequencia)
LEFT OUTER JOIN adiantamento e ON (a.nr_adiantamento = e.nr_adiantamento)
WHERE (m.cd_conta_financ IS NOT NULL AND m.cd_conta_financ::text <> '') and cd_conta_financ_p = m.cd_conta_financ and m.nr_sequencia = a.nr_seq_trans_fin and (
					ie_restringe_estab_p = 'N'
					or SUBSTR(obter_se_conta_financ_estab(m.cd_conta_financ, wheb_usuario_pck.get_cd_estabelecimento, ie_restringe_estab_p), 1, 1) = 'S'
					)  /* Adicionado a condicao para nao chamar a function quando nao houver vl_recurso para a baixa, pois a function retornaria 0, evitando a execucao da consulta sem necessidade. Problema de performance. */

  and (b.nr_titulo = a.nr_titulo and coalesce(a.nr_seq_retorno::text, '') = '' or (b.nr_titulo = a.nr_titulo and coalesce(a.vl_recurso,0) <> 0 and obter_vl_recurso_baixa(b.nr_titulo,a.nr_sequencia,0,pkg_date_utils.start_of(CASE WHEN ie_dt_credito_banco_cre_w='S' THEN coalesce(obter_dt_credito_banco_cre(a.nr_titulo,a.nr_sequencia),CASE WHEN ie_data_tit_adiant_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END )  ELSE CASE WHEN ie_data_tit_adiant_w='S' THEN coalesce(e.dt_adiantamento,a.dt_recebimento)  ELSE a.dt_recebimento END  END ,'DD',0)) > 0)) and k.cd_empresa = cd_empresa_p and b.cd_estabelecimento = k.cd_estabelecimento and coalesce(d.ie_fluxo_passado, 'S') = 'S' and a.cd_tipo_recebimento = d.cd_tipo_recebimento  and not exists (
					select 1
					from fluxo_caixa_excecao x
					where x.ie_integracao = 'TR'
						and x.ie_origem_titulo_rec = b.ie_origem_titulo
						and x.ie_tipo_fluxo = 'P'
					) and (
					ie_restringe_estab_p = 'N'
					or (
						ie_restringe_estab_p = 'E'
						and b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
						)
					or (
						ie_restringe_estab_p = 'S'
						and (
							b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
							or b.cd_estab_financeiro = wheb_usuario_pck.get_cd_estabelecimento
							)
						)
					) and (
					b.ie_situacao <> '3'
					or ie_tit_rec_canc_w = 'S'
					) and b.ie_situacao <> '5' and a.nr_titulo = b.nr_titulo   and (
					(
						'D' = ie_periodo_p
						and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, trunc(a.dt_recebimento, 'dd'))  ELSE trunc(a.dt_recebimento, 'dd') END  = dt_referencia_p
						)
					or (
						'M' = ie_periodo_p
						and trunc(a.dt_recebimento, 'month') = trunc(to_date(dt_referencia_p), 'month')
						)
					)  and (
					ie_movto_bco_pend_w in ('N', 'A', 'TP')
					or not exists (
						select 1
						from movto_banco_pend_baixa x
						where x.nr_titulo = a.nr_titulo
							and x.nr_seq_baixa = a.nr_sequencia
						)
					) and not exists (
					select 1
					from movto_trans_financ x
					where (
							(x.nr_seq_movto_cartao IS NOT NULL AND x.nr_seq_movto_cartao::text <> '')
							or (x.nr_seq_cheque IS NOT NULL AND x.nr_seq_cheque::text <> '')
							)
						and coalesce(x.nr_seq_titulo_receber::text, '') = ''
						and x.nr_sequencia = a.nr_seq_movto_trans_fin
					) and (
					ie_adiant_receb_w in ('A', 'TR')
					or coalesce(a.nr_adiantamento::text, '') = ''
					) and (
					(a.nr_seq_retorno IS NOT NULL AND a.nr_seq_retorno::text <> '')
					or (obter_vl_recurso_baixa(b.nr_titulo, a.nr_sequencia, 0, a.dt_recebimento)) > 0
					) and coalesce(a.ie_lib_caixa, 'S') = 'S' and ie_integracao_p not in ('RC', 'CB') and (
					coalesce(ie_titulo_caixa_w, 'S') = 'S'
					or not exists (
						select 1
						from caixa y,
							movto_trans_financ x
						where x.vl_transacao <> 0
							and coalesce(x.nr_seq_titulo_receber::text, '') = ''
							and coalesce(y.ie_movto_fluxo, 'S') = 'S'
							and x.nr_seq_caixa = y.nr_sequencia
							and x.nr_seq_caixa_rec = a.nr_seq_caixa_rec
						)
					)
			 ) alias146
		group by nr_titulo,
			ds_pessoa,
			ds_estabelecimento,
			cd_moeda,
			ds_observacao,
			dt_venc_orig,
			nr_nota_fiscal,
			ds_conta_baixa
		) alias147
	order by 1;
	
c47 CURSOR FOR
SELECT 	/*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
	nr_titulo,
	vl_titulo,
	ds_pessoa,
	ie_tipo_titulo,
	cd_conta_financ,
	ie_periodo,
	ie_classif_fluxo,
	ie_union,
	ds_estabelecimento,
	nr_cheque,
	nr_autorizacao,
	ds_observacao,
	to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
	ds_orig_dest,
	ds_banco,
	nr_nota_fiscal,
	ds_conta_baixa
from 	(
	SELECT 	0 nr_ordem_compra,
		0 nr_titulo,
		(a.vl_parcela - a.vl_juros - a.vl_amortizacao) vl_titulo,
		substr(WHEB_MENSAGEM_PCK.get_texto(301996) || ': ' || coalesce(DS_TITULO_CONTRATO, DS_OBJETO_CONTRATO),1,2000) ds_pessoa,
		'' ie_tipo_titulo,
		0 cd_conta_financ,
		'' ie_periodo,
		'' ie_classif_fluxo,
		1 ie_union,
		substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
		'' nr_cheque,
		'' nr_autorizacao,
		0 cd_moeda,
		0 cd_moeda_padrao,
		substr(WHEB_MENSAGEM_PCK.get_texto(691565) /*Parcela*/
 || ' ' || a.nr_parcela || ' ' || WHEB_MENSAGEM_PCK.get_texto(306844) /*de*/ || ' ' || (select max(nr_parcela) from emprest_financ_parc where nr_seq_contrato = c.nr_sequencia)
		|| ' ' || WHEB_MENSAGEM_PCK.get_texto(277359) /*para*/ || ' ' || substr(obter_descricao_contrato(c.nr_sequencia),1,255),1,2000) ds_observacao,
		to_date(null) dt_venc_orig,
		'' ds_orig_dest,
		'' ds_banco,
		'' nr_nota_fiscal,
		'' ds_conta_baixa
	from	emprest_financ_parc a,
		emprest_financ_regra b,
		contrato c
	where	c.nr_sequencia = b.nr_seq_contrato
	and	c.nr_sequencia = a.nr_seq_contrato
	and	coalesce(a.vl_parcela - a.vl_juros - a.vl_amortizacao,0) <> 0
	and	coalesce(a.nr_titulo::text, '') = ''
	and	trunc(a.dt_vencimento) = trunc(dt_referencia_p)
	and	cd_conta_financ = cd_conta_financ_p
	and 	c.ie_situacao = 'A'
	and 	ie_classif_fluxo_p = 'R'
	
union all

	select 	0 nr_ordem_compra,
		0 nr_titulo,
		a.vl_amortizacao vl_titulo,
		substr(WHEB_MENSAGEM_PCK.get_texto(301996) || ': ' || coalesce(DS_TITULO_CONTRATO, DS_OBJETO_CONTRATO),1,2000) ds_pessoa,
		'' ie_tipo_titulo,
		0 cd_conta_financ,
		'' ie_periodo,
		'' ie_classif_fluxo,
		1 ie_union,
		substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
		'' nr_cheque,
		'' nr_autorizacao,
		0 cd_moeda,
		0 cd_moeda_padrao,
		substr(WHEB_MENSAGEM_PCK.get_texto(691565) /*Parcela*/
 || ' ' || a.nr_parcela || ' ' || WHEB_MENSAGEM_PCK.get_texto(306844) /*de*/ || ' ' || (select max(nr_parcela) from emprest_financ_parc where nr_seq_contrato = c.nr_sequencia) 
		|| ' ' || WHEB_MENSAGEM_PCK.get_texto(277359) /*para*/ || ' ' || substr(obter_descricao_contrato(c.nr_sequencia),1,255),1,2000) ds_observacao,
		to_date(null) dt_venc_orig,
		'' ds_orig_dest,
		'' ds_banco,
		'' nr_nota_fiscal,
		'' ds_conta_baixa
	from	emprest_financ_parc a,
		emprest_financ_regra b,
		contrato c
	where	c.nr_sequencia = b.nr_seq_contrato
	and	c.nr_sequencia = a.nr_seq_contrato
	and	coalesce(a.vl_amortizacao,0)	<> 0
	and	coalesce(a.nr_titulo::text, '') = ''
	and	trunc(a.dt_vencimento) = trunc(dt_referencia_p)
	and	cd_conta_financ_amort = cd_conta_financ_p
	and 	c.ie_situacao = 'A'
	and 	ie_classif_fluxo_p = 'R'
	
union all

	select 	0 nr_ordem_compra,
		0 nr_titulo,
		a.vl_juros vl_titulo,
		substr(WHEB_MENSAGEM_PCK.get_texto(301996) || ': ' || coalesce(DS_TITULO_CONTRATO, DS_OBJETO_CONTRATO),1,2000) ds_pessoa,
		'' ie_tipo_titulo,
		0 cd_conta_financ,
		'' ie_periodo,
		'' ie_classif_fluxo,
		1 ie_union,
		substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
		'' nr_cheque,
		'' nr_autorizacao,
		0 cd_moeda,
		0 cd_moeda_padrao,
		substr(WHEB_MENSAGEM_PCK.get_texto(691565) /*Parcela*/
 || ' ' || a.nr_parcela || ' ' || WHEB_MENSAGEM_PCK.get_texto(306844) /*de*/ || ' ' || (select max(nr_parcela) from emprest_financ_parc where nr_seq_contrato = c.nr_sequencia) 
		|| ' ' || WHEB_MENSAGEM_PCK.get_texto(277359) /*para*/ || ' ' || substr(obter_descricao_contrato(c.nr_sequencia),1,255),1,2000) ds_observacao,
		to_date(null) dt_venc_orig,
		'' ds_orig_dest,
		'' ds_banco,
		'' nr_nota_fiscal,
		'' ds_conta_baixa
	from	emprest_financ_parc a,
		emprest_financ_regra b,
		contrato c
	where	c.nr_sequencia = b.nr_seq_contrato
	and	c.nr_sequencia = a.nr_seq_contrato
	and	coalesce(a.vl_juros,0) <> 0
	and	coalesce(a.nr_titulo::text, '') = ''
	and	trunc(a.dt_vencimento) = trunc(dt_referencia_p)
	and	cd_conta_financ_juros = cd_conta_financ_p
	and 	c.ie_situacao = 'A'
	and 	ie_classif_fluxo_p = 'R'
	) alias56
order by 1;

C48 CURSOR FOR
	SELECT /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ nr_ordem_compra,
		nr_titulo,
		CASE WHEN coalesce(cd_moeda, 0)=0 THEN  vl_titulo  ELSE CASE WHEN cd_moeda_padrao=cd_moeda THEN  vl_titulo  ELSE obter_valor_moeda_nac(wheb_usuario_pck.get_cd_estabelecimento, vl_titulo, cd_moeda, dt_referencia_p) END  END  vl_titulo,
		ds_pessoa,
		ie_tipo_titulo,
		cd_conta_financ,
		ie_periodo,
		ie_classif_fluxo,
		ie_union,
		ds_estabelecimento,
		nr_cheque,
		nr_autorizacao,
		ds_observacao,
		to_char(dt_venc_orig, 'dd/mm/yyyy') dt_venc_orig,
		ds_orig_dest,
		ds_banco,
		nr_nota_fiscal,
		ds_conta_baixa
	from (
		SELECT 0 nr_ordem_compra,
			0 nr_titulo,
			(( coalesce(vl_classif, vl_titulo) + vl_saldo_juros + vl_saldo_multa - vl_desconto) / vl_titulo ) * Obter_Saldo_Titulo_pagar(nr_titulo, trunc(clock_timestamp(), 'dd')) vl_titulo,
			ds_pessoa,
			'CP' ie_tipo_titulo,
			cd_conta_financ,
			'' ie_periodo,
			'' ie_classif_fluxo,
			44 ie_union,
			ds_estabelecimento,
			'' nr_cheque,
			'' nr_autorizacao,
			cd_moeda,
			(cd_moeda_cr_w)::numeric  cd_moeda_padrao,
			'' ds_observacao,
			dt_venc_orig,
			'' ds_orig_dest,
			'' ds_banco,
			'' nr_nota_fiscal,
			'' ds_conta_baixa
		from (
			select a.nr_titulo nr_titulo,
				b.vl_titulo vl_classif,
				coalesce(c.vl_liquidacao,c.vl_escritural) vl_titulo,
				coalesce(b.nr_seq_conta_financ, cd_conta_financ_cpa_w) cd_conta_financ,
				substr(obter_pessoa_titulo_pagar(a.nr_titulo), 1, 255) ds_pessoa,
				substr(obter_nome_estabelecimento(a.cd_estabelecimento), 1, 255) ds_estabelecimento,
				a.cd_moeda,
				coalesce(a.vl_saldo_juros,0) vl_saldo_juros,
				coalesce(a.vl_saldo_multa,0) vl_saldo_multa,
				coalesce(c.vl_desconto,0) vl_desconto,
				(select max(x.dt_remessa_retorno) from banco_escritural x where x.nr_sequencia = c.nr_seq_escrit) dt_venc_orig
			FROM estabelecimento d, titulo_pagar a
LEFT OUTER JOIN titulo_pagar_escrit c ON (a.nr_titulo = c.nr_titulo)
LEFT OUTER JOIN titulo_pagar_classif b ON (a.nr_titulo = b.nr_titulo)
WHERE obter_se_filtro_fluxo(null, null, null, wheb_usuario_pck.get_nm_usuario, null) = 'S'   and coalesce(b.nr_seq_conta_financ, cd_conta_financ_cpa_w) = cd_conta_financ_p and a.cd_estabelecimento = d.cd_estabelecimento and d.cd_empresa = cd_empresa_p and (
					ie_restringe_estab_p = 'N'
					or (
						ie_restringe_estab_p = 'E'
						and a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
						)
					or (
						ie_restringe_estab_p = 'S'
						and (
							a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
							or a.cd_estab_financeiro = wheb_usuario_pck.get_cd_estabelecimento
							)
						)
					) and coalesce(substr(obter_se_tit_pagar_transf(a.nr_titulo), 1, 255), 'N') = 'N' and (
					not exists (
						select 1
						from ordem_compra y,
							nota_fiscal x
						where coalesce(y.dt_baixa::text, '') = ''
							and x.nr_ordem_compra = y.nr_ordem_compra
							and x.nr_sequencia = a.nr_seq_nota_fiscal
						)
					or 'S' = ie_oc_parcial_w
					) and exists (
						select 1
						from titulo_pagar_escrit x
						where x.nr_titulo = a.nr_titulo
						    ) and coalesce(a.dt_liquidacao::text, '') = '' and a.vl_saldo_titulo > 0 and a.ie_situacao = 'A'
			 ) alias35
		where (
				ie_restringe_estab_p = 'N'
				or SUBSTR(obter_se_conta_financ_estab(cd_conta_financ, wheb_usuario_pck.get_cd_estabelecimento, ie_restringe_estab_p), 1, 1) = 'S'
				)
			and ('R' = ie_classif_fluxo_p)
			and ('PE' = ie_integracao_p)
			and ('S' = ie_pagto_escrit_p)
			and (
				(
					'D' = ie_periodo_p
					and CASE WHEN ie_fim_semana_passado_w='S' THEN  obter_proximo_dia_util(wheb_usuario_pck.get_cd_estabelecimento, TRUNC(dt_venc_orig, 'dd'))  ELSE TRUNC(dt_venc_orig, 'dd') END  = dt_referencia_p
					)
				or (
					'M' = ie_periodo_p
					and TRUNC(dt_venc_orig, 'month') = TRUNC(TO_DATE(dt_referencia_p), 'month')
					)
				)
		) alias51
	order by 1;
	
C49 CURSOR FOR
/* 12 */
 /* Projetos e Investimentos */

	SELECT	/*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ 0 nr_ordem_compra,
		0 nr_titulo,
		a.vl_orcado vl_titulo,
		null ds_pessoa,--substr(obter_nome_pf_pj(b.cd_pessoa_fisica, b.cd_cgc), 1, 60) ds_pessoa,
		'PI' ie_tipo_titulo,
		a.cd_conta_financ cd_conta_financ,
		'' ie_periodo,
		'' ie_classif_fluxo,
		49 ie_union,
		substr(obter_nome_estabelecimento(c.cd_estabelecimento), 1, 255) ds_estabelecimento,
		'' nr_cheque,
		'' nr_autorizacao,
		a.cd_moeda cd_moeda,
		(cd_moeda_cp_w)::numeric  cd_moeda_padrao,
		'' ds_observacao,
		'' dt_venc_orig,
		'' ds_orig_dest,
		'' ds_banco,
		'' nr_nota_fiscal,
		'' ds_conta_baixa
	from	gpi_orc_item a,
		gpi_orcamento b, 
		gpi_projeto c, 
		estabelecimento d
	where	a.nr_seq_orcamento = b.nr_sequencia
	and	c.nr_sequencia = b.nr_seq_projeto
	and	c.cd_estabelecimento = d.cd_estabelecimento
	and	c.ie_situacao = 'A'
	and	a.vl_orcado <> 0
	and (
		ie_restringe_estab_p = 'N'
		or (
			ie_restringe_estab_p = 'E'
			and c.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
			)
		or (
			ie_restringe_estab_p = 'S'
			and (
				c.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
				)
			)
		)
	and	d.cd_empresa = cd_empresa_p
	and	coalesce(a.dt_mes_referencia,b.dt_orcamento) between	dt_inicio_w and dt_referencia_p;	

C50 CURSOR FOR
    /* 13 */
 /* Planejamento Orcamentario */

    SELECT  /*+ opt_param('optimizer_index_cost_adj',1) opt_param('optimizer_index_caching',70) */ 0 nr_ordem_compra,
            0 nr_titulo,
            a.vl_planej vl_titulo,
            substr(obter_nome_pf_pj(null,a.cd_cnpj), 1, 60) ds_pessoa,
            'PL' ie_tipo_titulo,
            a.cd_conta_financ cd_conta_financ,
            '' ie_periodo,
            '' ie_classif_fluxo,
            50 ie_union,
            substr(obter_nome_estabelecimento(a.cd_estab_exclusivo), 1, 255) ds_estabelecimento,
            '' nr_cheque,
            '' nr_autorizacao,
            0 cd_moeda,
            (cd_moeda_cp_w)::numeric  cd_moeda_padrao,
            '' ds_observacao,
            '' dt_venc_orig,
            '' ds_orig_dest,
            '' ds_banco,
            '' nr_nota_fiscal,
            '' ds_conta_baixa
    from    ctb_planej_orc_valor_v a
    where   (a.cd_conta_financ IS NOT NULL AND a.cd_conta_financ::text <> '')
    and     coalesce(a.nr_seq_proj_gpi::text, '') = ''
    and     ((coalesce(a.cd_estab_exclusivo,wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento and ie_restringe_estab_p in ('S', 'E'))
            or (ie_restringe_estab_p = 'N'))
    and     a.cd_empresa = cd_empresa_p
    and     coalesce(a.vl_planej,0) <> 0
    and     a.dt_referencia between dt_inicio_w and dt_referencia_p;

vet01	c01%rowtype;
vet02	c02%rowtype;
vet03	c03%rowtype;
vet04	c04%rowtype;
vet05	c05%rowtype;
vet06	c06%rowtype;
vet07	c07%rowtype;
vet08	c08%rowtype;
vet09	c09%rowtype;
vet10	c10%rowtype;
vet11	c11%rowtype;
vet12	c12%rowtype;
vet13	c13%rowtype;
vet14	c14%rowtype;
vet15	c15%rowtype;
vet16	c16%rowtype;
vet17	c17%rowtype;
vet18	c18%rowtype;
vet19	c19%rowtype;
vet20	c20%rowtype;
vet21	c21%rowtype;
vet22	c22%rowtype;
vet23	c23%rowtype;
vet24	c24%rowtype;
vet25	c25%rowtype;
vet26	c26%rowtype;
vet27	c27%rowtype;
vet28	c28%rowtype;
vet29	c29%rowtype;
vet30	c30%rowtype;
vet31	c31%rowtype;
vet32	c32%rowtype;
vet33	c33%rowtype;
vet34	c34%rowtype;
vet35	c35%rowtype;
vet36	c36%rowtype;
vet37	c37%rowtype;
vet38	c38%rowtype;
vet39	c39%rowtype;
vet40	c40%rowtype;
vet41	c41%rowtype;
vet42	c42%rowtype;
vet43	c43%rowtype;
vet44	c44%rowtype;
vet45	c45%rowtype;
vet46	c46%rowtype;
vet47	c47%rowtype;
vet48	c48%rowtype;
vet49	c49%rowtype;
vet50	c50%rowtype;
	

BEGIN

select CASE WHEN ie_drilldown_gerado=0 THEN  'N'  ELSE 'S' END  ie_drilldown_gerado
into STRICT ie_drilldown_gerado_w
from (
	SELECT count(1) ie_drilldown_gerado
	from w_fluxo_item_drilldown
	where ie_classif_fluxo = ie_classif_fluxo_p
		and ie_periodo = ie_periodo_p
		and ie_integracao = ie_integracao_p
		and cd_conta_financ = cd_conta_financ_p
		and cd_empresa = cd_empresa_p
		and dt_referencia = dt_referencia_p
		and dt_inicial = dt_inicial_p
		and nm_usuario = wheb_usuario_pck.get_nm_usuario
	) alias1;

if (ie_drilldown_gerado_w = 'N') then

	delete from w_fluxo_item_drilldown
	where nm_usuario = wheb_usuario_pck.get_nm_usuario;

	commit;

	select	coalesce(ie_cartao_cr_real,'P'),
		coalesce(ie_tit_pagar_transf,'S'),
		coalesce(ie_classif_baixa_cp,'N'),
		cd_conta_financ_cpa,
		cd_conta_financ_cre,
		ie_protocolo_conv,
		ie_adiant_receb,
		ie_adiant_pago,
		ie_convenio_receb,
		ie_fim_semana_passado,
		ie_tratar_fim_semana,
		coalesce(ie_tit_rec_fluxo,'T'),
		coalesce(ie_tit_pag_fluxo,'T'),
		ie_tit_rec_canc,
		ie_oc_parcial,
		coalesce(ie_oc_aprovada, 'N'),
		coalesce(ie_cheque_pago_pend, 'N'),
		coalesce(ie_cheque_cp_mes, 'N'),
		coalesce(ie_data_tit_adiant,'N'),
		coalesce(ie_movto_bco_pend,'N'),
		coalesce(ie_deposito_fluxo_real,'N'),
		coalesce(ie_forma_calculo_contrato,'R'),
		coalesce(ie_fluxo_externo,'N'),
		coalesce(ie_data_tit_adiant_rec,'N'),
		coalesce(ie_trans_fin_conta, 'M'),
		coalesce(ie_calc_fluxo_oc, 'V'),
		coalesce(ie_acumular_vencidos,'S'),
		coalesce(ie_conta_finan_trans,'N'),
		coalesce(ie_titulo_caixa,'S'),
		coalesce(ie_tit_pagar_desdob,'S'),
		coalesce(ie_dt_credito_banco_cre,'N'),
		IE_SOMENTE_FUTURO
	into STRICT ie_cartao_cr_real_w,
		ie_tit_pagar_transf_w,
		ie_classif_baixa_cp_w,
		cd_conta_financ_cpa_w,
		cd_conta_financ_cre_w,
		ie_protocolo_conv_w,
		ie_adiant_receb_w,
		ie_adiant_pago_w,
		ie_convenio_receb_w,
		ie_fim_semana_passado_w,
		ie_tratar_fim_semana_w,
		ie_tit_rec_fluxo_w,
		ie_tit_pag_fluxo_w,
		ie_tit_rec_canc_w,
		ie_oc_parcial_w,
		ie_oc_aprovada_w,
		ie_cheque_pago_pend_w,
		ie_cheque_cp_mes_w,
		ie_data_tit_adiant_w,
		ie_movto_bco_pend_w,
		ie_deposito_fluxo_real_w,
		ie_forma_calculo_contrato_w,
		ie_fluxo_externo_w,
		ie_data_tit_adiant_rec_w,
		ie_trans_fin_conta_w,
		ie_calc_fluxo_oc_w,
		ie_acumular_vencidos_w,
		ie_conta_finan_trans_w,
		ie_titulo_caixa_w,
		ie_tit_pagar_desdob_w,
		ie_dt_credito_banco_cre_w,
		IE_SOMENTE_FUTURO_W
	from	parametro_fluxo_caixa
	where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

	cd_moeda_cr_w := obter_moeda_padrao(wheb_usuario_pck.get_cd_estabelecimento,'R');
	cd_moeda_cp_w := obter_moeda_padrao(wheb_usuario_pck.get_cd_estabelecimento,'P');

	select 	coalesce(obter_moeda_padrao_empresa(wheb_usuario_pck.get_cd_estabelecimento,'E'),1)
	into STRICT	cd_moeda_empresa_w
	;
	

	if (ie_classif_fluxo_p = 'R') then
			
			dt_inicio_w		:= dt_inicial_p;
			if (IE_SOMENTE_FUTURO_W = 'S') then
				dt_inicio_w	:= trunc(clock_timestamp(), 'dd');
			end if;

		if (ie_integracao_p = 'PC') then
		
			open c01;
			loop
			fetch c01 into
				vet01;
			EXIT WHEN NOT FOUND; /* apply on c01 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet01.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet01.nr_titulo,
					vet01.vl_titulo,
					vet01.ds_pessoa,
					vet01.ie_tipo_titulo,
					vet01.cd_conta_financ,
					vet01.ie_periodo,
					vet01.ie_classif_fluxo,
					vet01.ie_union,
					vet01.ds_estabelecimento,
					vet01.nr_cheque,
					vet01.nr_autorizacao,
					vet01.ds_observacao,
					vet01.dt_venc_orig,
					vet01.ds_orig_dest,
					vet01.ds_banco,
					vet01.nr_nota_fiscal,
					vet01.ds_conta_baixa);
			end loop;
			close c01;

			open c02;
			loop
			fetch c02 into
				vet02;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet02.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet02.nr_titulo,
					vet02.vl_titulo,
					vet02.ds_pessoa,
					vet02.ie_tipo_titulo,
					vet02.cd_conta_financ,
					vet02.ie_periodo,
					vet02.ie_classif_fluxo,
					vet02.ie_union,
					vet02.ds_estabelecimento,
					vet02.nr_cheque,
					vet02.nr_autorizacao,
					vet02.ds_observacao,
					vet02.dt_venc_orig,
					vet02.ds_orig_dest,
					vet02.ds_banco,
					vet02.nr_nota_fiscal,
					vet02.ds_conta_baixa);
			end loop;
			close c02;
			
		end if;
		
		if (ie_integracao_p = 'RE') then
		
			open c03;
			loop
			fetch c03 into
				vet03;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet03.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet03.nr_titulo,
					vet03.vl_titulo,
					vet03.ds_pessoa,
					vet03.ie_tipo_titulo,
					vet03.cd_conta_financ,
					vet03.ie_periodo,
					vet03.ie_classif_fluxo,
					vet03.ie_union,
					vet03.ds_estabelecimento,
					vet03.nr_cheque,
					vet03.nr_autorizacao,
					vet03.ds_observacao,
					vet03.dt_venc_orig,
					vet03.ds_orig_dest,
					vet03.ds_banco,
					vet03.nr_nota_fiscal,
					vet03.ds_conta_baixa);
			end loop;
			close c03;	
			
			open c04;
			loop
			fetch c04 into
				vet04;
			EXIT WHEN NOT FOUND; /* apply on c04 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet04.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet04.nr_titulo,
					vet04.vl_titulo,
					vet04.ds_pessoa,
					vet04.ie_tipo_titulo,
					vet04.cd_conta_financ,
					vet04.ie_periodo,
					vet04.ie_classif_fluxo,
					vet04.ie_union,
					vet04.ds_estabelecimento,
					vet04.nr_cheque,
					vet04.nr_autorizacao,
					vet04.ds_observacao,
					vet04.dt_venc_orig,
					vet04.ds_orig_dest,
					vet04.ds_banco,
					vet04.nr_nota_fiscal,
					vet04.ds_conta_baixa);
			end loop;
			close c04;			
		
		end if;
		
		if (ie_integracao_p = 'CR') then

			open c05;
			loop
			fetch c05 into
				vet05;
			EXIT WHEN NOT FOUND; /* apply on c05 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet05.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet05.nr_titulo,
					vet05.vl_titulo,
					vet05.ds_pessoa,
					vet05.ie_tipo_titulo,
					vet05.cd_conta_financ,
					vet05.ie_periodo,
					vet05.ie_classif_fluxo,
					vet05.ie_union,
					vet05.ds_estabelecimento,
					vet05.nr_cheque,
					vet05.nr_autorizacao,
					vet05.ds_observacao,
					vet05.dt_venc_orig,
					vet05.ds_orig_dest,
					vet05.ds_banco,
					vet05.nr_nota_fiscal,
					vet05.ds_conta_baixa);
			end loop;
			close c05;	
			
			open c06;
			loop
			fetch c06 into
				vet06;
			EXIT WHEN NOT FOUND; /* apply on c06 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet06.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet06.nr_titulo,
					vet06.vl_titulo,
					vet06.ds_pessoa,
					vet06.ie_tipo_titulo,
					vet06.cd_conta_financ,
					vet06.ie_periodo,
					vet06.ie_classif_fluxo,
					vet06.ie_union,
					vet06.ds_estabelecimento,
					vet06.nr_cheque,
					vet06.nr_autorizacao,
					vet06.ds_observacao,
					vet06.dt_venc_orig,
					vet06.ds_orig_dest,
					vet06.ds_banco,
					vet06.nr_nota_fiscal,
					vet06.ds_conta_baixa);
			end loop;
			close c06;			
			
			open c08;
			loop
			fetch c08 into
				vet08;
			EXIT WHEN NOT FOUND; /* apply on c08 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet08.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet08.nr_titulo,
					vet08.vl_titulo,
					vet08.ds_pessoa,
					vet08.ie_tipo_titulo,
					vet08.cd_conta_financ,
					vet08.ie_periodo,
					vet08.ie_classif_fluxo,
					vet08.ie_union,
					vet08.ds_estabelecimento,
					vet08.nr_cheque,
					vet08.nr_autorizacao,
					vet08.ds_observacao,
					vet08.dt_venc_orig,
					vet08.ds_orig_dest,
					vet08.ds_banco,
					vet08.nr_nota_fiscal,
					vet08.ds_conta_baixa);
			end loop;
			close c08;		

			open c09;
			loop
			fetch c09 into
				vet09;
			EXIT WHEN NOT FOUND; /* apply on c09 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet09.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet09.nr_titulo,
					vet09.vl_titulo,
					vet09.ds_pessoa,
					vet09.ie_tipo_titulo,
					vet09.cd_conta_financ,
					vet09.ie_periodo,
					vet09.ie_classif_fluxo,
					vet09.ie_union,
					vet09.ds_estabelecimento,
					vet09.nr_cheque,
					vet09.nr_autorizacao,
					vet09.ds_observacao,
					vet09.dt_venc_orig,
					vet09.ds_orig_dest,
					vet09.ds_banco,
					vet09.nr_nota_fiscal,
					vet09.ds_conta_baixa);
			end loop;
			close c09;	
			
		end if;
		
		if (ie_integracao_p = 'CP') then
		
			open c07;
			loop
			fetch c07 into
				vet07;
			EXIT WHEN NOT FOUND; /* apply on c07 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet07.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet07.nr_titulo,
					vet07.vl_titulo,
					vet07.ds_pessoa,
					vet07.ie_tipo_titulo,
					vet07.cd_conta_financ,
					vet07.ie_periodo,
					vet07.ie_classif_fluxo,
					vet07.ie_union,
					vet07.ds_estabelecimento,
					vet07.nr_cheque,
					vet07.nr_autorizacao,
					vet07.ds_observacao,
					vet07.dt_venc_orig,
					vet07.ds_orig_dest,
					vet07.ds_banco,
					vet07.nr_nota_fiscal,
					vet07.ds_conta_baixa);
			end loop;
			close c07;		
		
		end if;
		
		if (ie_integracao_p = 'D') then
		
			open c10;
			loop
			fetch c10 into
				vet10;
			EXIT WHEN NOT FOUND; /* apply on c10 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet10.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet10.nr_titulo,
					vet10.vl_titulo,
					vet10.ds_pessoa,
					vet10.ie_tipo_titulo,
					vet10.cd_conta_financ,
					vet10.ie_periodo,
					vet10.ie_classif_fluxo,
					vet10.ie_union,
					vet10.ds_estabelecimento,
					vet10.nr_cheque,
					vet10.nr_autorizacao,
					vet10.ds_observacao,
					vet10.dt_venc_orig,
					vet10.ds_orig_dest,
					vet10.ds_banco,
					vet10.nr_nota_fiscal,
					vet10.ds_conta_baixa);
			end loop;
			close c10;	
		
		end if;
		
		if (ie_integracao_p = 'OC') then
		
			open c11;
			loop
			fetch c11 into
				vet11;
			EXIT WHEN NOT FOUND; /* apply on c11 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet11.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet11.nr_titulo,
					vet11.vl_titulo,
					vet11.ds_pessoa,
					vet11.ie_tipo_titulo,
					vet11.cd_conta_financ,
					vet11.ie_periodo,
					vet11.ie_classif_fluxo,
					vet11.ie_union,
					vet11.ds_estabelecimento,
					vet11.nr_cheque,
					vet11.nr_autorizacao,
					vet11.ds_observacao,
					vet11.dt_venc_orig,
					vet11.ds_orig_dest,
					vet11.ds_banco,
					vet11.nr_nota_fiscal,
					vet11.ds_conta_baixa);
			end loop;
			close c11;		
		
			open c12;
			loop
			fetch c12 into
				vet12;
			EXIT WHEN NOT FOUND; /* apply on c12 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet12.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet12.nr_titulo,
					vet12.vl_titulo,
					vet12.ds_pessoa,
					vet12.ie_tipo_titulo,
					vet12.cd_conta_financ,
					vet12.ie_periodo,
					vet12.ie_classif_fluxo,
					vet12.ie_union,
					vet12.ds_estabelecimento,
					vet12.nr_cheque,
					vet12.nr_autorizacao,
					vet12.ds_observacao,
					vet12.dt_venc_orig,
					vet12.ds_orig_dest,
					vet12.ds_banco,
					vet12.nr_nota_fiscal,
					vet12.ds_conta_baixa);
			end loop;
			close c12;			
		
		end if;
		
		if (ie_integracao_p = 'RC') then
		
			open c44;
			loop
			fetch c44 into
				vet44;
			EXIT WHEN NOT FOUND; /* apply on c44 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet44.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet44.nr_titulo,
					vet44.vl_titulo,
					vet44.ds_pessoa,
					vet44.ie_tipo_titulo,
					vet44.cd_conta_financ,
					vet44.ie_periodo,
					vet44.ie_classif_fluxo,
					vet44.ie_union,
					vet44.ds_estabelecimento,
					vet44.nr_cheque,
					vet44.nr_autorizacao,
					vet44.ds_observacao,
					vet44.dt_venc_orig,
					vet44.ds_orig_dest,
					vet44.ds_banco,
					vet44.nr_nota_fiscal,
					vet44.ds_conta_baixa);
			end loop;
			close c44;		
		
		end if;
		
		if (ie_integracao_p = 'BP') then
		
			open c45;
			loop
			fetch c45 into
				vet45;
			EXIT WHEN NOT FOUND; /* apply on c45 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet45.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet45.nr_titulo,
					vet45.vl_titulo,
					vet45.ds_pessoa,
					vet45.ie_tipo_titulo,
					vet45.cd_conta_financ,
					vet45.ie_periodo,
					vet45.ie_classif_fluxo,
					vet45.ie_union,
					vet45.ds_estabelecimento,
					vet45.nr_cheque,
					vet45.nr_autorizacao,
					vet45.ds_observacao,
					vet45.dt_venc_orig,
					vet45.ds_orig_dest,
					vet45.ds_banco,
					vet45.nr_nota_fiscal,
					vet45.ds_conta_baixa);
			end loop;
			close c45;		
		
		end if;
		
		if (ie_integracao_p = 'CE') then
		
			open c47;
			loop
			fetch c47 into
				vet47;
			EXIT WHEN NOT FOUND; /* apply on c47 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet47.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet47.nr_titulo,
					vet47.vl_titulo,
					vet47.ds_pessoa,
					vet47.ie_tipo_titulo,
					vet47.cd_conta_financ,
					vet47.ie_periodo,
					vet47.ie_classif_fluxo,
					vet47.ie_union,
					vet47.ds_estabelecimento,
					vet47.nr_cheque,
					vet47.nr_autorizacao,
					vet47.ds_observacao,
					vet47.dt_venc_orig,
					vet47.ds_orig_dest,
					vet47.ds_banco,
					vet47.nr_nota_fiscal,
					vet47.ds_conta_baixa);
			end loop;
			close c47;		
		
		end if;

		if (ie_integracao_p = 'PE') then
		
			open C48;
			loop
			fetch C48 into	
				vet48;
			EXIT WHEN NOT FOUND; /* apply on C48 */
				begin
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet48.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet48.nr_titulo,
					vet48.vl_titulo,
					vet48.ds_pessoa,
					vet48.ie_tipo_titulo,
					vet48.cd_conta_financ,
					vet48.ie_periodo,
					vet48.ie_classif_fluxo,
					vet48.ie_union,
					vet48.ds_estabelecimento,
					vet48.nr_cheque,
					vet48.nr_autorizacao,
					vet48.ds_observacao,
					vet48.dt_venc_orig,
					vet48.ds_orig_dest,
					vet48.ds_banco,
					vet48.nr_nota_fiscal,
					vet48.ds_conta_baixa);
				end;
			end loop;
			close C48;
		
		end if;
		
		if (ie_integracao_p = 'PI') then
		
			open C49;
			loop
			fetch C49 into	
				vet49;
			EXIT WHEN NOT FOUND; /* apply on C49 */
				begin
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet49.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet49.nr_titulo,
					vet49.vl_titulo,
					vet49.ds_pessoa,
					vet49.ie_tipo_titulo,
					vet49.cd_conta_financ,
					vet49.ie_periodo,
					vet49.ie_classif_fluxo,
					vet49.ie_union,
					vet49.ds_estabelecimento,
					vet49.nr_cheque,
					vet49.nr_autorizacao,
					vet49.ds_observacao,
					vet49.dt_venc_orig,
					vet49.ds_orig_dest,
					vet49.ds_banco,
					vet49.nr_nota_fiscal,
					vet49.ds_conta_baixa);
				end;
			end loop;
			close C49;
		end if;

        if (ie_integracao_p = 'PL') then

			open C50;
			loop
			fetch C50 into	
				vet50;
			EXIT WHEN NOT FOUND; /* apply on C50 */
				begin
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet50.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet50.nr_titulo,
					vet50.vl_titulo,
					vet50.ds_pessoa,
					vet50.ie_tipo_titulo,
					vet50.cd_conta_financ,
					vet50.ie_periodo,
					vet50.ie_classif_fluxo,
					vet50.ie_union,
					vet50.ds_estabelecimento,
					vet50.nr_cheque,
					vet50.nr_autorizacao,
					vet50.ds_observacao,
					vet50.dt_venc_orig,
					vet50.ds_orig_dest,
					vet50.ds_banco,
					vet50.nr_nota_fiscal,
					vet50.ds_conta_baixa);
				end;
			end loop;
			close C50;
		end if;

	elsif (ie_classif_fluxo_p = 'P') then

		if (ie_integracao_p = 'CP') then
		
			open c13;
			loop
			fetch c13 into
				vet13;
			EXIT WHEN NOT FOUND; /* apply on c13 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet13.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet13.nr_titulo,
					vet13.vl_titulo,
					vet13.ds_pessoa,
					vet13.ie_tipo_titulo,
					vet13.cd_conta_financ,
					vet13.ie_periodo,
					vet13.ie_classif_fluxo,
					vet13.ie_union,
					vet13.ds_estabelecimento,
					vet13.nr_cheque,
					vet13.nr_autorizacao,
					vet13.ds_observacao,
					vet13.dt_venc_orig,
					vet13.ds_orig_dest,
					vet13.ds_banco,
					vet13.nr_nota_fiscal,
					vet13.ds_conta_baixa);
			end loop;
			close c13;	

			open c14;
			loop
			fetch c14 into
				vet14;
			EXIT WHEN NOT FOUND; /* apply on c14 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet14.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet14.nr_titulo,
					vet14.vl_titulo,
					vet14.ds_pessoa,
					vet14.ie_tipo_titulo,
					vet14.cd_conta_financ,
					vet14.ie_periodo,
					vet14.ie_classif_fluxo,
					vet14.ie_union,
					vet14.ds_estabelecimento,
					vet14.nr_cheque,
					vet14.nr_autorizacao,
					vet14.ds_observacao,
					vet14.dt_venc_orig,
					vet14.ds_orig_dest,
					vet14.ds_banco,
					vet14.nr_nota_fiscal,
					vet14.ds_conta_baixa);
			end loop;
			close c14;			
		
			open c20;
			loop
			fetch c20 into
				vet20;
			EXIT WHEN NOT FOUND; /* apply on c20 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet20.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet20.nr_titulo,
					vet20.vl_titulo,
					vet20.ds_pessoa,
					vet20.ie_tipo_titulo,
					vet20.cd_conta_financ,
					vet20.ie_periodo,
					vet20.ie_classif_fluxo,
					vet20.ie_union,
					vet20.ds_estabelecimento,
					vet20.nr_cheque,
					vet20.nr_autorizacao,
					vet20.ds_observacao,
					vet20.dt_venc_orig,
					vet20.ds_orig_dest,
					vet20.ds_banco,
					vet20.nr_nota_fiscal,
					vet20.ds_conta_baixa);
			end loop;
			close c20;		
			
			open c36;
			loop
			fetch c36 into
				vet36;
			EXIT WHEN NOT FOUND; /* apply on c36 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet36.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet36.nr_titulo,
					vet36.vl_titulo,
					vet36.ds_pessoa,
					vet36.ie_tipo_titulo,
					vet36.cd_conta_financ,
					vet36.ie_periodo,
					vet36.ie_classif_fluxo,
					vet36.ie_union,
					vet36.ds_estabelecimento,
					vet36.nr_cheque,
					vet36.nr_autorizacao,
					vet36.ds_observacao,
					vet36.dt_venc_orig,
					vet36.ds_orig_dest,
					vet36.ds_banco,
					vet36.nr_nota_fiscal,
					vet36.ds_conta_baixa);
			end loop;
			close c36;			
			
			open c37;
			loop
			fetch c37 into
				vet37;
			EXIT WHEN NOT FOUND; /* apply on c37 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet37.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet37.nr_titulo,
					vet37.vl_titulo,
					vet37.ds_pessoa,
					vet37.ie_tipo_titulo,
					vet37.cd_conta_financ,
					vet37.ie_periodo,
					vet37.ie_classif_fluxo,
					vet37.ie_union,
					vet37.ds_estabelecimento,
					vet37.nr_cheque,
					vet37.nr_autorizacao,
					vet37.ds_observacao,
					vet37.dt_venc_orig,
					vet37.ds_orig_dest,
					vet37.ds_banco,
					vet37.nr_nota_fiscal,
					vet37.ds_conta_baixa);
			end loop;
			close c37;		

			open c38;
			loop
			fetch c38 into
				vet38;
			EXIT WHEN NOT FOUND; /* apply on c38 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet38.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet38.nr_titulo,
					vet38.vl_titulo,
					vet38.ds_pessoa,
					vet38.ie_tipo_titulo,
					vet38.cd_conta_financ,
					vet38.ie_periodo,
					vet38.ie_classif_fluxo,
					vet38.ie_union,
					vet38.ds_estabelecimento,
					vet38.nr_cheque,
					vet38.nr_autorizacao,
					vet38.ds_observacao,
					vet38.dt_venc_orig,
					vet38.ds_orig_dest,
					vet38.ds_banco,
					vet38.nr_nota_fiscal,
					vet38.ds_conta_baixa);
			end loop;
			close c38;			
		
		end if;

		if (ie_integracao_p = 'CR') then

			open c15;
			loop
			fetch c15 into
				vet15;
			EXIT WHEN NOT FOUND; /* apply on c15 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet15.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet15.nr_titulo,
					vet15.vl_titulo,
					vet15.ds_pessoa,
					vet15.ie_tipo_titulo,
					vet15.cd_conta_financ,
					vet15.ie_periodo,
					vet15.ie_classif_fluxo,
					vet15.ie_union,
					vet15.ds_estabelecimento,
					vet15.nr_cheque,
					vet15.nr_autorizacao,
					vet15.ds_observacao,
					vet15.dt_venc_orig,
					vet15.ds_orig_dest,
					vet15.ds_banco,
					vet15.nr_nota_fiscal,
					vet15.ds_conta_baixa);
			end loop;
			close c15;	

			open c16;
			loop
			fetch c16 into
				vet16;
			EXIT WHEN NOT FOUND; /* apply on c16 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet16.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet16.nr_titulo,
					vet16.vl_titulo,
					vet16.ds_pessoa,
					vet16.ie_tipo_titulo,
					vet16.cd_conta_financ,
					vet16.ie_periodo,
					vet16.ie_classif_fluxo,
					vet16.ie_union,
					vet16.ds_estabelecimento,
					vet16.nr_cheque,
					vet16.nr_autorizacao,
					vet16.ds_observacao,
					vet16.dt_venc_orig,
					vet16.ds_orig_dest,
					vet16.ds_banco,
					vet16.nr_nota_fiscal,
					vet16.ds_conta_baixa);
			end loop;
			close c16;	

			open c17;
			loop
			fetch c17 into
				vet17;
			EXIT WHEN NOT FOUND; /* apply on c17 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet17.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet17.nr_titulo,
					vet17.vl_titulo,
					vet17.ds_pessoa,
					vet17.ie_tipo_titulo,
					vet17.cd_conta_financ,
					vet17.ie_periodo,
					vet17.ie_classif_fluxo,
					vet17.ie_union,
					vet17.ds_estabelecimento,
					vet17.nr_cheque,
					vet17.nr_autorizacao,
					vet17.ds_observacao,
					vet17.dt_venc_orig,
					vet17.ds_orig_dest,
					vet17.ds_banco,
					vet17.nr_nota_fiscal,
					vet17.ds_conta_baixa);
			end loop;
			close c17;	

			open c22;
			loop
			fetch c22 into
				vet22;
			EXIT WHEN NOT FOUND; /* apply on c22 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet22.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet22.nr_titulo,
					vet22.vl_titulo,
					vet22.ds_pessoa,
					vet22.ie_tipo_titulo,
					vet22.cd_conta_financ,
					vet22.ie_periodo,
					vet22.ie_classif_fluxo,
					vet22.ie_union,
					vet22.ds_estabelecimento,
					vet22.nr_cheque,
					vet22.nr_autorizacao,
					vet22.ds_observacao,
					vet22.dt_venc_orig,
					vet22.ds_orig_dest,
					vet22.ds_banco,
					vet22.nr_nota_fiscal,
					vet22.ds_conta_baixa);
			end loop;
			close c22;		

			open c23;
			loop
			fetch c23 into
				vet23;
			EXIT WHEN NOT FOUND; /* apply on c23 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet23.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet23.nr_titulo,
					vet23.vl_titulo,
					vet23.ds_pessoa,
					vet23.ie_tipo_titulo,
					vet23.cd_conta_financ,
					vet23.ie_periodo,
					vet23.ie_classif_fluxo,
					vet23.ie_union,
					vet23.ds_estabelecimento,
					vet23.nr_cheque,
					vet23.nr_autorizacao,
					vet23.ds_observacao,
					vet23.dt_venc_orig,
					vet23.ds_orig_dest,
					vet23.ds_banco,
					vet23.nr_nota_fiscal,
					vet23.ds_conta_baixa);
			end loop;
			close c23;			
		
			open c24;
			loop
			fetch c24 into
				vet24;
			EXIT WHEN NOT FOUND; /* apply on c24 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet24.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet24.nr_titulo,
					vet24.vl_titulo,
					vet24.ds_pessoa,
					vet24.ie_tipo_titulo,
					vet24.cd_conta_financ,
					vet24.ie_periodo,
					vet24.ie_classif_fluxo,
					vet24.ie_union,
					vet24.ds_estabelecimento,
					vet24.nr_cheque,
					vet24.nr_autorizacao,
					vet24.ds_observacao,
					vet24.dt_venc_orig,
					vet24.ds_orig_dest,
					vet24.ds_banco,
					vet24.nr_nota_fiscal,
					vet24.ds_conta_baixa);
			end loop;
			close c24;	
			
			open c25;
			loop
			fetch c25 into
				vet25;
			EXIT WHEN NOT FOUND; /* apply on c25 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet25.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet25.nr_titulo,
					vet25.vl_titulo,
					vet25.ds_pessoa,
					vet25.ie_tipo_titulo,
					vet25.cd_conta_financ,
					vet25.ie_periodo,
					vet25.ie_classif_fluxo,
					vet25.ie_union,
					vet25.ds_estabelecimento,
					vet25.nr_cheque,
					vet25.nr_autorizacao,
					vet25.ds_observacao,
					vet25.dt_venc_orig,
					vet25.ds_orig_dest,
					vet25.ds_banco,
					vet25.nr_nota_fiscal,
					vet25.ds_conta_baixa);
			end loop;
			close c25;	

			open c26;
			loop
			fetch c26 into
				vet26;
			EXIT WHEN NOT FOUND; /* apply on c26 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet26.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet26.nr_titulo,
					vet26.vl_titulo,
					vet26.ds_pessoa,
					vet26.ie_tipo_titulo,
					vet26.cd_conta_financ,
					vet26.ie_periodo,
					vet26.ie_classif_fluxo,
					vet26.ie_union,
					vet26.ds_estabelecimento,
					vet26.nr_cheque,
					vet26.nr_autorizacao,
					vet26.ds_observacao,
					vet26.dt_venc_orig,
					vet26.ds_orig_dest,
					vet26.ds_banco,
					vet26.nr_nota_fiscal,
					vet26.ds_conta_baixa);
			end loop;
			close c26;	

			open c27;
			loop
			fetch c27 into
				vet27;
			EXIT WHEN NOT FOUND; /* apply on c27 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet27.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet27.nr_titulo,
					vet27.vl_titulo,
					vet27.ds_pessoa,
					vet27.ie_tipo_titulo,
					vet27.cd_conta_financ,
					vet27.ie_periodo,
					vet27.ie_classif_fluxo,
					vet27.ie_union,
					vet27.ds_estabelecimento,
					vet27.nr_cheque,
					vet27.nr_autorizacao,
					vet27.ds_observacao,
					vet27.dt_venc_orig,
					vet27.ds_orig_dest,
					vet27.ds_banco,
					vet27.nr_nota_fiscal,
					vet27.ds_conta_baixa);
			end loop;
			close c27;		

			open c28;
			loop
			fetch c28 into
				vet28;
			EXIT WHEN NOT FOUND; /* apply on c28 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet28.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet28.nr_titulo,
					vet28.vl_titulo,
					vet28.ds_pessoa,
					vet28.ie_tipo_titulo,
					vet28.cd_conta_financ,
					vet28.ie_periodo,
					vet28.ie_classif_fluxo,
					vet28.ie_union,
					vet28.ds_estabelecimento,
					vet28.nr_cheque,
					vet28.nr_autorizacao,
					vet28.ds_observacao,
					vet28.dt_venc_orig,
					vet28.ds_orig_dest,
					vet28.ds_banco,
					vet28.nr_nota_fiscal,
					vet28.ds_conta_baixa);
			end loop;
			close c28;	
			
			open c29;
			loop
			fetch c29 into
				vet29;
			EXIT WHEN NOT FOUND; /* apply on c29 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet29.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet29.nr_titulo,
					vet29.vl_titulo,
					vet29.ds_pessoa,
					vet29.ie_tipo_titulo,
					vet29.cd_conta_financ,
					vet29.ie_periodo,
					vet29.ie_classif_fluxo,
					vet29.ie_union,
					vet29.ds_estabelecimento,
					vet29.nr_cheque,
					vet29.nr_autorizacao,
					vet29.ds_observacao,
					vet29.dt_venc_orig,
					vet29.ds_orig_dest,
					vet29.ds_banco,
					vet29.nr_nota_fiscal,
					vet29.ds_conta_baixa);
			end loop;
			close c29;	

			open c30;
			loop
			fetch c30 into
				vet30;
			EXIT WHEN NOT FOUND; /* apply on c30 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet30.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet30.nr_titulo,
					vet30.vl_titulo,
					vet30.ds_pessoa,
					vet30.ie_tipo_titulo,
					vet30.cd_conta_financ,
					vet30.ie_periodo,
					vet30.ie_classif_fluxo,
					vet30.ie_union,
					vet30.ds_estabelecimento,
					vet30.nr_cheque,
					vet30.nr_autorizacao,
					vet30.ds_observacao,
					vet30.dt_venc_orig,
					vet30.ds_orig_dest,
					vet30.ds_banco,
					vet30.nr_nota_fiscal,
					vet30.ds_conta_baixa);
			end loop;
			close c30;	

			open c31;
			loop
			fetch c31 into
				vet31;
			EXIT WHEN NOT FOUND; /* apply on c31 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet31.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet31.nr_titulo,
					vet31.vl_titulo,
					vet31.ds_pessoa,
					vet31.ie_tipo_titulo,
					vet31.cd_conta_financ,
					vet31.ie_periodo,
					vet31.ie_classif_fluxo,
					vet31.ie_union,
					vet31.ds_estabelecimento,
					vet31.nr_cheque,
					vet31.nr_autorizacao,
					vet31.ds_observacao,
					vet31.dt_venc_orig,
					vet31.ds_orig_dest,
					vet31.ds_banco,
					vet31.nr_nota_fiscal,
					vet31.ds_conta_baixa);
			end loop;
			close c31;			
		
		end if;

		if (ie_integracao_p = 'D') then
		
			open c18;
			loop
			fetch c18 into
				vet18;
			EXIT WHEN NOT FOUND; /* apply on c18 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet18.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet18.nr_titulo,
					vet18.vl_titulo,
					vet18.ds_pessoa,
					vet18.ie_tipo_titulo,
					vet18.cd_conta_financ,
					vet18.ie_periodo,
					vet18.ie_classif_fluxo,
					vet18.ie_union,
					vet18.ds_estabelecimento,
					vet18.nr_cheque,
					vet18.nr_autorizacao,
					vet18.ds_observacao,
					vet18.dt_venc_orig,
					vet18.ds_orig_dest,
					vet18.ds_banco,
					vet18.nr_nota_fiscal,
					vet18.ds_conta_baixa);
			end loop;
			close c18;			
		
		end if;

		if (ie_integracao_p = 'CO') then
		
			open c19;
			loop
			fetch c19 into
				vet19;
			EXIT WHEN NOT FOUND; /* apply on c19 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet19.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet19.nr_titulo,
					vet19.vl_titulo,
					vet19.ds_pessoa,
					vet19.ie_tipo_titulo,
					vet19.cd_conta_financ,
					vet19.ie_periodo,
					vet19.ie_classif_fluxo,
					vet19.ie_union,
					vet19.ds_estabelecimento,
					vet19.nr_cheque,
					vet19.nr_autorizacao,
					vet19.ds_observacao,
					vet19.dt_venc_orig,
					vet19.ds_orig_dest,
					vet19.ds_banco,
					vet19.nr_nota_fiscal,
					vet19.ds_conta_baixa);
			end loop;
			close c19;	
		
		end if;
		
		if (ie_integracao_p = 'T') then
		
			open c32;
			loop
			fetch c32 into
				vet32;
			EXIT WHEN NOT FOUND; /* apply on c32 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet32.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet32.nr_titulo,
					vet32.vl_titulo,
					vet32.ds_pessoa,
					vet32.ie_tipo_titulo,
					vet32.cd_conta_financ,
					vet32.ie_periodo,
					vet32.ie_classif_fluxo,
					vet32.ie_union,
					vet32.ds_estabelecimento,
					vet32.nr_cheque,
					vet32.nr_autorizacao,
					vet32.ds_observacao,
					vet32.dt_venc_orig,
					vet32.ds_orig_dest,
					vet32.ds_banco,
					vet32.nr_nota_fiscal,
					vet32.ds_conta_baixa);
			end loop;
			close c32;				
		
		end if;
		
		if (ie_integracao_p = 'CB') then
		
			open c33;
			loop
			fetch c33 into
				vet33;
			EXIT WHEN NOT FOUND; /* apply on c33 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet33.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet33.nr_titulo,
					vet33.vl_titulo,
					vet33.ds_pessoa,
					vet33.ie_tipo_titulo,
					vet33.cd_conta_financ,
					vet33.ie_periodo,
					vet33.ie_classif_fluxo,
					vet33.ie_union,
					vet33.ds_estabelecimento,
					vet33.nr_cheque,
					vet33.nr_autorizacao,
					vet33.ds_observacao,
					vet33.dt_venc_orig,
					vet33.ds_orig_dest,
					vet33.ds_banco,
					vet33.nr_nota_fiscal,
					vet33.ds_conta_baixa);
			end loop;
			close c33;		
		
		end if;
		
		if (ie_integracao_p = 'RC') then
		
			open c34;
			loop
			fetch c34 into
				vet34;
			EXIT WHEN NOT FOUND; /* apply on c34 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet34.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet34.nr_titulo,
					vet34.vl_titulo,
					vet34.ds_pessoa,
					vet34.ie_tipo_titulo,
					vet34.cd_conta_financ,
					vet34.ie_periodo,
					vet34.ie_classif_fluxo,
					vet34.ie_union,
					vet34.ds_estabelecimento,
					vet34.nr_cheque,
					vet34.nr_autorizacao,
					vet34.ds_observacao,
					vet34.dt_venc_orig,
					vet34.ds_orig_dest,
					vet34.ds_banco,
					vet34.nr_nota_fiscal,
					vet34.ds_conta_baixa);
			end loop;
			close c34;	

			open c35;
			loop
			fetch c35 into
				vet35;
			EXIT WHEN NOT FOUND; /* apply on c35 */
				insert into w_fluxo_item_drilldown(nr_sequencia,
					nr_ordem_compra,
					dt_atualizacao,         
					nm_usuario,                   
					nr_titulo,              
					vl_titulo,              
					ds_pessoa,              
					ie_tipo_titulo,         
					cd_conta_financ,        
					ie_periodo,             
					ie_classif_fluxo,       
					ie_union,               
					ds_estabelecimento,     
					nr_cheque,              
					nr_autorizacao,         
					ds_observacao,          
					dt_venc_orig,           
					ds_orig_dest,           
					ds_banco,               
					nr_nota_fiscal,         
					ds_conta_baixa)         
				values (nextval('w_fluxo_item_drilldown_seq'),
					vet35.nr_ordem_compra,
					clock_timestamp(),
					wheb_usuario_pck.get_nm_usuario,
					vet35.nr_titulo,
					vet35.vl_titulo,
					vet35.ds_pessoa,
					vet35.ie_tipo_titulo,
					vet35.cd_conta_financ,
					vet35.ie_periodo,
					vet35.ie_classif_fluxo,
					vet35.ie_union,
					vet35.ds_estabelecimento,
					vet35.nr_cheque,
					vet35.nr_autorizacao,
					vet35.ds_observacao,
					vet35.dt_venc_orig,
					vet35.ds_orig_dest,
					vet35.ds_banco,
					vet35.nr_nota_fiscal,
					vet35.ds_conta_baixa);
			end loop;
			close c35;			
		
		end if;
		
		-- sempre executa no fluxo passado
		open c21;
		loop
		fetch c21 into
			vet21;
		EXIT WHEN NOT FOUND; /* apply on c21 */
			insert into w_fluxo_item_drilldown(nr_sequencia,
				nr_ordem_compra,
				dt_atualizacao,         
				nm_usuario,                   
				nr_titulo,              
				vl_titulo,              
				ds_pessoa,              
				ie_tipo_titulo,         
				cd_conta_financ,        
				ie_periodo,             
				ie_classif_fluxo,       
				ie_union,               
				ds_estabelecimento,     
				nr_cheque,              
				nr_autorizacao,         
				ds_observacao,          
				dt_venc_orig,           
				ds_orig_dest,           
				ds_banco,               
				nr_nota_fiscal,         
				ds_conta_baixa)         
			values (nextval('w_fluxo_item_drilldown_seq'),
				vet21.nr_ordem_compra,
				clock_timestamp(),
				wheb_usuario_pck.get_nm_usuario,
				vet21.nr_titulo,
				vet21.vl_titulo,
				vet21.ds_pessoa,
				vet21.ie_tipo_titulo,
				vet21.cd_conta_financ,
				vet21.ie_periodo,
				vet21.ie_classif_fluxo,
				vet21.ie_union,
				vet21.ds_estabelecimento,
				vet21.nr_cheque,
				vet21.nr_autorizacao,
				vet21.ds_observacao,
				vet21.dt_venc_orig,
				vet21.ds_orig_dest,
				vet21.ds_banco,
				vet21.nr_nota_fiscal,
				vet21.ds_conta_baixa);
		end loop;
		close c21;		

	end if;
	-- fim passado
	if (ie_integracao_p = 'CO') then

		open c19;
		loop
		fetch c19 into
			vet19;
		EXIT WHEN NOT FOUND; /* apply on c19 */
			insert into w_fluxo_item_drilldown(nr_sequencia,
				nr_ordem_compra,
				dt_atualizacao,         
				nm_usuario,                   
				nr_titulo,              
				vl_titulo,              
				ds_pessoa,              
				ie_tipo_titulo,         
				cd_conta_financ,        
				ie_periodo,             
				ie_classif_fluxo,       
				ie_union,               
				ds_estabelecimento,     
				nr_cheque,              
				nr_autorizacao,         
				ds_observacao,          
				dt_venc_orig,           
				ds_orig_dest,           
				ds_banco,               
				nr_nota_fiscal,         
				ds_conta_baixa)         
			values (nextval('w_fluxo_item_drilldown_seq'),
				vet19.nr_ordem_compra,
				clock_timestamp(),
				wheb_usuario_pck.get_nm_usuario,
				vet19.nr_titulo,
				vet19.vl_titulo,
				vet19.ds_pessoa,
				vet19.ie_tipo_titulo,
				vet19.cd_conta_financ,
				vet19.ie_periodo,
				vet19.ie_classif_fluxo,
				vet19.ie_union,
				vet19.ds_estabelecimento,
				vet19.nr_cheque,
				vet19.nr_autorizacao,
				vet19.ds_observacao,
				vet19.dt_venc_orig,
				vet19.ds_orig_dest,
				vet19.ds_banco,
				vet19.nr_nota_fiscal,
				vet19.ds_conta_baixa);
		end loop;
		close c19;	
		
		open c43;
		loop
		fetch c43 into
			vet43;
		EXIT WHEN NOT FOUND; /* apply on c43 */
			insert into w_fluxo_item_drilldown(nr_sequencia,
				nr_ordem_compra,
				dt_atualizacao,         
				nm_usuario,                   
				nr_titulo,              
				vl_titulo,              
				ds_pessoa,              
				ie_tipo_titulo,         
				cd_conta_financ,        
				ie_periodo,             
				ie_classif_fluxo,       
				ie_union,               
				ds_estabelecimento,     
				nr_cheque,              
				nr_autorizacao,         
				ds_observacao,          
				dt_venc_orig,           
				ds_orig_dest,           
				ds_banco,               
				nr_nota_fiscal,         
				ds_conta_baixa)         
			values (nextval('w_fluxo_item_drilldown_seq'),
				vet43.nr_ordem_compra,
				clock_timestamp(),
				wheb_usuario_pck.get_nm_usuario,
				vet43.nr_titulo,
				vet43.vl_titulo,
				vet43.ds_pessoa,
				vet43.ie_tipo_titulo,
				vet43.cd_conta_financ,
				vet43.ie_periodo,
				vet43.ie_classif_fluxo,
				vet43.ie_union,
				vet43.ds_estabelecimento,
				vet43.nr_cheque,
				vet43.nr_autorizacao,
				vet43.ds_observacao,
				vet43.dt_venc_orig,
				vet43.ds_orig_dest,
				vet43.ds_banco,
				vet43.nr_nota_fiscal,
				vet43.ds_conta_baixa);
		end loop;
		close c43;		

	end if;

	if (ie_integracao_p not in ('RC', 'CB')) then

		open c46;
		loop
		fetch c46 into
			vet46;
		EXIT WHEN NOT FOUND; /* apply on c46 */
			insert into w_fluxo_item_drilldown(nr_sequencia,
				nr_ordem_compra,
				dt_atualizacao,         
				nm_usuario,                   
				nr_titulo,              
				vl_titulo,              
				ds_pessoa,              
				ie_tipo_titulo,         
				cd_conta_financ,        
				ie_periodo,             
				ie_classif_fluxo,       
				ie_union,               
				ds_estabelecimento,     
				nr_cheque,              
				nr_autorizacao,         
				ds_observacao,          
				dt_venc_orig,           
				ds_orig_dest,           
				ds_banco,               
				nr_nota_fiscal,         
				ds_conta_baixa)         
			values (nextval('w_fluxo_item_drilldown_seq'),
				vet46.nr_ordem_compra,
				clock_timestamp(),
				wheb_usuario_pck.get_nm_usuario,
				vet46.nr_titulo,
				vet46.vl_titulo,
				vet46.ds_pessoa,
				vet46.ie_tipo_titulo,
				vet46.cd_conta_financ,
				vet46.ie_periodo,
				vet46.ie_classif_fluxo,
				vet46.ie_union,
				vet46.ds_estabelecimento,
				vet46.nr_cheque,
				vet46.nr_autorizacao,
				vet46.ds_observacao,
				vet46.dt_venc_orig,
				vet46.ds_orig_dest,
				vet46.ds_banco,
				vet46.nr_nota_fiscal,
				vet46.ds_conta_baixa);
		end loop;
		close c46;	

	end if;
	

	open c39;
	loop
	fetch c39 into
		vet39;
	EXIT WHEN NOT FOUND; /* apply on c39 */
		insert into w_fluxo_item_drilldown(nr_sequencia,
			nr_ordem_compra,
			dt_atualizacao,         
			nm_usuario,                   
			nr_titulo,              
			vl_titulo,              
			ds_pessoa,              
			ie_tipo_titulo,         
			cd_conta_financ,        
			ie_periodo,             
			ie_classif_fluxo,       
			ie_union,               
			ds_estabelecimento,     
			nr_cheque,              
			nr_autorizacao,         
			ds_observacao,          
			dt_venc_orig,           
			ds_orig_dest,           
			ds_banco,               
			nr_nota_fiscal,         
			ds_conta_baixa)         
		values (nextval('w_fluxo_item_drilldown_seq'),
			vet39.nr_ordem_compra,
			clock_timestamp(),
			wheb_usuario_pck.get_nm_usuario,
			vet39.nr_titulo,
			vet39.vl_titulo,
			vet39.ds_pessoa,
			vet39.ie_tipo_titulo,
			vet39.cd_conta_financ,
			vet39.ie_periodo,
			vet39.ie_classif_fluxo,
			vet39.ie_union,
			vet39.ds_estabelecimento,
			vet39.nr_cheque,
			vet39.nr_autorizacao,
			vet39.ds_observacao,
			vet39.dt_venc_orig,
			vet39.ds_orig_dest,
			vet39.ds_banco,
			vet39.nr_nota_fiscal,
			vet39.ds_conta_baixa);
	end loop;
	close c39;	

	open c40;
	loop
	fetch c40 into
		vet40;
	EXIT WHEN NOT FOUND; /* apply on c40 */
		insert into w_fluxo_item_drilldown(nr_sequencia,
			nr_ordem_compra,
			dt_atualizacao,         
			nm_usuario,                   
			nr_titulo,              
			vl_titulo,              
			ds_pessoa,              
			ie_tipo_titulo,         
			cd_conta_financ,        
			ie_periodo,             
			ie_classif_fluxo,       
			ie_union,               
			ds_estabelecimento,     
			nr_cheque,              
			nr_autorizacao,         
			ds_observacao,          
			dt_venc_orig,           
			ds_orig_dest,           
			ds_banco,               
			nr_nota_fiscal,         
			ds_conta_baixa)         
		values (nextval('w_fluxo_item_drilldown_seq'),
			vet40.nr_ordem_compra,
			clock_timestamp(),
			wheb_usuario_pck.get_nm_usuario,
			vet40.nr_titulo,
			vet40.vl_titulo,
			vet40.ds_pessoa,
			vet40.ie_tipo_titulo,
			vet40.cd_conta_financ,
			vet40.ie_periodo,
			vet40.ie_classif_fluxo,
			vet40.ie_union,
			vet40.ds_estabelecimento,
			vet40.nr_cheque,
			vet40.nr_autorizacao,
			vet40.ds_observacao,
			vet40.dt_venc_orig,
			vet40.ds_orig_dest,
			vet40.ds_banco,
			vet40.nr_nota_fiscal,
			vet40.ds_conta_baixa);
	end loop;
	close c40;	

	open c41;
	loop
	fetch c41 into
		vet41;
	EXIT WHEN NOT FOUND; /* apply on c41 */
		insert into w_fluxo_item_drilldown(nr_sequencia,
			nr_ordem_compra,
			dt_atualizacao,         
			nm_usuario,                   
			nr_titulo,              
			vl_titulo,              
			ds_pessoa,              
			ie_tipo_titulo,         
			cd_conta_financ,        
			ie_periodo,             
			ie_classif_fluxo,       
			ie_union,               
			ds_estabelecimento,     
			nr_cheque,              
			nr_autorizacao,         
			ds_observacao,          
			dt_venc_orig,           
			ds_orig_dest,           
			ds_banco,               
			nr_nota_fiscal,         
			ds_conta_baixa)         
		values (nextval('w_fluxo_item_drilldown_seq'),
			vet41.nr_ordem_compra,
			clock_timestamp(),
			wheb_usuario_pck.get_nm_usuario,
			vet41.nr_titulo,
			vet41.vl_titulo,
			vet41.ds_pessoa,
			vet41.ie_tipo_titulo,
			vet41.cd_conta_financ,
			vet41.ie_periodo,
			vet41.ie_classif_fluxo,
			vet41.ie_union,
			vet41.ds_estabelecimento,
			vet41.nr_cheque,
			vet41.nr_autorizacao,
			vet41.ds_observacao,
			vet41.dt_venc_orig,
			vet41.ds_orig_dest,
			vet41.ds_banco,
			vet41.nr_nota_fiscal,
			vet41.ds_conta_baixa);
	end loop;
	close c41;	

	open c42;
	loop
	fetch c42 into
		vet42;
	EXIT WHEN NOT FOUND; /* apply on c42 */
		insert into w_fluxo_item_drilldown(nr_sequencia,
			nr_ordem_compra,
			dt_atualizacao,         
			nm_usuario,                   
			nr_titulo,              
			vl_titulo,              
			ds_pessoa,              
			ie_tipo_titulo,         
			cd_conta_financ,        
			ie_periodo,             
			ie_classif_fluxo,       
			ie_union,               
			ds_estabelecimento,     
			nr_cheque,              
			nr_autorizacao,         
			ds_observacao,          
			dt_venc_orig,           
			ds_orig_dest,           
			ds_banco,               
			nr_nota_fiscal,         
			ds_conta_baixa)         
		values (nextval('w_fluxo_item_drilldown_seq'),
			vet42.nr_ordem_compra,
			clock_timestamp(),
			wheb_usuario_pck.get_nm_usuario,
			vet42.nr_titulo,
			vet42.vl_titulo,
			vet42.ds_pessoa,
			vet42.ie_tipo_titulo,
			vet42.cd_conta_financ,
			vet42.ie_periodo,
			vet42.ie_classif_fluxo,
			vet42.ie_union,
			vet42.ds_estabelecimento,
			vet42.nr_cheque,
			vet42.nr_autorizacao,
			vet42.ds_observacao,
			vet42.dt_venc_orig,
			vet42.ds_orig_dest,
			vet42.ds_banco,
			vet42.nr_nota_fiscal,
			vet42.ds_conta_baixa);
	end loop;
	close c42;	

	update 	w_fluxo_item_drilldown
	set		ie_integracao = ie_integracao_p,
			cd_empresa = cd_empresa_p,
			dt_referencia = dt_referencia_p,
			dt_inicial = dt_inicial_p,
			cd_conta_financ = CASE WHEN cd_conta_financ=0 THEN cd_conta_financ_p  ELSE cd_conta_financ END ,
			ie_classif_fluxo = coalesce(ie_classif_fluxo, ie_classif_fluxo_p),
			ie_periodo = coalesce(ie_periodo, ie_periodo_p)
	where	nm_usuario = wheb_usuario_pck.get_nm_usuario;

	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_fluxo_item_drilldown (dt_referencia_p timestamp, ie_restringe_estab_p text, ie_classif_fluxo_p text, ie_periodo_p text, ie_integracao_p text, cd_conta_financ_p bigint, cd_empresa_p bigint, dt_inicial_p timestamp, ie_regra_atraso_p text, ie_tit_rec_p text, ie_tit_pagar_p text, ie_cheque_p text, ie_cartao_p text, ie_protocolo_p text, ie_ordem_compra_p text, ie_contrato_p text, ie_fluxo_especial_p text, ie_pagto_bordero_p text, qtd_dias_fluxo_oc_p bigint, ie_pagto_escrit_p text, cd_moeda_estrang_p bigint default null) FROM PUBLIC;

