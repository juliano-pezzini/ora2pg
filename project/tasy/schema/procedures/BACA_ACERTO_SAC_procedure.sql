-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_acerto_sac () AS $body$
DECLARE


/*Francisco - OS 38157 - 26/12/2006
Para ajustar os estabelecimentos do SAC
*/
cd_estabelecimento_w	smallint;
dt_ocorrencia_w		timestamp;
cd_pessoa_fisica_w	varchar(10);
ie_origem_w		varchar(1);
nm_pessoa_registro_w	varchar(40);
ds_ocorrencia_w		varchar(4000);
ds_ocorrencia_longa_w	text;
dt_avaliacao_w		timestamp;
nr_seq_tipo_avaliacao_w	bigint;
ds_observacao_w		varchar(255);
cont_w			bigint;
cd_primeiro_estab_w	smallint;

c01 CURSOR FOR
SELECT	cd_estabelecimento
from	estabelecimento
where	ie_situacao	= 'A'
and	cd_estabelecimento > cd_primeiro_estab_w
order by cd_estabelecimento;

c02 CURSOR FOR
SELECT	dt_ocorrencia,
	cd_pessoa_fisica,
	ie_origem,
	nm_pessoa_registro,
	ds_ocorrencia,
	ds_ocorrencia_longa
from	sac_boletim_ocorrencia
where	coalesce(cd_estabelecimento::text, '') = ''
order by dt_ocorrencia;

c03 CURSOR FOR
SELECT	dt_avaliacao,
	cd_pessoa_fisica,
	nr_seq_tipo_avaliacao,
	ds_observacao
from	sac_pesquisa
where	coalesce(cd_estabelecimento::text, '') = ''
order by dt_avaliacao;



BEGIN
select	min(cd_estabelecimento)
into STRICT	cd_primeiro_estab_w
from	estabelecimento;

open c01;
loop
fetch c01 into
	cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	open c02;
	loop
	fetch c02 into
		dt_ocorrencia_w,
		cd_pessoa_fisica_w,
		ie_origem_w,
		nm_pessoa_registro_w,
		ds_ocorrencia_w,
		ds_ocorrencia_longa_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		insert into sac_boletim_ocorrencia(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_ocorrencia,
						cd_pessoa_fisica,
						ie_origem,
						nm_pessoa_registro,
						ds_ocorrencia,
						ds_ocorrencia_longa,
						cd_estabelecimento)
					values (	nextval('sac_boletim_ocorrencia_seq'),
						clock_timestamp(),
						'TASY_BACA',
						dt_ocorrencia_w,
						cd_pessoa_fisica_w,
						ie_origem_w,
						nm_pessoa_registro_w,
						ds_ocorrencia_w,
						ds_ocorrencia_longa_w,
						cd_estabelecimento_w);
	end loop;
	close c02;

	open c03;
	loop
	fetch c03 into
		dt_avaliacao_w,
		cd_pessoa_fisica_w,
		nr_seq_tipo_avaliacao_w,
		ds_observacao_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		insert into sac_pesquisa(nr_sequencia,
					dt_avaliacao,
					dt_atualizacao,
					nm_usuario,
					cd_pessoa_fisica,
					nr_seq_tipo_avaliacao,
					ds_observacao,
					cd_estabelecimento)
				values (nextval('sac_pesquisa_seq'),
					dt_avaliacao_w,
					clock_timestamp(),
					'TASY_BACA',
					cd_pessoa_fisica_w,
					nr_seq_tipo_avaliacao_w,
					ds_observacao_w,
					cd_estabelecimento_w);
	end loop;
	close c03;
end loop;
close c01;

select	count(*)
into STRICT	cont_w
from	sac_boletim_ocorrencia
where	coalesce(cd_estabelecimento::text, '') = '';

while	cont_w > 0 loop

	update	sac_boletim_ocorrencia
	set	cd_estabelecimento	= cd_primeiro_estab_w
	where	coalesce(cd_estabelecimento::text, '') = ''  LIMIT 2000;

	commit;

	cont_w	:= cont_w - 2000;
end loop;

select	count(*)
into STRICT	cont_w
from	sac_pesquisa
where	coalesce(cd_estabelecimento::text, '') = '';

while	cont_w > 0 loop

	update	sac_pesquisa
	set	cd_estabelecimento	= cd_primeiro_estab_w
	where	coalesce(cd_estabelecimento::text, '') = ''  LIMIT 2000;

	commit;

	cont_w	:= cont_w - 2000;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_acerto_sac () FROM PUBLIC;

