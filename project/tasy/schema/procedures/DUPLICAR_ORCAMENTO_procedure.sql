-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE duplicar_orcamento ( nm_usuario_p text, cd_classificacao_p text, dt_mes_ini_p text, dt_mes_fim_p text, pr_acrescimo_p bigint, ie_sobrepor_p text, cd_centro_custo_p bigint, nr_seq_mes_ref_p text, nr_seq_mes_orig_final_p text, cd_empresa_p bigint, cd_conta_contabil_p text, cd_conta_contabil_dest_p text, cd_centro_custo_dest_p bigint, ie_tipo_duplicacao_p bigint, ie_valor_zerado_p text, ie_orcado_real_p text, ie_media_real_p text, cd_estab_p bigint) AS $body$
DECLARE


/*
IE_TIPO_DUPLICACAO_P
0 - duplicar como valor da conta + percentual
1 - duplicar como valor da percentual da conta

IE_ORCADO_REAL_P
'O' - orçado
'R' - real
'P' - real para orçado
*/
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_conta_contabil_dest_w	conta_contabil.cd_conta_contabil%type;
cd_conta_contabil_w		conta_contabil.cd_conta_contabil%type;
cd_centro_custo_dest_w		centro_custo.cd_centro_custo%type;
cd_centro_custo_w		centro_custo.cd_centro_custo%type;
ds_observacao_w			ctb_orcamento.ds_observacao%type;
vl_realizado_w			ctb_orcamento.vl_realizado%type;
vl_original_w			ctb_orcamento.vl_original%type;
nr_seq_mes_ref_w		ctb_mes_ref.nr_sequencia%type;
vl_orcado_w			ctb_orcamento.vl_orcado%type;
ds_erro_w			varchar(2000);
ds_macro_w			varchar(255);
vl_orcado_adic_w		double precision;
pr_acrescimo_w			double precision;
ie_media_real_w			varchar(1);
ie_vigente_w			varchar(1);
cont_w				integer;
dt_mes_origem_inicial_w		timestamp;
dt_mes_origem_final_w		timestamp;
dt_referencia_dest_w		timestamp;
dt_liberacao_w			timestamp;

c01 CURSOR FOR
	SELECT	a.cd_estabelecimento,
		a.cd_conta_contabil,
		a.cd_centro_custo,
		a.vl_original,
		a.vl_orcado,
		a.vl_realizado,
		a.nr_seq_mes_ref,
		a.ds_observacao
	from	estabelecimento b,
		ctb_orcamento a
	where	a.cd_estabelecimento = b.cd_estabelecimento
	and	b.cd_empresa = cd_empresa_p
	and	a.cd_centro_custo = coalesce(cd_centro_custo_p, a.cd_centro_custo)
	and	ctb_obter_se_centro_usuario(a.cd_centro_custo, cd_empresa_p, nm_usuario_p) = 'S'
	and	a.nr_seq_mes_ref in (
		SELECT	nr_sequencia
		from	ctb_mes_ref
		where	dt_referencia between to_date(dt_mes_ini_p,'dd/mm/yyyy') and to_date(dt_mes_fim_p,'dd/mm/yyyy')
		and	cd_empresa = cd_empresa_p
		
union

		select	(nr_seq_mes_ref_p)::numeric
		)
	and (coalesce(cd_classificacao_p::text, '') = '' or
		ctb_obter_se_conta_classif_sup(a.cd_conta_contabil, cd_classificacao_p) = 'S')
	and	a.cd_conta_contabil = coalesce(cd_conta_contabil_p, a.cd_conta_contabil)
	and	a.cd_estabelecimento = coalesce(cd_estab_p, a.cd_estabelecimento);

c02 CURSOR FOR
	SELECT	nr_sequencia,
		dt_referencia
	from	ctb_mes_ref
	where	cd_empresa = cd_empresa_p
	and	dt_referencia between to_date(dt_mes_ini_p,'dd/mm/yyyy') and to_date(dt_mes_fim_p,'dd/mm/yyyy');

c03 CURSOR FOR
	SELECT	a.cd_estabelecimento,
		a.cd_conta_contabil,
		a.cd_centro_custo,
		a.vl_original,
		a.vl_orcado,
		a.vl_realizado,
		a.ds_observacao
	from	estabelecimento b,
		ctb_orcamento a
	where	a.cd_estabelecimento = b.cd_estabelecimento
	and	b.cd_empresa = cd_empresa_p
	and	a.cd_centro_custo = coalesce(cd_centro_custo_p, a.cd_centro_custo)
	and	ctb_obter_se_centro_usuario(a.cd_centro_custo, cd_empresa_p, nm_usuario_p) = 'S'
	and	a.nr_seq_mes_ref = coalesce(nr_seq_mes_ref_p, a.nr_seq_mes_ref)
	and (coalesce(cd_classificacao_p::text, '') = '' or ctb_obter_se_conta_classif_sup(a.cd_conta_contabil, cd_classificacao_p) = 'S')
	and	a.cd_conta_contabil = coalesce(cd_conta_contabil_p, a.cd_conta_contabil)
	and	a.cd_estabelecimento	= coalesce(cd_estab_p,a.cd_estabelecimento);


BEGIN
pr_acrescimo_w := coalesce(pr_acrescimo_p,0);

if (coalesce(nr_seq_mes_ref_p,0) <> 0) then
	begin
	dt_mes_origem_inicial_w	:= ctb_obter_mes_ref(nr_seq_mes_ref_p);
	end;
end if;

if (coalesce(nr_seq_mes_orig_final_p,0) <> 0) then
	begin
	dt_mes_origem_final_w	:= ctb_obter_mes_ref(nr_seq_mes_orig_final_p);
	end;
end if;

dt_mes_origem_final_w		:= coalesce(dt_mes_origem_final_w, dt_mes_origem_inicial_w);

ie_media_real_w	:= coalesce(ie_media_real_p,'N');

cd_conta_contabil_dest_w := coalesce(cd_conta_contabil_dest_p,'X');

if (coalesce(nr_seq_mes_ref_p::text, '') = '') and (cd_conta_contabil_dest_w <> 'X') then
	begin
	open c01;
	loop
	fetch c01 into
		cd_estabelecimento_w,
		cd_conta_contabil_w,
		cd_centro_custo_w,
		vl_original_w,
		vl_orcado_w,
		vl_realizado_w,
		nr_seq_mes_ref_w,
		ds_observacao_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		cd_centro_custo_dest_w := coalesce(cd_centro_custo_dest_p, cd_centro_custo_w);

		if (ie_orcado_real_p = 'O') then
			begin
			if (ie_tipo_duplicacao_p = 0) then
				begin
				vl_orcado_w := vl_orcado_w + ((vl_orcado_w * pr_acrescimo_w) / 100);
				end;
			elsif (ie_tipo_duplicacao_p = 1) then
				begin
				vl_orcado_w := vl_orcado_w * (pr_acrescimo_w / 100);
				end;
			end if;
			end;
		else
			begin
			if (ie_tipo_duplicacao_p = 0) then
				begin
				vl_realizado_w	:= vl_realizado_w + ((vl_realizado_w * pr_acrescimo_w) / 100);
				end;
			elsif (ie_tipo_duplicacao_p = 1) then
				begin
				vl_realizado_w	:= vl_realizado_w * (pr_acrescimo_w / 100);
				end;
			end if;
			end;
		end if;

		select  count(*)
		into STRICT	cont_w
		from 	ctb_orcamento
		where 	nr_seq_mes_ref		= nr_seq_mes_ref_w
		and	cd_conta_contabil	= cd_conta_contabil_dest_w
		and	cd_centro_custo		= cd_centro_custo_dest_w
		and	cd_estabelecimento	= cd_estabelecimento_w;

		if (cont_w = 0)	then
			begin
			if (ie_valor_zerado_p = 'S') then
				begin
				vl_original_w := 0;
				end;
			end if;

			insert into ctb_orcamento(
				nr_sequencia,
				nr_seq_mes_ref,
				dt_atualizacao,
				nm_usuario,
				cd_estabelecimento,
				cd_conta_contabil,
				cd_centro_custo,
				vl_original,
				vl_orcado,
				vl_realizado,
				ds_observacao,
				ie_cenario,
				ie_origem_orc)
			(SELECT nextval('ctb_orcamento_seq'),
				nr_seq_mes_ref_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_estabelecimento_w,
				cd_conta_contabil_dest_w,
				cd_centro_custo_dest_w,
				vl_original_w,
				CASE WHEN ie_orcado_real_p='P' THEN  vl_realizado_w  ELSE vl_orcado_w END ,
				CASE WHEN ie_orcado_real_p='R' THEN  vl_realizado_w  ELSE 0 END ,
				ds_observacao_w,
				'N',
				'SIS'
			);
			end;
		else
			begin
			if (ie_sobrepor_p in ('S','A')) 	then
				begin
				select	max(dt_liberacao)
				into STRICT	dt_liberacao_w
				from	ctb_orcamento
				where 	nr_seq_mes_ref		= nr_seq_mes_ref_w
				and	cd_conta_contabil	= cd_conta_contabil_dest_w
				and	cd_centro_custo		= cd_centro_custo_dest_w
				and	cd_estabelecimento	= cd_estabelecimento_w;

				if (coalesce(dt_liberacao_w::text, '') = '') then
					begin
					update	ctb_orcamento set
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= nm_usuario_p,
						vl_orcado		= CASE WHEN ie_sobrepor_p='A' THEN vl_orcado  ELSE 0 END  + CASE WHEN ie_orcado_real_p='P' THEN  vl_realizado_w  ELSE vl_orcado_w END ,
						vl_realizado		= CASE WHEN ie_sobrepor_p='A' THEN vl_realizado  ELSE 0 END  + CASE WHEN ie_orcado_real_p='R' THEN  vl_realizado_w  ELSE 0 END
					where 	nr_seq_mes_ref		= nr_seq_mes_ref_w
					and	cd_conta_contabil 	= cd_conta_contabil_dest_w
					and	cd_centro_custo 	= cd_centro_custo_dest_w
					and	cd_estabelecimento	= cd_estabelecimento_w;
					end;
				end if;
				end;
			end if;
			end;
		end if;
		end;
	end loop;
	close c01;
	end;
else
	begin
	open c03;
	loop
	fetch c03 into
		cd_estabelecimento_w,
		cd_conta_contabil_w,
		cd_centro_custo_w,
		vl_original_w,
		vl_orcado_w,
		vl_realizado_w,
		ds_observacao_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
		if (ie_media_real_w = 'S') and (dt_mes_origem_final_w IS NOT NULL AND dt_mes_origem_final_w::text <> '') then
			begin
			select	avg(vl_realizado)
			into STRICT	vl_realizado_w
			from	ctb_mes_ref a,
				ctb_orcamento b
			where	a.nr_sequencia		= b.nr_seq_mes_ref
			and	a.cd_empresa		= cd_empresa_p
			and	b.cd_estabelecimento	= cd_estabelecimento_w
			and	b.cd_centro_custo	= cd_centro_custo_w
			and	b.cd_conta_contabil	= cd_conta_contabil_w
			and	a.dt_referencia between dt_mes_origem_inicial_w and dt_mes_origem_final_w;
			end;
		end if;

		if (ie_orcado_real_p = 'O') then
			begin
			if (ie_tipo_duplicacao_p = 0) then
				begin
				vl_orcado_w := vl_orcado_w + ((vl_orcado_w * pr_acrescimo_w) / 100);
				end;
			elsif (ie_tipo_duplicacao_p = 1) then
				begin
				vl_orcado_w := vl_orcado_w * (pr_acrescimo_w / 100);
				end;
			end if;
			end;
		else
			begin
			if (ie_tipo_duplicacao_p = 0) then
				begin
				vl_realizado_w	:= vl_realizado_w + ((vl_realizado_w * pr_acrescimo_w) / 100);
				end;
			elsif (ie_tipo_duplicacao_p = 1) then
				begin
				vl_realizado_w	:= vl_realizado_w * (pr_acrescimo_w / 100);
				end;
			end if;
			end;
		end if;

		cd_conta_contabil_dest_w	:= coalesce(cd_conta_contabil_dest_p, cd_conta_contabil_w);
		cd_centro_custo_dest_w		:= coalesce(cd_centro_custo_dest_p, cd_centro_custo_w);

		open c02;
		loop
		fetch c02 into
			nr_seq_mes_ref_w,
			dt_referencia_dest_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			select  count(*)
			into STRICT	cont_w
			from 	ctb_orcamento
			where 	nr_seq_mes_ref		= nr_seq_mes_ref_w
			and	cd_conta_contabil 	= cd_conta_contabil_dest_w
			and	cd_centro_custo 	= cd_centro_custo_dest_w
			and	cd_estabelecimento	= cd_estabelecimento_w;

			ie_vigente_w	:= substr(coalesce(obter_se_conta_vigente(cd_conta_contabil_dest_w, dt_referencia_dest_w),'N'),1,1);

			if (cont_w = 0) and (ie_vigente_w = 'S') then
				begin
				if (ie_valor_zerado_p = 'S') then
					begin
					vl_original_w := 0;
					end;
				end if;

				begin
				insert into ctb_orcamento(
					nr_sequencia,
					nr_seq_mes_ref,
					dt_atualizacao,
					nm_usuario,
					cd_estabelecimento,
					cd_conta_contabil,
					cd_centro_custo,
					vl_original,
					vl_orcado,
					vl_realizado,
					ds_observacao,
					ie_cenario,
					ie_origem_orc)
				(SELECT nextval('ctb_orcamento_seq'),
					nr_seq_mes_ref_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_estabelecimento_w,
					cd_conta_contabil_dest_w,
					cd_centro_custo_dest_w,
					vl_original_w,
					CASE WHEN ie_orcado_real_p='P' THEN vl_realizado_w  ELSE vl_orcado_w END ,
					CASE WHEN ie_orcado_real_p='R' THEN vl_realizado_w  ELSE 0 END ,
					ds_observacao_w,
					'N',
					'SIS'
				);
				exception when others then
					ds_erro_w	:= substr(sqlerrm, 1, 255);
					ds_macro_w	:= substr('CD_CONTA_CONTABIL=' || cd_conta_contabil_dest_w || ';' ||
									'CD_CENTRO_CUSTO=' || cd_centro_custo_dest_w || ';' ||
									'DS_ERRO=' || ds_erro_w,1,255);
					CALL wheb_mensagem_pck.exibir_mensagem_abort(186186,ds_macro_w);
				end;
				end;
			else
				begin
				if (ie_sobrepor_p in ('S','A')) and (ie_vigente_w = 'S') then
					begin
					select	max(dt_liberacao)
					into STRICT	dt_liberacao_w
					from	ctb_orcamento
					where	nr_seq_mes_ref		= nr_seq_mes_ref_w
					and	cd_conta_contabil	= cd_conta_contabil_dest_w
					and	cd_centro_custo		= cd_centro_custo_dest_w
					and	cd_estabelecimento	= cd_estabelecimento_w;

					if (coalesce(dt_liberacao_w::text, '') = '') then
						begin
						update	ctb_orcamento set
							dt_atualizacao		= clock_timestamp(),
							nm_usuario		= nm_usuario_p,
							vl_orcado		= CASE WHEN ie_sobrepor_p='A' THEN vl_orcado  ELSE 0 END  + CASE WHEN ie_orcado_real_p='P' THEN  vl_realizado_w  ELSE vl_orcado_w END ,
							vl_realizado		= CASE WHEN ie_sobrepor_p='A' THEN vl_realizado  ELSE 0 END  + CASE WHEN ie_orcado_real_p='R' THEN  vl_realizado_w  ELSE 0 END
						where	nr_seq_mes_ref		= nr_seq_mes_ref_w
						and	cd_conta_contabil 	= cd_conta_contabil_dest_w
						and	cd_centro_custo 	= cd_centro_custo_dest_w
						and	cd_estabelecimento	= cd_estabelecimento_w;
						end;
					end if;
					end;
				end if;
				end;
			end if;
			end;
		end loop;
		close c02;
		end;
	end loop;
	close c03;
	end;
end if;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicar_orcamento ( nm_usuario_p text, cd_classificacao_p text, dt_mes_ini_p text, dt_mes_fim_p text, pr_acrescimo_p bigint, ie_sobrepor_p text, cd_centro_custo_p bigint, nr_seq_mes_ref_p text, nr_seq_mes_orig_final_p text, cd_empresa_p bigint, cd_conta_contabil_p text, cd_conta_contabil_dest_p text, cd_centro_custo_dest_p bigint, ie_tipo_duplicacao_p bigint, ie_valor_zerado_p text, ie_orcado_real_p text, ie_media_real_p text, cd_estab_p bigint) FROM PUBLIC;

