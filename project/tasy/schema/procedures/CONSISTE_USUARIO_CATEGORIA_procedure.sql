-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_usuario_categoria ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, ie_tipo_atendimento_p bigint, cd_usuario_convenio_p text, ie_usuario_categoria_p INOUT text, ie_regra_bloqueio_p INOUT text, ds_observacao_p INOUT text, ie_clinica_p bigint, nr_seq_regra_p INOUT bigint) AS $body$
DECLARE


ds_observacao_w    		varchar(255);						
ie_usuario_categoria_w	varchar(1)  := 'S';
ie_tipo_atendimento_w  	bigint;
ie_regra_bloqueio_w  	varchar(1) := 'X';
ie_clinica_w    		integer;
ie_encontrou_registro_w varchar(1) := 'N';
ie_encontrou_seg_w		varchar(1) := 'N';
ie_param_753			varchar(1);
ie_param_1219			varchar(1) := 'N';
nr_seq_regra_w			bigint;
qt_outra_categoria_w  	bigint;
qt_convenio_regra_w		integer;
qt_tamanho_w			integer;
qt_tamanho_seg_w		integer;
		
c01 CURSOR FOR
	SELECT (nr_pos_final - nr_pos_inicial)
	into STRICT  	qt_tamanho_seg_w
	from  	conv_regra_usuario_categ
	where  	cd_estabelecimento  = cd_estabelecimento_p
	and  	cd_convenio    = cd_convenio_p
	and  	cd_categoria    <> cd_categoria_p
	and  	cd_usuario_padrao = substr(cd_usuario_convenio_p,nr_pos_inicial,(nr_pos_final - nr_pos_inicial) + 1)
	group by nr_pos_inicial,
			nr_pos_final;

BEGIN

ie_param_753 := Obter_Param_Usuario(916, 753, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_param_753);
ie_param_1219 := Obter_Param_Usuario(916, 1219, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_param_1219);

if (ie_param_1219 <> 'N' and ie_param_753 = 'R')then
	SELECT * FROM validate_user_category( cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, ie_tipo_atendimento_p, cd_usuario_convenio_p, ie_clinica_p, ie_param_1219, ie_usuario_categoria_w, ie_regra_bloqueio_w, ds_observacao_w) INTO STRICT ie_usuario_categoria_w, ie_regra_bloqueio_w, ds_observacao_w;
else

	select	count(*)
	into STRICT  	qt_convenio_regra_w
	from  	conv_regra_usuario_categ
	where  	cd_estabelecimento  = cd_estabelecimento_p
	and  	cd_convenio    = cd_convenio_p;
	
	ie_encontrou_registro_w := 'N';
	ie_tipo_atendimento_w 	:= coalesce(ie_tipo_atendimento_p,0);
	ie_clinica_w    	  	:= coalesce(ie_clinica_p,0);

	select  CASE WHEN(max(nr_sequencia) > 0) THEN 'S' ELSE 'N' END ie_encontrou_registro,
			coalesce(max(ie_regra_bloqueio),'X'),
			sum(nr_pos_final - nr_pos_inicial),
			max(ds_observacao)
	into STRICT 	ie_encontrou_registro_w,
			ie_regra_bloqueio_w,
			qt_tamanho_w,
			ds_observacao_w
	from 	conv_regra_usuario_categ
	where  	cd_estabelecimento  = cd_estabelecimento_p
	and  	cd_convenio  = cd_convenio_p
	and  	cd_categoria  = cd_categoria_p
	and  	coalesce(ie_tipo_atendimento, ie_tipo_atendimento_w) = ie_tipo_atendimento_w
	and  	coalesce(ie_clinica, ie_clinica_w) = ie_clinica_w
	AND     cd_usuario_padrao = substr(cd_usuario_convenio_p,nr_pos_inicial,(nr_pos_final - nr_pos_inicial) + 1)  LIMIT 1;
	
	if (ie_encontrou_registro_w = 'S') then
		ie_usuario_categoria_w := 'S';
	else
		ie_usuario_categoria_w := 'N';
	end if;

	select	count(*)
	into STRICT  	qt_outra_categoria_w
	from  	conv_regra_usuario_categ
	where  	cd_estabelecimento  = cd_estabelecimento_p
	and  	cd_convenio    = cd_convenio_p
	and  	cd_categoria    <> cd_categoria_p
	and  	cd_usuario_padrao = substr(cd_usuario_convenio_p,nr_pos_inicial,(nr_pos_final - nr_pos_inicial) + 1);



	if (qt_outra_categoria_w  > 0) and (ie_encontrou_registro_w  = 'N') then
		ie_usuario_categoria_w    := 'C';
	end if;

	if (ie_param_753	= 'N') THEN

		if (qt_convenio_regra_w = 0) then
			ie_usuario_categoria_w := 'S';
		else 	
			if (qt_outra_categoria_w  > 0) and (ie_encontrou_registro_w  = 'N') then
				ie_usuario_categoria_w := 'C';
			ie_regra_bloqueio_w := 'B';
			end if;
		
			open c01;
				loop
				fetch c01 into
					qt_tamanho_seg_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */
				begin
					if (qt_tamanho_w < qt_tamanho_seg_w) then
						ie_encontrou_seg_w := 'S';
					end if;
				end;
				end loop;
				close c01;
			
			if (ie_encontrou_seg_w = 'S') then
				ie_usuario_categoria_w := 'N';
			end if;
			
			if (obter_funcao_ativa = 916) and (ie_encontrou_registro_w = 'N') then
				begin			
				select 	'S'
				into STRICT	ie_usuario_categoria_w where	exists(	SELECT  1
						from 	conv_regra_usuario_categ
						where  	cd_estabelecimento  = cd_estabelecimento_p
						and  	cd_convenio  = cd_convenio_p
						and  	cd_categoria  = cd_categoria_p
						and  	coalesce(ie_tipo_atendimento,ie_tipo_atendimento_w)  = ie_tipo_atendimento_w
						and  	coalesce(ie_clinica,ie_clinica_w) = ie_clinica_w
						and	cd_usuario_padrao = substr(cd_usuario_convenio_p,nr_pos_inicial,(nr_pos_final - nr_pos_inicial) + 1)
						and	coalesce(ie_regra_bloqueio,'B') <> 'B') LIMIT 1;				
				exception
				when others then
					ie_usuario_categoria_w := ie_usuario_categoria_w;
				end;		
			end if;		
		end if;
	elsif	(ie_encontrou_registro_w = 'S' and ie_param_753 <> 'R' and ((ie_regra_bloqueio_w = 'B') or (ie_regra_bloqueio_w = 'L'))) then
		ie_usuario_categoria_w	:= 'N';
	elsif (ie_encontrou_registro_w = 'N') and ((ie_param_753 = 'C') or (ie_param_753 = 'R' and ie_encontrou_registro_w = 'S' and ie_regra_bloqueio_w = 'L')) then
		ie_usuario_categoria_w	 := 'S';
	elsif (ie_param_753 = 'R' and ie_encontrou_registro_w = 'N' and qt_outra_categoria_w = 0) then
		ie_usuario_categoria_w	 := 'S';
	end if;

end if;

ie_usuario_categoria_p	:= coalesce(ie_usuario_categoria_w,'S');
ie_regra_bloqueio_p    	:= coalesce(ie_regra_bloqueio_w,'B');
ds_observacao_p    	:= ds_observacao_w;
nr_seq_regra_p		:= nr_seq_regra_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_usuario_categoria ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, ie_tipo_atendimento_p bigint, cd_usuario_convenio_p text, ie_usuario_categoria_p INOUT text, ie_regra_bloqueio_p INOUT text, ds_observacao_p INOUT text, ie_clinica_p bigint, nr_seq_regra_p INOUT bigint) FROM PUBLIC;

