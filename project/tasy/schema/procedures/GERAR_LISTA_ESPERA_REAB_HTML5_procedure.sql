-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_lista_espera_reab_html5 (ds_lista_espera_p text, ie_gera_sessoes_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
 
 
nr_sequencia_w		bigint;

dt_inclusao_lista_w	timestamp;

cd_convenio_w		integer;

dt_prev_fim_w		timestamp;

cd_pessoa_fisica_w	varchar(10);

dt_prev_inicio_w	timestamp;

dt_nascimento_w		timestamp;

ds_observacao_w		varchar(255);

cd_tipo_agenda_w	bigint;

cd_agenda_w		bigint;

nr_sessoes_w		bigint;

cd_procedimento_w	bigint;

ie_origem_proced_w	bigint;

cd_especialidade_w	integer;

cd_medico_exec_w	varchar(10);

nr_seq_proc_interno_w	bigint;

nr_seq_status_w		bigint;

nm_paciente_w		varchar(80);

nr_seq_lista_w		bigint;

cd_proc_serv_w		bigint;

ie_origem_proced_serv_w	bigint;

nr_seq_proc_interno_serv_w	bigint;

cd_proc_adic_w		bigint;

ie_origem_proc_adic_w	bigint;

nr_seq_proc_interno_adic_w	bigint;

nr_seq_item_w		bigint;

i			smallint;

ie_classif_agenda_w	varchar(5);

nr_seq_classif_w	bigint;

 
 
C01 CURSOR FOR 
 
	SELECT	cd_agenda, 
 
		cd_procedimento, 
 
		ie_origem_proced, 
 
		cd_especialidade, 
 
		cd_medico_exec, 
 
		nr_seq_proc_interno, 
 
		nr_sequencia, 
 
		cd_proc_serv, 
 
		ie_origem_proced_serv, 
 
		nr_seq_proc_interno_serv, 
 
		coalesce(nr_sessoes,1), 
 
		nr_seq_classif 
 
	from	rp_lista_espera_modelo 
 
	where	Obter_Se_Contido(nr_sequencia,ds_lista_espera_p) = 'S';	
 
 
 
C02 CURSOR FOR 
 
	SELECT	cd_procedimento, 
 
		nr_seq_proc_interno, 
 
		ie_origem_proced 
 
	from	rp_lista_espera_proc_adic 
 
	where	nr_seq_lista = nr_seq_lista_w;

	 
 

BEGIN 
 
select	max(cd_convenio), 
 
	max(cd_pessoa_fisica),	 
 
	max(to_date(obter_dados_pf(cd_pessoa_fisica,'DN'),'DD/MM/YYYY')), 
 
	max(obter_nome_pf(cd_pessoa_fisica)) 
 
into STRICT	cd_convenio_w, 
 
	cd_pessoa_fisica_w,	 
 
	dt_nascimento_w	, 
 
	nm_paciente_w 
 
from	rp_lista_espera_modelo 
 
where	Obter_Se_Contido(nr_Sequencia,ds_lista_espera_p) = 'S';
 
 
 
select nextval('agenda_integrada_seq') 
 
into STRICT	nr_sequencia_w 

;
 
 
 
select	min(nr_sequencia) 
 
into STRICT	nr_seq_status_w 
 
from 	agenda_integrada_status 
 
where 	ie_situacao = 'A' 
 
and 	ie_Status_tasy = 'EA';
 
 
 
insert into agenda_integrada(	 
 
	nr_sequencia, 
 
	dt_inicio_agendamento, 
 
	cd_convenio, 
 
	nr_seq_status, 
 
	nm_usuario, 
 
	cd_estabelecimento, 
 
	dt_atualizacao,	 
 
	cd_pessoa_fisica,	 
 
	dt_nascimento,	 
 
	ie_turno, 
 
	nm_usuario_nrec, 
 
	dt_atualizacao_nrec, 
 
	nm_paciente) 
 
values (	nr_sequencia_w, 
 
	clock_timestamp(), 
 
	cd_convenio_w, 
 
	nr_seq_status_w, 
 
	nm_usuario_p, 
 
	cd_estabelecimento_p, 
 
	clock_timestamp(),	 
 
	cd_pessoa_fisica_w,	 
 
	dt_nascimento_w,	 
 
	2, 
 
	nm_usuario_p, 
 
	clock_timestamp(), 
 
	nm_paciente_w);
 
	 
 
open C01;
 
loop 
 
fetch C01 into	 
 
	cd_agenda_w, 
 
	cd_procedimento_w, 
 
	ie_origem_proced_w, 
 
	cd_especialidade_w, 
 
	cd_medico_exec_w, 
 
	nr_seq_proc_interno_w, 
 
	nr_seq_lista_w, 
 
	cd_proc_serv_w, 
 
	ie_origem_proced_serv_w, 
 
	nr_seq_proc_interno_serv_w, 
 
	nr_sessoes_w, 
 
	nr_seq_classif_w;
 
EXIT WHEN NOT FOUND; /* apply on C01 */
 
	begin 
 
	select	max(cd_tipo_agenda) 
 
	into STRICT	cd_tipo_agenda_w 
 
	from	agenda 
 
	where	cd_agenda = cd_agenda_w;
 
	 
 
	select	max(ie_classif_agenda) 
 
	into STRICT	ie_classif_agenda_w 
 
	from	rp_classificacao_pedido 
 
	where	nr_sequencia = nr_seq_classif_w;
 
	 
 
	if (coalesce(cd_tipo_agenda_w,0) = 2) then	 -- Exame 
 
		 
 
		if (ie_gera_sessoes_p = 'N') then 
 
		  nr_sessoes_w := 1;
 
		end if;
 
		 
 
		for i in 1..nr_sessoes_w loop 
 
		 
 
			select	nextval('agenda_integrada_item_seq') 
 
			into STRICT	nr_seq_item_w 
 
			;
 
		 
 
			insert into agenda_integrada_item( 
 
					nr_sequencia, 
 
					nr_seq_agenda_int, 
 
					dt_atualizacao, 
 
					nm_usuario, 
 
					dt_atualizacao_nrec, 
 
					nm_usuario_nrec, 
 
					ie_tipo_agendamento, 
 
					nr_seq_proc_interno, 
 
					cd_procedimento, 
 
					ie_origem_proced, 
 
					cd_medico, 
 
					nr_seq_lista, 
 
					ie_classif_agenda) 
 
				values ( 
 
					nr_seq_item_w, 
 
					nr_sequencia_w, 
 
					clock_timestamp(), 
 
					nm_usuario_p, 
 
					clock_timestamp(), 
 
					nm_usuario_p, 
 
					'E', 
 
					nr_seq_proc_interno_w, 
 
					cd_procedimento_w, 
 
					ie_origem_proced_w,				 
 
					cd_medico_exec_w, 
 
					nr_seq_lista_w, 
 
					ie_classif_agenda_w);
 
		end loop;
 
 
 
		open C02;
 
		loop 
 
		fetch C02 into	 
 
			cd_proc_adic_w, 
 
			nr_seq_proc_interno_adic_w, 
 
			ie_origem_proc_adic_w;
 
		EXIT WHEN NOT FOUND; /* apply on C02 */
 
			begin 
 
			insert into ageint_exame_adic_item(	 
 
				nr_sequencia, 
 
				nr_seq_proc_interno, 
 
				dt_atualizacao, 
 
				nm_usuario, 
 
				nr_seq_item, 
 
				dt_atualizacao_nrec, 
 
				nm_usuario_nrec, 
 
				cd_procedimento, 
 
				ie_origem_proced) 
 
			values (	nextval('ageint_exame_adic_item_seq'), 
 
				nr_seq_proc_interno_adic_w, 
 
				clock_timestamp(), 
 
				nm_usuario_p, 
 
				nr_seq_item_w, 
 
				clock_timestamp(), 
 
				nm_usuario_p, 
 
				cd_proc_adic_w, 
 
				ie_origem_proc_adic_w);
 
			end;
 
		end loop;
 
		close C02;			
 
	 
 
	elsif (coalesce(cd_tipo_agenda_w,0) = 3) then -- Consulta	 
 
	 
 
		if (ie_gera_sessoes_p = 'N') then 
 
		  nr_sessoes_w := 1;
 
		end if;
 
		 
 
		for i in 1..nr_sessoes_w loop 
 
 
 
			select	nextval('agenda_integrada_item_seq') 
 
			into STRICT	nr_seq_item_w 
 
			;
 
		 
 
			insert into agenda_integrada_item( 
 
					nr_sequencia, 
 
					nr_seq_agenda_int, 
 
					dt_atualizacao, 
 
					nm_usuario, 
 
					dt_atualizacao_nrec, 
 
					nm_usuario_nrec, 
 
					ie_tipo_agendamento,				 
 
					cd_especialidade, 
 
					cd_medico, 
 
					nr_seq_lista, 
 
					ie_classif_agenda) 
 
				values ( 
 
					nr_seq_item_w, 
 
					nr_sequencia_w, 
 
					clock_timestamp(), 
 
					nm_usuario_p, 
 
					clock_timestamp(), 
 
					nm_usuario_p, 
 
					'C',			 
 
					cd_especialidade_w, 
 
					cd_medico_exec_w, 
 
					nr_seq_lista_w, 
 
					ie_classif_agenda_w);
 
					 
 
			insert into ageint_exame_adic_item(	 
 
					nr_sequencia, 
 
					nr_seq_proc_interno, 
 
					dt_atualizacao, 
 
					nm_usuario, 
 
					nr_seq_item, 
 
					dt_atualizacao_nrec, 
 
					nm_usuario_nrec, 
 
					cd_procedimento, 
 
					ie_origem_proced) 
 
				values (	nextval('ageint_exame_adic_item_seq'), 
 
					nr_seq_proc_interno_w, 
 
					clock_timestamp(), 
 
					nm_usuario_p, 
 
					nr_seq_item_w, 
 
					clock_timestamp(), 
 
					nm_usuario_p, 
 
					cd_procedimento_w, 
 
					ie_origem_proced_w);	
 
		end loop;
 
		 
 
		open C02;
 
		loop 
 
		fetch C02 into	 
 
			cd_proc_adic_w, 
 
			nr_seq_proc_interno_adic_w, 
 
			ie_origem_proc_adic_w;
 
		EXIT WHEN NOT FOUND; /* apply on C02 */
 
			begin 
 
			insert into ageint_exame_adic_item(	 
 
				nr_sequencia, 
 
				nr_seq_proc_interno, 
 
				dt_atualizacao, 
 
				nm_usuario, 
 
				nr_seq_item, 
 
				dt_atualizacao_nrec, 
 
				nm_usuario_nrec, 
 
				cd_procedimento, 
 
				ie_origem_proced) 
 
			values (	nextval('ageint_exame_adic_item_seq'), 
 
				nr_seq_proc_interno_adic_w, 
 
				clock_timestamp(), 
 
				nm_usuario_p, 
 
				nr_seq_item_w, 
 
				clock_timestamp(), 
 
				nm_usuario_p, 
 
				cd_proc_adic_w, 
 
				ie_origem_proc_adic_w);
 
			end;
 
		end loop;
 
		close C02;		
 
				 
 
	elsif (coalesce(cd_tipo_agenda_w,0) = 5) then-- Servi√ßo 
 
		 
 
		if (ie_gera_sessoes_p = 'N') then 
 
		  nr_sessoes_w := 1;
 
		end if;
 
		 
 
		for i in 1..nr_sessoes_w loop 
 
		 
 
			select	nextval('agenda_integrada_item_seq') 
 
			into STRICT	nr_seq_item_w 
 
			;
 
			 
 
			insert into agenda_integrada_item( 
 
					nr_sequencia, 
 
					nr_seq_agenda_int, 
 
					dt_atualizacao, 
 
					nm_usuario, 
 
					dt_atualizacao_nrec, 
 
					nm_usuario_nrec, 
 
					ie_tipo_agendamento, 
 
					nr_seq_proc_interno, 
 
					cd_procedimento, 
 
					ie_origem_proced, 
 
					nr_seq_lista, 
 
					ie_classif_agenda) 
 
				values ( 
 
					nr_seq_item_w, 
 
					nr_sequencia_w, 
 
					clock_timestamp(), 
 
					nm_usuario_p, 
 
					clock_timestamp(), 
 
					nm_usuario_p, 
 
					'S', 
 
					nr_seq_proc_interno_serv_w, 
 
					cd_proc_serv_w, 
 
					ie_origem_proced_serv_w, 
 
					nr_seq_lista_w, 
 
					ie_classif_agenda_w);
 
		 
 
		end loop;	
 
 
 
		open C02;
 
		loop 
 
		fetch C02 into	 
 
			cd_proc_adic_w, 
 
			nr_seq_proc_interno_adic_w, 
 
			ie_origem_proc_adic_w;
 
		EXIT WHEN NOT FOUND; /* apply on C02 */
 
			begin 
 
			insert into ageint_exame_adic_item(	 
 
				nr_sequencia, 
 
				nr_seq_proc_interno, 
 
				dt_atualizacao, 
 
				nm_usuario, 
 
				nr_seq_item, 
 
				dt_atualizacao_nrec, 
 
				nm_usuario_nrec, 
 
				cd_procedimento, 
 
				ie_origem_proced) 
 
			values (	nextval('ageint_exame_adic_item_seq'), 
 
				nr_seq_proc_interno_adic_w, 
 
				clock_timestamp(), 
 
				nm_usuario_p, 
 
				nr_seq_item_w, 
 
				clock_timestamp(), 
 
				nm_usuario_p, 
 
				cd_proc_adic_w, 
 
				ie_origem_proc_adic_w);
 
			end;
 
		end loop;
 
		close C02;	
 
	end if;
 
	end;
 
end loop;
 
close C01;
 
 
 
commit;
 
 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_lista_espera_reab_html5 (ds_lista_espera_p text, ie_gera_sessoes_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

