-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_vincula_atend_cons_hor ( nr_atendimento_p bigint, nr_sequencia_p bigint, ie_tipo_agenda_p text, nm_usuario_p text, ie_exec_regra_p text default 'N') AS $body$
DECLARE


nr_sequencia_w		bigint;
nr_seq_item_princ_w	bigint;					
nr_seq_agenda_cons_w	agenda_consulta.nr_sequencia%type;
nr_seq_agenda_cons_ww	agenda_consulta.nr_sequencia%type;
nr_atendimento_w	bigint;
ie_executa_evento_w			varchar(15);
ie_agend_selec_w		varchar(1);

C02 CURSOR FOR
		SELECT	nr_seq_agenda_cons
		from	agenda_integrada_item
		where	nr_sequencia = nr_sequencia_w
		
union

		SELECT	nr_seq_agenda_cons
		from	agenda_integrada_item
		where	nr_seq_item_princ = nr_sequencia_w
		
union

		select	nr_seq_agenda_cons
		from	agenda_integrada_item
		where	nr_seq_item_princ = nr_seq_item_princ_w
		and	nr_sequencia <> nr_sequencia_w
		
union

		select	nr_seq_agenda_cons
		from	agenda_integrada_item
		where	nr_sequencia = nr_seq_item_princ_w;
		

BEGIN

ie_agend_selec_w:= Obter_Valor_Param_Usuario(869, 425, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo);

if (coalesce(nr_sequencia_p,0) > 0)  then

	if (coalesce(nr_atendimento_p,0) = 0) then
	
		select	max(nr_atendimento)
		into STRICT	nr_atendimento_w
		from	agenda_consulta
		where	nr_sequencia 	= nr_sequencia_p;
	else
		nr_atendimento_w	:= nr_atendimento_p;
	end if;
	
	if ((ie_tipo_agenda_p = 'C') or (ie_tipo_agenda_p = 'S')) then
	
		update	agenda_consulta
		set	nr_atendimento  = nr_atendimento_w,
			dt_atualizacao  = clock_timestamp(),
			nm_usuario	= coalesce(nm_usuario_p,obter_usuario_ativo)
		where	nr_sequencia    = nr_sequencia_p
		and	coalesce(nr_atendimento::text, '') = '';
		
	else
	
		update	agenda_paciente
		set	nr_atendimento  = nr_atendimento_w,
			dt_atualizacao  = clock_timestamp(), 
			nm_usuario	= coalesce(nm_usuario_p,obter_usuario_ativo)
		where	nr_sequencia    = nr_sequencia_p
		and	coalesce(nr_atendimento::text, '') = '';
		
	end if;
	
	if (ie_tipo_agenda_p = 'C' and (coalesce(ie_agend_selec_w,'S') = 'S')) then
	
		select	coalesce(max(nr_sequencia),0),
			coalesce(max(nr_seq_item_princ),0)
		into STRICT	nr_sequencia_w,
			nr_seq_item_princ_w
		from   	agenda_integrada_item
		where  	nr_seq_Agenda_cons = nr_sequencia_p;
	
	
		open C02;
		loop
		fetch C02 into	
			nr_seq_agenda_cons_ww;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			
			if (coalesce(nr_seq_agenda_cons_ww,0) > 0) then
				update	agenda_consulta
				set	nr_atendimento  = nr_atendimento_w,
					dt_atualizacao  = clock_timestamp(),
					nm_usuario	= coalesce(nm_usuario_p,obter_usuario_ativo)
				where	nr_sequencia 	= nr_seq_agenda_cons_ww
				and	coalesce(nr_atendimento::text, '') = '';
			end if;
			
			end;
		end loop;
		close C02;
	
	end if;
	
end if;


if (ie_exec_regra_p = 'S') then
	/*
	Se necessario executar os eventos das agendas para geracao de atendimento deve ser feita validacao para chamar como GA e nao VA
	*/
	select 	max(obter_se_existe_evento_agenda(wheb_usuario_pck.get_cd_estabelecimento,'VA',ie_tipo_agenda_p))
	into STRICT		ie_executa_evento_w
	;

	if (ie_executa_evento_w = 'S') then
		CALL executar_evento_agenda('VA',ie_tipo_agenda_p,nr_sequencia_p,wheb_usuario_pck.get_cd_estabelecimento,wheb_usuario_pck.get_nm_usuario,null,null);
	end if;
	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_vincula_atend_cons_hor ( nr_atendimento_p bigint, nr_sequencia_p bigint, ie_tipo_agenda_p text, nm_usuario_p text, ie_exec_regra_p text default 'N') FROM PUBLIC;

