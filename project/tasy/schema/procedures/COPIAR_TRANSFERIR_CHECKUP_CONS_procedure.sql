-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copiar_transferir_checkup_cons (cd_estabelecimento_p bigint, nr_seq_origem_p bigint, nr_seq_destino_p bigint, ie_acao_p text, nm_usuario_p text, ie_encaixe_p text default null, dt_transferencia_p timestamp default null, cd_setor_atendimento_p bigint default null) AS $body$
DECLARE

										

/*Dados Origem*/

cd_setor_atendimento_w		integer;
cd_pessoa_fisica_w		varchar(10);
nr_telefone_w			varchar(80);
dt_previsto_w			timestamp;
nm_usuario_original_w		varchar(15);
dt_confirmacao_w		timestamp;
nm_usuario_conf_w		varchar(60);
nm_contato_conf_w		varchar(60);
dt_cancelamento_w		timestamp;
nm_usuario_cancel_w		varchar(60);
dt_inicio_real_w		timestamp;
dt_fim_real_w			timestamp;
nr_atendimento_w		bigint;
nr_prescricao_w			bigint;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
cd_plano_w			varchar(10);
cd_empresa_ref_w		bigint;
nr_seq_prioridade_w		bigint;
ie_autorizado_w			varchar(1);
ds_observacao_w			varchar(2000);
cd_estabelecimento_w		smallint;
ie_encaixe_origem_w		varchar(3);
dt_agendamento_w		timestamp;
nr_seq_tipo_checkup_w	bigint;

/*Dados destino*/

cd_setor_atendimento_destino_w		integer;
dt_previsto_destino_w			timestamp;
nm_usu_orig_destino_w			varchar(15);
cd_convenio_destino_w			integer;
ie_autorizado_destino_w			varchar(1);
cd_estabelecimento_destino_w		integer;
nr_seq_destino_w			bigint;

qt_horas_confirm_w			bigint;

/*Dados Históricos*/

dt_historico_w				timestamp;
ds_historico_w				varchar(32000);
nm_usuario_hist_w			varchar(15);
nm_usuario_nrec_hist_w			varchar(15);
				
qt_prescricao_w			bigint;
ds_retorno_w			varchar(2000);
ie_possui_etapa_w		varchar(1);

c02 CURSOR FOR
SELECT  dt_historico,
	ds_historico,
	nm_usuario,
	nm_usuario_nrec
from    checkup_hist
where   nr_seq_checkup = nr_seq_origem_p;				
					

BEGIN

if (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') and (nr_seq_origem_p IS NOT NULL AND nr_seq_origem_p::text <> '') and
	((coalesce(ie_encaixe_p,'N') = 'S') or (nr_seq_destino_p IS NOT NULL AND nr_seq_destino_p::text <> '') or (dt_transferencia_p IS NOT NULL AND dt_transferencia_p::text <> '')) and (ie_acao_p IS NOT NULL AND ie_acao_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	
	/*Dados de origem do Checkup*/

	select	cd_setor_atendimento,
		cd_pessoa_fisica,
		nr_telefone,
		dt_previsto,
		nm_usuario_original,
		dt_confirmacao,
		nm_usuario_conf,
		nm_contato_conf,
		dt_cancelamento,
		nm_usuario_cancel,
		dt_inicio_real,
		dt_fim_real,
		nr_atendimento,
		nr_prescricao,
		cd_convenio,
		cd_categoria,
		cd_plano,
		cd_empresa_ref,
		nr_seq_prioridade,
		ie_autorizado,
		ds_observacao,
		cd_estabelecimento,
		cd_convenio,
		ie_encaixe,
		dt_agendamento,
		nr_seq_tipo_checkup
	into STRICT	cd_setor_atendimento_w,
		cd_pessoa_fisica_w,
		nr_telefone_w,
		dt_previsto_w,
		nm_usuario_original_w,
		dt_confirmacao_w,
		nm_usuario_conf_w,
		nm_contato_conf_w,
		dt_cancelamento_w,
		nm_usuario_cancel_w,
		dt_inicio_real_w,
		dt_fim_real_w,
		nr_atendimento_w,
		nr_prescricao_w,
		cd_convenio_w,
		cd_categoria_w,
		cd_plano_w,
		cd_empresa_ref_w,
		nr_seq_prioridade_w,
		ie_autorizado_w,
		ds_observacao_w,
		cd_estabelecimento_w,
		cd_convenio_destino_w,
		ie_encaixe_origem_w,
		dt_agendamento_w,
		nr_seq_tipo_checkup_w
	from	checkup
	where	nr_sequencia = nr_seq_origem_p;	
	
	if (coalesce(nr_seq_destino_p::text, '') = '') and (dt_transferencia_p IS NOT NULL AND dt_transferencia_p::text <> '') then
		dt_previsto_destino_w := to_date(to_char(dt_transferencia_p, 'dd/mm/yyyy') || ' ' ||to_char(dt_agendamento_w,'hh24:mi:ss'),' dd/mm/yyyy hh24:mi:ss');
		cd_setor_atendimento_w := coalesce(cd_setor_atendimento_p,cd_setor_atendimento_w);
	else
		/*Dados de destino do Checkup*/

		select	cd_setor_atendimento,
			dt_previsto,
			nm_usuario_original,
			ie_autorizado,
			cd_estabelecimento
		into STRICT	cd_setor_atendimento_destino_w,
			dt_previsto_destino_w,
			nm_usu_orig_destino_w,
			ie_autorizado_destino_w,
			cd_estabelecimento_destino_w
		from	checkup
		where	nr_sequencia = nr_seq_destino_p;
	
	end if;
	
	if (coalesce(ie_encaixe_p,'N') = 'S') then
		nr_seq_destino_w := gerar_encaixe_checkup(	dt_previsto_destino_w, cd_pessoa_fisica_w, cd_empresa_ref_w, cd_convenio_w, cd_estabelecimento_w, nm_usuario_p, cd_setor_atendimento_w, nr_atendimento_w, ie_autorizado_w, nr_seq_destino_w, nr_seq_origem_p, 'T');
	else
		if (coalesce(nr_seq_destino_p::text, '') = '') and (dt_transferencia_p IS NOT NULL AND dt_transferencia_p::text <> '') then
		
			select nextval('checkup_seq')
			into STRICT   nr_seq_destino_w
			;
			
			insert into checkup(nr_sequencia,
								 cd_estabelecimento,
								 cd_setor_atendimento,
								 cd_pessoa_fisica,
								 dt_atualizacao,
								 nm_usuario,
								 dt_atualizacao_nrec,
								 nm_usuario_nrec,
								 dt_previsto,
								 nr_atendimento,
								 cd_empresa_ref,
								 cd_convenio,
								 cd_plano,
								 cd_categoria,
								 ie_encaixe,
								 ie_autorizado,
								 nr_telefone,
								 nr_seq_prioridade,
								 nm_usuario_original,
								 dt_agendamento,
								 ds_observacao,
								 nr_prescricao,
								 nr_seq_tipo_checkup,
								 ie_transferencia)
						values ( nr_seq_destino_w,
								 cd_estabelecimento_p,
								 cd_setor_atendimento_p,
								 cd_pessoa_fisica_w,
								 clock_timestamp(),
								 nm_usuario_p,
								 clock_timestamp(),
								 nm_usuario_p,
								 dt_previsto_destino_w,
								 nr_atendimento_w,
								 cd_empresa_ref_w,
								 cd_convenio_w,
								 cd_plano_w,
								 cd_categoria_w,
								 ie_encaixe_origem_w,
								 ie_autorizado_w,
								 nr_telefone_w,
								 nr_seq_prioridade_w,
								 nm_usuario_original_w,
								 dt_agendamento_w,
								 ds_observacao_w,
								 nr_prescricao_w,
								 nr_seq_tipo_checkup_w,
								 'T');
		else
			nr_seq_destino_w	:= nr_seq_destino_p;
			
			ds_retorno_w := valida_qnt_agenda_emp(cd_convenio_w, cd_empresa_ref_w, cd_pessoa_fisica_w, dt_previsto_destino_w, ds_retorno_w, coalesce(ie_encaixe_p,'N'), cd_estabelecimento_destino_w);
			
			
			update	checkup
			set	cd_setor_atendimento 		=	cd_setor_atendimento_destino_w,
				cd_pessoa_fisica		=	cd_pessoa_fisica_w,
				nr_telefone			=	nr_telefone_w,
				dt_previsto			=	dt_previsto_destino_w,
				nm_usuario_original		=	nm_usuario_original_w,
				dt_confirmacao			 = NULL,
				nm_usuario_conf			 = NULL,
				nm_contato_conf			 = NULL,
				dt_cancelamento			=	dt_cancelamento_w,
				nm_usuario_cancel		=	nm_usuario_cancel_w,
				dt_inicio_real			=	dt_inicio_real_w,
				dt_fim_real			=	dt_fim_real_w,
				nr_atendimento			=	nr_atendimento_w,
				nr_prescricao			=	nr_prescricao_w,	
				cd_convenio			=	cd_convenio_w,
				cd_categoria			=	cd_categoria_w,
				cd_plano			=	cd_plano_w,	
				cd_empresa_ref			=	cd_empresa_ref_w,
				nr_seq_prioridade		=	nr_seq_prioridade_w,
				ie_autorizado			=	ie_autorizado_w,--ie_autorizado_destino_w,
				ds_observacao			=	ds_observacao_w,
				cd_estabelecimento		=	cd_estabelecimento_destino_w,
				dt_agendamento			= 	dt_agendamento_w,
				nr_seq_tipo_checkup 	=   nr_seq_tipo_checkup_w
			where	nr_sequencia = nr_seq_destino_p;
			
			if (coalesce(ie_acao_p,'C') != 'T') then
				CALL valida_qt_checkup_exclusivo(cd_pessoa_fisica_w,dt_previsto_destino_w,coalesce(ie_encaixe_p,'N'),cd_estabelecimento_destino_w,null,null);
			end if;
		end if;
	end if;
	
	qt_horas_confirm_w := obter_valor_param_usuario(996,26,obter_perfil_ativo,nm_usuario_p,0);
	
	if (qt_horas_confirm_w > 0) and
		(dt_previsto_destino_w <= (clock_timestamp() + (qt_horas_confirm_w/24))) then
		update 	checkup
		set 	dt_confirmacao = clock_timestamp(),
			nm_usuario_conf = nm_usuario_p,
			nm_usuario	= nm_usuario_p
                where 	nr_sequencia	= nr_seq_destino_w;
	
	end if;
	
	
	select coalesce(max('S'),'N')
	into STRICT	ie_possui_etapa_w
	from  	checkup_etapa
	where	nr_seq_checkup = nr_seq_origem_p;
	
	if (ie_possui_etapa_w = 'S') then
		delete
		from 	checkup_etapa
		where 	nr_seq_checkup = nr_seq_origem_p;
		
		CALL Gerar_Etapas_Checkup(nr_seq_destino_w,0,nm_usuario_p);
	end if;
	
	open  c02;
	loop
	fetch c02 into 	dt_historico_w,
			ds_historico_w,
			nm_usuario_hist_w,
			nm_usuario_nrec_hist_w;
	EXIT WHEN NOT FOUND; /* apply on c02  */
			begin
			insert into checkup_hist(
						 dt_atualizacao,
						 dt_atualizacao_nrec,
						 dt_historico,
						 ds_historico,
						 nm_usuario,
						 nm_usuario_nrec,
						 nr_seq_checkup,
						 nr_sequencia
						 )
						 values (
						 clock_timestamp(),
						 clock_timestamp(),
						 dt_historico_w,
						 ds_historico_w,
						 nm_usuario_hist_w,
						 nm_usuario_nrec_hist_w,
						 nr_seq_destino_w,
						 nextval('checkup_hist_seq')
						 );
			end;
	end loop;
	close c02;
	
	if (ie_acao_p = 'T') then
		/* verificar prescrições vinculadas */

		select	count(*)
		into STRICT	qt_prescricao_w
		from	prescr_medica
		where	nr_seq_agecons = nr_seq_origem_p;
		
		/* atualizar prescrições vinculadas */

		if (qt_prescricao_w > 0) then
			update	prescr_medica
			set	nr_seq_agecons = nr_seq_destino_w
			where	nr_seq_agecons = nr_seq_origem_p;
		end if;
	
	delete 	from checkup_etapa
	where	nr_seq_checkup = nr_seq_origem_p;

	if (coalesce(ie_encaixe_origem_w,'N') = 'S') then
		delete from checkup where nr_sequencia = nr_seq_origem_p;
	else
		update 	checkup
		set	cd_pessoa_fisica		 = NULL,
			nr_telefone			 = NULL,
			nm_usuario_original		 = NULL,
			dt_confirmacao			 = NULL,
			nm_usuario_conf			 = NULL,
			nm_contato_conf			 = NULL,
			dt_cancelamento			 = NULL,
			nm_usuario_cancel		 = NULL,
			dt_inicio_real			 = NULL,
			dt_fim_real			 = NULL,
			nr_atendimento			 = NULL,
			nr_prescricao			 = NULL,	
			cd_convenio			 = NULL,
			cd_categoria			 = NULL,
			cd_plano			 = NULL,	
			cd_empresa_ref			 = NULL,
			nr_seq_prioridade		 = NULL,
			ie_autorizado			 = NULL,
			ds_observacao			 = NULL,
			dt_agendamento			 = NULL,
			nr_seq_tipo_checkup		 = NULL
		where 	nr_sequencia = nr_seq_origem_p;
	end if;
	
	insert into CHECKUP_HIST(	
		NR_SEQUENCIA,
		NR_SEQ_CHECKUP,
		DT_ATUALIZACAO,
		NM_USUARIO,
		DT_HISTORICO,
		DS_HISTORICO,
		DT_ATUALIZACAO_NREC,
		NM_USUARIO_NREC,
		dt_liberacao)
	values (	nextval('checkup_hist_seq'),
		nr_seq_destino_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		' Paciente transferido pelo usuario '||nm_usuario_p||' na data '||to_char(clock_timestamp(),'dd/mm/yyyy hh24:mi:ss')||'.',
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp());
	
	end if;
	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copiar_transferir_checkup_cons (cd_estabelecimento_p bigint, nr_seq_origem_p bigint, nr_seq_destino_p bigint, ie_acao_p text, nm_usuario_p text, ie_encaixe_p text default null, dt_transferencia_p timestamp default null, cd_setor_atendimento_p bigint default null) FROM PUBLIC;

