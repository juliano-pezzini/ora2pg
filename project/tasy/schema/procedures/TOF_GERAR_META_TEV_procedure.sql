-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tof_gerar_meta_tev ( nr_atendimento_p text, nr_seq_escala_p bigint, nm_usuario_p text) AS $body$
DECLARE



nr_seq_escala_tev_w		escala_tev.nr_sequencia%type;
dt_avaliacao_tev_w		escala_tev.dt_avaliacao%type;
nr_sequencia_w			tof_meta_atend.nr_sequencia%type;
contador_w			integer;
ie_status_w			varchar(2);
qt_proc_tev_w			integer;
qt_mat_tev_w			integer;
qt_recomend_tev_w		integer;
ie_tipo_meta_w		varchar(3);
ie_risco_w			varchar(1);



C01 CURSOR FOR
	SELECT	a.nr_sequencia,
			m.ie_tipo_meta
	from	tof_meta_atend a,
			tof_meta m
	where	m.nr_sequencia = a.nr_seq_meta
	and		a.nr_atendimento = nr_atendimento_p
	and		coalesce(a.dt_finalizacao::text, '') = ''
	and		coalesce(m.ie_situacao,'A') = 'A'
	and		m.ie_regra = 'TEV'
	and     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and     coalesce(a.dt_inativacao::text, '') = '';


BEGIN

Select	max(dt_avaliacao),
		max(ie_risco)
into STRICT	dt_avaliacao_tev_w,
		ie_risco_w
from	escala_tev
where	nr_sequencia = 	nr_seq_escala_p;

if (coalesce(ie_risco_w,'B') in ('A', 'M')) then

	open C01;
	loop
	fetch C01 into
		nr_sequencia_w,
		ie_tipo_meta_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
			begin

			ie_status_w := 'A';

			select 	count(*)
			into STRICT	qt_proc_tev_w
			from   	prescr_medica a,
				prescr_procedimento b,
				procedimento c
			where  	a.nr_prescricao = b.nr_prescricao
			and    	a.nr_atendimento = nr_atendimento_p
			and    	b.cd_procedimento = c.cd_procedimento
			and    	b.ie_origem_proced = c.ie_origem_proced
			and	a.dt_prescricao  between dt_avaliacao_tev_w and dt_avaliacao_tev_w + 1
			and    	c.ie_protocolo_tev = 'S';

			select 	count(*)
			into STRICT	qt_mat_tev_w
			from   	prescr_medica a,
				prescr_material b,
				material c
			where  	a.nr_prescricao = b.nr_prescricao
			and    	b.cd_material = c.cd_material
			and    	a.nr_atendimento = nr_atendimento_p
			and	a.dt_prescricao  between dt_avaliacao_tev_w and dt_avaliacao_tev_w + 1
			and    	c.ie_protocolo_tev = 'S';

			select 	count(*)
			into STRICT	qt_recomend_tev_w
			from   	prescr_medica a,
				prescr_recomendacao b,
				tipo_recomendacao d
			where  	a.nr_prescricao  = b.nr_prescricao
			and	b.cd_recomendacao = d.cd_tipo_recomendacao
			and    	a.nr_atendimento = nr_atendimento_p
			and	a.dt_prescricao  between dt_avaliacao_tev_w and dt_avaliacao_tev_w + 1
			and    	ie_protocolo_tev = 'S';


			if (qt_proc_tev_w + qt_mat_tev_w + qt_recomend_tev_w = 0 ) then
				begin
				ie_status_w := 'N';
				end;
			end if;

			update	tof_meta_atend
			set 	ie_status = ie_status_w
			where 	nr_sequencia = nr_sequencia_w;

			commit;

			if (ie_tipo_meta_w = 'D' ) then

				insert into tof_meta_atend_hor(	nr_sequencia,
												dt_atualizacao,
												nm_usuario,
												dt_atualizacao_nrec,
												nm_usuario_nrec,
												nr_seq_meta_atend,
												ie_status,
												dt_geracao,
												ds_observacao,
												dt_liberacao)
										values (	nextval('tof_meta_atend_hor_seq'),
												clock_timestamp(),
												nm_usuario_p,
												clock_timestamp(),
												nm_usuario_p,
												nr_sequencia_w,
												ie_status_w,
												clock_timestamp(),
												'',
												clock_timestamp());
				commit;
			end if;

			end;
		end if;

		end;
	end loop;
	close C01;

	commit;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tof_gerar_meta_tev ( nr_atendimento_p text, nr_seq_escala_p bigint, nm_usuario_p text) FROM PUBLIC;

