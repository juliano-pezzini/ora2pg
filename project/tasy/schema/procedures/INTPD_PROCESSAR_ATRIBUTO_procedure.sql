-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function intpd_processar_atributo as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE intpd_processar_atributo ( reg_integracao_p INOUT gerar_int_padrao.reg_integracao_conv, nm_atributo_p text, ds_valor_p text, ie_conversao_p text, ds_valor_retorno_p INOUT text) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'SELECT * FROM intpd_processar_atributo_atx ( ' || quote_nullable(reg_integracao_p) || ',' || quote_nullable(nm_atributo_p) || ',' || quote_nullable(ds_valor_p) || ',' || quote_nullable(ie_conversao_p) || ',' || quote_nullable(ds_valor_retorno_p) || ' )';
	SELECT * FROM dblink(v_conn_str, v_query) AS p (v_ret0 gerar_int_padrao.reg_integracao_conv, v_ret1 text) INTO reg_integracao_p, ds_valor_retorno_p;

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;


CREATE TYPE r_vet_err AS (
	ie_tipo			varchar(1),
	ds_erro			varchar(4000),
	cd_default_message	varchar(4));


CREATE OR REPLACE PROCEDURE intpd_processar_atributo_atx ( reg_integracao_p INOUT gerar_int_padrao.reg_integracao_conv, nm_atributo_p text, ds_valor_p text, ie_conversao_p text, ds_valor_retorno_p INOUT text) AS $body$
DECLARE

	
/*'
NR_SEQ_FILA_TRANSMISSAO	INTPD_FILA_TRANSMISSAO.NR_SEQUENCIA%TYPE,
IE_ENVIO_RECEBE		VARCHAR2(1),
IE_SISTEMA_EXTERNO		VARCHAR2(15),
NM_TABELA			VARCHAR2(30),
IE_CONVERSAO			VARCHAR2(1),
NR_SEQ_VISAO			TABELA_VISAO.NR_SEQUENCIA%TYPE,
NR_SEQ_PROJETO_XML		XML_PROJETO.NR_SEQUENCIA%TYPE,
NR_SEQ_REGRA_CONVERSAO	NUMBER(10),
NM_ELEMENTO			XML_ELEMENTO.NM_ELEMENTO%TYPE,
QT_REG_LOG			NUMBER(10),
INTPD_LOG_RECEB		REG_INTPD_LOG_RECEB
'*/
nr_sequencia_w		intpd_log_recebimento.nr_sequencia%type;
ie_obrigatorio_w		xml_atributo.ie_obrigatorio%type	:=	'N';
nm_tabela_referencia_w	integridade_referencial.nm_tabela_referencia%type;
nm_atributo_w		indice_atributo.nm_atributo%type;
cd_dominio_w		dominio.cd_dominio%type;
qt_registros_w		bigint;
ie_consistir_fk_w		varchar(1)	:=	'N';
ds_sql_w			varchar(2000);
ds_mascara_w		xml_atributo.ds_mascara%type;

nm_elemento_w		xml_elemento.nm_elemento%type;
nm_atributo_xml_w		xml_atributo.nm_atributo_xml%type;
ie_tipo_atributo_w		varchar(255);
ie_erro_w			varchar(1);
ds_erro_w		varchar(4000);
ds_ret_w			varchar(4000);

ds_valor_w		varchar(4000);
ds_valor_retorno_w		varchar(4000);

nr_lanr_w		varchar(20);
nr_bsnr_w		varchar(25);
cd_medico_externo_w	varchar(255);
ie_classif_count_w	bigint;
nm_atrib_xml_w		varchar(255);
cd_estabelecimento_w	intpd_eventos_valores.cd_estabelecimento%type	:=	coalesce(obter_estabelecimento_ativo, 1);

ie_sequencia_criacao_w	integridade_atributo.ie_sequencia_criacao%type;
ds_separador_w		varchar(10)	:= ish_param_pck.get_separador;

type t_vet_err is table of r_vet_err index by integer;

vet_err_w	t_vet_err;
i 			integer;
j 			integer;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.nm_elemento,
	a.nm_atributo,
	a.ds_valor,
	a.ie_situacao,
	a.ie_vazio,
	a.ie_conversao,
	a.ie_invalido,
	a.ie_manter_valor
from	intpd_eventos_valores a,
	intpd_fila_transmissao b
where	b.nr_sequencia = reg_integracao_p.nr_seq_fila_transmissao
and	b.nr_seq_evento_sistema = a.nr_seq_evento_sistema
and	coalesce(a.nm_elemento,reg_integracao_p.nm_tabela)	= reg_integracao_p.nm_tabela
and	coalesce(a.nm_atributo,nm_atributo_p)	= nm_atributo_p
and	a.ie_situacao = 'A'
and	((a.ie_vazio = 'S' and vet_err_w[j].ie_tipo = 'V') or (a.ie_invalido = 'S' and vet_err_w[j].ie_tipo = 'I') or (a.ie_conversao = 'S' and vet_err_w[j].ie_tipo = 'C') or (a.ie_manter_valor = 'S'))
and	coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
order by a.nm_atributo asc, a.nm_elemento asc, cd_estabelecimento;

c01_w	c01%rowtype;

c02 CURSOR FOR
SELECT	b.nr_sequencia,
	b.ds_valor_new
from	intpd_reg_alter_fila a,
	intpd_reg_alter_campo b,
	intpd_reg_alteracao c
where	a.nr_seq_reg_alter = b.nr_sequencia
and	a.nr_seq_reg_alter  = c.nr_sequencia
and	a.nr_seq_fila = reg_integracao_p.nr_seq_fila_transmissao
and	b.nm_atributo = nm_atributo_p
and	c.nm_tabela = reg_integracao_p.nm_tabela
and (coalesce(reg_integracao_p.ie_valida_chave,'N') <> 'S' or c.ds_chave = reg_integracao_p.ds_chave)
order by b.nr_sequencia;

c02_w	c02%rowtype;

procedure gerar_log(nr_seq_fila_p	in	bigint,
		ds_log_p		in	text) is;
BEGIN
intpd_gravar_log_recebimento( nr_seq_fila_p,ds_log_p, 'Tasy');
commit;
end;

procedure gerar_log_vetor(
		ie_tipo_p			in	varchar2,
		cd_default_message_p	in	varchar2,
		ds_erro_p			in	varchar2,
		vet_err_p			in out	t_vet_err) is

i	integer;

begin
i				:=	vet_err_p.count;
vet_err_p[i].ie_tipo 			:=	ie_tipo_p;
vet_err_p[i].cd_default_message	:=	cd_default_message_p;
vet_err_p[i].ds_erro 			:=	substr(ds_erro_p, 1, 4000);
end;

begin
/*'Limpa o vetor de erros'*/

vet_err_w.delete;

ds_ret_w			:= 	ds_valor_retorno_p;
ds_valor_retorno_w		:=	ds_valor_retorno_p;
ds_valor_w		:=	ds_valor_p;

if (coalesce(reg_integracao_p.qt_reg_log::text, '') = '') then
	reg_integracao_p.qt_reg_log	:=	0;
end if;

/*'Busca definicoes do atributo do XML'*/

if (reg_integracao_p.nr_seq_projeto_xml > 0) then
	begin
	select	coalesce(a.ds_grupo, a.nm_elemento),
		coalesce(b.ie_obrigatorio,'N'),	
		coalesce(b.nm_atributo_xml,'X'),
		b.ds_mascara,
		b.ie_tipo_atributo
	into STRICT	nm_elemento_w,
		ie_obrigatorio_w,	
		nm_atributo_xml_w,
		ds_mascara_w,
		ie_tipo_atributo_w
	from	xml_elemento a,
		xml_atributo b
	where	a.nr_sequencia = b.nr_seq_elemento
	and	a.nr_seq_projeto = reg_integracao_p.nr_seq_projeto_xml
	and (upper(a.nm_elemento) like upper(reg_integracao_p.nm_elemento) or upper(a.ds_grupo) like upper(reg_integracao_p.nm_elemento))
	and (upper(b.nm_atributo) like upper(nm_atributo_p) or upper(b.nm_atributo_xml) like upper(nm_atributo_p))  LIMIT 1;	
	exception
	when others then
		begin
		select	coalesce(a.ds_grupo, a.nm_elemento),
			coalesce(b.ie_obrigatorio,'N'),	
			coalesce(b.nm_atributo_xml,'X'),
			b.ds_mascara,
			b.ie_tipo_atributo
		into STRICT	nm_elemento_w,
			ie_obrigatorio_w,	
			nm_atributo_xml_w,
			ds_mascara_w,
			ie_tipo_atributo_w
		from	xml_elemento a,
			xml_atributo b
		where	a.nr_sequencia = b.nr_seq_elemento
		and	a.nr_seq_projeto = reg_integracao_p.nr_seq_projeto_xml
		and (upper(a.nm_elemento) like upper(reg_integracao_p.nm_elemento) or upper(a.ds_grupo) like upper(reg_integracao_p.nm_elemento))
		and (upper(b.nm_atributo) like upper(reg_integracao_p.nm_atributo_xml) or upper(b.nm_atributo_xml) like upper(reg_integracao_p.nm_atributo_xml))  LIMIT 1;		
		exception
		when others then
			begin
			if (obter_se_integracao_ish(reg_integracao_p.nr_seq_projeto_xml) = 'S') then
				select	coalesce(a.ds_grupo, a.nm_elemento),
					coalesce(b.ie_obrigatorio,'N'),	
					coalesce(b.nm_atributo_xml,'X'),
					b.ds_mascara,
					b.ie_tipo_atributo
				into STRICT	nm_elemento_w,
					ie_obrigatorio_w,	
					nm_atributo_xml_w,
					ds_mascara_w,
					ie_tipo_atributo_w
				from	xml_elemento a,
					xml_atributo b
				where	a.nr_sequencia = b.nr_seq_elemento
				and	a.nr_seq_projeto = reg_integracao_p.nr_seq_projeto_xml
				and (upper(replace(a.nm_elemento,'_',null)) like upper(replace(reg_integracao_p.nm_elemento,'_',null)) or
						upper(replace(a.ds_grupo,'_',null)) like upper(replace(reg_integracao_p.nm_elemento,'_',null)))
				and (upper(replace(b.nm_atributo,'_',null)) like upper(replace(reg_integracao_p.nm_atributo_xml,'_',null)) or 
						upper(replace(b.nm_atributo_xml,'_',null)) like upper(replace(reg_integracao_p.nm_atributo_xml,'_',null)))  LIMIT 1;
			end if;
			exception
			when others then
				null;
			end;
		end;
	end;
elsif (reg_integracao_p.cd_interface > 0) then
	begin
	nm_elemento_w		:=	reg_integracao_p.nm_elemento;
	nm_atributo_xml_w		:=	nm_atributo_p;
	end;
end if;

if	((reg_integracao_p.ie_obrigatoriedade_tabela = 'S') and (ie_obrigatorio_w = 'N') and (reg_integracao_p.ie_envio_recebe = 'R')) then	
	begin
	select	coalesce(ie_obrigatorio,'N')
	into STRICT	ie_obrigatorio_w
	from	tabela_atributo
	where	nm_tabela = reg_integracao_p.nm_tabela
	and	nm_atributo = nm_atributo_p;		
	exception
	when others then
		ie_obrigatorio_w	:=	'N';
	end;
end if;

nm_elemento_w		:=	coalesce(nm_elemento_w, reg_integracao_p.nm_tabela);
nm_atributo_xml_w		:=	coalesce(nm_atributo_xml_w, nm_atributo_p);

/*'Busca definicao da constraint para validar o valor da FK'*/

if (ie_conversao_p <> 'N') then
	begin
	ie_consistir_fk_w		:=	'N';
	nm_tabela_referencia_w	:=	reg_integracao_p.nm_tabela;
	nm_atributo_w		:=	nm_atributo_p;
	
	loop	
		begin
		begin
		/*'Busca o nome da tabela_referencia'*/

		select	a.nm_tabela_referencia,
			b.ie_sequencia_criacao
		into STRICT	nm_tabela_referencia_w,
			ie_sequencia_criacao_w
		from	integridade_referencial a,
			integridade_atributo b
		where	a.nm_tabela = b.nm_tabela
		and	a.nm_integridade_referencial = b.nm_integridade_referencial
		and	a.nm_tabela = nm_tabela_referencia_w
		and	b.nm_atributo = nm_atributo_w  LIMIT 1;	
		exception
		when others then
			exit;
		end;
		
		/*'Busca o nome do atributo que e PK da tabela referencia'*/

		select	b.nm_atributo
		into STRICT	nm_atributo_w
		from	indice a,
			indice_atributo b
		where	a.nm_tabela = b.nm_tabela
		and	a.nm_indice = b.nm_indice
		and	a.nm_tabela = nm_tabela_referencia_w
		and	b.nr_sequencia = ie_sequencia_criacao_w
		and	a.ie_tipo = 'PK';
		
		ie_consistir_fk_w	:=	'S';
		end;
	end loop;

	if (ie_consistir_fk_w = 'N') then
		begin
		nm_tabela_referencia_w	:=	reg_integracao_p.nm_tabela;
		nm_atributo_w		:=	nm_atributo_p;
		end;
	end if;
	end;
end if;

if (reg_integracao_p.ie_envio_recebe = 'R') then
	begin
	if (nm_atributo_p like 'DT%') and (coalesce(ds_mascara_w,'X') <> 'X') then
		begin
		ds_mascara_w	:=	upper(ds_mascara_w);
		ds_mascara_w	:=	replace(ds_mascara_w,'HH:MI:SS','HH24:MI:SS');
		ds_mascara_w	:=	replace(ds_mascara_w,'HHMISS','HH24MISS');
		ds_valor_w	:=	to_char(to_date(ds_valor_w,ds_mascara_w));
		exception
		when others then
			ds_valor_w	:=	ds_valor_w;
		end;
	elsif (ie_tipo_atributo_w = 'NUMBER') and (coalesce(ds_mascara_w,'X') <> 'X') then
		begin
		ds_mascara_w	:=	replace(ds_mascara_w,'#','9');
		ds_valor_w	:=	to_number(ds_valor_w, ds_mascara_w);
		exception
		when others then
			ds_valor_w	:=	ds_valor_w;
		end;
	end if;

	/*'Efetua conversao de dados'*/

	if (coalesce(ds_valor_w,'NULL') <> 'NULL') and (ie_conversao_p <> 'N') and (reg_integracao_p.ie_conversao = 'I') then
		begin	
		ds_valor_retorno_w	:=	bkf_obter_conv_interna(null, nm_tabela_referencia_w, nm_atributo_w, ds_valor_w, null, reg_integracao_p.nr_seq_regra_conversao);
		/*'Caso nao encontrar conversao no meio externo e a referencia for Pessoa Fisica, efetua conversao pela pf_codigo_externo'*/

		
		if (coalesce(ds_valor_retorno_w,'NULL') = 'NULL') and
			((nm_atributo_w like 'CD_MEDICO%') or (nm_atributo_w like 'CD_PESSOA%')) then		
			if (ie_conversao_p in ('ISH','ISHMED')) then
			
				if (position(ds_separador_w in ds_valor_w) > 0) and (ie_conversao_p = 'ISHMED') then
					
					cd_medico_externo_w	:= obter_valor_campo_separador(ds_valor_w,1, ds_separador_w);
					nr_lanr_w		:= obter_valor_campo_separador(ds_valor_w,2, ds_separador_w);
					nr_bsnr_w		:= obter_valor_campo_separador(ds_valor_w,3, ds_separador_w);
					
					begin
					select	a.cd_pessoa_fisica
					into STRICT	ds_valor_retorno_w
					from	pf_codigo_externo a
					where	a.cd_pessoa_fisica_externo 	= cd_medico_externo_w
					and	a.ie_tipo_codigo_externo 	= ie_conversao_p
					and	exists (SELECT 1
							from	medico_especialidade x
							where	x.cd_pessoa_fisica	= a.cd_pessoa_fisica
							and	x.nr_rqe		= nr_lanr_w)
					and	exists (select 1
							from	medico_espec_bsnr y
							where	y.cd_pessoa_fisica	= a.cd_pessoa_fisica
							and	y.NR_BSNR		=  nr_bsnr_w)  LIMIT 1;
					exception
					when others then
						begin
						select	a.cd_pessoa_fisica
						into STRICT	ds_valor_retorno_w
						from	pf_codigo_externo a
						where	a.cd_pessoa_fisica_externo 	= cd_medico_externo_w
						and	a.ie_tipo_codigo_externo 	= ie_conversao_p
						and	exists (SELECT 1
								from	medico_especialidade x
								where	x.cd_pessoa_fisica	= a.cd_pessoa_fisica
								and	x.nr_rqe		= nr_lanr_w)  LIMIT 1;
						exception
						when others then
							begin
							select	cd_pessoa_fisica
							into STRICT	ds_valor_retorno_w
							from	pf_codigo_externo
							where	cd_pessoa_fisica_externo 	= cd_medico_externo_w
							and	ie_tipo_codigo_externo 		= ie_conversao_p  LIMIT 1;
							exception
							when others then
								ds_valor_retorno_w	:=	null;
							end;
						end;
					end;
				elsif (ie_conversao_p = 'ISHMED') then
					begin
					select	cd_pessoa_fisica
					into STRICT	ds_valor_retorno_w
					from	pf_codigo_externo
					where	cd_pessoa_fisica_externo 	= ds_valor_w
					and	ie_tipo_codigo_externo 		= ie_conversao_p  LIMIT 1;
					exception
					when others then
						ds_valor_retorno_w	:=	null;
					end;				
				else			
					begin
					select	cd_pessoa_fisica
					into STRICT	ds_valor_retorno_w
					from	pf_codigo_externo
					where	cd_pessoa_fisica_externo 	= ds_valor_w
					and	ie_tipo_codigo_externo 	= ie_conversao_p;
					exception
					when others then
						ds_valor_retorno_w	:=	null;
					end;
				end if;
			end if;
			
			if (coalesce(ds_valor_retorno_w,'NULL') = 'NULL') then
				begin
				select	cd_pessoa_fisica
				into STRICT	ds_valor_retorno_w
				from	pf_codigo_externo
				where	cd_pessoa_fisica_externo = ds_valor_w;
				exception
				when others then
					ds_valor_retorno_w	:=	null;
				end;
			end if;
		end if;

		/*'Quarda o log caso nao encontrar a conversao para o valor recebido'*/

		if (coalesce(ds_valor_retorno_w,'NULL') = 'NULL') then
			begin
			reg_integracao_p.ie_usou_valor_padrao	:= 'S';
			gerar_log_vetor('C', '0001',  substr(	wheb_mensagem_pck.get_texto(736986,
							'DS_ELEMENTO='||nm_elemento_w ||
							';DS_ATRIBUTO='||nm_atributo_xml_w ||
							';NR_SEQ_REGRA='||reg_integracao_p.nr_seq_regra_conversao||
							';NM_TABELA='||nm_tabela_referencia_w||
							';NM_ATRIBUTO='||nm_atributo_w||
							';DS_VALOR='||ds_valor_w),1,4000),
							vet_err_w);
			end;
		end if;
		end;
	elsif (coalesce(ds_valor_w,'NULL') <> 'NULL') then
		ds_valor_retorno_w	:=	ds_valor_w;
	elsif (coalesce(ds_valor_w,'NULL') = 'NULL') and (coalesce(ds_valor_retorno_w,'NULL') <> 'NULL') then
		ds_valor_retorno_w	:=	ds_valor_retorno_w;
	elsif (coalesce(ds_valor_w,'NULL') = 'NULL') then
		begin	
		begin
		select	max(vl_padrao)
		into STRICT	ds_valor_retorno_w
		from	tabela_visao_atributo
		where	nr_sequencia = reg_integracao_p.nr_seq_visao
		and	nm_atributo = nm_atributo_p
		and	vl_padrao not like '@%';
		exception
		when others then
			ds_valor_retorno_w := null;
		end;	
		
		if (lower(ds_valor_retorno_w) = 'sysdate') then
			ds_valor_retorno_w	:=	to_char(clock_timestamp());
		end if;
		
		if (coalesce(ds_valor_w,'NULL') = 'NULL') and (ie_obrigatorio_w = 'S') then
			begin			
			gerar_log_vetor('V', '0002',  substr(	wheb_mensagem_pck.get_texto(736987,
							'DS_ELEMENTO='||nm_elemento_w ||
							';DS_ATRIBUTO='||nm_atributo_xml_w),1,4000),
							vet_err_w);
			end;
		end if;
		end;
	end if;

	if (coalesce(ds_valor_retorno_w,'NULL') <> 'NULL') then
		begin
		select	coalesce(max(cd_dominio),0)
		into STRICT	cd_dominio_w
		from	tabela_visao_atributo
		where	nr_sequencia = reg_integracao_p.nr_seq_visao
		and	nm_atributo = nm_atributo_p;

		if (cd_dominio_w > 0) then
			begin
			select	count(*)
			into STRICT	qt_registros_w
			from	intpd_valor_dominio_v
			where	cd_dominio = cd_dominio_w
			and	vl_dominio = ds_valor_retorno_w;
			
			if (qt_registros_w = 0) then
				begin				
				gerar_log_vetor('I', '0003',  substr(	wheb_mensagem_pck.get_texto(736988,
								'DS_ELEMENTO='||nm_elemento_w ||
								';DS_ATRIBUTO='||nm_atributo_xml_w ||
								';CD_DOMINIO='||cd_dominio_w||
								';DS_VALOR='||ds_valor_retorno_w),1,4000),
								vet_err_w);
				end;
			end if;
			end;
		end if;
		
		if (ie_consistir_fk_w = 'S') then
			begin			
			begin
			ds_sql_w := 'select count(1) qt_reg from ' || nm_tabela_referencia_w || ' where ' || nm_atributo_w || ' = :ds_valor ';
			EXECUTE ds_sql_w into STRICT qt_registros_w using ds_valor_retorno_w;
			exception
			when others then
				qt_registros_w	:=	0;
			end;
			
			if (qt_registros_w = 0) then			
				begin
				gerar_log_vetor('R', '0004',  substr(	wheb_mensagem_pck.get_texto(736989,
								'DS_ELEMENTO='||nm_elemento_w ||
								';DS_ATRIBUTO='||nm_atributo_xml_w ||
								';NM_TABELA_REFERENCIA='||nm_tabela_referencia_w||
								';DS_VALOR='||ds_valor_retorno_w),1,4000),
								vet_err_w);		
				end;
			end if;
			end;
		end if;
		end;
	end if;
	
	if (obter_se_integracao_ish(reg_integracao_p.nr_seq_projeto_xml) = 'S') and (nm_atributo_p in ('NM_USUARIO','NM_USUARIO_NREC')) then
		ds_valor_retorno_w	:=	substr(('ISH-' || upper(ds_valor_p)),1,15);
	end if;
		
	begin
	ds_valor_retorno_p	:=	ds_valor_retorno_w;
	exception
	when others then
		gerar_log_vetor('I', '0005',  substr(	wheb_mensagem_pck.get_texto(1059154,
						'DS_ELEMENTO='||nm_elemento_w ||
						';DS_ATRIBUTO='||nm_atributo_xml_w ||							
						';NM_TABELA='||nm_tabela_referencia_w||
						';NM_ATRIBUTO='||nm_atributo_w||
						';DS_VALOR='||ds_valor_retorno_w),1,4000),
						vet_err_w);
	end;

	if (vet_err_w.count > 0) then
		for i in 0..vet_err_w.count-1 loop
			begin
			if (coalesce(vet_err_w[i].ie_tipo,'NULL') <> 'NULL') and (coalesce(vet_err_w[i].ds_erro,'NULL') <> 'NULL') then
				begin
				j := i;
				
				if (reg_integracao_p.ie_regra_valor_default = 'S') then
					open c01;
					loop
					fetch c01 into
						c01_w;
					EXIT WHEN NOT FOUND; /* apply on c01 */
						begin
						if (coalesce(c01_w.ie_manter_valor,'N') = 'S') then
							ds_valor_retorno_p 	:=	ds_ret_w;
						else
							begin
							ds_valor_retorno_p	:=	c01_w.ds_valor;
							
							if (coalesce(c01_w.ds_valor,'NULL') <> 'NULL') then
								begin
								select	coalesce(max(cd_dominio),0)
								into STRICT	cd_dominio_w
								from	tabela_visao_atributo
								where	nr_sequencia = reg_integracao_p.nr_seq_visao
								and	nm_atributo = nm_atributo_p;

								if (cd_dominio_w > 0) then
									begin
									select	count(*)
									into STRICT	qt_registros_w
									from	intpd_valor_dominio_v
									where	cd_dominio = cd_dominio_w
									and	vl_dominio = c01_w.ds_valor;
									
									if (qt_registros_w = 0) then
										begin

										
											reg_integracao_p := gerar_int_padrao.incluir_log(
											reg_integracao_p, substr(	wheb_mensagem_pck.get_texto(736988,
												'DS_ELEMENTO='||nm_elemento_w ||
												';DS_ATRIBUTO='||nm_atributo_xml_w ||
												';CD_DOMINIO='||cd_dominio_w||
												';DS_VALOR='||c01_w.ds_valor),1,4000), '0003', 'E');
										end;
									end if;
									end;
								end if;
								
								if (ie_consistir_fk_w = 'S') then
									begin			
									begin
									ds_sql_w := 'select count(1) qt_reg from ' || nm_tabela_referencia_w || ' where ' || nm_atributo_w || ' = :ds_valor ';
									EXECUTE ds_sql_w into STRICT qt_registros_w using c01_w.ds_valor;
									exception
									when others then
										qt_registros_w	:=	0;
									end;
									
									if (qt_registros_w = 0) then			
										begin
										
											reg_integracao_p := gerar_int_padrao.incluir_log(
											reg_integracao_p, substr(	wheb_mensagem_pck.get_texto(736989,
												'DS_ELEMENTO='||nm_elemento_w ||
												';DS_ATRIBUTO='||nm_atributo_xml_w ||
												';NM_TABELA_REFERENCIA='||nm_tabela_referencia_w||
												';DS_VALOR='||c01_w.ds_valor),1,4000), '0004', 'E');								
										end;
									end if;
									end;
								end if;
								end;
							end if;
							end;
						end if;
						
							reg_integracao_p := gerar_int_padrao.incluir_log(	reg_integracao_p, substr(wheb_mensagem_pck.get_texto(1059105,
										'DS_ATRIBUTO='||nm_atributo_xml_w ||
										';DS_ELEMENTO='||nm_elemento_w ||
										';DS_VALOR_ORIGINAL='||ds_ret_w||
										';DS_VALOR_REGRA='||c01_w.ds_valor||
										';NR_SEQ_REGRA='||c01_w.nr_sequencia),1,4000), null, 'W');
						exit;
						end;
					end loop;
					close c01;
				end if;
				
				if	((reg_integracao_p.ie_regra_valor_default = 'N') or (coalesce(c01_w.nr_sequencia::text, '') = '')) then
					begin
						reg_integracao_p := gerar_int_padrao.incluir_log(	reg_integracao_p, vet_err_w[i].ds_erro, vet_err_w[i].cd_default_message, 'E');				
					end;
				end if;
				end;
			end if;
			end;
		end loop;	
	end if;
	end;
elsif (reg_integracao_p.ie_envio_recebe = 'E') then
	begin
	if (coalesce(reg_integracao_p.ie_somente_alterados,'X') = 'S') then
		begin
		select	max(ie_tipo_atributo)
		into STRICT	ie_tipo_atributo_w
		from	tabela_atributo
		where	nm_tabela = reg_integracao_p.nm_tabela
		and	nm_atributo = nm_atributo_p;
		
		open c02;
		loop
		fetch c02 into	
			c02_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */		
		end loop;
		close c02;
		
		if (reg_integracao_p.ie_campo_verificador = 'N') then
			begin
			if (ie_tipo_atributo_w = 'DATE') then
				ds_valor_w	:=	to_char(to_date(C02_w.ds_valor_new,'yyyy/mm/dd hh24:mi:ss'));
			else
				ds_valor_w	:=	to_char(C02_w.ds_valor_new);
			end if;
			
			if	((coalesce(ds_valor_w,'NULL') = 'NULL') and (ie_obrigatorio_w = 'S')) then
				ds_valor_w	:=	ds_valor_p;
			end if;
			end;
		elsif (reg_integracao_p.ie_campo_verificador = 'S') then
			if	((c02_w.nr_sequencia IS NOT NULL AND c02_w.nr_sequencia::text <> '') or (ie_obrigatorio_w = 'S')) then		
				ds_valor_w	:=	reg_integracao_p.ie_marca_verif;
			else
				ds_valor_w	:=	null;
			end if;
		end if;
		end;
	else
		ds_valor_w	:=	ds_valor_p;
	end if;
	
	if	((coalesce(ds_valor_w,'NULL') <> 'NULL') and (coalesce(ie_conversao_p,'X') <> 'N') and (coalesce(reg_integracao_p.ie_campo_verificador,'X') <> 'S')) then
		begin
		ds_valor_retorno_w	:=	intpd_conv(nm_tabela_referencia_w, nm_atributo_w, ds_valor_w, reg_integracao_p.nr_seq_regra_conversao, reg_integracao_p.ie_conversao, ie_conversao_p);
		
		if (coalesce(ds_valor_retorno_w,'NULL') = 'NULL') and
			((nm_atributo_w like 'CD_MEDICO%') or (nm_atributo_w like 'CD_PESSOA%')) then		
			if (ie_conversao_p in ('ISH','ISHMED')) then
				begin
				select	cd_pessoa_fisica_externo
				into STRICT	ds_valor_retorno_w
				from	pf_codigo_externo
				where	cd_pessoa_fisica 		= ds_valor_w
				and	ie_tipo_codigo_externo 	= ie_conversao_p;
				exception
				when others then
					ds_valor_retorno_w	:=	null;
				end;		
			end if;
			
			if (coalesce(ds_valor_retorno_w,'NULL') = 'NULL') then
				begin
				select	cd_pessoa_fisica_externo
				into STRICT	ds_valor_retorno_w
				from	pf_codigo_externo
				where	cd_pessoa_fisica = ds_valor_w;
				exception
				when others then
					ds_valor_retorno_w	:=	null;
				end;
			end if;
		end if;

		/*'Quarda o log caso nao encontrar a conversao para o valor recebido'*/

		if (coalesce(ds_valor_retorno_w,'NULL') = 'NULL') then
			begin
			gerar_log_vetor('C', '0001',  substr(	wheb_mensagem_pck.get_texto(736986,
							'DS_ELEMENTO='||nm_elemento_w ||
							';DS_ATRIBUTO='||nm_atributo_xml_w ||
							';NR_SEQ_REGRA='||reg_integracao_p.nr_seq_regra_conversao||
							';NM_TABELA='||nm_tabela_referencia_w||
							';NM_ATRIBUTO='||nm_atributo_w||
							';DS_VALOR='||ds_valor_w),1,4000),
							vet_err_w);
			end;
		end if;		
		end;
	else		
		ds_valor_retorno_w	:=	ds_valor_w;
	end if;

	if	((coalesce(ds_valor_retorno_w,'NULL') = 'NULL') and (ie_obrigatorio_w = 'S')) then
		gerar_log_vetor('V', '0002',  substr(	wheb_mensagem_pck.get_texto(736987,
				'DS_ELEMENTO='||nm_elemento_w ||
				';DS_ATRIBUTO='||nm_atributo_xml_w),1,4000),
				vet_err_w);
	end if;
	
	nm_atrib_xml_w	:= reg_integracao_p.nm_atributo_xml;
	
	if (coalesce(reg_integracao_p.ie_campo_verificador,'X') = 'S') then
		select	substr(reg_integracao_p.nm_atributo_xml, 1, length(reg_integracao_p.nm_atributo_xml)-1)
		into STRICT	nm_atrib_xml_w
		;
	end if;
	
	select	count(*)
	into STRICT	ie_classif_count_w
	from	intpd_reg_alter_fila a,
		intpd_reg_alter_campo b
	where	a.nr_seq_fila			= reg_integracao_p.nr_seq_fila_transmissao
	and	a.nr_seq_reg_alter		= b.nr_sequencia
	and	upper(nm_atrib_xml_w)		= upper(b.nm_atributo)
	and	b.ie_classificacao		= 'D';
	
	if (ie_classif_count_w > 0) then
		begin
		select	x.ds_valor
		into STRICT	ds_valor_retorno_w
		from (
		SELECT	a.ds_valor
		from	intpd_eventos_valores a,
			intpd_fila_transmissao b
		where	b.nr_sequencia = reg_integracao_p.nr_seq_fila_transmissao
		and	b.nr_seq_evento_sistema = a.nr_seq_evento_sistema
		and	coalesce(a.nm_elemento,reg_integracao_p.nm_tabela) = reg_integracao_p.nm_tabela
		and	coalesce(a.nm_atributo,nm_atributo_p) = nm_atributo_p
		and	a.ie_situacao = 'A'
		and	a.ie_invalido = 'S'
		and	a.ie_manter_valor <> 'S'
		and	coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
		order by a.nr_sequencia desc, cd_estabelecimento) x LIMIT 1;
		exception
		when others then
			ds_valor_retorno_w	:= null;
		end;
		
		if (ds_valor_retorno_w IS NOT NULL AND ds_valor_retorno_w::text <> '') and (coalesce(reg_integracao_p.ie_campo_verificador,'X') = 'S') then
			ds_valor_retorno_w	:= 'X';
		end if;
	end if;
	
	if (obter_se_integracao_ish(reg_integracao_p.nr_seq_projeto_xml) = 'S') and (nm_atributo_p in ('NM_USUARIO','NM_USUARIO_NREC')) and (ds_valor_retorno_w <> 'X') then
		ds_valor_retorno_w	:=	substr(('TASY-' || upper(ds_valor_retorno_w)),1,12);
	end if;
	
	begin	
	ds_valor_retorno_p	:=	ds_valor_retorno_w;
	exception
	when others then
		begin
		ds_valor_retorno_p	:=	null;		
		
			reg_integracao_p := gerar_int_padrao.incluir_log(
			reg_integracao_p, substr(	wheb_mensagem_pck.get_texto(1059154,
						'DS_ELEMENTO='||nm_elemento_w ||
						';DS_ATRIBUTO='||nm_atributo_xml_w ||							
						';NM_TABELA='||nm_tabela_referencia_w||
						';NM_ATRIBUTO='||nm_atributo_w||
						';DS_VALOR='||ds_valor_retorno_w),1,4000), '0005', 'E');
		end;
	end;

	if (vet_err_w.count > 0) then
		for i in 0..vet_err_w.count-1 loop
			begin
			if (coalesce(vet_err_w[i].ie_tipo,'NULL') <> 'NULL') and (coalesce(vet_err_w[i].ds_erro,'NULL') <> 'NULL') then
				begin
				j := i;
				
				if (reg_integracao_p.ie_regra_valor_default = 'S') then
				open c01;
				loop
				fetch c01 into
					c01_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */
					begin
					
					if (coalesce(c01_w.ie_manter_valor,'N') = 'S') then
						ds_valor_retorno_p 	:=	null;
					else
						if (coalesce(c01_w.ie_vazio,'N') = 'S')	then
							ds_valor_retorno_p	:=	c01_w.ds_valor;
						elsif (coalesce(c01_w.ie_conversao,'N') = 'S')	then
							ds_valor_retorno_p	:=	c01_w.ds_valor;
						end if;
					end if;
					
						reg_integracao_p := gerar_int_padrao.incluir_log(	reg_integracao_p, substr(wheb_mensagem_pck.get_texto(1059105,
									'DS_ATRIBUTO='||nm_atributo_xml_w ||
									';DS_ELEMENTO='||nm_elemento_w ||
									';DS_VALOR_ORIGINAL='||ds_ret_w||
									';DS_VALOR_REGRA='||c01_w.ds_valor||
									';NR_SEQ_REGRA='||c01_w.nr_sequencia),1,4000), null, 'W');
					exit;
					end;
				end loop;
				close c01;
				end if;
				
				if	((reg_integracao_p.ie_regra_valor_default = 'N') or (coalesce(c01_w.nr_sequencia::text, '') = '')) then
					begin
						reg_integracao_p := gerar_int_padrao.incluir_log(	reg_integracao_p, vet_err_w[i].ds_erro, vet_err_w[i].cd_default_message, 'E');				
					end;
				end if;
				end;
			end if;
			end;
		end loop;	
	end if;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intpd_processar_atributo ( reg_integracao_p INOUT gerar_int_padrao.reg_integracao_conv, nm_atributo_p text, ds_valor_p text, ie_conversao_p text, ds_valor_retorno_p INOUT text) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE intpd_processar_atributo_atx ( reg_integracao_p INOUT gerar_int_padrao.reg_integracao_conv, nm_atributo_p text, ds_valor_p text, ie_conversao_p text, ds_valor_retorno_p INOUT text) FROM PUBLIC;

