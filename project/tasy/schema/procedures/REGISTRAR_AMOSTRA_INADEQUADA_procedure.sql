-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE registrar_amostra_inadequada ( nr_prescricao_p bigint, nr_seq_motivo_inadeq_p bigint, nr_seq_tipo_ocorr_p bigint, ds_motivo_p text, ie_suspender_item_p text, nr_seq_status_p bigint, nm_usuario_p text, nr_seq_ocorrencia_p INOUT bigint) AS $body$
DECLARE

 
nr_seq_proc_prescr_w	bigint;	
nr_seq_lote_entrada_w	bigint;		
nr_seq_exame_w			bigint;
nr_seq_reconvocado_w	bigint;
cd_material_exame_w		varchar(10);
nr_seq_ficha_w			bigint;
cd_pessoa_fisica_w		varchar(10);
nr_seq_ocorrencia_w	lote_ent_ocorrencia.nr_sequencia%type;
			
C01 CURSOR FOR 
	SELECT	nr_Sequencia, 
			nr_seq_exame, 
			cd_material_exame 
	from	prescr_procedimento 
	where	nr_prescricao	= nr_prescricao_p 
	and	(nr_seq_exame IS NOT NULL AND nr_seq_exame::text <> '');			
			 

BEGIN 
 
 
select	coalesce(max(nr_seq_lote_entrada),0), max(nr_seq_ficha_lote), max(cd_pessoa_fisica) 
into STRICT	nr_seq_lote_entrada_w, nr_seq_ficha_w, cd_pessoa_fisica_w 
from	prescr_medica 
where	nr_prescricao	= nr_prescricao_p;
 
if (nr_seq_ficha_w	> 0) then 
	update	lote_ent_sec_ficha 
	set		ie_status_ficha		= 'P', 
			ds_motivo_inadeq	= substr(ds_motivo_p,1,255), 
			nm_usuario		= nm_usuario_p, 
			dt_atualizacao		= clock_timestamp() 
	where	nr_sequencia		= nr_seq_ficha_w;
end if;
 
 
select 	coalesce(max(nr_sequencia),0) 
into STRICT	nr_seq_reconvocado_w 
from	lote_ent_reconvocado 
where	nr_seq_ficha_lote = nr_seq_ficha_w 
and		coalesce(dt_suspensao_rec::text, '') = '';
 
if (coalesce(nr_seq_reconvocado_w,0) = 0) then 
 
	select	nextval('lote_ent_reconvocado_seq') 
	into STRICT	nr_seq_reconvocado_w 
	;
 
	insert into lote_ent_reconvocado(nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		cd_pessoa_fisica, 
		nr_seq_lote_sec, 
		nr_seq_ficha_lote, 
		ie_area_busca) 
	values (nr_seq_reconvocado_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		cd_pessoa_fisica_w, 
		nr_seq_lote_entrada_w, 
		nr_seq_ficha_w, 
		'S');
		 
end if;
	 
update	lote_ent_sec_ficha 
set		ie_suspenso = 'S' 
where	nr_sequencia = nr_seq_ficha_w;
 
if (coalesce(nr_seq_tipo_ocorr_p,0) > 0) then 
 
	select	nextval('lote_ent_ocorrencia_seq') 
	into STRICT	nr_seq_ocorrencia_w 
	;
	 
	insert into lote_ent_ocorrencia(nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		ie_situacao, 
		nr_seq_tipo_ocorrencia, 
		nr_seq_mot_inadeq, 
		ds_observacao, 
		nr_seq_lote_sec) 
	values (nr_seq_ocorrencia_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		'A', 
		nr_seq_tipo_ocorr_p, 
		nr_seq_motivo_inadeq_p, 
		ds_motivo_p, 
		nr_seq_lote_entrada_w);
end if;
 
open C01;
loop 
fetch C01 into	 
	nr_seq_proc_prescr_w, 
	nr_seq_exame_w, 
	cd_material_exame_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	if (ie_suspender_item_p	= 'S') then 
		CALL Suspender_item_Prescricao( 
					nr_prescricao_p, 
					nr_seq_proc_prescr_w, 
					null, 
					null, 
					'PRESCR_PROCEDIMENTO', 
					nm_usuario_p, 
					'S', 
					722);
	end if;
		 
	insert	into LOTE_ENT_RECONVOCADO_ITEM( 
		NR_SEQUENCIA, 
		NR_SEQ_EXAME, 
		DT_ATUALIZACAO, 
		NM_USUARIO, 
		CD_MATERIAL_EXAME, 
		NR_SEQ_RECONVOCADO, 
		DT_ATUALIZACAO_NREC, 
		NM_USUARIO_NREC, 
		IE_TIPO_BUSCA, 
		NR_SEQ_STATUS_RECONV 
	) values ( 
		nextval('lote_ent_reconvocado_item_seq'), 
		nr_seq_exame_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		cd_material_exame_w, 
		nr_seq_reconvocado_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		'A', 
		nr_seq_status_p 
	);
	 
	end;
end loop;
close C01;
 
update	prescr_procedimento 
set		ie_exame_bloqueado = 'S', 
		NR_SEQ_MOTIVO_BLOQUEIO = nr_seq_motivo_inadeq_p 
where	nr_prescricao = nr_prescricao_p;
 
commit;
 
nr_seq_ocorrencia_p := nr_seq_ocorrencia_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE registrar_amostra_inadequada ( nr_prescricao_p bigint, nr_seq_motivo_inadeq_p bigint, nr_seq_tipo_ocorr_p bigint, ds_motivo_p text, ie_suspender_item_p text, nr_seq_status_p bigint, nm_usuario_p text, nr_seq_ocorrencia_p INOUT bigint) FROM PUBLIC;

