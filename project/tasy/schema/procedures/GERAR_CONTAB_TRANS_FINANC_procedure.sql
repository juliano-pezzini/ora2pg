-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_contab_trans_financ ( cd_estabelecimento_p bigint, cd_estab_movto_p bigint, nr_lote_contabil_p bigint, nm_usuario_p text, cd_conta_contabil_p text, cd_centro_custo_p bigint, ds_documento_p text, nr_seq_agrupamento_p bigint, dt_transacao_p timestamp, vl_transacao_p bigint, nr_seq_trans_fin_p bigint, nr_seq_conta_banco_p bigint, nm_atributo_p text, cd_pessoa_fisica_p text, cd_cgc_p text, cd_setor_p bigint, cd_convenio_p bigint, nr_documento_p text, cd_historico_p bigint, ds_atrib_compl_hist_p text, nr_seq_caixa_p bigint, nr_seq_produto_p bigint, nr_seq_caixa_od_p bigint, cd_tributo_p bigint, nr_titulo_pagar_p bigint, nr_seq_bandeira_p bigint, cd_tributo_regra_p bigint, ie_origem_tit_rec_p text, nr_seq_banco_od_p bigint default null, ie_tipo_conta_glosa_p text default null, nr_repasse_terceiro_p bigint DEFAULT NULL, cd_estab_inf_movto_p bigint DEFAULT NULL, cd_tipo_baixa_p bigint default 0, cd_tipo_recebimento_p bigint default 0, nr_seq_w_movimento_p INOUT bigint DEFAULT NULL, nm_tabela_p text default null, nr_titulo_receber_p bigint default null, nr_seq_proj_rec_p bigint default null, ie_origem_documento_p movimento_contabil.ie_origem_documento%type default null, nr_seq_tab_orig_p bigint default null, nr_seq_tab_compl_p bigint default null, nr_seq_info_ctb_p bigint default null, cd_moeda_p bigint default null, nr_doc_analitico_p w_movimento_contabil.nr_doc_analitico%type default null) AS $body$
DECLARE


/*
===============================================================================
DECLARACAO DE VARIAVEIS
===============================================================================
*/
nr_seq_tab_orig_w                      w_movimento_contabil.nr_seq_tab_orig%type := nr_seq_tab_orig_p;
nr_seq_tab_compl_w                     w_movimento_contabil.nr_seq_tab_compl%type := nr_seq_tab_compl_p;
nr_doc_analitico_w                     w_movimento_contabil.nr_doc_analitico%type := nr_doc_analitico_p;
nm_tabela_w                            w_movimento_contabil.nm_tabela%type := nm_tabela_p;
nm_atributo_w                          w_movimento_contabil.nm_atributo%type := nm_atributo_p;
nr_seq_info_ctb_w                      w_movimento_contabil.nr_seq_info%type := nr_seq_info_ctb_p;
ds_erro_w                              varchar(2000);
ds_documento_w                         varchar(255);
ds_compl_historico_w                   varchar(255);
ie_compl_historico_w                   varchar(255);
cd_conta_contabil_w                    varchar(20);
cd_cgc_w                               varchar(14);
ie_origem_tit_rec_w                    varchar(10);
ie_regra_conta_w                       varchar(3);
ie_regra_centro_custo_w                varchar(3);
ie_compl_hist_w                        varchar(2);
ie_tipo_titulo_pagar_w                 varchar(2);
ie_origem_tit_pagar_w                  varchar(10);
ie_tipo_titulo_pagar_regra_w           varchar(2);
ie_origem_tit_pagar_regra_w            varchar(2);
ie_contab_w                            varchar(1);
ie_debito_credito_w                    varchar(1);
ie_tipo_conta_w                        varchar(1);
ie_valor_absoluto_w                    varchar(1);
ie_regra_contab_empresa_w              varchar(1);
ie_ratear_ccusto_w                     varchar(1);
vl_transacao_w                         double precision;
vl_rateio_w                            double precision;
vl_rateado_w                           double precision;
vl_total_conta_w                       double precision;
cd_estab_exclusivo_w                   bigint;
nr_sequencia_w                         bigint;
cd_historico_w                         bigint;
cd_tipo_lote_contabil_w                bigint;
nr_seq_rateio_ccusto_w                 bigint;
cd_historico_regra_w                   bigint;
qt_regra_tipo_pagar_w                  bigint;
cd_tributo_w                           bigint;
nr_seq_tributo_w                       bigint;
nr_seq_nota_fiscal_w                   bigint;
qt_regra_origem_w                      bigint;
nr_titulo_original_w                   bigint;
cd_tributo_regra_w                     bigint;
cd_centro_custo_w                      bigint;
pr_rateio_w                            double precision;
cd_empresa_w                           integer;
cd_pessoa_fisica_w                     varchar(10);
ie_tipo_conta_glosa_w                  varchar(15);
ie_tipo_custo_w                        varchar(15);
nr_seq_tipo_repasse_w                  bigint;
nr_seq_produto_w                       bigint;
qt_regra_produto_w                     bigint;
cd_tipo_baixa_w                        integer;
qt_regra_baixa_w                       bigint;
cd_tipo_recebimento_w                  integer;
qt_regra_receb_w                       bigint;
qt_itens_rateio_w                      bigint;
qt_regra_pessoa_w                      bigint;
ie_tipo_pessoa_w                       varchar(1);
contador_w                             bigint := 0;
ie_encontrou_regra_w                   varchar(1) := 'N';
ds_log_w                               varchar(4000);
nr_seq_classe_w                        classe_titulo_pagar.nr_sequencia%type;
nr_seq_classe_tr_w                     classe_titulo_receber.nr_sequencia%type;
qt_regra_classe_tr_w                   bigint;
nr_seq_regra_tf_w                      w_movimento_contabil.nr_seq_regra_tf%type;
ie_tipo_titulo_receber_w               trans_financ_contab.ie_tipo_titulo_receber%type;
qt_regra_tipo_receber_w                bigint;
cd_moeda_empresa_w                     integer;
qt_regra_classe_tp_w                   bigint;
cd_estab_movto_w                       estabelecimento.cd_estabelecimento%type;
ie_regra_centro_estab_w                varchar(1) := 'N';
nr_seq_classif_movto_w                 trans_financ_contab.nr_seq_classif_movto%type;
ie_intercompany_w                      w_movimento_contabil.ie_intercompany%type := 'N';
cd_estab_intercompany_w                estabelecimento.cd_estabelecimento%type;
cd_estab_intercompany_aux_w            estabelecimento.cd_estabelecimento%type;
ie_centro_custo_w                      conta_contabil.ie_centro_custo%type;
cd_estab_rergra_tf_w                   trans_financ_contab.cd_estabelecimento%type;
ie_movto_estab_regra_w                 trans_financ_contab.ie_movto_estab_regra%type;
cd_estab_fixo_movto_w                  trans_financ_contab.cd_estab_fixo_movto%type;

/*
===============================================================================
DECLARACAO DE CURSORES
===============================================================================
*/
c010 CURSOR FOR
    SELECT  ie_debito_credito,
            ie_regra_conta,
            ie_regra_centro_custo,
            cd_conta_contabil,
            cd_centro_custo,
            cd_historico,
            ie_valor_absoluto,
            nr_seq_rateio_ccusto,
            ie_tipo_titulo_pagar,
            ie_origem_tit_pagar,
            cd_tributo,
            ie_origem_tit_receber,
            nr_sequencia,
            nr_seq_classif_movto,
            cd_estabelecimento,
            ie_movto_estab_regra,
            cd_estab_fixo_movto
  from      (
            SELECT  a.ie_debito_credito,
                    a.ie_regra_conta,
                    a.ie_regra_centro_custo,
                    a.cd_conta_contabil,
                    a.cd_centro_custo,
                    a.cd_historico,
                    coalesce(a.ie_valor_absoluto,'N') ie_valor_absoluto,
                    coalesce(a.nr_seq_rateio_ccusto, 0) nr_seq_rateio_ccusto,
                    a.nr_seq_produto,
                    a.ie_tipo_titulo_pagar,
                    a.ie_origem_tit_pagar,
                    a.cd_tributo,
                    a.ie_origem_tit_receber,
                    a.nr_sequencia,
                    a.ie_tipo_titulo_receber,
                    a.nr_seq_classif_movto,
                    a.cd_estabelecimento,
                    a.ie_movto_estab_regra,
                    a.cd_estab_fixo_movto
            from    estabelecimento b,
                    trans_financ_contab a
            where   a.cd_estabelecimento                    = b.cd_estabelecimento
            /* ************************************************************** */


            /*                        RESTRICOES FIXAS                        */

            and     b.cd_empresa                            = cd_empresa_w
            and     a.nr_seq_trans_financ                   = nr_seq_trans_fin_p
            and     a.nm_atributo                           = nm_atributo_p
            and     coalesce(a.ie_situacao, 'I')                 = 'A'
            /* ************************************************************** */


            /*              RESTRICOES COM DIFERENCA NOS UNIONS               */

            and (coalesce(a.dt_inicio_vigencia::text, '') = ''           or coalesce(a.dt_fim_vigencia::text, '') = '')
            /* ************************************************************** */


            /*          DEMAIS RESTRICOES RESTRICOES IGUAIS NOS UNIONS        */

            and     ((ie_regra_contab_empresa_w = 'S')      or (a.cd_estabelecimento = cd_estabelecimento_p))
            and     ((coalesce(a.cd_tributo::text, '') = '')                 or (a.cd_tributo = coalesce(cd_tributo_regra_p, a.cd_tributo)))
            and     ((coalesce(a.ie_tipo_custo::text, '') = '')              or (a.ie_tipo_custo = ie_tipo_custo_w))
            and     ctb_obter_reg_transacao(a.nr_sequencia, a.nr_seq_trans_financ,a.ie_debito_credito,a.ie_origem_tit_receber, nm_atributo_p, ie_origem_tit_rec_p, 'OTR') = 'S'
            and     ctb_obter_reg_transacao(a.nr_sequencia, a.nr_seq_trans_financ,a.ie_debito_credito,a.ie_origem_tit_pagar, nm_atributo_p, ie_origem_tit_pagar_w, 'OTP') = 'S'
            and     coalesce(a.cd_moeda,cd_moeda_empresa_w)      = coalesce(cd_moeda_p,cd_moeda_empresa_w)
            and     coalesce(a.ie_tipo_titulo_receber,'X')       = CASE WHEN qt_regra_tipo_receber_w=0 THEN 'X'  ELSE ie_tipo_titulo_receber_w END
            and     coalesce(a.ie_tipo_titulo_pagar,'X')         = CASE WHEN qt_regra_tipo_pagar_w=0 THEN 'X'  ELSE ie_tipo_titulo_pagar_w END 
            and     coalesce(a.cd_tipo_recebimento, 0)           = CASE WHEN qt_regra_receb_w=0 THEN 0  ELSE cd_tipo_recebimento_w END 
            and     coalesce(a.nr_seq_classe_tr, 0)              = CASE WHEN qt_regra_classe_tr_w=0 THEN 0  ELSE nr_seq_classe_tr_w END 
            and     coalesce(a.nr_seq_classe_tp, 0)              = CASE WHEN qt_regra_classe_tp_w=0 THEN 0  ELSE nr_seq_classe_w END 
            and     coalesce(a.ie_tipo_pessoa, 'X')              = CASE WHEN qt_regra_pessoa_w=0 THEN 'X'  ELSE ie_tipo_pessoa_w END 
            and     coalesce(a.nr_seq_produto,0)                 = CASE WHEN qt_regra_produto_w=0 THEN 0  ELSE coalesce(nr_seq_produto_w,0) END 
            and     coalesce(a.cd_tipo_baixa, 0)                 = CASE WHEN qt_regra_baixa_w=0 THEN 0  ELSE cd_tipo_baixa_w END 
            
union

            select  a.ie_debito_credito,
                    a.ie_regra_conta,
                    a.ie_regra_centro_custo,
                    a.cd_conta_contabil,
                    a.cd_centro_custo,
                    a.cd_historico,
                    coalesce(a.ie_valor_absoluto,'N') ie_valor_absoluto,
                    coalesce(a.nr_seq_rateio_ccusto, 0) nr_seq_rateio_ccusto,
                    a.nr_seq_produto,
                    a.ie_tipo_titulo_pagar,
                    a.ie_origem_tit_pagar,
                    a.cd_tributo,
                    a.ie_origem_tit_receber,
                    a.nr_sequencia,
                    a.ie_tipo_titulo_receber,
                    a.nr_seq_classif_movto,
                    a.cd_estabelecimento,
                    a.ie_movto_estab_regra,
                    a.cd_estab_fixo_movto
            from    estabelecimento b,
                    trans_financ_contab a
            where   a.cd_estabelecimento                    = b.cd_estabelecimento
            /* ************************************************************** */


            /*                        RESTRICOES FIXAS                        */

            and     b.cd_empresa                            = cd_empresa_w
            and     a.nr_seq_trans_financ                   = nr_seq_trans_fin_p
            and     a.nm_atributo                           = nm_atributo_p
            and     coalesce(a.ie_situacao, 'I')                 = 'A'
            /* ************************************************************** */


            /*              RESTRICOES COM DIFERENCA NOS UNIONS               */

            and (a.dt_inicio_vigencia IS NOT NULL AND a.dt_inicio_vigencia::text <> '' AND a.dt_fim_vigencia IS NOT NULL AND a.dt_fim_vigencia::text <> '')
            and (coalesce(a.dt_inicio_vigencia, dt_transacao_p) <= dt_transacao_p and coalesce(a.dt_fim_vigencia, dt_transacao_p) >= dt_transacao_p)
            /* ************************************************************** */


            /*          DEMAIS RESTRICOES RESTRICOES IGUAIS NOS UNIONS        */

            and     ((ie_regra_contab_empresa_w = 'S')      or (a.cd_estabelecimento = cd_estabelecimento_p))
            and     ((coalesce(a.cd_tributo::text, '') = '')                 or (a.cd_tributo = coalesce(cd_tributo_regra_p, a.cd_tributo)))
            and     ((coalesce(a.ie_tipo_custo::text, '') = '')              or (a.ie_tipo_custo = ie_tipo_custo_w))
            and     ctb_obter_reg_transacao(a.nr_sequencia, a.nr_seq_trans_financ,a.ie_debito_credito,a.ie_origem_tit_receber, nm_atributo_p, ie_origem_tit_rec_p, 'OTR') = 'S'
            and     ctb_obter_reg_transacao(a.nr_sequencia, a.nr_seq_trans_financ,a.ie_debito_credito,a.ie_origem_tit_pagar, nm_atributo_p, ie_origem_tit_pagar_w, 'OTP') = 'S'
            and     coalesce(a.cd_moeda,cd_moeda_empresa_w)      = coalesce(cd_moeda_p,cd_moeda_empresa_w)
            and     coalesce(a.ie_tipo_titulo_receber,'X')       = CASE WHEN qt_regra_tipo_receber_w=0 THEN 'X'  ELSE ie_tipo_titulo_receber_w END 
            and     coalesce(a.ie_tipo_titulo_pagar,'X')         = CASE WHEN qt_regra_tipo_pagar_w=0 THEN 'X'  ELSE ie_tipo_titulo_pagar_w END 
            and     coalesce(a.cd_tipo_recebimento, 0)           = CASE WHEN qt_regra_receb_w=0 THEN 0  ELSE cd_tipo_recebimento_w END 
            and     coalesce(a.nr_seq_classe_tr, 0)              = CASE WHEN qt_regra_classe_tr_w=0 THEN 0  ELSE nr_seq_classe_tr_w END 
            and     coalesce(a.nr_seq_classe_tp, 0)              = CASE WHEN qt_regra_classe_tp_w=0 THEN 0  ELSE nr_seq_classe_w END 
            and     coalesce(a.ie_tipo_pessoa, 'X')              = CASE WHEN qt_regra_pessoa_w=0 THEN 'X'  ELSE ie_tipo_pessoa_w END 
            and     coalesce(a.nr_seq_produto,0)                 = CASE WHEN qt_regra_produto_w=0 THEN 0  ELSE coalesce(nr_seq_produto_w,0) END 
            and     coalesce(a.cd_tipo_baixa, 0)                 = CASE WHEN qt_regra_baixa_w=0 THEN 0  ELSE cd_tipo_baixa_w END 
            ) alias63
  order by
            coalesce(nr_seq_produto, 0),
            coalesce(ie_tipo_titulo_pagar,'0'),
            coalesce(ie_origem_tit_pagar,'0'),
            coalesce(ie_origem_tit_receber,'0'),
            coalesce(cd_tributo,0);

c02 CURSOR FOR
    SELECT  cd_centro_custo,
            pr_rateio
    from    ctb_criterio_rateio_item
    where   nr_seq_criterio = nr_seq_rateio_ccusto_w
    and     (cd_centro_custo IS NOT NULL AND cd_centro_custo::text <> '')
    and (dt_transacao_p >= coalesce(dt_inicio_vigencia, dt_transacao_p) and dt_transacao_p <= coalesce(dt_fim_vigencia, dt_transacao_p))
    order by
            pr_rateio;

c03 CURSOR FOR
    SELECT  a.cd_conta_contabil,
            a.vl_contabil
    from    nota_fiscal_conta a
    where   a.nr_seq_nf  = nr_seq_nota_fiscal_w;

/*
===============================================================================
DECLARACAO DE SUB-ROTINAS
===============================================================================
*/
procedure get_estab_centro is
;
BEGIN
if (coalesce(cd_centro_custo_w,0) <> 0) then
    begin
        cd_estab_movto_w := coalesce(coalesce(obter_estab_centro_custo(cd_centro_custo_w),cd_estab_movto_p),cd_estabelecimento_p);
        /*
        5  - Contas a Receber
        6  - Receitas
        14  - Repasse a terceiros
        */
        if (cd_tipo_lote_contabil_w in (14,6,5)) and (ie_regra_centro_estab_w = 'S') and (cd_estab_movto_w <> cd_estabelecimento_p) then
            cd_centro_custo_w := coalesce(
                                        ctb_obter_centro_contab(
                                            cd_estab_movto_w,
                                            cd_centro_custo_w,
                                            cd_estabelecimento_p
                                    ),
                                        cd_centro_custo_w
                                    );
            cd_estab_movto_w := obter_estab_centro_custo(cd_centro_custo_w);
        end if;
    exception
    when no_data_found then
        cd_estab_movto_w := cd_estab_movto_p;
    end;
else
    cd_estab_movto_w := coalesce(cd_estab_movto_p,cd_estabelecimento_p);
end if;
end;

begin
/*
===============================================================================
MONTAGEM DE LOG
===============================================================================
*/
ds_log_w := substr( wheb_mensagem_pck.get_texto(299397, 'nr_seq_agrupamento_p='||nr_seq_agrupamento_p||
              ';cd_estabelecimento_p='||cd_estabelecimento_p||
              ';cd_estab_movto_p='||cd_estab_movto_p||
              ';cd_conta_contabil_p='||cd_conta_contabil_p||
              ';cd_centro_custo_p='||cd_centro_custo_p||
              ';dt_transacao_p='||dt_transacao_p||
              ';nr_seq_trans_fin_p='||nr_seq_trans_fin_p||
              ';nr_seq_conta_banco_p='||nr_seq_conta_banco_p||
              ';nm_atributo_p='||nm_atributo_p||
              ';cd_pessoa_fisica_p='||cd_pessoa_fisica_p||
              ';cd_cgc_p='||cd_cgc_p||
              ';cd_setor_p='||cd_setor_p||
              ';cd_convenio_p='||cd_convenio_p||
              ';nr_seq_caixa_p='||nr_seq_caixa_p||
              ';nr_seq_produto_p='||nr_seq_produto_p||
              ';nr_seq_caixa_od_p='||nr_seq_caixa_od_p||
              ';cd_tributo_p='||cd_tributo_p||
              ';nr_titulo_pagar_p='||nr_titulo_pagar_p||
              ';nr_seq_bandeira_p='||nr_seq_bandeira_p||
              ';cd_tributo_regra_p='||cd_tributo_regra_p||
              ';ie_origem_tit_rec_p='||ie_origem_tit_rec_p||
              ';nr_seq_banco_od_p='||nr_seq_banco_od_p||
              ';ie_tipo_conta_glosa_p='||ie_tipo_conta_glosa_p||
              ';nr_repasse_terceiro_p='||nr_repasse_terceiro_p||
              ';cd_estab_inf_movto_p='||cd_estab_inf_movto_p||
              ';cd_tipo_baixa_p='||cd_tipo_baixa_p||
              ';cd_tipo_recebimento_p='||cd_tipo_recebimento_p),1,4000);

/*
===============================================================================
INICIALIZACAO DE VARIAVEIS
===============================================================================
*/
<<inicializacao_de_variaveis>>
begin
    cd_estab_movto_w := cd_estab_movto_p;

    ie_tipo_titulo_receber_w := 'X';
    qt_regra_tipo_receber_w  := 0;
    ie_tipo_titulo_pagar_w   := 'X';
    qt_regra_tipo_pagar_w    := 0;
    ie_origem_tit_pagar_w    := 'X';
    ie_tipo_conta_glosa_w    := coalesce(ie_tipo_conta_glosa_p,'G');
    cd_tipo_recebimento_w    := coalesce(cd_tipo_recebimento_p,0);
    ie_ratear_ccusto_w       := 'N';
    qt_regra_produto_w       := 0;
    cd_moeda_empresa_w       := coalesce(obter_moeda_padrao_empresa(cd_estabelecimento_p,'E'),0);
    qt_regra_origem_w        := 0;
    nr_seq_produto_w         := nr_seq_produto_p;
    ie_tipo_custo_w          := '0';
    nr_seq_classe_w          := 0;
    cd_tipo_baixa_w          := coalesce(cd_tipo_baixa_p, 0);
    cd_cgc_w                 := cd_cgc_p;
end;
/*
===============================================================================
PARAMETROS E CONFIGURACOES GERAIS
===============================================================================
*/
<<parametros_e_configuracoes>>
begin
    if (coalesce(nr_seq_w_movimento_p::text, '') = '') then
        nr_sequencia_w := 0;
    else
        nr_sequencia_w := nr_seq_w_movimento_p;
    end if;

    if (nr_seq_produto_p = 0) then
        nr_seq_produto_w := null;
    end if;

    select  coalesce(max(ie_regra_centro_estab),'N')
    into STRICT    ie_regra_centro_estab_w
    from    parametro_faturamento
    where   cd_estabelecimento = cd_estabelecimento_p;

    if (coalesce(nr_seq_produto_w,0) <> 0) then
        select  count(*)
        into STRICT    qt_regra_produto_w
        from    trans_financ_contab a
        where   a.nr_seq_trans_financ = nr_seq_trans_fin_p
        and     a.nm_atributo = nm_atributo_p
        and     nr_seq_produto = nr_seq_produto_w
        and     a.ie_situacao = 'A';
    end if;

    if (coalesce(cd_centro_custo_p,0) <> 0) then
        select  coalesce(max(ie_tipo_custo),'0')
        into STRICT    ie_tipo_custo_w
        from    centro_custo
        where   cd_centro_custo = cd_centro_custo_p;
    end if;

    if (coalesce(nr_repasse_terceiro_p,0) <> 0) then
        select  max(nr_seq_tipo)
        into STRICT    nr_seq_tipo_repasse_w
        from    repasse_terceiro
        where   nr_repasse_terceiro = nr_repasse_terceiro_p;
    end if;

    if (cd_tipo_baixa_w <> 0)  then
        select  count(*)
        into STRICT    qt_regra_baixa_w
        from    trans_financ_contab a
        where   a.nr_seq_trans_financ = nr_seq_trans_fin_p
        and     a.cd_tipo_baixa = cd_tipo_baixa_w
        and     a.nm_atributo = nm_atributo_p
        and     a.ie_situacao = 'A';
    end if;

    if (cd_tipo_recebimento_w <> 0)  then
        select  count(*)
        into STRICT    qt_regra_receb_w
        from    trans_financ_contab a
        where   a.nr_seq_trans_financ = nr_seq_trans_fin_p
        and     a.cd_tipo_recebimento = cd_tipo_recebimento_w
        and     a.nm_atributo = nm_atributo_p
        and     a.ie_situacao = 'A';
    end if;

    select  count(*)
    into STRICT    qt_regra_pessoa_w
    from    trans_financ_contab a
    where   a.nr_seq_trans_financ = nr_seq_trans_fin_p
    and     a.nm_atributo = nm_atributo_p
    and     (a.ie_tipo_pessoa IS NOT NULL AND a.ie_tipo_pessoa::text <> '')
    and     a.ie_situacao = 'A';

    if (coalesce(cd_pessoa_fisica_p,'X') <> 'X') then
        ie_tipo_pessoa_w := 'F';
    elsif (coalesce(cd_cgc_p,'X') <> 'X') then
        ie_tipo_pessoa_w := 'J';
    else
        ie_tipo_pessoa_w := 'X';
    end if;

    qt_regra_classe_tp_w := 0;

    if (coalesce(nr_titulo_pagar_p,0) <> 0) then
        select  max(ie_tipo_titulo),
                max(ie_origem_titulo),
                max(nr_seq_classe)
        into STRICT    ie_tipo_titulo_pagar_w,
                ie_origem_tit_pagar_w,
                nr_seq_classe_w
        from    titulo_pagar
        where   nr_titulo  = nr_titulo_pagar_p;

        select  count(*)
        into STRICT    qt_regra_tipo_pagar_w
        from    trans_financ_contab a
        where   a.nr_seq_trans_financ  = nr_seq_trans_fin_p
        and     a.nm_atributo    = nm_atributo_p
        and     ie_tipo_titulo_pagar  = ie_tipo_titulo_pagar_w
        and     a.ie_situacao     = 'A';

        select  count(*)
        into STRICT    qt_regra_origem_w
        from    trans_financ_contab a
        where   a.nr_seq_trans_financ  = nr_seq_trans_fin_p
        and     a.nm_atributo    = nm_atributo_p
        and     ie_origem_tit_pagar  = ie_origem_tit_pagar_w
        and     a.ie_situacao    = 'A';

        if (coalesce(nr_seq_classe_w,0) <> 0)  then
            select  count(*)
            into STRICT    qt_regra_classe_tp_w
            from    trans_financ_contab a
            where   a.nr_seq_trans_financ = nr_seq_trans_fin_p
            and     a.nr_seq_classe_tp = nr_seq_classe_w
            and     a.nm_atributo = nm_atributo_p
            and     a.ie_situacao = 'A';
        end if;

        if (ie_tipo_titulo_pagar_w = '4') and (coalesce(cd_tributo_p,0) <> 0) then

            select  max(nr_titulo_original)
            into STRICT    nr_titulo_original_w
            from    titulo_pagar
            where   nr_titulo = nr_titulo_pagar_p;

            if (nr_titulo_original_w IS NOT NULL AND nr_titulo_original_w::text <> '') then
                select  max(cd_cgc),
                        coalesce(max(cd_pessoa_fisica),'')
                into STRICT    cd_cgc_w,
                        cd_pessoa_fisica_w
                from    titulo_pagar
                where   nr_titulo = nr_titulo_original_w;
            end if;
        end if;
    end if;

    if (coalesce(nr_titulo_receber_p,0) <> 0) then
        select  max(cd_cgc),
                coalesce(max(cd_pessoa_fisica),''),
                coalesce(max(nr_seq_classe),0),
                max(ie_tipo_titulo)
        into STRICT    cd_cgc_w,
                cd_pessoa_fisica_w,
                nr_seq_classe_tr_w,
                ie_tipo_titulo_receber_w
        from    titulo_receber
        where   nr_titulo = nr_titulo_receber_p;

        select  count(*)
        into STRICT    qt_regra_tipo_receber_w
        from    trans_financ_contab a
        where   a.nr_seq_trans_financ = nr_seq_trans_fin_p
        and     a.nm_atributo = nm_atributo_p
        and     a.ie_tipo_titulo_receber = ie_tipo_titulo_receber_w
        and     a.ie_situacao = 'A';
    end if;

    qt_regra_classe_tr_w := 0;

    if (coalesce(nr_seq_classe_tr_w,0) <> 0)  then
        select  count(*)
        into STRICT    qt_regra_classe_tr_w
        from    trans_financ_contab a
        where   a.nr_seq_trans_financ = nr_seq_trans_fin_p
        and     a.nr_seq_classe_tr = nr_seq_classe_tr_w
        and     a.nm_atributo = nm_atributo_p
        and     a.ie_situacao= 'A';
    end if;

    select  cd_empresa
    into STRICT    cd_empresa_w
    from    estabelecimento
    where   cd_estabelecimento  = cd_estabelecimento_p;

    select  coalesce(max(CASE WHEN coalesce(ie_conta_pagar,'N')='S' THEN 'P'  ELSE 'R' END ),'P'),
            coalesce(max(ie_regra_contab_empresa),'N') ie_regra_contab_empresa,
            max(cd_estabelecimento)
    into STRICT    ie_tipo_conta_w,
            ie_regra_contab_empresa_w,
            cd_estab_exclusivo_w
    from    transacao_financeira
    where   nr_sequencia = nr_seq_trans_fin_p;

    select  obter_se_compl_tipo_lote(cd_estabelecimento_p, cd_tipo_lote_contabil),
            cd_tipo_lote_contabil
    into STRICT    ie_compl_hist_w,
            cd_tipo_lote_contabil_w
    from    lote_contabil
    where   nr_lote_contabil = nr_lote_contabil_p;
end;
/*
===============================================================================
REGRA DE COMPLEMENTO DE HISTORICO
===============================================================================
*/
<<regra_complemento_historico>>
begin
    ie_compl_historico_w := 'N';
    if (cd_tipo_lote_contabil_w = 10) then /* Tesouraria*/
        select  coalesce(max(ie_compl_historico), 'N')
        into STRICT    ie_compl_historico_w
        from    parametro_tesouraria
        where   cd_estabelecimento  = cd_estabelecimento_p;
    elsif (cd_tipo_lote_contabil_w = 5) then /* Contas a receber*/
        select  coalesce(max(ie_compl_historico), 'N')
        into STRICT    ie_compl_historico_w
        from    parametro_contas_receber
        where   cd_estabelecimento  = cd_estabelecimento_p;
    elsif (cd_tipo_lote_contabil_w = 7) then /* Contas a pagar*/
        select  coalesce(max(ie_compl_historico), 'N')
        into STRICT    ie_compl_historico_w
        from    parametros_contas_pagar
        where   cd_estabelecimento  = cd_estabelecimento_p;
    elsif (cd_tipo_lote_contabil_w = 16) then /* Titulo a pagar de Repasse a Terceiros*/
        select  coalesce(max(ie_compl_historico_rep), 'N')
        into STRICT    ie_compl_historico_w
        from    parametros_contas_pagar
        where   cd_estabelecimento  = cd_estabelecimento_p;
    end if;
end;

/*
===============================================================================
CONFIGURACAO DE HOLDING - MULTI-EMPRESA
===============================================================================
OS1967372
Verificar se o cd_cgc_p veio preenchido para ver se o CNPJ
eh de um estabelecimento que pertence a uma empresa da Holding e
se eh intercompany
*/
<<configuracao_holding>>
begin
    if (coalesce(cd_cgc_p, '0') <> '0') then
        ie_intercompany_w := holding_pck.get_se_intercompany_cnpj(cd_estabelecimento_p, cd_cgc_p);
    end if;

    /* Jeferson Job (jjob) - OS 2024096 - Incluindo regra para preencher o campo cd_estab_intercompany_w */

    if (ie_intercompany_w = 'N') then
        cd_estab_intercompany_w := null;
    else
        select  max(cd_estabelecimento)
        into STRICT    cd_estab_intercompany_w
        from    estabelecimento e
        where   e.cd_cgc = cd_cgc_p;
    end if;
    cd_estab_intercompany_aux_w := cd_estab_intercompany_w;
end;

ie_encontrou_regra_w := 'N';
open c010;
loop
fetch c010 into
    ie_debito_credito_w,
    ie_regra_conta_w,
    ie_regra_centro_custo_w,
    cd_conta_contabil_w,
    cd_centro_custo_w,
    cd_historico_w,
    ie_valor_absoluto_w,
    nr_seq_rateio_ccusto_w,
    ie_tipo_titulo_pagar_regra_w,
    ie_origem_tit_pagar_regra_w,
    cd_tributo_regra_w,
    ie_origem_tit_rec_w,
    nr_seq_regra_tf_w,
    nr_seq_classif_movto_w,
    cd_estab_rergra_tf_w,
    ie_movto_estab_regra_w,
    cd_estab_fixo_movto_w;
EXIT WHEN NOT FOUND; /* apply on c010 */
    begin

    ie_encontrou_regra_w := 'S';

    pr_rateio_w  := 0;
    vl_rateio_w  := 0;
    vl_rateado_w  := 0;
    ie_contab_w  := 'S';
    cd_estab_intercompany_w := cd_estab_intercompany_aux_w;
    /*
    ===============================================================================
    CONFIGURACAO DE OBTENCAO DE CONTA CONTABIL
    ===============================================================================
    */
    <<configuracao_conta_contabil>>
    begin
        if (ie_regra_conta_w = 'INF') then /* Informado */
            cd_conta_contabil_w := cd_conta_contabil_p;
        elsif (ie_regra_conta_w = 'F') then /* Fixo */
            cd_conta_contabil_w := cd_conta_contabil_w;
        elsif (ie_regra_conta_w = 'BCO') then /* Cadastro de Bancos */
            if (coalesce(nr_seq_conta_banco_p,0) > 0) then
                select  cd_conta_contabil
                into STRICT    cd_conta_contabil_w
                from    banco_estabelecimento
                where   nr_sequencia = nr_seq_conta_banco_p;
            end if;
        elsif (ie_regra_conta_w = 'BCD') then /* Banco origem/destino */
                if (coalesce(nr_seq_banco_od_p,0) > 0) then
                    /* Jeferson Job (jjob) - Acrescentado o campo cd_estabelecimento para validacao de intercompany - OS-1967372 */

                    select  cd_conta_contabil,
                            cd_estabelecimento
                    into STRICT    cd_conta_contabil_w,
                            cd_estab_intercompany_w
                    from    banco_estabelecimento
                    where   nr_sequencia  = nr_seq_banco_od_p;
                    /* Jeferson Job (jjob) - Verificar se o estabelecimento do Banco pertence a uma holding e se eh intercompany - OS-1967372 */

                    ie_intercompany_w := holding_pck.get_se_intercompany(cd_estabelecimento_p, cd_estab_intercompany_w);
                    if (ie_intercompany_w = 'N') then /* Jeferson Job (jjob) - OS 2024096 - Incluindo regra para preencher o campo cd_estab_intercompany_w */
                        cd_estab_intercompany_w := null;
                    end if;
                end if;
        elsif (ie_regra_conta_w in ('CP','INP')) then /* Cadastro de Pessoas(F/J) ou Informada pelo Usuario ou Cadastro de Pessoas(F/J) */
            if (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') then

                cd_conta_contabil_w := null;

                if (coalesce(nr_seq_proj_rec_p,0) <> 0 and ie_tipo_conta_w = 'P') then
                    /* OS 2052052 - Busca conta de pagamento via projeto recurso */

                    cd_conta_contabil_w := obter_conta_contab_pj(cd_empresa_w, cd_estabelecimento_p, cd_cgc_p, 'V', dt_transacao_p);
                end if;

                if (coalesce(cd_conta_contabil_w, '0') = '0') then
                    select  coalesce(max(obter_conta_contab_pj(cd_empresa_w, cd_estabelecimento_p, cd_cgc_p, ie_tipo_conta_w, dt_transacao_p)),'')
                    into STRICT  cd_conta_contabil_w
;
                end if;
            elsif (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
                select  coalesce(max(obter_conta_contab_pf(cd_empresa_w, cd_pessoa_fisica_p, ie_tipo_conta_w, dt_transacao_p)),'')
                into STRICT  cd_conta_contabil_w
;
            end if;
            if (ie_regra_conta_w = 'INP') then
                cd_conta_contabil_w  := coalesce(cd_conta_contabil_p,cd_conta_contabil_w);
                if (coalesce(cd_tributo_p,0) <> 0) then
                    select  coalesce(max(obter_conta_contabil_trib(cd_empresa_w,cd_tributo_p,cd_cgc_p,dt_transacao_p)),'')
                    into STRICT    cd_conta_contabil_w
;
                else
                    select  coalesce(max(ie_tipo_titulo),'X'),
                            max(nr_seq_tributo)
                    into STRICT    ie_tipo_titulo_pagar_w,
                            nr_seq_tributo_w
                    from    titulo_pagar
                    where   nr_titulo  = nr_titulo_pagar_p;

                    if (ie_tipo_titulo_pagar_w = '4') and (coalesce(nr_seq_tributo_w,0) <> 0) then
                        select  max(cd_tributo)
                        into STRICT    cd_tributo_w
                        from    titulo_pagar_imposto
                        where   nr_sequencia  = nr_seq_tributo_w;

                        select  coalesce(max(obter_conta_contabil_trib(cd_empresa_w,cd_tributo_w,cd_cgc_p,dt_transacao_p)),'')
                        into STRICT    cd_conta_contabil_w
;
                    end if;
                end if;
            end if;
        elsif (ie_regra_conta_w = 'CPE') then /* Cadastro de Pessoas (J) - Estabelecimento */
 /* matheus os */
            if (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') then
                cd_conta_contabil_w := null;

                if (coalesce(nr_seq_proj_rec_p,0) <> 0 and ie_tipo_conta_w = 'P') then
                    /* OS 2052052 - Busca conta de pagamento via projeto recurso */

                    cd_conta_contabil_w := obter_conta_contab_pj(cd_empresa_w, cd_estabelecimento_p, cd_cgc_p, 'V', dt_transacao_p);
                end if;

                if (coalesce(cd_conta_contabil_w, '0') = '0') then
                    select  coalesce(max(obter_conta_contab_pj(cd_empresa_w, cd_estabelecimento_p, cd_cgc_p, ie_tipo_conta_w, dt_transacao_p)),'')
                    into STRICT  cd_conta_contabil_w
;
                end if;
            end if;
        elsif (ie_regra_conta_w = 'CV') then /* Convenio (CGC) */
            if (cd_convenio_p IS NOT NULL AND cd_convenio_p::text <> '') then
                select  max(cd_conta_contabil)
                into STRICT    cd_conta_contabil_w
                from    convenio
                where   cd_convenio  = cd_convenio_p;

                select  coalesce(max(cd_conta_contabil), cd_conta_contabil_w)
                into STRICT    cd_conta_contabil_w
                from    convenio_estabelecimento
                where   cd_convenio    = cd_convenio_p
                and     cd_estabelecimento  = cd_estabelecimento_p;
            elsif (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') then
                select  obter_conta_contab_pj(cd_empresa_w, null,cd_cgc_p, ie_tipo_conta_w, dt_transacao_p)
                into STRICT    cd_conta_contabil_w
;
            end if;
        elsif (ie_regra_conta_w = 'CVG') then /* Convenio (Glosa) */
            select  obter_conta_convenio(cd_estabelecimento_p, cd_convenio_p, null, 'G', dt_transacao_p,null,null,null,cd_setor_p,null,null,nr_seq_trans_fin_p)
            into STRICT    cd_conta_contabil_w
;
        elsif (ie_regra_conta_w = 'CVT') then /* Convenio (Glosa - Terceiro/Hospital) */
            select  obter_conta_convenio(cd_estabelecimento_p, cd_convenio_p, null, ie_tipo_conta_glosa_w, dt_transacao_p,null,null,null,cd_setor_p,null,null,nr_seq_trans_fin_p)
            into STRICT    cd_conta_contabil_w
;
        elsif (ie_regra_conta_w = 'CVM') then /* Convenio (Valor a maior)         */
            select  obter_conta_convenio(cd_estabelecimento_p, cd_convenio_p, null, 'M', dt_transacao_p,null,null,null,cd_setor_p,null,null,nr_seq_trans_fin_p)
            into STRICT    cd_conta_contabil_w
;
        elsif (ie_regra_conta_w = 'CVS') then /* Convenio (Valor recursado)         */
            select  obter_conta_convenio(cd_estabelecimento_p, cd_convenio_p, null, 'S', dt_transacao_p,null,null,null,cd_setor_p,null,null,nr_seq_trans_fin_p)
            into STRICT    cd_conta_contabil_w
;
        elsif (ie_regra_conta_w = 'SET') then /* Setor do Usuario */
            cd_conta_contabil_w := '';
        elsif (ie_regra_conta_w = 'TER') then /* Cadastro do Terceiro */
            select  coalesce(max(cd_conta_contabil),cd_conta_contabil_w)
            into STRICT    cd_conta_contabil_w
            from    terceiro
            where   coalesce(cd_pessoa_fisica,cd_cgc) = coalesce(cd_pessoa_fisica_p,cd_cgc_p)
            and     cd_estabelecimento = coalesce(cd_estabelecimento_p,cd_estabelecimento);
        elsif (ie_regra_conta_w = 'TCR') then
            cd_conta_contabil_w := obter_conta_contabil_terceiro(null, cd_cgc_p, cd_pessoa_fisica_p, dt_transacao_p, 'CR');
        elsif (ie_regra_conta_w = 'CX') then /* Caixa da tesouraria */
            select  max(obter_conta_caixa(nr_sequencia, dt_transacao_p))
            into STRICT    cd_conta_contabil_w
            from    caixa
            where   nr_sequencia  = nr_seq_caixa_p;
        elsif (ie_regra_conta_w = 'CXD') then /* Caixa origem/destino da tesouraria */
            select  max(obter_conta_caixa(nr_sequencia, dt_transacao_p))
            into STRICT    cd_conta_contabil_w
            from    caixa
            where   nr_sequencia  = nr_seq_caixa_od_p;
        elsif (ie_regra_conta_w = 'IMP') then /* Conta contabil do tributo */
            select  max(obter_conta_contabil_trib(cd_empresa_w,cd_tributo_p, cd_cgc_p, dt_transacao_p))
            into STRICT    cd_conta_contabil_w
;
        elsif (ie_regra_conta_w = 'IMT') then /* Conta contabil do tributo */
            select  max(obter_conta_contabil_trib(cd_empresa_w,cd_tributo_p, cd_cgc_w, dt_transacao_p))
            into STRICT    cd_conta_contabil_w
;
        elsif (ie_regra_conta_w = 'PF') then /* Cadastro da Pessoa fisica */
            if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
                select  coalesce(max(obter_conta_contab_pf(cd_empresa_w, cd_pessoa_fisica_p, ie_tipo_conta_w, dt_transacao_p)),'')
                into STRICT    cd_conta_contabil_w
;
            end if;
        elsif (ie_regra_conta_w = 'BCR') then /* Bandeira do cartao de credito    */
            cd_conta_contabil_w := obter_conta_bandeira_cartao(nr_seq_bandeira_p);
        elsif (ie_regra_conta_w = 'TPR') then
            if (nr_repasse_terceiro_p IS NOT NULL AND nr_repasse_terceiro_p::text <> '') and (nr_seq_tipo_repasse_w IS NOT NULL AND nr_seq_tipo_repasse_w::text <> '') then
               select   max(cd_conta_contabil)
               into STRICT     cd_conta_contabil_w
               from     tipo_repasse
               where    nr_sequencia = nr_seq_tipo_repasse_w;
            end if;
        elsif (ie_regra_conta_w = 'CNF') then /* Conta adicional NF */
            select  coalesce(max(nr_seq_nota_fiscal),0)
            into STRICT    nr_seq_nota_fiscal_w
            from    titulo_pagar
            where   nr_titulo = nr_titulo_pagar_p;

            if (coalesce(nr_titulo_receber_p,0) <> 0) then
                select  coalesce(max(nr_seq_nf_saida),0)
                into STRICT    nr_seq_nota_fiscal_w
                from    titulo_receber
                where   nr_titulo = nr_titulo_receber_p;
            end if;

            select  coalesce(sum(vl_contabil),0)
            into STRICT    vl_total_conta_w
            from    nota_fiscal_conta
            where   nr_seq_nf = nr_seq_nota_fiscal_w;

            select  count(*)
            into STRICT    qt_itens_rateio_w
            from    nota_fiscal_conta a
            where   a.nr_seq_nf = nr_seq_nota_fiscal_w;

            if (vl_total_conta_w <> 0) then
                open c03;
                loop
                fetch c03 into
                    cd_conta_contabil_w,
                    vl_rateio_w;
                EXIT WHEN NOT FOUND; /* apply on c03 */

                    if (vl_transacao_p < 0) and (vl_rateio_w > 0) then
                        vl_rateio_w  := vl_rateio_w * -1;
                    end if;

                    if (vl_transacao_p <> vl_total_conta_w) then
                        vl_rateio_w := round((dividir((vl_transacao_p * vl_rateio_w),vl_total_conta_w))::numeric,2);
                    end if;

                    vl_rateado_w := vl_rateado_w + vl_rateio_w;

                    ds_documento_w := ds_documento_p;
                    ds_compl_historico_w := '';

                    if (ie_compl_hist_w = 'S') then
                        select  obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w, ds_atrib_compl_hist_p)
                        into STRICT  ds_compl_historico_w
;

                        ds_documento_w  := substr(coalesce(ds_compl_historico_w, ds_documento_p),1,255);
                    end if;

                    /* edgar 29/09/2007, os 69745 */

                    if (ie_compl_historico_w = 'S') then
                        ds_documento_w  := substr(ds_compl_historico_w,1,255);
                    end if;

                    contador_w := contador_w + 1;

                    if (contador_w = qt_itens_rateio_w) then
                        if (vl_rateado_w > vl_transacao_p) then
                            vl_rateio_w := vl_rateio_w - (vl_rateado_w - vl_transacao_p);
                        elsif (vl_rateado_w < vl_transacao_p) then
                            vl_rateio_w := vl_rateio_w + (vl_transacao_p - vl_rateado_w);
                        end if;
                    end if;

                    nr_sequencia_w  := nr_sequencia_w + 1;

                    get_estab_centro;
                    begin
                        select  ie_centro_custo
                        into STRICT    ie_centro_custo_w
                        from    conta_contabil a
                        where   a.cd_conta_contabil = cd_conta_contabil_w;
                    exception
                    when no_data_found then
                        ie_centro_custo_w := 'S';
                    end;

                    insert into w_movimento_contabil(
                        nr_lote_contabil,                                           -- 1
                        nr_sequencia,                                               -- 2
                        cd_conta_contabil,                                          -- 3
                        ie_debito_credito,                                          -- 4
                        cd_historico,                                               -- 5
                        dt_movimento,                                               -- 6
                        vl_movimento,                                               -- 7
                        ds_doc_agrupamento,                                         -- 8
                        nr_seq_agrupamento,                                         -- 9
                        cd_centro_custo,                                            -- 10
                        ds_compl_historico,                                         -- 11
                        nr_seq_trans_fin,                                           -- 12
                        nr_documento,                                               -- 13
                        cd_pessoa_fisica,                                           -- 14
                        cd_cgc,                                                     -- 15
                        cd_estabelecimento,                                         -- 16
                        ie_origem_documento,                                        -- 17
                        nr_seq_tab_orig,                                            -- 18
                        nr_seq_tab_compl,                                           -- 19
                        nm_tabela,                                                  -- 20
                        nm_atributo,                                                -- 21
                        nr_seq_info,                                                -- 22
                        nr_seq_regra_tf,                                            -- 23
                        nr_doc_analitico,                                           -- 24
                        nr_seq_classif_movto,                                       -- 25
                        ie_intercompany,                                            -- 26
                        cd_estab_intercompany,                                      -- 27
                        nr_seq_proj_rec                                             -- 28
                    ) values (
                        nr_lote_contabil_p,                                         -- 1
                        nr_sequencia_w,                                             -- 2
                        cd_conta_contabil_w,                                        -- 3
                        ie_debito_credito_w,                                        -- 4
                        cd_historico_w,                                             -- 5
                        dt_transacao_p,                                             -- 6
                        vl_rateio_w,                                                -- 7
                        nr_seq_agrupamento_p,                                       -- 8
                        nr_seq_agrupamento_p,                                       -- 9
                        CASE WHEN ie_centro_custo_w='N' THEN null  ELSE cd_centro_custo_w END ,       -- 10
                        ds_documento_w,                                             -- 11
                        nr_seq_trans_fin_p,                                         -- 12
                        substr(nr_documento_p,1,255),                               -- 13
                        cd_pessoa_fisica_p,                                         -- 14
                        cd_cgc_p,                                                   -- 15
                        cd_estab_movto_w,                                           -- 16
                        ie_origem_documento_p,                                      -- 17
                        nr_seq_tab_orig_w,                                          -- 18
                        nr_seq_tab_compl_w,                                         -- 19
                        nm_tabela_w,                                                -- 20
                        nm_atributo_w,                                              -- 21
                        nr_seq_info_ctb_w,                                          -- 22
                        nr_seq_regra_tf_w,                                          -- 23
                        nr_doc_analitico_w,                                         -- 24
                        nr_seq_classif_movto_w,                                     -- 25
                        ie_intercompany_w,                                          -- 26
                        cd_estab_intercompany_w,                                    -- 27
                        nr_seq_proj_rec_p                                           -- 28
                        );
                end loop;
                close C03;
                cd_conta_contabil_w  := null;
            else
                if (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') then
                    select  coalesce(max(obter_conta_contab_pj(cd_empresa_w, null, cd_cgc_p, ie_tipo_conta_w, dt_transacao_p)),'')
                    into STRICT    cd_conta_contabil_w
;
                elsif (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
                    select  coalesce(max(obter_conta_contab_pf(cd_empresa_w, cd_pessoa_fisica_p, ie_tipo_conta_w, dt_transacao_p, cd_estabelecimento_p)),'')
                    into STRICT    cd_conta_contabil_w
;
                end if;
            end if;
        elsif (ie_regra_conta_w = 'CVR') then
            select  obter_conta_convenio(cd_estabelecimento_p, cd_convenio_p, null, 'R', dt_transacao_p,null,null,null,cd_setor_p,null,null,nr_seq_trans_fin_p)
            into STRICT    cd_conta_contabil_w
;
        elsif (ie_regra_conta_w = 'CPO') then /*Conta da Pessoa buscando do titulo original*/
          begin
          if (nr_titulo_pagar_p IS NOT NULL AND nr_titulo_pagar_p::text <> '') then
            begin
            if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
              select  coalesce(max(obter_conta_contab_pj(cd_empresa_w, null, cd_cgc_w, ie_tipo_conta_w, dt_transacao_p)),'')
              into STRICT  cd_conta_contabil_w
;
            elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
              select  coalesce(max(obter_conta_contab_pf(cd_empresa_w, cd_pessoa_fisica_w, ie_tipo_conta_w, dt_transacao_p)),'')
              into STRICT  cd_conta_contabil_w
;
            end if;
            end;
          end if;

          if (coalesce(nr_titulo_receber_p,0) <> 0) then
            begin
            if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
              select  coalesce(max(obter_conta_contab_pj(cd_empresa_w, null, cd_cgc_w, ie_tipo_conta_w, dt_transacao_p)),'')
              into STRICT  cd_conta_contabil_w
;
            elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
              select  coalesce(max(obter_conta_contab_pf(cd_empresa_w, cd_pessoa_fisica_w, ie_tipo_conta_w, dt_transacao_p)),'')
              into STRICT  cd_conta_contabil_w
;
            end if;
            end;
          end if;
          end;
        elsif (ie_regra_conta_w = 'POE') then /* Cadastro de Pessoas(F/J) - Titulo Original - Estabelecimento */
          begin
          if (nr_titulo_pagar_p IS NOT NULL AND nr_titulo_pagar_p::text <> '') then
            begin
            if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
              select  coalesce(max(obter_conta_contab_pj(cd_empresa_w, cd_estabelecimento_p, cd_cgc_w, ie_tipo_conta_w, dt_transacao_p)),'')
              into STRICT  cd_conta_contabil_w
;
            elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
              select  coalesce(max(obter_conta_contab_pf(cd_empresa_w, cd_pessoa_fisica_w, ie_tipo_conta_w, dt_transacao_p)),'')
              into STRICT  cd_conta_contabil_w
;
            end if;
            end;
          end if;
          end;
        elsif (ie_regra_conta_w = 'BCE') then /* Bandeira do cartao de credito    */
          if (nr_seq_bandeira_p IS NOT NULL AND nr_seq_bandeira_p::text <> '') then
            select  max(b.cd_conta_contabil)
            into STRICT  cd_conta_contabil_w
            from  bandeira_cartao_estab  b,
              bandeira_cartao_cr  a
            where  a.nr_sequencia  = b.nr_seq_bandeira
            and  b.cd_estabelecimento = cd_estab_inf_movto_p
            and  a.nr_sequencia  = nr_seq_bandeira_p;
          end if;
        elsif (ie_regra_conta_w = 'CVB') then /*Convenio (Baixa Titulo CR)*/
          select  obter_conta_convenio(cd_estabelecimento_p, cd_convenio_p, null, 'B', dt_transacao_p,null,null,null,cd_setor_p,null,null,nr_seq_trans_fin_p)
          into STRICT  cd_conta_contabil_w
;
        elsif (ie_regra_conta_w = 'PCD') then /*Projeto Recurso - conta despesa*/
          select  max(cd_conta_contabil)
          into STRICT  cd_conta_contabil_w
          from  proj_rec_conta_contabil
          where  ie_tipo = 'CD'
          and  nr_seq_proj_rec = nr_seq_proj_rec_p;
        elsif (ie_regra_conta_w = 'PCE') then /*Projeto Recurso - conta receita*/
          select  max(cd_conta_contabil)
          into STRICT  cd_conta_contabil_w
          from  proj_rec_conta_contabil
          where  ie_tipo = 'CE'
          and  nr_seq_proj_rec = nr_seq_proj_rec_p;
        elsif (ie_regra_conta_w = 'PCP') then /*Projeto Recurso - conta pagamento*/
          select  max(cd_conta_contabil)
          into STRICT  cd_conta_contabil_w
          from  proj_rec_conta_contabil
          where  ie_tipo = 'CP'
          and  nr_seq_proj_rec = nr_seq_proj_rec_p;
        elsif (ie_regra_conta_w = 'PCR') then /*Projeto Recurso - conta recebimento*/
          select  max(cd_conta_contabil)
          into STRICT  cd_conta_contabil_w
          from  proj_rec_conta_contabil
          where  ie_tipo = 'CR'
          and  nr_seq_proj_rec = nr_seq_proj_rec_p;
        end if;
    end;

    /*
    ===============================================================================
    CONFIGURACAO DE OBTENCAO DE CENTRO DE CUSTO
    ===============================================================================
    */
    <<configuracao_centro_custo>>
    begin
        if (ie_regra_centro_custo_w = 'INF') and (coalesce(cd_centro_custo_p,0) > 0) then
          cd_centro_custo_w  := cd_centro_custo_p;
        elsif (ie_regra_centro_custo_w = 'F') and (coalesce(cd_centro_custo_w,0) > 0) then
          cd_centro_custo_w  := cd_centro_custo_w;
        elsif (ie_regra_centro_custo_w = 'N') then
            cd_centro_custo_w := '';
        elsif (ie_regra_centro_custo_w = 'SET') then
          begin
          select  max(cd_centro_custo)
          into STRICT  cd_centro_custo_w
          from  setor_atendimento
          where  cd_setor_atendimento  = cd_setor_p
          and  (cd_setor_p IS NOT NULL AND cd_setor_p::text <> '');
          end;
        elsif (ie_regra_centro_custo_w = 'RAT') then
            ie_ratear_ccusto_w := 'S';
        elsif (ie_regra_centro_custo_w = 'IF') then
            begin
            if (coalesce(cd_centro_custo_p,0) > 0) then
                cd_centro_custo_w := cd_centro_custo_p;
            elsif (coalesce(cd_centro_custo_w,0) > 0) then
                cd_centro_custo_w := cd_centro_custo_w;
            end if;
          end;
        end if;
    end;

    if (ie_valor_absoluto_w = 'N') then
        vl_transacao_w := vl_transacao_p;
    else
        vl_transacao_w := abs(vl_transacao_p);
    end if;

    /*
    ===============================================================================
    INICIO DO PROCESSO DE CONTABILIZACAO
    ===============================================================================
    */
    <<bloco_de_contabilizacao>>
    begin
        /* Deve contabilizar somente se encontrar conta contabil */

        if (cd_conta_contabil_w IS NOT NULL AND cd_conta_contabil_w::text <> '') then
            nr_sequencia_w := nr_sequencia_w +1;

            /* marcus em 01/07/2006 djb */

            if (cd_historico_p IS NOT NULL AND cd_historico_p::text <> '') then
                cd_historico_w := cd_historico_p;
            end if;

            ds_documento_w := ds_documento_p;
            ds_compl_historico_w := '';

            if (ie_compl_hist_w = 'S') then
                select  obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w, ds_atrib_compl_hist_p)
                into STRICT    ds_compl_historico_w
;

                ds_documento_w := substr(coalesce(ds_compl_historico_w, ds_documento_p),1,255);
            end if;

            /* edgar 29/09/2007, os 69745, somente gerar compl_historico cadastrado */

            if (ie_compl_historico_w = 'S') then
                ds_documento_w := substr(ds_compl_historico_w,1,255);
            end if;

            /*
            ===============================================================================
            INICIO DA CONTABILIZACAO
            ===============================================================================
            */
            if (coalesce(nr_seq_rateio_ccusto_w, 0) > 0) and (ie_ratear_ccusto_w = 'S') then
                /*
                CONTABILIZACAO COM BASE NO CRITERIO DE RATEIO

                OS90993 - fabio 05/06/08
                Para gerar os movimentos com base no rateio, ao invez do unico movimento
                */
                <<com_criterio_de_rateio>>
                begin
                    vl_rateio_w := 0;
                    vl_rateado_w := 0;
                    open c02;
                    loop
                    fetch c02 into
                        cd_centro_custo_w,
                        pr_rateio_w;
                    EXIT WHEN NOT FOUND; /* apply on c02 */
                        CALL get_estab_centro();
                        nr_sequencia_w := nr_sequencia_w +1;
                        vl_rateio_w := round((dividir((vl_transacao_w * pr_rateio_w), 100))::numeric,2);
                        vl_rateado_w := vl_rateado_w + vl_rateio_w;

                        begin
                            select  ie_centro_custo
                            into STRICT    ie_centro_custo_w
                            from    conta_contabil a
                            where   a.cd_conta_contabil = cd_conta_contabil_w;
                        exception
                        when no_data_found then
                            ie_centro_custo_w := 'S';
                        end;

                        insert into w_movimento_contabil(
                            nr_lote_contabil,                                           -- 1
                            nr_sequencia,                                               -- 2
                            cd_conta_contabil,                                          -- 3
                            ie_debito_credito,                                          -- 4
                            cd_historico,                                               -- 5
                            dt_movimento,                                               -- 6
                            vl_movimento,                                               -- 7
                            ds_doc_agrupamento,                                         -- 8
                            nr_seq_agrupamento,                                         -- 9
                            cd_centro_custo,                                            -- 10
                            ds_compl_historico,                                         -- 11
                            nr_seq_trans_fin,                                           -- 12
                            nr_documento,                                               -- 13
                            cd_pessoa_fisica,                                           -- 14
                            cd_cgc,                                                     -- 15
                            cd_estabelecimento,                                         -- 16
                            ie_transitorio,                                             -- 17
                            ie_origem_documento,                                        -- 18
                            nr_seq_tab_orig,                                            -- 19
                            nr_seq_tab_compl,                                           -- 20
                            nm_tabela,                                                  -- 21
                            nm_atributo,                                                -- 22
                            nr_seq_info,                                                -- 23
                            nr_seq_regra_tf,                                            -- 24
                            nr_doc_analitico,                                           -- 25
                            nr_seq_classif_movto,                                       -- 26
                            ie_intercompany,                                            -- 27
                            cd_estab_intercompany,                                      -- 28
                            nr_seq_proj_rec
                        ) values (
                            nr_lote_contabil_p,                                         -- 1
                            nr_sequencia_w,                                             -- 2
                            cd_conta_contabil_w,                                        -- 3
                            ie_debito_credito_w,                                        -- 4
                            cd_historico_w,                                             -- 5
                            dt_transacao_p,                                             -- 6
                            vl_rateio_w,                                                -- 7
                            nr_seq_agrupamento_p,                                       -- 8
                            nr_seq_agrupamento_p,                                       -- 9
                            CASE WHEN ie_centro_custo_w='N' THEN null  ELSE cd_centro_custo_w END ,       -- 10
                            ds_documento_w,                                             -- 11
                            nr_seq_trans_fin_p,                                         -- 12
                            substr(nr_documento_p,1,255),                               -- 13
                            cd_pessoa_fisica_p,                                         -- 14
                            cd_cgc_p,                                                   -- 15
                            cd_estab_movto_w,                                           -- 16
                            'N',                                                        -- 17
                            ie_origem_documento_p,                                      -- 18
                            nr_seq_tab_orig_w,                                          -- 19
                            nr_seq_tab_compl_w,                                         -- 20
                            nm_tabela_w,                                                -- 21
                            nm_atributo_w,                                              -- 22
                            nr_seq_info_ctb_w,                                          -- 23
                            nr_seq_regra_tf_w,                                          -- 24
                            nr_doc_analitico_w,                                         -- 25
                            nr_seq_classif_movto_w,                                     -- 26
                            ie_intercompany_w,                                          -- 27
                            cd_estab_intercompany_w,                                    -- 28
                            nr_seq_proj_rec_p
                            );
                    end loop;
                    close c02;

                    if (vl_rateado_w <> vl_transacao_w) then
                        update  w_movimento_contabil
                        set     vl_movimento = vl_movimento + vl_transacao_w - vl_rateado_w
                        where   nr_sequencia = nr_sequencia_w;
                    end if;
                end;
            else
                /*
                CONTABILIZACAO NORMAL - SEM CRITERIO DE RATEIO
                */
                <<sem_criterio_de_rateio>>
                begin
                    ie_contab_w  := 'S';

                    CALL get_estab_centro();
                    /*
                    Regra a nivel de registro analitico, somente gravar o movimento
                    se o estabelecimento do movimento for o mesmo da regra.
                    O objetivo eh permitir contabilizar, em casos de rateio do valor
                    entre estabelecimentos, somente o valor de um dos estabelecimento
                    */
                    if (coalesce(ie_movto_estab_regra_w,'N') = 'S') and (cd_estab_rergra_tf_w <> cd_estab_movto_w) then
                        ie_contab_w := 'N';
                    end if;

                    if (ie_contab_w = 'S') then
                        begin -- inicio - tratamento de excecao
                            if (coalesce(cd_conta_contabil_w,'0') = '0') then
                                CALL ctb_gravar_log_lote(
                                    nr_lote_contabil_p,
                                    9,
                                    ds_log_w,
                                    nm_usuario_p,
                                    nr_documento_p,
                                    nm_tabela_p,
                                    nm_atributo_p,
                                    nr_seq_trans_fin_p,
                                    vl_transacao_p,
                                    dt_transacao_p,
                                    'N');
                            end if;

                            begin
                                /*
                                Tratamento para verificar se a conta exige ou
                                nao permite centro de custo.
                                Gravar o centro de custo no movimento somente se a
                                conta contabil permitir o uso
                                */
                                select  ie_centro_custo
                                into STRICT    ie_centro_custo_w
                                from    conta_contabil a
                                where   a.cd_conta_contabil = cd_conta_contabil_w;
                            exception
                            when no_data_found then
                                ie_centro_custo_w := 'S';
                            end;

                            insert into w_movimento_contabil(
                                nr_lote_contabil,                                       -- 1
                                nr_sequencia,                                           -- 2
                                cd_conta_contabil,                                      -- 3
                                ie_debito_credito,                                      -- 4
                                cd_historico,                                           -- 5
                                dt_movimento,                                           -- 6
                                vl_movimento,                                           -- 7
                                ds_doc_agrupamento,                                     -- 8
                                nr_seq_agrupamento,                                     -- 9
                                cd_centro_custo,                                        -- 10
                                ds_compl_historico,                                     -- 11
                                nr_seq_trans_fin,                                       -- 12
                                nr_documento,                                           -- 13
                                cd_pessoa_fisica,                                       -- 14
                                cd_cgc,                                                 -- 15
                                cd_estabelecimento,                                     -- 16
                                ie_transitorio,                                         -- 17
                                ie_origem_documento,                                    -- 18
                                nr_seq_tab_orig,                                        -- 19
                                nr_seq_tab_compl,                                       -- 20
                                nm_tabela,                                              -- 21
                                nm_atributo,                                            -- 22
                                nr_seq_info,                                            -- 23
                                nr_seq_regra_tf,                                        -- 24
                                nr_doc_analitico,                                       -- 25
                                nr_seq_classif_movto,                                   -- 26
                                ie_intercompany,                                        -- 27
                                cd_estab_intercompany,                                  -- 28
                                nr_seq_proj_rec                                         -- 29
                            ) values (
                                nr_lote_contabil_p,                                     -- 1
                                nr_sequencia_w,                                         -- 2
                                cd_conta_contabil_w,                                    -- 3
                                ie_debito_credito_w,                                    -- 4
                                cd_historico_w,                                         -- 5
                                dt_transacao_p,                                         -- 6
                                vl_transacao_w,                                         -- 7
                                nr_seq_agrupamento_p,                                   -- 8
                                nr_seq_agrupamento_p,                                   -- 9
                                CASE WHEN ie_centro_custo_w='N' THEN null  ELSE cd_centro_custo_w END ,   -- 10
                                ds_documento_w,                                         -- 11
                                nr_seq_trans_fin_p,                                     -- 12
                                substr(nr_documento_p,1,255),                           -- 13
                                cd_pessoa_fisica_p,                                     -- 14
                                cd_cgc_p,                                               -- 15
                                coalesce(cd_estab_fixo_movto_w,cd_estab_movto_w),            -- 16
                                'N',                                                    -- 17
                                ie_origem_documento_p,                                  -- 18
                                nr_seq_tab_orig_w,                                      -- 19
                                nr_seq_tab_compl_w,                                     -- 20
                                nm_tabela_w,                                            -- 21
                                nm_atributo_w,                                          -- 22
                                nr_seq_info_ctb_w,                                      -- 23
                                nr_seq_regra_tf_w,                                      -- 24
                                nr_doc_analitico_w,                                     -- 25
                                nr_seq_classif_movto_w,                                 -- 26
                                ie_intercompany_w,                                      -- 27
                                cd_estab_intercompany_w,                                -- 28
                                nr_seq_proj_rec_p                                       -- 29
                                );
                        exception
                        when others then
                            ds_erro_w  := sqlerrm(SQLSTATE);
                            CALL wheb_mensagem_pck.exibir_mensagem_abort(174585,
                                'NR_DOCTO=' || nr_documento_p || ';' ||
                                'NR_AGRUP=' || nr_seq_agrupamento_p || ';' ||
                                'VL_TRANS=' || campo_mascara_virgula(vl_transacao_w) || ';' ||
                                'NM_BENEF=' || obter_nome_pf_pj(cd_pessoa_fisica_p, cd_cgc_p) || ';' ||
                                'DS_ERRO=' || substr(ds_erro_w,1,60));
                        end;  -- final - tratamento de excecao
                    end if;
                end;
            end if;
        end if;
    end;
    end;
end loop;
close c010;

if (ie_encontrou_regra_w = 'N') then
    CALL ctb_gravar_log_lote(
        nr_lote_contabil_p,
        9,
        ds_log_w,
        nm_usuario_p,
        nr_documento_p,
        nm_tabela_p,
        nm_atributo_p,
        nr_seq_trans_fin_p,
        vl_transacao_p,
        dt_transacao_p,
        'N');
end if;

nr_seq_w_movimento_p := nr_sequencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_contab_trans_financ ( cd_estabelecimento_p bigint, cd_estab_movto_p bigint, nr_lote_contabil_p bigint, nm_usuario_p text, cd_conta_contabil_p text, cd_centro_custo_p bigint, ds_documento_p text, nr_seq_agrupamento_p bigint, dt_transacao_p timestamp, vl_transacao_p bigint, nr_seq_trans_fin_p bigint, nr_seq_conta_banco_p bigint, nm_atributo_p text, cd_pessoa_fisica_p text, cd_cgc_p text, cd_setor_p bigint, cd_convenio_p bigint, nr_documento_p text, cd_historico_p bigint, ds_atrib_compl_hist_p text, nr_seq_caixa_p bigint, nr_seq_produto_p bigint, nr_seq_caixa_od_p bigint, cd_tributo_p bigint, nr_titulo_pagar_p bigint, nr_seq_bandeira_p bigint, cd_tributo_regra_p bigint, ie_origem_tit_rec_p text, nr_seq_banco_od_p bigint default null, ie_tipo_conta_glosa_p text default null, nr_repasse_terceiro_p bigint DEFAULT NULL, cd_estab_inf_movto_p bigint DEFAULT NULL, cd_tipo_baixa_p bigint default 0, cd_tipo_recebimento_p bigint default 0, nr_seq_w_movimento_p INOUT bigint DEFAULT NULL, nm_tabela_p text default null, nr_titulo_receber_p bigint default null, nr_seq_proj_rec_p bigint default null, ie_origem_documento_p movimento_contabil.ie_origem_documento%type default null, nr_seq_tab_orig_p bigint default null, nr_seq_tab_compl_p bigint default null, nr_seq_info_ctb_p bigint default null, cd_moeda_p bigint default null, nr_doc_analitico_p w_movimento_contabil.nr_doc_analitico%type default null) FROM PUBLIC;

