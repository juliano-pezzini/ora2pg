-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fin_atualiza_cobranca_perda ( nr_seq_perda_p bigint, ie_evento_p text, ie_commit_p text, nm_usuario_p text) AS $body$
DECLARE


/*
ie_evento_p

BP - Baixa por perda
CP - Cancelamento de perda
AS - Alteração de status
RP - Recuperação de perda

*/
cd_estabelecimento_w	smallint;
vl_saldo_w		double precision;
ie_tipo_perda_w		varchar(1);
nr_seq_tipo_baixa_w	bigint;
nr_sequencia_w		bigint;

nr_seq_cobranca_w	bigint;
nr_seq_cheque_w		bigint;
nr_seq_baixa_w		integer;
nr_titulo_w		bigint;
nr_seq_retorno_w	bigint;
nr_seq_ret_item_w	bigint;

nr_seq_hist_cob_w		bigint;
nr_seq_historico_w			bigint;
nr_seq_hist_cob_liq_w		bigint;
nr_seq_hist_cob_canc_w		bigint;
nr_seq_hist_cob_desdob_w		bigint;
nr_seq_hist_cob_pend_w		bigint;
nr_seq_hist_cob_perda_w		bigint;
nr_seq_hist_cob_perda_canc_w	bigint;
nr_seq_hist_cob_perda_baixa_w	bigint;
nr_seq_hist_cob_perda_est_bx_w	bigint;
dt_liquidacao_w		timestamp;
nr_seq_perda_w		bigint;
ie_novo_status_w		varchar(1);
ds_historico_w		varchar(255);
vl_acobrar_w		double precision;

ds_perda_w	varchar(255);

c01 CURSOR FOR
SELECT	nr_sequencia,
	vl_acobrar
from	cobranca
where	nr_seq_cheque = nr_seq_cheque_w

union

select	nr_sequencia,
	vl_acobrar
from	cobranca
where	nr_titulo = nr_titulo_w;

c02 CURSOR FOR
SELECT	a.nr_sequencia,
	a.ie_tipo_perda,
	a.dt_liquidacao
FROM perda_contas_receber a, titulo_receber_liq b
LEFT OUTER JOIN convenio_retorno_item c ON (b.nr_seq_ret_item = c.nr_sequencia)
WHERE a.nr_titulo = b.nr_titulo and a.nr_seq_baixa = b.nr_sequencia  and (coalesce(nr_seq_retorno_w,0) = 0 or coalesce(b.nr_seq_retorno, c.nr_seq_retorno) = nr_seq_retorno_w) and a.nr_titulo = nr_titulo_w and nr_titulo_w > 0

union all

select	a.nr_sequencia,
	a.ie_tipo_perda,
	a.dt_liquidacao
from	perda_contas_receber a
where	a.nr_seq_cheque = nr_seq_cheque_w
and	nr_seq_cheque_w > 0
order by	dt_liquidacao,
	ie_tipo_perda,
	nr_sequencia;


BEGIN
begin
select	nr_titulo,
	nr_seq_cheque,
	cd_estabelecimento,
	nr_seq_baixa
into STRICT	nr_titulo_w,
	nr_seq_cheque_w,
	cd_estabelecimento_w,
	nr_seq_baixa_w
from	perda_contas_receber
where	nr_sequencia = nr_seq_perda_p;
exception
when others then
	cd_estabelecimento_w := null;
end;

begin
select	nr_seq_hist_cob,
	nr_seq_hist_cob_canc,
	nr_seq_hist_cob_desdob,
	nr_seq_hist_cob_pend,
	nr_seq_hist_cob_perda,
	nr_seq_hist_cob_perda_canc,
	nr_seq_hist_cob_perda_baixa,
	nr_seq_hist_cob_perda_est_bx
into STRICT	nr_seq_hist_cob_liq_w,
	nr_seq_hist_cob_canc_w,
	nr_seq_hist_cob_desdob_w,
	nr_seq_hist_cob_pend_w,
	nr_seq_hist_cob_perda_w,
	nr_seq_hist_cob_perda_canc_w,
	nr_seq_hist_cob_perda_baixa_w,
	nr_seq_hist_cob_perda_est_bx_w
from	parametro_contas_receber
where	cd_estabelecimento	= cd_estabelecimento_w;
exception
when no_data_found then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(215576);
end;

open c01;
loop
fetch c01 into
	nr_seq_cobranca_w,
	vl_acobrar_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	CALL atualizar_saldo_cobranca(nr_seq_cobranca_w, nm_usuario_p, 'N');
end loop;
close c01;

if (nr_seq_baixa_w > 0) then
	begin
	select	max(nr_seq_ret_item),
		max(nr_Seq_retorno)
	into STRICT	nr_seq_ret_item_w,
		nr_seq_retorno_w
	from	titulo_receber_liq
	where	nr_titulo = nr_titulo_w
	and	nr_sequencia = nr_seq_baixa_w;

	if (nr_seq_ret_item_w > 0) and (coalesce(nr_seq_retorno_w::text, '') = '') then
		select	max(nr_seq_retorno)
		into STRICT	nr_seq_retorno_w
		from	convenio_retorno_item
		where	nr_sequencia = nr_seq_ret_item_w;
	end if;
	end;
end if;

ds_perda_w := null;

open c02;
loop
fetch c02 into
	nr_seq_perda_w,
	ie_tipo_perda_w,
	dt_liquidacao_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	ds_perda_w	:= substr(ds_perda_w || ', ' || nr_seq_perda_w,1,255);
end loop;
close c02;

ds_perda_w := substr(ds_perda_w,3,255);

select	ie_tipo_perda,
	dt_liquidacao
into STRICT	ie_tipo_perda_w,
	dt_liquidacao_w
from	perda_contas_receber a
where	a.nr_sequencia = nr_seq_perda_p;

select	coalesce(max('C'),ie_tipo_perda_w)
into STRICT	ie_tipo_perda_w
from	perda_contas_receb_baixa a,
	fin_tipo_baixa_perda b
where	a.nr_seq_tipo_baixa = b.nr_sequencia
and	b.ie_tipo_consistencia = '4'
and	a.nr_seq_perda = nr_seq_perda_p;

ie_novo_status_w := 'X';

if (ie_evento_p in ('BP','AS')) then
	begin
	if (ie_tipo_perda_w = 'I') then
		begin
		if (nr_titulo_w > 0) then
			ds_historico_w	:= wheb_mensagem_pck.get_texto(302094);
		else
			ds_historico_w	:= wheb_mensagem_pck.get_texto(302095);
		end if;

		ds_historico_w	:= substr(ds_historico_w || ' ' || wheb_mensagem_pck.get_texto(302099) || ' ' || ds_perda_w,1,255);
		nr_seq_historico_w	:= coalesce(nr_seq_hist_cob_perda_w, nr_seq_hist_cob_liq_w);
		ie_novo_status_w	:= 'E';
		end;
	elsif (ie_tipo_perda_w = 'R') then
		begin
		if (nr_titulo_w > 0) then
			ds_historico_w	:= wheb_mensagem_pck.get_texto(302097);
		else
			ds_historico_w	:= wheb_mensagem_pck.get_texto(302098);
		end if;

		ds_historico_w		:= substr(ds_historico_w || ' ' || wheb_mensagem_pck.get_texto(302099) || ' ' || ds_perda_w,1,255);
		nr_seq_historico_w	:= coalesce(nr_seq_hist_cob_perda_w, nr_seq_hist_cob_liq_w);
		ie_novo_status_w	:= 'R';
		end;
	end if;
	end;
elsif (ie_evento_p = 'CP') then
	begin
	ds_historico_w	:= wheb_mensagem_pck.get_texto(302100);
	ds_historico_w	:= substr(ds_historico_w || ' ' || wheb_mensagem_pck.get_texto(302099) || ' ' || ds_perda_w,1,255);
	nr_seq_historico_w	:= coalesce(nr_seq_hist_cob_perda_canc_w, nr_seq_hist_cob_pend_w);
	ie_novo_status_w	:= 'P';
	end;
elsif (ie_evento_p = 'RP') then
	begin
	ds_historico_w		:= wheb_mensagem_pck.get_texto(302101);
	ds_historico_w		:= substr(ds_historico_w || ' ' || wheb_mensagem_pck.get_texto(302099) || ' ' || ds_perda_w,1,255);
	nr_seq_historico_w	:= nr_seq_hist_cob_liq_w;
	ie_novo_status_w	:= 'E';
	end;
end if;

open c01;
loop
fetch c01 into
	nr_seq_cobranca_w,
	vl_acobrar_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	if (ie_evento_p <> 'RP') or
		(ie_evento_p = 'RP' AND vl_acobrar_w <= 0) then
		begin
		select	max(nr_sequencia)
		into STRICT	nr_sequencia_w
		from	cobranca_historico
		where	lower(ds_historico) like '%'||OBTER_DESC_EXPRESSAO(729628)||'%'
		and	coalesce(nr_seq_retorno,0) = coalesce(nr_seq_retorno_w,0)
		and	nr_seq_historico = nr_seq_historico_w
		and	nr_seq_cobranca = nr_seq_cobranca_w;

		if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
			begin
			update	cobranca_historico
			set	ds_historico = ds_historico_w
			where	nr_sequencia = nr_sequencia_w;
			end;
		end if;

		if (ie_novo_status_w <> 'X') then
			begin
			if (nr_seq_historico_w IS NOT NULL AND nr_seq_historico_w::text <> '') and (coalesce(nr_sequencia_w::text, '') = '') then
				insert into cobranca_historico(
					nr_sequencia,
					nr_seq_cobranca,
					dt_atualizacao,
					nm_usuario,
					nr_seq_historico,
					vl_historico,
					ds_historico,
					dt_historico,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_retorno)
				values (	nextval('cobranca_historico_seq'),
					nr_seq_cobranca_w,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_historico_w,
					null,
					ds_historico_w,
					clock_timestamp(),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_retorno_w);
			end if;

			update	cobranca_orgao
			set	dt_retirada	= clock_timestamp(),
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp()
			where	nr_seq_cobranca	= nr_seq_cobranca_w
			and	coalesce(dt_retirada::text, '') = '';

			update	cobranca
			set	ie_status	= ie_novo_status_w,
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp()
			where	nr_sequencia	= nr_seq_cobranca_w;
			end;
		end if;
		end;
	end if;
	end;
end loop;
close c01;

CALL atualizar_cobranca(nr_titulo_w, nr_seq_cheque_w, 'N', cd_estabelecimento_w, nm_usuario_p);

if (ie_commit_p = 'S') then
	commit;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fin_atualiza_cobranca_perda ( nr_seq_perda_p bigint, ie_evento_p text, ie_commit_p text, nm_usuario_p text) FROM PUBLIC;

