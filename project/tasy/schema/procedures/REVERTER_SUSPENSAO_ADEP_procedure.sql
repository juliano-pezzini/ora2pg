-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE reverter_suspensao_adep ( nr_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ora2pg_rowcount int;
nr_sequencia_w			bigint;
nr_prescricao_w			bigint;
nr_seq_alteracao_w		bigint;
nr_seq_material_w		bigint;
ie_agrupador_w			smallint;
cd_material_w			bigint;
nr_agrupamento_w		double precision;
dt_horario_w			timestamp;
ds_texto_aux_w			varchar(255);
cd_recomendacao_w		varchar(255);
cd_refeicao_w			varchar(15);
nr_seq_rec_w			integer;
nr_seq_dieta_w			bigint;
nr_seq_gas_w			bigint;
ie_acm_sn_w				varchar(1);
nr_seq_nut_pac_w		prescr_material.nr_seq_nut_pac%type;
nr_seq_horario_w		prescr_mat_hor.nr_sequencia%type;
ie_atualizou_w			boolean;

c01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_agrupador,
		a.nr_prescricao,
		a.dt_horario,
		a.cd_material,
		a.nr_agrupamento,
		a.nr_seq_material,
		Obter_informacoes_item_prescr('M',a.nr_prescricao,a.nr_seq_material,a.cd_material,1)
	from	prescr_mat_hor a,
		prescr_medica b
	where	a.nr_prescricao = b.nr_prescricao
	and	b.nr_atendimento = nr_atendimento_p
	and	(a.dt_suspensao IS NOT NULL AND a.dt_suspensao::text <> '')
	and	b.dt_validade_prescr > clock_timestamp()
	and	a.ie_agrupador in (1,2,3,5,7,9,16,17)
	and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	and	obter_se_reverte_alta(b.nr_prescricao,null,a.nr_sequencia,a.ie_agrupador) = 'S'
	and	Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S';

C02 CURSOR FOR
	SELECT	a.nr_seq_solucao,
			a.ie_agrupador,
			a.nr_prescricao,
			a.dt_horario,
			a.cd_material,
			a.nr_agrupamento,
			a.nr_seq_material,
			c.nr_seq_nut_pac,
			a.nr_sequencia
	from	prescr_mat_hor a,
			prescr_material c,
			prescr_medica b
	where	c.nr_prescricao = a.nr_prescricao
	and		c.nr_sequencia = a.nr_seq_material
	and		c.nr_prescricao = b.nr_prescricao
	and		a.nr_prescricao = b.nr_prescricao
	and		b.nr_atendimento = nr_atendimento_p
	and		(a.dt_suspensao IS NOT NULL AND a.dt_suspensao::text <> '')
	and		b.dt_validade_prescr > clock_timestamp()
	and		a.ie_agrupador in (4,11)
	and		(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	and		((a.ie_agrupador = 4 and (exists (	SELECT	1
												from	prescr_solucao_evento x
												where	x.nr_prescricao = a.nr_prescricao
												and		x.nr_seq_solucao = a.nr_seq_solucao
												and		ie_alteracao = 38
												and		ie_tipo_solucao = 1))) or (a.ie_agrupador = 11 and (exists (	select	1
												from	prescr_solucao_evento x
												where	x.nr_prescricao = a.nr_prescricao
												and		x.nr_seq_nut_neo = c.nr_seq_nut_pac
												and		ie_alteracao = 38
												and		ie_tipo_solucao = 6))))
	and		Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S';

C03 CURSOR FOR
	SELECT	a.nr_prescricao,
			a.nr_sequencia,
			a.dt_horario,
			a.cd_recomendacao,
			a.nr_seq_recomendacao
	from	prescr_rec_hor a,
			prescr_medica b
	where	a.nr_prescricao = b.nr_prescricao
	and		b.nr_atendimento = nr_atendimento_p
	and		(a.dt_suspensao IS NOT NULL AND a.dt_suspensao::text <> '')
	and		b.dt_validade_prescr > clock_timestamp()
	and		(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	and (exists (	SELECT	1
						from	prescr_mat_alteracao x
						where	x.nr_prescricao = a.nr_prescricao
						and		x.nr_seq_recomendacao = a.nr_seq_recomendacao
						and		x.ie_tipo_item = 'R'
						and		(nr_seq_recomendacao IS NOT NULL AND nr_seq_recomendacao::text <> '')
						and		x.ie_alteracao = 24))
	and		obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S';

C04 CURSOR FOR
	SELECT	a.nr_prescricao,
			a.nr_sequencia,
			a.dt_horario,
			a.cd_refeicao,
			a.nr_seq_dieta
	from	prescr_dieta_hor a,
			prescr_medica b
	where	a.nr_prescricao = b.nr_prescricao
	and		b.nr_atendimento = nr_atendimento_p
	and		(a.dt_suspensao IS NOT NULL AND a.dt_suspensao::text <> '')
	and		b.dt_validade_prescr > clock_timestamp()
	and		(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	and (exists (	SELECT	1
						from	prescr_mat_alteracao x
						where	x.nr_prescricao = a.nr_prescricao
						and		x.nr_seq_horario_dieta = a.nr_sequencia
						and		ie_tipo_item = 'D'
						and		x.ie_alteracao = 24))
	and		obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S';

C05 CURSOR FOR
	SELECT	a.nr_prescricao,
			a.nr_sequencia,
			a.nr_seq_gasoterapia
	from	prescr_gasoterapia_hor a,
			prescr_medica 			b
	where	a.nr_prescricao = b.nr_prescricao
	and		b.nr_atendimento = nr_atendimento_p
	and		(a.dt_suspensao IS NOT NULL AND a.dt_suspensao::text <> '')
	and		b.dt_validade_prescr > clock_timestamp()
	and		(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	and (exists (	SELECT	1
						from	prescr_gasoterapia_evento x
						where	x.nr_seq_gasoterapia = a.nr_seq_gasoterapia
						and		x.ie_evento = 'AM'))
	and		obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S';

C06 CURSOR FOR /*Suporte Nutricional Enteral e Suplemento oral*/
	SELECT	a.nr_sequencia nr_seq_horario,
			a.nr_prescricao,
			a.dt_horario,
			a.nr_seq_material,
			a.ie_agrupador,
			a.cd_material,
			obter_se_acm_sn(c.ie_se_necessario, c.ie_acm) ie_acm_sn
	from	prescr_mat_hor 	a,
			prescr_medica 	b,
			prescr_material c
	where	c.nr_prescricao = a.nr_prescricao
	and		c.nr_sequencia = a.nr_seq_material
	and		c.nr_prescricao = b.nr_prescricao
	and		coalesce(a.dt_fim_horario::text, '') = ''
	and		(a.dt_suspensao IS NOT NULL AND a.dt_suspensao::text <> '')
	and		a.ie_agrupador in (8,12)
	and		Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S'
	and		b.dt_validade_prescr > clock_timestamp()
	and		(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	and		a.nr_prescricao = b.nr_prescricao
	and		b.nr_atendimento = nr_atendimento_p
	and   	obter_se_reverte_alta(b.nr_prescricao,c.nr_sequencia,a.nr_sequencia,a.ie_agrupador) = 'S';

c07 CURSOR FOR /*Procedimentos em geral (inclui Controle de Glicemia e Hemoterapia)*/
	SELECT	c.nr_sequencia nr_seq_horario,
			a.nr_prescricao,
			x.nr_sequencia nr_seq_procedimento,
			c.dt_horario,
			x.nr_seq_solic_sangue,
			x.nr_seq_prot_glic
	from	prescr_procedimento x,
			prescr_proc_hor 	c,
			prescr_medica 		a	
	where	x.nr_prescricao = c.nr_prescricao
	and		x.nr_sequencia 	= c.nr_seq_procedimento
	and		x.nr_prescricao = a.nr_prescricao
	and		c.nr_prescricao = a.nr_prescricao
	and		a.nr_atendimento = nr_atendimento_p
	and		a.dt_validade_prescr > clock_timestamp()
	and		coalesce(c.dt_fim_horario::text, '') = ''
	and		(c.dt_suspensao IS NOT NULL AND c.dt_suspensao::text <> '')
	and		Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
	and 	obter_se_reverte_alta(a.nr_prescricao,x.nr_sequencia,c.nr_sequencia,null,x.nr_seq_solic_sangue) = 'S';

c08 CURSOR FOR /*NPT Adulta, pedi√°trica e neo*/
	SELECT	b.dt_horario,
			a.nr_prescricao,
			x.nr_sequencia nr_seq_nut_neo,
			coalesce(x.ie_npt_adulta,'S') ie_npt_adulta,
			b.nr_sequencia nr_seq_horario,
			null ie_tipo_solucao
	from	nut_paciente_hor 	b,
			nut_pac 			x,
			prescr_medica 		a	
	where	x.nr_prescricao 		= a.nr_prescricao
	and		b.nr_seq_nut_protocolo	= x.nr_sequencia
	and		a.nr_atendimento 		= nr_atendimento_p
	and		coalesce(b.dt_fim_horario::text, '') = ''
	and		(b.dt_suspensao IS NOT NULL AND b.dt_suspensao::text <> '')
	and		a.dt_validade_prescr > clock_timestamp()
	and     x.ie_status = 'N'
	and 	obter_se_reverte_alta(a.nr_prescricao,x.nr_sequencia,b.nr_sequencia,null,null,coalesce(x.ie_npt_adulta,'S')) = 'S';
	
BEGIN

ds_texto_aux_w	:= wheb_mensagem_pck.get_texto(300591);

open C01;
loop
fetch C01 into
	nr_sequencia_w,
	ie_agrupador_w,
	nr_prescricao_w,
	dt_horario_w,
	cd_material_w,
	nr_agrupamento_w,
	nr_seq_material_w,
	ie_acm_sn_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	update	prescr_mat_hor
	set		dt_suspensao  = NULL
	where	nr_prescricao = nr_prescricao_w
	and		nr_sequencia = nr_sequencia_w;

	if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then
		update	prescr_material
		set		ie_horario_susp	= 'N'
		where	nr_prescricao	= nr_prescricao_w
		and		nr_sequencia	= nr_seq_material_w;
	end if;

	GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;


	if ( ora2pg_rowcount > 0 and ie_agrupador_w not in (3,7,9)) then
		begin
		select	nextval('prescr_mat_alteracao_seq')
		into STRICT	nr_seq_alteracao_w
		;

		insert	into	prescr_mat_alteracao(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_prescricao,
							nr_seq_prescricao,
							nr_seq_horario,
							dt_alteracao,
							cd_pessoa_fisica,
							ie_alteracao,
							ds_justificativa,
							ie_tipo_item,
							dt_horario,
							nr_atendimento,
							cd_item,
							ie_acm_sn
							--nr_agrupamento
							)
						values (
							nr_seq_alteracao_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_prescricao_w,
							nr_seq_material_w,
							nr_sequencia_w,
							clock_timestamp(),
							obter_dados_usuario_opcao(nm_usuario_p,'C'),
							25,
							ds_texto_aux_w,
							CASE WHEN ie_agrupador_w=1 THEN  'M'  ELSE 'MAT' END ,
							dt_horario_w,
							nr_atendimento_p,
							cd_material_w,
							ie_acm_sn_w
							--nr_agrupamento_w
							);
		end;
	end if;


	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	nr_sequencia_w,
	ie_agrupador_w,
	nr_prescricao_w,
	dt_horario_w,
	cd_material_w,
	nr_agrupamento_w,
	nr_seq_material_w,
	nr_seq_nut_pac_w,
	nr_seq_horario_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	if (ie_agrupador_w = 4) then

		update	prescr_mat_hor
		set	dt_suspensao  = NULL
		where	nr_prescricao = nr_prescricao_w
		and	nr_seq_solucao = nr_sequencia_w;

		GET DIAGNOSTICS ie_atualizou_w = ROW_COUNT > 0;

		CALL Atualiza_ie_horario_susp(nr_prescricao_w, nr_sequencia_w, 'PRESCR_SOLUCAO');
	else
		update	prescr_mat_hor
		set		dt_suspensao  = NULL
		where	nr_prescricao = nr_prescricao_w
		and		nr_sequencia = nr_seq_horario_w;

		update	nut_pac
		set 	ie_suspenso = 'N'
		where	nr_prescricao = nr_prescricao_w
		and		nr_sequencia = nr_seq_nut_pac_w;

		GET DIAGNOSTICS ie_atualizou_w = ROW_COUNT > 0;

		CALL Atualiza_ie_horario_susp(nr_prescricao_w, nr_sequencia_w, 'PRESCR_MATERIAL');
	end if;

	if (ie_atualizou_w)  then
		begin
		select	nextval('prescr_solucao_evento_seq')
		into STRICT	nr_seq_alteracao_w
		;

		insert	into	prescr_solucao_evento(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_prescricao,
							nr_seq_solucao,
							nr_seq_material,
							nr_seq_procedimento,
							nr_seq_nut,
							ie_forma_infusao,
							ie_tipo_dosagem,
							qt_dosagem,
							qt_vol_infundido,
							qt_vol_desprezado,
							cd_pessoa_fisica,
							ie_alteracao,
							dt_alteracao,
							ie_evento_valido,
							nr_seq_motivo,
							ds_observacao,
							ie_tipo_solucao,
							nr_seq_esquema,
							nr_etapa_evento,
							nr_seq_assinatura,
							nr_seq_nut_neo,
							dt_horario,
							ds_justificativa
							)
						values (
							nr_seq_alteracao_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_prescricao_w,
							CASE WHEN coalesce(nr_seq_nut_pac_w::text, '') = '' THEN  nr_sequencia_w  ELSE null END ,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							obter_dados_usuario_opcao(nm_usuario_p, 'C'),
							51,
							clock_timestamp(),
							'S',
							null,
							null,
							CASE WHEN coalesce(nr_seq_nut_pac_w::text, '') = '' THEN  1  ELSE 6 END ,
							null,
							null,
							null,
							nr_seq_nut_pac_w,
							dt_horario_w,
							ds_texto_aux_w
							);
		end;
	end if;

	end;
end loop;
close C02;

open C03;
loop
fetch C03 into
	nr_prescricao_w,
	nr_sequencia_w,
	dt_horario_w,
	cd_recomendacao_w,
	nr_seq_rec_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin

	update	prescr_rec_hor
	set		dt_suspensao  = NULL
	where	nr_prescricao = nr_prescricao_w
	and		nr_sequencia = nr_sequencia_w;

	CALL Atualiza_ie_horario_susp(nr_prescricao_w, nr_seq_rec_w, 'PRESCR_RECOMENDACAO');

	update  prescr_recomendacao
	set 	ie_horario_susp	= 'N',
			ie_suspenso		= 'N',
			dt_atualizacao 	= clock_timestamp()
	where 	nr_prescricao = nr_prescricao_w
	and  	nr_sequencia = nr_seq_rec_w;

	select	nextval('prescr_mat_alteracao_seq')
	into STRICT	nr_seq_alteracao_w
	;

	insert	into	prescr_mat_alteracao(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_prescricao,
						nr_seq_prescricao,
						nr_seq_horario,
						dt_alteracao,
						cd_pessoa_fisica,
						ie_alteracao,
						ds_justificativa,
						ie_tipo_item,
						dt_horario,
						nr_atendimento,
						cd_item,
						nr_seq_recomendacao
						)
					values (
						nr_seq_alteracao_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_prescricao_w,
						null,
						null,
						clock_timestamp(),
						obter_dados_usuario_opcao(nm_usuario_p,'C'),
						25,
						ds_texto_aux_w,
						'R',
						dt_horario_w,
						nr_atendimento_p,
						cd_recomendacao_w,
						nr_seq_rec_w
						);
	end;
end loop;
close C03;

open C04;
loop
fetch C04 into
	nr_prescricao_w,
	nr_sequencia_w,
	dt_horario_w,
	cd_refeicao_w,
	nr_seq_dieta_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin

	update	prescr_dieta_hor
	set		dt_suspensao  = NULL
	where	nr_prescricao = nr_prescricao_w
	and		nr_sequencia = nr_sequencia_w;

	CALL Atualiza_ie_horario_susp(nr_prescricao_w, nr_seq_dieta_w, 'PRESCR_DIETA');

	select	nextval('prescr_mat_alteracao_seq')
	into STRICT	nr_seq_alteracao_w
	;

	insert	into	prescr_mat_alteracao(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_prescricao,
						nr_seq_prescricao,
						nr_seq_horario,
						dt_alteracao,
						cd_pessoa_fisica,
						ie_alteracao,
						ds_justificativa,
						ie_tipo_item,
						dt_horario,
						nr_atendimento,
						cd_item,
						nr_seq_horario_dieta
						)
					values (
						nr_seq_alteracao_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_prescricao_w,
						null,
						null,
						clock_timestamp(),
						obter_dados_usuario_opcao(nm_usuario_p,'C'),
						25,
						ds_texto_aux_w,
						'D',
						dt_horario_w,
						nr_atendimento_p,
						cd_refeicao_w,
						nr_sequencia_w
						);
	end;
end loop;
close C04;

open C05;
loop
fetch C05 into
	nr_prescricao_w,
	nr_sequencia_w,
	nr_seq_gas_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
	begin

	update	prescr_gasoterapia_hor
	set		dt_suspensao  = NULL
	where	nr_prescricao = nr_prescricao_w
	and		nr_sequencia = nr_sequencia_w;

	CALL Atualiza_ie_horario_susp(nr_prescricao_w, nr_seq_gas_w, 'PRESCR_GASOTERAPIA');

	update	prescr_gasoterapia
	set		ie_horario_susp	= 'N',
			ie_suspenso		= 'N',
			dt_atualizacao 	= clock_timestamp()
	where	nr_prescricao = nr_prescricao_w
	and		nr_sequencia = nr_seq_gas_w;


	select	nextval('prescr_gasoterapia_evento_seq')
	into STRICT	nr_seq_alteracao_w
	;

	insert	into	prescr_gasoterapia_evento(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_gasoterapia,
						ie_evento,
						dt_evento,
						ie_evento_valido,
						ds_justificativa
						)
					values (
						nr_seq_alteracao_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_gas_w,
						'RA',
						clock_timestamp(),
						'N',
						ds_texto_aux_w
						);
	end;
end loop;
close C05;

for c06_w in c06 loop
	begin

	update	prescr_mat_hor	x
	set		x.dt_suspensao		 = NULL,
			x.nm_usuario_susp 	 = NULL
	where	x.nr_prescricao 	= c06_w.nr_prescricao
	and		x.nr_sequencia 		= c06_w.nr_seq_horario;

	GET DIAGNOSTICS ie_atualizou_w = ROW_COUNT > 0;

	if (c06_w.nr_seq_material IS NOT NULL AND c06_w.nr_seq_material::text <> '') then
		update	prescr_material		x
		set		x.ie_horario_susp	= 'S',
				x.dt_suspensao 		= clock_timestamp(),
				x.nm_usuario_susp 	= nm_usuario_p
		where	x.nr_prescricao		= nr_prescricao_w
		and		x.nr_sequencia		= nr_seq_material_w;
	end if;

	if  (ie_atualizou_w AND c06_w.ie_agrupador = 8) then
		begin

		select	nextval('prescr_solucao_evento_seq')
		into STRICT	nr_seq_alteracao_w
		;

		insert into prescr_solucao_evento(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_prescricao,
							nr_seq_solucao,
							nr_seq_material,
							nr_seq_procedimento,
							nr_seq_nut,
							nr_seq_nut_neo,
							ie_forma_infusao,
							ie_tipo_dosagem,
							qt_dosagem,
							qt_vol_infundido,
							qt_vol_desprezado,
							cd_pessoa_fisica,
							ie_alteracao,
							dt_alteracao,
							ie_evento_valido,
							nr_seq_motivo,
							ie_tipo_solucao,
							ds_justificativa,
							dt_aprazamento,
							dt_horario)
						values (
							nr_seq_alteracao_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							c06_w.nr_prescricao,
							null,
							c06_w.nr_seq_material,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							obter_dados_usuario_opcao(nm_usuario_p, 'C'),
							51,
							clock_timestamp(),
							'S',
							null,
							2,
							ds_texto_aux_w,
							null,
							c06_w.dt_horario);
		end;
	elsif (ie_atualizou_w AND c06_w.ie_agrupador = 12) then
		begin

		select	nextval('prescr_mat_alteracao_seq')
		into STRICT	nr_seq_alteracao_w
		;

		insert	into	prescr_mat_alteracao(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_prescricao,
						nr_seq_prescricao,
						nr_seq_horario,
						dt_alteracao,
						cd_pessoa_fisica,
						ie_alteracao,
						ds_justificativa,
						ie_tipo_item,
						dt_horario,
						nr_atendimento,
						cd_item,
						ie_acm_sn
						)
					values (
						nr_seq_alteracao_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						c06_w.nr_prescricao,
						c06_w.nr_seq_material,
						c06_w.nr_seq_horario,
						clock_timestamp(),
						obter_dados_usuario_opcao(nm_usuario_p,'C'),
						25,
						ds_texto_aux_w,
						'S',
						c06_w.dt_horario,
						nr_atendimento_p,
						c06_w.cd_material,
						c06_w.ie_acm_sn);

		end;
	end if;

	end;
end loop;

for c07_w in c07 loop
	begin
	update	prescr_proc_hor	a
	set		a.dt_suspensao	 = NULL
	where	a.nr_prescricao	= c07_w.nr_prescricao
	and		a.nr_sequencia	= c07_w.nr_seq_horario;
	
	GET DIAGNOSTICS ie_atualizou_w = ROW_COUNT > 0;
	
	if ((c07_w.nr_seq_procedimento IS NOT NULL AND c07_w.nr_seq_procedimento::text <> '') and ie_atualizou_w) then
		update	prescr_procedimento	a
		set		a.ie_suspenso		= 'N'
		where	a.nr_sequencia		= c07_w.nr_seq_procedimento
		and		a.nr_prescricao		= c07_w.nr_prescricao;
	end if;
	
	if (ie_atualizou_w) then
		if (c07_w.nr_seq_solic_sangue IS NOT NULL AND c07_w.nr_seq_solic_sangue::text <> '') then
			insert into prescr_solucao_evento(
									nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_prescricao,
									nr_seq_procedimento,
									cd_pessoa_fisica,
									ie_alteracao,
									dt_alteracao,
									ie_evento_valido,
									ie_tipo_solucao,
									ds_justificativa,
									dt_aprazamento,
									dt_horario)
								values (
									nextval('prescr_solucao_evento_seq'),
									clock_timestamp(),
									nm_usuario_p,
									clock_timestamp(),
									nm_usuario_p,
									c07_w.nr_prescricao,
									c07_w.nr_seq_procedimento,
									obter_dados_usuario_opcao(nm_usuario_p, 'C'),
									51,
									clock_timestamp(),
									'S',
									3,
									ds_texto_aux_w,
									null,
									c07_w.dt_horario);
			else
				insert into prescr_mat_alteracao(
											nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											dt_atualizacao_nrec,
											nm_usuario_nrec,
											nr_prescricao,
											dt_alteracao,
											cd_pessoa_fisica,
											ie_alteracao,
											ds_justificativa,
											nr_seq_procedimento,
											nr_seq_horario_proc,
											dt_horario,
											nr_atendimento,
											nr_seq_prot_glic,
											ds_stack,
											cd_funcao)
										values (	
											nextval('prescr_mat_alteracao_seq'),
											clock_timestamp(),
											nm_usuario_p,
											clock_timestamp(),
											nm_usuario_p,
											c07_w.nr_prescricao,
											clock_timestamp(),
											obter_dados_usuario_opcao(nm_usuario_p, 'C'),
											24,
											ds_texto_aux_w,
											c07_w.nr_seq_procedimento,
											c07_w.nr_seq_horario,
											c07_w.dt_horario,
											nr_atendimento_p,
											c07_w.nr_seq_prot_glic,
											substr(dbms_utility.format_call_stack,1,2000),
											obter_funcao_ativa);
			end if;
	end if;
	
	for c08_w in c08 loop
		begin
		update	nut_paciente_hor	a
		set		a.dt_suspensao		 = NULL,
				a.nm_usuario_susp 	 = NULL,
				a.ie_status			 = NULL
		where	a.nr_sequencia	= c08_w.nr_seq_horario;
		
		GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;

		
		if ( ora2pg_rowcount > 0) then				
			if (c08_w.nr_seq_nut_neo IS NOT NULL AND c08_w.nr_seq_nut_neo::text <> '') then
				update	nut_pac	a
				set		a.ie_suspenso	= 'N',
						a.dt_suspensao	 = NULL,
						a.nm_usuario	= nm_usuario_p,
						a.dt_atualizacao = clock_timestamp()
				where	a.nr_sequencia	= c08_w.nr_seq_nut_neo
				and		a.nr_prescricao	= c08_w.nr_prescricao;
			end if;

			if (c08_w.ie_npt_adulta = 'P') then
				c08_w.ie_tipo_solucao	:= 7;
			elsif (c08_w.ie_npt_adulta = 'N') then
				c08_w.ie_tipo_solucao	:= 5;
			else
				c08_w.ie_tipo_solucao	:= 4;
			end if;
			
			insert into prescr_solucao_evento(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_prescricao,
					cd_pessoa_fisica,
					ie_alteracao,
					dt_alteracao,
					ie_evento_valido,
					ie_tipo_solucao,
					nr_seq_nut_neo,
					ds_justificativa,
					dt_horario,
					cd_funcao,
					ds_stack,
					ie_mostra_adep)
			values (
					nextval('prescr_solucao_evento_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					c08_w.nr_prescricao,
					obter_dados_usuario_opcao(nm_usuario_p, 'C'),
					51,
					clock_timestamp(),
					'S',
					c08_w.ie_tipo_solucao,
					c08_w.nr_seq_nut_neo,
					ds_texto_aux_w,
					c08_w.dt_horario,
					obter_funcao_ativa,
					substr(dbms_utility.format_call_stack,1,2000),
					'S');
		end if;
		end;
	end loop;
	
	end;
end loop;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE reverter_suspensao_adep ( nr_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

