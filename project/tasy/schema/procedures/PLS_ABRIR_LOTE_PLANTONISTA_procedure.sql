-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_abrir_lote_plantonista ( nr_seq_lote_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nm_prestador_pgto_w		varchar(4000);	
cd_medico_exec_ant_w		varchar(4000);						
vl_procedimento_ant_w		double precision;					
nr_seq_prestador_ant_w		bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_conta_w			bigint;
dt_liberacao_w			timestamp	:= null;
vl_procedimento_imp_w		double precision;
vl_glosa_w			double precision;	
					 
C01 CURSOR FOR 
	SELECT	nr_seq_prestador_ant, 
		vl_procedimento_ant, 
		cd_medico_exec_ant, 
		nr_seq_conta_proc 
	from	pls_conta_proc_plant 
	where	nr_seq_lote_plant = nr_seq_lote_p;			
					 

BEGIN 
if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then	 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_prestador_ant_w, 
		vl_procedimento_ant_w, 
		cd_medico_exec_ant_w, 
		nr_seq_conta_proc_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		nm_prestador_pgto_w := substr(pls_obter_dados_prestador(nr_seq_prestador_ant_w, 'N'),1,255);
		begin 
			select	vl_procedimento_imp 
			into STRICT	vl_procedimento_imp_w 
			from	pls_conta_proc 
			where	nr_sequencia = nr_seq_conta_proc_w;
		exception 
		when others then 
			vl_procedimento_imp_w := 0;
		end;
		 
		if (vl_procedimento_imp_w > vl_procedimento_ant_w ) then 
			vl_glosa_w := vl_procedimento_imp_w - vl_procedimento_ant_w;
		else 
			vl_glosa_w := 0;
		end if;
		 
		update	pls_conta_proc 
		set	nr_seq_prestador_pgto 	= nr_seq_prestador_ant_w, 
			vl_liberado		= vl_procedimento_ant_w, 
			vl_unitario		= dividir(vl_procedimento_ant_w,qt_procedimento), 
			vl_glosa		= vl_glosa_w 
		where	nr_sequencia		= nr_seq_conta_proc_w;
		 
		select	max(a.nr_seq_conta) 
		into STRICT	nr_seq_conta_w 
		from	pls_conta_proc a 
		where	a.nr_sequencia = nr_seq_conta_proc_w;
		 
		update	pls_conta_medica_resumo 
		set	nm_prestador_pgto 	= nm_prestador_pgto_w, 
			vl_liberado		= vl_procedimento_ant_w, 
			nr_seq_prestador_pgto 	= nr_seq_prestador_ant_w, 
			cd_pessoa_fisica	= cd_medico_exec_ant_w, 
			vl_glosa		= vl_glosa_w, 
			vl_hm			= vl_procedimento_ant_w 
		where	nr_seq_conta_proc 	= nr_seq_conta_proc_w 
		and	nr_seq_conta		= nr_seq_conta_w 
		and	ie_situacao		= 'A';
 
		delete 	from pls_conta_log 
		where	nr_seq_conta_proc 	= nr_seq_conta_proc_w 
		and	nr_seq_conta		= nr_seq_conta_w;
		 
		end;
	end loop;
	close C01;	
	 
	select	max(dt_liberacao) 
	into STRICT	dt_liberacao_w 
	from	pls_evento_movimento	b, 
		pls_lote_evento 	a 
	where	a.nr_sequencia = b.nr_seq_lote 
	and	(b.nr_seq_lote_pgto IS NOT NULL AND b.nr_seq_lote_pgto::text <> '') 
	and	exists (SELECT 1 
			from	pls_lote_prest_plant x 
			where	x.nr_seq_lote	= nr_seq_lote_p 
			and	x.nr_sequencia 	= b.nr_seq_prest_plant_item);
	 
	if (coalesce(dt_liberacao_w::text, '') = '') then 
		delete 	from pls_evento_movimento a 
		where	exists (SELECT	1 
				from	pls_lote_prest_plant x 
				where	x.nr_seq_lote 	= nr_seq_lote_p 
				and	x.nr_sequencia 	= a.nr_seq_prest_plant_item);
	else 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(195655);
	end if;
	 
	update	pls_lote_plantonista 
	set	dt_fechamento 	 = NULL, 
		nm_usuario	= nm_usuario_p, 
		dt_atualizacao	= clock_timestamp() 
	where	nr_sequencia 	= nr_seq_lote_p;
	 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_abrir_lote_plantonista ( nr_seq_lote_p bigint, nm_usuario_p text) FROM PUBLIC;

