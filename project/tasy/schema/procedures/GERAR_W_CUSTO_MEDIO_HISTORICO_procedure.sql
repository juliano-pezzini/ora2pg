-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_custo_medio_historico ( cd_estabelecimento_p bigint, dt_mesano_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE


--MATERIAL
cd_material_w		material.cd_material%type;

--OPERACAO_ESTOQUE
ie_entrada_saida_w	operacao_estoque.ie_entrada_saida%type;
ie_entrada_saida_ww	operacao_estoque.ie_entrada_saida%type;
ie_tipo_requisicao_w	operacao_estoque.ie_tipo_requisicao%type;
ie_altera_custo_w	operacao_estoque.ie_altera_custo%type;
ie_atualiza_estoque_w	operacao_estoque.ie_atualiza_estoque%type;

--MOVIMENTO_ESTOQUE
dt_movimento_estoque_w	movimento_estoque.dt_movimento_estoque%type;
dt_processo_w		movimento_estoque.dt_processo%type;
nr_movimento_estoque_w	movimento_estoque.nr_movimento_estoque%type;
qt_movimento_w		movimento_estoque.qt_estoque%type;
qt_movimento_ww		movimento_estoque.qt_estoque%type;
qt_estoque_w		movimento_estoque.qt_estoque%type;
cd_acao_w		movimento_estoque.cd_acao%type;
nr_documento_w		movimento_estoque.nr_documento%type;
nr_documento_ww		movimento_estoque.nr_documento%type;
nr_seq_item_docto_w 	movimento_estoque.nr_sequencia_item_docto%type;
nr_seq_item_docto_ww	movimento_estoque.nr_sequencia_item_docto%type;

--MOVIMENTO_ESTOQUE_VALOR
vl_movimento_w		movimento_estoque_valor.vl_movimento%type;
vl_movimento_ww		movimento_estoque_valor.vl_movimento%type;

--SALDO_ESTOQUE
vl_custo_medio_w	saldo_estoque.vl_custo_medio%type;
vl_custo_medio_ww	saldo_estoque.vl_custo_medio%type;
vl_estoque_w		saldo_estoque.vl_estoque%type;

--PARAMETRO_ESTOQUE
ie_metodo_valorizacao_w	parametro_estoque.ie_metodo_valorizacao%type;

c01 CURSOR FOR
	SELECT	distinct
		a.cd_material
	from	saldo_estoque a
	where	a.cd_estabelecimento = cd_estabelecimento_p
	and	a.dt_mesano_referencia = dt_mesano_referencia_p
	order 	by cd_material;

c02 CURSOR FOR
	SELECT	/*+index (a MOVESTO_I13)*/		a.dt_movimento_estoque,
		a.dt_processo,
		a.nr_movimento_estoque,
		coalesce(a.qt_estoque,0),
		b.ie_entrada_saida,
		b.ie_tipo_requisicao,
		b.ie_altera_custo,
		a.cd_acao,
		b.ie_atualiza_estoque,
		a.nr_documento,
		a.nr_sequencia_item_docto
	from	operacao_estoque b,
		movimento_estoque a
	where	a.cd_material_estoque  = cd_material_w
	and	a.cd_estabelecimento   = cd_estabelecimento_p
	and	a.dt_mesano_referencia = dt_mesano_referencia_p
	and	a.cd_operacao_estoque  = b.cd_operacao_estoque
	and	(a.dt_processo IS NOT NULL AND a.dt_processo::text <> '')
	and	coalesce(b.ie_consignado,0) = 0
	order by a.dt_processo, a.nr_movimento_estoque;


BEGIN
ie_metodo_valorizacao_w := sup_obter_metodo_valorizacao(dt_mesano_referencia_p,cd_estabelecimento_p);

if (ie_metodo_valorizacao_w = 'MPM') then
	begin

	open c01;
	loop
	fetch c01 into
		cd_material_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		qt_estoque_w			:= 0;
		vl_estoque_w			:= 0;
		vl_movimento_w			:= 0;
		vl_movimento_ww			:= 0;
		qt_movimento_w			:= 0;
		qt_movimento_ww			:= 0;
		ie_entrada_saida_ww		:= null;
		vl_custo_medio_w		:= null;
		nr_documento_ww			:= null;
		nr_seq_item_docto_ww		:= null;
		vl_custo_medio_w            	:= 0;

		select	coalesce(sum(vl_estoque),0),
			coalesce(sum(qt_estoque),0)
		into STRICT	vl_estoque_w,
			qt_estoque_w
		from	saldo_estoque
		where	cd_estabelecimento	= cd_estabelecimento_p
		and	cd_material		= cd_material_w
		and	dt_mesano_referencia	= PKG_DATE_UTILS.ADD_MONTH(dt_mesano_referencia_p,-1,0);

		if (qt_estoque_w = 0) then
			select	coalesce(max(vl_custo_medio),0)
			into STRICT	vl_custo_medio_w
			from	saldo_estoque
			where	cd_estabelecimento	= cd_estabelecimento_p
			and	cd_material		= cd_material_w
			and	dt_mesano_referencia	= (
				SELECT	max(dt_mesano_referencia)
				from	saldo_estoque
				where	cd_estabelecimento	= cd_estabelecimento_p
				and	cd_material	= cd_material_w
				and	dt_mesano_referencia < PKG_DATE_UTILS.start_of(dt_mesano_referencia_p,'month',0)
				and	vl_custo_medio > 0);
		else
			vl_custo_medio_w := dividir(vl_estoque_w, qt_estoque_w);
		end if;

		open c02;
		loop
		fetch c02 into
			dt_movimento_estoque_w,
			dt_processo_w,
			nr_movimento_estoque_w,
			qt_movimento_w,
			ie_entrada_saida_w,
			ie_tipo_requisicao_w,
			ie_altera_custo_w,
			cd_acao_w,
			ie_atualiza_estoque_w,
			nr_documento_w,
			nr_seq_item_docto_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			vl_custo_medio_ww	:= vl_custo_medio_w;

			if (ie_tipo_requisicao_w in ('2','21')) and (nr_documento_w = nr_documento_ww) and (nr_seq_item_docto_w = nr_seq_item_docto_ww) and (qt_movimento_w = qt_movimento_ww) and (ie_entrada_saida_w <> ie_entrada_saida_ww) then
				begin
				vl_movimento_w := vl_movimento_ww;
				end;
			elsif (ie_altera_custo_w = 'N') then
				begin
				vl_movimento_w := (qt_movimento_w * vl_custo_medio_w);
				end;
			elsif (ie_altera_custo_w = 'Z') then
				begin
				vl_movimento_w := 0;
				end;
			else
				select	coalesce(sum(CASE WHEN b.ie_aumenta_diminui_valor='D' THEN  vl_movimento * -1 WHEN b.ie_aumenta_diminui_valor='A' THEN  vl_movimento WHEN b.ie_aumenta_diminui_valor='N' THEN  0 END ),0)
				into STRICT	vl_movimento_w
				from	tipo_valor b,
					movimento_estoque_valor a
				where	a.cd_tipo_valor		= b.cd_tipo_valor
				and	a.nr_movimento_estoque	= nr_movimento_estoque_w;
			end if;

			nr_documento_ww 		:= nr_documento_w;
			nr_seq_item_docto_ww		:= nr_seq_item_docto_w;
			ie_entrada_saida_ww		:= ie_entrada_saida_w;
			qt_movimento_ww			:= qt_movimento_w;
			vl_movimento_ww			:= vl_movimento_w;

			if (ie_entrada_saida_w = 'S') then
				begin
				qt_movimento_w	:= qt_movimento_w * -1;
				vl_movimento_w	:= vl_movimento_w * -1;
				end;
			end if;

			if (cd_acao_w <> '1') then
				qt_movimento_w	:= qt_movimento_w * -1;
				vl_movimento_w	:= vl_movimento_w * -1;
			end if;

			vl_estoque_w		:= vl_estoque_w + vl_movimento_w;
			qt_estoque_w		:= qt_estoque_w + qt_movimento_w;

			vl_custo_medio_w	:= vl_estoque_w / qt_estoque_w;

			update 	w_razao_estoque
			set	vl_custo_medio_ant = vl_custo_medio_w,
				vl_custo_medio_pos = vl_custo_medio_ww
			where	nr_movimento_estoque = nr_movimento_estoque_w;

			exception
			when others then
				vl_custo_medio_w := vl_custo_medio_w;
			end;
		end loop;
		close c02;

		end;
	end loop;
	close c01;
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_custo_medio_historico ( cd_estabelecimento_p bigint, dt_mesano_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

