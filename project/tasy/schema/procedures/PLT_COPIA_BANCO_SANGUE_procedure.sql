-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE plt_copia_banco_sangue ( nr_prescricao_orig_p bigint, nr_prescricao_p bigint, nr_seq_item_p bigint, nr_seq_regra_p bigint, ie_modificar_p text, nm_usuario_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, ie_estende_inc_p text) AS $body$
DECLARE


nr_sequencia_w				bigint;
nr_seq_bco_w				bigint;
nr_seq_indicacao_w			bigint;
ds_indicacao_adic_w			varchar(255);
ie_grupo_hemocom_w			varchar(3);
ds_diagnostico_w			varchar(256);
qt_transf_anterior_w		smallint;
nr_seq_reacao_w				bigint;
ie_tipo_paciente_w			varchar(2);
ie_porte_cirurgico_w		varchar(2);
ie_tipo_w					bigint;
qt_plaqueta_w				bigint;
qt_hemoglobina_w			double precision;
qt_hematocrito_w			double precision;
qt_tap_w					double precision;
qt_tap_inr_w				double precision;
ds_coagulopatia_w			varchar(80);
ie_trans_anterior_w			varchar(1);
dt_prev_execucao_w			timestamp;
dt_inicio_prescr_w			timestamp;
dt_validade_prescr_w		timestamp;
qt_procedimento_w			double precision;
qt_vol_hemocomp_w			bigint;
cd_procedimento_w			bigint;
ie_origem_proced_w			bigint;
cd_intervalo_w				varchar(7);
ds_horarios_w				varchar(2000);
cd_setor_atendimento_w		integer;
nr_seq_proc_interno_w		bigint;
nr_seq_derivado_w			bigint;
ie_unid_med_hemo_w			varchar(15);
ie_util_hemocomponente_w	varchar(15);
nr_seq_solic_w				bigint;
nr_prescr_estendido_w		bigint;
dt_suspensao_progr_w		timestamp;
nr_seq_evento_w				bigint;
nr_prescricao_original_w	bigint;
nr_seq_anterior_w			bigint;
qt_inconsistencia_w			bigint;
ie_gravidez_w				varchar(1);
ie_tipo_proced_w			varchar(15);
dt_status_w					timestamp;
ie_reserva_w				prescr_solic_bco_sangue.ie_reserva%type;

C01 CURSOR FOR
SELECT	b.nr_seq_indicacao,
		b.ds_indicacao_adic,
		b.ie_grupo_hemocom
from	prescr_sol_bs_indicacao b,
		prescr_solic_bco_sangue a
where	a.nr_sequencia	= nr_seq_solic_w
and		b.nr_seq_solic_bs = a.nr_sequencia
and	exists (	select	1
			from	prescr_solic_bco_sangue x
			where	x.nr_sequencia = nr_seq_bco_w);


BEGIN

select	dt_inicio_prescr,
		dt_validade_prescr,
		cd_setor_atendimento
into STRICT	dt_inicio_prescr_w,
		dt_validade_prescr_w,
		cd_setor_atendimento_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p  LIMIT 1;

CALL PLT_consiste_extensao_item(dt_inicio_prescr_w, dt_validade_prescr_w, nr_prescricao_orig_p, nr_seq_item_p, 'HM', nr_seq_regra_p, nm_usuario_p, cd_perfil_p, cd_estabelecimento_p);

select	count(nr_sequencia)
into STRICT	qt_inconsistencia_w
from	w_copia_plano
where	nr_prescricao	= nr_prescricao_orig_p
and		nr_seq_item	= nr_seq_item_p
and		ie_tipo_item	= 'HM'
and		nm_usuario	= nm_usuario_p
and		((ie_permite	= 'N') or (ie_estende_inc_p = 'N'))  LIMIT 1;

if	((qt_inconsistencia_w	= 0) OR (ie_modificar_p 	= 'S'))  THEN
	begin

	select	coalesce(MAX(nr_sequencia),0)
	into STRICT	nr_seq_solic_w
	from	prescr_solic_bco_sangue
	where	nr_prescricao = nr_prescricao_orig_p;

	select	coalesce(MAX(nr_sequencia),0)
	into STRICT	nr_seq_bco_w
	from	prescr_solic_bco_sangue
	where	nr_prescricao = nr_prescricao_p;

	if (nr_seq_bco_w = 0) THEN

		select	nextval('prescr_solic_bco_sangue_seq'),
			ds_diagnostico,
			qt_transf_anterior,
			nr_seq_reacao,
			ie_tipo_paciente,
			ie_porte_cirurgico,
			ie_tipo,
			qt_plaqueta,
			qt_hemoglobina,
			qt_hematocrito,
			qt_tap,
			qt_tap_inr,
			ds_coagulopatia,
			ie_trans_anterior,
			ie_gravidez,
			ie_reserva
		into STRICT	nr_seq_bco_w,
			ds_diagnostico_w,
			qt_transf_anterior_w,
			nr_seq_reacao_w,
			ie_tipo_paciente_w,
			ie_porte_cirurgico_w,
			ie_tipo_w,
			qt_plaqueta_w,
			qt_hemoglobina_w,
			qt_hematocrito_w,
			qt_tap_w,
			qt_tap_inr_w,
			ds_coagulopatia_w,
			ie_trans_anterior_w,
			ie_gravidez_w,
			ie_reserva_w
		from	prescr_solic_bco_sangue
		where	nr_sequencia	= nr_seq_solic_w;

		insert into prescr_solic_bco_sangue(
			nr_sequencia,
			nr_prescricao,
			dt_atualizacao,
			nm_usuario,
			ds_diagnostico,
			qt_transf_anterior,
			nr_seq_reacao,
			ie_tipo_paciente,
			ie_porte_cirurgico,
			ie_tipo,
			dt_programada,
			qt_plaqueta,
			qt_hemoglobina,
			qt_hematocrito,
			qt_tap,
			qt_tap_inr,
			ds_coagulopatia,
			ie_trans_anterior,
			ie_gravidez,
			ie_reserva)
		values (nr_seq_bco_w,
			nr_prescricao_p,
			clock_timestamp(),
			nm_usuario_p,
			ds_diagnostico_w,
			qt_transf_anterior_w,
			nr_seq_reacao_w,
			ie_tipo_paciente_w,
			ie_porte_cirurgico_w,
			ie_tipo_w,
			null,
			qt_plaqueta_w,
			qt_hemoglobina_w,
			qt_hematocrito_w,
			qt_tap_w,
			qt_tap_inr_w,
			ds_coagulopatia_w,
			ie_trans_anterior_w,
			ie_gravidez_w,
			ie_reserva_w);

		if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

		open C01;
		loop
		fetch C01 into
			nr_seq_indicacao_w,
			ds_indicacao_adic_w,
			ie_grupo_hemocom_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin

			select	nextval('prescr_sol_bs_indicacao_seq')
			into STRICT	nr_sequencia_w
			;

			insert into prescr_sol_bs_indicacao(
					nr_sequencia,
					nr_seq_solic_bs,
					dt_atualizacao,
					nm_usuario,
					nr_seq_indicacao,
					ds_indicacao_adic,
					ie_grupo_hemocom)
				values (nr_sequencia_w,
					nr_seq_bco_w,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_indicacao_w,
					ds_indicacao_adic_w,
					ie_grupo_hemocom_w);
			end;
		end loop;
		close C01;

	end if;

	select	cd_procedimento,
			ie_origem_proced,
			nr_seq_proc_interno,
			qt_procedimento,
			nr_seq_derivado,
			ds_horarios,
			qt_vol_hemocomp,
			cd_intervalo,
			ie_util_hemocomponente,
			ie_unid_med_hemo,
			dt_suspensao_progr,
			coalesce(nr_prescricao_original,nr_prescricao),
			coalesce(nr_seq_anterior,nr_sequencia),
			ie_tipo_proced,
			coalesce(cd_setor_atendimento, cd_setor_atendimento_w),
      dt_status
	into STRICT	cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_proc_interno_w,
			qt_procedimento_w,
			nr_seq_derivado_w,
			ds_horarios_w,
			qt_vol_hemocomp_w,
			cd_intervalo_w,
			ie_util_hemocomponente_w,
			ie_unid_med_hemo_w,
			dt_suspensao_progr_w,
			nr_prescricao_original_w,
			nr_seq_anterior_w,
			ie_tipo_proced_w,
			cd_setor_atendimento_w,
      dt_status_w
	from	prescr_procedimento
	where	nr_sequencia = nr_seq_item_p
	and		nr_prescricao = nr_prescricao_orig_p  LIMIT 1;

	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_sequencia_w
	from	prescr_procedimento
	where	nr_prescricao = nr_prescricao_p;

	select	ie_tipo
	into STRICT	ie_tipo_w
	from	prescr_solic_bco_sangue
	where	nr_sequencia	= nr_seq_bco_w  LIMIT 1;

	if (ie_tipo_w = 4) then
		dt_prev_execucao_w	:= clock_timestamp();
	else
		dt_prev_execucao_w	:= Obter_data_prev_exec(dt_inicio_prescr_w,dt_inicio_prescr_w,0, nr_prescricao_p, 'A');
	end if;

  if (ie_modificar_p	= 'S') then
    if (dt_status_w between dt_inicio_prescr_w and dt_validade_prescr_w) then
	    dt_status_w	:= dt_inicio_prescr_w;
    end if;
  else
    dt_status_w	:= clock_timestamp();
  end if;

	insert into prescr_procedimento(
		nr_prescricao,
		nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		nr_seq_proc_interno,
		qt_procedimento,
		ie_urgencia,
		ie_suspenso,
		dt_prev_execucao,
		ie_status_atend,
		dt_atualizacao,
		nm_usuario,
		ie_origem_inf,
		nr_seq_interno,
		ie_avisar_result,
		cd_motivo_baixa,
		nr_seq_solic_sangue,
		ds_horarios,
		nr_seq_derivado,
		qt_vol_hemocomp,
		cd_intervalo,
		cd_setor_atendimento,
		ie_util_hemocomponente,
		ie_unid_med_hemo,
		ie_status,
		dt_status,
		dt_suspensao_progr,
		nr_prescricao_original,
		nr_seq_anterior,
		ie_tipo_proced)
	values (nr_prescricao_p,
		nr_sequencia_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_proc_interno_w,
		qt_procedimento_w,
		'N',
		'N',
		dt_prev_execucao_w,
		5,
		clock_timestamp(),
		nm_usuario_p,
		'1',
		nextval('prescr_procedimento_seq'),
		'N',
		0,
		nr_seq_bco_w,
		ds_horarios_w,
		nr_seq_derivado_w,
		qt_vol_hemocomp_w,
		cd_intervalo_w,
		cd_setor_atendimento_w,
		ie_util_hemocomponente_w,
		ie_unid_med_hemo_w,
		'P',
		dt_status_w,
		dt_suspensao_progr_w,
		nr_prescricao_original_w,
		nr_seq_anterior_w,
		ie_tipo_proced_w);

	if (ie_modificar_p = 'S') then

		select	nextval('prescr_solucao_evento_seq')
		into STRICT	nr_seq_evento_w
		;

		insert into prescr_solucao_evento(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_prescricao,
							nr_seq_solucao,
							nr_seq_material,
							nr_seq_procedimento,
							nr_seq_nut,
							nr_seq_nut_neo,
							ie_tipo_dosagem,
							qt_dosagem,
							qt_vol_infundido,
							qt_vol_desprezado,
							cd_pessoa_fisica,
							ie_alteracao,
							dt_alteracao,
							ie_evento_valido,
							nr_seq_motivo,
							ds_observacao,
							ds_justificativa,
							ie_tipo_solucao
							)
						values (
							nr_seq_evento_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_prescricao_p,
							null,
							null,
							nr_sequencia_w,
							null,
							null,
							null,
							null,
							null,
							null,
							obter_dados_usuario_opcao(nm_usuario_p, 'C'),
							27,
							clock_timestamp(),
							'S',
							null,
							null,
							'',
							3
							);
	end if;

	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_copia_banco_sangue ( nr_prescricao_orig_p bigint, nr_prescricao_p bigint, nr_seq_item_p bigint, nr_seq_regra_p bigint, ie_modificar_p text, nm_usuario_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, ie_estende_inc_p text) FROM PUBLIC;

