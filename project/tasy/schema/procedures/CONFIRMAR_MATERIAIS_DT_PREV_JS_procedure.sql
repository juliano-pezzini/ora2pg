-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE confirmar_materiais_dt_prev_js ( nr_prescricao_p bigint, ds_lista_material_p text, ie_status_imp_p text, nm_usuario_p text, ie_consistir_altura_peso_p text, ds_lista_seq_prescr_p INOUT text, ds_mensagem_p INOUT text) AS $body$
DECLARE

			
nr_sequencia_w			bigint;	
ds_lista_seq_prescr_w		varchar(1000);	
ie_exige_w			varchar(1) := 'N';
ie_exige_peso_coleta_w 		varchar(1) := 'N';
ds_mensagem_w			varchar(255) := '';
var_exibe_prot_glic		varchar(1) :=  'S';
var_gerar_amostra_coleta 	varchar(1) :=  'S';
ds_lista_material_w		varchar(2000) := '';
cd_material_exame_w		material_exame_lab.cd_material_exame%type;
dt_prev_execucao_w		timestamp;
conteudo_linha_w		varchar(255);

c01 CURSOR FOR
SELECT 	nr_seq_prescr
from 	exame_lab_resultado a,
	material_exame_lab c,
	exame_lab_result_item b,
	prescr_procedimento d
where 	a.nr_seq_resultado = b.nr_seq_resultado
and 	a.nr_prescricao = d.nr_prescricao
and 	d.nr_sequencia = b.nr_seq_prescr
and 	b.nr_seq_material = c.nr_sequencia
and 	c.cd_material_exame = cd_material_exame_w
and	PKG_DATE_UTILS.start_of(d.dt_prev_execucao, 'mi') = dt_prev_execucao_w
and 	d.ie_status_atend = coalesce(ie_status_imp_p, d.ie_status_atend)
and 	a.nr_prescricao = nr_prescricao_p;

c02 CURSOR FOR
SELECT 	nr_sequencia
from 	prescr_procedimento
where 	cd_material_exame = cd_material_exame_w
and 	PKG_DATE_UTILS.start_of(dt_prev_execucao, 'mi') = dt_prev_execucao_w
and 	ie_status_atend = coalesce(ie_status_imp_p, ie_status_atend)
and 	nr_prescricao = nr_prescricao_p;

c03 CURSOR FOR
SELECT 	nr_seq_prescr
from 	exame_lab_resultado a,
	material_exame_lab c,
	exame_lab_result_item b,
	prescr_procedimento d
where 	a.nr_seq_resultado = b.nr_seq_resultado
and 	a.nr_prescricao = d.nr_prescricao
and 	d.nr_sequencia = b.nr_seq_prescr
and 	b.nr_seq_material = c.nr_sequencia
and 	c.cd_material_exame = cd_material_exame_w
and	PKG_DATE_UTILS.start_of(d.dt_prev_execucao, 'mi') = dt_prev_execucao_w
and 	d.ie_status_atend = coalesce(ie_status_imp_p, d.ie_status_atend)
and 	a.nr_prescricao = nr_prescricao_p
and 	coalesce(d.nr_seq_prot_glic::text, '') = ''
and 	not exists (SELECT 1 from proc_interno v where v.nr_sequencia = d.nr_seq_proc_interno and v.ie_ctrl_glic = 'CIG');

c04 CURSOR FOR
SELECT 	nr_sequencia
from 	prescr_procedimento d
where 	cd_material_exame = cd_material_exame_w
and 	PKG_DATE_UTILS.start_of(dt_prev_execucao, 'mi') = dt_prev_execucao_w
and 	ie_status_atend = coalesce(ie_status_imp_p, ie_status_atend)
and 	nr_prescricao = nr_prescricao_p
and 	coalesce(d.nr_seq_prot_glic::text, '') = ''
and 	not exists (SELECT 1 from proc_interno v where v.nr_sequencia = d.nr_seq_proc_interno and v.ie_ctrl_glic = 'CIG');



BEGIN

var_exibe_prot_glic := coalesce(Wheb_assist_pck.obterParametroFuncao(722,228), 'S');

ds_lista_material_w := ds_lista_material_p;

if (var_exibe_prot_glic = 'S') then
	while(ds_lista_material_w IS NOT NULL AND ds_lista_material_w::text <> '') loop
		if (position(',' in ds_lista_material_w) > 0) then
			conteudo_linha_w := substr(ds_lista_material_w, 1, position(',' in ds_lista_material_w)-1);
			ds_lista_material_w := substr(ds_lista_material_w, position(',' in ds_lista_material_w)+1, length(ds_lista_material_w));
		else
			conteudo_linha_w := ds_lista_material_w;
			ds_lista_material_w := '';
		end if;		
		cd_material_exame_w := substr(conteudo_linha_w, 1, position('#@' in conteudo_linha_w)-1);
		dt_prev_execucao_w := PKG_DATE_UTILS.start_of(to_date(substr(conteudo_linha_w, position('#@' in conteudo_linha_w)+2, length(conteudo_linha_w)), 'dd/mm/yyyy hh24:mi'), 'mi');
		open C01;	
		fetch C01 into	
			nr_sequencia_w;
		if C01%found then
			ds_lista_seq_prescr_w := nr_sequencia_w || ',';
			loop
			fetch C01 into	
				nr_sequencia_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin						
				ds_lista_seq_prescr_w := ds_lista_seq_prescr_w || nr_sequencia_w || ',';				
				end;
			end loop;			
			close c01;
		else		
			close c01;
			open C02;
			loop
			fetch C02 into	
				nr_sequencia_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin								
				ds_lista_seq_prescr_w := ds_lista_seq_prescr_w || nr_sequencia_w || ',';			
				end;
			end loop;			
			close C02;
		end if;	
	end loop;
else
	while(ds_lista_material_w IS NOT NULL AND ds_lista_material_w::text <> '') loop
		if (position(',' in ds_lista_material_w) > 0) then
			conteudo_linha_w := substr(ds_lista_material_w, 1, position(',' in ds_lista_material_w)-1);
			ds_lista_material_w := substr(ds_lista_material_w, position(',' in ds_lista_material_w)+1, length(ds_lista_material_w));
		else
			conteudo_linha_w := ds_lista_material_w;
			ds_lista_material_w := '';
		end if;		
		cd_material_exame_w := substr(conteudo_linha_w, 1, position('#@' in conteudo_linha_w)-1);
		dt_prev_execucao_w := PKG_DATE_UTILS.start_of(to_date(substr(conteudo_linha_w, position('#@' in conteudo_linha_w)+2, length(conteudo_linha_w)), 'dd/mm/yyyy hh24:mi'), 'mi');
		open C03;	
		fetch C03 into	
			nr_sequencia_w;
		if C03%found then
			ds_lista_seq_prescr_w := ds_lista_seq_prescr_w || nr_sequencia_w || ',';
			loop
			fetch C03 into	
				nr_sequencia_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin		
				ds_lista_seq_prescr_w := ds_lista_seq_prescr_w || nr_sequencia_w || ',';				
				end;
			end loop;			
			close c03;
		else		
			close c03;
			open C04;
			loop
			fetch C04 into	
				nr_sequencia_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin		
				ds_lista_seq_prescr_w := ds_lista_seq_prescr_w || nr_sequencia_w || ',';			
				end;
			end loop;			
			close C04;
		end if;	
	end loop;
end if;
ds_lista_seq_prescr_w := substr(ds_lista_seq_prescr_w, 1, length(ds_lista_seq_prescr_w)-1);
ds_lista_seq_prescr_p := ds_lista_seq_prescr_w;

select 	coalesce(max(IE_GERA_AMOSTRA_COLETA), 'N')
into STRICT 	var_gerar_amostra_coleta
from	lab_parametro
where	cd_estabelecimento = obter_estabelecimento_ativo;

if (var_gerar_amostra_coleta = 'N') then
	CALL gerar_prescr_proc_seq_lab(nr_prescricao_p, 'C', nm_usuario_p);
end if;

ie_exige_w := lab_obter_se_exige_alt_peso(nr_prescricao_p, ds_lista_seq_prescr_w);
ie_exige_peso_coleta_w := lab_obter_exige_alt_peso_col(nr_prescricao_p,ds_lista_seq_prescr_w);

if (ie_consistir_altura_peso_p = 'S') and
	((ie_exige_w = 'S') or (ie_exige_peso_coleta_w ='S')) then
	ds_mensagem_w := WHEB_MENSAGEM_PCK.get_texto(312008);
	ds_mensagem_p := ds_mensagem_w;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE confirmar_materiais_dt_prev_js ( nr_prescricao_p bigint, ds_lista_material_p text, ie_status_imp_p text, nm_usuario_p text, ie_consistir_altura_peso_p text, ds_lista_seq_prescr_p INOUT text, ds_mensagem_p INOUT text) FROM PUBLIC;

