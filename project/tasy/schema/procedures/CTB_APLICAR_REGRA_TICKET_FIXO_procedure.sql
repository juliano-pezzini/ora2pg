-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_aplicar_regra_ticket_fixo (nr_seq_cenario_p bigint, nr_sequencia_p bigint, cd_centro_custo_p bigint, cd_conta_contabil_p text, nr_seq_metrica_p bigint, dt_mes_inic_p timestamp, dt_mes_fim_p timestamp, ie_sobrepor_p text, nr_seq_grupo_centro_p bigint, nr_seq_grupo_conta_p bigint, vl_fixo_p bigint, cd_empresa_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_centro_custo_w		bigint;
cd_conta_contabil_w		varchar(20);
nr_seq_mes_ref_w			bigint;
nr_seq_metrica_w			bigint;
nr_sequencia_w			bigint;
qt_reg_w				bigint;
vl_ticket_w			double precision	:= vl_fixo_p;

/* Meses contábeis para gerar o ticket */

C01 CURSOR FOR
SELECT	a.nr_sequencia nr_seq_mes_ref
from	ctb_mes_ref a
where	dt_referencia between dt_mes_inic_p and dt_mes_fim_p
and	cd_empresa		= cd_empresa_p;

/* Centros de custo*/

c02 CURSOR FOR
SELECT	cd_centro_custo_p

where	(cd_centro_custo_p IS NOT NULL AND cd_centro_custo_p::text <> '')

union all

select	b.cd_centro_custo
from	ctb_cen_grupo_centro a,
	ctb_cen_centro_grupo b
where	a.nr_sequencia	= b.nr_seq_grupo
and	a.nr_sequencia	= nr_seq_grupo_centro_p
and coalesce(a.cd_estab_exclusivo, cd_estabelecimento_p) = cd_estabelecimento_p
and	coalesce(cd_centro_custo_p::text, '') = ''
and	(nr_seq_grupo_centro_p IS NOT NULL AND nr_seq_grupo_centro_p::text <> '');

/* Métricas do centro de custo
A metrica da regra ou todas as métricas liberadas para o centro de custo no Shift F11
 */
c03 CURSOR FOR
SELECT	nr_seq_metrica_p

where	(nr_seq_metrica_p IS NOT NULL AND nr_seq_metrica_p::text <> '')

union all

select	a.nr_seq_metrica
from	ctb_orc_metrica a
where	a.cd_centro_custo		= cd_centro_custo_w
and	a.cd_estabelecimento	= cd_estabelecimento_p
and	coalesce(nr_seq_metrica_p::text, '') = '';

/* Conta contábil da regra ou do grupo de contas*/

c04 CURSOR FOR
SELECT	cd_conta_contabil_p

where	(cd_conta_contabil_p IS NOT NULL AND cd_conta_contabil_p::text <> '')

union all

select	b.cd_conta_contabil
from	ctb_cen_grupo_conta a,
	ctb_cen_grupo_conta_conta b
where	a.nr_sequencia	= b.nr_seq_grupo
and	a.nr_sequencia	= nr_seq_grupo_conta_p
and coalesce(a.cd_estab_exclusivo, cd_estabelecimento_p) = cd_estabelecimento_p
and	coalesce(cd_conta_contabil_p::text, '') = ''
and	(nr_seq_grupo_conta_p IS NOT NULL AND nr_seq_grupo_conta_p::text <> '');


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_mes_ref_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	open c02;
	loop
	fetch c02 into
		cd_centro_custo_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */

		open C03;
		loop
		fetch C03 into
			nr_seq_metrica_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin

			open C04;
			loop
			fetch C04 into
				cd_conta_contabil_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin
				select	count(*)
				into STRICT	qt_reg_w
				from 	ctb_cen_ticket_medio
				where 	nr_seq_cenario	= nr_seq_cenario_p
				and	nr_seq_mes_ref	= nr_seq_mes_ref_w
				and	nr_seq_metrica	= nr_seq_metrica_w
				and	cd_centro_custo	= cd_centro_custo_w
				and	cd_conta_contabil	= cd_conta_contabil_w;

				if (qt_reg_w = 0)	then
					select	nextval('ctb_cen_ticket_medio_seq')
					into STRICT	nr_sequencia_w
					;
					insert into ctb_cen_ticket_medio(
						nr_sequencia,
						nr_seq_cenario,
						cd_estabelecimento,
						nr_seq_mes_ref,
						dt_atualizacao,
						nm_usuario,
						nr_seq_metrica,
						cd_centro_custo,
						cd_conta_contabil,
						vl_medio,
						vl_original)
					values (nr_sequencia_w,
						nr_seq_cenario_p,
						cd_estabelecimento_p,
						nr_seq_mes_ref_w,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_metrica_w,
						cd_centro_custo_w,
						cd_conta_contabil_w,
					vl_ticket_w,
					vl_ticket_w);
			elsif (ie_sobrepor_p = 'S') then
				update	ctb_cen_ticket_medio
				set	dt_atualizacao	= clock_timestamp(),
					nm_usuario	= nm_usuario_p,
					vl_medio		= vl_ticket_w
				where 	nr_seq_cenario	= nr_seq_cenario_p
				and	nr_seq_mes_ref 	= nr_seq_mes_ref_w
				and	nr_seq_metrica 	= nr_seq_metrica_w
				and	cd_centro_custo 	= cd_centro_custo_w
				and	cd_estabelecimento	= cd_estabelecimento_p
				and	cd_conta_contabil	= cd_conta_contabil_w;
			end if;
			end;
			end loop;
			close C04;
		end;
		end loop;
		close C03;
	end loop;
	close c02;

	end;
end loop;
close C01;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_aplicar_regra_ticket_fixo (nr_seq_cenario_p bigint, nr_sequencia_p bigint, cd_centro_custo_p bigint, cd_conta_contabil_p text, nr_seq_metrica_p bigint, dt_mes_inic_p timestamp, dt_mes_fim_p timestamp, ie_sobrepor_p text, nr_seq_grupo_centro_p bigint, nr_seq_grupo_conta_p bigint, vl_fixo_p bigint, cd_empresa_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

