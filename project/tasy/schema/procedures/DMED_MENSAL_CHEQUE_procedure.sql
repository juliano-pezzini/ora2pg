-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dmed_mensal_cheque ( nr_seq_dmed_mensal_p bigint, cd_estabelecimento_p bigint, dt_referencia_p timestamp, ie_nota_fiscal_p text, ie_conta_paciente_p text, ie_cpf_p text, ie_idade_p text, ie_estrangeiro_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------
Referências:
	GERAR_DMED_MENSAL_PRESTADOR
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_pessoa_responsavel_w		dmed_titulos_mensal.cd_pessoa_titular%type;
cd_pessoa_beneficiario_w	dmed_titulos_mensal.cd_pessoa_beneficiario%type;
nr_documento_w			dmed_titulos_mensal.nr_documento%type;
vl_documento_w			dmed_titulos_mensal.vl_pago%type;
nr_atendimento_w		dmed_titulos_mensal.nr_atendimento%type;
contador_w			bigint;
qt_classe_w			bigint;
dt_documento_w			timestamp;
dt_ref_inicial_w		timestamp;
dt_refer_final_w		timestamp;

c_cheque CURSOR FOR
	SELECT	nr_documento,
		cd_pessoa_responsavel,
		cd_pessoa_beneficiario,
		sum(vl_documento) vl_docto,
		dt_documento,
		nr_atendimento
	from	(SELECT r.nr_titulo nr_documento,
			substr(coalesce(OBTER_PESSOA_TITULO_DATA(r.nr_titulo,l.dt_recebimento,'C'),r.cd_pessoa_fisica),1,10) cd_pessoa_responsavel,
			substr(a.cd_pessoa_fisica,1,10) cd_pessoa_beneficiario,
			c.vl_cheque vl_documento,
			coalesce(l.dt_recebimento,r.dt_emissao) dt_documento,
			a.nr_atendimento
		FROM cheque_cr c, titulo_receber r
LEFT OUTER JOIN atendimento_paciente a ON (r.nr_atendimento = a.nr_atendimento)
LEFT OUTER JOIN titulo_receber_liq l ON (r.nr_titulo = l.nr_titulo)
, pessoa_fisica p
LEFT OUTER JOIN nacionalidade n ON (p.cd_nacionalidade = n.cd_nacionalidade)
WHERE r.cd_pessoa_fisica	= p.cd_pessoa_fisica and r.nr_titulo		= c.nr_titulo and r.cd_estabelecimento	= cd_estabelecimento_p and coalesce(r.ie_pls, 'N')	= 'N' and to_char(coalesce(l.dt_recebimento,r.dt_emissao),'mm/yyyy') = to_char(dt_referencia_p, 'mm/yyyy') and (r.ie_situacao not in ('3','5') or (r.ie_situacao = '5' and
			exists (select	1
				from	titulo_receber_liq k
				where	k.nr_titulo = r.nr_titulo
				and 	vl_recebido > 0
				and 	not exists (select 1 from titulo_receber_liq x where x.nr_titulo = k.nr_titulo and x.nr_seq_liq_origem = k.nr_sequencia  LIMIT 1)))) and exists (select	1
				from	dmed_regra_cheque	w
				where	w.cd_tipo_recebimento	= l.cd_tipo_recebimento) and ((ie_cpf_p = 'AM') or
			((ie_cpf_p = 'SC') and (coalesce(p.nr_cpf::text, '') = '') 	and (pkg_date_utils.add_month(p.dt_nascimento, ie_idade_p * 12,0) <= Fim_Mes(dt_ref_inicial_w))) or
			((ie_cpf_p = 'CC') and (((p.nr_cpf IS NOT NULL AND p.nr_cpf::text <> '') and (pkg_date_utils.add_month(p.dt_nascimento, ie_idade_p * 12,0) <= Fim_Mes(dt_ref_inicial_w))) or (pkg_date_utils.add_month(p.dt_nascimento, ie_idade_p * 12,0) >= Fim_Mes(dt_ref_inicial_w))))) and (((coalesce(n.ie_brasileiro,'S') = 'S') and (ie_estrangeiro_p = '2')) or
			((coalesce(ie_brasileiro,'S') = 'N') and (ie_estrangeiro_p = '1')) or (ie_estrangeiro_p = '3')) and ((coalesce(r.nr_seq_classe::text, '') = '') or (qt_classe_w = 0) or (exists (select 1
				from 	 dmed_regra_classe_tit t
				where	 t.nr_seq_classe = r.nr_seq_classe))) and ((exists (select	1
				from	atend_paciente_unidade d,
					dmed_regra_setor_atend b
				where	d.cd_setor_atendimento	= b.cd_setor_atendimento
				and 	d.nr_atendimento	= a.nr_atendimento)) or (not exists (	select 1
					from 	 dmed_regra_setor_atend LIMIT 1))) ) alias57
	group by
		nr_documento,
		cd_pessoa_responsavel,
		cd_pessoa_beneficiario,
		dt_documento,
		nr_atendimento;


BEGIN
dt_ref_inicial_w	:= pkg_date_utils.start_of(dt_referencia_p, 'MONTH',0);

select	count(1)
into STRICT	qt_classe_w
from	dmed_regra_classe_tit LIMIT 1;

open c_cheque;
loop
fetch c_cheque into
	nr_documento_w,
	cd_pessoa_responsavel_w,
	cd_pessoa_beneficiario_w,
	vl_documento_w,
	dt_documento_w,
	nr_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on c_cheque */
	begin
	contador_w	:= contador_w + 1;

	if (coalesce(cd_pessoa_beneficiario_w::text, '') = '') then
		cd_pessoa_beneficiario_w := cd_pessoa_responsavel_w;
	end if;

	insert into dmed_titulos_mensal(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_dmed_mensal,
		nr_documento,
		ie_tipo_documento,
		cd_pessoa_titular,
		cd_pessoa_beneficiario,
		vl_pago,
		dt_liquidacao,
		ie_prestadora_ops,
		nr_atendimento)
	values (nextval('dmed_titulos_mensal_seq'),
		clock_timestamp(),
		'Tasy2',
		clock_timestamp(),
		'Tasy2',
		nr_seq_dmed_mensal_p,
		nr_documento_w,
		'CH',
		cd_pessoa_responsavel_w,
		cd_pessoa_beneficiario_w,
		vl_documento_w,
		dt_documento_w,
		'P',
		nr_atendimento_w);

	if (mod(contador_w,100) = 0) then
		commit;
	end if;
	end;
end loop;
close c_cheque;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dmed_mensal_cheque ( nr_seq_dmed_mensal_p bigint, cd_estabelecimento_p bigint, dt_referencia_p timestamp, ie_nota_fiscal_p text, ie_conta_paciente_p text, ie_cpf_p text, ie_idade_p text, ie_estrangeiro_p text) FROM PUBLIC;

