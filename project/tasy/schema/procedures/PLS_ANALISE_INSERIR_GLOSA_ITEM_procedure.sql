-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_analise_inserir_glosa_item ( nr_seq_analise_p bigint, nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nr_seq_proc_partic_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_motivo_glosa_p bigint, ie_inativar_glosas_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ie_commit_p text, nr_seq_glosa_conta_p INOUT bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Incluir motivo de glosa ou ocorrência nos itens selecionados da análise (Análise Nova)
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionário [ X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_observacao_w			varchar(4000);
ds_glosa_w			varchar(255);
ds_ocorrencia_w			varchar(255);
cd_ocorrencia_w			varchar(30);
ie_tipo_w			varchar(10);
nr_seq_ocor_benef_w		bigint;
nr_seq_glosa_vinculada_w	bigint;
nr_seq_segurado_w		bigint;
nr_seq_conta_glosa_w		bigint;
nr_seq_ocor_benef_cursor_w	bigint;
nr_seq_conta_glosa_cursor_w	bigint;
ie_tipo_historico_w		integer;
cd_motivo_tiss_w		varchar(10)	:= null;
ie_tipo_item_w			integer;

/* Ocorrências do item, para inativar */

C01 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_ocorrencia_benef a
	where	a.nr_seq_conta_proc	= nr_seq_conta_proc_p
	and	a.ie_situacao		= 'A'
	and	a.nr_sequencia		<> nr_seq_ocor_benef_w
	
union all

	SELECT	a.nr_sequencia
	from	pls_ocorrencia_benef a
	where	a.nr_seq_conta_mat	= nr_seq_conta_mat_p
	and	a.ie_situacao		= 'A'
	and	a.nr_sequencia		<> nr_seq_ocor_benef_w
	
union all

	select	a.nr_sequencia
	from	pls_ocorrencia_benef a
	where	a.nr_seq_proc_partic	= nr_seq_proc_partic_p
	and	a.ie_situacao		= 'A'
	and	a.nr_sequencia		<> nr_seq_ocor_benef_w;


BEGIN
if (nr_seq_analise_p IS NOT NULL AND nr_seq_analise_p::text <> '') and
	((nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') or (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') or (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') or (nr_seq_proc_partic_p IS NOT NULL AND nr_seq_proc_partic_p::text <> '')) then
	begin
	select	nr_seq_segurado
	into STRICT	nr_seq_segurado_w
	from	pls_conta
	where	nr_sequencia	= nr_seq_conta_p;
	exception
		when others then
		nr_seq_segurado_w	:= null;
	end;

	/* Incluir glosa ou ocorrência */

	if (nr_seq_motivo_glosa_p IS NOT NULL AND nr_seq_motivo_glosa_p::text <> '') then
		/*Obter dados da glosa*/

		begin
		select	cd_motivo_tiss,
			'G',
			ds_motivo_tiss
		into STRICT	cd_motivo_tiss_w,
			ie_tipo_w,
			ds_glosa_w
		from	tiss_motivo_glosa
		where	nr_sequencia	= nr_seq_motivo_glosa_p;
		exception
		when others then
			cd_motivo_tiss_w	:= null;
		end;
	
		if (cd_motivo_tiss_w IS NOT NULL AND cd_motivo_tiss_w::text <> '') then
		
			CALL pls_gravar_conta_glosa(	cd_motivo_tiss_w, nr_seq_conta_p, nr_seq_conta_proc_p,
						nr_seq_conta_mat_p, 'S', 'Glosa inserida pelo auditor ' || obter_nome_usuario(nm_usuario_p),
						nm_usuario_p, 'A', 'SCE',
						null, cd_estabelecimento_p, null, nr_seq_proc_partic_p);
	
			select	max(nr_sequencia)
			into STRICT	nr_seq_conta_glosa_w
			from	pls_conta_glosa
			where	((nr_seq_conta_proc 	= nr_seq_conta_proc_p)
			or (nr_seq_conta_mat  	= nr_seq_conta_mat_p)
			or (nr_seq_proc_partic	= nr_seq_proc_partic_p));

			ie_tipo_historico_w	:= 5;

			ds_observacao_w := 'Glosa inserida: ' || cd_motivo_tiss_w|| ' - ' || ds_glosa_w;
		end if;
	elsif (nr_seq_ocorrencia_p IS NOT NULL AND nr_seq_ocorrencia_p::text <> '') then
		--(nr_seq_segurado_w is not null) then
		begin
		select	cd_ocorrencia,
			'O',
			nr_seq_motivo_glosa,
			ds_ocorrencia
		into STRICT	cd_ocorrencia_w,
			ie_tipo_w,
			nr_seq_glosa_vinculada_w,
			ds_ocorrencia_w
		from	pls_ocorrencia
		where	nr_sequencia	= nr_seq_ocorrencia_p;
		exception
		when others then
			cd_ocorrencia_w	:= null;
		end;
		
		if (nr_seq_glosa_vinculada_w IS NOT NULL AND nr_seq_glosa_vinculada_w::text <> '') then
			select	cd_motivo_tiss
			into STRICT	cd_motivo_tiss_w
			from	tiss_motivo_glosa a
			where	a.nr_sequencia	= nr_seq_glosa_vinculada_w;
		end if;

		if (cd_ocorrencia_w IS NOT NULL AND cd_ocorrencia_w::text <> '') then
			if (nr_seq_proc_partic_p IS NOT NULL AND nr_seq_proc_partic_p::text <> '') then
				ie_tipo_item_w	:= 3;
			elsif (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
				ie_tipo_item_w	:= 3;
			elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
				ie_tipo_item_w	:= 4;
			elsif (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then
				ie_tipo_item_w	:= 8;
			end if;
		
			nr_seq_ocor_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_w, nr_seq_ocorrencia_p, null, null, nr_seq_conta_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p, null, nm_usuario_p, 'Ocorrência inserida pelo auditor '||obter_nome_usuario(nm_usuario_p), nr_seq_glosa_vinculada_w, ie_tipo_item_w, cd_estabelecimento_p, 'N', null, nr_seq_ocor_benef_w, null, nr_seq_proc_partic_p, 'S', null);

			ie_tipo_historico_w	:= 6;

			ds_observacao_w	:= '[2] - Ocorrência inserida: ' || cd_ocorrencia_w || ' - ' || ds_ocorrencia_w;
		end if;
	end if;
	
	/* Francisco - 24/09/2012 - OS 498302  - Quando for glosa de conta, carregar para os itens*/

	nr_seq_glosa_conta_p	:= null;
	if (cd_motivo_tiss_w IS NOT NULL AND cd_motivo_tiss_w::text <> '') and (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') and (coalesce(nr_seq_conta_proc_p::text, '') = '') and (coalesce(nr_seq_conta_mat_p::text, '') = '') and (coalesce(nr_seq_proc_partic_p::text, '') = '') then
		/* Procurar o seq para chamar a rotina */

		select	max(a.nr_sequencia)
		into STRICT	nr_seq_conta_glosa_w
		from	tiss_motivo_glosa b,
			pls_conta_glosa a
		where	a.nr_seq_motivo_glosa = b.nr_sequencia
		and	a.nr_seq_conta	= nr_seq_conta_p
		and (a.ie_situacao = 'A' or coalesce(a.ie_situacao::text, '') = '')
		and	b.cd_motivo_tiss	= cd_motivo_tiss_w;
		
		if (nr_seq_conta_glosa_w IS NOT NULL AND nr_seq_conta_glosa_w::text <> '') then
			nr_seq_glosa_conta_p	:= nr_seq_conta_glosa_w;
		end if;
	end if;

	/* Gravar histórico no item, indicando inserção de nova glosa/ocorrência */

	if (ie_tipo_historico_w IS NOT NULL AND ie_tipo_historico_w::text <> '') then
		insert into pls_hist_analise_conta(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_analise,
			nr_seq_conta_proc,
			nr_seq_conta_mat,
			nr_seq_proc_partic,
			ie_tipo_historico,
			ds_observacao,
			ds_call_stack)
		values (nextval('pls_hist_analise_conta_seq'),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_analise_p,
			nr_seq_conta_proc_p,
			nr_seq_conta_mat_p,
			nr_seq_proc_partic_p,
			ie_tipo_historico_w,
			ds_observacao_w,
			substr(dbms_utility.format_call_stack,1,4000));
	end if;
	
	CALL pls_gerar_fluxo_audit_item(nr_seq_analise_p, nr_seq_conta_p, null, null, null, nm_usuario_p);
	
	if (coalesce(ie_commit_p,'S') = 'S') then
		commit;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_analise_inserir_glosa_item ( nr_seq_analise_p bigint, nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nr_seq_proc_partic_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_motivo_glosa_p bigint, ie_inativar_glosas_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ie_commit_p text, nr_seq_glosa_conta_p INOUT bigint) FROM PUBLIC;

