-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sup_consistir_consumo_req ( nr_documento_p bigint, nr_item_p bigint, ie_tipo_documento_p text, nm_usuario_p text) AS $body$
DECLARE

					
/*
ie_tipo_documento_p
RC - Requisicao de consumo
TR - Transferencia entre estabelecimentos
*/
					

ie_existe_regra_w			varchar(1)	:= 'N';
ds_consistencia_w			varchar(255);
qt_maxima_permitida_w		regra_consumo_requisicao.qt_maxima_permitida%type;
ie_periodo_w			regra_consumo_requisicao.ie_periodo%type;
ie_consiste_solicitante_w		regra_consumo_requisicao.ie_consiste_solicitante%type;
ie_consiste_centro_custo_w		regra_consumo_requisicao.ie_consiste_centro_custo%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_centro_custo_w			centro_custo.cd_centro_custo%type;
cd_centro_regra_w			centro_custo.cd_centro_custo%type;
dt_documento_w			requisicao_material.dt_solicitacao_requisicao%type;
cd_pessoa_requisitante_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_pessoa_solicitante_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_material_w			material.cd_material%type;
qt_material_requisitada_w		item_requisicao_material.qt_material_requisitada%type;
qt_consumo_movto_w		item_requisicao_material.qt_material_atendida%type;
qt_consumo_req_w			item_requisicao_material.qt_material_requisitada%type;
qt_consumo_w			item_requisicao_material.qt_material_requisitada%type;
dt_mes_inicio_w			requisicao_material.dt_solicitacao_requisicao%type;
dt_mes_fim_w			requisicao_material.dt_solicitacao_requisicao%type;
dt_inicio_w			requisicao_material.dt_solicitacao_requisicao%type;
dt_fim_w				requisicao_material.dt_solicitacao_requisicao%type;
ie_permite_justificado_w		regra_consumo_requisicao.ie_permite_justificado%type;
ds_justificativa_w			item_requisicao_material.ds_justificativa%type;
nr_seq_justificativa_w		item_requisicao_material.nr_seq_justificativa%type;
qt_acumulado_w			ordem_compra_item.qt_material%type := 0;
cd_operacao_estoque_w		operacao_estoque.cd_operacao_estoque%type;
ie_consumo_w			operacao_estoque.ie_consumo%type;
ie_tipo_requisicao_w	operacao_estoque.ie_tipo_requisicao%type := 1;
qt_total_requisicao_w	item_requisicao_material.qt_material_requisitada%type	:= 0;

ie_controlador_estoque_w  regra_consumo_requisicao.ie_controlador_est%type;
cd_material_controlador_w regra_consumo_requisicao.cd_material%type;
cd_material_auxiliar_w  material.cd_material%type;

c01 CURSOR FOR
SELECT	cd_material,
	qt_material_requisitada,
	ds_justificativa,
	nr_seq_justificativa
from	item_requisicao_material
where	nr_requisicao = nr_documento_p
and	nr_sequencia = coalesce(nr_item_p,nr_sequencia);

c02 CURSOR FOR
SELECT	qt_maxima_permitida,
	coalesce(ie_periodo,'M'),
	ie_consiste_solicitante,
	ie_consiste_centro_custo,
	cd_centro_custo,
	coalesce(trim(both ie_permite_justificado),'N'),
	ie_controlador_est,
	cd_material
from	regra_consumo_requisicao
where	cd_material =  CASE WHEN ie_controlador_est='S' THEN  obter_material_estoque(cd_material_w)  ELSE cd_material_w END
and	cd_estabelecimento = cd_estabelecimento_w
and (coalesce(cd_centro_custo::text, '') = '' or coalesce(cd_centro_custo, cd_centro_custo_w)	= cd_centro_custo_w)
and	coalesce(cd_pessoa_regra, cd_pessoa_requisitante_w) = cd_pessoa_requisitante_w
and	(((ie_tipo_documento_p = 'RC') and (coalesce(ie_requisicao_consumo,'S') = 'S') and (ie_tipo_requisicao_w not in (2,21))) or
	 ((ie_tipo_documento_p = 'TR') and (coalesce(ie_transf_estoque,'N') = 'S')))
order by cd_pessoa_regra desc,
	cd_centro_custo desc;

c03 CURSOR FOR	
SELECT	cd_material,
	obter_quantidade_convertida(cd_material, qt_material, cd_unidade_medida_compra, 'UME')
from	ordem_compra_item
where	nr_ordem_compra = nr_documento_p
and	nr_item_oci = coalesce(nr_item_p,nr_item_oci);


BEGIN

if (ie_tipo_documento_p = 'RC') then
	begin
	
	select	cd_estabelecimento,
		cd_centro_custo,
		dt_solicitacao_requisicao,
		cd_pessoa_requisitante,
		trim(both cd_pessoa_solicitante),
		cd_operacao_estoque
	into STRICT	cd_estabelecimento_w,
		cd_centro_custo_w,
		dt_documento_w,
		cd_pessoa_requisitante_w,
		cd_pessoa_solicitante_w,
		cd_operacao_estoque_w
	from	requisicao_material
	where	nr_requisicao = nr_documento_p;
	
	select	coalesce(ie_consumo,'A'),
			ie_tipo_requisicao
	into STRICT	ie_consumo_w,
			ie_tipo_requisicao_w
	from	operacao_estoque
	where	cd_operacao_estoque = cd_operacao_estoque_w;
	
	open c01;
	loop
	fetch c01 into
		cd_material_w,
		qt_material_requisitada_w,
		ds_justificativa_w,
		nr_seq_justificativa_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		ie_existe_regra_w := 'N';

		open c02;
		loop
		fetch c02 into
			qt_maxima_permitida_w,
			ie_periodo_w,
			ie_consiste_solicitante_w,
			ie_consiste_centro_custo_w,
			cd_centro_regra_w,
			ie_permite_justificado_w,
			ie_controlador_estoque_w,
			cd_material_controlador_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			ie_existe_regra_w := 'S';
			end;
		end loop;
		close c02;		

		if (ie_existe_regra_w = 'S') and
			((ie_permite_justificado_w = 'N') or ((ie_permite_justificado_w = 'S') and (coalesce(ds_justificativa_w,'X') = 'X') and (coalesce(nr_seq_justificativa_w,0) = 0))) then
			begin
			
			if (ie_controlador_estoque_w = 'S') then
				cd_material_auxiliar_w := cd_material_w;
				cd_material_w := cd_material_controlador_w;
			end if;
			
			if (qt_maxima_permitida_w = 0) then
				CALL gravar_consistencia_requisicao(
					nr_documento_p,cd_material_w, '1',
					wheb_mensagem_pck.get_texto(306910),
					'C',wheb_mensagem_pck.get_texto(306911), nm_usuario_p);
			else
				begin
				if (ie_periodo_w in ('M','SM')) then
					begin
					if (ie_periodo_w = 'M') then
						begin
						dt_mes_inicio_w	:= PKG_DATE_UTILS.start_of(dt_documento_w,'mm',0);
						dt_mes_fim_w	:= PKG_DATE_UTILS.start_of(dt_documento_w,'mm',0);
						dt_inicio_w	:= PKG_DATE_UTILS.start_of(dt_documento_w,'mm',0);
						dt_fim_w	:= PKG_DATE_UTILS.END_OF(dt_documento_w, 'MONTH', 0);
						end;
					elsif (ie_periodo_w = 'SM') then
						begin
						dt_mes_inicio_w	:= PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(dt_documento_w,'mm',0),-5,0);
						dt_mes_fim_w	:= PKG_DATE_UTILS.start_of(dt_documento_w,'mm',0);
						dt_inicio_w	:= PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(dt_documento_w,'mm',0),-5,0);
						dt_fim_w	:= PKG_DATE_UTILS.END_OF(dt_documento_w, 'MONTH', 0);
						end;
					end if;

					if (ie_consiste_solicitante_w = 'S') and (cd_pessoa_solicitante_w IS NOT NULL AND cd_pessoa_solicitante_w::text <> '') then
						begin
						select	coalesce(sum(b.qt_material_atendida),0)
						into STRICT	qt_consumo_movto_w
						from	requisicao_material a,
							item_requisicao_material b
						where	a.nr_requisicao	= b.nr_requisicao
						and	obter_tipo_motivo_baixa_req(b.cd_motivo_baixa) in (1,4)
						and	b.cd_material = cd_material_w
						and	a.cd_pessoa_solicitante = cd_pessoa_solicitante_w
						and 	a.cd_centro_custo = coalesce(cd_centro_regra_w, a.cd_centro_custo)
						and	a.dt_solicitacao_requisicao between dt_inicio_w and dt_fim_w;
						
						select	coalesce(sum(CASE WHEN c.ie_consumo='A' THEN b.qt_material_requisitada WHEN c.ie_consumo='D' THEN b.qt_material_requisitada * -1  ELSE 0 END ),0)
						into STRICT	qt_consumo_req_w
						from	requisicao_material a,
							item_requisicao_material b,
							operacao_estoque c
						where	a.nr_requisicao	= b.nr_requisicao
						and	a.cd_operacao_estoque = c.cd_operacao_estoque
						and	coalesce(a.dt_baixa::text, '') = ''
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and	(a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> '')
						and	obter_tipo_motivo_baixa_req(b.cd_motivo_baixa) = 0
						and	coalesce(b.dt_atendimento::text, '') = ''
						and	b.cd_material = cd_material_w
						and	a.cd_pessoa_solicitante = cd_pessoa_solicitante_w
						and 	a.cd_centro_custo = coalesce(cd_centro_regra_w, a.cd_centro_custo)
						and	a.dt_solicitacao_requisicao  between dt_inicio_w and dt_fim_w;
						end;
					elsif (ie_consiste_centro_custo_w = 'S') and (cd_centro_custo_w IS NOT NULL AND cd_centro_custo_w::text <> '') then
						begin
						select	coalesce(sum(CASE WHEN ie_consumo='A' THEN  CASE WHEN cd_acao='1' THEN  qt_movimento  ELSE qt_movimento * -1 END  WHEN ie_consumo='D' THEN  CASE WHEN cd_acao='1' THEN  qt_movimento * -1  ELSE qt_movimento END   ELSE 0 END ),0)
						into STRICT	qt_consumo_movto_w
						from	movimento_estoque_v
						where (cd_material = cd_material_w
						or  ie_controlador_estoque_w = 'S'  and cd_material_estoque = cd_material_w)				
						and 	cd_centro_custo = cd_centro_custo_w
						and	dt_mesano_referencia between dt_mes_inicio_w and dt_mes_fim_w
						and	cd_estabelecimento = cd_estabelecimento_w;
						
						select	coalesce(sum(CASE WHEN c.ie_consumo='A' THEN b.qt_material_requisitada WHEN c.ie_consumo='D' THEN b.qt_material_requisitada * -1  ELSE 0 END ),0)
						into STRICT	qt_consumo_req_w
						from	requisicao_material a,
							item_requisicao_material b,
							operacao_estoque c
						where	a.nr_requisicao	= b.nr_requisicao
						and	a.cd_operacao_estoque = c.cd_operacao_estoque
						and	coalesce(a.dt_baixa::text, '') = ''
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and	(a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> '')
						and	obter_tipo_motivo_baixa_req(b.cd_motivo_baixa) = 0
						and	coalesce(b.dt_atendimento::text, '') = ''
						and	b.cd_material = cd_material_w
						and 	a.cd_centro_custo = cd_centro_custo_w
						and	a.dt_solicitacao_requisicao between dt_inicio_w and dt_fim_w;
						end;
					else
						begin
						
						select	coalesce(sum(CASE WHEN ie_consumo='A' THEN  CASE WHEN cd_acao='1' THEN  qt_movimento  ELSE qt_movimento * -1 END  WHEN ie_consumo='D' THEN  CASE WHEN cd_acao='1' THEN  qt_movimento * -1  ELSE qt_movimento END   ELSE 0 END ),0)
						into STRICT	qt_consumo_movto_w
						from	movimento_estoque_v
						where (cd_material = cd_material_w
						or  ie_controlador_estoque_w = 'S'  and cd_material_estoque = cd_material_w)
						and 	cd_centro_custo = coalesce(cd_centro_regra_w, cd_centro_custo)
						and	dt_mesano_referencia between dt_mes_inicio_w and dt_mes_fim_w
						and	cd_estabelecimento = cd_estabelecimento_w;
						
						select	coalesce(sum(CASE WHEN c.ie_consumo='A' THEN b.qt_material_requisitada WHEN c.ie_consumo='D' THEN b.qt_material_requisitada * -1  ELSE 0 END ),0)
						into STRICT	qt_consumo_req_w
						from	requisicao_material a,
							item_requisicao_material b,
							operacao_estoque c
						where	a.nr_requisicao	= b.nr_requisicao
						and	a.cd_operacao_estoque = c.cd_operacao_estoque
						and	coalesce(a.dt_baixa::text, '') = ''
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and	(a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> '')
						and	obter_tipo_motivo_baixa_req(b.cd_motivo_baixa) = 0
						and	coalesce(b.dt_atendimento::text, '') = ''
						and	b.cd_material = cd_material_w
						and 	a.cd_centro_custo = coalesce(cd_centro_regra_w, a.cd_centro_custo)
						and	a.dt_solicitacao_requisicao  between dt_inicio_w and dt_fim_w;
						end;
					end if;
					end;
				elsif (ie_periodo_w in ('D','S')) then
					begin
					if (ie_periodo_w = 'D') then
						begin
						dt_inicio_w	:= PKG_DATE_UTILS.start_of(dt_documento_w,'dd',0);
						dt_fim_w	:= PKG_DATE_UTILS.start_of(dt_documento_w,'dd',0) + 86399/86400;
						end;
					elsif (ie_periodo_w = 'S') then
						begin
						dt_inicio_w	:= PKG_DATE_UTILS.start_of(to_date(obter_inicio_fim_semana(dt_documento_w,'I')),'dd',0);
						dt_fim_w	:= PKG_DATE_UTILS.start_of(to_date(obter_inicio_fim_semana(dt_documento_w,'F')),'dd',0) + 86399/86400;
						end;
					end if;

					if (ie_consiste_solicitante_w = 'S') and (cd_pessoa_solicitante_w IS NOT NULL AND cd_pessoa_solicitante_w::text <> '') then
						begin
						select	coalesce(sum(b.qt_material_atendida),0)
						into STRICT	qt_consumo_movto_w
						from	requisicao_material a,
							item_requisicao_material b
						where	a.nr_requisicao	= b.nr_requisicao
						and	obter_tipo_motivo_baixa_req(b.cd_motivo_baixa) in (1,4)
						and	b.cd_material = cd_material_w
						and	a.cd_pessoa_solicitante = cd_pessoa_solicitante_w
						and 	a.cd_centro_custo = coalesce(cd_centro_regra_w, a.cd_centro_custo)
						and	a.dt_solicitacao_requisicao between dt_inicio_w and dt_fim_w;

						select	coalesce(sum(CASE WHEN c.ie_consumo='A' THEN b.qt_material_requisitada WHEN c.ie_consumo='D' THEN b.qt_material_requisitada * -1  ELSE 0 END ),0)
						into STRICT	qt_consumo_req_w
						from	requisicao_material a,
							item_requisicao_material b,
							operacao_estoque c
						where	a.nr_requisicao	= b.nr_requisicao
						and	a.cd_operacao_estoque = c.cd_operacao_estoque
						and	coalesce(a.dt_baixa::text, '') = ''
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and	(a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> '')
						and	obter_tipo_motivo_baixa_req(b.cd_motivo_baixa) = 0
						and	coalesce(b.dt_atendimento::text, '') = ''
						and	b.cd_material = cd_material_w
						and	a.cd_pessoa_solicitante = cd_pessoa_solicitante_w
						and 	a.cd_centro_custo = coalesce(cd_centro_regra_w, a.cd_centro_custo)
						and	a.dt_solicitacao_requisicao  between dt_inicio_w and dt_fim_w;
						end;
					elsif (ie_consiste_centro_custo_w = 'S') and (cd_centro_custo_w IS NOT NULL AND cd_centro_custo_w::text <> '') then
						begin
						select	coalesce(sum(CASE WHEN ie_consumo='A' THEN  CASE WHEN cd_acao='1' THEN  qt_movimento  ELSE qt_movimento * -1 END  WHEN ie_consumo='D' THEN  CASE WHEN cd_acao='1' THEN  qt_movimento * -1  ELSE qt_movimento END   ELSE 0 END ),0)
						into STRICT	qt_consumo_movto_w
						from	movimento_estoque_v
						where (cd_material = cd_material_w
						or  ie_controlador_estoque_w = 'S'  and cd_material_estoque = cd_material_w)				
						and 	cd_centro_custo = cd_centro_custo_w
						and	dt_movimento_estoque between dt_inicio_w and dt_fim_w
						and	cd_estabelecimento = cd_estabelecimento_w;

						select	coalesce(sum(CASE WHEN c.ie_consumo='A' THEN b.qt_material_requisitada WHEN c.ie_consumo='D' THEN b.qt_material_requisitada * -1  ELSE 0 END ),0)
						into STRICT	qt_consumo_req_w
						from	requisicao_material a,
							item_requisicao_material b,
							operacao_estoque c
						where	a.nr_requisicao	= b.nr_requisicao
						and	a.cd_operacao_estoque = c.cd_operacao_estoque
						and	coalesce(a.dt_baixa::text, '') = ''
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and	(a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> '')
						and	obter_tipo_motivo_baixa_req(b.cd_motivo_baixa) = 0
						and	coalesce(b.dt_atendimento::text, '') = ''
						and	b.cd_material = cd_material_w
						and 	a.cd_centro_custo = cd_centro_custo_w
						and	a.dt_solicitacao_requisicao  between dt_inicio_w and dt_fim_w;
						end;
					else
						begin
						select	coalesce(sum(CASE WHEN ie_consumo='A' THEN  CASE WHEN cd_acao='1' THEN  qt_movimento  ELSE qt_movimento * -1 END  WHEN ie_consumo='D' THEN  CASE WHEN cd_acao='1' THEN  qt_movimento * -1  ELSE qt_movimento END   ELSE 0 END ),0)
						into STRICT	qt_consumo_movto_w
						from	movimento_estoque_v
						where (cd_material = cd_material_w
						or  ie_controlador_estoque_w = 'S'  and cd_material_estoque = cd_material_w)				
						and 	cd_centro_custo = coalesce(cd_centro_regra_w, cd_centro_custo)
						and	dt_movimento_estoque between dt_inicio_w and dt_fim_w
						and	cd_estabelecimento = cd_estabelecimento_w;

						select	coalesce(sum(CASE WHEN c.ie_consumo='A' THEN b.qt_material_requisitada WHEN c.ie_consumo='D' THEN b.qt_material_requisitada * -1  ELSE 0 END ),0)
						into STRICT	qt_consumo_req_w
						from	requisicao_material a,
							item_requisicao_material b,
							operacao_estoque c
						where	a.nr_requisicao	= b.nr_requisicao
						and	a.cd_operacao_estoque = c.cd_operacao_estoque
						and	coalesce(a.dt_baixa::text, '') = ''
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and	(a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> '')
						and	obter_tipo_motivo_baixa_req(b.cd_motivo_baixa) = 0
						and	coalesce(b.dt_atendimento::text, '') = ''
						and	b.cd_material = cd_material_w
						and 	a.cd_centro_custo = coalesce(cd_centro_regra_w, a.cd_centro_custo)
						and	a.dt_solicitacao_requisicao  between dt_inicio_w and dt_fim_w;
						end;
					end if;
					end;
					else
						begin
							if (ie_consiste_solicitante_w = 'S') and (cd_pessoa_solicitante_w IS NOT NULL AND cd_pessoa_solicitante_w::text <> '') then
							begin							
								select	coalesce(sum(CASE WHEN c.ie_consumo='A' THEN b.qt_material_requisitada WHEN c.ie_consumo='D' THEN b.qt_material_requisitada * -1  ELSE 0 END ),0)
								into STRICT	qt_consumo_req_w
								from	requisicao_material a,
									item_requisicao_material b,
									operacao_estoque c
								where	a.nr_requisicao	= b.nr_requisicao
								and	a.cd_operacao_estoque = c.cd_operacao_estoque
								and	coalesce(a.dt_baixa::text, '') = ''
								and	obter_tipo_motivo_baixa_req(b.cd_motivo_baixa) = 0
								and	coalesce(b.dt_atendimento::text, '') = ''
								and	b.cd_material = cd_material_auxiliar_w
								and	a.cd_pessoa_solicitante = cd_pessoa_solicitante_w
								and a.nr_requisicao = nr_documento_p
								and 	a.cd_centro_custo = coalesce(cd_centro_regra_w, a.cd_centro_custo);
							end;
							elsif (ie_consiste_centro_custo_w = 'S') and (cd_centro_custo_w IS NOT NULL AND cd_centro_custo_w::text <> '') then
							begin
								select	coalesce(sum(CASE WHEN c.ie_consumo='A' THEN b.qt_material_requisitada WHEN c.ie_consumo='D' THEN b.qt_material_requisitada * -1  ELSE 0 END ),0)
								into STRICT	qt_consumo_req_w
								from	requisicao_material a,
									item_requisicao_material b,
									operacao_estoque c
								where	a.nr_requisicao	= b.nr_requisicao
								and	a.cd_operacao_estoque = c.cd_operacao_estoque
								and	coalesce(a.dt_baixa::text, '') = ''
								and	obter_tipo_motivo_baixa_req(b.cd_motivo_baixa) = 0
								and	coalesce(b.dt_atendimento::text, '') = ''
								and	b.cd_material = cd_material_auxiliar_w
								and a.nr_requisicao = nr_documento_p
								and 	a.cd_centro_custo = cd_centro_custo_w;
							end;
							else
							begin								
								select	coalesce(sum(CASE WHEN c.ie_consumo='A' THEN b.qt_material_requisitada WHEN c.ie_consumo='D' THEN b.qt_material_requisitada * -1  ELSE 0 END ),0)
								into STRICT	qt_consumo_req_w
								from	requisicao_material a,
									item_requisicao_material b,
									operacao_estoque c
								where	a.nr_requisicao	= b.nr_requisicao
								and	a.cd_operacao_estoque = c.cd_operacao_estoque
								and	coalesce(a.dt_baixa::text, '') = ''
								and	obter_tipo_motivo_baixa_req(b.cd_motivo_baixa) = 0
								and	coalesce(b.dt_atendimento::text, '') = ''
								and	b.cd_material = cd_material_auxiliar_w
								and a.nr_requisicao = nr_documento_p
								and 	a.cd_centro_custo = coalesce(cd_centro_regra_w, a.cd_centro_custo);
							end;
						end if;
						end;
				end if;
				
				if (ie_consumo_w = 'D') then
					qt_material_requisitada_w := qt_material_requisitada_w * -1;
				end if;			

				if (ie_periodo_w <> 'R') then
					qt_consumo_req_w	:= (qt_consumo_req_w + qt_material_requisitada_w);
					qt_total_requisicao_w	:= (qt_total_requisicao_w + qt_consumo_req_w);
					qt_consumo_w		:= (qt_consumo_movto_w + qt_total_requisicao_w);
				else
					qt_consumo_movto_w		:= 0;
					qt_total_requisicao_w	:= qt_consumo_req_w;
					qt_consumo_w	:= qt_consumo_req_w;
				end if;
				
				if (qt_consumo_w > qt_maxima_permitida_w) then
					begin
					if (ie_periodo_w = 'M') then
						ds_consistencia_w := wheb_mensagem_pck.get_texto(306913);
					elsif (ie_periodo_w = 'D') then
						ds_consistencia_w := wheb_mensagem_pck.get_texto(306914);
					elsif (ie_periodo_w = 'S') then
						ds_consistencia_w := wheb_mensagem_pck.get_texto(306916);
					elsif (ie_periodo_w = 'SM') then
						ds_consistencia_w := wheb_mensagem_pck.get_texto(306917);
					elsif (ie_periodo_w = 'R') then
						ds_consistencia_w := wheb_mensagem_pck.get_texto(1105423);
					end if;
					
					if (ie_permite_justificado_w = 'S') then
						ds_consistencia_w := substr(wheb_mensagem_pck.get_texto(306923,'DS_CONSISTENCIA_W='||ds_consistencia_w),1,255);
					end if;

					CALL gravar_consistencia_requisicao(
						nr_documento_p, cd_material_w,'1',
						ds_consistencia_w,
						'C',
						wheb_mensagem_pck.get_texto(306919,'QT_CONSUMO_MOVTO_W='||qt_consumo_movto_w||
									';QT_CONSUMO_REQ_W='||qt_total_requisicao_w||
									';QT_MAXIMA_PERMITIDA_W='||qt_maxima_permitida_w),
						nm_usuario_p);
					end;
				end if;
				end;
			end if;
			end;
		end if;
		end;
		qt_total_requisicao_w := 0;
	end loop;
	close c01;
	end;
	
elsif (ie_tipo_documento_p = 'TR') then
	
	begin
	select	max(o.cd_estabelecimento),
		max(coalesce(i.cd_centro_custo,o.cd_centro_custo)),
		max(o.dt_ordem_compra),
		max(o.cd_pessoa_solicitante)
	into STRICT	cd_estabelecimento_w,
		cd_centro_custo_w,
		dt_documento_w,
		cd_pessoa_requisitante_w
	from	ordem_compra o,
			ordem_compra_item i
	where	o.nr_ordem_compra = i.nr_ordem_compra
	and	o.nr_ordem_compra = nr_documento_p;

	open c03;
	loop
	fetch c03 into
		cd_material_w,
		qt_material_requisitada_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
		ie_existe_regra_w := 'N';
		
		open c02;
		loop
		fetch c02 into
			qt_maxima_permitida_w,
			ie_periodo_w,
			ie_consiste_solicitante_w,
			ie_consiste_centro_custo_w,
			cd_centro_regra_w,
			ie_permite_justificado_w,
			ie_controlador_estoque_w,
			cd_material_controlador_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			ie_existe_regra_w := 'S';
			end;
		end loop;
		close c02;
			
		if (ie_existe_regra_w = 'S') then
				
			if (ie_controlador_estoque_w = 'S') then
				cd_material_auxiliar_w := cd_material_w;
				cd_material_w := cd_material_controlador_w;
			end if;
			
			begin
			if (qt_maxima_permitida_w = 0) then
				ds_consistencia_w := wheb_mensagem_pck.get_Texto(324880, 'CD_MATERIAL_W='|| cd_material_w);
				CALL gravar_ordem_compra_consist(nr_documento_p, '14', ds_consistencia_w, 'C',  null, nm_usuario_p);
			else
				begin
				if (ie_periodo_w in ('M','SM')) then
					begin
					if (ie_periodo_w = 'M') then
						begin
						dt_mes_inicio_w	:= PKG_DATE_UTILS.start_of(dt_documento_w,'mm',0);
						dt_mes_fim_w	:= PKG_DATE_UTILS.start_of(dt_documento_w,'mm',0);
						dt_inicio_w	:= PKG_DATE_UTILS.start_of(dt_documento_w,'mm',0);
						dt_fim_w	:= PKG_DATE_UTILS.END_OF(dt_documento_w, 'MONTH', 0);
						end;
					elsif (ie_periodo_w = 'SM') then
						begin
						dt_mes_inicio_w	:= PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(dt_documento_w,'mm',0),-5,0);
						dt_mes_fim_w	:= PKG_DATE_UTILS.start_of(dt_documento_w,'mm',0);
						dt_inicio_w	:= PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(dt_documento_w,'mm',0),-5,0);
						dt_fim_w	:= PKG_DATE_UTILS.END_OF(dt_documento_w, 'MONTH', 0);
						end;
					end if;

					if (ie_consiste_solicitante_w = 'S') and (cd_pessoa_requisitante_w IS NOT NULL AND cd_pessoa_requisitante_w::text <> '') then
						begin
						
						select	coalesce(sum(obter_quantidade_convertida(b.cd_material, c.qt_prevista_entrega, b.cd_unidade_medida_compra, 'UME')),0)
						into STRICT	qt_acumulado_w
						from	ordem_compra a,
							ordem_compra_item b,
							ordem_compra_item_entrega c
						where	a.nr_ordem_compra = b.nr_ordem_compra
						and	b.nr_ordem_compra = c.nr_ordem_compra
						and	b.nr_item_oci = c.nr_item_oci
						and	a.cd_estabelecimento = cd_estabelecimento_w
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and	(a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> '')
						and	coalesce(a.nr_seq_motivo_cancel::text, '') = ''
						and	a.cd_pessoa_solicitante = cd_pessoa_requisitante_w
						and (coalesce(b.cd_centro_custo::text, '') = '' or b.cd_centro_custo = coalesce(cd_centro_regra_w, b.cd_centro_custo))
						and	b.cd_material = cd_material_w
						and	PKG_DATE_UTILS.start_of(a.dt_ordem_compra,'dd',0) between PKG_DATE_UTILS.start_of(dt_inicio_w,'dd',0) and PKG_DATE_UTILS.start_of(dt_fim_w,'dd',0)
						and	coalesce(c.dt_cancelamento::text, '') = '';						
						end;
						
					elsif (ie_consiste_centro_custo_w = 'S') and (cd_centro_custo_w IS NOT NULL AND cd_centro_custo_w::text <> '') then
						begin
						
						select	coalesce(sum(obter_quantidade_convertida(b.cd_material, c.qt_prevista_entrega, b.cd_unidade_medida_compra, 'UME')),0)
						into STRICT	qt_acumulado_w
						from	ordem_compra a,
							ordem_compra_item b,
							ordem_compra_item_entrega c
						where	a.nr_ordem_compra = b.nr_ordem_compra
						and	b.nr_ordem_compra = c.nr_ordem_compra
						and	b.nr_item_oci = c.nr_item_oci
						and	a.cd_estabelecimento = cd_estabelecimento_w
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and	(a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> '')
						and	coalesce(a.nr_seq_motivo_cancel::text, '') = ''
						and 	coalesce(b.cd_centro_custo, a.cd_centro_custo) = coalesce(cd_centro_custo_w, b.cd_centro_custo)
						and	b.cd_material = cd_material_w
						and	PKG_DATE_UTILS.start_of(a.dt_ordem_compra,'dd',0) between PKG_DATE_UTILS.start_of(dt_inicio_w,'dd',0) and PKG_DATE_UTILS.start_of(dt_fim_w,'dd',0)
						and	coalesce(c.dt_cancelamento::text, '') = '';						
						end;
						
					else
						begin
						
						select	coalesce(sum(obter_quantidade_convertida(b.cd_material, c.qt_prevista_entrega, b.cd_unidade_medida_compra, 'UME')),0)
						into STRICT	qt_acumulado_w
						from	ordem_compra a,
							ordem_compra_item b,
							ordem_compra_item_entrega c
						where	a.nr_ordem_compra = b.nr_ordem_compra
						and	b.nr_ordem_compra = c.nr_ordem_compra
						and	b.nr_item_oci = c.nr_item_oci
						and	a.cd_estabelecimento = cd_estabelecimento_w
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and	(a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> '')
						and	coalesce(a.nr_seq_motivo_cancel::text, '') = ''
						and	a.cd_pessoa_solicitante = cd_pessoa_requisitante_w
						and (coalesce(b.cd_centro_custo::text, '') = '' or b.cd_centro_custo = coalesce(cd_centro_regra_w, b.cd_centro_custo))
						and	b.cd_material = cd_material_w
						and	PKG_DATE_UTILS.start_of(a.dt_ordem_compra,'dd',0) between PKG_DATE_UTILS.start_of(dt_inicio_w,'dd',0) and PKG_DATE_UTILS.start_of(dt_fim_w,'dd',0)
						and	coalesce(c.dt_cancelamento::text, '') = '';						
						end;
						
					end if;
					end;
				elsif (ie_periodo_w in ('D','S')) then
					begin
					if (ie_periodo_w = 'D') then
						begin
						dt_inicio_w	:= PKG_DATE_UTILS.start_of(dt_documento_w,'dd',0);
						dt_fim_w	:= PKG_DATE_UTILS.start_of(dt_documento_w,'dd',0) + 86399/86400;
						end;
					elsif (ie_periodo_w = 'S') then
						begin
						dt_inicio_w	:= PKG_DATE_UTILS.start_of(to_date(obter_inicio_fim_semana(dt_documento_w,'I')),'dd',0);
						dt_fim_w	:= PKG_DATE_UTILS.start_of(to_date(obter_inicio_fim_semana(dt_documento_w,'F')),'dd',0) + 86399/86400;
						end;
					end if;

					if (ie_consiste_solicitante_w = 'S') and (cd_pessoa_requisitante_w IS NOT NULL AND cd_pessoa_requisitante_w::text <> '') then
						begin
						
						select	coalesce(sum(obter_quantidade_convertida(b.cd_material, c.qt_prevista_entrega, b.cd_unidade_medida_compra, 'UME')),0)
						into STRICT	qt_acumulado_w
						from	ordem_compra a,
							ordem_compra_item b,
							ordem_compra_item_entrega c
						where	a.nr_ordem_compra = b.nr_ordem_compra
						and	b.nr_ordem_compra = c.nr_ordem_compra
						and	b.nr_item_oci = c.nr_item_oci
						and	a.cd_estabelecimento = cd_estabelecimento_w
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and	(a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> '')
						and	coalesce(a.nr_seq_motivo_cancel::text, '') = ''
						and	a.cd_pessoa_solicitante = cd_pessoa_requisitante_w
						and (coalesce(b.cd_centro_custo::text, '') = '' or b.cd_centro_custo = coalesce(cd_centro_regra_w, b.cd_centro_custo))
						and	b.cd_material = cd_material_w
						and	PKG_DATE_UTILS.start_of(a.dt_ordem_compra,'dd',0) between PKG_DATE_UTILS.start_of(dt_inicio_w,'dd',0) and PKG_DATE_UTILS.start_of(dt_fim_w,'dd',0)
						and	coalesce(c.dt_cancelamento::text, '') = '';						
						end;
						
					elsif (ie_consiste_centro_custo_w = 'S') and (cd_centro_custo_w IS NOT NULL AND cd_centro_custo_w::text <> '') then
						begin
						
						select	coalesce(sum(obter_quantidade_convertida(b.cd_material, c.qt_prevista_entrega, b.cd_unidade_medida_compra, 'UME')),0)
						into STRICT	qt_acumulado_w
						from	ordem_compra a,
							ordem_compra_item b,
							ordem_compra_item_entrega c
						where	a.nr_ordem_compra = b.nr_ordem_compra
						and	b.nr_ordem_compra = c.nr_ordem_compra
						and	b.nr_item_oci = c.nr_item_oci
						and	a.cd_estabelecimento = cd_estabelecimento_w
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and	(a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> '')
						and	coalesce(a.nr_seq_motivo_cancel::text, '') = ''
						and 	coalesce(b.cd_centro_custo, a.cd_centro_custo) = coalesce(cd_centro_custo_w, b.cd_centro_custo)
						and	b.cd_material = cd_material_w
						and	PKG_DATE_UTILS.start_of(a.dt_ordem_compra,'dd',0) between PKG_DATE_UTILS.start_of(dt_inicio_w,'dd',0) and PKG_DATE_UTILS.start_of(dt_fim_w,'dd',0)
						and	coalesce(c.dt_cancelamento::text, '') = '';

						end;
					else
						begin
						
						select	coalesce(sum(obter_quantidade_convertida(b.cd_material, c.qt_prevista_entrega, b.cd_unidade_medida_compra, 'UME')),0)
						into STRICT	qt_acumulado_w
						from	ordem_compra a,
							ordem_compra_item b,
							ordem_compra_item_entrega c
						where	a.nr_ordem_compra = b.nr_ordem_compra
						and	b.nr_ordem_compra = c.nr_ordem_compra
						and	b.nr_item_oci = c.nr_item_oci
						and	a.cd_estabelecimento = cd_estabelecimento_w
						and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
						and	(a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> '')
						and	coalesce(a.nr_seq_motivo_cancel::text, '') = ''
						and	coalesce(a.cd_pessoa_solicitante, cd_pessoa_requisitante_w) = cd_pessoa_requisitante_w
						and (coalesce(b.cd_centro_custo::text, '') = '' or b.cd_centro_custo = coalesce(cd_centro_regra_w, b.cd_centro_custo))
						and	b.cd_material = cd_material_w
						and	PKG_DATE_UTILS.start_of(a.dt_ordem_compra,'dd',0) between PKG_DATE_UTILS.start_of(dt_inicio_w,'dd',0) and PKG_DATE_UTILS.start_of(dt_fim_w,'dd',0)
						and	coalesce(c.dt_cancelamento::text, '') = '';
						end;
					end if;
					end;
				else
					begin
					if (ie_consiste_solicitante_w = 'S') and (cd_pessoa_requisitante_w IS NOT NULL AND cd_pessoa_requisitante_w::text <> '') then
						begin
						
						select	coalesce(sum(obter_quantidade_convertida(b.cd_material, c.qt_prevista_entrega, b.cd_unidade_medida_compra, 'UME')),0)
						into STRICT	qt_acumulado_w
						from	ordem_compra a,
							ordem_compra_item b,
							ordem_compra_item_entrega c
						where	a.nr_ordem_compra = b.nr_ordem_compra
						and	b.nr_ordem_compra = c.nr_ordem_compra
						and	b.nr_item_oci = c.nr_item_oci
						and	a.cd_estabelecimento = cd_estabelecimento_w
						and	coalesce(a.nr_seq_motivo_cancel::text, '') = ''
						and	a.cd_pessoa_solicitante = cd_pessoa_requisitante_w
						and  a.nr_ordem_compra = nr_documento_p
						and (coalesce(b.cd_centro_custo::text, '') = '' or b.cd_centro_custo = coalesce(cd_centro_regra_w, b.cd_centro_custo))
						and	b.cd_material = cd_material_auxiliar_w
						and	coalesce(c.dt_cancelamento::text, '') = '';						
						end;
						
					elsif (ie_consiste_centro_custo_w = 'S') and (cd_centro_custo_w IS NOT NULL AND cd_centro_custo_w::text <> '') then
						begin
						
						select	coalesce(sum(obter_quantidade_convertida(b.cd_material, c.qt_prevista_entrega, b.cd_unidade_medida_compra, 'UME')),0)
						into STRICT	qt_acumulado_w
						from	ordem_compra a,
							ordem_compra_item b,
							ordem_compra_item_entrega c
						where	a.nr_ordem_compra = b.nr_ordem_compra
						and	b.nr_ordem_compra = c.nr_ordem_compra
						and	b.nr_item_oci = c.nr_item_oci
						and	a.cd_estabelecimento = cd_estabelecimento_w
						and	coalesce(a.nr_seq_motivo_cancel::text, '') = ''
						and 	coalesce(b.cd_centro_custo, a.cd_centro_custo) = coalesce(cd_centro_custo_w, b.cd_centro_custo)
						and	b.cd_material = cd_material_auxiliar_w
						and a.nr_ordem_compra = nr_documento_p
						and	coalesce(c.dt_cancelamento::text, '') = '';

						end;
					else
						begin
						
						select	coalesce(sum(obter_quantidade_convertida(b.cd_material, c.qt_prevista_entrega, b.cd_unidade_medida_compra, 'UME')),0)
						into STRICT	qt_acumulado_w
						from	ordem_compra a,
							ordem_compra_item b,
							ordem_compra_item_entrega c
						where	a.nr_ordem_compra = b.nr_ordem_compra
						and	b.nr_ordem_compra = c.nr_ordem_compra
						and	b.nr_item_oci = c.nr_item_oci
						and	a.cd_estabelecimento = cd_estabelecimento_w
						and	coalesce(a.nr_seq_motivo_cancel::text, '') = ''
						and	a.cd_pessoa_solicitante = cd_pessoa_requisitante_w
						and (coalesce(b.cd_centro_custo::text, '') = '' or b.cd_centro_custo = coalesce(cd_centro_regra_w, b.cd_centro_custo))
						and 	a.nr_ordem_compra = nr_documento_p
						and	b.cd_material = cd_material_auxiliar_w
						and	coalesce(c.dt_cancelamento::text, '') = '';
						end;
					end if;
					end;
				end if;

				if (ie_periodo_w <> 'R') then
					qt_acumulado_w		:= qt_acumulado_w + qt_material_requisitada_w;
				end if;
				
				if (qt_acumulado_w > qt_maxima_permitida_w) then
					begin
					if (ie_periodo_w = 'M') then
						ds_consistencia_w := wheb_mensagem_pck.get_Texto(324883, 'CD_MATERIAL_W='|| cd_material_w);
					elsif (ie_periodo_w = 'D') then
						ds_consistencia_w := wheb_mensagem_pck.get_Texto(324884, 'CD_MATERIAL_W='|| cd_material_w);
					elsif (ie_periodo_w = 'S') then
						ds_consistencia_w := wheb_mensagem_pck.get_Texto(324885, 'CD_MATERIAL_W='|| cd_material_w);
					elsif (ie_periodo_w = 'SM') then
						ds_consistencia_w := wheb_mensagem_pck.get_Texto(324886, 'CD_MATERIAL_W='|| cd_material_w);
					elsif (ie_periodo_w = 'R') then
						ds_consistencia_w := wheb_mensagem_pck.get_Texto(1105381, 'CD_MATERIAL_W='|| cd_material_w);
					end if;
					
					CALL gravar_ordem_compra_consist(nr_documento_p, '14', ds_consistencia_w, 'C',  null, nm_usuario_p);
					
					end;
				end if;
				end;
			end if;
			end;
		end if;
		end;
	end loop;
	close c03;
	end;
end if;	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_consistir_consumo_req ( nr_documento_p bigint, nr_item_p bigint, ie_tipo_documento_p text, nm_usuario_p text) FROM PUBLIC;

