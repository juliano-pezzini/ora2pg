-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_vini_adep_proc ( nr_atendimento_p bigint, cd_Procedimento_p bigint, ie_atend_pac_p text, nr_prescricao_p bigint, ie_dias_medicamento_p text, nm_usuario_p text, dt_inicio_p timestamp, dt_fim_p timestamp ) AS $body$
DECLARE
	
			 
-- ATEND - Todas do atendimento 
-- PAC - Todos do paciente 
 
qt_dias_w			bigint;
i					bigint;
nr_sequencia_w		bigint;
nr_sequencia_ww		bigint;
dt_execucao_w		timestamp;
dt_execucao_ww		timestamp;
dt_entrada_w		timestamp;
dt_alta_w			timestamp;
nr_atendimento_max_w	bigint;
nr_atendimento_mim_w	bigint;
cd_pessoa_fisica_w	varchar(10);
ie_suspenso_w		varchar(1);
ie_adm_w			varchar(1);
ie_status_w			varchar(1);
ds_comando_sql_w	varchar(500);
ds_sep_bv_w			varchar(50);
ie_tem_medicamento_w	varchar(1);
ie_origem_proced_w		integer;		
 
C01 CURSOR FOR 
SELECT	dt_medicacao, 
	nr_sequencia 
from	Vime_Adep 
where	nm_usuario	= nm_usuario_p;

C02 CURSOR FOR 
SELECT	a.dt_horario, 
	CASE WHEN coalesce(a.dt_suspensao::text, '') = '' THEN  null  ELSE 'S' END , 
	CASE WHEN coalesce(a.dt_fim_horario::text, '') = '' THEN  null  ELSE 'A' END , 
	a.nr_sequencia 
from	prescr_medica b, 
	prescr_procedimento c, 
	prescr_proc_hor a 
where	a.nr_prescricao = b.nr_prescricao 
and	a.nr_prescricao = c.nr_prescricao 
and	a.nr_seq_procedimento	 = c.nr_sequencia 
and a.ie_origem_proced = c.ie_origem_proced 
and a.ie_origem_proced = ie_origem_proced_w 
and a.cd_procedimento	= cd_procedimento_p 
and	(((nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (ie_atend_pac_p = 'ATEND') and (b.nr_atendimento = nr_atendimento_p)) or 
	 ((cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and 
	 ((ie_atend_pac_p = 'PAC') or (coalesce(ie_atend_pac_p::text, '') = '')) and (b.cd_pessoa_fisica = cd_pessoa_fisica_w)) or 
	 ((ie_atend_pac_p = 'PERIOD') and 
	 ((b.cd_pessoa_fisica = cd_pessoa_fisica_w) or (b.nr_atendimento = nr_atendimento_p)))) 
and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') 
and	a.dt_horario between dt_entrada_w and dt_alta_w 
and	(((coalesce(c.ie_acm, 'N') = 'S') and (a.ie_aprazado = 'S')) or (coalesce(c.ie_acm, 'N') = 'N')) 
and	(((coalesce(c.ie_se_necessario, 'N') = 'S') and (a.ie_aprazado = 'S')) or (coalesce(c.ie_se_necessario, 'N') = 'N')) 
and	Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S' 
order by a.dt_suspensao, a.dt_fim_horario;


BEGIN 
select 	max(a.IE_ORIGEM_PROCED) 
into STRICT 	ie_origem_proced_w 
from 	Prescr_procedimento a 
where 	a.cd_procedimento = cd_procedimento_p;
 
select	coalesce(min(cd_pessoa_fisica),'0') 
into STRICT	cd_pessoa_fisica_w 
from	prescr_medica 
where	((nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '' AND nr_prescricao = nr_prescricao_p) or 
	(nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '' AND nr_atendimento = nr_atendimento_p));
 
if (ie_atend_pac_p = 'ATEND') then 
 
	select	coalesce(min(dt_entrada), clock_timestamp()) - 1, 
		coalesce(max(dt_alta),clock_timestamp()) + 1 
	into STRICT	dt_entrada_w, 
		dt_alta_w 
	from 	atendimento_paciente	 
	where	((nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '' AND nr_atendimento = nr_atendimento_p) or 
		((coalesce(nr_atendimento_p::text, '') = '') and (cd_pessoa_fisica = cd_pessoa_fisica_w)));		
elsif (ie_atend_pac_p	= 'PAC') or (coalesce(ie_atend_pac_p::text, '') = '') then 
	select	min(nr_atendimento), 
		max(nr_atendimento) 
	into STRICT	nr_atendimento_mim_w, 
		nr_atendimento_max_w 
	from	atendimento_paciente 
	where	cd_pessoa_fisica = cd_pessoa_fisica_w;
	 
	select	coalesce(max(dt_entrada),clock_timestamp() - interval '1 days') 
	into STRICT	dt_entrada_w 
	from	atendimento_paciente 
	where	nr_atendimento = nr_atendimento_mim_w;
	 
	select	coalesce(max(dt_alta),clock_timestamp() + interval '1 days') 
	into STRICT	dt_alta_w 
	from	atendimento_paciente 
	where	nr_atendimento = nr_atendimento_max_w;	
elsif (ie_atend_pac_p	= 'PERIOD') then 
	dt_entrada_w	:= dt_inicio_p;
	dt_alta_w	:= dt_fim_p;
end if;
 
qt_dias_w		:= obter_dias_entre_datas(dt_entrada_w,dt_alta_w);
if (qt_dias_w	= 0) then 
	qt_dias_w	:= 1;
end if;
dt_alta_w 		:= fim_dia(dt_alta_w);
dt_execucao_w		:= trunc(dt_entrada_w);
ie_tem_medicamento_w	:= 'S';
 
for i in 1..qt_dias_w loop 
	begin 
	 
	if (ie_dias_medicamento_p = 'S') then 
		select	coalesce(max('S'),'N') 
		into STRICT	ie_tem_medicamento_w 
		from	prescr_medica b, 
				prescr_proc_hor a 
		where	a.nr_prescricao = b.nr_prescricao 
		AND 	A.CD_PROCEDIMENTO 	= cd_procedimento_p 
		and 	a.IE_ORIGEM_PROCED	= ie_origem_proced_w 
		and	trunc(a.dt_horario) = trunc(dt_execucao_w) 
		and	b.cd_pessoa_fisica = cd_pessoa_fisica_w 
		and	(((nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (ie_atend_pac_p = 'ATEND') and (b.nr_atendimento = nr_atendimento_p)) or 
			 ((cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and 
			 ((ie_atend_pac_p = 'PAC') or (coalesce(ie_atend_pac_p::text, '') = '')) and (b.cd_pessoa_fisica = cd_pessoa_fisica_w)) or 
			 ((ie_atend_pac_p = 'PERIOD') and 
			 ((b.cd_pessoa_fisica = cd_pessoa_fisica_w) or (b.nr_atendimento = nr_atendimento_p)))) 
		and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') 
		and	Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S';	
	end if;
	 
	if (ie_tem_medicamento_w = 'S') then 
	 
		select	nextval('vime_adep_seq') 
		into STRICT	nr_sequencia_w 
		;
		 
		insert into Vime_Adep( 
			nr_sequencia, 
			nm_usuario, 
			dt_medicacao) 
		values (	nr_sequencia_w, 
			nm_usuario_p, 
			dt_execucao_w);
	end if;
	 
	dt_execucao_w	:= dt_execucao_w + 1;
	end;
end loop;
commit;
 
ds_sep_bv_w	:= obter_separador_bv;
 
open C02;
loop 
fetch C02 into	 
	dt_execucao_ww, 
	ie_suspenso_w, 
	ie_adm_w, 
	nr_sequencia_ww;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
	 
	ds_comando_sql_w := 	' update vime_Adep'|| 
				' set ds_hora_'||to_char(dt_execucao_ww,'hh24')||' = :ie'|| 
				' where dt_medicacao = :dt_medicacao'|| 
				' and nm_usuario = :nm_usuario';				
				 
	if (ie_suspenso_w IS NOT NULL AND ie_suspenso_w::text <> '') then 
		ie_status_w := 'S';
	elsif (ie_adm_w IS NOT NULL AND ie_adm_w::text <> '') then 
		ie_status_w := 'A';
	else 
		ie_status_w := 'P';
	end if;
	begin 
	 
	CALL exec_sql_dinamico_bv('VINI', ds_comando_sql_w,		'ie='||nr_sequencia_ww||';'||ie_status_w||ds_sep_bv_w|| 
								'dt_medicacao='||to_char(dt_execucao_ww, 'dd/mm/yyyy')||ds_sep_bv_w|| 
								'nm_usuario='||nm_usuario_p||ds_sep_bv_w);								
											 
	exception 
	when others then 
		-- Problemas na geração! 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort( 261361 );
	end;
				 
				 
	end;
end loop;
close C02; 	
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_vini_adep_proc ( nr_atendimento_p bigint, cd_Procedimento_p bigint, ie_atend_pac_p text, nr_prescricao_p bigint, ie_dias_medicamento_p text, nm_usuario_p text, dt_inicio_p timestamp, dt_fim_p timestamp ) FROM PUBLIC;

