-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nf_convenio_receb ( nr_seq_receb_p bigint, dt_emissao_p timestamp, dt_base_vencimento_p timestamp, cd_cgc_p text, cd_serie_nf_p text, nr_nota_fiscal_p bigint, cd_nat_oper_nf_p text, cd_operacao_nf_p bigint, cd_condicao_pagamento_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nm_usuario_p text, dt_vigencia_p timestamp) AS $body$
DECLARE

 
cd_estabelecimento_w	bigint;
cd_empresa_w		smallint;
cont_w			bigint;
nr_sequencia_w		bigint;
cd_cgc_emitente_w	varchar(20);
nr_nota_fiscal_w	varchar(255);
nr_sequencia_nf_w	bigint;
cd_conta_contabil_w	varchar(20);
vl_nota_fiscal_w	double precision;
nr_titulo_w		bigint;
nr_nf_w			bigint;
ie_estab_serie_nf_w	parametro_compras.ie_estab_serie_nf%type;

c01 CURSOR FOR 
	SELECT	cd_centro_custo, 
		sum(coalesce(vl_amaior,0)) 
	from ( 
	SELECT	c.cd_centro_custo cd_centro_custo, 
		sum(vl_amaior) vl_amaior 
	from	setor_atendimento c, 
		procedimento_paciente b, 
		convenio_retorno_item d, 
		convenio_retorno_glosa a 
	where	a.nr_seq_ret_item		= d.nr_sequencia 
	and	d.nr_seq_retorno		= nr_seq_receb_p 
	and	a.nr_seq_propaci		= b.nr_sequencia 
	and	b.cd_setor_atendimento	= c.cd_setor_atendimento 
	group	by c.cd_centro_custo 
	
union 	all
 
	select	c.cd_centro_custo, 
		sum(vl_amaior) vl_amaior 
	from	setor_atendimento c, 
		material_atend_paciente b, 
		convenio_retorno_item d, 
		convenio_retorno_glosa a 
	where	a.nr_seq_ret_item		= d.nr_sequencia 
	and	d.nr_seq_retorno		= nr_seq_receb_p 
	and	a.nr_seq_matpaci		= b.nr_sequencia 
	and	b.cd_setor_atendimento	= c.cd_setor_atendimento 
	group	by c.cd_centro_custo 
	
union	all
 
	select	b.cd_centro_custo, 
		sum(vl_amaior) vl_amaior 
	FROM convenio_retorno_item d, convenio_retorno_glosa a
LEFT OUTER JOIN setor_atendimento b ON (a.cd_setor_atendimento = b.cd_setor_atendimento)
WHERE a.nr_seq_ret_item		= d.nr_sequencia  and d.nr_seq_retorno		= nr_seq_receb_p and coalesce(a.nr_seq_propaci::text, '') = '' and coalesce(a.nr_seq_matpaci::text, '') = '' 
	group	by b.cd_centro_custo ) alias7 
	group	by cd_centro_custo;


BEGIN 
 
if (coalesce(cd_procedimento_p, 0) = 0) then 
	--r.aise_application_error(-20011, 'Para gerar a nota fiscal é necessário ter o procedimento informado!'); 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(219154);
end if;
 
select 	max(nr_sequencia) 
		into STRICT nr_nf_w 
 from	convenio_receb_nf		 
where 	nr_seq_receb = nr_seq_receb_p;		
 
if (coalesce(nr_nf_w, 0) <> 0) then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(335831);
end if;
 
select	cd_estabelecimento, 
		vl_recebimento 
into STRICT	cd_estabelecimento_w, 
		vl_nota_fiscal_w 
from	convenio_receb 
where	nr_sequencia		= nr_seq_receb_p;
 
select	max(cd_empresa) 
into STRICT	cd_empresa_w 
from	estabelecimento 
where	cd_estabelecimento = cd_estabelecimento_w;
 
select	coalesce(cd_conta_contabil_w,max(cd_conta_receita)) 
into STRICT	cd_conta_contabil_w 
from	parametros_conta_contabil 
where	cd_procedimento		= cd_procedimento_p 
and	cd_empresa		= cd_empresa_w 
and	coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w;
 
select	count(*) 
into STRICT 	cont_w 
from	serie_nota_fiscal 
where	cd_serie_nf 			= cd_serie_nf_p 
and 	cd_estabelecimento 		= cd_estabelecimento_w;
 
if (cont_w = 0) then 
	--r.aise_application_error(-20011, 'A série informada não está cadastrada!'); 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(219156);
end if;
 
if (coalesce(cd_serie_nf_p::text, '') = '') or (coalesce(cd_operacao_nf_p::text, '') = '') or (coalesce(cd_condicao_pagamento_p::text, '') = '') or (coalesce(dt_emissao_p::text, '') = '') then 
	--r.aise_application_error(-20001,'O campos série, data, operação e condição de pagamento devem ser informados!'); 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(219157);
end if;
 
if (coalesce(cd_cgc_p::text, '') = '') then 
	--r.aise_application_error(-20001,'O CNPJ deve ser informado!'); 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(219158);
end if;
 
select	nextval('nota_fiscal_seq') 
into STRICT	nr_sequencia_w
;
 
select	cd_cgc 
into STRICT	cd_cgc_emitente_w 
from	estabelecimento 
where	cd_estabelecimento = cd_estabelecimento_w;
 
nr_nota_fiscal_w		:= nr_sequencia_w + 800000;
nr_sequencia_nf_w		:= 9;
 
insert into Nota_fiscal(NR_SEQUENCIA, 
	CD_ESTABELECIMENTO, 
	CD_CGC_EMITENTE, 
	CD_SERIE_NF, 
	NR_NOTA_FISCAL, 
	NR_SEQUENCIA_NF, 
	CD_OPERACAO_NF, 
	DT_EMISSAO, 
	DT_ENTRADA_SAIDA, 
	IE_ACAO_NF, 
	IE_EMISSAO_NF, 
	IE_TIPO_FRETE, 
	VL_MERCADORIA, 
	VL_TOTAL_NOTA, 
	QT_PESO_BRUTO, 
	QT_PESO_LIQUIDO, 
	DT_ATUALIZACAO, 
	NM_USUARIO, 
	CD_CONDICAO_PAGAMENTO, 
	CD_CGC, 
	CD_PESSOA_FISICA, 
	VL_IPI, 
	VL_DESCONTOS, 
	VL_FRETE, 
	VL_SEGURO, 
	VL_DESPESA_ACESSORIA, 
	DS_OBSERVACAO, 
	CD_NATUREZA_OPERACAO, 
	VL_DESCONTO_RATEIO, 
	IE_SITUACAO, 
	NR_INTERNO_CONTA, 
	NR_SEQ_PROTOCOLO, 
	ds_obs_desconto_nf, 
	nr_seq_classif_fiscal, 
	dt_atualizacao_estoque, 
	ie_tipo_nota) 
values (NR_SEQUENCIA_W, 
	CD_ESTABELECIMENTO_w, 
	CD_CGC_EMITENTE_W, 
	CD_SERIE_NF_P, 
	NR_NOTA_FISCAL_W, 
	nr_sequencia_nf_w, 
	CD_OPERACAO_NF_P, 
	dt_emissao_p, 
	dt_emissao_p, 
	'1', 
	'0', 
	'0', 
	vl_nota_fiscal_w, 
	vl_nota_fiscal_w, 
	0, 
	0, 
	clock_timestamp(), 
	NM_USUARIO_P, 
	CD_CONDICAO_PAGAMENTO_P, 
	CD_CGC_P, 
	null, 
	0, 
	0, 
	0, 
	0, 
	0, 
	null, 
	cd_nat_oper_nf_p, 
	0, 
	'1', 
	null, 
	null, 
	null, 
	null, 
	clock_timestamp(), 
	'SE');
 
insert into nota_fiscal_item(NR_SEQUENCIA, 
	CD_ESTABELECIMENTO, 
	CD_CGC_EMITENTE, 
	CD_SERIE_NF, 
	NR_NOTA_FISCAL, 
	NR_SEQUENCIA_NF, 
	NR_ITEM_NF, 
	CD_NATUREZA_OPERACAO, 
	DT_ATUALIZACAO, 
	NM_USUARIO, 
	QT_ITEM_NF, 
	VL_UNITARIO_ITEM_NF, 
	VL_TOTAL_ITEM_NF, 
	VL_FRETE, 
	VL_DESCONTO, 
	VL_DESPESA_ACESSORIA, 
	VL_DESCONTO_RATEIO, 
	VL_SEGURO, 
	VL_LIQUIDO, 
	CD_MATERIAL, 
	CD_PROCEDIMENTO, 
	IE_ORIGEM_PROCED, 
	CD_LOCAL_ESTOQUE,  
	DS_OBSERVACAO, 
	NR_SEQ_CONTA_FINANC, 
	DS_COMPLEMENTO, 
	NR_ATENDIMENTO, 
	CD_CONTA_CONTABIL) /* Paulo - OS 45844 - 22/12/2006 */
 
values (NR_SEQUENCIA_W, 
	CD_ESTABELECIMENTO_w, 
	CD_CGC_EMITENTE_W, 
	CD_SERIE_NF_P, 
	NR_NOTA_FISCAL_W, 
	nr_sequencia_nf_w, 
	1, 
	cd_nat_oper_nf_p, 
	clock_timestamp(), 
	nm_usuario_p, 
	1, 
	vl_nota_fiscal_w, 
	vl_nota_fiscal_w, 
	0, 
	0, 
	0, 
	0, 
	0, 
	vl_nota_fiscal_w, 
	null, 
	cd_procedimento_p, 
	ie_origem_proced_p, 
	null, 
	null, 
	null, 
	null, 
	null, 
	cd_conta_contabil_w);
 
lock table serie_nota_fiscal in exclusive mode;
select	nr_ultima_nf + 1 
into STRICT 	nr_nota_fiscal_w 
from	serie_nota_fiscal 
where	cd_serie_nf 		= cd_serie_nf_p 
and 	cd_estabelecimento 	= cd_estabelecimento_w;
 
if (nr_nota_fiscal_p <> 0) then 
	nr_nota_fiscal_w	:= nr_nota_fiscal_p;
end if;
 
if (coalesce(ie_estab_serie_nf_w,'N') = 'S') then 
	update	serie_nota_fiscal 
	set	nr_ultima_nf 		= nr_nota_fiscal_w 
	where	cd_serie_nf 		= cd_serie_nf_p 
	and	cd_estabelecimento in (SELECT	z.cd_estabelecimento 
					from	estabelecimento z 
					where	z.cd_cgc = cd_cgc_emitente_w);
else 
	update	serie_nota_fiscal 
	set	nr_ultima_nf 		= nr_nota_fiscal_w 
	where	cd_serie_nf 		= cd_serie_nf_p 
	and	cd_estabelecimento 	= cd_estabelecimento_w;
end if;
		 
update	nota_fiscal_item 
set	nr_nota_fiscal	= nr_nota_fiscal_w 
where	nr_sequencia 		= nr_sequencia_w;
 
update	nota_fiscal 
set	nr_nota_fiscal	= nr_nota_fiscal_w 
where	nr_sequencia 		= nr_sequencia_w;
 
CALL Gerar_Nota_Fiscal_Venc(nr_sequencia_w, dt_base_vencimento_p);
CALL Gerar_Imposto_NF(nr_sequencia_w, nm_usuario_p, '', '');
CALL atualiza_total_nota_fiscal(nr_sequencia_w, nm_usuario_p);
 
insert into convenio_receb_nf(	nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			nr_seq_receb, 
			nr_seq_nota_fiscal) 
			values (nextval('convenio_receb_nf_seq'), 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_receb_p, 
			NR_SEQUENCIA_W);
 
commit;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nf_convenio_receb ( nr_seq_receb_p bigint, dt_emissao_p timestamp, dt_base_vencimento_p timestamp, cd_cgc_p text, cd_serie_nf_p text, nr_nota_fiscal_p bigint, cd_nat_oper_nf_p text, cd_operacao_nf_p bigint, cd_condicao_pagamento_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nm_usuario_p text, dt_vigencia_p timestamp) FROM PUBLIC;

