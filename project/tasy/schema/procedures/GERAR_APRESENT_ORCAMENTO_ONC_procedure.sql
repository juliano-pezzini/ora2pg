-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE colunas AS (cd_material_w		integer,
			cd_unidade_medida_w 	varchar(30),
			qt_dose_w		double precision,
			nr_seq_fabric_w		bigint,
			qt_frasco_disp_w	double precision,
			qt_perda_fornec_w	double precision);


CREATE OR REPLACE PROCEDURE gerar_apresent_orcamento_onc ( nr_sequencia_orcamento_p bigint, nr_seq_orc_mat_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

/* vetor */

TYPE vetor IS TABLE OF colunas INDEX BY integer;

vetor_w				vetor;
vetor_aux_w			vetor;
cd_convenio_w			bigint;
vetor_fornecedor_w		vetor;
cd_material_w           	integer;
cd_material_regra_w		integer;
cd_unid_med_prescr_w    	varchar(30);
qt_dose_prescricao_w    	double precision;
qt_unitaria_w   		double precision;
qt_total_dispensar_w		double precision;
qt_conversao_dose_w		double precision;
ie_define_disp_w		varchar(5);
nr_seq_fabric_w			bigint;
cd_unid_med_consumo_w		varchar(30);
qt_minimo_multiplo_solic_w	double precision;
ie_tipo_material_w		varchar(14);
nr_seq_ficha_tecnica_w		bigint;
qt_dose_prescr_aux_w		double precision;
qt_dose_total_prescr_w		double precision;
qt_dose_regra_w			double precision;
qt_dose_total_aux_w		double precision;
qt_dose_total_aux_ww		double precision;
cont_w				bigint;
qt_registros_vetor_w		bigint;
qt_controle_w			bigint := 0;
qt_controle_ww			bigint := 0;
qt_controle_www			bigint := 0;
qt_controle_wwww		bigint := 0;
qt_perda_w			double precision;
qt_perda_2w			double precision;
qt_desconto_w			double precision;
qt_a_lancar_w			double precision;
qt_perda_final_w		double precision;
qt_perda_final_2w		double precision;
pr_desconto_w			double precision;
qt_mat_vetor_w			double precision;
x				bigint := 0;
i				bigint := 0;
k				bigint := 0;
y				bigint := 0;
cd_mat_vetor_w			bigint;
ie_reg_w			bigint;
cd_unidade_medida_consumo_w	varchar(30);
ie_fabricante_w			varchar(10);
nr_seq_fabric_melhor_w		bigint;
qt_fornec_w			bigint;
qt_menor_perda_w		double precision;
qt_menor_frasco_w		double precision;
qt_frasco_perda_zero_w		double precision;
qt_frasco_disp_w		bigint;
ie_regra_w			varchar(15);
cd_medicamento_w		integer;
qt_dose_w			double precision;
cd_grupo_material_w		smallint;
cd_subgrupo_material_w		smallint;
nr_sequencia_regra_w		bigint;
nr_seq_orc_mat_w		bigint;
cd_classe_material_w		integer;

indice_saida_w			bigint;
ds_m2_w 			varchar(30);
ds_mgc_w 			varchar(30);
ds_kg_w 			varchar(30);
ds_mgcar_w 			varchar(30);
qt_superficie_corporea_w	double precision;

ie_via_aplicacao_w		orcamento_paciente_mat.ie_via_aplicacao%type;
qt_dias_util_w			orcamento_paciente_mat.qt_dias_util%type;
cd_intervalo_w			orcamento_paciente_mat.cd_intervalo%type;
ds_dias_aplicacao_w		orcamento_paciente_mat.ds_dias_aplicacao%type;
ds_ciclos_aplicacao_w		orcamento_paciente_mat.ds_ciclos_aplicacao%type;
cd_unidade_med_princ_w		unidade_medida.cd_unidade_med_princ%type;
cd_unidade_medida_ww		orcamento_paciente_mat.cd_unidade_medida%type;
qt_peso_w			orcamento_paciente.qt_peso%type;
qt_mg_carboplatina_w		orcamento_paciente.qt_mg_carboplatina%type;
cd_pessoa_fisica_w		orcamento_paciente.cd_pessoa_fisica%type;
cd_mat_especifico_w		material.cd_material%type;
qt_dose_prescr_ww		orcamento_paciente_mat.qt_dose%type;
cd_unidade_medida_conv_w	orcamento_paciente_mat.cd_unid_med_prescr%type;
nr_sequencia_mat_w		orcamento_paciente_mat.nr_sequencia%type;

qt_dias_ciclo_mult_w		bigint;
ie_regra_apresent_quimio_w	varchar(1);
nr_particao_medicamentos_w	bigint;
nr_particao_saida_w			bigint;
sql_w varchar(1000);

melhor_prescr_do_fabricante CURSOR FOR
SELECT		nr_sequencia,
    		nr_particao,
    		dt_criacao,
    		cd_material,
    		qt_dose,
    		cd_unidade_medida,
			qt_quantidade
from 		qt_prescricao_resultado
where		nr_particao = nr_particao_saida_w
order by 	nr_sequencia;

c00 CURSOR FOR
SELECT	ie_regra,
	nr_sequencia
from	regra_apresentacao_quimio
where	coalesce(cd_material,cd_material_w)				= cd_material_w
and	coalesce(cd_grupo_material, cd_grupo_material_w)		= cd_grupo_material_w
and	coalesce(cd_subgrupo_material, cd_subgrupo_material_w)	= cd_subgrupo_material_w
and	coalesce(cd_convenio,cd_convenio_w)				= cd_convenio_w
and          coalesce(ie_situacao,'A') = 'A'
and (clock_timestamp() between coalesce(dt_inicio_vigencia,clock_timestamp()) and coalesce(dt_fim_vigencia,clock_timestamp()))
and	coalesce(ie_tipo_material,ie_tipo_material_w)	= ie_tipo_material_w
and	coalesce(cd_classe_material,cd_classe_material_w)	= cd_classe_material_w
and 	((coalesce(ie_regra_aplicacao,'D') = 'D') or (coalesce(ie_regra_aplicacao,'D') = 'A'))
order by
	coalesce(cd_material,0),
	coalesce(cd_subgrupo_material,0),
	coalesce(cd_grupo_material,0),
	coalesce(cd_convenio,0),
	coalesce(ie_tipo_material,0);

c01 CURSOR FOR
	SELECT	c.cd_pessoa_fisica,
		a.cd_material,
		a.cd_unid_med_prescr,
		a.cd_unidade_medida,
		a.qt_dose,
		round(coalesce(obter_superficie_corp_red_ped(c.qt_peso, c.qt_altura, coalesce(c.qt_redutor_sc,0), c.cd_pessoa_fisica, nm_usuario_p), 0),obter_numero_casas_sc) qt_superficie_corporea,
		c.qt_peso,
		c.qt_mg_carboplatina,
		a.ie_via_aplicacao,
		substr(obter_dados_material_estab(a.cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo,
		b.qt_minimo_multiplo_solic,
		b.ie_tipo_material,
		a.qt_dose,
		a.qt_dias_util,
		a.cd_intervalo,
		b.nr_seq_ficha_tecnica,
		a.nr_sequencia,
		a.ds_dias_aplicacao,
		a.ds_ciclos_aplicacao
	FROM   	material b,
		orcamento_paciente_mat a,
		orcamento_paciente c
	WHERE  	a.cd_material		 = b.cd_material
	AND 	c.nr_sequencia_orcamento = a.nr_sequencia_orcamento
	AND    	a.nr_sequencia_orcamento = nr_sequencia_orcamento_p
	and 	a.nr_sequencia		 = nr_seq_orc_mat_p
	and	coalesce(ie_regra_apresent_onc,'N')	 <> 'S';

c02 CURSOR FOR
SELECT	b.cd_material,
	obter_conversao_unid_med_onc(b.cd_material, cd_unid_med_prescr_w) qt_dose,
	substr(obter_dados_material_estab(b.cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo
FROM	material_estab c,
	material b,
	medic_ficha_tecnica a
WHERE	b.nr_seq_ficha_tecnica	= a.nr_sequencia
AND	c.cd_material		= b.cd_material
AND	c.cd_estabelecimento	= cd_estabelecimento_p
AND	a.nr_sequencia		= nr_seq_ficha_tecnica_w
AND (coalesce(ie_via_aplicacao_w::text, '') = '' or Obter_se_via_adm(b.cd_material, ie_via_aplicacao_w) = 'S')
AND ((cd_mat_especifico_w IS NOT NULL AND cd_mat_especifico_w::text <> '') or obter_se_regra_mat_quimio(b.cd_material, cd_convenio_w, 'X', cd_pessoa_fisica_w, cd_material_w) = 'S')
AND	((b.cd_material		<> cd_material_w) OR (ie_define_disp_w	= 'S'))
AND (coalesce(cd_mat_especifico_w::text, '') = '' or b.cd_material = cd_mat_especifico_w)
AND	((coalesce(ie_fabricante_w,'N')	= 'S') OR (b.nr_seq_fabric		= nr_seq_fabric_w))
AND	coalesce(obter_conversao_unid_med_onc(b.cd_material, cd_unid_med_prescr_w),0) > 0
AND	b.ie_situacao		= 'A'
AND	c.ie_prescricao		= 'S'
AND	obter_regra_mat_sem_apres(b.cd_material, cd_material_w, cd_convenio_w) = 'S'
AND ((cd_mat_especifico_w IS NOT NULL AND cd_mat_especifico_w::text <> '') or obter_se_mat_apresent_prescr(cd_material_w, b.ie_tipo_material, cd_convenio_w, cd_estabelecimento_p) = 'S')
AND 	b.ie_tipo_material 	<> '6'
ORDER BY qt_dose DESC;

c03 CURSOR FOR
SELECT	DISTINCT
	b.nr_seq_fabric
FROM	material_estab c,
	material b,
	medic_ficha_tecnica a
WHERE	b.nr_seq_ficha_tecnica	= a.nr_sequencia
AND	c.cd_material		= b.cd_material
AND	c.cd_estabelecimento	= cd_estabelecimento_p
AND	a.nr_sequencia		= nr_seq_ficha_tecnica_w
AND (coalesce(ie_via_aplicacao_w::text, '') = '' or Obter_se_via_adm(b.cd_material, ie_via_aplicacao_w) = 'S')
AND	coalesce(obter_conversao_unid_med_onc(b.cd_material, cd_unid_med_prescr_w),0) > 0
AND	(b.nr_seq_fabric IS NOT NULL AND b.nr_seq_fabric::text <> '')
AND	((b.cd_material		<> cd_material_w) OR (ie_define_disp_w	= 'S'))
AND	b.ie_situacao		= 'A'
AND	c.ie_prescricao		= 'S'
ORDER BY b.nr_seq_fabric;

BEGIN

--obter_param_usuario(3130, 133, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_define_disp_w);
ie_define_disp_w		:= 'N';
ie_regra_apresent_quimio_w	:=  coalesce(Obter_valor_param_usuario(106, 135,obter_perfil_ativo, nm_usuario_p,cd_estabelecimento_p),'N');

OPEN c01;
LOOP
FETCH c01 INTO
	cd_pessoa_fisica_w,
	cd_material_w,
	cd_unid_med_prescr_w,
	cd_unidade_medida_ww,
	qt_dose_prescricao_w,
	qt_superficie_corporea_w,
	qt_peso_w,
	qt_mg_carboplatina_w,
	ie_via_aplicacao_w,
	cd_unid_med_consumo_w,
	qt_minimo_multiplo_solic_w,
	ie_tipo_material_w,
	qt_dose_total_prescr_w,
	qt_dias_util_w,
	cd_intervalo_w,
	nr_seq_ficha_tecnica_w,
	nr_seq_orc_mat_w,
	ds_dias_aplicacao_w,
	ds_ciclos_aplicacao_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	BEGIN

	ds_m2_w := obter_unid_med_usua('m2');
	ds_kg_w := obter_unid_med_usua('kg');
	ds_mgc_w := obter_unid_med_usua('mgc');
	ds_mgcar_w := obter_unid_med_usua('mgcar');

	if (qt_dose_prescricao_w <> 0) then
		if (qt_superficie_corporea_w <> 0) then
			begin
				select	cd_unidade_med_princ
				into STRICT	cd_unidade_med_princ_w
				from	unidade_medida
				where	cd_unidade_medida = cd_unidade_medida_ww
				and	cd_unidade_medida <> cd_unidade_med_princ
				and	lower(cd_unidade_med_sec) = ds_m2_w
				and	ie_situacao = 'A';

				if (cd_unidade_med_princ_w IS NOT NULL AND cd_unidade_med_princ_w::text <> '')	then
					qt_dose_prescricao_w	:= qt_dose_prescricao_w * qt_superficie_corporea_w;
				end if;
			exception
			    when no_data_found then
				cd_unidade_med_princ_w := null;
			end;
		end if;

		if (qt_peso_w <> 0) then
			begin
				select	cd_unidade_med_princ
				into STRICT	cd_unidade_med_princ_w
				from	unidade_medida
				where	cd_unidade_medida = cd_unidade_medida_ww
				and	cd_unidade_medida <> cd_unidade_med_princ
				and	lower(cd_unidade_med_sec) = ds_kg_w
				and	ie_situacao = 'A';

				if (cd_unidade_med_princ_w IS NOT NULL AND cd_unidade_med_princ_w::text <> '')	then
					qt_dose_prescricao_w	:= qt_dose_prescricao_w * qt_peso_w;
				end if;
			exception
			    when no_data_found then
				cd_unidade_med_princ_w := null;
			end;
		end if;

		if (qt_mg_carboplatina_w <> 0) then
			begin
				select	cd_unidade_med_princ
				into STRICT	cd_unidade_med_princ_w
				from	unidade_medida
				where	cd_unidade_medida = cd_unidade_medida_ww
				and	cd_unidade_medida <> cd_unidade_med_princ
				and	lower(cd_unidade_med_sec) = ds_mgc_w
				and	ie_situacao = 'A';

				if (cd_unidade_med_princ_w IS NOT NULL AND cd_unidade_med_princ_w::text <> '')	then
					qt_dose_prescricao_w	:= qt_dose_prescricao_w * qt_mg_carboplatina_w;
				end if;
			exception
			    when no_data_found then
				cd_unidade_med_princ_w := null;
			end;

			begin
				select	cd_unidade_med_princ
				into STRICT	cd_unidade_med_princ_w
				from	unidade_medida
				where	cd_unidade_medida = cd_unidade_medida_ww
				and	cd_unidade_medida <> cd_unidade_med_princ
				and	lower(cd_unidade_med_sec) = ds_mgcar_w
				and	ie_situacao = 'A';

				if (cd_unidade_med_princ_w IS NOT NULL AND cd_unidade_med_princ_w::text <> '')	then
					qt_dose_prescricao_w	:= qt_mg_carboplatina_w;
				end if;
			exception
			    when no_data_found then
				cd_unidade_med_princ_w := null;
			end;
		end if;
	end if;
	
	qt_dias_ciclo_mult_w := 1;
	
	if (ie_regra_apresent_quimio_w = 'C') then
		if (ds_dias_aplicacao_w IS NOT NULL AND ds_dias_aplicacao_w::text <> '') then
			qt_dias_ciclo_mult_w	:= qt_dias_ciclo_mult_w * obter_qt_dias_aplicacao(ds_dias_aplicacao_w);
		end if;
		
		if (ds_ciclos_aplicacao_w IS NOT NULL AND ds_ciclos_aplicacao_w::text <> '') then
			qt_dias_ciclo_mult_w	:= qt_dias_ciclo_mult_w * obter_qt_ciclos_aplicacao(ds_ciclos_aplicacao_w);
		end if;
	end if;
	
	qt_dose_prescr_ww	:= qt_dose_prescricao_w;
	SELECT * FROM obter_qt_dose_onco_conv(cd_material_w, qt_dose_prescr_ww, ie_via_aplicacao_w, cd_unid_med_prescr_w, cd_unidade_medida_conv_w, cd_intervalo_w) INTO STRICT qt_dose_prescr_ww, cd_unidade_medida_conv_w;
	
	if (qt_dose_prescr_ww IS NOT NULL AND qt_dose_prescr_ww::text <> '') and (qt_dose_prescr_ww <> qt_dose_prescricao_w) then
		qt_dose_prescricao_w := qt_dose_prescr_ww;
		cd_unid_med_prescr_w := coalesce(cd_unidade_medida_conv_w, cd_unid_med_prescr_w);
	end if;

	qt_dose_total_prescr_w	:= calcula_dose_total_quimio(qt_dose_prescricao_w,qt_dias_util_w,cd_intervalo_w);

	select	max(cd_grupo_material),
		max(cd_subgrupo_material),
		max(cd_classe_material)
	into STRICT	cd_grupo_material_w,
		cd_subgrupo_material_w,
		cd_classe_material_w
	from	estrutura_material_v
	where	cd_material = cd_material_w;

	select 	max(cd_convenio)
	into STRICT 	cd_convenio_w
	from 	orcamento_paciente
	where 	nr_sequencia_orcamento = nr_sequencia_orcamento_p;

	ie_regra_w := null;

	open C00;
	loop
	fetch C00 into
		ie_regra_w,
		nr_sequencia_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C00 */
		begin
		ie_regra_w := ie_regra_w;
		end;
	end loop;
	close C00;


	SELECT	coalesce(COUNT(*),0)
	INTO STRICT	cont_w
	FROM	material b
	WHERE	b.nr_seq_ficha_tecnica	= nr_seq_ficha_tecnica_w;

	IF	(cont_w		> 0 AND ie_tipo_material_w	= '6') and (coalesce(ie_regra_w,'MA')	= 'MA') THEN

		select	max(ie_fabricante_dist)
		into STRICT	ie_fabricante_w
		from	material
		WHERE	cd_material	= cd_material_w;

		SELECT	coalesce(MAX(pr_desconto),0),
			coalesce(coalesce(ie_fabricante_w, MAX(ie_fabricante)),'N')
		INTO STRICT	pr_desconto_w,
			ie_fabricante_w
		FROM	material_sem_apresentacao
		WHERE	cd_material	= cd_material_w;

		IF (ie_fabricante_w = 'N') THEN
			qt_fornec_w	:= 0;
			ie_reg_w	:= 0;
			OPEN c03;
			LOOP
			FETCH c03 INTO
				nr_seq_fabric_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				cd_mat_especifico_w := qt_obter_mat_especifico_regra(cd_material_w, cd_convenio_w, cd_pessoa_fisica_w, cd_estabelecimento_p);
				cont_w	:= 0;
				vetor_w.DELETE;
				OPEN c02;
				LOOP
				FETCH c02 INTO
					cd_material_regra_w,
					qt_dose_regra_w,
					cd_unidade_medida_consumo_w;
				EXIT WHEN NOT FOUND; /* apply on c02 */
					vetor_w[cont_w].cd_material_w	:= cd_material_regra_w;
					vetor_w[cont_w].qt_dose_w	:= qt_dose_regra_w;
					vetor_w[cont_w].cd_unidade_medida_w := cd_unidade_medida_consumo_w;
					cont_w := cont_w + 1;
				END LOOP;
				CLOSE c02;

				qt_dose_total_aux_w	:= qt_dose_total_prescr_w;
				qt_desconto_w		:= ((pr_desconto_w * qt_dose_total_aux_w) / 100);
				qt_controle_w		:= 0;

				-- alteracao melhor prescr
				if (vetor_w.count > 0) then
					select	nextval('qt_medic_disponivel_prescr_seq')
					into STRICT	nr_particao_medicamentos_w
					;
					
					for indice in vetor_w.first .. vetor_w.last loop
						insert into qt_medic_disponivel_prescr(nr_sequencia,
							nr_particao,
							dt_criacao,
							cd_material,
							ds_material,
							qt_dose,
							cd_unidade_medida,
							qt_quantidade)
						values (nextval('qt_medic_disponivel_prescr_seq'),
							nr_particao_medicamentos_w,
							clock_timestamp(),
							vetor_w[indice].cd_material_w,
							obter_desc_material(vetor_w[indice].cd_material_w),
							vetor_w[indice].qt_dose_w,
							vetor_w[indice].cd_unidade_medida_w,
							1);
					end loop;

					select 	nextval('qt_prescricao_particao_seq')
					into STRICT 	nr_particao_saida_w
					;

					begin
						sql_w := 'call qt_prescricao_md_pck.prescrever(:particao, :dose, :particao_medicamentos, :tolerancia)';
						EXECUTE sql_w using
							in nr_particao_saida_w,
							in qt_dose_total_prescr_w,
							in nr_particao_medicamentos_w,
							in qt_desconto_w;

					exception when others then
						-- Nao e possivel realizar esta acao devido a ausencia do modulo de dispositivo medico
						CALL wheb_mensagem_pck.exibir_mensagem_abort(1193267);
					end;

					-- inserir os medicamentos
					indice_saida_w := vetor_aux_w.count;
					for medicamento in melhor_prescr_do_fabricante loop
						for quantidade in 1..ceil(medicamento.qt_quantidade) loop
							vetor_aux_w[indice_saida_w].cd_material_w 		:= medicamento.cd_material;
							vetor_aux_w[indice_saida_w].qt_dose_w			:= medicamento.qt_dose;
							vetor_aux_w[indice_saida_w].cd_unidade_medida_w := medicamento.cd_unidade_medida;
							vetor_aux_w[indice_saida_w].nr_seq_fabric_w		:= nr_seq_fabric_w;

							indice_saida_w := indice_saida_w + 1;
						end loop;
					end loop;

					CALL limpar_qt_prescr();
				end if;
				-- fim alteracao melhor prescr


				-- inserir os itens totais no vetor de fornecedores.
				k		:= -1;
				qt_mat_vetor_w	:= 0;
				qt_frasco_disp_w := 0;

				WHILE(k < vetor_aux_w.COUNT - 1) LOOP
					k	:= k + 1;
					IF (vetor_aux_w[k].nr_seq_fabric_w	= nr_seq_fabric_w) THEN
						qt_mat_vetor_w		:= qt_mat_vetor_w + vetor_aux_w[k].qt_dose_w;
						qt_frasco_disp_w	:= qt_frasco_disp_w + 1;
					END IF;
				END LOOP;
				vetor_fornecedor_w[qt_fornec_w].nr_seq_fabric_w	 := nr_seq_fabric_w;
				vetor_fornecedor_w[qt_fornec_w].qt_frasco_disp_w := qt_frasco_disp_w;
				vetor_fornecedor_w[qt_fornec_w].qt_perda_fornec_w := greatest(qt_mat_vetor_w - qt_dose_total_prescr_w, 0);
				qt_fornec_w	:= qt_fornec_w + 1;

			END LOOP;
			CLOSE c03;

			-- descobrir qual fornecedor tem a menor perda e a menor quantidade de frasco dispensados.
			k			:= -1;
			qt_menor_frasco_w	:= 999999999999;
			qt_menor_perda_w	:= 999999999999;
			qt_frasco_perda_zero_w	:= 999999999999;
			WHILE(k < vetor_fornecedor_w.COUNT - 1) LOOP
				k	:= k + 1;

				--insert into temp2 values ('Fab: ' || vetor_fornecedor_w(k).nr_seq_fabric_w || ' Perda ' || vetor_fornecedor_w(k).qt_perda_fornec_w || ' Frasco ' || vetor_fornecedor_w(k).qt_frasco_disp_w); commit;
				if (vetor_fornecedor_w[k].qt_frasco_disp_w > 0) then
					IF	(vetor_fornecedor_w[k].qt_perda_fornec_w >= 0 AND vetor_fornecedor_w[k].qt_perda_fornec_w < qt_menor_perda_w) OR
						(vetor_fornecedor_w[k].qt_perda_fornec_w = qt_menor_perda_w AND vetor_fornecedor_w[k].qt_frasco_disp_w <= qt_frasco_perda_zero_w) THEN
						nr_seq_fabric_melhor_w	:= vetor_fornecedor_w[k].nr_seq_fabric_w;
						qt_menor_perda_w	:= vetor_fornecedor_w[k].qt_perda_fornec_w;
						qt_menor_frasco_w	:= vetor_fornecedor_w[k].qt_frasco_disp_w;
						IF (vetor_fornecedor_w[k].qt_perda_fornec_w = 0) THEN
							qt_frasco_perda_zero_w	:= vetor_fornecedor_w[k].qt_frasco_disp_w;
						END IF;
						-- insert into temp2 values ('1:Fab: ' || nr_seq_fabric_melhor_w || ' qt_menor_perda_w: ' || qt_menor_perda_w || ' qt_menor_frasco_w  ' ||  qt_menor_frasco_w); commit;
					END IF;
				end if;
			END LOOP;

			vetor_fornecedor_w.DELETE;

			k		:= -1;
			y		:= -1;
			cd_mat_vetor_w	:= 0;
			qt_mat_vetor_w	:= 0;
			qt_a_lancar_w	:= qt_dose_total_prescr_w;

			WHILE(k < vetor_aux_w.COUNT - 1) LOOP
				k	:= k + 1;
				--inserir somente os itens do melhor fabricante.
				IF (vetor_aux_w[k].nr_seq_fabric_w = nr_seq_fabric_melhor_w) THEN
					IF	((cd_mat_vetor_w = vetor_aux_w[k].cd_material_w) OR (cd_mat_vetor_w = 0)) AND (vetor_aux_w.COUNT > 1) THEN
						--(k <> (vetor_aux_w.count -1)) then
						qt_mat_vetor_w			:= qt_mat_vetor_w + vetor_aux_w[k].qt_dose_w;
						qt_unitaria_w			:= vetor_aux_w[k].qt_dose_w;
						cd_mat_vetor_w			:= vetor_aux_w[k].cd_material_w;
						qt_conversao_dose_w		:= vetor_aux_w[k].qt_dose_w;
						cd_unidade_medida_consumo_w 	:= vetor_aux_w[k].cd_unidade_medida_w;
					ELSE

						qt_a_lancar_w	:= (qt_a_lancar_w - qt_mat_vetor_w);

						IF (qt_a_lancar_w >= 0) THEN
							qt_total_dispensar_w := qt_a_lancar_w;
						ELSE
							qt_mat_vetor_w := (qt_mat_vetor_w - ABS(qt_a_lancar_w));
						END IF;

						qt_unitaria_w	:= dividir(qt_mat_vetor_w, qt_unitaria_w);

						IF (coalesce(cd_mat_vetor_w,0) = '0') THEN
							cd_mat_vetor_w	:= vetor_aux_w[k].cd_material_w;
						END IF;

						IF (coalesce(qt_mat_vetor_w,0) > 0) THEN
						
						select	nextval('orcamento_paciente_mat_seq')
						into STRICT	nr_sequencia_mat_w
						;

						Insert 	into orcamento_paciente_mat(
							nr_sequencia_orcamento,
							cd_material,
							qt_material,
							vl_material,
							dt_atualizacao,
							nm_usuario,
							vl_desconto,
							ie_valor_informado,
							nr_sequencia,
							cd_unidade_medida,
							ds_dias_aplicacao,
							ds_ciclos_aplicacao,
							qt_dose,
							cd_protocolo,
							nr_seq_medicacao,
							ie_via_aplicacao,
							ie_regra_apresent_onc)
						SELECT 	nr_sequencia_orcamento_p,
							cd_mat_vetor_w,
							obter_dose_convertida(cd_mat_vetor_w,qt_mat_vetor_w,cd_unid_med_prescr_w,substr(Obter_Dados_Material(cd_mat_vetor_w,'UMC'),1,30)),
							0,
							clock_timestamp(),
							nm_usuario_p,
							0,
							'N',
							nr_sequencia_mat_w,
							cd_unid_med_prescr_w,
							ds_dias_aplicacao,
							ds_ciclos_aplicacao,
							qt_mat_vetor_w,
							cd_protocolo,
							nr_seq_medicacao,
							ie_via_aplicacao,
							'S'
						from 	orcamento_paciente_mat
						where 	nr_sequencia = nr_seq_orc_mat_w;
						
						if (ie_regra_apresent_quimio_w = 'C') then
							update	orcamento_paciente_mat
							set	qt_material = qt_material * qt_dias_ciclo_mult_w
							where	nr_sequencia = nr_sequencia_mat_w;
						end if;
						
						commit;

						END IF;
						cd_mat_vetor_w			:= vetor_aux_w[k].cd_material_w;
						qt_mat_vetor_w			:= vetor_aux_w[k].qt_dose_w;
						qt_unitaria_w			:= vetor_aux_w[k].qt_dose_w;
						qt_conversao_dose_w		:= vetor_aux_w[k].qt_dose_w;
						cd_unidade_medida_consumo_w 	:= vetor_aux_w[k].cd_unidade_medida_w;
						COMMIT;
					END IF;
				END IF;
			END LOOP;

			qt_a_lancar_w	:= (qt_a_lancar_w - qt_mat_vetor_w);

			IF (qt_a_lancar_w >= 0) THEN
				qt_total_dispensar_w := qt_a_lancar_w;
				IF (qt_mat_vetor_w = 0) THEN
					qt_mat_vetor_w	:= qt_a_lancar_w;
				END IF;
			ELSE
				qt_mat_vetor_w := (qt_mat_vetor_w - ABS(qt_a_lancar_w));
			END IF;

			qt_unitaria_w	:= dividir(qt_mat_vetor_w, qt_unitaria_w);

			IF (coalesce(cd_mat_vetor_w,0) = 0) AND (vetor_aux_w.COUNT > 0) THEN
				cd_mat_vetor_w	:= vetor_aux_w[k].cd_material_w;
			END IF;

			IF (cd_mat_vetor_w <> 0) THEN
			
				select	nextval('orcamento_paciente_mat_seq')
				into STRICT	nr_sequencia_mat_w
				;

				Insert 	into orcamento_paciente_mat(
						nr_sequencia_orcamento,
						cd_material,
						qt_material,
						vl_material,
						dt_atualizacao,
						nm_usuario,
						vl_desconto,
						ie_valor_informado,
						nr_sequencia,
						cd_unidade_medida,
						ds_dias_aplicacao,
						ds_ciclos_aplicacao,
						qt_dose,
						cd_protocolo,
						nr_seq_medicacao,
						ie_via_aplicacao,
						ie_regra_apresent_onc)
					SELECT 	nr_sequencia_orcamento_p,
						cd_mat_vetor_w,
						obter_dose_convertida(cd_mat_vetor_w,qt_mat_vetor_w,cd_unid_med_prescr_w,substr(Obter_Dados_Material(cd_mat_vetor_w,'UMC'),1,30)),
						0,
						clock_timestamp(),
						nm_usuario_p,
						0,
						'N',
						nr_sequencia_mat_w,
						cd_unid_med_prescr_w,
						ds_dias_aplicacao,
						ds_ciclos_aplicacao,
						qt_mat_vetor_w,
						cd_protocolo,
						nr_seq_medicacao,
						ie_via_aplicacao,
						'S'
					from 	orcamento_paciente_mat
					where 	nr_sequencia = nr_seq_orc_mat_w;
					
					if (ie_regra_apresent_quimio_w = 'C') then
						update	orcamento_paciente_mat
						set	qt_material = qt_material * qt_dias_ciclo_mult_w
						where	nr_sequencia = nr_sequencia_mat_w;
					end if;
					
					commit;
			END IF;

			vetor_aux_w.DELETE;

		ELSE
			cd_mat_especifico_w := qt_obter_mat_especifico_regra(cd_material_w, cd_convenio_w, cd_pessoa_fisica_w, cd_estabelecimento_p);
			cont_w	:= 0;
			vetor_w.DELETE;
			OPEN c02;
			LOOP
			FETCH c02 INTO
				cd_material_regra_w,
				qt_dose_regra_w,
				cd_unidade_medida_consumo_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				vetor_w[cont_w].cd_material_w	:= cd_material_regra_w;
				vetor_w[cont_w].qt_dose_w	:= qt_dose_regra_w;
				vetor_w[cont_w].cd_unidade_medida_w := cd_unidade_medida_consumo_w;
				cont_w := cont_w + 1;
			END LOOP;
			CLOSE c02;

			qt_dose_total_aux_w	:= qt_dose_total_prescr_w;
			qt_desconto_w		:= ((pr_desconto_w * qt_dose_total_aux_w) / 100);
			ie_reg_w		:= 0;

			qt_controle_w := 0;
			WHILE(qt_dose_total_aux_w	> 0) AND (qt_controle_w		< 1000) LOOP

				qt_registros_vetor_w	:= vetor_w.COUNT - 1;
				qt_controle_ww		:= 0;
				x			:= -1;

				WHILE(x < qt_registros_vetor_w) AND (qt_dose_total_aux_w	> 0) AND (qt_controle_ww		< 1000) LOOP

					x := x + 1;
					qt_controle_ww	:= qt_controle_ww + 1;

					IF	((qt_dose_total_aux_w - vetor_w[x].qt_dose_w) >= 0) THEN

						qt_dose_total_aux_w	:= (qt_dose_total_aux_w - vetor_w[x].qt_dose_w);
						vetor_aux_w[ie_reg_w].cd_material_w	:= vetor_w[x].cd_material_w;
						vetor_aux_w[ie_reg_w].qt_dose_w		:= vetor_w[x].qt_dose_w;
						vetor_aux_w[ie_reg_w].cd_unidade_medida_w := vetor_w[x].cd_unidade_medida_w;
						ie_reg_w	:= ie_reg_w + 1;
						x := -1;

					ELSIF (qt_dose_total_aux_w <= qt_desconto_w) THEN
						qt_dose_total_aux_w	:= 0;
					ELSIF (qt_registros_vetor_w = x) THEN

						qt_dose_total_aux_w	:= (qt_dose_total_aux_w - vetor_w[x].qt_dose_w);
						vetor_aux_w[ie_reg_w].cd_material_w	:= vetor_w[x].cd_material_w;
						vetor_aux_w[ie_reg_w].qt_dose_w	:= vetor_w[x].qt_dose_w;
						vetor_aux_w[ie_reg_w].cd_unidade_medida_w := vetor_w[x].cd_unidade_medida_w;
						ie_reg_w	:= ie_reg_w + 1;

					ELSIF	((qt_dose_total_aux_w - vetor_w[x].qt_dose_w) < 0) THEN
						qt_perda_w		:= (qt_dose_total_aux_w - vetor_w[x].qt_dose_w);
						qt_dose_total_aux_ww	:= qt_dose_total_aux_w;
						qt_perda_final_w	:= 0;
						qt_controle_wwww	:= 0;
						WHILE(qt_dose_total_aux_ww	> 0) AND (qt_controle_wwww	< 1000) LOOP

							qt_controle_www := 0;
							i 		:= -1;
							WHILE(i < qt_registros_vetor_w) AND (qt_dose_total_aux_ww	> 0) AND (qt_controle_www	< 1000) LOOP

								i	:= i + 1;
								qt_controle_www	:= qt_controle_www + 1;
								IF	((qt_dose_total_aux_ww - vetor_w[i].qt_dose_w) >= 0) THEN
									qt_perda_final_w	:= (qt_dose_total_aux_ww - vetor_w[i].qt_dose_w);
									qt_dose_total_aux_ww	:= (qt_dose_total_aux_ww - vetor_w[i].qt_dose_w);
									i := -1;
								ELSIF (qt_registros_vetor_w = i) THEN
									qt_perda_final_w	:= (qt_dose_total_aux_ww - vetor_w[i].qt_dose_w);
									qt_dose_total_aux_ww	:= (qt_dose_total_aux_ww - vetor_w[i].qt_dose_w);
								END IF;
							END LOOP;

							qt_controle_wwww := qt_controle_wwww + 1;

						END LOOP;

						qt_perda_2w		:= (qt_dose_total_aux_w - vetor_w[x].qt_dose_w);
						qt_dose_total_aux_ww	:= qt_dose_total_aux_w;
						qt_perda_final_2w	:= 0;
						qt_controle_wwww	:= 0;
						WHILE(qt_dose_total_aux_ww	> 0) AND (qt_controle_wwww	< 1000) LOOP

							qt_controle_www := 0;
							i 		:= -1;
							WHILE(i < qt_registros_vetor_w) AND (qt_dose_total_aux_ww	> 0) AND (qt_controle_www	< 1000) LOOP

								i	:= i + 1;
								qt_controle_www	:= qt_controle_www + 1;
								IF	((qt_dose_total_aux_ww - vetor_w[i].qt_dose_w) >= 0) THEN
									qt_perda_final_2w	:= (qt_dose_total_aux_ww - vetor_w[i].qt_dose_w);
									qt_dose_total_aux_ww	:= (qt_dose_total_aux_ww - vetor_w[i].qt_dose_w);
									i := -1;
								END IF;
							END LOOP;
							qt_controle_wwww := qt_controle_wwww + 1;
						END LOOP;

						IF (qt_dose_total_aux_ww < qt_desconto_w) THEN
							NULL;
						ELSIF (qt_perda_w >= qt_perda_final_w) THEN
							vetor_aux_w[ie_reg_w].cd_material_w	:= vetor_w[x].cd_material_w;
							vetor_aux_w[ie_reg_w].qt_dose_w		:= vetor_w[x].qt_dose_w;
							vetor_aux_w[ie_reg_w].cd_unidade_medida_w := vetor_w[x].cd_unidade_medida_w;
							ie_reg_w		:= ie_reg_w + 1;
							qt_dose_total_aux_w	:= 0;
						END IF;
					END IF;
				END LOOP;

				qt_controle_w	:= qt_controle_w + 1;
			END LOOP;

			k		:= -1;
			cd_mat_vetor_w	:= 0;
			qt_mat_vetor_w	:= 0;
			qt_a_lancar_w	:= qt_dose_total_prescr_w;

			WHILE(k < vetor_aux_w.COUNT - 1) LOOP
				k	:= k + 1;

				IF	((cd_mat_vetor_w = vetor_aux_w[k].cd_material_w) OR (cd_mat_vetor_w = 0)) AND (vetor_aux_w.COUNT > 1) THEN
					qt_mat_vetor_w			:= qt_mat_vetor_w + vetor_aux_w[k].qt_dose_w;
					qt_unitaria_w			:= vetor_aux_w[k].qt_dose_w;
					cd_mat_vetor_w			:= vetor_aux_w[k].cd_material_w;
					qt_conversao_dose_w		:= vetor_aux_w[k].qt_dose_w;
					cd_unidade_medida_consumo_w 	:= vetor_aux_w[k].cd_unidade_medida_w;
				ELSE
					qt_a_lancar_w	:= (qt_a_lancar_w - qt_mat_vetor_w);

					IF (qt_a_lancar_w >= 0) THEN
						qt_total_dispensar_w := qt_a_lancar_w;
					ELSE
						qt_mat_vetor_w := (qt_mat_vetor_w - ABS(qt_a_lancar_w));
					END IF;

					qt_unitaria_w	:= dividir(qt_mat_vetor_w, qt_unitaria_w);

					IF (coalesce(cd_mat_vetor_w,0) = '0') THEN
						cd_mat_vetor_w	:= vetor_aux_w[k].cd_material_w;
					END IF;

					IF (qt_mat_vetor_w > 0) THEN

						select	nextval('orcamento_paciente_mat_seq')
						into STRICT	nr_sequencia_mat_w
						;

						Insert 	into orcamento_paciente_mat(
							nr_sequencia_orcamento,
							cd_material,
							qt_material,
							vl_material,
							dt_atualizacao,
							nm_usuario,
							vl_desconto,
							ie_valor_informado,
							nr_sequencia,
							cd_unidade_medida,
							ds_dias_aplicacao,
							ds_ciclos_aplicacao,
							qt_dose,
							cd_protocolo,
							nr_seq_medicacao,
							ie_via_aplicacao,
							ie_regra_apresent_onc)
						SELECT 	nr_sequencia_orcamento_p,
							cd_mat_vetor_w,
							obter_dose_convertida(cd_mat_vetor_w,qt_mat_vetor_w,cd_unid_med_prescr_w,substr(Obter_Dados_Material(cd_mat_vetor_w,'UMC'),1,30)),
							0,
							clock_timestamp(),
							nm_usuario_p,
							0,
							'N',
							nr_sequencia_mat_w,
							cd_unid_med_prescr_w,
							ds_dias_aplicacao,
							ds_ciclos_aplicacao,
							qt_mat_vetor_w,
							cd_protocolo,
							nr_seq_medicacao,
							ie_via_aplicacao,
							'S'
						from 	orcamento_paciente_mat
						where 	nr_sequencia = nr_seq_orc_mat_w;
						
						if (ie_regra_apresent_quimio_w = 'C') then
							update	orcamento_paciente_mat
							set	qt_material = qt_material * qt_dias_ciclo_mult_w
							where	nr_sequencia = nr_sequencia_mat_w;
						end if;
						
						commit;
					END IF;

					cd_mat_vetor_w			:= vetor_aux_w[k].cd_material_w;
					qt_mat_vetor_w			:= vetor_aux_w[k].qt_dose_w;
					qt_unitaria_w			:= vetor_aux_w[k].qt_dose_w;
					qt_conversao_dose_w		:= vetor_aux_w[k].qt_dose_w;
					cd_unidade_medida_consumo_w 	:= vetor_aux_w[k].cd_unidade_medida_w;
					COMMIT;
				END IF;
			END LOOP;

			vetor_aux_w.DELETE;

			IF (coalesce(cd_mat_vetor_w,0) <> '0') THEN

				qt_a_lancar_w	:= (qt_a_lancar_w - qt_mat_vetor_w);
				IF (qt_a_lancar_w >= 0) THEN
					qt_total_dispensar_w := qt_a_lancar_w;
				ELSE
					qt_mat_vetor_w := (qt_mat_vetor_w - ABS(qt_a_lancar_w));
				END IF;

				qt_unitaria_w	:= dividir(qt_mat_vetor_w, qt_unitaria_w);

				SELECT	MAX(substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UMS'),1,30))
				INTO STRICT	cd_unidade_medida_consumo_w
				FROM  	material
				WHERE  	cd_material = cd_mat_vetor_w;

				select	nextval('orcamento_paciente_mat_seq')
				into STRICT	nr_sequencia_mat_w
				;

				Insert 	into orcamento_paciente_mat(
						nr_sequencia_orcamento,
						cd_material,
						qt_material,
						vl_material,
						dt_atualizacao,
						nm_usuario,
						vl_desconto,
						ie_valor_informado,
						nr_sequencia,
						cd_unidade_medida,
						ds_dias_aplicacao,
						ds_ciclos_aplicacao,
						qt_dose,
						cd_protocolo,
						nr_seq_medicacao,
						ie_via_aplicacao,
						ie_regra_apresent_onc)
					SELECT 	nr_sequencia_orcamento_p,
						cd_mat_vetor_w,
						obter_dose_convertida(cd_mat_vetor_w,qt_mat_vetor_w,cd_unid_med_prescr_w,substr(Obter_Dados_Material(cd_mat_vetor_w,'UMC'),1,30)),
						0,
						clock_timestamp(),
						nm_usuario_p,
						0,
						'N',
						nr_sequencia_mat_w,
						cd_unid_med_prescr_w,
						ds_dias_aplicacao,
						ds_ciclos_aplicacao,
						qt_mat_vetor_w,
						cd_protocolo,
						nr_seq_medicacao,
						ie_via_aplicacao,
						'S'
					from 	orcamento_paciente_mat
					where 	nr_sequencia = nr_seq_orc_mat_w;
					
					if (ie_regra_apresent_quimio_w = 'C') then
						update	orcamento_paciente_mat
						set	qt_material = qt_material * qt_dias_ciclo_mult_w
						where	nr_sequencia = nr_sequencia_mat_w;
					end if;
					
					commit;

			END IF;
		END IF;
	ELSIF (ie_regra_w = 'MF')  or (ie_regra_w = 'MG') THEN

		if (ie_regra_w = 'MF') then
			select 	coalesce(max(cd_material),0)
			into STRICT 	cd_medicamento_w
			from 	material
			where 	ie_tipo_material = 8
			and 	nr_seq_ficha_tecnica = nr_seq_ficha_tecnica_w;

			if (cd_medicamento_w = 0) then
				CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(196339, 'DS_FICHA_TECNICA_W='||nr_seq_ficha_tecnica_w);
			end if;
		else
			select 	coalesce(max(cd_material),0)
			into STRICT 	cd_medicamento_w
			from 	material
			where 	ie_tipo_material = 3
			and 	nr_seq_ficha_tecnica = nr_seq_ficha_tecnica_w;

			if (cd_medicamento_w = 0) then
				CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(388788, 'DS_FICHA_TECNICA_W='||nr_seq_ficha_tecnica_w);
			end if;
		end if;

		IF (cd_unid_med_consumo_w = cd_unid_med_prescr_w) THEN
			qt_conversao_dose_w	:= 1;
		ELSE
			BEGIN
			SELECT	qt_conversao
			INTO STRICT	qt_conversao_dose_w
			FROM	material_conversao_unidade
			WHERE	cd_material 	= cd_medicamento_w
			AND	cd_unidade_medida = cd_unid_med_prescr_w;
			EXCEPTION
				WHEN OTHERS THEN
					qt_conversao_dose_w	:= 1;
			END;
		END IF;

		qt_unitaria_w		:= dividir(qt_dose_prescricao_w , qt_conversao_dose_w);
		qt_total_dispensar_w	:= dividir(qt_unitaria_w , qt_minimo_multiplo_solic_w) * qt_minimo_multiplo_solic_w;

		IF (qt_total_dispensar_w < qt_unitaria_w) THEN
			qt_total_dispensar_w := qt_total_dispensar_w + qt_minimo_multiplo_solic_w;
		END IF;

		select	nextval('orcamento_paciente_mat_seq')
		into STRICT	nr_sequencia_mat_w
		;

		Insert 	into orcamento_paciente_mat(
					nr_sequencia_orcamento,
					cd_material,
					qt_material,
					vl_material,
					dt_atualizacao,
					nm_usuario,
					vl_desconto,
					ie_valor_informado,
					nr_sequencia,
					cd_unidade_medida,
					ds_dias_aplicacao,
					ds_ciclos_aplicacao,
					qt_dose,
					cd_protocolo,
					nr_seq_medicacao,
					ie_via_aplicacao,
					ie_regra_apresent_onc)
				SELECT 	nr_sequencia_orcamento_p,
					cd_medicamento_w,
					obter_dose_convertida(cd_medicamento_w,qt_dose_prescricao_w,cd_unid_med_prescr_w,substr(Obter_Dados_Material(cd_medicamento_w,'UMC'),1,30)) ,
					0,
					clock_timestamp(),
					nm_usuario_p,
					0,
					'N',
					nr_sequencia_mat_w,
					cd_unid_med_prescr_w,
					ds_dias_aplicacao,
					ds_ciclos_aplicacao,
					qt_dose_prescricao_w,
					cd_protocolo,
					nr_seq_medicacao,
					ie_via_aplicacao,
					'S'
				from 	orcamento_paciente_mat
				where 	nr_sequencia = nr_seq_orc_mat_w;
				
				if (ie_regra_apresent_quimio_w = 'C') then
					update	orcamento_paciente_mat
					set	qt_material = qt_material * qt_dias_ciclo_mult_w
					where	nr_sequencia = nr_sequencia_mat_w;
				end if;
				
				commit;
	ELSIF (IE_REGRA_W = 'ME') THEN
		select 	coalesce(max(cd_material_especifico),0)
		into STRICT	cd_medicamento_w
		from	regra_apresentacao_quimio
		where 	nr_sequencia = nr_sequencia_regra_w;

		if (cd_medicamento_w = 0) then
			 CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(196338);
		end if;

		IF (cd_unid_med_consumo_w = cd_unid_med_prescr_w) THEN
			qt_conversao_dose_w	:= 1;
		ELSE
			BEGIN
			SELECT	qt_conversao
			INTO STRICT	qt_conversao_dose_w
			FROM	material_conversao_unidade
			WHERE	cd_material 	= cd_medicamento_w
			AND	cd_unidade_medida = cd_unid_med_prescr_w;
			EXCEPTION
				WHEN OTHERS THEN
					qt_conversao_dose_w	:= 1;
			END;
		END IF;

		qt_unitaria_w		:= dividir(qt_dose_prescricao_w , qt_conversao_dose_w);
		qt_total_dispensar_w	:= dividir(qt_unitaria_w , qt_minimo_multiplo_solic_w) * qt_minimo_multiplo_solic_w;

		IF (qt_total_dispensar_w < qt_unitaria_w) THEN
			qt_total_dispensar_w := qt_total_dispensar_w + qt_minimo_multiplo_solic_w;
		END IF;

		select	nextval('orcamento_paciente_mat_seq')
		into STRICT	nr_sequencia_mat_w
		;

		Insert 	into orcamento_paciente_mat(
					nr_sequencia_orcamento,
					cd_material,
					qt_material,
					vl_material,
					dt_atualizacao,
					nm_usuario,
					vl_desconto,
					ie_valor_informado,
					nr_sequencia,
					cd_unidade_medida,
					ds_dias_aplicacao,
					ds_ciclos_aplicacao,
					qt_dose,
					cd_protocolo,
					nr_seq_medicacao,
					ie_via_aplicacao,
					ie_regra_apresent_onc)
				SELECT 	nr_sequencia_orcamento_p,
					cd_medicamento_w,
					obter_dose_convertida(cd_medicamento_w,qt_dose_prescricao_w,cd_unid_med_prescr_w,substr(Obter_Dados_Material(cd_medicamento_w,'UMC'),1,30)),
					0,
					clock_timestamp(),
					nm_usuario_p,
					0,
					'N',
					nr_sequencia_mat_w,
					cd_unid_med_prescr_w,
					ds_dias_aplicacao,
					ds_ciclos_aplicacao,
					qt_dose_prescricao_w,
					cd_protocolo,
					nr_seq_medicacao,
					ie_via_aplicacao,
					'S'
				from 	orcamento_paciente_mat
				where 	nr_sequencia = nr_seq_orc_mat_w;
				
				if (ie_regra_apresent_quimio_w = 'C') then
					update	orcamento_paciente_mat
					set	qt_material = qt_material * qt_dias_ciclo_mult_w
					where	nr_sequencia = nr_sequencia_mat_w;
				end if;
				
				commit;
	ELSE
		IF (cd_unid_med_consumo_w = cd_unid_med_prescr_w) THEN
			qt_conversao_dose_w	:= 1;
		ELSE
			BEGIN
			SELECT	qt_conversao
			INTO STRICT	qt_conversao_dose_w
			FROM	material_conversao_unidade
			WHERE	cd_material 	= cd_material_w
			AND	cd_unidade_medida = cd_unid_med_prescr_w;
			EXCEPTION
				WHEN OTHERS THEN
					qt_conversao_dose_w	:= 1;
			END;
		END IF;

		qt_unitaria_w		:= dividir(qt_dose_prescricao_w , qt_conversao_dose_w);
		qt_total_dispensar_w	:= dividir(qt_unitaria_w , qt_minimo_multiplo_solic_w) * qt_minimo_multiplo_solic_w;

		IF (qt_total_dispensar_w < qt_unitaria_w) THEN
			qt_total_dispensar_w := qt_total_dispensar_w + qt_minimo_multiplo_solic_w;
		END IF;

		select	nextval('orcamento_paciente_mat_seq')
		into STRICT	nr_sequencia_mat_w
		;

		Insert 	into orcamento_paciente_mat(
				nr_sequencia_orcamento,
				cd_material,
				qt_material,
				vl_material,
				dt_atualizacao,
				nm_usuario,
				vl_desconto,
				ie_valor_informado,
				nr_sequencia,
				cd_unidade_medida,
				ds_dias_aplicacao,
				ds_ciclos_aplicacao,
				qt_dose,
				cd_protocolo,
				nr_seq_medicacao,
				ie_via_aplicacao,
				ie_regra_apresent_onc)
			SELECT 	nr_sequencia_orcamento_p,
				cd_material_w,
				obter_dose_convertida(cd_material_w,qt_dose_prescricao_w,cd_unid_med_prescr_w,substr(Obter_Dados_Material(cd_material_w,'UMC'),1,30)),
				0,
				clock_timestamp(),
				nm_usuario_p,
				0,
				'N',
				nr_sequencia_mat_w,
				cd_unid_med_prescr_w,
				ds_dias_aplicacao,
				ds_ciclos_aplicacao,
				qt_dose_prescricao_w,
				cd_protocolo,
				nr_seq_medicacao,
				ie_via_aplicacao,
				'S'
			from 	orcamento_paciente_mat
			where 	nr_sequencia = nr_seq_orc_mat_w;
			
			if (ie_regra_apresent_quimio_w = 'C') then
				update	orcamento_paciente_mat
				set	qt_material = qt_material * qt_dias_ciclo_mult_w
				where	nr_sequencia = nr_sequencia_mat_w;
			end if;
			
			commit;
		END IF;
	END;

	delete from orcamento_paciente_mat
	where 	nr_sequencia		= nr_seq_orc_mat_w
	and	nr_sequencia_orcamento	= nr_sequencia_orcamento_p;

END LOOP;
CLOSE c01;
COMMIT;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_apresent_orcamento_onc ( nr_sequencia_orcamento_p bigint, nr_seq_orc_mat_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

