-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_liberar_vinculo_sca ( nr_seq_contrato_p bigint, nr_seq_segurado_p bigint, nr_seq_vinculo_sca_p bigint, ie_opcao_p text, ie_att_mes_reajuste_p text, ie_commit_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/* ie_opcao_p
	L - Liberar SCA
	E - Encerrar vigencia SCA */
nr_seq_vinculo_sca_w		bigint;
dt_liberacao_w			timestamp;
dt_contratacao_w		timestamp;
nr_seq_segurado_w		bigint;
nr_seq_tabela_w			bigint;
nr_seq_plano_sca_w		bigint;
qt_dependete_w			bigint;
ds_consistencia_w		varchar(255);
nr_seq_titular_w		bigint;
dt_adesao_sca_w			timestamp;
ie_tipo_segurado_w		varchar(1);
nr_seq_segurado_ant_w		bigint;
qt_sca_migracao_w		bigint;
dt_inclusao_benef_w		timestamp;
nr_seq_classificacao_w		bigint;
dt_adesao_w			timestamp;
dt_contratacao_benef_w		timestamp;
ie_permite_sca_sem_tabela_w	pls_plano.ie_permite_sca_sem_tabela%type;
dt_inclusao_operadora_w		pls_segurado.dt_inclusao_operadora%type;
nr_mes_reajuste_sca_w		pls_sca_vinculo.nr_mes_reajuste%type;
ie_reajuste_w			pls_contrato.ie_reajuste%type;
nr_mes_reajuste_contrato_w	pls_contrato.nr_mes_reajuste%type;
nr_mes_reajuste_benef_w		pls_segurado.nr_mes_reajuste%type;
ie_att_mes_reajuste_w		varchar(1);
nr_mes_reajuste_w		pls_sca_vinculo.nr_mes_reajuste%type;
ie_validar_area_atuacao_sca_w	varchar(1);
ie_permite_inc_fora_atuacao_w	pls_regra_benef_contrato.ie_permite_inc_fora_atuacao%type;
cd_municipio_residencia_w	compl_pessoa_fisica.cd_municipio_ibge%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.dt_liberacao,
		CASE WHEN coalesce(nr_seq_contrato_p::text, '') = '' THEN b.dt_contratacao  ELSE c.dt_contrato END ,
		b.nr_sequencia,
		a.nr_seq_tabela,
		b.ie_tipo_segurado,
		a.nr_seq_plano,
		b.nr_seq_segurado_ant,
		d.nr_seq_classificacao,
		a.dt_inicio_vigencia,
		b.dt_contratacao,
		b.nr_seq_titular,
		d.ie_permite_sca_sem_tabela,
		b.dt_inclusao_operadora,
		coalesce(a.nr_mes_reajuste, 0) nr_mes_reajuste_sca,
		c.ie_reajuste,
		c.nr_mes_reajuste nr_mes_reajuste_contrato,
		b.nr_mes_reajuste nr_mes_reajuste_benef,
		'S' ie_att_mes_reajuste,
		(	SELECT	coalesce(max(x.ie_permite_inc_fora_atuacao),'N')
			from	pls_regra_benef_contrato x
			where	x.nr_seq_contrato	= c.nr_sequencia) ie_permite_inc_fora_atuacao,
		(	select	max(x.cd_municipio_ibge)
			from	compl_pessoa_fisica x
			where	x.cd_pessoa_fisica = b.cd_pessoa_fisica
			and	x.ie_tipo_complemento = 1) cd_municipio_residencia
	from	pls_sca_vinculo	a,
		pls_segurado	b,
		pls_contrato	c,
		pls_plano	d
	where	b.nr_sequencia	= a.nr_seq_segurado
	and	c.nr_sequencia	= b.nr_seq_contrato
	and	a.nr_seq_plano	= d.nr_sequencia
	and	((b.nr_seq_contrato	= nr_seq_contrato_p)
	or (b.nr_sequencia		= nr_seq_segurado_p)
	or (a.nr_sequencia		= nr_seq_vinculo_sca_p))
	
union

	select	a.nr_sequencia,
		a.dt_liberacao,
		CASE WHEN coalesce(nr_seq_contrato_p::text, '') = '' THEN b.dt_contratacao  ELSE c.dt_aprovacao END ,
		b.nr_sequencia,
		a.nr_seq_tabela,
		b.ie_tipo_segurado,
		a.nr_seq_plano,
		b.nr_seq_segurado_ant,
		d.nr_seq_classificacao,
		a.dt_inicio_vigencia,
		b.dt_contratacao,
		b.nr_seq_titular,
		d.ie_permite_sca_sem_tabela,
		b.dt_inclusao_operadora,
		null nr_mes_reajuste_sca,
		null ie_reajuste,
		null nr_mes_reajuste_contrato,
		null nr_mes_reajuste_benef,
		'N' ie_att_mes_reajuste,
		'S' ie_permite_inc_fora_atuacao, -- A validacao nao pode ocorrer para contrato de intercambio
		(	select	max(x.cd_municipio_ibge)
			from	compl_pessoa_fisica x
			where	x.cd_pessoa_fisica = b.cd_pessoa_fisica
			and	x.ie_tipo_complemento = 1) cd_municipio_residencia
	from	pls_sca_vinculo	a,
		pls_segurado	b,
		pls_intercambio	c,
		pls_plano	d
	where	b.nr_sequencia	= a.nr_seq_segurado
	and	c.nr_sequencia	= b.nr_seq_intercambio
	and	a.nr_seq_plano	= d.nr_sequencia
	and	((b.nr_seq_intercambio	= nr_seq_contrato_p)
	or (b.nr_sequencia		= nr_seq_segurado_p)
	or (a.nr_sequencia		= nr_seq_vinculo_sca_p));


BEGIN
ie_validar_area_atuacao_sca_w	:= coalesce(obter_valor_param_usuario(1202, 169, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');

open C01;
loop
fetch C01 into
	nr_seq_vinculo_sca_w,
	dt_liberacao_w,
	dt_contratacao_w,
	nr_seq_segurado_w,
	nr_seq_tabela_w,
	ie_tipo_segurado_w,
	nr_seq_plano_sca_w,
	nr_seq_segurado_ant_w,
	nr_seq_classificacao_w,
	dt_adesao_w,
	dt_contratacao_benef_w,
	nr_seq_titular_w,
	ie_permite_sca_sem_tabela_w,
	dt_inclusao_operadora_w,
	nr_mes_reajuste_sca_w,
	ie_reajuste_w,
	nr_mes_reajuste_contrato_w,
	nr_mes_reajuste_benef_w,
	ie_att_mes_reajuste_w,
	ie_permite_inc_fora_atuacao_w,
	cd_municipio_residencia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (ie_opcao_p	= 'L') then
		if (coalesce(dt_liberacao_w::text, '') = '') then
			if (coalesce(nr_seq_tabela_w::text, '') = '') and (coalesce(ie_permite_sca_sem_tabela_w,'N') <> 'S') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(202515); -- Servico/Cobertura Adicional sem tabela de preco informada!
				
			end if;
			
			if (ie_validar_area_atuacao_sca_w = 'S') then
				if	((ie_permite_inc_fora_atuacao_w = 'N') and (pls_obter_se_area_atuacao_prod(nr_seq_plano_sca_w,cd_municipio_residencia_w) = 'N')) then
					--O SCA #@DS_SCA#@ nao pode ser incluido para o beneficiario #@NM_BENEF#@, devido a restricao da area de atuacao.
					CALL wheb_mensagem_pck.exibir_mensagem_abort(1112099, 'DS_SCA='||pls_obter_dados_produto(nr_seq_plano_sca_w,'N')||';NM_BENEF='||pls_obter_dados_segurado(nr_seq_segurado_w,'N') );
				end if;
			end if;
			
			if (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') then
				CALL pls_consist_parent_sca_benef(nr_seq_vinculo_sca_w,nr_seq_plano_sca_w,nr_seq_segurado_w,nm_usuario_p);
			else
				update	pls_sca_vinculo
				set	ds_consistencia  = NULL
				where	nr_sequencia	= nr_seq_vinculo_sca_w;
			end if;
			
			select	ds_consistencia
			into STRICT	ds_consistencia_w
			from	pls_sca_vinculo
			where	nr_sequencia	= nr_seq_vinculo_sca_w;
			
			if (ds_consistencia_w IS NOT NULL AND ds_consistencia_w::text <> '') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(191805, 'DS_ERRO='||ds_consistencia_w);
			else
				dt_inclusao_benef_w	:= null;
				if (coalesce(nr_seq_segurado_ant_w,0) <> 0) then
					select	count(1)
					into STRICT	qt_sca_migracao_w
					from	pls_sca_vinculo	a,
						pls_plano	b
					where	a.nr_seq_plano		= b.nr_sequencia
					and	a.nr_seq_segurado	= nr_seq_segurado_ant_w
					and	b.nr_seq_classificacao	= nr_seq_classificacao_w
					and	Obter_Dias_Entre_Datas(a.dt_fim_vigencia,clock_timestamp()) <= 30  LIMIT 1;
					
					if (qt_sca_migracao_w > 0) then
						select	max(dt_inclusao_benef)
						into STRICT	dt_inclusao_benef_w
						from	pls_sca_vinculo	a,
							pls_plano	b
						where	a.nr_seq_plano		= b.nr_sequencia
						and	a.nr_seq_segurado	= nr_seq_segurado_ant_w
						and	b.nr_seq_classificacao	= nr_seq_classificacao_w
						and	Obter_Dias_Entre_Datas(a.dt_fim_vigencia,clock_timestamp()) <= 30;
						
						if (coalesce(dt_inclusao_benef_w::text, '') = '') then
							select	max(dt_inicio_vigencia)
							into STRICT	dt_inclusao_benef_w
							from	pls_sca_vinculo	a,
								pls_plano	b
							where	a.nr_seq_plano		= b.nr_sequencia
							and	a.nr_seq_segurado	= nr_seq_segurado_ant_w
							and	b.nr_seq_classificacao	= nr_seq_classificacao_w
							and	Obter_Dias_Entre_Datas(a.dt_fim_vigencia,clock_timestamp()) <= 30;
						end if;
					end if;
				end if;
				
				if (dt_adesao_w IS NOT NULL AND dt_adesao_w::text <> '') and (dt_adesao_w <> dt_inclusao_operadora_w) and (trunc(dt_contratacao_benef_w,'dd') > trunc(dt_adesao_w,'dd')) then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(202517,'NM_SEGURADO='||substr(pls_obter_dados_segurado(nr_seq_segurado_w,'N'),1,255));
				end if;
				
				if (coalesce(dt_inclusao_benef_w::text, '') = '') then
					dt_inclusao_benef_w	:= dt_adesao_w;
				end if;
				
				update	pls_sca_vinculo
				set	dt_liberacao		= clock_timestamp(),
					dt_inclusao_benef	= coalesce(dt_inclusao_benef_w,clock_timestamp()),
					dt_inicio_vigencia	= CASE WHEN dt_inicio_vigencia = NULL THEN dt_contratacao_w  ELSE dt_inicio_vigencia END ,
					nm_usuario		= nm_usuario_p
				where	nr_sequencia		= nr_seq_vinculo_sca_w;
				
				if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') and (nr_seq_tabela_w IS NOT NULL AND nr_seq_tabela_w::text <> '') then
					CALL pls_gerar_valor_sca_segurado(nr_seq_segurado_w, 'C', null, nm_usuario_p, cd_estabelecimento_p, nr_seq_vinculo_sca_w);
				end if;
				
				if	(ie_att_mes_reajuste_p = 'S' AND ie_att_mes_reajuste_w = 'S') then
					if (ie_reajuste_w = 'C') then
						nr_mes_reajuste_w	:= nr_mes_reajuste_contrato_w;
					elsif (ie_reajuste_w = 'A') then
						nr_mes_reajuste_w	:= nr_mes_reajuste_benef_w;
					end if;
					
					CALL pls_atualizar_mes_reaj_pck.alterar_mes_reaj_sca(nr_seq_vinculo_sca_w, nr_mes_reajuste_w, nm_usuario_p, cd_estabelecimento_p);
				end if;
			end if;
		end if;
	elsif (ie_opcao_p	= 'E') then
		if (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then
			update	pls_sca_vinculo
			set	dt_fim_vigencia	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= nr_seq_vinculo_sca_w;
		end if;
	end if;
	end;
end loop;
close C01;

if (coalesce(ie_commit_p,'N') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_liberar_vinculo_sca ( nr_seq_contrato_p bigint, nr_seq_segurado_p bigint, nr_seq_vinculo_sca_p bigint, ie_opcao_p text, ie_att_mes_reajuste_p text, ie_commit_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

