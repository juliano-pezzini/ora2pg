-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_w_consulta_benef ( cd_usuario_convenio_p text, nm_pessoa_fisica_p text, nr_cpf_p text, nr_identidade_p text, nm_usuario_p text) AS $body$
DECLARE

			 
nr_atendimento_w		bigint;
cd_pessoa_fisica_w	varchar(10);
nm_pessoa_fisica_w	varchar(60);
nr_cpf_w			varchar(11);
nr_identidade_w		varchar(15);
dt_nascimento_w		timestamp;
cd_usuario_convenio_w	varchar(30);
ds_orgao_emissor_ci_w	pessoa_fisica.ds_orgao_emissor_ci%type;
sg_emissora_ci_w		varchar(2);
ie_sexo_w		varchar(1);
cd_cep_w		varchar(15);
cd_municipio_ibge_w	varchar(6);
ds_municipio_w		varchar(40);
sg_estado_w		compl_pessoa_fisica.sg_estado%type;
ds_bairro_w		varchar(80);
nr_endereco_w		varchar(5);
ds_complemento_w		varchar(40);
nr_telefone_w		varchar(15);
ds_email_w		varchar(255);
nm_mae_w		varchar(60);

C01 CURSOR FOR 
	SELECT	nr_atendimento 
	from	atend_categoria_convenio 
	where	somente_numero(cd_usuario_convenio) = somente_numero(cd_usuario_convenio_p) 
	order by 	nr_atendimento;
	
C02 CURSOR FOR 
	SELECT	cd_pessoa_fisica, 
		substr(obter_nome_pf(cd_pessoa_fisica),1,60), 
		nr_cpf, 
		nr_identidade, 
		dt_nascimento, 
		ds_orgao_emissor_ci, 
		sg_emissora_ci, 
		ie_sexo 
	from	pessoa_fisica 
	where	lower(substr(obter_nome_pf(cd_pessoa_fisica),1,255)) like '%' || lower(nm_pessoa_fisica_p) || '%' 
	order by	substr(obter_nome_pf(cd_pessoa_fisica),1,255);
	
C03 CURSOR FOR 
	SELECT	cd_pessoa_fisica, 
		substr(obter_nome_pf(cd_pessoa_fisica),1,60), 
		nr_cpf, 
		nr_identidade, 
		dt_nascimento, 
		ds_orgao_emissor_ci, 
		sg_emissora_ci, 
		ie_sexo 
	from	pessoa_fisica 
	where	somente_numero(nr_cpf)	= somente_numero(nr_cpf_p) 
	order by	substr(obter_nome_pf(cd_pessoa_fisica),1,255);			
	 
C04 CURSOR FOR 
	SELECT	cd_pessoa_fisica, 
		substr(obter_nome_pf(cd_pessoa_fisica),1,60), 
		nr_cpf, 
		nr_identidade, 
		dt_nascimento, 
		ds_orgao_emissor_ci, 
		sg_emissora_ci, 
		ie_sexo 
	from	pessoa_fisica 
	where	nr_identidade	= nr_identidade_p 
	order by	substr(obter_nome_pf(cd_pessoa_fisica),1,255);


BEGIN 
 
delete	FROM w_consulta_beneficiario;
commit;
 
if (cd_usuario_convenio_p <> '') or (cd_usuario_convenio_p IS NOT NULL AND cd_usuario_convenio_p::text <> '') then 
 
	open C01;
	loop 
	fetch C01 into	 
		nr_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		begin 
		select	max(cd_pessoa_fisica) 
		into STRICT	cd_pessoa_fisica_w 
		from	atendimento_paciente 
		where	nr_atendimento = nr_atendimento_w;
		exception 
			when others then 
			cd_pessoa_fisica_w	:= cd_pessoa_fisica_w;
		end;
		 
		begin 
		select	max(substr(obter_nome_pf(cd_pessoa_fisica),1,60)), 
			max(nr_cpf), 
			max(nr_identidade), 
			max(dt_nascimento), 
			max(ds_orgao_emissor_ci), 
			max(sg_emissora_ci), 
			max(ie_sexo) 
		into STRICT	nm_pessoa_fisica_w, 
			nr_cpf_w, 
			nr_identidade_w, 
			dt_nascimento_w, 
			ds_orgao_emissor_ci_w, 
			sg_emissora_ci_w, 
			ie_sexo_w 
		from	pessoa_fisica 
		where	cd_pessoa_fisica 	= cd_pessoa_fisica_w;
		exception 
			when others then			 
			nm_pessoa_fisica_w	:= nm_pessoa_fisica_w;
			nr_cpf_w		:= nr_cpf_w;
			nr_identidade_w		:= nr_identidade_w;
			dt_nascimento_w		:= dt_nascimento_w;
			ds_orgao_emissor_ci_w	:= ds_orgao_emissor_ci_w;
			sg_emissora_ci_w	:= sg_emissora_ci_w;
			ie_sexo_w		:= ie_sexo_w;
		end;	
		 
		begin 
		select	max(cd_cep), 
			max(cd_municipio_ibge), 
			max(ds_municipio), 
			max(sg_estado), 
			max(ds_bairro), 
			max(nr_endereco), 
			max(ds_complemento), 
			max(nr_telefone), 
			max(ds_email)		 
		into STRICT	cd_cep_w, 
			cd_municipio_ibge_w, 
			ds_municipio_w, 
			sg_estado_w, 
			ds_bairro_w, 
			nr_endereco_w, 
			ds_complemento_w, 
			nr_telefone_w, 
			ds_email_w	 
		from	compl_pessoa_fisica 
		where	cd_pessoa_fisica 	= cd_pessoa_fisica_w 
		and	ie_tipo_complemento	= 1;
		exception 
			when others then 
			cd_cep_w		:= cd_cep_w;
			cd_municipio_ibge_w	:= cd_municipio_ibge_w;
			ds_municipio_w		:= ds_municipio_w;
			sg_estado_w		:= sg_estado_w;
			ds_bairro_w		:= ds_bairro_w;
			nr_endereco_w		:= nr_endereco_w;
			ds_complemento_w	:= ds_complemento_w;
			nr_telefone_w		:= nr_telefone_w;
			ds_email_w		:= ds_email_w;
		end;
		 
		begin 
		select	nm_contato 
		into STRICT	nm_mae_w 
		from 	compl_pessoa_fisica 
		where	cd_pessoa_fisica 	= cd_pessoa_fisica_w 
		and	ie_tipo_complemento	= 5;
		exception 
			when others then 
			nm_mae_w		:= nm_mae_w;
		end;
		 
		insert into w_consulta_beneficiario( 
			cd_pessoa_fisica,     
			cd_usuario_convenio,   
			dt_atualizacao,      
			dt_atualizacao_nrec,   
			dt_nascimento,      
			nm_pessoa_fisica,     
			nm_usuario,        
			nm_usuario_nrec,     
			nr_cpf,	 
			ds_orgao_emissor, 
			sg_uf_orgao_emissor, 
			ie_sexo, 
			nr_identidade, 
			cd_cep,			 
			cd_cidade,		 
			ds_cidade,		 
			sg_uf,			 
			ds_bairro,	 
			nr_endereco,		 
			ds_complemento,		 
			nr_telefone_1,		 
			ds_email, 
			nm_mae) 
		values ( 
			cd_pessoa_fisica_w, 
			cd_usuario_convenio_p, 
			clock_timestamp(), 
			clock_timestamp(), 
			dt_nascimento_w, 
			substr(nm_pessoa_fisica_w,1,128), 
			nm_usuario_p, 
			nm_usuario_p, 
			nr_cpf_w, 
			ds_orgao_emissor_ci_w, 
			sg_emissora_ci_w, 
			ie_sexo_w, 
			nr_identidade_w, 
			cd_cep_w, 
			cd_municipio_ibge_w, 
			ds_municipio_w, 
			sg_estado_w, 
			substr(ds_bairro_w,1,30), 
			nr_endereco_w, 
			ds_complemento_w, 
			nr_telefone_w, 
			substr(ds_email_w,1,50), 
			nm_mae_w);
		 
		end;
	end loop;
	close C01;
	 
elsif (nm_pessoa_fisica_p <> '') or (nm_pessoa_fisica_p IS NOT NULL AND nm_pessoa_fisica_p::text <> '') then 
	 
	open C02;
	loop 
	fetch C02 into 
		cd_pessoa_fisica_w, 
		nm_pessoa_fisica_w, 
		nr_cpf_w, 
		nr_identidade_w, 
		dt_nascimento_w, 
		ds_orgao_emissor_ci_w, 
		sg_emissora_ci_w, 
		ie_sexo_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		 
		select	max(nr_atendimento) 
		into STRICT	nr_atendimento_w 
		from	atendimento_paciente 
		where	cd_pessoa_fisica 	= cd_pessoa_fisica_w;
			 
		select	max(cd_usuario_convenio) 
		into STRICT	cd_usuario_convenio_w 
		from	atend_categoria_convenio 
		where	nr_atendimento	= nr_atendimento_w;
		 
		begin 
		select	max(cd_cep), 
			max(cd_municipio_ibge), 
			max(ds_municipio), 
			max(sg_estado), 
			max(ds_bairro), 
			max(nr_endereco), 
			max(ds_complemento), 
			max(nr_telefone), 
			max(ds_email)		 
		into STRICT	cd_cep_w, 
			cd_municipio_ibge_w, 
			ds_municipio_w, 
			sg_estado_w, 
			ds_bairro_w, 
			nr_endereco_w, 
			ds_complemento_w, 
			nr_telefone_w, 
			ds_email_w	 
		from	compl_pessoa_fisica 
		where	cd_pessoa_fisica 	= cd_pessoa_fisica_w 
		and	ie_tipo_complemento	= 1;
		exception 
			when others then 
			cd_cep_w		:= cd_cep_w;
			cd_municipio_ibge_w	:= cd_municipio_ibge_w;
			ds_municipio_w		:= ds_municipio_w;
			sg_estado_w		:= sg_estado_w;
			ds_bairro_w		:= ds_bairro_w;
			nr_endereco_w		:= nr_endereco_w;
			ds_complemento_w	:= ds_complemento_w;
			nr_telefone_w		:= nr_telefone_w;
			ds_email_w		:= ds_email_w;
		end;
		 
		begin 
		select	nm_contato 
		into STRICT	nm_mae_w 
		from 	compl_pessoa_fisica 
		where	cd_pessoa_fisica 	= cd_pessoa_fisica_w 
		and	ie_tipo_complemento	= 5;
		exception 
			when others then 
			nm_mae_w		:= nm_mae_w;
		end;
		 
		insert into w_consulta_beneficiario( 
			cd_pessoa_fisica,     
			cd_usuario_convenio,   
			dt_atualizacao,      
			dt_atualizacao_nrec,   
			dt_nascimento,      
			nm_pessoa_fisica,     
			nm_usuario,        
			nm_usuario_nrec,     
			nr_cpf,	 
			ds_orgao_emissor, 
			sg_uf_orgao_emissor, 
			ie_sexo, 
			nr_identidade, 
			cd_cep,			 
			cd_cidade,		 
			ds_cidade,		 
			sg_uf,			 
			ds_bairro,	 
			nr_endereco,		 
			ds_complemento,		 
			nr_telefone_1,		 
			ds_email, 
			nm_mae) 
		values ( 
			cd_pessoa_fisica_w, 
			cd_usuario_convenio_w, 
			clock_timestamp(), 
			clock_timestamp(), 
			dt_nascimento_w, 
			substr(nm_pessoa_fisica_w,1,128), 
			nm_usuario_p, 
			nm_usuario_p, 
			nr_cpf_w, 
			ds_orgao_emissor_ci_w, 
			sg_emissora_ci_w, 
			ie_sexo_w, 
			nr_identidade_w, 
			cd_cep_w, 
			cd_municipio_ibge_w, 
			ds_municipio_w, 
			sg_estado_w, 
			substr(ds_bairro_w,1,30), 
			nr_endereco_w, 
			ds_complemento_w, 
			nr_telefone_w, 
			substr(ds_email_w,1,50), 
			nm_mae_w);
		 
		end;
	end loop;
	close C02;
	 
elsif (nr_cpf_p <> '') or (nr_cpf_p IS NOT NULL AND nr_cpf_p::text <> '') then 
 
	open C03;
	loop 
	fetch C03 into 
		cd_pessoa_fisica_w, 
		nm_pessoa_fisica_w, 
		nr_cpf_w, 
		nr_identidade_w, 
		dt_nascimento_w, 
		ds_orgao_emissor_ci_w, 
		sg_emissora_ci_w, 
		ie_sexo_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		 
		select	max(nr_atendimento) 
		into STRICT	nr_atendimento_w 
		from	atendimento_paciente 
		where	cd_pessoa_fisica 	= cd_pessoa_fisica_w;
			 
		select	max(cd_usuario_convenio) 
		into STRICT	cd_usuario_convenio_w 
		from	atend_categoria_convenio 
		where	nr_atendimento	= nr_atendimento_w;
		 
		begin 
		select	max(cd_cep), 
			max(cd_municipio_ibge), 
			max(ds_municipio), 
			max(sg_estado), 
			max(ds_bairro), 
			max(nr_endereco), 
			max(ds_complemento), 
			max(nr_telefone), 
			max(ds_email)		 
		into STRICT	cd_cep_w, 
			cd_municipio_ibge_w, 
			ds_municipio_w, 
			sg_estado_w, 
			ds_bairro_w, 
			nr_endereco_w, 
			ds_complemento_w, 
			nr_telefone_w, 
			ds_email_w	 
		from	compl_pessoa_fisica 
		where	cd_pessoa_fisica 	= cd_pessoa_fisica_w 
		and	ie_tipo_complemento	= 1;
		exception 
			when others then 
			cd_cep_w		:= cd_cep_w;
			cd_municipio_ibge_w	:= cd_municipio_ibge_w;
			ds_municipio_w		:= ds_municipio_w;
			sg_estado_w		:= sg_estado_w;
			ds_bairro_w		:= ds_bairro_w;
			nr_endereco_w		:= nr_endereco_w;
			ds_complemento_w	:= ds_complemento_w;
			nr_telefone_w		:= nr_telefone_w;
			ds_email_w		:= ds_email_w;
		end;
		 
		begin 
		select	nm_contato 
		into STRICT	nm_mae_w 
		from 	compl_pessoa_fisica 
		where	cd_pessoa_fisica 	= cd_pessoa_fisica_w 
		and	ie_tipo_complemento	= 5;
		exception 
			when others then 
			nm_mae_w		:= nm_mae_w;
		end;
		 
		insert into w_consulta_beneficiario( 
			cd_pessoa_fisica,     
			cd_usuario_convenio,   
			dt_atualizacao,      
			dt_atualizacao_nrec,   
			dt_nascimento,      
			nm_pessoa_fisica,     
			nm_usuario,        
			nm_usuario_nrec,     
			nr_cpf,	 
			ds_orgao_emissor, 
			sg_uf_orgao_emissor, 
			ie_sexo, 
			nr_identidade, 
			cd_cep,			 
			cd_cidade,		 
			ds_cidade,		 
			sg_uf,			 
			ds_bairro,	 
			nr_endereco,		 
			ds_complemento,		 
			nr_telefone_1,		 
			ds_email, 
			nm_mae) 
		values ( 
			cd_pessoa_fisica_w, 
			cd_usuario_convenio_w, 
			clock_timestamp(), 
			clock_timestamp(), 
			dt_nascimento_w, 
			substr(nm_pessoa_fisica_w,1,128), 
			nm_usuario_p, 
			nm_usuario_p, 
			nr_cpf_w, 
			ds_orgao_emissor_ci_w, 
			sg_emissora_ci_w, 
			ie_sexo_w, 
			nr_identidade_w, 
			cd_cep_w, 
			cd_municipio_ibge_w, 
			ds_municipio_w, 
			sg_estado_w, 
			substr(ds_bairro_w,1,30), 
			nr_endereco_w, 
			ds_complemento_w, 
			nr_telefone_w, 
			substr(ds_email_w,1,50), 
			nm_mae_w);
		 
		end;
	end loop;
	close C03;
 
elsif (nr_identidade_p <> '') or (nr_identidade_p IS NOT NULL AND nr_identidade_p::text <> '') then 
 
	open C04;
	loop 
	fetch C04 into 
		cd_pessoa_fisica_w, 
		nm_pessoa_fisica_w, 
		nr_cpf_w, 
		nr_identidade_w, 
		dt_nascimento_w, 
		ds_orgao_emissor_ci_w, 
		sg_emissora_ci_w, 
		ie_sexo_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin 
		 
		select	max(nr_atendimento) 
		into STRICT	nr_atendimento_w 
		from	atendimento_paciente 
		where	cd_pessoa_fisica 	= cd_pessoa_fisica_w;
			 
		select	max(cd_usuario_convenio) 
		into STRICT	cd_usuario_convenio_w 
		from	atend_categoria_convenio 
		where	nr_atendimento	= nr_atendimento_w;
		 
		begin 
		select	max(cd_cep), 
			max(cd_municipio_ibge), 
			max(ds_municipio), 
			max(sg_estado), 
			max(ds_bairro), 
			max(nr_endereco), 
			max(ds_complemento), 
			max(nr_telefone), 
			max(ds_email)		 
		into STRICT	cd_cep_w, 
			cd_municipio_ibge_w, 
			ds_municipio_w, 
			sg_estado_w, 
			ds_bairro_w, 
			nr_endereco_w, 
			ds_complemento_w, 
			nr_telefone_w, 
			ds_email_w	 
		from	compl_pessoa_fisica 
		where	cd_pessoa_fisica 	= cd_pessoa_fisica_w 
		and	ie_tipo_complemento	= 1;
		exception 
			when others then 
			cd_cep_w		:= cd_cep_w;
			cd_municipio_ibge_w	:= cd_municipio_ibge_w;
			ds_municipio_w		:= ds_municipio_w;
			sg_estado_w		:= sg_estado_w;
			ds_bairro_w		:= ds_bairro_w;
			nr_endereco_w		:= nr_endereco_w;
			ds_complemento_w	:= ds_complemento_w;
			nr_telefone_w		:= nr_telefone_w;
			ds_email_w		:= ds_email_w;
		end;
		 
		begin 
		select	nm_contato 
		into STRICT	nm_mae_w 
		from 	compl_pessoa_fisica 
		where	cd_pessoa_fisica 	= cd_pessoa_fisica_w 
		and	ie_tipo_complemento	= 5;
		exception 
			when others then 
			nm_mae_w		:= nm_mae_w;
		end;
		 
		insert into w_consulta_beneficiario( 
			cd_pessoa_fisica,     
			cd_usuario_convenio,   
			dt_atualizacao,      
			dt_atualizacao_nrec,   
			dt_nascimento,      
			nm_pessoa_fisica,     
			nm_usuario,        
			nm_usuario_nrec,     
			nr_cpf,	 
			ds_orgao_emissor, 
			sg_uf_orgao_emissor, 
			ie_sexo, 
			nr_identidade, 
			cd_cep,			 
			cd_cidade,		 
			ds_cidade,		 
			sg_uf,			 
			ds_bairro,	 
			nr_endereco,		 
			ds_complemento,		 
			nr_telefone_1,		 
			ds_email, 
			nm_mae) 
		values ( 
			cd_pessoa_fisica_w, 
			cd_usuario_convenio_w, 
			clock_timestamp(), 
			clock_timestamp(), 
			dt_nascimento_w, 
			substr(nm_pessoa_fisica_w,1,128), 
			nm_usuario_p, 
			nm_usuario_p, 
			nr_cpf_w, 
			ds_orgao_emissor_ci_w, 
			sg_emissora_ci_w, 
			ie_sexo_w, 
			nr_identidade_w, 
			cd_cep_w, 
			cd_municipio_ibge_w, 
			ds_municipio_w, 
			sg_estado_w, 
			substr(ds_bairro_w,1,30), 
			nr_endereco_w, 
			ds_complemento_w, 
			nr_telefone_w, 
			substr(ds_email_w,1,50), 
			nm_mae_w);
		 
		end;
	end loop;
	close C04;
	 
end if;
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_w_consulta_benef ( cd_usuario_convenio_p text, nm_pessoa_fisica_p text, nr_cpf_p text, nr_identidade_p text, nm_usuario_p text) FROM PUBLIC;

