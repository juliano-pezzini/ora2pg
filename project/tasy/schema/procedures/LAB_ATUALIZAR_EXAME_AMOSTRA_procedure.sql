-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_atualizar_exame_amostra ( nr_prescricao_p text, nr_seq_prescr_p text, cd_material_exame_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_prescr_proc_material_w	prescr_proc_material.nr_sequencia%type;
ie_existe_item_amostra_w	varchar(1);
nr_seq_material_w		material_exame_lab.nr_sequencia%type;
nr_seq_prescr_w			prescr_procedimento.nr_sequencia%type;
nr_seq_prescr_concat_w		varchar(255);
nr_controle_laco_w		smallint := 0;
cd_barras_w			prescr_proc_mat_item.cd_barras%type;
ie_amostra_recoleta_w		lab_parametro.ie_amostra_recoleta%type;


C01 CURSOR FOR
	SELECT 	nr_seq_prescr_proc_mat,
		nr_seq_prescr,
		cd_barras
	from 	prescr_proc_mat_item a,
		prescr_procedimento b
	where	a.nr_prescricao = b.nr_prescricao
	and	a.nr_seq_prescr = b.nr_sequencia
	and	(b.nr_seq_exame IS NOT NULL AND b.nr_seq_exame::text <> '')
	and	(b.nr_seq_recoleta IS NOT NULL AND b.nr_seq_recoleta::text <> '')
	and	b.ie_status_atend < 35
	and	a.nr_prescricao =  nr_prescricao_p
	and	obter_se_contido_char(nr_seq_prescr,nr_seq_prescr_p) = 'S';

C02 CURSOR FOR
	SELECT  nr_sequencia
	from 	prescr_procedimento
	where 	(nr_seq_exame IS NOT NULL AND nr_seq_exame::text <> '')
	and	(nr_seq_recoleta IS NOT NULL AND nr_seq_recoleta::text <> '')
	and	ie_status_atend < 35
	and	nr_prescricao = nr_prescricao_p
	and	obter_se_contido_char(nr_sequencia,nr_seq_prescr_concat_w) = 'S';


C03 CURSOR FOR
	SELECT 	b.nr_sequencia,
		a.nr_sequencia
	from 	material_exame_lab a,
		prescr_procedimento b
	where   a.cd_material_exame = b.cd_material_exame
	and	(b.nr_seq_exame IS NOT NULL AND b.nr_seq_exame::text <> '')
	and	(b.nr_seq_recoleta IS NOT NULL AND b.nr_seq_recoleta::text <> '')
	and	b.ie_status_atend < 35
	and	b.nr_prescricao = nr_prescricao_p
	and	a.nr_sequencia = nr_seq_material_w;


BEGIN

select  coalesce(max(a.ie_amostra_recoleta),'N')
into STRICT	ie_amostra_recoleta_w
from	lab_parametro a,
	prescr_medica b
where   a.cd_estabelecimento = b.cd_estabelecimento
and	b.nr_prescricao = nr_prescricao_p;

if (ie_amostra_recoleta_w = 'S') then


	if (coalesce(cd_material_exame_p::text, '') = '') then

		--Buscar sequencia da amostra do item da prescrição
		open C01;
		loop
		fetch C01 into
			nr_seq_prescr_proc_material_w,
			nr_seq_prescr_w,
			cd_barras_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin


				CALL gravar_log_lab(43,WHEB_MENSAGEM_PCK.get_texto(300203)||'  '||cd_barras_w,nm_usuario_p,nr_prescricao_p);
				commit;
				--Excluir item da amostra
				delete  FROM prescr_proc_mat_item
				where	nr_prescricao =  nr_prescricao_p
				and	nr_seq_prescr =  nr_seq_prescr_w;

				--Verificar se existem mais exames na amostra
				select 	coalesce(MAX('S'),'N')
				into STRICT	ie_existe_item_amostra_w
				from 	prescr_proc_mat_item
				where   nr_seq_prescr_proc_mat = nr_seq_prescr_proc_material_w;

				if (ie_existe_item_amostra_w = 'N') then

					--Excluindo a amostra, pois não contém mais nenhum exame
					delete 	FROM prescr_proc_material
					where 	nr_sequencia = nr_seq_prescr_proc_material_w;

				end if;
				--Criada esta variável para garantir que somente os itens que passaram por este cursor irão passar pela rotina de geração do seqlab e da amostra.
				nr_seq_prescr_concat_w := nr_seq_prescr_w||','||nr_seq_prescr_concat_w;
			end;
		end loop;
		close C01;

		open C02;
		loop
		fetch C02 into
			nr_seq_prescr_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			--Criado um novo cursor para a geração da amostra e seqlab, porque a execução deste somente pode ser realizada após a atualização de todas os dados da prescr_proc_mat_item e prescr_proc_material
			CALL Gerar_Prescr_Proc_Seq_Lab(nr_prescricao_p,nm_usuario_p,'P',nr_seq_prescr_w);
			CALL gerar_prescr_proc_mat_item(nr_prescricao_p,nm_usuario_p,cd_estabelecimento_p, nr_seq_prescr_w);
			end;
		end loop;
		close C02;


	else

		select 	MAX(b.nr_sequencia),
			MAX(a.nr_sequencia)
		into STRICT 	nr_seq_prescr_w,
			nr_seq_material_w
		from 	material_exame_lab a,
			prescr_procedimento b
		where   a.cd_material_exame = b.cd_material_exame
		and	(b.nr_seq_exame IS NOT NULL AND b.nr_seq_exame::text <> '')
		and	(b.nr_seq_recoleta IS NOT NULL AND b.nr_seq_recoleta::text <> '')
		and	b.ie_status_atend < 35
		and	b.nr_prescricao = nr_prescricao_p
		and	b.nr_sequencia = nr_seq_prescr_p;


		open C03;
		loop
		fetch C03 into
			nr_seq_prescr_w,
			nr_seq_material_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin

				select 	MAX(nr_sequencia),
					max(cd_barras)
				into STRICT	nr_seq_prescr_proc_material_w,
					cd_barras_w
				from 	prescr_proc_material
				where	nr_prescricao =  nr_prescricao_p
				and	nr_seq_material = nr_seq_material_w;


				if (nr_seq_prescr_proc_material_w IS NOT NULL AND nr_seq_prescr_proc_material_w::text <> '') then

					CALL gravar_log_lab(43,WHEB_MENSAGEM_PCK.get_texto(300203)||'  '||cd_barras_w,nm_usuario_p,nr_prescricao_p);
					commit;

					delete 	FROM prescr_proc_material
					where 	nr_sequencia = nr_seq_prescr_proc_material_w;
					commit;
				end if;

			end;
		end loop;
		close C03;

		CALL Gerar_Prescr_Proc_Seq_Lab(nr_prescricao_p,nm_usuario_p,'P');

		CALL gerar_prescr_proc_mat_item(nr_prescricao_p,nm_usuario_p,cd_estabelecimento_p);

	end if;
end if;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_atualizar_exame_amostra ( nr_prescricao_p text, nr_seq_prescr_p text, cd_material_exame_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

