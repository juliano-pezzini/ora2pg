-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_imp_result_imunohemato ( nr_seq_exame_lote_p bigint, nr_seq_doacao_p bigint, dt_liberacao_p timestamp,--data/hora do resultado do item Identificacao do arquivo
 nr_seq_amostra_p bigint,--Numero sequencial da amostra na rotina  do item Identificacao das amostras
 ie_direta_p text, ie_reversa_p text, ie_fator_rh_p text, ie_controle_rh_p text, ie_pai_p text, ie_dfraco_p text, ie_cde_p text, ie_hemoglobina_an_p text, ds_lote_kit_p text default null, dt_vencimento_lote_p timestamp default null, cd_estabelecimento_p bigint DEFAULT NULL, nm_usuario_p text DEFAULT NULL) AS $body$
DECLARE


nr_seq_exame_w		bigint;
cd_codigo_externo_w	varchar(15);
ds_resultado_w		varchar(255) := '';
nr_Seq_kit_w		bigint;
				
C01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_codigo_externo
	from 	san_exame
	where	(cd_codigo_externo IS NOT NULL AND cd_codigo_externo::text <> '')
	and	coalesce(cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p
	order by cd_codigo_externo;
				

BEGIN

/*log 9004 - etapas
    log 9005 - confirmacao
    log 9006 - exception*/
CALL gravar_log_tasy(9004,wheb_mensagem_pck.get_texto(309623, 'NR_SEQ_DOACAO_P=' || nr_seq_doacao_p || ';NR_SEQ_EXAME_LOTE_P=' || nr_seq_exame_lote_p),nm_usuario_p);
					-- Importacao sorologia/imunohematologia - Etapa 1 - Sequencia doacao: #@NR_SEQ_DOACAO_P#@ Sequencia lote: #@NR_SEQ_EXAME_LOTE_P#@
if (nr_seq_exame_lote_p IS NOT NULL AND nr_seq_exame_lote_p::text <> '') then

	open C01;
	loop
	fetch C01 into	
		nr_seq_exame_w,
		cd_codigo_externo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ds_resultado_w := '';
		
		if (cd_codigo_externo_w in ('9','09')) then
			ds_resultado_w := trim(both ie_direta_p);
			
		elsif (cd_codigo_externo_w = '10') then
			ds_resultado_w := trim(both ie_reversa_p);
			
		elsif (cd_codigo_externo_w = '11') then
			ds_resultado_w := trim(both ie_fator_rh_p);
			
		elsif (cd_codigo_externo_w = '12') then
			ds_resultado_w := trim(both ie_controle_rh_p);
			
		elsif (cd_codigo_externo_w = '13') then
			ds_resultado_w := trim(both ie_pai_p);
			
		elsif (cd_codigo_externo_w = '14') then
			ds_resultado_w := trim(both ie_dfraco_p);
			
		elsif (cd_codigo_externo_w = '15') then
			ds_resultado_w := trim(both ie_cde_p);
			
		elsif (cd_codigo_externo_w = '16') then
			ds_resultado_w := trim(both ie_hemoglobina_an_p);
		end if;
		
		if (ds_resultado_w = 'P') then
			ds_resultado_w := wheb_mensagem_pck.get_texto(309095); -- Positivo
		elsif (ds_resultado_w = 'N') then
			ds_resultado_w := wheb_mensagem_pck.get_texto(309096); -- Negativo
		elsif (ds_resultado_w = 'AND') then
			ds_resultado_w := wheb_mensagem_pck.get_texto(309097); -- Indeterminado
		end if;
		
		begin
		if (length(ds_resultado_w) > 0) then
			
			select	max(nr_sequencia)
			into STRICT 	nr_Seq_kit_w
			from	san_kit_exame
		 	where	nr_Seq_exame = nr_Seq_Exame_w
			and	ds_lote_kit = ds_lote_kit_p
			and	clock_timestamp() between dt_vigencia_ini and dt_vigencia_final
      and ie_exame_interno = 'N';
			
			update	san_exame_realizado
			set	nr_amostra = nr_seq_amostra_p,
				dt_atualizacao = clock_timestamp(),
				nm_usuario = nm_usuario_p,
				dt_realizado = coalesce(dt_liberacao_p,clock_timestamp()),
				ds_resultado = ds_resultado_w,
				dt_vencimento_lote = CASE WHEN dt_vencimento_lote_p = NULL THEN dt_vencimento_lote  ELSE dt_vencimento_lote_p END ,
				nr_kit_lote = nr_Seq_kit_w,
				ds_lote_kit = CASE WHEN ds_lote_kit_p = NULL THEN ds_lote_kit  ELSE ds_lote_kit_p END
			where 	nr_seq_exame_lote = nr_seq_exame_lote_p
			and	nr_seq_exame = nr_seq_exame_w;
		end if;

		commit;
		exception
		when others then
			CALL gravar_log_tasy(9006,wheb_mensagem_pck.get_texto(309625,'NR_SEQ_EXAME_W='||nr_seq_exame_w||';NR_SEQ_EXAME_LOTE_P='||nr_seq_exame_lote_p||';DS_RESULTADO_W='||ds_resultado_w),nm_usuario_p);
								-- Importacao sorologia/imunohematologia - Excecao1 - Sequencia exame_w: #@NR_SEQ_EXAME_W#@ Sequencia lote: #@NR_SEQ_EXAME_LOTE_P#@ Resultado: #@DS_RESULTADO_W#@, #@#@
		end;
		end;
	end loop;
	close C01;
else
	CALL gravar_log_tasy(9005,wheb_mensagem_pck.get_texto(309628,'NR_SEQ_DOACAO_P='||nr_seq_doacao_p||';NR_SEQ_EXAME_LOTE_P='||nr_seq_exame_lote_p),nm_usuario_p);
						-- Importacao sorologia/imunohematologia - Exame nao importado por falta de dados - Sequencia doacao: #@NR_SEQ_DOACAO_P#@ Sequencia lote: #@NR_SEQ_EXAME_LOTE_P#@
end if;	
	
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_imp_result_imunohemato ( nr_seq_exame_lote_p bigint, nr_seq_doacao_p bigint, dt_liberacao_p timestamp, nr_seq_amostra_p bigint, ie_direta_p text, ie_reversa_p text, ie_fator_rh_p text, ie_controle_rh_p text, ie_pai_p text, ie_dfraco_p text, ie_cde_p text, ie_hemoglobina_an_p text, ds_lote_kit_p text default null, dt_vencimento_lote_p timestamp default null, cd_estabelecimento_p bigint DEFAULT NULL, nm_usuario_p text DEFAULT NULL) FROM PUBLIC;

