-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_interf_k100_ecd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


ie_ind_movimento_w		varchar(2);
ds_arquivo_w			varchar(4000);
ds_compl_arquivo_w		varchar(4000);
ds_linha_w			varchar(8000);
nr_linha_w			bigint 		:= qt_linha_p;
nr_seq_registro_w		bigint 		:= nr_sequencia_p;
sep_w 				varchar(1) 		:= '|';
tp_registro_w			varchar(15) 		:= 'K100';
qt_evento_w			smallint		:= 0;
ie_evento_w			varchar(1)		:= 'N';
dt_ini_emp_w			timestamp 			:= dt_inicio_p;
dt_fin_emp_w			timestamp 			:= dt_fim_p;
nr_seq_grupo_emp_w  		bigint;

c01 CURSOR FOR
SELECT	coalesce(p.cd_bacen, '01058') nr_cod_pais,
	gee.cd_empresa,
	emp.cd_base_cgc,
	obter_nome_empresa(gee.cd_empresa) ds_nome,
	coalesce(gee.pr_participacao, 0) nr_per_part_w,
	100 nr_per_cons
FROM grupo_emp_estrutura gee, estabelecimento estab, empresa emp, pessoa_juridica pj
LEFT OUTER JOIN pais p ON (pj.nr_seq_pais = p.nr_sequencia)
WHERE emp.cd_empresa 		= gee.cd_empresa and estab.cd_empresa 	= emp.cd_empresa and pj.cd_cgc 		= estab.cd_cgc and emp.ie_situacao     	= 'A' and estab.ie_situacao   	= 'A' and estab.ie_tipo_estab 	= 'M' and (gee.dt_inicio_vigencia <= dt_fin_emp_w) and (coalesce(gee.dt_fim_vigencia::text, '') = '' or gee.dt_fim_vigencia <= dt_fin_emp_w)  and gee.nr_seq_grupo 	= nr_seq_grupo_emp_w order by 	gee.ie_tipo_estrutura;

dados_grupo_emp_w	c01%rowtype;


BEGIN

nr_seq_grupo_emp_w := holding_pck.get_grupo_emp_estrut_vigente(cd_empresa_p);

open C01;
loop
fetch C01 into dados_grupo_emp_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	count(*)
	into STRICT	qt_evento_w
	from	ctb_sit_especial_empresa sit
	where	sit.cd_empresa = dados_grupo_emp_w.cd_empresa
	and	sit.dt_situacao between dt_ini_emp_w and dt_fin_emp_w;

	if (qt_evento_w > 0) then
		ie_evento_w	:=	'S';
	end if;

	ds_linha_w	:= substr(	sep_w || tp_registro_w 				||
					sep_w || dados_grupo_emp_w.nr_cod_pais		|| 
					sep_w || dados_grupo_emp_w.cd_empresa 		|| 
					sep_w || dados_grupo_emp_w.cd_base_cgc		|| 
					sep_w || dados_grupo_emp_w.ds_nome 		|| 
					sep_w || dados_grupo_emp_w.nr_per_part_w	|| 
					sep_w || ie_evento_w 				|| 
					sep_w || dados_grupo_emp_w.nr_per_cons		|| 
					sep_w || to_char(dt_ini_emp_w, 'ddmmyyyy') 	|| 
					sep_w || to_char(dt_fin_emp_w, 'ddmmyyyy') 	|| 
					sep_w,1,8000);

	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_compl_arquivo_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w	:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;

	insert into ctb_sped_registro(
			nr_sequencia,
			ds_arquivo,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_controle_sped,
			ds_arquivo_compl,
			cd_registro,
			nr_linha)
		values (	nr_seq_registro_w,
			ds_arquivo_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_controle_p,
			ds_compl_arquivo_w,
			tp_registro_w,
			nr_linha_w);

	if (qt_evento_w > 0) then
		SELECT * FROM ctb_gerar_interf_K110_ecd(nr_seq_controle_p, nm_usuario_p, cd_estabelecimento_p, dt_inicio_p, dt_fim_p, dados_grupo_emp_w.cd_empresa, nr_linha_w, nr_seq_registro_w) INTO STRICT nr_linha_w, nr_seq_registro_w;
	end if;
	end;
end loop;
close C01;

commit;

qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_interf_k100_ecd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

