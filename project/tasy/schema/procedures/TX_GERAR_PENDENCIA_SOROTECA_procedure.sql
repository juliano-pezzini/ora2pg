-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tx_gerar_pendencia_soroteca () AS $body$
DECLARE



dt_referencia_w		integer;
qt_intervalo_w		integer;
dt_vigencia_ini_w	timestamp;
dt_vigencia_fim_w	timestamp;
qt_dias_vencimento_w	integer;
dt_ultima_geracao_w	timestamp;
cd_pessoa_fisica_w	varchar(10);
nr_seq_receptor_w	bigint;
dt_vencimento_final_w	timestamp;
ie_executa_job_w	varchar(1) := 'N';
nr_proximo_mes_w	smallint;
nr_mes_atual_w		smallint;
nm_usuario_w		varchar(15);
nr_seq_encaminhamento_w	bigint;
nr_seq_regra_w		bigint;


C01 CURSOR FOR
	SELECT distinct	cd_pessoa_fisica
	from	tx_encaminhamento
	where	ie_status = 'LTX'
	and	coalesce(dt_inativacao::text, '') = ''
	order by cd_pessoa_fisica;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	tx_receptor a
	where	cd_pessoa_fisica = cd_pessoa_fisica_w
	and	exists (SELECT	1
			from	tx_recep_controle_central b
			where	a.nr_sequencia = b.nr_seq_receptor
			and	(b.dt_coleta IS NOT NULL AND b.dt_coleta::text <> ''))
	and	not exists (	select	1
				from	tx_recep_controle_central b
				where	a.nr_sequencia = b.nr_seq_receptor
				and	coalesce(b.dt_coleta::text, '') = '');


C03 CURSOR FOR
	SELECT distinct	cd_pessoa_fisica
	from	tx_recep_controle_central a,
		tx_receptor b
	where	a.nr_seq_receptor = b.nr_sequencia
	and	trunc(clock_timestamp()) >= trunc(a.dt_vencimento)
	and	coalesce(dt_coleta::text, '') = '';

C04 CURSOR FOR
	SELECT	nr_sequencia
	from	tx_encaminhamento
	where	cd_pessoa_fisica = cd_pessoa_fisica_w
	and	coalesce(dt_inativacao::text, '') = ''
	and	ie_status = 'LTX';


BEGIN

nm_usuario_w := 'tasy';

select	max(dt_referencia),
	max(qt_intervalo),
	max(qt_dias_vencimento),
	max(dt_ultima_geracao),
	max(dt_vigencia_ini),
	max(nr_sequencia)
into STRICT	dt_referencia_w,
	qt_intervalo_w,
	qt_dias_vencimento_w,
	dt_ultima_geracao_w,
	dt_vigencia_ini_w,
	nr_seq_regra_w
from	tx_regra_gerar_soroteca
where	ie_situacao = 'A'
and	dt_vigencia_fim > clock_timestamp();


if (coalesce(dt_ultima_geracao_w::text, '') = '') then

	if (trunc(clock_timestamp()) = trunc(dt_vigencia_ini_w)) then
		ie_executa_job_w := 'S';
	else
		ie_executa_job_w := 'N';
	end if;

else
	nr_proximo_mes_w := obter_somente_numero(to_char(pkg_date_utils.add_month(dt_ultima_geracao_w,qt_intervalo_w,0),'mm'));
	nr_mes_atual_w   := obter_somente_numero(to_char(clock_timestamp(),'mm'));

	if (nr_proximo_mes_w = nr_mes_atual_w) and (dt_referencia_w = obter_somente_numero(to_char(clock_timestamp(),'dd'))) then
		ie_executa_job_w := 'S';
	else
		ie_executa_job_w := 'N';
	end if;

end if;

if (ie_executa_job_w = 'S') then

	dt_vencimento_final_w := clock_timestamp() + qt_dias_vencimento_w;

	update	tx_regra_gerar_soroteca
	set	dt_ultima_geracao = clock_timestamp()
	where	nr_sequencia = nr_seq_regra_w;

	open C01;
	loop
	fetch C01 into
		cd_pessoa_fisica_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		open C02;
		loop
		fetch C02 into
			nr_seq_receptor_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			insert into tx_recep_controle_central(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_vencimento,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_receptor)
			values (	nextval('tx_recep_controle_central_seq'),
				clock_timestamp(),
				nm_usuario_w,
				dt_vencimento_final_w,
				clock_timestamp(),
				nm_usuario_w,
				nr_seq_receptor_w);

			commit;

			end;
		end loop;
		close C02;

		end;
	end loop;
	close C01;
end if;


open C03;
loop
fetch C03 into
	cd_pessoa_fisica_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin


	open C04;
	loop
	fetch C04 into
		nr_seq_encaminhamento_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		CALL tx_alterar_status_encam(nr_seq_encaminhamento_w,'LV',nm_usuario_w);
		end;
	end loop;
	close C04;

	end;
end loop;
close C03;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tx_gerar_pendencia_soroteca () FROM PUBLIC;

