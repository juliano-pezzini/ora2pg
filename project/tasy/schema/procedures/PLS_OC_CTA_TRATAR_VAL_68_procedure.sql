-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_68 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Aplicar a validação de item dentro do período de vigência.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
*/
qt_cnt_w		integer;
nr_index_sel_w		integer;
ds_obs_w		pls_oc_cta_selecao_ocor_v.ds_observacao%type;
tb_seq_selecao_w	dbms_sql.number_table;
tb_observacao_w		dbms_sql.varchar2_table;
tb_valido_w		dbms_sql.varchar2_table;
dt_referencia_mat_w	pls_material.dt_limite_utilizacao%type;

-- Informações da validação de período de internação com relação ao item
C02 CURSOR(	nr_seq_oc_cta_comb_p	dados_regra_p.nr_sequencia%type) FOR
SELECT	a.ie_validar_proc_mat,
	coalesce(a.ie_considera_dt_atual, 'N') ie_considera_dt_atual,
	coalesce(a.ie_considerar_dt_limite_util,'N') ie_considerar_dt_limite_util
from	pls_oc_cta_val_vig_item a
where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;

C03 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_ocor_v.nr_id_transacao%type,
		ie_valido_pc	text,
		ds_obs_pc		pls_oc_cta_selecao_ocor_v.ds_observacao%type) FOR
	SELECT	sel.nr_sequencia,
		'P' ie_tipo_item,
		ie_valido_pc,
		ds_obs_pc,
		c_proc.dt_procedimento 		dt_item,
		c_proc.dt_procedimento_imp 	dt_item_imp,
		c_proc.cd_procedimento		cd_procedimento,
		proc.ie_origem_proced		ie_origem_proced,
		null				nr_seq_material,
		null				dt_inclusao,
		null				dt_exclusao,
		null				dt_limite_utilizacao,
		proc.ie_situacao		ie_situacao
	from	pls_oc_cta_selecao_ocor_v 	sel,
		pls_conta_proc_ocor_v 		c_proc,
		procedimento			proc
	where	sel.nr_id_transacao = nr_id_transacao_pc
	and	sel.ie_valido = 'S'
	and	sel.ie_tipo_registro = 'P'
	and	c_proc.nr_sequencia  = sel.nr_seq_conta_proc
	and	c_proc.cd_procedimento = proc.cd_procedimento
	and	c_proc.ie_origem_proced = proc.ie_origem_proced
	
union all

	SELECT	sel.nr_sequencia,
		'M' ie_tipo_item,
		ie_valido_pc,
		ds_obs_pc,
		c_mat.dt_atendimento 		dt_item,
		c_mat.dt_atendimento_imp	dt_item_imp,
		null				cd_procedimento,
		null				ie_origem_proced,
		c_mat.nr_seq_material		nr_seq_material,
		trunc(mat.dt_inclusao)		dt_inclusao,
		trunc(mat.dt_exclusao)		dt_exclusao,
		trunc(mat.dt_limite_utilizacao)	dt_limite_utilizacao,
		mat.ie_situacao			ie_situacao
	from	pls_oc_cta_selecao_ocor_v sel,
		pls_conta_mat_ocor_v c_mat,
		pls_material	mat
	where	sel.nr_id_transacao = nr_id_transacao_pc
	and	sel.ie_tipo_registro = 'M'
	and	sel.ie_valido = 'S'
	and	c_mat.nr_sequencia   = sel.nr_seq_conta_mat
	and	c_mat.nr_seq_material = mat.nr_sequencia;
BEGIN


-- Deve existir informação da regra para aplicar a validação
if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '') then

	for	r_C02_w in C02(dados_regra_p.nr_sequencia) loop

		-- Obter o controle padrão para quantidade de registros que será enviada a cada vez para a tabela de seleção.
		qt_cnt_w := pls_cta_consistir_pck.qt_registro_transacao_w;

		-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
		CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);

		tb_seq_selecao_w.delete;
		tb_observacao_w.delete;
		tb_valido_w.delete;
		nr_index_sel_w := 0;
		for	r_C03_w in C03(nr_id_transacao_p, 'S', ds_obs_w) loop

			--Utilizar datas da conta selecionada
			if (r_C02_w.ie_validar_proc_mat = 'S') then

				-- Limpa a variável de observação
				ds_obs_w := null;

				if (r_C02_w.ie_considerar_dt_limite_util = 'S') then
					dt_referencia_mat_w := coalesce(r_C03_w.dt_limite_utilizacao, r_C03_w.dt_exclusao);
				else
					dt_referencia_mat_w := r_C03_w.dt_exclusao;
				end if;

				--Se for evento de importação, considera campos imp
				if (dados_regra_p.ie_evento = 'IMP') then

					if (r_C03_w.ie_tipo_item = 'P') then

						if (r_C03_w.ie_situacao = 'I') then
							ds_obs_w	:= 'Procedimento inativo';
						end if;

						if (pls_obter_se_proc_ativo_vig(r_C03_w.cd_procedimento, r_C03_w.ie_origem_proced, r_C03_w.dt_item_imp) = 'N') then
							ds_obs_w := 'Procedimento fora do período de vigência';
						end if;
						--Inicio do proc/mat maior que data de inicio de internação
						--e data fim do procedimento antes da data da alta da internação(ou caso ainda não tenha a data da alta)
						if (ds_obs_w IS NOT NULL AND ds_obs_w::text <> '') then

							tb_seq_selecao_w(nr_index_sel_w) := r_C03_w.nr_sequencia;
							tb_observacao_w(nr_index_sel_w) :=	ds_obs_w;
							tb_valido_w(nr_index_sel_w) :=	'S';
							nr_index_sel_w := nr_index_sel_w + 1;
						end if;
					else
						--Se data do ítem for maior ou igual ao início da vigência e também menor e igual ao fím da mesma, ou caso não seja informada o fím vigência
						if (r_C03_w.dt_item_imp < r_C03_w.dt_inclusao	)then
							ds_obs_w := 'Material fora do período de vigência ';
						end if;

						if (r_C03_w.ie_situacao = 'I') then
							ds_obs_w := 'Material inativo ';
						end if;

						--Dt exclusão do material inferior a data referência
						if	((r_C03_w.dt_item_imp >= dt_referencia_mat_w AND r_C02_w.ie_considera_dt_atual = 'N') or
							((r_C03_w.dt_item_imp > fim_dia(dt_referencia_mat_w)) and (r_C02_w.ie_considera_dt_atual = 'S')))then
							ds_obs_w := 'Material excluído no dia '||to_char(dt_referencia_mat_w,'dd/mm/yyyy');
						end if;

						--Se material estiver ativo e vigente
						if (ds_obs_w IS NOT NULL AND ds_obs_w::text <> '') then
							tb_seq_selecao_w(nr_index_sel_w) := r_C03_w.nr_sequencia;
							tb_observacao_w(nr_index_sel_w) :=	ds_obs_w;
							tb_valido_w(nr_index_sel_w) :=	'S';
							nr_index_sel_w := nr_index_sel_w + 1;
						end if;

					end if;

				else

					if (r_C03_w.ie_tipo_item = 'P') then
						if (r_C03_w.ie_situacao = 'I') then
							ds_obs_w	:= 'Procedimento inativo';
						end if;

						if (pls_obter_se_proc_ativo_vig(r_C03_w.cd_procedimento, r_C03_w.ie_origem_proced, r_C03_w.dt_item) = 'N') then
							ds_obs_w := 'Procedimento fora do período de vigência';
						end if;

						--Inicio do proc/mat maior que data de inicio de internação
						--e data fim do procedimento antes da data da alta da internação(ou caso ainda não tenha a data da alta)
						if (ds_obs_w IS NOT NULL AND ds_obs_w::text <> '') then

							tb_seq_selecao_w(nr_index_sel_w) := r_C03_w.nr_sequencia;
							tb_observacao_w(nr_index_sel_w) :=	ds_obs_w;
							tb_valido_w(nr_index_sel_w) :=	'S';
							nr_index_sel_w := nr_index_sel_w + 1;
						end if;
					else

						if (r_C03_w.dt_item < r_C03_w.dt_inclusao	)then
							ds_obs_w := 'Material fora do período de vigência ';
						end if;

						if (r_C03_w.ie_situacao = 'I') then
							ds_obs_w := 'Material inativo ';
						end if;

						if	((r_C03_w.dt_item >= dt_referencia_mat_w AND r_C02_w.ie_considera_dt_atual = 'N') or
							((r_C03_w.dt_item > fim_dia(dt_referencia_mat_w)) and (r_C02_w.ie_considera_dt_atual = 'S')))then
							ds_obs_w := 'Material excluído no dia '||to_char(dt_referencia_mat_w,'dd/mm/yyyy');
						end if;

						if (ds_obs_w IS NOT NULL AND ds_obs_w::text <> '') then

							tb_seq_selecao_w(nr_index_sel_w) := r_C03_w.nr_sequencia;
							tb_observacao_w(nr_index_sel_w) :=	ds_obs_w;
							tb_valido_w(nr_index_sel_w) :=	'S';
							nr_index_sel_w := nr_index_sel_w + 1;
						end if;
					end if;
				end if;
			end if;

			if ( nr_index_sel_w = pls_cta_consistir_pck.qt_registro_transacao_w ) then
				CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
										pls_tipos_ocor_pck.clob_table_vazia,
										'SEQ',
										tb_observacao_w,
										tb_valido_w,
										nm_usuario_p);
				tb_seq_selecao_w.delete;
				tb_observacao_w.delete;
				tb_valido_w.delete;
				nr_index_sel_w		:= 0;
			end if;

		end loop; --C03
	end loop; -- C02
	/* Verificar se não chegou ao limite definido para gravar a transacao
	Daí gravar o conteudo existente na transacao */
	if (tb_seq_selecao_w.count > 0) then
		CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
														pls_tipos_ocor_pck.clob_table_vazia,
														'SEQ',
														tb_observacao_w,
														tb_valido_w,
														nm_usuario_p);
	end if;

	-- seta os registros que serão válidos ou inválidos após o processamento
	CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_68 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

