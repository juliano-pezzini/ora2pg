-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_itens_agenda_integrada ( nr_seq_agenda_int_p bigint, ds_itens_grupo_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_grupo_w		bigint;
nr_seq_proc_interno_w	bigint;
cd_especialidade_w	integer;
cd_medico_w		varchar(10);
ie_tipo_agendamento_w	varchar(15);
nr_seq_grupo_proc_w	bigint;
nr_seq_proc_interno_ww	bigint;
cd_medico_ww		varchar(10);
cd_especialidade_ww	integer;
ie_tipo_agendamento_ww	varchar(15);
nr_minuto_duracao_w	bigint;
nr_minuto_duracao_ww	bigint;
ds_itens_grupo_w	varchar(800);
tam_lista_w		bigint;
ie_pos_virgula_w	smallint	:= 0;
nr_seq_grupo_Real_w	bigint;
ds_lista_grupo_w	varchar(800);
ie_classif_agenda_w	varchar(5);
ie_classif_agenda_ww	varchar(5);
nr_seq_exame_adic_w	bigint;
nr_seq_grupo_item_w	bigint;
qt_exame_adic_w		bigint;
nr_seq_item_agenda_w	bigint;
ie_gerar_check_list_w	varchar(1);
nr_seq_ageint_check_list_w bigint;
ie_gerar_equip_w	varchar(1);
nr_seq_regra_w		bigint;
nr_seq_item_w		bigint;
ds_Retorno_w		varchar(255);
ie_forma_checklist_w	varchar(1) := 'L';
ie_anestesia_w		varchar(1) := 'N';
ie_verificar_anestesia_w	varchar(1);
nr_seq_proc_item_grupo_w	bigint;
nr_seq_agrupamento_w		bigint;

C02 CURSOR FOR
	SELECT	ie_tipo_agendamento,
		nr_Seq_proc_interno,
		cd_medico,
		cd_especialidade,
		nr_minuto_duracao,
		ie_classif_agenda,
		nr_sequencia
	from	ageint_grupo_proc_item
	where	nr_Seq_grupo_proc	= nr_seq_grupo_proc_w
	and	ie_situacao		= 'A';

C01 CURSOR FOR
	SELECT	nr_seq_proc_interno
	from	ageint_ex_adic_grupo_item
	where	nr_seq_grupo_item	= nr_seq_grupo_real_w;	


BEGIN

ie_gerar_equip_w := Obter_Param_Usuario(869, 24, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_equip_w);
ie_forma_checklist_w := Obter_Param_Usuario(869, 75, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_forma_checklist_w);
ie_verificar_anestesia_w := Obter_Param_Usuario(869, 147, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_verificar_anestesia_w);

ds_itens_grupo_w	:= ds_itens_grupo_p;
if (ds_itens_grupo_p IS NOT NULL AND ds_itens_grupo_p::text <> '') then
	begin
	while(ds_itens_grupo_w IS NOT NULL AND ds_itens_grupo_w::text <> '') LOOP
		begin

		tam_lista_w		:=	length(ds_itens_grupo_w);
		ie_pos_virgula_w		:=	position(',' in ds_itens_grupo_w);
	
		if (ie_pos_virgula_w <> 0) then
			nr_seq_grupo_real_w	:= substr(ds_itens_grupo_w,1,(ie_pos_virgula_w - 1));
			ds_itens_grupo_w	:= substr(ds_itens_grupo_w,(ie_pos_virgula_w + 1),tam_lista_w);
		end if;
	
		select	nr_seq_grupo,
			nr_Seq_proc_interno,
			cd_especialidade,
			cd_medico,
			nr_seq_grupo_proc,
			nr_minuto_duracao,
			ie_classif_agenda,
			nr_sequencia,
			nr_seq_agrupamento
		into STRICT	nr_seq_grupo_w,
			nr_seq_proc_interno_w,
			cd_especialidade_w,
			cd_medico_w,
			nr_seq_grupo_proc_w,
			nr_minuto_duracao_w,
			ie_classif_agenda_w,
			nr_seq_item_w,
			nr_seq_agrupamento_w
		from	agenda_int_grupo_item
		where	nr_sequencia	= nr_seq_grupo_real_w
		order by nr_seq_apres;
		
		select	max(ie_tipo_agendamento)
		into STRICT	ie_tipo_agendamento_w
		from	agenda_int_grupo
		where	nr_sequencia	= nr_seq_grupo_w;
		
		if	((ie_tipo_agendamento_w	in ('E','S')) and (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '')) or
			((ie_tipo_agendamento_w	= 'C') and
			((cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') or (cd_especialidade_w IS NOT NULL AND cd_especialidade_w::text <> ''))) then

			if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') and (coalesce(nr_minuto_duracao_w::text, '') = '') then
				nr_minuto_duracao_w	:= ageint_obter_tempo_exame(nr_seq_proc_interno_w);
			end if;
			
			if (coalesce(nr_minuto_duracao_w::text, '') = '') and (ie_classif_agenda_w IS NOT NULL AND ie_classif_agenda_w::text <> '') then
				nr_minuto_duracao_w	:= Ageint_Obter_Dur_Classif(ie_classif_agenda_w, cd_estabelecimento_p);
			end if;
			
			if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
				SELECT * FROM Ageint_Consistir_Regra_Ex_Adic(nr_Seq_agenda_int_p, nr_seq_proc_interno_w, cd_estabelecimento_p, nm_usuario_p, nr_seq_regra_w, ds_retorno_w) INTO STRICT nr_seq_regra_w, ds_retorno_w;
				if (ie_verificar_anestesia_w = 'S') then
					ie_anestesia_w	:= Ageint_Obter_Se_Proc_Anest(nr_seq_proc_interno_w,null,null,nr_seq_agenda_int_p);
				end if;
					
			end if;
			
			if	(((coalesce(nr_Seq_regra_w,0)	> 0) and (coalesce(ds_retorno_w::text, '') = '')) or
				((coalesce(ds_retorno_w::text, '') = '') and
				coalesce(nr_Seq_regra_w,0)	= 0)) then
			
				select	nextval('agenda_integrada_item_seq')
				into STRICT	nr_seq_item_agenda_w
				;
				
				insert into agenda_integrada_item(nr_sequencia,
					nr_seq_agenda_int,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_proc_interno,
					ie_tipo_agendamento,
					cd_medico,
					cd_especialidade,
					nr_minuto_duracao,
					ie_classif_agenda,
					nr_seq_grupo_selec,
					nr_seq_regra_ex_adic,
					nr_seq_item_selec,
					ie_anestesia,
					nr_seq_agrupamento)
				values (nr_seq_item_agenda_w,
					nr_seq_agenda_int_p,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_proc_interno_w,
					ie_tipo_agendamento_w,
					cd_medico_w,
					cd_especialidade_w,
					CASE WHEN nr_minuto_duracao_w=0 THEN ''  ELSE nr_minuto_duracao_w END ,
					ie_classif_agenda_w,
					nr_seq_grupo_w,
					nr_seq_regra_w,
					nr_seq_item_w,
					ie_anestesia_w,
					nr_seq_agrupamento_w);
				commit;
				
				if (coalesce(nr_seq_proc_interno_w, 0)	> 0) then
					CALL ageint_gerar_proc_Assoc(nr_seq_agenda_int_p, nr_seq_item_agenda_w, nr_seq_proc_interno_w, nm_usuario_p, nr_seq_grupo_w);
					CALL Ageint_gerar_anexos_proc(nr_seq_agenda_int_p, nr_seq_proc_interno_w, cd_estabelecimento_p, nm_usuario_p);	
				end if;

				CALL Ageint_Gerar_Equip_Item(nr_seq_proc_interno_w, nr_seq_item_agenda_w, cd_estabelecimento_p, nm_usuario_p);

				if (ie_forma_checklist_w = 'L') then
				
					select	substr(ageint_obter_se_proc_check(nr_seq_proc_interno_w,nr_seq_agenda_int_p, cd_estabelecimento_p, cd_especialidade_w),1,1)
					into STRICT	ie_gerar_check_list_w
					;
					
					if (ie_gerar_check_list_w = 'S') then
						select	nextval('ageint_check_list_paciente_seq')
						into STRICT	nr_seq_ageint_check_list_w
						;
					
						insert into ageint_check_list_paciente(nr_sequencia,
											nr_seq_ageint,
											dt_atualizacao,
											nm_usuario,
											ie_tipo_check_list)
										values (nr_seq_ageint_check_list_w,
											nr_seq_agenda_int_p,
											clock_timestamp(),	
											nm_usuario_p,
											'I');
										
						commit;
									
						CALL Ageint_Gerar_Check_List(nr_seq_ageint_check_list_w,nr_seq_proc_interno_w,nr_seq_agenda_int_p,nm_usuario_p, cd_estabelecimento_p, cd_especialidade_w);
						
					end if;
				end if;
			end if;
		end if;
		
		select	count(*)
		into STRICT	qt_exame_adic_w
		from	ageint_ex_adic_grupo_item
		where	nr_seq_grupo_item	= nr_seq_grupo_real_w;
		
		if (qt_exame_adic_w	> 0) and (nr_seq_item_agenda_w	> 0) then
			open C01;
			loop
			fetch C01 into	
				nr_seq_exame_adic_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				insert into ageint_exame_adic_item(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_proc_interno,
						nr_seq_item,
						nr_seq_grupo_selec)
					values (nextval('ageint_exame_adic_item_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_exame_adic_w,
						nr_seq_item_agenda_w,
						nr_seq_grupo_w);
				end;
			end loop;
			close C01;
		end if;
		
		if (nr_Seq_grupo_proc_w IS NOT NULL AND nr_Seq_grupo_proc_w::text <> '') then
			open C02;
			loop
			fetch C02 into
				ie_tipo_agendamento_ww,
				nr_seq_proc_interno_ww,
				cd_medico_ww,
				cd_especialidade_ww,
				nr_minuto_duracao_ww,
				ie_classif_agenda_ww,
				nr_seq_proc_item_grupo_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				
				if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
					SELECT * FROM Ageint_Consistir_Regra_Ex_Adic(nr_Seq_agenda_int_p, nr_seq_proc_interno_w, cd_estabelecimento_p, nm_usuario_p, nr_seq_regra_w, ds_retorno_w) INTO STRICT nr_seq_regra_w, ds_retorno_w;
				end if;
			
				if	(((coalesce(nr_Seq_regra_w,0)	> 0) and (coalesce(ds_retorno_w::text, '') = '')) or
					((coalesce(ds_retorno_w::text, '') = '') and
					coalesce(nr_Seq_regra_w,0)	= 0)) then
					
					insert into agenda_integrada_item(nr_sequencia,
						nr_seq_agenda_int,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_proc_interno,
						ie_tipo_agendamento,
						cd_medico,
						cd_especialidade,
						nr_minuto_duracao,
						ie_classif_agenda,
						nr_seq_grupo_proc,
						nr_seq_regra_ex_adic,
						nr_seq_proc_item_grupo)
					values (nextval('agenda_integrada_item_seq'),
						nr_seq_agenda_int_p,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),	
						nm_usuario_p,
						nr_seq_proc_interno_ww,
						ie_tipo_agendamento_ww,
						cd_medico_ww,
						cd_especialidade_ww,
						nr_minuto_duracao_ww,
						ie_classif_agenda_ww,
						nr_Seq_grupo_proc_w,
						nr_seq_regra_w,
						nr_seq_proc_item_grupo_w);
					commit;
					
					if (coalesce(nr_seq_proc_interno_w, 0)	> 0) then
						CALL ageint_gerar_proc_Assoc(nr_seq_agenda_int_p, nr_seq_item_agenda_w, nr_seq_proc_interno_w, nm_usuario_p, nr_seq_grupo_w);
						CALL Ageint_gerar_anexos_proc(nr_seq_agenda_int_p, nr_seq_proc_interno_w, cd_estabelecimento_p, nm_usuario_p);
					end if;
					
					if (ie_forma_checklist_w = 'L') then
					
						select	substr(ageint_obter_se_proc_check(nr_seq_proc_interno_ww,nr_seq_agenda_int_p, cd_estabelecimento_p, cd_especialidade_ww),1,1)
						into STRICT	ie_gerar_check_list_w
						;
					
						if (ie_gerar_check_list_w = 'S') then
				
							select	nextval('ageint_check_list_paciente_seq')
							into STRICT	nr_seq_ageint_check_list_w
							;
					
							insert into ageint_check_list_paciente(nr_sequencia,
												nr_seq_ageint,
												dt_atualizacao,
												nm_usuario,
												ie_tipo_check_list)
											values (nr_seq_ageint_check_list_w,
												nr_seq_agenda_int_p,
												clock_timestamp(),	
												nm_usuario_p,
												'I');
											
							commit;
										
							CALL Ageint_Gerar_Check_List(nr_seq_ageint_check_list_w,nr_seq_proc_interno_ww,nr_seq_agenda_int_p,nm_usuario_p, cd_estabelecimento_p, cd_especialidade_ww);
						
						end if;
					end if;
				end if;
				end;
			end loop;
			close C02;
		end if;
		end;		
	end loop;
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_itens_agenda_integrada ( nr_seq_agenda_int_p bigint, ds_itens_grupo_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

