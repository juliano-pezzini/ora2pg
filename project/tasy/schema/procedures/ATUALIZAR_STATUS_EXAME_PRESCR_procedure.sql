-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_status_exame_prescr (nr_prescricao_p bigint, nr_seq_prescr_p bigint, ie_opcao_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

					
nr_seq_agenda_w			agenda_paciente.nr_sequencia%type;
ie_atualiza_status_agenda_w	varchar(1);
nr_atendimento_w		bigint;
dt_atendido_w			timestamp;
dt_atendimento_w		timestamp;
ie_status_w			varchar(15);
ie_utiliza_prepado_w		varchar(1);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_proc_interno_W		bigint;
ie_gerar_passagem_setor_w	varchar(10);
cd_setor_atendimento_w		integer;
ie_status_atualizar_w		varchar(10);


BEGIN

ie_utiliza_prepado_w := obter_param_usuario(942, 115, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_utiliza_prepado_w);		

if (coalesce(nr_prescricao_p,0) > 0) then

	if (ie_opcao_p	= 'I') then
	
		select 	max(cd_procedimento),
			max(ie_origem_proced),
			max(nr_seq_proc_interno),
			max(cd_setor_atendimento)
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_proc_interno_W,
			cd_setor_atendimento_w
		from	prescr_procedimento
		where	 nr_prescricao        	=  nr_prescricao_p
		and      nr_sequencia         	=  nr_seq_prescr_p;
	
		update   prescr_procedimento
		set      ie_status_execucao   	=  15,
			 dt_inicio_exame      	=  clock_timestamp(),
			 nm_usuario		=  nm_usuario_p
		where    nr_prescricao        	=  nr_prescricao_p
		and      nr_sequencia         	=  nr_seq_prescr_p
		and      ie_status_execucao	in (10,11,13,14,17,18);
		
		ie_atualiza_status_agenda_w := obter_param_usuario(942, 90, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_atualiza_status_agenda_w);
		
		
		if (ie_atualiza_status_agenda_w = 'S') then
		
			select	coalesce(max(nr_seq_agenda),0)
			into STRICT	nr_seq_agenda_w
			from	prescr_medica
			where	nr_prescricao        	=  nr_prescricao_p;


			if (nr_seq_agenda_w = 0) then

				select	max(nr_atendimento)
				into STRICT	nr_atendimento_w
				from	prescr_medica
				where	nr_prescricao = nr_prescricao_p;

				select	coalesce(max(nr_sequencia),0)
				into STRICT	nr_seq_agenda_w
				from	agenda_paciente
				where	nr_atendimento        	=  nr_atendimento_w
				and	ie_status_agenda  not in ('B','C','E')
				and	((cd_procedimento = cd_procedimento_w and	ie_origem_proced = ie_origem_proced_w) or (nr_seq_proc_interno = nr_seq_proc_interno_w));

			end if;
			
			if (nr_seq_agenda_w > 0) then
			
				update 	agenda_paciente
				set    	ie_status_agenda = 'EE',
					dt_em_exame	 = clock_timestamp()
				where	nr_sequencia	= nr_seq_agenda_w
				and	ie_status_agenda  not in ('B','C','E');
			
			end if;
		end if;
		
		ie_gerar_passagem_setor_w := obter_param_usuario(942, 331, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_passagem_setor_w);
		
		if (ie_gerar_passagem_setor_w = 'S') then
		
				select	max(nr_atendimento)
				into STRICT	nr_atendimento_w
				from	prescr_medica
				where	nr_prescricao = nr_prescricao_p;
				
				
				if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then				
								
					CALL gerar_passagem_setor_atend(nr_atendimento_w, cd_setor_atendimento_w, clock_timestamp(), 'S', nm_usuario_p);				
				
				end if;
		
		end if;
		
	end if;


	if (ie_opcao_p	= 'D') then
	
		ie_status_atualizar_w := obter_status_anterior_presc(nr_prescricao_p, nr_seq_prescr_p, 15);
	
		update   prescr_procedimento
		set      ie_status_execucao   	=  coalesce(ie_status_atualizar_w, 10),
			 dt_inicio_exame      	 = NULL,
			 dt_fim_exame		 = NULL,
			 nm_usuario		=  nm_usuario_p
		where    nr_prescricao        	=  nr_prescricao_p
		and      nr_sequencia         	=  nr_seq_prescr_p
		and      ie_status_execucao	= 15;
		
		ie_atualiza_status_agenda_w := obter_param_usuario(942, 90, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_atualiza_status_agenda_w);
		
		if (ie_atualiza_status_agenda_w = 'S') then
		
			select	coalesce(max(nr_seq_agenda),0)
			into STRICT	nr_seq_agenda_w
			from	prescr_medica
			where	nr_prescricao        	=  nr_prescricao_p;


			if (nr_seq_agenda_w = 0) then

				select	max(nr_atendimento)
				into STRICT	nr_atendimento_w
				from	prescr_medica
				where	nr_prescricao = nr_prescricao_p;

				select	coalesce(max(nr_sequencia),0)
				into STRICT	nr_seq_agenda_w
				from	agenda_paciente
				where	nr_atendimento        	=  nr_atendimento_w
				and	ie_status_agenda  = 'EE'
				and	((cd_procedimento = cd_procedimento_w and	ie_origem_proced = ie_origem_proced_w) or (nr_seq_proc_interno = nr_seq_proc_interno_w));

			end if;
			
			if (nr_seq_agenda_w > 0) then

				select	dt_atendido,
					dt_atendimento
				into STRICT	dt_atendido_w,
					dt_atendimento_w
				from	agenda_paciente
				where	nr_sequencia	= nr_seq_agenda_w;
		
				if (dt_atendido_w IS NOT NULL AND dt_atendido_w::text <> '') then
					ie_status_w	:= 'AD';
				else	
					ie_status_w	:= 'O';
				end if;

				update 	agenda_paciente
				set    	ie_status_agenda = ie_status_w,
					dt_em_exame	  = NULL
				where	nr_sequencia	= nr_seq_agenda_w
				and	ie_status_agenda  = 'EE';
			
			end if;
		end if;		
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_status_exame_prescr (nr_prescricao_p bigint, nr_seq_prescr_p bigint, ie_opcao_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

