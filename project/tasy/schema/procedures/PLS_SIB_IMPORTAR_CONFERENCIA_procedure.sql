-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_sib_importar_conferencia ( nr_seq_lote_p pls_sib_conferencia_lote.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


nr_seq_conf_arq_w	pls_sib_conferencia_arq.nr_sequencia%type;
dt_arquivo_w		pls_sib_conferencia_arq.dt_arquivo%type;
nr_registro_ans_w	pls_sib_conferencia_arq.nr_registro_ans%type;
qt_registros_w		integer;
dt_atualizacao_w	pls_sib_conferencia.dt_atualizacao_sib%type;

tb_nr_seq_segurado_w		pls_util_cta_pck.t_number_table;
tb_nr_cco_w			pls_util_cta_pck.t_varchar2_table_20;
tb_dt_atualizacao_w		pls_util_cta_pck.t_date_table;
tb_ds_situacao_w		pls_util_cta_pck.t_varchar2_table_255;
tb_cd_beneficiario_w		pls_util_cta_pck.t_varchar2_table_50;
tb_nr_cpf_w			pls_util_cta_pck.t_number_table;
tb_cd_declaracao_nasc_vivo_w	pls_util_cta_pck.t_number_table;
tb_nr_pis_pasep_w		pls_util_cta_pck.t_number_table;
tb_cd_cns_w			pls_util_cta_pck.t_number_table;
tb_nm_beneficiario_w		pls_util_cta_pck.t_varchar2_table_255;
tb_ie_sexo_w			pls_util_cta_pck.t_varchar2_table_255;
tb_dt_nascimento_w		pls_util_cta_pck.t_date_table;
tb_nm_mae_w			pls_util_cta_pck.t_varchar2_table_255;
tb_nr_cco_titular_w		pls_util_cta_pck.t_number_table;
tb_ie_tipo_dependencia_w	pls_util_cta_pck.t_varchar2_table_5;
tb_dt_contratacao_w		pls_util_cta_pck.t_date_table;
tb_dt_reativacao_w		pls_util_cta_pck.t_date_table;
tb_dt_cancelamento_w		pls_util_cta_pck.t_date_table;
tb_cd_motivo_cancelamento_w	pls_util_cta_pck.t_number_table;
tb_nr_plano_ans_w		pls_util_cta_pck.t_varchar2_table_20;
tb_nr_plano_ops_w		pls_util_cta_pck.t_varchar2_table_20;
tb_nr_plano_portabilidade_w	pls_util_cta_pck.t_varchar2_table_20;
tb_ie_cpt_w			pls_util_cta_pck.t_varchar2_table_5;
tb_ie_itens_exc_cobertura_w	pls_util_cta_pck.t_varchar2_table_5;
tb_nr_cnpj_w			pls_util_cta_pck.t_number_table;
tb_nr_cei_w			pls_util_cta_pck.t_number_table;
tb_cd_caepf_w     			pls_util_cta_pck.t_varchar2_table_15;
tb_ie_reside_exterior_w		pls_util_cta_pck.t_varchar2_table_5;
tb_ie_tipo_endereco_w		pls_util_cta_pck.t_varchar2_table_5;
tb_cd_cep_w			pls_util_cta_pck.t_number_table;
tb_ds_logradouro_w		pls_util_cta_pck.t_varchar2_table_255;
tb_nr_logradouro_w		pls_util_cta_pck.t_number_table;
tb_ds_complemento_w		pls_util_cta_pck.t_varchar2_table_255;
tb_ds_bairro_w			pls_util_cta_pck.t_varchar2_table_255;
tb_cd_municipio_ibge_w		pls_util_cta_pck.t_number_table;
tb_cd_municipio_ibge_resid_w	pls_util_cta_pck.t_number_table;

indice_w			integer;

C01 CURSOR FOR
	SELECT	ds_beneficiario,
		pls_extrair_dado_tag_xml(ds_beneficiario,'cco',2) nr_cco,
		pls_extrair_dado_tag_xml(ds_beneficiario,'dataAtualizacao',2) dt_atualizacao,
		pls_extrair_dado_tag_xml(ds_beneficiario,'situacao',2) ds_situacao,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<codigoBeneficiario>') cd_beneficiario,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<cpf>') nr_cpf,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<dn>') cd_declaracao_nasc_vivo,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<pisPasep>') nr_pis_pasep,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<cns>') cd_cns,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<nome>') nm_beneficiario,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<sexo>') ie_sexo,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<dataNascimento>') dt_nascimento,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<nomeMae>') nm_mae,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<ccoBeneficiarioTitular>') nr_cco_titular,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<relacaoDependencia>') ie_tipo_dependencia,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<dataContratacao>') dt_contratacao,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<dataReativacao>') dt_reativacao,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<dataCancelamento>') dt_cancelamento,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<motivoCancelamento>') cd_motivo_cancelamento,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<numeroPlanoANS>') nr_plano_ans,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<numeroPlanoOperadora>') nr_plano_ops,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<numeroPlanoPortabilidade>') nr_plano_portabilidade,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<coberturaParcialTemporaria>') ie_cpt,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<itensExcluidosCobertura>') ie_itens_excluidos_cobertura,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<cnpjEmpresaContratante>') nr_cnpj,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<ceiEmpresaContratante>') nr_cei,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<caepfEmpresaContratante>') cd_caepf,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<resideExterior>') ie_reside_exterior,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<tipoEndereco>') ie_tipo_endereco,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<cep>') cd_cep,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<logradouro>') ds_logradouro,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<numero>') nr_logradouro,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<complemento>') ds_complemento,
		pls_extrair_dado_tag_xml(ds_beneficiario,'<bairro>') ds_bairro,
		substr(pls_extrair_dado_tag_xml(ds_beneficiario,'<codigoMunicipio>'),1,6) cd_municipio_ibge,
		substr(pls_extrair_dado_tag_xml(ds_beneficiario,'<codigoMunicipioResidencia>'),1,6) cd_municipio_ibge_resid
	from	w_pls_conferencia_sib
	where	ie_tipo_registro = 2;

procedure limpar_vetores is;
BEGIN
indice_w := 0;
tb_nr_cco_w.delete;
tb_dt_atualizacao_w.delete;
tb_ds_situacao_w.delete;
tb_cd_beneficiario_w.delete;
tb_nr_cpf_w.delete;
tb_cd_declaracao_nasc_vivo_w.delete;
tb_nr_pis_pasep_w.delete;
tb_cd_cns_w.delete;
tb_nm_beneficiario_w.delete;
tb_ie_sexo_w.delete;
tb_dt_nascimento_w.delete;
tb_nm_mae_w.delete;
tb_nr_cco_titular_w.delete;
tb_ie_tipo_dependencia_w.delete;
tb_dt_contratacao_w.delete;
tb_dt_reativacao_w.delete;
tb_dt_cancelamento_w.delete;
tb_cd_motivo_cancelamento_w.delete;
tb_nr_plano_ans_w.delete;
tb_nr_plano_ops_w.delete;
tb_nr_plano_portabilidade_w.delete;
tb_ie_cpt_w.delete;
tb_ie_itens_exc_cobertura_w.delete;
tb_nr_cnpj_w.delete;
tb_nr_cei_w.delete;
tb_cd_caepf_w.delete;
tb_ie_reside_exterior_w.delete;
tb_ie_tipo_endereco_w.delete;
tb_cd_cep_w.delete;
tb_ds_logradouro_w.delete;
tb_nr_logradouro_w.delete;
tb_ds_complemento_w.delete;
tb_ds_bairro_w.delete;
tb_cd_municipio_ibge_w.delete;
tb_cd_municipio_ibge_resid_w.delete;
end;

procedure adicionar_conferencia(
				nr_seq_lote_p		pls_sib_conferencia_lote.nr_sequencia%type,
				nr_seq_conf_arq_p	pls_sib_conferencia_arq.nr_sequencia%type,
				ie_final_p		varchar2) is
begin
if (indice_w = pls_util_pck.qt_registro_transacao_w) or (ie_final_p = 'S') then
	forall i in tb_nr_cco_w.first..tb_nr_cco_w.last
		insert	into	pls_sib_conferencia(	nr_sequencia, nr_seq_lote, nr_seq_conf_arq, dt_atualizacao,
				nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				nr_cco, cd_beneficiario, nr_seq_segurado,
				nr_cpf, cd_declaracao_nasc_vivo, nr_pis_pasep,
				cd_cns, nm_beneficiario, ie_sexo,
				dt_nascimento, nm_mae, nr_cco_titular,
				ie_tipo_dependencia, dt_contratacao, dt_reativacao,
				dt_cancelamento, cd_motivo_cancelamento, nr_plano_ans,
				nr_plano_ops, nr_plano_portabilidade, ie_cpt,
				ie_itens_excluidos_cobertura, nr_cnpj, nr_cei, cd_caepf,
				ie_reside_exterior, ie_tipo_endereco, cd_cep,
				ds_logradouro, nr_logradouro, ds_complemento,
				ds_bairro, cd_municipio_ibge, cd_municipio_ibge_resid,
				dt_atualizacao_sib, ds_situacao)
			values (	nextval('pls_sib_conferencia_seq'), nr_seq_lote_p, nr_seq_conf_arq_p, clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p,
				tb_nr_cco_w(i), tb_cd_beneficiario_w(i), tb_nr_seq_segurado_w(i),
				tb_nr_cpf_w(i), tb_cd_declaracao_nasc_vivo_w(i), tb_nr_pis_pasep_w(i),
				tb_cd_cns_w(i), tb_nm_beneficiario_w(i), tb_ie_sexo_w(i),
				tb_dt_nascimento_w(i), tb_nm_mae_w(i), tb_nr_cco_titular_w(i),
				tb_ie_tipo_dependencia_w(i), tb_dt_contratacao_w(i), tb_dt_reativacao_w(i),
				tb_dt_cancelamento_w(i), tb_cd_motivo_cancelamento_w(i), tb_nr_plano_ans_w(i),
				tb_nr_plano_ops_w(i), tb_nr_plano_portabilidade_w(i), tb_ie_cpt_w(i),
				tb_ie_itens_exc_cobertura_w(i), tb_nr_cnpj_w(i), tb_nr_cei_w(i), tb_cd_caepf_w(i),
				tb_ie_reside_exterior_w(i), tb_ie_tipo_endereco_w(i), tb_cd_cep_w(i),
				tb_ds_logradouro_w(i), tb_nr_logradouro_w(i), tb_ds_complemento_w(i),
				tb_ds_bairro_w(i), tb_cd_municipio_ibge_w(i), tb_cd_municipio_ibge_resid_w(i),
				tb_dt_atualizacao_w(i), tb_ds_situacao_w(i));
	commit;
	
	CALL CALL limpar_vetores();
else
	indice_w := indice_w + 1;
end if;
end;

procedure inicia_registro is
begin
tb_nr_seq_segurado_w(indice_w)		:= null;
tb_nr_cco_w(indice_w)			:= null;
tb_dt_atualizacao_w(indice_w)		:= null;
tb_ds_situacao_w(indice_w)		:= null;
tb_cd_beneficiario_w(indice_w)		:= null;
tb_nr_cpf_w(indice_w)			:= null;
tb_cd_declaracao_nasc_vivo_w(indice_w)	:= null;
tb_nr_pis_pasep_w(indice_w)		:= null;
tb_cd_cns_w(indice_w)			:= null;
tb_nm_beneficiario_w(indice_w)		:= null;
tb_ie_sexo_w(indice_w)			:= null;
tb_dt_nascimento_w(indice_w)		:= null;
tb_nm_mae_w(indice_w)			:= null;
tb_nr_cco_titular_w(indice_w)		:= null;
tb_ie_tipo_dependencia_w(indice_w)	:= null;
tb_dt_contratacao_w(indice_w)		:= null;
tb_dt_reativacao_w(indice_w)		:= null;
tb_dt_cancelamento_w(indice_w)		:= null;
tb_cd_motivo_cancelamento_w(indice_w)	:= null;
tb_nr_plano_ans_w(indice_w)		:= null;
tb_nr_plano_ops_w(indice_w)		:= null;
tb_nr_plano_portabilidade_w(indice_w)	:= null;
tb_ie_cpt_w(indice_w)			:= null;
tb_ie_itens_exc_cobertura_w(indice_w)	:= null;
tb_nr_cnpj_w(indice_w)			:= null;
tb_nr_cei_w(indice_w)			:= null;
tb_cd_caepf_w(indice_w)			:= null;
tb_ie_reside_exterior_w(indice_w)	:= null;
tb_ie_tipo_endereco_w(indice_w)		:= null;
tb_cd_cep_w(indice_w)			:= null;
tb_ds_logradouro_w(indice_w)		:= null;
tb_nr_logradouro_w(indice_w)		:= null;
tb_ds_complemento_w(indice_w)		:= null;
tb_ds_bairro_w(indice_w)		:= null;
tb_cd_municipio_ibge_w(indice_w)	:= null;
tb_cd_municipio_ibge_resid_w(indice_w)	:= null;
end;

function obter_beneficiario(	cd_cco_p		pls_sib_conferencia.nr_cco%type,
				cd_beneficiario_p	pls_sib_conferencia.cd_beneficiario%type)
 			return;

begin
select	max(a.nr_sequencia)
into STRICT	nr_seq_segurado_w
from	pls_segurado a,
	pls_segurado_carteira b
where	a.nr_sequencia	= b.nr_seq_segurado
and	a.cd_cco	= cd_cco_p
and	b.cd_usuario_plano = cd_beneficiario_p;

if (coalesce(nr_seq_segurado_w::text, '') = '') then
	select	max(a.nr_sequencia)
	into STRICT	nr_seq_segurado_w
	from	pls_segurado a,
		pls_segurado_carteira b
	where	a.nr_sequencia	= b.nr_seq_segurado
	and	b.cd_usuario_plano = cd_beneficiario_p;
	
	if (coalesce(nr_seq_segurado_w::text, '') = '') then
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_segurado_w
		from	pls_segurado a
		where	a.cd_cco	= cd_cco_p;
	end if;
end if;

return;

end;

begin
CALL CALL limpar_vetores();
begin
select	to_date(substr(pls_extrair_dado_tag_xml(ds_beneficiario,'<dataHoraRegistroTransacao>'),1,10),'yyyy-mm-dd'),
	pls_extrair_dado_tag_xml(ds_beneficiario,'<registroANS>')
into STRICT	dt_arquivo_w,
	nr_registro_ans_w
from	w_pls_conferencia_sib
where	ie_tipo_registro = 1;
exception
when others then
	dt_arquivo_w := clock_timestamp();
	nr_registro_ans_w := null;
end;

select	coalesce(max(nr_sequencia),0)+1
into STRICT	nr_seq_conf_arq_w
from	pls_sib_conferencia_arq
where	nr_seq_lote	= nr_seq_lote_p;

insert	into	pls_sib_conferencia_arq(	nr_sequencia, nr_seq_lote, dt_arquivo, dt_importacao,
		dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
		nr_registro_ans, qt_registros)
	values (	nr_seq_conf_arq_w, nr_seq_lote_p, dt_arquivo_w, clock_timestamp(),
		clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
		nr_registro_ans_w, 0);

for r_c01_w in C01 loop
	begin
	CALL inicia_registro();
	tb_nr_seq_segurado_w(indice_w)	:= obter_beneficiario(r_c01_w.nr_cco, r_c01_w.cd_beneficiario);
	
	if (r_c01_w.dt_nascimento IS NOT NULL AND r_c01_w.dt_nascimento::text <> '') then
		tb_dt_nascimento_w(indice_w) := to_date(r_c01_w.dt_nascimento,'yyyy-mm-dd');
	else
		tb_dt_nascimento_w(indice_w) := null;
	end if;
	
	if (r_c01_w.dt_contratacao IS NOT NULL AND r_c01_w.dt_contratacao::text <> '') then
		tb_dt_contratacao_w(indice_w) := to_date(r_c01_w.dt_contratacao,'yyyy-mm-dd');
	else
		tb_dt_contratacao_w(indice_w) := null;
	end if;
	
	if (r_c01_w.dt_reativacao IS NOT NULL AND r_c01_w.dt_reativacao::text <> '') then
		tb_dt_reativacao_w(indice_w)	:= to_date(r_c01_w.dt_reativacao,'yyyy-mm-dd');
	else
		tb_dt_reativacao_w(indice_w)	:= null;
	end if;
	
	if (r_c01_w.dt_cancelamento IS NOT NULL AND r_c01_w.dt_cancelamento::text <> '') then
		tb_dt_cancelamento_w(indice_w)	:= to_date(r_c01_w.dt_cancelamento,'yyyy-mm-dd');
	else
		tb_dt_cancelamento_w(indice_w)	:= null;
	end if;
	
	if (r_c01_w.dt_atualizacao IS NOT NULL AND r_c01_w.dt_atualizacao::text <> '') then
		tb_dt_atualizacao_w(indice_w)	:= to_date(r_c01_w.dt_atualizacao,'yyyy-mm-dd');
	else
		tb_dt_atualizacao_w(indice_w)	:= null;
	end if;
	
	if (r_c01_w.nr_logradouro IS NOT NULL AND r_c01_w.nr_logradouro::text <> '') then
		if (r_c01_w.nr_logradouro = 'S/N') then
			tb_nr_logradouro_w(indice_w)	:= null;
		else
			begin
			tb_nr_logradouro_w(indice_w)	:= (r_c01_w.nr_logradouro)::numeric;
			exception
			when others then
				tb_nr_logradouro_w(indice_w)	:= null;
			end;
		end if;
	else
		tb_nr_logradouro_w(indice_w)	:= null;
	end if;
	
	tb_nr_cco_w(indice_w)			:= r_c01_w.nr_cco;
	tb_cd_beneficiario_w(indice_w)		:= r_c01_w.cd_beneficiario;
	tb_nr_cpf_w(indice_w)			:= r_c01_w.nr_cpf;
	tb_cd_declaracao_nasc_vivo_w(indice_w)	:= r_c01_w.cd_declaracao_nasc_vivo;
	tb_nr_pis_pasep_w(indice_w)		:= r_c01_w.nr_pis_pasep;
	tb_cd_cns_w(indice_w)			:= r_c01_w.cd_cns;
	tb_nm_beneficiario_w(indice_w)		:= regexp_replace(r_c01_w.nm_beneficiario,' {2,}', ' ');
	tb_ie_sexo_w(indice_w)			:= r_c01_w.ie_sexo;
	tb_nm_mae_w(indice_w)			:= regexp_replace(r_c01_w.nm_mae,' {2,}', ' ');
	tb_nr_cco_titular_w(indice_w)		:= r_c01_w.nr_cco_titular;
	tb_ie_tipo_dependencia_w(indice_w)	:= r_c01_w.ie_tipo_dependencia;
	tb_cd_motivo_cancelamento_w(indice_w)	:= r_c01_w.cd_motivo_cancelamento;
	tb_nr_plano_ans_w(indice_w)		:= r_c01_w.nr_plano_ans;
	tb_nr_plano_ops_w(indice_w)		:= r_c01_w.nr_plano_ops;
	tb_nr_plano_portabilidade_w(indice_w)	:= r_c01_w.nr_plano_portabilidade;
	tb_ie_cpt_w(indice_w)			:= r_c01_w.ie_cpt;
	tb_ie_itens_exc_cobertura_w(indice_w)	:= r_c01_w.ie_itens_excluidos_cobertura;
	tb_nr_cnpj_w(indice_w)			:= r_c01_w.nr_cnpj;
	tb_nr_cei_w(indice_w)			:= r_c01_w.nr_cei;
	tb_cd_caepf_w(indice_w)			:= r_c01_w.cd_caepf;
	tb_ie_reside_exterior_w(indice_w)	:= r_c01_w.ie_reside_exterior;
	tb_ie_tipo_endereco_w(indice_w)		:= r_c01_w.ie_tipo_endereco;
	tb_cd_cep_w(indice_w)			:= r_c01_w.cd_cep;
	tb_ds_logradouro_w(indice_w)		:= regexp_replace(r_c01_w.ds_logradouro,' {2,}', ' ');
	tb_ds_complemento_w(indice_w)		:= regexp_replace(r_c01_w.ds_complemento,' {2,}', ' ');
	tb_ds_bairro_w(indice_w)		:= regexp_replace(r_c01_w.ds_bairro,' {2,}', ' ');
	tb_cd_municipio_ibge_w(indice_w)	:= r_c01_w.cd_municipio_ibge;
	tb_cd_municipio_ibge_resid_w(indice_w)	:= r_c01_w.cd_municipio_ibge_resid;
	tb_ds_situacao_w(indice_w)		:= r_c01_w.ds_situacao;
	
	adicionar_conferencia(nr_seq_lote_p, nr_seq_conf_arq_w, 'N');
	end;
end loop;
adicionar_conferencia(nr_seq_lote_p, nr_seq_conf_arq_w, 'S');

select	count(1)
into STRICT	qt_registros_w
from	pls_sib_conferencia
where	nr_seq_lote	= nr_seq_lote_p
and	nr_seq_conf_arq	= nr_seq_conf_arq_w;

update	pls_sib_conferencia_arq
set	qt_registros	= qt_registros_w
where	nr_seq_lote	= nr_seq_lote_p
and	nr_sequencia	= nr_seq_conf_arq_w;

update	pls_sib_conferencia_lote
set	qt_registros	= coalesce(qt_registros,0)+qt_registros_w
where	nr_sequencia	= nr_seq_lote_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_sib_importar_conferencia ( nr_seq_lote_p pls_sib_conferencia_lote.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

