-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_gerar_interf_cito_siscolo ( nr_seq_protocolo_p bigint, nm_usuario_p text) AS $body$
DECLARE


c_cnes_w		varchar(7);
c_exame_w		varchar(14);
c_id_nome_w		varchar(70);
c_nomemae_w		varchar(70);
c_id_apel_w		varchar(30);
d_dtnasc_w		timestamp;
c_id_idad_w		varchar(2);
c_id_ident_w		varchar(12);
c_id_emis_w		varchar(5);
c_id_ufide_w		varchar(2);
c_id_cic_w		varchar(11);
c_id_esco_w		varchar(1);
c_endereco_w		varchar(35);
c_numero_w		varchar(6);
c_complem_w		varchar(15);
c_bairro_w		varchar(15);
c_id_uf_w		varchar(2);
c_ibge_w			varchar(7);
c_id_cep_w		varchar(8);
c_id_refe_w		varchar(35);
c_id_fone_w		varchar(11);
c_id_sus_w		varchar(15);
c_us_uf_w		varchar(2);
c_us_ibge_w		varchar(7);
c_us_cnes_w		varchar(7);
c_us_nome_w		varchar(40);
c_pron_w			varchar(12);
c_anm_prev_w		varchar(1);
c_anm_pano_w		varchar(4);
c_anm_diu_w		varchar(1);
c_anm_grav_w		varchar(1);
c_anm_conc_w		varchar(1);
c_anm_horm_w		varchar(1);
c_anm_radi_w		varchar(1);
c_anm_dum_w		timestamp;
c_anm_rsex_w		varchar(1);
c_anm_meno_w		varchar(1);
c_cli_insp_w		varchar(1);
c_cli_sina_w		varchar(1);
c_res_tipa_w		varchar(1);
c_rej_aus_w		varchar(1);
c_rej_dan_w		varchar(1);
c_rej_alh_w		varchar(1);
c_rej_aesp_w		varchar(40);
c_rej_out_w		varchar(1);
c_rej_oesp_w		varchar(40);
c_adq_mat_w		varchar(1);
c_adq_acel_w		varchar(1);
c_adq_sang_w		varchar(1);
c_adq_pio_w		varchar(1);
c_adq_art_w		varchar(1);
c_adq_cont_w		varchar(1);
c_adq_int_w		varchar(1);
c_adq_out_w		varchar(1);
c_adq_outr_w		varchar(40);
c_epi_esc_w		varchar(1);
c_epi_gla_w		varchar(1);
c_epi_met_w		varchar(1);
c_res_norm_w		varchar(1);
c_bem_infl_w		varchar(1);
c_bem_meta_w		varchar(1);
c_bem_repa_w		varchar(1);
c_bem_atro_w		varchar(1);
c_bem_radi_w		varchar(1);
c_bem_out_w		varchar(1);
c_bem_outr_w		varchar(40);
c_mic_lact_w		varchar(1);
c_mic_coco_w		varchar(1);
c_mic_baci_w		varchar(1);
c_mic_chla_w		varchar(1);
c_mic_acti_w		varchar(1);
c_mic_cand_w		varchar(1);
c_mic_tric_w		varchar(1);
c_mic_herp_w		varchar(1);
c_mic_gard_w		varchar(1);
c_mic_out_w		varchar(1);
c_mic_outr_w		varchar(40);
c_ati_esc_w		varchar(1);
c_ati_gla_w		varchar(1);
c_ati_ind_w		varchar(1);
c_cel_esca_w		varchar(1);
c_gla_aden_w		varchar(1);
c_neo_mali_w		varchar(1);
c_neo_mout_w		varchar(40);
c_cel_endo_w		varchar(1);
c_obs_ger_w		varchar(100);
d_col_us_w		timestamp;
d_recebe_w		timestamp;
d_libera_w		timestamp;
c_pat_cns_w		varchar(15);
c_pat_cic_w		varchar(11);
c_erro_w			varchar(100);
c_id_raca_w		varchar(2);
cd_cnpj_unidade_saude_w	varchar(14);
cd_profissional_w		varchar(10);
nr_interno_conta_w		bigint;
nr_atendimento_w		bigint;
nr_seq_siscolo_w		bigint;
dt_emissao_w		timestamp;
dt_liberacao_w		timestamp;
nr_seq_unidade_saude_w	bigint;
cd_estabelecimento_w	integer;
cd_pessoa_fisica_w	varchar(10);
c_etnia_w		varchar(3);
c_nacional_w		varchar(3);
nr_prescricao_w         laudo_paciente_v.nr_prescricao%type;
cd_medico_resp_w        laudo_paciente_v.cd_medico_resp%type;
ie_obter_cns_cpf_w      varchar(1);

c01 CURSOR FOR
	SELECT	a.nr_sequencia,
		substr(a.cd_cnpj_unidade_saude,1,14),
		a.cd_estabelecimento,
		substr(a.cd_profissional,1,10),
		trunc(a.dt_emissao),
		trunc(a.dt_liberacao),
		a.nr_seq_unidade_saude,
		a.nr_atendimento,
		b.nr_interno_conta,
                a.nr_prescricao
	from	conta_paciente b,
		siscolo_atendimento a
	where	a.nr_atendimento = b.nr_atendimento
	and	(((SELECT count(*)
		from	siscolo_cito_anamnese x
		where	x.nr_seq_siscolo = a.nr_sequencia) > 0) and
		((select count(*)
		from	siscolo_cito_atipias x
		where	x.nr_seq_siscolo = a.nr_sequencia) > 0) and
		((select count(*)
		from	siscolo_cito_avaliacao x
		where	x.nr_seq_siscolo = a.nr_sequencia) > 0) and
		((select count(*)
		from	siscolo_cito_diagnostico x
		where	x.nr_seq_siscolo = a.nr_sequencia) > 0))
	and	a.dt_liberacao   = (	select 	max(x.dt_liberacao)
					from	siscolo_atendimento x
					where	x.nr_atendimento = a.nr_atendimento)
	and	b.nr_seq_protocolo = nr_seq_protocolo_p
	order by nr_sequencia;


BEGIN

ie_obter_cns_cpf_w      := Obter_Valor_Param_Usuario(1125,172, Obter_perfil_Ativo, nm_usuario_p, 0);

delete 	from w_interf_citcolo
where	nr_seq_protocolo = nr_seq_protocolo_p;

open c01;
loop
fetch c01 into
	nr_seq_siscolo_w,
	cd_cnpj_unidade_saude_w,
	cd_estabelecimento_w,
	cd_profissional_w,
	dt_emissao_w,
	dt_liberacao_w,
	nr_seq_unidade_saude_w,
	nr_atendimento_w,
	nr_interno_conta_w,
        nr_prescricao_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	begin
	select	lpad(max(substr(sus_obter_cnes_estab_unif(a.cd_estabelecimento,'B'),1,7)),7,'0') c_cnes,
		max(a.nr_sequencia) c_exame,
		max(upper(substr(obter_nome_pf(c.cd_pessoa_fisica),1,70))) c_id_nome,
		max(upper(substr(obter_compl_pf(c.cd_pessoa_fisica,5,'N'),1,60))) c_nomemae,
		'' c_id_apel,
		max(to_date(obter_dados_pf(c.cd_pessoa_fisica,'DN'),'dd/mm/yyyy')) d_dtnasc,
		max(substr(obter_dados_pf(c.cd_pessoa_fisica,'I'),1,2)) c_id_idad,
		max(substr(obter_dados_pf(c.cd_pessoa_fisica,'RG'),1,12)) c_id_ident,
		max(substr(obter_dados_pf(c.cd_pessoa_fisica,'O'),1,5)) c_id_emis,
		max(CASE WHEN obter_dados_pf(c.cd_pessoa_fisica,'RG')='' THEN ''  ELSE upper(substr(sus_obter_codigo_uf(obter_compl_pf(c.cd_pessoa_fisica,1,'UF')),1,2)) END ) c_id_ufide,
		max(substr(obter_dados_pf(c.cd_pessoa_fisica,'CPF'),1,11)) c_id_cic,
		max(CASE WHEN obter_dados_pf(c.cd_pessoa_fisica,'GI')='Analfabeto' THEN '1' WHEN obter_dados_pf(c.cd_pessoa_fisica,'GI')='Primeiro  Grau  Incompleto' THEN '2' WHEN obter_dados_pf(c.cd_pessoa_fisica,'GI')='Primeiro Grau' THEN '3' WHEN obter_dados_pf(c.cd_pessoa_fisica,'GI')='Segundo Grau' THEN '4' WHEN obter_dados_pf(c.cd_pessoa_fisica,'GI')='Superior' THEN '5'  ELSE '0' END ) c_id_esco,
		max(upper(substr(elimina_caractere_especial(obter_compl_pf(c.cd_pessoa_fisica,1,'EN')),1,35))) c_endereco,
		max(substr(elimina_caractere_especial(obter_compl_pf(c.cd_pessoa_fisica,1,'NR')),1,6)) c_id_numero,
		max(upper(substr(elimina_caractere_especial(obter_compl_pf(c.cd_pessoa_fisica,1,'CO')),1,15))) c_complem,
		max(upper(substr(elimina_caractere_especial(obter_compl_pf(c.cd_pessoa_fisica,1,'B')),1,15))) c_bairro,
		max(upper(substr(sus_obter_codigo_uf(obter_compl_pf(c.cd_pessoa_fisica,1,'UF')),1,2))) c_id_uf,
		max(substr(obter_compl_pf(c.cd_pessoa_fisica,1,'CDM')||calcula_digito('MODULO10',obter_compl_pf(c.cd_pessoa_fisica,1,'CDM')),1,7)) c_ibge,
		max(substr(obter_compl_pf(c.cd_pessoa_fisica,1,'CEP'),1,8)) c_id_cep,
		'' c_id_refe,
		max(substr(obter_compl_pf(c.cd_pessoa_fisica,1,'T'),1,11)) c_id_fone,
		max(substr(obter_dados_pf(c.cd_pessoa_fisica,'CNS'),1,15)) c_id_sus,
		max(substr(sus_obter_codigo_uf(obter_dados_unid_saude_colo(a.nr_sequencia,'UF')),1,2)) c_us_uf,
		max(substr(obter_dados_unid_saude_colo(a.nr_sequencia,'CDM'),1,7)) c_us_ibge,
		lpad(max(substr(obter_dados_unid_saude_colo(a.nr_sequencia,'CNES'),1,7)),7,'0') c_us_cnes,
		max(upper(substr(elimina_caractere_especial(obter_dados_unid_saude_colo(a.nr_sequencia,'NM')),1,40))) c_us_nome,
		max(obter_prontuario_paciente(c.cd_pessoa_fisica)) c_pron,
		max(c.cd_pessoa_fisica),
		max(coalesce(CASE WHEN obter_dados_pf(c.cd_pessoa_fisica,'CP')='Amarela' THEN '04' WHEN obter_dados_pf(c.cd_pessoa_fisica,'CP')='Branca' THEN '01' WHEN obter_dados_pf(c.cd_pessoa_fisica,'CP')='Indio' THEN '05' WHEN obter_dados_pf(c.cd_pessoa_fisica,'CP')='Negra' THEN '02' WHEN obter_dados_pf(c.cd_pessoa_fisica,'CP')='Parda' THEN '03' WHEN obter_dados_pf(c.cd_pessoa_fisica,'CP')='Sem informacao' THEN '99' END ,'99')) c_id_raca,
		coalesce(substr(MAX(CASE WHEN Sus_Obter_Cor_Pele(c.cd_pessoa_fisica, 'C')='5' THEN sus_obter_etnia(c.cd_pessoa_fisica, 'C')  ELSE '0' END ),2,3),'0') c_etnia,
		lpad(MAX(obter_dados_pf(c.cd_pessoa_fisica,'NC')),3,'0') c_nacional
	into STRICT	c_cnes_w,
		c_exame_w,
		c_id_nome_w,
		c_nomemae_w,
		c_id_apel_w,
		d_dtnasc_w,
		c_id_idad_w,
		c_id_ident_w,
		c_id_emis_w,
		c_id_ufide_w,
		c_id_cic_w,
		c_id_esco_w,
		c_endereco_w,
		c_numero_w,
		c_complem_w,
		c_bairro_w,
		c_id_uf_w,
		c_ibge_w,
		c_id_cep_w,
		c_id_refe_w,
		c_id_fone_w,
		c_id_sus_w,
		c_us_uf_w,
		c_us_ibge_w,
		c_us_cnes_w,
		c_us_nome_w,
		c_pron_w,
		cd_pessoa_fisica_w,
		c_id_raca_w,
		c_etnia_w,
		c_nacional_w
	from	atendimento_paciente c,
		conta_paciente b,
		siscolo_atendimento a
	where	a.nr_atendimento = b.nr_atendimento
	and	b.nr_atendimento = c.nr_atendimento
	and	a.nr_sequencia   = nr_seq_siscolo_w;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(210378,'NR_SEQ_SISCOLO_P='||nr_seq_siscolo_w||'NR_ATENDIMENTO_P='||nr_atendimento_w);
		/*Problemas em obter os dados do paciente do laudo: '||nr_seq_siscolo_w||' no antedimento: '||nr_atendimento_w*/

	end;

	begin
	select	CASE WHEN ie_fez_papanicolau='S' THEN '3' WHEN ie_fez_papanicolau='N' THEN '1' WHEN ie_fez_papanicolau='X' THEN '2' WHEN ie_fez_papanicolau='F' THEN '4'  ELSE '0' END ,
		trunc(dt_ultimo_exame_papanic),
		CASE WHEN ie_usa_diu='S' THEN '3' WHEN ie_usa_diu='X' THEN '2'  ELSE '1' END ,
		CASE WHEN ie_gravida='S' THEN '3' WHEN ie_gravida='X' THEN '2'  ELSE '1' END ,
		CASE WHEN ie_usa_anticoncep='S' THEN '3' WHEN ie_usa_anticoncep='X' THEN '2'  ELSE '1' END ,
		CASE WHEN ie_usa_hormonio='S' THEN '3' WHEN ie_usa_hormonio='X' THEN '2'  ELSE '1' END ,
		CASE WHEN ie_fez_radio='S' THEN '3' WHEN ie_fez_radio='X' THEN '2'  ELSE '1' END ,
		trunc(dt_ultima_mestrua),
		CASE WHEN ie_sang_relacao='S' THEN '3'  ELSE '1' END ,
		CASE WHEN ie_sang_menopausa='S' THEN '3'  ELSE '1' END ,
		CASE WHEN ie_inspecao_colo='N' THEN '1' WHEN ie_inspecao_colo='A' THEN '2' WHEN ie_inspecao_colo='T' THEN '3' WHEN ie_inspecao_colo='C' THEN '4'  ELSE '0' END ,
		CASE WHEN ie_sinal_dst='S' THEN '1' WHEN ie_sinal_dst='N' THEN '3'  ELSE '0' END ,
		trunc(dt_coleta)
	into STRICT	c_anm_prev_w,
		c_anm_pano_w,
		c_anm_diu_w,
		c_anm_grav_w,
		c_anm_conc_w,
		c_anm_horm_w,
		c_anm_radi_w,
		c_anm_dum_w,
		c_anm_rsex_w,
		c_anm_meno_w,
		c_cli_insp_w,
		c_cli_sina_w,
		d_col_us_w
	from	siscolo_cito_anamnese
	where	nr_seq_siscolo   = nr_seq_siscolo_w;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(210379,'NR_SEQ_SISCOLO_P='||nr_seq_siscolo_w||'NR_ATENDIMENTO_P='||nr_atendimento_w);
		/*Problemas em obter os dados da anamnese do laudo: '||nr_seq_siscolo_w||' no antedimento: '||nr_atendimento_w*/

	end;

	begin
	select	'0' c_res_tipa,
		CASE WHEN ie_ausencia_erro='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_lamina_danificada='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_causas_alheias='S' THEN '3'  ELSE '0' END ,
		substr(ds_causas_alheias,1,40),
		CASE WHEN ie_outras_causas='S' THEN '3'  ELSE '0' END ,
		substr(ds_outras_causas,1,40),
		CASE WHEN ie_adequabilidade='S' THEN '3' WHEN ie_adequabilidade='I' THEN '1'  ELSE '0' END ,
		CASE WHEN ie_acelular='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_prejudic_sague='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_prejudic_piocitos='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_artefatos_dessec='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_contaminantes_ext='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_superposicao_cel='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_prejudic_outros='S' THEN '3'  ELSE '0' END ,
		'' c_adq_outr,
		CASE WHEN ie_epitelio_escamoso='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_epitelio_glandular='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_epitelio_metaplasico='S' THEN '3'  ELSE '0' END
	into STRICT	c_res_tipa_w,
		c_rej_aus_w,
		c_rej_dan_w,
		c_rej_alh_w,
		c_rej_aesp_w,
		c_rej_out_w,
		c_rej_oesp_w,
		c_adq_mat_w,
		c_adq_acel_w,
		c_adq_sang_w,
		c_adq_pio_w,
		c_adq_art_w,
		c_adq_cont_w,
		c_adq_int_w,
		c_adq_out_w,
		c_adq_outr_w,
		c_epi_esc_w,
		c_epi_gla_w,
		c_epi_met_w
	from	siscolo_cito_avaliacao
	where	nr_seq_siscolo   = nr_seq_siscolo_w;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(210380,'NR_SEQ_SISCOLO_P='||nr_seq_siscolo_w||'NR_ATENDIMENTO_P='||nr_atendimento_w);
		/*Problemas em obter os dados da avaliacao pre-analitica do laudo: '||nr_seq_siscolo_w||' no antedimento: '||nr_atendimento_w*/

	end;

	begin
	select	CASE WHEN ie_normalidade_mat='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_alter_inflamacao='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_metaplasia_esc='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_alter_reparacao='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_atrofia_inflam='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_alter_radiacao='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_alter_outras='S' THEN '3'  ELSE '0' END ,
		substr(ds_alter_outras,1,40),
		CASE WHEN ie_lactobacilos='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_microb_cocos='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_micro_bacilos='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_micro_chlamydia='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_actinomyces_sp='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_candida_sp='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_trichomonas_vag='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_citopatico_herpes='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_bacilos_supracito='S' THEN '3'  ELSE '0' END ,
		CASE WHEN ie_microb_outras='S' THEN '3'  ELSE '0' END ,
		substr(ds_microb_outras,1,40)
	into STRICT	c_res_norm_w,
		c_bem_infl_w,
		c_bem_meta_w,
		c_bem_repa_w,
		c_bem_atro_w,
		c_bem_radi_w,
		c_bem_out_w,
		c_bem_outr_w,
		c_mic_lact_w,
		c_mic_coco_w,
		c_mic_baci_w,
		c_mic_chla_w,
		c_mic_acti_w,
		c_mic_cand_w,
		c_mic_tric_w,
		c_mic_herp_w,
		c_mic_gard_w,
		c_mic_out_w,
		c_mic_outr_w
	from	siscolo_cito_diagnostico
	where	nr_seq_siscolo   = nr_seq_siscolo_w;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(210381,'NR_SEQ_SISCOLO_P='||nr_seq_siscolo_w||'NR_ATENDIMENTO_P='||nr_atendimento_w);
		/*Problemas em obter os dados do diagnosto descritivo do laudo: '||nr_seq_siscolo_w||' no antedimento: '||nr_atendimento_w*/

	end;

	if (ie_obter_cns_cpf_w = 'S')      then
		begin
		select  cd_medico_resp
		into STRICT    cd_medico_resp_w
		from    laudo_paciente_v
		where   nr_prescricao = nr_prescricao_w
                and     coalesce(dt_cancelamento::text, '') = '';
		exception
		when others then
			cd_medico_resp_w := 'X';
		end;
		if (cd_medico_resp_w <> 'X')      then
		       cd_profissional_w := cd_medico_resp_w;
		end if;
        end if;

	begin

	select	CASE WHEN ie_atipicas_escamosas='P' THEN '1' WHEN ie_atipicas_escamosas='N' THEN '2'  ELSE '0' END ,
		CASE WHEN ie_atipicas_glandulares='P' THEN '1' WHEN ie_atipicas_glandulares='N' THEN '2'  ELSE '0' END ,
		CASE WHEN ie_atipicas_indefinidas='P' THEN '1' WHEN ie_atipicas_indefinidas='N' THEN '2'  ELSE '0' END ,
		CASE WHEN ie_atipias_escamosas='H' THEN '1' WHEN ie_atipias_escamosas='N' THEN '2' WHEN ie_atipias_escamosas='M' THEN '3' WHEN ie_atipias_escamosas='C' THEN '4'  ELSE '0' END ,
		CASE WHEN ie_atipias_gla_adeno='A' THEN 'C' WHEN ie_atipias_gla_adeno='E' THEN 'S' END ,
		CASE WHEN ie_neo_malignas='S' THEN '3'  ELSE '0' END ,
		substr(ds_neo_malignas,1,40),
		CASE WHEN ie_celula_endometrial='S' THEN '3'  ELSE '0' END ,
		substr(ds_obs_gerais,1,100),
		trunc(dt_liberacao),
		substr(obter_dados_pf(cd_profissional_w,'CNS'),1,15),
		substr(obter_dados_pf(cd_profissional_w,'CPF'),1,11),
		'' c_erro
	into STRICT	c_ati_esc_w,
		c_ati_gla_w,
		c_ati_ind_w,
		c_cel_esca_w,
		c_gla_aden_w,
		c_neo_mali_w,
		c_neo_mout_w,
		c_cel_endo_w,
		c_obs_ger_w,
		d_libera_w,
		c_pat_cns_w,
		c_pat_cic_w,
		c_erro_w
	from	siscolo_cito_atipias
	where	nr_seq_siscolo	= nr_seq_siscolo_w;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(210382,'NR_SEQ_SISCOLO_P='||nr_seq_siscolo_w||'NR_ATENDIMENTO_P='||nr_atendimento_w);
		/*Problemas em obter os dados das atipias celulares do laudo: '||nr_seq_siscolo_w||' no antedimento: '||nr_atendimento_w*/

	end;

	insert into w_interf_citcolo(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_pessoa_fisica,
			nr_seq_protocolo,
			nr_interno_conta,
			nr_atendimento,
			cd_cnpj_unidade_saude,
			nr_seq_siscolo,
			cd_profissional,
			dt_emissao,
			dt_liberacao,
			nr_seq_unidade_saude,
			c_cnes,
			c_exame,
			c_id_nome,
			c_nomemae,
			c_id_apel,
			d_dtnasc,
			c_id_idad,
			c_id_ident,
			c_id_emis,
			c_id_ufide,
			c_id_cic,
			c_id_esco,
			c_endereco,
			c_numero,
			c_complem,
			c_bairro,
			c_id_uf,
			c_ibge,
			c_id_cep,
			c_id_refe,
			c_id_fone,
			c_id_sus,
			c_us_uf,
			c_us_ibge,
			c_us_cnes,
			c_us_nome,
			c_pron,
			c_anm_diu,
			c_anm_prev,
			c_anm_pano,
			c_anm_grav,
			c_anm_conc,
			c_anm_horm,
			c_anm_radi,
			c_anm_dum,
			c_anm_rsex,
			c_anm_meno,
			c_cli_insp,
			c_cli_sina,
			c_res_tipa,
			c_rej_aus,
			c_rej_dan,
			c_rej_alh,
			c_rej_aesp,
			c_rej_out,
			c_rej_oesp,
			c_adq_mat,
			c_adq_acel,
			c_adq_sang,
			c_adq_pio,
			c_adq_art,
			c_adq_cont,
			c_adq_int,
			c_adq_out,
			c_adq_outr,
			c_epi_esc,
			c_epi_gla,
			c_epi_met,
			c_res_norm,
			c_bem_infl,
			c_bem_meta,
			c_bem_repa,
			c_bem_atro,
			c_bem_radi,
			c_bem_out,
			c_bem_outr,
			c_mic_lact,
			c_mic_coco,
			c_mic_baci,
			c_mic_chla,
			c_mic_acti,
			c_mic_cand,
			c_mic_tric,
			c_mic_herp,
			c_mic_gard,
			c_mic_out,
			c_mic_outr,
			c_ati_esc,
			c_ati_gla,
			c_ati_ind,
			c_cel_esca,
			c_gla_aden,
			c_neo_mali,
			c_neo_mout,
			c_cel_endo,
			c_obs_ger,
			d_col_us,
			d_recebe,
			d_libera,
			c_pat_cns,
			c_pat_cic,
			c_erro,
			c_id_raca,
			c_etnia,
			c_nacional)
		values (	nextval('w_interf_citcolo_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_pessoa_fisica_w,
			nr_seq_protocolo_p,
			nr_interno_conta_w,
			nr_atendimento_w,
			cd_cnpj_unidade_saude_w,
			nr_seq_siscolo_w,
			cd_profissional_w,
			dt_emissao_w,
			dt_liberacao_w,
			nr_seq_unidade_saude_w,
			c_cnes_w,
			c_exame_w,
			c_id_nome_w,
			c_nomemae_w,
			c_id_apel_w,
			d_dtnasc_w,
			c_id_idad_w,
			c_id_ident_w,
			c_id_emis_w,
			c_id_ufide_w,
			c_id_cic_w,
			c_id_esco_w,
			c_endereco_w,
			c_numero_w,
			c_complem_w,
			c_bairro_w,
			c_id_uf_w,
			c_ibge_w,
			c_id_cep_w,
			c_id_refe_w,
			c_id_fone_w,
			c_id_sus_w,
			c_us_uf_w,
			c_us_ibge_w,
			c_us_cnes_w,
			c_us_nome_w,
			c_pron_w,
			c_anm_diu_w,
			c_anm_prev_w,
			c_anm_pano_w,
			c_anm_grav_w,
			c_anm_conc_w,
			c_anm_horm_w,
			c_anm_radi_w,
			c_anm_dum_w,
			c_anm_rsex_w,
			c_anm_meno_w,
			c_cli_insp_w,
			c_cli_sina_w,
			c_res_tipa_w,
			c_rej_aus_w,
			c_rej_dan_w,
			c_rej_alh_w,
			c_rej_aesp_w,
			c_rej_out_w,
			c_rej_oesp_w,
			c_adq_mat_w,
			c_adq_acel_w,
			c_adq_sang_w,
			c_adq_pio_w,
			c_adq_art_w,
			c_adq_cont_w,
			c_adq_int_w,
			c_adq_out_w,
			c_adq_outr_w,
			c_epi_esc_w,
			c_epi_gla_w,
			c_epi_met_w,
			c_res_norm_w,
			c_bem_infl_w,
			c_bem_meta_w,
			c_bem_repa_w,
			c_bem_atro_w,
			c_bem_radi_w,
			c_bem_out_w,
			c_bem_outr_w,
			c_mic_lact_w,
			c_mic_coco_w,
			c_mic_baci_w,
			c_mic_chla_w,
			c_mic_acti_w,
			c_mic_cand_w,
			c_mic_tric_w,
			c_mic_herp_w,
			c_mic_gard_w,
			c_mic_out_w,
			c_mic_outr_w,
			c_ati_esc_w,
			c_ati_gla_w,
			c_ati_ind_w,
			c_cel_esca_w,
			c_gla_aden_w,
			c_neo_mali_w,
			c_neo_mout_w,
			c_cel_endo_w,
			c_obs_ger_w,
			d_col_us_w,
			dt_emissao_w,
			d_libera_w,
			c_pat_cns_w,
			c_pat_cic_w,
			c_erro_w,
			c_id_raca_w,
			c_etnia_w,
			c_nacional_w);

	end;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_gerar_interf_cito_siscolo ( nr_seq_protocolo_p bigint, nm_usuario_p text) FROM PUBLIC;

