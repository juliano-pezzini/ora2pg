-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE generate_exam_lab_result ( exam_lab_result_p INOUT exame_lab_resultado ) AS $body$
DECLARE

    ie_insert_executed_w   boolean := false;
    nr_attempts_w          smallint := 0;

BEGIN
    IF coalesce(exam_lab_result_p.dt_atualizacao::text, '') = '' THEN
        exam_lab_result_p.dt_atualizacao := clock_timestamp();
    END IF;
    IF coalesce(exam_lab_result_p.nm_usuario::text, '') = '' THEN
        exam_lab_result_p.nm_usuario := wheb_usuario_pck.get_nm_usuario;
    END IF;

    WHILE NOT ie_insert_executed_w LOOP
        nr_attempts_w := nr_attempts_w + 1;
        IF nr_attempts_w > 5 THEN
            CALL gravar_log_lab_pragma(
                cd_log_p => 16,
                ds_log_p => 'Erro ao gerar nr_seq_resultado.'
                            || 'dt_resultado=' || exam_lab_result_p.dt_resultado
                            || ' - dt_atualizacao=' || exam_lab_result_p.dt_atualizacao
                            || ' - nm_usuario=' || exam_lab_result_p.nm_usuario
                            || ' - nr_prescricao=' || exam_lab_result_p.nr_prescricao
                            || ' - nr_atendimento=' || exam_lab_result_p.nr_atendimento
                            || ' - cd_medico=' || exam_lab_result_p.cd_medico
                            || ' - nr_seq_protocolo=' || exam_lab_result_p.nr_seq_protocolo
                            || ' - dt_liberacao=' || exam_lab_result_p.dt_liberacao
                            || ' - cd_pessoa_fisica=' || exam_lab_result_p.cd_pessoa_fisica
                            || ' - nr_seq_pedido_exam_ext_item=' || exam_lab_result_p.nr_seq_pedido_exam_ext_item
                            || ' - nr_seq_reg_elemento=' || exam_lab_result_p.nr_seq_reg_elemento
                            || ' - nr_seq_pedido_externo=' || exam_lab_result_p.nr_seq_pedido_externo
                            || ' - cd_solicitacao_externa=' || exam_lab_result_p.cd_solicitacao_externa
                            || ' - ie_nivel_atencao=' || exam_lab_result_p.ie_nivel_atencao
                            || ' - nr_seq_soap=' || exam_lab_result_p.nr_seq_soap
                            || ' - nr_seq_atend_cons_pepa=' || exam_lab_result_p.nr_seq_atend_cons_pepa,
                nm_usuario_p => exam_lab_result_p.nm_usuario,
                nr_prescricao_p => exam_lab_result_p.nr_prescricao
            );

            CALL wheb_mensagem_pck.exibir_mensagem_abort(nr_seq_mensagem_p => 1106085);
        END IF;

        SELECT coalesce(MAX(nr_seq_resultado), 0) + 1
        INTO STRICT exam_lab_result_p.nr_seq_resultado
        FROM exame_lab_resultado;

        BEGIN
            INSERT INTO exame_lab_resultado VALUES (exam_lab_result_p.*);

            IF ( coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S' ) THEN
                COMMIT;
            END IF;

        EXCEPTION
            WHEN unique_violation THEN
                NULL;
        END;

        ie_insert_executed_w := true;
    END LOOP;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE generate_exam_lab_result ( exam_lab_result_p INOUT exame_lab_resultado ) FROM PUBLIC;

