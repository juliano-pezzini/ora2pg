-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_calculate_trans_review ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) AS $body$
DECLARE


	ie_active_w 							varchar(1) := '1';
	ie_telemetria 							varchar(5) := 'S';
	ie_rec_status 							varchar(5) := 'S';
	nr_red_alarm_count          			bigint := 0;
	nr_yellow_alarm_count       			bigint := 0;
	device_type 							varchar(10) := 'TL';
	battery_status 							varchar(10);
	pfcs_flag_settings 						smallint := 0;
	ds_pat                       			varchar(15) := 'Patient';
	ds_prac             					varchar(15) := 'Practitioner';
	ds_tele_req_status						varchar(15) := 'R';
	ds_active_status						varchar(15) := 'ACTIVE';
	ds_inactive_status						varchar(15) := 'INACTIVE';
	ds_planned_status						varchar(15) := 'PLANNED';
	ds_arrived_status						varchar(15) := 'ARRIVED';
	ds_monitor_dev_type 					varchar(10) := 'Monitor';
	ds_red_battery_alert_code				varchar(15) := 'A0401';
	ds_yellow_battery_alert_code			varchar(15) := 'A0402';
	ds_service_requested					varchar(10) := 'E0404';
	ds_service_status						varchar(15) := 'COMPLETED';
	cd_attending_role						varchar(20) := '405279007';
	ds_department_code 						varchar(15) := 'Department';
	ds_room_bed_code						varchar(10) := 'Room-Bed';
	qt_total_w								bigint:= 0;
	pfcs_panel_detail_seq_w					pfcs_panel_detail.nr_sequencia%type;
	nr_seq_operational_level_w  			bigint := 0;
	nr_seq_panel_w							pfcs_panel.nr_sequencia%type;

	--Cursor to fetch location
    cur_get_locations_for_pfcs CURSOR FOR
        SELECT loc.ds_department ds_department from
			pfcs_encounter enc,
            pfcs_patient pat,
			pfcs_encounter_location el,
			pfcs_location loc,
           pfcs_organization org
		where enc.si_status in (ds_planned_status, ds_arrived_status)
			and enc.nr_seq_patient = pat.nr_sequencia
			and pat.ie_active = ie_active_w
			and pat.nr_seq_organization = org.nr_sequencia
            and org.cd_estabelecimento = (cd_estabelecimento_p)::numeric
			and el.nr_seq_encounter = enc.nr_sequencia
			and el.nr_seq_location = loc.nr_sequencia
            group by loc.ds_department;

cur_get_tot_trans_pfcs CURSOR(location_p text)  FOR
	SELECT eid.ds_value nr_encounter,
		pat.patient_id id_patient,
		pfcs_get_human_name(enc.nr_seq_patient, ds_pat) nm_patient,
		pfcs_get_tele_time(pd.nr_sequencia, 'S') dt_recommendation_time,
		enc.ds_reason ds_diagnosis,
		pat.birthdate dt_dob,
        trunc(months_between(coalesce(pat.deceased_date, clock_timestamp()), pat.birthdate)/12) qt_idade_paciente,
		pat.gender ds_gender,
		enc.ds_classification ds_classification,
		enc.period_start dt_entrance,
		pfcs_get_human_name(pfcs_get_practitioner_seq(enc.nr_sequencia, cd_attending_role), ds_prac) ds_attending_physician,
		pfcs_get_code_status_tl(pat.nr_sequencia,'S')   ds_dnr_status,
		pfcs_get_location(enc.nr_sequencia, ds_department_code) ds_department,
		pfcs_get_location(enc.nr_sequencia, ds_room_bed_code) ds_bed,
		pd.ds_device_name ds_equipamento,
		pd.id_device cd_equipamento,
		pfcs_get_alarms_count(pat.nr_sequencia, ds_yellow_battery_alert_code, 24) nr_yellow_alarm_count,
		pfcs_get_alarms_count(pat.nr_sequencia, ds_red_battery_alert_code, 24) nr_red_alarm_count,
		pfcs_get_battery_status(pat.nr_sequencia) battery_status,
		pfcs_get_edi_score(enc.nr_sequencia) as nr_edi_score,
		pfcs_get_alarms_trends(pat.nr_sequencia, enc.nr_sequencia, 'TREND') ds_alarms_trends
	FROM pfcs_service_request sr, pfcs_organization org, pfcs_location loc, pfcs_encounter_location encloc, pfcs_encounter_identifier eid, pfcs_encounter enc
LEFT OUTER JOIN pfcs_patient_flag pf ON (enc.nr_sequencia = pf.nr_seq_encounter AND pf.cd_flag in (ds_red_battery_alert_code, ds_yellow_battery_alert_code)  )
, pfcs_patient pat
LEFT OUTER JOIN pfcs_patient_flag pf ON (pat.nr_sequencia = pf.nr_seq_patient AND pf.cd_flag in (ds_red_battery_alert_code, ds_yellow_battery_alert_code)  )
, pfcs_device pd
LEFT OUTER JOIN pfcs_patient_flag pf ON (pd.nr_sequencia = pf.nr_seq_device AND pf.cd_flag in (ds_red_battery_alert_code, ds_yellow_battery_alert_code)  )
WHERE sr.si_status = ds_service_status and sr.cd_service = ds_service_requested and sr.nr_seq_encounter = enc.nr_sequencia and enc.si_status in (ds_planned_status, ds_arrived_status) and eid.nr_seq_encounter = enc.nr_sequencia and enc.nr_seq_patient = pat.nr_sequencia and pat.ie_active = ie_active_w and pat.nr_seq_organization = org.nr_sequencia and org.cd_estabelecimento = (cd_estabelecimento_p)::numeric and pat.nr_sequencia = pd.nr_seq_patient and pd.si_status = ds_active_status and pd.ds_device_type = ds_monitor_dev_type and pfcs_get_tele_time(pd.nr_sequencia, 'S') > (24 * 60)     and enc.nr_sequencia = encloc.nr_seq_encounter and encloc.nr_seq_location = loc.nr_sequencia and loc.ds_department = location_p;

     /*Cursor to read location from tasy table */

     c01_get_locations_for_tasy CURSOR FOR
		SELECT uae.cd_setor_atendimento cd_department, sa.ds_setor_atendimento ds_department
		from unidade_atend_equip uae, equipamento eq, setor_atendimento sa
		where eq.cd_estabelecimento = (cd_estabelecimento_p)::numeric  and eq.ie_tipo_equipamento = 'TL'
		and uae.cd_equipamento = eq.cd_equipamento and uae.cd_setor_atendimento = sa.cd_setor_atendimento
		group by uae.cd_setor_atendimento, sa.ds_setor_atendimento;

	/* Cursor to calculate discharge count for tasy */

cur_get_pati_review_tasy CURSOR(cd_setor_atendimento_p bigint)  FOR
	SELECT 	ap.nr_atendimento nr_encounter,
			coalesce(get_formatted_person_name(ap.cd_pessoa_fisica, 'capitalizeFirstLetter'), obter_nome_pf(ap.cd_pessoa_fisica)) nm_patient,
			ap.cd_pessoa_fisica id_patient,
			substr(obter_sexo_pf(ap.cd_pessoa_fisica,'D'),1,20) ds_gender,
			pc_obter_dt_nascimento(ap.cd_pessoa_fisica) dt_dob,
            obter_dados_pf(ap.cd_pessoa_fisica, 'I') qt_idade_paciente,
			ap.ds_sintoma_paciente ds_diagnosis,
			pfcs_get_time_on_tele(ap.nr_atendimento,'TL', cd_estabelecimento_p) dt_recommendation_time,
			ap.dt_entrada dt_entrance,
			pfcs_obter_lista_dados_classif(ap.cd_pessoa_fisica) ds_classification,
			coalesce(get_formatted_person_name(ap.cd_medico_resp, 'capitalizeFirstLetter'), obter_nome_pf(ap.cd_medico_resp)) ds_attending_physician,
			pfcs_get_dnr_status(ap.nr_atendimento, cd_estabelecimento_p) ds_dnr_status,
			obter_setor_atual_paciente(ap.nr_atendimento) cd_department,
			obter_desc_setor_atend(obter_setor_atual_paciente(ap.nr_atendimento)) ds_department,
			ua.cd_unidade_basica || '-' || ua.cd_unidade_compl ds_bed,
			pfcs_get_encounter_device_code(ap.nr_atendimento, device_type, cd_estabelecimento_p) cd_equipamento,
			pfcs_get_encounter_device_name(ap.nr_atendimento, device_type, cd_estabelecimento_p) ds_equipamento
    from atendimento_paciente ap,
		   cpoe_recomendacao cr,
		   tipo_recomendacao tr,
		   atendimento_paciente_v apv,
		   atend_paciente_unidade apu,
		   unidade_atendimento ua
    where cr.nr_atendimento = ap.nr_atendimento
    and ap.nr_atendimento = apv.nr_atendimento
    and apu.nr_atendimento = cr.nr_atendimento
    and ap.nr_atendimento = apu.nr_atendimento
    and apu.nr_seq_interno = obter_atepacu_paciente(apu.nr_atendimento, 'A')
    and cr.cd_recomendacao = tr.cd_tipo_recomendacao
    and tr.ie_telemetria = ie_telemetria
    and coalesce(ap.dt_cancelamento::text, '') = ''
    and coalesce(ap.dt_alta_medico::text, '') = ''
    and coalesce(ap.dt_alta::text, '') = ''
    and coalesce(cr.dt_suspensao::text, '') = ''
    and apu.dt_saida_unidade is  null
    and pfcs_get_recommendation_status(cr.nr_sequencia) = ie_rec_status
    and pfcs_get_time_on_tele(ap.nr_atendimento,'TL', cd_estabelecimento_p) > (24 * 60)
    and ap.cd_estabelecimento = (cd_estabelecimento_p)::numeric
    and apu.cd_setor_atendimento = cd_setor_atendimento_p
	and ua.cd_setor_atendimento = apu.cd_setor_atendimento
	and ua.cd_unidade_basica = apu.cd_unidade_basica
	and ua.cd_unidade_compl = apu.cd_unidade_compl;
BEGIN

	nr_seq_operational_level_w := (cd_estabelecimento_p)::numeric;

	for r_c02 in cur_get_locations_for_pfcs loop
	begin
		qt_total_w := 0;
		for r_c01 in cur_get_tot_trans_pfcs(r_c02.ds_department) loop
		begin
			qt_total_w := qt_total_w + 1;

			select nextval('pfcs_panel_detail_seq') into STRICT pfcs_panel_detail_seq_w;

			CALL pfcs_pck_v2.pfcs_insert_details(
					nr_seq_indicator_p => nr_seq_indicator_p,
					nr_seq_operational_level_p	=> nr_seq_operational_level_w,
					nm_usuario_p => nm_usuario_p,
					nr_panel_detail_seq_p => pfcs_panel_detail_seq_w,
					nr_encounter_p => r_c01.nr_encounter,
					id_patient_p => r_c01.id_patient,
					nm_patient_p => r_c01.nm_patient,
					dt_birthdate_p => r_c01.dt_dob,
					ds_primary_diagnosis_p => r_c01.ds_diagnosis,
					ds_gender_p => r_c01.ds_gender,
					ds_dnr_status_p => r_c01.ds_dnr_status,
					qt_time_telemetry_p => r_c01.dt_recommendation_time,
					ds_classification_p => r_c01.ds_classification,
					dt_entrance_p => r_c01.dt_entrance,
					ds_service_line_p => r_c01.ds_attending_physician,
					cd_department_p => r_c01.ds_department,
					ds_department_p => r_c01.ds_department,
					ds_bed_location_p => r_c01.ds_bed,
					qt_red_alarms_p => r_c01.nr_red_alarm_count,
					qt_yellow_alarms_p => r_c01.nr_yellow_alarm_count,
					cd_equipamento_p => r_c01.cd_equipamento,
					ds_device_p => r_c01.ds_equipamento,
					ds_battery_status_p => r_c01.battery_status,
					ds_age_range_p => r_c01.qt_idade_paciente,
					ds_alarms_trends_p => r_c01.ds_alarms_trends,
					nr_edi_score_p => r_c01.nr_edi_score);
		end;
		end loop;

		 := pfcs_pck_v2.pfcs_generate_results(
			vl_indicator_p => qt_total_w, ds_reference_value_p => r_c02.ds_department, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => nr_seq_panel_w);
	end;
	end loop;
	
	CALL pfcs_pck_v2.pfcs_update_detail(
		nr_seq_indicator_p => nr_seq_indicator_p,
		nr_seq_panel_p => nr_seq_panel_w,
		nr_seq_operational_level_p => nr_seq_operational_level_w,
		nm_usuario_p => nm_usuario_p );

	CALL pfcs_pck_v2.pfcs_activate_records(
		nr_seq_indicator_p => nr_seq_indicator_p,
		nr_seq_operational_level_p => nr_seq_operational_level_w,
		nm_usuario_p => nm_usuario_p );

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_calculate_trans_review ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) FROM PUBLIC;

