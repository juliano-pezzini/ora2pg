-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ajustar_relatorio_livro (nr_seq_livro_p bigint) AS $body$
DECLARE

 
sg_modelo_w		varchar(6);
nr_nota_fiscal_w		varchar(10);
dt_dia_w			timestamp;
sg_uf_w			varchar(4);
vl_total_nota_w		double precision;
cd_cfop_w		varchar(80);
vl_base_calculo_w		double precision;
vl_tributo_w		double precision;
vl_variacao_w		double precision;
vl_outras_w		double precision;
soma_vl_total_w		double precision;
soma_vl_base_calculo_w 	double precision;
soma_vl_tributo_w		double precision;
soma_vl_variacao_w	double precision;
soma_vl_outras_w		double precision;
sg_modelo_v 	  	varchar(4);
dt_dia_v 	  		timestamp;
cd_cfop_v 	  	varchar(80);
nr_nota_fiscal_v 		varchar(10);
menor_nota_w   		varchar(10);
maior_nota_w   		varchar(10);

c01 CURSOR FOR 
	SELECT	coalesce(m.sg_modelo, 'NF') sg_modelo, 
		a.nr_nota_fiscal, 
		trunc(a.dt_entrada_saida) dt_dia, 
		substr(obter_dados_nota_fiscal(a.nr_sequencia, '31'), 1,10) sg_uf, 
		a.vl_total_nota, 
		o.cd_cfop, 
		obter_base_calc_icms_nf(a.nr_sequencia) vl_base_calculo, 
		Obter_Valor_Tributo_Nota(a.nr_sequencia, 'V') vl_tributo, 
		(Obter_variacao_fiscal_item(a.nr_sequencia,'ICMS',null, '2'))::numeric  vl_variacao, 
		(Obter_variacao_fiscal_item(a.nr_sequencia,'ICMS',null, '2'))::numeric  vl_outras 
	FROM natureza_operacao o, fis_lote_nota_fiscal n, fis_lote_livro_fiscal f, nota_fiscal a
LEFT OUTER JOIN modelo_nota_fiscal m ON (a.nr_seq_modelo = m.nr_sequencia)
WHERE n.nr_seq_nota_fiscal	= a.nr_sequencia and a.cd_natureza_operacao	= o.cd_natureza_operacao and n.nr_seq_lote		= f.nr_seq_lote  and f.nr_seq_livro_fiscal 	= nr_seq_livro_p order by 	trunc(a.dt_entrada_saida), 
		o.cd_cfop, 
		coalesce(m.sg_modelo, 'NF'), 
		substr(obter_dados_nota_fiscal(a.nr_sequencia, '31'), 1,10), 
		(a.nr_nota_fiscal)::numeric;
		
 

BEGIN 
	delete from w_livro_fiscal;
	commit;
	menor_nota_w 		:= '9999999';
	maior_nota_w 		:= '0';
	soma_vl_total_w		:= 0;
	soma_vl_base_calculo_w 	:= 0;
	soma_vl_tributo_w		:= 0;
	soma_vl_variacao_w   	:= 0;
	soma_vl_outras_w    	:= 0;
	 
	 
	open c01;
	loop 
	fetch c01 into 	sg_modelo_w, 
			nr_nota_fiscal_w, 
			dt_dia_w, 
			sg_uf_w, 
			vl_total_nota_w, 
			cd_cfop_w, 
			vl_base_calculo_w, 
			vl_tributo_w, 
			vl_variacao_w, 
			vl_outras_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		 
		if	((sg_modelo_v = sg_modelo_w) or (coalesce(sg_modelo_v::text, '') = '')) and 
			((dt_dia_v = dt_dia_w) or (coalesce(dt_dia_v::text, '') = '')) and 
			((cd_cfop_v = cd_cfop_w) or (coalesce(cd_cfop_v::text, '') = '')) and 
			(((nr_nota_fiscal_w)::numeric  = ((nr_nota_fiscal_v)::numeric  + 1)) or (coalesce(nr_nota_fiscal_v::text, '') = '')) then 
 
			/*grava valores anterior nas variaveis*/
 
 
			sg_modelo_v 	  := sg_modelo_w;
			dt_dia_v 	  := dt_dia_w;
			cd_cfop_v 	  := cd_cfop_w;
			nr_nota_fiscal_v  := nr_nota_fiscal_w;
 
			/*grava primeira nota*/
 
 
			if ((nr_nota_fiscal_w)::numeric  <= (menor_nota_w)::numeric ) then 
				menor_nota_w := nr_nota_fiscal_w;
			end if;
	 
			/*grava a ultima nota*/
 
 
			if ((nr_nota_fiscal_w)::numeric  >= (maior_nota_w)::numeric ) then 
				maior_nota_w := nr_nota_fiscal_w;
			end if;
	 
			/*soma os valores*/
 
 
			soma_vl_total_w		:= soma_vl_total_w + vl_total_nota_w;
			soma_vl_base_calculo_w 	:= soma_vl_base_calculo_w + vl_base_calculo_w;
			soma_vl_tributo_w	:= soma_vl_tributo_w + vl_tributo_w;
			soma_vl_variacao_w   	:= soma_vl_variacao_w + vl_variacao_w;
			soma_vl_outras_w    	:= soma_vl_outras_w + vl_outras_w;
			 
		else 
 
		/*insere na tabela w_*/
 
 
		insert 	into 	w_livro_fiscal(nr_sequencia, 
				nm_usuario, 
				dt_atualizacao, 
				nm_usuario_nrec, 
				dt_atualizacao_nrec, 
				sg_modelo, 
				nr_menor_nota, 
				nr_maior_nota, 
				ie_dia_mes, 
				sg_uf, 
				vl_total_notas, 
				cd_cfop, 
				vl_base_calculo, 
				vl_tributo, 
				vl_variacao, 
				vl_outras) 
		values (nextval('w_livro_fiscal_seq'), 
				'Tasy', 
				clock_timestamp(), 
				'Tasy', 
				clock_timestamp(), 
				sg_modelo_w, 
				menor_nota_w, 
				maior_nota_w, 
				dt_dia_v, 
				sg_uf_w, 
				soma_vl_total_w, 
				cd_cfop_w, 
				soma_vl_base_calculo_w, 
				soma_vl_tributo_w, 
				soma_vl_variacao_w, 
				soma_vl_outras_w);		
		  
			/*grava nas variaveis nota inicial e nota final o valor da nota*/
 
 
			sg_modelo_v		:= sg_modelo_w;
			dt_dia_v		:= dt_dia_w;
			cd_cfop_v		:= cd_cfop_w;
			nr_nota_fiscal_v	:= nr_nota_fiscal_w;
			menor_nota_w		:= nr_nota_fiscal_w;
			maior_nota_w		:= nr_nota_fiscal_w;
			soma_vl_total_w		:= vl_total_nota_w;
			soma_vl_base_calculo_w	:= vl_base_calculo_w;
			soma_vl_tributo_w	:= vl_tributo_w;
			soma_vl_variacao_w	:= vl_variacao_w;
			soma_vl_outras_w	:= vl_outras_w;
 
		end if;
	 
	end loop;
	close c01;
	 
/*insere na tabela W_*/
 
 
insert 	into w_livro_fiscal(nr_sequencia, 
			nm_usuario, 
			dt_atualizacao, 
			nm_usuario_nrec, 
			dt_atualizacao_nrec, 
			sg_modelo, 
			nr_menor_nota, 
			nr_maior_nota, 
			ie_dia_mes, 
			sg_uf, 
			vl_total_notas, 
			cd_cfop, 
			vl_base_calculo, 
			vl_tributo, 
			vl_variacao, 
			vl_outras) 
		values (nextval('w_livro_fiscal_seq'), 
			'Tasy', 
			clock_timestamp(), 
			'Tasy', 
			clock_timestamp(), 
			sg_modelo_w, 
			menor_nota_w, 
			maior_nota_w, 
			dt_dia_w, 
			sg_uf_w, 
			soma_vl_total_w, 
			cd_cfop_w, 
			soma_vl_base_calculo_w, 
			soma_vl_tributo_w, 
			soma_vl_variacao_w, 
			soma_vl_outras_w);
			 
/*limpa_variaveis;*/
 
 
		soma_vl_total_w		:= 0;
		soma_vl_base_calculo_w 	:= 0;
		soma_vl_tributo_w	:= 0;
		soma_vl_variacao_w	:= 0;
		soma_vl_outras_w	:= 0;
	 
	commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ajustar_relatorio_livro (nr_seq_livro_p bigint) FROM PUBLIC;

