-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE icesp_enviar_sms_aut_agendas () AS $body$
DECLARE


nr_seq_agenda_w		agenda_consulta.nr_sequencia%type;
nr_telefone_w		varchar(40);
cd_agenda_w		bigint;
dt_agenda_w		timestamp;
nm_estabelecimento_w	varchar(255);
nm_pessoa_fisica_w	varchar(60);
cd_estabelecimento_w	smallint;
ds_remetente_sms_w	varchar(255);
cd_tipo_agenda_w	bigint;
ds_erro_w		varchar(255);
ie_consiste_destinatario_sms	varchar(1);
				
C01 CURSOR FOR		
	SELECT	nr_sequencia,
		a.dt_agenda,
		substr(obter_nome_estabelecimento(b.cd_estabelecimento),1,255),
		b.cd_estabelecimento,
		b.cd_tipo_agenda
	from	agenda_consulta a,
		agenda b		
	where	a.cd_agenda 		= b.cd_agenda	
	and	b.cd_tipo_agenda	= 3
	and	trunc(a.dt_agenda)	= trunc(clock_timestamp())
	and	ie_status_agenda 	not in ('C','L','B','F','I')
	and	(a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '')
	and	(a.dt_agendamento IS NOT NULL AND a.dt_agendamento::text <> '')
	and	not exists (SELECT 1 from log_envio_sms x where a.nr_Sequencia = x.nr_seq_agenda)
	and	coalesce(ie_envio_sms,'N')	= 'E'
	order by 1;
	

BEGIN

/* Setting locale based on client settings */

if coalesce(philips_param_pck.get_nr_seq_idioma::text, '') = '' then
	CALL philips_param_pck.set_nr_seq_idioma(OBTER_NR_SEQ_IDIOMA('Tasy'));
end if;

ie_consiste_destinatario_sms := OBTER_VALOR_PARAM_USUARIO(0,214,0,wheb_usuario_pck.get_nm_usuario,wheb_usuario_pck.get_cd_estabelecimento);

if (clock_timestamp() >= trunc(clock_timestamp()) + 8/24) and (clock_timestamp() <= trunc(clock_timestamp()) + 18/24) then
	open C01;
	loop
	fetch C01 into	
		nr_seq_agenda_w,
		dt_agenda_w,
		nm_estabelecimento_w,
		cd_estabelecimento_w,
		cd_tipo_agenda_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin	
		if (cd_tipo_agenda_w = 3) then
			select	max(a.cd_agenda),
				CASE WHEN ie_consiste_destinatario_sms='N' THEN  MAX(b.nr_ddi_celular)|| MAX(b.nr_telefone_celular)  ELSE MAX(b.nr_ddd_celular)|| MAX(b.nr_telefone_celular) END ,
				max(SUBSTR(OBTER_NOME_PF(b.CD_PESSOA_FISICA),0,60))
			into STRICT	cd_agenda_w,
				nr_telefone_w,
				nm_pessoa_fisica_w
			from	pessoa_fisica b,
				agenda_consulta a
			where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
			and	a.nr_sequencia 		= nr_seq_agenda_w;
		end if;
		
		
		if (cd_estabelecimento_w IS NOT NULL AND cd_estabelecimento_w::text <> '') then
			select	max(substr(ds_remetente_sms,1,255))
			into STRICT	ds_remetente_sms_w
			from	parametro_agenda
			where	cd_estabelecimento	= cd_estabelecimento_w;
		end if;
		if (coalesce(ds_remetente_sms_w::text, '') = '') then
			ds_remetente_sms_w	:= nm_estabelecimento_w;
		end if;
		
		if (coalesce(cd_agenda_w,0) > 0) and (nr_telefone_w IS NOT NULL AND nr_telefone_w::text <> '') then
			begin
			CALL enviar_sms_agenda(ds_remetente_sms_w, nr_telefone_w, wheb_mensagem_pck.get_texto(799845,
												'nm_paciente_w='||nm_pessoa_fisica_w||
												';dt_agenda_dest_w='||to_char(dt_agenda_w, pkg_date_formaters.localize_mask('short', pkg_date_formaters.getUserLanguageTag(wheb_usuario_pck.get_cd_estabelecimento, wheb_usuario_pck.get_nm_usuario)))), cd_agenda_w, nr_seq_agenda_w, 'Tasy');				
			update	agenda_consulta
			set	ie_envio_sms = 'S'
			where	nr_sequencia = nr_seq_agenda_w;
			
			exception
			when others then
				/*gravar log na agenda_consulta caso ocorra algum problema no envio da mensagem*/

				update	agenda_consulta
				set	ie_envio_sms = 'E'
				where	nr_sequencia = nr_seq_agenda_w;				
			end;				
		end if;
		
		end;
	end loop;
	close C01;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE icesp_enviar_sms_aut_agendas () FROM PUBLIC;

