-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE suspender_itens_pend_prescr (nr_prescricao_p bigint, nm_usuario_p text) AS $body$
DECLARE

		 
nr_sequencia_w		integer;
nr_seq_material_w	integer;
nr_seq_gas_w		integer;
nr_seq_recomendacao_w	bigint;
nr_seq_solucao_w	integer;
nr_seq_dieta_w		integer;
nr_seq_jejum_w		integer;
nr_seq_horario_w	bigint;
nr_atendimento_w	bigint;
cd_material_w		integer;
nr_seq_motivo_susp_w	bigint;
nr_seq_nut_paciente_w	bigint;
nr_seq_nut_pac_w	bigint;
ie_agrupador_w		smallint;
dt_horario_w		timestamp;
ds_motivo_susp_w	varchar(255);
ie_tipo_item_w		varchar(10);
ie_tipo_item_ww		varchar(10);
nr_seq_hor_proc_w	bigint;
nr_seq_procedimento_w	integer;
nr_seq_procedimento_ww	integer;
cd_procedimento_w	integer;
dt_horario_proc_w	timestamp;
cd_estabelecimento_w	smallint;
ie_susp_medic_w		varchar(1);

--Suspender horários pendentes dos Medicamentos, Materiais e Soluções. 
c01 CURSOR FOR 
SELECT	a.nr_sequencia 
from	prescr_material a 
where	a.nr_prescricao = nr_prescricao_p 
and	coalesce(a.dt_suspensao::text, '') = '' 
and	((ie_susp_medic_w = 'N') or (a.ie_agrupador in (1,3,7,9))) 
and	((a.ie_agrupador <> 8) or (obter_status_solucao_prescr(2,a.nr_prescricao,a.nr_sequencia) = 'N')) 
and	((coalesce(a.nr_sequencia_solucao::text, '') = '') or (obter_status_solucao_prescr(1,a.nr_prescricao,a.nr_sequencia_solucao) = 'N')) 
and	not exists (	SELECT	1 
			from	prescr_mat_hor b 
			where	a.nr_Prescricao = b.nr_prescricao 
			and	b.nr_seq_material = a.nr_sequencia 
			and	(b.dt_fim_horario IS NOT NULL AND b.dt_fim_horario::text <> ''))		/* Hudson em 12/09/2011 OS355975 */
 
and	((coalesce(a.ie_sem_aprazamento,'N') = 'S') or (coalesce(a.ie_se_necessario,'N') = 'S') or (coalesce(a.ie_acm,'N') = 'S') or 
	 (exists (select 1 
		 from	prescr_mat_hor b 
		 where	a.nr_Prescricao = b.nr_prescricao 
		 and	b.nr_seq_material = a.nr_sequencia 
		 and	coalesce(nr_seq_solucao::text, '') = '' 
		 and	coalesce(b.dt_fim_horario::text, '') = '' 
		 and	((coalesce(b.nr_seq_lote::text, '') = '') or (not exists (select 1 from ap_lote c where c.nr_sequencia = b.nr_seq_lote and (c.dt_atend_farmacia IS NOT NULL AND c.dt_atend_farmacia::text <> '')))) 
		 and	coalesce(b.dt_suspensao::text, '') = '')));

c02 CURSOR FOR 
SELECT	a.nr_seq_solucao 
from	prescr_solucao a 
where	a.nr_prescricao = nr_prescricao_p 
and	coalesce(a.dt_suspensao::text, '') = '' 
and	ie_susp_medic_w = 'N' 
and	obter_status_solucao_prescr(1,a.nr_prescricao,a.nr_seq_solucao) = 'N'; 		-- Só será suspensa a solução que não tiver sido iniciada - Hudson OS355975 
			
c03 CURSOR FOR 
SELECT	a.nr_sequencia, 
	b.nr_sequencia, 
	a.cd_material, 
	a.nr_seq_motivo_susp, 
	a.ie_agrupador, 
	a.dt_horario, 
	a.ds_motivo_susp 
from	prescr_material b, 
	prescr_mat_hor a 
where	a.nr_prescricao = nr_prescricao_p 
and	a.nr_prescricao = b.nr_prescricao 
and	b.nr_sequencia = a.nr_seq_material 
and	((b.ie_agrupador <> 8) or (obter_status_solucao_prescr(2,b.nr_prescricao,b.nr_sequencia) = 'N')) 
and	((coalesce(b.nr_sequencia_solucao::text, '') = '') or (obter_status_solucao_prescr(1,b.nr_prescricao,b.nr_sequencia_solucao) = 'N')) 
and	((coalesce(a.nr_seq_lote::text, '') = '') or (not exists (	SELECT	1 
			from	ap_lote c 
			where	c.nr_sequencia = a.nr_seq_lote 
			and	(c.dt_atend_farmacia IS NOT NULL AND c.dt_atend_farmacia::text <> '')))) 
and	coalesce(b.dt_suspensao::text, '') = '' 
and	coalesce(a.dt_fim_horario::text, '') = '' 
and	coalesce(a.dt_suspensao::text, '') = '';

--Suspender horários pendentes dos Procedimentos e Coletas. 
C04 CURSOR FOR 
	SELECT	a.nr_sequencia 
	from	prescr_procedimento a 
	where	a.nr_prescricao = nr_prescricao_p 
	and	coalesce(a.dt_suspensao::text, '') = '' 
	and	coalesce(a.ie_status,'N') = 'N' 
	and	ie_susp_medic_w = 'N' 
	and ((coalesce(a.ie_status_execucao::text, '') = '') or (a.ie_status_execucao < 20)) 	 
	and	exists (SELECT 1 
		 from	prescr_proc_hor b 
		 where	a.nr_prescricao = b.nr_prescricao 
		 and	b.nr_seq_procedimento = a.nr_sequencia 
		 and	coalesce(b.dt_fim_horario::text, '') = '' 
		 and	coalesce(b.dt_suspensao::text, '') = '');
		
C05 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		b.nr_sequencia, 
		a.cd_procedimento, 
		a.dt_horario 
	from	prescr_procedimento b, 
		prescr_proc_hor a 
	where	a.nr_prescricao = nr_prescricao_p 
	and	a.nr_prescricao = b.nr_prescricao 
	and	a.nr_seq_procedimento = b.nr_sequencia 
	and	coalesce(b.ie_status,'N') = 'N' 
	and ((coalesce(b.ie_status_execucao::text, '') = '') or (b.ie_status_execucao < 20)) 
	and	ie_susp_medic_w = 'N' 
	and	coalesce(b.dt_suspensao::text, '') = '' 
	and	coalesce(a.dt_fim_horario::text, '') = '' 
	and	coalesce(a.dt_suspensao::text, '') = '';

--Suspender horários pendentes das dietas orais.		 
c06 CURSOR FOR 
	SELECT	a.nr_sequencia 
	from	prescr_dieta a, 
		prescr_medica b 
	where	a.nr_prescricao = b.nr_prescricao 
	and	a.nr_prescricao = nr_prescricao_p 
	and	coalesce(a.dt_suspensao::text, '') = '' 
	and	ie_susp_medic_w = 'N';

--Suspender horários pendentes dos jejuns.			 
C07 CURSOR FOR 
	SELECT	a.nr_sequencia 
	from	rep_jejum a 
	where	a.nr_prescricao = nr_prescricao_p 
	and	coalesce(a.ie_suspenso,'N') <> 'S';
	
--Suspender horários pendentes da NPT Adulta 1. 
C08 CURSOR FOR 
	SELECT	nr_sequencia 
	from	nut_paciente 
	where	nr_prescricao = nr_prescricao_p 
	and	coalesce(ie_suspenso,'N') <> 'S' 
	--and	obter_status_solucao_prescr(4,a.nr_prescricao,a.nr_sequencia) = 'N' 
	and	coalesce(ie_status,'N') = 'N' 
	--and	nvl(ie_status,'N') not in ('I','INT','T') 
	and	ie_susp_medic_w = 'N';
	
--Suspender horários pendentes da NPT Adulta 2, NPT Neonatal e NPT Pediátrica. 
C09 CURSOR FOR 
	SELECT	nr_sequencia 
	from	nut_pac 
	where	nr_prescricao = nr_prescricao_p 
	and	coalesce(ie_suspenso,'N') <> 'S' 
	--and	((ie_npt_adulta = 'P') or (obter_status_solucao_prescr(decode(nvl(ie_npt_adulta,'S'),'S',6,'N',5),a.nr_prescricao,a.nr_sequencia) = 'N')) 
	and	coalesce(ie_status,'N') = 'N' 
	--and	nvl(ie_status,'N') not in ('I','INT','T') 
	and	ie_susp_medic_w = 'N';

--Suspender horários pendentes da gasoterapia.	 
C10 CURSOR FOR 
	SELECT	nr_sequencia 
	from	prescr_gasoterapia 
	where	nr_prescricao = nr_prescricao_p 
	and	substr(Obter_Status_Gasoterapia(nr_sequencia, 'C'),1,80) in ('N','P') /* Hudson em 12/09/2011 OS355975 */
 
	and	coalesce(dt_suspensao::text, '') = '' 
	and	ie_susp_medic_w = 'N';
	
--Suspender horários pendentes das recomendações. 
C11 CURSOR FOR 
	SELECT	nr_sequencia 
	from	prescr_recomendacao 
	where	nr_prescricao = nr_prescricao_p 
	and	coalesce(dt_suspensao::text, '') = '' 
	and	ie_susp_medic_w = 'N';

BEGIN
 
select	nr_atendimento, 
	cd_estabelecimento 
into STRICT	nr_atendimento_w, 
	cd_estabelecimento_w 
from	prescr_medica 
where	nr_prescricao = nr_prescricao_p;
 
ie_susp_medic_w := obter_param_usuario(924, 913, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_susp_medic_w);
 
open C01;
loop 
fetch C01 into	 
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then 
		CALL Suspender_item_Prescricao(	nr_prescricao_p, 
						nr_sequencia_w, 
						null, 
						null, 
						'PRESCR_MATERIAL', 
						nm_usuario_p, 
						'S', 
						924);
	end if;
end loop;
close C01;
 
open C02;
loop 
fetch C02 into	 
	nr_seq_solucao_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	if (nr_seq_solucao_w IS NOT NULL AND nr_seq_solucao_w::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then 
		CALL Suspender_item_Prescricao(	nr_prescricao_p, 
						nr_seq_solucao_w, 
						null, 
						null, 
						'PRESCR_SOLUCAO', 
						nm_usuario_p, 
						'S', 
						924);
	end if;
end loop;
close C02;
 
open C03;
loop 
fetch C03 into	 
	nr_seq_horario_w, 
	nr_seq_material_w, 
	cd_material_w, 
	nr_seq_motivo_susp_w, 
	ie_agrupador_w, 
	dt_horario_w, 
	ds_motivo_susp_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	 
	if (ie_agrupador_w = 1) then 
		ie_tipo_item_w := 'MAT';
	elsif (ie_agrupador_w = 2) then 
		ie_tipo_item_w := 'M';
	elsif (ie_agrupador_w = 4) then 
		ie_tipo_item_w := 'SOL';
	elsif (ie_agrupador_w = 12) then 
		ie_tipo_item_w := 'S';
	end if;
	 
	if (nr_seq_horario_w IS NOT NULL AND nr_seq_horario_w::text <> '') then 
		CALL suspender_horario(	nr_prescricao_p, 
					nr_seq_material_w, 
					nr_atendimento_w, 
					cd_material_w, 
					nr_seq_motivo_susp_w, 
					ie_tipo_item_w, 
					nr_seq_horario_w, 
					dt_horario_w, 
					coalesce(wheb_usuario_pck.get_cd_estabelecimento,cd_estabelecimento_w), /* Hudson em 12/09/2011 OS355975 */
 
					ds_motivo_susp_w, 
					nm_usuario_p);	
	end if;
end loop;
close C03;
 
open C04;
loop 
fetch C04 into	 
	nr_seq_procedimento_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	if (nr_seq_procedimento_w IS NOT NULL AND nr_seq_procedimento_w::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then 
		CALL Suspender_item_Prescricao(	nr_prescricao_p, 
						nr_seq_procedimento_w, 
						null, 
						null, 
						'PRESCR_PROCEDIMENTO', 
						nm_usuario_p, 
						'S', 
						924);
	end if;
end loop;
close C04;
 
open C05;
loop 
fetch C05 into	 
	nr_seq_hor_proc_w, 
	nr_seq_procedimento_ww, 
	cd_procedimento_w, 
	dt_horario_proc_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
	 
	CALL suspender_horario_proc(	nr_prescricao_p, 
				nr_seq_procedimento_ww, 
				nr_atendimento_w, 
				cd_procedimento_w, 
				nr_seq_hor_proc_w, 
				dt_horario_w, 
				nm_usuario_p);
	 
end loop;
close C05;
 
open C06;
loop 
fetch C06 into	 
	nr_seq_dieta_w;
EXIT WHEN NOT FOUND; /* apply on C06 */
	if (nr_seq_dieta_w IS NOT NULL AND nr_seq_dieta_w::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then 
		CALL Suspender_item_Prescricao(	nr_prescricao_p, 
						nr_seq_dieta_w, 
						null, 
						null, 
						'PRESCR_DIETA', 
						nm_usuario_p, 
						'S', 
						924);
	end if;
end loop;
close C06;
 
open C07;
loop 
fetch C07 into	 
	nr_seq_jejum_w;
EXIT WHEN NOT FOUND; /* apply on C07 */
	if (nr_seq_jejum_w IS NOT NULL AND nr_seq_jejum_w::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then 
		CALL Suspender_item_Prescricao(	nr_prescricao_p, 
						nr_seq_jejum_w, 
						null, 
						null, 
						'REP_JEJUM', 
						nm_usuario_p, 
						'S', 
						924);
	end if;
end loop;
close C07;
 
open C08;
loop 
fetch C08 into	 
	nr_seq_nut_paciente_w;
EXIT WHEN NOT FOUND; /* apply on C08 */
	if (nr_seq_nut_paciente_w IS NOT NULL AND nr_seq_nut_paciente_w::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then 
		CALL Suspender_item_Prescricao(	nr_prescricao_p, 
						nr_seq_nut_paciente_w, 
						null, 
						null, 
						'NUT_PACIENTE', 
						nm_usuario_p, 
						'S', 
						924);
	end if;
end loop;
close C08;
 
open C09;
loop 
fetch C09 into	 
	nr_seq_nut_pac_w;
EXIT WHEN NOT FOUND; /* apply on C09 */
	if (nr_seq_nut_pac_w IS NOT NULL AND nr_seq_nut_pac_w::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then 
		CALL Suspender_item_Prescricao(	nr_prescricao_p, 
						nr_seq_nut_pac_w, 
						null, 
						null, 
						'NUT_PAC', 
						nm_usuario_p, 
						'S', 
						924);
	end if;
end loop;
close C09;
 
open C10;
loop 
fetch C10 into	 
	nr_seq_gas_w;
EXIT WHEN NOT FOUND; /* apply on C10 */
	if (nr_seq_gas_w IS NOT NULL AND nr_seq_gas_w::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then 
		CALL Suspender_item_Prescricao(	nr_prescricao_p, 
						nr_seq_gas_w, 
						null, 
						null, 
						'PRESCR_GASOTERAPIA', 
						nm_usuario_p, 
						'S', 
						924);
	end if;
end loop;
close C10;
 
open C11;
loop 
fetch C11 into	 
	nr_seq_recomendacao_w;
EXIT WHEN NOT FOUND; /* apply on C11 */
	if (nr_seq_recomendacao_w IS NOT NULL AND nr_seq_recomendacao_w::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then 
		CALL Suspender_item_Prescricao(	nr_prescricao_p, 
						nr_seq_recomendacao_w, 
						null, 
						null, 
						'PRESCR_RECOMENDACAO', 
						nm_usuario_p, 
						'S', 
						924);
	end if;
end loop;
close C11;
 
update	prescr_material 
set	ie_status = 'S' 
where	(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '') 
and	nr_prescricao = nr_prescricao_p;
 
update	prescr_procedimento 
set	ie_status = 'S' 
where	(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '') 
and	nr_prescricao = nr_prescricao_p;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE suspender_itens_pend_prescr (nr_prescricao_p bigint, nm_usuario_p text) FROM PUBLIC;

