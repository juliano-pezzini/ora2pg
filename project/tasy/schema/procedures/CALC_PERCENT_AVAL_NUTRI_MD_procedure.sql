-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calc_percent_aval_nutri_md ( ie_sexo_p text, qt_idade_p bigint, qt_circ_braco_p bigint, qt_prega_cut_tricip_p bigint, qt_peso_atual_p bigint, qt_altura_p bigint, qt_altura_estimada_p bigint, qt_proteina_p bigint, qt_caloria_old_p bigint, qt_perc_circ_braco_p bigint, qt_perc_prega_cut_tricip_p bigint, qt_perc_circ_musc_braco_p bigint, pr_circ_braco_p INOUT bigint, pr_prega_cut_tricip_p INOUT bigint, pr_circ_musc_braco_p INOUT bigint, qt_gasto_ener_repouso_p INOUT bigint, qt_nec_proteica_p INOUT bigint, qt_gasto_ener_repouso_kj_p INOUT bigint, qt_nec_calorica_p INOUT bigint, qt_nec_calorica_kj_p INOUT bigint, qt_circ_musc_braco_p INOUT bigint, qt_caloria_p INOUT bigint, qt_caloria_kj_p INOUT bigint) AS $body$
BEGIN

    IF (qt_circ_braco_p IS NOT NULL AND qt_circ_braco_p::text <> '')
        AND (qt_prega_cut_tricip_p IS NOT NULL AND qt_prega_cut_tricip_p::text <> '')
    THEN
        qt_circ_musc_braco_P := coalesce(qt_circ_braco_p,0) - 3.14 * ( dividir_md(qt_prega_cut_tricip_p, 10) );
    END IF;

    IF (qt_perc_circ_braco_p IS NOT NULL AND qt_perc_circ_braco_p::text <> '') THEN
        pr_circ_braco_p := dividir_md((qt_circ_braco_p * 100), qt_perc_circ_braco_p);
    END IF;

    IF (qt_perc_prega_cut_tricip_p IS NOT NULL AND qt_perc_prega_cut_tricip_p::text <> '') THEN
        pr_prega_cut_tricip_p := dividir_md((qt_prega_cut_tricip_p * 100), qt_perc_prega_cut_tricip_p);
    END IF;

    IF (qt_perc_circ_musc_braco_p IS NOT NULL AND qt_perc_circ_musc_braco_p::text <> '') THEN
        pr_circ_musc_braco_p := dividir_md((qt_circ_musc_braco_p * 100), qt_perc_circ_musc_braco_p);
    END IF;

    IF ( ie_sexo_p = 'M' ) THEN
        qt_gasto_ener_repouso_p := 66.473 + ( 13.751 * qt_peso_atual_p ) + ( 5.003 * coalesce(qt_altura_p, qt_altura_estimada_p) ) - (
        6.755 * qt_idade_p );

        qt_gasto_ener_repouso_kj_p := converter_kcal_kjoules_md(qt_gasto_ener_repouso_p, 'KJ');
    ELSIF ( ie_sexo_p = 'F' ) THEN
        qt_gasto_ener_repouso_p := 655.095 + ( 9.563 * qt_peso_atual_p ) + ( 1.849 * coalesce(qt_altura_p, qt_altura_estimada_p) ) - (
        4.675 * qt_idade_p );

        qt_gasto_ener_repouso_kj_p := converter_kcal_kjoules_md(qt_gasto_ener_repouso_p, 'KJ');
    END IF;

    IF (qt_proteina_p IS NOT NULL AND qt_proteina_p::text <> '')
        AND (qt_peso_atual_p IS NOT NULL AND qt_peso_atual_p::text <> '')
    THEN
        qt_nec_proteica_p := qt_proteina_p * qt_peso_atual_p;
    END IF;

    IF ( (qt_caloria_p IS NOT NULL AND qt_caloria_p::text <> '') OR (qt_caloria_kj_p IS NOT NULL AND qt_caloria_kj_p::text <> '') )
        AND (qt_peso_atual_p IS NOT NULL AND qt_peso_atual_p::text <> '')
    THEN
        IF (qt_caloria_p IS NOT NULL AND qt_caloria_p::text <> '' AND  qt_caloria_old_p <> qt_caloria_p ) THEN
            qt_caloria_kj_p := converter_kcal_kjoules_md(qt_caloria_p, 'KJ');
        END IF;

        IF (
            coalesce(qt_caloria_p::text, '') = ''
            AND (qt_caloria_kj_p IS NOT NULL AND qt_caloria_kj_p::text <> '')
                AND ( qt_caloria_kj_p <> qt_caloria_kj_p )
        ) THEN
            qt_caloria_p := converter_kcal_kjoules_md(qt_caloria_kj_p, 'KCAL');
        END IF;

        qt_nec_calorica_p := qt_caloria_p * qt_peso_atual_p;
        qt_nec_calorica_kj_p := qt_caloria_kj_p * qt_peso_atual_p;
    END IF;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calc_percent_aval_nutri_md ( ie_sexo_p text, qt_idade_p bigint, qt_circ_braco_p bigint, qt_prega_cut_tricip_p bigint, qt_peso_atual_p bigint, qt_altura_p bigint, qt_altura_estimada_p bigint, qt_proteina_p bigint, qt_caloria_old_p bigint, qt_perc_circ_braco_p bigint, qt_perc_prega_cut_tricip_p bigint, qt_perc_circ_musc_braco_p bigint, pr_circ_braco_p INOUT bigint, pr_prega_cut_tricip_p INOUT bigint, pr_circ_musc_braco_p INOUT bigint, qt_gasto_ener_repouso_p INOUT bigint, qt_nec_proteica_p INOUT bigint, qt_gasto_ener_repouso_kj_p INOUT bigint, qt_nec_calorica_p INOUT bigint, qt_nec_calorica_kj_p INOUT bigint, qt_circ_musc_braco_p INOUT bigint, qt_caloria_p INOUT bigint, qt_caloria_kj_p INOUT bigint) FROM PUBLIC;

