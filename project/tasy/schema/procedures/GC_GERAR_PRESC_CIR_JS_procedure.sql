-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gc_gerar_presc_cir_js ( nr_atendimento_p bigint, cd_medico_p text, cd_procedimento_p text, nr_seq_agenda_p bigint, nr_doc_interno_p bigint, nr_doc_interno_aux_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, ie_origem_inf_p text, cd_perfil_p bigint ) AS $body$
DECLARE

 
nr_prescricao_w			bigint;
perm_gerar_cir_sem_atend_w	varchar(1);
gerar_cirurgia_prescricao_w	varchar(1);
gerar_prescr_patologia_w	varchar(1);
gerar_prescr_cirurgia_w		varchar(1);
ds_erro_w					varchar(255);
		

BEGIN 
 
perm_gerar_cir_sem_atend_w := obter_param_usuario(900, 245, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, perm_gerar_cir_sem_atend_w);
gerar_cirurgia_prescricao_w := obter_param_usuario(900, 62, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, gerar_cirurgia_prescricao_w);
gerar_prescr_patologia_w := obter_param_usuario(871, 405, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, gerar_prescr_patologia_w);
gerar_prescr_cirurgia_w := obter_param_usuario(900, 389, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, gerar_prescr_cirurgia_w);
 
 
if (perm_gerar_cir_sem_atend_w = 'N') and (coalesce(nr_atendimento_p::text, '') = '') then 
	begin 
	---Não é permitido a geração de cirurgias sem atendimento informado. Parâmetro [245] 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(52029);	
	end;
end if;
 
if (cd_medico_p IS NOT NULL AND cd_medico_p::text <> '') and (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') then 
	begin 
	 
	if (gerar_cirurgia_prescricao_w = 'N') then 
		begin 
		nr_prescricao_w := gerar_prescricao_agenda(nr_seq_agenda_p, nm_usuario_p, nr_prescricao_w, cd_estabelecimento_p);
		exception 
		when others then 
		---Não foi possível gerar a prescrição. Favor verificar o dados do agendamento! 
		ds_erro_w	:= substr(sqlerrm(SQLSTATE),1,255);
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(52030,'DS_ERRO='||ds_erro_w);
		end;
	end if;
 
	CALL gerar_cirurgia_agenda(cd_estabelecimento_p,nr_seq_agenda_p,nm_usuario_p,cd_setor_atendimento_p);
	 
	if (gerar_cirurgia_prescricao_w = 'N') then 
		begin 
		CALL gerar_proc_agenda_cirurgia(nr_seq_agenda_p,nr_prescricao_w,nm_usuario_p);
		 
		if (gerar_prescr_cirurgia_w = 'S') then 
			CALL gerar_prescricao_cirurgia(0,0,0,nr_seq_agenda_p,ie_origem_inf_p,nm_usuario_p,nr_prescricao_w,nr_doc_interno_p,null,900,cd_perfil_p,null,nr_doc_interno_aux_p,null,null);
		end if;
		end;
	end if;
	 
	if (gerar_prescr_patologia_w = 'S') then 
		begin 
		 
		CALL gerar_prescr_patologia_cirur(nr_seq_agenda_p,nm_usuario_p,cd_estabelecimento_p);
		 
		end;
	end if;
	 
	end;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gc_gerar_presc_cir_js ( nr_atendimento_p bigint, cd_medico_p text, cd_procedimento_p text, nr_seq_agenda_p bigint, nr_doc_interno_p bigint, nr_doc_interno_aux_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint, ie_origem_inf_p text, cd_perfil_p bigint ) FROM PUBLIC;

