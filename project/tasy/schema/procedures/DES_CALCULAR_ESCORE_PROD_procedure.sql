-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE des_calcular_escore_prod (dt_referencia_p timestamp, nm_usuario_p text, qt_pontos_p INOUT bigint, ds_historico_p INOUT text) AS $body$
DECLARE


qt_pontos_prod_w	double precision;
qt_producao_w		double precision;
qt_media_nivel_w	double precision;
qt_media_nivel_prop_w   double precision;
qt_perc_prod_w		double precision;
dt_mes_inicial_w        timestamp;
dt_mes_final_w          timestamp;
dt_mes_final_2_w          timestamp;
qt_dias_mes_w		bigint;
qt_total_horas_senior_w bigint;

qt_min_trab_os_proj_w	bigint;
qt_min_trab_os_w	bigint;
qt_min_ativ_extra_w	bigint;
ds_Sep_bv_w 	varchar(50);

qt_dias_corrente_w	bigint;


BEGIN

ds_sep_bv_w := obter_separador_bv;

dt_mes_inicial_w                := trunc(dt_referencia_p, 'month');
dt_mes_final_w                  := Fim_Mes(trunc(dt_referencia_p, 'month'));
qt_pontos_prod_w				:= 0;

if (trunc(dt_referencia_p,'month') = trunc(clock_timestamp(),'month')) then
	select	sum(qt_mes_corrente)
	into STRICT	qt_producao_w
	from	w_avaliacao_usuario
	where	nm_usuario 			= nm_usuario_p
	and	dt_referencia		= dt_referencia_p
	and	ie_referencia 		= 'C'
	and	nm_usuario_cor 		= 'TASY';
else
	/* Pega o usuário TASY que é o da JOB */

	select	sum(coalesce(qt_mes_01,0) + coalesce(qt_mes_02,0) + coalesce(qt_mes_03,0) +
		coalesce(qt_mes_04,0) + coalesce(qt_mes_05,0) + coalesce(qt_mes_06,0) +
		coalesce(qt_mes_07,0) + coalesce(qt_mes_08,0) + coalesce(qt_mes_09,0) +
		coalesce(qt_mes_10,0) + coalesce(qt_mes_11,0) + coalesce(qt_mes_12,0))
	into STRICT	qt_producao_w
	from	w_avaliacao_usuario
	where	nm_usuario 			= nm_usuario_p
	and	dt_referencia		= dt_referencia_p
	and	ie_referencia 		= 'C'
	and	nm_usuario_cor 		= 'TASY';
end if;
/* Obter nivel produção usuario */

select	coalesce(max(b.qt_media_nivel),0)
into STRICT	qt_media_nivel_w
from	nivel_grupo_des b,
	usuario_nivel_des a
where	a.nr_seq_nivel		= b.nr_sequencia
and		a.nm_usuario_des	= nm_usuario_p
and		a.dt_referencia		=
		(SELECT	max(x.dt_referencia)
		from	usuario_nivel_des x
		where	x.nm_usuario_des	= a.nm_usuario_des
		and		x.dt_referencia <= dt_mes_final_w);


/*Obter quantidade de horas trabalhada do usuario*/

select 	coalesce(sum(qt_minuto),0)
into STRICT	qt_min_trab_os_w
from  	man_ordem_serv_ativ
where 	nm_usuario_exec = nm_usuario_p
and 	trunc(dt_atividade,'month') = trunc(dt_referencia_p,'month');

/*Obter quantidade de horas trabalhada em os de projeto do usuario*/

select 	coalesce(sum(qt_minuto),0)
into STRICT	qt_min_trab_os_proj_w
from  	man_ordem_serv_ativ
where 	nm_usuario_exec = nm_usuario_p
and 	trunc(dt_atividade,'month') = trunc(dt_referencia_p,'month')
and	(nr_seq_proj_cron_etapa IS NOT NULL AND nr_seq_proj_cron_etapa::text <> '');

/*Obter quantidade de dias trabalhado para calcular tempo de café*/

select 	count(*)
into STRICT	qt_dias_mes_w
from	usuario_controle
where 	nm_usuario = nm_usuario_p
and 	trunc(dt_referencia,'month') = trunc(dt_referencia_p,'month');

/*Obter quantidade de horas em atividade extra*/

select	coalesce(sum(qt_min_atividade),0)
into STRICT	qt_min_ativ_extra_w
from	usuario_controle
where 	nm_usuario = nm_usuario_p
and 	trunc(dt_referencia,'month') = trunc(dt_referencia_p,'month');

dt_mes_final_2_w := clock_timestamp();

if (dt_mes_final_w < clock_timestamp()) then
	dt_mes_final_2_w := dt_mes_final_w;
end if;

if (qt_min_trab_os_proj_w > 0 ) then
	qt_media_nivel_prop_w	:= dividir((qt_media_nivel_w * (qt_min_trab_os_w-qt_min_trab_os_proj_w)),qt_min_trab_os_w);



	qt_media_nivel_prop_w  := dividir(OBTER_DIAS_UTEIS_PERIODO(dt_mes_inicial_w,dt_mes_final_2_w,1) * qt_media_nivel_prop_w,OBTER_DIAS_UTEIS_PERIODO(dt_mes_inicial_w,dt_mes_final_w,1));

	qt_perc_prod_w		:= dividir((qt_producao_w * 100), round(qt_media_nivel_prop_w));

	if (qt_producao_w >= qt_media_nivel_prop_w) then
		qt_pontos_prod_w		:= 0;
	elsif (qt_perc_prod_w >= 90) then
		qt_pontos_prod_w		:= 10;
	else
		qt_pontos_prod_w		:= 30;
	end if;

else

	qt_media_nivel_prop_w  := dividir(OBTER_DIAS_UTEIS_PERIODO(dt_mes_inicial_w,dt_mes_final_2_w,1) * qt_media_nivel_w,OBTER_DIAS_UTEIS_PERIODO(dt_mes_inicial_w,dt_mes_final_w,1));

	--qt_perc_prod_w		:= dividir((qt_producao_w * 100), qt_media_nivel_w);
	if (qt_producao_w >= qt_media_nivel_prop_w) then
		qt_pontos_prod_w		:= 0;
	elsif (qt_perc_prod_w >= 90) then
		qt_pontos_prod_w		:= 10;
	else
		qt_pontos_prod_w		:= 30;
	end if;

end if;

qt_total_horas_senior_w := obter_valor_dinamico_bv('select obter_qte_horas_trab(:nm_usuario,:dt_referencia) from dual', 'nm_usuario='||nm_usuario_p||ds_sep_bv_w||'dt_referencia='||dt_referencia_p, qt_total_horas_senior_w);

/* Reduz da quantiadade de horas na empresa os intervalos do café.*/

qt_total_horas_senior_w :=  qt_total_horas_senior_w  - ( qt_dias_mes_w * 0.5);

qt_pontos_p		:= qt_pontos_prod_w;

ds_historico_p	:= 	'Escore de produção ' || chr(13) || chr(10) ||
			'		Total horas registro ponto: ' || qt_total_horas_senior_w || chr(13) || chr(10) ||
			'		Total horas trabalhadas: ' || round(dividir(qt_min_trab_os_w+qt_min_ativ_extra_w,60)) || chr(13) || chr(10) ||
			'			Ativ. extra: ' || round(dividir(qt_min_ativ_extra_w,60)) || chr(13) || chr(10) ||
			'			Projetos: ' || round(dividir(qt_min_trab_os_proj_w,60)) || chr(13) || chr(10) ||
			'			OS : ' || round(dividir(qt_min_trab_os_w,60) - dividir(qt_min_trab_os_proj_w,60)) || chr(13) || chr(10) ||
			'		Ordens em cliente teste no mês: ' || coalesce(qt_producao_w,0) || chr(13) || chr(10) ||
			'		Esperado: ' || coalesce(qt_media_nivel_w,0) || chr(13) || chr(10) ||
			'		Esperado proporcional: ' || round(coalesce(qt_media_nivel_prop_w,0)) || chr(13) || chr(10) ||
			'		Perde: ' || qt_pontos_prod_w || ' pontos' || chr(13) || chr(13);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE des_calcular_escore_prod (dt_referencia_p timestamp, nm_usuario_p text, qt_pontos_p INOUT bigint, ds_historico_p INOUT text) FROM PUBLIC;

