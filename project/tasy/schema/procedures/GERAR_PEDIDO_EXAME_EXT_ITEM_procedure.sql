-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_pedido_exame_ext_item ( nr_seq_pedido_p bigint, nr_seq_exame_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_sequencia_w		bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;	
nr_seq_apresent_w	bigint;
qt_exame_w		integer;
ds_justificativa_w	varchar(4000);
nr_atendimento_w	bigint;
nr_seq_exame_w		bigint;
cd_convenio_w		bigint;
cd_categoria_w		varchar(10);
ie_tipo_atendimento_w	smallint;	
ds_erro_w		varchar(4000);	
cd_setor_atendimento_w	bigint;

cd_procedimento_ww	bigint;
ie_origem_proced_ww	bigint;
nr_seq_proc_interno_w	bigint;
nr_seq_proc_interno_aux_w	bigint;
ie_obter_guia_w		varchar(10);
cd_plano_convenio_w	varchar(10);
cd_material_exame_w	varchar(20);
nr_seq_exame_lab_w bigint;

 
 

BEGIN 
 
if (nr_seq_exame_p > 0) then 
 
	select	max(nr_atendimento) 
	into STRICT	nr_atendimento_w 
	from	pedido_exame_externo 
	where	nr_sequencia	= nr_seq_pedido_p;
 
 
	 
	select	nextval('pedido_exame_externo_item_seq') 
	into STRICT	nr_sequencia_w 
	;
	 
	select	c.cd_procedimento, 
		c.ie_origem_proced, 
		coalesce(d.nr_seq_apresent, 0), 
		coalesce(c.qt_exame,1), 
		ds_justificativa, 
		c.nr_seq_exame, 
		c.NR_PROC_INTERNO, 
		c.cd_material_exame, 
		c.nr_seq_exame 
	into STRICT	cd_procedimento_w, 
		ie_origem_proced_w, 
		nr_seq_apresent_w, 
		qt_exame_w, 
		ds_justificativa_w, 
		nr_seq_exame_w, 
		nr_seq_proc_interno_w, 
		cd_material_exame_w, 
		nr_seq_exame_lab_w 
	from  med_grupo_exame  d, 
		med_exame_padrao c 
	where	c.nr_seq_grupo = d.nr_sequencia 
	and	c.nr_sequencia = nr_seq_exame_p;
	 
	 
	if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then 
		SELECT * FROM Obter_Proc_Tab_Interno(nr_seq_proc_interno_w, null, nr_atendimento_w, null, cd_procedimento_ww, ie_origem_proced_ww, null, null) INTO STRICT cd_procedimento_ww, ie_origem_proced_ww;
 
		if (coalesce(cd_procedimento_ww,0)	<> 0) then 
			cd_procedimento_w	:= cd_procedimento_ww;
			ie_origem_proced_w	:= ie_origem_proced_ww;
		end if;	
	elsif (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then 
		 
		select	max(cd_convenio), 
			max(cd_categoria), 
			max(ie_tipo_Atendimento), 
			max(cd_plano_convenio) 
		into STRICT	cd_convenio_w, 
			cd_categoria_w, 
			ie_tipo_atendimento_w, 
			cd_plano_convenio_w 
		from	atendimento_paciente_v 
		where	nr_atendimento	= nr_atendimento_w;
		 
		SELECT * FROM Obter_Exame_Lab_Convenio(	nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, wheb_usuario_pck.get_cd_estabelecimento, null, null, null, cd_plano_convenio_w, cd_setor_atendimento_w, cd_procedimento_ww, ie_origem_proced_ww, ds_erro_w, nr_seq_proc_interno_aux_w) INTO STRICT cd_setor_atendimento_w, cd_procedimento_ww, ie_origem_proced_ww, ds_erro_w, nr_seq_proc_interno_aux_w;
						 
		if (nr_seq_proc_interno_aux_w > 0) then 
			nr_seq_proc_interno_w	:= nr_seq_proc_interno_aux_w;
		end if;
		if (coalesce(cd_procedimento_ww,0)	<> 0) then 
			cd_procedimento_w	:= cd_procedimento_ww;
			ie_origem_proced_w	:= ie_origem_proced_ww;
		end if;	
	end if;
 
 
	insert into pedido_exame_externo_item( 
		nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		nr_seq_pedido, 
		nr_seq_exame, 
		qt_exame, 
		nr_seq_apresent, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		ds_justificativa, 
		cd_procedimento, 
		ie_origem_proced, 
		nr_proc_interno, 
		cd_material_exame, 
		nr_seq_exame_lab) 
	values (	nr_sequencia_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_seq_pedido_p, 
		nr_seq_exame_p, 
		qt_exame_w, 
		nr_seq_apresent_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		ds_justificativa_w, 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		nr_seq_proc_interno_w, 
		cd_material_exame_w, 
		nr_seq_exame_lab_w);
 
	ie_obter_guia_w := obter_param_usuario(281, 1275, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_obter_guia_w);
 
	if (ie_obter_guia_w = 'S') then 
		CALL TISS_DEFINE_GUIA_EXAME_ITEM(nm_usuario_p,nr_seq_pedido_p,nr_sequencia_w);
	end if;
end if;
 
commit;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_pedido_exame_ext_item ( nr_seq_pedido_p bigint, nr_seq_exame_p bigint, nm_usuario_p text) FROM PUBLIC;

