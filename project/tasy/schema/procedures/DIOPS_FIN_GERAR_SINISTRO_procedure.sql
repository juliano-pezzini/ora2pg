-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE diops_fin_gerar_sinistro ( nr_seq_operadora_p bigint, nr_seq_transacao_p bigint, nr_seq_periodo_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar as informações de eventos e sinistros conforme o idade de saldo passivo
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
	Regra de sinistro se envia por 30 (mais de cem mil beneficiários) ou 60 dias
-------------------------------------------------------------------------------------------------------------------
Referências:
	PLS_GERAR_DIOPS_FINANCEIRO
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_conta_contabil_w		varchar(20);
ie_evento_30_60_w		varchar(3);
vl_evento_liquidar_w		double precision	:= 0;
vl_evento_ate_60_w		double precision	:= 0;
vl_evento_pos_60_w		double precision	:= 0;
vl_evento_ate_w			double precision	:= 0;
vl_evento_pos_w			double precision	:= 0;
vl_evento_total_w		double precision	:= 0;
ie_tipo_vencimento_w		bigint;
cd_estabelecimento_w		smallint;
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;

C01 CURSOR FOR
	SELECT	sum(a.vl_evento_liquidar),
		a.ie_tipo_vencimento
	from	diops_fin_idadesaldo_pas	a
	where	a.nr_seq_periodo 	= nr_seq_periodo_p
	and	a.nr_seq_operadora 	= nr_seq_operadora_p
	group by
		a.ie_tipo_vencimento;


BEGIN
begin /* Obter o período trimestral do DIOPS */
select	trunc(a.dt_periodo_inicial, 'dd')
into STRICT	dt_periodo_inicial_w
from	diops_periodo	a
where	a.nr_sequencia	= nr_seq_periodo_p;
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(183308, 'NR_SEQ_OPERADORA=' || nr_seq_operadora_p || ';NR_SEQ_PERIODO=' || nr_seq_periodo_p);
end;

/* Obter o estabelecimento da operadora */

begin
select	a.cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	pls_outorgante	a
where	a.nr_sequencia	= nr_seq_operadora_p;
exception
	when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(183309, 'NR_SEQ_OPERADORA=' || nr_seq_operadora_p);
end;

select	coalesce(max(a.ie_evento_30_60), '60')
into STRICT	ie_evento_30_60_w
from	diops_fin_regra_sinistro	a
where	dt_periodo_inicial_w between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia, dt_periodo_inicial_w);

open C01;
loop
fetch C01 into
	vl_evento_liquidar_w,
	ie_tipo_vencimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	if (ie_tipo_vencimento_w <= ie_evento_30_60_w) then
		vl_evento_ate_w		:= vl_evento_ate_w + vl_evento_liquidar_w;
		vl_evento_total_w	:= vl_evento_total_w + vl_evento_liquidar_w;
	else
		vl_evento_pos_w		:= vl_evento_pos_w + vl_evento_liquidar_w;
		vl_evento_total_w	:= vl_evento_total_w + vl_evento_liquidar_w;
	end if;
	end;
end loop;
close C01;

if (vl_evento_total_w > 0) then
	insert into diops_fin_sinistro(nr_sequencia,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		nm_usuario,
		dt_atualizacao,
		cd_estabelecimento,
		nr_seq_operadora,
		nr_seq_periodo,
		vl_evento_ate_60,
		vl_evento_pos_60,
		vl_evento_ate_30,
		vl_evento_pos_30)
	values (nextval('diops_fin_sinistro_seq'),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		cd_estabelecimento_w,
		nr_seq_operadora_p,
		nr_seq_periodo_p,
		CASE WHEN ie_evento_30_60_w='60' THEN  vl_evento_ate_w  ELSE null END ,
		CASE WHEN ie_evento_30_60_w='60' THEN  vl_evento_pos_w  ELSE null END ,
		CASE WHEN ie_evento_30_60_w='30' THEN  vl_evento_ate_w  ELSE null END ,
		CASE WHEN ie_evento_30_60_w='30' THEN  vl_evento_pos_w  ELSE null END );
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE diops_fin_gerar_sinistro ( nr_seq_operadora_p bigint, nr_seq_transacao_p bigint, nr_seq_periodo_p bigint, nm_usuario_p text) FROM PUBLIC;

