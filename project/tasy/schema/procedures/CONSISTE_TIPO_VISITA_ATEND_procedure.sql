-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_tipo_visita_atend (nr_atendimento_p atendimento_paciente.nr_atendimento%type, nr_seq_tipo_admissao_fat_p atendimento_paciente.nr_seq_tipo_admissao_fat%type default null, cd_pessoa_fisica_p atendimento_paciente.cd_pessoa_fisica%type default null, nr_seq_episodio_p atendimento_paciente.nr_seq_episodio%type default null, dt_entrada_p timestamp default null, dt_previsto_alta_p timestamp default null, dt_alta_p timestamp default null, ie_alteracao_p text default 'V', ie_alt_data_prev_p text default 'N', ie_alt_data_alta_p text default 'N') AS $body$
DECLARE


cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
dt_alta_w			timestamp;
dt_previsto_alta_w		timestamp;
dt_entrada_w			timestamp;
dt_estimada_w			timestamp;
nr_seq_tipo_admissao_fat_w	atendimento_paciente.nr_seq_tipo_admissao_fat%type;
ie_permite_pos_alta_w		subtipo_episodio.ie_permite_pos_alta%type;
nr_seq_episodio_w		atendimento_paciente.nr_seq_episodio%type;
nr_atendimento_w		atendimento_paciente.nr_atendimento%type;
nr_seq_tipo_episodio_w		episodio_paciente.nr_seq_tipo_episodio%type;

procedure show_message(cd_expressao_p bigint, nr_atendimento_p bigint) is
;
BEGIN
	CALL wheb_mensagem_pck.exibir_mensagem_abort(cd_expressao_p, 'NR_ATENDIMENTO=' || nr_atendimento_p);
end;
			
-- IE_ALTERACAO_P

-- V Tipo de visita

-- D Data de alta .
pragma autonomous_transaction;
			
begin

if (coalesce(obter_uso_case(wheb_usuario_pck.get_nm_usuario),'N') = 'S') then

	if (ie_alteracao_p = 'V') then
	
		select	max(ep.nr_seq_tipo_episodio)
		into STRICT	nr_seq_tipo_episodio_w
		from 	episodio_paciente ep		
		where 	ep.nr_sequencia = nr_seq_episodio_p;
		
		select 	coalesce(max(ie_permite_pos_alta),'N')
		into STRICT	ie_permite_pos_alta_w
		from	subtipo_episodio
		where 	nr_seq_tipo_admissao = nr_seq_tipo_admissao_fat_p
		and	nr_seq_tipo_episodio = nr_seq_tipo_episodio_w;	
			
		if (coalesce(ie_permite_pos_alta_w,'N') = 'S') then

			select	max(dt_alta),
				max(dt_previsto_alta),
				max(nr_atendimento)
			into STRICT	dt_alta_w,
				dt_previsto_alta_w,
				nr_atendimento_w
			from	atendimento_paciente a
			where	a.nr_atendimento   < nr_atendimento_p
			and	a.cd_pessoa_fisica = cd_pessoa_fisica_p
			and	a.nr_seq_episodio  = nr_seq_episodio_p
			and	a.ie_tipo_atendimento = 1
			and	a.nr_atendimento = (SELECT max(b.nr_atendimento)
						    from   atendimento_paciente b
						    where  b.nr_atendimento   < nr_atendimento_p
						    and	   b.cd_pessoa_fisica = cd_pessoa_fisica_p
						    and	   b.nr_seq_episodio  = nr_seq_episodio_p
						    and	   b.ie_tipo_atendimento = 1);

			select	max(dt_previsto_alta)
			into STRICT	dt_estimada_w
			from 	atend_previsao_alta
			where 	nr_atendimento = nr_atendimento_w
			and 	coalesce(ie_situacao,'A') = 'A'
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

			
			if (coalesce(dt_alta_w::text, '') = '') and (coalesce(dt_previsto_alta_w::text, '') = '') and (coalesce(dt_estimada_w::text, '') = '') then
				show_message(1089944, nr_atendimento_w);
			elsif (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') and (coalesce(pkg_date_utils.get_diffdate(dt_alta_w, dt_entrada_p,'DAY'), 0) < 1) then
				show_message(1089945, nr_atendimento_w);
			elsif (coalesce(dt_alta_w::text, '') = '') then
				if (dt_estimada_w IS NOT NULL AND dt_estimada_w::text <> '') and (coalesce(pkg_date_utils.get_diffdate(dt_estimada_w, dt_entrada_p,'DAY'), 0) < 1) then
					show_message(1089946, nr_atendimento_w);
				elsif (dt_previsto_alta_w IS NOT NULL AND dt_previsto_alta_w::text <> '') and (coalesce(pkg_date_utils.get_diffdate(dt_previsto_alta_w, dt_entrada_p,'DAY'), 0) < 1) then
					show_message(1089946, nr_atendimento_w);
				end if;
			end if;
		
		end if;
		
	elsif (ie_alteracao_p = 'D') then
			
		select	max(nr_seq_episodio),
			max(cd_pessoa_fisica)
		into STRICT	nr_seq_episodio_w,
			cd_pessoa_fisica_w
		from	atendimento_paciente
		where	nr_atendimento 	 = nr_atendimento_p;
		
		select	min(dt_entrada),
			min(nr_seq_tipo_admissao_fat),
			min(nr_atendimento)
		into STRICT	dt_entrada_w,
			nr_seq_tipo_admissao_fat_w,
			nr_atendimento_w
		from	atendimento_paciente
		where	nr_atendimento 	 > nr_atendimento_p
		and	cd_pessoa_fisica = cd_pessoa_fisica_w
		and	nr_seq_episodio  = nr_seq_episodio_w;
		
		select 	coalesce(max(ie_permite_pos_alta),'N')
		into STRICT	ie_permite_pos_alta_w
		from	subtipo_episodio
		where 	nr_seq_tipo_admissao = nr_seq_tipo_admissao_fat_w;
		
		select	max(dt_previsto_alta)
		into STRICT	dt_estimada_w
		from 	atend_previsao_alta
		where 	nr_atendimento = nr_atendimento_p
		and 	coalesce(ie_situacao,'A') = 'A'
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
		
		select	max(dt_previsto_alta)
		into STRICT	dt_previsto_alta_w
		from 	atendimento_paciente
		where 	nr_atendimento = nr_atendimento_p;		
		
		if (coalesce(ie_permite_pos_alta_w,'N') = 'S') then
		
			if (coalesce(ie_alt_data_prev_p,'N') = 'S') then
				if (dt_previsto_alta_p IS NOT NULL AND dt_previsto_alta_p::text <> '') then	
					if (coalesce(pkg_date_utils.get_diffdate(dt_previsto_alta_p, dt_entrada_w,'DAY'), 0) < 1) then
						show_message(1089948, nr_atendimento_w);
					end if;
				else
					show_message(1089948, nr_atendimento_w);
				end if;
			elsif (coalesce(ie_alt_data_alta_p,'N') = 'S') then

				if (dt_alta_p IS NOT NULL AND dt_alta_p::text <> '') then	
					if (coalesce(pkg_date_utils.get_diffdate(dt_alta_p, dt_entrada_w,'DAY'), 0) < 1) then
						show_message(1089947, nr_atendimento_w);
					end if;
				else
					if (coalesce(pkg_date_utils.get_diffdate(dt_estimada_w, dt_entrada_w,'DAY'), 0) < 1)  and (coalesce(pkg_date_utils.get_diffdate(dt_previsto_alta_w, dt_entrada_w,'DAY'), 0) < 1)  then
						show_message(1089947, nr_atendimento_w);
					end if;
				end if;
			end if;
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_tipo_visita_atend (nr_atendimento_p atendimento_paciente.nr_atendimento%type, nr_seq_tipo_admissao_fat_p atendimento_paciente.nr_seq_tipo_admissao_fat%type default null, cd_pessoa_fisica_p atendimento_paciente.cd_pessoa_fisica%type default null, nr_seq_episodio_p atendimento_paciente.nr_seq_episodio%type default null, dt_entrada_p timestamp default null, dt_previsto_alta_p timestamp default null, dt_alta_p timestamp default null, ie_alteracao_p text default 'V', ie_alt_data_prev_p text default 'N', ie_alt_data_alta_p text default 'N') FROM PUBLIC;

