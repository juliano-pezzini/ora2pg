-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_calcula_horarios_etapas (( nm_usuario_p text, dt_inicio_p timestamp, ie_continuo_p text, nr_etapas_p INOUT bigint, cd_intervalo_p text, qt_tempo_aplicacao_p bigint, qt_tempo_etapa_p bigint, qt_tempo_pausa_p bigint, ds_horarios_p out text, ie_etapa_especial_p text, ie_duracao_p text default null, dt_fim_p timestamp default null, ie_present_desc_stage_p text default 'S') is i bigint) AS $body$
BEGIN
		if (qt_tempo_etapa_w <= 0) then
			nr_etapas_p		:= 0;
			ds_horarios_p	:= null;
			return;
		end if;
		
		return;
	end;

begin

if (dt_inicio_p IS NOT NULL AND dt_inicio_p::text <> '') then

	-- Caso não possua NR_ETAPA, irá verificado o número de etapas do intervalo (Gasoterapia)
	if (coalesce(cd_intervalo_p,'null') <> 'null') then
		if (Obter_ocorrencia_intervalo(cd_intervalo_p, 24, 'H') > 24) then
			nr_etapas_p	:= 1;
		else
			nr_etapas_p	:= coalesce(Obter_ocorrencia_intervalo(cd_intervalo_p, 24, 'O'),1);
		end if;
	end if;

	-- Se item contínuo, tempo da etapa deverá ser calculado
	if (ie_continuo_p = 'S') then
		qt_tempo_etapa_w	:= 0;
	end if;
	
	-- Se tempo de etapa igual a zero, a informação deve ser recalculada
	if (qt_tempo_etapa_w = 0) then
		if (ie_continuo_p = 'S') then
			qt_tempo_etapa_w := dividir_sem_round(qt_tempo_aplicacao_w,nr_etapas_p);
		else
			qt_tempo_etapa_w := dividir_sem_round(24,nr_etapas_p);
		end if;
	end if;
	
	-- Calcular pausa que será adicionada para reinício da próxima etapa
	if (ie_continuo_p = 'N') then
		--qt_tempo_aplicacao_w	:= 24;
		qt_tempo_pausa_w		:= dividir_sem_round(abs(qt_tempo_aplicacao_w - (qt_tempo_etapa_w*nr_etapas_p)), nr_etapas_p);
	else	
		qt_tempo_pausa_w		:= 0;
	end if;

	-- Verificar se os horários podem ser calculados
	if (not Possivel_calcular) then
		return;
	end if;
	
	-- Se não possuir data de fim, assumir início do item mais o tempo total de infusão
	if (coalesce(dt_fim_w::text, '') = '') then
		dt_fim_w	:= dt_inicio_p + abs(dividir_sem_round((qt_tempo_aplicacao_w)::numeric,24));
	end if;
	
	-- Se data de fim do item maior que um dia, redefinir fim como início mais 24 horas
	if	((dt_fim_w - dt_inicio_p) > 1) then
		dt_fim_w	:= dt_inicio_p + 1;
	end if;
	
	-- Caso a data de fim do item possuir o último segundo, assumir para a próxima data
	if (to_char(dt_fim_w+1/24/60,'hh24:mi') = to_char(dt_inicio_p,'hh24:mi')) then
		dt_fim_w	:= dt_fim_w+1/24/60;
	end if;
	
	-- Se houverem horários quebrados (com minutos), ajustar máscara das etapas
	if (qt_tempo_etapa_w <> trunc(qt_tempo_etapa_w)) or (to_char(dt_inicio_p,'mi') <> '00') or (to_char(dt_fim_w,'mi') <> '00') then
		ds_mascara_hora_w	:= 'hh24:mi';
	end if;
	
	nr_etapas_p	:= 0;
	
	dt_horario_w	:= dt_inicio_p;
	
	-- Enquanto o próximo início do item menor que fim, continuar gerando as etapas
	while(dt_horario_w < dt_fim_w) loop
		-- Calcular tempo final da etapa, de acordo com duração da etapa
		dt_horario_fim_w	:= dt_horario_w + dividir_sem_round((qt_tempo_etapa_w)::numeric,24);
		nr_etapas_p			:= nr_etapas_p + 1;

		-- Se a data de fim da etapa maior que programação do item, assumir a data final do mesmo
		if (dt_horario_fim_w > dt_fim_w) then
			dt_horario_fim_w	:= trunc(dt_fim_w,'mi');
			dt_fim_w			:= dt_horario_fim_w;
		end if;
		
		if (ie_present_desc_stage_p = 'N') then
			ds_horarios_p	:= substr(	ds_horarios_p ||
										to_char(dt_horario_w,ds_mascara_hora_w) || ' ',1,4000);
		else
			-- Adicionar descrição das etapa
			ds_horarios_p 	:= substr(	ds_horarios_p ||
										replace(ds_etapa_w,'#@NR_PRIM_HOR#@', to_char(dt_horario_w,ds_mascara_hora_w)) || ' ' ||
										to_char(dt_horario_fim_w, ds_mascara_hora_w) || '; ',1,4000);
		end if;
		
		-- Calcular próximo início da etapa, adicionando o tempo de pausa entre as etapas
		dt_horario_w	:= dt_horario_fim_w + dividir_sem_round((qt_tempo_pausa_w)::numeric,24);
		
		-- Evita loops
		if (nr_etapas_p > 48) then
			return;
		end if;
	end loop;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_calcula_horarios_etapas (( nm_usuario_p text, dt_inicio_p timestamp, ie_continuo_p text, nr_etapas_p INOUT bigint, cd_intervalo_p text, qt_tempo_aplicacao_p bigint, qt_tempo_etapa_p bigint, qt_tempo_pausa_p bigint, ds_horarios_p out text, ie_etapa_especial_p text, ie_duracao_p text default null, dt_fim_p timestamp default null, ie_present_desc_stage_p text default 'S') is i bigint) FROM PUBLIC;

