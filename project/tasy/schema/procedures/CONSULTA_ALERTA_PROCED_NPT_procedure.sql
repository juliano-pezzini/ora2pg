-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consulta_alerta_proced_npt (nr_atendimento_p bigint, cd_paciente_p text, ie_origem_proced_p text, ie_retorno_p text, ds_retorno1_p INOUT text, ds_retorno2_p INOUT text) AS $body$
DECLARE

 
/* 
Parâmetros: 
	ie_retorno_p -> 	(E) Existência de regras 
				(A) Alertas contatenados de regras 
*/
 
 
ie_regra_w				varchar(1);
nr_seq_proc_interno_w	bigint;
nr_seq_exame_w			bigint;
cd_procedimento_w		bigint;
qt_horas_consulta_w		smallint;
qt_procedimento_w		smallint;
cd_paciente_w			varchar(10);
dt_referencia_w			timestamp;
qt_proced_atual_w		smallint;
ds_proced_exame_w		varchar(500);
ds_separador_w			varchar(10);
ds_complemento_w		varchar(255);
ds_mensagem_w			varchar(255);
ds_retorno_w			varchar(4000);
cd_recomendacao_w		bigint;
qt_recomendacao_w		bigint;
ds_recomendacao_w		varchar(255);

C01 CURSOR FOR 
	SELECT	coalesce(nr_seq_proc_interno,0), 
		coalesce(nr_seq_exame,0), 
		coalesce(cd_procedimento,0), 
		qt_horas_consulta, 
		qt_procedimento, 
		ds_mensagem, 
		coalesce(cd_recomendacao,0) 
	from	REP_alerta_proced_npt 
	where	((coalesce(nr_seq_proc_interno,coalesce(nr_seq_exame,coalesce(cd_procedimento,0))) > 0) or (coalesce(cd_recomendacao,0) > 0)) 
	and	qt_horas_consulta > 0 
	and	qt_procedimento > 0;


BEGIN 
 
select	coalesce(max('S'),'N') 
into STRICT	ie_regra_w 
from	REP_alerta_proced_npt 
where	((coalesce(nr_seq_proc_interno,coalesce(nr_seq_exame,coalesce(cd_procedimento,0))) > 0) or (coalesce(cd_recomendacao,0) > 0)) 
and	qt_horas_consulta > 0 
and	qt_procedimento > 0;
 
 
if (ie_retorno_p = 'E') then 
	ds_retorno_w	:= ie_regra_w;
elsif (ie_regra_w = 'S') then 
 
	if (coalesce(nr_atendimento_p,0) > 0) then 
		select	coalesce(max(cd_pessoa_fisica),'0') 
		into STRICT	cd_paciente_w 
		from	atendimento_paciente 
		where	nr_atendimento = nr_atendimento_p;
	else 
		cd_paciente_w	:= coalesce(cd_paciente_p,'0');
	end if;
 
	if (cd_paciente_w <> '0') then 
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_proc_interno_w, 
			nr_seq_exame_w, 
			cd_procedimento_w, 
			qt_horas_consulta_w, 
			qt_procedimento_w, 
			ds_mensagem_w, 
			cd_recomendacao_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
 
			dt_referencia_w		:= (trunc(clock_timestamp(),'hh24') - qt_horas_consulta_w/24);
 
			commit;
			select	count(*) 
			into STRICT	qt_proced_atual_w 
			from	prescr_procedimento b, 
				prescr_medica a 
			where	a.nr_prescricao = b.nr_prescricao 
			and	((nr_seq_proc_interno_w = 0) or (nr_seq_proc_interno_w = nr_seq_proc_interno)) 
			and	((nr_seq_exame_w = 0)		or (nr_seq_exame_w = nr_seq_exame)) 
			and	((cd_procedimento_w = 0)	or (cd_procedimento_w = cd_procedimento)) 
			and	coalesce(b.dt_prev_execucao,a.dt_inicio_prescr) > dt_referencia_w 
			and	a.dt_prescricao	> dt_referencia_w 
			and	coalesce(b.dt_suspensao::text, '') = '' 
			and	(coalesce(a.dt_liberacao, a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao, a.dt_liberacao_medico))::text <> '') 
			and	a.cd_pessoa_fisica = cd_paciente_w;
 
			if (qt_procedimento_w > qt_proced_atual_w) and (cd_recomendacao_w = 0) then 
 
				ds_proced_exame_w	:= '';
				ds_separador_w		:= '';
				ds_complemento_w	:= obter_desc_expressao(781799, 'QT_PROCEDIMENTO_W='|| qt_procedimento_w ||';QT_HORAS_CONSULTA_W=' || qt_horas_consulta_w ); /*|| qt_procedimento_w || ' a cada ' || qt_horas_consulta_w || obter_desc_expressao(487631)' hora(s)*/
				if (cd_procedimento_w > 0) or (nr_seq_proc_interno_w > 0) then 
					select	CASE WHEN cd_procedimento_w=0 THEN obter_desc_expressao(305817)/*' Proc. Int.: '*/
  ELSE obter_desc_expressao(348595)/*' Proc.: '*/ END  
							|| substr(Obter_Desc_Prescr_Proc(cd_procedimento_w, ie_origem_proced_p, nr_seq_proc_interno_w),1,150) 
					into STRICT	ds_proced_exame_w 
					;
					ds_separador_w	:= '||  ';
				end if;
				if (nr_seq_exame_w > 0) then 
					select	substr(ds_proced_exame_w || ds_separador_w 
							|| obter_desc_expressao(621805)/*' Exame: '*/
 || substr(Obter_desc_exame(nr_seq_exame_w),1,150),1,300) 
					into STRICT	ds_proced_exame_w 
					;
				end if;
 
				if (coalesce(ds_proced_exame_w,'XPTO') <> 'XPTO') then 
					ds_retorno_w	:= substr(ds_retorno_w || chr(10) || ' *' || ds_proced_exame_w || ds_complemento_w,1,4000);
				end if;
 
				if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then 
					ds_retorno_w	:= substr(ds_retorno_w || ds_mensagem_w,1,4000);
				end if;
 
			elsif (cd_procedimento_w = 0) and (cd_recomendacao_w > 0) then 
 
				select	count(*) 
				into STRICT	qt_recomendacao_w 
				from	prescr_recomendacao b, 
					prescr_medica a 
				where	a.nr_prescricao 	= b.nr_prescricao 
				and	a.dt_prescricao		> dt_referencia_w 
				and	coalesce(b.dt_suspensao::text, '') = '' 
				and	(coalesce(a.dt_liberacao, a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao, a.dt_liberacao_medico))::text <> '') 
				and	a.cd_pessoa_fisica 	= cd_paciente_w 
				and	cd_recomendacao		= cd_recomendacao_w;
 
				if (qt_recomendacao_w = 0) then 
 
					select	max(ds_tipo_recomendacao) 
					into STRICT	ds_recomendacao_w 
					from	tipo_recomendacao 
					where	cd_tipo_recomendacao = cd_recomendacao_w;
 
					ds_retorno_w := substr(ds_retorno_w || chr(10) || ' * Rec.: ' || ds_recomendacao_w,1,4000);
 
					if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then 
						ds_retorno_w := substr(ds_retorno_w || ' - ' || ds_mensagem_w,1,4000);
					end if;
 
				end if;
 
			end if;
 
			end;
		end loop;
		close C01;
	end if;
end if;
 
ds_retorno1_p	:= substr(ds_retorno_w,1,254);
ds_retorno2_p	:= substr(ds_retorno_w,255,254);
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consulta_alerta_proced_npt (nr_atendimento_p bigint, cd_paciente_p text, ie_origem_proced_p text, ie_retorno_p text, ds_retorno1_p INOUT text, ds_retorno2_p INOUT text) FROM PUBLIC;

