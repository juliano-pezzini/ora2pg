-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gqa_instalar_dispositivo_pac (nr_sequencia_p bigint, nm_usuario_p text, nr_regras_atendidas_p INOUT text, nr_atendimento_p bigint default null, nr_restrigir_regras_p text default null, qt_horas_retroativa_p bigint default 0, ie_acao_p text DEFAULT NULL) AS $body$
DECLARE

										
nr_seq_pend_regra_w	        bigint;
vl_minimo_w                 	double precision;
vl_maximo_w                 	double precision;
nr_seq_disp_w        			bigint;
nr_seq_dispositivo_w			bigint;	
nr_atendimento_w            	bigint;
nm_atributo_w               	varchar(50);
nr_sequencia_w              	bigint;
vl_atributo_w               	double precision;
cd_pessoa_fisica_w          	varchar(10);
qt_idade_w                  	bigint;
cd_setor_atendimento_w      	bigint := null;
cd_escala_dor_w             	varchar(10);
nr_seq_result_dor_w         	bigint;
qt_idade_dias_w             	integer;
qt_peso_gramas_w            	double precision;
ie_restricao_complementar_w 	varchar(80);
ie_protocolo_assistencial_w 	boolean;
ie_informacao_w			gqa_pendencia_regra.ie_informacao%type;
ie_opcao_informacao_w		gqa_pendencia_regra.ie_opcao_informacao%type;
ds_sql_w			gqa_pendencia_regra.ds_sql%type;
ie_atende_regra_w		boolean;
ds_retorno_sql_w		varchar(4000);			
nr_seq_pend_pac_w		bigint;	

C01 CURSOR FOR
		SELECT	a.nr_sequencia,
		coalesce(a.vl_minimo,0),
		coalesce(a.vl_maximo,999),
		a.nr_seq_sinal_vital,
		c.nr_seq_dispositivo,
		null ie_informacao,
		null ds_sql
	from    gqa_pendencia_regra a,
		gqa_pendencia b,
		atend_pac_dispositivo c
	where   b.nr_sequencia	= a.nr_seq_pendencia
	and	a.nr_seq_dispositivo = c.nr_seq_dispositivo
	and	b.ie_tipo_pendencia	= 10
	and	b.ie_situacao 		= 'A'
	and	a.ie_situacao		= 'A'
	and a.ie_acao = ie_acao_p
	and	c.nr_sequencia = nr_sequencia_p
	and	obter_se_gqa_regra_liberada(a.nr_sequencia) = 'S'
	and	qt_idade_w       between coalesce(a.qt_idade_min,0) and coalesce(a.qt_idade_max,999)
	and	qt_idade_dias_w  between coalesce(a.qt_dias_min ,0) and coalesce(a.qt_dias_max ,99999)
	and	qt_peso_gramas_w between coalesce(a.qt_peso_gramas_min,0) and coalesce(a.qt_peso_gramas_max,999999999)
	and	coalesce(a.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0)
	and (coalesce(nr_restrigir_regras_p::text, '') = '' or position(a.nr_sequencia in nr_restrigir_regras_p) > 0)
	
union

	SELECT	a.nr_sequencia,
		coalesce(a.vl_minimo,0),
		coalesce(a.vl_maximo,999),
		null,
		null,
		a.ie_informacao,
		a.ds_sql
	from    gqa_pendencia_regra a,
		gqa_pendencia b
	where   b.nr_sequencia	= a.nr_seq_pendencia
	and	b.ie_tipo_pendencia	= 10
	and	b.ie_situacao 		= 'A'
	and	a.ie_situacao		= 'A'
	and a.ie_acao = ie_acao_p
	and	coalesce(a.ie_opcao_informacao,'SV') = 'SQL'
	and	(a.ds_sql IS NOT NULL AND a.ds_sql::text <> '')
	and	(a.ie_informacao IS NOT NULL AND a.ie_informacao::text <> '')
	and	obter_se_gqa_regra_liberada(a.nr_sequencia) = 'S'
	and	qt_idade_w       between coalesce(a.qt_idade_min,0) and coalesce(a.qt_idade_max,999)
	and	qt_idade_dias_w  between coalesce(a.qt_dias_min ,0) and coalesce(a.qt_dias_max ,99999)
	and	qt_peso_gramas_w between coalesce(a.qt_peso_gramas_min,0) and coalesce(a.qt_peso_gramas_max,999999999)
	and	coalesce(a.cd_setor_atendimento,coalesce(cd_setor_atendimento_w,0))	= coalesce(cd_setor_atendimento_w,0)
	and (coalesce(nr_restrigir_regras_p::text, '') = '' or position(a.nr_sequencia in nr_restrigir_regras_p) > 0);

	
	CursorDispositivo				REFCURSOR;


BEGIN
	ie_protocolo_assistencial_w := (nr_restrigir_regras_p IS NOT NULL AND nr_restrigir_regras_p::text <> '');
	if ie_protocolo_assistencial_w then
		open CursorDispositivo for SELECT max(nr_atendimento), max(cd_profissional), nr_seq_dispositivo
								   from   atend_pac_dispositivo
								   where  nr_atendimento = nr_atendimento_p
								   group by nr_seq_dispositivo;
	else
		open CursorDispositivo for SELECT max(nr_atendimento), max(cd_profissional), nr_seq_dispositivo
								   from   atend_pac_dispositivo
								   where  nr_sequencia = nr_sequencia_p
								   group by nr_seq_dispositivo;
	end if;
	
	loop
	fetch CursorDispositivo into
			nr_atendimento_w,
			cd_pessoa_fisica_w,
			nr_seq_disp_w;
	EXIT WHEN NOT FOUND; /* apply on CursorDispositivo */
	begin	
		if (coalesce(cd_setor_atendimento_w::text, '') = '') then
			cd_setor_atendimento_w		:= obter_setor_atendimento(nr_atendimento_w);
			qt_idade_w		        := obter_idade_pf(cd_pessoa_fisica_w,clock_timestamp(),'A');
			qt_idade_dias_w		    	:= obter_idade_pf(cd_pessoa_fisica_w, clock_timestamp(), 'DIA');
			qt_peso_gramas_w		:= (coalesce(obter_peso_pf(cd_pessoa_fisica_w),0) * 1000);
		end if;
		open C01;
		loop
		fetch C01 into	
			nr_seq_pend_regra_w,
			vl_minimo_w,
			vl_maximo_w,
			nm_atributo_w,
			nr_seq_dispositivo_w,
			ie_informacao_w,
			ds_sql_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin		
					
			    select GQA_regra_complementar(nm_usuario_p, nr_atendimento_w, nr_seq_pend_regra_w)
				into STRICT ie_restricao_complementar_w
				;
			
							
				if (ie_restricao_complementar_w = 'X') then

					if (ie_protocolo_assistencial_w) then
						if (nr_regras_atendidas_p IS NOT NULL AND nr_regras_atendidas_p::text <> '') then
							nr_regras_atendidas_p := nr_regras_atendidas_p || ',';
						end if;
						
						nr_regras_atendidas_p := nr_regras_atendidas_p || nr_seq_pend_regra_w;
						
					else
						select	nextval('gqa_pendencia_pac_seq')
						into STRICT	nr_sequencia_w
						;
								
						insert into gqa_pendencia_pac(	nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								cd_pessoa_fisica,
								nr_atendimento,
								nr_seq_pend_regra,
								nr_seq_dispositivo)
						values (    nr_sequencia_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								cd_pessoa_fisica_w,
								nr_atendimento_w,
								nr_seq_pend_regra_w,
								nr_sequencia_p);
						commit;
											
						CALL gerar_consulta_reg_mentor(nm_usuario_p, 'ATEND_PAC_DISPOSITIVO', nr_seq_pend_regra_w, nr_sequencia_p, nr_sequencia_w, nr_seq_dispositivo_w, nm_atributo_w);
						CALL gqa_gerar_acao_regra(nr_seq_pend_regra_w,nr_sequencia_w,nr_atendimento_w,cd_pessoa_fisica_w,nm_usuario_p);
						
					end if;
				end if;
			end;
		end loop;
		close C01;
	end;
	end loop;
	close CursorDispositivo;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gqa_instalar_dispositivo_pac (nr_sequencia_p bigint, nm_usuario_p text, nr_regras_atendidas_p INOUT text, nr_atendimento_p bigint default null, nr_restrigir_regras_p text default null, qt_horas_retroativa_p bigint default 0, ie_acao_p text DEFAULT NULL) FROM PUBLIC;

