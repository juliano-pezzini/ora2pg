-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gravar_deferimento_defesa ( nr_seq_defesa_p pls_impugnacao_defesa.nr_sequencia%type, ie_deferimento_p bigint, nr_seq_oficio_p pls_decisao_processual.nr_sequencia%type, ds_motivo_deferimento_p text, ie_tipo_pedido_defer_p bigint, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, vl_ressarcir_p bigint, vl_deferido_p bigint) AS $body$
DECLARE

/*
ie_tipo_defesa_defer_p: 
 0 - Anulação
 1 - Retificação
*/
nr_seq_impugnacao_w		pls_impugnacao.nr_sequencia%type;
ie_tipo_defesa_w			pls_impugnacao_defesa.ie_tipo_defesa%type;
ie_status_impugnacao_w		varchar(3);
ie_status_w			varchar(1);
nr_seq_conta_w			pls_impugnacao.nr_seq_conta%type;
ie_status_conta_w			varchar(3);
ie_status_pagamento_w		varchar(3);
vl_conta_w			double precision	:= 0;
ds_oficio_w			varchar(255);
ie_instancia_conta_w		varchar(3);
dt_recebimento_w			timestamp;
qt_dias_impugnacao_w		bigint;
vl_deferido_w			double precision;
vl_pendente_w			double precision;
vl_ressarcir_w			double precision;
cont_w				integer;
ie_tipo_impugnacao_w		pls_processo_conta.ie_tipo_impugnacao%type;
vl_liberado_w			pls_impugnacao_proc.vl_liberado%type;
vl_procedimento_w			pls_processo_procedimento.vl_procedimento%type;
ie_tipo_pedido_defer_w		varchar(1);


BEGIN

select	obter_valor_param_usuario(1238,3,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p)
into STRICT	qt_dias_impugnacao_w
;

/* Obter dados da conta, impugnação e defesa */

select	a.nr_seq_impugnacao,
	a.ie_tipo_defesa,
	b.nr_seq_conta,
	pls_conta_processo_obter_valor(c.nr_sequencia),
	c.ie_instancia_conta,
	c.ie_status_conta,
	coalesce(c.ie_status_pagamento,'S'),
	coalesce(c.ie_tipo_impugnacao, 'C')
into STRICT	nr_seq_impugnacao_w,
	ie_tipo_defesa_w,
	nr_seq_conta_w,
	vl_conta_w,
	ie_instancia_conta_w,
	ie_status_conta_w,
	ie_status_pagamento_w,
	ie_tipo_impugnacao_w
from	pls_processo_conta	c,
	pls_impugnacao		b,
	pls_impugnacao_defesa	a
where	a.nr_sequencia		= nr_seq_defesa_p
and	a.nr_seq_impugnacao	= b.nr_sequencia
and	b.nr_seq_conta		= c.nr_sequencia;

select	ds_oficio,
	dt_recebimento
into STRICT	ds_oficio_w,
	dt_recebimento_w
from	pls_decisao_processual
where	nr_sequencia	= nr_seq_oficio_p;

if (ie_deferimento_p	= 0) then

	ie_status_w		:= 'D';
	ie_status_impugnacao_w	:= 'S';
	ie_status_conta_w	:= 'D';
	ie_status_pagamento_w	:= 'N';
elsif (ie_deferimento_p	= 1) then

	ie_status_w	:= 'I';
	if (ie_tipo_defesa_w	= 'J') then
		ie_status_impugnacao_w	:= 'J';
	else
		ie_status_impugnacao_w	:= 'R';
	end if;
end if;

select	count(*)
into STRICT	cont_w
from	pls_impugnacao_proc
where	nr_seq_impugnacao	= nr_seq_impugnacao_w
and	coalesce(vl_liberado,0)	> 0;

if (cont_w > 0) then
	ie_status_impugnacao_w	:= 'F';
end if;

update	pls_impugnacao_defesa
set	ie_status		= ie_status_w,
	ds_oficio		= ds_oficio_w,
	ds_motivo_deferimento	= ds_motivo_deferimento_p,
	nm_usuario		= nm_usuario_p,
	dt_atualizacao		= clock_timestamp()
where	nr_sequencia		= nr_seq_defesa_p;

if (ie_deferimento_p	= 0) then -- Deferido
	if (ie_tipo_impugnacao_w = 'P') then
		select	coalesce(sum(b.vl_liberado),0)		-- Obter o valor dos procedimentos impugnados que iremos pagar
		into STRICT	vl_liberado_w
		from	pls_impugnacao_proc b,
			pls_processo_procedimento a
		where	a.nr_sequencia	= b.nr_seq_processo_proc
		and	a.nr_seq_conta	= nr_seq_conta_w;
		
		select	coalesce(sum(a.vl_procedimento),0)		-- Obter o valor total dos procedimentos impugnados
		into STRICT	vl_procedimento_w
		from	pls_processo_procedimento a
		where	a.nr_seq_conta	= nr_seq_conta_w
		and	exists (SELECT	1
				from	pls_impugnacao_proc x
				where	x.nr_seq_processo_proc	= a.nr_sequencia);
					
		vl_deferido_w	:= vl_procedimento_w - vl_liberado_w;
	else
		vl_deferido_w	:= vl_conta_w;
	end if;
end if;

if (ie_tipo_pedido_defer_p = 0) then

	ie_tipo_pedido_defer_w := 'A';
else
	ie_tipo_pedido_defer_w := 'R';
end if;

update	pls_impugnacao
set	vl_ressarcir		= vl_ressarcir_p,
	vl_deferido		= vl_deferido_p
where	nr_sequencia		= nr_seq_impugnacao_w;

select	coalesce(vl_deferido,0),
	coalesce(vl_pendente,0),
	coalesce(vl_ressarcir,0)
into STRICT	vl_deferido_w,
	vl_pendente_w,
	vl_ressarcir_w
from	pls_processo_conta
where	nr_sequencia	= nr_seq_conta_w;

if (vl_ressarcir_w > 0 AND vl_deferido_w > 0) then
	ie_status_impugnacao_w := 'P';
end if;

update	pls_impugnacao
set	ie_status_impugnacao	= ie_status_impugnacao_w
where	nr_sequencia		= nr_seq_impugnacao_w;

insert into pls_processo_alteracao(	nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_conta,
					ie_status_impugnacao,
					ie_status_conta,
					ie_instancia_conta,
					ie_status_pagamento,
					vl_deferido,
					vl_pendente,
					vl_ressarcir,
					ds_acao)
				values (	nextval('pls_processo_alteracao_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_conta_w,
					ie_status_impugnacao_w,
					ie_status_conta_w,
					ie_instancia_conta_w,
					ie_status_pagamento_w,
					vl_deferido_w,
					vl_pendente_w,
					0,
					'Deferimento da defesa - ' || CASE WHEN ie_deferimento_p=0 THEN 'Deferimento'  ELSE 'Indeferimento' END );

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gravar_deferimento_defesa ( nr_seq_defesa_p pls_impugnacao_defesa.nr_sequencia%type, ie_deferimento_p bigint, nr_seq_oficio_p pls_decisao_processual.nr_sequencia%type, ds_motivo_deferimento_p text, ie_tipo_pedido_defer_p bigint, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, vl_ressarcir_p bigint, vl_deferido_p bigint) FROM PUBLIC;

