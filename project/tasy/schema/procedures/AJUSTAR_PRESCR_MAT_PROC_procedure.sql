-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ajustar_prescr_mat_proc ( nr_prescricao_p bigint, nr_sequencia_p bigint, cd_perfil_p bigint, nr_seq_material_p bigint) AS $body$
DECLARE


nr_ocorrencia_w			bigint;
nr_sequencia_w			integer;
cd_material_w			integer;
qt_unitaria_w			double precision;
qt_material_w			double precision;
qt_dose_especial_w		double precision;
ds_dose_diferenciada_w		varchar(50);
ie_origem_inf_w			varchar(1);
qt_dispensar_w			double precision;
qt_dose_w			double precision;
ds_erro_w			varchar(255);
cd_intervalo_w			varchar(7);
ie_acm_w			varchar(1);
ie_se_necessario_w		varchar(1);
ie_urgencia_w			varchar(1);
ie_suspenso_w			varchar(1);
ie_multiplica_at_w			varchar(1);
ie_via_aplicacao_w			varchar(5);
cd_unidade_medida_dose_w	varchar(30);
dt_primeiro_horario_w		timestamp;
nr_horas_validade_w			integer;
ds_horarios_w				prescr_material.ds_horarios%type;
ds_horarios2_w				prescr_material.ds_horarios%type;
ds_horarios3_w				prescr_material.ds_horarios%type;
dt_prev_execucao_w			timestamp;
ie_regra_disp_w				varchar(1);
qt_hora_intervalo_w			smallint;
qt_min_intervalo_w			integer;
ie_prescr_mat_sem_lib_w		varchar(30);
cd_estabelecimento_w		smallint;
nm_usuario_original_w		varchar(15);
cd_procedimento_w			bigint;
nr_seq_interno_proc_w		bigint;
cd_intervalo_proc_w			varchar(7);
dt_prev_execucao_proc_w		timestamp;
ds_horarios_proc_w			varchar(2000);
ie_se_necessario_proc_w		varchar(1);
ie_acm_proc_w				varchar(1);
ie_urgencia_proc_w			varchar(1);
qt_procedimento_w			double precision;
nr_seq_proc_interno_w		bigint;
ie_atualiza_proc_assoc_w	varchar(1);
ie_se_necessario_mat_w		varchar(1);
dt_liberacao_w				timestamp;
dt_liberacao_enf_w			timestamp;
qt_unitaria_ww				prescr_material.qt_unitaria%type;
qt_conversao_dose_w			prescr_material.qt_conversao_dose%type;
ie_checar_adep_w			varchar(1);
ie_atualiza_dados_w			varchar(1);
ie_agora_w					varchar(1);
cd_funcao_ativa_w			prescr_medica.cd_funcao_origem%type;
ie_alterou_dose_dil_w		varchar(1);
qt_dose_item_prescr_w		w_item_prescr.qt_dose%type;
dt_liberacao_medico_w   	prescr_medica.dt_liberacao_medico%type;

C01 CURSOR FOR
SELECT	CASE WHEN  /* este decode não será implementado no union abaixo pq naquele trata o nr_seq_kit. situação do cliente é apenas com o cd_kit_material*/
		coalesce(a.nr_seq_prot_glic::text, '') = '' THEN 		a.cd_intervalo  ELSE CASE WHEN 			coalesce(b.cd_kit_material::text, '') = '' THEN 			coalesce(b.cd_intervalo, a.cd_intervalo)  ELSE CASE WHEN 				obter_se_interv_kit(b.cd_kit_material, b.cd_material)='S' THEN 				coalesce(b.cd_intervalo, a.cd_intervalo)  ELSE a.cd_intervalo END  END  END ,
		coalesce(b.nr_sequencia,0),
		coalesce(a.ie_acm,'N'),
		coalesce(a.ie_se_necessario,'N'),
		coalesce(b.ie_se_necessario,'N'),
		a.dt_prev_execucao,
		a.qt_hora_intervalo,
		a.qt_min_intervalo,
		c.dt_primeiro_horario,
		c.nr_horas_validade,
		coalesce(b.cd_material,0),
		coalesce(b.qt_unitaria,0),
		coalesce(b.qt_material,0),
		coalesce(b.qt_dose_especial,0),
		coalesce(b.ds_dose_diferenciada,''),
		coalesce(b.ie_origem_inf,'1'),
		b.ie_via_aplicacao,
		b.cd_unidade_medida_dose,
		coalesce(a.ie_urgencia,'N'),
		CASE WHEN coalesce(a.ie_suspenso,'N')='N' THEN coalesce(b.ie_suspenso,'N')  ELSE coalesce(a.ie_suspenso,'N') END ,
		a.cd_procedimento,
		substr(a.ds_horarios,1,255),
		b.qt_dose,
		a.nr_seq_proc_interno,
		coalesce(b.qt_conversao_dose,0),
		coalesce(b.ie_checar_adep,'N'),
		coalesce(b.ie_alterou_dose_dil,'X'),
		CASE WHEN coalesce(a.nr_seq_proc_interno,0)=0 THEN null  ELSE (obter_info_w_item_prescr(c.nr_prescricao, b.nr_sequencia, 'PI', 'D'))::numeric  END ,
		c.dt_liberacao_medico
from	prescr_material b,
		prescr_procedimento a,
		prescr_medica c
where	1 = 1
and		((b.nr_sequencia = nr_seq_material_p) or (coalesce(nr_seq_material_p,0) = 0))
and		(b.cd_material IS NOT NULL AND b.cd_material::text <> '')
and		a.nr_sequencia	= b.nr_sequencia_proc
and		a.nr_prescricao = b.nr_prescricao
and		b.nr_prescricao = c.nr_prescricao
and		b.nr_prescricao = nr_prescricao_p
and		a.nr_sequencia  = nr_sequencia_p
and		a.nr_prescricao = nr_prescricao_p
and		c.nr_prescricao	= nr_prescricao_p

union

SELECT CASE WHEN coalesce(a.nr_seq_prot_glic::text, '') = '' THEN  a.cd_intervalo  ELSE coalesce(d.cd_intervalo, a.cd_intervalo) END , --Kits vinculados ao medicamento que está associado ao procedimento /* não foi implementado o decode do union acima pq neste trata o nr_seq_kit. situação do cliente é apenas com o cd_kit_material*/
		coalesce(d.nr_sequencia,0),
		coalesce(a.ie_acm,'N'),
		coalesce(CASE WHEN coalesce(a.nr_seq_prot_glic::text, '') = '' THEN  a.ie_se_necessario  ELSE coalesce(d.ie_se_necessario, a.ie_se_necessario) END ,'N'),
		coalesce(d.ie_se_necessario,'N'),
		a.dt_prev_execucao,
		a.qt_hora_intervalo,
		a.qt_min_intervalo,
		c.dt_primeiro_horario,
		c.nr_horas_validade,
		coalesce(d.cd_material,0),
		coalesce(d.qt_unitaria,0),
		coalesce(d.qt_material,0),
		coalesce(d.qt_dose_especial,0),
		coalesce(d.ds_dose_diferenciada,''),
		coalesce(d.ie_origem_inf,'1'),
		d.ie_via_aplicacao,
		d.cd_unidade_medida_dose,
		coalesce(a.ie_urgencia,'N'),
		CASE WHEN coalesce(a.ie_suspenso,'N')='N' THEN coalesce(d.ie_suspenso,'N')  ELSE coalesce(a.ie_suspenso,'N') END ,
		a.cd_procedimento,
		CASE WHEN coalesce(a.nr_seq_prot_glic::text, '') = '' THEN  SUBSTR(a.ds_horarios,1,255)  ELSE coalesce(SUBSTR(d.ds_horarios,1,255), SUBSTR(a.ds_horarios,1,255)) END ,
		d.qt_dose,
		a.nr_seq_proc_interno,
		coalesce(d.qt_conversao_dose,0),
		coalesce(b.ie_checar_adep,'N'),
		coalesce(b.ie_alterou_dose_dil,'X'),
		null,
		c.dt_liberacao_medico
FROM	prescr_material b,
		prescr_procedimento a,
		prescr_medica c,
		prescr_material d
WHERE	((b.nr_sequencia = nr_seq_material_p) OR (coalesce(nr_seq_material_p,0) = 0))
AND		(b.cd_material IS NOT NULL AND b.cd_material::text <> '')
AND		a.nr_sequencia	= b.nr_sequencia_proc
AND		a.nr_prescricao = b.nr_prescricao
AND		b.nr_prescricao = c.nr_prescricao
AND		d.nr_prescricao = c.nr_prescricao
AND		d.nr_seq_kit = b.nr_sequencia
AND		b.nr_prescricao = nr_prescricao_p
AND		a.nr_sequencia  = nr_sequencia_p;

C02 CURSOR FOR
SELECT	nr_seq_interno,
		cd_intervalo,
		dt_prev_execucao,
		ds_horarios,
		ie_se_necessario,
		ie_acm,
		ie_urgencia,
		qt_procedimento
from	prescr_procedimento
where	nr_sequencia  = nr_sequencia_p
and		nr_prescricao = nr_prescricao_p;


BEGIN

select	max(cd_estabelecimento),
		max(nm_usuario_original),
		max(dt_liberacao_medico), --max(nvl(dt_liberacao,dt_liberacao_medico))
		max(dt_liberacao)
into STRICT	cd_estabelecimento_w,
		nm_usuario_original_w,
		dt_liberacao_w,
		dt_liberacao_enf_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

cd_funcao_ativa_w	:= obter_funcao_ativa;

if	((cd_funcao_ativa_w in (924,950) and coalesce(dt_liberacao_w::text, '') = '') or
	  cd_funcao_ativa_w not in (924,950)) then

	ie_prescr_mat_sem_lib_w := Obter_Param_Usuario(924, 530, cd_perfil_p, nm_usuario_original_w, cd_estabelecimento_w, ie_prescr_mat_sem_lib_w);
	ie_atualiza_proc_assoc_w := Obter_Param_Usuario(924, 1030, cd_perfil_p, nm_usuario_original_w, cd_estabelecimento_w, ie_atualiza_proc_assoc_w);
	ie_multiplica_at_w := Obter_Param_Usuario(924, 1054, cd_perfil_p, nm_usuario_original_w, cd_estabelecimento_w, ie_multiplica_at_w);

	open C01;
	loop
	fetch C01 into
		cd_intervalo_w,
		nr_sequencia_w,
		ie_acm_w,
		ie_se_necessario_w,
		ie_se_necessario_mat_w,
		dt_prev_execucao_w,
		qt_hora_intervalo_w,
		qt_min_intervalo_w,
		dt_primeiro_horario_w,
		nr_horas_validade_w,
		cd_material_w,
		qt_unitaria_w,
		qt_material_w,
		qt_dose_especial_w,
		ds_dose_diferenciada_w,
		ie_origem_inf_w,
		ie_via_aplicacao_w,
		cd_unidade_medida_dose_w,
		ie_urgencia_w,
		ie_suspenso_w,
		cd_procedimento_w,
		ds_horarios3_w,
		qt_dose_w,
		nr_seq_proc_interno_w,
		qt_conversao_dose_w,
		ie_checar_adep_w,
		ie_alterou_dose_dil_w,
		qt_dose_item_prescr_w,
		dt_liberacao_medico_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

		ie_atualiza_dados_w := 'N';

		if ((coalesce(ie_checar_adep_w, 'N') = 'N') or (coalesce(dt_liberacao_medico_w::text, '') = '')) then
			ie_atualiza_dados_w := 'S';
		elsif (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then

			select	coalesce(max(ie_agora),'N')
			into STRICT 	ie_agora_w
			from	intervalo_prescricao
			where	cd_intervalo = cd_intervalo_w;

			if (ie_agora_w = 'S') then
				ie_atualiza_dados_w := 'S';
			end if;
		end if;

		if (ie_atualiza_dados_w = 'S') then

			qt_material_w	:= 0;
			nr_ocorrencia_w	:= 0;

			SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, dt_primeiro_horario_w, to_date(to_char(dt_prev_execucao_w,'hh24:mi'),'hh24:mi'), nr_horas_validade_w, cd_procedimento_w, qt_hora_intervalo_w, qt_min_intervalo_w, nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'N', null) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;

			ds_horarios_w	:= ds_horarios_w || ds_horarios2_w;

			if (qt_dose_w > 0) then

				if (obter_conversao_unid_med(cd_material_w, cd_unidade_medida_dose_w) = 0) then
					qt_unitaria_w := qt_dose_w;
				else
					qt_unitaria_w := qt_dose_w / coalesce(obter_conversao_unid_med(cd_material_w, cd_unidade_medida_dose_w), 1);
				end if;
			end if;

			SELECT * FROM Obter_Quant_Dispensar(wheb_usuario_pck.get_cd_estabelecimento, cd_material_w, nr_prescricao_p, nr_sequencia_w, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, coalesce(qt_dose_especial_w,0), nr_ocorrencia_w, ds_dose_diferenciada_w, ie_origem_inf_w, cd_unidade_medida_dose_w, 1, qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w;

			if (ie_multiplica_at_w	= 'S') and (ie_alterou_dose_dil_w in ('S','X')) then

				select	max(qt_procedimento)
				into STRICT	qt_procedimento_w
				from	prescr_procedimento
				where	nr_prescricao = nr_prescricao_p
				and		nr_sequencia  = nr_sequencia_p;

				if (qt_dose_item_prescr_w IS NOT NULL AND qt_dose_item_prescr_w::text <> '') and (qt_dose_item_prescr_w > 0) and (ie_alterou_dose_dil_w = 'X') then
					qt_dose_w := qt_dose_item_prescr_w;
				else
					/*  Tem que pegar do cadastro porque senão vai multiplicar toda vez que salvar o procedimento  */

					select	coalesce(max(qt_dose),qt_dose_w)
					into STRICT	qt_dose_w
					from	proc_int_mat_prescr
					where	nr_seq_proc_interno	= nr_seq_proc_interno_w
					and		cd_material		    = cd_material_w;
				end if;

				qt_dose_w	:= qt_dose_w * qt_procedimento_w;

				/* Recalcular a qtde a dispensar com base na nova dose do item */

				if (qt_dose_w > 0) and (qt_conversao_dose_w > 0) then

					begin
						qt_unitaria_ww	:= qt_dose_w/qt_conversao_dose_w;
						qt_material_w	:= 0;

						SELECT * FROM Obter_Quant_Dispensar(wheb_usuario_pck.get_cd_estabelecimento, cd_material_w, nr_prescricao_p, nr_sequencia_w, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_ww, coalesce(qt_dose_especial_w,0), nr_ocorrencia_w, ds_dose_diferenciada_w, ie_origem_inf_w, cd_unidade_medida_dose_w, 1, qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w;
					exception when others then
						qt_unitaria_ww	:= qt_unitaria_w;
						qt_material_w	:= qt_unitaria_w;
					end;

				end if;
				/* Fim recalcular*/

			end if;

			if (coalesce(ds_horarios3_w,ds_horarios_w) = 'SN') then
				dt_prev_execucao_w := null;
			end if;

			Update	prescr_material
			set	cd_intervalo			= cd_intervalo_w,
				ie_acm					= ie_acm_w,
				ie_se_necessario		= ie_se_necessario_w,
				ie_urgencia				= ie_urgencia_w,
				ie_suspenso				= ie_suspenso_w,
				ie_utiliza_kit			= 'N',
				ie_medicacao_paciente	= 'N',
				hr_prim_horario			= to_char(dt_prev_execucao_w,'hh24:mi'),
				qt_hora_intervalo		= qt_hora_intervalo_w,
				qt_min_intervalo		= qt_min_intervalo_w,
				ds_horarios				= coalesce(ds_horarios3_w,ds_horarios_w),
				nr_ocorrencia			= nr_ocorrencia_w,
				qt_total_dispensar		= qt_dispensar_w,
				qt_material				= qt_material_w,
				ie_regra_disp			= CASE WHEN coalesce(ie_regra_disp,'X')='D' THEN  ie_regra_disp  ELSE ie_regra_disp_w END ,
				qt_dose					= qt_dose_w,
				ie_alterou_dose_dil 	= 'N'
			where	coalesce(ie_intervalo_dif,'N')	<> 'S'
			and		nr_sequencia		= nr_sequencia_w
			and		nr_prescricao		= nr_prescricao_p;

			if (ie_prescr_mat_sem_lib_w = 'S') then
				CALL Gerar_prescr_mat_sem_dt_lib(nr_prescricao_p,nr_sequencia_w,cd_perfil_p,'N',nm_usuario_original_w,null);
			end if;
		end if;
	end loop;
	close C01;
	if (ie_atualiza_proc_assoc_w = 'S') then
		open C02;
		loop
		fetch C02 into
			nr_seq_interno_proc_w,
			cd_intervalo_proc_w,
			dt_prev_execucao_proc_w,
			ds_horarios_proc_w,
			ie_se_necessario_proc_w,
			ie_acm_proc_w,
			ie_urgencia_proc_w,
			qt_procedimento_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			if (coalesce(nr_seq_interno_proc_w,0) > 0) then
				update	prescr_procedimento
				set	cd_intervalo 	 = cd_intervalo_proc_w,
					dt_prev_execucao = dt_prev_execucao_proc_w,
					ds_horarios	 = ds_horarios_proc_w,
					ie_se_necessario = ie_se_necessario_proc_w,
					ie_acm		 = ie_acm_proc_w,
					ie_urgencia	 = ie_urgencia_proc_w,
					qt_procedimento	 = qt_procedimento_w
				where	nr_seq_proc_princ = nr_seq_interno_proc_w;
			end if;
			end;
		end loop;
		close C02;
	end if;

	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ajustar_prescr_mat_proc ( nr_prescricao_p bigint, nr_sequencia_p bigint, cd_perfil_p bigint, nr_seq_material_p bigint) FROM PUBLIC;

