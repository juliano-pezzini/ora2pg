-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_margem_contrib ( nr_interno_conta_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_sequencia_w			bigint;
cd_convenio_w			integer;
cd_origem_e_proc_w		varchar(09);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_atendimento_w			bigint;
dt_ref_fat_w			timestamp;
cd_medico_w			varchar(10);
cd_estabelecimento_w		integer;
ie_clinica_w			varchar(03);
ie_tipo_atend_w			bigint;
qt_regra_interna_w			bigint;
vl_custo_variavel_w		double precision;
vl_desp_variavel_w			double precision;
vl_receita_w			double precision;
vl_margem_contrib_w		double precision;
cd_proc_retorno_w			varchar(255);
vl_receita_bruta_w			double precision;
vl_faturado_calc_w		double precision;
vl_repasse_calc_w		double precision;
vl_margem_rec_bruta_w      double precision;
dt_entrada_w			timestamp;
dt_alta_w			timestamp;


BEGIN 
 
delete	from eis_margem_contrib 
where	nr_interno_conta	= nr_interno_conta_p;
 
begin 
select	a.nr_atendimento, 
	a.cd_convenio_parametro, 
	b.ie_tipo_atendimento, 
	b.cd_medico_resp, 
	coalesce(a.cd_estabelecimento, b.cd_estabelecimento), 
	ie_clinica, 
	trunc(coalesce(dt_mesano_referencia,clock_timestamp()),'month'), 
	b.dt_entrada, 
	b.dt_alta 
into STRICT	nr_atendimento_w, 
	cd_convenio_w, 
	ie_tipo_atend_w, 
	cd_medico_w, 
	cd_estabelecimento_w, 
	ie_clinica_w, 
	dt_ref_fat_w, 
	dt_entrada_w, 
	dt_alta_w 
from 	atendimento_paciente b, 
	conta_paciente a 
where	a.nr_atendimento 	= b.nr_atendimento 
and	a.nr_interno_conta 	= nr_interno_conta_p;
exception 
	when others then 
		nr_atendimento_w	:= 0;
end;
 
if (nr_atendimento_w > 0) then 
	select	 
		sum(coalesce(vl_custo_var_mc,0)) vl_custo_variavel, 
		sum(coalesce(vl_procedimento,0) + coalesce(vl_material,0) - coalesce(vl_repasse_terceiro,0)) vl_total_receita, 
		sum(coalesce(vl_procedimento,0) + coalesce(vl_material,0)) vl_receita_bruta, 
		sum(vl_repasse_calc), 
		sum(coalesce(vl_procedimento,0) + coalesce(vl_material,0) - coalesce(vl_repasse_calc,0))				 
	into STRICT	vl_custo_variavel_w, 
		vl_receita_w, 
		vl_receita_bruta_w, 
		vl_repasse_calc_w, 
		vl_faturado_calc_w		 
	from	conta_paciente_resumo 
	where	nr_interno_conta	= nr_interno_conta_p;
 
	select	sum(vl_custo_variavel) 
	into STRICT	vl_desp_variavel_w 
	from	cus_conta_pac_mc 
	where	nr_interno_conta	= nr_interno_conta_p;
 
	select 	nextval('eis_margem_contrib_seq') 
	into STRICT	nr_sequencia_w 
	;
	 
	vl_receita_w			:= coalesce(vl_receita_w,0);
	vl_custo_variavel_w		:= coalesce(vl_custo_variavel_w,0);
	vl_desp_variavel_w		:= coalesce(vl_desp_variavel_w,0);
	vl_margem_contrib_w		:= vl_receita_w - vl_custo_variavel_w - vl_desp_variavel_w;
	vl_receita_bruta_w		:= coalesce(vl_receita_bruta_w,0);
	vl_margem_rec_bruta_w		:= vl_receita_bruta_w - vl_custo_variavel_w - vl_desp_variavel_w;
	 
	 
	select count(*) 
	into STRICT	qt_regra_interna_w 
	from	regra_int_proc_princ;
	 
	if (qt_regra_interna_w > 0) then 
		SELECT * FROM obter_proc_princ_interno( 
			nr_atendimento_w, ie_tipo_atend_w, cd_procedimento_w, ie_origem_proced_w, nr_interno_conta_p) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
 
	else 
		select	obter_proc_principal( 
			nr_atendimento_w, 
			cd_convenio_w, 
			ie_tipo_atend_w, 
			nr_interno_conta_p, 'CO') 
		into STRICT	cd_proc_retorno_w 
		;
		cd_Origem_e_Proc_w		:= substr(cd_proc_retorno_w,1,9);
		if (cd_Origem_e_Proc_w IS NOT NULL AND cd_Origem_e_Proc_w::text <> '') and (length(cd_Origem_e_Proc_w) = 09) then 
			begin 
			cd_procedimento_w	:= substr(cd_Origem_e_Proc_w,2,8);
			ie_origem_proced_w	:= substr(cd_Origem_e_Proc_w,1,1);
			exception 
				when others then 
					cd_procedimento_w	:= null;
					ie_origem_proced_w	:= null;
			end;
		end if;
	end if;
	 
	insert into Eis_margem_contrib( 
		nr_sequencia, 
		cd_estabelecimento, 
		nr_interno_conta, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		dt_ref_fat, 
		ie_tipo_atend, 
		cd_convenio, 
		ie_clinica, 
		cd_medico, 
		vl_receita, 
		vl_custo_variavel, 
		vl_desp_variavel, 
		vl_margem_contrib, 
		cd_procedimento, 
		ie_origem_proced, 
		vl_receita_bruta, 
		vl_repasse_calc, 
		vl_faturado_calc, 
		vl_margem_rec_bruta, 
		dt_entrada, 
		dt_alta) 
	values (	nr_sequencia_w, 
		cd_estabelecimento_w, 
		nr_interno_conta_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		dt_ref_fat_w, 
		ie_tipo_atend_w, 
		cd_convenio_w, 
		ie_clinica_w, 
		cd_medico_w, 
		vl_receita_w, 
		vl_custo_variavel_w, 
		vl_desp_variavel_w, 
		vl_margem_contrib_w, 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		vl_receita_bruta_w, 
		vl_repasse_calc_w, 
		vl_faturado_calc_w, 
		vl_margem_rec_bruta_w, 
		dt_entrada_w, 
		dt_alta_w);
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_margem_contrib ( nr_interno_conta_p bigint, nm_usuario_p text) FROM PUBLIC;

