-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_gerar_w_esus_aval_eleg ( nr_seq_lote_p esus_lote_envio.nr_sequencia%type, ie_tipo_lote_esus_p esus_lote_envio.ie_tipo_lote_esus%type, cd_cnes_estab_p estabelecimento.cd_cns%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

 
cd_cns_paciente_w		w_esus_aval_elegibilidade.cd_cns_paciente%type;				
dt_nascimento_paciente_w	w_esus_aval_elegibilidade.dt_nascimento_paciente%type;					
ie_sexo_paciente_w		w_esus_aval_elegibilidade.ie_sexo_paciente%type;
cd_cns_profissional_w		w_esus_aval_elegibilidade.cd_cns_profissional%type;
nr_seq_exp_w			w_esus_aval_elegibilidade.nr_sequencia%type;
cd_uuid_original_w		w_esus_aval_elegibilidade.cd_uuid_original%type;
nr_data_atendimento_w		w_esus_aval_elegibilidade.nr_data_atendimento%type;
nr_data_nasc_pac_w		w_esus_aval_elegibilidade.nr_data_nasc_pac%type;
ie_turno_atendimento_w		w_esus_aval_elegibilidade.ie_turno_atendimento%type;
cd_cns_cuidador_w		w_esus_aval_elegibilidade.cd_cns_cuidador%type;
nr_data_naturaliza_w		w_esus_aval_elegibilidade.nr_data_naturaliza%type;
nr_portaria_natura_w		w_esus_aval_elegibilidade.nr_portaria_natura%type;
nr_data_ent_brasil_w		w_esus_aval_elegibilidade.nr_data_ent_brasil%type;
nr_pais_nascimento_w		w_esus_aval_elegibilidade.nr_pais_nascimento%type;
cd_etnia_w			w_esus_aval_elegibilidade.cd_etnia%type;
nm_pai_pessoa_fisica_w		w_esus_aval_elegibilidade.nm_pai_pessoa_fisica%type;
ie_desconhece_pai_w		w_esus_aval_elegibilidade.ie_desconhece_pai%type;
ds_ponto_referencia_w		w_esus_aval_elegibilidade.ds_ponto_referencia%type;
cd_municipio_ibge_ww		w_esus_aval_elegibilidade.cd_municipio_ibge%type;
cd_municipio_ibge_w		w_esus_aval_elegibilidade.cd_municipio_ibge%type;
cd_cns_seg_profiss_w		w_esus_aval_elegibilidade.cd_cns_seg_profiss%type;
nm_mae_pessoa_fisica_w		w_esus_aval_elegibilidade.nm_mae_pessoa_fisica%type;
dt_naturalizacao_w		timestamp;
dt_entrada_brasil_w		timestamp;

nr_sequencia_w			esus_aval_elegibilidade.nr_sequencia%type;
cd_estabelecimento_w		esus_aval_elegibilidade.cd_estabelecimento%type;
dt_atualizacao_w		esus_aval_elegibilidade.dt_atualizacao%type;
nm_usuario_w			esus_aval_elegibilidade.nm_usuario%type;
dt_atualizacao_nrec_w		esus_aval_elegibilidade.dt_atualizacao_nrec%type;
nm_usuario_nrec_w		esus_aval_elegibilidade.nm_usuario_nrec%type;
cd_profissional_w		esus_aval_elegibilidade.cd_profissional%type;
cd_cbo_w			esus_aval_elegibilidade.cd_cbo%type;
cd_cnes_unidade_w		esus_aval_elegibilidade.cd_cnes_unidade%type;
cd_cnes_unidade_ww		esus_aval_elegibilidade.cd_cnes_unidade%type;
cd_pessoa_fisica_w		esus_aval_elegibilidade.cd_pessoa_fisica%type;
nr_seq_sus_equipe_w		esus_aval_elegibilidade.nr_seq_sus_equipe%type;
dt_atendimento_w		esus_aval_elegibilidade.dt_atendimento%type;
dt_liberacao_w			esus_aval_elegibilidade.dt_liberacao%type;
ie_origem_cidadao_w		esus_aval_elegibilidade.ie_origem_cidadao%type;
ie_con_ava_acamado_w		esus_aval_elegibilidade.ie_con_ava_acamado%type;
ie_con_ava_domicilia_w		esus_aval_elegibilidade.ie_con_ava_domicilia%type;
ie_con_ava_ulc_ferid_w		esus_aval_elegibilidade.ie_con_ava_ulc_ferid%type;
ie_con_ava_acom_nutr_w		esus_aval_elegibilidade.ie_con_ava_acom_nutr%type;
ie_con_ava_sonda_sng_w		esus_aval_elegibilidade.ie_con_ava_sonda_sng%type;
ie_con_ava_sonta_sne_w		esus_aval_elegibilidade.ie_con_ava_sonta_sne%type;
ie_con_ava_gastrosto_w		esus_aval_elegibilidade.ie_con_ava_gastrosto%type;
ie_con_ava_colostomi_w		esus_aval_elegibilidade.ie_con_ava_colostomi%type;
ie_con_ava_cistostom_w		esus_aval_elegibilidade.ie_con_ava_cistostom%type;
ie_con_ava_sonda_svd_w		esus_aval_elegibilidade.ie_con_ava_sonda_svd%type;
ie_con_ava_acom_preo_w		esus_aval_elegibilidade.ie_con_ava_acom_preo%type;
ie_con_ava_acom_poso_w		esus_aval_elegibilidade.ie_con_ava_acom_poso%type;
ie_con_ava_adap_orte_w		esus_aval_elegibilidade.ie_con_ava_adap_orte%type;
ie_con_ava_reab_domi_w		esus_aval_elegibilidade.ie_con_ava_reab_domi%type;
ie_con_ava_cuid_onco_w		esus_aval_elegibilidade.ie_con_ava_cuid_onco%type;
ie_con_ava_nao_oncol_w		esus_aval_elegibilidade.ie_con_ava_nao_oncol%type;
ie_con_ava_oxige_dom_w		esus_aval_elegibilidade.ie_con_ava_oxige_dom%type;
ie_con_ava_traqueost_w		esus_aval_elegibilidade.ie_con_ava_traqueost%type;
ie_con_ava_hig_bronq_w		esus_aval_elegibilidade.ie_con_ava_hig_bronq%type;
ie_con_ava_sup_cpap_w		esus_aval_elegibilidade.ie_con_ava_sup_cpap%type;
ie_con_ava_sup_bipap_w		esus_aval_elegibilidade.ie_con_ava_sup_bipap%type;
ie_con_ava_dia_perit_w		esus_aval_elegibilidade.ie_con_ava_dia_perit%type;
ie_con_ava_paracente_w		esus_aval_elegibilidade.ie_con_ava_paracente%type;
ie_con_ava_med_paren_w		esus_aval_elegibilidade.ie_con_ava_med_paren%type;
cd_cid_principal_w		esus_aval_elegibilidade.cd_cid_principal%type;
cd_cid_secundario_1_w		esus_aval_elegibilidade.cd_cid_secundario_1%type;
cd_cid_secundario_2_w		esus_aval_elegibilidade.cd_cid_secundario_2%type;
ie_conclusao_w			esus_aval_elegibilidade.ie_conclusao%type;
ie_con_dest_elegivel_w		esus_aval_elegibilidade.ie_con_dest_elegivel%type;
ie_con_inel_inst_cli_w		esus_aval_elegibilidade.ie_con_inel_inst_cli%type;
ie_con_inel_nesc_pro_w		esus_aval_elegibilidade.ie_con_inel_nesc_pro%type;
ie_con_inel_out_moti_w		esus_aval_elegibilidade.ie_con_inel_out_moti%type;
ie_con_inel_aus_cuid_w		esus_aval_elegibilidade.ie_con_inel_aus_cuid%type;
ie_con_inel_cond_soc_w		esus_aval_elegibilidade.ie_con_inel_cond_soc%type;
ie_cuidador_w			esus_aval_elegibilidade.ie_cuidador%type;
nr_seq_lote_envio_w		esus_aval_elegibilidade.nr_seq_lote_envio%type;
cd_seg_profissional_w		esus_aval_elegibilidade.cd_seg_profissional%type;
cd_seg_cbo_w			esus_aval_elegibilidade.cd_seg_cbo%type;
nr_seg_seq_sus_equ_w		esus_aval_elegibilidade.nr_seg_seq_sus_equ%type;
cd_seg_cnes_unidade_w		esus_aval_elegibilidade.cd_seg_cnes_unidade%type;

ie_raca_cor_pac_w		varchar(255);
nm_pessoa_fisica_w 		varchar(255);
nm_social_pes_fis_w		varchar(255);
cd_munic_ibge_pf_ww		varchar(255);
cd_munic_ibge_pf_w		varchar(255);
cd_nacionalidade_w		varchar(255);
nr_pis_pessoa_fisic_w		varchar(255);

ie_desconhece_mae_w 		varchar(255);
ds_email_pes_fisic_w		varchar(255);
cd_tipo_logradouro_w		varchar(255);
nm_logradouro_w			varchar(255);
nr_logradouro_w			varchar(255);
ds_complemento_log_w		varchar(255);
ds_bairro_w			varchar(255);
cd_uf_logradouro_w		varchar(255);
cd_cep_logradouro_w		varchar(255);
nr_telefone_resid_w		varchar(255);
nr_telefone_refer_w		varchar(255);
ie_sem_numero_log_w		varchar(255);

cd_contra_chave_rem_w		w_esus_header_footer.cd_contra_chave_rem%type;
cd_uuid_instal_rem_w		w_esus_header_footer.cd_uuid_instal_rem%type;
cd_contra_chave_ori_w		w_esus_header_footer.cd_contra_chave_ori%type;
cd_uuid_instal_orig_w		w_esus_header_footer.cd_uuid_instal_orig%type;

AvalEleg CURSOR FOR 
	SELECT 	nr_sequencia, 
		cd_estabelecimento, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		cd_profissional, 
		cd_cbo, 
		cd_cnes_unidade, 
		cd_pessoa_fisica, 
		nr_seq_sus_equipe, 
		dt_atendimento, 
		dt_liberacao, 
		ie_origem_cidadao, 
		ie_con_ava_acamado, 
		ie_con_ava_domicilia, 
		ie_con_ava_ulc_ferid, 
		ie_con_ava_acom_nutr, 
		ie_con_ava_sonda_sng, 
		ie_con_ava_sonta_sne, 
		ie_con_ava_gastrosto, 
		ie_con_ava_colostomi, 
		ie_con_ava_cistostom, 
		ie_con_ava_sonda_svd, 
		ie_con_ava_acom_preo, 
		ie_con_ava_acom_poso, 
		ie_con_ava_adap_orte, 
		ie_con_ava_reab_domi, 
		ie_con_ava_cuid_onco, 
		ie_con_ava_nao_oncol, 
		ie_con_ava_oxige_dom, 
		ie_con_ava_traqueost, 
		ie_con_ava_hig_bronq, 
		ie_con_ava_sup_cpap, 
		ie_con_ava_sup_bipap, 
		ie_con_ava_dia_perit, 
		ie_con_ava_paracente, 
		ie_con_ava_med_paren, 
		cd_cid_principal, 
		cd_cid_secundario_1, 
		cd_cid_secundario_2, 
		ie_conclusao, 
		ie_con_dest_elegivel, 
		ie_con_inel_inst_cli, 
		ie_con_inel_nesc_pro, 
		ie_con_inel_out_moti, 
		ie_con_inel_aus_cuid, 
		ie_con_inel_cond_soc, 
		ie_cuidador, 
		nr_seq_lote_envio, 
		cd_uuid_original, 
		cd_seg_profissional, 
		cd_seg_cbo, 
		nr_seg_seq_sus_equ, 
		cd_seg_cnes_unidade, 
		ie_turno_atendimento, 
		cd_cns_cuidador 
	from	esus_aval_elegibilidade 
	where	nr_seq_lote_envio =	nr_seq_lote_p 
	order by nr_sequencia;

type 		fetch_array is table of AvalEleg%rowtype;
s_array 	fetch_array;
i		integer := 1;
type vetor is table of fetch_array index by integer;
vetor_AvalEleg_w			vetor;

	 
BEGIN 
 
delete 	from w_esus_aval_elegibilidade 
where	nr_seq_lote_envio = nr_seq_lote_p;
 
 
open AvalEleg;
loop 
fetch AvalEleg bulk collect into s_array limit 1000;
	vetor_AvalEleg_w(i) := s_array;
	i := i + 1;
EXIT WHEN NOT FOUND; /* apply on AvalEleg */
end loop;
close AvalEleg;
 
 
for i in 1..vetor_AvalEleg_w.count loop 
	begin 
	s_array := vetor_AvalEleg_w(i);
	for z in 1..s_array.count loop 
		begin 
		 
		nr_sequencia_w			:= s_array[z].nr_sequencia;
		cd_estabelecimento_w		:= s_array[z].cd_estabelecimento;
		dt_atualizacao_w		:= s_array[z].dt_atualizacao;
		nm_usuario_w			:= s_array[z].nm_usuario;
		dt_atualizacao_nrec_w		:= s_array[z].dt_atualizacao_nrec;
		nm_usuario_nrec_w		:= s_array[z].nm_usuario_nrec;
		cd_profissional_w		:= s_array[z].cd_profissional;
		cd_cbo_w			:= s_array[z].cd_cbo;
		cd_cnes_unidade_w		:= s_array[z].cd_cnes_unidade;
		cd_pessoa_fisica_w		:= s_array[z].cd_pessoa_fisica;
		nr_seq_sus_equipe_w		:= s_array[z].nr_seq_sus_equipe;
		dt_atendimento_w		:= s_array[z].dt_atendimento;
		dt_liberacao_w			:= s_array[z].dt_liberacao;
		ie_origem_cidadao_w		:= s_array[z].ie_origem_cidadao;
		ie_con_ava_acamado_w		:= s_array[z].ie_con_ava_acamado;
		ie_con_ava_domicilia_w		:= s_array[z].ie_con_ava_domicilia;
		ie_con_ava_ulc_ferid_w		:= s_array[z].ie_con_ava_ulc_ferid;
		ie_con_ava_acom_nutr_w		:= s_array[z].ie_con_ava_acom_nutr;
		ie_con_ava_sonda_sng_w		:= s_array[z].ie_con_ava_sonda_sng;
		ie_con_ava_sonta_sne_w		:= s_array[z].ie_con_ava_sonta_sne;
		ie_con_ava_gastrosto_w		:= s_array[z].ie_con_ava_gastrosto;
		ie_con_ava_colostomi_w		:= s_array[z].ie_con_ava_colostomi;
		ie_con_ava_cistostom_w		:= s_array[z].ie_con_ava_cistostom;
		ie_con_ava_sonda_svd_w		:= s_array[z].ie_con_ava_sonda_svd;
		ie_con_ava_acom_preo_w		:= s_array[z].ie_con_ava_acom_preo;
		ie_con_ava_acom_poso_w		:= s_array[z].ie_con_ava_acom_poso;
		ie_con_ava_adap_orte_w		:= s_array[z].ie_con_ava_adap_orte;
		ie_con_ava_reab_domi_w		:= s_array[z].ie_con_ava_reab_domi;
		ie_con_ava_cuid_onco_w		:= s_array[z].ie_con_ava_cuid_onco;
		ie_con_ava_nao_oncol_w		:= s_array[z].ie_con_ava_nao_oncol;
		ie_con_ava_oxige_dom_w		:= s_array[z].ie_con_ava_oxige_dom;
		ie_con_ava_traqueost_w		:= s_array[z].ie_con_ava_traqueost;
		ie_con_ava_hig_bronq_w		:= s_array[z].ie_con_ava_hig_bronq;
		ie_con_ava_sup_cpap_w		:= s_array[z].ie_con_ava_sup_cpap;
		ie_con_ava_sup_bipap_w		:= s_array[z].ie_con_ava_sup_bipap;
		ie_con_ava_dia_perit_w		:= s_array[z].ie_con_ava_dia_perit;
		ie_con_ava_paracente_w		:= s_array[z].ie_con_ava_paracente;
		ie_con_ava_med_paren_w		:= s_array[z].ie_con_ava_med_paren;
		cd_cid_principal_w		:= s_array[z].cd_cid_principal;
		cd_cid_secundario_1_w		:= s_array[z].cd_cid_secundario_1;
		cd_cid_secundario_2_w		:= s_array[z].cd_cid_secundario_2;
		ie_conclusao_w			:= s_array[z].ie_conclusao;
		ie_con_dest_elegivel_w		:= s_array[z].ie_con_dest_elegivel;
		ie_con_inel_inst_cli_w		:= s_array[z].ie_con_inel_inst_cli;
		ie_con_inel_nesc_pro_w		:= s_array[z].ie_con_inel_nesc_pro;
		ie_con_inel_out_moti_w		:= s_array[z].ie_con_inel_out_moti;
		ie_con_inel_aus_cuid_w		:= s_array[z].ie_con_inel_aus_cuid;
		ie_con_inel_cond_soc_w		:= s_array[z].ie_con_inel_cond_soc;
		ie_cuidador_w			:= s_array[z].ie_cuidador;
		nr_seq_lote_envio_w		:= s_array[z].nr_seq_lote_envio;
		cd_uuid_original_w		:= s_array[z].cd_uuid_original;
		cd_seg_profissional_w		:= s_array[z].cd_seg_profissional;
		cd_seg_cbo_w			:= s_array[z].cd_seg_cbo;
		nr_seg_seq_sus_equ_w		:= s_array[z].nr_seg_seq_sus_equ;
		cd_seg_cnes_unidade_w		:= s_array[z].cd_seg_cnes_unidade;
		ie_turno_atendimento_w		:= s_array[z].ie_turno_atendimento;
		cd_cns_cuidador_w		:= s_array[z].cd_cns_cuidador;
		 
		if (coalesce(cd_pessoa_fisica_w,'X') <> 'X') then 
			begin 
			cd_cns_paciente_w		:= substr(obter_dados_pf(cd_pessoa_fisica_w,'CNS'),1,20);
			dt_nascimento_paciente_w	:= to_date(substr(obter_dados_pf(cd_pessoa_fisica_w,'DN'),1,10),'dd/mm/yyyy');
			ie_sexo_paciente_w		:= substr(sus_gerar_depara_esus(obter_dados_pf(cd_pessoa_fisica_w,'SE'),'SEXO'),1,20);			
			end;
		end if;		
		 
		begin 
		cd_cns_profissional_w := substr(obter_dados_pf(cd_profissional_w,'CNS'),1,20);		
		exception 
		when others then 
			cd_cns_profissional_w := '';
		end;
		 
		begin 
		cd_cns_seg_profiss_w := substr(obter_dados_pf(cd_seg_profissional_w,'CNS'),1,20);		
		exception 
		when others then 
			cd_cns_seg_profiss_w := '';
		end;
 
		select	nextval('w_esus_aval_elegibilidade_seq') 
		into STRICT	nr_seq_exp_w 
		;		
		 
		nm_pessoa_fisica_w 		:= upper(elimina_acentos(obter_nome_pf(cd_pessoa_fisica_w),'S'));
		nm_social_pes_fis_w		:= upper(elimina_acentos(obter_dados_pf(cd_pessoa_fisica_w, 'NSOC'),'S'));
		cd_munic_ibge_pf_ww		:= obter_dados_pf(cd_pessoa_fisica_w, 'MN');
		cd_munic_ibge_pf_w		:= substr(cd_munic_ibge_pf_ww||Calcula_Digito('MODULO10',cd_munic_ibge_pf_ww),1,7);
		ds_email_pes_fisic_w		:= substr(obter_compl_pf(cd_pessoa_fisica_w, 1, 'M'),1,100);
		dt_naturalizacao_w		:= to_date(obter_dados_pf(cd_pessoa_fisica_w, 'DNAT'),'dd/mm/yyyy');
		nr_pis_pessoa_fisic_w		:= obter_dados_pf(cd_pessoa_fisica_w, 'PIS');
		nr_pais_nascimento_w		:= somente_numero(esus_obter_cod_pais_pf(cd_pessoa_fisica_w));
		cd_etnia_w			:= somente_numero(Sus_Obter_Etnia(cd_pessoa_fisica_w,'C'));
		ds_bairro_w			:= substr(obter_compl_pf(cd_pessoa_fisica_w, 1, 'B'),1,72);
		cd_cep_logradouro_w		:= substr(somente_numero(obter_compl_pf(cd_pessoa_fisica_w, 1, 'CEP')),1,8);
		cd_municipio_ibge_ww		:= obter_compl_pf(cd_pessoa_fisica_w, 1, 'CDM');	
		cd_municipio_ibge_w		:= substr(cd_municipio_ibge_ww||Calcula_Digito('MODULO10',cd_municipio_ibge_ww),1,7);
		ds_complemento_log_w		:= substr(obter_compl_pf(cd_pessoa_fisica_w, 1, 'CO'),1,30);
		nm_logradouro_w			:= substr(elimina_acentos(obter_compl_pf(cd_pessoa_fisica_w, 1, 'EN'),'S'),1,72);
		nr_logradouro_w			:= substr(obter_compl_pf(cd_pessoa_fisica_w, 1, 'NR'),1,10);
		cd_uf_logradouro_w		:= esus_obter_codigo_uf(obter_compl_pf(cd_pessoa_fisica_w, 1, 'UF'));
		nr_telefone_resid_w		:= substr(somente_numero(obter_compl_pf(cd_pessoa_fisica_w, 1, 'DDT')||obter_compl_pf(cd_pessoa_fisica_w, 1, 'T')),1,11);
		nr_telefone_refer_w		:= substr(somente_numero(obter_compl_pf(cd_pessoa_fisica_w, 1, 'TA')),1,11);
		cd_tipo_logradouro_w		:= obter_compl_pf(cd_pessoa_fisica_w, 1, 'TLS');
		nr_portaria_natura_w		:= substr(obter_dados_pf(cd_pessoa_fisica_w, 'NRPNAT'),1,16);
		dt_entrada_brasil_w		:= to_date(obter_dados_pf(cd_pessoa_fisica_w, 'DCB'),'dd/mm/yyyy');
 
		ie_sem_numero_log_w	:= 	'false';
		 
		if (nr_logradouro_w = '') then 
			ie_sem_numero_log_w	:=	'true';
		end if;		
		 
		if (dt_atendimento_w IS NOT NULL AND dt_atendimento_w::text <> '') then 
			nr_data_atendimento_w	:= rpad(((dt_atendimento_w - to_date('01/01/1970 00:00:00','dd/mm/yyyy hh24:mi:ss')) * 86400),13,0);
		else 
			nr_data_atendimento_w	:= null;
		end if;
		 
		if (dt_nascimento_paciente_w IS NOT NULL AND dt_nascimento_paciente_w::text <> '') then 
			nr_data_nasc_pac_w	:= rpad(((dt_nascimento_paciente_w - to_date('01/01/1970 00:00:00','dd/mm/yyyy hh24:mi:ss')) * 86400),13,0);
		else 
			nr_data_nasc_pac_w	:= null;
		end if;
		 
		ie_raca_cor_pac_w		:= coalesce(Sus_Obter_Cor_Pele(cd_pessoa_fisica_w,'C'),'6');
		if (ie_raca_cor_pac_w > '6') then 
			ie_raca_cor_pac_w	:= '6';
		end if;
		 
		if (ie_raca_cor_pac_w <> '5') then 
			cd_etnia_w		:= '';
		end if;
		 
		nm_mae_pessoa_fisica_w		:= upper(elimina_acentos(obter_compl_pf(cd_pessoa_fisica_w, 5, 'N'),'S'));
		ie_desconhece_mae_w 		:= 'false';
		if (nm_mae_pessoa_fisica_w = '') then 
			ie_desconhece_mae_w	:= 'true';
		end if;		
		 
		nm_pai_pessoa_fisica_w		:= upper(elimina_acentos(obter_compl_pf(cd_pessoa_fisica_w, 4, 'N'),'S'));
		ie_desconhece_pai_w		:= 'false';
		if (nm_pai_pessoa_fisica_w = '') then 
			ie_desconhece_pai_w	:= 'true';
		end if;	
		 
		nr_pais_nascimento_w	:= '31';
		if (dt_naturalizacao_w IS NOT NULL AND dt_naturalizacao_w::text <> '') then 
			cd_nacionalidade_w 	:= '2';
			nr_data_naturaliza_w	:= rpad(((dt_nascimento_paciente_w - to_date('01/01/1970 00:00:00','dd/mm/yyyy hh24:mi:ss')) * 86400),13,0);
		else	 
			cd_nacionalidade_w 	:= '1';			
			nr_data_naturaliza_w	:= null;
			nr_pais_nascimento_w	:= '31';
		end if;
		 
		if (dt_entrada_brasil_w IS NOT NULL AND dt_entrada_brasil_w::text <> '') then 
			nr_data_ent_brasil_w	:= rpad(((dt_entrada_brasil_w - to_date('01/01/1970 00:00:00','dd/mm/yyyy hh24:mi:ss')) * 86400),13,0);
		else	 
			nr_data_ent_brasil_w	:= null;				
		end if;
		 
		if (ie_cuidador_w = '1') then 
			cd_cns_cuidador_w	:= '';
		end if;
		 
		if (nr_telefone_refer_w = '0') then 
			nr_telefone_refer_w	:= '';
		end if;
		 
		if (cd_municipio_ibge_w = '0') then 
			cd_municipio_ibge_w	:= '';
		end if;
		 
		select	coalesce(max(cd_cnes_unidade),'0') 
		into STRICT	cd_cnes_unidade_ww 
		from	w_esus_header_footer 
		where	nr_seq_lote_envio = nr_seq_lote_p;
		 
		if (cd_cnes_unidade_w <> cd_cnes_unidade_ww) then 
			begin 
			cd_contra_chave_rem_w	:= substr(sus_gerar_uuid_esus(cd_cnes_unidade_w,'C'),1,50);
			cd_uuid_instal_rem_w	:= substr(sus_gerar_uuid_esus(cd_cnes_unidade_w,'U'),1,50);
			cd_contra_chave_ori_w	:= cd_contra_chave_rem_w;
			cd_uuid_instal_orig_w	:= cd_uuid_instal_rem_w;			
			cd_municipio_ibge_ww	:= sus_obter_dados_equipe(nr_seq_sus_equipe_w,'CM');
			cd_municipio_ibge_ww	:= substr(cd_municipio_ibge_ww||Calcula_Digito('MODULO10',cd_municipio_ibge_ww),1,7);
			 
			update 	w_esus_header_footer 
			set 	cd_cnes_unidade = cd_cnes_unidade_w, 
				cd_cnes_serealizado = cd_cnes_unidade_w, 
				cd_contra_chave_rem = cd_contra_chave_rem_w, 
				cd_uuid_instal_rem = cd_uuid_instal_rem_w, 
				cd_contra_chave_ori = cd_contra_chave_ori_w, 
				cd_uuid_instal_orig = cd_uuid_instal_orig_w, 
				cd_municipio_ibge = cd_municipio_ibge_ww 
			where	nr_seq_lote_envio = nr_seq_lote_p;
			 
			end;
		end if;
		 
		if (coalesce(cd_uuid_original_w,'X') = 'X') then 
			cd_uuid_original_w := coalesce(sus_gerar_uuid_esus(cd_cnes_unidade_w,'U'),'0');
			update esus_aval_elegibilidade set cd_uuid_original = cd_uuid_original_w where nr_sequencia = nr_sequencia_w;
		end if;	
		 
		insert into w_esus_aval_elegibilidade(	nr_sequencia,          
							cd_estabelecimento, 
							dt_atualizacao, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							cd_profissional, 
							cd_cbo, 
							cd_pessoa_fisica, 
							nr_seq_sus_equipe, 
							dt_atendimento, 
							ie_origem_cidadao, 
							ie_con_ava_acamado, 
							ie_con_ava_domicilia, 
							ie_con_ava_ulc_ferid, 
							ie_con_ava_acom_nutr, 
							ie_con_ava_sonda_sng, 
							ie_con_ava_sonta_sne, 
							ie_con_ava_gastrosto, 
							ie_con_ava_colostomi, 
							ie_con_ava_cistostom, 
							ie_con_ava_sonda_svd, 
							ie_con_ava_acom_preo, 
							ie_con_ava_acom_poso, 
							ie_con_ava_adap_orte, 
							ie_con_ava_reab_domi, 
							ie_con_ava_cuid_onco, 
							ie_con_ava_nao_oncol, 
							ie_con_ava_oxige_dom, 
							ie_con_ava_traqueost, 
							ie_con_ava_hig_bronq, 
							ie_con_ava_sup_cpap, 
							ie_con_ava_sup_bipap, 
							ie_con_ava_dia_perit, 
							ie_con_ava_paracente, 
							ie_con_ava_med_paren, 
							cd_cid_principal, 
							cd_cid_secundario_1, 
							cd_cid_secundario_2, 
							ie_conclusao, 
							ie_con_dest_elegivel, 
							ie_con_inel_inst_cli, 
							ie_con_inel_nesc_pro, 
							ie_con_inel_out_moti, 
							ie_con_inel_aus_cuid, 
							ie_con_inel_cond_soc, 
							ie_cuidador, 
							nr_seq_lote_envio, 
							cd_uuid_original, 
							nr_seq_ficha, 
							cd_cns_paciente, 
							dt_nascimento_paciente, 
							ie_sexo_paciente, 
							cd_cns_profissional, 
							ie_raca_cor_pac, 
							nm_pessoa_fisica, 
							nm_social_pes_fis, 
							cd_munic_ibge_pf, 
							cd_nascionalidade, 
							nr_pis_pessoa_fisic, 
							ie_desconhece_mae, 
							ds_email_pes_fisic, 
							cd_tipo_logradouro, 
							nm_logradouro, 
							nr_logradouro, 
							ds_complemento_log, 
							ds_bairro, 
							cd_uf_logradouro, 
							cd_cep_logradouro, 
							nr_telefone_resid, 
							nr_telefone_refer, 
							ie_sem_numero_log, 
							nr_data_atendimento, 
							nr_data_nasc_pac, 
							ie_turno_atendimento, 
							cd_cns_cuidador, 
							nr_data_naturaliza, 
							nr_portaria_natura, 
							nr_data_ent_brasil, 
							nr_pais_nascimento, 
							cd_etnia, 
							nm_pai_pessoa_fisica, 
							ie_desconhece_pai, 
							ds_ponto_referencia, 
							cd_municipio_ibge, 
							cd_seg_profissional, 
							cd_seg_cbo, 
							nr_seg_seq_sus_equ, 
							cd_seg_cnes_unidade, 
							cd_cns_seg_profiss, 
							cd_cnes_unidade, 
							nm_mae_pessoa_fisica) 
					values (	nr_seq_exp_w, 
							cd_estabelecimento_w, 
							dt_atualizacao_w, 
							nm_usuario_w, 
							dt_atualizacao_nrec_w, 
							nm_usuario_nrec_w, 
							cd_profissional_w, 
							cd_cbo_w, 
							cd_pessoa_fisica_w, 
							nr_seq_sus_equipe_w, 
							dt_atendimento_w, 
							ie_origem_cidadao_w, 
							CASE WHEN ie_con_ava_acamado_w='S' THEN '1'  ELSE '' END , 
							CASE WHEN ie_con_ava_domicilia_w='S' THEN '2'  ELSE '' END , 
							CASE WHEN ie_con_ava_ulc_ferid_w='S' THEN '3'  ELSE '' END , 
							CASE WHEN ie_con_ava_acom_nutr_w='S' THEN '4'  ELSE '' END , 
							CASE WHEN ie_con_ava_sonda_sng_w='S' THEN '5'  ELSE '' END , 
							CASE WHEN ie_con_ava_sonta_sne_w='S' THEN '6'  ELSE '' END , 
							CASE WHEN ie_con_ava_gastrosto_w='S' THEN '7'  ELSE '' END , 
							CASE WHEN ie_con_ava_colostomi_w='S' THEN '8'  ELSE '' END , 
							CASE WHEN ie_con_ava_cistostom_w='S' THEN '9'  ELSE '' END , 
							CASE WHEN ie_con_ava_sonda_svd_w='S' THEN '10'  ELSE '' END , 
							CASE WHEN ie_con_ava_acom_preo_w='S' THEN '11'  ELSE '' END , 
							CASE WHEN ie_con_ava_acom_poso_w='S' THEN '12'  ELSE '' END , 
							CASE WHEN ie_con_ava_adap_orte_w='S' THEN '13'  ELSE '' END , 
							CASE WHEN ie_con_ava_reab_domi_w='S' THEN '14'  ELSE '' END , 
							CASE WHEN ie_con_ava_cuid_onco_w='S' THEN '15'  ELSE '' END , 
							CASE WHEN ie_con_ava_nao_oncol_w='S' THEN '16'  ELSE '' END , 
							CASE WHEN ie_con_ava_oxige_dom_w='S' THEN '17'  ELSE '' END , 
							CASE WHEN ie_con_ava_traqueost_w='S' THEN '18'  ELSE '' END , 
							CASE WHEN ie_con_ava_hig_bronq_w='S' THEN '19'  ELSE '' END , 
							CASE WHEN ie_con_ava_sup_cpap_w='S' THEN '20'  ELSE '' END , 
							CASE WHEN ie_con_ava_sup_bipap_w='S' THEN '21'  ELSE '' END , 
							CASE WHEN ie_con_ava_dia_perit_w='S' THEN '22'  ELSE '' END , 
							CASE WHEN ie_con_ava_paracente_w='S' THEN '23'  ELSE '' END , 
							CASE WHEN ie_con_ava_med_paren_w='S' THEN '24'  ELSE '' END , 
							cd_cid_principal_w, 
							cd_cid_secundario_1_w, 
							cd_cid_secundario_2_w, 
							ie_conclusao_w, 
							ie_con_dest_elegivel_w, 
							CASE WHEN ie_con_inel_inst_cli_w='S' THEN '1'  ELSE '' END , 
							CASE WHEN ie_con_inel_nesc_pro_w='S' THEN '2'  ELSE '' END , 
							CASE WHEN ie_con_inel_out_moti_w='S' THEN '3'  ELSE '' END , 
							CASE WHEN ie_con_inel_aus_cuid_w='S' THEN '4'  ELSE '' END , 
							CASE WHEN ie_con_inel_cond_soc_w='S' THEN '5'  ELSE '' END ,							 
							ie_cuidador_w, 
							nr_seq_lote_envio_w, 
							cd_uuid_original_w, 
							nr_sequencia_w, 
							substr(cd_cns_paciente_w,1,15), 
							dt_nascimento_paciente_w, 
							ie_sexo_paciente_w, 
							cd_cns_profissional_w, 
							ie_raca_cor_pac_w, 
							substr(nm_pessoa_fisica_w,1,70), 
							substr(nm_social_pes_fis_w,1,70), 
							cd_munic_ibge_pf_w, 
							cd_nacionalidade_w, 
							nr_pis_pessoa_fisic_w, 
							ie_desconhece_mae_w, 
							ds_email_pes_fisic_w, 
							lpad(cd_tipo_logradouro_w,3,'0'), 
							nm_logradouro_w, 
							nr_logradouro_w, 
							ds_complemento_log_w, 
							ds_bairro_w, 
							cd_uf_logradouro_w, 
							cd_cep_logradouro_w, 
							nr_telefone_resid_w, 
							nr_telefone_refer_w, 
							ie_sem_numero_log_w, 
							nr_data_atendimento_w, 
							nr_data_nasc_pac_w, 
							ie_turno_atendimento_w, 
							cd_cns_cuidador_w, 
							nr_data_naturaliza_w, 
							nr_portaria_natura_w, 
							nr_data_ent_brasil_w, 
							nr_pais_nascimento_w, 
							cd_etnia_w, 
							substr(nm_pai_pessoa_fisica_w,1,70), 
							ie_desconhece_pai_w, 
							ds_ponto_referencia_w, 
							cd_municipio_ibge_w, 
							cd_seg_profissional_w, 
							cd_seg_cbo_w, 
							nr_seg_seq_sus_equ_w, 
							cd_seg_cnes_unidade_w, 
							cd_cns_seg_profiss_w, 
							cd_cnes_unidade_w, 
							nm_mae_pessoa_fisica_w);
		end;
	end loop;
	end;
end loop;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_gerar_w_esus_aval_eleg ( nr_seq_lote_p esus_lote_envio.nr_sequencia%type, ie_tipo_lote_esus_p esus_lote_envio.ie_tipo_lote_esus%type, cd_cnes_estab_p estabelecimento.cd_cns%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

