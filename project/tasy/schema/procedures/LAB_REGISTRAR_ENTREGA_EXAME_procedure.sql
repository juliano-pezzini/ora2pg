-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_registrar_entrega_exame ( lista_seq_prescr_p text, /*lista_seq_prescr_p e uma lista sepada por espaco*/
 nr_prescricao_p bigint, cd_pessoa_fisica_p text, nm_pessoa_entrega_p text, ds_observacao_p text, dt_entrega_p timestamp, nm_usuario_p text) AS $body$
DECLARE

					
nr_seq_prescr_w		integer;
nr_seq_entrega_w	bigint;					

ieParametro334		varchar(1);
ieParameter374		varchar(1);

ie_cd_pessoa_fisica_obrig_w		varchar(1);
ie_nm_pessoa_entrega_obrig_w	varchar(1);
ie_ds_observacao_obrig_w		varchar(1);

c01 CURSOR FOR
SELECT	nr_sequencia
from	prescr_procedimento
where	nr_prescricao = nr_prescricao_p
and		((ieParameter374 = 'S' and ie_status_atend >= 35) or (obter_se_contido(nr_sequencia, replace(lista_seq_prescr_p, ' ', ',')) = 'S'));/*lista_seq_prescr_p e uma lista sepada por espaco*/
BEGIN
select  coalesce(max(obter_regra_atributo(obter_estabelecimento_ativo, obter_perfil_ativo, nm_usuario_p, 'LAB_ENTREGA_EXAME', 'CD_PESSOA_FISICA', 'O', '', 0, 0, 722)), 'N'),
		coalesce(max(obter_regra_atributo(obter_estabelecimento_ativo, obter_perfil_ativo, nm_usuario_p, 'LAB_ENTREGA_EXAME', 'NM_PESSOA_ENTREGA', 'O', '', 0, 0, 722)), 'N'),
		coalesce(max(obter_regra_atributo(obter_estabelecimento_ativo, obter_perfil_ativo, nm_usuario_p, 'LAB_ENTREGA_EXAME', 'DS_OBSERVACAO', 'O', '', 0, 0, 722)), 'N')
into STRICT	ie_cd_pessoa_fisica_obrig_w,
		ie_nm_pessoa_entrega_obrig_w,
		ie_ds_observacao_obrig_w
;

if ((ie_cd_pessoa_fisica_obrig_w = 'S') and (coalesce(cd_pessoa_fisica_p::text, '') = '')) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(332502, 'NM_CAMPO_P='||wheb_mensagem_pck.get_texto(332500));
elsif ((ie_nm_pessoa_entrega_obrig_w = 'S') and (coalesce(nm_pessoa_entrega_p::text, '') = '')) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(332502, 'NM_CAMPO_P='||wheb_mensagem_pck.get_texto(332501));
elsif ((ie_ds_observacao_obrig_w = 'S') and (coalesce(ds_observacao_p::text, '') = '')) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(332502, 'NM_CAMPO_P='||wheb_mensagem_pck.get_texto(144513));
end if;

ieParametro334	:= obter_valor_param_usuario(722, 334, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo);
ieParameter374	:= obter_valor_param_usuario(722, 374, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo);

open c01;
loop
fetch c01 into
	nr_seq_prescr_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	select 	nextval('lab_entrega_exame_seq')
	into STRICT	nr_seq_entrega_w
	;
	
	insert	into lab_entrega_exame(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_prescricao,
		nr_seq_prescr,
		cd_pessoa_fisica,
		nm_pessoa_entrega,
		ds_observacao,
		dt_entrega,
		ie_situacao)
	values (
		nr_seq_entrega_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_prescricao_p,
		nr_seq_prescr_w,
		cd_pessoa_fisica_p,
		nm_pessoa_entrega_p,
		ds_observacao_p,
		dt_entrega_p,
		'A');
	
	if (ieParametro334 = 'S') then
		update	prescr_procedimento
		set		ie_status_atend = 45
		where	nr_prescricao = nr_prescricao_p
		and		nr_sequencia = nr_seq_prescr_w
		and		ie_status_atend < 45;
	end if;
	
end loop;
close c01;		

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_registrar_entrega_exame ( lista_seq_prescr_p text,  nr_prescricao_p bigint, cd_pessoa_fisica_p text, nm_pessoa_entrega_p text, ds_observacao_p text, dt_entrega_p timestamp, nm_usuario_p text) FROM PUBLIC;

