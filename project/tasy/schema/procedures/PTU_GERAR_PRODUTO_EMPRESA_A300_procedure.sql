-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_produto_empresa_a300 ( nr_seq_mov_plano_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_mov_inicio_w			timestamp;
dt_mov_fim_w			timestamp;
ie_tipo_mov_w			varchar(2);
nr_seq_prestador_w		bigint;
cd_cgc_w			varchar(14);
cd_pessoa_fisica_w		varchar(10);
dt_cadastro_w			timestamp;
dt_exclusao_w			timestamp;
nr_seq_inter_empresa_w		bigint;
ie_tipo_pessoa_w		smallint;
ds_razao_social_w		varchar(40);
nm_fantasia_w			varchar(18);
cd_cgc_cpf_w			varchar(15);
nr_inscricao_estadual_w		varchar(20);
ds_endereco_w			varchar(100);
cd_cep_w			varchar(8);
cd_empresa_origem_w		bigint;
ds_complemento_w		varchar(20);
ds_bairro_w			varchar(30);
ds_municipio_w			varchar(30);
sg_estado_w			pessoa_juridica.sg_estado%type;
nr_ddd_telefone_w		varchar(4);
nr_telefone_w			varchar(8);
nr_fax_w			varchar(8);
cd_municipio_ibge_w		varchar(7);
nr_seq_plano_w			bigint;
cd_empresa_destino_w		bigint;
nr_seq_lote_w			bigint;
cd_estabelecimento_w		bigint;
ie_inseri_reg_w			varchar(1);
cd_empresa_w			varchar(15);
ie_tipo_natureza_w		smallint;
nr_seq_classificacao_w		bigint;
qt_regras_exececoes_w		bigint;
qt_registros_w			bigint;
nr_endereco_w			varchar(15);
ie_gerar_sca_nao_liberado_w	pls_parametros.ie_gerar_sca_nao_liberado%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pessoa_juridica		d,
		pls_plano_fornecedor	c,
		pls_plano		b,
		pls_prestador		a
	where	c.nr_seq_plano		= b.nr_sequencia
	and	c.nr_seq_prestador	= a.nr_sequencia
	and	d.cd_cgc		= a.cd_cgc
	and	d.cd_operadora_empresa	= cd_empresa_destino_w
	and	b.nr_seq_classificacao	= nr_seq_classificacao_w
	and	b.ie_tipo_operacao	= 'A'
	group by a.nr_sequencia;


BEGIN

select	dt_mov_inicio,
	dt_mov_fim,
	ie_tipo_mov,
	cd_unimed_destino,
	nr_seq_lote
into STRICT	dt_mov_inicio_w,
	dt_mov_fim_w,
	ie_tipo_mov_w,
	cd_empresa_destino_w,
	nr_seq_lote_w
from	ptu_movimentacao_produto
where	nr_sequencia	= nr_seq_mov_plano_p;

select	cd_estabelecimento,
	nr_seq_classificacao
into STRICT	cd_estabelecimento_w,
	nr_seq_classificacao_w
from	ptu_mov_produto_lote
where	nr_sequencia	= nr_seq_lote_w;

select	coalesce(max(ie_gerar_sca_nao_liberado), 'N')
into STRICT	ie_gerar_sca_nao_liberado_w
from	pls_parametros
where	cd_estabelecimento = cd_estabelecimento_w;

select	count(1)
into STRICT	qt_regras_exececoes_w
from	ptu_regra_excessao_a300
where	nr_seq_classificacao	= nr_seq_classificacao_w
and	ie_situacao		= 'A';

open C01;
loop
fetch C01 into
	nr_seq_prestador_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	max(CASE WHEN ie_tipo_contratacao='CA' THEN 4 WHEN ie_tipo_contratacao='CE' THEN 3 WHEN ie_tipo_contratacao='I' THEN 2  ELSE 5 END )
	into STRICT	ie_tipo_natureza_w
	from	pls_plano_fornecedor	b,
		pls_plano		a
	where	b.nr_seq_plano		= a.nr_sequencia
	and	b.nr_seq_prestador	= nr_seq_prestador_w;

	nr_inscricao_estadual_w	:= '';

	select	cd_cgc,
		cd_pessoa_fisica,
		dt_cadastro,
		null
	into STRICT	cd_cgc_w,
		cd_pessoa_fisica_w,
		dt_cadastro_w,
		dt_exclusao_w
	from	pls_prestador
	where	nr_sequencia	= nr_seq_prestador_w;

	if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
		begin
		select	1,
			substr(ds_razao_social,1,40),
			substr(nm_fantasia,1,18),
			somente_numero(nr_inscricao_estadual),
			substr(ds_endereco,1,40),
			substr(cd_cep,1,8),
			substr(ds_complemento,1,20),
			substr(ds_bairro,1,30),
			substr(ds_municipio,1,30),
			sg_estado,
			nr_ddd_telefone,
			substr(somente_numero(nr_telefone),1,8),
			substr(somente_numero(nr_fax),1,8),
			cd_municipio_ibge || Calcula_Digito('MODULO10',substr(cd_municipio_ibge,1,10)),
			'S',
			nr_endereco
		into STRICT	ie_tipo_pessoa_w,
			ds_razao_social_w,
			nm_fantasia_w,
			nr_inscricao_estadual_w,
			ds_endereco_w,
			cd_cep_w,
			ds_complemento_w,
			ds_bairro_w,
			ds_municipio_w,
			sg_estado_w,
			nr_ddd_telefone_w,
			nr_telefone_w,
			nr_fax_w,
			cd_municipio_ibge_w,
			ie_inseri_reg_w,
			nr_endereco_w
		from	pessoa_juridica
		where	cd_cgc	= cd_cgc_w;
		exception
		when others then
			ie_inseri_reg_w := 'N';
		end;

		cd_cgc_cpf_w	:= cd_cgc_w;

	elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		begin
		select	2,
			a.nr_cpf,
			substr((b.ds_endereco),1,40),
			substr((b.cd_cep),1,8),
			substr((b.ds_complemento),1,20),
			substr((b.ds_bairro),1,30),
			substr((b.ds_municipio),1,30),
			b.sg_estado,
			b.nr_ddd_telefone,
			substr(somente_numero(b.nr_telefone),1,8),
			substr(somente_numero(b.ds_fax),1,8),
			b.cd_municipio_ibge || Calcula_Digito('MODULO10',substr(obter_compl_pf(b.cd_municipio_ibge,1,'CDM'),1,10)),
			a.nm_pessoa_fisica,
			'Unimed',
			'S',
			coalesce(b.nr_endereco, b.ds_compl_end)
		into STRICT	ie_tipo_pessoa_w,
			cd_cgc_cpf_w,
			ds_endereco_w,
			cd_cep_w,
			ds_complemento_w,
			ds_bairro_w,
			ds_municipio_w,
			sg_estado_w,
			nr_ddd_telefone_w,
			nr_telefone_w,
			nr_fax_w,
			cd_municipio_ibge_w,
			ds_razao_social_w,
			nm_fantasia_w,
			ie_inseri_reg_w,
			nr_endereco_w
		from	compl_pessoa_fisica	b,
			pessoa_fisica		a
		where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w
		and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
		and	b.ie_tipo_complemento	= 1;
		exception
		when others then
			ie_inseri_reg_w := 'N';
		end;
	end if;

	if (ie_inseri_reg_w	<> 'N') then
		ds_razao_social_w	:= replace(replace(ds_razao_social_w,chr(231),'c'),chr(199),'C');
		nm_fantasia_w		:= replace(replace(nm_fantasia_w,chr(231),'c'),chr(199),'C');
		nm_fantasia_w		:= replace(nm_fantasia_w,'/',' ');
		nm_fantasia_w		:= elimina_acentuacao(nm_fantasia_w);
		nm_fantasia_w		:= elimina_caractere_especial(nm_fantasia_w);
		nm_fantasia_w		:= replace(replace(nm_fantasia_w,chr(231),'c'),chr(199),'C');

		ds_municipio_w	:= elimina_acentos(ds_municipio_w);
		ds_municipio_w	:= replace(replace(ds_municipio_w,chr(231),'c'),chr(199),'C');

		ds_endereco_w	:= elimina_caractere_especial(ds_endereco_w);
		ds_endereco_w	:= replace(replace(ds_endereco_w,chr(231),'c'),chr(199),'C');

		ds_bairro_w	:= replace(ds_bairro_w,'/',' ');
		ds_bairro_w	:= elimina_acentuacao(ds_bairro_w);
		ds_bairro_w	:= elimina_caractere_especial(ds_bairro_w);
		ds_bairro_w	:= replace(replace(ds_bairro_w,chr(231),'c'),chr(199),'C');

		nr_ddd_telefone_w := replace(nr_ddd_telefone_w,' ','');

		select	nextval('ptu_mov_produto_empresa_seq')
		into STRICT	nr_seq_inter_empresa_w
		;

		begin
		insert into ptu_mov_produto_empresa(	nr_sequencia,		nr_seq_mov_produto, 	ds_razao_social,
				nm_empr_abrev,		ie_tipo_pessoa, 	cd_cgc_cpf,
				ds_endereco,		cd_cep, 		cd_empresa_origem,
				dt_atualizacao,		nm_usuario, 		dt_atualizacao_nrec,
				nm_usuario_nrec,	cd_filial, 		nr_insc_estadual,
				ds_complemento,		ds_bairro, 		nm_cidade,
				sg_uf,			nr_ddd, 		nr_telefone,
				nr_fax, 		dt_inclusao, 		dt_exclusao,
				cd_municipio_ibge, 	nr_seq_contrato, 	ie_natureza_contratacao,
				nr_endereco,		nr_seq_prestador)
		values (	nr_seq_inter_empresa_w, nr_seq_mov_plano_p, 	ds_razao_social_w,
				nm_fantasia_w, 		ie_tipo_pessoa_w, 	cd_cgc_cpf_w,
				ds_endereco_w, 		cd_cep_w, 		cd_empresa_destino_w,
				clock_timestamp(), 		nm_usuario_p, 		clock_timestamp(),
				nm_usuario_p, 		'', 			nr_inscricao_estadual_w,
				ds_complemento_w, 	ds_bairro_w, 		ds_municipio_w,
				sg_estado_w, 		nr_ddd_telefone_w, 	nr_telefone_w,
				nr_fax_w, 		dt_cadastro_w, 		dt_exclusao_w,
				cd_municipio_ibge_w, 	null, 			ie_tipo_natureza_w,
				nr_endereco_w,		nr_seq_prestador_w);
		exception
		when others then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(191658,'NM_EMPRESA='|| substr(obter_nome_pf_pj(cd_pessoa_fisica_w,cd_cgc_w),1,255));
		end;
		CALL ptu_gerar_produto_benef_a300(nr_seq_inter_empresa_w,ie_gerar_sca_nao_liberado_w,nm_usuario_p);

		if (qt_regras_exececoes_w > 0) then
			CALL ptu_gerar_regras_exece_a300(nr_seq_lote_w,nr_seq_inter_empresa_w,nr_seq_classificacao_w,cd_estabelecimento_w,nm_usuario_p);
		end if;

		select	count(1)
		into STRICT	qt_registros_w
		from	ptu_mov_produto_benef
		where	nr_seq_empresa	= nr_seq_inter_empresa_w;

		if (qt_registros_w = 0) then
			delete	FROM ptu_mov_produto_empresa
			where	nr_sequencia	= nr_seq_inter_empresa_w;
		end if;


	end if;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_produto_empresa_a300 ( nr_seq_mov_plano_p bigint, nm_usuario_p text) FROM PUBLIC;

