-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE iniciar_finalizar_atend_senha ( nr_sequencia_p bigint, ie_acao_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_commit_p text default 'S', cd_justificativa_tempo_atend_p text default null) AS $body$
DECLARE


/*
ie_acao_p

I	-	Iniciar
F	- 	Finalizar
D	-	Desfazer fim atendimento
DIF	-  	Desfazer incio/ fim atendimento
*/
nm_usuario_chamada_w 		varchar(20);
ie_consiste_usuario_w		varchar(2);

BEGIN

select 	coalesce(max(nm_usuario_chamada), 'XPTO')
into STRICT	nm_usuario_chamada_w
from	paciente_senha_fila
where	(dt_primeira_chamada IS NOT NULL AND dt_primeira_chamada::text <> '')
and	nr_sequencia = nr_sequencia_p;

ie_consiste_usuario_w := Obter_Param_Usuario(10021, 61, Obter_perfil_Ativo, coalesce(nm_usuario_p,Obter_Usuario_Ativo), cd_estabelecimento_p, ie_consiste_usuario_w);

if 	((nm_usuario_chamada_w <> coalesce(nm_usuario_p,Obter_Usuario_Ativo)) and (nm_usuario_chamada_w <> 'XPTO') and
	 ((ie_consiste_usuario_w = 'S') or
	 ((ie_consiste_usuario_w = 'M') and (obter_se_usuario_medico(nm_usuario_chamada_w) = 'S') and (obter_se_usuario_medico(coalesce(nm_usuario_p,Obter_Usuario_Ativo)) = 'S')))) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(219253, 'NM_USUARIO_CHAMADA= ' || nm_usuario_chamada_w);
end if;

if (upper(ie_acao_p) = 'I') then
	begin

	update	paciente_senha_fila
	set	dt_inicio_atendimento	=	clock_timestamp(),
		nm_usuario		=	coalesce(nm_usuario_p,Obter_Usuario_Ativo),
		dt_atualizacao		=	clock_timestamp()
	where	nr_sequencia 		=	nr_sequencia_p;

	end;
elsif (upper(ie_acao_p) = 'D') then
	begin
	update	paciente_senha_fila
	set	dt_fim_atendimento	 = NULL,
		nm_usuario		=	coalesce(nm_usuario_p,Obter_Usuario_Ativo),
		dt_atualizacao		=	clock_timestamp()
	where	nr_sequencia 		=	nr_sequencia_p;
	end;
elsif (upper(ie_acao_p) = 'DIF') then
	begin
	update	paciente_senha_fila
	set	dt_inicio_atendimento	 = NULL,
		dt_fim_atendimento	 = NULL,
		nm_usuario		=	coalesce(nm_usuario_p,Obter_Usuario_Ativo),
		dt_atualizacao		=	clock_timestamp()
	where	nr_sequencia 		=	nr_sequencia_p;
	end;
else
	begin

	if (cd_justificativa_tempo_atend_p IS NOT NULL AND cd_justificativa_tempo_atend_p::text <> '') then
		-- definir na tabela movimentacao_senha_fila o motivo do tempo de atendimento ter sido superior ao definido para a fila
		update	movimentacao_senha_fila
		set	cd_justificativa_tempo_atend	= cd_justificativa_tempo_atend_p
		where	nr_sequencia 			= (	SELECT	max(nr_sequencia)
								from 	movimentacao_senha_fila
								where	nr_seq_pac_senha_fila = nr_sequencia_p);
	end if;

	update	paciente_senha_fila
	set	dt_fim_atendimento	=	clock_timestamp(),
		nm_usuario		=	coalesce(nm_usuario_p,Obter_Usuario_Ativo),
		dt_atualizacao		=	clock_timestamp()
	where	nr_sequencia 		=	nr_sequencia_p;

	end;
end if;


if (ie_commit_p = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE iniciar_finalizar_atend_senha ( nr_sequencia_p bigint, ie_acao_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_commit_p text default 'S', cd_justificativa_tempo_atend_p text default null) FROM PUBLIC;

