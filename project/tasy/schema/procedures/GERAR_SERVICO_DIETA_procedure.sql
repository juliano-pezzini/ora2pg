-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_servico_dieta ( nr_prescricao_p bigint, nr_seq_dieta_p bigint, nr_seq_consistencia_p bigint, nr_seq_servico_p bigint, ie_acao_p text, dt_inclusao_p timestamp, nm_usuario_p text, ie_zona_cinza_p text) AS $body$
DECLARE

/* 
ie_acao_p 
I - Incluir 
A - Atualizar 
D - Deletar 
L - Limpar gerados sem dieta 
*/
 
nr_sequencia_w			bigint;
ds_horario_w			varchar(5);
cd_setor_atendimento_w		integer;
nr_horas_validade_w		integer;
dt_horario_w			timestamp;
dt_horario_ww			timestamp;
dt_inicio_prescr_w		timestamp;
dt_validade_prescr_w		timestamp;
dt_fim_zona_cinza_w		timestamp;
dt_inicio_prescr_dia_w		timestamp;
				
c01 CURSOR FOR 
SELECT	distinct substr(ds_horarios,1,5) 
from	nut_servico_horario 
where	nr_seq_servico = nr_seq_servico_p 
and	(ds_horarios IS NOT NULL AND ds_horarios::text <> '') 
and	((cd_setor_atendimento = cd_setor_atendimento_w) or (coalesce(cd_setor_atendimento::text, '') = ''));
				

BEGIN 
 
if (ie_acao_p = 'I') then 
 
	select	coalesce(max(cd_setor_atendimento),max(obter_setor_atendimento(nr_atendimento))), 
		max(nr_horas_validade), 
		max(dt_inicio_prescr), 
		max(dt_validade_prescr) 
	into STRICT	cd_setor_atendimento_w, 
		nr_horas_validade_w, 
		dt_inicio_prescr_w, 
		dt_validade_prescr_w 
	from	prescr_medica 
	where	nr_prescricao = nr_prescricao_p;
 
	if (nr_horas_validade_w	> 24) then 
		dt_fim_zona_cinza_w	:= (dt_validade_prescr_w - 1);
		dt_inicio_prescr_dia_w	:= dt_fim_zona_cinza_w + 1/1440;
	else 
		dt_inicio_prescr_dia_w	:= dt_inicio_prescr_w;
	end if;	
	 
	open C01;
	loop 
	fetch C01 into	 
		ds_horario_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
 
		dt_horario_w	:= to_date(to_char(dt_inicio_prescr_w,'dd/mm/yyyy')||' '||ds_horario_w||':00','dd/mm/yyyy hh24:mi:ss');
		 
		if (dt_inicio_prescr_w	> dt_horario_w) then 
			dt_horario_w := dt_horario_w + 1;
		end if;
 
		dt_horario_ww	:= dt_horario_w + 1;		
		 
		if	((ie_zona_cinza_p	= 'S' AND dt_horario_w		between dt_inicio_prescr_w and dt_fim_zona_cinza_w) or 
			 (ie_zona_cinza_p	= 'N' AND dt_horario_w		between dt_inicio_prescr_dia_w and dt_validade_prescr_w)) then 
 
			select	nextval('rep_servico_seq') 
			into STRICT	nr_sequencia_w 
			;
 
			insert	into rep_servico(	nr_sequencia, 
							dt_atualizacao, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							nr_seq_servico, 
							nr_seq_registro, 
							nr_seq_dieta, 
							nr_prescricao, 
							ds_horario, 
							dt_horario, 
							ie_zona_cinza) 
				values (nr_sequencia_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					nr_seq_servico_p, 
					nr_seq_consistencia_p, 
					null, 
					nr_prescricao_p, 
					ds_horario_w, 
					dt_horario_w, 
					ie_zona_cinza_p);			
			 
		end if;
 
		if (ie_zona_cinza_p	= 'N') and (dt_horario_ww		between dt_inicio_prescr_dia_w and dt_validade_prescr_w) and (nr_horas_validade_w	> 24) then 
			 
			select	nextval('rep_servico_seq') 
			into STRICT	nr_sequencia_w 
			;
 
			insert	into rep_servico(	nr_sequencia, 
							dt_atualizacao, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							nr_seq_servico, 
							nr_seq_registro, 
							nr_seq_dieta, 
							nr_prescricao, 
							ds_horario, 
							dt_horario, 
							ie_zona_cinza) 
				values (nr_sequencia_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					nr_seq_servico_p, 
					nr_seq_consistencia_p, 
					null, 
					nr_prescricao_p, 
					ds_horario_w, 
					dt_horario_ww, 
					ie_zona_cinza_p);
			 
		end if;			
	 
		end;
	end loop;
	close C01;
 
elsif (ie_acao_p = 'A') then 
 
	update	rep_servico 
	set	nr_seq_dieta	= nr_seq_dieta_p 
	where	nr_prescricao	= nr_prescricao_p 
	and	nm_usuario	= nm_usuario_p 
	and	nr_seq_registro = nr_seq_consistencia_p 
	and	coalesce(nr_seq_dieta::text, '') = '';
 
elsif (ie_acao_p = 'D') then 
 
	delete	FROM rep_servico 
	where	nr_prescricao	= nr_prescricao_p 
	and	nm_usuario	= nm_usuario_p 
	and	nr_seq_registro = nr_seq_consistencia_p 
	and	dt_atualizacao_nrec between dt_inclusao_p and clock_timestamp();
	 
elsif (ie_acao_p = 'L') then 
 
	delete	FROM rep_servico 
	where	nr_prescricao	= nr_prescricao_p 
	and	nm_usuario	= nm_usuario_p 
	and	coalesce(nr_seq_dieta::text, '') = '';
 
end if;			
			 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_servico_dieta ( nr_prescricao_p bigint, nr_seq_dieta_p bigint, nr_seq_consistencia_p bigint, nr_seq_servico_p bigint, ie_acao_p text, dt_inclusao_p timestamp, nm_usuario_p text, ie_zona_cinza_p text) FROM PUBLIC;

