-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_dados_trib_tit_pagar ( cd_tributo_p bigint, cd_estabelecimento_p bigint, cd_cgc_titulo_p text, cd_pf_titulo_p text, cd_beneficiario_p INOUT text, pr_aliquota_p INOUT bigint, cd_cond_pagto_p INOUT bigint, cd_conta_financ_p INOUT bigint, nr_seq_trans_reg_p INOUT bigint, nr_seq_trans_baixa_p INOUT bigint, vl_minimo_base_p INOUT bigint, vl_minimo_tributo_p INOUT bigint, ie_acumulativo_p INOUT text, vl_teto_base_p INOUT bigint, vl_desc_dependente_p INOUT bigint, cd_darf_p INOUT text, dt_referencia_p timestamp, cd_variacao_p INOUT text, ie_periodicidade_p INOUT text, ie_origem_p text, cd_natureza_operacao_p bigint, cd_tipo_servico_p text, cd_material_p bigint, ie_tipo_contratacao_p text, nr_seq_tipo_repasse_p bigint, nr_seq_regra_p INOUT bigint, cd_operacao_nf_p bigint, qt_trib_pago_outro_p bigint, nr_seq_classe_tp_p INOUT bigint, cd_tipo_baixa_neg_p INOUT bigint, vl_base_p bigint, ie_producao_medica_p text, nr_seq_classe_p bigint, ie_origem_titulo_p text, nr_seq_tipo_prestador_p bigint, nr_seq_class_prestador_p bigint) AS $body$
DECLARE


/* ie_origem_p
identificar de onde o tributo esta sendo gerado

'R' - Repasse
'M' - Manual
'N' - Nota fiscal
'AT' - Acompanhamento de tributo
*/
cd_beneficiario_w		varchar(255)	:= null;
cd_variacao_w			varchar(255)	:= null;
ie_periodicidade_w		varchar(255)	:= null;
ie_acumulativo_w		varchar(255);
cd_darf_w			varchar(255);
cd_municipio_ibge_w		varchar(255);
ie_filantropia_w		varchar(3)	:= null;
nr_seq_regra_w			bigint;
cd_tipo_pessoa_w		bigint;
pr_aliquota_w			double precision	:= null;
vl_minimo_base_w		double precision	:= 0;
vl_minimo_tributo_w		double precision	:= 0;
vl_teto_base_calculo_w		double precision	:= 0;
vl_desc_dependente_w		double precision	:= 0;
cd_cond_pagto_w			bigint	:= null;
cd_empresa_w			bigint	:= null;
cd_conta_financ_w		bigint	:= null;
nr_seq_trans_reg_w		bigint	:= null;
nr_seq_trans_baixa_w		bigint	:= null;
nr_seq_trans_reg_rep_w		bigint	:= null;
nr_seq_trans_baixa_rep_w	bigint	:= null;
nr_seq_classe_tp_w		bigint;
nr_seq_cnae_w			bigint;
cd_tipo_baixa_neg_w		integer;
nr_seq_nat_juridica_w		bigint;
ie_tipo_tributacao_w		varchar(255);
ie_tipo_trib_municipal_w	varchar(255);
sg_estado_w			varchar(15);
ie_buscar_regra_cp_w		varchar(1);
ie_regra_pf_sobre_cp_w		varchar(1);
cd_retencao_w			tributo.cd_retencao%type;
ie_regime_iva_w	  		pessoa_juridica.ie_regime_iva%type;
ie_fiscales_w     		pj_tipo_tributacao_hist.ie_tipo_tributacao%type;

c01 CURSOR FOR
	SELECT	cd_beneficiario,
		pr_aliquota,
		cd_cond_pagto,
		cd_conta_financ,
		nr_seq_trans_reg,
		nr_seq_trans_baixa,
		vl_minimo,
		vl_minimo_tributo,
		ie_acumulativo,
		vl_teto_base_calculo,
		vl_desc_dependente,
		cd_darf,
		nr_seq_trans_reg_rep,
		nr_seq_trans_baixa_rep,
		nr_sequencia,
		nr_seq_classe_tp,
		cd_tipo_baixa_neg
	from	tributo_conta_pagar
	where	coalesce(nr_seq_classe, coalesce(nr_seq_classe_p,0))		= coalesce(nr_seq_classe_p,0)
	and	coalesce(ie_origem_titulo, coalesce(ie_origem_titulo_p,'X'))	= coalesce(ie_origem_titulo_p,'X')
	and (coalesce(vl_base_inicial::text, '') = '' or coalesce(vl_base_p,vl_base_inicial) >= vl_base_inicial)
	and (coalesce(vl_base_final::text, '') = '' or coalesce(vl_base_p,vl_base_final) <= vl_base_final)
	and	cd_tributo					= cd_tributo_p
	and (coalesce(cd_estabelecimento, cd_estabelecimento_p)	= cd_estabelecimento_p)
	and	cd_empresa					= cd_empresa_w
	and	PKG_DATE_UTILS.start_of(coalesce(dt_referencia_p, clock_timestamp()), 'dd',0) between PKG_DATE_UTILS.start_of(coalesce(dt_inicio_vigencia, coalesce(dt_referencia_p, clock_timestamp())), 'dd',0) and
							           PKG_DATE_UTILS.start_of(coalesce(dt_fim_vigencia, coalesce(dt_referencia_p, clock_timestamp())), 'dd',0)
	and	(((coalesce(cd_pessoa_juridica::text, '') = '') and (coalesce(cd_pessoa_fisica::text, '') = '')) or 
		 ((cd_pessoa_juridica = cd_cgc_titulo_p) and (coalesce(cd_pessoa_fisica::text, '') = '')) or
		 ((cd_pessoa_fisica = cd_pf_titulo_p) and (coalesce(cd_pessoa_juridica::text, '') = '')))
	and	((coalesce(ie_tipo_pessoa, 'A') = 'A') or
		 ((coalesce(ie_tipo_pessoa, 'A') = 'F') and (cd_pf_titulo_p IS NOT NULL AND cd_pf_titulo_p::text <> '')) or
		 ((coalesce(ie_tipo_pessoa, 'A') = 'J') and (cd_cgc_titulo_p IS NOT NULL AND cd_cgc_titulo_p::text <> '')))
	and	((coalesce(cd_natureza_operacao::text, '') = '') or (cd_natureza_operacao = cd_natureza_operacao_p))
	and	((coalesce(nr_seq_tipo_repasse::text, '') = '') or (nr_seq_tipo_repasse = nr_seq_tipo_repasse_p))
	and	((coalesce(cd_tipo_servico::text, '') = '') or (cd_tipo_servico = cd_tipo_servico_p))
	and	coalesce(cd_municipio_ibge, coalesce(cd_municipio_ibge_w, 'X')) 	= coalesce(cd_municipio_ibge_w, 'X')
	and	((coalesce(cd_material_p, 0) = 0 and coalesce(ie_titulo_sem_material, 'N') = 'S') or obter_se_estrutura_mat(cd_grupo_material, cd_subgrupo_material, cd_classe_material, cd_material, cd_material_p, 'S')	= 'S')
	and	((coalesce(ie_tipo_contratacao::text, '') = '') or (ie_tipo_contratacao 	= coalesce(ie_tipo_contratacao_p,'S')))
	and (coalesce(cd_operacao_nf::text, '') = '' or cd_operacao_nf 		= cd_operacao_nf_p)
	and	coalesce(cd_tipo_pessoa_jur, coalesce(cd_tipo_pessoa_w, 0)) 	= coalesce(cd_tipo_pessoa_w, 0)
	and	coalesce(nr_seq_nat_juridica, coalesce(nr_Seq_nat_juridica_w, 0))	= coalesce(nr_Seq_nat_juridica_w, 0)
	and	coalesce(nr_seq_cnae, coalesce(nr_seq_cnae_w, 0)) 		= coalesce(nr_seq_cnae_w, 0)
	and coalesce(ie_tipo_tributacao, coalesce(ie_tipo_tributacao_w, 'X')) = coalesce(ie_tipo_tributacao_w, 'X')
	and	coalesce(ie_tipo_trib_municipal, coalesce(ie_tipo_trib_municipal_w, '0'))	= coalesce(ie_tipo_trib_municipal_w, '0')
	and  	COALESCE(ie_regime_iva, ie_regime_iva_w, '0') = COALESCE(ie_regime_iva_w, '0')
	and	((coalesce(ie_fiscales::text, '') = '') or (OBTER_PJ_TRIBUTACAO_VIGENTE(cd_cgc_titulo_p,ie_fiscales) = 'S'))
	and	((coalesce(ie_producao_medica,'A')	= ie_producao_medica_p) or (coalesce(ie_producao_medica,'A') = 'A'))
	and	((coalesce(ie_trib_pago, 'T') = 'T')
		or ((coalesce(ie_trib_pago, 'T') = 'P') and (coalesce(qt_trib_pago_outro_p,0) > 0))
		or ((coalesce(ie_trib_pago, 'T') = 'N') and (coalesce(qt_trib_pago_outro_p,0) = 0)))
	and	coalesce(sg_estado_w,'X') = coalesce(sg_estado,coalesce(sg_estado_w,'X'))
	and (coalesce(nr_seq_tipo_prestador::text, '') = '' or nr_seq_tipo_prestador	= nr_seq_tipo_prestador_p)
	and (coalesce(nr_seq_class_prestador::text, '') = '' or nr_seq_class_prestador = nr_seq_class_prestador_p)
	and (coalesce(ie_acomp_trib, 'N') = 'N' or (coalesce(ie_acomp_trib, 'N') = 'S' and coalesce(ie_origem_p, 'XX') = 'AT'))
	order by
		coalesce(cd_estabelecimento, 0),
		coalesce(cd_pessoa_fisica,' '),
		coalesce(cd_pessoa_juridica,' '),
		coalesce(ie_tipo_contratacao,' '),
		coalesce(cd_natureza_operacao, 0),
		coalesce(nr_seq_cnae, 0),
		coalesce(cd_material, 0),
		coalesce(cd_classe_material,0),
		coalesce(cd_subgrupo_material, 0),
		coalesce(cd_grupo_material, 0),
		coalesce(cd_municipio_ibge,'0'),
		coalesce(cd_tipo_pessoa_jur,0),
		coalesce(nr_seq_tipo_repasse,0),
		coalesce(cd_operacao_nf,0),
		coalesce(nr_seq_classe_tp,0),
		coalesce(ie_tipo_tributacao,'X'),
		coalesce(ie_origem_titulo,0),
		coalesce(nr_seq_tipo_prestador,0),
		coalesce(nr_seq_class_prestador,0),
		coalesce(ie_tipo_trib_municipal,' ');

C02 CURSOR FOR
	SELECT	a.ie_periodicidade,
		a.cd_variacao
	from	tributo_dctf a
	where	a.cd_tributo	= cd_tributo_p
	and	PKG_DATE_UTILS.start_of(a.dt_inicio_vigencia,'dd',0) =	(SELECT	max(PKG_DATE_UTILS.start_of(dt_inicio_vigencia,'dd',0))
							from	tributo_dctf x
							where	PKG_DATE_UTILS.start_of(dt_inicio_vigencia,'dd',0) <= PKG_DATE_UTILS.start_of(dt_referencia_p,'dd',0)
							and	x.cd_tributo	= a.cd_tributo);

C03 CURSOR FOR
	SELECT	a.ie_isencao_tributaria
	from	pessoa_juridica_inf_trib a
	where	a.cd_cgc	= cd_cgc_titulo_p
	and	PKG_DATE_UTILS.start_of(coalesce(dt_referencia_p, clock_timestamp()), 'dd',0) between PKG_DATE_UTILS.start_of(coalesce(dt_inicio_vigencia, coalesce(dt_referencia_p, clock_timestamp())), 'dd',0) and
							           PKG_DATE_UTILS.start_of(coalesce(dt_fim_vigencia, coalesce(dt_referencia_p, clock_timestamp())), 'dd',0);


BEGIN
select	max(cd_tipo_pessoa),
	max(nr_seq_cnae),
	max(nr_seq_nat_juridica),
	max(ie_tipo_tributacao),
	max(ie_tipo_trib_municipal),
	max(sg_estado),
	max(ie_regime_iva)
into STRICT	cd_tipo_pessoa_w,
	nr_seq_cnae_w,
	nr_seq_nat_juridica_w,
	ie_tipo_tributacao_w,
	ie_tipo_trib_municipal_w,
	sg_estado_w,
	ie_regime_iva_w
from	pessoa_juridica
where	cd_cgc	= cd_cgc_titulo_p;

select	max(cd_empresa)
into STRICT	cd_empresa_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_p;

if (cd_pf_titulo_p IS NOT NULL AND cd_pf_titulo_p::text <> '') or (cd_cgc_titulo_p IS NOT NULL AND cd_cgc_titulo_p::text <> '') then
	cd_municipio_ibge_w	:= obter_dados_pf_pj(cd_pf_titulo_p, cd_cgc_titulo_p, 'CDM');
end if;

if (cd_cgc_titulo_p IS NOT NULL AND cd_cgc_titulo_p::text <> '') then
	open C03;
	loop
	fetch C03 into	
		ie_filantropia_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		null;
		end;
	end loop;
	close C03;
end if;

ie_buscar_regra_cp_w	:= 'S';

select	coalesce(max(ie_regra_pf_sobre_cp),'N'),
	coalesce(max(cd_retencao),'')
into STRICT	ie_regra_pf_sobre_cp_w,
	cd_retencao_w
from	tributo
where	cd_tributo = cd_tributo_p;

if (ie_regra_pf_sobre_cp_w = 'S')	then
	begin
	select	'N'
	into STRICT	ie_buscar_regra_cp_w
	from	pessoa_fisica_trib b,
		tributo a
	where	b.cd_tributo 	= a.cd_tributo
	and	b.cd_pessoa_fisica 	= cd_pf_titulo_p
	and	a.cd_tributo	= cd_tributo_p
	and	dt_referencia_p between dt_inicio_vigencia and dt_fim_vigencia  LIMIT 1;	
	exception
	when others then
		ie_buscar_regra_cp_w := 'S';
	end;
end if;

if (ie_buscar_regra_cp_w = 'S') then
	begin
	open c01;
	loop
	fetch c01 into
		cd_beneficiario_w,
		pr_aliquota_w,
		cd_cond_pagto_w,
		cd_conta_financ_w,
		nr_seq_trans_reg_w,
		nr_seq_trans_baixa_w,
		vl_minimo_base_w,
		vl_minimo_tributo_w,
		ie_acumulativo_w,

		vl_teto_base_calculo_w,
		vl_desc_dependente_w,
		cd_darf_w,
		nr_seq_trans_reg_rep_w,
		nr_seq_trans_baixa_rep_w,
		nr_seq_regra_w,
		nr_seq_classe_tp_w,
		cd_tipo_baixa_neg_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		cd_beneficiario_p		:= cd_beneficiario_w;
		pr_aliquota_p		:= pr_aliquota_w;
		cd_cond_pagto_p		:= cd_cond_pagto_w;
		cd_conta_financ_p		:= cd_conta_financ_w;

		nr_seq_trans_reg_p		:= nr_seq_trans_reg_w;
		nr_seq_trans_baixa_p	:= nr_seq_trans_baixa_w;

		nr_seq_regra_p		:= nr_seq_regra_w;

		/* francisco - os 164498 - 23/09/2009 -  
		  se a origem for repasse e os campos estiverem preenchidos, usa essas transacoes */
		if (ie_origem_p = 'R') then
			if (nr_seq_trans_reg_rep_w IS NOT NULL AND nr_seq_trans_reg_rep_w::text <> '') then
				nr_seq_trans_reg_p	:=	nr_seq_trans_reg_rep_w;
			end if;

			if (nr_seq_trans_baixa_rep_w IS NOT NULL AND nr_seq_trans_baixa_rep_w::text <> '') then
				nr_seq_trans_baixa_p	:= nr_seq_trans_baixa_rep_w;
			end if;	
		end if;

		vl_minimo_base_p		:= vl_minimo_base_w;
		vl_minimo_tributo_p		:= vl_minimo_tributo_w;
		ie_acumulativo_p		:= ie_acumulativo_w;
		vl_teto_base_p		:= vl_teto_base_calculo_w;
		vl_desc_dependente_p	:= vl_desc_dependente_w;
		cd_darf_p		:= coalesce(cd_retencao_w, cd_darf_w);
		nr_seq_classe_tp_p		:= nr_seq_classe_tp_w;
		cd_tipo_baixa_neg_p	:= cd_tipo_baixa_neg_w;

		end;
	end loop;
	close c01;
	end;
end if;	

cd_darf_p	:= coalesce(cd_darf_p, cd_retencao_w);

open c02;
loop
fetch c02 into
	ie_periodicidade_w,
	cd_variacao_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	ie_periodicidade_p		:= ie_periodicidade_w;
	cd_variacao_p		:= cd_variacao_w;
end loop;
close c02;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_dados_trib_tit_pagar ( cd_tributo_p bigint, cd_estabelecimento_p bigint, cd_cgc_titulo_p text, cd_pf_titulo_p text, cd_beneficiario_p INOUT text, pr_aliquota_p INOUT bigint, cd_cond_pagto_p INOUT bigint, cd_conta_financ_p INOUT bigint, nr_seq_trans_reg_p INOUT bigint, nr_seq_trans_baixa_p INOUT bigint, vl_minimo_base_p INOUT bigint, vl_minimo_tributo_p INOUT bigint, ie_acumulativo_p INOUT text, vl_teto_base_p INOUT bigint, vl_desc_dependente_p INOUT bigint, cd_darf_p INOUT text, dt_referencia_p timestamp, cd_variacao_p INOUT text, ie_periodicidade_p INOUT text, ie_origem_p text, cd_natureza_operacao_p bigint, cd_tipo_servico_p text, cd_material_p bigint, ie_tipo_contratacao_p text, nr_seq_tipo_repasse_p bigint, nr_seq_regra_p INOUT bigint, cd_operacao_nf_p bigint, qt_trib_pago_outro_p bigint, nr_seq_classe_tp_p INOUT bigint, cd_tipo_baixa_neg_p INOUT bigint, vl_base_p bigint, ie_producao_medica_p text, nr_seq_classe_p bigint, ie_origem_titulo_p text, nr_seq_tipo_prestador_p bigint, nr_seq_class_prestador_p bigint) FROM PUBLIC;

