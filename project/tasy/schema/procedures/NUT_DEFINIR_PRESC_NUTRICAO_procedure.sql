-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE nut_definir_presc_nutricao ( cd_setor_atendimento_p bigint, dt_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE

 
 
					  
nr_atendimento_w	bigint;
nr_prescricao_w		bigint;
nr_seq_servico_w	bigint;
nr_seq_serv_rep_w	bigint;
cd_estab_w		bigint;
dt_servico_w		timestamp;
ie_estabs_w		varchar(1);
					
C01 CURSOR FOR 
	SELECT b.nr_atendimento 
	FROM  atendimento_paciente b, 
		ocupacao_unidade_v a, 
		setor_atendimento s 
	WHERE  ((cd_setor_atendimento_p = 0) OR (a.cd_setor_atendimento = cd_setor_atendimento_p)) 
	AND	((ie_estabs_w = 'S' and cd_estab_w = b.cd_estabelecimento) or (ie_estabs_w = 'N')) 
	AND   a.cd_setor_atendimento 		= s.cd_setor_atendimento 
	AND   (a.nr_atendimento IS NOT NULL AND a.nr_atendimento::text <> '') 
	AND	a.nr_atendimento 		= b.nr_atendimento 
	ORDER BY b.nr_atendimento;	
 
C02 CURSOR FOR 
	SELECT	b.nr_sequencia, 
		dt_servico 
	FROM 	nut_atend_serv_dia b           
	WHERE	b.nr_atendimento = nr_atendimento_w 
	and	b.dt_servico BETWEEN TO_DATE(to_char(dt_referencia_p,'dd/mm/yyyy')||' 00:00:00','dd/mm/yyyy hh24:mi:ss') AND TO_DATE(to_char(dt_referencia_p,'dd/mm/yyyy')||' 23:59:59','dd/mm/yyyy hh24:mi:ss') 
	AND	coalesce(b.dt_liberacao::text, '') = ''  
	order by nr_sequencia;
	/*AND	EXISTS( SELECT	1              
			FROM	prescr_medica a        
			WHERE	b.nr_atendimento = a.nr_atendimento 
			and	a.nr_prescricao	 = nr_prescricao_w 
			AND		a.dt_liberacao IS NOT NULL      
			AND		((b.dt_servico BETWEEN a.dt_inicio_prescr AND a.dt_validade_prescr) OR (a.dt_validade_prescr IS NULL))          
			AND ((EXISTS (SELECT 1 FROM prescr_dieta b WHERE (a.nr_prescricao = b.nr_prescricao)))                   
			OR  (EXISTS (SELECT 1 FROM rep_jejum c WHERE (a.nr_prescricao = c.nr_prescricao)))                    
			OR	 (EXISTS (SELECT 1 FROM prescr_material d WHERE (a.nr_prescricao = d.nr_prescricao AND d.ie_agrupador IN (8,12))))  
			OR	 (EXISTS (SELECT 1 FROM nut_pac e WHERE (a.nr_prescricao = e.nr_prescricao)))))	 
	order by nr_sequencia;*/
	 
	 

BEGIN 
ie_estabs_w := obter_param_usuario(1003, 78, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_estabs_w);
cd_estab_w	:= wheb_usuario_pck.get_cd_estabelecimento;
 
open C01;
loop 
fetch C01 into	 
	nr_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
			 
	open C02;
	loop 
	fetch C02 into	 
		nr_seq_servico_w, 
		dt_servico_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		 
		SELECT	coalesce(MAX(nr_prescricao),0)  
		into STRICT	nr_prescricao_w	 
		FROM	prescr_medica a        
		WHERE	a.nr_atendimento = nr_atendimento_w 
		AND	(coalesce(a.dt_liberacao, a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao, a.dt_liberacao_medico))::text <> '')      
		AND	((dt_servico_w BETWEEN a.dt_inicio_prescr AND a.dt_validade_prescr) OR (coalesce(a.dt_validade_prescr::text, '') = ''))          
		AND ((EXISTS ( 	SELECT 1 
			FROM prescr_dieta b 
			WHERE (a.nr_prescricao = b.nr_prescricao)))                   
			OR (EXISTS (SELECT 1 FROM rep_jejum c WHERE (a.nr_prescricao = c.nr_prescricao)))                    
			OR (EXISTS (SELECT 1 FROM prescr_material d WHERE (a.nr_prescricao = d.nr_prescricao AND d.ie_agrupador IN (8,12))))  
			OR (EXISTS (SELECT 1 FROM nut_pac e WHERE (a.nr_prescricao = e.nr_prescricao))) 
			or (EXISTS (SELECT 1 FROM prescr_leite_deriv e WHERE (a.nr_prescricao = e.nr_prescricao))));
 
		 
		 
		 
		SELECT	coalesce(MAX(nr_sequencia),0)          
		into STRICT	nr_seq_serv_rep_w 
		FROM	nut_atend_serv_dia_rep      
		WHERE	nr_seq_serv_dia = nr_seq_servico_w 
		AND	coalesce(dt_liberacao::text, '') = '';
		 
		if (nr_prescricao_w <> 0) then 
			CALL Definir_Prescricao_Nutricao(nr_prescricao_w, nr_seq_serv_rep_w, nr_seq_servico_w, 'T', nm_usuario_p);
		end if;
 
		end;
	end loop;	
	close C02;	
		 
	end;
end loop;
close C01;
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nut_definir_presc_nutricao ( cd_setor_atendimento_p bigint, dt_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

