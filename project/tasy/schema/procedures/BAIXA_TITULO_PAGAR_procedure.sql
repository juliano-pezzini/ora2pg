-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixa_titulo_pagar (cd_estabelecimento_p bigint, cd_tipo_baixa_p bigint, nr_titulo_p bigint, vl_baixa_p bigint, nm_usuario_p text, nr_seq_trans_financ_p bigint, nr_bordero_p bigint, nr_seq_escrit_p bigint, dt_transacao_p timestamp, nr_seq_conta_banco_p bigint, nr_seq_cheque_p bigint default null, nr_seq_movto_trans_fin_p bigint default null, nr_seq_cheque_tit_p bigint default null, nr_seq_lote_enc_p bigint default null, nr_seq_nf_p bigint default null) AS $body$
DECLARE


/* Projeto Multimoeda - parametro nr_seq_movto_trans_fin_p se refere a nr_sequencia da tabela movto_trans_financ
	utilizado para buscar os dados de moeda estrangeira do movimento transacao. Possui default null para
	que nao seja necessario adicionar a todas as chamadas da procedure.
	
nr_seq_nf_p - Criado para o processo de abatimento usado no mexico, onde a rotina baixar_titulo_pagar e chamada na baixar_enc_contas_abat_nc	
*/
cd_moeda_padrao_w		integer	:= 0;
nr_seq_baixa_w			bigint	:= 0;
nr_seq_conta_banco_w		bigint := null;
dt_transacao_w			timestamp;
vl_juros_w			double precision	:= 0;
vl_desconto_w			double precision	:= 0;
vl_multa_w			double precision	:= 0;
vl_acrescimo_w			double precision	:= 0;
vl_outras_deducoes_w		double precision	:= 0;
vl_imposto_w			double precision	:= 0;
cd_centro_custo_w		bigint	:= null;
nr_seq_imposto_w		bigint	:= 0;
ie_baixa_contab_w		varchar(50);
ie_gerar_titulo_pagar_w		varchar(50);
dt_contabil_w			timestamp;
nr_seq_tit_pagar_imposto_w	bigint	:= 0;
ie_conta_contabil_baixa_w	varchar(1);
cd_conta_contabil_w		varchar(20);
cd_moeda_titulo_w		integer;
vl_cotacao_moeda_w		double precision	:= null;
ie_descontar_tributo_w		varchar(1);
vl_outras_despesas_w		double precision;
ie_juros_multa_w		varchar(1);
vl_baixa_w			double precision;
ie_desc_antec_tit_w		varchar(10);
vl_desc_antec_tit_w		double precision;
nr_seq_proj_rec_w		bigint;
vl_saldo_w			double precision;
ie_permite_proj_recurso_w	varchar(1);
vl_juros_emprest_w		double precision;
vl_amort_emprest_w		double precision;
vl_titulo_emprest_w		double precision;
/* Projeto Multimoeda */

vl_baixa_estrang_w		double precision;
cd_moeda_w			integer;
vl_cotacao_w			cotacao_moeda.vl_cotacao%type;
vl_complemento_w		double precision;
vl_titulo_w			double precision;
vl_saldo_titulo_w		double precision;
vl_cheque_w			double precision;
vl_cotacao_tit_w		double precision;
cd_moeda_tit_w			integer;
vl_var_cambial_w		double precision;
vl_cambial_ativo_w		double precision := 0;
vl_cambial_passivo_w		double precision := 0;
ie_var_cambial_w		varchar(1) := 'N';
vl_baixa_tit_estrang_w		double precision;
ie_titulo_sem_juros		varchar(2);
dt_real_pagamento_w		titulo_pagar_baixa.dt_real_pagamento%type;
nr_seq_cheque_bord_tit_w					bigint;
ie_outras_desp_no_saldo_w varchar(2);
vl_total_tit_pagar_liq_w	titulo_pagar.vl_titulo%type;	
vl_inicio_projeto_w		projeto_recurso.vl_inicio_projeto%type;
vl_comprometido_w		projeto_recurso_saldo.vl_comprometido%type;
nr_seq_sub_proj_rec_w		projeto_recurso.nr_sequencia%type;		
ie_param_25_w 				varchar(1) := 'N';
ie_considera_vl_compr_saldo_w		varchar(1) := 'N';
vl_comprometido_proj_rec_w		projeto_recurso_saldo.vl_comprometido%type;
cd_banco_destino_w				titulo_pagar_escrit.cd_banco%type;
cd_agencia_destino_w			titulo_pagar_escrit.cd_agencia_bancaria%type;
nr_conta_destino_w				titulo_pagar_escrit.nr_conta%type;
ie_digito_agencia_dest_w		titulo_pagar_escrit.IE_DIGITO_AGENCIA%type;
ie_digito_conta_dest_w			titulo_pagar_escrit.ie_digito_conta%type;
cd_pf_titulo_w					titulo_pagar.cd_pessoa_fisica%type;
cd_pj_titulo_w					titulo_pagar.cd_cgc%type;
vl_baixa_cotacao_tit_w			titulo_pagar_baixa.vl_baixa_estrang%type;
vl_baixa_cotacao_baixa_w		titulo_pagar_baixa.vl_baixa_estrang%type;
ie_baixa_estrang_w				varchar(1) := 'N';
vl_cotacao_nf_credito_w			nf_credito.vl_cotacao%type;
cd_moeda_nf_credito_w			nf_credito.cd_moeda%type;
vl_total_bx_estrang_w			titulo_pagar_baixa.vl_baixa_estrang%type;
vl_titulo_estrang_w				titulo_pagar.vl_titulo_estrang%type;
vl_convertido_cot_tit_w			double precision;
vl_convertido_cot_bx_w			double precision;
vl_saldo_tit_estrang_w			titulo_pagar.vl_titulo_estrang%type;
vl_baixas_estrang_tit_w			titulo_pagar_baixa.vl_baixa_estrang%type;
cd_moeda_baixa_escrit_w			titulo_pagar_escrit.ie_moeda%type;
ie_origem_despesa_bordero_w 		varchar(1); --OS 1921011 
vl_saldo_tit_calc_w				titulo_pagar.vl_saldo_titulo%type;
vl_diferenca_estrang_w			double precision;
ie_tipo_variacao_w				varchar(1);

ie_bordero_banco_w				bordero_pagamento.ie_bordero_banco%type;
nr_seq_cheque_cp_w				cheque_bordero_titulo.nr_seq_cheque%type;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.vl_imposto,
	b.ie_gerar_titulo_pagar
from	tributo b,
	w_titulo_pagar_imposto a
where	a.nr_seq_baixa	= nr_seq_baixa_w
and	a.cd_tributo	= b.cd_tributo
and (a.nr_bordero	= nr_bordero_p or (a.nr_seq_escrit IS NOT NULL AND a.nr_seq_escrit::text <> ''))
and	a.nr_titulo	= nr_titulo_p;

c02 CURSOR FOR
	SELECT 	nr_sequencia
	from 	projeto_recurso 
	where 	nr_seq_superior = nr_seq_proj_rec_w;


BEGIN

select	cd_moeda_padrao,
	coalesce(ie_baixa_contab,'S'),
	coalesce(ie_conta_contabil_baixa,'N')
into STRICT	cd_moeda_padrao_w,
	ie_baixa_contab_w,
	ie_conta_contabil_baixa_w
from	parametros_contas_pagar
where	cd_estabelecimento	= cd_estabelecimento_p;

select	dt_contabil,
	cd_moeda,
	vl_titulo
into STRICT	dt_contabil_w,
	cd_moeda_titulo_w,
	vl_titulo_emprest_w
from	titulo_pagar
where	nr_titulo	= nr_titulo_p;

select	max(vl_juros),
	max(vl_amortizacao)
into STRICT	vl_juros_emprest_w,
	vl_amort_emprest_w
from	emprest_financ_parc
where	nr_titulo = nr_titulo_p;

if (ie_baixa_contab_w = 'N') and (trunc(dt_transacao_p, 'dd') < trunc(dt_contabil_w, 'dd')) then
	/* A data de baixa nao pode ser menor do que a data contabil do titulo!
	Titulo nr_titulo_p, Data contabil: dt_contabil_w, Data baixa: dt_transacao_p */
	CALL wheb_mensagem_pck.exibir_mensagem_abort(201060,	'NR_TITULO_P=' || nr_titulo_p ||
							';DT_CONTABIL_W=' || dt_contabil_w ||
							';NR_TITULO_P=' || nr_titulo_p||
							';DT_TRANSACAO_P=' || dt_transacao_p);
end if;


select	coalesce(max(nr_sequencia),0) + 1
into STRICT	nr_seq_baixa_w
from	titulo_pagar_baixa
where	nr_titulo	= nr_titulo_p;

if (coalesce(dt_transacao_p::text, '') = '') then
	dt_transacao_w := clock_timestamp();
else	
	dt_transacao_w := dt_transacao_p;
end if;

ie_juros_multa_w := obter_param_usuario(127, 46, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_juros_multa_w);
ie_desc_antec_tit_w := obter_param_usuario(851, 203, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_desc_antec_tit_w);
ie_outras_desp_no_saldo_w := obter_param_usuario(851, 256, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_outras_desp_no_saldo_w);
ie_origem_despesa_bordero_w := obter_param_usuario(855, 26, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_origem_despesa_bordero_w); --OS 1921011
vl_outras_deducoes_w	:= 0;
vl_baixa_w		:= vl_baixa_p;

/* Projeto Multimoeda - Busca os dados da transacao quando parametro nao for nulo. */

if (nr_seq_movto_trans_fin_p IS NOT NULL AND nr_seq_movto_trans_fin_p::text <> '') then
	select max(vl_transacao_estrang),
		max(vl_cotacao),
		max(cd_moeda)
	into STRICT vl_baixa_estrang_w,
		vl_cotacao_w,
		cd_moeda_w
	from movto_trans_financ
	where nr_sequencia = nr_seq_movto_trans_fin_p
	  and coalesce(vl_transacao_estrang,0) <> 0;
end if;

if (nr_seq_cheque_p IS NOT NULL AND nr_seq_cheque_p::text <> '') then
	select 	max(b.nr_sequencia)
	into STRICT	nr_seq_cheque_bord_tit_w
	from 	cheque a,
			cheque_bordero_titulo b
	where	a.nr_sequencia = b.nr_seq_cheque
	and 	a.nr_sequencia = nr_seq_cheque_p;
end if;

/* Projeto Multimoeda - Busca os dados do cheque quando parametro nao for nulo. */

if ((nr_seq_cheque_tit_p IS NOT NULL AND nr_seq_cheque_tit_p::text <> '') or (nr_seq_cheque_bord_tit_w IS NOT NULL AND nr_seq_cheque_bord_tit_w::text <> '')) then
	select	max(a.vl_cheque_estrang),
		max(a.vl_cotacao),
		max(a.cd_moeda),
		max(a.vl_cheque),
		max(c.vl_titulo),
		max(c.vl_saldo_titulo),
		max(a.dt_compensacao),
		max(c.vl_cotacao)
	into STRICT	vl_baixa_estrang_w,
		vl_cotacao_w,
		cd_moeda_w,
		vl_cheque_w,
		vl_titulo_w,
		vl_saldo_titulo_w,
		dt_real_pagamento_w,
		vl_cotacao_tit_w
	from	cheque a,
		cheque_bordero_titulo b,
		titulo_pagar c
	where	a.nr_sequencia = b.nr_seq_cheque
	  and	b.nr_titulo = c.nr_titulo
	  and	((b.nr_sequencia = nr_seq_cheque_tit_p) or (b.nr_sequencia = nr_seq_cheque_bord_tit_w));

	
	select	max(a.vl_titulo_estrang),
			coalesce(sum(b.vl_baixa_estrang),0),
			max(a.vl_cotacao),
			max(a.vl_saldo_titulo)
	into STRICT	vl_saldo_tit_estrang_w,
			vl_baixas_estrang_tit_w,
			vl_cotacao_tit_w,
			vl_saldo_tit_calc_w
	FROM titulo_pagar a
LEFT OUTER JOIN titulo_pagar_baixa b ON (a.nr_titulo = b.nr_titulo)
WHERE a.nr_titulo = nr_titulo_p;
	
	
	if (coalesce(vl_baixa_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
	
		/*OS 1805876 - Se o valor do cheque for superior ao valor do titulo, baixar o saldo do titulo */

		if (vl_baixa_estrang_w > (coalesce(vl_saldo_tit_estrang_w,0) - coalesce(vl_baixas_estrang_tit_w,0)))  then
			vl_baixa_estrang_w := vl_saldo_tit_estrang_w;
		elsif (vl_baixa_estrang_w = vl_saldo_tit_estrang_w) then
			vl_baixa_estrang_w := vl_saldo_tit_estrang_w;
		end if;	
		
		
			vl_baixa_cotacao_tit_w		:= round((vl_baixa_estrang_w * vl_cotacao_tit_w)::numeric,2);
			vl_baixa_cotacao_baixa_w	:= round((vl_baixa_estrang_w * vl_cotacao_w)::numeric,2);
			
			if (vl_baixa_cotacao_tit_w <> 0) and (vl_baixa_cotacao_baixa_w <> 0) then
				/*OS 1706090Se o valor convertido da baixa que tem cotacao atual for maior que o valor convertido da contacao do titulo*/

				if (vl_baixa_cotacao_baixa_w > vl_baixa_cotacao_tit_w) then
					vl_cambial_passivo_w := coalesce(vl_baixa_cotacao_baixa_w,0) - coalesce(vl_baixa_cotacao_tit_w,0);
					vl_baixa_w			 := vl_baixa_cotacao_baixa_w - vl_cambial_passivo_w;
					ie_baixa_estrang_w   := 'S';
					ie_tipo_variacao_w   := 'P';
				elsif (vl_baixa_cotacao_baixa_w < vl_baixa_cotacao_tit_w) then
					vl_cambial_ativo_w	 := coalesce(vl_baixa_cotacao_tit_w,0) - coalesce(vl_baixa_cotacao_baixa_w,0);
					vl_baixa_w			 := vl_baixa_cotacao_baixa_w + vl_cambial_ativo_w;
					ie_baixa_estrang_w	 := 'S';
					ie_tipo_variacao_w   := 'A';
				end if;	
				
			end if;	

			/*Acredito que devido a arredondamento, as vezes ainda pode tentar baixar um valor com alguns centavos a mais q no titulo. Como cotacao pode ter mais de 2 casas e o titulo so 2 casas, se tiver varias baixas no titulo, esses calculos podem gerar diferenca.*/

			if (coalesce(vl_baixa_w,0) > coalesce(vl_saldo_tit_calc_w,0)) then
				vl_baixa_w := vl_baixa_w - (vl_baixa_w - vl_saldo_tit_calc_w);
				
				if (ie_tipo_variacao_w = 'A') then
					vl_cambial_ativo_w := vl_cambial_ativo_w + (vl_baixa_w - vl_saldo_tit_calc_w);
				elsif (ie_tipo_variacao_w = 'P') then
					vl_cambial_passivo_w := vl_cambial_passivo_w + (vl_baixa_w - vl_saldo_tit_calc_w);
				end if;
					
			end if;

		/*if (nr_seq_nf_p is null) then
			if (vl_baixa_p > 0) then
				-- Verifica se o valor do cheque e maior que o saldo do titulo, caso positivo converte o saldo do titulo pela cotacao

				if (vl_cheque_w > vl_saldo_titulo_w) then
					vl_baixa_estrang_w := vl_saldo_titulo_w / vl_cotacao_w;
				end if;
			elsif (vl_baixa_p < 0) then
				-- Verifica se o valor do cheque e maior que o do titulo, caso positivo converte o valor do titulo pela cotacao

				if (vl_cheque_w > vl_titulo_w) then
					vl_baixa_estrang_w := vl_titulo_w / vl_cotacao_w;
				end if;
				-- Verifica se o vl_baixa e negativo (estorno), nesse caso inverte o vl_baixa_estrang

				vl_baixa_estrang_w := vl_baixa_estrang_w * -1;
			end if;


		end if;*/
	end if;

end if;	

if (coalesce(nr_bordero_p,0) <> 0) then

	select	coalesce(vl_juros_bordero,0),
		coalesce(vl_desconto_bordero,0),
		coalesce(vl_multa_bordero,0),
		coalesce(CASE WHEN ie_origem_despesa_bordero_w='D' THEN vl_out_desp_bordero WHEN ie_origem_despesa_bordero_w='B' THEN vl_out_desp_bordero  ELSE 0 END ,0),--OS 1921011
		cd_centro_custo,
		coalesce(vl_outras_deducoes, 0),
		coalesce(vl_bordero_estrang,0),
		coalesce(vl_cotacao,0),
		coalesce(vl_complemento,0),
		cd_moeda_bordero,
		coalesce(CASE WHEN ie_origem_despesa_bordero_w='O' THEN vl_out_desp_bordero  ELSE 0 END ,0)--OS 1921011
	into STRICT	vl_juros_w,
		vl_desconto_w,
		vl_multa_w,
		vl_outras_despesas_w,
		cd_centro_custo_w,
		vl_outras_deducoes_w,
		vl_baixa_estrang_w,
		vl_cotacao_w,
		vl_complemento_w,
		cd_moeda_w,
		vl_acrescimo_w
	from	titulo_pagar_bordero_v
	where	nr_titulo	= nr_titulo_p
	and	nr_bordero	= nr_bordero_p;

	begin
	select	NR_SEQ_CONTA_BANCO,
		ie_bordero_banco
	into STRICT	nr_seq_conta_banco_w,
		ie_bordero_banco_w
	from	bordero_pagamento
	where	nr_bordero = NR_BORDERO_P;
	
	if (coalesce(ie_bordero_banco_w::text, '') = '' or ie_bordero_banco_w  = 'P') then
		select	max(ie_bordero_banco)
		into STRICT	ie_bordero_banco_w
		from	parametros_contas_pagar
		where	cd_estabelecimento	= cd_estabelecimento_p;
	end if;
	
	dt_real_pagamento_w := dt_transacao_p; /*Orientacao do Analista Luan, pois quando chama esta parte do codigo a tabela bordero_pagamento ainda nao tem a data de pagamento real*/
	exception
		when no_data_found then
			nr_seq_conta_banco_w := null;
			ie_bordero_banco_w := null;
		when too_many_rows then raise;
	end;
elsif (coalesce(nr_seq_escrit_p,0) <> 0) then

	/* Francisco - OS 83441 - 19/02/2008 - Inclui os juros e multa */

	select	coalesce(max(VL_ACRESCIMO), 0),
		coalesce(max(VL_DESCONTO), 0),
		coalesce(max(vl_juros),0),
		coalesce(max(vl_multa),0),
		coalesce(max(vl_despesa),0),
		max(dt_liquidacao),
		max(cd_centro_custo),
		max(cd_banco),
		max(cd_agencia_bancaria),	
		max(nr_conta),
		max(ie_digito_agencia),
		max(ie_digito_conta),
		max(ie_moeda)
	into STRICT	vl_acrescimo_w,
		vl_desconto_w,
		vl_juros_w,
		vl_multa_w,
		vl_outras_despesas_w,
		dt_real_pagamento_w,
		cd_centro_custo_w,
		cd_banco_destino_w,
		cd_agencia_destino_w,
		nr_conta_destino_w,
		ie_digito_agencia_dest_w,
		ie_digito_conta_dest_w,
		cd_moeda_baixa_escrit_w
	from	titulo_pagar_escrit
	where	nr_titulo	= nr_titulo_p
	and	nr_seq_escrit	= nr_seq_escrit_p;
		
	select	max(a.cd_pessoa_fisica),
			max(a.cd_cgc)
	into STRICT	cd_pf_titulo_w,
			cd_pj_titulo_w
	from	titulo_pagar a
	where	a.nr_titulo = nr_titulo_p;
	
	begin
	select	a.nr_seq_conta_banco
	into STRICT	nr_seq_conta_banco_w
	from	banco_escritural a
	where	a.nr_sequencia	= nr_seq_escrit_p;
	exception
		when others then
			nr_seq_conta_banco_w := null;
	end;
elsif (coalesce(nr_seq_cheque_p,0) <> 0) then

	if (coalesce(ie_juros_multa_w,'N') = 'S') then
	
		select	coalesce(sum(b.vl_saldo_juros),0),
			coalesce(sum(b.vl_saldo_multa),0)
		into STRICT	vl_juros_w,
			vl_multa_w
		from	titulo_pagar b,
			cheque_bordero_titulo a
		where	a.nr_titulo	= nr_titulo_p
		and	a.nr_seq_cheque	= nr_seq_cheque_p
		and	a.nr_titulo	= b.nr_titulo;
		
		if (coalesce(ie_baixa_estrang_w,'N') = 'S') then
			vl_baixa_w := vl_baixa_w - (vl_juros_w + vl_multa_w);
		else
			vl_baixa_w 	:= vl_baixa_p - (vl_juros_w + vl_multa_w);
		end if;	
	end if;
		
	if (coalesce(ie_desc_antec_tit_w,'N') = 'S') then /*Buscar o desconto do titulo a pagar vinculado ao cheque*/
	
		select	coalesce(sum(b.vl_dia_antecipacao),0)
		into STRICT	vl_desconto_w
		from	titulo_pagar b,
			cheque_bordero_titulo a
		where	a.nr_titulo	= nr_titulo_p
		and	a.nr_seq_cheque	= nr_seq_cheque_p
		and	a.nr_titulo	= b.nr_titulo;

		vl_baixa_w	:= vl_baixa_w + vl_desconto_w; /*Soma o valor do desconto na baixa, pois o valor do desconto ja e deduzido na compensasao do cheque  (proc COMPENSAR_CHEQUE) */
	
	end if;

else
	ie_titulo_sem_juros := obter_param_usuario(813, 184, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_titulo_sem_juros);
	if ( coalesce(ie_titulo_sem_juros,'N') = 'S' and OBTER_FUNCAO_ATIVA = 813 ) then
		select 	coalesce(vl_saldo_juros,0),
			coalesce(vl_saldo_multa,0), 
			coalesce(vl_outros_acrescimos,0),
			coalesce(vl_outras_despesas,0)
		into STRICT	vl_juros_w,
			vl_multa_w,
			vl_acrescimo_w,
			vl_outras_despesas_w
		from	titulo_pagar
		where 	nr_titulo = nr_titulo_p;
		
		if (coalesce(ie_outras_desp_no_saldo_w,'N') = 'S') then
			vl_baixa_w := vl_baixa_w - (vl_juros_w + vl_multa_w + vl_acrescimo_w);
			vl_outras_despesas_w := 0;
		else
			vl_baixa_w := vl_baixa_w - (vl_juros_w + vl_multa_w + vl_acrescimo_w + vl_outras_despesas_w);
		end if;
		
	end if;

end if;

if (ie_conta_contabil_baixa_w = 'S') then

	select	coalesce(max(cd_conta_contabil),'')
	into STRICT	cd_conta_contabil_w
	from	titulo_pagar_classif
	where	nr_titulo	= nr_titulo_p;
	
end if;

/* Francisco - OS 168616 - 23/12/2009 - Tratar para gravar a cotacao do dia, quando a moeda for diferente */

if (cd_moeda_titulo_w <> cd_moeda_padrao_w) and (coalesce(vl_baixa_estrang_w,0) = 0 and coalesce(vl_cotacao_w,0) = 0) and (cd_moeda_baixa_escrit_w <> cd_moeda_padrao_w)  then
	vl_cotacao_moeda_w	:= obter_conversao_moeda(1,cd_moeda_titulo_w,coalesce(dt_transacao_p,clock_timestamp()),'EN');
end if;

/* Projeto Multimoeda - Verifica se o bordero esta em moeda estrangeira, se nao estiver limpa as variaveis relacionadas*/

if (coalesce(vl_baixa_estrang_w,0) <> 0) then
	vl_complemento_w := vl_baixa_w - vl_baixa_estrang_w;
else
	vl_baixa_estrang_w := null;
	vl_cotacao_w := null;
	vl_complemento_w := null;
	cd_moeda_w := null;
end if;

/* Projeto Multimoeda - Busca os dados do titulo para verificar a existencia de variacao cambial para titulos em moeda estrangeira quando a baixa for realizada na mesma moeda do titulo.
	Caso seja a mesma moeda e exista cotacao no titulo e na baixa, calcula a variacao entre a emissao do titulo e a baixa a ser realizada para gravar a variacao passiva caso o 
	valor seja negativo ou a variacao passiva caso seja positivo. */
select	max(cd_moeda),
	max(vl_cotacao),
	max(vl_saldo_titulo)
into STRICT	cd_moeda_tit_w,
	vl_cotacao_tit_w,
	vl_saldo_tit_calc_w
from 	titulo_pagar
where	nr_titulo = nr_titulo_p;

if (coalesce(cd_moeda_tit_w,0) <> 0 and coalesce(vl_cotacao_tit_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
	if (vl_cambial_passivo_w = 0 and vl_cambial_ativo_w = 0) then
		vl_var_cambial_w := (coalesce(vl_baixa_estrang_w,0) * vl_cotacao_tit_w) - (coalesce(vl_baixa_estrang_w,0) * vl_cotacao_w);
		ie_var_cambial_w := 'S';
		ie_baixa_estrang_w := 'S';
		if (vl_var_cambial_w < 0) then
			vl_cambial_passivo_w := vl_var_cambial_w * -1;
			vl_cambial_ativo_w := 0;
			vl_baixa_w := vl_baixa_w - vl_cambial_passivo_w;
		else
			vl_cambial_passivo_w := 0;
			vl_cambial_ativo_w := vl_var_cambial_w;
			vl_baixa_w := vl_baixa_w + vl_cambial_ativo_w;
		end if;
	end if;
end if;

--tratamento de arredondamento
if (coalesce(vl_baixa_w,0) > coalesce(vl_saldo_tit_calc_w,0)) and (coalesce(vl_cotacao_tit_w,0) <> 0) then
	vl_diferenca_estrang_w := coalesce(vl_baixa_w,0) - coalesce(vl_saldo_tit_calc_w,0);
	vl_baixa_w := coalesce(vl_baixa_w,0) - vl_diferenca_estrang_w;

	if (ie_tipo_variacao_w = 'A') then
		vl_cambial_ativo_w := vl_cambial_ativo_w + vl_diferenca_estrang_w;
	elsif (ie_tipo_variacao_w = 'P') then
		vl_cambial_passivo_w := vl_cambial_passivo_w + vl_diferenca_estrang_w;
	end if;
end if;

--tambem tem que tratar nos casos de estorno, ao contrario dai
if (coalesce(vl_baixa_w,0) < 0 and (nr_seq_movto_trans_fin_p IS NOT NULL AND nr_seq_movto_trans_fin_p::text <> '') and coalesce(vl_cotacao_tit_w,0) <> 0) then
	--para estorno pela movto_trans_financ, so obter os dados necessarios e inverte-los
	select coalesce(max(VL_BAIXA * -1),0),
		coalesce(max(VL_CAMBIAL_PASSIVO * -1),0),
		coalesce(max(VL_CAMBIAL_ATIVO * -1),0)
	into STRICT vl_baixa_w,
		vl_cambial_passivo_w,
		vl_cambial_ativo_w
	from titulo_pagar_baixa a,
	movto_trans_financ b
	where a.nr_seq_movto_trans_fin = b.nr_seq_movto_orig
	and b.nr_sequencia = nr_seq_movto_trans_fin_p;
end if;

if (coalesce(vl_juros_emprest_w,0) <> 0) then
	vl_juros_emprest_w := (vl_juros_emprest_w * vl_baixa_w) / coalesce(vl_titulo_emprest_w,1);
end if;
if (coalesce(vl_amort_emprest_w,0) <> 0) then
	vl_amort_emprest_w := (vl_amort_emprest_w * vl_baixa_w) / coalesce(vl_titulo_emprest_w,1);
end if;

/*Tratamento para baixa por Nota de Credito, no mexico*/

if (nr_seq_nf_p IS NOT NULL AND nr_seq_nf_p::text <> '') and (philips_param_pck.get_cd_pais = 2) then

	select	max(vl_cotacao),
			max(cd_moeda)
	into STRICT	vl_cotacao_nf_credito_w,
			cd_moeda_nf_credito_w
	from	nf_credito
	where	nr_seq_nf_gerada = nr_seq_nf_p;
	
	select	coalesce(max(vl_cotacao),0),
			coalesce(max(vl_titulo_estrang),0),
			max(vl_saldo_titulo)
	into STRICT	vl_cotacao_tit_w,
			vl_titulo_estrang_w,
			vl_saldo_titulo_w
	from	titulo_pagar
	where	nr_titulo = nr_titulo_p;
	
	/*So qdo houver moeda na nota de credito, senao e a mesma moeda do titulo, ai nao precisa disso aqui.*/
	
	if (coalesce(vl_cotacao_nf_credito_w,0) <> 0) and (cd_moeda_nf_credito_w IS NOT NULL AND cd_moeda_nf_credito_w::text <> '') and (coalesce(vl_baixa_w,0) <> 0) and (coalesce(vl_cotacao_tit_w,0) <> 0)  then
	
		vl_baixa_estrang_w := dividir_sem_round(vl_baixa_w,vl_cotacao_nf_credito_w); --Converter para valor de moeda estrangeira. 
	
		vl_convertido_cot_tit_w := round((vl_cotacao_tit_w * vl_baixa_estrang_w)::numeric,2); -- Converter  o valor estrangeiro para a cotacao do titulo
		vl_convertido_cot_bx_w  := round((vl_cotacao_nf_credito_w * vl_baixa_estrang_w)::numeric,2); -- Converter  o valor estrangeiro para a cotacao da baixa la da nota credito, que sera gerada no titulo
		
		vl_cotacao_moeda_w := null;
		vl_cotacao_w := vl_cotacao_nf_credito_w;
		cd_moeda_w := cd_moeda_nf_credito_w;
		
		--Buscar tudo que o titulo ja tem baixado em moeda estrangeira.
		select 	coalesce(sum(a.vl_baixa_estrang),0)
		into STRICT	vl_total_bx_estrang_w
		from	titulo_pagar_baixa a
		where	a.nr_titulo = nr_titulo_p;
		
		/* Caso o valor total de baixa estrangeiro for igual ao valor estrangeiro do titulo, verificar e fazer arredondamento*/

		if ((coalesce(vl_total_bx_estrang_w,0) + coalesce(vl_baixa_estrang_w,0)) = vl_titulo_estrang_w) then
			if (vl_baixa_w > vl_saldo_titulo_w) then
				vl_baixa_w := coalesce(vl_baixa_w,0) - (coalesce(vl_baixa_w,0) - vl_saldo_titulo_w);
			elsif (vl_baixa_w < vl_saldo_titulo_w) then
				vl_baixa_w := coalesce(vl_baixa_w,0) + (vl_saldo_titulo_w - coalesce(vl_baixa_w,0));
			end if;
		end if;
		
		if (vl_convertido_cot_tit_w <> 0) and (vl_convertido_cot_bx_w <> 0) then
		
			vl_cambial_passivo_w := 0;
			vl_cambial_ativo_w := 0;
			
			if (vl_convertido_cot_bx_w > vl_convertido_cot_tit_w) then
				vl_cambial_passivo_w := vl_convertido_cot_bx_w - vl_convertido_cot_tit_w;
			elsif (vl_convertido_cot_bx_w < vl_convertido_cot_tit_w) then
				vl_cambial_ativo_w   := vl_convertido_cot_tit_w - vl_convertido_cot_bx_w;
			end if;
		
		end if;
	
	end if;

end if;

if ((ie_bordero_banco_w IS NOT NULL AND ie_bordero_banco_w::text <> '') and ie_bordero_banco_w = 'F') then

	select	max(a.nr_seq_cheque)
	into STRICT nr_seq_cheque_cp_w
	from	cheque_bordero_titulo a
	where	a.nr_bordero	= nr_bordero_p
	and a.nr_titulo	= nr_titulo_p;

end if;

insert	into titulo_pagar_baixa(nr_titulo,
	nr_sequencia,
	dt_baixa,
	cd_moeda,
	dt_atualizacao,
	nm_usuario,
	cd_tipo_baixa,
	ie_acao,
	vl_baixa,
	vl_descontos,
	vl_outras_deducoes,
	vl_juros,
	vl_multa,
	vl_outros_acrescimos,
	vl_pago,
	cd_banco,
	nr_lote_contabil,
	vl_devolucao,
	nr_seq_devolucao,
	nr_bordero,
	nr_seq_cheque_cp,
	nr_seq_trans_fin,
	vl_ir,
	nr_seq_conta_banco,
	nr_seq_escrit,
	cd_centro_custo,
	cd_conta_contabil,
	vl_cotacao_moeda,
	vl_outras_despesas,
	vl_baixa_estrang,
	vl_cotacao,
	vl_complemento,
	nr_seq_lote_enc_contas,
	vl_cambial_passivo,
	vl_cambial_ativo,
	vl_juros_emprest,
	vl_amortiza_emprest,
	dt_real_pagamento,
	vl_imposto_munic,
	vl_imposto,
	vl_inss,
	vl_glosa,
	cd_cgc_destino,
	cd_banco_destino,       
	cd_agencia_destino,     
	nr_conta_destino,       
	cd_pessoa_fisica_dest,  
	ie_digito_conta_dest,   
	ie_digito_agencia_dest)
values (nr_titulo_p,
	nr_seq_baixa_w,
	dt_transacao_w,
	coalesce(cd_moeda_w,cd_moeda_padrao_w), -- Grava moeda do bordero caso esteja preenchida - Projeto Multimoeda
	clock_timestamp(),
	nm_usuario_p,
	cd_tipo_baixa_p,
	'I',
	vl_baixa_w,
	vl_desconto_w, 
	vl_outras_deducoes_w, 
	vl_juros_w, 
	vl_multa_w, 
	vl_acrescimo_w, 
	vl_baixa_w - vl_desconto_w + vl_Juros_w + vl_multa_w + vl_acrescimo_w + coalesce(vl_outras_despesas_w,0) - vl_outras_deducoes_w + CASE WHEN coalesce(ie_baixa_estrang_w,'N')='S' THEN vl_cambial_passivo_w  ELSE 0 END  - CASE WHEN coalesce(ie_baixa_estrang_w,'N')='S' THEN vl_cambial_ativo_w  ELSE 0 END ,
	null,
	0,
	0,
	null, 
	nr_bordero_p,
	nr_seq_cheque_cp_w,
	nr_seq_trans_financ_p,
	0, 
	coalesce(nr_seq_conta_banco_w, nr_seq_conta_banco_p),
	nr_seq_escrit_p,
	cd_centro_custo_w,
	cd_conta_contabil_w,
	vl_cotacao_moeda_w,
	vl_outras_despesas_w,
	vl_baixa_estrang_w,
	vl_cotacao_w,
	vl_complemento_w,
	nr_seq_lote_enc_p,
	vl_cambial_passivo_w,
	vl_cambial_ativo_w,
	vl_juros_emprest_w,
	vl_amort_emprest_w,
	dt_real_pagamento_w,
	0,
	0,
	0,
	0,
	cd_pj_titulo_w,
	cd_banco_destino_w,
	cd_agencia_destino_w,
	nr_conta_destino_w,
	cd_pf_titulo_w,
	ie_digito_conta_dest_w,
	ie_digito_agencia_dest_w);
		
CALL gerar_alerta_baixa_tit_pagar(nr_titulo_p,nr_seq_baixa_w,cd_estabelecimento_p,nm_usuario_p);

CALL ratear_baixa_tit_pagar_nc(nr_titulo_p,nr_seq_baixa_w,nm_usuario_p);

if (nr_bordero_p IS NOT NULL AND nr_bordero_p::text <> '') then

	update	w_titulo_pagar_imposto
	set	nr_seq_baixa	= nr_seq_baixa_w
	where	nr_titulo		= nr_titulo_p
	and	nr_bordero	= nr_bordero_p;

elsif (nr_seq_escrit_p IS NOT NULL AND nr_seq_escrit_p::text <> '') then
	
	update	w_titulo_pagar_imposto
	set	nr_seq_baixa	= nr_seq_baixa_w
	where	nr_titulo		= nr_titulo_p
	and	(nr_seq_escrit IS NOT NULL AND nr_seq_escrit::text <> '');
end if;

open c01;
loop
fetch c01 into
	nr_seq_imposto_w,
	vl_imposto_w,
	ie_gerar_titulo_pagar_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	select	nextval('titulo_pagar_imposto_seq')
	into STRICT	nr_seq_tit_pagar_imposto_w
	;

	insert into titulo_pagar_imposto(nr_sequencia,
		nr_titulo, 
		cd_tributo,
		ie_pago_prev, 
		dt_atualizacao, 
		nm_usuario, 
		dt_imposto, 
		vl_base_calculo, 
		vl_imposto,
		ds_emp_retencao, 
		pr_imposto, 
		cd_beneficiario,
		cd_conta_financ, 
		nr_seq_trans_reg, 
		nr_seq_trans_baixa,
		vl_nao_retido, 
		ie_vencimento,
		VL_BASE_NAO_RETIDO, 
		VL_TRIB_ADIC, 
		VL_BASE_ADIC,
		vl_reducao,
		vl_desc_base,
		cd_darf,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_variacao,
		ie_periodicidade,
		nr_seq_baixa)	
	SELECT	nr_seq_tit_pagar_imposto_w,
		nr_titulo, 
		cd_tributo,
		'V', 
		clock_timestamp(), 
		nm_usuario_p, 
		dt_imposto, 
		vl_base_calculo, 
		vl_imposto,
		null, 
		pr_imposto, 
		cd_beneficiario,
		cd_conta_financ, 
		nr_seq_trans_reg, 
		nr_seq_trans_baixa,
		vl_nao_retido, 
		ie_vencimento,
		VL_BASE_NAO_RETIDO, 
		VL_TRIB_ADIC, 
		VL_BASE_ADIC,
		vl_reducao,
		vl_desc_base,
		cd_darf,
		clock_timestamp(),
		nm_usuario_p,
		cd_variacao,
		ie_periodicidade,
		nr_seq_baixa
	from	w_titulo_pagar_imposto
	where	nr_sequencia		= nr_seq_imposto_w;

	if (nr_bordero_p IS NOT NULL AND nr_bordero_p::text <> '') then
		update	titulo_pagar_baixa
		set	vl_baixa		= vl_baixa - vl_imposto_w,
			vl_pago		= vl_pago - vl_imposto_w,
			vl_imposto	= coalesce(vl_imposto,0) + vl_imposto_w
		where	nr_titulo		= nr_titulo_p
		and	nr_sequencia	= nr_seq_baixa_w;
		/* Projeto Multimoeda - Converte o valor do imposto de acordo com a cotacao e atualiza o valor em moeda estrangeira. */

		if (coalesce(vl_baixa_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
			update	titulo_pagar_baixa
			set	vl_baixa_estrang	= vl_baixa_estrang - (vl_imposto_w / vl_cotacao_w)
			where	nr_titulo		= nr_titulo_p
			and	nr_sequencia	= nr_seq_baixa_w;
			/* Projeto Multimoeda - Recalcula a variacao cambial da baixa do titulo. */

			if (coalesce(ie_var_cambial_w,'N') = 'S' and coalesce(vl_cotacao_tit_w,0) <> 0 and coalesce(vl_imposto_w,0) <> 0) then
				select	max(vl_baixa_estrang)
				into STRICT	vl_baixa_tit_estrang_w
				from	titulo_pagar_baixa
				where	nr_titulo = nr_titulo_p
				and	nr_sequencia = nr_seq_baixa_w;
				
				vl_var_cambial_w := (coalesce(vl_baixa_tit_estrang_w,0) * vl_cotacao_tit_w) - (coalesce(vl_baixa_tit_estrang_w,0) * vl_cotacao_w);
				if (vl_var_cambial_w < 0) then
					vl_cambial_passivo_w := vl_var_cambial_w * -1;
					vl_cambial_ativo_w := 0;
				else
					vl_cambial_passivo_w := 0;
					vl_cambial_ativo_w := vl_var_cambial_w;
				end if;
				
				update	titulo_pagar_baixa
				set	vl_cambial_passivo = vl_cambial_passivo_w,
					vl_cambial_ativo = vl_cambial_ativo_w
				where	nr_titulo = nr_titulo_p
				and	nr_sequencia = nr_seq_baixa_w;
			end if;
		end if;
		
	elsif (nr_seq_escrit_p IS NOT NULL AND nr_seq_escrit_p::text <> '') then		/* Edga 19/08/2008, OS 105242, no caso de pagamento escritural so gravar o valor do imposto */
		update	titulo_pagar_baixa
		set	vl_imposto	= coalesce(vl_imposto,0) + vl_imposto_w
		where	nr_titulo		= nr_titulo_p
		and	nr_sequencia	= nr_seq_baixa_w;
	end if;

	if (ie_gerar_titulo_pagar_w = 'S') then
		CALL Gerar_titulo_tributo(nr_seq_tit_pagar_imposto_w, nm_usuario_p);
	end if;

end loop;
close c01;

CALL pls_gerar_classif_ops_tit_pg(nr_titulo_p, nr_seq_baixa_w, nm_usuario_p);

/*Matheus 03/10/2009 OS 166605*/

CALL gerar_titulo_pagar_baixa_cc(	nr_titulo_p,
				nr_seq_baixa_w,
				'N',
				nm_usuario_p);
				
ie_descontar_tributo_w := obter_param_usuario(857, 28, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_descontar_tributo_w);

if (ie_descontar_tributo_w = 'S') and (nr_seq_escrit_p IS NOT NULL AND nr_seq_escrit_p::text <> '') then

	select	sum(a.vl_imposto)
	into STRICT	vl_imposto_w
	from	w_titulo_pagar_imposto a
	where	(a.nr_seq_escrit IS NOT NULL AND a.nr_seq_escrit::text <> '')
	and	a.nr_titulo	= nr_titulo_p;

	update	titulo_pagar_escrit
	set	vl_escritural	= coalesce(vl_escritural,0) - coalesce(vl_imposto_w,0)
	where	nr_titulo		= nr_titulo_p
	and	nr_seq_escrit	= nr_seq_escrit_p;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixa_titulo_pagar (cd_estabelecimento_p bigint, cd_tipo_baixa_p bigint, nr_titulo_p bigint, vl_baixa_p bigint, nm_usuario_p text, nr_seq_trans_financ_p bigint, nr_bordero_p bigint, nr_seq_escrit_p bigint, dt_transacao_p timestamp, nr_seq_conta_banco_p bigint, nr_seq_cheque_p bigint default null, nr_seq_movto_trans_fin_p bigint default null, nr_seq_cheque_tit_p bigint default null, nr_seq_lote_enc_p bigint default null, nr_seq_nf_p bigint default null) FROM PUBLIC;

