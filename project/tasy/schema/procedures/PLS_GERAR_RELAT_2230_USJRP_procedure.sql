-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_relat_2230_usjrp ( dt_periodo_p text, cd_matricula_familia_p bigint, nr_contrato_p bigint, cd_usuario_plano_p text, ie_tipo_pagador_p text, nr_seq_usuario_ops_p text, nr_seq_usuario_ops_p_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* Cursor 1 */

nr_seq_contrato_w	bigint;
nr_contrato_w		bigint;
nr_contrato_aux_w	bigint;

/* Cursor 2 */

qt_idade_inicial_w	bigint;
qt_idade_final_w	bigint;
vl_preco_atual_w	double precision;

/* Cursor 3 */

nr_seq_segurado_w	bigint;
qt_idade_w		smallint;
nr_parcela_w		bigint;
vl_item_w		double precision;
nr_seq_tipo_lanc_w	bigint;
nr_seq_item_w		bigint;
ie_tipo_item_w		varchar(2);
ie_tipo_pagador_w	varchar(2);
dt_adesao_w		timestamp;
dt_rescisao_w		timestamp;
dt_referencia_w		timestamp;
dt_mesano_referencia_w	timestamp;

/* Outros */

pf_qt_mov_anterior_w	bigint;
pj_qt_mov_anterior_w	bigint;
pf_qt_incluidos_w	bigint;
pj_qt_incluidos_w	bigint;
pf_qt_excluidos_w	bigint;
pj_qt_excluidos_w	bigint;
pf_qt_mov_incl_w	bigint;
pj_qt_mov_incl_w	bigint;
pf_qt_mov_excl_w	bigint;
pj_qt_mov_excl_w	bigint;
pf_qt_atual_w		bigint;
pj_qt_atual_w		bigint;
pf_vl_total_w		double precision;
pj_vl_total_w		double precision;
pf_qt_tx_inscricao_w	bigint;
pj_qt_tx_inscricao_w	bigint;
pf_vl_inscricao_w	double precision;
pj_vl_inscricao_w	double precision;
pf_qt_tx_cartao_w	bigint;
pj_qt_tx_cartao_w	bigint;
pf_vl_cartao_w		double precision;
pj_vl_cartao_w		double precision;
pf_qt_mens_retro_w	bigint;
pj_qt_mens_retro_w	bigint;
pf_vl_mens_retro_w	double precision;
pj_vl_mens_retro_w	double precision;
pf_qt_sca_w		bigint;
pj_qt_sca_w		bigint;
pf_vl_uni_sca_w		double precision;
pj_vl_uni_sca_w		double precision;
pf_vl_sca_w		double precision;
pj_vl_sca_w		double precision;
pf_vl_acrescimo_w	double precision;
pj_vl_acrescimo_w	double precision;
pf_vl_desconto_w	double precision;
pj_vl_desconto_w	double precision;

pf_seg_mov_anterior_w	bigint;
pj_seg_mov_anterior_w	bigint;
pf_seg_incluidos_w	bigint;
pj_seg_incluidos_w	bigint;
pf_seg_excluidos_w	bigint;
pj_seg_excluidos_w	bigint;
pf_seg_mov_incl_w	bigint;
pj_seg_mov_incl_w	bigint;
pf_seg_mov_excl_w	bigint;
pj_seg_mov_excl_w	bigint;
pf_seg_atual_w		bigint;
pj_seg_atual_w		bigint;
pf_seg_tx_inscricao_w	bigint;
pj_seg_tx_inscricao_w	bigint;
pf_seg_tx_cartao_w	bigint;
pj_seg_tx_cartao_w	bigint;
pf_seg_mens_retro_w	bigint;
pj_seg_mens_retro_w	bigint;
pf_seg_sca_w		bigint;
pj_seg_sca_w		bigint;

qt_mens_atual_w		bigint;
nr_seq_tabela_sca_w	bigint;
vl_uni_mens_retro_w	double precision;
vl_acres_desc_w		double precision;
ie_operacao_motivo_w	varchar(2);
nr_seq_tabela_w		bigint;
dt_nascimento_w		timestamp;
dt_fim_refer_w		timestamp;
qt_idade_nasc_w		bigint;
qt_idade_ant_w		bigint;
nr_seq_preco_w		bigint;
nr_seq_preco_ant_w	bigint;
vl_preco_faixa_w	double precision;
vl_preco_ant_w		double precision;
ie_altera_fx_etaria_w	varchar(2);
dt_menos_uma_hora_w	timestamp;
qt_contrato_grupo_w	bigint;
nr_seq_grupo_contrato_w	bigint;

C01 CURSOR FOR
	SELECT	distinct c.nr_sequencia,
		c.nr_contrato
	from	pls_contrato	c
	where	(c.cd_cgc_estipulante IS NOT NULL AND c.cd_cgc_estipulante::text <> '')
	and	((c.nr_contrato = nr_contrato_aux_w) or (coalesce(nr_contrato_aux_w::text, '') = ''))
	and	exists (	SELECT	1
			from	pls_segurado_carteira	z,
				pls_segurado		y,
				pls_mensalidade_segurado x,
				pls_mensalidade		a,
				pls_contrato_pagador	b
			where	z.nr_seq_segurado = y.nr_sequencia
			and	x.nr_seq_segurado = y.nr_sequencia
			and	x.nr_seq_mensalidade = a.nr_sequencia
			and	a.nr_seq_pagador = b.nr_sequencia
			and	c.nr_sequencia	= b.nr_seq_contrato
			and	trunc(a.dt_referencia,'month') = to_date(dt_periodo_p, 'dd/mm/yyyy')
			and (y.cd_matricula_familia = cd_matricula_familia_p or coalesce(cd_matricula_familia_p::text, '') = '')
			and (z.cd_usuario_plano = cd_usuario_plano_p or coalesce(cd_usuario_plano_p::text, '') = ''));

C02 CURSOR FOR
	SELECT	a.qt_idade_inicial,
		a.qt_idade_final,
		a.vl_preco_atual
	from	pls_plano_preco		a,
		pls_tabela_preco	b,
		pls_contrato_plano	c,
		pls_contrato		d
	where	b.nr_sequencia	= a.nr_seq_tabela
	and	b.nr_sequencia	= c.nr_seq_tabela
	and	d.nr_sequencia	= c.nr_seq_contrato
	and	d.nr_sequencia	= nr_seq_contrato_w
	and	c.nr_sequencia	= (	SELECT	max(x.nr_sequencia)
					from	pls_contrato_plano	x
					where	x.nr_seq_contrato = d.nr_sequencia)
	order by 1;

C03 CURSOR FOR
	SELECT	d.nr_sequencia nr_seq_segurado,
		b.qt_idade,
		b.nr_parcela,
		a.vl_item,
		a.nr_seq_tipo_lanc,
		a.nr_sequencia,
		a.ie_tipo_item,
		CASE WHEN coalesce(f.cd_pessoa_fisica::text, '') = '' THEN  'PJ'  ELSE 'PF' END  ie_tipo_pagador,
		d.dt_contratacao,
		d.dt_rescisao,
		e.dt_referencia,
		b.dt_mesano_referencia
	from	pls_mensalidade_seg_item	a,
		pls_mensalidade_segurado	b,
		pls_segurado_carteira		c,
		pls_segurado			d,
		pls_mensalidade			e,
		pls_contrato_pagador		f
	where	b.nr_sequencia		= a.nr_seq_mensalidade_seg
	and	d.nr_sequencia		= b.nr_seq_segurado
	and	d.nr_sequencia		= c.nr_seq_segurado
	and	e.nr_sequencia		= b.nr_seq_mensalidade
	and	f.nr_sequencia		= e.nr_seq_pagador
	and	d.nr_seq_contrato	= nr_seq_contrato_w
	and	trunc(e.dt_referencia,'month') between add_months(to_date(dt_periodo_p, 'dd/mm/yyyy'), -2) and to_date(dt_periodo_p, 'dd/mm/yyyy')
	and (d.cd_matricula_familia = cd_matricula_familia_p or coalesce(cd_matricula_familia_p::text, '') = '')
	and (c.cd_usuario_plano = cd_usuario_plano_p or coalesce(cd_usuario_plano_p::text, '') = '')
	and	((ie_tipo_pagador_p = 'A') or (ie_tipo_pagador_p = 'PF' and (f.cd_pessoa_fisica IS NOT NULL AND f.cd_pessoa_fisica::text <> '')) or (ie_tipo_pagador_p = 'PJ' and (f.cd_cgc IS NOT NULL AND f.cd_cgc::text <> '')))
	and	(d.nr_seq_plano IS NOT NULL AND d.nr_seq_plano::text <> '')
	and	a.ie_tipo_item in ('1', '2', '5', '11', '15')
	order by	1, 8;


BEGIN
--exec_sql_dinamico(nm_usuario_p,'truncate table w_relat_faixa_etaria');
if	((nr_seq_usuario_ops_p IS NOT NULL AND nr_seq_usuario_ops_p::text <> '') or (nr_seq_usuario_ops_p_p IS NOT NULL AND nr_seq_usuario_ops_p_p::text <> '')) then
	nr_contrato_aux_w	:= 0;

	if (nr_seq_usuario_ops_p IS NOT NULL AND nr_seq_usuario_ops_p::text <> '') then
		select 	max(a.nr_contrato)
		into STRICT	nr_contrato_aux_w
		from	pls_contrato a,
			pls_estipulante_web b
		where	b.nr_seq_contrato = a.nr_sequencia
		and	b.nr_sequencia = nr_seq_usuario_ops_p;

		if (coalesce(nr_contrato_aux_w::text, '') = '') then
			select	max(nr_seq_grupo_contrato)
			into STRICT	nr_seq_grupo_contrato_w
			from	pls_grupo_contrato_web
			where	nr_sequencia = nr_seq_usuario_ops_p;

			if (nr_seq_grupo_contrato_w IS NOT NULL AND nr_seq_grupo_contrato_w::text <> '') then
				select	count(1)
				into STRICT	qt_contrato_grupo_w
				from	pls_contrato_grupo a,
					pls_contrato b
				where	b.nr_sequencia = a.nr_seq_contrato
				and	a.nr_seq_grupo = nr_seq_grupo_contrato_w
				and	b.nr_contrato = nr_contrato_p;

				if (qt_contrato_grupo_w > 0) then
					nr_contrato_aux_w	:= nr_contrato_p;
				else
					nr_contrato_aux_w	:= 0;
				end if;
			else
				nr_contrato_aux_w	:= 0;
			end if;
		end if;
	elsif (nr_seq_usuario_ops_p_p IS NOT NULL AND nr_seq_usuario_ops_p_p::text <> '') then
		select 	max(a.nr_contrato)
		into STRICT	nr_contrato_aux_w
		from	pls_contrato a,
			pls_estipulante_web b
		where	b.nr_seq_contrato = a.nr_sequencia
		and	b.nr_sequencia = nr_seq_usuario_ops_p_p;

		if (coalesce(nr_contrato_aux_w::text, '') = '') then
			select	max(nr_seq_grupo_contrato)
			into STRICT	nr_seq_grupo_contrato_w
			from	pls_grupo_contrato_web
			where	nr_sequencia = nr_seq_usuario_ops_p_p;

			if (nr_seq_grupo_contrato_w IS NOT NULL AND nr_seq_grupo_contrato_w::text <> '') then
				select	count(1)
				into STRICT	qt_contrato_grupo_w
				from	pls_contrato_grupo a,
					pls_contrato b
				where	b.nr_sequencia = a.nr_seq_contrato
				and	a.nr_seq_grupo = nr_seq_grupo_contrato_w
				and	b.nr_contrato = nr_contrato_p;

				if (qt_contrato_grupo_w > 0) then
					nr_contrato_aux_w	:= nr_contrato_p;
				else
					nr_contrato_aux_w	:= 0;
				end if;
			else
				nr_contrato_aux_w	:= 0;
			end if;
		end if;
	end if;
else
	nr_contrato_aux_w := nr_contrato_p;
end if;

select	clock_timestamp() - interval '1 days'/24
into STRICT	dt_menos_uma_hora_w
;

delete from 	w_relat_faixa_etaria
where		nm_usuario = nm_usuario_p;

delete from 	w_relat_faixa_etaria
where		dt_atualizacao < dt_menos_uma_hora_w;
commit;

open C01;
loop
fetch C01 into
	nr_seq_contrato_w,
	nr_contrato_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	begin
	select	max(a.nr_seq_tabela_origem)
	into STRICT	nr_seq_tabela_sca_w
	from	pls_sca_vinculo		a,
		pls_plano_preco		b,
		pls_tabela_preco	c,
		pls_plano		d,
		pls_contrato		e
	where	c.nr_sequencia	= a.nr_seq_tabela_origem
	and	c.nr_contrato	= a.nr_seq_contrato
	and	c.nr_sequencia	= b.nr_seq_tabela
	and	d.nr_sequencia	= a.nr_seq_plano
	and	d.nr_sequencia	= c.nr_seq_plano
	and	e.nr_sequencia	= c.nr_contrato
	and	e.nr_sequencia	= nr_seq_contrato_w
	and	a.ie_lancamento_mensalidade = 'C';
	exception
	when others then
		nr_seq_tabela_sca_w := 0;
	end;

	open C02;
	loop
	fetch C02 into
		qt_idade_inicial_w,
		qt_idade_final_w,
		vl_preco_atual_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		pf_seg_mov_anterior_w	:= 0;
		pj_seg_mov_anterior_w	:= 0;
		pf_seg_incluidos_w	:= 0;
		pj_seg_incluidos_w	:= 0;
		pf_seg_excluidos_w	:= 0;
		pj_seg_excluidos_w	:= 0;
		pf_seg_mov_incl_w	:= 0;
		pj_seg_mov_incl_w	:= 0;
		pf_seg_mov_excl_w	:= 0;
		pj_seg_mov_excl_w	:= 0;
		pf_seg_atual_w		:= 0;
		pj_seg_atual_w		:= 0;
		pf_seg_tx_inscricao_w	:= 0;
		pj_seg_tx_inscricao_w	:= 0;
		pf_seg_tx_cartao_w	:= 0;
		pj_seg_tx_cartao_w	:= 0;
		pf_seg_mens_retro_w	:= 0;
		pj_seg_mens_retro_w	:= 0;
		pf_seg_sca_w		:= 0;
		pj_seg_sca_w		:= 0;

		begin
		select	coalesce(a.vl_preco_atual,0)
		into STRICT	vl_uni_mens_retro_w
		from	pls_plano_preco		a,
			pls_tabela_preco	b
		where	b.nr_sequencia	= a.nr_seq_tabela
		and	b.nr_sequencia	= nr_seq_tabela_sca_w
		and	a.qt_idade_inicial	= qt_idade_inicial_w
		and	a.qt_idade_final	= qt_idade_final_w;
		exception
		when others then
			vl_uni_mens_retro_w := 0;
		end;

		open C03;
		loop
		fetch C03 into
			nr_seq_segurado_w,
			qt_idade_w,
			nr_parcela_w,
			vl_item_w,
			nr_seq_tipo_lanc_w,
			nr_seq_item_w,
			ie_tipo_item_w,
			ie_tipo_pagador_w,
			dt_adesao_w,
			dt_rescisao_w,
			dt_referencia_w,
			dt_mesano_referencia_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin

			pf_qt_mov_anterior_w	:= 0;
			pj_qt_mov_anterior_w	:= 0;
			pf_qt_incluidos_w	:= 0;
			pj_qt_incluidos_w	:= 0;
			pf_qt_excluidos_w	:= 0;
			pj_qt_excluidos_w	:= 0;
			pf_qt_mov_incl_w	:= 0;
			pj_qt_mov_incl_w	:= 0;
			pf_qt_mov_excl_w	:= 0;
			pj_qt_mov_excl_w	:= 0;
			pf_qt_atual_w		:= 0;
			pj_qt_atual_w		:= 0;
			pf_vl_total_w		:= 0;
			pj_vl_total_w		:= 0;
			pf_qt_tx_inscricao_w	:= 0;
			pj_qt_tx_inscricao_w	:= 0;
			pf_vl_inscricao_w	:= 0;
			pj_vl_inscricao_w	:= 0;
			pf_qt_tx_cartao_w	:= 0;
			pj_qt_tx_cartao_w	:= 0;
			pf_vl_cartao_w		:= 0;
			pj_vl_cartao_w		:= 0;
			pf_qt_mens_retro_w	:= 0;
			pj_qt_mens_retro_w	:= 0;
			pf_vl_mens_retro_w	:= 0;
			pj_vl_mens_retro_w	:= 0;
			pf_qt_sca_w		:= 0;
			pj_qt_sca_w		:= 0;
			pf_vl_sca_w		:= 0;
			pj_vl_sca_w		:= 0;
			pf_vl_uni_sca_w		:= 0;
			pj_vl_uni_sca_w		:= 0;

			if (ie_tipo_item_w = '1') then	/* Item: Preço pré-estabelecido */
				if (qt_idade_w between qt_idade_inicial_w and qt_idade_final_w) then
					if (trunc(dt_referencia_w,'month') = to_date(dt_periodo_p, 'dd/mm/yyyy')) then
						if	((trunc(dt_adesao_w,'month') = to_date(dt_periodo_p, 'dd/mm/yyyy')) or (trunc(dt_adesao_w,'month') < to_date(dt_periodo_p, 'dd/mm/yyyy') and nr_parcela_w = 1)) then
							if (ie_tipo_pagador_w = 'PF') and (pf_seg_incluidos_w <> nr_seq_segurado_w) then
								pf_qt_incluidos_w	:= pf_qt_incluidos_w + 1;
								pf_seg_incluidos_w	:= nr_seq_segurado_w;
							elsif (ie_tipo_pagador_w = 'PJ') and (pj_seg_incluidos_w <> nr_seq_segurado_w) then
								pj_qt_incluidos_w	:= pj_qt_incluidos_w + 1;
								pj_seg_incluidos_w	:= nr_seq_segurado_w;
							end if;
						end if;

						if (trunc(dt_adesao_w,'month') <= to_date(dt_periodo_p, 'dd/mm/yyyy')) and (coalesce(dt_rescisao_w::text, '') = '' or trunc(dt_rescisao_w,'month') >= to_date(dt_periodo_p, 'dd/mm/yyyy')) and (dt_referencia_w = dt_mesano_referencia_w) then
							if (ie_tipo_pagador_w = 'PF') then
								pf_vl_total_w	 := pf_vl_total_w + vl_item_w;
								if (pf_seg_atual_w <> nr_seq_segurado_w) then
									pf_qt_atual_w	:= pf_qt_atual_w + 1;
									pf_seg_atual_w	:= nr_seq_segurado_w;
								end if;
							elsif (ie_tipo_pagador_w = 'PJ') then
								pj_vl_total_w	 := pj_vl_total_w + vl_item_w;
								if (pj_seg_atual_w <> nr_seq_segurado_w) then
									pj_qt_atual_w	:= pj_qt_atual_w + 1;
									pj_seg_atual_w	:= nr_seq_segurado_w;
								end if;
							end if;
						end if;

						if (dt_referencia_w <> dt_mesano_referencia_w) then
							if (ie_tipo_pagador_w = 'PF') then
								pf_vl_mens_retro_w	 := pf_vl_mens_retro_w + vl_item_w;
								if (pf_seg_mens_retro_w <> nr_seq_segurado_w) then
									pf_qt_mens_retro_w	:= pf_qt_mens_retro_w + 1;
									pf_seg_mens_retro_w	:= nr_seq_segurado_w;
								end if;
							elsif (ie_tipo_pagador_w = 'PJ') then
								pj_vl_mens_retro_w	 := pj_vl_mens_retro_w + vl_item_w;
								if (pj_seg_mens_retro_w <> nr_seq_segurado_w) then
									pj_qt_mens_retro_w	:= pj_qt_mens_retro_w + 1;
									pj_seg_mens_retro_w	:= nr_seq_segurado_w;
								end if;
							end if;
						end if;
					elsif (trunc(dt_referencia_w,'month') = add_months(to_date(dt_periodo_p, 'dd/mm/yyyy'), -1)) then
						if (trunc(dt_rescisao_w,'month') = add_months(to_date(dt_periodo_p, 'dd/mm/yyyy'), -1)) then
							if (ie_tipo_pagador_w = 'PF') and (pf_seg_excluidos_w <> nr_seq_segurado_w) then
								pf_qt_excluidos_w	:= pf_qt_excluidos_w + 1;
								pf_seg_excluidos_w	:= nr_seq_segurado_w;
							elsif (ie_tipo_pagador_w = 'PJ') and (pj_seg_excluidos_w <> nr_seq_segurado_w) then
								pj_qt_excluidos_w	:= pj_qt_excluidos_w + 1;
								pj_seg_excluidos_w	:= nr_seq_segurado_w;
							end if;
						end if;

						if (trunc(dt_adesao_w,'month') <= add_months(to_date(dt_periodo_p, 'dd/mm/yyyy'), -1)) and (coalesce(dt_rescisao_w::text, '') = '' or trunc(dt_rescisao_w,'month') >= add_months(to_date(dt_periodo_p, 'dd/mm/yyyy'), -1)) then
							if (ie_tipo_pagador_w = 'PF') and (pf_seg_mov_anterior_w <> nr_seq_segurado_w) then
								pf_qt_mov_anterior_w	:= pf_qt_mov_anterior_w + 1;
								pf_seg_mov_anterior_w	:= nr_seq_segurado_w;
							elsif (ie_tipo_pagador_w = 'PJ') and (pj_seg_mov_anterior_w <> nr_seq_segurado_w) then
								pj_qt_mov_anterior_w	:= pj_qt_mov_anterior_w + 1;
								pj_seg_mov_anterior_w	:= nr_seq_segurado_w;
							end if;
						end if;
					elsif (trunc(dt_referencia_w,'month') = add_months(to_date(dt_periodo_p, 'dd/mm/yyyy'), -2)) then
						if (trunc(dt_adesao_w,'month') <= add_months(to_date(dt_periodo_p, 'dd/mm/yyyy'), -1)) and (coalesce(dt_rescisao_w::text, '') = '' or trunc(dt_rescisao_w,'month') >= add_months(to_date(dt_periodo_p, 'dd/mm/yyyy'), -1)) then

							select	count(1)
							into STRICT	qt_mens_atual_w
							from	pls_mensalidade_segurado	a,
								pls_mensalidade			b
							where	b.nr_sequencia		= a.nr_seq_mensalidade
							and	a.nr_seq_segurado	= nr_seq_segurado_w
							and	trunc(b.dt_referencia,'month') = add_months(to_date(dt_periodo_p, 'dd/mm/yyyy'), -1);

							if (qt_mens_atual_w = 0) then
								if (ie_tipo_pagador_w = 'PF') and (pf_seg_mov_anterior_w <> nr_seq_segurado_w) then
									pf_qt_mov_anterior_w	:= pf_qt_mov_anterior_w + 1;
									pf_seg_mov_anterior_w	:= nr_seq_segurado_w;
								elsif (ie_tipo_pagador_w = 'PJ') and (pj_seg_mov_anterior_w <> nr_seq_segurado_w) then
									pj_qt_mov_anterior_w	:= pj_qt_mov_anterior_w + 1;
									pj_seg_mov_anterior_w	:= nr_seq_segurado_w;
								end if;
							end if;
						end if;
					end if;
				end if;
			elsif (ie_tipo_item_w = '2') then	/* Item: Taxa de inscrição */
				if (qt_idade_w between qt_idade_inicial_w and qt_idade_final_w) then
					if (trunc(dt_referencia_w,'month') = to_date(dt_periodo_p, 'dd/mm/yyyy')) then
						if (ie_tipo_pagador_w = 'PF') then
							pf_vl_inscricao_w	:= pf_vl_inscricao_w + vl_item_w;
							if (pf_seg_tx_inscricao_w <> nr_seq_segurado_w) then
								pf_qt_tx_inscricao_w	:= pf_qt_tx_inscricao_w + 1;
								pf_seg_tx_inscricao_w	:= nr_seq_segurado_w;
							end if;
						elsif (ie_tipo_pagador_w = 'PJ') then
							pj_vl_inscricao_w	:= pj_vl_inscricao_w + vl_item_w;
							if (pj_seg_tx_inscricao_w <> nr_seq_segurado_w) then
								pj_qt_tx_inscricao_w	:= pj_qt_tx_inscricao_w + 1;
								pj_seg_tx_inscricao_w	:= nr_seq_segurado_w;
							end if;
						end if;
					end if;
				end if;
			elsif (ie_tipo_item_w = '5') then	/* Item: Reajuste - Mudança de faixa-etária */
				if (trunc(dt_referencia_w,'month')	= to_date(dt_periodo_p, 'dd/mm/yyyy')) and (coalesce(dt_rescisao_w::text, '') = '' or trunc(dt_rescisao_w,'month') >= to_date(dt_periodo_p, 'dd/mm/yyyy')) then
					if (qt_idade_w between qt_idade_inicial_w and qt_idade_final_w) then
						if (ie_tipo_pagador_w = 'PF') and (pf_seg_mov_incl_w <> nr_seq_segurado_w) then
							pf_qt_mov_incl_w	:= pf_qt_mov_incl_w + 1;
							pf_seg_mov_incl_w	:= nr_seq_segurado_w;
						elsif (ie_tipo_pagador_w = 'PJ') and (pj_seg_mov_incl_w <> nr_seq_segurado_w) then
							pj_qt_mov_incl_w	:= pj_qt_mov_incl_w + 1;
							pj_seg_mov_incl_w 	:= nr_seq_segurado_w;
						end if;

						if (trunc(dt_adesao_w,'month') <= to_date(dt_periodo_p, 'dd/mm/yyyy')) and (dt_referencia_w = dt_mesano_referencia_w) then
							if (ie_tipo_pagador_w = 'PF') then
								pf_vl_total_w	 := pf_vl_total_w + vl_item_w;
								if (pf_seg_atual_w <> nr_seq_segurado_w) and (pf_seg_atual_w <> nr_seq_segurado_w)then
									pf_qt_atual_w	:= pf_qt_atual_w + 1;
									pf_seg_atual_w	:= nr_seq_segurado_w;
								end if;
							elsif (ie_tipo_pagador_w = 'PJ') then
								pj_vl_total_w	 := pj_vl_total_w + vl_item_w;
								if (pj_seg_atual_w <> nr_seq_segurado_w) then
									pj_qt_atual_w	:= pj_qt_atual_w + 1;
									pj_seg_atual_w	:= nr_seq_segurado_w;
								end if;
							end if;
						end if;
					elsif	((qt_idade_w - 1) = qt_idade_final_w) then
						if (ie_tipo_pagador_w = 'PF') and (pf_seg_mov_excl_w <> nr_seq_segurado_w) then
							pf_qt_mov_excl_w	:= pf_qt_mov_excl_w + 1;
							pf_seg_mov_excl_w	:= nr_seq_segurado_w;
						elsif (ie_tipo_pagador_w = 'PJ') and (pj_seg_mov_excl_w <> nr_seq_segurado_w) then
							pj_qt_mov_excl_w	:= pj_qt_mov_excl_w + 1;
							pj_seg_mov_excl_w	:= nr_seq_segurado_w;
						end if;
					end if;
				end if;
			elsif (ie_tipo_item_w = '11') then	/* Item: Via adicional de cartão de identificação */
				if (qt_idade_w between qt_idade_inicial_w and qt_idade_final_w) then
					if (trunc(dt_referencia_w,'month') = to_date(dt_periodo_p, 'dd/mm/yyyy')) then
						if (ie_tipo_pagador_w = 'PF') then
							pf_vl_cartao_w	:= pf_vl_cartao_w + vl_item_w;
							if (pf_seg_tx_cartao_w <> nr_seq_segurado_w) then
								pf_qt_tx_cartao_w	:= pf_qt_tx_cartao_w + 1;
								pf_seg_tx_cartao_w	:= nr_seq_segurado_w;
							end if;
						elsif (ie_tipo_pagador_w = 'PJ') then
							pj_vl_cartao_w	:= pj_vl_cartao_w + vl_item_w;
							if (pj_seg_tx_cartao_w <> nr_seq_segurado_w) then
								pj_qt_tx_cartao_w	:= pj_qt_tx_cartao_w + 1;
								pj_seg_tx_cartao_w	:= nr_seq_segurado_w;
							end if;
						end if;
					end if;
				end if;
			elsif (ie_tipo_item_w = '15') then	/* Item: Serviços e coberturas adicionais */
				if (qt_idade_w between qt_idade_inicial_w and qt_idade_final_w) then
					if (trunc(dt_referencia_w,'month') = to_date(dt_periodo_p, 'dd/mm/yyyy')) then
						if (ie_tipo_pagador_w = 'PF') then
							pf_vl_sca_w	:= pf_vl_sca_w + vl_item_w;
							if (pf_seg_sca_w <> nr_seq_segurado_w) then
								pf_qt_sca_w	:= pf_qt_sca_w + 1;
								pf_seg_sca_w	:= nr_seq_segurado_w;
							end if;
							pf_vl_uni_sca_w	:= vl_item_w;
						elsif (ie_tipo_pagador_w = 'PJ') then
							pj_vl_sca_w	:= pj_vl_sca_w + vl_item_w;
							if (pj_seg_sca_w <> nr_seq_segurado_w) then
								pj_qt_sca_w	:= pj_qt_sca_w + 1;
								pj_seg_sca_w	:= nr_seq_segurado_w;
							end if;
							pj_vl_uni_sca_w	:= vl_item_w;
						end if;
					end if;
				end if;
			end if;

			if (ie_tipo_item_w <> '5') then	/* Contabilização dos beneficiários que não possuem o item "Reajuste - Mudança de faixa-etária", mas que mudaram de faixa etária no mês */
				select	a.dt_nascimento,
					b.nr_seq_tabela
				into STRICT	dt_nascimento_w,
					nr_seq_tabela_w
				from	pessoa_fisica	a,
					pls_segurado	b
				where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
				and	b.nr_sequencia		= nr_seq_segurado_w;

				if (to_char(dt_nascimento_w,'mm') = to_char(add_months(to_date(dt_periodo_p, 'dd/mm/yyyy'), -1),'mm')) then
					dt_fim_refer_w	:= fim_dia(last_day(add_months(to_date(dt_periodo_p, 'dd/mm/yyyy'), -1)));

					qt_idade_nasc_w	:= trunc(months_between(dt_fim_refer_w, trunc(dt_nascimento_w,'month')) / 12);
					qt_idade_ant_w	:= qt_idade_nasc_w - 1;

					SELECT * FROM pls_obter_faixa_etaria(nr_seq_tabela_w, qt_idade_nasc_w, nr_seq_preco_w, vl_preco_atual_w) INTO STRICT nr_seq_preco_w, vl_preco_atual_w;
					SELECT * FROM pls_obter_faixa_etaria(nr_seq_tabela_w, qt_idade_ant_w, nr_seq_preco_ant_w, vl_preco_ant_w) INTO STRICT nr_seq_preco_ant_w, vl_preco_ant_w;

					if (nr_seq_preco_w <> nr_seq_preco_ant_w) then
						ie_altera_fx_etaria_w	:= 'S';
					else
						ie_altera_fx_etaria_w	:= 'N';
					end if;
				else
					ie_altera_fx_etaria_w	:= 'N';
				end if;

				if (ie_altera_fx_etaria_w = 'S') then
					if (trunc(dt_referencia_w,'month')	= to_date(dt_periodo_p, 'dd/mm/yyyy')) and (coalesce(dt_rescisao_w::text, '') = '' or trunc(dt_rescisao_w,'month') >= to_date(dt_periodo_p, 'dd/mm/yyyy')) then
						if (qt_idade_w between qt_idade_inicial_w and qt_idade_final_w) then
							if (ie_tipo_pagador_w = 'PF') and (pf_seg_mov_incl_w <> nr_seq_segurado_w) then
								pf_qt_mov_incl_w	:= pf_qt_mov_incl_w + 1;
								pf_seg_mov_incl_w	:= nr_seq_segurado_w;
							elsif (ie_tipo_pagador_w = 'PJ') and (pj_seg_mov_incl_w <> nr_seq_segurado_w) then
								pj_qt_mov_incl_w	:= pj_qt_mov_incl_w + 1;
								pj_seg_mov_incl_w 	:= nr_seq_segurado_w;
							end if;
						elsif	((qt_idade_w - 1) = qt_idade_final_w) then
							if (ie_tipo_pagador_w = 'PF') and (pf_seg_mov_excl_w <> nr_seq_segurado_w) then
								pf_qt_mov_excl_w	:= pf_qt_mov_excl_w + 1;
								pf_seg_mov_excl_w	:= nr_seq_segurado_w;
							elsif (ie_tipo_pagador_w = 'PJ') and (pj_seg_mov_excl_w <> nr_seq_segurado_w) then
								pj_qt_mov_excl_w	:= pj_qt_mov_excl_w + 1;
								pj_seg_mov_excl_w	:= nr_seq_segurado_w;
							end if;
						end if;
					end if;
				end if;
			end if;

			pf_vl_acrescimo_w	:= 0;
			pj_vl_acrescimo_w	:= 0;
			pf_vl_desconto_w	:= 0;
			pj_vl_desconto_w	:= 0;

			if (nr_seq_tipo_lanc_w IS NOT NULL AND nr_seq_tipo_lanc_w::text <> '') and (nr_seq_tipo_lanc_w not in (9,40)) then
				if (trunc(dt_referencia_w,'month')	= to_date(dt_periodo_p, 'dd/mm/yyyy')) then
					if (qt_idade_w between qt_idade_inicial_w and qt_idade_final_w) then
						begin
						select	b.vl_item,
							coalesce(a.ie_operacao_motivo,'S')
						into STRICT	vl_acres_desc_w,
							ie_operacao_motivo_w
						from	pls_tipo_lanc_adic		a,
							pls_mensalidade_seg_item	b
						where	a.nr_sequencia	= nr_seq_tipo_lanc_w
						and	b.nr_sequencia 	= nr_seq_item_w;
						exception
						when others then
							vl_acres_desc_w		:= 0;
							ie_operacao_motivo_w	:= 'S';
						end;

						if (ie_tipo_pagador_w = 'PF') then
							if (ie_operacao_motivo_w = 'S') then
								pf_vl_acrescimo_w	:= vl_acres_desc_w;
							elsif (ie_operacao_motivo_w = 'D') then
								pf_vl_desconto_w	:= vl_acres_desc_w;
							end if;
						elsif (ie_tipo_pagador_w = 'PJ') then
							if (ie_operacao_motivo_w = 'S') then
								pj_vl_acrescimo_w	:= vl_acres_desc_w;
							elsif (ie_operacao_motivo_w = 'D') then
								pj_vl_desconto_w	:= vl_acres_desc_w;
							end if;
						end if;
					end if;
				end if;
			end if;

			if (ie_tipo_pagador_w = 'PF') then

				/* Movimentação anterior - PF */

				if (pf_qt_mov_anterior_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pf_qt_mov_anterior_w, 'MA', 'PF', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Inclusões - PF */

				if (pf_qt_incluidos_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pf_qt_incluidos_w, 'IN', 'PF', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Exclusões - PF */

				if (pf_qt_excluidos_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pf_qt_excluidos_w, 'EX', 'PF', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Movimentações de inclusão - PF */

				if (pf_qt_mov_incl_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pf_qt_mov_incl_w, 'MI', 'PF', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Movimentações de exclusão - PF */

				if (pf_qt_mov_excl_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pf_qt_mov_excl_w, 'ME', 'PF', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Quantidade atual - PF */

				if (pf_qt_atual_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pf_qt_atual_w, 'AT', 'PF', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Vl total - PF */

				if (pf_vl_total_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							vl_faixa_etaria, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pf_vl_total_w, 'TO', 'PF', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Quantidade de taxa de inscrição - PF */

				if (pf_qt_tx_inscricao_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pf_qt_tx_inscricao_w, 'TI', 'PF', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Vl taxa de inscrição - PF */

				if (pf_vl_inscricao_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							vl_faixa_etaria, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pf_vl_inscricao_w, 'VI', 'PF', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Quantidade de taxa de cartão - PF */

				if (pf_qt_tx_cartao_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pf_qt_tx_cartao_w, 'TC', 'PF', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Vl taxa de cartão - PF */

				if (pf_vl_cartao_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							vl_faixa_etaria, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pf_vl_cartao_w, 'VC', 'PF', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Quantidade de mensalidade retroativa - PF */

				if (pf_qt_mens_retro_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pf_qt_mens_retro_w, 'QR', 'PF', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Vl mensalidade retroativa - PF */

				if (pf_vl_mens_retro_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							vl_faixa_etaria, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pf_vl_mens_retro_w, 'MR', 'PF', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Quantidade de SCA - PF */

				if (pf_qt_sca_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pf_qt_sca_w, 'SCA', 'PF', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Vl unitário de SCA - PF */

				if (pf_vl_uni_sca_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							vl_faixa_etaria, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pf_vl_uni_sca_w, 'USC', 'PF', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Vl SCA - PF */

				if (pf_vl_sca_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							vl_faixa_etaria, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pf_vl_sca_w, 'TSC', 'PF', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Vl acréscimo - PF */

				if (pf_vl_acrescimo_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							vl_faixa_etaria, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pf_vl_acrescimo_w, 'AC', 'PF', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Vl desconto - PF */

				if (pf_vl_desconto_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							vl_faixa_etaria, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pf_vl_desconto_w, 'DE', 'PF', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

			elsif (ie_tipo_pagador_w = 'PJ') then

				/* Movimentação anterior - PJ */

				if (pj_qt_mov_anterior_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pj_qt_mov_anterior_w, 'MA', 'PJ', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Inclusões - PJ */

				if (pj_qt_incluidos_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pj_qt_incluidos_w, 'IN', 'PJ', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Exclusões - PJ */

				if (pj_qt_excluidos_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pj_qt_excluidos_w, 'EX', 'PJ', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Movimentações de inclusão - PJ */

				if (pj_qt_mov_incl_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pj_qt_mov_incl_w, 'MI', 'PJ', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Movimentações de exclusão - PJ */

				if (pj_qt_mov_excl_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pj_qt_mov_excl_w, 'ME', 'PJ', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Quantidade atual - PJ */

				if (pj_qt_atual_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pj_qt_atual_w, 'AT', 'PJ', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Vl total - PJ */

				if (pj_vl_total_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							vl_faixa_etaria, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pj_vl_total_w, 'TO', 'PJ', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/*Quantidade de taxa de inscrição - PJ */

				if (pj_qt_tx_inscricao_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pj_qt_tx_inscricao_w, 'TI', 'PJ', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Vl taxa de inscrição - PJ */

				if (pj_vl_inscricao_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							vl_faixa_etaria, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pj_vl_inscricao_w, 'VI', 'PJ', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/*Quantidade de taxa de cartão - PJ */

				if (pj_qt_tx_cartao_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pj_qt_tx_cartao_w, 'TC', 'PJ', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Vl taxa de cartão - PJ */

				if (pj_vl_cartao_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							vl_faixa_etaria, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pj_vl_cartao_w, 'VC', 'PJ', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Quantidade de mensalidade retroativa - PJ */

				if (pj_qt_mens_retro_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pj_qt_mens_retro_w, 'QR', 'PJ', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Vl mensalidade retroativa - PJ */

				if (pj_vl_mens_retro_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							vl_faixa_etaria, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pj_vl_mens_retro_w, 'MR', 'PJ', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Quantidade de SCA - PJ */

				if (pj_qt_sca_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							qt_beneficiarios, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pj_qt_sca_w, 'SCA', 'PJ', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Vl unitário de SCA - PJ */

				if (pj_vl_uni_sca_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							vl_faixa_etaria, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pj_vl_uni_sca_w, 'USC', 'PJ', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Vl SCA - PJ */

				if (pj_vl_sca_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							vl_faixa_etaria, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pj_vl_sca_w, 'TSC', 'PJ', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Vl acréscimo - PJ */

				if (pj_vl_acrescimo_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							vl_faixa_etaria, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pj_vl_acrescimo_w, 'AC', 'PJ', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;

				/* Vl desconto - PJ */

				if (pj_vl_desconto_w > 0) then
					insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							vl_faixa_etaria, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
					values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
							pj_vl_desconto_w, 'DE', 'PJ', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
				end if;
			end if;

			/* Vl unitário de mensalidades retroativas */

			if (vl_uni_mens_retro_w > 0) then
				insert into w_relat_faixa_etaria(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
						vl_faixa_etaria, ie_tipo_informacao, ie_tipo_pagador, qt_idade_inicial, qt_idade_final, nr_seq_contrato)
				values (	nextval('w_relat_faixa_etaria_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
						(vl_preco_atual_w + vl_uni_mens_retro_w), 'UM', 'A', qt_idade_inicial_w, qt_idade_final_w, nr_seq_contrato_w);
			end if;
			end;
		end loop;
		close C03;
		end;
	end loop;
	close C02;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_relat_2230_usjrp ( dt_periodo_p text, cd_matricula_familia_p bigint, nr_contrato_p bigint, cd_usuario_plano_p text, ie_tipo_pagador_p text, nr_seq_usuario_ops_p text, nr_seq_usuario_ops_p_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

