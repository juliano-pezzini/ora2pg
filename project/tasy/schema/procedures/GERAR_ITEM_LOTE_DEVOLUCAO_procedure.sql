-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_item_lote_devolucao ( nr_atendimento_p bigint, nr_devolucao_p bigint, nr_lote_p bigint, cd_setor_atendimento_p bigint, cd_local_estoque_p bigint, cd_motivo_devolucao_p bigint, nm_usuario_p text, ie_erro_p INOUT text ) AS $body$
DECLARE



nr_sequencia_w			bigint;
cd_material_w			integer;
dt_atendimento_w		timestamp;
cd_unidade_medida_w		varchar(30);
qt_material_w			double precision;
nr_sequencia_prescricao_w	integer;
dt_entrada_unidade_w		timestamp;
nr_seq_atendimento_w		bigint;
cd_local_estoque_w		smallint;
nr_prescricao_w			bigint;
ie_consignado_w			varchar(1);
cd_cgc_fornecedor_w		varchar(14);
ie_parametro_128_w		varchar(1);
ie_retorno_consiste_item_w varchar(1);
nr_seq_lote_fornec_w    bigint;
ie_erro_w varchar(1);
qt_pendente_w		double precision;
qt_devolvida_w		double precision;

C01 CURSOR FOR
	SELECT	a.cd_material,
		a.dt_atendimento,
		a.cd_unidade_medida,
		a.nr_sequencia_prescricao,
		a.dt_entrada_unidade,
		a.nr_sequencia,
		a.cd_local_estoque,
		sum(a.qt_material)
	FROM material b, material_em_devolucao_v a
LEFT OUTER JOIN tipo_baixa_prescricao c ON (a.cd_motivo_baixa = c.cd_tipo_baixa AND a.ie_prescr_dev = c.ie_prescricao_devolucao)
WHERE a.cd_material = b.cd_material and a.nr_atendimento = nr_atendimento_p and a.nr_prescricao	= nr_prescricao_w and a.nr_seq_lote_ap = nr_lote_p and not exists ( SELECT 1 from item_devolucao_material_pac where nr_seq_lote = nr_lote_p) and a.cd_setor_atendimento = coalesce(cd_setor_atendimento_p, a.cd_setor_atendimento)   and ((a.qt_material < 0) or (a.cd_local_estoque IS NOT NULL AND a.cd_local_estoque::text <> '') or (c.ie_atualiza_estoque = 'N' AND c.ie_conta_paciente = 'S'))
	having	sum(a.qt_material) > 0 group by
		a.cd_material,
		a.dt_atendimento,
		a.cd_unidade_medida,
		a.nr_sequencia_prescricao,
		a.dt_entrada_unidade,
		a.nr_sequencia,
		a.cd_local_estoque,
		a.nr_seq_lote_ap;


BEGIN
select	nr_prescricao
into STRICT	nr_prescricao_w
from	ap_lote
where	nr_sequencia = nr_lote_p;

ie_parametro_128_w := obter_param_usuario(42, 128, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_parametro_128_w);
ie_erro_p := 'N';
ie_erro_w := 'N';

open C01;
loop
fetch C01 into
	cd_material_w,
	dt_atendimento_w,
	cd_unidade_medida_w,
	nr_sequencia_prescricao_w,
	dt_entrada_unidade_w,
	nr_seq_atendimento_w,
	cd_local_estoque_w,
	qt_material_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
		if (ie_parametro_128_w = 'N') then
			ie_retorno_consiste_item_w := consiste_dev_item_adm(nr_prescricao_w, nr_sequencia_prescricao_w, qt_material_w, null, nr_lote_p);
			
			if (ie_retorno_consiste_item_w = 'N') then
				CALL gerar_w_item_devolucao_pac(nr_devolucao_p, cd_material_w, 'S', wheb_mensagem_pck.get_texto(315802), wheb_mensagem_pck.get_texto(1046161, 'NR_PARAMETRO='||'128'), null, nm_usuario_p);
				ie_erro_p := 'S';
				ie_erro_w := 'S';
			end if;
		end if;
		
		select	coalesce(sum(b.qt_material), 0)
		into STRICT	qt_devolvida_w
		from	item_devolucao_material_pac b,
			devolucao_material_pac a
		where	a.nr_devolucao = b.nr_devolucao
		and	a.nr_atendimento = nr_atendimento_p
		and		(dt_recebimento IS NOT NULL AND dt_recebimento::text <> '')
		and		nr_seq_atendimento = nr_seq_atendimento_w;
		
		if	((qt_devolvida_w + qt_material_w) > qt_material_w) then
			ie_erro_w := 'S';
		end if;
		
		if (ie_erro_w = 'N') then
			select	ie_consignado
			into STRICT	ie_consignado_w
			from	material
			where	cd_material = cd_material_w;
			
			if (ie_consignado_w = '1') then
			
				select	coalesce(max(cd_cgc_fornecedor),0)
				into STRICT	cd_cgc_fornecedor_w
				from	material_atend_paciente
				where	nr_sequencia = nr_seq_atendimento_w;
			
			end if;
			
			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	nr_sequencia_w
			from	item_devolucao_material_pac
			where	nr_devolucao = nr_devolucao_p;

			select  max(nr_seq_lote_fornec)
            		into STRICT    nr_seq_lote_fornec_w
            		from    material_atend_paciente
            		where   nr_sequencia = nr_seq_atendimento_w;

			insert into item_devolucao_material_pac(
				nr_devolucao,
				nr_sequencia,
				cd_material,
				dt_atendimento,
				cd_local_estoque,
				cd_unidade_medida,
				cd_motivo_devolucao,
				dt_atualizacao,
				nm_usuario_devol,
				qt_material,
				nr_prescricao,
				nr_sequencia_prescricao,
				ie_tipo_baixa_estoque,
				dt_entrada_unidade,
				nr_seq_atendimento,
				nr_seq_lote,
				nm_usuario,
				cd_cgc_fornec,
				nr_seq_lote_fornec)
			values (
				nr_devolucao_p,
				nr_sequencia_w,
				cd_material_w,
				dt_atendimento_w,
				CASE WHEN cd_local_estoque_p=0 THEN  coalesce(cd_local_estoque_w,0)   ELSE cd_local_estoque_p END ,
				cd_unidade_medida_w,
				cd_motivo_devolucao_p,
				clock_timestamp(),
				nm_usuario_p,
				qt_material_w,
				nr_prescricao_w,
				nr_sequencia_prescricao_w,
				0,
				dt_entrada_unidade_w,
				nr_seq_atendimento_w,
				nr_lote_p,
				nm_usuario_p,
				CASE WHEN ie_consignado_w='1' THEN cd_cgc_fornecedor_w  ELSE null END ,
				nr_seq_lote_fornec_w);
		end if;
	ie_erro_w := 'N';
	end;
end loop;
close c01;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_item_lote_devolucao ( nr_atendimento_p bigint, nr_devolucao_p bigint, nr_lote_p bigint, cd_setor_atendimento_p bigint, cd_local_estoque_p bigint, cd_motivo_devolucao_p bigint, nm_usuario_p text, ie_erro_p INOUT text ) FROM PUBLIC;

