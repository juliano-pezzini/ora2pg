-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (ds_dias_aplicacao	varchar(6));


CREATE OR REPLACE PROCEDURE gerar_ciclo_oncologia ( nr_seq_paciente_p bigint, dt_inicio_p timestamp, nr_seq_protoclo_p bigint, nr_ciclo_inicial_p bigint, nr_ciclo_final_p bigint, nr_dia_inicial_p bigint, nr_dia_final_p bigint, nr_atendimento_p bigint, qt_peso_p bigint, nm_usuario_p text, ie_gera_data_real_p text, ie_consiste_dia_util_p text, ie_gerado_receita_amb_p INOUT text, ds_retorno_quimio_p INOUT text) AS $body$
DECLARE


i 			integer;
y 			integer;
k 			integer	:= 1;
z 			integer;
x			varchar(1);
r			integer := 1;
r2			integer := 1;
aux_w			bigint;
cd_material_w		integer;
cd_unidade_medida_w	varchar(30);
cd_unidade_med_ref_w paciente_protocolo_medic.cd_unid_medida_ref%type;
qt_dose_w		double precision;
qt_dose_ref_w	paciente_protocolo_medic.qt_dose_ref%type;
ie_via_aplicacao_w		varchar(5);
ds_recomendacao_w	varchar(4000);
nr_agrupamento_w		double precision;
ds_dias_aplicacao_w	varchar(4000);
ds_ciclos_aplicacao_w	varchar(4000);

cd_material_ww		integer;
cd_unidade_medida_ww	varchar(30);
qt_dose_ww		double precision;
ie_via_aplicacao_ww	varchar(5);
ds_recomendacao_ww	varchar(2000);
nr_agrupamento_ww	double precision;
ds_dias_aplicacao_ww	varchar(4000);
ds_observacao_w		varchar(255);
ds_observacao_ww		varchar(255);

nr_seq_diluicao_w		bigint;
ds_valido_dias_w 		varchar(13)	:= '0123456789D,-';
ds_valido_ciclos_w		varchar(13)	:= '0123456789C,';
ds_texto_w		varchar(4000);
type vetor is table of campos index by integer;
dias_w			vetor;
posicao_w		smallint;
dia_w			varchar(5);
dt_prevista_w		timestamp;
dt_prevista_aux_w		timestamp;
dt_real_w			timestamp;
nr_seq_atendimento_w	bigint;
nr_seq_material_w		bigint;
nr_seq_material_ww	bigint;
nr_seq_mat_w		bigint;
nr_seq_mat_dil_w		bigint;
cont_w			bigint;
qt_min_aplicacao_w	smallint;
qt_hora_aplicacao_w	smallint;
qt_hora_aplicacao_ww	smallint;
ie_bomba_infusao_w	varchar(1);
qt_min_aplicacao_ww	smallint;
ie_bomba_infusao_ww	varchar(1);
cd_intervalo_w		varchar(7);
cd_intervalo_ww		varchar(7);
ie_dia_util_w		varchar(1);
ie_dia_util_dt_real_w	varchar(1);
cd_estabelecimento_w	smallint;
qt_count_w			bigint;
qt_nao_util_w		bigint	:= 0;	
qt_nao_util_dt_real_w	smallint	:= 0;	
qt_dias_intervalo_w		smallint;	
dt_inicio_w		timestamp;
dt_inicio_aux_w		timestamp;
dt_inicio_dt_real_w		timestamp;
dt_ultima_dt_real_w		timestamp;
qt_dias_util_w		smallint;
qt_dias_util_ww		smallint;
qt_material_w		bigint;
nr_dia_inicial_w		varchar(15);
nr_dia_final_w		varchar(10);
ie_generico_w		varchar(1);
nr_seq_interno_w		bigint;
nr_seq_interno_ww		bigint;
nr_seq_int_prot_medic_w	bigint;
vl_parametro_w		varchar(5)	:= 'N';
qt_registro_w		bigint;
ie_tem_prescricao_w	varchar(1);
ie_exige_liberacao_w	varchar(1);
ie_laudo_quimio_w		varchar(1);
cd_pessoa_fisica_w	varchar(10);
nr_atendimento_w		bigint;
ie_tipo_convenio_w		smallint;
ie_se_necessario_w	varchar(1);
ie_aplic_lenta_w       	varchar(1);
ie_urgencia_w           	varchar(1);
ie_aplic_bolus_w		varchar(1);
ie_se_necessario_ww	varchar(1);
ie_aplic_lenta_ww       	varchar(1);
ie_urgencia_ww          	varchar(1);
ie_aplic_bolus_ww		varchar(1);
cd_unid_med_prescr_w	varchar(30);
cd_unid_med_prescr_dil_w	varchar(30);
qt_dose_prescr_w		double precision;
qt_dose_prescr_dil_w	double precision;
cd_material_convertido_w 	bigint;
cd_convenio_w		integer;
ie_gerar_autor_w		varchar(1)	:= 'N';
qt_reg_w			bigint;
ie_pre_medicacao_w	varchar(1);
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_seq_proc_interno_w	bigint;
qt_procedimento_w		double precision;
ie_lado_w		varchar(10);
nr_seq_procedimento_w	integer;
ie_consiste_dia_prim_ciclo_w	varchar(10);
nr_seq_solucao_w		bigint;
ie_tipo_dosagem_w		varchar(3);
qt_dosagem_w		double precision;
qt_solucao_total_w 		double precision;
qt_tempo_aplicacao_w	double precision;
qt_tempo_aplicacao_min_w	double precision;
nr_etapas_w		smallint;
--ie_bomba_infusao_w	varchar2(1);
ie_esquema_alternado_w	varchar(1);
ie_calc_aut_w 		varchar(1);
ie_acm_w		varchar(1);
ie_acm_soluc_w		varchar(1);
qt_hora_fase_w		double precision;
ds_solucao_w		varchar(100);
ds_orientacao_w		varchar(255);
--ie_se_necessario_w	varchar2(1);
ie_solucao_pca_w		varchar(1);
ie_tipo_analgesia_w	varchar(15);
ie_pca_modo_prog_w 	varchar(15);
qt_dose_inicial_pca_w	double precision;
qt_vol_infusao_pca_w	double precision;
qt_bolus_pca_w		double precision;
qt_intervalo_bloqueio_w	double precision;
qt_limite_quatro_hora_w	double precision;
qt_dose_ataque_w 		double precision;
ie_tipo_sol_w		varchar(5);
dt_atual_w		timestamp	:= clock_timestamp();
dt_atualizacao_nrec_w	timestamp;
qt_auc_w			real;
ie_agrupador_w          	smallint;
ie_pre_medicao_w 		varchar(1);
qt_tempo_medic_w		bigint;		
pr_reducao_w		bigint;
ie_separar_w		varchar(1)	:= 'N';
nr_seq_paciente_w		bigint;
ie_gerar_solucao_w		varchar(1);
qt_mg_carboplatina_w	double precision;
qt_clearance_creatinina_w 	double precision;
qt_creatinina_w		real;
ds_dias_gerados_w		varchar(4000)	:= null;
nr_seq_evento_w		bigint;
ie_aplica_reducao_w	varchar(1);
ie_aplica_reducao_ww	varchar(1);
cd_grupo_material_w	bigint;
cd_subgrupo_material_w	bigint;
cd_classe_material_w	bigint;
ie_regra_diluicao_cad_mat_w	varchar(1);
ie_interv_ciclo_w		varchar(1);
cd_recomendacao_w	bigint;
cd_kit_w			bigint;
nr_seq_classif_w		bigint;
ie_cons_dia_ant_ciclo_w	varchar(10);
ie_local_adm_w		varchar(10);
--ds_recomendacao_w	varchar2(4000);
nr_seq_proc_w		bigint;
qt_dias_intervalo_ww	bigint;
ds_lista_tipos_convenio_w	varchar(40) := '';
ie_gerar_tipo_convenio_w	varchar(15) := 'S';
ie_consiste_agenda_quimio_w varchar(1);
ds_bloqueio_agenda_qui_w	varchar(2000);
ds_retorno_w		varchar(2000);
--nr_seq_solucao_ww	number(10);
cd_estab_usuario_w	smallint;
ie_autoriza_gera_ciclo_w	varchar(1);
ie_autoriza_w		integer;
NR_SEQ_PROT_MED_w	bigint;
qt_peso_w		double precision;
qt_altura_w         		smallint;
PR_REDUCAO_ww	double precision;
nr_seq_ordem_adep_w	bigint;
qt_horas_dt_real_w		double precision;
ie_param_1201_w		varchar(1) := 'N';
IE_USO_CONTINUO_w	varchar(1) := 'N';	
ie_consiste_agrup_w	varchar(1);
nr_seq_item_agrup_w	integer;
nr_agrupamento_agrup_w	integer;
ds_retorno_agrup_w	varchar(255) := null;
ie_med_casa_dia_nao_util_w	varchar(3) := 'N';
ie_dia_so_med_casa_w	varchar(3) := 'N';
ie_ordenar_datas_ciclo_w	varchar(3) := 'N';
ie_interv_ciclo_data_w	varchar(3) := 'P';
nr_seq_medic_material_www	bigint;
nr_seq_diluicao_www	bigint;
ie_material_diluiacao_w	varchar(3);
ds_dose_diferenciada_w	varchar(50);
qt_dia_ciclo_ant_w		bigint;
dt_ciclo_ant_w		timestamp;
nr_ciclo_w		double precision;
qt_dias_inter_data_w	bigint	:= 0;
dt_inicio_ciclo_w		timestamp;
dt_inicio_ciclo_aux_w		timestamp;
ie_cons_data_dia_inicial_w	varchar(3);
cd_mat_med_w		bigint;
ie_situacao_w		varchar(1);
ds_medicamento_w		varchar(255);
ds_medicamento_ww		varchar(255);
nr_seq_mat_diluicao_w	bigint;
dt_atualizacao_nrec_ww	timestamp;	
ie_altera_medico_resp_w	varchar(1);	
ie_medico_inativo_w	varchar(1);
cd_medico_resp_w		varchar(10);
ie_tipo_atendimento_w	smallint;
nr_dias_vigente_ciclo_w	smallint;
dt_protocolo_w		timestamp;
cd_protocolo_w		bigint;
nr_seq_medicacao_w	bigint;
qt_dias_receita_w		integer;
ds_justificativa_w		varchar(2000);
ie_objetivo_w		varchar(1);
cd_topografia_cih_w	bigint;
cd_amostra_cih_w		bigint;
cd_microorganismo_cih_w	bigint;
ie_origem_infeccao_w	varchar(1);
ie_medicacao_paciente_w 	varchar(1) := 'N';
ds_protocolo_mes_w      	varchar(255);
qt_dias_mes_seguinte_w  	integer;
dt_mes_seguinte_w       	timestamp;
cd_kit_material_w		paciente_protocolo_proc.cd_kit_material%type;
ie_gerar_pend_quimio_w	varchar(1);
dt_ultimo_ciclo_gerado_w	timestamp;
dt_prevista_final_w		timestamp;
nr_agrup_regra_w		double precision;
ie_peso_considerar_w	varchar(1);
qt_fator_correcao_w	double precision;
sql_w               varchar(200);

c01 CURSOR FOR
SELECT	CASE WHEN ie_generico_w='S' THEN coalesce(b.cd_material_generico,a.cd_material)  ELSE a.cd_material END ,
	a.cd_unidade_medida,
	a.qt_dose,
	a.ie_via_aplicacao,
	a.ds_recomendacao,
	a.ds_observacao,
	a.nr_agrupamento,
	a.ds_dias_aplicacao,
	a.ds_ciclos_aplicacao,
	a.nr_seq_material,
	a.qt_min_aplicacao,
	a.ie_bomba_infusao,
	a.cd_intervalo,
	a.qt_hora_aplicacao,
	a.qt_dias_util,
	a.nr_seq_interno,
	a.ie_se_necessario,
	a.ie_aplic_lenta,
	a.ie_urgencia,            
	a.ie_aplic_bolus,
	a.cd_unid_med_prescr,
	a.qt_dose_prescr,
	a.nr_seq_interno,
	a.ie_pre_medicacao,
	a.nr_seq_material,
	a.nr_seq_paciente,
	a.ie_gerar_solucao,
	coalesce(ie_aplica_reducao,'S'),
	coalesce(ie_regra_diluicao_cad_mat,'N'),
	coalesce(ie_local_adm,'H'),
	a.NR_SEQ_PROT_MED,
	a.pr_reducao,
	a.nr_seq_ordem_adep,
	a.IE_USO_CONTINUO,
	a.ds_dose_diferenciada,
	a.ie_acm,
	a.qt_dias_receita,
	a.ds_justificativa,
	a.ie_objetivo,
	a.cd_topografia_cih,
	a.cd_amostra_cih,
	a.cd_microorganismo_cih,
	a.ie_origem_infeccao,
	coalesce(a.ie_medicacao_paciente,'N'),
	a.ie_peso_considerar,
	a.qt_fator_correcao,
	a.cd_unid_medida_ref,
	a.qt_dose_ref
from	material b,
	paciente_protocolo_medic a
where	a.cd_material		= b.cd_material
and	a.nr_seq_paciente	= nr_seq_paciente_p
and	coalesce(a.nr_seq_diluicao::text, '') = ''
and	coalesce(a.nr_seq_solucao::text, '') = ''
and	coalesce(a.nr_seq_procedimento::text, '') = ''
and	coalesce(a.nr_seq_medic_material::text, '') = ''
order by a.ds_dias_aplicacao, a.nr_seq_material;

c02 CURSOR FOR
SELECT	CASE WHEN ie_generico_w='S' THEN coalesce(b.cd_material_generico,a.cd_material)  ELSE a.cd_material END ,
	a.cd_unidade_medida,
	a.qt_dose,
	a.ie_via_aplicacao,
	a.ds_recomendacao,
	a.ds_observacao,
	a.nr_agrupamento,
	a.ds_dias_aplicacao,
	a.qt_min_aplicacao,
	a.ie_bomba_infusao,
	a.cd_intervalo,
	a.qt_hora_aplicacao,
	a.qt_dias_util,
	a.nr_seq_interno,
	a.ie_se_necessario,
	a.ie_aplic_lenta,
	a.ie_urgencia,            
	a.ie_aplic_bolus,
	a.nr_seq_interno,
	a.ie_agrupador,
	coalesce(a.ie_aplica_reducao,'S'),
	coalesce(ie_local_adm,'H'),
	'D',
	nr_seq_mat_diluicao,
	a.ie_acm,
	a.cd_unid_med_prescr,
	a.qt_dose_prescr,
	a.qt_dias_receita,
	a.cd_unid_medida_ref,
	a.qt_dose_ref
from	material b,
	paciente_protocolo_medic a
where	a.cd_material		= b.cd_material
and	a.nr_seq_paciente = nr_seq_paciente_p
and	a.nr_seq_diluicao = nr_seq_material_ww

union all

SELECT	CASE WHEN ie_generico_w='S' THEN coalesce(b.cd_material_generico,a.cd_material)  ELSE a.cd_material END ,
	a.cd_unidade_medida,
	a.qt_dose,
	a.ie_via_aplicacao,
	a.ds_recomendacao,
	a.ds_observacao,
	a.nr_agrupamento,
	a.ds_dias_aplicacao,
	a.qt_min_aplicacao,
	a.ie_bomba_infusao,
	a.cd_intervalo,
	a.qt_hora_aplicacao,
	a.qt_dias_util,
	a.nr_seq_interno,
	a.ie_se_necessario,
	a.ie_aplic_lenta,         
	a.ie_urgencia,            
	a.ie_aplic_bolus,
	a.nr_seq_interno,
	a.ie_agrupador,
	coalesce(a.ie_aplica_reducao,'S'),
	coalesce(ie_local_adm,'H'),
	'M',
	null,
	a.ie_acm,
	a.cd_unid_med_prescr,
	a.qt_dose_prescr,
	a.qt_dias_receita,
	a.cd_unid_medida_ref,
	a.qt_dose_ref
from	material b,
	paciente_protocolo_medic a
where	a.cd_material		= b.cd_material
and	a.nr_seq_paciente = nr_seq_paciente_p
and	a.nr_seq_medic_material = nr_seq_material_ww;

c03 CURSOR FOR
SELECT	a.cd_procedimento,
	a.ie_origem_proced,
	a.nr_seq_proc_interno,
	a.nr_agrupamento,
	a.qt_procedimento,
	a.ds_dias_aplicacao,
	a.cd_intervalo,
	a.ie_se_necessario,
	a.ie_lado,
	a.ie_acm,
	a.nr_seq_procedimento,
	a.nr_seq_ordem_adep,
	a.ds_ciclos_aplicacao,
	a.cd_kit_material,
	a.ie_local_adm
from	paciente_protocolo_proc a
where	a.nr_seq_paciente = nr_seq_paciente_p
order by 	nr_agrupamento;

c04 CURSOR FOR
SELECT	a.nr_seq_solucao,
	a.nr_agrupamento, 
	a.ds_dias_aplicacao, 
	a.ds_ciclos_aplicacao,
	a.ie_tipo_dosagem, 
	a.qt_dosagem, 
	a.qt_solucao_total, 
	a.qt_tempo_aplicacao, 
	a.qt_tempo_aplicacao_min, 
	a.nr_etapas, 
	a.ie_bomba_infusao, 
	a.ie_esquema_alternado, 
	a.ie_calc_aut, 
	a.ie_acm, 
	a.qt_hora_fase, 
	a.ds_solucao, 
	a.ds_orientacao, 
	a.ie_se_necessario, 
	a.ie_solucao_pca, 
	a.ie_tipo_analgesia, 
	a.ie_pca_modo_prog, 
	a.qt_dose_inicial_pca, 
	a.qt_vol_infusao_pca, 
	a.qt_bolus_pca, 
	a.qt_intervalo_bloqueio, 
	a.qt_limite_quatro_hora, 
	a.qt_dose_ataque, 
	a.ie_tipo_sol,
	a.ie_pre_medicacao,
	a.cd_intervalo,
	a.ie_via_aplicacao,
	a.nr_seq_ordem_adep,
	a.ie_local_adm
from	paciente_protocolo_soluc a
where	a.nr_seq_paciente = nr_seq_paciente_p
order by 	a.nr_seq_solucao,nr_agrupamento;

c05 CURSOR FOR
SELECT	CASE WHEN ie_generico_w='S' THEN coalesce(b.cd_material_generico,a.cd_material)  ELSE a.cd_material END ,
	a.cd_unidade_medida,
	a.qt_dose,
	coalesce(a.ie_via_aplicacao,b.ie_via_aplicacao) ie_via_aplicacao,
	a.ds_recomendacao,
	a.ds_observacao,
	a.nr_agrupamento,
	a.ds_dias_aplicacao,
	a.ds_ciclos_aplicacao,
	a.nr_seq_material,
	a.qt_min_aplicacao,
	a.ie_bomba_infusao,
	a.cd_intervalo,
	a.qt_hora_aplicacao,
	a.qt_dias_util,
	a.nr_seq_interno,
	a.ie_se_necessario,
	a.ie_aplic_lenta,
	a.ie_urgencia,            
	a.ie_aplic_bolus,
	cd_unid_med_prescr,
	qt_dose_prescr,
	a.nr_seq_interno,
	a.ie_pre_medicacao,
	coalesce(a.ie_aplica_reducao,'S'),
	a.ie_acm,
	a.qt_dias_receita,
	a.cd_unid_medida_ref,
	a.qt_dose_ref
from	material b,
	paciente_protocolo_medic a
where	a.cd_material		= b.cd_material
and	a.nr_seq_paciente = nr_seq_paciente_p
and	a.nr_seq_solucao = nr_seq_solucao_w
order by 	nr_seq_material;

c06 CURSOR FOR
	SELECT	nr_seq_evento
	from 	regra_envio_sms
	where	cd_estabelecimento = cd_estabelecimento_w
	and		ie_evento_disp 	=	'GCO'
	and	coalesce(ie_situacao,'A') = 'A';

c07 CURSOR FOR
	SELECT	ds_dias_aplicacao,
			ds_recomendacao,
			cd_recomendacao,
			cd_intervalo,
			ie_acm,
			ie_se_necessario,
			nr_seq_classif,
			ds_ciclos_aplicacao,
			nr_seq_ordem_adep,
			cd_kit,
			ie_local_adm
	from	paciente_protocolo_rec
	where	nr_seq_paciente = nr_seq_paciente_p;

C08 CURSOR FOR
	SELECT	nr_seq_material,
		nr_agrupamento
	from	paciente_protocolo_medic
	where	nr_seq_paciente = nr_seq_paciente_p
	and	coalesce(nr_seq_diluicao::text, '') = ''
	and	coalesce(nr_seq_solucao::text, '') = ''
	and	coalesce(nr_seq_procedimento::text, '') = '';

C09 CURSOR FOR
	SELECT	nr_seq_solucao,
		nr_agrupamento
	from	paciente_protocolo_soluc
	where	nr_seq_paciente = nr_seq_paciente_p;

C10 CURSOR FOR
	SELECT	cd_material
	from	paciente_protocolo_medic
	where	nr_seq_paciente = nr_seq_paciente_p;

c11 CURSOR FOR
	SELECT 	ie_tipo_convenio,
		cd_convenio,
		ie_tipo_atendimento
	from 	atendimento_paciente_v
	where	cd_pessoa_fisica	= cd_pessoa_fisica_w
	order by 	dt_entrada;

C12 CURSOR FOR
	SELECT	cd_material_comercial
	from	conversao_medic_onco
	where	cd_material_generico = cd_material_w
	and		((ie_tipo_convenio = coalesce(ie_tipo_convenio_w,0)) or (coalesce(ie_tipo_convenio::text, '') = ''))
	and		((cd_convenio = coalesce(cd_convenio_w,0)) or (coalesce(cd_convenio::text, '') = ''))
	and		ie_situacao = 'A'
	order by ie_tipo_convenio desc,
			 cd_convenio desc;	

procedure registrar_dia_gerado(dt_dia_p	timestamp, nr_ciclo_p bigint, ds_dia_ciclo_p text) is
;
BEGIN	
	ds_dias_gerados_w	:= substr(ds_dias_gerados_w||obter_desc_expressao(619521) ||nr_ciclo_p|| obter_desc_expressao(619522)||ds_dia_ciclo_p|| obter_desc_expressao(327202)||to_char(dt_dia_p,'dd/mm/yyyy hh24:mi:ss') ||chr(13)||chr(10),1,4000);
end;

begin

select	coalesce(max(coalesce(a.qt_dias_intervalo,b.nr_dias_intervalo)),0),
	max(a.cd_pessoa_fisica),
	max(a.qt_auc),
	max(a.qt_tempo_medic),
	max(a.pr_reducao)
into STRICT	qt_dias_intervalo_w,
	cd_pessoa_fisica_w,
	qt_auc_w,
	qt_tempo_medic_w,
	pr_reducao_w
FROM paciente_setor a
LEFT OUTER JOIN protocolo_medicacao b ON (a.cd_protocolo = b.cd_protocolo AND a.nr_seq_medicacao = b.nr_sequencia)
WHERE a.nr_seq_paciente = nr_seq_paciente_p;

dt_inicio_ciclo_w := dt_inicio_p;

cd_estab_usuario_w := wheb_usuario_pck.get_cd_estabelecimento;
nr_atendimento_w := null;
if (nr_atendimento_p > 0) then
	begin
		nr_atendimento_w	:= nr_atendimento_p;
		select	max(ie_tipo_convenio),
			max(obter_convenio_atendimento(nr_atendimento)),
			max(ie_tipo_atendimento)
		into STRICT	ie_tipo_convenio_w,
			cd_convenio_w,
			ie_tipo_atendimento_w
		from	atendimento_paciente
		where	nr_atendimento	= nr_atendimento_w;
	end;
end if;

if (coalesce(cd_convenio_w::text, '') = '') then
	open c11;
	loop
	fetch c11 into
		ie_tipo_convenio_w,
		cd_convenio_w,
		ie_tipo_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on c11 */
	end loop;
	close c11;
end if;

ie_generico_w := obter_param_usuario(281, 136, obter_perfil_ativo, nm_usuario_p, cd_estab_usuario_w, ie_generico_w);
ie_laudo_quimio_w := obter_param_usuario(281, 134, obter_perfil_ativo, nm_usuario_p, cd_estab_usuario_w, ie_laudo_quimio_w);
ie_consiste_dia_prim_ciclo_w := obter_param_usuario(281, 617, obter_perfil_ativo, nm_usuario_p, cd_estab_usuario_w, ie_consiste_dia_prim_ciclo_w);
ie_separar_w := obter_param_usuario(281, 825, obter_perfil_ativo, nm_usuario_p, cd_estab_usuario_w, ie_separar_w);
ds_lista_tipos_convenio_w := obter_param_usuario(281, 1041, obter_perfil_ativo, nm_usuario_p, cd_estab_usuario_w, ds_lista_tipos_convenio_w);
ie_consiste_agenda_quimio_w := obter_param_usuario(281, 1054, obter_perfil_ativo, nm_usuario_p, cd_estab_usuario_w, ie_consiste_agenda_quimio_w);
ie_consiste_agrup_w := obter_param_usuario(281, 1075, obter_perfil_ativo, nm_usuario_p, cd_estab_usuario_w, ie_consiste_agrup_w);
ie_autoriza_gera_ciclo_w := obter_param_usuario(281, 1095, obter_perfil_ativo, nm_usuario_p, cd_estab_usuario_w, ie_autoriza_gera_ciclo_w);
qt_horas_dt_real_w := obter_param_usuario(281, 1201, obter_perfil_ativo, nm_usuario_p, cd_estab_usuario_w, qt_horas_dt_real_w);
ie_altera_medico_resp_w := obter_param_usuario(281, 1391, obter_perfil_ativo, nm_usuario_p, cd_estab_usuario_w, ie_altera_medico_resp_w);
ds_protocolo_mes_w := obter_param_usuario(281, 1485, obter_perfil_ativo, nm_usuario_p, cd_estab_usuario_w, ds_protocolo_mes_w);
ie_gerar_pend_quimio_w := obter_param_usuario(865, 255, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_gerar_pend_quimio_w);

begin
	sql_w := 'call obter_param_1201_ciclo_onc_md(:1) into :ie_param_1201_w';
	EXECUTE sql_w using in qt_horas_dt_real_w,
								  out ie_param_1201_w;

exception
	when others then
		ie_param_1201_w := null;
end;



begin
	sql_w := 'begin obter_dt_ini_fim_ciclo_onc_md(:1, :2, :3, :4); end;';
	EXECUTE sql_w using in nr_dia_inicial_p,
								  in nr_dia_final_p, 
								  out nr_dia_inicial_w, 
								  out nr_dia_final_w;

exception
	when others then
		nr_dia_inicial_w := null;
		nr_dia_final_w := null;
end;

CALL Consiste_Obs_Oncologia(nr_seq_paciente_p, nm_usuario_p);

dt_atualizacao_nrec_ww := clock_timestamp();

select	max(obter_tipo_convenio(cd_convenio))
into STRICT	ie_tipo_convenio_w
from	paciente_setor_convenio
where	nr_seq_paciente = nr_seq_paciente_p;

select	max(qt_peso)
into STRICT	qt_peso_w
from	paciente_setor
where	nr_seq_paciente = nr_seq_paciente_p;

select	max(qt_altura)
into STRICT	qt_altura_w
from	paciente_setor
where	nr_seq_paciente = nr_seq_paciente_p;

select  max(CASE WHEN obter_situacao_medico(cd_medico_resp)='I' THEN 'S'  ELSE 'N' END ),
	max(to_char(cd_medico_resp))
into STRICT	ie_medico_inativo_w,
	cd_medico_resp_w	
from	paciente_setor
where	nr_seq_paciente = nr_seq_paciente_p;

select 	max(cd_protocolo),
	max(nr_seq_medicacao)
into STRICT	cd_protocolo_w,
	nr_seq_medicacao_w
from	paciente_setor
where	nr_seq_paciente = nr_seq_paciente_p;

select 	max(dt_prevista)
into STRICT	dt_ultimo_ciclo_gerado_w
from 	paciente_atendimento
where 	nr_atendimento = nr_atendimento_w
and     nr_seq_paciente = nr_seq_paciente_p;	

if (obter_se_contido(cd_protocolo_w, ds_protocolo_mes_w) = 'S' and (pkg_date_utils.extract_field('MONTH', dt_ultimo_ciclo_gerado_w)) = (pkg_date_utils.extract_field('MONTH', dt_inicio_p))) then

	CALL Wheb_mensagem_pck.exibir_mensagem_abort(795098);

end if;

open C10;
loop
fetch C10 into
	cd_mat_med_w;
EXIT WHEN NOT FOUND; /* apply on C10 */
	begin
	select	max(substr(obter_dados_material(cd_mat_med_w,'SIT'),1,1))
	into STRICT	ie_situacao_w
	;

	if (ie_situacao_w = 'I') then
		select	max(ds_material)
		into STRICT	ds_medicamento_w
		from	material
		where	cd_material = cd_mat_med_w;

		CALL Wheb_mensagem_pck.exibir_mensagem_abort(214974,'DS_MED_W=' || ds_medicamento_w);
	end if;
	end;
end loop;
close C10;

CALL Consiste_Regra_Consent_Ciclo(cd_pessoa_fisica_w,nm_usuario_p,nr_seq_paciente_p);

if (ie_laudo_quimio_w = 'S') and (ie_tipo_convenio_w = 3) then
	select	substr(obter_se_laudo_vigente(cd_pessoa_fisica_w,dt_inicio_ciclo_w,1),1,1)
	into STRICT	ie_laudo_quimio_w
	;
	if (ie_laudo_quimio_w = 'N') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(199040);
	end if;
end if;

dt_inicio_w	:= dt_inicio_ciclo_w;

select	coalesce(max(b.cd_estabelecimento),1)
into STRICT	cd_estabelecimento_w
from	paciente_setor		b,
	paciente_atendimento	a
where	a.nr_seq_paciente	= b.nr_seq_paciente 
and	a.nr_seq_paciente	= nr_seq_paciente_p;

select	coalesce(obter_valor_param_usuario(281, 142, obter_perfil_ativo, nm_usuario_p, coalesce(cd_estab_usuario_w,cd_estabelecimento_w)),'N')
into STRICT	vl_parametro_w
;

if (vl_parametro_w	= 'S') then
	CALL consiste_onco_laudo_apac(dt_inicio_ciclo_w, nr_seq_paciente_p, nr_ciclo_inicial_p, nr_ciclo_final_p, nr_dia_inicial_p,
							 nr_dia_final_p, cd_estabelecimento_w, nm_usuario_p);
end if;

ie_gerar_autor_w := obter_param_usuario(281, 385, obter_perfil_ativo, nm_usuario_p, coalesce(cd_estab_usuario_w,cd_estabelecimento_w), ie_gerar_autor_w);

select	coalesce(max( ie_interv_ciclo ),'I'),
		coalesce(max(ie_cons_dia_ant_ciclo),'N'),
		coalesce(max(ie_gerar_med_casa_dia_nao_util),'N'),
		coalesce(max(ie_ordenar_datas_ciclo),'N'),
		coalesce(max(ie_interv_ciclo_data),'P'),
		coalesce(max(ie_cons_data_dia_inicial),'S'),
		coalesce(max(nr_dias_vigente_ciclo),0)
into STRICT	ie_interv_ciclo_w,
		ie_cons_dia_ant_ciclo_w,
		ie_med_casa_dia_nao_util_w,
		ie_ordenar_datas_ciclo_w,
		ie_interv_ciclo_data_w,
		ie_cons_data_dia_inicial_w,
		nr_dias_vigente_ciclo_w
from	parametro_medico
where	cd_estabelecimento	= coalesce(cd_estab_usuario_w,cd_estabelecimento_w);

if (nr_dias_vigente_ciclo_w > 0) then

	select  trunc(dt_protocolo)
	into STRICT	dt_protocolo_w
	from    paciente_setor
	where	nr_seq_paciente = nr_seq_paciente_p;

	if ((trunc(clock_timestamp()) - dt_protocolo_w) > nr_dias_vigente_ciclo_w) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(296507);
	end if;	

end if;

select	coalesce(min(nr_ciclo),0)
into STRICT	nr_ciclo_w
from	paciente_atendimento
where	nr_seq_paciente = nr_seq_paciente_p
and 	coalesce(dt_cancelamento::text, '') = ''
and 	coalesce(dt_suspensao::text, '') = '';

if (nr_ciclo_w > 0) and (ie_interv_ciclo_w = 'I') then

	if (ie_interv_ciclo_data_w = 'P') then

		select  coalesce(min(somente_numero(ds_dia_ciclo)),0),
			min(dt_prevista)
		into STRICT	qt_dia_ciclo_ant_w,
			dt_ciclo_ant_w
		from	paciente_atendimento
		where	nr_seq_paciente = nr_seq_paciente_p
		and	nr_ciclo = nr_ciclo_w
		and 	coalesce(dt_cancelamento::text, '') = ''
		and 	coalesce(dt_suspensao::text, '') = '';

	else

		select  coalesce(min(somente_numero(ds_dia_ciclo)),0),
			min(coalesce(dt_real,dt_prevista))
		into STRICT	qt_dia_ciclo_ant_w,
			dt_ciclo_ant_w
		from	paciente_atendimento
		where	nr_seq_paciente = nr_seq_paciente_p
		and	nr_ciclo = nr_ciclo_w
		and 	coalesce(dt_cancelamento::text, '') = ''
		and 	coalesce(dt_suspensao::text, '') = '';

	end if;

	begin
		sql_w := 'call obter_dt_ini_ciclo_onc_md(:1, :2, :3) into :dt_inicio_ciclo_aux_w';
		EXECUTE sql_w	using in qt_dia_ciclo_ant_w,
									  in dt_ciclo_ant_w, 
									  in dt_inicio_ciclo_w, 
									  out dt_inicio_ciclo_aux_w;
	exception
		when others then
			dt_inicio_ciclo_aux_w := null;
	end;
end if;


if (nr_dia_inicial_p > 1 ) and (ie_interv_ciclo_w = 'I') and (ie_cons_dia_ant_ciclo_w = 'S')then

	for i in 1..nr_dia_inicial_p loop
		begin
			dt_inicio_w	:= dt_inicio_w - 1;

			ie_dia_util_w := obter_se_dia_util_oncologia(dt_inicio_w, cd_estabelecimento_w, nm_usuario_p,
														 ie_tipo_atendimento_w, cd_protocolo_w, nr_seq_medicacao_w);

			if (ie_consiste_agenda_quimio_w = 'S') and (ie_dia_util_w = 'S') then
				ds_bloqueio_agenda_qui_w := qt_obter_se_dia_livre(dt_inicio_w, nm_usuario_p, cd_estabelecimento_w);
				if (ds_bloqueio_agenda_qui_w IS NOT NULL AND ds_bloqueio_agenda_qui_w::text <> '') then
					ie_dia_util_w := 'N';
					ds_retorno_w := substr(ds_retorno_w || ds_bloqueio_agenda_qui_w || ', ',1,2000);
				end if;
			end if;

			while(ie_dia_util_w = 'N') loop
				begin
					dt_inicio_w	:= dt_inicio_w - 1;	

					ie_dia_util_w := obter_se_dia_util_oncologia(dt_inicio_w, cd_estabelecimento_w, nm_usuario_p,
																 ie_tipo_atendimento_w, cd_protocolo_w, nr_seq_medicacao_w);

					if (ie_consiste_agenda_quimio_w = 'S') and (ie_dia_util_w	= 'S') then
						ds_bloqueio_agenda_qui_w := qt_obter_se_dia_livre(dt_inicio_w, nm_usuario_p, cd_estabelecimento_w);
						if (ds_bloqueio_agenda_qui_w IS NOT NULL AND ds_bloqueio_agenda_qui_w::text <> '') then
							ie_dia_util_w := 'N';
						end if;
					end if;
				end;
			end loop;
		end;
	end loop;


	begin
		sql_w := 'call obter_dt_inicio_oncologia_md(:1, :2, :3) into :dt_inicio_aux_w';
		EXECUTE sql_w
			using in dt_inicio_w,in nr_dia_inicial_p, in 1, out dt_inicio_aux_w;

	exception
		when others then
			dt_inicio_aux_w := null;
	end;
	dt_inicio_w := dt_inicio_aux_w;


elsif (nr_dia_inicial_p > 0) and (ie_cons_data_dia_inicial_w = 'S') then	

	begin
		sql_w := 'call obter_dt_inicio_oncologia_md(:1, :2, :3) into :dt_inicio_w';

		EXECUTE sql_w
			using in dt_inicio_ciclo_w, in nr_dia_inicial_p, in 2, out dt_inicio_w;

	exception
		when others then
			dt_inicio_w := null;
	end;

elsif (nr_dia_inicial_p = 0) and (nr_ciclo_inicial_p <> nr_ciclo_final_p) and (ie_cons_data_dia_inicial_w = 'S') then	

	begin
	sql_w := 'call obter_dt_inicio_oncologia_md(:1, :2, :3) into :dt_inicio_w';

	EXECUTE sql_w
		using in dt_inicio_ciclo_w, in nr_dia_inicial_p, in 3,  out dt_inicio_w;

	exception
		when others then
			dt_inicio_w := null;
	end;

end if;

dt_inicio_dt_real_w	:= dt_inicio_w;
dt_ultima_dt_real_w	:= dt_inicio_w;

select	count(*)
into STRICT	ie_autoriza_w
from	PACIENTE_SETOR_CONVENIO
where	nr_seq_paciente = nr_seq_paciente_p;

if (ie_autoriza_gera_ciclo_w = 'S') and (ie_autoriza_w = 0) then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(199041);	
end if;

if (ie_consiste_agrup_w = 'C') then

	open C08;
	loop
	fetch C08 into	
		nr_seq_item_agrup_w,
		nr_agrupamento_agrup_w;
	EXIT WHEN NOT FOUND; /* apply on C08 */
		begin
		ds_retorno_agrup_w := consiste_agrupamento_onc(nr_seq_paciente_p, nr_seq_item_agrup_w, 'MED', nr_agrupamento_agrup_w, nm_usuario_p, ds_retorno_agrup_w);
		if (ds_retorno_agrup_w IS NOT NULL AND ds_retorno_agrup_w::text <> '') and (ie_consiste_agrup_w = 'C') then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(199043, 'DS_RETORNO_AGRUP=' || ds_retorno_agrup_w);

		end if;
		end;
	end loop;
	close C08;

	open C09;
	loop
	fetch C09 into	
		nr_seq_item_agrup_w,
		nr_agrupamento_agrup_w;
	EXIT WHEN NOT FOUND; /* apply on C09 */
		begin
		ds_retorno_agrup_w := consiste_agrupamento_onc(nr_seq_paciente_p, nr_seq_item_agrup_w, 'SOL', nr_agrupamento_agrup_w, nm_usuario_p, ds_retorno_agrup_w);
		if (ds_retorno_agrup_w IS NOT NULL AND ds_retorno_agrup_w::text <> '') and (ie_consiste_agrup_w = 'C') then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(199043, 'DS_RETORNO_AGRUP=' || ds_retorno_agrup_w);

		end if;
		end;
	end loop;
	close C09;

end if;

for i in nr_ciclo_inicial_p..nr_ciclo_final_p loop
	begin
	qt_nao_util_w := 0;
	qt_nao_util_dt_real_w := 0;

        open c01;
        loop
        fetch c01 into
            cd_material_w,
            cd_unidade_medida_w,
            qt_dose_w,
            ie_via_aplicacao_w,
            ds_recomendacao_w,
            ds_observacao_w,
            nr_agrupamento_w,
            ds_dias_aplicacao_w,
            ds_ciclos_aplicacao_w,
            nr_seq_material_ww,
            qt_min_aplicacao_w,
            ie_bomba_infusao_w,
            cd_intervalo_w,
            qt_hora_aplicacao_w,
            qt_dias_util_w,
            nr_seq_interno_ww,
            ie_se_necessario_w,
            ie_aplic_lenta_w,
            ie_urgencia_w,
            ie_aplic_bolus_w,
            cd_unid_med_prescr_w,
            qt_dose_prescr_w,
            nr_seq_int_prot_medic_w,
            ie_pre_medicacao_w,
            nr_seq_mat_w,
            nr_seq_paciente_w,
            ie_gerar_solucao_w,
            ie_aplica_reducao_w,
            ie_regra_diluicao_cad_mat_w,
            ie_local_adm_w,
            NR_SEQ_PROT_MED_w,
            pr_reducao_ww,
            nr_seq_ordem_adep_w,
            IE_USO_CONTINUO_w,
            ds_dose_diferenciada_w,
            ie_acm_w,
            qt_dias_receita_w,
            ds_justificativa_w,
            ie_objetivo_w,
            cd_topografia_cih_w,
            cd_amostra_cih_w,
            cd_microorganismo_cih_w,
            ie_origem_infeccao_w,
            ie_medicacao_paciente_w,
            ie_peso_considerar_w,
            qt_fator_correcao_w,
            cd_unidade_med_ref_w,
            qt_dose_ref_w;
            EXIT WHEN NOT FOUND; /* apply on c01 */
            begin

			open C12;
			loop
			fetch C12 into	
				cd_material_convertido_w;
			EXIT WHEN NOT FOUND; /* apply on C12 */
				begin
					if (cd_material_convertido_w > 0) then
						cd_material_w := cd_material_convertido_w;
					end if;	
				end;
			end loop;
			close C12;		
      			
      begin
         select max(ds_material)
           into STRICT ds_medicamento_ww
           from material
          where cd_material = cd_material_w;
      exception
        when others then
          ds_medicamento_ww := null;
      end;


            if (ds_ciclos_aplicacao_w IS NOT NULL AND ds_ciclos_aplicacao_w::text <> '') then
                ds_ciclos_aplicacao_w	:= replace(ds_ciclos_aplicacao_w,' ','');
                ds_texto_w		:= '';
                for y in 1..length(ds_ciclos_aplicacao_w) loop
                    x	:= substr(upper(ds_ciclos_aplicacao_w), y, 1);	
                    if (position(x in ds_valido_ciclos_w) > 0) then
                        ds_texto_w	:= ds_texto_w || x;
                    else
                      CALL Wheb_mensagem_pck.exibir_mensagem_abort(1184670, 'DS_MATERIAL=' ||'('||ds_medicamento_ww||')');

                    end if;
                end loop;
                ds_ciclos_aplicacao_w	:= ds_texto_w;
                ds_ciclos_aplicacao_w	:= ',' || ds_ciclos_aplicacao_w || ',';
            end if;

		ds_dias_aplicacao_w	:= replace(ds_dias_aplicacao_w,' ','');
		ds_texto_w		:= '';
		for y in 1..length(ds_dias_aplicacao_w) loop
			x	:= substr(upper(ds_dias_aplicacao_w), y, 1);	
			if (position(x in ds_valido_dias_w) > 0) then
				ds_texto_w	:= ds_texto_w || x;
			else
        CALL Wheb_mensagem_pck.exibir_mensagem_abort(1184669, 'DS_MATERIAL=' ||'('||ds_medicamento_ww||')');

			end if;
		end loop;
		ds_dias_aplicacao_w	:= ds_texto_w;
		z	:= 0;
		ds_dias_aplicacao_w	:= ds_dias_aplicacao_w ||',';
		cont_w	:= 0;
		dias_w.delete;
		while	(ds_dias_aplicacao_w IS NOT NULL AND ds_dias_aplicacao_w::text <> '') loop
			begin
			posicao_w	:= position(',' in ds_dias_aplicacao_w);
			z := z + 1;
			dias_w[z].ds_dias_aplicacao	:= substr(ds_dias_aplicacao_w,1,posicao_w - 1);
			ds_dias_aplicacao_w		:= substr(ds_dias_aplicacao_w,posicao_w + 1,length(ds_dias_aplicacao_w));
			begin
			if (substr(dias_w[z].ds_dias_aplicacao,1,1) <> 'D') or (length(dias_w[z].ds_dias_aplicacao) < 2) or (position('D' in substr(dias_w[z].ds_dias_aplicacao,2,length(dias_w[z].ds_dias_aplicacao)-1)) > 0) then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(199045, 'CD_MATERIAL=' || TO_CHAR(cd_material_w));

			end if;
			exception
				when others then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(199045, 'CD_MATERIAL=' || TO_CHAR(cd_material_w));

			end;
			cont_w	:= cont_w + 1;
			if (cont_w > 850) then
				exit;
			end if;
			end;
		end loop;

		r		:= 1;
		k		:= 1;
		qt_count_w	:= dias_w.count;
		while(r <= qt_count_w) loop
			begin

			begin
			dia_w	:= dias_w[k].ds_dias_aplicacao;
			dia_w	:= substr(dia_w,2,length(dia_w));
			dia_w	:= dia_w + qt_nao_util_w; /* Soma o dia do ciclo mais a quantidade de dias nao uteis*/
			exception
				when others then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(199046, 'CD_MATERIAL=' || TO_CHAR(cd_material_w));

			end;

				if (i	> nr_ciclo_inicial_p)	and (ie_consiste_dia_prim_ciclo_w	= 'S')then
					nr_dia_inicial_w	:= -99999999;
				end if;

			if  ((coalesce(ds_ciclos_aplicacao_w::text, '') = '') or (position(',C'||i||',' in ds_ciclos_aplicacao_w) > 0)) and ((campo_numerico(dia_w) IS NOT NULL AND (campo_numerico(dia_w))::text <> '')) and
			    ((somente_numero_real(nr_dia_inicial_w) <= somente_numero_real(dias_w[k].ds_dias_aplicacao)) or (i > nr_ciclo_inicial_p)) and
				((coalesce(nr_dia_final_p::text, '') = '') or (somente_numero_real(nr_dia_final_w) >= somente_numero_real(dias_w[k].ds_dias_aplicacao))) then


			   begin
					sql_w := 'call obter_dt_prevista_onc_md(:1, :2, :3) into :dt_prevista_aux_w';
					EXECUTE sql_w using in dt_inicio_w,
												  in dia_w, 
												  in dias_w[k].ds_dias_aplicacao,
												  out dt_prevista_aux_w;
				exception
					when others then
						dt_prevista_aux_w := null;
				end;
				dt_prevista_w := dt_prevista_aux_w;

				r	:= r + 1;
				if (r > 5000) then
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(199047);			

				end if;

				ie_dia_so_med_casa_w := 'N';
				if (ie_med_casa_dia_nao_util_w = 'S') then
					select	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END
					into STRICT	ie_dia_so_med_casa_w
					from	material b,
						paciente_protocolo_medic a
					where	a.cd_material		= b.cd_material
					and	a.nr_seq_paciente	= nr_seq_paciente_p
					and	coalesce(a.nr_seq_diluicao::text, '') = ''
					and	coalesce(a.nr_seq_solucao::text, '') = ''
					and	coalesce(a.nr_seq_procedimento::text, '') = ''
					and	coalesce(a.ie_local_adm,'H') <> 'C'
					and	position(','||dias_w[k].ds_dias_aplicacao||',' in ','||replace(ds_dias_aplicacao,' ','')||',') > 0;

				end if;

				ie_dia_util_w	:=	'S';
				if (ie_consiste_dia_util_p = 'S') and ((ie_med_casa_dia_nao_util_w = 'N') or (ie_dia_so_med_casa_w = 'N')) then
					select	obter_se_dia_util_oncologia(dt_prevista_w, coalesce(cd_estab_usuario_w,cd_estabelecimento_w), nm_usuario_p,ie_tipo_atendimento_w,cd_protocolo_w,nr_seq_medicacao_w)
					into STRICT	ie_dia_util_w
					;
					if (ie_consiste_agenda_quimio_w = 'S') and (ie_dia_util_w	= 'S') then
						ds_bloqueio_agenda_qui_w := qt_obter_se_dia_livre(dt_prevista_w, nm_usuario_p, coalesce(cd_estab_usuario_w,cd_estabelecimento_w));
						if (ds_bloqueio_agenda_qui_w IS NOT NULL AND ds_bloqueio_agenda_qui_w::text <> '') then
							ie_dia_util_w	:= 'N';
							ds_retorno_w	:= substr(ds_retorno_w || ds_bloqueio_agenda_qui_w || ', ',1,2000);
						end if;
					end if;
				end if;


				select	coalesce(max(nr_seq_atendimento),0) ,
					max(dt_atualizacao_nrec)
				into STRICT	nr_seq_atendimento_w,
					dt_atualizacao_nrec_w
				from	paciente_atendimento
				where	nr_seq_paciente	= nr_seq_paciente_p
				and	nr_ciclo	= i
				and	ds_dia_ciclo	= dias_w[k].ds_dias_aplicacao
				and	((ie_exige_liberacao	= 'N') or (ie_separar_w	= 'N'))
				and	coalesce(dt_cancelamento::text, '') = ''
				and     coalesce(dt_suspensao::text, '') = ''
				and	coalesce(substr(Qt_Obter_Status_Agenda(nr_seq_atendimento),1,50),'XPTO')	<> 'F'	;

				if (ie_dia_util_w	= 'S') or (nr_seq_atendimento_w >0) then
					begin

					select	coalesce(max(nr_seq_atendimento),0) ,
						max(dt_atualizacao_nrec)
					into STRICT	nr_seq_atendimento_w,
						dt_atualizacao_nrec_w
					from	paciente_atendimento
					where	nr_seq_paciente	= nr_seq_paciente_p
					and	nr_ciclo	= i
					and	ds_dia_ciclo	= dias_w[k].ds_dias_aplicacao
					and	((ie_exige_liberacao	= 'N') or (ie_separar_w	= 'N'))
					and	coalesce(dt_cancelamento::text, '') = ''
					and     coalesce(dt_suspensao::text, '') = ''
					and	coalesce(substr(Qt_Obter_Status_Agenda(nr_seq_atendimento),1,50),'XPTO')	<> 'F'	;

					if (nr_seq_atendimento_w = 0) then
						begin
						if (ie_gera_data_real_p	= 'S') then
							dt_real_w	:= dt_prevista_w;

							if (ie_param_1201_w = 'S') and (trunc(dt_inicio_ciclo_w) = trunc(clock_timestamp())) then

								begin
									sql_w := 'call obter_data_real_oncologia_md(:1, :2, :3, :4) into :dt_real_w';

									EXECUTE sql_w using in dt_inicio_dt_real_w,
																  in dias_w[k].ds_dias_aplicacao, 
																  in qt_nao_util_dt_real_w, 
																  in qt_horas_dt_real_w,
																  out dt_real_w;

								exception
									when others then
										dt_real_w := null;
								end;

								ie_dia_util_dt_real_w	:=	'N';
								if (ie_consiste_dia_util_p = 'S') then
									r2 := 1;
									while(ie_dia_util_dt_real_w = 'N') loop
										select	obter_se_dia_util_oncologia(dt_real_w, cd_estabelecimento_w, nm_usuario_p,ie_tipo_atendimento_w,cd_protocolo_w,nr_seq_medicacao_w)
										into STRICT	ie_dia_util_dt_real_w
										;
										if (ie_consiste_agenda_quimio_w	= 'S') and (ie_dia_util_dt_real_w	= 'S') then
											ds_bloqueio_agenda_qui_w	:= qt_obter_se_dia_livre(dt_real_w, nm_usuario_p, cd_estabelecimento_w);
											if (ds_bloqueio_agenda_qui_w IS NOT NULL AND ds_bloqueio_agenda_qui_w::text <> '') then
												ie_dia_util_dt_real_w	:= 'N';
											end if;
										end if;

										if (ie_dia_util_dt_real_w = 'N') then
											dt_real_w		:= dt_real_w + 1;
											qt_nao_util_dt_real_w	:= qt_nao_util_dt_real_w + 1;
										end if;

										r2 := r2 + 1;
										if (r2 > 100) then
											dt_real_w	:= dt_prevista_w;
											ie_dia_util_dt_real_w	:= 'S';
										end if;
									end loop;
									if (dt_real_w > dt_ultima_dt_real_w) then
										dt_ultima_dt_real_w := dt_real_w;
									end if;
								end if;
							end if;
						end if;

						dt_atualizacao_nrec_w	:= dt_atual_w;
						select	nextval('paciente_atendimento_seq')
						into STRICT	nr_seq_atendimento_w
						;

						select 	qt_mg_carboplatina,
							qt_clearance_creatinina, 
							qt_creatinina
						into STRICT	qt_mg_carboplatina_w, 
							qt_clearance_creatinina_w, 
							qt_creatinina_w
						from    paciente_setor
						where	nr_seq_paciente = nr_seq_paciente_p;

						insert into paciente_atendimento(
							nr_seq_atendimento,
							nr_seq_paciente,
							nr_ciclo,
							ds_dia_ciclo,
							dt_prevista,
							dt_real,
							dt_atualizacao,
							nm_usuario,
							qt_peso,
							qt_altura,
							nr_seq_protocolo,
							ie_exige_liberacao,
							nr_atendimento,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ie_l_dl_creatinina,
							qt_auc,
							qt_tempo_medic,
							pr_reducao,
							qt_mg_carboplatina,
							qt_clearance_creatinina, 
							qt_creatinina)
						values (	nr_seq_atendimento_w,
							nr_seq_paciente_p,
							i,
							dias_w[k].ds_dias_aplicacao,
							dt_prevista_w,
							dt_real_w,
							dt_atual_w,
							nm_usuario_p,
							coalesce(qt_peso_w,qt_peso_p),
							qt_altura_w,
							nr_seq_protoclo_p,
							'N',
							nr_atendimento_w,
							dt_atualizacao_nrec_ww,
							nm_usuario_p,
							1,
							qt_auc_w,
							qt_tempo_medic_w,
							pr_reducao_w,
							qt_mg_carboplatina_w, 
							qt_clearance_creatinina_w, 
							qt_creatinina_w);	
							end;

						registrar_dia_gerado(dt_prevista_w,i,dias_w[k].ds_dias_aplicacao);
					end if;
					
					select	coalesce(max(nr_seq_material),0) + 1
					into STRICT	nr_seq_material_w
					from	paciente_atend_medic
					where	nr_seq_atendimento = nr_seq_atendimento_w;

					select	nextval('paciente_atend_medic_seq')
					into STRICT	nr_seq_interno_w
					;

					select	count(*)
					into STRICT	qt_registro_w
					from	paciente_atend_medic a
					where	a.nr_seq_atendimento	=	nr_seq_atendimento_w
					and	a.cd_material		=	cd_material_w
					and	a.qt_dose		=	qt_dose_w
					and	a.cd_intervalo		=	cd_intervalo_w
					and	a.ds_recomendacao	=	ds_recomendacao_w;

					select	coalesce(max('S'),'N')
					into STRICT	ie_tem_prescricao_w
					from	paciente_atendimento
					where	nr_seq_atendimento	=	nr_seq_atendimento_w
					and	(nr_prescricao IS NOT NULL AND nr_prescricao::text <> '');	


					/* Hoje o agrupamento do mateiral e de seu diluente geram diferentes, criei essa variavel para caso seja necessario
					   gerar os dois identicos ja utilizar ela no C02 no lugar da variavel nr_agrupamento_ww*/
					nr_agrup_regra_w :=  coalesce(obter_sequenciamento_protocolo(cd_protocolo_w, nr_seq_material_ww, nr_seq_medicacao_w, i,replace(dias_w[k].ds_dias_aplicacao,'D','')), nr_agrupamento_w);


					if (qt_registro_w = 0) and (ie_tem_prescricao_w = 'N') and (PKG_DATE_UTILS.START_OF(dt_atualizacao_nrec_w, 'mi') = PKG_DATE_UTILS.START_OF(dt_atual_w, 'mi')) then
						begin						


						insert into paciente_atend_medic(
							nr_seq_atendimento,
							nr_seq_material,
							cd_material,
							dt_atualizacao,
							nm_usuario,
							nr_agrupamento,
							qt_dose,
							cd_unid_med_dose,
							ds_recomendacao,
							ds_observacao,
							ie_via_aplicacao,
							qt_min_aplicacao,
							ie_bomba_infusao,
							cd_intervalo,
							qt_hora_aplicacao,
							qt_dias_util,
							nr_seq_interno,
							nr_seq_prot_medic,
							ie_cancelada,
							ie_administracao,
							ie_checado,
							ie_se_necessario,
							ie_urgencia,            
							ie_aplic_bolus,         
							ie_aplic_lenta,
							qt_dose_prescricao,
							cd_unid_med_prescr,
							nr_seq_int_prot_medic,
							ie_pre_medicacao,
							nr_seq_mat_protocolo,
							nr_seq_paciente,
							ie_gerar_solucao,
							ie_aplica_reducao,
							ie_regra_diluicao_cad_mat,
							ie_local_adm,
							NR_SEQ_PROT_MED,
							pr_reducao,
							nr_seq_ordem_adep,
							IE_USO_CONTINUO,
							ds_dose_diferenciada,
							ie_acm,
							qt_dias_receita,
							ds_justificativa,
							ie_objetivo,
							cd_topografia_cih,
							cd_amostra_cih,
							cd_microorganismo_cih,
							ie_origem_infeccao,
							ie_medicacao_paciente,
							nr_seq_mat_pro,
							ie_peso_considerar,
							qt_fator_correcao,
							cd_unid_medida_ref,
							qt_dose_ref)
						values (	nr_seq_atendimento_w,
							nr_seq_material_w,
							cd_material_w,
							clock_timestamp(),
							nm_usuario_p,
							nr_agrup_regra_w,
							qt_dose_w,
							cd_unidade_medida_w,
							ds_recomendacao_w,
							ds_observacao_w,
							ie_via_aplicacao_w,
							qt_min_aplicacao_w,
							ie_bomba_infusao_w,
							cd_intervalo_w,
							qt_hora_aplicacao_w,
							qt_dias_util_w,
							nr_seq_interno_w,
							nr_seq_interno_ww,
							'N',
							'P',
							'N',
							ie_se_necessario_w,
							ie_urgencia_w,
							ie_aplic_bolus_w,
							ie_aplic_lenta_w,
							--qt_dose_prescr_w,

							--cd_unid_med_prescr_w);
							CASE WHEN obter_se_gerar_dose_um_ciclo(cd_unid_med_prescr_w,qt_dose_prescr_w)='S' THEN  qt_dose_prescr_w  ELSE null END ,
							CASE WHEN obter_se_gerar_dose_um_ciclo(cd_unid_med_prescr_w,qt_dose_prescr_w)='S' THEN  cd_unid_med_prescr_w  ELSE null END ,
							nr_seq_int_prot_medic_w,
							ie_pre_medicacao_w,
							nr_seq_material_w,
							nr_seq_paciente_w,
							ie_gerar_solucao_w,
							ie_aplica_reducao_w,
							ie_regra_diluicao_cad_mat_w,
							ie_local_adm_w,
							NR_SEQ_PROT_MED_w,
							pr_reducao_ww,
							nr_seq_ordem_adep_w,
							IE_USO_CONTINUO_w,
							ds_dose_diferenciada_w,
							ie_acm_w,
							qt_dias_receita_w,
							ds_justificativa_w,
							ie_objetivo_w,
							cd_topografia_cih_w,
							cd_amostra_cih_w,
							cd_microorganismo_cih_w,
							ie_origem_infeccao_w,
							ie_medicacao_paciente_w,
							nr_seq_material_ww,
							ie_peso_considerar_w,
							qt_fator_correcao_w,
							cd_unidade_med_ref_w,
							qt_dose_ref_w);						

						CALL copiar_just_prot_atend_onc(nr_seq_paciente_w,nr_seq_atendimento_w,nr_seq_mat_w,nr_seq_material_w);

						begin
						select	cd_grupo_material,
							cd_subgrupo_material,
							cd_classe_material
						into STRICT	cd_grupo_material_w,
							cd_subgrupo_material_w,
							cd_classe_material_w
						from	estrutura_material_v
						where	cd_material	= cd_material_w;
						exception
							when others then
							cd_grupo_material_w	:= 0;
							cd_subgrupo_material_w	:= 0;
							cd_classe_material_w	:= 0;
						end;

						select	coalesce(max('S'),'N')
						into STRICT	ie_exige_liberacao_w
						from	quimio_drogas_liberacao
						where	coalesce(cd_material,cd_material_w)			= cd_material_w
						and	coalesce(cd_grupo_material,cd_grupo_material_w)	= cd_grupo_material_w
						and	coalesce(cd_subgrupo_material,cd_subgrupo_material_w)= cd_subgrupo_material_w
						and	coalesce(cd_classe_material,cd_classe_material_w)	= cd_classe_material_w
						and cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

						update	paciente_atendimento
						set	ie_exige_liberacao	= ie_exige_liberacao_w
						where	nr_seq_atendimento	= nr_seq_atendimento_w
						and	ie_exige_liberacao	= 'N';

						end;
					end if;

					open c02;
					loop
					fetch c02 into
						cd_material_ww,
						cd_unidade_medida_ww,
						qt_dose_ww,
						ie_via_aplicacao_ww,
						ds_recomendacao_ww,
						ds_observacao_ww,
						nr_agrupamento_ww,
						ds_dias_aplicacao_ww,
						qt_min_aplicacao_ww,
						ie_bomba_infusao_ww,
						cd_intervalo_ww,
						qt_hora_aplicacao_ww,
						qt_dias_util_ww,
						nr_seq_interno_ww,
						ie_se_necessario_ww,
						ie_aplic_lenta_ww,
						ie_urgencia_ww,
						ie_aplic_bolus_ww,
						nr_seq_int_prot_medic_w,
						ie_agrupador_w,
						ie_aplica_reducao_ww,
						ie_local_adm_w,
						ie_material_diluiacao_w,
						nr_seq_mat_diluicao_w,
						ie_acm_w,
						cd_unid_med_prescr_dil_w,
						qt_dose_prescr_dil_w,
						qt_dias_receita_w,
						cd_unidade_med_ref_w,
						qt_dose_ref_w;
						EXIT WHEN NOT FOUND; /* apply on c02 */
						begin

						begin
							sql_w := 'begin obter_seq_dil_ciclo_onc_md  (:1, :2, :3, :4); end;';
							EXECUTE sql_w using in ie_material_diluiacao_w,
														  in nr_seq_material_w, 
														  out nr_seq_diluicao_www, 
														  out nr_seq_medic_material_www;

						exception
						when others then
							nr_seq_medic_material_www := null;
							nr_seq_diluicao_www := null;
						end;
						
						select	coalesce(max(cd_material_comercial),0)
						into STRICT	cd_material_convertido_w
						from	conversao_medic_onco
						where	cd_material_generico = cd_material_ww
						and		((ie_tipo_convenio = coalesce(ie_tipo_convenio_w,0)) or (coalesce(ie_tipo_convenio::text, '') = ''))
						and		ie_situacao = 'A';

						if (cd_material_convertido_w > 0) then
							cd_material_ww := cd_material_convertido_w;
						end if;

						select	coalesce(max(nr_seq_material),0) + 1
						into STRICT	nr_seq_mat_dil_w
						from	paciente_atend_medic 
						where	nr_seq_atendimento = nr_seq_atendimento_w;

						select	nextval('paciente_atend_medic_seq')
						into STRICT	nr_seq_interno_w
						;

						insert into paciente_atend_medic(
							nr_seq_atendimento,
							nr_seq_material,
							cd_material,
							dt_atualizacao,
							nm_usuario,
							nr_agrupamento,
							qt_dose,
							cd_unid_med_dose,
							ds_recomendacao,
							ds_observacao,
							ie_via_aplicacao,
							nr_seq_diluicao,
							qt_min_aplicacao,
							ie_bomba_infusao,
							cd_intervalo,
							qt_hora_aplicacao,
							qt_dias_util,
							nr_seq_interno,
							nr_seq_prot_medic,
							ie_cancelada,
							ie_administracao,
							ie_checado,
							ie_se_necessario,
							ie_urgencia,            
							ie_aplic_bolus,         
							ie_aplic_lenta,
							nr_seq_int_prot_medic,
							ie_agrupador,
							ie_aplica_reducao,
							ie_local_adm,
							nr_seq_medic_material,
							nr_seq_mat_diluicao,
							ie_acm,
							cd_unid_med_prescr,
							qt_dose_prescricao,
							qt_dias_receita,
							ie_medicacao_paciente,
							ie_peso_considerar,
							qt_fator_correcao,
							cd_unid_medida_ref,
							qt_dose_ref)
						values (	nr_seq_atendimento_w,
							nr_seq_mat_dil_w,
							cd_material_ww,
							clock_timestamp(),
							nm_usuario_p,
							nr_agrupamento_ww,
							qt_dose_ww,
							cd_unidade_medida_ww,
							ds_recomendacao_ww,
							ds_observacao_ww,
							ie_via_aplicacao_ww,
							nr_seq_diluicao_www,
							qt_min_aplicacao_ww,
							ie_bomba_infusao_ww,
							cd_intervalo_ww,
							qt_hora_aplicacao_ww,
							qt_dias_util_ww,
							nr_seq_interno_w,
							nr_seq_interno_ww,
							'N',
							'P',
							'N',
							ie_se_necessario_ww,
							ie_urgencia_ww,
							ie_aplic_bolus_ww,
							ie_aplic_lenta_ww,
							nr_seq_int_prot_medic_w,
							ie_agrupador_w,
							ie_aplica_reducao_ww,
							ie_local_adm_w,
							nr_seq_medic_material_www,
							nr_seq_mat_diluicao_w,
							ie_acm_w,
							cd_unid_med_prescr_dil_w,
							qt_dose_prescr_dil_w,
							qt_dias_receita_w,
							ie_medicacao_paciente_w,
							ie_peso_considerar_w,
							qt_fator_correcao_w,
							cd_unidade_med_ref_w,
							qt_dose_ref_w);

						begin
						select	cd_grupo_material,
							cd_subgrupo_material,
							cd_classe_material
						into STRICT	cd_grupo_material_w,
							cd_subgrupo_material_w,
							cd_classe_material_w
						from	estrutura_material_v
						where	cd_material	= cd_material_w;
						exception
							when others then
							cd_grupo_material_w	:= 0;
							cd_subgrupo_material_w	:= 0;
							cd_classe_material_w	:= 0;
						end;

						select	coalesce(max('S'),'N')
						into STRICT	ie_exige_liberacao_w
						from	quimio_drogas_liberacao
						where	coalesce(cd_material,cd_material_w)			= cd_material_w
						and	coalesce(cd_grupo_material,cd_grupo_material_w)	= cd_grupo_material_w
						and	coalesce(cd_subgrupo_material,cd_subgrupo_material_w)= cd_subgrupo_material_w
						and	coalesce(cd_classe_material,cd_classe_material_w)	= cd_classe_material_w
						and cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

						update	paciente_atendimento
						set	ie_exige_liberacao	= ie_exige_liberacao_w
						where	nr_seq_atendimento	= nr_seq_atendimento_w
						and	ie_exige_liberacao	= 'N';

						end;	
					end loop;
					close c02;



					k	:= k + 1;
					end;
				else	
					qt_count_w	:= qt_count_w + 1;
					qt_nao_util_w	:= qt_nao_util_w + 1;
				end if;

				if (coalesce(dt_prevista_final_w::text, '') = '') or (dt_prevista_final_w < dt_prevista_w) then
				   dt_prevista_final_w := dt_prevista_w;
				end if;
			else
				r	:= r + 1;
				k	:= k + 1;
			end if;

			end;
		nr_agrup_regra_w := null;

		end loop;
		end;
	end loop;
	close c01;

	end;

	open c03;
	loop
	fetch c03 into	
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_proc_interno_w,
		nr_agrupamento_w,
		qt_procedimento_w,
		ds_dias_aplicacao_w,
		cd_intervalo_w,
		ie_se_necessario_w,
		ie_lado_w,
		ie_acm_w,
		nr_seq_proc_w,
		nr_seq_ordem_adep_w,
		ds_ciclos_aplicacao_w,
		cd_kit_material_w,
		IE_LOCAL_ADM_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin

		if (ds_ciclos_aplicacao_w IS NOT NULL AND ds_ciclos_aplicacao_w::text <> '') then
			ds_ciclos_aplicacao_w	:= replace(ds_ciclos_aplicacao_w,' ','');
			ds_texto_w		:= '';
			for y in 1..length(ds_ciclos_aplicacao_w) loop
				x	:= substr(upper(ds_ciclos_aplicacao_w), y, 1);	
				if (position(x in ds_valido_ciclos_w) > 0) then
					ds_texto_w	:= ds_texto_w || x;
				else
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(199048, 'CD_PROCEDIMENTO=' || TO_CHAR(cd_procedimento_w));

				end if;
			end loop;
			ds_ciclos_aplicacao_w	:= ds_texto_w;
			ds_ciclos_aplicacao_w	:= ',' || ds_ciclos_aplicacao_w || ',';
		end if;				

		ds_dias_aplicacao_w	:= replace(ds_dias_aplicacao_w,' ','');
		ds_texto_w		:= '';
		for y in 1..length(ds_dias_aplicacao_w) loop
			x	:= substr(upper(ds_dias_aplicacao_w), y, 1);	
			if (position(x in ds_valido_dias_w) > 0) then
				ds_texto_w	:= ds_texto_w || x;
			else
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(199048, 'CD_PROCEDIMENTO=' || TO_CHAR(cd_procedimento_w));

			end if;
		end loop;

		ds_dias_aplicacao_w	:= ds_texto_w;
		z	:= 0;
		ds_dias_aplicacao_w	:= ds_dias_aplicacao_w ||',';
		cont_w	:= 0;
		dias_w.delete;
		while	(ds_dias_aplicacao_w IS NOT NULL AND ds_dias_aplicacao_w::text <> '') loop
			begin
			posicao_w	:= position(',' in ds_dias_aplicacao_w);
			z := z + 1;
			dias_w[z].ds_dias_aplicacao	:= substr(ds_dias_aplicacao_w,1,posicao_w - 1);
			ds_dias_aplicacao_w		:= substr(ds_dias_aplicacao_w,posicao_w + 1,length(ds_dias_aplicacao_w));
			begin
			if (substr(dias_w[z].ds_dias_aplicacao,1,1) <> 'D') or (length(dias_w[z].ds_dias_aplicacao) < 2) or (position('D' in substr(dias_w[z].ds_dias_aplicacao,2,length(dias_w[z].ds_dias_aplicacao)-1)) > 0) then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(199048, 'CD_PROCEDIMENTO=' || TO_CHAR(cd_procedimento_w));

			end if;
			exception
				when others then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(199048, 'CD_PROCEDIMENTO=' || TO_CHAR(cd_procedimento_w));

			end;
			cont_w	:= cont_w + 1;
			if (cont_w > 850) then
				exit;
			end if;
			end;
		end loop;

		r		:= 1;
		k		:= 1;
		qt_count_w	:= dias_w.count;
		while(r <= qt_count_w) loop
			begin
			dia_w	:= dias_w[k].ds_dias_aplicacao;
			dia_w	:= substr(dia_w,2,length(dia_w));

			dia_w	:= dia_w + qt_nao_util_w; /* Soma o dia do ciclo mais a quantidade de dias nao uteis*/
			if ((coalesce(ds_ciclos_aplicacao_w::text, '') = '') or (position(',C'||i||',' in ds_ciclos_aplicacao_w) > 0)) and ((campo_numerico(dia_w) IS NOT NULL AND (campo_numerico(dia_w))::text <> '')) and (somente_numero_real(nr_dia_inicial_w) <= somente_numero_real(dias_w[k].ds_dias_aplicacao)) and
               ((coalesce(nr_dia_final_p::text, '') = '') or (somente_numero_real(nr_dia_final_w) >= somente_numero_real(dias_w[k].ds_dias_aplicacao))) then

				dt_prevista_w := dt_inicio_w + (dia_w)::numeric;

				if (dt_prevista_w < clock_timestamp()) and (position('-' in somente_numero_real(dias_w[k].ds_dias_aplicacao)) = 0) then
					dt_prevista_w	:= clock_timestamp(); /* Felipe - OS 31185 Se a data gerada do ciclo for menos que sysdate a data recebe sysdate */
				end if;		



				r	:= r + 1;
				if (r > 5000) then
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(199047);			

				end if;

				ie_dia_util_w	:=	'S';
				if (ie_consiste_dia_util_p = 'S') then
					select	obter_se_dia_util_oncologia(dt_prevista_w, cd_estabelecimento_w, nm_usuario_p,ie_tipo_atendimento_w,cd_protocolo_w,nr_seq_medicacao_w)
					into STRICT	ie_dia_util_w
					;
					if (ie_consiste_agenda_quimio_w	= 'S') and (ie_dia_util_w	= 'S') then
						ds_bloqueio_agenda_qui_w	:= qt_obter_se_dia_livre(dt_prevista_w, nm_usuario_p, cd_estabelecimento_w);
						if (ds_bloqueio_agenda_qui_w IS NOT NULL AND ds_bloqueio_agenda_qui_w::text <> '') then
							ie_dia_util_w	:= 'N';
							ds_retorno_w	:= substr(ds_retorno_w || ds_bloqueio_agenda_qui_w || ', ',1,2000);
						end if;
					end if;
				end if;



					select	coalesce(max(nr_seq_atendimento),0) ,
						max(dt_atualizacao_nrec)
					into STRICT	nr_seq_atendimento_w,
						dt_atualizacao_nrec_w
					from	paciente_atendimento
					where	nr_seq_paciente	= nr_seq_paciente_p
					and	nr_ciclo	= i
					and	ds_dia_ciclo	= dias_w[k].ds_dias_aplicacao
					and	((ie_exige_liberacao	= 'N') or (ie_separar_w	= 'N'))
					and	coalesce(dt_cancelamento::text, '') = ''
					and     coalesce(dt_suspensao::text, '') = ''
					and	coalesce(substr(Qt_Obter_Status_Agenda(nr_seq_atendimento),1,50),'XPTO')	<> 'F'	;

				if (ie_dia_util_w = 'S') or (nr_seq_atendimento_w	>0) then
					begin

					select	coalesce(max(nr_seq_atendimento),0)
					into STRICT	nr_seq_atendimento_w
					from	paciente_atendimento
					where	nr_seq_paciente	= nr_seq_paciente_p
					and	nr_ciclo	= i
					and	ds_dia_ciclo	= dias_w[k].ds_dias_aplicacao
					and	((ie_exige_liberacao	= 'N') or (ie_separar_w	= 'N'))
					and	coalesce(dt_cancelamento::text, '') = ''
					and     coalesce(dt_suspensao::text, '') = ''
					and	coalesce(substr(Qt_Obter_Status_Agenda(nr_seq_atendimento),1,50),'XPTO')	<> 'F';

					if (nr_seq_atendimento_w = 0) then
						begin

						if (ie_gera_data_real_p	= 'S') then
							dt_real_w	:= dt_prevista_w;

							if (ie_param_1201_w = 'S') and (trunc(dt_inicio_ciclo_w) = trunc(clock_timestamp())) then

								begin
								sql_w := 'call obter_data_real_oncologia_md(:1, :2, :3, :4) into :dt_real_w';
								EXECUTE sql_w using in dt_inicio_dt_real_w,
															  in dias_w[k].ds_dias_aplicacao, 
															  in qt_nao_util_dt_real_w, 
															  in qt_horas_dt_real_w,
															  out dt_real_w;

								exception
									when others then
										dt_real_w := null;
								end;
								
								ie_dia_util_dt_real_w	:=	'N';
								if (ie_consiste_dia_util_p = 'S') then
									r2 := 1;
									while(ie_dia_util_dt_real_w = 'N') loop
										select	obter_se_dia_util_oncologia(dt_real_w, cd_estabelecimento_w, nm_usuario_p,ie_tipo_atendimento_w,cd_protocolo_w,nr_seq_medicacao_w)
										into STRICT	ie_dia_util_dt_real_w
										;
										if (ie_consiste_agenda_quimio_w	= 'S') and (ie_dia_util_dt_real_w	= 'S') then
											ds_bloqueio_agenda_qui_w	:= qt_obter_se_dia_livre(dt_real_w, nm_usuario_p, cd_estabelecimento_w);
											if (ds_bloqueio_agenda_qui_w IS NOT NULL AND ds_bloqueio_agenda_qui_w::text <> '') then
												ie_dia_util_dt_real_w	:= 'N';
											end if;
										end if;

										if (ie_dia_util_dt_real_w = 'N') then
											dt_real_w		:= dt_real_w + 1;
											qt_nao_util_dt_real_w	:= qt_nao_util_dt_real_w + 1;
										end if;

										r2 := r2 + 1;
										if (r2 > 100) then
											dt_real_w	:= dt_prevista_w;
											ie_dia_util_dt_real_w	:= 'S';
										end if;
									end loop;
									if (dt_real_w > dt_ultima_dt_real_w) then
										dt_ultima_dt_real_w := dt_real_w;
									end if;
								end if;
							end if;
						end if;

						select	nextval('paciente_atendimento_seq')
						into STRICT	nr_seq_atendimento_w
						;

						select 	qt_mg_carboplatina,
							qt_clearance_creatinina, 
							qt_creatinina
						into STRICT	qt_mg_carboplatina_w, 
							qt_clearance_creatinina_w, 
							qt_creatinina_w
						from    paciente_setor
						where	nr_seq_paciente = nr_seq_paciente_p;

						insert into paciente_atendimento(
							nr_seq_atendimento,
							nr_seq_paciente,
							nr_ciclo,
							ds_dia_ciclo,
							dt_prevista,
							dt_real,
							dt_atualizacao,
							nm_usuario,
							qt_peso,
							qt_altura,
							nr_seq_protocolo,
							ie_exige_liberacao,
							nr_atendimento,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ie_l_dl_creatinina,
							qt_auc,
							pr_reducao,
							qt_mg_carboplatina,
							qt_clearance_creatinina, 
							qt_creatinina)
						values (	nr_seq_atendimento_w,
							nr_seq_paciente_p,
							i,
							dias_w[k].ds_dias_aplicacao,
							dt_prevista_w,
							dt_real_w,
							clock_timestamp(),
							nm_usuario_p,
							coalesce(qt_peso_w,qt_peso_p),
							qt_altura_w,
							nr_seq_protoclo_p,
							'N',
							nr_atendimento_w,
							dt_atualizacao_nrec_ww,
							nm_usuario_p,
							1,
							qt_auc_w,
							pr_reducao_w,
							qt_mg_carboplatina_w, 
							qt_clearance_creatinina_w, 
							qt_creatinina_w);	

							if (coalesce(dt_prevista_final_w::text, '') = '') or (dt_prevista_final_w < dt_prevista_w) then
							    dt_prevista_final_w := dt_prevista_w;
							end if;

							registrar_dia_gerado(dt_prevista_w,i,dias_w[k].ds_dias_aplicacao);
							end;

						end if;

					select	coalesce(max(nr_seq_procedimento),0) + 1
					into STRICT	nr_seq_procedimento_w
					from	paciente_atend_proc
					where	nr_seq_atendimento = nr_seq_atendimento_w;


					select	coalesce(max('S'),'N')
					into STRICT	ie_tem_prescricao_w
					from	paciente_atendimento
					where	nr_seq_atendimento	=	nr_seq_atendimento_w
					and	(nr_prescricao IS NOT NULL AND nr_prescricao::text <> '');	

					if (ie_tem_prescricao_w = 'N') then
						begin
						insert into paciente_atend_proc(
							nr_seq_atendimento, 
							nr_seq_procedimento, 
							cd_procedimento, 
							ie_origem_proced, 
							qt_procedimento, 
							dt_atualizacao, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							cd_intervalo, 
							nr_agrupamento, 
							ie_se_necessario, 
							ie_acm, 
							nr_seq_proc_interno, 
							ie_lado,
							nr_seq_ordem_adep,
							cd_kit_material,
							ie_local_adm) 
						 values ( 
							nr_seq_atendimento_w, 
							nr_seq_procedimento_w, 
							cd_procedimento_w, 
							ie_origem_proced_w, 
							qt_procedimento_w, 
							clock_timestamp(), 
							nm_usuario_p, 
							clock_timestamp(), 
							nm_usuario_p, 
							cd_intervalo_w, 
							nr_agrupamento_w, 
							ie_se_necessario_w, 
							ie_acm_w, 
							nr_seq_proc_interno_w, 
							ie_lado_w,
							nr_seq_ordem_adep_w,
							cd_kit_material_w,
							CASE WHEN ie_gerar_pend_quimio_w='S' THEN  coalesce(IE_LOCAL_ADM_w,'H')  ELSE coalesce(IE_LOCAL_ADM_W,'') END ); -- DE ONDE BUSCAR O LOCAL ADM
						insert into paciente_atend_medic(
							nr_seq_atendimento,
							nr_seq_material, 
							cd_material, 
							dt_atualizacao, 
							nm_usuario, 
							nr_agrupamento, 
							ie_bomba_infusao, 
							nr_seq_interno, 
							ie_cancelada,
							qt_dose,
							qt_dose_prescricao,
							cd_unid_med_dose,
							cd_unid_med_prescr,
							ie_via_aplicacao,
							cd_intervalo,
							ds_recomendacao,
							nr_seq_procedimento,
							ie_agrupador,
							ie_acm,
							qt_dias_receita,
							ie_medicacao_paciente,
							ie_local_adm,
                            ie_peso_considerar,
							qt_fator_correcao)
						SELECT	nr_seq_atendimento_w,
							nr_seq_material,
							cd_material,
							clock_timestamp(),
							nm_usuario_p,
							nr_agrupamento,
							ie_bomba_infusao,
							nextval('paciente_atend_medic_seq'),
							'N',
							qt_dose,
							qt_dose_prescr,
							cd_unidade_medida,
							cd_unid_med_prescr,
							ie_via_aplicacao,
							cd_intervalo,
							ds_recomendacao,
							nr_seq_procedimento_w,
							ie_agrupador,
							ie_acm,
							qt_dias_receita,
							coalesce(ie_medicacao_paciente,'N'),
							CASE WHEN ie_gerar_pend_quimio_w='S' THEN  coalesce(IE_LOCAL_ADM,'H')  ELSE coalesce(IE_LOCAL_ADM,'') END ,
                            ie_peso_considerar,
							qt_fator_correcao
						from	paciente_protocolo_medic
						where	nr_seq_paciente = nr_seq_paciente_p
						and	nr_seq_procedimento = nr_seq_proc_w
						and	coalesce(nr_seq_diluicao::text, '') = ''
						and (ie_agrupador = 5 or (coalesce(ie_agrupador::text, '') = '' and (nr_seq_procedimento IS NOT NULL AND nr_seq_procedimento::text <> '')));


						end;
					end if;



					k	:= k + 1;
					end;
				else	
					qt_count_w	:= qt_count_w + 1;
					qt_nao_util_w	:= qt_nao_util_w + 1;
				end if;
			else
				r	:= r + 1;
				k	:= k + 1;
			end if;
			end;
		end loop;
		end;
	end loop;
	close c03;


	open c07;
	loop
	fetch c07 into	
		ds_dias_aplicacao_w,
		ds_recomendacao_w,
		cd_recomendacao_w,
		cd_intervalo_w,
		ie_acm_w,
		ie_se_necessario_w,
		nr_seq_classif_w,
		ds_ciclos_aplicacao_w,
		nr_seq_ordem_adep_w,
		cd_kit_w,
		ie_local_adm_w;
	EXIT WHEN NOT FOUND; /* apply on c07 */
		begin
		ds_dias_aplicacao_w	:= replace(ds_dias_aplicacao_w,' ','');
		ds_texto_w		:= '';
		for y in 1..length(ds_dias_aplicacao_w) loop
			x	:= substr(upper(ds_dias_aplicacao_w), y, 1);	
			if (position(x in ds_valido_dias_w) > 0) then
				ds_texto_w	:= ds_texto_w || x;
			else
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(199049);

			end if;
		end loop;



		ds_dias_aplicacao_w	:= ds_texto_w;
		z	:= 0;
		ds_dias_aplicacao_w	:= ds_dias_aplicacao_w ||',';
		cont_w	:= 0;
		dias_w.delete;
		while	(ds_dias_aplicacao_w IS NOT NULL AND ds_dias_aplicacao_w::text <> '') loop
			begin
			posicao_w	:= position(',' in ds_dias_aplicacao_w);
			z := z + 1;
			dias_w[z].ds_dias_aplicacao	:= substr(ds_dias_aplicacao_w,1,posicao_w - 1);
			ds_dias_aplicacao_w		:= substr(ds_dias_aplicacao_w,posicao_w + 1,length(ds_dias_aplicacao_w));
			begin
			if (substr(dias_w[z].ds_dias_aplicacao,1,1) <> 'D') or (length(dias_w[z].ds_dias_aplicacao) < 2) or (position('D' in substr(dias_w[z].ds_dias_aplicacao,2,length(dias_w[z].ds_dias_aplicacao)-1)) > 0) then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(199049);

			end if;
			exception
				when others then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(199049);

			end;
			cont_w	:= cont_w + 1;
			if (cont_w > 850) then
				exit;
			end if;
			end;
		end loop;


		if (ds_ciclos_aplicacao_w IS NOT NULL AND ds_ciclos_aplicacao_w::text <> '') then
			ds_ciclos_aplicacao_w	:= replace(ds_ciclos_aplicacao_w,' ','');
			ds_texto_w		:= '';
			for y in 1..length(ds_ciclos_aplicacao_w) loop
				x	:= substr(upper(ds_ciclos_aplicacao_w), y, 1);	
				if (position(x in ds_valido_ciclos_w) > 0) then
					ds_texto_w	:= ds_texto_w || x;
				else
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(199050, 'CD_MATERIAL=' || TO_CHAR(cd_material_w));

				end if;
			end loop;
			ds_ciclos_aplicacao_w	:= ds_texto_w;
			ds_ciclos_aplicacao_w	:= ',' || ds_ciclos_aplicacao_w || ',';
		end if;



		r		:= 1;
		k		:= 1;
		qt_count_w	:= dias_w.count;
		while(r <= qt_count_w) loop
			begin
			dia_w	:= dias_w[k].ds_dias_aplicacao;
			dia_w	:= substr(dia_w,2,length(dia_w));

			dia_w	:= dia_w + qt_nao_util_w; /* Soma o dia do ciclo mais a quantidade de dias nao uteis*/
			if	((coalesce(ds_ciclos_aplicacao_w::text, '') = '') or (position(',C'||i||',' in ds_ciclos_aplicacao_w) > 0)) and ((campo_numerico(dia_w) IS NOT NULL AND (campo_numerico(dia_w))::text <> '')) and (somente_numero_real(nr_dia_inicial_w) <= somente_numero_real(dias_w[k].ds_dias_aplicacao)) and
				((coalesce(nr_dia_final_p::text, '') = '') or (somente_numero_real(nr_dia_final_w) >= somente_numero_real(dias_w[k].ds_dias_aplicacao))) then
				dt_prevista_w := dt_inicio_w + (dia_w)::numeric;
				if (dt_prevista_w < clock_timestamp()) and (position('-' in somente_numero_real(dias_w[k].ds_dias_aplicacao)) = 0) then
					dt_prevista_w := clock_timestamp(); /* Felipe - OS 31185 Se a data gerada do ciclo for menos que sysdate a data recebe sysdate */
				end if;			


				r	:= r + 1;
				if (r > 5000) then
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(199047);			

				end if;

				ie_dia_util_w	:=	'S';
				if (ie_consiste_dia_util_p = 'S') then
					select	obter_se_dia_util_oncologia(dt_prevista_w, cd_estabelecimento_w, nm_usuario_p,ie_tipo_atendimento_w,cd_protocolo_w,nr_seq_medicacao_w)
					into STRICT	ie_dia_util_w
					;
					if (ie_consiste_agenda_quimio_w = 'S') and (ie_dia_util_w	= 'S') then
						ds_bloqueio_agenda_qui_w	:= qt_obter_se_dia_livre(dt_prevista_w, nm_usuario_p, cd_estabelecimento_w);
						if (ds_bloqueio_agenda_qui_w IS NOT NULL AND ds_bloqueio_agenda_qui_w::text <> '') then
							ie_dia_util_w	:= 'N';
							ds_retorno_w	:= substr(ds_retorno_w || ds_bloqueio_agenda_qui_w || ', ',1,2000);
						end if;
					end if;
				end if;

				select	coalesce(max(nr_seq_atendimento),0)
				into STRICT	nr_seq_atendimento_w
				from	paciente_atendimento
				where	nr_seq_paciente	= nr_seq_paciente_p
				and	nr_ciclo	= i
				and	ds_dia_ciclo	= dias_w[k].ds_dias_aplicacao
				and	((ie_exige_liberacao	= 'N') or (ie_separar_w	= 'N'))
				and	coalesce(dt_cancelamento::text, '') = ''
				and     coalesce(dt_suspensao::text, '') = ''
				and	coalesce(substr(Qt_Obter_Status_Agenda(nr_seq_atendimento),1,50),'XPTO')	<> 'F';

				if (ie_dia_util_w = 'S') or (nr_seq_atendimento_w > 0)then
					begin

					select	coalesce(max(nr_seq_atendimento),0)
					into STRICT	nr_seq_atendimento_w
					from	paciente_atendimento
					where	nr_seq_paciente	= nr_seq_paciente_p
					and	nr_ciclo	= i
					and	ds_dia_ciclo	= dias_w[k].ds_dias_aplicacao
					and	((ie_exige_liberacao	= 'N') or (ie_separar_w	= 'N'))
					and	coalesce(dt_cancelamento::text, '') = ''
					and     coalesce(dt_suspensao::text, '') = ''
					and	coalesce(substr(Qt_Obter_Status_Agenda(nr_seq_atendimento),1,50),'XPTO')	<> 'F';

					if (nr_seq_atendimento_w = 0) then
						begin

						if (ie_gera_data_real_p	= 'S') then
							dt_real_w := dt_prevista_w;

							if (ie_param_1201_w = 'S') and (trunc(dt_inicio_ciclo_w) = trunc(clock_timestamp())) then

								begin
									sql_w := 'call obter_data_real_oncologia_md(:1, :2, :3, :4) into :dt_real_w';
									EXECUTE sql_w using in dt_inicio_dt_real_w,
																  in dias_w[k].ds_dias_aplicacao, 
																  in qt_nao_util_dt_real_w, 
																  in qt_horas_dt_real_w,
																  out dt_real_w;

								exception
									when others then
										dt_real_w := null;
								end;
								ie_dia_util_dt_real_w := 'N';
								if (ie_consiste_dia_util_p = 'S') then
									r2 := 1;
									while(ie_dia_util_dt_real_w = 'N') loop
										select	obter_se_dia_util_oncologia(dt_real_w, cd_estabelecimento_w, nm_usuario_p,ie_tipo_atendimento_w,cd_protocolo_w,nr_seq_medicacao_w)
										into STRICT	ie_dia_util_dt_real_w
										;
										if (ie_consiste_agenda_quimio_w = 'S') and (ie_dia_util_dt_real_w	= 'S') then
											ds_bloqueio_agenda_qui_w	:= qt_obter_se_dia_livre(dt_real_w, nm_usuario_p, cd_estabelecimento_w);
											if (ds_bloqueio_agenda_qui_w IS NOT NULL AND ds_bloqueio_agenda_qui_w::text <> '') then
												ie_dia_util_dt_real_w	:= 'N';
											end if;
										end if;

										if (ie_dia_util_dt_real_w = 'N') then
											dt_real_w := dt_real_w + 1;
											qt_nao_util_dt_real_w := qt_nao_util_dt_real_w + 1;
										end if;

										r2 := r2 + 1;
										if (r2 > 100) then
											dt_real_w := dt_prevista_w;
											ie_dia_util_dt_real_w := 'S';
										end if;
									end loop;
									if (dt_real_w > dt_ultima_dt_real_w) then
										dt_ultima_dt_real_w := dt_real_w;
									end if;
								end if;
							end if;
						end if;

						select	nextval('paciente_atendimento_seq')
						into STRICT	nr_seq_atendimento_w
						;

						select 	qt_mg_carboplatina,
							qt_clearance_creatinina, 
							qt_creatinina
						into STRICT	qt_mg_carboplatina_w, 
							qt_clearance_creatinina_w, 
							qt_creatinina_w
						from    paciente_setor
						where	nr_seq_paciente = nr_seq_paciente_p;

						insert into paciente_atendimento(
							nr_seq_atendimento,
							nr_seq_paciente,
							nr_ciclo,
							ds_dia_ciclo,
							dt_prevista,
							dt_real,
							dt_atualizacao,
							nm_usuario,
							qt_peso,
							qt_altura,
							nr_seq_protocolo,
							ie_exige_liberacao,
							nr_atendimento,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ie_l_dl_creatinina,
							qt_auc,
							pr_reducao,
							qt_mg_carboplatina,
							qt_clearance_creatinina, 
							qt_creatinina)
						values (	nr_seq_atendimento_w,
							nr_seq_paciente_p,
							i,
							dias_w[k].ds_dias_aplicacao,
							dt_prevista_w,
							dt_real_w,
							clock_timestamp(),
							nm_usuario_p,
							coalesce(qt_peso_w,qt_peso_p),
							qt_altura_w,
							nr_seq_protoclo_p,
							'N',
							nr_atendimento_w,
							dt_atualizacao_nrec_ww,
							nm_usuario_p,
							1,
							qt_auc_w,
							pr_reducao_w,
							qt_mg_carboplatina_w, 
							qt_clearance_creatinina_w, 
							qt_creatinina_w);	

							if (coalesce(dt_prevista_final_w::text, '') = '') or (dt_prevista_final_w < dt_prevista_w) then
							    dt_prevista_final_w := dt_prevista_w;
							end if;

							registrar_dia_gerado(dt_prevista_w,i,dias_w[k].ds_dias_aplicacao);
							end;

						end if;




					select	coalesce(max('S'),'N')
					into STRICT	ie_tem_prescricao_w
					from	paciente_atendimento
					where	nr_seq_atendimento	=	nr_seq_atendimento_w
					and	(nr_prescricao IS NOT NULL AND nr_prescricao::text <> '');	

					if (ie_tem_prescricao_w = 'N') then
						begin


						insert into paciente_atend_rec(	nr_sequencia,
														nr_seq_atendimento,
														dt_atualizacao,
														nm_usuario,
														dt_atualizacao_nrec,
														nm_usuario_nrec,
														ds_recomendacao,
														cd_recomendacao,
														cd_intervalo,
														ie_acm,
														ie_se_necessario,
														nr_seq_classif,
														nr_seq_ordem_adep,
														cd_kit,
														ie_local_adm)
										values (		nextval('paciente_atend_rec_seq'),
														nr_seq_atendimento_w,
														clock_timestamp(),
														nm_usuario_p,
														clock_timestamp(),
														nm_usuario_p,
														ds_recomendacao_w,
														cd_recomendacao_w,
														cd_intervalo_w,
														ie_acm_w,
														ie_se_necessario_w,
														nr_seq_classif_w,
														nr_seq_ordem_adep_w,
														cd_kit_w,
														CASE WHEN ie_gerar_pend_quimio_w='S' THEN  coalesce(IE_LOCAL_ADM_w,'H')  ELSE coalesce(IE_LOCAL_ADM_W,'') END ); --- onde buscar o LOCAL ADM
						end;
					end if;



					k	:= k + 1;
					end;
				else	
					qt_count_w	:= qt_count_w + 1;
					qt_nao_util_w	:= qt_nao_util_w + 1;
				end if;
			else
				r	:= r + 1;
				k	:= k + 1;
			end if;
			end;
		end loop;


		end;
	end loop;
	close c07;

	open c04;
	loop
	fetch c04 into	
		nr_seq_solucao_w,
		nr_agrupamento_w, 
		ds_dias_aplicacao_w, 
		ds_ciclos_aplicacao_w,
		ie_tipo_dosagem_w, 
		qt_dosagem_w, 
		qt_solucao_total_w, 
		qt_tempo_aplicacao_w,
		qt_tempo_aplicacao_min_w, 
		nr_etapas_w, 
		ie_bomba_infusao_w, 
		ie_esquema_alternado_w, 
		ie_calc_aut_w, 
		ie_acm_soluc_w, 
		qt_hora_fase_w, 
		ds_solucao_w, 
		ds_orientacao_w, 
		ie_se_necessario_w, 
		ie_solucao_pca_w, 
		ie_tipo_analgesia_w, 
		ie_pca_modo_prog_w, 
		qt_dose_inicial_pca_w, 
		qt_vol_infusao_pca_w, 
		qt_bolus_pca_w, 
		qt_intervalo_bloqueio_w, 
		qt_limite_quatro_hora_w, 
		qt_dose_ataque_w, 
		ie_tipo_sol_w,
		ie_pre_medicao_w,
		cd_intervalo_w,
		ie_via_aplicacao_ww,
		nr_seq_ordem_adep_w,
		ie_local_adm_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin
		if (ds_ciclos_aplicacao_w IS NOT NULL AND ds_ciclos_aplicacao_w::text <> '') then
			ds_ciclos_aplicacao_w	:= replace(ds_ciclos_aplicacao_w,' ','');
			ds_texto_w		:= '';
			for y in 1..length(ds_ciclos_aplicacao_w) loop
				x	:= substr(upper(ds_ciclos_aplicacao_w), y, 1);	
				if (position(x in ds_valido_ciclos_w) > 0) then
					ds_texto_w	:= ds_texto_w || x;
				else
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(199051, 'CD_MATERIAL=' || TO_CHAR(cd_material_w));

				end if;
			end loop;
			ds_ciclos_aplicacao_w	:= ds_texto_w;
			ds_ciclos_aplicacao_w	:= ',' || ds_ciclos_aplicacao_w || ',';
		end if;

		ds_dias_aplicacao_w	:= replace(ds_dias_aplicacao_w,' ','');
		ds_texto_w		:= '';
		for y in 1..length(ds_dias_aplicacao_w) loop
			x	:= substr(upper(ds_dias_aplicacao_w), y, 1);	
			if (position(x in ds_valido_dias_w) > 0) then
				ds_texto_w	:= ds_texto_w || x;
			else
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(199052, 'DS_SOLUCAO=' || ds_solucao_w);

			end if;
		end loop;

		ds_dias_aplicacao_w	:= ds_texto_w;
		z	:= 0;
		ds_dias_aplicacao_w	:= ds_dias_aplicacao_w ||',';
		cont_w	:= 0;
		dias_w.delete;
		while	(ds_dias_aplicacao_w IS NOT NULL AND ds_dias_aplicacao_w::text <> '') loop
			begin
			posicao_w	:= position(',' in ds_dias_aplicacao_w);
			z := z + 1;
			dias_w[z].ds_dias_aplicacao	:= substr(ds_dias_aplicacao_w,1,posicao_w - 1);
			ds_dias_aplicacao_w		:= substr(ds_dias_aplicacao_w,posicao_w + 1,length(ds_dias_aplicacao_w));
			begin
			if (substr(dias_w[z].ds_dias_aplicacao,1,1) <> 'D') or (length(dias_w[z].ds_dias_aplicacao) < 2) or (position('D' in substr(dias_w[z].ds_dias_aplicacao,2,length(dias_w[z].ds_dias_aplicacao)-1)) > 0) then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(199052, 'DS_SOLUCAO=' || ds_solucao_w);

			end if;
			exception
				when others then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(199052, 'DS_SOLUCAO=' || ds_solucao_w);

			end;
			cont_w	:= cont_w + 1;
			if (cont_w > 850) then
				exit;
			end if;
			end;
		end loop;

		r		:= 1;
		k		:= 1;
		qt_count_w	:= dias_w.count;
		while(r <= qt_count_w) loop
			begin
			dia_w	:= dias_w[k].ds_dias_aplicacao;
			dia_w	:= substr(dia_w,2,length(dia_w));

			dia_w	:= dia_w + qt_nao_util_w; /* Soma o dia do ciclo mais a quantidade de dias nao uteis*/
			if	((coalesce(ds_ciclos_aplicacao_w::text, '') = '') or (position(',C'||i||',' in ds_ciclos_aplicacao_w) > 0)) and ((campo_numerico(dia_w) IS NOT NULL AND (campo_numerico(dia_w))::text <> '')) and (somente_numero_real(nr_dia_inicial_w) <= somente_numero_real(dias_w[k].ds_dias_aplicacao)) and
				((coalesce(nr_dia_final_p::text, '') = '') or (somente_numero_real(nr_dia_final_w) >= somente_numero_real(dias_w[k].ds_dias_aplicacao))) then
				dt_prevista_w := dt_inicio_w + (dia_w)::numeric;
				if (dt_prevista_w < clock_timestamp()) and (position('-' in somente_numero_real(dias_w[k].ds_dias_aplicacao)) = 0) then
					dt_prevista_w	:= clock_timestamp(); /* Felipe - OS 31185 Se a data gerada do ciclo for menos que sysdate a data recebe sysdate */
				end if;			


				r	:= r + 1;
				if (r > 5000) then
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(199047);			

				end if;

				ie_dia_util_w	:=	'S';
				if (ie_consiste_dia_util_p = 'S') then
					select	obter_se_dia_util_oncologia(dt_prevista_w, cd_estabelecimento_w, nm_usuario_p,ie_tipo_atendimento_w,cd_protocolo_w,nr_seq_medicacao_w)
					into STRICT	ie_dia_util_w
					;
					if (ie_consiste_agenda_quimio_w	= 'S') and (ie_dia_util_w	= 'S') then
						ds_bloqueio_agenda_qui_w	:= qt_obter_se_dia_livre(dt_prevista_w, nm_usuario_p, cd_estabelecimento_w);
						if (ds_bloqueio_agenda_qui_w IS NOT NULL AND ds_bloqueio_agenda_qui_w::text <> '') then
							ie_dia_util_w	:= 'N';
							ds_retorno_w	:= substr(ds_retorno_w || ds_bloqueio_agenda_qui_w || ', ',1,2000);
						end if;
					end if;
				end if;


				select	coalesce(max(nr_seq_atendimento),0)
				into STRICT	nr_seq_atendimento_w
				from	paciente_atendimento
				where	nr_seq_paciente	= nr_seq_paciente_p
				and	nr_ciclo	= i
				and	ds_dia_ciclo	= dias_w[k].ds_dias_aplicacao
				and	((ie_exige_liberacao	= 'N') or (ie_separar_w	= 'N'))
				and	coalesce(dt_cancelamento::text, '') = ''
				and     coalesce(dt_suspensao::text, '') = '';

				if (ie_dia_util_w = 'S') or (nr_seq_atendimento_w > 0) then
					begin

					select	coalesce(max(nr_seq_atendimento),0)
					into STRICT	nr_seq_atendimento_w
					from	paciente_atendimento
					where	nr_seq_paciente	= nr_seq_paciente_p
					and	nr_ciclo	= i
					and	ds_dia_ciclo	= dias_w[k].ds_dias_aplicacao
					and	((ie_exige_liberacao	= 'N') or (ie_separar_w	= 'N'))
					and	coalesce(dt_cancelamento::text, '') = ''
					and     coalesce(dt_suspensao::text, '') = '';

					if (nr_seq_atendimento_w = 0) then
						begin

						if (ie_gera_data_real_p	= 'S') then
							dt_real_w	:= dt_prevista_w;

							if (ie_param_1201_w = 'S') and (trunc(dt_inicio_ciclo_w) = trunc(clock_timestamp())) then

								begin
								sql_w := 'call obter_data_real_oncologia_md(:1, :2, :3, :4) into :dt_real_w';
								EXECUTE sql_w using in dt_inicio_dt_real_w,
															  in dias_w[k].ds_dias_aplicacao, 
															  in qt_nao_util_dt_real_w, 
															  in qt_horas_dt_real_w,
															  out dt_real_w;

								exception
									when others then
										dt_real_w := null;
								end;

								ie_dia_util_dt_real_w	:=	'N';
								if (ie_consiste_dia_util_p = 'S') then
									r2 := 1;
									while(ie_dia_util_dt_real_w = 'N') loop
										select	obter_se_dia_util_oncologia(dt_real_w, cd_estabelecimento_w, nm_usuario_p,ie_tipo_atendimento_w,cd_protocolo_w,nr_seq_medicacao_w)
										into STRICT	ie_dia_util_dt_real_w
										;
										if (ie_consiste_agenda_quimio_w	= 'S') and (ie_dia_util_dt_real_w	= 'S') then
											ds_bloqueio_agenda_qui_w	:= qt_obter_se_dia_livre(dt_real_w, nm_usuario_p, cd_estabelecimento_w);
											if (ds_bloqueio_agenda_qui_w IS NOT NULL AND ds_bloqueio_agenda_qui_w::text <> '') then
												ie_dia_util_dt_real_w	:= 'N';
											end if;
										end if;

										if (ie_dia_util_dt_real_w = 'N') then
											dt_real_w := dt_real_w + 1;
											qt_nao_util_dt_real_w := qt_nao_util_dt_real_w + 1;
										end if;

										r2 := r2 + 1;
										if (r2 > 100) then
											dt_real_w	:= dt_prevista_w;
											ie_dia_util_dt_real_w := 'S';
										end if;
									end loop;
									if (dt_real_w > dt_ultima_dt_real_w) then
										dt_ultima_dt_real_w := dt_real_w;
									end if;
								end if;
							end if;
						end if;

						select	nextval('paciente_atendimento_seq')
						into STRICT	nr_seq_atendimento_w
						;

						select 	qt_mg_carboplatina,
							qt_clearance_creatinina, 
							qt_creatinina
						into STRICT	qt_mg_carboplatina_w, 
							qt_clearance_creatinina_w, 
							qt_creatinina_w
						from    paciente_setor
						where	nr_seq_paciente = nr_seq_paciente_p;

						insert into paciente_atendimento(
							nr_seq_atendimento,
							nr_seq_paciente,
							nr_ciclo,
							ds_dia_ciclo,
							dt_prevista,
							dt_real,
							dt_atualizacao,
							nm_usuario,
							qt_peso,
							qt_altura,
							nr_seq_protocolo,
							ie_exige_liberacao,
							nr_atendimento,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ie_l_dl_creatinina,
							qt_auc,
							pr_reducao,
							qt_mg_carboplatina,
							qt_clearance_creatinina, 
							qt_creatinina)
						values (	nr_seq_atendimento_w,
							nr_seq_paciente_p,
							i,
							dias_w[k].ds_dias_aplicacao,
							dt_prevista_w,
							dt_real_w,
							clock_timestamp(),
							nm_usuario_p,
							coalesce(qt_peso_w,qt_peso_p),
							qt_altura_w,
							nr_seq_protoclo_p,
							'N',
							nr_atendimento_w,
							dt_atualizacao_nrec_ww,
							nm_usuario_p,
							1,
							qt_auc_w,
							pr_reducao_w,
							qt_mg_carboplatina_w, 
							qt_clearance_creatinina_w, 
							qt_creatinina_w);


							if (coalesce(dt_prevista_final_w::text, '') = '') or (dt_prevista_final_w < dt_prevista_w) then
							    dt_prevista_final_w := dt_prevista_w;
							end if;


							registrar_dia_gerado(dt_prevista_w,i,dias_w[k].ds_dias_aplicacao);
							end;
					end if;


					select	coalesce(max('S'),'N')
					into STRICT	ie_tem_prescricao_w
					from	paciente_atendimento
					where	nr_seq_atendimento	=	nr_seq_atendimento_w
					and	(nr_prescricao IS NOT NULL AND nr_prescricao::text <> '');	

					if (ie_tem_prescricao_w = 'N') then
						begin/*
						nr_seq_solucao_ww	:= nr_seq_solucao_w;
						select	nvl(max(nr_seq_solucao),0) +1
						into	nr_seq_solucao_w
						from	paciente_atend_soluc
						where	nr_seq_atendimento	= nr_seq_atendimento_w;
						*/
						insert into paciente_atend_soluc(
								nr_seq_atendimento, 
								nr_seq_solucao, 
								nr_agrupamento, 
								dt_atualizacao, 
								nm_usuario, 
								dt_atualizacao_nrec, 
								nm_usuario_nrec, 
								ie_tipo_dosagem, 
								qt_dosagem, 
								qt_solucao_total, 
								qt_tempo_aplicacao,
								qt_tempo_aplicacao_min, 
								nr_etapas, 
								ie_bomba_infusao, 
								ie_esquema_alternado, 
								ie_calc_aut, 
								ie_acm, 
								qt_hora_fase, 
								ds_solucao, 
								ds_orientacao, 
								ie_se_necessario, 
								ie_solucao_pca, 
								ie_tipo_analgesia, 
								ie_pca_modo_prog, 
								qt_dose_inicial_pca, 
								qt_vol_infusao_pca, 
								qt_bolus_pca, 
								qt_intervalo_bloqueio, 
								qt_limite_quatro_hora, 
								qt_dose_ataque, 
								ie_tipo_sol,
								ie_pre_medicacao,
								cd_intervalo,
								ie_via_aplicacao,
								nr_seq_ordem_adep,
								ie_cancelada,
								ie_local_adm)
						values (		nr_seq_atendimento_w, 
								nr_seq_solucao_w, 
								nr_agrupamento_w, 
								clock_timestamp(), 
								nm_usuario_p, 
								clock_timestamp(), 
								nm_usuario_p, 
								ie_tipo_dosagem_w, 
								qt_dosagem_w, 
								qt_solucao_total_w, 
								qt_tempo_aplicacao_w, 
								qt_tempo_aplicacao_min_w, 
								nr_etapas_w, 
								ie_bomba_infusao_w, 
								ie_esquema_alternado_w, 
								ie_calc_aut_w, 
								coalesce(ie_acm_soluc_w,'N'), 
								qt_hora_fase_w, 
								ds_solucao_w, 
								ds_orientacao_w, 
								ie_se_necessario_w, 
								ie_solucao_pca_w, 
								ie_tipo_analgesia_w, 
								ie_pca_modo_prog_w, 
								qt_dose_inicial_pca_w, 
								qt_vol_infusao_pca_w, 
								qt_bolus_pca_w, 
								qt_intervalo_bloqueio_w, 
								qt_limite_quatro_hora_w, 
								qt_dose_ataque_w, 
								ie_tipo_sol_w,
								ie_pre_medicao_w,
								cd_intervalo_w,
								ie_via_aplicacao_ww,
								nr_seq_ordem_adep_w,
								'N',
								CASE WHEN ie_gerar_pend_quimio_w='S' THEN  coalesce(IE_LOCAL_ADM_w,'H')  ELSE coalesce(IE_LOCAL_ADM_W,'') END );

						open c05;
						loop
						fetch c05 into	
							cd_material_w,
							cd_unidade_medida_w,
							qt_dose_w,
							ie_via_aplicacao_w,
							ds_recomendacao_w,
							ds_observacao_w,
							nr_agrupamento_ww,
							ds_dias_aplicacao_w,
							ds_ciclos_aplicacao_w,
							nr_seq_material_ww,
							qt_min_aplicacao_w,
							ie_bomba_infusao_ww,
							cd_intervalo_ww,
							qt_hora_aplicacao_w,
							qt_dias_util_w,
							nr_seq_interno_ww,
							ie_se_necessario_w,
							ie_aplic_lenta_w,
							ie_urgencia_w,
							ie_aplic_bolus_w,
							cd_unid_med_prescr_w,
							qt_dose_prescr_w,
							nr_seq_int_prot_medic_w,
							ie_pre_medicacao_w,
							ie_aplica_reducao_ww,
							ie_acm_w,
							qt_dias_receita_w,
							cd_unidade_med_ref_w,
							qt_dose_ref_w;
						EXIT WHEN NOT FOUND; /* apply on c05 */
							begin

							select	coalesce(max(cd_material_comercial),0)
							into STRICT	cd_material_convertido_w
							from	conversao_medic_onco
							where	cd_material_generico = cd_material_w
							and	((ie_tipo_convenio = coalesce(ie_tipo_convenio_w,0)) or (coalesce(ie_tipo_convenio::text, '') = ''))
							and	((cd_convenio = coalesce(cd_convenio_w,0)) or (coalesce(cd_convenio::text, '') = ''))
							and	ie_situacao = 'A';

							if (cd_material_convertido_w > 0) then
								cd_material_w := cd_material_convertido_w;
							end if;													

							select	coalesce(max(nr_seq_material),0) + 1
							into STRICT	nr_seq_material_w
							from	paciente_atend_medic
							where	nr_seq_atendimento = nr_seq_atendimento_w;							

							insert into paciente_atend_medic(
								nr_seq_atendimento,
								nr_seq_material,
								cd_material,
								dt_atualizacao,
								nm_usuario,
								nr_agrupamento,
								qt_dose,
								cd_unid_med_dose,
								ds_recomendacao,
								ds_observacao,
								ie_via_aplicacao,
								qt_min_aplicacao,
								ie_bomba_infusao,
								cd_intervalo,
								qt_hora_aplicacao,
								qt_dias_util,
								nr_seq_interno,
								nr_seq_prot_medic,
								ie_cancelada,
								ie_administracao,
								ie_checado,
								ie_se_necessario,
								ie_urgencia,            
								ie_aplic_bolus,         
								ie_aplic_lenta,
								qt_dose_prescricao,
								cd_unid_med_prescr,
								nr_seq_int_prot_medic,
								ie_pre_medicacao,
								nr_seq_solucao,
								ie_aplica_reducao,
								ie_acm,
								qt_dias_receita,
								ie_medicacao_paciente,
								ie_peso_considerar,
								qt_fator_correcao,
								cd_unid_medida_ref,
								qt_dose_ref)
							values (	nr_seq_atendimento_w,
								nr_seq_material_w,
								cd_material_w,
								clock_timestamp(),
								nm_usuario_p,
								nr_agrupamento_w,
								qt_dose_w,
								cd_unidade_medida_w,
								ds_recomendacao_w,
								ds_observacao_w,
								coalesce(ie_via_aplicacao_ww, ie_via_aplicacao_w),
								qt_min_aplicacao_w,
								ie_bomba_infusao_ww,
								cd_intervalo_ww,
								qt_hora_aplicacao_w,
								qt_dias_util_w,
								nextval('paciente_atend_medic_seq'),
								nr_seq_interno_ww,
								'N',
								'P',
								'N',
								ie_se_necessario_w,
								ie_urgencia_w,
								ie_aplic_bolus_w,
								ie_aplic_lenta_w,
								--qt_dose_prescr_w,

								--cd_unid_med_prescr_w);
								CASE WHEN obter_se_gerar_dose_um_ciclo(cd_unid_med_prescr_w,qt_dose_prescr_w)='S' THEN  qt_dose_prescr_w  ELSE null END ,
								CASE WHEN obter_se_gerar_dose_um_ciclo(cd_unid_med_prescr_w,qt_dose_prescr_w)='S' THEN  cd_unid_med_prescr_w  ELSE null END ,
								nr_seq_int_prot_medic_w,
								ie_pre_medicacao_w,
								nr_seq_solucao_w,
								ie_aplica_reducao_ww,
								ie_acm_w,
								qt_dias_receita_w,
								ie_medicacao_paciente_w,
								ie_peso_considerar_w,
								qt_fator_correcao_w,
								cd_unidade_med_ref_w,
								qt_dose_ref_w);

							CALL copiar_just_prot_atend_onc(nr_seq_paciente_w,nr_seq_atendimento_w,nr_seq_mat_w,nr_seq_material_w);

							begin
							select	cd_grupo_material,
								cd_subgrupo_material,
								cd_classe_material
							into STRICT	cd_grupo_material_w,
								cd_subgrupo_material_w,
								cd_classe_material_w
							from	estrutura_material_v
							where	cd_material	= cd_material_w;
							exception
								when others then
								cd_grupo_material_w	:= 0;
								cd_subgrupo_material_w	:= 0;
								cd_classe_material_w	:= 0;
							end;


							select	coalesce(max('S'),'N')
							into STRICT	ie_exige_liberacao_w
							from	quimio_drogas_liberacao
							where	coalesce(cd_material,cd_material_w)			= cd_material_w
							and	coalesce(cd_grupo_material,cd_grupo_material_w)	= cd_grupo_material_w
							and	coalesce(cd_subgrupo_material,cd_subgrupo_material_w)= cd_subgrupo_material_w
							and	coalesce(cd_classe_material,cd_classe_material_w)	= cd_classe_material_w
							and cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

							update	paciente_atendimento
							set	ie_exige_liberacao	= ie_exige_liberacao_w
							where	nr_seq_atendimento	= nr_seq_atendimento_w
							and	ie_exige_liberacao	= 'N';

							end;
						end loop;
						close c05;



						end;
					end if;



					k	:= k + 1;
					end;
				else	
					qt_count_w	:= qt_count_w + 1;
					qt_nao_util_w	:= qt_nao_util_w + 1;
				end if;
			else
				r	:= r + 1;
				k	:= k + 1;
			end if;
			end;
		end loop;


		end;
	end loop;
	close c04;
	aux_w	:= i;
	aux_w	:= aux_w + 1;
	qt_dias_intervalo_ww	:= obter_dias_interv_protoc(nr_seq_paciente_p,aux_w);
	/* Francisco - OS 129072 - 14/03/2009 - Gerar autorizacao convenio */

	if (coalesce(ds_lista_tipos_convenio_w,'X') <> 'X') and (ie_tipo_convenio_w IS NOT NULL AND ie_tipo_convenio_w::text <> '') then

		ie_gerar_tipo_convenio_w := substr(obter_se_contido_char(ie_tipo_convenio_w, ds_lista_tipos_convenio_w),1,1);
	end if;

	if	(((ie_gerar_autor_w = 'S') or (ie_gerar_autor_w = 'T')) and (coalesce(ie_gerar_tipo_convenio_w,'S') = 'S')) then

		CALL gerar_autor_conv_quimioterapia(nr_seq_paciente_p,i,nm_usuario_p,'N');

	end if;

	dt_mes_seguinte_w := pkg_date_utils.start_of(pkg_date_utils.add_month(dt_inicio_w, 1), 'MONTH');


    begin
        sql_w := 'begin obter_dt_ini_real_cicl_onc_md (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11); end;';
        EXECUTE sql_w using in ie_interv_ciclo_w,
									  in qt_dias_intervalo_ww, 
									  in qt_dias_intervalo_w, 
									  in qt_nao_util_w, 
									  in cd_protocolo_w, 
									  in ds_protocolo_mes_w, 
									  in dt_mes_seguinte_w, 
									  in dt_prevista_final_w, 
									  in dt_ultima_dt_real_w,
									  in out dt_inicio_w, 
									  in out dt_inicio_dt_real_w;

    exception
        when others then
            dt_inicio_w := null;
            dt_inicio_dt_real_w := null;
    end;


	qt_horas_dt_real_w := 0;

	begin
		if (ie_ordenar_datas_ciclo_w = 'N') then -- dentro do recalcular_datas_ciclo faz esta acao
			CALL gerar_alterar_dia_real_onc(nr_seq_atendimento_w,nm_usuario_p);
		end if;
	exception
	when others then
		null;
	end;

end loop;

if (ie_ordenar_datas_ciclo_w = 'S' and
     obter_se_contido(cd_protocolo_w, ds_protocolo_mes_w) = 'N') then
	ds_retorno_w := recalcular_datas_ciclo(	nr_seq_paciente_p, dt_inicio_ciclo_w, nr_ciclo_inicial_p, nr_ciclo_final_p, nr_dia_inicial_p, nr_dia_final_p, nm_usuario_p, ie_gera_data_real_p, ie_consiste_dia_util_p, dt_atualizacao_nrec_ww, ds_retorno_w);
end if;

begin
open c06;
loop
fetch c06 into	
	nr_seq_evento_w;
EXIT WHEN NOT FOUND; /* apply on c06 */
	begin
	CALL gerar_evento_paciente_ciclo(	nr_seq_evento_w,	
					nr_atendimento_w,
					cd_pessoa_fisica_w,
					nr_seq_paciente_p,
					ds_dias_gerados_w,
					nm_usuario_p);
	end;
end loop;
close c06;
exception
	when others then
	null;
end;

begin
ie_gerado_receita_amb_p := gerar_receita_amb_onc(	nr_seq_paciente_p, nr_ciclo_inicial_p, nr_ciclo_final_p, nr_atendimento_w, nm_usuario_p, ie_gerado_receita_amb_p);
exception
when others then
	null;
end;

ds_retorno_quimio_p	:= substr(substr(ds_retorno_w,1,length(ds_retorno_w) - 2),1,255);

if (ie_medico_inativo_w = 'S') and (Obter_se_medico(Obter_Pf_Usuario(nm_usuario_p,'C'),'M') = 'S') and (coalesce(ie_altera_medico_resp_w,'N') = 'S') and (cd_medico_resp_w IS NOT NULL AND cd_medico_resp_w::text <> '') then


	update 	paciente_setor
	set    	cd_medico_resp  = Obter_Pf_Usuario(nm_usuario_p,'C')
	where  	nr_seq_paciente = nr_seq_paciente_p
	and   	obter_situacao_medico(cd_medico_resp) = 'I';

	insert into paciente_prot_medic_hist(	nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_alteracao,
			ie_tipo_alteracao,
			ds_justificativa,
			nr_seq_paciente,
			nr_seq_atendimento,
			nm_tabela,
			nm_atributo,
			ds_valor_ant,
			ds_valor_novo,
			cd_profissional)
	values (	nextval('paciente_prot_medic_hist_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			'Update',
			obter_desc_expressao(782208) /*'Parametro [1391] - PEP'*/
,
			nr_seq_paciente_p,
			nr_atendimento_p,
			'PACIENTE_SETOR',
			'CD_MEDICO_RESP',
			cd_medico_resp_w,
			to_char(Obter_Pf_Usuario(nm_usuario_p,'C')),
			Obter_Pf_Usuario(nm_usuario_p,'C'));			
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_ciclo_oncologia ( nr_seq_paciente_p bigint, dt_inicio_p timestamp, nr_seq_protoclo_p bigint, nr_ciclo_inicial_p bigint, nr_ciclo_final_p bigint, nr_dia_inicial_p bigint, nr_dia_final_p bigint, nr_atendimento_p bigint, qt_peso_p bigint, nm_usuario_p text, ie_gera_data_real_p text, ie_consiste_dia_util_p text, ie_gerado_receita_amb_p INOUT text, ds_retorno_quimio_p INOUT text) FROM PUBLIC;

