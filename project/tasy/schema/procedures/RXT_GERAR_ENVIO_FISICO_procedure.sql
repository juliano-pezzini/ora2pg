-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rxt_gerar_envio_fisico ( nr_seq_fase_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_tipo_trat_p text) AS $body$
DECLARE



nr_seq_campo_w double precision;
ds_campo_tratamento_w varchar(2000);
ie_tipo_x_w varchar(10);
ie_tipo_y_w varchar(10);
qt_tam_x_w double precision;
qt_tam_y_w double precision;
qt_x1_w double precision;
qt_y1_w double precision;
qt_x2_w double precision;
qt_y2_w double precision;
qt_numero_aplicacoes_w double precision;
qt_dose_tumor_diaria_w double precision;
qt_ssd_w double precision;
qt_dose_tumor_real_w double precision;
qt_angulo_gantry_w double precision;
qt_angulo_gantry_final_w double precision;
qt_angulo_colimador_w double precision;
qt_ang_colimador_final_w double precision;
qt_angulo_mesa_w double precision;
qt_unidade_monitor_w double precision;
nr_seq_energia_rad_w double precision;
nr_seq_rxt_campo_w  bigint;
nr_seq_ene_fotons_w rxt_campo.nr_seq_ene_fotons%type;
nr_insercao_w		rxt_braq_campo_aplic_trat.nr_insercao%type;
qt_atividade_ci_w	rxt_braq_campo_aplic_trat.qt_atividade_ci%type;
qt_tempo_w			rxt_braq_campo_aplic_trat.qt_tempo%type;
qt_angulacao_w		rxt_braq_campo_aplic_trat.qt_angulacao%type;
nr_seq_aplic_w		rxt_braq_campo_aplic_trat.nr_sequencia%type;
ds_resultado_w		rxt_braq_campo_aplic_trat.ds_resultado%type;
nr_lib_anterior_w	rxt_planejamento_fisico.nr_sequencia%type;


c01 CURSOR FOR
    SELECT 	a.nr_seq_campo,
            a.ds_campo,
            a.ie_tipo_x,
            a.ie_tipo_y,
            a.qt_tam_x,
            a.qt_tam_y,
            a.qt_x1,
            a.qt_y1,
            a.qt_x2,
            a.qt_y2,
            a.nr_aplicacoes,
            a.qt_dose_diaria,
            a.qt_ssd,
            a.qt_dose_total,
            a.qt_angulo_gantry,
            a.qt_angulo_gantry_final,
            a.qt_angulo_colimador,
            a.qt_ang_colimador_final,
            a.qt_angulo_mesa,
            a.qt_dose_monitor,
            a.nr_seq_energia_rad,
			a.nr_sequencia,
			a.nr_seq_ene_fotons
    from 	rxt_campo a
    where coalesce(a.dt_envio_fisico::text, '') = ''
    and coalesce(a.dt_lib_fisico::text, '') = ''
    and coalesce(a.ie_situacao,'A') = 'A'
    and a.nr_seq_fase = nr_seq_fase_p;

c02 CURSOR FOR
    SELECT 	a.nr_insercao,
			a.nr_seq_campo,
			a.qt_atividade_ci,
			a.qt_tempo,
			a.qt_angulacao,
			a.nr_sequencia,
			a.ds_resultado
    from 	rxt_braq_campo_aplic_trat a
    where coalesce(a.dt_envio_fisico::text, '') = ''
    and coalesce(a.dt_lib_fisico::text, '') = ''
    and coalesce(a.ie_situacao,'A') = 'A'
    and a.nr_seq_aplic_trat = nr_seq_fase_p;


BEGIN

	if (ie_tipo_trat_p = 'T') then
		open c01;
		loop
		fetch c01 into
			nr_seq_campo_w,
			ds_campo_tratamento_w,
			ie_tipo_x_w,
			ie_tipo_y_w,
			qt_tam_x_w,
			qt_tam_y_w,
			qt_x1_w,
			qt_y1_w,
			qt_x2_w,
			qt_y2_w,
			qt_numero_aplicacoes_w,
			qt_dose_tumor_diaria_w,
			qt_ssd_w,
			qt_dose_tumor_real_w,
			qt_angulo_gantry_w,
			qt_angulo_gantry_final_w,
			qt_angulo_colimador_w,
			qt_ang_colimador_final_w,
			qt_angulo_mesa_w,
			qt_unidade_monitor_w,
			nr_seq_energia_rad_w,
			nr_seq_rxt_campo_w,
			nr_seq_ene_fotons_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		select max(a.nr_sequencia)
		into STRICT nr_lib_anterior_w
		from rxt_planejamento_fisico a,
			 rxt_campo b
		where a.nr_seq_rxt_campo = b.nr_seq_campo_inativacao
		and   b.nr_sequencia =  nr_seq_rxt_campo_w;

		if (nr_lib_anterior_w IS NOT NULL AND nr_lib_anterior_w::text <> '') then
			update rxt_planejamento_fisico
			set ie_situacao = 'I',
				nm_usuario_inativacao = nm_usuario_p,
				dt_inativacao = clock_timestamp()
			where nr_sequencia = nr_lib_anterior_w;
		end if;

		insert into rxt_planejamento_fisico(nr_sequencia,
											nr_seq_campo,
											ds_campo_tratamento,
											ie_tipo_x,
											ie_tipo_y,
											qt_tam_x,
											qt_tam_y,
											qt_x1,
											qt_y1,
											qt_x2,
											qt_y2,
											qt_numero_aplicacoes,
											qt_dose_tumor_diaria,
											qt_ssd,
											qt_dose_tumor_real,
											qt_angulo_gantry,
											qt_angulo_gantry_final,
											qt_angulo_colimador,
											qt_ang_colimador_final,
											qt_angulo_mesa,
											qt_unidade_monitor,
											nr_seq_energia_rad,
											nr_seq_ene_fotons,
											cd_estabelecimento,
											dt_atualizacao,
											nm_usuario,
											dt_atualizacao_nrec,
											nm_usuario_nrec,
											nr_seq_fase,
											nr_seq_rxt_campo,
											ie_situacao)
		values (nextval('rxt_planejamento_fisico_seq'),
											nr_seq_campo_w,
											ds_campo_tratamento_w,
											ie_tipo_x_w,
											ie_tipo_y_w,
											qt_tam_x_w,
											qt_tam_y_w,
											qt_x1_w,
											qt_y1_w,
											qt_x2_w,
											qt_y2_w,
											qt_numero_aplicacoes_w,
											qt_dose_tumor_diaria_w,
											qt_ssd_w,
											qt_dose_tumor_real_w,
											qt_angulo_gantry_w,
											qt_angulo_gantry_final_w,
											qt_angulo_colimador_w,
											qt_ang_colimador_final_w,
											qt_angulo_mesa_w,
											qt_unidade_monitor_w,
											nr_seq_energia_rad_w,
											nr_seq_ene_fotons_w,
											cd_estabelecimento_p,
											clock_timestamp(),
											nm_usuario_p,
											clock_timestamp(),
											nm_usuario_p,
											nr_seq_fase_p,
											nr_seq_rxt_campo_w,
											'A');
		end;
		end loop;
		close c01;

		update rxt_campo a
		set a.dt_envio_fisico = clock_timestamp()
		where coalesce(a.dt_envio_fisico::text, '') = ''
		and coalesce(a.dt_lib_fisico::text, '') = ''
		and coalesce(a.ie_situacao,'A') = 'A'
		and a.nr_seq_fase = nr_seq_fase_p;

	elsif (ie_tipo_trat_p = 'B') then
		open c02;
		loop
		fetch c02 into
		nr_insercao_w,
		nr_seq_campo_w,
		qt_atividade_ci_w,
		qt_tempo_w,
		qt_angulacao_w,
		nr_seq_aplic_w,
		ds_resultado_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		select max(a.nr_sequencia)
		into STRICT nr_lib_anterior_w
		from rxt_plan_braqui_fisico a,
			 rxt_braq_campo_aplic_trat b
		where a.nr_seq_aplic = b.nr_seq_campo_inativacao
		and   b.nr_sequencia =  nr_seq_aplic_w;

		if (nr_lib_anterior_w IS NOT NULL AND nr_lib_anterior_w::text <> '') then
			update rxt_plan_braqui_fisico
			set ie_situacao = 'I',
				nm_usuario_inativacao = nm_usuario_p,
				dt_inativacao = clock_timestamp()
			where nr_sequencia = nr_lib_anterior_w;
		end if;


		insert into rxt_plan_braqui_fisico(	nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											dt_atualizacao_nrec,
											nm_usuario_nrec,
											nr_seq_aplic,
											ds_resultado,
											nr_insercao,
											nr_seq_campo,
											qt_atividade_ci,
											qt_tempo,
											qt_angulacao,
											nr_seq_braq_aplic_trat,
											ie_situacao)
		values (nextval('rxt_planejamento_fisico_seq'),
											clock_timestamp(),
											nm_usuario_p,
											clock_timestamp(),
											nm_usuario_p,
											nr_seq_aplic_w,
											ds_resultado_w,
											nr_insercao_w,
											nr_seq_campo_w,
											qt_atividade_ci_w,
											qt_tempo_w,
											qt_angulacao_w,
											nr_seq_fase_p,
											'A');
		end;
		end loop;
		close c02;

		update rxt_braq_campo_aplic_trat a
		set a.dt_envio_fisico = clock_timestamp()
		where coalesce(a.dt_envio_fisico::text, '') = ''
		and coalesce(a.dt_lib_fisico::text, '') = ''
		and coalesce(a.ie_situacao,'A') = 'A'
		and a.nr_seq_aplic_trat = nr_seq_fase_p;

	end if;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rxt_gerar_envio_fisico ( nr_seq_fase_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_tipo_trat_p text) FROM PUBLIC;

