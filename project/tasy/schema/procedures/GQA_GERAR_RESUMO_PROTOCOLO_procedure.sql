-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gqa_gerar_resumo_protocolo ( nr_seq_protocolo_p bigint, cd_pessoa_fisica_p bigint, nr_atendimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, tipo_p text ) AS $body$
DECLARE


dummy                 gqa_protocolo_ger_resumo.ds_resumo%type;
nm_usuario_w          gqa_protocolo_ger_resumo.nm_usuario%type;
nr_seq_resumo_w       gqa_protocolo_ger_resumo.nr_sequencia%type;
dt_inicial_w          gqa_protocolo_pac.dt_liberacao%type;
dt_final_w            gqa_protocolo_pac.dt_liberacao%type;
nr_atendimento_w      gqa_protocolo_pac.nr_atendimento%type;
cd_pessoa_fisica_w    gqa_protocolo_pac.cd_pessoa_fisica%type;
nr_seq_protocolo_w    gqa_protocolo_pac.nr_sequencia%type;
tipo_w                 varchar(1);

  protocolo RECORD;

BEGIN
  select obter_usuario_ativo into STRICT nm_usuario_w;

  if (coalesce(dt_inicial_p::text, '') = '' or dt_inicial_p = '') then
    dt_inicial_w := null;
  else
    dt_inicial_w := dt_inicial_p;
  end if;

  if (coalesce(dt_final_p::text, '') = '' or dt_final_p = '') then
    dt_final_w := null;
  else
    dt_final_w := dt_final_p;
  end if;

  if (coalesce(nr_atendimento_p::text, '') = '' or nr_atendimento_p = '0' or nr_atendimento_p = '') then
    nr_atendimento_w := null;
  else
    nr_atendimento_w := nr_atendimento_p;
  end if;

  if (coalesce(cd_pessoa_fisica_p::text, '') = '' or cd_pessoa_fisica_p = '0' or cd_pessoa_fisica_p = '') then
    cd_pessoa_fisica_w := null;
  else
    cd_pessoa_fisica_w := cd_pessoa_fisica_p;
  end if;

  if (coalesce(nr_seq_protocolo_p::text, '') = '' or nr_seq_protocolo_p = '0' or nr_seq_protocolo_p = '') then
    nr_seq_protocolo_w := null;
  else
    nr_seq_protocolo_w := nr_seq_protocolo_p;
  end if;

  if (coalesce(tipo_p::text, '') = '' or tipo_p = '0' or tipo_p = '') then
    tipo_w := 'H';
  else
    tipo_w := tipo_p;
  end if;

  if (coalesce(nr_seq_protocolo_w::text, '') = '' and coalesce(cd_pessoa_fisica_w::text, '') = '' and coalesce(nr_atendimento_w::text, '') = '') then
    RAISE EXCEPTION '%', obter_desc_expressao(692445) USING ERRCODE = '45011';
  end if;

  for protocolo in (
      SELECT xx.* from gqa_protocolo_pac xx where
      (
        ((nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and xx.nr_atendimento =  nr_atendimento_w) or (coalesce(nr_atendimento_w::text, '') = '' and (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '') and xx.nr_sequencia = nr_seq_protocolo_w) or (coalesce(nr_atendimento_w::text, '') = '' and coalesce(nr_seq_protocolo_w::text, '') = '' and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and xx.cd_pessoa_fisica = cd_pessoa_fisica_w)
      )
      and (
          (
              (dt_inicial_w IS NOT NULL AND dt_inicial_w::text <> '') and (dt_final_w IS NOT NULL AND dt_final_w::text <> '')
              and trunc(xx.dt_liberacao) between dt_inicial_w and dt_final_w
          ) or (
              coalesce(dt_inicial_w::text, '') = '' and (dt_final_w IS NOT NULL AND dt_final_w::text <> '')
              and trunc(xx.dt_liberacao) <= dt_final_w
          ) or (
              (dt_inicial_w IS NOT NULL AND dt_inicial_w::text <> '') and coalesce(dt_final_w::text, '') = ''
              and trunc(xx.dt_liberacao) >= dt_inicial_w
          ) or (
              coalesce(dt_inicial_w::text, '') = '' and coalesce(dt_final_w::text, '') = ''
          )
      )
      and (xx.dt_liberacao IS NOT NULL AND xx.dt_liberacao::text <> '')
  ) loop
        dummy := '';

        delete from gqa_protocolo_ger_resumo where nr_seq_prot_pac = protocolo.nr_sequencia and nm_usuario = nm_usuario_w;

        select nextval('gqa_protocolo_ger_resumo_seq') into STRICT nr_seq_resumo_w;

        dummy := gqa_obter_ger_resumo_protocolo(protocolo.nr_sequencia, tipo_w);

        insert into gqa_protocolo_ger_resumo(
          ds_resumo,
          dt_atualizacao,
          dt_atualizacao_nrec,
          nm_usuario,
          nm_usuario_nrec,
          nr_seq_prot_pac,
          nr_sequencia
        ) values (
          dummy,
          clock_timestamp(),
          clock_timestamp(),
          nm_usuario_w,
          nm_usuario_w,
          protocolo.nr_sequencia,
          nr_seq_resumo_w
        );
  end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gqa_gerar_resumo_protocolo ( nr_seq_protocolo_p bigint, cd_pessoa_fisica_p bigint, nr_atendimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, tipo_p text ) FROM PUBLIC;

