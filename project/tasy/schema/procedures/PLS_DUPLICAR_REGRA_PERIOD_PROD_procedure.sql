-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_duplicar_regra_period_prod (nr_seq_regra_p pls_pp_regra_periodo.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_regra_duplic_p INOUT pls_pp_regra_periodo.nr_sequencia%type) AS $body$
DECLARE

					
/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
finalidade: duplicar as regras da função ops - pagamento de produção médica
-------------------------------------------------------------------------------------------------------------------

locais de chamada direta: 
[  ]  objetos do dicionário [x] tasy (delphi/java) [  ] portal [  ]  relatórios [ ] outros:
 ------------------------------------------------------------------------------------------------------------------

pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/ 

-- combinações de filtros
c01 CURSOR(	nr_seq_regra_pc		pls_pp_regra_periodo.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		ie_excecao,
		ie_filtro_conta,
		ie_filtro_contrato,
		ie_filtro_material,
		ie_filtro_pagamento,
		ie_filtro_prestador,
		ie_filtro_procedimento,
		ie_filtro_produto,
		ie_filtro_protocolo,
		ie_situacao,
		ie_tipo_filtro,
		nm_filtro,
		nr_seq_lote
	from	pls_pp_rp_cta_filtro
	where	nr_seq_regra_periodo = nr_seq_regra_pc;
	
-- protocolo
c02 CURSOR(	nr_seq_pp_rp_filtro_pc	pls_pp_rp_cta_filtro.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		ie_situacao,
		nr_protocolo_prestador,
		nr_seq_pp_rp_filtro,
		nr_seq_protocolo,
		nr_seq_tipo_prest_prot
	from	pls_pp_rp_filtro_prot
	where	nr_seq_pp_rp_filtro = nr_seq_pp_rp_filtro_pc;
	
-- conta
c03 CURSOR(	nr_seq_pp_rp_filtro_pc	pls_pp_rp_cta_filtro.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		ie_origem_conta,
		ie_situacao,
		ie_tipo_guia,
		nr_seq_conta,
		nr_seq_pp_rp_filtro
	from	pls_pp_rp_filtro_cta
	where	nr_seq_pp_rp_filtro = nr_seq_pp_rp_filtro_pc;
	
-- prestador
c04 CURSOR(	nr_seq_pp_rp_filtro_pc	pls_pp_rp_cta_filtro.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		cd_condicao_pagamento,
		cd_prestador_cod,
		ie_prest_vinc_lote,
		ie_situacao,
		ie_tipo_pessoa_prest,
		nr_seq_classif_prestador,
		nr_seq_pp_rp_filtro,
		nr_seq_prestador,
		nr_seq_tipo_prestador,
		nr_seq_grupo_prestador
	from	pls_pp_rp_filtro_prest
	where	nr_seq_pp_rp_filtro = nr_seq_pp_rp_filtro_pc;
	
-- contrato
c05 CURSOR(	nr_seq_pp_rp_filtro_pc	pls_pp_rp_cta_filtro.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		ie_situacao,
		nr_seq_contrato,
		nr_seq_grupo_contrato,
		nr_seq_pp_rp_filtro
	from	pls_pp_rp_filtro_contr
	where	nr_seq_pp_rp_filtro = nr_seq_pp_rp_filtro_pc;
	
-- produto
c06 CURSOR(	nr_seq_pp_rp_filtro_pc	pls_pp_rp_cta_filtro.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		ie_situacao,
		nr_seq_plano,
		nr_seq_pp_rp_filtro
	from	pls_pp_rp_filtro_prod
	where	nr_seq_pp_rp_filtro = nr_seq_pp_rp_filtro_pc;
	
-- pagamento
c07 CURSOR(	nr_seq_pp_rp_filtro_pc	pls_pp_rp_cta_filtro.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		ie_situacao,
		nr_seq_evento,
		nr_seq_pp_rp_filtro
	from	pls_pp_rp_filtro_pag
	where	nr_seq_pp_rp_filtro = nr_seq_pp_rp_filtro_pc;
	
-- procedimentos
c08 CURSOR(	nr_seq_pp_rp_filtro_pc	pls_pp_rp_cta_filtro.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		cd_area_procedimento,
		cd_especialidade,
		cd_grupo_proc,
		cd_procedimento,
		ie_origem_proced,
		ie_situacao,
		ie_tipo_despesa_proc,
		nr_seq_pp_rp_filtro
	from	pls_pp_rp_filtro_proc
	where	nr_seq_pp_rp_filtro = nr_seq_pp_rp_filtro_pc;
	
-- materiais
c09 CURSOR(	nr_seq_pp_rp_filtro_pc	pls_pp_rp_cta_filtro.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		ie_situacao,
		ie_tipo_despesa_mat,
		nr_seq_estrut_mat,
		nr_seq_material,
		nr_seq_pp_rp_filtro
	from	pls_pp_rp_filtro_mat
	where	nr_seq_pp_rp_filtro = nr_seq_pp_rp_filtro_pc;
	
nr_seq_pp_rp_cta_filtro_w	pls_pp_rp_cta_filtro.nr_sequencia%type;

BEGIN

if (nr_seq_regra_p IS NOT NULL AND nr_seq_regra_p::text <> '') then
	-- obtem a sequência da tabela pls_pp_regra_periodo
	select	nextval('pls_pp_regra_periodo_seq')
	into STRICT	nr_seq_regra_duplic_p
	;
	
	-- copia o período de pagamento
	insert into pls_pp_regra_periodo(
		nr_sequencia,		cd_estabelecimento,	ds_nome_regra,
		dt_atualizacao,		dt_atualizacao_nrec,	ie_situacao,
		ie_utilizado,		nm_usuario,		nm_usuario_nrec,
		nr_fluxo_pgto)
	(SELECT	nr_seq_regra_duplic_p,	cd_estabelecimento_p,	substr('Cópia - '|| ds_nome_regra, 1, 255),
		clock_timestamp(),		clock_timestamp(),		ie_situacao,
		'N',			nm_usuario_p,		nm_usuario_p,
		nr_fluxo_pgto
	from	pls_pp_regra_periodo
	where	nr_sequencia = nr_seq_regra_p);
	
	-- copia todas as combinações que existem para o período
	for r_c01_w in c01( nr_seq_regra_p ) loop
		insert into pls_pp_rp_cta_filtro(
			nr_sequencia,				dt_atualizacao,				dt_atualizacao_nrec,
			ie_excecao,				ie_filtro_conta,			ie_filtro_contrato,
			ie_filtro_material,			ie_filtro_pagamento,			ie_filtro_prestador,
			ie_filtro_procedimento,			ie_filtro_produto,			ie_filtro_protocolo,
			ie_situacao,				ie_tipo_filtro,				nm_filtro,
			nm_usuario,				nm_usuario_nrec,			nr_seq_regra_periodo)
		values (nextval('pls_pp_rp_cta_filtro_seq'),	clock_timestamp(),				clock_timestamp(),
			r_c01_w.ie_excecao,			r_c01_w.ie_filtro_conta,		r_c01_w.ie_filtro_contrato,
			r_c01_w.ie_filtro_material,		r_c01_w.ie_filtro_pagamento,		r_c01_w.ie_filtro_prestador,
			r_c01_w.ie_filtro_procedimento,		r_c01_w.ie_filtro_produto,		r_c01_w.ie_filtro_protocolo,
			r_c01_w.ie_situacao,			r_c01_w.ie_tipo_filtro,			r_c01_w.nm_filtro,
			nm_usuario_p,				nm_usuario_p,				nr_seq_regra_duplic_p) returning nr_sequencia into nr_seq_pp_rp_cta_filtro_w;
			
		for r_c02_w in c02( r_c01_w.nr_sequencia ) loop	-- protocolo
			insert into pls_pp_rp_filtro_prot(
				nr_sequencia,				dt_atualizacao,				dt_atualizacao_nrec,
				ie_situacao,				nm_usuario,				nm_usuario_nrec,
				nr_protocolo_prestador,			nr_seq_pp_rp_filtro,			nr_seq_protocolo,
				nr_seq_tipo_prest_prot)			
			values (	nextval('pls_pp_rp_filtro_prot_seq'),	clock_timestamp(),				clock_timestamp(),
				r_c02_w.ie_situacao,			nm_usuario_p,				nm_usuario_p,
				r_c02_w.nr_protocolo_prestador,		nr_seq_pp_rp_cta_filtro_w,		r_c02_w.nr_seq_protocolo,
				r_c02_w.nr_seq_tipo_prest_prot);
		end loop;
		
		for r_c03_w in c03( r_c01_w.nr_sequencia ) loop -- conta
			insert into pls_pp_rp_filtro_cta(
				nr_sequencia,				dt_atualizacao,				dt_atualizacao_nrec,
				ie_origem_conta,			ie_situacao,				ie_tipo_guia,
				nm_usuario,				nm_usuario_nrec,			nr_seq_conta,
				nr_seq_pp_rp_filtro)	
			values (	nextval('pls_pp_rp_filtro_cta_seq'),	clock_timestamp(),				clock_timestamp(),
				r_c03_w.ie_origem_conta,		r_c03_w.ie_situacao,			r_c03_w.ie_tipo_guia,
				nm_usuario_p,				nm_usuario_p,				r_c03_w.nr_seq_conta,
				nr_seq_pp_rp_cta_filtro_w);
		end loop;
		
		for r_c04_w in c04( r_c01_w.nr_sequencia ) loop	-- prestador
			insert into pls_pp_rp_filtro_prest(
				nr_sequencia,				cd_condicao_pagamento,			cd_prestador_cod,
				dt_atualizacao,				dt_atualizacao_nrec,			ie_prest_vinc_lote,
				ie_situacao,				ie_tipo_pessoa_prest,			nm_usuario,
				nm_usuario_nrec,			nr_seq_classif_prestador,		nr_seq_pp_rp_filtro,
				nr_seq_prestador,			nr_seq_tipo_prestador,			nr_seq_grupo_prestador)	
			values (	nextval('pls_pp_rp_filtro_prest_seq'),	r_c04_w.cd_condicao_pagamento,		r_c04_w.cd_prestador_cod,
				clock_timestamp(),				clock_timestamp(),				r_c04_w.ie_prest_vinc_lote,
				r_c04_w.ie_situacao,			r_c04_w.ie_tipo_pessoa_prest,		nm_usuario_p,
				nm_usuario_p,				r_c04_w.nr_seq_classif_prestador,	nr_seq_pp_rp_cta_filtro_w,
				r_c04_w.nr_seq_prestador,		r_c04_w.nr_seq_tipo_prestador,		r_c04_w.nr_seq_grupo_prestador);
		end loop;
		
		for r_c05_w in c05( r_c01_w.nr_sequencia ) loop	-- contrato
			insert into pls_pp_rp_filtro_contr(
				nr_sequencia,				dt_atualizacao,				dt_atualizacao_nrec,
				ie_situacao,				nm_usuario,				nm_usuario_nrec,
				nr_seq_contrato,			nr_seq_grupo_contrato,			nr_seq_pp_rp_filtro)
			values (	nextval('pls_pp_rp_filtro_contr_seq'),	clock_timestamp(),				clock_timestamp(),
				r_c05_w.ie_situacao,			nm_usuario_p,				nm_usuario_p,
				r_c05_w.nr_seq_contrato,		r_c05_w.nr_seq_grupo_contrato,		nr_seq_pp_rp_cta_filtro_w);
		end loop;
		
		for r_c06_w in c06( r_c01_w.nr_sequencia ) loop	-- produto
			insert into pls_pp_rp_filtro_prod(
				nr_sequencia,				dt_atualizacao,				dt_atualizacao_nrec,
				ie_situacao,				nm_usuario,				nm_usuario_nrec,
				nr_seq_plano,				nr_seq_pp_rp_filtro)
			values (	nextval('pls_pp_rp_filtro_prod_seq'),	clock_timestamp(),				clock_timestamp(),
				r_c06_w.ie_situacao,			nm_usuario_p,				nm_usuario_p,
				r_c06_w.nr_seq_plano,			nr_seq_pp_rp_cta_filtro_w);
		end loop;
		
		for r_c07_w in c07( r_c01_w.nr_sequencia ) loop	-- pagamento
			insert into pls_pp_rp_filtro_pag(
				nr_sequencia,				dt_atualizacao,				dt_atualizacao_nrec,
				ie_situacao,				nm_usuario,				nm_usuario_nrec,
				nr_seq_evento,				nr_seq_pp_rp_filtro)
			values (	nextval('pls_pp_rp_filtro_pag_seq'),	clock_timestamp(),				clock_timestamp(),
				r_c07_w.ie_situacao,			nm_usuario_p,				nm_usuario_p,
				r_c07_w.nr_seq_evento,			nr_seq_pp_rp_cta_filtro_w);
		end loop;
		
		for r_c08_w in c08( r_c01_w.nr_sequencia ) loop	-- procedimentos
			insert into pls_pp_rp_filtro_proc(
				nr_sequencia,				cd_area_procedimento,			cd_especialidade,
				cd_grupo_proc,				cd_procedimento,			dt_atualizacao,
				dt_atualizacao_nrec,			ie_origem_proced,			ie_situacao,
				ie_tipo_despesa_proc,			nm_usuario,				nm_usuario_nrec,
				nr_seq_pp_rp_filtro)
			values (	nextval('pls_pp_rp_filtro_proc_seq'),	r_c08_w.cd_area_procedimento,		r_c08_w.cd_especialidade,
				r_c08_w.cd_grupo_proc,			r_c08_w.cd_procedimento,		clock_timestamp(),
				clock_timestamp(),				r_c08_w.ie_origem_proced,		r_c08_w.ie_situacao,
				r_c08_w.ie_tipo_despesa_proc,		nm_usuario_p,				nm_usuario_p,
				nr_seq_pp_rp_cta_filtro_w);
		end loop;
		
		for r_c09_w in c09( r_c01_w.nr_sequencia ) loop	-- materiais
			insert into pls_pp_rp_filtro_mat(
				nr_sequencia,				dt_atualizacao,				dt_atualizacao_nrec,
				ie_situacao,				ie_tipo_despesa_mat,			nm_usuario,
				nm_usuario_nrec,			nr_seq_estrut_mat,			nr_seq_material,
				nr_seq_pp_rp_filtro)
			values (	nextval('pls_pp_rp_filtro_mat_seq'),	clock_timestamp(),				clock_timestamp(),
				r_c09_w.ie_situacao,			r_c09_w.ie_tipo_despesa_mat,		nm_usuario_p,
				nm_usuario_p,				r_c09_w.nr_seq_estrut_mat,		r_c09_w.nr_seq_material,
				nr_seq_pp_rp_cta_filtro_w);
		end loop;
	end loop;
	
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_duplicar_regra_period_prod (nr_seq_regra_p pls_pp_regra_periodo.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type, nr_seq_regra_duplic_p INOUT pls_pp_regra_periodo.nr_sequencia%type) FROM PUBLIC;

