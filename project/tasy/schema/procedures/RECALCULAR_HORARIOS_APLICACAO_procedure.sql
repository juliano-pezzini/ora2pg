-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE recalcular_horarios_aplicacao ( nr_prescricao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w		integer;
nr_agrupamento_w	double precision;
qt_hora_aplicacao_w	smallint;
qt_min_aplicacao_w	smallint;
dt_prescricao_w		timestamp;
nr_agrupamento_ant_w	double precision := -1;
dt_primeiro_horario_w	timestamp;
dt_prim_hor_agrupamento_w	timestamp;
ie_gerar_horarios   	varchar(1);
ds_horarios_w		varchar(2000);
ds_horarios2_w		varchar(2000);
nr_prescricao_w		bigint;
ds_prim_horario_w	varchar(5);
dt_prim_horario_medic_w	timestamp;
qt_hora_intervalo_w				prescr_material.qt_hora_intervalo%type;
qt_min_intervalo_w				prescr_material.qt_min_intervalo%type;
nr_horas_validade_w				prescr_medica.nr_horas_validade%type;
nr_ocorrencia_w					prescr_material.nr_ocorrencia%type;
cd_material_w					prescr_material.cd_material%type;
cd_intervalo_w					prescr_material.cd_intervalo%type;
ie_via_aplicacao_w				prescr_material.ie_via_aplicacao%type;
qt_unitaria_w					prescr_material.qt_unitaria%type;
qt_dose_especial_w				prescr_material.qt_dose_especial%type;
ie_origem_inf_w					prescr_material.ie_origem_inf%type;
cd_unidade_medida_dose_w		prescr_material.cd_unidade_medida_dose%type;
qt_material_w					prescr_material.qt_material%type;
ie_se_necessario_w				prescr_material.ie_se_necessario%type;
ie_acm_w						prescr_material.ie_acm%type;
qt_total_dispensar_w			prescr_material.qt_total_dispensar%type;
ie_regra_disp_w					prescr_material.ie_regra_disp%type;
qt_dias_util_w					prescr_material.qt_dias_util%type;
dt_primeiro_horario_prescr_w	prescr_medica.dt_primeiro_horario%type;
ds_erro_w						varchar(2000);

c10 CURSOR FOR
SELECT	b.nr_sequencia,
	b.nr_agrupamento,
	b.qt_hora_aplicacao,
	b.qt_min_aplicacao,
	b.cd_intervalo,
	b.nr_ocorrencia,
	b.cd_material,
	a.dt_prescricao,
	to_date(to_char(a.dt_prescricao,'dd/mm/yyyy') ||' '||coalesce(b.hr_prim_horario,to_char(coalesce(a.dt_primeiro_horario,a.dt_prescricao),'hh24:mi')),'dd/mm/yyyy hh24:mi:ss'),
	b.qt_hora_intervalo,
	b.qt_min_intervalo,
	a.nr_horas_validade,
	b.ie_via_aplicacao,
	b.qt_unitaria,
	b.qt_dose_especial,
	coalesce(b.ie_origem_inf, '1'),
	b.qt_dias_util,
	b.cd_unidade_medida_dose,
	coalesce(b.qt_material, 0),
	coalesce(b.ie_acm, 'N'),
	coalesce(b.ie_se_necessario, 'N')
from	prescr_material b,
		prescr_medica a
where	a.nr_prescricao	= nr_prescricao_p
and	a.nr_prescricao	= b.nr_prescricao
and	b.ie_agrupador	= 1
and	coalesce(b.ie_se_necessario,'N') <> 'S'
and	coalesce(b.ie_acm,'N') <> 'S'
order by b.nr_agrupamento;


BEGIN

--obter_param_usuario(3130, 67, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, qt_minutos_adic_w);
select	max(dt_primeiro_horario),
		max(dt_prescricao)
into STRICT	dt_primeiro_horario_prescr_w,
		dt_prescricao_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

if (dt_primeiro_horario_prescr_w < clock_timestamp()) then
	dt_primeiro_horario_prescr_w	:= clock_timestamp();
	dt_prescricao_w		:= clock_timestamp();
end if;

open c10;
loop
fetch c10 into	
	nr_sequencia_w,
	nr_agrupamento_w,
	qt_hora_aplicacao_w,
	qt_min_aplicacao_w,
	cd_intervalo_w,
	nr_ocorrencia_w,
	cd_material_w,
	dt_prescricao_w,
	dt_prim_horario_medic_w,
	qt_hora_intervalo_w,
	qt_min_intervalo_w,
	nr_horas_validade_w,
	ie_via_aplicacao_w,
	qt_unitaria_w,
	qt_dose_especial_w,
	ie_origem_inf_w,
	qt_dias_util_w,
	cd_unidade_medida_dose_w,
	qt_material_w,
	ie_se_necessario_w,
	ie_acm_w;
EXIT WHEN NOT FOUND; /* apply on c10 */
	begin
	
	if (nr_agrupamento_ant_w = -1) then
		dt_primeiro_horario_w	:= dt_prim_horario_medic_w;
	end if;
		
	if (nr_agrupamento_w <> nr_agrupamento_ant_w) then
		begin
		nr_ocorrencia_w := 0;
				
		SELECT * FROM calcular_horario_prescricao(nr_prescricao_p, cd_intervalo_w, dt_primeiro_horario_prescr_w, dt_primeiro_horario_w, nr_horas_validade_w, cd_material_w, qt_hora_intervalo_w, qt_min_intervalo_w, nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'N', null) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;
					
		ds_horarios_w		:= ds_horarios_w || ds_horarios2_w;
		ds_prim_horario_w	:= to_char(dt_primeiro_horario_w,'hh24:mi');

		SELECT * FROM obter_quant_dispensar(	cd_estabelecimento_p => cd_estabelecimento_p, cd_material_p => cd_material_w, nr_prescricao_p => nr_prescricao_p, nr_sequencia_p => nr_sequencia_w, cd_intervalo_p => cd_intervalo_w, ie_via_aplicacao_p => ie_via_aplicacao_w, qt_unitaria_p => qt_unitaria_w, qt_dose_esp_p => qt_dose_especial_w, nr_ocorrencia_p => nr_ocorrencia_w, ds_dose_dif_p => null, ie_origem_inf_p => ie_origem_inf_w, cd_unid_med_dose_p => cd_unidade_medida_dose_w, qt_dias_p => qt_dias_util_w, qt_material_p => qt_material_w,  -- in out
								qt_dispensar_p => qt_total_dispensar_w,  -- out
								ie_regra_disp_p => ie_regra_disp_w,  -- out
								ds_erro_p => ds_erro_w, ie_se_necessario_p => ie_se_necessario_w, ie_acm_p => ie_acm_w) INTO STRICT qt_material_p => qt_material_w, 
								qt_dispensar_p => qt_total_dispensar_w, 
								ie_regra_disp_p => ie_regra_disp_w, 
								ds_erro_p => ds_erro_w;		
			
		update	prescr_material
		set	ds_horarios	= replace(padroniza_horario(ds_horarios_w),'A',''),
			hr_prim_horario	= ds_prim_horario_w,
			nr_ocorrencia = nr_ocorrencia_w,
			dt_inicio_medic = dt_primeiro_horario_w,
			qt_total_dispensar = qt_total_dispensar_w,
			qt_material = qt_material_w
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_sequencia_w;
		
		update	prescr_material
		set	ds_horarios	= replace(padroniza_horario(ds_horarios_w),'A',''),
			hr_prim_horario	= ds_prim_horario_w,
			nr_ocorrencia	= nr_ocorrencia_w,
			dt_inicio_medic = dt_primeiro_horario_w
		where	nr_prescricao	= nr_prescricao_p
		and	nr_seq_kit	= nr_sequencia_w;
		
		update	prescr_material
		set	ds_horarios	= replace(padroniza_horario(ds_horarios_w),'A',''),
			hr_prim_horario	= ds_prim_horario_w,
			nr_ocorrencia	= nr_ocorrencia_w,
			dt_inicio_medic = dt_primeiro_horario_w
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia_diluicao	= nr_sequencia_w;
	
		dt_prim_hor_agrupamento_w := dt_primeiro_horario_w;
	
		dt_primeiro_horario_w	:= dt_primeiro_horario_w + (((coalesce(qt_hora_aplicacao_w,0) * 60) + coalesce(qt_min_aplicacao_w,0))/1440);
		end;
	else
		
		update	prescr_material
		set	ds_horarios	= replace(padroniza_horario(ds_horarios_w),'A',''),
			hr_prim_horario	= ds_prim_horario_w,
			nr_ocorrencia	= nr_ocorrencia_w,
			dt_inicio_medic = dt_prim_hor_agrupamento_w
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_sequencia_w;
		
		update	prescr_material
		set	ds_horarios		= replace(padroniza_horario(ds_horarios_w),'A',''),
			hr_prim_horario	= ds_prim_horario_w,
			nr_ocorrencia	= nr_ocorrencia_w,
			dt_inicio_medic = dt_prim_hor_agrupamento_w
		where	nr_prescricao	= nr_prescricao_p
		and	nr_seq_kit	= nr_sequencia_w;
		
		update	prescr_material
		set	ds_horarios	= replace(padroniza_horario(ds_horarios_w),'A',''),
			hr_prim_horario	= ds_prim_horario_w,
			nr_ocorrencia	= nr_ocorrencia_w,
			dt_inicio_medic = dt_prim_hor_agrupamento_w
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia_diluicao	= nr_sequencia_w;
	end if;
	nr_agrupamento_ant_w	:= nr_agrupamento_w;
	end;
end loop;
close c10;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE recalcular_horarios_aplicacao ( nr_prescricao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

