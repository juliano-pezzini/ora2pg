-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_exportar_conta_sem_pgto ( dt_final_p timestamp, nm_usuario_p text) AS $body$
DECLARE


nr_planilha_w			smallint;
qt_registros_w			bigint;
qt_limite_w			bigint := 999999;

/*Variaveis para geracao do arquivo*/

ds_erro_w			varchar(255);
ds_local_w			varchar(255);
nm_arquivo_w			varchar(255);
arq_texto_w			utl_file.file_type;

c_contas CURSOR FOR
	SELECT	v.nr_seq_conta							|| ';' ||
		v.dt_aviso							|| ';' ||
		v.nr_cpf_cnpj							|| ';' ||
		v.nm_usuario_princ						|| ';' ||
		v.nm_usuario_evento						|| ';' ||
		v.cd_beneficiario						|| ';' ||
		v.nr_contrato							|| ';' ||
		v.nr_registro_produto						|| ';' ||
		v.nr_cpf_cnpj_adic						|| ';' ||
		v.nm_prestador							|| ';' ||
		v.dt_ocorrencia							|| ';' ||
		0								|| ';' ||
		v.vl_evento							|| ';' ||
		v.ie_tipo_evento						|| ';' ||
		v.ie_tipo_documento						|| ';' ||
		v.nr_seq_protocolo						|| ';' ||
		v.dt_pagamento							|| ';' ||
		v.vl_pagamento							|| ';' ||
		v.cd_mat_proc							|| ';' ||
		v.vl_recuperacao						|| ';' ||
		v.ds_item_mat_proc						|| ';' ||
		v.dt_realizacao							|| ';' ||
		v.ds_tipo_vinculo						|| ';' ||
		v.ie_ato_cooperado						|| ';' ||
		v.ie_modalidade_contrat						|| ';' ||
		v.ie_regulamentacao						|| ';' ||
		v.ie_tipo_contratacao						|| ';' ||
		v.classif_cred_prov						|| ';' ||
		v.classif_deb_prov						|| ';' ||
		case 	when(pkg_date_utils.get_DiffDate(v.dt_aviso, dt_final_p, 'DAY')) > 120 then PERFORM obter_desc_expressao(492546)
			when(pkg_date_utils.get_DiffDate(v.dt_aviso, dt_final_p, 'DAY')) > 90 then PERFORM obter_desc_expressao(491705)
			when(pkg_date_utils.get_DiffDate(v.dt_aviso, dt_final_p, 'DAY')) > 60 then PERFORM obter_desc_expressao(490311)
			when(pkg_date_utils.get_DiffDate(v.dt_aviso, dt_final_p, 'DAY')) > 30 then PERFORM obter_desc_expressao(490310)
			when(pkg_date_utils.get_DiffDate(v.dt_aviso, dt_final_p, 'DAY')) > 0 then PERFORM obter_desc_expressao(490309)
			else PERFORM obter_desc_expressao(330037) end ds_linha
	from	(SELECT	c.nr_sequencia nr_seq_conta,
			pkg_date_utils.end_of(r.dt_mes_competencia, 'DAY') dt_aviso,
			coalesce(pls_obter_dados_pagador(s.nr_seq_pagador,'CPF'),pls_obter_dados_pagador(s.nr_seq_pagador,'CGC')) nr_cpf_cnpj,
			substr(pls_obter_nomes_contrato(s.nr_seq_pagador,'P'),1,255) nm_usuario_princ,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'N'),1,255) nm_usuario_evento,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,30) cd_beneficiario,
			t.nr_contrato nr_contrato,
			null dt_pagamento,
			null vl_pagamento,
			substr(pls_obter_se_corresp_assumida(c.ie_tipo_segurado,(p.nr_protocolo_ans)),1,255) nr_registro_produto,
			coalesce(coalesce(substr(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CPF'),1,255),
				substr(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CGC'),1,255)),
					CASE WHEN r.ie_tipo_protocolo='I' THEN substr(pls_obter_cnpj_congenere(r.nr_seq_congenere),1,255)  ELSE coalesce(obter_cpf_pessoa_fisica(c.cd_pessoa_fisica), c.cd_cgc) END ) nr_cpf_cnpj_adic,
			substr(coalesce(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'N'),CASE WHEN r.ie_tipo_protocolo='I' THEN pls_obter_nome_congenere(r.nr_seq_congenere)  ELSE obter_nome_pf_pj(c.cd_pessoa_fisica, c.cd_cgc) END ),1,255) nm_prestador,
			cp.dt_procedimento dt_ocorrencia,
			cp.vl_procedimento_imp vl_evento,
			substr(obter_desc_expressao(490445),1,255) ie_tipo_documento,
			max((	select	sum(j.vl_coparticipacao)
				from 	pls_conta_coparticipacao f,
					pls_conta_copartic_contab j
				where	cp.nr_sequencia = f.nr_seq_conta_proc
				and	j.nr_seq_conta_copartic = f.nr_sequencia)) vl_recuperacao,
			cp.vl_glosa vl_glosa,
			a.ie_tipo_grupo_ans ie_tipo_evento,
			r.nr_sequencia nr_seq_protocolo,
			cp.cd_procedimento cd_mat_proc,
			substr(obter_descricao_procedimento(cp.cd_procedimento, cp.ie_origem_proced),1,255) ds_item_mat_proc,
			cp.dt_procedimento dt_realizacao,
			substr(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'TR'),1,255) ds_tipo_vinculo,
			obter_valor_dominio(3418,cp.ie_ato_cooperado) ie_ato_cooperado,
			obter_valor_dominio(1669, p.ie_preco) ie_modalidade_contrat,
			obter_valor_dominio(2157, p.ie_regulamentacao) ie_regulamentacao,
			obter_valor_dominio(1666, p.ie_tipo_contratacao) ie_tipo_contratacao,
			cp.nr_sequencia nr_seq_mat_proc,
			CASE WHEN r.ie_tipo_protocolo='R' THEN  cp.cd_classif_cred  ELSE cp.cd_classif_prov_cred END  classif_cred_prov,
			CASE WHEN r.ie_tipo_protocolo='R' THEN  cp.cd_classif_deb  ELSE cp.cd_classif_prov_deb END  classif_deb_prov
		FROM pls_protocolo_conta r, pls_conta c
LEFT OUTER JOIN pls_plano p ON (c.nr_seq_plano = p.nr_sequencia)
, pls_conta_proc cp
LEFT OUTER JOIN ans_grupo_despesa a ON (cp.nr_seq_grupo_ans = a.nr_sequencia)
, pls_segurado s
LEFT OUTER JOIN pls_contrato t ON (s.nr_seq_contrato = t.nr_sequencia)
WHERE r.nr_sequencia = c.nr_seq_protocolo and c.nr_seq_segurado = s.nr_sequencia and cp.nr_seq_conta	= c.nr_sequencia   and not exists (select 1
					from	pls_conta_medica_resumo x,
						pls_lote_pagamento y
					where	x.nr_seq_lote_pgto	= y.nr_sequencia
					and	x.nr_seq_conta_proc	= cp.nr_sequencia
					and	x.nr_seq_conta		= c.nr_sequencia
					and	pkg_date_utils.start_of(y.dt_mes_competencia,'MONTH')	<= pkg_date_utils.start_of(dt_final_p,'MONTH')) and cp.ie_status not in ('D','M') and r.ie_situacao not in ('I', 'RE') and (r.ie_tipo_protocolo <> 'R' or not exists (	select 	1
									from	titulo_pagar tp
									where	tp.nr_seq_reembolso = r.nr_sequencia
									and	pkg_date_utils.start_of(tp.dt_emissao,'MONTH') <= pkg_date_utils.start_of(dt_final_p,'MONTH'))) group by c.nr_sequencia,
			r.dt_mes_competencia,
			coalesce(pls_obter_dados_pagador(s.nr_seq_pagador,'CPF'),pls_obter_dados_pagador(s.nr_seq_pagador,'CGC')),
			substr(pls_obter_nomes_contrato(s.nr_seq_pagador,'P'),1,255),
			substr(pls_obter_dados_segurado(s.nr_sequencia,'N'),1,255),
			substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,30),
			t.nr_contrato,
			substr(pls_obter_se_corresp_assumida(c.ie_tipo_segurado,(p.nr_protocolo_ans)),1,255),
			coalesce(coalesce(substr(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CPF'),1,255),
				substr(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CGC'),1,255)), 
					CASE WHEN r.ie_tipo_protocolo='I' THEN substr(pls_obter_cnpj_congenere(r.nr_seq_congenere),1,255)  ELSE coalesce(obter_cpf_pessoa_fisica(c.cd_pessoa_fisica), c.cd_cgc) END ),
			substr(coalesce(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'N'),CASE WHEN r.ie_tipo_protocolo='I' THEN pls_obter_nome_congenere(r.nr_seq_congenere)  ELSE obter_nome_pf_pj(c.cd_pessoa_fisica, c.cd_cgc) END ),1,255),
			cp.dt_procedimento,
			cp.vl_procedimento_imp,
			cp.vl_glosa,
			a.ie_tipo_grupo_ans,
			r.nr_sequencia,
			cp.cd_procedimento,
			substr(obter_descricao_procedimento(cp.cd_procedimento, cp.ie_origem_proced),1,255),
			substr(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'TR'),1,255),
			obter_valor_dominio(3418,cp.ie_ato_cooperado),
			obter_valor_dominio(1669, p.ie_preco),
			obter_valor_dominio(2157, p.ie_regulamentacao),
			obter_valor_dominio(1666, p.ie_tipo_contratacao),
			cp.nr_sequencia,
			CASE WHEN r.ie_tipo_protocolo='R' THEN  cp.cd_classif_cred  ELSE cp.cd_classif_prov_cred END ,
			CASE WHEN r.ie_tipo_protocolo='R' THEN  cp.cd_classif_deb  ELSE cp.cd_classif_prov_deb END 
		
union all

		select	c.nr_sequencia nr_seq_conta,
			pkg_date_utils.end_of(r.dt_mes_competencia, 'DAY') dt_aviso,
			coalesce(pls_obter_dados_pagador(s.nr_seq_pagador,'CPF'),pls_obter_dados_pagador(s.nr_seq_pagador,'CGC')) nr_cpf_cnpj,
			substr(pls_obter_nomes_contrato(s.nr_seq_pagador,'P'),1,255) nm_usuario_princ,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'N'),1,255) nm_usuario_evento,
			substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,30) cd_beneficiario,
			t.nr_contrato nr_contrato,
			null dt_pagamento,
			null vl_pagamento,
			substr(pls_obter_se_corresp_assumida(c.ie_tipo_segurado,(p.nr_protocolo_ans)),1,255) nr_registro_produto,
			coalesce(coalesce(substr(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CPF'),1,255),
				substr(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CGC'),1,255)), 
					CASE WHEN r.ie_tipo_protocolo='I' THEN substr(pls_obter_cnpj_congenere(r.nr_seq_congenere),1,255)  ELSE coalesce(obter_cpf_pessoa_fisica(c.cd_pessoa_fisica), c.cd_cgc) END ) nr_cpf_cnpj_adic,
			substr(coalesce(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'N'),CASE WHEN r.ie_tipo_protocolo='I' THEN pls_obter_nome_congenere(r.nr_seq_congenere)  ELSE obter_nome_pf_pj(c.cd_pessoa_fisica, c.cd_cgc) END ),1,255) nm_prestador,
			cm.dt_atendimento dt_ocorrencia,
			cm.vl_material_imp vl_evento,
			substr(obter_desc_expressao(490445),1,255) ie_tipo_documento,
			max((	select	sum(j.vl_coparticipacao)
				from 	pls_conta_coparticipacao f,
					pls_conta_copartic_contab j
				where	cm.nr_sequencia = f.nr_seq_conta_mat
				and	j.nr_seq_conta_copartic = f.nr_sequencia)) vl_recuperacao,
			cm.vl_glosa vl_glosa,
			a.ie_tipo_grupo_ans ie_tipo_evento,
			r.nr_sequencia nr_seq_protocolo,
			cm.cd_material cd_mat_proc,
			substr(pls_obter_dados_conta_mat(cm.nr_sequencia,'D'),1,255) ds_item_mat_proc,
			cm.dt_atendimento dt_realizacao,
			substr(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'TR'),1,255) ds_tipo_vinculo,
			obter_valor_dominio(3418,cm.ie_ato_cooperado) ie_ato_cooperado,
			obter_valor_dominio(1669, p.ie_preco) ie_modalidade_contrat,
			obter_valor_dominio(2157, p.ie_regulamentacao) ie_regulamentacao,
			obter_valor_dominio(1666, p.ie_tipo_contratacao) ie_tipo_contratacao,
			cm.nr_sequencia nr_seq_mat_proc,
			CASE WHEN r.ie_tipo_protocolo='R' THEN  cm.cd_classif_cred  ELSE cm.cd_classif_prov_cred END  cd_classif_prov_cred,
			CASE WHEN r.ie_tipo_protocolo='R' THEN  cm.cd_classif_deb  ELSE cm.cd_classif_prov_deb END  cd_classif_prov_deb
		FROM pls_protocolo_conta r, pls_conta c
LEFT OUTER JOIN pls_plano p ON (c.nr_seq_plano = p.nr_sequencia)
, pls_conta_mat cm
LEFT OUTER JOIN ans_grupo_despesa a ON (cm.nr_seq_grupo_ans = a.nr_sequencia)
, pls_segurado s
LEFT OUTER JOIN pls_contrato t ON (s.nr_seq_contrato = t.nr_sequencia)
WHERE r.nr_sequencia = c.nr_seq_protocolo and c.nr_seq_segurado = s.nr_sequencia and cm.nr_seq_conta	= c.nr_sequencia   and not exists (select 1
					from	pls_conta_medica_resumo x,
						pls_lote_pagamento y
					where	x.nr_seq_lote_pgto	= y.nr_sequencia
					and	x.nr_seq_conta_mat	= cm.nr_sequencia
					and	x.nr_seq_conta		= c.nr_sequencia
					and	pkg_date_utils.start_of(y.dt_mes_competencia,'MONTH')	<= pkg_date_utils.start_of(dt_final_p,'MONTH')) and cm.ie_status not in ('D','M') and r.ie_situacao not in ('I', 'RE') and (r.ie_tipo_protocolo <> 'R' or not exists (	select 	1
									from	titulo_pagar tp
									where	tp.nr_seq_reembolso = r.nr_sequencia
									and	pkg_date_utils.start_of(tp.dt_emissao,'MONTH') <= pkg_date_utils.start_of(dt_final_p,'MONTH'))) group by c.nr_sequencia,
			r.dt_mes_competencia,
			coalesce(pls_obter_dados_pagador(s.nr_seq_pagador,'CPF'),pls_obter_dados_pagador(s.nr_seq_pagador,'CGC')),
			substr(pls_obter_nomes_contrato(s.nr_seq_pagador,'P'),1,255),
			substr(pls_obter_dados_segurado(s.nr_sequencia,'N'),1,255),
			substr(pls_obter_dados_segurado(s.nr_sequencia,'C'),1,30),
			t.nr_contrato,
			substr(pls_obter_se_corresp_assumida(c.ie_tipo_segurado,(p.nr_protocolo_ans)),1,255),
			coalesce(coalesce(substr(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CPF'),1,255),
				substr(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'CGC'),1,255)), 
					CASE WHEN r.ie_tipo_protocolo='I' THEN substr(pls_obter_cnpj_congenere(r.nr_seq_congenere),1,255)  ELSE coalesce(obter_cpf_pessoa_fisica(c.cd_pessoa_fisica), c.cd_cgc) END ),
			substr(coalesce(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'N'),CASE WHEN r.ie_tipo_protocolo='I' THEN pls_obter_nome_congenere(r.nr_seq_congenere)  ELSE obter_nome_pf_pj(c.cd_pessoa_fisica, c.cd_cgc) END ),1,255),
			cm.dt_atendimento,
			cm.vl_material_imp,
			cm.vl_glosa,
			a.ie_tipo_grupo_ans,
			r.nr_sequencia,
			cm.cd_material,
			substr(pls_obter_dados_conta_mat(cm.nr_sequencia,'D'),1,255),
			substr(pls_obter_dados_prestador(c.nr_seq_prestador_exec,'TR'),1,255),
			obter_valor_dominio(3418,cm.ie_ato_cooperado),
			obter_valor_dominio(1669, p.ie_preco),
			obter_valor_dominio(2157, p.ie_regulamentacao),
			obter_valor_dominio(1666, p.ie_tipo_contratacao),
			cm.nr_sequencia,
			CASE WHEN r.ie_tipo_protocolo='R' THEN  cm.cd_classif_cred  ELSE cm.cd_classif_prov_cred END ,
			CASE WHEN r.ie_tipo_protocolo='R' THEN  cm.cd_classif_deb  ELSE cm.cd_classif_prov_deb END ) v
	where	v.dt_aviso <= fim_dia(dt_final_p);

BEGIN

qt_registros_w	:= 1;
nr_planilha_w	:= 2;

SELECT * FROM obter_evento_utl_file(1, null, ds_local_w, ds_erro_w) INTO STRICT ds_local_w, ds_erro_w;
nm_arquivo_w	:= 'WPLS4447_' || to_char(clock_timestamp(),'ddmmyyyyhh24miss') || nm_usuario_p || '.csv';
arq_texto_w := utl_file.fopen(ds_local_w,nm_arquivo_w,'W');
utl_file.put_line(arq_texto_w, obter_desc_expressao(961739));

for vet in c_contas loop
	begin	
	if (mod(qt_registros_w,qt_limite_w) = 0) then
		utl_file.fclose(arq_texto_w);
	
		nm_arquivo_w	:= 'WPLS4447_' || to_char(clock_timestamp(),'ddmmyyyyhh24miss') || nm_usuario_p || '_' || to_char(nr_planilha_w) ||'.csv';
		arq_texto_w 	:= utl_file.fopen(ds_local_w,nm_arquivo_w,'W');
		
		utl_file.put_line(arq_texto_w, obter_desc_expressao(961739));
		utl_file.fflush(arq_texto_w);
		
		qt_registros_w	:= qt_registros_w + 1;
		nr_planilha_w := nr_planilha_w + 1;
	end if;
	
	utl_file.put_line(arq_texto_w,vet.ds_linha);
	utl_file.fflush(arq_texto_w);
	
	qt_registros_w	:= qt_registros_w + 1;
	end;
end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_exportar_conta_sem_pgto ( dt_final_p timestamp, nm_usuario_p text) FROM PUBLIC;

