-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (nr_seq_proj_rec_v bigint, cd_estabelecimento_v varchar(255));


CREATE OR REPLACE PROCEDURE ctb_desatualizar_lote_projeto ( nr_lote_contabil_p ctb_movimento.nr_lote_contabil%type, nm_usuario_p text, nr_seq_proj_rec_p ctb_movimento.nr_seq_proj_rec%type, ds_erro_p INOUT text) AS $body$
DECLARE


nr_sequencia_w			ctb_movimento.nr_sequencia%type;
nr_seq_movimento_w		ctb_movto_centro_custo.nr_seq_movimento%type;
cd_conta_contabil_w		Conta_contabil.cd_conta_contabil%type;
cd_centro_custo_w		ctb_movto_centro_custo.cd_centro_custo%type;
vl_movimento_w			ctb_movimento.vl_movimento%type;
vl_encerramento_w		ctb_saldo_projeto.vl_encerramento%type;
vl_debito_w				lote_contabil.vl_debito%type;
vl_credito_w			lote_contabil.vl_credito%type;
vl_total_w				double precision;
vl_saldo_w				ctb_saldo_projeto.vl_saldo%type;
nr_seq_mes_ref_w		lote_contabil.nr_seq_mes_ref%type;
nr_seq_mes_ant_w		ctb_mes_ref.nr_sequencia%type;
nr_seq_ref_w			ctb_mes_ref.nr_sequencia%type;
cd_estabelecimento_w	ctb_movimento.cd_estabelecimento%type;
cd_estab_lote_w			lote_contabil.cd_estabelecimento%type;
cd_empresa_w			ctb_mes_ref.cd_empresa%type;
ie_deb_cred_w			varchar(01);
ie_centro_custo_w		Conta_contabil.ie_centro_custo%type;
ie_debito_credito_w		ctb_grupo_conta.ie_debito_credito%type;
dt_referencia_w			ctb_mes_ref.dt_referencia%type;
dt_atualizacao_w		ctb_saldo_projeto.dt_atualizacao%type;
dt_consistencia_w		lote_contabil.dt_consistencia%type;
dt_abertura_w			ctb_mes_ref.dt_abertura%type;
dt_fechamento_w			ctb_mes_ref.dt_fechamento%type;
ie_encerramento_w		lote_contabil.ie_encerramento%type;
ds_erro_w				varchar(2000);
qt_movto_cc_w			ctb_movto_centro_custo.nr_seq_movimento%type;
vl_enc_debito_w			ctb_saldo_projeto.vl_enc_debito%type;
vl_enc_credito_w		ctb_saldo_projeto.vl_enc_credito%type;
cd_classificacao_w		Conta_contabil.cd_classificacao%type;
cd_classif_sup_w		ctb_saldo_projeto.cd_classif_sup%type;
nr_nivel_conta_w		ctb_saldo_projeto.nr_nivel_conta%type;
qt_conciliacao_w		bigint;
ie_eliminacao_lancto_w  ctb_movimento.ie_eliminacao_lancto%type;
nr_seq_proj_rec_w       ctb_movimento.nr_seq_proj_rec%type;
type t_estab is table of campos index by integer;

estab_w		t_estab;

C01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.vl_movimento,
	a.cd_conta_debito,
	'D',
	b.ie_centro_custo,
	c.ie_debito_credito,
	CASE WHEN ie_encerramento_w='N' THEN 0  ELSE a.vl_movimento END  vl_encerramento,
	b.cd_classificacao,
	coalesce(a.cd_estabelecimento, cd_estab_lote_w) cd_estabelecimento,
	a.ie_eliminacao_lancto,
    a.nr_seq_proj_rec
from	ctb_grupo_conta c,
	Conta_contabil b,
	ctb_movimento a
where	a.nr_lote_contabil	= nr_lote_contabil_p
and	a.cd_conta_debito	= b.cd_conta_contabil
and	b.cd_grupo		= c.cd_grupo
and a.nr_seq_proj_rec = nr_seq_proj_rec_p

union all

select	a.nr_sequencia,
	a.vl_movimento,
	a.cd_conta_credito,
	'C',
	b.ie_centro_custo,
	c.ie_debito_credito,
	CASE WHEN ie_encerramento_w='N' THEN 0  ELSE a.vl_movimento END  vl_encerramento,
	b.cd_classificacao,
	coalesce(a.cd_estabelecimento, cd_estab_lote_w) cd_estabelecimento,
	a.ie_eliminacao_lancto,
    a.nr_seq_proj_rec
from	ctb_grupo_conta c,
	Conta_contabil b,
	ctb_movimento a
where	a.nr_lote_contabil	= nr_lote_contabil_p
and	a.cd_conta_credito	= b.cd_conta_contabil
and	b.cd_grupo		= c.cd_grupo
and a.nr_seq_proj_rec = nr_seq_proj_rec_p;

C02 CURSOR FOR
SELECT	cd_centro_custo,
	vl_movimento * -1,
	CASE WHEN ie_encerramento_w='N' THEN 0  ELSE vl_movimento * -1 END  vl_encerramento
from	ctb_movto_centro_custo
where	nr_seq_movimento	= nr_seq_movimento_w
and	ie_centro_custo_w	in ('S','O')

union all

select	0,
	vl_movimento_w * -1,
	vl_encerramento_w * -1

where	((ie_centro_custo_w	= 'N') or (coalesce(qt_movto_cc_w::text, '') = ''));	

C09 CURSOR FOR
SELECT	nr_sequencia
from	ctb_mes_ref
where	cd_empresa	= cd_empresa_w
and	(dt_abertura IS NOT NULL AND dt_abertura::text <> '')
and	coalesce(dt_fechamento::text, '') = ''
and	1 =2
and	dt_referencia	>= PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_referencia_w,1,0),'month',0);


BEGIN

    begin
        select nr_seq_mes_ref,
            cd_estabelecimento,
            dt_atualizacao_saldo,
            dt_consistencia,
            coalesce(ie_encerramento,'N')
        into STRICT	nr_seq_mes_ref_w,
            cd_estab_lote_w,
            dt_atualizacao_w,
            dt_consistencia_w,
            ie_encerramento_w
        from	lote_contabil
        where	nr_lote_contabil	= nr_lote_contabil_p;
        exception
            when no_data_found then
                nr_seq_mes_ref_w := null;
                cd_estab_lote_w := null;
                dt_atualizacao_w := null;
                dt_consistencia_w := null;
                ie_encerramento_w := null;
            when too_many_rows then
                nr_seq_mes_ref_w := null;
                cd_estab_lote_w := null;
                dt_atualizacao_w := null;
                dt_consistencia_w := null;
                ie_encerramento_w := null;
            when others then
                nr_seq_mes_ref_w := null;
                cd_estab_lote_w := null;
                dt_atualizacao_w := null;
                dt_consistencia_w := null;
                ie_encerramento_w := null;
    end;
select	cd_empresa,
	dt_referencia,
	dt_abertura,
	dt_fechamento
into STRICT	cd_empresa_w,
	dt_referencia_w,
	dt_abertura_w,
	dt_fechamento_w
from	ctb_mes_ref
where	nr_sequencia	= nr_seq_mes_ref_w;

select coalesce(max(nr_sequencia),0)
into STRICT	nr_seq_mes_ant_w
from	ctb_mes_ref
where	cd_empresa		= cd_empresa_w
and	dt_referencia	= PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_referencia_w,-1,0),'month',0);

CALL ctb_gravar_log_lote( nr_lote_contabil_p, 6, null, nm_usuario_p);

OPEN	C01;
LOOP
FETCH	C01 INTO
	nr_seq_movimento_w,
	vl_movimento_w,
	cd_conta_contabil_w,
	ie_deb_cred_w,
	ie_centro_custo_w,
	ie_debito_credito_w,
	vl_encerramento_w,
	cd_classificacao_w,
	cd_estabelecimento_w,
	ie_eliminacao_lancto_w,
    nr_seq_proj_rec_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

    estab_w[cd_estabelecimento_w].cd_estabelecimento_v := cd_estabelecimento_w;
    estab_w[cd_estabelecimento_w].nr_seq_proj_rec_v := nr_seq_proj_rec_w;

	cd_classificacao_w	:= substr(ctb_obter_classif_conta(cd_conta_contabil_w, null, dt_referencia_w),1,40);
	cd_classif_sup_w	:= substr(ctb_obter_classif_conta_sup(cd_classificacao_w, dt_referencia_w, cd_empresa_w),1,40);
	nr_nivel_conta_w	:= ctb_obter_nivel_classif_conta(cd_classificacao_w);

	select	max(nr_seq_movimento)
	into STRICT	qt_movto_cc_w
	from	ctb_movto_centro_custo
	where	nr_seq_movimento	= nr_seq_movimento_w;

	if (ie_encerramento_w = 'N') and (ie_centro_custo_w = 'O') then

		/*Se o centro for Opcional e Nao tiver movimento - operacao normal */

		if (coalesce(qt_movto_cc_w::text, '') = '') then
			ie_centro_custo_w	:= 'N';
		end if;
	end if;

	OPEN	C02;
	LOOP
	FETCH	C02 INTO
		cd_centro_custo_w,
		vl_movimento_w,
		vl_encerramento_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		if (cd_centro_custo_w = 0) then
			cd_centro_custo_w	:= null;
		end if;
		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_sequencia_w
		from	ctb_saldo_projeto
		where	nr_seq_mes_ref	= nr_seq_mes_ref_w
		and	cd_estabelecimento	= cd_estabelecimento_w
		and	cd_conta_contabil	= cd_conta_contabil_w
        and nr_seq_proj_rec = nr_seq_proj_rec_p
		and	coalesce(cd_centro_custo,0)	= coalesce(cd_centro_custo_w,0);

		if (nr_sequencia_w = 0) then
			vl_saldo_w		:= 0;
			select	nextval('ctb_saldo_projeto_seq')
			into STRICT	nr_sequencia_w
			;
			if (nr_seq_mes_ant_w > 0) then
				select coalesce(max(vl_saldo),0)
				into STRICT	vl_saldo_w
				from	ctb_saldo_projeto
				where	nr_seq_mes_ref	= nr_seq_mes_ant_w
				and	cd_estabelecimento	= cd_estabelecimento_w
				and	cd_conta_contabil	= cd_conta_contabil_w
                and nr_seq_proj_rec = nr_seq_proj_rec_p
				and	coalesce(cd_centro_custo,0)	= coalesce(cd_centro_custo_w,0);
			end if;
			insert into ctb_saldo_projeto(
				nr_sequencia,
				nr_seq_mes_ref,
				dt_atualizacao,
				nm_usuario, 
				cd_estabelecimento,
				cd_conta_contabil,
				cd_centro_custo,
				vl_debito,
				vl_encerramento,
				vl_credito,
				vl_movimento,
				vl_saldo,
				vl_enc_debito,
				vl_enc_credito,
				cd_classificacao,
				cd_classif_sup,
				nr_nivel_conta,
                nr_seq_proj_rec)
			values (nr_sequencia_w,
				nr_seq_mes_ref_w, 
				clock_timestamp(),
				nm_usuario_p, 
				cd_estabelecimento_w,
				cd_conta_contabil_w,
				cd_centro_custo_w,
				0, 0, 0, 0,
				vl_saldo_w,
				0,
				0,
				cd_classificacao_w,
				cd_classif_sup_w,
				nr_nivel_conta_w,
                nr_seq_proj_rec_w);
		end if;		
		vl_debito_w		:= 0;
		vl_credito_w		:= 0;
		vl_enc_debito_w		:= 0;
		vl_enc_credito_w	:= 0;

		if (ie_deb_cred_w = 'D') then
			vl_debito_w	:= vl_movimento_w;
			vl_enc_debito_w	:= vl_encerramento_w;
		else
			vl_credito_w	:= vl_movimento_w;
			vl_enc_credito_w	:= vl_encerramento_w;
		end if;
		if (ie_debito_credito_w <> ie_deb_cred_w) then			
			vl_movimento_w	:= vl_movimento_w * -1;
			vl_encerramento_w	:= vl_encerramento_w * -1;
		end if;

		update	ctb_saldo_projeto
		set	dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p,
			vl_debito		= vl_debito + vl_debito_w,
			vl_credito		= vl_credito + vl_credito_w,
			vl_saldo		= vl_saldo + vl_movimento_w,
			vl_movimento	= vl_movimento + vl_movimento_w,
			vl_encerramento	= vl_encerramento + vl_encerramento_w,
			vl_enc_debito	= vl_enc_debito + vl_enc_debito_w,
			vl_enc_credito	= vl_enc_credito + vl_enc_credito_w,
			vl_eliminacao	= coalesce(vl_eliminacao,0) + CASE WHEN ie_eliminacao_lancto_w='S' THEN  vl_movimento_w  ELSE 0 END ,
			cd_classificacao = cd_classificacao_w,
			cd_classif_sup	= cd_classif_sup_w,
			nr_nivel_conta	= nr_nivel_conta_w
		where	nr_sequencia = nr_sequencia_w  and nr_seq_proj_rec = nr_seq_proj_rec_p;

		OPEN	C09;
		LOOP
		FETCH	C09 INTO
			nr_seq_ref_w;
		EXIT WHEN NOT FOUND; /* apply on C09 */
			update	ctb_saldo_projeto
			set	dt_atualizacao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p,
				vl_saldo		= vl_saldo + vl_movimento_w
			where	nr_seq_mes_ref	= nr_seq_ref_w
			and	cd_estabelecimento	= cd_estabelecimento_w
			and	cd_conta_contabil	= cd_conta_contabil_w
			and	coalesce(cd_centro_custo,0)	= coalesce(cd_centro_custo_w,0)
            and nr_seq_proj_rec = nr_seq_proj_rec_p;
		END LOOP;
		CLOSE C09;
	END LOOP;
	CLOSE C02;
END LOOP;
CLOSE C01;

update  ctb_movimento
set     dt_atualizacao_saldo  = NULL
where   nr_lote_contabil     = nr_lote_contabil_p;

update	lote_contabil
set	dt_atualizacao_saldo	 = NULL,
	dt_consistencia	 = NULL
where	nr_lote_contabil	= nr_lote_contabil_p;

commit;

cd_estabelecimento_w := estab_w.first;

while (cd_estabelecimento_w IS NOT NULL AND cd_estabelecimento_w::text <> '') loop
	ds_erro_w := CTB_Acumular_Saldo_projeto(nr_seq_mes_ref_w, estab_w[cd_estabelecimento_w].cd_estabelecimento_v, nm_usuario_p, ds_erro_w, estab_w[cd_estabelecimento_w].nr_seq_proj_rec_v);
	cd_estabelecimento_w := estab_w.next(cd_estabelecimento_w);
end loop;

ds_erro_p	:= ds_erro_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_desatualizar_lote_projeto ( nr_lote_contabil_p ctb_movimento.nr_lote_contabil%type, nm_usuario_p text, nr_seq_proj_rec_p ctb_movimento.nr_seq_proj_rec%type, ds_erro_p INOUT text) FROM PUBLIC;

