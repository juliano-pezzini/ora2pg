-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_consiste_autor_proc ( nr_atendimento_p bigint, cd_convenio_p bigint, dt_procedimento_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_procedimento_p bigint, cd_autorizacao_p text, ds_erro_p INOUT text, nr_seq_agenda_p bigint) AS $body$
DECLARE


/*

ATENÇÃO !!! NÃO COLOCAR APPLICATION_ERROR ou wheb_mensagem_pck NESTA PROCEDURE
EDGAR 06/12/2006

*/
/* O campo cd_autorização não será utilizado por enquanto Marcus 28/10/2000 */

qt_autorizada_w          	double precision	:= 0;
qt_utilizada_w          	double precision	:= 0;
qt_principal_w          	double precision	:= 0;
qt_glosado_w			double precision	:= 0;
ds_erro_w			varchar(255)	:= '';

ie_tipo_atendimento_w		integer;
cd_categoria_w			varchar(10);
dt_procedimento_w		timestamp;
vl_retorno_w			double precision;
vl_retorno_ww			varchar(1);
cd_convenio_glosa_w		integer;
cd_categoria_glosa_w		varchar(10);
nr_seq_ajuste_proc_w		bigint;
ie_glosa_w			varchar(01);
ie_autor_particular_w		varchar(1);
ie_resp_autor_w			varchar(2);
cd_estabelecimento_w		bigint;



BEGIN

/* Obter Autorização */

/* substituido por marcus em 5/1/2006
begin
select	sum(nvl(a.qt_autorizada,0)),
	decode(nvl(b.cd_procedimento_principal,0), cd_procedimento_p,1,0)
into	qt_autorizada_w,
	qt_principal_w
from	procedimento_autorizado a,
	autorizacao_convenio b
where	b.nr_atendimento	= nr_atendimento_p
and	b.cd_convenio		= cd_convenio_p
and	dt_procedimento_p between b.dt_inicio_vigencia and nvl(b.dt_fim_vigencia,sysdate)
and	a.nr_atendimento 	= b.nr_atendimento
and	a.nr_seq_autorizacao 	= b.nr_seq_autorizacao
and	a.cd_procedimento	= cd_procedimento_p
and	a.ie_origem_proced	= ie_origem_proced_p
group by
	decode(nvl(b.cd_procedimento_principal,0), cd_procedimento_p,1,0);
exception
	when others then
		begin
		qt_autorizada_w := 0;
		qt_principal_w	:= 0;
		end;
end;
*/
qt_autorizada_w 	:= 0;
qt_principal_w		:= 0;

begin
select	cd_estabelecimento,
	ie_tipo_atendimento,
	obter_categoria_atendimento(nr_atendimento)
into STRICT	cd_estabelecimento_w,
	ie_tipo_atendimento_w,
	cd_categoria_w
from	atendimento_paciente
where	nr_atendimento			= nr_atendimento_p;
exception
when others then
	cd_estabelecimento_w	:= 0;
end;

select	coalesce(sum(coalesce(qt_autor,0)),0)
into STRICT	qt_autorizada_w
from (
	SELECT 	coalesce(sum(coalesce(a.qt_autorizada,0)),0) qt_autor
	FROM procedimento_autorizado a, autorizacao_convenio b
LEFT OUTER JOIN estagio_autorizacao c ON (b.nr_seq_estagio = c.nr_sequencia)
WHERE b.nr_atendimento 		= nr_atendimento_p and b.cd_convenio			= cd_convenio_p and dt_procedimento_p between coalesce(b.dt_inicio_vigencia, dt_procedimento_p) and coalesce(b.dt_fim_vigencia,clock_timestamp()) and a.nr_sequencia_autor		= b.nr_sequencia  and a.cd_procedimento	 	= cd_procedimento_p and a.ie_origem_proced		= ie_origem_proced_p and coalesce(c.ie_interno,'10')		= '10'  --Francisco 09/10/2006 - Tratar se foi autorizado
union all

	SELECT 	coalesce(sum(coalesce(a.qt_autorizada,0)),0)
	FROM procedimento_autorizado a, autorizacao_convenio b
LEFT OUTER JOIN estagio_autorizacao c ON (b.nr_seq_estagio = c.nr_sequencia)
WHERE b.nr_seq_agenda = nr_seq_agenda_p and b.cd_convenio			= cd_convenio_p and dt_procedimento_p between coalesce(b.dt_inicio_vigencia, dt_procedimento_p) and coalesce(b.dt_fim_vigencia,clock_timestamp()) and a.nr_sequencia_autor		= b.nr_sequencia  and a.cd_procedimento	 	= cd_procedimento_p and a.ie_origem_proced		= ie_origem_proced_p and coalesce(c.ie_interno,'10')		= '10' ) alias17; --Francisco 09/10/2006 - Tratar se foi autorizado
select	coalesce(sum(coalesce(qt_princ,0)),0)
into STRICT	qt_principal_w
from (
	SELECT 	coalesce(sum(1),0) qt_princ
	FROM autorizacao_convenio a
LEFT OUTER JOIN estagio_autorizacao b ON (a.nr_seq_estagio = b.nr_sequencia)
WHERE a.nr_atendimento 		= nr_atendimento_p and a.cd_convenio			= cd_convenio_p and dt_procedimento_p between 	coalesce(dt_inicio_vigencia,dt_procedimento_p) and coalesce(dt_fim_vigencia,clock_timestamp()) and a.cd_procedimento_principal 	= cd_procedimento_p and a.ie_origem_proced		= ie_origem_proced_p  and coalesce(b.ie_interno,'10')		= '10'  --Francisco 09/10/2006 - Tratar se foi autorizado
union all

	SELECT 	coalesce(sum(1),0)
	FROM autorizacao_convenio a
LEFT OUTER JOIN estagio_autorizacao b ON (a.nr_seq_estagio = b.nr_sequencia)
WHERE a.nr_seq_agenda 		= nr_seq_agenda_p and a.cd_convenio			= cd_convenio_p and dt_procedimento_p between 	coalesce(dt_inicio_vigencia,dt_procedimento_p) and coalesce(dt_fim_vigencia,clock_timestamp()) and a.cd_procedimento_principal 	= cd_procedimento_p and a.ie_origem_proced		= ie_origem_proced_p  and coalesce(b.ie_interno,'10')		= '10' ) alias15; --Francisco 09/10/2006 - Tratar se foi autorizado
/* Fim alteração marcus */

/* Obter Procedimentos Executados */

begin
select 	/*+index(PROPACI_I7) */	coalesce(sum(qt_procedimento),0)
into STRICT	qt_utilizada_w
from	procedimento_paciente
where	nr_atendimento 		= nr_atendimento_p
and	cd_convenio		= cd_convenio_p
and	cd_procedimento 	= cd_procedimento_p
and	ie_origem_proced	= ie_origem_proced_p
and	coalesce(cd_motivo_exc_conta::text, '') = '';
/*and	nr_interno_conta is not null;  lhalves OS251935 em 23/09/2010 */

exception
	when others then
		qt_utilizada_w := 0;
end;

/* Ricardo 26/03/2008 - Verificar quantos foram glosados. Caso todos tenham sido glosados, não mostra nenhuma consistência */

if (cd_estabelecimento_w > 0) then

	select	max(dt_procedimento)
	into STRICT	dt_procedimento_w
	from	procedimento_paciente
	where	nr_atendimento 		= nr_atendimento_p
	and	cd_convenio		= cd_convenio_p
	and	cd_procedimento 	= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p
	and	coalesce(cd_motivo_exc_conta::text, '') = '';

end if;

if	((qt_autorizada_w + qt_principal_w) = 0) then
	ds_erro_w	:= ds_erro_w ||'406'||'('||to_char(cd_procedimento_p)||') ';
elsif	((qt_autorizada_w + qt_principal_w) <
	 (qt_utilizada_w + coalesce(qt_procedimento_p,1))) then
	ds_erro_w	:= ds_erro_w ||'407'||'('||to_char(cd_procedimento_p)||') ';
end if;

ds_erro_p	:= ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_consiste_autor_proc ( nr_atendimento_p bigint, cd_convenio_p bigint, dt_procedimento_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_procedimento_p bigint, cd_autorizacao_p text, ds_erro_p INOUT text, nr_seq_agenda_p bigint) FROM PUBLIC;

