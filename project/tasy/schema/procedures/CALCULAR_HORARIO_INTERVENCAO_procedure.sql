-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_horario_intervencao ( cd_intervalo_p text, dt_Hora_Inicio_p timestamp, nr_hora_validade_p bigint, nr_intervalo_p INOUT bigint, ds_horarios_p INOUT text, ds_prim_horario_p INOUT text, ie_se_necessario_p INOUT text, nr_sequencia_p bigint default null) AS $body$
DECLARE

			
ds_horario_w			varchar(05);
ds_horarios_w			varchar(4000);
ds_horarios_original			varchar(4000);
ds_horario_mat_w		varchar(255);
ds_prescricao_w			varchar(30);
qt_operacao_w			intervalo_prescricao.qt_operacao%type;
ie_operacao_w			varchar(1);
nr_Horas_intervalo_w		real;
hr_prescricao_w			timestamp;
mascara_data_w			varchar(10);
ds_prim_horario_w		varchar(255);

dt_validade_w			timestamp;
dt_ultima_hora_w		timestamp;
k				integer;
ds_ultima_hora_w		varchar(10);
dt_inicio_prescr_w		timestamp;
dt_validade_prescr_w		timestamp;
dt_prim_horario_w		timestamp;
qt_min_intervalo_w	bigint;
dt_Hora_Inicio_w		timestamp;
BEGIN

dt_Hora_Inicio_w  := coalesce(dt_Hora_Inicio_p, to_date('30/12/1899','dd/mm/yyyy'));


nr_intervalo_p	:= 0;


select coalesce(max(ds_horarios),''),
	coalesce(max(ie_operacao),''),
	coalesce(max(qt_operacao),1),
	coalesce(max(ds_prescricao),''),
	coalesce(MAX(DS_PRIM_HORARIO),''),
	coalesce(MAX(IE_SE_NECESSARIO),'N'),
	coalesce(max(qt_min_intervalo),0)
into STRICT	ds_horarios_w,
	ie_operacao_w,
	qt_operacao_w,
	ds_prescricao_w,
	ds_prim_horario_w,
	ie_se_necessario_p,
	qt_min_intervalo_w
from intervalo_prescricao
where cd_intervalo = cd_intervalo_p;

dt_Hora_Inicio_w := to_date(to_char(dt_Hora_Inicio_p, 'DD/MON/YYYY HH24:MI'), 'DD/MON/YYYY HH24:MI');

if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') then
	select	max(dt_inicio_prescr),
		max(dt_validade_prescr)
	into STRICT	dt_inicio_prescr_w,
		dt_validade_prescr_w
	from	pe_prescricao
	where	nr_sequencia	= nr_sequencia_p;
	
end if;

dt_validade_w		:= coalesce(dt_validade_prescr_w,(dt_Hora_Inicio_w + (nr_hora_validade_p/24)));
dt_ultima_hora_w	:= dt_Hora_Inicio_w;

if (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
	nr_Intervalo_p		   	:= qt_operacao_w;
else
    	begin
    	if (nr_intervalo_p > 0) then
        	nr_Horas_intervalo_w 	:= Trunc(nr_Hora_validade_p / nr_intervalo_p);
    	elsif (ie_operacao_w = 'H') then
        	begin
        	nr_Horas_intervalo_w    := qt_operacao_w;
        	nr_Intervalo_p          := Ceil(nr_Hora_validade_p / nr_Horas_intervalo_w);
        	end;
    	elsif (ie_operacao_w = 'X') then
        	begin
			nr_Intervalo_p         	:= Ceil(nr_Hora_validade_p / (24 / qt_operacao_w));
			nr_Horas_intervalo_w   	:= floor(24/qt_operacao_w);
			
			if (coalesce(qt_min_intervalo_w,0) > 0) and (nr_Horas_intervalo_w >= floor(dividir(qt_min_intervalo_w,60))) then
				nr_Horas_intervalo_w	:= qt_min_intervalo_w / 60;
				
			end if;			
        	end;
    	else
        	begin
        	nr_Intervalo_p         	:= 1;
        	nr_Horas_intervalo_w   	:= 0;
        	end;
	end if;
	
	ds_horarios_w			:= '';
	hr_prescricao_w            	:= dt_Hora_Inicio_w;
	if (ds_prim_horario_p IS NOT NULL AND ds_prim_horario_p::text <> '') then
		if (dt_Hora_Inicio_w > to_date(to_char(dt_Hora_Inicio_w,'dd/mm/yyyy') || ' ' || ds_prim_horario_p, 'dd/mm/yyyy hh24:mi')) then
			hr_prescricao_w	:= hr_prescricao_w + 1;
		end if;
		hr_prescricao_w	:= trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(hr_prescricao_w, ds_prim_horario_p), 'mi');
	end if;
		
	for i in 1.. nr_intervalo_p LOOP
	    	begin
		if ((to_char(hr_prescricao_w, 'mi')) > 0) then
			Mascara_data_w := 'hh24:mi';
		else
			Mascara_data_w := 'hh24';
		end if;

	    	ds_horario_w		:= to_char(hr_prescricao_w, Mascara_data_w);
		if (substr(ds_horario_w,1,2) = '24') then
			select replace(ds_horario_w, '24','00')
			into STRICT ds_horario_w 
			;
		end if;
		
		if (to_date(to_char(dt_ultima_hora_w,'dd/mm/yyyy') || ' ' || ds_horario_w,'dd/mm/yyyy ' || Mascara_data_w) < dt_ultima_hora_w) then
			dt_ultima_hora_w	:= dt_ultima_hora_w + 1;
		end if;
		
		dt_ultima_hora_w	:= to_date(to_char(dt_ultima_hora_w,'dd/mm/yyyy') || ' ' || ds_horario_w,'dd/mm/yyyy ' || Mascara_data_w);
		if (dt_ultima_hora_w <= dt_validade_w) then
			ds_horarios_w		:= ds_horarios_w || ds_horario_w || ' ';
		
		end if;
		hr_prescricao_w      	:= hr_prescricao_w + (nr_horas_intervalo_w / 24);
		end;
	end loop;
	end;
end if;

if (nr_Intervalo_p = 0)  then
    	nr_Intervalo_p			:= 1;
end if;

if (nr_intervalo_p = 1) and (ds_prescricao_w in ('ACM', 'SN')) then
     	ds_horarios_p 			:= ds_prescricao_w;
else
	ds_horarios_p			:= substr(ds_horarios_w,1,255);
end if;

if (ie_operacao_w = 'V') then
	ds_horarios_p := Reordenar_Horarios_Prescr(dt_Hora_Inicio_w, ds_horarios_p);
end if;

ds_horarios_w		:= trim(both ds_horarios_p || ' ');
dt_validade_w		:= coalesce(dt_validade_prescr_w,(dt_Hora_Inicio_w + (nr_hora_validade_p/24)));
dt_ultima_hora_w	:= dt_Hora_Inicio_w;
ds_horarios_p		:= '';

if ((to_char(dt_Hora_Inicio_w, 'mi')) > 0) then
  Mascara_data_w := 'hh24:mi';
else
  Mascara_data_w := 'hh24';
end if;

RAISE NOTICE '1) ds_horarios_w = %', ds_horarios_w;
RAISE NOTICE '2) dt_validade_w = %', PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_validade_w, '', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone);
RAISE NOTICE '3) dt_ultima_hora_w = %', PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_ultima_hora_w, '', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone);

if	((ds_prescricao_w not in ('ACM', 'SN')) or (coalesce(ds_prescricao_w::text, '') = '')) and (ie_operacao_w	in ('V')) then
	
	
	if (nr_hora_validade_p	> 24) then
	  ds_horarios_original := ds_horarios_w;
		for i in 1..trunc(nr_hora_validade_p/24) loop
			begin

			ds_horarios_w	:= ds_horarios_w||' '||ds_horarios_original;
			end;
		end loop;
	
	end if;
	
	if (ds_prim_horario_p IS NOT NULL AND ds_prim_horario_p::text <> '') then
		dt_prim_horario_w	:= trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_Hora_Inicio_w, ds_prim_horario_p),'mi');
		if (substr(ds_prim_horario_p,4,2)	<> '00') then
			dt_prim_horario_w	:= dt_prim_horario_w	+ 1/24;
		end if;
		
		ds_horarios_w	:= reordenar_horarios(dt_prim_horario_w,ds_horarios_w);
	end if;
	RAISE NOTICE '4) ds_horarios_w = %', ds_horarios_w;
	
	while(ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') and (dt_ultima_hora_w <= dt_validade_w) loop
		k	:= position(' ' in ds_horarios_w);
		RAISE NOTICE 'Inicio While';
		if (k = 0) and (length(ds_horarios_w) > 0) then		
			ds_ultima_hora_w	:= trim(both ds_horarios_w);
		else
			ds_ultima_hora_w	:= substr(ds_horarios_w, 1, k -1);
		end if;
		
		if (ds_ultima_hora_w	= '24') then
			ds_ultima_hora_w	:= '00';
		end if;
		
		if (position(':' in ds_ultima_hora_w) > 0) then
			Mascara_data_w 			:= 'hh24:mi';
		else
			Mascara_data_w 			:= 'hh24';
		end if;
		if (to_date(to_char(dt_ultima_hora_w,'dd/mm/yyyy') || ' ' || ds_ultima_hora_w,'dd/mm/yyyy ' || Mascara_data_w) <= dt_ultima_hora_w) then
			dt_ultima_hora_w	:= dt_ultima_hora_w + 1;
		end if;

			
		dt_ultima_hora_w	:= to_date(to_char(dt_ultima_hora_w,'dd/mm/yyyy') || ' ' || ds_ultima_hora_w,'dd/mm/yyyy ' || Mascara_data_w);
		
		RAISE NOTICE '5) dt_ultima_hora_w = %', PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_ultima_hora_w, '', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone);
		RAISE NOTICE '6) ds_ultima_hora_w = %', ds_ultima_hora_w;
		if (dt_ultima_hora_w <= dt_validade_w) then
			ds_horarios_p	:= ds_horarios_p || ' ' || ds_ultima_hora_w;
		end if;
		ds_horarios_w	:= substr(ds_horarios_w,length(ds_ultima_hora_w)+2,length(ds_horarios_w)-length(ds_ultima_hora_w)-1);
	end loop;
elsif (nr_intervalo_p = 1) and (ds_prescricao_w in ('ACM', 'SN')) then
     	ds_horarios_p 			:= ds_prescricao_w;
else
	ds_horarios_p		:= substr(ds_horarios_w,1,255);
end if;

ds_horarios_p	:= substr(trim(both ds_horarios_p) || ' ',1,255);

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_horario_intervencao ( cd_intervalo_p text, dt_Hora_Inicio_p timestamp, nr_hora_validade_p bigint, nr_intervalo_p INOUT bigint, ds_horarios_p INOUT text, ds_prim_horario_p INOUT text, ie_se_necessario_p INOUT text, nr_sequencia_p bigint default null) FROM PUBLIC;

