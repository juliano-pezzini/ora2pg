-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE same_emp_pront_solic_js ( nr_sequencia_p bigint, nr_prontuario_p bigint, cd_setor_atendimento_p bigint, cd_agenda_p bigint, dt_emprestimo_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, nm_usuario_solic_p INOUT text) AS $body$
DECLARE



qt_pront_solic_w		smallint;
qt_emprestimo_w		smallint;
nr_sequencia_w		bigint;
nr_seq_w			bigint;
cd_estabelecimento_w	smallint;
cd_setor_atendimento_w	integer;
cd_agenda_w		bigint;
ie_retroativo_w		varchar(1);
nr_sequencia_retro_w	bigint;
cd_setor_atendimento_retro_w integer;
dt_emprestimo_w		timestamp;


BEGIN

select	obter_usuario_solic_pront(nr_prontuario_p)
into STRICT	nm_usuario_solic_p
;

ie_retroativo_w := Obter_Param_Usuario(1007, 25, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_retroativo_w);

if (dt_emprestimo_p < clock_timestamp()) or (coalesce(dt_emprestimo_p::text, '') = '') then
	dt_emprestimo_w := clock_timestamp();
else
	dt_emprestimo_w := dt_emprestimo_p;
end if;

if (nr_sequencia_p <> 0) then
	nr_sequencia_w		:= nr_sequencia_p;
	cd_setor_atendimento_w	:= cd_setor_atendimento_p;
elsif (cd_setor_atendimento_p <> 0) then
	begin
	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_sequencia_w
	from	same_cpi_solic
	where	nr_prontuario		= nr_prontuario_p
	and	cd_setor_atendimento	= cd_setor_atendimento_p
	and	((cd_agenda = cd_agenda_p)
	or (cd_agenda_p = 0))
	and	trunc(dt_desejada,'dd') = trunc(dt_emprestimo_w,'dd')
	and	ie_status_solic		= 'A';
	cd_setor_atendimento_w := cd_setor_atendimento_p;
	end;
else
	select	coalesce(MAX(nr_sequencia),0),
		coalesce(MAX(cd_setor_atendimento),0)
	into STRICT	nr_sequencia_w,
		cd_setor_atendimento_w
	from	same_cpi_solic
	where	nr_prontuario		= nr_prontuario_p
	and	ie_status_solic		= 'A'
	and	dt_desejada		= (	SELECT	MIN(dt_desejada)
						from	same_cpi_solic
						where	nr_prontuario	= nr_prontuario_p
						and	ie_status_solic 	= 'A'
						and	trunc(dt_desejada) >= trunc(dt_emprestimo_w));
end if;

select	coalesce(MAX(nr_sequencia),0),
	coalesce(MAX(cd_setor_atendimento),0)
	into STRICT	nr_sequencia_retro_w,
		cd_setor_atendimento_retro_w
	from	same_cpi_solic
	where	nr_prontuario		= nr_prontuario_p
	and	ie_status_solic		= 'A'
	and	dt_desejada		= (	SELECT	MIN(dt_desejada)
						from	same_cpi_solic
						where	nr_prontuario	= nr_prontuario_p
						and	ie_status_solic 	= 'A'
						and	trunc(dt_desejada) < trunc(dt_emprestimo_w));


if (nr_sequencia_w = 0) and (ie_retroativo_w = 'N') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(264160);
elsif (nr_sequencia_retro_w = 0) and (ie_retroativo_w = 'S') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(264160);
end if;

if (nr_sequencia_w	> 0) then
	select	cd_estabelecimento,
		cd_agenda
	into STRICT	cd_estabelecimento_w,
		cd_agenda_w
	from	same_cpi_solic
	where	nr_sequencia		= nr_sequencia_w;
elsif (nr_sequencia_retro_w	> 0) then
	select	cd_estabelecimento,
		cd_agenda
	into STRICT	cd_estabelecimento_w,
		cd_agenda_w
	from	same_cpi_solic
	where	nr_sequencia		= nr_sequencia_retro_w;
end if;

select	count(*)
into STRICT	qt_emprestimo_w
from	same_cpi_emp
where	nr_prontuario		= nr_prontuario_p
and	coalesce(dt_devolucao::text, '') = '';

if (qt_emprestimo_w <> 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(264166);
end if;

select	nextval('same_cpi_emp_seq')
into STRICT	nr_seq_w
;

if (nr_sequencia_w > 0) then
	insert into same_cpi_emp(
		nr_sequencia,
		cd_estabelecimento,
		nr_prontuario,
		dt_atualizacao,
		nm_usuario,
		cd_setor_atendimento,
		dt_emprestimo,
		nm_usuario_empr,
		ie_operacao,
		cd_agenda,
		nr_seq_solic)
	Values (
		nr_seq_w,
		cd_estabelecimento_w,
		nr_prontuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_setor_atendimento_w,
		clock_timestamp(),
		nm_usuario_p,
		'E',
		cd_agenda_w,
		nr_sequencia_w);

	update	same_cpi_solic
	set	ie_status_solic = 	'T',
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where	nr_sequencia	= nr_sequencia_w;
elsif (nr_sequencia_retro_w > 0) then
	insert into same_cpi_emp(
		nr_sequencia,
		cd_estabelecimento,
		nr_prontuario,
		dt_atualizacao,
		nm_usuario,
		cd_setor_atendimento,
		dt_emprestimo,
		nm_usuario_empr,
		ie_operacao,
		cd_agenda,
		nr_seq_solic)
	Values (
		nr_seq_w,
		cd_estabelecimento_w,
		nr_prontuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_setor_atendimento_retro_w,
		clock_timestamp(),
		nm_usuario_p,
		'E',
		cd_agenda_w,
		nr_sequencia_retro_w);

	update	same_cpi_solic
	set	ie_status_solic = 	'T',
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where	nr_sequencia	= nr_sequencia_retro_w;
end if;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE same_emp_pront_solic_js ( nr_sequencia_p bigint, nr_prontuario_p bigint, cd_setor_atendimento_p bigint, cd_agenda_p bigint, dt_emprestimo_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, nm_usuario_solic_p INOUT text) FROM PUBLIC;

