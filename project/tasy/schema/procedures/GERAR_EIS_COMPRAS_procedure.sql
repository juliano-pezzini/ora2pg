-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_compras ( dt_parametro_p timestamp, nm_usuario_p text) AS $body$
DECLARE

 
dt_atualizacao_w		timestamp	:= clock_timestamp();
dt_parametro_fim_w		timestamp;
dt_parametro_w		timestamp;
dt_entrega_ordem_w	timestamp;
dt_entrada_saida_w	timestamp;
dt_ordem_w		timestamp;
cd_material_estoque_w	integer;
cd_material_w		integer := 0;
cd_comprador_w		varchar(10) := '0';
vl_compra_w		double precision := 0;
vl_presente_w		double precision := 0;
vl_compra_avista_w	double precision := 0;
vl_custo_padrao_w		double precision := 0;
qt_dias_prazo_entrega_w	bigint := 0;
qt_dias_prazo_pagto_w	double precision := 0;
qt_dias_atraso_w		bigint := 0;
qt_compra_w		double precision := 0;
qt_compra_urgente_w	double precision := 0;
qt_compra_informal_w	double precision := 0;
qt_consumo_w		double precision := 0;
qt_conv_est_consumo_w	double precision := 0;
ie_prod_fabric_w		varchar(3)  := 0;
pr_taxa_financ_w		double precision := 0;
cd_estabelecimento_w	smallint;
cd_estab_ant_w		smallint;
cd_cgc_w		varchar(14);
cd_cgc_ww		varchar(14);
nr_sequencia_w		bigint;
nr_ordem_compra_w	bigint;
cd_grupo_material_w 	integer;
ie_tipo_material_w		varchar(3);
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
dt_vigencia_w		timestamp;
vl_medio_fatur_w		double precision;
vl_liq_moeda_ref_w		double precision;
ie_urgente_w		varchar(01);
ie_tipo_operacao_w	smallint;
ie_entrada_saida_w		varchar(01);
vl_compra_prazo_medio_w	double precision;
ie_prazo_medio_eis_w	varchar(01);
cd_tiss_w			varchar(40);
dt_referencia_w		timestamp;
dt_referencia_ww		timestamp;
ie_consignado_w		varchar(1);
ie_classificacao_w		varchar(2);
ie_local_direto_w		varchar(1);
ie_regra_custo_mat_w	smallint;
vl_regra_custo_mat_w	double precision;
ie_curva_abc_w		varchar(1);
cd_operacao_nf_w		smallint;
ie_forma_prazo_eis_compra_w	varchar(1);
ie_vinc_contrato_w		varchar(1);
ie_vinc_ordem_w			varchar(1);
ie_ordem_contrato_w		varchar(30);
nr_seq_proj_rec_w		bigint;
cd_conta_contabil_w		varchar(20);
cd_local_estoque_w		integer;
vl_bruto_compra_w		double precision;
cd_centro_custo_w		integer;
cd_pessoa_fisica_w		varchar(10);
nr_seq_tipo_compra_w		bigint;
nr_seq_log_w			bigint;
qt_count_itens_w		bigint;
pr_desconto_w			double precision;
ie_contrato_mercado_w		varchar(1);
ie_tipo_fornecedor_w		varchar(10);
nr_seq_nota_fiscal_w		nota_fiscal.nr_sequencia%type;

 
c01 CURSOR FOR 
SELECT	a.cd_estabelecimento, 
	CASE WHEN p.ie_tipo_requisicao=0 THEN  coalesce(a.cd_cgc, a.cd_cgc_emitente)  ELSE a.cd_cgc_emitente END  cd_cgc, 
	a.cd_pessoa_fisica, 
	a.nr_sequencia, 
	CASE WHEN obter_dados_parametro_compras(a.cd_estabelecimento,27)='E' THEN a.dt_entrada_saida WHEN obter_dados_parametro_compras(a.cd_estabelecimento,27)='M' THEN a.dt_emissao END  dt_referencia, 
	a.cd_operacao_nf, 
	o.ie_tipo_operacao, 
	p.ie_entrada_saida, 
	coalesce(c.ie_prazo_medio_eis,'S'), 
	coalesce(p.ie_consignado, 0), 
	CASE WHEN obter_se_nf_ordem_ou_contrato(a.nr_sequencia)='C' THEN 'S'  ELSE 'N' END  ie_vinc_contrato, 
	CASE WHEN obter_se_nf_ordem_ou_contrato(a.nr_sequencia)='O' THEN 'S'  ELSE 'N' END  ie_vinc_ordem, 
	coalesce(obter_se_nf_ordem_ou_contrato(a.nr_sequencia),'N') ie_ordem_contrato, 
	'PJ' ie_tipo_fornecedor 
FROM operacao_estoque p, operacao_nota o, nota_fiscal a
LEFT OUTER JOIN condicao_pagamento c ON (a.cd_condicao_pagamento = c.cd_condicao_pagamento)
WHERE (((obter_dados_parametro_compras(a.cd_estabelecimento,27) = 'E') and (a.dt_entrada_saida between dt_parametro_w and dt_parametro_fim_w)) or 
	 ((obter_dados_parametro_compras(a.cd_estabelecimento,27) = 'M') and (a.dt_emissao between dt_parametro_w and dt_parametro_fim_w))) and a.cd_operacao_nf = o.cd_operacao_nf /*and	p.ie_tipo_requisicao = 6 comentado por maicon - alterado porque este indicador deve considerar tbm notas de saida para a analise*/
  and p.ie_tipo_requisicao in (6,0) and ((coalesce(p.ie_consignado::text, '') = '') or (p.ie_consignado in (0,1,2,3))) and (a.dt_atualizacao_estoque IS NOT NULL AND a.dt_atualizacao_estoque::text <> '') and coalesce(a.cd_pessoa_fisica::text, '') = '' and o.cd_operacao_estoque	= p.cd_operacao_estoque  and a.ie_situacao	= '1' and o.ie_tipo_operacao = '1' /*Coloquei essa opção para considerar somente as operação da nota que são de compras , ou seja, que o campo (É uma compra) esteja marcado*/
  and (coalesce(a.cd_cgc, a.cd_cgc_emitente) IS NOT NULL AND (coalesce(a.cd_cgc, a.cd_cgc_emitente))::text <> '') and coalesce(nr_interno_conta::text, '') = '' and coalesce(nr_seq_protocolo::text, '') = '' and not ((a.ie_tipo_nota = 'EF') and (coalesce(a.cd_cgc::text, '') = '') and (coalesce(a.cd_cgc_emitente::text, '') = '')) 
 
union all
 
SELECT	a.cd_estabelecimento, 
	CASE WHEN p.ie_tipo_requisicao=0 THEN  coalesce(a.cd_cgc, a.cd_cgc_emitente)  ELSE a.cd_cgc_emitente END  cd_cgc, 
	a.cd_pessoa_fisica, 
	a.nr_sequencia, 
	CASE WHEN obter_dados_parametro_compras(a.cd_estabelecimento,27)='E' THEN a.dt_entrada_saida WHEN obter_dados_parametro_compras(a.cd_estabelecimento,27)='M' THEN a.dt_emissao END  dt_referencia, 
	a.cd_operacao_nf, 
	o.ie_tipo_operacao, 
	p.ie_entrada_saida, 
	coalesce(c.ie_prazo_medio_eis,'S'), 
	coalesce(p.ie_consignado, 0), 
	CASE WHEN obter_se_nf_ordem_ou_contrato(a.nr_sequencia)='C' THEN 'S'  ELSE 'N' END  ie_vinc_contrato, 
	CASE WHEN obter_se_nf_ordem_ou_contrato(a.nr_sequencia)='O' THEN 'S'  ELSE 'N' END  ie_vinc_ordem, 
	coalesce(obter_se_nf_ordem_ou_contrato(a.nr_sequencia),'N') ie_ordem_contrato, 
	'PF' ie_tipo_fornecedor 
FROM operacao_estoque p, operacao_nota o, nota_fiscal a
LEFT OUTER JOIN condicao_pagamento c ON (a.cd_condicao_pagamento = c.cd_condicao_pagamento)
WHERE (((obter_dados_parametro_compras(a.cd_estabelecimento,27) = 'E') and (a.dt_entrada_saida between dt_parametro_w and dt_parametro_fim_w)) or 
	 ((obter_dados_parametro_compras(a.cd_estabelecimento,27) = 'M') and (a.dt_emissao between dt_parametro_w and dt_parametro_fim_w))) and a.cd_operacao_nf = o.cd_operacao_nf /*and	p.ie_tipo_requisicao = 6 comentado por maicon - alterado porque este indicador deve considerar tbm notas de saida para a analise*/
  and p.ie_tipo_requisicao in (6,0) and ((coalesce(p.ie_consignado::text, '') = '') or (p.ie_consignado in (0,1,2,3))) and (a.dt_atualizacao_estoque IS NOT NULL AND a.dt_atualizacao_estoque::text <> '') and o.cd_operacao_estoque	= p.cd_operacao_estoque  and a.ie_situacao	= '1' and o.ie_tipo_operacao = '1' /*Coloquei essa opção para considerar somente as operação da nota que são de compras , ou seja, que o campo (É uma compra) esteja marcado*/
  and coalesce(nr_interno_conta::text, '') = '' and coalesce(nr_seq_protocolo::text, '') = '' and (a.ie_tipo_nota = 'EF' AND a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '') order by cd_cgc;

c02 CURSOR FOR 
SELECT	a.cd_material, 
	a.nr_ordem_compra, 
	dt_entrega_ordem, 
	a.vl_liquido, 
	a.vl_total_item_nf, 
	a.vl_liq_moeda_ref, 
	coalesce(a.qt_item_estoque,0), 
	substr(obter_se_local_direto(a.cd_local_estoque),1,1), 
	a.nr_seq_proj_rec, 
	a.cd_conta_contabil, 
	a.cd_local_estoque, 
	a.cd_centro_custo, 
	obter_dados_ordem_compra(a.nr_ordem_compra,'TC'), 
	1 qt_count_itens, 
	coalesce(a.pr_desconto,0), 
	obter_compra_contrato_mercado(nr_sequencia, nr_item_nf) ie_contrato_mercado 
from	material m, 
	nota_fiscal_item a 
where	a.nr_sequencia = nr_seq_nota_fiscal_w 
and	a.cd_material = m.cd_material 
and	coalesce(vl_liquido,0) <> 0 
and	ie_entrada_saida_w = 'E' 

union all
 
SELECT	a.cd_material, 
	a.nr_ordem_compra, 
	dt_entrega_ordem, 
	(a.vl_liquido * -1), 
	(a.vl_total_item_nf * -1), 
	(a.vl_liq_moeda_ref * -1), 
	(coalesce(a.qt_item_estoque,0) * -1), 
	substr(obter_se_local_direto(a.cd_local_estoque),1,1), 
	a.nr_seq_proj_rec, 
	a.cd_conta_contabil, 
	a.cd_local_estoque, 
	a.cd_centro_custo, 
	obter_dados_ordem_compra(a.nr_ordem_compra,'TC'), 
	-1 qt_count_itens, 
	(coalesce(a.pr_desconto,0) * -1), 
	obter_compra_contrato_mercado(nr_sequencia, nr_item_nf) 
from	material m, 
	nota_fiscal_item a 
where	a.nr_sequencia	= nr_seq_nota_fiscal_w 
and	a.cd_material = m.cd_material 
and	coalesce(vl_liquido,0) <> 0 
and	ie_entrada_saida_w = 'S';

C03 CURSOR FOR 
SELECT a.cd_estabelecimento, 
	a.cd_material, 
	a.qt_compra, 
	a.qt_compra_urgente, 
	a.qt_compra_informal, 
	a.vl_compra, 
	a.qt_dias_prazo_pagto, 
	b.qt_conv_estoque_consumo, 
	a.nr_sequencia, 
	a.dt_referencia 
from 	Material b, 
	EIS_COMPRAS A 
where	a.cd_material	= b.cd_material 
and	PKG_DATE_UTILS.start_of(a.dt_referencia,'month', 0)	= PKG_DATE_UTILS.start_of(dt_parametro_w,'month', 0) 	/**Anderson 20/03/2007 - OS 50306,52839 - trunc pelo mes **/
 
and	a.ie_periodo = 'D';

C04 CURSOR FOR 
SELECT	cd_estabelecimento, 
	cd_cgc, 
	cd_pessoa_fisica, 
	cd_operacao_nf, 
	ie_prod_fabric, 
	cd_grupo_material, 
	ie_tipo_material, 
	cd_material, 
	qt_dias_prazo_entrega, 
	qt_dias_prazo_pagto, 
	qt_dias_atraso, 
	qt_compra, 
	qt_compra_urgente, 
	qt_compra_informal, 
	vl_compra, 
	vl_bruto_compra, 
	vl_compra_avista, 
	vl_custo_padrao, 
	cd_comprador, 
	vl_medio_fatur, 
	ie_urgente, 
	vl_liq_moeda_ref, 
	vl_compra_prazo_medio, 
	ie_classificacao, 
	ie_curva_abc, 
	ie_vinc_contrato, 
	ie_vinc_ordem, 
	ie_ordem_contrato, 
	nr_seq_proj_rec, 
	cd_conta_contabil, 
	cd_local_estoque, 
	cd_centro_custo, 
	nr_seq_tipo_compra, 
	qt_count_itens, 
	pr_desconto_medio, 
	ie_contrato_mercado, 
	ie_tipo_fornecedor 
from	eis_compras 
where	PKG_DATE_UTILS.start_of(dt_referencia, 'month', 0) = dt_parametro_w 
and	ie_periodo = 'D';

C05 CURSOR FOR 
SELECT	cd_estabelecimento, 
	cd_cgc, 
	cd_pessoa_fisica, 
	cd_operacao_nf, 
	ie_prod_fabric, 
	cd_grupo_material, 
	ie_tipo_material, 
	cd_material, 
	qt_dias_prazo_entrega, 
	qt_dias_prazo_pagto, 
	qt_dias_atraso, 
	qt_compra, 
	qt_compra_urgente, 
	qt_compra_informal, 
	vl_compra, 
	vl_bruto_compra, 
	vl_compra_avista, 
	vl_custo_padrao, 
	cd_comprador, 
	vl_medio_fatur, 
	ie_urgente, 
	vl_liq_moeda_ref, 
	vl_compra_prazo_medio, 
	ie_classificacao, 
	ie_curva_abc, 
	ie_vinc_contrato, 
	ie_vinc_ordem, 
	ie_ordem_contrato, 
	nr_seq_proj_rec, 
	cd_conta_contabil, 
	cd_local_estoque, 
	cd_centro_custo, 
	nr_seq_tipo_compra, 
	qt_count_itens, 
	pr_desconto_medio, 
	ie_contrato_mercado, 
	ie_tipo_fornecedor 
from	eis_compras 
where	PKG_DATE_UTILS.start_of(dt_referencia, 'year', 0) between PKG_DATE_UTILS.start_of(dt_parametro_w,'year', 0) and PKG_DATE_UTILS.start_of(dt_parametro_fim_w,'year', 0) 
and	ie_periodo = 'M';

c09 CURSOR FOR 
SELECT	a.vl_preco_venda 
from	preco_material a, 
	convenio_preco_mat b 
where	a.cd_tab_preco_mat = b.cd_tab_preco_mat	 
and	a.cd_estabelecimento = cd_estabelecimento_w 
and	b.cd_convenio = cd_convenio_w 
and	b.cd_categoria = cd_categoria_w 
and	a.cd_material = cd_material_w 
and	coalesce(b.ie_situacao,'A') = 'A' 
and	a.ie_situacao = 'A' 
and	a.dt_inicio_vigencia <= dt_parametro_fim_w 
order by a.dt_inicio_vigencia desc, 
	a.vl_preco_venda desc;
	
 

BEGIN 
/*Insert into Log__Tasy values (sysdate, 'Tasy', 601, 'Compras');*/
 
commit;
dt_parametro_w       	:= PKG_DATE_UTILS.start_of(dt_parametro_p,'month', 0);
dt_parametro_fim_w 	:= PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.ADD_MONTH(dt_parametro_w,1,0), 'MONTH', 0) - 1/86400;
 
nr_seq_log_w := Gravar_Log_Indicador(1, WHEB_MENSAGEM_PCK.get_texto(301261), clock_timestamp(), dt_parametro_w, coalesce(wheb_usuario_pck.get_nm_usuario,'Tasy'), nr_seq_log_w);
 
delete 
from	eis_compras 
where	PKG_DATE_UTILS.start_of(dt_referencia,'MONTH', 0) = dt_parametro_w;
commit;
 
delete 
from	eis_compras 
where	PKG_DATE_UTILS.start_of(dt_referencia,'year', 0) = PKG_DATE_UTILS.start_of(dt_parametro_w,'year', 0) 
and	ie_periodo = 'A';
commit;
 
cd_estab_ant_w		:= 0;
cd_cgc_ww		:= '0';
 
OPEN c01;
LOOP 
FETCH c01 into 
	cd_estabelecimento_w, 
	cd_cgc_w, 
	cd_pessoa_fisica_w, 
	nr_seq_nota_fiscal_w, 
	dt_entrada_saida_w, 
	cd_operacao_nf_w, 
	ie_tipo_operacao_w, 
	ie_entrada_saida_w, 
	ie_prazo_medio_eis_w, 
	ie_consignado_w, 
	ie_vinc_contrato_w, 
	ie_vinc_ordem_w, 
	ie_ordem_contrato_w, 
	ie_tipo_fornecedor_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	 
	if (cd_estab_ant_w <> cd_estabelecimento_w) then 
		select	coalesce(max(ie_forma_prazo_eis_compra), 'F') 
		into STRICT	ie_forma_prazo_eis_compra_w 
		from	parametro_compras 
		where	cd_estabelecimento = cd_estabelecimento_w;
	end if;
	 
	cd_estab_ant_w	:= cd_estabelecimento_w;
	dt_referencia_w	:= dt_entrada_saida_w;
	 
	if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then 
		select	coalesce(max(ie_prod_fabric),'N') 
		into STRICT 	ie_prod_fabric_w 
		from 	pessoa_juridica 
		where 	cd_cgc	= cd_cgc_w;
	end if;
 
	 
	/* Maicon - Deixar o trunc nas datas*/
 
	if (ie_forma_prazo_eis_compra_w = 'T') then 
		select	round(dividir( 
			sum(v.vl_saldo_titulo * (PKG_DATE_UTILS.start_of(v.dt_vencimento_atual,'dd', 0) - PKG_DATE_UTILS.start_of(a.dt_entrada_saida,'dd', 0))), 
			sum(v.vl_saldo_titulo)),0) 
		into STRICT	qt_dias_prazo_pagto_w 
	  	from	titulo_pagar v, 
			nota_fiscal a 
		where	a.nr_sequencia	= v.nr_seq_nota_fiscal 
		and	a.nr_sequencia	= nr_seq_nota_fiscal_w 
		and	PKG_DATE_UTILS.start_of(a.dt_entrada_saida,'dd', 0) <= PKG_DATE_UTILS.start_of(v.dt_vencimento_atual,'dd', 0) 
		and (PKG_DATE_UTILS.start_of(v.dt_vencimento_atual,'dd', 0) - PKG_DATE_UTILS.start_of(a.dt_entrada_saida,'dd', 0)) < 900;
	elsif (ie_forma_prazo_eis_compra_w = 'F') then 
		select	round(dividir( 
			sum(v.vl_vencimento * (PKG_DATE_UTILS.start_of(v.dt_vencimento,'dd', 0) - PKG_DATE_UTILS.start_of(a.dt_entrada_saida,'dd', 0))), 
			sum(v.vl_vencimento)),0) 
		into STRICT	qt_dias_prazo_pagto_w 
	  	from	nota_fiscal_venc v, 
			nota_fiscal a 
		where	a.nr_sequencia	= v.nr_sequencia 
		and	a.nr_sequencia	= nr_seq_nota_fiscal_w 
		and	PKG_DATE_UTILS.start_of(a.dt_entrada_saida,'dd', 0)	<= PKG_DATE_UTILS.start_of(v.dt_vencimento,'dd', 0) 
		and (PKG_DATE_UTILS.start_of(v.dt_vencimento,'dd', 0) - PKG_DATE_UTILS.start_of(a.dt_entrada_saida,'dd', 0)) < 900;
	elsif (ie_forma_prazo_eis_compra_w = 'E') then 
		select	round(dividir( 
			sum(v.vl_vencimento * (PKG_DATE_UTILS.start_of(v.dt_vencimento,'dd', 0) - PKG_DATE_UTILS.start_of(a.dt_emissao,'dd', 0))), 
			sum(v.vl_vencimento)),0) 
		into STRICT	qt_dias_prazo_pagto_w 
	  	from	nota_fiscal_venc v, 
			nota_fiscal a 
		where	a.nr_sequencia	= v.nr_sequencia 
		and	a.nr_sequencia	= nr_seq_nota_fiscal_w 
		and	PKG_DATE_UTILS.start_of(a.dt_emissao,'dd', 0)	<= PKG_DATE_UTILS.start_of(v.dt_vencimento,'dd', 0) 
		and (PKG_DATE_UTILS.start_of(v.dt_vencimento,'dd', 0) - PKG_DATE_UTILS.start_of(a.dt_emissao,'dd', 0)) < 900;
	end if;
 
	if (qt_dias_prazo_pagto_w > 999) then 
		qt_dias_prazo_pagto_w	:= 0;
	end if;
 
 	open c02;
	loop 
	FETCH c02 into 
		cd_material_w, 
		nr_ordem_compra_w, 
		dt_entrega_ordem_w, 
   		vl_compra_w, 
		vl_bruto_compra_w, 
		vl_liq_moeda_ref_w, 
		qt_compra_w, 
		ie_local_direto_w, 
		nr_seq_proj_rec_w, 
		cd_conta_contabil_w, 
		cd_local_estoque_w, 
		cd_centro_custo_w, 
		nr_seq_tipo_compra_w, 
		qt_count_itens_w, 
		pr_desconto_w, 
		ie_contrato_mercado_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
 
		select	substr(obter_curva_abc_estab(cd_estabelecimento_w, cd_material_w, null, PKG_DATE_UTILS.start_of(dt_referencia_w, 'MONTH', 0)),1,1) 
		into STRICT	ie_curva_abc_w 
		;
		 
		 
		select	coalesce(max(cd_comprador),0), 
			coalesce(max(coalesce(dt_emissao, dt_ordem_compra)), dt_entrada_saida_w), 
			coalesce(max(ie_urgente),'N') 
		into STRICT	cd_comprador_w, 
			dt_ordem_w, 
			ie_urgente_w 
		from	ordem_compra 
		where	nr_ordem_compra = nr_ordem_compra_w 
		and	(nr_ordem_compra_w IS NOT NULL AND nr_ordem_compra_w::text <> '');
 
 
		if (coalesce(dt_ordem_w::text, '') = '') or (dt_entrada_saida_w <= dt_ordem_w) then 
			qt_dias_prazo_entrega_w := 0;
		else 
			qt_dias_prazo_entrega_w := round((dt_entrada_saida_w - dt_ordem_w)::numeric,0);
		end if;
		 
		 
		if (coalesce(dt_entrega_ordem_w::text, '') = '') or (dt_entrada_saida_w <= dt_entrega_ordem_w) or (abs(dt_entrada_saida_w - dt_entrega_ordem_w) > 1000) then 
			qt_dias_atraso_w := 0;
		else 
			qt_dias_atraso_w := obter_dias_entre_datas(dt_entrega_ordem_w,dt_entrada_saida_w);
		end if;
 
		select	a.ie_tipo_material, 
			b.cd_grupo_material 
		into STRICT	ie_tipo_material_w, 
			cd_grupo_material_w 
		from	estrutura_material_v b, 
			Material a 
		where	a.cd_material	= cd_material_w 
		and	b.cd_material	= cd_material_w;
 
		ie_urgente_w		:= coalesce(ie_urgente_w,'N');
		ie_classificacao_w		:= 0;
		if (ie_consignado_w in ('1','3')) then 
			ie_classificacao_w	:= ie_consignado_w;
		end if;
		if (ie_local_direto_w = 'S') then 
			ie_classificacao_w	:= '8' || ie_classificacao_w;
		end if;
 
		qt_compra_urgente_w	:= 0;
		if (ie_urgente_w = 'S') then 
			qt_compra_urgente_w	:= qt_compra_w;
		end if;
 
		qt_compra_informal_w	:= 0;
		if (ie_ordem_contrato_w = 'N') then 
			qt_compra_informal_w	:= qt_compra_w;
		end if;
 
 
		begin 
		 
		if (ie_tipo_fornecedor_w = 'PF') then 
			begin 
			select	coalesce(nr_sequencia,0) 
			into STRICT	nr_sequencia_w 
			from	eis_compras 
			where	ie_periodo	= 'M' 
			and	dt_referencia	= dt_referencia_w 
			and	cd_estabelecimento	= cd_estabelecimento_w 
			and	cd_pessoa_fisica = cd_pessoa_fisica_w 
			and	cd_operacao_nf	= cd_operacao_nf_w 
			and	cd_material	= cd_material_w 
			and	cd_comprador	= cd_comprador_w 
			and	qt_dias_atraso	= qt_dias_atraso_w 
			and	ie_urgente	= ie_urgente_w 
			and	ie_classificacao	= ie_classificacao_w;
			end;
		else 
			begin 
			select	coalesce(nr_sequencia,0) 
			into STRICT	nr_sequencia_w 
			from	eis_compras 
			where	ie_periodo	= 'M' 
			and	dt_referencia	= dt_referencia_w 
			and	cd_estabelecimento	= cd_estabelecimento_w 
			and	cd_cgc		= cd_cgc_w 
			and	cd_operacao_nf	= cd_operacao_nf_w 
			and	cd_material	= cd_material_w 
			and	cd_comprador	= cd_comprador_w 
			and	qt_dias_atraso	= qt_dias_atraso_w 
			and	ie_urgente	= ie_urgente_w 
			and	ie_classificacao	= ie_classificacao_w;
			end;
		end if;
		 
 
		exception 
		when others then 
			nr_sequencia_w	:= 0;
		end;
		if (ie_prazo_medio_eis_w = 'S') then	 
			vl_compra_prazo_medio_w	:= vl_compra_w;
		else 
			vl_compra_prazo_medio_w	:= 0;
			qt_dias_prazo_pagto_w	:= 0;
		end if;
		 
		 
		if (nr_sequencia_w	= 0) then 
			begin 
			 
			select	nextval('eis_compras_seq') 
			into STRICT	nr_sequencia_w 
			;
			 
			if (qt_dias_prazo_entrega_w > 99999) then 
				qt_dias_prazo_entrega_w	:= 0;
			end if;
 
			if (qt_dias_prazo_pagto_w > 99999) then 
				qt_dias_prazo_pagto_w	:= 0;
			end if;
 
			if (qt_dias_atraso_w > 99999) then 
				qt_dias_atraso_w	:= 0;
			end if;
			 
			insert into eis_compras( 
				nr_sequencia, 
				dt_referencia, 
				cd_estabelecimento, 
				ie_periodo, 
				dt_atualizacao, 
				nm_usuario, 
				cd_cgc, 
				cd_pessoa_fisica, 
				cd_operacao_nf, 
				ie_prod_fabric, 
				cd_grupo_material, 
				ie_tipo_material, 
				cd_material, 
				qt_dias_prazo_entrega, 
				qt_dias_prazo_pagto, 
				qt_dias_atraso, 
				qt_compra, 
				qt_compra_urgente, 
				qt_compra_informal, 
				vl_compra, 
				vl_compra_avista, 
				vl_custo_padrao, 
				cd_comprador, 
				vl_medio_fatur, 
				vl_liq_moeda_ref, 
				ie_urgente, 
				vl_compra_prazo_medio, 
				ie_classificacao, 
				ie_curva_abc, 
				ie_vinc_contrato, 
				ie_vinc_ordem, 
				ie_ordem_contrato, 
				nr_seq_proj_rec, 
				cd_conta_contabil, 
				cd_local_estoque, 
				cd_centro_custo, 
				vl_bruto_compra, 
				nr_seq_tipo_compra, 
				qt_count_itens, 
				pr_desconto_medio, 
				ie_contrato_mercado, 
				ie_tipo_fornecedor) 
	   		values (	nr_sequencia_w, 
				dt_referencia_w, 
				cd_estabelecimento_w, 
				'D', 
				dt_atualizacao_w, 
				nm_usuario_p, 
				cd_cgc_w, 
				cd_pessoa_fisica_w, 
				cd_operacao_nf_w, 
				ie_prod_fabric_w, 
				cd_grupo_material_w, 
				ie_tipo_material_w, 
				cd_material_w, 
				qt_dias_prazo_entrega_w, 
				qt_dias_prazo_pagto_w, 
				qt_dias_atraso_w, 
				qt_compra_w, 
				qt_compra_urgente_w, 
				qt_compra_informal_w, 
				vl_compra_w, 
				0, 
				0, 
				cd_comprador_w, 
				0, 
				vl_liq_moeda_ref_w, 
				ie_urgente_w, 
				vl_compra_prazo_medio_w, 
				ie_classificacao_w, 
				ie_curva_abc_w, 
				ie_vinc_contrato_w, 
				ie_vinc_ordem_w, 
				ie_ordem_contrato_w, 
				nr_seq_proj_rec_w, 
				cd_conta_contabil_w, 
				cd_local_estoque_w, 
				cd_centro_custo_w, 
				vl_bruto_compra_w, 
				nr_seq_tipo_compra_w, 
				qt_count_itens_w, 
				pr_desconto_w, 
				ie_contrato_mercado_w, 
				ie_tipo_fornecedor_w);
			end;
		else 
			begin 
			update	eis_compras 
			set	qt_dias_prazo_entrega	= dividir(((qt_dias_prazo_entrega * vl_compra) + 
								(qt_dias_prazo_entrega_w * vl_compra_w )), (vl_compra + vl_compra_w)), 
				qt_dias_prazo_pagto	= dividir(((qt_dias_prazo_pagto * vl_compra_prazo_medio) + 
								(qt_dias_prazo_pagto_w * vl_compra_prazo_medio_w)), (vl_compra_prazo_medio + vl_compra_prazo_medio_w)), 
				qt_dias_atraso  		= dividir(((qt_dias_atraso * vl_compra) + (qt_dias_atraso_w * vl_compra_w)), (vl_compra + vl_compra_w)), 
		 		vl_compra		= vl_compra + vl_compra_w, 
				vl_bruto_compra		= vl_bruto_compra + vl_bruto_compra_w, 
				qt_compra		= qt_compra + qt_compra_w, 
				qt_compra_urgente	= qt_compra_urgente + qt_compra_urgente_w, 
				qt_compra_informal	= qt_compra_informal + qt_compra_informal_w, 
				qt_count_itens		= qt_count_itens + qt_count_itens_w, 
				pr_desconto_medio	= pr_desconto_medio + pr_desconto_w, 
				dt_atualizacao		= dt_atualizacao_w, 
				nm_usuario		= nm_usuario_p 
			where	nr_sequencia		= nr_sequencia_w;
			end;
		end if;
		 
	end;
	END LOOP;
	CLOSE c02;
	end;
END LOOP;
CLOSE c01;
commit;
 
/* Calcular o Valor presente e o custo da compra 
select	nvl(max(pr_taxa_financ),0) 
into	pr_taxa_financ_w		--Anderson 20/03/2007 - Incluí rotina dentro do c03 
FROM	Parametro_compras;*/
 
 
OPEN c03;
LOOP 
FETCH c03 into 
	cd_estabelecimento_w, 
	cd_material_w, 
	qt_compra_w, 
	qt_compra_urgente_w, 
	qt_compra_informal_w, 
	vl_compra_w, 
	qt_dias_prazo_pagto_w, 
	qt_conv_est_consumo_w, 
	nr_sequencia_w, 
	dt_referencia_ww;
EXIT WHEN NOT FOUND; /* apply on c03 */
	begin 
 
	select	coalesce(max(pr_taxa_financ),0)	--Anderson 20/03/2007 - Tratei por estabelecimento 
	into STRICT	pr_taxa_financ_w 
	FROM	Parametro_compras 
	where	cd_estabelecimento = cd_estabelecimento_w;
 
	begin 
		SELECT * FROM obter_convenio_particular(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w) INTO STRICT cd_convenio_w, cd_categoria_w;
	exception 
	when others then 
		/*(-20011,	'Não foram encontrados dados nos parâmetros do faturamento. ' ||'Verifique se existe cadastro nos parâmetro de faturamento em todos os estabelecimentos.');*/
 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(182874);
	end;
 
	vl_presente_w 	:= vl_compra_w / (1 + pr_taxa_financ_w /100)**(qt_dias_prazo_pagto_w /30);
 
	select	obter_regra_custo_padrao_mat(cd_material_w, cd_estabelecimento_w, 'R'), 
		obter_regra_custo_padrao_mat(cd_material_w, cd_estabelecimento_w, 'V') 
	into STRICT	ie_regra_custo_mat_w, 
		vl_regra_custo_mat_w 
	;
	vl_custo_padrao_w	:= 0;
	if (ie_regra_custo_mat_w = 0) then 
		select	obter_brasindice_preco( 
						cd_estabelecimento_w, 
						cd_convenio_w, 
						cd_categoria_w, 
						cd_material_w, 
						dt_referencia_ww, 
						0) 
		into STRICT	vl_custo_padrao_w 
		;
	elsif (ie_regra_custo_mat_w = 1) then 
		vl_custo_padrao_w	:= 0;
	elsif (ie_regra_custo_mat_w = 2) then 
		select	obter_valor_ultima_compra( 
					cd_estabelecimento_w, 
					null, cd_material_w, null, 'E') 
		into STRICT	vl_custo_padrao_w 
		;
	elsif (ie_regra_custo_mat_w = 3) then 
		select	obter_custo_medio_material( 
					cd_estabelecimento_w, 
					PKG_DATE_UTILS.start_of(dt_parametro_p,'month', 0), 
					cd_material_w) 
		into STRICT	vl_custo_padrao_w 
		;
	elsif (ie_regra_custo_mat_w = 4) then 
		vl_custo_padrao_w	:= vl_regra_custo_mat_w;
	end if;
 
	if (vl_custo_padrao_w = 0) and (ie_regra_custo_mat_w <> 4) then 
		begin 
		OPEN C09;
		LOOP 
		FETCH C09 into	vl_custo_padrao_w;
		EXIT WHEN NOT FOUND; /* apply on c09 */
			exit;
		END LOOP;
		CLOSE C09;
		end;
	end if;
 
	qt_consumo_w		:= qt_compra_w; /* * qt_conv_est_consumo_w;*/
 
	if (vl_custo_padrao_w = 0) then 
		vl_custo_padrao_w	:= vl_compra_w;
	else	 
		vl_custo_padrao_w	:= vl_custo_padrao_w * qt_consumo_w;
	end if;
	vl_medio_fatur_w		:= 0;
 
 
	begin 
	select	coalesce(dividir(sum(a.vl_material), sum(a.qt_resumo)),0) 
	into STRICT	vl_medio_fatur_w 
	from	material b, 
		conta_paciente_resumo a 
	where	a.cd_material	= b.cd_material 
	and	b.cd_material_estoque = cd_material_w 
	and	a.dt_referencia between dt_parametro_w and dt_parametro_fim_w 
	and	a.qt_resumo		<> 0;
	exception 
		when others then 
			vl_medio_fatur_w	:= 0;
	end;
	vl_medio_fatur_w		:= vl_medio_fatur_w * qt_conv_est_consumo_w;
 
	update	Eis_Compras 
	set	vl_custo_padrao  	= round((vl_custo_padrao_w)::numeric,2), 
		vl_compra_avista 	= vl_presente_w, 
		vl_medio_fatur	= vl_medio_fatur_w 
	where 	nr_sequencia	= nr_sequencia_w;
	end;
END LOOP;
CLOSE c03;
/*Insert into Log__Tasy values (sysdate, 'Tasy', 602, 'Compras');*/
 
commit;
 
/* Gerar Acumulado Mensal */
 
 
OPEN C04;
LOOP 
FETCH C04 into 
	cd_estabelecimento_w, 
	cd_cgc_w, 
	cd_pessoa_fisica_w, 
	cd_operacao_nf_w, 
	ie_prod_fabric_w, 
	cd_grupo_material_w, 
	ie_tipo_material_w, 
	cd_material_w, 
	qt_dias_prazo_entrega_w, 
	qt_dias_prazo_pagto_w, 
	qt_dias_atraso_w, 
	qt_compra_w, 
	qt_compra_urgente_w, 
	qt_compra_informal_w, 
	vl_compra_w, 
	vl_bruto_compra_w, 
	vl_compra_avista_w, 
	vl_custo_padrao_w, 
	cd_comprador_w, 
	vl_medio_fatur_w, 
	ie_urgente_w, 
	vl_liq_moeda_ref_w, 
	vl_compra_prazo_medio_w, 
	ie_classificacao_w, 
	ie_curva_abc_w, 
	ie_vinc_contrato_w, 
	ie_vinc_ordem_w, 
	ie_ordem_contrato_w, 
	nr_seq_proj_rec_w, 
	cd_conta_contabil_w, 
	cd_local_estoque_w, 
	cd_centro_custo_w, 
	nr_seq_tipo_compra_w, 
	qt_count_itens_w, 
	pr_desconto_w, 
	ie_contrato_mercado_w, 
	ie_tipo_fornecedor_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
 
select	nextval('eis_compras_seq') 
into STRICT	nr_sequencia_w
;
 
insert into eis_compras( 
	nr_sequencia, 
	dt_referencia, 
	cd_estabelecimento, 
	ie_periodo, 
	dt_atualizacao, 
	nm_usuario, 
	cd_cgc, 
	cd_pessoa_fisica, 
	cd_operacao_nf, 
	ie_prod_fabric, 
	cd_grupo_material, 
	ie_tipo_material, 
	cd_material, 
	qt_dias_prazo_entrega, 
	qt_dias_prazo_pagto, 
	qt_dias_atraso, 
	qt_compra, 
	qt_compra_urgente, 
	qt_compra_informal, 
	vl_compra, 
	vl_compra_avista, 
	vl_custo_padrao, 
	cd_comprador, 
	vl_medio_fatur, 
	vl_liq_moeda_ref, 
	ie_urgente, 
	vl_compra_prazo_medio, 
	ie_classificacao, 
	ie_curva_abc, 
	ie_vinc_contrato, 
	ie_vinc_ordem, 
	ie_ordem_contrato, 
	nr_seq_proj_rec, 
	cd_conta_contabil, 
	cd_local_estoque, 
	cd_centro_custo, 
	vl_bruto_compra, 
	nr_seq_tipo_compra, 
	qt_count_itens, 
	pr_desconto_medio, 
	ie_contrato_mercado, 
	ie_tipo_fornecedor) 
values (nr_sequencia_w, 
	dt_parametro_w, 
	cd_estabelecimento_w, 
	'M', 
	dt_atualizacao_w, 
	nm_usuario_p, 
	cd_cgc_w, 
	cd_pessoa_fisica_w, 
	cd_operacao_nf_w, 
	ie_prod_fabric_w, 
	cd_grupo_material_w, 
	ie_tipo_material_w, 
	cd_material_w, 
	qt_dias_prazo_entrega_w, 
	qt_dias_prazo_pagto_w, 
	qt_dias_atraso_w, 
	qt_compra_w, 
	qt_compra_urgente_w, 
	qt_compra_informal_w, 
	vl_compra_w, 
	vl_compra_avista_w, 
	round((vl_custo_padrao_w)::numeric,2), 
	cd_comprador_w, 
	vl_medio_fatur_w, 
	vl_liq_moeda_ref_w, 
	ie_urgente_w, 
	vl_compra_prazo_medio_w, 
	ie_classificacao_w, 
	ie_curva_abc_w, 
	ie_vinc_contrato_w, 
	ie_vinc_ordem_w, 
	ie_ordem_contrato_w, 
	nr_seq_proj_rec_w, 
	cd_conta_contabil_w, 
	cd_local_estoque_w, 
	cd_centro_custo_w, 
	vl_bruto_compra_w, 
	nr_seq_tipo_compra_w, 
	qt_count_itens_w, 
	pr_desconto_w, 
	ie_contrato_mercado_w, 
	ie_tipo_fornecedor_w);
		 
END LOOP;
CLOSE C04;
 
/*MAF OS85849 11/03/2008 Coloquei este commit pois dava DeadLock*/
 
commit;
 
/* Gerar Acumulado Anual */
 
 
OPEN C05;
LOOP 
 
FETCH C05 into 
	cd_estabelecimento_w, 
	cd_cgc_w, 
	cd_pessoa_fisica_w, 
	cd_operacao_nf_w, 
	ie_prod_fabric_w, 
	cd_grupo_material_w, 
	ie_tipo_material_w, 
	cd_material_w, 
	qt_dias_prazo_entrega_w, 
	qt_dias_prazo_pagto_w, 
	qt_dias_atraso_w, 
	qt_compra_w, 
	qt_compra_urgente_w, 
	qt_compra_informal_w, 
	vl_compra_w, 
	vl_bruto_compra_w, 
	vl_compra_avista_w, 
	vl_custo_padrao_w, 
	cd_comprador_w, 
	vl_medio_fatur_w, 
	ie_urgente_w, 
	vl_liq_moeda_ref_w, 
	vl_compra_prazo_medio_w, 
	ie_classificacao_w, 
	ie_curva_abc_w, 
	ie_vinc_contrato_w, 
	ie_vinc_ordem_w, 
	ie_ordem_contrato_w, 
	nr_seq_proj_rec_w, 
	cd_conta_contabil_w, 
	cd_local_estoque_w, 
	cd_centro_custo_w, 
	nr_seq_tipo_compra_w, 
	qt_count_itens_w, 
	pr_desconto_w, 
	ie_contrato_mercado_w, 
	ie_tipo_fornecedor_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
 
select	nextval('eis_compras_seq') 
into STRICT	nr_sequencia_w
;
 
insert into eis_compras( 
	nr_sequencia, 
	dt_referencia, 
	cd_estabelecimento, 
	ie_periodo, 
	dt_atualizacao, 
	nm_usuario, 
	cd_cgc, 
	cd_pessoa_fisica, 
	cd_operacao_nf, 
	ie_prod_fabric, 
	cd_grupo_material, 
	ie_tipo_material, 
	cd_material, 
	qt_dias_prazo_entrega, 
	qt_dias_prazo_pagto, 
	qt_dias_atraso, 
	qt_compra, 
	qt_compra_urgente, 
	qt_compra_informal, 
	vl_compra, 
	vl_compra_avista, 
	vl_custo_padrao, 
	cd_comprador, 
	vl_medio_fatur, 
	vl_liq_moeda_ref, 
	ie_urgente, 
	vl_compra_prazo_medio, 
	ie_classificacao, 
	ie_curva_abc, 
	ie_vinc_contrato, 
	ie_vinc_ordem, 
	ie_ordem_contrato, 
	nr_seq_proj_rec, 
	cd_conta_contabil, 
	cd_local_estoque, 
	cd_centro_custo, 
	vl_bruto_compra, 
	nr_seq_tipo_compra, 
	qt_count_itens, 
	pr_desconto_medio, 
	ie_contrato_mercado, 
	ie_tipo_fornecedor) 
values (nr_sequencia_w, 
	PKG_DATE_UTILS.start_of(dt_parametro_w,'year', 0), 
	cd_estabelecimento_w, 
	'A', 
	dt_atualizacao_w, 
	nm_usuario_p, 
	cd_cgc_w, 
	cd_pessoa_fisica_w, 
	cd_operacao_nf_w, 
	ie_prod_fabric_w, 
	cd_grupo_material_w, 
	ie_tipo_material_w, 
	cd_material_w, 
	qt_dias_prazo_entrega_w, 
	qt_dias_prazo_pagto_w, 
	qt_dias_atraso_w, 
	qt_compra_w, 
	qt_compra_urgente_w, 
	qt_compra_informal_w, 
	vl_compra_w, 
	vl_compra_avista_w, 
	round((vl_custo_padrao_w)::numeric,2), 
	cd_comprador_w, 
	vl_medio_fatur_w, 
	vl_liq_moeda_ref_w, 
	ie_urgente_w, 
	vl_compra_prazo_medio_w, 
	ie_classificacao_w, 
	ie_curva_abc_w, 
	ie_vinc_contrato_w, 
	ie_vinc_ordem_w, 
	ie_ordem_contrato_w, 
	nr_seq_proj_rec_w, 
	cd_conta_contabil_w, 
	cd_local_estoque_w, 
	cd_centro_custo_w, 
	vl_bruto_compra_w, 
	nr_seq_tipo_compra_w, 
	qt_count_itens_w, 
	pr_desconto_w, 
	ie_contrato_mercado_w, 
	ie_tipo_fornecedor_w);
END LOOP;
CLOSE C05;
 
CALL Atualizar_Log_Indicador(clock_timestamp(), nr_seq_log_w);
 
commit;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_compras ( dt_parametro_p timestamp, nm_usuario_p text) FROM PUBLIC;

