-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cancelar_titulo_pagar ( nr_titulo_p bigint, nm_usuario_p text, dt_cancelamento_p timestamp) AS $body$
DECLARE


/* nÃo dar commit nesta procedure */

vl_saldo_titulo_w			double precision;
cd_moeda_w				integer;
vl_baixa_w				double precision;
nr_sequencia_w				bigint;
nr_titulo_imposto_w			bigint;
nr_seq_tit_imp_w			bigint;
ds_lista_tit_imp_w			varchar(255);
ds_lista_rep_imp_w			varchar(255);
ds_lista_nf_imp_w			varchar(255);
ie_canc_tit_contab_w			varchar(255);
nr_lote_contabil_w			bigint;
cd_estabelecimento_w			bigint;
ie_permite_cancel_darf_w		varchar(1);
qt_darf_w				bigint;
nr_seq_transf_canc_tit_w		bigint;
nr_seq_titulo_lote_w			bigint;
qt_ordem_compra_w			bigint;
qt_nota_fiscal_w			bigint;
qt_cheque_adiant_w			bigint;
qt_anexo_adiant_w			bigint;
nr_bordero_w				bigint;
nr_lote_reembolso_w			lote_contabil.nr_lote_contabil%type;
nr_seq_reembolso_w			pls_protocolo_conta.nr_sequencia%type;
ie_cancelar_adiantamento_w		parametros_contas_pagar.ie_cancelar_adiantamento%type;
nr_adiant_pago_w			titulo_pagar.nr_adiant_pago%type;
nr_seq_nota_debito_w			titulo_pagar.nr_seq_nota_debito%type;
qt_titulo_nota_debito_w			integer	:= 0;
nr_seq_nota_deb_conclusao_w		titulo_pagar.nr_seq_nota_deb_conclusao%type;
qt_adiant_w				bigint;
ie_origem_w				titulo_pagar.ie_origem_titulo%type;
ie_cancela_tit_a600		varchar(1);
ie_a600_w				varchar(1) := 'N';
nr_seq_escrit_w			titulo_pagar_escrit.nr_seq_escrit%type;
nr_seq_nota_credito_w		titulo_pagar.nr_seq_nota_credito%type;
vl_adiantamento_w			titulo_pagar_adiant.vl_adiantamento%type;
ie_permite_cancel_tit_w varchar(1);

c01 CURSOR FOR
	SELECT	obter_titulo_imposto(nr_sequencia)
	from	titulo_pagar_imposto
	where	nr_titulo = nr_titulo_p
	and	coalesce(obter_titulo_imposto(nr_sequencia),0) <> 0;


BEGIN

select	coalesce(sum(vl_baixa),0)
into STRICT	vl_baixa_w
from	titulo_pagar_baixa
where	nr_titulo = nr_titulo_p;

if (vl_baixa_w <> 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(228923, 'NR_TITULO='||nr_titulo_p);
	--r.aise_application_error(-20011,'O título ' ||  nr_titulo_p || ' possui baixas. Não pode ser cancelado !' || '#@#@');
end if;

select	count(*),
		sum(vl_adiantamento)
into STRICT	qt_adiant_w,
		vl_adiantamento_w
from	titulo_pagar_adiant
where	nr_titulo = nr_titulo_p;

if (coalesce(qt_adiant_w,0) <> 0) and (coalesce(vl_adiantamento_w,0) > 0) then
	--O título ' ||  nr_titulo_p || ' possui adiantamento vinculado. Não pode ser cancelado !
	CALL wheb_mensagem_pck.exibir_mensagem_abort(328413, 'NR_TITULO='||nr_titulo_p);
end if;

select	max(vl_saldo_titulo),
	max(cd_moeda),
	max(coalesce(nr_lote_contabil,0)),
	max(cd_estabelecimento),
	max(nr_adiant_pago),
	max(nr_seq_nota_deb_conclusao),
	max(coalesce(nr_seq_reembolso,0)),
	max(nr_seq_nota_credito)
into STRICT	vl_saldo_titulo_w,
	cd_moeda_w,
	nr_lote_contabil_w,
	cd_estabelecimento_w,
	nr_adiant_pago_w,
	nr_seq_nota_deb_conclusao_w,
	nr_seq_reembolso_w,
	nr_seq_nota_credito_w
from	titulo_pagar
where	nr_titulo	= nr_titulo_p;

select	coalesce(max(ie_canc_tit_contab), 'N'),
	max(nr_seq_trans_canc_tit),
	coalesce(max(ie_cancelar_adiantamento), 'N')
into STRICT	ie_canc_tit_contab_w,
	nr_seq_transf_canc_tit_w,
	ie_cancelar_adiantamento_w
from	parametros_contas_pagar
where	cd_estabelecimento	= cd_estabelecimento_w;

ie_permite_cancel_darf_w := obter_param_usuario(851, 98, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_permite_cancel_darf_w);
ie_permite_cancel_tit_w := obter_param_usuario(851, 156, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_permite_cancel_tit_w);

if (ie_permite_cancel_darf_w = 'N') then
	select 	count(1)
	into STRICT 	qt_darf_w
	from	darf_titulo_pagar
	where	nr_titulo = nr_titulo_p; -- alterações efetuadas devido ao comentário acima.
	if (qt_darf_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(228922,'NR_TITULO='||nr_titulo_p);
		--r.aise_application_error(-20011,'O título ' ||  nr_titulo_p || ' possui impostos vinculados ao Darf! Parâmetro [98]');
	end if;
end if;

if (nr_lote_contabil_w <> 0) and (ie_canc_tit_contab_w = 'N') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(228921,'NR_TITULO='||nr_titulo_p||';'||'NR_LOTE='||nr_lote_contabil_w);
	--r.aise_application_error(-20011,'O título ' || nr_titulo_p || ' já está contabilizado para provisão no lote ' || nr_lote_contabil_w || '. Não pode ser cancelado!');
end if;

select	max(a.nr_bordero) nr_bordero
into STRICT	nr_bordero_w
from	titulo_pagar_bordero_v a
where	a.nr_titulo	= nr_titulo_p;

if	(nr_bordero_w IS NOT NULL AND nr_bordero_w::text <> '' AND ie_permite_cancel_tit_w = 'N') then
	/* O título nr_titulo_p não pode ser excluído pois está dentro do borderô nr_bordero_w! */

	CALL wheb_mensagem_pck.exibir_mensagem_abort(282479,	'NR_TITULO_P='||nr_titulo_p||
							';NR_BORDERO_W='||nr_bordero_w);
end if;

select  max(a.nr_seq_escrit) nr_seq_escrit
into STRICT nr_seq_escrit_w
from titulo_pagar_escrit a
where a.nr_titulo = nr_titulo_p;

if	(nr_seq_escrit_w IS NOT NULL AND nr_seq_escrit_w::text <> '' AND ie_permite_cancel_tit_w = 'N') then
	/* O título nr_titulo_p não pode ser excluído pois está dentro do lote de pagamento escritural nr_seq_escrit_w! */

	CALL wheb_mensagem_pck.exibir_mensagem_abort(458691,	'NR_TITULO_P='||nr_titulo_p||
							';NR_SEQ_ESCRIT_W='||nr_seq_escrit_w);
end if;


if (coalesce(nr_seq_reembolso_w,0) <> 0) then
	select	max(CASE WHEN coalesce(nr_lote_contabil,0)=0 THEN nr_lote_prov_copartic  ELSE nr_lote_contabil END )
	into STRICT	nr_lote_reembolso_w
	from	pls_protocolo_conta
	where	nr_sequencia	= nr_seq_reembolso_w;

	if (coalesce(nr_lote_reembolso_w,0) <> 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(455023,	'NR_SEQ_REEMBOLSO=' || nr_seq_reembolso_w ||
								';NR_LOTE_CONTABIL=' || nr_lote_reembolso_w ||
								';DS_TIPO_LOTE_CONTABIL=' || ctb_obter_tipo_lote_contabil(nr_lote_reembolso_w,'D'));
	end if;

end if;

select	max(a.nr_sequencia)
into STRICT	nr_seq_titulo_lote_w
from	pls_titulo_lote_camara a,
	pls_lote_camara_comp b
where	b.nr_sequencia		= a.nr_seq_lote_camara
and	a.nr_titulo_pagar	= nr_titulo_p
and	coalesce(b.dt_baixa::text, '') = '';

select	ie_origem_titulo
into STRICT	ie_origem_w
from	titulo_pagar
where	nr_titulo = nr_titulo_p;

if (ie_origem_w = '19') then

	select	max(coalesce(ie_permite_canc_tit_vinc_a600, 'S'))
	into STRICT	ie_cancela_tit_a600
	from	pls_parametros_camara
	where	cd_estabelecimento = cd_estabelecimento_w;

	if (ie_cancela_tit_a600 = 'N') then
		ie_a600_w := 'S';
	end if;
end if;


if (nr_seq_titulo_lote_w IS NOT NULL AND nr_seq_titulo_lote_w::text <> '') and (ie_a600_w = 'N')	then -- Desvincular da câmara de compensação
	CALL pls_desvinc_tit_lote_camara( nr_seq_titulo_lote_w, nm_usuario_p, 'N');
end if;

update	titulo_pagar
set	vl_saldo_titulo	= 0,
	dt_liquidacao	= coalesce(dt_cancelamento_p, clock_timestamp()),
	ie_situacao	= 'C',
	nm_usuario	= nm_usuario_p,
	dt_atualizacao	= clock_timestamp(),
	nr_seq_tributo	 = NULL,
	nr_repasse_terceiro	 = NULL
where	nr_titulo	= nr_titulo_p;

if (nr_seq_nota_deb_conclusao_w IS NOT NULL AND nr_seq_nota_deb_conclusao_w::text <> '') then
	select	max(nr_seq_nota_debito)
	into STRICT	nr_seq_nota_debito_w
	from	ptu_nota_deb_conclusao
	where	nr_sequencia = nr_seq_nota_deb_conclusao_w;

	select	count(1)
	into STRICT	qt_titulo_nota_debito_w
	
	where	exists (SELECT	1
			from	titulo_pagar a
			where	a.nr_seq_nota_debito	= nr_seq_nota_debito_w
			and	a.ie_situacao 		<> 'C');

	/* Se todos os títulos da nota de débito estiverem cancelados, cancela a nota de débito */

	if (qt_titulo_nota_debito_w = 0) then
		update	ptu_nota_debito
		set	ie_cancelamento = 'S'
		where	nr_sequencia	= nr_seq_nota_debito_w;
	end if;
end if;

select	coalesce(max(nr_sequencia), 0) + 1
into STRICT	nr_sequencia_w
from	titulo_pagar_alt_valor
where	nr_titulo	= nr_titulo_p;

insert	into titulo_pagar_alt_valor(
	nr_titulo,
	nr_sequencia,
	dt_alteracao,
	vl_anterior,
	vl_alteracao,
	cd_moeda,
	dt_atualizacao,
	nm_usuario,
	nr_lote_contabil,
	ds_observacao,
	nr_seq_trans_fin)
values (	nr_titulo_p,
	nr_sequencia_w,
	coalesce(dt_cancelamento_p, clock_timestamp()),
	vl_saldo_titulo_w,
	0,
	cd_moeda_w,
	clock_timestamp(),
	nm_usuario_p,
	null,
	OBTER_DESC_EXPRESSAO(322155), /*Cancelado*/
	nr_seq_transf_canc_tit_w);

CALL atualizar_tit_pagar_classif(nr_titulo_p, 'N', nm_usuario_p);

if (ie_cancelar_adiantamento_w = 'S') and (nr_adiant_pago_w IS NOT NULL AND nr_adiant_pago_w::text <> '') then

	select	count(*)
	into STRICT	qt_ordem_compra_w
	from	ordem_compra_adiant_pago a
	where	a.nr_adiantamento	= nr_adiant_pago_w;

	select	count(*)
	into STRICT	qt_nota_fiscal_w
	from	nota_fiscal_adiant_pago a
	where	a.nr_adiantamento	= nr_adiant_pago_w;

	select	count(*)
	into STRICT	qt_cheque_adiant_w
	from	adiantamento_pago_cheque a
	where	a.nr_adiantamento	= nr_adiant_pago_w;

	select	count(*)
	into STRICT	qt_anexo_adiant_w
	from	adiant_pago_arq a
	where	a.nr_adiantamento	= nr_adiant_pago_w;

	if (qt_ordem_compra_w > 0) or (qt_nota_fiscal_w > 0) or (qt_cheque_adiant_w > 0) or (qt_anexo_adiant_w > 0) then

		if (qt_ordem_compra_w > 0) then
			begin
			/* João OS  690362 - 06/02/2013 - 283491 - O adiantamento (número do adiantamento), que originou o título, não pode ser excluído pois possui ordens de compra vinculadas!
			Verifique o campo ¿Excluir adiantamento ao cancelar o título¿ dos Parâmetros do Contas a Pagar*/
			CALL wheb_mensagem_pck.exibir_mensagem_abort(283491,'NR_ADIANT_PAGO='|| nr_adiant_pago_w);
			end;

		elsif (qt_nota_fiscal_w > 0) then
			begin
			/* João OS  690362 - 06/02/2013 - 283524 - O adiantamento (número do adiantamento), que originou o título, não pode ser excluído pois possui notas fiscais vinculadas!
			Verifique o campo ¿Excluir adiantamento ao cancelar o título¿ dos Parâmetros do Contas a Pagar*/
			CALL wheb_mensagem_pck.exibir_mensagem_abort(283524,'NR_ADIANT_PAGO='|| nr_adiant_pago_w);
			end;

		elsif (qt_cheque_adiant_w > 0) then
			begin
			/* João OS  690362 - 06/02/2013 - 283525 - O adiantamento (número do adiantamento), que originou o título, não pode ser excluído pois possui cheques vinculados!
			Verifique o campo ¿Excluir adiantamento ao cancelar o título¿ dos Parâmetros do Contas a Pagar*/
			CALL wheb_mensagem_pck.exibir_mensagem_abort(283525,'NR_ADIANT_PAGO='|| nr_adiant_pago_w);
			end;

		elsif (qt_anexo_adiant_w > 0) then
			begin
			/* João OS  690362 - 06/02/2013 - 283526 - O adiantamento (número do adiantamento), que originou o título, não pode ser excluído pois possui anexos vinculados!
			Verifique o campo ¿Excluir adiantamento ao cancelar o título¿ dos Parâmetros do Contas a Pagar*/
			CALL wheb_mensagem_pck.exibir_mensagem_abort(283526,'NR_ADIANT_PAGO='|| nr_adiant_pago_w);
			end;
		end if;
	else
		update	titulo_pagar
		set	nr_adiant_pago	 = NULL
		where	nr_titulo	= nr_titulo_p;

		delete from adiantamento_pago
		where nr_adiantamento = nr_adiant_pago_w;
	end if;
end if;

open c01; /* paulo - os 60897 - 04/07/2007 - criada a rotina para cancelar os títulos de impostos do título principal */
loop
fetch c01 into
	nr_titulo_imposto_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	CALL cancelar_titulo_pagar(nr_titulo_imposto_w,nm_usuario_p, coalesce(dt_cancelamento_p, clock_timestamp()));
end loop;
close c01;

/*AAMFIRMO OS 1366319 - Atualizar saldo da NC vinculada ao título*/

if ( coalesce(nr_seq_nota_credito_w,0) <> 0 ) then
	CALL atualizar_saldo_nota_credito(nr_seq_nota_credito_w, nm_usuario_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cancelar_titulo_pagar ( nr_titulo_p bigint, nm_usuario_p text, dt_cancelamento_p timestamp) FROM PUBLIC;

