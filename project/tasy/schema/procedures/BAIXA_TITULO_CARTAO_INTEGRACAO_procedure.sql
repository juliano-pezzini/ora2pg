-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixa_titulo_cartao_integracao ( ds_lista_titulos_p text, nm_usuario_p text, cd_tipo_recebimento_p tipo_recebimento.cd_tipo_recebimento%type, nr_seq_pls_ret_pagto_p movto_cartao_cr.nr_seq_pls_ret_pagto%type, /*Dados do cartao - Campos obrigatorios*/

 cd_estabelecimento_p movto_cartao_cr.cd_estabelecimento%type, dt_transacao_p movto_cartao_cr.dt_transacao%type, ie_tipo_cartao_p movto_cartao_cr.ie_tipo_cartao%type, nr_autorizacao_p movto_cartao_cr.nr_autorizacao%type, nr_seq_bandeira_p movto_cartao_cr.nr_seq_bandeira%type, vl_transacao_p movto_cartao_cr.vl_transacao%type, nr_seq_forma_pagto_p movto_cartao_cr.nr_seq_forma_pagto%type, /*Dados do cartao - Campos mutuamente exclusivos*/

 cd_cgc_p movto_cartao_cr.cd_cgc%type, cd_pessoa_fisica_p movto_cartao_cr.cd_pessoa_fisica%type, /*Dados do cartao - Campos opcionais*/

 ds_comprovante_p movto_cartao_cr.ds_comprovante%type, ds_observacao_p movto_cartao_cr.ds_observacao%type, dt_importacao_p movto_cartao_cr.dt_importacao%type, nr_cartao_p movto_cartao_cr.nr_cartao%type, qt_parcela_p movto_cartao_cr.qt_parcela%type, vl_desconto_operadora_p movto_cartao_cr.vl_desconto_operadora%type, /*Esses campos aqui em baixo do cartao sao da integracao com TEF, acredito que nao sejam utilizados..*/

 ds_arq_recibo_tef_p movto_cartao_cr.ds_arq_recibo_tef%type, dt_autenticacao_p movto_cartao_cr.dt_autenticacao%type, dt_confirmacao_tef_p movto_cartao_cr.dt_confirmacao_tef%type, dt_integracao_tef_p movto_cartao_cr.dt_integracao_tef%type, nr_autorizacao_cancel_p movto_cartao_cr.nr_autorizacao_cancel%type, nr_nsu_tef_p movto_cartao_cr.nr_nsu_tef%type, ie_commit_p text default 'S', cd_perfil_p bigint default null) AS $body$
DECLARE

											
/*
Quando essa rotina for chamada pela PCK do do OPS, deve passar informacao no campo nr_seq_pls_ret_pagto_p, que e o NR_SEQUENCIA da tabela PLS_RET_PAGTO_CARTAO_CR.

Quando essa rotina for chamada pelo portal do que o cliente vai desenvolver, esse campo sera nulo. Por isso que a consistencia de valor somente ocorrera quando ele for nulo, ou seja pelo portal

Quando for pela integracao, entende-se que o valor solicitado para o cartao ja seja o valor do titulo, podendo conter juros e multas.

*/
											
											
ds_lista_titulos_w				varchar(4000);	
nr_titulo_w						titulo_receber.nr_titulo%type;	
vl_juros_w						double precision;
vl_multa_w						double precision;
vl_saldo_titulo_w				titulo_receber.vl_saldo_titulo%type;
nr_sequencia_movto_w			movto_cartao_cr.nr_sequencia%type;	
nr_seq_tit_rec_liq_w			titulo_receber_liq.nr_sequencia%type;
vl_saldo_cartao_w				movto_cartao_cr.vl_transacao%type;
cd_moeda_w						parametro_contas_receber.cd_moeda_padrao%type;
ds_observacao_w					titulo_receber_liq.ds_observacao%type;
nr_sequencia_movto_cartao_w		movto_cartao_cr.nr_sequencia%type;
cd_tipo_recebimento_w			tipo_recebimento.cd_tipo_recebimento%type;
nr_seq_trans_fin_w				tipo_recebimento.nr_seq_trans_fin%type;
vl_total_w						double precision;
ie_base_juros_multa_w			varchar(1);
cd_perfil_w						bigint;
dt_pagamento_previsto_w			titulo_receber.dt_pagamento_previsto%type;	
qt_tit_w						bigint;
									
C01 CURSOR FOR
	SELECT	a.nr_titulo,
			a.vl_saldo_titulo,
			a.vl_saldo_juros vl_juros,
			a.vl_saldo_multa vl_multa,
			a.dt_pagamento_previsto
	from	titulo_receber a
	where	1 = 1
	and		' ' || ds_lista_titulos_w || ' ' like '% ' || a.nr_titulo || ' %'
	and		coalesce(a.dt_liquidacao::text, '') = ''  --Somente titulos que nao estejam liquidados
	and		a.vl_saldo_titulo > 0; --O titulo tem que ter saldo. Pode existir titulo com saldo 0 e em aberto, qdo usa a opcao voltar condicao pendente.
	
											

BEGIN

ds_lista_titulos_w	:= substr(' ' || replace(ds_lista_titulos_p, ',', ' ') || ' ',1,4000);

/*Verificar se algum dos titulos passados como parametro n esta liquidado e tem saldo pra entao criar o movto de cartao*/

select 	count(*)
into STRICT	qt_tit_w
from	titulo_receber a
where	' ' || ds_lista_titulos_w || ' ' like '% ' || a.nr_titulo || ' %'
and		coalesce(a.dt_liquidacao::text, '') = '' --Somente titulos que nao estejam liquidados
and		a.vl_saldo_titulo > 0; --O titulo tem que ter saldo. Pode existir titulo com saldo 0 e em aberto, qdo usa a opcao voltar condicao pendente.

/*Somente se tiver titulo aberto e com saldo pode criar o movimento de cartao e efetuar os demais processos.*/

if (qt_tit_w > 0) then

	/*Como o cliente pode executar direto no banco, precisa informar o perfil*/

	cd_perfil_w	:= coalesce(cd_perfil_p, obter_perfil_ativo);

	select	nextval('movto_cartao_cr_seq')
	into STRICT	nr_sequencia_movto_cartao_w
	;

	select	max(a.cd_moeda_padrao)
	into STRICT	cd_moeda_w
	from	parametro_contas_receber a
	where	a.cd_estabelecimento = cd_estabelecimento_p;

	/*Criar o movimento de cartao de acordo com os dados recebidos na procedure*/

	insert into movto_cartao_cr( nr_sequencia,
								  cd_estabelecimento,
								  dt_atualizacao,
								  dt_atualizacao_nrec,
								  dt_transacao,
								  ie_lib_caixa,	
								  ie_situacao,
								  ie_tipo_cartao,
								  nm_usuario,
								  nm_usuario_nrec,
								  nr_autorizacao,
								  nr_seq_bandeira,
								  vl_transacao,
								  cd_cgc,
								  cd_pessoa_fisica,
								  qt_parcela,
								  ds_comprovante,
								  nr_cartao,
								  nr_seq_forma_pagto,
								  dt_importacao,
								  dt_liberacao,
								  ds_observacao,
								  vl_desconto_operadora,
								  ds_arq_recibo_tef, --Os campos daqui pra baixo sao campos utilizados na Integracao com TEF (Via tesouraria). Acredito que nao sejam usados aqui..
								  dt_autenticacao,
								  dt_confirmacao_tef,
								  dt_integracao_tef,
								  nr_autorizacao_cancel,
								  nr_nsu_tef,
								  nr_seq_pls_ret_pagto )
						values ( nr_sequencia_movto_cartao_w,
								  cd_estabelecimento_p,
								  clock_timestamp(),
								  clock_timestamp(),
								  dt_transacao_p,
								  'S',
								  'A',
								  ie_tipo_cartao_p,
								  nm_usuario_p,
								  nm_usuario_p,
								  nr_autorizacao_p,
								  nr_seq_bandeira_p,
								  vl_transacao_p,
								  cd_cgc_p,
								  cd_pessoa_fisica_p,
								  coalesce(qt_parcela_p,1),
								  ds_comprovante_p,
								  nr_cartao_p,
								  nr_seq_forma_pagto_p,
								  dt_importacao_p,
								  clock_timestamp(),
								  ds_observacao_p,
								  coalesce(vl_desconto_operadora_p,0),
								  ds_arq_recibo_tef_p, --Os campos daqui pra baixo sao campos utilizados na Integracao com TEF (Via tesouraria). Acredito que nao sejam usados aqui..
								  dt_autenticacao_p,
								  dt_confirmacao_tef_p,
								  dt_integracao_tef_p,
								  nr_autorizacao_cancel_p,
								  nr_nsu_tef_p,
								  nr_seq_pls_ret_pagto_p);
								
	CALL gerar_cartao_cr_parcela( nr_sequencia_movto_cartao_w,
							  nm_usuario_p,
							  null,
							  'N');	--Commit ira ocorrer no final dessa proc apenas...		
	gerar_classif_cartao_cr(nr_sequencia_movto_cartao_w,
							 nm_usuario_p,
							 'N'); 	--Commit ira ocorrer no final dessa proc apenas...							  
	

	cd_tipo_recebimento_w := cd_tipo_recebimento_p;
	/*Caso nao for enviado o tipo de recebimento, buscar o ultimo tipo de recebimento cadastrado no Tasy cuja consistencia seja cartao*/

	if (coalesce(cd_tipo_recebimento_w::text, '') = '') then

		select	max(a.cd_tipo_recebimento)
		into STRICT	cd_tipo_recebimento_w
		from	tipo_recebimento a
		where	coalesce(a.ie_situacao,'A') = 'A'
		and (coalesce(a.cd_estabelecimento::text, '') = '' or
				 a.cd_estabelecimento = cd_estabelecimento_p)
		and		a.ie_tipo_consistencia	= CASE WHEN upper(ie_tipo_cartao_p)='C' THEN 2 WHEN upper(ie_tipo_cartao_p)='D' THEN 16  ELSE 2 END;
		
	end if;

	select	max(a.nr_seq_trans_fin)
	into STRICT	nr_seq_trans_fin_w
	from	tipo_recebimento a
	where	a.cd_tipo_recebimento = cd_tipo_recebimento_w;

	vl_saldo_cartao_w := coalesce(vl_transacao_p,0);

	ie_base_juros_multa_w := Obter_Param_Usuario(801, 184, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p, ie_base_juros_multa_w);

	/*Pelo processo do Tasy, vira um titulo, porem esse mesmo objeto sera usado no portal que o cliente ira desenvolver, onde poder vir N titulos, por isso se faaz necessario um cursor.*/
							
	open C01;
	loop
	fetch C01 into	
		nr_titulo_w,
		vl_saldo_titulo_w,
		vl_juros_w,
		vl_multa_w,
		dt_pagamento_previsto_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		select	coalesce(max(a.nr_sequencia),0) + 1
		into STRICT	nr_seq_tit_rec_liq_w
		from	titulo_receber_liq a
		where	a.nr_titulo = nr_titulo_w;
		
		/*OS 1754739 - Considerar os juros e multa atuais do titulo.*/

		if (coalesce(vl_juros_w,0) = 0) then
			if (ie_base_juros_multa_w in ('S','M')) and (trunc(dt_pagamento_previsto_w) > trunc(clock_timestamp())) then
				vl_juros_w := obter_juros_multa_titulo(nr_titulo_w, trunc(dt_pagamento_previsto_w), 'R', 'J');
			else
				vl_juros_w := obter_juros_multa_titulo(nr_titulo_w, trunc(clock_timestamp()), 'R', 'J');	
			end if;
		end if;
		
		if (coalesce(vl_multa_w,0) = 0) then
			if (ie_base_juros_multa_w in ('S','M')) and (trunc(dt_pagamento_previsto_w) > trunc(clock_timestamp())) then
				vl_multa_w := obter_juros_multa_titulo(nr_titulo_w, trunc(dt_pagamento_previsto_w), 'R', 'M');
			else
				vl_multa_w := obter_juros_multa_titulo(nr_titulo_w, trunc(clock_timestamp()), 'R', 'M');
			end if;
		end if;
		/*Fim OS 1754739*/


		
		/*Quando e um movimento de cartao para varios titulos, precisamos controlar o saldo do cartao de acordo com as baixas lancadas, para ver se realmente e possivel baixar todos os titulos com o valor passado no cartao*/
	
		vl_saldo_cartao_w := coalesce(vl_saldo_cartao_w,0) - (coalesce(vl_saldo_titulo_w,0) - coalesce(vl_juros_w,0) - coalesce(vl_multa_w,0));
		if (vl_saldo_cartao_w < 0) and (coalesce(nr_seq_pls_ret_pagto_p::text, '') = '') and (qt_tit_w > 1) then --OS 2027438 se for um titulo so nao deve consistir qdo for pelo portal. Se for um titulo so pelo portal o pagamento pode se em 2 ou mais cartoes, entao o valor do cartao sera inferior ao saldo do titulo.
			vl_total_w := coalesce(vl_saldo_titulo_w,0) + coalesce(vl_juros_w,0) + coalesce(vl_multa_w,0);
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1031143,
													'nr_titulo_w='||nr_titulo_w||';'||
													'vl_saldo_titulo_w='||vl_saldo_titulo_w||';'||
													'vl_juros_w='||coalesce(vl_juros_w,0)||';'||
													'vl_multa_w='||coalesce(vl_multa_w,0)||';'||
													'vl_total_w='||vl_total_w||';'||
													'vl_cartao_w='||coalesce(vl_saldo_cartao_w,0));
			--'O valor do recebimento supera o valor do movimento de cartao. Vl recebimento: '||vl_saldo_titulo_w||' Vl juros: '||vl_juros_w||' Vl multa: '||vl_multa_w||' - Total recebido: '|| vl_saldo_titulo_w + nvl(vl_juros_w,0) + nvl(vl_multa_w,0)||' Vl cartao: '||vl_saldo_cartao_w
		end if;
		
		
		if (coalesce(nr_seq_pls_ret_pagto_p::text, '') = '') and (qt_tit_w = 1) then
			if (vl_saldo_titulo_w < vl_transacao_p) then
				vl_saldo_titulo_w := coalesce(vl_transacao_p,0) - coalesce(vl_multa_w,0) - coalesce(vl_juros_w,0);
			else
				vl_saldo_titulo_w := coalesce(vl_transacao_p,0);
			end if;
		end if;
				
		insert into titulo_receber_liq( nr_titulo,
										nr_sequencia,
										dt_recebimento,
										dt_real_recebimento,
										cd_tipo_recebimento,
										vl_recebido,
										vl_descontos,
										vl_juros,
										vl_multa,
										vl_nota_credito,
										vl_cambial_ativo,
										vl_cambial_passivo,
										cd_moeda,
										nr_lote_contabil,
										vl_rec_maior,
										vl_glosa,
										vl_perdas,
										ie_acao,
										ie_lib_caixa,
										vl_despesa_bancaria,
										vl_adequado,
										vl_recurso,
										vl_outros_acrescimos,
										ds_observacao,
										dt_atualizacao,
										nm_usuario,
										nr_seq_trans_fin)
							  values ( nr_titulo_w,
										nr_seq_tit_rec_liq_w,
										dt_transacao_p,
										dt_transacao_p,
										cd_tipo_recebimento_w,
										vl_saldo_titulo_w,
										0, --vl_descontos
										vl_juros_w,
										vl_multa_w,
										0, --vl_nota_credito
										0, --vl_cambial_ativo
										0, --vl_cambial_passivo
										cd_moeda_w,
										0,
										0,
										0,
										0,
										'I',
										'S',
										0,
										0,
										0,
										0,
										ds_observacao_w,
										clock_timestamp(),
										nm_usuario_p,
										nr_seq_trans_fin_w );
										
		/*Efetuar o vinculo do cartao com a baixa*/
								
		insert into tit_rec_liq_cartao_cr( nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											dt_atualizacao_nrec,
											nm_usuario_nrec,
											nr_titulo,
											nr_seq_baixa,
											nr_seq_movto )
								values ( nextval('tit_rec_liq_cartao_cr_seq'),
											clock_timestamp(),
											nm_usuario_p,
											clock_timestamp(),
											nm_usuario_p,
											nr_titulo_w,
											nr_seq_tit_rec_liq_w,
											nr_sequencia_movto_cartao_w );
											
		CALL atualizar_saldo_tit_rec(nr_titulo_w, nm_usuario_p);								
		
		end;
	end loop;
	close C01;

	if (coalesce(ie_commit_p,'S') = 'S') then
		commit;
	end if;
	
end if;	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixa_titulo_cartao_integracao ( ds_lista_titulos_p text, nm_usuario_p text, cd_tipo_recebimento_p tipo_recebimento.cd_tipo_recebimento%type, nr_seq_pls_ret_pagto_p movto_cartao_cr.nr_seq_pls_ret_pagto%type,  cd_estabelecimento_p movto_cartao_cr.cd_estabelecimento%type, dt_transacao_p movto_cartao_cr.dt_transacao%type, ie_tipo_cartao_p movto_cartao_cr.ie_tipo_cartao%type, nr_autorizacao_p movto_cartao_cr.nr_autorizacao%type, nr_seq_bandeira_p movto_cartao_cr.nr_seq_bandeira%type, vl_transacao_p movto_cartao_cr.vl_transacao%type, nr_seq_forma_pagto_p movto_cartao_cr.nr_seq_forma_pagto%type,  cd_cgc_p movto_cartao_cr.cd_cgc%type, cd_pessoa_fisica_p movto_cartao_cr.cd_pessoa_fisica%type,  ds_comprovante_p movto_cartao_cr.ds_comprovante%type, ds_observacao_p movto_cartao_cr.ds_observacao%type, dt_importacao_p movto_cartao_cr.dt_importacao%type, nr_cartao_p movto_cartao_cr.nr_cartao%type, qt_parcela_p movto_cartao_cr.qt_parcela%type, vl_desconto_operadora_p movto_cartao_cr.vl_desconto_operadora%type,  ds_arq_recibo_tef_p movto_cartao_cr.ds_arq_recibo_tef%type, dt_autenticacao_p movto_cartao_cr.dt_autenticacao%type, dt_confirmacao_tef_p movto_cartao_cr.dt_confirmacao_tef%type, dt_integracao_tef_p movto_cartao_cr.dt_integracao_tef%type, nr_autorizacao_cancel_p movto_cartao_cr.nr_autorizacao_cancel%type, nr_nsu_tef_p movto_cartao_cr.nr_nsu_tef%type, ie_commit_p text default 'S', cd_perfil_p bigint default null) FROM PUBLIC;

