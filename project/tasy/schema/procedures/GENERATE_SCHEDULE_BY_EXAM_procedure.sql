-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE generate_schedule_by_exam ( nr_atendimento_p bigint, cd_pessoa_fisica_p text, cd_agenda_p bigint, hr_agenda_p timestamp, nr_seq_ageint_p bigint, nr_seq_proc_cpoe_p bigint, nm_usuario_p text, result_out_p INOUT text) AS $body$
DECLARE


ie_principal_w			varchar(1);
ie_reservado_w			varchar(1);
qt_agenda_w				bigint;
qt_regra_proc_agenda_w	bigint;
				
dt_agenda_w				agenda_paciente.dt_agenda%type;
ds_horarios_ww			agenda_paciente.hr_inicio%type;
nr_seq_agenda_w			agenda_paciente.nr_sequencia%type;

ds_horarios_w					cpoe_procedimento.ds_horarios%type;
nr_seq_proc_interno_w			cpoe_procedimento.nr_seq_proc_interno%type;
nr_seq_lista_espera_w			cpoe_procedimento.nr_seq_lista_espera%type;
ds_justificativa_w				cpoe_procedimento.ds_justificativa%type;
cd_medico_w						cpoe_procedimento.cd_medico%type;
dt_inicio_cpoe_w				cpoe_procedimento.dt_inicio%type;
dt_fim_w						cpoe_procedimento.dt_fim%type;

nr_seq_ageint_w			agenda_integrada.nr_sequencia%type;
nr_seq_status_w			agenda_integrada.nr_seq_status%type;

nr_seq_ageint_marca_usuario_w	bigint;
nr_minuto_duracao_w				bigint;
nr_seq_ageint_item_w			bigint;

dt_entrega_w              		agenda_integrada_item.dt_entrega_prevista%type;
dt_resultado_w              	agenda_integrada_item.dt_resultado%type;
nr_seq_proc_interno_ww			agenda_integrada_item.nr_seq_proc_interno%type;
cd_procedimento_int_w			agenda_integrada_item.cd_procedimento%type;
ie_origem_proced_item_w			agenda_integrada_item.ie_origem_proced%type;
cd_medico_ageint_item_w			agenda_integrada_item.cd_medico%type;

cd_setor_exclusivo_w			agenda.cd_setor_exclusivo%type;
nr_seq_classif_int_w			agenda.nr_seq_classif_int%type;
qt_min_exame_w					tempo_procedimento.qt_minuto%type;

nr_seq_lib_usuario_w			ageint_lib_usuario.nr_sequencia%type;

hr_prim_horario_w	cpoe_procedimento.hr_prim_horario%type;
	
qt_count_agenda_w           smallint:= 0;
nr_minuto_int_w             agenda.nr_minuto_intervalo%type;
ie_overlap_param_w			varchar(1):= 'N';										

BEGIN

ie_overlap_param_w := Obter_Param_Usuario(2314, 52, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_overlap_param_w);

select nr_minuto_intervalo
into STRICT nr_minuto_int_w
from agenda
where cd_agenda = cd_agenda_p
and ie_situacao='A';

select count(*)
into STRICT  qt_count_agenda_w
from
(SELECT nr_sequencia 
from agenda_paciente
where cd_pessoa_fisica= cd_pessoa_fisica_p
and ((hr_agenda_p  between(hr_inicio) and hr_inicio+(NR_MINUTO_DURACAO/24/60) - (1/24/60/60))
    or (hr_agenda_p + (nr_minuto_int_w/24/60) between (hr_inicio +(1/24/60/60)) and hr_inicio+(NR_MINUTO_DURACAO/24/60))
	or ((hr_agenda_p  < hr_inicio)
                    AND (hr_agenda_p + (nr_minuto_int_w/24/60) > hr_inicio+(NR_MINUTO_DURACAO/24/60))))
and ie_status_agenda NOT IN ('L','F','I','C','B')

union

select nr_sequencia 
from agenda_consulta
where cd_pessoa_fisica= cd_pessoa_fisica_p  
and ((hr_agenda_p  between(dt_agenda) and dt_agenda+(NR_MINUTO_DURACAO/24/60) - (1/24/60/60))
    or (hr_agenda_p + (nr_minuto_int_w/24/60) between (dt_agenda +(1/24/60/60)) and dt_agenda+(NR_MINUTO_DURACAO/24/60))
	or ((hr_agenda_p  < dt_agenda)
                            AND (hr_agenda_p + (nr_minuto_int_w/24/60) > dt_agenda+(NR_MINUTO_DURACAO/24/60))))
and ie_status_agenda NOT IN ('L','F','I','C','B')
) alias33;

if ( qt_count_agenda_w > 0 and ie_overlap_param_w ='I') then
	result_out_p:= result_out_p||' '|| hr_agenda_p;
    goto finishPro;
end if;

if (qt_count_agenda_w > 0 and ie_overlap_param_w = 'A') then
	result_out_p:= result_out_p||' '|| hr_agenda_p;
end if;




select	max(a.nr_seq_proc_interno),
	max(a.nr_seq_lista_espera),
	max(a.ds_justificativa),
	max(a.dt_inicio),
	max(a.dt_fim),
	max(a.cd_medico)
into STRICT	nr_seq_proc_interno_w,
	nr_seq_lista_espera_w,
	ds_justificativa_w,
	dt_inicio_cpoe_w,
	dt_fim_w,
	cd_medico_w
from	cpoe_procedimento	a
where	a.nr_sequencia	= nr_seq_proc_cpoe_p;

select	coalesce(max(nr_sequencia),0),
	max(dt_agenda),
	pkg_date_formaters.to_varchar(max(hr_inicio), 'shortTime', obter_estabelecimento_ativo, obter_usuario_ativo),
	max(hr_inicio),
	max(nr_minuto_duracao)
into STRICT	nr_seq_agenda_w,
	dt_agenda_w,
	ds_horarios_w,
	ds_horarios_ww,
	nr_minuto_duracao_w
from    agenda_paciente
where   cd_agenda       = cd_agenda_p
and     hr_inicio       = hr_agenda_p;

select	count(*)
into STRICT	qt_regra_proc_agenda_w
from	tempo_procedimento
where	nr_seq_proc_interno = nr_seq_proc_interno_w
and	cd_agenda = cd_agenda_p;

if (coalesce(qt_regra_proc_agenda_w, 0) > 0) then
	select	max(tp.qt_minuto)
	into STRICT	qt_min_exame_w
	from	tempo_procedimento tp
	where	tp.nr_seq_proc_interno	= nr_seq_proc_interno_w
	and		tp.cd_agenda	= cd_agenda_p;
else
	select	max(tp.qt_minuto)
	into STRICT	qt_min_exame_w	
	from	tempo_procedimento tp
	where	tp.nr_sequencia = (	SELECT	max(nr_sequencia)
								from	tempo_procedimento x
								where	x.nr_seq_proc_interno	= nr_seq_proc_interno_w
								and	x.cd_estabelecimento	= obter_estabelecimento_ativo
								and	coalesce(x.cd_agenda::text, '') = '');
end if;

select	coalesce(count(*),0)
into STRICT	qt_agenda_w
from	agenda_paciente
where	nr_sequencia			= nr_seq_agenda_w
and	(coalesce(ie_status_agenda,'L')	= 'L'
or	((ie_status_agenda = 'B')
and (coalesce(dt_bloqueio::text, '') = '')));
	
if (qt_agenda_w > 0) then
	update	agenda_paciente
	set	ie_status_agenda	= 'N',
		cd_pessoa_fisica	= cd_pessoa_fisica_p,
		nr_seq_proc_interno	= nr_seq_proc_interno_w,
		nm_usuario			= nm_usuario_p,
		/*nm_usuario_acesso	= nm_usuario_p,  [SO-1469426]*/

		dt_atualizacao		= clock_timestamp(),
		ds_observacao 		= ds_justificativa_w,
		nr_atendimento 		= nr_atendimento_p,
		nr_minuto_duracao	= coalesce(qt_min_exame_w,nr_minuto_duracao_w)
	where	nr_sequencia		= nr_seq_agenda_w;

	if (dt_fim_w IS NOT NULL AND dt_fim_w::text <> '') then
		dt_fim_w := dt_fim_w + (OBTER_MIN_ENTRE_DATAS(dt_inicio_cpoe_w,ds_horarios_ww,1)/24/60);
	end if;

	if (length(obter_prim_dshorarios(ds_horarios_w)) = 5) then
		hr_prim_horario_w := obter_prim_dshorarios(ds_horarios_w);
	elsif (length(to_char(ds_horarios_ww, 'hh24:mi')) = 5) then
		hr_prim_horario_w := to_char(ds_horarios_ww, 'hh24:mi');
	end if;

	update	cpoe_procedimento
		set	dt_inicio	= ds_horarios_ww,
		hr_prim_horario	= hr_prim_horario_w,
		ds_horarios	= ds_horarios_w,
		dt_fim = dt_fim_w,
		nr_seq_lista_espera  = NULL,
		nr_seq_agenda	= nr_seq_agenda_w
	where	nr_sequencia	= nr_seq_proc_cpoe_p;
	
	if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'ja_JP') then
		/* Updating the associated procedure for japan */

		update	cpoe_procedimento
		set		dt_inicio			= ds_horarios_ww,
				hr_prim_horario		= hr_prim_horario_w,
				ds_horarios			= ds_horarios_w,
				dt_fim 				= dt_fim_w,
				nr_seq_lista_espera  = NULL,
				nr_seq_agenda		= nr_seq_agenda_w
		where	NR_SEQ_PROC_PRINC 	= nr_seq_proc_cpoe_p;
	end if;

	if (nr_seq_lista_espera_w IS NOT NULL AND nr_seq_lista_espera_w::text <> '') then
		delete from agenda_lista_espera
		where nr_sequencia = nr_seq_lista_espera_w;
	end if;

	select	min(nr_sequencia)
	into STRICT	nr_seq_status_w
	from 	agenda_integrada_status 
	where 	ie_situacao	= 'A' 
	and 	ie_status_tasy	= 'RS';

	update	agenda_integrada
	set	dt_inicio_agendamento	= ds_horarios_ww,
		nr_seq_status		= coalesce(nr_seq_status_w, nr_seq_status)
	where	nr_sequencia		= nr_seq_ageint_p;
	
	update agenda_integrada_item
	set	nr_seq_agenda_exame	= nr_seq_agenda_w
	where nr_seq_agenda_int		= nr_seq_ageint_p;
	
	select	nextval('ageint_marcacao_usuario_seq')
	into STRICT 	nr_seq_ageint_marca_usuario_w
	;

	select 	nr_sequencia,
		nr_seq_proc_interno,
		cd_procedimento,
		ie_origem_proced
	into STRICT	nr_seq_ageint_item_w,
		nr_seq_proc_interno_ww,
		cd_procedimento_int_w,
		ie_origem_proced_item_w
	from 	agenda_integrada_item
	where 	nr_seq_agenda_int		= nr_seq_ageint_p;
	
	insert into ageint_marcacao_usuario(
			nr_sequencia,
			cd_agenda,
			hr_agenda,
			nm_usuario,
			nr_seq_ageint,
			nr_minuto_duracao,
			nr_seq_agenda,
			nr_seq_ageint_item,
			ie_horario_auxiliar,
			cd_pessoa_fisica,
			ie_gerado		)
	values (
			nr_seq_ageint_marca_usuario_w,
			cd_agenda_p,                   
			dt_agenda_w,                   
			nm_usuario_p,                  
			nr_seq_ageint_p,           
			coalesce(qt_min_exame_w,nr_minuto_duracao_w),           
			nr_seq_agenda_w,               
			nr_seq_ageint_item_w,          
			'N',                           
			cd_pessoa_fisica_p,            
			'S'	);
			
	select  max(a.nr_seq_classif_int),
		max(a.cd_setor_exclusivo)
	into STRICT	nr_seq_classif_int_w,
		cd_setor_exclusivo_w
	from	agenda a		
	where	a.cd_agenda	= cd_agenda_p;			
			
	if (nr_seq_proc_interno_ww IS NOT NULL AND nr_seq_proc_interno_ww::text <> '') 	then
		select 	 obter_dt_entrega_laudo(nr_seq_ageint_p, nr_seq_proc_interno_ww, cd_procedimento_int_w, ie_origem_proced_item_w, nm_usuario_p, hr_agenda_p, cd_setor_exclusivo_w, 'DR', nr_seq_agenda_w),
			obter_dt_entrega_laudo(nr_seq_ageint_p, nr_seq_proc_interno_ww, cd_procedimento_int_w, ie_origem_proced_item_w, nm_usuario_p, hr_agenda_p, cd_setor_exclusivo_w, 'DE', nr_seq_agenda_w)
		into STRICT	dt_resultado_w,
			dt_entrega_w
		;	
	end if;			

	update	agenda_integrada_item
	set	nr_seq_agenda_exame	= nr_seq_agenda_w,
		dt_resultado		= dt_resultado_w,
		dt_entrega_prevista		= dt_entrega_w,
		nr_classificacao_agend	= CASE WHEN nr_classificacao_agend = NULL THEN  nr_seq_classif_int_w  ELSE nr_classificacao_agend END ,
		nr_minuto_duracao		= coalesce(qt_min_exame_w,nr_minuto_duracao_w)
	where	nr_sequencia		= nr_seq_ageint_item_w;
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_lib_usuario_w
	from	ageint_lib_usuario
	where	nr_seq_ageint_item = nr_seq_ageint_item_w
	and		cd_agenda = cd_agenda_p;
	
	SELECT * FROM atualiza_dados_marcacao(cd_agenda_p, hr_agenda_p, nr_seq_ageint_p, 'I', coalesce(qt_min_exame_w,nr_minuto_duracao_w), nm_usuario_p, nr_seq_ageint_item_w, nr_seq_lib_usuario_w, 'N', coalesce(cd_medico_w,obter_dados_atendimento(nr_atendimento_p,'MR')), ie_reservado_w, null, ie_principal_w) INTO STRICT ie_reservado_w, ie_principal_w;

end if;
	
commit;	
<<finishPro>>
null;	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE generate_schedule_by_exam ( nr_atendimento_p bigint, cd_pessoa_fisica_p text, cd_agenda_p bigint, hr_agenda_p timestamp, nr_seq_ageint_p bigint, nr_seq_proc_cpoe_p bigint, nm_usuario_p text, result_out_p INOUT text) FROM PUBLIC;

