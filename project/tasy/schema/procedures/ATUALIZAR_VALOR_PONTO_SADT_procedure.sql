-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_valor_ponto_sadt ( NR_SEQ_PROTOCOLO_P bigint) AS $body$
DECLARE

dt_atualizacao_w			timestamp			:= clock_timestamp();
qt_ato_sadt_w				bigint		:= 0;
vl_sadt_w				double precision	:= 0;
vl_ponto_sadt_w			double precision	:= 0;
vl_ponto_seq_w			double precision	:= 0;
vl_tot_ponto_w			double precision	:= 0;
dt_referencia_w			timestamp;
nr_sequencia_w			bigint	:= 0;
qt_ponto_sadt_w			bigint	:= 0;
qt_tot_proc_w				bigint	:= 0;
qt_sequencia_w			bigint	:= 0;
nr_interno_conta_w			bigint	:= 0;
ie_tipo_servico_sus_w		smallint		:= 0;

C01 CURSOR FOR 
	SELECT 	b.nr_sequencia, 
			a.qt_ato_medico, 
			b.ie_tipo_servico_sus 
	from		procedimento_paciente b, 
			sus_valor_proc_paciente a, 
			conta_paciente c 
	where		nr_seq_protocolo 		= nr_seq_protocolo_p 
	and		c.nr_interno_conta		= b.nr_interno_conta 
	and		b.nr_sequencia		= a.nr_sequencia 
	and		a.qt_ato_medico		> 0 
	and		b.cd_procedimento between 00000001 and 23999999 
	and		b.ie_tipo_ato_sus	 not in (57,58) 
	and		coalesce(c.ie_cancelamento::text, '') = '' 
	and		coalesce(b.cd_motivo_exc_conta::text, '') = '';

C02 CURSOR FOR 
	SELECT 	a.nr_interno_conta 
	from		conta_paciente a 
	where		a.nr_seq_protocolo 		= nr_seq_protocolo_p 
	and		coalesce(a.ie_cancelamento::text, '') = '';
			

BEGIN 
 
update	procedimento_paciente 
set	vl_custo_operacional 		= 0, 
	vl_procedimento			= 0 
where	nr_interno_conta	in ( 
	SELECT	nr_interno_conta 
	from	conta_paciente 
	where	nr_seq_protocolo	= nr_seq_protocolo_p) 
and	ie_tipo_ato_sus	 not in (57,58);
 
begin 
select		coalesce(sum(a.vl_sadt),0)	 
into STRICT		vl_sadt_w 
from		sus_valor_proc_paciente a, 
		procedimento_paciente b, 
		conta_paciente c 
where		c.nr_seq_protocolo 		= nr_seq_protocolo_p 
and		c.nr_interno_conta		= b.nr_interno_conta 
and		b.nr_sequencia			= a.nr_sequencia 
and		coalesce(c.ie_cancelamento::text, '') = '' 
and		coalesce(b.cd_motivo_exc_conta::text, '') = '' 
and		b.ie_tipo_ato_sus not in (57,58);
exception 
		when others then 
		begin 
		vl_sadt_w	:= 0;
		end;
end;
 
begin 
select		coalesce(sum(a.qt_ato_medico),0), 
		count(*) 
into STRICT		qt_ato_sadt_w, 
		qt_tot_proc_w 
from		sus_valor_proc_paciente a, 
		procedimento_paciente b, 
		conta_paciente c 
where		c.nr_seq_protocolo 	= nr_seq_protocolo_p 
and		c.nr_interno_conta	= b.nr_interno_conta 
and		b.nr_sequencia		= a.nr_sequencia 
and		a.qt_ato_medico		> 0 
and		b.cd_procedimento between 00000001 and 23999999 
and		b.ie_tipo_ato_sus	 not in (57,58) 
and		coalesce(c.ie_cancelamento::text, '') = '' 
and		coalesce(b.cd_motivo_exc_conta::text, '') = '';
exception 
		when others then 
		begin 
		vl_sadt_w	:= 0;
		end;
end;
 
if	qt_ato_sadt_w = 0 then 
	vl_ponto_sadt_w 	:= 0;
else 
	vl_ponto_sadt_w 	:= (vl_sadt_w / qt_ato_sadt_w);
end if; 	
 
begin 
select 	coalesce(dt_mesano_referencia,clock_timestamp()) 
into STRICT		dt_referencia_w 
from		protocolo_convenio 
where		nr_seq_protocolo = nr_seq_protocolo_p;
exception 
		when others then 
		dt_referencia_w := clock_timestamp();
end;
 
 
vl_tot_ponto_w	:= 0;
qt_sequencia_w	:= 0;
OPEN C01;
LOOP 
FETCH C01 into 
		nr_sequencia_w, 
		qt_ponto_sadt_w, 
		ie_tipo_servico_sus_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	BEGIN 
	qt_sequencia_w		:= qt_sequencia_w + 1;
	if (qt_sequencia_w = qt_tot_proc_w) then 
		vl_ponto_seq_w	:= (vl_sadt_w - vl_tot_ponto_w);
	else 
		vl_ponto_seq_w	:= (vl_ponto_sadt_w * qt_ponto_sadt_w);
	end if;
	vl_tot_ponto_w		:= vl_tot_ponto_w	+ vl_ponto_seq_w;
	update		sus_valor_proc_paciente a 
	set		a.vl_ponto_sadt 	= vl_ponto_sadt_w, 
			a.vl_ato_sadt 	= vl_ponto_seq_w 
	where		a.nr_sequencia 	= nr_sequencia_w;
 
	update	procedimento_paciente a 
	set		a.vl_custo_operacional 	= vl_ponto_seq_w, 
			a.vl_materiais		= 0 
	where		a.nr_sequencia 		= nr_sequencia_w;
	end;
 
END LOOP;
close c01;
COMMIT;
 
 
OPEN C02;
LOOP 
FETCH C02 into 
	nr_interno_conta_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
	CALL Atualizar_Valor_Proc_SUS(nr_interno_conta_w);
	CALL Atualizar_Resumo_Conta(nr_interno_conta_w, 2);
END LOOP;
CLOSE C02;
COMMIT;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_valor_ponto_sadt ( NR_SEQ_PROTOCOLO_P bigint) FROM PUBLIC;

