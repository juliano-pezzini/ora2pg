-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copiar_exame_med_protocolo ( nr_atendimento_p bigint, cd_protocolo_p bigint, nr_sequencia_p bigint, nr_seq_proc_p bigint, nr_horas_validade_p bigint, nr_prescricao_p bigint, dt_primeiro_horario_p text, dt_prescricao_p timestamp, dt_procedimento_p timestamp, nm_usuario_p text, ie_lado_p text, ds_dano_clinico_p text, cd_cgc_externo_p text default null, ds_material_especial_p text default null, cd_medico_exec_p text  DEFAULT NULL) AS $body$
DECLARE

 
nr_prescricao_w    			bigint;
nr_seq_proc_w				bigint;
cd_intervalo_w          	varchar(7);
nr_sequencia_w				bigint;
nr_agrupamento_w			double precision;
cd_proced_w					bigint;
qt_proced_w					double precision;
ds_obs_w					varchar(2000);
ie_origem_w					bigint;
cd_setor_exclusivo_w		integer;
cd_material_exame_w			varchar(20);
nr_seq_exame_w				bigint;
cd_proced_aux_w				bigint;
ie_origem_aux_w				bigint;
cd_convenio_w				integer;
ds_erro_w					varchar(255);
ds_material_especial_w		varchar(45);	
nr_seq_proc_novo_w			integer;
nr_seq_proc_interno_w		bigint;
nr_intervalo_w				bigint;
nr_seq_prot_glic_w			bigint;
nr_intervalo_ww				bigint := 0;
ds_horarios_w				varchar(2000);
ds_dano_clinico_w			varchar(2000);
ds_horarios_ww				varchar(2000) :='';
ie_lado_w					varchar(1);
dt_prescricao_w				timestamp;
ie_urgencia_w				varchar(1);
ie_prescr_proc_sem_lib_w 	varchar(30);
cd_estabelecimento_w		smallint;
ie_tipo_atendimento_w		smallint;
ie_tipo_convenio_w			smallint;
cd_categoria_w				varchar(10);
cd_setor_w					integer;
ie_avisar_result_w			varchar(1);
cd_setor_atendimento_w		bigint;
ie_setor_classif_w			varchar(1);
ie_gravar_indic_w			varchar(2);
ds_indicacao_w				varchar(255);
ie_previsao_proced_w		varchar(15);
nr_seq_proc_interno_aux_w 	bigint;
dt_agenda_w					timestamp;
cd_pessoa_fis_agenda_w		varchar(10);
ie_atualizar_nr_seq_ag_w	varchar(1);
nr_seq_agenda_serv_w		agenda_consulta.nr_sequencia%type;
ie_vinc_seq_agend_w			varchar(1);
ds_diag_provavel_ap_w		varchar(255);
ds_exame_anterior_ap_w		varchar(255);
ds_localizacao_lesao_w		varchar(2000);
ds_tempo_doenca_w			varchar(255);
cd_cgc_laboratorio_w		varchar(14);
qt_frasco_env_w				integer;
cd_medico_exec_w			varchar(20);
nr_seq_proc_int_cirur_w		bigint;
qt_peca_ap_w				smallint;
nr_seq_amostra_princ_w		bigint;
ds_qualidade_peca_ap_w		varchar(2000);
ie_forma_exame_w			varchar(15);
cd_pessoa_coleta_w			varchar(10);
cd_plano_convenio_w			varchar(10);
ie_verifica_setores_adic_w	varchar(10);
qt_existe_setores_w			bigint;
qt_existe_setores_int_w		bigint;
cd_setor_prescricao_w		prescr_medica.cd_setor_atendimento%type;
ie_Gera_Setor_PrescrProc_w	varchar(1);
nr_seq_topografia_w			prescr_procedimento.nr_seq_topografia%type;
ie_acm_w					prescr_procedimento.ie_acm%type;

C02 CURSOR FOR
SELECT	a.nr_seq_proc,
		a.nr_seq_proc + nr_sequencia_w,
		a.cd_procedimento,
		a.qt_procedimento,        
		a.ds_observacao, 
		a.ie_origem_proced,
		a.cd_intervalo,
		a.cd_setor_atendimento,
		a.cd_material_exame,
		a.nr_seq_exame,
		a.ds_material_especial,
		a.nr_seq_proc_interno,
		CASE WHEN coalesce(ie_questiona_lado, 'N')='S' THEN  CASE WHEN coalesce(ie_lado_p::text, '') = '' THEN  a.ie_lado  ELSE ie_lado_p END   ELSE a.ie_lado END ,
		coalesce(a.ie_urgencia, 'N'),
		a.nr_seq_prot_glic,
		a.ds_dado_clinico,
		a.ie_horario,
		a.cd_medico_exec,
		substr(a.ds_diag_provavel_ap,1,255),
		substr(a.ds_exame_anterior_ap,1,255),
		substr(a.ds_localizacao_lesao,1,2000),
		substr(a.ds_tempo_doenca,1,255),
		substr(a.cd_cgc_laboratorio,1,14),
		a.qt_frasco_env,
		a.nr_seq_proc_int_cirur,
		a.qt_peca_ap,
		a.nr_seq_amostra_princ,
		a.ds_qualidade_peca_ap,
		a.ie_forma_exame,
		a.cd_pessoa_coleta,
		nr_seq_topografia,
		a.ie_acm
from	protocolo_medic_proc a
where	a.cd_protocolo	= cd_protocolo_p
and		a.nr_sequencia	= nr_sequencia_p
and		((a.nr_seq_proc	= nr_seq_proc_p) or (nr_seq_proc_p = 0));


BEGIN


nr_seq_agenda_serv_w	:= null;
select	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	usuario
where	nm_usuario = nm_usuario_p;

ie_prescr_proc_sem_lib_w := Obter_Param_Usuario(924, 530, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_prescr_proc_sem_lib_w);
ie_setor_classif_w := Obter_Param_Usuario(924, 835, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_setor_classif_w);
ie_gravar_indic_w := Obter_Param_Usuario(924, 987, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gravar_indic_w);
ie_vinc_seq_agend_w := Obter_Param_Usuario(924, 1020, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_vinc_seq_agend_w);
ie_Gera_Setor_PrescrProc_w := Obter_Param_Usuario(924, 493, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_Gera_Setor_PrescrProc_w);
	
ie_verifica_setores_adic_w := obter_param_usuario(916, 562, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_verifica_setores_adic_w);

nr_prescricao_w := nr_prescricao_p;

if (coalesce(dt_prescricao_p::text, '') = '') or (coalesce(cd_protocolo_p::text, '') = '') or (coalesce(nr_sequencia_p::text, '') = '') then
	--Os Campos Medico, Data, Paciente e Protocolo/Sequencia devem ser informados
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(178295);
end if;

-- Obter_Convenio do Atendimento
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
	begin
	select 	cd_convenio,
			cd_plano_convenio
	into STRICT 	cd_convenio_w,
			cd_plano_convenio_w
	from 	atend_categoria_convenio
	where 	nr_atendimento = nr_atendimento_p
	  and 	dt_inicio_vigencia = (	SELECT 	max(dt_inicio_vigencia)
									from 	atend_categoria_convenio
									where 	nr_atendimento = nr_atendimento_p);
	exception
		when others then
			cd_convenio_w := null;
	end;
end if;


-- Procedimentos
if (nr_prescricao_w > 0) then
	select 	coalesce(max(nr_sequencia),0),
	   	coalesce(max(nr_agrupamento),0)
	into STRICT	nr_sequencia_w,
		nr_agrupamento_w
	from prescr_procedimento
	where nr_prescricao = nr_prescricao_w;
end if;

select	obter_classif_setor(max(cd_setor_atendimento)),
		max(cd_setor_atendimento)
into STRICT	cd_setor_atendimento_w,
		cd_setor_prescricao_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_w;

if (ie_setor_classif_w = 'S') and (cd_setor_atendimento_w = 1) then
	ie_avisar_result_w := 'S';
end if;	

open C02;
loop
fetch C02 into
	nr_seq_proc_w,		
	nr_seq_proc_novo_w,
	cd_proced_w,
	qt_proced_w,
	ds_obs_w,
	ie_origem_w,
	cd_intervalo_w,
	cd_setor_exclusivo_w,
	cd_material_exame_w,
	nr_seq_exame_w,
	ds_material_especial_w,
	nr_seq_proc_interno_w,
	ie_lado_w,
	ie_urgencia_w,
	nr_seq_prot_glic_w,
	ds_dano_clinico_w,
	ie_previsao_proced_w,
	cd_medico_exec_w,
	ds_diag_provavel_ap_w,
	ds_exame_anterior_ap_w,
	ds_localizacao_lesao_w,
	ds_tempo_doenca_w,
	cd_cgc_laboratorio_w,
	qt_frasco_env_w,
	nr_seq_proc_int_cirur_w,
	qt_peca_ap_w,
	nr_seq_amostra_princ_w,
	ds_qualidade_peca_ap_w,
	ie_forma_exame_w,
	cd_pessoa_coleta_w,
	nr_seq_topografia_w,
	ie_acm_w;
EXIT WHEN NOT FOUND; /* apply on C02 */

	if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
		SELECT * FROM Obter_Proc_Tab_Interno(nr_seq_proc_interno_w, nr_prescricao_w, 0, 0, cd_proced_w, ie_origem_w, null, null) INTO STRICT cd_proced_w, ie_origem_w;
	end if;
	
	begin
	select	coalesce(cd_setor_exclusivo,cd_setor_exclusivo_w)
	into STRICT	cd_setor_exclusivo_w
	from	procedimento
	where	cd_procedimento		= cd_proced_w
	and	ie_origem_proced	= ie_origem_w;
	exception
	when others then
		cd_setor_exclusivo_w := cd_setor_exclusivo_w;
	end;
	
	if (coalesce(cd_setor_exclusivo_w::text, '') = '') and (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then

		select	obter_setor_atend_proc_lab(cd_estabelecimento_w,cd_proced_w,ie_origem_w, null,cd_setor_prescricao_w,null,nr_seq_exame_w)
		into STRICT	cd_setor_exclusivo_w
		;

	end if;
	
	if (coalesce(cd_setor_exclusivo_w::text, '') = '') and (ie_Gera_Setor_PrescrProc_w = 'S') and (obter_se_setor_exec(cd_setor_prescricao_w, cd_estabelecimento_w, cd_proced_w,ie_origem_w, nr_seq_proc_interno_w) = 'S') then
		cd_setor_exclusivo_w	:= cd_setor_prescricao_w;
	end if;
	
	if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
		/*begin
		select	distinct
			cd_procedimento,
			ie_origem_proced
		into	cd_proced_aux_w,
			ie_origem_aux_w
		from	exame_lab_convenio
		where	nr_seq_exame = nr_seq_exame_w
		  and	cd_convenio = cd_convenio_w;
		exception
			when others then
				cd_proced_aux_w	:= null;
				ie_origem_aux_w	:= null;
		end;*/
		
		SELECT * FROM obter_exame_lab_convenio(nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estabelecimento_w, ie_tipo_convenio_w, nr_seq_proc_interno_w, cd_material_exame_w, cd_plano_convenio_w, cd_setor_w, cd_proced_aux_w, ie_origem_aux_w, ds_erro_w, nr_seq_proc_interno_aux_w) INTO STRICT cd_setor_w, cd_proced_aux_w, ie_origem_aux_w, ds_erro_w, nr_seq_proc_interno_aux_w;

		if (nr_seq_proc_interno_aux_w > 0) then
			nr_seq_proc_interno_w := nr_seq_proc_interno_aux_w;
		end if;
		if (coalesce(cd_proced_aux_w,0) > 0) then
			cd_proced_w	:= cd_proced_aux_w;
			ie_origem_w	:= coalesce(ie_origem_aux_w,ie_origem_w);
		end if;
		
	end if;
	
	/* Verificar se procedimento cadastrado com especificacao para a data prevista */

	if (ie_previsao_proced_w IS NOT NULL AND ie_previsao_proced_w::text <> '') then
		if (ie_previsao_proced_w = 'DP') then		---- Data da prescricao (DP)
			dt_prescricao_w := dt_prescricao_p;
		elsif (ie_previsao_proced_w = '3h') then	---- 3 horas apos a prescricao (3h)
			dt_prescricao_w := dt_prescricao_p + 3/24;
		elsif (ie_previsao_proced_w = '6h') then	---- 6 horas apos a prescricao (6h)
			dt_prescricao_w := dt_prescricao_p + 6/24;
		elsif (ie_previsao_proced_w = '9h') then	---- 9 horas apos a prescricao (9h)
			dt_prescricao_w := dt_prescricao_p + 9/24;			
		end if;
	else
		select	Obter_data_prev_exec(dt_prescricao_p,coalesce(dt_procedimento_p,dt_prescricao_p),cd_setor_exclusivo_w, nr_prescricao_w, 'A')
		into STRICT	dt_prescricao_w
		;
	end if;
	
	if (nr_seq_prot_glic_w IS NOT NULL AND nr_seq_prot_glic_w::text <> '') then
		select	max(ds_indicacao)
		into STRICT	ds_indicacao_w
		from	pep_protocolo_glicemia
		where	nr_sequencia = nr_seq_prot_glic_w;
		
		if (ie_gravar_indic_w = 'S') and (ds_indicacao_w IS NOT NULL AND ds_indicacao_w::text <> '') then
			ds_obs_w := substr(ds_obs_w || ' ' || ds_indicacao_w,1,2000);
		end if;
	end if;
	
	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (ie_vinc_seq_agend_w = 'S')then
		select	max(a.cd_pessoa_fisica)
		into STRICT	cd_pessoa_fis_agenda_w
		from	atendimento_paciente a
		where	a.nr_atendimento	= nr_atendimento_p;
		
		nr_seq_agenda_serv_w
						 := Age_obt_regra_vinc_proc_rep(dt_prescricao_p, cd_pessoa_fis_agenda_w, cd_estabelecimento_w, nr_seq_proc_interno_w, nm_usuario_p, nr_seq_agenda_serv_w
						);			
	end if;
	
	if (ie_verifica_setores_adic_w = 'S')	then
		begin
		if (coalesce(nr_seq_proc_interno_w,0) > 0) then
			begin
			select	count(*)
			into STRICT	qt_existe_setores_int_w
			from	proc_interno_setor
			where	nr_seq_proc_interno	= nr_seq_proc_interno_w;
			end;

			if (qt_existe_setores_int_w > 1) then
				cd_setor_exclusivo_w	:=	null;
			end if;
		else
			begin
			select	coalesce(max(b.cd_setor_exclusivo),0)
			into STRICT	cd_setor_w
			from	procedimento b
			where	b.cd_procedimento	= cd_proced_w
			and	b.ie_origem_proced	= ie_origem_w;

			if (cd_setor_w = 0) then
				begin
				select	count(*)
				into STRICT	qt_existe_setores_w
				from	procedimento_setor_atend
				where	cd_procedimento 	= cd_proced_w
				and	ie_origem_proced 	= ie_origem_w
				and	cd_estabelecimento = cd_estabelecimento_w;
				if (qt_existe_setores_w > 1) then
					cd_setor_exclusivo_w	:=	null;
				elsif (qt_existe_setores_w = 1) then
					select	max(cd_setor_atendimento)
					into STRICT	cd_setor_exclusivo_w
					from	procedimento_setor_atend
					where	cd_procedimento 	= cd_proced_w
					and	ie_origem_proced 	= ie_origem_w
					and	cd_estabelecimento = cd_estabelecimento_w;
				else
					cd_setor_exclusivo_w	:=	null;
				end if;
				end;
			else
				cd_setor_exclusivo_w	:=	cd_setor_w;
			end if;
			end;
		end if;
		end;
	end if;

	if (cd_cgc_externo_p IS NOT NULL AND cd_cgc_externo_p::text <> '') then
		cd_setor_exclusivo_w	:= obter_setor_laboratorio_ext(cd_cgc_externo_p);
	end if;
	
	nr_agrupamento_w := nr_agrupamento_w + 1;
	insert into prescr_procedimento(nr_prescricao,
		nr_sequencia,
		nr_agrupamento, 
		cd_procedimento, 
		qt_procedimento, 
		dt_atualizacao,
		nm_usuario, 
		ds_observacao, 
		cd_motivo_baixa, 
		ie_origem_proced, 
		cd_intervalo,
		ie_urgencia, 
		ie_suspenso, 
		cd_setor_atendimento, 
		dt_prev_execucao,
		cd_material_exame, 
		nr_seq_exame, 
		ie_status_atend, 
		ie_amostra, 
		ie_origem_inf,
		ie_executar_leito,
		ie_se_necessario,
		ds_material_especial,
		nr_seq_interno,
		nr_seq_proc_interno,
		ie_avisar_result,
		cd_protocolo,
		nr_seq_protocolo,
		nr_seq_proc_protocolo,
		ie_lado,
		ds_dado_clinico,
		nr_seq_prot_glic,
		cd_cgc_laboratorio,
		nr_seq_agenda_cons,
		cd_medico_exec,
		ds_diag_provavel_ap,
		ds_exame_anterior_ap,
		ds_localizacao_lesao,
		ds_tempo_doenca,
		qt_frasco_env,
		nr_seq_proc_int_cirur,
		qt_peca_ap,
		nr_seq_amostra_princ,
		ds_qualidade_peca_ap,
		ie_forma_exame,
		cd_pessoa_coleta,
		nr_seq_topografia,
		ie_acm)
	values (nr_prescricao_w, 
		nr_sequencia_w + nr_seq_proc_w,
		nr_agrupamento_w, 
		cd_proced_w, 
		qt_proced_w, 
		dt_prescricao_p,
		nm_usuario_p, 
		ds_obs_w, 
		0, 
		ie_origem_w, 
		cd_intervalo_w, 
		ie_urgencia_w, 
		'N', 
		cd_setor_exclusivo_w,
		dt_prescricao_w, 
		cd_material_exame_w, 
		nr_seq_exame_w, 
		5, 
		'N', 
		'1',
		'N',
		'N',
		coalesce(ds_material_especial_p,ds_material_especial_w),
		nextval('prescr_procedimento_seq'),
		nr_seq_proc_interno_w,
		coalesce(ie_avisar_result_w,'N'),
		cd_protocolo_p,
		nr_sequencia_p,
		nr_seq_proc_w,
		ie_lado_w,
		coalesce(ds_dano_clinico_p,ds_dano_clinico_w),
		nr_seq_prot_glic_w,
		coalesce(cd_cgc_externo_p,cd_cgc_laboratorio_w),
		nr_seq_agenda_serv_w,
		coalesce(cd_medico_exec_p,cd_medico_exec_w),
		ds_diag_provavel_ap_w,
		ds_exame_anterior_ap_w,
		ds_localizacao_lesao_w,
		ds_tempo_doenca_w,
		qt_frasco_env_w,
		nr_seq_proc_int_cirur_w,
		qt_peca_ap_w,
		nr_seq_amostra_princ_w,
		ds_qualidade_peca_ap_w,
		ie_forma_exame_w,
		cd_pessoa_coleta_w,
		nr_seq_topografia_w,
		ie_acm_w);

	if (nr_seq_prot_glic_w IS NOT NULL AND nr_seq_prot_glic_w::text <> '') then
		CALL Gerar_Prescr_Proc_Glic(nr_prescricao_w, nr_sequencia_w + nr_seq_proc_w,nr_seq_prot_glic_w,nm_usuario_p);	
	end if;
		
	if (ie_prescr_proc_sem_lib_w = 'S') then
		CALL Gerar_prescr_proc_sem_dt_lib(nr_prescricao_w,nr_sequencia_w + nr_seq_proc_w,obter_perfil_ativo,'N',nm_usuario_p);
	end if;
		
	CALL Inserir_mat_prescr_prot(nr_prescricao_p, cd_protocolo_p, nr_sequencia_p, 0,
				5, 0, nr_seq_proc_w, 0, null,
				nr_seq_proc_novo_w, null, cd_intervalo_w, 1, nm_usuario_p, 'N',0,null,0,0, null,null,null,null,null,null,null,null,null,null,null,null,null,'S',null,null,null,null,null,null,null,null,null,null,null,null);
	
	nr_intervalo_w	:= nr_intervalo_ww;
	ds_horarios_w	:= ds_horarios_ww;
	

	SELECT * FROM Recalcular_Horario_Prescricao(cd_intervalo_w, dt_prescricao_w, NR_HORAS_VALIDADE_P, cd_proced_w, nr_intervalo_w, ds_horarios_w, 'N', cd_proced_w, nr_prescricao_w, nr_sequencia_w + nr_seq_proc_w) INTO STRICT nr_intervalo_w, ds_horarios_w;

	ds_erro_w := consistir_prescr_procedimento(nr_prescricao_w, nr_sequencia_w + nr_seq_proc_w, nm_usuario_p, 0, ds_erro_w);

end loop;
close C02;

COMMIT;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copiar_exame_med_protocolo ( nr_atendimento_p bigint, cd_protocolo_p bigint, nr_sequencia_p bigint, nr_seq_proc_p bigint, nr_horas_validade_p bigint, nr_prescricao_p bigint, dt_primeiro_horario_p text, dt_prescricao_p timestamp, dt_procedimento_p timestamp, nm_usuario_p text, ie_lado_p text, ds_dano_clinico_p text, cd_cgc_externo_p text default null, ds_material_especial_p text default null, cd_medico_exec_p text  DEFAULT NULL) FROM PUBLIC;

