-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sup_comunicar_nova_pf ( cd_cnpj_p text, nm_usuario_p text) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Gerar comunicação interna da de cadastro de pessoa jurídica. 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ X ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
------------------------------------------------------------------------------------------------------------------- 
Referências: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
cd_tipo_pessoa_w		bigint;
ds_comunic_w			varchar(2000);
ds_titulo_w			varchar(255);
nr_seq_classif_w		bigint;
cd_perfil_dest_w		bigint;
cd_setor_dest_w			bigint;
nm_usuario_regra_w		varchar(255);
qt_regras_w			bigint;
ds_perfil_w			varchar(255);
ds_setor_w			varchar(255);
nm_usuario_dest_w		varchar(4000);

c01 CURSOR FOR 
	SELECT	cd_perfil, 
		cd_setor_destino, 
		ds_usuarios_destino 
	from 	regra_aviso_cadastro_pj 
	where	coalesce(cd_tipo_pessoa, cd_tipo_pessoa_w)	= cd_tipo_pessoa_w 
	and	coalesce(cd_cnpj, cd_cnpj_p)			= cd_cnpj_p 
	and	coalesce(ie_novo_cadastro,'N')		= 'S' 
	order by 
		coalesce(cd_tipo_pessoa, 0), 
		coalesce(cd_cnpj,'');


BEGIN 
select	max(cd_tipo_pessoa) 
into STRICT	cd_tipo_pessoa_w 
from	pessoa_juridica 
where 	cd_cgc	= cd_cnpj_p;
 
select	max(obter_classif_comunic('F')) 
into STRICT	nr_seq_classif_w
;
 
select	count(*) 
into STRICT	qt_regras_w 
from 	regra_aviso_cadastro_pj 
where	coalesce(ie_novo_cadastro,'N')	= 'S';
 
ds_titulo_w	:= wheb_mensagem_pck.get_texto(351550);
ds_comunic_w	:= substr(	wheb_mensagem_pck.get_texto(351550) || chr(13) || chr(10) || 
				wheb_mensagem_pck.get_texto(351552, 'CD_CNPJ=' || cd_cnpj_p || ';NM_PESSOA=' || substr(obter_nome_pf_pj(null, cd_cnpj_p),1,120)),1,2000);
				 
if (qt_regras_w > 0) then 
	open c01;
	loop 
	fetch c01 into 
		cd_perfil_dest_w, 
		cd_setor_dest_w, 
		nm_usuario_regra_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		if (cd_perfil_dest_w IS NOT NULL AND cd_perfil_dest_w::text <> '') then 
			ds_perfil_w	:= ds_perfil_w || substr(to_char(cd_perfil_dest_w) || ',',1,255);
		end if;
		 
		if (cd_setor_dest_w IS NOT NULL AND cd_setor_dest_w::text <> '') then 
			ds_setor_w	:= ds_setor_w || substr(to_char(cd_setor_dest_w) || ',',1,255);
		end if;	
 
		if (nm_usuario_regra_w IS NOT NULL AND nm_usuario_regra_w::text <> '') then 
			nm_usuario_dest_w	:= substr(nm_usuario_dest_w || nm_usuario_regra_w || ',',1,4000);
		end if;
		end;
	end loop;
	close 	c01;
end if;
 
if (qt_regras_w > 0) and 
	((nm_usuario_dest_w IS NOT NULL AND nm_usuario_dest_w::text <> '') or (ds_setor_w IS NOT NULL AND ds_setor_w::text <> '')) then 
	CALL gerar_comunic_padrao(	clock_timestamp(), 
				ds_titulo_w, 
				ds_comunic_w, 
				nm_usuario_p, 
				'N', 
				nm_usuario_dest_w, 
				'N', 
				nr_seq_classif_w, 
				ds_perfil_w, 
				'', 
				ds_setor_w, 
				clock_timestamp(), 
				'', 
				'');
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_comunicar_nova_pf ( cd_cnpj_p text, nm_usuario_p text) FROM PUBLIC;

