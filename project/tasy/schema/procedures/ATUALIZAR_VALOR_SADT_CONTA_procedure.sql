-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_valor_sadt_conta ( nr_interno_conta_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
 
vl_sadt_w		double precision;
qt_ato_sadt_w		double precision;
qt_tot_proc_w		double precision;
vl_ponto_sadt_w		double precision	:= 0;
qt_sequencia_w		double precision	:= 0;
vl_tot_ponto_w		double precision	:= 0;	
nr_sequencia_w		bigint	:= 0;
qt_ponto_sadt_w		bigint	:= 0;
vl_ponto_seq_w		double precision	:= 0;
nr_interno_conta_w	bigint;

					 
C01 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		coalesce(obter_ponto_sadt(a.nr_sequencia),0) qt_pontos 
	from	procedimento_paciente a, 
		conta_paciente b 
	where	a.nr_interno_conta	= b.nr_interno_conta 
	and	b.nr_interno_conta	= nr_interno_conta_p 
	and	coalesce(a.cd_motivo_exc_conta::text, '') = '' 
	and	coalesce(b.ie_cancelamento::text, '') = '' 
	and	coalesce(a.vl_procedimento,0) = 0 
	and	coalesce(obter_ponto_sadt(a.nr_sequencia),0) > 0 
	and	coalesce(a.nr_seq_proc_pacote,0) 	<> a.nr_sequencia;
	
C02 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		coalesce(obter_valor_sadt(a.nr_sequencia),0) vl_sadt 
	from	procedimento_paciente a, 
		conta_paciente b 
	where	a.nr_interno_conta		= b.nr_interno_conta 
	and	b.nr_interno_conta		= nr_interno_conta_p 
	and	coalesce(a.cd_motivo_exc_conta::text, '') = '' 
	and	coalesce(b.ie_cancelamento::text, '') = '' 
	and	coalesce(obter_valor_sadt(a.nr_sequencia),0)	<= a.vl_materiais 
	and	coalesce(obter_valor_sadt(a.nr_sequencia),0)	> 0 
	and	coalesce(a.nr_seq_proc_pacote,0)	<> a.nr_sequencia;

C03 CURSOR FOR 
	SELECT 		a.nr_interno_conta 
	from		conta_paciente a 
	where		a.nr_interno_conta 		= nr_interno_conta_p 
	and		coalesce(a.ie_cancelamento::text, '') = '';	
					 

BEGIN 
 
begin 
select	sum(coalesce(obter_valor_sadt(a.nr_sequencia),0)) 
into STRICT	vl_sadt_w 
from	procedimento_paciente a, 
	conta_paciente b 
where	a.nr_interno_conta		= b.nr_interno_conta 
and	b.nr_interno_conta		= nr_interno_conta_p 
and	coalesce(a.cd_motivo_exc_conta::text, '') = '' 
and	coalesce(b.ie_cancelamento::text, '') = '' 
and	coalesce(obter_valor_sadt(a.nr_sequencia),0)	<= a.vl_materiais 
and	coalesce(obter_valor_sadt(a.nr_sequencia),0)	> 0 
and	coalesce(a.nr_seq_proc_pacote,0)	<> a.nr_sequencia;
exception 
	when no_data_found then 
	begin 
	vl_sadt_w		:= 0;
	end;
end;
 
begin 
select	sum(coalesce(obter_ponto_sadt(a.nr_sequencia),0)), 
	count(*) 
into STRICT	qt_ato_sadt_w, 
	qt_tot_proc_w 
from	procedimento_paciente a, 
	conta_paciente b 
where	a.nr_interno_conta	= b.nr_interno_conta 
and	b.nr_interno_conta	= nr_interno_conta_p 
and	coalesce(a.cd_motivo_exc_conta::text, '') = '' 
and	coalesce(b.ie_cancelamento::text, '') = '' 
and	coalesce(a.vl_procedimento,0) = 0 
and	coalesce(obter_ponto_sadt(a.nr_sequencia),0) > 0 
and	coalesce(a.nr_seq_proc_pacote,0) 	<> a.nr_sequencia;
exception 
	when no_data_found then 
	begin 
	qt_ato_sadt_w		:= 0;
	end;
end;
 
if (qt_ato_sadt_w = 0) then 
	vl_ponto_sadt_w 	:= 0;
else 
	vl_ponto_sadt_w 	:= (vl_sadt_w / qt_ato_sadt_w);
end if;
 
 
 
vl_tot_ponto_w	:= 0;
qt_sequencia_w	:= 0;
 
open C01;
loop 
fetch C01 into	 
	nr_sequencia_w, 
	qt_ponto_sadt_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	qt_sequencia_w		:= qt_sequencia_w + 1;
	 
	if (qt_sequencia_w = qt_tot_proc_w) then 
		vl_ponto_seq_w	:= (vl_sadt_w - vl_tot_ponto_w);
	else 
		vl_ponto_seq_w	:= (vl_ponto_sadt_w * qt_ponto_sadt_w);
	end if;
	vl_tot_ponto_w		:= vl_tot_ponto_w + vl_ponto_seq_w;
	 
	update		procedimento_paciente a 
	set		a.vl_custo_operacional 	= vl_ponto_seq_w, 
			a.vl_procedimento	= a.vl_procedimento + vl_ponto_seq_w 
	where		a.nr_sequencia 		= nr_sequencia_w;	
	end;
end loop;
close C01;
 
open C02;
loop 
fetch C02 into	 
	nr_sequencia_w, 
	vl_sadt_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
	update	procedimento_paciente a 
	set	a.vl_materiais		= a.vl_materiais	- vl_sadt_w, 
		a.vl_procedimento	= a.vl_procedimento 	- vl_sadt_w 
	where	a.nr_sequencia		= nr_sequencia_w;
	end;
end loop;
close C02;
 
open C03;
loop 
fetch C03 into	 
	nr_interno_conta_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin 
	CALL Gerar_conta_paciente_guia(nr_interno_conta_w,2);
	CALL Atualizar_Resumo_Conta(nr_interno_conta_w, 2);
	end;
end loop;
close C03;
 
commit;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_valor_sadt_conta ( nr_interno_conta_p bigint, nm_usuario_p text) FROM PUBLIC;

