-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dva_load_catalogue (cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

					
cd_procedimento_w  	procedimento.cd_procedimento%type;
ie_origem_proced_w  	procedimento.ie_origem_proced%type;
ds_error_w 		varchar(4000);
i			integer := 1;

c01 CURSOR FOR

SELECT 	*
from 	w_achiload_proc;

r1 	c01%rowtype;


BEGIN
open c01;
loop
fetch c01 into r1;

if 	c01%notfound then
update 	mbs_import_log
set 	dt_end = clock_timestamp()
where 	ie_status = 'IDVA'
and 	coalesce(dt_end::text, '') = '';
exit;
end if;

begin
if (r1.ds_code_id = 'DICD') then
	if (i = 1) then
		update  acc_rule_structure
		set     dt_end_validity = clock_timestamp(),
			nm_usuario = nm_usuario_p,
			dt_atualizacao = clock_timestamp()
		where   coalesce(dt_end_validity::text, '') = ''
		and 	(cd_doenca IS NOT NULL AND cd_doenca::text <> '')
		and	nr_seq_group_rule in (	SELECT	nr_sequencia
						from	acc_rule_group
						where	cd_estabelecimento = cd_estabelecimento_p);
		i:=2;
	end if;
	insert into acc_rule_structure(nr_sequencia,
					cd_doenca,
					dt_start_validity,
					nr_seq_group_rule,
					dt_atualizacao,
					nm_usuario,           
					dt_atualizacao_nrec,           
					nm_usuario_nrec)
				values (nextval('acc_rule_structure_seq'),
					r1.ds_ascii_desc,
					coalesce(r1.dt_effective_from,clock_timestamp()),
					r1.ds_ascii_short_desc,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p);
	
else
	if (i = 1) then
		update  acc_rule_structure
		set     dt_end_validity = clock_timestamp(),
			nm_usuario = nm_usuario_p,
			dt_atualizacao = clock_timestamp()
		where   coalesce(dt_end_validity::text, '') = ''
		and 	(cd_procedimento IS NOT NULL AND cd_procedimento::text <> '')
		and	nr_seq_group_rule in (	SELECT	nr_sequencia
						from	acc_rule_group
						where	cd_estabelecimento = cd_estabelecimento_p);
		i:=2;
	end if;
	
	select	coalesce(max(cd_procedimento),0),
		coalesce(max(ie_origem_proced),0)
	into STRICT	cd_procedimento_w, 		
		ie_origem_proced_w
	from	procedimento
	where	cd_procedimento_loc = r1.ds_ascii_desc
	and	ie_situacao = 'A';

	insert into acc_rule_structure(nr_sequencia,         
					dt_atualizacao,           
					nm_usuario,           
					dt_atualizacao_nrec,           
					nm_usuario_nrec,           
					cd_procedimento,           
					ie_origem_proced,           
					nr_seq_group_rule,           
					dt_start_validity,           
					dt_end_validity,
					cd_procedimento_loc)
				values (nextval('acc_rule_structure_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_procedimento_w, 		
					ie_origem_proced_w,
					r1.ds_ascii_short_desc,
					coalesce(r1.dt_effective_from,clock_timestamp()),		
					r1.dt_inactive_from,
					r1.ds_ascii_desc);
end if;
commit;
exception
when others then
	ds_error_w := r1.ds_ascii_desc || '-->' || sqlerrm(SQLSTATE);
	insert into mbs_import_log(dt_start,ie_status,ds_error) values (clock_timestamp(),'EDVA',ds_error_w);
	commit;
end;
end loop;
delete	FROM w_achiload_proc;
close	c01;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dva_load_catalogue (cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

