-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cih_converter_atend_unif ( dt_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE

 
nr_atendimento_w	bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
cd_proc_unif_w		bigint;
ds_comando_create_w	varchar(2000);
nr_seq_proc_cih_w	integer;
dt_atualizacao_w	timestamp;
nm_usuario_w		varchar(15);
cd_cid_primario_w	varchar(10);
cd_cid_secundario_w	varchar(10);

 
c01 CURSOR FOR 
	SELECT	cd_procedimento, 
		ie_origem_proced, 
		nr_atendimento 
	from 	sus_cih_2008_v 
	where	trunc(DT_COMPETENCIA,'month') = trunc(dt_referencia_p,'month') 
	and	ie_origem_proced = 2 
	and	(cd_procedimento IS NOT NULL AND cd_procedimento::text <> '') 
	order by nr_atendimento;


BEGIN 
 
ds_comando_create_w	:= 'create table PROCEDIMENTO_PACIENTE_CIH_w as (select * from PROCEDIMENTO_PACIENTE_CIH where 1 = 2)';
CALL exec_sql_dinamico('TASY', ds_comando_create_w);
 
OPEN C01;
LOOP 
FETCH C01 into 
	cd_procedimento_w, 
	ie_origem_proced_w, 
	nr_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
 
	begin 
	select	a.cd_proc_unif 
	into STRICT	cd_proc_unif_w 
	from	sus_origem a, 
		procedimento b 
	where	a.cd_procedimento	= cd_procedimento_w 
	and	a.ie_origem_proced	= ie_origem_proced_w 
	and	a.cd_proc_unif		= b.cd_procedimento 
	and	a.ie_origem_proc_unif	= b.ie_origem_proced 
	and	b.ie_situacao		= 'A';
	exception 
		when others then 
		cd_proc_unif_w	:= 0;
	end;
 
	if (cd_proc_unif_w	> 0) then 
 
 
		select	max(nr_sequencia), 
			max(dt_atualizacao), 
			max(nm_usuario), 
			max(cd_cid_primario), 
			max(cd_cid_secundario) 
		into STRICT	nr_seq_proc_cih_w, 
			dt_atualizacao_w, 
			nm_usuario_w, 
			cd_cid_primario_w, 
			cd_cid_secundario_w 
		from	PROCEDIMENTO_PACIENTE_CIH 
		where	nr_atendimento	= nr_atendimento_w 
		and	cd_procedimento	= cd_procedimento_w 
		and	ie_origem_proced = ie_origem_proced_w;
 
		ds_comando_create_w	:= 'insert into PROCEDIMENTO_PACIENTE_CIH_w 	(nr_atendimento, ' || 
											'nr_sequencia, ' || 
											'cd_procedimento, ' || 
											'ie_origem_proced, ' || 
											'dt_atualizacao, ' || 
											'nm_usuario, ' || 
											'cd_cid_primario, ' || 
											'cd_cid_secundario)' || 
										'select nr_atendimento, ' || 
											'nr_sequencia, ' || 
											'cd_procedimento, ' || 
											'ie_origem_proced, ' || 
											'dt_atualizacao, ' || 
											'nm_usuario, ' || 
											'cd_cid_primario, ' || 
											'cd_cid_secundario ' || 
										' from	PROCEDIMENTO_PACIENTE_CIH ' || 
										' where	nr_atendimento	= ' || nr_atendimento_w || 
										' and	cd_procedimento	= ' || cd_procedimento_w || 
										' and	ie_origem_proced = ' || ie_origem_proced_w;
		CALL exec_sql_dinamico('TASY', ds_comando_create_w);
 
	--	insert into log_xxxxtasy (dt_atualizacao,nm_usuario,cd_log,ds_log) 
  --			values	(sysdate,nm_usuario_p,47118,ds_comando_create_w); 
 
 
	--	insert into log_XXXtasy (dt_atualizacao,nm_usuario,cd_log,ds_log) 
	--		values	(sysdate,nm_usuario_p,47119,'Atend. Atualizado: ' || nr_atendimento_w || ' Proced.: ' || cd_proc_unif_w ||' Origem ' || '7'); 
 
		update PROCEDIMENTO_PACIENTE_CIH 
		set 	cd_procedimento		= cd_proc_unif_w, 
			ie_origem_proced	= 7, 
			nm_usuario		= nm_usuario_p 
		where	nr_atendimento		= nr_atendimento_w;
		 
	--	insert into log_XXXtasy (dt_atualizacao,nm_usuario,cd_log,ds_log) 
	--		values	(sysdate,nm_usuario_p,47120,'NÃ£o encontrado procedimento correspondente: ' || nr_atendimento_w || ' Proced.: ' || cd_procedimento_w ||' Origem ' || '2'); 
 
 
	end if;
	end;
END LOOP;
 
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cih_converter_atend_unif ( dt_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

