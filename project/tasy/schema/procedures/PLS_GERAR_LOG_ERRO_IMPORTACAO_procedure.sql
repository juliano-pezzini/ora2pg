-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_log_erro_importacao ( nr_seq_protocolo_p bigint, nm_usuario_p text, nr_seq_mensagem_p bigint, ds_erro_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type default null) AS $body$
DECLARE


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Gerar erro importação do arquivo XML e atualizar o estágio do protocolo
----------------------------------------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [ x ] Portal [  ] Relatórios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/qt_mensagem_bloqueio_w		bigint;
qt_contas_w 			bigint;
nr_seq_mensagem_import_w	bigint;


BEGIN

-- se for para usar a nova forma de importação XML chama da package, caso contrário chama a rotina antiga
if (pls_imp_xml_cta_pck.usar_nova_imp_xml(cd_estabelecimento_p) = 'S') then
	CALL pls_imp_xml_cta_pck.pls_imp_nv_log_erro( nr_seq_protocolo_p, nr_seq_mensagem_p, nm_usuario_p, ds_erro_p);
else
	if (nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '') then

		select	max(nr_sequencia)
		into STRICT	nr_seq_mensagem_import_w
		from 	pls_mensagem_importacao
		where	nr_seq_protocolo = nr_seq_protocolo_p;

		if (coalesce(nr_seq_mensagem_import_w::text, '') = '') then

			/* Salvar a mensagem de erro gerada na importação de XML */

			insert into pls_mensagem_importacao(
				nr_sequencia, nr_seq_protocolo, dt_atualizacao,
				nm_usuario, nr_seq_mensagem, ds_erro)
			values (nextval('pls_mensagem_importacao_seq'), nr_seq_protocolo_p, clock_timestamp(),
				nm_usuario_p, nr_seq_mensagem_p, substr(ds_erro_p,0,2000));

			/* Gerar resumo importação do XML */

			select	count(1)
			into STRICT	qt_contas_w
			from	pls_conta
			where	nr_seq_protocolo = nr_seq_protocolo_p;

			select	count(1)
			into STRICT	qt_mensagem_bloqueio_w
			from	pls_mensagem_importacao
			where	nr_seq_protocolo = nr_seq_protocolo_p
			and	nr_seq_mensagem in (5014, 5001, 5002, 5012, 5010, 5007);


			insert into pls_resumo_importacao(
				nr_sequencia,nm_usuario, nr_seq_protocolo,
				qt_contas, qt_contas_criticadas, qt_itens_protocolo,
				qt_itens_criticados, qt_mensagens_aviso, qt_mensagens_bloqueio,
				dt_atualizacao, qt_valor_total,	qt_valor_tot_crit)
			values (nextval('pls_resumo_importacao_seq'), nm_usuario_p, nr_seq_protocolo_p,
				qt_contas_w, 0, 0,
				0, 0, qt_mensagem_bloqueio_w,
				clock_timestamp(), 0, 0
			);

		else
			/* Atualiza a mensagem de erro gerada na importação de XML */

			update	pls_mensagem_importacao
			set	dt_atualizacao = clock_timestamp(),
				nm_usuario = nm_usuario_p,
				nr_seq_mensagem = nr_seq_mensagem_p,
				ds_erro = substr(ds_erro_p,0,2000)
			where	nr_sequencia = nr_seq_mensagem_import_w;

		end if;

		/* Atualizar estágio do protocolo para Rejeitado devido ao erro gerado */

		update	pls_protocolo_conta
		set    	ie_situacao = 'RE',
			dt_integracao  = NULL
		where  	nr_sequencia = nr_seq_protocolo_p;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_log_erro_importacao ( nr_seq_protocolo_p bigint, nm_usuario_p text, nr_seq_mensagem_p bigint, ds_erro_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type default null) FROM PUBLIC;

