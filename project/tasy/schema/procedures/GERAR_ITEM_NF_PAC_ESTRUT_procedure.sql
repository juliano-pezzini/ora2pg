-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_item_nf_pac_estrut ( nr_seq_nota_fiscal_p bigint, nr_atendimento_p bigint, nr_interno_conta_p bigint, nr_seq_protocolo_p bigint, ie_tipo_convenio_p bigint, cd_convenio_p bigint, nr_nota_fiscal_p text, nr_sequencia_nf_p bigint, cd_operacao_nf_p bigint, cd_serie_nf_p text, cd_cgc_p text, cd_moeda_p bigint, vl_cotacao_p bigint, cd_nat_oper_nf_p text, ie_conta_financ_nf_p text, ds_complemento_p text, cd_estab_nota_fiscal_p bigint, cd_cgc_emitente_p text, vl_proc_mat_acum_p INOUT bigint, vl_desc_acum_p INOUT bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Procedure that will generate the invoice items based on the structucred rule of procedures
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_conta_contabil_w			conta_contabil.cd_conta_contabil%type;
cd_centro_custo_w			centro_custo.cd_centro_custo%type;
qt_proc_mat_w				nota_fiscal_item.qt_item_nf%type;
nr_seq_proc_interno_w			bigint;
vl_desc_item_w				double precision;
pr_desc_item_w				double precision;
vl_unitario_item_nf_w			double precision;
vl_proc_mat_w				double precision;
vl_proc_mat_acum_w			double precision;
vl_desc_acum_w				double precision;
qt_item_calc_w				integer;
ds_erro_w				varchar(4000)	:= null;
ie_tipo_conta_w				bigint;
cd_operacao_estoque_w			operacao_nota.cd_operacao_estoque%type;
cd_procedimento_w			procedimento.cd_procedimento%type;
ie_origem_proced_w			procedimento.ie_origem_proced%type;
cd_conta_financ_w			conta_financeira.cd_conta_financ%type;
ie_tipo_atendimento_w			bigint;
cd_categoria_convenio_w			categoria_convenio.cd_categoria%type;
nr_item_nf_w				bigint;
vl_desconto_item_w			double precision;
vl_total_estrangeiro_w			double precision;
vl_unit_estrangeiro_w			double precision;
ds_observacao_w				varchar(255)	:= null;
cd_material_w				material.cd_material%type	:= null;

cd_proc_regra_w				procedimento.cd_procedimento%type;
ie_origem_proc_regra_w			procedimento.ie_origem_proced%type;
nr_seq_regra_w				bigint;
nr_seq_regra_superior_w			bigint	:= null;
vl_total_item_nf_w			nota_fiscal_item.vl_total_item_nf%type;
vl_liquido_w				nota_fiscal_item.vl_liquido%type;

qt_reg_w				bigint;
ds_nls_territory_w			varchar(64);
ie_conta_deducao_w			varchar(1);

ie_gerar_agrupado_por_itens_w		varchar(1) := 'N';
dt_mesano_protocolo_w			timestamp;
dt_periodo_inicial_w			timestamp;
dt_periodo_final_w			timestamp;
var_s_w                                 varchar(5) := chr(39) || 'S' || chr(39);
var_n_w                                 varchar(5) := chr(39) || 'N' || chr(39);
ds_sql_select                           varchar(10000);
ds_select_w                             varchar(10000);
ds_from_w                               varchar(10000);
ds_where_w                              varchar(10000);
ds_groupBy_w                            varchar(10000);
ds_select_comum_w                       varchar(10000);
ds_from_comum_w                         varchar(10000);
ds_where_comum_w                        varchar(10000);
nr_proc_interno_w                       proc_paciente_convenio.nr_proc_interno%type;
ie_calc_valor_unit_w                    regra_conta_nf.ie_calc_valor_unit%type := 'N';

c_item_agrup CURSOR(	nr_interno_conta_pc	bigint,
			nr_seq_protocolo_pc	bigint) FOR
SELECT
	null cd_material,
	null cd_material_convenio,
	null ds_material_convenio,
	null cd_procedimento_convenio,
	null ds_procedimento_convenio,
	null cd_unidade_medida,
	nr_seq_regra,
	nr_seq_ordem,
	cd_procedimento,
	ie_origem_proced,
	sum(qt_item) 	 qt_item,
	sum(vl_original) vl_original,
	sum(vl_item) 	 vl_item,
        null nr_proc_interno,
        null vl_unitario
from (
	-- Proc - por conta
	SELECT	c.nr_sequencia 		nr_seq_regra,
		c.nr_seq_ordem 		nr_seq_ordem,
		c.cd_procedimento 	cd_procedimento,
		c.ie_origem_proced 	ie_origem_proced,
		sum(a.qt_procedimento) 	qt_item,
		sum(CASE WHEN ie_conta_deducao_w='S' THEN a.vl_procedimento  ELSE round((coalesce(obter_vl_item_conta_original(a.nr_sequencia,null)*a.qt_procedimento,a.vl_procedimento))::numeric, 2) END ) vl_original,
		sum(a.vl_procedimento) 	vl_item
	FROM procedimento_paciente a, conta_pac_nf_item b
LEFT OUTER JOIN regra_conta_nf_item c ON (b.nr_seq_regra = c.nr_sequencia)
WHERE 1=1 and ie_gerar_agrupado_por_itens_w = 'N'  and a.nr_sequencia		= b.nr_seq_propaci and a.nr_interno_conta	= nr_interno_conta_pc and b.nr_sequencia_nf 	= nr_seq_nota_fiscal_p and coalesce(a.nr_seq_proc_pacote, a.nr_sequencia) = a.nr_sequencia and coalesce(nr_interno_conta_pc,0) > 0 group by
		c.nr_sequencia,
		c.nr_seq_ordem,
		c.cd_procedimento,
		c.ie_origem_proced
	
union all

	-- Proc - por protocolo
	select	c.nr_sequencia 		nr_seq_regra,
		c.nr_seq_ordem 		nr_seq_ordem,
		c.cd_procedimento 	cd_procedimento,
		c.ie_origem_proced 	ie_origem_proced,
		sum(a.qt_procedimento) 	qt_item,
		sum(CASE WHEN( select CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END  from conta_pac_deducao_conv x where x.nr_seq_conta_des = cp.nr_interno_conta ) ='S' THEN a.vl_procedimento  ELSE round((coalesce(obter_vl_item_conta_original(a.nr_sequencia,null)*a.qt_procedimento,a.vl_procedimento))::numeric,2) END ) vl_original,
		sum(a.vl_procedimento) 	vl_item
	FROM conta_paciente cp, procedimento_paciente a, conta_pac_nf_item b
LEFT OUTER JOIN regra_conta_nf_item c ON (b.nr_seq_regra = c.nr_sequencia)
WHERE 1=1 and ie_gerar_agrupado_por_itens_w = 'N'  and a.nr_sequencia		= b.nr_seq_propaci and cp.nr_interno_conta	= a.nr_interno_conta and cp.nr_seq_protocolo	= nr_seq_protocolo_pc and b.nr_sequencia_nf 	= nr_seq_nota_fiscal_p and coalesce(a.nr_seq_proc_pacote, a.nr_sequencia) = a.nr_sequencia and coalesce(nr_seq_protocolo_pc,0) > 0 group by
		c.nr_sequencia,
		c.nr_seq_ordem,
		c.cd_procedimento,
		c.ie_origem_proced
	
union all

	-- Mat - por conta
	select	c.nr_sequencia 		nr_seq_regra,
		c.nr_seq_ordem 		nr_seq_ordem,
		c.cd_procedimento 	cd_procedimento,
		c.ie_origem_proced 	ie_origem_proced,
		sum(a.qt_material) 	qt_item,
		sum(CASE WHEN ie_conta_deducao_w='S' THEN a.vl_material  ELSE round((coalesce(obter_vl_item_conta_original(null,a.nr_sequencia),coalesce(a.vl_unitario,a.vl_material)) * a.qt_material)::numeric,2) END ) vl_original,
		sum(a.vl_material) 	vl_item
	FROM material_atend_paciente a, conta_pac_nf_item b
LEFT OUTER JOIN regra_conta_nf_item c ON (b.nr_seq_regra = c.nr_sequencia)
WHERE 1=1 and ie_gerar_agrupado_por_itens_w = 'N'  and a.nr_sequencia		= b.nr_seq_matpaci and b.nr_sequencia_nf 	= nr_seq_nota_fiscal_p and a.nr_interno_conta	= nr_interno_conta_pc and coalesce(a.nr_seq_proc_pacote::text, '') = '' and coalesce(nr_interno_conta_pc,0) > 0 group by
		c.nr_sequencia,
		c.nr_seq_ordem,
		c.cd_procedimento,
		c.ie_origem_proced
	
union all

	-- Mat - por protocolo
	select	c.nr_sequencia 		nr_seq_regra,
		c.nr_seq_ordem 		nr_seq_ordem,
		c.cd_procedimento 	cd_procedimento,
		c.ie_origem_proced 	ie_origem_proced,
		sum(a.qt_material) 	qt_item,
		sum(CASE WHEN( select CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END  from conta_pac_deducao_conv x where x.nr_seq_conta_des = cp.nr_interno_conta )='S' THEN a.vl_material  ELSE round((coalesce(obter_vl_item_conta_original(null,a.nr_sequencia),coalesce(a.vl_unitario,a.vl_material)) * a.qt_material)::numeric,2) END ) vl_original,
		sum(a.vl_material) 	vl_item
	FROM conta_paciente cp, material_atend_paciente a, conta_pac_nf_item b
LEFT OUTER JOIN regra_conta_nf_item c ON (b.nr_seq_regra = c.nr_sequencia)
WHERE 1=1 and ie_gerar_agrupado_por_itens_w = 'N'  and a.nr_sequencia		= b.nr_seq_matpaci and cp.nr_interno_conta	= a.nr_interno_conta and b.nr_sequencia_nf 	= nr_seq_nota_fiscal_p and cp.nr_seq_protocolo	= nr_seq_protocolo_pc and coalesce(a.nr_seq_proc_pacote::text, '') = '' and (nr_seq_protocolo_pc IS NOT NULL AND nr_seq_protocolo_pc::text <> '') and coalesce(nr_seq_protocolo_pc,0) > 0 group by
		c.nr_sequencia,
		c.nr_seq_ordem,
		c.cd_procedimento,
		c.ie_origem_proced
	) alias47
group by
	nr_seq_regra,
	nr_seq_ordem,
	cd_procedimento,
	ie_origem_proced

union all

 --ITENS AGRUPADOS SEM REGRA DE ESTRUTURA NF
select	cd_material,
	cd_material_convenio,
	ds_material_convenio,
	cd_procedimento_convenio,
	ds_procedimento_convenio,
	cd_unidade_medida,
	null nr_seq_regra,
	null nr_seq_ordem,
	cd_procedimento,
	ie_origem_proced,
	sum(qt_item) 	 qt_item,
	sum(vl_original) vl_original,
	sum(vl_item) 	 vl_item,
        null nr_proc_interno,
        null vl_unitario
from (
	-- Proc - por conta
	select	a.cd_procedimento 		cd_procedimento,
		a.ie_origem_proced 		ie_origem_proced,
		a.cd_procedimento_convenio 	cd_procedimento_convenio,
		null  				cd_material,
		null  				cd_material_convenio,
		null  				ds_material_convenio,
		null				cd_unidade_medida,
		a.qt_procedimento 		qt_item,
		a.vl_procedimento 		vl_item,
		CASE WHEN ie_conta_deducao_w='S' THEN a.vl_procedimento  ELSE round((coalesce(obter_vl_item_conta_original(a.nr_sequencia,null),a.vl_procedimento)*a.qt_procedimento)::numeric, 2) END  vl_original,
		CASE WHEN coalesce(cd_procedimento_convenio::text, '') = '' THEN  null  ELSE substr(Obter_Desc_Proc_Convenio(a.nr_sequencia, 0),1,120) END  ds_procedimento_convenio
	from	conta_pac_nf_item 	b,
		procedimento_paciente 	a
	where	1=1
	and 	ie_gerar_agrupado_por_itens_w = 'S'
	and	a.nr_sequencia		= b.nr_seq_propaci
	and	a.nr_interno_conta	= nr_interno_conta_pc
	and	b.nr_sequencia_nf 	= nr_seq_nota_fiscal_p
	and	coalesce(a.nr_seq_proc_pacote, a.nr_sequencia) = a.nr_sequencia
	and	coalesce(nr_interno_conta_pc,0) > 0
	
union all

	-- Proc - por protocolo
	select
		a.cd_procedimento 		cd_procedimento,
		a.ie_origem_proced 		ie_origem_proced,
		a.cd_procedimento_convenio 	cd_procedimento_convenio,
		null  				cd_material,
		null  				cd_material_convenio,
		null  				ds_material_convenio,
		null				cd_unidade_medida,
		a.qt_procedimento 		qt_item,
		a.vl_procedimento 		vl_item,
		CASE WHEN( select CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END  from conta_pac_deducao_conv x where x.nr_seq_conta_des = cp.nr_interno_conta ) ='S' THEN			a.vl_procedimento  ELSE round((coalesce(obter_vl_item_conta_original(a.nr_sequencia,null),a.vl_procedimento)*a.qt_procedimento)::numeric,2) END  vl_original,
		CASE WHEN coalesce(cd_procedimento_convenio::text, '') = '' THEN  null  ELSE substr(Obter_Desc_Proc_Convenio(a.nr_sequencia, 0),1,120) END 	ds_procedimento_convenio
	from	conta_pac_nf_item 	b,
		procedimento_paciente 	a,
		conta_paciente 		cp
	where	1=1
	and 	ie_gerar_agrupado_por_itens_w = 'S'
	and	a.nr_sequencia		= b.nr_seq_propaci
	and	cp.nr_interno_conta	= a.nr_interno_conta
	and	cp.nr_seq_protocolo	= nr_seq_protocolo_pc
	and	b.nr_sequencia_nf 	= nr_seq_nota_fiscal_p
	and	coalesce(a.nr_seq_proc_pacote, a.nr_sequencia) = a.nr_sequencia
	and	coalesce(nr_seq_protocolo_pc,0) > 0
	
union all

	-- Mat - por conta
	select
		null 			cd_procedimento,
		null 			ie_origem_proced,
		null 			cd_procedimento_convenio,
		a.cd_material 		cd_material,
		a.cd_material_convenio 	cd_material_convenio,
		obter_desc_matpaci_convenio(a.nr_sequencia) ds_material_convenio,
		a.cd_unidade_medida	cd_unidade_medida,
		a.qt_material 		qt_item,
		a.vl_material 		vl_item,
		CASE WHEN ie_conta_deducao_w='S' THEN a.vl_material  ELSE round((coalesce(obter_vl_item_conta_original(null,a.nr_sequencia),coalesce(a.vl_unitario,a.vl_material)) * a.qt_material)::numeric,2) END  vl_original,
		null 			ds_procedimento_convenio
	from	conta_pac_nf_item 	b,
		material_atend_paciente a
	where	1=1
	and 	ie_gerar_agrupado_por_itens_w = 'S'
	and	a.nr_sequencia		= b.nr_seq_matpaci
	and	b.nr_sequencia_nf 	= nr_seq_nota_fiscal_p
	and	a.nr_interno_conta	= nr_interno_conta_pc
	and	coalesce(a.nr_seq_proc_pacote::text, '') = ''
	and	coalesce(nr_interno_conta_pc,0) > 0
	
union all

	 --Mat - por protocolo
	select
		null 			cd_procedimento,
		null 			ie_origem_proced,
		null 			cd_procedimento_convenio,
		a.cd_material 		cd_material,
		a.cd_material_convenio 	cd_material_convenio,
		obter_desc_matpaci_convenio(a.nr_sequencia) ds_material_convenio,
		a.cd_unidade_medida	cd_unidade_medida,
		a.qt_material 		qt_item,
		a.vl_material 		vl_item,
		CASE WHEN( select CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END  from conta_pac_deducao_conv x where x.nr_seq_conta_des = cp.nr_interno_conta )='S' THEN 			a.vl_material  ELSE round((coalesce(obter_vl_item_conta_original(null,a.nr_sequencia),coalesce(a.vl_unitario,a.vl_material)) * a.qt_material)::numeric,2) END  vl_original,
		null 			ds_procedimento_convenio
	from	conta_pac_nf_item 	b,
		material_atend_paciente a,
		conta_paciente 		cp
	where	1=1
	and 	ie_gerar_agrupado_por_itens_w = 'S'
	and	a.nr_sequencia		= b.nr_seq_matpaci
	and	cp.nr_interno_conta	= a.nr_interno_conta
	and	b.nr_sequencia_nf 	= nr_seq_nota_fiscal_p
	and	cp.nr_seq_protocolo	= nr_seq_protocolo_pc
	and	coalesce(a.nr_seq_proc_pacote::text, '') = ''
	and	(nr_seq_protocolo_pc IS NOT NULL AND nr_seq_protocolo_pc::text <> '')
	and	coalesce(nr_seq_protocolo_pc,0) > 0
	) alias90
group by
	cd_material,
	cd_material_convenio,
	ds_material_convenio,
	cd_procedimento_convenio,
	ds_procedimento_convenio,
	cd_unidade_medida,
	cd_procedimento,
	ie_origem_proced
order by
	nr_seq_ordem,
	cd_procedimento,
	cd_material;

ds_cursor                               REFCURSOR;
type 		fetch_array is table of c_item_agrup%rowtype;
type vetor is table of fetch_array index by integer;
vetor_c01_w			        vetor;
s_array 	                        fetch_array;
i		                        integer := 1;

BEGIN

/*--------VERIFICA SE DEVE GERAR ITENS DE NOTA A PARTIR DE AGRUPAMENTO DE ITENS DA CONTA------*/

if (coalesce(nr_seq_protocolo_p,0) > 0) then
	select  max(dt_mesano_referencia)
	into STRICT	dt_mesano_protocolo_w
	from    protocolo_convenio
	where   nr_seq_protocolo = nr_seq_protocolo_p;
elsif (coalesce(nr_interno_conta_p,0) > 0) then
	select 	dt_periodo_inicial,
		dt_periodo_final
	into STRICT	dt_periodo_inicial_w,
		dt_periodo_final_w
	from   	conta_paciente
	where  	nr_interno_conta = nr_interno_conta_p;
end if;


select	coalesce(max(nr_sequencia),0)
into STRICT	nr_seq_regra_superior_w
from	regra_conta_nf a
where	coalesce(a.cd_estabelecimento,cd_estab_nota_fiscal_p)	= cd_estab_nota_fiscal_p
and	coalesce(a.cd_convenio,cd_convenio_p)			= cd_convenio_p
and     ((coalesce(nr_seq_protocolo_p,0) > 0 and	dt_mesano_protocolo_w >= a.dt_inicio_vigencia and (dt_mesano_protocolo_w <= a.dt_fim_vigencia or coalesce(a.dt_fim_vigencia::text, '') = ''))
	or (coalesce(nr_interno_conta_p,0) > 0 and	dt_periodo_inicial_w >= a.dt_inicio_vigencia and (dt_periodo_final_w <= a.dt_fim_vigencia or coalesce(a.dt_fim_vigencia::text, '') = '')));

if (nr_seq_regra_superior_w > 0) then
	select 	coalesce(max(ie_gerar_itens),'N'),
                coalesce(max(ie_calc_valor_unit), 'N')
	into STRICT 	ie_gerar_agrupado_por_itens_w,
                ie_calc_valor_unit_w
	from 	regra_conta_nf
	where 	nr_sequencia = nr_seq_regra_superior_w;
end if;
/*----------------------------------------------------------------------------------------------*/

if (coalesce(nr_interno_conta_p,0) > 0) then
	select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_conta_deducao_w
	from	conta_pac_deducao_conv a
	where	a.nr_seq_conta_des = nr_interno_conta_p;
end if;

if (ie_gerar_agrupado_por_itens_w = 'N') then
        ds_select_comum_w :=
        ' select	c.nr_sequencia 		nr_seq_regra,
                c.nr_seq_ordem 		nr_seq_ordem,
                c.cd_procedimento 	cd_procedimento,
                c.ie_origem_proced 	ie_origem_proced, ';

        ds_from_comum_w := ' from regra_conta_nf_item c, conta_pac_nf_item b, ';

        ds_where_comum_w := ' where 1=1 and b.nr_seq_regra = c.nr_sequencia(+) and b.nr_sequencia_nf = ' || nr_seq_nota_fiscal_p;

        ds_groupBy_w := 
        ' group by
                c.nr_sequencia,
                c.nr_seq_ordem,
                c.cd_procedimento,
                c.ie_origem_proced ';

        ds_sql_select	:= ds_sql_select || chr(10) || 
        ' select
                null cd_material,
                null cd_material_convenio,
                null ds_material_convenio,
                null cd_procedimento_convenio,
                null ds_procedimento_convenio,
                null cd_unidade_medida,
                nr_seq_regra,
                nr_seq_ordem,
                cd_procedimento,
                ie_origem_proced,
                sum(qt_item) 	 qt_item,                
                sum(vl_original) vl_original,
                sum(vl_item) 	 vl_item,
                null nr_proc_interno,
                null vl_unitario
        from	( ';
        -- Procedimento
        ds_select_w     := ds_select_w || chr(10) || ' sum(a.qt_procedimento) qt_item, ';

        if (coalesce(nr_interno_conta_p,0) > 0) then
                if (ie_conta_deducao_w = 'S') then
                        ds_select_w     := ds_select_w || chr(10) || 'sum(a.vl_procedimento) vl_original, ';
                else
                        ds_select_w     := ds_select_w || chr(10) || 'sum(round(nvl(obter_vl_item_conta_original(a.nr_sequencia,null)*a.qt_procedimento,a.vl_procedimento), 2)) vl_original, ';
                end if;
                ds_where_w   := ds_where_w || chr(10) || ' and a.nr_interno_conta = ' || nr_interno_conta_p || ' and nvl(' || nr_interno_conta_p || ',0) > 0 ';
        else
                ds_select_w	:= ds_select_w || chr(10) || ' sum(decode(( select decode(count(1),0,'|| var_n_w ||','|| var_s_w ||
                ') from conta_pac_deducao_conv x where x.nr_seq_conta_des = cp.nr_interno_conta ) ,'|| var_s_w || 
                ',a.vl_procedimento, round(nvl(obter_vl_item_conta_original(a.nr_sequencia,null)*a.qt_procedimento,a.vl_procedimento),2))) vl_original, ';

                ds_from_w	:= ds_from_w || chr(10) || ' conta_paciente cp, ';

                ds_where_w	:= ds_where_w || chr(10) || ' and cp.nr_interno_conta = a.nr_interno_conta and cp.nr_seq_protocolo = ' || nr_seq_protocolo_p || ' and nvl(' || nr_seq_protocolo_p || ',0) > 0 ';
        end if;

        ds_select_w     := ds_select_w || chr(10) || ' sum(a.vl_procedimento) vl_item, null nr_proc_interno, null vl_unitario ';

        ds_from_w       := ds_from_w || chr(10) || ' procedimento_paciente a ';

        ds_where_w      := ds_where_w || chr(10) || ' and a.nr_sequencia = b.nr_seq_propaci and nvl(a.nr_seq_proc_pacote, a.nr_sequencia) = a.nr_sequencia ';

        ds_sql_select   := ds_sql_select || chr(10) || ds_select_comum_w || chr(10) || ds_select_w || chr(10) || ds_from_comum_w || chr(10) || ds_from_w || chr(10) ||
                        ds_where_comum_w || chr(10) || ds_where_w || chr(10) || ds_groupBy_w;

        -- Material        
        ds_select_w     := '';
        ds_from_w       := '';
        ds_where_w      := '';
        ds_sql_select   := ds_sql_select || chr(10) || ' union all ';
        ds_select_w     := ds_select_w || chr(10) || 'sum(a.qt_material) qt_item, ';
        if (coalesce(nr_interno_conta_p,0) > 0) then
                if (ie_conta_deducao_w = 'S') then
                        ds_select_w     := ds_select_w || chr(10) || 'sum(a.vl_material) vl_original, ';
                else
                        ds_select_w     := ds_select_w || chr(10) || 'sum(round(nvl(obter_vl_item_conta_original(null,a.nr_sequencia),nvl(a.vl_unitario,a.vl_material)) * a.qt_material,2)) vl_original, ';
                end if;
                ds_where_w   := ds_where_w || chr(10) || ' and a.nr_interno_conta = ' || nr_interno_conta_p || ' and nvl(' || nr_interno_conta_p || ',0) > 0 ';
        else
                ds_select_w	:= ds_select_w || chr(10) || 
                ' sum(decode(( select decode(count(1),0,'|| var_n_w || ',' || var_s_w || ') from conta_pac_deducao_conv x where x.nr_seq_conta_des = cp.nr_interno_conta ),' || var_s_w ||
                ',a.vl_material, round(nvl(obter_vl_item_conta_original(null,a.nr_sequencia),nvl(a.vl_unitario,a.vl_material)) * a.qt_material,2))) vl_original, ';

                ds_from_w	:= ds_from_w || chr(10) || ' conta_paciente cp, ';

                ds_where_w	:= ds_where_w || chr(10) || ' and cp.nr_interno_conta = a.nr_interno_conta and cp.nr_seq_protocolo = ' || nr_seq_protocolo_p || ' and ' || nr_seq_protocolo_p || 
                ' is not null and nvl(' || nr_seq_protocolo_p || ',0) > 0 ';
        end if;

        ds_select_w     := ds_select_w || chr(10) || ' sum(a.vl_material) vl_item, null nr_proc_interno, null vl_unitario ';

        ds_from_w       := ds_from_w || chr(10) || ' material_atend_paciente a ';

        ds_where_w      := ds_where_w || chr(10) || ' and a.nr_sequencia = b.nr_seq_matpaci and a.nr_seq_proc_pacote is null ';

        ds_sql_select	:= ds_sql_select || chr(10) || ds_select_comum_w || chr(10) || ds_select_w || chr(10) || ds_from_comum_w || chr(10) || ds_from_w || chr(10) ||
                        ds_where_comum_w || chr(10) || ds_where_w || chr(10) || ds_groupBy_w || chr(10) || 
        ' ) group by
                nr_seq_regra,
                nr_seq_ordem,
                cd_procedimento,
                ie_origem_proced ';
else
        --ITENS AGRUPADOS SEM REGRA DE ESTRUTURA NF

        --Procedimento
        ds_select_w :=
        ' select        a.cd_procedimento cd_procedimento,
                a.ie_origem_proced 		ie_origem_proced,
                a.cd_procedimento_convenio 	cd_procedimento_convenio,
                null  				cd_material,
                null  				cd_material_convenio,
                null  				ds_material_convenio,
                null				cd_unidade_medida,
                a.qt_procedimento 		qt_item,
                a.vl_procedimento 		vl_item, ';

        ds_from_comum_w         := ' from conta_pac_nf_item b, ';

        ds_where_comum_w        := ' where 1=1 and b.nr_sequencia_nf = ' || nr_seq_nota_fiscal_p;

        ds_sql_select	:= ds_sql_select || chr(10) || ' select ';

        if (ie_gerar_agrupado_por_itens_w = 'C') then
                ds_sql_select	:= ds_sql_select || chr(10) || ' max(cd_material) cd_material, ';
        else
                ds_sql_select	:= ds_sql_select || chr(10) || ' cd_material, ';
        end if;

        ds_sql_select	:= ds_sql_select || chr(10) ||
                'cd_material_convenio,
                ds_material_convenio,
                cd_procedimento_convenio,
                ds_procedimento_convenio,';

        if (ie_gerar_agrupado_por_itens_w = 'C') then
                ds_sql_select	:= ds_sql_select || chr(10) || ' max(cd_unidade_medida) cd_unidade_medida, ';
        else
                ds_sql_select	:= ds_sql_select || chr(10) || ' cd_unidade_medida, ';
        end if;

                ds_sql_select	:= ds_sql_select || chr(10) || 
                'null nr_seq_regra,
                null nr_seq_ordem,';

        if (ie_gerar_agrupado_por_itens_w = 'C') then
                ds_sql_select	:= ds_sql_select || chr(10) || ' max(cd_procedimento) cd_procedimento, max(ie_origem_proced) ie_origem_proced, ';
        else
                ds_sql_select	:= ds_sql_select || chr(10) || ' cd_procedimento, ie_origem_proced, ';
        end if;

        ds_sql_select	:= ds_sql_select || chr(10) ||
                'sum(qt_item) 	 qt_item,
                sum(vl_original) vl_original,
                sum(vl_item) 	 vl_item, 
                nr_proc_interno ';

        if (ie_calc_valor_unit_w = 'S') then
                ds_sql_select     := ds_sql_select || chr(10) || ', vl_unitario ';
        else
                ds_sql_select     := ds_sql_select || chr(10) || ', null vl_unitario ';
        end if;

        ds_sql_select	:= ds_sql_select || chr(10) || ' from    (';

        if (coalesce(nr_interno_conta_p,0) > 0) then                
                if (ie_conta_deducao_w = 'S') then
                        ds_select_w     := ds_select_w || chr(10) || 'a.vl_procedimento vl_original, ';
                else
                        ds_select_w     := ds_select_w || chr(10) || 'round(nvl(obter_vl_item_conta_original(a.nr_sequencia,null),a.vl_procedimento)*a.qt_procedimento, 2) vl_original, ';
                end if;

                ds_where_w      := ds_where_w || chr(10) || 'and a.nr_interno_conta = ' || nr_interno_conta_p || ' and nvl(' || nr_interno_conta_p || ',0) > 0 ';
        else
                ds_select_w	:= ds_select_w || chr(10) || 
                ' decode(( select decode(count(1),0,' || var_n_w || ',' || var_s_w || ') from conta_pac_deducao_conv x where x.nr_seq_conta_des = cp.nr_interno_conta ), ' || var_s_w ||
                ', a.vl_procedimento, round(nvl(obter_vl_item_conta_original(a.nr_sequencia,null),a.vl_procedimento)*a.qt_procedimento,2)) vl_original, ';

                ds_from_w	:= ds_from_w || chr(10) || ' conta_paciente cp, ';

                ds_where_w	:= ds_where_w || chr(10) || ' and cp.nr_interno_conta = a.nr_interno_conta and cp.nr_seq_protocolo = ' || nr_seq_protocolo_p || 'and nvl(' || nr_seq_protocolo_p || ',0) > 0 ';
        end if;

        ds_select_w     := ds_select_w || chr(10) || ' decode(cd_procedimento_convenio, null, null, substr(Obter_Desc_Proc_Convenio(a.nr_sequencia, 0),1,120)) ds_procedimento_convenio, ';

        if (ie_gerar_agrupado_por_itens_w = 'C') then
                ds_select_w	:= ds_select_w || chr(10) || ' (select nr_proc_interno from proc_paciente_convenio d where d.nr_seq_procedimento = a.nr_sequencia) nr_proc_interno ';
        else
                ds_select_w	:= ds_select_w || chr(10) || ' null nr_proc_interno ';
        end if;

        ds_select_w     := ds_select_w || chr(10) || ', null vl_unitario ';

        ds_from_w       := ds_from_w || chr(10) || ' procedimento_paciente a ';

        ds_where_w      := ds_where_w || chr(10) || ' and nvl(a.nr_seq_proc_pacote, a.nr_sequencia) = a.nr_sequencia and a.nr_sequencia = b.nr_seq_propaci ';

        ds_sql_select	:= ds_sql_select || chr(10) || ds_select_w || chr(10) || ds_from_comum_w || chr(10) || ds_from_w || chr(10) || ds_where_comum_w || chr(10) || ds_where_w;

        --Material
        ds_from_w       := '';
        ds_where_w      := '';
        ds_select_w     := '';
        ds_select_w     :=
        ' select null                   cd_procedimento,
                null 			ie_origem_proced,
		null 			cd_procedimento_convenio,
                a.cd_material           cd_material, 
                a.cd_material_convenio 	cd_material_convenio,
		substr(obter_desc_matpaci_convenio(a.nr_sequencia), 1, 200) ds_material_convenio,
		a.cd_unidade_medida	cd_unidade_medida,
		a.qt_material 		qt_item,
		a.vl_material 		vl_item, ';

        ds_sql_select   := ds_sql_select || chr(10) || ' union all ';

        if (coalesce(nr_interno_conta_p,0) > 0) then
                if (ie_conta_deducao_w = 'S') then
                        ds_select_w     := ds_select_w || chr(10) || 'a.vl_material vl_original, ';
                else
                        ds_select_w     := ds_select_w || chr(10) || 'round(nvl(obter_vl_item_conta_original(null,a.nr_sequencia),nvl(a.vl_unitario,a.vl_material)) * a.qt_material,2) vl_original, ';
                end if;
                ds_where_w   := ds_where_w || chr(10) || ' and a.nr_interno_conta = ' || nr_interno_conta_p || 'and nvl(' || nr_interno_conta_p || ',0) > 0 ';
        else
                ds_select_w   := ds_select_w || chr(10) || 
                ' decode(( select decode(count(1),0,'|| var_n_w ||','|| var_s_w ||') from conta_pac_deducao_conv x where x.nr_seq_conta_des = cp.nr_interno_conta ),'|| var_s_w || 
                ', a.vl_material, round(nvl(obter_vl_item_conta_original(null,a.nr_sequencia),nvl(a.vl_unitario,a.vl_material)) * a.qt_material,2)) vl_original, ';

                ds_from_w	:= ds_from_w || chr(10) || ' conta_paciente cp, ';

                ds_where_w	:= ds_where_w || chr(10) || ' and cp.nr_interno_conta = a.nr_interno_conta and cp.nr_seq_protocolo = ' || nr_seq_protocolo_p || ' and ' || nr_seq_protocolo_p || 
                ' is not null and nvl(' || nr_seq_protocolo_p || ',0) > 0 ';
        end if;
        
        ds_select_w     := ds_select_w || chr(10) || 'null ds_procedimento_convenio, ';

        if (ie_gerar_agrupado_por_itens_w = 'C') then
                ds_select_w	:= ds_select_w || chr(10) || ' (select nr_proc_interno from mat_atend_pac_convenio d where d.nr_seq_material = a.nr_sequencia) nr_proc_interno ';
        else
                ds_select_w	:= ds_select_w || chr(10) || ' null nr_proc_interno ';
        end if;

        if (ie_calc_valor_unit_w = 'S') then
                ds_select_w     := ds_select_w || chr(10) || ', vl_unitario ';
        else
                ds_select_w     := ds_select_w || chr(10) || ', null vl_unitario ';
        end if;

        ds_from_w       := ds_from_w || chr(10) || ' material_atend_paciente a ';

        ds_where_w      := ds_where_w || chr(10) || ' and a.nr_sequencia = b.nr_seq_matpaci and a.nr_seq_proc_pacote is null ) ';

        ds_groupBy_w    := chr(10) || ' group by
                cd_material_convenio,
                ds_material_convenio,
                cd_procedimento_convenio,
                ds_procedimento_convenio,
                nr_proc_interno,
                vl_unitario';

        if (ie_gerar_agrupado_por_itens_w = 'S') then
                ds_groupBy_w	:= ds_groupBy_w || chr(10) || ', cd_material, cd_unidade_medida, cd_procedimento, ie_origem_proced ';
        end if;

        ds_sql_select	:= ds_sql_select || chr(10) || ds_select_w || chr(10) || ds_from_comum_w || chr(10) || ds_from_w || chr(10) || ds_where_comum_w || chr(10) || ds_where_w || chr(10) || ds_groupBy_w;

end if;

ds_sql_select	:= ds_sql_select || chr(10) ||         
' order by
        nr_seq_ordem,
        cd_procedimento,
        cd_material ';

select	max(b.ie_tipo_atendimento),
	max(a.cd_categoria_parametro)
into STRICT	ie_tipo_atendimento_w,
	cd_categoria_convenio_w
from	atendimento_paciente 	b,
	conta_paciente 		a
where	a.nr_atendimento	= b.nr_atendimento
and	a.nr_interno_conta	= nr_interno_conta_p;

select	count(1)
into STRICT	qt_reg_w
from	conta_pac_nf_item;

qt_item_calc_w		:= 0;
vl_proc_mat_acum_w	:= 0;
vl_desc_acum_w		:= 0;

open ds_cursor for EXECUTE ds_sql_select;
	loop
	fetch ds_cursor bulk collect into s_array limit 10000;
	vetor_c01_w(i) := s_array;
	i := i + 1;
	EXIT WHEN NOT FOUND; /* apply on ds_cursor */
	end loop;
close ds_cursor;

for i in 1..vetor_c01_w.count loop
	s_array := vetor_c01_w(i);
	for z in 1..s_array.count loop
                cd_conta_contabil_w	:= '';
                cd_centro_custo_w	:= null;
                nr_proc_interno_w       := null;
                qt_proc_mat_w	:= 1;
                vl_unitario_item_nf_w   := null;

                if (ie_gerar_agrupado_por_itens_w = 'N') then

                        if (s_array[z](.nr_seq_regra IS NOT NULL AND .nr_seq_regra::text <> '')) then
                                cd_procedimento_w	:= s_array[z].cd_procedimento;
                                ie_origem_proced_w	:= s_array[z].ie_origem_proced;
                        else
                                /* When a specific rule was not found to the item, get the superior rule by insurance to get the default procedure */

                                select	max(a.nr_sequencia)
                                into STRICT	nr_seq_regra_superior_w
                                from	regra_conta_nf a
                                where	coalesce(a.cd_estabelecimento,cd_estab_nota_fiscal_p)	= cd_estab_nota_fiscal_p
                                and	coalesce(a.cd_convenio,cd_convenio_p)			= cd_convenio_p;

                                if (nr_seq_regra_superior_w IS NOT NULL AND nr_seq_regra_superior_w::text <> '') then
                                        select	a.cd_proc_item_padrao,
                                                a.ie_origem_proc_padrao
                                        into STRICT	cd_procedimento_w,
                                                ie_origem_proced_w
                                        from	regra_conta_nf a
                                        where	a.nr_sequencia	= nr_seq_regra_superior_w;
                                end if;
                        end if;
                else
                        cd_procedimento_w	:= s_array[z].cd_procedimento;
                        ie_origem_proced_w	:= s_array[z].ie_origem_proced;
                        cd_material_w 		:= s_array[z].cd_material;
                        qt_proc_mat_w		:= s_array[z].qt_item;
                end if;

                if (ie_gerar_agrupado_por_itens_w = 'C') then
                        nr_proc_interno_w       := s_array[z].nr_proc_interno;
                end if;

                nr_seq_proc_interno_w	:= null;
                pr_desc_item_w		:= null;

                if (ie_calc_valor_unit_w = 'S') then
                        vl_unitario_item_nf_w           := s_array[z].vl_unitario;
                end if;

                if (coalesce(vl_unitario_item_nf_w::text, '') = '') then
                        if (qt_proc_mat_w > 0) then
                                vl_unitario_item_nf_w		:= dividir(coalesce(s_array[z].vl_original,s_array[z].vl_item),qt_proc_mat_w);
                        else
                                vl_unitario_item_nf_w		:= coalesce(s_array[z].vl_original,s_array[z].vl_item);
                        end if;
                end if;

                vl_total_item_nf_w			:= coalesce(s_array[z].vl_original,s_array[z].vl_item);
                vl_desc_item_w				:= coalesce(s_array[z].vl_original,s_array[z].vl_item) - s_array[z].vl_item;

                /* Nao pode haver desconto negativo, caso houver, considerar como original o maior valor */

                if (vl_desc_item_w < 0) then
                        vl_desc_item_w		:= 0;
                        vl_total_item_nf_w	:= s_array[z].vl_item;
                end if;

                vl_liquido_w				:= vl_total_item_nf_w;

                vl_proc_mat_w				:= s_array[z].vl_item;
                vl_proc_mat_acum_w			:= vl_proc_mat_acum_w + vl_proc_mat_w;
                vl_desc_acum_w				:= coalesce(vl_desc_acum_w,0) + coalesce(vl_desc_item_w,0);

                if (coalesce(vl_desc_item_w,0) > 0) then
                        pr_desc_item_w		:= dividir(vl_desc_item_w, coalesce(s_array[z].vl_original,s_array[z].vl_item)) * 100;
                end if;

                if (coalesce(qt_item_calc_w::text, '') = '') or (coalesce(qt_proc_mat_w::text, '') = '') then
                        --(-20011,'Erro ao Gravar Item da Nota Fiscal - Qtde');
                        CALL wheb_mensagem_pck.exibir_mensagem_abort(198442,'DS_ERRO_W='||ds_erro_w);
                elsif (coalesce(vl_unitario_item_nf_w::text, '') = '') or (coalesce(vl_desc_item_w::text, '') = '') or (coalesce(vl_proc_mat_w::text, '') = '') then
                        --(-20011,'Erro ao Gravar Item da Nota Fiscal - Valor');
                        CALL wheb_mensagem_pck.exibir_mensagem_abort(198443,'DS_ERRO_W='||ds_erro_w);
                end if;

                ie_tipo_conta_w		:= 2;

                begin
                select 	coalesce(cd_operacao_estoque,0)
                into STRICT	cd_operacao_estoque_w
                from 	operacao_nota
                where	cd_operacao_nf = cd_operacao_nf_p;
                exception when others then
                        cd_operacao_estoque_w := null;
                end;

                if (coalesce(cd_procedimento_w,0) <> 0) and (coalesce(ie_origem_proced_w,0) <> 0) then

                        SELECT * FROM Define_Conta_Procedimento(	cd_estab_nota_fiscal_p, cd_procedimento_w, ie_origem_proced_w, ie_tipo_conta_w, null, null, null, null, ie_tipo_convenio_p, cd_convenio_p, null, clock_timestamp(), cd_conta_contabil_w, cd_centro_custo_w, null, 'N', null, null, null, cd_operacao_estoque_w) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;

                elsif (coalesce(cd_material_w,0) <> 0) then

                        SELECT * FROM define_conta_material(	cd_estab_nota_fiscal_p, cd_material_w, ie_tipo_conta_w, null, null, null, null, ie_tipo_convenio_p, cd_convenio_p, null, null, null, clock_timestamp(), cd_conta_contabil_w, cd_centro_custo_w, null, 'N', null, null, null, cd_operacao_estoque_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
                end if;



                if (vl_proc_mat_w	<> 0) and -- se tem valor do item
                        (vl_unitario_item_nf_w	<> 0)	then -- se tem valor unitario do item
                        if (ie_conta_financ_nf_p = 'S') then
                                /* Edgar 10/05/2010, OS 212387, tratar conta financeira */

                                cd_conta_financ_w := obter_conta_financeira(	'E', cd_estab_nota_fiscal_p, cd_material_w, cd_procedimento_w, ie_origem_proced_w, null, cd_convenio_p, cd_cgc_p, cd_centro_custo_w, cd_conta_financ_w, null, cd_operacao_nf_p, null, ie_tipo_atendimento_w, cd_categoria_convenio_w, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
                        end if;

                        qt_item_calc_w		:= qt_item_calc_w + 1;

                        select 	coalesce(max(nr_item_nf),0)+1
                        into STRICT	nr_item_nf_w
                        from	nota_fiscal_item
                        where 	nr_sequencia = nr_seq_nota_fiscal_p;

                        vl_desconto_item_w := 0;
                        /* Valor original */

                        begin
                                select	substr(value,1,64)
                                into STRICT	ds_nls_territory_w
                                from	v$nls_parameters
                                where	parameter = 'NLS_TERRITORY';
                        exception
                        when others then
                                ds_nls_territory_w:=null;
                        end;

                        if (philips_param_pck.get_cd_pais = 2) or (upper(ds_nls_territory_w) = 'MEXICO') then
                                vl_desconto_item_w := coalesce(vl_desc_item_w, 0);

                                if (cd_moeda_p IS NOT NULL AND cd_moeda_p::text <> '') and (coalesce(vl_cotacao_p,0) > 0) then
                                   vl_total_estrangeiro_w := (vl_proc_mat_w/vl_cotacao_p);
                                   vl_unit_estrangeiro_w  := (vl_total_estrangeiro_w/qt_proc_mat_w);
                                end if;
                        end if;

                        insert into nota_fiscal_item(
                                nr_sequencia, 		cd_estabelecimento,
                                cd_cgc_emitente,	cd_serie_nf,
                                nr_nota_fiscal,		nr_sequencia_nf,
                                nr_item_nf,		cd_natureza_operacao,
                                dt_atualizacao,		nm_usuario,
                                qt_item_nf,		vl_unitario_item_nf,
                                vl_total_item_nf,	vl_frete,
                                vl_desconto,		vl_despesa_acessoria,
                                vl_desconto_rateio,	vl_seguro,
                                vl_liquido,		cd_material,
                                cd_procedimento,	cd_procedimento_loc, ie_origem_proced,
                                cd_local_estoque,	ds_observacao,
                                nr_seq_conta_financ,	ds_complemento,
                                nr_atendimento,
                                cd_centro_custo,	cd_conta_contabil,
                                nr_seq_proc_interno,	pr_desconto,
                                vl_total_estrangeiro,   vl_unit_estrangeiro,
                                cd_sequencia_parametro,
                                cd_proc_convenio, 	ds_proc_convenio,
                                cd_material_convenio,   ds_material_convenio,
                                cd_unidade_medida_compra, cd_unidade_medida_estoque,
                                cd_clave_agrup)
                        values (	nr_seq_nota_fiscal_p,	cd_estab_nota_fiscal_p,
                                cd_cgc_emitente_p,	cd_serie_nf_p,
                                nr_nota_fiscal_p,	nr_sequencia_nf_p,
                                nr_item_nf_w,		cd_nat_oper_nf_p,
                                clock_timestamp(),		nm_usuario_p,
                                qt_proc_mat_w,		vl_unitario_item_nf_w,
                                vl_total_item_nf_w,	0,
                                vl_desconto_item_w,	0,
                                0,      0,
                                vl_total_item_nf_w,	CASE WHEN cd_material_w=0 THEN  null  ELSE cd_material_w END ,
                                CASE WHEN cd_procedimento_w=0 THEN  null  ELSE cd_procedimento_w END ,
                                CASE WHEN cd_procedimento_w=0 THEN  null  ELSE cd_procedimento_w END ,
                                CASE WHEN ie_origem_proced_w=0 THEN  null  ELSE ie_origem_proced_w END ,
                                null,			ds_observacao_w,
                                cd_conta_financ_w,	ds_complemento_p,
                                CASE WHEN coalesce(nr_atendimento_p,0)=0 THEN null  ELSE nr_atendimento_p END ,
                                cd_centro_custo_w,	cd_conta_contabil_w,
                                nr_seq_proc_interno_w,	pr_desc_item_w,
                                vl_total_estrangeiro_w, vl_unit_estrangeiro_w,
                                philips_contabil_pck.get_parametro_conta_contabil,
                                s_array[z].cd_procedimento_convenio, 	s_array[z].ds_procedimento_convenio,
                                s_array[z].cd_material_convenio, 		s_array[z].ds_material_convenio,
                                s_array[z].cd_unidade_medida,		s_array[z].cd_unidade_medida,
                                nr_proc_interno_w);

                        if (s_array[z](.nr_seq_regra IS NOT NULL AND .nr_seq_regra::text <> '')) then
                                update	conta_pac_nf_item
                                set	nr_item_nf	= nr_item_nf_w
                                where	nr_sequencia_nf = nr_seq_nota_fiscal_p
                                and	nr_seq_regra	= s_array[z].nr_seq_regra;
                        else
                                /* Update the items of patient account that entered the default rule */

                                update	conta_pac_nf_item
                                set	nr_item_nf	= nr_item_nf_w
                                where	nr_sequencia_nf = nr_seq_nota_fiscal_p
                                and	coalesce(nr_seq_regra::text, '') = '';
                        end if;
                end if;
        end loop;
end loop;

vl_proc_mat_acum_p			:= vl_proc_mat_acum_w;
vl_desc_acum_p				:= vl_desc_acum_w;

/* Comm it only in first procedure */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_item_nf_pac_estrut ( nr_seq_nota_fiscal_p bigint, nr_atendimento_p bigint, nr_interno_conta_p bigint, nr_seq_protocolo_p bigint, ie_tipo_convenio_p bigint, cd_convenio_p bigint, nr_nota_fiscal_p text, nr_sequencia_nf_p bigint, cd_operacao_nf_p bigint, cd_serie_nf_p text, cd_cgc_p text, cd_moeda_p bigint, vl_cotacao_p bigint, cd_nat_oper_nf_p text, ie_conta_financ_nf_p text, ds_complemento_p text, cd_estab_nota_fiscal_p bigint, cd_cgc_emitente_p text, vl_proc_mat_acum_p INOUT bigint, vl_desc_acum_p INOUT bigint, nm_usuario_p text) FROM PUBLIC;

