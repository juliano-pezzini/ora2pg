-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_retorno_movto_to_item ( NR_SEQUENCIA_P bigint, NM_USUARIO_P text, ie_conta_sem_titulo_p text, nr_meses_conta_p bigint) AS $body$
DECLARE


dt_ref_preco_w		timestamp;
ie_doc_retorno_w	varchar(15);
nr_doc_w		varchar(20);
ie_tipo_guia_w		varchar(2);
ie_tipo_guia_ww		varchar(2);
nr_pront_w		bigint;
nr_doc_conv_w		varchar(20);
cd_item_w		varchar(255);
vl_pago_w		double precision;
vl_pago_total_w		double precision;
nr_conta_w		bigint;
nr_interno_conta_w	bigint;
vl_guia_w		double precision;
vl_saldo_w		double precision;
cd_categoria_w		varchar(10);
ie_glosado_w		varchar(1) := 'P';
ie_glosa_w		varchar(1) := 'N';
vl_glosado_w		double precision := 0;
vl_amenor_w		double precision := 0;
vl_adicional_w		double precision := 0;
vl_cobrado_w		double precision := 0;
nr_sequencia_w		bigint;
nr_items_w		bigint := 0;
ie_prontuario_w		bigint := 0;
nr_doc_convenio		varchar(255);
ie_retorno_glosa_w	varchar(2);
nm_atributo_w		varchar(50);
nr_atendimento_w	bigint;
vl_atributo_w		varchar(80);
nr_doc_convenio_w	varchar(255);
cd_usuario_convenio_w	varchar(255);
ds_regra_w		varchar(2000) := '';
vl_adequado_w		double precision;
qt_conta_w		integer;
cd_estab_retorno_w	integer;
vl_glosa_w		double precision;
vl_glosa_aceita_grg_w	double precision;
qt_somente_glosa_w	bigint;
qt_movimento_w		bigint;
nr_conta_convenio_w	varchar(255);
IE_GLOSA_ADIC_RET_w	varchar(255);
ie_tipo_prot_w		bigint;
cd_convenio_w		bigint;
nr_seq_protocolo_w	bigint;
ds_mascara_w		varchar(255);
cd_doc_retorno_w	varchar(255);
ie_libera_repasse_w	varchar(255);
dt_execucao_w		timestamp;
cd_autor_mascara_w	varchar(20);
cd_autorizacao_w	varchar(255);
tp_paciente_w		varchar(1);
cd_motivo_glosa_w	integer;
qt_guia_w		bigint;
ie_doc_origem_w		varchar(15);
IE_RET_OUTROS_CONV_W	varchar(15);
ie_valor_adequado_w	varchar(10) := 'N';
ie_codigo_usuario_w	varchar(10) := 'N';
vl_saldo_guia_w		double precision;
ie_somente_com_saldo_w	varchar(10) := 'N';
ie_glosa_pendente_menor_w	varchar(10) := 'N';
ie_valor_pago_ret_w	varchar(10) := 'N';
ie_conta_outro_estab_w	varchar(10) := 'N';
cd_autorizacao_movto_w	varchar(255);
ie_pago_acumulativo_w	varchar(10) := 'N';
ie_doc_retorno_orig_w	varchar(10);
nr_doc_number_w		bigint;
ie_permitecontasoutroretorno_w	varchar(1);
nr_titulo_w		convenio_retorno_item.nr_titulo%type;
vl_adic_item_w		double precision;
vl_pago_real_w		double precision;
ie_valor_pago_cobrado_ret_w	varchar(1);
vl_participante_w	conta_paciente_guia.vl_participante%type;
vl_guia_ww		conta_paciente_guia.vl_guia%type;
cd_estab_logado_w	estabelecimento.cd_estabelecimento%type := wheb_usuario_pck.get_cd_estabelecimento;
cd_perfil_w		perfil.cd_perfil%type := obter_perfil_ativo;
ie_guia_outros_conv_w	varchar(1) := 'N';

dt_pagamento_w	convenio_retorno_movto.dt_mesano_pagamento%type;

nr_mes_ant_w		bigint;
nr_mes_ant_conta_w	bigint;


C01 CURSOR FOR
-- Edgar 30/04/2010, OS 213588, nao colocar  mais campos neste select, da problema de agrupamento
SELECT	nr_conta_convenio,
	nr_prontuario,
	nr_doc_convenio,
	coalesce(nr_conta,0),
	CASE WHEN ie_doc_retorno_w='ATCTGUIA' THEN  nr_atendimento  ELSE null END ,
	ie_tipo_guia,
	sum(obter_valor_ret_movto(nr_sequencia,'P')) vl_pago,
	sum(obter_valor_ret_movto(nr_sequencia,'A')) vl_adequado,
	sum(obter_valor_ret_movto(nr_sequencia,'ADIC')) vl_adic_item,
	sum(obter_valor_ret_movto(nr_sequencia,'PR')) vl_pago_real,
	sum(vl_glosa),
	sum(vl_cobrado),	
	CASE WHEN coalesce(ie_codigo_usuario_w,'N')='S' THEN  cd_usuario_convenio  ELSE null END ,
	CASE WHEN ie_doc_retorno_w='CUDTPR' THEN  max(cd_item)  ELSE null END ,
	CASE WHEN ie_doc_retorno_w='CUDTPR' THEN  max(dt_execucao)  ELSE null END ,
	CASE WHEN ie_doc_retorno_w='GUIASENHA' THEN  cd_autorizacao  ELSE null END ,
	CASE WHEN ie_doc_retorno_w='GTPA' THEN  tp_paciente  ELSE null END ,
	CASE WHEN ie_doc_retorno_w='GUIAUT' THEN  cd_autorizacao  ELSE null END ,
	dt_mesano_pagamento
from	convenio_retorno_movto
where	coalesce(ie_situacao_item,'X') <> 'G'
and	coalesce(ie_gera_resumo,'S') = 'S'
and	coalesce(nr_seq_ret_item::text, '') = ''
and	nr_seq_retorno	= nr_sequencia_p
group by	nr_conta_convenio,
	nr_prontuario,
	nr_doc_convenio,
	ie_tipo_guia,
	coalesce(nr_conta,0),
	CASE WHEN coalesce(ie_codigo_usuario_w,'N')='S' THEN  cd_usuario_convenio  ELSE null END ,
	CASE WHEN ie_doc_retorno_w='GUIASENHA' THEN  cd_autorizacao  ELSE null END ,
	CASE WHEN ie_doc_retorno_w='ATCTGUIA' THEN  nr_atendimento  ELSE null END ,
	CASE WHEN ie_doc_retorno_w='GTPA' THEN  tp_paciente  ELSE null END ,
	CASE WHEN ie_doc_retorno_w='GUIAUT' THEN  cd_autorizacao  ELSE null END ,
	dt_mesano_pagamento;

C02 CURSOR FOR
SELECT	/*+ INDEX (B CONPAGU_I2) */	a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	b.vl_guia
from	conta_paciente_guia b,
	pessoa_fisica d,
	atendimento_paciente c,
	conta_paciente a
where	coalesce(substr(tiss_obter_doc_masc(b.cd_autorizacao,ds_mascara_w),1,255),'X') = coalesce(nr_doc_w,'X')
and	coalesce(b.dt_convenio, clock_timestamp())	> clock_timestamp() - interval '120 days'
and	a.nr_interno_conta		= b.nr_interno_conta
and	d.nr_prontuario			= coalesce(nr_pront_w,d.nr_prontuario)
and	c.cd_pessoa_fisica		= d.cd_pessoa_fisica
and	c.cd_estabelecimento		= cd_estab_retorno_w
and	a.nr_atendimento		= c.nr_atendimento
and	a.ie_status_acerto 		= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	coalesce(a.dt_mesano_referencia,clock_timestamp()) >= (clock_timestamp() - nr_meses_conta_p)
and (coalesce(IE_RET_OUTROS_CONV_W,'N') = 'S' or a.cd_convenio_parametro = cd_convenio_w);

/* Francisco - OS 171990 - 14/10/2009 - Separei em 1 cursor para cada tipo de documento
e em cada cursor tratei em 2 selects (1 para fazer sem a function do TISS e outro com "ds_mascara_w")
Estava causando muito problema de performance */
C030 CURSOR FOR
SELECT	a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	'X' ie_tipo_guia,
	b.vl_guia
from	conta_paciente a,
	conta_paciente_guia b
where	a.nr_interno_conta		= b.nr_interno_conta
and	a.ie_status_acerto		= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	coalesce(b.dt_convenio, clock_timestamp()) > clock_timestamp() - nr_meses_conta_p
and	coalesce(a.dt_mesano_referencia,clock_timestamp()) >= (clock_timestamp() - nr_meses_conta_p)
and (coalesce(IE_RET_OUTROS_CONV_W,'N') = 'S' or a.cd_convenio_parametro = cd_convenio_w)
and	((b.cd_autorizacao = nr_doc_w) or (coalesce(nr_atendimento_w::text, '') = '' and ie_doc_retorno_orig_w = 'ATCTGUIA' and a.nr_atendimento = nr_doc_number_w))
and (coalesce(ie_doc_retorno_w::text, '') = '' or ie_doc_retorno_w = 'GUIA')
and	to_char(a.cd_estabelecimento) = cd_estab_retorno_w
and	((ie_conta_sem_titulo_p	= 'S') or
	 exists (	SELECT	1
		from	titulo_receber x
		where	x.nr_interno_conta	= a.nr_interno_conta
		
union

		select	1
		from	titulo_receber x
		where	x.nr_seq_protocolo	= a.nr_seq_protocolo))
and	ds_mascara_w = '-1'

union

select	a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	'X' ie_tipo_guia,
	b.vl_guia
from	conta_paciente a,
	conta_paciente_guia b
where	a.nr_interno_conta		= b.nr_interno_conta
and	a.ie_status_acerto		= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	coalesce(b.dt_convenio, clock_timestamp()) > clock_timestamp() - nr_meses_conta_p
and	coalesce(a.dt_mesano_referencia,clock_timestamp()) >= (clock_timestamp() - nr_meses_conta_p)
and (coalesce(IE_RET_OUTROS_CONV_W,'N') = 'S' or a.cd_convenio_parametro = cd_convenio_w)
and	coalesce(tiss_obter_doc_masc(b.cd_autorizacao, ds_mascara_w),'X') = coalesce(nr_doc_w,'X')
and	coalesce(ie_doc_retorno_w::text, '') = ''
and	to_char(a.cd_estabelecimento) = cd_estab_retorno_w
and	((ie_conta_sem_titulo_p	= 'S') or
	 exists (	select	1
		from	titulo_receber x
		where	x.nr_interno_conta	= a.nr_interno_conta
		
union

		select	1
		from	titulo_receber x
		where	x.nr_seq_protocolo	= a.nr_seq_protocolo))
and	ds_mascara_w <> '-1';

/* CONTA sem mascara */

c031 CURSOR FOR
SELECT	a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	'X' ie_tipo_guia,
	b.vl_guia
from	conta_paciente_guia b,
	conta_paciente a
where	coalesce(b.dt_convenio, clock_timestamp()) > clock_timestamp() - nr_meses_conta_p
and	substr(obter_se_conta_retorno(nr_sequencia_p,a.nr_interno_conta),1,255) = 'S'
and	a.nr_interno_conta		= b.nr_interno_conta
and (ie_conta_sem_titulo_p = 'S' or
	exists (SELECT	1
	from	titulo_receber x
	where	x.nr_interno_conta	= a.nr_interno_conta
	
union

	select	1
	from	titulo_receber x
	where	x.nr_seq_protocolo	= a.nr_seq_protocolo))
and	a.ie_status_acerto	= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	coalesce(a.dt_mesano_referencia,clock_timestamp()) >= (clock_timestamp() - nr_meses_conta_p)
and (a.cd_estabelecimento	= cd_estab_retorno_w or ie_conta_outro_estab_w = 'S')
and (coalesce(IE_RET_OUTROS_CONV_W,'N') = 'S' or a.cd_convenio_parametro = cd_convenio_w)
and	a.nr_interno_conta	= nr_conta_w;

c032 CURSOR FOR
SELECT	a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	coalesce(b.ie_tipo_guia,'X') ie_tipo_guia,
	b.vl_guia
from	conta_paciente a,
	conta_paciente_guia b
where	a.nr_interno_conta		= b.nr_interno_conta
and	a.ie_status_acerto		= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	coalesce(b.dt_convenio, clock_timestamp()) > clock_timestamp() - nr_meses_conta_p
and	coalesce(a.dt_mesano_referencia,clock_timestamp()) >= (clock_timestamp() - nr_meses_conta_p)
and	a.cd_convenio_parametro	= cd_convenio_w
and	coalesce(IE_RET_OUTROS_CONV_W, 'N') = 'N'
and	b.cd_autorizacao	= nr_doc_w
and	ie_doc_retorno_w		= 'GUIA+TIPO'
and	coalesce(b.ie_tipo_guia,'X')	= coalesce(ie_tipo_guia_w, coalesce(b.ie_tipo_guia,'X'))
and	to_char(a.cd_estabelecimento)	= cd_estab_retorno_w
and	((ie_conta_sem_titulo_p	= 'S') or
	 exists (SELECT	1
		from	titulo_receber x
		where	x.nr_interno_conta	= a.nr_interno_conta
		
union

		select	1
		from	titulo_receber x
		where	x.nr_seq_protocolo	= a.nr_seq_protocolo))
and	ds_mascara_w = '-1'

union

select	a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	coalesce(b.ie_tipo_guia,'X') ie_tipo_guia,
	b.vl_guia
from	conta_paciente a,
	conta_paciente_guia b
where	a.nr_interno_conta		= b.nr_interno_conta
and	a.ie_status_acerto		= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	coalesce(b.dt_convenio, clock_timestamp()) > clock_timestamp() - nr_meses_conta_p
and	coalesce(a.dt_mesano_referencia,clock_timestamp()) >= (clock_timestamp() - nr_meses_conta_p)
and	coalesce(IE_RET_OUTROS_CONV_W, 'N') = 'S'
and	b.cd_autorizacao	= nr_doc_w
and	ie_doc_retorno_w		= 'GUIA+TIPO'
and	coalesce(b.ie_tipo_guia,'X')	= coalesce(ie_tipo_guia_w, coalesce(b.ie_tipo_guia,'X'))
and	to_char(a.cd_estabelecimento)	= cd_estab_retorno_w
and	((ie_conta_sem_titulo_p	= 'S') or
	 exists (select	1
		from	titulo_receber x
		where	x.nr_interno_conta	= a.nr_interno_conta
		
union

		select	1
		from	titulo_receber x
		where	x.nr_seq_protocolo	= a.nr_seq_protocolo))
and	ds_mascara_w = '-1'

union

select	/*+ INDEX (B CONPAGU_CONPACI_FK_I) */ a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	coalesce(b.ie_tipo_guia,'X') ie_tipo_guia,
	b.vl_guia
from	conta_paciente a,
	conta_paciente_guia b
where	a.nr_interno_conta		= b.nr_interno_conta
and	a.ie_status_acerto		= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	coalesce(b.dt_convenio, clock_timestamp()) > clock_timestamp() - nr_meses_conta_p
and	coalesce(a.dt_mesano_referencia,clock_timestamp()) >= (clock_timestamp() - nr_meses_conta_p)
and	a.cd_convenio_parametro	= cd_convenio_w
and	coalesce(IE_RET_OUTROS_CONV_W, 'N') = 'N'
and	ie_doc_retorno_w		= 'GUIA+TIPO'
and	coalesce(b.ie_tipo_guia,'X')	= coalesce(ie_tipo_guia_w, coalesce(b.ie_tipo_guia,'X'))
and	to_char(a.cd_estabelecimento)	= cd_estab_retorno_w
and	b.cd_autorizacao	= cd_autor_mascara_w
and	((ie_conta_sem_titulo_p	= 'S') or
	 exists (select	1
		from	titulo_receber x
		where	x.nr_interno_conta	= a.nr_interno_conta
		
union

		select	1
		from	titulo_receber x
		where	x.nr_seq_protocolo	= a.nr_seq_protocolo))
and	ds_mascara_w <> '-1'

union

select	/*+ INDEX (B CONPAGU_CONPACI_FK_I) */ a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	coalesce(b.ie_tipo_guia,'X') ie_tipo_guia,
	b.vl_guia
from	conta_paciente a,
	conta_paciente_guia b
where	a.nr_interno_conta		= b.nr_interno_conta
and	a.ie_status_acerto		= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	coalesce(b.dt_convenio, clock_timestamp()) > clock_timestamp() - nr_meses_conta_p
and	coalesce(a.dt_mesano_referencia,clock_timestamp()) >= (clock_timestamp() - nr_meses_conta_p)
and	coalesce(IE_RET_OUTROS_CONV_W, 'N') = 'S'
and	ie_doc_retorno_w		= 'GUIA+TIPO'
and	coalesce(b.ie_tipo_guia,'X')	= coalesce(ie_tipo_guia_w, coalesce(b.ie_tipo_guia,'X'))
and	to_char(a.cd_estabelecimento)	= cd_estab_retorno_w
and	b.cd_autorizacao	= cd_autor_mascara_w
and	((ie_conta_sem_titulo_p	= 'S') or
	 exists (select	1
		from	titulo_receber x
		where	x.nr_interno_conta	= a.nr_interno_conta
		
union

		select	1
		from	titulo_receber x
		where	x.nr_seq_protocolo	= a.nr_seq_protocolo))
and	ds_mascara_w <> '-1';

c033 CURSOR FOR
/* Elton 04/11/2008 OS 105302 - Incluso tratamento para o Cod de retorno "Nmero da conta de convnio + guia" */

SELECT  a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	'X' ie_tipo_guia,
	b.vl_guia
from	conta_paciente_guia b,
	conta_paciente a
where	substr(obter_se_conta_retorno(nr_sequencia_p,a.nr_interno_conta),1,255) = 'S'
and	a.nr_interno_conta		= b.nr_interno_conta
and	a.ie_status_acerto		= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	coalesce(b.dt_convenio, clock_timestamp()) > clock_timestamp() - nr_meses_conta_p
and	coalesce(a.dt_mesano_referencia,clock_timestamp()) >= (clock_timestamp() - nr_meses_conta_p)
and (coalesce(IE_RET_OUTROS_CONV_W,'N') = 'S' or a.cd_convenio_parametro = cd_convenio_w)
and	b.cd_autorizacao		= nr_doc_w
and	a.nr_conta_convenio	= nr_conta_convenio_w
and	ie_doc_retorno_w		= 'CCONVGUIA'
and	to_char(a.cd_estabelecimento) = cd_estab_retorno_w
and	((ie_conta_sem_titulo_p	= 'S') or
	 exists (SELECT	1
		from	titulo_receber x
		where	x.nr_interno_conta	= a.nr_interno_conta
		
union

		select	1
		from	titulo_receber x
		where	x.nr_seq_protocolo	= a.nr_seq_protocolo))
and	ds_mascara_w = '-1'

union

select  a.nr_interno_conta,
	a.cd_categoria_calculo,
		b.cd_autorizacao,
	'X' ie_tipo_guia,
	b.vl_guia
from	conta_paciente_guia b,
	conta_paciente a
where	substr(obter_se_conta_retorno(nr_sequencia_p,a.nr_interno_conta),1,255) = 'S'
and	a.nr_interno_conta		= b.nr_interno_conta
and	a.ie_status_acerto		= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	coalesce(b.dt_convenio, clock_timestamp()) > clock_timestamp() - nr_meses_conta_p
and	coalesce(a.dt_mesano_referencia,clock_timestamp()) >= (clock_timestamp() - nr_meses_conta_p)
and (coalesce(IE_RET_OUTROS_CONV_W,'N') = 'S' or a.cd_convenio_parametro = cd_convenio_w)
and	tiss_obter_doc_masc(a.nr_conta_convenio,ds_mascara_w) = nr_conta_convenio_w
and	a.nr_conta_convenio	= nr_conta_convenio_w
and	ie_doc_retorno_w		= 'CCONVGUIA'
and	to_char(a.cd_estabelecimento) = cd_estab_retorno_w
and	((ie_conta_sem_titulo_p	= 'S') or
	 exists (select	1
		from	titulo_receber x
		where	x.nr_interno_conta	= a.nr_interno_conta
		
union

		select	1
		from	titulo_receber x
		where	x.nr_seq_protocolo	= a.nr_seq_protocolo))
and	ds_mascara_w <> '-1';

c034 CURSOR FOR 		-- Edgar 20/04/2010, OS 192624, localizar guia pelo cd_usuario_convenio, cd_procedimento e dt_procedimento
SELECT	a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	'X' ie_tipo_guia,
	b.vl_guia
from	conta_paciente_guia b,
	conta_paciente a
where	a.nr_interno_conta			= b.nr_interno_conta
and	a.ie_status_acerto			= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	coalesce(b.dt_convenio, clock_timestamp()) > clock_timestamp() - nr_meses_conta_p
and	coalesce(a.dt_mesano_referencia,clock_timestamp())	>= (clock_timestamp() - nr_meses_conta_p)
and	a.cd_convenio_parametro			= cd_convenio_w
and	to_char(a.cd_estabelecimento)		= cd_estab_retorno_w
and	a.nr_atendimento in (select	x.nr_atendimento
				from	atend_categoria_convenio x
				where	x.cd_usuario_convenio	= cd_usuario_convenio_w
				and	x.cd_convenio		= cd_convenio_w)
and	exists (select	1
		from	procedimento_paciente x
		where	x.nr_interno_conta		= a.nr_interno_conta
		and	coalesce(x.cd_motivo_exc_conta::text, '') = ''
		and	to_char(x.cd_procedimento)	= cd_item_w
		and	trunc(x.dt_procedimento, 'dd')	= dt_execucao_w);

c035 CURSOR FOR
SELECT	a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	'X' ie_tipo_guia,
	b.vl_guia
from	conta_paciente_guia b,
	conta_paciente a
where	b.cd_autorizacao				= nr_doc_w
and	coalesce(b.dt_convenio, clock_timestamp())			> clock_timestamp() - nr_meses_conta_p
and	a.nr_interno_conta				= b.nr_interno_conta
and	((ie_conta_sem_titulo_p	= 'S') or
	exists (	SELECT	1
		from	titulo_receber x
		where	x.nr_interno_conta	= a.nr_interno_conta
		
union

		select	1
		from	titulo_receber x
		where	x.nr_seq_protocolo	= a.nr_seq_protocolo))
and	obter_senha_atendimento(a.nr_atendimento)	= cd_autorizacao_w
and	a.ie_status_acerto				= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	coalesce(a.dt_mesano_referencia,clock_timestamp())		>= (clock_timestamp() - nr_meses_conta_p)
and (coalesce(IE_RET_OUTROS_CONV_W,'N') = 'S' or a.cd_convenio_parametro = cd_convenio_w)
and	to_char(a.cd_estabelecimento) 		= cd_estab_retorno_w
and	ie_doc_retorno_w				= 'GUIASENHA'
and	ds_mascara_w				= '-1';

c036 CURSOR FOR
SELECT	a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	'X' ie_tipo_guia,
	b.vl_guia
from	conta_paciente_guia b,
	conta_paciente a
where	a.nr_atendimento				= nr_atendimento_w
and	coalesce(b.dt_convenio, clock_timestamp()) 			> clock_timestamp() - nr_meses_conta_p
and	a.nr_interno_conta				= b.nr_interno_conta
and	((ie_conta_sem_titulo_p			= 'S') or
	exists (	SELECT	1
		from	titulo_receber x
		where	x.nr_interno_conta	= a.nr_interno_conta
		
union

		select	1
		from	titulo_receber x
		where	x.nr_seq_protocolo	= a.nr_seq_protocolo))
and	a.ie_status_acerto				= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	coalesce(a.dt_mesano_referencia,clock_timestamp())		>= (clock_timestamp() - nr_meses_conta_p)
and (coalesce(IE_RET_OUTROS_CONV_W,'N') = 'S' or a.cd_convenio_parametro = cd_convenio_w)
and	to_char(a.cd_estabelecimento) 		= cd_estab_retorno_w;

C04 CURSOR FOR
SELECT	a.nm_atributo,
	b.vl_atributo
from	convenio_ret_regra_item b,
	convenio_ret_regra a
where	a.nr_sequencia	= b.nr_seq_regra
and	a.cd_convenio	= cd_convenio_w
order by	1, 2;

-- dsantos em 20/11/2009 - regra para tratar campo ie_libera_repasse
c06 CURSOR FOR
SELECT	a.ie_libera_repasse
from	regra_campo_lib_rep a
where	(((coalesce(vl_amenor_w,0) <> 0) and (a.ie_regra = 2)) or
	 ((coalesce(vl_glosado_w,0) <> 0) and (a.ie_regra = 3)) or
	 ((coalesce(vl_pago_w,0) = 0) and (a.ie_regra = 4)) or
	 ((coalesce(vl_amenor_w,0) = 0) and (coalesce(vl_glosado_w,0) = 0) and (a.ie_regra = 1)))
and	a.cd_estabelecimento	= cd_estab_retorno_w
and	coalesce(a.cd_convenio, coalesce(cd_convenio_w,0)) = coalesce(cd_convenio_w, 0);

c05 CURSOR FOR
SELECT	coalesce(ds_mascara_hosp,'-1')
from	tiss_regra_ret_guia
where	coalesce(ie_dig_guia_hosp,length(cd_doc_retorno_w))	= length(cd_doc_retorno_w)
and	coalesce(ie_tipo_protocolo, coalesce(ie_tipo_prot_w,0))	= coalesce(ie_tipo_prot_w,0)
and	cd_estabelecimento	= cd_estab_retorno_w
and	cd_convenio		= cd_convenio_w;

/* ahoffelder - OS 290089 - 22/02/2011 - Numero da conta do convenio */

c037 CURSOR FOR
SELECT  a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	'X' ie_tipo_guia,
	obter_saldo_conpaci(b.nr_interno_conta,b.cd_autorizacao) vl_guia
from	conta_paciente_guia b,
	conta_paciente a
where	substr(obter_se_conta_retorno(nr_sequencia_p,a.nr_interno_conta),1,255) = 'S'
and	a.nr_interno_conta		= b.nr_interno_conta
and	a.ie_status_acerto		= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	coalesce(b.dt_convenio, clock_timestamp()) > clock_timestamp() - nr_meses_conta_p
and	coalesce(a.dt_mesano_referencia,clock_timestamp()) >= (clock_timestamp() - nr_meses_conta_p)
and	a.cd_convenio_parametro	= cd_convenio_w
and	a.nr_conta_convenio	= nr_conta_convenio_w
and	ie_doc_retorno_w		in ('CCONV','CCONVIMP')
and	to_char(a.cd_estabelecimento) = cd_estab_retorno_w
and	((ie_conta_sem_titulo_p	= 'S') or
	 exists (SELECT	1
		from	titulo_receber x
		where	x.nr_interno_conta	= a.nr_interno_conta
		
union

		select	1
		from	titulo_receber x
		where	x.nr_seq_protocolo	= a.nr_seq_protocolo));

/* ahoffelder - OS 298327 - 07/03/2011 - Guia + Tipo do atendimento */

c038 CURSOR FOR
SELECT	a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	coalesce(b.ie_tipo_guia,'X') ie_tipo_guia,
	b.vl_guia
from	atendimento_paciente c,
	conta_paciente a,
	conta_paciente_guia b
where	((tp_paciente_w = 'I' and c.ie_tipo_atendimento = 1) or (tp_paciente_w = 'E' and c.ie_tipo_atendimento in (3,8,7)))
and	a.nr_atendimento		= c.nr_atendimento
and	a.nr_interno_conta		= b.nr_interno_conta
and	a.ie_status_acerto		= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	coalesce(b.dt_convenio, clock_timestamp()) > clock_timestamp() - nr_meses_conta_p
and	coalesce(a.dt_mesano_referencia,clock_timestamp()) >= (clock_timestamp() - nr_meses_conta_p)
and (coalesce(IE_RET_OUTROS_CONV_W,'N') = 'S' or a.cd_convenio_parametro = cd_convenio_w)
and	ie_doc_retorno_w		= 'GTPA'
and	to_char(a.cd_estabelecimento)	= cd_estab_retorno_w
and	((ds_mascara_w = '-1' and b.cd_autorizacao = nr_doc_w) or (b.cd_autorizacao = cd_autor_mascara_w))
and	((ie_conta_sem_titulo_p	= 'S') or
	 exists (SELECT	1
		from	titulo_receber x
		where	x.nr_interno_conta	= a.nr_interno_conta
		
union

		select	1
		from	titulo_receber x
		where	x.nr_seq_protocolo	= a.nr_seq_protocolo));

/*lhalves OS299948 em 24/03/2011 - Guia + Valor da conta */

c039 CURSOR FOR
SELECT	a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	coalesce(b.ie_tipo_guia,'X') ie_tipo_guia,
	b.vl_guia
from	atendimento_paciente c,
	conta_paciente a,
	conta_paciente_guia b
where	obter_valor_conta(a.nr_interno_conta, 0) = vl_cobrado_w
and	a.nr_atendimento			= c.nr_atendimento
and	a.nr_interno_conta			= b.nr_interno_conta
and	a.ie_status_acerto			= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	coalesce(b.dt_convenio, clock_timestamp()) > clock_timestamp() - nr_meses_conta_p
and	coalesce(a.dt_mesano_referencia,clock_timestamp()) >= (clock_timestamp() - nr_meses_conta_p)
and (coalesce(IE_RET_OUTROS_CONV_W,'N') = 'S' or a.cd_convenio_parametro = cd_convenio_w)
and	ie_doc_retorno_w		= 'GUIAVL'
and	to_char(a.cd_estabelecimento)	= cd_estab_retorno_w
and	((ds_mascara_w = '-1' and b.cd_autorizacao = nr_doc_w) or (b.cd_autorizacao = cd_autor_mascara_w))
and	((ie_conta_sem_titulo_p	= 'S') or
	 exists (SELECT	1
		from	titulo_receber x
		where	x.nr_interno_conta	= a.nr_interno_conta
		
union

		select	1
		from	titulo_receber x
		where	x.nr_seq_protocolo	= a.nr_seq_protocolo));

/* ahoffelder - OS 386582 - Senha do atendimento ou guia */

c040 CURSOR FOR
SELECT	distinct
	a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	coalesce(b.ie_tipo_guia,'X') ie_tipo_guia,
	b.vl_guia
from	conta_paciente_guia b,
	atend_categoria_convenio c,
	conta_paciente a
where	coalesce(b.dt_convenio, clock_timestamp())		> clock_timestamp() - nr_meses_conta_p
and	a.nr_interno_conta			= b.nr_interno_conta
and	c.cd_senha				= nr_doc_w
and	a.nr_atendimento			= c.nr_atendimento
and	a.ie_status_acerto			= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	a.cd_estabelecimento			= cd_estab_retorno_w
and (coalesce(IE_RET_OUTROS_CONV_W,'N') = 'S' or a.cd_convenio_parametro = cd_convenio_w)
and	coalesce(a.dt_mesano_referencia,clock_timestamp())	>= (clock_timestamp() - nr_meses_conta_p)
and	ie_conta_sem_titulo_p			= 'S'

union

SELECT	distinct
	a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	coalesce(b.ie_tipo_guia,'X') ie_tipo_guia,
	b.vl_guia
from	conta_paciente_guia b,
	atend_categoria_convenio c,
	conta_paciente a
where	coalesce(b.dt_convenio, clock_timestamp())		> clock_timestamp() - nr_meses_conta_p
and	a.nr_interno_conta			= b.nr_interno_conta
and	c.cd_senha				= nr_doc_w
and	a.nr_atendimento			= c.nr_atendimento
and	exists (select	1
		from	titulo_receber x
		where	x.nr_interno_conta	= a.nr_interno_conta
		
union

		select	1
		from	titulo_receber x
		where	x.nr_seq_protocolo	= a.nr_seq_protocolo)
and	a.ie_status_acerto			= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	a.cd_estabelecimento			= cd_estab_retorno_w
and (coalesce(IE_RET_OUTROS_CONV_W,'N') = 'S' or a.cd_convenio_parametro = cd_convenio_w)
and	coalesce(a.dt_mesano_referencia,clock_timestamp())	>= (clock_timestamp() - nr_meses_conta_p);

c041 CURSOR FOR /*Guia informada no atendimento*/
SELECT	distinct
	a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	coalesce(b.ie_tipo_guia,'X') ie_tipo_guia,
	b.vl_guia
from	conta_paciente_guia b,
	atend_categoria_convenio c,
	conta_paciente a
where	coalesce(b.dt_convenio, clock_timestamp())		> clock_timestamp() - nr_meses_conta_p
and	a.nr_interno_conta			= b.nr_interno_conta
and	c.nr_doc_convenio			= cd_doc_retorno_w
and	a.nr_atendimento			= c.nr_atendimento
and	c.nr_seq_interno			= obter_atecaco_atendimento(c.nr_atendimento)
and	a.ie_status_acerto			= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	a.cd_estabelecimento			= cd_estab_retorno_w
and (coalesce(IE_RET_OUTROS_CONV_W,'N') = 'S' or a.cd_convenio_parametro = cd_convenio_w)
and	coalesce(a.dt_mesano_referencia,clock_timestamp())	>= (clock_timestamp() - nr_meses_conta_p)
and	ie_conta_sem_titulo_p			= 'S';

/* CONTA com mascara */

c042 CURSOR FOR
SELECT	a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	'X' ie_tipo_guia,
	b.vl_guia
from	conta_paciente_guia b,
	conta_paciente a
where	coalesce(b.dt_convenio, clock_timestamp()) > clock_timestamp() - nr_meses_conta_p
and	a.nr_interno_conta	= b.nr_interno_conta
and	substr(tiss_obter_doc_masc(a.nr_interno_conta,ds_mascara_w),1,255) = nr_conta_w
and (ie_conta_sem_titulo_p = 'S' or
	exists (SELECT	1
	from	titulo_receber x
	where	x.nr_interno_conta	= a.nr_interno_conta
	
union

	select	1
	from	titulo_receber x
	where	x.nr_seq_protocolo	= a.nr_seq_protocolo))
and	a.ie_status_acerto	= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	coalesce(a.dt_mesano_referencia,clock_timestamp()) >= (clock_timestamp() - nr_meses_conta_p)
and	a.cd_estabelecimento	= cd_estab_retorno_w
and (coalesce(IE_RET_OUTROS_CONV_W,'N') = 'S' or a.cd_convenio_parametro = cd_convenio_w);

c043 CURSOR FOR
SELECT	a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	coalesce(b.ie_tipo_guia,'X') ie_tipo_guia,
	b.vl_guia
from	atend_categoria_convenio d,
	atendimento_paciente c,
	conta_paciente a,
	conta_paciente_guia b
where	c.nr_atendimento			= d.nr_atendimento
and	d.nr_seq_interno			= obter_atecaco_atendimento(d.nr_atendimento)
and	d.cd_usuario_convenio			= cd_usuario_convenio_w
and	a.nr_atendimento			= c.nr_atendimento
and	a.nr_interno_conta			= b.nr_interno_conta
and	a.ie_status_acerto			= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	coalesce(b.dt_convenio, clock_timestamp()) > clock_timestamp() - nr_meses_conta_p
and	coalesce(a.dt_mesano_referencia,clock_timestamp()) >= (clock_timestamp() - nr_meses_conta_p)
and (coalesce(IE_RET_OUTROS_CONV_W,'N') = 'S' or a.cd_convenio_parametro = cd_convenio_w)
and	ie_doc_retorno_w			= 'GUIACU'
and	to_char(a.cd_estabelecimento)		= cd_estab_retorno_w
and	b.cd_autorizacao			= nr_doc_w
and	((ie_conta_sem_titulo_p	= 'S') or
	 exists (SELECT	1
		from	titulo_receber x
		where	x.nr_interno_conta	= a.nr_interno_conta
		
union

		select	1
		from	titulo_receber x
		where	x.nr_seq_protocolo	= a.nr_seq_protocolo));

c044 CURSOR FOR
SELECT	a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	coalesce(b.ie_tipo_guia,'X') ie_tipo_guia,
	b.vl_guia
from	atend_categoria_convenio d,
	atendimento_paciente c,
	conta_paciente a,
	conta_paciente_guia b
where	obter_valor_conta(a.nr_interno_conta, 0) = vl_cobrado_w
and	c.nr_atendimento			= d.nr_atendimento
and	d.nr_seq_interno			= obter_atecaco_atendimento(d.nr_atendimento)
and	d.cd_usuario_convenio			= cd_usuario_convenio_w
and	a.nr_atendimento			= c.nr_atendimento
and	a.nr_interno_conta			= b.nr_interno_conta
and	a.ie_status_acerto			= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	coalesce(b.dt_convenio, clock_timestamp()) > clock_timestamp() - nr_meses_conta_p
and	coalesce(a.dt_mesano_referencia,clock_timestamp()) >= (clock_timestamp() - nr_meses_conta_p)
and (coalesce(IE_RET_OUTROS_CONV_W,'N') = 'S' or a.cd_convenio_parametro = cd_convenio_w)
and	ie_doc_retorno_w			= 'GUIACUVL'
and	to_char(a.cd_estabelecimento)		= cd_estab_retorno_w
and	b.cd_autorizacao			= nr_doc_w
and	((ie_conta_sem_titulo_p	= 'S') or
	 exists (SELECT	1
		from	titulo_receber x
		where	x.nr_interno_conta	= a.nr_interno_conta
		
union

		select	1
		from	titulo_receber x
		where	x.nr_seq_protocolo	= a.nr_seq_protocolo));	

C045 CURSOR FOR
SELECT	a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	'X' ie_tipo_guia,
	b.vl_guia
from	conta_paciente a,
	conta_paciente_guia b
where	a.nr_interno_conta		= b.nr_interno_conta
and	a.ie_status_acerto		= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	coalesce(b.dt_convenio, clock_timestamp()) > clock_timestamp() - nr_meses_conta_p
and	coalesce(a.dt_mesano_referencia,clock_timestamp()) >= (clock_timestamp() - nr_meses_conta_p)
and (coalesce(IE_RET_OUTROS_CONV_W,'N') = 'S' or a.cd_convenio_parametro = cd_convenio_w)
and	b.cd_autorizacao 		= nr_doc_w
and	to_char(a.cd_estabelecimento) = cd_estab_retorno_w
and	a.nr_atendimento in (SELECT	x.nr_atendimento
				from	atend_categoria_convenio x
				where	x.cd_usuario_convenio	= cd_usuario_convenio_w
				and	x.cd_convenio		= cd_convenio_w)
and	((ie_conta_sem_titulo_p	= 'S') or
	 exists (	select	1
		from	titulo_receber x
		where	x.nr_interno_conta	= a.nr_interno_conta
		
union

		select	1
		from	titulo_receber x
		where	x.nr_seq_protocolo	= a.nr_seq_protocolo))

union

select	a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	'X' ie_tipo_guia,
	b.vl_guia
from	conta_paciente a,
	conta_paciente_guia b
where	a.nr_interno_conta		= b.nr_interno_conta
and	a.ie_status_acerto		= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	coalesce(b.dt_convenio, clock_timestamp()) > clock_timestamp() - nr_meses_conta_p
and	coalesce(a.dt_mesano_referencia,clock_timestamp()) >= (clock_timestamp() - nr_meses_conta_p)
and (coalesce(IE_RET_OUTROS_CONV_W,'N') = 'S' or a.cd_convenio_parametro = cd_convenio_w)
and	b.cd_autorizacao 		= cd_autorizacao_movto_w
and	to_char(a.cd_estabelecimento) = cd_estab_retorno_w
and	a.nr_atendimento in (select	x.nr_atendimento
				from	atend_categoria_convenio x
				where	x.cd_usuario_convenio	= cd_usuario_convenio_w
				and	x.cd_convenio		= cd_convenio_w)
and	((ie_conta_sem_titulo_p	= 'S') or
	 exists (	select	1
		from	titulo_receber x
		where	x.nr_interno_conta	= a.nr_interno_conta
		
union

		select	1
		from	titulo_receber x
		where	x.nr_seq_protocolo	= a.nr_seq_protocolo));	


/* CONTA e GUIA sem mascara */

c046 CURSOR FOR
SELECT	a.nr_interno_conta,
	a.cd_categoria_calculo,
	b.cd_autorizacao,
	'X' ie_tipo_guia,
	coalesce(b.vl_guia,0),
	CASE WHEN coalesce(b.vl_guia,0)=0 THEN coalesce(b.vl_participante,0)  ELSE b.vl_guia END ,
	(	SELECT	coalesce(sum(p2.vl_participante),0)
		from 	conta_paciente_guia d,
			conta_paciente c,
			procedimento_paciente p1,
			procedimento_participante p2
		where	coalesce(d.dt_convenio, clock_timestamp()) > clock_timestamp() - nr_meses_conta_p
		and	substr(obter_se_conta_retorno(nr_sequencia_p,c.nr_interno_conta),1,255) = 'S'
		and	c.nr_interno_conta	= d.nr_interno_conta
		and      p1.nr_interno_conta 	= c.nr_interno_conta
		and      p2.nr_sequencia 		= p1.nr_sequencia
		and (ie_conta_sem_titulo_p = 'S' or
			exists (select	1
			from	titulo_receber x
			where	x.nr_interno_conta	= c.nr_interno_conta
			
union

			select	1
			from	titulo_receber x
			where	x.nr_seq_protocolo	= c.nr_seq_protocolo))
		and	c.ie_status_acerto	= 2
		and	coalesce(c.ie_cancelamento::text, '') = ''
		and	coalesce(c.dt_mesano_referencia,clock_timestamp()) >= (clock_timestamp() - nr_meses_conta_p)
		and (c.cd_estabelecimento	= cd_estab_retorno_w or ie_conta_outro_estab_w = 'S')
		and (coalesce(IE_RET_OUTROS_CONV_W,'N') = 'S' or c.cd_convenio_parametro = cd_convenio_w)
		and	c.nr_interno_conta	= nr_conta_w
		and	d.cd_autorizacao		= nr_doc_w)
from	conta_paciente_guia b,
	conta_paciente a
where	coalesce(b.dt_convenio, clock_timestamp()) > clock_timestamp() - nr_meses_conta_p
and	substr(obter_se_conta_retorno(nr_sequencia_p,a.nr_interno_conta),1,255) = 'S'
and	a.nr_interno_conta		= b.nr_interno_conta
and (ie_conta_sem_titulo_p = 'S' or
	exists (select	1
	from	titulo_receber x
	where	x.nr_interno_conta	= a.nr_interno_conta
	
union

	select	1
	from	titulo_receber x
	where	x.nr_seq_protocolo	= a.nr_seq_protocolo))
and	a.ie_status_acerto	= 2
and	coalesce(a.ie_cancelamento::text, '') = ''
and	coalesce(a.dt_mesano_referencia,clock_timestamp()) >= (clock_timestamp() - nr_meses_conta_p)
and (a.cd_estabelecimento	= cd_estab_retorno_w or ie_conta_outro_estab_w = 'S')
and (coalesce(IE_RET_OUTROS_CONV_W,'N') = 'S' or a.cd_convenio_parametro = cd_convenio_w)
and	a.nr_interno_conta	= nr_conta_w
and	b.cd_autorizacao		= nr_doc_w
order by 7, coalesce(b.vl_guia,0);
		


BEGIN

select	a.cd_convenio,
	a.dt_ref_preco,
	coalesce(a.ie_doc_retorno, Obter_Valor_Conv_Estab(b.cd_convenio, a.cd_estabelecimento, 'IE_DOC_RETORNO')),
	a.cd_estabelecimento,
	coalesce(c.IE_GLOSA_ADIC_RET, 'N'),
	coalesce(c.IE_RET_OUTROS_CONV, 'N'),
	coalesce(c.IE_VALOR_PAGO_RET, 'N'),
	coalesce(c.ie_valor_pago_cobrado_ret,'N')
into STRICT	cd_convenio_w,
	dt_ref_preco_w,
	ie_doc_retorno_w,
	cd_estab_retorno_w,
	IE_GLOSA_ADIC_RET_w,
	IE_RET_OUTROS_CONV_W,
	ie_valor_pago_ret_w,
	ie_valor_pago_cobrado_ret_w
from	convenio_estabelecimento c,
	convenio b,
	convenio_retorno a
where	c.cd_estabelecimento	= a.cd_estabelecimento
and	b.cd_convenio		= c.cd_convenio
and	a.cd_convenio		= b.cd_convenio
and	a.nr_sequencia		= nr_sequencia_p;

delete	from CONVENIO_RET_MOVTO_HIST
where	nr_seq_retorno	= nr_sequencia_p;


ie_doc_origem_w	:= ie_doc_retorno_w;
--obter_param_usuario(27,70,cd_perfil_w,nm_usuario_p,cd_estab_logado_w,ie_guia_outros_conv_w);
ie_glosa_pendente_menor_w := obter_param_usuario(27, 124, cd_perfil_w, nm_usuario_p, cd_estab_logado_w, ie_glosa_pendente_menor_w);
ie_conta_outro_estab_w := obter_param_usuario(27, 162, cd_perfil_w, nm_usuario_p, cd_estab_logado_w, ie_conta_outro_estab_w);
ie_valor_adequado_w := obter_param_usuario(27, 209, cd_perfil_w, nm_usuario_p, cd_estab_logado_w, ie_valor_adequado_w);
ie_somente_com_saldo_w := obter_param_usuario(27, 240, cd_perfil_w, nm_usuario_p, cd_estab_logado_w, ie_somente_com_saldo_w);
ie_pago_acumulativo_w := obter_param_usuario(27, 267, cd_perfil_w, nm_usuario_p, cd_estab_logado_w, ie_pago_acumulativo_w);
ie_permitecontasoutroretorno_w := obter_param_usuario(27, 100, cd_perfil_w, nm_usuario_p, cd_estab_logado_w, ie_permitecontasoutroretorno_w);
nr_mes_ant_conta_w := obter_param_usuario(27, 009, cd_perfil_w, nm_usuario_p, cd_estab_logado_w, nr_mes_ant_conta_w);
nr_mes_ant_w := obter_param_usuario(27, 044, cd_perfil_w, nm_usuario_p, cd_estab_logado_w, nr_mes_ant_w);

open C04;
loop
fetch C04 into
	nm_atributo_w,
	vl_atributo_w;
EXIT WHEN NOT FOUND; /* apply on C04 */

	if (coalesce(position(nm_atributo_w in ds_regra_w),0) <= 0) then
		if (coalesce(Length(ds_regra_w),0) <= 0) then
			ds_regra_w := nm_atributo_w || ' not in (' || chr(39) || vl_atributo_w || chr(39);
		else
			ds_regra_w := ds_regra_w || ') or ' || nm_atributo_w || ' not in (' || chr(39) || vl_atributo_w || chr(39);
		end if;
	else
		ds_regra_w := ds_regra_w || ', ' || chr(39) || vl_atributo_w || chr(39);
	end if;
end loop;
close C04;

if (Length(ds_regra_w) > 0) then
	ds_regra_w := ds_regra_w || ')';

	EXECUTE 'update convenio_retorno_movto set ie_gera_resumo = ' || chr(39) || 'N' ||chr(39) ||
				' where nr_seq_retorno  = ' || nr_sequencia_p || ' and (' || ds_regra_w || ')';
	commit;
end if;

select	count(distinct nr_prontuario)
into STRICT	ie_prontuario_w
from	convenio_retorno_movto
where	nr_seq_retorno	= nr_sequencia_p;

--Edgar 24/08/2005, OS 21641, identificar se o arquivo  s de glosas
select	count(*)
into STRICT	qt_somente_glosa_w
from	convenio_retorno_movto
where	coalesce(vl_pago,0)	= 0
and	coalesce(vl_glosa,0)	> 0
and	nr_seq_retorno	= nr_sequencia_p;

select	count(*)
into STRICT	qt_movimento_w
from	convenio_retorno_movto
where	nr_seq_retorno	= nr_sequencia_p;

ie_retorno_glosa_w		:= 'N';
if (qt_somente_glosa_w = qt_movimento_w) then
	ie_retorno_glosa_w	:= 'S';
end if;

select	max(a.nr_seq_protocolo),
	max(cd_convenio)
into STRICT	nr_seq_protocolo_w,
	cd_convenio_w
from	convenio_retorno a
where	a.nr_sequencia	= nr_sequencia_p;

select	max(ie_tipo_protocolo)
into STRICT	ie_tipo_prot_w
from	protocolo_convenio
where	nr_seq_protocolo	= nr_seq_protocolo_w;

if (ie_doc_retorno_w in ('CUDTPR','GUIACU','GUIACUVL','GUIAUT')) then
	ie_codigo_usuario_w := 'S';
end if;

open C01;
loop
fetch C01 into
	nr_conta_convenio_w,
	nr_pront_w,
	nr_doc_w,
	Nr_conta_w,
	nr_atendimento_w,
	ie_tipo_guia_w,
	vl_pago_w,
	vl_adequado_w,
	vl_adic_item_w,
	vl_pago_real_w,
	vl_glosa_w,
	vl_cobrado_w,	
	cd_usuario_convenio_w,
	cd_item_w,
	dt_execucao_w,
	cd_autorizacao_w,
	tp_paciente_w,
	cd_autorizacao_movto_w,
	dt_pagamento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	nr_interno_conta_w	:= null;
	vl_guia_w		:= 0;
	vl_pago_total_w		:= 0;
	vl_saldo_w		:= 0;
	vl_adicional_w		:= 0;
	vl_amenor_w		:= 0;
	vl_glosado_w		:= 0;
	ie_glosado_w		:= 'P';
	ie_glosa_w		:= 'N';
	ie_doc_retorno_orig_w	:= ie_doc_retorno_w;
	begin
	nr_doc_number_w		:= somente_numero(nr_doc_w);	
	exception
	when others then
		nr_doc_number_w	:= 0;	
	end;	
	
	if (coalesce(ie_doc_retorno_w,'X')	= 'CONTA') then
		cd_doc_retorno_w	:= nr_conta_w;
	elsif (coalesce(ie_doc_retorno_w,'X')	= 'GUIA+TIPO') then
		cd_doc_retorno_w	:= nr_doc_w;
	elsif (coalesce(ie_doc_retorno_w,'X')	= 'CCONVGUIA') then
		cd_doc_retorno_w	:= nr_conta_convenio_w;
	elsif (coalesce(ie_doc_retorno_w,'X')	= 'GUIASENHA') then
		cd_doc_retorno_w	:= nr_doc_w;
	elsif (coalesce(ie_doc_retorno_w,'X')	= 'X') then
		cd_doc_retorno_w	:= nr_doc_w;
	elsif	((coalesce(ie_doc_retorno_w,'X')	= 'ATCTGUIA') and (nr_doc_w IS NOT NULL AND nr_doc_w::text <> '')) then
		ie_doc_retorno_w	:= null;
	elsif	((coalesce(ie_doc_retorno_w,'X')	= 'ATCTGUIA') and (coalesce(nr_conta_w,0) > 0)) then
		ie_doc_retorno_w	:= 'CONTA';
	elsif (coalesce(ie_doc_retorno_w,'X')	= 'CCONV') then
		cd_doc_retorno_w	:= nr_conta_convenio_w;
	elsif (coalesce(ie_doc_retorno_w,'X')	= 'GTPA') then
		cd_doc_retorno_w	:= nr_doc_w;
	elsif (coalesce(ie_doc_retorno_w,'X')	= 'GUIAVL') then
		cd_doc_retorno_w	:= nr_doc_w;
	elsif (coalesce(ie_doc_retorno_w,'X') 	= 'GUIACONV') then
		cd_doc_retorno_w	:= nr_doc_w;
	elsif (coalesce(ie_doc_retorno_w,'X')	= 'GUIACU') then
		cd_doc_retorno_w	:= nr_doc_w;
	elsif (coalesce(ie_doc_retorno_w,'X')	= 'GUIACUVL') then
		cd_doc_retorno_w	:= nr_doc_w;
	end if;

	ds_mascara_w	:= '-1';

	open C05;
	loop
	fetch C05 into
		ds_mascara_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
	end loop;
	close C05;


	qt_conta_w := 0;
	if (ie_prontuario_w > 1) then

		open C02;
		loop
		fetch	C02 into
			nr_interno_conta_w,
			cd_categoria_w,
			nr_doc_conv_w,
			vl_guia_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */

			qt_conta_w := qt_conta_w + 1;

		end	loop;
		close	C02;
		
		if (qt_conta_w > 1) then
			nr_interno_conta_w := null;
			/* localizacao por prontuario retornou mais de uma conta - afstringari OS149253 23/06/2009 */
				
			CALL gerar_convenio_ret_movto_hist(2, nm_usuario_p, nr_sequencia_p, nr_conta_convenio_w,	nr_pront_w, nr_doc_w, ie_tipo_guia_w,null);

		elsif (qt_conta_w = 0) then
			/* localizacao por prontuario nao retornou conta - afstringari OS149253 23/06/2009 */
			
			CALL gerar_convenio_ret_movto_hist(1, nm_usuario_p, nr_sequencia_p, nr_conta_convenio_w,	nr_pront_w, nr_doc_w, ie_tipo_guia_w,null);
		end if;
	else

		if (coalesce(ie_doc_retorno_w::text, '') = '') or (ie_doc_retorno_w = 'GUIA') then


			open	C030;
			loop
			fetch	C030 into
				nr_interno_conta_w,
				cd_categoria_w,
				nr_doc_conv_w,
				ie_tipo_guia_ww,
				vl_guia_w;
			EXIT WHEN NOT FOUND; /* apply on C030 */
				qt_conta_w := qt_conta_w + 1;
			end loop;
			close C030;

		elsif (ie_doc_retorno_w = 'CONTA') then

			if (ds_mascara_w = '-1') then

				open	C031;
				loop
				fetch	C031 into
					nr_interno_conta_w,
					cd_categoria_w,
					nr_doc_conv_w,
					ie_tipo_guia_ww,
					vl_guia_w;
				EXIT WHEN NOT FOUND; /* apply on C031 */

					qt_conta_w := qt_conta_w + 1;

				end	loop;
				close	C031;

			else

				open	C042;
				loop
				fetch	C042 into
					nr_interno_conta_w,
					cd_categoria_w,
					nr_doc_conv_w,
					ie_tipo_guia_ww,
					vl_guia_w;
				EXIT WHEN NOT FOUND; /* apply on C042 */

					qt_conta_w := qt_conta_w + 1;

				end	loop;
				close	C042;

			end if;

		elsif (ie_doc_retorno_w = 'GUIA+TIPO') then
			if (ds_mascara_W <> '-1') then
				cd_autor_mascara_w	:= tiss_obter_doc_masc(nr_doc_w,ds_mascara_W);
			end if;

			open C032;
			loop
			fetch C032 into
				nr_interno_conta_w,
				cd_categoria_w,
				nr_doc_conv_w,
				ie_tipo_guia_ww,
				vl_guia_w;
			EXIT WHEN NOT FOUND; /* apply on C032 */
				qt_conta_w := qt_conta_w + 1;
			end loop;
			close C032;

		elsif (ie_doc_retorno_w = 'CCONVGUIA') then

			open C033;
			loop
			fetch C033 into
				nr_interno_conta_w,
				cd_categoria_w,
				nr_doc_conv_w,
				ie_tipo_guia_ww,
				vl_guia_w;
			EXIT WHEN NOT FOUND; /* apply on C033 */
				qt_conta_w := qt_conta_w + 1;
			end loop;
			close C033;

		elsif (ie_doc_retorno_w = 'CUDTPR') then	-- Edgar 20/04/2010, OS 192624, localizar guia pelo cd_usuario_convenio, cd_procedimento e dt_procedimento
			nr_interno_conta_w	:= null;

			open c034;
			loop
			fetch C034 into
				nr_interno_conta_w,
				cd_categoria_w,
				nr_doc_conv_w,
				ie_tipo_guia_ww,
				vl_guia_w;
			EXIT WHEN NOT FOUND; /* apply on C034 */
				qt_conta_w := qt_conta_w + 1;
			end loop;
			close C034;

		elsif (ie_doc_retorno_w = 'GUIASENHA') then

			open C035;
			loop
			fetch C035 into
				nr_interno_conta_w,
				cd_categoria_w,
				nr_doc_conv_w,
				ie_tipo_guia_ww,
				vl_guia_w;
			EXIT WHEN NOT FOUND; /* apply on C035 */
				qt_conta_w := qt_conta_w + 1;
			end loop;
			close C035;


		elsif (ie_doc_retorno_w = 'ATCTGUIA') then

			open C036;
			loop
			fetch C036 into
				nr_interno_conta_w,
				cd_categoria_w,
				nr_doc_conv_w,
				ie_tipo_guia_ww,
				vl_guia_w;
			EXIT WHEN NOT FOUND; /* apply on C036 */
				qt_conta_w := qt_conta_w + 1;
			end loop;
			close C036;

		elsif (ie_doc_retorno_w = 'CCONV') then

			open C037;
			loop
			fetch C037 into
				nr_interno_conta_w,
				cd_categoria_w,
				nr_doc_conv_w,
				ie_tipo_guia_ww,
				vl_guia_w;
			EXIT WHEN NOT FOUND; /* apply on C037 */
				qt_conta_w := qt_conta_w + 1;
			end loop;
			close C037;

		elsif (ie_doc_retorno_w = 'CCONVIMP') then

			open C037;
			loop
			fetch C037 into
				nr_interno_conta_w,
				cd_categoria_w,
				nr_doc_conv_w,
				ie_tipo_guia_ww,
				vl_guia_w;
			EXIT WHEN NOT FOUND; /* apply on C037 */

				select	count(*)
				into STRICT	qt_guia_w
				from	convenio_retorno_item a
				where	a.cd_autorizacao	= nr_doc_conv_w
				and	a.nr_interno_conta	= nr_interno_conta_w
				and	a.nr_seq_retorno	= nr_sequencia_p;

				if (vl_guia_w <> 0) and (qt_guia_w = 0) then

					qt_conta_w := qt_conta_w + 1;

					if (coalesce(ie_permitecontasoutroretorno_w,'S') = 'N')	and (obter_conta_outro_retorno(nr_sequencia_p,nr_interno_conta_w,nr_doc_conv_w) <> 0) then
						/* Esta conta ja esta vinculada a outro retorno em aberto. Parametro [100] */

						CALL wheb_mensagem_pck.exibir_mensagem_abort(255816);
					end if;
					
					begin
					nr_titulo_w	:= (obter_titulo_conta_guia(nr_interno_conta_w,nr_doc_conv_w,nr_sequencia_p,null))::numeric;
					exception
					when others then
						nr_titulo_w := null;
					end;
					
					insert	into convenio_retorno_item(nr_sequencia,
						nr_seq_retorno,
						vl_pago,
						vl_guia,
						vl_glosado,
						dt_atualizacao,
						nm_usuario,
						ie_glosa,
						nr_interno_conta,
						cd_autorizacao,
						cd_motivo_glosa,
						ds_observacao,
						vl_adicional,
						nr_titulo,
						vl_amenor,
						vl_adequado,
						ie_analisada,
						ie_doc_retorno_origem,
						dt_pagamento)
					values (nextval('convenio_retorno_item_seq'),
						nr_sequencia_p,
						vl_guia_w,
						vl_guia_w,
						0,
						clock_timestamp(),
						nm_usuario_p,
						ie_glosado_w,
						nr_interno_conta_w,
						nr_doc_conv_w,
						null,
						nr_conta_convenio_w,
						0,
						nr_titulo_w,
						0,
						0,
						'N',
						ie_doc_retorno_w,
						dt_pagamento_w);

				end if;

			end loop;
			close C037;

			nr_interno_conta_w	:= null;
			
		elsif (ie_doc_retorno_w = 'SENHAGUIA') then
			CALL import_insurance_return_file(nr_sequencia_p, ie_doc_retorno_w, cd_convenio_w, nr_mes_ant_w, nr_mes_ant_conta_w, nr_doc_w, vl_pago_w, dt_pagamento_w);
			nr_interno_conta_w 	:= null;

		elsif (ie_doc_retorno_w = 'GTPA') then

			if (ds_mascara_W <> '-1') then
				cd_autor_mascara_w	:= tiss_obter_doc_masc(nr_doc_w,ds_mascara_W);
			end if;

			open C038;
			loop
			fetch C038 into
				nr_interno_conta_w,
				cd_categoria_w,
				nr_doc_conv_w,
				ie_tipo_guia_ww,
				vl_guia_w;
			EXIT WHEN NOT FOUND; /* apply on C038 */
				qt_conta_w := qt_conta_w + 1;
			end loop;
			close C038;

		elsif (ie_doc_retorno_w = 'GUIAVL') then

			open C039;
			loop
			fetch C039 into
				nr_interno_conta_w,
				cd_categoria_w,
				nr_doc_conv_w,
				ie_tipo_guia_ww,
				vl_guia_w;
			EXIT WHEN NOT FOUND; /* apply on C039 */
				qt_conta_w := qt_conta_w + 1;
			end loop;
			close C039;

		elsif (ie_doc_retorno_w = 'SENHA') and (ds_mascara_w = '-1') then

			open	c040;
			loop
			fetch	c040 into
				nr_interno_conta_w,
				cd_categoria_w,
				nr_doc_conv_w,
				ie_tipo_guia_ww,
				vl_guia_w;
			EXIT WHEN NOT FOUND; /* apply on c040 */
				qt_conta_w := qt_conta_w + 1;
			end	loop;
			close	c040;
			
		elsif (ie_doc_retorno_w = 'GUIACONV') then

			open	c041;
			loop
			fetch	c041 into
				nr_interno_conta_w,
				cd_categoria_w,
				nr_doc_conv_w,
				ie_tipo_guia_ww,
				vl_guia_w;
			EXIT WHEN NOT FOUND; /* apply on c041 */
				qt_conta_w := qt_conta_w + 1;
			end	loop;
			close	c041;
			
		elsif (ie_doc_retorno_w = 'GUIACU') then

			open C043;
			loop
			fetch C043 into
				nr_interno_conta_w,
				cd_categoria_w,
				nr_doc_conv_w,
				ie_tipo_guia_ww,
				vl_guia_w;
			EXIT WHEN NOT FOUND; /* apply on C043 */
				qt_conta_w := qt_conta_w + 1;
			end loop;
			close C043;
		elsif (ie_doc_retorno_w = 'GUIACUVL') then

			open C044;
			loop
			fetch C044 into
				nr_interno_conta_w,
				cd_categoria_w,
				nr_doc_conv_w,
				ie_tipo_guia_ww,
				vl_guia_w;
			EXIT WHEN NOT FOUND; /* apply on C044 */
				qt_conta_w := qt_conta_w + 1;
			end loop;
			close C044;
			
		elsif (ie_doc_retorno_w = 'GUIAUT') then

			open C045;
			loop
			fetch C045 into
				nr_interno_conta_w,
				cd_categoria_w,
				nr_doc_conv_w,
				ie_tipo_guia_ww,
				vl_guia_w;
			EXIT WHEN NOT FOUND; /* apply on C045 */
				qt_conta_w := qt_conta_w + 1;
			end loop;
			close C045;
			
		elsif (ie_doc_retorno_w = 'CONTAGUIA') then


				open	C046;
				loop
				fetch	C046 into
					nr_interno_conta_w,
					cd_categoria_w,
					nr_doc_conv_w,
					ie_tipo_guia_ww,
					vl_guia_ww,
					vl_guia_w,
					vl_participante_w;
				EXIT WHEN NOT FOUND; /* apply on C046 */

					qt_conta_w := qt_conta_w + 1;

				end	loop;
				close	C046;
				
				if (vl_guia_ww > 0) and (vl_guia_w > vl_participante_w) and (qt_conta_w > 1) then
					vl_guia_w := vl_guia_w - vl_participante_w;
					
					if (vl_guia_w < 0) then
						vl_guia_w := vl_guia_w * -1;
					end if;
				end if;

		end if;

		if (qt_conta_w > 1) then
				nr_interno_conta_w := null;
				/* localizada mais de uma guia - afstringari OS149253 23/06/2009*/

				CALL gerar_convenio_ret_movto_hist(4, nm_usuario_p, nr_sequencia_p, nr_conta_convenio_w,	nr_pront_w, nr_doc_w, ie_tipo_guia_w,null);
		elsif (qt_conta_w = 0) then
				/* nao foi localizada a guia - afstringari OS149253 23/06/2009 */
	
				CALL gerar_convenio_ret_movto_hist(3, nm_usuario_p, nr_sequencia_p, nr_conta_convenio_w,	nr_pront_w, nr_doc_w, ie_tipo_guia_w,null);
		end if;				
	end if;

	if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then

		if (ie_doc_retorno_w = 'CONTAGUIA') then
			vl_guia_w := vl_guia_ww;
		end if;
			
		nr_items_w	:= nr_items_w + 1;

		select	coalesce(sum(vl_pago + vl_glosado),0)
		into STRICT	vl_pago_total_w
		from	convenio_retorno_item
		where	cd_autorizacao		= nr_doc_conv_w
		and	nr_interno_conta	= nr_interno_conta_w;
		
		if (ie_valor_adequado_w = 'S') then
			
			select	coalesce(sum(vl_pago + vl_glosado - vl_adequado),0)
			into STRICT	vl_pago_total_w
			from	convenio_retorno_item
			where	cd_autorizacao		= nr_doc_conv_w
			and	nr_interno_conta	= nr_interno_conta_w;	
				
		end if;
		
		select 	coalesce(sum(b.vl_glosa),0)
		into STRICT	vl_glosa_aceita_grg_w
		from	titulo_receber a,
			titulo_receber_liq b, 
			lote_audit_hist_guia g
		where	a.nr_titulo 		= b.nr_titulo 
		and    	g.nr_sequencia 		= b.nr_seq_lote_hist_guia 
		and	g.nr_interno_conta 	= nr_interno_conta_w
		and	g.cd_autorizacao 		= nr_doc_conv_w;
		
		vl_pago_total_w := vl_pago_total_w + vl_glosa_aceita_grg_w;
		
		vl_saldo_w	:= vl_guia_w - vl_pago_total_w;
		vl_saldo_guia_w	:= OBTER_SALDO_CONPACI(nr_interno_conta_w,nr_doc_conv_w);

        if (ie_retorno_glosa_w = 'S') then
            if (vl_saldo_guia_w = vl_guia_w) then
                vl_pago_w	:= vl_guia_w - vl_glosa_w;
            end if;
		end if;

		if (vl_saldo_w >= 0) and
			((ie_somente_com_saldo_w = 'N') or (coalesce(vl_saldo_guia_w,0) > 0)) then

			if (coalesce(ie_permitecontasoutroretorno_w,'S') = 'N')	and (obter_conta_outro_retorno(nr_sequencia_p,nr_interno_conta_w,nr_doc_conv_w) <> 0) then
				/* Esta conta ja esta vinculada a outro retorno em aberto. Parametro [100] */

				CALL wheb_mensagem_pck.exibir_mensagem_abort(255816);
			end if;
			
			select	nextval('convenio_retorno_item_seq')
			into STRICT	nr_sequencia_w
			;
			
			begin
			nr_titulo_w	:= (obter_titulo_conta_guia(nr_interno_conta_w,nr_doc_conv_w,nr_sequencia_p,null))::numeric;
			exception
			when others then
				nr_titulo_w := null;
			end;

			insert	into convenio_retorno_item(nr_sequencia,
				nr_seq_retorno,
				vl_pago,
				vl_glosado,
				dt_atualizacao,
				nm_usuario,
				ie_glosa,
				nr_interno_conta,
				cd_autorizacao,
				cd_motivo_glosa,
				ds_observacao,
				vl_adicional,
				nr_titulo,
				vl_amenor,
				vl_adequado,
				ie_analisada,
				ie_doc_retorno_origem,
				dt_pagamento)
			values (nr_sequencia_w,
				nr_sequencia_p,
				0,
				0,
				clock_timestamp(),
				nm_usuario_p,
				ie_glosado_w,
				nr_interno_conta_w,
				nr_doc_conv_w,
				null,
				nr_conta_convenio_w,
				0,
				nr_titulo_w,
				0,
				vl_adequado_w,
				'N',
				ie_doc_retorno_w,
				dt_pagamento_w);

			if (coalesce(nr_conta_w,0) <> 0) and (coalesce(nr_doc_w::text, '') = '') then

				update	convenio_retorno_movto
				set	nr_seq_ret_item		= nr_sequencia_w
				where 	coalesce(nr_conta,0)		= nr_conta_w
				and 	coalesce(dt_execucao, clock_timestamp())	= CASE WHEN ie_doc_retorno_w='CUDTPR' THEN  dt_execucao_w  ELSE coalesce(dt_execucao, clock_timestamp()) END
				and 	coalesce(cd_item, -1)	= CASE WHEN ie_doc_retorno_w='CUDTPR' THEN  cd_item_w  ELSE coalesce(cd_item,-1) END   -- dsantos em 16/02/2011, OS286035 - O sistema nao vinculava por item, e o
				and	coalesce(ie_tipo_guia,'X')	= coalesce(ie_tipo_guia_ww, coalesce(ie_tipo_guia,'X'))			  --valor pendente do movimento + a soma do vinculado diferia do valor total importado
				and	coalesce(ie_gera_resumo,'S')	= 'S'
				and	nr_seq_retorno		= nr_sequencia_p;

			else
				if (ie_prontuario_w > 1) then

					update	convenio_retorno_movto
					set	nr_seq_ret_item	= nr_sequencia_w
					where	coalesce(cd_usuario_convenio,'X')	= CASE WHEN ie_doc_retorno_w='CUDTPR' THEN  cd_usuario_convenio_w  ELSE coalesce(cd_usuario_convenio,'X') END
					and	nr_doc_convenio = nr_doc_w
					and	nr_prontuario	= nr_pront_w
					and	coalesce(ie_gera_resumo,'S')	= 'S'
					and	nr_seq_retorno	= nr_sequencia_p;
				else

					update	convenio_retorno_movto
					set	nr_seq_ret_item		= nr_sequencia_w
					where	coalesce(nr_conta,0)		= coalesce(nr_conta_w,0)
					and	coalesce(ie_gera_resumo,'S')	= 'S'
					and 	coalesce(cd_usuario_convenio,'X')	= CASE WHEN ie_doc_retorno_w='CUDTPR' THEN  cd_usuario_convenio_w  ELSE coalesce(cd_usuario_convenio,'X') END
					and	coalesce(ie_tipo_guia,coalesce(ie_tipo_guia_wW,'X'))	= CASE WHEN ie_doc_origem_w='ATCTGUIA' THEN coalesce(ie_tipo_guia,coalesce(ie_tipo_guia_wW,'X'))  ELSE coalesce(ie_tipo_guia_wW, coalesce(ie_tipo_guia,'X')) END 
					and	nr_doc_convenio		= nr_doc_w
					and	nr_seq_retorno		= nr_sequencia_p;
				end if;
			end if;

			if (dt_ref_preco_w IS NOT NULL AND dt_ref_preco_w::text <> '') then
				vl_pago_w := gerar_valor_retorno_movto(nr_sequencia_p, nr_sequencia_w, cd_categoria_w, vl_pago_w, nm_usuario_p);
			end if;
		
			if (vl_pago_w > vl_saldo_w) then
			
				if (coalesce(ie_pago_acumulativo_w,'N') = 'S') then --Tratar valores pagos acumulativo
			
					--Busca todos os valores ja pagos para a guia
					select	sum(vl_pago)
					into STRICT	vl_pago_total_w
					from	convenio_retorno_item a,
						convenio_retorno b
					where	b.nr_sequencia		= a.nr_seq_retorno
					and	a.nr_interno_conta	= nr_interno_conta_w
					and	a.cd_autorizacao	= nr_doc_conv_w
					and	b.ie_status_retorno	= 'F';
					
					--Ajusta o valor pago conforme a diferenca do valor total ja pago e o valor pago atual
					if (vl_pago_w > vl_pago_total_w) then
						vl_pago_w	:= vl_pago_w - vl_pago_total_w;
					/*else
						vl_pago_w	:= vl_pago_total_w - vl_pago_w;*/
					end if;						
					
					--Se valor pago maior que o saldo da guia, passar o restante para adicional
					if (vl_pago_w > vl_saldo_w) then
						vl_adicional_w	:= (vl_pago_w - vl_saldo_w);
						vl_pago_w	:= vl_pago_w - vl_adicional_w;
					end if;					
					
					ie_glosado_w	:= 'N';	

					if (coalesce(vl_glosa_w,0) > 0) then
						vl_amenor_w	:= vl_glosa_w;
					end if;					
				else					
					vl_adicional_w	:= (vl_pago_w - vl_saldo_w);
					vl_pago_w	:= vl_pago_w - vl_adicional_w;
					ie_glosado_w	:= 'N';	
					
					if (coalesce(vl_glosa_w,0) > 0) then
						vl_amenor_w	:= vl_glosa_w;
					end if;	
					
				end if;

			else
			
				SELECT * FROM Valida_Glosa_Conta(nr_interno_conta_w, vl_saldo_w, vl_saldo_w - vl_pago_w, null, nm_usuario_p, ie_glosa_w, cd_motivo_glosa_w) INTO STRICT ie_glosa_w, cd_motivo_glosa_w;
				vl_adicional_w	:= 0;
				vl_glosado_w	:= 0;
				vl_amenor_w	:= (vl_saldo_w - vl_pago_w);
		
				if (ie_glosa_w	= 'S') then
					vl_glosado_w	:= vl_amenor_w;
					vl_amenor_w	:= 0;
					ie_glosado_w	:= 'S';
				end if;

				if (vl_glosado_w = 0) and (vl_amenor_w = 0) then
					ie_glosado_w := 'N';
				end if;
			end if;
			
			-- Edgar 22/07/2009, OS 148803, tratar guias que possuem valor a menor e valor a maior ao mesmo tempo
			if (vl_glosa_w > 0) and (IE_GLOSA_ADIC_RET_w = 'S') then
				vl_glosado_w	:= vl_glosa_w;

				select	sum(CASE WHEN coalesce(vl_pago,0)=0 THEN 0  ELSE coalesce(vl_cobrado,0) - (coalesce(vl_total_pago,0) + coalesce(vl_filme,0)) END )
				into STRICT	vl_adicional_w
				from	convenio_retorno_movto
				where	coalesce(ie_situacao_item,'X') 	<> 'G'
				and	coalesce(ie_gera_resumo,'S') 	= 'S'
				--and	decode(nvl(vl_pago,0),0,0,nvl(vl_cobrado,0) - (nvl(vl_total_pago,0) + nvl(vl_filme,0))) <= 0
				and	coalesce(nr_conta,0)		= coalesce(nr_conta_w,0)
				and	nr_seq_retorno 		= NR_SEQUENCIA_P;

				select	sum(vl_glosa)
				into STRICT	vl_amenor_w
				from	convenio_retorno_movto
				where	coalesce(ie_situacao_item,'X')	<> 'G'
				and	coalesce(ie_gera_resumo,'S')	= 'S'
				and	coalesce(nr_conta,0)		= coalesce(nr_conta_w,0)
				and	nr_seq_retorno		= NR_SEQUENCIA_P;

				vl_adicional_w	:= (vl_adicional_w * -1);
				vl_amenor_w	:= vl_amenor_w;

				if (vl_amenor_w = vl_glosado_w) then
					vl_pago_w	:= vl_pago_w - vl_glosado_w + vl_adicional_w - (vl_adicional_w - vl_amenor_w);
				else	
					vl_pago_w	:= vl_pago_w - vl_amenor_w - vl_glosado_w + vl_adicional_w - (vl_adicional_w - vl_amenor_w);
				end if;
				-- dsantos em 26/05/2010 , OS 216341. 		
				
			end if;
			/*Tratar valor a menor e adicional na mesma guia
			S - Conforme vl diferenca negativo
			T - Conforme vl diferenca
			N - Nao tratar
			M - Conforme vl pago, adicional e glosa do movimento*/
			
			if (vl_glosa_w > 0) and (IE_GLOSA_ADIC_RET_w = 'T') then
				vl_pago_w	:= vl_cobrado_w - vl_glosa_w;
				vl_amenor_w	:= vl_glosa_w;
				vl_glosa_w	:= 0;
			end if;
			
			if (vl_glosa_w > 0) and (IE_GLOSA_ADIC_RET_w = 'M') then
				vl_pago_w	:= vl_pago_w;
				vl_amenor_w	:= vl_glosa_w;
				vl_adicional_w 	:= vl_adic_item_w;
				vl_glosa_w	:= 0;
				
				/*OS 925337
				Nesta OS foi apresentado um arquivo que possuia valor cobrado menor que o valor pago 
				devolvido no demonstrativo.			
				*/
				
				
			end if;
			
			
			
			--lhalves OS 887496 - calcular o valor adicional com base no valor cobrado, ou seja, se eu nao cobrei o item mas tenho valor pago para o mesmo, entao o valor pago passa a ser adicional.
			if (ie_valor_pago_cobrado_ret_w = 'S') then
				vl_adicional_w	:= 0;
				if (vl_adic_item_w > 0) then
					vl_adicional_w	:= vl_adic_item_w;
				end if;
				if (vl_pago_real_w > 0) then
					vl_pago_w	:= vl_pago_real_w;
				else
					vl_pago_w	:= 0;
				end if;				
			end if;

			/*lhalves OS 549664 em 16/02/2013 - Incluido tratamento do parametro 124 na rotina*/

			if (coalesce(ie_glosa_pendente_menor_w,'N') = 'S') and (coalesce(vl_amenor_w,0) <> 0) then
				ie_glosado_w := 'P';
			elsif (coalesce(ie_glosa_pendente_menor_w,'N') = 'N') and (coalesce(vl_amenor_w,0) <> 0) then
				ie_glosado_w := 'N';				
			end if;
						
			if (coalesce(ie_valor_pago_ret_w,'N') = 'S') and (vl_guia_w < vl_amenor_w) then
				
				/*gerar_convenio_ret_movto_hist(6, nm_usuario_p, nr_sequencia_p, nr_conta_convenio_w, nr_pront_w, nr_doc_w, ie_tipo_guia_w,
							'Valor a menor ultrapassa o valor da guia: '||vl_guia_w||							
							' - Vl a menor: '||vl_amenor_w||
							' - Guia: '||nr_doc_conv_w||
							' - Conta: '||nr_interno_conta_w);*/
							
				CALL gerar_convenio_ret_movto_hist(6, nm_usuario_p, nr_sequencia_p, nr_conta_convenio_w, nr_pront_w, nr_doc_w, ie_tipo_guia_w,
							wheb_mensagem_pck.get_texto(304126, 	'VL_GUIA=' || vl_guia_w || ';' ||
												'VL_AMENOR=' || vl_amenor_w || ';' ||
												'NR_DOC_CONV=' || nr_doc_conv_w || ';' || 
												'NR_INTERNO_CONTA=' || nr_interno_conta_w));							
							
				update	convenio_retorno_movto
				set	nr_seq_ret_item	 = NULL
				where	nr_seq_ret_item	= nr_sequencia_w
				and	nr_seq_retorno	= nr_sequencia_p;
				
				delete	from convenio_retorno_item
				where	nr_sequencia	= nr_sequencia_w
				and	nr_seq_retorno	= nr_sequencia_p;			
				
			else					
				update	convenio_retorno_item
				set	vl_pago		= coalesce(vl_pago_w,0),
					vl_guia		= coalesce(vl_guia_w,0),
					vl_glosado	= coalesce(CASE WHEN ie_glosado_w='N' THEN  0  ELSE vl_glosado_w END ,0),
					vl_adicional	= coalesce(vl_adicional_w,0),
					vl_amenor	= coalesce(CASE WHEN ie_glosado_w='S' THEN  0  ELSE vl_amenor_w END ,0),
					ie_glosa	= coalesce(ie_glosado_w,0)
				where	nr_sequencia	= nr_sequencia_w;
			end if;

			open C06;
			loop
			fetch C06 into
				ie_libera_repasse_w;
			EXIT WHEN NOT FOUND; /* apply on C06 */

			end loop;
			close C06;

			update	convenio_retorno_item
			set	ie_libera_repasse	= coalesce(ie_libera_repasse_w, ie_libera_repasse)
			where	nr_sequencia		= nr_sequencia_w;

			if (nr_items_w = 200) then
				commit;
				nr_items_w := 0;
			end if;
		else
			/* guia nao possui saldo para o movimento importado - afstringari OS149253 23/06/2009 */


			/*gerar_convenio_ret_movto_hist(5, nm_usuario_p, nr_sequencia_p, nr_conta_convenio_w, nr_pront_w, nr_doc_w, ie_tipo_guia_w,
							'Valor guia: '||vl_guia_w||
							' - Vl Total Pago: '||vl_pago_total_w||
							' - Vl Saldo guia: '||vl_saldo_guia_w||
							' - Guia: '||nr_doc_conv_w||
							' - Conta: '||nr_interno_conta_w);*/
							
			CALL gerar_convenio_ret_movto_hist(5, nm_usuario_p, nr_sequencia_p, nr_conta_convenio_w, nr_pront_w, nr_doc_w, ie_tipo_guia_w,
							wheb_mensagem_pck.get_texto(304127, 	'VL_GUIA=' || vl_guia_w || ';' ||
												'VL_PAGO_TOTAL=' || vl_pago_total_w || ';' ||
												'VL_SALDO_GUIA=' || vl_saldo_guia_w || ';' ||
												'NR_DOC_CONV=' || nr_doc_conv_w || ';' || 
												'NR_INTERNO_CONTA=' || nr_interno_conta_w));							
			
		end if;
	end if;
end loop;
close C01;

CALL GERAR_OUTROS_VALORE_RET_MOVTO(nr_sequencia_p,nm_usuario_p);

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_retorno_movto_to_item ( NR_SEQUENCIA_P bigint, NM_USUARIO_P text, ie_conta_sem_titulo_p text, nr_meses_conta_p bigint) FROM PUBLIC;

