-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rp_gerar_agendamentos_aut (nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

				  			   
cd_pessoa_fisica_w	varchar(10);
nr_seq_modelo_w		bigint;
ds_retorno_w		varchar(255) := '';
nr_seq_pac_reab_w	bigint;
nr_seq_ind_w		bigint;
dt_inicio_agenda_w	timestamp;
ie_permite_status_w	varchar(1);
dt_fim_agenda_w		timestamp;
qt_intervalo_w		bigint;
							
C01 CURSOR FOR 
	SELECT	distinct 
		a.cd_pessoa_fisica, 
		c.nr_sequencia, 
		coalesce(c.dt_inicio_agendamento,clock_timestamp()), 
		substr(Rp_Obter_Se_Status_Aut(coalesce(b.nr_seq_status,a.nr_seq_status)),1,1), 
		c.dt_fim_agendamento 
	from	rp_paciente_reabilitacao a, 
		rp_tratamento b, 
		rp_pac_modelo_agendamento c 
	where	b.nr_seq_pac_reav = a.nr_sequencia 
	and	c.nr_seq_pac_reab = a.nr_sequencia 
	and	coalesce(b.dt_fim_tratamento::text, '') = '' 
	and	coalesce(c.dt_fim_tratamento::text, '') = '' 
	and	((coalesce(c.dt_fim_agendamento::text, '') = '') or (trunc(c.dt_fim_agendamento) >= trunc(clock_timestamp()))) 
	and	coalesce(cd_estabelecimento,cd_estabelecimento_p) = cd_estabelecimento_p 
	and	coalesce(c.dt_inativacao::text, '') = '' 
	order by 1;
	
	 
C02 CURSOR FOR 
	SELECT	distinct 
		b.cd_pessoa_fisica, 
		a.nr_sequencia, 
		a.nr_seq_pac_reab, 
		substr(Rp_Obter_Se_Status_Aut(coalesce(c.nr_seq_status,b.nr_seq_status)),1,1), 
		coalesce(a.dt_inicio_agendamento,clock_timestamp()), 
		a.dt_fim_agendamento, 
		coalesce(a.qt_intervalo,6) 
	from  	rp_paciente_reabilitacao b, 
		rp_pac_agend_individual a, 
		rp_tratamento c 
	where 	b.nr_sequencia = a.nr_seq_pac_reab 
	and	c.nr_seq_pac_reav = a.nr_seq_pac_reab 
	and	((c.nr_seq_tipo_tratamento = a.nr_seq_tipo_tratamento) or (coalesce(a.nr_seq_tipo_tratamento::text, '') = '')) 
	and	coalesce(a.dt_fim_tratamento::text, '') = '' 
	and	coalesce(cd_estabelecimento,cd_estabelecimento_p) = cd_estabelecimento_p 
	and	coalesce(ie_gerar_agendamento,'S') = 'S' 
	and	((coalesce(a.dt_fim_agendamento::text, '') = '') or (trunc(a.dt_fim_agendamento) >= trunc(clock_timestamp()))) 
	and 	((c.nr_sequencia = a.nr_seq_tratamento) OR (coalesce(a.nr_seq_tratamento::text, '') = '')) 
	order	by 1;
		

BEGIN 
 
open C01;
loop 
fetch C01 into	 
	cd_pessoa_fisica_w, 
	nr_seq_modelo_w, 
	dt_inicio_agenda_w, 
	ie_permite_status_w, 
	dt_fim_agenda_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	if (dt_inicio_agenda_w < clock_timestamp()) then 
		dt_inicio_agenda_w := clock_timestamp();
	end if;
	 
	if (ie_permite_status_w = 'S') then 
		ds_retorno_w := rp_gerar_agendamentos(nr_seq_modelo_w, cd_pessoa_fisica_w, dt_inicio_agenda_w, coalesce(dt_fim_agenda_w,dt_inicio_agenda_w+7), nm_usuario_p, cd_estabelecimento_p, ds_retorno_w, 'S');
	end if;
	 
	end;
end loop;
close C01;
 
open C02;
loop 
fetch C02 into	 
	cd_pessoa_fisica_w, 
	nr_seq_ind_w, 
	nr_seq_pac_reab_w, 
	ie_permite_status_w, 
	dt_inicio_agenda_w, 
	dt_fim_agenda_w, 
	qt_intervalo_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
	 
	if (dt_inicio_agenda_w < clock_timestamp()) then 
		dt_inicio_agenda_w := clock_timestamp();
	end if;
		 
	if (ie_permite_status_w = 'S') then 
		rp_gerar_agendamentos_ind(nr_seq_pac_reab_w,cd_pessoa_fisica_w,dt_inicio_agenda_w,coalesce(dt_fim_agenda_w,(dt_inicio_agenda_w+(qt_intervalo_w+1))),nm_usuario_p, cd_estabelecimento_p, nr_seq_ind_w,ds_retorno_w,'S');
	end if;
	 
	/*Grava log do agendamento - 1*/
 
	insert into log_atendimento(	dt_atualizacao,	nm_usuario, cd_log, ds_log, nr_atendimento) 
			values 	(	clock_timestamp(), 
					nm_usuario_p, 
					2, 
					'1-rp_gerar_agendamentos_aut '|| 
					' ie_permite_status_w= '||ie_permite_status_w|| 
					' cd_pessoa_fisica_p= '||cd_pessoa_fisica_w|| 
					' nr_seq_ind_w= '||nr_seq_ind_w|| 
					' cd_estabelecimento_p= '||cd_estabelecimento_p|| 
					' dt_inicio_agenda_w= '||to_char(dt_inicio_agenda_w,'dd/mm/yyyy hh24:mi:ss')|| 
					' dt_fim_agendamento= '||to_char(coalesce(dt_fim_agenda_w,(dt_inicio_agenda_w+(qt_intervalo_w+1))),'dd/mm/yyyy hh24:mi:ss'), 
					nr_seq_pac_reab_w);
	 
	end;
end loop;
close C02;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rp_gerar_agendamentos_aut (nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

