-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE get_ihc_acd ( nr_sequencia_p ihc_acs.nr_sequencia%type, nm_usuario_p ihc_acs.nm_usuario%type) AS $body$
DECLARE

			
vl_charge_w	     				ihc_acd.vl_charge%type;
vl_day_w              	 		ihc_acd.vl_day%type;
dt_entrada_unidade_w	        atend_paciente_unidade.dt_entrada_unidade%type;	
qt_days_w                       ihc_acd.qt_days%type;
nr_seq_classificacao_w          ihc_acd.cd_classification%type;
dt_saida_unidade_w              atend_paciente_unidade.dt_saida_unidade%type;
nr_atendimento_w                atendimento_paciente.nr_atendimento%type;
nr_account_w                    ihc_claim.nr_account%type;
nr_records_w                    ihc_claim.nr_sequencia%type;
nr_seq_claim_w                  ihc_claim.nr_sequencia%type;
cd_procedimento_w		procedimento_paciente.cd_procedimento%type;
ie_bed_band_w			ihc_acd.ie_bed_band%type;
ie_service_type_w		ihc_acd.ie_service_type%type;
ie_level_w			ihc_acd.ie_level%type;
cd_classification_w		ihc_acd.cd_classification%type;
cd_convenio_w		 	conta_paciente.cd_convenio_parametro%type;
cd_categoria_w		 	conta_paciente.cd_categoria_parametro%type;
nr_externo_w			bigint;
check_w				integer := 0;
cd_procedimento_loc_w 		procedimento.cd_procedimento_loc%type;
ie_addon_w 			ihc_acd.ie_addon%type :='N';
loop_count_w  			smallint:=0;

c01 CURSOR FOR
SELECT  distinct
        c.cd_setor_atendimento cd_setor_atendimento,
        (select ta.IE_CLASSIFICACAO from TIPO_ACOMODACAO ta where b.CD_TIPO_ACOMODACAO = ta.CD_TIPO_ACOMODACAO) as bed_level,
		p.cd_procedimento_loc cd_procedimento,
        coalesce(b.dt_saida_unidade,clock_timestamp()) dt_saida_unidade,
        b.dt_entrada_unidade dt_entrada_unidade,
        CEIL(coalesce(b.dt_saida_unidade,clock_timestamp()) - b.dt_entrada_unidade) qt_days,
        d.vl_procedimento vl_procedimento,
        d.qt_procedimento qt_procedimento,
	b.cd_unidade_basica cd_unidade_basica,
	b.cd_unidade_compl,
	d.ie_origem_proced ie_origem_proced,
	f.ie_tipo_convenio,
	b.ie_calcular_dif_diaria as ie_addon_w
from 	atend_paciente_unidade b,
        setor_atendimento c,
        procedimento_paciente d,
        procedimento p,
	conta_paciente e,
	convenio f
where   b.nr_atendimento 		= d.nr_atendimento
and 	p.cd_procedimento 		= d.cd_procedimento
and 	p.ie_origem_proced 		= d.ie_origem_proced
and   	p.IE_CLASSIFICACAO    		= 3     -- not a room and bed charge
and	d.nr_interno_conta		= nr_account_w
and     c.cd_setor_atendimento		= b.cd_setor_atendimento
and     b.cd_setor_atendimento 		= d.cd_setor_atendimento
and 	e.nr_interno_conta 		= d.nr_interno_conta
and 	e.cd_convenio_parametro 	= f.cd_convenio
and     c.cd_classif_setor 		<> '4'
and    d.nr_seq_atepacu = b.NR_SEQ_INTERNO
--and 	((substr(d.cd_procedimento_convenio, 0, 2) in ('PH','PS','RE','RH'))
--		or (f.ie_tipo_convenio = 13 and (substr(p.cd_procedimento_loc, 0, 1) = ('H'))))
order    by b.dt_entrada_unidade;

c01_w	c01%rowtype;


BEGIN

select  nr_seq_claim
into STRICT 	nr_seq_claim_w
from    ihc_acs
where   nr_sequencia = nr_sequencia_p;

select  max(nr_account)
into STRICT    nr_account_w
from    ihc_claim
where   nr_sequencia = nr_seq_claim_w;

select  a.nr_atendimento,
		a.nr_seq_classificacao,
		b.cd_convenio_parametro,
		b.cd_categoria_parametro
into STRICT    nr_atendimento_w,
		nr_seq_classificacao_w,
		cd_convenio_w,
		cd_categoria_w
from    atendimento_paciente a,
        conta_paciente b
where   a.nr_atendimento = b.nr_atendimento
and     b.nr_interno_conta = nr_account_w;

if (coalesce(nr_seq_classificacao_w::text, '') = '') then
	CALL generate_inco_eclipse(nr_account_w,1, obter_desc_expressao(798395),nm_usuario_p);
end if;

begin
open c01;
loop
fetch c01 into c01_w;		
EXIT WHEN NOT FOUND; /* apply on c01 */

	if (coalesce(c01_w.qt_days::text, '') = '' or c01_w.qt_days < 1) then
		qt_days_w := 1;
	else
		qt_days_w := c01_w.qt_days;
	end if;
	
	vl_charge_w := coalesce(c01_w.vl_procedimento,0) * 100;
	vl_day_w := ROUND(dividir_sem_round(coalesce(vl_charge_w,0),qt_days_w));
	
	select	max(nr_externo)
	into STRICT	nr_externo_w
	from	unidade_atendimento
	where	cd_setor_atendimento	= c01_w.cd_setor_atendimento
	and		cd_unidade_basica		= c01_w.cd_unidade_basica
	and		cd_unidade_compl		= c01_w.cd_unidade_compl;
	
	ie_level_w := get_eclipse_conversion('56', c01_w.bed_level, 'IHC', null, nr_account_w, ie_level_w);
	cd_classification_w := get_eclipse_conversion('NR_SEQ_CLASSIFICACAO', nr_seq_classificacao_w, 'IHC', null, nr_account_w, cd_classification_w);
	ie_bed_band_w := get_eclipse_conversion('NR_EXTERNO', nr_externo_w, 'IHC', null, nr_account_w, ie_bed_band_w);
	ie_service_type_w := get_eclipse_conversion('IE_ORIGEM_PROCED', c01_w.ie_origem_proced, 'IHC', 'ACD', nr_account_w, ie_service_type_w);

	select 	count(nr_sequencia)
	into STRICT 	nr_records_w
	from 	ECLIPSE_INCO_ACCOUNT
	where 	nr_interno_conta = nr_account_w;

	cd_procedimento_loc_w := substr(c01_w.cd_procedimento,2, 3);

	if (c01_w.ie_tipo_convenio = 13) then
		if ((cd_procedimento_loc_w >= 251 and cd_procedimento_loc_w <= 255)
			or (cd_procedimento_loc_w >= 257 and cd_procedimento_loc_w <= 261)
			or (cd_procedimento_loc_w >= 263 and cd_procedimento_loc_w <= 267)
			or (cd_procedimento_loc_w >= 277 and cd_procedimento_loc_w <= 280)) then
			check_w := 0;
		else
			check_w := 1;
		end if;
	end if;

  loop_count_w := loop_count_w+1;
  if (loop_count_w >0) then
     ie_addon_w :='Y';
  end if;

	if (BILLING_I18N_PCK.GET_VALIDATE_ECLIPSE() = 'N') and (nr_records_w = 0) and (check_w = 0) then
	
		insert into ihc_acd(	
							ie_addon,
							ie_level,
							vl_charge,
							ie_charge_raised,
							vl_day, 
							dt_from,
							qt_days,
							cd_classification,
							cd_program,
							dt_end,
							dt_atualizacao,        
							dt_atualizacao_nrec,
							ie_type,
							nr_seq_claim,
							nr_seq_acs,
							nr_sequencia,
							nm_usuario,
							nm_usuario_nrec,
							cd_service,
							ie_bed_band,
							ie_service_type)
				values (	c01_w.ie_addon_w, 
							ie_level_w,
							vl_charge_w,
							CASE WHEN vl_charge_w=0 THEN 'I'  ELSE 'C' END ,
							vl_day_w,
							c01_w.dt_entrada_unidade,
							qt_days_w,
							cd_classification_w,
							c01_w.cd_setor_atendimento,
							c01_w.dt_saida_unidade,
							clock_timestamp(),
							clock_timestamp(),
							'ACD',
							nr_seq_claim_w,
							nr_sequencia_p,
							nextval('ihc_acd_seq'),
							nm_usuario_p,
							nm_usuario_p,
							c01_w.cd_procedimento,
							ie_bed_band_w,
							ie_service_type_w);
		update ihc_acs
		set ie_situation = 'A'
		where nr_sequencia = nr_sequencia_p;

	end if;	
end loop;
close c01;
end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE get_ihc_acd ( nr_sequencia_p ihc_acs.nr_sequencia%type, nm_usuario_p ihc_acs.nm_usuario%type) FROM PUBLIC;

