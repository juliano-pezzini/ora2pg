-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE agiq_gerar_questao_item ( nr_seq_ageint_p bigint, nm_usuario_p text, ie_tipo_quest_p text, cd_estabelecimento_p bigint, ageint_resp_quest_atual_p bigint, nr_seq_resp_atual_p bigint, ie_inseriu_quest_p INOUT text, ie_commit_p text default null) AS $body$
DECLARE


nr_seq_ageint_resp_quest_w	ageint_resp_quest.nr_sequencia%type;
cd_convenio_w			agenda_integrada.cd_convenio%type;
cd_categoria_w			agenda_integrada.cd_categoria%type;
cd_plano_convenio_w		agenda_integrada.cd_plano%type;
qt_idade_pac_w			agenda_integrada.qt_idade_pac%type;
ie_tipo_convenio_w		convenio.ie_tipo_convenio%type;
ie_tipo_item_w			agenda_integrada_item.ie_tipo_agendamento%type;
cd_especialidade_w		ageint_quest_utilizacao.cd_especialidade%type;
cd_medico_w			agenda_integrada_item.cd_medico%type;
nr_seq_ageint_item_w		agenda_integrada_item.nr_sequencia%type;
nr_seq_estrut_atual_w		ageint_resp_quest.nr_seq_estrutura%type;
ageint_resp_quest_item_seq_w	ageint_resp_quest_item.nr_sequencia%type;
nr_seq_resp_w			ageint_resp_quest.nr_seq_resp%type;
cd_area_procedimento_w		ageint_quest_utilizacao.cd_area_procedimento%type;
cd_grupo_proc_w			ageint_quest_utilizacao.cd_grupo_proc%type;
nr_seq_proc_interno_w		ageint_quest_utilizacao.nr_seq_proc_interno%type;
ie_sexo_w			ageint_quest_utilizacao.ie_sexo%type;
cd_procedimento_w		agenda_integrada_item.cd_procedimento%type;
ie_origem_proced_w		agenda_integrada_item.ie_origem_proced%type;
i				bigint;
ie_existe_item_superior_w	varchar(1);
ie_inseriu_quest_w		varchar(1);
cd_pessoa_fisica_w		ageint_marcacao_usuario.cd_pessoa_fisica%TYPE;
C01 CURSOR FOR
	SELECT	a.cd_convenio,
		a.cd_categoria,
		a.cd_plano,
		a.qt_idade_pac,
		obter_tipo_convenio(a.cd_convenio),
		b.ie_tipo_agendamento,
		b.cd_medico,
		b.nr_sequencia,
		a.ie_sexo,
		b.nr_seq_proc_interno,
		b.cd_procedimento,
		b.ie_origem_proced
	from	agenda_integrada a,
		agenda_integrada_item b
	where	b.nr_seq_agenda_int = a.nr_sequencia
	and	a.nr_sequencia = nr_seq_ageint_p
	and	coalesce(b.nr_seq_ageint_item_transf::text, '') = ''; --Este tratamento e para nao inserir perguntas de agendamento no processo de multitransferencia.
C02 CURSOR FOR
	SELECT	b.nr_sequencia nr_seq_estrutura,
		c.nr_sequencia nr_seq_pergunta,
		c.ds_pergunta ds_pergunta,
		coalesce(b.ie_obrigatorio,'N') ie_obrigatorio,
		a.nr_sequencia nr_seq_utilizacao
	from	ageint_quest_utilizacao a,
		ageint_quest_estrutura b,
		ageint_quest_perguntas c
	where	a.nr_seq_estrutura = b.nr_sequencia
	and	c.nr_sequencia = b.nr_seq_pergunta
	and	coalesce(a.ie_situacao,'A') = 'A'
	and	coalesce(b.ie_situacao,'A') = 'A'
	and	coalesce(c.ie_situacao,'A') = 'A'
	and	((coalesce(nr_seq_estrut_atual_w::text, '') = ''
			and coalesce(b.nr_seq_superior::text, '') = '')
		or (b.nr_seq_superior = nr_seq_estrut_atual_w
			and	(nr_seq_resp_atual_p IS NOT NULL AND nr_seq_resp_atual_p::text <> '')
			and (not exists (SELECT 1 from ageint_quest_estrut_resp x where x.nr_seq_estrutura = b.nr_sequencia)
				or exists (select 1 from ageint_quest_estrut_resp x where x.nr_seq_estrutura = b.nr_sequencia and x.nr_seq_resp_ant = nr_seq_resp_atual_p ))))
	and (coalesce(a.cd_estabelecimento::text, '') = '' or cd_estabelecimento_p = a.cd_estabelecimento)
	and (coalesce(a.cd_area_procedimento::text, '') = '' or cd_area_procedimento_w = a.cd_area_procedimento)
	and (coalesce(a.cd_grupo_proc::text, '') = '' or cd_grupo_proc_w = a.cd_grupo_proc)
	AND	((coalesce(a.nr_seq_grupo_proc::text, '') = '') OR ((a.nr_seq_grupo_proc IS NOT NULL AND a.nr_seq_grupo_proc::text <> '') AND EXISTS (SELECT	1
																						FROM 	ageint_proced_regra d
																						WHERE 	d.nr_seq_grupo			= a.nr_seq_grupo_proc
																						AND		d.nr_seq_proc_interno	= nr_seq_proc_interno_w
																						AND 	coalesce(d.ie_situacao, 'A') = 'A')))
	and (coalesce(a.ie_tipo_item::text, '') = '' or ie_tipo_item_w = a.ie_tipo_item)
	and (coalesce(a.nr_seq_proc_interno::text, '') = '' or nr_seq_proc_interno_w = a.nr_seq_proc_interno)
	and (coalesce(a.cd_especialidade::text, '') = '' or cd_especialidade_w = a.cd_especialidade)
	and (coalesce(a.cd_medico::text, '') = '' or cd_medico_w = a.cd_medico)
	and (coalesce(a.cd_convenio::text, '') = '' or cd_convenio_w = a.cd_convenio)
	and (coalesce(a.cd_categoria::text, '') = '' or cd_categoria_w = a.cd_categoria)
	and (coalesce(a.cd_plano_convenio::text, '') = '' or cd_plano_convenio_w = a.cd_plano_convenio)
	and (coalesce(a.ie_tipo_convenio::text, '') = '' or ie_tipo_convenio_w = a.ie_tipo_convenio)
	and (coalesce(a.qt_idade_min::text, '') = '' or qt_idade_pac_w >= a.qt_idade_min)
	and (coalesce(a.qt_idade_max::text, '') = '' or qt_idade_pac_w <= a.qt_idade_max)
	and (coalesce(a.ie_sexo,'A') = 'A' or a.ie_sexo = ie_sexo_w);

C02_w C02%rowtype;

C03 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_resp
	from	ageint_resp_quest
	where	nr_seq_ageint = nr_seq_ageint_p
	and	(nr_seq_resp IS NOT NULL AND nr_seq_resp::text <> '')
	and	((coalesce(ageint_resp_quest_atual_p::text, '') = '' and coalesce(nr_seq_superior::text, '') = '') or (nr_seq_superior = ageint_resp_quest_atual_p));


BEGIN

open C03;
loop
fetch C03 into	
	nr_seq_ageint_resp_quest_w,
	nr_seq_resp_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	ie_inseriu_quest_p		=> ie_inseriu_quest_w := agiq_gerar_questao_item(	nr_seq_ageint_p			=> nr_seq_ageint_p, nm_usuario_p			=> nm_usuario_p, ie_tipo_quest_p			=> ie_tipo_quest_p, cd_estabelecimento_p		=> cd_estabelecimento_p, ageint_resp_quest_atual_p	=> nr_seq_ageint_resp_quest_w, nr_seq_resp_atual_p		=> nr_seq_resp_w, ie_inseriu_quest_p		=> ie_inseriu_quest_w, ie_commit_p			=> 'N');
	if (ie_inseriu_quest_w = 'S') then
		ie_inseriu_quest_p := 'S';
	end if;
end loop;
close C03;

select	max(nr_seq_estrutura)
into STRICT	nr_seq_estrut_atual_w
from	ageint_resp_quest
where	nr_sequencia = ageint_resp_quest_atual_p;

open C01;
loop
fetch C01 into	
	cd_convenio_w,
	cd_categoria_w,
	cd_plano_convenio_w,
	qt_idade_pac_w,
	ie_tipo_convenio_w,
	ie_tipo_item_w,
	cd_medico_w,
	nr_seq_ageint_item_w,
	ie_sexo_w,
	nr_seq_proc_interno_w,
	cd_procedimento_w,
	ie_origem_proced_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	select 	coalesce(cd_medico_w,max(cd_pessoa_fisica))    	
	into STRICT   	cd_medico_w
 	from	ageint_marcacao_usuario
 	where	nr_seq_ageint_item = nr_seq_ageint_item_w;


	if (ie_tipo_item_w not in ('CI','CH','Q')) then

		select	max(cd_area_procedimento),
			max(cd_grupo_proc),
			max(cd_especialidade)
		into STRICT	cd_area_procedimento_w,
			cd_grupo_proc_w,
			cd_especialidade_w
		from	estrutura_procedimento_v
		where	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w;

		open C02;
		loop
		fetch C02 into	
			C02_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			
			ie_existe_item_superior_w	:= 'S';
			if (ageint_resp_quest_atual_p IS NOT NULL AND ageint_resp_quest_atual_p::text <> '') then
				select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_existe_item_superior_w
				from	ageint_resp_quest q,
					ageint_resp_quest_item i
				where	i.nr_seq_resp_quest = q.nr_sequencia
				and	q.nr_seq_ageint = nr_seq_ageint_p
				and	q.nr_sequencia = ageint_resp_quest_atual_p
				and	i.nr_seq_item = nr_seq_ageint_item_w;
			end if;
			
			if (ie_existe_item_superior_w = 'S') then
				select	max(nr_sequencia)
				into STRICT	nr_seq_ageint_resp_quest_w
				from	ageint_resp_quest
				where	nr_seq_ageint = nr_seq_ageint_p
				and	nr_seq_pergunta = C02_w.nr_seq_pergunta
				and	nr_seq_estrutura = C02_W.nr_seq_estrutura;

				if (coalesce(nr_seq_ageint_resp_quest_w::text, '') = '') then

					select	nextval('ageint_resp_quest_seq')
					into STRICT	nr_seq_ageint_resp_quest_w
					;

					insert into ageint_resp_quest(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_ageint,
						nr_seq_estrutura,
						nr_seq_superior,
						nr_seq_pergunta,
						ds_pergunta,
						nr_seq_resp,
						ds_resposta,
						ie_tipo_quest,
						ie_obrigatorio
					) values (
						nr_seq_ageint_resp_quest_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_ageint_p,
						C02_w.nr_seq_estrutura,
						ageint_resp_quest_atual_p,
						C02_w.nr_seq_pergunta,
						C02_w.ds_pergunta,
						null,
						null,
						ie_tipo_quest_p,
						C02_w.ie_obrigatorio
					);
					ie_inseriu_quest_p := 'S';
				end if;

				select	max(nr_sequencia)
				into STRICT	ageint_resp_quest_item_seq_w
				from	ageint_resp_quest_item
				where	nr_seq_ageint		= nr_seq_ageint_p
				and	nr_seq_item		= nr_seq_ageint_item_w
				and	nr_seq_resp_quest	= nr_seq_ageint_resp_quest_w;

				if (coalesce(ageint_resp_quest_item_seq_w::text, '') = '') then
					insert into ageint_resp_quest_item(
						nr_sequencia,
						nr_seq_ageint,
						nr_seq_item,
						nr_seq_resp_quest,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_quest_utilizacao
					) values (
						nextval('ageint_resp_quest_item_seq'),
						nr_seq_ageint_p,
						nr_seq_ageint_item_w,
						nr_seq_ageint_resp_quest_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						C02_w.nr_seq_utilizacao
					);
				end if;
			end if;
		end loop;
		close C02;
	end if;
end loop;
close C01;

if (coalesce(ie_commit_p,'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE agiq_gerar_questao_item ( nr_seq_ageint_p bigint, nm_usuario_p text, ie_tipo_quest_p text, cd_estabelecimento_p bigint, ageint_resp_quest_atual_p bigint, nr_seq_resp_atual_p bigint, ie_inseriu_quest_p INOUT text, ie_commit_p text default null) FROM PUBLIC;

