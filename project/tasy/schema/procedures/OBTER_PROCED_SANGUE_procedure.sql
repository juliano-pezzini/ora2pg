-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_proced_sangue (ie_derivado_exame_p bigint, nr_sequencia_p bigint, cd_estabelecimento_p bigint, ie_tipo_atendimento_p bigint, ie_tipo_convenio_p bigint, cd_convenio_p bigint, cd_categoria_p bigint, cd_setor_p INOUT bigint, cd_procedimento_p INOUT bigint, ie_origem_proced_p INOUT bigint, nr_seq_proc_interno_p INOUT bigint, ie_irradiado_p text default 'N', ie_lavado_p text default 'N', ie_filtrado_p text default 'N', ie_aliquotado_p text default 'N', cd_setor_prescricao_p bigint default null) AS $body$
DECLARE


cd_procedimento_w		bigint;
cd_setor_exclusivo_w		integer;
ie_origem_proced_w		bigint;
nr_seq_proc_interno_w		bigint;
cd_setor_atendimento_w		integer;
nr_seq_proc_interno_regra_w	bigint;
qt_exames_conta_w		integer;

C01 CURSOR FOR
SELECT	a.cd_setor_atendimento
from	setor_atendimento b,
	proc_interno_setor a
where	a.nr_seq_proc_interno	= nr_seq_proc_interno_w
and	a.cd_setor_atendimento	= b.cd_setor_atendimento
and	coalesce(a.cd_estabelecimento,cd_estabelecimento_p) = cd_estabelecimento_p
and 	coalesce(a.ie_tipo_atendimento, coalesce(ie_tipo_atendimento_p,0)) = coalesce(ie_tipo_atendimento_p,0)
and	coalesce(cd_perfil,obter_perfil_ativo) = obter_perfil_ativo
and	((cd_setor_origem	= cd_setor_prescricao_p) or (coalesce(cd_setor_prescricao_p::text, '') = '') or (coalesce(cd_setor_origem::text, '') = ''))
order by a.ie_banco_sangue_rep,
	 nr_prioridade desc;


C02 CURSOR FOR
	SELECT	a.cd_setor_atendimento
	from	setor_atendimento b,
		procedimento_setor_atend a
	where	a.cd_setor_atendimento	= b.cd_setor_atendimento
	and	b.cd_estabelecimento_base = cd_estabelecimento_p
	and	a.cd_procedimento	= coalesce(cd_procedimento_p,cd_procedimento_w)
	and	a.ie_origem_proced	= coalesce(ie_origem_proced_p,ie_origem_proced_w)
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	order by a.ie_banco_sangue_rep,
		ie_prioridade desc;

BEGIN




nr_seq_proc_interno_w		:= null;

if (ie_derivado_exame_p = 0) then
	begin
	select	a.cd_procedimento,
		a.ie_origem_proced,
--		b.cd_setor_exclusivo,
		a.nr_seq_proc_interno
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
--		cd_setor_exclusivo_w,
		nr_seq_proc_interno_w
	from	san_derivado a

	where	a.nr_sequencia		= nr_sequencia_p;
--	and	a.cd_procedimento	= b.cd_procedimento
--	and	a.ie_origem_proced	= b.ie_origem_proced; -- Bruna OS49001
	select	max(b.cd_setor_exclusivo)
	into STRICT	cd_setor_exclusivo_w
	from	procedimento b,
		san_exame a
	where	a.nr_sequencia		= nr_sequencia_p
	and	a.cd_procedimento	= b.cd_procedimento
	and	a.ie_origem_proced	= b.ie_origem_proced;

	if (coalesce(cd_setor_exclusivo_w::text, '') = '') then
		select	max(c.cd_setor_exclusivo)
		into STRICT	cd_setor_exclusivo_w
		from	proc_interno b,
			san_exame a,
			procedimento c
		where	a.nr_sequencia		= nr_sequencia_p
		and	a.nr_seq_proc_interno	= b.nr_sequencia
		and	c.cd_procedimento	= b.cd_procedimento
		and	c.ie_origem_proced	= b.ie_origem_proced;
	end if;

	exception
	when others then
		cd_procedimento_w	:= null;
		ie_origem_proced_w	:= null;
		cd_setor_exclusivo_w	:= null;
	end;

	if (coalesce(cd_setor_exclusivo_w::text, '') = '') then
		select	max(Obter_setor_Atend_proc(cd_estabelecimento_p, a.cd_procedimento, a.ie_origem_proced, null, null, null, a.nr_seq_proc_interno,null))
		into STRICT	cd_setor_exclusivo_w
		from	procedimento b,
			san_exame a
		where	a.nr_sequencia		= nr_sequencia_p
		and	a.cd_procedimento	= b.cd_procedimento
		and	a.ie_origem_proced	= b.ie_origem_proced;
	end if;

else
	begin

	select	max(a.cd_procedimento),
		max(a.ie_origem_proced),
		max(b.cd_setor_exclusivo)
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		cd_setor_exclusivo_w
	from	procedimento b,
		san_exame a
	where	a.nr_sequencia		= nr_sequencia_p
	and	a.cd_procedimento	= b.cd_procedimento
	and	a.ie_origem_proced	= b.ie_origem_proced;

	if (coalesce(cd_procedimento_w::text, '') = '') and (coalesce(ie_origem_proced_w::text, '') = '') and (coalesce(cd_setor_exclusivo_w::text, '') = '') then

		select	max(b.cd_procedimento),
			max(b.ie_origem_proced),
			max(c.cd_setor_exclusivo),
			max(a.nr_seq_proc_interno)
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w,
			cd_setor_exclusivo_w,
			nr_seq_proc_interno_w
		from	proc_interno b,
			san_exame a,
			procedimento c
		where	a.nr_sequencia		= nr_sequencia_p
		and	a.nr_seq_proc_interno	= b.nr_sequencia
		and	c.cd_procedimento	= b.cd_procedimento
		and	c.ie_origem_proced	= b.ie_origem_proced;

	end if;

	exception
	when others then
		cd_procedimento_w	:= null;
		ie_origem_proced_w	:= null;
		cd_setor_exclusivo_w	:= null;
	end;
end if;



SELECT * FROM Obter_San_Proced_Convenio(ie_derivado_exame_p, nr_sequencia_p, cd_estabelecimento_p, ie_tipo_atendimento_p, ie_tipo_convenio_p, cd_convenio_p, cd_categoria_p, cd_setor_exclusivo_w, cd_procedimento_w, ie_origem_proced_w, 0, nr_seq_proc_interno_w, clock_timestamp(), nr_seq_proc_interno_regra_w, qt_exames_conta_w, ie_irradiado_p, ie_lavado_p, ie_filtrado_p, ie_aliquotado_p, 'N', 'N') INTO STRICT cd_setor_exclusivo_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_regra_w, qt_exames_conta_w;



if (nr_seq_proc_interno_w > 0) then
	begin
	open C01;
	loop
		fetch C01 into
		cd_setor_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		cd_setor_atendimento_w	:= cd_setor_atendimento_w;
	end loop;
	close C01;
	end;
else
	begin
	open C02;
	loop
		fetch C02 into
		cd_setor_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		cd_setor_atendimento_w	:= cd_setor_atendimento_w;
	end loop;
	close C02;
	end;
end if;
if (cd_setor_atendimento_w > 0) then
	cd_setor_exclusivo_w	:= cd_setor_atendimento_w;
end if;


cd_setor_p		:= coalesce(cd_setor_exclusivo_w, cd_setor_p);
cd_procedimento_p	:= coalesce(cd_procedimento_w, cd_procedimento_p);
ie_origem_proced_p	:= coalesce(ie_origem_proced_w, ie_origem_proced_p);
nr_seq_proc_interno_p	:= coalesce(nr_seq_proc_interno_regra_w,nr_seq_proc_interno_w);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_proced_sangue (ie_derivado_exame_p bigint, nr_sequencia_p bigint, cd_estabelecimento_p bigint, ie_tipo_atendimento_p bigint, ie_tipo_convenio_p bigint, cd_convenio_p bigint, cd_categoria_p bigint, cd_setor_p INOUT bigint, cd_procedimento_p INOUT bigint, ie_origem_proced_p INOUT bigint, nr_seq_proc_interno_p INOUT bigint, ie_irradiado_p text default 'N', ie_lavado_p text default 'N', ie_filtrado_p text default 'N', ie_aliquotado_p text default 'N', cd_setor_prescricao_p bigint default null) FROM PUBLIC;

