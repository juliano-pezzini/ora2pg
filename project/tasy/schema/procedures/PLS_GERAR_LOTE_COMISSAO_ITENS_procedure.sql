-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lote_comissao_itens ( nr_seq_lote_p bigint, nr_seq_canal_venda_p bigint, nr_seq_comissao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
/* Campos do cursor 1 */
 
nr_seq_repasse_mens_w		pls_repasse_mens.nr_sequencia%type;
nr_seq_mens_seg_w		pls_repasse_mens.nr_seq_mens_seg%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
ie_acao_contrato_w		pls_segurado.ie_acao_contrato%type;
ie_tipo_pessoa_w		varchar(2);
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
nr_seq_motivo_inclusao_w	pls_segurado.nr_seq_motivo_inclusao%type;
nr_seq_plano_w			pls_segurado.nr_seq_plano%type;
dt_contratacao_w		pls_segurado.dt_contratacao%type;
nr_titulo_w			pls_comissao_beneficiario.nr_titulo%type;
nr_seq_vendedor_pf_w		pls_comissao_beneficiario.nr_seq_vendedor_pf%type;
nr_seq_proposta_w		pls_segurado.nr_proposta_adesao%type;
cd_pessoa_fisica_w		pls_segurado.cd_pessoa_fisica%type;

/* Campos do cursor 2 */
 
ie_tipo_item_w			pls_repasse_mens_item.ie_tipo_item%type;
vl_item_w			pls_repasse_mens_item.vl_item%type;
tx_premio_w			pls_repasse_mens_item.pr_repasse%type;
vl_comissao_w			pls_repasse_mens_item.vl_repasse%type;
vl_premio_w			pls_repasse_mens_item.vl_premio%type;
vl_incremento_w			pls_repasse_mens_item.vl_incremento%type;
nr_seq_plano_item_w		pls_repasse_mens_item.nr_seq_plano%type;
nr_seq_plano_sca_w		pls_repasse_mens_item.nr_seq_plano_sca%type;
nr_seq_bonificacao_w		pls_repasse_mens_item.nr_seq_bonificacao%type;
ie_sca_embutido_w		pls_repasse_mens_item.ie_sca_embutido%type;
nr_seq_regra_w			pls_repasse_mens_item.nr_seq_regra%type;

/*Campos do cursor 3 */
 
nr_seq_comissao_benef_total_w	bigint;

/* Outros campos */
 
nr_seq_novo_benef_w		bigint;
vl_comissao_total_benef_w	double precision;
vl_comissao_total_w		double precision;
qt_estornos			bigint;
ie_gerar_juro_mult_tit_w	varchar(1);
vl_juros_multa_w		double precision := 0;
vl_origem_w			pls_comissao_benef_item.vl_origem%type;
vl_origem_total_benef_w		pls_comissao_benef_item.vl_origem%type;

C01 CURSOR FOR	/* Filtrando beneficiários na situação "Liberado pelo usuário" (OPS - Gestão de Vendedores e Comissões / Itens pendentes) */
 
	SELECT	c.nr_sequencia, 
		c.nr_seq_mens_seg, 
		b.nr_sequencia, 
		b.ie_acao_contrato, 
		CASE WHEN coalesce(a.cd_pf_estipulante::text, '') = '' THEN 'PJ'  ELSE 'PF' END , 
		a.nr_sequencia, 
		coalesce(b.nr_seq_motivo_inclusao,0), 
		b.nr_seq_plano, 
		b.dt_contratacao, 
		pls_obter_titulo_mensalidade(null, c.nr_seq_mens_seg) nr_titulo, 
		b.nr_seq_vendedor_pf, 
		b.nr_proposta_adesao, 
		b.cd_pessoa_fisica 
	from	pls_repasse_mens	c, 
		pls_segurado		b, 
		pls_contrato		a 
	where	a.nr_sequencia = b.nr_seq_contrato 
	and	b.nr_sequencia = c.nr_seq_segurado 
	and	c.nr_seq_vendedor = nr_seq_canal_venda_p 
	and	(c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '') 
	and	coalesce(c.nr_seq_repasse::text, '') = '' 
	and	coalesce(c.nr_seq_comissao_benef::text, '') = '';
	
C02 CURSOR FOR	/*Filtrando itens de mensalidade */
 
	SELECT	ie_tipo_item, 
		vl_item, 
		pr_repasse, 
		vl_repasse, 
		vl_premio, 
		vl_incremento, 
		nr_seq_plano, 
		nr_seq_plano_sca, 
		nr_seq_bonificacao, 
		ie_sca_embutido, 
		nr_seq_regra 
	from	pls_repasse_mens_item 
	where	nr_seq_repasse = nr_seq_repasse_mens_w;
	
C03 CURSOR FOR	/* Filtrando beneficiários por comissão */
 
	SELECT	nr_sequencia 
	from	pls_comissao_beneficiario 
	where	nr_seq_comissao = nr_seq_comissao_p 
	and	coalesce(nr_seq_comissao_benef::text, '') = '' 
	and	coalesce(vl_estorno::text, '') = '';
	

BEGIN 
 
ie_gerar_juro_mult_tit_w := pls_obter_se_gera_juro_mult(cd_estabelecimento_p);
 
open C01;
loop 
fetch C01 into	 
	nr_seq_repasse_mens_w, 
	nr_seq_mens_seg_w, 
	nr_seq_segurado_w, 
	ie_acao_contrato_w, 
	ie_tipo_pessoa_w, 
	nr_seq_contrato_w, 
	nr_seq_motivo_inclusao_w, 
	nr_seq_plano_w, 
	dt_contratacao_w, 
	nr_titulo_w, 
	nr_seq_vendedor_pf_w, 
	nr_seq_proposta_w, 
	cd_pessoa_fisica_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
 
	if (ie_gerar_juro_mult_tit_w = 'S') then 
		vl_juros_multa_w := pls_obter_vl_juros_mult_titulo(nr_titulo_w);
	end if;	
 
	select	nextval('pls_comissao_beneficiario_seq') 
	into STRICT	nr_seq_novo_benef_w 
	;
	 
	insert	into	pls_comissao_beneficiario(	nr_sequencia,  			    
				dt_atualizacao,     
				nm_usuario,       
				dt_atualizacao_nrec,   
				nm_usuario_nrec,     
				nr_seq_comissao, 
				nr_seq_segurado_mens,  
				nr_seq_segurado, 
				nr_titulo, 
				nr_seq_vendedor_pf, 
				nr_seq_proposta, 
				cd_pessoa_fisica ) 
		    values ( nr_seq_novo_benef_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_comissao_p, 
				nr_seq_mens_seg_w, 
				nr_seq_segurado_w, 
				nr_titulo_w, 
				nr_seq_vendedor_pf_w, 
				nr_seq_proposta_w, 
				cd_pessoa_fisica_w );
	 
	open C02;
	loop 
	fetch C02 into	 
		ie_tipo_item_w, 
		vl_item_w, 
		tx_premio_w, 
		vl_comissao_w, 
		vl_premio_w, 
		vl_incremento_w, 
		nr_seq_plano_item_w, 
		nr_seq_plano_sca_w, 
		nr_seq_bonificacao_w, 
		ie_sca_embutido_w, 
		nr_seq_regra_w;		
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		 
		vl_origem_w := vl_comissao_w;
	 
		if (vl_juros_multa_w > 0) then 
			vl_comissao_w := 0;
		end if;
		 
		insert	into	pls_comissao_benef_item(	nr_sequencia, 
					nr_seq_comissao_benef, 
					ie_tipo_item, 
					vl_item_mensalidade, 
					tx_comissao, 
					vl_premio, 
					vl_incremento, 
					vl_comissao, 
					vl_origem, 
					nr_seq_plano, 
					nr_seq_plano_sca, 
					nr_seq_bonificacao, 
					ie_sca_embutido, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					nr_seq_regra) 
				values (	nextval('pls_comissao_benef_item_seq'), 
					nr_seq_novo_benef_w, 
					ie_tipo_item_w, 
					vl_item_w, 
					tx_premio_w, 
					vl_premio_w, 
					vl_incremento_w, 
					vl_comissao_w, 
					vl_origem_w, 
					nr_seq_plano_item_w, 
					nr_seq_plano_sca_w, 
					nr_seq_bonificacao_w, 
					ie_sca_embutido_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					nr_seq_regra_w);
					 
		end;
	end loop;
	close C02;
 
	update	pls_repasse_mens 
	set	nr_seq_comissao_benef = nr_seq_novo_benef_w 
	where	nr_sequencia = nr_seq_repasse_mens_w;
	 
end loop;
close C01;
 
if (ie_gerar_juro_mult_tit_w = 'S') then 
	CALL pls_acrescentar_juros_multa(null, nr_seq_comissao_p, 'CN', nm_usuario_p, cd_estabelecimento_p);
end if;
 
open C03;
loop 
fetch C03 into	 
	nr_seq_comissao_benef_total_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin 
	 
	select	coalesce(sum(vl_comissao),0) 
	into STRICT	vl_comissao_total_benef_w 
	from	pls_comissao_benef_item 
	where	nr_seq_comissao_benef = nr_seq_comissao_benef_total_w;
	 
	select	coalesce(sum(vl_origem),0) 
	into STRICT	vl_origem_total_benef_w 
	from	pls_comissao_benef_item 
	where	nr_seq_comissao_benef = nr_seq_comissao_benef_total_w;
	 
	update	pls_comissao_beneficiario 
	set	vl_comissao_benef = vl_comissao_total_benef_w, 
		vl_origem = vl_origem_total_benef_w 
	where	nr_sequencia = nr_seq_comissao_benef_total_w;
		 
	end;
end loop;
close C03;
 
select	sum(vl_comissao_benef) 
into STRICT	vl_comissao_total_w 
from	pls_comissao_beneficiario 
where	nr_seq_comissao = nr_seq_comissao_p;
 
select	count(*) /* Verificando a quantidade de estornos pendentes */
 
into STRICT	qt_estornos 
from	pls_estorno_comissao 
where	nr_seq_canal_venda = nr_seq_canal_venda_p 
and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
and	coalesce(nr_seq_comissao_benef::text, '') = '';
 
if (qt_estornos > 0) then 
	CALL pls_gerar_comissao_estornada(nr_seq_canal_venda_p, nr_seq_comissao_p, vl_comissao_total_w, nm_usuario_p);
else 
	update	pls_comissao 
	set	vl_comissao_canal = coalesce(vl_comissao_total_w,0) 
	where	nr_sequencia = nr_seq_comissao_p;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lote_comissao_itens ( nr_seq_lote_p bigint, nr_seq_canal_venda_p bigint, nr_seq_comissao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

