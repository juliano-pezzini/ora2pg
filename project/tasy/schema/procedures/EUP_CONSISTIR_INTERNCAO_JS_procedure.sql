-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE eup_consistir_interncao_js ( dt_entrada_p timestamp, nr_seq_queixa_p bigint, ie_tipo_convenio_ant_p bigint, nr_seq_tipo_acidente_p bigint, nr_seq_cobertura_p bigint, cd_procedencia_p bigint, cd_empresa_p bigint, cd_plano_p text, cd_categoria_p text, cd_convenio_p bigint, nr_doc_convenio_p text, cd_medico_p text, cd_motivo_alta_p bigint, cd_responsavel_p text, cd_setor_p bigint, cd_unidade_basica_p text, cd_tipo_acomodacao_p bigint, dt_internacao_p timestamp, nm_usuario_p text, ie_gerar_alta_atend_p text, ie_novo_atendimento_p text, ie_tipo_atendimento_p bigint, ie_clinica_p bigint, cd_estabelecimento_p bigint, nr_classificacao_p bigint, cd_pessoa_fisica_p text, nr_atendimento_p bigint, dt_vigencia_ini_p timestamp, dt_vigencia_fim_p timestamp, ds_msg_lib_setor_p INOUT text, ds_msg_confir_reint_p INOUT text, ds_msg_int_sus_p INOUT text, ds_msg_informa_campos_p INOUT text) AS $body$
DECLARE

 
qt_atendimentos_w 		bigint;	
ie_permite_internado_w		varchar(2);	
ie_consiste_classificacao_w	varchar(2);
ie_regra_atend_lib_w		varchar(1);
ie_data_menor_atend_w		varchar(1);
ie_consiste_alta_w		varchar(1);	
ie_leito_sem_acomod_w		varchar(1);	
ie_setor_unidade_w		varchar(1);	
ie_resp_internar_w		varchar(1);
ie_obriga_motivo_alta_w		varchar(1);
ie_obriga_acomodacao_w		varchar(1);
ie_obriga_medico_w		varchar(1);
ie_obriga_nr_doc_conv_w		varchar(1);
qt_idade_w			smallint;
ie_tipo_convenio_ant_w		smallint;
nr_seq_queixa_anterior_w	bigint;
ds_msg_lib_setor_w		varchar(255);
ie_bloqueia_atendimento_w	varchar(3);
ie_consiste_regra_lib_w		varchar(1);
qt_dias_reinternacao_w		integer;
ie_tipo_data_w			varchar(3);
dt_considerada_w		timestamp;
ie_obriga_vigencia_w		varchar(1);
ie_alta_inferior_w		varchar(2);
dt_saida_w			timestamp;
					

BEGIN 
 
ie_alta_inferior_w := obter_param_usuario(916, 76, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_alta_inferior_w);
ie_leito_sem_acomod_w := obter_param_usuario(916, 94, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_leito_sem_acomod_w);
qt_dias_reinternacao_w := obter_param_usuario(916, 99, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, qt_dias_reinternacao_w);
ie_tipo_data_w := obter_param_usuario(916, 397, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_tipo_data_w);
ie_resp_internar_w := obter_param_usuario(916, 543, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_resp_internar_w);
ie_consiste_classificacao_w := obter_param_usuario(916, 621, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_classificacao_w);
ie_obriga_motivo_alta_w := obter_param_usuario(916, 656, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_obriga_motivo_alta_w);
ie_setor_unidade_w := obter_param_usuario(916, 666, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_setor_unidade_w);
ie_obriga_medico_w := obter_param_usuario(916, 726, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_obriga_medico_w);
ie_obriga_acomodacao_w := obter_param_usuario(916, 727, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_obriga_acomodacao_w);
ie_permite_internado_w := obter_param_usuario(916, 917, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_permite_internado_w);
ie_obriga_nr_doc_conv_w := obter_param_usuario(916, 1052, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_obriga_nr_doc_conv_w);
ie_consiste_regra_lib_w := obter_param_usuario(916, 1103, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_regra_lib_w);
ie_obriga_vigencia_w := obter_param_usuario(916, 1126, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_obriga_vigencia_w);
 
select	count(*) 
into STRICT	qt_atendimentos_w 
from	atendimento_paciente 
where	cd_pessoa_fisica = cd_pessoa_fisica_p 
and	nr_atendimento <> nr_atendimento_p 
and	ie_tipo_atendimento = 1 
and	coalesce(dt_alta::text, '') = '';
 
if (ie_novo_atendimento_p = 'N') and (ie_permite_internado_w = 'N') and (ie_gerar_alta_atend_p = 'N') and (qt_atendimentos_w > 0) then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(187563);
end if;
 
if (ie_gerar_alta_atend_p = 'S') then 
	 
	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
	into STRICT	ie_data_menor_atend_w 
                 
    where 	dt_internacao_p < (SELECT dt_entrada from atendimento_paciente where nr_atendimento = nr_atendimento_p);
	if (ie_data_menor_atend_w = 'S') then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(279181);
	end if;
 
	select	coalesce(obter_se_alta_ult_setor(nr_atendimento_p,dt_internacao_p),'N') 
	into STRICT	ie_consiste_alta_w 
;
	if (ie_consiste_alta_w = 'S') then 
		if (ie_alta_inferior_w = 'I') then 
		 
			SELECT	MAX(dt_saida_unidade) dt_saida 
			into STRICT dt_saida_w 
			FROM 	setor_atendimento b, 
				atend_paciente_unidade a 
			WHERE	a.nr_atendimento		= nr_atendimento_p 
			AND	a.nr_sequencia = 	(	SELECT	MAX(x.nr_sequencia) 
								FROM 	atend_paciente_unidade x 
								WHERE 	x.nr_atendimento = 						a.nr_atendimento 
								AND 	x.nr_atendimento = 						nr_atendimento_p 
								AND		obter_classif_setor(x.cd_setor_atendimento) = 5 
							 ) 
			AND	a.cd_setor_atendimento 	= b.cd_setor_atendimento 
			AND (b.cd_classif_setor = 5) 
			AND TO_DATE(dt_internacao_p, 'dd/mm/yyyy hh24:mi:ss') <= dt_saida_unidade;
			if (dt_saida_w IS NOT NULL AND dt_saida_w::text <> '') then 
				CALL wheb_mensagem_pck.exibir_mensagem_abort(333546, 'DT_SAIDA_P='||to_char(dt_saida_w,'dd/mm/yyyy hh24:mi:ss'));
			end if;
		 
		else 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(279182);
		end if;
	end if;
	 
	if (ie_obriga_motivo_alta_w = 'S') and (coalesce(cd_motivo_alta_p,0) = 0) then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(89303);
	end if;
	 
end if;
 
if	((ie_consiste_classificacao_w = 'S') or (ie_consiste_classificacao_w = 'T')) and (coalesce(ie_clinica_p,0) > 0) and (coalesce(nr_classificacao_p,0) > 0) then 
	 
	ie_regra_atend_lib_w := Obter_regra_atend_lib(obter_perfil_ativo,nr_classificacao_p,cd_estabelecimento_p,ie_clinica_p,ie_tipo_atendimento_p);
	if (ie_regra_atend_lib_w <> 'S') then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(93391);
	end if;
end if;
 
if (coalesce(cd_tipo_acomodacao_p::text, '') = '') and (ie_obriga_acomodacao_w = 'S') then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(89306);
end if;
 
if (ie_leito_sem_acomod_w <> 'S') and (cd_tipo_acomodacao_p = 0) then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(96521);
end if;
 
if (ie_setor_unidade_w = 'S') and 
	((cd_setor_p = 0) or (coalesce(cd_unidade_basica_p::text, '') = '')) then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(89286);
end if;
 
if (ie_resp_internar_w = 'S') and (coalesce(cd_responsavel_p::text, '') = '') then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(89293);
end if;
 
if (ie_obriga_medico_w = 'S') and (coalesce(cd_medico_p::text, '') = '') then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(89311);
end if;
if (ie_obriga_nr_doc_conv_w = 'S') and (coalesce(nr_doc_convenio_p::text, '') = '') then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(236363);
end if;
if (ie_obriga_vigencia_w = 'S') and 
	((coalesce(dt_vigencia_ini_p::text, '') = '') or (coalesce(dt_vigencia_fim_p::text, '') = '')) then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(339205);
end if;
 
if (ie_consiste_regra_lib_w = 'S') then 
 
	qt_idade_w := substr(obter_idade_pf(cd_pessoa_fisica_p, clock_timestamp(), 'A'),1,3);
 
	select	max(a.ie_tipo_convenio), 
		max(a.nr_seq_queixa) 
	into STRICT	ie_tipo_convenio_ant_w, 
		nr_seq_queixa_anterior_w 
	from	atendimento_paciente a 
	where	a.nr_atendimento = (SELECT	max(b.nr_atendimento) 
				  from	atendimento_paciente b 
				  where	nr_atendimento < nr_atendimento_p);	
 
 
				   
	SELECT * FROM Obter_Se_Lib_Setor_Conv(cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, ie_tipo_atendimento_p, cd_setor_p, cd_plano_p, nr_classificacao_p, ds_msg_lib_setor_w, ie_bloqueia_atendimento_w, ie_clinica_p, cd_empresa_p, cd_procedencia_p, nr_seq_cobertura_p, nr_seq_tipo_acidente_p, cd_tipo_acomodacao_p, cd_medico_p, qt_idade_w, ie_tipo_convenio_ant_w, nr_seq_queixa_p, nr_seq_queixa_anterior_w, dt_entrada_p, cd_pessoa_fisica_p) INTO STRICT ds_msg_lib_setor_w, ie_bloqueia_atendimento_w;
 
	if (ie_bloqueia_atendimento_w = 'B') then 
		if (coalesce(ds_msg_lib_setor_w::text, '') = '') then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(276368);
		else 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(183208, 'DS_ERRO_P='||ds_msg_lib_setor_w);
		end if;
	elsif (ie_bloqueia_atendimento_w = 'G') and (coalesce(nr_doc_convenio_p::text, '') = '') then 
		if (coalesce(ds_msg_lib_setor_w::text, '') = '') then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(279467);
		else 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(183208, 'DS_ERRO_P='||ds_msg_lib_setor_w);
		end if;
	elsif (ie_bloqueia_atendimento_w = 'M') and (ds_msg_lib_setor_w IS NOT NULL AND ds_msg_lib_setor_w::text <> '') then 
		ds_msg_lib_setor_p := ds_msg_lib_setor_w;
	end if;	
end if;
 
if (coalesce(qt_dias_reinternacao_w,0) > 0) then 
 
	if (ie_tipo_data_w = 'DE') then 
		dt_considerada_w := dt_entrada_p;
	else 
		dt_considerada_w := clock_timestamp();
	end if;
	ds_msg_confir_reint_p := consistir_reinternacao(cd_pessoa_fisica_p, qt_dias_reinternacao_w, nm_usuario_p, cd_estabelecimento_p, dt_considerada_w, 0, 0, null, 0, ds_msg_confir_reint_p);
end if;
 
ds_msg_int_sus_p := substr(obter_texto_tasy(89349, wheb_usuario_pck.get_nr_seq_idioma),1,255);
ds_msg_informa_campos_p := substr(obter_texto_tasy(89449, wheb_usuario_pck.get_nr_seq_idioma),1,255);
			 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eup_consistir_interncao_js ( dt_entrada_p timestamp, nr_seq_queixa_p bigint, ie_tipo_convenio_ant_p bigint, nr_seq_tipo_acidente_p bigint, nr_seq_cobertura_p bigint, cd_procedencia_p bigint, cd_empresa_p bigint, cd_plano_p text, cd_categoria_p text, cd_convenio_p bigint, nr_doc_convenio_p text, cd_medico_p text, cd_motivo_alta_p bigint, cd_responsavel_p text, cd_setor_p bigint, cd_unidade_basica_p text, cd_tipo_acomodacao_p bigint, dt_internacao_p timestamp, nm_usuario_p text, ie_gerar_alta_atend_p text, ie_novo_atendimento_p text, ie_tipo_atendimento_p bigint, ie_clinica_p bigint, cd_estabelecimento_p bigint, nr_classificacao_p bigint, cd_pessoa_fisica_p text, nr_atendimento_p bigint, dt_vigencia_ini_p timestamp, dt_vigencia_fim_p timestamp, ds_msg_lib_setor_p INOUT text, ds_msg_confir_reint_p INOUT text, ds_msg_int_sus_p INOUT text, ds_msg_informa_campos_p INOUT text) FROM PUBLIC;

