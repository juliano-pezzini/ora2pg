-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_notas_a700 ( nr_seq_serv_pre_pagto_p bigint, cd_estabelecimento_p text, nm_usuario_p text) AS $body$
DECLARE


cd_proc_conversao_w		procedimento.cd_procedimento%type;
ie_origem_proced_conv_w		procedimento.ie_origem_proced%type;
nr_seq_regra_conv_w		pls_conversao_proc.nr_sequencia%type;
cd_servico_w			ptu_nota_servico.cd_servico%type;
ds_servico_w			ptu_nota_servico.ds_servico%type;
ie_tipo_tabela_conv_w		ptu_nota_servico.ie_tipo_tabela%type;
cd_material_ops_w		pls_material.cd_material_ops%type;
ie_material_intercambio_w	pls_parametros.ie_material_intercambio%type;
ie_origem_proc_valido_w		pls_parametros.ie_origem_proc_valido%type;
nr_seq_material_w		bigint	:= null;
cd_procedimento_w		bigint	:= null;
ie_origem_proced_w		bigint	:= null;
qt_regra_w			bigint := 0;
cd_mat_number_inter_w		numeric(30) := null;
qt_material_w			bigint;
ie_tipo_tabela_w		smallint;
dt_procedimento_w		timestamp;
cd_servico_mat_w		varchar(50);
ie_origem_proced_padrao_w	procedimento.ie_origem_proced%type;
qt_proced_origem_w		bigint;
qt_proc_valido_w		bigint;
ie_somente_codigo_w		pls_regra_conv_mat_interc.ie_somente_codigo%type;
ie_pacote_intercambio_w 	pls_conversao_proc.ie_pacote_intercambio%type := 'N';
ie_priorizar_conv_pct_int_w	pls_parametros.ie_priorizar_conv_pct_int%type;
	
C01 CURSOR FOR
	SELECT	c.nr_sequencia nr_seq_nota_servico,
		c.ie_tipo_tabela,
		c.cd_servico,
		b.nr_seq_serv_pre_pagto,
		c.dt_procedimento,
		b.nr_ver_tiss
	from	ptu_nota_servico	c,
		ptu_nota_cobranca	b,
		ptu_servico_pre_pagto	a
	where	a.nr_sequencia 		= b.nr_seq_serv_pre_pagto
	and	b.nr_sequencia 		= c.nr_seq_nota_cobr
	and	a.ie_envio_recebimento 	= 'R'
	and	b.nr_seq_serv_pre_pagto	= nr_seq_serv_pre_pagto_p;
	
BEGIN
begin
	select 	coalesce(max(ie_material_intercambio),'S'),
		coalesce(max(ie_origem_proc_valido),'N'),
		coalesce(max(ie_priorizar_conv_pct_int), 'N')
	into STRICT	ie_material_intercambio_w,
		ie_origem_proc_valido_w,
		ie_priorizar_conv_pct_int_w
	from 	pls_parametros
	where 	cd_estabelecimento = cd_estabelecimento_p;
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(182468);
end;

select	count(1)
into STRICT	qt_regra_w
from	pls_conversao_proc
where	(cd_material_imp IS NOT NULL AND cd_material_imp::text <> '')
and	ie_situacao = 'A'
and	ie_ptu = 'S';

for r_c01_w in C01 loop
	begin
	cd_servico_w	:= r_c01_w.cd_servico;
	
	cd_procedimento_w	:= null;
	ie_origem_proced_w	:= null;
	nr_seq_material_w	:= null;
	qt_material_w		:= 0;
	if (r_c01_w.ie_tipo_tabela = 4) then
		ie_pacote_intercambio_w := 'S';
	else
		ie_pacote_intercambio_w := 'N';
	end if;
	
	if (r_c01_w.ie_tipo_tabela in (2,3,5,6)) then
		if (coalesce(ie_material_intercambio_w,'S') = 'S') then
			nr_seq_material_w := cd_servico_w;
			
		elsif (coalesce(ie_material_intercambio_w,'S') = 'C') then
			nr_seq_material_w := null;
			
			 nr_seq_material_w := pls_obter_mat_tiss_vigente( nr_seq_material_w, clock_timestamp(), cd_servico_w, 'O', 'N', r_c01_w.nr_ver_tiss);
		
			if (coalesce(nr_seq_material_w::text, '') = '') then
				nr_seq_material_w := 0;
			end if;
			
		elsif (coalesce(ie_material_intercambio_w,'S') = 'CI') then
			nr_seq_material_w := null;

			SELECT * FROM pls_obter_mat_a900_vigente( nr_seq_material_w, clock_timestamp(), cd_servico_w, r_c01_w.nr_ver_tiss) INTO STRICT  nr_seq_material_w, cd_servico_w;
			
			if (coalesce(nr_seq_material_w::text, '') = '') then
				nr_seq_material_w := 0;
			end if;
		end if;
		
		if (qt_regra_w > 0) then
			cd_mat_number_inter_w := somente_numero(cd_servico_w);

			SELECT * FROM pls_obter_proced_conversao(	null, null, null, cd_estabelecimento_p, 4, null, 3, 'R', null, null, null, cd_mat_number_inter_w, null, cd_procedimento_w, ie_origem_proced_w, nr_seq_regra_conv_w, ie_somente_codigo_w, clock_timestamp(), null, null, null, 'N', ie_priorizar_conv_pct_int_w) INTO STRICT cd_procedimento_w, ie_origem_proced_w, nr_seq_regra_conv_w, ie_somente_codigo_w;
		end if;
		
		if ((coalesce(nr_seq_material_w,0))<> 0) then
			select	count(nr_sequencia)
			into STRICT	qt_material_w
			from	pls_material
			where	nr_sequencia	= nr_seq_material_w;
		end if;
		
		if (coalesce(qt_material_w,0) = 0) then
			SELECT * FROM ptu_obter_material_conversao(	cd_servico_w, r_c01_w.ie_tipo_tabela, r_c01_w.dt_procedimento, 'R', '7', null, null, nr_seq_material_w, cd_servico_mat_w, ie_somente_codigo_w) INTO STRICT nr_seq_material_w, cd_servico_mat_w, ie_somente_codigo_w;
		end if;

		if (coalesce(nr_seq_material_w,0) = 0) then
			nr_seq_material_w	:= null;
		end if;
		
		-- A900
		if (coalesce(nr_seq_material_w::text, '') = '') then
			cd_mat_number_inter_w := somente_numero(cd_servico_w);
			
			 nr_seq_material_w := pls_obter_mat_tiss_vigente( nr_seq_material_w, clock_timestamp(), cd_mat_number_inter_w, 'A', 'N', r_c01_w.nr_ver_tiss);
		end if;
		
		-- FEDERACAO
		if (coalesce(nr_seq_material_w::text, '') = '') then
			 nr_seq_material_w := pls_obter_mat_tiss_vigente( nr_seq_material_w, clock_timestamp(), cd_mat_number_inter_w, 'F', 'N', r_c01_w.nr_ver_tiss);
		end if;

		if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
			nr_seq_material_w := null;
		end if;
	else
		SELECT * FROM pls_obter_proced_conversao(	cd_servico_w, null, null, cd_estabelecimento_p, 4, null, 3, 'R', null, null, null, null, null, cd_procedimento_w, ie_origem_proced_w, nr_seq_regra_conv_w, ie_somente_codigo_w, clock_timestamp(), null, null, null, ie_pacote_intercambio_w, ie_priorizar_conv_pct_int_w) INTO STRICT cd_procedimento_w, ie_origem_proced_w, nr_seq_regra_conv_w, ie_somente_codigo_w;
		
		ie_origem_proced_padrao_w := pls_obter_origem_proced(cd_estabelecimento_p, null, 'R', dt_procedimento_w, null);
		
		if (coalesce(ie_origem_proced_w::text, '') = '') then
			ie_origem_proced_w := ie_origem_proced_padrao_w;
		end if;
		if (ie_origem_proc_valido_w	= 'S') then
			select	count(1)
			into STRICT	qt_proced_origem_w
			from	procedimento
			where	cd_procedimento = cd_procedimento_w
			and	ie_origem_proced = ie_origem_proced_w
			and	ie_situacao = 'A';
			
			if (qt_proced_origem_w = 0) then
				select	max(ie_origem_proced)
				into STRICT	ie_origem_proced_w
				from	procedimento
				where	cd_procedimento = cd_procedimento_w
				and	ie_situacao = 'A';
				
				if (coalesce(ie_origem_proced_w::text, '') = '') then
					select	max(ie_origem_proced)
					into STRICT	ie_origem_proced_w
					from	procedimento
					where	cd_procedimento = cd_procedimento_w;
				end if;
			end if;
		else
			select	count(1)
			into STRICT	qt_proced_origem_w
			from	procedimento
			where	cd_procedimento = cd_procedimento_w
			and	ie_origem_proced = ie_origem_proced_w;
			if (qt_proced_origem_w = 0) then	
				select	coalesce(max(ie_origem_proced),ie_origem_proced_w)
				into STRICT	ie_origem_proced_w
				from	procedimento
				where	cd_procedimento = cd_procedimento_w
				and	ie_origem_proced in (	SELECT	ie_origem_proced
								from	pls_regra_origem_proced
								where	ie_origem_proced <> ie_origem_proced_w);
			end if;
		end if;
		
		select	count(1)
		into STRICT	qt_proc_valido_w
		from	procedimento
		where	cd_procedimento	= cd_procedimento_w
		and	ie_origem_proced = ie_origem_proced_w;
		
		if (qt_proc_valido_w = 0) then
			cd_procedimento_w := null;
			ie_origem_proced_w := null;
		end if;
	end if;
	
	update	ptu_nota_servico
	set	cd_procedimento		= cd_procedimento_w,
		ie_origem_proced	= ie_origem_proced_w,
		nr_seq_material		= nr_seq_material_w,		
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where	nr_sequencia 		= r_c01_w.nr_seq_nota_servico
	and	coalesce(cd_procedimento::text, '') = ''
	and	coalesce(nr_seq_material::text, '') = '';
	end;
end loop;
	
CALL ptu_gerar_inco_receb_a700_pck.ptu_gerar_inconsistencias(nr_seq_serv_pre_pagto_p, null, nm_usuario_p,cd_estabelecimento_p);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_notas_a700 ( nr_seq_serv_pre_pagto_p bigint, cd_estabelecimento_p text, nm_usuario_p text) FROM PUBLIC;

