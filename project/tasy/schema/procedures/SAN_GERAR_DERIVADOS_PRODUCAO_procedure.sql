-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_gerar_derivados_producao ( nr_seq_doacao_p bigint, nr_sequencias_p text, nm_usuario_p text) AS $body$
DECLARE


ie_tipo_bolsa_w		varchar(5);
nr_seq_derivado_w	bigint;
cd_pessoa_fisica_w	varchar(10);
nr_sangue_w		varchar(20);
qt_dias_validade_w	smallint;
qt_volume_w         	double precision;
nr_sequencias_w		varchar(2000);
nr_sequencia_w		bigint;
nr_pos_virgula_w	bigint;
dt_fim_prod_doacao_w	timestamp;

C01 CURSOR FOR
	SELECT 	a.nr_seq_derivado,
			b.qt_dias_validade,
			b.qt_volume
	FROM   	san_derivado b,
			san_derivado_tipo_bolsa a
	WHERE  	a.nr_seq_derivado 	= b.nr_sequencia
	AND   	a.ie_tipo_bolsa 	= ie_tipo_bolsa_w
	AND   	a.ie_situacao		= 'A'
	AND   	b.ie_situacao		= 'A'
	ORDER BY 1;

BEGIN

IF (nr_seq_doacao_p IS NOT NULL AND nr_seq_doacao_p::text <> '') THEN

	select	max(dt_fim_prod_doacao)
	into STRICT	dt_fim_prod_doacao_w
	from	san_doacao
	where	nr_sequencia = nr_seq_doacao_p;

	if (coalesce(dt_fim_prod_doacao_w::text, '') = '') then

		delete
		from 	san_producao
		where 	nr_seq_doacao = nr_seq_doacao_p
		and	coalesce(dt_inicio_producao::text, '') = '';

		SELECT	cd_pessoa_fisica
		INTO STRICT	cd_pessoa_fisica_w
		FROM	usuario
		WHERE	nm_usuario	= nm_usuario_p;

		SELECT 	ie_tipo_bolsa,
				nr_sangue
		INTO STRICT	ie_tipo_bolsa_w,
				nr_sangue_w
		FROM	san_doacao
		WHERE	nr_sequencia 	= nr_seq_doacao_p;

		IF (ie_tipo_bolsa_w IS NOT NULL AND ie_tipo_bolsa_w::text <> '') THEN

		if (coalesce(nr_sequencias_p::text, '') = '') then -- gerado automaticametne
			OPEN C01;
			LOOP
			FETCH C01 INTO
				nr_seq_derivado_w,
				qt_dias_validade_w,
				qt_volume_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				BEGIN
				INSERT INTO san_producao(
						nr_sequencia,
						nr_seq_derivado,
						dt_producao,
						cd_pf_realizou,
						dt_vencimento,
						nr_sangue,
						nr_seq_doacao,
						ie_irradiado,
						ie_lavado,
						ie_filtrado,
						ie_aliquotado,
						ie_aferese,
						dt_atualizacao,
						nm_usuario,
						qt_volume,
						cd_estabelecimento)
					VALUES ( nextval('san_producao_seq'),
						nr_seq_derivado_w,
						clock_timestamp(),
						cd_pessoa_fisica_w,
						clock_timestamp() + coalesce(qt_dias_validade_w,9999),
						nr_sangue_w,
						nr_seq_doacao_p,
						'N',
						'N',
						'N',
						'N',
						'N',
						clock_timestamp(),
						nm_usuario_p,
						qt_volume_w,
						wheb_usuario_pck.get_cd_estabelecimento);
				END;
			END LOOP;
			CLOSE C01;
		else --  gerado manualmente
			nr_sequencias_w	:= nr_sequencias_p;
			while(nr_sequencias_w IS NOT NULL AND nr_sequencias_w::text <> '') loop
				begin
				nr_pos_virgula_w	:= position(',' in nr_sequencias_w);
				if (nr_pos_virgula_w > 0) then
					begin
					nr_sequencia_w	:= (substr(nr_sequencias_w,1,nr_pos_virgula_w-1))::numeric;
					nr_sequencias_w	:= substr(nr_sequencias_w,nr_pos_virgula_w+1,length(nr_sequencias_w));
					if (nr_sequencia_w > 0) then
						begin
						select	qt_dias_validade,
								qt_volume
						into STRICT	qt_dias_validade_w,
								qt_volume_w
						from 	san_derivado
						where	nr_sequencia = nr_sequencia_w;

						INSERT INTO san_producao(
							nr_sequencia,
							nr_seq_derivado,
							dt_producao,
							cd_pf_realizou,
							dt_vencimento,
							nr_sangue,
							nr_seq_doacao,
							ie_irradiado,
							ie_lavado,
							ie_filtrado,
							ie_aliquotado,
							ie_aferese,
							dt_atualizacao,
							nm_usuario,
							qt_volume,
							cd_estabelecimento)
						values ( nextval('san_producao_seq'),
							nr_sequencia_w,
							clock_timestamp(),
							cd_pessoa_fisica_w,
							clock_timestamp() + coalesce(qt_dias_validade_w,9999),
							nr_sangue_w,
							nr_seq_doacao_p,
							'N',
							'N',
							'N',
							'N',
							'N',
							clock_timestamp(),
							nm_usuario_p,
							qt_volume_w,
							wheb_usuario_pck.get_cd_estabelecimento);
						end;
					end if;
					end;
				else
					begin
					nr_sequencias_w	:= null;
					end;
				end if;
				end;
			end loop;

		end if;
		END IF;
	else
		CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(210731);
	end if;
END IF;
COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_gerar_derivados_producao ( nr_seq_doacao_p bigint, nr_sequencias_p text, nm_usuario_p text) FROM PUBLIC;

