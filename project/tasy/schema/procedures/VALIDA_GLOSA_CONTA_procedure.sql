-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE valida_glosa_conta ( nr_interno_conta_p bigint, vl_saldo_p bigint, vl_glosa_p bigint, cd_perfil_p bigint, nm_usuario_p text, ie_glosa_p INOUT text, cd_motivo_glosa_p INOUT bigint) AS $body$
DECLARE

 
pr_glosa_w			double precision;
vl_glosa_w			double precision;
ie_glosa_w			varchar(255);

cd_convenio_w			bigint;
ie_tipo_atend_w		bigint;

ie_tipo_atend_regra_w	bigint;
pr_glosa_regra_w		double precision := 0;
vl_glosa_regra_w		double precision := 0;

ie_ok_w			boolean := True;

dt_conta_w			timestamp;
cd_estabelecimento_w		smallint;
cd_motivo_glosa_w		integer;

Regra CURSOR FOR 
SELECT	ie_tipo_atendimento, 
	coalesce(pr_glosa,0), 
	coalesce(vl_glosa,0), 
	cd_motivo_glosa 
from	convenio_regra_glosa 
where	coalesce(dt_fim_vigencia,clock_timestamp() + interval '1 days')		> clock_timestamp() 
and	coalesce(cd_convenio,coalesce(cd_convenio_w,0)) 		= coalesce(cd_convenio_w,0) 
and 	coalesce(ie_tipo_atendimento, ie_tipo_atend_w) 		= ie_tipo_atend_w 
and 	((coalesce(cd_estabelecimento, coalesce(cd_estabelecimento_w,0)) 	= coalesce(cd_estabelecimento_w,0)) or (coalesce(cd_estabelecimento_w,0) = 0)) 
and	dt_inicio_vigencia = (SELECT	max(dt_inicio_vigencia) 
			from	convenio_regra_glosa 
			where	coalesce(dt_fim_vigencia,clock_timestamp() + interval '1 days')	> clock_timestamp() 
			and	coalesce(cd_convenio,coalesce(cd_convenio_w,0))	= coalesce(cd_convenio_w,0) 
			and	dt_inicio_vigencia 			<= dt_conta_w 
			and 	((coalesce(cd_estabelecimento, coalesce(cd_estabelecimento_w,0)) 	= coalesce(cd_estabelecimento_w,0)) or (coalesce(cd_estabelecimento_w,0) = 0))) 
order by	coalesce(ie_tipo_atendimento,0), 
	coalesce(cd_convenio,0) desc;


BEGIN 
 
ie_glosa_p := 'N';
if (vl_glosa_p = 0) then 
	ie_glosa_p := 'S';
end if;
 
pr_glosa_w := obter_param_usuario(27, 2, cd_perfil_p, nm_usuario_p, 0, pr_glosa_w);
--obter_param_usuario(27, 3, cd_perfil_p, nm_usuario_p, 0, vl_glosa_w); Parametro Inativado lhalves OS291698 em 28/02/2011. 
ie_glosa_w := obter_param_usuario(27, 4, cd_perfil_p, nm_usuario_p, 0, ie_glosa_w);
 
vl_glosa_w := 0;
 
select	wheb_usuario_pck.get_cd_estabelecimento 
into STRICT	cd_estabelecimento_w
;
 
begin 
select	a.cd_convenio_parametro, 
	b.ie_tipo_atendimento, 
	a.dt_mesano_referencia 
into STRICT	cd_convenio_w, 
	ie_tipo_atend_w, 
	dt_conta_w 
from	atendimento_paciente b, 
	conta_paciente a 
where	a.nr_atendimento 	= b.nr_atendimento 
and	a.nr_interno_conta 	= nr_interno_conta_p;
exception 
	when no_data_found then 
		ie_ok_w := False;
end;
 
if	ie_ok_w then 
	open Regra;
	loop 
	fetch Regra into	 
		ie_tipo_atend_regra_w, 
		pr_glosa_regra_w, 
		vl_glosa_regra_w, 
		cd_motivo_glosa_w;
	EXIT WHEN NOT FOUND; /* apply on Regra */
		if (ie_tipo_atend_w = ie_tipo_atend_regra_w) then 
			exit;
		end if;
	end loop;
	close Regra;
end if;
 
if (coalesce(pr_glosa_w::text, '') = '') then 
	pr_glosa_w := 0;
end if;
 
if (coalesce(vl_glosa_w::text, '') = '') then 
	vl_glosa_w := 0;
end if;
 
if (pr_glosa_regra_w <> 0) then 
	pr_glosa_w := pr_glosa_regra_w;
end if;
 
if (vl_glosa_regra_w <> 0) then 
	vl_glosa_w := vl_glosa_regra_w;
end if;
 
if (ie_glosa_w = '') then 
	ie_glosa_w := 'N';
end if;
 
if (ie_glosa_w = 'S') and 
	((pr_glosa_w > 0) and (vl_glosa_p <= (vl_saldo_p/100) * pr_glosa_w)) or 
	(vl_glosa_w > 0 AND vl_glosa_p <= vl_glosa_w) then 
	ie_glosa_p 		:= 'S';
	cd_motivo_glosa_p	:= cd_motivo_glosa_w;
end if;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE valida_glosa_conta ( nr_interno_conta_p bigint, vl_saldo_p bigint, vl_glosa_p bigint, cd_perfil_p bigint, nm_usuario_p text, ie_glosa_p INOUT text, cd_motivo_glosa_p INOUT bigint) FROM PUBLIC;

