-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_dose_onc_prot_html (nr_seq_paciente_p bigint, nr_seq_material_p bigint default null) AS $body$
DECLARE


qt_mg_carboplatina_w		double precision;
cd_pessoa_fisica_w		varchar(10);
qt_peso_w			double precision;
qt_superficie_corporea_w	double precision;
ie_calcula_preenchido_w		varchar(3);
nr_seq_atendimento_w		bigint;
ie_atualizar_ciclos_w		varchar(10);
pr_reducao_w			bigint;
nr_seq_solucao_w		bigint;
ie_aplica_reducao_w		varchar(1) := 'S';
ds_m2_w 				varchar(30);		
ds_mgc_w 				varchar(30);
ds_kg_w 				varchar(30);
ds_mgcar_w 				varchar(30);


C01 CURSOR FOR
	SELECT	nr_seq_atendimento
	from	paciente_atendimento
	where	nr_seq_paciente	= nr_seq_paciente_p
	and	coalesce(nr_prescricao::text, '') = '';
	
C02 CURSOR FOR
	SELECT	nr_seq_solucao
	from	paciente_protocolo_soluc
	where	nr_seq_paciente	= nr_seq_paciente_p;	


BEGIN

ie_calcula_preenchido_w := Obter_Param_Usuario(281, 476, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, 0, ie_calcula_preenchido_w);
ie_atualizar_ciclos_w := Obter_Param_Usuario(281, 550, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, 0, ie_atualizar_ciclos_w);

ds_m2_w := obter_unid_med_usua('m2');
ds_mgc_w := obter_unid_med_usua('mgc');
ds_kg_w := obter_unid_med_usua('kg');
ds_mgcar_w := obter_unid_med_usua('mgcar');

select	max(obter_superficie_corp_red_ped(qt_peso, qt_altura, qt_redutor_sc, cd_pessoa_fisica, nm_usuario)),
	max(b.qt_peso),
	max(pr_reducao)
into STRICT	qt_superficie_corporea_w,
	qt_peso_w,
	pr_reducao_w
from 	paciente_setor b
where	b.nr_seq_paciente = nr_seq_paciente_p;
	

/* atualizar todos os medicamentos com dose padrao */

/* atualizar os medicamentos com base na superficie corporal */

update 	paciente_protocolo_medic a
set 	a.cd_unid_med_prescr =  
               (SELECT b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unidade_medida = b.cd_unidade_medida),
	a.qt_dose_prescr =  a.qt_dose * qt_superficie_corporea_w
where 	a.nr_seq_paciente = nr_seq_paciente_p
and exists (select b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unidade_medida = b.cd_unidade_medida  
                  and b.cd_unidade_medida <> b.cd_unidade_med_princ  
                  and lower(b.cd_unidade_med_sec) = ds_m2_w)
and (coalesce(ie_calcula_preenchido_w,'N') = 'S' or (coalesce(a.cd_unid_med_prescr::text, '') = '' and coalesce(a.qt_dose_prescr::text, '') = ''))
and	a.qt_dose > 0
and	(qt_superficie_corporea_w IS NOT NULL AND qt_superficie_corporea_w::text <> '')
and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p));


/* atualizar os medicamentos com base no peso */

update paciente_protocolo_medic a
set 	a.cd_unid_med_prescr =  
               (SELECT b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unidade_medida = b.cd_unidade_medida),
	a.qt_dose_prescr = a.qt_dose * qt_peso_w
where 	a.nr_seq_paciente = nr_seq_paciente_p
and exists (select b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unidade_medida = b.cd_unidade_medida  
                  and b.cd_unidade_medida <> b.cd_unidade_med_princ  
                  and lower(b.cd_unidade_med_sec) = ds_kg_w)
and (coalesce(ie_calcula_preenchido_w,'N') = 'S'  or (coalesce(a.cd_unid_med_prescr::text, '') = '' and coalesce(a.qt_dose_prescr::text, '') = ''))
and	a.qt_dose > 0
and	(qt_peso_w IS NOT NULL AND qt_peso_w::text <> '')
and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p));

/* pegar o valor da carboplatina */

select	a.cd_pessoa_fisica
into STRICT	cd_pessoa_fisica_w
from	paciente_setor a
where	a.nr_seq_paciente	= nr_seq_paciente_p;

qt_mg_carboplatina_w	:= obter_qt_mg_carboplatina(nr_seq_paciente_p);


/* atualizar os medicamentos com base na carboplatina */

update paciente_protocolo_medic a
set 	a.qt_dose_prescr =   
               (SELECT a.qt_dose * coalesce(qt_mg_carboplatina_w,1)
                from paciente_setor b  
                where a.nr_seq_paciente = b.nr_seq_paciente),
               a.cd_unid_med_prescr =  
               (select b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unidade_medida = b.cd_unidade_medida)  
where a.nr_seq_paciente = nr_seq_paciente_p
  and exists (select b.cd_unidade_med_princ  
                from unidade_medida b
                where a.cd_unidade_medida = b.cd_unidade_medida
                  and b.cd_unidade_medida <> b.cd_unidade_med_princ
                  and lower(b.cd_unidade_med_sec) = ds_mgc_w)
and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p));
		
update paciente_protocolo_medic a  
set 	a.qt_dose_prescr =   coalesce(qt_mg_carboplatina_w,1)
where a.nr_seq_paciente = nr_seq_paciente_p
  and exists (SELECT b.cd_unidade_med_princ  
                from unidade_medida b
                where a.cd_unidade_medida = b.cd_unidade_medida
                  and b.cd_unidade_medida <> b.cd_unidade_med_princ
                  and lower(b.cd_unidade_med_sec) = ds_mgcar_w)
and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p));

if (coalesce(ie_calcula_preenchido_w,'N') = 'C') then

	
	update	paciente_protocolo_medic a
	set 	a.qt_dose_prescr	= coalesce(Obter_dose_convertida(a.cd_material,a.qt_dose,a.cd_unidade_medida,a.cd_unid_med_prescr),a.qt_dose_prescr)
	where	a.nr_seq_paciente 	= nr_seq_paciente_p
	and		a.qt_dose > 0
	and		(a.cd_unidade_medida IS NOT NULL AND a.cd_unidade_medida::text <> '')
	and		(a.cd_unid_med_prescr IS NOT NULL AND a.cd_unid_med_prescr::text <> '')
	and not exists (SELECT b.cd_unidade_med_princ
					from unidade_medida b  
					where a.cd_unidade_medida = b.cd_unidade_medida  
					  and b.cd_unidade_medida <> b.cd_unidade_med_princ  
					  and lower(b.cd_unidade_med_sec) in (ds_mgcar_w, ds_m2_w, ds_kg_w, ds_mgc_w))
	and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p));

else

	update 	paciente_protocolo_medic a
	set 	a.cd_unid_med_prescr 	= (	SELECT	c.cd_unidade_med_princ  
						from	unidade_medida c  
						where	a.cd_unidade_medida = c.cd_unidade_medida),
		a.qt_dose_prescr	= a.qt_dose
	where 	a.nr_seq_paciente 	= nr_seq_paciente_p
	and exists (select b.cd_unidade_med_princ  
					from unidade_medida b  
					where a.cd_unidade_medida = b.cd_unidade_medida  
					  and b.cd_unidade_medida <> b.cd_unidade_med_princ  
					  and b.cd_unidade_med_sec = a.cd_unidade_medida)
	and (coalesce(ie_calcula_preenchido_w,'N') = 'S'  or (coalesce(a.cd_unid_med_prescr::text, '') = '' and coalesce(a.qt_dose_prescr::text, '') = ''))
	and	a.qt_dose > 0
	and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p));


	update 	paciente_protocolo_medic a
	set 	a.cd_unid_med_prescr 	= a.cd_unidade_medida,
		a.qt_dose_prescr	= a.qt_dose
	where 	a.nr_seq_paciente 	= nr_seq_paciente_p
	and not exists (SELECT b.cd_unidade_med_princ  
					from unidade_medida b  
					where a.cd_unidade_medida = b.cd_unidade_medida  
					  and b.cd_unidade_medida <> b.cd_unidade_med_princ  
					  and lower(b.cd_unidade_med_sec) in (ds_mgcar_w, ds_m2_w, ds_kg_w, ds_mgc_w))
	and (coalesce(ie_calcula_preenchido_w,'N') = 'S' or (coalesce(a.cd_unid_med_prescr::text, '') = '' and coalesce(a.qt_dose_prescr::text, '') = ''))
	and	a.qt_dose > 0
	and	((coalesce(nr_seq_material_p::text, '') = '') or (a.nr_seq_material	= nr_seq_material_p));

end if;

if (pr_reducao_w IS NOT NULL AND pr_reducao_w::text <> '') and (pr_reducao_w	> 0) and (ie_aplica_reducao_w = 'S')then
	update	paciente_protocolo_medic
	set	qt_dose_prescr	= (qt_dose_prescr - ((pr_reducao_w * coalesce(qt_dose_prescr,0)) / 100))
	where	nr_seq_paciente 	= nr_seq_paciente_p
	and	coalesce(ie_aplica_reducao,'S') = 'S'
	and	((coalesce(nr_seq_material_p::text, '') = '') or (nr_seq_material	= nr_seq_material_p));	
end if;


CALL Arredondar_dose_onc_protocolo(nr_seq_paciente_p);


if (coalesce(ie_atualizar_ciclos_w,'N')	<> 'N')then
	open C01;
	loop
	fetch C01 into	
		nr_seq_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		CALL atualizar_dose_onc_ciclo(nr_seq_atendimento_w,'N',nr_seq_material_p);
		end;
	end loop;
	close C01;
end if;
	
open C02;
	loop
	fetch C02 into	
		nr_seq_solucao_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		CALL gerar_volume_protocolo_soluc(nr_seq_paciente_p,nr_seq_solucao_w,wheb_usuario_pck.get_nm_usuario);
		end;
	end loop;
	close C02;	

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_dose_onc_prot_html (nr_seq_paciente_p bigint, nr_seq_material_p bigint default null) FROM PUBLIC;

