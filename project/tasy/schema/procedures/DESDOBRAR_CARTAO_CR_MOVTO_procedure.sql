-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE desdobrar_cartao_cr_movto (nm_usuario_p text, nr_seq_extrato_res_p bigint, nr_seq_extrato_cartao_p bigint, vl_desdobrar_p bigint, ie_pagto_indevido_p text, ie_opcao_p text) AS $body$
DECLARE


/* ie_opcao_p

D	desdobrar
E	desfazer desdobramento

*/
nr_sequencia_w		bigint;
vl_parcela_w		double precision;
vl_liquido_w		double precision;
vl_saldo_concil_fin_w	double precision;
vl_saldo_concil_cred_w	double precision;
ie_pagto_indevido_w	varchar(1);
ie_tipo_arquivo_w	varchar(5);


BEGIN

if (ie_opcao_p	= 'D') then

	select	nextval('extrato_cartao_cr_movto_seq')
	into STRICT	nr_sequencia_w
	;

	insert into extrato_cartao_cr_movto(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_extrato,
		nr_seq_extrato_res,
		vl_parcela,
		dt_parcela,
		qt_parcelas,
		nr_cartao,
		nr_autorizacao,
		ds_comprovante,
		ds_rejeicao,
		dt_compra,
		nr_parcela,
		nr_seq_extrato_parcela,
		ie_pagto_indevido,
		vl_liquido,
		nr_seq_extrato_arq,
		nr_resumo,
		nr_seq_extrato_parc_cred,
		vl_saldo_concil_fin,
		vl_saldo_concil_cred,
		vl_aconciliar,
		nr_seq_origem)
	SELECT	nextval('extrato_cartao_cr_movto_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_extrato,
		nr_seq_extrato_res,
		vl_desdobrar_p,
		clock_timestamp(),
		0,
		nr_cartao,
		nr_autorizacao,
		ds_comprovante,
		null,
		dt_compra,
		0,
		null,
		ie_pagto_indevido_p,
		vl_desdobrar_p,
		nr_seq_extrato_arq,
		nr_resumo,
		nr_seq_extrato_parc_cred,
		vl_desdobrar_p,
		0,
		vl_aconciliar,
		nr_seq_extrato_cartao_p
	from	extrato_cartao_cr_movto
	where	nr_sequencia	= nr_seq_extrato_cartao_p;

	update	extrato_cartao_cr_movto
	set	vl_parcela		= vl_parcela - vl_desdobrar_p,
		vl_liquido		= vl_liquido - vl_desdobrar_p,
		vl_saldo_concil_fin	= vl_saldo_concil_fin - vl_desdobrar_p,
		vl_saldo_concil_cred	= vl_saldo_concil_cred - vl_desdobrar_p
	where	nr_sequencia		= nr_seq_extrato_cartao_p;

	select	coalesce(sum(a.vl_saldo_concil_fin),0),
		coalesce(sum(a.vl_saldo_concil_cred),0),
		max(c.ie_tipo_arquivo),
		max(a.ie_pagto_indevido)
	into STRICT	vl_saldo_concil_fin_w,
		vl_saldo_concil_cred_w,
		ie_tipo_arquivo_w,
		ie_pagto_indevido_w
	from	extrato_cartao_cr_arq c,
		extrato_cartao_cr_res b,
		extrato_cartao_cr_movto a
	where	b.nr_seq_extrato_arq	= c.nr_sequencia
	and	a.nr_seq_extrato_res	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_extrato_cartao_p;

	/* se já foi conciliado e não sobrou saldo à conciliar, o movimento de origem não é mais um pagamento indevido */

	if (ie_pagto_indevido_w = 'S') and (ie_tipo_arquivo_w <> 'F') and (vl_saldo_concil_cred_w = 0) then

		update	extrato_cartao_cr_movto
		set	ie_pagto_indevido	= 'N'
		where	(nr_seq_extrato_parcela IS NOT NULL AND nr_seq_extrato_parcela::text <> '')
		and	nr_sequencia		= nr_seq_extrato_cartao_p;

	end if;

elsif (ie_opcao_p	= 'E') then

	select	sum(a.vl_parcela),
		sum(a.vl_liquido),
		sum(a.vl_saldo_concil_fin),
		sum(a.vl_saldo_concil_cred)
	into STRICT	vl_parcela_w,
		vl_liquido_w,
		vl_saldo_concil_fin_w,
		vl_saldo_concil_cred_w
	from	extrato_cartao_cr_movto a
	where	a.nr_seq_origem	= nr_seq_extrato_cartao_p;

	update	extrato_cartao_cr_movto
	set	vl_parcela		= coalesce(vl_parcela,0) + coalesce(vl_parcela_w,0),
		vl_liquido		= coalesce(vl_liquido,0) + coalesce(vl_liquido_w,0),
		vl_saldo_concil_fin	= coalesce(vl_saldo_concil_fin,0) + coalesce(vl_saldo_concil_fin_w,0),
		vl_saldo_concil_cred	= coalesce(vl_saldo_concil_cred,0) + coalesce(vl_saldo_concil_cred_w,0),
		ie_pagto_indevido	= 'S'
	where	nr_sequencia		= nr_seq_extrato_cartao_p;

	delete	from	extrato_cartao_cr_movto
	where	nr_seq_origem	= nr_seq_extrato_cartao_p;

	select	coalesce(sum(a.vl_saldo_concil_fin),0),
		coalesce(sum(a.vl_saldo_concil_cred),0),
		max(c.ie_tipo_arquivo),
		max(a.ie_pagto_indevido)
	into STRICT	vl_saldo_concil_fin_w,
		vl_saldo_concil_cred_w,
		ie_tipo_arquivo_w,
		ie_pagto_indevido_w
	from	extrato_cartao_cr_arq c,
		extrato_cartao_cr_res b,
		extrato_cartao_cr_movto a
	where	b.nr_seq_extrato_arq	= c.nr_sequencia
	and	a.nr_seq_extrato_res	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_extrato_cartao_p;

	/* se já foi conciliado e sobrou saldo à conciliar, o movimento de origem volta a ser um pagamento indevido */

	if (ie_pagto_indevido_w	= 'N') and (ie_tipo_arquivo_w <> 'F') and (vl_saldo_concil_cred_w > 0) then

		update	extrato_cartao_cr_movto
		set	ie_pagto_indevido	= 'S'
		where	(nr_seq_extrato_parcela IS NOT NULL AND nr_seq_extrato_parcela::text <> '')
		and	nr_sequencia		= nr_seq_extrato_cartao_p;

	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE desdobrar_cartao_cr_movto (nm_usuario_p text, nr_seq_extrato_res_p bigint, nr_seq_extrato_cartao_p bigint, vl_desdobrar_p bigint, ie_pagto_indevido_p text, ie_opcao_p text) FROM PUBLIC;

