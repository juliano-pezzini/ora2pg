-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE envia_email_transf_opme (nr_seq_agenda_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_regra_w			bigint;
ds_email_adicional_w	varchar(2000);
cd_perfil_dispara_w		integer;
ie_momento_envio_w		varchar(1);
ie_envia_pessoa_deleg_w	varchar(1);

ds_material_w			varchar(255);
qt_material_w			double precision;
ds_fornecedor_w			varchar(255);
ds_lista_material_w		varchar(4000);

nm_usuario_receb_w		varchar(15);
ds_email_w				varchar(255);
ie_existe_w				varchar(1);

ds_assunto_w			varchar(255);
ds_mensagem_w			varchar(4000);
ds_email_origem_w		varchar(255);
nm_usuario_origem_w		varchar(255);
ds_email_remetente_w	varchar(255);
ds_destinatarios_w		varchar(4000);

nr_sequencia_w			agenda_paciente.nr_sequencia%type;
nm_paciente_w			varchar(60);
dt_agenda_w				timestamp;
hr_inicio_w				timestamp;
nr_minuto_duracao_w		bigint;
cd_convenio_w			integer;
cd_procedimento_w		double precision;
ds_procedimento_w		procedimento.ds_procedimento%TYPE;
nm_medico_w				varchar(100);

C01 CURSOR FOR
	SELECT	coalesce(nr_sequencia,0),
		coalesce(ds_email_remetente,'X'),
		replace(ds_email_adicional,',',';'),
		cd_perfil_disparar,
		coalesce(ie_momento_envio,'I'),
		coalesce(ie_envia_pessoa_deleg,'N')
	from	regra_envio_email_compra
	where	ie_tipo_mensagem = 94
	and	ie_situacao = 'A'
	and	cd_estabelecimento = cd_estabelecimento_p;

c02 CURSOR FOR
	SELECT	substr(obter_desc_material(cd_material),1,255),
		qt_material,
		substr(obter_nome_pf_pj(null,cd_cgc),1,255)
	from	agenda_pac_opme
	where	nr_seq_agenda = nr_seq_agenda_p;

C03 CURSOR FOR
	SELECT	nm_usuario_receb
	from	regra_envio_email_usu
	where	nr_seq_regra = nr_seq_regra_w
	and	(nm_usuario_receb IS NOT NULL AND nm_usuario_receb::text <> '');


BEGIN
open C01;
loop
fetch C01 into
	nr_seq_regra_w,
	ds_email_remetente_w,
	ds_email_adicional_w,
	cd_perfil_dispara_w,
	ie_momento_envio_w,
	ie_envia_pessoa_deleg_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if	((coalesce(cd_perfil_dispara_w::text, '') = '') or
		(cd_perfil_dispara_w IS NOT NULL AND cd_perfil_dispara_w::text <> '' AND cd_perfil_dispara_w = obter_perfil_ativo)) then
		begin

		select	ds_assunto,
			ds_mensagem_padrao
		into STRICT	ds_assunto_w,
			ds_mensagem_w
		from	regra_envio_email_compra
		where	nr_sequencia = nr_seq_regra_w;

		ds_lista_material_w	:= null;

		open C02;
		loop
		fetch C02 into
			ds_material_w,
			qt_material_w,
			ds_fornecedor_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			ds_lista_material_w := substr(ds_lista_material_w || ds_material_w||' '||ds_fornecedor_w||' '||qt_material_w||' '|| chr(13) || chr(10),1,4000);

			end;
		end loop;
		close C02;

		ds_destinatarios_w	:= null;

		open C03;
		loop
		fetch C03 into
			nm_usuario_receb_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin

			select	ds_email
			into STRICT	ds_email_w
			from	usuario
			where	nm_usuario = nm_usuario_receb_w;

			if (ds_email_w IS NOT NULL AND ds_email_w::text <> '') then

				select	coalesce(max('S'),'N')
				into STRICT	ie_existe_w
				
				where	upper(ds_destinatarios_w) like upper('%' || ds_email_w || '%');

				if (ie_existe_w = 'N') then
					ds_destinatarios_w	:= ds_destinatarios_w || ds_email_w || ';';
				end if;
			end if;
			end;
		end loop;
		close C03;

		select	nr_sequencia,
			dt_agenda,
			hr_inicio,
			nr_minuto_duracao,
			nm_paciente,
			cd_convenio,
			cd_procedimento,
			substr(obter_exame_agenda(cd_procedimento, ie_origem_proced, nr_seq_proc_interno),1,255),
			substr(obter_nome_medico(cd_medico,'NCD'),1,100)
		into STRICT	nr_sequencia_w,
			dt_agenda_w,
			hr_inicio_w,
			nr_minuto_duracao_w,
			nm_paciente_w,
			cd_convenio_w,
			cd_procedimento_w,
			ds_procedimento_w,
			nm_medico_w
		from	agenda_paciente
		where	nr_sequencia = nr_seq_agenda_p;

		ds_assunto_w	:=	substr(
					replace_macro(
					replace_macro(
					replace_macro(
					replace_macro(
					replace_macro(
					replace_macro(
					replace_macro(ds_assunto_w,
						'@agenda',nr_sequencia_w),
						'@data',dt_agenda_w||' ' || OBTER_DESC_EXPRESSAO(291978) || ' '||hr_inicio_w||'	' || OBTER_DESC_EXPRESSAO(289003) || ' '||nr_minuto_duracao_w),				-- 289003: Duracao,		291978: Inicio
						'@paciente',nm_paciente_w),
						'@convenio',cd_convenio_w),
						'@procedimento',cd_procedimento_w||' - '||ds_procedimento_w),
						'@cirurgiao',nm_medico_w),
						'@materiais',ds_lista_material_w),1,255);

		ds_mensagem_w	:=	substr(
					replace_macro(
					replace_macro(
					replace_macro(
					replace_macro(
					replace_macro(
					replace_macro(
					replace_macro(ds_mensagem_w,
						'@agenda',nr_sequencia_w),
						'@data',dt_agenda_w||' ' || OBTER_DESC_EXPRESSAO(291978) || ' '||hr_inicio_w||'	' || OBTER_DESC_EXPRESSAO(289003) || ' '||nr_minuto_duracao_w),				-- 289003: Duracao,		291978: Inicio
						'@paciente',nm_paciente_w),
						'@convenio',cd_convenio_w),
						'@procedimento',cd_procedimento_w||' - '||ds_procedimento_w),
						'@cirurgiao',nm_medico_w),
						'@materiais',ds_lista_material_w),1,4000);

		select	ds_email,
			nm_usuario
		into STRICT	ds_email_origem_w,
			nm_usuario_origem_w
		from	usuario
		where	nm_usuario = nm_usuario_p;

		if (ds_email_adicional_w IS NOT NULL AND ds_email_adicional_w::text <> '') then
			ds_destinatarios_w	:= ds_destinatarios_w || ds_email_adicional_w;
		end if;

			if (ie_momento_envio_w = 'A') then
				begin

				CALL sup_grava_envio_email(
					'OPME',
					'94',
					nr_seq_agenda_p,
					0,
					0,
					ds_destinatarios_w,
					nm_usuario_origem_w,
					ds_email_origem_w,
					ds_assunto_w,
					ds_mensagem_w,
					cd_estabelecimento_p,
					nm_usuario_p);

				end;
			else
				begin
				CALL enviar_email(ds_assunto_w,ds_mensagem_w,ds_email_origem_w,ds_destinatarios_w,nm_usuario_origem_w,'M');
				exception
				when others then
				nr_seq_regra_w := nr_seq_regra_w;
			end;
			end if;

		end;
	end if;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE envia_email_transf_opme (nr_seq_agenda_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

