-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lic_gerar_compra_licitacao ( cd_estabelecimento_p bigint, nr_cot_compra_p bigint, nr_seq_licitacao_p bigint, nm_usuario_p text, ds_observacao_solic_p text) AS $body$
DECLARE

 
				 
nr_item_cot_compra_w			integer;
nr_item_cot_compra_ww			integer;
nr_item_cot_compra_www			integer;
cd_material_w				integer;
qt_material_w				double precision;
cd_unidade_medida_compra_w		varchar(30);
nr_seq_tipo_compra_w			bigint;
nr_seq_mod_compra_w			bigint;
nr_seq_mod_compra_ww			bigint	:= 0;
nr_item_solic_compra_w			integer;
nr_item_solic_compra_ww			integer;
nr_item_solic_compra_entr_w			integer;
ie_tipo_compra_w				varchar(1);
nr_solic_compra_w				bigint;
nr_solic_compra_ww			bigint	:= 0;
nr_solic_compra_nova_w			bigint;
cd_comprador_resp_w			varchar(10);
cd_comprador_cot_w			varchar(10);
cd_pessoa_solicitante_w			varchar(10);
cd_pessoa_solic_cot_w			varchar(10);
cd_centro_custo_w				bigint;
cd_local_estoque_w			integer;
cd_conta_contabil_w			varchar(20);
cd_setor_atendimento_w			integer;
nr_seq_forma_compra_w			bigint;
ie_aviso_chegada_w			varchar(1);
ie_aviso_aprov_oc_w			varchar(1);
ie_urgente_w				varchar(1);
ie_tipo_conta_w				integer	:= 2;
ds_mat_direto_w				varchar(255);
qt_entrega_solicitada_w			double precision;
dt_entrega_solicitada_w			timestamp;
ds_observacao_w				varchar(255);
nr_cot_compra_nova_w			bigint;
vl_ultima_compra_w			double precision;
qt_dias_w				bigint;
nr_seq_nf_w				bigint;
nr_seq_fornec_w				bigint;
nr_seq_fornec_novo_w			bigint;
nr_seq_fornec_item_w			bigint;
nr_sequencia_w				bigint;
nr_cot_compra_w				bigint;
nr_seq_licitacao_w				bigint;
nr_seq_lic_item_w				integer;
nr_seq_estagio_w				bigint;
ds_observacao_solic_w			solic_compra.ds_observacao%type;
ds_observacao_cot_w			varchar(4000);
qt_existe_w				bigint;
cd_cgc_fornecedor_venc_alt_w		varchar(14);
cd_cgc_fornecedor_venc_sis_w		varchar(14);
nr_seq_item_w				bigint;
cd_material_ww				integer;
nr_seq_fornec_ww				integer;
nr_seq_fornec_www			integer;
nr_documento_interno_w			varchar(100);
ie_amostra_w				varchar(1);
ie_bula_w				varchar(1);
ie_catalogo_w				varchar(1);

c01 CURSOR FOR 
SELECT	a.nr_item_cot_compra, --traz os itens que não tem agrupamento 
	a.cd_material, 
	a.qt_material, 
	a.cd_unidade_medida_compra, 
	a.nr_seq_tipo_compra, 
	a.nr_seq_mod_compra, 
	a.nr_solic_compra, 
	a.nr_item_solic_compra, 
	a.ds_material_direto_w, 
	obter_se_amostra_item_sc(a.nr_solic_compra,a.nr_item_solic_compra) ie_amostra, 
	obter_se_bula_item_sc(a.nr_solic_compra,a.nr_item_solic_compra) ie_bula, 
	obter_se_catalogo_item_sc(a.nr_solic_compra,a.nr_item_solic_compra) ie_catalogo 
from	cot_compra_item a 
where	a.nr_cot_compra	= nr_cot_compra_p 
and	substr(lic_obter_tipo_compra(a.nr_seq_tipo_compra),1,1) = 'L' 
and	(a.nr_solic_compra IS NOT NULL AND a.nr_solic_compra::text <> '') 

union all
 
SELECT	a.nr_item_cot_compra, --traz somente os itens que tem agrupamento 
	a.cd_material, 
	b.qt_material, 
	a.cd_unidade_medida_compra, 
	a.nr_seq_tipo_compra, 
	a.nr_seq_mod_compra, 
	b.nr_solic_compra, 
	b.nr_item_solic_compra, 
	a.ds_material_direto_w, 
	obter_se_amostra_item_sc(a.nr_solic_compra,a.nr_item_solic_compra) ie_amostra, 
	obter_se_bula_item_sc(a.nr_solic_compra,a.nr_item_solic_compra) ie_bula, 
	obter_se_catalogo_item_sc(a.nr_solic_compra,a.nr_item_solic_compra) ie_catalogo	 
from	cot_compra_solic_agrup b, 
	cot_compra_item a 
where	a.nr_cot_compra	= nr_cot_compra_p 
and	a.nr_cot_compra	= b.nr_cot_compra 
and	a.nr_item_cot_compra = b.nr_item_cot_compra 
and	substr(lic_obter_tipo_compra(a.nr_seq_tipo_compra),1,1) = 'L' 

union all
 
select	a.nr_item_cot_compra, --traz somente os itens que não tem agrupamento e não tem solicitacao(digitados na cotacao) 
	a.cd_material, 
	a.qt_material, 
	a.cd_unidade_medida_compra, 
	a.nr_seq_tipo_compra, 
	a.nr_seq_mod_compra, 
	0 nr_solic_compra, 
	0 nr_item_solic_compra, 
	a.ds_material_direto_w, 
	'N', 
	'N', 
	'N' 
from	cot_compra_item a 
where	a.nr_cot_compra	= nr_cot_compra_p 
and	substr(lic_obter_tipo_compra(a.nr_seq_tipo_compra),1,1) = 'L' 
and	coalesce(a.nr_solic_compra::text, '') = '' 
and not exists ( 
	select	1 
	from	cot_compra_solic_agrup b 
	where	a.nr_cot_compra	= b.nr_cot_compra 
	and	a.nr_item_cot_compra = b.nr_item_cot_compra) 
order by 
	nr_seq_mod_compra, 
	nr_item_cot_compra, 
	nr_solic_compra desc;

c02 CURSOR FOR 
SELECT	nr_item_solic_compra_entr, 
	qt_entrega_solicitada, 
	dt_entrega_solicitada, 
	ds_observacao 
from	solic_compra_item_entrega 
where	nr_solic_compra		= nr_solic_compra_w 
and	nr_item_solic_compra	= nr_item_solic_compra_w;

c03 CURSOR FOR 
SELECT	distinct 
	a.nr_sequencia 
from	cot_compra_forn a, 
	cot_compra_forn_item b 
where	a.nr_sequencia = b.nr_seq_cot_forn 
and	a.nr_cot_compra = nr_cot_compra_p 
and	b.nr_item_cot_compra = nr_item_cot_compra_w;

c04 CURSOR FOR	 
SELECT	nr_sequencia 
from	cot_compra_forn_item 
where	nr_seq_cot_forn = nr_seq_fornec_w 
and	nr_item_cot_compra = nr_item_cot_compra_w;

c05 CURSOR FOR 
SELECT	distinct 
	nr_cot_compra 
from	cot_compra_item 
where	nr_solic_compra in (	 
	SELECT	nr_solic_compra 
	from	solic_compra 
	where	nr_cot_compra_origem_lic = nr_cot_compra_p) 
and	substr(lic_obter_tipo_compra(nr_seq_tipo_compra),1,1) = 'L';

c06 CURSOR FOR 
SELECT	nr_item_cot_compra, 
	cd_material, 
	qt_material, 
	cd_unidade_medida_compra, 
	nr_solic_compra, 
	nr_item_solic_compra 
from	cot_compra_item 
where	nr_cot_compra = nr_cot_compra_w 
order by nr_item_cot_compra;

c07 CURSOR FOR 
SELECT	distinct 
	nr_cot_compra 
from	cot_compra_item 
where	nr_solic_compra in (	 
	SELECT	nr_solic_compra 
	from	solic_compra 
	where	nr_cot_compra_origem_lic = nr_cot_compra_p);

c08 CURSOR FOR 
SELECT	cd_cgc_fornecedor_venc_alt, 
	cd_cgc_fornecedor_venc_sis, 
	nr_item_cot_compra, 
	cd_material 
from	cot_compra_item 
where	nr_cot_compra		= nr_cot_compra_p 
and	(cd_cgc_fornecedor_venc_alt IS NOT NULL AND cd_cgc_fornecedor_venc_alt::text <> '');
	

BEGIN 
 
nr_seq_licitacao_w	:= coalesce(nr_seq_licitacao_p,0);
 
select	coalesce(min(nr_sequencia),0) 
into STRICT	nr_seq_forma_compra_w 
from	reg_lic_forma_compra 
where	ie_situacao	= 'A' 
and	ie_forma_compra	= 'L';
 
if (nr_seq_forma_compra_w = 0) then 
	CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(242371);
	/*R.aise_application_error(-20011,	'Não existe nenhuma forma de compra cadastrada do tipo: Licitação.' || 
					'Favor verificar em Cadastros Gerais > Suprimentos > Licitação > Formas de compra para solicitação.');*/
 
end if;
 
qt_dias_w := obter_param_usuario(913, 11, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, qt_dias_w);
 
open C01;
loop 
fetch C01 into	 
	nr_item_cot_compra_w, 
	cd_material_w, 
	qt_material_w, 
	cd_unidade_medida_compra_w, 
	nr_seq_tipo_compra_w, 
	nr_seq_mod_compra_w, 
	nr_solic_compra_w, 
	nr_item_solic_compra_w, 
	ds_mat_direto_w, 
	ie_amostra_w, 
	ie_bula_w, 
	ie_catalogo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
 
	/*Tratamento especial para os itens que foram incluidos na cotação sem solicitação*/
 
	if (coalesce(nr_solic_compra_w, 0) = 0) then 
		select	max(nr_solic_compra) 
		into STRICT	nr_solic_compra_w 
		from	solic_compra;
	end if;
	/*Fim*/
 
 
	select	cd_local_estoque, 
		cd_centro_custo, 
		cd_conta_contabil, 
		cd_pessoa_solicitante, 
		cd_comprador_resp, 
		cd_setor_atendimento, 
		ie_aviso_chegada, 
		ie_aviso_aprov_oc, 
		ie_urgente, 
		ds_observacao 
	into STRICT	cd_local_estoque_w, 
		cd_centro_custo_w, 
		cd_conta_contabil_w, 
		cd_pessoa_solicitante_w, 
		cd_comprador_resp_w, 
		cd_setor_atendimento_w, 
		ie_aviso_chegada_w, 
		ie_aviso_aprov_oc_w, 
		ie_urgente_w, 
		ds_observacao_solic_w 
	from	solic_compra 
	where	nr_solic_compra	= nr_solic_compra_w;
	 
	if (nr_seq_mod_compra_w <> nr_seq_mod_compra_ww) or (nr_solic_compra_w <> nr_solic_compra_ww) then 
		begin 
			 
		select	nextval('solic_compra_seq') 
		into STRICT	nr_solic_compra_nova_w 
		;
		 
		insert into solic_compra( 
			nr_solic_compra,			cd_estabelecimento,		dt_solicitacao_compra, 
			dt_atualizacao,			nm_usuario,			ie_situacao, 
			cd_pessoa_solicitante,		cd_local_estoque,			cd_centro_custo, 
			cd_conta_contabil,			cd_setor_atendimento,		ds_observacao, 
			dt_liberacao,			dt_autorizacao,			ie_aviso_chegada, 
			ie_aviso_aprov_oc,			ie_urgente,			ie_forma_exportar, 
			cd_comprador_resp,		ie_tipo_solicitacao,			ie_comodato, 
			ie_semanal,			nm_usuario_lib,			nr_seq_forma_compra, 
			nr_solic_compra_origem_lic,		nr_cot_compra_origem_lic,		dt_baixa, 
			nm_usuario_nrec,		dt_atualizacao_nrec) 
		values (	nr_solic_compra_nova_w,		cd_estabelecimento_p,		clock_timestamp(), 
			clock_timestamp(),				nm_usuario_p,			'A', 
			cd_pessoa_solicitante_w,		cd_local_estoque_w,		cd_centro_custo_w, 
			cd_conta_contabil_w,		cd_setor_atendimento_w,		coalesce(ds_observacao_solic_p,ds_observacao_solic_w), 
			clock_timestamp(),				clock_timestamp(),				coalesce(ie_aviso_chegada_w,'N'), 
			coalesce(ie_aviso_aprov_oc_w,'N'),		coalesce(ie_urgente_w,'N'),		0, 
			cd_comprador_resp_w,		0,				'N', 
			'N',				nm_usuario_p,			nr_seq_forma_compra_w, 
			nr_solic_compra_w,			nr_cot_compra_p,			clock_timestamp(), 
			nm_usuario_p,			clock_timestamp());
 
		CALL gerar_historico_solic_compra( 
				nr_solic_compra_nova_w, 
				wheb_mensagem_pck.get_texto(303575), 
				wheb_mensagem_pck.get_texto(303576,'NR_COT_COMPRA_P='||nr_cot_compra_p), 
				'G', 
				nm_usuario_p);	
			 
		/*Cria nova cotação de compras*/
 
		if (nr_seq_mod_compra_w <> nr_seq_mod_compra_ww) then 
			begin 
			select	nextval('cot_compra_seq') 
			into STRICT	nr_cot_compra_nova_w 
			;
 
			select	cd_comprador, 
				cd_pessoa_solicitante, 
				nr_documento_interno, 
				ds_observacao 
			into STRICT	cd_comprador_cot_w, 
				cd_pessoa_solic_cot_w, 
				nr_documento_interno_w, 
				ds_observacao_cot_w 
			from	cot_compra 
			where	nr_cot_compra = nr_cot_compra_p;
				 
			insert into cot_compra( 
				nr_cot_compra, 
				dt_cot_compra, 
				dt_atualizacao, 
				cd_comprador, 
				nm_usuario, 
				cd_pessoa_solicitante, 
				cd_estabelecimento, 
				dt_retorno_prev, 
				dt_fechamento_lic, 
				nr_documento_interno, 
				ds_observacao, 
				ie_finalidade_cotacao) 
			values (	nr_cot_compra_nova_w, 
				clock_timestamp(), 
				clock_timestamp(), 
				cd_comprador_cot_w, 
				nm_usuario_p, 
				cd_pessoa_solic_cot_w, 
				cd_estabelecimento_p, 
				clock_timestamp(), 
				clock_timestamp(), 
				nr_documento_interno_w, 
				ds_observacao_cot_w, 
				'C');
			/*Fim*/
 
			 
			CALL gerar_historico_cotacao( 
					nr_cot_compra_nova_w, 
					wheb_mensagem_pck.get_texto(303577), 
					wheb_mensagem_pck.get_texto(303576,'NR_COT_COMPRA_P='||nr_cot_compra_p||';NR_SOLIC_COMPRA_NOVA_W='||nr_solic_compra_nova_w), 
					'S', 
					nm_usuario_p);
			end;
		end if;
		 
		nr_seq_mod_compra_ww	:= nr_seq_mod_compra_w;
		nr_solic_compra_ww	:= nr_solic_compra_w;
		 
		end;
	end if;
	 
	SELECT * FROM SELECT * FROM define_conta_contabil(2, cd_estabelecimento_p, null, null, null, null, cd_material_w, null, null, cd_local_estoque_w, cd_conta_contabil_w, cd_centro_custo_w, null, clock_timestamp()) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w INTO cd_conta_contabil_w, cd_centro_custo_w;
 
	if (length(cd_conta_contabil_w) = 0) then 
		begin 
		ie_tipo_conta_w	:= 3;
		if (coalesce(cd_centro_custo_w::text, '') = '') then 
			ie_tipo_conta_w	:= 2;
		end if;
		SELECT * FROM define_conta_material(	cd_estabelecimento_p, cd_material_w, ie_tipo_conta_w, null, null, null, null, null, null, null, cd_local_estoque_w, Null, clock_timestamp(), cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
		end;
	end if;
	 
	SELECT * FROM Obter_ultima_compra_material(cd_estabelecimento_p, cd_material_w, cd_unidade_medida_compra_w, 'C', clock_timestamp() - coalesce(qt_dias_w, 90), nr_seq_nf_w, vl_ultima_compra_w) INTO STRICT nr_seq_nf_w, vl_ultima_compra_w;
	 
	select	coalesce(max(nr_item_solic_compra), 0) + 1 
	into STRICT	nr_item_solic_compra_ww 
	from	solic_compra_item 
	where	nr_solic_compra	= nr_solic_compra_nova_w;
 
	/*Carrega os itens na solicitação de compras*/
 
	insert into solic_compra_item( 
		nr_solic_compra,			nr_item_solic_compra,		cd_material, 
		cd_unidade_medida_compra,		qt_material,			dt_atualizacao, 
		nm_usuario,			ie_situacao,			ds_material_direto, 
		dt_solic_item,			dt_autorizacao,			vl_unit_previsto, 
		ie_geracao,			ie_forma_exportar,			cd_conta_contabil, 
		dt_baixa,			qt_conv_compra_est_orig,		ie_amostra,			 
		ie_bula,			ie_catalogo,				qt_saldo_disp_estoque) 
	values (	nr_solic_compra_nova_w,		nr_item_solic_compra_ww,		cd_material_w, 
		cd_unidade_medida_compra_w,	qt_material_w,			clock_timestamp(), 
		nm_usuario_p,			'A',				ds_mat_direto_w, 
		clock_timestamp(),				null,				vl_ultima_compra_w, 
		'S',				null,				cd_conta_contabil_w, 
		clock_timestamp(),			obter_dados_material(cd_material_w,'QCE'), ie_amostra_w, 
		ie_bula_w,			ie_catalogo_w,			obter_saldo_disp_estoque(cd_estabelecimento_p, cd_material_w, cd_local_estoque_w, trunc(clock_timestamp(),'mm')));
		 
	if (coalesce(nr_item_solic_compra_w, 0) = 0) then 
		insert into solic_compra_item_entrega( 
			nr_solic_compra, 
			nr_item_solic_compra, 
			nr_item_solic_compra_entr, 
			qt_entrega_solicitada, 
			dt_entrega_solicitada, 
			dt_atualizacao, 
			nm_usuario) 
		values ( nr_solic_compra_nova_w, 
			nr_item_solic_compra_ww, 
			nr_item_solic_compra_ww, 
			qt_material_w, 
			clock_timestamp() + interval '7 days', 
			clock_timestamp(), 
			nm_usuario_p);
	end if;
 
	/*Para gravar as entregas dos itens da solicitação de compras conforme é a original*/
 
	open C02;
	loop 
	fetch C02 into	 
		nr_item_solic_compra_entr_w, 
		qt_entrega_solicitada_w, 
		dt_entrega_solicitada_w, 
		ds_observacao_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		insert into solic_compra_item_entrega( 
			nr_solic_compra, 
			nr_item_solic_compra, 
			nr_item_solic_compra_entr, 
			qt_entrega_solicitada, 
			dt_entrega_solicitada, 
			dt_atualizacao, 
			nm_usuario, 
			ds_observacao) 
		values ( nr_solic_compra_nova_w, 
			nr_item_solic_compra_ww, 
			nr_item_solic_compra_entr_w, 
			qt_entrega_solicitada_w, 
			dt_entrega_solicitada_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			ds_observacao_w);
		end;
	end loop;
	close c02;
	/*Fim*/
 
	 
	select	coalesce(max(nr_item_cot_compra), 0) + 1 
	into STRICT	nr_item_cot_compra_ww 
	from	cot_compra_item 
	where	nr_cot_compra	= nr_cot_compra_nova_w;
	 
	/*Carrega os itens na cotação de compras de compras*/
 
	insert into cot_compra_item( 
		nr_cot_compra,			nr_item_cot_compra,		cd_material, 
		qt_material,			cd_unidade_medida_compra,		dt_atualizacao, 
		dt_limite_entrega,			nm_usuario,			ie_situacao, 
		ds_material_direto_w,		nr_solic_compra,			nr_item_solic_compra, 
		cd_estab_item,			nr_seq_tipo_compra,		nr_seq_mod_compra) 
	values (	nr_cot_compra_nova_w,		nr_item_cot_compra_ww,		cd_material_w, 
		qt_material_w,			cd_unidade_medida_compra_w,	clock_timestamp(), 
		clock_timestamp(),				nm_usuario_p,			'A', 
		ds_mat_direto_w,			nr_solic_compra_nova_w,		nr_item_solic_compra_ww, 
		cd_estabelecimento_p,		nr_seq_tipo_compra_w,		nr_seq_mod_compra_w);
		 
	update	solic_compra_item 
	set	nr_cot_compra = nr_cot_compra_nova_w, 
		nr_item_cot_compra = nr_item_cot_compra_ww 
	where	nr_solic_compra = nr_solic_compra_nova_w 
	and	nr_item_solic_compra = nr_item_solic_compra_ww;
	 
	CALL gerar_cot_compra_item_entrega(nr_cot_compra_nova_w,nr_item_cot_compra_ww,nm_usuario_p);
	CALL agrupar_cotacao_item(nr_cot_compra_nova_w,nr_item_cot_compra_ww,0,nm_usuario_p);
		 
	open C03;
	loop 
	fetch C03 into	 
		nr_seq_fornec_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
 
		select	coalesce(max(nr_sequencia), 0) 
		into STRICT	nr_seq_fornec_novo_w 
		from	cot_compra_forn 
		where	nr_cot_compra = nr_cot_compra_nova_w 
		and	cd_cgc_fornecedor = ( 
			SELECT	cd_cgc_fornecedor 
			from	cot_compra_forn 
			where	nr_sequencia = nr_seq_fornec_w);
		 
		if (nr_seq_fornec_novo_w = 0) then 
		 
			select	nextval('cot_compra_forn_seq') 
			into STRICT	nr_seq_fornec_novo_w 
			;
			/*Carrega os fornecedores na nova cotação conforme existe na cotação original*/
 
			insert into cot_compra_forn(		 
				nr_sequencia,			nr_cot_compra,			cd_cgc_fornecedor,			 
				cd_condicao_pagamento,		cd_moeda,			ie_frete, 
				dt_atualizacao,			nm_usuario,			vl_previsto_frete, 
				nr_documento_fornec,		dt_documento,			ie_tipo_documento, 
				qt_dias_validade,			qt_dias_entrega,			pr_desconto, 
				pr_desconto_pgto_antec,		pr_juros_negociado,		ds_observacao,			          
				cd_pessoa_fisica,			ie_status,				vl_despesa_acessoria, 
				ie_gerado_bionexo,			vl_desconto,			ie_exclusivo, 
				ie_forma_pagto) 
			SELECT	nr_seq_fornec_novo_w,		nr_cot_compra_nova_w,		cd_cgc_fornecedor,			 
				cd_condicao_pagamento,		cd_moeda,			ie_frete, 
				clock_timestamp(),				nm_usuario_p,			vl_previsto_frete, 
				nr_documento_fornec,		dt_documento,			ie_tipo_documento, 
				qt_dias_validade,			qt_dias_entrega,			pr_desconto, 
				pr_desconto_pgto_antec,		pr_juros_negociado,		ds_observacao,			          
				cd_pessoa_fisica,			ie_status,				vl_despesa_acessoria, 
				ie_gerado_bionexo,			vl_desconto,			ie_exclusivo, 
				ie_forma_pagto 
			from	cot_compra_forn 
			where	nr_sequencia = nr_seq_fornec_w;
		end if;
		 
		open C04;
		loop 
		fetch C04 into	 
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin 
			 
			select	nextval('cot_compra_forn_item_seq') 
			into STRICT	nr_seq_fornec_item_w 
			;	
			 
			insert into cot_compra_forn_item( 
				nr_sequencia,			nr_cot_compra,			nr_item_cot_compra, 
				nr_seq_cot_forn,			cd_cgc_fornecedor,		qt_material, 
				vl_unitario_material,			dt_atualizacao,			nm_usuario, 
				pr_desconto,			vl_frete_rateio,			vl_preco_liquido, 
				ds_observacao,			vl_presente,			ds_marca, 
				qt_prioridade,			vl_unid_fornec,			qt_conv_unid_fornec, 
				ds_material_direto,			ie_situacao,			dt_validade,			      
				cd_motivo_falta_preco,		vl_preco,				cd_material, 
				vl_unitario_liquido,			vl_desconto,			vl_unitario_inicial, 
				ie_preco_fornec,    		nr_contrato,			ds_marca_fornec, 
				nr_id_integracao,			ie_considera_media_lic,		ds_motivo_desconsiderar)		 
			SELECT	nr_seq_fornec_item_w,		nr_cot_compra_nova_w,		nr_item_cot_compra_ww, 
				nr_seq_fornec_novo_w,		cd_cgc_fornecedor,		qt_material, 
				vl_unitario_material,			clock_timestamp(),				nm_usuario_p, 
				pr_desconto,			vl_frete_rateio,			vl_preco_liquido, 
				ds_observacao,			vl_presente,			ds_marca, 
				qt_prioridade,			vl_unid_fornec,			qt_conv_unid_fornec, 
				ds_material_direto,			ie_situacao,			dt_validade,			      
				cd_motivo_falta_preco,		vl_preco,				cd_material, 
				vl_unitario_liquido,			vl_desconto,			vl_unitario_inicial, 
				ie_preco_fornec,    		nr_contrato,			ds_marca_fornec, 
				nr_id_integracao,			ie_considera_media_lic,		ds_motivo_desconsiderar 
			from	cot_compra_forn_item 
			where	nr_sequencia = nr_sequencia_w;
			end;			
		end loop;
		close C04;		
		end;
	end loop;
	close C03;	
	 
	baixar_solic_compra(nr_solic_compra_w,4,wheb_mensagem_pck.get_texto(303579),nm_usuario_p);	
	 
	end;
end loop;
close C01;
 
open C07;
loop 
fetch C07 into	 
	nr_cot_compra_w;
EXIT WHEN NOT FOUND; /* apply on C07 */
	begin 
	select	count(*) 
	into STRICT	qt_existe_w 
	from	cot_compra_item 
	where	nr_cot_compra = nr_cot_compra_p 
	and	(cd_cgc_fornecedor_venc_alt IS NOT NULL AND cd_cgc_fornecedor_venc_alt::text <> '');
 
	CALL calcular_cot_compra_liquida(nr_cot_compra_w, nm_usuario_p);
	 
	if (qt_existe_w > 0) then 
		begin 
		open c08;
		loop 
		fetch c08 into 
			cd_cgc_fornecedor_venc_alt_w, 
			cd_cgc_fornecedor_venc_sis_w, 
			nr_seq_item_w, 
			cd_material_ww;
		EXIT WHEN NOT FOUND; /* apply on c08 */
 
 
		select	max(nr_sequencia) 
		into STRICT	nr_seq_fornec_ww 
		from	cot_compra_forn 
		where	nr_cot_compra = nr_cot_compra_w 
		and	cd_cgc_fornecedor = cd_cgc_fornecedor_venc_alt_w;
		 
		select	max(nr_sequencia) 
		into STRICT	nr_seq_fornec_www 
		from	cot_compra_forn 
		where	nr_cot_compra = nr_cot_compra_w 
		and	cd_cgc_fornecedor = cd_cgc_fornecedor_venc_sis_w;
		 
		CALL alterar_vencedor_cotacao(cd_material_ww,nr_cot_compra_w,nr_seq_item_w,nr_seq_fornec_www,nr_seq_fornec_ww,null,nm_usuario_p,'');
		end loop;
		close c08;
		end;
	end if;
	 
	CALL gerar_cot_compra_resumo(nr_cot_compra_w,nm_usuario_p);			
	end;
end loop;
close C07;
 
open C05;
loop 
fetch C05 into	 
	nr_cot_compra_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
	begin 
	CALL calcular_cot_compra_liquida(nr_cot_compra_w, nm_usuario_p);
	CALL gerar_cot_compra_resumo(nr_cot_compra_w,nm_usuario_p);
	 
	select	coalesce(max(nr_sequencia),0) 
	into STRICT	nr_seq_tipo_compra_w 
	from	reg_lic_tipo_compra 
	where	ie_tipo_compra = 'L' 
	and	ie_situacao = 'A';
	 
	if (nr_seq_tipo_compra_w = 0) then 
		CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(242372);
		/*R.aise_application_error(-20011,	'Não existe nenhuma forma de compra cadastrada do tipo: Licitação.' || 
						'Favor verificar em Cadastros Gerais > Suprimentos > Licitação > Formas de compra para solicitação.');*/
 
	end if;
	 
	select	max(nr_seq_mod_compra) 
	into STRICT	nr_seq_mod_compra_w 
	from	cot_compra_item 
	where	nr_cot_compra = nr_cot_compra_w;
 
	if (nr_seq_licitacao_w = 0) then 
	 
		select	nextval('reg_licitacao_seq') 
		into STRICT	nr_seq_licitacao_w 
		;
		 
		select	coalesce(min(nr_sequencia),0) 
		into STRICT	nr_seq_estagio_w 
		from	lic_estagio;
		 
		if (nr_seq_estagio_w = 0) then 
			CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(242373);
			/*R-aise_application_error(-20011,	'Não existe nenhum estágio cadastrado.' || 
							'Favor verificar em Cadastros Gerais > Suprimentos > Cadastros Compras > Estagio do processo Licitatório.');*/
 
		end if;
		 
		insert into reg_licitacao( 
			nr_sequencia,			cd_estabelecimento,			dt_atualizacao, 
			nm_usuario,			dt_atualizacao_nrec,			nm_usuario_nrec, 
			cd_processo,			dt_emissao,				ds_objeto, 
			nr_seq_estagio,			nr_seq_tipo_compra,			nr_seq_mod_compra, 
			ie_registro_preco) 
		values (	nr_seq_licitacao_w,			cd_estabelecimento_p,			clock_timestamp(), 
			nm_usuario_p,			clock_timestamp(),					nm_usuario_p, 
			'0',				clock_timestamp(),					wheb_mensagem_pck.get_texto(303591,'NR_COT_COMPRA_P='||nr_cot_compra_p),--(Nova licitação gerada automática pela cotação: #@NR_COT_COMPRA_P#@) 
			nr_seq_estagio_w,			nr_seq_tipo_compra_w,			nr_seq_mod_compra_w, 
			'N');
		 
		 
		insert into reg_lic_historico( 
			nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			ie_tipo_historico, 
			ds_observacao, 
			nr_seq_licitacao) 
		values (	nextval('reg_lic_historico_seq'), 
			clock_timestamp(), 
			nm_usuario_p, 
			'AC', 
			wheb_mensagem_pck.get_texto(303586,'NR_COT_COMPRA_P='||nr_cot_compra_p), 
			nr_seq_licitacao_w);
	end if;
	 
	update	cot_compra 
	set	nr_seq_reg_licitacao = nr_seq_licitacao_w 
	where	nr_cot_compra = nr_cot_compra_w;
	 
	open C06;
	loop 
	fetch C06 into 
		nr_item_cot_compra_www, 
		cd_material_w, 
		qt_material_w, 
		cd_unidade_medida_compra_w, 
		nr_solic_compra_w, 
		nr_item_solic_compra_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */
		begin 
		 
		select	coalesce(max(nr_seq_lic_item), 0) +1 
		into STRICT	nr_seq_lic_item_w 
		from	reg_lic_item 
		where	nr_seq_licitacao = nr_seq_licitacao_w;
		 
		insert into reg_lic_item( 
			dt_atualizacao, 
			nm_usuario, 
			nr_seq_licitacao, 
			nr_seq_lic_item, 
			cd_material, 
			cd_unid_medida, 
			qt_item) 
		values (	clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_licitacao_w, 
			nr_seq_lic_item_w, 
			cd_material_w, 
			cd_unidade_medida_compra_w, 
			qt_material_w);
 
		update	cot_compra_item 
		set	nr_seq_licitacao		= nr_seq_licitacao_w, 
			nr_seq_lic_item		= nr_seq_lic_item_w 
		where	nr_cot_compra		= nr_cot_compra_w 
		and	nr_item_cot_compra	= nr_item_cot_compra_www;
 
		insert into reg_lic_solic_item( 
			nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			nr_seq_licitacao, 
			nr_seq_lic_item, 
			nr_solic_compra, 
			nr_item_solic_compra, 
			qt_item) 
		values (	nextval('reg_lic_solic_item_seq'), 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_licitacao_w, 
			nr_seq_lic_item_w, 
			nr_solic_compra_w, 
			nr_item_solic_compra_w, 
			qt_material_w);			
		end;
	end loop;
	close C06;	
	end;
end loop;
close C05;
 
update	cot_compra 
set	dt_fechamento_lic	= clock_timestamp() 
where	nr_cot_compra	= nr_cot_compra_p;
 
CALL gerar_historico_cotacao( 
		nr_cot_compra_p, 
		wheb_mensagem_pck.get_texto(303580), 
		wheb_mensagem_pck.get_texto(303582), 
		'S', 
		nm_usuario_p);
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lic_gerar_compra_licitacao ( cd_estabelecimento_p bigint, nr_cot_compra_p bigint, nr_seq_licitacao_p bigint, nm_usuario_p text, ds_observacao_solic_p text) FROM PUBLIC;

