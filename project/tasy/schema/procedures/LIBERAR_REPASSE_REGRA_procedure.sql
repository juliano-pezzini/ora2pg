-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_repasse_regra ( nr_repasse_terceiro_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_regra_w		bigint;
qt_dias_ref_w		bigint;
cd_estabelecimento_w	smallint;
nr_seq_terceiro_w		bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
cd_area_procedimento_w	integer;
cd_especialidade_w	integer;
cd_grupo_proc_w		bigint;
ie_status_regra_w		varchar(1);
dt_procedimento_w	timestamp;
nr_seq_proc_repasse_w	bigint;
vl_repasse_w		double precision;
cd_setor_atendimento_w	bigint;
ie_tipo_atendimento_w	bigint;
ie_tipo_convenio_w	smallint;
cd_medico_executor_w	varchar(10);
cd_convenio_w		integer;
dt_sysdate_w		timestamp;
dt_inicial_w		timestamp;
dt_final_w			timestamp;

c01 CURSOR FOR 
SELECT	a.cd_procedimento, 
	a.ie_origem_proced, 
	a.cd_area_procedimento, 
	a.cd_especialidade, 
	a.cd_grupo_proc, 
	a.nr_sequencia, 
	a.qt_dias_ref, 
	a.cd_setor_atendimento, 
	a.ie_tipo_atendimento, 
	a.ie_tipo_convenio, 
	a.cd_medico_executor, 
	a.cd_convenio 
from	regra_lib_repasse a 
where	coalesce(a.nr_seq_terceiro, nr_seq_terceiro_w)		= nr_seq_terceiro_w 
and	a.cd_estabelecimento					= cd_estabelecimento_w;

c02 CURSOR FOR 
SELECT	ie_status 
from	regra_lib_rep_status a 
where	a.nr_seq_regra		= nr_seq_regra_w;

c03 CURSOR FOR 
SELECT	a.nr_sequencia, 
	b.dt_procedimento, 
	a.vl_repasse 
FROM atendimento_paciente f, convenio e, estrutura_procedimento_v c, procedimento_repasse a, procedimento_paciente b
LEFT OUTER JOIN conta_paciente d ON (b.nr_interno_conta = d.nr_interno_conta)
WHERE coalesce(b.cd_convenio,d.cd_convenio_parametro)			= e.cd_convenio  and a.nr_seq_procedimento						= b.nr_sequencia and b.cd_procedimento						= c.cd_procedimento and b.ie_origem_proced						= c.ie_origem_proced and d.nr_atendimento						= f.nr_atendimento and coalesce(coalesce(cd_medico_executor_w,b.cd_medico_executor),'0')		= coalesce(b.cd_medico_executor,'0') and coalesce(coalesce(ie_tipo_convenio_w,e.ie_tipo_convenio),0)		= coalesce(e.ie_tipo_convenio,0) and coalesce(cd_procedimento_w,b.cd_procedimento)			= b.cd_procedimento and coalesce(ie_origem_proced_w,b.ie_origem_proced)			= b.ie_origem_proced and coalesce(cd_area_procedimento_w,c.cd_area_procedimento)		= c.cd_area_procedimento and coalesce(cd_especialidade_w,c.cd_especialidade)			= c.cd_especialidade and coalesce(cd_grupo_proc_w,c.cd_grupo_proc)				= c.cd_grupo_proc and coalesce(cd_convenio_w,e.cd_convenio)				= e.cd_convenio and coalesce(null, b.cd_setor_atendimento)			= b.cd_setor_atendimento and coalesce(ie_tipo_atendimento_w, f.ie_tipo_atendimento)	= f.ie_tipo_atendimento and b.dt_procedimento	between dt_inicial_w and fim_dia(dt_final_w) and a.nr_seq_terceiro						= nr_seq_terceiro_w and coalesce(a.nr_repasse_terceiro::text, '') = '' and (b.nr_interno_conta IS NOT NULL AND b.nr_interno_conta::text <> '') and a.ie_status							= ie_status_regra_w;


BEGIN 
 
if (nr_repasse_terceiro_p IS NOT NULL AND nr_repasse_terceiro_p::text <> '') then 
 
	dt_sysdate_w	:= trunc(clock_timestamp(),'dd');
	 
	select	nr_seq_terceiro, 
		cd_estabelecimento, 
		dt_periodo_inicial, 
		dt_periodo_final 
	into STRICT	nr_seq_terceiro_w, 
		cd_estabelecimento_w, 
		dt_inicial_w, 
		dt_final_w 
	from	repasse_terceiro 
	where	nr_repasse_terceiro			= nr_repasse_terceiro_p;
	 
	open c01;
	loop 
	fetch c01 into 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		cd_area_procedimento_w, 
		cd_especialidade_w, 
		cd_grupo_proc_w, 
		nr_seq_regra_w, 
		qt_dias_ref_w, 
		cd_setor_atendimento_w, 
		ie_tipo_atendimento_w, 
		ie_tipo_convenio_w, 
		cd_medico_executor_w, 
		cd_convenio_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
 
		open c02;
		loop 
		fetch c02 into 
			ie_status_regra_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			 
			open c03;
			loop 
			fetch c03 into 
				nr_seq_proc_repasse_w, 
				dt_procedimento_w, 
				vl_repasse_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				 
				CALL Liberar_ProcMat_Repasse(nr_seq_proc_repasse_w, 
					null, 
					'L', 
					vl_repasse_w, 
					null,    
					clock_timestamp(), 
					null, 
					nm_usuario_p, 
					null);
 
				update	procedimento_repasse  --'Liberado automaticamente por regra (' || nr_seq_regra_w || ') ' || ' ao gerar repasse. '								 
				set	ds_observacao	= wheb_mensagem_pck.get_texto(308367,'nr_seq_regra_w='||nr_seq_regra_w)							 
				where	nr_sequencia	= nr_seq_proc_repasse_w;
			end loop;
			close c03;
		end loop;
		close c02;
	end loop;
	close c01;
end if;
 
 
/* Nao pode ter commit nessa procedure */
 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_repasse_regra ( nr_repasse_terceiro_p bigint, nm_usuario_p text) FROM PUBLIC;

