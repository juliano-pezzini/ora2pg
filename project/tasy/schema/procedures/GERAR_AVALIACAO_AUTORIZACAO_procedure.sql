-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_avaliacao_autorizacao ( nr_seq_med_aval_pac_p bigint, nr_seq_tipo_avaliacao_p bigint, nr_atendimento_p bigint, dt_avaliacao_p timestamp, dt_liberacao_p timestamp, nm_usuario_lib_p text, ie_situacao_p text, nm_usuario_inativacao_p text, dt_inativacao_p timestamp ) AS $body$
DECLARE


nr_seq_autorizacao_conv_w  autorizacao_convenio_aval.nr_seq_autorizacao_conv%type;
nr_sequencia_w  		   autorizacao_convenio_aval.nr_sequencia%type;
nr_seq_auto_conv_aval_w    autorizacao_convenio_aval.nr_sequencia%type;
ds_resultado_w 			   med_avaliacao_result.ds_resultado%type;
nr_seq_item_w 			   med_avaliacao_result.nr_seq_item%type;
qt_resultado_w 			   med_avaliacao_result.qt_resultado%type;

qt_registro_w smallint;


BEGIN
	select max(a.nr_sequencia) into STRICT nr_seq_autorizacao_conv_w
	from autorizacao_convenio a, estagio_autorizacao b
	where
	a.NR_SEQ_ESTAGIO = b.nr_sequencia 
    and b.ie_interno not in ('10','70','90')
	and a.nr_atendimento = nr_atendimento_p;

	select count(nr_seq_med_aval_pac),
		   max(nr_sequencia) 
		   into STRICT qt_registro_w, 
		   nr_seq_auto_conv_aval_w 
    from autorizacao_convenio_aval
	where nr_seq_med_aval_pac     = nr_seq_med_aval_pac_p 
	  and nr_seq_autorizacao_conv = nr_seq_autorizacao_conv_w;
	
	if (nr_seq_autorizacao_conv_w IS NOT NULL AND nr_seq_autorizacao_conv_w::text <> '') then
	 begin
		if qt_registro_w = 0 then
		begin
			select nextval('autorizacao_convenio_aval_seq') into STRICT nr_sequencia_w;
			
			insert into autorizacao_convenio_aval(
			nr_sequencia,
			nr_seq_autorizacao_conv,
			dt_atualizacao,
			nm_usuario, 
			dt_atualizacao_nrec ,
			nm_usuario_nrec ,
			dt_avaliacao  ,
			nr_seq_tipo_avaliacao,
			nm_usuario_lib ,
			dt_liberacao,  
			ie_situacao,
			nm_usuario_inativacao ,
			dt_inativacao,
			nr_seq_med_aval_pac)
			values (
			nr_sequencia_w, 
			nr_seq_autorizacao_conv_w, 
			clock_timestamp(), 
			wheb_usuario_pck.get_nm_usuario,
			clock_timestamp(), 
			wheb_usuario_pck.get_nm_usuario,
			dt_avaliacao_p,
			nr_seq_tipo_avaliacao_p, 
			nm_usuario_lib_p, 
			dt_liberacao_p, 
			ie_situacao_p, 
			nm_usuario_inativacao_p,
			dt_inativacao_p,
			nr_seq_med_aval_pac_p);	
	
		end;
		else
			update autorizacao_convenio_aval set dt_atualizacao = clock_timestamp(),
												 nm_usuario = wheb_usuario_pck.get_nm_usuario,
												 dt_avaliacao  = dt_avaliacao_p,
												 nr_seq_tipo_avaliacao = nr_seq_tipo_avaliacao_p,
												 nm_usuario_lib = nm_usuario_lib_p,
												 dt_liberacao = dt_liberacao_p,
												 ie_situacao =ie_situacao_p,
												 nm_usuario_inativacao =nm_usuario_inativacao_p,
												 dt_inativacao = dt_inativacao_p
                                                 where nr_seq_med_aval_pac = nr_seq_med_aval_pac_p;
		end if;		
	 end;
	  CALL GERAR_AUTOR_CONV_AV_RESULT(nr_seq_med_aval_pac_p);
	end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_avaliacao_autorizacao ( nr_seq_med_aval_pac_p bigint, nr_seq_tipo_avaliacao_p bigint, nr_atendimento_p bigint, dt_avaliacao_p timestamp, dt_liberacao_p timestamp, nm_usuario_lib_p text, ie_situacao_p text, nm_usuario_inativacao_p text, dt_inativacao_p timestamp ) FROM PUBLIC;

