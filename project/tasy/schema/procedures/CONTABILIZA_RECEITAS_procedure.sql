-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE contabiliza_receitas (( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) is cd_centro_custo_debito_w centro_custo.cd_centro_custo%type) AS $body$
DECLARE

								
nr_sequencia_w	nota_fiscal.nr_sequencia%type;
cd_serie_nf_w	nota_fiscal.cd_serie_nf%type;
ds_retorno_w	varchar(4000) := ' ';

c01 CURSOR FOR
SELECT	a.nr_sequencia,	
		a.cd_serie_nf
from	nota_fiscal a
where (nr_seq_protocolo_p 	<> 0)
and (a.nr_seq_protocolo 	= nr_seq_protocolo_p)
and		a.ie_situacao = '1'
and (nr_interno_conta_p	= a.nr_interno_conta or
		nr_interno_conta_p	= 0)

union

SELECT	a.nr_sequencia,	
		a.cd_serie_nf
from	nota_fiscal a
where	nr_interno_conta_p	= a.nr_interno_conta
and		a.ie_situacao = '1'
and		nr_interno_conta_p	<> 0

union

select	a.nr_sequencia,	
		a.cd_serie_nf
from	nota_fiscal a,
		protocolo_convenio b
where	a.nr_seq_lote_prot	= b.nr_seq_lote_protocolo
and		nr_seq_protocolo_p	<> 0
and		a.ie_situacao = '1'
and		b.nr_seq_protocolo	= nr_seq_protocolo_p
order by nr_sequencia;

BEGIN
if (ie_exclusao_p <> 'S') then
        select b.cd_tipo_lote_contabil
        into STRICT cd_tipo_lote_contabil_w
        from lote_contabil b
        where b.nr_lote_contabil = nr_lote_contabil_p;
        if (cd_tipo_lote_contabil_w <> 6) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(261346);
        end if;
end if;
open c01;
loop
fetch c01 into 	nr_sequencia_w,
				cd_serie_nf_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	
	if (ie_info_p = 'CD_SERIE') then
		if	((length(ds_retorno_w) < 3600) and (cd_serie_nf_w IS NOT NULL AND cd_serie_nf_w::text <> '')) then
			ds_retorno_w := ds_retorno_w || cd_serie_nf_w ||', ';
		end if;	
	end if;
	
	if (ie_info_p = 'NR_SEQUENCIA') then
		if	((length(ds_retorno_w) < 3600) and (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '')) then
			ds_retorno_w := ds_retorno_w || nr_sequencia_w ||', ';
		end if;	
	end if;

end loop;
close c01;								
								
return;
end;

begin
delete
from    lote_contabil_log
where   nr_lote_contabil = nr_lote_contabil_p
and     cd_log_lote in (9,10);

delete  from w_movimento_contabil
where   nr_lote_contabil = nr_lote_contabil_p;
commit;

ds_retorno_w    := null;

/* Identifica se eh exclusao do lote */

if (ie_exclusao_p = 'S') then
        CALL wheb_usuario_pck.set_ie_lote_contabil('S');

        CALL ctb_regras_contabil.comprovante_cache_storage(nr_lote_contabil_p, nm_usuario_p);
        delete  from movimento_contabil
        where   nr_lote_contabil = nr_lote_contabil_p;

        update  lote_contabil
        set     vl_credito              = 0,
                vl_debito               = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update  material_atend_paciente
        set     nr_lote_contabil        = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update  procedimento_paciente
        set     nr_lote_contabil        = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;


        update  conta_paciente
        set     nr_lote_contabil         = NULL,
                nr_lote_repasse         = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        commit;

        update  nota_fiscal
        set     nr_lote_contabil        = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update  proc_paciente_valor
        set     nr_lote_contabil        = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update  mat_atend_paciente_valor
        set     nr_lote_contabil        = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update  material_repasse
        set     nr_lote_contabil        = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update  procedimento_repasse
        set     nr_lote_contabil        = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update  conta_paciente
        set     nr_lote_repasse         = 0
        where   nr_lote_repasse         = nr_lote_contabil_p;

        update  protocolo_convenio
        set     nr_seq_lote_repasse     = 0
        where   nr_seq_lote_repasse     = nr_lote_contabil_p;

        update  titulo_receber_trib
        set     nr_lote_contabil        = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update  conta_pac_ded_conv_item a
        set     nr_lote_contabil         = NULL
        where   nr_lote_contabil        = nr_lote_contabil_p;

        CALL wheb_usuario_pck.set_ie_lote_contabil('N');
else
        select  obter_se_compl_tipo_lote(cd_estabelecimento, cd_tipo_lote_contabil),
                cd_tipo_lote_contabil,
                cd_estabelecimento,
                dt_referencia
        into STRICT    ie_compl_hist_w,
                cd_tipo_lote_contabil_w,
                cd_estab_lote_contabil_w,
                dt_referencia_w
        from    lote_contabil
        where   nr_lote_contabil = nr_lote_contabil_p;

        cd_empresa_w    := obter_empresa_estab(cd_estab_lote_contabil_w);

        /* Verificar se foi informado somente um convenio nos parametros do lote contabil */

        select  max(coalesce(vl_parametro,0))
        into STRICT    ds_convenio_param_w
        from    lote_contabil_parametro
        where   nr_lote_contabil        = nr_lote_contabil_p
        and     nr_seq_parametro        = 3;

        select  substr(max(ds_valor_parametro),1,20)
        into STRICT    cd_conta_fixa_receita_w
        from    lote_contabil_parametro
        where   nr_lote_contabil        = nr_lote_contabil_p
        and     nr_seq_parametro        = 10;

        if (cd_conta_fixa_receita_w IS NOT NULL AND cd_conta_fixa_receita_w::text <> '') then
                begin
                select  cd_conta_contabil
                into STRICT    cd_conta_fixa_receita_w
                from    conta_contabil a
                where   a.ie_situacao   = 'A'
                and     a.cd_empresa    = cd_empresa_w
                and     a.cd_conta_contabil     = cd_conta_fixa_receita_w;
                exception when others then
                        cd_conta_fixa_receita_w := '';
                end;
        end if;

        if (coalesce(position(',' in ds_convenio_param_w),0) > 0) then
                /* Pode ser informado apenas um convenio para cada lote.
                Verifique os parametros deste lote contabil. */
                CALL wheb_mensagem_pck.exibir_mensagem_abort(181109);
        end if;

        dt_referencia_lote_w := trunc(dt_referencia_w,'dd');
        dt_mesano_w := somente_numero(to_char(dt_referencia_w, 'MMYYYY'));

        dt_referencia_w         := trunc(dt_referencia_w, 'mm');
        dt_referencia_final_w   := fim_mes(dt_referencia_w);

        /* [20] - Lote de Receitas - Consistir protocolos de mes diferente do lote */

        ie_consistir_protocolo_w := coalesce(obter_valor_param_usuario(135, 20, obter_perfil_ativo, nm_usuario_p, cd_estab_lote_contabil_w), 'N');
        if (ie_consistir_protocolo_w = 'S') then
                open c050;
                loop
                fetch c050 into
                        nr_seq_protocolo_mes_w;
                EXIT WHEN NOT FOUND; /* apply on c050 */
                        ds_protocolo_mes_w := substr(ds_protocolo_mes_w ||' - '|| nr_seq_protocolo_mes_w, 1, 3900);
                end loop;
                close c050;

                ds_protocolo_mes_w      := substr(ds_protocolo_mes_w, 4,length(ds_protocolo_mes_w));
                if (coalesce(ds_protocolo_mes_w, 'N') <> 'N') then
                        /*'Existem protocolos de mes diferente do lote: ' || chr(13) || chr(10) ||
                                                ds_protocolo_mes_w || '#@#@');*/
                        CALL wheb_mensagem_pck.exibir_mensagem_abort(181110,'DS_PROTOCOLO_MES_W='||substr(ds_protocolo_mes_w,1,3900));
                end if;
        end if;

        ds_retorno_define_lote_w := define_lote_receita(    nr_lote_contabil_p, nm_usuario_p, ds_retorno_define_lote_w);
        commit;

        if (coalesce(ds_retorno_define_lote_w::text, '') = '') then
                select  coalesce(max(ie_nf_contab_rec),'N'),
                        coalesce(max(ie_nf_contab_rec_conv),'N'),
                        coalesce(max(ie_lote_ctb_trib_nf),'LNF'),
                        coalesce(max(ie_prot_ctb_rec),'N'),
                        coalesce(max(ie_titulo_ctb_receita),'N'),
                        coalesce(max(ie_contab_repasse_receita),'N'),
                        coalesce(max(ie_contab_cc_debito),'N'),
                        coalesce(max(ie_conta_convenio_estab),'N'),
                        coalesce(max(ie_contab_desconto_rec),'N'),
                        max(cd_conta_repasse_rec),
                        coalesce(max(ie_contab_nf_estorno),'N'),
                        max(cd_conta_contabil_tx_adm),
                        coalesce(max(ie_regra_centro_estab),'N'),
                        coalesce(max(ie_estorno_conta_contab_redut),'N'),
                        coalesce(max(ie_origem_contab_trib_rec),'N'),
                        coalesce(max(ie_ctb_estab_centro),'N')
                into STRICT    ie_nf_contab_rec_particular_w,
                        ie_nf_contab_rec_convenio_w,
                        ie_lote_ctb_trib_nf_w,
                        ie_prot_ctb_rec_w,
                        ie_tit_ctb_rec_w,
                        ie_contab_repasse_receita_w,
                        ie_contab_cc_debito_w,
                        ie_conta_convenio_estab_w,
                        ie_contab_desconto_rec_w,
                        cd_conta_repasse_rec_w,
                        ie_contab_nf_estorno_w,
                        cd_conta_contabil_tx_adm_w,
                        ie_regra_centro_estab_w,
                        ie_conta_contab_redut_w,
                        ie_origem_contab_trib_rec_w,
                        ie_ctb_estab_centro_w
                from    parametro_faturamento
                where   cd_estabelecimento = cd_estab_lote_contabil_w;

                CALL wheb_usuario_pck.set_ie_lote_contabil('S');

                if (ie_contab_desconto_rec_w = 'S') then
                        update  proc_paciente_valor a
                        set     a.nr_lote_contabil = nr_lote_contabil_p
                        where   coalesce(a.nr_lote_contabil,0) = 0
                        and     a.ie_tipo_valor = 3
                        and     a.nr_seq_procedimento in (
                                                        SELECT  y.nr_sequencia
                                                        from    conta_paciente x,
                                                                procedimento_paciente y
                                                        where   y.nr_interno_conta = x.nr_interno_conta
                                                        and     y.nr_lote_contabil = x.nr_lote_contabil
                                                        and     x.nr_lote_contabil = nr_lote_contabil_p);

                        update  mat_atend_paciente_valor a
                        set     a.nr_lote_contabil = nr_lote_contabil_p
                        where   coalesce(a.nr_lote_contabil,0) = 0
                        and     a.ie_tipo_valor = 3
                        and     a.nr_seq_material in (
                                                        SELECT  y.nr_sequencia
                                                        from    conta_paciente x,
                                                                material_atend_paciente y
                                                        where   y.nr_interno_conta = x.nr_interno_conta
                                                        and     y.nr_lote_contabil = x.nr_lote_contabil
                                                        and     x.nr_lote_contabil = nr_lote_contabil_p);

                        commit;

                end if;

                if (ie_origem_contab_trib_rec_w = 'T') then
                        update  titulo_receber_trib a
                        set     nr_lote_contabil        = nr_lote_contabil_p
                        where   a.nr_titulo in ( SELECT  y.nr_titulo
                                                from    titulo_receber y,
                                                        conta_paciente x
                                                where   y.nr_interno_conta      = x.nr_interno_conta
                                                and     x.nr_lote_contabil      = nr_lote_contabil_p

union all

                                                SELECT  y.nr_titulo
                                                from    titulo_receber y,
                                                        protocolo_convenio x,
                                                        conta_paciente w
                                                where   y.nr_seq_protocolo      = x.nr_seq_protocolo
                                                and     w.nr_seq_protocolo      = x.nr_seq_protocolo
                                                and     w.nr_lote_contabil      = nr_lote_contabil_p
                                                
union all

                                                select  y.nr_titulo
                                                from    titulo_receber y,
                                                        lote_protocolo z,
                                                        protocolo_convenio x,
                                                        conta_paciente w
                                                where   y.nr_seq_protocolo      = z.nr_sequencia
                                                and     z.nr_sequencia          = x.nr_seq_lote_protocolo
                                                and     w.nr_seq_protocolo      = x.nr_seq_protocolo
                                                and     w.nr_lote_contabil      = nr_lote_contabil_p);

                end if;

                update  conta_pac_ded_conv_item a
                set     a.nr_lote_contabil = nr_lote_contabil_p
                where   coalesce(a.nr_lote_contabil::text, '') = ''
                and     exists (
                                SELECT  1
                                from    conta_pac_deducao_conv c,
                                        conta_paciente b
                                where   b.nr_interno_conta = c.nr_seq_conta_des
                                and     a.nr_seq_deducao_conv = c.nr_sequencia
                                and     b.nr_lote_contabil = nr_lote_contabil_p
                                and     (c.dt_processamento IS NOT NULL AND c.dt_processamento::text <> '')
                                );

                CALL wheb_usuario_pck.set_ie_lote_contabil('N');

                select  max(cd_estab_financeiro),
                        max(nm_fantasia_estab)
                into STRICT    cd_estab_financeiro_w,
                        nm_estabelecimento_w
                from    estabelecimento
                where   cd_estabelecimento = cd_estab_lote_contabil_w;

                select  max(cd_historico)
                into STRICT    cd_historico_w
                from    evento_contabil_param_estab
                where   cd_tipo_lote_contabil = 6
                and     cd_estabelecimento = cd_estab_lote_contabil_w;

                cd_historico_pad_w := cd_historico_w;

                SELECT * FROM ctb_obter_regra_estab_dif(cd_estab_lote_contabil_w, cd_tipo_lote_contabil_w, null, ie_permite_estab_dif_w, cd_conta_transitoria_w, cd_historico_ct_w) INTO STRICT ie_permite_estab_dif_w, cd_conta_transitoria_w, cd_historico_ct_w;

                ie_data_lote_w := obter_param_usuario(135, 3, 0, nm_usuario_p, cd_estab_lote_contabil_w, ie_data_lote_w);

                nr_sequencia_movto_w := 0;
                nm_agrupador_w  := coalesce(trim(both obter_agrupador_contabil(6)),'NR_INTERNO_CONTA');
                open c010;
                loop
                fetch c010 into
                c010_w;
                EXIT WHEN NOT FOUND; /* apply on c010 */
                        nr_nfe_nf_prot_w                := 0;
                        nr_nfe_imp_lote_prot_w          := '';
                        nr_seq_nota_conta_prot_w        := 0;
                        cd_centro_custo_debito_w        := null;
                        ds_nfe_conta_protocolo_w        := null;
			ds_serie_nf_protocolo_w		:= null;
			ds_seq_nota_protocolo_w		:= null;
			nr_seq_nota_protocolo_w		:= null;
                        nr_nfe_conta_protocolo_w        := null;
			cd_serie_nf_w			:= null;
                        ds_compl_hist_debito_w          := null;
                        nr_nota_fiscal_agrup_w          := null;
                        cd_centro_custo_mat_w           := null;
                        ds_compl_historico_w            := null;
                        cd_plano_convenio_w             := null;
                        nr_nf_prot_conta_w              := null;
                        nr_seq_tab_compl_w              := c010_w.nr_interno_conta;
                        ds_nf_protocolo_w               := null;
                        ie_centro_custo_w               := null;
                        vl_plus_repasse_w               := 0;
                        nr_seq_atecaco_w                := null;
                        dt_emissao_nf_w                 := null;
                        dt_movimento_w                  := null;
                        vl_material_w                   := c010_w.vl_material;
                        ds_estorno_w                    := null;
                        nr_nfe_imp_w                    := null;						

                        nr_seq_classif_movto_w  := ctb_obter_classif_financ(c010_w.cd_convenio, c010_w.ie_tipo_convenio);
                        ds_nota_protocolo_w := null;
						
                        select  max(cd_estabelecimento_base)
                        into STRICT    cd_estab_setor_w
                        from    setor_atendimento
                        where   cd_setor_atendimento    = c010_w.cd_setor_atendimento;

                        if (c010_w.ie_cancelamento <> 'N') then
                                begin
                                /* Estornada - 682645 | Cancelada - 689659 */

                                select  CASE WHEN c010_w.ie_cancelamento='C' THEN wheb_mensagem_pck.get_texto(689659) WHEN c010_w.ie_cancelamento='E' THEN wheb_mensagem_pck.get_texto(682645) END
                                into STRICT    ds_estorno_w
;
                                exception when others then
                                        ds_estorno_w    := '';
                                end;
                        end if;

                        select  coalesce(max(ie_conta_transitoria),'N')
                        into STRICT    ie_conta_transitoria_w
                        from    convenio_estabelecimento
                        where   cd_convenio = c010_w.cd_convenio
                        and     cd_estabelecimento = c010_w.cd_estabelecimento;

                        select  a.ds_razao_social,
                                a.nm_fantasia
                        into STRICT    ds_razao_social_conv_w,
                                nm_fantasia_conv_w
                        from    pessoa_juridica a,
                                convenio b
                        where   a.cd_cgc = b.cd_cgc
                        and     b.cd_convenio = c010_w.cd_convenio;

                        select  coalesce(max(nr_sequencia),0)
                        into STRICT    nr_seq_regra_convenio_w
                        from    convenio_hist_padrao
                        where   cd_convenio             = c010_w.cd_convenio
                        and     cd_estabelecimento      = c010_w.cd_estabelecimento;

                        cd_hist_debito_w := cd_historico_pad_w;
                        cd_historico_w := cd_historico_pad_w;

                        if (nr_seq_regra_convenio_w <> 0) then
                                select  coalesce(a.cd_historico,0),
                                        coalesce(a.ie_hist_debito,'N')
                                into STRICT    cd_hist_debito_w,
                                        ie_hist_debito_w
                                from    convenio_hist_padrao a
                                where   a.nr_sequencia = nr_seq_regra_convenio_w;

                                if (cd_hist_debito_w = 0) then
                                        /*'Falta cadastrar o historico de debito no cadastro do convenio (' || c010_w.cd_convenio ||  ')!#@#@');*/

                                        CALL wheb_mensagem_pck.exibir_mensagem_abort(181112,'c010_w.cd_convenio='||c010_w.cd_convenio);

                                elsif (ie_hist_debito_w = 'N') then
                                        cd_historico_w := cd_hist_debito_w;

                                end if;

                        end if;

                        select  coalesce(a.nr_seq_lote_protocolo,0)
                        into STRICT    nr_seq_lote_w
                        from    protocolo_convenio a
                        where   a.nr_seq_protocolo = c010_w.nr_seq_protocolo;

                        /*
                        Busca a nota fiscal gerada para o lote de protololos (Tabela: LOTE_PROTOCOLO), caso nao encontrar
                        busca a nota fiscal gerada para o protocolo (Tabela: PROTOCOLO_CONVENIO), caso nao encontrar
                        busca a nota fiscal gerada para a conta paciente (Tabela: CONTA_PACIENTE)
                        */
                        if (nr_seq_lote_w <> 0) then
                                select  coalesce(max(a.nr_sequencia),0)
                                into STRICT    nr_seq_nota_conta_prot_w
                                from    nota_fiscal a
                                where   a.nr_seq_lote_prot = nr_seq_lote_w
                                and     a.ie_situacao = '1'
                                and     not exists (
                                        SELECT 1
                                        from nf_credito x
                                        where x.nr_seq_nf_gerada = a.nr_sequencia
                                        );

                        end if;

                        if (nr_seq_nota_conta_prot_w = 0) then
                                select  coalesce(max(a.nr_sequencia),0)
                                into STRICT    nr_seq_nota_conta_prot_w
                                from    nota_fiscal a
                                where   a.ie_situacao = '1'
                                and     a.nr_seq_protocolo = c010_w.nr_seq_protocolo
                                and     not exists (
                                        SELECT 1
                                        from nf_credito x
                                        where x.nr_seq_nf_gerada = a.nr_sequencia
                                        );

                        end if;

                        if (nr_seq_nota_conta_prot_w = 0) then
                                select  coalesce(max(nr_sequencia),0)
                                into STRICT    nr_seq_nota_conta_prot_w
                                from    nota_fiscal a
                                where   ie_situacao in ('1','3')
                                and     nr_interno_conta = c010_w.nr_interno_conta
                                and     not exists (
                                        SELECT 1
                                        from nf_credito x
                                        where x.nr_seq_nf_gerada = a.nr_sequencia
                                        );

                        end if;
                        /*
                        Se nao encontrou a nota e possui conta origem eh estorno

                        pega a nota fiscal de estorno da conta original, que eh a 'nota da conta de estorno'

                        Contabilizacao de nota de estorno em, lote e dia diferentes da nota original (com conta em protocolo diferente)
                        */
                        if (nr_seq_nota_conta_prot_w = 0) and (coalesce(c010_w.nr_seq_conta_origem,0) <> 0) and (c010_w.ie_cancelamento = 'E') then
                                select  coalesce(max(nr_sequencia),0)
                                into STRICT    nr_seq_nota_conta_prot_w
                                from    nota_fiscal a
                                where   a.ie_situacao = '2'
                                and     a.nr_interno_conta = c010_w.nr_seq_conta_origem
                                and     not exists (
                                        SELECT 1
                                        from nf_credito x
                                        where x.nr_seq_nf_gerada = a.nr_sequencia
                                        );

                        end if;

                        if (nr_seq_nota_conta_prot_w <> 0) then
                                select  trunc(x.dt_emissao),
                                        x.nr_nota_fiscal
                                into STRICT    dt_emissao_nf_w,
                                        nr_nota_fiscal_agrup_w
                                from    nota_fiscal x
                                where   x.nr_sequencia = nr_seq_nota_conta_prot_w;

                        end if;

                        if (coalesce(c010_w.ie_nf_contab_rec_conv,'X') <> 'X') then
                                ie_nf_contab_rec_w := c010_w.ie_nf_contab_rec_conv;

                        elsif (c010_w.ie_tipo_convenio in (2,4,6)) then
                                /*
                                OS 457828 - Tratar convenios sem fins lucrativos
                                2 | Convenio
                                4 | Sem Remuneracao/Filantropicos
                                6 | Auto Gestao
                                */
                                ie_nf_contab_rec_w := ie_nf_contab_rec_convenio_w;

                        else
                                ie_nf_contab_rec_w := ie_nf_contab_rec_particular_w;

                        end if;

                        /*
                        IE_NF_CONTAB_REC_W
                        S | Protocolo Convenio
                        C | Conta Paciente
                        A | Protocolo e/ou Conta paciente
                        N | Nao
                        */
                        if (coalesce(c010_w.nr_seq_protocolo,0) <> coalesce(nr_seq_ultimo_protocolo_lido_w,0)) then
                                select  dt_entrega_convenio,
                                        nr_protocolo,
                                        substr(obter_mes_extenso(substr(obter_desc_mes_ano(dt_mesano_referencia,'N'),1,2),'A'),1,20) || '/' ||
                                        substr(to_char(dt_mesano_referencia,'dd/mm/yyyy'),7,4),
                                        substr(obter_desc_mes_ano(dt_mesano_referencia,'AB'),1,20),
                                        dt_mesano_referencia
                                into STRICT    dt_entrega_convenio_w,
                                        nr_protocolo_w,
                                        ds_mesano_referencia_w,
                                        ds_mesano_referencia_abrev_w,
                                        dt_mesano_referencia_compl_w
                                from    protocolo_convenio
                                where   nr_seq_protocolo = c010_w.nr_seq_protocolo;

                        end if;

                        begin
                                select  obter_dados_drg(max(x.nr_seq_drg_proc),'C')
                                into STRICT    cd_drg_w
                                from    episodio_paciente_drg x
                                where   x.nr_atendimento        = c010_w.nr_atendimento;
                        exception
                        when others then
                                cd_drg_w        := null;
                        end;

                        if (ie_nf_contab_rec_w = 'N') then
                                nr_nf_protocolo_w := null;
                                nr_nf_prot_conta_w := null;
                                nm_pessoa_nota_fiscal_w := null;
                                nr_nfe_nf_prot_w := null;
                                nr_seq_nota_fiscal_w := null;
                                nr_nfe_imp_w := null;
				cd_serie_nf_w := null;

                        else
                                if      ((coalesce(c010_w.nr_seq_protocolo,0) <> coalesce(nr_seq_ultimo_protocolo_lido_w,0)) or (ie_ultimo_nf_contab_rec_lido_w = 'N')) then
                                        nr_nf_protocolo_w := substr(obter_nota_conta_protocolo(c010_w.nr_seq_protocolo,0),1,254);

                                end if;

                                if (ie_nf_contab_rec_w = 'S') then
                                        if (c010_w.ie_cancelamento = 'E') then
                                                select  max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc),1,80)),
                                                        max(nr_nfe_imp),
                                                        max(nr_sequencia),
                                                        max(nr_nota_fiscal),
							max(cd_serie_nf)
                                                into STRICT    nm_pessoa_nota_fiscal_w,
                                                        nr_nfe_nf_prot_w,
                                                        nr_seq_nota_fiscal_w,
                                                        nr_nf_prot_conta_w,
							cd_serie_nf_w
                                                from    nota_fiscal x
                                                where   x.ie_situacao = 3
                                                and     x.nr_sequencia = (
                                                                SELECT  max(z.nr_sequencia)
                                                                from    nota_fiscal z
                                                                where   z.nr_seq_protocolo = (
                                                                                SELECT  y.nr_seq_protocolo
                                                                                from    conta_paciente y
                                                                                where   y.nr_interno_conta = c010_w.nr_seq_conta_origem
                                                                                        )
                                                                        );														
																		

                                        elsif (c010_w.ie_cancelamento = 'C') then
                                                select  max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc),1,80)),
                                                        max(nr_nfe_imp),
                                                        max(nr_sequencia),
                                                        max(nr_nota_fiscal),
							max(cd_serie_nf)
                                                into STRICT    nm_pessoa_nota_fiscal_w,
                                                        nr_nfe_nf_prot_w,
                                                        nr_seq_nota_fiscal_w,
                                                        nr_nf_prot_conta_w,
							cd_serie_nf_w
                                                from    nota_fiscal x
                                                where   x.ie_situacao = 3
                                                and     x.nr_sequencia = (
                                                                SELECT  max(z.nr_sequencia)
                                                                from    nota_fiscal z
                                                                where   z.nr_seq_protocolo = (
                                                                                SELECT  y.nr_seq_protocolo
                                                                                from    conta_paciente y
                                                                                where   y.nr_interno_conta = c010_w.nr_interno_conta
                                                                                        )
                                                                        );

                                        else
                                                select  max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc),1,80)),
                                                        max(nr_nfe_imp),
                                                        max(nr_sequencia),
                                                        coalesce(nr_nf_prot_conta_w, max(nr_nota_fiscal)),
							max(cd_serie_nf)
                                                into STRICT    nm_pessoa_nota_fiscal_w,
                                                        nr_nfe_nf_prot_w,
                                                        nr_seq_nota_fiscal_w,
                                                        nr_nf_prot_conta_w,
							cd_serie_nf_w
                                                from    nota_fiscal x
                                                where   x.nr_sequencia =
                                                                (SELECT max(nr_sequencia)
                                                                from    nota_fiscal
                                                                where   nr_seq_protocolo = c010_w.nr_seq_protocolo);

                                        end if;

                                        nr_nf_prot_conta_w := nr_nf_protocolo_w;

                                end if;

                                /* Se busca as informacoes da nota fiscal com base na conta paciente */

                                if (ie_nf_contab_rec_w = 'C') then

                                        nr_nfe_nf_prot_w := null;
										cd_serie_nf_w := null;

                                        if (c010_w.ie_cancelamento = 'E') then

                                                /*
                                                Se for a conta de estorno(a conta com valores negativos) buscar as informacoes da nota fiscal
                                                baseado na conta de origem, e nota fiscal Estornada(Situacao = 3)
                                                */
                                                select  max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc),1,80)),
                                                        max(nr_nfe_imp),
                                                        max(nr_sequencia),
                                                        max(nr_nota_fiscal),
							max(cd_serie_nf)
                                                into STRICT    nm_pessoa_nota_fiscal_w,
                                                        nr_nfe_imp_w,
                                                        nr_seq_nota_fiscal_w,
                                                        nr_nf_prot_conta_w,
							cd_serie_nf_w
                                                from    nota_fiscal x
                                                where   x.nr_sequencia =
                                                                (SELECT max(nr_sequencia)
                                                                from    nota_fiscal
                                                                where   nr_interno_conta = c010_w.nr_seq_conta_origem
                                                                and     ie_situacao = 3);

                                        elsif (c010_w.ie_cancelamento = 'C') then

                                                /*
                                                Se for a conta original mas estiver cancelada, buscar as informacoes da nota fiscal
                                                baseado nesta conta, mas na nota fiscal Estornada(Situacao = 3)
                                                */
                                                select  max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc),1,80)),
                                                        max(nr_nfe_imp),
                                                        max(nr_sequencia),
                                                        max(nr_nota_fiscal),
							max(cd_serie_nf)
                                                into STRICT    nm_pessoa_nota_fiscal_w,
                                                        nr_nfe_imp_w,
                                                        nr_seq_nota_fiscal_w,
                                                        nr_nf_prot_conta_w,
							cd_serie_nf_w
                                                from    nota_fiscal x
                                                where   x.nr_sequencia =
                                                                (SELECT max(nr_sequencia)
                                                                from    nota_fiscal
                                                                where   nr_interno_conta = c010_w.nr_interno_conta
                                                                and     ie_situacao = 3);
                                        else
                                                /*
                                                Se a conta for normal(nao for cancelada ou de estorno) busca as informacoes da nota fiscal
                                                baseado na conta
                                                */
                                                select  max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc),1,80)),
                                                        max(nr_nfe_imp),
                                                        max(nr_sequencia),
                                                        max(nr_nota_fiscal),
							max(cd_serie_nf)
                                                into STRICT    nm_pessoa_nota_fiscal_w,
                                                        nr_nfe_imp_w,
                                                        nr_seq_nota_fiscal_w,
                                                        nr_nf_prot_conta_w,
							cd_serie_nf_w
                                                from    nota_fiscal x
                                                where   x.nr_sequencia =
                                                                (SELECT max(nr_sequencia)
                                                                from    nota_fiscal
                                                                where   nr_interno_conta = c010_w.nr_interno_conta
                                                                and     ie_situacao <> 2);

                                        end if;


                                /*
                                Busca as informacoes com base na conta e protocolo, ou se eh um novo protocolo (para os casos em que busca informacao somente com base no protocolo)
                                */
                                elsif   ((ie_nf_contab_rec_w = 'A') or (coalesce(c010_w.nr_seq_protocolo,0) <> coalesce(nr_seq_ultimo_protocolo_lido_w,0))) then

                                        nr_seq_nota_fiscal_w := null;
                                        /* Se busca as informacoes com base na conta e protocolo, tenta buscar primeiro as informacoes da conta */

                                        if (ie_nf_contab_rec_w = 'A') then

                                                if (c010_w.ie_cancelamento = 'E') then

                                                        /*
                                                        Se for a conta de estorno(a conta com valores negativos) buscar as informacoes da nota fiscal
                                                        baseado na conta de origem, e nota fiscal Estornada(Situacao = 3)
                                                        */
                                                        select  max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc),1,80)),
                                                                max(nr_nfe_imp),
                                                                max(nr_sequencia),
                                                                max(nr_nota_fiscal),
								max(cd_serie_nf)
                                                        into STRICT    nm_pessoa_nota_fiscal_w,
                                                                nr_nfe_imp_w,
                                                                nr_seq_nota_fiscal_w,
                                                                nr_nf_prot_conta_w,
								cd_serie_nf_w
                                                        from    nota_fiscal x
                                                        where   x.nr_sequencia =
                                                                        (SELECT max(nr_sequencia)
                                                                        from    nota_fiscal
                                                                        where   nr_interno_conta = c010_w.nr_seq_conta_origem
                                                                        and     ie_situacao = 3);

                                                elsif (c010_w.ie_cancelamento = 'C') then

                                                        /*
                                                        Se for a conta original mas estiver cancelada, buscar as informacoes da nota fiscal
                                                        baseado nesta conta, mas na nota fiscal Estornada(Situacao = 3)
                                                        */
                                                        select  max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc),1,80)),
                                                                max(nr_nfe_imp),
                                                                max(nr_sequencia),
                                                                max(nr_nota_fiscal),
								max(cd_serie_nf)
                                                        into STRICT    nm_pessoa_nota_fiscal_w,
                                                                nr_nfe_imp_w,
                                                                nr_seq_nota_fiscal_w,
                                                                nr_nf_prot_conta_w,
								cd_serie_nf_w
                                                        from    nota_fiscal x
                                                        where   x.nr_sequencia =
                                                                        (SELECT max(nr_sequencia)
                                                                        from    nota_fiscal
                                                                        where   nr_interno_conta = c010_w.nr_interno_conta
                                                                        and     ie_situacao = 3);
                                                else

                                                        /*
                                                        Se a conta for normal(nao for cancelada ou de estorno) busca as informacoes da nota fisca
                                                        baseado na conta
                                                        */
                                                        select  max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc),1,80)),
                                                                max(nr_nfe_imp),
                                                                max(nr_sequencia),
                                                                max(nr_nota_fiscal),
								max(cd_serie_nf)
                                                        into STRICT    nm_pessoa_nota_fiscal_w,
                                                                nr_nfe_imp_w,
                                                                nr_seq_nota_fiscal_w,
                                                                nr_nf_prot_conta_w,
								cd_serie_nf_w
                                                        from    nota_fiscal x
                                                        where   x.nr_sequencia =
                                                                        (SELECT max(nr_sequencia)
                                                                        from    nota_fiscal
                                                                        where   nr_interno_conta = c010_w.nr_interno_conta);

                                                end if;

                                        end if;

                                        if (coalesce(nr_seq_nota_fiscal_w,0) = 0) then


                                                if (c010_w.ie_cancelamento = 'E') then

                                                        select  max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc),1,80)),
                                                                max(nr_nfe_imp),
                                                                max(nr_sequencia),
                                                                max(nr_nota_fiscal),
								max(cd_serie_nf)
                                                        into STRICT    nm_pessoa_nota_fiscal_w,
                                                                nr_nfe_nf_prot_w,
                                                                nr_seq_nota_fiscal_w,
                                                                nr_nf_prot_conta_w,
								cd_serie_nf_w
                                                        from    nota_fiscal x
                                                        where   x.ie_situacao = 3
                                                        and     x.nr_sequencia = (
                                                                        SELECT  max(z.nr_sequencia)
                                                                        from    nota_fiscal z
                                                                        where   z.nr_seq_protocolo = (
                                                                                        SELECT  y.nr_seq_protocolo
                                                                                        from    conta_paciente y
                                                                                        where   y.nr_interno_conta = c010_w.nr_seq_conta_origem
                                                                                                )
                                                                                );

                                                elsif (c010_w.ie_cancelamento = 'C') then

                                                        select  max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc),1,80)),
                                                                max(nr_nfe_imp),
                                                                max(nr_sequencia),
                                                                max(nr_nota_fiscal),
								max(cd_serie_nf)
                                                        into STRICT    nm_pessoa_nota_fiscal_w,
                                                                nr_nfe_nf_prot_w,
                                                                nr_seq_nota_fiscal_w,
                                                                nr_nf_prot_conta_w,
								cd_serie_nf_w
                                                        from    nota_fiscal x
                                                        where   x.ie_situacao = 3
                                                        and     x.nr_sequencia = (
                                                                        SELECT  max(z.nr_sequencia)
                                                                        from    nota_fiscal z
                                                                        where   z.nr_seq_protocolo = (
                                                                                        SELECT  y.nr_seq_protocolo
                                                                                        from    conta_paciente y
                                                                                        where   y.nr_interno_conta = c010_w.nr_interno_conta
                                                                                                )
                                                                                );
                                                else
                                                        select  max(substr(obter_nome_pf_pj(x.cd_pessoa_fisica, x.cd_cgc),1,80)),
                                                                max(nr_nfe_imp),
                                                                max(nr_sequencia),
                                                                coalesce(nr_nf_prot_conta_w, max(nr_nota_fiscal)),
								max(cd_serie_nf)
                                                        into STRICT    nm_pessoa_nota_fiscal_w,
                                                                nr_nfe_nf_prot_w,
                                                                nr_seq_nota_fiscal_w,
                                                                nr_nf_prot_conta_w,
								cd_serie_nf_w
                                                        from    nota_fiscal x
                                                        where   x.nr_sequencia =
                                                                        (SELECT max(nr_sequencia)
                                                                        from    nota_fiscal
                                                                        where   nr_seq_protocolo = c010_w.nr_seq_protocolo);
                                                end if;
                                        end if;

                                end if;

                        end if;
                        nr_seq_ultimo_protocolo_lido_w := c010_w.nr_seq_protocolo;
                        ie_ultimo_nf_contab_rec_lido_w := ie_nf_contab_rec_w;

                        if (ie_data_lote_w = 'N') then
                                dt_movimento_w  := coalesce(c010_w.dt_mesano_referencia,dt_entrega_convenio_w);
                        elsif (ie_data_lote_w = 'NE') then
                                dt_movimento_w  := coalesce(dt_emissao_nf_w,dt_referencia_lote_w);
                        elsif (ie_data_lote_w = 'E') then
                                dt_movimento_w  := coalesce(dt_entrega_convenio_w,c010_w.dt_mesano_referencia);
                        else
                                dt_movimento_w := dt_referencia_lote_w;
                        end if;

                        if (coalesce(dt_movimento_w::text, '') = '') then

                                dt_movimento_w := dt_referencia_lote_w;

                        end if;
						
						if (cd_conta_fixa_receita_w IS NOT NULL AND cd_conta_fixa_receita_w::text <> '') then
							c010_w.cd_sequencia_parametro := null;
						end if;
						
                        cd_conta_credito_w      := coalesce(cd_conta_fixa_receita_w, c010_w.cd_conta_contabil);

                        /* Define o Centro de Custo da Receita */

                        if (coalesce(cd_conta_credito_w,'0') <> '0') then

                                select  ie_centro_custo
                                into STRICT    ie_centro_custo_w
                                from    conta_contabil
                                where   cd_conta_contabil = cd_conta_credito_w;

                        end if;

                        ie_centro_custo_w := coalesce(ie_centro_custo_w,'N');

                        if (ie_centro_custo_w = 'S') then

                                select  coalesce(cd_centro_custo_receita, cd_centro_custo)
                                into STRICT    cd_centro_custo_mat_w
                                from    setor_atendimento
                                where   cd_setor_atendimento    = c010_w.cd_setor_atendimento;

                                cd_centro_custo_mat_w   := coalesce(c010_w.cd_centro_custo_receita,cd_centro_custo_mat_w);

                        end if;

                        /* Define a Conta Contabil do Convenio */

                        begin
                        nr_seq_atecaco_w        := coalesce(obter_atecaco_atendimento(c010_w.nr_atendimento),0);
                        exception
                        when others then
                                nr_seq_atecaco_w        := null;
                        end;

                        if (nr_seq_atecaco_w <> 0) then
                                select  max(cd_plano_convenio)
                                into STRICT    cd_plano_convenio_w
                                from    atend_categoria_convenio
                                where   nr_atendimento  = c010_w.nr_atendimento
                                and     nr_seq_interno  = nr_seq_atecaco_w;
                        end if;

                        cd_conta_contabil_conv_w := obter_conta_convenio(c010_w.cd_estabelecimento,
                                                                        c010_w.cd_convenio,
                                                                        c010_w.ie_tipo_atendimento,
                                                                        'T',
                                                                        c010_w.dt_mesano_referencia,
                                                                        null,
                                                                        c010_w.cd_categoria_parametro,
                                                                        cd_plano_convenio_w,
                                                                        c010_w.cd_setor_atendimento,
                                                                        c010_w.cd_procedimento,
                                                                        c010_w.ie_origem_proced);

                        if (ie_contab_cc_debito_w = 'S') then /*Matheus OS 116384 7/1/2009*/
                                select  coalesce(max(ie_centro_custo),'N')
                                into STRICT    ie_centro_custo_w
                                from    conta_contabil
                                where   cd_conta_contabil = cd_conta_contabil_conv_w;

                                if (ie_centro_custo_w = 'S') then

                                        select  max(cd_centro_custo)
                                        into STRICT    cd_centro_custo_debito_w
                                        from    setor_atendimento
                                        where   cd_setor_atendimento    = c010_w.cd_setor_atendimento;

                                end if;

                        end if;

                        if (ie_conta_convenio_estab_w = 'S') then

                                select  coalesce(max(cd_conta_contabil),cd_conta_contabil_conv_w)
                                into STRICT    cd_conta_contabil_conv_w
                                from    convenio_estabelecimento
                                where   cd_convenio             = c010_w.cd_convenio
                                and     cd_estabelecimento      = c010_w.cd_estabelecimento;

                        end if;

                        if (coalesce(cd_conta_contabil_conv_w::text, '') = '') then
                                ds_convenio_sem_conta_w := substr(c010_w.ds_convenio || ' (' || wheb_mensagem_pck.get_texto(799409) || ')',1,255);
                        end if;

                        ie_valor_contabil_w     := coalesce(obter_valor_conv_estab(c010_w.cd_convenio, c010_w.cd_estab_atendimento, 'IE_VALOR_CONTABIL'),'P');

                        /* Define Historico Por Protocolo, Atendimento ou Guia */

                        if (ie_valor_contabil_w = 'P') then
                                ds_compl_historico_w    := nr_lote_contabil_p || ' ' || c010_w.ds_convenio;
                        elsif (ie_valor_contabil_w = 'A') then
                                ds_compl_historico_w    := c010_w.nr_atendimento || ',' || c010_w.nm_pessoa_fisica;
                        else
                                ds_compl_historico_w    := c010_w.nr_doc_convenio || ',' || c010_w.nm_pessoa_fisica;
                        end if;

                        if (ie_nf_contab_rec_w in ('C','S')) then
                                ds_compl_historico_w := ds_compl_historico_w || ' ' || wheb_mensagem_pck.get_texto(799410) || ' '  || nr_nf_protocolo_w;
                        end if;

                        if (ie_prot_ctb_rec_w = 'PI') and (c010_w.nr_seq_protocolo IS NOT NULL AND c010_w.nr_seq_protocolo::text <> '') then
                                ds_compl_historico_w    := ds_compl_historico_w || ' ' || wheb_mensagem_pck.get_texto(799411) || ' ' || c010_w.nr_seq_protocolo;
                        end if;

                        if (ie_prot_ctb_rec_w = 'PC') and (nr_protocolo_w IS NOT NULL AND nr_protocolo_w::text <> '') then
                                ds_compl_historico_w    := ds_compl_historico_w || ' ' || wheb_mensagem_pck.get_texto(799411) || ' ' || nr_protocolo_w;
                        end if;

                        if (ie_tit_ctb_rec_w = 'S') then
                                begin
                                select  substr(obter_titulos_protocolo(c010_w.nr_seq_protocolo),1,200),
                                        substr(obter_titulo_conta_protocolo(c010_w.nr_seq_protocolo,CASE WHEN c010_w.ie_cancelamento='E' THEN c010_w.nr_seq_conta_origem  ELSE c010_w.nr_interno_conta END ),1,200)
                                into STRICT    ds_titulos_prot_w,
                                        ds_titulos_conta_w
;
                                exception when others then
                                        ds_titulos_prot_w       := '';
                                        ds_titulos_conta_w      := '';
                                end;
                        end if;

                        if (ds_titulos_prot_w IS NOT NULL AND ds_titulos_prot_w::text <> '') or (ds_titulos_conta_w IS NOT NULL AND ds_titulos_conta_w::text <> '') then
                                ds_compl_historico_w    := ds_compl_historico_w || ' ' || wheb_mensagem_pck.get_texto(799412) || ' ' || coalesce(ds_titulos_conta_w,ds_titulos_prot_w);
                        end if;

                        select  coalesce(max(nr_nota_fiscal),'')
                        into STRICT    nr_nf_titulo_w
                        from    titulo_receber
                        where   nr_interno_conta        = CASE WHEN c010_w.ie_cancelamento='E' THEN c010_w.nr_seq_conta_origem  ELSE c010_w.nr_interno_conta END;

                        if (coalesce(nr_nf_titulo_w,'0') = '0') then
                                select  coalesce(max(nr_nota_fiscal),'')
                                into STRICT    nr_nf_titulo_w
                                from    titulo_receber
                                where   nr_seq_protocolo        = c010_w.nr_seq_protocolo;
                        end if;

                        if (coalesce(c010_w.nr_interno_conta,0) <> 0) then

                                select  coalesce(max(nr_nota_fiscal),'')
                                into STRICT    nr_nf_prot_nota_w
                                from    nota_fiscal
                                where   nr_interno_conta = CASE WHEN c010_w.ie_cancelamento='E' THEN c010_w.nr_seq_conta_origem  ELSE c010_w.nr_interno_conta END;

                                if      ((coalesce(nr_nf_prot_nota_w,'X') = 'X') and (coalesce(c010_w.nr_seq_protocolo,0) <> 0)) then
                                        nr_nf_prot_nota_w := substr(obter_nota_conta_protocolo(c010_w.nr_seq_protocolo,0),1,255);
                                end if;

                        end if;

                        select  coalesce(max(nr_titulo),0)
                        into STRICT    nr_titulo_receber_w
                        from    titulo_receber
                        where   nr_interno_conta = CASE WHEN c010_w.ie_cancelamento='E' THEN c010_w.nr_seq_conta_origem  ELSE c010_w.nr_interno_conta END;

                        nr_seq_protocolo_orig_w := null;

                        if (nr_titulo_receber_w = 0) then
                                if (c010_w.ie_cancelamento = 'E') then
                                        select  max(nr_seq_protocolo)
                                        into STRICT    nr_seq_protocolo_orig_w
                                        from    conta_paciente
                                        where   nr_interno_conta = c010_w.nr_seq_conta_origem;
                                end if;

                                select  coalesce(max(nr_titulo),0)
                                into STRICT    nr_titulo_receber_w
                                from    titulo_receber
                                where   nr_seq_protocolo = CASE WHEN c010_w.ie_cancelamento='E' THEN  nr_seq_protocolo_orig_w  ELSE c010_w.nr_seq_protocolo END;
                        end if;

                        select  substr(max(c.nr_nota_fiscal),1,150)
                        into STRICT    nr_nf_lote_protocolo_w
                        from    nota_fiscal c,
                                lote_protocolo b,
                                protocolo_convenio a
                        where   c.nr_seq_lote_prot      = b.nr_sequencia
                        and     b.nr_sequencia          = a.nr_seq_lote_protocolo
                        and     a.nr_seq_protocolo      = c010_w.nr_seq_protocolo;

                        nr_nf_lote_protocolo_w  := substr(nr_nf_lote_protocolo_w,1,length(nr_nf_lote_protocolo_w));

                        /* aamfirmo 30/05/2013 OS 590425 */


                        /* buscar lote protoocolo do protocolo */

                        if (coalesce(c010_w.nr_seq_protocolo,0) <> 0) then

                                select  coalesce(max(nr_seq_lote_protocolo),0)
                                into STRICT    nr_seq_lote_protocolo_w
                                from    protocolo_convenio
                                where   nr_seq_protocolo = c010_w.nr_seq_protocolo;

                                if (coalesce(nr_seq_lote_protocolo_w,0) <> 0) then
                                        ds_nota_protocolo_w     := substr(obter_nf_lote_protocolo(nr_seq_lote_protocolo_w),1,255);
                                end if;

                        end if;

                        /* buscar a NFE da NF vinculada ao lote protocolo do protocolo. */

                        if (coalesce(nr_seq_lote_protocolo_w,0) <> 0)  then

                                select  max(a.nr_nfe_imp)
                                into STRICT    nr_nfe_imp_lote_prot_w
                                from    nota_fiscal a
                                where   a.nr_seq_lote_prot = nr_seq_lote_protocolo_w;

                        end if;

                        if (c010_w.nr_seq_protocolo IS NOT NULL AND c010_w.nr_seq_protocolo::text <> '')then

                                if (coalesce(nr_seq_protocolo_orig_w,0) <> 0) and (c010_w.ie_cancelamento = 'E') then

                                        ds_nfe_conta_protocolo_w := '';
                                        ds_nf_protocolo_w:= '';
					ds_serie_nf_protocolo_w:= null;
					ds_seq_nota_protocolo_w:= null;
                                        open c060;
                                        loop
                                        fetch c060 into
                                                nr_nfe_conta_protocolo_w,
                                                nr_nf_protocolo_w,
						cd_serie_nf_w,
						nr_seq_nota_protocolo_w;												
                                        EXIT WHEN NOT FOUND; /* apply on c060 */

                                                ds_nfe_conta_protocolo_w := substr(ds_nfe_conta_protocolo_w || nr_nfe_conta_protocolo_w || ', ', 1, 254);
                                                ds_nf_protocolo_w := substr(ds_nf_protocolo_w || nr_nf_protocolo_w || ', ', 1, 254);
						ds_serie_nf_protocolo_w := substr(ds_serie_nf_protocolo_w || cd_serie_nf_w || ', ', 1, 254);
						ds_seq_nota_protocolo_w := substr(ds_seq_nota_protocolo_w || nr_seq_nota_protocolo_w || ', ', 1, 254);											
											

                                        end loop;
                                        close c060;

                                        nr_nfe_conta_protocolo_w := substr(ds_nfe_conta_protocolo_w, 1, length(ds_nfe_conta_protocolo_w) - 2);
                                        nr_nf_protocolo_w := substr(ds_nf_protocolo_w, 1, length(ds_nf_protocolo_w) - 2);
					cd_serie_nf_w := substr(ds_serie_nf_protocolo_w, 1, length(ds_serie_nf_protocolo_w) - 2);
					nr_seq_nota_protocolo_w := substr(ds_seq_nota_protocolo_w, 1, length(ds_seq_nota_protocolo_w) - 2);				

                                else
										
					nr_nfe_conta_protocolo_w:= substr(obter_nfe_conta_protocolo(c010_w.nr_seq_protocolo,0),1,254);
					cd_serie_nf_w		:= substr(obter_nota_protocolo(c010_w.nr_seq_protocolo,0,'CD_SERIE'),1,254);
					nr_seq_nota_protocolo_w	:= substr(obter_nota_protocolo(c010_w.nr_seq_protocolo,0,'NR_SEQUENCIA'),1,254);
										
                                        if (c010_w.nr_interno_conta IS NOT NULL AND c010_w.nr_interno_conta::text <> '') and (coalesce(nr_nfe_conta_protocolo_w,'0') = '0') then
												
												
						if (c010_w.ie_cancelamento = 'E') then
							nr_nfe_conta_protocolo_w:= substr(obter_nfe_conta_protocolo(0,c010_w.nr_seq_conta_origem),1,254);
							cd_serie_nf_w			:= substr(obter_nota_protocolo(0,c010_w.nr_seq_conta_origem,'CD_SERIE'),1,254);
							nr_seq_nota_protocolo_w	:= substr(obter_nota_protocolo(0,c010_w.nr_seq_conta_origem,'NR_SEQUENCIA'),1,254);										
						else
							nr_nfe_conta_protocolo_w:= substr(obter_nfe_conta_protocolo(0,c010_w.nr_interno_conta),1,254);
							cd_serie_nf_w			:= substr(obter_nota_protocolo(0,c010_w.nr_interno_conta,'CD_SERIE'),1,254);
							nr_seq_nota_protocolo_w	:= substr(obter_nota_protocolo(0,c010_w.nr_interno_conta,'NR_SEQUENCIA'),1,254);									
						end if;					
                                      end if;
                                end if;

                        elsif (c010_w.nr_interno_conta IS NOT NULL AND c010_w.nr_interno_conta::text <> '')then
						
				if (c010_w.ie_cancelamento = 'E') then
					nr_nfe_conta_protocolo_w := substr(obter_nfe_conta_protocolo(0,c010_w.nr_seq_conta_origem),1,254);
					cd_serie_nf_w			 := substr(obter_nota_protocolo(0,c010_w.nr_seq_conta_origem,'CD_SERIE'),1,254);
					nr_seq_nota_protocolo_w	 := substr(obter_nota_protocolo(0,c010_w.nr_seq_conta_origem,'NR_SEQUENCIA'),1,254);	
				
				else
					nr_nfe_conta_protocolo_w:= substr(obter_nfe_conta_protocolo(0,c010_w.nr_interno_conta),1,254);
					cd_serie_nf_w		:= substr(obter_nota_protocolo(0,c010_w.nr_interno_conta,'CD_SERIE'),1,254);
					nr_seq_nota_protocolo_w	:= substr(obter_nota_protocolo(0,c010_w.nr_interno_conta,'NR_SEQUENCIA'),1,254);										
				end if;	
			end if;
			
                        if (ie_compl_hist_w = 'S') then    /*Anderson 05/02/2007 - OS 49490*/
                                if (coalesce(nr_seq_nota_fiscal_w, 0) != 0) then
                                        select vl_total_nota
                                        into STRICT vl_total_nota_w
                                        from nota_fiscal
                                        where nr_sequencia = nr_seq_nota_fiscal_w;
                                end if;

                                nm_medico_resp_atend_w          := null;
                                ds_espec_medico_resp_atend_w    := null;

                                if (c010_w.nr_atendimento IS NOT NULL AND c010_w.nr_atendimento::text <> '') then
                                        select  substr(obter_nome_pf(a.cd_medico_resp),1,80),
                                                substr(obter_especialidade_medico(a.cd_medico_resp,'D'),1,255)
                                        into STRICT    nm_medico_resp_atend_w,
                                                ds_espec_medico_resp_atend_w
                                        from    atendimento_paciente a
                                        where   nr_atendimento  = c010_w.nr_atendimento;
                                end if;

                                cd_sistema_ant_mat_w    :=' ';

                                if (c010_w.ie_proc_mat     = 'M') then
                                        select  coalesce(max(cd_sistema_ant),' ')
                                        into STRICT    cd_sistema_ant_mat_w
                                        from    material
                                        where   cd_material = c010_w.cd_material;
                                end if;
								
								

                                ds_conteudo_w   := substr(c010_w.cd_convenio            || '#@' ||
                                                        c010_w.ds_convenio              || '#@' ||
                                                        c010_w.nr_atendimento           || '#@' ||
                                                        c010_w.nm_pessoa_fisica         || '#@' ||
                                                        c010_w.nr_interno_conta         || '#@' ||
                                                        c010_w.nr_seq_protocolo         || '#@' ||
                                                        nr_protocolo_w                  || '#@' ||
                                                        c010_w.nr_doc_convenio          || '#@' ||
                                                        nr_nf_protocolo_w               || '#@' ||
                                                        ds_titulos_conta_w              || '#@' ||
                                                        ds_titulos_prot_w               || '#@' ||
                                                        ds_mesano_referencia_w          || '#@' ||
                                                        ds_mesano_referencia_abrev_w    || '#@' ||
                                                        nm_pessoa_nota_fiscal_w         || '#@' ||
                                                        ''                              || '#@' ||
                                                        ''                              || '#@' ||
                                                        nr_nfe_imp_w                    || '#@' ||
                                                        nr_nfe_nf_prot_w                || '#@' ||
                                                        nr_nf_prot_conta_w              || '#@' ||
                                                        ds_estorno_w                    || '#@' ||
                                                        ''                              || '#@' ||
                                                        dt_mesano_referencia_compl_w    || '#@' ||
                                                        nr_nf_titulo_w                  || '#@' ||
                                                        nr_nf_lote_protocolo_w          || '#@' ||
                                                        nm_estabelecimento_w            || '#@' ||
                                                        c010_w.ds_primeiro_setor_atend  || '#@' ||
                                                        c010_w.nm_responsavel_atend     || '#@' ||
                                                        nm_fantasia_conv_w              || '#@' ||
                                                        ds_razao_social_conv_w          || '#@' ||
                                                        nr_titulo_receber_w             || '#@' ||
                                                        c010_w.nr_sequencia             || '#@' ||
                                                        nr_nfe_imp_lote_prot_w          || '#@' ||
                                                        nr_nf_prot_nota_w               || '#@' ||
                                                        ds_nota_protocolo_w             || '#@' ||
                                                        trim(both nr_nfe_conta_protocolo_w)  || '#@' ||
                                                        c010_w.ds_categoria             || '#@' ||
                                                        c010_w.ds_plano_convenio        || '#@' ||
                                                        c010_w.ds_tipo_atendimento      || '#@' ||
                                                        vl_total_nota_w                 || '#@' ||
                                                        c010_w.nr_prontuario            || '#@' ||
                                                        c010_w.ds_classif_atendimento   || '#@' ||
                                                        cd_drg_w                        || '#@' ||
                                                        to_char(c010_w.dt_entrada,'dd/mm/yyyy hh24:mi:ss')|| '#@' ||
                                                        to_char(c010_w.dt_alta,'dd/mm/yyyy hh24:mi:ss')   || '#@' ||
                                                        to_char(c010_w.dt_item,'dd/mm/yyyy hh24:mi:ss')   || '#@' ||
                                                        c010_w.ds_clinica               || '#@' ||
                                                        ''                              || '#@' ||
                                                        nm_medico_resp_atend_w          || '#@' ||
                                                        ds_espec_medico_resp_atend_w    || '#@' ||
                                                        cd_sistema_ant_mat_w            || '#@' ||
                                                        coalesce(obter_dias_internacao(c010_w.nr_atendimento),0) || '#@' ||
                                                        obter_patient_category(c010_w.nr_atendimento)  || '#@' ||
							cd_serie_nf_w					|| '#@' ||
							nr_seq_nota_fiscal_w			|| '#@' ||
							nr_seq_nota_protocolo_w, 1,2000);											
														
														

                                ds_compl_hist_aux_w     := substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w, ds_conteudo_w),1,255);

                                ds_compl_historico_w    := substr(coalesce(ds_compl_hist_aux_w, ds_compl_historico_w),1,255);

                        end if;

                        ds_compl_historico_w            := substr(ds_compl_historico_w,1,255);
                        ds_doc_agrupamento_w            := substr(ds_doc_agrupamento_w,1,50);

                        cd_estab_debito_w               := c010_w.cd_estabelecimento;
                        ds_compl_hist_debito_w          := substr(ds_compl_historico_w,1,255);

                        if (cd_hist_debito_w IS NOT NULL AND cd_hist_debito_w::text <> '') then
                                ds_compl_hist_debito_w  := substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_hist_debito_w, ds_conteudo_w),1,255);
                                ds_compl_hist_debito_w  := coalesce(ds_compl_hist_debito_w, ds_compl_historico_w);
                        end if;

                        if (coalesce(nr_nota_fiscal_agrup_w, 0) = 0) then
                                begin
                                select  substr(obter_nota_conta_prot_conv(coalesce(c010_w.nr_seq_protocolo, 0), CASE WHEN c010_w.ie_cancelamento='E' THEN coalesce(c010_w.nr_seq_conta_origem, 0)  ELSE coalesce(c010_w.nr_interno_conta, 0) END , 'S'),1,254)
                                into STRICT    nr_nota_fiscal_agrup_w
                                from    protocolo_convenio a
                                where   nr_seq_protocolo        = c010_w.nr_seq_protocolo;
                                exception
                                when others then
                                nr_nota_fiscal_agrup_w := '0';
                                end;
                        end if;

                        if (nm_agrupador_w = 'NR_INTERNO_CONTA')   then
                                nr_seq_agrupamento_w    := c010_w.nr_interno_conta;
                        elsif (nm_agrupador_w = 'NR_ATENDIMENTO')     then
                                nr_seq_agrupamento_w    := c010_w.nr_atendimento;
                        elsif (nm_agrupador_w = 'NR_SEQ_PROTOCOLO')   then
                                nr_seq_agrupamento_w    := c010_w.nr_seq_protocolo;
                        elsif (nm_agrupador_w = 'NR_NOTA_FISCAL')     then
                                nr_seq_agrupamento_w    := nr_nota_fiscal_agrup_w;
                        elsif (nm_agrupador_w = 'DS_MES_ANO')         then
                                nr_seq_agrupamento_w    := dt_mesano_w;
                        elsif (nm_agrupador_w = 'CD_CONVENIO')        then
                                nr_seq_agrupamento_w    := c010_w.cd_convenio;
                        end if;

                        if (coalesce(nr_seq_agrupamento_w,0) = 0)then
                                nr_seq_agrupamento_w    := c010_w.nr_interno_conta;
                        end if;

                        if (ie_permite_estab_dif_w = 'PCCT')       and (ie_conta_transitoria_w = 'S')          and (coalesce(cd_estab_financeiro_w,0) <> 0)     and (cd_conta_transitoria_w IS NOT NULL AND cd_conta_transitoria_w::text <> '')    and (cd_estab_financeiro_w <> c010_w.cd_estabelecimento) then
                                cd_estab_debito_w       := cd_estab_financeiro_w;
                        end if;

                        if (ie_ctb_estab_centro_w = 'S') and (coalesce(cd_conta_transitoria_w::text, '') = '') and (cd_estab_setor_w IS NOT NULL AND cd_estab_setor_w::text <> '') and (cd_estab_setor_w <> c010_w.cd_estabelecimento) then
                                cd_estab_debito_w       := cd_estab_setor_w;
                        end if;

                        /* Grava Movimento Debito */

                        if (c010_w.ie_proc_mat = 'M') then
                                nm_tabela_w             := 'MATERIAL_ATEND_PACIENTE';
                                nm_atributo_w           := 'VL_MATERIAL';
                                nr_seq_info_ctb_w       := 7;
                        elsif (c010_w.ie_proc_mat = 'P') then
                                nm_tabela_w             := 'PROCEDIMENTO_PACIENTE';
                                nm_atributo_w           := 'VL_PROCEDIMENTO';
                                nr_seq_info_ctb_w       := 6;
                        end if;

                        nr_seq_nf_prot_w := nr_seq_nota_fiscal_w;

                        if (coalesce(nr_seq_nf_prot_w,'0') = '0') then
                                select  substr(obter_nota_conta_prot_conv(c010_w.nr_seq_protocolo,0, 'S'),1,254)
                                into STRICT    nr_seq_nf_prot_w
;
                        end if;

                        ds_atributos_w  := null;

                        ds_atributos_w  :=      'NR_SEQ_PROTOCOLO=' || c010_w.nr_seq_protocolo || ';' ||
                                                'NR_SEQ_NOTA_FISCAL=' || nr_seq_nf_prot_w || ';' ||
                                                'NR_NFE_IMP=' || coalesce(nr_nfe_imp_w, coalesce(nr_nfe_nf_prot_w, nr_nfe_imp_lote_prot_w));

                        ctb_obter_doc_movto(    cd_tipo_lote_contabil_w,
                                                '',
                                                'VR',
                                                dt_movimento_w,
                                                null,
                                                null,
                                                ds_atributos_w,
                                                nm_usuario_p,
                                                ie_regra_w,
                                                nr_documento_aux_w,
                                                ie_origem_documento_w);

                        nr_seq_tab_orig_w       := c010_w.nr_sequencia;

                        nr_sequencia_movto_w  := nr_sequencia_movto_w + 1;

                        nr_seq_classif_movto_w  := ctb_obter_classif_financ(c010_w.cd_convenio, c010_w.ie_tipo_convenio);

                        insert into w_movimento_contabil(
							nr_lote_contabil,
							nr_sequencia,
							cd_conta_contabil,
							ie_debito_credito,
							cd_historico,
							dt_movimento,
							vl_movimento,
							cd_centro_custo,
							ds_compl_historico,
							ds_doc_agrupamento,
							nr_seq_agrupamento,
							nr_seq_trans_fin,
							cd_cgc,
							cd_pessoa_fisica,
							nr_documento,
							ie_transitorio,
							cd_estabelecimento,
							ie_origem_documento,
							nr_seq_info,
							nr_seq_tab_orig,
							nm_tabela,
							nm_atributo,
							nr_seq_tab_compl,
							nr_seq_classif_movto,
							nr_seq_proj_rec
						) values (
							nr_lote_contabil_p,
							nr_sequencia_movto_w,
							cd_conta_contabil_conv_w,
							'D',
							cd_hist_debito_w,
							dt_movimento_w,
							c010_w.vl_material,
							cd_centro_custo_debito_w,
							ds_compl_hist_debito_w,
							ds_doc_agrupamento_w,
							nr_seq_agrupamento_w,
							null,
							null,
							null,
							nr_documento_aux_w,
							'N',
							cd_estab_debito_w,
							ie_origem_documento_w,
							nr_seq_info_ctb_w,
							nr_seq_tab_orig_w,
							nm_tabela_w,
							nm_atributo_w,
							nr_seq_tab_compl_w,
							nr_seq_classif_movto_w,
							null);

                        /*Contabilizacao entre estabelecimentos */

                        if (ie_permite_estab_dif_w = 'PCCT') and (ie_conta_transitoria_w = 'S') and (coalesce(cd_estab_financeiro_w,0) <> 0) and (cd_conta_transitoria_w IS NOT NULL AND cd_conta_transitoria_w::text <> '') and (cd_estab_financeiro_w <> c010_w.cd_estabelecimento) then
                                          nr_lote_contabil_p := ctb_gerar_movto_conta_transit(  nr_lote_contabil_p, c010_w.cd_estabelecimento, cd_conta_transitoria_w, cd_historico_ct_w);


                                  nr_lote_contabil_p := ctb_gerar_movto_conta_transit(  nr_lote_contabil_p, cd_estab_financeiro_w, cd_conta_transitoria_w, cd_historico_ct_w);
                        end if;

                        if (c010_w.vl_tx_adm <> 0) and (cd_conta_contabil_tx_adm_w IS NOT NULL AND cd_conta_contabil_tx_adm_w::text <> '') then
                                c010_w.vl_material      := c010_w.vl_material - c010_w.vl_tx_adm;
                        end if;

                        /* Desconta repasse se o movimento de repasse for incluido no da receita */

                        if (ie_contab_repasse_receita_w = 'S') and (coalesce(c010_w.vl_repasse,0) <> 0) then

                                if (coalesce(c010_w.vl_repasse,0) > coalesce(c010_w.vl_material,0)) and (c010_w.vl_material >= 0) then

                                        c010_w.vl_material      := 0;

                                elsif (coalesce(c010_w.vl_repasse,0) < coalesce(c010_w.vl_material,0)) and (c010_w.vl_material <= 0) then

                                        c010_w.vl_material      := 0;

                                else

                                                c010_w.vl_material      := coalesce(c010_w.vl_material,0) - coalesce((c010_w.vl_repasse),0);

                                end if;
                        end if;

                        /* Grava Movimento Credito */

                        ds_desconto_w           := ' ' || wheb_mensagem_pck.get_texto(799413) || ' ';
                        nr_sequencia_movto_w    := nr_sequencia_movto_w + 1;

                        if (ie_regra_centro_estab_w = 'S') and (coalesce(cd_centro_custo_mat_w,0) <> 0) and (cd_estab_setor_w <> c010_w.cd_estabelecimento) then
                                cd_centro_custo_mat_w   := coalesce(ctb_obter_centro_contab(cd_estab_setor_w, cd_centro_custo_mat_w,
                                                                                        c010_w.cd_estabelecimento),cd_centro_custo_mat_w);
                        end if;

                        qt_registros_w := 0;

                        /* Marcio OS: 465899 -  Verifica se existe regra de rateio para o procedimento interno */

                        if (c010_w.nr_seq_proc_interno IS NOT NULL AND c010_w.nr_seq_proc_interno::text <> '')  then

                                select  count(*)
                                into STRICT    qt_registros_w
                                from    ctb_crit_rateio_proc
                                where   nr_seq_proc_interno = c010_w.nr_seq_proc_interno
                                and     dt_movimento_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia,dt_movimento_w);

                        end if;

                        /* Caso tenha regra de rateio */

                        if (qt_registros_w > 0) then

                                nr_sequencia_movto_w := ctb_rateio_proc_interno(        nr_lote_contabil_p, nr_sequencia_movto_w, c010_w.nr_seq_proc_interno, c010_w.cd_conta_contabil, cd_historico_w, dt_movimento_w, c010_w.vl_material, cd_centro_custo_mat_w, ds_compl_historico_w, ds_doc_agrupamento_w, nr_seq_agrupamento_w);

                        else

                                ie_deb_cred_w   := 'C';
                                c010_w.cd_conta_contabil      := cd_conta_credito_w;
                                if (c010_w.ie_cancelamento = 'E') and (ie_conta_contab_redut_w = 'S') then
                                        cd_conta_contabil_redut_w := ctb_obter_conta_mat_proc(
                                                                        c010_w.cd_estabelecimento,
                                                                        c010_w.nr_interno_conta,
                                                                        c010_w.nr_atendimento,
                                                                        c010_w.cd_material,
                                                                        c010_w.cd_procedimento,
                                                                        c010_w.ie_origem_proced,
                                                                        6);

                                        if (coalesce(cd_conta_contabil_redut_w,'X') <> 'X') then

                                                c010_w.vl_material              := c010_w.vl_material * -1;
                                                ie_deb_cred_w                   := 'D';
                                                c010_w.cd_conta_contabil        := cd_conta_contabil_redut_w;
												c010_w.cd_sequencia_parametro   := null;

                                        end if;
                                end if;

                                if (c010_w.ie_proc_mat = 'M') then
                                        nm_tabela_w             := 'MATERIAL_ATEND_PACIENTE';
                                        nm_atributo_w           := 'VL_MATERIAL';
                                        nr_seq_info_ctb_w       := 7;
                                elsif (c010_w.ie_proc_mat = 'P') then
                                        nm_tabela_w             := 'PROCEDIMENTO_PACIENTE';
                                        nm_atributo_w           := 'VL_PROCEDIMENTO';
                                        nr_seq_info_ctb_w       := 6;
                                end if;

                                nr_seq_tab_orig_w       := c010_w.nr_sequencia;

                                ie_gerou_movto_rat_w:=  false;

                                --Geracao dos movimentos contabeis para procedimentos com rateio por conta contabil
                                if (c010_w.ie_proc_mat = 'P') then

                                        cd_estab_movimento_w:=  null;

                                        if (ie_ctb_estab_centro_w = 'S') then
                                                cd_estab_movimento_w:=  cd_estab_setor_w;
                                        end if;

                                        SELECT * FROM ctb_parametros_cc_rateio_pck.gerar_movto_proc_paciente(
                                                c010_w.nr_sequencia, nr_lote_contabil_p, ie_deb_cred_w, cd_historico_w, dt_movimento_w, ds_compl_historico_w, ds_doc_agrupamento_w, nr_seq_agrupamento_w, null, null, null, nr_documento_aux_w, 'N', cd_estab_movimento_w, ie_origem_documento_w, nr_seq_info_ctb_w, nr_seq_tab_orig_w, nm_tabela_w, nm_atributo_w, nr_seq_tab_compl_w, nr_seq_classif_movto_w, cd_centro_custo_mat_w, nr_sequencia_movto_w, ie_gerou_movto_rat_w) INTO STRICT nr_sequencia_movto_w, ie_gerou_movto_rat_w;
                                end if;

                                if (not ie_gerou_movto_rat_w) then
                                    vl_liquido_w := c010_w.vl_material;
                                    IF (pkg_i18n.get_user_locale = 'es_BO') then

                                        select  CASE WHEN ie_ctb_estab_centro_w='S' THEN  cd_estab_setor_w  ELSE null END
                                        into STRICT    cd_estabelecimento_w
;

                                        open 	c080;
                                        fetch 	c080 bulk collect into c080_type_w;
                                        close 	c080;

					if (c080_type_w.first IS NOT NULL AND c080_type_w.first::text <> '') then
						vl_somatorio_tributos_w := 0;
						for i in c080_type_w.first..c080_type_w.last loop

							select  max(a.cd_conta_contabil)
							into STRICT    cd_conta_contabil_w
							from    tributo_regra_deferido a
							where   a.cd_tributo = c080_type_w[i].cd_tributo
							and     a.cd_empresa = cd_empresa_w
							and     a.cd_estabelecimento = cd_estab_lote_contabil_w
							and     coalesce(a.cd_convenio_parametro,0) = coalesce(c010_w.cd_convenio,0);

							if (cd_conta_contabil_w IS NOT NULL AND cd_conta_contabil_w::text <> '') then
						    
								vl_somatorio_tributos_w := vl_somatorio_tributos_w + c080_type_w[i].vl_movimento;
								nr_sequencia_movto_w    := nr_sequencia_movto_w + 1;

								movimento_contabil_row[i].nr_lote_contabil	:= nr_lote_contabil_p;
								movimento_contabil_row[i].nr_sequencia		:= nr_sequencia_movto_w;
								movimento_contabil_row[i].cd_conta_contabil	:= cd_conta_contabil_w;
								movimento_contabil_row[i].ie_debito_credito	:= 'C';
								movimento_contabil_row[i].cd_historico		:= cd_historico_w;
								movimento_contabil_row[i].dt_movimento		:= dt_movimento_w;
								movimento_contabil_row[i].vl_movimento		:= c080_type_w[i].vl_movimento;
								movimento_contabil_row[i].cd_centro_custo	:= cd_centro_custo_mat_w;
								movimento_contabil_row[i].ds_compl_historico	:= ds_compl_historico_w;
								movimento_contabil_row[i].ds_doc_agrupamento	:= ds_doc_agrupamento_w;
								movimento_contabil_row[i].nr_seq_agrupamento	:= nr_seq_agrupamento_w;
								movimento_contabil_row[i].nr_seq_trans_fin	:= null;
								movimento_contabil_row[i].cd_cgc		:= null;
								movimento_contabil_row[i].cd_pessoa_fisica	:= null;
								movimento_contabil_row[i].nr_documento		:= nr_documento_aux_w;
								movimento_contabil_row[i].ie_transitorio	:= 'N';
								movimento_contabil_row[i].ie_origem_documento	:= ie_origem_documento_w;
								movimento_contabil_row[i].nr_seq_info		:= nr_seq_info_ctb_w;
								movimento_contabil_row[i].nr_seq_tab_orig	:= c080_type_w[i].nr_seq_tab_orig;
								movimento_contabil_row[i].nm_tabela 		:= c080_type_w[i].nm_tabela;
								movimento_contabil_row[i].nm_atributo		:= 'VL_IMPOSTO';
								movimento_contabil_row[i].cd_estabelecimento	:= cd_estabelecimento_w;
								movimento_contabil_row[i].nr_seq_tab_compl	:= nr_seq_tab_compl_w;
								movimento_contabil_row[i].nr_seq_classif_movto	:= nr_seq_classif_movto_w;
								movimento_contabil_row[i].nr_seq_proj_rec	:= null;
							end if;
						end loop;
					if (movimento_contabil_row.first IS NOT NULL AND movimento_contabil_row.first::text <> '') then
						forall i in movimento_contabil_row.first..movimento_contabil_row.last
							insert into w_movimento_contabil values movimento_contabil_row(i);
					end if;
				     end if;

                                        vl_liquido_w := c010_w.vl_material - vl_somatorio_tributos_w;
                                    END IF;

                                    insert into w_movimento_contabil(
										nr_lote_contabil,
										nr_sequencia,
										cd_conta_contabil,
										ie_debito_credito,
										cd_historico,
										dt_movimento,
										vl_movimento,
										cd_centro_custo,
										ds_compl_historico,
										ds_doc_agrupamento,
										nr_seq_agrupamento,
										nr_seq_trans_fin,
										cd_cgc,
										cd_pessoa_fisica,
										nr_documento,
										ie_transitorio,
										ie_origem_documento,
										nr_seq_info,
										nr_seq_tab_orig,
										nm_tabela,
										nm_atributo,
										cd_estabelecimento,
										nr_seq_tab_compl,
										nr_seq_classif_movto,
										nr_seq_proj_rec,
										cd_sequencia_parametro
										)
                                    values (
										nr_lote_contabil_p,
										nr_sequencia_movto_w,
										c010_w.cd_conta_contabil,
										ie_deb_cred_w,
										cd_historico_w,
										dt_movimento_w,
										vl_liquido_w,
										cd_centro_custo_mat_w,
										ds_compl_historico_w,
										ds_doc_agrupamento_w,
										nr_seq_agrupamento_w,
										null,
										null,
										null,
										nr_documento_aux_w,
										'N',
										ie_origem_documento_w,
										nr_seq_info_ctb_w,
										nr_seq_tab_orig_w,
										nm_tabela_w,
										nm_atributo_w,
										CASE WHEN ie_ctb_estab_centro_w='S' THEN  cd_estab_setor_w  ELSE null END ,
										nr_seq_tab_compl_w,
										nr_seq_classif_movto_w,
										null,
										c010_w.cd_sequencia_parametro);

                                end if;

                        end if;

                        /* Contabilizacao de co-seguro e dedutivel - Mexico */

                        if (false) then

                                movimento_contabil_w := null;
                                for c070_w in c070 loop


                                        nr_sequencia_movto_w    := nr_sequencia_movto_w + 1;

                                        /* Grava Movimento Credito */

                                        movimento_contabil_w.nr_lote_contabil           := nr_lote_contabil_p;                  -- OK
                                        movimento_contabil_w.nr_sequencia               := nr_sequencia_movto_w;                -- OK
                                        movimento_contabil_w.ie_debito_credito          := 'D';                                 -- OK
                                        movimento_contabil_w.dt_movimento               := dt_movimento_w;                      -- OK
                                        movimento_contabil_w.vl_movimento               := c070_w.vl_rateio;                    -- OK
                                        movimento_contabil_w.cd_conta_contabil          := cd_conta_credito_w;                  -- OK
                                        movimento_contabil_w.cd_centro_custo            := cd_centro_custo_mat_w;               -- OK
                                        movimento_contabil_w.cd_historico               := cd_historico_w;                      -- OK
                                        movimento_contabil_w.ds_compl_historico         := ds_compl_historico_w;                -- OK
                                        movimento_contabil_w.nr_seq_agrupamento         := nr_seq_agrupamento_w;                -- OK
                                        movimento_contabil_w.ds_doc_agrupamento         := ds_doc_agrupamento_w;                -- OK
                                        movimento_contabil_w.ie_origem_documento        := ie_origem_documento_w;               -- OK
                                        movimento_contabil_w.nr_documento               := nr_documento_aux_w;                  -- OK
                                        movimento_contabil_w.ie_transitorio             := 'N';                                 -- OK
                                        movimento_contabil_w.nm_tabela                  := c070_w.nm_tabela;                    -- OK
                                        movimento_contabil_w.nm_atributo                := c070_w.nm_atributo;                  -- OK
                                        movimento_contabil_w.nr_seq_tab_orig            := c070_w.nr_seq_tab_orig;              -- OK
                                        movimento_contabil_w.nr_seq_tab_compl           := nr_seq_tab_compl_w;                  -- OK
                                        movimento_contabil_w.nr_seq_info                := nr_seq_info_ctb_w;                   -- OK
                                        movimento_contabil_w.nr_seq_classif_movto       := nr_seq_classif_movto_w;
                                        movimento_contabil_w.nr_seq_proj_rec            := null;

                                        insert into w_movimento_contabil values (movimento_contabil_w.*);

                                        nr_sequencia_movto_w    := nr_sequencia_movto_w + 1;

                                        /* Grava Movimento Debito */

                                        movimento_contabil_w.nr_lote_contabil           := nr_lote_contabil_p;                  -- OK
                                        movimento_contabil_w.nr_sequencia               := nr_sequencia_movto_w;                -- OK
                                        movimento_contabil_w.ie_debito_credito          := 'C';                                 -- OK
                                        movimento_contabil_w.dt_movimento               := dt_movimento_w;                      -- OK
                                        movimento_contabil_w.vl_movimento               := c070_w.vl_rateio;                    -- OK
                                        movimento_contabil_w.cd_conta_contabil          := cd_conta_contabil_conv_w;            -- OK
                                        movimento_contabil_w.cd_centro_custo            := cd_centro_custo_debito_w;            -- OK
                                        movimento_contabil_w.cd_historico               := cd_hist_debito_w;                    -- OK
                                        movimento_contabil_w.ds_compl_historico         := ds_compl_hist_debito_w;              -- OK
                                        movimento_contabil_w.nr_seq_agrupamento         := nr_seq_agrupamento_w;                -- OK
                                        movimento_contabil_w.ds_doc_agrupamento         := ds_doc_agrupamento_w;                -- OK
                                        movimento_contabil_w.ie_origem_documento        := ie_origem_documento_w;               -- OK
                                        movimento_contabil_w.nr_documento               := nr_documento_aux_w;                  -- OK
                                        movimento_contabil_w.ie_transitorio             := 'N';                                 -- OK
                                        movimento_contabil_w.nm_tabela                  := c070_w.nm_tabela;                    -- OK
                                        movimento_contabil_w.nm_atributo                := c070_w.nm_atributo;                  -- OK
                                        movimento_contabil_w.nr_seq_tab_orig            := c070_w.nr_seq_tab_orig;              -- OK
                                        movimento_contabil_w.nr_seq_tab_compl           := nr_seq_tab_compl_w;                  -- OK
                                        movimento_contabil_w.nr_seq_info                := nr_seq_info_ctb_w;                   -- OK
                                        movimento_contabil_w.nr_seq_classif_movto       := nr_seq_classif_movto_w;
                                        movimento_contabil_w.nr_seq_proj_rec            := null;

                                        insert into w_movimento_contabil values (movimento_contabil_w.*);

                                end loop;

                        end if;

                        if (c010_w.vl_tx_adm <> 0) and (cd_conta_contabil_tx_adm_w IS NOT NULL AND cd_conta_contabil_tx_adm_w::text <> '') then

                                nm_tabela_w             := 'PROCEDIMENTO_PACIENTE';
                                nm_atributo_w           := 'VL_TX_ADM';
                                nr_seq_info_ctb_w       := 6;

                                nr_seq_tab_orig_w       := c010_w.nr_sequencia;

                                nr_sequencia_movto_w    := nr_sequencia_movto_w + 1;

                                insert into w_movimento_contabil( --3
                                        nr_lote_contabil,
                                        nr_sequencia,
                                        cd_conta_contabil,
                                        ie_debito_credito,
                                        cd_historico,
                                        dt_movimento,
                                        vl_movimento,
                                        cd_centro_custo,
                                        ds_compl_historico,
                                        ds_doc_agrupamento,
                                        nr_seq_agrupamento,
                                        nr_seq_trans_fin,
                                        cd_cgc,
                                        cd_pessoa_fisica,
                                        nr_documento,
                                        ie_transitorio,
                                        ie_origem_documento,
                                        nr_seq_info,
                                        nr_seq_tab_orig,
                                        nm_tabela,
                                        nm_atributo,
                                        nr_seq_tab_compl,
                                        nr_seq_classif_movto,
                                        nr_seq_proj_rec)
                                values (nr_lote_contabil_p,
                                        nr_sequencia_movto_w,
                                        cd_conta_contabil_tx_adm_w,
                                        'C',
                                        cd_historico_w,
                                        dt_movimento_w,
                                        c010_w.vl_tx_adm,
                                        cd_centro_custo_mat_w,
                                        ds_compl_historico_w,
                                        ds_doc_agrupamento_w,
                                        nr_seq_agrupamento_w,
                                        null,
                                        null,
                                        null,
                                        nr_documento_aux_w,
                                        'N',
                                        ie_origem_documento_w,
                                        nr_seq_info_ctb_w,
                                        nr_seq_tab_orig_w,
                                        nm_tabela_w,
                                        nm_atributo_w,
                                        nr_seq_tab_compl_w,
                                        nr_seq_classif_movto_w,
                                        null);

                        end if;

                        /* 3218
                                - sem plus (Vl repasse HM menor ou igual ao valor que esta na conta (Receita))
                                        O valor da 3218 eh o valor do repasse HM

                                - com plus (Vl repasse HM maior que o valor da receita)
                                        O valor da 3218 eh o valor da receita  valor do plus
                                        (Valor do plus eh: VL_REPASSE  VL_RECEITA)

                                        Ex vl procedimento 200
                                                vl repasse 300
                                        Joga na conta 3218 o 200  (300-200) = R$100,00
                        */


                        /*vl_repasse_rec_w      := nvl(c010_w.vl_repasse,0);*/

                        vl_plus_repasse_w       := 0;
                        vl_repasse_rec_w        := 0;
                        if (coalesce(cd_conta_repasse_rec_w,'0') <> '0') and
                                ((ie_contab_repasse_receita_w = 'S') or (ie_contab_repasse_receita_w = 'V')) and
                                /* (c010_w.ie_cancelamento <> 'E') and*/

                                (coalesce(c010_w.vl_repasse,0) <> 0) then

                                if (vl_material_w > 0) then

                                        if (vl_material_w >= c010_w.vl_repasse) then

                                                vl_repasse_rec_w        := coalesce(c010_w.vl_repasse,0);

                                        elsif (vl_material_w < c010_w.vl_repasse) then

                                                vl_plus_repasse_w       := coalesce(c010_w.vl_repasse,0) - coalesce(vl_material_w,0);
                                                vl_repasse_rec_w        := coalesce(c010_w.vl_repasse,0) - coalesce(vl_plus_repasse_w,0);

                                        end if;


                                elsif (vl_material_w < 0) then

                                        if (vl_material_w <= c010_w.vl_repasse) then

                                                vl_repasse_rec_w        := coalesce(c010_w.vl_repasse,0);


                                        elsif (vl_material_w > c010_w.vl_repasse) then

                                                vl_plus_repasse_w       := coalesce(c010_w.vl_repasse,0) - coalesce(vl_material_w,0);
                                                vl_repasse_rec_w        := coalesce(c010_w.vl_repasse,0) - coalesce(vl_plus_repasse_w,0);

                                        end if;

                                end if;

                                if (c010_w.ie_proc_mat = 'M') then
                                        nm_tabela_w             := 'MATERIAL_ATEND_PACIENTE';
                                        nm_atributo_w           := 'VL_MATERIAL';
                                        nr_seq_info_ctb_w       := 7;
                                elsif (c010_w.ie_proc_mat = 'P') then
                                        nm_tabela_w             := 'PROCEDIMENTO_PACIENTE';

                                        nm_atributo_w           := 'VL_PROCEDIMENTO';
                                        nr_seq_info_ctb_w       := 6;
                                end if;

                                nm_atributo_w           := 'VL_REPASSE';
                                nr_seq_tab_orig_w       := c010_w.nr_sequencia;

                                insert into w_movimento_contabil( -- 4
                                        nr_lote_contabil,
                                        nr_sequencia,
                                        cd_conta_contabil,
                                        ie_debito_credito,
                                        cd_historico,
                                        dt_movimento,
                                        vl_movimento,
                                        cd_centro_custo,
                                        ds_compl_historico,
                                        ds_doc_agrupamento,
                                        nr_seq_agrupamento,
                                        nr_seq_trans_fin,
                                        cd_cgc,
                                        cd_pessoa_fisica,
                                        nr_documento,
                                        ie_transitorio,
                                        ie_origem_documento,
                                        nr_seq_info,
                                        nr_seq_tab_orig,
                                        nm_tabela,
                                        nm_atributo,
                                        nr_seq_tab_compl,
                                        nr_seq_classif_movto,
                                        nr_seq_proj_rec)
                                values (nr_lote_contabil_p,
                                        nr_sequencia_movto_w,
                                        cd_conta_repasse_rec_w,
                                        'C',
                                        cd_historico_w,
                                        dt_movimento_w,
                                        vl_repasse_rec_w,       /* Trocado de c010_w.vl_repasse Matheus/Marlon em 26/09/2011*/
                                        cd_centro_custo_mat_w,
                                        ds_compl_historico_w,
                                        ds_doc_agrupamento_w,
                                        nr_seq_agrupamento_w,
                                        null,
                                        null,
                                        null,
                                        nr_documento_aux_w,
                                        'N',
                                        ie_origem_documento_w,
                                        nr_seq_info_ctb_w,
                                        nr_seq_tab_orig_w,
                                        nm_tabela_w,
                                        nm_atributo_w,
                                        nr_seq_tab_compl_w,
                                        nr_seq_classif_movto_w,
                                        null);
                        end if;

                        if (ie_contab_desconto_rec_w = 'S') then
                                open c030;
                                loop
                                fetch c030 into
                                        nr_seq_valor_w,
                                        vl_desconto_w,
                                        nm_tabela_w,
                                        nm_atributo_w,
                                        nr_seq_info_ctb_w,
                                        ie_classificacao_w;
                                EXIT WHEN NOT FOUND; /* apply on c030 */

                                        cd_centro_custo_debito_w        := null;
                                        cd_conta_contabil_conv_w := obter_conta_convenio(c010_w.cd_estabelecimento,
                                                                                        c010_w.cd_convenio,
                                                                                        c010_w.ie_tipo_atendimento,
                                                                                        coalesce(ie_classificacao_w,'D'),

                                                                                        c010_w.dt_mesano_referencia,
                                                                                        null,
                                                                                        c010_w.cd_categoria_parametro,
                                                                                        cd_plano_convenio_w,
                                                                                        c010_w.cd_setor_atendimento,
                                                                                        null,
                                                                                        null);

                                        if (coalesce(cd_conta_contabil_conv_w,'0') = '0') then
                                                /*'Falta definir a conta de desconto no cadastro ' || chr(13) || 'do convenio ' || c010_w.cd_convenio || '.#@#@');*/

                                                CALL wheb_mensagem_pck.exibir_mensagem_abort(181117,'c010_w.cd_convenio='||c010_w.cd_convenio);
                                        end if;

                                        select  coalesce(max(ie_centro_custo),'N')
                                        into STRICT    ie_centro_custo_w
                                        from    conta_contabil
                                        where   cd_conta_contabil = cd_conta_contabil_conv_w;

                                        if (ie_centro_custo_w = 'S') then
                                                select  max(cd_centro_custo)
                                                into STRICT    cd_centro_custo_debito_w
                                                from    setor_atendimento
                                                where   cd_setor_atendimento    = c010_w.cd_setor_atendimento;
                                        end if;

                                        nr_sequencia_movto_w    := nr_sequencia_movto_w + 1;
                                        /* Grava Movimento Debito */

                                        insert into w_movimento_contabil( --5
                                                nr_lote_contabil,
                                                nr_sequencia,
                                                cd_conta_contabil,
                                                ie_debito_credito,
                                                cd_historico,
                                                dt_movimento,
                                                vl_movimento,
                                                cd_centro_custo,
                                                ds_compl_historico,
                                                ds_doc_agrupamento,
                                                nr_seq_agrupamento,
                                                nr_seq_trans_fin,
                                                cd_cgc,
                                                cd_pessoa_fisica,
                                                nr_documento,
                                                ie_transitorio,
                                                ie_origem_documento,
                                                nr_seq_info,
                                                nr_seq_tab_orig,
                                                nm_tabela,
                                                nm_atributo,
                                                nr_seq_tab_compl,
                                                nr_seq_classif_movto,
                                                nr_seq_proj_rec)
                                        values (nr_lote_contabil_p,
                                                nr_sequencia_movto_w,
                                                cd_conta_contabil_conv_w,
                                                'D',
                                                cd_historico_w,
                                                dt_movimento_w,
                                                vl_desconto_w,
                                                cd_centro_custo_debito_w,
                                                ds_compl_historico_w,
                                                ds_doc_agrupamento_w,
                                                nr_seq_agrupamento_w,
                                                null,
                                                null,
                                                null,
                                                nr_documento_aux_w,
                                                'N',
                                                ie_origem_documento_w,
                                                nr_seq_info_ctb_w,
                                                nr_seq_valor_w,
                                                nm_tabela_w,
                                                nm_atributo_w,
                                                nr_seq_tab_compl_w,
                                                nr_seq_classif_movto_w,
                                                null);

                                        ds_compl_historico_w    := substr(ds_compl_historico_w || ds_desconto_w,1,255);
                                        nr_sequencia_movto_w    := nr_sequencia_movto_w + 1;
                                        /* Credito */

                                        insert into w_movimento_contabil( --6
                                                nr_lote_contabil,
                                                nr_sequencia,
                                                cd_conta_contabil,
                                                ie_debito_credito,
                                                cd_historico,
                                                dt_movimento,
                                                vl_movimento,
                                                cd_centro_custo,
                                                ds_compl_historico,
                                                ds_doc_agrupamento,
                                                nr_seq_agrupamento,
                                                nr_seq_trans_fin,
                                                cd_cgc,
                                                cd_pessoa_fisica,
                                                nr_documento,
                                                ie_transitorio,
                                                ie_origem_documento,
                                                nr_seq_info,
                                                nr_seq_tab_orig,
                                                nm_tabela,
                                                nm_atributo,
                                                nr_seq_tab_compl,
                                                nr_seq_classif_movto,
                                                nr_seq_proj_rec,
												cd_sequencia_parametro)
                                        values (nr_lote_contabil_p,
                                                nr_sequencia_movto_w,
                                                c010_w.cd_conta_contabil,
                                                'C',
                                                cd_historico_w,
                                                dt_movimento_w,
                                                vl_desconto_w,
                                                cd_centro_custo_mat_w,
                                                ds_compl_historico_w,
                                                ds_doc_agrupamento_w,
                                                nr_seq_agrupamento_w,
                                                null,
                                                null,
                                                null,
                                                null,
                                                'N',
                                                null,
                                                nr_seq_info_ctb_w,
                                                nr_seq_valor_w,
                                                nm_tabela_w,
                                                nm_atributo_w,
                                                nr_seq_tab_compl_w,
                                                nr_seq_classif_movto_w,
                                                null,
												c010_w.cd_sequencia_parametro);

                                end loop;
                                close c030;
                        end if;
						
						select 	coalesce(cd_conta_desconto,'0')
						into STRICT	cd_conta_contabil_conv_w
						from	parametro_faturamento a
						where 	a.cd_estabelecimento = obter_estabelecimento_ativo();
								
						select  coalesce(max(ie_centro_custo),'N')
						into STRICT    ie_centro_custo_w
						from    conta_contabil
						where   cd_conta_contabil = cd_conta_contabil_conv_w;							
								
						if (cd_conta_contabil_conv_w  <> '0') then
							open c040;
							loop
							fetch c040 into
									nr_seq_valor_w,
									vl_desconto_w,
									nm_tabela_w,
									nm_atributo_w,
									nr_seq_info_ctb_w;
							EXIT WHEN NOT FOUND; /* apply on c040 */
									
									if (ie_centro_custo_w = 'S') then
											select  max(cd_centro_custo)
											into STRICT    cd_centro_custo_debito_w
											from    setor_atendimento
											where   cd_setor_atendimento    = c010_w.cd_setor_atendimento;
									end if;

									nr_sequencia_movto_w    := nr_sequencia_movto_w + 1;
									/* Grava Movimento Debito */

									insert into w_movimento_contabil( --5
											nr_lote_contabil,
											nr_sequencia,
											cd_conta_contabil,
											ie_debito_credito,
											cd_historico,
											dt_movimento,
											vl_movimento,
											cd_centro_custo,
											ds_compl_historico,
											ds_doc_agrupamento,
											nr_seq_agrupamento,
											nr_seq_trans_fin,
											cd_cgc,
											cd_pessoa_fisica,
											nr_documento,
											ie_transitorio,
											ie_origem_documento,
											nr_seq_info,
											nr_seq_tab_orig,
											nm_tabela,
											nm_atributo,
											nr_seq_tab_compl,
											nr_seq_classif_movto,
											nr_seq_proj_rec)
									values (nr_lote_contabil_p,
											nr_sequencia_movto_w,
											cd_conta_contabil_conv_w,
											'D',
											cd_historico_w,
											dt_movimento_w,
											vl_desconto_w,
											cd_centro_custo_debito_w,
											ds_compl_historico_w,
											ds_doc_agrupamento_w,
											nr_seq_agrupamento_w,
											null,
											null,
											null,
											nr_documento_aux_w,
											'N',
											ie_origem_documento_w,
											nr_seq_info_ctb_w,
											nr_seq_valor_w,
											nm_tabela_w,
											nm_atributo_w,
											nr_seq_tab_compl_w,
											nr_seq_classif_movto_w,
											null);

									ds_compl_historico_w    := substr(ds_compl_historico_w || ds_desconto_w,1,255);
									nr_sequencia_movto_w    := nr_sequencia_movto_w + 1;
									/* Credito */

									insert into w_movimento_contabil( --6
											nr_lote_contabil,
											nr_sequencia,
											cd_conta_contabil,
											ie_debito_credito,
											cd_historico,
											dt_movimento,
											vl_movimento,
											cd_centro_custo,
											ds_compl_historico,
											ds_doc_agrupamento,
											nr_seq_agrupamento,
											nr_seq_trans_fin,
											cd_cgc,
											cd_pessoa_fisica,
											nr_documento,
											ie_transitorio,
											ie_origem_documento,
											nr_seq_info,
											nr_seq_tab_orig,
											nm_tabela,
											nm_atributo,
											nr_seq_tab_compl,
											nr_seq_classif_movto,
											nr_seq_proj_rec,
											cd_sequencia_parametro)
									values (nr_lote_contabil_p,
											nr_sequencia_movto_w,
											c010_w.cd_conta_contabil,
											'C',
											cd_historico_w,
											dt_movimento_w,
											vl_desconto_w,
											cd_centro_custo_mat_w,
											ds_compl_historico_w,
											ds_doc_agrupamento_w,
											nr_seq_agrupamento_w,
											null,
											null,
											null,
											null,
											'N',
											null,
											nr_seq_info_ctb_w,
											nr_seq_valor_w,
											nm_tabela_w,
											nm_atributo_w,
											nr_seq_tab_compl_w,
											nr_seq_classif_movto_w,
											null,
											c010_w.cd_sequencia_parametro);

							end loop;
							close c040;
						end if;

                        if (ie_origem_contab_trib_rec_w = 'T')  and (nr_seq_prot_trib_w <> c010_w.nr_seq_protocolo)
                                 then

                                nr_seq_prot_trib_w := c010_w.nr_seq_protocolo;
                                nr_interno_conta_trib_w := c010_w.nr_interno_conta;

                                open c_trib_titulo;
                                loop
                                fetch c_trib_titulo into
                                        vettrib;
                                EXIT WHEN NOT FOUND; /* apply on c_trib_titulo */

                                        nr_documento_aux_w              := null;--c010_w.nr_seq_protocolo;
                                        ie_origem_documento_w           := null;--5; -- dominio 6091
                                        vl_transacao_w                  := vettrib.vl_tributo;
                                        cd_cgc_w                        := vettrib.cd_cgc;
                                        cd_pessoa_fisica_w              := vettrib.cd_pessoa_fisica;
                                        nr_seq_trans_rec_w              := vettrib.nr_seq_trans_rec;

                                        nr_sequencia_movto_w := gerar_contab_trans_financ(
                                                c010_w.cd_estabelecimento, null, nr_lote_contabil_p, nm_usuario_p, '', 0, nr_documento_w, nr_seq_agrupamento_w, dt_movimento_w, vl_transacao_w, nr_seq_trans_rec_w, null, 'VL_TRIBUTO', cd_pessoa_fisica_w, cd_cgc_w, c010_w.cd_setor_atendimento, c010_w.cd_convenio, nr_documento_aux_w, null, ds_conteudo_w, null, null, null, vettrib.cd_tributo, null, null, vettrib.cd_tributo, null, null, null, null, null, null, null, nr_sequencia_movto_w, 'TITULO_RECEBER_TRIB', null, vettrib.nr_seq_proj_rec, ie_origem_documento_w, nr_seq_tab_orig_w, nr_seq_tab_compl_w, nr_seq_info_ctb_w, null, null);

                                end loop;
                                close c_trib_titulo;

                        end if;

                end loop;
                close c010;

                /* Contabilizar os repasses junto com a receita */

                if      ((ie_contab_repasse_receita_w = 'S') or (ie_contab_repasse_receita_w = 'V')) then

                        ds_retorno_rep_w := contabiliza_repasse(nr_lote_contabil_p, nm_usuario_p, 'X', ds_retorno_rep_w);

                end if;

                /* Contabilizar tributos da nota fiscal gerada a partir dos protocolos */


                /*
                IE_LOTE_CTB_TRIB_NF_W
                Selecionar o lote no qual o sistema contabilizara os impostos da nota fiscal de saida
                Se for no lote de receitas o sistema obtera os valores das notas fiscais associadas aos protocolos do mesmo lote
                LREC = Lote de receitas
                */
                if (ie_lote_ctb_trib_nf_w = 'LREC') then


                        /* IE_ORIGEM_CONTAB_TRIB_REC_W
                        Origem contabil do tributo na receita
                        T = Titulo
                        N = Nota
                        */
           if (ie_origem_contab_trib_rec_w = 'N') then


                                /* Contar se existem contas em lote de protocolos vinculados ao lote contabil */

                                select  count(*)
                                into STRICT    qt_lote_protocolo_w
                                from    protocolo_convenio a,
                                        conta_paciente b
                                where   b.nr_seq_protocolo      = a.nr_seq_protocolo
                                and     b.nr_lote_contabil      = nr_lote_contabil_p
                                and     (a.nr_seq_lote_protocolo IS NOT NULL AND a.nr_seq_lote_protocolo::text <> '')  LIMIT 1;

                                /* Contar se existem notas em protocolo vinculados ao lote contabil */

                                select  count(*)
                                into STRICT    qt_protocolo_w
                                from    nota_fiscal
                                where   nr_seq_protocolo in (   SELECT  distinct
                                                                        nr_seq_protocolo
                                                                from    conta_paciente
                                                                where   nr_lote_contabil= nr_lote_contabil_p)  LIMIT 1;

                                /* Contar se existem notas fiscais vinculadas a contas que estao no lote contabil */

                                select  count(*)
                                into STRICT    qt_interno_conta_w
                                from    nota_fiscal
                                where   nr_interno_conta in (   SELECT  distinct
                                                                        nr_interno_conta
                                                                from    conta_paciente
                                                                where   nr_lote_contabil= nr_lote_contabil_p)  LIMIT 1;

                                /*Contar se existem notas de estorno vinculadas a contas em que a conta de estorno esta no protoloco  */

                                select  count(*)
                                into STRICT    qt_interno_conta_est_w
                                from    nota_fiscal x
                                where   ie_contab_nf_estorno_w = 'S' /* Parametro para contabilizar notas de estorno */
                                and     x.ie_situacao = '2' /* Situacao da nota = Estorno */
                                and     x.nr_sequencia_ref in ( /* Vinculada a uma nota de uma conta paciente estornada */
                                                        SELECT  a.nr_sequencia
                                                        from    nota_fiscal a
                                                        where   exists (
                                                                SELECT  1
                                                                from    conta_paciente b 
                                                                where   a.nr_interno_conta = b.nr_seq_conta_origem
                                                                and     b.nr_lote_contabil= nr_lote_contabil_p
                                                                and     b.ie_cancelamento = 'E')
                                                                )  LIMIT 1;

                                /* OS 443793 - Busca as notas geradas pelo protocolo */

                                select  count(*)
                                into STRICT    qt_registros_w
                                from    nota_fiscal
                                where   nr_nota_fiscal   in (       SELECT  distinct
                                                                                obter_nota_conta_protoc_repa(x.nr_seq_protocolo,0) nr_nota_fiscal
                                                                        from    protocolo_convenio x,
                                                                                conta_paciente y
                                                                        where   y.nr_seq_protocolo      =       x.nr_seq_protocolo
                                                                        and     y.nr_lote_contabil      =       nr_lote_contabil_p)
                                                                        and     ((ie_contab_nf_estorno_w = 'S') or (ie_situacao = '1'))  LIMIT 1;

                                if (qt_lote_protocolo_w > 0) then

                                        /*
                                        update  nota_fiscal
                                        set     nr_lote_contabil        = nr_lote_contabil_p
                                        where   nr_sequencia in (
                                                                select  distinct n.nr_sequencia
                                                                from    protocolo_convenio a,
                                                                        conta_paciente b,
                                                                        nota_fiscal n
                                                                where   a.nr_seq_protocolo = b.nr_seq_protocolo
                                                                and     b.nr_lote_contabil = nr_lote_contabil_p
                                                                and     a.nr_seq_lote_protocolo is not null
                                                                and     n.nr_seq_lote_prot =  a.nr_seq_lote_protocolo)
                                        and     nvl(nr_lote_contabil,0) = 0;
                                        */


                                        /* Notas vinculadas a um lote protocolo vinculado a um protocolo que tenha um conta contabilizada no lote */

                                        update  nota_fiscal x
                                        set     x.nr_lote_contabil      = nr_lote_contabil_p
                                        where   coalesce(x.nr_lote_contabil,0) = 0
                                        and     exists (
                                                SELECT  1
                                                from    conta_paciente b,
                                                        protocolo_convenio a
                                                where   a.nr_seq_protocolo = b.nr_seq_protocolo
                                                and     a.nr_seq_lote_protocolo = x.nr_seq_lote_prot
                                                and     b.nr_lote_contabil = nr_lote_contabil_p  LIMIT 1)
                                        and     not exists (
                                                SELECT 1
                                                from nf_credito y
                                                where y.nr_seq_nf_gerada = x.nr_sequencia
                                                );

                                end if;

                                if (qt_protocolo_w > 0) then

                                        /*
                                        update  nota_fiscal
                                        set     nr_lote_contabil        = nr_lote_contabil_p
                                        where   nr_seq_protocolo        in (    select  distinct
                                                                                        nr_seq_protocolo
                                                                                from    conta_paciente
                                                                                where   nr_lote_contabil = nr_lote_contabil_p)
                                        and     (((ie_contab_nf_estorno_w = 'S') and (nvl(nr_lote_contabil,0) = 0)) or (ie_situacao = '1'));
                                        */


                                        /* Notas vinculadas a um protocolo que tenha uma conta contabilizada no lote */

                                        update  nota_fiscal x
                                        set     x.nr_lote_contabil = nr_lote_contabil_p
                                        where   coalesce(x.nr_lote_contabil,0) = 0
                                        and     exists (
                                                SELECT  1
                                                from    conta_paciente a
                                                where   a.nr_seq_protocolo = x.nr_seq_protocolo
                                                and     a.nr_lote_contabil = nr_lote_contabil_p  LIMIT 1)
                                        and     ((x.ie_situacao = '1') or (ie_contab_nf_estorno_w = 'S') and (x.ie_situacao in ('1','3')))
                                        and     not exists (
                                                SELECT 1
                                                from nf_credito y
                                                where y.nr_seq_nf_gerada = x.nr_sequencia
                                                );

                                end if;

                                if (qt_interno_conta_w > 0) then

                                        /*
                                        update  nota_fiscal
                                        set     nr_lote_contabil = nr_lote_contabil_p
                                        where   nr_interno_conta in (   select  distinct
                                                                                nr_interno_conta
                                                                        from    conta_paciente
                                                                        where   nr_lote_contabil = nr_lote_contabil_p)
                                        and     (((ie_contab_nf_estorno_w = 'S') and (nvl(nr_lote_contabil,0) = 0) and (ie_situacao = '3')) or (ie_situacao = '1'));
                                        */


                                        /* Notas fiscais vinculadas a uma conta que esteja contabilizada no lote */

                                        update  nota_fiscal x
                                        set     x.nr_lote_contabil = nr_lote_contabil_p
                                        where   coalesce(x.nr_lote_contabil,0) = 0
                                        and     exists (
                                                        SELECT 1
                                                        from    conta_paciente a
                                                        where   a.nr_interno_conta = x.nr_interno_conta
                                                        and     a.nr_lote_contabil = nr_lote_contabil_p  LIMIT 1)
                                        and     ((x.ie_situacao = '1') or
                                                ((ie_contab_nf_estorno_w = 'S') and (x.ie_situacao in ('1','3'))))
                                        and     not exists (
                                                SELECT 1
                                                from nf_credito y
                                                where y.nr_seq_nf_gerada = x.nr_sequencia
                                                );

                                end if;

                                if (qt_interno_conta_est_w > 0) then

                                        /*
                                        update  nota_fiscal a
                                        set     a.nr_lote_contabil      = nr_lote_contabil_p
                                        where   a.nr_sequencia in(      select  b.nr_sequencia
                                                        from    nota_fiscal     b
                                                        where   b.nr_interno_conta in ( select  distinct c.nr_seq_conta_origem
                                                                                        from    conta_paciente c
                                                                                        where   c.nr_lote_contabil= nr_lote_contabil_p)
                                                        and     (((ie_contab_nf_estorno_w = 'S') and (nvl(nr_lote_contabil,0) = 0)) and (b.ie_situacao = '2')));
                                        */

                                        /*
                                        update  nota_fiscal a
                                        set     a.nr_lote_contabil      = nr_lote_contabil_p
                                        where   a.nr_sequencia_ref in ( select  b.nr_sequencia
                                                        from    nota_fiscal     b
                                                        where   b.nr_interno_conta in ( select  c.nr_seq_conta_origem
                                                                                        from    conta_paciente c
                                                                                        where   c.nr_lote_contabil= nr_lote_contabil_p
                                                                                        and     c.ie_cancelamento = 'E')
                                                        and     ((ie_contab_nf_estorno_w = 'S') and (b.ie_situacao = '2')));
                                        */


                                        /* Notas de estorno */

                                        update  nota_fiscal x /* Nota fiscal de estorno vinculada a nota fiscal que esta vinculada a conta original da conta de estorno que esta no lote */
                                        set     x.nr_lote_contabil      = nr_lote_contabil_p
                                        where   x.ie_situacao = '2'
                                        and     x.nr_sequencia_ref in (
                                                                SELECT  a.nr_sequencia
                                                                from    nota_fiscal a
                                                                where   exists (
                                                                        SELECT  1
                                                                        from    conta_paciente b 
                                                                        where   a.nr_interno_conta = b.nr_seq_conta_origem
                                                                        and     b.nr_lote_contabil= nr_lote_contabil_p
                                                                        and     b.ie_cancelamento = 'E')
                                                                and     not exists (
                                                                        select 1
                                                                        from nf_credito y
                                                                        where y.nr_seq_nf_gerada = a.nr_sequencia
                                                                        )
                                                                        );

                                end if;

                                /* OS 443793 - Busca as notas geradas pelo protocolo */

                                if      (qt_interno_conta_w = 0 AND qt_protocolo_w = 0) or (qt_registros_w > 0) then
                                        update  nota_fiscal x
                                        set     nr_lote_contabil = nr_lote_contabil_p
                                        where   nr_nota_fiscal   in (SELECT distinct
                                                                                obter_nota_conta_protoc_repa(x.nr_seq_protocolo,0) nr_nota_fiscal
                                                                         from   protocolo_convenio x,
                                                                                conta_paciente y
                                                                         where  y.nr_seq_protocolo      =       x.nr_seq_protocolo
                                                                         and    y.nr_lote_contabil      =       nr_lote_contabil_p)
                                        and     ((ie_contab_nf_estorno_w = 'S') or (ie_situacao = '1'))
                                        and     ie_tipo_nota in ('SD','SE','SF','ST')
                                        and     not exists (
                                                SELECT 1
                                                from nf_credito y
                                                where y.nr_seq_nf_gerada = x.nr_sequencia
                                                );
                                end if;

                                /* Percorrer os tributos da nota para contabilizar */

                                open c020;
                                loop
                                fetch c020 into
                                        c020_w;
                                EXIT WHEN NOT FOUND; /* apply on c020 */

                                        /* Limpar variaveis */

                                        ds_mesano_referencia_abrev_w := null;
                                        dt_mesano_referencia_compl_w := null;
                                        c010_w.ds_primeiro_setor_atend := null;
                                        c010_w.nm_responsavel_atend := null;
                                        ds_mesano_referencia_w := null;
                                        nr_nf_lote_protocolo_w := null;
                                        ds_razao_social_conv_w := null;
                                        c010_w.dt_mesano_referencia := null;
                                        ie_origem_documento_w := null;
                                        dt_entrega_convenio_w := null;
                                        nr_titulo_receber_w := null;
                                        ds_titulos_conta_w := null;
                                        nr_nf_prot_conta_w := null;
                                        nm_fantasia_conv_w := null;
                                        nr_documento_aux_w := null;
                                        nr_seq_ultimo_protocolo_lido_w := null;
                                        c010_w.nr_doc_convenio := null;
                                        ds_titulos_prot_w := null;
                                        c010_w.nr_sequencia := null;
                                        nr_nf_prot_nota_w := null;
                                        nr_nf_titulo_w := null;
                                        dt_movimento_w := null;
                                        nr_documento_w := null;
                                        c010_w.cd_convenio := null;
                                        ds_conteudo_w := null;
                                        ds_estorno_w := null;

                                        /* Carregar valores historico */

                                        c010_w.nr_atendimento := obter_atendimento_conta(c020_w.nr_interno_conta);

                                        /* Obter nome da tabela utilizada */

                                        if (c020_w.ie_corpo_item = 'C') then
                                                nm_tabela_w := 'NOTA_FISCAL_TRIB';
                                        elsif (c020_w.ie_corpo_item = 'I') then
                                                nm_tabela_w := 'NOTA_FISCAL_ITEM_TRIB';
                                        end if;

                                        /* Se situacao da nota = Estorno */

                                        if (c020_w.ie_situacao = '2') then

                                                /* Estorno | A nota gerada para abater os valores da nota original */

                                                ds_estorno_w := wheb_mensagem_pck.get_texto(682644);

                                        elsif (c020_w.ie_situacao = '3') then

                                                /* Estornada | A nota original que foi estornada*/

                                                ds_estorno_w := wheb_mensagem_pck.get_texto(682645);

                                        end if;

                                        /* Protocolo vinculado a nota ou vinculado a  */

                                        if (coalesce(c020_w.nr_seq_protocolo,0) <> 0) then

                                                nr_seq_ultimo_protocolo_lido_w := c020_w.nr_seq_protocolo;

                                        else

                                                /* Numero do protocolo em que a conta se encontra */

                                                if (c020_w.ie_situacao = '2') then

                                                        /* Para notas de estorno pegar o protocolo da conta de estorno
                                                        da conta vinculada a nota fiscal original */
                                                        select  max(x.nr_seq_protocolo)
                                                        into STRICT    nr_seq_ultimo_protocolo_lido_w
                                                        from    conta_paciente x,
                                                                conta_paciente z
                                                        where   z.nr_interno_conta = x.nr_seq_conta_origem
                                                        and     z.nr_interno_conta = c020_w.nr_interno_conta
                                                        and     x.ie_cancelamento = 'E';

                                                elsif (c020_w.ie_situacao in ('1','3')) then

                                                        /* Para notas ativas ou estornadas pega o protocolo da conta vinculada a nota */

                                                        select  max(x.nr_seq_protocolo)
                                                        into STRICT    nr_seq_ultimo_protocolo_lido_w
                                                        from    conta_paciente x
                                                        where   x.nr_interno_conta = c020_w.nr_interno_conta;

                                                end if;

                                        end if;

                                        /* Alteracoes OS 1189275 */


                                        /* Obter numero do titulo e numero da NF do titulo por protocolo ou conta */


                                        /*
                                        if      (nvl(c020_w.nr_seq_protocolo,0) <> 0) then
                                                end;
                                                select  max(a.nr_nota_fiscal),
                                                        max(a.nr_titulo)
                                                into    nr_nf_titulo_w,
                                                        nr_titulo_receber_w
                                                from    titulo_receber a
                                                where   a.nr_seq_protocolo = c020_w.nr_seq_protocolo;
                                                end;
                                        elsif   (nvl(c020_w.nr_interno_conta,0) <> 0) then
                                                end;
                                                select  max(a.nr_nota_fiscal),
                                                        max(a.nr_titulo)
                                                into    nr_nf_titulo_w,
                                                        nr_titulo_receber_w
                                                from    titulo_receber a
                                                where   a.nr_interno_conta = c020_w.nr_interno_conta;
                                                end;
                                        end if;*/


                                        /* Pega a ultima nota e o ultimo titulo  gerado para a conta paciente */

                                        select  max(a.nr_nota_fiscal),
                                                max(a.nr_titulo)
                                        into STRICT    nr_nf_titulo_w,
                                                nr_titulo_receber_w
                                        from    titulo_receber a
                                        where   a.nr_interno_conta      = c020_w.nr_interno_conta;

                                        /* Caso nao encontrar nota ou titulo, pega o ultimo titulo e/ou nota gerado para o protocolo */

                                        if      ((coalesce(nr_titulo_receber_w,'0') = '0') or (coalesce(nr_nf_titulo_w,'0') = '0')) and (coalesce(nr_seq_ultimo_protocolo_lido_w,0) <> 0) then


                                                select  coalesce(nr_nf_titulo_w,max(a.nr_nota_fiscal)),
                                                        coalesce(nr_titulo_receber_w,max(a.nr_titulo))
                                                into STRICT    nr_nf_titulo_w,
                                                        nr_titulo_receber_w
                                                from    titulo_receber a
                                                where   a.nr_seq_protocolo      = nr_seq_ultimo_protocolo_lido_w;

                                        end if;

                                        /* Obter a nota fiscal do protocolo */

                                        select  substr(max(c.nr_nota_fiscal),1,150)
                                        into STRICT    nr_nf_lote_protocolo_w
                                        from    nota_fiscal c,
                                                lote_protocolo b,
                                                protocolo_convenio a
                                        where   c.nr_seq_lote_prot      = b.nr_sequencia
                                        and     b.nr_sequencia          = a.nr_seq_lote_protocolo
                                        and     a.nr_seq_protocolo      = nr_seq_ultimo_protocolo_lido_w;

                                        nr_nf_lote_protocolo_w  := substr(nr_nf_lote_protocolo_w,1,length(nr_nf_lote_protocolo_w));

                                        /* Obter dados da conta paciente */

                                        if (coalesce(c020_w.nr_interno_conta,0) <> 0) then

                                                select  substr(obter_nome_convenio(a.cd_convenio_parametro),1,60),
                                                        a.cd_convenio_parametro,
                                                        a.dt_mesano_referencia
                                                into STRICT    c010_w.ds_convenio,
                                                        c010_w.cd_convenio,
                                                        c010_w.dt_mesano_referencia
                                                from    conta_paciente a
                                                where   a.nr_interno_conta = c020_w.nr_interno_conta;

                                        end if;

                                        /* Obter dados do protocolo */

                                        if (coalesce(nr_seq_ultimo_protocolo_lido_w,0) <> 0) then

                                                select  substr(obter_nome_convenio(a.cd_convenio),1,60),
                                                        a.cd_convenio,
                                                        a.nr_protocolo,
                                                        a.dt_entrega_convenio
                                                into STRICT    c010_w.ds_convenio,
                                                        c010_w.cd_convenio,
                                                        nr_protocolo_w,
                                                        dt_entrega_convenio_w
                                                from    protocolo_convenio a
                                                where   a.nr_seq_protocolo = nr_seq_ultimo_protocolo_lido_w;

                                                nr_documento_w := substr(nr_lote_contabil_p || ' ' || c010_w.ds_convenio || ' ' || wheb_mensagem_pck.get_texto(799410) || ' ' || c020_w.nr_nota_fiscal,1,255);

                                                if (ie_prot_ctb_rec_w = 'PI') and (coalesce(nr_seq_ultimo_protocolo_lido_w,0) <> 0) then
                                                        nr_documento_w := substr(nr_documento_w || ' ' || wheb_mensagem_pck.get_texto(799411) || ' ' || nr_seq_ultimo_protocolo_lido_w,1,255);
                                                end if;

                                                if (ie_prot_ctb_rec_w = 'PC') and (coalesce(nr_protocolo_w,'0') <> '0') then
                                                        nr_documento_w := substr(nr_documento_w || ' ' || wheb_mensagem_pck.get_texto(799411) || ' '  || nr_protocolo_w,1,255);
                                                end if;

                                        end if;

                                        /* Tratamento para data de geracao conforme parametro [3] da Geracao do lote contabil */

                                        if (ie_data_lote_w = 'N') then
                                                dt_movimento_w  := coalesce(c010_w.dt_mesano_referencia,dt_entrega_convenio_w);
                                        elsif (ie_data_lote_w = 'NE') then
                                                dt_movimento_w  := coalesce(c020_w.dt_emissao,dt_movimento_w);
                                        elsif (ie_data_lote_w = 'E') then
                                                dt_movimento_w  := coalesce(dt_entrega_convenio_w,c010_w.dt_mesano_referencia);
                                        end if;

                                        if (coalesce(dt_movimento_w::text, '') = '') then

                                                dt_movimento_w := dt_referencia_lote_w;

                                        end if;

                                        /* Obter nome pessoa fisica e pessoa do atendimento */

                                        select  max(b.nm_pessoa_fisica),
                                                substr(max(obter_nome_pf_pj(a.cd_pessoa_responsavel,null)),1,60)
                                        into STRICT    c010_w.nm_pessoa_fisica,
                                                c010_w.nm_responsavel_atend
                                        from    atendimento_paciente a,
                                                pessoa_fisica b
                                        where   a.nr_atendimento                = c010_w.nr_atendimento
                                        and     a.cd_pessoa_fisica              = b.cd_pessoa_fisica;

                                        -- nr_nf_titulo_w

                                        /* Obter codigo do agrupamento baseado na regra */

                                        if (nm_agrupador_w = 'NR_INTERNO_CONTA')   then
                                                nr_seq_agrupamento_w := c020_w.nr_interno_conta;
                                        elsif (nm_agrupador_w = 'NR_ATENDIMENTO')     then
                                                nr_seq_agrupamento_w := c010_w.nr_atendimento;
                                        elsif (nm_agrupador_w = 'NR_SEQ_PROTOCOLO')   then
                                                nr_seq_agrupamento_w := nr_seq_ultimo_protocolo_lido_w;
                                        elsif (nm_agrupador_w = 'NR_NOTA_FISCAL')     then
                                                nr_seq_agrupamento_w := somente_numero(c020_w.nr_nota_fiscal);
                                        elsif (nm_agrupador_w = 'DS_MES_ANO')         then
                                                nr_seq_agrupamento_w := dt_mesano_w;
                                        elsif (nm_agrupador_w = 'CD_CONVENIO')        then
                                                nr_seq_agrupamento_w := c010_w.cd_convenio;
                                        end if;

                                        /* Caso nao encontrar o codigo do agrupamento, utiliza por padrao o numero da conta */

                                        if (coalesce(nr_seq_agrupamento_w,0) = 0)then
                                                nr_seq_agrupamento_w := c020_w.nr_interno_conta;
                                        end if;

                                        /* Caso tenha complemento historico cadastrado monta o conteudo */

                                        if (ie_compl_hist_w = 'S') then

                                                if (coalesce(nr_seq_nota_fiscal_w, 0) != 0) then
                                                        select vl_total_nota
                                                        into STRICT vl_total_nota_w
                                                        from nota_fiscal
                                                        where nr_sequencia = nr_seq_nota_fiscal_w;
                                                end if;

                                                ds_conteudo_w   := substr(
                                                        c010_w.cd_convenio              || '#@' ||
                                                        c010_w.ds_convenio              || '#@' ||
                                                        c010_w.nr_atendimento           || '#@' ||
                                                        c010_w.nm_pessoa_fisica         || '#@' ||
                                                        c020_w.nr_interno_conta         || '#@' ||
                                                        nr_seq_ultimo_protocolo_lido_w  || '#@' ||
                                                        nr_protocolo_w                  || '#@' ||
                                                        c010_w.nr_doc_convenio          || '#@' ||
                                                        c020_w.nr_nota_fiscal           || '#@' ||
                                                        ds_titulos_conta_w              || '#@' ||
                                                        ds_titulos_prot_w               || '#@' ||
                                                        ds_mesano_referencia_w          || '#@' ||
                                                        ds_mesano_referencia_abrev_w    || '#@' ||
                                                        c020_w.nm_pessoa_nota_fiscal    || '#@' ||
                                                        ''                              || '#@' ||
                                                        ''                              || '#@' ||
                                                        c020_w.nr_nfe_imp               || '#@' ||
                                                        ''                              || '#@' ||
                                                        nr_nf_prot_conta_w              || '#@' ||
                                                        ds_estorno_w                    || '#@' ||
                                                        ''                              || '#@' ||
                                                        dt_mesano_referencia_compl_w    || '#@' ||
                                                        nr_nf_titulo_w                  || '#@' ||
                                                        nr_nf_lote_protocolo_w          || '#@' ||
                                                        nm_estabelecimento_w            || '#@' ||
                                                        c010_w.ds_primeiro_setor_atend  || '#@' ||
                                                        c010_w.nm_responsavel_atend     || '#@' ||
                                                        nm_fantasia_conv_w              || '#@' ||
                                                        ds_razao_social_conv_w          || '#@' ||
                                                        nr_titulo_receber_w             || '#@' ||
                                                        c010_w.nr_sequencia             || '#@' ||
                                                        nr_nf_prot_nota_w               || '#@' ||
                                                        c010_w.ds_categoria             || '#@' ||
                                                        c010_w.ds_plano_convenio        || '#@' ||
                                                        c010_w.ds_tipo_atendimento      || '#@' ||
                                                        vl_total_nota_w                 || '#@' ||
                                                        c010_w.nr_prontuario            || '#@' ||
                                                        c010_w.ds_classif_atendimento   || '#@' ||
                                                        cd_drg_w                        || '#@' ||
                                                        to_char(c010_w.dt_entrada,'dd/mm/yyyy hh24:mi:ss') || '#@' ||
                                                        to_char(c010_w.dt_alta,'dd/mm/yyyy hh24:mi:ss')    || '#@' ||
                                                        to_char(c010_w.dt_item,'dd/mm/yyyy hh24:mi:ss')    || '#@' ||
                                                        c010_w.ds_clinica               || '#@' ||
                                                        c020_w.cd_retencao              || '#@' ||
                                                        nm_medico_resp_atend_w          || '#@' ||
                                                        ds_espec_medico_resp_atend_w    || '#@' ||
                                                        cd_sistema_ant_mat_w            || '#@' ||
                                                        coalesce(obter_dias_internacao(c010_w.nr_atendimento),0)|| '#@' ||
                                                        obter_patient_category(c010_w.nr_atendimento) || '#@' ||
							c020_w.cd_serie_nf 				|| '#@' ||
							c020_w.nr_sequencia 			|| '#@' ||
							' ', 1,2000);
                                        end if;
                                        /*
                                        Obter doc e origem aqui se necessario*/
                                        if (philips_param_pck.get_cd_pais = 2) then
                                                ds_atributos_w  := null;

                                                ds_atributos_w  :=      'NR_SEQ_PROTOCOLO=' || nr_seq_ultimo_protocolo_lido_w || ';' ||
                                                                        'NR_SEQ_NOTA_FISCAL=' || nr_nf_prot_conta_w || ';' ||
                                                                        'NR_NFE_IMP=' || coalesce(c020_w.nr_nfe_imp, nr_nf_prot_conta_w);

                                                ctb_obter_doc_movto(    cd_tipo_lote_contabil_w,
                                                        '',
                                                        'VR',
                                                        dt_movimento_w,
                                                        null,
                                                        null,
                                                        ds_atributos_w,
                                                        nm_usuario_p,
                                                        ie_regra_w,
                                                        nr_documento_aux_w,
                                                        ie_origem_documento_w);
                                        end if;

                                        nr_sequencia_movto_w := gerar_contab_trans_financ(
                                                        c010_w.cd_estabelecimento, null, nr_lote_contabil_p, nm_usuario_p, '', 0, nr_documento_w, nr_seq_agrupamento_w, dt_movimento_w, c020_w.vl_transacao, c020_w.nr_seq_trans_rec, null, 'VL_TRIBUTO', c020_w.cd_pessoa_fisica, c020_w.cd_cgc, null, c010_w.cd_convenio, nr_documento_aux_w, null, ds_conteudo_w, null, null, null, c020_w.cd_tributo, null, null, c020_w.cd_tributo, null, null, null, null, null, null, null, nr_sequencia_movto_w, nm_tabela_w, null, null, ie_origem_documento_w, c020_w.nr_seq_tab_orig, null, 1, null, null);

                                end loop;
                                close c020;
                                end if;
                end if;

                /* Agrupar o Movimento caso todos os registros contenham a conta contabil */

                select  count(*),
                        sum(CASE WHEN coalesce(cd_conta_contabil::text, '') = '' THEN 1  ELSE 0 END )
                into STRICT    nr_reg_contab_w,
                        nr_reg_sem_conta_w
                from    w_movimento_contabil
                where   nr_lote_contabil = nr_lote_contabil_p;

                if (nr_reg_contab_w > 0) then
                        if (nr_reg_sem_conta_w = 0) then
                                if (pkg_i18n.get_user_locale = 'es_BO' AND ie_exclusao_p = 'N') then
                                        BEGIN
                                                CALL ctb_regras_contabil.ctb_gerar_cd_controle_receita(nr_lote_contabil_p, nm_usuario_p);
                                        EXCEPTION WHEN OTHERS THEN
                                                CALL ctb_gravar_log_lote(nr_lote_contabil_p, 1, SQLERRM, nm_usuario_p);
                                        END;
                                end if;

                                CALL agrupa_movimento_contabil(nr_lote_contabil_p, nm_usuario_p);
                        else
                                select  coalesce(max(nr_atendimento),0)
                                into STRICT    nr_atend_mat_sc_w
                                from    material_atend_paciente
                                where   nr_lote_contabil        = nr_lote_contabil_p
                                and     coalesce(cd_conta_contabil::text, '') = ''
                                and     coalesce(cd_motivo_exc_conta::text, '') = '';

                                if (nr_atend_mat_sc_w > 0) then

                                        select  coalesce(max(nr_sequencia),0)
                                        into STRICT    nr_sequencia_aux_w
                                        from    material_atend_paciente
                                        where   nr_atendimento = nr_atend_mat_sc_w
                                        and     nr_lote_contabil = nr_lote_contabil_p
                                        and     coalesce(cd_conta_contabil::text, '') = ''
                                        and     coalesce(cd_motivo_exc_conta::text, '') = '';

                                        if (nr_sequencia_aux_w > 0) then
                                                select  cd_material,
                                                        nr_interno_conta
                                                into STRICT    cd_material_sc_w,
                                                        nr_interno_conta_aux_w
                                                from    material_atend_paciente
                                                where   nr_sequencia = nr_sequencia_aux_w;
                                        end if;

                                        select  coalesce(max(c.nr_protocolo), nr_protocolo_w)
                                        into STRICT    nr_protocolo_w
                                        from    conta_paciente c,
                                                material_atend_paciente p
                                        where   p.nr_interno_conta      = c.nr_interno_conta
                                        and     c.nr_atendimento        = nr_atend_mat_sc_w
                                        and     p.nr_lote_contabil      = nr_lote_contabil_p
                                        and     coalesce(p.cd_conta_contabil::text, '') = ''
                                        and     coalesce(p.cd_motivo_exc_conta::text, '') = '';

                                        select  max(c.nr_seq_protocolo)
                                        into STRICT    nr_seq_ultimo_protocolo_lido_w
                                        from    conta_paciente c,
                                                material_atend_paciente p
                                        where   p.nr_interno_conta = c.nr_interno_conta
                                        and     c.nr_atendimento = nr_atend_mat_sc_w
                                        and     p.nr_lote_contabil      = nr_lote_contabil_p
                                        and     coalesce(p.cd_conta_contabil::text, '') = ''
                                        and     coalesce(p.cd_motivo_exc_conta::text, '') = '';
                                end if;

                                select  coalesce(max(nr_atendimento),0)
                                into STRICT    nr_atend_proc_sc_w
                                from    procedimento_paciente
                                where   nr_lote_contabil = nr_lote_contabil_p
                                and     coalesce(cd_conta_contabil::text, '') = ''
                                and     coalesce(cd_motivo_exc_conta::text, '') = '';

                                if (nr_atend_proc_sc_w > 0) then
                                        select  coalesce(max(cd_procedimento),0)
                                        into STRICT    cd_procedimento_sc_w
                                        from    procedimento_paciente
                                        where   nr_lote_contabil = nr_lote_contabil_p
                                        and     coalesce(cd_conta_contabil::text, '') = ''
                                        and     nr_atendimento = nr_atend_proc_sc_w
                                        and     coalesce(cd_motivo_exc_conta::text, '') = '';

                                        select  coalesce(max(c.nr_protocolo), nr_protocolo_w)
                                        into STRICT    nr_protocolo_w
                                        from    conta_paciente c,
                                                procedimento_paciente p
                                        where   c.nr_interno_conta = p.nr_interno_conta
                                        and     p.nr_lote_contabil      = nr_lote_contabil_p
                                        and     c.nr_atendimento = nr_atend_proc_sc_w
                                        and     coalesce(p.cd_conta_contabil::text, '') = ''
                                        and     coalesce(p.cd_motivo_exc_conta::text, '') = '';

                                        select  max(c.nr_seq_protocolo),
                                                max(c.nr_interno_conta)
                                        into STRICT    nr_seq_ultimo_protocolo_lido_w,
                                                nr_interno_conta_aux_w
                                        from    conta_paciente c,
                                                procedimento_paciente p
                                        where   c.nr_interno_conta = p.nr_interno_conta
                                        and     p.nr_lote_contabil      = nr_lote_contabil_p
                                        and     c.nr_atendimento = nr_atend_proc_sc_w
                                        and     coalesce(p.cd_conta_contabil::text, '') = ''
                                        and     coalesce(p.cd_motivo_exc_conta::text, '') = '';
                                end if;

                                ds_retorno_w :=
                                wheb_mensagem_pck.get_texto(496044)                                             ||chr(13)||chr(10)||
                                wheb_mensagem_pck.get_texto(496046) ||chr(58)|| nr_atend_mat_sc_w               ||chr(13)||chr(10)||
                                wheb_mensagem_pck.get_texto(168195) ||chr(58)|| cd_material_sc_w                ||chr(13)||chr(10)||
                                wheb_mensagem_pck.get_texto(496049) ||chr(58)|| nr_atend_proc_sc_w              ||chr(13)||chr(10)||
                                wheb_mensagem_pck.get_texto(352917) ||chr(58)|| cd_procedimento_sc_w            ||chr(13)||chr(10)||
                                wheb_mensagem_pck.get_texto(450426) ||chr(58)|| nr_seq_ultimo_protocolo_lido_w  ||chr(13)||chr(10)||
                                wheb_mensagem_pck.get_texto(71863)  ||chr(58)|| nr_protocolo_w                  ||chr(13)||chr(10)||
                                wheb_mensagem_pck.get_texto(496051) ||chr(58)|| ds_convenio_sem_conta_w         ||chr(13)||chr(10)||
                                wheb_mensagem_pck.get_texto(179073) ||chr(58)|| nr_interno_conta_aux_w;
                        end if;
                end if;
        else
                CALL wheb_mensagem_pck.exibir_mensagem_abort(181125,'DS_RETORNO_WW='||ds_retorno_define_lote_w);
        end if;

end if;

if (coalesce(ds_retorno_w::text, '') = '') then

        update  lote_contabil
        set     ie_situacao             = 'A'
        where   nr_lote_contabil        = nr_lote_contabil_p;

        if (ie_exclusao_p = 'S') then
                ds_retorno_w            := wheb_mensagem_pck.get_texto(165188);

                CALL ctb_gravar_log_lote(    nr_lote_contabil_p,
                                        2,
                                        '',
                                        nm_usuario_p);
        else
                ds_retorno_w    := wheb_mensagem_pck.get_texto(165187);

                CALL ctb_gravar_log_lote(    nr_lote_contabil_p,
                                        1,
                                        '',
                                        nm_usuario_p);
        end if;
        commit;
else
        rollback;
end if;
ds_retorno_p    := substr(ds_retorno_w,1,255);
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE contabiliza_receitas (( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) is cd_centro_custo_debito_w centro_custo.cd_centro_custo%type) FROM PUBLIC;

