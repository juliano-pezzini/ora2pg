-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE realizar_desfecho_pa ( nr_atendimento_p bigint, ie_desfecho_p text, ie_exige_diagnostico_p text, ie_tipo_atend_internacao_p bigint, cd_motivo_alta_p bigint, cd_setor_transf_novo_atend_p bigint, cd_setor_transf_p bigint, ie_desdobrar_conta_p text, ie_atualizar_atendimento_pac_p text, cd_medico_destino_p text, ds_erro_diagnostico_p INOUT text, ds_erro_alta_p INOUT text, ds_compl_erro_p INOUT text, ie_lib_diag_medico_p INOUT text, nr_seq_motivo_p bigint, cd_cgc_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_consist_desfecho_p INOUT text, ds_erro2_p INOUT text, ie_item_posicionar_p INOUT text, nr_atend_gerado_p INOUT bigint, ie_internar_eup_p text default 'N', ie_html_p text default 'N') AS $body$
DECLARE


qt_diagnostico_w		bigint;
ds_erro_diagnostico_w		varchar(255);
ds_erro_alta_w			varchar(255);
ds_compl_erro_w			varchar(255);
ie_medico_w			varchar(1);
ie_lib_diag_medico_w		varchar(1);
ie_consiste_evasao_w		varchar(1);
ie_permite_desfe_int_w		varchar(1);
ie_consite_motivo_alta_w 	varchar(1);
ie_consiste_alta_ps_w		varchar(1);
ie_tempo_internacao_ps_w 	varchar(1);
ie_transferencia_w		varchar(1) := 'N';
ie_consiste_transferencia_w	varchar(1);
ie_consiste_motivo_transf_w	varchar(1);
cd_setor_transf_novo_atend_w	integer;
ie_separa_proc_aihbpa 		varchar(1);
cd_convenio_w 			varchar(100);
ie_tipo_convenio_w 		bigint;
ds_erro_w			varchar(32000);
ie_item_posicionar_w		varchar(10);
ds_erro2_w			varchar(255);
cd_motivo_alta_w		smallint;
cd_motivo_alta_ww		smallint;
ds_erro_diag_w           varchar(255);
ie_escolhe_setor_internacao_w varchar(1);
ie_gera_novo_atend_w	      varchar(1);
nr_atend_gerado_w	      bigint := 0;

ds_adicional_2_w		atendimento_alta.cd_medico_dest%type;


BEGIN

ie_consite_motivo_alta_w := obter_param_usuario(935, 151, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consite_motivo_alta_w);
ie_permite_desfe_int_w := obter_param_usuario(935, 152, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_permite_desfe_int_w);
ie_consiste_alta_ps_w := obter_param_usuario(935, 178, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_alta_ps_w);
ie_consiste_transferencia_w := obter_param_usuario(935, 188, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_transferencia_w);
ie_consiste_motivo_transf_w := obter_param_usuario(935, 189, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_motivo_transf_w);
ie_separa_proc_aihbpa := obter_param_usuario(935, 192, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_separa_proc_aihbpa);
cd_motivo_alta_w := obter_param_usuario(935, 43, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_motivo_alta_w);
ie_escolhe_setor_internacao_w := obter_param_usuario(935, 44, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_escolhe_setor_internacao_w);

select	max(ie_lib_diag_medico)
into STRICT	ie_lib_diag_medico_w
from	parametro_medico
where	cd_estabelecimento = cd_estabelecimento_p;

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	begin

		cd_motivo_alta_ww := cd_motivo_alta_w;

		if (cd_motivo_alta_p IS NOT NULL AND cd_motivo_alta_p::text <> '') then
			begin
			cd_motivo_alta_w := cd_motivo_alta_p;
			end;
		end if;

		if (cd_medico_destino_p IS NOT NULL AND cd_medico_destino_p::text <> '') then
			begin
			ie_medico_w	:= obter_se_medico(cd_medico_destino_p,'M');

			if (ie_medico_w = 'N') then
				begin
				CALL wheb_mensagem_pck.exibir_mensagem_abort(191087);
				end;
			end if;
			end;
		end if;

		if (ie_consiste_alta_ps_w = 'S') and (ie_desfecho_p = 'A') then
			begin
			ie_tempo_internacao_ps_w := verifica_tempo_internacao_ps(nr_atendimento_p, null);

			if (ie_tempo_internacao_ps_w = 'S') then
				begin
				CALL wheb_mensagem_pck.exibir_mensagem_abort(191081);
				end;
			end if;
			end;
		end if;

		select	coalesce(max(ie_transferencia),'S')
		into STRICT	ie_transferencia_w
		from	motivo_alta
		where	cd_motivo_alta = cd_motivo_alta_w;

		if (ie_desfecho_p = 'A') and (cd_motivo_alta_w IS NOT NULL AND cd_motivo_alta_w::text <> '') and (ie_transferencia_w = 'S')then
			begin

			if (ie_consiste_transferencia_w = 'S') and (coalesce(cd_cgc_p::text, '') = '') then
				begin
				CALL wheb_mensagem_pck.exibir_mensagem_abort(199199);
				end;
			end if;

			if (ie_consiste_motivo_transf_w = 'S') and (coalesce(nr_seq_motivo_p::text, '') = '') then
				begin
				CALL wheb_mensagem_pck.exibir_mensagem_abort(199200);
				end;
			end if;

			end;
		end if;

		select	coalesce(max(a.ie_evasao),'N')
		into STRICT	ie_consiste_evasao_w
		from	motivo_alta a
		where 	a.cd_motivo_alta = cd_motivo_alta_w;

		if (ie_consiste_evasao_w = 'N') then

			SELECT * FROM consistir_desfecho_pa(nr_atendimento_p, nm_usuario_p, ds_erro_w, ie_item_posicionar_w, ds_erro2_w, ie_desfecho_p, ie_html_p) INTO STRICT ds_erro_w, ie_item_posicionar_w, ds_erro2_w;

			if (ie_consite_motivo_alta_w = 'S') and (ie_desfecho_p = 'A') and (coalesce(cd_motivo_alta_w::text, '') = '')then
				begin
				CALL wheb_mensagem_pck.exibir_mensagem_abort(87682);
				end;
			end if;

			if (ie_permite_desfe_int_w = 'N') and (ie_desfecho_p = 'T') then
				begin
				CALL wheb_mensagem_pck.exibir_mensagem_abort(87680);
				end;
			end if;


			if (ie_exige_diagnostico_p = 'S') and (ie_desfecho_p <> 'T') then
				begin
				if (ie_lib_diag_medico_w = 'S') then
					select	count(*)
					into STRICT	qt_diagnostico_w
					from	diagnostico_doenca
					where	nr_atendimento = nr_atendimento_p
					and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

                         ds_erro_diag_w := wheb_mensagem_pck.get_texto(361881); -- Não é possível dar o desfecho para atendimento sem diagnóstico liberado! Parâmetro[12].
				else
					select	count(*)
					into STRICT	qt_diagnostico_w
					from	diagnostico_doenca
					where	nr_atendimento = nr_atendimento_p;

                         ds_erro_diag_w := wheb_mensagem_pck.get_texto(309611); -- Não é possível dar o desfecho para atendimento sem diagnóstico! Parâmetro[12]
						 ie_item_posicionar_w := 1;
				end if;

				if (qt_diagnostico_w = 0) then
					begin
                         ds_erro_diagnostico_w    := ds_erro_diag_w;
					ds_compl_erro_w		:= wheb_mensagem_pck.get_texto(309612); -- Deseja informar o diagnóstico?
					end;
				end if;
				end;
			end if;

			if (coalesce(ds_erro_diagnostico_w::text, '') = '') and (coalesce(ds_erro2_w::text, '') = '') and (coalesce(ds_erro_w::text, '') = '') and (coalesce(ie_internar_eup_p,'N') <> 'S') then
				begin
				if (ie_desfecho_p = 'I') then
					begin
					if (cd_motivo_alta_ww > 0) then
						begin
						ds_erro_alta_w := gerar_estornar_alta(nr_atendimento_p, 'A', 0, cd_motivo_alta_ww, clock_timestamp(), nm_usuario_p, ds_erro_alta_w, nr_seq_motivo_p, cd_cgc_p, null);

						cd_setor_transf_novo_atend_w := obter_regra_setor_desfecho(nr_atendimento_p, cd_setor_transf_novo_atend_w);

						if (cd_setor_transf_novo_atend_w = 0) then
							begin
							cd_setor_transf_novo_atend_w := cd_setor_transf_novo_atend_p;
							end;
						end if;

						if (cd_setor_transf_novo_atend_w > 0) then
							begin
							CALL gerar_transf_novo_atend_pa(nr_atendimento_p, cd_setor_transf_novo_atend_w, nm_usuario_p);
							end;
						else
							begin
							if (ie_escolhe_setor_internacao_w = 'S') then
								select	coalesce(ie_gera_novo_atend,'N')
								into STRICT	ie_gera_novo_atend_w
								from	motivo_alta
								where	cd_motivo_alta = cd_motivo_alta_ww;

								if (ie_gera_novo_atend_w = 'S') then
									select	max(nr_atendimento)
									into STRICT	nr_atend_gerado_w
									from	atendimento_paciente
									where	nr_atend_alta = nr_atendimento_p;

									if (nr_atend_gerado_w > 0) and (cd_medico_destino_p IS NOT NULL AND cd_medico_destino_p::text <> '') then
										CALL assumir_paciente(nr_atend_gerado_w, cd_medico_destino_p, null, nm_usuario_p);
									end if;
								end if;
							end if;
							end;
						end if;
						end;
					end if;
					if (cd_setor_transf_p > 0) then
						begin
						CALL gerar_transf_atend_pa(nr_atendimento_p, cd_setor_transf_p, nm_usuario_p);
						end;
					end if;
					if (ie_tipo_atend_internacao_p > 0) then
						begin
						CALL alterar_tipo_atend_novo_pa(nr_atendimento_p, ie_tipo_atend_internacao_p, nm_usuario_p);
						end;
					end if;
					if (ie_desdobrar_conta_p = 'S') then
						begin
							if (ie_atualizar_atendimento_pac_p = 'S') and (ie_desfecho_p = 'I') then
								CALL atualizar_tipo_atendimento_pac(nr_atendimento_p,nm_usuario_p);
							end if;

							CALL desdobrar_conta_paciente_pa(nr_atendimento_p, nm_usuario_p);
						end;
					end if;
					end;
				end if;
				if (ie_atualizar_atendimento_pac_p = 'S') and (ie_desfecho_p = 'I') then
					begin
					CALL atualizar_tipo_atendimento_pac(nr_atendimento_p,nm_usuario_p);
					if (ie_separa_proc_aihbpa = 'S') then
						cd_convenio_w :=  obter_dados_atendimento(nr_atendimento_p, 'CC');
						ie_tipo_convenio_w := obter_tipo_convenio(coalesce((cd_convenio_w)::numeric ,0));
						if (ie_tipo_convenio_w = '3') then
							CALL sus_gerar_conta_proc_aih(nr_atendimento_p, nm_usuario_p);
						end if;
					end if;
					end;
				end if;

				if (cd_medico_destino_p IS NOT NULL AND cd_medico_destino_p::text <> '') then
					ds_adicional_2_w	:= cd_medico_destino_p;
				end if;

				--gerar_lancamento_automatico(nr_atendimento_p, null, 251, nm_usuario_p, null, null, ds_adicional_2_w, null, null, null);
				end;
			end if;

		/*else
			gerar_lancamento_automatico(nr_atendimento_p, null, 251, nm_usuario_p, null, null, null, null, null, null); */
		end if;

	end;
end if;
ds_erro_diagnostico_p	:= ds_erro_diagnostico_w;
ds_erro_alta_p		:= ds_erro_alta_w;
ds_compl_erro_p		:= ds_compl_erro_w;
ie_lib_diag_medico_p	:= ie_lib_diag_medico_w;
ds_erro_consist_desfecho_p	:= ds_erro_w;
ds_erro2_p 		:= ds_erro2_w;
ie_item_posicionar_p 	:= ie_item_posicionar_w;
nr_atend_gerado_p 	:= nr_atend_gerado_w;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE realizar_desfecho_pa ( nr_atendimento_p bigint, ie_desfecho_p text, ie_exige_diagnostico_p text, ie_tipo_atend_internacao_p bigint, cd_motivo_alta_p bigint, cd_setor_transf_novo_atend_p bigint, cd_setor_transf_p bigint, ie_desdobrar_conta_p text, ie_atualizar_atendimento_pac_p text, cd_medico_destino_p text, ds_erro_diagnostico_p INOUT text, ds_erro_alta_p INOUT text, ds_compl_erro_p INOUT text, ie_lib_diag_medico_p INOUT text, nr_seq_motivo_p bigint, cd_cgc_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_consist_desfecho_p INOUT text, ds_erro2_p INOUT text, ie_item_posicionar_p INOUT text, nr_atend_gerado_p INOUT bigint, ie_internar_eup_p text default 'N', ie_html_p text default 'N') FROM PUBLIC;

