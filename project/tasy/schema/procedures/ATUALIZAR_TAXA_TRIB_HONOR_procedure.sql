-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_taxa_trib_honor (nr_sequencia_p bigint, nr_seq_partic_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_medico_executor_p text, ie_funcao_p text, vl_honorario_p bigint, vl_participante_p bigint, vl_conta_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_setor_atendimento_p bigint, ie_tipo_atendimento_p bigint, nm_usuario_p text, ie_tabela_origem_p bigint) AS $body$
DECLARE


/* ie_tabela_origem_p   1-procedimento_paciente  2-procedimento_participante */

cd_imposto_w		integer	:= 0;
pr_imposto_w		double precision	:= 0;
nr_seq_proc_w		integer	:= 0;
dt_atualizacao_w		timestamp		:= clock_timestamp();

C01 CURSOR FOR
SELECT 	10,
		1.5

where		1 = 2

union

select 	12,
		10

where		1 = 2

union

select	11,
		CASE WHEN a.ie_conveniado='S' THEN 20  ELSE 15 END
from		medico_convenio a
where		a.cd_pessoa_fisica	= cd_medico_executor_p
and		a.cd_convenio		= cd_convenio_p
and		1 = 2

union

select	11,
		15

where not exists (select 1 	from 	medico_convenio a
		where	a.cd_pessoa_fisica	= cd_medico_executor_p
		and	a.cd_convenio		= cd_convenio_p)
and		1 = 2;



BEGIN

cd_imposto_w	:= 0;
pr_imposto_w	:= 0;

OPEN C01;
LOOP
FETCH C01 	into
		cd_imposto_w,
		pr_imposto_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	BEGIN

	/* ATUALIZAR IMPOSTO DOS HONORARIOS DA PROCEDIMENTO_PACIENTE */

	if (ie_tabela_origem_p	= 1) then
		BEGIN
		begin
		delete	from proc_paciente_valor
		where 	nr_seq_procedimento	= nr_sequencia_p
		and 		ie_tipo_valor		= cd_imposto_w;
		exception
     				when others then
				nr_seq_proc_w	:= 0;
		end;

		begin
		select 	coalesce(max(nr_sequencia),0) + 1
		into STRICT 		nr_seq_proc_w
		from 		proc_paciente_valor
		where 	nr_seq_procedimento 	= nr_sequencia_p;
		exception
     				when others then
				nr_seq_proc_w	:= 1;
		end;

		begin
		insert 	into 	proc_paciente_valor(
				NR_SEQ_PROCEDIMENTO	,
				NR_SEQUENCIA           	,
				IE_TIPO_VALOR          	,
				DT_ATUALIZACAO         	,
				NM_USUARIO             	,
				VL_PROCEDIMENTO        	,
				VL_MEDICO              	,
				VL_ANESTESISTA         	,
				VL_MATERIAIS           	,
				VL_AUXILIARES          	,
				VL_CUSTO_OPERACIONAL   	,
				CD_CONVENIO			,
				CD_CATEGORIA		,
				PR_VALOR)
		values (
				nr_sequencia_p,
				nr_seq_proc_w,
				cd_imposto_w,
				dt_atualizacao_w,
				nm_usuario_p,
				0,
				vl_honorario_p,
				0,
				0,
				0,
				0,
				cd_convenio_p,
				cd_categoria_p,
				pr_imposto_w);
		exception
     				when others then
				nr_seq_proc_w	:= 0;
		end;

		END;
	end if;

	/* ATUALIZAR IMPOSTO DOS HONORARIOS DA PROCEDIMENTO_PARTICIPANTE */

	if (ie_tabela_origem_p	= 2) then
		BEGIN
		begin
		delete	from proc_partic_valor
		where 	nr_seq_procedimento	= nr_sequencia_p
		and		nr_seq_partic		= nr_seq_partic_p
		and 		ie_tipo_valor		= cd_imposto_w;
		exception
     				when others then
				nr_seq_proc_w	:= 0;
		end;

		begin
		select 	coalesce(max(nr_sequencia),0) + 1
		into STRICT 		nr_seq_proc_w
		from 		proc_partic_valor
		where 	nr_seq_procedimento 	= nr_sequencia_p
		and		nr_seq_partic		= nr_seq_partic_p;
		exception
     				when others then
				nr_seq_proc_w	:= 1;
		end;

		begin
		insert 	into 	proc_partic_valor(
				NR_SEQ_PROCEDIMENTO    ,
				NR_SEQ_PARTIC          ,
				NR_SEQUENCIA           ,
				IE_TIPO_VALOR          ,
				DT_ATUALIZACAO         ,
				NM_USUARIO             ,
				VL_PARTICIPANTE        ,
				VL_CONTA               ,
				PR_VALOR)
		values (
				nr_sequencia_p,
				nr_seq_partic_p,
				nr_seq_proc_w,
				cd_imposto_w,
				dt_atualizacao_w,
				nm_usuario_p,
				vl_participante_p,
				vl_conta_p,
				pr_imposto_w);
		exception
     				when others then
				nr_seq_proc_w	:= 0;
		end;

		END;
	end if;

	END;
END LOOP;
CLOSE C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_taxa_trib_honor (nr_sequencia_p bigint, nr_seq_partic_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_medico_executor_p text, ie_funcao_p text, vl_honorario_p bigint, vl_participante_p bigint, vl_conta_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_setor_atendimento_p bigint, ie_tipo_atendimento_p bigint, nm_usuario_p text, ie_tabela_origem_p bigint) FROM PUBLIC;

