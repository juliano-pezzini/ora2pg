-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE completar_registros_agenda (cd_agenda_p bigint, ie_dia_semama_p bigint, hora_inicial_p timestamp, hora_final_p timestamp, nr_minutos_duracao_p bigint, nm_usuario_p text, nr_seq_schedule_cycle_p bigint default null) AS $body$
DECLARE


dt_inicio_vigencia_w	timestamp;
dt_final_vigencia_w	timestamp;
hora_inicial_ww		timestamp;
hr_inicial_w		timestamp;
hr_final_w		timestamp;
hora_final_ww		timestamp;

c01 CURSOR FOR
	SELECT	to_date('30/12/1899 ' ||to_char(hr_inicial,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss'),
		to_date('30/12/1899 ' ||to_char(hr_final,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')
	from	agenda_horario
	where	cd_agenda 		= cd_agenda_p
	and	dt_dia_semana 		= ie_dia_semama_p
	--and	(trunc(dt_inicio_vigencia) <= trunc(sysdate) or (dt_inicio_vigencia is null))
	and	((coalesce(dt_final_vigencia::text, '') = '') or (trunc(dt_final_vigencia) >= trunc(clock_timestamp())))
	order by hr_inicial;


BEGIN

if (coalesce(cd_agenda_p,0) > 0) then
	hora_inicial_ww	:= to_date('30/12/1899 ' ||to_char(hora_inicial_p,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
	hora_final_ww	:= to_date('30/12/1899 ' ||to_char(hora_final_p,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');


	select	max(dt_inicio_vigencia),
		max(dt_final_vigencia)
	into STRICT	dt_inicio_vigencia_w,
		dt_final_vigencia_w
	from	agenda_horario
	where	cd_agenda 		= cd_agenda_p
	and	dt_dia_semana 		= ie_dia_semama_p
	and	dt_inicio_vigencia 	= (	SELECT	min(dt_inicio_vigencia)
						from	agenda_horario
						where	cd_agenda 	= cd_agenda_p
						and	dt_dia_semana 	= ie_dia_semama_p
						and	((coalesce(dt_final_vigencia::text, '') = '') or (dt_final_vigencia > clock_timestamp())));

	open c01;
	Loop
	Fetch c01 into
		hr_inicial_w,
		hr_final_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		if (hora_inicial_ww < hr_inicial_w) then
			insert	into agenda_horario(	cd_agenda,
					dt_dia_semana,
					hr_inicial,
					hr_final,
					nr_minuto_intervalo,
					nm_usuario,
					dt_atualizacao,
					nr_sequencia,
					dt_inicio_vigencia,
					dt_final_vigencia,
					nr_seq_schedule_cycle)
			values (	cd_agenda_p,
					ie_dia_semama_p,
					hora_inicial_ww,
					hr_inicial_w,
					nr_minutos_duracao_p,
					nm_usuario_p,
					clock_timestamp(),
					nextval('agenda_horario_seq'),
					dt_inicio_vigencia_w,
					dt_final_vigencia_w,
					nr_seq_schedule_cycle_p);
			hora_inicial_ww := hr_final_w;
			commit;
		else
			hora_inicial_ww := hr_final_w;
		end if;
	end loop;
	Close c01;
	if (hora_inicial_ww < hora_final_ww) then
		insert	into agenda_horario(	cd_agenda,
					dt_dia_semana,
					hr_inicial,
					hr_final,
					nr_minuto_intervalo,
					nm_usuario,
					dt_atualizacao,
					nr_sequencia,
					dt_inicio_vigencia,
					dt_final_vigencia,
					nr_seq_schedule_cycle)
			values (	cd_agenda_p,
					ie_dia_semama_p,
					hora_inicial_ww,
					hora_final_ww,
					nr_minutos_duracao_p,
					nm_usuario_p,
					clock_timestamp(),
					nextval('agenda_horario_seq'),
					dt_inicio_vigencia_w,
					dt_final_vigencia_w,
					nr_seq_schedule_cycle_p);
		commit;
	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE completar_registros_agenda (cd_agenda_p bigint, ie_dia_semama_p bigint, hora_inicial_p timestamp, hora_final_p timestamp, nr_minutos_duracao_p bigint, nm_usuario_p text, nr_seq_schedule_cycle_p bigint default null) FROM PUBLIC;

