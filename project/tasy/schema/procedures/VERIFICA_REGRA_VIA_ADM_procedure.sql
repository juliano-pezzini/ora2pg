-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE verifica_regra_via_adm ( nr_prescricao_p bigint, ds_mensaguem_p INOUT text) AS $body$
DECLARE


cd_estabelecimento_w	smallint;
qt_regras_w		bigint;
qt_limite_w		integer;
ds_mensagem_w		varchar(255);
ds_horarios_w		varchar(2000);
qt_dose_w		double precision;
nr_sequencia_w		bigint;
k			integer;
ds_horario_w		varchar(10);
ds_retorno_w		varchar(5000);
ds_mensagem_aux_w	varchar(1000) := ' ';

c01 CURSOR FOR
SELECT	a.qt_limite,
	a.ds_mensagem,
	padroniza_horario(b.ds_horarios),
	b.qt_dose,
	a.nr_sequencia
from	prescr_material b,
	regra_via_horario a
where	a.ie_via_aplicacao	= b.ie_via_aplicacao
and	b.nr_prescricao		= nr_prescricao_p
and	b.cd_unidade_medida_dose in (	select	c.cd_unidade_medida
	   				from	regra_via_hor_unid_med c
					where	a.nr_sequencia = c.nr_seq_regra);

c02 CURSOR FOR
SELECT	sum(qt_dose),
	qt_max_regra,
	ds_horario,
	ds_mensagem
from	w_regra_via_adm
group by qt_max_regra,
	ds_horario,
	ds_mensagem
order by ds_mensagem;

BEGIN

select	max(coalesce(cd_estabelecimento,1))
into STRICT	cd_estabelecimento_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

select	count(*)
into STRICT	qt_regras_w
from	regra_via_horario
where	cd_estabelecimento	= cd_estabelecimento_w;

delete FROM w_regra_via_adm;
commit;

if (qt_regras_w > 0) then
	open	c01;
	loop
	fetch	c01 into
			qt_limite_w,
			ds_mensagem_w,
			ds_horarios_w,
			qt_dose_w,
			nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		if (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
			begin
			while	(ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') LOOP
				begin
				select position(' ' in ds_horarios_w) into STRICT k;
				if (k > 1) and ((substr(ds_horarios_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_w, 1, k -1))::text <> '')) then
					ds_horario_w		:= substr(ds_horarios_w, 1, k-1);
					ds_horario_w		:= replace(ds_horario_w, ' ','');
					ds_horarios_w		:= substr(ds_horarios_w, k + 1, 2000);
				elsif (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
					ds_horario_w 		:= replace(ds_horarios_w,' ','');
					ds_horarios_w		:= '';
				end if;

				insert into w_regra_via_adm(
					nr_seq_regra,
					qt_max_regra,
					ds_horario,
					qt_dose,
					ds_mensagem)
				values (	nr_sequencia_w,
					qt_limite_w,
					ds_horario_w,
					qt_dose_w,
					ds_mensagem_w);
				end;
			end loop;
			end;
		end if;
		end;
	end loop;
	close c01;
	commit;
	open	c02;
	loop
	fetch	c02 into
			qt_dose_w,
			qt_limite_w,
			ds_horarios_w,
			ds_mensagem_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		if (qt_dose_w > qt_limite_w) then
			if (ds_mensagem_aux_w <> ds_mensagem_w) then
				ds_retorno_w := ds_retorno_w ||' '||ds_mensagem_w;
			end if;
			ds_mensagem_aux_w	:= ds_mensagem_w;
			ds_retorno_w		:= ds_retorno_w ||' '||ds_horarios_w;
		end if;
		end;
	end loop;
	close c02;
end if;

ds_mensaguem_p	:= ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE verifica_regra_via_adm ( nr_prescricao_p bigint, ds_mensaguem_p INOUT text) FROM PUBLIC;

