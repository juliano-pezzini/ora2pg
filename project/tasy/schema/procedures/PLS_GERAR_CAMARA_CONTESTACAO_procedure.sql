-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_camara_contestacao ( nr_seq_protocolo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

				
-- ROTINA NÃO É MAIS UTILIZADA
				
cd_unimed_origem_w		bigint;
cd_unimed_destino_w		bigint;
dt_geracao_w			timestamp;
nr_fatura_w			ptu_fatura.nr_fatura%type;
dt_vencimento_fatura_w		timestamp;
vl_total_fatura_w		double precision;
nr_versao_transacao_w		bigint;
nr_seq_contestacao_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_conta_proc_w		bigint;
ie_tipo_tabela_w		varchar(1);
dt_geracao_registro_w		timestamp;
obter_se_poss_gerar_w		varchar(1);
ie_tipo_arquivo_w		bigint;
ie_classif_cobranca_a500_w	varchar(1);
nr_nota_credito_debito_a500_w	varchar(30);
dt_vencimento_ndc_a500_w	timestamp;
vl_total_ndc_a500_w		double precision;
nr_titulo_w			bigint;
dt_venc_fatura_original_w	timestamp;
				
C01 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_conta a
	where	a.nr_seq_protocolo = nr_seq_protocolo_p	
	order by 1;
	
C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		'P'
	from	pls_conta_proc	a
	where	a.nr_seq_conta	= nr_seq_conta_w
	and	a.ie_status	not in ('D','M')
	
union

	SELECT	b.nr_sequencia,
		'M'
	from	pls_conta_mat	b
	where	b.nr_seq_conta	= nr_seq_conta_w
	and	b.ie_status	not in ('D','M')	
	order by 1;


BEGIN

/*Obter se ainda é possivel gerar o A500 segundo as regra de qt max de dias*/

select	pls_obter_se_qt_dias_cont(nr_seq_protocolo_p)
into STRICT	obter_se_poss_gerar_w
;

if (obter_se_poss_gerar_w = 'N') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(183028);
end if;

select	cd_unimed_destino,
	cd_unimed_origem,
	dt_geracao,
	nr_fatura,
	dt_vencimento_fatura,
	vl_total_fatura,
	'03',
	nextval('ptu_camara_contestacao_seq'),
	dt_atualizacao_nrec,
	1,
	ie_classif_cobranca,
	nr_nota_credito_debito,
	dt_vencimento_ndc,
	vl_total_ndc,
	nr_titulo,
	dt_venc_fatura_original
into STRICT	cd_unimed_origem_w,
	cd_unimed_destino_w,
	dt_geracao_w,
	nr_fatura_w,
	dt_vencimento_fatura_w,
	vl_total_fatura_w,
	nr_versao_transacao_w,
	nr_seq_contestacao_w,
	dt_geracao_registro_w,
	ie_tipo_arquivo_w,
	ie_classif_cobranca_a500_w,
	nr_nota_credito_debito_a500_w,
	dt_vencimento_ndc_a500_w,
	vl_total_ndc_a500_w,
	nr_titulo_w,
	dt_venc_fatura_original_w
from	ptu_fatura
where	nr_seq_protocolo = nr_seq_protocolo_p;

if (coalesce(dt_venc_fatura_original_w::text, '') = '') then
	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
		select	max(dt_vencimento_original)
		into STRICT	dt_vencimento_fatura_w
		from	titulo_pagar
		where	nr_titulo = nr_titulo_w;
	end if;
else
	dt_vencimento_fatura_w := dt_venc_fatura_original_w;
end if;

insert into ptu_camara_contestacao(nr_sequencia, dt_atualizacao, nm_usuario,
	dt_atualizacao_nrec, nm_usuario_nrec, cd_unimed_destino,
	cd_unimed_origem, dt_geracao, nr_fatura,
	vl_total_fatura, nr_versao_transacao, cd_estabelecimento,
	dt_venc_fatura, cd_unimed_credora, ie_tipo_arquivo,
	ie_operacao,ie_classif_cobranca_a500,nr_nota_credito_debito_a500,
	dt_vencimento_ndc_a500,vl_total_ndc_a500,vl_total_contest_ndc,
	vl_total_pago_ndc,nr_documento2,dt_venc_doc2)
values (nr_seq_contestacao_w, clock_timestamp(), nm_usuario_p,
	clock_timestamp(), nm_usuario_p, cd_unimed_destino_w,
	cd_unimed_origem_w, dt_geracao_w, nr_fatura_w,
	vl_total_fatura_w, nr_versao_transacao_w, cd_estabelecimento_p,
	dt_vencimento_fatura_w, cd_unimed_origem_w, ie_tipo_arquivo_w,
	'E',ie_classif_cobranca_a500_w,nr_nota_credito_debito_a500_w,
	dt_vencimento_ndc_a500_w,vl_total_ndc_a500_w,0,
	0,null,null);	

open C01;
loop
fetch C01 into	
	nr_seq_conta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	open C02;
	loop
	fetch C02 into	
		nr_seq_conta_proc_w,
		ie_tipo_tabela_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin			
		
		begin
		CALL pls_gerar_questionamento(nr_seq_conta_proc_w, nr_seq_conta_w, nr_seq_contestacao_w, nr_seq_protocolo_p,
					ie_tipo_tabela_w, nm_usuario_p, cd_estabelecimento_p);		
		exception
		when others then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(183030,'NR_SEQ_CONTA=' || nr_seq_conta_w||';'|| 'NR_SEQ_CONTA_PROC=' || nr_seq_conta_proc_w||';'||
								'DS_ERRO=' || substr(sqlerrm || chr(13) || dbms_utility.format_error_backtrace, 1, 4000));
		end;		
		end;
	end loop;
	close C02;
	
	end;
end loop;
close C01;

CALL pls_atualiza_valores_contes(nr_seq_contestacao_w, cd_estabelecimento_p, nm_usuario_p, 'S');
	
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_camara_contestacao ( nr_seq_protocolo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

