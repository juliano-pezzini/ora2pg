-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gravar_movto_funcionario ( cd_pessoa_fisica_p text, nm_usuario_p text, ie_acao_p bigint, dt_referencia_p timestamp, cd_estabelecimento_p bigint, cd_cargo_p bigint, cd_cargo_ant_p bigint, cd_setor_atendimento_p bigint, cd_setor_ant_p bigint, ds_observacao_p text, nm_usuario_atual_p text, ie_gerar_cargo_perfil_p text, ie_consiste_usuario_p text, ie_apagar_inf_demitir_p text) AS $body$
DECLARE


/*	IE_ACAO_P

1	- Gerar demissão
2	- Trocar setor
3	- Trocar cargo
4	- Re-admitir

*/
ds_observacao_w			varchar(255);
dt_referencia_w			timestamp;
ie_tipo_evolucao_w			varchar(3);
nr_seq_classif_w			bigint;
qt_medico_w			bigint;
ie_medico_w			varchar(1);
cd_cargo_w			bigint;
nr_seq_perfil_w			bigint;
cd_cargo_ww			bigint;
cd_setor_atendimento_w		bigint;
cd_setor_atendimento_ww		bigint;
qt_usuario_w			bigint;
ie_gerar_cargo_perfil_w		varchar(10);
qt_reg_loc_trab_w		bigint;
dt_admissao_hosp_w		timestamp;
ie_ativa_funcionario_w		varchar(1);
cd_cbo_w			integer;
cd_perfil_ativo_w		perfil.cd_perfil%type	:= obter_perfil_ativo;
ie_limpa_dados_usu_w		varchar(1);
qt_setor_w			bigint;


BEGIN
ds_observacao_w		:= coalesce(substr(ds_observacao_p,1,255),'');
dt_referencia_w		:= coalesce(trunc(dt_referencia_p), clock_timestamp());

select	max(cd_cargo),
	max(dt_admissao_hosp)
into STRICT	cd_cargo_ww,
	dt_admissao_hosp_w
from	pessoa_fisica
where	cd_pessoa_fisica	= cd_pessoa_fisica_p;

select	max(cd_setor_atendimento)
into STRICT	cd_setor_atendimento_ww
from	usuario
where	upper(nm_usuario)	= upper(nm_usuario_atual_p);

if (coalesce(cd_cargo_p,0) <= 0) then
	cd_cargo_w	:= cd_cargo_ww;
else
	cd_cargo_w	:= cd_cargo_p;
end if;

if (coalesce(cd_setor_atendimento_p,0)	<= 0)then
	cd_setor_atendimento_w	:=  cd_setor_atendimento_ww;

else
	cd_setor_atendimento_w	:= cd_setor_atendimento_p;
end if;


if (ie_consiste_usuario_p = 'S' and coalesce(nm_usuario_atual_p::text, '') = '') then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(186208);
end if;

ie_gerar_cargo_perfil_w := obter_param_usuario(230, 10, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_p, ie_gerar_cargo_perfil_w);

ie_limpa_dados_usu_w := obter_param_usuario(6001, 161, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_p, ie_limpa_dados_usu_w);

if (ie_acao_p = 1) then	/* demitir funcionário	*/
	begin
	if (ie_limpa_dados_usu_w = 'S') then
		begin
		delete	from usuario_setor
		where	nm_usuario_param	= nm_usuario_atual_p;

		delete	from usuario_perfil
		where	nm_usuario		= nm_usuario_atual_p;
		end;
	end if;

	if (ie_apagar_inf_demitir_p = 'S') then	
		update	pessoa_fisica
		set	dt_demissao_hosp	= dt_referencia_w,
			ie_funcionario		= 'N',
			cd_cargo		 = NULL,
			cd_funcionario		 = NULL,
			cd_sistema_ant		 = NULL,
			dt_admissao_hosp	 = NULL,
			nr_seq_conselho		 = NULL,
			ds_codigo_prof		 = NULL,
			cd_cbo_sus		 = NULL,
			dt_primeira_admissao	= dt_admissao_hosp_w
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p;
	else
		update	pessoa_fisica
		  set	dt_demissao_hosp	= dt_referencia_w,
			ie_funcionario		= 'N',
			dt_primeira_admissao	= dt_admissao_hosp_w
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p;	
	end if;

	update	usuario
	set	ie_situacao		= 'I',
		dt_inativacao		= clock_timestamp(),
		cd_setor_atendimento	 = NULL,
		ie_tipo_evolucao	 = NULL,
		nr_seq_classif		 = NULL
	where	nm_usuario		= nm_usuario_atual_p
	and	cd_pessoa_fisica	= cd_pessoa_fisica_p;
	

	update	regra_pf_loc_patologia
	set	ie_situacao		= 'I'
	where	cd_pessoa_fisica	= cd_pessoa_fisica_p;

	select	count(*)
	into STRICT	qt_usuario_w
	from 	usuario 
	where 	nm_usuario	= nm_usuario_atual_p;
	
	if (qt_usuario_w > 0) then -- afstringari 201032 11/03/2010
		--lhalves OS 196458 19/02/2010
		insert into usuario_hist(
			nr_sequencia,
			nm_usuario,
			nm_usuario_ref,
			ds_alteracao,
			dt_atualizacao)
		values (nextval('usuario_hist_seq'),
			nm_usuario_p,
			nm_usuario_atual_p,
			coalesce(substr(ds_observacao_p,1,2000),wheb_mensagem_pck.get_texto(338711)),
			clock_timestamp());
	end if;

	if (nm_usuario_atual_p IS NOT NULL AND nm_usuario_atual_p::text <> '') then
		insert into usuario_setor_cargo(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_referencia,
			ds_observacao,
			nm_usuario_param)
		SELECT	nextval('usuario_setor_cargo_seq'),
			clock_timestamp(),
			nm_usuario_p,
			dt_referencia_w,
			substr(ds_observacao_w,1,255),
			nm_usuario_atual_p
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p;
	end if;
	end;
elsif (ie_acao_p = 2) then	/* trocar setor funcionário */
	begin
	select 	count(*)
	into STRICT	qt_reg_loc_trab_w
	from	pessoa_fisica_loc_trab
	where	cd_pessoa_fisica	= cd_pessoa_fisica_p;
	
	if (qt_reg_loc_trab_w > 0) then
		update	pessoa_fisica_loc_trab
		set	cd_setor_atendimento	= cd_setor_atendimento_p
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p;
	end if;
	
	if (nm_usuario_atual_p IS NOT NULL AND nm_usuario_atual_p::text <> '') then /* Elton OS214374 - Se a pessoa não possuir usuário, troca o setor da pasta "Local de trabalho"     */
		insert into usuario_setor_cargo(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_referencia,
			ds_observacao,
			nm_usuario_param,
			cd_setor_atendimento)
		SELECT	nextval('usuario_setor_cargo_seq'),
			clock_timestamp(),
			nm_usuario_p,
			dt_referencia_w,
			substr(ds_observacao_w,1,255),
			nm_usuario_atual_p,
			CASE WHEN cd_setor_ant_p=0 THEN null  ELSE cd_setor_ant_p END
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p;

		update	usuario
		set	cd_setor_atendimento	= cd_setor_atendimento_p
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p
		and	cd_estabelecimento	= cd_estabelecimento_p;
		
		if (coalesce(ie_gerar_cargo_perfil_w,'N') = 'S') then
			CALL gerar_cargo_perfil_setor(	cd_cargo_w,
							cd_pessoa_fisica_p,
							'',
							cd_setor_atendimento_w,
							nm_usuario_p,
							nm_usuario_atual_p,
							cd_estabelecimento_p);
		end if;
	end if;
	end;
elsif (ie_acao_p = 3) then	/* trocar cargo funcionário */
	begin	
	select	coalesce(ie_medico,'N')
	into STRICT	ie_medico_w
	from	cargo
	where	cd_cargo	= cd_cargo_p;
	
	select	count(*)
	into STRICT	qt_medico_w
	from	medico
	where	cd_pessoa_fisica	= cd_pessoa_fisica_p;

	if (ie_medico_w = 'S') and (qt_medico_w = 0) then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(186207);
	end if;

	if (nm_usuario_atual_p IS NOT NULL AND nm_usuario_atual_p::text <> '') or (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
		insert into usuario_setor_cargo(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_referencia,
			ds_observacao,
			nm_usuario_param,
			cd_cargo,
			cd_pessoa_fisica)
		SELECT	nextval('usuario_setor_cargo_seq'),
			clock_timestamp(),
			nm_usuario_p,
			dt_referencia_w,
			substr(ds_observacao_w,1,255),
			nm_usuario_atual_p,
			cd_cargo_ant_p,
			cd_pessoa_fisica
		from	pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p;
	end if;
	
	/* afstringari OS161967 */

	select	max(nr_seq_perfil),
		max(cd_cbo_sus)
	into STRICT	nr_seq_perfil_w,
		cd_cbo_w
	from	cargo
	where	cd_cargo	= cd_cargo_p;
	
	update	pessoa_fisica
	set	cd_cargo 		= cd_cargo_p,
		nr_seq_perfil		= nr_seq_perfil_w, /* afstringari OS161967 */
		cd_cbo_sus		= cd_cbo_w	
	where	cd_pessoa_fisica	= cd_pessoa_fisica_p;

	select	ie_tipo_evolucao,
		nr_seq_classif
	into STRICT	ie_tipo_evolucao_w,
		nr_seq_classif_w
	from	cargo
	where	cd_cargo		= cd_cargo_p;

	update	usuario
	set	ie_tipo_evolucao	= coalesce(ie_tipo_evolucao_w,ie_tipo_evolucao),
		nr_seq_classif		= nr_seq_classif_w
	where	nm_usuario		= nm_usuario_atual_p
	and	cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	cd_estabelecimento	= cd_estabelecimento_p;
	end;

	if (coalesce(ie_gerar_cargo_perfil_w,'N') = 'S') and (nm_usuario_atual_p IS NOT NULL AND nm_usuario_atual_p::text <> '') then
		CALL gerar_cargo_perfil_setor(	cd_cargo_w,
						cd_pessoa_fisica_p,
						'',
						cd_setor_atendimento_w,
						nm_usuario_p,
						nm_usuario_atual_p,
						cd_estabelecimento_p);
						
		select	count(1)
		into STRICT	qt_setor_w
		from	cargo_setor
		where	cd_cargo		= cd_cargo_w
		and	cd_setor_atendimento	= cd_setor_atendimento_w  LIMIT 1;
		
		if (qt_setor_w = 0) then
			update	usuario
			set	cd_setor_atendimento	 = NULL
			where	nm_usuario		= nm_usuario_atual_p
			and	cd_pessoa_fisica	= cd_pessoa_fisica_p
			and	cd_estabelecimento	= cd_estabelecimento_p;
			
			delete from usuario_setor_cargo
			where	nm_usuario		= nm_usuario_atual_p
			and	cd_setor_atendimento	= cd_setor_atendimento_w;
		end if;
	end if;
elsif (ie_acao_p = 4) then	/* Re-admitir funcionário - ahoffelder - OS 191295 - 26/01/2010 */
	update	pessoa_fisica
	set	dt_demissao_hosp	 = NULL,
		dt_admissao_hosp	= clock_timestamp(),
		ie_funcionario		= 'S',
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_atual_p
	where	cd_pessoa_fisica	= cd_pessoa_fisica_p;

	ie_ativa_funcionario_w	:= Obter_Valor_Param_Usuario(230,48,Obter_Perfil_Ativo,nm_usuario_p,0);	
	
	if (ie_ativa_funcionario_w = 'S') then
		update	usuario
		set	ie_situacao		= 'A',
			dt_inativacao		 = NULL,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario_atual	= nm_usuario_atual_p
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p;
	end if;
	
	update	regra_pf_loc_patologia
	set	ie_situacao = 'A'
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_movto_funcionario ( cd_pessoa_fisica_p text, nm_usuario_p text, ie_acao_p bigint, dt_referencia_p timestamp, cd_estabelecimento_p bigint, cd_cargo_p bigint, cd_cargo_ant_p bigint, cd_setor_atendimento_p bigint, cd_setor_ant_p bigint, ds_observacao_p text, nm_usuario_atual_p text, ie_gerar_cargo_perfil_p text, ie_consiste_usuario_p text, ie_apagar_inf_demitir_p text) FROM PUBLIC;

