-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_evolucao (cd_evolucao_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_atendimento_w	bigint;
cd_medico_w		varchar(10);
ie_medico_w		varchar(01);
ie_regra_libera_evolucao_w 	varchar(1);
ie_gera_lancamento_w		varchar(1);
ie_evolucao_clinica_w		varchar(3);
cd_estabelecimento_w		bigint;
nr_seq_evento_w			bigint;
cd_tipo_evolucao_w		varchar(3);
cd_pessoa_fisica_w		varchar(10);
dt_evolucao_w			timestamp;
qt_reg_w			bigint;
qt_idade_w			bigint;
cd_especialidade_w		bigint;
ie_exige_pessoa_parecer_w	varchar(3);
ie_alta_medica_w		varchar(10);
dt_alta_medica_w		timestamp;
CD_MOTIVO_ALTA_MEDICA_w		bigint;
nr_seq_classificacao_w		bigint;
nr_seq_grupo_w			bigint;
ie_tipo_vinculo_w		varchar(3);
cd_unidade_w			varchar(100);
ie_atualiza_prof_w		varchar(5);
ds_tipo_evol_usuario_w		varchar(5);
ie_obrigar_pessoa_parecer_w	varchar(5);
cd_medico_parecer_w			varchar(10);		
nr_seq_agenda_w				evolucao_paciente_agenda.nr_seq_agenda%type;
cd_tipo_agenda_w			bigint;
cd_especialidade_medico_w EVOLUCAO_PACIENTE.CD_ESPECIALIDADE_MEDICO%TYPE;

C01 CURSOR FOR
	SELECT	nr_seq_evento
	from	regra_envio_sms
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	ie_evento_disp = 'LEV'
	and (coalesce(cd_tipo_evolucao,ie_evolucao_clinica_w)	= ie_evolucao_clinica_w)
	and	qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999)	
	and	coalesce(ie_situacao,'A') = 'A';

C02 CURSOR FOR
	SELECT	nr_seq_grupo,
		ie_tipo_vinculo
	from	tipo_evolucao_pac_grupo
	where	cd_tipo_evolucao = ie_evolucao_clinica_w;
	

BEGIN
cd_estabelecimento_w		:= wheb_usuario_pck.get_cd_estabelecimento;

select	max(nr_atendimento),
	max(cd_medico),
	max(cd_pessoa_fisica),
	max(dt_evolucao),
	max(cd_medico_parecer)
into STRICT	nr_atendimento_w,
	cd_medico_w,
	cd_pessoa_fisica_w,
	dt_evolucao_w,
	cd_medico_parecer_w
from	evolucao_paciente
where	cd_evolucao 	= cd_evolucao_p;
qt_idade_w	:= coalesce(obter_idade_pf(cd_pessoa_fisica_w,clock_timestamp(),'A'),0);


if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then


	select	max(cd_unidade)
	into STRICT	cd_unidade_w
	from	resumo_atendimento_paciente_v
	where	nr_atendimento	= nr_atendimento_w;
		
end if;


select 	max(ie_evolucao_clinica)
into STRICT	ie_evolucao_clinica_w
from 	evolucao_paciente
where 	cd_evolucao = cd_evolucao_p;

if (ie_evolucao_clinica_w = 'P') then --Pedido de parecer
	ie_exige_pessoa_parecer_w	:= Obter_Valor_Param_Usuario(281, 715, Obter_perfil_Ativo, nm_usuario_p, cd_estabelecimento_w);
	
	select	cd_medico_parecer,
			cd_especialidade
		into STRICT	cd_pessoa_fisica_w,
			cd_especialidade_w
		from	evolucao_paciente
		where	cd_evolucao 	= cd_evolucao_p;
	if (ie_exige_pessoa_parecer_w = 'S') then
		
		if (coalesce(cd_pessoa_fisica_w::text, '') = '') and (coalesce(cd_especialidade_w::text, '') = '') then
			select	count(*)
			into STRICT	qt_reg_w
			from	pessoa_destino_evolucao
			where	cd_evolucao	= cd_evolucao_p;
			
			if (qt_reg_w = 0) then
				--e necessario informar a especialidade, pessoa ou grupo para liberar o Pedido de parecer (Parametro 715).
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(264640);
			end if;
		end if;
		
	end if;
	
	/*  OS 539146 - Niumar Cachoeira
	/* if	(cd_especialidade_w	is not null) then
		select	max(nr_seq_classificacao)
		into	nr_seq_classificacao_w
		from	REGRA_CLASSIF_PARECER
		where	cd_especialidade_medico = cd_especialidade_w;
		
		if	(nr_seq_classificacao_w	is not null) then
			update	atendimento_paciente
			set	nr_seq_classificacao	= nr_seq_classificacao_w
			where	nr_atendimento	= nr_atendimento_w;
		end if;
	end if; */
end if;

select 	coalesce(max(ie_obrigar_pessoa_parecer),'N')
into STRICT	ie_obrigar_pessoa_parecer_w
from 	tipo_evolucao 
where 	CD_TIPO_EVOLUCAO = ie_evolucao_clinica_w;

if (coalesce(cd_medico_parecer_w::text, '') = '') and (ie_obrigar_pessoa_parecer_w = 'S') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(256268);
end if;

Update	evolucao_paciente
set 	dt_liberacao 	= clock_timestamp(),
	nm_usuario	= nm_usuario_p,
	dt_atualizacao	= clock_timestamp(),
	CD_UNIDADE	= coalesce(CD_UNIDADE,cd_unidade_w)
where 	cd_evolucao 	= cd_evolucao_p;

select 	max(IE_ATUALIZAR_PROF)
into STRICT	ie_atualiza_prof_w
from 	tipo_evolucao 
where 	CD_TIPO_EVOLUCAO = ie_evolucao_clinica_w;

ds_tipo_evol_usuario_w	:= obter_cod_usuario_evol_atend(nm_usuario_p);

if (ie_atualiza_prof_w = 'S') and (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and (ds_tipo_evol_usuario_w IS NOT NULL AND ds_tipo_evol_usuario_w::text <> '') then
	CALL atualizar_atend_profissional(nr_atendimento_w, cd_medico_w, ds_tipo_evol_usuario_w, nm_usuario_p);
end if;

select 	coalesce(max('S'),'N')
into STRICT	ie_medico_w
from	Medico
where 	cd_pessoa_fisica	= cd_medico_w;


select	max(ie_alta_medica),
	max(CD_MOTIVO_ALTA_MEDICA)
into STRICT	ie_alta_medica_w,
	CD_MOTIVO_ALTA_MEDICA_w
from	tipo_evolucao
where	CD_TIPO_EVOLUCAO	= ie_evolucao_clinica_w;


select 	coalesce(max(ie_regra_libera_evolucao),'M')
into STRICT	ie_regra_libera_evolucao_w
from 	parametro_faturamento
where 	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

if (coalesce(ie_evolucao_clinica_w,'0') <> '0') then
	select 	coalesce(max(ie_gera_lancto_auto),'N')
	into STRICT	ie_gera_lancamento_w
	from 	tipo_evolucao
	where 	cd_tipo_evolucao = ie_evolucao_clinica_w;
else
	ie_gera_lancamento_w:= 'N';
end if;




if	((ie_regra_libera_evolucao_w = 'M' AND ie_medico_w = 'S') or
	 (ie_regra_libera_evolucao_w = 'R' AND ie_gera_lancamento_w = 'S')) then	

  CALL gerar_lancamento_automatico(nr_atendimento_w, null, 123, 
		nm_usuario_p, cd_evolucao_p, cd_medico_w, null,null,null,null);
end if;

begin
	select 	max(nr_seq_agenda),
			max(cd_tipo_agenda)
	into STRICT	nr_seq_agenda_w,
			cd_tipo_agenda_w
	from	evolucao_paciente_agenda
	where 	cd_evolucao = cd_evolucao_p;
exception
when others then
	nr_seq_agenda_w := null;
	cd_tipo_agenda_w := null;
end;

CALL executar_evento_agenda_atend(nr_atendimento_w,'LEV',obter_estab_atend(nr_atendimento_w),nm_usuario_p,ie_evolucao_clinica_w, null, nr_seq_agenda_w, cd_tipo_agenda_w);


open C01;
loop
fetch C01 into	
	nr_seq_evento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	CALL gerar_evento_paciente(nr_seq_evento_w,nr_atendimento_w,cd_pessoa_fisica_w,null,wheb_usuario_pck.get_nm_usuario,null,null,null,null,null,null,null,null,null,null,null,null,clock_timestamp(),cd_evolucao_p);
	end;
end loop;
close C01;


if (ie_alta_medica_w	= 'S') and (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and (CD_MOTIVO_ALTA_MEDICA_w IS NOT NULL AND CD_MOTIVO_ALTA_MEDICA_w::text <> '')then
	select	max(DT_ALTA_MEDICO)
	into STRICT	dt_alta_medica_w
	from	atendimento_paciente
	where	nr_atendimento	=nr_atendimento_w;
	
	if (coalesce(dt_alta_medica_w::text, '') = '') then
		CALL Gerar_Estornar_Alta_Medica(	nr_atendimento_w,
						'A',
						CD_MOTIVO_ALTA_MEDICA_w,
						clock_timestamp(),
						null,
						nm_usuario_p,
						'N');
	end if;
end if;


begin
CALL enviar_comunic_tipo_evol(cd_evolucao_p,nm_usuario_P);
exception
when others then
	null;
end;

open C02;
loop
fetch C02 into	
	nr_seq_grupo_w,
	ie_tipo_vinculo_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	if (coalesce(ie_tipo_vinculo_w,'V') = 'D') then	
		CALL desvincular_atendimento_grupo(nr_atendimento_w, nm_usuario_p, nr_seq_grupo_w);	
	else
		if (coalesce(nr_atendimento_w::text, '') = '') or (nr_atendimento_w = 0) then
			CALL vincular_atendimento_grupo(nr_atendimento_w,cd_pessoa_fisica_w,1,nr_seq_grupo_w,nm_usuario_p);
		else
			CALL vincular_atendimento_grupo(nr_atendimento_w,cd_pessoa_fisica_w,0,nr_seq_grupo_w,nm_usuario_p);
		end if;
	end if;
	end;
end loop;
close C02;


-- WorkList AtePac_WL (357)
CALL wl_gerar_finalizar_tarefa('CN','F',nr_atendimento_w,cd_pessoa_fisica_w,nm_usuario_p,clock_timestamp(),'S',ie_evolucao_clinica_w,null,null,null,null,null,null,null,null,null,null,dt_evolucao_w,null,cd_evolucao_p);



if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

begin
	CALL gravar_integracao_regulacao(501, 'nr_atendimento='||nr_atendimento_w||';');
exception
when others then
	null;	
end;

select cd_especialidade_medico
into STRICT cd_especialidade_medico_w
from evolucao_paciente
where cd_evolucao = cd_evolucao_p;

CALL ATUALIZAR_EV_LINHA_CUIDADO('EV', 'EVOLUCAO_PACIENTE', cd_evolucao_p, 'cd_especialidade_medico_w='||coalesce(cd_especialidade_medico_w, 0)||';ie_evolucao_clinica_w='||coalesce(ie_evolucao_clinica_w, 0)||';',cd_pessoa_fisica_w, nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_evolucao (cd_evolucao_p bigint, nm_usuario_p text) FROM PUBLIC;

