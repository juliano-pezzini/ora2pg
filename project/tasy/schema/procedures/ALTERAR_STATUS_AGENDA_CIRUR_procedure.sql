-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE alterar_status_agenda_cirur ( nr_seq_agenda_p bigint, ie_status_p text, nm_usuario_p text, cd_motivo_p text, ds_motivo_p text, nr_duracao_bloqueio_p bigint default 0) AS $body$
DECLARE

 
cd_estabelecimento_w	bigint;
ie_motivo_col_pac_w		varchar(03);
ie_status_anterior_w	varchar(1);
ie_status_anterior_ww	varchar(1);
					

BEGIN 
 
select	max(cd_estabelecimento) 
into STRICT	cd_estabelecimento_w 
from	agenda a, agenda_paciente b 
where 	a.cd_agenda		= b.cd_agenda 
and		b.nr_sequencia	= nr_seq_agenda_p;
 
ie_motivo_col_pac_w := Obter_Param_Usuario(871, 119, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_motivo_col_pac_w);
ie_status_anterior_w := Obter_Param_Usuario(871, 594, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_status_anterior_w);
ie_status_anterior_ww := Obter_Param_Usuario(871, 675, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_status_anterior_ww);
 
begin 
 
if (ie_status_p = 'B') then 
	update	agenda_paciente 
	set	ie_status_agenda	= ie_status_p, 
		dt_bloqueio			= clock_timestamp(), 
		nm_usuario_bloq		= nm_usuario_p, 
		nr_seq_motivo_bloq	= (cd_motivo_p)::numeric , 
		ds_motivo_status	= ds_motivo_p, 
		nm_paciente			= substr(CASE WHEN ie_motivo_col_pac_w='S' THEN  wheb_mensagem_pck.get_texto(300735, 'DS_MOTIVO_P=' || SUBSTR(ds_motivo_p, 1, 60))  ELSE wheb_mensagem_pck.get_texto(300737) END ,1,60), --Jeferson L Weigmann 28/10/2011 
		nr_minuto_duracao	= CASE WHEN nr_duracao_bloqueio_p=0 THEN nr_minuto_duracao  ELSE nr_duracao_bloqueio_p END  
	where	nr_sequencia	= nr_seq_agenda_p 
	and	ie_status_agenda	= 'L';
elsif (ie_status_p = 'RB') then	 
	update	agenda_paciente 
	set	ie_status_agenda	= 'L', 
		dt_bloqueio			 = NULL, 
		nm_usuario_bloq		 = NULL, 
		nr_seq_motivo_bloq	 = NULL, 
		ds_motivo_status	 = NULL, 
		nm_paciente			 = NULL 
	where	nr_sequencia	= nr_seq_agenda_p 
	and	ie_status_agenda	= 'B';
elsif (ie_status_p in ('F','I')) then 
	update	agenda_paciente 
	set	ie_status_agenda	= ie_status_p, 
		dt_status			= clock_timestamp(), 
		ds_motivo_status	= ds_motivo_p, 
		nm_usuario_status	= nm_usuario_p, 
		nm_usuario			= nm_usuario_p 
	where	nr_sequencia	= nr_seq_agenda_p;
elsif (ie_status_p = 'RF') then 
	update	agenda_paciente 
	set	ie_status_agenda	= CASE WHEN ie_status_anterior_w='S' THEN obter_status_anterior_agenda(nr_sequencia,ie_status_agenda)  ELSE 'N' END , 
		dt_status			 = NULL, 
		ds_motivo_status	 = NULL, 
		nm_usuario_status	 = NULL, 
		nm_usuario			= nm_usuario_p 
	where	nr_sequencia	= nr_seq_agenda_p;
elsif (ie_status_p = 'AT') then 
	update	agenda_paciente 
	set	ie_status_agenda		= ie_status_p, 
		nm_usuario				= nm_usuario_p, 
		dt_atualizacao			= clock_timestamp(), 
		nm_usuario_aguar_atend	= nm_usuario_p, 
		dt_aguard_atendimento	= clock_timestamp() 
	where	nr_sequencia		= nr_seq_agenda_p;
elsif (ie_status_p = 'R') then 
	if (ds_motivo_p IS NOT NULL AND ds_motivo_p::text <> '') then 
		update	agenda_paciente 
		set	ie_status_agenda	= 'R', 
			nm_usuario			= nm_usuario_p, 
			nm_paciente			= substr(wheb_mensagem_pck.get_texto(300740, 'DS_MOTIVO_P=' || SUBSTR(ds_motivo_p, 1, 60)),1,60), 
			dt_atualizacao		= clock_timestamp() 
		where	nr_sequencia	= nr_seq_agenda_p 
		and	ie_status_agenda	= 'L';
	else 
		update	agenda_paciente 
		set	ie_status_agenda	= 'R', 
			nm_usuario			= nm_usuario_p, 
			dt_atualizacao		= clock_timestamp() 
		where	nr_sequencia	= nr_seq_agenda_p 
		and	ie_status_agenda	= 'L';
	end if;
elsif (ie_status_p = 'L') then 
	update	agenda_paciente 
	set		ie_status_agenda	= 'L', 
			nm_usuario			= nm_usuario_p, 
			nm_usuario_acesso	 = NULL, 
			dt_agendamento		 = NULL 
	where	nr_sequencia		= nr_seq_agenda_p 
	and		((ie_status_agenda	= 'R' and coalesce(cd_medico::text, '') = '') 
	or (ie_status_agenda = 'N' and coalesce(nm_paciente::text, '') = '')) 
	and		coalesce(cd_pessoa_fisica::text, '') = '' 
	and		coalesce(cd_procedimento::text, '') = '';
elsif (ie_status_p = 'A') then 
	update	agenda_paciente 
	set	ie_status_agenda	= ie_status_p, 
		nm_usuario			= nm_usuario_p, 
		dt_atualizacao		= clock_timestamp() 
	where	nr_sequencia	= nr_seq_agenda_p;
elsif (ie_status_p = 'RA') then 
	update	agenda_paciente 
	set	ie_status_agenda	= CASE WHEN ie_status_anterior_ww='S' THEN coalesce(obter_status_anterior_agenda(nr_sequencia,ie_status_agenda),'N')  ELSE 'N' END , 
		dt_status			 = NULL, 
		ds_motivo_status	 = NULL, 
		nm_usuario_status	 = NULL, 
		nm_usuario			= nm_usuario_p 
	where	nr_sequencia	= nr_seq_agenda_p;
end if;	
 
exception 
when others then 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(218366);
end;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE alterar_status_agenda_cirur ( nr_seq_agenda_p bigint, ie_status_p text, nm_usuario_p text, cd_motivo_p text, ds_motivo_p text, nr_duracao_bloqueio_p bigint default 0) FROM PUBLIC;

