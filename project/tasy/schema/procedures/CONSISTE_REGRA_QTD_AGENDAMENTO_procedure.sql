-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_regra_qtd_agendamento ( nr_sequencia_p bigint, cd_medico_p text, cd_convenio_p bigint, dt_agenda_p timestamp, cd_agenda_p bigint, cd_turno_p text, ie_carater_cirurgia_p text, ie_transferencia_p text default 'N', ie_copia_p text default 'N', ds_erro_p INOUT text DEFAULT NULL, ie_somente_aviso_p INOUT text DEFAULT NULL) AS $body$
DECLARE

										
qt_agendamento_w	bigint;										
qt_agendamento_dia_w	bigint;
ie_possui_regra_w	varchar(1);
ds_erro_w		varchar(2000):='';
cd_convenio_w		integer;
cd_medico_w		varchar(10);
ie_somente_aviso_w	varchar(1);
cd_agenda_w		bigint;
cd_turno_w		varchar(1);
cd_setor_atendimento_w	integer;
cd_setor_exclusivo_w	integer;
ie_carater_cirurgia_w	varchar(1);
cd_perfil_w		integer;
cd_estabelecimento_w	smallint;
ds_mensagem_w		varchar(255);
dt_agenda_w			timestamp;
										

BEGIN
ie_somente_aviso_p:= 'N';
ds_erro_p:='';

cd_estabelecimento_w 	:= wheb_usuario_pck.get_cd_estabelecimento;
cd_perfil_w 		:= wheb_usuario_pck.get_cd_perfil;
dt_agenda_w 		:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_p);

select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_possui_regra_w
from	regra_qtdade_agendamento;

if (ie_possui_regra_w = 'S') then
	begin
	select	max(cd_setor_exclusivo)
	into STRICT	cd_setor_exclusivo_w
	from	agenda
	where	cd_agenda = cd_agenda_p;
	
	select	coalesce(max(qt_agendamento_dia),-1),
		max(cd_convenio),
		max(cd_medico),
		coalesce(max(ie_somente_aviso),'N'),
		max(cd_agenda),
		max(cd_turno),
		max(cd_setor_atendimento),
		max(ie_carater_cirurgia),
		max(ds_mensagem)
	into STRICT	qt_agendamento_dia_w,
		cd_convenio_w,
		cd_medico_w,
		ie_somente_aviso_w,
		cd_agenda_w,
		cd_turno_w,
		cd_setor_atendimento_w,
		ie_carater_cirurgia_w,
		ds_mensagem_w
	from	regra_qtdade_agendamento
	where	coalesce(cd_convenio,coalesce(cd_convenio_p,0)) 			= coalesce(cd_convenio_p,0)
	and	coalesce(cd_medico,coalesce(cd_medico_p,'0'))			= coalesce(cd_medico_p,'0')
	and	coalesce(cd_agenda,coalesce(cd_agenda_p,0))			= coalesce(cd_agenda_p,0)
	and	coalesce(cd_setor_atendimento,coalesce(cd_setor_exclusivo_w,0))	= coalesce(cd_setor_exclusivo_w,0)
	and	coalesce(cd_turno,coalesce(cd_turno_p,'-1'))			= coalesce(cd_turno_p,'-1')
	and	coalesce(ie_carater_cirurgia,coalesce(ie_carater_cirurgia_p,'0'))	= coalesce(ie_carater_cirurgia_p,'0')
	and	coalesce(cd_perfil,cd_perfil_w)				= cd_perfil_w
	and	coalesce(cd_estabelecimento,cd_estabelecimento_w)		= cd_estabelecimento_w
	and	((coalesce(ie_transferencia_p,'N') = 'N') 				or (coalesce(ie_transferencia,'N') = 'S'))
	and	((coalesce(ie_copia_p,'N') = 'N') 					or (coalesce(ie_copia,'N') = 'S'));

	if (qt_agendamento_dia_w <> -1) then
		begin
		
		select	count(*)
		into STRICT	qt_agendamento_w
		from 	agenda_paciente a,
			agenda b
		where	a.cd_agenda = b.cd_agenda
		and	((a.cd_medico = cd_medico_w) or (coalesce(cd_medico_w::text, '') = ''))
		and	((a.cd_convenio = cd_convenio_w) or (coalesce(cd_convenio_w::text, '') = ''))
		and	((a.cd_agenda = cd_agenda_w) or (coalesce(cd_agenda_w::text, '') = ''))
		and	((b.cd_setor_exclusivo = cd_setor_atendimento_w) or (coalesce(cd_setor_atendimento_w::text, '') = ''))
		and	((a.cd_turno = cd_turno_w) or (coalesce(cd_turno_w::text, '') = '')) 
		and	((a.ie_carater_cirurgia = ie_carater_cirurgia_w) or (coalesce(ie_carater_cirurgia_w::text, '') = '')) 
		and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.dt_agenda) = dt_agenda_w
		and	a.ie_status_agenda not in ('C','L')
		and	a.nr_sequencia <> nr_sequencia_p;

		if (qt_agendamento_w >= qt_agendamento_dia_w) then
			if (coalesce(ds_mensagem_w::text, '') = '') then
				ds_erro_w:= wheb_mensagem_pck.get_texto(277980);
			else
				ds_erro_w:= ds_mensagem_w;
			end if;	
			ie_somente_aviso_p:=ie_somente_aviso_w;
		end if;	
		
		end;
	end if;	
	end;
end if;	

ds_erro_p:=ds_erro_w;

end	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_regra_qtd_agendamento ( nr_sequencia_p bigint, cd_medico_p text, cd_convenio_p bigint, dt_agenda_p timestamp, cd_agenda_p bigint, cd_turno_p text, ie_carater_cirurgia_p text, ie_transferencia_p text default 'N', ie_copia_p text default 'N', ds_erro_p INOUT text DEFAULT NULL, ie_somente_aviso_p INOUT text DEFAULT NULL) FROM PUBLIC;

