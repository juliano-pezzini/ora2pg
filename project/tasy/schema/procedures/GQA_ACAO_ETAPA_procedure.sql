-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gqa_acao_etapa (nr_sequencia_p bigint ,nr_seq_mot_cancelar_p bigint ,ds_just_cancelar_p text ,opcao_p text) AS $body$
DECLARE


qt_tempo_resposta_w     gqa_protocolo_etapa_pac.qt_tempo_exec_resposta%type;
ie_finaliza_protocolo_w gqa_protocolo_etapa_pac.ie_finaliza_protocolo%type;
nr_seq_prot_pac_w       gqa_protocolo_etapa_pac.nr_seq_prot_pac%type;
nr_seq_evento_depois_w  gqa_acao.nr_seq_evento_depois%type;
nr_atendimento_w        gqa_protocolo_pac.nr_atendimento%type;
nr_seq_prox_evento_w    gqa_acao.nr_seq_evento%type;
nr_seq_motivo_protocolo_w gqa_acao.nr_seq_motivo_protocolo%type;


BEGIN
  IF opcao_p = 'I' THEN
    SELECT gqa_obter_etapa_tempo_resposta(nr_sequencia_p) INTO STRICT qt_tempo_resposta_w;

    UPDATE gqa_protocolo_etapa_pac
       SET dt_inicio           = clock_timestamp()
          ,nm_usuario_executor = wheb_usuario_pck.get_nm_usuario
          ,qt_tempo_exec_resposta = qt_tempo_resposta_w
     WHERE nr_sequencia = nr_sequencia_p;
  ELSIF opcao_p = 'F' THEN
    UPDATE gqa_protocolo_etapa_pac
       SET dt_fim              = clock_timestamp()
          ,nm_usuario_executor = wheb_usuario_pck.get_nm_usuario
          ,qt_tempo_execucao   = trunc((clock_timestamp() - dt_inicio) * 24 * 60)
     WHERE nr_sequencia = nr_sequencia_p;

    SELECT a.ie_finaliza_protocolo
          ,e.nr_seq_prot_pac
          ,a.nr_seq_evento_depois
          ,p.nr_atendimento
          ,(SELECT x.nr_seq_evento
              FROM gqa_protocolo_etapa_pac t
                  ,gqa_acao x
             WHERE t.nr_seq_acao = x.nr_sequencia 
               AND gqa_obter_se_inicia_etapa(t.nr_sequencia) = 'S'
               AND t.nr_seq_prot_pac = p.nr_sequencia
               AND t.nr_seq_etapa_sup = e.nr_seq_etapa  LIMIT 1) nr_seq_prox_evento
          ,a.nr_seq_motivo_protocolo
      INTO STRICT ie_finaliza_protocolo_w
          ,nr_seq_prot_pac_w
          ,nr_seq_evento_depois_w
          ,nr_atendimento_w
          ,nr_seq_prox_evento_w
          ,nr_seq_motivo_protocolo_w
      FROM gqa_protocolo_pac p
          ,gqa_protocolo_etapa_pac e
          ,gqa_acao a
     WHERE p.nr_sequencia = e.nr_seq_prot_pac
       AND e.nr_seq_acao = a.nr_sequencia 
       AND e.nr_sequencia = nr_sequencia_p;

    IF (nr_seq_evento_depois_w IS NOT NULL AND nr_seq_evento_depois_w::text <> '') THEN
      CALL gerar_evento_paciente(nr_seq_evento_depois_w
                           ,nr_atendimento_w
                           ,obter_pessoa_atendimento(nr_atendimento_w,'C')
                           ,null
                           ,wheb_usuario_pck.get_nm_usuario
						   ,null
						   ,null
						   ,null
						   ,null
						   ,null
						   ,null
						   ,null
						   ,null
						   ,null
						   ,null
						   ,'S'
						   ,null
						   ,clock_timestamp()
						   ,null
						   ,null
						   ,null
						   ,null
						   ,null
						   ,null
						   ,null
						   ,null
						   ,'N'
						   ,nr_sequencia_p);
    END IF;

    IF (nr_seq_prox_evento_w IS NOT NULL AND nr_seq_prox_evento_w::text <> '') THEN                           
      CALL gerar_evento_paciente(nr_seq_prox_evento_w
                           ,nr_atendimento_w
                           ,obter_pessoa_atendimento(nr_atendimento_w,'C')
                           ,null
                           ,wheb_usuario_pck.get_nm_usuario
						   ,null
						   ,null
						   ,null
						   ,null
						   ,null
						   ,null
						   ,null
						   ,null
						   ,null
						   ,null
						   ,'S'
						   ,null
						   ,clock_timestamp()
						   ,null
						   ,null
						   ,null
						   ,null
						   ,null
						   ,null
						   ,null
						   ,null
						   ,'N'
						   ,nr_sequencia_p);
    END IF;
  ELSIF opcao_p = 'C' THEN
    UPDATE gqa_protocolo_etapa_pac
       SET dt_cancelar_usuario       = clock_timestamp()
          ,nr_seq_motivo_cancelar    = nr_seq_mot_cancelar_p
          ,ds_justificativa_cancelar = ds_just_cancelar_p
          ,nm_usuario_cancelar       = wheb_usuario_pck.get_nm_usuario
     WHERE nr_sequencia = nr_sequencia_p;
  END IF;

  IF FOUND THEN
    CALL gqa_gerar_log_protocolo(nr_sequencia_p, opcao_p);
  END IF;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gqa_acao_etapa (nr_sequencia_p bigint ,nr_seq_mot_cancelar_p bigint ,ds_just_cancelar_p text ,opcao_p text) FROM PUBLIC;

