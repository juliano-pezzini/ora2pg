-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_define_preco_partic ( nr_seq_partic_p bigint, vl_participante_p INOUT bigint, vl_total_partic_p INOUT bigint, vl_cuto_oper_p INOUT bigint, vl_filme_p INOUT bigint, nr_seq_regra_p INOUT bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_edicao_amb_w			integer;
nr_seq_conta_w			bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
ie_origem_w			bigint;
nr_seq_prestador_w		bigint;
nr_seq_categoria_w		bigint;
nr_seq_tipo_acomodacao_w	bigint;
nr_seq_tipo_atendimento_w	bigint;
nr_seq_plano_w			bigint;
nr_seq_grau_partic_w		bigint;
nr_seq_clinica_w		bigint;
nr_seq_regra_w			bigint;
nr_seq_segurado_w		bigint;
nr_seq_conta_proc_w		bigint;
dt_conta_w			timestamp;
ie_medico_w			varchar(1);
ie_auxiliar_w			varchar(1);
ie_anestesista_w		varchar(1);
tx_item_w			double precision;
nr_seq_partic_w			bigint;
vl_total_partic_w		double precision	:= 0;
vl_participante_w		double precision	:= 0;
cd_area_w			bigint;
cd_especialidade_w		bigint;
cd_grupo_w			bigint;
nr_auxiliares_w			integer	:= 0;
nr_aux_w			integer	:= 0;
vl_medico_w			double precision	:= 0;
vl_auxiliares_w			double precision	:= 0;
vl_anestesista_w		double precision	:= 0;
vl_procedimento_w		double precision	:= 0;
vl_custo_operacional_w		double precision	:= 0;
vl_filme_w			double precision	:= 0;
dt_procedimento_w		timestamp;
ie_valor_informado_w		varchar(1)	:= 'N';
cd_porte_anestesico_w		varchar(10);
ds_retorno_w			varchar(255);
cd_medico_w			varchar(10);
ie_conta_interacao_w		varchar(1);
ie_tecnica_utilizada_w		varchar(1);
ie_tipo_guia_w			varchar(10);
ie_carater_internacao_w		varchar(10);
nr_aux_regra_w			bigint;
nr_seq_regra_autogerado_w	bigint;
ie_tipo_acomodacao_ptu_w	varchar(1);
nr_seq_rp_combinada_w		pls_rp_cta_combinada.nr_sequencia%type;
cd_moeda_autogerado_w		smallint;
dados_prestador_prot_w		pls_cta_valorizacao_pck.dados_prestador_prot;
vl_ch_honorarios_w		cotacao_moeda.vl_cotacao%type;
vl_ch_custo_oper_w		cotacao_moeda.vl_cotacao%type;
vl_ch_custo_filme_w		cotacao_moeda.vl_cotacao%type;
vl_ch_anestesista_w		cotacao_moeda.vl_cotacao%type;
dados_regra_preco_proc_w	pls_cta_valorizacao_pck.dados_regra_preco_proc;
dados_conta_w			pls_cta_valorizacao_pck.dados_conta;
nr_seq_guia_w			pls_guia_plano.nr_sequencia%type;
ie_regime_atendimento_w		 	pls_conta.ie_regime_atendimento%type;
ie_saude_ocupacional_w			pls_conta.ie_saude_ocupacional%type;

c01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_medico,
		a.ie_anestesista,
		a.ie_auxiliar,
		coalesce(b.tx_item,100)
	from	pls_grau_participacao a,
		pls_conta_proc b,
		pls_proc_participante c
	where	a.nr_sequencia	= c.nr_seq_grau_partic
	and	b.nr_sequencia	= c.nr_seq_conta_proc
	and	c.nr_sequencia	= nr_seq_partic_p;


BEGIN

select	b.nr_seq_conta,
	b.cd_procedimento,
	b.ie_origem_proced,
	b.nr_sequencia,
	b.dt_procedimento,
	cd_medico,
	ie_tecnica_utilizada,
	b.nr_seq_rp_combinada
into STRICT	nr_seq_conta_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	nr_seq_conta_proc_w,
	dt_procedimento_w,
	cd_medico_w,
	ie_tecnica_utilizada_w,
	nr_seq_rp_combinada_w
from	pls_conta_proc b,
	pls_proc_participante a
where	b.nr_sequencia	= a.nr_seq_conta_proc
and	a.nr_sequencia	= nr_seq_partic_p;

select	b.nr_seq_prestador_exec,
	b.nr_seq_tipo_acomodacao,
	b.nr_seq_tipo_atendimento,
	b.nr_seq_clinica,
	coalesce(b.dt_atendimento_referencia, coalesce(b.dt_autorizacao, coalesce(b.dt_entrada, clock_timestamp()))),
	b.nr_seq_segurado,
	substr(pls_obter_se_internado(b.nr_sequencia,'X'),1,1),
	b.ie_tipo_guia,
	b.ie_carater_internacao,
	b.ie_tipo_acomodacao_ptu,
	a.nr_seq_prestador,
	b.ie_tipo_consulta,
	b.nr_seq_guia,
	b.nr_seq_tipo_conta,
	b.ie_regime_atendimento,	
	b.ie_saude_ocupacional
into STRICT	nr_seq_prestador_w,
	nr_seq_tipo_acomodacao_w,
	nr_seq_tipo_atendimento_w,
	nr_seq_clinica_w,
	dt_conta_w,
	nr_seq_segurado_w,
	ie_conta_interacao_w,
	ie_tipo_guia_w,
	ie_carater_internacao_w,
	ie_tipo_acomodacao_ptu_w,
	dados_prestador_prot_w.nr_seq_prestador,
	dados_conta_w.ie_tipo_consulta,
	nr_seq_guia_w,
	dados_conta_w.nr_seq_tipo_conta,
	ie_regime_atendimento_w,
	ie_saude_ocupacional_w	
from	pls_conta		b,
	pls_protocolo_conta 	a
where	a.nr_sequencia		= b.nr_seq_protocolo
and	b.nr_sequencia		= nr_seq_conta_w;

if (dados_prestador_prot_w.nr_seq_prestador IS NOT NULL AND dados_prestador_prot_w.nr_seq_prestador::text <> '') then
	select	max(nr_seq_tipo_prestador),
		max(nr_seq_classificacao),
		max(ie_tipo_vinculo),
		max(cd_prestador)
	into STRICT	dados_prestador_prot_w.nr_seq_tipo_prestador,
		dados_prestador_prot_w.nr_seq_classificacao,
		dados_prestador_prot_w.ie_tipo_vinculo,
		dados_prestador_prot_w.cd_prestador
	from	pls_prestador
	where	nr_sequencia	= dados_prestador_prot_w.nr_seq_prestador;
end if;

if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
	select 	max(ie_pcmso)
	into STRICT	dados_conta_w.ie_atend_pcmso
	from	pls_guia_plano
	where	nr_sequencia	= nr_seq_guia_w;
end if;

if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
	begin
		select	max(nr_seq_plano)
		into STRICT	nr_seq_plano_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_segurado_w;
	exception
		when others then
			nr_seq_plano_w	:= null;
	end;

	select	max(nr_seq_categoria)
	into STRICT	nr_seq_categoria_w
	from	pls_regra_categoria
	where	nr_seq_tipo_acomodacao	= nr_seq_tipo_acomodacao_w;

	SELECT * FROM pls_obter_estrut_proc(cd_procedimento_w, ie_origem_proced_w, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_w) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_w;

	dados_regra_preco_proc_w := pls_define_preco_proc(cd_estabelecimento_p, nr_seq_prestador_w, nr_seq_categoria_w, coalesce(dt_procedimento_w,dt_conta_w), null, cd_procedimento_w, ie_origem_w, nr_seq_tipo_acomodacao_w, nr_seq_tipo_atendimento_w, nr_seq_clinica_w, nr_seq_plano_w, 'P', 0, 0, null, 'N', null, nr_seq_segurado_w, '', '', '', '', '', null, cd_medico_w, ie_conta_interacao_w, ie_tecnica_utilizada_w, ie_tipo_guia_w, 'A', 'X', null, ie_carater_internacao_w, dt_procedimento_w, ie_tipo_acomodacao_ptu_w, nr_seq_rp_combinada_w, dados_prestador_prot_w, null, dados_conta_w, dados_regra_preco_proc_w, null, null, ie_regime_atendimento_w, null, ie_saude_ocupacional_w);
			
			vl_procedimento_w		:= dados_regra_preco_proc_w.vl_procedimento;
			vl_custo_operacional_w		:= dados_regra_preco_proc_w.vl_custo_operacional;
			vl_anestesista_w		:= dados_regra_preco_proc_w.vl_anestesista;
			vl_medico_w			:= dados_regra_preco_proc_w.vl_medico;
			vl_filme_w			:= dados_regra_preco_proc_w.vl_filme;
			vl_auxiliares_w			:= dados_regra_preco_proc_w.vl_auxiliares;
			nr_seq_regra_w			:= dados_regra_preco_proc_w.nr_sequencia;
			cd_edicao_amb_w			:= dados_regra_preco_proc_w.cd_edicao_amb;
			cd_porte_anestesico_w		:= dados_regra_preco_proc_w.cd_porte_anestesico;
			nr_aux_regra_w			:= dados_regra_preco_proc_w.nr_auxiliares;
			nr_seq_regra_autogerado_w	:= dados_regra_preco_proc_w.nr_seq_regra_autogerado;
			cd_moeda_autogerado_w		:= dados_regra_preco_proc_w.cd_moeda_autogerado;
			vl_ch_honorarios_w		:= dados_regra_preco_proc_w.vl_ch_honorarios;
			vl_ch_custo_oper_w		:= dados_regra_preco_proc_w.vl_ch_custo_oper;
			vl_ch_custo_filme_w		:= dados_regra_preco_proc_w.vl_ch_custo_filme;
			vl_ch_anestesista_w		:= dados_regra_preco_proc_w.vl_ch_anestesista;
	/*	atualizar os valores dos Participantes	*/

	if (ie_origem_w	= 5) then

		select	coalesce(max(a.nr_auxiliar),0)
		into STRICT	nr_auxiliares_w
		from	cbhpm_preco a
		where	a.cd_procedimento	= cd_procedimento_w
		and	a.ie_origem_proced	= ie_origem_proced_w
		and	coalesce(a.dt_vigencia,clock_timestamp() - interval '3650 days') =
				(SELECT	max(coalesce(b.dt_vigencia,clock_timestamp() - interval '3650 days'))
				from	cbhpm_preco b
				where	b.cd_procedimento	= cd_procedimento_w
				and	b.ie_origem_proced	= ie_origem_w
				and	coalesce(b.dt_vigencia,clock_timestamp() - interval '3650 days')	<= dt_conta_w);
	else
		select	coalesce(max(a.nr_auxiliares),0)
		into STRICT	nr_auxiliares_w
		from	preco_amb a
		where	a.cd_procedimento	= cd_procedimento_w
	  	and	a.cd_edicao_amb		= cd_edicao_amb_w
  		and	coalesce(a.dt_inicio_vigencia,clock_timestamp() - interval '3650 days')	=
				(SELECT	max(coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days'))
				from	preco_amb b
				where	b.cd_edicao_amb		= cd_edicao_amb_w
				and	b.cd_procedimento	= cd_procedimento_w
				and	coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days')	<= dt_conta_w);
	end if;

	open c01;
	loop
	fetch c01 into	nr_seq_grau_partic_w,
			ie_medico_w,
			ie_anestesista_w,
			ie_auxiliar_w,
			tx_item_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

		if (nr_aux_w <= nr_auxiliares_w) then

			if (ie_medico_w	= 'S') then
				vl_participante_w	:= dividir_sem_round((vl_medico_w)::numeric, 100) * tx_item_w;
			elsif (ie_anestesista_w = 'S') then
				vl_participante_w	:= dividir_sem_round((vl_anestesista_w)::numeric, 100) * tx_item_w;
			else	
				vl_participante_w	:= dividir_sem_round((vl_auxiliares_w)::numeric, 100) * tx_item_w;
			end if;
		else
			vl_participante_w	:= 0;
		end if;

		update	pls_proc_participante
		set	vl_participante		= vl_participante_w,
			vl_calculado		= vl_participante_w
		where	nr_sequencia		= nr_seq_partic_p;

	end loop;
	close c01;

	select	coalesce(sum(vl_participante),0)
	into STRICT	vl_total_partic_w
	from	pls_proc_participante
	where	nr_seq_conta_proc	= nr_seq_conta_proc_w;
end if;

vl_participante_p	:= coalesce(vl_participante_w,0);
vl_total_partic_p	:= coalesce(vl_total_partic_w,0);
vl_cuto_oper_p		:= coalesce(vl_custo_operacional_w,0);
vl_filme_p		:= coalesce(vl_filme_w,0);
nr_seq_regra_p		:= nr_seq_regra_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_define_preco_partic ( nr_seq_partic_p bigint, vl_participante_p INOUT bigint, vl_total_partic_p INOUT bigint, vl_cuto_oper_p INOUT bigint, vl_filme_p INOUT bigint, nr_seq_regra_p INOUT bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

