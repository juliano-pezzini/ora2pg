-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importar_lote_fatura (nr_seq_lote_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_fat_ini_w		w_imp_fatura.nr_sequencia%type;
nr_seq_fat_fim_w		w_imp_fatura.nr_sequencia%type;

/* Header - Faturas */

cd_empresa_w			varchar(4);
cd_estabelecimento_w		varchar(4);
cd_fatura_w			varchar(10);
nr_nota_fiscal_w		varchar(6);
cd_estoque_w			varchar(2);
cd_almoxarifado_w		varchar(2);
ds_dt_fatura_w			varchar(8);
dt_fatura_w			timestamp;
ds_dt_fiscal_w			varchar(8);
dt_fiscal_w			timestamp;
cd_tipo_operacao_w		varchar(3);
ds_dt_saida_w			varchar(8);
dt_saida_w			timestamp;
ds_natureza_operacao_w		varchar(120);
ie_cliente_fornec_w		varchar(1);
cd_cliente_fornec_w		varchar(15);
cd_end_faturamento_w		varchar(10);
cd_end_entrega_w		varchar(10);
cd_end_cobranca_w		varchar(10);
cd_moeda_w			varchar(3);
cd_canal_venda_w		varchar(10);
cd_transportadora_w		varchar(15);
cd_redespacho_w			varchar(40);
cd_condicao_pagto_w		varchar(2);
ds_dt_vencimento_w		varchar(8);
dt_vencimento_w			timestamp;
cd_tipo_cobranca_w		varchar(2);
cd_tipo_entrega_w		varchar(3);
cd_via_transporte_w		varchar(1);
nr_titulo_w			varchar(20);
ie_uso_consumo_w		varchar(1);
nr_placa_veiculo_w		varchar(7);
cd_uf_transportador_w		varchar(2);
cd_marca_veiculo_w		varchar(10);
qt_volume_prod_w		varchar(8);
cd_especie_w			varchar(20);
ds_qt_peso_bruto_w		varchar(17);
qt_peso_bruto_w			w_imp_nota_fiscal.qt_peso_bruto%type;
ds_qt_peso_liquido_w		varchar(17);
qt_peso_liquido_w		w_imp_nota_fiscal.qt_peso_liquido%type;
ds_veiculo_w			varchar(40);
ds_observacao_w			varchar(500);
ds_mensagem_fat1_w		varchar(4);
ds_mensagem_fat2_w		varchar(4);
ds_mensagem_fat3_w		varchar(4);
nr_nota_fiscal_origem_w		varchar(10);

nr_seq_nota_w			w_imp_nota_fiscal.nr_sequencia%type;

/* Datail - Itens */

cd_material_w			varchar(15);
ds_material_w			varchar(250);
cd_unidade_medida_w		varchar(20);
ds_qt_material_w		varchar(23);
qt_material_w			w_imp_nota_fiscal_item.qt_material%type;
cd_classif_fiscal_ipi_w		varchar(15);
ds_vl_unitario_w		varchar(23);
vl_unitario_w			w_imp_nota_fiscal_item.vl_unitario%type;
ds_vl_incidencia_icms_w		varchar(11);
vl_incidencia_icms_w		w_imp_nota_fiscal_item.vl_incidencia_icms%type;
ds_pr_icms_w			varchar(6);
pr_icms_w			w_imp_nota_fiscal_item.pr_icms%type;
ds_pr_ipi_w			varchar(6);
pr_ipi_w			w_imp_nota_fiscal_item.pr_ipi%type;
ds_qt_peso_item_w		varchar(19);
qt_peso_item_w			w_imp_nota_fiscal_item.qt_peso_item%type;
cd_embalagem_w			varchar(6);
ds_vl_desconto_w		varchar(10);
vl_desconto_w			w_imp_nota_fiscal_item.vl_desconto%type;
ds_vl_ipi_w			varchar(15);
vl_ipi_w			w_imp_nota_fiscal_item.vl_ipi%type;
ds_vl_icms_w			varchar(15);
vl_icms_w			w_imp_nota_fiscal_item.vl_icms%type;
ds_vl_unitario_outra_moeda_w	varchar(23);
vl_unitario_outra_moeda_w	w_imp_nota_fiscal_item.vl_unitario_outra_moeda%type;
ds_observacao_item_w		varchar(60);
ds_vl_iss_w			varchar(15);
vl_iss_w			w_imp_nota_fiscal_item.vl_iss%type;
ds_vl_produto_w			varchar(23);
vl_produto_w			w_imp_nota_fiscal_item.vl_produto%type;
ds_vl_subst_tributaria_w	varchar(15);
vl_subst_tributaria_w		w_imp_nota_fiscal_item.vl_subst_tributaria%type;
ds_vl_base_ipi_w		varchar(15);
vl_base_ipi_w			w_imp_nota_fiscal_item.vl_base_ipi%type;
ds_vl_base_icms_w		varchar(15);
vl_base_icms_w			w_imp_nota_fiscal_item.vl_base_icms%type;
ds_vl_custo_item_w		varchar(23);
vl_custo_item_w			w_imp_nota_fiscal_item.vl_custo_item%type;
ds_qt_volume_item_w		varchar(5);
qt_volume_item_w		w_imp_nota_fiscal_item.qt_volume_item%type;
ds_pr_inss_w			varchar(6);
pr_inss_w			w_imp_nota_fiscal_item.pr_inss%type;
ds_vl_inss_w			varchar(12);
vl_inss_w			w_imp_nota_fiscal_item.vl_inss%type;
ds_vl_custo_outra_moeda_w	varchar(23);
vl_custo_outra_moeda_w		w_imp_nota_fiscal_item.vl_custo_outra_moeda%type;
cd_centro_custo_w		varchar(15);
cd_paciente_w			varchar(15);
ds_nr_atendimento_w		varchar(5);
nr_atendimento_w		w_imp_nota_fiscal_item.nr_atendimento%type;
ds_lamina_w			varchar(10);
nr_matricula_paciente_w		varchar(19);
nm_paciente_w			varchar(45);

nr_seq_item_w			w_imp_fatura.nr_sequencia%type;

/* Mensagem Boleto */

ds_mensagem_w			varchar(69);

/* Header - Faturas */

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	substr(a.ds_conteudo,2,4) cd_empresa,
	substr(a.ds_conteudo,6,4) cd_estabelecimento,
	substr(a.ds_conteudo,10,10) cd_fatura,
	substr(a.ds_conteudo,20,6) nr_nota_fiscal,
	substr(a.ds_conteudo,26,2) cd_estoque,
	substr(a.ds_conteudo,28,2) cd_almoxarifado,
	substr(a.ds_conteudo,30,8) ds_dt_fatura,
	substr(a.ds_conteudo,38,8) ds_dt_fiscal,
	substr(a.ds_conteudo,46,3) cd_tipo_operacao,
	substr(a.ds_conteudo,49,8) ds_dt_saida,
	substr(a.ds_conteudo,57,120) ds_natureza_operacao,
	substr(a.ds_conteudo,177,1) ie_cliente_fornec,
	substr(a.ds_conteudo,182,15) cd_cliente_fornec,
	substr(a.ds_conteudo,198,5) cd_end_faturamento,
	substr(a.ds_conteudo,203,10) cd_end_entrega,
	substr(a.ds_conteudo,213,10) cd_end_cobranca,
	substr(a.ds_conteudo,223,3) cd_moeda,
	substr(a.ds_conteudo,226,10) cd_canal_venda,
	substr(a.ds_conteudo,236,15) cd_transportadora,
	substr(a.ds_conteudo,251,40) cd_redespacho,
	substr(a.ds_conteudo,291,2) cd_condicao_pagto,
	substr(a.ds_conteudo,293,8) ds_dt_vencimento,
	substr(a.ds_conteudo,301,2) cd_tipo_cobranca,
	substr(a.ds_conteudo,303,3) cd_tipo_entrega,
	substr(a.ds_conteudo,306,1) cd_via_transporte,
	substr(a.ds_conteudo,307,20) nr_titulo,
	substr(a.ds_conteudo,327,1) ie_uso_consumo,
	substr(a.ds_conteudo,328,7) nr_placa_veiculo,
	substr(a.ds_conteudo,335,2) cd_uf_transportador,
	substr(a.ds_conteudo,337,10) cd_marca_veiculo,
	substr(a.ds_conteudo,347,8) qt_volume_prod,
	substr(a.ds_conteudo,356,20) cd_especie,
	substr(a.ds_conteudo,376,17) ds_qt_peso_bruto,
	substr(a.ds_conteudo,393,17) ds_qt_peso_liquido,
	substr(a.ds_conteudo,410,40) ds_veiculo,
	substr(a.ds_conteudo,450,500) ds_observacao,
	substr(a.ds_conteudo,950,4) ds_mensagem_fat1,
	substr(a.ds_conteudo,954,4) ds_mensagem_fat2,
	substr(a.ds_conteudo,958,4) ds_mensagem_fat3,
	substr(a.ds_conteudo,962,10) nr_nota_fiscal_origem
from	w_imp_fatura a
where	substr(a.ds_conteudo,1,1)	= '1'
and	a.nr_seq_lote			= nr_seq_lote_p
order by	a.nr_sequencia;

/* Datail - Itens */

c02 CURSOR FOR
SELECT	a.nr_sequencia,
	substr(a.ds_conteudo,2,15) cd_material,
	substr(a.ds_conteudo,17,250) ds_material,
	substr(a.ds_conteudo,267,20) cd_unidade_medida,
	substr(a.ds_conteudo,287,23) ds_qt_material,
	substr(a.ds_conteudo,310,15) cd_classif_fiscal_ipi,
	substr(a.ds_conteudo,325,23) ds_vl_unitario,
	substr(a.ds_conteudo,348,11) ds_vl_incidencia_icms,
	substr(a.ds_conteudo,359,6) ds_pr_icms,
	substr(a.ds_conteudo,365,6) ds_pr_ipi,
	substr(a.ds_conteudo,371,19) ds_qt_peso_item,
	substr(a.ds_conteudo,390,6) cd_embalagem,
	substr(a.ds_conteudo,396,10) ds_vl_desconto,
	substr(a.ds_conteudo,406,15) ds_vl_ipi,
	substr(a.ds_conteudo,421,15) ds_vl_icms,
	substr(a.ds_conteudo,519,23) ds_vl_unitario_outra_moeda,
	substr(a.ds_conteudo,542,60) ds_observacao,
	substr(a.ds_conteudo,602,15) ds_vl_iss,
	substr(a.ds_conteudo,617,23) ds_vl_produto,
	substr(a.ds_conteudo,640,15) ds_vl_subst_tributaria,
	substr(a.ds_conteudo,665,15) ds_vl_base_ipi,
	substr(a.ds_conteudo,680,15) ds_vl_base_icms,
	substr(a.ds_conteudo,695,23) ds_vl_custo_item,
	substr(a.ds_conteudo,718,5) ds_qt_volume_item_w,
	substr(a.ds_conteudo,723,6) ds_pr_inss,
	substr(a.ds_conteudo,729,12) ds_vl_inss,
	substr(a.ds_conteudo,741,23) ds_vl_custo_outra_moeda,
	substr(a.ds_conteudo,764,15) cd_centro_custo,
	substr(a.ds_conteudo,779,15) cd_paciente,
	substr(a.ds_conteudo,794,5) ds_nr_atendimento,
	substr(a.ds_conteudo,799,10) ds_lamina,
	substr(a.ds_conteudo,809,19) nr_matricula_paciente,
	substr(a.ds_conteudo,828,45) nm_paciente
from	w_imp_fatura a
where	substr(a.ds_conteudo,1,1)	= '2'
and	a.nr_sequencia			between nr_seq_fat_ini_w and coalesce(nr_seq_fat_fim_w,a.nr_sequencia)
and	a.nr_seq_lote			= nr_seq_lote_p
order by	a.nr_sequencia;

/* Mensagem Boleto */

c03 CURSOR FOR
SELECT	substr(a.ds_conteudo,4,69) ds_mensagem
from	w_imp_fatura a
where	trim(both substr(a.ds_conteudo,4,69))	is not null
and	substr(a.ds_conteudo,1,1)	= '3'
and	a.nr_sequencia			between nr_seq_fat_ini_w and coalesce(nr_seq_fat_fim_w,a.nr_sequencia)
and	a.nr_seq_lote			= nr_seq_lote_p
order by	a.nr_sequencia;


BEGIN

open	c01;
loop
fetch	c01 into
	nr_seq_fat_ini_w,
	cd_empresa_w,
	cd_estabelecimento_w,
	cd_fatura_w,
	nr_nota_fiscal_w,
	cd_estoque_w,
	cd_almoxarifado_w,
	ds_dt_fatura_w,
	ds_dt_fiscal_w,
	cd_tipo_operacao_w,
	ds_dt_saida_w,
	ds_natureza_operacao_w,
	ie_cliente_fornec_w,
	cd_cliente_fornec_w,
	cd_end_faturamento_w,
	cd_end_entrega_w,
	cd_end_cobranca_w,
	cd_moeda_w,
	cd_canal_venda_w,
	cd_transportadora_w,
	cd_redespacho_w,
	cd_condicao_pagto_w,
	ds_dt_vencimento_w,
	cd_tipo_cobranca_w,
	cd_tipo_entrega_w,
	cd_via_transporte_w,
	nr_titulo_w,
	ie_uso_consumo_w,
	nr_placa_veiculo_w,
	cd_uf_transportador_w,
	cd_marca_veiculo_w,
	qt_volume_prod_w,
	cd_especie_w,
	ds_qt_peso_bruto_w,
	ds_qt_peso_liquido_w,
	ds_veiculo_w,
	ds_observacao_w,
	ds_mensagem_fat1_w,
	ds_mensagem_fat2_w,
	ds_mensagem_fat3_w,
	nr_nota_fiscal_origem_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	/* Campo obrigatório */

	begin

		dt_fatura_w	:= to_date(ds_dt_fatura_w,'dd/mm/yyyy');

	exception
	when others then

		/* Data da fatura inválida na linha nr_seq_fat_ini_w (posição 30)!
		Data da fatura: ds_dt_fatura_w */
		CALL wheb_mensagem_pck.exibir_mensagem_abort(316861,
							'NR_SEQ_FAT_INI_W='||nr_seq_fat_ini_w||';'||
							'DS_DT_FATURA_W='||ds_dt_fatura_w);

	end;

	/* Campo obrigatório */

	begin

		dt_fiscal_w	:= to_date(ds_dt_fiscal_w,'dd/mm/yyyy');

	exception
	when others then

		/* Data fiscal inválida na linha nr_seq_fat_ini_w (posição 38)!
		Data fiscal: ds_dt_fiscal_w */
		CALL wheb_mensagem_pck.exibir_mensagem_abort(316862,
							'NR_SEQ_FAT_INI_W='||nr_seq_fat_ini_w||';'||
							'DS_DT_FISCAL_W='||ds_dt_fiscal_w);

	end;

	/* Campo opcional */

	if ((trim(both ds_dt_saida_w) IS NOT NULL AND (trim(both ds_dt_saida_w))::text <> '')) then
		begin

			dt_saida_w	:= to_date(ds_dt_saida_w,'dd/mm/yyyy');

		exception
		when others then

			/* Data da saída inválida na linha nr_seq_fat_ini_w (posição 49)!
			Data da saída: ds_dt_saida_w */
			CALL wheb_mensagem_pck.exibir_mensagem_abort(316863,
								'NR_SEQ_FAT_INI_W='||nr_seq_fat_ini_w||';'||
								'DS_DT_SAIDA_W='||ds_dt_saida_w);

		end;

	end if;

	/* Campo obrigatório */

	begin

		dt_vencimento_w	:= to_date(ds_dt_vencimento_w,'dd/mm/yyyy');

	exception
	when others then

		/* Data do vencimento inválida na linha nr_seq_fat_ini_w (posição 293)!
		Data da vencimento: ds_dt_vencimento_w */
		CALL wheb_mensagem_pck.exibir_mensagem_abort(316864,
							'NR_SEQ_FAT_INI_W='||nr_seq_fat_ini_w||';'||
							'DS_DT_VENCIMENTO_W='||ds_dt_vencimento_w);

	end;

	/* Campo opcional */

	if ((trim(both ds_qt_peso_bruto_w) IS NOT NULL AND (trim(both ds_qt_peso_bruto_w))::text <> '')) then
		begin

			qt_peso_bruto_w := (trim(both ds_qt_peso_bruto_w))::numeric;

		exception
		when others then

			/* Peso bruto inválido na linha nr_seq_fat_ini_w (posição 376)!
			Peso bruto: ds_qt_peso_bruto_w */
			CALL wheb_mensagem_pck.exibir_mensagem_abort(316865,
								'NR_SEQ_FAT_INI_W='||nr_seq_fat_ini_w||';'||
								'DS_QT_PESO_BRUTO_W='||ds_qt_peso_bruto_w);

		end;

	end if;

	/* Campo opcional */

	if ((trim(both ds_qt_peso_liquido_w) IS NOT NULL AND (trim(both ds_qt_peso_liquido_w))::text <> '')) then
		begin

			qt_peso_liquido_w := (trim(both ds_qt_peso_liquido_w))::numeric;

		exception
		when others then

			/* Peso líquido inválido na linha nr_seq_fat_ini_w (posição 393)!
			Peso líquido: ds_qt_peso_liquido_w */
			CALL wheb_mensagem_pck.exibir_mensagem_abort(316866,
								'NR_SEQ_FAT_INI_W='||nr_seq_fat_ini_w||';'||
								'DS_QT_PESO_LIQUIDO_W='||ds_qt_peso_liquido_w);

		end;

	end if;

	select	nextval('w_imp_nota_fiscal_seq')
	into STRICT	nr_seq_nota_w
	;

	insert	into w_imp_nota_fiscal(cd_empresa,
		cd_estabelecimento,
		cd_fatura,
		nr_nota_fiscal,
		cd_estoque,
		cd_almoxarifado,
		dt_fatura,
		dt_fiscal,
		cd_tipo_operacao,
		dt_saida,
		ds_natureza_operacao,
		ie_cliente_fornec,
		cd_cliente_fornec,
		cd_end_faturamento,
		cd_end_entrega,
		cd_end_cobranca,
		cd_moeda,
		cd_canal_venda,
		cd_transportadora,
		cd_redespacho,
		cd_condicao_pagto,
		dt_vencimento,
		cd_tipo_cobranca,
		cd_tipo_entrega,
		cd_via_transporte,
		nr_titulo,
		ie_uso_consumo,
		nr_placa_veiculo,
		cd_uf_transportador,
		cd_marca_veiculo,
		qt_volume_prod,
		cd_especie,
		qt_peso_bruto,
		qt_peso_liquido,
		ds_veiculo,
		ds_observacao,
		ds_mensagem_fat1,
		ds_mensagem_fat2,
		ds_mensagem_fat3,
		nr_nota_fiscal_origem,
		dt_atualizacao,
		dt_atualizacao_nrec,
		nm_usuario,
		nm_usuario_nrec,
		nr_seq_lote,
		nr_sequencia)
	values (cd_empresa_w,
		cd_estabelecimento_w,
		cd_fatura_w,
		nr_nota_fiscal_w,
		cd_estoque_w,
		cd_almoxarifado_w,
		dt_fatura_w,
		dt_fiscal_w,
		cd_tipo_operacao_w,
		dt_saida_w,
		ds_natureza_operacao_w,
		ie_cliente_fornec_w,
		cd_cliente_fornec_w,
		cd_end_faturamento_w,
		cd_end_entrega_w,
		cd_end_cobranca_w,
		cd_moeda_w,
		cd_canal_venda_w,
		cd_transportadora_w,
		cd_redespacho_w,
		cd_condicao_pagto_w,
		dt_vencimento_w,
		cd_tipo_cobranca_w,
		cd_tipo_entrega_w,
		cd_via_transporte_w,
		nr_titulo_w,
		ie_uso_consumo_w,
		nr_placa_veiculo_w,
		cd_uf_transportador_w,
		cd_marca_veiculo_w,
		qt_volume_prod_w,
		cd_especie_w,
		qt_peso_bruto_w,
		qt_peso_liquido_w,
		ds_veiculo_w,
		ds_observacao_w,
		ds_mensagem_fat1_w,
		ds_mensagem_fat2_w,
		ds_mensagem_fat3_w,
		nr_nota_fiscal_origem_w,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		nm_usuario_p,
		nr_seq_lote_p,
		nr_seq_nota_w);

	select	min(a.nr_sequencia)
	into STRICT	nr_seq_fat_fim_w
	from	w_imp_fatura a
	where	substr(a.ds_conteudo,1,1)	= '1'
	and	a.nr_sequencia			> nr_seq_fat_ini_w
	and	a.nr_seq_lote			= nr_seq_lote_p;

	open	c02;
	loop
	fetch	c02 into
		nr_seq_item_w,
		cd_material_w,
		ds_material_w,
		cd_unidade_medida_w,
		ds_qt_material_w,
		cd_classif_fiscal_ipi_w,
		ds_vl_unitario_w,
		ds_vl_incidencia_icms_w,
		ds_pr_icms_w,
		ds_pr_ipi_w,
		ds_qt_peso_item_w,
		cd_embalagem_w,
		ds_vl_desconto_w,
		ds_vl_ipi_w,
		ds_vl_icms_w,
		ds_vl_unitario_outra_moeda_w,
		ds_observacao_item_w,
		ds_vl_iss_w,
		ds_vl_produto_w,
		ds_vl_subst_tributaria_w,
		ds_vl_base_ipi_w,
		ds_vl_base_icms_w,
		ds_vl_custo_item_w,
		ds_qt_volume_item_w,
		ds_pr_inss_w,
		ds_vl_inss_w,
		ds_vl_custo_outra_moeda_w,
		cd_centro_custo_w,
		cd_paciente_w,
		ds_nr_atendimento_w,
		ds_lamina_w,
		nr_matricula_paciente_w,
		nm_paciente_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */

		/* Campo obrigatório */

		begin

			qt_material_w	:= trunc((trim(both ds_qt_material_w))::numeric  / 100000000,4);

		exception
		when others then

			/* Quantidade inválida na linha nr_seq_item_w (posição 287)!
			Quantidade: ds_qt_material_w */
			CALL wheb_mensagem_pck.exibir_mensagem_abort(316911,
								'NR_SEQ_ITEM_W='||nr_seq_item_w||';'||
								'DS_QT_MATERIAL_W='||ds_qt_material_w);

		end;

		/* Campo obrigatório */

		begin

			vl_unitario_w	:= trunc((trim(both ds_vl_unitario_w))::numeric  / 100000000,4);

		exception
		when others then

			/* Preço informado inválido na linha nr_seq_item_w (posição 325)!
			Preço informado: ds_vl_unitario_w */
			CALL wheb_mensagem_pck.exibir_mensagem_abort(316912,
								'NR_SEQ_ITEM_W='||nr_seq_item_w||';'||
								'DS_VL_UNITARIO_W='||ds_vl_unitario_w);

		end;

		/* Campo opcional */

		if ((trim(both ds_vl_incidencia_icms_w) IS NOT NULL AND (trim(both ds_vl_incidencia_icms_w))::text <> '')) then
			begin

				vl_incidencia_icms_w := trunc((trim(both ds_vl_incidencia_icms_w))::numeric  / 1000000,4);

			exception
			when others then

				/* Incidência ICMS inválida na linha nr_seq_item_w (posição 348)!
				Incidência ICMS: ds_vl_incidencia_icms_w */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(316913,
									'NR_SEQ_ITEM_W='||nr_seq_item_w||';'||
									'DS_VL_INCIDENCIA_ICMS_W='||ds_vl_incidencia_icms_w);

			end;

		end if;

		/* Campo opcional */

		if ((trim(both ds_pr_icms_w) IS NOT NULL AND (trim(both ds_pr_icms_w))::text <> '')) then
			begin

				pr_icms_w := trunc((trim(both ds_pr_icms_w))::numeric  / 100,4);

			exception
			when others then

				/* Percentual ICMS inválido na linha nr_seq_item_w (posição 359)!
				Percentual ICMS: ds_pr_icms_w */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(316914,
									'NR_SEQ_ITEM_W='||nr_seq_item_w||';'||
									'DS_PR_ICMS_W='||ds_pr_icms_w);

			end;

		end if;

		/* Campo opcional */

		if ((trim(both ds_pr_ipi_w) IS NOT NULL AND (trim(both ds_pr_ipi_w))::text <> '')) then
			begin

				pr_ipi_w := trunc((trim(both ds_pr_ipi_w))::numeric  / 100,4);

			exception
			when others then

				/* Percentual IPI inválido na linha nr_seq_item_w (posição 365)!
				Percentual IPI: ds_pr_ipi_w */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(316915,
									'NR_SEQ_ITEM_W='||nr_seq_item_w||';'||
									'DS_PR_IPI_W='||ds_pr_ipi_w);

			end;

		end if;

		/* Campo opcional */

		if ((trim(both ds_qt_peso_item_w) IS NOT NULL AND (trim(both ds_qt_peso_item_w))::text <> '')) then
			begin

				qt_peso_item_w := trunc((trim(both ds_qt_peso_item_w))::numeric  / 10000,4);

			exception
			when others then

				/* Peso do item inválido na linha nr_seq_item_w (posição 371)!
				Peso do item: ds_qt_peso_item_w */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(316916,
									'NR_SEQ_ITEM_W='||nr_seq_item_w||';'||
									'DS_QT_PESO_ITEM_W='||ds_qt_peso_item_w);

			end;

		end if;

		/* Campo opcional */

		if ((trim(both ds_vl_desconto_w) IS NOT NULL AND (trim(both ds_vl_desconto_w))::text <> '')) then
			begin

				vl_desconto_w := trunc((trim(both ds_vl_desconto_w))::numeric  / 1000,4);

			exception
			when others then

				/* Valor de desconto inválido na linha nr_seq_item_w (posição 396)!
				Valor de desconto: ds_vl_desconto_w */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(316918,
									'NR_SEQ_ITEM_W='||nr_seq_item_w||';'||
									'DS_VL_DESCONTO_W='||ds_vl_desconto_w);

			end;

		end if;

		/* Campo opcional */

		if ((trim(both ds_vl_ipi_w) IS NOT NULL AND (trim(both ds_vl_ipi_w))::text <> '')) then
			begin

				vl_ipi_w := trunc((trim(both ds_vl_ipi_w))::numeric  / 100,4);

			exception
			when others then

				/* Valor do IPI inválido na linha nr_seq_item_w (posição 406)!
				Valor do IPI: ds_vl_ipi_w */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(316919,
									'NR_SEQ_ITEM_W='||nr_seq_item_w||';'||
									'DS_VL_IPI_W='||ds_vl_ipi_w);

			end;

		end if;

		/* Campo opcional */

		if ((trim(both ds_vl_icms_w) IS NOT NULL AND (trim(both ds_vl_icms_w))::text <> '')) then
			begin

				vl_icms_w := trunc((trim(both ds_vl_icms_w))::numeric  / 100,4);

			exception
			when others then

				/* Valor do ICMS inválido na linha nr_seq_item_w (posição 421)!
				Valor do ICMS: ds_vl_icms_w */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(316921,
									'NR_SEQ_ITEM_W='||nr_seq_item_w||';'||
									'DS_VL_ICMS_W='||ds_vl_icms_w);

			end;

		end if;

		/* Campo opcional */

		if ((trim(both ds_vl_unitario_outra_moeda_w) IS NOT NULL AND (trim(both ds_vl_unitario_outra_moeda_w))::text <> '')) then
			begin

				vl_unitario_outra_moeda_w := trunc((trim(both ds_vl_unitario_outra_moeda_w))::numeric  / 100000000,4);

			exception
			when others then

				/* Preço informado 2ª moeda inválido na linha nr_seq_item_w (posição 519)!
				Preço informado 2ª moeda: ds_vl_unitario_outra_moeda_w */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(316923,
									'NR_SEQ_ITEM_W='||nr_seq_item_w||';'||
									'DS_VL_UNITARIO_OUTRA_MOEDA_W='||ds_vl_unitario_outra_moeda_w);

			end;

		end if;

		/* Campo opcional */

		if ((trim(both ds_vl_iss_w) IS NOT NULL AND (trim(both ds_vl_iss_w))::text <> '')) then
			begin

				vl_iss_w := trunc((trim(both ds_vl_iss_w))::numeric  / 100,4);

			exception
			when others then

				/* Valor do ISS inválido na linha nr_seq_item_w (posição 602)!
				Valor do ISS: ds_vl_iss_w */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(316925,
									'NR_SEQ_ITEM_W='||nr_seq_item_w||';'||
									'DS_VL_ISS_W='||ds_vl_iss_w);

			end;

		end if;

		/* Campo opcional */

		if ((trim(both ds_vl_produto_w) IS NOT NULL AND (trim(both ds_vl_produto_w))::text <> '')) then
			begin

				vl_produto_w := trunc((trim(both ds_vl_produto_w))::numeric  / 10000000,4);

			exception
			when others then

				/* Valor do produto inválido na linha nr_seq_item_w (posição 617)!
				Valor do produto: ds_vl_produto_w */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(316928,
									'NR_SEQ_ITEM_W='||nr_seq_item_w||';'||
									'DS_VL_PRODUTO_W='||ds_vl_produto_w);

			end;

		end if;

		/* Campo opcional */

		if ((trim(both ds_vl_subst_tributaria_w) IS NOT NULL AND (trim(both ds_vl_subst_tributaria_w))::text <> '')) then
			begin

				vl_subst_tributaria_w := trunc((trim(both ds_vl_subst_tributaria_w))::numeric  / 100,4);

			exception
			when others then

				/* Valor da substituição tributária inválido na linha nr_seq_item_w (posição 640)!
				Valor da substituição tributária: ds_vl_subst_tributaria_w */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(316929,
									'NR_SEQ_ITEM_W='||nr_seq_item_w||';'||
									'DS_VL_SUBST_TRIBUTARIA_W='||ds_vl_subst_tributaria_w);

			end;

		end if;

		/* Campo opcional */

		if ((trim(both ds_vl_base_ipi_w) IS NOT NULL AND (trim(both ds_vl_base_ipi_w))::text <> '')) then
			begin

				vl_base_ipi_w := trunc((trim(both ds_vl_base_ipi_w))::numeric  / 100,4);

			exception
			when others then

				/* Valor base do IPI inválido na linha nr_seq_item_w (posição 665)!
				Valor base do IPI: ds_vl_base_ipi_w */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(316931,
									'NR_SEQ_ITEM_W='||nr_seq_item_w||';'||
									'DS_VL_BASE_IPI_W='||ds_vl_base_ipi_w);

			end;

		end if;

		/* Campo opcional */

		if ((trim(both ds_vl_base_icms_w) IS NOT NULL AND (trim(both ds_vl_base_icms_w))::text <> '')) then
			begin

				vl_base_icms_w := trunc((trim(both ds_vl_base_icms_w))::numeric  / 100,4);

			exception
			when others then

				/* Valor base do ICMS inválido na linha nr_seq_item_w (posição 680)!
				Valor base do ICMS: ds_vl_base_icms_w */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(316932,
									'NR_SEQ_ITEM_W='||nr_seq_item_w||';'||
									'DS_VL_BASE_ICMS_W='||ds_vl_base_icms_w);

			end;

		end if;

		/* Campo opcional */

		if ((trim(both ds_vl_custo_item_w) IS NOT NULL AND (trim(both ds_vl_custo_item_w))::text <> '')) then
			begin

				vl_custo_item_w := trunc((trim(both ds_vl_custo_item_w))::numeric  / 100000000,4);

			exception
			when others then

				/* Valor de custo do item inválido na linha nr_seq_item_w (posição 695)!
				Valor de custo do item: ds_vl_custo_item_w */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(316934,
									'NR_SEQ_ITEM_W='||nr_seq_item_w||';'||
									'DS_VL_CUSTO_ITEM_W='||ds_vl_custo_item_w);

			end;

		end if;

		/* Campo opcional */

		if ((trim(both ds_qt_volume_item_w) IS NOT NULL AND (trim(both ds_qt_volume_item_w))::text <> '')) then
			begin

				qt_volume_item_w := (trim(both ds_qt_volume_item_w))::numeric;

			exception
			when others then

				/* Volume do item inválido na linha nr_seq_item_w (posição 718)!
				Volume do item: ds_qt_volume_item_w */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(316936,
									'NR_SEQ_ITEM_W='||nr_seq_item_w||';'||
									'DS_QT_VOLUME_ITEM_W='||ds_qt_volume_item_w);

			end;

		end if;

		/* Campo opcional */

		if ((trim(both ds_pr_inss_w) IS NOT NULL AND (trim(both ds_pr_inss_w))::text <> '')) then
			begin

				pr_inss_w := trunc((trim(both ds_pr_inss_w))::numeric  / 100,4);

			exception
			when others then

				/* Percentual INSS inválido na linha nr_seq_item_w (posição 723)!
				Percentual INSS: ds_pr_inss_w */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(316937,
									'NR_SEQ_ITEM_W='||nr_seq_item_w||';'||
									'DS_PR_INSS_W='||ds_pr_inss_w);

			end;

		end if;

		/* Campo opcional */

		if ((trim(both ds_vl_inss_w) IS NOT NULL AND (trim(both ds_vl_inss_w))::text <> '')) then
			begin

				vl_inss_w := trunc((trim(both ds_vl_inss_w))::numeric  / 100,4);

			exception
			when others then

				/* Valor do INSS inválido na linha nr_seq_item_w (posição 723)!
				Valor do INSS: ds_pr_inss_w */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(316938,
									'NR_SEQ_ITEM_W='||nr_seq_item_w||';'||
									'DS_VL_INSS_W='||ds_vl_inss_w);

			end;

		end if;

		/* Campo opcional */

		if ((trim(both ds_vl_custo_outra_moeda_w) IS NOT NULL AND (trim(both ds_vl_custo_outra_moeda_w))::text <> '')) then
			begin

				vl_custo_outra_moeda_w := trunc((trim(both ds_vl_custo_outra_moeda_w))::numeric  / 100000000,4);

			exception
			when others then

				/* Custo 2ª moeda inválido na linha nr_seq_item_w (posição 741)!
				Custo 2ª moeda: ds_vl_custo_outra_moeda_w */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(316940,
									'NR_SEQ_ITEM_W='||nr_seq_item_w||';'||
									'DS_VL_CUSTO_OUTRA_MOEDA_W='||ds_vl_custo_outra_moeda_w);

			end;

		end if;

		/* Campo obrigatório */

		begin

			nr_atendimento_w := (trim(both ds_nr_atendimento_w))::numeric;

		exception
		when others then

			/* Número do atendimento inválido na linha nr_seq_item_w (posição 287)!
			Número do atendimento inválido: ds_nr_atendimento_w */
			CALL wheb_mensagem_pck.exibir_mensagem_abort(316941,
								'NR_SEQ_ITEM_W='||nr_seq_item_w||';'||
								'DS_NR_ATENDIMENTO_W='||ds_nr_atendimento_w);

		end;

		insert	into w_imp_nota_fiscal_item(cd_material,
			ds_material,
			cd_unidade_medida,
			qt_material,
			cd_classif_fiscal_ipi,
			vl_unitario,
			vl_incidencia_icms,
			pr_icms,
			pr_ipi,
			qt_peso_item,
			cd_embalagem,
			vl_desconto,
			vl_ipi,
			vl_icms,
			vl_unitario_outra_moeda,
			ds_observacao,
			vl_iss,
			vl_produto,
			vl_subst_tributaria,
			vl_base_ipi,
			vl_base_icms,
			vl_custo_item,
			qt_volume_item,
			pr_inss,
			vl_inss,
			vl_custo_outra_moeda,
			cd_centro_custo,
			cd_paciente,
			nr_atendimento,
			ds_lamina,
			nr_matricula_paciente,
			nm_paciente,
			dt_atualizacao,
			dt_atualizacao_nrec,
			nm_usuario,
			nm_usuario_nrec,
			nr_seq_nota,
			nr_sequencia)
		values (cd_material_w,
			ds_material_w,
			cd_unidade_medida_w,
			qt_material_w,
			cd_classif_fiscal_ipi_w,
			vl_unitario_w,
			vl_incidencia_icms_w,
			pr_icms_w,
			pr_ipi_w,
			qt_peso_item_w,
			cd_embalagem_w,
			vl_desconto_w,
			vl_ipi_w,
			vl_icms_w,
			vl_unitario_outra_moeda_w,
			ds_observacao_item_w,
			vl_iss_w,
			vl_produto_w,
			vl_subst_tributaria_w,
			vl_base_ipi_w,
			vl_base_icms_w,
			vl_custo_item_w,
			qt_volume_item_w,
			pr_inss_w,
			vl_inss_w,
			vl_custo_outra_moeda_w,
			cd_centro_custo_w,
			cd_paciente_w,
			nr_atendimento_w,
			ds_lamina_w,
			nr_matricula_paciente_w,
			nm_paciente_w,
			clock_timestamp(),
			clock_timestamp(),
			nm_usuario_p,
			nm_usuario_p,
			nr_seq_nota_w,
			nextval('w_imp_nota_fiscal_item_seq'));

	end	loop;
	close	c02;

	open	c03;
	loop
	fetch	c03 into
		ds_mensagem_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */

		insert	into w_imp_mensagem_boleto(ds_mensagem,
			dt_atualizacao,
			dt_atualizacao_nrec,
			nm_usuario,
			nm_usuario_nrec,
			nr_seq_nota,
			nr_sequencia)
		values (ds_mensagem_w,
			clock_timestamp(),
			clock_timestamp(),
			nm_usuario_p,
			nm_usuario_p,
			nr_seq_nota_w,
			nextval('w_imp_mensagem_boleto_seq'));

	end	loop;
	close	c03;

end	loop;
close	c01;

update	w_imp_lote_nota_fiscal
set	dt_ultima_imp	= clock_timestamp(),
	nm_usuario	= nm_usuario_p,
	dt_atualizacao	= clock_timestamp()
where	nr_sequencia	= nr_seq_lote_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importar_lote_fatura (nr_seq_lote_p bigint, nm_usuario_p text) FROM PUBLIC;

