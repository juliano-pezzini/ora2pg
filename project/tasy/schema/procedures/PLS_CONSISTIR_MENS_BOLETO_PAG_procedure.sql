-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_mens_boleto_pag ( nr_seq_pagador_p bigint, nr_seq_lote_p bigint, nr_seq_mensalidade_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

			 
ie_endereco_boleto_w		varchar(10);
cd_pessoa_fisica_w		varchar(10);
cd_cgc_w			varchar(14);
qt_registros_w			bigint;
dt_referencia_w			timestamp;
nr_seq_tipo_compl_adic_w	bigint;
ds_tipo_compl_adic_w		varchar(255);


BEGIN 
 
select	trunc(dt_referencia,'Month') 
into STRICT	dt_referencia_w 
from	pls_mensalidade 
where	nr_sequencia	= nr_seq_mensalidade_p;
 
/*aaschlote 04/02/2013 OS 547766 - Consistir apenas se tiver beneficiário ativo*/
 
select	count(1) 
into STRICT	qt_registros_w 
from	pls_segurado 
where	nr_seq_pagador	= nr_seq_pagador_p 
and	((coalesce(dt_rescisao::text, '') = '') or (trunc(dt_rescisao,'Month')	> dt_referencia_w and trunc(dt_rescisao,'dd') <> trunc(dt_contratacao,'dd')))  LIMIT 1;
 
if (qt_registros_w = 0) then 
	goto final;
end if;
 
select	ie_endereco_boleto, 
	cd_pessoa_fisica, 
	cd_cgc, 
	nr_seq_tipo_compl_adic 
into STRICT	ie_endereco_boleto_w, 
	cd_pessoa_fisica_w, 
	cd_cgc_w, 
	nr_seq_tipo_compl_adic_w 
from	pls_contrato_pagador 
where	nr_sequencia	= nr_seq_pagador_p;
 
 
if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then 
	if (ie_endereco_boleto_w = 'PFC') then 
		select	count(1) 
		into STRICT	qt_registros_w 
		from	compl_pessoa_fisica 
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
		and	ie_tipo_complemento	= 2;
		 
		if (qt_registros_w = 0) then 
			CALL pls_gerar_mens_log_erro(nr_seq_lote_p,nr_seq_pagador_p,null,nr_seq_mensalidade_p, 
								'Pagador não possui endereço comercial',cd_estabelecimento_p,nm_usuario_p);
		end if;
	elsif (ie_endereco_boleto_w = 'PFR') then 
		select	count(1) 
		into STRICT	qt_registros_w 
		from	compl_pessoa_fisica 
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
		and	ie_tipo_complemento	= 1;
		 
		if (qt_registros_w = 0) then 
			CALL pls_gerar_mens_log_erro(nr_seq_lote_p,nr_seq_pagador_p,null,nr_seq_mensalidade_p, 
								'Pagador não possui endereço residencial',cd_estabelecimento_p,nm_usuario_p);
		end if;
	elsif (ie_endereco_boleto_w = 'PFA') then 
		select	count(1) 
		into STRICT	qt_registros_w 
		from	compl_pessoa_fisica 
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
		and	ie_tipo_complemento	= 9 
		and	((nr_seq_tipo_compl_adic = nr_seq_tipo_compl_adic_w) or (coalesce(nr_seq_tipo_compl_adic_w,0) = 0));
		 
		if (qt_registros_w = 0) then 
			select	max(ds_tipo_complemento) 
			into STRICT	ds_tipo_compl_adic_w 
			from	tipo_complemento_adicional 
			where	nr_sequencia	= nr_seq_tipo_compl_adic_w;
			 
			CALL pls_gerar_mens_log_erro(nr_seq_lote_p,nr_seq_pagador_p,null,nr_seq_mensalidade_p, 
								'Pagador não possui endereço adicional'||ds_tipo_compl_adic_w,cd_estabelecimento_p,nm_usuario_p);
		end if;
	elsif (ie_endereco_boleto_w = 'PFV') then 
		select	count(*) 
		into STRICT	qt_registros_w 
		from	compl_pessoa_fisica 
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
		and	ie_tipo_complemento	= 3;
		 
		if (qt_registros_w = 0) then 
			CALL pls_gerar_mens_log_erro(nr_seq_lote_p,nr_seq_pagador_p,null,nr_seq_mensalidade_p, 
								'Pagador não possui endereço de responsável',cd_estabelecimento_p,nm_usuario_p);
		end if;	
	elsif (ie_endereco_boleto_w = 'PFP') then 
		select	count(*) 
		into STRICT	qt_registros_w 
		from	compl_pessoa_fisica 
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
		and	ie_tipo_complemento	= 4;
		 
		if (qt_registros_w = 0) then 
			CALL pls_gerar_mens_log_erro(nr_seq_lote_p,nr_seq_pagador_p,null,nr_seq_mensalidade_p, 
								'Pagador não possui endereço de pai',cd_estabelecimento_p,nm_usuario_p);
		end if;	
	elsif (ie_endereco_boleto_w = 'PFM') then 
		select	count(*) 
		into STRICT	qt_registros_w 
		from	compl_pessoa_fisica 
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
		and	ie_tipo_complemento	= 5;
		 
		if (qt_registros_w = 0) then 
			CALL pls_gerar_mens_log_erro(nr_seq_lote_p,nr_seq_pagador_p,null,nr_seq_mensalidade_p, 
								'Pagador não possui endereço de mãe',cd_estabelecimento_p,nm_usuario_p);
		end if;	
	elsif (ie_endereco_boleto_w = 'PFJ') then 
		select	count(*) 
		into STRICT	qt_registros_w 
		from	compl_pessoa_fisica 
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
		and	ie_tipo_complemento	= 6;
		 
		if (qt_registros_w = 0) then 
			CALL pls_gerar_mens_log_erro(nr_seq_lote_p,nr_seq_pagador_p,null,nr_seq_mensalidade_p, 
								'Pagador não possui endereço de cônjuge',cd_estabelecimento_p,nm_usuario_p);
		end if;				
	end if;
elsif (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then 
	if (ie_endereco_boleto_w = 'PJA') then 
		select	count(1) 
		into STRICT	qt_registros_w 
		from	pessoa_juridica_compl 
		where	cd_cgc	= cd_cgc_w 
		and	ie_tipo_complemento	= 6;
		 
		if (qt_registros_w = 0) then 
			CALL pls_gerar_mens_log_erro(nr_seq_lote_p,nr_seq_pagador_p,null,nr_seq_mensalidade_p, 
								'Pagador não possui endereço de atendimento',cd_estabelecimento_p,nm_usuario_p);
		end if;
	 
	elsif (ie_endereco_boleto_w = 'PJC') then 
		select	count(1) 
		into STRICT	qt_registros_w 
		from	pessoa_juridica_compl 
		where	cd_cgc	= cd_cgc_w 
		and	ie_tipo_complemento	= 1;
		 
		if (qt_registros_w = 0) then 
			CALL pls_gerar_mens_log_erro(nr_seq_lote_p,nr_seq_pagador_p,null,nr_seq_mensalidade_p, 
								'Pagador não possui endereço correspondência',cd_estabelecimento_p,nm_usuario_p);
		end if;
	elsif (ie_endereco_boleto_w = 'PJF') then 
		select	count(1) 
		into STRICT	qt_registros_w 
		from	pessoa_juridica_compl 
		where	cd_cgc	= cd_cgc_w 
		and	ie_tipo_complemento	in (2,3);
		 
		if (qt_registros_w = 0) then 
			CALL pls_gerar_mens_log_erro(nr_seq_lote_p,nr_seq_pagador_p,null,nr_seq_mensalidade_p, 
								'Pagador não possui endereço financeiro ou de cobrança',cd_estabelecimento_p,nm_usuario_p);
		end if;
	end if;
end if;
 
<<final>> 
qt_registros_w	:= 0;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_mens_boleto_pag ( nr_seq_pagador_p bigint, nr_seq_lote_p bigint, nr_seq_mensalidade_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

