-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE enviar_lote_audit_hist (nr_seq_lote_p bigint, ie_acao_p text, nm_usuario_p text, nr_seq_trans_financ_p bigint, dt_envio_p timestamp) AS $body$
DECLARE


/*
 ie_acao_p
        'E' - enviar
        'D' - Desfazer envio
*/
qt_dias_reapresentacao_w	bigint;
qt_dias_reap_estab_w		bigint;
cd_convenio_w			bigint;
nr_seq_nota_credito_w		bigint;
qt_titulo_w			bigint;
vl_nota_credito_w		double precision;
cd_estabelecimento_w		smallint;
nr_seq_motivo_w			bigint;
cd_moeda_w			integer;
cd_tipo_taxa_juro_w		bigint;
cd_tipo_taxa_multa_w		bigint;
cd_cgc_w			varchar(14);
cd_cgc_solic_nc_w		varchar(14);
cd_pf_solic_nc_w		varchar(10);
cd_centro_custo_w		bigint;
vl_classif_w			double precision;
nr_seq_trans_financ_w		bigint;
cd_estabelecimento_nc_w		smallint;
cd_centro_custo_nc_w		integer;
qt_dia_venc_tit_grg_w		integer;
nr_titulo_w			bigint;
nr_seq_lote_audit_w		bigint;
dt_vencimento_w			timestamp;
ie_atualizar_dt_previsto_w	varchar(1);
ie_baixa_etapas_w		varchar(1) := 'N';
ie_tratar_nota_credito_w	varchar(1);
ie_vencimento_w varchar(1) := 'N';
vl_saldo_original_w		double precision;
ie_considerar_repasse_w   varchar(1);

c01 CURSOR FOR
SELECT	b.nr_sequencia
from	nota_credito b
where	b.nr_seq_lote_audit_hist	= nr_seq_lote_p;

c02 CURSOR FOR
SELECT	w.cd_centro_custo,
	coalesce(sum(w.vl_glosa),0)
from	(
	SELECT	b.cd_centro_custo,
		a.vl_glosa
	from	setor_atendimento b,
		procedimento_paciente d,
		lote_audit_hist_item a,
		lote_audit_hist_guia c
	where	c.nr_seq_lote_hist		= nr_seq_lote_p	
	and	c.nr_sequencia			= a.nr_seq_guia
	and	a.vl_glosa			> 0
	and	a.nr_seq_propaci		= d.nr_sequencia
	and	d.cd_setor_atendimento		= b.cd_setor_atendimento
	and	cd_estabelecimento_nc_w		= cd_estabelecimento_w
	and	coalesce(ie_baixa_etapas_w,'N')	= 'S'
	and	coalesce(c.vl_saldo_original,0)	<
						(select	coalesce(sum(x.vl_glosa),0)
						from	lote_audit_hist_item x
						where	x.nr_seq_guia	= c.nr_sequencia)
	
union all

	select	b.cd_centro_custo,
		a.vl_glosa
	from	setor_atendimento b,
		material_atend_paciente d,
		lote_audit_hist_item a,
		lote_audit_hist_guia c
	where	c.nr_seq_lote_hist		= nr_seq_lote_p	
	and	c.nr_sequencia			= a.nr_seq_guia
	and	a.vl_glosa			> 0
	and	a.nr_seq_matpaci		= d.nr_sequencia
	and	d.cd_setor_atendimento		= b.cd_setor_atendimento
	and	cd_estabelecimento_nc_w		= cd_estabelecimento_w
	and	coalesce(ie_baixa_etapas_w,'N')	= 'S'
	and	coalesce(c.vl_saldo_original,0)	<
						(select	coalesce(sum(x.vl_glosa),0)
						from	lote_audit_hist_item x
						where	x.nr_seq_guia	= c.nr_sequencia)
	
union all

	select	cd_centro_custo_nc_w,
		a.vl_glosa
	from	lote_audit_hist_item a,
		lote_audit_hist_guia c
	where	c.nr_seq_lote_hist		= nr_seq_lote_p	
	and	c.nr_sequencia			= a.nr_seq_guia
	and	a.vl_glosa			> 0
	and	cd_estabelecimento_nc_w		<> cd_estabelecimento_w
	and	coalesce(ie_baixa_etapas_w,'N')	= 'S'
	and	coalesce(c.vl_saldo_original,0)	<
						(select	coalesce(sum(x.vl_glosa),0)
						from	lote_audit_hist_item x
						where	x.nr_seq_guia	= c.nr_sequencia)
	
union all

	select	b.cd_centro_custo,
		a.vl_glosa
	from	setor_atendimento b,
		procedimento_paciente d,
		lote_audit_hist_item a,
		lote_audit_hist_guia c
	where	c.nr_seq_lote_hist	= nr_seq_lote_p
	and	coalesce(c.vl_saldo_guia,0)	= 0
	and	c.nr_sequencia		= a.nr_seq_guia
	and	a.vl_glosa		> 0
	and	a.nr_seq_propaci	= d.nr_sequencia
	and	d.cd_setor_atendimento	= b.cd_setor_atendimento
	and	cd_estabelecimento_nc_w	= cd_estabelecimento_w
	and	coalesce(ie_baixa_etapas_w,'N')	= 'N'
	
union all

	select	b.cd_centro_custo,
		a.vl_glosa
	from	setor_atendimento b,
		material_atend_paciente d,
		lote_audit_hist_item a,
		lote_audit_hist_guia c
	where	c.nr_seq_lote_hist	= nr_seq_lote_p
	and	coalesce(c.vl_saldo_guia,0)	= 0
	and	c.nr_sequencia		= a.nr_seq_guia
	and	a.vl_glosa		> 0
	and	a.nr_seq_matpaci	= d.nr_sequencia
	and	d.cd_setor_atendimento	= b.cd_setor_atendimento
	and	cd_estabelecimento_nc_w	= cd_estabelecimento_w
	and	coalesce(ie_baixa_etapas_w,'N')	= 'N'
	
union all

	select	cd_centro_custo_nc_w,
		a.vl_glosa
	from	lote_audit_hist_item a,
		lote_audit_hist_guia c
	where	c.nr_seq_lote_hist	= nr_seq_lote_p
	and	coalesce(c.vl_saldo_guia,0)	= 0
	and	c.nr_sequencia		= a.nr_seq_guia
	and	a.vl_glosa		> 0
	and	cd_estabelecimento_nc_w	<> cd_estabelecimento_w
	and	coalesce(ie_baixa_etapas_w,'N')	= 'N'
	) w
where	(w.cd_centro_custo IS NOT NULL AND w.cd_centro_custo::text <> '')		
group by	w.cd_centro_custo;

c03 CURSOR FOR
SELECT	distinct
	(obter_titulo_conta_guia(a.nr_interno_conta,a.cd_autorizacao,null,null))::numeric  nr_titulo
from	lote_audit_hist_guia a
where	a.nr_seq_lote_hist	= nr_seq_lote_p;


BEGIN

select	a.cd_estabelecimento,
	c.cd_cgc,
	c.cd_convenio,
	a.nr_sequencia
into STRICT	cd_estabelecimento_w,
	cd_cgc_w,
	cd_convenio_w,
	nr_seq_lote_audit_w
from	convenio c,
	lote_auditoria a,
	lote_audit_hist b
where	b.nr_sequencia		= nr_seq_lote_p
and	b.nr_seq_lote_audit	= a.nr_sequencia
and	a.cd_convenio		= c.cd_convenio;

select	coalesce(max(a.nr_seq_tf_cp_grc),max(b.nr_seq_tf_nota_credito)),
	coalesce(max(a.qt_dia_venc_tit_grg),0)
into STRICT	nr_seq_trans_financ_w,
	qt_dia_venc_tit_grg_w
from	parametro_contas_receber b,
	convenio_estabelecimento a
where	a.cd_convenio		= cd_convenio_w
and	a.cd_estabelecimento	= cd_estabelecimento_w
and	b.cd_estabelecimento	= a.cd_estabelecimento;



if (ie_acao_p = 'E') then

	ie_baixa_etapas_w := obter_param_usuario(69, 22, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_baixa_etapas_w);
  ie_considerar_repasse_w := obter_param_usuario(69, 84, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_considerar_repasse_w);

	if (ie_baixa_etapas_w in ('A', 'S')) then
		
		select	coalesce(sum(a.vl_glosa),0),
			    coalesce(max(b.vl_saldo_original),max(b.VL_SALDO_GUIA))
		into STRICT	vl_nota_credito_w,
			    vl_saldo_original_w
		from	lote_audit_hist_item a,
			lote_audit_hist_guia b
		where	b.nr_seq_lote_hist		= nr_seq_lote_p
		and	b.nr_sequencia			= a.nr_seq_guia
		and	coalesce(b.vl_saldo_original,0)	< 
							(SELECT	coalesce(sum(x.vl_glosa),0)
							from	lote_audit_hist_item x
							where	x.nr_seq_guia	= b.nr_sequencia);

    if (coalesce(ie_considerar_repasse_w,'N') = 'S') then 
			vl_nota_credito_w := vl_nota_credito_w - vl_saldo_original_w;						
		end if;

	else 
		select	sum(a.vl_glosa)
		into STRICT	vl_nota_credito_w
		from	lote_audit_hist_item a,
			lote_audit_hist_guia b
		where	b.nr_seq_lote_hist	= nr_seq_lote_p
		and	b.nr_sequencia		= a.nr_seq_guia
		and	coalesce(b.vl_saldo_guia,0)	= 0;	
	end if;
		
	if (vl_nota_credito_w	> 0) then

		begin
		nr_seq_motivo_w := obter_param_usuario(9051, 4, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, nr_seq_motivo_w);
		exception
		when others then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(201059);
		end;
		
		select	max(cd_tipo_taxa_juro),
			max(cd_tipo_taxa_multa),
			max(cd_moeda_padrao)
		into STRICT	cd_tipo_taxa_juro_w,
			cd_tipo_taxa_multa_w,
			cd_moeda_w
		from	parametros_contas_pagar
		where	cd_estabelecimento	= cd_estabelecimento_w;
		
		if (coalesce(nr_seq_trans_financ_p,0) > 0) then
			nr_seq_trans_financ_w	:= nr_seq_trans_financ_p;
		end if;

		select	nextval('nota_credito_seq')
		into STRICT	nr_seq_nota_credito_w
		;

		cd_estabelecimento_nc_w	:= coalesce((obter_estab_cr(cd_estabelecimento_w,'S'))::numeric ,cd_estabelecimento_w);

		insert	into nota_credito(cd_cgc,
			cd_estabelecimento,
			cd_moeda,
			cd_tipo_taxa_juro,
			cd_tipo_taxa_multa,
			dt_atualizacao,
			dt_nota_credito,
			dt_vencimento,
			nm_usuario,
			nr_seq_lote_audit_hist,
			nr_seq_trans_fin_contab,
			nr_sequencia,
			vl_nota_credito,
			vl_saldo,
			ie_origem,
			nr_seq_motivo,
			ie_situacao)
		values (cd_cgc_w,
			cd_estabelecimento_nc_w,
			cd_moeda_w,
			cd_tipo_taxa_juro_w,
			cd_tipo_taxa_multa_w,
			clock_timestamp(),
			clock_timestamp(),
			trunc(clock_timestamp(),'dd') + 30,
			nm_usuario_p,
			nr_seq_lote_p,
			nr_seq_trans_financ_w,
			nr_seq_nota_credito_w,
			vl_nota_credito_w,
			vl_nota_credito_w,
			'C',
			nr_seq_motivo_w,
			'A');

		select	max(a.cd_cgc_solic_nc),
			max(a.cd_pf_solic_nc)
		into STRICT	cd_cgc_solic_nc_w,
			cd_pf_solic_nc_w
		from	parametros_contas_pagar a
		where	a.cd_estabelecimento	= cd_estabelecimento_w;

		if (cd_cgc_solic_nc_w IS NOT NULL AND cd_cgc_solic_nc_w::text <> '') or (cd_pf_solic_nc_w IS NOT NULL AND cd_pf_solic_nc_w::text <> '') then
			insert	into nota_credito_solic(cd_cgc,
				cd_pessoa_fisica,
				dt_atualizacao,
				nm_usuario,
				nr_seq_nota_credito,
				nr_sequencia)
			values (cd_cgc_solic_nc_w,
				cd_pf_solic_nc_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_nota_credito_w,
				nextval('nota_credito_solic_seq'));
		end if;

		if (cd_estabelecimento_nc_w <> cd_estabelecimento_w) then

			cd_centro_custo_nc_w	:= (obter_centro_custo_estab_cr(cd_estabelecimento_w,'S'))::numeric;

			if (coalesce(cd_centro_custo_nc_w::text, '') = '') then

				select	max(a.cd_centro_custo_nc)
				into STRICT	cd_centro_custo_nc_w
				from	parametros_contas_pagar a
				where	a.cd_estabelecimento	= cd_estabelecimento_nc_w;

			end if;

		end if;

		open c02;
		loop
		fetch c02 into
			cd_centro_custo_w,
			vl_classif_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */

			insert	into nota_credito_classif(cd_centro_custo,
				dt_atualizacao,
				nm_usuario,
				nr_seq_nota_credito,
				nr_Sequencia,
				vl_classificacao)
			values (cd_centro_custo_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_nota_credito_w,
				nextval('nota_credito_classif_seq'),
				vl_classif_w);

		end loop;
		close c02;

	end if;
	
	
	select	coalesce(QT_DIAS_REGURSO_GLOSA,0)
	into STRICT	qt_dias_reapresentacao_w
	from	convenio a
	where	a.cd_convenio	= cd_convenio_w;
	
	ie_atualizar_dt_previsto_w := obter_param_usuario(69, 44, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualizar_dt_previsto_w);
	
	if (coalesce(ie_atualizar_dt_previsto_w,'S') = 'S') and (qt_dias_reapresentacao_w > 0) then
	
		update	lote_audit_hist
		set	dt_envio	= coalesce(dt_envio_p,clock_timestamp()),
			dt_ret_previsto	= coalesce(dt_envio_p,clock_timestamp()) + qt_dias_reapresentacao_w,
			ie_status	= 'E',
			nm_usuario_envio	= nm_usuario_p
		where	nr_sequencia	= nr_seq_lote_p;
	
	else
		update	lote_audit_hist
		set	dt_envio	= coalesce(dt_envio_p,clock_timestamp()),
			ie_status	= 'E',
			nm_usuario_envio = nm_usuario_p
		where	nr_Sequencia	= nr_seq_lote_p;
	end if;
	
	if (coalesce(qt_dia_venc_tit_grg_w,0) <> 0) then

		open	c03;
		loop
		fetch	c03 into
			nr_titulo_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin
               select 'S' into STRICT ie_vencimento_w from titulo_receber 
                where	nr_titulo		= nr_titulo_w
                  and   trunc(dt_pagamento_previsto) = trunc(coalesce(dt_envio_p,clock_timestamp()) + qt_dia_venc_tit_grg_w,'dd');
                  exception
                    when no_data_found then
                       CALL alterar_vencimento_tit_rec(	nr_titulo_w,
                               trunc(coalesce(dt_envio_p,clock_timestamp()) + qt_dia_venc_tit_grg_w,'dd'),
                               1,
                               Wheb_mensagem_pck.get_Texto(302013, 'NR_SEQ_LOTE_AUDIT_W='|| NR_SEQ_LOTE_AUDIT_W),
                               nm_usuario_p);
            end;
		end	loop;
		close	c03;

	end if;

elsif (ie_acao_p = 'D') then

	ie_tratar_nota_credito_w := obter_param_usuario(69, 81, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_tratar_nota_credito_w);

	if (coalesce(ie_tratar_nota_credito_w,'E') = 'E') then
			
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_nota_credito_w
		from	nota_credito a
		where	a.nr_seq_lote_audit_hist	= nr_seq_lote_p;
		
		if (nr_seq_nota_credito_w IS NOT NULL AND nr_seq_nota_credito_w::text <> '') then
			select	count(*)
			into STRICT	qt_titulo_w
			from	titulo_pagar a
			where	a.nr_seq_nota_credito	= nr_seq_nota_credito_w;

			if (qt_titulo_w	> 0) then
				CALL desvincular_titulo_pagar_nc(nr_seq_nota_credito_w, null, 'S', nm_usuario_p);
			end if;

			delete	from nota_credito a
			where	a.nr_sequencia	= nr_seq_nota_credito_w;
		end if;

		open c01;
		loop
		fetch c01 into
			nr_seq_nota_credito_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */

			if (nr_seq_nota_credito_w IS NOT NULL AND nr_seq_nota_credito_w::text <> '') then
				select	count(*)
				into STRICT	qt_titulo_w
				from	titulo_pagar a
				where	a.nr_seq_nota_credito	= nr_seq_nota_credito_w;

				if (qt_titulo_w	> 0) then
					CALL desvincular_titulo_pagar_nc(nr_seq_nota_credito_w, null, 'S', nm_usuario_p);
				end if;

				delete	from nota_credito_classif a
				where	a.nr_seq_nota_credito	= nr_seq_nota_credito_w;

				delete	from nota_credito_solic a
				where	a.nr_seq_nota_credito	= nr_seq_nota_credito_w;

				delete	from nota_credito_baixa a
				where	a.nr_seq_nota_credito	= nr_seq_nota_credito_w;

				delete	from nota_credito a
				where	a.nr_sequencia	= nr_seq_nota_credito_w;
			end if;

		end loop;
		close c01;
		
	elsif (coalesce(ie_tratar_nota_credito_w,'E') = 'C') then
	
		open C01;
		loop
		fetch C01 into	
			nr_seq_nota_credito_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			
			CALL Cancelar_nota_credito(nr_seq_nota_credito_w,clock_timestamp(),nm_usuario_p);
			
		end loop;
		close C01;
	
	end if;

	

	update	lote_audit_hist
	set	dt_envio		 = NULL,
		dt_ret_previsto		 = NULL,
		ie_status		= 'F',
		nm_usuario_envio	 = NULL
	where	nr_sequencia	= nr_seq_lote_p;

	if (coalesce(qt_dia_venc_tit_grg_w,0) <> 0) then

		open	c03;
		loop
		fetch	c03 into
			nr_titulo_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */

			select	max(a.dt_vencimento)
			into STRICT	dt_vencimento_w
			from	alteracao_vencimento a
			where	a.nr_titulo	= nr_titulo_w;

			if (dt_vencimento_w IS NOT NULL AND dt_vencimento_w::text <> '') then

				CALL alterar_vencimento_tit_rec(	nr_titulo_w,
							trunc(dt_vencimento_w - qt_dia_venc_tit_grg_w,'dd'),
							1,
							Wheb_mensagem_pck.get_Texto(302013, 'NR_SEQ_LOTE_AUDIT_W='|| NR_SEQ_LOTE_AUDIT_W),
							nm_usuario_p);

			end if;

		end	loop;
		close	c03;

	end if;


end if;

CALL atualizar_valor_lote_recurso(nr_seq_lote_p, ie_acao_p, nm_usuario_p);

/*
	nr_seq_lote_p is the analysis sequence for some reason.
*/
CALL gerar_dashboard_regra(null, null, nr_seq_lote_p);
											
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enviar_lote_audit_hist (nr_seq_lote_p bigint, ie_acao_p text, nm_usuario_p text, nr_seq_trans_financ_p bigint, dt_envio_p timestamp) FROM PUBLIC;

