-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_orcamento_ageint ( nr_seq_orcamento_p bigint, nr_seq_ageint_p bigint, cd_profissional_p text, ie_opcao_p text, nm_usuario_p text, cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_plano_p text, ie_multimed_p text, ds_erro_p INOUT text) AS $body$
DECLARE


nm_paciente_w		varchar(60);
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
dt_validade_w		timestamp;
cd_pessoa_fisica_w	varchar(10);
cd_plano_w		varchar(10);
cd_usuario_convenio_w	varchar(30);
ie_tipo_atendimento_w	smallint;
nr_telefone_w		varchar(60);
dt_nascimento_w		timestamp;
qt_altura_cm_w		real;
nr_seq_agenda_int_w	bigint;
nr_seq_proc_interno_w	bigint;	
nr_seq_agenda_int_item_w bigint;
nr_seq_ageint_check_list_w bigint;
ie_gerar_check_list_w	 varchar(1);
nr_seq_status_w		bigint;
cd_condicao_pagamento_w	bigint;
nr_seq_ageint_w		bigint;
qt_proc_ageint_w	bigint;
nr_seq_orcamento_w	bigint;
vl_medicamento_w	double precision;

ie_adicional_pac_w	varchar(1);
ie_agendavel_pac_w	varchar(1);
nr_seq_proc_princ_pac_w	bigint;
ie_pacote_pac_w		varchar(1);
nr_seq_proc_orc_pac_w	bigint;

nr_seq_proc_interno_pac_w	bigint;
nr_seq_proc_orc_assoc_w	bigint;

nr_seq_orc_proc_pac_w	bigint;
nr_seq_proc_int_pac_w	bigint;
cd_procedimento_pac_w	bigint;
ie_origem_proced_pac_w	bigint;
nr_seq_exame_pac_w	bigint;

nr_seq_orc_proc_Adic_w	bigint;
nr_seq_proc_int_adic_w	bigint;
cd_procedimento_adic_w	bigint;
ie_origem_proced_adic_w	bigint;
nr_seq_exame_adic_w	bigint;

nr_seq_proc_pacote_w	bigint;
nr_seq_ageint_item_pac_w	bigint;
nr_seq_ageint_item_w	bigint;
nr_seq_orc_proc_w	bigint;
ie_pacote_w		varchar(1);

cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_seq_exame_w		bigint;

vl_procedimento_w	double precision;
vl_proc_adic_w		double precision;

nr_proc_orc_assoc_w		bigint;
nr_seq_proc_interno_assoc_w	bigint;
cd_procedimento_assoc_w		bigint;
ie_origem_proced_assoc_w	bigint;
ie_exame_assoc_w		varchar(1);
nr_seq_exame_assoc_w		bigint;

cd_material_w		integer;
vl_material_w		double precision;
nr_seq_orc_mat_Adic_w	bigint;

ie_agendavel_w		varchar(1);
ie_tipo_agendamento_w	varchar(15);
vl_proc_assoc_w		double precision;

ds_aux_w		varchar(10);
ie_regra_w		integer;
nr_seq_regra_w		bigint;
vl_aux_w		double precision;
qt_idade_w		smallint;
ie_sexo_w		varchar(1);
ie_glosa_w		varchar(1);
ds_erro_w		varchar(255);

ie_resp_autor_w		varchar(10);
ie_autorizacao_w	varchar(3);
	
ie_checklist_w		varchar(1);	
cd_edicao_ajuste_w	bigint;
qt_dias_validade_w	bigint;
ds_irrelavante_w	varchar(255);
nr_seq_regra_lanc_aut_w	bigint;


/* NOVAS VARIAVEIS */

ie_tipo_convenio_w	smallint;
nr_seq_conv_item_w		bigint;

cd_procedimento_item_w		bigint;
ie_origem_proced_item_w		bigint;
nr_seq_proc_interno_item_w	bigint;	
nr_seq_orcamento_proc_w		bigint;
ie_gerar_assoc_w		varchar(1);
ie_gerar_lanc_aut_w		varchar(1);

cd_procedimento_lab_w		bigint;
ie_origem_proced_lab_w		bigint;
nr_seq_proc_interno_lab_w	bigint;
nr_seq_exame_lab_w		bigint;

nr_glosa_part_w			bigint;
ie_bloq_glosa_part_w		varchar(1);
ie_gerar_itens_w		varchar(1);

ie_visao_multimed_w		varchar(1);

nr_sequencia_item_w		bigint;
cd_procedimento_item_adic_w	bigint;
ie_origem_proced_item_adic_w	bigint;
nr_seq_proc_int_item_adic_w 	bigint;
ie_glosa_adic_w			varchar(1);
pr_glosa_w			double precision;
vl_glosa_w			double precision;
ie_considera_pacote_w		varchar(1);

nr_seq_pacote_w 		agenda_integrada_item.nr_seq_pacote%type;
nr_seq_pac_tipo_acomod_w	agenda_integrada_item.nr_seq_pac_tipo_acomod%type;
ie_regra_ww 			agenda_integrada_item.ie_regra%type;
cd_protocolo_w			paciente_setor.cd_protocolo%type;
nr_seq_medicacao_w		paciente_setor.nr_seq_medicacao%type;
ie_gera_med_quimio_w 		varchar(1);
cd_medico_solicitante_w		orcamento_paciente.cd_medico%type;
cd_tipo_acomodacao_w		orcamento_paciente.cd_tipo_acomodacao%type;
ds_observacao_w			orcamento_paciente.ds_observacao%type;
qt_peso_w			orcamento_paciente.qt_peso%type;
qt_altura_w			orcamento_paciente.qt_altura%type;
ie_lado_w			orcamento_paciente_proc.ie_lado%type;

cd_procedimento_itens_adic_w	ageint_itens_adicionais.cd_procedimento%type;
ie_origem_proced_itens_adic_w	ageint_itens_adicionais.ie_origem_proced%type;
nr_seq_proc_int_itens_adic_w	ageint_itens_adicionais.nr_seq_proc_interno%type;
ie_glosa_itens_adic_w			ageint_itens_adicionais.ie_glosa%type;

/* */

/*
itens do orcamento que nao sao adicionais e nao sao gerados a partir de outro item
*/
C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_proc_interno,
		cd_procedimento,
		ie_origem_proced,
		coalesce(ie_pacote,'N'),
		vl_procedimento,
		coalesce(ie_agendavel,'N'),
		nr_seq_exame
	from	orcamento_paciente_proc
	where	nr_sequencia_orcamento	= nr_seq_orcamento_p
	and	coalesce(ie_adicional, 'N')	= 'N'
	and	coalesce(ie_exame_assoc, 'N')	= 'N'
	and	coalesce(nr_seq_proc_princ::text, '') = ''
	order by 1;

/*
itens do orcamento que sao agendaveis e sao gerados a partir de um item de pacote
*/
C02 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_proc_interno,
		cd_procedimento,
		ie_origem_proced,
		nr_seq_exame
	from	orcamento_paciente_proc
	where	nr_sequencia_orcamento	= nr_seq_orcamento_p
	and	nr_seq_proc_princ	= nr_seq_orc_proc_w
	and	coalesce(ie_adicional,'N')	= 'N'
	and	coalesce(ie_pacote,'N')	= 'S'
	and	coalesce(ie_agendavel,'N')	= 'S'
	and	coalesce(ie_exame_assoc, 'N')	= 'N'
	order by 1;

/*
itens adicionais gerados a partir dos itens gerados atraves de pacote
*/
C03 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_proc_interno,
		cd_procedimento,
		ie_origem_proced,
		vl_procedimento,
		nr_seq_exame
	from	orcamento_paciente_proc
	where	nr_sequencia_orcamento	= nr_seq_orcamento_p
	and	nr_seq_proc_princ	= nr_seq_orc_proc_pac_w
	and	coalesce(ie_adicional,'N')	= 'S'
	and	coalesce(ie_exame_assoc, 'N')	= 'N'
	order by 1;

C06 CURSOR FOR
	SELECT	nr_sequencia,
		cd_material,
		vl_material
	from	orcamento_paciente_mat
	where	nr_sequencia_orcamento	= nr_seq_orcamento_p
	and	nr_seq_proc_princ	= nr_seq_orc_proc_pac_w
	and	coalesce(ie_adicional,'N')	= 'S'
	order by 1;
/*
itens adicionais gerados a partir de um item que nao e um pacote
*/
C04 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_proc_interno,
		cd_procedimento,
		ie_origem_proced,
		vl_procedimento,
		nr_seq_regra_lanc,
		nr_seq_exame
	from	orcamento_paciente_proc
	where	nr_sequencia_orcamento	= nr_seq_orcamento_p
	and	nr_seq_proc_princ	= nr_seq_orc_proc_w
	and	coalesce(ie_adicional,'N')	= 'S'
	and	coalesce(ie_exame_assoc, 'N') = 'N'
	order by 1;

C07 CURSOR FOR
	SELECT	nr_sequencia,
		cd_material,
		vl_material
	from	orcamento_paciente_mat
	where	nr_sequencia_orcamento	= nr_seq_orcamento_p
	and	nr_seq_proc_princ	= nr_seq_orc_proc_w
	and	coalesce(ie_adicional,'N')	= 'S'
	order by 1;

C05 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_proc_interno,
		cd_procedimento,
		ie_origem_proced,
		ie_exame_assoc,
		vl_procedimento,
		nr_seq_exame
	from	orcamento_paciente_proc
	where	nr_sequencia_orcamento	= nr_seq_orcamento_p
	and	nr_seq_proc_princ	= nr_seq_orc_proc_w
	and	coalesce(ie_exame_assoc, 'N')	<> 'N'
	order by 1;
	
	
/* NOVOS CURSORES */
	
C10 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		nr_seq_proc_interno,
		ie_glosa,
		ie_lado
	from	agenda_integrada_item
	where	nr_seq_agenda_int = nr_seq_ageint_p
	and		ie_tipo_agendamento <> 'Q'
	and ((ie_considera_pacote_w = 'S' and coalesce(nr_seq_pacote::text, '') = '') or (ie_considera_pacote_w = 'N'));
	
C15 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		nr_seq_proc_interno,
		ie_glosa,
		ie_lado
	from	ageint_exame_adic_item
	where	nr_seq_item = nr_sequencia_item_w;

C20 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		nr_seq_proc_interno,
		nr_seq_exame,
		ie_glosa
	from	ageint_exame_lab
	where	nr_seq_ageint = nr_seq_ageint_p;
	
C30 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		nr_seq_proc_interno,
		ie_glosa,
		ie_lado,
		ie_regra
	from	agenda_integrada_item
	where	nr_seq_agenda_int = nr_seq_ageint_p
	and ((ie_considera_pacote_w = 'S' and coalesce(nr_seq_pacote::text, '') = '') or (ie_considera_pacote_w = 'N'));
	
C40 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		nr_seq_proc_interno,
		nr_seq_exame,
		ie_glosa
	from	ageint_exame_lab
	where	nr_seq_ageint = nr_seq_ageint_p
	and	((coalesce(ie_regra,0) in (1,2,5,nr_glosa_part_w)) or (coalesce(ie_glosa,'X') = 'T') or (coalesce(ie_glosa,'X') = 'G'));
	
C50 CURSOR FOR
	SELECT	nr_seq_pacote,
		nr_seq_pac_tipo_acomod
	FROM	agenda_integrada_item
	WHERE 	nr_seq_agenda_int = nr_seq_ageint_p
	AND 	(nr_seq_pacote IS NOT NULL AND nr_seq_pacote::text <> '')
	AND 	(nr_seq_pac_tipo_acomod IS NOT NULL AND nr_seq_pac_tipo_acomod::text <> '')
	ORDER BY 1,2;
	
C60 CURSOR FOR
	SELECT	distinct b.cd_protocolo,
			b.nr_seq_medicacao
	from	agenda_integrada_item a,
			paciente_setor b,
			paciente_atendimento c
	where	nr_seq_Agenda_int	= nr_seq_ageint_p
	and		ie_tipo_agendamento	 = 'Q'
	and		a.nr_seq_pend_quimio	= c.nr_seq_pend_agenda
	and		b.nr_seq_paciente		= c.nr_seq_paciente;	
	
C70 CURSOR FOR
	SELECT	cd_procedimento,
			ie_origem_proced,
			nr_seq_proc_interno,
			ie_glosa			
	from	ageint_itens_adicionais
	where	nr_seq_ageint_item = nr_sequencia_item_w;
	
/* NOVOS CURSORES */
	


BEGIN

nr_glosa_part_w	:= 99;

ie_bloq_glosa_part_w := obter_param_usuario(869, 187, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_bloq_glosa_part_w);
ie_gerar_itens_w := obter_param_usuario(869, 344, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_itens_w);
ie_considera_pacote_w := obter_param_usuario(869, 421, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_considera_pacote_w);
ie_gera_med_quimio_w := obter_param_usuario(869, 427, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gera_med_quimio_w);

if (ie_bloq_glosa_part_w = 'N') then
	nr_glosa_part_w := 8;
end if;

ds_erro_p	:= '';

if (ie_opcao_p	= 'A') and (ie_gerar_itens_w = 'S') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(243316);
end if;

if (ie_opcao_p	= 'A') then
	select  cd_convenio,
		cd_categoria,
		cd_pessoa_fisica,
		cd_plano,
		dt_validade,
		cd_usuario_convenio,
		ie_tipo_atendimento,
		obter_fone_pac_agenda(cd_pessoa_fisica) nr_telefone,
		obter_dados_pf(cd_pessoa_fisica,'AL') qt_altura_cm,
		substr(obter_nome_pf(cd_pessoa_fisica),1,60) nm_paciente,
		obter_sexo_pf(cd_pessoa_fisica,'C') ie_sexo,
		cd_medico,
		cd_tipo_acomodacao,
		qt_peso,
		qt_altura,
		ds_observacao
	into STRICT	cd_convenio_w,
		cd_categoria_w,
		cd_pessoa_fisica_w,
		cd_plano_w,
		dt_validade_w,
		cd_usuario_convenio_w,
		ie_tipo_atendimento_w,
		nr_telefone_w,
		qt_altura_cm_w,
		nm_paciente_w,
		ie_sexo_w,
		cd_medico_solicitante_w,
		cd_tipo_acomodacao_w,
		qt_peso_w,
		qt_altura_w,
		ds_observacao_w
	from	orcamento_paciente
	where	nr_sequencia_orcamento = nr_seq_orcamento_p;
	
	select max(dt_nascimento)
	into STRICT dt_nascimento_w
	from pessoa_fisica
	where cd_pessoa_fisica = cd_pessoa_fisica_w;

	qt_idade_w	:= obter_idade(dt_nascimento_w, clock_timestamp(), 'A');

	select	coalesce(max(nr_sequencia),nr_seq_ageint_p)
	into STRICT	nr_seq_ageint_w
	from	agenda_integrada
	where	nr_seq_orcamento	= nr_seq_orcamento_p;

	select 	sum(CASE WHEN obter_tipo_material(cd_material, 'C')=1 THEN  vl_material  ELSE 0 END ) vl_material,
		sum(CASE WHEN obter_tipo_material(cd_material, 'C')=1 THEN  0  ELSE vl_material END ) vl_medicamento
	into STRICT	vl_material_w,
		vl_medicamento_w
	from	orcamento_paciente_mat
	where	nr_sequencia_orcamento = nr_seq_orcamento_p;

	if (nr_seq_ageint_w	= 0) then

		select	nextval('agenda_integrada_seq')
		into STRICT	nr_seq_agenda_int_w
		;

		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_status_w
		from	agenda_integrada_status
		where	ie_status_tasy	= 'EA'
		and	coalesce(ie_situacao, 'A')	= 'A';
		
		if (nr_seq_status_w = 0) then
			/*Ra1ise_1applic1ation_1er1ror(-20011,'E necessario possuir cadastro dos status da agenda integrada. Cancelada, Em agendamento e Agendado.');*/

			CALL Wheb_mensagem_pck.exibir_mensagem_abort(218757);
		end if;

		insert into agenda_integrada(nr_sequencia,
					      dt_inicio_agendamento,
					      cd_pessoa_fisica,
					      cd_convenio,
					      cd_categoria,
					      cd_plano,
					      cd_usuario_convenio,
					      ie_tipo_atendimento,
					      nr_telefone,
					      dt_nascimento,
					      qt_altura_cm,
					      cd_estabelecimento,
					      ie_turno,
					      nr_seq_orcamento,
					      dt_atualizacao,
					      nm_usuario,
					      cd_profissional,
					      nr_seq_status,
					      nm_paciente,
					      cd_medico_solicitante,
					      cd_tipo_acomodacao,
					      ie_sexo,
					      qt_peso,
					      ds_observacao)
				values (nr_seq_agenda_int_w,
					      clock_timestamp(),
					      cd_pessoa_fisica_w,
					      cd_convenio_w,
					      cd_categoria_w,
					      cd_plano_w,
					      cd_usuario_convenio_w,
					      ie_tipo_atendimento_w,
					      nr_telefone_w,
					      dt_nascimento_w,
					      coalesce(qt_altura_w, qt_altura_cm_w),
					      cd_estabelecimento_p,
					      '2',
					      nr_seq_orcamento_p,
					      clock_timestamp(),
					      nm_usuario_p,
					      cd_profissional_p,
					      nr_seq_status_w,
					      nm_paciente_w,
					      cd_medico_solicitante_w,
					      cd_tipo_acomodacao_w,
					      ie_sexo_w,
					      qt_peso_w,
					      ds_observacao_w);

			nr_seq_ageint_w	:= nr_seq_agenda_int_w;
	end if;
	
	open C01;
	loop
	fetch C01 into	
		nr_seq_orc_proc_w,
		nr_seq_proc_interno_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		ie_pacote_w,
		vl_procedimento_w,
		ie_agendavel_w,
		nr_seq_exame_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (ie_pacote_w	= 'S') then
			if (coalesce(nr_seq_proc_interno_w::text, '') = '') then
				if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then
					select	coalesce(max(nr_sequencia),0)
					into STRICT	nr_seq_proc_interno_w
					from	proc_interno
					where	cd_procedimento		= cd_procedimento_w
					and	ie_origem_proced	= ie_origem_proced_w;
					
					if (nr_seq_proc_interno_w	= 0) then	
						select	max(nr_Seq_proc_interno)
						into STRICT	nr_Seq_proc_interno_w
						from	proc_interno_conv
						where	cd_procedimento		= cd_procedimento_w
						and	ie_origem_proced	= ie_origem_proced_w;
					end if;
				end if;
			elsif (coalesce(cd_procedimento_w::text, '') = '') or (coalesce(ie_origem_proced_w::text, '') = '') then
				SELECT * FROM obter_proc_tab_interno(nr_seq_proc_interno_w, null, null, null, cd_procedimento_w, ie_origem_proced_w, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;			
			end if;

			if (ie_agendavel_w	= 'N') then
				select	nextval('ageint_proc_pacote_seq')
				into STRICT	nr_seq_proc_pacote_w
				;
				
				if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
					insert into ageint_exame_lab(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_proc_interno,
						nr_seq_ageint,
						cd_procedimento,
						ie_origem_proced,
						nr_seq_exame,
						vl_item)
					values (nextval('ageint_exame_lab_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_proc_interno_w,
						nr_seq_ageint_w,
						cd_procedimento_w,
						ie_origem_proced_w,
						nr_seq_exame_w,
						vl_procedimento_w);
				else
					insert into ageint_proc_pacote(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_proc_interno,
						cd_procedimento,
						ie_origem_proced,
						nr_seq_ageint,
						vl_pacote)
					values (nr_seq_proc_pacote_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_proc_interno_w,
						cd_procedimento_w,
						ie_origem_proced_w,
						nr_seq_ageint_w,
						vl_procedimento_w);
				end if;

				open C04;
				loop
				fetch C04 into	
					nr_seq_orc_proc_Adic_w,
					nr_seq_proc_int_adic_w,
					cd_procedimento_adic_w,
					ie_origem_proced_adic_w,
					vl_proc_adic_w,
					nr_seq_regra_lanc_aut_w,
					nr_seq_exame_adic_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin

					if (coalesce(nr_seq_proc_int_adic_w::text, '') = '') then
						if (cd_procedimento_adic_w IS NOT NULL AND cd_procedimento_adic_w::text <> '') and (ie_origem_proced_adic_w IS NOT NULL AND ie_origem_proced_adic_w::text <> '') then
							select	coalesce(max(nr_sequencia),0)
							into STRICT	nr_seq_proc_int_adic_w
							from	proc_interno
							where	cd_procedimento		= cd_procedimento_adic_w
							and	ie_origem_proced	= ie_origem_proced_adic_w;

							if (nr_seq_proc_interno_w	= 0) then	
								select	max(nr_Seq_proc_interno)
								into STRICT	nr_seq_proc_int_adic_w
								from	proc_interno_conv
								where	cd_procedimento		= cd_procedimento_adic_w
								and	ie_origem_proced	= ie_origem_proced_adic_w;
							end if;
						end if;
					elsif (coalesce(cd_procedimento_adic_w::text, '') = '') or (coalesce(ie_origem_proced_adic_w::text, '') = '') then
						SELECT * FROM obter_proc_tab_interno(nr_seq_proc_int_adic_w, null, null, null, cd_procedimento_adic_w, ie_origem_proced_adic_w, null, null) INTO STRICT cd_procedimento_adic_w, ie_origem_proced_adic_w;
					end if;

					if (nr_seq_exame_adic_w IS NOT NULL AND nr_seq_exame_adic_w::text <> '') then
						insert into ageint_exame_lab(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_seq_proc_interno,
								nr_seq_ageint,
								cd_procedimento,
								ie_origem_proced,
								nr_seq_exame,
								vl_item)
							values (nextval('ageint_exame_lab_seq'),
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_proc_int_adic_w,
								nr_seq_ageint_w,
								cd_procedimento_adic_w,
								ie_origem_proced_adic_w,
								nr_seq_exame_adic_w,
								CASE WHEN ie_tipo_convenio_w=1 THEN vl_proc_adic_w  ELSE 0 END );
					else
						insert into ageint_itens_adicionais(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_seq_proc_interno,
								cd_procedimento,
								ie_origem_proced,
								nr_seq_ageint_pacote,
								vl_item,
								nr_seq_regra_lanc)
							values (nextval('ageint_itens_adicionais_seq'),
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_proc_int_adic_w,
								cd_procedimento_adic_w,
								ie_origem_proced_adic_w,
								nr_seq_proc_pacote_w,
								CASE WHEN ie_tipo_convenio_w=1 THEN vl_proc_adic_w  ELSE 0 END ,
								nr_seq_regra_lanc_aut_w
								);
					end if;
					end;
				end loop;
				close C04;

				open C07;
				loop
				fetch C07 into	
					nr_seq_orc_mat_Adic_w,
					cd_material_w,
					vl_material_w;
				EXIT WHEN NOT FOUND; /* apply on C07 */
					begin
					insert into ageint_itens_adicionais(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							cd_material,
							nr_seq_ageint_pacote,
							vl_item,
							nr_seq_regra_lanc)
						values (nextval('ageint_itens_adicionais_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							cd_material_w,
							nr_seq_proc_pacote_w,
							vl_material_w,
							nr_seq_regra_lanc_aut_w);
					end;
				end loop;
				close C07;
			else

				select	nextval('agenda_integrada_item_seq')
				into STRICT	nr_seq_proc_pacote_w
				;		
				
				ie_tipo_agendamento_w	:= Ageint_Obter_Tipo_Ag_Exame(nr_seq_proc_interno_w, cd_estabelecimento_p, nm_usuario_p);

				if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
					insert into ageint_exame_lab(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_proc_interno,
						nr_seq_ageint,
						cd_procedimento,
						ie_origem_proced,
						nr_seq_exame,
						vl_item)
					values (nextval('ageint_exame_lab_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_proc_interno_w,
						nr_seq_ageint_w,
						cd_procedimento_w,
						ie_origem_proced_w,
						nr_seq_exame_w,
						vl_procedimento_w);
				else
					begin
						insert into agenda_integrada_item(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_proc_interno,
							cd_procedimento,
							ie_origem_proced,
							ie_tipo_agendamento,
							--nr_seq_proc_pacote,
							vl_item,
							nr_seq_agenda_int,
							ie_pacote,
							nr_minuto_duracao,
							ie_gerado_orc)
						values (nr_seq_proc_pacote_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_proc_interno_w,
							cd_procedimento_w,
							ie_origem_proced_w,
							ie_tipo_agendamento_w,
							--nr_seq_proc_pacote_w,
							vl_procedimento_w,
							nr_seq_ageint_w,
							'S',
							Ageint_obter_dur_exame_grupo(nr_seq_proc_interno_w, cd_estabelecimento_p, nm_usuario_p),
							'S');
							
							if ('S' = ie_multimed_p) then
							begin
								select	nextval('agenda_integrada_conv_item_seq')
								into STRICT	nr_seq_conv_item_w
								;	
							
								insert into agenda_integrada_conv_item(cd_categoria,
									cd_convenio,
									cd_plano,
									cd_usuario_convenio,
									dt_atualizacao,
									dt_atualizacao_nrec,
									dt_validade_carteira,
									nm_usuario,
									nm_usuario_nrec,
									nr_seq_agenda_item,
									nr_sequencia)
								values (cd_categoria_w,
									cd_convenio_w,
									cd_plano_w,
									cd_usuario_convenio_w,
									clock_timestamp(),
									clock_timestamp(),
									dt_validade_w,
									nm_usuario_p,
									nm_usuario_p,
									nr_seq_proc_pacote_w,
									nr_seq_conv_item_w);
								end;
							end if;
					end;
				end if;

				open C04;
				loop
				fetch C04 into	
					nr_seq_orc_proc_Adic_w,
					nr_seq_proc_int_adic_w,
					cd_procedimento_adic_w,
					ie_origem_proced_adic_w,
					vl_proc_adic_w,
					nr_seq_regra_lanc_aut_w,
					nr_seq_exame_adic_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin
					
					if (coalesce(nr_seq_proc_int_adic_w::text, '') = '') then
						if (cd_procedimento_adic_w IS NOT NULL AND cd_procedimento_adic_w::text <> '') and (ie_origem_proced_adic_w IS NOT NULL AND ie_origem_proced_adic_w::text <> '') then
							select	coalesce(max(nr_sequencia),0)
							into STRICT	nr_seq_proc_int_adic_w
							from	proc_interno
							where	cd_procedimento		= cd_procedimento_adic_w
							and	ie_origem_proced	= ie_origem_proced_adic_w;
							
							if (nr_seq_proc_interno_w	= 0) then	
								select	max(nr_Seq_proc_interno)
								into STRICT	nr_seq_proc_int_adic_w
								from	proc_interno_conv
								where	cd_procedimento		= cd_procedimento_adic_w
								and	ie_origem_proced	= ie_origem_proced_adic_w;
							end if;
						end if;
					elsif (coalesce(cd_procedimento_adic_w::text, '') = '') or (coalesce(ie_origem_proced_adic_w::text, '') = '') then
						SELECT * FROM obter_proc_tab_interno(nr_seq_proc_int_adic_w, null, null, null, cd_procedimento_adic_w, ie_origem_proced_adic_w, null, null) INTO STRICT cd_procedimento_adic_w, ie_origem_proced_adic_w;			
					end if;

					if (nr_seq_exame_adic_w IS NOT NULL AND nr_seq_exame_adic_w::text <> '') then
						insert into ageint_exame_lab(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_proc_interno,
							nr_seq_ageint,
							cd_procedimento,
							ie_origem_proced,
							nr_seq_exame,
							vl_item)
						values (nextval('ageint_exame_lab_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_proc_interno_w,
							nr_seq_ageint_w,
							cd_procedimento_w,
							ie_origem_proced_w,
							nr_seq_exame_adic_w,
							CASE WHEN ie_tipo_convenio_w=1 THEN vl_proc_adic_w  ELSE 0 END );
					else
						insert into ageint_itens_adicionais(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_seq_proc_interno,
								cd_procedimento,
								ie_origem_proced,
								nr_seq_ageint_item,
								vl_item)
							values (nextval('ageint_itens_adicionais_seq'),
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_proc_int_adic_w,
								cd_procedimento_adic_w,
								ie_origem_proced_adic_w,
								nr_seq_proc_pacote_w,
								CASE WHEN ie_tipo_convenio_w=1 THEN vl_proc_adic_w  ELSE 0 END );
					end if;
					end;
				end loop;
				close C04;

				open C07;
				loop
				fetch C07 into	
					nr_seq_orc_mat_Adic_w, 
					cd_material_w,
					vl_material_w;
				EXIT WHEN NOT FOUND; /* apply on C07 */
					begin

					insert into ageint_itens_adicionais(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							cd_material,
							nr_seq_ageint_item,
							vl_item)
						values (nextval('ageint_itens_adicionais_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							cd_material_w,
							nr_seq_proc_pacote_w,
							vl_material_w);
					
					end;
				end loop;
				close C07;
			end if;			

			open C02;
			loop
			fetch C02 into	
				nr_seq_orc_proc_pac_w,
				nr_seq_proc_int_pac_w,
				cd_procedimento_pac_w,
				ie_origem_proced_pac_w,
				nr_seq_exame_pac_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin

				if (coalesce(nr_seq_proc_int_pac_w::text, '') = '') then
					if (cd_procedimento_pac_w IS NOT NULL AND cd_procedimento_pac_w::text <> '') and (ie_origem_proced_pac_w IS NOT NULL AND ie_origem_proced_pac_w::text <> '') then
						select	coalesce(max(nr_sequencia),0)
						into STRICT	nr_seq_proc_int_pac_w
						from	proc_interno
						where	cd_procedimento		= cd_procedimento_pac_w
						and	ie_origem_proced	= ie_origem_proced_pac_w;
						
						if (nr_seq_proc_int_pac_w	= 0) then	
							select	max(nr_Seq_proc_interno)
							into STRICT	nr_seq_proc_int_pac_w
							from	proc_interno_conv
							where	cd_procedimento		= cd_procedimento_pac_w
							and	ie_origem_proced	= ie_origem_proced_pac_w;
						end if;
					end if;
				elsif (coalesce(cd_procedimento_pac_w::text, '') = '') or (coalesce(ie_origem_proced_pac_w::text, '') = '') then
					SELECT * FROM obter_proc_tab_interno(nr_seq_proc_int_pac_w, null, null, null, cd_procedimento_pac_w, ie_origem_proced_pac_w, null, null) INTO STRICT cd_procedimento_pac_w, ie_origem_proced_pac_w;			
				end if;
				
				select	nextval('agenda_integrada_item_seq')
				into STRICT	nr_seq_ageint_item_pac_w
				;
				
				if (nr_seq_exame_pac_w IS NOT NULL AND nr_seq_exame_pac_w::text <> '') then
					insert into ageint_exame_lab(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_proc_interno,
							nr_seq_ageint,
							cd_procedimento,
							ie_origem_proced,
							nr_seq_exame)
						values (nextval('ageint_exame_lab_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_proc_int_pac_w,
							nr_seq_ageint_w,
							cd_procedimento_pac_w,
							ie_origem_proced_pac_w,
							nr_seq_exame_pac_w);
				else
					insert into agenda_integrada_item(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_proc_interno,
						cd_procedimento,
						ie_origem_proced,
						ie_tipo_agendamento,
						nr_seq_proc_pacote,
						nr_seq_agenda_int,
						nr_minuto_duracao,
						ie_gerado_orc)
					values (nr_seq_ageint_item_pac_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_proc_int_pac_w,
						cd_procedimento_pac_w,
						ie_origem_proced_pac_w,
						'E',
						CASE WHEN ie_agendavel_w='N' THEN  nr_seq_proc_pacote_w  ELSE null END ,
						nr_seq_ageint_w,
						Ageint_obter_dur_exame_grupo(nr_seq_proc_int_pac_w, cd_estabelecimento_p, nm_usuario_p),
						'S');
				end if;
				
				open C03;
				loop
				fetch C03 into	
					nr_seq_orc_proc_Adic_w,
					nr_seq_proc_int_adic_w,
					cd_procedimento_adic_w,
					ie_origem_proced_adic_w,
					vl_proc_adic_w,
					nr_seq_exame_adic_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin
					
					if (coalesce(nr_seq_proc_int_adic_w::text, '') = '') then
						if (cd_procedimento_adic_w IS NOT NULL AND cd_procedimento_adic_w::text <> '') and (ie_origem_proced_adic_w IS NOT NULL AND ie_origem_proced_adic_w::text <> '') then
							select	coalesce(max(nr_sequencia),0)
							into STRICT	nr_seq_proc_int_adic_w
							from	proc_interno
							where	cd_procedimento		= cd_procedimento_adic_w
							and	ie_origem_proced	= ie_origem_proced_adic_w;
							
							if (nr_seq_proc_interno_w	= 0) then	
								select	max(nr_Seq_proc_interno)
								into STRICT	nr_seq_proc_int_adic_w
								from	proc_interno_conv
								where	cd_procedimento		= cd_procedimento_adic_w
								and	ie_origem_proced	= ie_origem_proced_adic_w;
							end if;
						end if;
					elsif (coalesce(cd_procedimento_adic_w::text, '') = '') or (coalesce(ie_origem_proced_adic_w::text, '') = '') then
						SELECT * FROM obter_proc_tab_interno(nr_seq_proc_int_adic_w, null, null, null, cd_procedimento_adic_w, ie_origem_proced_adic_w, null, null) INTO STRICT cd_procedimento_adic_w, ie_origem_proced_adic_w;			
					end if;
					
					if (nr_seq_exame_adic_w IS NOT NULL AND nr_seq_exame_adic_w::text <> '') then
						insert into ageint_exame_lab(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_proc_interno,
							nr_seq_ageint,
							cd_procedimento,
							ie_origem_proced,
							nr_seq_exame,
							vl_item)
						values (nextval('ageint_exame_lab_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_proc_int_adic_w,
							nr_seq_ageint_w,
							cd_procedimento_adic_w,
							ie_origem_proced_adic_w,
							nr_seq_exame_adic_w,
							CASE WHEN ie_tipo_convenio_w=1 THEN vl_proc_adic_w  ELSE 0 END );
					else
						insert into ageint_itens_adicionais(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_proc_interno,
							cd_procedimento,
							ie_origem_proced,
							nr_seq_ageint_item,
							vl_item)
						values (nextval('ageint_itens_adicionais_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_proc_int_adic_w,
							cd_procedimento_adic_w,
							ie_origem_proced_adic_w,
							nr_seq_Ageint_item_pac_w,
							CASE WHEN ie_tipo_convenio_w=1 THEN vl_proc_adic_w  ELSE 0 END );
					end if;
					end;
				end loop;
				close C03;
				
				open C06;
				loop
				fetch C06 into	
					nr_seq_orc_mat_Adic_w,
					cd_material_w,
					vl_material_w;
				EXIT WHEN NOT FOUND; /* apply on C06 */
					begin
					insert into ageint_itens_adicionais(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_material,
						nr_seq_ageint_item,
						vl_item)
					values (nextval('ageint_itens_adicionais_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_material_w,
						nr_seq_Ageint_item_pac_w,
						vl_material_w);
					end;
				end loop;
				close C06;
				
				end;
			end loop;
			close C02;
		else

			if (coalesce(nr_seq_proc_interno_w::text, '') = '') then
				if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then
					select	coalesce(max(nr_sequencia),0)
					into STRICT	nr_seq_proc_interno_w
					from	proc_interno
					where	cd_procedimento		= cd_procedimento_w
					and	ie_origem_proced	= ie_origem_proced_w;
					
					if (nr_seq_proc_interno_w	= 0) then	
						select	max(nr_Seq_proc_interno)
						into STRICT	nr_Seq_proc_interno_w
						from	proc_interno_conv
						where	cd_procedimento		= cd_procedimento_w
						and	ie_origem_proced	= ie_origem_proced_w;
					end if;
				end if;
			elsif (coalesce(cd_procedimento_w::text, '') = '') or (coalesce(ie_origem_proced_w::text, '') = '') then
				SELECT * FROM obter_proc_tab_interno(nr_seq_proc_interno_w, null, null, null, cd_procedimento_w, ie_origem_proced_w, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;			
			end if;

			select	nextval('agenda_integrada_item_seq')
			into STRICT	nr_seq_ageint_item_w
			;
			
			if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
				insert into ageint_exame_lab(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_proc_interno,
						nr_seq_ageint,
						cd_procedimento,
						ie_origem_proced,
						nr_seq_exame)
					values (nextval('ageint_exame_lab_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_proc_interno_w,
						nr_seq_ageint_w,
						cd_procedimento_w,
						ie_origem_proced_w,
						nr_seq_exame_w);
			else
				begin
				
				insert into agenda_integrada_item(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_proc_interno,
						cd_procedimento,
						ie_origem_proced,
						ie_tipo_agendamento,
						nr_seq_agenda_int,
						nr_minuto_duracao,
						vl_item,
						ie_gerado_orc)
					values (nr_seq_ageint_item_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_proc_interno_w,
						cd_procedimento_w,
						ie_origem_proced_w,
						'E',
						nr_seq_ageint_w,
						Ageint_obter_dur_exame_grupo(nr_seq_proc_interno_w, cd_estabelecimento_p, nm_usuario_p),
						vl_procedimento_w,
						'S');
						
							if ('S' = ie_multimed_p) then
							begin
								select	nextval('agenda_integrada_conv_item_seq')
								into STRICT	nr_seq_conv_item_w
								;	
							
								insert into agenda_integrada_conv_item(cd_categoria,
									cd_convenio,
									cd_plano,
									cd_usuario_convenio,
									dt_atualizacao,
									dt_atualizacao_nrec,
									dt_validade_carteira,
									nm_usuario,
									nm_usuario_nrec,
									nr_seq_agenda_item,
									nr_sequencia)
								values (cd_categoria_w,
									cd_convenio_w,
									cd_plano_w,
									cd_usuario_convenio_w,
									clock_timestamp(),
									clock_timestamp(),
									dt_validade_w,
									nm_usuario_p,
									nm_usuario_p,
									nr_seq_ageint_item_w,
									nr_seq_conv_item_w);
								end;
							end if;	
						
				end;
			end if;
			open C04;
			loop
			fetch C04 into	
				nr_seq_orc_proc_Adic_w,
				nr_seq_proc_int_adic_w,
				cd_procedimento_adic_w,
				ie_origem_proced_adic_w,
				vl_proc_adic_w,
				nr_seq_regra_lanc_aut_w,
				nr_seq_exame_adic_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin

				if (coalesce(nr_seq_proc_int_adic_w::text, '') = '') then
					if (cd_procedimento_adic_w IS NOT NULL AND cd_procedimento_adic_w::text <> '') and (ie_origem_proced_adic_w IS NOT NULL AND ie_origem_proced_adic_w::text <> '') then
						select	coalesce(max(nr_sequencia),0)
						into STRICT	nr_seq_proc_int_adic_w
						from	proc_interno
						where	cd_procedimento		= cd_procedimento_adic_w
						and	ie_origem_proced	= ie_origem_proced_adic_w;
						
						if (nr_seq_proc_interno_w	= 0) then	
							select	max(nr_Seq_proc_interno)
							into STRICT	nr_seq_proc_int_adic_w
							from	proc_interno_conv
							where	cd_procedimento		= cd_procedimento_adic_w
							and	ie_origem_proced	= ie_origem_proced_adic_w;
						end if;
					end if;
				elsif (coalesce(cd_procedimento_adic_w::text, '') = '') or (coalesce(ie_origem_proced_adic_w::text, '') = '') then
					SELECT * FROM obter_proc_tab_interno(nr_seq_proc_int_adic_w, null, null, null, cd_procedimento_adic_w, ie_origem_proced_adic_w, null, null) INTO STRICT cd_procedimento_adic_w, ie_origem_proced_adic_w;			
				end if;

				SELECT * FROM ageint_consiste_plano_conv(
								null, cd_convenio_w, cd_procedimento_adic_w, ie_origem_proced_adic_w, clock_timestamp(), 1, coalesce(ie_tipo_Atendimento_w,0), cd_plano_w, null, ds_erro_w, 0, null, ie_regra_w, null, nr_seq_regra_w, nr_seq_proc_int_adic_w, cd_categoria_w, cd_estabelecimento_p, null, ie_Sexo_w, ie_glosa_w, cd_edicao_ajuste_w, null, ds_irrelavante_w, ds_irrelavante_w, cd_pessoa_fisica_w, null, pr_glosa_w, vl_glosa_w) INTO STRICT ds_erro_w, ie_regra_w, nr_seq_regra_w, ie_glosa_w, cd_edicao_ajuste_w, ds_irrelavante_w, ds_irrelavante_w, pr_glosa_w, vl_glosa_w;

				ie_autorizacao_w	:= null;

				if (ie_regra_w in (3,6,7)) then
					select 	coalesce(max(ie_resp_autor),'H')
					into STRICT	ie_resp_autor_w
					from 	regra_convenio_plano
					where 	nr_sequencia = nr_seq_regra_w;
					if (ie_resp_autor_w	= 'H') then
						ie_autorizacao_w	:= 'PAH';
					elsif (ie_resp_autor_w	= 'P') then
						ie_autorizacao_w	:= 'PAP';
					end if;
				end if;

				if (nr_seq_exame_adic_w IS NOT NULL AND nr_seq_exame_adic_w::text <> '') then
					insert into ageint_exame_lab(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_proc_interno,
							nr_seq_ageint,
							cd_procedimento,
							ie_origem_proced,
							nr_seq_exame,
							vl_item,
							ie_regra,
							ie_glosa,
							ie_autorizacao)
						values (nextval('ageint_exame_lab_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_proc_int_adic_w,
							nr_seq_ageint_w,
							cd_procedimento_adic_w,
							ie_origem_proced_adic_w,
							nr_seq_exame_adic_w,
							CASE WHEN ie_tipo_convenio_w=1 THEN vl_proc_adic_w  ELSE 0 END ,
							ie_regra_w,
							ie_glosa_w,
							ie_autorizacao_w);
				else
					insert into ageint_itens_adicionais(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_proc_interno,
							cd_procedimento,
							ie_origem_proced,
							nr_seq_ageint_item,
							vl_item,
							ie_regra,
							ie_glosa,
							ie_autorizacao)
						values (nextval('ageint_itens_adicionais_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_proc_int_adic_w,
							cd_procedimento_adic_w,
							ie_origem_proced_adic_w,
							nr_seq_ageint_item_w,
							CASE WHEN ie_tipo_convenio_w=1 THEN vl_proc_adic_w  ELSE 0 END ,
							ie_regra_w,
							ie_glosa_w,
							ie_autorizacao_w);
				end if;
				end;
			end loop;
			close C04;

			open C07;
			loop
			fetch C07 into	
				nr_seq_orc_mat_Adic_w,
				cd_material_w,
				vl_material_w;
			EXIT WHEN NOT FOUND; /* apply on C07 */
				begin
				insert into ageint_itens_adicionais(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_material,
						nr_seq_ageint_item,
						vl_item)
					values (nextval('ageint_itens_adicionais_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_material_w,
						nr_seq_ageint_item_w,
						vl_material_w);
				
				end;
			end loop;
			close C07;

			open C05;
			loop
			fetch C05 into	
				nr_proc_orc_assoc_w,
				nr_seq_proc_interno_assoc_w,
				cd_procedimento_assoc_w,
				ie_origem_proced_assoc_w,
				ie_exame_assoc_w,
				vl_proc_assoc_w,
				nr_seq_exame_assoc_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin
				if (nr_seq_exame_assoc_w IS NOT NULL AND nr_seq_exame_assoc_w::text <> '') then
					insert into ageint_exame_lab(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_proc_interno,
						nr_seq_ageint,
						cd_procedimento,
						ie_origem_proced,
						nr_seq_exame,
						vl_item)
					values (nextval('ageint_exame_lab_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_proc_interno_Assoc_w,
						nr_seq_ageint_w,
						cd_procedimento_Assoc_w,
						ie_origem_proced_assoc_w,
						nr_seq_exame_assoc_w,
						vl_proc_assoc_w);
				else
					CALL Ageint_Inserir_Ex_Assoc_Orc(nr_proc_orc_assoc_w,
									nr_seq_ageint_w, 
									nr_seq_ageint_item_w, 
									nr_proc_orc_assoc_w,  
									nr_seq_proc_interno_Assoc_w, 
									cd_procedimento_Assoc_w,
									ie_origem_proced_assoc_w,
									ie_exame_Assoc_w,
									vl_proc_assoc_w,
									cd_estabelecimento_p,
									nm_usuario_p);
				end if;
				end;
			end loop;
			close C05;
			
		end if;
		end;
	end loop;
	close C01;

ie_checklist_w := ageint_check_list_orcamento(nr_seq_ageint_w, nm_usuario_p, cd_estabelecimento_p, ie_checklist_w);

if (ie_checklist_w = 'S')	 then
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(278731,null);
end if;
	
else

	select	cd_pessoa_fisica,
		cd_convenio,
		cd_categoria,
		cd_plano,
		cd_usuario_convenio,
		ie_tipo_atendimento
	into STRICT	cd_pessoa_fisica_w,
		cd_convenio_w,
		cd_categoria_w,
		cd_plano_w,
		cd_usuario_convenio_w,
		ie_tipo_atendimento_w
	from	agenda_integrada
	where	nr_sequencia	= nr_seq_ageint_p;

	cd_condicao_pagamento_w := Obter_Param_Usuario(106, 1, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_condicao_pagamento_w);

	qt_dias_validade_w := Obter_Param_Usuario(106, 2, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, qt_dias_validade_w);
	
	ie_gerar_lanc_aut_w := Obter_Param_Usuario(106, 3, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_lanc_aut_w);

	cd_tipo_acomodacao_w := Obter_Param_Usuario(106, 71, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_tipo_acomodacao_w);
	
	ie_gerar_assoc_w := Obter_Param_Usuario(106, 45, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_assoc_w);
	
	ie_visao_multimed_w := Obter_Param_Usuario(0, 198, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_visao_multimed_w);

	select	nextval('orcamento_paciente_seq')
	into STRICT	nr_seq_orcamento_w
	;
	
	if (ie_visao_multimed_w = 'N') and
		((coalesce(cd_categoria_w::text, '') = '') or (coalesce(cd_pessoa_fisica_w::text, '') = '') or (coalesce(cd_convenio_w::text, '') = '')) then
		/*Rai1se_appli1cation_err1or(-20011,'Para gerar o orcamento, deve-se informar o paciente, convenio e categoria.');*/

		CALL Wheb_mensagem_pck.exibir_mensagem_abort(218758);
	end if;
	
	/* Validar tipo de convenio */

	select	max(ie_tipo_convenio)
	into STRICT	ie_tipo_convenio_w
	from	convenio
	where	cd_convenio = cd_convenio_w;
	
	if (ie_gerar_itens_w <> 'N') then
					
		if (coalesce(ie_tipo_convenio_w,0) <> 1) then
			select	max(CD_CONVENIO_PARTIC_ORC),
				max(CD_CATEGORIA_PARTIC_ORC),
				max(CD_PLANO_PARTIC_ORC)
			into STRICT	cd_convenio_w,
				cd_categoria_w,
				cd_plano_w
			from	parametro_agenda_integrada
			where	coalesce(cd_estabelecimento,cd_estabelecimento_p)	= cd_estabelecimento_p;
			
			if (coalesce(cd_convenio_w::text, '') = '') or (coalesce(cd_categoria_w::text, '') = '') or (coalesce(cd_plano_w::text, '') = '') then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(246675);
			end if;
			
			select	max(ie_tipo_convenio)
			into STRICT	ie_tipo_convenio_w
			from	convenio
			where	cd_convenio = cd_convenio_p;						
			
		end if;
		
		insert into orcamento_paciente(nr_sequencia_orcamento,
			cd_estabelecimento,
			cd_pessoa_fisica,
			dt_orcamento,
			cd_convenio,
			cd_categoria,
			cd_plano,
			cd_condicao_pagamento,
			ie_status_orcamento,
			dt_atualizacao,
			nm_usuario,
			vl_deposito,
			ie_calculo_valor,
			ie_tipo_atendimento,
			cd_tipo_acomodacao,
			nr_seq_ageint,
			dt_validade)
		values (nr_seq_orcamento_w,
			cd_estabelecimento_p,
			cd_pessoa_fisica_w,
			clock_timestamp(),
			cd_convenio_w,
			cd_categoria_w,
			cd_plano_w,
			coalesce(cd_condicao_pagamento_w,1),
			1,
			clock_timestamp(),
			nm_usuario_p,
			0,
			'C',
			ie_tipo_atendimento_w,
			cd_tipo_acomodacao_w,
			nr_seq_ageint_p,
			clock_timestamp() + coalesce(qt_dias_validade_w,1));
			
		if (ie_tipo_convenio_w = 1) then
			/* PARTICULAR */
			
			open C10;
			loop
			fetch C10 into
				nr_sequencia_item_w,	
				cd_procedimento_item_w,
				ie_origem_proced_item_w,
				nr_seq_proc_interno_item_w,
				ie_glosa_w,
				ie_lado_w;
			EXIT WHEN NOT FOUND; /* apply on C10 */
				begin
				
				if (nr_seq_proc_interno_item_w IS NOT NULL AND nr_seq_proc_interno_item_w::text <> '') then

					if (ie_glosa_w = 'T') then

						SELECT * FROM obter_proc_tab_interno_conv(nr_seq_proc_interno_item_w, cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_item_w, ie_origem_proced_item_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_item_w, ie_origem_proced_item_w;
								
						if (coalesce(cd_procedimento_item_w::text, '') = '') then
							select	max(cd_procedimento),
								max(ie_origem_proced)
							into STRICT	cd_procedimento_item_w,
								ie_origem_proced_item_w
							from	proc_interno
							where	nr_sequencia = nr_seq_proc_interno_item_w;
						end if;
						
					end if;
					
					select	nextval('orcamento_paciente_proc_seq')
					into STRICT	nr_seq_orcamento_proc_w
					;
					
					insert into orcamento_paciente_proc(	
						 nr_sequencia_orcamento,
						 cd_procedimento,
						 ie_origem_proced,
						 nr_seq_proc_interno,
						 qt_procedimento,
						 dt_atualizacao,
						 nm_usuario,
						 vl_procedimento,
						 ie_valor_informado,
						 nr_sequencia,
						 ie_lado)
					values (	 nr_seq_orcamento_w,
						 cd_procedimento_item_w,
						 ie_origem_proced_item_w,
						 nr_seq_proc_interno_item_w,
						 1,
						 clock_timestamp(),
						 nm_usuario_p,
						 0,
						 'N',
						 nr_seq_orcamento_proc_w,
						 ie_lado_w);	
					
					if (ie_gerar_lanc_aut_w = 'S') then
						CALL gerar_lanc_orc_automatico(null,
									  nr_seq_orcamento_w,
									  34,
									  nr_seq_orcamento_proc_w,
									  nm_usuario_p);
					end if;
					if (ie_gerar_assoc_w = 'S') then
						CALL Gerar_Proc_Assoc_orcamento(nr_seq_orcamento_w,nr_seq_orcamento_proc_w,nm_usuario_p);
					end if;
				end if;
				
				if ((ie_gerar_itens_w = 'A') or (ie_gerar_itens_w = 'I')) then
					open C15;
					loop
					fetch C15 into	
						cd_procedimento_item_adic_w,
						ie_origem_proced_item_adic_w,
						nr_seq_proc_int_item_adic_w,
						ie_glosa_adic_w,
						ie_lado_w;
					EXIT WHEN NOT FOUND; /* apply on C15 */
						begin
						
						if (nr_seq_proc_int_item_adic_w IS NOT NULL AND nr_seq_proc_int_item_adic_w::text <> '') and (ie_glosa_adic_w = 'T') then

							SELECT * FROM obter_proc_tab_interno_conv(nr_seq_proc_int_item_adic_w, cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_item_adic_w, ie_origem_proced_item_adic_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_item_adic_w, ie_origem_proced_item_adic_w;
							
							if (coalesce(cd_procedimento_item_adic_w::text, '') = '') then
								select	max(cd_procedimento),
									max(ie_origem_proced)
								into STRICT	cd_procedimento_item_adic_w,
									ie_origem_proced_item_adic_w
								from	proc_interno
								where	nr_sequencia = nr_seq_proc_int_item_adic_w;
							end if;
							
						end if;
						
						select	nextval('orcamento_paciente_proc_seq')
						into STRICT	nr_seq_orcamento_proc_w
						;
						
						insert into orcamento_paciente_proc(	
							 nr_sequencia_orcamento,
							 cd_procedimento,
							 ie_origem_proced,
							 nr_seq_proc_interno,
							 qt_procedimento,
							 dt_atualizacao,
							 nm_usuario,
							 vl_procedimento,
							 ie_valor_informado,
							 nr_sequencia,
							 ie_lado)
						values (	 nr_seq_orcamento_w,
							 cd_procedimento_item_adic_w,
							 ie_origem_proced_item_adic_w,
							 nr_seq_proc_int_item_adic_w,
							 1,
							 clock_timestamp(),
							 nm_usuario_p,
							 0,
							 'N',
							 nr_seq_orcamento_proc_w,
							 ie_lado_w);	
						
						if (ie_gerar_lanc_aut_w = 'S') then
							CALL gerar_lanc_orc_automatico(null,
										  nr_seq_orcamento_w,
										  34,
										  nr_seq_orcamento_proc_w,
										  nm_usuario_p);
						end if;
						if (ie_gerar_assoc_w = 'S') then
							CALL Gerar_Proc_Assoc_orcamento(nr_seq_orcamento_w,nr_seq_orcamento_proc_w,nm_usuario_p);
						end if;					
						
						end;
						end loop;
					close C15;				
				end if;
				
				if (ie_gerar_itens_w = 'I') then
					open C70;
					loop
					fetch C70 into	
						cd_procedimento_itens_adic_w,
						ie_origem_proced_itens_adic_w,
						nr_seq_proc_int_itens_adic_w,
						ie_glosa_itens_adic_w;
					EXIT WHEN NOT FOUND; /* apply on C70 */
						begin
						
						if (nr_seq_proc_int_itens_adic_w IS NOT NULL AND nr_seq_proc_int_itens_adic_w::text <> '') and (ie_glosa_itens_adic_w = 'T') then

							SELECT * FROM obter_proc_tab_interno_conv(nr_seq_proc_int_itens_adic_w, cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_itens_adic_w, ie_origem_proced_itens_adic_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_itens_adic_w, ie_origem_proced_itens_adic_w;
							
							if (coalesce(cd_procedimento_itens_adic_w::text, '') = '') then
								select	max(cd_procedimento),
										max(ie_origem_proced)
								into STRICT	cd_procedimento_itens_adic_w,
										ie_origem_proced_itens_adic_w
								from	proc_interno
								where	nr_sequencia = nr_seq_proc_int_itens_adic_w;
							end if;
							
						end if;
						
						select	nextval('orcamento_paciente_proc_seq')
						into STRICT	nr_seq_orcamento_proc_w
						;
						
						insert into orcamento_paciente_proc(	
							 nr_sequencia_orcamento,
							 cd_procedimento,
							 ie_origem_proced,
							 nr_seq_proc_interno,
							 qt_procedimento,
							 dt_atualizacao,
							 nm_usuario,
							 vl_procedimento,
							 ie_valor_informado,
							 nr_sequencia
							 )
						values (	 nr_seq_orcamento_w,
							 cd_procedimento_itens_adic_w,
							 ie_origem_proced_itens_adic_w,
							 nr_seq_proc_int_itens_adic_w,
							 1,
							 clock_timestamp(),
							 nm_usuario_p,
							 0,
							 'N',
							 nr_seq_orcamento_proc_w
							 );	
											
						if (ie_gerar_assoc_w = 'S') then
							CALL Gerar_Proc_Assoc_orcamento(nr_seq_orcamento_w,nr_seq_orcamento_proc_w,nm_usuario_p);
						end if;					
						
						end;
						end loop;
					close C70;
				end if;
				
				end;
			end loop;
			close C10;
			
			if (ie_considera_pacote_w = 'S') then
				open c50;
				loop
				fetch c50 into	
					nr_seq_pacote_w,
					nr_seq_pac_tipo_acomod_w;
				EXIT WHEN NOT FOUND; /* apply on c50 */
					begin
					CALL gerar_orcamento_pacote(nr_seq_orcamento_w, nr_seq_pacote_w, nr_seq_pac_tipo_acomod_w, nm_usuario_p);
					end;
				end loop;
				close c50;
			end if;
			
			open C20;
			loop
			fetch C20 into	
				cd_procedimento_lab_w,
				ie_origem_proced_lab_w,
				nr_seq_proc_interno_lab_w,
				nr_seq_exame_lab_w,
				ie_glosa_w;
			EXIT WHEN NOT FOUND; /* apply on C20 */
				begin
				if (nr_seq_proc_interno_lab_w IS NOT NULL AND nr_seq_proc_interno_lab_w::text <> '') and (ie_glosa_w = 'T') then
					
					SELECT * FROM obter_proc_tab_interno_conv(nr_seq_proc_interno_lab_w, cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_lab_w, ie_origem_proced_lab_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_lab_w, ie_origem_proced_lab_w;
							
					if (coalesce(cd_procedimento_lab_w::text, '') = '') then
						select	max(cd_procedimento),
							max(ie_origem_proced)
						into STRICT	cd_procedimento_lab_w,
							ie_origem_proced_lab_w
						from	proc_interno
						where	nr_sequencia		= nr_seq_proc_interno_lab_w;
					end if;
				end if;
				
				select	nextval('orcamento_paciente_proc_seq')
				into STRICT	nr_seq_orcamento_proc_w
				;
				
				insert into orcamento_paciente_proc(	
					 nr_sequencia_orcamento,
					 cd_procedimento,
					 ie_origem_proced,
					 nr_seq_proc_interno,
					 nr_seq_exame,
					 qt_procedimento,
					 dt_atualizacao,
					 nm_usuario,
					 vl_procedimento,
					 ie_valor_informado,
					 nr_sequencia)
				values (	 nr_seq_orcamento_w,
					 cd_procedimento_lab_w,
					 ie_origem_proced_lab_w,
					 nr_seq_proc_interno_lab_w,
					 nr_seq_exame_lab_w,
					 1,
					 clock_timestamp(),
					 nm_usuario_p,
					 0,
					 'N',
					 nr_seq_orcamento_proc_w);
				
				if (ie_gerar_assoc_w = 'S') then
					CALL Gerar_Proc_Assoc_orcamento(nr_seq_orcamento_w,nr_seq_orcamento_proc_w,nm_usuario_p);
				end if;
				end;
			end loop;
			close C20;
			
			if (ie_gera_med_quimio_w = 'S') then
				open C60;
				loop
				fetch C60 into
					cd_protocolo_w,
					nr_seq_medicacao_w;
				EXIT WHEN NOT FOUND; /* apply on C60 */
					begin
					CALL gerar_orcamento_oncologico(cd_protocolo_w, nr_seq_medicacao_w, nr_seq_orcamento_w, nm_usuario_p);
					end;										
				end loop;							
				close C60;
			end if;
			
		else
			open C30;
			loop
			fetch C30 into
				nr_sequencia_item_w,
				cd_procedimento_item_w,
				ie_origem_proced_item_w,
				nr_seq_proc_interno_item_w,
				ie_glosa_w,
				ie_lado_w,
				ie_regra_ww;
			EXIT WHEN NOT FOUND; /* apply on C30 */
				begin
				
				if (ie_glosa_adic_w = 'T' or
				  coalesce(ie_regra_ww,0) in (1,2,5,nr_glosa_part_w) or
				  coalesce(ie_glosa_w,'X') = 'T' or
				  coalesce(ie_glosa_w,'X') = 'G') then
					if (nr_seq_proc_interno_item_w IS NOT NULL AND nr_seq_proc_interno_item_w::text <> '') and (ie_glosa_w = 'T') then

						SELECT * FROM obter_proc_tab_interno_conv(nr_seq_proc_interno_item_w, cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_item_w, ie_origem_proced_item_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_item_w, ie_origem_proced_item_w;

						if (coalesce(cd_procedimento_item_w::text, '') = '') then
							select	max(cd_procedimento),
								max(ie_origem_proced)
							into STRICT	cd_procedimento_item_w,
								ie_origem_proced_item_w
							from	proc_interno
							where	nr_sequencia		= nr_seq_proc_interno_item_w;
						end if;

					end if;
				
					select	nextval('orcamento_paciente_proc_seq')
					into STRICT	nr_seq_orcamento_proc_w
					;
				
					insert into orcamento_paciente_proc(
						 nr_sequencia_orcamento,
						 cd_procedimento,
						 ie_origem_proced,
						 nr_seq_proc_interno,
						 qt_procedimento,
						 dt_atualizacao,
						 nm_usuario,
						 vl_procedimento,
						 ie_valor_informado,
						 nr_sequencia,
						 ie_lado)
					values (	 nr_seq_orcamento_w,
						 cd_procedimento_item_w,
						 ie_origem_proced_item_w,
						 nr_seq_proc_interno_item_w,
						 1,
						 clock_timestamp(),
						 nm_usuario_p,
						 0,
						 'N',
						 nr_seq_orcamento_proc_w,
						 ie_lado_w);

					if (ie_gerar_lanc_aut_w = 'S') then
						CALL gerar_lanc_orc_automatico(null,
									  nr_seq_orcamento_w,
									  34,
									  nr_seq_orcamento_proc_w,
									  nm_usuario_p);
					end if;
					if (ie_gerar_assoc_w = 'S') then
						CALL Gerar_Proc_Assoc_orcamento(nr_seq_orcamento_w,nr_seq_orcamento_proc_w,nm_usuario_p);
					end if;
				end if;
				
				if ((ie_gerar_itens_w = 'A') or (ie_gerar_itens_w = 'I')) then
					open C15;
					loop
					fetch C15 into	
						cd_procedimento_item_adic_w,
						ie_origem_proced_item_adic_w,
						nr_seq_proc_int_item_adic_w,
						ie_glosa_adic_w,
						ie_lado_w;
					EXIT WHEN NOT FOUND; /* apply on C15 */
						begin
						
						if	((nr_seq_proc_int_item_adic_w IS NOT NULL AND nr_seq_proc_int_item_adic_w::text <> '') and (ie_glosa_adic_w = 'T' or
						  coalesce(ie_regra_ww,0) in (1,2,5,nr_glosa_part_w) or
						  coalesce(ie_glosa_w,'X') = 'T' or
						  coalesce(ie_glosa_w,'X') = 'G')) then

							SELECT * FROM obter_proc_tab_interno_conv(nr_seq_proc_int_item_adic_w, cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_item_adic_w, ie_origem_proced_item_adic_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_item_adic_w, ie_origem_proced_item_adic_w;
							
							if (coalesce(cd_procedimento_item_adic_w::text, '') = '') then
								select	max(cd_procedimento),
									max(ie_origem_proced)
								into STRICT	cd_procedimento_item_adic_w,
									ie_origem_proced_item_adic_w
								from	proc_interno
								where	nr_sequencia = nr_seq_proc_int_item_adic_w;
							end if;
							
						end if;
						
						select	nextval('orcamento_paciente_proc_seq')
						into STRICT	nr_seq_orcamento_proc_w
						;
						
						insert into orcamento_paciente_proc(	
							 nr_sequencia_orcamento,
							 cd_procedimento,
							 ie_origem_proced,
							 nr_seq_proc_interno,
							 qt_procedimento,
							 dt_atualizacao,
							 nm_usuario,
							 vl_procedimento,
							 ie_valor_informado,
							 nr_sequencia,
							 ie_lado)
						values (	 nr_seq_orcamento_w,
							 cd_procedimento_item_adic_w,
							 ie_origem_proced_item_adic_w,
							 nr_seq_proc_int_item_adic_w,
							 1,
							 clock_timestamp(),
							 nm_usuario_p,
							 0,
							 'N',
							 nr_seq_orcamento_proc_w,
							 ie_lado_w);	
						
						if (ie_gerar_lanc_aut_w = 'S') then
							CALL gerar_lanc_orc_automatico(null,
										  nr_seq_orcamento_w,
										  34,
										  nr_seq_orcamento_proc_w,
										  nm_usuario_p);
						end if;
						if (ie_gerar_assoc_w = 'S') then
							CALL Gerar_Proc_Assoc_orcamento(nr_seq_orcamento_w,nr_seq_orcamento_proc_w,nm_usuario_p);
						end if;					
						
						end;
						end loop;
					close C15;				
				end if;	

				if (ie_gerar_itens_w = 'I') then
					open C70;
					loop
					fetch C70 into	
						cd_procedimento_itens_adic_w,
						ie_origem_proced_itens_adic_w,
						nr_seq_proc_int_itens_adic_w,
						ie_glosa_itens_adic_w;
					EXIT WHEN NOT FOUND; /* apply on C70 */
						begin
						
						if (nr_seq_proc_int_itens_adic_w IS NOT NULL AND nr_seq_proc_int_itens_adic_w::text <> '') and (ie_glosa_itens_adic_w = 'T') then

							SELECT * FROM obter_proc_tab_interno_conv(nr_seq_proc_int_itens_adic_w, cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_itens_adic_w, ie_origem_proced_itens_adic_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_itens_adic_w, ie_origem_proced_itens_adic_w;
							
							if (coalesce(cd_procedimento_itens_adic_w::text, '') = '') then
								select	max(cd_procedimento),
										max(ie_origem_proced)
								into STRICT	cd_procedimento_itens_adic_w,
										ie_origem_proced_itens_adic_w
								from	proc_interno
								where	nr_sequencia = nr_seq_proc_int_itens_adic_w;
							end if;
							
						end if;
						
						select	nextval('orcamento_paciente_proc_seq')
						into STRICT	nr_seq_orcamento_proc_w
						;
						
						insert into orcamento_paciente_proc(	
							 nr_sequencia_orcamento,
							 cd_procedimento,
							 ie_origem_proced,
							 nr_seq_proc_interno,
							 qt_procedimento,
							 dt_atualizacao,
							 nm_usuario,
							 vl_procedimento,
							 ie_valor_informado,
							 nr_sequencia
							 )
						values (	 nr_seq_orcamento_w,
							 cd_procedimento_itens_adic_w,
							 ie_origem_proced_itens_adic_w,
							 nr_seq_proc_int_itens_adic_w,
							 1,
							 clock_timestamp(),
							 nm_usuario_p,
							 0,
							 'N',
							 nr_seq_orcamento_proc_w
							 );	
											
						if (ie_gerar_assoc_w = 'S') then
							CALL Gerar_Proc_Assoc_orcamento(nr_seq_orcamento_w,nr_seq_orcamento_proc_w,nm_usuario_p);
						end if;					
						
						end;
						end loop;
					close C70;
				end if;
				
				end;										
			end loop;							
			close C30;
			
			if (ie_considera_pacote_w = 'S') then
				open c50;
				loop
				fetch c50 into	
					nr_seq_pacote_w,
					nr_seq_pac_tipo_acomod_w;
				EXIT WHEN NOT FOUND; /* apply on c50 */
					begin
					CALL gerar_orcamento_pacote(nr_seq_orcamento_w, nr_seq_pacote_w, nr_seq_pac_tipo_acomod_w, nm_usuario_p);
					end;
				end loop;
				close c50;
			end if;
			open C40;
			loop
			fetch C40 into	
				cd_procedimento_lab_w,
				ie_origem_proced_lab_w,
				nr_seq_proc_interno_lab_w,
				nr_seq_exame_lab_w,
				ie_glosa_w;
			EXIT WHEN NOT FOUND; /* apply on C40 */
				begin
				
				if (nr_seq_proc_interno_lab_w IS NOT NULL AND nr_seq_proc_interno_lab_w::text <> '') and (ie_glosa_w = 'T') then

					SELECT * FROM obter_proc_tab_interno_conv(nr_seq_proc_interno_lab_w, cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_lab_w, ie_origem_proced_lab_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_lab_w, ie_origem_proced_lab_w;
							
					if (coalesce(cd_procedimento_lab_w::text, '') = '') then
						select	max(cd_procedimento),
							max(ie_origem_proced)
						into STRICT	cd_procedimento_lab_w,
							ie_origem_proced_lab_w
						from	proc_interno
						where	nr_sequencia		= nr_seq_proc_interno_lab_w;
					end if;
					
				end if;
				
				select	nextval('orcamento_paciente_proc_seq')
				into STRICT	nr_seq_orcamento_proc_w
				;
				
				insert into orcamento_paciente_proc(	
					 nr_sequencia_orcamento,
					 cd_procedimento,
					 ie_origem_proced,
					 nr_seq_proc_interno,
					 nr_seq_exame,
					 qt_procedimento,
					 dt_atualizacao,
					 nm_usuario,
					 vl_procedimento,
					 ie_valor_informado,
					 nr_sequencia)
				values (	 nr_seq_orcamento_w,
					 cd_procedimento_lab_w,
					 ie_origem_proced_lab_w,
					 nr_seq_proc_interno_lab_w,
					 nr_seq_exame_lab_w,
					 1,
					 clock_timestamp(),
					 nm_usuario_p,
					 0,
					 'N',
					 nr_seq_orcamento_proc_w);
				
				if (ie_gerar_assoc_w = 'S') then
					CALL Gerar_Proc_Assoc_orcamento(nr_seq_orcamento_w,nr_seq_orcamento_proc_w,nm_usuario_p);
				end if;
				end;
			end loop;
			close C40;

			if (ie_gera_med_quimio_w = 'S') then
				open C60;
				loop
				fetch C60 into
					cd_protocolo_w,
					nr_seq_medicacao_w;
				EXIT WHEN NOT FOUND; /* apply on C60 */
					begin
					CALL gerar_orcamento_oncologico(cd_protocolo_w, nr_seq_medicacao_w, nr_seq_orcamento_w, nm_usuario_p);
					end;										
				end loop;							
				close C60;
			end if;			
		end if;
		CALL Calcular_Orcamento_Paciente(nr_seq_orcamento_w,
					    nm_usuario_p,
					    cd_estabelecimento_p);					   					
	else
		
		if (cd_convenio_p IS NOT NULL AND cd_convenio_p::text <> '') then
			cd_convenio_w := cd_convenio_p;
		end if;
	
		if (cd_categoria_p IS NOT NULL AND cd_categoria_p::text <> '') then
			cd_categoria_w := cd_categoria_p;
		end if;
	
		if (cd_plano_p IS NOT NULL AND cd_plano_p::text <> '') then
			cd_plano_w := cd_plano_p;
		end if;
	
		insert into orcamento_paciente(nr_sequencia_orcamento,
				cd_estabelecimento,
				cd_pessoa_fisica,
				dt_orcamento,
				cd_convenio,
				cd_categoria,
				cd_plano,
				cd_condicao_pagamento,
				ie_status_orcamento,
				dt_atualizacao,
				nm_usuario,
				vl_deposito,
				ie_calculo_valor,
				ie_tipo_atendimento,
				cd_tipo_acomodacao,
				nr_seq_ageint,
				dt_validade)
			values (nr_seq_orcamento_w,
				cd_estabelecimento_p,
				cd_pessoa_fisica_w,
				clock_timestamp(),
				cd_convenio_w,
				cd_categoria_w,
				cd_plano_w,
				coalesce(cd_condicao_pagamento_w,1),
				1,
				clock_timestamp(),
				nm_usuario_p,
				0,
				'C',
				ie_tipo_atendimento_w,
				cd_tipo_acomodacao_w,
				nr_seq_ageint_p,
				clock_timestamp() + coalesce(qt_dias_validade_w,1));

		commit;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_orcamento_ageint ( nr_seq_orcamento_p bigint, nr_seq_ageint_p bigint, cd_profissional_p text, ie_opcao_p text, nm_usuario_p text, cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_plano_p text, ie_multimed_p text, ds_erro_p INOUT text) FROM PUBLIC;

