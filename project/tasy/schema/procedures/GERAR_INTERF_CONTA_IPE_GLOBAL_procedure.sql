-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_interf_conta_ipe_global ( nr_seq_protocolo_p bigint, nr_interno_conta_p bigint) AS $body$
DECLARE


nr_sequencia_w			bigint := 0;
tp_nota_w			smallint;
cd_prestador_w			varchar(14);
ie_prestador_w			varchar(14);
nr_interno_conta_w			w_interf_conta_item.nr_interno_conta%type;
nr_atendimento_w			w_interf_conta_item.nr_atendimento%type;
dt_item_w			w_interf_conta_item.dt_item%type;
cd_item_convenio_w		w_interf_conta_item.cd_item_convenio%type;
cd_item_w			w_interf_conta_item.qt_item%type;
qt_item_w			double precision;
cd_funcao_executor_w		w_interf_conta_item.cd_funcao_executor%type;
cd_funcao_exec_item_w		smallint;
ie_via_acesso_w			w_interf_conta_item.ie_via_acesso_inf%type;
ie_urgencia_w			smallint;
vl_honorario_w			w_interf_conta_item.vl_honorario%type;
vl_total_item_w			w_interf_conta_item.vl_total_item%type;
cd_brasindice_w			w_interf_conta_item.cd_brasindice%type;
cd_medico_executor_w		w_interf_conta_item.cd_medico_executor%type;
cd_medico_exec_conv_w		w_interf_conta_item.cd_medico_exec_conv%type;
nm_medico_executor_w		w_interf_conta_item.nm_medico_executor%type;
nr_crm_executor_w			w_interf_conta_item.nr_crm_executor%type;
uf_crm_executor_w			w_interf_conta_item.uf_crm_executor%type;
nr_cpf_executor_w			w_interf_conta_item.nr_cpf_executor%type;
nr_seq_protocolo_w		w_interf_conta_item.nr_seq_protocolo%type;
cd_convenio_w			w_interf_conta_item.cd_convenio%type;
cd_cgc_hospital_w			w_interf_conta_item.cd_cgc_hospital%type;
cd_cgc_convenio_w		w_interf_conta_item.cd_cgc_convenio%type;
cd_interno_w			w_interf_conta_item.cd_interno%type;
ie_responsavel_credito_w		w_interf_conta_item.ie_responsavel_credito%type;
nr_folha_w			bigint;
nr_linha_w			bigint;
ds_item_w			w_interf_conta_item.ds_item%type;
tp_nota_ant_w			smallint := 0;
ie_tipo_item_w			w_interf_conta_item.ie_tipo_item%type;
nr_seq_espitem_w			bigint;
cd_tipo_item_interf_w		smallint;
cd_area_procedimento_w		bigint;
pr_via_acesso_w			double precision;
ie_via_acesso_ipe_w		smallint;

ie_tipo_atendimento_w		smallint;
nr_seq_proc_princ_w		bigint;
vl_matmed_proc_princ_w		w_interf_conta_item.vl_matmed_proc_princ%type;
cd_procedimento_ref_w		bigint;
cd_area_proc_ref_w		bigint;
nr_seq_proc_ref_w			bigint;

ie_medico_w			varchar(1);
ie_auxiliar_w			varchar(1);
nr_indaux_w			smallint;
nr_interno_conta_ant_w		bigint;
cd_item_convenio_ant_w		bigint;
qt_auxiliares_w			integer	:=0;
nr_seq_conta_convenio_w         	bigint;
nr_seq_item_w			bigint;
nr_seq_item_ant_w			bigint;
nr_seq_partic_w			bigint;
ie_origem_proced_w		bigint;
ie_forma_apresent_w		bigint;
qt_aux_item_w			bigint;
qt_aux_exec_w			bigint;

cd_medico_exec_proc_w		varchar(10);
cd_medico_exec_ant_w		varchar(10);
vl_original_w			double precision:=0;
vl_unitario_item_w			double precision;

cd_cgc_prestador_w		varchar(14);
ie_ordem_taxa_w			bigint;
cd_unidade_medida_w             	varchar(30);
cd_estabelecimento_w            	protocolo_convenio.cd_estabelecimento%type;
cd_conv_protocolo_w		protocolo_convenio.cd_convenio%type;
ie_agrup_data_serv_ipe_w		varchar(01):= 'S';

nr_linha_ww                      w_interf_conta_item_ipe.nr_linha%type := 0;
nr_folha_ww                      w_interf_conta_item_ipe.nr_folha%type;
ie_agrupa_data_ipe_w            varchar(01):= 'N';

C03 CURSOR FOR
SELECT 	a.nr_interno_conta,
	a.nr_sequencia,
	a.cd_item_convenio,
	a.cd_item,
	a.cd_funcao_executor,
	b.ie_medico,
	b.ie_auxiliar,
	CASE WHEN b.ie_auxiliar='S' THEN 0  ELSE 1 END  indaux,
	a.nr_seq_item,
	a.cd_medico_executor,
	Obter_Seq_Partic_Proc_Func(a.nr_seq_item, a.cd_funcao_executor) nr_seq_partic,
	a.ie_origem_proced
from   	w_interf_conta_cab c,
	funcao_medico b,
   	w_interf_conta_item a
where  	a.nr_interno_conta	= nr_interno_conta_p
and	a.nr_seq_protocolo	= nr_seq_protocolo_p
and	c.nr_interno_conta	= a.nr_interno_conta
and	obter_tipo_nota_ipe_global(c.ie_tipo_atendimento,a.ie_tipo_item,a.cd_item,a.ie_origem_proced,a.cd_cgc_hospital, nr_interno_conta_p) in (75,85)
and    	(a.cd_funcao_executor IS NOT NULL AND a.cd_funcao_executor::text <> '')
and    	a.cd_funcao_executor = b.cd_funcao
and    	b.ie_medico             = 'S'
and    	b.ie_anestesista        = 'N'
order by 1,3,9,8,11,2;

C02 CURSOR FOR
SELECT a.nr_seq_proc_princ,
	 sum(a.vl_total_item)
from 	 w_interf_conta_item a
where	 a.nr_interno_conta	= nr_interno_conta_p
and	 a.nr_seq_protocolo	= nr_seq_protocolo_p
and  	 (a.nr_seq_proc_princ IS NOT NULL AND a.nr_seq_proc_princ::text <> '')
and 	 a.nr_seq_proc_princ 	> 0
group by a.nr_seq_proc_princ;


C01 CURSOR FOR
SELECT	a.nr_seq_protocolo,--1
		c.ie_tipo_item,--2
	min(c.nr_seq_item),--3
	obter_tipo_nota_ipe_global(a.ie_tipo_atendimento,c.ie_tipo_item,c.cd_item, c.ie_origem_proced, a.cd_cgc_hospital, nr_interno_conta_p) tp_nota,--4
	(coalesce(c.nr_cpf_executor,coalesce(c.cd_cgc_prestador,c.cd_cgc_hospital)))
					cd_prestador,--5
	c.nr_interno_conta,--6
	CASE WHEN a.ie_tipo_atendimento=1 THEN		CASE WHEN obter_tipo_nota_ipe_global(a.ie_tipo_atendimento,c.ie_tipo_item,c.cd_item, c.ie_origem_proced, a.cd_cgc_hospital, nr_interno_conta_p)=75 THEN c.dt_item WHEN obter_tipo_nota_ipe_global(a.ie_tipo_atendimento,c.ie_tipo_item,c.cd_item, c.ie_origem_proced, a.cd_cgc_hospital, nr_interno_conta_p)=85 THEN c.dt_item WHEN obter_tipo_nota_ipe_global(a.ie_tipo_atendimento,c.ie_tipo_item,c.cd_item, c.ie_origem_proced, a.cd_cgc_hospital, nr_interno_conta_p)=77 THEN CASE WHEN ie_agrup_data_serv_ipe_w='N' THEN  c.dt_item  ELSE trunc(c.dt_item) END  WHEN obter_tipo_nota_ipe_global(a.ie_tipo_atendimento,c.ie_tipo_item,c.cd_item, c.ie_origem_proced, a.cd_cgc_hospital, nr_interno_conta_p)=87 THEN trunc(c.dt_item)  ELSE CASE WHEN c.cd_item_convenio='8001' THEN a.dt_alta  ELSE trunc(c.dt_item) END  END  WHEN a.ie_tipo_atendimento=8 THEN CASE WHEN ie_agrupa_data_ipe_w='S' THEN  c.dt_item  ELSE trunc(c.dt_item) END   ELSE trunc(a.dt_entrada) END  dt_item,--7
	(CASE WHEN a.ie_tipo_atendimento=3 THEN 		CASE WHEN c.ie_tipo_item=1 THEN c.cd_item_convenio WHEN c.ie_tipo_item=2 THEN CASE WHEN c.cd_tipo_item_interf=5 THEN '98007530' WHEN c.cd_tipo_item_interf=4 THEN '98007963'  ELSE '98007963' END   ELSE c.cd_item_convenio END   ELSE c.cd_item_convenio END )::numeric  cd_item_convenio,--8
	sum(c.qt_item),--9
	c.cd_funcao_executor,--10
	c.ie_via_acesso_inf,
	CASE WHEN coalesce(c.pr_hora_extra,0)=0 THEN 0 WHEN coalesce(c.pr_hora_extra,0)=1 THEN 0  ELSE 11 END 	ie_urgencia,
	sum(c.vl_honorario),
	sum(c.vl_total_item),
	CASE WHEN a.ie_tipo_atendimento=3 THEN ' '  ELSE CASE WHEN c.cd_item_convenio='8001' THEN ' '  ELSE lpad(trim(both c.cd_brasindice),'13','0') END  END  cd_brasindice,
	c.nr_atendimento,
	CASE WHEN a.ie_tipo_atendimento=3 THEN ' '  ELSE CASE WHEN cd_item_convenio='8001' THEN substr(wheb_mensagem_pck.get_texto(307094),1,255)  ELSE c.ds_item END  END  ds_item,
	c.cd_medico_executor,
	c.cd_medico_exec_conv,
	c.nm_medico_executor,
	c.nr_crm_executor,
	c.uf_crm_executor,
	c.nr_cpf_executor,
	c.cd_convenio,
	c.cd_cgc_hospital,
	c.cd_cgc_convenio,
	c.cd_interno,
	CASE WHEN c.cd_tipo_item_interf=5 THEN 'MEDIC'  ELSE c.ie_responsavel_credito END ,
	c.cd_tipo_item_interf,
	coalesce(x.cd_area_procedimento,0),
	coalesce(c.pr_via_acesso,0),
	coalesce(c.vl_matmed_proc_princ,0),
	a.NR_SEQ_CONTA_CONVENIO,
	max(c.cd_item),
	coalesce(c.nr_cpf_executor,coalesce(c.cd_cgc_prestador,c.cd_cgc_hospital)) ie_prestador,
	coalesce(c.cd_cgc_prestador,c.cd_cgc_hospital) cd_cgc_prestador,
	sum(coalesce(c.vl_original,0)) vl_original,
	max(c.vl_unitario_item) vl_unitario_item,
	CASE WHEN c.cd_item_convenio='2054' THEN 1 WHEN c.cd_item_convenio='2062' THEN 1 WHEN c.cd_item_convenio='2070' THEN 1 WHEN c.cd_item_convenio='2089' THEN 1  ELSE 0 END  ie_ordem_taxa,
	CASE WHEN a.ie_tipo_atendimento=3 THEN ' '  ELSE CASE WHEN c.cd_item_convenio='8001' THEN ' '  ELSE CASE WHEN c.ie_tipo_item=2 THEN  		obter_unidade_medida_ipe(c.nr_seq_item, a.ie_tipo_atendimento, c.ie_tipo_item, c.cd_item, a.cd_cgc_hospital, c.cd_unidade_medida)  ELSE null END  END  END  cd_unidade_medida
FROM w_interf_conta_cab a, w_interf_conta_item c
LEFT OUTER JOIN estrutura_procedimento_v x ON (c.cd_item = x.cd_procedimento AND c.ie_origem_proced = x.ie_origem_proced)
LEFT OUTER JOIN material y ON (c.cd_item = y.cd_material)
WHERE a.nr_interno_conta		= c.nr_interno_conta and a.nr_interno_conta		= nr_interno_conta_p    group by
	a.nr_seq_protocolo,
	obter_tipo_nota_ipe_global(a.ie_tipo_atendimento,c.ie_tipo_item,c.cd_item, c.ie_origem_proced, a.cd_cgc_hospital, nr_interno_conta_p),
	(coalesce(c.nr_cpf_executor,coalesce(c.cd_cgc_prestador,c.cd_cgc_hospital))),
	c.nr_interno_conta,
	coalesce(c.nr_cpf_executor,coalesce(c.cd_cgc_prestador,c.cd_cgc_hospital)),
	CASE WHEN c.cd_item_convenio='8001' THEN 5  ELSE obter_classif_ipe_Global(y.cd_material, x.cd_procedimento, x.ie_origem_proced,				a.ie_tipo_atendimento, c.cd_medico_executor) END ,
	CASE WHEN a.ie_tipo_atendimento=1 THEN 		CASE WHEN obter_tipo_nota_ipe_global(a.ie_tipo_atendimento,c.ie_tipo_item,c.cd_item, c.ie_origem_proced, a.cd_cgc_hospital, nr_interno_conta_p)=75 THEN c.dt_item WHEN obter_tipo_nota_ipe_global(a.ie_tipo_atendimento,c.ie_tipo_item,c.cd_item, c.ie_origem_proced, a.cd_cgc_hospital, nr_interno_conta_p)=85 THEN c.dt_item WHEN obter_tipo_nota_ipe_global(a.ie_tipo_atendimento,c.ie_tipo_item,c.cd_item, c.ie_origem_proced, a.cd_cgc_hospital, nr_interno_conta_p)=77 THEN CASE WHEN ie_agrup_data_serv_ipe_w='N' THEN  c.dt_item  ELSE trunc(c.dt_item) END  WHEN obter_tipo_nota_ipe_global(a.ie_tipo_atendimento,c.ie_tipo_item,c.cd_item, c.ie_origem_proced, a.cd_cgc_hospital, nr_interno_conta_p)=87 THEN trunc(c.dt_item)  ELSE CASE WHEN c.cd_item_convenio='8001' THEN a.dt_alta  ELSE trunc(c.dt_item) END  END  WHEN a.ie_tipo_atendimento=8 THEN CASE WHEN ie_agrupa_data_ipe_w='S' THEN  c.dt_item  ELSE trunc(c.dt_item) END   ELSE trunc(a.dt_entrada) END ,
	(CASE WHEN a.ie_tipo_atendimento=3 THEN 		CASE WHEN c.ie_tipo_item=1 THEN c.cd_item_convenio WHEN c.ie_tipo_item=2 THEN CASE WHEN c.cd_tipo_item_interf=5 THEN '98007530' WHEN c.cd_tipo_item_interf=4 THEN '98007963'  ELSE '98007963' END   ELSE c.cd_item_convenio END   ELSE c.cd_item_convenio END )::numeric ,
	c.cd_funcao_executor,
	c.ie_via_acesso_inf,
	CASE WHEN coalesce(c.pr_hora_extra,0)=0 THEN 0 WHEN coalesce(c.pr_hora_extra,0)=1 THEN 0  ELSE 11 END ,
	CASE WHEN a.ie_tipo_atendimento=3 THEN ' '  ELSE CASE WHEN c.cd_item_convenio='8001' THEN ' '  ELSE lpad(trim(both c.cd_brasindice),'13','0') END  END ,
	c.nr_atendimento,
	CASE WHEN a.ie_tipo_atendimento=3 THEN ' '  ELSE CASE WHEN cd_item_convenio='8001' THEN substr(wheb_mensagem_pck.get_texto(307094),1,255)  ELSE c.ds_item END  END ,
	c.cd_medico_executor,
	c.cd_medico_exec_conv,
	c.nm_medico_executor,
	c.nr_crm_executor,
	c.uf_crm_executor,
	c.nr_cpf_executor,
	c.cd_convenio,
	c.cd_cgc_hospital,
	c.cd_cgc_convenio,
	c.cd_interno,
	CASE WHEN c.cd_tipo_item_interf=5 THEN 'MEDIC'  ELSE c.ie_responsavel_credito END ,
	c.ie_tipo_item,
	c.cd_tipo_item_interf,
	coalesce(x.cd_area_procedimento,0),
	coalesce(c.pr_via_acesso,0),
	coalesce(c.vl_matmed_proc_princ,0),
	coalesce(c.cd_cgc_prestador,c.cd_cgc_hospital),
	a.NR_SEQ_CONTA_CONVENIO,
	CASE WHEN c.cd_item_convenio='2054' THEN 1 WHEN c.cd_item_convenio='2062' THEN 1 WHEN c.cd_item_convenio='2070' THEN 1 WHEN c.cd_item_convenio='2089' THEN 1  ELSE 0 END ,
	CASE WHEN a.ie_tipo_atendimento=3 THEN ' '  ELSE CASE WHEN c.cd_item_convenio='8001' THEN ' '  ELSE CASE WHEN c.ie_tipo_item=2 THEN  		obter_unidade_medida_ipe(c.nr_seq_item, a.ie_tipo_atendimento, c.ie_tipo_item, c.cd_item, a.cd_cgc_hospital, c.cd_unidade_medida)  ELSE null END  END  END ,
	CASE WHEN c.cd_item_convenio='16000005' THEN  99  ELSE CASE WHEN c.cd_item_convenio='8001' THEN 5  ELSE obter_classif_ipe_Global(y.cd_material, x.cd_procedimento, x.ie_origem_proced,a.ie_tipo_atendimento, c.cd_medico_executor) END  END 
having sum(c.qt_item) > 0
order by 6,4,ie_ordem_taxa,2,
	CASE WHEN c.cd_item_convenio='16000005' THEN  99  ELSE CASE WHEN c.cd_item_convenio='8001' THEN 5  ELSE obter_classif_ipe_Global(y.cd_material, x.cd_procedimento, x.ie_origem_proced,a.ie_tipo_atendimento, c.cd_medico_executor) END  END ,
	7,3,10;

c04 CURSOR FOR
        SELECT  a.nr_sequencia
        from    w_interf_conta_item_ipe a
        where   substr(cd_item_convenio,1,5) = 40812
        and	a.nr_seq_protocolo	= nr_seq_protocolo_p
        and	a.nr_interno_conta	= nr_interno_conta_p;
c04_w   c04%rowtype;


BEGIN

/* Acertar funcao dos participantes */

qt_auxiliares_w		:= 0;
nr_interno_conta_ant_w	:= 0;
nr_seq_item_ant_w	:= 0;
cd_item_convenio_ant_w	:= 0;
cd_medico_exec_ant_w	:= '';

select  max(cd_estabelecimento),
	max(cd_convenio)
into STRICT    cd_estabelecimento_w,
	cd_conv_protocolo_w
from    protocolo_convenio
where   nr_seq_protocolo = nr_seq_protocolo_p;

select  coalesce(max(ie_agrup_data_serv_ipe),'S'),
        coalesce(max(ie_agrupa_data_ipe), 'N')
into STRICT    ie_agrup_data_serv_ipe_w,
        ie_agrupa_data_ipe_w  /*                   'S'  -> Nao Agrupa a data             |        'N'  ->  Agrupa a data   */
from    parametro_faturamento
where   cd_estabelecimento      = cd_estabelecimento_w;

OPEN C03;
LOOP
FETCH C03 	into
		nr_interno_conta_w,
	 	nr_sequencia_w,
	 	cd_item_convenio_w,
		cd_item_w,
	 	cd_funcao_executor_w,
	 	ie_medico_w,
	 	ie_auxiliar_w,
	 	nr_indaux_w,
		nr_seq_item_w,
		cd_medico_executor_w,
		nr_seq_partic_w,
		ie_origem_proced_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		select	max(cd_medico_executor)
		into STRICT	cd_medico_exec_proc_w
		from	procedimento_paciente
		where	nr_sequencia	= nr_seq_item_w;


		if (nr_interno_conta_w <> nr_interno_conta_ant_w or
			cd_item_convenio_w <> cd_item_convenio_ant_w) or
			(cd_medico_executor_w <> cd_medico_exec_ant_w AND cd_medico_executor_w = cd_medico_exec_proc_w) or (nr_seq_item_w <> nr_seq_item_ant_w) then
			begin
			nr_interno_conta_ant_w	:= nr_interno_conta_w;
			cd_item_convenio_ant_w	:= cd_item_convenio_w;
			cd_medico_exec_ant_w	:= cd_medico_executor_w;
			nr_seq_item_ant_w	:= nr_seq_item_w;
			qt_auxiliares_w		:= 0;
			end;
		end if;		


		if (ie_auxiliar_w = 'S') then
			qt_auxiliares_w	:= qt_auxiliares_w + 1;
		end if;

		if (qt_auxiliares_w	= 1) 	and (ie_auxiliar_w	= 'S') then
			begin
			update w_interf_conta_item
			set	 cd_funcao_executor 	= 41
			where	 nr_sequencia 		= nr_sequencia_w
			and 	 ((cd_medico_executor	<> cd_medico_exec_proc_w) or (pr_funcao_participante = 1));
			exception
				when others then
				qt_auxiliares_w	:= qt_auxiliares_w;
			end;
		end if;		

		if (qt_auxiliares_w	= 2) and (ie_auxiliar_w	= 'S') then
			begin
			update w_interf_conta_item
			set	 cd_funcao_executor = 42
			where	 nr_sequencia 	= nr_sequencia_w
			and 	 ((cd_medico_executor	<> cd_medico_exec_proc_w) or (pr_funcao_participante = 1));
			exception
				when others then
				qt_auxiliares_w	:= qt_auxiliares_w;
			end;
		end if;		

		if (qt_auxiliares_w	= 3) and (ie_auxiliar_w	= 'S') then
			begin
			update w_interf_conta_item
			set	 cd_funcao_executor = 43
			where	 nr_sequencia 	= nr_sequencia_w
			and 	 ((cd_medico_executor	<> cd_medico_exec_proc_w) or (pr_funcao_participante = 1));
			exception
				when others then
				qt_auxiliares_w	:= qt_auxiliares_w;
			end;
		end if;		

		if (ie_medico_w 	= 'S') and (ie_auxiliar_w	= 'N') then
			begin
			/* comando antigo Adelson 14-03-2006 */


			/* liberado novamente o comando a seguir para consultas proc=20010 OS35081 */


			/* incluido no comando teste somente para proc=20010 OS35081 (30-05-2006) */

			select	coalesce(max(IE_FORMA_APRESENTACAO), 0)
			into STRICT	IE_FORMA_APRESENT_w
			from	procedimento
			where	cd_procedimento		= cd_item_convenio_w
			and	ie_origem_proced	= ie_origem_proced_w;

			begin
			update 	w_interf_conta_item
			set	cd_funcao_executor 	= qt_auxiliares_w
			where	nr_sequencia 		= nr_sequencia_w
			and	((cd_item_convenio_w	in (20010,10102019)) or (IE_FORMA_APRESENT_w in (5,6,7)));
			exception
				when others then
				qt_auxiliares_w	:= qt_auxiliares_w;
			end;

			select	count(*)
			into STRICT	qt_aux_item_w
			from	procedimento_participante
			where 	nr_sequencia		= nr_seq_item_w;

			/* OS29829 Banco de Olhos qdo medicos auxiliares e o mesmo do cirurgiao, gerar um registro com qtd auxiliares e valor total */


			/* Adelson 14-03-2006 */
 
			/* incluido no comando teste somente para proc <> 20010 OS35081 (30-05-2006) */

			begin
			update	w_interf_conta_item
			set	cd_funcao_executor 	= qt_auxiliares_w,
				qt_item			= CASE WHEN cd_item_convenio_w=30015 THEN qt_item WHEN cd_item_convenio_w=10103015 THEN qt_item  ELSE 0 END --Adicionado o procedimento 30015 para a OS243199 - Geliard
			where	nr_interno_conta	= nr_interno_conta_w
			and	nr_seq_item		= nr_seq_item_w
			and	cd_medico_executor 	= cd_medico_executor_w
			and	cd_item_convenio_w	not in (20010,10102019)
			and 	not IE_FORMA_APRESENT_w in (5,6,7);

			select	max(cd_funcao_executor)
			into STRICT	cd_funcao_exec_item_w
			from	w_interf_conta_item
			where	nr_sequencia		= nr_sequencia_w;
			
/*			update	w_interf_conta_item
			set	cd_funcao_executor 	= cd_funcao_exec_item_w,
				qt_item			= 0
			where	nr_interno_conta	= nr_interno_conta_w
			and	cd_item_convenio_w	<> 20010
			and 	not IE_FORMA_APRESENT_w in (5,6,7)
			and	nr_seq_item		= nr_seq_item_w
			and	cd_medico_executor 	= cd_medico_executor_w
			and	cd_medico_executor_w	= cd_medico_exec_proc_w
			and	nr_sequencia		<> nr_sequencia_w;
*/
			exception
				when others then
				qt_auxiliares_w	:= qt_auxiliares_w;
			end;

			qt_auxiliares_w		:= 0;
			nr_interno_conta_ant_w	:= 0;
			nr_seq_item_ant_w	:= 0;
			cd_item_convenio_ant_w	:= 0;
			cd_medico_exec_ant_w	:= '';

			end;
		end if;
		commit;
		/* incluido no comando teste somente para proc <> 20010 OS35081 (30-05-2006) */

		if (ie_medico_w 	= 'S') and (ie_auxiliar_w	= 'N') then
			begin
			RAISE NOTICE 'nr_sequencia_w:%', nr_sequencia_w;
			update 	w_interf_conta_item
			set	 qt_item = 1
			where	 nr_sequencia 		= nr_sequencia_w
			and	cd_item_convenio_w	not in (20010,10102019,30015,10103015)--Adicionado o procedimento 30015 para a OS243199 - Geliard
			and	not IE_FORMA_APRESENT_w in (5,6,7);
			exception
				when others then
				qt_auxiliares_w	:= qt_auxiliares_w;
			commit;
			end;
		end if;
		end;
END LOOP;
close C03;



/* tratar vlr matmed de exames que devem gerar acumulado no codigo 32200005 logo apos o exame */


/* esta regra vale somente para internados Exames e PA esta sendo tratado no gerar_interf_conta_item */


/* Obter tipo de atendimento da conta */

select a.ie_tipo_atendimento
into STRICT	 ie_tipo_atendimento_w
from	 atendimento_paciente a,
	 conta_paciente b
where	 b.nr_interno_conta	= nr_interno_conta_p	
and	 b.nr_atendimento 	= a.nr_atendimento;

/* Incluido todos os tipo de atendimento no IF Abaixo  OS 88702 Hosp. Bruno Born IPE GLOBAL*/

if (ie_tipo_atendimento_w	in (1,3,7,8)) then
	BEGIN
	OPEN C02;
	LOOP
	FETCH C02 	into
			nr_seq_proc_princ_w,
			vl_matmed_proc_princ_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
     			begin
			/* obter o procedimento de referencia */

			select coalesce(max(cd_item),0),
				 coalesce(max(nr_sequencia),0)
			into STRICT	 cd_procedimento_ref_w,
				 nr_seq_proc_ref_w
			from	 w_interf_conta_item
			where	 nr_interno_conta	= nr_interno_conta_p
			and	 nr_seq_protocolo	= nr_seq_protocolo_p
			and	 nr_seq_item	= nr_seq_proc_princ_w;

			/* obter area do procedimento de referencia, deve ser 3-diagnose e terapia */

			select coalesce(max(cd_area_procedimento),0)
			into STRICT	 cd_area_proc_ref_w
			from	 estrutura_procedimento_v
			where	 cd_procedimento	= cd_procedimento_ref_w
			and	 ie_origem_proced	= 1;

			if (cd_area_proc_ref_w	= 3) then
				begin
				update w_interf_conta_item
				set	 vl_matmed_proc_princ	= vl_matmed_proc_princ_w
				where	 nr_sequencia		= nr_seq_proc_ref_w;

				delete from w_interf_conta_item
				where	 nr_interno_conta		= nr_interno_conta_p
				and	 nr_seq_protocolo		= nr_seq_protocolo_p
				and  	 nr_seq_proc_princ 	= nr_seq_proc_princ_w;
				end;
			end if;

			end;
	END LOOP;
	close C02;
	END;
end if;
commit;

OPEN C01;
LOOP
FETCH C01 	into
		nr_seq_protocolo_w,
		ie_tipo_item_w,
		nr_seq_espitem_w,
		tp_nota_w,
		cd_prestador_w,
		nr_interno_conta_w,
		dt_item_w,
		cd_item_convenio_w,
		qt_item_w,
		cd_funcao_executor_w,
		ie_via_acesso_w,
		ie_urgencia_w,
		vl_honorario_w,
		vl_total_item_w,
		cd_brasindice_w,
		nr_atendimento_w,
		ds_item_w,
		cd_medico_executor_w,
		cd_medico_exec_conv_w,
		nm_medico_executor_w,
		nr_crm_executor_w,
		uf_crm_executor_w,
		nr_cpf_executor_w,
		cd_convenio_w,
		cd_cgc_hospital_w,
		cd_cgc_convenio_w,
		cd_interno_w,
		ie_responsavel_credito_w,
		cd_tipo_item_interf_w,
		cd_area_procedimento_w,
		pr_via_acesso_w,
		vl_matmed_proc_princ_w,
		NR_SEQ_CONTA_CONVENIO_w,
		cd_item_w,
		ie_prestador_w,
		cd_cgc_prestador_w,
		vl_original_w,
		vl_unitario_item_w,
		ie_ordem_taxa_w,
		cd_unidade_medida_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
     		BEGIN
		RAISE NOTICE 'nr_interno_conta_w:%,cd_item_convenio_w:%,dt_item_w:%,qt_item_w:%', nr_interno_conta_w, cd_item_convenio_w, dt_item_w, qt_item_w;
		if (tp_nota_ant_w <> tp_nota_w) then
			begin
			tp_nota_ant_w	:= tp_nota_w;
			nr_folha_w	:= 0;
			if (tp_nota_w	= 77) then
				nr_linha_w	:= 23;
			elsif (tp_nota_w in (75,85))then
				nr_linha_w	:= 52;
			else
				nr_linha_w	:= 25;
			end if;
			end;
		end if;

		nr_linha_w	:= nr_linha_w + 1;

		if (tp_nota_w	in (77,87)) then
			begin
			if (nr_linha_w	> 23) then
				begin
				nr_folha_w	:= nr_folha_w + 1;
				nr_linha_w	:= 1;
				end;
			end if;
			end;
			
		elsif (tp_nota_w in (75,85))then
			begin
				if (nr_linha_w > 52) then
					begin
						nr_folha_w	:= nr_folha_w + 1;
						nr_linha_w	:= 1;
					end;
				end if;
			end;
			
		else
			begin
			if (nr_linha_w	> 25) then
				begin
				nr_folha_w	:= nr_folha_w + 1;
				nr_linha_w	:= 1;
				end;
			end if;
			end;
		end if;




		/* Zerar folhas para honorarios */


		/*if	(tp_nota_w in(75,85)) then
			nr_folha_w	:= 0;
		end if;*/


		/* Criar sequence */

		select 	nextval('w_interf_conta_item_ipe_seq')
		into STRICT	nr_sequencia_w
		;

		/* Define via de acesso */

		if (ie_via_acesso_w	= 'U') then
			ie_via_acesso_ipe_w	:= 00;
		elsif (ie_via_acesso_w	= 'M') then
			ie_via_acesso_ipe_w	:= 31;
		elsif (ie_via_acesso_w	= 'D') then
			ie_via_acesso_ipe_w	:= 32;
		elsif (ie_via_acesso_w	= 'B') then
			ie_via_acesso_ipe_w	:= 33;
		else
			ie_via_acesso_ipe_w	:= 99;
		end if;
/* ignorado por adelsom em 12/10/2004	
		if	(ie_via_acesso_ipe_w = 99)		and
			(cd_area_procedimento_w	= 4) 		and
			(cd_item_convenio_w <> '16000005')	then
			begin
			select define_via_acesso_ipe
				(nr_interno_conta_w,cd_item_convenio_w,pr_via_acesso_w)
			into	ie_via_acesso_ipe_w
			from	dual;
			end;
		end if;
*/
		if (ie_via_acesso_ipe_w = 99) then
			ie_via_acesso_ipe_w	:= 00;
		end if;


		insert into w_interf_conta_item_ipe(
			NR_SEQUENCIA,
			NR_ATENDIMENTO,
			NR_INTERNO_CONTA,
			CD_ITEM_CONVENIO,
			cd_item,
			DS_ITEM,
			QT_ITEM,
			DT_ITEM,
			VL_TOTAL_ITEM,
			CD_MEDICO_EXECUTOR,
			CD_MEDICO_EXEC_CONV,
			NM_MEDICO_EXECUTOR,
			NR_CRM_EXECUTOR,
			UF_CRM_EXECUTOR,
			NR_CPF_EXECUTOR,
			CD_FUNCAO_EXECUTOR,
			IE_VIA_ACESSO,
			CD_BRASINDICE,
			NR_SEQ_PROTOCOLO,
			CD_CONVENIO,
			CD_CGC_HOSPITAL,
			CD_CGC_CONVENIO,
			CD_INTERNO,
			IE_RESPONSAVEL_CREDITO,
			VL_HONORARIO,
			CD_PRESTADOR,
			NR_FOLHA,
			NR_LINHA,
			TP_NOTA,
			IE_URGENCIA,
			ie_tipo_item,
			NR_SEQ_CONTA_CONVENIO,
			ie_prestador,
			cd_cgc_prestador,
			vl_original,
			vl_unitario_item,
			cd_unidade_medida)
		values (
			nr_sequencia_w,
			nr_atendimento_w,
			nr_interno_conta_w,
			cd_item_convenio_w,
			cd_item_w,
			ds_item_w,
			qt_item_w,
			dt_item_w,
			vl_total_item_w,
			cd_medico_executor_w,
			cd_medico_exec_conv_w,
			nm_medico_executor_w,
			nr_crm_executor_w,
			uf_crm_executor_w,
			nr_cpf_executor_w,
			cd_funcao_executor_w,
			ie_via_acesso_ipe_w,
			cd_brasindice_w,
			nr_seq_protocolo_w,
			cd_convenio_w,
			cd_cgc_hospital_w,
			cd_cgc_convenio_w,
			cd_interno_w,
			ie_responsavel_credito_w,
			vl_honorario_w,
			cd_prestador_w,
			nr_folha_w,
			nr_linha_w,
			tp_nota_w,
			ie_urgencia_w,
			cd_tipo_item_interf_w,
			NR_SEQ_CONTA_CONVENIO_w,
			ie_prestador_w,
			cd_cgc_prestador_w,
			vl_original_w,
			vl_unitario_item_w,
			cd_unidade_medida_w);

		/* tratar vlr matmed de exames que devem gerar acumulado no codigo 32200005 logo apos o exame */

		if (vl_matmed_proc_princ_w	> 0) then
			begin
			select nextval('w_interf_conta_item_ipe_seq')
			into STRICT	nr_sequencia_w
			;

			nr_linha_w	:= nr_linha_w + 1;
			if (nr_linha_w	> 23) then
				begin
				nr_folha_w	:= nr_folha_w + 1;
				nr_linha_w	:= 1;
				end;
			end if;

			insert into w_interf_conta_item_ipe(
				NR_SEQUENCIA,
				NR_ATENDIMENTO,
				NR_INTERNO_CONTA,
				CD_ITEM_CONVENIO,
				DS_ITEM,
				QT_ITEM,
				DT_ITEM,
				VL_TOTAL_ITEM,
				CD_MEDICO_EXECUTOR,
				CD_MEDICO_EXEC_CONV,
				NM_MEDICO_EXECUTOR,
				NR_CRM_EXECUTOR,
				UF_CRM_EXECUTOR,
				NR_CPF_EXECUTOR,
				CD_FUNCAO_EXECUTOR,
				IE_VIA_ACESSO,
				CD_BRASINDICE,
				NR_SEQ_PROTOCOLO,
				CD_CONVENIO,
				CD_CGC_HOSPITAL,
				CD_CGC_CONVENIO,
				CD_INTERNO,
				IE_RESPONSAVEL_CREDITO,
				VL_HONORARIO,
				CD_PRESTADOR,
				NR_FOLHA,
				NR_LINHA,
				TP_NOTA,
				IE_URGENCIA,
				ie_tipo_item,
				NR_SEQ_CONTA_CONVENIO,
				ie_prestador, 
				cd_cgc_prestador,
				vl_original,
				vl_unitario_item,
				cd_unidade_medida)
			values (
				nr_sequencia_w,
				nr_atendimento_w,
				nr_interno_conta_w,
				32200005,
				substr(wheb_mensagem_pck.get_texto(307097),1,255),
				1,
				dt_item_w,
				vl_matmed_proc_princ_w,
				cd_medico_executor_w,
				cd_medico_exec_conv_w,
				nm_medico_executor_w,
				nr_crm_executor_w,
				uf_crm_executor_w,
				nr_cpf_executor_w,
				cd_funcao_executor_w,
				ie_via_acesso_ipe_w,
				cd_brasindice_w,
				nr_seq_protocolo_w,
				cd_convenio_w,
				cd_cgc_hospital_w,
				cd_cgc_convenio_w,
				cd_interno_w,
				ie_responsavel_credito_w,
				vl_honorario_w,
				cd_prestador_w,
				nr_folha_w,
				nr_linha_w,
				tp_nota_w,
				ie_urgencia_w,
				cd_tipo_item_interf_w,
				NR_SEQ_CONTA_CONVENIO_w, 
				ie_prestador_w,
				cd_cgc_prestador_w,
				vl_matmed_proc_princ_w,
				vl_unitario_item_w,
				cd_unidade_medida_w);
			end;
		end if;

		commit;
		END;
END LOOP;
close C01;

for c04_w in c04 loop
        begin

        select  coalesce(max(a.nr_linha),0),
                coalesce(max(a.nr_folha),1)
        into STRICT    nr_linha_ww,
                nr_folha_ww
        from    w_interf_conta_item_ipe a
        where   tp_nota = 87
    	and	a.nr_seq_protocolo	= nr_seq_protocolo_p
        and	a.nr_interno_conta	= nr_interno_conta_p;

        nr_linha_ww := nr_linha_ww + 1;

        if (nr_linha_ww     > 23) then
                begin
                nr_folha_ww      := nr_folha_ww + 1;
                nr_linha_ww      := 1;
                end;
        end if;

        insert into w_interf_conta_item_ipe(
                nr_sequencia,
                nr_atendimento,
                nr_interno_conta,
                cd_item_convenio,
                cd_item,
                ds_item,
                qt_item,
                qt_item_conv_div,
                dt_item,
                vl_total_item,
                cd_medico_executor,
                cd_medico_exec_conv,
                nm_medico_executor,
                nr_crm_executor,
                uf_crm_executor,
                nr_cpf_executor,
                cd_funcao_executor,
                ie_via_acesso,
                cd_brasindice,
                nr_seq_protocolo,
                cd_convenio,
                cd_cgc_hospital,
                cd_cgc_convenio,
                cd_interno,
                ie_responsavel_credito,
                vl_honorario,
                cd_prestador,
                nr_folha,
                nr_linha,
                tp_nota,
                ie_urgencia,
                ie_tipo_item,
                nr_seq_conta_convenio,
                ie_prestador,
                cd_cgc_prestador,
                vl_original,
                vl_unitario_item,
                ie_video,
                vl_custo_oper,
                cd_unidade_medida)
        SELECT  nextval('w_interf_conta_item_ipe_seq'),
                nr_atendimento,
                nr_interno_conta,
                cd_item_convenio,
                cd_item,
                ds_item,
                qt_item,
                qt_item_conv_div,
                dt_item,
                vl_total_item,
                cd_medico_executor,
                cd_medico_exec_conv,
                nm_medico_executor,
                nr_crm_executor,
                uf_crm_executor,
                nr_cpf_executor,
                cd_funcao_executor,
                ie_via_acesso,
                cd_brasindice,
                nr_seq_protocolo,
                cd_convenio,
                cd_cgc_hospital,
                cd_cgc_convenio,
                cd_interno,
                ie_responsavel_credito,
                vl_honorario,
                cd_prestador,
                nr_folha_ww,
                nr_linha_ww,
                87,
                ie_urgencia,
                ie_tipo_item,
                nr_seq_conta_convenio,
                ie_prestador,
                cd_cgc_prestador,
                vl_original,
                vl_unitario_item,
                ie_video,
                vl_custo_oper,
                cd_unidade_medida
        from w_interf_conta_item_ipe
	where nr_sequencia = c04_w.nr_sequencia;
	
	end;
end loop;

commit;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_interf_conta_ipe_global ( nr_seq_protocolo_p bigint, nr_interno_conta_p bigint) FROM PUBLIC;

