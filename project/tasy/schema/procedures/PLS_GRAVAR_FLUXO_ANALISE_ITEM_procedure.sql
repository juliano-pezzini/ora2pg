-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gravar_fluxo_analise_item ( nr_seq_analise_p bigint, nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nr_seq_proc_partic_p bigint, nr_seq_conta_pos_p bigint, nr_seq_grupo_atual_p bigint, ie_pagamento_p text, nr_seq_motivo_p bigint, ds_parecer_p text, ie_pre_analise_p text, ie_finalizacao_p text, nm_usuario_p text, ie_conta_inteira_p text, ie_tipo_glosa_p text, ie_origem_acao_p text, nr_seq_fluxo_p INOUT bigint, cd_acao_analise_p pls_acao_analise.cd_acao%type default null) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Tratar a inserção do histórico de análise do item após modificação do mesmo
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
/* IE_TIPO_GLOSA_P
P - Pagamento
F - Faturamento
A - Ambos
*/
/*
ie_origem_acao_p
1 - Liberar
2 - Glosar
3 - Manter
4 - Aceitar Valor calculado
5 - Aceitar valor apresentado
6 - Melhor valor
7 - Ajustar valor item
*/
nr_seq_ordem_w		bigint;
nr_seq_fluxo_w		bigint;
nr_seq_acao_analise_w	pls_acao_analise.nr_sequencia%type;
ie_novo_pos_estab_w	varchar(1);


BEGIN
-- se foi informado um valor, busca a sequencia para gravar na tabela
if (cd_acao_analise_p IS NOT NULL AND cd_acao_analise_p::text <> '') then
	nr_seq_acao_analise_w := pls_util_cta_pck.pls_obter_seq_acao_analise(	cd_acao_analise_p);
end if;

select 	coalesce(max(ie_novo_pos_estab),'N')
into STRICT	ie_novo_pos_estab_w
from	pls_visible_false;

nr_seq_fluxo_w	:= null;
if (nr_seq_grupo_atual_p IS NOT NULL AND nr_seq_grupo_atual_p::text <> '') then
	select	max(nr_seq_ordem)
	into STRICT	nr_seq_ordem_w
	from	pls_auditoria_conta_grupo a
	where	a.nr_seq_analise = nr_seq_analise_p
	and	a.nr_seq_grupo	= nr_seq_grupo_atual_p;

	if (coalesce(nr_seq_ordem_w::text, '') = '') then
		nr_seq_ordem_w := 0;
	end if;

	if (nr_seq_proc_partic_p IS NOT NULL AND nr_seq_proc_partic_p::text <> '') then
		select	nextval('pls_analise_fluxo_item_seq')
		into STRICT	nr_seq_fluxo_w
		;

		insert into pls_analise_fluxo_item(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_analise,
			nr_seq_grupo,
			nr_seq_conta_proc,
			nr_seq_conta_mat,
			nr_seq_proc_partic,
			nr_seq_ordem,
			ie_liberacao_especial,
			ie_pagamento,
			qt_liberada,
			vl_glosa,
			vl_liberado_hi,
			vl_liberado_co,
			vl_liberado_material,
			vl_glosa_co,
			vl_glosa_hi,
			vl_glosa_material,
			vl_total,
			ie_acao_item,
			nr_seq_motivo,
			ds_parecer,
			ie_pre_analise,
			ie_finalizacao,
			ie_glosa_conta,
			ie_tipo_glosa,
			ie_origem_acao,
			nr_seq_acao_analise)
		SELECT	nr_seq_fluxo_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_analise_p,
			nr_seq_grupo_atual_p,
			nr_seq_conta_proc_p,
			nr_seq_conta_mat_p,
			nr_seq_proc_partic_p,
			nr_seq_ordem_w,
			'N',
			ie_pagamento_p,
			a.qt_liberada,
			a.vl_glosa vl_glosa,
			a.vl_participante vl_liberado_hi,
			0 vl_liberado_co,
			0 vl_liberado_material,
			0 vl_glosa_co,
			coalesce(a.vl_glosa,0) vl_glosa_hi,
			0 vl_glosa_material,
			a.vl_participante vl_procedimento,
			CASE WHEN ie_pagamento_p='L' THEN 'L' WHEN ie_pagamento_p='M' THEN 'M'  ELSE 'G' END ,
			nr_seq_motivo_p,
			ds_parecer_p,
			ie_pre_analise_p,
			ie_finalizacao_p,
			ie_conta_inteira_p,
			ie_tipo_glosa_p,
			ie_origem_acao_p,
			nr_seq_acao_analise_w
		from	pls_proc_participante a
		where	a.nr_sequencia	= nr_seq_proc_partic_p;
	elsif (nr_seq_conta_pos_p IS NOT NULL AND nr_seq_conta_pos_p::text <> '') then
		select	nextval('pls_analise_fluxo_item_seq')
		into STRICT	nr_seq_fluxo_w
		;

		if ( ie_novo_pos_estab_w = 'N' ) then
			insert into pls_analise_fluxo_item(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_analise,
				nr_seq_grupo,
				nr_seq_conta_proc,
				nr_seq_conta_mat,
				nr_seq_proc_partic,
				nr_seq_ordem,
				ie_liberacao_especial,
				ie_pagamento,
				qt_liberada,
				vl_glosa,
				vl_liberado_hi,
				vl_liberado_co,
				vl_liberado_material,
				vl_glosa_co,
				vl_glosa_hi,
				vl_glosa_material,
				vl_total,
				ie_acao_item,
				nr_seq_motivo,
				ds_parecer,
				ie_pre_analise,
				ie_finalizacao,
				ie_glosa_conta,
				ie_tipo_glosa,
				ie_origem_acao,
				nr_seq_acao_analise)
			SELECT	nr_seq_fluxo_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_analise_p,
				nr_seq_grupo_atual_p,
				nr_seq_conta_proc_p,
				nr_seq_conta_mat_p,
				nr_seq_proc_partic_p,
				coalesce(nr_seq_ordem_w,0),
				'N',
				ie_pagamento_p,
				qt_item,
				vl_calculado + coalesce(vl_administracao,0) - vl_beneficiario,
				vl_medico,
				vl_custo_operacional,
				vl_materiais,
				vl_medico_calc - vl_medico,
				vl_custo_operacional_calc - vl_custo_operacional,
				vl_materiais_calc - vl_materiais,
				vl_beneficiario,
				CASE WHEN ie_pagamento_p='L' THEN 'L' WHEN ie_pagamento_p='M' THEN 'M'  ELSE 'G' END ,
				nr_seq_motivo_p,
				ds_parecer_p,
				ie_pre_analise_p,
				ie_finalizacao_p,
				ie_conta_inteira_p,
				ie_tipo_glosa_p,
				ie_origem_acao_p,
				nr_seq_acao_analise_w
			from	pls_conta_pos_estabelecido a
			where	a.nr_sequencia	= nr_seq_conta_pos_p;
		else

			if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then

				insert into pls_analise_fluxo_item(nr_sequencia, nm_usuario, dt_atualizacao,
					nm_usuario_nrec, dt_atualizacao_nrec, nr_seq_analise,
					nr_seq_grupo, nr_seq_conta_proc, nr_seq_conta_mat,
					nr_seq_proc_partic, nr_seq_ordem, ie_liberacao_especial,
					ie_pagamento, qt_liberada, vl_glosa, vl_liberado_hi,
					vl_liberado_co, vl_liberado_material, vl_glosa_co,
					vl_glosa_hi, vl_glosa_material, vl_total,
					ie_acao_item, nr_seq_motivo, ds_parecer,
					ie_pre_analise, ie_finalizacao, ie_glosa_conta,
					ie_tipo_glosa, ie_origem_acao, nr_seq_acao_analise)
				SELECT	nr_seq_fluxo_w, nm_usuario_p, clock_timestamp(),
					nm_usuario_p, clock_timestamp(), nr_seq_analise_p,
					nr_seq_grupo_atual_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p,
					nr_seq_proc_partic_p, coalesce(nr_seq_ordem_w,0), 'N',
					ie_pagamento_p, qt_item, (vl_custo_operacional_calc + vl_materiais_calc + vl_medico_calc +
					vl_taxa_material + vl_taxa_co + vl_taxa_servico) - (vl_custo_operacional + vl_materiais + vl_medico +
					vl_lib_taxa_material + vl_lib_taxa_co + vl_lib_taxa_servico),
					vl_medico, vl_custo_operacional, vl_materiais,
					vl_medico_calc - vl_medico, vl_custo_operacional_calc - vl_custo_operacional, vl_materiais_calc - vl_materiais,
					(vl_custo_operacional + vl_materiais + vl_medico +
					vl_lib_taxa_material + vl_lib_taxa_co + vl_lib_taxa_servico), CASE WHEN ie_pagamento_p='L' THEN 'L' WHEN ie_pagamento_p='M' THEN 'M'  ELSE 'G' END , nr_seq_motivo_p,
					ds_parecer_p, ie_pre_analise_p, ie_finalizacao_p, ie_conta_inteira_p,
					ie_tipo_glosa_p, ie_origem_acao_p, nr_seq_acao_analise_w
				from	pls_conta_pos_proc a
				where	a.nr_sequencia	= nr_seq_conta_pos_p;

			elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then

				insert into pls_analise_fluxo_item(nr_sequencia, nm_usuario, dt_atualizacao,
					nm_usuario_nrec, dt_atualizacao_nrec, nr_seq_analise,
					nr_seq_grupo, nr_seq_conta_proc, nr_seq_conta_mat,
					nr_seq_proc_partic, nr_seq_ordem, ie_liberacao_especial,
					ie_pagamento, qt_liberada, vl_glosa, vl_liberado_hi,
					vl_liberado_co, vl_liberado_material, vl_glosa_co,
					vl_glosa_hi, vl_glosa_material, vl_total,
					ie_acao_item, nr_seq_motivo, ds_parecer,
					ie_pre_analise, ie_finalizacao, ie_glosa_conta,
					ie_tipo_glosa, ie_origem_acao, nr_seq_acao_analise)
				SELECT	nr_seq_fluxo_w, nm_usuario_p, clock_timestamp(),
					nm_usuario_p, clock_timestamp(), nr_seq_analise_p,
					nr_seq_grupo_atual_p, nr_seq_conta_proc_p, nr_seq_conta_mat_p,
					nr_seq_proc_partic_p, coalesce(nr_seq_ordem_w,0), 'N',
					ie_pagamento_p, qt_item, ( vl_materiais_calc + vl_taxa_material) - (vl_materiais  + vl_lib_taxa_material),
					0, 0, vl_materiais,
					0, 0, (vl_materiais_calc - vl_materiais),
					( vl_materiais + vl_lib_taxa_material), CASE WHEN ie_pagamento_p='L' THEN 'L' WHEN ie_pagamento_p='M' THEN 'M'  ELSE 'G' END , nr_seq_motivo_p,
					ds_parecer_p, ie_pre_analise_p, ie_finalizacao_p, ie_conta_inteira_p,
					ie_tipo_glosa_p, ie_origem_acao_p, nr_seq_acao_analise_w
				from	pls_conta_pos_mat a
				where	a.nr_sequencia	= nr_seq_conta_pos_p;

			end if;

		end if;
	elsif (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
		select	nextval('pls_analise_fluxo_item_seq')
		into STRICT	nr_seq_fluxo_w
		;

		/* Gravar o fluxo de análise do item - histórico */

		insert into pls_analise_fluxo_item(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_analise,
			nr_seq_grupo,
			nr_seq_conta_proc,
			nr_seq_conta_mat,
			nr_seq_proc_partic,
			nr_seq_ordem,
			ie_liberacao_especial,
			ie_pagamento,
			qt_liberada,
			vl_glosa,
			vl_liberado_hi,
			vl_liberado_co,
			vl_liberado_material,
			vl_glosa_co,
			vl_glosa_hi,
			vl_glosa_material,
			vl_total,
			ie_acao_item,
			nr_seq_motivo,
			ds_parecer,
			ie_pre_analise,
			ie_finalizacao,
			ie_glosa_conta,
			ie_tipo_glosa,
			ie_origem_acao,
			nr_seq_acao_analise)
		SELECT	nr_seq_fluxo_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_analise_p,
			nr_seq_grupo_atual_p,
			nr_seq_conta_proc_p,
			nr_seq_conta_mat_p,
			nr_seq_proc_partic_p,
			nr_seq_ordem_w,
			'N',
			ie_pagamento_p,
			qt_procedimento,
			vl_glosa,
			vl_liberado_hi,
			vl_liberado_co,
			vl_liberado_material,
			vl_glosa_co,
			vl_glosa_hi,
			vl_glosa_material,
			vl_procedimento,
			CASE WHEN ie_pagamento_p='L' THEN 'L' WHEN ie_pagamento_p='M' THEN 'M'  ELSE 'G' END ,
			nr_seq_motivo_p,
			ds_parecer_p,
			ie_pre_analise_p,
			ie_finalizacao_p,
			ie_conta_inteira_p,
			ie_tipo_glosa_p,
			ie_origem_acao_p,
			nr_seq_acao_analise_w
		from	pls_conta_proc a
		where	a.nr_sequencia	= nr_seq_conta_proc_p;
	elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
		select	nextval('pls_analise_fluxo_item_seq')
		into STRICT	nr_seq_fluxo_w
		;

		/* Gravar o fluxo de análise do item - histórico */

		insert into pls_analise_fluxo_item(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_analise,
			nr_seq_grupo,
			nr_seq_conta_proc,
			nr_seq_conta_mat,
			nr_seq_proc_partic,
			nr_seq_ordem,
			ie_liberacao_especial,
			ie_pagamento,
			qt_liberada,
			vl_glosa,
			vl_total,
			ie_acao_item,
			nr_seq_motivo,
			ds_parecer,
			ie_pre_analise,
			ie_finalizacao,
			ie_glosa_conta,
			ie_tipo_glosa,
			ie_origem_acao,
			nr_seq_acao_analise)
		SELECT	nr_seq_fluxo_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_analise_p,
			nr_seq_grupo_atual_p,
			nr_seq_conta_proc_p,
			nr_seq_conta_mat_p,
			nr_seq_proc_partic_p,
			nr_seq_ordem_w,
			'N',
			ie_pagamento_p,
			qt_material,
			vl_glosa,
			vl_material,
			CASE WHEN ie_pagamento_p='L' THEN 'L' WHEN ie_pagamento_p='M' THEN 'M'  ELSE 'G' END ,
			nr_seq_motivo_p,
			ds_parecer_p,
			ie_pre_analise_p,
			ie_finalizacao_p,
			ie_conta_inteira_p,
			ie_tipo_glosa_p,
			ie_origem_acao_p,
			nr_seq_acao_analise_w
		from	pls_conta_mat a
		where	a.nr_sequencia	= nr_seq_conta_mat_p;
	elsif (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then
		select	nextval('pls_analise_fluxo_item_seq')
		into STRICT	nr_seq_fluxo_w
		;

		insert into pls_analise_fluxo_item(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_analise,
			nr_seq_grupo,
			nr_seq_conta,
			nr_seq_ordem,
			ie_liberacao_especial,
			ie_pagamento,
			ie_acao_item,
			nr_seq_motivo,
			ds_parecer,
			ie_pre_analise,
			ie_finalizacao,
			ie_glosa_conta,
			ie_tipo_glosa,
			ie_origem_acao,
			nr_seq_acao_analise)
		values (nr_seq_fluxo_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_analise_p,
			nr_seq_grupo_atual_p,
			nr_seq_conta_p,
			coalesce(nr_seq_ordem_w,0),
			'N',
			ie_pagamento_p,
			CASE WHEN ie_pagamento_p='L' THEN 'L' WHEN ie_pagamento_p='M' THEN 'M'  ELSE 'G' END ,
			nr_seq_motivo_p,
			ds_parecer_p,
			ie_pre_analise_p,
			ie_finalizacao_p,
			ie_conta_inteira_p,
			ie_tipo_glosa_p,
			ie_origem_acao_p,
			nr_seq_acao_analise_w);
	end if;
end if;
nr_seq_fluxo_p	:= nr_seq_fluxo_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gravar_fluxo_analise_item ( nr_seq_analise_p bigint, nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nr_seq_proc_partic_p bigint, nr_seq_conta_pos_p bigint, nr_seq_grupo_atual_p bigint, ie_pagamento_p text, nr_seq_motivo_p bigint, ds_parecer_p text, ie_pre_analise_p text, ie_finalizacao_p text, nm_usuario_p text, ie_conta_inteira_p text, ie_tipo_glosa_p text, ie_origem_acao_p text, nr_seq_fluxo_p INOUT bigint, cd_acao_analise_p pls_acao_analise.cd_acao%type default null) FROM PUBLIC;

