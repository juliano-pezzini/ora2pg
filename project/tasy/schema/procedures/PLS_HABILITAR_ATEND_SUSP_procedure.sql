-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_habilitar_atend_susp ( nr_titulo_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_mensalidade_w		pls_mensalidade.nr_sequencia%type;
nr_seq_pagador_w		pls_contrato_pagador.nr_sequencia%type;
qt_registro_w			integer;
ie_atualizar_susp_atend_w	varchar(1)	:= 'N';
cd_estabelecimento_w		smallint;
ie_desfazer_suspensao_w		varchar(1)	:= 'N';
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_cgc_w			pessoa_juridica.cd_cgc%type;
qt_titulo_notific_w		integer;
qt_titulo_liquid_w		integer;
nr_seq_notificacao_w		bigint;
dt_liquidacao_w			titulo_receber.dt_liquidacao%type;
vl_saldo_titulo_w		titulo_receber.vl_saldo_titulo%type;
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
ie_situacao_titulo_w		titulo_receber.ie_situacao%type;
nr_seq_forma_cobranca_w		pls_mensalidade.nr_seq_forma_cobranca%type;
nr_seq_negociacao_w		negociacao_cr.nr_sequencia%type;
qt_boletos_negociacao_w		integer;
qt_boletos_negociacao_pago_w	integer;
ie_desfazer_susp_negociacao_w	pls_parametros_cr.ie_desfazer_susp_negociacao%type;
qt_baixa_negociacao_w		integer;
nr_seq_motivo_susp_w		pls_motivo_susp_cobr_mens.nr_sequencia%type;
ie_desfazer_susp_mens_w		pls_parametros_cr.ie_desfazer_susp_mens%type;
qt_tit_aberto_w			bigint;

C01 CURSOR(	cd_pessoa_fisica_pc	titulo_receber.cd_pessoa_fisica%type,
		cd_cgc_pc		titulo_receber.cd_cgc%type) FOR
	SELECT	distinct
		c.nr_seq_segurado
	from	pls_segurado_suspensao	c,
		pls_segurado		b,
		pls_contrato_pagador	a
	where	c.nr_seq_segurado	= b.nr_sequencia
	and	b.nr_seq_pagador	= a.nr_sequencia
	and	a.cd_pessoa_fisica	= cd_pessoa_fisica_pc
	and	(c.dt_inicio_suspensao IS NOT NULL AND c.dt_inicio_suspensao::text <> '')
	and	coalesce(c.dt_fim_suspensao::text, '') = ''
	
union all

	SELECT	distinct
		c.nr_seq_segurado
	from	pls_segurado_suspensao	c,
		pls_segurado		b,
		pls_contrato_pagador	a
	where	c.nr_seq_segurado	= b.nr_sequencia
	and	b.nr_seq_pagador	= a.nr_sequencia
	and	a.cd_cgc	= cd_cgc_pc
	and	(c.dt_inicio_suspensao IS NOT NULL AND c.dt_inicio_suspensao::text <> '')
	and	coalesce(c.dt_fim_suspensao::text, '') = '';

C02 CURSOR(	nr_seq_pagador_pc	titulo_receber.nr_seq_pagador%type,
		nr_titulo_pc		titulo_receber.nr_titulo%type) FOR
	SELECT	a.nr_sequencia nr_seq_susp_mens,
		c.nr_sequencia nr_seq_notific_pagador
	from	pls_contrato_susp_mens a,
		pls_notificacao_lote b,
		pls_notificacao_pagador c,
		pls_notificacao_item d
	where	b.nr_sequencia = a.nr_seq_notificacao
	and	b.nr_sequencia = c.nr_seq_lote
	and	c.nr_sequencia = d.nr_seq_notific_pagador
	and	a.nr_seq_pagador = c.nr_seq_pagador
	and	c.nr_seq_pagador = nr_seq_pagador_pc
	and	d.nr_titulo    = nr_titulo_pc
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	coalesce(a.dt_fim_suspensao::text, '') = '';
BEGIN

ie_desfazer_suspensao_w	:= 'N';

select	a.nr_seq_mensalidade,
	a.cd_estabelecimento,
	a.cd_pessoa_fisica,
	a.cd_cgc,
	a.nr_seq_pagador,
	a.ie_situacao,
	a.dt_liquidacao,
	a.vl_saldo_titulo
into STRICT	nr_seq_mensalidade_w,
	cd_estabelecimento_w,
	cd_pessoa_fisica_w,
	cd_cgc_w,
	nr_seq_pagador_w,
	ie_situacao_titulo_w,
	dt_liquidacao_w,
	vl_saldo_titulo_w
from	titulo_receber a
where	a.nr_titulo	= nr_titulo_p;

select	max(ie_desfazer_susp_negociacao),
	coalesce(max(ie_desfazer_susp_mens),'N')
into STRICT	ie_desfazer_susp_negociacao_w,
	ie_desfazer_susp_mens_w
from	pls_parametros_cr;

--Só iniciar a verificação se for títulos de OPS
if (nr_seq_mensalidade_w IS NOT NULL AND nr_seq_mensalidade_w::text <> '') then
	select	max(nr_seq_contrato)
	into STRICT	nr_seq_contrato_w
	from	pls_contrato_pagador a
	where	a.nr_sequencia = nr_seq_pagador_w;

	select	max(nr_seq_forma_cobranca)
	into STRICT	nr_seq_forma_cobranca_w
	from	pls_mensalidade
	where	nr_sequencia	= nr_seq_mensalidade_w;

	select	max(nr_seq_motivo_suspensao)
	into STRICT 	nr_seq_motivo_susp_w
	from 	pls_contrato_susp_mens
	where 	nr_seq_contrato = nr_seq_contrato_w
	and 	coalesce(dt_fim_suspensao::text, '') = ''
	and 	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');

	if (coalesce(nr_seq_motivo_susp_w::text, '') = '') then
		select	max(a.nr_seq_motivo_susp)
		into STRICT	nr_seq_motivo_susp_w
		from	pls_segurado_suspensao 	a,
			pls_segurado 		b
		where	a.nr_seq_segurado = b.nr_sequencia
		and	b.nr_seq_pagador = nr_seq_pagador_w
		and	(a.nr_seq_motivo_susp IS NOT NULL AND a.nr_seq_motivo_susp::text <> '')
		and	coalesce(a.dt_fim_suspensao::text, '') = '';
	end if;

	ie_atualizar_susp_atend_w := pls_obter_regra_desfazer_susp(nr_seq_contrato_w, nr_seq_forma_cobranca_w, cd_pessoa_fisica_w, ie_situacao_titulo_w, cd_cgc_w, cd_estabelecimento_w, nr_seq_motivo_susp_w);

	if (coalesce(ie_atualizar_susp_atend_w::text, '') = '') then
		ie_atualizar_susp_atend_w := 'N';
	end if;

	if (ie_atualizar_susp_atend_w <> 'N') then
		--Verificar se o título está em notificação que gerou suspensao
		if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_notificacao_w
			from	pls_notificacao_item b,
				pls_notificacao_pagador a
			where	a.nr_sequencia		= b.nr_seq_notific_pagador
			and	a.cd_pessoa_fisica	= cd_pessoa_fisica_w
			and	b.nr_titulo		= nr_titulo_p
			and	exists (SELECT	1
					from	pls_segurado_suspensao x
					where	x.nr_seq_notificacao_pag	= a.nr_sequencia
					and	(x.dt_inicio_suspensao IS NOT NULL AND x.dt_inicio_suspensao::text <> '')
					and	coalesce(x.dt_fim_suspensao::text, '') = '');
		elsif (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_notificacao_w
			from	pls_notificacao_item b,
				pls_notificacao_pagador a
			where	a.nr_sequencia		= b.nr_seq_notific_pagador
			and	a.cd_cgc		= cd_cgc_w
			and	b.nr_titulo		= nr_titulo_p
			and	exists (SELECT	1
					from	pls_segurado_suspensao x
					where	x.nr_seq_notificacao_pag	= a.nr_sequencia
					and	(x.dt_inicio_suspensao IS NOT NULL AND x.dt_inicio_suspensao::text <> '')
					and	coalesce(x.dt_fim_suspensao::text, '') = '');
		end if;

		select	count(1)
		into STRICT	qt_baixa_negociacao_w
		from	titulo_receber_liq
		where	nr_titulo	= nr_titulo_p
		and	(nr_seq_negociacao_cr IS NOT NULL AND nr_seq_negociacao_cr::text <> '');

		if (nr_seq_notificacao_w IS NOT NULL AND nr_seq_notificacao_w::text <> '') then
			--Verificar quantidade de títulos das notificações liquidados
			if (ie_atualizar_susp_atend_w = 'T') then
				select	count(1)
				into STRICT	qt_titulo_notific_w
				from	pls_notificacao_item b,
					pls_notificacao_pagador a
				where	a.nr_sequencia		= b.nr_seq_notific_pagador
				and	a.nr_sequencia		= nr_seq_notificacao_w;

				select	count(1)
				into STRICT	qt_titulo_liquid_w
				from	titulo_receber c,
					pls_notificacao_item b,
					pls_notificacao_pagador a
				where	a.nr_sequencia		= b.nr_seq_notific_pagador
				and	b.nr_titulo		= c.nr_titulo
				and	a.nr_sequencia		= nr_seq_notificacao_w
				and	c.vl_saldo_titulo	= 0
				and	(c.dt_liquidacao IS NOT NULL AND c.dt_liquidacao::text <> '')
				and	not exists (	SELECT	1 --Desconsiderar titulos negociados como liquidados
							from	titulo_receber_liq x
							where	x.nr_titulo	= c.nr_titulo
							and	(x.nr_seq_negociacao_cr IS NOT NULL AND x.nr_seq_negociacao_cr::text <> ''));

				if (qt_titulo_notific_w > 0) and (qt_titulo_liquid_w = qt_titulo_notific_w) then
					ie_desfazer_suspensao_w	:= 'S';
				end if;
			elsif (ie_atualizar_susp_atend_w = 'U') then
				if (dt_liquidacao_w IS NOT NULL AND dt_liquidacao_w::text <> '') and (vl_saldo_titulo_w = 0) and (qt_baixa_negociacao_w = 0) then
					ie_desfazer_suspensao_w	:= 'S';
				end if;
			elsif (ie_atualizar_susp_atend_w = 'P') then
				if	((ie_situacao_titulo_w = '5') or
					(dt_liquidacao_w IS NOT NULL AND dt_liquidacao_w::text <> '' AND vl_saldo_titulo_w = 0)) then -- Título transferido
					ie_desfazer_suspensao_w	:= 'S';
				end if;
			end if;
		elsif (coalesce(nr_seq_notificacao_w::text, '') = '') then --Verificar as suspensões sem notificação
			--Verificar todos os titulos liquidados
			if (ie_atualizar_susp_atend_w = 'T') then
				if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
					select	count(1)
					into STRICT	qt_titulo_liquid_w
					from	titulo_receber
					where	cd_pessoa_fisica	= cd_pessoa_fisica_w
					and	vl_saldo_titulo		<> 0
					and	coalesce(dt_liquidacao::text, '') = '';
				elsif (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
					select	count(1)
					into STRICT	qt_titulo_liquid_w
					from	titulo_receber
					where	cd_cgc	= cd_cgc_w
					and	vl_saldo_titulo		<> 0
					and	coalesce(dt_liquidacao::text, '') = '';
				end if;

				if (qt_titulo_liquid_w = 0) then
					ie_desfazer_suspensao_w	:= 'S';
				end if;
			elsif (ie_atualizar_susp_atend_w = 'U') then
				if (dt_liquidacao_w IS NOT NULL AND dt_liquidacao_w::text <> '') and (vl_saldo_titulo_w = 0) and (qt_baixa_negociacao_w = 0) then
					ie_desfazer_suspensao_w	:= 'S';
				end if;
			elsif (ie_atualizar_susp_atend_w = 'P') then
				if	((ie_situacao_titulo_w = '5') or
					(dt_liquidacao_w IS NOT NULL AND dt_liquidacao_w::text <> '' AND vl_saldo_titulo_w = 0)) then -- Título transferido
					ie_desfazer_suspensao_w	:= 'S';
				end if;
			end if;
		end if;
	end if;
elsif	((coalesce(ie_desfazer_susp_negociacao_w,'N') <> 'N') and (dt_liquidacao_w IS NOT NULL AND dt_liquidacao_w::text <> '') and (vl_saldo_titulo_w = 0) and (ie_situacao_titulo_w <> '5') /* Deve desconsiderar os titulos transferidos, pois pode existir uma negociação da negociação, e entendemos que desta forma o titulo não foi liquidado e sim transferido*/
) then
	select	max(nr_seq_negociacao)
	into STRICT	nr_seq_negociacao_w
	from	negociacao_cr_boleto
	where	nr_titulo	= nr_titulo_p;

	if (nr_seq_negociacao_w IS NOT NULL AND nr_seq_negociacao_w::text <> '') then
		if (ie_desfazer_susp_negociacao_w = 'P') then --Ao liquidar primeiro título da negociação
			ie_desfazer_suspensao_w	:= 'S'; --O título que está sendo considerado já conta como títutlo da negociação liquidado
		elsif (ie_desfazer_susp_negociacao_w = 'T') then --Ao liquidar todos os títulos da negociação
			select	count(1)
			into STRICT	qt_boletos_negociacao_w
			from	negociacao_cr_boleto	a,
				titulo_receber		b
			where	a.nr_titulo = b.nr_titulo
			and	a.nr_seq_negociacao = nr_seq_negociacao_w;

			select	count(1)
			into STRICT	qt_boletos_negociacao_pago_w
			from	negociacao_cr_boleto	a,
				titulo_receber		b
			where	a.nr_titulo = b.nr_titulo
			and	a.nr_seq_negociacao = nr_seq_negociacao_w
			and	(b.dt_liquidacao IS NOT NULL AND b.dt_liquidacao::text <> '')
			and	b.ie_situacao not in ('5','6');

			if (qt_boletos_negociacao_w = qt_boletos_negociacao_pago_w) then
				ie_desfazer_suspensao_w	:= 'S';
			end if;
		end if;
	end if;
end if;

--Desfazer a suspensão de todos os beneficiários associados ao pagador
if (ie_desfazer_suspensao_w = 'S') then
	for r_c01_w in C01(cd_pessoa_fisica_w, cd_cgc_w) loop
		begin
		CALL pls_desfazer_susp_segurado(r_c01_w.nr_seq_segurado, nm_usuario_p, nr_titulo_p);
		end;
	end loop;
end if;

if (ie_desfazer_susp_mens_w = 'S') then
	for r_c02_w in C02(	nr_seq_pagador_w,
				nr_titulo_p) loop
		begin
		select	count(1)
		into STRICT	qt_tit_aberto_w
		from	pls_notificacao_item a,
			titulo_receber b
		where	a.nr_titulo	 = b.nr_titulo
		and	a.nr_seq_notific_pagador = r_c02_w.nr_seq_notific_pagador
		and	b.ie_situacao = '1';

		if (qt_tit_aberto_w = 0) then
			CALL pls_finalizar_susp_mens_contr(r_c02_w.nr_seq_susp_mens, clock_timestamp(), 'N', nm_usuario_p);
		end if;
		end;
	end loop;
end if;

--Não pode dar commit nessa procedure
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_habilitar_atend_susp ( nr_titulo_p bigint, nm_usuario_p text) FROM PUBLIC;

