-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_finalizar_reprocessamento ( nr_seq_dialisador_p bigint, qt_priming_atual_p bigint, pr_perda_p bigint, cd_estabelecimento_p bigint, nr_seq_reprocessamento_p bigint, dt_fim_p timestamp, nm_usuario_p text, ie_motivo_descarte_p text, ds_erro_p INOUT text) AS $body$
DECLARE

 
qt_reuso_w			smallint;
pr_perda_w			real;
nr_max_reuso_w			bigint;
ie_tipo_w			varchar(2);
dt_prim_lavagem_w		timestamp;
qt_valida_w			bigint;
nr_seq_reprocessamento_w	bigint;


BEGIN 
 
/* Verifica informaçoes do dializador */
 
select	coalesce(qt_reuso,1), 
	coalesce(ie_tipo,'I'), 
	coalesce(dt_prim_lavagem, clock_timestamp()) 
into STRICT	qt_reuso_w, 
	ie_tipo_w, 
	dt_prim_lavagem_w 
from	hd_dializador 
where	nr_sequencia		= nr_seq_dialisador_p;
 
/* Define priming inicial, final quando foi troca de emergência */
 
if	((qt_reuso_w = 1 AND ie_tipo_w = 'M') or 
	 (qt_reuso_w = 1 AND ie_tipo_w = 'N')) then 
	update	hd_dializador 
	set	qt_priming		= qt_priming_atual_p, 
		qt_priming_final	= qt_priming_atual_p - (qt_priming_atual_p * 20 / 100) 
	where	nr_sequencia		= nr_seq_dialisador_p;
end if;
 
select	max(nr_sequencia) 
into STRICT	nr_seq_reprocessamento_w 
from	hd_dialisador_reproc 
where	nr_seq_dialisador = nr_seq_dialisador_p 
and 	coalesce(dt_fim::text, '') = '';
 
 
/* Atualiza as informações de reprocessamento */
 
update	hd_dialisador_reproc 
set	dt_fim			= dt_fim_p, 
	cd_pf_fim		= substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,10), 
	dt_atualizacao		= clock_timestamp(), 
	nm_usuario		= nm_usuario_p, 
	qt_priming_medido	= qt_priming_atual_p, 
	pr_perda_medido		= pr_perda_p 
where	nr_sequencia		= nr_seq_reprocessamento_w;
 
select	count(*) 
into STRICT	qt_valida_w 
from	hd_dialisador_reproc 
where	nr_sequencia	= nr_seq_reprocessamento_w 
and	(dt_fim IS NOT NULL AND dt_fim::text <> '');
 
 
/* Atualiza as informaçoes do dialisador */
 
if (qt_valida_w > 0) then 
	update	hd_dializador 
	set	qt_priming_atual	= qt_priming_atual_p, 
		pr_perda		= pr_perda_p, 
		ie_status		= 'A', 
		dt_prim_lavagem		= dt_prim_lavagem_w 
	where	nr_sequencia		= nr_seq_dialisador_p;
end if;
 
/* Verifica descarte do dializador */
 
select	pr_perda, 
	qt_reuso, 
	nr_max_reuso 
into STRICT	pr_perda_w, 
	qt_reuso_w, 
	nr_max_reuso_w 
from	hd_dializador 
where	nr_sequencia		= nr_seq_dialisador_p;
 
 
if	((pr_perda_w >= 20) or (qt_reuso_w > nr_max_reuso_w)) then 
	CALL HD_Descarte_Dialisador(nr_seq_dialisador_p, ie_motivo_descarte_p, 'D', nm_usuario_p);
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_finalizar_reprocessamento ( nr_seq_dialisador_p bigint, qt_priming_atual_p bigint, pr_perda_p bigint, cd_estabelecimento_p bigint, nr_seq_reprocessamento_p bigint, dt_fim_p timestamp, nm_usuario_p text, ie_motivo_descarte_p text, ds_erro_p INOUT text) FROM PUBLIC;

