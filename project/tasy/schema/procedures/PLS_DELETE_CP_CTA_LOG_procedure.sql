-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_delete_cp_cta_log () AS $body$
DECLARE

 
tb_sequencia_w	pls_util_cta_pck.t_number_table;
dt_base_w	timestamp;

C01 CURSOR(dt_base_pc	timestamp) FOR 
	SELECT	nr_sequencia 
	from	pls_cp_cta_log_mat_hist 
	where	dt_atualizacao_nrec <= dt_base_pc;

C02 CURSOR(dt_base_pc	timestamp) FOR 
	SELECT	nr_sequencia 
	from	pls_cp_cta_log_proc_hist 
	where	dt_atualizacao_nrec <= dt_base_pc;

C03 CURSOR(dt_base_pc	timestamp) FOR 
	SELECT	nr_sequencia 
	from	pls_cp_cta_log_partic_hist 
	where	dt_atualizacao_nrec <= dt_base_pc;

C04 CURSOR(dt_base_pc	timestamp) FOR 
	SELECT	nr_sequencia 
	from	pls_cp_cta_log_serv_hist 
	where	dt_atualizacao_nrec <= dt_base_pc;

BEGIN
-- limpa a table 
tb_sequencia_w.delete;
-- apaga todos registros com mais de seis mÃªs 
dt_base_w := trunc(add_months(clock_timestamp(), - 6));
 
open C01(dt_base_w);
loop 
	fetch C01 bulk collect into tb_sequencia_w 
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_sequencia_w.count = 0;
 
	-- deleta tudo que esteja 'fora' do prazo de tempo 
	forall i in tb_sequencia_w.first..tb_sequencia_w.last 
		delete	from pls_cp_cta_log_mat_hist 
		where	nr_sequencia = tb_sequencia_w(i);
	commit;
end loop;
close C01;
 
tb_sequencia_w.delete;
 
open C02(dt_base_w);
loop 
	fetch C02 bulk collect into tb_sequencia_w 
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_sequencia_w.count = 0;
 
	-- deleta tudo que esteja 'fora' do prazo de tempo 
	forall i in tb_sequencia_w.first..tb_sequencia_w.last 
		delete	from pls_cp_cta_log_proc_hist 
		where	nr_sequencia = tb_sequencia_w(i);
	commit;
end loop;
close C02;
 
tb_sequencia_w.delete;
 
open C03(dt_base_w);
loop 
	fetch C03 bulk collect into tb_sequencia_w 
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_sequencia_w.count = 0;
 
	-- deleta tudo que esteja 'fora' do prazo de tempo 
	forall i in tb_sequencia_w.first..tb_sequencia_w.last 
		delete	from pls_cp_cta_log_partic_hist 
		where	nr_sequencia = tb_sequencia_w(i);
	commit;
end loop;
close C03;
 
tb_sequencia_w.delete;
 
open C04(dt_base_w);
loop 
	fetch C04 bulk collect into tb_sequencia_w 
	limit pls_util_pck.qt_registro_transacao_w;
	exit when tb_sequencia_w.count = 0;
 
	-- deleta tudo que esteja 'fora' do prazo de tempo 
	forall i in tb_sequencia_w.first..tb_sequencia_w.last 
		delete	from pls_cp_cta_log_serv_hist 
		where	nr_sequencia = tb_sequencia_w(i);
	commit;
end loop;
close C04;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_delete_cp_cta_log () FROM PUBLIC;

