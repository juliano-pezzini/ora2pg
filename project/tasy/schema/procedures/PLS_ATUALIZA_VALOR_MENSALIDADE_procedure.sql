-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualiza_valor_mensalidade ( nr_seq_lote_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
vl_tot_item_w			double precision	:= 0;
vl_mensalidade_w		double precision	:= 0;
vl_copartic_mens_w		double precision	:= 0;

vl_pre_estab_w			double precision	:= 0;
vl_pos_estab_w			double precision	:= 0;
vl_coparticipacao_w		double precision	:= 0;
vl_outros_w			double precision	:= 0;
vl_adicionais_w			double precision	:= 0;
vl_cancelado_w			double precision	:= 0;

vl_lote_w			double precision	:= 0;
vl_tot_pre_estab_w		double precision	:= 0;
vl_tot_pos_estab_w		double precision	:= 0;
vl_tot_coparticipacao_w		double precision	:= 0;
vl_tot_outros_w			double precision	:= 0;
vl_tot_adicionais_w		double precision	:= 0;

vl_pro_rata_dia_w		double precision;
vl_antecipacao_w		double precision;
qt_beneficiarios_w		bigint;
qt_pagadores_lote_w		bigint;
vl_itens_pagador_w		double precision;
vl_taxa_boleto_seg_w		double precision;
vl_taxa_boleto_pag_w		double precision;
vl_taxa_boleto_w		double precision;
vl_outros_pagador_w		double precision;

qt_mensalidade_w		integer;

C01 CURSOR(	nr_seq_lote_pc		bigint) FOR 
	SELECT	a.nr_sequencia nr_seq_mensalidade, 
		a.ie_cancelamento 
	from	pls_mensalidade		a, 
		pls_lote_mensalidade	b 
	where	a.nr_seq_lote	= b.nr_sequencia 
	and	b.nr_sequencia	= nr_seq_lote_pc 
	and	exists (SELECT	1 
			from	pls_mensalidade_segurado 	y, 
				pls_mensalidade_seg_item 	x 
			where	y.nr_sequencia 			= x.nr_seq_mensalidade_seg 
			and	y.nr_seq_mensalidade 		= a.nr_sequencia);

C02 CURSOR(	nr_seq_mensalidade_pc	pls_mensalidade.nr_sequencia%type) FOR 
	SELECT	a.nr_sequencia nr_seq_mensalidade_seg 
	from	pls_mensalidade_segurado	a, 
		pls_mensalidade			b 
	where	a.nr_seq_mensalidade	= b.nr_sequencia 
	and	b.nr_sequencia		= nr_seq_mensalidade_pc;
	
BEGIN 
 
for r_c01_w in C01(nr_seq_lote_p) loop 
	--pls_gerar_pro_rata_dia(nr_seq_mensalidade_w); Lepinski - A rotina já é chamada na pls_gerar_mensalidade 
	for r_c02_w in C02(r_c01_w.nr_seq_mensalidade) loop 
		CALL pls_atualiza_valor_mens_seg(r_c02_w.nr_seq_mensalidade_seg,nm_usuario_p);
	end loop;
	 
	select	count(1) 
	into STRICT	qt_beneficiarios_w 
	from ( 
		SELECT	1 
		from	pls_mensalidade_segurado	a, 
			pls_mensalidade			b 
		where	a.nr_seq_mensalidade	= b.nr_sequencia 
		and	b.nr_sequencia		= r_c01_w.nr_seq_mensalidade 
		group by a.nr_seq_segurado) alias1;
	 
	select	sum(a.vl_adicionais), 
		sum(a.vl_coparticipacao), 
		sum(a.vl_mensalidade), 
		sum(a.vl_outros), 
		sum(a.vl_pos_estabelecido), 
		sum(a.vl_pre_estabelecido), 
		sum(a.vl_pro_rata_dia), 
		sum(a.vl_antecipacao) 
	into STRICT	vl_adicionais_w, 
		vl_coparticipacao_w, 
		vl_mensalidade_w, 
		vl_outros_w, 
		vl_pos_estab_w, 
		vl_pre_estab_w, 
		vl_pro_rata_dia_w, 
		vl_antecipacao_w 
	from	pls_mensalidade_segurado	a, 
		pls_mensalidade			b 
	where	a.nr_seq_mensalidade	= b.nr_sequencia 
	and	b.nr_sequencia		= r_c01_w.nr_seq_mensalidade;
	 
	select	sum(a.vl_item) 
	into STRICT	vl_itens_pagador_w 
	from	pls_mensalidade_seg_item	a, 
		pls_mensalidade_segurado	b, 
		pls_mensalidade			c 
	where	a.nr_seq_mensalidade_seg	= b.nr_sequencia 
	and	b.nr_seq_mensalidade		= c.nr_sequencia 
	and	c.nr_sequencia			= r_c01_w.nr_seq_mensalidade 
	and	a.ie_tipo_mensalidade		= 'P';
	 
	select	sum(a.vl_item) 
	into STRICT	vl_outros_pagador_w 
	from	pls_mensalidade_seg_item	a, 
		pls_mensalidade_segurado	b, 
		pls_mensalidade			c 
	where	a.nr_seq_mensalidade_seg	= b.nr_sequencia 
	and	b.nr_seq_mensalidade		= c.nr_sequencia 
	and	c.nr_sequencia			= r_c01_w.nr_seq_mensalidade 
	and	a.ie_tipo_item not in ('1','3') 
	and	a.ie_tipo_mensalidade		= 'P';
	 
	vl_mensalidade_w	:= coalesce(vl_mensalidade_w,0) + coalesce(vl_itens_pagador_w,0);
	 
	vl_tot_pre_estab_w	:= coalesce(vl_tot_pre_estab_w,0) + coalesce(vl_pre_estab_w,0);
	vl_tot_pos_estab_w	:= coalesce(vl_tot_pos_estab_w,0) + coalesce(vl_pos_estab_w,0);
	vl_tot_coparticipacao_w	:= coalesce(vl_tot_coparticipacao_w,0) + coalesce(vl_coparticipacao_w,0);
	vl_tot_outros_w		:= coalesce(vl_tot_outros_w,0) + coalesce(vl_outros_w,0) + coalesce(vl_outros_pagador_w,0);
	vl_tot_adicionais_w	:= coalesce(vl_tot_adicionais_w,0) + coalesce(vl_adicionais_w,0);
	 
	if (coalesce(r_c01_w.ie_cancelamento,'X')	= 'X') then 
		vl_lote_w	:= coalesce(vl_lote_w,0) + coalesce(vl_mensalidade_w,0);
	elsif (coalesce(r_c01_w.ie_cancelamento,'X')	= 'C') then 
		vl_cancelado_w	:= coalesce(vl_cancelado_w,0) + coalesce(vl_mensalidade_w,0);
	end if;
	 
	select	sum(a.vl_taxa_boleto) 
	into STRICT	vl_taxa_boleto_seg_w 
	from	pls_mensalidade_seg_item	a, 
		pls_mensalidade_segurado	b, 
		pls_mensalidade			c 
	where	a.nr_seq_mensalidade_seg	= b.nr_sequencia 
	and	b.nr_seq_mensalidade		= c.nr_sequencia 
	and	c.nr_sequencia			= r_c01_w.nr_seq_mensalidade;
	 
	/*select	sum(a.vl_item) 
	into	vl_taxa_boleto_pag_w 
	from	pls_mensalidade_seg_item	a, 
		pls_mensalidade			b 
	where	b.nr_sequencia		= nr_seq_mensalidade_w 
	and	a.nr_seq_mensalidade	= b.nr_sequencia 
	and	a.ie_tipo_item		= '17';*/
 
	 
	vl_taxa_boleto_w	:= coalesce(vl_taxa_boleto_pag_w,0) + coalesce(vl_taxa_boleto_seg_w,0);
	 
	update	pls_mensalidade 
	set	vl_mensalidade		= coalesce(vl_mensalidade_w,0), 
		vl_coparticipacao	= coalesce(vl_coparticipacao_w,0), 
		vl_adicionais		= coalesce(vl_adicionais_w,0), 
		vl_outros		= coalesce(vl_outros_w,0) + coalesce(vl_outros_pagador_w,0), 
		vl_pos_estabelecido	= coalesce(vl_pos_estab_w,0), 
		vl_pre_estabelecido	= coalesce(vl_pre_estab_w,0), 
		vl_pro_rata_dia		= coalesce(vl_pro_rata_dia_w,0), 
		vl_antecipacao		= coalesce(vl_antecipacao_w,0), 
		qt_beneficiarios	= coalesce(qt_beneficiarios_w,0), 
		vl_taxa_boleto		= coalesce(vl_taxa_boleto_w,0) 
	where	nr_sequencia		= r_c01_w.nr_seq_mensalidade;
end loop;
 
delete	FROM pls_mensalidade a 
where	a.nr_sequencia	= nr_seq_lote_p 
and	not exists (	SELECT	1 
			from	pls_mensalidade_segurado 	y, 
				pls_mensalidade_seg_item 	x 
			where	y.nr_sequencia 			= x.nr_seq_mensalidade_seg 
			and	y.nr_seq_mensalidade 		= a.nr_sequencia);
 
select	sum(a.vl_pro_rata_dia), 
	sum(a.vl_antecipacao), 
	sum(a.qt_beneficiarios), 
	count(1) 
into STRICT	vl_pro_rata_dia_w, 
	vl_antecipacao_w, 
	qt_beneficiarios_w, 
	qt_pagadores_lote_w 
from	pls_mensalidade		a, 
	pls_lote_mensalidade	b 
where	a.nr_seq_lote	= b.nr_sequencia 
and	b.nr_sequencia	= nr_seq_lote_p 
and	coalesce(a.ie_cancelamento::text, '') = '';
 
update	pls_lote_mensalidade 
set	vl_lote			= coalesce(vl_lote_w,0), 
	vl_pre_estabelecido	= coalesce(vl_tot_pre_estab_w,0), 
	vl_pos_estabelecido	= coalesce(vl_tot_pos_estab_w,0), 
	vl_coparticipacao	= coalesce(vl_tot_coparticipacao_w,0), 
	vl_outros		= coalesce(vl_tot_outros_w,0), 
	vl_adicionais		= coalesce(vl_tot_adicionais_w,0), 
	vl_cancelado		= coalesce(vl_cancelado_w,0), 
	vl_pro_rata_dia		= coalesce(vl_pro_rata_dia_w,0), 
	vl_antecipacao		= coalesce(vl_antecipacao_w,0), 
	qt_pagadores_lote	= qt_pagadores_lote_w, 
	qt_beneficiario_lote	= qt_beneficiarios_w 
where	nr_sequencia		= nr_seq_lote_p;
 
/* Não dar commit */
 
--commit; 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualiza_valor_mensalidade ( nr_seq_lote_p bigint, nm_usuario_p text) FROM PUBLIC;

