-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_gerar_causa_dano_lib () AS $body$
DECLARE


c01 CURSOR FOR
SELECT	nr_seq_grupo_trab,
	nr_seq_grupo_planej,
	nr_sequencia,
	dt_atualizacao,
	nm_usuario
from	man_causa_dano
where ((nr_seq_grupo_trab IS NOT NULL AND nr_seq_grupo_trab::text <> '') or
	(nr_seq_grupo_planej IS NOT NULL AND nr_seq_grupo_planej::text <> ''));

nr_seq_grupo_trab_w		bigint;
nr_seq_grupo_planej_w		bigint;
nr_sequencia_w			bigint;
qt_existe_w			bigint;
dt_atualizacao_w			timestamp;
nm_usuario_w			varchar(15);


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_grupo_trab_w,
	nr_seq_grupo_planej_w,
	nr_sequencia_w,
	dt_atualizacao_w,
	nm_usuario_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	/*Verifica e cria a regra se existir uma para ambos*/

	if (coalesce(nr_seq_grupo_trab_w,0) > 0) and (coalesce(nr_seq_grupo_planej_w,0) > 0) then
		select	count(*)
		into STRICT	qt_existe_w
		from	man_causa_dano_lib
		where	nr_seq_causa_dano 	= nr_sequencia_w
		and	nr_seq_grupo_trab		= nr_seq_grupo_trab_w
		and	nr_seq_grupo_planej	= nr_seq_grupo_planej_w;

		if (qt_existe_w = 0) then
			insert into man_causa_dano_lib(
						nr_sequencia,
						nr_seq_causa_dano,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_grupo_trab,
						nr_seq_grupo_planej)
					values (	nextval('man_causa_dano_lib_seq'),
						nr_sequencia_w,
						dt_atualizacao_w,
						nm_usuario_w,
						dt_atualizacao_w,
						nm_usuario_w,
						nr_seq_grupo_trab_w,
						nr_seq_grupo_planej_w);
		end if;
	end if;

	/*Verifica e cria a regra por grupo de trabalho exclusivo*/

	if (coalesce(nr_seq_grupo_trab_w,0) > 0) and (coalesce(nr_seq_grupo_planej_w,0) = 0) then
		select	count(*)
		into STRICT	qt_existe_w
		from	man_causa_dano_lib
		where	nr_seq_causa_dano 	= nr_sequencia_w
		and	nr_seq_grupo_trab		= nr_seq_grupo_trab_w
		and	coalesce(nr_seq_grupo_planej::text, '') = '';

		if (qt_existe_w = 0) then
			insert into man_causa_dano_lib(
						nr_sequencia,
						nr_seq_causa_dano,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_grupo_trab)
					values (	nextval('man_causa_dano_lib_seq'),
						nr_sequencia_w,
						dt_atualizacao_w,
						nm_usuario_w,
						dt_atualizacao_w,
						nm_usuario_w,
						nr_seq_grupo_trab_w);

		end if;
	end if;

	/*Verifica e cria a regra por grupo de planejamento exclusivo*/

	if (coalesce(nr_seq_grupo_planej_w,0) > 0) and (coalesce(nr_seq_grupo_trab_w,0) = 0) then
		select	count(*)
		into STRICT	qt_existe_w
		from	man_causa_dano_lib
		where	nr_seq_causa_dano 	= nr_sequencia_w
		and	nr_seq_grupo_planej	= nr_seq_grupo_planej_w
		and	coalesce(nr_seq_grupo_trab::text, '') = '';

		if (qt_existe_w = 0) then
			insert into man_causa_dano_lib(
						nr_sequencia,
						nr_seq_causa_dano,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_grupo_planej)
					values (	nextval('man_causa_dano_lib_seq'),
						nr_sequencia_w,
						dt_atualizacao_w,
						nm_usuario_w,
						dt_atualizacao_w,
						nm_usuario_w,
						nr_seq_grupo_planej_w);
		end if;
	end if;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_gerar_causa_dano_lib () FROM PUBLIC;

