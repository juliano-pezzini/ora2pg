-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_inserir_valor_tab_mat ( nr_seq_material_preco_p pls_material_preco.nr_sequencia%type, nr_seq_material_p pls_material.nr_sequencia%type, vl_material_p bigint, dt_inicio_vigencia_p timestamp, ie_inserir_p text default 'S', cd_moeda_p moeda.cd_moeda%type DEFAULT NULL, ie_criado_atual_p INOUT text DEFAULT NULL, nm_usuario_p usuario.nm_usuario%type DEFAULT NULL, ie_tipo_preco_p pls_material_valor_item.ie_tipo_preco%type DEFAULT NULL, qt_convercao_p pls_material_valor_item.qt_convercao%type DEFAULT NULL) AS $body$
DECLARE


ie_tem_registro_w	varchar(1);
nr_seq_preco_item_w	pls_material_preco_item.nr_sequencia%type;
qt_registro_w		bigint;
vl_material_old_w	pls_material_valor_item.vl_material%type;
nr_seq_mat_valor_w	pls_material_valor_item.nr_sequencia%type;
C01 CURSOR(	nr_seq_material_p	pls_material_preco_item.nr_sequencia%type,
		nr_seq_material_preco_p	pls_material_preco.nr_sequencia%type) FOR

	SELECT	b.nr_sequencia nr_seq_preco_item
	from	pls_material_preco_item	b
	where	b.nr_seq_material_preco = nr_seq_material_preco_p
	and	b.nr_seq_material = nr_seq_material_p;

BEGIN

-- NESTA ROTINA NÃO É REALIZADO COMMIT POR QUE ELA PODE SER USADA DENTRO DE LOOPS ENTÃO DEVE SER COMMITADO APÓS USAR ESTA ROTINA APENAS QUANDO
--NECESSÁRIO.
if (nr_seq_material_preco_p IS NOT NULL AND nr_seq_material_preco_p::text <> '') and (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') and (vl_material_p IS NOT NULL AND vl_material_p::text <> '') and (dt_inicio_vigencia_p IS NOT NULL AND dt_inicio_vigencia_p::text <> '') and (cd_moeda_p IS NOT NULL AND cd_moeda_p::text <> '') then

	ie_tem_registro_w := 'N';

	-- Caso exista registro do material na tabela de preço então será inserido um valor para este resgistro
	-- caso contrário será adicionado a baixo o material na tabela.
	for	r_C01_w in C01(nr_seq_material_p,nr_seq_material_preco_p) loop
		ie_tem_registro_w := 'S';

		select	max(vl_material),
			max(nr_sequencia)
		into STRICT	vl_material_old_w,
			nr_seq_mat_valor_w
		from	pls_material_valor_item a
		where	a.nr_seq_preco_item 	= r_C01_w.nr_seq_preco_item
		and	((a.ie_tipo_preco	= ie_tipo_preco_p) or (coalesce(a.ie_tipo_preco::text, '') = '' and coalesce(ie_tipo_preco_p::text, '') = ''))
		and	trunc(a.dt_inicio_vigencia) = trunc(dt_inicio_vigencia_p);

		-- Só irá inserir na tabela caso  a vigência do preço seja diferente das existentes
		if (coalesce(nr_seq_mat_valor_w::text, '') = '') then

			insert into pls_material_valor_item(	nr_sequencia, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, cd_moeda,
					vl_material, nr_seq_preco_item, dt_inicio_vigencia,
					ie_tipo_preco, qt_convercao )
			values (		nextval('pls_material_valor_item_seq'), clock_timestamp(), nm_usuario_p,
					clock_timestamp(), nm_usuario_p, cd_moeda_p,
					vl_material_p, r_C01_w.nr_seq_preco_item, trunc(dt_inicio_vigencia_p),
					ie_tipo_preco_p, qt_convercao_p);

			--Utilizado na OPS - Tabelas de Preço para contar quando itens são criados ou atualizados na importação de arquivo de Preço
			ie_criado_atual_p := 'A';
		else
			insert into pls_log_tab_propria(	nr_sequencia, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_material_preco,
					VL_MATERIAL_NOVO, nr_seq_material,VL_MATERIAL_ANTIGO)
			values (		nextval('pls_log_tab_propria_seq'), clock_timestamp(), nm_usuario_p,
					clock_timestamp(), nm_usuario_p, nr_seq_material_preco_p,
					vl_material_p, nr_seq_material_p, vl_material_old_w);

			update	pls_material_valor_item
			set	vl_material 	= vl_material_p,
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp()
			where 	nr_sequencia 	= nr_seq_mat_valor_w;
		end if;
	end loop;

	-- aqui será inserido o material na tabela de preço caso ele ainda não exista na mesma.
	if (ie_tem_registro_w = 'N') then
		if (ie_inserir_p = 'S') then
			select	nextval('pls_material_preco_item_seq')
			into STRICT	nr_seq_preco_item_w
			;

			insert into pls_material_preco_item(	nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec,
				nr_seq_material, nr_seq_material_preco, ie_situacao)
			values (	nr_seq_preco_item_w, clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p,
				nr_seq_material_p, nr_seq_material_preco_p, 'A');

			insert into pls_material_valor_item(	nr_sequencia, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, cd_moeda,
					vl_material, nr_seq_preco_item, dt_inicio_vigencia,
					ie_tipo_preco, qt_convercao)
			values (		nextval('pls_material_valor_item_seq'), clock_timestamp(), nm_usuario_p,
					clock_timestamp(), nm_usuario_p, cd_moeda_p,
					vl_material_p, nr_seq_preco_item_w, trunc(dt_inicio_vigencia_p),
					ie_tipo_preco_p, qt_convercao_p);

			--Utilizado na OPS - Tabelas de Preço para contar quando itens são criados ou atualizados na importação de arquivo de Preço
			ie_criado_atual_p := 'C';
		end if;
	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_inserir_valor_tab_mat ( nr_seq_material_preco_p pls_material_preco.nr_sequencia%type, nr_seq_material_p pls_material.nr_sequencia%type, vl_material_p bigint, dt_inicio_vigencia_p timestamp, ie_inserir_p text default 'S', cd_moeda_p moeda.cd_moeda%type DEFAULT NULL, ie_criado_atual_p INOUT text DEFAULT NULL, nm_usuario_p usuario.nm_usuario%type DEFAULT NULL, ie_tipo_preco_p pls_material_valor_item.ie_tipo_preco%type DEFAULT NULL, qt_convercao_p pls_material_valor_item.qt_convercao%type DEFAULT NULL) FROM PUBLIC;

