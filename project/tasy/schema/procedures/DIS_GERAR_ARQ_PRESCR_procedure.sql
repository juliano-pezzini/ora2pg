-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dis_gerar_arq_prescr ( nr_prescricao_p bigint, ie_opcao_p text) AS $body$
DECLARE



arq_texto_w		utl_file.file_type;
arq_texto_ww		utl_file.file_type;
ds_linha_arquivo_w		varchar(2000);
nr_seq_lote_w		bigint;
nm_arquivo_w		varchar(100);
ds_diretorio_w		varchar(255);
ds_diretorio_adep_w	varchar(255);
nm_usuario_w		varchar(15);
cd_estabelecimento_w	smallint;	
nr_seq_regra_disp_w	bigint;
ie_gera_arquivo_w		varchar(1);		
ie_imprime_lote_w		varchar(1);
ie_gerou_arq_w		varchar(1)	:= 'N';
dt_horario_w            	timestamp;
dt_inicio_prescr_w		timestamp;
dt_validade_prescr_w    	timestamp;
nr_atendimento_w        	bigint;
qt_dispensar_hor_w     	double precision;
qt_dose_w              	 	double precision;
cd_unidade_medida_w 	varchar(30);
ds_justificativa_w      	varchar(2000);
ie_forma_integracao_w	varchar(1);
nr_sequencia_lote_w	bigint;
cd_material_w		integer;
cd_local_estoque_w	smallint;
ds_local_estoque_w	varchar(40);	
nr_seq_turno_w		bigint;
ds_turno_w		varchar(80);
ds_classif_urgente_w	varchar(80);
dt_dispensacao_w		timestamp;
hr_dispensacao_w		timestamp;
cd_setor_atendimento_w	bigint;
ds_setor_atendimento_w	varchar(100);
nm_paciente_w		varchar(255);
cd_pessoa_fisica_w	varchar(10);
ds_observacao_w		sup_int_lote_prescr.ds_observacao%type;
dt_liberacao_w		timestamp;
ds_leito_w		varchar(100);
nr_prescricao_w		bigint;

/*
ie_opcao_p:
1 - Liberacao da prescricao
2 - Suspensao da prescricao/item
*/
C01 CURSOR FOR
SELECT  'EOA|' ||
        DT_INICIO_PRESCR ||
        '|' ||
        nr_seq_lote || '-' ||
        reg ||
        '|' ||
        dt_horario ||
        '|' ||
        DT_VALIDADE_PRESCR ||
        '|' ||
        nr_atendimento ||
        '|' ||
        cd_material_estoque ||
        '||'||
        ie_urgencia ||
        '|' ||
        ds_classif ||
        '|' ||
        diluicao ||
        '||||' ||
        qt_dispensar_hor ||
        '|' ||
        qt_dose ||
        '|'||
        CD_UNIDADE_MEDIDA_DOSE ||
        '|||' ||
        IE_VIA_APLICACAO ||
        '||' ||
        IE_DOSE_ESPEC_AGORA ||
        '|||||||||||||||||||||||' ||
        '0|' ||
        DS_JUSTIFICATIVA ||
        '||',
	nr_seq_lote,
	nr_seq_regra_disp
from
(    SELECT  to_char(clock_timestamp(), 'MMDDYYYYHH24MISS') DT_INICIO_PRESCR,
        a.nr_seq_lote,
	a.nr_seq_regra_disp,
        to_char(a.dt_horario, 'MMDDYYYYHH24MISS') dt_horario,
        to_char(b.DT_VALIDADE_PRESCR, 'MMDDYYYYHH24MISS') DT_VALIDADE_PRESCR,
        b.nr_atendimento,
        e.cd_material_estoque,
	substr(obter_desc_classif_lote(a.nr_seq_classif),1,100) ds_classif,
        case
          when c.ie_urgencia = 'N' then 1
          when c.ie_urgencia = 'S' then 1
        end ie_urgencia,
        substr(obter_diluicao_medic(c.nr_sequencia, a.nr_prescricao), 0, 59) diluicao,
        a.qt_dispensar_hor,
        c.qt_dose,
        c.CD_UNIDADE_MEDIDA_DOSE,
        c.IE_VIA_APLICACAO,
        case
          when c.IE_DOSE_ESPEC_AGORA = 'N' then '0'
          when c.IE_DOSE_ESPEC_AGORA = 'S' then '1'
          when coalesce(c.IE_DOSE_ESPEC_AGORA::text, '') = '' then '0'
        end IE_DOSE_ESPEC_AGORA,
        case
          when coalesce(substr(c.DS_JUSTIFICATIVA, 0, 59)::text, '') = '' then PERFORM wheb_mensagem_pck.get_Texto(311691) /*'Sem observacao'*/
        else
          substr(c.DS_JUSTIFICATIVA, 0, 59)
        end DS_JUSTIFICATIVA,
        ROW_NUMBER() OVER (PARTITION BY a.nr_seq_lote order by a.nr_seq_lote) reg
    from    prescr_mat_hor a,
        prescr_medica b,
        prescr_material c,
	estrutura_material_v s,
        material e,
	ap_lote l
    where   (a.nr_seq_lote IS NOT NULL AND a.nr_seq_lote::text <> '')
    and	    a.cd_material = s.cd_material
    and     a.nr_prescricao = b.nr_prescricao
    and     c.nr_prescricao = b.nr_prescricao
    and     a.nr_seq_material = c.nr_sequencia
    and     a.nr_prescricao = nr_prescricao_p
    and     a.cd_material = e.cd_material
    and	    a.nr_seq_lote = l.nr_sequencia
    and     ((coalesce(l.ie_integracao,'N') = 'N') or (c.ie_agrupador in (4,13)))

    	
    and exists(
	select	1
	from	regra_local_dispensacao x
	where	x.cd_estabelecimento	= b.cd_estabelecimento
	and	x.cd_setor_atendimento	= b.cd_setor_atendimento
	and 	coalesce(x.nr_seq_classif,a.nr_seq_classif)	= a.nr_seq_classif
	and	((x.cd_material 	= s.cd_material) OR (x.cd_grupo_material	= s.cd_grupo_material) OR (x.cd_subgrupo_material = s.cd_subgrupo_material) OR (x.cd_classe_material	= s.cd_classe_material) or ((x.nr_seq_estrut_int IS NOT NULL AND x.nr_seq_estrut_int::text <> '') and consistir_se_mat_contr_estrut(x.nr_seq_estrut_int,s.cd_material) = 'S')))
    order by a.nr_seq_lote) alias31;

C02 CURSOR FOR
	SELECT	'EOD|' ||
		dt_horario ||
		'|' ||
		nr_seq_lote || '-' ||
		reg ||
		'|' ||
		nr_atendimento ||
		'|' ||
		cd_material ||
		'||||'||
		'0|'||
		'SHS',
		nr_seq_lote
	from	(
		SELECT	to_char(a.dt_horario, 'MMDDYYYYHH24MISS') dt_horario,
			b.nr_atendimento,
			c.cd_material,
			c.ie_suspenso,
			a.nr_seq_lote,
			ROW_NUMBER() OVER (PARTITION BY a.nr_seq_lote order by a.nr_seq_lote) reg
		from	prescr_mat_hor a,
			prescr_medica b,
			prescr_material c,
			intervalo_prescricao d,
			estrutura_material_v s,
			material e
		where	(a.nr_seq_lote IS NOT NULL AND a.nr_seq_lote::text <> '')
		and	a.nr_prescricao = b.nr_prescricao
		and	c.nr_prescricao = b.nr_prescricao
		and	c.cd_intervalo = d.cd_intervalo
		and	a.nr_seq_material = c.nr_sequencia
		and	a.nr_prescricao = nr_prescricao_p
		and	c.cd_material = e.cd_material
		and	e.cd_material = s.cd_material
		and exists(
			select	1
			from	regra_local_dispensacao x
			where	x.cd_estabelecimento	= b.cd_estabelecimento
			and	x.cd_setor_atendimento	= b.cd_setor_atendimento
			and 	coalesce(x.nr_seq_classif,a.nr_seq_classif)	= a.nr_seq_classif
			and	((x.cd_material 	= s.cd_material) OR (x.cd_grupo_material	= s.cd_grupo_material) OR (x.cd_subgrupo_material = s.cd_subgrupo_material) OR (x.cd_classe_material	= s.cd_classe_material) or ((x.nr_seq_estrut_int IS NOT NULL AND x.nr_seq_estrut_int::text <> '') and consistir_se_mat_contr_estrut(x.nr_seq_estrut_int,s.cd_material) = 'S')))
		order by a.nr_seq_lote) alias14
	where	ie_suspenso = 'S';

C03 CURSOR FOR
	SELECT 	a.qt_dispensar_hor,
		c.qt_dose,
		c.cd_unidade_medida,
		substr(c.ds_observacao,1,255) ds_observacao,
		c.cd_local_estoque,
		substr(obter_desc_local_estoque(c.cd_local_estoque),1,80) ds_loca_estoque,
		substr(obter_desc_turno_disp(l.nr_seq_turno),1,80) ds_turno,
		substr(obter_desc_classif_lote(l.nr_seq_classif),1,100) ds_classif,
		l.dt_atend_lote,
		l.dt_atend_lote,
		l.nr_seq_turno,
		l.nr_sequencia,
		l.cd_setor_atendimento,
		substr(obter_nome_setor(l.cd_setor_atendimento),1,100) ds_setor_atendimento,
		substr(obter_nome_pf(b.cd_pessoa_fisica),1,60) nm_paciente,
		b.cd_pessoa_fisica,
		b.dt_liberacao,
		c.cd_material,
		substr(Obter_Unidade_Atendimento(b.nr_atendimento,'A','UB')||Obter_Unidade_Atendimento(b.nr_atendimento,'A','UC'),1,80) ds_leito,
		b.nr_prescricao
	from    prescr_mat_hor a,
		prescr_medica b,
		prescr_material c,
		estrutura_material_v s,
		material e,
		ap_lote l
	where   (a.nr_seq_lote IS NOT NULL AND a.nr_seq_lote::text <> '')
	and	a.cd_material = s.cd_material
	and     a.nr_prescricao = b.nr_prescricao
	and     c.nr_prescricao = b.nr_prescricao
	and     a.nr_seq_material = c.nr_sequencia
	and     a.nr_prescricao = nr_prescricao_p
	and     a.cd_material = e.cd_material
	and	a.nr_seq_lote = l.nr_sequencia
	and 	c.ie_suspenso = 'S'
	order by a.nr_seq_lote;

C04 CURSOR FOR
	SELECT 	a.qt_dispensar_hor,
		c.qt_dose,
		c.cd_unidade_medida,
		substr(c.ds_observacao,1,255) ds_observacao,
		c.cd_local_estoque,
		substr(obter_desc_local_estoque(c.cd_local_estoque),1,80) ds_loca_estoque,
		substr(obter_desc_turno_disp(l.nr_seq_turno),1,80) ds_turno,
		substr(obter_desc_classif_lote(l.nr_seq_classif),1,100) ds_classif,
		l.dt_atend_lote,
		l.dt_atend_lote,
		l.nr_seq_turno,
		l.nr_sequencia,
		l.cd_setor_atendimento,
		substr(obter_nome_setor(l.cd_setor_atendimento),1,100) ds_setor_atendimento,
		substr(obter_nome_pf(b.cd_pessoa_fisica),1,60) nm_paciente,
		b.cd_pessoa_fisica,
		b.dt_liberacao,
		c.cd_material,
		substr(Obter_Unidade_Atendimento(b.nr_atendimento,'A','UB')||Obter_Unidade_Atendimento(b.nr_atendimento,'A','UC'),1,80) ds_leito,
		b.nr_prescricao
	from    prescr_mat_hor a,
		prescr_medica b,
		prescr_material c,
		estrutura_material_v s,
		material e,
		ap_lote l
	where   (a.nr_seq_lote IS NOT NULL AND a.nr_seq_lote::text <> '')
	and	a.cd_material = s.cd_material
	and     a.nr_prescricao = b.nr_prescricao
	and     c.nr_prescricao = b.nr_prescricao
	and     a.nr_seq_material = c.nr_sequencia
	and     a.nr_prescricao = nr_prescricao_p
	and     a.cd_material = e.cd_material
	and	a.nr_seq_lote = l.nr_sequencia
	and     coalesce(l.ie_integracao,'N') = 'N'
	and exists(
		SELECT	1
		from	regra_local_dispensacao x
		where	x.cd_estabelecimento	= b.cd_estabelecimento
		and	x.cd_setor_atendimento	= b.cd_setor_atendimento
		and 	coalesce(x.nr_seq_classif,a.nr_seq_classif)	= a.nr_seq_classif
		and	((x.cd_material 	= s.cd_material) OR (x.cd_grupo_material	= s.cd_grupo_material) OR (x.cd_subgrupo_material = s.cd_subgrupo_material) OR (x.cd_classe_material	= s.cd_classe_material) or ((x.nr_seq_estrut_int IS NOT NULL AND x.nr_seq_estrut_int::text <> '') and consistir_se_mat_contr_estrut(x.nr_seq_estrut_int,s.cd_material) = 'S')))
	order by a.nr_seq_lote;


BEGIN
--Parametro 1: diretorio a ser gravado o arquivo (diretorio valido linux - tem que ser mapeado para conseguir gerar)

--Parametro 2: nome_do_arquivo a ser gerado
nm_arquivo_w	:= to_char(clock_timestamp(),'MMDDYYYYHH24MISS') || '.pyx';

select	cd_estabelecimento,
	nm_usuario
into STRICT	cd_estabelecimento_w,
	nm_usuario_w
from	prescr_medica
where 	nr_prescricao = nr_prescricao_p;

select  coalesce(max(ie_forma_integracao),'A')
into STRICT	ie_forma_integracao_w
from	dis_parametros_int
where	cd_estabelecimento = cd_estabelecimento_w;

if (ie_opcao_p in ('1','2')) then
	ds_diretorio_w := substr(obter_valor_param_usuario(924, 275, Obter_perfil_ativo,nm_usuario_w,cd_estabelecimento_w),1,255);
end if;

if (ie_opcao_p = '3') then
	ds_diretorio_adep_w := substr(obter_valor_param_usuario(1113, 326, Obter_perfil_ativo,nm_usuario_w,cd_estabelecimento_w),1,255);
end if;

if (ie_opcao_p = '1')  and ((ie_forma_integracao_w = 'A') or (ie_forma_integracao_w = 'M'))then
	begin
	open C01;
	loop
	fetch C01 into
		ds_linha_arquivo_w,
		nr_seq_lote_w,
		nr_seq_regra_disp_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	
		select  ie_gera_arquivo,
			ie_imprime_lote
		into STRICT	ie_gera_arquivo_w,
			ie_imprime_lote_w	
		from 	dis_regra_local
		where 	nr_sequencia = nr_seq_regra_disp_w;
		
		if (coalesce(ie_gera_arquivo_w,'S') = 'S') and (coalesce(ie_imprime_lote_w, 'S') = 'N') and (ds_linha_arquivo_w IS NOT NULL AND ds_linha_arquivo_w::text <> '') then
			begin
			
			if (ie_gerou_arq_w = 'N') then
				arq_texto_w	:= utl_file.fopen(ds_diretorio_w,nm_arquivo_w,'W');
				ie_gerou_arq_w	:= 'S';
			end if;
				
			utl_file.put_line(arq_texto_w,ds_linha_arquivo_w);
			utl_file.fflush(arq_texto_w);
				
			update	ap_lote
			set	ie_integracao 	= 'S',
				ie_status_lote 	= 'A',
				dt_impressao	= clock_timestamp()
			where	nr_sequencia = 	nr_seq_lote_w;
					
			end;
		elsif (coalesce(ie_gera_arquivo_w,'S') = 'S') and (coalesce(ie_imprime_lote_w, 'S') = 'S') and (ds_linha_arquivo_w IS NOT NULL AND ds_linha_arquivo_w::text <> '') then
			begin
			
			if (ie_gerou_arq_w = 'N') then
				arq_texto_w	:= utl_file.fopen(ds_diretorio_w,nm_arquivo_w,'W');
				ie_gerou_arq_w	:= 'S';
			end if;
							
			utl_file.put_line(arq_texto_w,ds_linha_arquivo_w);
			utl_file.fflush(arq_texto_w);
			
			update	ap_lote
			set	ie_integracao 	= 'S',
				ie_status_lote 	= 'A'
			where	nr_sequencia = 	nr_seq_lote_w;
					
			end;
		end if;
	end loop;
	close C01;

	if (ie_gerou_arq_w = 'S') then
		begin
	
		insert into dis_log_integracao(
			nr_sequencia,
			cd_estabelecimento,
			dt_atualizacao,    
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ds_historico)
		values (nextval('dis_log_integracao_seq'),	
			cd_estabelecimento_w,
			clock_timestamp(), 
			nm_usuario_w, 
			clock_timestamp(), 
			nm_usuario_w, 
			wheb_mensagem_pck.get_Texto(311692)); /*'Gerado o arquivo para o dispensario - liberacao prescricao ');*/

		--fecha e libera o arquivo
		
		end;
	end if;
	end;
elsif (ie_opcao_p = '2') and ((ie_forma_integracao_w = 'A') or (ie_forma_integracao_w = 'M')) then
	begin
	open C02;
	loop
	fetch C02 into
		ds_linha_arquivo_w,
		nr_seq_lote_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		if (ds_linha_arquivo_w IS NOT NULL AND ds_linha_arquivo_w::text <> '' AND ds_diretorio_w IS NOT NULL AND ds_diretorio_w::text <> '') then
			begin
			
			if (ie_gerou_arq_w = 'N') then
				arq_texto_ww := utl_file.fopen(ds_diretorio_w,nm_arquivo_w,'W');
				ie_gerou_arq_w	:= 'S';
			end if;
			--gera uma nova linha no arquivo	
			
			utl_file.put_line(arq_texto_w,ds_linha_arquivo_w);
			utl_file.fflush(arq_texto_w);
			
			end;
		end if;
		
	end loop;
	close C02;
	
	if (ie_gerou_arq_w = 'S') then
		begin
		
		insert into dis_log_integracao(
			nr_sequencia,
			cd_estabelecimento,
			dt_atualizacao,    
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ds_historico)
		values (nextval('dis_log_integracao_seq'),	
			cd_estabelecimento_w,
			clock_timestamp(), 
			nm_usuario_w, 
			clock_timestamp(), 
			nm_usuario_w, 
			wheb_mensagem_pck.get_Texto(311693)); /*'Gerado o arquivo para o lotes suspensos');*/
			
		end;
	end if;
	end;
end if;

if (ie_opcao_p = '2') and ((ie_forma_integracao_w = 'B') or (ie_forma_integracao_w = 'M')) then
	begin
	open C03;
	loop
	fetch C03 into	
		qt_dispensar_hor_w,
		qt_dose_w,
		cd_unidade_medida_w,
		ds_observacao_w,
		cd_local_estoque_w,
		ds_local_estoque_w,
		ds_turno_w,
		ds_classif_urgente_w,
		dt_dispensacao_w,
		hr_dispensacao_w,
		nr_seq_turno_w,
		nr_seq_lote_w,
		cd_setor_atendimento_w,
		ds_setor_atendimento_w,
		nm_paciente_w,
		cd_pessoa_fisica_w,
		dt_liberacao_w,
		cd_material_w,
		ds_leito_w,
		nr_prescricao_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		insert into sup_int_lote_prescr(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_material,
				qt_dispensar_hor,
				nr_seq_lote,
				cd_setor_atendimento,
				ds_setor_atendimento,
				cd_unidade_medida,
				nm_pessoa_fisica,
				cd_pessoa_fisica,
				dt_liberacao,
				cd_operacao_estoque,
				ie_lido,
				ds_observacao,
				cd_local_estoque,
				ds_local_estoque,
				nr_seq_turno,
				ds_turno,
				ds_classif_urgente,
				dt_dispensacao,
				hr_dispensacao,
				ds_leito,
				nr_prescricao)
		values (	nextval('sup_int_lote_prescr_seq'),
				clock_timestamp(),
				nm_usuario_w,
				clock_timestamp(),
				nm_usuario_w,
				cd_material_w,
				qt_dispensar_hor_w,
				nr_seq_lote_w,
				cd_setor_atendimento_w,
				ds_setor_atendimento_w,
				cd_unidade_medida_w,
				nm_paciente_w,
				cd_pessoa_fisica_w,
				dt_liberacao_w,
				'S',
				'',
				ds_observacao_w,
				cd_local_estoque_w,
				ds_local_estoque_w,
				nr_seq_turno_w,
				ds_turno_w,
				ds_classif_urgente_w,
				dt_dispensacao_w,
				hr_dispensacao_w,
				ds_leito_w,
				nr_prescricao_w);
		end;	
	end loop;
	close C03;
	end;
end if;

if (ie_opcao_p = '1')  and ((ie_forma_integracao_w = 'B') or (ie_forma_integracao_w = 'M')) then
	begin
	open C04;
	loop
	fetch C04 into	
		qt_dispensar_hor_w,
		qt_dose_w,
		cd_unidade_medida_w,
		ds_observacao_w,
		cd_local_estoque_w,
		ds_local_estoque_w,
		ds_turno_w,
		ds_classif_urgente_w,
		dt_dispensacao_w,
		hr_dispensacao_w,
		nr_seq_turno_w,
		nr_seq_lote_w,
		cd_setor_atendimento_w,
		ds_setor_atendimento_w,
		nm_paciente_w,
		cd_pessoa_fisica_w,
		dt_liberacao_w,
		cd_material_w,
		ds_leito_w,
		nr_prescricao_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		insert into sup_int_lote_prescr(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_material,
				qt_dispensar_hor,
				nr_seq_lote,
				cd_setor_atendimento,
				ds_setor_atendimento,
				cd_unidade_medida,
				nm_pessoa_fisica,
				cd_pessoa_fisica,
				dt_liberacao,
				cd_operacao_estoque,
				ie_lido,
				ds_observacao,
				cd_local_estoque,
				ds_local_estoque,
				nr_seq_turno,
				ds_turno,
				ds_classif_urgente,
				dt_dispensacao,
				hr_dispensacao,
				ds_leito,
				nr_prescricao)
		values (	nextval('sup_int_lote_prescr_seq'),
				clock_timestamp(),
				nm_usuario_w,
				clock_timestamp(),
				nm_usuario_w,
				cd_material_w,
				qt_dispensar_hor_w,
				nr_seq_lote_w,
				cd_setor_atendimento_w,
				ds_setor_atendimento_w,
				cd_unidade_medida_w,
				nm_paciente_w,
				cd_pessoa_fisica_w,
				dt_liberacao_w,
				'O',
				'',
				ds_observacao_w,
				cd_local_estoque_w,
				ds_local_estoque_w,
				nr_seq_turno_w,
				ds_turno_w,
				ds_classif_urgente_w,
				dt_dispensacao_w,
				hr_dispensacao_w,
				ds_leito_w,
				nr_prescricao_w);
		end;	
	end loop;
	close C04;
	
	if (coalesce(nr_seq_lote_w,0) > 0)  then
		update	ap_lote
		set	ie_integracao 	= 'S',
			ie_status_lote 	= 'A',
			dt_impressao	= clock_timestamp()
		where	nr_sequencia = 	nr_seq_lote_w;
	end if;	

	end;
end if;

if (ie_gerou_arq_w = 'S') and ((ie_forma_integracao_w = 'A') or (ie_forma_integracao_w = 'M')) then
	begin
	utl_file.fclose(arq_texto_w);
	utl_file.fclose(arq_texto_ww);
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dis_gerar_arq_prescr ( nr_prescricao_p bigint, ie_opcao_p text) FROM PUBLIC;

