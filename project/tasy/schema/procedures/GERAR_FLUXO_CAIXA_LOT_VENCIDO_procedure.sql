-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_fluxo_caixa_lot_vencido ( nr_seq_lote_fluxo_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*--------------------------------------------------------------- ATENCAO ----------------------------------------------------------------*/


/* Cuidado ao realizar alteracoes no fluxo de caixa em lote. Toda e qualquer alteracao realizada em qualquer uma */


/* das procedures do fluxo de caixa em lote deve ser cuidadosamente verificada e realizada no fluxo de caixa      */


/* convencional. Devemos garantir que os dois fluxos de caixa tragam os mesmos valores no resultado, evitando     */


/* assim que existam diferencas entre os fluxos de caixa.                                                                                                */


/*--------------- AO ALTERAR O FLUXO DE CAIXA EM LOTE ALTERAR TAMBEM O FLUXO DE CAIXA ---------------*/

cd_conta_financ_cpa_w		bigint;
cd_conta_financ_cre_w		bigint;
ie_integracao_w			varchar(10);
cd_conta_financ_w		bigint;
cd_convenio_w			bigint;
vl_fluxo_w			fluxo_caixa_item.vl_fluxo%type;
cd_centro_custo_w		integer;
ie_origem_titulo_w		varchar(10);
nr_seq_classe_tit_rec_w		bigint;
nr_seq_classe_tit_pag_w		bigint;
dt_inicial_w			timestamp;
dt_final_w			timestamp;
dt_referencia_w			timestamp;
ie_conta_financ_ativa_w		varchar(1);
ie_identificacao_w		varchar(15);
ie_tipo_titulo_cr_w		titulo_receber.ie_tipo_titulo%type;
ie_tipo_titulo_cp_w		titulo_pagar.ie_tipo_titulo%type;
nr_titulo_pagar_w		titulo_pagar.nr_titulo%type;
nr_titulo_receber_w		titulo_receber.nr_titulo%type;
nr_seq_conv_receb_w		convenio_receb.nr_sequencia%type;
cd_empresa_w			empresa.cd_empresa%type;
ie_restringe_estab_w		fluxo_caixa_lote.ie_restringe_estab%type;

c010 CURSOR FOR
SELECT	'CP' ie_integracao,
	'1V' ie_identificacao,
	dt_referencia,
	cd_conta_financ,
	sum(vl_titulo),
	0 cd_convenio,
	cd_centro_custo,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	nr_seq_classe nr_seq_classe_tit_pag,
	ie_tipo_titulo ie_tipo_tit_pag,
	null ie_tipo_tit_rec,
	nr_titulo nr_titulo_pagar,
	null nr_titulo_receber,
	null nr_seq_conv_receb
from	(SELECT	coalesce(c.nr_seq_conta_financ, cd_conta_financ_cpa_w) cd_conta_financ,
		CASE WHEN coalesce(c.vl_titulo::text, '') = '' THEN  b.VL_SALDO_TITULO  ELSE b.VL_SALDO_TITULO * (dividir_sem_round(c.vl_titulo, (obter_dados_tit_pagar(b.nr_titulo, 'VT'))::numeric )) END  vl_titulo,
		c.cd_centro_custo,
		b.nr_seq_classe,
		b.ie_tipo_titulo,
		b.nr_titulo,
		OBTER_EMPRESA_ESTAB(b.cd_estabelecimento) cd_empresa_estab,
		substr(OBTER_SE_CONTA_FINANC_ESTAB(coalesce(c.nr_seq_conta_financ, cd_conta_financ_cpa_w), cd_estabelecimento_p,ie_restringe_estab_w),1,1) ie_conta_financ_estab,
		OBTER_VENC_TITULO(b.nr_titulo, null) dt_referencia
	FROM titulo_pagar b
LEFT OUTER JOIN titulo_pagar_classif c ON (b.nr_titulo = c.nr_titulo)
WHERE ((ie_restringe_estab_w = 'N') or (ie_restringe_estab_w = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and b.cd_estabelecimento = cd_estabelecimento_p or b.cd_estab_financeiro = cd_estabelecimento_p)) and b.vl_saldo_titulo	> 0 and b.ie_situacao		= 'A' and OBTER_VENC_TITULO(b.nr_titulo, null) between dt_inicial_w and dt_final_w ) alias17
where (ie_conta_financ_estab = 'S' or ie_restringe_estab_w = 'N')
and	cd_empresa_estab	= cd_empresa_w
group by dt_referencia,
	cd_conta_financ,
	cd_centro_custo,
	nr_seq_classe,
	ie_tipo_titulo,
	nr_titulo

union

select	'CR' ie_integracao,
	'2V' ie_identificacao,
	dt_referencia,
	cd_conta_financ,
	sum(vl_titulo),
	0 cd_convenio,
	cd_centro_custo,
	ie_origem_titulo,
	nr_seq_classe nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	null ie_tipo_tit_pag,
	ie_tipo_titulo ie_tipo_tit_rec,
	null nr_titulo_pagar,
	nr_titulo nr_titulo_receber,
	null nr_seq_conv_receb
from	(select	coalesce(c.cd_conta_financ, cd_conta_financ_cre_w) cd_conta_financ,
		CASE WHEN coalesce(c.vl_classificacao::text, '') = '' THEN  b.vl_saldo_titulo  ELSE b.vl_saldo_titulo * (dividir_sem_round(c.vl_classificacao, (OBTER_DADOS_TITULO_RECEBER(b.nr_titulo, 'V'))::numeric )) END  vl_titulo,
		c.cd_centro_custo,
		b.ie_origem_titulo,
		b.nr_seq_classe,
		b.ie_tipo_titulo,
		b.nr_titulo,
		OBTER_EMPRESA_ESTAB(b.cd_estabelecimento) cd_empresa_estab,
		substr(OBTER_SE_CONTA_FINANC_ESTAB(coalesce(c.cd_conta_financ, cd_conta_financ_cre_w), cd_estabelecimento_p,ie_restringe_estab_w),1,1) ie_conta_financ_estab,
		OBTER_VENC_TITULO(null, b.nr_titulo) dt_referencia
	FROM titulo_receber b
LEFT OUTER JOIN titulo_receber_classif c ON (b.nr_titulo = c.nr_titulo)
WHERE ((ie_restringe_estab_w = 'N') or (ie_restringe_estab_w = 'E' and b.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_w = 'S' and b.cd_estabelecimento = cd_estabelecimento_p or b.cd_estab_financeiro = cd_estabelecimento_p)) and b.ie_situacao		= '1' and b.vl_saldo_titulo	> 0 and OBTER_VENC_TITULO(null, b.nr_titulo) between dt_inicial_w and dt_final_w ) alias36
where (ie_conta_financ_estab = 'S' or ie_restringe_estab_w = 'N')
and	cd_empresa_estab	= cd_empresa_w
group by dt_referencia,
	cd_conta_financ,
	cd_centro_custo,
	ie_origem_titulo,
	nr_seq_classe,
	ie_tipo_titulo,
	nr_titulo

union

select	'RC' ie_integracao,
	'3V' ie_identificacao,
	coalesce(coalesce(dt_recebimento, dt_liberacao), dt_fluxo_caixa) dt_referencia,
	0,
	sum(obter_saldo_receb_convenio(nr_sequencia, clock_timestamp()) * -1) saldo,
	cd_convenio,
	0 cd_centro_custo,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec,
	null nr_titulo_pagar,
	null nr_titulo_receber,
	nr_sequencia nr_seq_conv_receb
from 	Convenio_receb
where (cd_estabelecimento = cd_estabelecimento_p or ie_restringe_estab_w = 'N')
and	obter_empresa_estab(cd_estabelecimento)	= cd_empresa_w
and	obter_saldo_receb_convenio(nr_sequencia, clock_timestamp()) > 0
and	coalesce(ie_integrar_cb_fluxo,'S') = 'S'
and	ie_status <> 'T'
group by coalesce(coalesce(dt_recebimento, dt_liberacao), dt_fluxo_caixa),
	cd_convenio,
	nr_sequencia;


BEGIN

select	trunc(max(a.dt_mesano_referencia),'month') dt_inico,
	fim_mes(max(a.dt_mesano_referencia)) dt_final,
	max(a.ie_restringe_estab)
into STRICT	dt_inicial_w,
	dt_final_w,
	ie_restringe_estab_w
from	fluxo_caixa_lote a
where	a.nr_sequencia	= nr_seq_lote_fluxo_p;

select	max(a.cd_empresa)
into STRICT	cd_empresa_w
from	estabelecimento a
where	a.cd_estabelecimento	= cd_estabelecimento_p;

select	cd_conta_financ_cpa,
	cd_conta_financ_cre
into STRICT 	cd_conta_financ_cpa_w,
 	cd_conta_financ_cre_w
from	parametro_fluxo_caixa
where	cd_estabelecimento	= cd_estabelecimento_p;

delete	from fluxo_caixa_item
where	nr_seq_lote_fluxo	= nr_seq_lote_fluxo_p;

delete	from fluxo_caixa_data
where	nr_seq_lote_fluxo	= nr_seq_lote_fluxo_p;

open c010;
loop
fetch c010 into
	ie_integracao_w,
	ie_identificacao_w,
	dt_referencia_w,
	cd_conta_financ_w,
	vl_fluxo_w,
	cd_convenio_w,
	cd_centro_custo_w,
	ie_origem_titulo_w,
	nr_seq_classe_tit_rec_w,
	nr_seq_classe_tit_pag_w,
	ie_tipo_titulo_cp_w,
	ie_tipo_titulo_cr_w,
	nr_titulo_pagar_w,
	nr_titulo_receber_w,
	nr_seq_conv_receb_w;
EXIT WHEN NOT FOUND; /* apply on c010 */

	if (cd_conta_financ_w = 0) then
		cd_conta_financ_w := obter_conta_financeira('E', cd_estabelecimento_p, 0, 0, 0, 0, cd_convenio_w, null, cd_centro_custo_w, cd_conta_financ_w, null, null, null, null, null, null, null, null, ie_origem_titulo_w, null, nr_seq_classe_tit_rec_w, nr_seq_classe_tit_pag_w, null, null, null, null, ie_tipo_titulo_cp_w, ie_tipo_titulo_cr_w, null);
		if (coalesce(cd_conta_financ_w,0) = 0) then
			cd_conta_financ_w	:= cd_conta_financ_cre_w;
		end if;
	end if;
	
	CALL gerar_fluxo_caixa_lote(	dt_referencia_w,
				cd_conta_financ_w,
				'',
				ie_identificacao_w,
				ie_integracao_w,
				nm_usuario_p,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				nr_seq_conv_receb_w,
				nr_seq_lote_fluxo_p,
				null,
				null,
				null,
				null,
				null,
				nr_titulo_pagar_w,
				nr_titulo_receber_w,
				vl_fluxo_w);
				
end loop;
close c010;

CALL CALCULAR_FLUXO_CAIXA_LOTE(	nr_seq_lote_fluxo_p,
				cd_estabelecimento_p,
				0,  /*tem que ver da onde vem o valor padrao */
				dt_inicial_w,
				dt_final_w,
				'V',
				nm_usuario_p,
				cd_empresa_w,
				ie_restringe_estab_w,
				'N');

CALL GERAR_FLUXO_CAIXA_LOTE_DATA(	nr_seq_lote_fluxo_p,
				nm_usuario_p,
				cd_estabelecimento_p);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_fluxo_caixa_lot_vencido ( nr_seq_lote_fluxo_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

