-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_verifica_regra_lib_web ( nr_seq_segurado_p bigint, nr_seq_usuario_web_p bigint, ie_tipo_liberacao_p text, ie_tipo_guia_p text, ie_funcao_liberada_p bigint, nm_usuario_p text, ie_urgencia_p text, ds_retorno_p INOUT text, nr_seq_regra_p INOUT bigint) AS $body$
DECLARE

			
/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade  Informar se existe regra para liberacao de biometria e cartao se retornar 'S' e porque tem regra de liberacao se retornar 'N' e porque nao possui regra de liberacao
----------------------------------------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ x ] Tasy (Delphi/Java) [ x ] Portal [  ] Relatorios [ ] Outros
 ----------------------------------------------------------------------------------------------------------------------------------------------------

Pontos de atencao  
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/			
nr_sequencia_w		bigint 	:= 0;
nr_contrato_w		varchar(255);
dt_inicio_vigencia_w	varchar(255);
nr_seq_congenere_w	bigint;
nr_seq_intercambio_w	bigint;
nr_seq_seg_carteira_w	bigint;
dt_emissao_w		timestamp;
ie_data_valida		varchar(1) 	:= 'N';
ds_retorno_w		varchar(5) 	:= 'N';
ie_preco_w		varchar(2);
nr_seq_plano_w		bigint;
ie_tipo_segurado_w	pls_segurado.ie_tipo_segurado%type;	

BEGIN

select 	pls_obter_dados_segurado(nr_seq_segurado_p, 'NC'),
	pls_obter_dados_segurado(nr_seq_segurado_p, 'IV')
into STRICT 	nr_contrato_w,
	dt_inicio_vigencia_w
;

begin
	/*select	max(nr_sequencia)
	into	nr_seq_seg_carteira_w
	from	pls_segurado_carteira
	where	nr_seq_segurado = nr_seq_segurado_p;

	select	max(b.dt_envio)
	into	dt_emissao_w
	from	pls_lote_carteira	b,
		pls_carteira_emissao	a
	where	a.nr_seq_lote		= b.nr_sequencia
	and	a.nr_seq_seg_carteira	= nr_seq_seg_carteira_w;
	
	if	(dt_emissao_w is not null) then
		dt_emissao_w := ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_emissao_w);
	end if;*/
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_seg_carteira_w
	from	pls_segurado_carteira
	where	nr_seq_segurado = nr_seq_segurado_p;
	
	select	dt_solicitacao
	into STRICT	dt_emissao_w
	from	pls_segurado_carteira
	where	nr_sequencia = nr_seq_seg_carteira_w
	and	ie_situacao  = 'P'
	and	(nr_seq_regra_via IS NOT NULL AND nr_seq_regra_via::text <> '');
	
	if (dt_emissao_w IS NOT NULL AND dt_emissao_w::text <> '') then
		ie_data_valida := 'S';
		dt_emissao_w := ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_emissao_w);
	end if;	
exception
when others then
	dt_emissao_w := null;
end;


begin
	select	nr_seq_congenere,
		nr_seq_intercambio,
		nr_seq_plano,
		ie_tipo_segurado
	into STRICT	nr_seq_congenere_w,
		nr_seq_intercambio_w,
		nr_seq_plano_w,
		ie_tipo_segurado_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_p;
exception
when others then
	nr_seq_congenere_w	:= 0;
	nr_seq_intercambio_w	:= 0;
	nr_seq_plano_w		:= null;
end;

begin
	select	ie_preco
	into STRICT	ie_preco_w
	from	pls_plano
	where	nr_sequencia	= nr_seq_plano_w;
exception
when others then
	ie_preco_w	:= null;
end;

if (ie_funcao_liberada_p IS NOT NULL AND ie_funcao_liberada_p::text <> '') then
	select 	max(nr_sequencia)
	into STRICT	nr_sequencia_w
	from	pls_regra_lib_req_web
	where 	ie_situacao					= 'A'
	and	((ie_consulta_urgencia 				= ie_urgencia_p) or (ie_consulta_urgencia = 'R'))
	and	ie_tipo_liberacao				= ie_tipo_liberacao_p
	and	((coalesce(nr_seq_segurado::text, '') = '')	or (nr_seq_segurado		= nr_seq_segurado_p))
	and	((coalesce(nr_seq_contrato::text, '') = '')	or (nr_seq_contrato		= nr_contrato_w))
	and	((coalesce(nr_seq_usuario_web::text, '') = '')	or (nr_seq_usuario_web		= nr_seq_usuario_web_p))
	and	((coalesce(ie_tipo_guia::text, '') = '') 	or (ie_tipo_guia 		= ie_tipo_guia_p))
	and	((coalesce(ie_funcao_liberada::text, '') = '') 	or (ie_funcao_liberada		= ie_funcao_liberada_p))
	and	((coalesce(nr_seq_congenere::text, '') = '')	or (nr_seq_congenere		= nr_seq_congenere_w))
	and	((coalesce(dt_ant_emissao_carteira::text, '') = '')	or (dt_ant_emissao_carteira	>= to_date(dt_inicio_vigencia_w)))
	and	((coalesce(nr_seq_contrato_int::text, '') = '')	or (nr_seq_contrato_int		= nr_seq_intercambio_w))
	and	((coalesce(ie_preco::text, '') = '')	or (ie_preco			= ie_preco_w))
	and	((coalesce(qt_dias_emissao::text, '') = '')	or ((ie_data_valida = 'S') and (coalesce(dt_emissao_w,clock_timestamp()) + qt_dias_emissao >= clock_timestamp())))
	and	clock_timestamp() between dt_inicio_vigencia 		and coalesce(dt_fim_vigencia,clock_timestamp())
	and	((coalesce(ie_tipo_segurado::text, '') = '') or (ie_tipo_segurado = ie_tipo_segurado_w));
	
	if (coalesce(nr_sequencia_w,0) > 0)then
		nr_seq_regra_p := nr_sequencia_w;
		ds_retorno_w :=	'S';
	end if;
else	
	ds_retorno_w :=	'S';
end if;

ds_retorno_p := ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_verifica_regra_lib_web ( nr_seq_segurado_p bigint, nr_seq_usuario_web_p bigint, ie_tipo_liberacao_p text, ie_tipo_guia_p text, ie_funcao_liberada_p bigint, nm_usuario_p text, ie_urgencia_p text, ds_retorno_p INOUT text, nr_seq_regra_p INOUT bigint) FROM PUBLIC;

