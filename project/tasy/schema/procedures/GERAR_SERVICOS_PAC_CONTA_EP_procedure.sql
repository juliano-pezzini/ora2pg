-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_servicos_pac_conta_ep () AS $body$
DECLARE

 
					 
cd_estabelecimento_w	smallint;
dt_entrada_w		timestamp;
ie_tipo_convenio_w	smallint;
ie_tipo_atendimento_w	smallint;
nr_seq_classificacao_w	bigint;
ie_clinica_w		integer;
nr_seq_atepacu_atual_w	bigint;
ie_classificacao_w	varchar(1);

dt_entrada_unidade_w	timestamp;
cd_setor_atendimento_w	bigint;

cd_convenio_w		integer;
cd_categoria_w		varchar(10);
nr_doc_convenio_w	varchar(30);
ie_tipo_guia_w		varchar(30);
cd_senha_w		varchar(30);
cd_plano_w		varchar(10);
cd_tipo_acomodacao_w	smallint;

cd_cgc_prestador_w	varchar(14);

nr_seq_proc_interno_w	bigint;

cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;

ie_medico_executor_w	varchar(2);
cd_medico_executor_w	varchar(10);
cd_pessoa_fisica_w	varchar(10);
cd_profissional_w	varchar(10);
ie_funcao_medico_w	varchar(10)	:= 0;
cd_especialidade_medica_w	integer		:= 0;

dt_parametro_w		timestamp;

nr_seq_w		bigint;

nr_atendimento_w	atendimento_paciente.nr_atendimento%type;
nr_seq_servico_w	atend_pac_servico_conta.nr_seq_servico%type;
nr_interno_conta_w	conta_paciente.nr_interno_conta%type;
nr_seq_proc_w		regra_servicos_paciente.nr_seq_proc_interno%type;
nm_usuario_w		atendimento_paciente.nm_usuario%type;

C01 CURSOR FOR 
	SELECT	c.nr_atendimento, 
		c.nm_usuario 
	from	episodio_paciente a, 
		pessoa_fisica b, 
		atendimento_paciente c 
	where	a.cd_pessoa_fisica = b.cd_pessoa_fisica 
	and	b.cd_pessoa_fisica = c.cd_pessoa_fisica 
	and	coalesce(a.ie_status,'T') != 'T' 
	group by c.nr_atendimento, 
		c.nm_usuario;
	
C02 CURSOR FOR 
	SELECT	a.nr_seq_servico 
	from	atend_pac_servico_conta a 
	where	a.nr_atendimento = nr_atendimento_w 
	and	clock_timestamp() between coalesce(a.dt_inicio,clock_timestamp()) and coalesce(fim_dia(dt_fim),clock_timestamp());
	
C03 CURSOR FOR 
	SELECT	a.nr_seq_interno 
	from 	setor_atendimento c, 
		atend_paciente_unidade a 
	where	a.nr_atendimento 		= nr_atendimento_w 
	and	c.cd_setor_atendimento		= a.cd_setor_atendimento 
	and 	a.dt_entrada_unidade 		<= clock_timestamp() 
	and 	c.cd_classif_setor in (1,3,4,8) 
	order by coalesce(a.dt_saida_unidade, a.dt_entrada_unidade + 9999) desc;	
	 

BEGIN 
 
open C01;
loop 
fetch C01 into	 
	nr_atendimento_w, 
	nm_usuario_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	nr_seq_atepacu_atual_w	:= 0;
	dt_parametro_w := clock_timestamp();
 
	open C03;
	loop 
	fetch C03 into	 
		nr_seq_atepacu_atual_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		nr_seq_atepacu_atual_w := nr_seq_atepacu_atual_w;
		end;
	end loop;
	close C03;
		 
	select 	max(cd_setor_atendimento), 
		max(dt_entrada_unidade) 
	into STRICT	cd_setor_atendimento_w, 
		dt_entrada_unidade_w 
	from 	atend_paciente_unidade 
	where	nr_seq_interno = nr_seq_atepacu_atual_w;
 
	SELECT * FROM obter_convenio_execucao(nr_atendimento_w, dt_entrada_unidade_w, cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w) INTO STRICT cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w;
 
	select	max(cd_tipo_acomodacao), 
		substr(max(cd_plano_convenio),1,10) 
	into STRICT	cd_tipo_acomodacao_w, 
		cd_plano_w 
	from	atend_categoria_convenio 
	where	nr_atendimento = nr_atendimento_w;
	 
	SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, null, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_prestador_w, cd_medico_executor_w, cd_profissional_w, cd_pessoa_fisica_w, trunc(dt_parametro_w,'hh'), nr_seq_classificacao_w, 'N', null, null) INTO STRICT ie_medico_executor_w, cd_cgc_prestador_w, cd_medico_executor_w, cd_profissional_w;
 
 
	if (coalesce(ie_medico_executor_w,'Z') <> 'F') then 
		cd_medico_executor_w:= '';
	end if;
 
	SELECT * FROM obter_proced_espec_medica(cd_estabelecimento_w, cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, null, null, null, ie_clinica_w, cd_setor_atendimento_w, cd_especialidade_medica_w, ie_funcao_medico_w, cd_medico_executor_w, nr_seq_proc_interno_w, ie_tipo_atendimento_w) INTO STRICT cd_especialidade_medica_w, ie_funcao_medico_w;
				 
 
	if (coalesce(cd_cgc_prestador_w::text, '') = '') then 
		select	max(a.cd_cgc) 
		into STRICT	cd_cgc_prestador_w 
		from 	estabelecimento a, 
			atendimento_paciente b 
		where	a.cd_estabelecimento 	= b.cd_estabelecimento 
		and	b.nr_atendimento 	= nr_atendimento_w;
	end if;
 
	select	max(nr_interno_conta) 
	into STRICT	nr_interno_conta_w 
	from	conta_paciente 
	where	nr_atendimento = nr_atendimento_w 
	and	ie_status_acerto = 1;
		 
	open C02;
	loop 
	fetch C02 into	 
		nr_seq_servico_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		 
		select	nr_seq_proc_interno 
		into STRICT	nr_seq_proc_w 
		from	regra_servicos_paciente a, 
			atend_pac_servico_conta b 
		where	b.nr_seq_servico = a.nr_sequencia 
		and	b.nr_atendimento = nr_atendimento_w 
		and	b.nr_seq_servico = nr_seq_servico_w;
		 
		begin 
		 
		select 	nextval('procedimento_paciente_seq') 
		into STRICT	nr_seq_w 
		;
		 
		if (nr_seq_proc_w IS NOT NULL AND nr_seq_proc_w::text <> '') then 
			SELECT * FROM Obter_Proc_Tab_Interno_conv(nr_seq_proc_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), cd_tipo_acomodacao_w, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
		end if;
 
		insert into procedimento_paciente(	cd_procedimento, 
							cd_setor_atendimento, 
							dt_atualizacao, 
							dt_entrada_unidade, 
							dt_procedimento, 
							ie_origem_proced, 
							nm_usuario, 
							nr_atendimento, 
							nr_seq_atepacu, 
							nr_sequencia, 
							nr_interno_conta, 
							qt_procedimento) 
						values (	cd_procedimento_w, 
							cd_setor_atendimento_w, 
							clock_timestamp(), 
							dt_entrada_unidade_w, 
							clock_timestamp(), 
							ie_origem_proced_w, 
							nm_usuario_w, 
							nr_atendimento_w, 
							nr_seq_atepacu_atual_w, 
							nr_seq_w, 
							nr_interno_conta_w, 
							1);
							 
		if (ie_classificacao_w in ('1','8')) then 		 
			CALL atualiza_preco_procedimento(nr_seq_w, cd_convenio_w, nm_usuario_w);
		else 
			CALL atualiza_preco_servico(nr_seq_w,nm_usuario_w);
		end if;
		 
		end;
		 
		end;
	 
	end loop;
	close C02;
	 
	end;
	 
end loop;
close C01;
	 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_servicos_pac_conta_ep () FROM PUBLIC;

