-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_alter_horario_item_comp (nr_atendimento_p bigint, ie_tipo_item_p text, nr_prescricao_p bigint, nr_seq_item_p bigint, nr_agrupamento_p bigint, dt_horario_p timestamp, ie_alteracao_p bigint, dt_alteracao_p timestamp, ie_conta_paciente_p text, nr_seq_motivo_susp_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_material_w		integer;
nr_seq_item_w		integer;
nr_seq_horario_w		bigint;
nr_seq_alteracao_w	bigint;
nr_seq_map_w		bigint;
nr_seq_lote_w		bigint;
ie_lancar_conta_w	boolean := false;
nr_seq_processo_w	prescr_mat_hor.nr_seq_processo%type;
qt_conta_w			material_atend_paciente.qt_material%type;
dt_conta_w			timestamp;

c01 CURSOR FOR
SELECT	b.cd_material,
	b.nr_sequencia,
	a.nr_sequencia,
	a.nr_seq_lote
from	prescr_mat_hor a,
	prescr_material b
where	a.nr_prescricao		= b.nr_prescricao
and	a.nr_seq_material	= b.nr_sequencia
and	a.dt_horario		= dt_horario_p
and	b.nr_prescricao		= nr_prescricao_p
and	b.nr_sequencia		> nr_seq_item_p
and	b.nr_agrupamento	= nr_agrupamento_p
and	b.ie_agrupador		= 1
and	coalesce(b.ie_suspenso,'N')	<> 'S'
and	coalesce(a.ie_situacao,'A')	= 'A'
and	Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S'
--and	nvl(a.ie_adep,'S')	= 'S'
order by
	b.nr_sequencia,
	a.nr_sequencia;


BEGIN
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (ie_tipo_item_p IS NOT NULL AND ie_tipo_item_p::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_item_p IS NOT NULL AND nr_seq_item_p::text <> '') and (nr_agrupamento_p IS NOT NULL AND nr_agrupamento_p::text <> '') and (dt_horario_p IS NOT NULL AND dt_horario_p::text <> '') and (ie_alteracao_p IS NOT NULL AND ie_alteracao_p::text <> '') and (dt_alteracao_p IS NOT NULL AND dt_alteracao_p::text <> '') and (ie_conta_paciente_p IS NOT NULL AND ie_conta_paciente_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then

	if (ie_tipo_item_p = 'IC') then

		open c01;
		loop
		fetch c01 into	cd_material_w,
				nr_seq_item_w,
				nr_seq_horario_w,
				nr_seq_lote_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin

			if (ie_alteracao_p = 3) then /* administracao do horario */
				update	prescr_mat_hor
				set	dt_fim_horario		= dt_alteracao_p,
					nm_usuario_adm		= nm_usuario_p
				where	nr_sequencia		= nr_seq_horario_w
				and	coalesce(dt_fim_horario::text, '') = ''
				and	coalesce(dt_suspensao::text, '') = '';

			elsif (ie_alteracao_p = 4) then /* reversao da realizacao do horario */
				update	prescr_mat_hor
				set	dt_fim_horario		 = NULL,
					nm_usuario_adm		 = NULL
				where	nr_sequencia		= nr_seq_horario_w
				and	(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '');
				
				select 	max(dt_alteracao)
				into STRICT	dt_conta_w
				from	prescr_mat_alteracao
				where	nr_seq_horario = nr_seq_horario_w
				and		coalesce(ie_evento_valido,'S') = 'S'
				and		ie_alteracao = 3;

			elsif (ie_alteracao_p = 5) then /* suspensao do horario */
				update	prescr_mat_hor
				set	dt_suspensao		= dt_alteracao_p,
					nm_usuario_susp		= nm_usuario_p,
					nr_seq_motivo_susp	= nr_seq_motivo_susp_p
				where	nr_sequencia		= nr_seq_horario_w
				and	coalesce(dt_suspensao::text, '') = ''
				and	coalesce(dt_fim_horario::text, '') = '';

			elsif (ie_alteracao_p = 6) then /* reversao da suspensao do horario */
				update	prescr_mat_hor
				set	dt_suspensao		 = NULL,
					nm_usuario_susp		 = NULL
				where	nr_sequencia		= nr_seq_horario_w
				and	(dt_suspensao IS NOT NULL AND dt_suspensao::text <> '');

			end if;

			select	nextval('prescr_mat_alteracao_seq')
			into STRICT	nr_seq_alteracao_w
			;

			insert into prescr_mat_alteracao(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_prescricao,
				nr_seq_prescricao,
				nr_seq_horario,
				dt_alteracao,
				cd_pessoa_fisica,
				ie_alteracao,
				ds_justificativa,
				ie_tipo_item,
				dt_horario,
				nr_atendimento,
				cd_item,
				qt_dose_adm,
				cd_um_dose_adm)
			values (
				nr_seq_alteracao_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_prescricao_p,
				nr_seq_item_w,
				nr_seq_horario_w,
				dt_alteracao_p,
				obter_dados_usuario_opcao(nm_usuario_p,'C'),
				ie_alteracao_p,
				null,
				ie_tipo_item_p,
				dt_horario_p,
				nr_atendimento_p,
				to_char(cd_material_w),
				null,
				null);
				
			--Verificar se o item ja foi lancado na conta em outro momento
			begin
				qt_conta_w	:= 0;
				
				select	coalesce(max(nr_seq_processo),0)
				into STRICT	nr_seq_processo_w
				from	prescr_mat_hor
				where	nr_sequencia = nr_seq_horario_w
				and	nr_seq_material = nr_seq_item_w
				and	nr_prescricao = nr_prescricao_p;

				if (nr_seq_processo_w > 0)	 then
				
					select 	sum(qt_material)
					into STRICT	qt_conta_w
					from	material_atend_paciente
					where	nr_atendimento = nr_atendimento_p
					and	nr_sequencia_prescricao = nr_seq_item_w
					and	nr_prescricao = nr_prescricao_p
					and	((nr_seq_mat_hor = nr_seq_horario_w) or (nr_seq_processo = nr_seq_processo_w));
			
				end if;
				
				ie_lancar_conta_w	:= coalesce(qt_conta_w,0) = 0;
				
			exception when others then
				ie_lancar_conta_w	:= true;
			end;				

			if (ie_conta_paciente_p = 'S') then

				if (ie_alteracao_p = 3) and (ie_lancar_conta_w) then
					nr_seq_map_w := gerar_estornar_adep_map(null, nr_seq_horario_w, null, 'G', dt_alteracao_p, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
				elsif (ie_alteracao_p = 4) then
					nr_seq_map_w := gerar_estornar_adep_map(null, nr_seq_horario_w, null, 'E', coalesce(dt_conta_w,dt_alteracao_p), nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
				end if;

			elsif (ie_conta_paciente_p = 'L') and (obter_se_lote_hor_conta_pac(nr_seq_horario_w) = 'S') then

				if (ie_alteracao_p = 3) and (ie_lancar_conta_w) then
					nr_seq_map_w := gerar_estornar_adep_map(null, nr_seq_horario_w, null, 'G', dt_alteracao_p, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
				elsif (ie_alteracao_p = 4) then
					nr_seq_map_w := gerar_estornar_adep_map(null, nr_seq_horario_w, null, 'E', coalesce(dt_conta_w,dt_alteracao_p), nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
				end if;
			elsif (ie_conta_paciente_p = 'T') and (coalesce(nr_seq_lote_w::text, '') = '') then

				if (ie_alteracao_p = 3) and (ie_lancar_conta_w) then
					nr_seq_map_w := gerar_estornar_adep_map(null, nr_seq_horario_w, null, 'G', dt_alteracao_p, nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
				elsif (ie_alteracao_p = 4) then
					nr_seq_map_w := gerar_estornar_adep_map(null, nr_seq_horario_w, null, 'E', coalesce(dt_conta_w,dt_alteracao_p), nm_usuario_p, nr_seq_map_w, 'GAP', null, null);
				end if;

			end if;

			end;
		end loop;
		close c01;

	end if;

end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_alter_horario_item_comp (nr_atendimento_p bigint, ie_tipo_item_p text, nr_prescricao_p bigint, nr_seq_item_p bigint, nr_agrupamento_p bigint, dt_horario_p timestamp, ie_alteracao_p bigint, dt_alteracao_p timestamp, ie_conta_paciente_p text, nr_seq_motivo_susp_p bigint, nm_usuario_p text) FROM PUBLIC;

