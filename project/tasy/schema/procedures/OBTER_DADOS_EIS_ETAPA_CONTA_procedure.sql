-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_dados_eis_etapa_conta ( nr_interno_conta_p bigint, nr_seq_etapa_p INOUT bigint, ds_observacao_p INOUT text, ie_muda_status_conta_p INOUT text, cd_setor_atendimento_p INOUT bigint, cd_pessoa_fisica_p INOUT text, ds_etapa_p INOUT text, nr_seq_motivo_dev_p INOUT bigint, dt_ultima_etapa_p INOUT timestamp, nm_ultimo_usuario_p INOUT text, nm_ultimo_usu_receb_p INOUT text, nr_seq_classif_p INOUT bigint) AS $body$
DECLARE


ds_etapa_w			varchar(80)	:= null;
nr_seq_etapa_w			bigint	:= null;
ds_retorno_w			varchar(255)	:= null;
ds_observacao_w			varchar(2000);
ie_muda_status_conta_w		varchar(01);
cd_setor_atendimento_w		integer;
cd_pessoa_fisica_w		varchar(10);
nr_seq_motivo_dev_w		varchar(80);
dt_etapa_w			timestamp;
nm_usuario_w			varchar(15);
nm_usuario_recebimento_w		varchar(15);
nr_seq_classif_w		fatur_etapa.nr_seq_classif%type;

c01 CURSOR FOR
	SELECT	a.nr_seq_etapa,
		b.ds_etapa,
		substr(a.ds_observacao,1,80),
		coalesce(ie_muda_status_conta, 'S'),
		a.cd_setor_atendimento,
		a.cd_pessoa_fisica,
		a.nr_seq_motivo_dev,
		a.dt_etapa,
		a.nm_usuario,
		a.nm_usuario_recebimento,
		b.nr_seq_classif
	from	fatur_etapa b,
		conta_paciente_etapa a
	where	a.nr_seq_etapa		= b.nr_sequencia
	and	a.nr_interno_conta		= nr_interno_conta_p
	and	coalesce(b.ie_situacao,'A')	= 'A'
	and	a.dt_etapa		=	(SELECT	/*+ index(x conpaet_conpaci_fk_i) */							max(x.dt_etapa)
   						 from	conta_paciente_etapa x
						 where   x.nr_interno_conta = nr_interno_conta_p)
	order by a.dt_etapa,
		a.dt_fim_etapa; --lhalves OS 867686 em 21/05/2015 -0 incluido o orde by também pelo fim da etapa, para que caso exista 2 etapas com mesma data, considere a sem data fim por último, pois esta será a etapa atual da conta
BEGIN

open	c01;
loop
fetch	c01 into
	nr_seq_etapa_w,
	ds_etapa_w,
	ds_observacao_w,
	ie_muda_status_conta_w,
	cd_setor_atendimento_w,
	cd_pessoa_fisica_w,
	nr_seq_motivo_dev_w,
	dt_etapa_w,
	nm_usuario_w,
	nm_usuario_recebimento_w,
	nr_seq_classif_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;

nr_seq_etapa_p		:= nr_seq_etapa_w;
ds_observacao_p		:= ds_observacao_w;
ie_muda_status_conta_p	:= ie_muda_status_conta_w;
cd_setor_atendimento_p	:= cd_setor_atendimento_w;
cd_pessoa_fisica_p		:= cd_pessoa_fisica_w;
ds_etapa_p		:= ds_etapa_w;
nr_seq_motivo_dev_p	:= nr_seq_motivo_dev_w;
dt_ultima_etapa_p		:= dt_etapa_w;
nm_ultimo_usuario_p	:= nm_usuario_w;
nm_ultimo_usu_receb_p	:= nm_usuario_recebimento_w;
nr_seq_classif_p	:= nr_seq_classif_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_dados_eis_etapa_conta ( nr_interno_conta_p bigint, nr_seq_etapa_p INOUT bigint, ds_observacao_p INOUT text, ie_muda_status_conta_p INOUT text, cd_setor_atendimento_p INOUT bigint, cd_pessoa_fisica_p INOUT text, ds_etapa_p INOUT text, nr_seq_motivo_dev_p INOUT bigint, dt_ultima_etapa_p INOUT timestamp, nm_ultimo_usuario_p INOUT text, nm_ultimo_usu_receb_p INOUT text, nr_seq_classif_p INOUT bigint) FROM PUBLIC;

