-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_prescr_cirurgia ( nr_prescricao_p bigint, cd_material_p bigint, qt_material_p bigint, qt_saldo_p bigint, nr_seq_lote_fornec_p bigint, cd_material_lido_p bigint, cd_local_estoque_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_material_w			double precision;
qt_material_ww			double precision;
qt_material_dec_w		double precision;
qt_material_dec_tot_w		double precision;
qt_material_consist_w		double precision;
nr_sequencia_w			prescr_material.nr_sequencia%type;
nr_sequencia_ww			prescr_material.nr_sequencia%type;
qt_material_consist_aux_w	double precision;
ie_baixa_estoque_cir_w		varchar(1):=null;
cd_tipo_baixa_w			material_estoque_pepo.cd_tipo_baixa%type;
nr_cirurgia_w			cirurgia.nr_cirurgia%type;
ie_gravafornecedor_w		varchar(1);
ie_gravaconsignado_w		varchar(1):= 'N';
ie_grava_local_estoque_w	varchar(1);
ie_consignado_w			varchar(1);
cd_cgc_fornec_w			prescr_material.cd_fornec_consignado%type;
ie_tipo_saldo_w			varchar(3);
cd_material_w			prescr_material.cd_material%type;
cd_material_lido_w		prescr_material.cd_material%type := null;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type := wheb_usuario_pck.get_cd_estabelecimento;
nr_seq_lote_fornec_w            material_lote_fornec.nr_sequencia%type;
ie_grava_nf_entrada_w	        varchar(15);

c01 CURSOR FOR
	SELECT	nr_sequencia,
		qt_material
	from	prescr_material
	where	nr_prescricao	=	nr_prescricao_p
	and	cd_material	=	cd_material_p
        and     coalesce(nr_seq_lote_fornec,coalesce(nr_seq_lote_fornec_w,0)) = coalesce(nr_seq_lote_fornec_w,0)
	and	ie_status_cirurgia not in ('CB','AD')
	and	cd_motivo_baixa = 0
	and	coalesce(dt_baixa::text, '') = ''
	and	qt_material > 0;
					


BEGIN

nr_seq_lote_fornec_w := nr_seq_lote_fornec_p;
if (nr_seq_lote_fornec_w = 0) then
        nr_seq_lote_fornec_w := null;
end if;

ie_gravafornecedor_w := obter_param_usuario(900, 182, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gravafornecedor_w);
ie_grava_local_estoque_w := obter_param_usuario(900, 371, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_grava_local_estoque_w);
ie_grava_nf_entrada_w := obter_param_usuario(900, 544, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_grava_nf_entrada_w);

if (coalesce(cd_material_lido_p,0) > 0) then
	cd_material_lido_w := cd_material_lido_p;
end if;	

if (ie_gravafornecedor_w = 'S') then
	select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_gravaconsignado_w
	from 	prescr_material
	where	cd_material = cd_material_p;
end if;	

if (ie_gravafornecedor_w = 'S') then
	begin
	ie_tipo_saldo_w := null;
	cd_material_w	:= coalesce(cd_material_lido_w,cd_material_p);
	
	select	coalesce(max(ie_consignado),'0')
	into STRICT	ie_consignado_w
	from	material
	where	cd_material = cd_material_w;
		
	if (ie_consignado_w = 2) then
		SELECT * FROM obter_fornec_consig_ambos(
			cd_estabelecimento_w, cd_material_w, nr_seq_lote_fornec_w, cd_local_estoque_p, ie_tipo_saldo_w, cd_cgc_fornec_w) INTO STRICT ie_tipo_saldo_w, cd_cgc_fornec_w;
	end if;
	
	if (ie_consignado_w = 1) or (ie_tipo_saldo_w = 'E') then
		cd_cgc_fornec_w := obter_dados_lote_fornec(nr_seq_lote_fornec_w,'CF');
	end if;		
	end;
end if;

if (nr_prescricao_p > 0) then
	begin
	select	coalesce(max(nr_cirurgia),0)
	into STRICT	nr_cirurgia_w
	from	cirurgia
	where	nr_prescricao = nr_prescricao_p;
	
	select	coalesce(obter_se_mat_baixa_estoque_cir(cd_material_p,cd_local_estoque_p,nr_cirurgia_w,0,0,0),0)
	into STRICT	cd_tipo_baixa_w
	;

	if (cd_tipo_baixa_w > 0) then
		ie_baixa_estoque_cir_w := 'N';
	end if;	
	end;
end if;


qt_material_consist_w	:= qt_material_p - qt_saldo_p;

select	sum(qt_material)
into STRICT	qt_material_w
from	prescr_material
where	nr_prescricao	=	nr_prescricao_p
and	cd_material	=	cd_material_p
and     coalesce(nr_seq_lote_fornec,coalesce(nr_seq_lote_fornec_w,0)) = coalesce(nr_seq_lote_fornec_w,0)
and	ie_status_cirurgia not in ('CB','AD')
and	cd_motivo_baixa = 0
and	coalesce(dt_baixa::text, '') = '';


if (qt_material_w = qt_material_consist_w) and (qt_saldo_p = 0) then

	update	prescr_material
	set	ie_status_cirurgia 		= 'CB',
		nr_seq_lote_fornec 		= nr_seq_lote_fornec_w,
		nm_usuario_consist		= nm_usuario_p,
		dt_atualizacao_consist	= clock_timestamp(),
		cd_material		= coalesce(cd_material_lido_w,cd_material_p),
		ie_baixa_estoque_cir 	= ie_baixa_estoque_cir_w,
		cd_fornec_consignado	= CASE WHEN ie_gravaconsignado_w='N' THEN cd_fornec_consignado  ELSE cd_cgc_fornec_w END ,
		cd_local_estoque  		= CASE WHEN ie_grava_local_estoque_w='S' THEN CASE WHEN cd_local_estoque_p=0 THEN cd_local_estoque  ELSE cd_local_estoque_p END   ELSE cd_local_estoque END ,
		nr_seq_nf_entrada		= CASE WHEN ie_grava_nf_entrada_w='S' THEN Obter_dados_lote_fornec(nr_seq_lote_fornec_w,'SN')  ELSE nr_seq_nf_entrada END
	where	nr_prescricao		= nr_prescricao_p
	and	cd_material		= cd_material_p
        and     coalesce(nr_seq_lote_fornec,coalesce(nr_seq_lote_fornec_w,0)) = coalesce(nr_seq_lote_fornec_w,0)
	and	ie_status_cirurgia not in ('CB','AD')
	and	cd_motivo_baixa = 0
	and	coalesce(dt_baixa::text, '') = ''
	and	qt_material > 0;
	commit;
	
elsif (qt_material_w > qt_material_consist_w) and (qt_material_consist_w > 0) then
	
	qt_material_dec_tot_w 	:= 0;
	qt_material_consist_aux_w	:= qt_material_consist_w; 	
	
        for c01_w in c01 loop
		begin
                nr_sequencia_w  := c01_w.nr_sequencia;
                qt_material_ww  := c01_w.qt_material;

		qt_material_dec_w := 0;
		
		
		if (qt_material_ww < qt_material_consist_w) then
			update	prescr_material
			set	ie_status_cirurgia 		= 'CB',
				nr_seq_lote_fornec 		= nr_seq_lote_fornec_w,
				nm_usuario_consist		= nm_usuario_p,
				dt_atualizacao_consist	= clock_timestamp(),
				cd_material		= coalesce(cd_material_lido_w,cd_material_p),
				ie_baixa_estoque_cir 	= ie_baixa_estoque_cir_w,
				cd_fornec_consignado	= CASE WHEN ie_gravaconsignado_w='N' THEN cd_fornec_consignado  ELSE cd_cgc_fornec_w END ,
				cd_local_estoque  		= CASE WHEN ie_grava_local_estoque_w='S' THEN CASE WHEN cd_local_estoque_p=0 THEN cd_local_estoque  ELSE cd_local_estoque_p END   ELSE cd_local_estoque END ,
				nr_seq_nf_entrada		= CASE WHEN ie_grava_nf_entrada_w='S' THEN Obter_dados_lote_fornec(nr_seq_lote_fornec_w,'SN')  ELSE nr_seq_nf_entrada END
			where	nr_prescricao		= nr_prescricao_p
			and	nr_sequencia		= nr_sequencia_w;
			commit;
			
			qt_material_consist_w	:= qt_material_consist_w - qt_material_ww;
			
			qt_material_dec_tot_w 	:= 0;
			qt_material_consist_aux_w	:= qt_material_consist_w; 	
		
		elsif (qt_material_dec_tot_w < qt_material_consist_w) then
			begin
			if (qt_material_ww >= qt_material_consist_aux_w) then
				qt_material_dec_w := qt_material_consist_aux_w;
			else
				qt_material_dec_w := qt_material_ww;
			end if;
						
			if (qt_material_dec_w > 0) then
				update	prescr_material
				set	qt_material		= qt_material - qt_material_dec_w,
					qt_unitaria		= qt_unitaria - qt_material_dec_w,
					qt_total_dispensar		= qt_total_dispensar - qt_material_dec_w,
					qt_dose			= qt_dose - qt_material_dec_w,
					--nm_usuario_consist	= nm_usuario_p,
					--dt_atualizacao_consist	= sysdate, os 280331, tfferretti
					ie_baixa_estoque_cir 	= ie_baixa_estoque_cir_w,
					cd_fornec_consignado	= CASE WHEN ie_gravaconsignado_w='N' THEN cd_fornec_consignado  ELSE cd_cgc_fornec_w END ,
					cd_local_estoque  		= CASE WHEN ie_grava_local_estoque_w='S' THEN CASE WHEN cd_local_estoque_p=0 THEN cd_local_estoque  ELSE cd_local_estoque_p END   ELSE cd_local_estoque END ,
					nr_seq_nf_entrada		= CASE WHEN ie_grava_nf_entrada_w='S' THEN Obter_dados_lote_fornec(nr_seq_lote_fornec_w,'SN')  ELSE nr_seq_nf_entrada END
				where	nr_prescricao		= nr_prescricao_p
				and	nr_sequencia		= nr_sequencia_w;
				commit;		

				qt_material_dec_tot_w	:= qt_material_dec_tot_w + qt_material_dec_w;					
				qt_material_consist_aux_w	:= qt_material_consist_aux_w - qt_material_dec_w;				
			end if;
			end;
		end if;
		
                exit when(qt_material_consist_aux_w = 0);
		end;
	end loop;
		
	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_sequencia_ww
	from	prescr_material
	where	nr_prescricao	=	nr_prescricao_p;
	
	insert into prescr_material(
		nm_usuario,
		dt_atualizacao,
		nr_prescricao,
		nr_sequencia,
		ie_origem_inf,
		ie_medicacao_paciente,
		ie_utiliza_kit,
		ie_urgencia,
		ie_bomba_infusao,
		ie_suspenso,
		ie_se_necessario,
		hr_prim_horario,
		cd_motivo_baixa,
		nr_ocorrencia,
		nr_agrupamento,
		cd_material,
		cd_unidade_medida,
		ie_via_aplicacao,
		ie_agrupador,
		qt_material,
		qt_unitaria,
		cd_intervalo,
		qt_dose,
		qt_total_dispensar,
		ie_status_cirurgia,
		nr_seq_lote_fornec,
		nm_usuario_consist,
		dt_atualizacao_consist,
		cd_kit_material,
		ie_baixa_estoque_cir,
		cd_fornec_consignado,
		ie_nao_requisitado,
		cd_local_estoque,
		nm_usuario_original,
		nr_seq_nf_entrada,
		nr_seq_kit_estoque)
	SELECT	nm_usuario,
		dt_atualizacao,
		nr_prescricao,
		nr_sequencia_ww,
		ie_origem_inf,
		ie_medicacao_paciente,
		ie_utiliza_kit,
		ie_urgencia,
		ie_bomba_infusao,
		ie_suspenso,
		ie_se_necessario,
		hr_prim_horario,
		cd_motivo_baixa,
		nr_ocorrencia,
		nr_agrupamento,
		coalesce(cd_material_lido_w,cd_material),
		cd_unidade_medida,
		ie_via_aplicacao,
		ie_agrupador,
		qt_material_consist_w,
		qt_material_consist_w,
		cd_intervalo,
		qt_material_consist_w,
		qt_material_consist_w,
		'CB',
		nr_seq_lote_fornec_w,
		nm_usuario_p,
		clock_timestamp(),
		cd_kit_material,
		ie_baixa_estoque_cir_w,
		CASE WHEN ie_gravaconsignado_w='N' THEN null  ELSE cd_cgc_fornec_w END ,
		'N',
		CASE WHEN ie_grava_local_estoque_w='S' THEN CASE WHEN cd_local_estoque_p=0 THEN cd_local_estoque  ELSE cd_local_estoque_p END   ELSE cd_local_estoque END ,
		nm_usuario_original,
		CASE WHEN ie_grava_nf_entrada_w='S' THEN Obter_dados_lote_fornec(nr_seq_lote_fornec_w,'SN')  ELSE nr_seq_nf_entrada END ,
		nr_seq_kit_estoque
	from	prescr_material
	where	nr_prescricao = nr_prescricao_p
	and	nr_sequencia = nr_sequencia_w;
	commit;
	
	delete	from prescr_material
	where	nr_prescricao		= nr_prescricao_p
	and	cd_material		= cd_material_p
        and     coalesce(nr_seq_lote_fornec,coalesce(nr_seq_lote_fornec_w,0)) = coalesce(nr_seq_lote_fornec_w,0)
	and	ie_status_cirurgia not in ('CB','AD')
	and	cd_motivo_baixa = 0
	and	coalesce(dt_baixa::text, '') = ''
	and	qt_material = 0;
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_prescr_cirurgia ( nr_prescricao_p bigint, cd_material_p bigint, qt_material_p bigint, qt_saldo_p bigint, nr_seq_lote_fornec_p bigint, cd_material_lido_p bigint, cd_local_estoque_p bigint, nm_usuario_p text) FROM PUBLIC;

