-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE grava_armazenamento_rack (nm_usuario_p text, nr_seq_armazenamento_prim_p bigint, nr_seq_armazenamento_sec_p bigint, qtd_coluna_p bigint, qtd_linha_p bigint, cd_barras_rack_p text, ds_rack_generico_p text) AS $body$
DECLARE


nr_seq_rack_w	    bigint;
nr_seq_arm_rack_w	bigint;
pos_coluna_w      bigint;
pos_linha_w       bigint;
qt_coluna_w       bigint;
qt_linha_w        bigint;

BEGIN
  if (coalesce(ds_rack_generico_p::text, '') = '') then
    select max(nr_sequencia)
      into STRICT nr_seq_rack_w
      from lab_soro_rack
     where coalesce(ds_etiqueta, nr_etiqueta) = cd_barras_rack_p;
  else
    nr_seq_rack_w := null;
  end if;

  select nextval('lab_soro_armazena_rack_seq')
    into STRICT nr_seq_arm_rack_w
;

  insert into lab_soro_armazena_rack(nr_sequencia,
                                      ds_rack_generico,
                                      nr_seq_rack,
                                      nr_seq_armazenamento_prim,
                                      nr_seq_armazenamento_sec,
                                      dt_atualizacao,
                                      dt_atualizacao_nrec,
                                      nm_usuario,
                                      nm_usuario_nrec)
                              values (nr_seq_arm_rack_w,
                                      ds_rack_generico_p,
                                      nr_seq_rack_w,
                                      nr_seq_armazenamento_prim_p,
                                      nr_seq_armazenamento_sec_p,
                                      clock_timestamp(),
                                      clock_timestamp(),
                                      nm_usuario_p,
                                      nm_usuario_p);

  insert into lab_soro_processo_info(nr_sequencia,
                                      ie_acao,
                                      dt_acao,
                                      nr_seq_armazena_rack,
                                      dt_atualizacao,
                                      nm_usuario)
                              values (nextval('lab_soro_processo_info_seq'),
                                      'AR',
                                      clock_timestamp(),
                                      nr_seq_arm_rack_w,
                                      clock_timestamp(),
                                      nm_usuario_p);

  if (coalesce(ds_rack_generico_p::text, '') = '') then
    select qt_coluna, qt_linha
      into STRICT qt_coluna_w, qt_linha_w
      from lab_soro_rack
     where nr_sequencia = nr_seq_rack_w;
  else
    qt_coluna_w := qtd_coluna_p;
    qt_linha_w  := qtd_linha_p;
  end if;

  pos_linha_w := 1;
  loop
    pos_coluna_w := 1;
    loop
      insert into lab_soro_amostra_rack(nr_sequencia,
                                         ie_status,
                                         nr_pos_coluna,
                                         nr_pos_linha,
                                         nr_seq_armazem_rack,
                                         dt_atualizacao,
                                         dt_atualizacao_nrec,
                                         nm_usuario,
                                         nm_usuario_nrec,
                                         ds_amostra)
                                 values (nextval('lab_soro_amostra_rack_seq'),
                                         'L',
                                         pos_coluna_w,
                                         pos_linha_w,
                                         nr_seq_arm_rack_w,
                                         clock_timestamp(),
                                         clock_timestamp(),
                                         nm_usuario_p,
                                         nm_usuario_p,
                                         ' ');

      commit;
      pos_coluna_w := pos_coluna_w + 1;
      exit when pos_coluna_w > qt_coluna_w;
    end loop;

    pos_linha_w := pos_linha_w + 1;
    exit when pos_linha_w > qt_linha_w;
  end loop;

  commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE grava_armazenamento_rack (nm_usuario_p text, nr_seq_armazenamento_prim_p bigint, nr_seq_armazenamento_sec_p bigint, qtd_coluna_p bigint, qtd_linha_p bigint, cd_barras_rack_p text, ds_rack_generico_p text) FROM PUBLIC;

