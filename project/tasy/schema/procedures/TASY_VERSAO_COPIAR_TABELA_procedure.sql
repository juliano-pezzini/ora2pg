-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tasy_versao_copiar_tabela ( nm_tabela_p text, ds_condicao_p text, nr_ordem_p bigint, ie_paralelism_p boolean default false) AS $body$
DECLARE


ds_virgula_w		varchar(01);
ds_comando_w		varchar(10000);
ds_atributo_w		varchar(2000);
vl_retorno_w		varchar(255);
vl_default_w		varchar(50);
nm_tabela_w          		varchar(50);
nm_atributo_w          	varchar(50);
ie_tipo_atributo_w		varchar(010);
qt_tamanho_w		bigint;
qt_decimais_w		bigint;
qt_reg_w			bigint;
ds_insert_w		varchar(10000);
qt_reg_orig_w		bigint;
qt_reg_final_w		bigint;
qt_retorno_w		bigint;
ds_erro_w		varchar(255);
ie_obrigatorio_w		varchar(1);
c001			integer;
length_semantic     varchar(10);
qt_tam_banco_w		bigint;
ds_select_insert_w  varchar(10000);
c010  			integer;
retorno_w			integer;
nm_fase_w       cloud_upgrade_log.nm_fase_atualizacao%type := 'TASY_VERSAO_COPIAR_TABELA';
nm_paralelism_w     varchar(1000) := '';

ds_comando_cursor_w	varchar(2000) := 	' SELECT	nm_atributo, 	' ||
					'	ie_tipo_atributo, 	' ||
					'	qt_tamanho,	' ||
					'	qt_decimais,	' ||
					'	vl_default,	' ||
					'	ie_obrigatorio	' ||
					' FROM	TASY_VERSAO.tabela_atributo ' ||
					' WHERE		nm_tabela	= :nm_tabela ' ||
					' AND		ie_tipo_atributo 	in (''DATE'',''NUMBER'',''VARCHAR2'') ' ||
					' AND		:qt_reg_orig	> 0 ' ||
					' ORDER BY	nr_sequencia_criacao';


BEGIN

ds_comando_w	:= 'Select count(*) from TASY_VERSAO.'|| nm_tabela_p||' a ' ||ds_condicao_p;	
qt_reg_orig_w := Obter_valor_Dinamico(ds_comando_w, qt_reg_orig_w);

if (qt_reg_orig_w > 0) then

	select case when value = 'AL32UTF8' then 'CHAR' else 'BYTE' end into STRICT length_semantic from nls_database_parameters where parameter='NLS_CHARACTERSET';

	ds_virgula_w			:= '';
	nm_tabela_w			:= UPPER(nm_tabela_p);
	ds_comando_w	:= 'Select count(*) from TASY_VERSAO.'|| nm_tabela_w;

	qt_reg_orig_w := Obter_valor_Dinamico(ds_comando_w, qt_reg_orig_w);

	C010 := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(C010, ds_comando_cursor_w, dbms_sql.Native);
	DBMS_SQL.DEFINE_COLUMN(C010, 1, nm_atributo_w,50);
	DBMS_SQL.DEFINE_COLUMN(C010, 2, ie_tipo_atributo_w,10);
	DBMS_SQL.DEFINE_COLUMN(C010, 3, qt_tamanho_w,10);
	DBMS_SQL.DEFINE_COLUMN(C010, 4, qt_decimais_w,10);
	DBMS_SQL.DEFINE_COLUMN(C010, 5, vl_default_w,50);
	DBMS_SQL.DEFINE_COLUMN(C010, 6, ie_obrigatorio_w,1);
	DBMS_SQL.BIND_VARIABLE(C010, 'NM_TABELA', nm_tabela_w,255);
	DBMS_SQL.BIND_VARIABLE(C010, 'QT_REG_ORIG', qt_reg_orig_w,255);
	retorno_w := DBMS_SQL.execute(c010);

	while( DBMS_SQL.FETCH_ROWS(C010) > 0 ) loop

		DBMS_SQL.COLUMN_VALUE(C010, 1, nm_atributo_w);
		DBMS_SQL.COLUMN_VALUE(C010, 2, ie_tipo_atributo_w);
		DBMS_SQL.COLUMN_VALUE(C010, 3, vl_retorno_w);
		qt_tamanho_w := (vl_retorno_w)::numeric;
		DBMS_SQL.COLUMN_VALUE(C010, 4, vl_retorno_w);
		qt_decimais_w := (vl_retorno_w)::numeric;
		DBMS_SQL.COLUMN_VALUE(C010, 5, vl_default_w);
		DBMS_SQL.COLUMN_VALUE(C010, 6, ie_obrigatorio_w);
		vl_retorno_w := '';

		begin
			select 	CASE WHEN data_type='VARCHAR2' THEN char_length  ELSE data_precision END
			into STRICT	qt_tam_banco_w
			from 	user_tab_columns
			where	table_name 	= nm_tabela_w
			and	column_name	= nm_atributo_w;
			qt_reg_w := 1;
		exception
		when others then
			qt_reg_w := 0;
		end;

		if (qt_reg_w = 0) then
			ds_atributo_w	:= nm_atributo_w  || ' ' || ie_tipo_atributo_w;
			if (ie_tipo_atributo_w = 'NUMBER') then
				ds_atributo_w:= ds_atributo_w  || '(' || qt_tamanho_w;
				ds_atributo_w:= ds_atributo_w  || ',' || qt_decimais_w || ')';
			elsif (ie_tipo_atributo_w = 'VARCHAR2') then
				ds_atributo_w:= ds_atributo_w  || '(' || qt_tamanho_w || ' ' || length_semantic || ')';
			end if;

			ds_comando_w	:= 'Alter Table ' || nm_tabela_w || ' ADD(';
			ds_comando_w	:= ds_comando_w  || ds_atributo_w || ' Null)';

			--Exec_Sql_Dinamico(nm_tabela_p || ',' || nm_atributo_w, ds_comando_w);
			insert into TABELA_VERSAO_OFFLINE_W(nr_sequencia, nr_ordem, ds_comando, ds_log) values (nextval('tabela_versao_offline_w_seq'),nr_ordem_p,ds_comando_w,'A');
			commit;		
            CALL insert_log_cloud(null,null, 'atualizacao', nm_fase_w||'_LOG', null, nm_fase_w);
			if (vl_default_w IS NOT NULL AND vl_default_w::text <> '')  then
				begin
				ds_comando_w	:= 'Update ' || nm_tabela_w || ' set ';
				ds_comando_w	:= ds_comando_w  || nm_atributo_w || ' = ';
				if (ie_tipo_atributo_w = 'VARCHAR2') then
                    ds_comando_w	:= ds_comando_w  || chr(39) || vl_default_w || chr(39);
				else
					ds_comando_w	:= ds_comando_w  || vl_default_w;
				end if;
				ds_comando_w	:= ds_comando_w  || ' where ' || nm_atributo_w;
				ds_comando_w	:= ds_comando_w  || ' is null ';

				--Exec_Sql_Dinamico_bv(nm_tabela_p || ',' || nm_atributo_w, ds_comando_w,'');
				insert into TABELA_VERSAO_OFFLINE_W(nr_sequencia, nr_ordem, ds_comando, ds_log) values (nextval('tabela_versao_offline_w_seq'),nr_ordem_p,ds_comando_w,'A');
				commit;
                CALL insert_log_cloud(null,null, 'atualizacao', nm_fase_w||'_LOG', null, nm_fase_w);

				if (ie_obrigatorio_w = 'S') then
					ds_comando_w := 'alter table ' || nm_tabela_w || ' modify ' || nm_atributo_w || ' ' || ie_tipo_atributo_w;
					if (ie_tipo_atributo_w = 'NUMBER') then
						ds_comando_w := ds_comando_w  || '(' || qt_tamanho_w || ',' || qt_decimais_w || ')';
					elsif (ie_tipo_atributo_w = 'VARCHAR2') then
						ds_comando_w:= ds_comando_w  || '(' || qt_tamanho_w || ' ' || length_semantic || ')';
					end if;
					ds_comando_w := ds_comando_w || ' not null ';
					--Exec_Sql_Dinamico(nm_tabela_p || ',' || nm_atributo_w, ds_comando_w);
					insert into TABELA_VERSAO_OFFLINE_W(nr_sequencia, nr_ordem, ds_comando, ds_log) values (nextval('tabela_versao_offline_w_seq'),nr_ordem_p,ds_comando_w,'B');
					commit;						
                    CALL insert_log_cloud(null,null, 'atualizacao', nm_fase_w||'_LOG', null, nm_fase_w);
				end if;

				end;
			end if;
            if (nm_atributo_w IN ('NM_USUARIO','NM_USUARIO_NREC','DT_ATUALIZACAO','DT_ATUALIZACAO_NREC') and ie_obrigatorio_w = 'S') then
                begin
				ds_comando_w	:= 'Update ' || nm_tabela_w || ' set ';
				ds_comando_w	:= ds_comando_w  || nm_atributo_w || ' = ';
				if (ie_tipo_atributo_w = 'VARCHAR2') then
                    ds_comando_w	:= ds_comando_w  || 'NVL('|| chr(39) || trim(both vl_default_w) || chr(39) ||','|| chr(39) || 'atualizacao' || chr(39)||')';
				else
					ds_comando_w	:= ds_comando_w  || 'sysdate';
				end if;
				ds_comando_w	:= ds_comando_w  || ' where ' || nm_atributo_w;
				ds_comando_w	:= ds_comando_w  || ' is null ';

				--Exec_Sql_Dinamico_bv(nm_tabela_p || ',' || nm_atributo_w, ds_comando_w,'');
				insert into TABELA_VERSAO_OFFLINE_W(nr_sequencia, nr_ordem, ds_comando, ds_log) values (nextval('tabela_versao_offline_w_seq'),nr_ordem_p,ds_comando_w,'A');
				commit;
                CALL insert_log_cloud(null,null, 'atualizacao', nm_fase_w||'_LOG', null, nm_fase_w);

				if (ie_obrigatorio_w = 'S') then
					ds_comando_w := 'alter table ' || nm_tabela_w || ' modify ' || nm_atributo_w || ' ' || ie_tipo_atributo_w;
					if (ie_tipo_atributo_w = 'NUMBER') then
						ds_comando_w := ds_comando_w  || '(' || qt_tamanho_w || ',' || qt_decimais_w || ')';
					elsif (ie_tipo_atributo_w = 'VARCHAR2') then
						ds_comando_w:= ds_comando_w  || '(' || qt_tamanho_w || ' ' || length_semantic || ')';
					end if;
					ds_comando_w := ds_comando_w || ' not null ';
					--Exec_Sql_Dinamico(nm_tabela_p || ',' || nm_atributo_w, ds_comando_w);
					insert into TABELA_VERSAO_OFFLINE_W(nr_sequencia, nr_ordem, ds_comando, ds_log) values (nextval('tabela_versao_offline_w_seq'),nr_ordem_p,ds_comando_w,'B');
					commit;						
                    CALL insert_log_cloud(null,null, 'atualizacao', nm_fase_w||'_LOG', null, nm_fase_w);
				end if;

				end;
            end if;
		elsif (qt_tam_banco_w < qt_tamanho_w) then
			if (ie_tipo_atributo_w = 'NUMBER') then
				ds_comando_w := 'alter table ' || nm_tabela_w || ' modify ' || nm_atributo_w ||' '|| ie_tipo_atributo_w||' ('|| qt_tamanho_w || ',' || qt_decimais_w ||')';
			elsif (ie_tipo_atributo_w = 'VARCHAR2') then
				ds_comando_w := 'alter table ' || nm_tabela_w || ' modify ' || nm_atributo_w ||' ' || ie_tipo_atributo_w || '(' || qt_tamanho_w || ' ' || length_semantic || ')';
			end if;

			--Exec_Sql_Dinamico(nm_tabela_p || ',' || nm_atributo_w, ds_comando_w);
			insert into TABELA_VERSAO_OFFLINE_W(nr_sequencia, nr_ordem, ds_comando, ds_log) values (nextval('tabela_versao_offline_w_seq'),nr_ordem_p,ds_comando_w,'C');
			commit;		
            CALL insert_log_cloud(null,null, 'atualizacao', nm_fase_w||'_LOG', null, nm_fase_w);
		end if;

		if (ie_obrigatorio_w = 'S') then
        begin
            if (vl_default_w IS NOT NULL AND vl_default_w::text <> '') then
            begin
                if (position('@' in Upper(vl_default_w)) <= 0 and position('ESTAB' in Upper(vl_default_w)) <= 0 
                and position('SEQ' in Upper(vl_default_w)) <= 0) then
                    if (ie_tipo_atributo_w = 'VARCHAR2') then
                        ds_select_insert_w	:= ds_select_insert_w || ds_virgula_w || 'NVL(a.'||nm_atributo_w||','|| chr(39) || vl_default_w || chr(39) ||')';
                    elsif (ie_tipo_atributo_w = 'DATE' and upper(vl_default_w) = 'SYSDATE') then
                        ds_select_insert_w	:= ds_select_insert_w || ds_virgula_w || 'NVL(a.'||nm_atributo_w||','|| vl_default_w ||')';
                    elsif (ie_tipo_atributo_w = 'NUMBER') then
                        begin
                            SELECT (vl_default_w)::numeric  into STRICT qt_retorno_w;
                            ds_select_insert_w := ds_select_insert_w || ds_virgula_w  || 'NVL(a.'||nm_atributo_w||','|| vl_default_w ||')';
                        exception
                            when others then
                                ds_select_insert_w	:= ds_select_insert_w || ds_virgula_w || 'a.'||nm_atributo_w;
                        end;
                    else
                        ds_select_insert_w	:= ds_select_insert_w || ds_virgula_w || 'a.'||nm_atributo_w;
                    end if;
                else
                    ds_select_insert_w	:= ds_select_insert_w || ds_virgula_w || 'a.'||nm_atributo_w;
                end if;
            end;
            elsif (coalesce(vl_default_w::text, '') = '') then
                if (nm_atributo_w = 'NM_USUARIO') then
                    ds_select_insert_w	:= ds_select_insert_w || ds_virgula_w || 'NVL(a.'||nm_atributo_w||','|| chr(39) || 'atualizacao' || chr(39) ||')';
                elsif (nm_atributo_w = 'NM_USUARIO_NREC') then
                    ds_select_insert_w	:= ds_select_insert_w || ds_virgula_w || 'NVL(a.'||nm_atributo_w||','|| chr(39) || 'atualizacao' || chr(39) ||')';
                elsif (nm_atributo_w = 'DT_ATUALIZACAO') then
                    ds_select_insert_w	:= ds_select_insert_w || ds_virgula_w || 'NVL(a.'||nm_atributo_w||',SYSDATE)';
                elsif (nm_atributo_w = 'DT_ATUALIZACAO_NREC') then
                    ds_select_insert_w	:= ds_select_insert_w || ds_virgula_w || 'NVL(a.'||nm_atributo_w||',SYSDATE)';
                else 
                    ds_select_insert_w	:= ds_select_insert_w || ds_virgula_w || 'a.'||nm_atributo_w;
                end if;
            end if;
        end;
        else
            ds_select_insert_w	:= ds_select_insert_w || ds_virgula_w || 'a.'||nm_atributo_w;
        end if;

		ds_insert_w	:= ds_insert_w || ds_virgula_w || nm_atributo_w;
		ds_virgula_w	:= ',';
	END LOOP;

	DBMS_SQL.CLOSE_CURSOR(C010);


	if (qt_reg_orig_w > 0) then

        if (ie_paralelism_p) then
            nm_paralelism_w := '/*+PARALLEL('||nm_tabela_w||')*/';
        end if;

		ds_comando_w	:= 'Insert '||trim(both nm_paralelism_w)||' into ' || nm_tabela_w || '(' || ds_insert_w || ') ';
        ds_comando_w	:= ds_comando_w || 'select ' || ds_select_insert_w || ' from TASY_VERSAO.'|| nm_tabela_w || ' a ';
		ds_comando_w	:= ds_comando_w || ' ' || ds_condicao_p;
		ds_insert_w	:= ds_comando_w;

		--Exec_Sql_Dinamico_bv(nm_tabela_p || ' Insert', ds_comando_w,'');
		insert into TABELA_VERSAO_OFFLINE_W(nr_sequencia, nr_ordem, ds_comando, ds_log) values (nextval('tabela_versao_offline_w_seq'),nr_ordem_p,ds_insert_w,'D');			
		commit;
        CALL insert_log_cloud(null,null, 'atualizacao', nm_fase_w||'_LOG', null, nm_fase_w);

	end if;

end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tasy_versao_copiar_tabela ( nm_tabela_p text, ds_condicao_p text, nr_ordem_p bigint, ie_paralelism_p boolean default false) FROM PUBLIC;

