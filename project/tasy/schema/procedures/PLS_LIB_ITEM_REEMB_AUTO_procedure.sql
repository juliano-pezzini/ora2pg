-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_lib_item_reemb_auto ( nr_seq_protocolo_p bigint, nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, ds_parametro1 text, ds_parametro2 text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/*+++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Realizar as consistências para liberação do item ao consistir o reembolso.
--------------------------------------------------------------------------------------
Locais de chamada direta:
[X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ] Relatórios [ ] Outros:
 -------------------------------------------------------------------------------------
Pontos de atenção: Dentro da rotina não será realizado nenhum update pois o update da liberação
já é executado na rotina PLS_CONSISTIR_REEMBOLSO, também não existe consistência para material
pois não existe pasta de glosa na função de reembolso referente a materiais.
+++++++++++++++++++++++++++++++++++++++++++++++*/vl_apresentado_w	double precision;
vl_calculado_w		double precision;
nr_seq_prestador_w	bigint;
ie_status_w		varchar(1);
vl_tolerancia_1705_w	double precision;
vl_tolerancia_1706_w	double precision;
ie_ocorrencia_w		pls_controle_estab.ie_ocorrencia%type := 'N';
ie_tp_desp_conta_proc_w	pls_conta_proc.ie_tipo_despesa%type;


BEGIN
ie_ocorrencia_w := pls_obter_se_controle_estab('GO');

select	max(nr_seq_prestador)
into STRICT 	nr_seq_prestador_w
from	pls_protocolo_conta
where	nr_sequencia = nr_seq_protocolo_p;

if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
	begin
	select	a.vl_procedimento_imp,
			a.vl_procedimento,
			a.ie_tipo_despesa
	into STRICT	vl_apresentado_w,
			vl_calculado_w,
			ie_tp_desp_conta_proc_w
	from	pls_conta_proc	a
	where	nr_sequencia	= nr_seq_conta_proc_p;
	exception
	when others then
		vl_apresentado_w	:= 0;
		vl_calculado_w		:= 0;
	end;
end if;


begin
	if (ie_ocorrencia_w = 'N') then
		select	a.vl_tolerancia_glosa
		into STRICT	vl_tolerancia_1705_w
		from	pls_regra_lanc_glosa a,
			tiss_motivo_glosa b
		where	a.nr_seq_motivo_glosa = b.nr_sequencia
		and	a.ie_situacao	= 'A'
		and		((coalesce(a.ie_tipo_despesa_proc::text, '') = '') or (a.ie_tipo_despesa_proc = ie_tp_desp_conta_proc_w))
		and	b.cd_motivo_tiss = '1705';
	else
		select	a.vl_tolerancia_glosa
		into STRICT	vl_tolerancia_1705_w
		from	pls_regra_lanc_glosa a,
			tiss_motivo_glosa b
		where	a.nr_seq_motivo_glosa = b.nr_sequencia
		and	a.ie_situacao	= 'A'
		and		((coalesce(a.ie_tipo_despesa_proc::text, '') = '') or (a.ie_tipo_despesa_proc = ie_tp_desp_conta_proc_w))
		and	b.cd_motivo_tiss = '1705'
		and	a.cd_estabelecimento = cd_estabelecimento_p;
	end if;
exception
when others then
	vl_tolerancia_1705_w	:= 0;
end;

begin
	if (ie_ocorrencia_w = 'N') then
		select	max(a.vl_tolerancia_glosa)
		into STRICT	vl_tolerancia_1706_w
		from	pls_regra_lanc_glosa a,
			tiss_motivo_glosa b
		where	a.nr_seq_motivo_glosa = b.nr_sequencia
		and	a.ie_situacao	= 'A'
		and		((coalesce(a.ie_tipo_despesa_proc::text, '') = '') or (a.ie_tipo_despesa_proc = ie_tp_desp_conta_proc_w))
		and	b.cd_motivo_tiss = '1706';
	else
		select	max(a.vl_tolerancia_glosa)
		into STRICT	vl_tolerancia_1706_w
		from	pls_regra_lanc_glosa a,
			tiss_motivo_glosa b
		where	a.nr_seq_motivo_glosa = b.nr_sequencia
		and	a.ie_situacao	= 'A'
		and		((coalesce(a.ie_tipo_despesa_proc::text, '') = '') or (a.ie_tipo_despesa_proc = ie_tp_desp_conta_proc_w))
		and	b.cd_motivo_tiss = '1706'
		and	a.cd_estabelecimento = cd_estabelecimento_p;
	end if;

exception
when others then
	vl_tolerancia_1706_w	:= 0;
end;



if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '')	then

	if (vl_apresentado_w > 0)	and (vl_calculado_w	  > 0)	then
		if	(coalesce(vl_apresentado_w,0) > (coalesce(vl_calculado_w,0) + coalesce(vl_tolerancia_1705_w,0)))	then
			/*Valor apresentado a maior*/

			CALL pls_gravar_conta_glosa('1705',null,nr_seq_conta_proc_p,
						null,'N','',
						nm_usuario_p,'A','CR',
						nr_seq_prestador_w, cd_estabelecimento_p, '', null);

		elsif	(coalesce(vl_apresentado_w,0) < (coalesce(vl_calculado_w,0) - coalesce(vl_tolerancia_1706_w,0)))	then
			/*Valor apresentado a menor*/

			CALL pls_gravar_conta_glosa('1706',null,nr_seq_conta_proc_p,
						null,'N','',
						nm_usuario_p,'A','CR',
						nr_seq_prestador_w, cd_estabelecimento_p, '', null);

		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_lib_item_reemb_auto ( nr_seq_protocolo_p bigint, nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, ds_parametro1 text, ds_parametro2 text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

