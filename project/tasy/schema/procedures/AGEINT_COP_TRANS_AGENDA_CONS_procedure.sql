-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_cop_trans_agenda_cons (cd_estabelecimento_p bigint, nr_seq_origem_p bigint, nr_seq_destino_p bigint, ie_acao_p text, nr_seq_motivo_p bigint, ds_motivo_p text, nm_usuario_p text, ds_retorno_p INOUT text, nr_seq_ageint_p bigint default null, hr_agenda_p timestamp default null, cd_medico_marcacao_p text default null) AS $body$
DECLARE


/* variaveis registros */

cd_agenda_w                     	bigint;
cd_pessoa_fisica_w              	varchar(10);
hr_inicio_w				timestamp;
ie_forma_agendamento_w			smallint;
nr_minuto_duracao_w			bigint;
cd_medico_w                     	varchar(10);
nm_pessoa_contato_w             	varchar(50);
cd_procedimento_w               	bigint;
ds_observacao_w                 	varchar(2000);
cd_convenio_w                   	integer;
qt_idade_paciente_w             	smallint;
ie_origem_proced_w              	bigint;
ie_status_agenda_w              	varchar(3);
ds_senha_w                      	varchar(20);
nm_paciente_w                   	varchar(80);
nr_atendimento_w                	bigint;
cd_usuario_convenio_w           	varchar(30);
dt_agendamento_w			timestamp;
nm_usuario_orig_w			varchar(15);
qt_idade_mes_w                  	smallint;
cd_plano_w                      	varchar(10);
nr_telefone_w                   	varchar(80);
vl_previsto_w                   	double precision;
nr_seq_age_cons_w	agenda_consulta.nr_sequencia%type;
cd_medico_exec_w                	varchar(10);
nr_seq_classif_agenda_w         	bigint;
cd_procedencia_w                	integer;
cd_categoria_w                  	varchar(10);
cd_tipo_acomodacao_w            	smallint;
nr_doc_convenio_w               	varchar(20);
dt_validade_carteira_w          	timestamp;
nr_seq_proc_interno_w           	bigint;
nr_seq_status_pac_w             	bigint;
ie_lado_w                       	varchar(1);
ds_laboratorio_w                	varchar(80);
cd_doenca_cid_w                 	varchar(10);
dt_nascimento_pac_w             	timestamp;
nr_seq_sala_w                  		bigint;
ie_tipo_atendimento_w          		smallint;
cd_medico_req_w                 	varchar(10);
nr_seq_pq_proc_w                	bigint;
nr_seq_indicacao_w              	bigint;
cd_pessoa_indicacao_w           	varchar(10);
qt_prescricao_w				bigint;
nr_seq_proced_w				integer;
ds_cirurgia_w				varchar(500);
cd_setor_atendimento_w			integer;
ie_status_paciente_w			varchar(3);
ie_classif_agenda_w			varchar(05);
nr_seq_agenda_cons_proc_w		bigint;
nr_dente_w				integer;
nr_seq_proc_odont_w			bigint;
nr_seq_agepaci_w	agenda_consulta.nr_seq_agepaci%type;
qt_diaria_prev_w			smallint;
ie_classif_agenda_destino_w		varchar(5);

/* variaveis parametros */

ie_manut_proced_w			varchar(1);
ie_duracao_copia_w			varchar(1);
ie_duracao_transf_w			varchar(1);
ie_user_orig_transf_w			varchar(1);
ie_atend_copia_w			varchar(1);
ie_atend_transf_w			varchar(1);
ie_status_copia_w			varchar(1);
ie_status_transf_w			varchar(1);
ie_classif_orig_transf_w		varchar(1);
ie_observacao_copia_w			varchar(1);
ie_observacao_trans_w			varchar(1);
nr_doc_convenio_copia_w			varchar(1);


/* variaveis complementares */

ie_manter_duracao_w			varchar(1) := 'N';
ie_manter_usuario_w			varchar(1) := 'N';
ie_manter_atend_w			varchar(1) := 'S';
ie_manter_status_w			varchar(1) := 'N';
cd_agenda_destino_w			bigint;
hr_destino_w				timestamp;

/* variaveis historico */

atrib_oldvalue_w			varchar(50);
atrib_newvalue_w			varchar(50);

ds_erro_w				varchar(255);
ie_consiste_sobreposicao_w		varchar(1);
ie_executar_proc_w			varchar(1);
nr_seq_forma_confirmacao_w		bigint;

dt_confirmacao_w			timestamp;
nm_usuario_confirm_w			usuario.nm_usuario%type;

qt_same_pront_w				integer;
nr_sequencia_autor_w			bigint;
cd_conv_agenda_destino_w		integer;
nr_seq_turno_w				bigint;
nr_seq_turno_esp_w			bigint;
ds_consistencia_w			varchar(255);
qt_peso_w				real;
qt_altura_cm_w				real;
cd_empresa_ref_w			bigint;
ie_autorizacao_w			varchar(3);
cd_especialidade_w			bigint;
crm_medico_externo_w			varchar(60);
nm_medico_externo_w			varchar(60);
nr_seq_motivo_agendamento_w		bigint;
cd_senha_w				varchar(20);
ie_campo_peso_copia_w			varchar(1);
ie_campo_peso_transf_w			varchar(1);
ie_campo_altura_copia_w			varchar(1);
ie_campo_altura_transf_w		varchar(1);
ie_campo_empresa_copia_w		varchar(1);
ie_campo_empresa_transf_w		varchar(1);
ie_campo_autorizacao_copia_w		varchar(1);
ie_campo_autorizacao_transf_w		varchar(1);
ie_campo_especialidade_copia_w		varchar(1);
ie_campo_especialidade_trans_w		varchar(1);
ie_campo_crm_med_ext_copia_w		varchar(1);
ie_campo_crm_med_ext_transf_w		varchar(1);
ie_campo_nm_med_ext_copia_w		varchar(1);
ie_campo_nm_med_ext_trans_w		varchar(1);
ie_campo_mot_agend_copia_w		varchar(1);
ie_campo_mot_agend_transf_w		varchar(1);
ie_campo_senha_transf_w			varchar(1);
ie_campo_senha_copia_w			varchar(1);
ie_sala_transf_w			varchar(1);
ie_sala_copia_w				varchar(1);
nr_seq_item_ageint_w			bigint;
ie_canc_agenda_transf_w			varchar(1)	:= 'N';
ie_utiliza_agfa_w			varchar(1);
nr_reserva_w				varchar(20);
ie_reserva_transf_w			varchar(1);
cd_estab_origem_w			smallint;
cd_estab_destino_w			smallint;
ie_modo_gerar_reserva_w			varchar(1);
ie_historico_trans_w			varchar(1);
ie_campo_classif_copia_w		varchar(1);

qt_integrada_w				bigint;
ds_abrev_origem_w 			varchar(50);
ds_abrev_dest_w				varchar(50);

nr_seq_vaga_w				bigint;

ie_estab_agenda_w			varchar(1);
ie_status_aguardando_w			varchar(1);
ie_alterar_vaga_w			varchar(1);
cd_estab_gestao_w			smallint;
ie_solicitacao_w			varchar(15);
ie_tipo_vaga_w				varchar(15);
ie_status_gv_w				varchar(1);
dt_prevista_w				timestamp;
ds_setor_desejado_w			varchar(255);
cd_unidade_basica_w			varchar(10);
cd_unidade_compl_w			varchar(10);
cd_tipo_acomod_desej_w			bigint;
ds_retorno_w				varchar(255) := '';
ie_setor_transf_w			varchar(1);
ie_setor_copia_w			varchar(1);
ie_procedencia_copia_w			varchar(1);
ie_procedencia_transf_w			varchar(1);
ie_tipo_atend_copia_w			varchar(1);
ie_tipo_atend_transf_w			varchar(1);
ie_telecons_twilo_w 			varchar(1);

qt_historico_w				bigint;
ie_perm_agendar_classif_w		varchar(255);
ie_cons_regra_agenda_conv_w		varchar(1);
ie_perm_transf_agend_exec_w		varchar(1);
ie_reservado_w				varchar(1);
ds_motivo_w				varchar(255);
dt_agenda_w				timestamp;
cd_setor_agenda_w		agenda.cd_setor_agenda%type;
nr_seq_opm_w			bigint;
ie_utiliza_medico_marcacao_w	varchar(1);

ds_texto_w				varchar(4000);
nr_seq_segurado_w       agenda_consulta.nr_seq_segurado%type;

ie_confirmacao_aut_w		varchar(1);
qt_dias_confirm_aut_w		bigint;
nr_seq_person_name_w        agenda_consulta.nr_seq_person_name%type;

nr_seq_atend_futuro_w               agenda_consulta_adic.nr_seq_atend_futuro%type;
nr_seq_sistema_integracao_w         agenda_consulta_adic.nr_seq_sistema_integracao%type;
ds_url_telemedicina_w               agenda_consulta_adic.ds_url_telemedicina%type;
ie_session_complete_w               agenda_consulta_adic.ie_session_complete%type;
dt_arrival_block_w                  agenda_consulta_adic.dt_arrival_block%type;
ie_adv_appointment_w                agenda_consulta_adic.ie_adv_appointment%type;
ie_reference_letter_w               agenda_consulta_adic.ie_reference_letter%type;
ie_emergency_response_req_w    agenda_consulta_adic.ie_emergency_response_required%type;
ds_procedencia_var_w                agenda_consulta_adic.ds_procedencia_var%type;
nr_seq_reab_times_w                 agenda_consulta_adic.nr_seq_reab_times%type;
qt_adic_count_w                     smallint:= 0;
qt_adic_count_dest_w                     smallint:= 0;

/* cursores */


/* obter procedimentos adicionais */

c01 CURSOR FOR
SELECT	cd_procedimento,
	ie_origem_proced,
	nr_seq_proc_interno,
	ie_executar_proc,
	a.nr_sequencia
from	agenda_consulta_proc a
where	nr_seq_agenda = nr_seq_origem_p
and not exists (SELECT 1 from agenda_consulta_proc w
		where a.nr_seq_proc_interno = w.nr_seq_proc_interno
		and w.nr_seq_agenda = nr_seq_destino_p)
order by
	nr_seq_agenda;


c02 CURSOR FOR
SELECT	nr_sequencia
from	autorizacao_convenio
where	nr_seq_agenda_consulta	= nr_seq_origem_p;


C03 CURSOR FOR
	SELECT	nr_dente
	from	agenda_cons_proc_odont a
	where	nr_seq_cons_proc = nr_seq_agenda_cons_proc_w;
	

BEGIN
if (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') and (nr_seq_origem_p IS NOT NULL AND nr_seq_origem_p::text <> '') and (nr_seq_destino_p IS NOT NULL AND nr_seq_destino_p::text <> '') and (ie_acao_p IS NOT NULL AND ie_acao_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	
	/* obter parametros */
	
	ie_manut_proced_w := obter_param_usuario(821, 70, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_manut_proced_w);
	
	ie_alterar_vaga_w := Obter_Param_Usuario(866, 136, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_alterar_vaga_w);
	ie_estab_agenda_w := Obter_Param_Usuario(866, 137, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_estab_agenda_w);
	ie_status_aguardando_w := Obter_Param_Usuario(866, 138, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_status_aguardando_w);
	ie_cons_regra_agenda_conv_w := Obter_Param_Usuario(821, 294, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_cons_regra_agenda_conv_w);
	ie_perm_transf_agend_exec_w := Obter_Param_Usuario(821, 315, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_perm_transf_agend_exec_w);
	ie_telecons_twilo_w := Obter_param_usuario(868, 7, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_telecons_twilo_w);
  ie_utiliza_medico_marcacao_w := Obter_Param_Usuario(869, 415, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_utiliza_medico_marcacao_w);
	
	ie_utiliza_agfa_w := Obter_Param_Usuario(869, 31, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_utiliza_agfa_w);
	
	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_DURACAO_COPIA', 'N')
	into STRICT	ie_duracao_copia_w
	;

	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_DURACAO_TRANSF', 'N')
	into STRICT	ie_duracao_transf_w
	;

	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_USUARIO_ORIG_TRANSF', 'N')
	into STRICT	ie_user_orig_transf_w
	;

	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_ATEND_COPIA', 'S')
	into STRICT	ie_atend_copia_w
	;

	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_ATEND_TRANSF', 'S')
	into STRICT	ie_atend_transf_w
	;

	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_STATUS_COPIA', 'N')
	into STRICT	ie_status_copia_w
	;

	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_STATUS_TRANSF', 'N')
	into STRICT	ie_status_transf_w
	;

	ie_consiste_sobreposicao_w := obter_param_usuario(821, 36, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_sobreposicao_w);
	
	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_CLASSIF_ORIG_TRANSF', 'N')
	into STRICT	ie_classif_orig_transf_w
	;

	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_CAMPO_SENHA_TRANSF', 'S')
	into STRICT	ie_campo_senha_transf_w
	;
	
	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_CAMPO_SENHA_COPIA', 'S')
	into STRICT	ie_campo_senha_copia_w
	;
	
	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_CAMPO_SALA_TRANSF', 'S')
	into STRICT	ie_sala_transf_w
	;
	
	select	obter_parametro_agenda(cd_estabelecimento_p, 'IE_CAMPO_SALA_COPIA', 'S')
	into STRICT	ie_sala_copia_w
	;
	
	select obter_parametro_agenda(cd_estabelecimento_p, 'IE_DOC_CONV_COPIA', 'S')
	into STRICT	nr_doc_convenio_copia_w
	;
	
	select 	coalesce(max(obter_valor_param_usuario(869, 77, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), '0')
	into STRICT   	qt_dias_confirm_aut_w
	;

	ie_campo_peso_copia_w 		:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_PESO_COPIA', 'N');
	
	ie_campo_peso_transf_w		:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_PESO_TRANSF', 'N');
			
	ie_campo_altura_copia_w		:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_ALTURA_COPIA', 'N');
	
	ie_campo_altura_transf_w 	:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_ALTURA_TRANSF', 'N');
	
	ie_campo_empresa_copia_w 	:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_EMPRESA_COPIA', 'N');
	
	ie_campo_empresa_transf_w 	:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_EMPRESA_TRANSF', 'N');
	
	ie_campo_autorizacao_copia_w 	:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_AUTORIZACAO_COPIA', 'N');
		
	ie_campo_autorizacao_transf_w 	:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_AUTORIZACAO_TRANSF', 'N');	
	
	ie_campo_especialidade_copia_w  := obter_parametro_agenda(cd_estabelecimento_p, 'IE_ESPECIALIDADE_COPIA', 'N');
		
	ie_campo_especialidade_trans_w	:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_ESPECIALIDADE_TRANSF', 'N');
		
	ie_campo_crm_med_ext_copia_w	:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_CRM_EXT_COPIA', 'N');	
	
	ie_campo_crm_med_ext_transf_w	:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_CRM_EXT_TRANSF', 'N');	
	
	ie_campo_nm_med_ext_copia_w	:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_MEDICO_EXT_COPIA', 'N');	
	
	ie_campo_nm_med_ext_trans_w	:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_MEDICO_EXT_TRANSF', 'N');	
	
	ie_campo_mot_agend_copia_w	:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_MOT_AGENDA_COPIA', 'N');	
	
	ie_campo_mot_agend_transf_w	:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_MOT_AGENDA_TRANSF', 'N');
	
	
	ie_reserva_transf_w		:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_RESERVA_TRANSF', 'S');
	
	ie_observacao_copia_w		:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_OBS_COPIA', 'S');
	
	ie_observacao_trans_w		:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_OBS_TRANSFERENCIA', 'S');
	
	ie_modo_gerar_reserva_w := obter_param_usuario(869, 102, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_modo_gerar_reserva_w);
	
	ie_historico_trans_w		:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_HISTORICO_TRANSF', 'N');
	
	ie_setor_transf_w		:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_SETOR_TRANSFERENCIA', 'N');
	
	ie_setor_copia_w		:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_SETOR_COPIA', 'N');
	
	ie_procedencia_transf_w		:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_PROCEDENCIA_TRANSF', 'N');

	ie_procedencia_copia_w		:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_PROCEDENCIA_COPIA', 'N');
	
	ie_tipo_atend_copia_w		:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_TIPO_ATEND_COPIA', 'N');

	ie_tipo_atend_transf_w		:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_TIPO_ATEND_TRANSF', 'N');
	
	ie_campo_classif_copia_w 	:= obter_parametro_agenda(cd_estabelecimento_p, 'IE_CLASSIF_ORIG_COPIA', 'S');
	
	
	/* obter dados origem */

	select	b.cd_agenda,
		b.cd_pessoa_fisica,
		b.dt_agenda,
		b.nr_minuto_duracao,
		b.cd_medico,
		b.nm_pessoa_contato,
		b.cd_procedimento,
		b.ds_observacao,
		b.cd_convenio,
		b.qt_idade_pac,
		b.ie_origem_proced,
		b.ie_status_agenda,
		b.ds_senha,
		b.nm_paciente,
		b.nr_atendimento,
		b.cd_usuario_convenio,
		b.dt_agendamento,
		b.nm_usuario_origem,
		--qt_idade_mes,
		b.cd_plano,
		b.nr_telefone,
		b.ie_autorizacao,
		--vl_previsto,

		--nr_seq_age_cons,

		--cd_medico_exec,

		--nr_seq_classif_agenda,
		b.cd_procedencia,
		b.cd_categoria,
		b.cd_tipo_acomodacao,
		b.nr_doc_convenio,
		b.dt_validade_carteira,
		b.nr_seq_proc_interno,
		--nr_seq_status_pac,

		--ie_lado,

		--ds_laboratorio,
		b.cd_cid,
		b.dt_nascimento_pac,
		b.nr_seq_sala,
		b.nm_medico_externo,
		b.ie_tipo_atendimento,
		b.cd_medico_req,
		b.nr_seq_pq_proc,
		b.nr_seq_indicacao,
		b.cd_pessoa_indicacao,
		b.ds_confirmacao,
		b.cd_setor_atendimento,
		b.ie_status_paciente,
		b.ie_classif_agenda,
		b.nr_seq_forma_confirmacao,
		b.dt_confirmacao,
		b.nm_usuario_confirm,
		b.ie_forma_agendamento,
		b.cd_senha,
		b.nr_reserva,
		a.cd_estabelecimento,
		nr_seq_agepaci,
		b.qt_peso,
		b.qt_altura_cm,
		b.cd_empresa_ref,
		b.cd_especialidade,
		b.crm_medico_externo,
		b.nr_seq_motivo_agendamento,
		b.qt_diaria_prev,
		b.nr_seq_opm,
		b.nr_seq_segurado,
		b.nr_seq_person_name
	into STRICT	cd_agenda_w,
		cd_pessoa_fisica_w,
		hr_inicio_w,
		nr_minuto_duracao_w,
		cd_medico_w,
		nm_pessoa_contato_w,
		cd_procedimento_w,
		ds_observacao_w,
		cd_convenio_w,
		qt_idade_paciente_w,
		ie_origem_proced_w,
		ie_status_agenda_w,
		ds_senha_w,
		nm_paciente_w,
		nr_atendimento_w,
		cd_usuario_convenio_w,
		dt_agendamento_w,
		nm_usuario_orig_w,
		--qt_idade_mes_w,
		cd_plano_w,
		nr_telefone_w,
		ie_autorizacao_w,
		--vl_previsto_w,

		--nr_seq_age_cons_w,

		--cd_medico_exec_w,

		--nr_seq_classif_agenda_w,
		cd_procedencia_w,
		cd_categoria_w,
		cd_tipo_acomodacao_w,
		nr_doc_convenio_w,
		dt_validade_carteira_w,
		nr_seq_proc_interno_w,
		--nr_seq_status_pac_w,

		--ie_lado_w,

		--ds_laboratorio_w,
		cd_doenca_cid_w,
		dt_nascimento_pac_w,
		nr_seq_sala_w,
		nm_medico_externo_w,
		ie_tipo_atendimento_w,
		cd_medico_req_w,
		nr_seq_pq_proc_w,
		nr_seq_indicacao_w,
		cd_pessoa_indicacao_w,
		ds_cirurgia_w,
		cd_setor_atendimento_w,
		ie_status_paciente_w,
		ie_classif_agenda_w,
		nr_seq_forma_confirmacao_w,
		dt_confirmacao_w,
		nm_usuario_confirm_w,
		ie_forma_agendamento_w,
		cd_senha_w,
		nr_reserva_w,
		cd_estab_origem_w,
		nr_seq_agepaci_w,
		qt_peso_w,
		qt_altura_cm_w,
		cd_empresa_ref_w,
		cd_especialidade_w,
		crm_medico_externo_w,
		nr_seq_motivo_agendamento_w,
		qt_diaria_prev_w,
		nr_seq_opm_w,
		nr_seq_segurado_w,
		nr_seq_person_name_w
	from	agenda a,
		agenda_consulta b
	where	b.nr_sequencia = nr_seq_origem_p
	and	a.cd_agenda	= b.cd_agenda;

	/* obter dados destino */

	select	b.cd_agenda,
		b.dt_agenda,
		b.cd_convenio,
		b.nr_seq_turno,
		b.nr_seq_turno_esp,
		a.cd_estabelecimento,
		b.ie_classif_agenda,
		a.cd_setor_agenda
	into STRICT	cd_agenda_destino_w,
		hr_destino_w,
		cd_conv_agenda_destino_w,
		nr_seq_turno_w,
		nr_seq_turno_esp_w,
		cd_estab_destino_w,
		ie_classif_agenda_destino_w,
		cd_setor_agenda_w
	from	agenda a,
		agenda_consulta b
	where	nr_sequencia = nr_seq_destino_p
	and	a.cd_agenda	= b.cd_agenda;
	
	ie_perm_agendar_classif_w := Obter_Se_Perm_PF_Classif(821, cd_agenda_destino_w, cd_pessoa_fisica_w, hr_destino_w,'DCE');
		
	if (ie_perm_agendar_classif_w IS NOT NULL AND ie_perm_agendar_classif_w::text <> '') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort( 33187 , 'IE_PERM_CLASSIF='||ie_perm_agendar_classif_w);
	end if;

	if (cd_estab_origem_w	<> cd_estab_destino_w) then
		if (ie_modo_gerar_reserva_w	= '1') then			
			if (ie_acao_p = 'T') then
				ds_abrev_origem_w 	:= upper(obter_abrev_estabelecimento(cd_estab_origem_w));
				ds_abrev_dest_w		:= upper(obter_abrev_estabelecimento(cd_estab_destino_w));
				nr_reserva_w	:= substr(replace(nr_reserva_w,ds_abrev_origem_w,ds_abrev_dest_w),1,20);
			else
				nr_reserva_w	:= Ageint_Obter_Reserva_Pac(nr_seq_destino_p, hr_destino_w, cd_pessoa_fisica_w, cd_estab_destino_w,'S');
			end if;
		end if;
	end if;
	
	/* tratar parametros */

	if (ie_manut_proced_w = 'N') or
		(ie_manut_proced_w = 'C' AND ie_acao_p = 'T') or
		(ie_manut_proced_w = 'T' AND ie_acao_p = 'C') then
		cd_procedimento_w := null;
		ie_origem_proced_w := null;
		nr_seq_proc_interno_w := null;
	end if;		
		
	if (ie_acao_p = 'C') then
	
		if (nr_doc_convenio_copia_w = 'N') then
			nr_doc_convenio_w := '';
		end if;		
		
		if (ie_sala_copia_w = 'N') then		
			nr_Seq_sala_w	:= '';
		end if;
	
		if (ie_campo_senha_copia_w		= 'N') then
			cd_senha_w	:= '';
		end if;
		
		if (ie_campo_peso_copia_w		= 'N') then
			qt_peso_w	:= '';		
		end if;
		
		if (ie_campo_altura_copia_w	= 'N') then
			qt_altura_cm_w	:= '';		
		end if;
		
		if (ie_campo_empresa_copia_w	= 'N') then
			cd_empresa_ref_w := '';		
		end if;
		
		if (ie_campo_autorizacao_copia_w	= 'N') then
			ie_autorizacao_w := '';		
		end if;
		
		if (ie_campo_especialidade_copia_w	= 'N') then
			cd_especialidade_w := '';		
		end if;
		
		if (ie_campo_crm_med_ext_copia_w	= 'N') then
			crm_medico_externo_w := '';		
		end if;
		
		if (ie_campo_nm_med_ext_copia_w	= 'N') then
			nm_medico_externo_w := '';		
		end if;
		
		if (ie_campo_mot_agend_copia_w	= 'N') then
			nr_seq_motivo_agendamento_w := '';		
		end if;
		
		if (ie_campo_classif_copia_w	= 'N') then
			ie_classif_agenda_w := ie_classif_agenda_destino_w;		
		end if;

		
		if (ie_duracao_copia_w = 'S') then
			ie_manter_duracao_w := 'S';
		elsif (ie_duracao_copia_w = 'P') then
			select	obter_se_mantem_dur_agecons(cd_agenda_destino_w,nr_seq_destino_p,hr_destino_w,nr_minuto_duracao_w)
			into STRICT	ie_manter_duracao_w
			;
		else
			ie_manter_duracao_w := 'N';
		end if;
		ie_manter_atend_w := ie_atend_copia_w;

		if (ie_status_copia_w = 'S') then
			ie_manter_status_w := 'S';
		elsif (ie_status_copia_w = 'A') and (ie_manter_atend_w = 'S') and (nr_atendimento_w > 0) then
			ie_manter_status_w := 'S';
		end if;
		
		if (ie_observacao_copia_w = 'N') then
			ds_observacao_w	:= '';
		end if;
		
		if (ie_setor_copia_w	= 'A') then
			cd_setor_atendimento_w	:= obter_setor_agenda(cd_agenda_destino_w);
		elsif (ie_setor_copia_w = 'E') then
			cd_setor_atendimento_w 	:= cd_setor_agenda_w;
		elsif (ie_setor_copia_w	= 'N') then
			cd_setor_atendimento_w	:= null;
		end if;
		
		if (ie_procedencia_copia_w = 'N') then
			cd_procedencia_w := null;
		end if;
		
		if (ie_tipo_atend_copia_w = 'N') then
			ie_tipo_atendimento_w := null;
		end if;		
		
	elsif (ie_acao_p = 'T') then
	
		if (ie_sala_transf_w = 'N') then		
			nr_Seq_sala_w	:= '';
		end if;
	
		if (ie_campo_senha_transf_w	= 'N') then
			cd_senha_w	:= '';
		end if;
		
		if (ie_campo_peso_transf_w		= 'N') then
			qt_peso_w	:= '';		
		end if;
		
		if (ie_campo_altura_transf_w	= 'N') then
			qt_altura_cm_w	:= '';		
		end if;
		
		if (ie_campo_empresa_transf_w	= 'N') then
			cd_empresa_ref_w := '';		
		end if;
		
		if (ie_campo_autorizacao_transf_w	= 'N') then
			ie_autorizacao_w := '';		
		end if;
		
		if (ie_campo_especialidade_trans_w	= 'N') then
			cd_especialidade_w := '';		
		end if;
		
		if (ie_campo_crm_med_ext_transf_w	= 'N') then
			crm_medico_externo_w := '';		
		end if;
		
		if (ie_campo_nm_med_ext_trans_w	= 'N') then
			nm_medico_externo_w := '';		
		end if;
		
		if (ie_campo_mot_agend_transf_w	= 'N') then
			nr_seq_motivo_agendamento_w := '';		
		end if;		
		
		if (ie_observacao_trans_w = 'N') then
			ds_observacao_w	:= '';
		end if;
		
		if (ie_duracao_transf_w = 'S') then
			ie_manter_duracao_w := 'S';
		elsif (ie_duracao_transf_w = 'P') then
			select	obter_se_mantem_dur_agecons(cd_agenda_destino_w,nr_seq_destino_p,hr_destino_w,nr_minuto_duracao_w)
			into STRICT	ie_manter_duracao_w
			;
		else
			ie_manter_duracao_w := 'N';
		end if;
		ie_manter_usuario_w	:= ie_user_orig_transf_w;
		ie_manter_atend_w	:= ie_atend_transf_w;

		if (ie_status_transf_w = 'S') then
			ie_manter_status_w := 'S';
		elsif (ie_status_transf_w = 'A') and (ie_manter_atend_w = 'S') and (nr_atendimento_w > 0) then
			ie_manter_status_w := 'S';
		end if;
		
		if (ie_setor_transf_w	= 'A') then
			cd_setor_atendimento_w	:= obter_setor_agenda(cd_agenda_destino_w);
		elsif (ie_setor_transf_w = 'E') then
			cd_setor_atendimento_w  := cd_setor_agenda_w;
		elsif (ie_setor_transf_w	= 'N') then
			cd_setor_atendimento_w	:= null;
		end if;
		
		if (ie_procedencia_transf_w = 'N') then
			cd_procedencia_w := null;
		end if;		
		
		if (ie_tipo_atend_transf_w = 'N') then
			ie_tipo_atendimento_w := null;
		end if;
		
	end if;

	if (ie_consiste_sobreposicao_w = 'S') then
		begin
		ds_erro_w := Consistir_Duracao_Agecons(cd_agenda_destino_w, hr_destino_w, nr_minuto_duracao_w, nr_seq_destino_p, ds_erro_w);
		if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort( 262328 , 'DS_MENSAGEM='||ds_erro_w);
		end if;
		end;
	end if;
	
	if (ie_acao_p 	= 'C') then
		dt_confirmacao_w		:= null;
		nm_usuario_confirm_w		:= null;
		nr_seq_forma_confirmacao_w	:= null;
		ds_cirurgia_w			:= null;
		nr_seq_agepaci_w		:= null;
	end if;
	
	if (ie_acao_p 	= 'C') then	
		ds_consistencia_w := consistir_turno_convenio(nr_seq_destino_p, cd_agenda_destino_w, hr_destino_w, nr_seq_turno_w, cd_convenio_w, cd_categoria_w, ds_consistencia_w, nm_usuario_p, cd_estabelecimento_p, null);	
	end if;
	
	if (ds_consistencia_w IS NOT NULL AND ds_consistencia_w::text <> '') then	
		CALL Wheb_mensagem_pck.exibir_mensagem_abort( 262328 , 'DS_MENSAGEM='||ds_consistencia_w);
	end if;
	
	ds_consistencia_w := consistir_turno_esp_convenio(cd_agenda_destino_w, hr_destino_w, nr_seq_turno_esp_w, cd_convenio_w, nr_seq_destino_p, ds_consistencia_w, cd_categoria_w);
		
	if (ds_consistencia_w IS NOT NULL AND ds_consistencia_w::text <> '') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort( 262328 , 'DS_MENSAGEM='||ds_consistencia_w);	
	
	end if;
	
	if (ie_cons_regra_agenda_conv_w	= 'S') then
		CALL consiste_regra_agecons_conv(cd_convenio_w, cd_categoria_w, cd_agenda_destino_w, cd_setor_atendimento_w, cd_plano_w, cd_pessoa_fisica_w, hr_destino_w, cd_estabelecimento_p, cd_empresa_ref_w, null);
	end if;
	
	if (ie_perm_transf_agend_exec_w	= 'N') and (nr_atendimento_w		> 0) and (ie_acao_p			= 'T')then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(262373);
	end if;

	if (qt_dias_confirm_aut_w > 0) and (Ageint_Obter_Qt_Dia_Util_Per(clock_timestamp(), hr_agenda_p, wheb_usuario_pck.get_cd_estabelecimento) <= qt_dias_confirm_aut_w)
		and (ie_acao_p <> 'C') and (ie_manter_status_w <> 'S') then
		dt_confirmacao_w	    := clock_timestamp();
		nm_usuario_confirm_w	:= nm_usuario_p;
		ie_confirmacao_aut_w	:= 'S';
	else
		dt_confirmacao_w	    := null;
		nm_usuario_confirm_w	:= null;
		ie_confirmacao_aut_w	:= 'N';
	end if;
	
  if ie_utiliza_medico_marcacao_w = 'S' and (cd_medico_marcacao_p IS NOT NULL AND cd_medico_marcacao_p::text <> '') then
    cd_medico_req_w := cd_medico_marcacao_p;
  end if;

	/* gerar dados destino */

	update	agenda_consulta
	set	cd_pessoa_fisica		= cd_pessoa_fisica_w,
		nr_minuto_duracao		= CASE WHEN ie_manter_duracao_w='S' THEN nr_minuto_duracao_w  ELSE nr_minuto_duracao END ,
		nm_usuario			= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		cd_medico			= cd_medico_w,
		nm_pessoa_contato		= nm_pessoa_contato_w,
		cd_procedimento		= cd_procedimento_w,
		ds_observacao			= ds_observacao_w,
		cd_convenio			= cd_convenio_w,
		qt_idade_pac			= qt_idade_paciente_w,
		ie_origem_proced		= ie_origem_proced_w,
		ie_status_agenda		= CASE WHEN ie_manter_status_w='S' THEN  ie_status_agenda_w  ELSE 'N' END ,
		ds_senha			= ds_senha_w,
		nm_paciente			= nm_paciente_w,
		nr_atendimento		= CASE WHEN ie_manter_atend_w='S' THEN nr_atendimento_w  ELSE null END ,
		cd_usuario_convenio		= cd_usuario_convenio_w,
		nm_usuario_origem		= CASE WHEN ie_manter_usuario_w='S' THEN nm_usuario_orig_w  ELSE nm_usuario_p END ,
		--qt_idade_mes		= qt_idade_mes_w,
		cd_plano			= cd_plano_w,
		nr_telefone			= nr_telefone_w,
		dt_agendamento		= CASE WHEN ie_acao_p='T' THEN dt_agendamento_w  ELSE clock_timestamp() END ,
		ie_autorizacao		= ie_autorizacao_w,
		--vl_previsto			= vl_previsto_w,

		--nr_seq_age_cons		= nr_seq_age_cons_w,

		--cd_medico_exec		= cd_medico_exec_w,
		cd_procedencia		= cd_procedencia_w,
		cd_categoria			= cd_categoria_w,
		cd_tipo_acomodacao		= cd_tipo_acomodacao_w,
		nr_doc_convenio		= nr_doc_convenio_w,
		dt_validade_carteira		= dt_validade_carteira_w,
		nr_seq_proc_interno		= nr_seq_proc_interno_w,
		--nr_seq_status_pac		= nr_seq_status_pac_w,

		--ie_lado			= ie_lado_w,

		--ds_laboratorio		= ds_laboratorio_w,
		cd_cid			= cd_doenca_cid_w,
		dt_nascimento_pac		= dt_nascimento_pac_w,
		nr_seq_sala			= coalesce(nr_seq_sala_w,nr_seq_sala), 
		nm_medico_externo		= nm_medico_externo_w,
		ie_tipo_atendimento	= ie_tipo_atendimento_w,
		cd_medico_req			= cd_medico_req_w,
		nr_seq_pq_proc		= nr_seq_pq_proc_w,
		nr_seq_indicacao		= nr_seq_indicacao_w,
		cd_pessoa_indicacao		= cd_pessoa_indicacao_w,
		ds_confirmacao		= ds_cirurgia_w,
		ie_status_paciente		= ie_status_paciente_w,
		cd_setor_atendimento		= cd_setor_atendimento_w,
		nr_seq_motivo_transf		= nr_seq_motivo_p,
		ds_motivo_copia_trans	= ds_motivo_p,
		dt_copia_trans		= clock_timestamp(),
		nm_usuario_copia_trans	= nm_usuario_p,
		ie_classif_agenda	= CASE WHEN ie_classif_orig_transf_w='S' THEN  ie_classif_agenda_w  ELSE ie_classif_agenda END ,
		nr_seq_forma_confirmacao	= nr_seq_forma_confirmacao_w,
		dt_confirmacao			= dt_confirmacao_w,
		nm_usuario_confirm		= nm_usuario_confirm_w,
		ie_confirmacao_aut      = ie_confirmacao_aut_w,
		ie_forma_agendamento		= ie_forma_agendamento_w,
		cd_Senha			= cd_Senha_w,
		nr_seq_turno			= nr_seq_turno_w,
		nr_reserva			= CASE WHEN ie_reserva_transf_w='S' THEN  nr_reserva_w  ELSE null END ,
		nr_seq_agepaci			= nr_seq_agepaci_w,
		qt_peso				= qt_peso_w,
		qt_altura_cm			= qt_altura_cm_w,
		cd_empresa_ref			= cd_empresa_ref_w,
		cd_especialidade		= cd_especialidade_w,
		crm_medico_externo		= crm_medico_externo_w,
		nr_seq_motivo_agendamento	= nr_seq_motivo_agendamento_w,
		ie_transferido			= CASE WHEN ie_acao_p='T' THEN 'S'  ELSE 'N' END ,
		nm_usuario_acesso		 = NULL,
		nr_seq_opm				= nr_seq_opm_w,
		nr_seq_segurado         = nr_seq_segurado_w,
		nr_seq_person_name      = nr_seq_person_name_w
	where	nr_sequencia			= nr_seq_destino_p;
	
	CALL cpoe_exam_update_delete(nr_seq_origem_p, hr_destino_w ,nr_seq_destino_p);

	if (ie_acao_p = 'T') then
		select count(*)
		into STRICT qt_adic_count_w
		from agenda_consulta_adic
		where nr_seq_agenda=nr_seq_origem_p;

		if (qt_adic_count_w>0) then
			select  nr_seq_atend_futuro,
					nr_seq_sistema_integracao,
					ds_url_telemedicina,
					-- nm_usuario,

					-- dt_atualizacao,
					ie_session_complete,
					dt_arrival_block,
					ie_adv_appointment,
					ie_reference_letter,
					ie_emergency_response_required,
					ds_procedencia_var,
					nr_seq_reab_times
			into STRICT    nr_seq_atend_futuro_w,
					 nr_seq_sistema_integracao_w,
					ds_url_telemedicina_w,
					-- nm_usuario,

					-- dt_atualizacao,
					ie_session_complete_w,
					dt_arrival_block_w,
					ie_adv_appointment_w,
					ie_reference_letter_w,
					ie_emergency_response_req_w,
					ds_procedencia_var_w,
					nr_seq_reab_times_w
			from agenda_consulta_adic
			where nr_seq_agenda= nr_seq_origem_p;

            select count(*)
            into STRICT qt_adic_count_dest_w
            from agenda_consulta_adic
            where nr_seq_agenda=nr_seq_destino_p;
			
			if (ie_telecons_twilo_w = 'S') then
				ds_url_telemedicina_w := null;
			end if;

			if (qt_adic_count_dest_w=0)then
				INSERT INTO agenda_consulta_adic(
												nr_seq_agenda,
												nr_seq_atend_futuro,
												nr_seq_sistema_integracao,
												ds_url_telemedicina,
												nm_usuario,
												dt_atualizacao,
												ie_session_complete,
												dt_arrival_block,
												ie_adv_appointment,
												ie_reference_letter,
												ie_emergency_response_required,
												ds_procedencia_var,
												nr_seq_reab_times
				) VALUES (
												nr_seq_destino_p,
												nr_seq_atend_futuro_w,
												nr_seq_sistema_integracao_w,
												ds_url_telemedicina_w,
												nm_usuario_p,
												clock_timestamp(),
												ie_session_complete_w,
												dt_arrival_block_w,
												ie_adv_appointment_w,
												ie_reference_letter_w,
												ie_emergency_response_req_w,
												ds_procedencia_var_w,
												nr_seq_reab_times_w
				);
			end if;
        end if;
    end if;
		
	if (ie_acao_p = 'T') and (ie_historico_trans_w = 'S') then
		
		select	count(*)
		into STRICT	qt_historico_w
		from	agenda_cons_hist
		where	nr_seq_agenda	= nr_seq_origem_p;
		
		if (qt_historico_w > 0) then
			update	agenda_cons_hist
			set	nr_seq_agenda	=	nr_seq_destino_p,
				nm_usuario	=	nm_usuario_p,
				dt_atualizacao	=	clock_timestamp()
			where	nr_seq_agenda	=	nr_seq_origem_p;	
		end if;		
	end if;

	if (ie_acao_p = 'T') and (ie_alterar_vaga_w = 'S') then
	
		select	max(nr_sequencia)
		into STRICT	nr_seq_vaga_w
		from	gestao_vaga
		where	nr_seq_agenda = nr_seq_origem_p;
						
		if (nr_seq_vaga_w > 0) then
			
			select	max(cd_estabelecimento),
					max(ie_solicitacao),
					max(ie_tipo_vaga),
					max(ie_status),
					max(dt_prevista),
					max(obter_nome_setor(cd_setor_desejado)),
					max(cd_unidade_basica),
					max(cd_unidade_compl),
					max(cd_tipo_acomod_desej)
				into STRICT	cd_estab_gestao_w,
					ie_solicitacao_w,
					ie_tipo_vaga_w,
					ie_status_gv_w,
					dt_prevista_w,
					ds_setor_desejado_w,
					cd_unidade_basica_w,
					cd_unidade_compl_w,
					cd_tipo_acomod_desej_w
			from	gestao_vaga
			where	nr_sequencia = nr_seq_vaga_w;
			
			if (ie_estab_agenda_w = 'S') then
							
				if (cd_estab_gestao_w IS NOT NULL AND cd_estab_gestao_w::text <> '') and (cd_estab_gestao_w <> cd_estab_destino_w) then
				
					CALL cancelar_gestao_vaga(nr_seq_origem_p,null,nm_usuario_p,cd_estabelecimento_p);

					update	gestao_vaga
					set	nr_seq_agenda  = NULL
					where	nr_seq_agenda = nr_seq_origem_p;
				
					ds_retorno_w := Ageint_Gerar_necessidade_vaga(nr_seq_destino_p, ie_solicitacao_w, ie_tipo_vaga_w, cd_tipo_acomod_desej_w, cd_estab_gestao_w, nm_usuario_p, 'S', ds_retorno_w);
					
					select	max(nr_sequencia)
					into STRICT	nr_seq_vaga_w
					from	gestao_vaga
					where	nr_seq_agenda = nr_seq_destino_p;
					
					if (nr_seq_vaga_w IS NOT NULL AND nr_seq_vaga_w::text <> '') then
						update	gestao_vaga
						set	qt_dia		= qt_diaria_prev_w
						where	nr_sequencia	= nr_seq_vaga_w;
					end if;			
										
				elsif (cd_estab_gestao_w IS NOT NULL AND cd_estab_gestao_w::text <> '') and (cd_estab_gestao_w = cd_estab_destino_w) then
					
					if (ie_status_aguardando_w = 'S') and
						((ie_status_gv_w = 'R') or (ie_status_gv_w = 'P')) then -- Somente sera alterado o status quando a data prevista for em dia diferente da data da agenda, momento da transferencia de agendamento
						if (to_char(dt_prevista_w,'dd/mm/yyyy') <> to_char(hr_destino_w,'dd/mm/yyyy')) then
							CALL Desfazer_reserva_leito(nr_seq_vaga_w,nm_usuario_p);
							ds_retorno_w := wheb_mensagem_pck.get_texto(790927,
												'DS_SETOR_DESEJADO='||ds_setor_desejado_w||
												';CD_UNIDADE_BASICA='||cd_unidade_basica_w||
												';CD_UNIDADE_COMPL='||cd_unidade_compl_w) || chr(13) ||
									wheb_mensagem_pck.get_texto(790928,
												'NM_PACIENTE_W='||nm_paciente_w);									
						end if;	
					end if;
					
					update	gestao_vaga
					set	dt_prevista	= hr_destino_w,
						nr_seq_agenda	= nr_seq_destino_p
					where	nr_sequencia	= nr_seq_vaga_w;
					
				end if;			
			end if;	
		end if;		
	end if;
	
	/* tratar parametros */

	if (ie_manut_proced_w = 'S') or
		(ie_manut_proced_w = 'C' AND ie_acao_p = 'C') or
		(ie_manut_proced_w = 'T' AND ie_acao_p = 'T') then
		/* gerar procedimentos adicionais */

		open c01;
		loop
		fetch c01 into	cd_procedimento_w,
				ie_origem_proced_w,
				nr_seq_proc_interno_w,
				ie_executar_proc_w,
				nr_seq_agenda_cons_proc_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			
			/* obter sequencia 
			select	nvl(max(nr_sequencia),0)+1
			into	nr_seq_proced_w
			from	agenda_consulta_proc
			where	nr_seq_agenda = nr_seq_destino_p; */
			
			select	nextval('agenda_consulta_proc_seq')
			into STRICT	nr_seq_proc_odont_w
			;

			insert into agenda_consulta_proc(
								nr_sequencia,
								nr_seq_agenda,
								cd_procedimento,
								ie_origem_proced,
								nr_seq_proc_interno,
								dt_atualizacao,
								nm_usuario,
								ie_executar_proc
								)
							values (
								nr_seq_proc_odont_w,
								nr_seq_destino_p,
								cd_procedimento_w,
								ie_origem_proced_w,
								nr_seq_proc_interno_w,
								clock_timestamp(),
								nm_usuario_p,
								ie_executar_proc_w
								);
								
			open C03;
			loop
			fetch C03 into	
				nr_dente_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				
				insert into agenda_cons_proc_odont( nr_sequencia,
								dt_atualizacao,
								nm_usuario,             
								dt_atualizacao_nrec,    
								nm_usuario_nrec,        
								nr_dente,       
								nr_seq_cons_proc)
							values (nextval('agenda_cons_proc_odont_seq'),
								 clock_timestamp(),
								 nm_usuario_p,
								 clock_timestamp(),
								 nm_usuario_p,
								 nr_dente_w,
								 nr_seq_proc_odont_w);
				
				end;
			end loop;
			close C03;
								
			end;
		end loop;
		close c01;
	end if;


	open c02;
	loop
	fetch c02 into
		nr_sequencia_autor_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		if (ie_utiliza_agfa_w <> 'S') then
		
			begin
			select	dt_agenda
			into STRICT	dt_agenda_w
			from	agenda_consulta
			where	nr_sequencia = nr_seq_destino_p;
			exception
			when others then
				dt_agenda_w := null;
			end;
		
			update	autorizacao_convenio
			set	nr_seq_agenda_consulta	= nr_seq_destino_p,
				dt_agenda_cons		= coalesce(dt_agenda_w,dt_agenda_cons)
			where	nr_sequencia		= nr_sequencia_autor_w;
		end if;
	end loop;
	close c02;

	if (ie_acao_p = 'T') then
		/* verificar prescricoes vinculadas */

		select	count(*)
		into STRICT	qt_prescricao_w
		from	prescr_medica
		where	nr_seq_agecons = nr_seq_origem_p;
		
		/* atualizar prescricoes vinculadas */

		if (qt_prescricao_w > 0) then
			update	prescr_medica
			set	nr_seq_agecons = nr_seq_destino_p
			where	nr_seq_agecons = nr_seq_origem_p;
		end if;
		
		select	count(*)
		into STRICT	qt_same_pront_w
		from	same_solic_pront
		where	nr_seq_agecons	= nr_seq_origem_p;
		
		if (qt_same_pront_w > 0) then
			update	same_solic_pront
			set	nr_seq_agecons = nr_seq_destino_p
			where	nr_seq_agecons = nr_seq_origem_p;
		end if;

		/* gerar historico */

		atrib_oldvalue_w := substr(obter_nome_agenda_cons(cd_agenda_w),1,50);
		atrib_newvalue_w := substr(obter_nome_agenda_cons(cd_agenda_destino_w),1,50);

		select	max(ds_motivo)
		into STRICT	ds_motivo_w
		from	agenda_motivo
		where	nr_sequencia = nr_seq_motivo_p;
		
		ds_texto_w := wheb_mensagem_pck.get_texto(791001,
							'NM_AGENDA_OLD='||atrib_oldvalue_w||
							';HR_INICIO='||to_char(hr_inicio_w, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)))||
							';NM_AGENDA_NEW='||atrib_newvalue_w||
							';HR_DESTINO='||to_char(hr_destino_w, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p)))||
							';DS_MOTIVO='||ds_motivo_w|| ' '||ds_motivo_p);		
		
		CALL gerar_agenda_consulta_hist(cd_agenda_destino_w,nr_seq_origem_p,'T',nm_usuario_p,ds_texto_w,cd_pessoa_fisica_w,nm_paciente_w,hr_destino_w);
		CALL gerar_agenda_consulta_hist(cd_agenda_destino_w,nr_seq_destino_p,'T',nm_usuario_p,ds_texto_w,cd_pessoa_fisica_w,nm_paciente_w,hr_destino_w);
		
				
		ie_canc_agenda_transf_w := obter_param_usuario(821, 180, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_canc_agenda_transf_w);
				
				
		if (ie_canc_agenda_transf_w = 'N') then
		
			select	count(*)
			into STRICT	qt_integrada_w
			from	agenda_integrada_item
			where	nr_seq_agenda_cons	= nr_seq_origem_p;
			
			if (qt_integrada_w > 0) then
				ie_canc_agenda_transf_w	:= 'S';
			end if;
			
		end if;
		
		if (ie_canc_agenda_transf_w = 'S') then	
			update	agenda_consulta
			set		ie_status_agenda		= 'C',
					nm_usuario_status		= nm_usuario_p,
					dt_status				= clock_timestamp(),
					dt_cancelamento			= clock_timestamp(),
					ds_motivo_status		= wheb_mensagem_pck.get_texto(790940) || ' - ' || to_char(hr_destino_w, pkg_date_formaters.localize_mask('short', pkg_date_formaters.getUserLanguageTag(cd_estabelecimento_p, nm_usuario_p))),
					nm_usuario				= nm_usuario_p,
					ie_transferido			= 'S'
			where	nr_sequencia			= nr_seq_origem_p;
		else
			/* excluir registro origem */

			delete from agenda_consulta
			where nr_sequencia = nr_seq_origem_p;
		end if;
	end if;
end if;

commit;

ds_retorno_p	:= ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_cop_trans_agenda_cons (cd_estabelecimento_p bigint, nr_seq_origem_p bigint, nr_seq_destino_p bigint, ie_acao_p text, nr_seq_motivo_p bigint, ds_motivo_p text, nm_usuario_p text, ds_retorno_p INOUT text, nr_seq_ageint_p bigint default null, hr_agenda_p timestamp default null, cd_medico_marcacao_p text default null) FROM PUBLIC;

