-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_confirmacao_v40 ( nr_seq_execucao_p bigint, cd_estabelecimento_p bigint, ie_tipo_resposta_p text, nm_usuario_p text) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar a transação de confirmação do PTU, via SCS.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_unimed_exec_w		smallint;
cd_unimed_benef_w		smallint;
nr_seq_execucao_w		bigint;
nr_seq_origem_w			bigint;
ie_tipo_cliente_w		varchar(15);
nr_seq_ped_audi_w		bigint;
nr_seq_requisicao_w		bigint;
nr_seq_guia_w			bigint;
nr_seq_auditoria_w		bigint;
nr_seq_insistencia_w		bigint;
nr_seq_cancelamento_w		bigint;
qt_registros_w			bigint;


BEGIN

if (ie_tipo_resposta_p	= 'RA') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_auditoria_w
	from	ptu_resposta_auditoria
	where	nr_seq_execucao	= nr_seq_execucao_p;

  select	count(1)
	into STRICT	qt_registros_w
	from	ptu_confirmacao
	where	nr_seq_execucao	= nr_seq_execucao_p
	and	ie_enviado	= 'N';

	if (qt_registros_w	> 0) then
		update	ptu_confirmacao
		set	ie_enviado	= 'S'
		where	nr_seq_execucao	= nr_seq_execucao_p
		and	ie_enviado	= 'N';
	end if;

	select	cd_unimed_executora,
		cd_unimed_beneficiario,
		nr_seq_origem,
		ie_tipo_cliente,
		nr_seq_guia,
		nr_seq_requisicao
	into STRICT	cd_unimed_exec_w,
		cd_unimed_benef_w,
		nr_seq_origem_w,
		ie_tipo_cliente_w,
		nr_seq_guia_w,
		nr_seq_requisicao_w
	from	ptu_resposta_auditoria
	where	nr_sequencia	= nr_seq_auditoria_w;

	nr_seq_execucao_w	:= nr_seq_execucao_p;
elsif (ie_tipo_resposta_p	= 'PI') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_insistencia_w
	from	ptu_pedido_insistencia
	where	nr_seq_origem	= nr_seq_execucao_p;

	select	count(1)
	into STRICT	qt_registros_w
	from	ptu_confirmacao
	where	nr_seq_origem	= nr_seq_execucao_p
	and	ie_enviado	= 'N';

	if (qt_registros_w	> 0) then
		update	ptu_confirmacao
		set	ie_enviado	= 'S'
		where	nr_seq_origem	= nr_seq_execucao_p
		and	ie_enviado	= 'N';
	end if;

	select	cd_unimed_executora,
		cd_unimed_beneficiario,
		nr_seq_execucao,
		ie_tipo_cliente,
		nr_seq_guia,
		nr_seq_requisicao
	into STRICT	cd_unimed_exec_w,
		cd_unimed_benef_w,
		nr_seq_execucao_w,
		ie_tipo_cliente_w,
		nr_seq_guia_w,
		nr_seq_requisicao_w
	from	ptu_pedido_insistencia
	where	nr_sequencia	= nr_seq_insistencia_w;

	nr_seq_origem_w	:= nr_seq_execucao_p;
elsif (ie_tipo_resposta_p	= 'C') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_cancelamento_w
	from	ptu_cancelamento
	where	nr_seq_origem	= nr_seq_execucao_p;

	if (coalesce(nr_seq_cancelamento_w::text, '') = '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_cancelamento_w
		from	ptu_cancelamento
		where	nr_seq_execucao	= nr_seq_execucao_p;
	end if;

	select	cd_unimed_executora,
		cd_unimed_beneficiario,
		nr_seq_execucao,
		ie_tipo_cliente,
		nr_seq_guia,
		nr_seq_requisicao
	into STRICT	cd_unimed_exec_w,
		cd_unimed_benef_w,
		nr_seq_execucao_w,
		ie_tipo_cliente_w,
		nr_seq_guia_w,
		nr_seq_requisicao_w
	from	ptu_cancelamento
	where	nr_sequencia	= nr_seq_cancelamento_w;

	nr_seq_origem_w	:= nr_seq_execucao_p;
end if;

if (ie_tipo_resposta_p	in ('PI','C')) then
	if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
		CALL pls_guia_gravar_historico(nr_seq_guia_w,2,'Enviada a confirmação de recebimento para a Unimed '||cd_unimed_exec_w,'',nm_usuario_p);
	elsif (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
		CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w,'L','Enviada a confirmação de recebimento para a Unimed '||cd_unimed_exec_w,null,nm_usuario_p);
	end if;
elsif (ie_tipo_resposta_p	= 'RA') then
	if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
		CALL pls_guia_gravar_historico(nr_seq_guia_w,2,'Enviada a confirmação de recebimento para a Unimed '||cd_unimed_benef_w,'',nm_usuario_p);
	elsif (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
		CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w,'L','Enviada a confirmação de recebimento para a Unimed '||cd_unimed_benef_w,null,nm_usuario_p);
	end if;
end if;

insert	into ptu_confirmacao(nr_sequencia, cd_transacao, ie_tipo_cliente,
	 cd_unimed_executora, cd_unimed_beneficiario, nr_seq_execucao,
	 dt_atualizacao, nm_usuario, nr_seq_origem,
	 nr_seq_requisicao, nr_seq_guia, ie_tipo_identificador,
	 ie_tipo_resposta, ie_enviado, nm_usuario_nrec,
	 dt_atualizacao_nrec)
values (nextval('ptu_confirmacao_seq'), '00309', ie_tipo_cliente_w,
	 cd_unimed_exec_w, cd_unimed_benef_w, nr_seq_execucao_w,
	 clock_timestamp(), nm_usuario_p, nr_seq_origem_w,
	 nr_seq_requisicao_w, nr_seq_guia_w, 1,
	 ie_tipo_resposta_p, 'N', nm_usuario_p,
	 clock_timestamp());

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_confirmacao_v40 ( nr_seq_execucao_p bigint, cd_estabelecimento_p bigint, ie_tipo_resposta_p text, nm_usuario_p text) FROM PUBLIC;

