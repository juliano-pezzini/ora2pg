-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_import_cid_grupo ( ie_tipo_import_p text, dt_importacao_p timestamp, nm_usuario_p text) AS $body$
DECLARE

					 
cd_categoria_inicial_w		cid_grupo.cd_categoria_inicial%type;
cd_categoria_final_w		cid_grupo.cd_categoria_final%type;
cd_especialidade_w		cid_grupo.cd_especialidade%type;
ds_grupo_cid_w			cid_grupo.ds_grupo_cid%type;
ds_abrev_grupo_cid_w		cid_grupo.ds_abrev_grupo_cid%type;
qt_grupo_w			bigint := 0;
qt_cid_w			bigint := 0;
ds_erro_w			varchar(2000);

--CATINIC;CATFIM;DESCRICAO;DESCRABREV; 
 
C01 CURSOR FOR 
	SELECT	substr(obter_valor_campo_separador(ds_conteudo,1,';'),1,10) cd_categoria_inicial, 
		substr(obter_valor_campo_separador(ds_conteudo,2,';'),1,10) cd_categoria_final, 
		substr(obter_valor_campo_separador(ds_conteudo,3,';'),1,255) ds_grupo_cid, 
		substr(obter_valor_campo_separador(ds_conteudo,4,';'),1,100) ds_abrev_grupo_cid 
	from	w_sus_importacao_cid 
	where	nm_usuario		= nm_usuario_p 
	and	ie_tipo_importacao		= ie_tipo_import_p 
	and	trunc(dt_importacao)	= trunc(dt_importacao_p) 
	order by	ds_conteudo;
	
type 		fetch_array is table of c01%rowtype;
s_array 	fetch_array;
i		integer := 1;
type vetor is table of fetch_array index by integer;
vetor_c01_w	vetor;
					
BEGIN 
 
open c01;
loop 
fetch c01 bulk collect into s_array limit 100000;
	vetor_c01_w(i) := s_array;
	i := i + 1;
EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;
 
for i in 1..vetor_c01_w.count loop 
	begin 
	s_array := vetor_c01_w(i);
	for z in 1..s_array.count loop 
		begin 
		 
		cd_categoria_inicial_w		:= s_array[z].cd_categoria_inicial;
		cd_categoria_final_w		:= s_array[z].cd_categoria_final;
		ds_grupo_cid_w			:= s_array[z].ds_grupo_cid;
		ds_abrev_grupo_cid_w		:= s_array[z].ds_abrev_grupo_cid;
		 
		if (cd_categoria_inicial_w <> 'GRU') then 
			begin 
			 
			select 	count(1) 
			into STRICT	qt_grupo_w 
			from 	cid_grupo 
			where	cd_categoria_inicial = cd_categoria_inicial_w  LIMIT 1;
		 
			if (qt_grupo_w = 0) then 
				begin 
				 
				begin 
				select	coalesce(max(cd_especialidade_cid),'X') 
				into STRICT	cd_especialidade_w 
				from	cid_especialidade 
				where	cd_categoria_inicial_w between cd_categ_inicial and cd_categ_final;			
				exception 
				when others then 
					cd_especialidade_w := 'X';
				end;
				 
				if (cd_especialidade_w <> 'X') then 
					begin 
					insert into cid_grupo( 
						cd_categoria_inicial, 
						cd_categoria_final, 
						cd_especialidade, 
						ds_grupo_cid, 
						dt_atualizacao, 
						nm_usuario, 
						ds_abrev_grupo_cid, 
						ie_situacao, 
						nr_sequencia) 
					values (	cd_categoria_inicial_w, 
						cd_categoria_final_w, 
						cd_especialidade_w, 
						ds_grupo_cid_w, 
						clock_timestamp(), 
						nm_usuario_p, 
						ds_abrev_grupo_cid_w,						 
						'A', 
						nextval('cid_grupo_seq'));
					end;
				end if;
				 
				end;
			else 
				begin 
				 
				begin 
				select	coalesce(max(cd_especialidade_cid),'X') 
				into STRICT	cd_especialidade_w 
				from	cid_especialidade 
				where	cd_categoria_inicial_w between cd_categ_inicial and cd_categ_final;			
				exception 
				when others then 
					cd_especialidade_w := 'X';
				end;
				 
				if (cd_especialidade_w <> 'X') then 
					begin 
					update 	cid_grupo 
					set 	cd_especialidade	= cd_especialidade_w, 
						ds_grupo_cid		= ds_grupo_cid_w, 
						ds_abrev_grupo_cid	= ds_abrev_grupo_cid_w, 
						dt_atualizacao		= clock_timestamp(), 
						nm_usuario		= nm_usuario_p 
					where	substr(cd_categoria_inicial,1,3) = cd_categoria_inicial_w;				
					end;
				end if;			
				 
				end;
			end if;
		 
			commit;
		 
			end;
		end if;		
		 
		end;
	end loop;
	end;
end loop;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_import_cid_grupo ( ie_tipo_import_p text, dt_importacao_p timestamp, nm_usuario_p text) FROM PUBLIC;

