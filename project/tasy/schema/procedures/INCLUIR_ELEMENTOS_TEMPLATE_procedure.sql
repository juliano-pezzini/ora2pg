-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE incluir_elementos_template ( nr_seq_template_p bigint, ds_lista_arquetipos_p text, ds_lista_elementos_p text, nm_usuario_p text) AS $body$
DECLARE


ds_lista_elementos_w		varchar(32000);
ds_lista_arquetipos_w		varchar(32000);
tam_lista_w			bigint;
ie_pos_virgula_w		smallint	:= 0;
nr_seq_elemento_w		bigint;
nr_seq_arquetipo_w		bigint;
nr_seq_apres_w			bigint;
nr_sequencia_w			bigint;

ds_elemento_w			varchar(32000);
qt_tam_tela_w			bigint;
qt_tam_grid_w			integer;
ds_label_tela_w			varchar(50);
ds_label_grid_w			varchar(50);
qt_altura_w			integer;
ds_mascara_w			varchar(20);
vl_minimo_w			double precision;
vl_maximo_w			double precision;

C01 CURSOR FOR
	SELECT	nr_seq_elemento
	from	ehr_arq_elemento
	where	nr_seq_arquetipo = nr_seq_arquetipo_w;


BEGIN

ds_lista_elementos_w	:= trim(both ds_lista_elementos_p);

if (ds_lista_elementos_w IS NOT NULL AND ds_lista_elementos_w::text <> '') then
	if ( substr(ds_lista_elementos_w, -1) <> ',') then
		ds_lista_elementos_w := ds_lista_elementos_w || ',';
	end if;

	WHILE(ds_lista_elementos_w IS NOT NULL AND ds_lista_elementos_w::text <> '') LOOP
		begin

		tam_lista_w			:=	length(ds_lista_elementos_w);
		ie_pos_virgula_w		:=	position(',' in ds_lista_elementos_w);

		if (ie_pos_virgula_w <> 0) then
			nr_seq_elemento_w	:= (substr(ds_lista_elementos_w,1,(ie_pos_virgula_w - 1)))::numeric;
			ds_lista_elementos_w	:= substr(ds_lista_elementos_w,(ie_pos_virgula_w + 1),tam_lista_w);
		end if;

		select	ds_elemento,
			qt_tam_tela,
			qt_tam_grid,
			ds_label_tela,
			ds_label_grid,
			qt_altura,
			ds_mascara,
			vl_minimo,
			vl_maximo,
			nr_seq_apres
		into STRICT	ds_elemento_w,
			qt_tam_tela_w,
			qt_tam_grid_w,
			ds_label_tela_w,
			ds_label_grid_w,
			qt_altura_w,
			ds_mascara_w,
			vl_minimo_w,
			vl_maximo_w,
			nr_seq_apres_w
		from	ehr_elemento
		where	nr_sequencia	= nr_seq_elemento_w;


		select	nextval('ehr_template_conteudo_seq')
		into STRICT	nr_sequencia_w
		;

		/*select	nvl(max(nr_seq_apres),0) + 10
		into	nr_seq_apres_w
		from	ehr_template_conteudo
		where	nr_seq_template	= nr_seq_template_p;
		*/
		insert	into ehr_template_conteudo(
			nr_sequencia,
			nr_seq_template,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_elemento,
			nr_seq_apres,
			ie_obrigatorio,
			ie_readonly,
			ie_tabstop,
			ds_elemento,
			qt_tamanho,
			qt_tam_grid,
			ds_label,
			ds_label_grid,
			qt_altura,
			ds_mascara,
			vl_minimo,
			vl_maximo,
			ie_opcional,
			ie_vazio)
		values (	nr_sequencia_w,
			nr_seq_template_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_elemento_w,
			nr_seq_apres_w,
			'N',
			'N',
			'S',
			ds_elemento_w,
			qt_tam_tela_w,
			qt_tam_grid_w,
			ds_label_tela_w,
			ds_label_grid_w,
			qt_altura_w,
			ds_mascara_w,
			vl_minimo_w,
			vl_maximo_w,
			'N',
			'S');
		end;
	END loop;
end if;

ie_pos_virgula_w := 0;
tam_lista_w := 0;

ds_lista_arquetipos_w	:= ds_lista_arquetipos_p;

if (ds_lista_arquetipos_w IS NOT NULL AND ds_lista_arquetipos_w::text <> '') then
	WHILE(ds_lista_arquetipos_w IS NOT NULL AND ds_lista_arquetipos_w::text <> '') LOOP
		begin
		tam_lista_w			:=	length(ds_lista_arquetipos_w);
		ie_pos_virgula_w		:=	position(',' in ds_lista_arquetipos_w);

		if (ie_pos_virgula_w <> 0) then
			nr_seq_arquetipo_w	:= (substr(ds_lista_arquetipos_w,1,(ie_pos_virgula_w - 1)))::numeric;
			ds_lista_arquetipos_w	:= substr(ds_lista_arquetipos_w,(ie_pos_virgula_w + 1),tam_lista_w);
		end if;

		open C01;
		loop
		fetch C01 into
			nr_seq_elemento_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin

			select	ds_elemento,
				qt_tam_tela,
				qt_tam_grid,
				ds_label_tela,
				ds_label_grid,
				qt_altura,
				ds_mascara,
				vl_minimo,
				vl_maximo,
				nr_seq_apres
			into STRICT	ds_elemento_w,
				qt_tam_tela_w,
				qt_tam_grid_w,
				ds_label_tela_w,
				ds_label_grid_w,
				qt_altura_w,
				ds_mascara_w,
				vl_minimo_w,
				vl_maximo_w,
				nr_seq_apres_w
			from	ehr_elemento
			where	nr_sequencia	= nr_seq_elemento_w;


			select	nextval('ehr_template_conteudo_seq')
			into STRICT	nr_sequencia_w
			;

			/*select	nvl(max(nr_seq_apres),0) + 10
			into	nr_seq_apres_w
			from	ehr_template_conteudo
			where	nr_seq_template	= nr_seq_template_p;
			*/
			insert	into ehr_template_conteudo(
				nr_sequencia,
				nr_seq_template,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_elemento,
				nr_seq_apres,
				ds_elemento,
				qt_tamanho,
				qt_tam_grid,
				ds_label,
				ds_label_grid,
				qt_altura,
				ds_mascara,
				vl_minimo,
				vl_maximo,
				ie_obrigatorio,
				ie_readonly,
				ie_tabstop,
				ie_opcional,
				ie_vazio)
			values (	nr_sequencia_w,
				nr_seq_template_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_elemento_w,
				nr_seq_apres_w,
				'N',
				'N',
				'S',
				ds_elemento_w,
				qt_tam_tela_w,
				qt_tam_grid_w,
				ds_label_tela_w,
				ds_label_grid_w,
				qt_altura_w,
				ds_mascara_w,
				vl_minimo_w,
				vl_maximo_w,
				'N',
				'S');
			end;
		end loop;
		close C01;

		end;
	END loop;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE incluir_elementos_template ( nr_seq_template_p bigint, ds_lista_arquetipos_p text, ds_lista_elementos_p text, nm_usuario_p text) FROM PUBLIC;

