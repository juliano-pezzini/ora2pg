-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (ds_dias_aplicacao varchar(255));


CREATE OR REPLACE PROCEDURE atualizar_dose_onc_orcamento (nr_seq_orcamento_p bigint, nm_usuario_p text, nr_seq_mat_orcamento_p bigint default null) AS $body$
DECLARE


qt_mg_carboplatina_w		double precision;
cd_pessoa_fisica_w		varchar(10);
qt_peso_w			double precision;
qt_superficie_corporea_w	double precision;
ie_calcula_preenchido_w		varchar(3);
nr_seq_atendimento_w		bigint;
ie_atualizar_ciclos_w		varchar(10);

nr_sequencia_w			bigint;
ds_dias_aplicacao_w		varchar(4000);
ds_ciclos_aplicacao_w		orcamento_paciente_mat.ds_ciclos_aplicacao%type;
qt_dias_aplicacao_w		bigint;
qt_ciclos_aplicacao_w		bigint;
nr_ciclos_w			bigint;
cd_estabelecimento_w		smallint;
ie_dispara_kit_w		varchar(1);
cd_material_w			integer;
qt_lancamento_w			double precision;
cd_kit_material_w		integer;
ie_regra_qtde_fatur_w		varchar(1);
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
qt_original_w			double precision;
qt_material_w			double precision;
dt_orcamento_w			timestamp;
qt_material_regra_w		double precision;

ds_dias_aplic_filtro_w		varchar(255);
ds_ciclos_aplic_filtro_w	orcamento_paciente.ds_ciclos_aplic_filtro%type;
ds_retorno_w 			varchar(255);
qt_dias_w 			numeric(30);
k    				bigint;
p    				bigint;
w    				bigint;
qt_dias_w2 			numeric(30);
ie_regra_apresent_quimio_w	varchar(1);

ds_m2_w 			varchar(30);		
ds_mgc_w 			varchar(30);
ds_kg_w 			varchar(30);
ds_mgcar_w 			varchar(30);

indice_w			bigint := 0;
ds_valido_dias_w		varchar(255) := '0123456789D,- ';
dia_ciclo_w			varchar(255) := '';
type vetor 			is table of campos index by integer;
dias_w 				vetor;
dias_vazio_w 			vetor;
dias_filtro_w			vetor;
indice_dias_w			bigint := 0;
posicao_virg_w			bigint := 0;
indice_loop_w			bigint := 0;

qt_dose_w			orcamento_paciente_mat.qt_dose%type;
cd_unid_med_prescr_w		orcamento_paciente_mat.cd_unid_med_prescr%type;

C01 CURSOR FOR
	SELECT	ds_dias_aplicacao,
		ds_ciclos_aplicacao,
		nr_sequencia,
		cd_material,
		qt_original,
		qt_dose,
		cd_unid_med_prescr
	from	orcamento_paciente_mat
	where	nr_sequencia_orcamento = nr_seq_orcamento_p
	and	((coalesce(nr_seq_mat_orcamento_p::text, '') = '') or (coalesce(nr_sequencia, nr_seq_mat_orcamento_p) = nr_seq_mat_orcamento_p))
	and 	(ds_dias_aplicacao IS NOT NULL AND ds_dias_aplicacao::text <> '')
	order by nr_sequencia;


BEGIN

select	max(obter_superficie_corp_red_ped(qt_peso, qt_altura, coalesce(qt_redutor_sc,0), cd_pessoa_fisica, nm_usuario)),
	max(b.qt_peso),
	max(qt_mg_carboplatina),
	coalesce(max(nr_ciclos),1),
	max(cd_estabelecimento),
	max(cd_convenio),
	max(cd_categoria),
	max(dt_orcamento),
	max(ds_dias_aplic_filtro),
	max(ds_ciclos_aplic_filtro)
into STRICT	qt_superficie_corporea_w,
	qt_peso_w,
	qt_mg_carboplatina_w,
	nr_ciclos_w,
	cd_estabelecimento_w,
	cd_convenio_w,
	cd_categoria_w,
	dt_orcamento_w,
	ds_dias_aplic_filtro_w,
	ds_ciclos_aplic_filtro_w
from 	orcamento_paciente b
where	b.NR_SEQUENCIA_ORCAMENTO = nr_seq_orcamento_p;
	
ie_dispara_kit_w	:= coalesce(Obter_valor_param_usuario(106, 111, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N');
ie_regra_qtde_fatur_w	:= coalesce(Obter_valor_param_usuario(106, 78,obter_perfil_ativo, nm_usuario_p,cd_estabelecimento_w),'N');
ie_regra_apresent_quimio_w:=  coalesce(Obter_valor_param_usuario(106, 135,obter_perfil_ativo, nm_usuario_p,cd_estabelecimento_w),'N');

/* Filtro de dias de aplicacao informado no orcamento - INICIO*/

if (ds_dias_aplic_filtro_w IS NOT NULL AND ds_dias_aplic_filtro_w::text <> '') then

	for indice_w in 1..length(ds_dias_aplic_filtro_w) loop
		dia_ciclo_w	:= substr(upper(ds_dias_aplic_filtro_w), indice_w, 1);
		if (position(dia_ciclo_w in ds_valido_dias_w) = 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1084612);
		end if;
	end loop;

	while (ds_dias_aplic_filtro_w IS NOT NULL AND ds_dias_aplic_filtro_w::text <> '') loop
		ds_dias_aplic_filtro_w := substr(ds_dias_aplic_filtro_w, position('D' in ds_dias_aplic_filtro_w) + 1, length(ds_dias_aplic_filtro_w));		
		posicao_virg_w	:= position('D' in ds_dias_aplic_filtro_w);
		indice_dias_w := indice_dias_w + 1;
		
		if (posicao_virg_w = 0) then
			dias_filtro_w[indice_dias_w].ds_dias_aplicacao	:= 'D' || somente_numero_real(substr(ds_dias_aplic_filtro_w,1,length(ds_dias_aplic_filtro_w)));
			ds_dias_aplic_filtro_w := '';
		else
			dias_filtro_w[indice_dias_w].ds_dias_aplicacao	:= 'D' || somente_numero_real(substr(ds_dias_aplic_filtro_w,1,posicao_virg_w - 2));
			
			ds_dias_aplic_filtro_w := substr(ds_dias_aplic_filtro_w,posicao_virg_w, length(ds_dias_aplic_filtro_w));
		end if;
		
		if (position('D' in dias_filtro_w[indice_dias_w].ds_dias_aplicacao) = 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1084612);
		end if;
		indice_loop_w := indice_loop_w + 1;
		if (indice_loop_w > 100) then
			exit;
		end if;
	end loop;

	qt_dias_w	:= dias_filtro_w.count;
	
	open C01;
	loop
	fetch C01 into	
		ds_dias_aplicacao_w,
		ds_ciclos_aplicacao_w,
		nr_sequencia_w,
		cd_material_w,
		qt_original_w,
		qt_dose_w,
		cd_unid_med_prescr_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		for indice_w in 1..length(ds_dias_aplicacao_w) loop
			dia_ciclo_w	:= substr(upper(ds_dias_aplicacao_w), indice_w, 1);
			if (position(dia_ciclo_w in ds_valido_dias_w) = 0) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(1084612);
			end if;
		end loop;
		
		indice_dias_w	:= 0;
		indice_loop_w	:= 0;
		dias_w		:= dias_vazio_w;

		while (ds_dias_aplicacao_w IS NOT NULL AND ds_dias_aplicacao_w::text <> '') loop
			ds_dias_aplicacao_w := substr(ds_dias_aplicacao_w, position('D' in ds_dias_aplicacao_w) + 1, length(ds_dias_aplicacao_w));		
			posicao_virg_w	:= position('D' in ds_dias_aplicacao_w);
			indice_dias_w := indice_dias_w + 1;
			
			if (posicao_virg_w = 0) then
				dias_w[indice_dias_w].ds_dias_aplicacao	:= 'D' || somente_numero_real(substr(ds_dias_aplicacao_w,1,length(ds_dias_aplicacao_w)));
				ds_dias_aplicacao_w := '';
			else
				dias_w[indice_dias_w].ds_dias_aplicacao	:= 'D' || somente_numero_real(substr(ds_dias_aplicacao_w,1,posicao_virg_w - 2));
				
				ds_dias_aplicacao_w := substr(ds_dias_aplicacao_w,posicao_virg_w, length(ds_dias_aplicacao_w));
			end if;
			
			if (position('D' in dias_w[indice_dias_w].ds_dias_aplicacao)	= 0) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(1084612);
			end if;
			indice_loop_w := indice_loop_w + 1;
			if (indice_loop_w > 100) then
				exit;
			end if;
		end loop;
		
		qt_dias_w2	:= dias_w.count;
		ds_retorno_w	:= '';		
				
		for k in 1.. qt_dias_w2 loop
			
			begin

			for p in 1.. qt_dias_w loop
				
				begin
				
				if (dias_filtro_w[p].ds_dias_aplicacao = dias_w[k].ds_dias_aplicacao) then
					if (coalesce(ds_retorno_w::text, '') = '') then
						ds_retorno_w := dias_filtro_w[p].ds_dias_aplicacao;
					else
						ds_retorno_w := ds_retorno_w || ' ' || dias_filtro_w[p].ds_dias_aplicacao;
					end if;
				end if;
				
				end;
			
			end loop;
			
			end;
		
		end loop;

		if (ds_retorno_w IS NOT NULL AND ds_retorno_w::text <> '') then
			
			update	orcamento_paciente_mat
			set 	ds_dias_aplic_orig = ds_dias_aplicacao,
				ds_dias_aplicacao  = ds_retorno_w
			where 	nr_sequencia_orcamento = nr_seq_orcamento_p
			and 	nr_sequencia = nr_sequencia_w;
		
		else
		
			delete from orcamento_paciente_mat
			where 	nr_sequencia_orcamento = nr_seq_orcamento_p
			and 	nr_sequencia = nr_sequencia_w;
			
		end if;
		
		end;
	end loop;
	close C01;
	
	commit;
	
end if;
/* Filtro de dias de aplicacao informado no orcamento - FIM*/

if (ds_ciclos_aplic_filtro_w IS NOT NULL AND ds_ciclos_aplic_filtro_w::text <> '') and (ie_regra_apresent_quimio_w = 'C') then
	CALL atualizar_ciclo_aplic_orc_onc(nr_seq_orcamento_p, nr_seq_mat_orcamento_p, nm_usuario_p);
end if;

/* atualizar todos os medicamentos com dose padrao */


/* atualizar os medicamentos com base na superficie corporal */

ds_m2_w := obter_unid_med_usua('m2');
ds_mgc_w := obter_unid_med_usua('mgc');
ds_kg_w := obter_unid_med_usua('kg');
ds_mgcar_w := obter_unid_med_usua('mgcar');

update 	ORCAMENTO_PACIENTE_MAT a
set 	a.cd_unid_med_prescr =  
               (SELECT b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unidade_medida = b.cd_unidade_medida),
	a.qt_material =  	obter_conversao_unid_med_cons(	a.cd_material, 
								(select b.cd_unidade_med_princ  
								from 	unidade_medida b  
								where 	a.cd_unidade_medida = b.cd_unidade_medida), 
								a.qt_dose * qt_superficie_corporea_w)
where 	a.nr_sequencia_orcamento = nr_seq_orcamento_p
and	((coalesce(nr_seq_mat_orcamento_p::text, '') = '') or (coalesce(a.nr_sequencia, nr_seq_mat_orcamento_p) = nr_seq_mat_orcamento_p))
and	coalesce(a.ie_regra_apresent_onc,'N') <> 'S'
and exists (select b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unidade_medida = b.cd_unidade_medida  
                  and b.cd_unidade_medida <> b.cd_unidade_med_princ  
                  and lower(b.cd_unidade_med_sec) = ds_m2_w)
and	(qt_superficie_corporea_w IS NOT NULL AND qt_superficie_corporea_w::text <> '');


/* atualizar os medicamentos com base no peso */

update ORCAMENTO_PACIENTE_MAT a
set 	a.cd_unid_med_prescr =  
               (SELECT b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unidade_medida = b.cd_unidade_medida),
	a.qt_material = 	obter_conversao_unid_med_cons(	a.cd_material, 
								(select b.cd_unidade_med_princ  
								from 	unidade_medida b  
								where 	a.cd_unidade_medida = b.cd_unidade_medida),
								a.qt_dose * qt_peso_w)
where 	a.nr_sequencia_orcamento = nr_seq_orcamento_p
and	((coalesce(nr_seq_mat_orcamento_p::text, '') = '') or (coalesce(a.nr_sequencia, nr_seq_mat_orcamento_p) = nr_seq_mat_orcamento_p))
and	coalesce(a.ie_regra_apresent_onc,'N') <> 'S'
and exists (select b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unidade_medida = b.cd_unidade_medida  
                  and b.cd_unidade_medida <> b.cd_unidade_med_princ  
                  and lower(b.cd_unidade_med_sec) = ds_kg_w)
and	(qt_peso_w IS NOT NULL AND qt_peso_w::text <> '');


/* pegar o valor da carboplatina */




--qt_mg_carboplatina_w	:= obter_qt_mg_carboplatina(nr_seq_paciente_p);



/* atualizar os medicamentos com base na carboplatina */

update ORCAMENTO_PACIENTE_MAT a
set 	a.qt_material =   
			obter_conversao_unid_med_cons(	a.cd_material, 
							(SELECT b.cd_unidade_med_princ  
							from 	unidade_medida b  
							where 	a.cd_unidade_medida = b.cd_unidade_medida),
							(select a.qt_dose * coalesce(qt_mg_carboplatina_w,1)
							from 	orcamento_paciente b  
							where 	a.nr_sequencia_orcamento = b.nr_sequencia_orcamento)),
        a.cd_unid_med_prescr =  
               (select b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unidade_medida = b.cd_unidade_medida)  
where	a.nr_sequencia_orcamento = nr_seq_orcamento_p
and	((coalesce(nr_seq_mat_orcamento_p::text, '') = '') or (coalesce(a.nr_sequencia, nr_seq_mat_orcamento_p) = nr_seq_mat_orcamento_p))
and	coalesce(a.ie_regra_apresent_onc,'N') <> 'S'
and 	exists (select b.cd_unidade_med_princ  
		from unidade_medida b
		where a.cd_unidade_medida = b.cd_unidade_medida
		and b.cd_unidade_medida <> b.cd_unidade_med_princ
		and lower(b.cd_unidade_med_sec) = ds_mgc_w);
		
		  
update ORCAMENTO_PACIENTE_MAT a  
set 	a.qt_material =   
			obter_conversao_unid_med_cons(	a.cd_material, 
							(SELECT b.cd_unidade_med_princ  
							from 	unidade_medida b  
							where 	a.cd_unidade_medida = b.cd_unidade_medida), 
							(select coalesce(qt_mg_carboplatina_w,1)
							from 	orcamento_paciente b  
							where 	a.nr_sequencia_orcamento = b.nr_sequencia_orcamento)),
        a.cd_unid_med_prescr =  
               (select b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unidade_medida = b.cd_unidade_medida) 
where	a.nr_sequencia_orcamento = nr_seq_orcamento_p
and	((coalesce(nr_seq_mat_orcamento_p::text, '') = '') or (coalesce(a.nr_sequencia, nr_seq_mat_orcamento_p) = nr_seq_mat_orcamento_p))
and	coalesce(a.ie_regra_apresent_onc,'N') <> 'S'
and	exists (select b.cd_unidade_med_princ  
		from unidade_medida b
		where a.cd_unidade_medida = b.cd_unidade_medida
                and b.cd_unidade_medida <> b.cd_unidade_med_princ
                and lower(b.cd_unidade_med_sec) = ds_mgcar_w);

		
/*update ORCAMENTO_PACIENTE_MAT a  
set 	a.cd_unid_med_prescr 	= (	select	c.cd_unidade_med_princ  
					from	unidade_medida c  
					where	a.cd_unidade_medida = c.cd_unidade_medida),
	a.qt_material	= obter_conversao_unid_med_cons(	a.cd_material, 
								(select	c.cd_unidade_med_princ  
								from	unidade_medida c  
								where	a.cd_unidade_medida = c.cd_unidade_medida), 
								a.qt_dose)
where 	a.nr_sequencia_orcamento = nr_seq_orcamento_p
and	((nr_seq_mat_orcamento_p is null) or (nvl(a.nr_sequencia, nr_seq_mat_orcamento_p) = nr_seq_mat_orcamento_p))
and	exists	(select b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unidade_medida = b.cd_unidade_medida  
                and b.cd_unidade_medida <> b.cd_unidade_med_princ  
                and b.cd_unidade_med_sec = a.cd_unidade_medida)
and	a.qt_dose > 0;*/


-- Retirado OS 393136
update 	ORCAMENTO_PACIENTE_MAT a  
set 	a.cd_unid_med_prescr 	= coalesce(a.cd_unidade_medida, a.cd_unid_med_prescr),
	a.qt_material	= obter_conversao_unid_med_cons(a.cd_material, a.cd_unidade_medida, a.qt_dose)
where 	a.nr_sequencia_orcamento = nr_seq_orcamento_p
and	((coalesce(nr_seq_mat_orcamento_p::text, '') = '') or (coalesce(a.nr_sequencia, nr_seq_mat_orcamento_p) = nr_seq_mat_orcamento_p))
and	coalesce(a.ie_regra_apresent_onc,'N') <> 'S'
and not exists (SELECT b.cd_unidade_med_princ  
                from unidade_medida b  
                where a.cd_unidade_medida = b.cd_unidade_medida  
                and b.cd_unidade_medida <> b.cd_unidade_med_princ  
                and lower(b.cd_unidade_med_sec) in (ds_mgcar_w, ds_m2_w, ds_kg_w, ds_mgc_w )) -- OS 393136, incluido o mgcar
and	a.qt_dose > 0;

open C01;
loop
fetch C01 into	
	ds_dias_aplicacao_w,
	ds_ciclos_aplicacao_w,
	nr_sequencia_w,
	cd_material_w,
	qt_original_w,
	qt_dose_w,
	cd_unid_med_prescr_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	qt_dias_aplicacao_w	:= obter_qt_dias_aplicacao(ds_dias_aplicacao_w);
	qt_ciclos_aplicacao_w	:= obter_qt_ciclos_aplicacao(ds_ciclos_aplicacao_w);
	
	---Arredondar a QTDE para Superior  (1.125 para 2,    1.79 para 2,     3.54 para 4)
	update	orcamento_paciente_mat
	set 	qt_material = CASE WHEN trunc(qt_material)=qt_material THEN  qt_material  ELSE trunc(qt_material) + 1 END ,
		qt_superficie_corporea = qt_superficie_corporea_w
	where 	nr_sequencia_orcamento = nr_seq_orcamento_p
	and 	nr_sequencia = nr_sequencia_w
	and	coalesce(ie_regra_apresent_onc,'N') <> 'S';
	
	update	orcamento_paciente_mat
	set	qt_material = qt_material * coalesce(qt_dias_aplicacao_w, qt_material) * nr_ciclos_w
	where 	nr_sequencia_orcamento = nr_seq_orcamento_p
	and 	nr_sequencia = nr_sequencia_w
	and	coalesce(ie_regra_apresent_onc,'N') <> 'S';
	
	select 	max(qt_material)
	into STRICT	qt_material_w
	from 	orcamento_paciente_mat
	where 	nr_sequencia_orcamento = nr_seq_orcamento_p	
	and 	nr_sequencia = nr_sequencia_w;
	
	if (coalesce(ie_regra_qtde_fatur_w,'N')	= 'S') and (coalesce(qt_original_w::text, '') = '') then
		select	Obter_qt_material_fat_orc(
				cd_estabelecimento_w,
				cd_material_w,
				cd_convenio_w,
				cd_categoria_w,
				null,
				qt_material_w,
				null,
				dt_orcamento_w,
				dt_orcamento_w,
				qt_dose_w,
				cd_unid_med_prescr_w)
		into STRICT	qt_material_regra_w
		;
		
		if (qt_material_w <> qt_material_regra_w) then
			update	orcamento_paciente_mat
			set 	qt_material = qt_material_regra_w,
				qt_original = qt_material_w
			where 	nr_sequencia_orcamento = nr_seq_orcamento_p
			and 	nr_sequencia = nr_sequencia_w;		
		end if;

	end if;

	if (ie_regra_apresent_quimio_w <> 'N') then
		CALL Gerar_Apresent_Orcamento_Onc(nr_seq_orcamento_p, nr_sequencia_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if (ie_dispara_kit_w = 'S') then
	
		select 	coalesce(max(cd_kit_material),0)
		into STRICT	cd_kit_material_w
		from 	material_estab
		where 	cd_material = cd_material_w
		and 	cd_estabelecimento = cd_estabelecimento_w;
				
		if (cd_kit_material_w	<> 0) then
		
			select 	qt_material
			into STRICT	qt_lancamento_w
			from 	orcamento_paciente_mat
			where 	nr_sequencia_orcamento = nr_seq_orcamento_p
			and 	nr_sequencia = nr_sequencia_w;
			
			CALL gerar_kit_material_orc(nr_seq_orcamento_p, qt_lancamento_w, cd_kit_material_w, 0 ,nm_usuario_p,'N', null);
			
		end if;
	
	end if;
		
	end;
end loop;
close C01;

if (coalesce(nr_seq_mat_orcamento_p::text, '') = '')  then
	CALL calcular_orcamento_paciente(nr_seq_orcamento_p, nm_usuario_p, cd_estabelecimento_w);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_dose_onc_orcamento (nr_seq_orcamento_p bigint, nm_usuario_p text, nr_seq_mat_orcamento_p bigint default null) FROM PUBLIC;

