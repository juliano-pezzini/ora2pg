-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_resumo_exame_fis ( nr_seq_pe_prescr_p bigint, nm_usuario_p text, si_rtf_p text default 'Y') AS $body$
DECLARE


nr_sequencia_w_result_w		pe_prescr_item_result.nr_sequencia%type;
dt_atualizacao_w_result_w	pe_prescr_item_result.dt_atualizacao%type;
nm_usuario_w_result_w		pe_prescr_item_result.nm_usuario%type;
nr_seq_item_w_result_w		pe_prescr_item_result.nr_seq_item%type;
nr_seq_result_w_result_w	pe_prescr_item_result.nr_seq_result%type;
nr_seq_prescr_w_result_w	pe_prescr_item_result.nr_seq_prescr%type;
dt_atualizacao_nrec_w_result_w	pe_prescr_item_result.dt_atualizacao_nrec%type;
nm_usuario_nrec_w_result_w	pe_prescr_item_result.nm_usuario_nrec%type;
ds_observacao_w_result_w	pe_prescr_item_result.ds_observacao%type;
nr_seq_topografia_w_result_w	pe_prescr_item_result.nr_seq_topografia%type;
ie_lado_w_result_w		pe_prescr_item_result.ie_lado%type;
qt_ponto_w_result_w		pe_prescr_item_result.qt_ponto%type;

grupo_nr_seq_w_aux_w		pe_tipo_item.nr_sequencia%type;
grupo_nr_seq_w			pe_tipo_item.nr_sequencia%type;
grupo_ds_w			pe_tipo_item.ds_tipo_item%type;

subgrupo_nr_seq_w		pe_item_examinar.nr_sequencia%type;
subgrupo_ds_w			pe_item_examinar.ds_item%type;

item_nr_seq_w			pe_item_resultado.nr_sequencia%type;
item_ds_w			pe_item_resultado.ds_resultado%type;
topografia_ds_w			varchar(100);
lado_ds_w			varchar(100);

nr_seq_pe_prescr_resumo_w	pe_prescr_resumo.nr_sequencia%type;
saida_w				pe_prescr_resumo.ds_resumo%type;

newline_w			varchar(100) := chr(13) || chr(10);
space_subgrupo_w		varchar(100) := '      ';
space_item_w			varchar(100) := '            ';
space_others_w			varchar(100) := '                   ';

ds_fonte_w			varchar(100);
ds_tam_fonte_w			varchar(100);
nr_tam_fonte_w			integer;
cd_perfil_ativo_w		bigint;
cd_estabelecimento_ativo_w	smallint;
ds_cabecalho_w			varchar(32000);
ds_rodape_w			varchar(255);
ds_conteudo_w			varchar(32000);
qt_topografias_w		smallint;
qt_evento_w			smallint;

nr_sequencia_topo_w		bigint;
nr_seq_item_topo_w		bigint;
nr_seq_topografia_topo_w	bigint;
ie_lado_topo_w			varchar(10);
nr_sequencia_evento_w		bigint;
nr_seq_evento_evento_w		bigint;
ds_evento_evento_w		varchar(32000);
eventos_w			varchar(32000);
flag				bigint;
si_rtf_w			varchar(1);

--TODOS OS ITENS (RESULTADOS)
c01 CURSOR FOR
SELECT	nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	nr_seq_item,
	nr_seq_result,
	nr_seq_prescr,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	ds_observacao,
	nr_seq_topografia,
	ie_lado,
	qt_ponto
from	pe_prescr_item_result
where	nr_seq_prescr = nr_seq_pe_prescr_p
order by nr_seq_item, nr_sequencia asc;

--TOPOGRAFIAS MULTIPLAS
c02 CURSOR FOR
SELECT	bb1.nr_sequencia,
	bb1.nr_seq_topografia,
	bb1.ie_lado,
	bb1.nr_seq_item
from	pe_prescr_item_result_topo bb1
where	bb1.nr_seq_item = nr_sequencia_w_result_w
order by nr_sequencia asc;


BEGIN
si_rtf_w := coalesce(si_rtf_p,'Y');
cd_perfil_ativo_w := obter_perfil_ativo;
cd_estabelecimento_ativo_w := obter_estabelecimento_ativo;

ds_fonte_w := Obter_Param_Usuario(281, 5, cd_perfil_ativo_w, nm_usuario_p, cd_perfil_ativo_w, ds_fonte_w);
ds_tam_fonte_w := Obter_Param_Usuario(281, 6, cd_perfil_ativo_w, nm_usuario_p, cd_perfil_ativo_w, ds_tam_fonte_w);
nr_tam_fonte_w := somente_numero(ds_tam_fonte_w) * 2;

select 0 into STRICT grupo_nr_seq_w;
select '' into STRICT grupo_ds_w;
select 0 into STRICT subgrupo_nr_seq_w;
select '' into STRICT subgrupo_ds_w;

open c01;
loop
fetch c01 into
	nr_sequencia_w_result_w,
	dt_atualizacao_w_result_w,
	nm_usuario_w_result_w,
	nr_seq_item_w_result_w,
	nr_seq_result_w_result_w,
	nr_seq_prescr_w_result_w,
	dt_atualizacao_nrec_w_result_w,
	nm_usuario_nrec_w_result_w,
	ds_observacao_w_result_w,
	nr_seq_topografia_w_result_w,
	ie_lado_w_result_w,
	qt_ponto_w_result_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

        topografia_ds_w := null;
        lado_ds_w := null;

        select	MAX(nr_sequencia)
	into STRICT	grupo_nr_seq_w_aux_w
        from	pe_tipo_item
        where	nr_sequencia = (	SELECT	nr_seq_tipo_item
					from	pe_item_tipo_item
					where	nr_seq_item = nr_seq_item_w_result_w);

      --=========== GRUPO ===========
	if (grupo_nr_seq_w <> grupo_nr_seq_w_aux_w) then
		select	nr_sequencia, ds_tipo_item
		into STRICT	grupo_nr_seq_w, grupo_ds_w
		from	pe_tipo_item
		where	nr_sequencia = (	SELECT	nr_seq_tipo_item
						from	pe_item_tipo_item
						where	nr_seq_item = nr_seq_item_w_result_w);

		if (saida_w IS NOT NULL AND saida_w::text <> '') then
			saida_w := saida_w || newline_w;
		end if;

		saida_w := saida_w || '\b ' || grupo_ds_w || '\b0 ';	
		saida_w := saida_w || newline_w;
	end if;

      --=========== SUBGRUPO ===========
	if (subgrupo_nr_seq_w <> nr_seq_item_w_result_w) then
		select	nr_sequencia, ds_item
		into STRICT	subgrupo_nr_seq_w, subgrupo_ds_w
		from	pe_item_examinar
		where	nr_sequencia =  nr_seq_item_w_result_w;

		saida_w := saida_w || space_subgrupo_w || '\u9632   ' || '{\ul\ulc0\rtlch \ltrch\loch ' ||  subgrupo_ds_w || '} ';
		saida_w := saida_w || newline_w;
	end if;

      --=========== ITEM ===========
	select	nr_sequencia,
		ds_resultado
	into STRICT	item_nr_seq_w,
		item_ds_w
	from	pe_item_resultado
	where	nr_sequencia =  nr_seq_result_w_result_w;

	saida_w := saida_w || space_item_w || '- ' || item_ds_w;
	saida_w := saida_w || newline_w;

	select	count(*)
	into STRICT	qt_topografias_w
	from	pe_prescr_item_result_topo
	where	nr_seq_item = nr_sequencia_w_result_w;

      --=========== TOPOGRAFIA (UNICA) ===========
	if (nr_seq_topografia_w_result_w IS NOT NULL AND nr_seq_topografia_w_result_w::text <> '') then
		select	substr(obter_desc_topografia_dor(nr_seq_topografia_w_result_w),1,100)
		into STRICT	topografia_ds_w
		;
	end if;

	if (ie_lado_w_result_w IS NOT NULL AND ie_lado_w_result_w::text <> '') then
		if (nr_seq_topografia_w_result_w IS NOT NULL AND nr_seq_topografia_w_result_w::text <> '') then
			select	topografia_ds_w || ' | '
			into STRICT	topografia_ds_w
			;
		end if;

		select	substr(obter_valor_dominio(1372,ie_lado_w_result_w),1,100)
		into STRICT	lado_ds_w
		;
	end if;

	if	((topografia_ds_w IS NOT NULL AND topografia_ds_w::text <> '') or (lado_ds_w IS NOT NULL AND lado_ds_w::text <> '')) then
		saida_w := saida_w || space_others_w || obter_desc_expressao(300156, '') || ': ' || topografia_ds_w || lado_ds_w;
		saida_w := saida_w || newline_w;
	end if;

      --=========== TOPOGRAFIA (MULTIPLAS) ===========
	if (qt_topografias_w > 0) then
		
		open c02;
		loop
		fetch c02 into
			nr_sequencia_topo_w,
			nr_seq_topografia_topo_w,
			ie_lado_topo_w,
			nr_seq_item_topo_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			topografia_ds_w := null;
			lado_ds_w := null;

			if (nr_seq_topografia_topo_w IS NOT NULL AND nr_seq_topografia_topo_w::text <> '') then
				select	substr(obter_desc_topografia_dor(nr_seq_topografia_topo_w),1,100)
				into STRICT	topografia_ds_w
				;
			end if;

			if (ie_lado_topo_w IS NOT NULL AND ie_lado_topo_w::text <> '') then
				if (nr_seq_topografia_topo_w IS NOT NULL AND nr_seq_topografia_topo_w::text <> '') then
					select	topografia_ds_w || ' | '
					into STRICT	topografia_ds_w
					;
				end if;

				select	substr(obter_valor_dominio(1372,ie_lado_topo_w),1,100)
				into STRICT	lado_ds_w
				;
			end if;

			saida_w := saida_w || space_others_w || obter_desc_expressao(300156, '') || ': ' || topografia_ds_w || lado_ds_w;
			saida_w := saida_w || newline_w;
		end loop;
		close c02;
	end if;

	if (ds_observacao_w_result_w IS NOT NULL AND ds_observacao_w_result_w::text <> '') then
		saida_w := saida_w || space_others_w || obter_desc_expressao(294639, '') || ': ' ||ds_observacao_w_result_w;
		saida_w := saida_w || newline_w;
	end if;
end loop;
close c01;

--EVENTO
select	count(*)
into STRICT	qt_evento_w
from	qua_evento_paciente
where	nr_seq_sae = nr_seq_pe_prescr_p;

if (qt_evento_w > 0) then

	declare
	c03 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_evento,
		ds_evento
	from	qua_evento_paciente
	where	nr_seq_sae = nr_seq_pe_prescr_p 
	order by nr_sequencia asc;
	begin

	if (si_rtf_w = 'Y') then
		eventos_w := '\b ' || obter_desc_expressao(289664, '') || '\b0 ' || ': ' ||newline_w;
	else
		eventos_w := obter_desc_expressao(289664, '') || ': ' ||newline_w;
	end if;

	open c03;
	loop
	fetch c03 into
		nr_sequencia_evento_w,
		nr_seq_evento_evento_w,
		ds_evento_evento_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */

	    eventos_w := eventos_w || space_subgrupo_w || ds_evento_evento_w || newline_w;

	end loop;
	close c03;

	saida_w := eventos_w || newline_w || saida_w;
	end;
end if;

if (si_rtf_w = 'Y') then
	ds_cabecalho_w := '{\rtf1\ansi\ansicpg1252\deff0\deflang1046{\fonttbl{\f0\fswiss\fcharset0 ' || ds_fonte_w || ';}}' ||
				'{\*\generator Msftedit 5.41.15.1507;}\viewkind4\uc1\pard\f0\fs' || nr_tam_fonte_w || ' ';
	ds_rodape_w    := '}';
	saida_w  := ds_cabecalho_w || replace(saida_w, chr(13) || chr(10), ' \par ') || ds_rodape_w;
end if;

select	nextval('pe_prescr_resumo_seq')
into STRICT	nr_seq_pe_prescr_resumo_w
;

delete from pe_prescr_resumo
where nr_seq_pe_prescr = nr_seq_pe_prescr_p;

insert into pe_prescr_resumo(
	ds_resumo,
	dt_atualizacao,
	dt_atualizacao_nrec,
	nm_usuario,
	nm_usuario_nrec,
	nr_seq_pe_prescr,
	nr_sequencia)
values (	saida_w,
	clock_timestamp(),
	clock_timestamp(),
	nm_usuario_p,
	nm_usuario_p,
	nr_seq_pe_prescr_p,
	nr_seq_pe_prescr_resumo_w);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_resumo_exame_fis ( nr_seq_pe_prescr_p bigint, nm_usuario_p text, si_rtf_p text default 'Y') FROM PUBLIC;

