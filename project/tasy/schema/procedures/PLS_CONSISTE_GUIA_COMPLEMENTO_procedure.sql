-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consiste_guia_complemento ( nr_seq_guia_p bigint, nr_seq_prestador_p bigint, nr_seq_segurado_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Realiza a consistencia  de complemento da guia.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  x]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
	
			
cd_item_w			bigint;
cd_grupo_w			bigint;
cd_especialidade_w		bigint;
cd_area_w			bigint;
cd_prestador_w			varchar(30);
cd_prestador_solic_req_w	varchar(30);

ie_tipo_guia_w			varchar(2);
ie_tipo_gat_w			varchar(2);
ie_origem_proced_w		bigint;
ie_origem_proced_ww		bigint;
ie_preco_w			bigint;
ie_tipo_complemento_w		bigint;
ie_tipo_item_w			varchar(2);
ie_exit_w			varchar(2)	:= 'N';
ie_pcmso_w			varchar(2);
ie_grupo_servico_w		varchar(1)	:= 'S';
ie_tipo_atend_tiss_w		varchar(2);
ie_estrut_mat_w			varchar(1);

nr_seq_contrato_w		bigint;
nr_seq_prestador_w		bigint;
nr_seq_regra_w			bigint;
nr_seq_motivo_inc_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_intercambio_w		bigint;

nr_seq_congenere_w		bigint;
nr_seq_material_w		bigint;
nr_seq_retorno_w		bigint:= 0;
nr_seq_requisicao_w		bigint;
nr_seq_prestador_solic_req_w	bigint;
nr_seq_estrut_regra_w		bigint;
nr_seq_grupo_servico_w		bigint;
ie_tipo_segurado_w		pls_segurado.ie_tipo_segurado%type;
ie_tipo_processo_w		pls_guia_plano.ie_tipo_processo%type;
nr_seq_regra_exce_w		pls_regra_conta_compl_ex.nr_sequencia%type;
ie_prioridade_nec_compl_w	pls_parametros.ie_prioridade_nec_compl%type;
ie_origem_execucao_w		pls_guia_plano.ie_origem_execucao%type;

C01 CURSOR FOR
	SELECT 	'P' ie_tipo_item,
		cd_procedimento cd_item,
		ie_origem_proced
	from 	pls_guia_plano_proc
	where	nr_seq_guia = nr_seq_guia_p
	and	ie_status <> 'D'
	
	
union all

	
	SELECT  'M' ie_tipo_item,
		nr_seq_material cd_item,
		null
	from 	pls_guia_plano_mat
	where	nr_seq_guia = nr_seq_guia_p
	and	ie_status <> 'D';
	
C02 CURSOR FOR
	SELECT	nr_sequencia,
		ie_tipo_complemento,
		nr_seq_estrutura_mat,
		nr_seq_grupo_servico
	from	pls_regra_conta_compl
	where	ie_situacao 							= 'A'
	and (coalesce(ie_tipo_guia::text, '') = ''	or ie_tipo_guia			= ie_tipo_guia_w)
	and (coalesce(nr_seq_prestador::text, '') = ''	or nr_seq_prestador		= nr_seq_prestador_w)
	and (coalesce(nr_seq_contrato::text, '') = ''	or nr_seq_contrato		= nr_seq_contrato_w)
	and (coalesce(ie_preco::text, '') = ''	or ie_preco			= ie_preco_w)
	and (coalesce(nr_seq_intercambio::text, '') = ''	or nr_seq_intercambio		= nr_seq_intercambio_w)
	and     (coalesce(cd_procedimento::text, '') = ''	or ((cd_procedimento		= cd_item_w) and (coalesce(ie_origem_proced::text, '') = ''	or ie_origem_proced 		= ie_origem_proced_ww)))
        and (coalesce(cd_grupo_proc::text, '') = '' or cd_grupo_proc		= cd_grupo_w)
        and (coalesce(cd_especialidade::text, '') = ''	or cd_especialidade		= cd_especialidade_w)
        and (coalesce(cd_area_procedimento::text, '') = ''	or cd_area_procedimento		= cd_area_w)
	and (coalesce(cd_prestador::text, '') = '' or cd_prestador 		= cd_prestador_w)
	and (coalesce(cd_prestador_solic::text, '') = '' or cd_prestador_solic 		= cd_prestador_solic_req_w)
	and (coalesce(nr_seq_motivo_inclusao::text, '') = ''	or nr_seq_motivo_inclusao	= nr_seq_motivo_inc_w)
	and (coalesce(nr_seq_congenere::text, '') = ''	or nr_seq_congenere		= nr_seq_congenere_w)
	and (coalesce(nr_seq_material::text, '') = '' or nr_seq_material 		= nr_seq_material_w)
	and (coalesce(ie_tipo_atend_tiss::text, '') = '' or ie_tipo_atend_tiss		= ie_tipo_atend_tiss_w)
	and (coalesce(ie_pcmso::text, '') = ''	or ie_pcmso			= ie_pcmso_w)
	and (coalesce(ie_tipo_segurado::text, '') = '' or ie_tipo_segurado		= ie_tipo_segurado_w)
	and	clock_timestamp()	between(dt_inicio_vigencia) and (fim_dia(coalesce(dt_fim_vigencia, clock_timestamp())))
	and (coalesce(ie_tipo_processo::text, '') = '' or ie_tipo_processo 		= ie_tipo_processo_w)
	and (coalesce(nr_seq_grupo_prestador::text, '') = ''	or pls_obter_se_prestador_grupo(nr_seq_grupo_prestador, nr_seq_prestador_w)	= 'S')
	and (coalesce(ie_origem_execucao::text, '') = '' or ie_origem_execucao		= ie_origem_execucao_w)
	and	((coalesce(ie_aplicacao_guia::text, '') = '')	
	or	(ie_aplicacao_guia	= 'G' AND ie_tipo_gat_w	= 'S')
	or	(ie_aplicacao_guia	= 'N' AND ie_tipo_gat_w	= 'N')
	or (ie_aplicacao_guia	= 'T'))
	order by
		coalesce(cd_area_procedimento,0),
		coalesce(cd_especialidade,0),
		coalesce(cd_grupo_proc,0),
		coalesce(cd_procedimento,0),
		coalesce(nr_seq_estrutura_mat,0),
		coalesce(nr_seq_material,0),
		coalesce(nr_seq_grupo_servico,0);

BEGIN

select	coalesce(max(ie_prioridade_nec_compl), 'S')
into STRICT	ie_prioridade_nec_compl_w
from	pls_parametros
where 	cd_estabelecimento = cd_estabelecimento_p;


update	pls_guia_plano
set	ie_estagio_complemento = 3
where	nr_sequencia = nr_seq_guia_p;	

select	ie_tipo_guia,
	nr_seq_prestador,
	coalesce(ie_tipo_gat,'N'),
	ie_tipo_atend_tiss,
	ie_tipo_processo,
	coalesce(ie_pcmso,'N'),
	ie_origem_execucao
into STRICT	ie_tipo_guia_w,
	nr_seq_prestador_w,
	ie_tipo_gat_w,
	ie_tipo_atend_tiss_w,
	ie_tipo_processo_w,
	ie_pcmso_w,
	ie_origem_execucao_w
from	pls_guia_plano
where 	nr_sequencia = nr_seq_guia_p;

begin
	select	coalesce(nr_seq_contrato,0),
		coalesce(nr_seq_plano,0),
		coalesce(nr_seq_intercambio,0),
		coalesce(nr_seq_congenere,0),
		ie_tipo_segurado
	into STRICT	nr_seq_contrato_w,
		nr_seq_plano_w,
		nr_seq_intercambio_w,
		nr_seq_congenere_w,
		ie_tipo_segurado_w
	from	pls_segurado
	where	nr_sequencia = nr_seq_segurado_p;
exception
when others then
	nr_seq_contrato_w	:= 0;
	nr_seq_plano_w		:= 0;
	nr_seq_intercambio_w	:= 0;
	nr_seq_congenere_w	:= 0;
	ie_tipo_segurado_w	:= null;
end;

begin
	select	coalesce(ie_preco,0)
	into STRICT	ie_preco_w
	from	pls_plano
	where	nr_sequencia	= nr_seq_plano_w;
exception
when others then
	ie_preco_w		:= 0;
end;

select	max(b.nr_seq_motivo_inclusao)
into STRICT	nr_seq_motivo_inc_w
from	pls_execucao_requisicao	b,
	pls_execucao_req_item	a
where	b.nr_sequencia	= a.nr_seq_execucao
and	a.nr_seq_guia	= nr_seq_guia_p;

nr_seq_motivo_inc_w := coalesce(nr_seq_motivo_inc_w,0);

begin
	select	coalesce(cd_prestador,'X')
	into STRICT	cd_prestador_w
	from	pls_prestador
	where	nr_sequencia	= nr_seq_prestador_p;
exception
when others then
	cd_prestador_w	:= 'X';
end;

--Obter a sequencia da requisicao 
begin
	select	pls_obter_req_execucao_guia(nr_seq_guia_p)
	into STRICT	nr_seq_requisicao_w
	;
exception
when others then
	nr_seq_requisicao_w := null;
end;

if (coalesce(nr_seq_requisicao_w,0) > 0) then
	--Obter codigo prestador solicitante da requisicao 
	begin
		select	nr_seq_prestador
		into STRICT	nr_seq_prestador_solic_req_w
		from	pls_requisicao
		where	nr_sequencia = nr_seq_requisicao_w;
		
		select	coalesce(cd_prestador,'X')
		into STRICT	cd_prestador_solic_req_w
		from	pls_prestador
		where	nr_sequencia	= nr_seq_prestador_solic_req_w;
	exception
	when others then
		nr_seq_prestador_solic_req_w := null;
		cd_prestador_solic_req_w := 'X';
	end;
end if;

open C01;
loop
fetch C01 into
	ie_tipo_item_w,
	cd_item_w,
	ie_origem_proced_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	if (ie_tipo_item_w	= 'P') then
		SELECT * FROM pls_obter_estrut_proc(	cd_item_w, ie_origem_proced_w, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_ww) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_ww;
	elsif (ie_tipo_item_w	= 'M') then
	
		nr_seq_material_w	:= cd_item_w;
	end if;
	
	open C02;
	loop
	fetch C02 into	
		nr_seq_regra_w,
		ie_tipo_complemento_w,
		nr_seq_estrut_regra_w,
		nr_seq_grupo_servico_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		ie_estrut_mat_w		:= 'S';
		nr_seq_regra_exce_w	:= null;
	
		if (nr_seq_estrut_regra_w IS NOT NULL AND nr_seq_estrut_regra_w::text <> '') then
			if (pls_obter_se_mat_estrutura(nr_seq_material_w, nr_seq_estrut_regra_w) = 'N') then
				ie_estrut_mat_w	:= 'N';
			end if;
		end if;
		
		--Grupo servico
		ie_grupo_servico_w	:= 'S';
		if (coalesce(nr_seq_grupo_servico_w,0) > 0) then
			ie_grupo_servico_w	:= pls_se_grupo_preco_servico(nr_seq_grupo_servico_w, cd_item_w, ie_origem_proced_w);
		end if;
		
		if (ie_estrut_mat_w = 'S') and (ie_grupo_servico_w = 'S') then
			if (ie_tipo_complemento_w	= 1) then
				nr_seq_retorno_w	:= nr_seq_regra_w;
				ie_exit_w	:= 'S';
			else
				nr_seq_retorno_w	:= nr_seq_regra_w;
			end if;
		end if;
		end;
		
		
		
		if (nr_seq_retorno_w > 0 ) then
		
			select	max(nr_sequencia)
			into STRICT	nr_seq_regra_exce_w
			from	pls_regra_conta_compl_ex
			where ( coalesce(nr_seq_prestador::text, '') = '' or nr_seq_prestador = nr_seq_prestador_w)
			and ( coalesce(cd_prestador::text, '') = '' or cd_prestador = cd_prestador_w)
			and ( coalesce(nr_seq_grupo_prestador::text, '') = '' or pls_obter_se_prestador_grupo(nr_seq_grupo_prestador, nr_seq_prestador_w)	= 'S')
			and	nr_seq_regra_compl = nr_seq_regra_w;
			
			 
			if (nr_seq_regra_exce_w IS NOT NULL AND nr_seq_regra_exce_w::text <> '') then
				nr_seq_retorno_w := 0;
				ie_exit_w := 'N';
			end if;
		
		end if;
		
		if (ie_exit_w = 'S' and ie_tipo_complemento_w	= 1 and ie_prioridade_nec_compl_w = 'S') then
			exit;
		end if;
		
	end loop;
	close C02;
	
	if (ie_exit_w	= 'S') then
		exit;
	end if;
	
	end;
end loop;
close C01;

CALL pls_guia_gravar_historico(   nr_seq_guia_p,
				7,
				wheb_mensagem_pck.get_texto(1184667, 'IE_ESTRUTURA_MAT= '|| ie_estrut_mat_w || ';IE_GRUPO_SERVICO='|| ie_grupo_servico_w || ';NR_SEQ_REGRA='|| nr_seq_regra_w || ';NR_SEQ_REGRA_EXCE=' || nr_seq_regra_exce_w),
				null, 
				nm_usuario_p);

if (nr_seq_retorno_w	> 0) then
	update	pls_guia_plano
	set	ie_estagio_complemento	= 1,
		nm_usuario		= nm_usuario_p,
		nr_seq_regra_compl	= nr_seq_retorno_w,
		dt_atualizacao		= clock_timestamp()
	where	nr_sequencia 		= nr_seq_guia_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consiste_guia_complemento ( nr_seq_guia_p bigint, nr_seq_prestador_p bigint, nr_seq_segurado_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

