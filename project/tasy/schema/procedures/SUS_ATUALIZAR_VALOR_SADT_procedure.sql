-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_atualizar_valor_sadt ( nr_seq_protocolo_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
vl_sadt_w			double precision	:= 0;
vl_ponto_sadt_w			double precision	:= 0;
cd_estabelecimento_w		bigint;
ie_gerar_ponto_w		varchar(05);
qt_ato_sadt_w			bigint	:= 0;
qt_tot_proc_w			bigint	:= 0;
dt_referencia_w			timestamp;
nr_interno_conta_w		bigint	:= 0;

vl_tot_ponto_w			double precision	:= 0;
qt_sequencia_w			bigint	:= 0;
nr_sequencia_w			bigint	:= 0;
qt_ponto_sadt_w			bigint	:= 0;
vl_ponto_seq_w			double precision	:= 0;
ie_forma_calculo_sadt_w		varchar(2)	:= 'P';
qt_contador_pb_w		bigint;

 
C01 CURSOR FOR 
	SELECT 	/*+INDEX (c CONPACI_PROCONV_FK_I) +INDEX (b PROPACI_I11)*/ 
		b.nr_sequencia, 
		coalesce(Sus_Obter_Ponto_Sadt(b.nr_sequencia),0) 
	from	procedimento_paciente	b, 
		conta_paciente		c 
	where	nr_seq_protocolo 	= nr_seq_protocolo_p 
	and	c.nr_interno_conta	= b.nr_interno_conta 
	and	sus_obter_estrut_proc(b.cd_procedimento,b.ie_origem_proced,'C','G') = '2' 
	and	sus_obter_preco_proced(c.cd_estabelecimento,b.dt_procedimento,1,b.cd_Procedimento,b.ie_origem_proced,1) = 0 
	and	coalesce(Sus_Obter_Ponto_Sadt(b.nr_sequencia),0) > 0 
	and	coalesce(c.ie_cancelamento::text, '') = '' 
	and	coalesce(b.cd_motivo_exc_conta::text, '') = '';

C02 CURSOR FOR 
	SELECT 		a.nr_interno_conta 
	from		conta_paciente a 
	where		a.nr_seq_protocolo 		= nr_seq_protocolo_p 
	and		coalesce(a.ie_cancelamento::text, '') = '';
	
C03 CURSOR FOR 
	SELECT	b.nr_sequencia, 
		coalesce(Sus_Obter_Valor_Sadt(b.nr_sequencia),0) vl_sadt		 
	from	procedimento_paciente 	b, 
		conta_paciente 		c 
	where	nr_seq_protocolo 	= nr_seq_protocolo_p 
	and	c.nr_interno_conta	= b.nr_interno_conta 
	and	coalesce(Sus_Obter_Valor_Sadt(b.nr_sequencia),0) <= coalesce(Sus_Obter_Valor_Item_Proc(b.nr_sequencia,1),0) 
	and	coalesce(Sus_Obter_Valor_Sadt(b.nr_sequencia),0) <> 0 
	and	coalesce(c.ie_cancelamento::text, '') = '' 
	and	coalesce(b.cd_motivo_exc_conta::text, '') = '' 
	and	qt_tot_proc_w > 0;
	
	 
C04 CURSOR FOR 
	SELECT 		b.nr_sequencia, 
			coalesce(Sus_Obter_Ponto_Sadt(b.nr_sequencia),0) 
	from		procedimento_paciente 		b, 
			conta_paciente			c 
	where		c.nr_interno_conta 		= nr_interno_conta_w 
	and		c.nr_interno_conta		= b.nr_interno_conta 
	and		sus_obter_estrut_proc(b.cd_procedimento,b.ie_origem_proced,'C','G') = '2' 
	and		sus_obter_preco_proced(c.cd_estabelecimento,b.dt_procedimento,1,b.cd_Procedimento,b.ie_origem_proced,1)=0 
	and		coalesce(Sus_Obter_Ponto_Sadt(b.nr_sequencia),0) > 0 
	and		coalesce(c.ie_cancelamento::text, '') = '' 
	and		coalesce(b.cd_motivo_exc_conta::text, '') = '';
	
C05 CURSOR FOR 
	SELECT		b.nr_sequencia, 
			coalesce(Sus_Obter_Valor_Sadt(b.nr_sequencia),0) vl_sadt		 
	from		procedimento_paciente 		b, 
			conta_paciente 			c 
	where		c.nr_interno_conta 		= nr_interno_conta_w 
	and		c.nr_interno_conta		= b.nr_interno_conta 
	and		coalesce(Sus_Obter_Valor_Sadt(b.nr_sequencia),0) <= coalesce(Sus_Obter_Valor_Item_Proc(b.nr_sequencia,1),0) 
	and		coalesce(Sus_Obter_Valor_Sadt(b.nr_sequencia),0) <> 0 
	and		coalesce(c.ie_cancelamento::text, '') = '' 
	and		coalesce(b.cd_motivo_exc_conta::text, '') = '' 
	and		qt_tot_proc_w > 0;


BEGIN 
 
select	coalesce(cd_estabelecimento,0), 
	coalesce(dt_mesano_referencia,clock_timestamp()) 
into STRICT	cd_estabelecimento_w, 
	dt_referencia_w 
from	protocolo_convenio 
where 	nr_seq_protocolo		= nr_seq_protocolo_p;
 
select	coalesce(max(ie_forma_calculo_sadt),'P') 
into STRICT	ie_forma_calculo_sadt_w 
from	sus_parametros_aih 
where	cd_estabelecimento	= cd_estabelecimento_w;
 
ie_gerar_ponto_w := Obter_Param_Usuario(1123, 28, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_ponto_w);
 
if (ie_gerar_ponto_w	= 'S') then 
 
	if (ie_forma_calculo_sadt_w	= 'P') then 
		 
		qt_contador_pb_w := 0;
		CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(299371) ,'RECALCULAR_PROTOCOLO-Rateio SADT',qt_contador_pb_w);
		 
		update	procedimento_paciente a 
		set	vl_custo_operacional 		= 0, 
			vl_procedimento			= 0 
		where	nr_interno_conta	in ( 
			SELECT	nr_interno_conta 
			from	conta_paciente 
			where	nr_seq_protocolo	= nr_seq_protocolo_p 
			and	coalesce(ie_cancelamento::text, '') = '');
		/* 
		and	exists 
			(select	1 
			from	sus_estrutura_procedimento_v x 
			where	a.cd_procedimento	= x.cd_procedimento 
			and	a.ie_origem_proced	= x.ie_origem_proced 
			and	x.cd_grupo		= 2);*/
 
 
 
		begin 
		select	/*+INDEX (b PROPACI_CONPACI_I) +INDEX (c CONPACI_PROCONV_FK_I)*/ 
			coalesce(sum(Sus_Obter_Valor_Sadt(b.nr_sequencia)),0) vl_sadt 
		into STRICT		vl_sadt_w	 
		from	procedimento_paciente		b, 
			conta_paciente			c 
		where	c.nr_seq_protocolo 		= nr_seq_protocolo_p 
		and	c.nr_interno_conta		= b.nr_interno_conta 
		and	coalesce(Sus_Obter_Valor_Sadt(b.nr_sequencia),0) <= coalesce(Sus_Obter_Valor_Item_Proc(b.nr_sequencia,1),0) 
		and	coalesce(c.ie_cancelamento::text, '') = '' 
		and	coalesce(b.cd_motivo_exc_conta::text, '') = '';
		exception 
			when no_data_found then 
			begin 
			vl_sadt_w	:= 0;
			end;
		end;
		 
		begin 
		select	coalesce(sum(Sus_Obter_Ponto_Sadt(b.nr_sequencia)),0), 
			count(*) 
		into STRICT	qt_ato_sadt_w, 
			qt_tot_proc_w	 
		from	procedimento_paciente b, 
			conta_paciente c 
		where	c.nr_seq_protocolo 		= nr_seq_protocolo_p 
		and	c.nr_interno_conta		= b.nr_interno_conta 
		and	sus_obter_estrut_proc(b.cd_procedimento,b.ie_origem_proced,'C','G') = '2' 
		and	sus_obter_preco_proced(c.cd_estabelecimento,b.dt_procedimento,1,b.cd_Procedimento,b.ie_origem_proced,1)=0 
		and	Sus_Obter_Ponto_Sadt(b.nr_sequencia) > 0 
		and	coalesce(c.ie_cancelamento::text, '') = '' 
		and	coalesce(b.cd_motivo_exc_conta::text, '') = '';
		exception 
				when no_data_found then 
				begin 
				qt_ato_sadt_w	:= 0;
				end;
		end;
 
		if (qt_ato_sadt_w = 0) then 
			vl_ponto_sadt_w 	:= 0;
		else 
			vl_ponto_sadt_w 	:= trunc((vl_sadt_w / qt_ato_sadt_w),4);
		end if; 	
	 
		vl_tot_ponto_w	:= 0;
		qt_sequencia_w	:= 0;
		open c01;
		loop 
		fetch c01 into 
				nr_sequencia_w, 
				qt_ponto_sadt_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin 
			qt_sequencia_w		:= qt_sequencia_w + 1;
			if (qt_sequencia_w = qt_tot_proc_w) then 
				vl_ponto_seq_w	:= (vl_sadt_w - vl_tot_ponto_w);				
			else 
				vl_ponto_seq_w	:= (vl_ponto_sadt_w * qt_ponto_sadt_w);
				if	((vl_tot_ponto_w + vl_ponto_seq_w) > vl_sadt_w) then 
					vl_ponto_seq_w := 0;
				end if;
			end if;
			vl_tot_ponto_w		:= vl_tot_ponto_w	+ vl_ponto_seq_w;
			 
			update		sus_valor_proc_paciente a 
			set		a.vl_ponto_sadt	= vl_ponto_sadt_w, 
					a.vl_ato_sadt 	= vl_ponto_seq_w, 
					a.qt_ato_sadt	= qt_ponto_sadt_w 
			where		a.nr_sequencia 	= nr_sequencia_w;
 
			update		procedimento_paciente a 
			set		a.vl_custo_operacional 	= vl_ponto_seq_w, 
					a.vl_materiais		= 0 
			where		a.nr_sequencia 		= nr_sequencia_w;			
 
			end;
		end loop;
		close c01;
		commit;
		 
		open c03;
		loop 
		fetch c03 into	 
			nr_sequencia_w, 
			vl_sadt_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin 
			update	procedimento_paciente a 
			set	a.vl_materiais		= a.vl_materiais - vl_sadt_w 
			where	a.nr_sequencia	= nr_sequencia_w;
			 
			update	sus_valor_proc_paciente a 
			set	a.vl_sadt_rateado	= a.vl_matmed - vl_sadt_w 
			where	nr_sequencia		= nr_sequencia_w;
			end;
		end loop;
		close c03;
		 
		open c02;
		loop 
		fetch 	c02 into 
			nr_interno_conta_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				CALL atualizar_valor_proc_sus(nr_interno_conta_w);
				CALL gerar_conta_paciente_guia(nr_interno_conta_w,2);
				CALL atualizar_resumo_conta(nr_interno_conta_w, 2);
		end loop;
		close c02;
		 
	elsif (ie_forma_calculo_sadt_w	= 'C') then 
		 
		qt_contador_pb_w := 0;
		CALL gravar_processo_longo(WHEB_MENSAGEM_PCK.get_texto(299371) ,'RECALCULAR_PROTOCOLO-Rateio SADT',qt_contador_pb_w);
		 
		open C02;
		loop 
		fetch C02 into	 
			nr_interno_conta_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			 
			qt_contador_pb_w := qt_contador_pb_w + 1;
			CALL gravar_processo_longo(nr_interno_conta_w ,'RECALCULAR_PROTOCOLO-Rateio SADT',qt_contador_pb_w);
			 
			update	procedimento_paciente a 
			set	vl_custo_operacional 	= 0, 
				vl_procedimento		= 0 
			where	nr_interno_conta	= nr_interno_conta_w;
			 
			begin 
			select	coalesce(sum(Sus_Obter_Valor_Sadt(b.nr_sequencia)),0) vl_sadt 
			into STRICT	vl_sadt_w 
			from	procedimento_paciente		b, 
				conta_paciente			c 
			where	c.nr_interno_conta 		= nr_interno_conta_w 
			and	c.nr_interno_conta		= b.nr_interno_conta 
			and	coalesce(Sus_Obter_Valor_Sadt(b.nr_sequencia),0) <= coalesce(Sus_Obter_Valor_Item_Proc(b.nr_sequencia,1),0) 
			and	coalesce(c.ie_cancelamento::text, '') = '' 
			and	coalesce(b.cd_motivo_exc_conta::text, '') = '';
			exception 
					when no_data_found then 
					begin 
					qt_ato_sadt_w	:= 0;
					end;
			end;		
			 
			begin 
			select		coalesce(sum(Sus_Obter_Ponto_Sadt(b.nr_sequencia)),0), 
					count(*) 
			into STRICT		qt_ato_sadt_w, 
					qt_tot_proc_w 
			from		procedimento_paciente b, 
					conta_paciente c 
			where		c.nr_interno_conta 		= nr_interno_conta_w 
			and		c.nr_interno_conta		= b.nr_interno_conta 
			and		sus_obter_estrut_proc(b.cd_procedimento,b.ie_origem_proced,'C','G') = '2' 
			and		sus_obter_preco_proced(c.cd_estabelecimento,b.dt_procedimento,1,b.cd_Procedimento,b.ie_origem_proced,1)=0 
			and		Sus_Obter_Ponto_Sadt(b.nr_sequencia) > 0 
			and		coalesce(c.ie_cancelamento::text, '') = '' 
			and		coalesce(b.cd_motivo_exc_conta::text, '') = '';
			exception 
					when no_data_found then 
					begin 
					qt_ato_sadt_w	:= 0;
					end;
			end;		
				 
			if	qt_ato_sadt_w = 0 then 
				vl_ponto_sadt_w 	:= 0;
			else 
				vl_ponto_sadt_w 	:= trunc((vl_sadt_w / qt_ato_sadt_w),4);
			end if;
			 
			vl_tot_ponto_w	:= 0;
			qt_sequencia_w	:= 0;
			 
			open C04;
			loop 
			fetch C04 into	 
				nr_sequencia_w, 
				qt_ponto_sadt_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin 
				qt_sequencia_w		:= qt_sequencia_w + 1;
				 
				if (qt_sequencia_w = qt_tot_proc_w) then 
					vl_ponto_seq_w	:= (vl_sadt_w - vl_tot_ponto_w);
				else 
					vl_ponto_seq_w	:= (vl_ponto_sadt_w * qt_ponto_sadt_w);
					if	((vl_tot_ponto_w + vl_ponto_seq_w) > vl_sadt_w) then 
						vl_ponto_seq_w := 0;
					end if;
				end if;
				 
				vl_tot_ponto_w		:= vl_tot_ponto_w	+ vl_ponto_seq_w;
				 
				update		sus_valor_proc_paciente a 
				set		a.vl_ponto_sadt	= vl_ponto_sadt_w, 
						a.vl_ato_sadt 	= vl_ponto_seq_w, 
						a.qt_ato_sadt	= qt_ponto_sadt_w 
				where		a.nr_sequencia 	= nr_sequencia_w;
 
				update		procedimento_paciente a 
				set		a.vl_custo_operacional 	= vl_ponto_seq_w, 
						a.vl_materiais		= 0 
				where		a.nr_sequencia 		= nr_sequencia_w;
				 
				end;	
			end loop;
			close C04;
			 
			 
			open C05;
			loop 
			fetch C05 into	 
				nr_sequencia_w, 
				vl_sadt_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin 
				update	procedimento_paciente a 
				set	a.vl_materiais		= a.vl_materiais - vl_sadt_w 
				where	a.nr_sequencia	= nr_sequencia_w;
				 
				update	sus_valor_proc_paciente a 
				set	a.vl_sadt_rateado	= a.vl_matmed - vl_sadt_w 
				where	nr_sequencia		= nr_sequencia_w;
				end;
			end loop;
			close c05;
			 
			CALL atualizar_valor_proc_sus(nr_interno_conta_w);
			CALL gerar_conta_paciente_guia(nr_interno_conta_w,2);
			CALL atualizar_resumo_conta(nr_interno_conta_w, 2);
			 
			end;
		end loop;
		close c02;
		 
	end if;
	 
 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_atualizar_valor_sadt ( nr_seq_protocolo_p bigint, nm_usuario_p text) FROM PUBLIC;

