-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_diverg_contrato_oc ( nr_ordem_compra_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_item_w			bigint;
nr_item_solic_w			bigint;
qt_material_w			double precision;
vl_unitario_material_w		double precision;
vl_pagto_w			double precision;
nr_seq_regra_w			bigint;
nr_seq_contrato_w		bigint;
qt_existe_w			bigint;
vl_total_item_w			double precision;
ie_tipo_consistencia_w		varchar(15);
vl_minimo_w			double precision;
vl_maximo_w			double precision;
ie_justificativa_w			varchar(1);
ie_tipo_ordem_w			varchar(15);
nr_solic_compra_w			bigint;
ie_libera_consist_cont_w		varchar(1);
cd_estabelecimento_w		integer;
nm_usuario_lib_solic_w		varchar(15);
vl_unit_solic_w			double precision;
qt_material_solic_w		double precision;
nr_solic_compra_ant_w		bigint;
vl_total_item_solic_w		double precision;
ie_consiste_w			varchar(1);
ie_forma_busca_contrato_w		varchar(1);
nr_seq_contrato_fornec_w		bigint;
cd_fornecedor_w			varchar(14);

c01 CURSOR FOR
SELECT	b.nr_item_oci,
	b.qt_material,
	b.vl_unitario_material,
	a.vl_pagto,
	a.nr_sequencia,
	a.nr_seq_contrato,
	0 nr_solic_compra,
	0 nr_item_solic_compra
from	contrato_regra_nf a,
	ordem_compra_item b,
	ordem_compra c
where	c.ie_tipo_ordem = 'C'
and	c.nr_ordem_compra = nr_ordem_compra_p
and	b.nr_ordem_compra = c.nr_ordem_compra
and	a.nr_sequencia =  b.nr_seq_regra_contrato

union

select	c.nr_item_oci,
	c.qt_material,
	c.vl_unitario_material,
	a.vl_pagto,
	a.nr_sequencia,
	a.nr_seq_contrato,
	b.nr_solic_compra nr_solic_compra,
	b.nr_item_solic_compra nr_item_solic_compra
from	contrato_regra_nf a,
	solic_compra_item b,
	ordem_compra_item c,
	ordem_compra d
where	d.ie_tipo_ordem <> 'C'
and	d.nr_ordem_compra = nr_ordem_compra_p
and	c.nr_ordem_compra = d.nr_ordem_compra
and	b.nr_solic_compra = c.nr_solic_compra
and	b.nr_item_solic_compra = c.nr_item_solic_compra
and	b.nr_seq_regra_contrato = a.nr_sequencia
and	ie_forma_busca_contrato_w = 'O'

union

select	b.nr_item_oci,
	b.qt_material,
	b.vl_unitario_material,
	a.vl_pagto,
	a.nr_sequencia,
	a.nr_seq_contrato,
	0 nr_solic_compra,
	0 nr_item_solic_compra
from	contrato_regra_nf a,
	ordem_compra_item b,
	ordem_compra c
where	c.ie_tipo_ordem <> 'C'
and	c.nr_ordem_compra = nr_ordem_compra_p
and	c.nr_ordem_compra = b.nr_ordem_compra
and	a.cd_material = b.cd_material
and	a.nr_seq_contrato = nr_seq_contrato_w
and	ie_forma_busca_contrato_w = 'C'
and	a.nr_sequencia =	(select	max(x.nr_sequencia)
			from	contrato_regra_nf x
			where	x.nr_seq_contrato = a.nr_seq_contrato
			and	    x.cd_material = b.cd_material
			and	    trunc(coalesce(x.dt_inicio_vigencia,clock_timestamp())) >= trunc(clock_timestamp())
			and	    trunc(coalesce(x.dt_fim_vigencia,clock_timestamp())) <= trunc(clock_timestamp())
            and (coalesce(x.ie_situacao::text, '') = '' or x.ie_situacao = 'A'))
order by	nr_solic_compra;

c02 CURSOR FOR
SELECT	ie_tipo_consistencia,
	vl_minimo,
	vl_maximo,
	ie_justificativa
from	contrato_regra_nf_consist
where	nr_seq_regra_nf	= nr_seq_regra_w;


BEGIN

select	cd_estabelecimento,
	coalesce(cd_cgc_fornecedor,cd_pessoa_fisica)
into STRICT	cd_estabelecimento_w,
	cd_fornecedor_w
from	ordem_compra
where	nr_ordem_compra = nr_ordem_compra_p;

ie_forma_busca_contrato_w := obter_param_usuario(917, 165, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_forma_busca_contrato_w);

if (ie_forma_busca_contrato_w = 'C') then
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_contrato_fornec_w
	from	contrato
	where	coalesce(cd_cgc_contratado,cd_pessoa_contratada) = cd_fornecedor_w
	and	dt_inicio >= trunc(clock_timestamp())
	and	coalesce(dt_fim,trunc(clock_timestamp())) <= trunc(clock_timestamp())
	and	ie_situacao = 'A';

end if;

select	max(qt_existe)
into STRICT	qt_existe_w
from	(SELECT	count(*) qt_existe
	from	contrato_regra_nf_consist a,
		ordem_compra_item b,
		ordem_compra c
	where	c.ie_tipo_ordem = 'C'
	and	c.nr_ordem_compra = nr_ordem_compra_p
	and	b.nr_ordem_compra = c.nr_ordem_compra
	and	a.nr_seq_regra_nf =  b.nr_seq_regra_contrato	
	
union

	SELECT	count(*) qt_existe
	from	contrato_regra_nf_consist a,
		solic_compra_item b,
		ordem_compra_item c,
		ordem_compra d
	where	d.ie_tipo_ordem <> 'C'
	and	d.nr_ordem_compra = nr_ordem_compra_p
	and	c.nr_ordem_compra = d.nr_ordem_compra
	and	b.nr_solic_compra = c.nr_solic_compra
	and	b.nr_item_solic_compra = c.nr_item_solic_compra
	and	a.nr_seq_regra_nf = b.nr_seq_regra_contrato
	and	ie_forma_busca_contrato_w = 'O'
	
union

	select	count(*)
	from	contrato_regra_nf a,
		ordem_compra_item b,
		ordem_compra c
	where	c.ie_tipo_ordem <> 'C'
	and	c.nr_ordem_compra = nr_ordem_compra_p
	and	c.nr_ordem_compra = b.nr_ordem_compra
	and	a.cd_material = b.cd_material
	and	a.nr_seq_contrato = nr_seq_contrato_w
	and	ie_forma_busca_contrato_w = 'C'
	and	a.nr_sequencia =	(select	max(x.nr_sequencia)
				from	contrato_regra_nf x
				where	x.nr_seq_contrato = a.nr_seq_contrato
				and	    x.cd_material = b.cd_material
				and	    trunc(coalesce(x.dt_inicio_vigencia,clock_timestamp())) >= trunc(clock_timestamp())
				and	    trunc(coalesce(x.dt_fim_vigencia,clock_timestamp())) <= trunc(clock_timestamp())
                and (coalesce(x.ie_situacao::text, '') = '' or x.ie_situacao = 'A'))) alias18;

delete
from	diverg_contrato_item_doc
where	nr_documento = nr_ordem_compra_p
and	ie_tipo_documento = 'OC';

if (qt_existe_w > 0) then
	begin

	open c01;
	loop
	fetch c01 into
		nr_item_w,
		qt_material_w,
		vl_unitario_material_w,
		vl_pagto_w,
		nr_seq_regra_w,
		nr_seq_contrato_w,
		nr_solic_compra_w,
		nr_item_solic_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		vl_total_item_w	:= (vl_unitario_material_w * qt_material_w);

		if (coalesce(nr_solic_compra_w,0) <> 0) then
			begin

			select	a.nm_usuario_lib,
				b.vl_unit_previsto,
				b.qt_material
			into STRICT	nm_usuario_lib_solic_w,
				vl_unit_solic_w,
				qt_material_solic_w
			from	solic_compra_item b,
				solic_compra a
			where	a.nr_solic_compra = nr_solic_compra_w
			and	b.nr_solic_compra = a.nr_solic_compra
			and	b.nr_item_solic_compra = nr_item_solic_w;

			ie_libera_consist_cont_w := Obter_Param_Usuario(913, 199, obter_perfil_ativo, nm_usuario_lib_solic_w, cd_estabelecimento_w, ie_libera_consist_cont_w);

			vl_total_item_solic_w	:= (vl_unit_solic_w * qt_material_solic_w);

			end;
		end if;

		open c02;
		loop
		fetch c02 into
			ie_tipo_consistencia_w,
			vl_minimo_w,
			vl_maximo_w,
			ie_justificativa_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin

			if (ie_tipo_consistencia_w = 'VL_TOTAL_IT_OC') and (vl_total_item_w <> vl_pagto_w) then
				begin
				
				if (vl_total_item_w < vl_minimo_w) or (vl_total_item_w > vl_maximo_w) then
					begin

					ie_consiste_w	:= 'S';
	
					if (coalesce(nr_solic_compra_w,0) <> 0) then
						begin
						if (ie_libera_consist_cont_w = 'S') then
							begin
							if (vl_total_item_w = vl_total_item_solic_w) then
								ie_consiste_w	:= 'N';
							end if;
							end;
						end if;
						end;
					end if;

				
					if (ie_consiste_w = 'S') then
						begin	

						insert into diverg_contrato_item_doc(
							nr_documento,
							nr_item_documento,
							ie_tipo_documento,
							ie_tipo_consistencia,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							dt_atualizacao,
							nm_usuario,
							nr_seq_regra_contrato,
							nr_seq_contrato,
							ds_observacao,
							ie_justificativa) values (
								nr_ordem_compra_p,
								nr_item_w,
								'OC',
								ie_tipo_consistencia_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_regra_w,
								nr_seq_contrato_w,
								WHEB_MENSAGEM_PCK.get_texto(278863),
								ie_justificativa_w);

						end;
					end if;

					end;
				end if;
		
				end;
			end if; /*Fim Consistencia VL_TOTAL_IT_OC*/
			if (ie_tipo_consistencia_w = 'VL_UNIT_IT_OC') and
				((vl_unitario_material_w < vl_minimo_w) or (vl_unitario_material_w > vl_maximo_w)) then
				begin

				ie_consiste_w	:= 'S';

				if (coalesce(nr_solic_compra_w,0) <> 0) then
					begin
					if (ie_libera_consist_cont_w = 'S') then
						begin
						if (vl_unitario_material_w = vl_unit_solic_w) then
							ie_consiste_w	:= 'N';
						end if;
						end;
					end if;
					end;
				end if;

				if (ie_consiste_w = 'S') then
					begin	

					insert into diverg_contrato_item_doc(
						nr_documento,
						nr_item_documento,
						ie_tipo_documento,
						ie_tipo_consistencia,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						dt_atualizacao,
						nm_usuario,
						nr_seq_regra_contrato,
						nr_seq_contrato,
						ds_observacao,
						ie_justificativa) values (
							nr_ordem_compra_p,
							nr_item_w,
							'OC',
							ie_tipo_consistencia_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_regra_w,
							nr_seq_contrato_w,
							WHEB_MENSAGEM_PCK.get_texto(278865),
							ie_justificativa_w);

					end;
				end if;

				end;
			end if; /*Fim Consistencia VL_UNIT_IT_OC*/
			if (ie_tipo_consistencia_w = 'QT_ITEM_OC') and
				((qt_material_w < vl_minimo_w) or (qt_material_w > vl_maximo_w)) then
				begin

				ie_consiste_w	:= 'S';			
	
				if (coalesce(nr_solic_compra_w,0) <> 0) then
					begin

					if (ie_libera_consist_cont_w = 'S') then
						begin					
						if (qt_material_w = qt_material_solic_w) then
							ie_consiste_w	:= 'N';
						end if;
						end;
					end if;
					end;
				end if;

				if (ie_consiste_w = 'S') then
					begin	

					insert into diverg_contrato_item_doc(
						nr_documento,
						nr_item_documento,
						ie_tipo_documento,
						ie_tipo_consistencia,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						dt_atualizacao,
						nm_usuario,
						nr_seq_regra_contrato,
						nr_seq_contrato,
						ds_observacao,
						ie_justificativa) values (
							nr_ordem_compra_p,
							nr_item_w,
							'OC',
							ie_tipo_consistencia_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_regra_w,
							nr_seq_contrato_w,
							WHEB_MENSAGEM_PCK.get_texto(278867),
							ie_justificativa_w);

					end;
				end if;

				end;
			end if; /*Fim Consistencia QT_ITEM_OC*/
	

			end;
		end loop;
		close c02;

		end;
	end loop;
	close c01;

	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_diverg_contrato_oc ( nr_ordem_compra_p bigint, nm_usuario_p text) FROM PUBLIC;

