-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_contabiliza_fatura_interc ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
	Gerar as movimentacoes contabeis referentes ao titulos a pagar provenientes de A500
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
-------------------------------------------------------------------------------------------------------------------

Referencias:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_conteudo_w			varchar(4000);
ds_erro_w				varchar(255);
ds_compl_historico_w	varchar(255);
ds_pessoa_w				varchar(80);
nm_atributo_w			varchar(40);
cd_conta_contabil_w		varchar(20)	:= null;
cd_cgc_w				varchar(14);
cd_pessoa_fisica_w		varchar(10);
ie_receber_pagar_w		varchar(1);
ie_compl_hist_w			varchar(1)	:= 'S';
vl_movimento_w			double precision;
vl_retorno_w			double precision;
nr_titulo_w				bigint;
nr_seq_movto_w			bigint;
nr_seq_trans_financ_w	bigint;
nr_tit_rec_gerado_w		bigint;
nr_tit_rec_baixado_w	bigint;
nr_tit_pagar_gerado_w	bigint;
nr_tit_pagar_baixado_w	bigint;
nr_sequencia_w			bigint;
cd_historico_pls_w		bigint;
nr_seq_conta_banco_w	bigint;
nr_seq_fatura_w			bigint;
nr_titulo_pagar_w		bigint;
cd_centro_custo_w		integer	:= 0;
cd_tipo_baixa_w			integer;
cd_tipo_recebimento_w	integer;
cd_estab_movto_w		smallint;
cd_estabelecimento_w	smallint;
dt_contab_w				timestamp;
dt_contabil_w			timestamp;
nr_bordero_w 			titulo_pagar_baixa.nr_bordero%type;
nr_seq_escrit_w 		titulo_pagar_baixa.nr_seq_escrit%type;
nr_fatura_w			ptu_fatura.nr_fatura%type;

nr_documento_ww			movimento_contabil.nr_documento%type;
ie_origem_documento_w		movimento_contabil.ie_origem_documento%type;
nr_seq_info_ctb_w		informacao_contabil.nr_sequencia%type;
nm_tabela_w			w_movimento_contabil.nm_tabela%type;
nm_atributo_ww			w_movimento_contabil.nm_atributo%type;
nr_seq_tab_orig_w		w_movimento_contabil.nr_seq_tab_orig%type;
nr_seq_tab_compl_w		w_movimento_contabil.nr_seq_tab_compl%type;
nm_agrupador_w			agrupador_contabil.nm_atributo%type;
nr_seq_agrupamento_w		w_movimento_contabil.nr_seq_agrupamento%type;
cd_tipo_lote_contabil_w		lote_contabil.cd_tipo_lote_contabil%type;
ie_contab_provisorio_w		parametros_contas_pagar.ie_contab_provisorio%type;
ie_contab_tit_interc_cancel_w	pls_parametro_contabil.ie_contab_tit_interc_cancel%type;
nr_titulo_pagar_ww		titulo_pagar.nr_titulo%type;
nr_titulo_receber_ww		titulo_receber.nr_titulo%type;
dt_contabil_mes_w		timestamp;
dt_contabil_fp_w		timestamp;

c_titulos_pagar CURSOR FOR
	SELECT	a.nr_titulo,
		'R' ie_receber_pagar,
		'VL_RECEBIDO' nm_atributo,
		sum(c.vl_recebido) vl_movimento,
		a.dt_recebimento dt_contab,
		a.nr_seq_trans_fin,
		b.cd_estabelecimento,
		null cd_tipo_baixa,
		a.cd_tipo_recebimento,
		null nr_seq_conta_banco,
		null nr_bordero,
		null nr_seq_escrit,
		'TITULO_REC_LIQ_CC' nm_tabela,
		'VL_RECEBIDO' nm_atrib,
		c.nr_sequencia nr_seq_tab_orig,
		c.nr_seq_baixa nr_seq_tab_compl,
		14 nr_seq_info_ctb,
		null cd_conta_contabil
	from	titulo_rec_liq_cc	c,
		titulo_receber_liq	a,
		titulo_receber		b
	where	a.nr_sequencia		= c.nr_seq_baixa
	and	a.nr_titulo		= b.nr_titulo
	and	b.nr_titulo		= c.nr_titulo
	and	a.nr_lote_contabil	= nr_lote_contabil_p
	and	coalesce(a.ie_lib_caixa,'N')	= 'S'
	group by
		a.nr_titulo,
		a.dt_recebimento,
		a.nr_seq_trans_fin,
		b.cd_estabelecimento,
		a.cd_tipo_recebimento,
		c.nr_sequencia,
		c.nr_seq_baixa
	
union all

	SELECT	a.nr_titulo,
		'P' ie_receber_pagar,
		'VL_PAGO' nm_atributo,
		a.vl_baixa vl_movimento,
		a.dt_baixa dt_contab,
		a.nr_seq_trans_fin,
		b.cd_estabelecimento,
		a.cd_tipo_baixa,
		null cd_tipo_recebimento,
		a.nr_seq_conta_banco,
		a.nr_bordero nr_bordero,
		a.nr_seq_escrit nr_seq_escrit,
		'TITULO_PAGAR_BAIXA' nm_tabela,
		'VL_BAIXA' nm_atrib,
		a.nr_sequencia nr_seq_tab_orig,
		a.nr_titulo nr_seq_tab_compl,
		13 nr_seq_info_ctb,
		null cd_conta_contabil
	from	titulo_pagar		b,
		titulo_pagar_baixa	a
	where	a.nr_titulo		= b.nr_titulo
	and	coalesce(b.ie_status,'D')	= 'D'
	and	a.nr_lote_contabil	= nr_lote_contabil_p
	
union all

	select	a.nr_titulo,
		'R' ie_receber_pagar,
		'VL_TITULO_RECEBER' nm_atributo,
		a.vl_titulo vl_movimento,
		a.dt_emissao dt_contab,
		a.nr_seq_trans_fin_contab,
		a.cd_estabelecimento,
		null cd_tipo_baixa,
		null cd_tipo_recebimento,
		null nr_seq_conta_banco,
		null nr_bordero,
		null nr_seq_escrit,
		'TITULO_RECEBER' nm_tabela,
		'VL_TITULO' nm_atrib,
		a.nr_titulo nr_seq_tab_orig,
		null nr_seq_tab_compl,
		46 nr_seq_info_ctb,
		null cd_conta_contabil
	from	titulo_receber	a
	where	a.nr_lote_contabil	= nr_lote_contabil_p
	/*union all
	select	a.nr_titulo,
		'P' ie_receber_pagar,
		'VL_TITULO_PAGAR' nm_atributo,
		a.vl_titulo vl_movimento,
		a.dt_emissao dt_contab,
		a.nr_seq_trans_fin_contab,
		a.cd_estabelecimento,
		null cd_tipo_baixa,
		null cd_tipo_recebimento,
		null nr_seq_conta_banco,
		null nr_bordero,
		null nr_seq_escrit,
		'TITULO_PAGAR' nm_tabela,
		'VL_TITULO' nm_atrib,
		a.nr_titulo nr_seq_tab_orig,
		null nr_seq_tab_compl,
		47 nr_seq_info_ctb,
		null cd_conta_contabil
	from	titulo_pagar	a
	where	a.nr_lote_contabil	= nr_lote_contabil_p
	and	nvl(a.ie_status,'D')	= 'D'*/
	
union all

	select	a.nr_titulo,
		'P' ie_receber_pagar,
		CASE WHEN c.ie_origem='E' THEN  'VL_EVENTO_OPS' WHEN c.ie_origem='P' THEN  'VL_PAGAMENTO_OPS' WHEN c.ie_origem='I' THEN  'VL_INTERCAMBIO' WHEN c.ie_origem='R' THEN  'VL_REEMBOLSO' WHEN c.ie_origem='C' THEN  'VL_COPARTICIPACAO' END  nm_atributo,
		c.vl_movimento vl_movimento,
		a.dt_baixa dt_contab,
		a.nr_seq_trans_fin,
		b.cd_estabelecimento,
		a.cd_tipo_baixa,
		null cd_tipo_recebimento,
		a.nr_seq_conta_banco,
		a.nr_bordero nr_bordero,
		a.nr_seq_escrit nr_seq_escrit,
		'TITULO_PAGAR_BAIXA_OPS' nm_tabela,
		CASE WHEN c.ie_origem='E' THEN  'VL_EVENTO_OPS' WHEN c.ie_origem='P' THEN  'VL_PAGAMENTO_OPS' WHEN c.ie_origem='I' THEN  'VL_INTERCAMBIO' WHEN c.ie_origem='R' THEN  'VL_REEMBOLSO' WHEN c.ie_origem='C' THEN  'VL_COPARTICIPACAO' END  nm_atrib,
		c.nr_sequencia nr_seq_tab_orig,
		a.nr_titulo nr_seq_tab_compl,
		13 nr_seq_info_ctb,
		c.cd_conta_contabil
	from	titulo_pagar_baixa_ops	c,
		titulo_pagar		b,
		titulo_pagar_baixa	a
	where	a.nr_titulo		= b.nr_titulo
	and	a.nr_sequencia		= c.nr_seq_baixa
	and	b.nr_titulo		= c.nr_titulo
	and	coalesce(b.ie_status,'D')	= 'D'
	and	a.nr_lote_contabil	= nr_lote_contabil_p;
	
c_movimento CURSOR FOR
	SELECT	oid
	from	movimento_contabil
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
c_movimento_w CURSOR FOR
	SELECT	oid
	from	w_movimento_contabil
	where	nr_lote_contabil	= nr_lote_contabil_p;

BEGIN
/*Validacao para impedir a geracao em lotes incorretos */

if (ie_exclusao_p <> 'S') then
        select b.cd_tipo_lote_contabil
        into STRICT cd_tipo_lote_contabil_w
        from lote_contabil b
        where b.nr_lote_contabil = nr_lote_contabil_p;
        if (cd_tipo_lote_contabil_w <> 36) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(261346);
        end if;
end if;
select	dt_referencia,
	cd_estabelecimento,
	cd_tipo_lote_contabil
into STRICT	dt_contabil_w,
	cd_estabelecimento_w,
	cd_tipo_lote_contabil_w
from	lote_contabil
where	nr_lote_contabil	= nr_lote_contabil_p;

select	coalesce(max(ie_contab_provisorio), 'S')
into STRICT	ie_contab_provisorio_w
from	parametros_contas_pagar
where	cd_estabelecimento	= cd_estabelecimento_w;

select	coalesce(max(ie_contab_tit_interc_cancel), 'S')
into STRICT	ie_contab_tit_interc_cancel_w
from	pls_parametro_contabil
where	cd_estabelecimento	= cd_estabelecimento_w;

if (ie_exclusao_p = 'S') then
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	
	for reg in c_movimento
		loop
		delete	from movimento_contabil
		where   rowid	= reg.rowid;
		end loop;
	
	update	lote_contabil
	set	vl_credito		= 0,
		vl_debito		= 0
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	update	titulo_pagar_baixa a
	set	a.nr_lote_contabil	= 0
	where	a.nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	update	titulo_receber_liq a
	set	a.nr_lote_contabil	= 0
	where	a.nr_lote_contabil 	= nr_lote_contabil_p;
	
	commit;
	
	update	titulo_receber	a
	set	a.nr_lote_contabil	= 0
	where	a.nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	update	titulo_pagar	a
	set	a.nr_lote_contabil	= 0
	where	a.nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	update	titulo_pagar_baixa_ops
	set	nr_lote_contabil	= 0
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
else
	dt_contabil_mes_w	:= trunc(dt_contabil_w, 'month');
	dt_contabil_fp_w	:= fim_dia(dt_contabil_w);
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');

	for reg in c_movimento_w
		loop
		delete	from w_movimento_contabil
		where   rowid	= reg.rowid;
		end loop;
	
	update	titulo_receber_liq	a
	set	a.nr_lote_contabil		= nr_lote_contabil_p
	where	coalesce(a.nr_lote_contabil,0)	= 0
	and	exists	(SELECT	1
			from	titulo_receber	x
			where	a.nr_titulo		= x.nr_titulo
			and	x.ie_origem_titulo	= '8'
			and	(x.nr_seq_ptu_fatura IS NOT NULL AND x.nr_seq_ptu_fatura::text <> '')
			and	((x.ie_situacao		!= '3') or (ie_contab_tit_interc_cancel_w = 'S')))
	and	a.dt_recebimento between dt_contabil_mes_w and dt_contabil_fp_w;
	
	commit;
	
	update	titulo_pagar_baixa	a
	set	a.nr_lote_contabil		= nr_lote_contabil_p
	where	a.dt_baixa between dt_contabil_mes_w and dt_contabil_fp_w
	and	coalesce(a.nr_seq_lote_enc_contas::text, '') = ''
	and	coalesce(a.nr_seq_pls_lote_camara::text, '') = ''
	and	exists	(SELECT	1
			from	titulo_pagar	x,
				ptu_fatura	y
			where	x.nr_titulo		= y.nr_titulo
			and	x.nr_titulo		= a.nr_titulo
			and	x.ie_origem_titulo	= '16'
			and	((x.ie_situacao		!= 'C') or (ie_contab_tit_interc_cancel_w = 'S'))
			
union all

			SELECT	1
			from	titulo_pagar	x,
				ptu_fatura	y
			where	x.nr_titulo		= y.nr_titulo_ndc
			and	x.nr_titulo		= a.nr_titulo
			and	x.ie_origem_titulo	= '16'
			and	((x.ie_situacao		!= 'C') or (ie_contab_tit_interc_cancel_w = 'S')))
	and	a.nr_lote_contabil	= 0;
	
	commit;
	
	update	titulo_receber	a
	set	nr_lote_contabil		= nr_lote_contabil_p
	where	a.ie_origem_titulo		= '8'
	and	coalesce(a.nr_lote_contabil,0)	= 0
	and	((a.ie_situacao		!= '3') or (ie_contab_tit_interc_cancel_w = 'S'))
	and	(a.nr_seq_ptu_fatura IS NOT NULL AND a.nr_seq_ptu_fatura::text <> '')
	and	a.dt_emissao between dt_contabil_mes_w and dt_contabil_fp_w;
	
	commit;
	
	-- Verificado com o Carlos da Unimed Rio Preto e a contabilizacao da provisao de faturas de intercambio nao esta mais sendo realizada por meio desse lote. A mesma deve ser feita apenas no lote de Despesas com Intercambio.

	/*
	update	titulo_pagar	a
	set	a.nr_lote_contabil		= nr_lote_contabil_p
	where	a.ie_origem_titulo		= '16'
	and	nvl(a.nr_lote_contabil,0)	= 0
	and	((a.ie_situacao			!= 'C') or
		(ie_contab_tit_interc_cancel_w = 'S'))
	and	a.nr_seq_lote_enc_contas is null
	and	a.nr_seq_pls_lote_camara is null
	and	exists	(select	1
			from	ptu_fatura	x
			where	x.nr_titulo	= a.nr_titulo
			union
			select	1
			from	ptu_fatura	x
			where	x.nr_titulo_ndc	= a.nr_titulo)
	and	a.dt_emissao between dt_contabil_mes_w and dt_contabil_fp_w
	and	((ie_contab_provisorio_w = 'S') or (nvl(a.ie_status,'D') = 'D'));
	*/
	update	titulo_pagar_baixa_ops	a
	set	a.nr_lote_contabil	= nr_lote_contabil_p
	where	coalesce(a.nr_lote_contabil,0)	= 0
	and	exists (SELECT	1
			from	titulo_pagar_baixa	x
			where	x.nr_titulo		= a.nr_titulo
			and	x.nr_lote_contabil	= nr_lote_contabil_p
			and	x.nr_sequencia		= a.nr_seq_baixa);
			
	commit;		
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
	
	begin
	ie_compl_hist_w	:= obter_se_compl_tipo_lote(cd_estabelecimento_w, cd_tipo_lote_contabil_w);
	exception
	when others then
		ie_compl_hist_w	:= null;
	end;
	
	nm_agrupador_w	:= coalesce(trim(both obter_agrupador_contabil(cd_tipo_lote_contabil_w)),'NR_TITULO_PAGAR');
	
	open c_titulos_pagar;
	loop
	fetch c_titulos_pagar into
		nr_titulo_w,
		ie_receber_pagar_w,
		nm_atributo_w,
		vl_movimento_w,
		dt_contab_w,
		nr_seq_trans_financ_w,
		cd_estab_movto_w,
		cd_tipo_baixa_w,
		cd_tipo_recebimento_w,
		nr_seq_conta_banco_w,
		nr_bordero_w, 	
		nr_seq_escrit_w,
		nm_tabela_w,
		nm_atributo_ww,
		nr_seq_tab_orig_w,
		nr_seq_tab_compl_w,
		nr_seq_info_ctb_w,
		cd_conta_contabil_w;
	EXIT WHEN NOT FOUND; /* apply on c_titulos_pagar */
		begin
		nr_seq_fatura_w		:= null;
		nr_titulo_pagar_w	:= null;
		
		if (ie_receber_pagar_w = 'R') then
			if (nm_atributo_w = 'VL_RECEBIDO') then
				nr_tit_rec_baixado_w	:= nr_titulo_w;
			elsif (nm_atributo_w = 'VL_TITULO_RECEBER') then
				nr_tit_rec_gerado_w	:= nr_titulo_w;
			end if;
			
			select	a.cd_pessoa_fisica,
				a.cd_cgc
			into STRICT	cd_pessoa_fisica_w,
				cd_cgc_w
			from	titulo_receber a
			where	a.nr_titulo	= nr_titulo_w;
			
			begin
			ds_pessoa_w	:= substr(obter_nome_pf_pj(cd_pessoa_fisica_w, cd_cgc_w),1,80);
			exception
			when others then
				ds_pessoa_w	:= null;
			end;
		elsif (ie_receber_pagar_w = 'P') then
			if (nm_atributo_w = 'VL_PAGO') then
				nr_tit_pagar_baixado_w	:= nr_titulo_w;
			elsif (nm_atributo_w = 'VL_TITULO_PAGAR') then
				nr_tit_pagar_gerado_w	:= nr_titulo_w;
			end if;
			
			select	a.cd_pessoa_fisica,
				a.cd_cgc
			into STRICT	cd_pessoa_fisica_w,
				cd_cgc_w
			from	titulo_pagar a
			where	a.nr_titulo	= nr_titulo_w;
			
			begin
			ds_pessoa_w	:= substr(obter_nome_pf_pj(cd_pessoa_fisica_w, cd_cgc_w), 1, 80);
			exception
			when others then
				ds_pessoa_w	:= null;
			end;
			
			select	max(nr_sequencia)
			into STRICT	nr_seq_fatura_w
			from	ptu_fatura
			where	nr_titulo	= nr_titulo_w;
			
			nr_titulo_pagar_w	:= nr_titulo_w;
		end if;
		
		ds_conteudo_w	:= '';
		
		if (ie_compl_hist_w = 'S') then
			ds_conteudo_w	:= substr(	nr_seq_fatura_w		||'#@'||
							nr_titulo_pagar_w 	||'#@'||
							ds_pessoa_w 		||'#@'||
							nr_bordero_w		||'#@'||
							nr_seq_escrit_w, 1, 4000);

			begin
			ds_compl_historico_w	:= substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_pls_w, ds_conteudo_w),1,255);
			exception
			when others then
				ds_compl_historico_w	:= null;
			end;
		end if;
		
		if (nm_agrupador_w = 'NR_TITULO_PAGAR') then
			if (ie_receber_pagar_w = 'P') then
				nr_seq_agrupamento_w	:= nr_titulo_w;
			end if;
		elsif (nm_agrupador_w = 'NR_TITULO_RECEBER') then
			if (ie_receber_pagar_w = 'R') then
				nr_seq_agrupamento_w	:= nr_titulo_w;
			end if;
		elsif (nm_agrupador_w = 'NR_FATURA') then
			if (ie_receber_pagar_w = 'P') then
				select	max(nr_fatura)
				into STRICT	nr_fatura_w
				from	ptu_fatura	x
				where	x.nr_titulo	= nr_titulo_w;
				
				nr_seq_agrupamento_w	:= somente_numero(nr_fatura_w);
				
			end if;
		else
			nr_seq_agrupamento_w	:= null;
		end if;
		
		if (coalesce(nr_seq_agrupamento_w,0) = 0) then
			nr_seq_agrupamento_w	:= nr_titulo_w;
		end if;
		
		
		if (ie_receber_pagar_w = 'P') then
			nr_documento_ww		:= nr_titulo_w;
			ie_origem_documento_w	:= 2;
		elsif (ie_receber_pagar_w = 'R') then
			nr_documento_ww		:= nr_titulo_w;
			ie_origem_documento_w	:= 3;
		end if;
		
		select 	CASE WHEN ie_receber_pagar_w='P' THEN  nr_titulo_w  ELSE null END ,
			CASE WHEN ie_receber_pagar_w='R' THEN  nr_titulo_w  ELSE null END
		into STRICT	nr_titulo_pagar_ww,
			nr_titulo_receber_ww
		;

		nr_seq_movto_w := gerar_contab_trans_financ(	cd_estabelecimento_w, cd_estab_movto_w, nr_lote_contabil_p, nm_usuario_p, cd_conta_contabil_w, cd_centro_custo_w, null, nr_seq_agrupamento_w, dt_contab_w, vl_movimento_w, nr_seq_trans_financ_w, nr_seq_conta_banco_w, nm_atributo_w, null, null, 0, null, nr_documento_ww, null, ds_conteudo_w, null, null, null, null, nr_titulo_pagar_ww, null, null, null, null, null, null, null, cd_tipo_baixa_w, cd_tipo_recebimento_w, nr_seq_movto_w, nm_tabela_w, nr_titulo_receber_ww, null, ie_origem_documento_w, nr_seq_tab_orig_w, nr_seq_tab_compl_w, nr_seq_info_ctb_w);
		end;
	end loop;
	close c_titulos_pagar;
	
	CALL agrupa_movimento_contabil(	nr_lote_contabil_p,
					nm_usuario_p);
end if;

if (coalesce(ds_retorno_p::text, '') = '') then
	update	lote_contabil
	set	ie_situacao		= 'A',
		dt_geracao_lote		= CASE WHEN ie_exclusao_p='N' THEN  clock_timestamp() WHEN ie_exclusao_p='S' THEN  null END
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	if (ie_exclusao_p = 'S') then
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165188);
		
		CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
					2,
					'',
					nm_usuario_p);
	else
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165187);
		
		CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
					1,
					wheb_mensagem_pck.get_texto(1097175),
					nm_usuario_p);
	end if;
	
	commit;
else
	rollback;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_contabiliza_fatura_interc ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

