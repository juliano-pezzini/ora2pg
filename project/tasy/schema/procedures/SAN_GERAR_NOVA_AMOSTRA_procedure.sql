-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_gerar_nova_amostra ( nr_seq_exame_lote_p bigint, nr_seq_exame_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_amostra_atual_w	bigint;
nr_amostra_w		bigint;
nr_seq_exame_lote_w	bigint;
qtd_w			bigint;
nr_seq_doacao_w		bigint;
qt_refazer_w		bigint;
ie_exames_positivos_w	varchar(1);


BEGIN

ie_exames_positivos_w := obter_valor_param_usuario(450, 323, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);

select coalesce(max(nr_amostra),1),
	max(nr_sequencia)
into STRICT nr_amostra_w,
    nr_seq_exame_lote_w
from san_exame_lote
where nr_seq_doacao = (	SELECT nr_seq_doacao
			from san_exame_lote
			where nr_sequencia = nr_seq_exame_lote_p);

select	max(nr_amostra),
	max(nr_seq_doacao)
into STRICT	nr_amostra_atual_w,
	nr_seq_doacao_w
from	san_exame_lote
where	nr_sequencia = nr_seq_exame_lote_p;

if (nr_amostra_atual_w = nr_amostra_w) then

	select	nextval('san_exame_lote_seq')
	into STRICT	nr_seq_exame_lote_w
	;

	insert into san_exame_lote(nr_sequencia, cd_pf_realizou, dt_atualizacao,
					nm_usuario, ie_tipagem, nr_seq_doacao,
					nr_amostra, ie_origem)
	SELECT	nr_seq_exame_lote_w, cd_pf_realizou, clock_timestamp(),
		nm_usuario_p, ie_tipagem, nr_seq_doacao, 
		nr_amostra_w + 1, ie_origem
	from 	san_exame_lote
	where 	nr_sequencia = nr_seq_exame_lote_p;
end if;

update san_doacao
set	ie_status	= 4
where	nr_sequencia	= (	SELECT nr_seq_doacao
				from san_exame_lote
				where nr_sequencia = nr_seq_exame_lote_p);

select 	count(*)
into STRICT	qtd_w				
from	san_exame_realizado
where	nr_seq_exame_lote 	= nr_seq_exame_lote_w
and	nr_seq_exame		= nr_seq_exame_p;

if (qtd_w = 0) then

	insert into san_exame_realizado(nr_seq_exame_lote, nr_seq_exame, dt_atualizacao,
				 nm_usuario, dt_realizado)
	SELECT	nr_seq_exame_lote_w, a.nr_seq_exame, clock_timestamp(),
		nm_usuario_p, clock_timestamp()
	from	san_exame_realizado a
	where	a.nr_seq_exame_lote = nr_seq_exame_lote_p
	and	((ie_exames_positivos_w = 'N' and a.nr_seq_exame = CASE WHEN coalesce(nr_seq_exame_p,0)=0 THEN  a.nr_seq_exame  ELSE nr_seq_exame_p END )
		or (ie_exames_positivos_w = 'S' and upper(a.ds_resultado) in ('POSITIVO','REAGENTE','INDETERMINADO')
			and not exists (SELECT	1
					from	san_exame x
					where	x.nr_sequencia = a.nr_seq_exame
					and	x.ie_fator_rh = 'S')
			and not exists (select	1
					from	san_parametro y
					where	y.nr_seq_exame_rh = a.nr_seq_exame)
			and not exists (select 1 from san_exame_realizado x
					where x.nr_seq_exame_lote = nr_seq_exame_lote_w 
					and x.nr_seq_exame = a.nr_seq_exame))
    or (ie_exames_positivos_w = 'R' 
        and a.nr_seq_exame = coalesce(nr_seq_exame_p,a.nr_seq_exame)
        and exists (select 1 from SAN_REGRA_EXAME_SOROLOGIA s
            where a.nr_seq_exame = s.nr_seq_exame
            and substr(UPPER(a.ds_resultado), 0,1) = s.ie_resultado
            and ie_amostra = nr_amostra_atual_w
            and ie_acao = 'A')));

end if;

select 	count(*)
into STRICT	qt_refazer_w
from	san_exame a,
	san_exame_realizado b
where	a.nr_sequencia = b.nr_seq_exame
and	b.nr_seq_exame_lote = nr_seq_exame_lote_w
and	ie_refazer = 'S';

CALL gravar_log_tasy(99877, wheb_mensagem_pck.get_texto(799366,
						'NR_SEQ_DOACAO='||nr_seq_doacao_w||
						';NM_USUARIO='||nm_usuario_p||
						';DS_PERFIL='||obter_perfil_ativo||
						';QT_REFAZER='||qt_refazer_w||
						';IE_EXAMES_POSITIVOS='||ie_exames_positivos_w)||
						';NR_SEQ_EXAME_LOTE_W= '||nr_seq_exame_lote_w||
						';NR_SEQ_EXAME_P= '||nr_seq_exame_p, nm_usuario_p);						

select 	count(*)
into STRICT	qtd_w				
from	san_exame_realizado
where	nr_seq_exame_lote 	= nr_seq_exame_lote_w
and	nr_seq_exame		= nr_seq_exame_p;

if (qtd_w = 0 and ie_exames_positivos_w <> 'N' and (nr_seq_exame_p IS NOT NULL AND nr_seq_exame_p::text <> '')) then
	rollback;	
else
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_gerar_nova_amostra ( nr_seq_exame_lote_p bigint, nr_seq_exame_p bigint, nm_usuario_p text) FROM PUBLIC;

