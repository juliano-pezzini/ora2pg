-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_imp_pedido_compl_aut_v50 ( ds_arquivo_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_controle_exec_p INOUT bigint) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
ROTINA UTILIZADA NAS TRANSAÇÕES PTU VIA SCS HOMOLOGADAS COM A UNIMED BRASIL. 
QUANDO FOR ALTERAR, FAVOR VERIFICAR COM O ANÁLISTA RESPONSÁVEL PARA A REALIZAÇÃO DE TESTES. 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ X ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
Performance 
------------------------------------------------------------------------------------------------------------------- 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
ie_tipo_cliente_w		varchar(15);
cd_unimed_executora_w		varchar(4);
cd_unimed_beneficiario_w	varchar(4);
nr_seq_execucao_w		bigint;
cd_unimed_w			varchar(4);
cd_usuario_plano_w		varchar(30);
cd_unimed_prestador_req_w	varchar(4);
nr_seq_prestador_req_w		bigint;
nr_seq_prestador_w		bigint;
cd_especialidade_w		smallint;
ds_observacao_w			varchar(4000);
ds_biometria_w			varchar(4000);
nr_seq_origem_w			bigint;
cd_servico_w			integer;
qt_servico_w			varchar(8);
qt_servico_ww			double precision;
vl_servico_w			double precision;
vl_proced_ponto_w		varchar(15);
vl_proced_virgula_w		varchar(15);
ie_tipo_tabela_w		varchar(3);
ds_conteudo_w			varchar(4000);
cd_transacao_w			varchar(5);
nr_seq_segurado_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_pedido_novo_w		bigint;
nr_seq_import_w			smallint;
nr_seq_guia_w			bigint;
nr_seq_pedido_ant_w		bigint;
ie_insere_w			varchar(2);
cd_estabelecimento_w		bigint;
nr_seq_requisicao_w		bigint;
cd_guia_princ_w			varchar(20);
ds_opme_w			varchar(80);
nr_seq_guia_princ_w		bigint;
nr_seq_uni_exec_w		bigint;
nr_seq_requisicao_ww		bigint;
ie_funcao_scs_w			smallint;
nr_seq_guia_ww			bigint;

ie_contador_item_w		varchar(1);
nr_linha_anexo_w		bigint;
ie_existe_dados_anexo_w		bigint;
ds_diag_cit_hist_quimio_w	varchar(999);
ds_diag_cit_hist_radio_w	varchar(999);
ds_inf_relevante_quimio_w	varchar(999);
ds_inf_relevante_radio_w	varchar(999);
ds_justific_tecnica_w		varchar(999);
ds_material_solic_w		varchar(999);
ds_plano_terapeutico_w		varchar(999);
ds_observacao_quimio_w		varchar(999);
ds_observacao_radio_w		varchar(999);
ds_observacao_opme_w		varchar(999);
dt_diagnostico_ww		varchar(8);
dt_cirurgia_ww			varchar(8);
dt_irradiacao_ww		varchar(8);
dt_quimioterapia_ww		varchar(8);
dt_prev_administracao_ww	varchar(8);
dt_diagnostico_w		timestamp;
dt_cirurgia_w			timestamp;
dt_irradiacao_w			timestamp;
dt_quimioterapia_w		timestamp;
dt_prev_administracao_w		timestamp;
ds_indicacao_clinica_w		varchar(4000);
vl_proced_uni_ponto_w		varchar(15);
vl_proced_uni_virgula_w		varchar(15);
cd_anvisa_w			varchar(15);
cd_ref_fabricante_w		varchar(60);
ie_tipo_anexo_w			varchar(1);
dt_provavel_admin_w		timestamp;
dt_provavel_admin_ww		varchar(8);
cd_via_admin_w			smallint;
qt_frequencia_admin_w		smallint;
ie_pacote_w			varchar(1);
ie_ordem_w			smallint;
vl_uni_servico_w		double precision;
nr_versao_w			varchar(3);
nm_prof_solicitante_w		varchar(70);
nr_fone_prof_solic_w		bigint;
ds_email_prof_solic_w		varchar(70);
ie_anexo_w			varchar(1);
ie_sexo_w			varchar(1);
nr_idade_w			smallint;
nr_seq_pedido_anexo_w		ptu_pedido_aut_anexo.nr_sequencia%type;

qt_peso_ponto_w			varchar(10);
qt_peso_virgula_w		varchar(10);
qt_peso_w			real;
qt_altura_ponto_w		varchar(10);
qt_altura_virgula_w		varchar(10);
qt_altura_w			real;
qt_superficie_corp_ponto_w	varchar(10);
qt_superficie_corp_virgula_w	varchar(10);
qt_superficie_corp_w		real;

ie_anexo_quimio_w		varchar(1) 	:= 'n';
ie_anexo_radio_w		varchar(1) 	:= 'n';
ie_anexo_opme_w			varchar(1) 	:= 'n';

ds_sqlerrm_w			varchar(4000);
ds_log_w			varchar(4000);
ie_alto_custo_w			ptu_pedido_autorizacao.ie_alto_custo%type	:= 'x';

qt_reg_resp_w			bigint;

c01 CURSOR FOR 
	SELECT	nr_seq_importacao, 
		ds_valores 
	from	w_scs_importacao 
	where	nm_usuario	= nm_usuario_p 
	order by nr_seq_importacao;

BEGIN
begin 
open c01;
loop 
fetch c01 into 
	nr_seq_import_w, 
	ds_conteudo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	if (substr(ds_conteudo_w,1,4)	<> 'FIM$') then	 
		if (nr_seq_import_w	= 1) then 
		-- Primeiro Segmento - Dados da Transação 
 
			ie_contador_item_w	:= 'A';
			nr_linha_anexo_w	:= 0;
			ie_existe_dados_anexo_w	:= 0;
 
			cd_transacao_w			:= substr(ds_conteudo_w,1,5);
			ie_tipo_cliente_w		:= trim(both substr(ds_conteudo_w,6,15));
			cd_unimed_executora_w		:= trim(both substr(ds_conteudo_w,21,4));
			cd_unimed_beneficiario_w	:= trim(both substr(ds_conteudo_w,25,4));
			nr_seq_execucao_w		:= (regexp_replace(substr(ds_conteudo_w,29,10), '[^0-9]', ''))::numeric;
			--nr_seq_execucao_w		:= to_number(nvl(trim(substr(ds_conteudo_w,29,10)),0)); 
			nr_seq_origem_w			:= (regexp_replace(substr(ds_conteudo_w,39,10), '[^0-9]', ''))::numeric;
			--nr_seq_origem_w			:= to_number(nvl(trim(substr(ds_conteudo_w,39,10)),0)); 
			cd_unimed_w			:= trim(both substr(ds_conteudo_w,49,4));
			cd_usuario_plano_w		:= trim(both substr(ds_conteudo_w,53,13));
			cd_unimed_prestador_req_w	:= trim(both substr(ds_conteudo_w,66,4));
			nr_seq_prestador_req_w		:= (regexp_replace(substr(ds_conteudo_w,70,8), '[^0-9]', ''))::numeric;
			--nr_seq_prestador_req_w		:= to_number(nvl(trim(substr(ds_conteudo_w,70,8)),0)); 
			nr_seq_prestador_w		:= (regexp_replace(substr(ds_conteudo_w,82,8), '[^0-9]', ''))::numeric;
			--nr_seq_prestador_w		:= to_number(nvl(trim(substr(ds_conteudo_w,82,8)),0)); 
			cd_especialidade_w		:= (regexp_replace(substr(ds_conteudo_w,90,2), '[^0-9]', ''))::numeric;
			--cd_especialidade_w		:= to_number(nvl(trim(substr(ds_conteudo_w,90,2)),0)); 
			nr_versao_w			:= trim(both substr(ds_conteudo_w,92,3));
			nm_prof_solicitante_w		:= trim(both substr(ds_conteudo_w,95,70));
			nr_fone_prof_solic_w		:= (regexp_replace(substr(ds_conteudo_w,165,11), '[^0-9]', ''))::numeric;
			--nr_fone_prof_solic_w		:= to_number(nvl(trim(substr(ds_conteudo_w,165,11)),0)); 
			ds_email_prof_solic_w		:= trim(both substr(ds_conteudo_w,178,70));
			ie_anexo_w			:= trim(both substr(ds_conteudo_w,236,1));
			ie_sexo_w			:= trim(both substr(ds_conteudo_w,237,1));
			nr_idade_w			:= trim(both substr(ds_conteudo_w,238,3));
 
			begin 
				select	nr_sequencia 
				into STRICT	nr_seq_pedido_ant_w 
				from	ptu_pedido_compl_aut 
				where	nr_seq_execucao	= nr_seq_execucao_w 
				and	cd_unimed_executora	= cd_unimed_executora_w;
			exception 
			when others then 
				nr_seq_pedido_ant_w	:= 0;
			end;
 
			if (nr_seq_pedido_ant_w	<> 0) then 
				begin 
					select	nr_sequencia 
					into STRICT	nr_seq_controle_exec_p 
					from	ptu_controle_execucao 
					where	nr_seq_pedido_compl	= nr_seq_pedido_ant_w;
				exception 
				when others then 
					nr_seq_controle_exec_p	:= 0;
				end;
 
				select	count(1) 
				into STRICT	qt_reg_resp_w 
				from	ptu_resposta_autorizacao 
				where	nr_seq_execucao		= nr_seq_execucao_w 
				and	cd_unimed_executora	= cd_unimed_executora_w;
 
				if (qt_reg_resp_w = 0) then 
					goto final_env_resp;
				else 
					goto final;
				end if;
			end if;
 
			if (coalesce(cd_estabelecimento_p::text, '') = '') then 
				begin 
					select	cd_estabelecimento 
					into STRICT	cd_estabelecimento_w 
					from	pls_parametros_scs;
				exception 
				when others then 
					cd_estabelecimento_w	:= 1;
				end;
			else 
				cd_estabelecimento_w	:= cd_estabelecimento_p;
			end if;
			 
			select	nextval('ptu_pedido_compl_aut_seq') 
			into STRICT	nr_seq_pedido_novo_w 
			;
			 
			select	nextval('ptu_controle_execucao_seq') 
			into STRICT	nr_seq_controle_exec_p 
			;
			 
			select	coalesce(ie_funcao_scs,1) 
			into STRICT	ie_funcao_scs_w 
			from	pls_param_intercambio_scs;
 
			if (ie_funcao_scs_w	= 1) then 
				begin 
					select	nr_seq_guia, 
						coalesce(ie_alto_custo,'X') 
					into STRICT	nr_seq_guia_w, 
						ie_alto_custo_w 
					from	ptu_pedido_autorizacao 
					where	nr_seq_execucao		= nr_seq_origem_w 
					and	(nr_seq_guia IS NOT NULL AND nr_seq_guia::text <> '') 
					and	cd_unimed_executora	= cd_unimed_executora_w;
				exception 
				when others then 
					nr_seq_guia_w		:= null;
					nr_seq_requisicao_w	:= null;
				end;
			elsif (ie_funcao_scs_w	= 2) then 
				begin 
					select	nr_seq_requisicao, 
						coalesce(ie_alto_custo,'X') 
					into STRICT	nr_seq_requisicao_w, 
						ie_alto_custo_w 
					from	ptu_pedido_autorizacao 
					where	nr_seq_execucao		= nr_seq_origem_w 
					and	(nr_seq_requisicao IS NOT NULL AND nr_seq_requisicao::text <> '') 
					and	cd_unimed_executora	= cd_unimed_executora_w;
				exception 
				when others then 
					begin 
						--Tratamento para situações de clientes que possuem pedidos de autorização que foram gerados pela autorização e estão sendo complementados pela requisição. 
						select	nr_seq_guia, 
							coalesce(ie_alto_custo,'X') 
						into STRICT	nr_seq_guia_princ_w, 
							ie_alto_custo_w 
						from	ptu_pedido_autorizacao 
						where	nr_seq_execucao		= nr_seq_origem_w 
						and	(nr_seq_guia IS NOT NULL AND nr_seq_guia::text <> '') 
						and	cd_unimed_executora	= cd_unimed_executora_w;
					exception 
					when others then 
						nr_seq_requisicao_w	:= null;
					end;
				end;
			end if;
 
			begin 
				select	b.nr_sequencia, 
					pls_obter_produto_benef(b.nr_sequencia, clock_timestamp()) 
				into STRICT	nr_seq_segurado_w, 
					nr_seq_plano_w 
				from  pls_segurado_carteira a, 
					pls_segurado b 
				where  a.cd_usuario_plano	= cd_unimed_w||cd_usuario_plano_w 
				and   a.nr_seq_segurado	= b.nr_sequencia;
			exception 
			when others then 
				nr_seq_segurado_w	:= null;
				nr_seq_plano_w		:= null;
			end;
 
			begin 
				select	nr_sequencia 
				into STRICT	nr_seq_uni_exec_w 
				from	pls_congenere 
				where	(cd_cooperativa)::numeric 	= (cd_unimed_executora_w)::numeric;
			exception 
			when others then 
				select	max(nr_sequencia) 
				into STRICT	nr_seq_uni_exec_w 
				from	pls_congenere 
				where	cd_cooperativa	= cd_unimed_executora_w;
			end;
			 
 
			if (ie_tipo_cliente_w	= 'UNIMED') then 
				ie_tipo_cliente_w	:= 'U';
			elsif (ie_tipo_cliente_w	= 'PORTAL') then 
				ie_tipo_cliente_w	:= 'P';
			elsif (ie_tipo_cliente_w	= 'PRESTADOR') then 
				ie_tipo_cliente_w	:= 'R';
			end if;
 
			if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then 
				if	((coalesce(nr_seq_requisicao_w,0)	<> 0) or (nr_seq_guia_princ_w IS NOT NULL AND nr_seq_guia_princ_w::text <> '')) then 
					if (coalesce(nr_seq_guia_princ_w::text, '') = '') then 
						begin 
							select	max(nr_seq_guia) 
							into STRICT	nr_seq_guia_princ_w 
							from	pls_execucao_req_item 
							where	nr_seq_requisicao	= nr_seq_requisicao_w;
						exception 
						when others then 
							nr_seq_guia_princ_w	:= 0;
						end;
					end if;
 
					cd_guia_princ_w	:= substr(pls_obter_cd_seq_guia(nr_seq_guia_princ_w,null),1,20);
 
					select	nextval('pls_requisicao_seq') 
					into STRICT	nr_seq_requisicao_ww 
					;
 
					insert	into pls_requisicao(nr_sequencia, dt_requisicao, 
						 ie_tipo_guia, nr_seq_segurado, cd_estabelecimento, 
						 nr_seq_plano, nr_seq_prestador, ie_status, 
						 ie_estagio, dt_atualizacao, nm_usuario, 
						 ie_tipo_processo, cd_medico_solicitante, nr_seq_uni_exec, 
						 ie_tipo_intercambio, nr_seq_guia_principal, cd_guia_principal, 
						 nm_usuario_nrec, dt_atualizacao_nrec, ie_origem_solic) 
					values (nr_seq_requisicao_ww, clock_timestamp(), 
						 '2', nr_seq_segurado_w, cd_estabelecimento_w, 
						 nr_seq_plano_w, null, 'P', 
						 1, clock_timestamp(), nm_usuario_p, 
						 'I', null, nr_seq_uni_exec_w, 
						 'E', nr_seq_guia_princ_w, cd_guia_princ_w, 
						 nm_usuario_p, clock_timestamp(), 'I');
 
					insert	into pls_requisicao_diagnostico(nr_sequencia, nr_seq_requisicao, cd_doenca, 
						dt_diagnostico, dt_atualizacao, nm_usuario, 
						dt_atualizacao_nrec, nm_usuario_nrec, ie_classificacao, 
						ie_tipo_doenca, ds_diagnostico, ie_indicacao_acidente, 
						ie_unidade_tempo, qt_tempo) 
					(SELECT	nextval('pls_requisicao_diagnostico_seq'), nr_seq_requisicao_ww, cd_doenca, 
						dt_diagnostico, clock_timestamp(), nm_usuario_p, 
						clock_timestamp(), nm_usuario_p, ie_classificacao, 
						ie_tipo_doenca, ds_diagnostico, ie_indicacao_acidente, 
						ie_unidade_tempo, qt_tempo 
					from	pls_requisicao_diagnostico 
					where	nr_seq_requisicao	= nr_seq_requisicao_w);
 
					CALL pls_requisicao_gravar_hist(	nr_seq_requisicao_ww,'L','Recebido e processado o pedido de complemento autorização da Unimed '||cd_unimed_executora_w, 
									null,nm_usuario_p);
 
				elsif (coalesce(nr_seq_guia_w,0)	<> 0) then 
					cd_guia_princ_w	:= substr(pls_obter_cd_seq_guia(nr_seq_guia_w,null),1,20);
					 
					select	nextval('pls_guia_plano_seq') 
					into STRICT	nr_seq_guia_ww 
					;
 
					insert	into pls_guia_plano(nr_sequencia, dt_solicitacao, 
						 ie_tipo_guia, nr_seq_segurado, cd_estabelecimento, 
						 nr_seq_plano, nr_seq_prestador, ie_status, 
						 ie_estagio, dt_atualizacao, nm_usuario, 
						 ie_tipo_processo, cd_medico_solicitante, nr_seq_uni_exec, 
						 ie_tipo_intercambio, nr_seq_guia_principal, cd_guia_principal, 
						 nm_usuario_nrec, dt_atualizacao_nrec, ie_origem_solic) 
					values (nr_seq_guia_ww, clock_timestamp(), 
						 '2', nr_seq_segurado_w, cd_estabelecimento_w, 
						 nr_seq_plano_w, null, '2', 
						 7, clock_timestamp(), nm_usuario_p, 
						 'I', null, nr_seq_uni_exec_w, 
						 'E', nr_seq_guia_w, cd_guia_princ_w, 
						 nm_usuario_p, clock_timestamp(), 'I');
 
					insert	into pls_diagnostico(nr_sequencia, dt_atualizacao, nm_usuario, 
						dt_atualizacao_nrec, nm_usuario_nrec, ie_tipo_doenca, 
						ie_indicacao_acidente, ie_classificacao, cd_doenca, 
						ds_diagnostico, nr_seq_guia, ie_tipo_doenca_imp, 
						ie_indicacao_acidente_imp, ie_classificacao_imp, cd_doenca_imp, 
						ds_diagnostico_imp, nm_tabela_imp, ie_unidade_tempo, 
						qt_tempo) 
					(SELECT	nextval('pls_diagnostico_seq'), clock_timestamp(), nm_usuario_p, 
						clock_timestamp(), nm_usuario_p, ie_tipo_doenca, 
						ie_indicacao_acidente, ie_classificacao, cd_doenca, 
						ds_diagnostico, nr_seq_guia_ww, ie_tipo_doenca_imp, 
						ie_indicacao_acidente_imp, ie_classificacao_imp, cd_doenca_imp, 
						ds_diagnostico_imp, nm_tabela_imp, ie_unidade_tempo, 
						qt_tempo 
					from	pls_diagnostico 
					where	nr_seq_guia = nr_seq_guia_w);
 
					CALL pls_guia_gravar_historico(	nr_seq_guia_ww,2,'Recebido e processado o pedido de complemento autorização da Unimed '||cd_unimed_executora_w, 
									null,nm_usuario_p);
				end if;
			end if;
 
			insert	into ptu_pedido_compl_aut(nr_sequencia, ie_tipo_cliente, cd_unimed_executora, 
				 cd_unimed_beneficiario, nr_seq_execucao, nr_seq_origem, 
				 cd_unimed, cd_usuario_plano, dt_atualizacao, 
				 nm_usuario, nr_seq_guia, nr_seq_requisicao, 
				 cd_unimed_prestador_req, nr_seq_prestador_req, nr_seq_prestador, 
				 cd_especialidade, ds_observacao, ds_biometria, 
				 cd_transacao, ds_arquivo_pedido, nm_usuario_nrec, 
				 dt_atualizacao_nrec, nr_versao, nm_prof_solicitante, 
				 nr_fone_prof_solic, ds_email_prof_solic,ie_anexo, 
				 ie_sexo, nr_idade) 
			values (nr_seq_pedido_novo_w, ie_tipo_cliente_w, cd_unimed_executora_w, 
				 cd_unimed_beneficiario_w, nr_seq_execucao_w, nr_seq_origem_w, 
				 cd_unimed_w, cd_usuario_plano_w, clock_timestamp(), 
				 nm_usuario_p, nr_seq_guia_ww, nr_seq_requisicao_ww, 
				 cd_unimed_prestador_req_w, nr_seq_prestador_req_w, nr_seq_prestador_w, 
				 cd_especialidade_w, ds_observacao_w, ds_biometria_w, 
				 cd_transacao_w, ds_arquivo_p, nm_usuario_p, 
				 clock_timestamp(), nr_versao_w, nm_prof_solicitante_w, 
				 nr_fone_prof_solic_w, substr(ds_email_prof_solic_w,1,60), UPPER(ie_anexo_w), 
				 ie_sexo_w, nr_idade_w);
 
			insert	into ptu_controle_execucao(nr_sequencia, dt_atualizacao, nm_usuario, 
				 nr_seq_pedido_compl, nr_seq_pedido_aut, nm_usuario_nrec, 
				 dt_atualizacao_nrec) 
			values (nr_seq_controle_exec_p, clock_timestamp(), nm_usuario_p, 
				 nr_seq_pedido_novo_w, null, nm_usuario_p, 
				 clock_timestamp());
 
		elsif (nr_seq_import_w	= 2) then 
		-- Segundo Segmento - Observação 
 
			ds_observacao_w		:= trim(both substr(ds_conteudo_w,1,999));
			 
			CALL ptu_insere_observacao_scs(	ds_observacao_w, nr_seq_segurado_w, nr_seq_guia_ww, 
							nr_seq_requisicao_ww, nr_seq_pedido_novo_w, 'PC', 
							nm_usuario_p);
 
		elsif (nr_seq_import_w	= 3) then 
		-- Terceiro Segmento - Indicação Clínica 
		 
			ds_indicacao_clinica_w	:= trim(both substr(ds_conteudo_w,1,999));
 
			CALL ptu_insere_indic_clinica_scs(	ds_indicacao_clinica_w, nr_seq_segurado_w, nr_seq_guia_ww, 
							nr_seq_requisicao_ww, nr_seq_pedido_novo_w, 'PC', 
							nm_usuario_p);
 
		elsif (nr_seq_import_w	= 4) then 
		-- Quarto Segmento - Dados Biométricos 
		 
			ds_biometria_w		:= trim(both substr(ds_conteudo_w,1,999));
 
			CALL ptu_insere_biometria_scs(	ds_biometria_w, nr_seq_segurado_w, nr_seq_guia_ww, 
							nr_seq_requisicao_ww, nr_seq_pedido_novo_w, 'PC', 
							nm_usuario_p);
 
		elsif (nr_seq_import_w	> 4) and (substr(ds_conteudo_w,1,9)	<> 'FIMBLOCO$')	and (ie_contador_item_w	= 'A') then 
		-- Bloco de Serviços 
 
			ie_tipo_tabela_w	:= substr(ds_conteudo_w,1,1);
			cd_servico_w		:= (regexp_replace(substr(ds_conteudo_w,2,8), '[^0-9]', ''))::numeric;
			--cd_servico_w		:= to_number(nvl(trim(substr(ds_conteudo_w,2,8)),0)); 
			qt_servico_w		:= coalesce(trim(both substr(ds_conteudo_w,10,8)),0);
			ds_opme_w		:= trim(both substr(ds_conteudo_w,18,80));
			vl_proced_ponto_w	:= substr(ds_conteudo_w,98,12)||'.'||substr(ds_conteudo_w,110,2);
			vl_proced_virgula_w	:= substr(ds_conteudo_w,98,12)||','||substr(ds_conteudo_w,110,2);
			vl_proced_uni_ponto_w	:= substr(ds_conteudo_w,112,12)||'.'||substr(ds_conteudo_w,124,2);
			vl_proced_uni_virgula_w	:= substr(ds_conteudo_w,112,12)||','||substr(ds_conteudo_w,124,2);
			cd_anvisa_w		:= trim(both substr(ds_conteudo_w,126,15));
			cd_ref_fabricante_w	:= trim(both substr(ds_conteudo_w,141,60));
			ie_tipo_anexo_w		:= trim(both substr(ds_conteudo_w,201,1));
			dt_provavel_admin_ww	:= trim(both substr(ds_conteudo_w,208,2)||substr(ds_conteudo_w,206,2)||substr(ds_conteudo_w,202,4));
			cd_via_admin_w		:= (regexp_replace(substr(ds_conteudo_w,210,2), '[^0-9]', ''))::numeric;
			--cd_via_admin_w		:= to_number(nvl(trim(substr(ds_conteudo_w,210,2)),0)); 
			qt_frequencia_admin_w	:= (regexp_replace(substr(ds_conteudo_w,212,2), '[^0-9]', ''))::numeric;
			--qt_frequencia_admin_w	:= to_number(nvl(trim(substr(ds_conteudo_w,212,2)),0));-- 
			ie_pacote_w		:= trim(both substr(ds_conteudo_w,214,1));
			ie_ordem_w		:= (regexp_replace(substr(ds_conteudo_w,215,1), '[^0-9]', ''))::numeric;
			--ie_ordem_w		:= to_number(nvl(trim(substr(ds_conteudo_w,215,1)),0)); 
 
			if (ie_tipo_anexo_w = 1) then 
				ie_anexo_quimio_w	:= 'S';
			elsif (ie_tipo_anexo_w = 2) 	then 
				ie_anexo_radio_w	:= 'S';
			elsif (ie_tipo_anexo_w = 3) then			 
				ie_anexo_opme_w		:= 'S';
			end if;
			 
			if (coalesce(dt_provavel_admin_ww,'X') <> 'X') then 
				dt_provavel_admin_w	:= to_date(dt_provavel_admin_ww, 'dd/mm/rrrr');
			end if;
			 
			if (vl_proced_virgula_w	= '000000000000,00') and (vl_proced_ponto_w	= '000000000000.00') then 
				vl_servico_w := 0;
			else 
				begin 
					vl_servico_w := (vl_proced_ponto_w)::numeric;
				exception 
				when others then 
					vl_servico_w := (vl_proced_virgula_w)::numeric;
				end;
			end if;
			if (vl_proced_uni_virgula_w	= '000000000000,00') and (vl_proced_uni_ponto_w	= '000000000000.00') then 
				vl_uni_servico_w := 0;
			else 
				begin 
					vl_uni_servico_w := (vl_proced_uni_ponto_w)::numeric;
				exception 
				when others then 
					vl_uni_servico_w := (vl_proced_uni_virgula_w)::numeric;
				end;
			end if;
 
			begin 
				qt_servico_ww	:= (ptu_obter_qtd_env_itens_scs(null, qt_servico_w, 'R'))::numeric;
			exception 
			when others then 
				qt_servico_ww 	:= (replace(ptu_obter_qtd_env_itens_scs(null, qt_servico_w, 'R'),',','.'))::numeric;
			end;
 
			ptu_insere_servicos_scs(	ie_tipo_tabela_w, cd_servico_w, qt_servico_ww, 
							ds_opme_w, vl_servico_w, null, 
							nr_seq_segurado_w, 'PC', nr_seq_guia_ww, 
							nr_seq_requisicao_ww, nr_seq_pedido_novo_w, cd_unimed_beneficiario_w, 
							cd_estabelecimento_p, nm_usuario_p, vl_uni_servico_w, 
							cd_anvisa_w, cd_ref_fabricante_w, ie_tipo_anexo_w, 
							dt_provavel_admin_w, cd_via_admin_w, qt_frequencia_admin_w, 
							ie_pacote_w, ie_ordem_w);
		elsif (substr(ds_conteudo_w,1,9)	= 'FIMBLOCO$') then 
		-- Fim do bloco de serviços 
 
			ie_contador_item_w	:= 'I';
			nr_linha_anexo_w 	:= nr_seq_import_w;
 
		elsif (ie_anexo_quimio_w = 'S') and (ie_contador_item_w	= 'I') and((nr_linha_anexo_w + 1)	= nr_seq_import_w) then 
		-- Dados Anexo - Diagnóstico Citopatológico e Histopatológico - Quimioterapia 
 
			ds_diag_cit_hist_quimio_w	:= trim(both substr(ds_conteudo_w,1,999));
 
			if (ds_diag_cit_hist_quimio_w IS NOT NULL AND ds_diag_cit_hist_quimio_w::text <> '') then 
				ie_existe_dados_anexo_w	:= ie_existe_dados_anexo_w + 1;
			end if;
 
		elsif (ie_anexo_radio_w = 'S') and (ie_contador_item_w	= 'I') and((nr_linha_anexo_w + 2)	= nr_seq_import_w) then 
		-- Dados Anexo - Diagnóstico Citopatológico e Histopatológico - Radioterapia 
 
			ds_diag_cit_hist_radio_w	:= trim(both substr(ds_conteudo_w,1,999));
 
			if (ds_diag_cit_hist_radio_w IS NOT NULL AND ds_diag_cit_hist_radio_w::text <> '') then 
				ie_existe_dados_anexo_w	:= ie_existe_dados_anexo_w + 1;
			end if;
 
		elsif (ie_anexo_quimio_w = 'S') and (ie_contador_item_w	= 'I') and((nr_linha_anexo_w + 3)	= nr_seq_import_w) then 
		-- Dados Anexo - Informações Relevantes - Quimioterapia 
 
			ds_inf_relevante_quimio_w	:= trim(both substr(ds_conteudo_w,1,999));
 
			if (ds_inf_relevante_quimio_w IS NOT NULL AND ds_inf_relevante_quimio_w::text <> '') then 
				ie_existe_dados_anexo_w	:= ie_existe_dados_anexo_w + 1;
			end if;
 
		elsif (ie_anexo_radio_w = 'S') and (ie_contador_item_w	= 'I') and((nr_linha_anexo_w + 4)	= nr_seq_import_w) then 
		-- Dados Anexo - Informações Relevantes - Radioterapia 
 
			ds_inf_relevante_radio_w	:= trim(both substr(ds_conteudo_w,1,999));
 
			if (ds_inf_relevante_radio_w IS NOT NULL AND ds_inf_relevante_radio_w::text <> '') then 
				ie_existe_dados_anexo_w	:= ie_existe_dados_anexo_w + 1;
			end if;
 
		elsif (ie_anexo_quimio_w = 'S') and (ie_contador_item_w	= 'I') and((nr_linha_anexo_w + 5)	= nr_seq_import_w) then 
		-- Dados Anexo - Plano Terapêutico - Quimioterapia 
 
			ds_plano_terapeutico_w		:= trim(both substr(ds_conteudo_w,1,999));
 
			if (ds_plano_terapeutico_w IS NOT NULL AND ds_plano_terapeutico_w::text <> '') then 
				ie_existe_dados_anexo_w	:= ie_existe_dados_anexo_w + 1;
			end if;
 
		elsif (ie_anexo_quimio_w = 'S') and (ie_contador_item_w	= 'I') and((nr_linha_anexo_w + 6)	= nr_seq_import_w) then 
		-- Observação Anexo - Quimioterapia 
 
			ds_observacao_quimio_w		:= trim(both substr(ds_conteudo_w,1,999));
 
			if (ds_observacao_quimio_w IS NOT NULL AND ds_observacao_quimio_w::text <> '') then 
				ie_existe_dados_anexo_w	:= ie_existe_dados_anexo_w + 1;
			end if;
 
		elsif (ie_anexo_radio_w = 'S') and (ie_contador_item_w	= 'I') and((nr_linha_anexo_w + 7)	= nr_seq_import_w) then 
		-- Observação Anexo - Radioterapia 
 
			ds_observacao_radio_w		:= trim(both substr(ds_conteudo_w,1,999));
 
			if (ds_observacao_radio_w IS NOT NULL AND ds_observacao_radio_w::text <> '') then 
				ie_existe_dados_anexo_w	:= ie_existe_dados_anexo_w + 1;
			end if;	
 
		elsif (ie_anexo_opme_w = 'S') and (ie_contador_item_w	= 'I') and((nr_linha_anexo_w + 8)	= nr_seq_import_w) then 
		-- Observação Anexo - OPME 
 
			ds_observacao_opme_w		:= trim(both substr(ds_conteudo_w,1,999));
 
			if (ds_observacao_opme_w IS NOT NULL AND ds_observacao_opme_w::text <> '') then 
				ie_existe_dados_anexo_w	:= ie_existe_dados_anexo_w + 1;
			end if;	
 
		elsif (ie_anexo_opme_w = 'S') and (ie_contador_item_w	= 'I') and((nr_linha_anexo_w + 9)	= nr_seq_import_w) then 
		-- Dados Anexo - Justificativa Técnica - OPME 
 
			ds_justific_tecnica_w		:= trim(both substr(ds_conteudo_w,1,999));
 
			if (ds_justific_tecnica_w IS NOT NULL AND ds_justific_tecnica_w::text <> '') then 
				ie_existe_dados_anexo_w	:= ie_existe_dados_anexo_w + 1;
			end if;	
 
		elsif (ie_anexo_opme_w = 'S') and (ie_contador_item_w	= 'I') and((nr_linha_anexo_w + 10)	= nr_seq_import_w) then 
		-- Dados Anexo - Descrição do Material Solicitado - OPME 
 
			ds_material_solic_w		:= trim(both substr(ds_conteudo_w,1,999));
 
			if (ds_material_solic_w IS NOT NULL AND ds_material_solic_w::text <> '') then 
				ie_existe_dados_anexo_w	:= ie_existe_dados_anexo_w + 1;
			end if;
 
		elsif (ie_anexo_quimio_w = 'S') and (ie_contador_item_w = 'I') and ((nr_linha_anexo_w + 11) = nr_seq_import_w) then 
		-- Dados Anexo - Quimioterapia - (Mandatório se Quimioterapia) 
 
			dt_diagnostico_ww	:= trim(both substr(ds_conteudo_w,21,2)||substr(ds_conteudo_w,19,2)||substr(ds_conteudo_w,15,4));
			dt_cirurgia_ww		:= trim(both substr(ds_conteudo_w,96,2)||substr(ds_conteudo_w,94,2)||substr(ds_conteudo_w,90,4));
			dt_irradiacao_ww	:= trim(both substr(ds_conteudo_w,144,2)||substr(ds_conteudo_w,142,2)||substr(ds_conteudo_w,138,4));
 
			qt_peso_virgula_w	:= coalesce(trim(both substr(ds_conteudo_w,6,3)||','||substr(ds_conteudo_w,9,2)),0);
			qt_peso_ponto_w		:= coalesce(trim(both substr(ds_conteudo_w,6,3)||'.'||substr(ds_conteudo_w,9,2)),0);			
			qt_altura_virgula_w	:= coalesce(trim(both substr(ds_conteudo_w,1,3)||','||substr(ds_conteudo_w,4,2)),0);
			qt_altura_ponto_w	:= coalesce(trim(both substr(ds_conteudo_w,1,3)||'.'||substr(ds_conteudo_w,4,2)),0);			
			qt_superficie_corp_virgula_w	:= coalesce(trim(both substr(ds_conteudo_w,11,2)||','||substr(ds_conteudo_w,13,2)),0);
			qt_superficie_corp_ponto_w	:= coalesce(trim(both substr(ds_conteudo_w,11,2)||'.'||substr(ds_conteudo_w,13,2)),0);			
			 
			if (qt_peso_virgula_w	= '000,00') and (qt_peso_ponto_w	= '000.00') then 
				qt_peso_w := 0;
			else 
				begin 
					qt_peso_w := (qt_peso_virgula_w)::numeric;
				exception 
				when others then 
					qt_peso_w := (qt_peso_ponto_w)::numeric;
				end;
			end if;
			 
			if (qt_altura_virgula_w	= '000,00') and (qt_altura_ponto_w	= '000.00') then 
				qt_peso_w := 0;
			else 
				begin 
					qt_altura_w := (qt_altura_virgula_w)::numeric;
				exception 
				when others then 
					qt_altura_w := (qt_altura_ponto_w)::numeric;
				end;
			end if;
			 
			if (qt_superficie_corp_virgula_w	= '00,00') and (qt_superficie_corp_ponto_w	= '00.00') then 
				qt_peso_w := 0;
			else 
				begin 
					qt_superficie_corp_w := (qt_superficie_corp_virgula_w)::numeric;
				exception 
				when others then 
					qt_superficie_corp_w := (qt_superficie_corp_ponto_w)::numeric;
				end;
			end if;
			 
			if (coalesce(dt_diagnostico_ww,'X')	<> 'X') then 
				dt_diagnostico_w	:= to_date(dt_diagnostico_ww, 'dd/mm/rrrr');
			end if;
			if (coalesce(dt_cirurgia_ww,'X')	<> 'X') then 
				dt_cirurgia_w		:= to_date(dt_cirurgia_ww, 'dd/mm/rrrr');
			end if;
			if (coalesce(dt_irradiacao_ww,'X')	<> 'X') then 
				dt_irradiacao_w		:= to_date(dt_irradiacao_ww, 'dd/mm/rrrr');
			end if;
 
			select	nextval('ptu_pedido_aut_anexo_seq') 
			into STRICT	nr_seq_pedido_anexo_w 
			;
 
			insert 	into ptu_pedido_aut_anexo(nr_sequencia, nr_seq_pedido, dt_atualizacao, 
				 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
				 ds_procedimento_cirurgico, dt_real_proc_cirurgico, ds_quimioterapia, 
				 dt_quimioterapia, qt_dose_total, qt_dose_dia, 
				 dt_inicio_previsto, qt_dias_previsto, qt_peso, 
				 qt_altura, qt_superficie_corporal, ds_area_irradiada, 
				 nr_ciclo_previsto, dt_radioterapia, nr_ciclo_atual, 
				 qt_intervalo_ciclo, nr_campos, ie_tipo_anexo, 
				 nr_seq_pedido_compl, ds_justificativa, ds_especificacao, 
				 ds_observacao, nm_profissional_solic, nr_telef_prof_solic, 
				 ds_email_prof_solic) 
			values (nr_seq_pedido_anexo_w, NULL, clock_timestamp(), 
				 nm_usuario_p, clock_timestamp(), nm_usuario_p, 
				 trim(both substr(ds_conteudo_w,50,40)), dt_cirurgia_w, '', 
				 null, null, null, 
				 null, null, qt_peso_w, 
				 qt_altura_w, qt_superficie_corp_w, trim(both substr(ds_conteudo_w,98,40)), 
				 (coalesce(trim(both substr(ds_conteudo_w,43,2)),0))::numeric , dt_irradiacao_w, (coalesce(trim(both substr(ds_conteudo_w,45,2)),0))::numeric , 
				 (coalesce(trim(both substr(ds_conteudo_w,47,3)),0))::numeric , null, 'QU', 
				 nr_seq_pedido_novo_w, '', '', 
				 ds_observacao_quimio_w, trim(both substr(ds_conteudo_w,146,70)), (coalesce(trim(both substr(ds_conteudo_w,216,11)),0))::numeric , 
				 trim(both substr(ds_conteudo_w,227,60)));
 
			if (trim(both substr(ds_conteudo_w,23,4)) is not null) then --CID 01 
				insert	into ptu_pedido_aut_diag_anexo(nr_sequencia, nr_seq_pedido_anexo ,dt_atualizacao, 
					 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
					 cd_doenca, dt_diagnostico, ie_estadia_tumor, 
					 cd_finalidade_tratamento, ie_tipo_quimioterapia, ie_capacidade_funcional, 
					 cd_diagnostico_imagem, ie_tipo_diagnostico, ds_plano_terapeutico, 
					 ds_diagnostico, ds_observacao) 
				values (nextval('ptu_pedido_aut_diag_anexo_seq'), nr_seq_pedido_anexo_w, clock_timestamp(), 
					 nm_usuario_p, clock_timestamp(), nm_usuario_p, 
					 trim(both substr(ds_conteudo_w,23,4)), null, null, 
					 null, null, null, 
					 null, 'DD', null, 
					 null, null);
			end if;	
			if (trim(both substr(ds_conteudo_w,27,4)) is not null) then	--CID 02 
				insert	into ptu_pedido_aut_diag_anexo(nr_sequencia, nr_seq_pedido_anexo ,dt_atualizacao, 
					 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
					 cd_doenca, dt_diagnostico, ie_estadia_tumor, 
					 cd_finalidade_tratamento, ie_tipo_quimioterapia, ie_capacidade_funcional, 
					 cd_diagnostico_imagem, ie_tipo_diagnostico, ds_plano_terapeutico, 
					 ds_diagnostico, ds_observacao) 
				values (nextval('ptu_pedido_aut_diag_anexo_seq'), nr_seq_pedido_anexo_w, clock_timestamp(), 
					 nm_usuario_p, clock_timestamp(), nm_usuario_p, 
					 trim(both substr(ds_conteudo_w,27,4)), null, null, 
					 null, null, null, 
					 null, 'DD', null, 
					 null, null);
			end if;	
			if (trim(both substr(ds_conteudo_w,31,4)) is not null) then	--CID 03 
				insert	into ptu_pedido_aut_diag_anexo(nr_sequencia, nr_seq_pedido_anexo ,dt_atualizacao, 
					 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
					 cd_doenca, dt_diagnostico, ie_estadia_tumor, 
					 cd_finalidade_tratamento, ie_tipo_quimioterapia, ie_capacidade_funcional, 
					 cd_diagnostico_imagem, ie_tipo_diagnostico, ds_plano_terapeutico, 
					 ds_diagnostico, ds_observacao) 
				values (nextval('ptu_pedido_aut_diag_anexo_seq'), nr_seq_pedido_anexo_w, clock_timestamp(), 
					 nm_usuario_p, clock_timestamp(), nm_usuario_p, 
					 trim(both substr(ds_conteudo_w,31,4)), null, null, 
					 null, null, null, 
					 null, 'DD', null, 
					 null, null);
			end if;	
			if (trim(both substr(ds_conteudo_w,35,4)) is not null) then	--CID 04 
				insert	into ptu_pedido_aut_diag_anexo(nr_sequencia, nr_seq_pedido_anexo ,dt_atualizacao, 
					 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
					 cd_doenca, dt_diagnostico, ie_estadia_tumor, 
					 cd_finalidade_tratamento, ie_tipo_quimioterapia, ie_capacidade_funcional, 
					 cd_diagnostico_imagem, ie_tipo_diagnostico, ds_plano_terapeutico, 
					 ds_diagnostico, ds_observacao) 
				values (nextval('ptu_pedido_aut_diag_anexo_seq'), nr_seq_pedido_anexo_w, clock_timestamp(), 
					 nm_usuario_p, clock_timestamp(), nm_usuario_p, 
					 trim(both substr(ds_conteudo_w,35,4)), null, null, 
					 null, null, null, 
					 null, 'DD', null, 
					 null, null);
			end if;	
			 
			-- Diagnóstico tratamento 
			insert	into ptu_pedido_aut_diag_anexo(nr_sequencia, nr_seq_pedido_anexo ,dt_atualizacao, 
				 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
				 cd_doenca, dt_diagnostico, ie_estadia_tumor, 
				 cd_finalidade_tratamento, ie_tipo_quimioterapia, ie_capacidade_funcional, 
				 cd_diagnostico_imagem, ie_tipo_diagnostico, ds_plano_terapeutico, 
				 ds_diagnostico, ds_observacao) 
			values (nextval('ptu_pedido_aut_diag_anexo_seq'), nr_seq_pedido_anexo_w, clock_timestamp(), 
				 nm_usuario_p, clock_timestamp(), nm_usuario_p, 
				 null, dt_diagnostico_w, trim(both substr(ds_conteudo_w,39,1)), 
				 trim(both substr(ds_conteudo_w,40,1)), trim(both substr(ds_conteudo_w,42,1)), trim(both substr(ds_conteudo_w,41,1)), 
				 null, 'DT', ds_plano_terapeutico_w, 
				 ds_diag_cit_hist_quimio_w, ds_inf_relevante_quimio_w);
				 
			if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then 
				CALL ptu_inserir_dados_anexo_req(nr_seq_requisicao_ww, nr_seq_pedido_anexo_w, ds_biometria_w, nm_usuario_p);
			elsif (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then 
				CALL ptu_inserir_dados_anexo_guia(nr_seq_guia_ww, nr_seq_pedido_anexo_w, ds_biometria_w, nm_usuario_p);
			end if;
 
		elsif (ie_anexo_radio_w = 'S') and (ie_contador_item_w = 'I') and ((nr_linha_anexo_w + 12) = nr_seq_import_w) then 
		-- Dados Anexo - Radioterapia (Mandatório se Radioterapia)	 
 
			dt_diagnostico_ww		:= trim(both substr(ds_conteudo_w,7,2)||substr(ds_conteudo_w,5,2)||substr(ds_conteudo_w,1,4));
			dt_prev_administracao_ww	:= trim(both substr(ds_conteudo_w,49,2)||substr(ds_conteudo_w,47,2)||substr(ds_conteudo_w,43,4));
			dt_cirurgia_ww			:= trim(both substr(ds_conteudo_w,97,2)||substr(ds_conteudo_w,95,2)||substr(ds_conteudo_w,91,4));
			dt_quimioterapia_ww		:= trim(both substr(ds_conteudo_w,145,2)||substr(ds_conteudo_w,143,2)||substr(ds_conteudo_w,139,4));
 
			if (coalesce(dt_diagnostico_ww,'X')	<> 'X') then 
				dt_diagnostico_w	:= to_date(dt_diagnostico_ww, 'dd/mm/rrrr');
			end if;
			if (coalesce(dt_cirurgia_ww,'X')	<> 'X') then 
				dt_cirurgia_w		:= to_date(dt_cirurgia_ww, 'dd/mm/rrrr');
			end if;
			if (coalesce(dt_quimioterapia_ww,'X')	<> 'X') then 
				dt_quimioterapia_w	:= to_date(dt_quimioterapia_ww, 'dd/mm/rrrr');
			end if;
			if (coalesce(dt_prev_administracao_ww,'X')	<> 'X') then 
				dt_prev_administracao_w	:= to_date(dt_prev_administracao_ww, 'dd/mm/rrrr');
			end if;
			select	nextval('ptu_pedido_aut_anexo_seq') 
			into STRICT	nr_seq_pedido_anexo_w 
			;
 
			insert 	into ptu_pedido_aut_anexo(nr_sequencia, nr_seq_pedido, dt_atualizacao, 
				 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
				 ds_procedimento_cirurgico, dt_real_proc_cirurgico, ds_quimioterapia, 
				 dt_quimioterapia, qt_dose_total, qt_dose_dia, 
				 dt_inicio_previsto, qt_dias_previsto, qt_peso, 
				 qt_altura, qt_superficie_corporal, ds_area_irradiada, 
				 nr_ciclo_previsto, dt_radioterapia, nr_ciclo_atual, 
				 qt_intervalo_ciclo, nr_campos, ie_tipo_anexo, 
				 nr_seq_pedido_compl, ds_justificativa, ds_especificacao, 
				 ds_observacao, nm_profissional_solic, nr_telef_prof_solic, 
				 ds_email_prof_solic) 
			values (nr_seq_pedido_anexo_w, null, clock_timestamp(), 
				 nm_usuario_p, clock_timestamp(), nm_usuario_p, 
				 trim(both substr(ds_conteudo_w,51,40)), dt_cirurgia_w, trim(both substr(ds_conteudo_w,99,40)), 
				 dt_quimioterapia_w, (coalesce(trim(both substr(ds_conteudo_w,36,4)),0))::numeric , (coalesce(trim(both substr(ds_conteudo_w,32,4)),0))::numeric , 
				 dt_prev_administracao_w, trim(both substr(ds_conteudo_w,40,3)), null, 
				 null, null, null, 
				 null, dt_cirurgia_w, null, 
				 null, (coalesce(trim(both substr(ds_conteudo_w,29,3)),0))::numeric , 'RA', 
				 nr_seq_pedido_novo_w, '', '', 
				 ds_observacao_radio_w, trim(both substr(ds_conteudo_w,147,70)), trim(both substr(ds_conteudo_w,217,11)), 
				 trim(both substr(ds_conteudo_w,228,60)));
 
			if (trim(both substr(ds_conteudo_w,9,4)) is not null) then --CID 01 
				insert	into ptu_pedido_aut_diag_anexo(nr_sequencia, nr_seq_pedido_anexo ,dt_atualizacao, 
					 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
					 cd_doenca, dt_diagnostico, ie_estadia_tumor, 
					 cd_finalidade_tratamento, ie_tipo_quimioterapia, ie_capacidade_funcional, 
					 cd_diagnostico_imagem, ie_tipo_diagnostico, ds_plano_terapeutico, 
					 ds_diagnostico, ds_observacao) 
				values (nextval('ptu_pedido_aut_diag_anexo_seq'), nr_seq_pedido_anexo_w, clock_timestamp(), 
					 nm_usuario_p, clock_timestamp(), nm_usuario_p, 
					 trim(both substr(ds_conteudo_w,9,4)), null, null, 
					 null, null, null, 
					 null, 'DD', null, 
					 null, null);
			end if;	
			if (trim(both substr(ds_conteudo_w,13,4)) is not null) then	--CID 02 
				insert	into ptu_pedido_aut_diag_anexo(nr_sequencia, nr_seq_pedido_anexo ,dt_atualizacao, 
					 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
					 cd_doenca, dt_diagnostico, ie_estadia_tumor, 
					 cd_finalidade_tratamento, ie_tipo_quimioterapia, ie_capacidade_funcional, 
					 cd_diagnostico_imagem, ie_tipo_diagnostico, ds_plano_terapeutico, 
					 ds_diagnostico, ds_observacao) 
				values (nextval('ptu_pedido_aut_diag_anexo_seq'), nr_seq_pedido_anexo_w, clock_timestamp(), 
					 nm_usuario_p, clock_timestamp(), nm_usuario_p, 
					 trim(both substr(ds_conteudo_w,13,4)), null, null, 
					 null, null, null, 
					 null, 'DD', null, 
					 null, null);
			end if;	
			if (trim(both substr(ds_conteudo_w,17,4)) is not null) then	--CID 03 
				insert	into ptu_pedido_aut_diag_anexo(nr_sequencia, nr_seq_pedido_anexo ,dt_atualizacao, 
					 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
					 cd_doenca, dt_diagnostico, ie_estadia_tumor, 
					 cd_finalidade_tratamento, ie_tipo_quimioterapia, ie_capacidade_funcional, 
					 cd_diagnostico_imagem, ie_tipo_diagnostico, ds_plano_terapeutico, 
					 ds_diagnostico, ds_observacao) 
				values (nextval('ptu_pedido_aut_diag_anexo_seq'), nr_seq_pedido_anexo_w, clock_timestamp(), 
					 nm_usuario_p, clock_timestamp(), nm_usuario_p, 
					 trim(both substr(ds_conteudo_w,17,4)), null, null, 
					 null, null, null, 
					 null, 'DD', null, 
					 null, null);
			end if;	
			if (trim(both substr(ds_conteudo_w,21,4)) is not null) then	--CID 04 
				insert	into ptu_pedido_aut_diag_anexo(nr_sequencia, nr_seq_pedido_anexo ,dt_atualizacao, 
					 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
					 cd_doenca, dt_diagnostico, ie_estadia_tumor, 
					 cd_finalidade_tratamento, ie_tipo_quimioterapia, ie_capacidade_funcional, 
					 cd_diagnostico_imagem, ie_tipo_diagnostico, ds_plano_terapeutico, 
					 ds_diagnostico, ds_observacao) 
				values (nextval('ptu_pedido_aut_diag_anexo_seq'), nr_seq_pedido_anexo_w, clock_timestamp(), 
					 nm_usuario_p, clock_timestamp(), nm_usuario_p, 
					 trim(both substr(ds_conteudo_w,21,4)), null, null, 
					 null, null, null, 
					 null, 'DD', null, 
					 null, null);
			end if;		
			 
			-- Diagnóstico tratamento			 
			insert	into ptu_pedido_aut_diag_anexo(nr_sequencia, nr_seq_pedido_anexo ,dt_atualizacao, 
				 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
				 cd_doenca, dt_diagnostico, ie_estadia_tumor, 
				 cd_finalidade_tratamento, ie_tipo_quimioterapia, ie_capacidade_funcional, 
				 cd_diagnostico_imagem, ie_tipo_diagnostico, ds_plano_terapeutico, 
				 ds_diagnostico, ds_observacao) 
			values (nextval('ptu_pedido_aut_diag_anexo_seq'), nr_seq_pedido_anexo_w, clock_timestamp(), 
				 nm_usuario_p, clock_timestamp(), nm_usuario_p, 
				 null, dt_diagnostico_w, trim(both substr(ds_conteudo_w,25,1)), 
				 trim(both substr(ds_conteudo_w,26,1)), '', trim(both substr(ds_conteudo_w,27,1)), 
				 trim(both substr(ds_conteudo_w,28,1)), 'DT', '', 
				 ds_diag_cit_hist_radio_w, ds_inf_relevante_radio_w);
				 
			if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then 
				CALL ptu_inserir_dados_anexo_req(nr_seq_requisicao_ww, nr_seq_pedido_anexo_w, ds_biometria_w, nm_usuario_p);
			elsif (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then 
				CALL ptu_inserir_dados_anexo_guia(nr_seq_guia_ww, nr_seq_pedido_anexo_w, ds_biometria_w, nm_usuario_p);
			end if;
		end if;
	end if;
	end;
end loop;
close C01;
 
if (ie_existe_dados_anexo_w	> 0) and ((ds_justific_tecnica_w IS NOT NULL AND ds_justific_tecnica_w::text <> '') or (ds_material_solic_w IS NOT NULL AND ds_material_solic_w::text <> '') or (ds_observacao_opme_w IS NOT NULL AND ds_observacao_opme_w::text <> '')) then 
	select	nextval('ptu_pedido_aut_anexo_seq') 
	into STRICT	nr_seq_pedido_anexo_w 
	;
 
	insert 	into ptu_pedido_aut_anexo(nr_sequencia, nr_seq_pedido, dt_atualizacao, 
		 nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
		 ds_procedimento_cirurgico, dt_real_proc_cirurgico, ds_quimioterapia, 
		 dt_quimioterapia, qt_dose_total, qt_dose_dia, 
		 dt_inicio_previsto, qt_dias_previsto, qt_peso, 
		 qt_altura, qt_superficie_corporal, ds_area_irradiada, 
		 nr_ciclo_previsto, dt_radioterapia, nr_ciclo_atual, 
		 qt_intervalo_ciclo, nr_campos, ie_tipo_anexo, 
		 nr_seq_pedido_compl, ds_justificativa, ds_especificacao, 
		 ds_observacao, nm_profissional_solic, nr_telef_prof_solic, 
		 ds_email_prof_solic) 
	values (nr_seq_pedido_anexo_w, null, clock_timestamp(), 
		 nm_usuario_p, clock_timestamp(), nm_usuario_p, 
		 '', null, '', 
		 null, null, null, 
		 null, null, null, 
		 null, null, null, 
		 null, null, null, 
		 '', null, 'OP', 
		 nr_seq_pedido_novo_w, ds_justific_tecnica_w, ds_material_solic_w, 
		 ds_observacao_opme_w, nm_prof_solicitante_w, nr_fone_prof_solic_w, 
		 substr(ds_email_prof_solic_w,1,60));
		 
	if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then 
		CALL ptu_inserir_dados_anexo_req(nr_seq_requisicao_ww, nr_seq_pedido_anexo_w, ds_biometria_w, nm_usuario_p);
	elsif (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then 
		CALL ptu_inserir_dados_anexo_guia(nr_seq_guia_ww, nr_seq_pedido_anexo_w, ds_biometria_w, nm_usuario_p);
	end if;
end if;
 
CALL ptu_inserir_anexos_pedido(nr_seq_guia_w, nr_seq_requisicao_w, nm_usuario_p);
 
CALL ptu_atualiza_imp_ped_autor_scs(	nr_seq_guia_ww, nr_seq_requisicao_ww, nr_seq_segurado_w, 
				ie_tipo_tabela_w, ds_observacao_w, ds_opme_w, 
				ie_alto_custo_w, trunc(clock_timestamp()), cd_estabelecimento_p, 
				nm_usuario_p, cd_unimed_executora_w, 'C');
 
CALL ptu_gestao_env_resp_pedido_aut(nr_seq_controle_exec_p, cd_estabelecimento_w, nm_usuario_p);
 
exception 
when others then 
	ds_sqlerrm_w := sqlerrm;
	insert into pls_log_scs( 
		NR_SEQUENCIA, DT_PROCESSO, DT_ATUALIZACAO, 
		NM_USUARIO, DS_OBSERVACAO) 
	values (nextval('pls_log_scs_seq'), clock_timestamp(), clock_timestamp(), 
		 nm_usuario_p, ds_sqlerrm_w);
end;
 
if (C01%isopen) then 
	close C01;
end if;
 
<<final_env_resp>> 
if (qt_reg_resp_w = 0) then 
	CALL ptu_gestao_env_resp_pedido_aut(nr_seq_controle_exec_p, cd_estabelecimento_p, nm_usuario_p);
end if;
 
<<final>> 
ie_insere_w	:= 'N';
 
if (C01%isopen) then 
	close C01;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_imp_pedido_compl_aut_v50 ( ds_arquivo_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_controle_exec_p INOUT bigint) FROM PUBLIC;

