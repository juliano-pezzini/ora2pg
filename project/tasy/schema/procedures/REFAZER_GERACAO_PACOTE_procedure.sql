-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE refazer_geracao_pacote (nm_usuario_p text) AS $body$
DECLARE


nr_interno_conta_w		bigint;
nr_atendimento_w		bigint;
nr_seq_procedimento_w		bigint;
ie_permite_gerar_pacote_w	varchar(1);
cd_convenio_atend_w		integer;
cd_categoria_atend_w		varchar(10);
cd_convenio_conta_w		integer;
cd_categoria_conta_w		varchar(10);
qt_auditoria_w			bigint;
dt_procedimento_w		timestamp;
ds_erro_w			varchar(2000);
ds_erro_pacote_w	varchar(2000);
ie_prioridade_pacote_job_w	convenio_estabelecimento.ie_prioridade_pacote_job%type;
cd_estabelecimento_w		conta_paciente.cd_estabelecimento%type;

c01 CURSOR FOR
	SELECT 	a.nr_interno_conta,
		a.nr_atendimento,
		a.cd_convenio_parametro,
		a.cd_categoria_parametro,
		a.cd_estabelecimento
	from 	conta_paciente a,
		atendimento_paciente b, 
		parametro_faturamento c
	where 	a.nr_atendimento = b.nr_atendimento
	and 	a.cd_estabelecimento = c.cd_estabelecimento
	and 	coalesce(c.ie_valida_pacote_auto_re, 'N') = 'N'
	and 	coalesce(b.dt_alta::text, '') = ''
	and 	b.ie_tipo_atendimento = 1
	and 	a.ie_status_acerto = 1	
	
union
 
	SELECT 	a.nr_interno_conta,
		a.nr_atendimento,
		a.cd_convenio_parametro,
		a.cd_categoria_parametro,
		a.cd_estabelecimento
	from 	conta_paciente a,
		atendimento_paciente b, 
		parametro_faturamento c
	where 	a.nr_atendimento = b.nr_atendimento
	and 	a.cd_estabelecimento = c.cd_estabelecimento
	and 	coalesce(c.ie_valida_pacote_auto_re, 'N') = 'S'
	and 	a.ie_status_acerto = 1
	and     exists (select 1 
   		        from   regra_pacote_automatico d 
		        where  d.ie_situacao = 'A' 
			and (d.cd_convenio = a.cd_convenio_parametro or coalesce(d.cd_convenio::text, '') = '')
			and (d.ie_tipo_atendimento = b.ie_tipo_atendimento or coalesce(d.ie_tipo_atendimento::text, '') = '')
			and   ((coalesce(d.ie_alta::text, '') = '') or (d.ie_alta = 'A') or (d.ie_alta = 'S' and (b.dt_alta IS NOT NULL AND b.dt_alta::text <> '')) or (d.ie_alta = 'N' and coalesce(b.dt_alta::text, '') = '')))
	order by nr_interno_conta;			

c02 CURSOR FOR
	SELECT	nr_seq_procedimento
	from 	atendimento_pacote a, 
		pacote b 
	where 	a.nr_seq_pacote = b.nr_seq_pacote
	and  	a.nr_seq_proc_origem in (SELECT nr_sequencia from procedimento_paciente  where nr_interno_conta =  nr_interno_conta_w)
	AND     ((ie_prioridade_pacote_job_w = 'S') or (b.ie_pacote_automatico = 'S' AND ie_prioridade_pacote_job_w = 'R'))
	order by 1;


BEGIN
	open C01;
	loop
	fetch C01 into	
		nr_interno_conta_w,
		nr_atendimento_w,
		cd_convenio_conta_w,
		cd_categoria_conta_w,
		cd_estabelecimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		qt_auditoria_w:= 0;
		
		select	coalesce(max(ie_prioridade_pacote_job), 'N')
		into STRICT	ie_prioridade_pacote_job_w
		from	convenio_estabelecimento
		where	cd_convenio		= cd_convenio_conta_w
		and	cd_estabelecimento	= cd_estabelecimento_w;
		
		open C02;
		loop
		fetch C02 into	
			nr_seq_procedimento_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
				begin
				
				select 	coalesce(max(dt_procedimento),clock_timestamp())
				into STRICT	dt_procedimento_w
				from	procedimento_paciente
				where 	nr_sequencia = nr_seq_procedimento_w;
				
				select	/*+ INDEX (A AUDCOPA_ATEPACI_FK_I) */					count(*)
				into STRICT	qt_auditoria_w
				from	auditoria_conta_paciente a,
					conta_paciente b
				where	a.nr_interno_conta	= b.nr_interno_conta
				and	a.nr_atendimento	= nr_atendimento_w
				and	b.ie_status_acerto	= 1
				and 	b.nr_interno_conta	= nr_interno_conta_w
				and	dt_procedimento_w between a.dt_periodo_inicial and a.dt_periodo_final;
				
				if (qt_auditoria_w = 0) then
					CALL Desfazer_pacote(nr_seq_procedimento_w, 'S', nm_usuario_p);
				end if;
				
				end;
			exception
				when others then
				ds_erro_w		:= substr('nr_seq_procedimento_w: ' || nr_seq_procedimento_w || sqlerrm(SQLSTATE) || chr(13) || chr(10) || ds_erro_w,1,2000);				
			end;
		end loop;
		close C02;

		begin
			select	coalesce(max(cd_convenio),0),
					coalesce(max(cd_categoria),'0')
			into STRICT	cd_convenio_atend_w,
					cd_categoria_atend_w
			from	atend_categoria_convenio
			where	nr_atendimento = nr_atendimento_w;
			exception  when others then
				cd_convenio_atend_w 	:=  0;
				cd_categoria_atend_w	:= '0';	
			end;
			
			select	coalesce(max(ie_permite_gerar_pacote),'N')
			into STRICT	ie_permite_gerar_pacote_w
			from   	categoria_convenio
			where  	cd_convenio	= cd_convenio_conta_w	
			and    	cd_categoria	= cd_categoria_conta_w;
				
			if (ie_permite_gerar_pacote_w = 'S') and (cd_convenio_atend_w  = cd_convenio_conta_w) and (cd_categoria_atend_w = cd_categoria_conta_w) then
					
				if (ie_prioridade_pacote_job_w <> 'N') then
				
					ds_erro_pacote_w := Calcular_Pacote_prioridade(cd_convenio_conta_w, cd_categoria_conta_w, cd_estabelecimento_w, nr_interno_conta_w, nr_atendimento_w, nm_usuario_p, ie_prioridade_pacote_job_w, ds_erro_pacote_w);
				
				else		
					begin
						CALL calcular_pacote(nr_atendimento_w,
								nr_interno_conta_w,
								cd_convenio_conta_w,
								cd_categoria_conta_w,
								nm_usuario_p,
								'S','S','S','S','N');
					exception
						when others then
						cd_convenio_atend_w 	:=  0;
						cd_categoria_atend_w	:= '0';	
						ds_erro_pacote_w := ds_erro_pacote_w || substr(sqlerrm(SQLSTATE) || chr(13) || chr(10) || ds_erro_w,1,2000);
					end;
				end if;			
						
			end if;	
		
		end;
		
		ds_erro_w := ds_erro_w || ds_erro_pacote_w;
		
		insert into refazer_pacote_job_log(
			   nr_sequencia,
			   nr_atendimento,
			   dt_atualizacao_nrec,
			   nm_usuario_nrec,
			   nr_interno_conta,
			   ie_erro,
			   ds_erro,
			   cd_convenio_conta,
			   cd_categoria_conta,
			   cd_convenio_atend,
			   cd_categoria_atend,
			   ie_permite_gerar_pacote,
			   ie_prioridade_pacote_job
		) values ( 
			   nextval('refazer_pacote_job_log_seq'),
			   nr_atendimento_w, 
			   clock_timestamp(),
			   nm_usuario_p,
			   nr_interno_conta_w, 
			   CASE WHEN coalesce(length(ds_erro_w)::text, '') = '' THEN  'N'  ELSE 'S' END , 
			   ds_erro_w,
			   cd_convenio_atend_w,  
			   cd_categoria_conta_w, 
			   cd_convenio_atend_w, 
			   cd_categoria_atend_w, 
			   ie_permite_gerar_pacote_w, 
			   ie_prioridade_pacote_job_w
		);
		ds_erro_w := null;	
		ds_erro_pacote_w := null;		

		commit;	
	end loop;
	close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE refazer_geracao_pacote (nm_usuario_p text) FROM PUBLIC;

