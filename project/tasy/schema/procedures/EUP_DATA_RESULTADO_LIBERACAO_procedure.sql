-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE eup_data_resultado_liberacao (nr_prescricao_p prescr_medica.nr_prescricao%type, nm_usuario_p prescr_medica.nm_usuario%type) AS $body$
DECLARE


    ds_setor_usuario_w      varchar(150);
    ie_restring_usuario_w   varchar(10);
    ie_setor_usuario_proc_w varchar(10);
    ds_setor_lab_w          varchar(100);
    ie_setor_exclusivo_w    varchar(1);
    cd_setor_usuario_w      integer;

    qt_dia_entrega_w        exame_lab_regra_setor.qt_dia_entrega%type;
    ds_hora_fixa_w          exame_lab_regra_setor.ds_hora_fixa%type;
    qt_min_entrega_w        exame_lab_regra_setor.qt_min_entrega%type;
    ie_dia_semana_final_w   exame_lab_regra_setor.ie_dia_semana_final%type;

    ie_domingo_w        lab_exame_dia.ie_domingo%type;
    ie_segunda_w        lab_exame_dia.ie_segunda%type;
    ie_terca_w          lab_exame_dia.ie_terca%type;
    ie_quarta_w         lab_exame_dia.ie_quarta%type;
    ie_quinta_w         lab_exame_dia.ie_quinta%type;
    ie_sexta_w          lab_exame_dia.ie_sexta%type;
    ie_sabado_w         lab_exame_dia.ie_sabado%type;
    ie_feriado_w        lab_exame_dia.ie_feriado%type;
    ie_tipo_feriado_w   lab_exame_dia.ie_tipo_feriado%type;

    cd_setor_w                  procedimento.cd_setor_exclusivo%type;
    cd_estabelecimento_w        atendimento_paciente.cd_estabelecimento%type;
    ie_tipo_atendimento_w       atendimento_paciente.ie_tipo_atendimento%type;
    cd_convenio_w               atend_categoria_convenio.cd_convenio%type;
    cd_medico_resp_w            atendimento_paciente.cd_medico_resp%type;
    nr_seq_classificacao_w      atendimento_paciente.nr_seq_classificacao%type;
    cd_setor_solic_w            exame_lab_regra_setor.cd_setor_solicitacao%type;
    nr_seq_grupo_w              exame_laboratorio.nr_seq_grupo%type;
    nr_seq_grupo_imp_w          exame_laboratorio.nr_seq_grupo_imp%type;
    nr_seq_material_w           material_exame_lab.nr_sequencia%type;
    cd_setor_proced_w           procedimento_setor_atend.cd_setor_atendimento%type;
    ie_medico_executor_w        consiste_setor_proc.ie_medico_executor%type;
    cd_cgc_w                    consiste_setor_proc.cd_cgc%type;
    cd_medico_executor_w        consiste_setor_proc.cd_medico_executor%type;
    cd_pessoa_fisica_w          consiste_setor_proc.cd_pessoa_fisica%type;
    cd_medico_w                 prescr_procedimento.cd_medico_exec%type;
    ie_dia_semana_w             exame_lab_regra_setor.ie_dia_semana%type;
    dia_semana_w                exame_lab_regra_setor.ie_dia_semana%type;
    dt_liberacao_calc_w         prescr_medica.dt_liberacao%type;
    qt_dia_entrega_calc_w       exame_lab_regra_setor.qt_dia_entrega%type;
    qt_dia_entrega_liberacao_w  exame_lab_regra_setor.qt_dia_entrega%type;
    dt_resultado_w              prescr_procedimento.dt_resultado%type;

    c01 CURSOR FOR
	SELECT	pm.nr_atendimento,
            trunc(pm.dt_liberacao, 'mi') dt_liberacao,
            pm.cd_setor_entrega,
            pp.nr_seq_exame,
            pp.ie_origem_proced,
            pp.cd_material_exame,
            pp.cd_procedimento,
            pp.nr_sequencia,
            pp.nr_seq_proc_interno
    from    prescr_medica pm
            inner join prescr_procedimento pp on pp.nr_prescricao = pm.nr_prescricao
            inner join exame_lab_regra_setor elrs on elrs.nr_seq_exame = pp.nr_seq_exame and elrs.ie_data_resultado = 'L'
    where   pm.nr_prescricao = nr_prescricao_p
    and     (pm.dt_liberacao IS NOT NULL AND pm.dt_liberacao::text <> '');

    c01_w   c01%rowtype;

    procedure CALCULA_DATA_RESULTADO(dt_liberacao_p		    timestamp,
                                    qt_dias_entrega_p	    bigint,
                                    ds_hora_fixa_p	        text,
                                    qt_min_entrega_p	    bigint,
                                    ie_dia_semana_final_p	bigint) is
                
    proc_ds_hora_fixa_w     varchar(2);
    proc_ie_dia_semana_w    smallint;
    proc_dt_liberacao_w     timestamp;

    
BEGIN
    proc_ds_hora_fixa_w := ds_hora_fixa_p;
    proc_dt_liberacao_w := dt_liberacao_p;

    if ((qt_dias_entrega_p > 0) or (qt_min_entrega_p > 0) or (coalesce(ds_hora_fixa_p,0)/24 > 0)) then
        if (qt_min_entrega_p > 0) then
            proc_dt_liberacao_w := proc_dt_liberacao_w + (qt_min_entrega_p/1440);
        end if;

        if (coalesce(ds_hora_fixa_p::text, '') = '') then
            proc_ds_hora_fixa_w := to_char(proc_dt_liberacao_w, 'hh24');
        end if;

        dt_resultado_w	:= pkg_date_utils.get_Time(
                            BASEDATE => proc_dt_liberacao_w,
                            HOUR => (proc_ds_hora_fixa_w)::numeric ,
                            MINUTE => to_char(proc_dt_liberacao_w, 'mi')
                            ) + qt_dias_entrega_p;

        if (ie_dia_semana_final_p > 0) then
            proc_ie_dia_semana_w	:= obter_cod_dia_semana(dt_resultado_w);
            while(proc_ie_dia_semana_w <>  ie_dia_semana_final_w) loop
                begin
                    dt_resultado_w := dt_resultado_w +1;
                    proc_ie_dia_semana_w	:= obter_cod_dia_semana(dt_resultado_w);
                end;
            end loop;
        end if;
    end if;
    end;

begin
    ds_setor_usuario_w := Obter_Param_Usuario(916, 47, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ds_setor_usuario_w);
    ie_setor_usuario_proc_w := Obter_Param_Usuario(916, 197, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_setor_usuario_proc_w);
    ie_setor_exclusivo_w := Obter_Param_Usuario(916, 200, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_setor_exclusivo_w);
    ds_setor_lab_w := Obter_Param_Usuario(916, 307, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ds_setor_lab_w);
    ie_restring_usuario_w := Obter_Param_Usuario(916, 349, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_restring_usuario_w);

    if (ds_setor_usuario_w = obter_desc_expressao_br(314533)) then
        cd_setor_usuario_w := wheb_usuario_pck.get_cd_setor_atendimento;
    end if;

    begin
	open c01;
	loop
	fetch c01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

        begin
            select	cd_setor_exclusivo
            into STRICT	cd_setor_w
            from	procedimento
            where	cd_procedimento = c01_w.cd_procedimento
            and     ie_origem_proced = c01_w.ie_origem_proced;
        exception
        when no_data_found or too_many_rows then
            cd_setor_w := null;
        end;

        begin
            select	ie_tipo_atendimento,
                    nr_seq_classificacao,	
                    cd_medico_resp,
                    obter_convenio_atendimento(nr_atendimento),
                    cd_estabelecimento
            into STRICT	ie_tipo_atendimento_w,
                    nr_seq_classificacao_w,
                    cd_medico_resp_w,
                    cd_convenio_w,
                    cd_estabelecimento_w
            from	atendimento_paciente
            where	nr_atendimento = c01_w.nr_atendimento;
        exception
        when no_data_found or too_many_rows then
            ie_tipo_atendimento_w   := null;
            nr_seq_classificacao_w  := null;
            cd_medico_resp_w        := null;
            cd_convenio_w           := null;
            cd_estabelecimento_w    := null;
        end;

        begin
            select  obter_setor_atend_proc(wheb_usuario_pck.get_cd_estabelecimento,
                                        c01_w.cd_procedimento,
                                        c01_w.ie_origem_proced,
                                        null,
                                        c01_w.cd_setor_entrega,
                                        CASE WHEN coalesce(ie_restring_usuario_w,'X')='S' THEN nm_usuario_p  ELSE '' END ,
                                        c01_w.nr_seq_proc_interno,
                                        c01_w.nr_atendimento)
            into STRICT	cd_setor_proced_w
;
        exception
            when others then
                cd_setor_proced_w := 0;
        end;

        if (coalesce(cd_setor_w,0) > 0) and (ie_setor_exclusivo_w <> 'N') and (ie_setor_exclusivo_w <> 'E') then
            cd_setor_w := cd_setor_w;
        elsif (coalesce(ie_setor_usuario_proc_w,'N') = 'S') then
            cd_setor_w  := wheb_usuario_pck.get_cd_setor_atendimento;
        elsif (coalesce(cd_setor_w,0)  <> 0) then
            cd_setor_w   := cd_setor_w;
        elsif (coalesce(cd_setor_proced_w,0)  <> 0) then
            cd_setor_w   :=  cd_setor_proced_w;
        elsif (coalesce(c01_w.cd_setor_entrega,0) > 0) then
            cd_setor_w := c01_w.cd_setor_entrega;
        else
            cd_setor_w := wheb_usuario_pck.get_cd_setor_atendimento;
        end if;

        SELECT * FROM consiste_medico_executor(cd_estabelecimento_p   => cd_estabelecimento_w, cd_convenio_p           => cd_convenio_w, cd_setor_atendimento_p  => cd_setor_w, cd_procedimento_p       => c01_w.cd_procedimento, ie_origem_proced_p      => c01_w.ie_origem_proced, ie_tipo_atendimento_p   => ie_tipo_atendimento_w, nr_seq_exame_p          => c01_w.nr_seq_exame, nr_seq_proc_interno_p   => null, ie_medico_executor_p    => ie_medico_executor_w, cd_cgc_p                => cd_cgc_w, cd_medico_executor_p    => cd_medico_executor_w, cd_pessoa_fisica_p      => cd_pessoa_fisica_w, cd_medico_exec_filtro_p => null, dt_execucao_p           => clock_timestamp(), nr_seq_classificacao_p  => nr_seq_classificacao_w, ie_origem_inf_p         => null, cd_cgc_laboratorio_p    => null, cd_setor_prescricao_p   => null) INTO STRICT ie_medico_executor_p    => ie_medico_executor_w, cd_cgc_p                => cd_cgc_w, cd_medico_executor_p    => cd_medico_executor_w, cd_pessoa_fisica_p      => cd_pessoa_fisica_w;

        if (ie_medico_executor_w = 'A') then
            cd_medico_w	:= cd_medico_resp_w;
        elsif (ie_medico_executor_w = 'F') then
            cd_medico_w	:= cd_medico_executor_w;
        end if;

        if (ds_setor_lab_w = 'E') then
            cd_setor_solic_w := c01_w.cd_setor_entrega;
        else
            cd_setor_solic_w := cd_setor_usuario_w;
        end if;

        select  obter_cod_dia_semana(c01_w.dt_liberacao)
        into STRICT    ie_dia_semana_w
;

        begin
            select  nr_seq_grupo,
                    coalesce(nr_seq_grupo_imp, 0)
            into STRICT    nr_seq_grupo_w,
                    nr_seq_grupo_imp_w
            from    exame_laboratorio
            where   nr_seq_exame = c01_w.nr_seq_exame;
        exception
        when no_data_found or too_many_rows then
            nr_seq_grupo_w      := null;
            nr_seq_grupo_imp_w  := 0;
        end;

        begin
            select  nr_sequencia
            into STRICT    nr_seq_material_w
            from    material_exame_lab
            where   cd_material_exame = c01_w.cd_material_exame;
        exception
        when no_data_found or too_many_rows then
            nr_seq_material_w := null;
        end;

        qt_dia_entrega_w := 0;

        begin
            select  qt_dia_entrega,
                    ds_hora_fixa,
                    qt_min_entrega,
                    ie_dia_semana_final
            into STRICT    qt_dia_entrega_w,
                    ds_hora_fixa_w,
                    qt_min_entrega_w,
                    ie_dia_semana_final_w
            from    (SELECT  coalesce(qt_dia_entrega, 0) qt_dia_entrega,
                            ds_hora_fixa,
                            coalesce(qt_min_entrega, 0) qt_min_entrega,
                            coalesce(ie_dia_semana_final, 0) ie_dia_semana_final
                    from    exame_lab_regra_setor
                    where   coalesce(cd_estabelecimento, coalesce(cd_estabelecimento_w, 0)) = coalesce(cd_estabelecimento_w, 0)
                    and     ie_data_resultado = 'L'
                    and     ((ie_dia_semana = ie_dia_semana_w) or 
                             (( ie_dia_semana = 9) and (pkg_date_utils.is_business_day(c01_w.dt_liberacao) = 1)) or (coalesce(ie_dia_semana::text, '') = ''))
                    and     coalesce(ie_tipo_atendimento, ie_tipo_atendimento_w) = ie_tipo_atendimento_w
                    and     coalesce(cd_setor_solicitacao, coalesce(cd_setor_solic_w, 0)) = coalesce(cd_setor_solic_w, 0)
                    and     coalesce(nr_seq_grupo, nr_seq_grupo_w) = nr_seq_grupo_w
                    and     coalesce(nr_seq_grupo_imp, nr_seq_grupo_imp_w) = nr_seq_grupo_imp_w
                    and     coalesce(nr_seq_exame, c01_w.nr_seq_exame) = c01_w.nr_seq_exame
                    and     coalesce(nr_seq_material, coalesce(nr_seq_material_w, 0)) = coalesce(nr_seq_material_w, 0)
                    and     ((coalesce(ie_urgencia, 'N') = 'N') or (coalesce(ie_urgencia, 'A') = 'A'))
                    and     c01_w.dt_liberacao between pkg_date_utils.get_Time(to_char(c01_w.dt_liberacao, 'dd/mm/yyyy'),
                                                                            coalesce(substr(ds_hora_inicio,1,2), to_char(c01_w.dt_liberacao, 'hh24')),
                                                                            coalesce(substr(ds_hora_inicio,4,2), to_char(c01_w.dt_liberacao, 'mi')),0,0
                                                                            ) and pkg_date_utils.get_Time(to_char(c01_w.dt_liberacao, 'dd/mm/yyyy'),
                                                                                                        coalesce(substr(ds_hora_fim,1,2), to_char(c01_w.dt_liberacao, 'hh24')),
                                                                                                        coalesce(substr(ds_hora_fim,4,2), to_char(c01_w.dt_liberacao, 'mi')),0,0)
                    order by coalesce(nr_seq_prioridade, 0) desc,
                            coalesce(nr_seq_material, 0) desc,
                            coalesce(nr_seq_exame, 0) desc,
                            coalesce(nr_seq_grupo, 0) desc,
                            coalesce(ie_dia_semana, 0) desc,
                            nr_seq_grupo_imp_w desc,
                            cd_setor_solicitacao desc ,
                            coalesce(cd_estabelecimento, 0) desc) alias51 LIMIT 1;
        exception
        when no_data_found or too_many_rows then
            qt_dia_entrega_w        := null;
            ds_hora_fixa_w          := null;
            qt_min_entrega_w        := null;
            ie_dia_semana_final_w   := null;
        end;

        begin
            select  ie_domingo,
                    ie_segunda,
                    ie_terca,
                    ie_quarta,
                    ie_quinta,
                    ie_sexta,
                    ie_sabado,
                    ie_feriado,
                    ie_tipo_feriado
            into STRICT    ie_domingo_w,
                    ie_segunda_w,
                    ie_terca_w,
                    ie_quarta_w,
                    ie_quinta_w,
                    ie_sexta_w,
                    ie_sabado_w,
                    ie_feriado_w,
                    ie_tipo_feriado_w
            from (SELECT  ie_domingo,
                            ie_segunda,
                            ie_terca,
                            ie_quarta,
                            ie_quinta,
                            ie_sexta,
                            ie_sabado,
                            ie_feriado,
                            ie_tipo_feriado
                    from    lab_exame_dia
                    where   coalesce(nr_seq_grupo, nr_seq_grupo_w) = nr_seq_grupo_w
                    and     coalesce(nr_seq_exame, c01_w.nr_seq_exame) = c01_w.nr_seq_exame
                    and     coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
                    and     coalesce(ie_tipo_regra, 'X') <> 'C'
                    order by coalesce(nr_seq_exame, 0) desc,
                            coalesce(nr_seq_grupo, 0) desc) alias6 LIMIT 1;
        exception
            when no_data_found or too_many_rows then
                ie_domingo_w        := null;
                ie_segunda_w        := null;
                ie_terca_w          := null;
                ie_quarta_w         := null;
                ie_quinta_w         := null;
                ie_sexta_w          := null;
                ie_sabado_w         := null;
                ie_feriado_w        := null;
                ie_tipo_feriado_w   := null;
        end;

        qt_dia_entrega_calc_w       := coalesce(qt_dia_entrega_w, 0);
        qt_dia_entrega_liberacao_w 	:= coalesce(qt_dia_entrega_w, 0);
        dt_liberacao_calc_w     	:= c01_w.dt_liberacao;
        if (coalesce(qt_dia_entrega_w, 0) > 0) and (ie_domingo_w IS NOT NULL AND ie_domingo_w::text <> '') then
            while qt_dia_entrega_calc_w > 0
            loop
                dt_liberacao_calc_w := dt_liberacao_calc_w + 1;

                select	pkg_date_utils.get_weekday(dt_liberacao_calc_w)
                into STRICT 	dia_semana_w
;

                if 	(dia_semana_w = 1 AND ie_domingo_w = 'N') or
                    (dia_semana_w = 2 AND ie_segunda_w = 'N') or
                    (dia_semana_w = 3 AND ie_terca_w   = 'N') or
                    (dia_semana_w = 4 AND ie_quarta_w  = 'N') or
                    (dia_semana_w = 5 AND ie_quinta_w  = 'N') or
                    (dia_semana_w = 6 AND ie_sexta_w   = 'N') or
                    (dia_semana_w = 7 AND ie_sabado_w  = 'N') or
                    ((lab_obter_se_feriado(cd_estabelecimento_w, dt_liberacao_calc_w, ie_tipo_feriado_w) > 0) and (ie_feriado_w = 'N')) then
                    qt_dia_entrega_liberacao_w := coalesce(qt_dia_entrega_liberacao_w, 0) + 1;
                else
                    qt_dia_entrega_calc_w := coalesce(qt_dia_entrega_calc_w, 0) - 1;
                end if;
                if (qt_dia_entrega_calc_w > 90) then
                    exit;
                end if;
            end loop;
        end if;

        qt_dia_entrega_w := coalesce(qt_dia_entrega_liberacao_w,0);

        dt_resultado_w := null;

        CALCULA_DATA_RESULTADO(c01_w.dt_liberacao,
                                qt_dia_entrega_w,
                                ds_hora_fixa_w,
                                qt_min_entrega_w,
                                ie_dia_semana_final_w);

        if (dt_resultado_w IS NOT NULL AND dt_resultado_w::text <> '') then
            update  prescr_procedimento
            set     dt_resultado = dt_resultado_w
            where   nr_prescricao = nr_prescricao_p
            and     nr_sequencia = c01_w.nr_sequencia;
        end if;
    end loop;
	close c01;
	end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eup_data_resultado_liberacao (nr_prescricao_p prescr_medica.nr_prescricao%type, nm_usuario_p prescr_medica.nm_usuario%type) FROM PUBLIC;

