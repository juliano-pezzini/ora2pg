-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_se_classif_equip_disp ( nr_seq_agenda_p bigint, nr_seq_classif_equip_p bigint, ds_erro_p INOUT text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_agenda_ant_p bigint, ie_novo_registro_p text) AS $body$
DECLARE



dt_inicial_w		timestamp;
dt_final_w		timestamp;
dt_inicial_ww		timestamp;
dt_final_ww		timestamp;
nr_seq_agenda_w		        agenda_paciente.nr_sequencia%type;
ds_classif_equi_w		varchar(80);
ds_agenda_w		varchar(50);
dt_agenda_w		timestamp;
nm_paciente_w		varchar(60);
qt_equipamento_w		bigint;
qt_equip_agenda_w	bigint;
nm_medico_w		varchar(50);
ie_consiste_w		varchar(15);
qt_tempo_esterilizacao_w	bigint	:= 0;
qt_equip_man_w		bigint;
qt_tot_equip_w		bigint;
qt_novo_registro_w	integer;
ds_mensagem_w		varchar(255);
nr_minuto_duracao_w	bigint;
qt_equip_agenda_exec_w	bigint;
dt_inicial_www		timestamp;
dt_final_www		timestamp;


BEGIN

ie_consiste_w := Obter_Param_Usuario(871, 81, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_w);

qt_novo_registro_w	:= 0;
if (ie_novo_registro_p = 'S') then
	qt_novo_registro_w := 1;
end if;

select	coalesce(max(qt_tempo_esterelizacao),0)
into STRICT	qt_tempo_esterilizacao_w
from	classif_equipamento
where	nr_sequencia = nr_seq_classif_equip_p;

select	hr_inicio,
	CASE WHEN ie_status_agenda='E' THEN  (hr_inicio + (qt_tempo_esterilizacao_w / 1440) - (1/86400))  ELSE (hr_inicio + ((nr_minuto_duracao + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400)) END
into STRICT	dt_inicial_w,
	dt_final_w
from	agenda_paciente
where	nr_sequencia	= nr_seq_agenda_p;

qt_equip_man_w	:= obter_qt_equip_manutencao(nr_seq_classif_equip_p, null,dt_inicial_w);

if (qt_equip_man_w > 0) then
	ds_mensagem_w	:= substr(wheb_mensagem_pck.get_texto(277553,  'NR_SEQ_CLASSIF_EQUIP_P=' || obter_ds_equip_manutencao(NR_SEQ_CLASSIF_EQUIP_P, null,'D',dt_inicial_w) || 
								';NR_SEQ_CLASSIF_EQUIP_P=' || obter_ds_equip_manutencao(NR_SEQ_CLASSIF_EQUIP_P, null,'DI',dt_inicial_w) || 
								';NR_SEQ_CLASSIF_EQUIP_P=' || obter_ds_equip_manutencao(nr_seq_classif_equip_p, null,'DF',dt_inicial_w)),1,255);
end if;
				
select	coalesce(sum(qt_equipamento) - qt_equip_man_w, 0),
	count(*)
into STRICT	qt_equipamento_w,
	qt_tot_equip_w
from	equipamento
where	cd_classificacao	= nr_seq_classif_equip_p
and	ie_situacao		= 'A';

/* Obter qtde de agendamentos que foram executadas no periodo - neste so e contado o tempo de esterilizacao e nao considera mais o tempo de duracao pois o mesmo ja foi realizado */


/* OS 290654 - Encontrado problema de performance, Refeito o comando SQL, passando de "hr_inicio + (qt_tempo_esterilizacao_w / 1440) - (1/86400) " para decrementar a hora inicio em uma variavel
select	count(*)
into	qt_equip_agenda_exec_w
from	agenda_pac_equip a,
	agenda_paciente b
where	b.nr_sequencia	= a.nr_seq_agenda	
and	((hr_inicio between dt_inicial_w and dt_final_w) or  
	(hr_inicio + (qt_tempo_esterilizacao_w / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or
	((hr_inicio < dt_inicial_w) and (hr_inicio + (qt_tempo_esterilizacao_w / 1440) - (1/86400) > dt_final_w)))
and	a.nr_seq_classif_equip  = nr_seq_classif_equip_p
and	b.nr_sequencia <> nvl(nr_seq_agenda_ant_p,0)
and	ie_status_agenda = 'E'
and	ie_origem_inf = 'I';
*/
dt_inicial_ww := dt_inicial_w - (qt_tempo_esterilizacao_w / 1440);
dt_final_ww   := dt_final_w - (qt_tempo_esterilizacao_w / 1440);

dt_inicial_www	:= dt_inicial_w - 2;
dt_final_www	:= dt_final_w + 2;

select	count(*)
into STRICT	qt_equip_agenda_exec_w
from	agenda_pac_equip a,
	agenda_paciente b
where	b.nr_sequencia	= a.nr_seq_agenda
and	hr_inicio between dt_inicial_www and dt_final_www
and	((hr_inicio between dt_inicial_w and dt_final_w) or
	(hr_inicio between dt_inicial_ww + (1/1440) and dt_final_ww) or
	(hr_inicio < dt_inicial_w AND hr_inicio > dt_final_ww))
and	a.nr_seq_classif_equip  = nr_seq_classif_equip_p
and	b.nr_sequencia <> coalesce(nr_seq_agenda_ant_p,0)
and	ie_status_agenda = 'E'
and	ie_origem_inf = 'I';

/* Obter qtde de agendamentos que nao foram executados e/ou cancelados no periodo */


/*
select	count(*)
into	qt_equip_agenda_w
from	agenda_pac_equip a,
	agenda_paciente b
where	b.nr_sequencia	= a.nr_seq_agenda	
and	((hr_inicio between dt_inicial_w and dt_final_w) or  
	(hr_inicio + ((nr_minuto_duracao + nvl(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or
	((hr_inicio < dt_inicial_w) and (hr_inicio + ((nr_minuto_duracao + nvl(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400) > dt_final_w)))
and	a.nr_seq_classif_equip  = nr_seq_classif_equip_p
and	ie_status_agenda not in ('C','E')
and	b.nr_sequencia <> nvl(nr_seq_agenda_ant_p,0)
and	ie_origem_inf = 'I';

application_error(-20011,	'dt_inicial_w: '||to_char(dt_inicial_w,'dd/mm/yyyy hh24:mi:ss') ||
				'dt_final_w: '||to_char(dt_final_w,'dd/mm/yyyy hh24:mi:ss') ||
				'dt_inicial_ww: '||to_char(dt_inicial_ww,'dd/mm/yyyy hh24:mi:ss') ||
				'dt_final_ww: '||to_char(dt_final_ww,'dd/mm/yyyy hh24:mi:ss') ||
				'nr_seq_classif_equip_p: '||nr_seq_classif_equip_p);
*/
				

select	count(*)
into STRICT	qt_equip_agenda_w
from	agenda_pac_equip a,
	agenda_paciente b
where	b.nr_sequencia	= a.nr_seq_agenda
and	hr_inicio between dt_inicial_www and dt_final_www	
and	((hr_inicio between dt_inicial_w and dt_final_w) or
	(hr_inicio between (dt_inicial_ww - (nr_minuto_duracao/1440) + (1/1440) )  and (dt_final_ww - (nr_minuto_duracao/1440))) or
	((hr_inicio < dt_inicial_w) and (hr_inicio > (dt_final_ww - (nr_minuto_duracao/1440)))))
and	a.nr_seq_classif_equip  = nr_seq_classif_equip_p
and	ie_status_agenda not in ('C','E')
and	b.nr_sequencia <> coalesce(nr_seq_agenda_ant_p,0)
and	ie_origem_inf = 'I';


qt_equip_agenda_w	:= qt_equip_agenda_exec_w + qt_equip_agenda_w + qt_novo_registro_w;

if (qt_equipamento_w < qt_equip_agenda_w) then

	select	max(nr_seq_agenda)
	into STRICT	nr_seq_agenda_w
	from	(SELECT	coalesce(max(b.nr_sequencia),0) nr_seq_agenda
		from	agenda_pac_equip a,
			agenda_paciente b
		where	b.nr_sequencia	= a.nr_seq_agenda
		and	hr_inicio between dt_inicial_www and dt_final_www
		and	((hr_inicio between dt_inicial_w and dt_final_w) or
			(hr_inicio between dt_inicial_ww + (1/1440) and dt_final_ww) or
			(hr_inicio < dt_inicial_w AND hr_inicio > dt_final_ww))
		and	a.nr_seq_classif_equip  = nr_seq_classif_equip_p
		and	ie_status_agenda = 'E'
		and	b.nr_sequencia <> coalesce(nr_seq_agenda_ant_p,0)
		and	ie_origem_inf = 'I'		
		
union
		
		SELECT	coalesce(max(b.nr_sequencia),0)
		from	agenda_pac_equip a,
			agenda_paciente b
		where	b.nr_sequencia	= a.nr_seq_agenda
		and	hr_inicio between dt_inicial_www and dt_final_www
		and	((hr_inicio between dt_inicial_w and dt_final_w) or  
			(hr_inicio  between (dt_inicial_ww - (nr_minuto_duracao/1440) + (1/1440)) and (dt_final_ww - (nr_minuto_duracao/1440))) or
			((hr_inicio < dt_inicial_w) and (hr_inicio > (dt_final_ww - (nr_minuto_duracao/1440)))))
		and	a.nr_seq_classif_equip  = nr_seq_classif_equip_p
		and	b.nr_sequencia <> coalesce(nr_seq_agenda_ant_p,0)
		and	ie_status_agenda not in ('C','E')
		and	ie_origem_inf = 'I') alias27;	
	
	if (nr_seq_agenda_w > 0) then
		select	substr(obter_desc_classif_equip(nr_seq_classif_equip_p),1,60),
			hr_inicio,
			substr(obter_nome_agenda(cd_agenda),1,50),
			nm_paciente,
			substr(obter_nome_pf(cd_medico),1,50),
			nr_minuto_duracao
		into STRICT	ds_classif_equi_w,
			dt_agenda_w,
			ds_agenda_w,
			nm_paciente_w,
			nm_medico_w,
			nr_minuto_duracao_w
		from	agenda_paciente
		where	nr_sequencia	= nr_seq_agenda_w;		
		
		if (qt_equip_man_w >= qt_tot_equip_w) then
			ds_erro_p :=	wheb_mensagem_pck.get_texto(277544, 'DS_CLASSIF_EQUI_P=' || ds_classif_equi_w || ';DS_MENSAGEM_P=' || ds_mensagem_w);	
		else
			ds_erro_p :=	wheb_mensagem_pck.get_texto(277557, 	'DS_CLASSIF_EQUI_P=' || ds_classif_equi_w ||
										';NM_PACIENTE_P=' || nm_paciente_w ||
										';DT_AGENDA_P=' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_agenda_w,'short', ESTABLISHMENT_TIMEZONE_UTILS.GETTIMEZONE)||
										';DS_AGENDA_P=' || ds_agenda_w ||
										';NM_MEDICO_P=' || nm_medico_w ||
										';QT_TEMPO_TOTAL_P=' || to_char(qt_tempo_esterilizacao_w + nr_minuto_duracao_w));
		end if;
				
		if	((ie_consiste_w = 'S') or (ie_consiste_w = 'A')) then
			insert into agenda_pac_hist(
				nr_sequencia,
				nr_seq_agenda,          
				ds_historico,           
				dt_atualizacao,         
				nm_usuario,             
				dt_historico,           
				cd_pessoa_fisica,       
				dt_atualizacao_nrec,    
				nm_usuario_nrec)
			values (
				nextval('agenda_pac_hist_seq'),
				nr_seq_agenda_p,
				wheb_mensagem_pck.get_texto(277562, 'DS_ERRO_P=' || ds_erro_p),
				clock_timestamp(),
				'Tasy',
				clock_timestamp(),
				Obter_Dados_Usuario_Opcao(nm_usuario_p,'C'),
				clock_timestamp(),
				'Tasy');
			commit;
		end if;
	elsif (qt_equip_man_w >= qt_tot_equip_w) and (ie_novo_registro_p = 'S') then

		ds_erro_p :=	wheb_mensagem_pck.get_texto(277544, 'DS_CLASSIF_EQUI_P=' || ds_classif_equi_w || ';DS_MENSAGEM_P=' || ds_mensagem_w);		
		
		if	((ie_consiste_w = 'S') or (ie_consiste_w = 'A')) then
			insert into agenda_pac_hist(
				nr_sequencia,
				nr_seq_agenda,          
				ds_historico,           
				dt_atualizacao,         
				nm_usuario,             
				dt_historico,           
				cd_pessoa_fisica,       
				dt_atualizacao_nrec,    
				nm_usuario_nrec)
			values (
				nextval('agenda_pac_hist_seq'),
				nr_seq_agenda_p,
				wheb_mensagem_pck.get_texto(277562, 'DS_ERRO_P=' || ds_erro_p),
				clock_timestamp(),
				'Tasy',
				clock_timestamp(),
				Obter_Dados_Usuario_Opcao(nm_usuario_p,'C'),
				clock_timestamp(),
				'Tasy');
			commit;
		end if;
		
	elsif (qt_equipamento_w = 0) then
	
		ds_erro_p :=	wheb_mensagem_pck.get_texto(277567, 'DS_CLASSIF_EQUI_P=' || ds_classif_equi_w);
				
		if	((ie_consiste_w = 'S') or (ie_consiste_w = 'A')) then
			insert into agenda_pac_hist(
				nr_sequencia,
				nr_seq_agenda,          
				ds_historico,           
				dt_atualizacao,         
				nm_usuario,             
				dt_historico,           
				cd_pessoa_fisica,       
				dt_atualizacao_nrec,    
				nm_usuario_nrec)
			values (
				nextval('agenda_pac_hist_seq'),
				nr_seq_agenda_p,
				wheb_mensagem_pck.get_texto(277562, 'DS_ERRO_P=' || ds_erro_p),
				clock_timestamp(),
				'Tasy',
				clock_timestamp(),
				Obter_Dados_Usuario_Opcao(nm_usuario_p,'C'),
				clock_timestamp(),
				'Tasy');
			commit;
		end if;
	
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_se_classif_equip_disp ( nr_seq_agenda_p bigint, nr_seq_classif_equip_p bigint, ds_erro_p INOUT text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_agenda_ant_p bigint, ie_novo_registro_p text) FROM PUBLIC;

