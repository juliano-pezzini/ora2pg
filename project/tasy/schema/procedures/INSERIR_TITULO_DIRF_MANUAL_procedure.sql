-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_titulo_dirf_manual ( nr_seq_dirf_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_titulo_pagar_p bigint) AS $body$
DECLARE


vl_rendimento_w			dirf_titulo_pagar.vl_rendimento%type;
vl_imposto_aux_w		dirf_titulo_pagar.vl_rendimento%type;
ie_tipo_data_w			dirf_regra_tributo.ie_tipo_data%type;
ie_nota_fiscal_w		dirf_regra_tributo.ie_nota_fiscal%type;
cd_cgc_w			titulo_pagar.cd_cgc%type;
cd_pessoa_fisica_w		titulo_pagar.cd_pessoa_fisica%type;
nr_seq_nota_fiscal_w		nota_fiscal.nr_sequencia%type;
nr_repasse_terceiro_w		repasse_terceiro.nr_repasse_terceiro%type;
ie_origem_titulo_w		varchar(10);
contador_w			bigint;
qt_registros_w			bigint;
dt_mes_referencia_w		timestamp;
ie_tipo_pessoa_w		dirf_lote_mensal.ie_tipo_pessoa%type;

c01 CURSOR FOR
  SELECT b.cd_tributo,
		     b.cd_darf,
		     --nvl(sum(obter_dados_tit_pagar(to_number(obter_titulo_imposto(i.nr_sequencia)),'V')),0) vl_imposto,
		     b.vl_imposto,
		     a.vl_titulo vl_rendimento,
		     a.dt_emissao,
		     a.dt_liquidacao,
		     a.dt_vencimento_atual,
		     to_date(obter_dados_nota_fiscal(a.nr_seq_nota_fiscal,9)) dt_emissao_nf
	from	  dirf_regra_tributo	c,
		     titulo_pagar_imposto	b,
	  	   titulo_pagar		a
	where	a.nr_titulo	= b.nr_titulo
	and	  c.cd_tributo	= b.cd_tributo
	and	  c.cd_darf	= b.cd_darf
	and	  a.nr_titulo	= nr_titulo_pagar_p
  and   c.cd_estabelecimento = cd_estabelecimento_p
	and	  ((coalesce(ie_tipo_pessoa_w,'A') = 'A') or (ie_tipo_pessoa_w = 'F' and (a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '')) or (ie_tipo_pessoa_w = 'J' and (a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '')))
	and	  ((coalesce(c.ie_incidencia,'A') = 'A') or (c.ie_incidencia = 'F' and (a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '')) or (c.ie_incidencia = 'J' and (a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '')))
	and	  not exists (	SELECT	1
				            from	dirf_titulo_pagar x
				            where	x.nr_titulo	= nr_titulo_pagar_p
				            and	  x.cd_tributo	= b.cd_tributo
				            and	  x.cd_darf	= b.cd_darf
				            );

c01_w		c01%rowtype;


BEGIN
select 	dt_mes_referencia,
	ie_tipo_pessoa
into STRICT	dt_mes_referencia_w,
	ie_tipo_pessoa_w
from 	dirf_lote_mensal
where	nr_sequencia 	= nr_seq_dirf_lote_p;

select	sign(count(*)),
	max(cd_cgc),
	max(cd_pessoa_fisica)
into STRICT	qt_registros_w,
	cd_cgc_w,
	cd_pessoa_fisica_w
from	titulo_pagar_imposto	i,
	titulo_pagar		p
where	p.nr_titulo	= i.nr_titulo
and	p.nr_titulo	= nr_titulo_pagar_p;

if (qt_registros_w = 1 ) then	
	open c01;
	loop
	fetch c01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		
		/*
		VL_DOMINIO      | DESCRICAO                             
		--------------- | --------------------------------------

		0	| Importao
		1	| Nota Fiscal                           
		2	| Manual                                
		3	| Repasse                               
		4	| Imposto                               
		5	| OPS - Contas mdicas                  
		6	| OPS - Reembolso                       
		7	| Ordem de Compra                       
		8	| OPS - Comisso de vendas              
		9	| OPS - Ressarcimento                   
		10	| OPS - Taxa de sade suplementar       
		11	| Ressarcimento ao convnio             
		12	| OPS - Provises Tcnicas              
		13	| Distribuio de lucros                
		14	| Contrato                              
		15	| OPS - Cmara de compensao           
		16	| OPS - Intercmbio                     
		17	| Encontro de contas                    
		18	| OPS - Ocorrncia financeira           
		19	| OPS - Contestaes e Recursos de Glosa
		20	| OPS - Pagamento de produo mdica    
		21	| Unificao                            
		22	| Solicitao de compra                 
		23	| OPS - Devoluo de mensalidade        
		*/
		
		begin
		select	ie_origem_titulo
		into STRICT	ie_origem_titulo_w
		from	titulo_pagar
		where	nr_titulo = nr_titulo_pagar_p;
		exception
		when others then
			ie_origem_titulo_w := 'X';
		end;
		
		vl_rendimento_w := c01_w.vl_rendimento;
		
		if (ie_origem_titulo_w = '1') then -- Nota Fiscal
			begin
			begin
			select	coalesce(a.vl_mercadoria,0) - coalesce(a.vl_descontos,0)
			into STRICT	vl_rendimento_w
			from	nota_fiscal a,
				titulo_pagar b
			where	a.nr_sequencia	= b.nr_seq_nota_fiscal
			and	b.nr_titulo	= nr_titulo_pagar_p;
			exception
			when others then
				vl_rendimento_w := c01_w.vl_rendimento;
			end;
			end;
		elsif (ie_origem_titulo_w = '3') then -- Repasse
			begin
			select	a.nr_repasse_terceiro
			into STRICT	nr_repasse_terceiro_w
			from	titulo_pagar a
			where	a.nr_titulo	= nr_titulo_pagar_p;
			
			begin
			select	vl_vencimento
			into STRICT	vl_rendimento_w
			from	titulo_pagar a,
				repasse_terceiro_venc b
			where	a.nr_repasse_terceiro	= b.nr_repasse_terceiro
			and	a.nr_titulo		= b.nr_titulo
			and	a.nr_titulo		= nr_titulo_pagar_p;			
			exception
			when others then
				vl_rendimento_w := c01_w.vl_rendimento;
			end;
			
			end;
		elsif (ie_origem_titulo_w = '20') then -- OPS - Pagamento de produo mdica
			begin
			begin
			vl_rendimento_w	:= pls_obter_valor_producao_med(null, nr_titulo_pagar_p);
			exception
			when others then
				vl_rendimento_w := c01_w.vl_rendimento;
			end;
			end;
		end if;

		select	count(*)
		into STRICT	qt_registros_w
		from	dirf_regra_tributo	a
		where	((a.cd_estabelecimento = cd_estabelecimento_p) or (coalesce(a.cd_estabelecimento::text, '') = ''))
		and	a.cd_tributo		= c01_w.cd_tributo
		and	a.cd_darf		= c01_w.cd_darf
		/* Ver situao do DARF vinculado! */

  LIMIT 1;
		

		if (qt_registros_w = 1) then
			begin
			insert into dirf_titulo_pagar(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_lote_dirf,
				nr_titulo,
				vl_rendimento,
				vl_imposto,
				cd_tributo,
				cd_darf,
				dt_base_titulo,
				ie_origem)
			values (nextval('dirf_titulo_pagar_seq'),
				clock_timestamp(),
				'Tasy',
				clock_timestamp(),
				'Tasy',
				nr_seq_dirf_lote_p,
				nr_titulo_pagar_p,
				c01_w.vl_rendimento,
				c01_w.vl_imposto,
				c01_w.cd_tributo,
				c01_w.cd_darf,
				dt_mes_referencia_w,
				'M');
		
			contador_w	:= contador_w + 1;
			
			if (mod(contador_w, 100) = 0) then
				commit;
				contador_w := 0;
			end if;
			end;
		end if;
		end;
	end loop;
	close c01;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_titulo_dirf_manual ( nr_seq_dirf_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_titulo_pagar_p bigint) FROM PUBLIC;

