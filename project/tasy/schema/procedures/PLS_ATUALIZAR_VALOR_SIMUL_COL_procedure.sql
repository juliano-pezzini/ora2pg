-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE reg_sca_perfil_simul AS (	nr_seq_plano_sca bigint,
					nr_seq_tabela_sca bigint);
CREATE TYPE reg_bonific_perfil_simul AS (nr_seq_vinculo		pls_bonificacao_vinculo.nr_sequencia%type,
					nr_seq_bonificacao	pls_bonificacao_vinculo.nr_sequencia%type,
					tx_bonificacao		pls_bonificacao_vinculo.tx_bonificacao%type,
					vl_bonificacao		pls_bonificacao_vinculo.vl_bonificacao%type);


CREATE OR REPLACE PROCEDURE pls_atualizar_valor_simul_col ( nr_seq_simul_perfil_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_commit_p text) AS $body$
DECLARE


/*
Finalidade:
Procedure principal para a atualização do valor da simulação coletiva, quando realizado alguma ação no perfil da simullação
 */
nr_seq_simulacao_w		bigint;
nr_seq_simul_col_w		bigint;
nr_seq_tabela_plano_w		bigint;
vl_preco_simul_tot_w		double precision;
indice_w			integer;
qt_idade_inicial_w		bigint;
qt_idade_final_w		bigint;
qt_beneficiario_w		bigint;
i				bigint;
nr_seq_plano_w			bigint;
----------------------------------------------------------------------
vl_preco_sca_w			double precision;
vl_preco_sca_faixa_w		double precision;
vl_preco_sca_total_w		double precision;
vl_simulacao_perfil_w		double precision;
vl_bonificacao_total_w		double precision;
vl_bonificacao_w		double precision;
type vetor_sca is table of reg_sca_perfil_simul index by integer;
vetor_sca_w	vetor_sca;
type vetor_bonific is table of reg_bonific_perfil_simul index by integer;
vetor_bonific_w	vetor_bonific;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		qt_idade_inicial,
		qt_idade_final,
		coalesce(qt_beneficiario,0)
	from	pls_simulpreco_coletivo
	where	nr_seq_simul_perfil	= nr_seq_simul_perfil_p;

C02 CURSOR FOR
	SELECT	nr_seq_plano,
		nr_seq_tabela
	from	pls_sca_vinculo
	where	nr_seq_simulacao_perfil	= nr_seq_simul_perfil_p
	
union all

	SELECT	a.nr_seq_plano,
		a.nr_seq_tabela
	from	pls_sca_vinculo a
	where	a.nr_seq_simulacao	= nr_seq_simulacao_w
	and	not exists (	select	1
				from	pls_sca_vinculo	x
				where	x.nr_seq_simulacao_perfil	= nr_seq_simul_perfil_p
				and	x.nr_seq_plano			= a.nr_seq_plano)
	
union all

	select	a.nr_seq_plano_adic nr_seq_plano,
		a.nr_seq_tabela
	from	pls_plano_servico_adic		a
	where	a.nr_seq_plano	= nr_seq_plano_w
	and	((coalesce(a.dt_fim_vigencia::text, '') = '') or (a.dt_fim_vigencia > clock_timestamp()))
	and	a.ie_lancamento_mensalidade in ('C','E')
	and	not exists (	select	1
				from	pls_sca_vinculo	x
				where	x.nr_seq_simulacao_perfil	= nr_seq_simul_perfil_p
				and	x.nr_seq_plano			= a.nr_seq_plano_adic)
	and	not exists (	select	1
				from	pls_sca_vinculo	x
				where	x.nr_seq_simulacao	= nr_seq_simulacao_w
				and	x.nr_seq_plano		= a.nr_seq_plano_adic);

C03 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_bonificacao,
		tx_bonificacao,
		vl_bonificacao
	from	pls_bonificacao_vinculo
	where	nr_seq_simulacao_perfil	= nr_seq_simul_perfil_p
	
union all

	SELECT	a.nr_sequencia,
		a.nr_seq_bonificacao,
		a.tx_bonificacao,
		a.vl_bonificacao
	from	pls_bonificacao_vinculo a
	where	a.nr_seq_simulacao	= nr_seq_simulacao_w
	and	not exists (	select	1
				from	pls_bonificacao_vinculo	x
				where	x.nr_seq_simulacao_perfil	= nr_seq_simul_perfil_p
				and	x.nr_seq_bonificacao		= a.nr_seq_bonificacao);
BEGIN

select	max(b.ie_tabela_selecionada),
	max(a.nr_seq_simulacao)
into STRICT	nr_seq_tabela_plano_w,
	nr_seq_simulacao_w
from	pls_simulacao_plano	b,
	pls_simulacao_perfil	a
where	b.nr_seq_simul_perfil	= a.nr_sequencia
and	a.nr_sequencia		= nr_seq_simul_perfil_p;

select	max(nr_seq_plano)
into STRICT	nr_seq_plano_w
from	pls_tabela_preco
where	nr_sequencia	= nr_seq_tabela_plano_w;

indice_w	:= 0;
for r_c02_w in C02 loop
	begin
	indice_w	:= indice_w+1;
	vetor_sca_w[indice_w].nr_seq_plano_sca	:= r_c02_w.nr_seq_plano;
	vetor_sca_w[indice_w].nr_seq_tabela_sca	:= r_c02_w.nr_seq_tabela;
	end;
end loop;

indice_w	:= 0;
for r_c03_w in C03 loop
	begin
	indice_w	:= indice_w+1;
	vetor_bonific_w[indice_w].nr_seq_vinculo	:= r_c03_w.nr_sequencia;
	vetor_bonific_w[indice_w].nr_seq_bonificacao	:= r_c03_w.nr_seq_bonificacao;
	vetor_bonific_w[indice_w].tx_bonificacao	:= r_c03_w.tx_bonificacao;
	vetor_bonific_w[indice_w].vl_bonificacao	:= r_c03_w.vl_bonificacao;
	end;
end loop;

begin
select	max(vl_preco_faixa)
into STRICT	vl_preco_simul_tot_w
from	pls_simulacao_plano
where	nr_seq_simul_perfil	= nr_seq_simul_perfil_p
and	ie_tabela_selecionada	= nr_seq_tabela_plano_w
and	nr_seq_tabela		= nr_seq_tabela_plano_w
and	qt_idade_inicial	= 0
and	qt_idade_final		= 0;
exception
when others then
	vl_preco_simul_tot_w	:= 0;
end;

if (coalesce(vl_preco_simul_tot_w::text, '') = '') then
	vl_preco_simul_tot_w	:= 0;
end if;

vl_preco_sca_total_w	:= 0;
vl_bonificacao_total_w	:= 0;

open C01;
loop
fetch C01 into
	nr_seq_simul_col_w,
	qt_idade_inicial_w,
	qt_idade_final_w,
	qt_beneficiario_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	for i in 1..vetor_sca_w.count loop
		begin
		vl_preco_sca_w	:= 0;

		if (vetor_sca_w[i](.nr_seq_tabela_sca IS NOT NULL AND .nr_seq_tabela_sca::text <> '')) then
			select	max(vl_preco_atual)
			into STRICT	vl_preco_sca_w
			from	pls_plano_preco
			where	nr_seq_tabela	= vetor_sca_w[i].nr_seq_tabela_sca
			and	qt_idade_inicial_w between qt_idade_inicial and qt_idade_final
			and	qt_idade_final_w <= qt_idade_final;
		end if;

		vl_preco_sca_faixa_w	:= vl_preco_sca_faixa_w + coalesce(vl_preco_sca_w,0);
		end;
	end loop;

	vl_preco_sca_faixa_w	:= coalesce(vl_preco_sca_faixa_w,0) * qt_beneficiario_w;
	vl_preco_sca_total_w	:= vl_preco_sca_total_w + coalesce(vl_preco_sca_faixa_w,0);
	vl_preco_sca_faixa_w	:= 0;

	for i in 1..vetor_bonific_w.count loop
		begin
		vl_bonificacao_w	:= coalesce(pls_obter_valores_simul_pj(nr_seq_simulacao_w, nr_seq_simul_col_w, vetor_bonific_w[i].nr_seq_vinculo, 'B'),0);

		if (coalesce(vl_bonificacao_w,0) <> 0) then
			vl_bonificacao_total_w	:= vl_bonificacao_total_w + (vl_bonificacao_w * qt_beneficiario_w);
		end if;
		end;
	end loop;
	end;
end loop;
close C01;

update	pls_simulacao_perfil
set	vl_simulacao_perfil	= vl_preco_simul_tot_w + coalesce(vl_preco_sca_total_w,0) + coalesce(vl_bonificacao_total_w,0),
	vl_simulacao_sca       	= vl_preco_sca_total_w,
	vl_simulacao_bonific	= vl_bonificacao_total_w
where	nr_sequencia		= nr_seq_simul_perfil_p;

select	sum(vl_simulacao_perfil)
into STRICT	vl_simulacao_perfil_w
from	pls_simulacao_perfil
where	nr_seq_simulacao	= nr_seq_simulacao_w;

if (coalesce(vl_simulacao_perfil_w::text, '') = '') then
	vl_simulacao_perfil_w	:= 0;
end if;

update	pls_simulacao_preco
set	vl_simulacao	= vl_simulacao_perfil_w
where	nr_sequencia	= nr_seq_simulacao_w;

if (ie_commit_p = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_valor_simul_col ( nr_seq_simul_perfil_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ie_commit_p text) FROM PUBLIC;

