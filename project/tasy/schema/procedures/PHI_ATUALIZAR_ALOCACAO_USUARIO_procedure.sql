-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE phi_atualizar_alocacao_usuario ( ie_acao_p text, nm_usuario_grupo_p text, dt_inicio_p timestamp, dt_fim_p timestamp, pr_alocacao_p bigint, nr_seq_grupo_des_p bigint, nr_seq_grupo_sup_p bigint, nm_usuario_p text, ie_commit_p text) AS $body$
DECLARE


qt_reg_w		bigint;
nr_sequencia_w		alocacao_usuario_grupo.nr_sequencia%type;
dt_inicio_w		alocacao_usuario_grupo.dt_inicio_vigencia%type;
dt_alocacao_w		alocacao_usuario_grupo.dt_inicio_vigencia%type;
pr_alocacao_w		alocacao_usuario_grupo.pr_alocacao%type;
ie_funcao_usuario_w	usuario_grupo_des.ie_funcao_usuario%type;

/*	ie_acao_p
	I - Inserir
	E - Excluir	
	A - Atualizar
*/
c01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_grupo nr_seq_grupo_ger,
		substr(phi_obter_dados_grupo_usu(a.nr_seq_grupo,null,null,null,null,null,null,'GD'),1,10) nr_seq_grupo_des,
		substr(phi_obter_dados_grupo_usu(a.nr_seq_grupo,null,null,null,null,null,null,'GS'),1,10) nr_seq_grupo_sup,
		a.dt_inicio dt_inicio_grupo,
		a.dt_fim dt_fim_grupo,
		(SELECT	max(x.dt_fim_vigencia)
		from	alocacao_usuario_grupo x
		where	x.nm_usuario_grupo = a.nm_usuario_grupo
		and	x.ie_emprestimo = 'S'
		and	x.dt_inicio_vigencia >= a.dt_inicio
		and	x.dt_fim_vigencia <= coalesce(a.dt_fim,x.dt_fim_vigencia)) dt_fim_aloc
	from	gerencia_wheb_grupo_usu a
	where	a.nm_usuario_grupo = nm_usuario_grupo_p
	and	coalesce(a.ie_emprestimo,'N') = 'N'
	order by a.dt_inicio;

c02 CURSOR(dt_inicio_grupo_p timestamp, dt_fim_grupo_p timestamp, dt_fim_aloc_p timestamp) FOR
	SELECT	b.*,
		count(1) over () cnt
	from	(
		SELECT	a.*,
			(select (100 - coalesce(sum(x.pr_alocacao),0))
			from	alocacao_usuario_grupo x
			where	x.nm_usuario_grupo = nm_usuario_grupo_p
			and	x.ie_emprestimo = 'S'
			and	a.dt_alocacao between x.dt_inicio_vigencia and x.dt_fim_vigencia) pr_alocacao
		from	(WITH RECURSIVE cte AS (

			select	dt_inicio_grupo_p + (level-1) dt_alocacao
			
			dt_inicio_grupo_p + (level-1) <= coalesce(dt_fim_grupo_p,dt_fim_aloc_p+1)
			  UNION ALL

			select	dt_inicio_grupo_p + (level-1) dt_alocacao
			
			dt_inicio_grupo_p + (level-1) <= coalesce(dt_fim_grupo_p,dt_fim_aloc_p+1)
			 JOIN cte c ON ()

) SELECT * FROM cte;
) a
		) b
	where	(b.dt_alocacao IS NOT NULL AND b.dt_alocacao::text <> '')
	and	b.pr_alocacao <> 0;

procedure gerar_aloc_usuario(
			nm_usuario_grupo_p	text,
			dt_inicio_p		timestamp,
			dt_fim_p		timestamp,
			pr_alocacao_p		bigint,
			nr_seq_grupo_des_p	bigint,
			nr_seq_grupo_sup_p	bigint,
			ie_emprestimo_p		text,
			nm_usuario_p		text) is

nr_seq_aux_w		alocacao_usuario_grupo.nr_sequencia%type;
BEGIN

if (nr_seq_grupo_des_p IS NOT NULL AND nr_seq_grupo_des_p::text <> '') or (nr_seq_grupo_sup_p IS NOT NULL AND nr_seq_grupo_sup_p::text <> '') then
	begin
	select	max(nr_sequencia)
	into STRICT	nr_seq_aux_w
	from	alocacao_usuario_grupo
	where	nm_usuario_grupo = nm_usuario_grupo_p
	and	dt_inicio_vigencia = dt_inicio_p
	and	dt_fim_vigencia = dt_fim_p
	and	coalesce(nr_seq_grupo_des,coalesce(nr_seq_grupo_des_p,0)) = coalesce(nr_seq_grupo_des_p,0)
	and	coalesce(nr_seq_grupo_sup,coalesce(nr_seq_grupo_sup_p,0)) = coalesce(nr_seq_grupo_sup_p,0)
	and	ie_emprestimo = ie_emprestimo_p;

	if (coalesce(nr_seq_aux_w::text, '') = '') then
		insert into alocacao_usuario_grupo(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nm_usuario_grupo,
				pr_alocacao,
				dt_inicio_vigencia,
				dt_fim_vigencia,
				ie_emprestimo,
				nr_seq_grupo_des,
				nr_seq_grupo_sup)
			values (nextval('alocacao_usuario_grupo_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nm_usuario_grupo_p,
				pr_alocacao_p,
				dt_inicio_p,
				dt_fim_p,
				ie_emprestimo_p,
				nr_seq_grupo_des_p,
				nr_seq_grupo_sup_p);
	else
		update	alocacao_usuario_grupo
		set	pr_alocacao = CASE WHEN ie_emprestimo_p='N' THEN pr_alocacao_p  ELSE least(pr_alocacao + pr_alocacao_p,100) END ,
			dt_atualizacao = clock_timestamp(),
			nm_usuario = nm_usuario_p
		where	nr_sequencia = nr_seq_aux_w;
	end if;
	end;
end if;

end;

begin

if (ie_acao_p = 'I') then
	begin
	gerar_aloc_usuario(nm_usuario_grupo_p,dt_inicio_p,dt_fim_p,pr_alocacao_p,nr_seq_grupo_des_p,nr_seq_grupo_sup_p,'S',nm_usuario_p);

	if (nr_seq_grupo_des_p IS NOT NULL AND nr_seq_grupo_des_p::text <> '') then
		begin
		select	count(1)
		into STRICT	qt_reg_w
		from	usuario_grupo_des
		where	nr_seq_grupo = nr_seq_grupo_des_p
		and	nm_usuario_grupo = nm_usuario_grupo_p
		and	dt_inicio_vigencia = dt_inicio_p
		and	dt_fim_vigencia = dt_fim_p
		and	ie_emprestimo = 'S';

		if (qt_reg_w = 0) then
			begin
			select	max(ie_funcao_usuario)
			into STRICT	ie_funcao_usuario_w
			from	usuario_grupo_des
			where	nm_usuario_grupo = nm_usuario_grupo_p
			and	dt_inicio_vigencia <= dt_inicio_p
			and	coalesce(dt_fim_vigencia,dt_fim_p) >= dt_fim_p
			and	coalesce(ie_emprestimo,'N') = 'N';

			insert into usuario_grupo_des(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nm_usuario_grupo,
					nr_seq_grupo,
					dt_inicio_vigencia,
					dt_fim_vigencia,
					ie_funcao_usuario,
					ie_emprestimo,
					ie_defeito,
					ie_solicitacao,
					nr_seq_localizacao)
				values (nextval('usuario_grupo_des_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nm_usuario_grupo_p,
					nr_seq_grupo_des_p,
					dt_inicio_p,
					dt_fim_p,
					ie_funcao_usuario_w,
					'S',
					null,
					null,
					null);
			end;
		end if;
		end;
	elsif (nr_seq_grupo_sup_p IS NOT NULL AND nr_seq_grupo_sup_p::text <> '') then
		begin
		select	count(1)
		into STRICT	qt_reg_w
		from	usuario_grupo_sup
		where	nr_seq_grupo = nr_seq_grupo_sup_p
		and	nm_usuario_grupo = nm_usuario_grupo_p
		and	dt_inicio_vigencia = dt_inicio_p
		and	dt_fim_vigencia = dt_fim_p
		and	ie_emprestimo = 'S';

		if (qt_reg_w = 0) then
			begin
			select	max(ie_funcao_usuario)
			into STRICT	ie_funcao_usuario_w
			from	usuario_grupo_sup
			where	nm_usuario_grupo = nm_usuario_grupo_p
			and	dt_inicio_vigencia <= dt_inicio_p
			and	coalesce(dt_fim_vigencia,dt_fim_p) >= dt_fim_p
			and	coalesce(ie_emprestimo,'N') = 'N';

			insert into usuario_grupo_sup(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nm_usuario_grupo,
					nr_seq_grupo,
					dt_inicio_vigencia,
					dt_fim_vigencia,
					ie_funcao_usuario,
					ie_emprestimo)
				values (nextval('usuario_grupo_sup_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nm_usuario_grupo_p,
					nr_seq_grupo_sup_p,
					dt_inicio_p,
					dt_fim_p,
					ie_funcao_usuario_w,
					'S');
			end;
		end if;
		end;
	end if;
	end;
elsif (ie_acao_p = 'D') then
	begin
	select	max(nr_sequencia)
	into STRICT	nr_sequencia_w
	from	alocacao_usuario_grupo
	where	nm_usuario_grupo = nm_usuario_grupo_p
	and	dt_inicio_vigencia = dt_inicio_p
	and	dt_fim_vigencia = dt_fim_p
	and	coalesce(nr_seq_grupo_des,coalesce(nr_seq_grupo_des_p,0)) = coalesce(nr_seq_grupo_des_p,0)
	and	coalesce(nr_seq_grupo_sup,coalesce(nr_seq_grupo_sup_p,0)) = coalesce(nr_seq_grupo_sup_p,0)
	and	ie_emprestimo = 'S';

	if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
		begin
		select	max(pr_alocacao)
		into STRICT	pr_alocacao_w
		from	alocacao_usuario_grupo
		where	nr_sequencia = nr_sequencia_w;

		if (pr_alocacao_w > pr_alocacao_p) then
			update	alocacao_usuario_grupo
			set	pr_alocacao = (pr_alocacao - pr_alocacao_p),
				dt_atualizacao = clock_timestamp(),
				nm_usuario = nm_usuario_p
			where	nr_sequencia = nr_sequencia_w;
		else
			delete from alocacao_usuario_grupo where nr_sequencia = nr_sequencia_w;
		end if;
		end;
	end if;

	if (nr_seq_grupo_des_p IS NOT NULL AND nr_seq_grupo_des_p::text <> '') then
		begin
		delete	FROM usuario_grupo_des
		where	nr_seq_grupo = nr_seq_grupo_des_p
		and	nm_usuario_grupo = nm_usuario_grupo_p
		and	dt_inicio_vigencia = dt_inicio_p
		and	dt_fim_vigencia = dt_fim_p
		and	ie_emprestimo = 'S'  LIMIT 1;
		end;
	elsif (nr_seq_grupo_sup_p IS NOT NULL AND nr_seq_grupo_sup_p::text <> '') then
		begin
		delete	FROM usuario_grupo_sup
		where	nr_seq_grupo = nr_seq_grupo_sup_p
		and	nm_usuario_grupo = nm_usuario_grupo_p
		and	dt_inicio_vigencia = dt_inicio_p
		and	dt_fim_vigencia = dt_fim_p
		and	ie_emprestimo = 'S'  LIMIT 1;
		end;
	end if;
	end;
end if;

delete	FROM alocacao_usuario_grupo
where	nm_usuario_grupo = nm_usuario_grupo_p
and	ie_emprestimo = 'N';

for c01_w in c01 loop
	begin
	dt_inicio_w	:= null;
	dt_alocacao_w	:= null;
	pr_alocacao_w	:= null;

	if (coalesce(c01_w.dt_fim_aloc::text, '') = '') then
		begin
		gerar_aloc_usuario(nm_usuario_grupo_p,c01_w.dt_inicio_grupo,c01_w.dt_fim_grupo,100,c01_w.nr_seq_grupo_des,c01_w.nr_seq_grupo_sup,'N',nm_usuario_p);
		end;
	else
		begin
		for c02_w in c02(c01_w.dt_inicio_grupo, c01_w.dt_fim_grupo, c01_w.dt_fim_aloc) loop
			begin
			if (c02%rowcount = 1) then
				dt_inicio_w := c02_w.dt_alocacao;
			elsif (c02_w.dt_alocacao <> dt_alocacao_w+1) or (c02_w.pr_alocacao <> pr_alocacao_w) then
				begin
				gerar_aloc_usuario(nm_usuario_grupo_p,dt_inicio_w,dt_alocacao_w,pr_alocacao_w,c01_w.nr_seq_grupo_des,c01_w.nr_seq_grupo_sup,'N',nm_usuario_p);

				dt_inicio_w	:= c02_w.dt_alocacao;
				end;
			end if;

			if (c02_w.cnt = c02%rowcount) then
				if (c01_w.dt_fim_grupo IS NOT NULL AND c01_w.dt_fim_grupo::text <> '') then
					gerar_aloc_usuario(nm_usuario_grupo_p,dt_inicio_w,c02_w.dt_alocacao,c02_w.pr_alocacao,c01_w.nr_seq_grupo_des,c01_w.nr_seq_grupo_sup,'N',nm_usuario_p);
				else
					gerar_aloc_usuario(nm_usuario_grupo_p,c02_w.dt_alocacao,null,c02_w.pr_alocacao,c01_w.nr_seq_grupo_des,c01_w.nr_seq_grupo_sup,'N',nm_usuario_p);
				end if;
			end if;

			dt_alocacao_w	:= c02_w.dt_alocacao;
			pr_alocacao_w	:= c02_w.pr_alocacao;
			end;
		end loop;
		end;
	end if;
	end;
end loop;

if (coalesce(ie_commit_p,'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE phi_atualizar_alocacao_usuario ( ie_acao_p text, nm_usuario_grupo_p text, dt_inicio_p timestamp, dt_fim_p timestamp, pr_alocacao_p bigint, nr_seq_grupo_des_p bigint, nr_seq_grupo_sup_p bigint, nm_usuario_p text, ie_commit_p text) FROM PUBLIC;

