-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_fluxo_caixa_lote_contrat ( nr_seq_lote_fluxo_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, cd_empresa_p bigint, ie_restringe_estab_p text, dt_inicial_p timestamp, dt_final_p timestamp) AS $body$
DECLARE


/*--------------------------------------------------------------- ATENCAO ----------------------------------------------------------------*/


/* Cuidado ao realizar alteracoes no fluxo de caixa em lote. Toda e qualquer alteracao realizada em qualquer uma */


/* das procedures do fluxo de caixa em lote deve ser cuidadosamente verificada e realizada no fluxo de caixa      */


/* convencional. Devemos garantir que os dois fluxos de caixa tragam os mesmos valores no resultado, evitando     */


/* assim que existam diferencas entre os fluxos de caixa.                                                                                                */


/*--------------- AO ALTERAR O FLUXO DE CAIXA EM LOTE ALTERAR TAMBEM O FLUXO DE CAIXA ---------------*/

cd_conta_financ_w	bigint;
nr_seq_contrato_w	bigint;
dt_primeiro_vencto_w	timestamp;
vl_fluxo_w		double precision;
dt_referencia_w		timestamp;
cd_moeda_w		integer		:= 0;
cd_moeda_padrao_w	integer		:= 0;
ie_tratar_fim_semana_w	varchar(255);
ie_somente_futuro_w	varchar(255);
ie_forma_w		varchar(255);
dt_fim_w		timestamp;
dt_vencimento_w		timestamp;
dt_inicio_w		timestamp;
cont_w			smallint;
ie_operacao_w		varchar(10);
ie_contrato_nf_calc_w	varchar(1);
cont_ww			smallint;
dia_vencimento_w	varchar(2);

c010 CURSOR FOR
SELECT	nr_sequencia,
	dt_primeiro_vencto,
	vl_pagto,
	cd_moeda,
	cd_conta_financ,
	dt_vigencia,
	ie_forma
from (SELECT	a.nr_sequencia,
		b.dt_primeiro_vencto,
		b.vl_pagto,
		b.cd_moeda,
		b.cd_conta_financ,
		pkg_date_utils.start_of(coalesce(b.dt_final_vigencia,dt_final_p), 'MONTH', 0) dt_vigencia,
		b.ie_forma,
		obter_empresa_estab(a.cd_estabelecimento) cd_empresa_estab,
		substr(obter_se_conta_financ_estab(b.cd_conta_financ, cd_estabelecimento_p,ie_restringe_estab_p),1,1) ie_conta_financ_estab,
		substr(Obter_se_media_regra(b.cd_conta_financ),1,1) ie_media_regra
	from	contrato_regra_pagto b,
		contrato a
	where	a.nr_sequencia				= b.nr_seq_contrato
	and (a.cd_estabelecimento			= cd_estabelecimento_p or ie_restringe_estab_p = 'N')
	and	b.ie_forma				in ('M', 'T', 'F')
	and	coalesce(b.vl_pagto,0)			> 0
	and	a.ie_pagar_receber			= 'P'
	and	b.ie_tipo_valor				= 'V'
	and	a.ie_situacao				= 'A'
	and	(b.cd_conta_financ IS NOT NULL AND b.cd_conta_financ::text <> '')
	and	coalesce(b.dt_inicio_vigencia,dt_final_p)	<= dt_final_p
	and	coalesce(b.dt_final_vigencia,dt_final_p)	>= dt_inicial_p
	and	b.dt_primeiro_vencto			between coalesce(b.dt_inicio_vigencia,b.dt_primeiro_vencto) and coalesce(b.dt_final_vigencia,b.dt_primeiro_vencto)) alias15
where	cd_empresa_estab = cd_empresa_p
and (ie_conta_financ_estab = 'S' or ie_restringe_estab_p = 'N')
and	ie_media_regra = 'N';


BEGIN

select	obter_moeda_padrao(cd_estabelecimento_p, 'P')
into STRICT	cd_moeda_padrao_w
;

select	ie_tratar_fim_semana,
	ie_somente_futuro,
	coalesce(ie_contrato_nf_calc,'N')
into STRICT	ie_tratar_fim_semana_w,
	ie_somente_futuro_w,
	ie_contrato_nf_calc_w
from	parametro_fluxo_caixa
where	cd_estabelecimento	= cd_estabelecimento_p;

dt_inicio_w		:= dt_inicial_p;
if (ie_somente_futuro_w = 'S') then
	dt_inicio_w	:= pkg_date_utils.start_of(clock_timestamp(), 'DD', 0);
end if;

open c010;
loop
fetch c010 into
	nr_seq_contrato_w,
	dt_primeiro_vencto_w,
	vl_fluxo_w,
	cd_moeda_w,
	cd_conta_financ_w,
	dt_fim_w,
	ie_forma_w;
EXIT WHEN NOT FOUND; /* apply on c010 */

	dt_vencimento_w		:= dt_primeiro_vencto_w;
	if (ie_forma_w = 'F') then

		select	count(*)
		into STRICT	cont_w
		from	nota_fiscal b,
			nota_fiscal_item a
		where	a.nr_sequencia			= b.nr_sequencia
		and	a.nr_contrato			= nr_seq_contrato_w
		and	(b.dt_atualizacao_estoque IS NOT NULL AND b.dt_atualizacao_estoque::text <> '')
		and	((ie_contrato_nf_calc_w = 'S' and pkg_date_utils.start_of(to_date(substr(obter_dados_nota_fiscal(b.nr_sequencia,'21'),1,60)), 'MONTH', 0) = pkg_date_utils.start_of(dt_vencimento_w, 'MONTH', 0)) or (pkg_date_utils.start_of(b.dt_atualizacao_estoque, 'MONTH', 0) = pkg_date_utils.start_of(dt_vencimento_w, 'MONTH', 0)));
		
		select	count(*)
		into STRICT	cont_ww
		from	nota_fiscal y,
			titulo_pagar x
		where	x.nr_seq_nota_fiscal		= y.nr_sequencia
		and	y.nr_contrato			= nr_seq_contrato_w
		and	(y.dt_atualizacao_estoque IS NOT NULL AND y.dt_atualizacao_estoque::text <> '')
		and	pkg_date_utils.start_of(x.dt_vencimento_atual, 'MONTH', 0) = pkg_date_utils.start_of(dt_vencimento_w, 'MONTH', 0);

		if (cont_w = 0) and (cont_ww = 0)then

			CALL GERAR_FLUXO_CAIXA_LOTE(	dt_vencimento_w,
						cd_conta_financ_w,
						'',
						'16-1',
						'CT',
						nm_usuario_p,
						null,
						null,
						null,
						null,
						null,
						null,
						nr_seq_contrato_w,
						null,
						nr_seq_lote_fluxo_p,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						coalesce(vl_fluxo_w,0));
		end if;
	else
		dt_vencimento_w	:= pkg_date_utils.get_date(pkg_date_utils.extract_field('YEAR',dt_inicial_p,0), pkg_date_utils.extract_field('MONTH',dt_vencimento_w,0),pkg_date_utils.extract_field('DAY',dt_vencimento_w,0),0);
		
		if (dt_vencimento_w = pkg_date_utils.get_datetime(pkg_date_utils.end_of(dt_vencimento_w, 'MONTH', 0), dt_vencimento_w)) then
			dia_vencimento_w := '31';
		else
			dia_vencimento_w := pkg_date_utils.extract_field('DAY',dt_vencimento_w,0);
		end if;
		
		while 	pkg_date_utils.start_of(dt_vencimento_w, 'MONTH', 0) <= pkg_date_utils.start_of(dt_fim_w, 'MONTH', 0) loop

			select	count(*)
			into STRICT	cont_w
			from	nota_fiscal b,
					nota_fiscal_item a
			where	a.nr_sequencia			= b.nr_sequencia
			and	a.nr_contrato			= nr_seq_contrato_w
			and	(b.dt_atualizacao_estoque IS NOT NULL AND b.dt_atualizacao_estoque::text <> '')
			and	((ie_contrato_nf_calc_w = 's' and pkg_date_utils.start_of(to_date(substr(obter_dados_nota_fiscal(b.nr_sequencia,'21'),1,60)),'MONTH',0) = pkg_date_utils.start_of(dt_vencimento_w, 'MONTH',0)) or (pkg_date_utils.start_of(b.dt_atualizacao_estoque,'MONTH',0) = pkg_date_utils.start_of(dt_vencimento_w, 'MONTH',0)));
			
			select	count(*) -- se possuir titulo na nota gerada pelo contrato nao exibe o contrato, pois ja entra no titulo.
			into STRICT	cont_ww
			from	nota_fiscal y,
				titulo_pagar x
			where	x.nr_seq_nota_fiscal		= y.nr_sequencia
			and	y.nr_contrato			= nr_seq_contrato_w
			and	(y.dt_atualizacao_estoque IS NOT NULL AND y.dt_atualizacao_estoque::text <> '')
			and	x.ie_situacao <> 'C' /* OS 2291609 - Ajuste para nao considerar contratos com titulos cancelados */
			and	pkg_date_utils.start_of(x.dt_vencimento_atual,'MONTH',0) = PKG_DATE_UTILS.start_of(dt_vencimento_w,'MONTH',0);

			if (cont_w = 0) and (cont_ww = 0)then

				if (cd_moeda_padrao_w <> cd_moeda_w) then
					select	obter_valor_moeda_nac(cd_estabelecimento_p,
						vl_fluxo_w,
						cd_moeda_w,
						dt_vencimento_w)
					into STRICT	vl_fluxo_w
					;
				end if;

				dt_referencia_w			:= dt_vencimento_w;
				if (ie_tratar_fim_semana_w = 'S') then
					dt_referencia_w		:= obter_proximo_dia_util(cd_estabelecimento_p, dt_vencimento_w);
				end if;

				if (dt_referencia_w >= dt_inicio_w) then
					if (ie_forma_w = 'M') or (pkg_date_utils.start_of(dt_referencia_w, 'MONTH', 0) = pkg_date_utils.start_of(dt_primeiro_vencto_w, 'MONTH', 0)) or (mod(somente_numero(pkg_date_utils.extract_field('MONTH', dt_referencia_w, 0)) - somente_numero(pkg_date_utils.extract_field('MONTH',dt_primeiro_vencto_w, 0)), 3) = 0) then

						CALL GERAR_FLUXO_CAIXA_LOTE(	dt_referencia_w,
									cd_conta_financ_w,
									'',
									'16-2',
									'CT',
									nm_usuario_p,
									null,
									null,
									null,
									null,
									null,
									null,
									nr_seq_contrato_w,
									null,
									nr_seq_lote_fluxo_p,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									coalesce(vl_fluxo_w,0));
					end if;
				end if;
			end if;
			
			dt_vencimento_w		:= PKG_DATE_UTILS.ADD_MONTH(dt_vencimento_w, 1,0);
			begin
			dt_vencimento_w		:= pkg_date_utils.get_date(dia_vencimento_w, dt_vencimento_w, 0);
			exception
			when others then
			dt_vencimento_w := dt_vencimento_w;
			end;
			
		end loop;
	end if;
end loop;
close c010;

/*NAO COLOCAR COMMIT NESTA PROCEDURE*/

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_fluxo_caixa_lote_contrat ( nr_seq_lote_fluxo_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, cd_empresa_p bigint, ie_restringe_estab_p text, dt_inicial_p timestamp, dt_final_p timestamp) FROM PUBLIC;

