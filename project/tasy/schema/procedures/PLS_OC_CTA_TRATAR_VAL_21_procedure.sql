-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_21 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Aplicar a validação para gerar ocorrência em contas que passaram do prazo de envio
	definido pela Operadora em contrato com o Prestador.
------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
------------------------------------------------------------------------------------------------------------------
Alterações:
------------------------------------------------------------------------------------------------------------------
jjung OS 602077  28/06/2013 - Criação da rotina.
------------------------------------------------------------------------------------------------------------------
jjung 29/06/2013

Alteração:	Adicionado parâmetro nos métodos de atualização dos campos IE_VALIDO e IE_VALIDO_TEMP
	da PLS_TIPOS_OCOR_PCK

Motivo:	Se tornou necessário diferenciar os filtros das validações na hora de realizar esta operação
	para que os filtros de exceção funcionem corretamente.
------------------------------------------------------------------------------------------------------------------
dlehmkuhl OS 688483 - 14/04/2014 -

Alteração:	Modificada a forma de trabalho em relação a atualização dos campos de controle
	que basicamente decidem se a ocorrência será ou não gerada. Foi feita também a
	substituição da rotina obterX_seX_geraX.

Motivo:	Necessário realizar essas alterações para corrigir bugs principalmente no que se
	refere a questão de aplicação de filtros (passo anterior ao da validação). Também
	tivemos um foco especial em performance, visto que a mesma precisou ser melhorada
	para não inviabilizar a nova solicitação que diz que a exceção deve verificar todo
	o atendimento.
------------------------------------------------------------------------------------------------------------------
jjkruk OS 753749 - 01/07/2014 -

Alteração:	Incluida validacao por dt_documento
Motivo:		Validar data de apresentacao de contas de reembolso
------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_sql_w	varchar(4000);
ds_restricao_w	varchar(100);

var_cur_w 		integer;
var_exec_w		integer;
var_retorno_w		integer;
qt_cnt_w		integer;

nr_seq_selecao_w	dbms_sql.number_table;
ie_valido_w		dbms_sql.varchar2_table;
ds_observacao_w		dbms_sql.varchar2_table;

ie_registro_valido_w	varchar(1);

-- Informações da validação de situação inativa do prestador
C02 CURSOR(	nr_seq_oc_cta_comb_p	dados_regra_p.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia	nr_seq_validacao,
		a.ie_data_tipo_envio_rec,
		a.ie_tipo_data_envio,
		a.qt_dias_envio
	from	pls_oc_cta_val_dt_rec a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;

BEGIN
-- Deve se ter a informação da regra para que a validação seja aplicada.
if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '') then

	ie_registro_valido_w := 'S';

	-- Obter o controle padrão para quantidade de registros que será enviada a cada vez para a tabela de seleção.
	qt_cnt_w := pls_cta_consistir_pck.qt_registro_transacao_w;

	-- Buscar os dados da regra de validação conforme montado pelo usuário.
	for	r_C02_w in C02(dados_regra_p.nr_sequencia) loop

		-- Devem ser verificadas as informações conforme o cadastro da regra de validação.
		-- Caso a informação da quantidade de dias não seja informada, gera a ocorrência para todas as contas.
		-- Desta forma se torna mais fácil identificar que o cliente tem problemas no cadastro da regra dele.
		if (r_C02_w.qt_dias_envio IS NOT NULL AND r_C02_w.qt_dias_envio::text <> '') then
			-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
			CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);

			-- Se for para comparar :
			-- a data de recebimento do protocolo.
			if (r_C02_w.ie_data_tipo_envio_rec = 'R') then
				-- Com :
				-- A data de emissão da conta.
				if (r_C02_w.ie_tipo_data_envio = 'EM') then
					if (dados_regra_p.ie_evento = 'IMP') then
						ds_restricao_w := 'and	(prot.dt_recebimento - conta.dt_emissao_imp) >= :qt_dias_envio ';
					else
						ds_restricao_w := 'and	(prot.dt_recebimento - conta.dt_emissao) >= :qt_dias_envio ';
					end if;
				-- A data de atendimento informada na conta.
				elsif (r_C02_w.ie_tipo_data_envio = 'AT') then
					if (dados_regra_p.ie_evento = 'IMP') then
						ds_restricao_w := 'and	(prot.dt_recebimento - conta.dt_atendimento_imp_inf) >= :qt_dias_envio ';
					else
						ds_restricao_w := 'and	(prot.dt_recebimento - conta.dt_atendimento_inf) >= :qt_dias_envio ';
					end if;
				-- A data de atendimento referência informada na conta.
				elsif (r_C02_w.ie_tipo_data_envio = 'AR') then
					if (dados_regra_p.ie_evento = 'IMP') then
						ds_restricao_w := 'and	(prot.dt_recebimento - conta.dt_atendimento_imp) >= :qt_dias_envio ';
					else
						ds_restricao_w := 'and	(prot.dt_recebimento - conta.dt_atendimento) >= :qt_dias_envio ';
					end if;
				-- A data de entrada na internação informaada para a conta.
				elsif (r_C02_w.ie_tipo_data_envio = 'E') then
					if (dados_regra_p.ie_evento = 'IMP') then
						ds_restricao_w := 'and	(prot.dt_recebimento - conta.dt_entrada_imp) >= :qt_dias_envio ';
					else
						ds_restricao_w := 'and	(prot.dt_recebimento - conta.dt_entrada) >= :qt_dias_envio ';
					end if;
				-- A data de alta da internação.
				elsif (r_C02_w.ie_tipo_data_envio = 'A') then
					if (dados_regra_p.ie_evento = 'IMP') then
						ds_restricao_w := 'and	(prot.dt_recebimento - conta.dt_alta_imp) >= :qt_dias_envio ';
					else
						ds_restricao_w := 'and	(prot.dt_recebimento - conta.dt_alta) >= :qt_dias_envio ';
					end if;
				-- A data do documento
				elsif (r_C02_w.ie_tipo_data_envio = 'DO') then
					if (dados_regra_p.ie_evento = 'IMP') then
						ds_restricao_w := 'and	(prot.dt_recebimento - conta.dt_documento) >= :qt_dias_envio ';
					else
						ds_restricao_w := 'and	(prot.dt_recebimento - conta.dt_documento) >= :qt_dias_envio ';
					end if;
				end if;
			-- a data do protocolo
			elsif (r_C02_w.ie_data_tipo_envio_rec = 'P') then
				-- Com :
				-- A data de emissão da conta.
				if (r_C02_w.ie_tipo_data_envio = 'EM') then
					if (dados_regra_p.ie_evento = 'IMP') then
						ds_restricao_w := 'and	(prot.dt_protocolo_imp - conta.dt_emissao_imp) >= :qt_dias_envio ';
					else
						ds_restricao_w := 'and	(prot.dt_protocolo - conta.dt_emissao) >= :qt_dias_envio ';
					end if;
				-- A data de atendimento informada na conta.
				elsif (r_C02_w.ie_tipo_data_envio = 'AT') then
					if (dados_regra_p.ie_evento = 'IMP') then
						ds_restricao_w := 'and	(prot.dt_protocolo_imp - conta.dt_atendimento_imp_inf) >= :qt_dias_envio ';
					else
						ds_restricao_w := 'and	(prot.dt_protocolo - conta.dt_atendimento_inf) >= :qt_dias_envio ';
					end if;
				-- A data de atendimento referência informada na conta.
				elsif (r_C02_w.ie_tipo_data_envio = 'AR') then
					if (dados_regra_p.ie_evento = 'IMP') then
						ds_restricao_w := 'and	(prot.dt_recebimento - conta.dt_atendimento_imp) >= :qt_dias_envio ';
					else
						ds_restricao_w := 'and	(prot.dt_recebimento - conta.dt_atendimento) >= :qt_dias_envio ';
					end if;
				-- A data de entrada na internação informada para a conta.
				elsif (r_C02_w.ie_tipo_data_envio = 'E') then
					if (dados_regra_p.ie_evento = 'IMP') then
						ds_restricao_w := 'and	(prot.dt_protocolo_imp - conta.dt_entrada_imp) >= :qt_dias_envio ';
					else
						ds_restricao_w := 'and	(prot.dt_protocolo - conta.dt_entrada) >= :qt_dias_envio ';
					end if;
				-- A data de alta da internação.
				elsif (r_C02_w.ie_tipo_data_envio = 'A') then
					if (dados_regra_p.ie_evento = 'IMP') then
						ds_restricao_w := 'and	(prot.dt_protocolo_imp - conta.dt_alta_imp) >= :qt_dias_envio ';
					else
						ds_restricao_w := 'and	(prot.dt_protocolo - conta.dt_alta) >= :qt_dias_envio ';
					end if;
				-- A data do documento
				elsif (r_C02_w.ie_tipo_data_envio = 'DO') then
					if (dados_regra_p.ie_evento = 'IMP') then
						ds_restricao_w := 'and	(prot.dt_protocolo_imp - conta.dt_documento) >= :qt_dias_envio ';
					else
						ds_restricao_w := 'and	(prot.dt_protocolo - conta.dt_documento) >= :qt_dias_envio ';
					end if;
				end if;
			-- a data de competência do protocolo
			elsif (r_C02_w.ie_data_tipo_envio_rec = 'C') then
				-- Com :
				-- A data de emissão da conta.
				if (r_C02_w.ie_tipo_data_envio = 'EM') then
					if (dados_regra_p.ie_evento = 'IMP') then
						ds_restricao_w := 'and	(prot.dt_mes_competencia - conta.dt_emissao_imp) >= :qt_dias_envio ';
					else
						ds_restricao_w := 'and	(prot.dt_mes_competencia - conta.dt_emissao) >= :qt_dias_envio ';
					end if;
				-- A data de atendimento informada na conta.
				elsif (r_C02_w.ie_tipo_data_envio = 'AT') then
					if (dados_regra_p.ie_evento = 'IMP') then
						ds_restricao_w := 'and	(prot.dt_mes_competencia - conta.dt_atendimento_imp_inf) >= :qt_dias_envio ';
					else
						ds_restricao_w := 'and	(prot.dt_mes_competencia - conta.dt_atendimento_inf) >= :qt_dias_envio ';
					end if;
				-- A data de atendimento referência informada na conta.
				elsif (r_C02_w.ie_tipo_data_envio = 'AR') then
					if (dados_regra_p.ie_evento = 'IMP') then
						ds_restricao_w := 'and	(prot.dt_recebimento - conta.dt_atendimento_imp) >= :qt_dias_envio ';
					else
						ds_restricao_w := 'and	(prot.dt_recebimento - conta.dt_atendimento) >= :qt_dias_envio ';
					end if;
				-- A data de entrada na internação informada para a conta.
				elsif (r_C02_w.ie_tipo_data_envio = 'E') then
					if (dados_regra_p.ie_evento = 'IMP') then
						ds_restricao_w := 'and	(prot.dt_mes_competencia - conta.dt_entrada_imp) >= :qt_dias_envio ';
					else
						ds_restricao_w := 'and	(prot.dt_mes_competencia - conta.dt_entrada) >= :qt_dias_envio ';
					end if;
				-- A data de alta da internação.
				elsif (r_C02_w.ie_tipo_data_envio = 'A') then
					if (dados_regra_p.ie_evento = 'IMP') then
						ds_restricao_w := 'and	(prot.dt_mes_competencia - conta.dt_alta_imp) >= :qt_dias_envio ';
					else
						ds_restricao_w := 'and	(prot.dt_mes_competencia - conta.dt_alta) >= :qt_dias_envio ';
					end if;
				-- A data do documento
				elsif (r_C02_w.ie_tipo_data_envio = 'DO') then
					if (dados_regra_p.ie_evento = 'IMP') then
						ds_restricao_w := 'and	(prot.dt_mes_competencia - conta.dt_documento) >= :qt_dias_envio ';
					else
						ds_restricao_w := 'and	(prot.dt_mes_competencia - conta.dt_documento) >= :qt_dias_envio ';
					end if;
				end if;
			end if;

			ds_sql_w :=	'select	sel.nr_sequencia nr_seq_selecao, 		' || pls_tipos_ocor_pck.enter_w ||
						'	:ie_registro_valido,	 		' || pls_tipos_ocor_pck.enter_w ||
						'	null ds_observacao	 		' || pls_tipos_ocor_pck.enter_w ||
					'from	pls_oc_cta_selecao_ocor_v 	sel,    	' || pls_tipos_ocor_pck.enter_w ||
					'	pls_conta_ocor_v 		conta,  	' || pls_tipos_ocor_pck.enter_w ||
					'	pls_protocolo_conta 		prot    	' || pls_tipos_ocor_pck.enter_w ||
					'where	sel.nr_id_transacao = :nr_id_transacao  	' || pls_tipos_ocor_pck.enter_w ||
					'and	sel.ie_valido = ''S'' 				' || pls_tipos_ocor_pck.enter_w ||
					'and	conta.nr_sequencia = sel.nr_seq_conta 		' || pls_tipos_ocor_pck.enter_w ||
					'and	prot.nr_sequencia = conta.nr_seq_protocolo 	' || pls_tipos_ocor_pck.enter_w ||
					ds_restricao_w;

			-- Abrir um novo cursor
			var_cur_w := dbms_sql.open_cursor;
			begin
				-- Criar o cursor
				dbms_sql.parse(var_cur_w, ds_sql_w, 1);

				dbms_sql.bind_variable(var_cur_w, ':nr_id_transacao', nr_id_transacao_p);
				dbms_sql.bind_variable(var_cur_w, ':ie_registro_valido', ie_registro_valido_w);
				dbms_sql.bind_variable(var_cur_w, ':qt_dias_envio', r_C02_w.qt_dias_envio);

				-- Definir para o DBMS_SQL que o retorno do select será  preenchido em arrays, definindo a quantidade de linhas que o array terá a cada iteração do loop e a posição inicial que estes ocuparão no array.
				dbms_sql.define_array(var_cur_w, 1, nr_seq_selecao_w, qt_cnt_w, 1);
				dbms_sql.define_array(var_cur_w, 2, ie_valido_w, qt_cnt_w, 1);
				dbms_sql.define_array(var_cur_w, 3, ds_observacao_w, qt_cnt_w, 1);

				/* Executar select  dinâmico*/

				var_exec_w := dbms_sql.execute(var_cur_w);
				loop
					-- O fetch rows irá preencher os buffers do Oracle com as linhas que serão passadas para a lista quando o COLUMN_VALUE for chamado.
					var_retorno_w := dbms_sql.fetch_rows(var_cur_w);

					-- Zerar as listas para que o mesmo valor não seja inserido mais de uma vez na tabela.
					nr_seq_selecao_w	:= pls_util_cta_pck.num_table_vazia_w;
					ie_valido_w		:= pls_util_cta_pck.vchr2_table_vazia_w;
					ds_observacao_w		:= pls_util_cta_pck.vchr2_table_vazia_w;

					-- Obter as listas que foram populadas.
					dbms_sql.column_value(var_cur_w, 1, nr_seq_selecao_w);
					dbms_sql.column_value(var_cur_w, 2, ie_valido_w);
					dbms_sql.column_value(var_cur_w, 3, ds_observacao_w);

					CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	nr_seq_selecao_w, pls_util_cta_pck.clob_table_vazia_w,
											'SEQ', ds_observacao_w, ie_valido_w, nm_usuario_p);
				exit when var_retorno_w != qt_cnt_w;
				end loop;
				dbms_sql.close_cursor(var_cur_w);
			exception
			when others then
				if (dbms_sql.is_open(var_cur_w)) then
					-- Fechar os cursores que continuam abertos, os cursores que utilizam FOR - LOOP não necessitam serem fechados, serão fechados automaticamente.
					dbms_sql.close_cursor(var_cur_w);
				end if;

				-- Tratar erro gerado no sql dinâmico, será inserido registro no log e abortado o processo exibindo mensagem de erro.
				CALL pls_tipos_ocor_pck.trata_erro_sql_dinamico(dados_regra_p, ds_sql_w, nr_id_transacao_p, nm_usuario_p);
			end;

			-- seta os registros que serão válidos ou inválidos após o processamento
			CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);
		end if;
	end loop; -- C02
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_21 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

