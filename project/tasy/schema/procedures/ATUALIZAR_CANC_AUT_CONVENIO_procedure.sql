-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_canc_aut_convenio (nr_seq_autorizacao_p tiss_retorno_autorizacao.nr_seq_autorizacao%type, cd_senha_p autorizacao_convenio.cd_senha%type, ds_motivo_geral_glosa_p tiss_retorno_autorizacao.ds_motivo_geral_glosa%type, dt_autorizacao_p autorizacao_convenio.dt_autorizacao%type) AS $body$
DECLARE


nr_seq_autorizacao_w tiss_retorno_autorizacao.nr_seq_autorizacao%type := nr_seq_autorizacao_p;
cd_senha_w autorizacao_convenio.cd_senha%type := cd_senha_p;
ds_motivo_geral_glosa_w tiss_retorno_autorizacao.ds_motivo_geral_glosa%type := ds_motivo_geral_glosa_p;
dt_autorizacao_w autorizacao_convenio.dt_autorizacao%type := dt_autorizacao_p;
nm_usuario_w constant tiss_retorno_autorizacao.nm_usuario%type := 'interfaces';
nm_interface_w constant integration_call_log.nm_interface%type := 'api.insurance.authorization';
nr_seq_int_call_log_w integration_message_log.nr_seq_int_call_log%type := 0;
ds_notes_w integration_call_log.ds_notes%TYPE;
ds_notes_message_w integration_call_log.ds_notes%TYPE := 'Success in the insurance authorization cancellation update process. ';
ds_notes_params_w integration_call_log.ds_notes%TYPE;
ie_status_w integration_call_log.ie_status%type := 'S';
separador_linha_w constant integration_call_log.nm_interface%type :=  CHR(13) || CHR(10);
ie_message_type_w constant integration_call_log.ie_message_type%type := 'R';



BEGIN

    <<INSERT_TISS>>
    BEGIN

        ds_notes_params_w := substr(' nr_seq_autorizacao: '||nr_seq_autorizacao_w||' cd_senha: '||cd_senha_w
                                    ||' ds_motivo_geral_glosa: '||ds_motivo_geral_glosa_w|| ' dt_autorizacao: '
                                    ||to_char(dt_autorizacao_w,'dd/mm/yyyy'),1,499);

        INSERT INTO tiss_retorno_autorizacao(
            dt_atualizacao,
            nm_usuario,
            nr_seq_autorizacao,
            ds_motivo_geral_glosa,
            nr_sequencia,
            dt_evento)
        VALUES (
           clock_timestamp(),
           nm_usuario_w,
           nr_seq_autorizacao_w,
           ds_motivo_geral_glosa_w,
           nextval('tiss_retorno_autorizacao_seq'),
           clock_timestamp());

    END;
    
    <<BLOCO_UPDATE>>
    BEGIN
        
        ds_notes_w := substr(ds_notes_message_w || separador_linha_w || ds_notes_params_w,1,499);

        update autorizacao_convenio
        set    cd_senha = cd_senha_w,
               dt_autorizacao = dt_autorizacao_w,
               dt_atualizacao = clock_timestamp()
        where nr_sequencia = nr_seq_autorizacao_w;

        nr_seq_int_call_log_w := record_integration_call_log(nm_usuario_w, nm_usuario_w, clock_timestamp(), nm_interface_w, nm_interface_w, ie_status_w, ie_message_type_w, null, ds_notes_w, null, null, null, nr_seq_int_call_log_w, null, null, null);

    EXCEPTION
        WHEN no_data_found OR data_exception THEN
            ie_status_w := 'E';
            ds_notes_message_w := substr('Error in the insurance authorization cancellation process. SQL_ERRM = '|| sqlerrm||' ',1,499);
            ds_notes_w := substr(ds_notes_message_w || separador_linha_w || ds_notes_params_w,1,499);

            nr_seq_int_call_log_w := record_integration_call_log(nm_usuario_w, nm_usuario_w, clock_timestamp(), nm_interface_w, nm_interface_w, ie_status_w, ie_message_type_w, null, ds_notes_w, null, null, null, nr_seq_int_call_log_w, null, null, null);

            CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_notes_w);
    END;

    COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_canc_aut_convenio (nr_seq_autorizacao_p tiss_retorno_autorizacao.nr_seq_autorizacao%type, cd_senha_p autorizacao_convenio.cd_senha%type, ds_motivo_geral_glosa_p tiss_retorno_autorizacao.ds_motivo_geral_glosa%type, dt_autorizacao_p autorizacao_convenio.dt_autorizacao%type) FROM PUBLIC;

