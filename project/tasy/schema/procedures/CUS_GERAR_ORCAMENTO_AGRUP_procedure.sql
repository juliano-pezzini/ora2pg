-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cus_gerar_orcamento_agrup ( nr_seq_agrupamento_p bigint, cd_tabela_custo_p bigint, qt_dias_prazo_p bigint, ie_sobrepor_acumular_p text, nr_seq_tabela_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_centro_origem_w		integer;
cd_centro_destino_w		integer;
cd_empresa_origem_w		smallint;
cd_estabelecimento_w		smallint;
cd_estab_origem_w			smallint;
cd_natureza_origem_w		numeric(20);
cd_natureza_destino_w		numeric(20);
ds_erro_w			varchar(2000);
dt_mes_referencia_w		timestamp;
ie_importar_w			varchar(1)	:= 'S';
ie_tipo_gasto_w			varchar(2);
nr_seq_mes_ref_w			bigint;
qt_registro_w			bigint;
vl_movimento_w			double precision;
nr_seq_ng_destino_w		bigint;
nr_seq_ng_origem_w		bigint;

/* Buscar centros origem/destino do agrupamento*/

c01 CURSOR FOR
SELECT	cd_centro_controle,
	cd_centro_origem
from	cus_agrup_centro
where	nr_seq_agrupamento = nr_seq_agrupamento_p;

/* Buscar natureza de gasto origem/destino do agrupamento*/

c02 CURSOR FOR
SELECT	cd_natureza_gasto,
	cd_natureza_origem,
	nr_seq_ng,
	nr_seq_ng_origem
from	cus_agrup_conta
where	nr_seq_agrupamento = nr_seq_agrupamento_p;

/* Movimentos contabeis a serem importados de acordo com os centros e conta de origem*/

c03 CURSOR FOR
SELECT	a.vl_movimento
from	ctb_grupo_conta c,
	conta_contabil b,
	ctb_saldo a
where	a.nr_seq_mes_ref		= nr_seq_mes_ref_w
and	a.cd_conta_contabil	= b.cd_conta_contabil
and	b.cd_grupo 		= c.cd_grupo
and	c.ie_tipo		in ('R','D','C')
and	a.cd_estabelecimento	= cd_estab_origem_w
and	(a.cd_centro_custo IS NOT NULL AND a.cd_centro_custo::text <> '')
and	a.cd_centro_custo 		= cd_centro_origem_w
and	a.cd_conta_contabil 	= cd_natureza_origem_w;


BEGIN
/* Estabelecimento destino e estabelecimento origem do agrupamento */

select	cd_estabelecimento,
	cd_estab_origem
into STRICT	cd_estabelecimento_w,
	cd_estab_origem_w
from	cus_agrup_estab
where	nr_sequencia = nr_seq_agrupamento_p;

/* Empresa do estabelecimento */

select	obter_empresa_estab(cd_estab_origem_w)
into STRICT	cd_empresa_origem_w
;

/* Mês da tabela de custo ORÇAMENTO que será atualizada */

select	max(dt_mes_referencia)
into STRICT	dt_mes_referencia_w
from	tabela_custo
where	nr_sequencia	 = nr_seq_tabela_p;

/* Sequência do mês contabil igual ao mês da tabela de custo */

select	nr_sequencia
into STRICT	nr_seq_mes_ref_w
from	ctb_mes_ref
where	cd_empresa 		= cd_empresa_origem_w
and	trunc(dt_referencia,'mm') 	= dt_mes_referencia_w;

if (coalesce(nr_seq_mes_ref_w,0) = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(266936);
end if;

/* Inicio da importação */

open c01;
loop
fetch c01 into
	cd_centro_destino_w,
	cd_centro_origem_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	open c02;
	loop
	fetch c02 into
		cd_natureza_destino_w,
		cd_natureza_origem_w,
		nr_seq_ng_destino_w,
		nr_seq_ng_origem_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		cd_natureza_origem_w := coalesce(cd_natureza_origem_w, cus_obter_dados_ng(nr_seq_ng_origem_w,'CO'));
		cd_natureza_destino_w := coalesce(cd_natureza_destino_w, cus_obter_dados_ng(nr_seq_ng_destino_w,'C'));


		/* Movimentos */

		open c03;
		loop
		fetch c03 into
			vl_movimento_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin
			ie_importar_w	:= 'S';

			/* Verifica se ja existe lançamento do centro e natureza no orçamento*/

			select	count(*)
			into STRICT	qt_registro_w
			from	orcamento_custo
			where	cd_estabelecimento 	= cd_estabelecimento_w
			and	nr_seq_tabela		= nr_seq_tabela_p
			and	cd_centro_controle	= cd_centro_destino_w
			and	nr_seq_ng		= nr_seq_ng_destino_w;

			/* Sobrepor ou acumular se o registro existe */

			if (qt_registro_w > 0) then
				begin
				if (ie_sobrepor_acumular_p = 'A') then
					update	orcamento_custo
					set	vl_orcado		= vl_orcado + vl_movimento_w,
						dt_atualizacao	= clock_timestamp(),
						nm_usuario	= nm_usuario_p
					where	cd_estabelecimento	= cd_estabelecimento_w
					and	nr_seq_tabela		= nr_seq_tabela_p
					and	cd_centro_controle	= cd_centro_destino_w
					and	nr_seq_ng		= nr_seq_ng_destino_w;
					ie_importar_w	:= 'N';
					/* Gravar LOG importação */

					insert into orcamento_custo_import(
						nr_sequencia,
						cd_estabelecimento,
						cd_tabela_custo,
						cd_centro_controle,
						cd_natureza_gasto,
						ie_tipo_importacao,
						ds_importacao,
						dt_importacao,
						dt_atualizacao,
						nm_usuario,
						vl_orcado,
						nr_seq_ng,
						nr_seq_tabela)
					values (	nextval('orcamento_custo_import_seq'),
						cd_estabelecimento_w,
						cd_tabela_custo_p,
						cd_centro_destino_w,
						cd_natureza_destino_w,
						42, /* Dominio 1794 */
						substr('EstabOrigem: ' || cd_estab_origem_w || ' CCorigem: ' || cd_centro_origem_w|| ' NGorigem: ' || cd_natureza_origem_w,1,255),
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_p,
						vl_movimento_w,
						nr_seq_ng_destino_w,
						nr_seq_tabela_p);

				elsif (ie_sobrepor_acumular_p = 'S') then
					delete	from orcamento_custo
					where	cd_estabelecimento	= cd_estabelecimento_w
					and	nr_seq_tabela		= nr_seq_tabela_p
					and	cd_centro_controle	= cd_centro_destino_w
					and	nr_seq_ng		= nr_seq_ng_destino_w;
					ie_importar_w	:= 'S';
				end if;
				end;
			end if;

			/* Inserir se não existir o registro */

			if (ie_importar_w = 'S') and (qt_registro_W = 0) then

				ie_tipo_gasto_w	:= substr(cus_obter_tipo_gasto_centro(cd_estabelecimento_w, cd_centro_destino_w,
							null, cd_natureza_destino_w, nr_seq_ng_destino_w),1,1);
				if (ie_tipo_gasto_w in ('V','F','R')) then
					begin
					insert into orcamento_custo(
						nr_sequencia,
						cd_estabelecimento,
						cd_tabela_custo,
						cd_centro_controle,
						cd_natureza_gasto,
						dt_atualizacao,
						nm_usuario,
						vl_orcado,
						vl_avista,
						vl_distribuido,
						vl_receb_distrib,
						qt_dias_prazo,
						vl_a_distribuir,
						ie_tipo_gasto,
						nr_seq_ng,
						nr_seq_tabela)
					values (	nextval('orcamento_custo_seq'),
						cd_estabelecimento_w,
						cd_tabela_custo_p,
						cd_centro_destino_w,
						cd_natureza_destino_w,
						clock_timestamp(),
						nm_usuario_p,
						vl_movimento_w,
						0,
						0,
						0,
						qt_dias_prazo_p,
						0,
						ie_tipo_gasto_w,
						nr_seq_ng_destino_w,
						nr_seq_tabela_p);
					exception when others then
						ds_erro_w	:= sqlerrm(SQLSTATE);
						/*'Erro Inclusão ' || chr(10) || 'CC: ' || cd_centro_destino_w || chr(10) ||
						'Conta: ' || cd_natureza_destino_w || chr(10) || ds_erro_w);*/
						CALL wheb_mensagem_pck.exibir_mensagem_abort(193029, 'cd_centro_destino_w=' || cd_centro_destino_w || ';' ||
												'cd_natureza_destino_w=' || cd_natureza_destino_w || ';' ||
												'ds_erro_w=' || ds_erro_w);

					end;
					/* Gravar LOG importação */

					insert into orcamento_custo_import(
						nr_sequencia,
						cd_estabelecimento,
						cd_tabela_custo,
						cd_centro_controle,
						cd_natureza_gasto,
						ie_tipo_importacao,
						ds_importacao,
						dt_importacao,
						dt_atualizacao,
						nm_usuario,
						vl_orcado,
						nr_seq_ng,
						nr_seq_tabela)
					values (	nextval('orcamento_custo_import_seq'),
						cd_estabelecimento_w,
						cd_tabela_custo_p,
						cd_centro_destino_w,
						cd_natureza_destino_w,
						42, /* Dominio 1794 */
						substr('EstabOrigem: ' || cd_estab_origem_w || ' CCorigem: ' || cd_centro_origem_w|| ' NGorigem: ' || cd_natureza_origem_w,1,255),
						clock_timestamp(),
						clock_timestamp(),
						nm_usuario_p,
						vl_movimento_w,
						nr_seq_ng_destino_w,
						nr_seq_tabela_p);
				end if;


			end if;

			end;
		end loop;
		close c03;

		end;
	end loop;
	close c02;

	end;
end loop;
close c01;
commit;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cus_gerar_orcamento_agrup ( nr_seq_agrupamento_p bigint, cd_tabela_custo_p bigint, qt_dias_prazo_p bigint, ie_sobrepor_acumular_p text, nr_seq_tabela_p bigint, nm_usuario_p text) FROM PUBLIC;

