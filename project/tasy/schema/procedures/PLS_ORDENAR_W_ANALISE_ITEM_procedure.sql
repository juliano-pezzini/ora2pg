-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_ordenar_w_analise_item ( nr_seq_analise_p bigint, nm_usuario_p text, nr_id_transacao_p bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Ordenar a visualização da tabela W_PLS_ANALISE_ITEM e gerar os ID's
das linhas (utilizados para referência na análise)
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção: Na tabela há dois campos para ordenação: NR_ORDEM_1 e NR_ORDEM_2.
O NR_ORDEM_1 deve sempre manter a estrutura (títulos, depois filhos dos títulos, participantes
e filhos dos participantes. O NR_ORDEM_2 poderá ser ordenado conforme preferência do usuário
porém manterá a estrutura.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
/* Variáveis dos títulos */

ie_tipo_item_tit_w	varchar(10);
ie_tipo_despesa_tit_w	varchar(10);
nr_sequencia_tit_w	bigint;
nr_ordem_1_tit_w	bigint;

/* Variáveis das contas */

nr_sequencia_conta_w	bigint;
nr_ordem_1_conta_w	bigint;
nr_ordem_2_conta_w	bigint;

/* Variáveis dos informativos */

ie_status_analise_w	varchar(10);
ie_tipo_linha_inf_w	varchar(10);
nr_sequencia_inf_w	bigint;
nr_seq_proc_inf_w	bigint;
nr_ordem_1_inf_w	bigint;
nr_ordem_2_inf_w	bigint;

/* Variáveis dos procedimentos */

ie_tipo_linha_proc_w	varchar(10);
nr_sequencia_proc_w	bigint;
nr_seq_conta_proc_w	bigint;
nr_ordem_1_proc_w	bigint;
nr_ordem_2_proc_w	bigint;

/* Variáveis dos materiais */

nr_sequencia_mat_w	bigint;
nr_ordem_1_mat_w	bigint;
nr_ordem_2_mat_w	bigint;

/* Variáveis dos participantes */

nr_sequencia_partic_w	bigint;
nr_ordem_1_partic_w	bigint	:= 0;
nr_ordem_2_partic_w	bigint	:= 0;

nr_id_w			bigint;
nr_identificador_w	bigint;
ie_param_total_w		varchar(10);

/* Títulos */

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_tipo_item,
		a.ie_tipo_despesa
	from	w_pls_analise_item a
	where	a.nr_seq_analise	= nr_seq_analise_p
	and	a.nr_id_transacao = nr_id_transacao_p
	and	a.ie_tipo_linha		= 'T'
	and	coalesce(a.nr_seq_material::text, '') = ''
	order by
		CASE WHEN a.ie_tipo_item='CO' THEN  1 WHEN a.ie_tipo_item='P' THEN  2  ELSE 3 END ,
		a.ie_tipo_despesa;

/* Contas */

C05 CURSOR FOR
	SELECT	a.nr_sequencia
	from	w_pls_analise_item a
	where	a.nr_seq_analise	= nr_seq_analise_p
	and	a.nr_id_transacao = nr_id_transacao_p
	and	a.ie_tipo_item		= 'CO'
	and	a.ie_tipo_despesa	= 'CON'
	and	a.ie_tipo_linha		<> 'T'
	order by
		a.ie_tipo_guia,
		CASE WHEN coalesce(a.nr_seq_conta::text, '') = '' THEN 0  ELSE a.nr_seq_conta END;

/* Informativos / Sem informativo */

C06 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_conta_proc,
		a.ie_status_analise,
		a.ie_tipo_linha,
		a.nr_identificador
	from	w_pls_analise_item a
	where	a.nr_seq_analise	= nr_seq_analise_p
	and	a.nr_id_transacao = nr_id_transacao_p
	and	a.ie_tipo_linha		in ('A', 'IC') /* Não trazer denovo títulos, só itens da conta */
	and	a.ie_tipo_item		= 'P'
	and	((coalesce(a.nr_seq_proc_pai::text, '') = '') or (a.ie_informativo = 'S'))
	and	a.ie_tipo_despesa	= ie_tipo_despesa_tit_w
	order by
		a.cd_item,
		a.dt_item,
		CASE WHEN a.ie_status_analise='I' THEN  1  ELSE 2 END ,
		a.ds_item,
		a.tx_item desc;

/* Procedimentos fillhos do informativo */

C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_conta_proc,
		a.ie_tipo_linha,
		a.nr_identificador
	from	w_pls_analise_item a
	where	a.nr_seq_analise	= nr_seq_analise_p
	and	a.nr_id_transacao = nr_id_transacao_p
	and	a.ie_tipo_linha		in ('A', 'IC') /* Não trazer denovo títulos, só itens da conta */
	and	a.ie_tipo_item		= 'P'
	and	((a.ie_tipo_despesa	= ie_tipo_despesa_tit_w) or (ie_tipo_despesa_tit_w = '4'))
	and (a.nr_seq_proc_pai	= nr_seq_proc_inf_w or a.nr_seq_conta_proc = nr_seq_proc_inf_w)
	and	((ie_status_analise_w	= 'I') or (ie_tipo_linha_inf_w = 'A'))
	and	a.ie_status_analise	<> 'I'
	order by
		CASE WHEN a.ie_informativo='S' THEN 0  ELSE 2 END ,
		a.ds_item,
		a.tx_item desc,
		a.nr_identificador,
		a.cd_grau_partic_tiss,
		a.dt_item;

/* Materiais
	Esse cursor permite ordenar os materiais priorizando  mateirias com agrupamento(Parâmetro 34), quando definido no parâmetro que o
	agrupamento deve ocorrer. Caso não deva agrupar, então mantém comportamento padrão da exibição.
*/
C00 CURSOR FOR
	SELECT	CASE WHEN  ie_param_total_w='S' THEN count(1)  ELSE 1 END  total,
			cd_item
	from	w_pls_analise_item a
	where	a.nr_seq_analise	= nr_seq_analise_p
	and	a.nr_id_transacao = nr_id_transacao_p
	and	a.ie_tipo_linha		in ('IC', 'T') /* Não trazer denovo títulos, só itens da conta */
	and	a.ie_tipo_item		= 'M'
	and	a.ie_tipo_despesa	= ie_tipo_despesa_tit_w
	and	(a.nr_seq_material IS NOT NULL AND a.nr_seq_material::text <> '')
	group by cd_item
	order by total desc,a.cd_item;

C03 CURSOR( cd_item_pc w_pls_analise_item.cd_item%type)  FOR
	SELECT	a.nr_sequencia,
		a.nr_identificador
	from	w_pls_analise_item a
	where	a.nr_seq_analise	= nr_seq_analise_p
	and	a.nr_id_transacao = nr_id_transacao_p
	and	a.ie_tipo_linha		in ('IC', 'T') /* Não trazer denovo títulos, só itens da conta */
	and	a.ie_tipo_item		= 'M'
	and	a.ie_tipo_despesa	= ie_tipo_despesa_tit_w
	and a.cd_item = cd_item_pc
	and	(a.nr_seq_material IS NOT NULL AND a.nr_seq_material::text <> '')
	order by
		a.cd_item,
		a.ie_tipo_linha desc,
		a.dt_item,
		a.ds_item;
/* Participantes */

C04 CURSOR(nr_seq_conta_proc_c	pls_proc_participante.nr_seq_conta_proc%type)FOR
	SELECT	a.nr_sequencia,
		a.nr_identificador
	from	w_pls_analise_item a
	where	a.nr_seq_analise	= nr_seq_analise_p
	and	a.nr_id_transacao = nr_id_transacao_p
	and	a.ie_tipo_item		= 'R'
	and	a.ie_tipo_linha		= 'IC'
	and	a.nr_seq_proc_pai	= nr_seq_conta_proc_c
	order by
		a.nr_seq_conta_proc,
		coalesce(a.nr_seq_proc_partic,0),
		a.cd_grau_partic_tiss;
BEGIN
nr_ordem_1_tit_w	:= 0;
nr_id_w			:= 0;
nr_identificador_w	:= 0;


ie_param_total_w := coalesce(obter_valor_param_usuario(1365, 34, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento), 'N');

open C01;
loop
fetch C01 into
	nr_sequencia_tit_w,
	ie_tipo_item_tit_w,
	ie_tipo_despesa_tit_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	nr_ordem_1_tit_w	:= nr_ordem_1_tit_w + 100000000;

	update	w_pls_analise_item
	set	nr_ordem_1 	= nr_ordem_1_tit_w
	where	nr_sequencia	= nr_sequencia_tit_w
	and	nm_usuario	= nm_usuario_p
	and	nr_seq_analise	= nr_seq_analise_p
	and	nr_id_transacao = nr_id_transacao_p;

	/* Abrir contas */

	if (ie_tipo_item_tit_w = 'CO') then
		nr_ordem_1_conta_w	:= nr_ordem_1_tit_w;
		nr_ordem_2_conta_w	:= 0;

		for r_c05_w in C05() loop
			begin
			nr_ordem_1_conta_w	:= nr_ordem_1_conta_w + 100;
			nr_ordem_2_conta_w	:= nr_ordem_2_conta_w + 1;

			update	w_pls_analise_item
			set	nr_ordem_1	= nr_ordem_1_conta_w,
				nr_ordem_2	= nr_ordem_2_conta_w
			where	nr_sequencia	= r_c05_w.nr_sequencia
			and	nm_usuario	= nm_usuario_p
			and	nr_seq_analise	= nr_seq_analise_p
			and	nr_id_transacao = nr_id_transacao_p;
			end;
		end loop;
	end if;

	/* Abrir informativos */

	if (ie_tipo_item_tit_w = 'P') then
		nr_ordem_1_inf_w	:= nr_ordem_1_tit_w;
		nr_ordem_2_inf_w	:= 0;

		open C06;
		loop
		fetch C06 into
			nr_sequencia_inf_w,
			nr_seq_proc_inf_w,
			ie_status_analise_w,
			ie_tipo_linha_inf_w,
			nr_identificador_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin
			nr_ordem_1_inf_w	:= nr_ordem_1_inf_w + 1000;
			nr_ordem_2_inf_w	:= nr_ordem_2_inf_w + 1;

			update	w_pls_analise_item
			set	nr_ordem_1	= nr_ordem_1_inf_w,
				nr_ordem_2	= nr_ordem_2_inf_w
			where	nr_sequencia	= nr_sequencia_inf_w
			and	nm_usuario	= nm_usuario_p
			and	nr_seq_analise	= nr_seq_analise_p
			and	nr_id_transacao = nr_id_transacao_p;

			if (ie_status_analise_w <> 'I')  then

				update	w_pls_analise_item
				set	nr_identificador	= nr_identificador
				where	nr_sequencia		= nr_sequencia_inf_w
				and	nm_usuario		= nm_usuario_p
				and	nr_id_transacao = nr_id_transacao_p;
			end if;

			/* Abrir procedimentos  */

			nr_ordem_1_proc_w	:= nr_ordem_1_inf_w;
			nr_ordem_2_proc_w	:= 0;

			open C02;
			loop
			fetch C02 into
				nr_sequencia_proc_w,
				nr_seq_conta_proc_w,
				ie_tipo_linha_proc_w,
				nr_identificador_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				nr_ordem_1_proc_w	:= nr_ordem_1_proc_w + 10;
				nr_ordem_2_proc_w	:= nr_ordem_2_proc_w + 1;

				update	w_pls_analise_item
				set	nr_identificador	= nr_identificador,
					nr_ordem_1		= nr_ordem_1_proc_w,
					nr_ordem_2		= nr_ordem_2_proc_w
				where	nr_sequencia		= nr_sequencia_proc_w
				and	ie_tipo_item		= 'P'
				and	nm_usuario		= nm_usuario_p
				and	nr_id_transacao = nr_id_transacao_p;

				nr_ordem_1_partic_w	:= nr_ordem_1_proc_w + 1;
				nr_ordem_2_partic_w	:= 0;

				for r_c04_w in C04(nr_seq_conta_proc_w) loop
					begin
					nr_ordem_2_partic_w	:= nr_ordem_2_partic_w + 1;

					update	w_pls_analise_item
					set	nr_identificador	= nr_identificador,
						nr_ordem_1		= nr_ordem_1_partic_w,
						nr_ordem_2		= nr_ordem_2_partic_w
					where	nr_sequencia		= r_c04_w.nr_sequencia
					and	nm_usuario		= nm_usuario_p
					and	nr_id_transacao = nr_id_transacao_p;
					end;
				end loop;
				end;
			end loop;
			close C02;
			end;
		end loop;
		close C06;
	end if;

	/* Abrir medicamentos / materiais */

	if (ie_tipo_item_tit_w = 'M') then
		nr_ordem_1_mat_w	:= nr_ordem_1_tit_w;
		nr_ordem_2_mat_w	:= 0;

		for r_c00_w in c00 loop

			for r_c03_w in C03(r_c00_w.cd_item) loop
				begin
				nr_ordem_1_mat_w	:= nr_ordem_1_mat_w + 1000;
				nr_ordem_2_mat_w	:= nr_ordem_2_mat_w + 1;

				update	w_pls_analise_item
				set	nr_identificador	= nr_identificador,
					nr_ordem_1		= nr_ordem_1_mat_w,
					nr_ordem_2		= nr_ordem_2_mat_w
				where	nr_sequencia		= r_c03_w.nr_sequencia
				and	ie_tipo_item		= 'M'
				and	nm_usuario		= nm_usuario_p
				and	nr_id_transacao = nr_id_transacao_p;
				end;
			end loop;
		end loop;

	end if;
	end;
end loop;
close C01;

/* Sem commit */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ordenar_w_analise_item ( nr_seq_analise_p bigint, nm_usuario_p text, nr_id_transacao_p bigint) FROM PUBLIC;

