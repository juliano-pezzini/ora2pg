-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_insere_proc_incentivo ( cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_sequencia_p bigint, nr_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_atendimento_w		bigint;
nr_interno_conta_w		bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
qt_proced_conta_w		integer := 0;
cd_setor_atendimento_w	integer;
dt_entrada_unidade_w	timestamp;
nr_seq_atepacu_w		bigint;
nr_seq_propaci_w		bigint;
cd_estabelecimento_w	smallint;
cd_cgc_w		varchar(14);
ie_doc_executor_w		bigint;
nr_seq_regra_w     	bigint;
cd_setor_param_w		integer := 0;


BEGIN 
 
cd_setor_param_w	:= coalesce((obter_valor_param_usuario(1123,107,obter_perfil_ativo,nm_usuario_p,0))::numeric ,0);
 
begin 
select	a.nr_atendimento, 
	a.nr_interno_conta, 
	b.cd_convenio_parametro, 
	b.cd_categoria_parametro 
into STRICT	nr_atendimento_w, 
	nr_interno_conta_w, 
	cd_convenio_w, 
	cd_categoria_w 
from	sus_aih_unif a, 
	conta_paciente b 
where	a.nr_interno_conta	= b.nr_interno_conta 
and	a.nr_sequencia		= nr_sequencia_p 
and	a.nr_atendimento	= nr_atendimento_p 
and	b.ie_status_acerto	= 1;
exception 
	when others then 
	nr_interno_conta_w	:= null;
	select nr_atendimento, 
        substr(obter_convenio_atendimento(nr_atendimento),1,10), 
        substr(obter_categoria_atendimento(nr_atendimento),1,10) 
    into STRICT  nr_atendimento_w, 
        cd_convenio_w, 
        cd_categoria_w 
    from  sus_aih_unif 
    where  nr_sequencia  = nr_sequencia_p;
end;
 
if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then 
	select	count(*) 
	into STRICT	qt_proced_conta_w 
	from	procedimento_paciente 
	where	nr_interno_conta	= nr_interno_conta_w 
	and	cd_procedimento		= cd_procedimento_p 
	and	ie_origem_proced	= ie_origem_proced_p 
	and	coalesce(cd_motivo_exc_conta::text, '') = '';
else 
    select count(*) 
    into STRICT  qt_proced_conta_w 
    from  conta_paciente b, 
        procedimento_paciente a 
    where  a.nr_atendimento    = nr_atendimento_w 
    and   a.cd_procedimento    = cd_procedimento_p 
    and   a.ie_origem_proced   = ie_origem_proced_p 
    and   a.nr_interno_conta   = b.nr_interno_conta 
    and   b.ie_status_acerto   = 1 
	and	coalesce(sus_obter_apacunif_conta(a.nr_interno_conta)::text, '') = '' 
    and   coalesce(a.cd_motivo_exc_conta::text, '') = '';
end if;
 
begin 
select	a.cd_setor_atendimento, 
	a.dt_entrada_unidade, 
	a.nr_seq_interno 
into STRICT	cd_setor_atendimento_w, 
	dt_entrada_unidade_w, 
	nr_seq_atepacu_w 
from	atend_paciente_unidade a 
where	a.nr_atendimento	= nr_atendimento_w 
and	a.dt_entrada_unidade 	= 
	(SELECT max(x.dt_entrada_unidade) 
		from atend_paciente_unidade x 
		where x.nr_atendimento = a.nr_atendimento);
exception 
	when others then 
	cd_setor_atendimento_w	:= null;
	dt_entrada_unidade_w	:= null;
	nr_seq_atepacu_w	:= null;
end;
 
if (cd_setor_param_w <> 0) then 
	begin 
	 
	select	coalesce(max(a.nr_seq_interno),0) 
	into STRICT	nr_seq_atepacu_w 
	from	atend_paciente_unidade a 
	where	a.nr_atendimento	= nr_atendimento_w	 
	and	a.cd_setor_atendimento	= cd_setor_param_w;
	 
	if (nr_seq_atepacu_w <> 0) then 
		begin 
		 
		begin 
		select	a.cd_setor_atendimento, 
			a.dt_entrada_unidade 
		into STRICT	cd_setor_atendimento_w, 
			dt_entrada_unidade_w 
		from	atend_paciente_unidade a 
		where	a.nr_seq_interno	= nr_seq_atepacu_w;
		exception 
			when others then 
			cd_setor_atendimento_w	:= null;
			dt_entrada_unidade_w	:= null;
		end;
 
		end;
	else 
		--r.aise_application_error(-20011,'Não há passagem do paciente pelo setor '||cd_setor_param_w||'.'||' O procedimento de incentivo não será lançado. Parâmetro[107].'); 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(263521,'cd_setor_param_w='||cd_setor_param_w);
	end if;	
	 
	end;
end if;
 
select	substr(obter_estab_atend(nr_atendimento_w),1,4) 
into STRICT	cd_estabelecimento_w
;
 
if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then 
	select	max(cd_estabelecimento) 
	into STRICT	cd_estabelecimento_w 
	from	conta_paciente 
	where	nr_interno_conta	= nr_interno_conta_w;
end if;
 
select	max(cd_cgc) 
into STRICT	cd_cgc_w 
from	estabelecimento 
where	cd_estabelecimento	= cd_estabelecimento_w;
 
SELECT * FROM sus_atualiza_doc_exec(	cd_procedimento_p, ie_origem_proced_p, null, null, cd_cgc_w, cd_estabelecimento_w, cd_convenio_w, null, '', '', ie_doc_executor_w, nr_seq_regra_w) INTO STRICT ie_doc_executor_w, nr_seq_regra_w;
 
 
if (qt_proced_conta_w   = 0) and (nr_seq_atepacu_w IS NOT NULL AND nr_seq_atepacu_w::text <> '') then 
	 
	select	nextval('procedimento_paciente_seq') 
	into STRICT	nr_seq_propaci_w 
	;	
	 
	begin 
	insert into 	procedimento_paciente( 
		nr_sequencia, nr_atendimento, dt_entrada_unidade, cd_procedimento, 
		dt_procedimento, qt_procedimento, dt_atualizacao, nm_usuario, 
		cd_medico, cd_convenio, cd_categoria, cd_pessoa_fisica, 
		dt_prescricao, ds_observacao, vl_procedimento, 	vl_medico, 
		vl_anestesista, vl_materiais, cd_edicao_amb, cd_tabela_servico, 
		dt_vigencia_preco, cd_procedimento_princ, dt_procedimento_princ, dt_acerto_conta, 
		dt_acerto_convenio, dt_acerto_medico, vl_auxiliares, vl_custo_operacional, 
		tx_medico, tx_anestesia, nr_prescricao, nr_sequencia_prescricao, 
		cd_motivo_exc_conta, ds_compl_motivo_excon, cd_acao, qt_devolvida, 
		cd_motivo_devolucao, nr_cirurgia, nr_doc_convenio, cd_medico_executor, 
		ie_cobra_pf_pj, nr_laudo, dt_conta, cd_setor_atendimento, 
		cd_conta_contabil, cd_procedimento_aih, ie_origem_proced, nr_aih, 
		ie_responsavel_credito, tx_procedimento, cd_equipamento, ie_valor_informado, 
		cd_estabelecimento_custo, cd_tabela_custo, cd_situacao_glosa, nr_lote_contabil, 
		cd_procedimento_convenio, nr_seq_autorizacao, 	ie_tipo_servico_sus, ie_tipo_ato_sus, 
		cd_cgc_prestador, nr_nf_prestador, cd_atividade_prof_bpa, nr_interno_conta, 
		nr_seq_proc_princ, ie_guia_informada, dt_inicio_procedimento, ie_emite_conta, 
		ie_funcao_medico, ie_classif_sus, 	cd_especialidade, nm_usuario_original, 
		nr_seq_proc_pacote, ie_tipo_proc_sus, cd_setor_receita, vl_adic_plant, 
		nr_seq_atepacu, ie_auditoria,ie_doc_executor) 
    values (nr_seq_propaci_w, nr_atendimento_w, dt_entrada_unidade_w, cd_procedimento_p, 
		dt_entrada_unidade_w, 1, clock_timestamp(), nm_usuario_p, 
		null, cd_convenio_w, cd_categoria_w, null, 
		null,null, 0, 0, 
		0, 0,null,null, 
		null, null, null, null, 
		null, null, 0, 0, 
		1, 1, null, null, 
		null, null, null, null, 
		null, null, null, null, 
		null, null, null, cd_setor_atendimento_w, 
		null, null, ie_origem_proced_p, null, 
		null, null, null, 'N', 
		cd_estabelecimento_w, null, null, null,		 
		null, null, null, null, 
		cd_cgc_w, null, null, nr_interno_conta_w, 
		null, null, null, null, 
		null, null, null, null, 
		null, null, cd_setor_atendimento_w, 0, 
		nr_seq_atepacu_w,null,ie_doc_executor_w);		
	exception 
		when others then 
			--r.aise_application_error(-20011,'Erro ao inserir registro na procedimento paciente'); 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(263522);
	end;
 
	CALL atualiza_preco_procedimento(nr_seq_propaci_w,cd_convenio_w,nm_usuario_p);
end if;
 
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_insere_proc_incentivo ( cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_sequencia_p bigint, nr_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

