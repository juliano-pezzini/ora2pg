-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_trib_titulo_contrato ( nr_titulo_p bigint, nm_usuario_p text, ie_baixa_titulo_p text, nr_bordero_p bigint, dt_baixa_bordero_p timestamp, nr_seq_escrit_p bigint, dt_baixa_escrit_p timestamp, dt_baixa_p timestamp, cd_estabelecimento_p bigint, vl_pago_tit_p bigint, vl_ir_p bigint, vl_inss_p bigint, vl_iss_p bigint) AS $body$
DECLARE


cd_estabelecimento_w		integer;
vl_tributo_w			double precision;
vl_titulo_w			double precision;
vl_diferenca_tit_nf_w		double precision;
vl_outros_vencimentos_w		double precision;
cd_tributo_w			bigint;
nr_seq_imposto_w		bigint;
dt_vencimento_w			timestamp;
dt_venc_titulo_w		timestamp;
dt_venc_tributo_w		timestamp;
dt_contabil_w			timestamp;
pr_aliquota_w			double precision;
cd_beneficiario_w		varchar(14);
cd_conta_contabil_w		varchar(20);
ie_tipo_tributacao_w		varchar(255);
cd_cond_pagto_w			bigint;
vl_inss_ww			double precision;
ds_erro_w			varchar(255);
ie_gerar_titulo_w		varchar(01);
cd_cgc_titulo_w			varchar(14);
cd_pf_titulo_w			varchar(10);
qt_venc_w			integer;
ds_venc_w			varchar(2000);
ie_acumulativo_w		varchar(1);
vl_trib_acum_w			double precision;
nr_seq_trans_reg_w		bigint;
nr_seq_trans_baixa_w		bigint;
cd_conta_financ_w		bigint;
ie_vencimento_w			varchar(01);
ie_tipo_tributo_w		varchar(15);
vl_minimo_base_w		double precision;
vl_minimo_tributo_w		double precision;
vl_base_nao_retido_w		double precision;
vl_trib_adic_w			double precision;
vl_base_adic_w			double precision;
vl_tributo_a_reter_w		double precision;
vl_base_a_reter_w		double precision;
vl_soma_trib_nao_retido_w	double precision;
vl_trib_nao_retido_w		double precision;
vl_soma_trib_adic_w		double precision;
vl_soma_base_nao_retido_w	double precision;
vl_soma_base_adic_w		double precision;
vl_inss_w			double precision;
vl_titulo_original_w		double precision;
vl_base_tributo_w		double precision;
vl_teto_base_w			double precision;
vl_trib_anterior_w		double precision;
vl_pago_w			double precision;
vl_total_base_w			double precision;
ie_irpf_w			varchar(3);
ie_apuracao_piso_w		varchar(3);
vl_reducao_w			double precision;
vl_base_calculo_paga_w		double precision;
vl_desc_dependente_w		double precision;
qt_dependente_w			double precision;
cd_darf_w			varchar(20);
dt_tributo_w			timestamp;
cd_variacao_w			varchar(2);
ie_periodicidade_w		varchar(1);
ie_baixa_titulo_w		varchar(10);
cd_cnpj_raiz_w			varchar(50);
ie_cnpj_w			varchar(50);
vl_saldo_titulo_w		double precision;
vl_mercadoria_w			double precision;
vl_base_trib_calculado_w	double precision;
nr_seq_nota_fiscal_w		bigint;
nr_titulo_original_w		bigint;
nr_parcelas_w			bigint;
nr_total_parcelas_w		bigint;
vl_soma_trib_nao_retido_temp_w	double precision;
vl_soma_base_nao_retido_temp_w	double precision;
vl_soma_trib_adic_temp_w	double precision;
vl_soma_base_adic_temp_w	double precision;
vl_trib_anterior_temp_w		double precision;
vl_total_base_temp_w		double precision;
vl_base_retido_outro_w		double precision;
vl_reducao_temp_w		double precision;
vl_desdobrado_w			double precision;
vl_base_pago_adic_base_w	double precision;
vl_adiantamento_w		double precision;
vl_pago_outros_w		double precision;
vl_base_calc_paga_outros_w	double precision;
ie_tipo_titulo_w		varchar(100);
dt_emissao_w			timestamp;
cd_estab_titulo_w		smallint;
dt_inicio_vigencia_w		timestamp;
dt_fim_vigencia_w		timestamp;
cd_tributo_pf_w			varchar(10);
vl_base_tributo_pf_w		double precision;
vl_tributo_pf_w			double precision;
cd_pessoa_fisica_pf_w		varchar(10);
qt_registro_w			integer;
ie_vencimento_pf_w		varchar(01);
ds_emp_retencao_w		varchar(255);
ie_pago_prev_tit_pagar_w	varchar(255);
ie_tipo_data_w			varchar(5);
ie_acumular_trib_liq_w		varchar(1)	:= 'S';
vl_saldo_tit_w			double precision;
nr_ccm_w			bigint	:= null;
cd_tipo_servico_w		varchar(100);
ds_irrelevante_w		varchar(4000);
cd_natureza_operacao_w		bigint;
cd_operacao_nf_w		smallint;
ie_restringe_estab_w		varchar(1);
qt_pago_outros_w		bigint;
ie_trib_atualiza_saldo_w	varchar(3);
nr_seq_classe_w			bigint;
cd_empresa_w			smallint;
dt_venc_inicio_w		timestamp;
dt_venc_fim_w			timestamp;
vl_ir_w				double precision;
vl_inssp_w			double precision;
vl_iss_w			double precision;
nr_seq_trib_cp_w		bigint;
ie_origem_titulo_w		titulo_pagar.ie_origem_titulo%type;
nr_seq_regra_irpf_w		regra_calculo_irpf.nr_sequencia%type;

c01 CURSOR FOR
	SELECT	a.cd_tributo,
		a.ie_gerar_titulo_pagar,
		a.ie_vencimento,
		a.ie_tipo_tributo,
		a.ie_apuracao_piso,
		coalesce(a.ie_baixa_titulo, 'N'),
		a.ie_cnpj,
		coalesce(a.ie_acumular_trib_liq,'S'),
		a.ie_restringe_estab
	from	tributo a
	where	a.ie_conta_pagar	= 'S'
	and	a.ie_situacao		= 'A'
	and (coalesce(nr_ccm_w::text, '') = '' or coalesce(a.ie_ccm,'S') = 'S')
	and (not exists (SELECT	1
			from	titulo_pagar_imposto x
			where	x.nr_titulo	= nr_titulo_p
			and	x.cd_tributo	= a.cd_tributo
			and	x.ie_pago_prev	= 'V') or
		coalesce(a.ie_baixa_titulo, 'N')	= 'S')
	and	((coalesce(a.ie_pf_pj,'A') 	= 'A') or
		 (a.ie_pf_pj = 'PF' AND cd_pf_titulo_w IS NOT NULL AND cd_pf_titulo_w::text <> '') or
		 (a.ie_pf_pj = 'PJ' AND cd_cgc_titulo_w IS NOT NULL AND cd_cgc_titulo_w::text <> ''))
	and	coalesce(a.ie_baixa_titulo, 'N')	= coalesce(ie_baixa_titulo_p, 'N')
	and	ie_tipo_titulo_w		not in ('4','5','27')
	and (coalesce(nr_seq_nota_fiscal_w,0) > 0 or coalesce(a.ie_somente_nf,'N') = 'N')
	and	((coalesce(ie_tipo_tributacao_w, 'X') <> '0') or (coalesce(ie_super_simples, 'S') = 'S'))
	and	coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
	order	by CASE WHEN a.ie_tipo_tributo='INSS' THEN 1  ELSE 2 END;

c02 CURSOR FOR
	SELECT 	b.cd_tributo,
		b.vl_base_calculo,
		b.vl_tributo,
		b.dt_inicio_vigencia,
		b.dt_fim_vigencia,
		b.cd_pessoa_fisica,
		a.ie_vencimento,
		b.ds_emp_retencao,
		b.ie_tipo_data,
		coalesce(b.ie_pago_prev_tit_pagar, 'R')
	from	pessoa_fisica_trib	b,
		tributo			a
	where	b.cd_tributo 	= a.cd_tributo
	and	cd_pessoa_fisica 	= cd_pf_titulo_w
	and	((b.cd_estabelecimento = cd_estabelecimento_p) or (coalesce(b.cd_estabelecimento::text, '') = ''))
	and	CASE WHEN b.ie_tipo_data='E' THEN dt_emissao_w WHEN b.ie_tipo_data='V' THEN dt_venc_titulo_w END  between b.dt_inicio_vigencia and dt_fim_vigencia
	and (coalesce(nr_ccm_w::text, '') = '' or coalesce(a.ie_ccm,'S') = 'S');


BEGIN
vl_adiantamento_w		:= 0;
vl_ir_w				:= vl_ir_p;
vl_inssp_w			:= vl_inss_p;				
vl_iss_w			:= vl_iss_p;

if (coalesce(nr_bordero_p, 0) > 0) and (coalesce(ie_baixa_titulo_p,'N') = 'S') then
	begin
	select	cd_estabelecimento,
		dt_baixa_bordero_p,
		cd_cgc,
		cd_pessoa_fisica,
		vl_bordero,
		obter_cnpj_raiz(cd_cgc)
	into STRICT	cd_estab_titulo_w,
		dt_venc_titulo_w,
		cd_cgc_titulo_w,
		cd_pf_titulo_w,
		vl_base_tributo_w,
		cd_cnpj_raiz_w
	from	titulo_pagar_bordero_v
	where	nr_titulo		= nr_titulo_p
	and	nr_bordero	= nr_bordero_p;
	exception
	when no_data_found then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(175622,'DS_ERRO=' || sqlerrm || ';' ||'NR_TIT=' || nr_titulo_p || ';' || 'NR_BORD=' || nr_bordero_p);
	end;

/* francisco - os80633 - 25/02/2008 */

elsif (coalesce(nr_seq_escrit_p,0) > 0) and (coalesce(ie_baixa_titulo_p,'N') = 'S') then
	select	b.cd_estabelecimento,
		b.dt_remessa_retorno,
		c.cd_cgc,
		c.cd_pessoa_fisica,
		/* se o pagamento for de retorno, os tributos j√° deduziram o saldo na remessa */

		CASE WHEN b.ie_remessa_retorno='I' THEN (obter_dados_tit_pagar(a.nr_titulo,'V'))::numeric   ELSE coalesce(a.vl_escritural,0) END ,
		obter_cnpj_raiz(c.cd_cgc),
		c.nr_seq_classe
	into STRICT	cd_estab_titulo_w,
		dt_venc_titulo_w,
		cd_cgc_titulo_w,
		cd_pf_titulo_w,
		vl_base_tributo_w,
		cd_cnpj_raiz_w,
		nr_seq_classe_w
	from	titulo_pagar c,
		banco_escritural b,
		titulo_pagar_escrit a
	where	a.nr_seq_escrit	= b.nr_sequencia
	and	a.nr_titulo		= c.nr_titulo
	and	a.nr_titulo		= nr_titulo_p
	and	a.nr_seq_escrit	= nr_seq_escrit_p;
else
	select	cd_estabelecimento,
		coalesce(dt_baixa_p,dt_vencimento_atual),
		cd_cgc,
		cd_pessoa_fisica,
		coalesce(vl_pago_tit_p,0),
		obter_cnpj_raiz(cd_cgc),
		dt_emissao,
		dt_contabil,
		vl_saldo_titulo,
		nr_seq_classe
	into STRICT	cd_estab_titulo_w,
		dt_venc_titulo_w,
		cd_cgc_titulo_w,
		cd_pf_titulo_w,
		vl_base_tributo_w,
		cd_cnpj_raiz_w,
		dt_emissao_w,
		dt_contabil_w,
		vl_saldo_tit_w,
		nr_seq_classe_w
	from	titulo_pagar
	where	nr_titulo	= nr_titulo_p;

	/* edgar os 92908 */

	select	coalesce(sum(vl_adiantamento),0)
	into STRICT	vl_adiantamento_w
	from	titulo_pagar_adiant
	where	nr_titulo		= nr_titulo_p;

	vl_base_tributo_w		:= vl_base_tributo_w + vl_adiantamento_w;

	if (vl_base_tributo_w = 0) then
		vl_base_tributo_w	:= vl_saldo_tit_w;
	end if;
end if;

if (cd_pf_titulo_w IS NOT NULL AND cd_pf_titulo_w::text <> '') then
	select	max(nr_ccm)
	into STRICT	nr_ccm_w
	from	pessoa_fisica
	where	cd_pessoa_fisica	= cd_pf_titulo_w;
end if;

select	max(ie_tipo_tributacao)
into STRICT	ie_tipo_tributacao_w
from	pessoa_juridica
where	cd_cgc	= cd_cgc_titulo_w;

open c02;
loop
fetch c02 into
	cd_tributo_pf_w,
	vl_base_tributo_pf_w,
	vl_tributo_pf_w,
	dt_inicio_vigencia_w,
	dt_fim_vigencia_w,
	cd_pessoa_fisica_pf_w,
	ie_vencimento_pf_w,
	ds_emp_retencao_w,
	ie_tipo_data_w,
	ie_pago_prev_tit_pagar_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	select	count(*)
	into STRICT	qt_registro_w
	from	titulo_pagar_imposto	a,
		titulo_pagar		b
	where	a.nr_titulo			= b.nr_titulo
	and	a.cd_tributo			= cd_tributo_pf_w
	and	b.cd_pessoa_fisica		= cd_pessoa_fisica_pf_w
	and	trunc(a.dt_imposto,'month')	= trunc(dt_emissao_w,'month');

	if (qt_registro_w = 0) then
		select	nextval('titulo_pagar_imposto_seq')
		into STRICT	nr_seq_imposto_w
		;
		
		if ( ((ie_tipo_tributo_w = 'IR' or ie_tipo_tributo_w = 'ISRDOM') AND  vl_ir_w > 0 ) or
		     (ie_tipo_tributo_w = 'INSS' AND  vl_inssp_w > 0 ) or
		     (ie_tipo_tributo_w = 'ISS' AND  vl_iss_w > 0 ) ) then
		
			insert into titulo_pagar_imposto(
				nr_sequencia,
				nr_titulo,
				cd_tributo,
				ie_pago_prev,
				dt_atualizacao,
				nm_usuario,
				dt_imposto,
				vl_base_calculo,
				vl_imposto,
				vl_nao_retido,
				ie_vencimento,
				vl_base_nao_retido,
				vl_trib_adic,
				vl_base_adic,
				ds_emp_retencao)
			values (	nr_seq_imposto_w,
				nr_titulo_p,
				cd_tributo_pf_w,
				ie_pago_prev_tit_pagar_w,
				clock_timestamp(),
				nm_usuario_p,
				trunc(CASE WHEN ie_tipo_data_w='E' THEN dt_emissao_w WHEN ie_tipo_data_w='V' THEN dt_venc_titulo_w END ,'dd'),
				vl_base_tributo_pf_w,
				trunc(CASE WHEN ie_tipo_tributo_w='IR' THEN vl_ir_w WHEN ie_tipo_tributo_w='ISRDOM' THEN vl_ir_w WHEN ie_tipo_tributo_w='INSS' THEN vl_inssp_w WHEN ie_tipo_tributo_w='ISS' THEN vl_iss_w END ,2),
				0,
				ie_vencimento_pf_w,
				0,
				0,
				0,
				ds_emp_retencao_w);
		end if;

	end if;
	end;
end loop;
close c02;

cd_estabelecimento_w	:= coalesce(cd_estabelecimento_p,cd_estab_titulo_w);

select	a.vl_saldo_titulo,
	a.nr_seq_nota_fiscal,
	a.vl_titulo,
	a.ie_tipo_titulo,
	b.cd_tipo_servico,
	b.cd_operacao_nf,
	a.nr_seq_classe,
	a.ie_origem_titulo
into STRICT	vl_saldo_titulo_w,
	nr_seq_nota_fiscal_w,
	vl_titulo_w,
	ie_tipo_titulo_w,
	cd_tipo_servico_w,
	cd_operacao_nf_w,
	nr_seq_classe_w,
	ie_origem_titulo_w
FROM titulo_pagar a
LEFT OUTER JOIN nota_fiscal b ON (a.nr_seq_nota_fiscal = b.nr_sequencia)
WHERE a.nr_titulo		= nr_titulo_p;

select	a.cd_empresa
into STRICT	cd_empresa_w
from	estabelecimento a
where	a.cd_estabelecimento	= cd_estabelecimento_w;

vl_trib_acum_w	:= 0;
vl_titulo_original_w	:= vl_base_tributo_w;
dt_tributo_w	:= dt_venc_titulo_w;

delete	from w_titulo_pagar_imposto
where	nr_titulo	= nr_titulo_p;

open c01;
loop
fetch c01 into
	cd_tributo_w,
	ie_gerar_titulo_w,
	ie_vencimento_w,
	ie_tipo_tributo_w,
	ie_apuracao_piso_w,
	ie_baixa_titulo_w,
	ie_cnpj_w,
	ie_acumular_trib_liq_w,
	ie_restringe_estab_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	pr_aliquota_w			:= 0;

	select	max(a.nr_seq_nota_fiscal)
	into STRICT		nr_seq_nota_fiscal_w
	from	titulo_pagar a
	where	a.nr_titulo		= nr_titulo_p;

	if (nr_seq_nota_fiscal_w IS NOT NULL AND nr_seq_nota_fiscal_w::text <> '') then

			select	max(cd_natureza_operacao)
			into STRICT	cd_natureza_operacao_w
			from	nota_fiscal
			where	nr_sequencia	= nr_seq_nota_fiscal_w;

	end if;

	select	count(*)
	into STRICT	qt_pago_outros_w
	from	titulo_pagar_imposto
	where	nr_titulo		= nr_titulo_p
	and	cd_tributo	= cd_tributo_w
	and	ie_pago_prev	= 'P';

	SELECT * FROM obter_dados_trib_tit_pagar(	
		cd_tributo_w, cd_estabelecimento_w, cd_cgc_titulo_w, cd_pf_titulo_w, cd_beneficiario_w, pr_aliquota_w, cd_cond_pagto_w, cd_conta_financ_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_darf_w, dt_tributo_w, cd_variacao_w, ie_periodicidade_w, 'M', cd_natureza_operacao_w, cd_tipo_servico_w, null, null, null, nr_seq_trib_cp_w, cd_operacao_nf_w, qt_pago_outros_w, ds_irrelevante_w, ds_irrelevante_w, vl_base_tributo_w, 'N', nr_seq_classe_w, ie_origem_titulo_w, null, null) INTO STRICT cd_beneficiario_w, pr_aliquota_w, cd_cond_pagto_w, cd_conta_financ_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_darf_w, cd_variacao_w, ie_periodicidade_w, nr_seq_trib_cp_w, ds_irrelevante_w, ds_irrelevante_w;

	vl_base_tributo_w	:= vl_titulo_original_w;

	ie_irpf_w		:= 'N';

	if (coalesce(pr_aliquota_w,0) > 0) then
		-- calcular redu√ß√£o base irpf e saldo menos inss
		if (ie_tipo_tributo_w = 'IR') and (cd_pf_titulo_w IS NOT NULL AND cd_pf_titulo_w::text <> '') then
			select	coalesce(max(ie_trib_atualiza_saldo),'S')
			into STRICT	ie_trib_atualiza_saldo_w
			from	parametros_contas_pagar a
			where	a.cd_estabelecimento = cd_estabelecimento_p;

			select	coalesce(sum(a.vl_imposto),0)
			into STRICT	vl_inss_w
			from	tributo b,
				titulo_pagar_imposto a
			where	a.cd_tributo		= b.cd_tributo
			and	b.ie_tipo_tributo	= 'INSS'
			and	a.nr_titulo		= nr_titulo_p
			and	a.ie_pago_prev		= 'V'
			and (ie_baixa_titulo_w	= 'N' or (coalesce(b.ie_saldo_tit_pagar,'S') = 'N' or ie_trib_atualiza_saldo_w = 'N'));

			select	coalesce(sum(a.vl_imposto),0)
			into STRICT	vl_inss_ww
			from	tributo b,
				w_titulo_pagar_imposto a
			where	a.cd_tributo		= b.cd_tributo
			and	b.ie_tipo_tributo	= 'INSS'
			and	a.nr_titulo		= nr_titulo_p
			and	ie_baixa_titulo_w	<> 'N';

			vl_inss_w	:= vl_inss_w + vl_inss_ww;

			select	coalesce(qt_dependente,0)
			into STRICT	qt_dependente_w
			from	pessoa_fisica
			where	cd_pessoa_fisica	= cd_pf_titulo_w;

			ie_irpf_w		:= 'S';
			vl_base_tributo_w	:= vl_base_tributo_w - vl_inss_w;
		elsif (ie_tipo_tributo_w = 'ISRDOM' and (cd_pf_titulo_w IS NOT NULL AND cd_pf_titulo_w::text <> '')) then
			select	coalesce(qt_dependente,0)
			into STRICT	qt_dependente_w
			from	pessoa_fisica
			where	cd_pessoa_fisica	= cd_pf_titulo_w;

			ie_irpf_w		:= 'S';
		else
			vl_base_tributo_w	:= vl_titulo_original_w;
		end if;

		/* francisco - os 86089 - 13/03/2008 */

		if (ie_vencimento_w = 'R') and (dt_emissao_w IS NOT NULL AND dt_emissao_w::text <> '') then
			dt_vencimento_w		:= dt_emissao_w;
			dt_venc_tributo_w	:= dt_emissao_w;
		elsif (ie_vencimento_w = 'C') then
			dt_vencimento_w		:= coalesce(coalesce(dt_contabil_w,dt_emissao_w),clock_timestamp());
			dt_venc_tributo_w	:= coalesce(coalesce(dt_contabil_w,dt_emissao_w),clock_timestamp());
		else
			dt_vencimento_w		:= coalesce(dt_venc_titulo_w,clock_timestamp());
			dt_venc_tributo_w	:= coalesce(dt_venc_titulo_w,clock_timestamp());
		end if;
		/* fim francisco - os 86089 - 13/03/2008 */

		if (cd_cond_pagto_w IS NOT NULL AND cd_cond_pagto_w::text <> '') then
			SELECT * FROM calcular_vencimento(cd_estabelecimento_w, cd_cond_pagto_w, dt_vencimento_w, qt_venc_w, ds_venc_w) INTO STRICT qt_venc_w, ds_venc_w;

			if (qt_venc_w = 1) then
				dt_vencimento_w	:= to_date(substr(ds_venc_w,1,10),'dd/mm/yyyy');
			end if;
		end if;
		
		dt_venc_inicio_w	:= trunc(dt_venc_tributo_w,'mm');
		dt_venc_fim_w	:= fim_mes(dt_venc_tributo_w);

		select	coalesce(sum(vl_soma_trib_nao_retido),0),
			coalesce(sum(vl_soma_base_nao_retido),0),
			coalesce(sum(vl_soma_trib_adic),0),
			coalesce(sum(vl_soma_base_adic),0),
			coalesce(sum(vl_tributo),0),
			coalesce(sum(vl_total_base),0),
			coalesce(sum(vl_reducao),0)
		into STRICT	vl_soma_trib_nao_retido_w,
			vl_soma_base_nao_retido_w,
			vl_soma_trib_adic_w,
			vl_soma_base_adic_w,
			vl_trib_anterior_w,
			vl_total_base_w,
			vl_reducao_w
		from	valores_tributo_v
		where	coalesce(cd_empresa, cd_empresa_w)	= cd_empresa_w
		and	cd_tributo			= cd_tributo_w
		and	(
			  (
			    (cd_cgc		= cd_cgc_titulo_w) or
			    (cd_cnpj_raiz		= cd_cnpj_raiz_w AND ie_cnpj_w = 'Empresa')
			  )
			  or (cd_pessoa_fisica		= cd_pf_titulo_w)
			)
		and	dt_tributo between dt_venc_inicio_w and dt_venc_fim_w
		and	(
			  (ie_origem_valores 	= 'TP') or (ie_apuracao_piso_w 	= 'S') or
			  (ie_baixa_titulo_w	= 'S' AND ie_baixa_titulo = 'S')
			)
		and	((ie_restringe_estab_w	= 'N') or (cd_estabelecimento	= cd_estabelecimento_w) or (cd_estab_financeiro	= cd_estabelecimento_w))
		and	ie_baixa_titulo		= ie_baixa_titulo_w
		and	(
			  (
			    (ie_apuracao_piso_w = 'N') or (ie_apuracao_piso_w = ie_base_calculo)
			  ) or
			  (ie_baixa_titulo_w	= 'S' AND ie_baixa_titulo = 'S')
			);

		if (ie_baixa_titulo_w = 'S') then
			-- edgar 03/03/2008, os 80633, qdo a baixa for total dever√° adicionar o valor da baixa calculada dever√° adicionar o valor ref √† nf
			if (vl_saldo_titulo_w + vl_adiantamento_w = vl_base_tributo_w) then
				-- edgar 31/03/2008, os 87455, tratar t√≠tulo desdobrado
				select	coalesce(nr_titulo_original, 0),
					coalesce(nr_parcelas,1),
					coalesce(nr_total_parcelas,1)
				into STRICT	nr_titulo_original_w,
					nr_parcelas_w,
					nr_total_parcelas_w
				from	titulo_pagar
				where	nr_titulo	= nr_titulo_p;

				vl_desdobrado_w		:= 0;
				if (nr_titulo_original_w > 0) and (ie_acumular_trib_liq_w = 'N') then	-- edgar 06/05/2009, os 138996, s√≥ somar o valor desdobrado caso esteja parametrizado para n√Éo acumular somente na √∫ltima baixa
					select	coalesce(sum(vl_titulo),0)
					into STRICT	vl_desdobrado_w
					from	titulo_pagar
					where	nr_titulo_original	= nr_titulo_original_w
					and	nr_titulo		<> nr_titulo_p
					and	ie_tipo_titulo		<> '4';	-- imposto
				end if;

				if (coalesce(nr_seq_nota_fiscal_w,0) > 0) and (nr_parcelas_w = nr_total_parcelas_w) and (nr_total_parcelas_w > 1) then /*francisco - 10/06/2009 - so fazer esse trat quando mais de uma parcela */

					/* edgar 31/03/2008, os 87455, s√≥ gerar trib no √∫ltimo desdobramento */

					select	coalesce(sum(vl_titulo),0)
					into STRICT	vl_outros_vencimentos_w
					from	titulo_pagar
					where	nr_seq_nota_fiscal	= nr_seq_nota_fiscal_w
					and	nr_titulo		<> nr_titulo_p
					and	ie_tipo_titulo		<> '4'
					and	ie_situacao		not in ('D','C','T');

					select	a.vl_mercadoria
					into STRICT	vl_mercadoria_w
					from	nota_fiscal a
					where	a.nr_sequencia		= nr_seq_nota_fiscal_w;

					if (ie_acumular_trib_liq_w = 'N') then
						select	coalesce(sum(vl_base_calculo),0)
						into STRICT	vl_base_trib_calculado_w
						from	titulo_pagar_imposto
						where	nr_titulo	= nr_titulo_p
						and	cd_tributo	= cd_tributo_w;

						vl_base_tributo_w		:= vl_mercadoria_w - vl_titulo_w + vl_base_tributo_w - vl_desdobrado_w - vl_outros_vencimentos_w +
									   (vl_titulo_w - vl_saldo_titulo_w) - vl_base_trib_calculado_w;
					else
						vl_base_tributo_w		:= vl_mercadoria_w - vl_titulo_w + vl_base_tributo_w - vl_desdobrado_w - vl_outros_vencimentos_w +
									   (vl_titulo_w - vl_saldo_titulo_w); -- edgar 23/01/2009, os 124531, inclu√≠do este calculo para adicionar o que j√° foi baixado anteriormente
					end if;
				else
					select	coalesce(sum(vl_base_calculo),0)
					into STRICT	vl_base_trib_calculado_w
					from	titulo_pagar_imposto
					where	nr_titulo	= nr_titulo_p
					and	cd_tributo	= cd_tributo_w;

					vl_diferenca_tit_nf_w		:= 0;

					if (coalesce(nr_seq_nota_fiscal_w,0) > 0) and (nr_total_parcelas_w = 1) then
						select	a.vl_mercadoria - vl_titulo_w
						into STRICT	vl_diferenca_tit_nf_w
						from	nota_fiscal a
						where	a.nr_sequencia		= nr_seq_nota_fiscal_w;
					end if;
					
					-- edgar / diether 30/03/2012, os 386764, obter novamente o valor do inss, pois a base do tributo est√° sendo recalculada
					select	coalesce(sum(a.vl_imposto),0)
					into STRICT	vl_inss_w
					from	tributo b,
						titulo_pagar_imposto a
					where	a.cd_tributo		= b.cd_tributo
					and	b.ie_tipo_tributo	= 'INSS'
					and	a.nr_titulo		= nr_titulo_p
					and	a.ie_pago_prev		= 'V'
					and (ie_tipo_tributo_w = 'IR') and (cd_pf_titulo_w IS NOT NULL AND cd_pf_titulo_w::text <> '');

					/* edgar 14/05/2008, os troquei o vl_titulo_original_w pelo vl_titulo_w */

					vl_base_tributo_w		:= vl_diferenca_tit_nf_w + (obter_dados_tit_pagar(nr_titulo_p, 'V'))::numeric  -
									(vl_saldo_titulo_w + vl_adiantamento_w) +
									   vl_base_tributo_w - 	vl_base_trib_calculado_w - vl_inss_w;
				end if;
			end if;

			select	coalesce(sum(a.vl_nao_retido),0) vl_soma_trib_nao_retido,
				coalesce(sum(a.vl_base_nao_retido),0) vl_soma_base_nao_retido,
				coalesce(sum(a.vl_trib_adic),0) vl_soma_trib_adic,
				coalesce(sum(a.vl_base_adic),0) vl_soma_base_adic,
				coalesce(sum(vl_imposto),0),
				coalesce(sum(a.vl_base_calculo),0),
				coalesce(sum(coalesce(a.vl_reducao,0)),0)
			into STRICT	vl_soma_trib_nao_retido_temp_w,
				vl_soma_base_nao_retido_temp_w,
				vl_soma_trib_adic_temp_w,
				vl_soma_base_adic_temp_w,
				vl_trib_anterior_temp_w,
				vl_total_base_temp_w,
				vl_reducao_temp_w
			from	estabelecimento d,
				tributo c,
				titulo_pagar b,
				w_titulo_pagar_imposto a
			where	b.ie_situacao			<> 'C'
			and	coalesce(cd_empresa,coalesce(cd_empresa_w,0)) = coalesce(cd_empresa_w,0)
			and	b.cd_estabelecimento	= d.cd_estabelecimento
			and	a.nr_titulo			= b.nr_titulo
			and	a.cd_tributo		= c.cd_tributo
			and	c.cd_tributo		= cd_tributo_w
			and	(
				  (
				    (b.cd_cgc			= cd_cgc_titulo_w) or
				    ((substr(obter_cnpj_raiz(b.cd_cgc),1,20)		= cd_cnpj_raiz_w) and (ie_cnpj_w = 'Empresa'))
				  )
				  or (b.cd_pessoa_fisica		= cd_pf_titulo_w)
				)
			and (a.nr_seq_escrit = nr_seq_escrit_p or
				trunc(CASE WHEN ie_vencimento_w='V' THEN  b.dt_vencimento_atual WHEN ie_vencimento_w='C' THEN  coalesce(b.dt_contabil, b.dt_emissao) WHEN ie_vencimento_w='B' THEN  dt_venc_titulo_w  ELSE b.dt_emissao END , 'month') 	= trunc(dt_venc_tributo_w, 'month'))
			and (ie_restringe_estab_w		= 'N' or
				b.cd_estabelecimento		= cd_estabelecimento_w or
				b.cd_estab_financeiro		= cd_estabelecimento_w)
			and	c.ie_baixa_titulo		= 'S'
			and	coalesce(a.nr_seq_baixa::text, '') = ''
			and (coalesce(nr_seq_escrit_p::text, '') = '' or (a.nr_seq_escrit IS NOT NULL AND a.nr_seq_escrit::text <> ''))
			and (coalesce(nr_bordero_p::text, '') = '' or a.nr_bordero = nr_bordero_p)
			and (a.nr_titulo <> nr_titulo_p or vl_pago_tit_p <> 0);

			vl_soma_trib_nao_retido_w	:= vl_soma_trib_nao_retido_w + vl_soma_trib_nao_retido_temp_w;
			vl_soma_base_nao_retido_w	:= vl_soma_base_nao_retido_w + vl_soma_base_nao_retido_temp_w;
			vl_soma_trib_adic_w	:= vl_soma_trib_adic_w + vl_soma_trib_adic_temp_w;
			vl_soma_base_adic_w	:= vl_soma_base_adic_w + vl_soma_base_adic_temp_w;
			vl_trib_anterior_w		:= vl_trib_anterior_w + vl_trib_anterior_temp_w;
			vl_total_base_w		:= vl_total_base_w + vl_total_base_temp_w;
			vl_reducao_w		:= vl_reducao_w + vl_reducao_temp_w;
		end if;

		select	coalesce(sum(b.vl_imposto),0),
			coalesce(sum(b.vl_base_calculo),0)
		into STRICT	vl_pago_outros_w,
			vl_base_calc_paga_outros_w
		from	titulo_pagar_imposto b,
			titulo_pagar a
		where	a.nr_titulo			= b.nr_titulo
		and	a.nr_titulo			<> nr_titulo_p
		and	((a.cd_cgc		= cd_cgc_titulo_w) or (a.cd_pessoa_fisica 	= cd_pf_titulo_w))
		and	b.cd_tributo		= cd_tributo_w
		and	trunc(b.dt_imposto, 'month')	= trunc(dt_venc_tributo_w, 'month')
		and	b.ie_pago_prev		= 'P'
		and	a.ie_situacao		in ('A','L');

		select	coalesce(sum(vl_imposto),0) + vl_pago_outros_w,
			coalesce(sum(vl_base_calculo),0) + vl_base_calc_paga_outros_w
		into STRICT	vl_pago_w,
			vl_base_calculo_paga_w
		from	titulo_pagar_imposto
		where	nr_titulo	= nr_titulo_p
		and	cd_tributo	= cd_tributo_w
		and	ie_pago_prev	= 'P';

		select	coalesce(sum(vl_base_calculo),0)
		into STRICT	vl_base_pago_adic_base_w
		from	titulo_pagar_imposto
		where	nr_titulo	= nr_titulo_p
		and	cd_tributo	= cd_tributo_w
		and	ie_pago_prev	= 'S';

		select	coalesce(sum(vl_base_calculo),0)
		into STRICT	vl_base_retido_outro_w
		from	titulo_pagar_imposto
		where	nr_titulo		= nr_titulo_p
		and	cd_tributo		= cd_tributo_w
		and	ie_pago_prev	= 'R';

		SELECT * FROM obter_valores_tributo(	ie_acumulativo_w, pr_aliquota_w, vl_minimo_base_w, vl_minimo_tributo_w, vl_soma_trib_nao_retido_w, vl_soma_trib_adic_w, vl_soma_base_nao_retido_w, vl_soma_base_adic_w, vl_base_tributo_w, vl_tributo_w, vl_trib_nao_retido_w, vl_trib_adic_w, vl_base_nao_retido_w, vl_base_adic_w, vl_teto_base_w, vl_trib_anterior_w, ie_irpf_w, vl_total_base_w, vl_reducao_w, vl_desc_dependente_w, qt_dependente_w, vl_base_calculo_paga_w, vl_base_pago_adic_base_w, vl_base_retido_outro_w, obter_outras_reducoes_irpf(cd_pf_titulo_w, cd_estabelecimento_w, dt_venc_tributo_w), clock_timestamp(), nr_seq_regra_irpf_w) INTO STRICT pr_aliquota_w, vl_base_tributo_w, vl_tributo_w, vl_trib_nao_retido_w, vl_trib_adic_w, vl_base_nao_retido_w, vl_base_adic_w, vl_reducao_w, vl_desc_dependente_w, nr_seq_regra_irpf_w;				

		if (vl_pago_w < vl_tributo_w) then
			vl_tributo_w	:= vl_tributo_w - vl_pago_w;
		elsif (vl_pago_w > vl_tributo_w) then
			goto proximo;
		end if;

		-- edgar 02/02/2010, os 192586, n√£o gerar tributo n√£o retido negativo
		if (vl_trib_nao_retido_w < 0) then
			vl_trib_nao_retido_w	:= 0;
		end if;
		
		if ( ((ie_tipo_tributo_w = 'IR' or ie_tipo_tributo_w = 'ISRDOM') AND  vl_ir_w > 0 ) or
		     (ie_tipo_tributo_w = 'INSS' AND  vl_inssp_w > 0 ) or
		     (ie_tipo_tributo_w = 'ISS' AND  vl_iss_w > 0 ) ) then

			if (ie_baixa_titulo_w = 'N') then
				select	nextval('titulo_pagar_imposto_seq')
				into STRICT	nr_seq_imposto_w
				;

				insert into titulo_pagar_imposto(
					nr_sequencia,
					nr_titulo,
					cd_tributo,
					ie_pago_prev,
					dt_atualizacao,
					nm_usuario,
					dt_imposto,
					vl_base_calculo,
					vl_imposto,
					ds_emp_retencao,
					pr_imposto,
					cd_beneficiario,
					cd_conta_financ,
					nr_seq_trans_reg,
					nr_seq_trans_baixa,
					vl_nao_retido,
					ie_vencimento,
					vl_base_nao_retido,
					vl_trib_adic,
					vl_base_adic,
					vl_reducao,
					vl_desc_base,
					cd_darf,/* rafael. 15/01/07. os48099 */
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_variacao,
					ie_periodicidade,
					nr_seq_trib_cp)
					values (nr_seq_imposto_w,
					nr_titulo_p,
					cd_tributo_w,
					'V',
					clock_timestamp(),
					nm_usuario_p,
					obter_proximo_dia_util(cd_estabelecimento_w, dt_vencimento_w),
					vl_base_tributo_w,
					trunc(CASE WHEN ie_tipo_tributo_w='IR' THEN vl_ir_w WHEN ie_tipo_tributo_w='ISRDOM' THEN vl_ir_w WHEN ie_tipo_tributo_w='INSS' THEN vl_inssp_w WHEN ie_tipo_tributo_w='ISS' THEN vl_iss_w END ,2),
					null,
					pr_aliquota_w,
					cd_beneficiario_w,
					cd_conta_financ_w,
					nr_seq_trans_reg_w,
					nr_seq_trans_baixa_w,
					vl_trib_nao_retido_w,
					ie_vencimento_w,
					vl_base_nao_retido_w,
					vl_trib_adic_w,
					vl_base_adic_w,
					vl_reducao_w,
					vl_desc_dependente_w,
					cd_darf_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_variacao_w,
					ie_periodicidade_w,
					nr_seq_trib_cp_w);

				if (ie_gerar_titulo_w = 'S') then
					CALL gerar_titulo_tributo(nr_seq_imposto_w, nm_usuario_p);
				end if;

				vl_trib_acum_w	:= vl_trib_acum_w + trunc(vl_tributo_w, 2);
			else
				insert into w_titulo_pagar_imposto(nr_sequencia,
					nr_titulo,
					nr_seq_baixa,
					cd_tributo,
					dt_atualizacao,
					nm_usuario,
					dt_imposto,
					vl_base_calculo,
					vl_imposto,
					pr_imposto,
					cd_beneficiario,
					cd_conta_financ,
					nr_seq_trans_reg,
					nr_seq_trans_baixa,
					vl_nao_retido,
					ie_vencimento,
					vl_base_nao_retido,
					vl_trib_adic,
					vl_base_adic,
					vl_reducao,
					vl_desc_base,
					cd_darf,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_variacao,
					ie_periodicidade,
					nr_bordero,
					nr_seq_escrit)
				values (	nextval('w_titulo_pagar_imposto_seq'),
					nr_titulo_p,
					null,
					cd_tributo_w,
					clock_timestamp(),
					nm_usuario_p,
					obter_proximo_dia_util(cd_estabelecimento_w, dt_vencimento_w),
					vl_base_tributo_w,
					trunc(CASE WHEN ie_tipo_tributo_w='IR' THEN vl_ir_w WHEN ie_tipo_tributo_w='ISRDOM' THEN vl_ir_w WHEN ie_tipo_tributo_w='INSS' THEN vl_inssp_w WHEN ie_tipo_tributo_w='ISS' THEN vl_iss_w END ,2),
					pr_aliquota_w,
					cd_beneficiario_w,
					cd_conta_financ_w,
					nr_seq_trans_reg_w,
					nr_seq_trans_baixa_w,
					vl_trib_nao_retido_w,
					ie_vencimento_w,
					vl_base_nao_retido_w,
					vl_trib_adic_w,
					vl_base_adic_w,
					vl_reducao_w,
					vl_desc_dependente_w,
					cd_darf_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_variacao_w,
					ie_periodicidade_w,
					nr_bordero_p,
					nr_seq_escrit_p);
			end if;
		end if;

	end if;
	<<proximo>>
	null;
end loop;
close c01;

CALL atualizar_tit_pagar_classif(nr_titulo_p, 'N', nm_usuario_p);

CALL atualizar_saldo_tit_pagar(nr_titulo_p, nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_trib_titulo_contrato ( nr_titulo_p bigint, nm_usuario_p text, ie_baixa_titulo_p text, nr_bordero_p bigint, dt_baixa_bordero_p timestamp, nr_seq_escrit_p bigint, dt_baixa_escrit_p timestamp, dt_baixa_p timestamp, cd_estabelecimento_p bigint, vl_pago_tit_p bigint, vl_ir_p bigint, vl_inss_p bigint, vl_iss_p bigint) FROM PUBLIC;

