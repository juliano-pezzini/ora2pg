-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_mat_atend_pac ( nr_atendimento_p bigint, cd_material_p bigint, cd_unidade_medida_p text, cd_setor_atendimento_p bigint, dt_atendimento_p timestamp, qt_material_p bigint, nr_seq_atepacu_p bigint, dt_entrada_unidade_p timestamp, nr_sequencia_prescricao_p bigint, nr_cirurgia_p bigint, nr_prescricao_p bigint, nr_doc_interno_p bigint, nm_usuario_p text, cd_material_exec_p bigint, dt_conta_p timestamp , cd_cgc_fornecedor_p text, nr_serie_material_p text, nr_seq_cor_exec_p bigint, cd_material_prescricao_p bigint, ie_via_aplicacao_p text, cd_local_estoque_p bigint, qt_executada_p bigint, dt_prescricao_p timestamp, nr_seq_lote_fornec_p bigint, nr_seq_tipo_baixa_p bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


nr_sequencia_w		bigint;
cd_convenio_w		material_atend_paciente.cd_convenio%type;
cd_categoria_w		material_atend_paciente.cd_categoria%type;
nr_doc_convenio_w	material_atend_paciente.nr_doc_convenio%type;
ie_tipo_guia_w		material_atend_paciente.ie_tipo_guia%type;
cd_senha_w		material_atend_paciente.cd_senha%type;
ie_tipo_lancamento_mat_w	varchar(10);

ie_consiste_regra_uso_w	varchar(10);
ie_acao_excesso_w	varchar(1);
qt_excedida_w		double precision;
qt_material_w		double precision;
nr_seq_regra_w		bigint;
ds_mensagem_w		varchar(255);
cd_plano_w		varchar(20);
cd_convenio_uso_w	convenio.cd_convenio%type;
cd_categoria_uso_w	categoria_convenio.cd_categoria%type;
ie_valor_informado_w	varchar(1) := 'N';
ds_compl_motivo_excon_w	varchar(100);
nr_seq_mat_w		bigint;
cd_motivo_exc_conta_w	smallint;
nr_interno_conta_ww	bigint;
ie_baixou_glosa_p 		varchar(1) := 'N';


BEGIN

qt_material_w := qt_material_p;

ie_tipo_lancamento_mat_w := obter_param_usuario(36, 157, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_tipo_lancamento_mat_w);
ie_consiste_regra_uso_w := obter_param_usuario(36, 148, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_consiste_regra_uso_w);

select	nextval('material_atend_paciente_seq')
into STRICT	nr_sequencia_w
;

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') and (dt_entrada_unidade_p IS NOT NULL AND dt_entrada_unidade_p::text <> '') and (dt_atendimento_p IS NOT NULL AND dt_atendimento_p::text <> '') and (cd_unidade_medida_p IS NOT NULL AND cd_unidade_medida_p::text <> '') and (qt_material_w IS NOT NULL AND qt_material_w::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') and (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') and (nr_seq_atepacu_p IS NOT NULL AND nr_seq_atepacu_p::text <> '') and (cd_material_p IS NOT NULL AND cd_material_p::text <> '') then
	begin

	SELECT * FROM obter_regra_uso_mat(nr_atendimento_p, cd_material_p, qt_material_w, cd_setor_atendimento_p, ie_acao_excesso_w, qt_excedida_w, nr_seq_regra_w, ds_mensagem_w, cd_categoria_w, cd_plano_w, cd_cgc_fornecedor_p, null, dt_atendimento_p, null) INTO STRICT ie_acao_excesso_w, qt_excedida_w, nr_seq_regra_w, ds_mensagem_w;
  
	if (ie_consiste_regra_uso_w = 'S' and ((ie_acao_excesso_w IS NOT NULL AND ie_acao_excesso_w::text <> '') or ie_acao_excesso_w <> '')) then  
		if (ie_acao_excesso_w = 'P') then
			if (qt_excedida_w >= qt_material_w) then
				SELECT * FROM obter_convenio_particular_pf(wheb_usuario_pck.get_cd_estabelecimento, cd_convenio_w, '', dt_atendimento_p, cd_convenio_uso_w, cd_categoria_uso_w) INTO STRICT cd_convenio_uso_w, cd_categoria_uso_w;
				cd_convenio_w := cd_convenio_uso_w;
				cd_categoria_w := cd_categoria_uso_w;
			else
				qt_material_w := (qt_material_w - qt_excedida_w);
				SELECT * FROM obter_convenio_particular_pf(wheb_usuario_pck.get_cd_estabelecimento, cd_convenio_w, '', dt_atendimento_p, cd_convenio_uso_w, cd_categoria_uso_w) INTO STRICT cd_convenio_uso_w, cd_categoria_uso_w;
				nr_seq_mat_w := inserir_material_atend_pac(nr_atendimento_p, null, cd_material_p, dt_atendimento_p, cd_convenio_uso_w, cd_categoria_uso_w, nr_seq_atepacu_p, nm_usuario_p, qt_excedida_w, cd_local_estoque_p, 1, null, nr_seq_mat_w, null, null);
				CALL atualiza_preco_material(nr_seq_mat_w, nm_usuario_p);
			end if;
			ie_baixou_glosa_p := 'S';
		elsif (ie_acao_excesso_w = 'Z') then
			if (qt_excedida_w >= qt_material_w) then
				ie_valor_informado_w := 'S';
			else
				SELECT * FROM obter_convenio_particular_pf(wheb_usuario_pck.get_cd_estabelecimento, cd_convenio_w, '', dt_atendimento_p, cd_convenio_uso_w, cd_categoria_uso_w) INTO STRICT cd_convenio_uso_w, cd_categoria_uso_w;
				nr_seq_mat_w := inserir_material_atend_pac(nr_atendimento_p, null, cd_material_p, dt_atendimento_p, cd_convenio_w, cd_categoria_w, nr_seq_atepacu_p, nm_usuario_p, qt_excedida_w, cd_local_estoque_p, 1, 'S', nr_seq_mat_w, null, null);
				CALL atualiza_preco_material(nr_seq_mat_w, nm_usuario_p);

			end if;
		elsif (ie_acao_excesso_w = 'M') then			
			CALL grava_log_ap_lote_hist(null, WHEB_MENSAGEM_PCK.get_texto(1063768) , ds_mensagem_w, nm_usuario_p);
		elsif (ie_acao_excesso_w = 'J') then			
			CALL grava_log_ap_lote_hist(null, WHEB_MENSAGEM_PCK.get_texto(1063768), ds_mensagem_w, nm_usuario_p);
		elsif (ie_acao_excesso_w = 'E') then
			if (qt_excedida_w > 0) then
				qt_material_w := (qt_material_w - qt_excedida_w);
				select	max(cd_motivo_exc_conta)
				into STRICT	cd_motivo_exc_conta_w
				from	parametro_faturamento
				where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;
				if (qt_material_w = 0) then
					qt_material_w := qt_excedida_w;					
					ds_compl_motivo_excon_w := WHEB_MENSAGEM_PCK.get_texto(297914);
				else
					nr_seq_mat_w := inserir_material_atend_pac(nr_atendimento_p, null, cd_material_p, dt_atendimento_p, cd_convenio_w, cd_categoria_w, nr_seq_atepacu_p, nm_usuario_p, qt_excedida_w, cd_local_estoque_p, 1, 'S', nr_seq_mat_w, null, null);
					CALL atualiza_preco_material(nr_seq_mat_w, nm_usuario_p);
					select	max(nr_interno_conta)
					into STRICT	nr_interno_conta_ww
					from	material_atend_paciente
					where	nr_sequencia = nr_seq_mat_w;					
					CALL excluir_matproc_conta(nr_seq_mat_w, nr_interno_conta_ww, cd_motivo_exc_conta_w, WHEB_MENSAGEM_PCK.get_texto(297914), 'M', nm_usuario_p);
				end if;

			end if;
		elsif (ie_acao_excesso_w = 'I') then
			CALL grava_log_ap_lote_hist(null, WHEB_MENSAGEM_PCK.get_texto(1063769), WHEB_MENSAGEM_PCK.get_texto(1063769) || ds_mensagem_w, nm_usuario_p);
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(WHEB_MENSAGEM_PCK.get_texto(1063769));
		end if;
	else
		SELECT * FROM obter_convenio_execucao(nr_atendimento_p, dt_atendimento_p, cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w) INTO STRICT cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w;
	end if;

	insert 	into material_atend_paciente(
			nm_usuario,
			dt_atualizacao,
			cd_acao,
			nr_sequencia,
			nr_atendimento,
			cd_material,
			cd_unidade_medida,
			cd_setor_atendimento,
			dt_atendimento,
			nr_seq_atepacu,
			qt_material,
			dt_entrada_unidade,
			nr_sequencia_prescricao,
			nr_cirurgia,
			nr_prescricao,
			nr_doc_interno,
			cd_material_exec,
			dt_conta,
			cd_cgc_fornecedor,
			nr_serie_material,
			nr_seq_cor_exec,
			cd_material_prescricao,
			ie_via_aplicacao,
			cd_local_estoque,
			qt_executada,
			dt_prescricao,
			nr_seq_lote_fornec,
			cd_convenio,
			cd_categoria,
			nr_doc_convenio,
			ie_tipo_guia,
			cd_senha,
			vl_unitario,
			qt_ajuste_conta,
			ie_valor_informado,
			ie_guia_informada,
			ie_auditoria,
			nm_usuario_original,
			cd_situacao_glosa,
			nr_seq_tipo_baixa)
		values (nm_usuario_p,
			clock_timestamp(),
			'1',
			nr_sequencia_w,
			nr_atendimento_p,
			cd_material_p,
			cd_unidade_medida_p,
			cd_setor_atendimento_p,
			dt_atendimento_p,
			nr_seq_atepacu_p,
			qt_material_w,
			dt_entrada_unidade_p,
			nr_sequencia_prescricao_p,
			CASE WHEN coalesce(nr_cirurgia_p,0)=0 THEN null  ELSE nr_cirurgia_p END ,
			nr_prescricao_p,
			nr_doc_interno_p,
			cd_material_exec_p,
			dt_conta_p,
			cd_cgc_fornecedor_p,
			nr_serie_material_p,
			nr_seq_cor_exec_p,
			cd_material_prescricao_p,
			ie_via_aplicacao_p,
			cd_local_estoque_p,
			qt_executada_p,
			dt_prescricao_p,
			nr_seq_lote_fornec_p,
			cd_convenio_w,
			cd_categoria_w,
			nr_doc_convenio_w,
			ie_tipo_guia_w,
			cd_senha_w,
			0,
			0,
			'N',
			'N',
			'N',
			nm_usuario_p,
			0,
			nr_seq_tipo_baixa_p);

		nr_sequencia_p	:= nr_sequencia_w;

		CALL atualiza_preco_material(nr_sequencia_w, nm_usuario_p);

		if (ie_tipo_lancamento_mat_w = '0') then
			CALL gerar_lanc_automatico_mat(nr_atendimento_p,	cd_local_estoque_p,	132, nm_usuario_p, nr_sequencia_w, null, null);
		end if;
	commit;
	end;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_mat_atend_pac ( nr_atendimento_p bigint, cd_material_p bigint, cd_unidade_medida_p text, cd_setor_atendimento_p bigint, dt_atendimento_p timestamp, qt_material_p bigint, nr_seq_atepacu_p bigint, dt_entrada_unidade_p timestamp, nr_sequencia_prescricao_p bigint, nr_cirurgia_p bigint, nr_prescricao_p bigint, nr_doc_interno_p bigint, nm_usuario_p text, cd_material_exec_p bigint, dt_conta_p timestamp , cd_cgc_fornecedor_p text, nr_serie_material_p text, nr_seq_cor_exec_p bigint, cd_material_prescricao_p bigint, ie_via_aplicacao_p text, cd_local_estoque_p bigint, qt_executada_p bigint, dt_prescricao_p timestamp, nr_seq_lote_fornec_p bigint, nr_seq_tipo_baixa_p bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

