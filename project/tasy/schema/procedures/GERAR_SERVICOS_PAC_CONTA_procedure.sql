-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_servicos_pac_conta ( nr_atendimento_p bigint, nm_usuario_p text, nr_seq_servico_p bigint) AS $body$
DECLARE

 
cd_estabelecimento_w	smallint;
dt_entrada_w		timestamp;
ie_tipo_convenio_w	smallint;
ie_tipo_atendimento_w	smallint;					
nr_seq_classificacao_w	bigint;
ie_clinica_w		integer;
nr_seq_atepacu_atual_w	bigint;
ie_classificacao_w	varchar(1);

dt_entrada_unidade_w	timestamp;
cd_setor_atendimento_w	bigint;

cd_convenio_w		integer;
cd_categoria_w		varchar(10);
nr_doc_convenio_w	varchar(30);
ie_tipo_guia_w		varchar(30);
cd_senha_w		varchar(30);
cd_plano_w		varchar(10);
cd_tipo_acomodacao_w	smallint;

cd_cgc_prestador_w	varchar(14);

nr_seq_servico_w	bigint;
nr_seq_proc_interno_w	bigint;

cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;

ie_medico_executor_w	varchar(2);
cd_medico_executor_w	varchar(10);
cd_pessoa_fisica_w	varchar(10);
cd_profissional_w	varchar(10);
ie_funcao_medico_w	varchar(10)	:= 0;
cd_especialidade_medica_w	integer		:= 0;

dt_parametro_w		timestamp;

ie_via_acesso_w		varchar(1);
nr_seq_w		bigint;

C01 CURSOR FOR 
	SELECT	a.nr_seq_interno 
	from 	setor_atendimento c, 
		atend_paciente_unidade a 
	where	a.nr_atendimento 		= nr_atendimento_p 
	and	c.cd_setor_atendimento		= a.cd_setor_atendimento 
	and 	a.dt_entrada_unidade 		<= clock_timestamp() 
	and 	c.cd_classif_setor in (1,3,4,8) 
	order by coalesce(a.dt_saida_unidade, a.dt_entrada_unidade + 9999) desc;
	
 

BEGIN 
 
select 	a.dt_entrada, 
	a.cd_estabelecimento, 
	coalesce(a.ie_tipo_convenio,0), 
	a.ie_tipo_atendimento, 
	a.nr_seq_classificacao, 
	a.ie_clinica 
into STRICT	dt_entrada_w, 
	cd_estabelecimento_w, 
	ie_tipo_convenio_w, 
	ie_tipo_atendimento_w, 
	nr_seq_classificacao_w, 
	ie_clinica_w 
from 	atendimento_paciente a 
where	a.nr_atendimento = nr_atendimento_p;
 
nr_seq_atepacu_atual_w	:= 0;
dt_parametro_w := clock_timestamp();
 
open C01;
loop 
fetch C01 into	 
	nr_seq_atepacu_atual_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	nr_seq_atepacu_atual_w := nr_seq_atepacu_atual_w;
	end;
end loop;
close C01;
 
select 	max(cd_setor_atendimento), 
	max(dt_entrada_unidade) 
into STRICT	cd_setor_atendimento_w, 
	dt_entrada_unidade_w 
from 	atend_paciente_unidade 
where	nr_seq_interno = nr_seq_atepacu_atual_w;
 
SELECT * FROM obter_convenio_execucao(nr_atendimento_p, dt_entrada_unidade_w, cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w) INTO STRICT cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w;
 
select	max(cd_tipo_acomodacao), 
	substr(max(cd_plano_convenio),1,10) 
into STRICT	cd_tipo_acomodacao_w, 
	cd_plano_w 
from	atend_categoria_convenio 
where	nr_atendimento = nr_atendimento_p;
 
select	max(nr_seq_proc_interno) 
into STRICT	nr_seq_proc_interno_w 
from	regra_servicos_paciente 
where	nr_sequencia = nr_seq_servico_p;
 
if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then 
	SELECT * FROM Obter_Proc_Tab_Interno_conv(nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), cd_tipo_acomodacao_w, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
end if;
 
SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, null, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_prestador_w, cd_medico_executor_w, cd_profissional_w, cd_pessoa_fisica_w, trunc(dt_parametro_w,'hh'), nr_seq_classificacao_w, 'N', null, null) INTO STRICT ie_medico_executor_w, cd_cgc_prestador_w, cd_medico_executor_w, cd_profissional_w;
 
 
if (coalesce(ie_medico_executor_w,'Z') <> 'F') then 
	cd_medico_executor_w:= '';
end if;
 
SELECT * FROM obter_proced_espec_medica(cd_estabelecimento_w, cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, null, null, null, ie_clinica_w, cd_setor_atendimento_w, cd_especialidade_medica_w, ie_funcao_medico_w, cd_medico_executor_w, nr_seq_proc_interno_w, ie_tipo_atendimento_w) INTO STRICT cd_especialidade_medica_w, ie_funcao_medico_w;
			 
 
if (coalesce(cd_cgc_prestador_w::text, '') = '') then 
	select	max(a.cd_cgc) 
	into STRICT	cd_cgc_prestador_w 
	from 	estabelecimento a, 
		atendimento_paciente b 
	where	a.cd_estabelecimento 	= b.cd_estabelecimento 
	and	b.nr_atendimento 	= nr_atendimento_p;
end if;
 
select 	substr(obter_regra_via_acesso(cd_procedimento_w, ie_origem_proced_w, cd_estabelecimento_w, cd_convenio_w),1,2) 
into STRICT	ie_via_acesso_w
;
 
begin 
	select 	nextval('procedimento_paciente_seq') 
	into STRICT	nr_seq_w 
	;
				 
	insert into procedimento_paciente( 
			nr_sequencia,		nr_atendimento,		dt_entrada_unidade,		cd_procedimento,	dt_procedimento, 
			cd_convenio,		cd_categoria,		nr_doc_convenio,		ie_tipo_guia,		cd_senha, 
			ie_auditoria,		ie_emite_conta,		cd_cgc_prestador,		ie_origem_proced,	nr_seq_exame, 
			nr_seq_proc_interno,	qt_procedimento,	cd_setor_atendimento,		nr_seq_atepacu,		nr_seq_cor_exec, 
			ie_funcao_medico,	vl_procedimento,	ie_proc_princ_atend,		ie_video,		tx_medico, 
			tx_anestesia,		tx_procedimento,	ie_valor_informado,		ie_guia_informada,	cd_situacao_glosa, 
			nm_usuario_original,	ds_observacao,		dt_atualizacao,			nm_usuario,		cd_pessoa_fisica, 
			cd_medico_executor,	cd_especialidade, 	ie_via_acesso) 
	values ( 
			nr_seq_w,		nr_atendimento_p,	dt_entrada_unidade_w,		cd_procedimento_w,	dt_entrada_unidade_w, 
			cd_convenio_w,		cd_categoria_w,		nr_doc_convenio_w,		ie_tipo_guia_w,		cd_senha_w, 
			'N',			null,			cd_cgc_prestador_w,		ie_origem_proced_w,	null, 
			nr_seq_proc_interno_w,	1,			cd_setor_atendimento_w,		nr_seq_atepacu_atual_w,	null, 
			ie_funcao_medico_w,	100,			'N',				'N',			100, 
			100,			100,			'N',				'N',			0, 
			nm_usuario_p,		substr(wheb_mensagem_pck.get_texto(307918)|| obter_desc_serv_pac(nr_seq_servico_p) ,1,255),clock_timestamp(),			nm_usuario_p,		cd_profissional_w, 
			cd_medico_executor_w,	cd_especialidade_medica_w, ie_via_acesso_w);
			 
	if (ie_classificacao_w in ('1','8')) then 		 
		CALL atualiza_preco_procedimento(nr_seq_w, cd_convenio_w, nm_usuario_p);
	else 
		CALL atualiza_preco_servico(nr_seq_w,nm_usuario_p);
	end if;
	 
	CALL gerar_lancamento_automatico(nr_atendimento_p,null,34,nm_usuario_p,null,null,null,null,null,null);
end;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_servicos_pac_conta ( nr_atendimento_p bigint, nm_usuario_p text, nr_seq_servico_p bigint) FROM PUBLIC;

