-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_reenviar_sib ( nr_seq_lote_sib_p bigint, nr_seq_retorno_p bigint, ie_tipo_registro_p bigint, cd_motivo_p bigint, ie_opcao_p bigint, nr_seq_segurado_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ie_carteira_ant_p text) AS $body$
DECLARE


/*ie_opcao_p
	1= Reenviar com dados atuais do beneficiario
	2= Reenviar com dados enviados pela ANS
	3= Reenviar com dados do beneficiario sem o arquivo de retorno
	4= Reenviar apos devolucao dos erros da ANS
*/
nr_seq_reg_arquivo_w		bigint;
cd_pessoa_fisica_w		varchar(10);
nm_segurado_w			varchar(255);
dt_nascimento_w			timestamp;
ie_sexo_w			smallint;
nr_pis_pasep_w			varchar(11);
nm_mae_segurado_w		varchar(255);
cd_cns_w			varchar(15);
nr_identidade_w			varchar(15);
ds_orgao_emissor_ci_w		pessoa_fisica.ds_orgao_emissor_ci%type;
cd_nacionalidade_w		varchar(8);
nr_seq_titular_w		bigint;
ie_regulamentacao_w		varchar(2);
cd_plano_ans_w			varchar(20);
cd_plano_ans_pre_w		varchar(20);
cd_plano_ans_ant_w		pls_interf_sib.cd_plano_ans%type;
cd_plano_ans_ant_pre_w		pls_interf_sib.cd_plano_ans_pre%type;
dt_liberacao_w			timestamp;
ds_logradouro_w			varchar(50);
ds_numero_w			varchar(5);
ds_complemento_w		varchar(15);
ds_bairro_w			varchar(50);
ds_municipio_w			varchar(50);
sg_uf_w				varchar(10);
cd_cep_w			varchar(15);
dt_mesano_referencia_w		timestamp;
dt_rescisao_w			timestamp;
dt_reinclusao_w			timestamp;
nr_seq_portabilidade_w		bigint;
nr_seq_motivo_cancelamento_w	bigint;
nr_seq_segurado_w		bigint;
nr_seq_contrato_w		bigint;
cd_pais_sib_w			varchar(30);
cd_usuario_ant_w		varchar(30);
cd_usuario_plano_w		varchar(30);
cd_usuario_plano_tit_w		varchar(30);
cd_cgc_estipulante_w		varchar(14);
nr_cpf_w			varchar(11);
cd_vinculo_benef_w		varchar(2);
ie_carencia_temp_w		smallint;
ie_resid_brasil_w		smallint;
nr_cco_w			bigint;
ie_digito_cco_w			smallint;
cd_usuario_retorno_w		varchar(30);
ie_tipo_registro_w		varchar(2);
cd_motivo_w			smallint;
qt_endereco_residencial_w	bigint;
qt_endereco_comercial_w		bigint;
ie_tipo_logradouro_w		varchar(10);
cd_declaracao_nasc_vivo_w	pessoa_fisica.cd_declaracao_nasc_vivo%type;
cd_municipio_ibge_resid_w	varchar(7);
nr_seq_alt_w			bigint;
dt_referencia_w			timestamp;
ie_scpa_contrato_w		varchar(10);
nr_matricula_cei_w		varchar(30);
cd_motivo_cancelamento_w	bigint;
ie_logradouro_sib_w		pls_parametros.ie_logradouro_sib%type;
ie_itens_excluid_cobertura_w	pls_interf_sib.ie_itens_excluid_cobertura%type;
ie_situacao_tasy_w		varchar(1);
ie_situacao_ans_w		varchar(1);
nr_seq_sib_log_exclusao_w	pls_segurado.nr_seq_sib_log_exclusao%type;
nr_seq_seq_alt_produto_w	pls_segurado_alt_plano.nr_sequencia%type;
cd_cco_w			pls_segurado.cd_cco%type;


BEGIN
select	max(dt_mes_competencia)
into STRICT	dt_referencia_w
from	pls_lote_sib
where	nr_sequencia	= nr_seq_lote_sib_p;

if (ie_opcao_p	in (1,2)) then
	select	CASE WHEN coalesce(nr_seq_segurado::text, '') = '' THEN  CASE WHEN coalesce(nr_seq_segurado_vinculado::text, '') = '' THEN  nr_seq_segurado_encontrado  ELSE nr_seq_segurado_vinculado END   ELSE nr_seq_segurado END
	into STRICT	nr_seq_segurado_w
	from	pls_retorno_sib
	where	nr_sequencia	= nr_seq_retorno_p;
elsif (ie_opcao_p	= 3) then
	nr_seq_segurado_w	:= nr_seq_segurado_p;
elsif (ie_opcao_p	= 4) then
	select	nr_cco,
		nr_digito_cco,
		trim(both cd_usuario_plano),
		CASE WHEN ie_registro=1 THEN 1 WHEN ie_registro=2 THEN 2 WHEN ie_registro=3 THEN 5 WHEN ie_registro=4 THEN 7 WHEN ie_registro=5 THEN 8 END ,
		cd_motivo
	into STRICT	nr_cco_w,
		ie_digito_cco_w,
		cd_usuario_retorno_w,
		ie_tipo_registro_w,
		cd_motivo_w
	from	sib_devolucao_erro
	where	nr_sequencia	= nr_seq_retorno_p;
	
	if (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then
		nr_seq_segurado_w	:= nr_seq_segurado_p;
	else
		if (coalesce(nr_cco_w,0) <> 0) then
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_segurado_w
			from	pls_segurado a
			where	a.nr_cco		= nr_cco_w
			and	ie_tipo_segurado	in ('B','R')
			and	trunc(a.dt_contratacao, 'dd') <= fim_mes(dt_referencia_w);
			
			if (coalesce(nr_seq_segurado_w::text, '') = '') then
				select	max(a.nr_sequencia)
				into STRICT	nr_seq_segurado_w
				from	pls_segurado a
				where	substr(a.cd_cco,1,10)	= to_char(lpad(nr_cco_w,10,0))
				and	ie_tipo_segurado	in ('B','R')
				and	trunc(a.dt_contratacao, 'dd') <= fim_mes(dt_referencia_w);
			end if;
		elsif (coalesce(cd_usuario_retorno_w,'0') <> '0') then
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_segurado_w
			from	pls_segurado a,
				pls_segurado_carteira b
			where	a.nr_sequencia		= b.nr_seq_segurado
			and	((b.cd_usuario_plano	= cd_usuario_retorno_w) or (a.cd_cartao_ident_ans_sist_ant = cd_usuario_retorno_w))
			and	trunc(a.dt_contratacao, 'dd') 	<= fim_mes(dt_referencia_w);
		end if;
	end if;
end if;

select	max(b.nr_sequencia)
into STRICT	nr_seq_reg_arquivo_w
from	pls_interf_sib		b,
	pls_lote_sib		a
where	b.nr_seq_lote_sib	= a.nr_sequencia
and	a.nr_sequencia		= nr_seq_lote_sib_p;

if (coalesce(nr_seq_reg_arquivo_w::text, '') = '') then
	nr_seq_reg_arquivo_w	:= 0;
end if;

select	max(ie_scpa_contrato),
	max(ie_logradouro_sib)
into STRICT	ie_scpa_contrato_w,
	ie_logradouro_sib_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;

if (coalesce(ie_scpa_contrato_w::text, '') = '') then
	ie_scpa_contrato_w	:= 'N';
end if;

if (coalesce(ie_logradouro_sib_w::text, '') = '') then
	ie_logradouro_sib_w	:= '1';
end if;

if (nr_seq_reg_arquivo_w = 0) then
	nr_seq_reg_arquivo_w	:= 1;
end if;

dt_rescisao_w			:= null;
cd_motivo_cancelamento_w	:= null;
nr_matricula_cei_w		:= '';

if (coalesce(ie_opcao_p,1)	in (1,3)) then
	begin
	select	a.cd_pessoa_fisica,
		substr(coalesce(l.nm_pessoa_fisica,b.nm_pessoa_fisica),1,69),
		b.dt_nascimento,
		CASE WHEN b.ie_sexo='M' THEN 1  ELSE CASE WHEN b.ie_sexo='F' THEN 3  ELSE 0 END  END ,
		coalesce(b.nr_pis_pasep,'00000000000'),
		coalesce(substr(b.nr_cartao_nac_sus,1,15),'000000000000000'),
		b.nr_identidade,
		b.ds_orgao_emissor_ci,
		b.cd_nacionalidade,
		a.nr_seq_titular,
		c.ie_regulamentacao,
		CASE WHEN ie_regulamentacao='P' THEN coalesce(c.nr_protocolo_ans,'000000000')  ELSE '000000000' END ,
		CASE WHEN ie_regulamentacao='P' THEN ' '  ELSE CASE WHEN ie_scpa_contrato_w='S' THEN coalesce(e.cd_scpa,c.cd_scpa)  ELSE c.cd_scpa END  END ,
		a.dt_contratacao,
		a.dt_contratacao,
		a.dt_rescisao,
		a.dt_reativacao,
		coalesce(a.nr_seq_portabilidade,0),
		coalesce(to_char(nr_seq_motivo_cancelamento),'01'),
		e.nr_sequencia,
		a.nr_cco,
		a.ie_digito_cco,
		a.nr_seq_sib_log_exclusao
	into STRICT	cd_pessoa_fisica_w,
		nm_segurado_w,
		dt_nascimento_w,
		ie_sexo_w,
		nr_pis_pasep_w,
		cd_cns_w,
		nr_identidade_w,
		ds_orgao_emissor_ci_w,
		cd_nacionalidade_w,
		nr_seq_titular_w,
		ie_regulamentacao_w,
		cd_plano_ans_w,
		cd_plano_ans_pre_w,
		dt_liberacao_w,
		dt_mesano_referencia_w,
		dt_rescisao_w,
		dt_reinclusao_w,
		nr_seq_portabilidade_w,
		nr_seq_motivo_cancelamento_w,
		nr_seq_contrato_w,
		nr_cco_w,
		ie_digito_cco_w,
		nr_seq_sib_log_exclusao_w
	FROM pls_contrato e, pls_plano c, pls_segurado a, pessoa_fisica b
LEFT OUTER JOIN pls_pessoa_fisica l ON (b.cd_pessoa_fisica = l.cd_pessoa_fisica)
WHERE a.cd_pessoa_fisica	= b.cd_pessoa_fisica  and e.nr_sequencia	= a.nr_seq_contrato and c.nr_sequencia	= a.nr_seq_plano and a.nr_sequencia	= nr_seq_segurado_w;
	exception
	when others then
		nr_seq_segurado_w	:= 0;
	end;
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_seq_alt_produto_w
	from	pls_segurado_alt_plano
	where	nr_seq_segurado			= nr_seq_segurado_w
	and	trunc(dt_alteracao,'Month')	= trunc(dt_referencia_w,'month')
	and	ie_regulamentacao_ant		in ('R','P')
	and	ie_situacao 			= 'A'
	and	ie_regulamentacao_atual		<> 'R';
	
	if (nr_seq_seq_alt_produto_w IS NOT NULL AND nr_seq_seq_alt_produto_w::text <> '') then
		select	CASE WHEN a.ie_regulamentacao='P' THEN coalesce(a.nr_protocolo_ans,'000000000')  ELSE '000000000' END ,
			a.ie_regulamentacao,
			b.dt_alteracao
		into STRICT	cd_plano_ans_w,
			ie_regulamentacao_w,
			dt_liberacao_w
		from	pls_segurado_alt_plano	b,
			pls_plano		a
		where	b.nr_seq_plano_atual	= a.nr_sequencia
		and	b.nr_sequencia		= nr_seq_seq_alt_produto_w;
		
		select	CASE WHEN a.ie_regulamentacao='P' THEN coalesce(a.nr_protocolo_ans,'000000000')  ELSE '000000000' END ,
			a.cd_scpa
		into STRICT	cd_plano_ans_ant_w,
			cd_plano_ans_ant_pre_w
		from	pls_segurado_alt_plano	b,
			pls_plano		a
		where	b.nr_seq_plano_ant	= a.nr_sequencia
		and	b.nr_sequencia		= nr_seq_seq_alt_produto_w;
	
		if (ie_scpa_contrato_w = 'S') then
			cd_plano_ans_ant_pre_w	:= coalesce(cd_plano_ans_pre_w,cd_plano_ans_ant_pre_w);
		end if;
	end if;
	
	select	max(a.nm_pessoa_fisica)
	into STRICT	nm_mae_segurado_w
	from	pessoa_fisica a,
		compl_pessoa_fisica b
	where	b.cd_pessoa_fisica_ref	= a.cd_pessoa_fisica
	and	b.ie_tipo_complemento	= 5
	and	b.cd_pessoa_fisica	= cd_pessoa_fisica_w;
	
	if (coalesce(nm_mae_segurado_w::text, '') = '') then
		select	max(a.nm_contato)
		into STRICT	nm_mae_segurado_w
		from	compl_pessoa_fisica a
		where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w
		and	a.ie_tipo_complemento	= 5;
	end if;
	
	if (nr_seq_segurado_w <> 0) then
		SELECT * FROM pls_obter_dados_interf_sib(	nr_seq_segurado_w, cd_pais_sib_w, cd_usuario_ant_w, cd_usuario_plano_w, cd_usuario_plano_tit_w, cd_cgc_estipulante_w, nr_cpf_w, cd_vinculo_benef_w, ie_carencia_temp_w, ie_resid_brasil_w) INTO STRICT cd_pais_sib_w, cd_usuario_ant_w, cd_usuario_plano_w, cd_usuario_plano_tit_w, cd_cgc_estipulante_w, nr_cpf_w, cd_vinculo_benef_w, ie_carencia_temp_w, ie_resid_brasil_w;
		
		ie_tipo_registro_w	:= ie_tipo_registro_p;
		cd_motivo_w		:= cd_motivo_p;
		
		if (ie_carteira_ant_p = 'S') then
			cd_usuario_plano_w	:= cd_usuario_ant_w;
		end if;
	end if;

	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		SELECT * FROM pls_obter_enderecos_benef_sib(	cd_pessoa_fisica_w, nr_seq_contrato_w, 'S', ie_logradouro_sib_w, ie_tipo_logradouro_w, ds_logradouro_w, ds_numero_w, ds_complemento_w, ds_bairro_w, ds_municipio_w, cd_municipio_ibge_resid_w, sg_uf_w, cd_cep_w) INTO STRICT ie_tipo_logradouro_w, ds_logradouro_w, ds_numero_w, ds_complemento_w, ds_bairro_w, ds_municipio_w, cd_municipio_ibge_resid_w, sg_uf_w, cd_cep_w;
	end if;
	
	if (ie_tipo_registro_w = 2) and (dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') then
		begin
		select	max(cd_motivo_cancelamento)
		into STRICT	cd_motivo_cancelamento_w
		from	pls_motivo_cancelamento
		where	nr_sequencia	= nr_seq_motivo_cancelamento_w;
		exception
		when others then
			cd_motivo_cancelamento_w	:= null;
		end;
	end if;	
elsif (coalesce(ie_opcao_p,1)	= 2) then
	select	nm_beneficiario,
		dt_nascimento,
		ie_sexo,
		nr_pis_pasep,
		nm_mae,
		nr_cns,
		nr_identidade,
		ds_orgao_emissor,
		null, --cd_nacionalidade_w
		--cd_titular_plano,
		null, --ie_regulamentacao_w
		coalesce(to_char(nr_plano_ans),'000000000'),
		CASE WHEN cd_plano_anterior='000000000' THEN ''  ELSE cd_plano_anterior END ,
		dt_adesao_plano,
		substr(ds_logradouro,1,50),
		nr_endereco,
		ds_complemento,
		ds_bairro,
		coalesce(trim(both ds_cidade),cd_municipio_ibge),
		sg_uf,
		cd_cep,
		dt_inclusao,
		CASE WHEN ie_tipo_registro_p=7 THEN CASE WHEN coalesce(dt_exclusao::text, '') = '' THEN clock_timestamp()  ELSE dt_exclusao END   ELSE null END ,
		dt_reativacao_contrato,
		null, --nr_seq_portabilidade_w
		CASE WHEN ie_tipo_registro_p=7 THEN cd_motivo_p  ELSE null END ,
		cd_pais_emissor,
		'00000000000000000', --cd_usuario_ant_w
		cd_usuario_plano,
		null, --cd_usuario_plano_tit_w
		cd_cgc,
		nr_cpf,
		ie_vinculo_beneficiario,
		ie_cobertura_parcial,
		ie_resid_brasil,
		nr_cco,
		ie_digito_cco,
		ie_tipo_registro
	into STRICT	nm_segurado_w,
		dt_nascimento_w,
		ie_sexo_w,
		nr_pis_pasep_w,
		nm_mae_segurado_w,
		cd_cns_w,
		nr_identidade_w,
		ds_orgao_emissor_ci_w,
		cd_nacionalidade_w,
		--nr_seq_titular_w,
		ie_regulamentacao_w,
		cd_plano_ans_w,
		cd_plano_ans_pre_w,
		dt_liberacao_w,
		ds_logradouro_w,
		ds_numero_w,
		ds_complemento_w,
		ds_bairro_w,
		ds_municipio_w,
		sg_uf_w,
		cd_cep_w,
		dt_mesano_referencia_w,
		dt_rescisao_w,
		dt_reinclusao_w,
		nr_seq_portabilidade_w,
		nr_seq_motivo_cancelamento_w,
		cd_pais_sib_w,
		cd_usuario_ant_w, 
		cd_usuario_plano_w, 
		cd_usuario_plano_tit_w, 
		cd_cgc_estipulante_w,
		nr_cpf_w,
		cd_vinculo_benef_w,
		ie_carencia_temp_w,
		ie_resid_brasil_w,
		nr_cco_w,
		ie_digito_cco_w,
		ie_situacao_ans_w
	from	pls_retorno_sib
	where	nr_sequencia	= nr_seq_retorno_p;
	
	begin
	select	CASE WHEN coalesce(dt_rescisao::text, '') = '' THEN  '1'  ELSE '3' END ,
		cd_cco
	into STRICT	ie_situacao_tasy_w,
		cd_cco_w
	from	pls_segurado
	where	nr_sequencia = nr_seq_segurado_w;
	exception
	when others then
		ie_situacao_tasy_w := '3';
		cd_cco_w := null;
	end;	
	
	if (ie_situacao_ans_w = '1') and (ie_situacao_tasy_w = '1') and (ie_tipo_registro_p = '8') then
		ie_tipo_registro_w	:= '2';
		cd_motivo_w		:= 51;
	else	
		ie_tipo_registro_w	:= ie_tipo_registro_p;
		cd_motivo_w		:= cd_motivo_p;
	end if;
	
elsif (coalesce(ie_opcao_p,1)	= 4) and (coalesce(nr_seq_segurado_w,0)	> 0) then
	begin
	select	a.cd_pessoa_fisica,
		substr(coalesce(l.nm_pessoa_fisica,b.nm_pessoa_fisica),1,69),
		b.dt_nascimento,
		CASE WHEN b.ie_sexo='M' THEN 1  ELSE CASE WHEN b.ie_sexo='F' THEN 3  ELSE 0 END  END ,
		coalesce(b.nr_pis_pasep,'00000000000'),
		coalesce(substr(b.nr_cartao_nac_sus,1,15),'000000000000000'),
		b.nr_identidade,
		b.ds_orgao_emissor_ci,
		b.cd_nacionalidade,
		a.nr_seq_titular,
		c.ie_regulamentacao,
		CASE WHEN ie_regulamentacao='P' THEN coalesce(c.nr_protocolo_ans,'000000000')  ELSE '000000000' END ,
		CASE WHEN ie_regulamentacao='P' THEN ' '  ELSE CASE WHEN ie_scpa_contrato_w='S' THEN coalesce(e.cd_scpa,c.cd_scpa)  ELSE c.cd_scpa END  END ,
		a.dt_contratacao,
		a.dt_contratacao,
		a.dt_rescisao,
		a.dt_reativacao,
		coalesce(a.nr_seq_portabilidade,0),
		coalesce(to_char(nr_seq_motivo_cancelamento),'01'),
		b.cd_declaracao_nasc_vivo,
		e.nr_sequencia
	into STRICT	cd_pessoa_fisica_w,
		nm_segurado_w,
		dt_nascimento_w,
		ie_sexo_w,
		nr_pis_pasep_w,
		cd_cns_w,
		nr_identidade_w,
		ds_orgao_emissor_ci_w,
		cd_nacionalidade_w,
		nr_seq_titular_w,
		ie_regulamentacao_w,
		cd_plano_ans_w,
		cd_plano_ans_pre_w,
		dt_liberacao_w,
		dt_mesano_referencia_w,
		dt_rescisao_w,
		dt_reinclusao_w,
		nr_seq_portabilidade_w,
		nr_seq_motivo_cancelamento_w,
		cd_declaracao_nasc_vivo_w,
		nr_seq_contrato_w
	FROM pls_contrato e, pls_plano c, pls_segurado a, pessoa_fisica b
LEFT OUTER JOIN pls_pessoa_fisica l ON (b.cd_pessoa_fisica = l.cd_pessoa_fisica)
WHERE a.cd_pessoa_fisica	= b.cd_pessoa_fisica  and e.nr_sequencia		= a.nr_seq_contrato and c.nr_sequencia		= a.nr_seq_plano and a.nr_sequencia		= nr_seq_segurado_w;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(174242,nr_cco_w);
	end;
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_seq_alt_produto_w
	from	pls_segurado_alt_plano
	where	nr_seq_segurado			= nr_seq_segurado_w
	and	trunc(dt_alteracao,'Month')	= trunc(dt_referencia_w,'month')
	and	ie_regulamentacao_ant		in ('R','P')
	and	ie_situacao			= 'A'
	and	ie_regulamentacao_atual		<> 'R';
	
	if (nr_seq_seq_alt_produto_w IS NOT NULL AND nr_seq_seq_alt_produto_w::text <> '') then
		select	CASE WHEN a.ie_regulamentacao='P' THEN coalesce(a.nr_protocolo_ans,'000000000')  ELSE '000000000' END ,
			a.ie_regulamentacao,
			b.dt_alteracao
		into STRICT	cd_plano_ans_w,
			ie_regulamentacao_w,
			dt_liberacao_w
		from	pls_segurado_alt_plano	b,
			pls_plano		a
		where	b.nr_seq_plano_atual	= a.nr_sequencia
		and	b.nr_sequencia		= nr_seq_seq_alt_produto_w;
		
		select	CASE WHEN a.ie_regulamentacao='P' THEN coalesce(a.nr_protocolo_ans,'000000000')  ELSE '000000000' END ,
			a.cd_scpa
		into STRICT	cd_plano_ans_ant_w,
			cd_plano_ans_ant_pre_w
		from	pls_segurado_alt_plano	b,
			pls_plano		a
		where	b.nr_seq_plano_ant	= a.nr_sequencia
		and	b.nr_sequencia		= nr_seq_seq_alt_produto_w;
	
		if (ie_scpa_contrato_w = 'S') then
			cd_plano_ans_ant_pre_w	:= coalesce(cd_plano_ans_pre_w,cd_plano_ans_ant_pre_w);
		end if;
	end if;	
	
	SELECT * FROM pls_obter_dados_interf_sib(	nr_seq_segurado_w, cd_pais_sib_w, cd_usuario_ant_w, cd_usuario_plano_w, cd_usuario_plano_tit_w, cd_cgc_estipulante_w, nr_cpf_w, cd_vinculo_benef_w, ie_carencia_temp_w, ie_resid_brasil_w) INTO STRICT cd_pais_sib_w, cd_usuario_ant_w, cd_usuario_plano_w, cd_usuario_plano_tit_w, cd_cgc_estipulante_w, nr_cpf_w, cd_vinculo_benef_w, ie_carencia_temp_w, ie_resid_brasil_w;
	
	if (ie_carteira_ant_p = 'S') then
		cd_usuario_plano_w	:= cd_usuario_ant_w;
	end if;
	
	select	max(a.nm_pessoa_fisica)
	into STRICT	nm_mae_segurado_w
	from	pessoa_fisica a,
		compl_pessoa_fisica b
	where	b.cd_pessoa_fisica_ref	= a.cd_pessoa_fisica
	and	b.ie_tipo_complemento	= 5
	and	b.cd_pessoa_fisica	= cd_pessoa_fisica_w;
	
	if (coalesce(nm_mae_segurado_w::text, '') = '') then
		select	max(a.nm_contato)
		into STRICT	nm_mae_segurado_w
		from	compl_pessoa_fisica a
		where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w
		and	a.ie_tipo_complemento	= 5;
	end if;

	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		SELECT * FROM pls_obter_enderecos_benef_sib(	cd_pessoa_fisica_w, nr_seq_contrato_w, 'S', ie_logradouro_sib_w, ie_tipo_logradouro_w, ds_logradouro_w, ds_numero_w, ds_complemento_w, ds_bairro_w, ds_municipio_w, cd_municipio_ibge_resid_w, sg_uf_w, cd_cep_w) INTO STRICT ie_tipo_logradouro_w, ds_logradouro_w, ds_numero_w, ds_complemento_w, ds_bairro_w, ds_municipio_w, cd_municipio_ibge_resid_w, sg_uf_w, cd_cep_w;
	end if;
	
	if (ie_tipo_registro_w	= 1) then
		begin
		select	max(substr(cd_ans,1,2))
		into STRICT	cd_motivo_w
		from 	pls_motivo_inclusao_seg a,
			pls_segurado b
		where	b.nr_seq_motivo_inclusao	= a.nr_sequencia
		and	b.nr_sequencia			= nr_seq_segurado_w;
		exception
		when others then
			cd_motivo_w	:= 15;
		end;
		
		if (coalesce(cd_motivo_w::text, '') = '') then
			cd_motivo_w	:= 15;
		end if;
	elsif (ie_tipo_registro_w	= 7) then
		if (coalesce(dt_rescisao_w::text, '') = '') and (dt_reinclusao_w IS NOT NULL AND dt_reinclusao_w::text <> '') then
			select	max(dt_ocorrencia_sib),
				max(nr_seq_motivo_cancelamento)
			into STRICT	dt_rescisao_w,
				nr_seq_motivo_cancelamento_w
			from	pls_segurado_historico
			where	nr_seq_segurado	= nr_seq_segurado_w
			and	ie_tipo_historico	= '1'
			and	trunc(dt_ocorrencia_sib,'Month') = dt_referencia_w;
		end if;
		
		begin
		select	max(cd_motivo_cancelamento)
		into STRICT	cd_motivo_w
		from	pls_motivo_cancelamento
		where	nr_sequencia	= nr_seq_motivo_cancelamento_w;
		exception
		when others then
			cd_motivo_w	:= null;
		end;
	elsif (ie_tipo_registro_w	= 2) then
		cd_motivo_w	:= 51;
		begin
		select	max(nr_sequencia)
		into STRICT	nr_seq_alt_w
		from	pls_segurado_alt_plano
		where	nr_seq_segurado = nr_seq_segurado_w
		and	ie_situacao = 'A'
		and	trunc(dt_alteracao,'month') = dt_referencia_w;
		exception
		when others then
			nr_seq_alt_w	:= null;
		end;
		
		if (nr_seq_alt_w IS NOT NULL AND nr_seq_alt_w::text <> '') then
			select	cd_ans
			into STRICT	cd_motivo_w
			from	pls_segurado_alt_plano a,
				pls_motivo_alteracao_plano b
			where	b.nr_sequencia = a.nr_seq_motivo_alt
			and	a.nr_sequencia = nr_seq_alt_w;
		end if;
		
		if (dt_reinclusao_w IS NOT NULL AND dt_reinclusao_w::text <> '') then
			select	max(nr_seq_motivo_cancelamento),
				max(dt_ocorrencia_sib)
			into STRICT	nr_seq_motivo_cancelamento_w,
				dt_rescisao_w
			from	pls_segurado_historico
			where	nr_seq_segurado	= nr_seq_segurado_w
			and	ie_tipo_historico	= '1';
			
			if (nr_seq_motivo_cancelamento_w IS NOT NULL AND nr_seq_motivo_cancelamento_w::text <> '') and (dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') then
				begin
				select	max(cd_motivo_cancelamento)
				into STRICT	cd_motivo_cancelamento_w
				from	pls_motivo_cancelamento
				where	nr_sequencia	= nr_seq_motivo_cancelamento_w;
				exception
				when others then
					cd_motivo_cancelamento_w	:= null;
				end;
			else
				dt_rescisao_w			:= null;
				dt_reinclusao_w			:= null;
				cd_motivo_cancelamento_w	:= null;
			end if;
		elsif (dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') then
			begin
			select	max(cd_motivo_cancelamento)
			into STRICT	cd_motivo_cancelamento_w
			from	pls_motivo_cancelamento
			where	nr_sequencia	= nr_seq_motivo_cancelamento_w;
			exception
			when others then
				cd_motivo_cancelamento_w	:= null;
			end;
		end if;
	end if;
end if;

if (dt_nascimento_w < to_date('01/01/2010')) then
	cd_declaracao_nasc_vivo_w	:= '';
end if;

if (cd_cgc_estipulante_w IS NOT NULL AND cd_cgc_estipulante_w::text <> '') THEN
	select	max(nr_matricula_cei)
	into STRICT	nr_matricula_cei_w
	from	pessoa_juridica
	where	cd_cgc	= cd_cgc_estipulante_w;
	
	if ((trim(both nr_matricula_cei_w) IS NOT NULL AND (trim(both nr_matricula_cei_w))::text <> '')) then
		cd_cgc_estipulante_w	:= '';
	end if;
end if;

if	((coalesce(nr_seq_segurado_w,0)	> 0) or (coalesce(ie_opcao_p,1) = 2)) then
	nr_seq_reg_arquivo_w	:= nr_seq_reg_arquivo_w + 1;
	
	nr_cpf_w		:= trim(both nr_cpf_w);

	if (ie_regulamentacao_w = 'R') then
		ie_itens_excluid_cobertura_w	:= 1;
	else
		ie_itens_excluid_cobertura_w	:= 2; /* No projeto XML converte para 0 */
	end if;
	
	if	((coalesce(nr_cco_w::text, '') = '') and (cd_cco_w IS NOT NULL AND cd_cco_w::text <> '')) then
		nr_cco_w	:= substr(cd_cco_w,1,10);
	end if;
	
	if	((coalesce(ie_digito_cco_w::text, '') = '') and (cd_cco_w IS NOT NULL AND cd_cco_w::text <> '')) then
		ie_digito_cco_w	:= substr(cd_cco_w,11,12);
	end if;
	
	insert into pls_interf_sib(nr_sequencia,
		dt_mesano_referencia,
		ie_tipo_reg,
		cd_usuario_plano,
		nm_beficiario,
		dt_nascimento,
		ie_sexo,
		nr_cpf,
		nr_pis_pasep,
		nm_mae_benef,
		cd_cns,
		nr_identidade,
		ds_orgao_emissor_ci,
		cd_usuario_plano_sup,
		cd_plano_ans,
		cd_plano_ans_pre,
		dt_adesao_plano,
		cd_vinculo_benef,
		dt_cancelamento,
		dt_reinclusao,
		cd_motivo,
		ie_carencia_temp,
		ie_itens_excluid_cobertura,
		cd_cgc_estipulante,
		logradouro,
		ds_numero,
		ds_complemento,
		ds_bairro,
		ds_municipio,
		uf,
		cep,
		cd_pessoa_fisica,
		nr_seq_lote_sib,
		cd_cei,
		nr_seq_segurado,
		cd_usuario_ant,
		cd_pais,
		nr_seq_titular,
		nr_prot_ans_origem,
		ie_resid_brasil,
		nr_seq_portabilidade,
		nr_seq_plano_portab,
		ie_tipo_reenvio,
		nr_cco,
		ie_digito_cco,
		cd_declaracao_nasc_vivo,
		ie_tipo_logradouro,
		cd_municipio_ibge_resid,
		cd_motivo_cancelamento)
	values (nr_seq_reg_arquivo_w,
		trunc(dt_mesano_referencia_w),
		ie_tipo_registro_w,
		cd_usuario_plano_w,
		nm_segurado_w,
		dt_nascimento_w,
		ie_sexo_w,
		coalesce(nr_cpf_w,'00000000000'),
		nr_pis_pasep_w,
		nm_mae_segurado_w,
		cd_cns_w,
		nr_identidade_w,
		ds_orgao_emissor_ci_w,
		cd_usuario_plano_tit_w,
		cd_plano_ans_w,
		cd_plano_ans_pre_w,
		dt_liberacao_w,
		cd_vinculo_benef_w,
		dt_rescisao_w,
		dt_reinclusao_w,
		cd_motivo_w,
		ie_carencia_temp_w,
		ie_itens_excluid_cobertura_w,
		cd_cgc_estipulante_w,
		ds_logradouro_w,
		CASE WHEN coalesce(ds_numero_w,'x')='x' THEN 'S/N'  ELSE ds_numero_w END ,
		ds_complemento_w,
		ds_bairro_w,
		ds_municipio_w,
		CASE WHEN sg_uf_w='IN' THEN 'EX'  ELSE sg_uf_w END ,
		cd_cep_w,
		cd_pessoa_fisica_w,
		nr_seq_lote_sib_p,
		nr_matricula_cei_w,
		nr_seq_segurado_w,
		cd_usuario_ant_w,
		cd_pais_sib_w,
		nr_seq_titular_w,
		null,
		ie_resid_brasil_w,
		0,
		0,
		ie_opcao_p,
		nr_cco_w,
		ie_digito_cco_w,
		cd_declaracao_nasc_vivo_w,
		ie_tipo_logradouro_w,
		cd_municipio_ibge_resid_w,
		cd_motivo_cancelamento_w);
	if (ie_opcao_p in (1,2)) then
		update	pls_retorno_sib
		set	nr_seq_lote_envio	= nr_seq_lote_sib_p,
			nr_seq_interf_sib	= nr_seq_reg_arquivo_w
		where	nr_sequencia		= nr_seq_retorno_p;
	elsif (ie_opcao_p = 3) then
		update	pls_segurado
		set	ie_reenviar_sib		= 'N'
		where	nr_sequencia		= nr_seq_segurado_w;
		
		--Gravar na SIB log exclusao a informacao do reenvio
		if (nr_seq_sib_log_exclusao_w IS NOT NULL AND nr_seq_sib_log_exclusao_w::text <> '') then
			update	sib_log_exclusao
			set	ie_enviar_sib		= 'N',
				nr_seq_lote_envio	= nr_seq_lote_sib_p,
				nr_seq_interf_sib	= nr_seq_reg_arquivo_w
			where	nr_sequencia		= nr_seq_sib_log_exclusao_w;
		end if;
		
	elsif (ie_opcao_p = 4) then
		update	sib_devolucao_erro
		set	ie_reenvio		= 'N',
			nr_seq_lote_envio	= nr_seq_lote_sib_p,
			nr_seq_interf_sib	= nr_seq_reg_arquivo_w
		where	nr_sequencia		= nr_seq_retorno_p;
	end if;
	cd_plano_ans_pre_w	:= ' ';
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_reenviar_sib ( nr_seq_lote_sib_p bigint, nr_seq_retorno_p bigint, ie_tipo_registro_p bigint, cd_motivo_p bigint, ie_opcao_p bigint, nr_seq_segurado_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ie_carteira_ant_p text) FROM PUBLIC;

