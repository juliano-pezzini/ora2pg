-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE intpd_recebe_contagem_inv_mat ( nr_sequencia_p bigint, xml_p xml) AS $body$
DECLARE

 
_ora2pg_r RECORD;
qt_registros_w			bigint;
ie_conversao_w			intpd_eventos_sistema.ie_conversao%type;
nr_seq_sistema_w			intpd_eventos_sistema.nr_seq_sistema%type;					
nr_seq_projeto_xml_w		intpd_eventos_sistema.nr_seq_projeto_xml%type;
nr_seq_regra_conv_w		conversao_meio_externo.nr_seq_regra%type;
ie_sistema_externo_w		varchar(15);
inventario_w			inventario%rowtype;
inventario_material_w		inventario_material%rowtype;
reg_integracao_w			gerar_int_padrao.reg_integracao_conv;
nr_inventario_delete_w		inventario_material.nr_sequencia%type;
i				integer;
ds_erro_w			varchar(4000);

 
c01 CURSOR FOR 
SELECT	* 
from	xmltable('/STRUCTURE/INVENTORY' passing xml_p columns 
	ie_action				varchar(15)	path	'IE_ACTION', 
	nr_sequencia			varchar(15)	path	'NR_SEQUENCE', 
	nr_documento_externo		varchar(255)	path	'NR_EXTERNAL_DOCUMENT', 
	ds_observacao			varchar(255)	path	'DS_OBSERVATION', 
	dt_aprovacao			varchar(40)	path	'DT_APPROVAL', 
	dt_atualizacao_saldo		varchar(40)	path	'DT_UPDATE_BALANCE', 
	nm_usuario_aprov			varchar(40)	path	'NM_USER_APPROVAL', 
	nm_usuario_atualizacao		varchar(40)	path	'NM_USER_UPDATE_BALANCE', 
	xml_itens_inventario			xml 		path	'ITEMS');
c01_w	c01%rowtype;

c02 CURSOR FOR 
SELECT	* 
from	xmltable('/ITEMS/ITEM' passing c01_w.xml_itens_inventario columns 
	cd_material			varchar(40)	path	'CD_MATERIAL', 
	ds_observacao			varchar(255)	path	'DS_OBSERVATION', 
	qt_contagem			varchar(40)	path	'QT_1ST_COUNT', 
	qt_recontagem			varchar(40)	path	'QT_2ND_COUNT', 
	qt_seg_recontagem			varchar(40)	path	'QT_3ND_COUNT', 
	qt_terc_recontagem			varchar(40)	path	'QT_4TH_COUNT',	 
	dt_contagem			varchar(40)	path	'DT_1ST_COUNT', 
	dt_recontagem			varchar(40)	path	'DT_2ND_COUNT', 
	dt_seg_recontagem			varchar(40)	path	'DT_3ND_COUNT', 
	dt_terc_recontagem			varchar(40)	path	'DT_4TH_COUNT',	 
	nm_usuario_contagem		varchar(40)	path	'NM_USER_1ST_COUNT', 
	nm_usuario_recontagem		varchar(40)	path	'NM_USER_2ND_COUNT', 
	nm_usuario_seg_recontagem		varchar(40)	path	'NM_USER_3ND_COUNT', 
	nm_usuario_terc_recontagem		varchar(40)	path	'NM_USER_4TH_COUNT');
c02_w	c02%rowtype;


BEGIN 
 
select	coalesce(b.ie_conversao,'I'), 
	nr_seq_sistema, 
	nr_seq_projeto_xml, 
	nr_seq_regra_conv 
into STRICT	ie_conversao_w, 
	nr_seq_sistema_w, 
	nr_seq_projeto_xml_w, 
	nr_seq_regra_conv_w 
from	intpd_fila_transmissao a, 
	intpd_eventos_sistema b 
where	a.nr_seq_evento_sistema = b.nr_sequencia 
and	a.nr_sequencia = nr_sequencia_p;
 
ie_sistema_externo_w	:=	nr_seq_sistema_w;
 
reg_integracao_w.nr_seq_fila_transmissao	:=	nr_sequencia_p;
reg_integracao_w.ie_envio_recebe		:=	'R';
reg_integracao_w.ie_sistema_externo		:=	ie_sistema_externo_w;
reg_integracao_w.ie_conversao		:=	ie_conversao_w;
reg_integracao_w.nr_seq_projeto_xml		:=	nr_seq_projeto_xml_w;
reg_integracao_w.nr_seq_regra_conversao	:=	nr_seq_regra_conv_w;
 
open C01;
loop 
fetch C01 into	 
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
		 
	reg_integracao_w.nm_tabela			:=	'INVENTARIO';
	reg_integracao_w.nm_elemento		:=	'INVENTORY';
	reg_integracao_w.nr_seq_visao		:=	25153;
	 
	if (c01_w.nr_sequencia > 0) then 
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQUENCIA', c01_w.nr_sequencia, 'N', inventario_w.nr_sequencia) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; inventario_w.nr_sequencia := _ora2pg_r.ds_valor_retorno_p;
	else 
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_DOCUMENTO_EXTERNO', c01_w.nr_documento_externo, 'N', inventario_w.nr_documento_externo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; inventario_w.nr_documento_externo := _ora2pg_r.ds_valor_retorno_p;
		 
		select	coalesce(max(nr_sequencia),0) 
		into STRICT	inventario_w.nr_sequencia 
		from	inventario 
		where	nr_documento_externo = inventario_w.nr_documento_externo 
		and	ie_sistema_origem = ie_sistema_externo_w;
	end if;
	 
	if (inventario_w.nr_sequencia > 0) then 
		 
		select	* 
		into STRICT	inventario_w 
		from	inventario 
		where	nr_sequencia = inventario_w.nr_sequencia;
		 
		if (coalesce(inventario_w.dt_bloqueio::text, '') = '') then			 
			ds_erro_w := bloquear_itens_inventario(inventario_w.nr_sequencia, inventario_w.cd_estabelecimento, inventario_w.nm_usuario, ds_erro_w);		
		end if;
		 
		if (coalesce(inventario_w.dt_atualizacao_saldo::text, '') = '') then 
		 
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_OBSERVACAO', c01_w.ds_observacao, 'N', inventario_w.ds_observacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; inventario_w.ds_observacao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_APROVACAO', c01_w.dt_aprovacao, 'N', inventario_w.dt_aprovacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; inventario_w.dt_aprovacao := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_ATUALIZACAO_SALDO', c01_w.dt_atualizacao_saldo, 'N', inventario_w.dt_atualizacao_saldo) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; inventario_w.dt_atualizacao_saldo := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO_APROV', c01_w.nm_usuario_aprov, 'N', inventario_w.nm_usuario_aprov) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; inventario_w.nm_usuario_aprov := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO_ATUALIZACAO', c01_w.nm_usuario_atualizacao, 'N', inventario_w.nm_usuario_atualizacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; inventario_w.nm_usuario_atualizacao := _ora2pg_r.ds_valor_retorno_p;
			inventario_w.dt_atualizacao	:= clock_timestamp();
			 
			if (reg_integracao_w.qt_reg_log = 0) then 
			 
				open C02;
				loop 
				fetch C02 into	 
					c02_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin 
					 
					reg_integracao_w.nm_tabela			:=	'INVENTARIO_MATERIAL';
					reg_integracao_w.nm_elemento		:=	'ITEM';
					reg_integracao_w.nr_seq_visao		:=	17500;
					 
					SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_MATERIAL', c02_w.cd_material, 'S', inventario_material_w.cd_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; inventario_material_w.cd_material := _ora2pg_r.ds_valor_retorno_p;
					 
					if (reg_integracao_w.qt_reg_log = 0) then 
				 
						select	cd_material_estoque 
						into STRICT	inventario_material_w.cd_material 
						from	material 
						where	cd_material = inventario_material_w.cd_material;
						 
						select	coalesce(max(nr_sequencia),0) 
						into STRICT	inventario_material_w.nr_sequencia 
						from	inventario_material 
						where	nr_seq_inventario = inventario_w.nr_sequencia 
						and	cd_material = inventario_material_w.cd_material;
						 
						if (inventario_material_w.nr_sequencia > 0) then 
							 
							select	* 
							into STRICT	inventario_material_w 
							from	inventario_material 
							where	nr_sequencia = inventario_material_w.nr_sequencia;				
							 
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_OBSERVACAO', c02_w.ds_observacao, 'N', inventario_material_w.ds_observacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; inventario_material_w.ds_observacao := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_CONTAGEM', c02_w.qt_contagem, 'N', inventario_material_w.qt_contagem) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; inventario_material_w.qt_contagem := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_RECONTAGEM', c02_w.qt_recontagem, 'N', inventario_material_w.qt_recontagem) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; inventario_material_w.qt_recontagem := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_SEG_RECONTAGEM', c02_w.qt_seg_recontagem, 'N', inventario_material_w.qt_seg_recontagem) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; inventario_material_w.qt_seg_recontagem := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_TERC_RECONTAGEM', c02_w.qt_terc_recontagem, 'N', inventario_material_w.qt_terc_recontagem) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; inventario_material_w.qt_terc_recontagem := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_CONTAGEM', c02_w.dt_contagem, 'N', inventario_material_w.dt_contagem) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; inventario_material_w.dt_contagem := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_RECONTAGEM', c02_w.dt_recontagem, 'N', inventario_material_w.dt_recontagem) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; inventario_material_w.dt_recontagem := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_SEG_RECONTAGEM', c02_w.dt_seg_recontagem, 'N', inventario_material_w.dt_seg_recontagem) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; inventario_material_w.dt_seg_recontagem := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_TERC_RECONTAGEM', c02_w.dt_terc_recontagem, 'N', inventario_material_w.dt_terc_recontagem) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; inventario_material_w.dt_terc_recontagem := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO_CONTAGEM', c02_w.nm_usuario_contagem, 'N', inventario_material_w.nm_usuario_contagem) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; inventario_material_w.nm_usuario_contagem := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO_RECONTAGEM', c02_w.nm_usuario_recontagem, 'N', inventario_material_w.nm_usuario_recontagem) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; inventario_material_w.nm_usuario_recontagem := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO_SEG_RECONTAGEM', c02_w.nm_usuario_seg_recontagem, 'N', inventario_material_w.nm_usuario_seg_recontagem) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; inventario_material_w.nm_usuario_seg_recontagem := _ora2pg_r.ds_valor_retorno_p;
							SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO_TERC_RECONTAGEM', c02_w.nm_usuario_terc_recontagem, 'N', inventario_material_w.nm_usuario_terc_recontagem) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; inventario_material_w.nm_usuario_terc_recontagem := _ora2pg_r.ds_valor_retorno_p;
							inventario_material_w.dt_atualizacao		:= clock_timestamp();
							 
							if (reg_integracao_w.qt_reg_log = 0) then 
							 
								update	inventario_material 
								set	row = inventario_material_w 
								where	nr_sequencia = inventario_material_w.nr_sequencia;
							end if;
						end if;
					end if;			
					end;
				end loop;
				close C02;
			end if;
			 
			if (reg_integracao_w.qt_reg_log = 0) then 
				 
				CALL definir_inventario(inventario_w.nr_sequencia,null,inventario_w.nm_usuario);
				 
				if (inventario_w.dt_aprovacao IS NOT NULL AND inventario_w.dt_aprovacao::text <> '') then 
					ds_erro_w := sup_aprovar_inventario(inventario_w.nr_sequencia, inventario_w.nm_usuario_aprov, inventario_w.cd_estabelecimento, ds_erro_w);
					 
					if (inventario_w.dt_atualizacao_saldo IS NOT NULL AND inventario_w.dt_atualizacao_saldo::text <> '') then 
						CALL atualizar_inventario(inventario_w.nr_sequencia,inventario_w.cd_estabelecimento,inventario_w.nm_usuario_aprov);			
					end if;
				end if;
				 
				update	inventario 
				set	row = inventario_w 
				where	nr_sequencia = inventario_w.nr_sequencia;
				 
			end if;
		end if;
	end if;	
	end;
end loop;
close C01;
 
if (reg_integracao_w.qt_reg_log > 0) then 
	begin 
	 
	rollback;
 
	update	intpd_fila_transmissao 
	set	ie_status = 'E' 
	where	nr_sequencia = nr_sequencia_p;
 
	for i in 0..reg_integracao_w.qt_reg_log-1 loop		 
		INTPD_GRAVAR_LOG_RECEBIMENTO(nr_sequencia_p,reg_integracao_w.intpd_log_receb[i].ds_log,'INTPDTASY');
	end loop;
	end;
 
else 
 
	update	intpd_fila_transmissao 
	set	ie_status = 'S', 
		nr_seq_documento = inventario_w.nr_sequencia, 
		nr_doc_externo = c01_w.nr_documento_externo 
	where	nr_sequencia = nr_sequencia_p;
 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intpd_recebe_contagem_inv_mat ( nr_sequencia_p bigint, xml_p xml) FROM PUBLIC;

