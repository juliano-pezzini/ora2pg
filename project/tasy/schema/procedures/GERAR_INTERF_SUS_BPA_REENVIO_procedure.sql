-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_interf_sus_bpa_reenvio ( nr_seq_protocolo_p bigint, nr_folha_bpa_p bigint, nr_folha_bpi_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
 
nr_sequencia_w		bigint;
nr_interno_conta_w		bigint;
nr_atendimento_w		bigint;
cd_pessoa_fisica_w	varchar(10);
cd_pessoa_fisica_ww	varchar(10);
dt_mesano_referencia_w	timestamp;
qt_linhas_w		bigint		:= 1;
qt_folha_bpa_w		integer		:= 0;
nm_orgao_responsavel_w	varchar(30);
cd_orgao_responsavel_w	varchar(6);
cd_cgc_responsavel_w	varchar(14);
nm_orgao_destino_w	varchar(40);
ie_orgao_destino_w		varchar(1);
cd_cnes_hospital_w	integer;
cd_registro_w		smallint;
dt_procedimento_w		timestamp;
cd_cns_medico_exec_w	varchar(15);
cd_cns_medico_exec_ww	varchar(15)	:= '0';
cd_cbo_w		varchar(6);
cd_cbo_ww		varchar(6)	:= '0';
dt_atend_proc_w		timestamp;
nr_folha_bpa_w		bigint		:= 0;
nr_folha_bpa_con_w	smallint		:= 0;
nr_folha_bpa_c_geral_w	smallint		:= 0;
nr_folha_bpa_ind_w	smallint		:= 0;
nr_linha_folha_w		bigint		:= 0;
nr_linha_folha_con_w	smallint		:= 0;
nr_linha_folha_ind_w	smallint		:= 0;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
cd_cns_paciente_w	varchar(15);
ie_sexo_pac_w		varchar(1);
cd_municipio_ibge_w	varchar(6);
cd_cid_proc_w		varchar(4);
nr_idade_pac_w		smallint;
qt_procedimento_w		bigint;
cd_carater_atend_w	varchar(2);
ds_autorizacao_w		varchar(13);
nm_paciente_w		varchar(30);
dt_nascimento_w		varchar(10);
ie_tipo_bpa_w		varchar(1);
qt_proc_consolidado_w	bigint	:= 0;
qt_proc_individua_w	bigint	:= 0;
cd_dominio_w		bigint	:= 0;
cd_medico_executor_w	varchar(10);
cd_raca_cor_w		varchar(2)	:= 99;
cd_cnes_hosp_proc_w	integer;
cd_cnes_hosp_proc_ww	integer;
cd_estabelecimento_w	smallint;
cd_exec_exp_w		varchar(10);
cd_cbo_exec_exp_w	varchar(6);
cd_cgc_prestador_w	varchar(14);
cd_cnes_prestador_w	integer;
ie_cnes_prestador_w	varchar(1);
ie_data_ref_proc_w		varchar(2) 	:= 'N';
ie_ordena_paciente_w	varchar(2) 	:= 'N';
ds_ordem_w		varchar(30);
ie_data_entrada_w		varchar(10)	:= 'N';
cd_etnia_w		varchar(4) 	:= '0000';
cd_nacionalidade_w	varchar(8) 	:= '  ';
nr_seq_regra_w		bigint;
ie_exclui_procedimento_w	varchar(1)	:= 'N';
qt_existe_proc_w		bigint	:= 0;
qt_existe_reg_pest_w	bigint	:= 0;
cd_cgc_prestador_exp_w	varchar(14);
cd_servico_w		varchar(3);
cd_serv_classif_w		varchar(3);
cd_equipe_w		varchar(12);
tp_logradouro_w		varchar(3);
cd_cep_w		varchar(8);
ds_logradouro_w		varchar(100);
ds_compl_logradouro_w	varchar(10);
nr_logradouro_w		varchar(5);
ds_bairro_w		varchar(30);
ddd_fone_pac_w		varchar(2);
nr_fone_pac_w		varchar(9);
email_w			varchar(40);
cd_cnpj_fornecedor_w	sus_bpa_opme.cd_cnpj_fornecedor%type;
ie_versao_bpa_w		sus_parametros_bpa.ie_versao_bpa%type;
ie_agrupa_bpai_w	varchar(1) := 'N';
ie_remove_tplogr_end_w	sus_parametros_bpa.ie_remove_tplogr_end%type := 'N';
ds_tipo_logradouro_w	sus_tipo_logradouro.ds_tipo_logradouro%type;
dt_envio_conta_w	sus_protocolo_envio_conta.dt_envio_conta%type;
ie_considerar_cns_ant_w	parametro_faturamento.ie_considerar_cns_ant%type;
nr_cartao_nac_sus_ant_w cnes_profissional.nr_cartao_nac_sus_ant%type;	
 
/* Obter dados do detalhe */
 
c01 CURSOR FOR 
	SELECT	CASE WHEN ie_ordena_paciente_w='S' THEN ''  ELSE c.cd_procedimento END  ds_ordem, 
		substr(sus_obter_tiporeg_proc(c.cd_procedimento, c.ie_origem_proced,'C',1),1,2) cd_registro, 
		0 nr_interno_conta, 
		0 nr_atendimento, 
		' ' cd_pessoa_fisica, 
		c.cd_pessoa_fisica cd_pessoa_fisica_c, 
		' ' cd_cns_medico_exec, 
		to_date(null) dt_atend_proc, 
		c.cd_procedimento, 
		c.ie_origem_proced, 
		' ' cd_cns_paciente, 
		' ' ie_sexo_pac, 
		' ' cd_municipio_ibge, 
		'' cd_nacionalidade, 
		' ' cd_cid_proc, 
		substr(sus_obter_idade_pac_bpa(b.cd_pessoa_fisica, c.cd_procedimento, c.ie_origem_proced, c.dt_procedimento, 'A'),1,3) nr_idade_pac, 
		sum(c.qt_procedimento) qt_procedimento, 
		' ' cd_carater_atend, 
		' ' ds_autorizacao, 
		' ' nm_paciente, 
		'' dt_nascimento, 
		'C' ie_tipo_bpa, 
		' ' cd_medico_executor, 
		' ' cd_raca_cor, 
		'' cd_etnia, 
		--substr(nvl(c.cd_cbo, sus_obter_cbo_medico(nvl(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,sysdate,0)),1,6) cd_cbo, 
		substr(coalesce(sus_obter_regra_exp_exec(c.cd_procedimento, 
						c.ie_origem_proced, 
						coalesce(c.cd_medico_executor,c.cd_pessoa_fisica), 
						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0)), 
						b.cd_estabelecimento, 
						'N','S','N','C'), 
						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0))),1,6) cd_cbo, 
		substr(sus_obter_substituir_cnes(cd_cnes_hospital_w, c.cd_setor_atendimento, b.cd_estabelecimento,b.ie_tipo_atendimento),1,7) cd_cnes_hosp_proc, 
		cd_cgc_prestador, 
		'' cd_servico, 
		null cd_serv_classif, 
		'' cd_equipe, 
		'' tp_logradouro, 
		'' cd_cep, 
		'' ds_logradouro, 
		'' ds_compl_logradouro, 
		'' nr_logradouro, 
		'' ds_bairro, 
		'' ddd_fone_pac, 
		'' nr_fone_pac, 
		'' email, 
		'' cd_cnpj_fornecedor 
	from	sus_protocolo_envio_conta d, 
		procedimento_paciente	c, 
		atendimento_paciente	b, 
		conta_paciente		a 
	where	a.nr_seq_protocolo	= nr_seq_protocolo_p 
	and	a.nr_atendimento	= b.nr_atendimento 
	and	a.nr_interno_conta	= c.nr_interno_conta 
	and	c.ie_origem_proced	= 7 
	and	coalesce(c.cd_motivo_exc_conta::text, '') = '' 
	and   sus_obter_tiporeg_proc(c.cd_procedimento, c.ie_origem_proced, 'C', 11) = 1 
	and	sus_consiste_proc_comp(b.nr_atendimento, a.nr_interno_conta, c.cd_procedimento) = 'S' 
	and	coalesce(sus_obter_regra_expbpa(c.nr_sequencia),'N') = 'N' 
	and	a.nr_interno_conta	= d.nr_interno_conta 
	and	d.ie_status_ajuste	= 'A' 
	and	d.ie_situacao_retorno	= 'G' 
	and	d.dt_envio_conta	= dt_envio_conta_w 
	group by	CASE WHEN ie_ordena_paciente_w='S' THEN ''  ELSE c.cd_procedimento END , 
		substr(sus_obter_tiporeg_proc(c.cd_procedimento, c.ie_origem_proced,'C',1),1,2), 
		0, 0, ' ', c.cd_pessoa_fisica, ' ', 
		to_date(null), 
		c.cd_procedimento, 
		c.ie_origem_proced, 
		' ', ' ', ' ', '', ' ', 
		substr(sus_obter_idade_pac_bpa(b.cd_pessoa_fisica, c.cd_procedimento, c.ie_origem_proced, c.dt_procedimento, 'A'),1,3), 
		' ', ' ', ' ', '', 'C', ' ', ' ', '', 
		--substr(nvl(c.cd_cbo, sus_obter_cbo_medico(nvl(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,sysdate,0)),1,6), 
		substr(coalesce(sus_obter_regra_exp_exec(c.cd_procedimento, 
						c.ie_origem_proced, 
						coalesce(c.cd_medico_executor,c.cd_pessoa_fisica), 
						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0)), 
						b.cd_estabelecimento, 
						'N','S','N','C'), 
						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0))),1,6), 
		substr(sus_obter_substituir_cnes(cd_cnes_hospital_w, c.cd_setor_atendimento, b.cd_estabelecimento,b.ie_tipo_atendimento),1,7), 
		cd_cgc_prestador,'',null,'','','','','','','','','','' 
	having(sum(c.qt_procedimento) > 0) /*Geliard OS381654 16/11/2011*/
 
	
union all
 
	SELECT	CASE WHEN ie_ordena_paciente_w='S' THEN substr(obter_nome_pf(b.cd_pessoa_fisica),1,30)  ELSE c.cd_procedimento END  ds_ordem, 
		substr(sus_obter_tiporeg_proc(c.cd_procedimento, c.ie_origem_proced,'C',1),1,2) cd_registro, 
		a.nr_interno_conta, 
		b.nr_atendimento, 
		b.cd_pessoa_fisica,		 
		c.cd_pessoa_fisica cd_pessoa_fisica_c, 
		--substr(obter_dados_pf(nvl(c.cd_medico_executor,c.cd_pessoa_fisica),'CNS'),1,15) cd_cns_medico_exec, 
		substr(coalesce(sus_obter_regra_exp_exec(c.cd_procedimento, 
						c.ie_origem_proced, 
						coalesce(c.cd_medico_executor,c.cd_pessoa_fisica), 
						c.cd_cbo, 
						b.cd_estabelecimento, 
						'N','S','N','CNS'),obter_dados_pf(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),'CNS')),1,15) cd_cns_medico_exec, 
		CASE WHEN ie_data_entrada_w='N' THEN c.dt_procedimento  ELSE b.dt_entrada END  dt_atend_proc, 
		c.cd_procedimento, 
		c.ie_origem_proced, 
		substr(obter_dados_pf(b.cd_pessoa_fisica,'CNS'),1,15) cd_cns_paciente, 
		substr(obter_sexo_pf(b.cd_pessoa_fisica, 'C'),1,1) ie_sexo_pac, 
		substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'CDM'),1,6) cd_municipio_ibge, 
		lpad(substr(obter_dados_pf(b.cd_pessoa_fisica,'NC'),1,3),3,'0') cd_nacionalidade, 
		c.cd_doenca_cid cd_cid_proc, 
		substr(obter_idade_pf(b.cd_pessoa_fisica, c.dt_procedimento, 'A'),1,3) nr_idade_pac, 
		c.qt_procedimento, 
		coalesce(d.cd_carater_atendimento,ie_carater_inter_sus) cd_carater_atend, 
		substr(coalesce(coalesce(d.nr_bpa,c.nr_doc_convenio),' '),1,13) ds_autorizacao, 
		substr(obter_nome_pf(b.cd_pessoa_fisica),1,30) nm_paciente, 
		substr(obter_dados_pf(b.cd_pessoa_fisica,'DN'),1,15) dt_nascimento, 
		'I' ie_tipo_bpa, 
		--nvl(c.cd_medico_executor, c.cd_pessoa_fisica) cd_medico_executor, 
		coalesce(sus_obter_regra_exp_exec(c.cd_procedimento, 
						c.ie_origem_proced, 
						coalesce(c.cd_medico_executor,c.cd_pessoa_fisica), 
						c.cd_cbo, 
						b.cd_estabelecimento, 
						'N','S','N','M'),coalesce(c.cd_medico_executor,c.cd_pessoa_fisica)) cd_medico_executor, 
		lpad(sus_obter_cor_pele(b.cd_pessoa_fisica, 'C'),2,'0') cd_raca_cor, 
		lpad(CASE WHEN sus_obter_cor_pele(b.cd_pessoa_fisica, 'C')='5' THEN sus_obter_etnia(b.cd_pessoa_fisica, 'C')  ELSE '' END ,4,'0') cd_etnia, 
		--substr(nvl(c.cd_cbo, sus_obter_cbo_medico(nvl(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,sysdate,0)),1,6) cd_cbo, 
		substr(coalesce(sus_obter_regra_exp_exec(c.cd_procedimento, 
						c.ie_origem_proced, 
						coalesce(c.cd_medico_executor,c.cd_pessoa_fisica), 
						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0)), 
						b.cd_estabelecimento, 
						'N','S','N','C'), 
						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0))),1,6) cd_cbo, 
		substr(sus_obter_substituir_cnes(cd_cnes_hospital_w, c.cd_setor_atendimento, b.cd_estabelecimento,b.ie_tipo_atendimento),1,7) cd_cnes_hosp_proc, 
		cd_cgc_prestador, 
		coalesce(sus_obter_dados_servico(c.nr_seq_servico,'C'),'0') cd_servico, 
		coalesce(sus_obter_desc_classif(c.nr_seq_servico_classif,null,'C'),0) cd_serv_classif, 
		'' cd_equipe, 
		substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'TLS'),1,3) tp_logradouro, 
		substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'CEP'),1,8) cd_cep, 
		substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'EN'),1,100) ds_logradouro, 
		substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'CO'),1,10) ds_compl_logradouro, 
		upper(substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'NR'),1,5)) nr_logradouro, 
		substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'B'),1,30) ds_bairro, 
		substr(sus_obter_telefone_export(b.cd_pessoa_fisica),1,2) ddd_fone_pac, 
		substr(sus_obter_telefone_export(b.cd_pessoa_fisica),3,9) nr_fone_pac, 
		substr(obter_compl_pf(b.cd_pessoa_fisica, 1, 'M'),1,40) email, 
		e.cd_cnpj_fornecedor 
	FROM sus_protocolo_envio_conta f, atendimento_paciente b, procedimento_paciente c
LEFT OUTER JOIN sus_bpa_opme e ON (c.nr_sequencia = e.nr_seq_procedimento)
, conta_paciente a
LEFT OUTER JOIN sus_bpa_unif d ON (a.nr_interno_conta = d.nr_interno_conta)
WHERE a.nr_seq_protocolo	= nr_seq_protocolo_p and a.nr_atendimento	= b.nr_atendimento and a.nr_interno_conta	= c.nr_interno_conta   and c.ie_origem_proced	= 7 and coalesce(c.cd_motivo_exc_conta::text, '') = '' and sus_obter_tiporeg_proc(c.cd_procedimento, c.ie_origem_proced, 'C', 12) = 2 and coalesce(sus_obter_regra_expbpa(c.nr_sequencia),'N') = 'N' and sus_consiste_proc_comp(b.nr_atendimento, a.nr_interno_conta, c.cd_procedimento) = 'S' and a.nr_interno_conta	= f.nr_interno_conta and f.ie_status_ajuste	= 'A' and f.ie_situacao_retorno	= 'G' and f.dt_envio_conta	= dt_envio_conta_w order by	cd_cnes_hosp_proc, 
		cd_cns_medico_exec, 
		ds_ordem, 
		cd_procedimento, 
		cd_cbo, 
		nr_idade_pac;
		
type 		fetch_array is table of c01%rowtype;
s_array 	fetch_array;
i		integer := 1;
type vetor is table of fetch_array index by integer;
vetor_c01_w			vetor;

BEGIN 
 
ie_ordena_paciente_w := obter_param_usuario(1125, 52, obter_perfil_ativo, nm_usuario_p, 0, ie_ordena_paciente_w);
ie_data_ref_proc_w := obter_param_usuario(1125, 59, obter_perfil_ativo, nm_usuario_p, 0, ie_data_ref_proc_w);
ie_data_entrada_w	:= coalesce(obter_valor_param_usuario(1125,73,obter_perfil_ativo,nm_usuario_p,0),'N');
ie_agrupa_bpai_w	:= coalesce(obter_valor_param_usuario(1125,162,obter_perfil_ativo,nm_usuario_p,0),'N');
 
if (coalesce(ie_data_ref_proc_w,'N') = 'S') then 
	CALL gerar_interf_sus_bpa_rp_reenv(	nr_seq_protocolo_p, 
					nr_folha_bpa_p, 
					nr_folha_bpi_p, 
					nm_usuario_p);
else 
	begin 
 
	/* Limpar tabela */
 
	delete	from w_susbpa_interf 
	where	nr_seq_protocolo	= nr_seq_protocolo_p;
	 
	select	max(dt_envio_conta) 
	into STRICT	dt_envio_conta_w 
	from	sus_protocolo_envio_conta 
	where	nr_seq_protocolo	= nr_seq_protocolo_p;
 
	/* Obter dados do cabeçalho */
 
	begin 
	select	a.dt_mesano_referencia, 
		substr(obter_nome_estabelecimento(b.cd_estabelecimento),1,30), 
		b.cd_orgao_responsavel, 
		substr(obter_cgc_estabelecimento(b.cd_estabelecimento),1,14), 
		b.nm_orgao_destino, 
		b.ie_orgao_destino, 
		sus_obter_substituir_cnes(b.cd_cnes_hospital, a.cd_setor_atendimento, b.cd_estabelecimento,0), 
		b.cd_estabelecimento, 
		b.ie_cnes_prestador, 
		b.ie_versao_bpa, 
		coalesce(b.ie_remove_tplogr_end,'N') 
	into STRICT	dt_mesano_referencia_w, 
		nm_orgao_responsavel_w, 
		cd_orgao_responsavel_w, 
		cd_cgc_responsavel_w, 
		nm_orgao_destino_w, 
		ie_orgao_destino_w, 
		cd_cnes_hospital_w, 
		cd_estabelecimento_w, 
		ie_cnes_prestador_w, 
		ie_versao_bpa_w, 
		ie_remove_tplogr_end_w 
	from	sus_parametros_bpa	b, 
		protocolo_convenio	a 
	where	a.nr_seq_protocolo	= nr_seq_protocolo_p 
	and	a.cd_estabelecimento	= b.cd_estabelecimento;
	exception 
		when others then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(204006);
		/*Não foram encontrados dados na pasta Cadastros da função SUS BPA. Estas informações são necessárias para a exportação.*/
 
	end;
 
	/* Obter o valor do campo DOMINIO, o calculo é feito pelo MOD da soma dos códigos dos procedimentos com suas respectivas quantidades mais 1111 */
 
	select	mod((sum(c.cd_procedimento) + sum(c.qt_procedimento)),1111) + 1111 
	into STRICT	cd_dominio_w 
	from	procedimento_paciente	c, 
		atendimento_paciente	b, 
		conta_paciente		a 
	where	a.nr_seq_protocolo	= nr_seq_protocolo_p 
	and	a.nr_atendimento	= b.nr_atendimento 
	and	a.nr_interno_conta	= c.nr_interno_conta 
	and	c.ie_origem_proced	= 7;
 
	select	nextval('w_susbpa_interf_seq') 
	into STRICT	nr_sequencia_w 
	;
 
	/* Inserir o registro do cabecalho */
 
	insert into w_susbpa_interf( 
			nr_sequencia, 
			nr_seq_protocolo, 
			nr_interno_conta, 
			nr_atendimento, 
			cd_pessoa_fisica, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			ds_registro, 
			dt_mesano_referencia, 
			qt_linhas, 
			qt_folha_bpa, 
			nm_orgao_responsavel, 
			cd_orgao_responsavel, 
			cd_cgc_responsavel, 
			nm_orgao_destino, 
			ie_orgao_destino, 
			ds_versao, 
			ie_cabecalho, 
			cd_dominio, 
			ie_versao_bpa) 
		values (	nr_sequencia_w, 
			nr_seq_protocolo_p, 
			nr_interno_conta_w, 
			nr_atendimento_w, 
			cd_pessoa_fisica_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			'*BPA*', 
			dt_mesano_referencia_w, 
			qt_linhas_w, 
			qt_folha_bpa_w, 
			nm_orgao_responsavel_w, 
			cd_orgao_responsavel_w, 
			cd_cgc_responsavel_w, 
			nm_orgao_destino_w, 
			ie_orgao_destino_w, 
			'*BPABeta4*', 
			'C', 
			substr(cd_dominio_w,1,4), 
			ie_versao_bpa_w);
 
	/* Contador de procedimentos consolidados */
 
	select	count(b.cd_procedimento) 
	into STRICT	qt_proc_consolidado_w 
	from	sus_procedimento_registro	c, 
		procedimento_paciente		b, 
		conta_paciente 			a 
	where	a.nr_seq_protocolo	= nr_seq_protocolo_p 
	and	a.nr_interno_conta 	= b.nr_interno_conta 
	and	b.cd_procedimento	= c.cd_procedimento 
	and	b.ie_origem_proced	= c.ie_origem_proced 
	and	c.cd_registro		= 1 
	and	coalesce(sus_obter_reg_proc_bpa(c.cd_procedimento,c.ie_origem_proced),c.cd_registro) = 1;
	 
	if (qt_proc_consolidado_w	> 0) then 
		nr_folha_bpa_con_w	:= 1;
	end if;
 
	/* Contador de procedimentos individualizado */
 
	/*select	count(b.cd_procedimento) 
	into	qt_proc_individua_w 
	from	sus_procedimento_registro	c, 
		procedimento_paciente		b, 
		conta_paciente 			a 
	where	a.nr_seq_protocolo	= nr_seq_protocolo_p 
	and	a.nr_interno_conta 	= b.nr_interno_conta 
	and	b.cd_procedimento	= c.cd_procedimento 
	and	b.ie_origem_proced	= c.ie_origem_proced 
	and	c.cd_registro		= 2 
	and	nvl(sus_obter_reg_proc_bpa(c.cd_procedimento,c.ie_origem_proced),c.cd_registro) = 2; 
	 
	if	(qt_proc_individua_w	> 0) then 
		nr_folha_bpa_ind_w	:= 1; 
	end if; 
	*/
 
 
	if (nr_folha_bpa_p > 0) then 
		if	((nr_folha_bpa_p + 1) < 1000) then 
			nr_folha_bpa_con_w	:= nr_folha_bpa_p + 1;
		else 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(204007,'NR_FOLHA_BPA_CON_P='||nr_folha_bpa_con_w||';NR_FOLHA_BPA_P='||nr_folha_bpa_p);
			/*Número máximo de folhas excedido! 
			nr_folha_bpa_con_w: #@nr_folha_bpa_con_p#@ nr_folha_bpa_p:#@nr_folha_bpa_p#@	 
			Verifique a quantidade de linhas no banco do BPAMag, ou efetue a limpeza do mesmo para geração do arquivo.o para geração do arquivo.*/
 
		end if;
	end if;
	 
	if (nr_folha_bpi_p > 0) then 
		nr_folha_bpa_ind_w 	:= nr_folha_bpi_p;
	end if;
	 
	open c01;
	loop 
	fetch c01 bulk collect into s_array limit 10000;
		vetor_c01_w(i) := s_array;
		i := i + 1;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	end loop;
	close c01;
 
	for i in 1..vetor_c01_w.count loop 
	 	begin 
		s_array := vetor_c01_w(i);
		for z in 1..s_array.count loop 
			begin 
 
			ds_ordem_w		:= s_array[z].ds_ordem;
			cd_registro_w		:= s_array[z].cd_registro;
			nr_interno_conta_w	:= s_array[z].nr_interno_conta;
			nr_atendimento_w	:= s_array[z].nr_atendimento;
			cd_pessoa_fisica_w	:= s_array[z].cd_pessoa_fisica;
			cd_pessoa_fisica_ww := s_array[z].cd_pessoa_fisica_c;
			cd_cns_medico_exec_w	:= s_array[z].cd_cns_medico_exec;
			dt_atend_proc_w		:= s_array[z].dt_atend_proc;
			cd_procedimento_w	:= s_array[z].cd_procedimento;
			ie_origem_proced_w	:= s_array[z].ie_origem_proced;
			cd_cns_paciente_w	:= s_array[z].cd_cns_paciente;
			ie_sexo_pac_w		:= s_array[z].ie_sexo_pac;
			cd_municipio_ibge_w	:= s_array[z].cd_municipio_ibge;
			cd_nacionalidade_w	:= s_array[z].cd_nacionalidade;
			cd_cid_proc_w		:= s_array[z].cd_cid_proc;
			nr_idade_pac_w		:= somente_numero(s_array[z].nr_idade_pac);
			qt_procedimento_w	:= s_array[z].qt_procedimento;
			cd_carater_atend_w	:= s_array[z].cd_carater_atend;
			ds_autorizacao_w	:= s_array[z].ds_autorizacao;
			nm_paciente_w		:= sus_elimina_caracteres_esp(s_array[z].nm_paciente);
			dt_nascimento_w		:= s_array[z].dt_nascimento;
			ie_tipo_bpa_w		:= s_array[z].ie_tipo_bpa;
			cd_medico_executor_w	:= s_array[z].cd_medico_executor;
			cd_raca_cor_w		:= s_array[z].cd_raca_cor;
			cd_etnia_w		:= s_array[z].cd_etnia;
			cd_cbo_w		:= s_array[z].cd_cbo;
			cd_cnes_hosp_proc_w	:= s_array[z].cd_cnes_hosp_proc;
			cd_cgc_prestador_w	:= s_array[z].cd_cgc_prestador;
			cd_servico_w		:= s_array[z].cd_servico;
			cd_serv_classif_w	:= s_array[z].cd_serv_classif;
			cd_equipe_w		:= s_array[z].cd_equipe;
			tp_logradouro_w		:= s_array[z].tp_logradouro;
			cd_cep_w		:= s_array[z].cd_cep;
			ds_logradouro_w		:= sus_elimina_caracteres_esp(replace(elimina_acentos(upper(s_array[z].ds_logradouro)),'Ç','C'));
			ds_compl_logradouro_w	:= sus_elimina_caracteres_esp(replace(elimina_acentos(upper(s_array[z].ds_compl_logradouro)),'Ç','C'));
			nr_logradouro_w		:= s_array[z].nr_logradouro;
			ds_bairro_w		:= sus_elimina_caracteres_esp(replace(elimina_acentos(upper(s_array[z].ds_bairro)),'Ç','C'));
			ddd_fone_pac_w		:= s_array[z].ddd_fone_pac;
			nr_fone_pac_w		:= s_array[z].nr_fone_pac;
			email_w			:= s_array[z].email;
			cd_cnpj_fornecedor_w	:= s_array[z].cd_cnpj_fornecedor;
 
			begin 
			select	coalesce(ie_considerar_cns_ant, 'N') 
			into STRICT	ie_considerar_cns_ant_w 
			from	parametro_faturamento 
			where	cd_estabelecimento=wheb_usuario_pck.get_cd_estabelecimento;
			exception 
				when others then 
				ie_considerar_cns_ant_w :='N';
			end;
			 
			if (ie_considerar_cns_ant_w = 'S') then 
				begin 
					select	coalesce(b.nr_cartao_nac_sus_ant, ' ') 
					into STRICT	nr_cartao_nac_sus_ant_w 
					from 	cnes_profissional 	b 
					where	b.cd_pessoa_fisica = coalesce(cd_medico_executor_w,cd_pessoa_fisica_ww)  LIMIT 1;
					exception 
				when others then 
					nr_cartao_nac_sus_ant_w := ' ';
				end;
				if (nr_cartao_nac_sus_ant_w <> ' ') then 
					cd_cns_medico_exec_w := nr_cartao_nac_sus_ant_w;
				end if;
				 
				begin 
					select	coalesce(b.nr_cartao_nac_sus_ant, ' ') 
					into STRICT	nr_cartao_nac_sus_ant_w 
					from 	cnes_profissional 	b 
					where	b.cd_pessoa_fisica = cd_pessoa_fisica_w  LIMIT 1;
					exception 
				when others then 
					nr_cartao_nac_sus_ant_w := ' ';
				end;
				if (nr_cartao_nac_sus_ant_w <> ' ') then 
					cd_cns_paciente_w := nr_cartao_nac_sus_ant_w;
				end if;
			end if;
			 
			 
			/* Obter dados da BPA Unificada */
 
			if (ie_tipo_bpa_w	= 'I') then 
				begin 
				select	coalesce(nr_bpa, ''), 
					coalesce(cd_carater_atendimento, cd_carater_atend_w) 
				into STRICT	ds_autorizacao_w, 
					cd_carater_atend_w 
				from	sus_bpa_unif 
				where	nr_interno_conta	= nr_interno_conta_w;
				exception 
					when others then 
					ds_autorizacao_w		:= ds_autorizacao_w;
					cd_carater_atend_w	:= cd_carater_atend_w;
				end;
 
				cd_carater_atend_w	:= lpad(cd_carater_atend_w,2,'0');
			end if;
 
			cd_cgc_prestador_exp_w := sus_obter_prest_exp(cd_procedimento_w, ie_origem_proced_w, cd_cgc_prestador_w, cd_estabelecimento_w, 'N', 'S', 'N', cd_cgc_prestador_exp_w);
		 
			if (cd_cgc_prestador_exp_w IS NOT NULL AND cd_cgc_prestador_exp_w::text <> '') then 
				cd_cgc_prestador_w	:= cd_cgc_prestador_exp_w;			
			end if;
			 
			if (ie_cnes_prestador_w		= 'S') and (cd_cgc_prestador_w		<> cd_cgc_responsavel_w) then 
				begin 
				select	coalesce(max(cd_cnes),0) 
				into STRICT	cd_cnes_prestador_w 
				from	pessoa_juridica 
				where	cd_cgc	= cd_cgc_prestador_w;
				exception 
				when others then 
					cd_cnes_prestador_w := 0;
				end;
				if (coalesce(cd_cnes_prestador_w,0) > 0) then 
					cd_cnes_hosp_proc_w	:= cd_cnes_prestador_w;
				end if;
			end if;
				 
			--sus_obter_exec_exp_aih(cd_procedimento_w, 7, cd_medico_executor_w, cd_cbo_w, cd_estabelecimento_w, 'N', 'S', 'N', cd_exec_exp_w, cd_cbo_exec_exp_w); 
 
			qt_existe_proc_w := 0;
 
			/*if	(cd_cbo_exec_exp_w is not null) and 
				(cd_exec_exp_w is not null) then 
				begin 
				cd_medico_executor_w	:= cd_exec_exp_w; 
				cd_cbo_w		:= cd_cbo_exec_exp_w; 
 
				cd_cns_medico_exec_w	:= substr(obter_dados_pf(cd_exec_exp_w,'CNS'),1,15);*/
				 
 
				--OS Angelina Caron, problema para agrupar consolidados com mesmo cbo da regra de exportação. OS 316031 
 
				select 	count(1) 
				into STRICT	qt_existe_proc_w 
				from	w_susbpa_interf 
				where	cd_procedimento = cd_procedimento_w 
				and	ie_tipo_bpa	= 'C' 
				and	cd_cbo		= cd_cbo_w 
				and	cd_ups		= cd_cnes_hosp_proc_w 
				and	nr_idade_pac	= nr_idade_pac_w 
				and	nr_seq_protocolo = nr_seq_protocolo_p 
				and	nm_usuario_nrec	 = nm_usuario_p  LIMIT 1;
 
				if (qt_existe_proc_w > 0) then 
					begin 
					update	w_susbpa_interf 
					set	qt_procedimento = qt_procedimento + qt_procedimento_w 
					where	cd_procedimento = cd_procedimento_w 
					and	cd_cbo = cd_cbo_w 
					and	cd_ups		= cd_cnes_hosp_proc_w 
					and	nr_idade_pac	= nr_idade_pac_w 
					and	ie_tipo_bpa = 'C' 
					and	nr_seq_protocolo = nr_seq_protocolo_p 
					and	nm_usuario_nrec	 = nm_usuario_p;
					end;
				end if;
 
				/*end; 
			end if;*/
 
			 
		/*	if	(ie_tipo_bpa_w = 'C') then 
				begin 
				 
				select	count(1) 
				into	qt_existe_reg_pest_w 
				from	sus_regra_exp_prest 
				where	ie_bpa = 'S' 
				and	rownum = 1; 
				 
				if	(qt_existe_reg_pest_w > 0) then 
					begin 
					 
					select 	count(1) 
					into	qt_existe_proc_w 
					from	w_susbpa_interf 
					where	cd_procedimento = cd_procedimento_w 
					and	ie_tipo_bpa	= 'C' 
					and	cd_cbo		= cd_cbo_w 
					and	cd_ups		= cd_cnes_hosp_proc_w 
					and	nr_idade_pac	= nr_idade_pac_w 
					and	nr_seq_protocolo = nr_seq_protocolo_p 
					and	nm_usuario_nrec	 = nm_usuario_p 
					and	rownum = 1; 
		 
					if	(qt_existe_proc_w > 0) then 
						begin 
						update	w_susbpa_interf 
						set	qt_procedimento = qt_procedimento + qt_procedimento_w 
						where	cd_procedimento = cd_procedimento_w 
						and	cd_cbo = cd_cbo_w 
						and	cd_ups		= cd_cnes_hosp_proc_w 
						and	nr_idade_pac	= nr_idade_pac_w 
						and	ie_tipo_bpa = 'C' 
						and	nr_seq_protocolo = nr_seq_protocolo_p 
						and	nm_usuario_nrec	 = nm_usuario_p; 
						end; 
					end if; 
					end; 
				end if; 
			 
				end; 
			end if;	*/
 
			 
			if (coalesce(ie_agrupa_bpai_w,'N') = 'S') and (ie_tipo_bpa_w = 'I') then 
				begin 
				 
				select 	count(1) 
				into STRICT	qt_existe_proc_w 
				from	w_susbpa_interf 
				where	cd_procedimento		= cd_procedimento_w 
				and	ie_tipo_bpa		= 'I' 
				and	cd_cns_medico_exec	= cd_cns_medico_exec_w 
				and	cd_cbo			= cd_cbo_w 
				and	cd_ups			= cd_cnes_hosp_proc_w 
				and	cd_pessoa_fisica	= cd_pessoa_fisica_w 
				and	coalesce(ds_autorizacao,'X') = coalesce(ds_autorizacao_w,'X') 
				and	nr_seq_protocolo 	= nr_seq_protocolo_p 
				and	nm_usuario_nrec	 	= nm_usuario_p  LIMIT 1;
				 
				if (qt_existe_proc_w > 0) then 
					begin 
					update	w_susbpa_interf 
					set	qt_procedimento = qt_procedimento + qt_procedimento_w 
					where	cd_procedimento		= cd_procedimento_w 
					and	ie_tipo_bpa		= 'I' 
					and	cd_cns_medico_exec	= cd_cns_medico_exec_w 
					and	cd_cbo			= cd_cbo_w 
					and	cd_ups			= cd_cnes_hosp_proc_w 
					and	cd_pessoa_fisica	= cd_pessoa_fisica_w 
					and	coalesce(ds_autorizacao,'X') = coalesce(ds_autorizacao_w,'X') 
					and	nr_seq_protocolo 	= nr_seq_protocolo_p 
					and	nm_usuario_nrec	 	= nm_usuario_p;										
					end;
				end if;
				 
				end;
			end if;
 
			if (qt_existe_proc_w = 0) then 
				begin 
				if (ie_tipo_bpa_w	= 'C') then 
					begin 
					cd_medico_executor_w	:= ' ';
					end;
				end if;
 
				 
				/* Cada folha possui 99 linhas, se atingir esse limite ou ser outro profissional BPI deve ser criada uma nova folha */
 
				if (ie_tipo_bpa_w	= 'C') then 
					if (nr_linha_folha_w	= 20) then 
						nr_linha_folha_con_w	:= 0;
						nr_folha_bpa_con_w	:= nr_folha_bpa_con_w + 1;
					end if;
					if (cd_cnes_hosp_proc_ww 	<> cd_cnes_hosp_proc_w)	then 
						nr_linha_folha_con_w	:= 0;
						nr_folha_bpa_con_w	:= 1;
					end if;
					if (nr_linha_folha_w	= 20) or (cd_cnes_hosp_proc_ww 	<> cd_cnes_hosp_proc_w) then 
						nr_folha_bpa_c_geral_w	:= nr_folha_bpa_c_geral_w + 1;
					end if;
				elsif (ie_tipo_bpa_w	= 'I') then 
					if (nr_linha_folha_w	= 99) or (cd_cns_medico_exec_w	<> cd_cns_medico_exec_ww) or (cd_cbo_w 		<> cd_cbo_ww) then 
						nr_linha_folha_ind_w	:= 0;
						if (nr_folha_bpa_ind_w < 98901) then 
							nr_folha_bpa_ind_w	:= nr_folha_bpa_ind_w + 1;
						else 
							CALL wheb_mensagem_pck.exibir_mensagem_abort(279833);
						end if;
					end if;
				end if;
 
				/* Contador de linhas do arquivo */
 
				qt_linhas_w		:= qt_linhas_w + 1; /* Número de linhas do BPA gravadas */
 
 
				/* Se o procedimento for consolidado então será inserida as folhas e o numero da linha do consolidado se não do Individualizado */
				if (ie_tipo_bpa_w	= 'C') then 
					nr_linha_folha_con_w	:= nr_linha_folha_con_w + 1;
					nr_linha_folha_w		:= nr_linha_folha_con_w;
					nr_folha_bpa_w		:= nr_folha_bpa_con_w;
				elsif (ie_tipo_bpa_w	= 'I') then 
					nr_linha_folha_ind_w	:= nr_linha_folha_ind_w + 1;
					nr_linha_folha_w		:= nr_linha_folha_ind_w;
					nr_folha_bpa_w		:= nr_folha_bpa_ind_w;
				end if;
 
				/* Felipe - 28/02/2008 - OS 80604 - Esse código é feito de 7 em 7 pacientes */
 
				if (cd_procedimento_w	= 0301080160) then 
					qt_procedimento_w		:= trunc(dividir(qt_procedimento_w,7));
				end if;
				 
				if (ie_remove_tplogr_end_w = 'S') and (length(ds_logradouro_w) > 30)	then 
					begin 
					ds_tipo_logradouro_w	:= substr(sus_obter_desc_tipo_logr(tp_logradouro_w),1,40);
					 
					if (upper(substr(ds_logradouro_w,1,length(ds_tipo_logradouro_w)+1)) = upper(ds_tipo_logradouro_w)||' ') then 
						ds_logradouro_w	:= substr(substr(ds_logradouro_w,length(ds_tipo_logradouro_w)+2,length(ds_logradouro_w)),1,30);
					else 
						ds_logradouro_w := substr(ds_logradouro_w,1,30);
					end if;
					 
					end;
				elsif (ie_remove_tplogr_end_w = 'T') and (tp_logradouro_w IS NOT NULL AND tp_logradouro_w::text <> '') then 
					begin 
					ds_tipo_logradouro_w	:= substr(sus_obter_desc_tipo_logr(tp_logradouro_w),1,40);
					 
					if (upper(substr(ds_logradouro_w,1,length(ds_tipo_logradouro_w)+1)) = upper(ds_tipo_logradouro_w)||' ') then 
						ds_logradouro_w	:= substr(substr(ds_logradouro_w,length(ds_tipo_logradouro_w)+2,length(ds_logradouro_w)),1,30);
					else 
						ds_logradouro_w := substr(ds_logradouro_w,1,30);
					end if;
					 
					end;
				else	 
					ds_logradouro_w := substr(ds_logradouro_w,1,30);
				end if;
 
				select	nextval('w_susbpa_interf_seq') 
				into STRICT	nr_sequencia_w 
				;
 
				insert into w_susbpa_interf( 
						nr_sequencia, 
						nr_seq_protocolo, 
						nr_interno_conta, 
						nr_atendimento, 
						cd_pessoa_fisica, 
						dt_atualizacao, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						ds_registro, 
						dt_mesano_referencia, 
						qt_linhas, 
						qt_folha_bpa, 
						nm_orgao_responsavel, 
						cd_orgao_responsavel, 
						cd_cgc_responsavel, 
						nm_orgao_destino, 
						ie_orgao_destino, 
						ds_versao, 
						cd_ups, 
						dt_competencia, 
						cd_cns_medico_exec, 
						cd_cbo, 
						dt_procedimento, 
						nr_folha_bpa, 
						nr_linha_folha, 
						cd_procedimento, 
						cd_cns_paciente, 
						ie_sexo_pac, 
						cd_municipio_ibge, 
						cd_cid_proc, 
						nr_idade_pac, 
						qt_procedimento, 
						cd_carater_atendimento, 
						ds_autorizacao, 
						ds_origem_informacao, 
						nm_paciente, 
						dt_nascimento, 
						ie_tipo_bpa, 
						ie_cabecalho, 
						cd_dominio, 
						cd_raca_cor, 
						cd_etnia, 
						cd_nacionalidade, 
						cd_servico, 
						cd_servico_classif, 
						cd_equipe, 
						tp_logradouro, 
						cd_cep, 
						ds_logradouro, 
						ds_compl_logradouro, 
						nr_logradouro, 
						ds_bairro, 
						ddd_fone_pac, 
						nr_fone_pac, 
						ds_email, 
						cd_cnpj_fornecedor) 
				values (		nr_sequencia_w, 
						nr_seq_protocolo_p, 
						nr_interno_conta_w, 
						nr_atendimento_w, 
						cd_pessoa_fisica_w, 
						clock_timestamp(), 
						nm_usuario_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						'*BPA*', 
						dt_mesano_referencia_w, 
						qt_linhas_w, 
						qt_folha_bpa_w, 
						nm_orgao_responsavel_w, 
						cd_orgao_responsavel_w, 
						cd_cgc_responsavel_w, 
						nm_orgao_destino_w, 
						ie_orgao_destino_w, 
						'*BPABeta4*', 
						coalesce(cd_cnes_hosp_proc_w, cd_cnes_hospital_w), 
						dt_mesano_referencia_w, 
						coalesce(cd_cns_medico_exec_w,0), 
						cd_cbo_w, 
						dt_atend_proc_w, 
						nr_folha_bpa_w, 
						nr_linha_folha_w, 
						cd_procedimento_w, 
						cd_cns_paciente_w, 
						ie_sexo_pac_w, 
						cd_municipio_ibge_w, 
						cd_cid_proc_w, 
						(nr_idade_pac_w)::numeric , 
						qt_procedimento_w, 
						cd_carater_atend_w, 
						ds_autorizacao_w, 
						'BPA', 
						nm_paciente_w, 
						to_date(dt_nascimento_w,'dd/mm/yyyy'), 
						ie_tipo_bpa_w, 
						'P', 
						substr(cd_dominio_w,1,4), 
						cd_raca_cor_w, 
						cd_etnia_w, 
						cd_nacionalidade_w, 
						cd_servico_w, 
						cd_serv_classif_w, 
						cd_equipe_w, 
						tp_logradouro_w, 
						cd_cep_w, 
						ds_logradouro_w, 
						ds_compl_logradouro_w, 
						nr_logradouro_w, 
						ds_bairro_w, 
						ddd_fone_pac_w, 
						nr_fone_pac_w, 
						email_w, 
						cd_cnpj_fornecedor_w);
				 
				/*Adicionado este IF pois quando o primeiro registro do protocolo é consolidado, 
				estava salvando informações no controlador do individualizado e por isso não trocava de folha. 
				Geliard 24/06/11, OS 329586*/
 
				if (ie_tipo_bpa_w	= 'I') then 
					cd_cns_medico_exec_ww	:= cd_cns_medico_exec_w;
					cd_cbo_ww		:= cd_cbo_w;
				end if;
				 
				cd_cnes_hosp_proc_ww := cd_cnes_hosp_proc_w;
				 
				end;
			end if;
		 
			end;
		end loop;
		end;
	end loop;
 
	/* Somatório da quantidade total de folhas do arquivo */
 
	qt_folha_bpa_w	:= nr_folha_bpa_c_geral_w + nr_folha_bpa_ind_w;
 
	/* Atualizar na tabela temporária a quantidade linhas e de folhas do arquivo */
 
	update	w_susbpa_interf 
	set	qt_linhas		= qt_linhas_w, 
		qt_folha_bpa	= qt_folha_bpa_w 
	where	nr_seq_protocolo	= nr_seq_protocolo_p;
 
	commit;
 
	end;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_interf_sus_bpa_reenvio ( nr_seq_protocolo_p bigint, nr_folha_bpa_p bigint, nr_folha_bpi_p bigint, nm_usuario_p text) FROM PUBLIC;

