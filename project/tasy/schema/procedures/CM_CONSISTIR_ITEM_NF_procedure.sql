-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cm_consistir_item_nf ( nr_sequencia_p bigint, nr_item_nf_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE



cd_unidade_medida_compra_w		varchar(30);
cd_unidade_medida_ordem_w		varchar(30);
cd_unidade_medida_estoque_w		varchar(30);
cd_unidade_compra_material_w		varchar(30);
cd_unidade_estoque_material_w		varchar(30);
qt_conv_compra_estoque_w			double precision;
cd_cgc_w				varchar(14);
cd_cgc_emitente_w			varchar(14);
cd_conta_contabil_w			varchar(20);
cd_conta_contabil_nota_w			varchar(20);
cd_lote_fabricacao_w			varchar(20);
cd_estabelecimento_w			smallint;
cd_material_w				integer;
nr_seq_marca_w				bigint;
cd_material_generico_w			integer;
cd_material_estoque_w			integer;
cd_material_gen_oci_w			integer;
cd_material_est_oci_w			integer;
cd_material_ordem_w			integer;
cd_natureza_nota_w			smallint;
cd_natureza_item_w			smallint;
cd_local_estoque_w			smallint;
cd_centro_custo_w				integer;
cd_operacao_nota_w			smallint;
cd_local_conta_w				smallint	:= null;
cd_cond_pagto_oc_w			bigint;
cd_cond_pagto_nf_w			bigint;
ds_erro_w				varchar(4000);
ds_erro_grupo_conta_w			varchar(255);
ds_material_w				varchar(255);
dt_mesano_referencia_w			timestamp;
dt_validade_w				timestamp;
ie_consignado_operacao_w			varchar(1);
ie_consignado_material_w			varchar(1);
ie_consiste_venc_contrato_w			varchar(1);
ie_local_valido_w				varchar(1);
ie_material_estoque_w			varchar(1);
ie_altera_material_w			varchar(1);
ie_obriga_conta_contabil_mat_w		varchar(1);
ie_obriga_conta_cont_proc_w		varchar(1);
ie_consumo_w				varchar(1);
ie_coluna_resumo_w			varchar(1);
ie_ent_sai_op_estoque_w			varchar(1);
ie_situacao_w				varchar(1);
ie_situacao_ww				varchar(1);
ie_estoque_lote_w				varchar(1);
ie_tipo_requisicao_w			varchar(3);
ie_consig_w				boolean;
ie_local_direto_w				smallint;
ie_tipo_conta_w				smallint;
ie_clinica_w				integer;
nr_ordem_compra_w			bigint;
nr_item_oci_w				integer;
pr_dif_valor_nota_ordem_w			double precision;
pr_dif_quant_nota_ordem_w			double precision;
ie_dif_valor_nota_ordem_w			varchar(1);
ie_dif_quant_nota_ordem_w			varchar(2);
qt_item_nf_w				double precision 	:= 0;
qt_item_nf_ww				double precision 	:= 0;
qt_total_item_nf_w				double precision 	:= 0;
qt_item_nf_aConsistir_w			double precision 	:= 0;
qt_estoque_w				double precision;
qt_saldo_ordem_w				double precision;
qt_saldo_ordem_ww			double precision;
qt_item_rateio_w				bigint;
qt_falta_lote_w				smallint;
qt_item_rateio_inativo_w			integer;
vl_unitario_item_nf_w			double precision 	:= 0;
vl_unitario_ordem_w			double precision;
vl_total_item_nf_w				double precision;
vl_arredondamento_w			double precision;
vl_rateio_w				double precision;
qt_rateio_w				double precision;
vl_dif_item_w				double precision;
vl_diferenca_w				double precision;
ie_consiste_saldo_dev_w			varchar(1);
ie_regra_dif_valor_w			varchar(1);
ie_regra_dif_quant_w			varchar(1);
ie_consiste_validade_anvisa_w		varchar(1);
ie_consiste_valid_marca_mat_w		varchar(1);
qt_validade_vencida_w			smallint;
dt_validade_anvisa_marca_w			timestamp;
qt_existe_rateio_w				smallint;
nr_contrato_w				bigint;
vl_liquido_w				double precision;
vl_liquido_item_w				double precision;
vl_unitario_diferenca_w			double precision;
vl_total_contrato_w				double precision;
ie_consiste_just_contrato_w			varchar(1);
ie_obriga_just_contrato_w			varchar(1);
dt_entrada_saida_w			timestamp;
ie_conta_vigente_w			varchar(1);
ds_justificativa_w				varchar(255);
ie_tipo_nota_w				varchar(3);
ie_obriga_local_centro_w			varchar(20);
nr_seq_conta_financ_w			bigint;
ie_sit_conta_fin_w				varchar(1);
ie_tipo_material_w				varchar(3);
ie_consiste_med_generico_w			varchar(1);
ie_forma_vinc_nota_consig_w		varchar(1);
cd_oper_nota_ent_vinc_consig_w		smallint;
cd_oper_nota_fat_vinc_consig_w		smallint;
qt_item_sem_vinc_consig_w			integer;
ie_obriga_w				varchar(10);
dt_prevista_entrega_w			timestamp;
qt_dias_entrega_antecipada_w		integer;
dt_prevista_oci_w				timestamp;
dt_registro_w				timestamp;
ie_consiste_qt_item_saldo_oc_w		varchar(01);
ie_consiste_local_w				varchar(01);
ie_atualiza_estoque_w			varchar(01);
qt_existe_regra_w				bigint;
ie_consiste_nr_atend_w			varchar(01);
nr_atendimento_w				integer;
qt_existe_w				bigint;
ie_avisa_emprestimo_aberto_w		varchar(1);
ie_permite_nat_diferente_w			varchar(1);
ie_tipo_ordem_w				varchar(1);
nr_emprestimo_w				bigint;
nr_seq_item_emprestimo_w			bigint;
qt_emprestimo_w				double precision;
qt_nota_fiscal_w				double precision;
qt_falta_gerar_nota_w			double precision;
cd_procedimento_w			bigint;
pr_variacao_param_w			bigint;
vl_ultima_compra_w			double precision;
vl_dif_ultima_compra_w			double precision;
ie_consiste_vl_compra_w			varchar(1);
pr_variacao_valor_w			varchar(3);
ie_mat_estoque_local_direto_w		varchar(1);
ie_conta_financeira_w			varchar(1);
ie_qualificado_w				varchar(15) := 'S';
dt_lib_estrut_pj_w				timestamp := null;
ie_valor_considerar_w			varchar(1);

/*Campos para consistencia dos valores Brasindice e Simpro*/

ie_consiste_vl_brasindice_w			varchar(1);
ie_consiste_vl_simpro_item_w			varchar(1);
vl_preco_brasindice_w			double precision := 0;
vl_preco_simpro_w				double precision := 0;
cd_convenio_w				bigint;
dt_ult_vigencia_w				timestamp;
ie_exige_centro_loc_direto_w			varchar(1);
ie_estrutura_lib_w				varchar(1);
ie_consiste_qt_pend_oc_w			varchar(1);
qt_pendente_entrega_w				double precision;
nr_seq_mat_simpro_w			bigint;
nr_seq_simpro_preco_w			bigint;

ie_vigente_anvisa_w 		material_estab.ie_vigente_anvisa%type;
ie_vigente_anvisa_marca_w			material_marca.ie_vigente_anvisa%type;



BEGIN

select	cd_material,
	coalesce(nr_seq_marca,0),
	cd_procedimento,
	dt_lib_estrut_pj
into STRICT	cd_material_w,
	nr_seq_marca_w,
	cd_procedimento_w,
	dt_lib_estrut_pj_w
from	nota_fiscal_item
where	nr_sequencia	= nr_sequencia_p
and	nr_item_nf	= nr_item_nf_p;

if (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then
	begin

	ds_erro_w := '';

	select	max(a.cd_operacao_nf),
		max(cd_condicao_pagamento),
		max(coalesce(cd_cgc_emitente,'N')) cd_cgc_emitente
	into STRICT	cd_operacao_nota_w,
		cd_cond_pagto_nf_w,
		cd_cgc_emitente_w
	from 	nota_fiscal a
	where	nr_sequencia	= nr_sequencia_p;

	select	coalesce(max(b.ie_consignado),'0'),
		coalesce(max(b.ie_tipo_requisicao),'X'),
		coalesce(max(b.ie_consumo),'X'),
		coalesce(max(b.ie_coluna_resumo),'X'),
		max(b.ie_entrada_saida),
		max(b.ie_atualiza_estoque),
		coalesce(max(a.ie_exige_centro_loc_direto),'S')
	into STRICT	ie_consignado_operacao_w,
		ie_tipo_requisicao_w,
		ie_consumo_w,
		ie_coluna_resumo_w,
		ie_ent_sai_op_estoque_w,
		ie_atualiza_estoque_w,
		ie_exige_centro_loc_direto_w
	from	operacao_estoque b,
		operacao_nota a
	where	a.cd_operacao_estoque	= b.cd_operacao_estoque
	and	a.cd_operacao_nf	= cd_operacao_nota_w;

	select	c.ie_consignado,
		a.dt_entrada_saida,
		substr(obter_se_material_estoque(a.cd_estabelecimento, 0, b.cd_material),1,1),
		coalesce(c.cd_material_generico,c.cd_material),
		coalesce(c.cd_material_estoque, c.cd_material),
		b.cd_material,
		substr(c.ds_material,1,255),
		b.vl_unitario_item_nf,
		b.vl_liquido,
		b.qt_item_nf,
		b.cd_local_estoque,
		b.cd_centro_custo,
		b.nr_ordem_compra,
		b.nr_item_oci,
		a.cd_estabelecimento,
		b.vl_total_item_nf,
		b.cd_unidade_medida_compra,
		b.cd_unidade_medida_estoque,
		b.cd_conta_contabil,
		b.cd_natureza_operacao,
		a.cd_natureza_operacao,
		c.ie_situacao,
		substr(obter_dados_material_estab(c.cd_material,cd_estabelecimento_w,'UMC'),1,30) cd_unidade_medida_compra,
		substr(obter_dados_material_estab(c.cd_material,cd_estabelecimento_w,'UME'),1,30) cd_unidade_medida_estoque,
		c.qt_conv_compra_estoque,
		substr(obter_se_material_estoque_lote(a.cd_estabelecimento, b.cd_material),1,1),
		dt_validade,
		cd_lote_fabricacao,
		b.nr_contrato,
		ds_justificativa,
		a.ie_tipo_nota,
		b.nr_seq_conta_financ,
		c.ie_tipo_material,
		b.dt_entrega_ordem,
		b.nr_atendimento,
		b.nr_emprestimo,
		b.nr_seq_item_emprestimo,
		coalesce(a.cd_conv_integracao,0)
	into STRICT	ie_consignado_material_w,
		dt_entrada_saida_w,
		ie_material_estoque_w,
		cd_material_generico_w,
		cd_material_estoque_w,
		cd_material_w,
		ds_material_w,
		vl_unitario_item_nf_w,
		vl_liquido_item_w,
		qt_item_nf_w,
		cd_local_estoque_w,
		cd_centro_custo_w,
		nr_ordem_compra_w,
		nr_item_oci_w,
		cd_estabelecimento_w,
		vl_total_item_nf_w,
		cd_unidade_medida_compra_w,
		cd_unidade_medida_estoque_w,
		cd_conta_contabil_nota_w,
		cd_natureza_nota_w,
		cd_natureza_item_w,
		ie_situacao_w,
		cd_unidade_compra_material_w,
		cd_unidade_estoque_material_w,
		qt_conv_compra_estoque_w,
		ie_estoque_lote_w,
		dt_validade_w,
		cd_lote_fabricacao_w,
		nr_contrato_w,
		ds_justificativa_w,
		ie_tipo_nota_w,
		nr_seq_conta_financ_w,
		ie_tipo_material_w,
		dt_prevista_entrega_w,
		nr_atendimento_w,
		nr_emprestimo_w,
		nr_seq_item_emprestimo_w,
		cd_convenio_w
	from	operacao_nota e,
		material c,
		nota_fiscal_item b,
		nota_fiscal a
	where 	a.nr_sequencia	= b.nr_sequencia
	and	b.cd_material	= c.cd_material
	and	a.cd_operacao_nf 	= e.cd_operacao_nf
	and   	b.nr_item_nf	= nr_item_nf_p
	and	a.nr_sequencia	= nr_sequencia_p;
	
	select coalesce(max(dt_mesano_vigente),trunc(clock_timestamp(),'mm'))
	into STRICT 	dt_mesano_referencia_w
	from 	Parametro_estoque
	where 	cd_estabelecimento = cd_estabelecimento_w;

	select	coalesce((obter_valor_param_usuario(40, 21, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'N'),
		coalesce((obter_valor_param_usuario(40, 60, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'N'),
		coalesce((obter_valor_param_usuario(40, 34, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 0),
		coalesce((obter_valor_param_usuario(40, 35, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 0),
		coalesce((obter_valor_param_usuario(40, 64, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'M'),
		coalesce((obter_valor_param_usuario(40, 65, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'M'),
		coalesce((obter_valor_param_usuario(40, 76, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'N'),
		coalesce((obter_valor_param_usuario(40, 78, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'N'),
		coalesce((obter_valor_param_usuario(40, 83, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'N'),
		coalesce((obter_valor_param_usuario(40, 91, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 0),
		coalesce((obter_valor_param_usuario(40, 92, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'N'),
		coalesce((obter_valor_param_usuario(40, 118, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'N'),
		coalesce((obter_valor_param_usuario(40, 127, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'N'),
		coalesce((obter_valor_param_usuario(40, 157, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'N'),
		coalesce((obter_valor_param_usuario(40, 178, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'N'),
		coalesce((obter_valor_param_usuario(40, 252, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'P'),
		coalesce((obter_valor_param_usuario(40, 253, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'P'),
		coalesce((obter_valor_param_usuario(40, 257, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'N'),
		coalesce((obter_valor_param_usuario(40, 278, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'N'),
		coalesce((obter_valor_param_usuario(40, 279, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'N'),
		coalesce((obter_valor_param_usuario(40, 281, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'N'),
		coalesce((obter_valor_param_usuario(40, 291, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'U'),
		coalesce((obter_valor_param_usuario(40, 297, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'U')		
	into STRICT	ie_obriga_conta_contabil_mat_w,
		ie_consiste_saldo_dev_w,
		pr_dif_valor_nota_ordem_w,
		pr_dif_quant_nota_ordem_w,
		ie_regra_dif_valor_w,
		ie_regra_dif_quant_w,
		ie_consiste_just_contrato_w,
		ie_obriga_just_contrato_w,
		ie_consiste_med_generico_w,
		qt_dias_entrega_antecipada_w,
		ie_consiste_venc_contrato_w,
		ie_consiste_qt_item_saldo_oc_w,
		ie_consiste_local_w,
		ie_avisa_emprestimo_aberto_w,
		ie_permite_nat_diferente_w,
		ie_dif_valor_nota_ordem_w,
		ie_dif_quant_nota_ordem_w,
		ie_mat_estoque_local_direto_w,
		ie_consiste_vl_brasindice_w,
		ie_consiste_vl_simpro_item_w,
		ie_conta_financeira_w,
		ie_valor_considerar_w,
		ie_consiste_qt_pend_oc_w
	;
	
	/* Consistencia referente a Regra de consistencias ao calcular a nota fiscal*/

	select	count(*)
	into STRICT	qt_existe_regra_w
	from	sup_regra_consistencia_nf
	where	coalesce(ie_situacao,'A') = 'A'
	and	cd_estabelecimento = cd_estabelecimento_w;

	if (qt_existe_regra_w > 0) and /*Somente se tem uma regra Ativa para o estabelecimento*/
		(ie_ent_sai_op_estoque_w = 'E') then /*Somente se a nota fiscal for de entrada*/
	
		select	coalesce(obter_se_consiste_regra_nf(cd_estabelecimento_w,cd_material_w,'A'),'N')
		into STRICT	ie_consiste_nr_atend_w
		;
	
		if (ie_consiste_nr_atend_w = 'S') and (coalesce(nr_atendimento_w::text, '') = '') then
	
			ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S' || ' -' ||
				WHEB_MENSAGEM_PCK.get_texto(277456) || chr(13) || chr(10),1,4000);
		end if;
	end if;
	/* Fim */

	
	ie_local_direto_w := 0;
	if (cd_local_estoque_w IS NOT NULL AND cd_local_estoque_w::text <> '') then
		select	count(*)
		into STRICT	ie_local_direto_w
		from	local_estoque
		where	ie_tipo_local = 8
		and	cd_estabelecimento	= cd_estabelecimento_w
		and	cd_local_estoque	= cd_local_estoque_w;
	end if;
	ie_consig_w		:= (ie_consignado_operacao_w in (1,2,3,5));

	/*Consistir se existe itens com local de estoque diferente de direto, sendo que a operacao da nota nao atualiza estoque*/

	if (ie_consiste_local_w = 'N') and (ie_atualiza_estoque_w = 'N') and (ie_ent_sai_op_estoque_w = 'E') and (ie_consignado_material_w = '0') and (cd_local_estoque_w IS NOT NULL AND cd_local_estoque_w::text <> '') and (ie_local_direto_w = 0) then
		ds_erro_w	:= substr(ds_erro_w || '-' || 'S -' ||
			WHEB_MENSAGEM_PCK.get_texto(277458) || cd_material_w || WHEB_MENSAGEM_PCK.get_texto(277457) || chr(13) || chr(10),1,4000);
	end if;


	/*Consistir local direto e material de estoque*/
	
	if (ie_mat_estoque_local_direto_w = 'S') and (ie_local_direto_w = 1) and (ie_material_estoque_w = 'S') and (ie_consignado_operacao_w <> '1') then
		ds_erro_w	:= substr(ds_erro_w || nr_item_nf_p || '-' || 'S' || ' -' ||
				WHEB_MENSAGEM_PCK.get_texto(277460),1,4000);
	end if;

	/* Consistir quando o valor do item for maior que o valor Brasindice */

	if (coalesce(ie_consiste_vl_brasindice_w,'N') <> 'N') then
		begin
		if (ie_consiste_vl_brasindice_w = 'S') then
			ie_obriga_w := 'S';
		else
			ie_obriga_w := 'N';
		end if;
		vl_preco_brasindice_w := coalesce(obter_valor_brasindice(cd_material_w,'C'),0);
		
		if (coalesce(vl_preco_brasindice_w,0) > 0) and (vl_unitario_item_nf_w > vl_preco_brasindice_w) then
			ds_erro_w	:= substr(ds_erro_w || nr_item_nf_p || '-' || ie_obriga_w || ' -' ||
					WHEB_MENSAGEM_PCK.get_texto(277461) || cd_material_w || WHEB_MENSAGEM_PCK.get_texto(277463),1,4000);
		end if;
		end;
	end if;

	/* Consistir quando o valor do item for maior que o valor Simpro */

	if (coalesce(ie_consiste_vl_simpro_item_w,'N') <> 'N') and (cd_convenio_w > 0) then
		begin
		if (ie_consiste_vl_simpro_item_w = 'S') then
			ie_obriga_w := 'S';
		else
			ie_obriga_w := 'N';
		end if;
		SELECT * FROM calcular_preco_simpro(	cd_estabelecimento_w, cd_convenio_w, cd_material_w, 1, 1, clock_timestamp(), 'C', vl_preco_simpro_w, dt_ult_vigencia_w, 1, 1, 1, 1, 'N', 'N', nr_seq_marca_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w) INTO STRICT vl_preco_simpro_w, dt_ult_vigencia_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w
					;

		if (coalesce(vl_preco_simpro_w,0) > 0) and (vl_unitario_item_nf_w > vl_preco_simpro_w) then
			ds_erro_w	:= substr(ds_erro_w || nr_item_nf_p || '-' || ie_obriga_w || ' -' ||
					WHEB_MENSAGEM_PCK.get_texto(277461) || cd_material_w || WHEB_MENSAGEM_PCK.get_texto(277464),1,4000);
		end if;
		end;
	end if;

	/* Consistir se o material tem controle de estoque por lote*/

	if (ie_estoque_lote_w = 'S') then
		select	count(*)
		into STRICT	qt_falta_lote_w
		from	nota_fiscal_item a
		where	a.nr_sequencia = nr_sequencia_p
		and	a.nr_item_nf = nr_item_nf_p
		and (coalesce(a.dt_validade::text, '') = '' or coalesce(a.cd_lote_fabricacao::text, '') = '')
		and not exists (
			SELECT	1
			from	nota_fiscal_item_lote x
			where	x.nr_seq_nota = a.nr_sequencia);
		if (qt_falta_lote_w > 0) then
			ds_erro_w	:= substr(ds_erro_w || '-' || 'S -' ||
			WHEB_MENSAGEM_PCK.get_texto(277458) || cd_material_w ||  WHEB_MENSAGEM_PCK.get_texto(277465) || chr(13) || chr(10),1,4000);
		end if;
	end if;

	/* Consistir situacao item */

	if (ie_situacao_w = 'I') then
		ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' || WHEB_MENSAGEM_PCK.get_texto(277468) || cd_material_w || WHEB_MENSAGEM_PCK.get_texto(277469),1,4000);
	end if;
	
	
	/*Consistir a conta financeira*/

	if (nr_seq_conta_financ_w IS NOT NULL AND nr_seq_conta_financ_w::text <> '') then
		select	ie_situacao
		into STRICT	ie_sit_conta_fin_w
		from	conta_financeira
		where	cd_conta_financ = nr_seq_conta_financ_w;
		if (ie_sit_conta_fin_w <> 'A') then
			ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' || WHEB_MENSAGEM_PCK.get_texto(277470),1,4000);
		end if;
	end if;

	/* Consiste se validade do registro da anvisa vencida*/

	begin
	select	coalesce(ie_consiste_validade_anvisa, 'N'),
		coalesce(ie_consiste_validade_marca_mat,'N')
	into STRICT	ie_consiste_validade_anvisa_w,
		ie_consiste_valid_marca_mat_w
	from	parametro_compras
	where	cd_estabelecimento = cd_estabelecimento_w;
	exception when no_data_found then
		--Nao existe registro no cadastro dos parametros de compras.
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(183264);
	end;
	if (ie_consiste_validade_anvisa_w = 'S') then
		
		select	count(*)
		into STRICT	qt_validade_vencida_w
		from	material_estab
		where	cd_material = cd_material_w
		and		cd_estabelecimento = cd_estabelecimento_w
		and		(dt_validade_reg_anvisa IS NOT NULL AND dt_validade_reg_anvisa::text <> '')
		and		dt_validade_reg_anvisa < clock_timestamp();
		
		select	max(coalesce(ie_vigente_anvisa,'X'))
		into STRICT 	ie_vigente_anvisa_w
		from	material_estab
		where	cd_material 		= cd_material_w
		and		cd_estabelecimento 	= cd_estabelecimento_w;
		
		if (qt_validade_vencida_w > 0) or (ie_vigente_anvisa_w = 'N') then
			ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' ||
			WHEB_MENSAGEM_PCK.get_texto(277468) || cd_material_w ||  WHEB_MENSAGEM_PCK.get_texto(277471),1,4000);
		end if;
	end if;
	
	/*Consiste a data de validade da marca do material*/
	
	if (ie_consiste_valid_marca_mat_w = 'S') then

		select	max(dt_validade_reg_anvisa),
				max(ie_vigente_anvisa)
		into STRICT	dt_validade_anvisa_marca_w,
				ie_vigente_anvisa_marca_w
		from	material_marca
		where	cd_material = cd_material_w
		and	nr_sequencia = nr_seq_marca_w;
		
		if	((coalesce(ie_vigente_anvisa_marca_w, 'X') = 'N') or coalesce(dt_validade_anvisa_marca_w, clock_timestamp()) < trunc(clock_timestamp())) then
			ds_erro_w :=	substr(	ds_erro_w || nr_item_nf_p || '-' || 'S -' ||
				 WHEB_MENSAGEM_PCK.get_texto(277472) || obter_desc_marca(nr_seq_marca_w) ||  WHEB_MENSAGEM_PCK.get_texto(277473) || cd_material_w ||  WHEB_MENSAGEM_PCK.get_texto(277474) ||
						 WHEB_MENSAGEM_PCK.get_texto(277475),1,4000);
		end if;	
	end if;

	/* Consistir Natureza Operacao */

	if (ie_permite_nat_diferente_w = 'N') and (cd_natureza_nota_w <> cd_natureza_item_w) then
		ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'N -' ||
			WHEB_MENSAGEM_PCK.get_texto(277476),1,4000);
	end if;

	/* Consistir Material Consignado */

	if (ie_consignado_operacao_w <> '0') and (ie_consignado_material_w = '0') then
		ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' || WHEB_MENSAGEM_PCK.get_texto(277477),1,4000);
	end if;

	if (ie_consignado_operacao_w = '0') and (ie_consignado_material_w = '1') then
		ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' || WHEB_MENSAGEM_PCK.get_texto(277478),1,4000);
	end if;

	if	(ie_exige_centro_loc_direto_w = 'S' AND ie_local_direto_w = 1) or
		(ie_exige_centro_loc_direto_w = 'D' AND ie_local_direto_w = 0) then

		select	count(*)
		into STRICT	qt_existe_rateio_w
		from	Nota_fiscal_item_rateio
		where	nr_seq_nota	= nr_sequencia_p
		and	nr_item_nf	= nr_item_nf_p;
		
		if (coalesce(cd_centro_custo_w::text, '') = '') and (qt_existe_rateio_w = 0) then
			ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' ||  WHEB_MENSAGEM_PCK.get_texto(277480),1,4000);
		end if;
	end if;	
	
	if (ie_consignado_operacao_w = '1') then
		begin
		if (coalesce(cd_centro_custo_w::text, '') = '') then
			ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' ||  WHEB_MENSAGEM_PCK.get_texto(277480),1,4000);
		elsif (cd_local_estoque_w IS NOT NULL AND cd_local_estoque_w::text <> '') and (ie_local_direto_w = 0) then
			ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' ||
					WHEB_MENSAGEM_PCK.get_texto(277482),1,4000);
		end if;
		end;
	end if;

	if (coalesce(cd_local_estoque_w::text, '') = '') then
		ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' || WHEB_MENSAGEM_PCK.get_texto(277483),1,4000);
	end if;

	if (ie_consignado_operacao_w = '2') then
		if (cd_centro_custo_w IS NOT NULL AND cd_centro_custo_w::text <> '') then
			ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' || WHEB_MENSAGEM_PCK.get_texto(277484),1,4000);
		end if;
	end if;

	if (ie_consignado_operacao_w = '3') then
		begin
		if (coalesce(cd_local_estoque_w::text, '') = '') or (coalesce(cd_centro_custo_w::text, '') = '') then
			ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' ||
				WHEB_MENSAGEM_PCK.get_texto(277485),1,4000);
		end if;
		if (coalesce(cd_local_estoque_w::text, '') = '') or (coalesce(cd_centro_custo_w::text, '') = '') or (ie_local_direto_w = 1) then
			ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' ||
				WHEB_MENSAGEM_PCK.get_texto(277486),1,4000);
		end if;
		end;
	end if;

	/* Consistir Unidade de Medida */

	if (coalesce(cd_unidade_medida_compra_w::text, '') = '') then
		ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' || WHEB_MENSAGEM_PCK.get_texto(277487),1,4000);
	end if;
	if (coalesce(cd_unidade_medida_estoque_w::text, '') = '') then
		ds_erro_w := substr(ds_erro_w ||  nr_item_nf_p || '-' || 'S -' || WHEB_MENSAGEM_PCK.get_texto(277488),1,4000);
	end if;

	/* Consistir Totais e Qtdades do Item */

	if (vl_unitario_item_nf_w = 0) and (not ie_consig_w) then
		ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' || WHEB_MENSAGEM_PCK.get_texto(277489),1,4000);
	end if;
	if (qt_item_nf_w = 0) and (not ie_consig_w) then
		ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' || WHEB_MENSAGEM_PCK.get_texto(277490),1,4000);
	end if;

	vl_dif_item_w	:= 0;
	if (qt_item_nf_w > 0) then
		vl_dif_item_w	:= round((vl_total_item_nf_w / qt_item_nf_w)::numeric, 4) - vl_unitario_item_nf_w;
	end if;		
	if (abs(vl_dif_item_w) > vl_arredondamento_w) then
		ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' ||
			WHEB_MENSAGEM_PCK.get_texto(277491) || vl_dif_item_w || WHEB_MENSAGEM_PCK.get_texto(277492),1,4000);
	end if;

	/* Consistir Rateio por Centro de Custo */

	select	count(*),
		coalesce(sum(vl_rateio),0),
		coalesce(sum(qt_rateio),0)
	into STRICT	qt_item_rateio_w,
		vl_rateio_w,
		qt_rateio_w
	from	Nota_fiscal_item_rateio
	where	nr_seq_nota	= nr_sequencia_p
	and	nr_item_nf	= nr_item_nf_p;
	
	if (vl_rateio_w > 0) and (qt_item_rateio_w > 0) and (vl_rateio_w <> vl_total_item_nf_w) then
		ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' || WHEB_MENSAGEM_PCK.get_texto(277493),1,4000);
	end if;
	
	if (qt_rateio_w > 0) and (qt_item_rateio_w > 0) and (qt_rateio_w <> qt_item_nf_w) then
		ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' ||  WHEB_MENSAGEM_PCK.get_texto(277494),1,4000);
	end if;

	select	count(*)
	into STRICT	qt_item_rateio_inativo_w
	from	centro_custo b,
		Nota_fiscal_item_rateio a
	where	a.cd_centro_custo = b.cd_centro_custo
	and	b.ie_situacao = 'I'
	and	a.nr_seq_nota	= nr_sequencia_p
	and	a.nr_item_nf	= nr_item_nf_p;
	if (qt_item_rateio_inativo_w > 0) then
		ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' || WHEB_MENSAGEM_PCK.get_texto(277495),1,4000);
	end if;


	/* Consistir Local de Estoque */


	/*if	(cd_local_estoque_w is not null) and
		(ie_local_direto_w = 0) then
		begin
		if 	(ie_material_estoque_w = 'S') then
			begin
			obter_local_valido(	cd_estabelecimento_w,
						cd_local_estoque_w,
						cd_material_w,
						'1', ie_local_valido_w);

			if 	(cd_local_estoque_w <> 8) and
				(ie_local_valido_w <> 'S') then
				ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' || 'O material nao foi liberado para local de estoque' || chr(13) || chr(10),1,4000);
			end if;
			end;
		end if;
		if 	(ie_material_estoque_w = 'N') then
			ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' || 'Este material nao e liberado para estoque' || chr(13) || chr(10),1,4000);
		end if;
		end;
	end if;*/


	/* Consistir Local e Centro de Custo */

	if (ie_consignado_material_w = '0') and (cd_local_estoque_w IS NOT NULL AND cd_local_estoque_w::text <> '') and (cd_centro_custo_w IS NOT NULL AND cd_centro_custo_w::text <> '') and (ie_local_direto_w = 0) then
		begin
		ie_obriga_local_centro_w	:= 'S -';
		if (ie_tipo_nota_w = 'SD') then
			ie_obriga_local_centro_w	:= 'N -';
		end if;
		ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || ie_obriga_local_centro_w ||
				WHEB_MENSAGEM_PCK.get_texto(277496),1,4000);
		end;
	end if;

	if (ie_consignado_operacao_w in (0,4)) and (coalesce(cd_local_estoque_w::text, '') = '') and (cd_centro_custo_w is  null) then
		ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' || WHEB_MENSAGEM_PCK.get_texto(277497),1,4000);
	end if;

	/* Consistir Centro de Custo Ativo */

	if (coalesce(cd_centro_custo_w,0) > 0) then
		select	coalesce(max(ie_situacao),'I')
		into STRICT	ie_situacao_ww
		from	centro_custo
		where	cd_centro_custo	= cd_centro_custo_w;
		if (ie_situacao_ww <> 'A') then
			ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'N -' || WHEB_MENSAGEM_PCK.get_texto(277498),1,4000);
		end if;
	end if;
	
	/*Obter_Conta_Financeira(	IE_ENTRADA_SAIDA_P,
			CD_ESTABELECIMENTO_P,
			CD_MATERIAL_P,
			CD_PROCEDIMENTO_P,
			IE_ORIGEM_PROCED_P,
			CD_SETOR_ATEND_P,
			CD_CONVENIO_P,
			CD_CGC_p,
			CD_CENTRO_CUSTO_P,
			NR_SEQ_CONTA_FINANC_P,
			ie_clinica_p,
			cd_operacao_nf_p,
			ie_tipo_pessoa_p,
			ie_tipo_atendimento_p,
			cd_categoria_convenio_p,
			nr_seq_proj_recurso_p,
			nr_seq_produto_p,
			cd_pessoa_fisica_p,
			ie_origem_tit_rec_p,
			ie_origem_tit_pag_p,
			nr_seq_classe_tit_rec_p,
			nr_seq_classe_tit_pag_p);*/

	
	/* Consistir Conta financeira */


	/*if	(ie_conta_financeira_w = 'S') then
		select	count(*)
		into	qt_existe_w
		from	nota_fiscal_item
		where	nr_sequencia	= nr_sequencia_p
		and	nr_item_nf	= nr_item_nf_p
		and	nr_seq_conta_financ is null;
		if	(qt_existe_w > 0) then
			ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' || 'Conta financeira nao informada ' || chr(13) || chr(10),1,4000);
		end if;
	end if;*/

	
	/* Consistir Conta Contabil */

	ie_tipo_conta_w	:= 3;
	if (coalesce(cd_centro_custo_w::text, '') = '') then
		ie_tipo_conta_w	:= 2;
	end if;

	ds_erro_grupo_conta_w := consiste_grupo_centro_conta(cd_conta_contabil_nota_w, cd_centro_custo_w, null, ds_erro_grupo_conta_w);
	if (ds_erro_grupo_conta_w IS NOT NULL AND ds_erro_grupo_conta_w::text <> '') then
		ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' ||
				replace(replace(ds_erro_grupo_conta_w, chr(13), ''), chr(10), '') || chr(13) || chr(10),1,4000);
	end if;

	SELECT * FROM define_conta_material(cd_estabelecimento_w, cd_material_w, ie_tipo_conta_w, ie_clinica_w, null, null, null, null, null, null, cd_local_conta_w, Null, Null, cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;

	if (coalesce(cd_conta_contabil_nota_w::text, '') = '') and (ie_obriga_conta_contabil_mat_w = 'S') then
		ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || ie_obriga_conta_contabil_mat_w || ' -' ||
			WHEB_MENSAGEM_PCK.get_texto(277499),1,4000);
	else
		select	substr(obter_se_conta_vigente(cd_conta_contabil_nota_w, trunc(dt_entrada_saida_w,'dd')),1,1)
		into STRICT	ie_conta_vigente_w
		;
		if (ie_conta_vigente_w = 'N') then
			ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' ||
				WHEB_MENSAGEM_PCK.get_texto(277503),1,4000);
		end if;
	end if;

	if (cd_conta_contabil_w <> cd_conta_contabil_nota_w) then
		ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'N -' ||
			WHEB_MENSAGEM_PCK.get_texto(277505),1,4000);
	end if;

	select	substr(obter_se_mat_lib_operacao_nf(cd_operacao_nota_w,cd_material_w),1,1)
	into STRICT	ie_estrutura_lib_w
	;

	if (ie_estrutura_lib_w = 'N') then
		ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' || WHEB_MENSAGEM_PCK.get_texto(277506),1,4000);
	end if;

	/* Verifica a regra na funcao Pessoa Juridica - Pasta Regra liberacao por estrutura */

	select	substr(obter_se_mat_lib_fornec(cd_cgc_emitente_w, cd_material_w, cd_estabelecimento_w, 'NF'),1,1) ie_qualificado
	into STRICT	ie_qualificado_w
	;

	if (ie_tipo_nota_w in ('EN','EP')) and (coalesce(dt_lib_estrut_pj_w::text, '') = '') and (ie_qualificado_w in ('N', 'L', 'V')) then
		begin
		if (ie_qualificado_w = 'N') then
			ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' || WHEB_MENSAGEM_PCK.get_texto(277507),1,4000);
		end if;
		if (ie_qualificado_w = 'L') then
			ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' || WHEB_MENSAGEM_PCK.get_texto(277508),1,4000);
		end if;
		if (ie_qualificado_w = 'V') then
			ds_erro_w := substr(ds_erro_w || nr_item_nf_p || '-' || 'S -' || WHEB_MENSAGEM_PCK.get_texto(277509),1,4000);
		end if;
		end;
	end if;

	update	nota_fiscal_item
	set	ds_inconsistencia 	= substr(ds_erro_w,1,255)
	where	nr_sequencia	= nr_sequencia_p
	and	nr_item_nf	= nr_item_nf_p;
	commit;
	end;

end if;

ds_erro_p := substr(ds_erro_w,1,255);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cm_consistir_item_nf ( nr_sequencia_p bigint, nr_item_nf_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

