-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_primeira_checagem ( nr_seq_horario_p bigint, ds_justificativa_p text, ds_observacao_p text, ie_tipo_item_p text, dt_evento_p timestamp, nm_usuario_p text, cd_perfil_p bigint, ie_gerou_p INOUT text, ie_param_check_p text default 'N', qt_adm_p bigint default 0, cd_um_qt_adm_p text default null, nr_atendimento_p bigint default 0, nr_seq_assinatura_p tasy_assinatura_digital.nr_sequencia%type default null, cd_funcao_p prescr_mat_alteracao.cd_funcao%type default null, ie_via_aplicacao_p text default null, ie_via_aplic_alt_p text default null) AS $body$
DECLARE

ora2pg_rowcount int;
nr_prescricao_w		bigint;
nr_seq_material_w	bigint;
ie_agrupador_w		smallint;
dt_horario_w		timestamp;
nr_atendimento_w	bigint;
cd_item_w		varchar(255);
cd_pessoa_fisica_w	varchar(10);
nr_seq_alteracao_w	bigint;
nr_seq_procedimento_w	bigint;
nr_seq_proc_interno_w	bigint;
nr_seq_prot_glic_w	bigint;
ie_acm_sn_w		varchar(1);
qt_dose_w double precision;
cd_um_dose_w varchar(30);
ie_consist_dose_adm_w varchar(2);
ds_justificativa_w	varchar(255);
qt_solucao_w double precision;
cd_certificado_w	usuario.cd_certificado%type;
ie_gerou_evento_w	boolean;
ie_gera_sem_certificado_w	varchar(1);
qt_dose_ww		prescr_material.qt_dose%type;
cd_um_dose_ww	prescr_material.cd_unidade_medida_dose%type;
ie_via_aplicacao_w		prescr_mat_alteracao_comp.ie_via_aplicacao%type;
nr_seq_alteracao_comp_w		prescr_mat_alteracao_comp.nr_sequencia%type;
	

BEGIN

ie_gerou_p	:= 'N';
ds_justificativa_w	:= SUBSTR(ds_justificativa_p,1,235);

if (coalesce(nr_seq_horario_p,0) > 0) then
	if (ie_tipo_item_p in ('M', 'IAH', 'S', 'IAG', 'IA')) then -- Aqui
		select	max(b.nr_prescricao),
				max(b.nr_sequencia),
				max(b.ie_agrupador),
				max(c.dt_horario),
				max(a.nr_atendimento),
				max(b.cd_material),
				max(obter_se_acm_sn(b.ie_acm, b.ie_se_necessario)),
				coalesce(max(c.cd_unidade_medida_dose),cd_um_qt_adm_p),
				coalesce(max(c.qt_dose),qt_adm_p),
				coalesce(max(b.qt_solucao),0)
		into STRICT		nr_prescricao_w,
				nr_seq_material_w,
				ie_agrupador_w,
				dt_horario_w,
				nr_atendimento_w,
				cd_item_w,
				ie_acm_sn_w,
				cd_um_dose_w,
				qt_dose_w,
				qt_solucao_w
		from		prescr_medica a,
				prescr_material b,
				prescr_mat_hor c
		where	a.nr_prescricao	= b.nr_prescricao
		and		a.nr_prescricao	= c.nr_prescricao
		and		b.nr_prescricao	= c.nr_prescricao
		and		b.nr_sequencia	= c.nr_seq_material
		and		c.nr_sequencia	= nr_seq_horario_p;

		cd_pessoa_fisica_w	:= obter_dados_usuario_opcao(nm_usuario_p,'C');	
			
		update	prescr_mat_hor
		set		dt_primeira_checagem	= clock_timestamp(),
				nm_usuario				= nm_usuario_p,
				dt_atualizacao			= clock_timestamp()
		where	nr_sequencia			= nr_seq_horario_p;
		
		GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;

		
		if ( ora2pg_rowcount > 0) then
			ie_gerou_p	:= 'S';
		end if;
		
		if (coalesce(qt_adm_p,0) > 0) then
			qt_dose_ww		:= qt_adm_p;
			cd_um_dose_ww	:= cd_um_qt_adm_p;
		else
			qt_dose_ww		:= qt_dose_w;
			cd_um_dose_ww	:= cd_um_dose_w;
		end if;
		
		select	nextval('prescr_mat_alteracao_seq')
		into STRICT	nr_seq_alteracao_w
		;
		
		insert into prescr_mat_alteracao(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_prescricao,
							nr_seq_prescricao,
							dt_alteracao,
							cd_pessoa_fisica,
							ie_alteracao,
							nr_seq_horario,
							ds_justificativa,
							ds_observacao,
							ie_agrupador,
							ie_tipo_item,
							dt_horario,
							nr_atendimento,
							cd_item,
							ie_acm_sn,
							nr_seq_assinatura,
							cd_funcao,
							qt_dose_adm,
							cd_um_dose_adm)
					values (
							nr_seq_alteracao_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_prescricao_w,
							nr_seq_material_w,
							coalesce(dt_evento_p,clock_timestamp()),
							cd_pessoa_fisica_w,
							47,
							nr_seq_horario_p,
							ds_justificativa_p,
							ds_observacao_p,
							ie_agrupador_w,
							ie_tipo_item_p,
							dt_horario_w,
							nr_atendimento_w,
							cd_item_w,
							ie_acm_sn_w,
							nr_seq_assinatura_p,
							cd_funcao_p,
							qt_dose_ww,
							cd_um_dose_ww);

		SELECT	nextval('prescr_mat_alteracao_comp_seq')
		INTO STRICT	nr_seq_alteracao_comp_w
		;

		INSERT INTO prescr_mat_alteracao_comp(nr_sequencia,
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			nr_sequencia_prescr,
			ie_via_aplicacao)
		VALUES (
			nr_seq_alteracao_comp_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_alteracao_w,
			coalesce(ie_via_aplic_alt_p, ie_via_aplicacao_p));

		GET DIAGNOSTICS ie_gerou_evento_w = ROW_COUNT > 0;
		
		if (ie_param_check_p = 'S') then
		ie_consist_dose_adm_w := coalesce(obter_valor_param_usuario(1113,62, cd_perfil_p, nm_usuario_p, obter_estab_atend(nr_atendimento_p)), 'N');
			if (ie_consist_dose_adm_w in ('JD','DM','I')) and (qt_adm_p IS NOT NULL AND qt_adm_p::text <> '') then
				if (ie_consist_dose_adm_w = 'JD') and
					((qt_adm_p <> qt_dose_w AND qt_adm_p <> qt_solucao_w) or (cd_um_qt_adm_p <> cd_um_dose_w)) and (coalesce(ds_justificativa_w::text, '') = '') then
					--A justificativa e obrigatoria quando a dose administrada e diferente da dose prescrita. Parametro [62].
					CALL wheb_mensagem_pck.exibir_mensagem_abort(173407);
				elsif (ie_consist_dose_adm_w = 'I') and
					((qt_adm_p <> qt_dose_w AND qt_adm_p <> qt_solucao_w) or (cd_um_qt_adm_p <> cd_um_dose_w)) then
					--Nao e permitida a administracao quando a dose administrada e diferente da dose prescrita. Parametro [62].
					CALL wheb_mensagem_pck.exibir_mensagem_abort(173408);
				elsif (ie_consist_dose_adm_w = 'DM') and
					((qt_adm_p > qt_dose_w AND qt_adm_p > qt_solucao_w) or (cd_um_qt_adm_p <> cd_um_dose_w)) then
					--Nao e possivel administrar uma dose maior que a sua dispensacao.
					CALL wheb_mensagem_pck.exibir_mensagem_abort(123053);
				end if;
			end if;
		end if;
			
	elsif (ie_tipo_item_p in ('P','L','C','G','HM')) then
		select	max(b.nr_prescricao),
				max(b.nr_sequencia),
				max(b.nr_seq_proc_interno),
				max(b.nr_seq_prot_glic),
				max(c.dt_horario),
				max(a.nr_atendimento),
				max(b.cd_procedimento)
		into STRICT		nr_prescricao_w,
				nr_seq_procedimento_w,
				nr_seq_proc_interno_w,
				nr_seq_prot_glic_w,
				dt_horario_w,
				nr_atendimento_w,
				cd_item_w
		from		prescr_medica a,
				prescr_procedimento b,
				prescr_proc_hor c
		where	a.nr_prescricao	= b.nr_prescricao
		and		a.nr_prescricao	= c.nr_prescricao
		and		b.nr_prescricao	= c.nr_prescricao
		and		b.nr_sequencia	= c.nr_seq_procedimento
		and		c.nr_sequencia	= nr_seq_horario_p;
		
		cd_pessoa_fisica_w	:= obter_dados_usuario_opcao(nm_usuario_p,'C');
		
		update	prescr_proc_hor
		set		dt_primeira_checagem	= clock_timestamp(),
				nm_usuario				= nm_usuario_p,
				dt_atualizacao			= clock_timestamp()
		where	nr_sequencia			= nr_seq_horario_p;
		
		GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;

		
		if ( ora2pg_rowcount > 0) then
			ie_gerou_p	:= 'S';
		end if;
		
		select	nextval('prescr_mat_alteracao_seq')
		into STRICT	nr_seq_alteracao_w
		;
		
		insert into prescr_mat_alteracao(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_prescricao,
							nr_seq_procedimento,
							dt_alteracao,
							cd_pessoa_fisica,
							ie_alteracao,
							nr_seq_horario_proc,
							ds_justificativa,
							ds_observacao,
							ie_agrupador,
							ie_tipo_item,
							dt_horario,
							nr_atendimento,
							cd_item,
							ie_mostra_adep,
							nr_seq_prot_glic,
							nr_seq_proc_interno,
							nr_seq_assinatura,
							cd_funcao)
					values (
							nr_seq_alteracao_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_prescricao_w,
							nr_seq_procedimento_w,
							coalesce(dt_evento_p,clock_timestamp()),
							cd_pessoa_fisica_w,
							47,
							nr_seq_horario_p,
							ds_justificativa_p,
							ds_observacao_p,
							ie_agrupador_w,
							ie_tipo_item_p,
							dt_horario_w,
							nr_atendimento_w,
							cd_item_w,
							'S',
							nr_seq_prot_glic_w,
							nr_seq_proc_interno_w,
							nr_seq_assinatura_p,
							cd_funcao_p);

		GET DIAGNOSTICS ie_gerou_evento_w = ROW_COUNT > 0;
	end if;
end if;

if	((ie_gerou_evento_w) and (coalesce(obter_data_assinatura_digital(nr_seq_assinatura_p)::text, '') = '')) then
	CALL adep_gerar_pend_prim_checagem(	nr_seq_projeto_p	=> 35007, --ADEP - ADL -  Administracao do item
									nr_prescricao_p		=> nr_prescricao_w,
									ie_tipo_item_p		=> ie_tipo_item_p,
									nr_seq_horario_p	=> nr_seq_horario_p,
									nm_usuario_p		=> nm_usuario_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_primeira_checagem ( nr_seq_horario_p bigint, ds_justificativa_p text, ds_observacao_p text, ie_tipo_item_p text, dt_evento_p timestamp, nm_usuario_p text, cd_perfil_p bigint, ie_gerou_p INOUT text, ie_param_check_p text default 'N', qt_adm_p bigint default 0, cd_um_qt_adm_p text default null, nr_atendimento_p bigint default 0, nr_seq_assinatura_p tasy_assinatura_digital.nr_sequencia%type default null, cd_funcao_p prescr_mat_alteracao.cd_funcao%type default null, ie_via_aplicacao_p text default null, ie_via_aplic_alt_p text default null) FROM PUBLIC;

