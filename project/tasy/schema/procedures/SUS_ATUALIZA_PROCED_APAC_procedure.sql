-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_atualiza_proced_apac ( nr_sequencia_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE


nr_atendimento_w			bigint;
nr_apac_w			bigint;
cd_medico_resp_w			varchar(10);
cd_pessoa_fisica_w		varchar(10);
cd_profissional_exec_w		varchar(10) := '';
cd_estabelecimento_w		smallint;
cd_estab_usuario_w		smallint;
cd_cgc_prestador_w		varchar(14);
cd_setor_atendimento_w		integer;
dt_entrada_unidade_w		timestamp;
nr_seq_atepacu_w			bigint;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
nr_seq_atecaco_w			bigint;
nr_prescricao_w			bigint;
nr_seq_exame_w			bigint;
cd_material_exame_w		varchar(20);
nr_seq_item_prescr_w		integer;
dt_prescricao_w			timestamp;
cd_setor_prescr_w			integer;
cd_medico_prescr_w		varchar(10);
cd_medico_proc_apac_w		varchar(10);
ie_tipo_apac_w			smallint;
cd_motivo_cobranca_w		smallint;
cd_procedimento_w		bigint;
cd_atividade_prof_w		smallint;
qt_procedimento_w			double precision;
cd_cgc_fornecedor_w		varchar(14);
nr_nota_fiscal_w			varchar(20);
nr_seq_proc_apac_w		bigint;
nr_seq_propaci_w			bigint;
nr_seq_protocolo_w		bigint;
dt_mesano_referencia_w		timestamp;
dt_entrada_w			timestamp;
nr_interno_conta_w			bigint;
ds_erro_w			varchar(255);
ie_vincular_prot_w			varchar(1);
ie_tipo_protocolo_w			smallint;
cd_setor_apac_w			integer;
ie_fecha_atend_w			varchar(1);
ie_consiste_comp_w		varchar(1);
ie_consiste_apac_prot_w		varchar(1);
dt_fim_validade_w			timestamp;
qt_proced_conta_w			integer	:= 0;
ie_origem_proced_w		bigint;
cd_medico_responsavel_w		varchar(10);
libera_setor_excl_w			varchar(1);
ie_tipo_atendimento_w		smallint;
ie_medico_executor_w		varchar(10);
cd_cgc_prest_regra_w		varchar(14);
nr_seq_classificacao_w		bigint;
cd_medico_executor_w		varchar(10);
dt_inicio_validade_w		timestamp;
dt_periodo_final_w			timestamp;
dt_referencia_w			timestamp;
ie_gerar_conta_nova_w		varchar(15) := 'N';
ds_sqlerrm_w			varchar(2000);
ie_medico_profissional_w		varchar(15) := 'N';
nr_seq_conselho_w			bigint;
sg_conselho_w			varchar(10);
ie_setor_atual_w			varchar(1) := 'N';
ie_forma_proc_w			varchar(1) := 'P';
nr_seq_proc_interno_w		procedimento_paciente.nr_seq_proc_interno%type;
ie_lanc_proced_princ_apac_w        varchar(1);


BEGIN

begin
/* Buscar dados APAC */

select	a.nr_atendimento,
	a.nr_interno_conta,
	a.cd_procedimento,
	a.ie_origem_proced,
	b.cd_convenio_parametro,
	b.cd_categoria_parametro,
	a.cd_medico_responsavel,
	b.cd_estabelecimento,
	a.dt_inicio_validade
into STRICT	nr_atendimento_w,
	nr_interno_conta_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	cd_convenio_w,
	cd_categoria_w,
	cd_medico_responsavel_w,
	cd_estabelecimento_w,
	dt_inicio_validade_w
from	sus_apac_unif a,
	conta_paciente b
where	a.nr_interno_conta	= b.nr_interno_conta
and	a.nr_sequencia		= nr_sequencia_p
and	b.ie_status_acerto	= 1;
exception
	when others then
	nr_interno_conta_w	:= null;
	select  nr_atendimento,
                substr(obter_convenio_atendimento(nr_atendimento),1,10),
                substr(obter_categoria_atendimento(nr_atendimento),1,10),
	cd_procedimento,
	ie_origem_proced,
	cd_medico_responsavel,
	cd_estabelecimento,
	dt_inicio_validade
        into STRICT	nr_atendimento_w,
                cd_convenio_w,
                cd_categoria_w,
                cd_procedimento_w,
                ie_origem_proced_w,
	cd_medico_responsavel_w,
	cd_estabelecimento_w,
	dt_inicio_validade_w
        from    sus_apac_unif
        where   nr_sequencia    = nr_sequencia_p;
end;

begin
cd_estab_usuario_w := wheb_usuario_pck.get_cd_estabelecimento;
exception
when others then
	cd_estab_usuario_w := cd_estabelecimento_w;
end;

ie_gerar_conta_nova_w 		:= coalesce(obter_valor_param_usuario(1124,97,obter_perfil_ativo,nm_usuario_p,cd_estab_usuario_w),'N');
ie_medico_profissional_w	:= coalesce(obter_valor_param_usuario(1124,128,obter_perfil_ativo,nm_usuario_p,cd_estab_usuario_w),'N');
ie_setor_atual_w		:= coalesce(obter_valor_param_usuario(1124,147,obter_perfil_ativo,nm_usuario_p,cd_estab_usuario_w),'N');
ie_forma_proc_w			:= coalesce(obter_valor_param_usuario(1124,2,obter_perfil_ativo,nm_usuario_p,cd_estab_usuario_w),'P');
ie_lanc_proced_princ_apac_w	:= coalesce(obter_valor_param_usuario(1124,151,obter_perfil_ativo,nm_usuario_p,cd_estab_usuario_w),'S');

if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then
	select	count(*)
	into STRICT	qt_proced_conta_w
	from	procedimento_paciente
	where	nr_interno_conta	= nr_interno_conta_w
	and	cd_procedimento		= cd_procedimento_w
	and	ie_origem_proced	= ie_origem_proced_w
	and	coalesce(cd_motivo_exc_conta::text, '') = '';
else
        select  count(*)
        into STRICT    qt_proced_conta_w
        from    conta_paciente b,
                procedimento_paciente a
        where   a.nr_atendimento        = nr_atendimento_w
        and     a.cd_procedimento       = cd_procedimento_w
        and     a.ie_origem_proced      = ie_origem_proced_w
        and     a.nr_interno_conta      = b.nr_interno_conta
        and     b.ie_status_acerto      = 1
	and	coalesce(sus_obter_apacunif_conta(a.nr_interno_conta),'X') = 'X'
        and     coalesce(a.cd_motivo_exc_conta::text, '') = '';
end if;

/* Buscar dados da unidade */

begin
select	a.cd_setor_atendimento,
	a.dt_entrada_unidade,
	a.nr_seq_interno
into STRICT	cd_setor_atendimento_w,
	dt_entrada_unidade_w,
	nr_seq_atepacu_w
from	atend_paciente_unidade a
where	a.nr_atendimento	= nr_atendimento_w
and	a.dt_entrada_unidade 	= (SELECT max(x.dt_entrada_unidade)
				from atend_paciente_unidade x
				where x.nr_atendimento = a.nr_atendimento);
exception
	when others then
	cd_setor_atendimento_w	:= null;
	dt_entrada_unidade_w	:= null;
	nr_seq_atepacu_w	:= null;
end;

if (ie_setor_atual_w = 'S') then

	begin
	select	a.cd_setor_atendimento,
		a.dt_entrada_unidade,
		a.nr_seq_interno
	into STRICT	cd_setor_atendimento_w,
		dt_entrada_unidade_w,
		nr_seq_atepacu_w
	from	atend_paciente_unidade a
	where	a.nr_atendimento	= nr_atendimento_w
	and	a.dt_entrada_unidade 	= (SELECT max(x.dt_entrada_unidade)
					from atend_paciente_unidade x
					where x.nr_atendimento = a.nr_atendimento
					and	coalesce(x.dt_saida_unidade::text, '') = '');
	exception
		when others then
		cd_setor_atendimento_w	:= null;
		dt_entrada_unidade_w	:= null;
		nr_seq_atepacu_w	:= null;
	end;
	
end if;

select	max(a.cd_cgc),
	max(b.ie_tipo_atendimento),
	max(b.nr_seq_classificacao)
into STRICT	cd_cgc_prestador_w,
	ie_tipo_atendimento_w,
	nr_seq_classificacao_w
from	estabelecimento a,
	atendimento_paciente b
where	a.cd_estabelecimento	= b.cd_estabelecimento
and	b.nr_atendimento	= nr_atendimento_w;

/* Geliard 21/10/2011 - incluida a rotina abaixo para tratar o cgc prestador e o medico */

SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, null, null, ie_medico_executor_w, cd_cgc_prest_regra_w, cd_medico_executor_w, cd_pessoa_fisica_w, cd_medico_responsavel_w, dt_entrada_unidade_w, nr_seq_classificacao_w, 'N', null, null) INTO STRICT ie_medico_executor_w, cd_cgc_prest_regra_w, cd_medico_executor_w, cd_pessoa_fisica_w;
			
if (ie_medico_executor_w	= 'F') and (cd_medico_executor_w IS NOT NULL AND cd_medico_executor_w::text <> '') then
	cd_medico_responsavel_w	:= cd_medico_executor_w;
	cd_profissional_exec_w	:= '';
elsif (ie_medico_executor_w	= 'F') and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
	cd_profissional_exec_w	:= cd_pessoa_fisica_w;
	cd_medico_responsavel_w	:= '';
end if;	

if (cd_cgc_prest_regra_w IS NOT NULL AND cd_cgc_prest_regra_w::text <> '') then
	cd_cgc_prestador_w := cd_cgc_prest_regra_w;
end if;

if (coalesce(ie_gerar_conta_nova_w,'N') = 'S') and (Sus_Obter_Estrut_Proc(cd_procedimento_w,ie_origem_proced_w,'C','G') = '6') then	
	begin
	
	update	sus_apac_unif
	set	nr_interno_conta  = NULL
        where   nr_sequencia    = nr_sequencia_p;
	
	select 	nextval('conta_paciente_seq')
     	into STRICT 	nr_interno_conta_w
     	;
	
	dt_periodo_final_w := (dt_inicio_validade_w + 30);
	
	if (dt_periodo_final_w < dt_entrada_unidade_w) then
		dt_periodo_final_w := (dt_entrada_unidade_w + 1);
	end if;
	
	begin
	select	dt_ref_valida	
	into STRICT	dt_referencia_w
	from	convenio
	where	cd_convenio = cd_convenio_w;
	exception
	when others then
		dt_referencia_w := dt_periodo_final_w;		
	end;

    	insert into conta_paciente(nr_atendimento,
 	      	dt_acerto_conta,
 		ie_status_acerto,
 		dt_periodo_inicial,
 		dt_periodo_final,
 		dt_atualizacao,
 		nm_usuario,
 		cd_convenio_parametro,
 		cd_categoria_parametro,
 		dt_mesano_referencia,
		dt_mesano_contabil,
		cd_convenio_calculo,
		cd_categoria_calculo,
		nr_interno_conta,
		cd_estabelecimento,
		nr_protocolo,
		vl_conta,
		vl_desconto,
		nr_seq_pq_protocolo,
		cd_autorizacao,
		ie_tipo_atend_conta)
	values (nr_atendimento_w,
		clock_timestamp(),
		1,
		dt_inicio_validade_w,
		dt_periodo_final_w,
		clock_timestamp(),
		nm_usuario_p,
		cd_convenio_w,
		cd_categoria_w,
		dt_referencia_w,
		dt_referencia_w,
		cd_convenio_w,
		cd_categoria_w,
		nr_interno_conta_w,
		cd_estabelecimento_w,
		'0', 0, 0,
		null,
		null,
		ie_tipo_atendimento_w);
		
	CALL sus_define_conta_apac(nr_atendimento_w, nr_sequencia_p, nm_usuario_p);
		
	end;
end if;

if (qt_proced_conta_w = 0) and (nr_seq_atepacu_w IS NOT NULL AND nr_seq_atepacu_w::text <> '') and (coalesce(ie_lanc_proced_princ_apac_w,'S') = 'S') then
	
	libera_setor_excl_w := obter_param_usuario(1124, 13, obter_perfil_ativo, nm_usuario_p, cd_estab_usuario_w, libera_setor_excl_w);
	
	if (libera_setor_excl_w = 'N') and (verifica_setor_esclusivo(cd_procedimento_w,ie_origem_proced_w,cd_setor_atendimento_w,null,nm_usuario_p) = 0)then
		begin
		ds_erro_p := wheb_mensagem_pck.get_texto(285644, 'CD_PROCEDIMENTO_P=' || cd_procedimento_w ||
								'CD_SETOR_ATENDIMENTO_P=' || substr(obter_nome_setor(cd_setor_atendimento_w),1,100));
		-- 285644 = 'O procedimento nao foi inserido na conta devido ao usuario nao estar autorizado a executar o procedimento '||||', no setor ' ||||'.'||' Parametro[13].';
		end;
	else
		begin
		ds_erro_p := '';		
		
		if (ie_medico_profissional_w	= 'S') and (coalesce(cd_medico_responsavel_w,'X') <> 'X') then
			begin
			
			select	coalesce(max(nr_seq_conselho),0)
			into STRICT	nr_seq_conselho_w
			from	pessoa_fisica
			where	cd_pessoa_fisica	= cd_medico_responsavel_w;

			select	trim(both upper(max(sg_conselho)))
			into STRICT	sg_conselho_w
			from	conselho_profissional
			where	nr_sequencia	= nr_seq_conselho_w;	

			if (coalesce(sg_conselho_w,'X')	<> 'CRM') then
				cd_profissional_exec_w	:= cd_medico_responsavel_w;
				cd_medico_responsavel_w	:= null;
			end if;
			
			end;
		end if;
		
		if (ie_forma_proc_w = 'I') then
			begin
			
			nr_seq_proc_interno_w := get_internal_proc_number(cd_procedimento_w,
										ie_origem_proced_w,
										ie_tipo_atendimento_w,
										cd_setor_atendimento_w,
										cd_convenio_w,
										cd_categoria_w,
										dt_entrada_unidade_w,
										cd_estabelecimento_w,
										nr_atendimento_w);
			
			end;
		end if;

		select	nextval('procedimento_paciente_seq')
		into STRICT	nr_seq_propaci_w
		;	

		begin
		insert into 	procedimento_paciente(
			nr_sequencia, 		nr_atendimento, 		dt_entrada_unidade, 	cd_procedimento,
			dt_procedimento,		qt_procedimento, 		dt_atualizacao, 		nm_usuario,
			cd_medico, 		cd_convenio, 		cd_categoria, 		cd_pessoa_fisica,
			dt_prescricao, 		ds_observacao, 		vl_procedimento, 		vl_medico,
			vl_anestesista, 		vl_materiais, 		cd_edicao_amb, 		cd_tabela_servico,
			dt_vigencia_preco, 		cd_procedimento_princ, 	dt_procedimento_princ, 	dt_acerto_conta,
			dt_acerto_convenio, 	dt_acerto_medico, 		vl_auxiliares, 		vl_custo_operacional,
			tx_medico, 		tx_anestesia, 		nr_prescricao, 		nr_sequencia_prescricao,
			cd_motivo_exc_conta, 	ds_compl_motivo_excon, 	cd_acao, 		qt_devolvida,
			cd_motivo_devolucao, 	nr_cirurgia, 		nr_doc_convenio, 		cd_medico_executor,
			ie_cobra_pf_pj, 		nr_laudo, 			dt_conta, 		cd_setor_atendimento,
			cd_conta_contabil, 		cd_procedimento_aih, 	ie_origem_proced, 	nr_aih,
			ie_responsavel_credito,	tx_procedimento, 		cd_equipamento, 	ie_valor_informado,
			cd_estabelecimento_custo,	cd_tabela_custo, 		cd_situacao_glosa, 	nr_lote_contabil,
			cd_procedimento_convenio,	nr_seq_autorizacao, 	ie_tipo_servico_sus, 	ie_tipo_ato_sus,
			cd_cgc_prestador, 		nr_nf_prestador, 		cd_atividade_prof_bpa,	nr_interno_conta,
			nr_seq_proc_princ, 		ie_guia_informada, 		dt_inicio_procedimento, ie_emite_conta,
			ie_funcao_medico, 		ie_classif_sus, 		cd_especialidade, 	nm_usuario_original,
			nr_seq_proc_pacote, 	ie_tipo_proc_sus, 		cd_setor_receita, 	vl_adic_plant,
			nr_seq_atepacu, 		ie_auditoria,		nr_seq_proc_interno)
		values (nr_seq_propaci_w, 	nr_atendimento_w,	dt_entrada_unidade_w,	cd_procedimento_w,
			dt_entrada_unidade_w, 	1, 			clock_timestamp(), 		nm_usuario_p,
			null, 			cd_convenio_w,		cd_categoria_w, 	cd_profissional_exec_w,
			null,			null, 			0, 			0,
			0, 			0,			null,			null,
			null, 			null, 			null, 			null,
			null,			null, 			0, 			0,
			1, 			1, 			null, 			null,
			null, 			null, 			null, 			null,
			null, 			null, 			null, 			cd_medico_responsavel_w,
			null, 			null, 			null, 			cd_setor_atendimento_w,
			null, 			null, 			ie_origem_proced_w, 	null,
			null, 			null, 			null, 			'N',
			cd_estabelecimento_w, 	null, 			null, 			null,		
			null, 			null, 			null, 			null,
			cd_cgc_prestador_w, 	null,			null, 			nr_interno_conta_w,
			null, 			null, 			null, 			null,
			null, 			null, 			null, 			null,
			null, 			null, 			cd_setor_atendimento_w, 0,
			nr_seq_atepacu_w,	null,			nr_seq_proc_interno_w);		
		exception
			when others then
				ds_sqlerrm_w := substr(sqlerrm(SQLSTATE),1,2000);
				CALL wheb_mensagem_pck.exibir_mensagem_abort(186315,'DS_ERRO='||ds_sqlerrm_w);
				/* Ocorreu um problema ao inserir registro na procedimento paciente. */

			end;
		end;
	end if;
end if;

/* Atualizar preco da procedimento paciente  */

CALL atualiza_preco_procedimento(nr_seq_propaci_w,cd_convenio_w,nm_usuario_p);

if (coalesce(nr_seq_propaci_w,0) <> 0) then
	begin
	CALL gerar_lancamento_automatico(nr_atendimento_w,null,34,'Tasy',nr_seq_propaci_w,null,null,null,null,null);	
	end;
end if;

if (coalesce(nr_interno_conta_w::text, '') = '') then
	begin
	CALL sus_define_conta_apac(nr_atendimento_w, nr_sequencia_p, nm_usuario_p);
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_atualiza_proced_apac ( nr_sequencia_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

