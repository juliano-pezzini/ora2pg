-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE plt_copia_gasoterapia (nr_prescricao_orig_p bigint, nr_prescricao_p bigint, dt_prescricao_p timestamp, nr_seq_regra_p bigint, cd_item_p text, cd_intervalo_p text, qt_item_p bigint, ie_modificar_p text, nm_usuario_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, ie_estende_inc_p text, ie_respiratorio_p text, ie_disp_resp_esp_p text, ie_modo_adm_p text) AS $body$
DECLARE


nr_seq_gas_w			bigint;
nr_seq_gas_old_w		bigint;
nr_seq_gasoterapia_w		bigint;
dt_prev_execucao_w		timestamp;
ie_inicio_w			varchar(15);
ie_respiracao_w			varchar(15);
cd_modalidade_vent_w		varchar(15);
ie_disp_resp_esp_w		varchar(15);
cd_unidade_medida_w		varchar(30);
qt_gasoterapia_w		double precision;
cd_intervalo_w			varchar(7);
ie_fluxo_acm_w			varchar(1);
qt_limite_gas_min_w		double precision;
qt_limite_gas_max_w		double precision;
ds_observacao_w			varchar(2000);
ie_copiar_w			varchar(10);
ie_unidade_medida_w		varchar(15);
qt_freq_vent_w			double precision;
ie_modo_adm_w			varchar(15);
dt_inicio_prescr_w		timestamp;
nr_seq_anterior_w		bigint;
dt_suspensao_progr_w		timestamp;
dt_validade_prescr_w		timestamp;
qt_inconsistencia_w		bigint;
nr_intervalo_w			bigint := 0;
nr_horas_validade_w		bigint := 0;
ds_horarios_w			varchar(2000);
ds_horarios_ww			varchar(255);
ie_regra_geral_w		varchar(15);
nr_seq_regra_copia_w	bigint;
ie_manter_intervalo_w	varchar(1);
ie_operacao_w			varchar(1);
qt_operacao_w			double precision;
dt_inicio_w				timestamp;
dt_final_w				timestamp;
nr_atendimento_w		bigint;
nr_ocorrencia_w			bigint;

c01 CURSOR FOR
SELECT	nr_sequencia,
	dt_prev_execucao,
	ie_inicio,
	ie_respiracao,
	cd_modalidade_vent,
	ie_disp_resp_esp,
	nr_seq_gas,
	cd_unidade_medida,
	qt_gasoterapia,
	cd_intervalo,
	ie_fluxo_acm,
	qt_limite_gas_min,
	qt_limite_gas_max,
	ds_observacao,
	ie_unidade_medida,
	qt_freq_vent,
	ie_modo_adm,
	coalesce(nr_seq_anterior, nr_sequencia),
	dt_suspensao_progr,
	ds_horarios
from	prescr_gasoterapia
where	nr_prescricao	= nr_prescricao_orig_p
and	coalesce(cd_intervalo,'XPTO')	= coalesce(cd_intervalo_p,'XPTO')
and	coalesce(qt_gasoterapia,0)	= coalesce(qt_item_p,0)
and	coalesce(ie_respiracao,'XPTO') = coalesce(ie_respiratorio_p,'XPTO')
and	coalesce(ie_disp_resp_esp,'XPTO') = coalesce(ie_disp_resp_esp_p,'XPTO')
and	coalesce(ie_modo_adm,'XPTO') = coalesce(ie_modo_adm_p,'XPTO')
and	to_char(nr_seq_gas) = cd_item_p;

c02 CURSOR FOR
SELECT	coalesce(ie_copiar, 'N'),
		ie_regra_geral,
		nr_sequencia,
		coalesce(ie_manter_intervalo, 'N')
from	rep_regra_copia_crit
where	ie_tipo_item	= 'GAS'
and		nr_seq_regra	= nr_seq_regra_p
order by nr_seq_apres;


BEGIN
select	dt_inicio_prescr,
		dt_validade_prescr,
		nr_horas_validade,
		nr_atendimento
into STRICT	dt_inicio_prescr_w,
		dt_validade_prescr_w,
		nr_horas_validade_w,
		nr_atendimento_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p  LIMIT 1;

ie_copiar_w	:= 'S';

open c02;
loop
fetch c02 into
	ie_copiar_w,
	ie_regra_geral_w,
	nr_seq_regra_copia_w,
	ie_manter_intervalo_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
end loop;
close c02;

if (ie_copiar_w = 'S') then
	begin
	open C01;
	loop
	fetch C01 into
		nr_seq_gas_old_w,
		dt_prev_execucao_w,
		ie_inicio_w,
		ie_respiracao_w,
		cd_modalidade_vent_w,
		ie_disp_resp_esp_w,
		nr_seq_gas_w,
		cd_unidade_medida_w,
		qt_gasoterapia_w,
		cd_intervalo_w,
		ie_fluxo_acm_w,
		qt_limite_gas_min_w,
		qt_limite_gas_max_w,
		ds_observacao_w,
		ie_unidade_medida_w,
		qt_freq_vent_w,
		ie_modo_adm_w,
		nr_seq_anterior_w,
		dt_suspensao_progr_w,
		ds_horarios_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		CALL PLT_consiste_extensao_item(dt_inicio_prescr_w, dt_validade_prescr_w, nr_prescricao_orig_p, nr_seq_gas_old_w, 'O', nr_seq_regra_p, nm_usuario_p, cd_perfil_p, cd_estabelecimento_p);

		select	count(nr_sequencia)
		into STRICT	qt_inconsistencia_w
		from	w_copia_plano
		where	nr_prescricao	= nr_prescricao_orig_p
		and		nr_seq_item	= nr_seq_gas_old_w
		and		ie_tipo_item	= 'O'
		and		nm_usuario	= nm_usuario_p
		and		((ie_permite	= 'N') or (ie_estende_inc_p = 'N'))  LIMIT 1;

		if	((qt_inconsistencia_w	= 0) or (ie_modificar_p 	= 'S')) then

			--if	(cd_intervalo_w is not null) then
			--	Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, dt_inicio_prescr_w, nvl(dt_prescricao_p,dt_inicio_prescr_w), nr_horas_validade_w, 0,0,0, nr_intervalo_w, ds_horarios_w, ds_horarios_ww, 'N', null);
			--	ds_horarios_w := ds_horarios_w ||ds_horarios_ww;
			--end if;
			if (ie_regra_geral_w = 'H') then
				if (ie_manter_intervalo_w = 'S') and (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then

					select	max(ie_operacao),
							max(qt_operacao)
					into STRICT	ie_operacao_w,
							qt_operacao_w
					from	intervalo_prescricao
					where	cd_intervalo = cd_intervalo_w;

					dt_inicio_w := dt_inicio_prescr_w - 5;
					dt_final_w := clock_timestamp() + interval '5 days';

					dt_prev_execucao_w := dt_inicio_prescr_w - qt_operacao_w / 24;

					select	max(c.dt_horario)
					into STRICT	dt_prev_execucao_w
					from	prescr_gasoterapia_hor c,
							prescr_gasoterapia b,
							prescr_medica a
					where	c.nr_seq_gasoterapia = b.nr_sequencia
					and		c.nr_prescricao = b.nr_prescricao
					and		c.dt_horario >= dt_prev_execucao_w - 220/24
					and		coalesce(b.dt_suspensao::text, '') = ''
					and		coalesce(c.ie_horario_especial,'N') <> 'S'
					and		b.cd_intervalo = coalesce(cd_intervalo_w, b.cd_intervalo)
					and		coalesce(b.qt_gasoterapia,0) = coalesce(qt_gasoterapia_w, coalesce(b.qt_gasoterapia,0))
					and		coalesce(b.nr_seq_gas,0) = coalesce(nr_seq_gas_w,0)
					and		b.nr_prescricao = a.nr_prescricao
					and		coalesce(a.dt_suspensao::text, '') = ''
					and		(coalesce(a.dt_liberacao_medico, a.dt_liberacao) IS NOT NULL AND (coalesce(a.dt_liberacao_medico, a.dt_liberacao))::text <> '')
					and		a.dt_inicio_prescr between dt_inicio_w and dt_final_w
					and		a.nr_atendimento = nr_atendimento_w;

					if (coalesce(dt_prev_execucao_w::text, '') = '') then
						select	max(dt_prev_execucao)
						into STRICT	dt_prev_execucao_w
						from	prescr_gasoterapia
						where	nr_sequencia = nr_seq_gas_old_w
						and		nr_prescricao = nr_prescricao_orig_p;
					end if;

					if (dt_prev_execucao_w IS NOT NULL AND dt_prev_execucao_w::text <> '') then

						if (ie_operacao_w in ('X')) then
							dt_prev_execucao_w := dt_prev_execucao_w + (24 / qt_operacao_w) / 24;
						else
							dt_prev_execucao_w := dt_prev_execucao_w + qt_operacao_w / 24;
						end if;

						if (coalesce(qt_operacao_w,0) > 0) then

							if (ie_operacao_w in ('H')) and (dt_prev_execucao_w not between dt_inicio_prescr_w and (dt_prev_execucao_w + qt_operacao_w)) then

								while(dt_prev_execucao_w not between dt_inicio_prescr_w and (dt_prev_execucao_w + qt_operacao_w)) loop
									dt_prev_execucao_w := dt_prev_execucao_w + qt_operacao_w/24;
								end loop;
							end if;
						end if;
					end if;

					nr_ocorrencia_w := 0;
					SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, dt_inicio_prescr_w, coalesce(dt_prev_execucao_w, dt_inicio_prescr_w), nr_horas_validade_w, null, 0, 0, nr_ocorrencia_w, ds_horarios_w, ds_horarios_ww, 'N', '') INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios_ww;
					ds_horarios_w := ds_horarios_w || ds_horarios_ww;
				end if;
			end if;

			select	nextval('prescr_gasoterapia_seq')
			into STRICT	nr_seq_gasoterapia_w
			;

			insert into prescr_gasoterapia(
				nr_sequencia,
				nr_prescricao,
				dt_atualizacao,
				nm_usuario,
				dt_prev_execucao,
				ie_inicio,
				ie_respiracao,
				cd_modalidade_vent,
				ie_disp_resp_esp,
				nr_seq_gas,
				cd_unidade_medida,
				qt_gasoterapia,
				cd_intervalo,
				ie_fluxo_acm,
				qt_limite_gas_min,
				qt_limite_gas_max,
				ds_observacao,
				ie_suspenso,
				ie_unidade_medida,
				qt_freq_vent,
				ie_modo_adm,
				nr_seq_anterior,
				dt_suspensao_progr,
				ds_horarios)
			values (nr_seq_gasoterapia_w,
				nr_prescricao_p,
				clock_timestamp(),
				nm_usuario_p,
				dt_prescricao_p,
				ie_inicio_w,
				ie_respiracao_w,
				cd_modalidade_vent_w,
				ie_disp_resp_esp_w,
				nr_seq_gas_w,
				cd_unidade_medida_w,
				qt_gasoterapia_w,
				cd_intervalo_w,
				ie_fluxo_acm_w,
				qt_limite_gas_min_w,
				qt_limite_gas_max_w,
				ds_observacao_w,
				'N',
				ie_unidade_medida_w,
				qt_freq_vent_w,
				ie_modo_adm_w,
				nr_seq_anterior_w,
				dt_suspensao_progr_w,
				ds_horarios_w);

			if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

			CALL REP_copia_item_gas(nr_prescricao_orig_p, nr_prescricao_p, nr_seq_gas_old_w,nr_seq_gasoterapia_w, 0, nm_usuario_p, null, nr_seq_regra_p);
		end if;
	end loop;
	close C01;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_copia_gasoterapia (nr_prescricao_orig_p bigint, nr_prescricao_p bigint, dt_prescricao_p timestamp, nr_seq_regra_p bigint, cd_item_p text, cd_intervalo_p text, qt_item_p bigint, ie_modificar_p text, nm_usuario_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, ie_estende_inc_p text, ie_respiratorio_p text, ie_disp_resp_esp_p text, ie_modo_adm_p text) FROM PUBLIC;

