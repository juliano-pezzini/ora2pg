-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_copiar_centro_custo_estab ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, cd_centro_custo_p bigint, nm_usuario_p text, ie_acrescenta_palavra_copia_p text default 'S') AS $body$
DECLARE



cd_centro_custo_w	integer;
cd_centro_custo_ww	integer;
cd_sistema_contabil_w	varchar(20);
ds_centro_custo_w	varchar(80);
ie_periodo_proj_receita_w	varchar(1);
ie_situacao_w	varchar(1);
cd_classificacao_w	varchar(40);
ie_tipo_w	varchar(1);
cd_grupo_w	bigint;
ie_tipo_custo_w	varchar(3);
cd_empresa_destino_w	smallint;
nr_seq_terceiro_w	bigint;
qt_grupo_w	smallint;
cd_centro_custo_ref_w	integer;
ie_tipo_estab_w	estabelecimento.ie_tipo_estab%TYPE;
cd_empresa_origem_w	estabelecimento.cd_empresa%type;
cd_empresa_controladora_w	estabelecimento.cd_empresa%type;
nr_seq_grupo_w	grupo_emp_estrutura.nr_seq_grupo%type;

c01 CURSOR FOR
SELECT	substr(CASE WHEN ie_acrescenta_palavra_copia_p='S' THEN  wheb_mensagem_pck.get_texto(799468) || ' ' WHEN ie_acrescenta_palavra_copia_p='N' THEN  '' END  || a.ds_centro_custo,1,80),
	a.ie_situacao,
	a.cd_classificacao,
	a.ie_tipo,
	(
	SELECT  coalesce(max(x.cd_grupo), a.cd_grupo)
	from    ctb_grupo_centro x
	where   x.cd_empresa = cd_empresa_destino_w
	and     x.cd_grupo_ref = a.cd_grupo
	) cd_grupo,
	a.ie_tipo_custo,
	a.nr_seq_terceiro,
	a.cd_sistema_contabil,
	a.ie_periodo_proj_receita,
	a.cd_centro_custo,
	a.cd_centro_custo_ref
from	centro_custo a
where	1 = 1
and		a.cd_estabelecimento = cd_estab_origem_p
and		a.cd_centro_custo = coalesce(cd_centro_custo_p,a.cd_centro_custo);


BEGIN

select	max(coalesce(cd_empresa,0))
into STRICT	cd_empresa_destino_w
from	estabelecimento
where	cd_estabelecimento = cd_estab_destino_p;

cd_empresa_controladora_w	:= holding_pck.get_emp_controladora_grupo(NULL, obter_empresa_estab(cd_estab_origem_p));
cd_empresa_origem_w	:= obter_empresa_estab(cd_estab_origem_p);
nr_seq_grupo_w	:= holding_pck.get_grupo_emp_estrut_vigente(cd_empresa_origem_w);

open c01;
loop
fetch c01 into
	ds_centro_custo_w,
  	ie_situacao_w,
	cd_classificacao_w,
	ie_tipo_w,
	cd_grupo_w,
	ie_tipo_custo_w,
	nr_seq_terceiro_w,
	cd_sistema_contabil_w,
	ie_periodo_proj_receita_w,
	cd_centro_custo_ww,
	cd_centro_custo_ref_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
begin

	select cd_centro_custo
	into STRICT cd_centro_custo_w
	from ( SELECT cd_centro_custo from (WITH RECURSIVE cte AS (
 select row_number() OVER () AS cd_centro_custo
	level <= 99999999   UNION ALL
 select row_number() OVER () AS cd_centro_custo 
	level <= 99999999  JOIN cte c ON ()

) SELECT * FROM cte;
) b where not exists (select 1 from centro_custo a where a.cd_centro_custo = b.cd_centro_custo)) alias2 LIMIT 1;

	if (nr_seq_grupo_w > 0) then
		if (cd_empresa_origem_w <> cd_empresa_destino_w) then
	  		cd_centro_custo_ref_w	:= cd_centro_custo_ww;
		end if;
	else
		cd_centro_custo_ref_w	:= null;
	end if;

	select	count(*)
    into STRICT	qt_grupo_w
    from	ctb_grupo_centro
    where	cd_empresa = cd_empresa_destino_w;

	if (qt_grupo_w = 0) then
    		cd_grupo_w := null;
	end if;

	insert into centro_custo(
			cd_centro_custo,
			ds_centro_custo,
			ie_situacao,
	    	dt_atualizacao,
    		nm_usuario,
    		cd_classificacao,
    		ie_tipo,
    		cd_grupo,
    		cd_estabelecimento,
    		ie_tipo_custo,
    		nr_seq_terceiro,
    		cd_sistema_contabil,
    		ie_periodo_proj_receita,
    		cd_centro_custo_ref)
  	values (	cd_centro_custo_w,
    		ds_centro_custo_w,
    		ie_situacao_w,
      		clock_timestamp(),
    		nm_usuario_p,
    		cd_classificacao_w,
    		ie_tipo_w,
    		cd_grupo_w,
    		cd_estab_destino_p,
    		ie_tipo_custo_w,
    		nr_seq_terceiro_w,
    		cd_sistema_contabil_w,
    		ie_periodo_proj_receita_w,
    		cd_centro_custo_ref_w);
end;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_copiar_centro_custo_estab ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, cd_centro_custo_p bigint, nm_usuario_p text, ie_acrescenta_palavra_copia_p text default 'S') FROM PUBLIC;

