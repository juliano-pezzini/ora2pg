-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_dose_final ( cd_material_p bigint, cd_unidade_medida_p text, qt_altura_p bigint, qt_peso_p bigint, qt_imc_p bigint, qt_sc_p bigint, qt_tempo_p bigint, cd_unid_med_dom_p text, qt_dose_p bigint, qt_dose_final_p INOUT bigint) AS $body$
DECLARE


qt_dose_w				double precision;
qt_conversao_w			double precision;
cd_unid_med_w			varchar(30);
cd_unid_med_mat_w		varchar(30);



BEGIN

if (cd_unid_med_dom_p = obter_desc_expressao(781877)/*'mcg/kg/min'*/
) then
	qt_dose_w		:= qt_dose_p * qt_tempo_p;
	qt_dose_w		:= qt_dose_w * qt_peso_p;
	qt_dose_w		:= qt_dose_w / 1000;
	cd_unid_med_w		:= substr(obter_unid_med_usua('mg'),1,30);
elsif (cd_unid_med_dom_p = obter_desc_expressao(781883)/*'mcgt/min'*/
) then
	qt_dose_w		:= qt_dose_p * qt_tempo_p / 60;
	cd_unid_med_w		:= substr(obter_unid_med_usua('ml'),1,30);
elsif (cd_unid_med_dom_p = 'ml/h') then
	qt_dose_w		:= qt_dose_p * qt_tempo_p / 60;
	cd_unid_med_w		:= substr(obter_unid_med_usua('ml'),1,30);
elsif (cd_unid_med_dom_p = obter_desc_expressao(781875)/*'mg/dia'*/
) then
	qt_dose_w		:= qt_dose_p * qt_tempo_p / 1440;
	cd_unid_med_w		:= substr(obter_unid_med_usua('mg'),1,30);
elsif (cd_unid_med_dom_p = 'mg/h') then
	qt_dose_w		:= qt_dose_p * qt_tempo_p / 60;
	cd_unid_med_w		:= substr(obter_unid_med_usua('mg'),1,30);
elsif (cd_unid_med_dom_p = 'g/h') then
	qt_dose_w		:= qt_dose_p * qt_tempo_p / 60;
	cd_unid_med_w		:= substr(obter_unid_med_usua('g'),1,30);
elsif (cd_unid_med_dom_p = 'g/dia') then
	qt_dose_w		:= qt_dose_p * qt_tempo_p / 1440;
	cd_unid_med_w		:= substr(obter_unid_med_usua('g'),1,30);
end if;

if (cd_unidade_medida_p = cd_unid_med_w) then
	qt_dose_final_p	:= qt_dose_w;
elsif (cd_unidade_medida_p = 'g') and (upper(cd_unid_med_w) = upper(obter_unid_med_usua('mg'))) then
	qt_dose_final_p	:= qt_dose_w / 1000;
else
	begin
	select	cd_unidade_medida_consumo
	into STRICT	cd_unid_med_mat_w
	from	material
	where	cd_material	= cd_material_p;
	if (cd_unidade_medida_p	= cd_unid_med_mat_w) then
		select	coalesce(max(qt_conversao),0)
		into STRICT	qt_conversao_w
		from	material_conversao_unidade
		where	cd_material		= cd_material_p
		and	cd_unidade_medida	= cd_unid_med_w;
		if (qt_conversao_w <> 0) then
			qt_dose_final_p	:= qt_dose_w / qt_conversao_w;
		elsif (upper(cd_unid_med_w) = upper(obter_unid_med_usua('mg'))) then
			select	coalesce(max(qt_conversao),0)
			into STRICT	qt_conversao_w
			from	material_conversao_unidade
			where	cd_material		= cd_material_p
			and	upper(cd_unidade_medida)	= upper(obter_unid_med_usua('g'));
			if (qt_conversao_w <> 0) then
				qt_dose_final_p	:= qt_dose_w / 1000 / qt_conversao_w;
			end if;
		end if;
	else
		begin
		select	coalesce(max(qt_conversao),0)
		into STRICT	qt_conversao_w
		from	material_conversao_unidade
		where	cd_material		= cd_material_p
		and	cd_unidade_medida	= cd_unid_med_w;
		if (qt_conversao_w <> 0) then
			qt_dose_w	:= qt_dose_w / qt_conversao_w;
		elsif (upper(cd_unid_med_w) = upper(obter_unid_med_usua('mg'))) then
			select	coalesce(max(qt_conversao),0)
			into STRICT	qt_conversao_w
			from	material_conversao_unidade
			where	cd_material		= cd_material_p
			and	upper(cd_unidade_medida)	= upper(obter_unid_med_usua('g'));
			if (qt_conversao_w <> 0) then
				qt_dose_w	:= qt_dose_w / 1000 / qt_conversao_w;
			end if;
		end if;
		select	coalesce(max(qt_conversao),0)
		into STRICT	qt_conversao_w
		from	material_conversao_unidade
		where	cd_material		= cd_material_p
		and	cd_unidade_medida	= cd_unidade_medida_p;
		if (qt_conversao_w <> 0) then
			qt_dose_final_p	:= qt_dose_w * qt_conversao_w;
		else
			qt_dose_final_p	:= -1;
		end if;
		end;
	end if;
	end;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_dose_final ( cd_material_p bigint, cd_unidade_medida_p text, qt_altura_p bigint, qt_peso_p bigint, qt_imc_p bigint, qt_sc_p bigint, qt_tempo_p bigint, cd_unid_med_dom_p text, qt_dose_p bigint, qt_dose_final_p INOUT bigint) FROM PUBLIC;

