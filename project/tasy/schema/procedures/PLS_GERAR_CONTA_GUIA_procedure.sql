-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_conta_guia ( nr_seq_protocolo_p bigint, cd_guia_p text, nr_seq_guia_p bigint, nr_seq_prestador_atend_p bigint, nm_usuario_p text, ie_imp_med_exec_solic_p text, ie_tipo_faturamento_p pls_conta.ie_tipo_faturamento%type, cd_estabelecimento_p pls_conta.cd_estabelecimento%type, nr_seq_conta_gerada_p INOUT bigint) AS $body$
DECLARE


cd_guia_w			varchar(20);
cd_senha_w			varchar(20);
cd_guia_principal_w		varchar(20);
nr_crm_exec_w			varchar(20);
sg_conselho_exec_w		varchar(20);
cd_medico_solicitante_w		varchar(10);
cd_cooperativa_w		varchar(10);
ie_tipo_guia_w			varchar(2);
ie_status_w			varchar(2);
uf_crm_exec_w			valor_dominio.vl_dominio%type;
ie_imp_med_exec_solic_w		varchar(2);
ie_acao_regra_w			varchar(2);
ie_carater_internacao_w		varchar(1);
ie_regime_internacao_w		varchar(1);
nr_seq_segurado_w		bigint;
nr_seq_prestador_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_cbo_saude_w		bigint;
nr_seq_tipo_atendimento_w	bigint;
nr_seq_clinica_w		bigint;
nr_seq_tipo_acomodacao_w	bigint;
nr_seq_prestador_atend_w	bigint;
cd_medico_exec_w		bigint;
nr_seq_regra_pend_w		bigint;
ie_tipo_consulta_w		smallint;
dt_autorizacao_w		timestamp;
dt_validade_senha_w		timestamp;
dt_emissao_w			timestamp;
nr_seq_prestador_solic_w	bigint;
ie_tipo_faturamento_w		pls_conta.ie_tipo_faturamento%type;
cd_guia_orig_w			pls_conta.cd_guia%type;
ie_indicacao_acidente_w		pls_conta.ie_indicacao_acidente%type;
nr_seq_conselho_w		pls_conta.nr_seq_conselho_exec%type;
nm_recem_nascido_w		pls_conta.nm_recem_nascido%type;
dt_nascimento_w			pls_conta.dt_nascimento%type;
ie_recem_nascido_w		pls_conta.ie_recem_nascido%type;
nr_seq_cbo_saude_solic_w	pls_conta.nr_seq_cbo_saude_solic%type;

cd_validacao_benef_tiss_w	pls_conta_tiss.cd_validacao_benef_tiss%type;
cd_ausencia_val_benef_tiss_w	pls_conta_tiss.cd_ausencia_val_benef_tiss%type;
cd_ident_biometria_benef_w	pls_conta_tiss.cd_ident_biometria_benef%type;
cd_template_biomet_benef_w	pls_conta_tiss.cd_template_biomet_benef%type;
ie_tipo_ident_benef_w		pls_conta_tiss.ie_tipo_ident_benef%type;
cd_assinat_digital_prest_w	pls_conta_tiss.cd_assinat_digital_prest%type;
cd_guia_prestador_w         pls_guia_plano.cd_guia_prestador%type;
ie_cobertura_especial_w		pls_guia_plano.ie_cobertura_especial%type;
ie_regime_atendimento_w		pls_guia_plano.ie_regime_atendimento%type;
ie_saude_ocupacional_w		pls_guia_plano.ie_saude_ocupacional%type;


BEGIN
select  max(ie_tipo_guia)
into STRICT      ie_tipo_guia_w
from     pls_protocolo_conta
where  nr_sequencia = nr_seq_protocolo_p;

select	a.cd_guia,
	a.dt_autorizacao,
	coalesce(a.cd_senha,null),
	a.dt_validade_senha,
	a.nr_seq_segurado,
	coalesce(a.cd_medico_solicitante,null),
                CASE WHEN ie_tipo_guia_w='' THEN CASE WHEN a.ie_tipo_guia=2 THEN 4 WHEN a.ie_tipo_guia=3 THEN 3  ELSE 5 END   ELSE ie_tipo_guia_w END ,
	a.dt_solicitacao,
	a.ie_carater_internacao,
	a.nr_seq_prestador,
	a.ie_status,
	coalesce(a.cd_guia_principal,cd_guia),
	substr(obter_dados_medico(a.cd_medico_solicitante,'CRM'),1,255),
	substr(obter_dados_medico(a.cd_medico_solicitante,'UFCRM'),1,255),
	substr(obter_dados_medico(a.cd_medico_solicitante, 'SGCRM'),1,255),
	(select	max(x.nr_sequencia)
	from	pls_tipo_atendimento x
	where	(x.cd_tiss)::numeric  = (a.ie_tipo_atend_tiss)::numeric
	and	x.cd_estabelecimento = cd_estabelecimento_p),
	coalesce(a.nr_seq_clinica,null),
	coalesce(a.ie_regime_internacao,null),
	coalesce(a.nr_seq_tipo_acomodacao,null),
	coalesce(a.ie_tipo_consulta,null),
	substr(obter_cooperativa_benef(a.nr_seq_segurado,cd_estabelecimento_p),1,4),
	nr_seq_prest_solic,
	a.nr_seq_conselho,
	nm_recem_nascido,
	dt_nasc_recem_nascido,--aldellandrea os 834365
	ie_recem_nascido,
	nr_seq_cbo_saude,
	a.cd_validacao_benef_tiss,
	a.cd_ausencia_val_benef_tiss,
	a.cd_ident_biometria_benef,
	a.cd_template_biomet_benef,
	a.ie_tipo_ident_benef,
	coalesce(a.cd_guia_prestador,cd_guia),
	ie_cobertura_especial,
	ie_regime_atendimento,
	ie_saude_ocupacional
into STRICT	cd_guia_w,
	dt_autorizacao_w,
	cd_senha_w,
	dt_validade_senha_w,
	nr_seq_segurado_w,
	cd_medico_solicitante_w,
	ie_tipo_guia_w,
	dt_emissao_w,
	ie_carater_internacao_w,
	nr_seq_prestador_w,
	ie_status_w,
	cd_guia_principal_w,
	nr_crm_exec_w,
	uf_crm_exec_w,
	sg_conselho_exec_w,
	nr_seq_tipo_atendimento_w,
	nr_seq_clinica_w,
	ie_regime_internacao_w,
	nr_seq_tipo_acomodacao_w,
	ie_tipo_consulta_w,
	cd_cooperativa_w,
	nr_seq_prestador_solic_w,
	nr_seq_conselho_w,
	nm_recem_nascido_w,
	dt_nascimento_w,
	ie_recem_nascido_w,
	nr_seq_cbo_saude_solic_w,
	cd_validacao_benef_tiss_w,
	cd_ausencia_val_benef_tiss_w,
	cd_ident_biometria_benef_w,
	cd_template_biomet_benef_w,
	ie_tipo_ident_benef_w,
	cd_guia_prestador_w,
	ie_cobertura_especial_w,
	ie_regime_atendimento_w,
	ie_saude_ocupacional_w
from	pls_guia_plano a
where	nr_sequencia	= nr_seq_guia_p;

--alteracao aldellandrea pego o tipo de indicacao do acidente
select	max(ie_indicacao_acidente)
into STRICT	ie_indicacao_acidente_w
from	pls_diagnostico
where	nr_seq_guia = nr_seq_guia_p;
--campo adicinado tambem no insert da plsconta
cd_guia_orig_w	:= cd_guia_w;

if (cd_guia_p IS NOT NULL AND cd_guia_p::text <> '') then
	cd_guia_w	:= cd_guia_p;
end if;

if (nr_seq_prestador_atend_p IS NOT NULL AND nr_seq_prestador_atend_p::text <> '') then
	nr_seq_prestador_atend_w	:= nr_seq_prestador_atend_p;
end if;

if (nr_seq_prestador_solic_w IS NOT NULL AND nr_seq_prestador_solic_w::text <> '') then
	nr_seq_prestador_atend_w := nr_seq_prestador_solic_w;
end if;

nr_seq_regra_pend_w := pls_obter_regra_autor_pend(ie_tipo_guia_w, nr_seq_regra_pend_w);

if (coalesce(nr_seq_regra_pend_w::text, '') = '') then
	ie_imp_med_exec_solic_w	:= coalesce(ie_imp_med_exec_solic_p, 'A');
else
	select	coalesce(max(a.ie_acao_regra),'R')
	into STRICT	ie_acao_regra_w
	from	pls_regra_autorizacao_pend	a
	where	a.nr_sequencia	= nr_seq_regra_pend_w;

	if (ie_acao_regra_w = 'R') then
		ie_imp_med_exec_solic_w	:= coalesce(ie_imp_med_exec_solic_p, 'A');
	elsif (ie_acao_regra_w = 'N') then
		ie_imp_med_exec_solic_w	:= 'N';
	elsif (ie_acao_regra_w = 'S') then
		ie_imp_med_exec_solic_w	:= 'S';
	elsif (ie_acao_regra_w = 'E') then
		ie_imp_med_exec_solic_w	:= 'E';
	end if;
end if;

cd_medico_exec_w	:= null;

if (ie_tipo_guia_w	<> '5') then
	cd_medico_exec_w	:= cd_medico_solicitante_w;

	if (ie_imp_med_exec_solic_w = 'E') then
		cd_medico_solicitante_w	:= null;
	elsif (ie_imp_med_exec_solic_w = 'S') then
		cd_medico_exec_w	:= null;
		nr_crm_exec_w		:= null;
	elsif (ie_imp_med_exec_solic_w = 'N') then
		cd_medico_solicitante_w	:= null;
		cd_medico_exec_w	:= null;
		nr_crm_exec_w		:= null;
	end if;
end if;

if (cd_medico_exec_w IS NOT NULL AND cd_medico_exec_w::text <> '') then
	begin
	select	max(nr_seq_cbo_saude)
	into STRICT	nr_seq_cbo_saude_w
	from	medico_especialidade
	where	cd_pessoa_fisica	= cd_medico_exec_w
	and	nr_seq_prioridade	=	(SELECT	min(nr_seq_prioridade)
						from	medico_especialidade
						where	cd_pessoa_fisica	= cd_medico_exec_w
						and	(nr_seq_cbo_saude IS NOT NULL AND nr_seq_cbo_saude::text <> ''));
	exception
	when others then
		nr_seq_cbo_saude_w	:= null;
	end;
end if;

if (cd_medico_solicitante_w IS NOT NULL AND cd_medico_solicitante_w::text <> '') and (coalesce(nr_seq_cbo_saude_solic_w::text, '') = '') then
	begin
	select	max(nr_seq_cbo_saude)
	into STRICT	nr_seq_cbo_saude_solic_w
	from	medico_especialidade
	where	cd_pessoa_fisica	= cd_medico_solicitante_w
	and	nr_seq_prioridade	=	(SELECT	min(nr_seq_prioridade)
						from	medico_especialidade
						where	cd_pessoa_fisica	= cd_medico_solicitante_w
						and	(nr_seq_cbo_saude IS NOT NULL AND nr_seq_cbo_saude::text <> ''));
	exception
	when others then
		nr_seq_cbo_saude_solic_w	:= null;
	end;
end if;

--Sempre  que for guia de internacao
if (ie_tipo_guia_w = '5') then

	ie_tipo_faturamento_w := ie_tipo_faturamento_p;
	if (coalesce(cd_guia_principal_w::text, '') = '') then
		cd_guia_principal_w := cd_guia_orig_w;
	end if;
else
	ie_tipo_faturamento_w := null;
end if;

--tratamento realizado para garantir que nao havera medico executor em guia de sp/sadt, pois deve estar vinculado nos participantes (pls_proc_participante)
if (ie_tipo_guia_w = '4') then
	cd_medico_exec_w := null;
end if;

select	nextval('pls_conta_seq')
into STRICT	nr_seq_conta_w
;

insert into pls_conta(nr_sequencia, nm_usuario, dt_atualizacao,
	nr_seq_protocolo, cd_guia, dt_autorizacao,
	cd_senha, dt_validade_senha, nr_seq_segurado,
	cd_medico_solicitante, ie_status, nr_seq_guia,
	ie_tipo_guia, cd_estabelecimento, cd_guia_referencia,
	ie_carater_internacao, dt_emissao, nr_seq_prestador_exec,
	cd_medico_executor, cd_guia_prestador, nr_crm_exec,
	nr_seq_cbo_saude, uf_crm_exec, sg_conselho_exec,
  nr_seq_tipo_atendimento, nr_seq_clinica, ie_regime_internacao,
  nr_seq_tipo_acomodacao, nr_seq_prestador, ie_origem_conta, ie_tipo_faturamento,
  ie_tipo_consulta, cd_cooperativa, dt_atualizacao_nrec,
  nm_usuario_nrec, ie_indicacao_acidente, nr_seq_conselho_exec,
  nm_recem_nascido, dt_nascimento, ie_recem_nascido,
  nr_seq_cbo_saude_solic, ie_cobertura_especial, ie_regime_atendimento,
  ie_saude_ocupacional)
values (nr_seq_conta_w, nm_usuario_p, clock_timestamp(),
  nr_seq_protocolo_p, cd_guia_w, dt_autorizacao_w,
  cd_senha_w, dt_validade_senha_w, nr_seq_segurado_w,
  cd_medico_solicitante_w, 'U', nr_seq_guia_p,
  ie_tipo_guia_w, cd_estabelecimento_p, cd_guia_principal_w,
  ie_carater_internacao_w, dt_emissao_w, nr_seq_prestador_w,
  cd_medico_exec_w, cd_guia_prestador_w, nr_crm_exec_w,
  nr_seq_cbo_saude_w, uf_crm_exec_w, sg_conselho_exec_w,
  nr_seq_tipo_atendimento_w, nr_seq_clinica_w, ie_regime_internacao_w,
  nr_seq_tipo_acomodacao_w, nr_seq_prestador_atend_w, 'D', ie_tipo_faturamento_w,
  ie_tipo_consulta_w, cd_cooperativa_w, clock_timestamp(),
  nm_usuario_p, ie_indicacao_acidente_w, nr_seq_conselho_w,
  nm_recem_nascido_w, dt_nascimento_w, ie_recem_nascido_w,
  nr_seq_cbo_saude_solic_w, ie_cobertura_especial_w, ie_regime_atendimento_w,
  ie_saude_ocupacional_w);

insert into pls_diagnostico_conta(nr_sequencia ,
  dt_atualizacao ,
  nm_usuario ,
  dt_atualizacao_nrec ,
  nm_usuario_nrec,
  ie_tipo_doenca,
  ie_tipo_doenca_imp ,
  ie_indicacao_acidente ,
  ie_indicacao_acidente_imp ,
  ie_classificacao ,
  ie_classificacao_imp ,
  cd_doenca ,
  cd_doenca_imp,
  ds_diagnostico ,
  ds_diagnostico_imp ,
  nm_tabela_imp,
  nr_seq_conta
  ) SELECT nextval('pls_diagnostico_conta_seq') ,
      clock_timestamp() ,
      nm_usuario_p ,
      clock_timestamp() ,
      nm_usuario_p,
      ie_tipo_doenca,
      ie_tipo_doenca_imp ,
      ie_indicacao_acidente ,
      ie_indicacao_acidente_imp ,
      ie_classificacao ,
      ie_classificacao_imp ,
      cd_doenca ,
      cd_doenca_imp,
      ds_diagnostico ,
      ds_diagnostico_imp ,
      nm_tabela_imp,
      nr_seq_conta_w
     from pls_diagnostico
    where nr_seq_guia = cd_guia_w;


CALL pls_conta_tiss_pck.criar_registro(  nr_seq_conta_w,      cd_estabelecimento_p,    cd_validacao_benef_tiss_w,
          cd_ausencia_val_benef_tiss_w,  cd_ident_biometria_benef_w,  cd_template_biomet_benef_w,
          ie_tipo_ident_benef_w,    Null,  nm_usuario_p);

nr_seq_conta_gerada_p  := nr_seq_conta_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_conta_guia ( nr_seq_protocolo_p bigint, cd_guia_p text, nr_seq_guia_p bigint, nr_seq_prestador_atend_p bigint, nm_usuario_p text, ie_imp_med_exec_solic_p text, ie_tipo_faturamento_p pls_conta.ie_tipo_faturamento%type, cd_estabelecimento_p pls_conta.cd_estabelecimento%type, nr_seq_conta_gerada_p INOUT bigint) FROM PUBLIC;

