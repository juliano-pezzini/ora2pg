-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gap_aprov_reprov_etapa ( nr_sequencia_p bigint, ie_resultado_p text, ie_comunicar_p text, ie_aprovar_p text, nm_usuario_p text) AS $body$
DECLARE

 
cd_pessoa_fisica_w		varchar(10);
cd_pf_usuario_w			varchar(10);
cd_pf_substituta_w		varchar(10);
nr_seq_processo_w		bigint;	
dt_prevista_w			timestamp;
ie_retorno_w			varchar(01);
nr_seq_prox_etapa_w		bigint;
nr_seq_apres_w			bigint;
nr_seq_etapa_w			bigint;
cd_pessoa_fisica_prox_w		varchar(10);
nm_usuario_prox_etapa_w		varchar(255);
ds_titulo_w			varchar(255);
ds_texto_w			varchar(4000);
ds_tipo_processo_w		varchar(100);
nm_prof_aprov_w			varchar(50);
ds_titulo_etapa_w		varchar(80);
cd_profissional_w		bigint;
nm_profissional_w		varchar(50);
qtd_registro_w			bigint;
qtd_resultato_w			varchar(01);


BEGIN 
 
select	coalesce(cd_pessoa_fisica,0), 
	nr_seq_processo, 
	dt_prevista, 
	nr_seq_etapa 
into STRICT	cd_pessoa_fisica_w, 
	nr_seq_processo_w, 
	dt_prevista_w, 
	nr_seq_etapa_w 
from	gap_processo_etapa 
where	nr_sequencia = nr_sequencia_p;
 
select	max(nr_seq_apres) 
into STRICT	nr_seq_apres_w 
from	gap_ritual 
where	nr_sequencia	= nr_seq_etapa_w;
 
select	min(a.nr_sequencia) 
into STRICT	nr_seq_prox_etapa_w 
from	gap_ritual b, 
	gap_processo_etapa a 
where	a.nr_seq_etapa		= b.nr_sequencia 
and	a.nr_seq_processo	= nr_seq_processo_w 
and	b.nr_seq_apres >= nr_seq_apres_w 
and	a.nr_sequencia > nr_sequencia_p 
and	coalesce(a.ie_resultado,'N') = 'N';
 
 
select 	count(*) 
into STRICT	qtd_registro_w 
from 	gap_processo_etapa 
where	nr_seq_processo = nr_seq_processo_w;
 
if (nr_seq_prox_etapa_w IS NOT NULL AND nr_seq_prox_etapa_w::text <> '') and (ie_comunicar_p = 'S')then 
	 
	select	coalesce(cd_pessoa_fisica,'0') 
	into STRICT	cd_pessoa_fisica_prox_w 
	from	gap_processo_etapa 
	where	nr_sequencia	= nr_seq_prox_etapa_w;
	 
	if (coalesce(cd_pessoa_fisica_prox_w,'0') <> '0') then 
	 
		select 	max(a.ds_tipo) 
		into STRICT	ds_tipo_processo_w 
		from	gap_tipo a, 
			gap_processo b 
		where	a.nr_sequencia 	= b.nr_seq_tipo 
		and	b.nr_sequencia	= nr_seq_processo_w;
		 
		select 	max(b.ds_titulo_etapa) 
		into STRICT	ds_titulo_etapa_w 
		from	gap_processo_etapa a, 
			gap_ritual b 
		where	b.nr_sequencia 	= a.nr_seq_etapa 
		and	a.nr_sequencia	= nr_seq_prox_etapa_w;
		 
		select	max(a.cd_pessoa_fisica) 
		into STRICT	cd_profissional_w 
		from	gap_processo a 
		where	a.nr_sequencia	= nr_seq_processo_w;
		 
		nm_usuario_prox_etapa_w	:= substr(obter_usuario_pessoa(cd_pessoa_fisica_prox_w),1,15);
		ds_titulo_w		:= substr(wheb_mensagem_pck.get_texto(279519),1,255);
		nm_prof_aprov_w		:= substr(obter_nome_pf_pj(cd_pessoa_fisica_prox_w,null),1,255);
		nm_profissional_w	:= substr(obter_nome_pf_pj(cd_profissional_w, null),1,255);
		ds_texto_w		:= substr(nm_prof_aprov_w || ', ' || chr(13) || chr(10) || 
					wheb_mensagem_pck.get_texto(279523, 'DS_TIPO_PROCESSO_P=' || ds_tipo_processo_w || 
										';NM_PROFISSIONAL_P=' || nm_profissional_w || 
										';DS_TITULO_ETAPA_P=' || ds_titulo_etapa_w),1,4000);
		nm_usuario_prox_etapa_w := substr(nm_usuario_prox_etapa_w || ',',1,255);
				  
		CALL gerar_comunic_padrao(	clock_timestamp(), 
					ds_titulo_w, 
					ds_texto_w, 
					nm_usuario_p, 
					'N', 
					nm_usuario_prox_etapa_w, 
					'N', 
					null, 
					null, 
					null, 
					null, 
					clock_timestamp(), 
					null, 
					null);
	end if;
end if;
 
 
select	coalesce(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),0) 
into STRICT	cd_pf_usuario_w
;
 
select 	max(cd_pessoa_substituta) 
into STRICT	cd_pf_substituta_w 
from  	pessoa_fisica_delegacao 
where 	cd_pessoa_fisica = cd_pessoa_fisica_w 
and 	cd_pessoa_substituta = cd_pf_usuario_w 
and 	ie_objetivo = 'AA' 
and 	trunc(dt_limite) >= trunc(clock_timestamp());
 
if	((cd_pessoa_fisica_w > 0) and (cd_pf_usuario_w > 0) and (cd_pessoa_fisica_w = cd_pf_usuario_w)) or 
	(cd_pf_substituta_w <> '0' AND cd_pf_usuario_w = cd_pf_substituta_w) then 
	 
	begin 
	select	aprovar_gap_etapa(nr_seq_processo_w, nr_sequencia_p, dt_prevista_w) 
	into STRICT	ie_retorno_w 
	;
	if (ie_retorno_w = 'S') then 
		update	gap_processo_etapa 
		set	ie_resultado = ie_resultado_p, 
			dt_resultado = clock_timestamp() 
		where	nr_sequencia = nr_sequencia_p;
		 
		select 	count(*) 
		into STRICT	qtd_resultato_w 
		from 	gap_processo_etapa 
		where	nr_seq_processo = nr_seq_processo_w 
		and 	ie_resultado = 'A';
			 
			if	((qtd_registro_w = qtd_resultato_w) and (ie_aprovar_p = 'S') or (qtd_resultato_w = '0') ) then 
					CALL gap_aprovar_processo(nr_seq_processo_w,nm_usuario_p);
			end if;
		 
	else 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(279537);
	end if;
	end;
else 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(279541);
end if;
 
commit;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gap_aprov_reprov_etapa ( nr_sequencia_p bigint, ie_resultado_p text, ie_comunicar_p text, ie_aprovar_p text, nm_usuario_p text) FROM PUBLIC;

