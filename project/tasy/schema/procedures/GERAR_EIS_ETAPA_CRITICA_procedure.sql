-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_etapa_critica ( cd_estabelecimento_p bigint, dt_mes_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE

 
dt_inicial_w			timestamp;
dt_final_w			timestamp;
cd_setor_atendimento_w		bigint;
nr_interno_conta_w			bigint;
dt_etapa_w			timestamp;
nr_atendimento_w			bigint;
nr_seq_etapa_w			bigint;
nr_seq_motivo_dev_w		bigint;
ds_observacao_w			varchar(2000);
cd_pessoa_fisica_w		varchar(10);
nr_sequencia_w			bigint;
nr_seq_w				bigint;
nr_seq_adic_w			bigint;
ds_obs_adic_w			varchar(255);
dt_alta_w				timestamp;
vl_conta_w			double precision;
cd_convenio_w			integer;
nr_seq_ultima_etapa_w		bigint;

c01 CURSOR FOR 
	SELECT 	to_char(a.dt_etapa,'dd/mm/yyyy') dt_etapa, 
		b.nr_atendimento, 
		a.nr_interno_conta, 
		a.nr_seq_etapa, 
		a.cd_setor_atendimento, 
		a.nr_seq_motivo_dev, 
		a.ds_observacao, 
		a.cd_pessoa_fisica, 
		a.nr_sequencia, 
		to_char(obter_data_alta_atendimento(b.nr_atendimento),'dd/mm/yyyy') dt_alta, 
		obter_valor_conta(b.nr_interno_conta,0) vl_conta, 
		b.cd_convenio_parametro cd_convenio 
	from 	conta_paciente_etapa a, 
		conta_paciente b 
	where 	a.nr_interno_conta 		= b.nr_interno_conta 
	and	b.cd_estabelecimento 	= cd_estabelecimento_p 
	and 	coalesce(a.ie_etapa_critica,'N') 	= 'S' 
	and	obter_data_alta_atendimento(b.nr_atendimento) between dt_inicial_w and dt_final_w;


BEGIN 
 
dt_inicial_w		:= trunc(dt_mes_referencia_p, 'month');
dt_final_w		:= fim_dia(last_day(dt_mes_referencia_p));
 
delete	from eis_etapa_critica 
where	cd_estabelecimento = cd_estabelecimento_p 
and	dt_referencia = dt_inicial_w;
 
open c01;
loop 
fetch 	c01 into 
	dt_etapa_w, 
	nr_atendimento_w, 
	nr_interno_conta_w, 
	nr_seq_etapa_w, 
	cd_setor_atendimento_w, 
	nr_seq_motivo_dev_w, 
	ds_observacao_w, 
	cd_pessoa_fisica_w, 
	nr_seq_w, 
	dt_alta_w, 
	vl_conta_w, 
	cd_convenio_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	select	max(nr_seq_etapa) 
	into STRICT	nr_seq_ultima_etapa_w 
	from	conta_paciente_etapa 
	where	nr_interno_conta = nr_interno_conta_w	 
	and 	coalesce(ie_etapa_critica,'N') 	= 'S';
 
	select	nextval('eis_etapa_critica_seq') 
	into STRICT	nr_sequencia_w 
	;
 
	insert into eis_etapa_critica(nr_sequencia, 
		cd_estabelecimento, 
		dt_referencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		dt_etapa, 
		nr_atendimento, 
		nr_interno_conta, 
		nr_seq_etapa, 
		cd_setor_atendimento, 
		nr_seq_motivo_dev, 
		ds_observacao, 
		cd_pessoa_fisica, 
		dt_alta, 
		vl_conta, 
		cd_convenio) 
	values (	nr_sequencia_w, 
		cd_estabelecimento_p, 
		dt_inicial_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		dt_etapa_w, 
		nr_atendimento_w, 
		nr_interno_conta_w, 
		nr_seq_etapa_w, 
		cd_setor_atendimento_w, 
		nr_seq_motivo_dev_w, 
		null, 
		cd_pessoa_fisica_w, 
		dt_alta_w, 
		CASE WHEN nr_seq_etapa_w=nr_seq_ultima_etapa_w THEN  vl_conta_w  ELSE 0 END , 
		cd_convenio_w);
	end;
end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_etapa_critica ( cd_estabelecimento_p bigint, dt_mes_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

