-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_verifica_tempo_aud_aut ( nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Verificar requisicoes que estao em auditoria e exib
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao: Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_regra_w			pls_regra_prazo_auditoria.nr_sequencia%type;
ie_tipo_guia_w			pls_regra_prazo_auditoria.ie_tipo_guia%type;
ie_carater_internacao_w		pls_regra_prazo_auditoria.ie_carater_internacao%type;
cd_area_procedimento_w		pls_regra_prazo_auditoria.cd_area_procedimento%type;
cd_especialidade_w		pls_regra_prazo_auditoria.cd_especialidade%type;
cd_grupo_proc_w			pls_regra_prazo_auditoria.cd_grupo_proc%type;
cd_procedimento_w		pls_regra_prazo_auditoria.cd_procedimento%type;
ie_origem_proced_w		pls_regra_prazo_auditoria.ie_origem_proced%type;
qt_dias_alerta_w		pls_regra_prazo_auditoria.qt_dias_alerta%type;
nr_seq_grupo_servico_w		pls_regra_prazo_auditoria.nr_seq_grupo_servico%type;
cd_espec_medica_w		pls_regra_prazo_auditoria.cd_espec_medica%type;
ie_diretriz_utilizacao_w	pls_regra_prazo_auditoria.ie_diretriz_utilizacao%type;
ie_complexidade_w		pls_regra_prazo_auditoria.ie_complexidade%type;

nr_seq_guia_w			pls_guia_plano.nr_sequencia%type;
dt_solicitacao_w		pls_guia_plano.dt_solicitacao%type;
ie_tipo_guia_aut_w		pls_guia_plano.ie_tipo_guia%type;
ie_carater_internacao_aut_w	pls_guia_plano.ie_carater_internacao%type;
cd_espec_medica_aut_w		pls_guia_plano.cd_especialidade%type;

cd_proc_aut_w			pls_guia_plano_proc.cd_procedimento%type;
ie_origem_proc_aut_w		pls_guia_plano_proc.ie_origem_proced%type;

ie_dut_w			pls_rol_grupo_proc.ie_diretriz_utilizacao%type;
ie_pac_w			pls_rol_grupo_proc.ie_complexidade%type;

nr_seq_auditoria_w		pls_auditoria.nr_sequencia%type;
ie_prioridade_manual_w	pls_auditoria.ie_prioridade_manual%type;
ie_consid_prioridade_man_w		pls_param_analise_aut.ie_consid_prioridade_man%type;

cd_area_proc_aut_w		bigint;
cd_espec_proc_aut_w		bigint;
cd_grupo_proc_aut_w		bigint;
ie_origem_w			smallint;
qt_dias_vencidos_w		bigint;
ie_entrou_regra_w		varchar(1);
qt_min_dias_alerta_w		bigint 	:= 999;
ie_prioridade_w			smallint;
nr_seq_regra_prior_w		bigint;
ie_proc_grupo_servico_w		varchar(1);
ds_historico_w			varchar(4000);
dt_vencimento_w			timestamp;
ie_funcao_regra_w		pls_regra_prazo_auditoria.ie_funcao_regra%type;

C00 CURSOR FOR
	SELECT	nr_sequencia,
		ie_tipo_guia,
		ie_carater_internacao,
		cd_area_procedimento,
		cd_especialidade,
		cd_grupo_proc,
		cd_procedimento,
		ie_origem_proced,
		qt_dias_alerta,
		nr_seq_grupo_servico,
		cd_espec_medica,
		ie_diretriz_utilizacao,
		ie_complexidade,
		ie_funcao_regra
	from (
		SELECT	nr_sequencia,
			ie_tipo_guia,
			ie_carater_internacao,
			cd_area_procedimento,
			cd_especialidade,
			cd_grupo_proc,
			cd_procedimento,
			ie_origem_proced,
			qt_dias_alerta,
			nr_seq_grupo_servico,
			cd_espec_medica,
			ie_diretriz_utilizacao,
			ie_complexidade,
			ie_funcao_regra
		from	pls_regra_prazo_auditoria
		where	ie_situacao	= 'A'
		and (coalesce(cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento and pls_obter_se_controle_estab('RE') = 'S')
		
union all

		select	nr_sequencia,
			ie_tipo_guia,
			ie_carater_internacao,
			cd_area_procedimento,
			cd_especialidade,
			cd_grupo_proc,
			cd_procedimento,
			ie_origem_proced,
			qt_dias_alerta,
			nr_seq_grupo_servico,
			cd_espec_medica,
			ie_diretriz_utilizacao,
			ie_complexidade,
			ie_funcao_regra
		from	pls_regra_prazo_auditoria
		where	ie_situacao	= 'A'
		and 	pls_obter_se_controle_estab('RE') = 'N') alias4
	order by qt_dias_alerta desc;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		dt_solicitacao,
		ie_tipo_guia,
		ie_carater_internacao,
		cd_especialidade
	from	pls_guia_plano
	where	coalesce(dt_liberacao::text, '') = ''
	and	ie_estagio		in (1,11);

C02 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced
	from	pls_guia_plano_proc
	where	nr_seq_guia		= nr_seq_guia_w;

C03 CURSOR FOR
	SELECT	nr_sequencia nr_sequencia,
			coalesce(ie_prioridade_manual, 'N') ie_prioridade_manual
	from		pls_auditoria
	where	nr_seq_guia	= nr_seq_guia_w;


BEGIN

select	coalesce(max(ie_consid_prioridade_man), 'N')
into STRICT		ie_consid_prioridade_man_w
from		pls_param_analise_aut
where	((pls_obter_se_controle_estab('RE') = 'S') and (cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento)
or (pls_obter_se_controle_estab('RE') = 'N'));

open C01;
loop
fetch C01 into	
	nr_seq_guia_w,
	dt_solicitacao_w,
	ie_tipo_guia_aut_w,
	ie_carater_internacao_aut_w,
	cd_espec_medica_aut_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ie_entrou_regra_w	:= 'N';
	
	open C03;
	loop
	fetch C03 into
		nr_seq_auditoria_w,
		ie_prioridade_manual_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		
		if (ie_consid_prioridade_man_w = 'S' and ie_prioridade_manual_w = 'S') then
			ie_entrou_regra_w	:= 'N';
		else
	
			open C00;
			loop
			fetch C00 into
				nr_seq_regra_w,
				ie_tipo_guia_w,
				ie_carater_internacao_w,
				cd_area_procedimento_w,
				cd_especialidade_w,
				cd_grupo_proc_w,
				cd_procedimento_w,
				ie_origem_proced_w,
				qt_dias_alerta_w,
				nr_seq_grupo_servico_w,
				cd_espec_medica_w,
				ie_diretriz_utilizacao_w,
				ie_complexidade_w,
				ie_funcao_regra_w;
			EXIT WHEN NOT FOUND; /* apply on C00 */
				begin	
				open C02;
				loop
				fetch C02 into	
					cd_proc_aut_w,
					ie_origem_proc_aut_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin
					SELECT * FROM pls_obter_estrut_proc(	cd_proc_aut_w, ie_origem_proc_aut_w, cd_area_proc_aut_w, cd_espec_proc_aut_w, cd_grupo_proc_aut_w, ie_origem_w) INTO STRICT cd_area_proc_aut_w, cd_espec_proc_aut_w, cd_grupo_proc_aut_w, ie_origem_w;
								
					ie_dut_w	:= pls_obter_dados_grupo_rol(cd_proc_aut_w, ie_origem_proc_aut_w, 'DUT');
					ie_pac_w	:= pls_obter_dados_grupo_rol(cd_proc_aut_w, ie_origem_proc_aut_w, 'PAC');
					
					ie_proc_grupo_servico_w := pls_se_grupo_preco_servico(	nr_seq_grupo_servico_w, cd_proc_aut_w, ie_origem_proc_aut_w);

					if	((coalesce(ie_tipo_guia_w::text, '') = '') 		or (ie_tipo_guia_w 		= ie_tipo_guia_aut_w)) and
						((coalesce(ie_carater_internacao_w::text, '') = '') 	or (ie_carater_internacao_w	= ie_carater_internacao_aut_w)) and
						((coalesce(cd_area_procedimento_w::text, '') = '') 	or (cd_area_procedimento_w	= cd_area_proc_aut_w)) and
						((coalesce(cd_especialidade_w::text, '') = '') 		or (cd_especialidade_w 		= cd_espec_proc_aut_w)) and
						((coalesce(cd_grupo_proc_w::text, '') = '') 		or (cd_grupo_proc_w 		= cd_grupo_proc_aut_w)) and
						((coalesce(cd_procedimento_w::text, '') = '') 		or (cd_procedimento_w 		= cd_proc_aut_w AND ie_origem_proced_w		= ie_origem_proc_aut_w)) and
						((coalesce(nr_seq_grupo_servico_w::text, '') = '')	or (ie_proc_grupo_servico_w 	= 'S')) and
						((coalesce(cd_espec_medica_w::text, '') = '')		or (cd_espec_medica_w		= cd_espec_medica_aut_w)) and
						((coalesce(ie_diretriz_utilizacao_w::text, '') = '') 	or (coalesce(ie_diretriz_utilizacao_w,'N') 	= coalesce(ie_dut_w,'N'))) and
						((coalesce(ie_complexidade_w::text, '') = '')		or (coalesce(ie_complexidade_w,'N') 		= coalesce(ie_pac_w,'N'))) and
						((coalesce(ie_funcao_regra_w::text, '') = '') 		or (ie_funcao_regra_w 		= 'AU')) then

						ie_entrou_regra_w	:= 'S';	

						dt_vencimento_w := pls_obter_data_dias_uteis(trunc(dt_solicitacao_w), qt_dias_alerta_w, wheb_usuario_pck.get_cd_estabelecimento);

						if (dt_vencimento_w >= clock_timestamp()) then
							qt_dias_vencidos_w	:= null;
						else
							qt_dias_vencidos_w := pls_obter_dias_uteis_periodo(trunc(dt_vencimento_w), trunc(clock_timestamp()));
						end if;

					end if;

					if (ie_entrou_regra_w	= 'S') then

						select	max(nr_sequencia)
						into STRICT	nr_seq_regra_prior_w
						from	pls_prioridade_analise_aut
						where	ie_situacao		= 'A'
						and	ie_aplicacao_regra	= 'A';

						if (nr_seq_regra_prior_w IS NOT NULL AND nr_seq_regra_prior_w::text <> '') then
							select	ie_prioridade
							into STRICT	ie_prioridade_w
							from	pls_prioridade_analise_aut
							where	nr_sequencia	= nr_seq_regra_prior_w;
						end if;

						update	pls_auditoria
						set	qt_dias_vencidos 		= qt_dias_vencidos_w,
							dt_vencimento			= trunc(dt_vencimento_w),
							ie_prioridade			= ie_prioridade_w,
							nr_seq_prioridade_analise	= nr_seq_regra_prior_w,
							nm_usuario			= nm_usuario_p,
							dt_atualizacao			= clock_timestamp()
						where	nr_sequencia	 	= nr_seq_auditoria_w;

						ds_historico_w	:= wheb_mensagem_pck.get_texto(1130032,'NR_SEQ_REGRA=' || nr_seq_regra_w);

						insert into pls_guia_plano_historico(nr_sequencia, nr_seq_guia, ie_tipo_log,
							dt_historico, dt_atualizacao, nm_usuario,
							ds_observacao, ie_origem_historico, ie_tipo_historico,
							nr_seq_item,nr_seq_grupo)
						values (	nextval('pls_guia_plano_historico_seq'), nr_seq_guia_w, null,
							clock_timestamp(), clock_timestamp(), nm_usuario_p,
							ds_historico_w,'A','L',
							null, null);

						commit;
						ie_entrou_regra_w := 'N';
					end if;
					end;
				end loop;
				close C02;
				end;
			end loop;
			close C00;
		end if;
		end;
	end loop;
	close C03;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_verifica_tempo_aud_aut ( nm_usuario_p text) FROM PUBLIC;

