-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE alterar_conta_financ_tit_pagar (nr_seq_conta_financ_ant_p bigint, nr_seq_conta_financ_nova_p bigint, cd_centro_custo_ant_p bigint, cd_centro_custo_novo_p bigint, cd_conta_contabil_ant_p text, cd_conta_contabil_novo_p text, nr_titulo_p text, dt_vencimento_p timestamp, ie_vencimento_p text, ie_conta_financ_p text, ie_centro_custo_p text, ie_conta_contabil_p text, vl_saldo_juros_p bigint, vl_saldo_multa_p bigint, tx_juros_p bigint, tx_multa_p bigint, nm_usuario_p text, ie_recalcular_trib_p text, pr_reajuste_p bigint, nr_seq_trans_alt_valor_p bigint, dt_alteracao_p timestamp) AS $body$
DECLARE


nr_titulo_w		bigint;
nr_sequencia_w		bigint;
cont_w			bigint;
nr_lote_contabil_w	bigint;
ie_situacao_w		varchar(1);
vl_classif_w		double precision;
cd_estabelecimento_w	smallint;
vl_saldo_w		double precision;
vl_baixa_w			double precision;
vl_adiantamento_w			double precision;
ie_consiste_baixa_w		varchar(4000);
ie_situacao_conta_w		conta_financeira.ie_situacao%type;	

c01 CURSOR FOR
SELECT	nr_titulo,
	coalesce(nr_lote_contabil, 0),
	ie_situacao,
	(obter_dados_tit_pagar(nr_titulo, 'VT'))::numeric  vl_classif,
	cd_estabelecimento,
	vl_saldo_titulo
from	titulo_pagar a
where	' ' || nr_titulo_p || ' ' like '% ' || to_char(a.nr_titulo) || ' %';


BEGIN

if (length(nr_titulo_p) >= 4000) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(712102);
end if;

select	max(ie_situacao)
into STRICT	ie_situacao_conta_w
from	conta_financeira
where 	cd_conta_financ = nr_seq_conta_financ_nova_p;

if (ie_situacao_conta_w = 'I') then
	--A conta financeira informada está inativa!
	CALL wheb_mensagem_pck.exibir_mensagem_abort(692976);
end if;


open c01;
loop
fetch c01 into
	nr_titulo_w,
	nr_lote_contabil_w,
	ie_situacao_w,
	vl_classif_w,
	cd_estabelecimento_w,
	vl_saldo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	
	select	coalesce(sum(vl_baixa),0)
	into STRICT 	vl_baixa_w
	from	titulo_pagar_baixa
	where	nr_titulo = nr_titulo_w;
	
	select	coalesce(sum(vl_adiantamento),0)
	into STRICT	vl_adiantamento_w
	from	titulo_pagar_adiant
	where	nr_titulo	= nr_titulo_w;	
		
	if obter_parametro_funcao_padrao(851, 17, nm_usuario_p) = 'N' then
		if (((ie_conta_financ_p = 'S') or (ie_centro_custo_p	= 'S' AND nr_lote_contabil_w	= 0)
			or (ie_conta_contabil_p	= 'S' AND nr_lote_contabil_w	= 0)) and (vl_baixa_w <> 0 or vl_adiantamento_w <> 0)) then
				ie_consiste_baixa_w := substr(ie_consiste_baixa_w || ' '|| nr_titulo_w,1,4000);
		end if;
	end if;

end loop;
close c01;

	if ((ie_consiste_baixa_w IS NOT NULL AND ie_consiste_baixa_w::text <> '') or ie_consiste_baixa_w <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1040047,'ds_lista_titulos='||ie_consiste_baixa_w);
	end if;
	

open c01;
loop
fetch c01 into
	nr_titulo_w,
	nr_lote_contabil_w,
	ie_situacao_w,
	vl_classif_w,
	cd_estabelecimento_w,
	vl_saldo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	select	count(*)
	into STRICT	cont_w
	from	titulo_pagar_classif
	where	nr_titulo		= nr_titulo_w;
	

	if (cont_w = 0) then
		insert into titulo_pagar_classif(NR_TITULO,
			NR_SEQUENCIA,
			VL_TITULO,
			DT_ATUALIZACAO,
			NM_USUARIO,
			CD_CONTA_CONTABIL,
			CD_CENTRO_CUSTO,
			NR_SEQ_CONTA_FINANC,
			NR_SEQ_TRANS_FIN,
			NR_CONTRATO,
			VL_DESCONTO,
			VL_ORIGINAL,
			VL_ACRESCIMO)
		values (nr_titulo_w,
			1,
			vl_classif_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_conta_contabil_novo_p,
			cd_centro_custo_novo_p,
			nr_seq_conta_financ_nova_p,
			null,
			null,
			0,
			vl_classif_w,
			0);
	end if;

	if (ie_conta_financ_p = 'S') then
	
			nr_titulo_w := nr_titulo_w;

			update	titulo_pagar_classif
			set	nm_usuario		= nm_usuario_p,
				dt_atualizacao	= clock_timestamp(),
				nr_seq_conta_financ	= nr_seq_conta_financ_nova_p
			where	nr_titulo		= nr_titulo_w
			and	coalesce(nr_seq_conta_financ,0)	= coalesce(nr_seq_conta_financ_ant_p,0);

			update	titulo_pagar_baixa_cc
			set	nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				cd_conta_financ		= nr_seq_conta_financ_nova_p
			where	coalesce(cd_conta_financ,0)	= coalesce(nr_seq_conta_financ_ant_p,0)
			and	nr_titulo		= nr_titulo_w;
	end if;
	if (ie_centro_custo_p 	= 'S') and (nr_lote_contabil_w	= 0) then

		nr_titulo_w := nr_titulo_w;


		update	titulo_pagar_classif
		set	nm_usuario		= nm_usuario_p,
			dt_atualizacao	= clock_timestamp(),
			cd_centro_custo	= cd_centro_custo_novo_p
		where	nr_titulo		= nr_titulo_w
		and	coalesce(cd_centro_custo,0)	= coalesce(cd_centro_custo_ant_p,0);

		update	titulo_pagar_baixa_cc
		set	nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			cd_centro_custo		= cd_centro_custo_novo_p
		where	coalesce(cd_centro_custo,0)	= coalesce(cd_centro_custo_ant_p,0)
		and	nr_titulo		= nr_titulo_w;

	end if;

	if (ie_conta_contabil_p	= 'S') and (nr_lote_contabil_w	= 0) then

		nr_titulo_w := nr_titulo_w;

		update	titulo_pagar_classif
		set	nm_usuario		= nm_usuario_p,
			dt_atualizacao	= clock_timestamp(),
			cd_conta_contabil	= cd_conta_contabil_novo_p
		where	nr_titulo		= nr_titulo_w
		and	coalesce(cd_conta_contabil,0)	= coalesce(cd_conta_contabil_ant_p,0);

		update	titulo_pagar_baixa_cc
		set	nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			cd_conta_contabil	= cd_conta_contabil_novo_p
		where	coalesce(cd_conta_contabil,0)	= coalesce(cd_conta_contabil_ant_p,0)
		and	nr_titulo		= nr_titulo_w;

	end if;

	if (ie_vencimento_p = 'S') and (ie_situacao_w   = 'A') then

		select	coalesce(max(nr_sequencia), 0) + 1
		into STRICT	nr_sequencia_w
		from	titulo_pagar_alt_venc
		where	nr_titulo	= nr_titulo_w;

		insert	into titulo_pagar_alt_venc(NR_TITULO,
			NR_SEQUENCIA,
			DT_ANTERIOR,
			DT_VENCIMENTO,
			DT_ATUALIZACAO,
			NM_USUARIO,
			DT_ALTERACAO,
			DS_OBSERVACAO,
			vl_saldo_juros,
			vl_saldo_multa,
			tx_juros,
			tx_multa)
		SELECT	nr_titulo,
			nr_sequencia_w,
			dt_vencimento_atual,
			dt_vencimento_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			null,
			vl_saldo_juros_p,
			vl_saldo_multa_p,
			tx_juros_p,
			tx_multa_p
		from	titulo_pagar
		where	nr_titulo	= nr_titulo_w;

		CALL ATUALIZAR_VENC_TITULO_PAGAR(nr_titulo_w, nr_sequencia_w, nm_usuario_p);

/*		Edgar 28/09/2006, Os 41585, troquei pela procedure acima
		update	titulo_pagar
		set	dt_vencimento_atual	= dt_vencimento_p,
			dt_atualizacao	= sysdate,
			nm_usuario		= nm_usuario_p
		where	nr_titulo		= nr_titulo_w;
*/
	end if;

	/* Francisco - OS 55375 - 12/11/2007 */

	if (ie_recalcular_trib_p = 'S') then
		CALL recalcular_classif_tit_imposto(nr_titulo_w,nm_usuario_p);
	end if;

	if (pr_reajuste_p <> 0) then
		select	coalesce(max(nr_sequencia), 0) + 1
		into STRICT	nr_sequencia_w
		from	titulo_pagar_alt_valor
		where	nr_titulo	= nr_titulo_w;

		insert into titulo_pagar_alt_valor(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nr_titulo,
			dt_alteracao,
			cd_moeda,
			vl_anterior,
			vl_alteracao,
			nr_seq_trans_fin,
			nr_lote_contabil)
		values	(nr_sequencia_w,
			nm_usuario_p,
			clock_timestamp(),
			nr_titulo_w,
			coalesce(dt_alteracao_p,clock_timestamp()),
			obter_moeda_padrao(cd_estabelecimento_w,'P'),
			vl_saldo_w,
			vl_saldo_w + (vl_saldo_w * dividir(pr_reajuste_p,100)), /* dsantos em 10/03/10 - OS200950 - considerar valor do saldo, não da ultima alteração de valor.*/
			nr_seq_trans_alt_valor_p,
			0);

		CALL atualizar_saldo_tit_pagar(nr_titulo_w,nm_usuario_p);
	end if;

end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE alterar_conta_financ_tit_pagar (nr_seq_conta_financ_ant_p bigint, nr_seq_conta_financ_nova_p bigint, cd_centro_custo_ant_p bigint, cd_centro_custo_novo_p bigint, cd_conta_contabil_ant_p text, cd_conta_contabil_novo_p text, nr_titulo_p text, dt_vencimento_p timestamp, ie_vencimento_p text, ie_conta_financ_p text, ie_centro_custo_p text, ie_conta_contabil_p text, vl_saldo_juros_p bigint, vl_saldo_multa_p bigint, tx_juros_p bigint, tx_multa_p bigint, nm_usuario_p text, ie_recalcular_trib_p text, pr_reajuste_p bigint, nr_seq_trans_alt_valor_p bigint, dt_alteracao_p timestamp) FROM PUBLIC;

