-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_copiar_pericia_medica ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_pericia_med_w		bigint;
nr_seq_pericia_med_novo_w	bigint;
nr_seq_pericia_med_hist_w	bigint;
nr_seq_pericia_med_log_w	bigint;
qt_registros_w			bigint;
nr_seq_segurado_w		bigint;
nr_seq_segurado_ant_w		bigint;
nr_seq_emissor_ant_w		bigint;
nr_seq_prestador_ant_w		bigint;
nr_seq_segurado_novo_ww		bigint;
nr_seq_anexo_w			bigint;
nr_seq_emissor_novo_w		bigint;
nr_seq_plano_ant_w		bigint;
nr_proposta_adesao_ant_w	bigint;
nr_seq_pessoa_proposta_ant_w	bigint;
nr_seq_plano_novo_w		bigint;
nr_seq_proposta_novo_w		bigint;
nr_seq_pessoa_proposta_novo_w	bigint;
qt_benef_w			bigint;
nr_seq_segurado_novo_w		bigint;
nr_seq_seg_carteira_w		bigint;
nr_seq_seg_cart_novo_w		bigint;
nr_seq_estagio_cartao_w		bigint;
nr_seq_seg_cart_ant_w		bigint;
nr_seq_motivo_via_ant_w		bigint;
nr_via_cart_ant_ant_w		bigint;
nr_seq_motivo_via_novo_w	bigint;
nr_via_cart_ant_novo_w		bigint;
nr_seq_prestador_novo_w		bigint;

C00 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_segurado
	where	ie_tipo_segurado	= 'P'
	and	coalesce(nr_seq_contrato::text, '') = '';

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_pericia_medica
	where	cd_estabelecimento	= cd_estab_origem_p;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_pericia_historico
	where	nr_seq_pericia	= nr_seq_pericia_med_w;

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_pericia_log
	where	nr_seq_pericia	= nr_seq_pericia_med_w;

C04 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_pericia_anexo
	where	nr_seq_pericia	= nr_seq_pericia_med_w;

C05 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_segurado_carteira
	where	nr_seq_segurado	= nr_seq_segurado_w;

C06 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_segurado_cart_estagio
	where	nr_seq_cartao_seg	= nr_seq_seg_carteira_w;

C07 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_segurado_cart_ant
	where	nr_seq_segurado	= nr_seq_segurado_w;


BEGIN

open C00;
loop
fetch C00 into
	nr_seq_segurado_w;
EXIT WHEN NOT FOUND; /* apply on C00 */
	begin
	
	select	nr_seq_plano,
		nr_proposta_adesao,
		nr_seq_pessoa_proposta
	into STRICT	nr_seq_plano_ant_w,
		nr_proposta_adesao_ant_w,
		nr_seq_pessoa_proposta_ant_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;
	
	begin
	select	nr_sequencia
	into STRICT	nr_seq_plano_novo_w
	from	pls_plano
	where	nr_seq_plano_ant	= nr_seq_plano_ant_w;
	exception
	when others then
		nr_seq_plano_novo_w	:= nr_seq_plano_ant_w;
	end;
	
	begin
	select	nr_sequencia
	into STRICT	nr_seq_proposta_novo_w
	from	pls_proposta_adesao
	where	nr_seq_proposta_ant	= nr_proposta_adesao_ant_w;
	exception
	when others then
		nr_seq_proposta_novo_w	:= nr_proposta_adesao_ant_w;
	end;
	
	begin
	select	nr_sequencia
	into STRICT	nr_seq_pessoa_proposta_novo_w
	from	pls_proposta_beneficiario
	where	nr_seq_benef_ant	= nr_seq_pessoa_proposta_ant_w;
	exception
	when others then
		nr_seq_pessoa_proposta_novo_w	:= nr_seq_pessoa_proposta_ant_w;
	end;
	
	select	count(*)
	into STRICT	qt_benef_w
	from	pls_segurado
	where	nr_seq_contrato_ant	= nr_seq_segurado_w;
	
	if (qt_benef_w = 0) then
		select	nextval('pls_segurado_seq')
		into STRICT	nr_seq_segurado_novo_w
		;
		
		insert into pls_segurado(	nr_sequencia,dt_atualizacao, nm_usuario,dt_atualizacao_nrec, nm_usuario_nrec,
				dt_liberacao,cd_pessoa_fisica,nr_seq_plano,nr_proposta_adesao,nr_seq_pessoa_proposta,
				ie_tipo_segurado,ie_situacao_atend,nr_seq_contrato_ant,cd_estabelecimento)
			(SELECT	nr_seq_segurado_novo_w,clock_timestamp(), nm_usuario,clock_timestamp(), nm_usuario,
				dt_liberacao,cd_pessoa_fisica,nr_seq_plano_novo_w,nr_seq_proposta_novo_w,nr_seq_pessoa_proposta_novo_w,
				'P','A',nr_seq_segurado_w,cd_estab_destino_p
			from	pls_segurado
			where	nr_sequencia	= nr_seq_segurado_w);
	end if;
	
	if (nr_seq_segurado_novo_w IS NOT NULL AND nr_seq_segurado_novo_w::text <> '') then
		open C05;
		loop
		fetch C05 into
			nr_seq_seg_carteira_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin
			
			select	nr_seq_motivo_via,
				nr_seq_emissor
			into STRICT	nr_seq_motivo_via_ant_w,
				nr_seq_emissor_ant_w
			from	pls_segurado_carteira
			where	nr_sequencia	= nr_seq_seg_carteira_w;
			
			begin
			select	nr_sequencia
			into STRICT	nr_seq_motivo_via_novo_w
			from	pls_motivo_via_adicional
			where	nr_seq_motivo_ant	= nr_seq_motivo_via_ant_w;
			exception
			when others then
				nr_seq_motivo_via_novo_w := null;
			end;
			
			begin
			select	nr_sequencia
			into STRICT	nr_seq_emissor_novo_w
			from	pls_emissor_carteira
			where	nr_seq_emissor_ant	= nr_seq_emissor_ant_w;
			exception
			when others then
			nr_seq_emissor_novo_w	:= nr_seq_emissor_ant_w;
			end;
			
			select	nextval('pls_segurado_carteira_seq')
			into STRICT	nr_seq_seg_cart_novo_w
			;
			
			insert into pls_segurado_carteira(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado,
									dt_inicio_vigencia,dt_validade_carteira,cd_usuario_plano,nr_seq_emissor,ie_situacao,nr_via_solicitacao,
									vl_via_adicional,nr_seq_regra_via,nr_seq_mensalidade_seg,nr_seq_motivo_via,ds_observacao,nm_usuario_solicitante,
									dt_solicitacao,ie_processo,ds_trilha1,ds_trilha2,ds_trilha3,ds_trilha_qr_code,cd_estabelecimento)
								(SELECT	nr_seq_seg_cart_novo_w,clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado_novo_w,
									dt_inicio_vigencia,dt_validade_carteira,cd_usuario_plano,nr_seq_emissor_novo_w,ie_situacao,nr_via_solicitacao,
									vl_via_adicional,nr_seq_regra_via,nr_seq_mensalidade_seg,nr_seq_motivo_via_novo_w,ds_observacao,nm_usuario_solicitante,
									dt_solicitacao,ie_processo,ds_trilha1,ds_trilha2,ds_trilha3,ds_trilha_qr_code,cd_estab_destino_p
								from	pls_segurado_carteira
								where	nr_sequencia	= nr_seq_seg_carteira_w);
			
			open C06;
			loop
			fetch C06 into
				nr_seq_estagio_cartao_w;
			EXIT WHEN NOT FOUND; /* apply on C06 */
				begin
				
				insert into pls_segurado_cart_estagio(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,cd_estabelecimento,
											nr_seq_cartao_seg,dt_alteracao,ie_estagio_emissao,nm_usuario_estagio,nr_via)
										(SELECT	nextval('pls_segurado_cart_estagio_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,cd_estab_destino_p,
											nr_seq_seg_cart_novo_w,dt_alteracao,ie_estagio_emissao,nm_usuario_estagio,nr_via
										from	pls_segurado_cart_estagio
										where	nr_sequencia	= nr_seq_estagio_cartao_w);
				
				end;
			end loop;
			close C06;
			
			end;
		end loop;
		close C05;
		
		open C07;
		loop
		fetch C07 into
			nr_seq_seg_cart_ant_w;
		EXIT WHEN NOT FOUND; /* apply on C07 */
			begin
			
			select	nr_seq_motivo_via
			into STRICT	nr_via_cart_ant_ant_w
			from	pls_segurado_cart_ant
			where	nr_sequencia	= nr_seq_seg_cart_ant_w;
			
			begin
			select	nr_sequencia
			into STRICT	nr_via_cart_ant_novo_w
			from	pls_motivo_via_adicional
			where	nr_seq_motivo_ant	= nr_via_cart_ant_ant_w;
			exception
			when others then
				nr_via_cart_ant_novo_w := null;
			end;
			
			insert into pls_segurado_cart_ant(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado,
									cd_usuario_ant,dt_validade,dt_inicio_vigencia,dt_alteracao,ds_observacao,ie_status_carteira,
									ie_sistema_anterior,nr_via_anterior,nr_seq_regra_via,vl_via_adicional,nr_seq_motivo_via,nm_usuario_solicitacao,
									dt_solicitacao,nr_seq_lote_emissao,ds_trilha1,ds_trilha2,ds_trilha3,ds_trilha_qr_code,
									dt_desbloqueio, nm_usuario_desbloqueio, ie_tipo_desbloqueio)
								(SELECT	nextval('pls_segurado_cart_ant_seq'),clock_timestamp(),nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_segurado_novo_w,
									cd_usuario_ant,dt_validade,dt_inicio_vigencia,dt_alteracao,ds_observacao,ie_status_carteira,
									ie_sistema_anterior,nr_via_anterior,nr_seq_regra_via,vl_via_adicional,nr_via_cart_ant_novo_w,nm_usuario_solicitacao,
									dt_solicitacao,nr_seq_lote_emissao,ds_trilha1,ds_trilha2,ds_trilha3,ds_trilha_qr_code,
									dt_desbloqueio, nm_usuario_desbloqueio, ie_tipo_desbloqueio
								from	pls_segurado_cart_ant
								where	nr_sequencia	= nr_seq_seg_cart_ant_w);
			
			end;
		end loop;
		close C07;
	end if;
	
	end;
end loop;
close C00;

open C01;
loop
fetch C01 into
	nr_seq_pericia_med_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	select	nextval('pls_pericia_medica_seq')
	into STRICT	nr_seq_pericia_med_novo_w
	;
	
	select	nr_seq_segurado,
		nr_seq_emissor,
		nr_seq_prestador
	into STRICT	nr_seq_segurado_ant_w,
		nr_seq_emissor_ant_w,
		nr_seq_prestador_ant_w
	from	pls_pericia_medica
	where	nr_sequencia	= nr_seq_pericia_med_w;
	
	begin
	select	nr_sequencia
	into STRICT	nr_seq_segurado_novo_ww
	from	pls_segurado
	where	nr_seq_contrato_ant	= nr_seq_segurado_ant_w;
	exception
	when others then
		nr_seq_segurado_novo_ww	:= nr_seq_segurado_ant_w;
	end;
	
	begin
	select	nr_sequencia
	into STRICT	nr_seq_emissor_novo_w
	from	pls_emissor_carteira
	where	nr_seq_emissor_ant	= nr_seq_emissor_ant_w;
	exception
	when others then
		nr_seq_emissor_novo_w	:= nr_seq_emissor_ant_w;
	end;
	
	begin
	select	nr_sequencia
	into STRICT	nr_seq_prestador_novo_w
	from	pls_prestador
	where	nr_seq_anterior		= nr_seq_prestador_ant_w;
	exception
	when others then
		nr_seq_prestador_novo_w	:= nr_seq_prestador_ant_w;
	end;
	
	select	count(*)
	into STRICT	qt_registros_w
	from	pls_pericia_medica
	where	cd_estabelecimento	= cd_estab_destino_p
	and	nr_seq_pericia_ant	= nr_seq_pericia_med_w;
	
	if (qt_registros_w = 0) then
		insert into pls_pericia_medica(nr_sequencia, dt_atualizacao, dt_atualizacao_nrec,
						nm_usuario, nm_usuario_nrec, cd_estabelecimento,
						nr_seq_segurado, ie_status, dt_solicitacao_pericia,
						dt_liberacao, cd_especialidade, ie_tipo_rede_atendimento,
						dt_liberacao_atendimento, nr_seq_prestador, cd_medico_executor,
						dt_pericia, nr_seq_emissor, nr_seq_pericia_ant)
						(SELECT	nr_seq_pericia_med_novo_w, dt_atualizacao, clock_timestamp(),
							nm_usuario, nm_usuario_p, cd_estab_destino_p,
							nr_seq_segurado_novo_ww, ie_status, dt_solicitacao_pericia,
							dt_liberacao, cd_especialidade, ie_tipo_rede_atendimento,
							dt_liberacao_atendimento, nr_seq_prestador_novo_w, cd_medico_executor,
							dt_pericia, nr_seq_emissor_novo_w, nr_seq_pericia_med_w
						from	pls_pericia_medica
						where	nr_sequencia	= nr_seq_pericia_med_w);
		
		open C02;
		loop
		fetch C02 into
			nr_seq_pericia_med_hist_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			
			insert into pls_pericia_historico(nr_sequencia, dt_atualizacao, dt_atualizacao_nrec,
								nm_usuario, nm_usuario_nrec, ds_arquivo,
								ds_historico, dt_historico, nr_seq_pericia)
								(SELECT	nextval('pls_pericia_historico_seq'), dt_atualizacao, clock_timestamp(),
									nm_usuario, nm_usuario_p, ds_arquivo,
									ds_historico, dt_historico, nr_seq_pericia_med_novo_w
								from	pls_pericia_historico
								where	nr_sequencia	= nr_seq_pericia_med_hist_w);
			
			end;
		end loop;
		close C02;
		
		open C03;
		loop
		fetch C03 into
			nr_seq_pericia_med_log_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			
			insert into pls_pericia_log(nr_sequencia, dt_atualizacao, nm_usuario,
							ds_log, nr_seq_pericia)
							(SELECT	nextval('pls_pericia_log_seq'), clock_timestamp(), nm_usuario,
								ds_log, nr_seq_pericia_med_novo_w
							from	pls_pericia_log
							where	nr_sequencia	= nr_seq_pericia_med_log_w);
			
			end;
		end loop;
		close C03;
		
		open C04;
		loop
		fetch C04 into
			nr_seq_anexo_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin
			
			insert into pls_pericia_anexo(	nr_sequencia,dt_atualizacao, nm_usuario,dt_atualizacao_nrec, nm_usuario_nrec,
					ds_arquivo,dt_arquivo,nr_seq_pericia)
				(SELECT	nextval('pls_pericia_anexo_seq'),clock_timestamp(), nm_usuario,clock_timestamp(), nm_usuario,
					ds_arquivo,dt_arquivo,nr_seq_pericia_med_novo_w
				from	pls_pericia_anexo
				where	nr_sequencia	= nr_seq_anexo_w);
			
			end;
		end loop;
		close C04;
	end if;
	
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_copiar_pericia_medica ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) FROM PUBLIC;

