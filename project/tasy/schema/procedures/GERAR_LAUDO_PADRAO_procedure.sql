-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_laudo_padrao ( nr_atendimento_p bigint, nr_prescricao_p bigint, nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_medico_w		varchar(10);
nr_atendimento_w		bigint;
ds_laudo_w		varchar(4000);
nr_seq_laudo_w		bigint;
nr_laudo_w		bigint;
ds_titulo_laudo_w		varchar(255);
nr_seq_proc_w		bigint;
ie_tipo_atendimento_w	varchar(1);
cd_tipo_proc_w		smallint;
nm_medico_w		varchar(255);
ie_status_execucao_w	varchar(3);
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_seq_proc_interno_w	bigint;
cd_medico_solicitante_w	varchar(10);
ie_tipo_atend_w		smallint;
cd_tipo_procedimento_w	smallint;
nr_seq_regra_laudo_w	bigint;
nr_seq_exame_w		bigint;
cd_setor_atendimento_w	integer;
ie_liberar_laudo_w	varchar(2);


BEGIN

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '' AND nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') then

	select	max(ie_status_execucao),
		max(cd_procedimento),
		max(ie_origem_proced),
		max(nr_seq_proc_interno),
		max(cd_medico_solicitante),
		max(nr_seq_exame),
		max(cd_setor_atendimento)
	into STRICT	ie_status_execucao_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_proc_interno_w,
		cd_medico_solicitante_w,
		nr_seq_exame_w,
		cd_setor_atendimento_w
	from	prescr_procedimento
	where	nr_prescricao = nr_prescricao_p
	and	nr_sequencia = nr_sequencia_p;

	nr_atendimento_w := nr_atendimento_p;

	if (coalesce(nr_atendimento_w::text, '') = '') then
		select max(nr_atendimento)
		into STRICT nr_atendimento_w
		from prescr_medica
		where nr_prescricao = nr_prescricao_p;
	end if;

	select	max(ie_tipo_atendimento)
	into STRICT	ie_tipo_atend_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_w;

	select	max(cd_tipo_procedimento)
	into STRICT	cd_tipo_procedimento_w
	from	procedimento
	where	cd_procedimento = cd_procedimento_w
	and	ie_origem_proced = ie_origem_proced_w;

	select 	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_regra_laudo_w
	from	regra_gerar_laudo_padrao
	where	coalesce(ie_tipo_atendimento, CASE WHEN ie_tipo_atend_w='' THEN  0  ELSE ie_tipo_atend_w END ) = CASE WHEN ie_tipo_atend_w='' THEN  0  ELSE ie_tipo_atend_w END
	and	coalesce(cd_tipo_procedimento, CASE WHEN cd_tipo_procedimento_w='' THEN  0  ELSE cd_tipo_procedimento_w END ) = CASE WHEN cd_tipo_procedimento_w='' THEN  0  ELSE cd_tipo_procedimento_w END 
	and	coalesce(nr_seq_proc_interno, CASE WHEN nr_seq_proc_interno_w='' THEN  0  ELSE nr_seq_proc_interno_w END ) = CASE WHEN nr_seq_proc_interno_w='' THEN  0  ELSE nr_seq_proc_interno_w END 
	and	coalesce(cd_setor_atendimento, CASE WHEN cd_setor_atendimento_w='' THEN  0  ELSE cd_setor_atendimento_w END ) = CASE WHEN cd_setor_atendimento_w='' THEN  0  ELSE cd_setor_atendimento_w END 
	and	coalesce(ie_status_execucao, CASE WHEN ie_status_execucao_w='' THEN  0  ELSE ie_status_execucao_w END ) = CASE WHEN ie_status_execucao_w='' THEN  0  ELSE ie_status_execucao_w END;

	if (nr_seq_regra_laudo_w > 0) and (coalesce(nr_seq_exame_w::text, '') = '') then

		select	max(ds_laudo),
			coalesce(max(ie_liberar_laudo),'S')
		into STRICT	ds_laudo_w,
			ie_liberar_laudo_w
		from	regra_gerar_laudo_padrao
		where	nr_sequencia = nr_seq_regra_laudo_w;

		select	max(substr(obter_desc_prescr_proc(cd_procedimento_w,ie_origem_proced_w, nr_seq_proc_interno_w),1,240)),
			max(a.nr_sequencia),
			max(c.cd_medico),
			max(c.nr_atendimento),
			max(substr(obter_nome_pf(coalesce(cd_medico_solicitante_w,c.cd_medico)),1,255))
		into STRICT	ds_titulo_laudo_w,
			nr_seq_proc_w,
			cd_medico_w,
			nr_atendimento_w,
			nm_medico_w
		from	procedimento_paciente a,
			prescr_medica c
		where	a.nr_prescricao = nr_prescricao_p
		and	c.nr_prescricao = a.nr_prescricao
		and	a.cd_procedimento = cd_procedimento_w
		and	a.ie_origem_proced = ie_origem_proced_w
		and	a.nr_sequencia_prescricao = nr_sequencia_p;

		if (coalesce(nr_seq_proc_w::text, '') = '') then
			select	max(substr(obter_desc_prescr_proc(cd_procedimento_w,ie_origem_proced_w, nr_seq_proc_interno_w),1,240)),
				max(c.cd_medico),
				max(substr(obter_nome_pf(c.cd_medico),1,255))
			into STRICT	ds_titulo_laudo_w,
				cd_medico_w,
				nm_medico_w
			from	prescr_medica c
			where	c.nr_prescricao = nr_prescricao_p;
		end if;

		select	nextval('laudo_paciente_seq')
		into STRICT	nr_seq_laudo_w
		;

		if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
			select	coalesce(max(nr_laudo),0) + 1
			into STRICT	nr_laudo_w
			from	laudo_paciente
			where	nr_atendimento = nr_atendimento_w;
		else
			select	coalesce(max(nr_laudo),0) + 1
			into STRICT	nr_laudo_w
			from	laudo_paciente
			where	nr_prescricao = nr_prescricao_p;
		end if;

		insert into laudo_paciente(nr_sequencia,
				nr_prescricao,
				nr_seq_prescricao,
				nr_seq_proc,
				nm_usuario_digitacao,
				nr_atendimento,
				nr_laudo,
				nm_usuario,
				dt_atualizacao,
				cd_medico_resp,
				qt_imagem,
				ds_titulo_laudo,
				ds_laudo,
				dt_laudo,
				dt_entrada_unidade,
				dt_liberacao,
				dt_exame,
				nm_medico_solicitante)
		values (	nr_seq_laudo_w,
				nr_prescricao_p,
				nr_sequencia_p,
				nr_seq_proc_w,
				nm_usuario_p,
				nr_atendimento_w,
				coalesce(nr_laudo_w,1),
				nm_usuario_p,
				clock_timestamp(),
				cd_medico_w,
				0,
				ds_titulo_laudo_w,
				ds_laudo_w,
				clock_timestamp(),
				clock_timestamp(),
				CASE WHEN ie_liberar_laudo_w='S' THEN clock_timestamp()  ELSE null END ,
				clock_timestamp(),
				nm_medico_w);

		CALL Vincular_Procedimento_Laudo(nr_seq_laudo_w,'N',nm_usuario_p);

		update	prescr_procedimento
		set	ie_status_execucao = CASE WHEN ie_liberar_laudo_w='S' THEN '40'  ELSE '26' END
		where	nr_prescricao = nr_prescricao_p
		and	nr_sequencia = nr_sequencia_p;

		CALL gravar_log_cdi(9002,obter_desc_expressao(779537)||' '||nr_prescricao_p||' '||obter_desc_expressao(298311)||' '||nr_sequencia_p||' '||obter_desc_expressao(326147)||' '||nr_atendimento_w,'Tasy');

		if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_laudo_padrao ( nr_atendimento_p bigint, nr_prescricao_p bigint, nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

