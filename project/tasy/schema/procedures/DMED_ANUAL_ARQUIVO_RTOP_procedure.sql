-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dmed_anual_arquivo_rtop ( nr_sequencia_p bigint, cd_pessoa_titular_p text, nm_usuario_p text, nr_cpf_titular_p text, nr_linha_p INOUT bigint) AS $body$
DECLARE


nr_linha_w		bigint	:= nr_linha_p;
ds_arquivo_w		varchar(2000);
cpf_cnpj_benef_w 	varchar(15);
nm_benef_w		varchar(150);
nm_titular_w		varchar(255);
vl_pago_w		double precision;
contador_w		bigint	:= 0;
qt_registros_w		bigint;	
cd_cgc_pfprestador_w	varchar(15);	
order_union_w		smallint;						

c_reemb_titular CURSOR FOR
	--onde o beneficirio  pessoa fsica
	SELECT	1 order_union,
		p.nr_cpf cpf_cnpj_benef,
		p.cd_pessoa_fisica cd_cgc_pfprestador, --t.cd_pf_prestador cd_cgc_pfprestador,
		p.nm_pessoa_fisica nm_benef
	from	pessoa_fisica		p
	where	exists (SELECT	1
			from	dmed_titulos_mensal	t,
				dmed_agrupar_lote	l,
				pessoa_fisica		f
			where	p.cd_pessoa_fisica	= t.cd_pf_prestador
			and	t.nr_seq_dmed_mensal	= l.nr_seq_dmed_mensal
			and	t.cd_pessoa_titular	= t.cd_pessoa_beneficiario
			and	t.cd_pessoa_titular	= f.cd_pessoa_fisica
			and	t.ie_prestadora_ops	= 'O'
			and	t.ie_tipo_documento	= 'RE'
			and	coalesce(t.cd_cgc::text, '') = ''
			and	f.nr_cpf		= nr_cpf_titular_p
			and	l.nr_seq_dmed_anual	= nr_sequencia_p)
	
union

	--onde o beneficirio  pessoa juridica
	select	2 order_union,
		p.cd_cgc cpf_cnpj_benef,
		p.cd_cgc cd_cgc_pfprestador,--t.cd_cgc ,
		p.ds_razao_social nm_benef
	from	pessoa_juridica		p
	where	exists (select	1
			from	dmed_titulos_mensal	t,
				dmed_agrupar_lote	l,
				pessoa_fisica		f
			where	p.cd_cgc		= t.cd_cgc
			and	t.nr_seq_dmed_mensal	= l.nr_seq_dmed_mensal
			and	t.cd_pessoa_titular	= t.cd_pessoa_beneficiario
			and	t.cd_pessoa_titular	= f.cd_pessoa_fisica
			and	t.ie_prestadora_ops	= 'O'
			and	t.ie_tipo_documento	= 'RE'
			and 	(t.cd_cgc IS NOT NULL AND t.cd_cgc::text <> '')
			and	f.nr_cpf		= nr_cpf_titular_p
			and	l.nr_seq_dmed_anual	= nr_sequencia_p)
	order by
		order_union,
		cpf_cnpj_benef;
		
type 		fetch_array is table of c_reemb_titular%rowtype;
s_array 	fetch_array;
i		integer := 1;
type vetor is table of fetch_array index by integer;
vetor_reemb_titular_w	vetor;

BEGIN
open c_reemb_titular;
loop
fetch c_reemb_titular bulk collect into s_array limit 1000;
	vetor_reemb_titular_w(i)	:= s_array;
	i				:= i + 1;
EXIT WHEN NOT FOUND; /* apply on c_reemb_titular */
end loop;
close c_reemb_titular;

for i in 1..vetor_reemb_titular_w.count loop
	begin
	s_array := vetor_reemb_titular_w(i);
	for z in 1..s_array.count loop
		order_union_w			    := s_array[z].order_union;
		cpf_cnpj_benef_w		  := s_array[z].cpf_cnpj_benef;
		cd_cgc_pfprestador_w	:= s_array[z].cd_cgc_pfprestador;
		nm_benef_w				    := substr(fis_remove_special_characters(s_array[z].nm_benef), 1, 150);
		
		begin
		--verifica se o pagador/titular tem algum reembolso no DMED mensal
		select	sum(t.vl_pago)
		into STRICT	vl_pago_w
		from	dmed_titulos_mensal	t,
			dmed_agrupar_lote	l,
			pessoa_fisica		p
		where	t.nr_seq_dmed_mensal	= l.nr_seq_dmed_mensal
		and	t.cd_pessoa_titular	= t.cd_pessoa_beneficiario
		and	t.ie_prestadora_ops	= 'O'
		and	t.ie_tipo_documento	= 'RE'
		and	((t.cd_cgc = cd_cgc_pfprestador_w) or (t.cd_pf_prestador = cd_cgc_pfprestador_w))
		and	t.cd_pessoa_titular	= p.cd_pessoa_fisica
		and	p.nr_cpf		= nr_cpf_titular_p
		and	l.nr_seq_dmed_anual	= nr_sequencia_p;

		if (vl_pago_w > 0) then
			vl_pago_w	:= replace(replace(to_char(vl_pago_w,'999,999,990.00'),'.',''),',','');
			
			ds_arquivo_w 	:= 'RTOP' || '|' || cpf_cnpj_benef_w || '|' || nm_benef_w || '|' || vl_pago_w || '|' || '|';
		else
			--quando s o dependente tem reembolso o valor do titular fica vazio no arquivo
			ds_arquivo_w 	:= 'RTOP' || '|' || cpf_cnpj_benef_w || '|' || nm_benef_w || '|' || '' || '|' || '|';
		end if;

		contador_w	:= contador_w + 1;

		nr_linha_w	:= nr_linha_w + 1;
			
		insert into w_dacon(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ds_arquivo,
			nr_linha,
			ie_tipo_registro)
		values (nextval('w_dacon_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			ds_arquivo_w,
			nr_linha_w,
			6);

		if (mod(contador_w,100) = 0) then
			commit;
		end if;
		end;
	end loop;
	end;
end loop;

nr_linha_p	:= nr_linha_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dmed_anual_arquivo_rtop ( nr_sequencia_p bigint, cd_pessoa_titular_p text, nm_usuario_p text, nr_cpf_titular_p text, nr_linha_p INOUT bigint) FROM PUBLIC;

