-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE glosa_valor_autorizado (nr_sequencia_p bigint) AS $body$
DECLARE


vl_disponivel_w			double precision;
vl_autorizado_w			double precision;
vl_utilizado_w			double precision;
vl_procedimento_w			double precision;
nr_seq_autorizacao_w		bigint;
cd_procedimento_w			bigint;
ie_origem_proced_w		bigint;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
nm_usuario_w			varchar(15);
nr_sequencia_w			bigint;
vl_medico_w				double precision;
vl_anestesista_w			double precision;
vl_auxiliares_w			double precision;
vl_custo_operacional_w		double precision;
vl_materiais_w			double precision;
vl_adic_plant_w			double precision;
vl_medico_ww			double precision;
vl_anestesista_ww			double precision;
vl_auxiliares_ww			double precision;
vl_custo_operacional_ww		double precision;
vl_materiais_ww			double precision;
vl_adic_plant_ww			double precision;
vl_procedimento_ww		double precision;


BEGIN

select	vl_procedimento,
	nr_seq_autorizacao,
	cd_procedimento,
	ie_origem_proced,
	nm_usuario,
	vl_medico,
	vl_anestesista,
	vl_auxiliares,
	vl_custo_operacional,
	vl_materiais,
	coalesce(vl_adic_plant,0)
into STRICT	vl_procedimento_w,
	nr_seq_autorizacao_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	nm_usuario_w,
	vl_medico_w,
	vl_anestesista_w,
	vl_auxiliares_w,
	vl_custo_operacional_w,
	vl_materiais_w,
	vl_adic_plant_w
from	Procedimento_paciente
where	nr_sequencia	= nr_sequencia_p;

select	coalesce(sum(coalesce(vl_autorizado,0)),0)
into STRICT	vl_autorizado_w
from	procedimento_autorizado
where	nr_seq_autorizacao	= nr_seq_autorizacao_w
  and	cd_procedimento		= cd_procedimento_w
  and	ie_origem_proced	= ie_origem_proced_w;

select	coalesce(sum(coalesce(vl_procedimento,0)),0)
into STRICT	vl_utilizado_w
from	procedimento_Paciente
where	nr_seq_autorizacao	= nr_seq_autorizacao_w
  and	cd_procedimento		= cd_procedimento_w
  and	ie_origem_proced	= ie_origem_proced_w
  and	nr_sequencia		<> nr_sequencia_p;

vl_disponivel_w			:= vl_autorizado_w - vl_utilizado_w;
if (vl_disponivel_w	<= 0) then
	begin
	CALL Trocar_Convenio_Particular(nr_sequencia_p, nm_usuario_w, 'P');
	end;
elsif (vl_disponivel_w < vl_procedimento_w) then
	begin
	vl_medico_ww		:= vl_medico_w		* (vl_disponivel_w / vl_procedimento_w);
	vl_anestesista_ww	:= vl_anestesista_w	* (vl_disponivel_w / vl_procedimento_w);
	vl_auxiliares_ww	:= vl_auxiliares_w	* (vl_disponivel_w / vl_procedimento_w);
	vl_custo_operacional_ww	:= vl_custo_operacional_w * (vl_disponivel_w / vl_procedimento_w);
	vl_materiais_ww		:= vl_materiais_w	* (vl_disponivel_w / vl_procedimento_w);
	vl_adic_plant_ww	:= vl_adic_plant_w	* (vl_disponivel_w / vl_procedimento_w);
	vl_procedimento_ww	:= vl_medico_ww + vl_anestesista_ww + vl_auxiliares_ww +
				vl_custo_operacional_ww + vl_materiais_ww + vl_adic_plant_ww;
	if (vl_procedimento_ww = 0) then
		vl_procedimento_ww:= vl_procedimento_w	* (vl_disponivel_w / vl_procedimento_w);
	end if;
	nr_sequencia_w := duplicar_proc_paciente(nr_sequencia_p, nm_usuario_w, nr_sequencia_w);
	CALL Trocar_Convenio_Particular(nr_sequencia_w, nm_usuario_w, 'P');
	update procedimento_paciente
	set	ie_valor_informado	= 'S',
		vl_medico		= vl_medico_ww,
		vl_anestesista		= vl_anestesista_ww,
		vl_auxiliares		= vl_auxiliares_ww,
		vl_custo_operacional	= vl_custo_operacional_ww,
		vl_materiais		= vl_materiais_ww,
		vl_adic_plant		= vl_adic_plant_ww,
		vl_Procedimento		= vl_Procedimento_ww
	where	nr_sequencia		= nr_sequencia_p;
	update procedimento_paciente
	set	ie_valor_informado	= 'S',
		qt_procedimento		= 0,
		vl_medico		= vl_medico_w - vl_medico_ww,
		vl_anestesista		= vl_anestesista_w - vl_anestesista_ww,
		vl_auxiliares		= vl_auxiliares_w - vl_auxiliares_ww,
		vl_custo_operacional	= vl_custo_operacional_w - vl_custo_operacional_ww,
		vl_materiais		= vl_materiais_w - vl_materiais_ww,
		vl_adic_plant		= vl_adic_plant_w - vl_adic_plant_ww,
		vl_Procedimento		= vl_Procedimento_w - vl_Procedimento_ww,
		nr_seq_proc_princ		= nr_sequencia_p
	where	nr_sequencia		= nr_sequencia_w;
	end;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE glosa_valor_autorizado (nr_sequencia_p bigint) FROM PUBLIC;

