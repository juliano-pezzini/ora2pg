-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_data_evento_solucao (cd_estabelecimento_p bigint, nr_atendimento_p bigint, ie_tipo_solucao_p bigint, nr_prescricao_p bigint, nr_seq_solucao_p bigint, ie_evento_p bigint, dt_evento_p timestamp, dt_horario_p timestamp, nm_usuario_p text) AS $body$
DECLARE


dt_entrada_w		timestamp;
dt_alta_w			timestamp;
nr_seq_sol_ant_w	bigint;
qt_horas_alta_w		bigint;
dt_evento_w			timestamp;
dt_inicio_prescr_w	timestamp;
ie_sol_prescr_w		varchar(1);
ie_agora_w			varchar(1);
dt_agora_w			timestamp;
ie_perm_sol_alta_w	varchar(1);
ie_acm_w			varchar(1);
ie_etapa_especial_w	varchar(1);
hr_prim_horario_w	varchar(5);
ie_sn_w				varchar(1);
ie_permite_sol_w	varchar(1);
ie_sol_prescr_acm_sn_w	varchar(1);
dt_aprazamento_w	timestamp;
cd_setor_atendimento_w 		 integer;
v_par_adep_set_670_w  		 varchar(1);
ie_prescr_emergencia_w	prescr_medica.ie_prescr_emergencia%type;

nr_seq_cpoe_w       cpoe_material.nr_sequencia%type;
dt_inicio_cpoe_w    cpoe_material.dt_liberacao%type;
cd_funcao_origem_w    prescr_medica.cd_funcao_origem%type;


BEGIN
/* obter valor parametro */

CALL Wheb_assist_pck.set_informacoes_usuario(cd_estabelecimento_p, obter_perfil_ativo, nm_usuario_p);
dt_inicio_cpoe_w := null;
nr_seq_cpoe_w := obter_nr_seq_cpoe_sol(nr_prescricao_p, nr_seq_solucao_p);
ie_perm_sol_alta_w  	:= Wheb_assist_pck.obterParametroFuncao(1113,63);
qt_horas_alta_w			:= Wheb_assist_pck.obterParametroFuncao(1113,268);
v_par_adep_set_670_w	:= Wheb_assist_pck.obterParametroFuncao(1113,670);

if (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') and (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (ie_tipo_solucao_p IS NOT NULL AND ie_tipo_solucao_p::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') and (ie_evento_p IS NOT NULL AND ie_evento_p::text <> '') and (dt_evento_p IS NOT NULL AND dt_evento_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	/* obter dados atendimento */

	select	max(dt_entrada),
		max(dt_alta)
	into STRICT	dt_entrada_w,
		dt_alta_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;

	/*obter codigo do setor do atendimento*/

	cd_setor_atendimento_w := obter_unidade_atendimento(nr_atendimento_p,'A','CS');

	if (v_par_adep_set_670_w = 'S') then
			select coalesce(max(ie_permite_sol_alta),ie_perm_sol_alta_w),
				   coalesce(max(qt_minutos_alta_sol),qt_horas_alta_w)
			into STRICT   ie_perm_sol_alta_w, 		 		 	 --Parametro 63 regra adep. Gestao do paciente/ADEP/Parametros ADEP por Setor
					qt_horas_alta_w  					 --Parametro 268 regra adep. Gestao do paciente/ADEP/Parametros ADEP por Setor
			from   adep_parametros_setor
			where  cd_setor_atendimento = cd_setor_atendimento_w;
	end if;

	if (qt_horas_alta_w > 0) and (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') and (dt_alta_w < clock_timestamp() - qt_horas_alta_w/1440) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(173570, 'DATA='||PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_alta_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone)||';'||'MINUTOS='||qt_horas_alta_w);
	end if;

	/* validar dados atendimento x evento */

	if (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') and (ie_perm_sol_alta_w = 'N') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(173572, 'DATA='||PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_alta_w, 'timestamp', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone));
	elsif (dt_evento_p < dt_entrada_w) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(173574);
	end if;


	/* consistir inicio x validade prescricao */

	if (ie_evento_p = 1) then
	
		if (nr_seq_cpoe_w IS NOT NULL AND nr_seq_cpoe_w::text <> '') then
		
			select	coalesce(max(ie_prescr_emergencia),'N')
			into STRICT	ie_prescr_emergencia_w
			from	prescr_medica
			where	nr_prescricao = nr_prescricao_p;
		
			select 	CASE WHEN ie_prescr_emergencia_w='S' THEN max(dt_inicio)  ELSE max(dt_liberacao) END
			into STRICT	dt_inicio_cpoe_w
			from 	cpoe_material
			where	nr_sequencia = nr_seq_cpoe_w;
			
		end if;
	
		/* obter valor parametro */


		/*select	nvl(max(obter_valor_param_usuario(1113, 19, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N')
		into	ie_sol_prescr_w
		from	dual;*/
		ie_sol_prescr_w := Obter_Param_Usuario(1113, 19, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_sol_prescr_w);

		/*select	nvl(max(obter_valor_param_usuario(1113, 231, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N')
		into	ie_sol_prescr_acm_sn_w
		from	dual;*/
		ie_sol_prescr_acm_sn_w := Obter_Param_Usuario(1113, 231, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_sol_prescr_acm_sn_w);

		/*select	nvl(max(obter_valor_param_usuario(1113, 299, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N')
		into	ie_permite_sol_w
		from	dual;*/
		ie_permite_sol_w := Obter_Param_Usuario(1113, 299, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_permite_sol_w);

		/* obter primeiro horario prescricao */

		select	dt_inicio_prescr,
				cd_funcao_origem
		into STRICT	dt_inicio_prescr_w,
				cd_funcao_origem_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;

		if (ie_sol_prescr_w = 'N') then

			/* tratar solucao agora */

			if (ie_tipo_solucao_p = 1) then
				select	coalesce(max(ie_urgencia),'N'),
					max(dt_status),
					coalesce(max(ie_acm),'N'),
					coalesce(max(ie_se_necessario),'N'),
					coalesce(max(ie_etapa_especial),'N'),
					max(hr_prim_horario)
				into STRICT	ie_agora_w,
					dt_agora_w,
					ie_acm_w,
					ie_sn_w,
					ie_etapa_especial_w,
					hr_prim_horario_w
				from	prescr_solucao
				where	nr_prescricao = nr_prescricao_p
				and	nr_seq_solucao = nr_seq_solucao_p;
			elsif (ie_tipo_solucao_p = 2) then
				select	coalesce(max(ie_dose_espec_agora),'N'),
					max(hr_dose_especial)
				into STRICT	ie_etapa_especial_w,
					hr_prim_horario_w
				from	prescr_material
				where	nr_prescricao = nr_prescricao_p
				and	nr_seq_material = nr_seq_solucao_p;

				select coalesce(max(ie_urgencia),'N')
				into STRICT ie_agora_w
				from prescr_material
				where	nr_prescricao = nr_prescricao_p
				and  nr_sequencia = nr_seq_solucao_p;
			end if;

			if (ie_tipo_solucao_p <> 1) and
				not ((ie_agora_w = 'S') and       --OS718774 Suporte Nutriconal Enteral prescritos como'Agora', nao devem ser consistidos(ie_tipo_solucao_p = 2)) and (dt_inicio_prescr_w IS NOT NULL AND dt_inicio_prescr_w::text <> '') and (dt_evento_p < coalesce(dt_inicio_cpoe_w, dt_inicio_prescr_w)) and
				((ie_permite_sol_w = 'N') or (ie_etapa_especial_w	= 'N') or
				 ((ie_etapa_especial_w	= 'S') and (to_char(dt_horario_p,'hh24:mi') <> hr_prim_horario_w))) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(173815);
			elsif (ie_tipo_solucao_p = 1) and
				(ie_acm_w <> 'S' AND ie_sn_w <> 'S') and (ie_etapa_especial_w	= 'N') and
				(((ie_agora_w = 'N') and (dt_inicio_prescr_w IS NOT NULL AND dt_inicio_prescr_w::text <> '') and
				  ((dt_evento_p < coalesce(dt_inicio_cpoe_w, dt_inicio_prescr_w) and cd_funcao_origem_w = 2314)
				  	or (dt_evento_p < dt_inicio_prescr_w and cd_funcao_origem_w <> 2314))) or
				 ((ie_agora_w = 'S') and (dt_agora_w IS NOT NULL AND dt_agora_w::text <> '') and (dt_evento_p < dt_agora_w))) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(173815);
			elsif (ie_tipo_solucao_p = 1) and
				(ie_acm_w <> 'S' AND ie_sn_w <> 'S') and
				((ie_etapa_especial_w	= 'S') and
				 ((to_char(dt_horario_p,'hh24:mi') <> hr_prim_horario_w) or (ie_permite_sol_w	= 'N'))) and
				(((ie_agora_w = 'N') and (dt_inicio_prescr_w IS NOT NULL AND dt_inicio_prescr_w::text <> '') and (dt_evento_p < coalesce(dt_inicio_cpoe_w, dt_inicio_prescr_w)))) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(173815);
			end if;
		end if;


		if (ie_sol_prescr_acm_sn_w = 'N') then
			begin
            			
			if (ie_tipo_solucao_p = 1) then
				select	coalesce(max(ie_acm),'N'),
					coalesce(max(ie_se_necessario),'N')
				into STRICT	ie_acm_w,
					ie_sn_w
				from	prescr_solucao
				where	nr_prescricao = nr_prescricao_p
				and	nr_seq_solucao = nr_seq_solucao_p;

				if (ie_acm_w = 'S') or (ie_sn_w = 'S') then
					begin
						if (dt_evento_p < coalesce(dt_inicio_cpoe_w, dt_inicio_prescr_w)) then
							CALL wheb_mensagem_pck.exibir_mensagem_abort(173817);
						end if;
					end;
				end if;
			end if;
			end;
		end if;
	end if;

	if (ie_tipo_solucao_p = 1) then --solucao
		/* obter evento anterior */

		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_sol_ant_w
		from	prescr_solucao_evento
		where	coalesce(ie_evento_valido,'S') = 'S'
		and		ie_alteracao not in (6,12,13)
		and		ie_tipo_solucao = 1
		and		nr_seq_solucao = nr_seq_solucao_p
		and		nr_prescricao = nr_prescricao_p;

		if (nr_seq_sol_ant_w > 0 ) then
			/* obter dados evento */

			select	--nvl(dt_aprazamento, dt_alteracao)		vhkrausser - ocasiona  problemas se o evento anterior era "aprazar" e a data do aprazamento e futura
				dt_alteracao,
				dt_aprazamento
			into	dt_evento_w,
				dt_aprazamento_w
			from	prescr_solucao_evento
			where	nr_sequencia = nr_seq_sol_ant_w;

			if (dt_evento_p < dt_evento_w) then		--A data desejada e menor que a data do evento anterior
				if (dt_aprazamento_w IS NOT NULL AND dt_aprazamento_w::text <> '') and	--O evento anterior foi um evento de aprazamento
					(dt_evento_w > dt_aprazamento_w)  then	--O aprazamento realizado foi retrogrado
					if (dt_evento_p < dt_aprazamento_w) then --A data do novo evento e menor que a data do aprazamento
						CALL wheb_mensagem_pck.exibir_mensagem_abort(173818);
					end if;
				else
					CALL wheb_mensagem_pck.exibir_mensagem_abort(173818);
				end if;
			end if;
		end if;

	elsif (ie_tipo_solucao_p = 2) then --suporte nutricional enteral
		/* obter evento anterior */

		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_sol_ant_w
		from	prescr_solucao_evento
		where	nr_prescricao = nr_prescricao_p
		and	nr_seq_material = nr_seq_solucao_p
		and	ie_tipo_solucao = 2
		and	ie_alteracao not in (6,12,13);

		if (nr_seq_sol_ant_w > 0) then
			/* obter dados evento */

			select	max(dt_alteracao),
					max(dt_aprazamento)
			into STRICT	dt_evento_w,
					dt_aprazamento_w
			from	prescr_solucao_evento
			where	nr_sequencia = nr_seq_sol_ant_w;

			if (dt_evento_p < dt_evento_w) then
				if (dt_aprazamento_w IS NOT NULL AND dt_aprazamento_w::text <> '') and (dt_evento_w > dt_aprazamento_w)  then
					if (dt_evento_p < dt_aprazamento_w) then
						/* A data do evento atual nao pode ser inferior a data do evento anterior! */

						CALL wheb_mensagem_pck.exibir_mensagem_abort(173818);
					end if;
				else
					/* A data do evento atual nao pode ser inferior a data do evento anterior! */

					CALL wheb_mensagem_pck.exibir_mensagem_abort(173818);
				end if;
			end if;
		end if;

	elsif (ie_tipo_solucao_p = 3) then --hemocomponente
		/* obter evento anterior */

		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_sol_ant_w
		from	prescr_solucao_evento
		where	nr_prescricao = nr_prescricao_p
		and	nr_seq_procedimento = nr_seq_solucao_p
		and	ie_tipo_solucao = 3
		and 	ie_evento_valido	<> 'N'
		and	ie_alteracao not in (6,13,18);

		if (nr_seq_sol_ant_w > 0) then
			/* obter dados evento */

			select	dt_alteracao
			into STRICT	dt_evento_w
			from	prescr_solucao_evento
			where	nr_sequencia = nr_seq_sol_ant_w;

			if (dt_evento_p < dt_evento_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(173818);
			end if;
		end if;

	elsif (ie_tipo_solucao_p = 4) then --npt adulto
		/* obter evento anterior */

		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_sol_ant_w
		from	prescr_solucao_evento
		where	nr_prescricao = nr_prescricao_p
		and	nr_seq_nut = nr_seq_solucao_p
		and	ie_tipo_solucao = 4
		and	ie_alteracao <> 6;

		if (nr_seq_sol_ant_w > 0) then
			/* obter dados evento */

			select	dt_alteracao
			into STRICT	dt_evento_w
			from	prescr_solucao_evento
			where	nr_sequencia = nr_seq_sol_ant_w;

			if (dt_evento_p < dt_evento_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(173818);
			end if;
		end if;

	elsif (ie_tipo_solucao_p = 5) then --npt neo
		/* obter evento anterior */

		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_sol_ant_w
		from	prescr_solucao_evento
		where	nr_prescricao = nr_prescricao_p
		and	nr_seq_nut_neo = nr_seq_solucao_p
		and	ie_tipo_solucao = 5
		and	ie_alteracao <> 6;

		if (nr_seq_sol_ant_w > 0) then
			/* obter dados evento */

			select	dt_alteracao
			into STRICT	dt_evento_w
			from	prescr_solucao_evento
			where	nr_sequencia = nr_seq_sol_ant_w;

			if (dt_evento_p < dt_evento_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(173818);
			end if;
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_data_evento_solucao (cd_estabelecimento_p bigint, nr_atendimento_p bigint, ie_tipo_solucao_p bigint, nr_prescricao_p bigint, nr_seq_solucao_p bigint, ie_evento_p bigint, dt_evento_p timestamp, dt_horario_p timestamp, nm_usuario_p text) FROM PUBLIC;

