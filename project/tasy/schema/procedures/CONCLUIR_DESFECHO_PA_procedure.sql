-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE concluir_desfecho_pa ( ie_medico_p text, ie_desfecho_p text, cd_medico_destino_p text, nr_atendimento_p bigint, ie_gerar_transf_setor_p text, cd_setor_desfecho_p bigint, cd_setor_transferir_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text, cd_tipo_acomodacao_p bigint, ie_gerar_evolucao_p text, ie_acao_executada_p bigint, nr_sequencia_desfecho_p bigint, cd_estab_paciente_p bigint, cd_convenio_p bigint, cd_pessoa_atend_p INOUT text, nr_seq_vaga_p INOUT bigint, nr_seq_autorizacao_p INOUT bigint, ds_mensagem_p INOUT text, nm_usuario_p text) AS $body$
DECLARE

 
nr_atend_gerado_w	bigint;
ie_tipo_evol_usuario_w	varchar(3);
cd_pessoa_usuario_w	varchar(10);
ds_mensagem_w		varchar(2000);
dt_desfecho_w		timestamp;
cd_medico_dest_w	varchar(10);	
 

BEGIN 
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then 
	begin 
	select	coalesce(max(nr_atendimento),0) 
	into STRICT	nr_atend_gerado_w 
	from	atendimento_paciente 
	where	nr_atend_alta = nr_atendimento_p;		
	 
	if (ie_medico_p = 'S') and (ie_desfecho_p = 'I') and (cd_medico_destino_p IS NOT NULL AND cd_medico_destino_p::text <> '') then 
		begin 
		if (nr_atend_gerado_w > 0) then 
			begin 
			CALL assumir_paciente(nr_atend_gerado_w, cd_medico_destino_p, null, nm_usuario_p);
			end;
		end if;
		end;
	end if;
	 
	if (ie_gerar_transf_setor_p = 'S') and (ie_desfecho_p = 'T') and (cd_setor_desfecho_p = cd_setor_transferir_p) then 
		begin 
		CALL gerar_transferencia_paciente( 
			nr_atendimento_p, 
			cd_setor_transferir_p, 
			cd_unidade_basica_p, 
			cd_unidade_compl_p, 
			cd_tipo_acomodacao_p, 
			null, 
			null, 
			null, 
			nm_usuario_p, 
			clock_timestamp());
			 
		CALL gerar_ajustes_ap_lote( 'M', nr_atendimento_p, nm_usuario_p);
		end;
	end if;
	 
	if (ie_gerar_evolucao_p = 'S') and (ie_acao_executada_p <> 3) then 
		begin 
		select	max(ie_tipo_evolucao), 
			max(cd_pessoa_fisica) 
		into STRICT	ie_tipo_evol_usuario_w, 
			cd_pessoa_usuario_w 
		from	usuario 
		where	nm_usuario = nm_usuario_p;
		CALL gerar_evolucao_orient_alta(nr_sequencia_desfecho_p, ie_tipo_evol_usuario_w, cd_pessoa_usuario_w, nm_usuario_p);
		end;
	end if;
	 
	if (nr_atend_gerado_w > 0) then 
		begin 
		cd_pessoa_atend_p := obter_pessoa_atendimento(nr_atend_gerado_w,'C');
		end;
	else 
		begin 
		cd_pessoa_atend_p := obter_pessoa_atendimento(nr_atendimento_p,'C');
		end;
	end if;	
	 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_vaga_p 
	from 	gestao_vaga 
	where 	nr_atendimento = nr_atendimento_p;
	 
	select	min(nr_sequencia) 
	into STRICT	nr_seq_autorizacao_p 
	from 	autorizacao_convenio 
	where	nr_seq_gestao = coalesce(nr_seq_vaga_p,0);
	 
	select	substr(max(ds_mensagem_desfecho),1,2000) 
	into STRICT	ds_mensagem_p 
	from	convenio_estabelecimento 
	where	cd_estabelecimento	= cd_estab_paciente_p 
	and	cd_convenio		= cd_convenio_p;
	end;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE concluir_desfecho_pa ( ie_medico_p text, ie_desfecho_p text, cd_medico_destino_p text, nr_atendimento_p bigint, ie_gerar_transf_setor_p text, cd_setor_desfecho_p bigint, cd_setor_transferir_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text, cd_tipo_acomodacao_p bigint, ie_gerar_evolucao_p text, ie_acao_executada_p bigint, nr_sequencia_desfecho_p bigint, cd_estab_paciente_p bigint, cd_convenio_p bigint, cd_pessoa_atend_p INOUT text, nr_seq_vaga_p INOUT bigint, nr_seq_autorizacao_p INOUT bigint, ds_mensagem_p INOUT text, nm_usuario_p text) FROM PUBLIC;

