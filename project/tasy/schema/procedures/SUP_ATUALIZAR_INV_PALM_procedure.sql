-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sup_atualizar_inv_palm ( cd_barras_p text, nr_seq_inv_p bigint, qt_item_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


/* Esta procedure e utilizada para a confirmacao da contagem do item.
    Este e utilizado no processo antigo, antes da realizacao do projeto Inventario PDA Andre 22/10/2011
*/
cd_estabelecimento_w	integer;
ie_contagem_atual_w	varchar(15);
cd_material_w		integer;
cd_material_estoque_w	integer;
qt_material_w		double precision;
nr_seq_lote_w		bigint;
nr_seq_LoteAgrup_w	bigint;
cd_kit_mat_w		integer;
ds_validade_w		varchar(20);
ds_material_w		varchar(255);
cd_unid_med_w		varchar(30);
ds_retorno_w		varchar(255);
nr_sequencia_w		bigint;
nr_etiqueta_lp_w		varchar(13);
nm_usuario_contagem_atual_w	varchar(15);
ds_consiste_inv_w		varchar(5);
qt_inventario_w		double precision;
ie_estoque_lote_w		varchar(1);
ie_lote_agrup_w		varchar(1);

C01 CURSOR FOR
SELECT	d.qt_material,
	d.nr_sequencia	
from	material_lote_fornec a,
	material_lote_fornec_agrup b,
	mat_lote_fornec_agrup_item c,
	material_lote_fornec d
where	a.nr_sequencia = b.nr_seq_lote_fornec
and	b.nr_sequencia = c.nr_seq_agrupamento
and	a.nr_sequencia = nr_seq_lote_w
and	c.nr_seq_lote_fornec_orig = d.nr_sequencia
order by 1;


BEGIN

ds_consiste_inv_w := substr(coalesce(obter_valor_param_usuario(88,80, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N'),1,1);

select	max(cd_estabelecimento),
	coalesce(max(ie_contagem_atual), '1')
into STRICT	cd_estabelecimento_w,
	ie_contagem_atual_w
from	inventario
where	nr_sequencia	= nr_seq_inv_p;

SELECT * FROM converte_codigo_barras(
	cd_barras_p, cd_estabelecimento_w, null, 'N', cd_material_w, qt_material_w, nr_seq_lote_w, nr_seq_loteagrup_w, cd_kit_mat_w, ds_validade_w, ds_material_w, cd_unid_med_w, nr_etiqueta_lp_w, ds_retorno_w, '143x') INTO STRICT cd_material_w, qt_material_w, nr_seq_lote_w, nr_seq_loteagrup_w, cd_kit_mat_w, ds_validade_w, ds_material_w, cd_unid_med_w, nr_etiqueta_lp_w, ds_retorno_w;
	
if (coalesce(ds_retorno_w, 'X') <> 'X') and ('#002' <> substr(ds_retorno_w, 1, 4)) then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(265573,'DS_ERRO=' || ds_retorno_w);
end if;

select OBTER_DADOS_LOTE_FORNEC(nr_seq_lote_w, 'O')
into STRICT   ie_lote_agrup_w
;

select	cd_material_estoque
into STRICT	cd_material_estoque_w
from	material
where	cd_material	= cd_material_w;

select	ie_estoque_lote
into STRICT	ie_estoque_lote_w
from	material_estab
where	cd_material = cd_material_w
and	cd_estabelecimento = cd_estabelecimento_w;

if (ie_estoque_lote_w = 'S') and (nr_seq_lote_w = '0') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(266277);
	--'Este material tem estoque por lote fornecedor.' || chr(13) || chr(10) ||

	--'Somente pode ser movimentado por barras do lote.' || '#@#@');
end if;

select	coalesce(max(nr_sequencia), 0)
into STRICT	nr_sequencia_w
from	inventario_material
where	nr_seq_inventario	= nr_seq_inv_p
and	cd_material		= cd_material_estoque_w;

if (nr_sequencia_w = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(266278);
	--'Nao existe este material neste inventario' || '#@#@');
end if;

select	coalesce(CASE WHEN ie_contagem_atual_w=1 THEN 	nm_usuario_contagem WHEN ie_contagem_atual_w=2 THEN 	nm_usuario_recontagem WHEN ie_contagem_atual_w=3 THEN 	nm_usuario_seg_recontagem WHEN ie_contagem_atual_w=4 THEN 	nm_usuario_terc_recontagem END ,nm_usuario_p),
	qt_inventario
into STRICT	nm_usuario_contagem_atual_w,
	qt_inventario_w
from	inventario_material
where	nr_sequencia  = nr_sequencia_w;

if (qt_inventario_w IS NOT NULL AND qt_inventario_w::text <> '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(266280);
	--'A quantidade deste item no inventario ja esta definida.' || chr(13) || chr(10) ||

	--'Esta leitura sera desconsiderada.' || '#@#@');
end if;

if (ds_consiste_inv_w = 'S') and (nm_usuario_contagem_atual_w <> nm_usuario_p) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(266281);
	--'Ja existe um usuario realizando a contagem deste item.' || '#@#@');
end if;

--tratamento para lote agrupamento no palmWebInventario
if (coalesce(ie_lote_agrup_w,'X') = 'G' and (ie_estoque_lote_w = 'S')) then

open C01;
loop
fetch C01 into	
	qt_material_w,
	nr_seq_lote_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	if (ie_contagem_atual_w = '1') then
			update	inventario_material
			set	qt_contagem	= coalesce(qt_contagem, 0) + qt_material_w,
				nm_usuario_contagem = nm_usuario_p,
				dt_contagem = clock_timestamp()
			where	nr_sequencia	= nr_sequencia_w;
		elsif (ie_contagem_atual_w = '2') then
			update	inventario_material
			set	qt_recontagem	= coalesce(qt_recontagem, 0) + qt_material_w,
				nm_usuario_recontagem = nm_usuario_p,
				dt_recontagem = clock_timestamp()
			where	nr_sequencia	= nr_sequencia_w;
		elsif (ie_contagem_atual_w = '3') then
			update	inventario_material
			set	qt_seg_recontagem	= coalesce(qt_seg_recontagem, 0) + qt_material_w,
				nm_usuario_seg_recontagem = nm_usuario_p,
				dt_seg_recontagem = clock_timestamp()
			where	nr_sequencia	= nr_sequencia_w;
		elsif (ie_contagem_atual_w = '4') then
			update	inventario_material
			set	qt_terc_recontagem	= coalesce(qt_terc_recontagem, 0) + qt_material_w,
				nm_usuario_terc_recontagem = nm_usuario_p,
				dt_terc_recontagem = clock_timestamp()
			where	nr_sequencia	= nr_sequencia_w;
		end if;
	
	if (ie_contagem_atual_w = '1') then
		update	inventario_material_lote
		set	qt_contagem	= coalesce(qt_contagem, 0) + qt_material_w
		where	nr_seq_inventario = nr_seq_inv_p
		and	nr_seq_item = nr_sequencia_w
		and	nr_seq_lote_fornec = nr_seq_lote_w;
		if NOT FOUND then
			insert into inventario_material_lote(
				nr_sequencia,		dt_atualizacao,
				dt_atualizacao_nrec,	nm_usuario,
				nm_usuario_nrec,	nr_seq_inventario,
				nr_seq_item,		nr_seq_lote_fornec,
				qt_contagem,		qt_saldo)
			values ( nextval('inventario_material_lote_seq'),	clock_timestamp(),
				clock_timestamp(),		nm_usuario_p,		
				nm_usuario_p,		nr_seq_inv_p,		
				nr_sequencia_w,		nr_seq_lote_w,		
				qt_material_w,		0);
		end if;
	elsif (ie_contagem_atual_w = '2') then
		update	inventario_material_lote
		set	qt_recontagem	= coalesce(qt_recontagem, 0) + qt_material_w
		where	nr_seq_inventario = nr_seq_inv_p
		and	nr_seq_item = nr_sequencia_w
		and	nr_seq_lote_fornec = nr_seq_lote_w;
		if NOT FOUND then
			insert into inventario_material_lote(
				nr_sequencia,		dt_atualizacao,
				dt_atualizacao_nrec,	nm_usuario,
				nm_usuario_nrec,	nr_seq_inventario,
				nr_seq_item,		nr_seq_lote_fornec,
				qt_recontagem,		qt_saldo)
			values ( nextval('inventario_material_lote_seq'),	clock_timestamp(),
				clock_timestamp(),		nm_usuario_p,		
				nm_usuario_p,		nr_seq_inv_p,		
				nr_sequencia_w,		nr_seq_lote_w,		
				qt_material_w,		0);
		end if;
	elsif (ie_contagem_atual_w = '3') then
		update	inventario_material_lote
		set	qt_seg_recontagem	= coalesce(qt_seg_recontagem, 0) + qt_material_w
		where	nr_seq_inventario = nr_seq_inv_p
		and	nr_seq_item = nr_sequencia_w
		and	nr_seq_lote_fornec = nr_seq_lote_w;
		if NOT FOUND then
			insert into inventario_material_lote(
				nr_sequencia,		dt_atualizacao,
				dt_atualizacao_nrec,	nm_usuario,
				nm_usuario_nrec,	nr_seq_inventario,
				nr_seq_item,		nr_seq_lote_fornec,
				qt_seg_recontagem,	qt_saldo)
			values ( nextval('inventario_material_lote_seq'),	clock_timestamp(),
				clock_timestamp(),		nm_usuario_p,		
				nm_usuario_p,		nr_seq_inv_p,		
				nr_sequencia_w,		nr_seq_lote_w,		
				qt_material_w,		0);
		end if;
	elsif (ie_contagem_atual_w = '4') then
		update	inventario_material_lote
		set	qt_terc_recontagem	= coalesce(qt_terc_recontagem, 0) + qt_material_w
		where	nr_seq_inventario = nr_seq_inv_p
		and	nr_seq_item = nr_sequencia_w
		and	nr_seq_lote_fornec = nr_seq_lote_w;
		if NOT FOUND then
			insert into inventario_material_lote(
				nr_sequencia,		dt_atualizacao,
				dt_atualizacao_nrec,	nm_usuario,
				nm_usuario_nrec,	nr_seq_inventario,
				nr_seq_item,		nr_seq_lote_fornec,
				qt_terc_recontagem,	qt_saldo)
			values ( nextval('inventario_material_lote_seq'),	clock_timestamp(),
				clock_timestamp(),		nm_usuario_p,		
				nm_usuario_p,		nr_seq_inv_p,		
				nr_sequencia_w,		nr_seq_lote_w,		
				qt_material_w,		0);
		end if;
	end if;
	end;
	
end loop;
close C01;	
	
else

	if (qt_item_p > 0) then
		qt_material_w := qt_item_p;
	end if;
	
	if (ie_contagem_atual_w = '1') then
		update	inventario_material
		set	qt_contagem	= coalesce(qt_contagem, 0) + qt_material_w,
			nm_usuario_contagem = nm_usuario_p,
			dt_contagem = clock_timestamp()
		where	nr_sequencia	= nr_sequencia_w;
	elsif (ie_contagem_atual_w = '2') then
		update	inventario_material
		set	qt_recontagem	= coalesce(qt_recontagem, 0) + qt_material_w,
			nm_usuario_recontagem = nm_usuario_p,
			dt_recontagem = clock_timestamp()
		where	nr_sequencia	= nr_sequencia_w;
	elsif (ie_contagem_atual_w = '3') then
		update	inventario_material
		set	qt_seg_recontagem	= coalesce(qt_seg_recontagem, 0) + qt_material_w,
			nm_usuario_seg_recontagem = nm_usuario_p,
			dt_seg_recontagem = clock_timestamp()
		where	nr_sequencia	= nr_sequencia_w;
	elsif (ie_contagem_atual_w = '4') then
		update	inventario_material
		set	qt_terc_recontagem	= coalesce(qt_terc_recontagem, 0) + qt_material_w,
			nm_usuario_terc_recontagem = nm_usuario_p,
			dt_terc_recontagem = clock_timestamp()
		where	nr_sequencia	= nr_sequencia_w;
	end if;

	if (ie_estoque_lote_w = 'S') then

		if (ie_contagem_atual_w = '1') then
			update	inventario_material_lote
			set	qt_contagem	= coalesce(qt_contagem, 0) + qt_material_w
			where	nr_seq_inventario = nr_seq_inv_p
			and	nr_seq_item = nr_sequencia_w
			and	nr_seq_lote_fornec = nr_seq_lote_w;
			if NOT FOUND then
				insert into inventario_material_lote(
					nr_sequencia,		dt_atualizacao,
					dt_atualizacao_nrec,	nm_usuario,
					nm_usuario_nrec,	nr_seq_inventario,
					nr_seq_item,		nr_seq_lote_fornec,
					qt_contagem,		qt_saldo)
				values ( nextval('inventario_material_lote_seq'),	clock_timestamp(),
					clock_timestamp(),		nm_usuario_p,		
					nm_usuario_p,		nr_seq_inv_p,		
					nr_sequencia_w,		nr_seq_lote_w,		
					qt_material_w,		0);
			end if;
		elsif (ie_contagem_atual_w = '2') then
			update	inventario_material_lote
			set	qt_recontagem	= coalesce(qt_recontagem, 0) + qt_material_w
			where	nr_seq_inventario = nr_seq_inv_p
			and	nr_seq_item = nr_sequencia_w
			and	nr_seq_lote_fornec = nr_seq_lote_w;
			if NOT FOUND then
				insert into inventario_material_lote(
					nr_sequencia,		dt_atualizacao,
					dt_atualizacao_nrec,	nm_usuario,
					nm_usuario_nrec,	nr_seq_inventario,
					nr_seq_item,		nr_seq_lote_fornec,
					qt_recontagem,		qt_saldo)
				values ( nextval('inventario_material_lote_seq'),	clock_timestamp(),
					clock_timestamp(),		nm_usuario_p,		
					nm_usuario_p,		nr_seq_inv_p,		
					nr_sequencia_w,		nr_seq_lote_w,		
					qt_material_w,		0);
			end if;
		elsif (ie_contagem_atual_w = '3') then
			update	inventario_material_lote
			set	qt_seg_recontagem	= coalesce(qt_seg_recontagem, 0) + qt_material_w
			where	nr_seq_inventario = nr_seq_inv_p
			and	nr_seq_item = nr_sequencia_w
			and	nr_seq_lote_fornec = nr_seq_lote_w;
			if NOT FOUND then
				insert into inventario_material_lote(
					nr_sequencia,		dt_atualizacao,
					dt_atualizacao_nrec,	nm_usuario,
					nm_usuario_nrec,	nr_seq_inventario,
					nr_seq_item,		nr_seq_lote_fornec,
					qt_seg_recontagem,	qt_saldo)
				values ( nextval('inventario_material_lote_seq'),	clock_timestamp(),
					clock_timestamp(),		nm_usuario_p,		
					nm_usuario_p,		nr_seq_inv_p,		
					nr_sequencia_w,		nr_seq_lote_w,		
					qt_material_w,		0);
			end if;
		elsif (ie_contagem_atual_w = '4') then
			update	inventario_material_lote
			set	qt_terc_recontagem	= coalesce(qt_terc_recontagem, 0) + qt_material_w
			where	nr_seq_inventario = nr_seq_inv_p
			and	nr_seq_item = nr_sequencia_w
			and	nr_seq_lote_fornec = nr_seq_lote_w;
			if NOT FOUND then
				insert into inventario_material_lote(
					nr_sequencia,		dt_atualizacao,
					dt_atualizacao_nrec,	nm_usuario,
					nm_usuario_nrec,	nr_seq_inventario,
					nr_seq_item,		nr_seq_lote_fornec,
					qt_terc_recontagem,	qt_saldo)
				values ( nextval('inventario_material_lote_seq'),	clock_timestamp(),
					clock_timestamp(),		nm_usuario_p,		
					nm_usuario_p,		nr_seq_inv_p,		
					nr_sequencia_w,		nr_seq_lote_w,		
					qt_material_w,		0);
			end if;
		end if;

	end if;

end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_atualizar_inv_palm ( cd_barras_p text, nr_seq_inv_p bigint, qt_item_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) FROM PUBLIC;

