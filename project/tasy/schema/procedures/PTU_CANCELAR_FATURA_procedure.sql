-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_cancelar_fatura ( nr_seq_mot_cancel_p bigint, nr_seq_fatura_p bigint, ds_justificativa_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_motivo_canc_p text default null) AS $body$
DECLARE


nr_lote_contabil_w		lote_contabil.nr_lote_contabil%type;
ds_dias_w			varchar(255);
nr_limite_dias_w		bigint := 0;
nr_seq_protocolo_w		bigint;
nr_titulo_w			bigint;
nr_seq_titulo_lote_w		bigint;
nr_titulo_ndc_w			bigint;
dt_recebimento_fatura_w		timestamp;
nr_seq_conta_copart_mens_w	pls_conta.nr_sequencia%type;


BEGIN
begin
select	dt_recebimento_fatura,
	nr_seq_protocolo,
	nr_titulo,
	nr_titulo_ndc
into STRICT	dt_recebimento_fatura_w,
	nr_seq_protocolo_w,
	nr_titulo_w,
	nr_titulo_ndc_w
from	ptu_fatura
where	nr_sequencia	= nr_seq_fatura_p;
exception
when others then
	nr_seq_protocolo_w	:= null;
end;

select	coalesce(max(nr_lote_contabil),0)
into STRICT	nr_lote_contabil_w
from (SELECT	c.nr_lote_contabil
	from	pls_conta	a,
		pls_conta_proc	c
	where	a.nr_sequencia	= c.nr_seq_conta
	and	a.nr_seq_fatura	= nr_seq_fatura_p
	
union

	SELECT	c.nr_lote_contabil
	from	pls_conta	a,
		pls_conta_mat	c
	where	a.nr_sequencia	= c.nr_seq_conta
	and	a.nr_seq_fatura	= nr_seq_fatura_p) alias2;

if (nr_lote_contabil_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(683938, 'NR_LOTE_CONTABIL=' || to_char(nr_lote_contabil_w)
							|| ';DS_TIPO_LOTE_CONTABIL=' || substr(ctb_obter_tipo_lote_contabil(nr_lote_contabil_w,'D'),1,255));
end if;

select 	max(a.nr_sequencia)
into STRICT	nr_seq_conta_copart_mens_w
from	pls_conta_coparticipacao	b,
	pls_conta			a
where	a.nr_sequencia			= b.nr_seq_conta
and	a.nr_seq_fatura 		= nr_seq_fatura_p
and	(b.nr_seq_mensalidade_seg IS NOT NULL AND b.nr_seq_mensalidade_seg::text <> '')
and	b.ie_status_mensalidade <> 'C';

if (coalesce(nr_seq_conta_copart_mens_w::text, '') = '') then
	select 	max(a.nr_sequencia)
	into STRICT	nr_seq_conta_copart_mens_w
	from	pls_mensalidade_item_conta 	c,
		pls_conta_coparticipacao 	b,
		pls_conta			a
	where	a.nr_sequencia			= b.nr_seq_conta
	and	c.nr_seq_conta_copartic 	= b.nr_sequencia
	and	a.nr_seq_fatura 		= nr_seq_fatura_p
	and	b.ie_status_mensalidade <> 'C';
end if;

if (nr_seq_conta_copart_mens_w IS NOT NULL AND nr_seq_conta_copart_mens_w::text <> '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1163358, 'NR_SEQ_CONTA=' || nr_seq_conta_copart_mens_w);
end if;

if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
	CALL cancelar_titulo_pagar(nr_titulo_w,nm_usuario_p,clock_timestamp());
end if;

if (nr_titulo_ndc_w IS NOT NULL AND nr_titulo_ndc_w::text <> '') then
	CALL cancelar_titulo_pagar(nr_titulo_ndc_w,nm_usuario_p,clock_timestamp());
end if;


nr_limite_dias_w	:= obter_valor_param_usuario(1293, 19, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p);
if ( nr_limite_dias_w 	> 0 ) then
	if	((trunc(dt_recebimento_fatura_w) + trunc(nr_limite_dias_w)) < trunc(clock_timestamp())) then
		ds_dias_W	:= trunc(clock_timestamp())-(trunc(dt_recebimento_fatura_w)+trunc(nr_limite_dias_w));
		CALL wheb_mensagem_pck.exibir_mensagem_abort(238089,'DS_DIAS=' || ds_dias_w);
	end if;
end if;

update	ptu_fatura
set	nr_seq_mot_cancel	= nr_seq_mot_cancel_p,
	ds_justificativa	= ds_justificativa_p
where	nr_sequencia		= nr_seq_fatura_p;

CALL ptu_atualizar_status_fatura(nr_seq_fatura_p, 'CA', null, nm_usuario_p);
--Ira cancelar as contas vinculasdas a fatura e necessario fazer o segundo selects devido a existir a possibilidade das contas ja estarem vinculadas a fatura porem a fatura nao estar vinculada ao protocolo
select	max(nr_seq_protocolo)
into STRICT	nr_seq_protocolo_w
from	pls_conta
where	nr_seq_fatura	= nr_seq_fatura_p;

if (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '') then	
	CALL pls_cancelar_protocolo(nr_seq_protocolo_w, 'N', cd_estabelecimento_p, nm_usuario_p, ds_motivo_canc_p);
end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_cancelar_fatura ( nr_seq_mot_cancel_p bigint, nr_seq_fatura_p bigint, ds_justificativa_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_motivo_canc_p text default null) FROM PUBLIC;

