-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_motivo_cancel_agenda () AS $body$
DECLARE


vl_dominio_w		bigint := 101;
ds_valor_dominio_w	varchar(255);
ds_comando_w		varchar(2000);
ds_comando2_w		varchar(2000);
qt_registro_w		bigint;

c01 CURSOR FOR
	SELECT a.ds_valor_dominio
	from valor_dominio a
	where cd_dominio = 66
	  and not exists (SELECT 1
                 from valor_dominio b
                 where b.cd_dominio = 1011
                   and b.ds_valor_dominio = a.ds_valor_dominio);


c02 CURSOR FOR
	SELECT a.ds_valor_dominio
	from valor_dominio a
	where cd_dominio = 1011;


BEGIN

select	count(*)
into STRICT 	qt_registro_w
from	valor_dominio
where	cd_dominio = 1011
and	vl_dominio > 100;

if (qt_registro_w = 0) then
	begin

	CALL exec_sql_dinamico(10, 	' create table w_val_dom as (select * ' ||
				' from valor_dominio where cd_dominio = 1011) ');


	CALL exec_sql_dinamico(10, 	' create table w_cir as (select * ' ||
				' from cirurgia where ie_motivo_cancelamento is not null) ');


	CALL exec_sql_dinamico(10, 	' create table w_agen as (select * ' ||
				' from agenda_paciente where cd_motivo_cancelamento is not null) ');

	CALL exec_sql_dinamico(10,
		' create table w_motivo_cancel ' ||
		'	(vl_dominio		varchar2(15), ' ||
		'	ds_valor_dominio	varchar2(255)) ');



	open 	c01;
	loop
	fetch	c01 into ds_valor_dominio_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		ds_comando_w :=
			' insert into w_motivo_cancel ' ||
			'	(vl_dominio, ds_valor_dominio) ' ||
			' values ( ' || chr(39) || to_char(vl_dominio_w) || chr(39) || ',' || chr(39) ||
				ds_valor_dominio_w || chr(39) || ')';

		CALL exec_sql_dinamico(10, ds_comando_w);

		vl_dominio_w := vl_dominio_w + 1;

		end;
	end loop;
	close c01;

	open 	c02;
	loop
	fetch	c02 into ds_valor_dominio_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		CALL exec_sql_dinamico(10,
			' insert into w_motivo_cancel ' ||
			'	(vl_dominio, ds_valor_dominio) ' ||
			' values ( ' || chr(39) || to_char(vl_dominio_w) || chr(39) || ',' || chr(39) ||
				ds_valor_dominio_w || chr(39) || ')');


		vl_dominio_w := vl_dominio_w + 1;

		end;
	end loop;
	close c02;

	CALL exec_sql_dinamico(10,
			' insert into valor_dominio ' ||
			'   ( select 1011, vl_dominio, ds_valor_dominio, ' ||
			'     sysdate, ' || chr(39) || 'TASY' || chr(39) || ',' || chr(39) || 'A' || chr(39) ||
			'   from w_motivo_cancel) ');

	ds_comando2_w :=
		' update cirurgia a ' ||
		' set a.ie_motivo_cancelamento = ' ||
		'    (select distinct(x.vl_dominio) ' ||
		'    from valor_dominio x ' ||
    		'    where x.cd_dominio = 1011 ' ||
      		'    and x.vl_dominio > 100 ' ||
      		'    and x.ds_valor_dominio = obter_valor_dominio(66, a.ie_motivo_cancelamento)) ' ||
		' where a.ie_motivo_cancelamento < 100 ';

	CALL exec_sql_dinamico(10, ds_comando2_w);

	CALL exec_sql_dinamico(10,
		' update agenda_paciente a ' ||
		' set a.cd_motivo_cancelamento = ' ||
		'    (select distinct(x.vl_dominio) ' ||
		'    from valor_dominio x ' ||
    		'    where x.cd_dominio = 1011 ' ||
      		'    and x.vl_dominio > 100 ' ||
      		'    and x.ds_valor_dominio = obter_valor_dominio(1011, a.cd_motivo_cancelamento)) ' ||
		' where a.cd_motivo_cancelamento < 100 ');

	CALL exec_sql_dinamico(10, 	' delete from valor_dominio ' ||
				' where cd_dominio = 1011 ' ||
				' and vl_dominio < 100 ');

	end;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_motivo_cancel_agenda () FROM PUBLIC;

