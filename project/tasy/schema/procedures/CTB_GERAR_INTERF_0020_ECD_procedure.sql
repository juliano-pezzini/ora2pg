-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_interf_0020_ecd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Gerar as informações do registro de "ESCRITURAÇÃO CONTÁBIL DESCENTRALIZADA" 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ X ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
	IE_CONSOLIDA_EMPRESA, pois irá gerar um registro para cada estabelecimento 
	da empresa se estiver como "Sim". 
------------------------------------------------------------------------------------------------------------------- 
Referências: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
cd_cnpj_w			varchar(14);
sg_estado_w			varchar(2);
cd_inscricao_estadual_w		varchar(20);
cd_municipio_ibge_w		varchar(7);
nr_inscricao_municipal_w	varchar(20);
nr_reg_junta_comercial_w	varchar(20);
nr_linha_w			bigint	:= qt_linha_p;
nr_seq_registro_w		bigint	:= nr_sequencia_p;
ds_arquivo_w			varchar(4000);
ds_compl_arquivo_w		varchar(4000);
ds_linha_w			varchar(8000);
sep_w				varchar(1)	:= '|';
tp_registro_w			varchar(15)	:= '0020';
ie_consolida_empresa_w		ctb_regra_sped.ie_consolida_empresa%type;

c_estabelecimentos CURSOR FOR 
	SELECT 	a.cd_cgc cd_cnpj, 
		substr(obter_dados_pf_pj(null, a.cd_cgc, 'UF'), 1, 2) sg_estado, 
		a.cd_inscricao_estadual cd_inscricao_estadual, 
		lpad(coalesce(substr(obter_dados_pf_pj(null, a.cd_cgc, 'CDMDV'), 1, 7),a.cd_localidade), 7, 0) cd_municipio_ibge, 
		substr(replace(a.cd_inscricao_municipal, '-', ''), 1, 20) nr_inscricao_municipal, 
		a.nr_reg_junta_comercial 
	from	estabelecimento	a 
	where	a.cd_estabelecimento	= coalesce(cd_estabelecimento_p, a.cd_estabelecimento) 
	and	a.cd_empresa		= cd_empresa_p 
	and	ie_consolida_empresa_w	= 'N' 
	
union all
 
	SELECT 	a.cd_cgc cd_cnpj, 
		substr(obter_dados_pf_pj(null, a.cd_cgc, 'UF'), 1, 2) sg_estado, 
		a.cd_inscricao_estadual cd_inscricao_estadual, 
		lpad(coalesce(substr(obter_dados_pf_pj(null, a.cd_cgc, 'CDMDV'), 1, 7),a.cd_localidade), 7, 0) cd_municipio_ibge, 
		substr(replace(a.cd_inscricao_municipal, '-', ''),1,20) nr_inscricao_municipal, 
		a.nr_reg_junta_comercial 
	from	estabelecimento	a 
	where	a.cd_empresa			= cd_empresa_p 
	and	coalesce(a.ie_gerar_sped,'S')	=	'S' 
	and	ie_consolida_empresa_w		= 'S';


BEGIN 
select 	coalesce(max(a.ie_consolida_empresa), 'N') 
into STRICT	ie_consolida_empresa_w 
from	ctb_regra_sped		a, 
	ctb_sped_controle	b 
where	a.nr_sequencia	= b.nr_seq_regra_sped 
and	b.nr_sequencia	= nr_seq_controle_p;
 
open c_estabelecimentos;
loop 
fetch c_estabelecimentos into	 
	cd_cnpj_w, 
	sg_estado_w, 
	cd_inscricao_estadual_w, 
	cd_municipio_ibge_w, 
	nr_inscricao_municipal_w, 
	nr_reg_junta_comercial_w;
EXIT WHEN NOT FOUND; /* apply on c_estabelecimentos */
	begin	 
	ds_linha_w	:= substr(	sep_w || tp_registro_w			|| 
					sep_w || '0' 				|| 
					sep_w || cd_cnpj_w 			|| 
					sep_w || sg_estado_w			|| 
					sep_w || cd_inscricao_estadual_w	|| 
					sep_W || cd_municipio_ibge_w		|| 
					sep_w || nr_inscricao_municipal_w	|| 
					sep_w || nr_reg_junta_comercial_w	|| 
					sep_w, 1, 8000);
	 
	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_compl_arquivo_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w	:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;
	 
	insert into ctb_sped_registro(nr_sequencia, 
		ds_arquivo, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		nr_seq_controle_sped, 
		ds_arquivo_compl, 
		cd_registro, 
		nr_linha) 
	values (nr_seq_registro_w, 
		ds_arquivo_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_seq_controle_p, 
		ds_compl_arquivo_w, 
		tp_registro_w, 
		nr_linha_w);
	end;
end loop;
close c_estabelecimentos;
 
commit;
 
qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_interf_0020_ecd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

