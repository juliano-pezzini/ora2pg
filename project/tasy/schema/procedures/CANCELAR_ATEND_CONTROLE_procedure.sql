-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function cancelar_atend_controle as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE cancelar_atend_controle (cd_pessoa_fisica_p text, ie_cancela_case_p text default 'S') AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'CALL cancelar_atend_controle_atx ( ' || quote_nullable(cd_pessoa_fisica_p) || ',' || quote_nullable(ie_cancela_case_p) || ' )';
	PERFORM * FROM dblink(v_conn_str, v_query) AS p (ret boolean);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE cancelar_atend_controle_atx (cd_pessoa_fisica_p text, ie_cancela_case_p text default 'S') AS $body$
DECLARE



nm_usuario_w	usuario.nm_usuario%type := wheb_usuario_pck.get_nm_usuario;
				
c01 CURSOR(cd_pessoa_fisica_p text) FOR 
SELECT	coalesce(nr_atendimento, 0) nr_atendimento,
	coalesce(nr_seq_episodio,0) nr_seq_episodio
from	atend_paciente_controle
where	cd_pessoa_fisica = cd_pessoa_fisica_p
and	((ie_status_episodio = 'I') or (ie_status_atendimento = 'I'))
and	((nm_usuario = nm_usuario_w) or (pkg_date_utils.get_diffDate(dt_atualizacao, clock_timestamp(), 'MINUTE') > 30));
BEGIN

CALL wheb_usuario_pck.set_ie_executar_trigger('N');

for C01_W in C01(cd_pessoa_fisica_p) loop
	
	if (c01_w.nr_seq_episodio > 0) and (ie_cancela_case_p = 'S') then
		update episodio_paciente
		set    dt_cancelamento = clock_timestamp()
		where  nr_sequencia = c01_w.nr_seq_episodio;
		
		update atend_paciente_controle
		set   ie_status_episodio = 'C',
		      nm_usuario = nm_usuario_w,
		      dt_atualizacao = clock_timestamp()
		where nr_seq_episodio = c01_w.nr_seq_episodio;
	end if;
		
	if (c01_w.nr_atendimento > 0) then
		update atendimento_paciente
		set dt_cancelamento = clock_timestamp()
		where nr_atendimento = c01_w.nr_atendimento;
		
		update atend_paciente_controle
		set   ie_status_atendimento = 'C',
		      nm_usuario = nm_usuario_w,
		      dt_atualizacao = clock_timestamp()
		where nr_atendimento = c01_w.nr_atendimento;
	end if;
end loop C01_W;

CALL wheb_usuario_pck.set_ie_executar_trigger('S');

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cancelar_atend_controle (cd_pessoa_fisica_p text, ie_cancela_case_p text default 'S') FROM PUBLIC; -- REVOKE ALL ON PROCEDURE cancelar_atend_controle_atx (cd_pessoa_fisica_p text, ie_cancela_case_p text default 'S') FROM PUBLIC;

