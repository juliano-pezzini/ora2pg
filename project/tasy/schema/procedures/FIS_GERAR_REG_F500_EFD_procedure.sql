-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_gerar_reg_f500_efd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


aliquota_pis_w		varchar(255);
aliquota_cofins_w		varchar(255);
aliquota_iss_w		varchar(255);
cd_tributo_pis_w		smallint;
cd_tributo_cofins_w		smallint;
cd_tributo_iss_w		smallint;
nr_seq_regra_efd_w	bigint;
nr_linha_w		bigint := qt_linha_p;
nr_seq_registro_w		bigint := nr_sequencia_p;
ds_arquivo_w		varchar(4000);
ds_arquivo_compl_w	varchar(4000);
ds_linha_w		varchar(8000);
sep_w			varchar(1) := ds_separador_p;

c01 CURSOR FOR
	SELECT	'F500' tp_registro,
		sum(n.vl_mercadoria) vl_receita,
		'01' cst_pis,
		0 vl_desconto_pis,
		sum(n.vl_mercadoria) vl_base_pis,
		aliquota_pis_w pr_aliquota_pis,
		replace(substr(campo_mascara(round(sum((n.vl_mercadoria * 0.65)/100),2),2),1,20),'.',',') vl_pis,
		'01' cst_cofins,
		0 vl_desconto_cofins,
		sum(n.vl_mercadoria) vl_base_cofins,
		aliquota_cofins_w pr_aliquota_cofins,
		replace(substr(campo_mascara(round(sum((n.vl_mercadoria * 0.65)/100),2),2),1,20),'.',',') vl_cofins,
		'55' cd_modelo_nf,
		'' cd_cfop,
		'' cd_conta_contabil,
		'' ds_info_compl
	from	nota_fiscal n,
		operacao_nota o,
		titulo_receber t
	where	n.nr_sequencia = t.nr_seq_nf_saida
	and	n.cd_operacao_nf = o.cd_operacao_nf
	and	trunc(t.dt_liquidacao,'mm') between trunc(dt_inicio_p,'mm') and trunc(dt_fim_p,'mm')
	and	o.ie_operacao_fiscal = 'S'
	and 	o.ie_servico = 'S'
	and	(n.dt_atualizacao_estoque IS NOT NULL AND n.dt_atualizacao_estoque::text <> '')
	and	n.vl_total_nota > 0
	and	n.cd_estabelecimento	= cd_estabelecimento_p;

vet01	c01%rowtype;


BEGIN

select	nr_seq_regra_efd
into STRICT	nr_seq_regra_efd_w
from	fis_efd_controle
where	nr_sequencia = nr_seq_controle_p;

select	cd_tributo_pis,
	cd_tributo_cofins,
	cd_tributo_iss
into STRICT	cd_tributo_pis_w,
	cd_tributo_cofins_w,
	cd_tributo_iss_w
from	fis_regra_efd
where	nr_sequencia = nr_seq_regra_efd_w;

select  trim(both to_char(obter_pr_imposto(cd_tributo_pis_w),'99999990D00')),
	trim(both to_char(obter_pr_imposto(cd_tributo_cofins_w),'99999990D00')),
	trim(both to_char(obter_pr_imposto(cd_tributo_iss_w),'99999990D00'))
into STRICT	aliquota_pis_w,
	aliquota_cofins_w,
	aliquota_iss_w
;	

open c01;
loop
fetch c01 into
	vet01;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	ds_linha_w	:= substr(	sep_w || vet01.tp_registro	 	||
				sep_w || vet01.vl_receita		||
				sep_w || vet01.cst_pis		||
				sep_w || vet01.vl_desconto_pis	||
				sep_w || vet01.vl_base_pis 		||
				sep_w || vet01.pr_aliquota_pis 	||
				sep_w || vet01.vl_pis	 	||
				sep_w || vet01.cst_cofins		||
				sep_w || vet01.vl_desconto_cofins	||
				sep_w || vet01.vl_base_cofins		||
				sep_w || vet01.pr_aliquota_cofins	||
				sep_w || vet01.vl_cofins		||
				sep_w || vet01.cd_modelo_nf 		||
				sep_w || vet01.cd_cfop		||
				sep_w || vet01.cd_conta_contabil	||
				sep_w || vet01.ds_info_compl		|| sep_w,1,8000);
		
		ds_arquivo_w := substr(ds_linha_w,1,4000);
		ds_arquivo_compl_w := substr(ds_linha_w,4001,4000);
		nr_seq_registro_w := nr_seq_registro_w + 1;
		nr_linha_w := nr_linha_w + 1;
		
		insert into fis_efd_0900(	nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_seq_controle,
									ds_registro,
									cd_cst,
									cd_ind_oper,
									vl_registro )
						values ( 	nextval('fis_efd_0900_seq'),
									clock_timestamp(),
									nm_usuario_p,
									clock_timestamp(),
									nm_usuario_p,
									nr_seq_controle_p,
									'F500',
									vet01.cst_cofins,
									0,
									vet01.vl_receita );

		insert into fis_efd_arquivo(
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_controle_efd,
			nr_linha,
			cd_registro,
			ds_arquivo,
			ds_arquivo_compl)
		values (	nr_seq_registro_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_controle_p,
			nr_linha_w,
			vet01.tp_registro,
			ds_arquivo_w,
			ds_arquivo_compl_w);
		end;
	end loop;
	close c01;
commit;

qt_linha_p := nr_linha_w;
nr_sequencia_p := nr_seq_registro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_gerar_reg_f500_efd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

