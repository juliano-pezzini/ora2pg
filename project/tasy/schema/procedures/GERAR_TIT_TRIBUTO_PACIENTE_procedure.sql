-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_tit_tributo_paciente ( nr_seq_nota_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_emissao_w			nota_fiscal.dt_emissao %type;
cd_estabelecimento_w		nota_fiscal.cd_estabelecimento%type;
cd_cgc_w			nota_fiscal.cd_cgc%type;
cd_pessoa_fisica_w		nota_fiscal.cd_pessoa_fisica%type;
nr_seq_protocolo_w		nota_fiscal.nr_seq_protocolo%type;
nr_seq_mensalidade_w		nota_fiscal.nr_seq_mensalidade%type;
cd_conv_integracao_w		nota_fiscal.cd_conv_integracao%type;
cd_tributo_w			nota_fiscal_trib.cd_tributo%type;
vl_tributo_w			nota_fiscal_trib.vl_tributo%type;
tx_tributo_w			nota_fiscal_trib.tx_tributo%type;
vl_base_calculo_w			nota_fiscal_trib.vl_base_calculo%type;
vl_trib_nao_retido_w		nota_fiscal_trib.vl_trib_nao_retido%type;
vl_base_nao_retido_w		nota_fiscal_trib.vl_base_nao_retido%type;
vl_trib_adic_w			nota_fiscal_trib.vl_trib_adic%type;
vl_base_adic_w			nota_fiscal_trib.vl_base_adic%type;
ie_origem_trib_w			nota_fiscal_trib.ie_origem_trib%type;
cd_convenio_w			protocolo_convenio.cd_convenio%type;
ie_tipo_contrato_w			varchar(2);
ie_origem_titulo_plano_w		pls_parametros.ie_origem_titulo%type;
nr_seq_intercambio_w		pls_contrato_pagador.nr_seq_pagador_intercambio%type;
ie_nf_tit_rec_w			tributo.ie_nf_tit_rec%type;
nr_seq_trans_prov_trib_rec_w		tributo.nr_seq_trans_prov_trib_rec%type;
pr_aliquota_w			regra_calculo_imposto.pr_imposto%type;
vl_minimo_base_w			regra_calculo_imposto.vl_minimo_base_calculo%type;
vl_minimo_tributo_w			regra_calculo_imposto.vl_minimo_tributo%type;
ie_acumulativo_w			regra_calculo_imposto.ie_acumulativo%type;
vl_teto_base_w			regra_calculo_imposto.vl_teto_base_calculo%type;
vl_desc_dependente_w		regra_calculo_imposto.vl_desc_dependente%type;
nr_seq_regra_w			regra_calculo_imposto.nr_sequencia%type;
ie_titulo_pagar_w			regra_calculo_imposto.ie_titulo_pagar%type;
cd_cgc_beneficiario_w		regra_calculo_imposto.cd_cgc_beneficiario%type;
nr_seq_trans_fin_baixa_cp_w		regra_calculo_imposto.nr_seq_tf_baixa_cp%type;
cd_estab_financeiro_w		estabelecimento.cd_estabelecimento%type;
cd_moeda_padrao_w		parametro_contas_receber.cd_moeda_padrao%type;
cd_tipo_taxa_juro_w		parametro_contas_receber.cd_tipo_taxa_juro%type;
cd_tipo_taxa_multa_w		parametro_contas_receber.cd_tipo_taxa_multa%type;
dt_vencimento_w			titulo_pagar.dt_vencimento_atual%type;
nr_seq_tit_rec_trib_w		titulo_receber_trib.nr_sequencia%type;
pr_multa_padrao_w			parametros_contas_pagar.pr_multa_padrao%type;
pr_juro_padrao_w			parametros_contas_pagar.pr_juro_padrao%type;
cd_pessoa_fisica_trib_w		nota_fiscal.cd_pessoa_fisica%type;
nr_titulo_pagar_w			titulo_pagar.nr_titulo%type;

ie_min_reter_w			regra_calculo_imposto.ie_min_reter%type;
vl_min_reter_w			regra_calculo_imposto.vl_min_reter%type;
cd_darf_w			regra_calculo_imposto.cd_darf%type;

C03 CURSOR FOR
SELECT	a.cd_tributo,
	a.vl_tributo,
	a.tx_tributo,
	a.vl_base_calculo,
	a.vl_trib_nao_retido,
	a.vl_base_nao_retido,
	a.vl_trib_adic,
	a.vl_base_adic,
	a.ie_origem_trib
from	nota_fiscal_trib a
where	a.nr_sequencia	= nr_seq_nota_p

union

SELECT  cd_tributo,
	sum(vl_tributo),
	tx_tributo, /*a taxa do tributo nao pode ser somada, senao ficara uma taxa incorreta no titulo*/
	sum(vl_base_calculo),
	sum(vl_trib_nao_retido),
	sum(vl_base_nao_retido),
	sum(vl_trib_adic),
	sum(vl_base_adic),
	ie_origem_trib
from ( select	a.cd_tributo,
	a.vl_tributo,
	a.tx_tributo,
	a.vl_base_calculo,
	a.vl_trib_nao_retido,
	a.vl_base_nao_retido,
	a.vl_trib_adic,
	a.vl_base_adic,
	null ie_origem_trib
	from	nota_fiscal_item_trib a
	where	a.nr_sequencia	= nr_seq_nota_p ) alias6
group by cd_tributo,
	tx_tributo,
	ie_origem_trib;


BEGIN		
	
select	dt_emissao,
	cd_estabelecimento,
	cd_cgc,
	cd_pessoa_fisica,
	nr_seq_protocolo,
	nr_seq_mensalidade,
	cd_conv_integracao
into STRICT	dt_emissao_w,
	cd_estabelecimento_w,
	cd_cgc_w,
	cd_pessoa_fisica_w,
	nr_seq_protocolo_w,
	nr_seq_mensalidade_w,
	cd_conv_integracao_w
from	nota_fiscal
where	nr_sequencia = nr_seq_nota_p;

if (coalesce(nr_seq_protocolo_w,0) > 0) then
	select	max(cd_convenio)
	into STRICT	cd_convenio_w
	from	protocolo_convenio
	where	nr_seq_protocolo = nr_seq_protocolo_w;
else
	select	max(c.cd_convenio)
	into STRICT	cd_convenio_w
	from	lote_protocolo c,
		nota_fiscal d
	where	d.nr_sequencia = nr_seq_nota_p
	and	d.nr_seq_lote_prot = c.nr_sequencia;
end if;	

if (nr_seq_mensalidade_w IS NOT NULL AND nr_seq_mensalidade_w::text <> '') then
	begin
	
	dt_emissao_w	:= clock_timestamp(); /* A data de emissao do titulo da mensalidade deve ser a data atual, pois o pagamento pode ser realizado a qualquer momento e a data de vecimento da nota fiscal e conforme a referencia da mensalidade */
	
	select	max(c.nr_seq_pagador_intercambio)
	into STRICT	nr_seq_intercambio_w
	from	pls_mensalidade		a,
		pls_contrato_pagador	c,
		pls_lote_mensalidade	b
	where	a.nr_seq_pagador = c.nr_sequencia
	and	a.nr_seq_lote = b.nr_sequencia
	and	a.nr_sequencia = nr_seq_mensalidade_w;
	
	if (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
		ie_tipo_contrato_w := 'CI';
	else
		ie_tipo_contrato_w := 'CO';
	end if;
	
	select	coalesce(ie_origem_titulo,3)
	into STRICT	ie_origem_titulo_plano_w
	from	pls_parametros
	where	cd_estabelecimento = cd_estabelecimento_w;
	
	exception
		when no_data_found then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(176754);
	end;	
	
end if;

select	coalesce(cd_estab_financeiro, cd_estabelecimento)
into STRICT	cd_estab_financeiro_w
from	estabelecimento
where	cd_estabelecimento = cd_estabelecimento_w;		

select	cd_tipo_taxa_juro,
	cd_tipo_taxa_multa,
	cd_moeda_padrao
into STRICT	cd_tipo_taxa_juro_w,
	cd_tipo_taxa_multa_w,
	cd_moeda_padrao_w
from	parametro_contas_receber
where	cd_estabelecimento = cd_estabelecimento_w;

select	max(a.pr_multa_padrao),
	max(a.pr_juro_padrao)
into STRICT	pr_multa_padrao_w,
	pr_juro_padrao_w
from	parametros_contas_pagar a
where	a.cd_estabelecimento = cd_estabelecimento_w;	
		
open C03;
loop
fetch C03 into
	cd_tributo_w,
	vl_tributo_w,
	tx_tributo_w,
	vl_base_calculo_w,
	vl_trib_nao_retido_w,
	vl_base_nao_retido_w,
	vl_trib_adic_w,
	vl_base_adic_w,
	ie_origem_trib_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	
	select	coalesce(max(ie_nf_tit_rec),'N'),
		max(nr_seq_trans_prov_trib_rec)
	into STRICT	ie_nf_tit_rec_w,
		nr_seq_trans_prov_trib_rec_w
	from	tributo
	where	cd_tributo = cd_tributo_w;
	
	
	if (ie_nf_tit_rec_w = 'S') or (ie_nf_tit_rec_w = 'U') then
		
		/* ahoffelder - OS 298350 - 05/04/2011 - gerar titulo a pagar para o tributo */

		SELECT * FROM obter_dados_trib_tit_rec(cd_tributo_w, cd_estabelecimento_w, coalesce(cd_convenio_w,cd_conv_integracao_w), dt_emissao_w, 'N', pr_aliquota_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_pessoa_fisica_w, cd_cgc_w, ie_tipo_contrato_w, coalesce(ie_origem_titulo_plano_w, 1), 0, nr_seq_regra_w, cd_darf_w) INTO STRICT pr_aliquota_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, nr_seq_regra_w, cd_darf_w;	
		
		
		select	max(a.ie_titulo_pagar),
			max(a.cd_cgc_beneficiario),
			max(a.nr_seq_tf_baixa_cp),
			coalesce(ie_min_reter, 'N'),
			coalesce(vl_min_reter, 0)
		into STRICT	ie_titulo_pagar_w,
			cd_cgc_beneficiario_w,
			nr_seq_trans_fin_baixa_cp_w,
			ie_min_reter_w,
			vl_min_reter_w
		from	regra_calculo_imposto a
		where	a.nr_sequencia	= nr_seq_regra_w
		group by ie_min_reter, vl_min_reter;
		
		dt_vencimento_w := obter_dt_venc_tributo(nr_seq_nota_p, cd_tributo_w);
		
		select	max(nr_sequencia)
		into STRICT	nr_seq_tit_rec_trib_w
		from 	titulo_receber_trib
		where	nr_seq_nota_fiscal = nr_seq_nota_p
		and	cd_tributo = cd_tributo_w;			
		
		if ((ie_titulo_pagar_w = 'S') and (vl_tributo_w <> 0)
			and ((ie_min_reter_w = 'S' AND vl_min_reter_w > vl_tributo_w) or (ie_min_reter_w = 'N'))) then
			
			if (coalesce(cd_cgc_beneficiario_w::text, '') = '') then
				cd_pessoa_fisica_trib_w	:= cd_pessoa_fisica_w;
			else
				cd_pessoa_fisica_trib_w	:= null;
			end if;
			
			select	nextval('titulo_pagar_seq')
			into STRICT 	nr_titulo_pagar_w
			;
			
			insert into titulo_pagar(cd_cgc,
				cd_estabelecimento,
				cd_estab_financeiro,
				cd_moeda,
				cd_pessoa_fisica,
				cd_tipo_taxa_juro,
				cd_tipo_taxa_multa,
				dt_atualizacao,
				dt_emissao,
				dt_vencimento_atual,
				dt_vencimento_original,
				ie_origem_titulo,
				ie_situacao,
				ie_tipo_titulo,
				nm_usuario,
				nr_seq_tit_rec_trib,
				nr_titulo,
				tx_juros,
				tx_multa,
				vl_saldo_juros,
				vl_saldo_multa,
				vl_saldo_titulo,
				vl_titulo,
				cd_tributo,
				nr_seq_trans_fin_baixa,
				nr_seq_nota_fiscal)
			values (coalesce(cd_cgc_beneficiario_w,cd_cgc_w),
				cd_estabelecimento_w,
				cd_estab_financeiro_w,
				cd_moeda_padrao_w,
				cd_pessoa_fisica_trib_w,
				cd_tipo_taxa_juro_w,
				cd_tipo_taxa_multa_w,
				clock_timestamp(),
				dt_emissao_w,
				dt_vencimento_w,
				dt_vencimento_w,
				'4',
				'A',
				'4',
				nm_usuario_p,
				nr_seq_tit_rec_trib_w,
				nr_titulo_pagar_w,
				pr_juro_padrao_w,
				pr_multa_padrao_w,
				0,
				0,
				vl_tributo_w,
				vl_tributo_w,
				cd_tributo_w,
				nr_seq_trans_fin_baixa_cp_w,
				nr_seq_nota_p);
				
			CALL atualizar_inclusao_tit_pagar(nr_titulo_pagar_w, nm_usuario_p);
		end if;
	end if;
end loop;
close C03;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_tit_tributo_paciente ( nr_seq_nota_p bigint, nm_usuario_p text) FROM PUBLIC;

