-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_itens_ordem_frac_proc ( nr_seq_processo_p bigint, nr_seq_ordem_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_material_w		integer;
qt_material_w		double precision;
cd_unidade_medida_w	varchar(30);
nr_seq_lote_fornec_w	bigint;
nr_sequencia_w		bigint;
cd_estabelecimento_w	smallint;
nr_prescricao_w		bigint;
nr_seq_material_w	integer;
qt_lanca_conta_w	double precision;
qt_baixa_estoque_w	double precision;
cd_setor_atendimento_w	integer;
cd_local_estoque_w	smallint;
cd_unid_med_consumo_w	varchar(30);
qt_unitaria_w		double precision;

c01 CURSOR FOR
SELECT	a.cd_material,
	ceil(coalesce(coalesce(a.qt_horario,a.qt_dispensar_hor),dividir(b.qt_total_dispensar,b.nr_ocorrencia))) qt_material,
	coalesce(coalesce(a.cd_unid_med_hor,a.cd_unidade_medida),a.cd_unidade_medida_dose) cd_unidade_medida,
	b.nr_seq_lote_fornec,
	c.cd_estabelecimento,
	c.nr_prescricao,
	b.nr_sequencia,
	c.cd_setor_atendimento,
	b.cd_local_estoque,
	b.cd_unidade_medida,
	b.qt_unitaria
from	prescr_material b,
	prescr_medica c,
	prescr_mat_hor a
where	b.nr_prescricao		= a.nr_prescricao
and	b.nr_sequencia		= a.nr_seq_material
and	a.nr_prescricao		= c.nr_prescricao
and	c.nr_prescricao		= b.nr_prescricao
and	a.nr_seq_processo	= nr_seq_processo_p
and	a.nr_seq_etiqueta	= nr_seq_ordem_p
and	Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S';


BEGIN
if (nr_seq_processo_p IS NOT NULL AND nr_seq_processo_p::text <> '') and (nr_seq_ordem_p IS NOT NULL AND nr_seq_ordem_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then

	open c01;
	loop
	fetch c01 into	cd_material_w,
			qt_material_w,
			cd_unidade_medida_w,
			nr_seq_lote_fornec_w,
			cd_estabelecimento_w,
			nr_prescricao_w,
			nr_seq_material_w,
			cd_setor_atendimento_w,
			cd_local_estoque_w,
			cd_unid_med_consumo_w,
			qt_unitaria_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		select	nextval('adep_processo_item_seq')
		into STRICT	nr_sequencia_w
		;

		SELECT * FROM Obter_Quant_Gedipa(cd_estabelecimento_w, cd_setor_atendimento_w, cd_local_estoque_w, cd_material_w, qt_unitaria_w, cd_unid_med_consumo_w, nr_prescricao_w, nr_seq_material_w, qt_lanca_conta_w, qt_baixa_estoque_w) INTO STRICT qt_lanca_conta_w, qt_baixa_estoque_w;


		insert into adep_processo_item(
			nr_sequencia,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_atualizacao,
			nm_usuario,
			nr_seq_frac,
			cd_material,
			qt_material,
			cd_unidade_medida,
			nr_seq_lote_fornec,
			qt_conta,
			cd_unidade_medida_conta,
			qt_estoque,
			cd_unidade_medida_estoque)
		values (
			nr_sequencia_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_ordem_p,
			cd_material_w,
			qt_material_w,
			cd_unidade_medida_w,
			nr_seq_lote_fornec_w,
			qt_lanca_conta_w,
			cd_unid_med_consumo_w,
			qt_baixa_estoque_w,
			cd_unid_med_consumo_w);

		end;
	end loop;
	close c01;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_itens_ordem_frac_proc ( nr_seq_processo_p bigint, nr_seq_ordem_p bigint, nm_usuario_p text) FROM PUBLIC;

