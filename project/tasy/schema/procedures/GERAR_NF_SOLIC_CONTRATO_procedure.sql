-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nf_solic_contrato ( nr_solic_compra_p bigint, nr_nota_fiscal_p bigint, cd_serie_nf_P text, cd_operacao_nota_p bigint, dt_emissao_p timestamp, cd_setor_digitacao_p bigint, cd_condicao_pagamento_p bigint, cd_natureza_operacao_p bigint, nr_seq_modelo_p bigint, nm_usuario_p text, dt_vencimento_p timestamp, nr_sequencia_p INOUT bigint) AS $body$
DECLARE



cd_cgc_contratado_w			varchar(14);
cd_pessoa_contratada_w			varchar(10);
cd_cnpj_estab_w				varchar(14);
nr_seq_contrato_w				bigint;
ie_tipo_nota_w				varchar(2);
nr_seq_regra_contrato_w			bigint;
nr_sequencia_nf_w            			bigint;
cd_estabelecimento_w			bigint;
nr_seq_nf_w				bigint	:= 0;
ds_objeto_contrato_w			varchar(1000);
nr_item_nf_w				integer;
nr_seq_conta_gpi_w			bigint;
nr_seq_etapa_gpi_w			bigint;
nr_seq_orcamento_gpi_w			bigint;
nr_seq_proj_gpi_w			bigint;	
cd_material_w				integer;
cd_material_estoque_w			integer;
ie_tipo_conta_w				integer;
cd_local_estoque_w			bigint;
cd_centro_custo_w				bigint;
cd_conta_contabil_w			varchar(20);
nr_seq_conta_financeira_w			bigint;
cd_unidade_medida_compra_w		varchar(30);
cd_unidade_medida_estoque_w		varchar(30);
qt_material_w				double precision;
vl_item_w					double precision;
qt_item_estoque_w				double precision;
valor_total_item_w				double precision;
nr_solic_compra_w				bigint;
nr_item_solic_compra_w			integer;
qt_existe_w				bigint;
ie_tipo_servico_w			varchar(15);
vl_unit_previsto_w			double precision;

cd_centro_custo_rat_w		integer;
cd_conta_contabil_rat_w		varchar(20);
cd_conta_financ_rat_w		bigint;
vl_rateio_rat_w			double precision;
vl_frete_rat_w			double precision;
vl_desconto_rat_w			double precision;
vl_seguro_rat_w			double precision;
vl_despesa_acessoria_rat_w		double precision;
ie_situacao_rat_w			varchar(1);
cd_condicao_pagamento_w			bigint;
ie_forma_pagamento_w			smallint;
vl_total_nota_w				double precision;
qt_rateio_w				double precision;
vl_mercadoria_w				double precision;
observacao_item_w 		solic_compra_item.ds_observacao%type;
observacao_compra_w		solic_compra.ds_observacao%type;

c01 CURSOR FOR
SELECT	a.nr_sequencia,	
	CASE WHEN coalesce(c.cd_fornec_sugerido::text, '') = '' THEN  cd_cnpj_estab_w  ELSE c.cd_fornec_sugerido END  ie_tipo_nota,
	c.cd_pessoa_fisica,
	CASE WHEN coalesce(a.cd_cgc_contratado::text, '') = '' THEN  'EF'  ELSE 'EN' END  ie_tipo_nota,
	b.nr_seq_regra_contrato,
	c.cd_estabelecimento,
	a.ds_objeto_contrato,
	b.cd_material,
	c.cd_local_estoque,
	c.cd_centro_custo,
	b.qt_material,
	b.cd_unidade_medida_compra,
	b.nr_solic_compra,
	b.nr_item_solic_compra,
	coalesce(vl_unit_previsto,0),
	c.ds_observacao
from	contrato a,
	solic_compra_item b,
	solic_compra c
where	a.nr_sequencia = b.nr_contrato
and	c.nr_solic_compra = b.nr_solic_compra
and	c.nr_solic_compra = nr_solic_compra_p
and	c.ie_tipo_servico = 'SP'

union

SELECT	b.nr_contrato,	
	CASE WHEN coalesce(c.cd_fornec_sugerido::text, '') = '' THEN  cd_cnpj_estab_w  ELSE c.cd_fornec_sugerido END  ie_tipo_nota,
	cd_pessoa_fisica,	
	CASE WHEN coalesce(c.cd_fornec_sugerido::text, '') = '' THEN  'EF'  ELSE 'EN' END  ie_tipo_nota,
	b.nr_seq_regra_contrato,
	c.cd_estabelecimento,
	null,
	b.cd_material,
	c.cd_local_estoque,
	c.cd_centro_custo,
	b.qt_material,
	b.cd_unidade_medida_compra,
	b.nr_solic_compra,
	b.nr_item_solic_compra,
	coalesce(b.vl_unit_previsto,0),
	c.ds_observacao
from	solic_compra_item b,
	solic_compra c
where	c.nr_solic_compra = b.nr_solic_compra
and	c.nr_solic_compra = nr_solic_compra_p
and	c.ie_tipo_servico = 'SR';

c02 CURSOR FOR
SELECT	cd_centro_custo,
	cd_conta_contabil,
	cd_conta_financ,
	vl_rateio,
	vl_frete,
	vl_desconto,
	vl_seguro,
	vl_despesa_acessoria,
	ie_situacao,
	qt_rateio
from	solic_compra_item_rateio
where	nr_solic_compra = nr_solic_compra_p
and	nr_item_solic_compra = nr_item_solic_compra_w;



BEGIN
cd_condicao_pagamento_w := cd_condicao_pagamento_p;

select	ie_tipo_servico,
	obter_cgc_estabelecimento(cd_estabelecimento)
into STRICT	ie_tipo_servico_w,
	cd_cnpj_estab_w
from	solic_compra
where	nr_solic_compra = nr_solic_compra_p;

if (ie_tipo_servico_w = 'SP') then
	select	count(*)
	into STRICT	qt_existe_w
	from	contrato a,
		solic_compra_item b,
		solic_compra c
	where	a.nr_sequencia = b.nr_contrato
	and	c.nr_solic_compra = b.nr_solic_compra
	and	c.nr_solic_compra = nr_solic_compra_p;
	
	if (qt_existe_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(186761);
	end if;
end if;

open C01;
loop
fetch C01 into	
	nr_seq_contrato_w,
	cd_cgc_contratado_w,
	cd_pessoa_contratada_w,
	ie_tipo_nota_w,
	nr_seq_regra_contrato_w,
	cd_estabelecimento_w,	
	ds_objeto_contrato_w,
	cd_material_w,
	cd_local_estoque_w,
	cd_centro_custo_w,
	qt_material_w,
	cd_unidade_medida_compra_w,
	nr_solic_compra_w,
	nr_item_solic_compra_w,
	vl_unit_previsto_w,
	observacao_compra_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin	
	
	
	select  nr_seq_conta_gpi,
		nr_seq_etapa_gpi,
		nr_seq_proj_gpi
	into STRICT	nr_seq_conta_gpi_w,
		nr_seq_etapa_gpi_w,
		nr_seq_proj_gpi_w	
	from	solic_compra
	where	nr_solic_compra = nr_solic_compra_w;
	
	
	select 	max(nr_seq_orc_item_gpi)
	into STRICT	nr_seq_orcamento_gpi_w
	from	solic_compra_item
	where	nr_solic_compra 	= nr_solic_compra_w
	and	nr_item_solic_compra 	= nr_item_solic_compra_w;
	
	
	if (nr_seq_nf_w = 0) then
		
		if (dt_vencimento_p IS NOT NULL AND dt_vencimento_p::text <> '') then
			select	min(cd_condicao_pagamento)
			into STRICT	cd_condicao_pagamento_w
			from	condicao_pagamento
			where	ie_situacao = 'A'
			and	ie_forma_pagamento = 10;		
		end if;
	
		select (coalesce(max(nr_sequencia_nf),0) + 1)
		into STRICT	nr_sequencia_nf_w
		from	nota_fiscal
		where	cd_estabelecimento	= cd_estabelecimento_w
		and	cd_cgc_emitente		= cd_cgc_contratado_w
		and	nr_nota_fiscal		= nr_nota_fiscal_p
		and	cd_serie_nf		= cd_serie_nf_p;
		
		select	nextval('nota_fiscal_seq')
		into STRICT	nr_seq_nf_w
		;

		insert	into nota_fiscal(
			nr_sequencia,
			cd_estabelecimento,
			cd_cgc_emitente,
			cd_cgc,
			cd_pessoa_fisica,
			cd_serie_nf,       
			nr_sequencia_nf,
			cd_operacao_nf,
			dt_emissao,
			dt_entrada_saida,
			ie_acao_nf,
			ie_emissao_nf,
			ie_tipo_frete,
			vl_mercadoria,
			vl_total_nota,
			qt_peso_bruto,
			qt_peso_liquido,
			vl_ipi,
			vl_descontos,
			vl_frete,
			vl_seguro,
			vl_despesa_acessoria,
			dt_atualizacao,
			nm_usuario,
			nr_nota_fiscal,
			cd_natureza_operacao,
			ie_situacao,
			ie_entregue_bloqueto,
			cd_setor_digitacao,
			ie_tipo_nota,
			cd_condicao_pagamento,
			nr_seq_modelo,
			nr_contrato,
			ds_observacao)
		values(	nr_seq_nf_w,
			cd_estabelecimento_w,
			cd_cgc_contratado_w,
			cd_cgc_contratado_w,
			cd_pessoa_contratada_w,
			cd_serie_nf_p,
			nr_sequencia_nf_w,
			cd_operacao_nota_p,
			dt_emissao_p,
			trunc(clock_timestamp(),'dd'),
			1,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			0,
			clock_timestamp(),
			nm_usuario_p,
			nr_nota_fiscal_p,
			cd_natureza_operacao_p,
			1,
			'N',
			cd_setor_digitacao_p,
			ie_tipo_nota_w,
			cd_condicao_pagamento_p,
			CASE WHEN nr_seq_modelo_p=0 THEN null  ELSE nr_seq_modelo_p END ,
			nr_seq_contrato_w,
			substr((WHEB_MENSAGEM_PCK.get_texto(301603,'NR_SOLIC_COMPRA_P='||nr_solic_compra_p||
						';NR_SEQ_CONTRATO_W='||nr_seq_contrato_w||
						';DS_OBJETO_CONTRATO_W='||ds_objeto_contrato_w)) || chr(13) ||observacao_compra_w,1,4000));
			
		CALL gerar_historico_nota_fiscal(
			nr_seq_nf_w,
			nm_usuario_p,
			'8',
			WHEB_MENSAGEM_PCK.get_texto(301604));
		
		CALL gerar_historico_solic_compra(
			nr_solic_compra_p,
			WHEB_MENSAGEM_PCK.get_texto(301605),
			WHEB_MENSAGEM_PCK.get_texto(301606,'NR_SEQ_NF_W='||NR_SEQ_NF_W),
			'N',
			nm_usuario_p);
	end if;
	
	if (nr_seq_nf_w > 0) then
		
		select (coalesce(max(nr_item_nf),0) + 1)
		into STRICT	nr_item_nf_w
		from	nota_fiscal_item
		where	nr_sequencia	= nr_seq_nf_w;

		ie_tipo_conta_w	:= 3;
		if (coalesce(cd_centro_custo_w::text, '') = '') then
			ie_tipo_conta_w	:= 2;
		end if;

		SELECT * FROM define_conta_material(
			cd_estabelecimento_w, cd_material_w, ie_tipo_conta_w, 0, 0, 0, 0, 0, 0, 0, cd_local_estoque_w, cd_operacao_nota_p, trunc(clock_timestamp()), cd_conta_contabil_w, cd_centro_custo_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
	
	
		nr_seq_conta_financeira_w := obter_conta_financeira(
			'S', cd_estabelecimento_w, cd_material_w, null, null, null, null, cd_cgc_contratado_w, cd_centro_custo_w, nr_seq_conta_financeira_w, null, cd_operacao_nota_p, null, null, null, null, null, cd_pessoa_contratada_w, null, null, null, null, cd_local_estoque_w, null, null, null, null, null, null);
		
		if (nr_seq_conta_financeira_w = 0) then
			nr_seq_conta_financeira_w := null;
		end if;
			
		select	cd_material_estoque,
			cd_unidade_medida_estoque			
		into STRICT	cd_material_estoque_w,
			cd_unidade_medida_estoque_w
		from	material
		where	cd_material = cd_material_w;
		
		/*if	(ie_tipo_servico_w = 'SP') then
			select	nvl(vl_pagto,0)
			into	vl_item_w
			from	contrato_regra_nf
			where	nr_sequencia = nr_seq_regra_contrato_w;
		else
			vl_item_w := nvl(vl_unit_previsto_w,0);
		end if;*/
		
		vl_item_w := coalesce(vl_unit_previsto_w,0);
		
		qt_item_estoque_w	:= qt_material_w * obter_dados_material(cd_material_w, 'QCE');
		valor_total_item_w	:= qt_material_w * vl_item_w;
		
		
		select 	ds_observacao
		into STRICT observacao_item_w
		from solic_compra_item
		where nr_item_solic_compra = nr_item_solic_compra_w
		and nr_solic_compra = nr_solic_compra_p;
		
		insert into nota_fiscal_item(
			cd_estabelecimento,
			cd_cgc_emitente,
			cd_serie_nf,
			nr_nota_fiscal,
			nr_sequencia_nf,
			nr_item_nf,
			cd_natureza_operacao,
			qt_item_nf,
			qt_item_estoque,
			vl_unitario_item_nf,
			vl_total_item_nf,
			dt_atualizacao,
			nm_usuario,
			vl_frete,
			vl_desconto,
			vl_despesa_acessoria,
			cd_material,
			vl_desconto_rateio,
			vl_seguro,
			nr_sequencia,
			vl_liquido,
			cd_unidade_medida_compra,
			cd_unidade_medida_estoque,
			cd_material_estoque,
			cd_local_estoque,
			cd_conta_contabil,
			cd_centro_custo,
			ie_indeterminado,
			nr_seq_conta_financ,
			nr_contrato,
			nr_seq_regra_contrato,
			nr_solic_compra,
			nr_item_solic_compra,
			nr_seq_conta_gpi,
			nr_seq_etapa_gpi,
			nr_seq_orc_item_gpi,
			nr_seq_proj_gpi,
			ds_observacao,
			cd_sequencia_parametro)
		values (	cd_estabelecimento_w,
			cd_cgc_contratado_w,
			cd_serie_nf_p,
			nr_nota_fiscal_p,
			nr_sequencia_nf_w,
			nr_item_nf_w,
			cd_natureza_operacao_p,
			qt_material_w,
			qt_item_estoque_w,
			vl_item_w,
			valor_total_item_w,
			clock_timestamp(),
			nm_usuario_p,
			0,
			0,
			0,
			cd_material_w,
			0,
			0,
			nr_seq_nf_w,
			valor_total_item_w,
			cd_unidade_medida_compra_w,
			cd_unidade_medida_estoque_w,
			cd_material_estoque_w,
			cd_local_estoque_w,
			cd_conta_contabil_w,
			cd_centro_custo_w,
			'N',
			nr_seq_conta_financeira_w,
			nr_seq_contrato_w,
			nr_seq_regra_contrato_w,
			nr_solic_compra_w,
			nr_item_solic_compra_w,
			nr_seq_conta_gpi_w,
			nr_seq_etapa_gpi_w,
			nr_seq_orcamento_gpi_w,
			nr_seq_proj_gpi_w,
			observacao_item_w,
			philips_contabil_pck.get_parametro_conta_contabil);

		open c02;
		loop
		fetch c02 into
			cd_centro_custo_rat_w,
			cd_conta_contabil_rat_w,
			cd_conta_financ_rat_w,
			vl_rateio_rat_w,
			vl_frete_rat_w,
			vl_desconto_rat_w,
			vl_seguro_rat_w,
			vl_despesa_acessoria_rat_w,
			ie_situacao_rat_w,
			qt_rateio_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin

			insert into nota_fiscal_item_rateio(
				nr_sequencia,
				nr_seq_nota,
				nr_item_nf,
				dt_atualizacao,
				nm_usuario,
				cd_centro_custo,
				cd_conta_contabil,
				cd_conta_financ,
				vl_rateio,
				vl_frete,
				vl_desconto,
				vl_seguro,
				vl_despesa_acessoria,
				ie_situacao,
				qt_rateio) values (
					nextval('nota_fiscal_item_rateio_seq'),
					nr_seq_nf_w,
					nr_item_nf_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_centro_custo_rat_w,
					cd_conta_contabil_rat_w,
					cd_conta_financ_rat_w,
					vl_rateio_rat_w,
					vl_frete_rat_w,
					vl_desconto_rat_w,
					vl_seguro_rat_w,
					vl_despesa_acessoria_rat_w,
					ie_situacao_rat_w,
					qt_rateio_w);

			end;
		end loop;
		close c02;
	
	end if;
	
	CALL atualiza_total_nota_fiscal(nr_seq_nf_w, nm_usuario_p);
	
	select	coalesce(max(ie_forma_pagamento),0)
	into STRICT	ie_forma_pagamento_w
	from	condicao_pagamento
	where	cd_condicao_pagamento = cd_condicao_pagamento_w;
	
	if (ie_forma_pagamento_w <> 10) and (nr_seq_nf_w > 0) then
		CALL gerar_vencimento_nota_fiscal(nr_seq_nf_w, nm_usuario_p);
	end if;
	
	if (ie_forma_pagamento_w = 10) and (nr_seq_nf_w > 0) and (dt_vencimento_p IS NOT NULL AND dt_vencimento_p::text <> '') then
						
		select	coalesce(max(vl_total_nota),0),
			coalesce(max(vl_mercadoria),0)
		into STRICT	vl_total_nota_w,
			vl_mercadoria_w
		from	nota_fiscal
		where	nr_sequencia = nr_seq_nf_w;
		
		if (vl_total_nota_w > 0) then
			
			delete from nota_fiscal_venc where nr_Sequencia = nr_seq_nf_w;
			
			insert into nota_fiscal_venc(
				nr_sequencia,
				cd_estabelecimento,
				cd_cgc_emitente,
				cd_serie_nf,
				nr_nota_fiscal,
				nr_sequencia_nf,
				dt_vencimento,
				vl_vencimento,
				dt_atualizacao,
				nm_usuario,
				vl_desc_financ,
				ds_observacao,
				vl_base_venc,
				ie_origem)
			values ( nr_seq_nf_w,
				cd_estabelecimento_w,
				cd_cgc_contratado_w,
				cd_serie_nf_p,
				nr_nota_fiscal_p,
				nr_sequencia_nf_w,
				dt_vencimento_p,
				vl_total_nota_w,
				clock_timestamp(),
				nm_usuario_p,
				0,
				'',
				vl_mercadoria_w,
				'N');
				
		end if;		
	end if;
	
	end;
end loop;
close C01;

nr_sequencia_p := nr_seq_nf_w;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nf_solic_contrato ( nr_solic_compra_p bigint, nr_nota_fiscal_p bigint, cd_serie_nf_P text, cd_operacao_nota_p bigint, dt_emissao_p timestamp, cd_setor_digitacao_p bigint, cd_condicao_pagamento_p bigint, cd_natureza_operacao_p bigint, nr_seq_modelo_p bigint, nm_usuario_p text, dt_vencimento_p timestamp, nr_sequencia_p INOUT bigint) FROM PUBLIC;

