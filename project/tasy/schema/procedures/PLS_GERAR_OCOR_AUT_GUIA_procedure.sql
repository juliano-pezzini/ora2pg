-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_ocor_aut_guia ( nr_seq_ocor_filtro_p pls_ocor_aut_filtro.nr_sequencia%type, nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_execucao_p pls_execucao_requisicao.nr_sequencia%type, nr_seq_param1_p integer, nr_seq_param2_p integer, nr_seq_param3_p integer, nr_seq_param4_p integer, nr_seq_param5_p integer, nm_usuario_p usuario.nm_usuario%type, ie_gerar_ocorrencia_p INOUT pls_guia_plano.ie_situacao%type, ie_tipo_ocorrencia_p INOUT pls_guia_plano.ie_situacao%type) AS $body$
DECLARE

				
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade Rotina utilizada para validar as informacoes da guia com os filtros definidos na regra
de ocorrencia combinada
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X] Objetos do dicionario [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao: Performance
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */


/*
IE_TIPO_OCORRENCIA_P	= C - Gera a ocorrencia para o cabecalho
			= I - Gera ocorrencia para os itens
*/
ie_tipo_guia_w			pls_guia_plano.ie_tipo_guia%type;
ie_tipo_processo_w		pls_guia_plano.ie_tipo_processo%type;
ie_origem_solic_w		pls_guia_plano.ie_origem_solic%type;
ie_tipo_atend_tiss_w		pls_guia_plano.ie_tipo_atend_tiss%type;
ie_carater_internacao_w		pls_guia_plano.ie_carater_internacao%type;
nr_seq_clinica_w		pls_guia_plano.nr_seq_clinica%type;
dt_emissao_w			pls_guia_plano.dt_emissao%type;
nr_seq_prestador_w		pls_guia_plano.nr_seq_prestador%type;
dt_solicitacao_w		pls_guia_plano.dt_solicitacao%type;
nr_seq_segurado_w		pls_guia_plano.nr_seq_segurado%type;
qt_dia_solicitado_w		pls_guia_plano.qt_dia_solicitado%type;
cd_guia_principal_w		pls_guia_plano.cd_guia_principal%type;
nr_seq_tipo_acomodacao_w	pls_requisicao.nr_seq_tipo_acomodacao%type;
ie_tipo_consulta_w		pls_guia_plano.ie_tipo_consulta%type;
nr_seq_requisicao_w		pls_execucao_requisicao.nr_seq_requisicao%type;
ie_exige_anexo_w		pls_ocor_aut_filtro_guia.ie_exige_anexo%type;
ie_regra_com_itens_w		varchar(1)	:= 'N';
ie_gerar_ocorrencia_w		varchar(1)	:= 'N';
ie_diaria_permitida_w		varchar(1)	:= 'N';
ie_dias_cobranca_prec_w		varchar(1)	:= 'N';
ie_valor_minimo_w		varchar(1)	:= 'N';
ie_hora_periodo_w		varchar(1)	:= 'N';
qt_indicacao_clinica_w		integer;
ie_existe_anexo_w		integer;
dt_solicitacao_ww		varchar(20);
ie_regime_atendimento_w		pls_guia_plano.ie_regime_atendimento%type;
ie_saude_ocupacional_w		pls_guia_plano.ie_saude_ocupacional%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_exige_anexo,
		a.ie_consiste_qt_diaria,
		a.ie_exige_prestador,
		a.ie_val_dt_solic_futura,
		a.qt_dias_cobranca_prev,
		a.vl_minimo,
		a.ie_exige_indicacao_clinica,
		a.hr_inicial,
		a.hr_final,
		a.ie_guia_referencia
	from	pls_ocor_aut_filtro_guia	a
	where	nr_seq_ocor_aut_filtro		= nr_seq_ocor_filtro_p
	and	a.ie_situacao			= 'A'
	and (coalesce(a.nr_seq_clinica::text, '') = ''		or a.nr_seq_clinica		= nr_seq_clinica_w)
	and (coalesce(a.ie_tipo_atend_tiss::text, '') = '' 		or a.ie_tipo_atend_tiss		= ie_tipo_atend_tiss_w)
	and (coalesce(a.ie_tipo_guia::text, '') = ''			or a.ie_tipo_guia		= ie_tipo_guia_w)
	and (coalesce(a.ie_tipo_processo::text, '') = ''		or a.ie_tipo_processo		= ie_tipo_processo_w)
	and (coalesce(a.ie_carater_internacao::text, '') = '' 	or a.ie_carater_internacao 	= ie_carater_internacao_w)
	and (coalesce(a.ie_origem_solic::text, '') = '' 		or a.ie_origem_solic 		= ie_origem_solic_w)	
	and (coalesce(a.nr_seq_tipo_acomodacao::text, '') = '' 	or a.nr_seq_tipo_acomodacao 	= nr_seq_tipo_acomodacao_w)
	and (coalesce(a.ie_tipo_consulta::text, '') = '' 		or a.ie_tipo_consulta 		= ie_tipo_consulta_w)
	and (coalesce(a.ie_regime_atendimento::text, '') = '' 	or a.ie_regime_atendimento 	= ie_regime_atendimento_w)
	and (coalesce(a.ie_saude_ocupacional::text, '') = '' 	or a.ie_saude_ocupacional 	= ie_saude_ocupacional_w);
	
BEGIN

if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	select	max(a.nr_seq_clinica),
		max(a.ie_tipo_atend_tiss),
		max(a.ie_tipo_guia),
		max(a.ie_tipo_processo),
		max(a.nr_seq_prestador),
		max(a.ie_carater_internacao),
		max(coalesce(a.ie_origem_solic, 'M')),
		max(a.dt_solicitacao),
		max(a.qt_dia_solicitado),
		max(a.nr_seq_segurado),
		max(a.dt_emissao),
		max(a.cd_guia_principal),
		max(a.nr_seq_tipo_acomodacao),
		max(a.ie_tipo_consulta),
		max(a.ie_regime_atendimento),
		max(a.ie_saude_ocupacional)
	into STRICT	nr_seq_clinica_w,
		ie_tipo_atend_tiss_w,
		ie_tipo_guia_w,
		ie_tipo_processo_w,
		nr_seq_prestador_w,
		ie_carater_internacao_w,
		ie_origem_solic_w,
		dt_solicitacao_w,
		qt_dia_solicitado_w,
		nr_seq_segurado_w,
		dt_emissao_w,
		cd_guia_principal_w,
		nr_seq_tipo_acomodacao_w,
		ie_tipo_consulta_w,
		ie_regime_atendimento_w,
		ie_saude_ocupacional_w
	from	pls_guia_plano	a
	where	a.nr_sequencia 	= nr_seq_guia_p;
	
elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	select	max(a.nr_seq_clinica),
		max(a.ie_tipo_atendimento),
		max(a.ie_tipo_guia),
		max(a.ie_tipo_processo),
		max(a.ie_carater_atendimento),
		max(coalesce(a.ie_origem_solic, 'M')),
		max(a.dt_requisicao),
		max(a.nr_seq_tipo_acomodacao),
		max(a.ie_regime_atendimento),
		max(a.ie_saude_ocupacional)
	into STRICT	nr_seq_clinica_w,
		ie_tipo_atend_tiss_w,
		ie_tipo_guia_w,
		ie_tipo_processo_w,
		ie_carater_internacao_w,
		ie_origem_solic_w,
		dt_solicitacao_w,
		nr_seq_tipo_acomodacao_w,
		ie_regime_atendimento_w,
		ie_saude_ocupacional_w
	from	pls_requisicao a
	where	a.nr_sequencia = nr_seq_requisicao_p;
	
elsif (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then
	select	max(a.nr_seq_requisicao)
	into STRICT	nr_seq_requisicao_w
	from	pls_execucao_requisicao a
	where	a.nr_sequencia = nr_seq_execucao_p;
	
	if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
		select	max(a.nr_seq_clinica),
			max(a.ie_tipo_atendimento),
			max(a.ie_tipo_guia),
			max(a.ie_tipo_processo),
			max(a.ie_carater_atendimento),
			max(coalesce(a.ie_origem_solic, 'M')),
			max(a.dt_requisicao),
			max(a.ie_regime_atendimento),
			max(a.ie_saude_ocupacional)
		into STRICT	nr_seq_clinica_w,
			ie_tipo_atend_tiss_w,
			ie_tipo_guia_w,
			ie_tipo_processo_w,
			ie_carater_internacao_w,
			ie_origem_solic_w,
			dt_solicitacao_w,
			ie_regime_atendimento_w,
			ie_saude_ocupacional_w
		from	pls_requisicao a
		where	a.nr_sequencia = nr_seq_requisicao_w;
	end if;
end if;

for r_C01_w in C01 loop	
	ie_gerar_ocorrencia_w := 'S';
	
	if (r_C01_w.ie_exige_prestador	= 'S') then
		if (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') then
			ie_gerar_ocorrencia_w := 'N';
		end if;
	end if;
	
	if (r_C01_w.ie_val_dt_solic_futura = 'S') then
		if (dt_solicitacao_w <= clock_timestamp()) then
			ie_gerar_ocorrencia_w := 'N';
		end if;
	end if;
	
	/*Regra de dias de cobranca prevista */

	if (coalesce(r_C01_w.qt_dias_cobranca_prev,0) > 0) then
		ie_dias_cobranca_prec_w := pls_obter_se_guia_cobra_prev(nr_seq_guia_p, nr_seq_segurado_w, r_C01_w.qt_dias_cobranca_prev);
		
		if (ie_dias_cobranca_prec_w = 'N') then
			ie_gerar_ocorrencia_w := 'N';
		end if;
	end if;	
	
	/*Regra para verificar a quantidade maxima de diarias que a guia de autorizacao podera ter */

	if	((coalesce(r_C01_w.ie_consiste_qt_diaria,'N') = 'S') and (ie_tipo_guia_w in ('1', '8'))) then
		ie_diaria_permitida_w := pls_obter_se_diarias_permitida(nr_seq_guia_p,null,null,coalesce(qt_dia_solicitado_w,0));
		if (ie_diaria_permitida_w = 'S') then
			ie_gerar_ocorrencia_w := 'N';
		end if;
	end if;
	
	/*Se for uma regra de valor minimo e do tipo Autorizacao/Conta */

	if (coalesce(r_C01_w.vl_minimo, 0) > 0) then
		/*A rotina ira verificar se a soma dos valores calculados e maior que a regra de valor minimo e entcao ira retornar 'S'*/

		ie_valor_minimo_w := pls_obter_se_valor_calculado(null, nr_seq_guia_p, r_C01_w.vl_minimo, null);
		if (ie_valor_minimo_w = 'N') then
			ie_gerar_ocorrencia_w := 'N';
		end if;
	end if;
	
	/* Verificar se exige guia referencia e a mesma nao foi informada */
	if (coalesce(r_C01_w.ie_guia_referencia,'N') = 'S') then 
		if (coalesce(cd_guia_principal_w,'X') <> 'X') then
			ie_gerar_ocorrencia_w := 'N';
		end if;	
	end if;
	
	/*Verificar se e uma regra de exigencia de indicacao clinica*/

	if (coalesce(r_C01_w.ie_exige_indicacao_clinica, 'N') = 'S') then
		select	count(1)
		into STRICT	qt_indicacao_clinica_w
		from	pls_guia_plano
		where	nr_sequencia = nr_seq_guia_p
		and	coalesce(ds_indicacao_clinica::text, '') = '';
		
		/*Se haver uma indicacao clinica nao e gerado ocorrencia*/

		if (qt_indicacao_clinica_w = 0) then
			ie_gerar_ocorrencia_w := 'N';
		end if;
	end if;
	
	/*Se for uma regra de horas inicial/final , ira verificar se a data de solicitacao (guia), ou data de requsicao (requisicao), esta dentro do horario da regra */

	if (r_C01_w.hr_inicial IS NOT NULL AND r_C01_w.hr_inicial::text <> '') and (r_C01_w.hr_final IS NOT NULL AND r_C01_w.hr_final::text <> '') then
		select	to_char(dt_solicitacao_w, 'HH24:mi:ss')
		into STRICT	dt_solicitacao_ww
		;
		
		if (dt_solicitacao_ww not between to_char(r_C01_w.hr_inicial, 'HH24:mi:ss') and to_char(r_C01_w.hr_final, 'HH24:mi:ss')) then
			ie_gerar_ocorrencia_w := 'N';
		end if;
	end if;
	
	/*Identifica se a guia exige algum anexo*/

	if (coalesce(r_C01_w.ie_exige_anexo,'N') = 'S') then
		select	count(1)
		into STRICT	ie_existe_anexo_w
		from	pls_guia_plano_anexo
		where	nr_seq_guia = nr_seq_guia_p;
		
		if (ie_existe_anexo_w > 0 ) then
			ie_gerar_ocorrencia_w := 'N';
		end if;	
	end if;
	
	if (ie_gerar_ocorrencia_w = 'S') then
		exit;
	end if;
end loop;

if (ie_gerar_ocorrencia_w = 'S') then
	ie_regra_com_itens_w	:= pls_obter_se_oco_aut_fil_itens(nr_seq_ocor_filtro_p);
	
	if (ie_regra_com_itens_w = 'S') then
		ie_tipo_ocorrencia_p	:= 'I';
	else
		ie_tipo_ocorrencia_p	:= 'C';
	end if;
end if;

ie_gerar_ocorrencia_p	:= ie_gerar_ocorrencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_ocor_aut_guia ( nr_seq_ocor_filtro_p pls_ocor_aut_filtro.nr_sequencia%type, nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_execucao_p pls_execucao_requisicao.nr_sequencia%type, nr_seq_param1_p integer, nr_seq_param2_p integer, nr_seq_param3_p integer, nr_seq_param4_p integer, nr_seq_param5_p integer, nm_usuario_p usuario.nm_usuario%type, ie_gerar_ocorrencia_p INOUT pls_guia_plano.ie_situacao%type, ie_tipo_ocorrencia_p INOUT pls_guia_plano.ie_situacao%type) FROM PUBLIC;

