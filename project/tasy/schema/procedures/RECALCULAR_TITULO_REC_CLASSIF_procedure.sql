-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE recalcular_titulo_rec_classif (nr_titulo_p bigint, nm_usuario_p text) AS $body$
DECLARE

					
nr_seq_mensalidade_w	bigint;
cd_estabelecimento_w	bigint;
cd_conta_contabil_w	varchar(20);
nr_seq_contrato_w	bigint;
ie_tipo_item_w		varchar(10);
cd_conta_financ_item_w	bigint;
nr_seq_tipo_lanc_w	bigint;
cd_conta_financ_w	bigint;
nr_seq_classif_w	bigint;
vl_classificacao_w	double precision := 0;
vl_classif_total_w	double precision := 0;
vl_titulo_w		double precision := 0;
nr_interno_conta_w	bigint;
nr_seq_protocolo_w	bigint;

nr_seq_pls_lote_contest_w	titulo_receber.nr_seq_pls_lote_contest%type;
nr_seq_lote_w				pls_fatura.nr_seq_lote%type;
ie_vinc_tit_prot_w			varchar(1);
nr_titulo_w					titulo_receber.nr_titulo%type;
ie_situacao_w				titulo_receber.ie_situacao%type;
nr_seq_nf_saida_w		titulo_receber.nr_seq_nf_saida%type;
ie_conta_financ_tit_rec_w	parametro_contas_receber.ie_conta_financ_tit_rec%type;
cd_conta_financ_cre_w		parametro_fluxo_caixa.cd_conta_financ_cre%type;

/*Nao setei %type pois podem vir de duas tabelas tiferentes do c02. Fiz igual a rotina gerar_titulo_Receber_NFS*/

cd_centro_custo_w		bigint;
vl_total_nota_w			nota_fiscal.vl_total_nota%type;
ie_gerar_classif_sem_cf_w	varchar(1) := 'N';
nr_seq_pagador_fin_w		pls_mensalidade.nr_seq_pagador_fin%type;
vl_mensalidade_w			pls_mensalidade.vl_mensalidade%type;

qt_titulos_neg_w			bigint;
nr_seq_negociacao_w			bigint;

		

c01 CURSOR FOR
SELECT	a.cd_conta_deb,
	sum(a.vl_item),
	c.nr_seq_contrato,
	a.ie_tipo_item,
	a.nr_seq_tipo_lanc,
	a.cd_conta_financ
from	pls_mensalidade_seg_item	a,
	pls_mensalidade_segurado	b,
	pls_mensalidade			c
where	a.nr_seq_mensalidade_seg	= b.nr_sequencia
and	b.nr_seq_mensalidade		= c.nr_sequencia
and	c.nr_sequencia			= nr_seq_mensalidade_w
and	a.ie_tipo_item not in ('6','7')
group	by	a.cd_conta_deb,
		c.nr_seq_contrato,
		a.ie_tipo_item,
		a.nr_seq_tipo_lanc,
		a.cd_conta_financ

union all

SELECT	e.cd_conta_deb,
	sum(a.vl_item),
	c.nr_seq_contrato,
	a.ie_tipo_item,
	a.nr_seq_tipo_lanc,
	a.cd_conta_financ
from	pls_conta_pos_estabelecido	e,
	pls_conta			d,
	pls_mensalidade_seg_item	a,
	pls_mensalidade_segurado	b,
	pls_mensalidade			c
where	e.nr_seq_conta			= d.nr_sequencia
and	d.nr_sequencia			= a.nr_seq_conta
and	a.nr_seq_mensalidade_seg	= b.nr_sequencia
and	b.nr_seq_mensalidade		= c.nr_sequencia
and	c.nr_sequencia			= nr_seq_mensalidade_w
and	a.ie_tipo_item in ('6','7')
group	by	e.cd_conta_deb,
		c.nr_seq_contrato,
		a.ie_tipo_item,
		a.nr_seq_tipo_lanc,
		a.cd_conta_financ;
		
C02 CURSOR FOR
	SELECT	a.cd_conta_contabil,
		a.cd_centro_custo,
		coalesce(a.nr_seq_conta_financ, cd_conta_financ_cre_w),
		sum(a.vl_liquido),
		a.nr_contrato
	from 	nota_fiscal_item a
	where	a.nr_sequencia		= nr_seq_nf_saida_w
	and	( (coalesce(a.nr_seq_conta_financ, cd_conta_financ_cre_w) > 0) or (ie_gerar_classif_sem_cf_w = 'S') )
	and	not exists (SELECT	1
				from	nota_fiscal_item_rateio b
				where	b.nr_seq_nota	= a.nr_sequencia)
	group	by a.cd_conta_contabil,
		a.cd_centro_custo,
		a.nr_seq_conta_financ,
		a.nr_contrato
	
union all

	select	a.cd_conta_contabil,
		a.cd_centro_custo,
		coalesce(a.cd_conta_financ, coalesce(b.nr_seq_conta_financ, cd_conta_financ_cre_w)),
		sum(a.vl_rateio),
		b.nr_contrato
	from	nota_fiscal_item_rateio a,
		nota_fiscal_item b
	where	b.nr_sequencia		= nr_seq_nf_saida_w
	and	b.nr_sequencia		= a.nr_seq_nota
	and	( (coalesce(a.cd_conta_financ, coalesce(b.nr_seq_conta_financ, cd_conta_financ_cre_w)) > 0) or (ie_gerar_classif_sem_cf_w = 'S') )
	group	by
		a.cd_conta_contabil,
		a.cd_centro_custo,
		a.cd_conta_financ,
		b.nr_seq_conta_financ,
		b.nr_contrato;		
		
		
/*OS 1313250 - Criei esse cursor pra pegar todos os titulos da conta ou protocolo que serão recalculados, pq como vai recalcular de todos eles, precisa excluir de todos, senão ficará duplicado, triplicado, etc
Esse é o mesmo cursor usado dentro da gerar_classif_titulo_receber que vai gerar novamente a classif nos titulos*/
c03 CURSOR FOR
SELECT 	nr_titulo
from 	titulo_receber
where 	nr_interno_conta	= nr_interno_conta_w
and 	(nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '')
and 	coalesce(nr_seq_protocolo_w::text, '') = ''

union

SELECT 	nr_titulo
from 	titulo_receber
where 	nr_seq_protocolo	= nr_seq_protocolo_w
and 	coalesce(nr_interno_conta_w::text, '') = ''
and 	(nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '')

union

select	a.nr_titulo
from	titulo_receber a
where	a.nr_interno_conta	in (select	x.nr_interno_conta
	from	conta_paciente x
	where	x.nr_seq_protocolo	= nr_seq_protocolo_w)
and	coalesce(nr_interno_conta_w::text, '') = ''
and	(nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '')
and	ie_vinc_tit_prot_w	= 'N'

union

select	a.nr_titulo
from	titulo_receber a
where	coalesce(a.nr_seq_lote_prot::text, '') = ''
and	coalesce(nr_interno_conta_w::text, '') = ''
and	(null IS NOT NULL AND null::text <> '');	


BEGIN

select	max(a.cd_estabelecimento),
		max(a.nr_interno_conta),
		max(a.nr_seq_protocolo),
		max(a.nr_seq_mensalidade),
		max(a.vl_titulo),
		max(a.nr_seq_pls_lote_contest),
		max(nr_seq_nf_saida)
into STRICT	cd_estabelecimento_w,
		nr_interno_conta_w,
		nr_seq_protocolo_w,
		nr_seq_mensalidade_w,
		vl_titulo_w,
		nr_seq_pls_lote_contest_w,
		nr_seq_nf_saida_w
from	titulo_receber a
where	a.nr_titulo	= nr_titulo_p
and   	not exists ( SELECT	x.nr_titulo
					 from 	pls_fatura x 
					 where 	x.nr_titulo = a.nr_titulo or x.nr_titulo_ndc = a.nr_titulo);
					
select  max(x.nr_seq_lote),
		max(a.cd_estabelecimento)
into STRICT	nr_seq_lote_w,
		cd_estabelecimento_w
from	titulo_receber a, 
		pls_fatura  x
where (x.nr_titulo = a.nr_titulo or x.nr_titulo_ndc = a.nr_titulo)
and   	a.nr_titulo	= nr_titulo_p;

select	max(ie_situacao)
into STRICT	ie_situacao_w
from	titulo_receber a
where	a.nr_titulo = nr_titulo_p;

/*OS 1903161 - Recalcular títulos originados de negocição de contas a receber.*/

select 	sum(qt_titulo),
		max(nr_seq_negociacao)
into STRICT	qt_titulos_neg_w,
		nr_seq_negociacao_w
from (	SELECT  count(*) qt_titulo,
				max(nr_seq_negociacao) nr_seq_negociacao
		from	negociacao_cr_boleto
		where   nr_titulo = nr_titulo_p
		
union

		SELECT  count(*) qt_titulo,
				max(nr_seq_negociacao) nr_seq_negociacao
		from	negociacao_cr_deb_cc
		where	nr_titulo = nr_titulo_p
		
union

		select	count(*) qt_titulo,
				max(c.nr_seq_negociacao) nr_seq_negociacao
		from	deposito_ident_titulo a,
				deposito_identificado b,
				negociacao_cr_dep_ident c
		where	 a.nr_titulo = nr_titulo_p
		and	 	a.nr_seq_deposito = b.nr_sequencia
		and	 	b.nr_sequencia = c.nr_seq_deposito_ident
	 ) alias8; 	

/*So recalcular titulos que estejam com situação Aberto*/

if (coalesce(ie_situacao_w,'1') = '1') then	

if (coalesce(nr_interno_conta_w,0) > 0) or /*Títulos de conta ou protocolo*/
	(coalesce(nr_seq_protocolo_w,0) > 0) then
	
	
	ie_vinc_tit_prot_w		:= obter_valor_param_usuario(-80,57, obter_perfil_ativo, nm_usuario_p, 0);
	
	/*OS 1313250 - Excluir a classif de todos os titulos vinculados a conta ou protocolo.*/

	open C03;
	loop
	fetch C03 into	
		nr_titulo_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
			delete 	from titulo_receber_classif
			where	nr_titulo	= nr_titulo_w;
		end;
	end loop;
	close C03;
	
	delete 	from titulo_receber_classif
	where	nr_titulo	= nr_titulo_p;

	CALL gerar_classif_titulo_receber(nr_interno_conta_w, nr_seq_protocolo_w, nm_usuario_p,null);

elsif (coalesce(nr_seq_mensalidade_w,0) > 0) then /*Títulos de mensalidade OPS*/
	delete 	from titulo_receber_classif
	where	nr_titulo	= nr_titulo_p;

	/*OS 1900209 - Titulos de OPS que tem NF, a classif vem da NF, igual ocorre na gerar_titulo_Receber_NFS, que é a rotina usda la na geracao do titulo pela mensalidade e possui NF*/

	if (nr_seq_nf_saida_w IS NOT NULL AND nr_seq_nf_saida_w::text <> '') then
	
		select max(vl_total_nota)
		into STRICT	vl_total_nota_w
		from	nota_fiscal
		where	nr_sequencia = nr_seq_nf_saida_w;
		
		select	coalesce(max(ie_conta_financ_tit_rec),'S')
		into STRICT	ie_conta_financ_tit_rec_w
		from	parametro_contas_receber
		where	cd_estabelecimento = cd_estabelecimento_w;
				
		if (ie_conta_financ_tit_rec_w = 'S') then
			select	max(cd_conta_financ_cre)
			into STRICT	cd_conta_financ_cre_w
			from	parametro_fluxo_caixa
			where	cd_estabelecimento = cd_estabelecimento_w;
		end if;
		
		nr_seq_classif_w	:= 0;
		vl_classif_total_w	:= 0;
		
		ie_gerar_classif_sem_cf_w := obter_param_usuario(40, 473, Obter_perfil_Ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_classif_sem_cf_w);
		
		open c02;
		loop
		fetch c02 into
			cd_conta_contabil_w,
			cd_centro_custo_w,
			cd_conta_financ_w,
			vl_classificacao_w,
			nr_seq_contrato_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			
			nr_seq_classif_w	:= nr_seq_classif_w + 1;
			
			if (coalesce(vl_titulo_w,0) <> 0) then
				vl_classificacao_w	:= vl_classificacao_w * (vl_titulo_w / vl_total_nota_w);
			end if;
			--begin
			insert into titulo_receber_classif(nr_titulo,
				nr_sequencia,
				vl_classificacao,
				dt_atualizacao,
				nm_usuario,
				cd_conta_financ,
				cd_centro_custo,
				vl_desconto,
				vl_original,
				nr_seq_contrato,
				cd_conta_contabil)
			values (nr_titulo_p,
				nr_seq_classif_w,
				vl_classificacao_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_conta_financ_w,
				cd_centro_custo_w,
				0,
				vl_classificacao_w,
				nr_seq_contrato_w,
				cd_conta_contabil_w);
			
			vl_classif_total_w	:= vl_classificacao_w + vl_classif_total_w;
			
		end loop;
		close c02;
		
		if (vl_titulo_w <> vl_classif_total_w) then
			update	titulo_receber_classif
			set	vl_classificacao	= vl_classificacao + vl_titulo_w - vl_classif_total_w,
				vl_original		= vl_original + vl_titulo_w - vl_classif_total_w
				/* Francisco - 10/09/08 - alterei para deixar o valor original igual ao da classificacao*/

			where	nr_titulo		= nr_titulo_p
			and	nr_sequencia		= nr_seq_classif_w;
		end if;
	
	else
		/*Mesmos selects da pls_gerar_titulo_receber_mens - Aqui é quando o titulo de mensalidade mas n tem vinculo com NF*/

		select	max(a.nr_seq_pagador_fin)
		into STRICT	nr_seq_pagador_fin_w
		from	pls_mensalidade		a,
				pls_lote_mensalidade	b
		where	a.nr_seq_lote	= b.nr_sequencia
		and		a.nr_sequencia	= nr_seq_mensalidade_w;
		
		select	max(b.vl_mensalidade)
		into STRICT	vl_mensalidade_w
		from	pls_mensalidade				b,
				pls_contrato_pagador		c,
				pls_contrato_pagador_fin	d,
				condicao_pagamento			a
		where	b.nr_seq_pagador		= c.nr_sequencia
		and		d.nr_seq_pagador		= c.nr_sequencia
		and		a.cd_condicao_pagamento	= d.cd_condicao_pagamento
		and		b.nr_sequencia			= nr_seq_mensalidade_w
		and		d.nr_sequencia			= nr_seq_pagador_fin_w;
	
		CALL pls_titulo_receber_classi_mens(nr_seq_mensalidade_w, nr_titulo_p, vl_mensalidade_w, 'N', cd_estabelecimento_w, nm_usuario_p);	
	end if;
	
elsif ( coalesce(nr_seq_pls_lote_contest_w,0) > 0 ) then

	delete 	
	from 	titulo_receber_classif
	where	nr_titulo	= nr_titulo_p;
	
	CALL pls_gerar_tit_rec_class_disc(nr_titulo_p,
								 nm_usuario_p,
								 'N'); --N = COmmit. O commit vai ocorrer no fim dessa proc.
	
elsif ( coalesce(nr_seq_lote_w,0) > 0 ) then /*1162162 - Essa tratativa aqui é a mesma que existe na procedure pls_gerar_titulos_fatura. Se alterar aqui, deve-se verificar com o OPS para alterar na pls_gerar_titulos_fatura.*/
	delete 	
	from 	titulo_receber_classif
	where	nr_titulo	= nr_titulo_p;
	
	CALL pls_gerar_tit_rec_class_fat(nr_titulo_p,
								cd_estabelecimento_w, 
								nm_usuario_p, 
								'N'); --N = COmmit. O commit vai ocorrer no fim dessa proc.
								
/*OS 1903161 - Recalcular títulos originados de negociação de contas a receber.*/
								
elsif ( coalesce(qt_titulos_neg_w,0) > 0) and (nr_seq_negociacao_w IS NOT NULL AND nr_seq_negociacao_w::text <> '') then

	delete 	
	from 	titulo_receber_classif
	where	nr_titulo	= nr_titulo_p;

	CALL ratear_classif_titulo_neg_cr( nr_seq_negociacao_w,
								  nr_titulo_p,
								  nm_usuario_p );
		
end if;

commit;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE recalcular_titulo_rec_classif (nr_titulo_p bigint, nm_usuario_p text) FROM PUBLIC;

