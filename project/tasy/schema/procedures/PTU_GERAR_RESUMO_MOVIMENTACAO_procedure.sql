-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_resumo_movimentacao ( nr_seq_lote_p bigint, nm_arquivo_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_movimentacao_w	bigint;
cd_cgc_outorgante_w	varchar(14);
cd_unimed_origem_w	varchar(10);
ie_tipo_movimento_w	varchar(2);
ds_arquivo_w		varchar(255);
ds_classificacao_w	varchar(100);
nr_seq_classificacao_w	bigint;
dt_mov_inicio_w		timestamp;
dt_mov_fim_w		timestamp;
nr_seq_segurado_w	bigint;
qt_inclusoes_w		bigint := 0;
qt_alteracoes_w		bigint := 0;
qt_exclusoes_w		bigint := 0;
dt_inclusao_operadora_w	timestamp;
dt_rescisao_w		timestamp;
cd_operadora_w		varchar(10);
nr_seq_prestador_w	bigint;
qt_total_w		bigint := 0;
nr_seq_tabela_w		bigint;
vl_vidas_w		double precision;
vl_pagar_w		double precision;
nr_seq_plano_w		bigint;
nr_seq_empresa_w	bigint;
qt_calculo_w		bigint;
qt_anterior_w		bigint;
qt_ant_aux_w		bigint;
dt_inclusao_benef_w	timestamp;
nr_seq_mov_resumo_w	bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	ptu_movimentacao_produto
	where	nr_seq_lote	= nr_seq_lote_p;
	
C02 CURSOR FOR
	SELECT	c.nr_sequencia
	from	ptu_mov_produto_benef	f,
		pls_sca_vinculo		b,
		pls_segurado		a,
		pls_plano		c,
		pls_plano_fornecedor 	d,
		ptu_mov_produto_empresa e
	where	f.nr_seq_segurado	= a.nr_sequencia
	and	b.nr_seq_segurado	= a.nr_sequencia
	and	b.nr_seq_plano		= c.nr_sequencia
	and	d.nr_seq_plano		= c.nr_sequencia
	and	d.nr_seq_prestador	= nr_seq_prestador_w
	and	c.nr_seq_classificacao	= nr_seq_classificacao_w
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	c.cd_estabelecimento	= cd_estabelecimento_p
	and	e.nr_sequencia 		= f.nr_seq_empresa
	and	e.nr_seq_mov_produto 	= nr_seq_movimentacao_w
	group by
		c.nr_sequencia;
	
C03 CURSOR FOR
	SELECT	b.nr_seq_segurado
	from	ptu_mov_produto_benef	b,
		ptu_mov_produto_empresa	a
	where	b.nr_seq_empresa	= a.nr_sequencia
	and	a.nr_seq_mov_produto	= nr_seq_movimentacao_w
	and	exists (	SELECT	1
			from	pls_sca_vinculo	x
			where	x.nr_seq_segurado	= b.nr_seq_segurado
			and	x.nr_seq_plano		= nr_seq_plano_w);
			
C04 CURSOR FOR
	SELECT	b.nr_sequencia
	from	ptu_movimentacao_produto a,
		ptu_mov_produto_empresa b
	where	b.nr_seq_mov_produto = a.nr_sequencia
	and	a.nr_sequencia = nr_seq_movimentacao_w	
	and 	a.nr_seq_lote = nr_seq_lote_p;
	

BEGIN

delete	FROM w_ptu_movimentacao_resumo
where	nr_seq_lote	= nr_seq_lote_p;

select	cd_cgc_outorgante
into STRICT	cd_cgc_outorgante_w
from	pls_outorgante
where	cd_estabelecimento	= cd_estabelecimento_p;

select	max(cd_cooperativa)
into STRICT	cd_unimed_origem_w
from	pls_congenere
where	cd_cgc	= cd_cgc_outorgante_w;

select	nr_seq_classificacao,
	ie_tipo_movimento
into STRICT	nr_seq_classificacao_w,
	ie_tipo_movimento_w
from	ptu_mov_produto_lote
where	nr_sequencia	= nr_seq_lote_p;

select	ds_classificacao
into STRICT	ds_classificacao_w
from	pls_sca_classificacao
where	nr_sequencia	= nr_seq_classificacao_w;

ds_arquivo_w	:= upper(wheb_mensagem_pck.get_texto(1109340))||' '||ds_classificacao_w;

open C01;
loop
fetch C01 into	
	nr_seq_movimentacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	trunc(dt_mov_inicio,'dd'),
		fim_dia(dt_mov_fim),
		cd_unimed_destino
	into STRICT	dt_mov_inicio_w,
		dt_mov_fim_w,
		cd_operadora_w
	from	ptu_movimentacao_produto
	where	nr_sequencia	= nr_seq_movimentacao_w;
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_empresa_w
	from	ptu_mov_produto_empresa
	where	nr_seq_mov_produto	= nr_seq_movimentacao_w;
	
	select	max(a.nr_sequencia)
	into STRICT	nr_seq_prestador_w
	from	pls_plano_fornecedor	c,
		pessoa_juridica		b,
		pls_prestador		a
	where	a.cd_cgc		= b.cd_cgc
	and	c.nr_seq_prestador	= a.nr_sequencia
	and	b.cd_operadora_empresa	= cd_operadora_w
	and	a.cd_estabelecimento	= cd_estabelecimento_p;
	
	select	nextval('w_ptu_movimentacao_resumo_seq')
	into STRICT	nr_seq_mov_resumo_w
	;
	
	insert into w_ptu_movimentacao_resumo(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
			nr_seq_lote,nr_seq_mov_produto,cd_unimed_origem,ds_arquivo,ie_tipo_exportacao,
			dt_vigencia_arquivo,nm_arquivo,ie_tipo_reg,nr_seq_classificacao,nr_seq_mov_empresa,
			dt_geracao_arquivo)
	values (	nr_seq_mov_resumo_w,clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
			nr_seq_lote_p,nr_seq_movimentacao_w,cd_unimed_origem_w,ds_arquivo_w,ie_tipo_movimento_w,
			dt_mov_inicio_w,nm_arquivo_p,'C',nr_seq_classificacao_w,nr_seq_empresa_w,
			clock_timestamp());
	open C02;
	loop
	fetch C02 into	
		nr_seq_plano_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		
		select	max(nr_seq_tabela)
		into STRICT	nr_seq_tabela_w
		from	pls_plano_fornecedor
		where	nr_seq_prestador	= nr_seq_prestador_w
		and	nr_seq_plano		= nr_seq_plano_w
		and	dt_mov_inicio_w between coalesce(dt_inicio_vigencia,dt_mov_inicio_w) and fim_dia(coalesce(dt_fim_vigencia,dt_mov_inicio_w));
		
		qt_inclusoes_w	:= 0;
		qt_exclusoes_w	:= 0;
		qt_alteracoes_w	:= 0;
		qt_anterior_w 	:= 0;
		vl_vidas_w	:= 0;
		open C03;
		loop
		fetch C03 into	
			nr_seq_segurado_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			
			select	max(a.dt_inicio_vigencia),
				max(a.dt_fim_vigencia),
				max(a.dt_inclusao_benef)
			into STRICT	dt_inclusao_operadora_w,
				dt_rescisao_w,
				dt_inclusao_benef_w
			from	pls_sca_vinculo		a,
				pls_segurado		b,
				pls_plano		c,
				pls_plano_fornecedor 	d
			where	a.nr_seq_segurado	= b.nr_sequencia
			and	a.nr_seq_plano		= c.nr_sequencia
			and	d.nr_seq_plano		= c.nr_sequencia
			and	d.nr_seq_prestador	= nr_seq_prestador_w
			and	c.nr_sequencia		= nr_seq_plano_w
			and	c.nr_seq_classificacao	= nr_seq_classificacao_w
			and	b.nr_sequencia		= nr_seq_segurado_w
			and	b.cd_estabelecimento	= cd_estabelecimento_p
			and	c.cd_estabelecimento	= cd_estabelecimento_p;
			
			if (coalesce(dt_inclusao_operadora_w::text, '') = '') then
				select	dt_inclusao_operadora
				into STRICT	dt_inclusao_operadora_w
				from	pls_segurado
				where	nr_sequencia	= nr_seq_segurado_w;
			end if;	
			
			if (coalesce(dt_rescisao_w::text, '') = '') then
				select	dt_rescisao
				into STRICT	dt_rescisao_w
				from	pls_segurado
				where	nr_sequencia	= nr_seq_segurado_w;
			end if;
			
			/*Comentei as linhas acima e realizei algumas alteracoes devido ao campo DT_INCLUSAO_BENEF */

			if (coalesce(dt_inclusao_operadora_w,dt_inclusao_benef_w) between dt_mov_inicio_w and dt_mov_fim_w) and ((coalesce(dt_rescisao_w::text, '') = '') or (dt_rescisao_w > dt_mov_inicio_w)) then
				qt_inclusoes_w	:= qt_inclusoes_w + 1; /* Somente e inclusao se a data de inclusao do SCA no benefciiario estiver entre a data inicial e final do lote */
			elsif	(dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '' AND dt_rescisao_w between dt_mov_inicio_w and dt_mov_fim_w) then
				qt_exclusoes_w	:= qt_exclusoes_w + 1;  /* Exclusao quando o beneficiario foi rescindido com data entre a data inicial e final do lote  */
			
			else
				qt_alteracoes_w	:= qt_alteracoes_w + 1; /* Alteracao e considerada quando um SCA e reativado para o beneficiario, ou quando o mesmo e migrado */
			end if;
			end;
		end loop;
		close C03;
		qt_calculo_w	:= 0;
		
		/*Lote de movimentacao periodica deve ver apenas na tabela do sca, senao apenas buscas as informacoes qu estao no movimento do lote*/

		if (ie_tipo_movimento_w <> 'P') then
		
			if (ie_tipo_movimento_w = 'A') then
			
				open C04;
				loop
				fetch C04 into	
				nr_seq_empresa_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
				
					select	count(1)
					into STRICT	qt_ant_aux_w
					from	pls_sca_vinculo		b,						
						pls_segurado		c
					where	c.nr_sequencia	= b.nr_seq_segurado					
					and	trunc(b.dt_inicio_vigencia,'Month') < trunc(dt_mov_inicio_w,'Month')
					and	((coalesce(b.dt_fim_vigencia::text, '') = '') or (trunc(b.dt_fim_vigencia,'Month') >= dt_mov_inicio_w))
					and	b.nr_seq_plano = nr_seq_plano_w	
					and	trunc(c.dt_contratacao,'Month')	< trunc(dt_mov_inicio_w,'Month')
					and	exists (SELECT	1
							from	ptu_mov_produto_benef	a
							where	a.nr_seq_segurado = c.nr_sequencia
							and	a.nr_seq_empresa = nr_seq_empresa_w);		
					
					qt_anterior_w := qt_anterior_w + qt_ant_aux_w;
				end loop;
				close C04;		
		
			else
			
				open C04;
				loop
				fetch C04 into	
				nr_seq_empresa_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
				
					select	count(1)
					into STRICT	qt_ant_aux_w
					from	pls_sca_vinculo		b,
						ptu_mov_produto_benef	a
					where	a.nr_seq_segurado	= b.nr_seq_segurado
					and	a.nr_seq_empresa	= nr_seq_empresa_w
					and	trunc(b.dt_inicio_vigencia,'Month') < trunc(dt_mov_inicio_w,'Month')
					and	((coalesce(b.dt_fim_vigencia::text, '') = '') or (trunc(b.dt_fim_vigencia,'Month') >= dt_mov_inicio_w))
					and	b.nr_seq_plano = nr_seq_plano_w;				
					
					qt_anterior_w := qt_anterior_w + qt_ant_aux_w;
				end loop;
				close C04;
			end if;	
		else
			select	count(*)
			into STRICT	qt_anterior_w
			from	pls_sca_vinculo		
			where	trunc(dt_inicio_vigencia,'Month')	<= trunc(dt_mov_inicio_w,'Month')
			and	((coalesce(dt_fim_vigencia::text, '') = '') or (trunc(dt_fim_vigencia,'Month') >= dt_mov_inicio_w))
			and	nr_seq_plano	   	= nr_seq_plano_w;
		end if;	
				
		select	coalesce(qt_inclusoes_w,0)	+ coalesce(qt_anterior_w,0)
		into STRICT	qt_calculo_w
		;
		
		begin
		select	max(vl_vida)
		into STRICT	vl_vidas_w
		from	pls_fornecedor_preco		b,
			pls_fornecedor_fx_etaria	a
		where	b.nr_seq_faixa_etaria	= a.nr_sequencia
		and	a.nr_seq_tabela		= nr_seq_tabela_w
		and	qt_calculo_w between coalesce(qt_vidas_inicial,qt_calculo_w) and coalesce(qt_vidas_final,qt_calculo_w);
		exception
		when others then
			vl_vidas_w	:= 0;
		end;
		
		vl_pagar_w	:= coalesce(vl_vidas_w,0) * qt_calculo_w;				
		
		insert into w_ptu_movimentacao_resumo(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				nr_seq_lote,nr_seq_mov_produto,cd_unimed_origem,vl_preco_fornecedor,qt_inclusao,
				qt_alteracao,qt_exclusao,qt_anterior,vl_pagar,ie_tipo_reg,nr_seq_plano,
				nr_seq_mov_empresa,dt_vigencia_arquivo,nr_seq_classificacao)
		values (	nextval('w_ptu_movimentacao_resumo_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				nr_seq_lote_p,nr_seq_movimentacao_w,cd_unimed_origem_w,coalesce(vl_vidas_w,0),qt_inclusoes_w,
				qt_alteracoes_w,qt_exclusoes_w,qt_anterior_w,vl_pagar_w,'G',nr_seq_plano_w,
				nr_seq_empresa_w,dt_mov_inicio_w,nr_seq_classificacao_w);
		end;
	end loop;
	close C02;
	
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_resumo_movimentacao ( nr_seq_lote_p bigint, nm_arquivo_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

