-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_negar_fat_item_pos ( nr_seq_item_resumo_p bigint, nr_seq_item_ref_p bigint, nr_seq_analise_p bigint, nr_seq_grupo_atual_p bigint, nr_seq_motiv_glosa_p bigint, ds_observacao_p text, ie_opcao_p text, ie_comitar_p text, cd_estabelecimento_p bigint, nm_usuario_p text ) AS $body$
DECLARE

 
/*PROCEDURE QUE IRA OBTER TODAS AS GLOSAS E OCORRÊNCIAS PENDETES AO USUÁRIO, NOS ITEN SELECIONADOS, E LIBERA-LAS*/
 
 
nr_seq_conta_mat_w		bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_glosa_w			bigint;
nr_seq_ocorrencia_benef_w	bigint;
nr_seq_partic_proc_w		bigint;
nr_seq_item_w			bigint;
nr_seq_ocorrencia_w		bigint;
nr_seq_conta_ww			bigint;
nr_seq_conta_mat_ww		bigint;
nr_seq_conta_proc_ww		bigint;
nr_seq_partic_proc_ww		bigint;
nr_seq_motivo_w			bigint;
vl_glosa_w			double precision;
qt_glosa_w			bigint;

dt_atualizacao_nrec_w		timestamp;

ds_parecer_w			varchar(4000);
nm_usuario_nrec_w		varchar(15);
ie_situacao_w			varchar(1);
ie_status_w			varchar(1);
ie_origem_conta_w		varchar(1);
ie_tipo_motivo_w		varchar(1);

nr_seq_item_resumo_w		bigint;

-- IE_OPCAO_P 
-- NP -	Não participante 
-- SP -	Sim participante 
 
/*Obter as glosas do item*/
 
C01 CURSOR FOR 
	SELECT a.nr_sequencia, 
		coalesce(a.ie_status_faturamento, a.ie_status), 
		a.ie_situacao, 
		a.nr_seq_glosa, 
		a.nr_seq_ocorrencia, 
		a.nr_seq_conta, 
		a.nr_seq_conta_mat, 
		a.nr_seq_conta_proc, 
		a.nr_seq_proc_partic, 
		a.vl_glosa, 
		a.qt_glosa 
	from  pls_analise_conta_item a, 
		pls_analise_conta   b 
	where  b.nr_sequencia  = a.nr_seq_analise 
	and   a.nr_seq_conta  = nr_seq_conta_w 
	and   (((coalesce(a.nr_seq_conta_proc,0) = 0) and (coalesce(a.nr_seq_conta_mat,0) = 0) and (coalesce(a.nr_seq_proc_partic,0) = 0)) 
	or    ((a.nr_seq_conta_proc = nr_seq_conta_proc_w) or (a.nr_seq_conta_mat = nr_seq_conta_mat_w) or (a.nr_seq_proc_partic = nr_seq_partic_proc_w))) 
	and   ((coalesce(b.ie_origem_analise,1) = 2) or ((coalesce(b.ie_origem_analise,1) = 1) and (coalesce(ie_tipo_glosa,'P') in ('A','F'))));

C02 CURSOR FOR 
	SELECT	nr_sequencia 
	from	w_pls_resumo_conta 
	where	nr_seq_analise = nr_seq_analise_p 
	and	nr_seq_item_ref	= nr_seq_item_ref_p 
	order by 1;
	

BEGIN 
 
if (coalesce(nr_seq_item_ref_p,0) > 0) then 
 
	open C02;
	loop 
	fetch C02 into	 
		nr_seq_item_resumo_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		 
		CALL pls_negar_fat_item_pos(	nr_seq_item_resumo_w, null, nr_seq_analise_p, 
					nr_seq_grupo_atual_p, nr_seq_motiv_glosa_p, ds_observacao_p, 
					null, 'N', cd_estabelecimento_p, 
					nm_usuario_p );
		 
		end;
	end loop;
	close C02;
else 
	select	a.nr_seq_conta_mat, 
		a.nr_seq_conta_proc, 
		a.nr_seq_conta, 
		a.nr_seq_partic_proc, 
		b.ie_origem_conta 
	into STRICT	nr_seq_conta_mat_w, 
		nr_seq_conta_proc_w, 
		nr_seq_conta_w, 
		nr_seq_partic_proc_w, 
		ie_origem_conta_w 
	from	w_pls_resumo_conta a, 
		pls_analise_conta b 
	where	a.nr_seq_analise = b.nr_sequencia 
	and	a.nr_sequencia	 = nr_seq_item_resumo_p;
 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_item_w, 
		ie_status_w, 
		ie_situacao_w, 
		nr_seq_glosa_w, 
		nr_seq_ocorrencia_benef_w, 
		nr_seq_conta_ww, 
		nr_seq_conta_mat_ww, 
		nr_seq_conta_proc_ww, 
		nr_seq_partic_proc_ww, 
		vl_glosa_w, 
		qt_glosa_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		/*Apagar o log anterior*/
 
		delete	FROM pls_analise_conta_item_log 
		where	nr_seq_analise_item = 	nr_seq_item_w;
		 
		if (ie_status_w in ('P', 'L', 'N')) then	 
		 
			begin 
			select	dt_atualizacao_nrec, 
				ds_parecer, 
				nr_seq_motivo, 
				nm_usuario_nrec, 
				ie_tipo_motivo 
			into STRICT	dt_atualizacao_nrec_w, 
				ds_parecer_w, 
				nr_seq_motivo_w, 
				nm_usuario_nrec_w, 
				ie_tipo_motivo_w 
			from	pls_analise_parecer_item 
			where	nr_seq_item = nr_seq_item_w;
			exception 
			when others then 
				dt_atualizacao_nrec_w	:= null;
				ds_parecer_w		:= null;
				nr_seq_motivo_w		:= null;
			end;	
			 
			/*Cria o log do item (será utilizado no desfazer)*/
 
			insert into pls_analise_conta_item_log(	nr_sequencia, nr_seq_analise_item, dt_atualizacao, 
					nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
					dt_log, ie_status, ie_situacao, 
					nr_seq_motivo_liberacao, ds_obsevacao_anterior, nm_usuario_liberacao, 
					dt_liberacao_anterior, vl_glosa, qt_glosa				) 
			values (	nextval('pls_analise_conta_item_log_seq'), nr_seq_item_w, clock_timestamp(), 
					nm_usuario_p, clock_timestamp(), nm_usuario_p,			 
					clock_timestamp(), ie_status_w, ie_situacao_w,			 
					nr_seq_motivo_w, ds_parecer_w, nm_usuario_nrec_w, 
					dt_atualizacao_nrec_w, vl_glosa_w, qt_glosa_w		);
			 
			 
			if (coalesce(nr_seq_ocorrencia_benef_w,0) > 0) then 
			 
				begin 
				select	nr_seq_ocorrencia 
				into STRICT	nr_seq_ocorrencia_w 
				from	pls_ocorrencia_benef 
				where	nr_sequencia = nr_seq_ocorrencia_benef_w;
				exception 
				when others then 
					nr_seq_ocorrencia_w := null;
				end;		
				 
				if (pls_obter_se_auditor_lib_oc(nr_seq_ocorrencia_w, nm_usuario_p, nr_seq_grupo_atual_p, ie_origem_conta_w) = 'N') then 
					/*Se o auditor não pode agir na ocorrência,*/
 
					goto final;			
				end if;
			 
			end if;	
 
			/*Atualizado a glosa / ocorrencia*/
 
			update	pls_analise_conta_item 
			set	ie_status_faturamento 	= 'N', 
				nm_usuario		= nm_usuario_p, 
				dt_atualizacao 		= clock_timestamp(), 
				ie_consistencia 	= 'N', 
				ie_situacao 		= 'I' --Inativada a glosa/ocorrencia 
			where	nr_sequencia		= nr_seq_item_w;		
			 
			if (coalesce(nr_seq_motiv_glosa_p,0) <> 0) then 
				/*Apagar o parecer de modo se este existir*/
 
				delete	FROM pls_analise_parecer_item 
				where	nr_seq_item	= nr_seq_item_w;	
			 
				/*Criado o parecer*/
 
				insert into 	pls_analise_parecer_item(	nr_sequencia, nr_seq_item, nr_seq_motivo, 
						dt_atualizacao, nm_usuario, dt_atualizacao_nrec, 
						nm_usuario_nrec, ds_parecer, ie_tipo_motivo	) 
				values (	nextval('pls_analise_parecer_item_seq'), nr_seq_item_w, nr_seq_motiv_glosa_p, 
						clock_timestamp(), nm_usuario_p, clock_timestamp(), 
						nm_usuario_p, ds_observacao_p, 'A'	);
			end if;
							 
			CALL pls_analise_status_fat(	nr_seq_conta_ww, nr_seq_conta_mat_ww, nr_seq_conta_proc_ww,				 
						nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p	);		
			 
			<<final>> 
			null;
		end if;
		 
		end;
	end loop;
	close C01;
	 
end if;
 
if (coalesce(ie_comitar_p,'S') = 'S') then 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_negar_fat_item_pos ( nr_seq_item_resumo_p bigint, nr_seq_item_ref_p bigint, nr_seq_analise_p bigint, nr_seq_grupo_atual_p bigint, nr_seq_motiv_glosa_p bigint, ds_observacao_p text, ie_opcao_p text, ie_comitar_p text, cd_estabelecimento_p bigint, nm_usuario_p text ) FROM PUBLIC;

