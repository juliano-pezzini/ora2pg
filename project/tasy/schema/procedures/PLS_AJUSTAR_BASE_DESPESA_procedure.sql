-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_ajustar_base_despesa ( nm_usuario_p text) AS $body$
DECLARE


dt_versao_atual_cliente_w 	timestamp;
qt_registro_w			bigint;
seq_motivo_glosa_w		bigint;
cd_estabelecimento_w		smallint;
qt_varchar_w			bigint;
qt_number_w			bigint;
qt_campo_w			bigint;
ds_sql_w			varchar(2000);
qt_registro_char_w		bigint;
qt_registro_number_w		bigint;
ds_comando_w			varchar(2000);
cd_cnpj_outorgante_w		pls_outorgante.cd_cgc_outorgante%type;


BEGIN
/* Rotina do grupo OPS - Despesas - LÍDER: Paulo Rosa / Décio Lehmkuhl */

begin
	dt_versao_atual_cliente_w	:= coalesce(to_date(to_char(obter_data_geracao_versao-1,'dd/mm/yyyy') ||' 23:59:59','dd/mm/yyyy hh24:mi:ss'),clock_timestamp() - interval '90 days');
exception
when others then
	null;
end;

begin
	select	max(cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from	pls_outorgante;
exception
when others then
	null;
end;

/* PARA RECRIAR UK DEVE SER FEITO O AJUSTE NA TASY_PREPARAR_BASE */

/* Felipe - 07/02/2011 - Ajustar o IE_ACAO_PLS da TISS_MOTIVO_GLOSA  */

begin
	CALL exec_sql_dinamico('Felipe','begin pls_atualiza_tiss_motivo_glosa; end;');
exception
when others then
	null;
end;

begin
	if (dt_versao_atual_cliente_w < to_date('06/08/2012','dd/mm/yyyy')) then
		select	count(*)
		into STRICT	qt_registro_w
		from	tabela_atributo
		where	nm_atributo = 'CD_PROCEDIMENTO'
		and	nm_tabela = 'PLS_PROC_VIA_ACESSO'
		and	ie_obrigatorio = 'S';

		if (qt_registro_w > 0) then
			update	tabela_atributo
			set	ie_obrigatorio 	= 'N'
			where	nm_atributo 	= 'CD_PROCEDIMENTO'
			and	nm_tabela 	= 'PLS_PROC_VIA_ACESSO'
			and	ie_obrigatorio	= 'S';

			update	tabela_atributo
			set	ie_obrigatorio 	= 'N'
			where	nm_atributo 	= 'IE_ORIGEM_PROCED'
			and	nm_tabela 	= 'PLS_PROC_VIA_ACESSO'
			and	ie_obrigatorio	= 'S';
		end if;
	end if;
exception
when others then
	null;
end;

begin
	/* Diether OS 480302 - Alterar nota fiscal para varchar2 */

	if (dt_versao_atual_cliente_w < to_date('08/08/2012','dd/mm/yyyy')) then
		CALL exec_sql_dinamico('Tasy',' update pls_conta_mat set nr_nota_fiscal_var = to_char(nr_nota_fiscal) where nr_nota_fiscal is not null');
	end if;
exception
when others then
	null;
end;

begin
	/* Paulo - Alterar nota fiscal para varchar2 */

	if (dt_versao_atual_cliente_w < to_date('24/08/2012','dd/mm/yyyy')) then
		CALL exec_sql_dinamico('Tasy',' update pls_conta_atend_item set nr_nota_fiscal_var = to_char(nr_nota_fiscal) where nr_nota_fiscal is not null');
	end if;
exception
when others then
	null;
end;

begin
	/* Paulo - Alterar nota fiscal para varchar2 */

	if (dt_versao_atual_cliente_w < to_date('03/09/2012','dd/mm/yyyy')) then
		/* obter tipo atributo */

		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_LOTE_PROTOCOLO'
		and	upper(coalesce(data_type,'NUMBER')) <> 'VARCHAR2'
		and	column_name	= 'NR_NOTA_FISCAL';

		if (qt_registro_w > 0) then
			/* Alterar o campo nr_nota_fiscal da tabela pls_lote_protocolo */

			CALL exec_sql_dinamico('Tasy',' update pls_lote_protocolo set nr_nota_fiscal_var = to_char(nr_nota_fiscal) where nr_nota_fiscal is not null');
		end if;
	end if;
exception
when others then
	null;
end;

begin
	/* Francisco - 20/11/2012 - Os códigos de glosa foram alterados pelo Luciano - Pois estavam errados - Códigos de 1902 a 1915 */

	if (dt_versao_atual_cliente_w < to_date('20/11/2012','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	tiss_motivo_glosa a
		where	a.cd_motivo_glosa = 1909
		and	a.ie_acao_pls = 'D';

		/* A glosa 1908 - Acomodação inválida, era Definitiva e foi passada para 1909 */

		if (qt_registro_w = 0) then
			update	tiss_motivo_glosa
			set	cd_motivo_tiss	= cd_motivo_tiss + 1
			where	cd_motivo_tiss between 1901 and 1915
			and	nr_sequencia <> 640;
		end if;
	end if;
exception
when others then
	null;
end;

begin
	if (dt_versao_atual_cliente_w < to_date('26/11/2012','dd/mm/yyyy')) then
		CALL baca_ajusta_regra_glosa_opm();
	end if;
exception
when others then
	null;
end;

begin
	if (dt_versao_atual_cliente_w < to_date('12/12/2012','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	tiss_motivo_glosa
		where	cd_motivo_tiss = '9908';

		if (qt_registro_w > 0) then
			update	tiss_motivo_glosa
			set	ds_motivo_tiss	= 'Procedimento/material não compatível com o tipo de atendimento da conta'
			where	cd_motivo_tiss	= '9908';
		end if;
	end if;
exception
when others then
	null;
end;

begin
	if (dt_versao_atual_cliente_w < to_date('04/12/2012','dd/mm/yyyy')) then
		begin
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_membro_grupo_aud
		where	coalesce(ie_libera_ocor_correcao::text, '') = '';
		exception
		when no_data_found then
			qt_registro_w	:= 0;
		end;

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy',' update pls_membro_grupo_aud set ie_libera_ocor_correcao = ''N'' where ie_libera_ocor_correcao is null');
		end if;

		begin
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_membro_grupo_aud
		where	coalesce(ie_cancelar_item::text, '') = '';
		exception
		when no_data_found then
			qt_registro_w	:= 0;
		end;

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy',' update pls_membro_grupo_aud set ie_cancelar_item = ''S'' where ie_cancelar_item is null');
		end if;

		begin
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_membro_grupo_aud
		where	coalesce(ie_manter::text, '') = '';
		exception
		when no_data_found then
			qt_registro_w	:= 0;
		end;

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy',' update pls_membro_grupo_aud set ie_manter = ''N'' where ie_manter is null');
		end if;

		begin
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_membro_grupo_aud
		where	coalesce(ie_excluir_obs::text, '') = '';
		exception
		when no_data_found then
			qt_registro_w	:= 0;
		end;

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy',' update pls_membro_grupo_aud set ie_excluir_obs = ''S'' where ie_excluir_obs is null');
		end if;

		begin
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_membro_grupo_aud
		where	coalesce(ie_permite_mod_partic::text, '') = '';
		exception
		when no_data_found then
			qt_registro_w	:= 0;
		end;

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy',' update pls_membro_grupo_aud set ie_permite_mod_partic = ''N'' where ie_permite_mod_partic is null');
		end if;

		begin
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_membro_grupo_aud
		where	coalesce(ie_ajustar_valor_lib::text, '') = '';
		exception
		when no_data_found then
			qt_registro_w	:= 0;
		end;

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy',' update pls_membro_grupo_aud set ie_ajustar_valor_lib = ''N'' where ie_ajustar_valor_lib is null');
		end if;

		begin
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_membro_grupo_aud
		where	coalesce(ie_liberar_oc_conta::text, '') = '';
		exception
		when no_data_found then
			qt_registro_w	:= 0;
		end;

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy',' update pls_membro_grupo_aud set ie_liberar_oc_conta = ''N'' where ie_liberar_oc_conta is null');
		end if;

		begin
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_membro_grupo_aud
		where	coalesce(ie_liberar::text, '') = '';
		exception
		when no_data_found then
			qt_registro_w	:= 0;
		end;

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy',' update pls_membro_grupo_aud set ie_liberar = ''S'' where ie_liberar is null');
		end if;
	end if;
exception
when others then
	null;
end;

begin
	if (dt_versao_atual_cliente_w < to_date('05/12/2012','dd/mm/yyyy')) then
		begin
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_regra_lanc_aut_item
		where	coalesce(ie_pagamento::text, '') = '';
		exception
		when no_data_found then
			qt_registro_w	:= 0;
		end;

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy',' update pls_regra_lanc_aut_item set ie_pagamento = ''S'' where ie_pagamento is null');
		end if;

		begin
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_regra_lanc_aut_item
		where	coalesce(ie_faturamento::text, '') = '';
		exception
		when no_data_found then
			qt_registro_w	:= 0;
		end;

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy',' update pls_regra_lanc_aut_item set ie_faturamento = ''N'' where ie_faturamento is null');
		end if;

		begin
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_regra_lanc_aut_item
		where	coalesce(ie_quantidade_prestador::text, '') = '';
		exception
		when no_data_found then
			qt_registro_w	:= 0;
		end;

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy',' update pls_regra_lanc_aut_item set ie_quantidade_prestador = ''N'' where ie_quantidade_prestador is null');
		end if;

		begin
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_regra_lanc_aut_item
		where	coalesce(ie_forma_lancamento::text, '') = '';
		exception
		when no_data_found then
			qt_registro_w	:= 0;
		end;

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy',' update pls_regra_lanc_aut_item set ie_forma_lancamento = ''U'' where ie_forma_lancamento is null');
		end if;
	end if;
exception
when others then
	null;
end;

begin
	if (dt_versao_atual_cliente_w < to_date('05/12/2012','dd/mm/yyyy')) then
		begin
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_parametros
		where	ie_atualizar_valor_apresent = 'S';
		exception
		when others then
			qt_registro_w	:= 0;
		end;

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy',' update pls_parametros set ie_atualizar_valor_apresent = ''N'' ');
		end if;
	end if;
exception
when others then
	null;
end;

begin
	if (dt_versao_atual_cliente_w < to_date('11/12/2012','dd/mm/yyyy')) then
		begin
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_ocorrencia
		where	coalesce(ie_lib_web_guia::text, '') = '';
		exception
		when no_data_found then
			qt_registro_w	:= 0;
		end;

		if (qt_registro_w > 0) then
			CALL wheb_usuario_pck.set_ie_executar_trigger('N');

			CALL exec_sql_dinamico('Tasy',' update pls_ocorrencia set ie_lib_web_guia = ''N'' where ie_lib_web_guia is null');

			CALL wheb_usuario_pck.set_ie_executar_trigger('S');
		end if;
	end if;
exception
when others then
	null;
end;

begin
	/* Paulo - 13/12/2012 - Excluir o domínio que não faz parte do cadastro TISS */

	if (dt_versao_atual_cliente_w < to_date('13/12/2012','dd/mm/yyyy')) then

		select	count(*)
		into STRICT	qt_registro_w
		from	valor_dominio
		where	cd_dominio	= 3794
		and	vl_dominio	= '999';

		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('prosa', 'delete valor_dominio where	cd_dominio = 3794 and vl_dominio = ''999''');
		end if;
	end if;
exception
when others then
	null;
end;

begin
	if (dt_versao_atual_cliente_w < to_date('26/03/2013','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_glosa_evento
		where	nr_seq_motivo_glosa in (  SELECT	nr_sequencia
						  from		tiss_motivo_glosa
						  where		cd_motivo_tiss = '1308');

		if (qt_registro_w	> 0) then
			update	pls_glosa_evento
			set	ie_plano	= 'N'
			where	nr_seq_motivo_glosa in (  SELECT	nr_sequencia
							  from		tiss_motivo_glosa
							  where		cd_motivo_tiss = '1308');
		end if;
	end if;
exception
when others then
	null;
end;

begin
	if (dt_versao_atual_cliente_w < to_date('26/03/2013','dd/mm/yyyy')) then

		select	count(1)
		into STRICT	qt_registro_w
		from	pls_glosa_evento
		where	ie_evento	= 'IA'
		and	nr_seq_motivo_glosa in (  SELECT	nr_sequencia
						  from		tiss_motivo_glosa
						  where		cd_motivo_tiss = '1999');

		if (qt_registro_w	= 0) then
			CALL pls_gerar_evento_1999(nm_usuario_p);
		end if;
	end if;
exception
when others then
	null;
end;

begin
	-- jjung  OS 523315 - Realocar os valores  dos materiais da tabela pls_material_preco_item para  a  nova tabela  pls_material_valor_item que deve ir na versão do dia 03/04/2013
	if (dt_versao_atual_cliente_w < to_date('03/04/2013','dd/mm/yyyy')) then

		CALL pls_realocar_valores_mat(); /* a rotina que busca os valores da tabela pls_material_preco_item e insere na tabela pls_material_valor_item */
	end if;
exception
when others then
	null;
end;

begin
	-- dgkorz OS 579467 - Atualiza o campo ie_situacao da tabela pls_conta_medica_resumo
	if (dt_versao_atual_cliente_w < to_date('20/04/2013','dd/mm/yyyy')) then

		CALL pls_baca_ajust_sit_cta_med(nm_usuario_P);
	end if;
exception
when others then
	null;
end;

begin
	--dgkorz inclusão do evento para digitação de conta médica para geração da glosa 9908
	if (dt_versao_atual_cliente_w < to_date('14/05/2013','dd/mm/yyyy')) then
		CALL pls_gerar_evento_9908(nm_usuario_P);
	end if;
exception
when others then
	null;
end;

begin
	-- Eder  15/07/2013 - Criar glosas para validação dos arquivos de Recurso de Glosa
	if (dt_versao_atual_cliente_w < to_date('15/07/2013','dd/mm/yyyy')) then
		CALL baca_pls_glosa_custos_assist();
	end if;
exception
when others then
	null;
end;

begin
	if (dt_versao_atual_cliente_w < to_date('31/07/2013','dd/mm/yyyy'))	then
		UPDATE	FUNCAO_PARAMETRO
		SET 	DS_PARAMETRO 	= 'Finalizar análise da fatura ao Aceitar / Encaminhar análise, quando a mesma tiver apenas atendimentos encerrados.',
			DS_OBSERVACAO	= 'Quando houver apenas atendimentos encerrados (pasta Recebimento> Produção médica> Contas médicas), ao utilizar a ação "Aceitar fatura / Encaminhar análise  Ctrl+F4", a fatura será colocada como "Análise finalizada".'
		WHERE	CD_FUNCAO 	= 1293
		AND	NR_SEQUENCIA 	= 37;
	end if;
exception
when others then
	null;
end;

begin
	-- jjung 12/09/2013 - Remover o tipo de Validação Simultâneo. O mesmo foi agregado a validação Validar itens Simultâneos Concorrentes.
	if (dt_versao_atual_cliente_w < to_date('12/09/2013','dd/mm/yyyy')) then

		-- Colocar os registros que utilizavam esta validação como Somente Filtros.
		update	pls_oc_cta_combinada
		set	nr_seq_tipo_validacao	= (	SELECT	max(x.nr_sequencia)
							from	pls_oc_cta_tipo_validacao	x
							where	x.cd_validacao = 1)
		where	nr_seq_tipo_validacao	= (	select	max(x.nr_sequencia)
							from	pls_oc_cta_tipo_validacao	x
							where	x.cd_validacao = 4);

		delete	FROM pls_oc_cta_tipo_validacao
		where	cd_validacao	= 4;

	end if;
exception
when others then
	null;
end;

begin
	-- jjung - Ajustes nos cadastros dos tipos de validações nas ocorrências.
	if (dt_versao_atual_cliente_w < to_date('25/09/2013','dd/mm/yyyy')) then

		-- Colocar como somente filtros as regras que tenham a validação de simultâneo
		update	pls_oc_cta_combinada
		set	nr_seq_tipo_validacao	= (	SELECT	max(x.nr_sequencia)
							from	pls_oc_cta_tipo_validacao	x
							where	x.cd_validacao = 1)
		where	nr_seq_tipo_validacao	= (	select	max(x.nr_sequencia)
							from	pls_oc_cta_tipo_validacao	x
							where	x.cd_validacao = 4);

		-- Colocar como somente filtros as regras que tenham a validação de exigência de indicação clínica
		update	pls_oc_cta_combinada
		set	nr_seq_tipo_validacao	= (	SELECT	max(x.nr_sequencia)
							from	pls_oc_cta_tipo_validacao	x
							where	x.cd_validacao = 1)
		where	nr_seq_tipo_validacao	= (	select	max(x.nr_sequencia)
							from	pls_oc_cta_tipo_validacao	x
							where	x.cd_validacao = 37);

		-- excluir as glosas das validações
		delete	FROM pls_oc_cta_tipo_val_glosa
		where	nr_seq_tipo_validacao in (	SELECT	x.nr_sequencia
							from	pls_oc_cta_tipo_validacao x
							where	x.cd_validacao in (4,37));

		-- Deletar as validações de Simultâneo e Exigência de Indicação Clínica, as quais já foram desenvolvidas outras validações que contemplam estas validações.
		delete	FROM pls_oc_cta_tipo_validacao
		where	cd_validacao in (4,37);
	end if;
exception
when others then
	null;
end;

begin
	-- Popular o valor padrão para o novo campo IE_TIPO_DATA_VALIDACAO para a tabela PLS_OC_CTA_VAL_TX_ADM.
	if (dt_versao_atual_cliente_w < to_date('02/10/2013','dd/mm/yyyy')) then

		ds_sql_w :=	' update	pls_oc_cta_val_tx_adm ' ||
				' set		ie_tipo_data_validacao = ''R'' ' ||
				' where		ie_tipo_data_validacao is null ';

		CALL exec_sql_dinamico('Tasy', ds_sql_w);
	end if;
exception
when others then
	null;
end;

begin
	-- Popular o valor padrão para o novo campo IE_TIPO_DATA_VALIDACAO para a tabela PLS_REGRA_INTERCAMBIO.
	if (dt_versao_atual_cliente_w < to_date('14/10/2013','dd/mm/yyyy')) then

		ds_sql_w :=	' update	pls_regra_intercambio ' ||
				' set		ie_tipo_data = ''R'' ' ||
				' where		ie_tipo_data is null ';

		CALL exec_sql_dinamico('Tasy', ds_sql_w);
	end if;
exception
when others then
	null;
end;

begin
	-- Popular o valor padrão para o novo campo IE_EXCECAO para a tabela PLS_OC_CTA_COMBINADA.
	if (dt_versao_atual_cliente_w < to_date('16/10/2013','dd/mm/yyyy')) then

		ds_sql_w :=	' update	pls_oc_cta_combinada ' ||
				' set		ie_excecao = ''N'' ' ||
				' where		ie_excecao is null ';

		CALL exec_sql_dinamico('Tasy', ds_sql_w);
	end if;
exception
when others then
	null;
end;

-- Popular o valor padrão para o novo campo IE_SITUACAO_EXCECAO para a tabela PLS_OC_CTA_TIPO_VALIDACAO.
begin
	if (dt_versao_atual_cliente_w < to_date('01/11/2013','dd/mm/yyyy')) then

		ds_sql_w :=	' update	pls_oc_cta_tipo_validacao ' ||
				' set		ie_situacao_excecao = ''N'' ' ||
				' where		ie_situacao_excecao is null ';

		CALL exec_sql_dinamico('Tasy', ds_sql_w);
	end if;
exception
when others then
	null;
end;

begin
	/* Eder - 06/11/2013 - Ajustar valor do domínio 3435 TISS  */

	if (dt_versao_atual_cliente_w < to_date('06/11/2013','dd/mm/yyyy')) then

		select	count(*)
		into STRICT	qt_registro_w
		from	valor_dominio
		where	cd_dominio	= 3435
		and	vl_dominio	= '2';

		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('baca', 'update valor_dominio set ds_valor_dominio = ''Retorno / Seguimento'' where	cd_dominio = 3435 and vl_dominio = ''2''');
		end if;
	end if;
exception
when others then
	null;
end;

begin
	/* Décio - Ajustar valor do campo ie_tipo_tabela da tabela pls_pacote_tipo_acomodacao  */

	if (dt_versao_atual_cliente_w < to_date('19/11/2013','dd/mm/yyyy')) then
		CALL exec_sql_dinamico('baca', 'update pls_pacote_tipo_acomodacao set ie_tipo_tabela = ''1'' where	ie_tipo_tabela is null');
	end if;
exception
when others then
	null;
end;

begin
	/* Décio - Ajustar valor do campo ie_situacao da tabela pls_regra_intercambio  */

	if (dt_versao_atual_cliente_w < to_date('06/11/2013','dd/mm/yyyy')) then
		CALL exec_sql_dinamico('baca', 'update pls_regra_intercambio set ie_situacao = ''A'' where	ie_situacao is null');
	end if;
exception
when others then
	null;
end;

begin
	/* Stefanie - A validação 33 foi excluída pois o tratamento que nela havia foi realizado na validação 45 */

	if (dt_versao_atual_cliente_w < to_date('02/01/2014','dd/mm/yyyy')) then
		CALL exec_sql_dinamico('baca', 'delete from pls_oc_cta_tipo_validacao where cd_validacao = 33');
	end if;
exception
when others then
	null;
end;

begin
	/* Stefanie - A validação 33 foi excluída pois o tratamento que nela havia foi realizado na validação 45 */

	if (dt_versao_atual_cliente_w < to_date('17/01/2014','dd/mm/yyyy')) then

		ds_sql_w	:=	'update	pls_oc_cta_tipo_validacao ' ||
					'set	ie_situacao		= ''A'', ' ||
					'	ie_situacao_excecao	= ''S'' ' ||
					'where	cd_validacao		= 56';

		CALL exec_sql_dinamico('jjung', ds_sql_w);
	end if;
exception
when others then
	null;
end;

begin
	-- dlehmkuhl - o campo ie_situação fica como inativo se não tiver valor
	if (dt_versao_atual_cliente_w < to_date('21/01/2014','dd/mm/yyyy')) then

		ds_sql_w	:=	'update	pls_cta_processo ' ||
					'set	ie_situacao		= ''I'' ' ||
					'where	ie_situacao is null';

		CALL exec_sql_dinamico('baca', ds_sql_w);
	end if;
exception
when others then
	null;
end;

begin
	-- dlehmkuhl - o campo ie_pcmso não pode ficar com valor null
	if (dt_versao_atual_cliente_w < to_date('24/01/2014','dd/mm/yyyy')) then

		ds_sql_w	:=	'update	pls_segurado ' ||
					'set	ie_pcmso = ''N'' ' ||
					'where	ie_pcmso is null';

		CALL exec_sql_dinamico('baca', ds_sql_w);
	end if;
exception
when others then
	null;
end;

begin
	-- lrpossamai - Esses campos na tabela pls_proc_criterio_horario não podem estar nulos
	if (dt_versao_atual_cliente_w < to_date('28/01/2014','dd/mm/yyyy')) then

		ds_sql_w	:=	'update	pls_proc_criterio_horario ' ||
					'set	ie_preco_prestador	= ''S'' '||
					'where	ie_preco_prestador is null';

		CALL exec_sql_dinamico('baca', ds_sql_w);

		ds_sql_w	:=	'update	pls_proc_criterio_horario ' ||
					'set	ie_preco_reembolso	= ''S'' '||
					'where	ie_preco_reembolso is null';

		CALL exec_sql_dinamico('baca', ds_sql_w);

		ds_sql_w	:=	'update	pls_proc_criterio_horario ' ||
					'set	ie_preco_pos_estab	= ''S'' '||
					'where	ie_preco_pos_estab is null';

		CALL exec_sql_dinamico('baca', ds_sql_w);

		ds_sql_w	:=	'update	pls_proc_criterio_horario ' ||
					'set	ie_preco_copartic	= ''S'' '||
					'where	ie_preco_copartic is null';

		CALL exec_sql_dinamico('baca', ds_sql_w);

		ds_sql_w	:=	'update	pls_proc_criterio_horario ' ||
					'set	ie_preco_intercambio	= ''S'' '||
					'where	ie_preco_intercambio is null';

		CALL exec_sql_dinamico('baca', ds_sql_w);

		ds_sql_w	:=	'update	pls_proc_criterio_horario ' ||
					'set	ie_regra_manual	= ''N'' ' ||
					'where	ie_regra_manual is null';

		CALL exec_sql_dinamico('baca', ds_sql_w);

		ds_sql_w	:=	'update	pls_proc_criterio_horario ' ||
					'set	ie_feriado	= ''N'' ' ||
					'where	ie_feriado is null';

		CALL exec_sql_dinamico('baca', ds_sql_w);

	end if;

	-- lrpossamai - Esses campos na tabela pls_proc_criterio_horario não podem estar nulos
	if (dt_versao_atual_cliente_w < to_date('05/02/2014','dd/mm/yyyy')) then

		ds_sql_w	:=	'update	pls_regra_intercambio ' ||
					'set	ie_tipo_regra	= ''CO'' '||
					'where	ie_tipo_regra is null '||
					'and	nr_seq_intercambio is null';

		CALL exec_sql_dinamico('baca', ds_sql_w);
	end if;
exception
when others then
	null;
end;

begin
-- dlehmkuhl - tabela temporária não pode ter relacionamento
if (dt_versao_atual_cliente_w < to_date('13/02/2014','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	integridade_referencial
	where 	nm_tabela = 'W_PLS_ANALISE_ITEM'
	and 	nm_integridade_referencial = 'WPLSAIT_PLSLOFA_FK';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('baca', 'delete from integridade_referencial where nm_tabela = ''W_PLS_ANALISE_ITEM'' and nm_integridade_referencial = ''WPLSAIT_PLSLOFA_FK''');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	integridade_referencial
	where 	nm_tabela = 'W_PLS_ANALISE_ITEM'
	and 	nm_integridade_referencial = 'WPLSAIT_PLSEVFA_FK';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('baca', 'delete from integridade_referencial where nm_tabela = ''W_PLS_ANALISE_ITEM'' and nm_integridade_referencial = ''WPLSAIT_PLSEVFA_FK''');
	end if;
end if;
exception
when others then
	null;
end;

begin
-- jjung - Valor padrão no campo novo da PLS_OC_CTA_VAL_AUT_ITEM.
if (dt_versao_atual_cliente_w < to_date('18/02/2014','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where 	table_name = 'PLS_OC_CTA_VAL_AUT_ITEM'
	and 	column_name = 'IE_VALIDA_QTD_UTIL';

	if (qt_registro_w > 0) then

		ds_sql_w :=	'update	PLS_OC_CTA_VAL_AUT_ITEM ' ||
				'set	IE_VALIDA_QTD_UTIL = ''S'' ' ||
				'where	IE_VALIDA_QTD_UTIL is null ';

		CALL exec_sql_dinamico('jjung', ds_sql_w);
		commit;
	end if;
end if;
exception
when others then
	null;
end;

begin
-- jjung - Valor padrão no campo novo da PLS_OC_CTA_VAL_AUT_ITEM.
if (dt_versao_atual_cliente_w < to_date('24/02/2014','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where 	table_name = 'PLS_OC_CTA_VAL_LIBER_MAT'
	and 	column_name = 'IE_FORMA_VALIDACAO_VL_APRES';

	if (qt_registro_w > 0) then

		CALL exec_sql_dinamico('jjung',
		'UPDATE PLS_OC_CTA_VAL_LIBER_MAT SET IE_FORMA_VALIDACAO_VL_APRES = ''IG'' WHERE IE_FORMA_VALIDACAO_VL_APRES IS NULL');
		commit;
	end if;
end if;
exception
when others then
	null;
end;

-- jjkruk - delete validação 58
begin
if (dt_versao_atual_cliente_w < to_date('05/03/2014','dd/mm/yyyy')) then

	select count(1)
	into STRICT	qt_registro_w
	from pls_oc_cta_tipo_validacao
	where cd_validacao = 58;

	if (qt_registro_w > 0) then

		-- atualiza
		CALL exec_sql_dinamico('jjkruk', 'update	pls_oc_cta_combinada
		set	nr_seq_tipo_validacao = (select	max(nr_sequencia)
		from	pls_oc_cta_tipo_validacao
		where	cd_validacao = 1)
		where	nr_seq_tipo_validacao	= (select	max(nr_sequencia)
		from	pls_oc_cta_tipo_validacao
		where	cd_validacao = 58)');
		-- deleta
		CALL exec_sql_dinamico('jjkruk', 'delete	pls_oc_cta_tipo_val_glosa
		where	nr_seq_tipo_validacao in (	select	x.nr_sequencia
							from	pls_oc_cta_tipo_validacao x
							where	x.cd_validacao = 58)');
		-- deleta
		CALL exec_sql_dinamico('jjkruk', 'delete pls_oc_cta_tipo_validacao where cd_validacao = 58');

		commit;
	end if;

end if;
exception
when others then
	null;
end;

begin
/*
dlehmkuhl - Valor padrão em campos IE_SITUACAO das tabelas PLS_OC_CTA_FILTRO_PROT, PLS_OC_CTA_FILTRO_PROF, PLS_OC_CTA_FILTRO_PRODUTO,
  PLS_OC_CTA_FILTRO_PROC, PLS_OC_CTA_FILTRO_PREST, PLS_OC_CTA_FILTRO_MAT, PLS_OC_CTA_FILTRO_INTERC, PLS_OC_CTA_FILTRO_CONTRATO,
  PLS_OC_CTA_FILTRO_CONTA e PLS_OC_CTA_FILTRO_BENEF.
  Trata também o campo IE_FILTRO_PROTOCOLO da tabela PLS_OC_CTA_FILTRO
  */
if (dt_versao_atual_cliente_w < to_date('09/04/2014','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where 	table_name = 'PLS_OC_CTA_FILTRO_PROT'
	and 	column_name = 'IE_SITUACAO';

	if (qt_registro_w > 0) then

		CALL exec_sql_dinamico(	'baca',
					'update pls_oc_cta_filtro_prot set ie_situacao = ''A'' where ie_situacao is null');
		commit;
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where 	table_name = 'PLS_OC_CTA_FILTRO_PROF'
	and 	column_name = 'IE_SITUACAO';

	if (qt_registro_w > 0) then

		CALL exec_sql_dinamico(	'baca',
					'update pls_oc_cta_filtro_prof set ie_situacao = ''A'' where ie_situacao is null');
		commit;
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where 	table_name = 'PLS_OC_CTA_FILTRO_PRODUTO'
	and 	column_name = 'IE_SITUACAO';

	if (qt_registro_w > 0) then

		CALL exec_sql_dinamico(	'baca',
					'update pls_oc_cta_filtro_produto set ie_situacao = ''A'' where ie_situacao is null');
		commit;
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where 	table_name = 'PLS_OC_CTA_FILTRO_PROC'
	and 	column_name = 'IE_SITUACAO';

	if (qt_registro_w > 0) then

		CALL exec_sql_dinamico(	'baca',
					'update pls_oc_cta_filtro_proc set ie_situacao = ''A'' where ie_situacao is null');
		commit;
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where 	table_name = 'PLS_OC_CTA_FILTRO_PREST'
	and 	column_name = 'IE_SITUACAO';

	if (qt_registro_w > 0) then

		CALL exec_sql_dinamico(	'baca',
					'update pls_oc_cta_filtro_prest set ie_situacao = ''A'' where ie_situacao is null');
		commit;
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where 	table_name = 'PLS_OC_CTA_FILTRO_MAT'
	and 	column_name = 'IE_SITUACAO';

	if (qt_registro_w > 0) then

		CALL exec_sql_dinamico(	'baca',
					'update pls_oc_cta_filtro_mat set ie_situacao = ''A'' where ie_situacao is null');
		commit;
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where 	table_name = 'PLS_OC_CTA_FILTRO_INTERC'
	and 	column_name = 'IE_SITUACAO';

	if (qt_registro_w > 0) then

		CALL exec_sql_dinamico(	'baca',
					'update pls_oc_cta_filtro_interc set ie_situacao = ''A'' where ie_situacao is null');
		commit;
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where 	table_name = 'PLS_OC_CTA_FILTRO_CONTRATO'
	and 	column_name = 'IE_SITUACAO';

	if (qt_registro_w > 0) then

		CALL exec_sql_dinamico(	'baca',
					'update pls_oc_cta_filtro_contrato set ie_situacao = ''A'' where ie_situacao is null');
		commit;
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where 	table_name = 'PLS_OC_CTA_FILTRO_CONTA'
	and 	column_name = 'IE_SITUACAO';

	if (qt_registro_w > 0) then

		CALL exec_sql_dinamico(	'baca',
					'update pls_oc_cta_filtro_conta set ie_situacao = ''A'' where ie_situacao is null');
		commit;
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where 	table_name = 'PLS_OC_CTA_FILTRO_BENEF'
	and 	column_name = 'IE_SITUACAO';

	if (qt_registro_w > 0) then

		CALL exec_sql_dinamico(	'baca',
					'update pls_oc_cta_filtro_benef set ie_situacao = ''A'' where ie_situacao is null');
		commit;
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where 	table_name = 'PLS_OC_CTA_FILTRO'
	and 	column_name = 'IE_FILTRO_PROTOCOLO';

	if (qt_registro_w > 0) then

		CALL exec_sql_dinamico(	'baca',
					'update pls_oc_cta_filtro set ie_filtro_protocolo = ''N'' where ie_filtro_protocolo is null');
		commit;
	end if;
end if;
exception
when others then
	null;
end;
--lrpossamai
begin
	null;
	--Comentado para verificarmos se a tabela realmente está indo com a versão
	--Será verificado em base de cliente se realmente foi com a versão.
	/*if	(dt_versao_atual_cliente_w < to_date('25/04/2014','dd/mm/yyyy')) then

		select 	max(nr_sequencia)
		into	seq_motivo_glosa_w
		from 	TISS_MOTIVO_GLOSA
		where	CD_MOTIVO_TISS = '2301';


		select	count(1)
		into	qt_registro_w
		from	pls_glosa_evento
		where	nr_seq_motivo_glosa = seq_motivo_glosa_w
		and	ie_evento	= 'IA';

		if	((qt_registro_w	= 0) and( seq_motivo_glosa_w is not null))then

			exec_sql_dinamico('baca', 'Insert Into Pls_Glosa_Evento (	Nr_Sequencia, Dt_Atualizacao, Nm_Usuario,'||
									'Dt_Atualizacao_Nrec, Nm_Usuario_Nrec, Nr_Seq_Motivo_Glosa, Ie_Evento,Ie_Plano)' ||
									'Values (pls_glosa_evento_seq.nextval, To_date(''09/01/12'',''DD/MM/YY''), ''tasy'','||
									'To_date(''23/11/11'',''DD/MM/YY''), ''tasy'','|| seq_motivo_glosa_w||', ''IA'', ''S'')');
			commit;
		end if;

	end if;*/
exception
when others then
	null;
end;

begin
	/* jjkruk - deleta ordenação pois coluna mudaram de nome. */

	if (dt_versao_atual_cliente_w < to_date('12/05/2014','dd/mm/yyyy')) then
		CALL exec_sql_dinamico('baca', 'delete from usuario_ordem_grid where cd_funcao = 1284 and ds_grid_tabela = ''pls_analise_conta_dbp'' ');
	end if;
exception
when others then
	null;
end;

begin
	-- dlehmkuhl - para usar a nova regra de quantidade de execução
	if (dt_versao_atual_cliente_w < to_date('19/05/2014','dd/mm/yyyy')) then
		CALL exec_sql_dinamico('baca', 'update pls_visible_false set ie_usa_rn_qtde_exec_regra = ''S''');
		commit;
	end if;
exception
when others then
	null;
end;

begin
	-- lrp Atualização dos novos campos da validação 23
	if (dt_versao_atual_cliente_w < to_date('19/08/2014','dd/mm/yyyy')) then

		ds_sql_w	:= 'update pls_oc_cta_val_util_item set ie_mesmo_medico = decode(ie_regra_qtde, ''M'', ''S'', ''N''), '||
				   'ie_mesma_especialidade = ''N'',  ie_mesmo_cid = ''N'', ie_mesma_categoria_cid = ''N'', ie_busca_medico_nota_servico = ''N''';

		CALL exec_sql_dinamico('baca', ds_sql_w);
		commit;
	end if;
exception
when others then
	null;
end;

begin
	-- jjung - Atualização do projeto XML do SIP
	if (dt_versao_atual_cliente_w < to_date('01/09/2014','dd/mm/yyyy')) then

		CALL exec_sql_dinamico('jjung',
		'Update xml_elemento ' ||
		'	set ds_sql = ' ||
		' ''select  nvl(sum(qt_evento),0) qt_evento,'' || '' ''|| ' ||
		' ''        nvl(max(qt_beneficiario),0) qt_beneficiario,'' || '' ''|| ' ||
		' ''      sip_Campo_Mascara_virgula(nvl(sum(vl_despesa),0)) vl_despesa'' || '' ''|| ' ||
		' ''from    sip_lote_item_assistencial'' || '' ''|| ' ||
		' ''where   nr_seq_lote             = :nr_seq_lote_sip'' || '' ''|| ' ||
		' ''and     cd_classificacao_sip    = :cd_classificacao_sip'' || '' ''|| ' ||
		' ''and     ie_tipo_contratacao     = :ie_tipo_contratacao'' || '' ''|| ' ||
		' ''and     ie_segmentacao_sip      = :ie_segmentacao_sip'' || '' ''|| ' ||
		' ''and     sg_uf                   = :sg_uf'' || '' '' || ' ||
		' ''and     to_char(trunc(dt_ocorrencia, ''''month'''' ), ''''dd/mm/yyyy'''' ) = :dt_ocorrencia'' '||
		'where nr_sequencia = 7455');

		commit;
	end if;
exception
when others then
	null;
end;


begin
	-- lrp Atualização dos novos campos da validação 23
	if (dt_versao_atual_cliente_w < to_date('19/08/2014','dd/mm/yyyy')) then

		ds_sql_w	:= 'update Pls_Oc_Cta_Val_Util_Item set ie_medico_prestador = decode(Ie_Tipo_Pessoa_Qtde, ''B'', ''N'',''S''), Ie_Tipo_Pessoa_Qtde = decode(Ie_Tipo_Pessoa_Qtde, ''P'', ''N'',''S'')';

		CALL exec_sql_dinamico('baca', ds_sql_w);
		commit;
	end if;
exception
when others then
	null;
end;

begin
	-- jjung - Atualizar o valor padrão do campo.
	if (dt_versao_atual_cliente_w < to_date('04/09/2014','dd/mm/yyyy')) then

		ds_sql_w	:= 'update pls_oc_cta_val_data_item set IE_CONSIDERA_HORARIO = ''N'' where IE_CONSIDERA_HORARIO is null ';
		CALL exec_sql_dinamico('baca', ds_sql_w);
		commit;
	end if;
exception
when others then
	null;
end;

begin
	-- jjung - Atualizar o valor padrão do campo.
	if (dt_versao_atual_cliente_w < to_date('20/09/2014','dd/mm/yyyy')) then

		ds_sql_w :=
		'Update xml_elemento ' ||
		'set ds_sql = ' ||
		' ''select	ie_segmentacao_sip'' ' || ' || '' '' || '||
		' ''from	sip_lote_item_assistencial'' ' || ' ||'' ''|| '||
		' ''where	nr_seq_lote		= :nr_seq_lote_sip'' ' || ' ||'' ''|| '||
		' ''and	ie_tipo_contratacao	= :ie_tipo_contratacao'' ' || ' ||'' ''|| '||
		' ''and	ie_segmentacao_sip	= 1'' ' || ' ||'' ''|| ' ||
		' ''group by ie_segmentacao_sip'' ' ||
		'where nr_sequencia = 7450';
		CALL exec_sql_dinamico('baca', ds_sql_w);
		commit;

		ds_sql_w :=
		'Update xml_elemento ' ||
		'set ds_sql = ' ||
		' ''select	ie_segmentacao_sip'' ' || ' ||'' ''|| '||
		' ''from	sip_lote_item_assistencial'' ' || ' ||'' ''|| '||
		' ''where	nr_seq_lote		= :nr_seq_lote_sip'' ' || ' ||'' ''|| '||
		' ''and	ie_tipo_contratacao	= :ie_tipo_contratacao'' ' || ' ||'' ''|| '||
		' ''and	ie_segmentacao_sip	= 2'' ' || ' ||'' ''|| '||
		' ''group by ie_segmentacao_sip'' ' ||
		'where nr_sequencia = 7480';
		CALL exec_sql_dinamico('baca', ds_sql_w);
		commit;

		ds_sql_w :=
		'Update xml_elemento ' ||
		'set ds_sql = ' ||
		' ''select	ie_segmentacao_sip '' || ' ||
		' ''from	sip_lote_item_assistencial '' || ' ||
		' ''where	nr_seq_lote		= :nr_seq_lote_sip '' || ' ||
		' ''and	ie_tipo_contratacao	= :ie_tipo_contratacao '' || ' ||
		' ''and	ie_segmentacao_sip	= 3 '' || '  ||
		' ''group by ie_segmentacao_sip '' '||
		'where nr_sequencia = 7505';
		CALL exec_sql_dinamico('baca', ds_sql_w);
		commit;

		ds_sql_w :=
		'Update xml_elemento ' ||
		'set ds_sql = ' ||
		' ''select	ie_segmentacao_sip '' || ' ||
		' ''from	sip_lote_item_assistencial '' || ' ||
		' ''where	nr_seq_lote		= :nr_seq_lote_sip '' || ' ||
		' ''and	ie_tipo_contratacao	= :ie_tipo_contratacao '' || ' ||
		' ''and	ie_segmentacao_sip	= 4 '' || ' ||
		' ''group by ie_segmentacao_sip '' ' ||
		'where nr_sequencia = 7524';
		CALL exec_sql_dinamico('baca', ds_sql_w);
		commit;

		ds_sql_w :=
		'Update xml_elemento ' ||
		'set ds_sql = ' ||
		' ''select	nvl(sum(qt_evento),0) qt_evento, '' || '  ||
		' ''	nvl(max(qt_beneficiario),0) qt_beneficiario '' || ' ||
		' ''from	sip_lote_item_assistencial '' || ' ||
		' ''where	nr_seq_lote		= :nr_seq_lote_sip '' || ' ||
		' ''and	cd_classificacao_sip	= :cd_classificacao_sip '' || ' ||
		' ''and	ie_tipo_contratacao	= :ie_tipo_contratacao '' || ' ||
		' ''and	ie_segmentacao_sip	= :ie_segmentacao_sip '' || ' ||
		' ''and	sg_uf			= :sg_uf '' || ' ||
		' ''and	dt_ocorrencia		= :dt_ocorrencia '' ' ||
		'where nr_sequencia = 7473';
		CALL exec_sql_dinamico('baca', ds_sql_w);
		commit;

		ds_sql_w :=
		'Update xml_elemento ' ||
		'set ds_sql = ' ||
		' ''select	nvl(sum(qt_evento),0) qt_evento '' || ' ||
		' ''from	sip_lote_item_assistencial '' || ' ||
		' ''where	nr_seq_lote		= :nr_seq_lote_sip '' || ' ||
		' ''and	cd_classificacao_sip	= :cd_classificacao_sip '' || ' ||
		' ''and	ie_tipo_contratacao	= :ie_tipo_contratacao '' || ' ||
		' ''and	ie_segmentacao_sip	= :ie_segmentacao_sip '' || ' ||
		' ''and	sg_uf			= :sg_uf '' || ' ||
		' ''and	dt_ocorrencia		= :dt_ocorrencia '' ' ||
		'where nr_sequencia = 7465';
		CALL exec_sql_dinamico('baca', ds_sql_w);
		commit;

		ds_sql_w :=
		'Update xml_elemento ' ||
		'set ds_sql = ' ||
		' ''select	nvl(sum(qt_evento),0) qt_evento, '' || ' ||
		' ''	nvl(max(qt_beneficiario),0) qt_beneficiario, '' || ' ||
		' ''	sip_Campo_Mascara_virgula(nvl(sum(vl_despesa),0)) vl_despesa  '' || ' ||
		' ''from    sip_lote_item_assistencial  '' || ' ||
		' ''where   nr_seq_lote             = :nr_seq_lote_sip  '' || ' ||
		' ''and     cd_classificacao_sip    = :cd_classificacao_sip  '' || ' ||
		' ''and     ie_tipo_contratacao     = :ie_tipo_contratacao  '' || ' ||
		' ''and     ie_segmentacao_sip      = :ie_segmentacao_sip  '' || ' ||
		' ''and     sg_uf                   = :sg_uf  '' || ' ||
		' ''and     dt_ocorrencia 		= :dt_ocorrencia '' ' ||
		'where nr_sequencia = 7455';
		CALL exec_sql_dinamico('baca', ds_sql_w);
		commit;
	end if;
exception
when others then
	null;
end;

begin
	-- jjung - A glosa 1801 não pode permitir importação.
	if (dt_versao_atual_cliente_w < to_date('06/10/2014','dd/mm/yyyy')) then

		ds_sql_w	:= 'update tiss_motivo_glosa set IE_IMPORTACAO_OPS = ''N'' where CD_MOTIVO_TISS = ''1801'' ';
		CALL exec_sql_dinamico('baca', ds_sql_w);
		commit;
	end if;
exception
when others then
	null;
end;

begin
	-- dlehmkuhl - tratar para atualizar o campo novo da validação de simultâneo e concorrente
	if (dt_versao_atual_cliente_w < to_date('16/10/2014','dd/mm/yyyy')) then

		ds_sql_w	:= 'update PLS_COMBINACAO_ITEM_CTA set IE_TIPO_VERIFICACAO = ''1'' where IE_TIPO_VERIFICACAO is null';
		CALL exec_sql_dinamico('baca', ds_sql_w);
		commit;
	end if;
exception
when others then
	null;
end;

/*aaschlote 16/10/2014 - OS - 802464 - Ajustar valor para campo novo*/

begin
if (dt_versao_atual_cliente_w < to_date('16/10/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	PLS_MONITOR_TISS_GPO_PROC
	where	CD_VERSAO_TISS = '3.01.00';

	if (qt_registro_w	> 0) then
		update	PLS_MONITOR_TISS_GPO_PROC
		set	CD_VERSAO_TISS = '3.02.00'
		where	CD_VERSAO_TISS = '3.01.00';
	end if;
end if;
exception
when others then
	null;
end;

if (dt_versao_atual_cliente_w < to_date('14/11/2014','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name	= 'PLSCOPRO_TISSFAD_FK';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_CONTA_PROC drop constraint PLSCOPRO_TISSFAD_FK');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name	= 'PLSCOPRO_TISSFAD_FK_I';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Tasy',' drop index PLSCOPRO_TISSFAD_FK_I');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name	= 'PRGPIMP_TISSFAD_FK';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_REC_GLOSA_PROC_IMP drop constraint PRGPIMP_TISSFAD_FK');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name	= 'PRGPIMP_TISSFAD_FK_I';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Tasy','drop index PRGPIMP_TISSFAD_FK_I');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name	= 'PRGPROC_TISSFAD_FK';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_REC_GLOSA_PROC drop constraint PRGPROC_TISSFAD_FK');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name	= 'PRGPROC_TISSFAD_FK_I';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Tasy','drop index PRGPROC_TISSFAD_FK_I');
	end if;
end if;

if (dt_versao_atual_cliente_w < to_date('27/11/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_PROTOCOLO_CONTA'
	and	column_name	= 'NR_SEQ_TRANSACAO'
	and	data_type	= 'VARCHAR2';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_PROTOCOLO_CONTA add nr_seq_transacao_varchar varchar2(12) ');

		CALL exec_sql_dinamico('Tasy','alter package PLS_UTIL_CTA_PCK compile');

		CALL exec_sql_dinamico('Tasy',' update PLS_PROTOCOLO_CONTA set nr_seq_transacao_varchar = nr_seq_transacao where nr_seq_transacao is not null');

		ds_comando_w		:= 	'select	count(*) from pls_protocolo_conta where nr_seq_transacao_varchar is not null';
		qt_registro_char_w := obter_valor_dinamico(ds_comando_w, qt_registro_char_w);


		ds_comando_w		:= 	'select	count(*) from pls_protocolo_conta where nr_seq_transacao is not null';
		qt_registro_number_w := obter_valor_dinamico(ds_comando_w, qt_registro_number_w);

		if (qt_registro_char_w = qt_registro_number_w) then
			CALL exec_sql_dinamico('Tasy',' alter table PLS_PROTOCOLO_CONTA rename column nr_seq_transacao to nr_seq_transacao_number');
			CALL exec_sql_dinamico('Tasy',' alter table PLS_PROTOCOLO_CONTA rename column nr_seq_transacao_varchar to nr_seq_transacao');
		end if;
	end if;
end if;

begin

/*lrpossamai -  Inativada inconsistência do Sistema 02(SIP)  a mesma não deve estar ativanos clientes, necessita de ajustes*/

if (dt_versao_atual_cliente_w < to_date('22/01/2015','dd/mm/yyyy')) then

		CALL exec_sql_dinamico('BACA',' update sip_inconsistencia_sistema set ie_situacao = ''I'' where cd_inconsistencia = 2');

end if;
exception
when others then
	null;
end;

begin
/* Francisco - OS 834097 - Dropar tabela que foi desistido de criar */

if (dt_versao_atual_cliente_w < to_date('26/01/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name = 'PLS_CONTA_MAT_AUX';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('BACA',' drop table PLS_CONTA_MAT_AUX');
	end if;
end if;
exception
when others then
	null;
end;

/*aaschlote - 03/04/2015 - 858573*/

begin
if (dt_versao_atual_cliente_w < to_date('03/04/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_monitor_tiss_lote_ret
	where	coalesce(nr_seq_lote_com::text, '') = '';

	if (qt_registro_w > 0) then
		CALL pls_ajusta_lote_ret_mov_ans('Tasy');
	end if;
end if;
exception
when others then
	null;
end;

/*aaschlote - 14/04/2015 - 871474*/

begin
if (dt_versao_atual_cliente_w < to_date('14/04/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_monitor_tiss_lote
	where	coalesce(qt_conta::text, '') = '';

	if (qt_registro_w > 0) then
		CALL pls_atualizar_lote_monit_tiss(null);
	end if;
end if;
exception
when others then
	null;
end;

/*dlehmkuhl - 16/04/2015 - alimentar os campos cd_prestador formatados da pls_prestador */

begin
if (dt_versao_atual_cliente_w < to_date('16/04/2015','dd/mm/yyyy')) then
	CALL pls_atu_cd_prestador();
end if;
exception
when others then
	null;
end;

/* jlsilva - 24/04/2015 - Retirado a opção Desconsiderar horário quando item não possuir hora informada da validação 6 e passado todas validações deste sentido para Considerar horário OS 874926*/

begin
if (dt_versao_atual_cliente_w < to_date('24/04/2015','dd/mm/yyyy')) then
	update 	pls_oc_cta_val_item_inter
	set 	ie_tratamento_horario = 'H',
		nm_usuario = 'tasy'
	where 	ie_tratamento_horario = 'N';
end if;
exception
when others then
	null;
end;


/*aaschlote - 17/06/2015 - 894356 - Ajuste do cadastro da ocorrência combinada*/

begin
if (dt_versao_atual_cliente_w < to_date('14/04/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_oc_cta_tipo_validacao
	where	nm_tabela	= 'PLS_OC_CTA_VAL_DATA_ITEM'
	and	nr_seq_visao	= 22321;

	if (qt_registro_w > 0) then
		update	pls_oc_cta_tipo_validacao
		set	qt_max_regra 	= 1,
			nr_seq_visao	= 22321,
			nm_tabela	= 'PLS_OC_CTA_VAL_DATA_ITEM'
		where	nr_sequencia	= 65;
	end if;
end if;
exception
when others then
	null;
end;

begin
if (dt_versao_atual_cliente_w < to_date('04/09/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	tabela_atributo
	where	nm_tabela	= 'PLS_PRECO_MATERIAL'
	and	nm_atributo	= 'NR_SEQ_MATERIAL'
	and	ie_obrigatorio 	= 'S';

	if (qt_registro_w > 0) then

		CALL exec_sql_dinamico('BACA',' update tabela_atributo set ie_obrigatorio = ''N'' where nm_tabela =  ''PLS_PRECO_MATERIAL'' and nm_atributo = ''NR_SEQ_MATERIAL'' ');

	end if;
end if;
exception
when others then
	null;
end;

/*aaschlote 08/10/2015 OS 872566 - Novo Campo*/

begin
if (dt_versao_atual_cliente_w < to_date('08/10/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_regra_coparticipacao
	where	coalesce(ie_tipo_incidencia::text, '') = '';

	if (qt_registro_w > 0) then

		update	pls_regra_coparticipacao
		set	ie_tipo_incidencia = 'B'
		where	coalesce(ie_tipo_incidencia::text, '') = '';

	end if;
end if;
exception
when others then
	null;
end;

/*aaschlote 12/10/2015 OS 931681 - Novo Campo*/

begin
if (dt_versao_atual_cliente_w < to_date('12/10/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_camara_compensacao
	where	coalesce(ie_incidencia_taxa::text, '') = '';

	if (qt_registro_w > 0) then

		update	pls_camara_compensacao
		set	ie_incidencia_taxa = 'T'
		where	coalesce(ie_incidencia_taxa::text, '') = '';

	end if;
end if;
exception
when others then
	null;
end;

/*aaschlote 30/10/2015 OS 940981 - Novo Campo*/

begin
if (dt_versao_atual_cliente_w < to_date('30/10/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_prestador_pagto
	where	coalesce(dt_inicio_vigencia_ref::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_prestador_pagto
		set	dt_inicio_vigencia_ref = to_date('01/01/1900')
		where	coalesce(dt_inicio_vigencia_ref::text, '') = '';
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	pls_prestador_pagto
	where	coalesce(dt_fim_vigencia_ref::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_prestador_pagto
		set	dt_fim_vigencia_ref = to_date('31/12/2050')
		where	coalesce(dt_fim_vigencia_ref::text, '') = '';
	end if;


end if;
exception
when others then
	null;
end;

/*aaschlote 25/11/2015 OS 960029 - Novo Campo*/

begin
if (dt_versao_atual_cliente_w < to_date('25/11/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_parametros
	where	coalesce(ie_permite_multi_copart::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_parametros
		set	ie_permite_multi_copart = 'N'
		where	coalesce(ie_permite_multi_copart::text, '') = '';

	end if;
end if;
exception
when others then
	null;
end;

/*aaschlote 28/12/2015 OS 965264 - Novo Campo*/

begin
if (dt_versao_atual_cliente_w < to_date('28/12/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_parametros
	where	coalesce(ie_considerar_dt_lanc_copartc::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_parametros
		set	ie_considerar_dt_lanc_copartc = 'N'
		where	coalesce(ie_considerar_dt_lanc_copartc::text, '') = '';

	end if;
end if;
exception
when others then
	null;
end;

/*jlsilva 14/12/2015 OS 961444 - Alterado tipo do campo, para isto foi criado uma procedure que faz esta alteração */

begin
if (dt_versao_atual_cliente_w < to_date('14/12/2015','dd/mm/yyyy')) then

	CALL pls_troca_tipo_campo_tabela('PLS_CONTA', 'NR_DOCUMENTO', 'VARCHAR2', 25);
end if;
exception
when others then
	null;
end;

/*jlsilva 21/01/2016 OS 986534 - alterado campo para aceitar valores nulos */

begin
if (dt_versao_atual_cliente_w < to_date('21/01/2016','dd/mm/yyyy')) then

	CALL exec_sql_dinamico('Tasy','ALTER TABLE pls_conta_proc_regra MODIFY cd_edicao_amb NULL');
end if;
exception
when others then
	null;
end;

/*aldellandrea OS 983214 */

begin
if (dt_versao_atual_cliente_w < to_date('12/02/2016','dd/mm/yyyy')) then

	update	pls_regra_icms_uf
	set	ie_generico = 'A'
	where	coalesce(ie_generico::text, '') = '';
end if;
exception
when others then
	null;
end;

/* jtonon 28/02/2016 OS 996893 - Alteração do tipo de evento de 'Produção médica' para 'Financeiro' para controlar a exibição da pasta 'OPS - Controle de Eventos e Ocorrências Financeiras > Eventos > Ajustes refaturamento' */

begin
if (dt_versao_atual_cliente_w < to_date('18/02/2016','dd/mm/yyyy')) then
	update	pls_evento
	set	ie_tipo_evento = 'F',
		ie_natureza = 'D'
	where	nr_sequencia in (	SELECT	distinct a.nr_sequencia
					from	pls_evento_conta_ajuste b,
						pls_evento a
					where	a.nr_sequencia = b.nr_seq_evento
					and	((a.ie_tipo_evento <> 'F') or (a.ie_natureza <> 'D')));
end if;
exception
when others then
	null;
end;

-- Dino, ajustar as datas do pagamento de recurso de glosa
begin
if (dt_versao_atual_cliente_w < to_date('22/02/2016','dd/mm/yyyy')) then
	CALL pls_baca_atualiza_dt_comp_rec();
end if;
exception
when others then
	null;
end;

-- grjunior, ajustar nova opção na validação 67 - itens não autorizados
begin
if (dt_versao_atual_cliente_w < to_date('26/02/2016','dd/mm/yyyy')) then
	update	pls_oc_cta_val_aut_item
	set	ie_considerar_semelhante	= 'N'
	where	coalesce(ie_considerar_semelhante::text, '') = '';
end if;
exception
when others then
	null;
end;

-- jtonon, voltar a exibir a descrição do campo 'CD_PESSOA_FISICA' visto que ao utilizar esta tabela em mais de uma função acabamos removendo o mesmo da tela
begin
if (dt_versao_atual_cliente_w < to_date('15/03/2016','dd/mm/yyyy')) then
	update	tabela_atributo
	set	ie_criar_desc_fk = 'S'
	where	nm_atributo = 'CD_PESSOA_FISICA'
	and	nm_tabela = 'PLS_EVENTO_REGRA_ADIANT';
end if;
exception
when others then
	null;
end;

-- jtonon, voltar a exibir a descrição do campo 'CD_CGC' visto que ao utilizar esta tabela em mais de uma função acabamos removendo o mesmo da tela
begin
if (dt_versao_atual_cliente_w < to_date('15/03/2016','dd/mm/yyyy')) then
	update	tabela_atributo
	set	ie_criar_desc_fk = 'S'
	where	nm_atributo = 'CD_CGC'
	and	nm_tabela = 'PLS_EVENTO_REGRA_ADIANT';
end if;
exception
when others then
	null;
end;


-- grjunior -  coloca um valor "padrão" para as regras anteriores a criação do campo
begin
if (dt_versao_atual_cliente_w < to_date('09/05/2016','dd/mm/yyyy')) then
	update	pls_pacote_agrup_fat
	set	ie_desc_pac_origem = 'N'
	where	coalesce(ie_desc_pac_origem::text, '') = '';
end if;
exception
when others then
	null;
end;

begin
if (dt_versao_atual_cliente_w < to_date('17/05/2016','dd/mm/yyyy')) then
	update	pls_controle_estab
	set	ie_cad_conta_medica = 'N'
	where	coalesce(ie_cad_conta_medica::text, '') = '';
end if;
exception
when others then
	null;
end;

/*aaschlote 18/05/2016 OS 1043872 - Novo Campo*/

begin
if (dt_versao_atual_cliente_w < to_date('18/05/2016','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_web_param_geral
	where	coalesce(ie_vinculo_complemento::text, '') = '';

	if (qt_registro_w > 0) then
		update	pls_web_param_geral
		set	ie_vinculo_complemento = 'P'
		where	coalesce(ie_vinculo_complemento::text, '') = '';

	end if;
end if;
exception
when others then
	null;
end;

-- wcbernardino, atualizar estabelecimento
begin
if (dt_versao_atual_cliente_w < to_date('18/05/2016','dd/mm/yyyy')) then
	select	pls_obter_cd_estab_ops
	into STRICT	cd_estabelecimento_w
	;

	update	pls_regra_demons_analise
	set	cd_estabelecimento	= cd_estabelecimento_w
	where	coalesce(cd_estabelecimento::text, '') = '';

	update	pls_regra_cta_bloq_upload
	set	cd_estabelecimento	= cd_estabelecimento_w
	where	coalesce(cd_estabelecimento::text, '') = '';

	update	pls_regra_prest_integracao
	set	cd_estabelecimento	= cd_estabelecimento_w
	where	coalesce(cd_estabelecimento::text, '') = '';
end if;
exception
when others then
	null;
end;

-- dlehmkuhl, atualizar função padrão de pagamento de produção médica
begin
if (dt_versao_atual_cliente_w < to_date('19/05/2016','dd/mm/yyyy')) then
	update	pls_parametro_pagamento
	set	ie_funcao_pagamento = '1'
	where	coalesce(ie_funcao_pagamento::text, '') = '';
end if;
exception
when others then
	null;
end;

-- wcbernardino, atualizar estabelecimento
begin
if (dt_versao_atual_cliente_w < to_date('23/05/2016','dd/mm/yyyy')) then
	select	pls_obter_cd_estab_ops
	into STRICT	cd_estabelecimento_w
	;

	update	pls_web_param_guia_medico
	set	cd_estabelecimento	= cd_estabelecimento_w
	where	coalesce(cd_estabelecimento::text, '') = '';
end if;
exception
when others then
	null;
end;

-- wcbernardino, atualizar estabelecimento
begin
if (dt_versao_atual_cliente_w < to_date('17/05/2016','dd/mm/yyyy')) then
	select	pls_obter_cd_estab_ops
	into STRICT	cd_estabelecimento_w
	;

	update	pls_regra_val_apres
	set	cd_estabelecimento	= cd_estabelecimento_w
	where	coalesce(cd_estabelecimento::text, '') = '';
end if;
exception
when others then
	null;
end;

begin
	if (dt_versao_atual_cliente_w < to_date('23/03/2016','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_monitor_tiss_param a
		where	coalesce(a.ie_permite_rec_glosa::text, '') = '';

		if (qt_registro_w = 0) then
			update	pls_monitor_tiss_param
			set	ie_permite_rec_glosa	= 'N';
		end if;
	end if;
exception
when others then
	null;
end;

-- wcbernardino, atualizar estabelecimento
begin
if (dt_versao_atual_cliente_w < to_date('06/06/2016','dd/mm/yyyy')) then
	select	pls_obter_cd_estab_ops
	into STRICT	cd_estabelecimento_w
	;

	update	pls_inclusao_prestador
	set	cd_estabelecimento	= cd_estabelecimento_w
	where	coalesce(cd_estabelecimento::text, '') = '';
end if;
exception
when others then
	null;
end;

-- wcbernardino, atualizar tipo de registro
begin
if (dt_versao_atual_cliente_w < to_date('10/06/2016','dd/mm/yyyy')) then
	update	pls_log_pos_estabelecido
	set	ie_tipo_registro	= 'H'
	where	coalesce(ie_tipo_registro::text, '') = '';
end if;
exception
when others then
	null;
end;

-- wcbernardino, atualizar estabelecimento
begin
if (dt_versao_atual_cliente_w < to_date('15/06/2016','dd/mm/yyyy')) then
	select	pls_obter_cd_estab_ops
	into STRICT	cd_estabelecimento_w
	;

	update	pls_fornecedor_material
	set	cd_estabelecimento	= cd_estabelecimento_w
	where	coalesce(cd_estabelecimento::text, '') = '';

	update	pls_material_unimed
	set	cd_estabelecimento	= cd_estabelecimento_w
	where	coalesce(cd_estabelecimento::text, '') = '';

	update	pls_regra_vinc_mat_unimed
	set	cd_estabelecimento	= cd_estabelecimento_w
	where	coalesce(cd_estabelecimento::text, '') = '';

	update	pls_fornec_mat_fed_sc
	set	cd_estabelecimento	= cd_estabelecimento_w
	where	coalesce(cd_estabelecimento::text, '') = '';
end if;
exception
when others then
	null;
end;

-- wcbernardino, atualizar estabelecimento
begin
if (dt_versao_atual_cliente_w < to_date('22/06/2016','dd/mm/yyyy')) then
	select	pls_obter_cd_estab_ops
	into STRICT	cd_estabelecimento_w
	;

	update	pls_regra_protocolo_web
	set	cd_estabelecimento	= cd_estabelecimento_w
	where	coalesce(cd_estabelecimento::text, '') = '';

	update	sip_item_assist_regra_nv
	set	cd_estabelecimento	= cd_estabelecimento_w
	where	coalesce(cd_estabelecimento::text, '') = '';
end if;
exception
when others then
	null;
end;

-- wcbernardino, atualizar a regulamentação das regras
begin
if (dt_versao_atual_cliente_w < to_date('24/06/2016','dd/mm/yyyy')) then
	update	pls_conta_financ_regra
	set	ie_regulamentacao	 = NULL
	where	ie_tipo_operacao	in ('ICP','ICR','EQ','PP','CCR','CCP','RE','CV','TRP');

	update	tabela_visao_atributo
	set	vl_padrao		 = NULL
	where	upper(nm_atributo)	= upper('ie_regulamentacao')
	and	nr_sequencia		in (12705,12706,12707,12709,12710,12711,13039,13040,24996);
end if;
exception
when others then
	null;
end;

begin
if (dt_versao_atual_cliente_w < to_date('06/07/2016','dd/mm/yyyy')) then
	update	pls_regra_campos_part_xml
	set	ie_partic_proc	= 'A'
	where	coalesce(ie_partic_proc::text, '') = '';

	update	pls_fat_regra_campo
	set	ie_somente_sem_tag = 'N'
	where	coalesce(ie_somente_sem_tag::text, '') = '';

	begin
	insert into pls_fat_campo(nr_sequencia,ds_campo,ie_nivel,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec)
	values (32,'procedimentosRealizados.procedimentos.tecnicaUtilizada','P',clock_timestamp(),'wcbernardino',clock_timestamp(),'wcbernardino');
	exception
	when others then
		null;
	end;

	update	pls_parametro_contabil
	set	ie_permite_gerar_fat_contab	= 'S'
	where	coalesce(ie_permite_gerar_fat_contab::text, '') = '';

	update	pls_evento_fat_regra_itens
	set	ie_internado	= 'A'
	where	coalesce(ie_internado::text, '') = '';

	update	pls_evento_fat_regra_itens
	set	ie_tipo_intercambio	= 'A'
	where	coalesce(ie_tipo_intercambio::text, '') = '';

	update	pls_evento_fat_regra_itens
	set	ie_tipo_conta	= 'A'
	where	coalesce(ie_tipo_conta::text, '') = '';

	update	pls_evento_fat_regra_itens
	set	ie_pcmso	= 'A'
	where	coalesce(ie_pcmso::text, '') = '';

	update	pls_evento_fat_regra_itens
	set	ie_tipo_pessoa_prest	= 'A'
	where	coalesce(ie_tipo_pessoa_prest::text, '') = '';

	update	pls_evento_fat_regra_itens
	set	ie_tipo_pessoa_prest_rec	= 'A'
	where	coalesce(ie_tipo_pessoa_prest_rec::text, '') = '';

	update	pls_evento_fat_regra_itens
	set	ie_tipo_pessoa_prest_pag	= 'A'
	where	coalesce(ie_tipo_pessoa_prest_pag::text, '') = '';

	update	pls_evento_fat_regra_itens
	set	ie_apresentacao_prot	= 'T'
	where	coalesce(ie_apresentacao_prot::text, '') = '';

	update	pls_evento_fat_regra_itens
	set	ie_tipo_pessoa_prest_atend	= 'A'
	where	coalesce(ie_tipo_pessoa_prest_atend::text, '') = '';

	update	pls_evento_fat_regra_itens
	set	ie_tipo_pessoa_prest_ptu	= 'A'
	where	coalesce(ie_tipo_pessoa_prest_ptu::text, '') = '';

	update	pls_evento_fat_regra_itens
	set	ie_tipo_pessoa_prest_solic	= 'A'
	where	coalesce(ie_tipo_pessoa_prest_solic::text, '') = '';

end if;
exception
when others then
	null;
end;

begin
if (dt_versao_atual_cliente_w < to_date('21/07/2016','dd/mm/yyyy')) then

	update	pls_parametros
	set	ie_gerar_disc_status_imp	= 'N'
	where	coalesce(ie_gerar_disc_status_imp::text, '') = '';

	update	pls_parametro_pagamento
	set	ie_consid_comp_aprop	= 'S'
	where	coalesce(ie_consid_comp_aprop::text, '') = '';

	update	pls_web_param_guia_medico
	set	ie_obriga_tipo_guia	= 'N'
	where	coalesce(ie_obriga_tipo_guia::text, '') = '';

end if;
exception
when others then
	null;
end;

-- wcbernardino, atualizar estabelecimento
begin
if (dt_versao_atual_cliente_w < to_date('30/07/2016','dd/mm/yyyy')) then
	select	pls_obter_cd_estab_ops
	into STRICT	cd_estabelecimento_w
	;

	update	pls_lote_auto_gerado
	set	cd_estabelecimento	= cd_estabelecimento_w
	where	coalesce(cd_estabelecimento::text, '') = '';
end if;
exception
when others then
	null;
end;

begin
	if (dt_versao_atual_cliente_w < to_date('01/08/2016','dd/mm/yyyy')) then
		CALL pls_alimenta_estab_cta_exc();
	end if;
exception
when others then
	null;
end;

begin
	if (dt_versao_atual_cliente_w < to_date('01/08/2016','dd/mm/yyyy')) then
		select	pls_obter_cd_estab_ops
		into STRICT	cd_estabelecimento_w
		;

		update	pls_conta_comunic_interna
		set	cd_estabelecimento = cd_estabelecimento_w
		where	coalesce(cd_estabelecimento::text, '') = '';
	end if;
exception
when others then
	null;
end;

begin
	if (dt_versao_atual_cliente_w < to_date('22/08/2016','dd/mm/yyyy')) then
		select	pls_obter_cd_estab_ops
		into STRICT	cd_estabelecimento_w
		;

		update	pls_glosa_flux_analise_rec
		set	cd_estabelecimento = cd_estabelecimento_w
		where	coalesce(cd_estabelecimento::text, '') = '';

		update	pls_rec_glosa_lote
		set	cd_estabelecimento = cd_estabelecimento_w
		where	coalesce(cd_estabelecimento::text, '') = '';
	end if;
exception
when others then
	null;
end;

begin
	if (dt_versao_atual_cliente_w < to_date('09/09/2016','dd/mm/yyyy')) then
		update	pls_parametros_rec_glosa
		set	ie_integrar_imp	= 'S'
		where	coalesce(ie_integrar_imp::text, '') = '';
	end if;
exception
when others then
	null;
end;

begin
	if (dt_versao_atual_cliente_w < to_date('15/09/2016')) then
		update	ptu_fatura_anexo
		set	ie_boleto	= 'N'
		where	coalesce(ie_boleto::text, '') = '';
	end if;
exception
when others then
	null;
end;

begin
	if (dt_versao_atual_cliente_w < to_date('21/09/2016')) then
		update	pls_regra_agrup_item_ptu
		set	ie_tipo_validacao = 'M'
		where	coalesce(ie_tipo_validacao::text, '') = ''
		and	((nr_seq_material IS NOT NULL AND nr_seq_material::text <> '') or (cd_material_inicial IS NOT NULL AND cd_material_inicial::text <> '') or (cd_material_final IS NOT NULL AND cd_material_final::text <> ''));

		update	pls_regra_agrup_item_ptu
		set	ie_tipo_validacao = 'P'
		where	coalesce(ie_tipo_validacao::text, '') = '';
	end if;
exception
when others then
	null;
end;

begin
	if (dt_versao_atual_cliente_w < to_date('28/09/2016')) then
		select	pls_obter_cd_estab_ops
		into STRICT	cd_estabelecimento_w
		;

		update	pls_monitor_tiss_param
		set	cd_estabelecimento = cd_estabelecimento_w
		where	coalesce(cd_estabelecimento::text, '') = '';
	end if;
exception
when others then
	null;
end;

begin
	if (dt_versao_atual_cliente_w < to_date('03/10/2016')) then
		update	pls_prestador_pagamento
		set	ie_validacao = 'CM'
		where	coalesce(ie_validacao::text, '') = '';
	end if;
exception
when others then
	null;
end;

begin
	if (dt_versao_atual_cliente_w < to_date('12/10/2016')) then
		update	PLS_MONITOR_TISS_LOTE_COM
		set	IE_ORIGEM_LOTE = 'PM'
		where	coalesce(IE_ORIGEM_LOTE::text, '') = '';

		update	PLS_MONITOR_TISS_LOTE
		set	IE_ORIGEM_LOTE = 'PM'
		where	coalesce(IE_ORIGEM_LOTE::text, '') = '';
	end if;
exception
when others then
	null;
end;

begin
if (dt_versao_atual_cliente_w < to_date('14/10/2016')) then
	update	pls_parametros
	set	ie_canc_tit_vinc_disc = 'S'
	where	coalesce(ie_canc_tit_vinc_disc::text, '') = '';
end if;
exception
when others then
	null;
end;

if (dt_versao_atual_cliente_w < to_date('14/11/2014','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name	= 'PLSCOME_I4';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Tasy','drop index PLSCOME_I4');
	end if;
end if;

if (dt_versao_atual_cliente_w < to_date('23/11/2016','dd/mm/yyyy')) then
	begin
	insert into PLS_SERV_GENERICO_PTU(NR_SEQUENCIA, DT_ATUALIZACAO, NM_USUARIO, DT_ATUALIZACAO_NREC, NM_USUARIO_NREC, DS_SERVICO, CD_SERVICO, IE_SITUACAO)
	values (1, clock_timestamp(), 'wcbernardino', clock_timestamp(), 'wcbernardino', 'Taxa genérica', 99999919, 'A');
	exception
	when others then
		null;
	end;

	begin
	insert into PLS_SERV_GENERICO_PTU(NR_SEQUENCIA, DT_ATUALIZACAO, NM_USUARIO, DT_ATUALIZACAO_NREC, NM_USUARIO_NREC, DS_SERVICO, CD_SERVICO, IE_SITUACAO)
	values (2, clock_timestamp(), 'wcbernardino', clock_timestamp(), 'wcbernardino', 'Medicamento genérico', 99999927, 'A');
	exception
	when others then
		null;
	end;

	begin
	insert into PLS_SERV_GENERICO_PTU(NR_SEQUENCIA, DT_ATUALIZACAO, NM_USUARIO, DT_ATUALIZACAO_NREC, NM_USUARIO_NREC, DS_SERVICO, CD_SERVICO, IE_SITUACAO)
	values (3, clock_timestamp(), 'wcbernardino', clock_timestamp(), 'wcbernardino', 'Material genérico', 99999935, 'A');
	exception
	when others then
		null;
	end;

	begin
	insert into PLS_SERV_GENERICO_PTU(NR_SEQUENCIA, DT_ATUALIZACAO, NM_USUARIO, DT_ATUALIZACAO_NREC, NM_USUARIO_NREC, DS_SERVICO, CD_SERVICO, IE_SITUACAO)
	values (4, clock_timestamp(), 'wcbernardino', clock_timestamp(), 'wcbernardino', 'OPME genérico', 99999943, 'A');
	exception
	when others then
		null;
	end;
end if;

if (dt_versao_atual_cliente_w < to_date('03/12/2016','dd/mm/yyyy')) then
	CALL pls_alimenta_usuario_prot_rec();
end if;

if (dt_versao_atual_cliente_w < to_date('08/12/2016','dd/mm/yyyy')) then
	update	pls_serv_generico_ptu		-- Taxa, Medicamento, Material, OPME
	set	ie_tipo_codigo	= CASE WHEN cd_servico='99999919' THEN '1' WHEN cd_servico='99999927' THEN '2' WHEN cd_servico='99999935' THEN '3' WHEN cd_servico='99999943' THEN '4' END
	where	coalesce(ie_tipo_codigo::text, '') = '';
end if;

if (dt_versao_atual_cliente_w < to_date('09/12/2016','dd/mm/yyyy')) then
	update	pls_congenere
	set	cd_cooperativa_number	= somente_numero(cd_cooperativa)
	where	coalesce(cd_cooperativa_number::text, '') = '';
end if;

if (dt_versao_atual_cliente_w < to_date('14/12/2016','dd/mm/yyyy')) then
	update	pls_parametros
	set	ie_produto_a450	= 'NM'
	where	coalesce(ie_produto_a450::text, '') = '';

	update	pls_parametros
	set	ie_reg_ans_a450	= 'PS'
	where	coalesce(ie_reg_ans_a450::text, '') = '';
end if;

if (dt_versao_atual_cliente_w < to_date('20/02/2017','dd/mm/yyyy')) then
	update	pls_parametros
	set	ie_cnes_exec_fat	= 'CC'
	where	coalesce(ie_cnes_exec_fat::text, '') = '';
end if;

if (dt_versao_atual_cliente_w < to_date('02/03/2017','dd/mm/yyyy')) then
	update	pls_processo_interc_acao
	set	ie_valor_baixa	= 'VN'
	where	coalesce(ie_valor_baixa::text, '') = '';
end if;

if (dt_versao_atual_cliente_w < to_date('07/03/2017','dd/mm/yyyy')) then
	update	pls_processo_interc_acao
	set	ie_bloqueto	= 'N'
	where	coalesce(ie_bloqueto::text, '') = '';
end if;

if (dt_versao_atual_cliente_w < to_date('03/06/2017','dd/mm/yyyy')) then
	update	pls_oc_cta_val_exec_prest
	set	ie_tipo_profissional	= 'PE'
	where	coalesce(ie_tipo_profissional::text, '') = '';
end if;

-- ********************************************************** DOCUMENTAR ALTERAÇÕES APENAS DAQUI PARA CIMA ***************************************************
-- ********************************************************** NESTA PROCEDURE ALTERAR SOMENTE DADOS ***********************************************************
-- ********************************************************** ALTERAÇÕES DE ESTRUTURA DEVEM SER FEITAS NA *****************************************************
-- ********************************************************** TASY_PREPARAR_BASE. ************************************************************************************
-- ********************************************************** OS OBJETOS QUE ESTÃO AQUI ABAIXO SEMPRE DEVEM FICAR POR ÚLTIMO ***************************************************
-- ********************************************************************* São criados dinamicamente a cada atualização de versão ********************************************************************
--JJUNG 28/03/2013 - criar a trigger para atualizacao ou criacao de regras para geração do SIP para controle de duplicidade
begin
	CALL pls_criar_trigger_sip_regra();
exception
when others then
	null;
end;


if (dt_versao_atual_cliente_w < to_date('14/11/2014','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name	= 'PLSCOME_I4';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Tasy','drop index PLSCOME_I4');
	end if;
end if;

select	max(cd_cgc_outorgante)
into STRICT	cd_cnpj_outorgante_w
from	pls_outorgante;
--tratamento necessário para exclusão de indices na base da unimed são josé do rio preto esta situaçaõ se aplcia apenas a este cliente
if ( cd_cnpj_outorgante_w = '45100138000109') then
	begin
		select	count(1)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name	= 'PLSSOCT_UK';

		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('Tasy','Alter Table PLS_SELECAO_OCOR_CTA drop constraint PLSSOCT_UK');
			CALL exec_sql_dinamico('Tasy','drop index PLSSOCT_UK');
		end if;

		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name	= 'PLSSOCT_I10';

		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('Tasy','drop index PLSSOCT_I10');
		end if;

		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name	= 'PLSSOCT_I11';

		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('Tasy','drop index PLSSOCT_I11');
		end if;

		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name	= 'PLSSOCT_I13';

		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('Tasy','drop index PLSSOCT_I13');
		end if;

		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name	= 'PLSSOCT_I30';

		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('Tasy','drop index PLSSOCT_I30');
		end if;

		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name	= 'PLSSOCT_I6';

		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('Tasy','drop index PLSSOCT_I6');
		end if;

		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name	= 'PLSSOCT_I7';

		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('Tasy','drop index PLSSOCT_I7');
		end if;

		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name	= 'PLSSOCT_I8';

		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('Tasy','drop index PLSSOCT_I8');
		end if;

		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name	= 'PLSSOCT_I9';

		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('Tasy','drop index PLSSOCT_I9');
		end if;

	exception
	when others then
		null;
	end;
end if;

-- JJUNG 28/03/2013 - Atualizar o campo ds_contrle_regra_duplic para que seja possível identificar regras que estão duplicadas dentro da base e seja possível para o cliente identificar quais são e desativar as regras que não estão
-- no item assistencial correto;
begin
	update	sip_item_assist_regra_nv
	set	nr_sequencia = nr_sequencia;
	commit;
exception
when others then
	null;
end;

--dlehmkuhl 30/05/2014 -> para sinalizar que as views usadas para ordenação nas rotinas de valorização sejam recriadas na primeira execução logo após atualizar a versão
begin
	CALL pls_cta_consistir_pck.define_ger_view_valorizacao('S');
exception
when others then
	null;
end;

--dlehmkuhl 15/05/2014 -> Faz os devidos tratamentos para que a população inicial dos registros seja feita para as tabelas TM.
-- isso não será mais necessário quando existir o recurso de view materializada disponível
begin
	CALL pls_gerencia_inicio_tb_tm();
exception
when others then
	null;
end;

--dlehmkuhl 23/04/2014 -> cria jobs necessárias para a manutenção de tabelas de log de contas médicas
begin
	CALL pls_cria_job_cta_med();
exception
when others then
	null;
end;

commit;
-- ********************************************************** NÃO DOCUMENTAR NADA DAQUI PARA BAIXO ***************************************************
-- ********************************************************** É IMPORTANTE QUE TENHA OS LOGS CORRETOS ************************************************
-- ********************************************************** INÍCIO E FIM DESTA PROCEDURE PARA IDENTIFICAR *******************************************
-- ********************************************************** COMANDOS QUE NÃO SÃO EXECUTADOS NA ATUALIZAÇÃO DE VERSÃO ************************
-- *************************************************************************************************************************************************************
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ajustar_base_despesa ( nm_usuario_p text) FROM PUBLIC;

