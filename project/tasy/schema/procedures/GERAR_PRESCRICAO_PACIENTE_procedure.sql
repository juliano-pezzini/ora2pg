-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE colunas AS (cd_material_w		integer,
			cd_unidade_medida_w 	varchar(30),
			qt_dose_w		double precision,
			nr_seq_fabric_w		bigint,
			qt_frasco_disp_w		double precision,
			qt_perda_fornec_w		double precision);


CREATE OR REPLACE PROCEDURE gerar_prescricao_paciente ( nr_seq_atendimento_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_atendimento_p text DEFAULT NULL, ds_justificativa_p text DEFAULT NULL, ie_liberado_p text DEFAULT 'N', ds_retorno_p INOUT text DEFAULT NULL, ie_gerar_todas_prescr_p text DEFAULT 'N') AS $body$
DECLARE

					
/* vetor */

TYPE vetor IS TABLE OF colunas INDEX BY integer;

vetor_w			      vetor;
vetor_aux_w		    vetor;
cd_convenio_w		bigint;
vetor_fornecedor_w	vetor;
dt_atualizacao_w    timestamp := clock_timestamp();
dt_referencia_w		timestamp;
nr_prescricao_w		bigint;
nr_prescricao_ww		bigint;
cd_material_w              	integer;
cd_material_regra_w	integer;
ie_gerar_solucao_w		varchar(3);
ie_utiliza_intervalo_w		varchar(3);
ie_arredondar_etapas_w		varchar(3);
cd_unid_med_prescr_w       	varchar(30);
qt_dose_prescricao_w    double precision;
qt_unitaria_w   		double precision;
qt_total_dispensar_w	double precision;
qt_conversao_dose_w		double precision;
ds_orientacao_uso_w     varchar(255);
ds_recomendacao_w		varchar(4000);
ie_via_aplicacao_w      varchar(5);
ie_dias_util_medic_w	varchar(1);
ie_vincula_atend_w		varchar(5);
ie_consiste_ciclo_w		varchar(5);
ie_gerar_diluicao_w		varchar(5);
ie_define_disp_w		varchar(5);
nr_seq_material_w		bigint;
nr_seq_diluicao_w		bigint;
nr_seq_material_rec_w	bigint;
nr_seq_fabric_w		bigint;
nr_seq_fabric_ww		bigint;
nr_agrupamento_w		double precision;
nr_agrupamento_ant_w	double precision := -1;
cd_unid_med_consumo_w	varchar(30);
cd_intervalo_w             	varchar(7);
qt_minimo_multiplo_solic_w	double precision;
ie_origem_inf_w		varchar(1);
qt_min_aplicacao_w	smallint;
qt_hora_aplicacao_w	smallint;
ie_bomba_infusao_w	varchar(1);
cd_intervalo_ww		varchar(7);
nr_ocorrencia_w		double precision;
nr_ocorrencia_ww	double precision;
ie_gerar_horarios   varchar(1);
ds_horarios_w		varchar(2000);
ds_horarios2_w		varchar(2000);
cd_protocolo_w		bigint;
nr_dia_util_ww		bigint;
nr_seq_medicacao_w	integer;

nr_seq_dieta_w		integer;
nr_seq_dieta_novo_w	integer;
nr_seq_dieta_prot_w	integer;
cd_dieta_w		bigint;
ie_destino_dieta_w		varchar(2);
ie_refeicao_w		varchar(3);
ds_horarios_dieta_w	varchar(2000);
ds_observacao_dieta_w	varchar(255);
dt_primeiro_horario_w	timestamp;
dt_primeiro_horario_ww	timestamp;
dt_prescricao_w		timestamp;
dt_inicio_prescr_w	timestamp;
dt_prescricao_ww		timestamp;
dt_entrada_w		timestamp;
ie_liberado_w		varchar(1);
ie_atendimento_w		varchar(1);
nr_atendimento_w		bigint;
nr_atendimento_ww		bigint;
nr_atendimento_wwww		bigint;
cd_pessoa_fisica_w	varchar(10);
cd_pessoa_fisica_ww	varchar(10);
qt_dias_util_w		smallint;
qt_dias_util_ww		smallint;
nr_seq_interno_w		bigint;
nr_sequencia_w		integer;
qt_material_w		double precision;
ds_dose_diferenciada_w	varchar(50);
cd_unidade_medida_dose_w	varchar(30);
ds_erro_w		varchar(255);
ie_se_necessario_w	varchar(1);
ie_urgencia_w            	varchar(1);
ie_aplic_bolus_w         	varchar(1);
ie_aplic_lenta_w         	varchar(1);
ie_regra_disp_w		varchar(1);/* rafael em 15/3/8 OS86206 */
ds_observacao_w		varchar(255);
ie_gerar_prescricao_sem_data_w	varchar(1);
cd_fornec_consignado_w	varchar(14);
ie_consignado_w		varchar(1);
cd_fornecedor_w		varchar(14);
qt_estoque_consig_w	varchar(14);
ie_gerar_data_atual_w	varchar(1);
ie_gerar_lib_enf_w		varchar(1);
ie_tipo_material_w		varchar(14);
nr_seq_ficha_tecnica_w	bigint;
qt_dose_prescr_aux_w	double precision;
qt_dose_total_prescr_w	double precision;
qt_dose_regra_w		double precision;
qt_dose_total_aux_w	double precision;
qt_dose_total_aux_ww	double precision;
cont_w			bigint;
qt_registros_vetor_w	bigint;
qt_controle_w		bigint := 0;
qt_controle_ww		bigint := 0;
qt_controle_www		bigint := 0;
qt_controle_wwww		bigint := 0;
qt_perda_w		double precision;
qt_perda_2w		double precision;
qt_desconto_w		double precision;
qt_a_lancar_w		double precision;
qt_perda_final_w		double precision;
qt_perda_final_2w		double precision;
pr_desconto_w		double precision;
qt_mat_vetor_w		double precision;
x			bigint := 0;
i			bigint := 0;
k			bigint := 0;
y			bigint := 0;
cd_mat_vetor_w		bigint;
ie_reg_w			bigint;
nr_seq_medic_w		bigint;
nr_seq_proc_w		bigint;
cd_unidade_medida_consumo_w	varchar(30);
nr_seq_via_acesso_w	bigint;
ds_prim_horario_w		varchar(5);
ie_fabricante_w		varchar(5);
nr_seq_fabric_melhor_w	bigint;
qt_fornec_w		bigint;
qt_menor_perda_w		double precision;
qt_menor_frasco_w		double precision;
qt_frasco_perda_zero_w		double precision;
qt_frasco_disp_w		bigint;
ie_posicao_ultimo_w	bigint;
qt_minutos_adic_w		bigint;
cd_subgrupo_param_w	bigint;
ie_item_superior_w		varchar(10);
erro_w				varchar(2000);
cd_classe_w		bigint;
cd_subgrupo_w		bigint;
qt_medic_w		bigint;
qt_fornecedores_w	bigint;
qt_ab_w			bigint;
qt_minutos_prev_w	bigint;
dt_prevista_w		timestamp;
qt_minutos_real_w	bigint;
dt_real_w		timestamp;
nr_seq_paciente_w		bigint;
qt_reg_w		bigint;
ie_utliza_dt_atual_prescr_w	varchar(1);
ie_pre_medicacao_w		varchar(10);
ie_pre_medic_sol_w	varchar(10);
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
cd_procedimento_ww	bigint;
ie_origem_proced_ww	bigint;
nr_seq_proc_interno_w	bigint;
qt_procedimento_w	double precision;
ie_lado_w		varchar(10);
nr_seq_procedimento_w	integer;
nr_seq_solucao_w	bigint;
nr_seq_solucao_ww	bigint;
ie_tipo_dosagem_w	varchar(3);
qt_dosagem_w		double precision;
qt_solucao_total_w 	double precision;
qt_tempo_aplicacao_w	double precision;
nr_etapas_w		smallint;
nr_etapas_ww		smallint;
--ie_bomba_infusao_w	varchar2(1);
ie_esquema_alternado_w	varchar(1);
ie_calc_aut_w 		varchar(1);
ie_acm_w		varchar(1);
qt_hora_fase_w		double precision;
ds_solucao_w		varchar(100);
ds_orientacao_w		varchar(255);
--ie_se_necessario_w	varchar2(1);
ie_solucao_pca_w	varchar(1);
ie_tipo_analgesia_w	varchar(15);
ie_pca_modo_prog_w 	varchar(15);
qt_dose_inicial_pca_w	double precision;
qt_vol_infusao_pca_w	double precision;
qt_bolus_pca_w		double precision;
qt_intervalo_bloqueio_w	double precision;
qt_limite_quatro_hora_w	double precision;
qt_dose_ataque_w 	double precision;
ie_tipo_sol_w		varchar(5);
ie_agrupamento_w	bigint;
ie_regra_prescr_onc_w		varchar(3);
ie_gerar_prescr_data_atual_w	varchar(1);
ie_gerar_prescr_data_atual_ww	varchar(1) := 'N';
nr_atendimento_atual_w		bigint;
ie_agrupador_oncologia_w	smallint;
ie_gerar_reconst_w		varchar(1);
ie_atualiza_data_real_w		varchar(1);
--QT_SOLUCAO_TOTAL_w		number(15,4);
dt_fim_conta_w		timestamp;
ie_medico_w		varchar(10);
ie_setor_atendimento_padrao_w integer;
ie_prescricao_w		varchar(1);
ie_regra_w		varchar(15);
cd_medicamento_w	integer;
nr_atendimento_www	bigint;
nr_seq_atendimento_w	bigint;
nr_seq_acesso_w		bigint;
ie_agrupador_w		bigint;
qt_conversao_w		double precision;
qt_dose_w		double precision;
nr_seq_presc_material_w bigint;
ie_gera_melhor_apres_w	varchar(1);
ie_gera_prescr_dia_ant_w 	varchar(1);
ie_qtdade_ciclo_ant_w	integer;
ds_dia_ciclo_w		varchar(5);
nr_ciclo_w		integer;
ie_achou_w		boolean;
nr_seq_atendimento_aux_w	bigint;
nr_prescricao_aux_w		bigint;
dt_prev_execucao_w		timestamp;
cd_recomendacao_w		bigint;
cd_kit_w			bigint;
nr_seq_classif_w		bigint;
ie_diluicao_solucao_w	varchar(10);
nr_seq_prot_med_w		bigint;
ds_rotina_w			varchar(100);
nr_seq_ordem_adep_w		bigint;
dt_obito_w			timestamp;
ie_liberar_para_agend_w		varchar(1);
nr_seq_medic_material_w		bigint;
ds_dose_difer_w		varchar(50);
ie_gerar_kit_n_lib_prescr_w	varchar(100);
ie_calc_vol_diluicao_w		varchar(2);
cd_mat_med_w			bigint;
ie_situacao_w			varchar(1);
ds_medicamento_w		varchar(4000);
NR_SEQ_MAT_DILUICAO_w		bigint;
ie_consit_local_adm_w		varchar(1);
ie_prescr_mat_sem_lib_w		varchar(30);
ds_erro_abortar_w        varchar(2000);
ie_situacao_setor_w		varchar(1);
ie_questionar_diluicao_dose_w 	varchar(1);
qt_diluicao_w			bigint;
Var_gerar_material_dia_apli_w varchar(2);
nm_pessoa_fisica_w		varchar(255);
dt_cancelamento_w	timestamp;
ds_justificativa_w			varchar(2000);
ie_objetivo_w				varchar(1);
cd_topografia_cih_w			bigint;
cd_amostra_cih_w			bigint;
cd_microorganismo_cih_w		bigint;
ie_origem_infeccao_w		varchar(1);
ie_ctrl_medico_antimicrob_w		varchar(1);
ie_limpar_prim_hor_acm_w		varchar(2);

Var_consistir_antim_w	varchar(1);
qt_dias_solicitado_w		bigint;
nr_ciclo_solicitado_w		bigint;
QT_DIAS_ANT_MICROBIANOS_W	bigint;
cd_setor_atend_prescr_w		bigint;
qt_dias_liberado_w			bigint;
qt_total_dias_lib_w			bigint;
ie_medicacao_paciente_w		varchar(1);
ie_atualiza_dt_chegada_w	varchar(1);
nr_seq_mat_pro_w			integer;
ie_gerar_prescr_w 			varchar(1);
ie_horario_cheio_w			varchar(1);
cd_kit_material_w			paciente_atend_proc.cd_kit_material%type;
nr_seq_protocolo_w			paciente_atendimento.nr_seq_protocolo%type;
ds_possui_med_inativo_w		varchar(4000);
ie_rep_cpoe_w				parametro_medico.ie_rep_cpoe%type;
ie_gera_med_uso_w			parametro_medico.IE_GERA_MED_USO%type;
dt_validade_prescr_w		timestamp;
ie_gera_prescr_setor_atual_w	varchar(1);
cd_setor_atend_atual_w		atend_paciente_unidade.cd_setor_atendimento%type;
cd_protocolo_atual_w		prescr_material.cd_protocolo%type;
ie_gerar_adep_w				setor_atendimento.ie_adep%type;
cd_intervalo_sol_w			prescr_material.cd_intervalo%type;

nr_sequencia_med_w			paciente_medic_uso.nr_sequencia%type;
cd_material_ww				paciente_medic_uso.cd_material%type;
qt_dose_ww					paciente_medic_uso.qt_dose%type;
cd_unidade_medida_plano_ww	paciente_medic_uso.cd_unidade_medida_plano%type;
cd_intervalo_www			paciente_medic_uso.cd_intervalo%type;
ie_via_aplicacao_ww			paciente_medic_uso.ie_via_aplicacao%type;
qt_tempo_aplicacao_min_w    paciente_atend_soluc.qt_tempo_aplicacao_min%type;

mapa_diluicao_w             qt_prescr_diluicao_pck.mapa_diluicao;
nr_seq_diluicao_mapa_w      bigint;
ie_gerar_orientacao_preparo_w		varchar(1);

-- qt_prescricao
indice_saida_w				bigint;
nr_particao_medicamentos_w	bigint;
nr_particao_saida_w			bigint;

cd_mat_especifico_w			material.cd_material%type;
cd_protocolo_origem_w       protocolo_medic_material.cd_protocolo%type;

/*Variacei MD*/

sql_w       varchar(1000);
ds_lista_w  varchar(2000);

melhor_prescr_do_fabricante CURSOR FOR
SELECT		nr_sequencia,
    		nr_particao,
    		dt_criacao,
    		cd_material,
    		qt_dose,
    		cd_unidade_medida,
			qt_quantidade
from 		qt_prescricao_resultado
where		nr_particao = nr_particao_saida_w
order by 	nr_sequencia;

c01 CURSOR FOR
SELECT	a.cd_material,
	a.nr_seq_material,
	a.cd_unid_med_prescr,
	a.qt_dose_prescricao,
	b.ds_orientacao_uso,
	a.ie_via_aplicacao,
 	SUBSTR(obter_dados_material_estab(a.cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo,
      	b.qt_minimo_multiplo_solic,
	a.nr_agrupamento,
	a.ds_recomendacao,
	a.ds_observacao,
	a.nr_seq_diluicao,
	a.qt_min_aplicacao,
	a.qt_hora_aplicacao,
	a.ie_bomba_infusao,
	coalesce(a.cd_intervalo,obter_interv_prescr_padrao(cd_estabelecimento_p)),
	a.qt_dias_util,
	a.nr_seq_interno,
	a.ie_se_necessario,
	a.ie_urgencia,
	a.ie_aplic_bolus,
	a.ie_aplic_lenta,
	b.ie_tipo_material,
	a.qt_dose_prescricao,
	b.nr_seq_ficha_tecnica,
	a.nr_seq_via_acesso,
	a.ie_item_superior,
	b.cd_classe_material,
	coalesce(SUBSTR(obter_tipo_medic_soluc(a.nr_seq_atendimento,a.nr_seq_solucao),1,10),a.ie_pre_medicacao),
	a.nr_seq_solucao,
	a.ie_agrupador,
	a.ie_gerar_solucao,
	nr_seq_procedimento,
	a.NR_SEQ_PROT_MED,
	a.nr_seq_ordem_adep,
	a.nr_seq_medic_material,
	a.ds_dose_diferenciada,
	a.NR_SEQ_MAT_DILUICAO,
	a.ie_acm,
	a.ds_justificativa,
	a.ie_objetivo,
	a.cd_topografia_cih,
	a.cd_amostra_cih,
	a.cd_microorganismo_cih,
	a.ie_origem_infeccao,
	coalesce(a.ie_medicacao_paciente,'N'),
	a.nr_seq_mat_pro
FROM 	material b,
	paciente_atend_medic a
WHERE  	a.nr_seq_atendimento 	  = nr_seq_atendimento_p
AND	a.cd_material 		  = b.cd_material
AND	coalesce(a.DT_CANCELAMENTO::text, '') = ''
AND	((coalesce(a.ie_local_adm,'H')	= 'H') OR (ie_consit_local_adm_w = 'N'))
ORDER BY 	coalesce(nr_seq_medic_material,0),
			nr_seq_material;

c02 CURSOR FOR
SELECT	b.cd_material,
	obter_conversao_unid_med_onc(b.cd_material, cd_unid_med_prescr_w) qt_dose,
	SUBSTR(obter_dados_material_estab(b.cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo
FROM	material_estab c,
	material b,
	medic_ficha_tecnica a
WHERE	b.nr_seq_ficha_tecnica	= a.nr_sequencia
AND	c.cd_material		= b.cd_material
AND	c.cd_estabelecimento	= cd_estabelecimento_p
AND	a.nr_sequencia		= nr_seq_ficha_tecnica_w
AND (coalesce(ie_via_aplicacao_w::text, '') = '' or Obter_se_via_adm(b.cd_material, ie_via_aplicacao_w) = 'S')
and ((cd_mat_especifico_w IS NOT NULL AND cd_mat_especifico_w::text <> '') or obter_se_regra_mat_quimio(b.cd_material, cd_convenio_w, 'P', cd_pessoa_fisica_w, cd_material_w) = 'S')
AND	((b.cd_material		<> cd_material_w) OR (ie_define_disp_w	= 'S'))
and (coalesce(cd_mat_especifico_w::text, '') = '' or b.cd_material = cd_mat_especifico_w)
AND	((coalesce(ie_fabricante_w,'N')	= 'S') OR (b.nr_seq_fabric		= nr_seq_fabric_w))
AND	coalesce(obter_conversao_unid_med_onc(b.cd_material, cd_unid_med_prescr_w),0) > 0
AND	b.ie_situacao		= 'A'
AND	c.ie_prescricao		= 'S'
AND	obter_regra_mat_sem_apres(b.cd_material, cd_material_w, cd_convenio_w) = 'S'
and ((cd_mat_especifico_w IS NOT NULL AND cd_mat_especifico_w::text <> '') or obter_se_mat_apresent_prescr(cd_material_w, b.ie_tipo_material, cd_convenio_w, cd_estabelecimento_p) = 'S')
ORDER BY qt_dose DESC,coalesce(QT_PRIORIDADE_COML,99999);

c03 CURSOR FOR
SELECT	DISTINCT
	b.nr_seq_fabric
FROM	material_estab c,
	material b,
	medic_ficha_tecnica a
WHERE	b.nr_seq_ficha_tecnica	= a.nr_sequencia
AND	c.cd_material		= b.cd_material
AND	c.cd_estabelecimento	= cd_estabelecimento_p
AND	a.nr_sequencia		= nr_seq_ficha_tecnica_w
AND (coalesce(ie_via_aplicacao_w::text, '') = '' or Obter_se_via_adm(b.cd_material, ie_via_aplicacao_w) = 'S')
AND	coalesce(obter_conversao_unid_med_onc(b.cd_material, cd_unid_med_prescr_w),0) > 0
AND	(b.nr_seq_fabric IS NOT NULL AND b.nr_seq_fabric::text <> '')
AND	((b.cd_material		<> cd_material_w) OR (ie_define_disp_w	= 'S'))
AND	b.ie_situacao		= 'A'
AND	c.ie_prescricao		= 'S'
AND	((coalesce(ie_fabricante_w,'S')	= 'S') OR (b.nr_seq_fabric		= nr_seq_fabric_ww) or (coalesce(nr_seq_fabric_ww::text, '') = '' and ie_tipo_material_w	= '6'))
ORDER BY b.nr_seq_fabric;

c010 CURSOR FOR
SELECT	nr_seq_dieta + nr_seq_dieta_w,
	nr_seq_dieta,
 	cd_dieta,
	ie_destino_dieta,
	ie_refeicao,
	ds_horarios,
	ds_observacao,
	cd_intervalo
FROM	protocolo_medic_dieta
WHERE	cd_protocolo	 	= cd_protocolo_w
AND	nr_sequencia		= nr_seq_medicacao_w;

c000 CURSOR FOR
SELECT	a.cd_material,
 	a.nr_sequencia,
 	a.qt_unitaria,
 	a.qt_material,
 	a.ds_horarios,
 	coalesce(a.nr_ocorrencia,1),
 	a.qt_total_dispensar,
	a.ds_dose_diferenciada,
	a.cd_intervalo,
	a.ie_via_aplicacao,
	a.cd_unidade_medida_dose,
	coalesce(a.qt_dias_util,1),
	coalesce(a.ie_se_necessario,'N'),
	coalesce(a.ie_acm,'N')
FROM	material b,
	intervalo_prescricao d,
	prescr_material a,
	prescr_medica c
WHERE	a.cd_material		= b.cd_material
AND 	b.ie_tipo_material 	IN (2,3,6,1,9,0,8)
--AND	a.nr_sequencia_solucao IS NULL
AND	coalesce(a.nr_sequencia_proc::text, '') = ''
AND 	a.cd_intervalo		= d.cd_intervalo
AND	a.nr_prescricao		= c.nr_prescricao
AND	a.nr_prescricao 	= nr_prescricao_w
AND	a.ie_agrupador NOT IN (3,7,9);


c0000 CURSOR FOR
SELECT	coalesce(a.CD_MAT_SEM_APRESENT,a.cd_material),
 	MAX(a.nr_sequencia)
FROM	material b,
	intervalo_prescricao d,
	prescr_material a,
	prescr_medica c
WHERE	a.cd_material		= b.cd_material
AND 	b.ie_tipo_material 	IN (2,3,6,1)
AND	coalesce(a.nr_sequencia_solucao::text, '') = ''
AND	coalesce(a.nr_sequencia_proc::text, '') = ''
AND 	a.cd_intervalo		= d.cd_intervalo
AND	a.nr_prescricao		= c.nr_prescricao
AND	a.nr_prescricao 	= nr_prescricao_w
AND	a.ie_agrupador NOT IN (3,7,9)
GROUP BY coalesce(a.CD_MAT_SEM_APRESENT,a.cd_material);

c10 CURSOR FOR
SELECT	b.nr_sequencia,
	b.nr_agrupamento,
	b.qt_hora_aplicacao,
	b.qt_min_aplicacao,
	b.cd_intervalo,
	b.nr_ocorrencia,
	b.cd_material,
	a.dt_prescricao,
	a.dt_inicio_prescr,
	b.ie_acm,
	b.ie_se_necessario
FROM	prescr_material b,
	prescr_medica a
WHERE	a.nr_prescricao	= nr_prescricao_w
AND	a.nr_prescricao	= b.nr_prescricao
AND	b.ie_agrupador	IN (1,2)
ORDER BY b.nr_agrupamento;

C04 CURSOR FOR
	SELECT	a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_seq_proc_interno,
		a.nr_agrupamento,
		a.qt_procedimento,
		a.cd_intervalo,
		a.ie_se_necessario,
		a.ie_lado,
		a.ie_acm,
		a.NR_SEQ_PROCEDIMENTO,
		a.nr_seq_ordem_adep,
		a.cd_kit_material,
		a.ie_urgencia
	FROM	PACIENTE_ATEND_PROC a
	WHERE	a.nr_seq_atendimento = nr_seq_atendimento_p
	ORDER BY nr_agrupamento;


C05 CURSOR FOR
SELECT	a.nr_seq_solucao,
	a.nr_agrupamento,
	a.ie_tipo_dosagem,
	a.qt_dosagem,
	a.qt_solucao_total,
	a.qt_tempo_aplicacao,
	coalesce(a.nr_etapas,1),
	a.ie_bomba_infusao,
	a.ie_esquema_alternado,
	a.ie_calc_aut,
	a.ie_acm,
	coalesce(a.qt_hora_fase,a.qt_tempo_aplicacao),
	a.ds_solucao,
	a.ds_orientacao,
	a.ie_se_necessario,
	a.ie_solucao_pca,
	a.ie_tipo_analgesia,
	a.ie_pca_modo_prog,
	a.qt_dose_inicial_pca,
	a.qt_vol_infusao_pca,
	a.qt_bolus_pca,
	a.qt_intervalo_bloqueio,
	a.qt_limite_quatro_hora,
	a.qt_dose_ataque,
	a.ie_tipo_sol,
	a.cd_intervalo,
	a.ie_via_aplicacao,
	a.nr_seq_ordem_adep,
	coalesce(a.ie_pre_medicacao,'N'),
    a.qt_tempo_aplicacao_min
FROM	PACIENTE_ATEND_SOLUC a
WHERE	a.nr_seq_atendimento = nr_seq_atendimento_p
ORDER BY nr_agrupamento;


c06 CURSOR FOR
	SELECT	coalesce(SUM(coalesce(qt_solucao,0)),0),
		nr_sequencia_solucao
	FROM	prescr_material
	WHERE	nr_prescricao	= nr_prescricao_w
	AND	(nr_sequencia_solucao IS NOT NULL AND nr_sequencia_solucao::text <> '')
	GROUP BY nr_sequencia_solucao
	HAVING coalesce(SUM(coalesce(qt_solucao,0)),0)	> 0;

c07 CURSOR FOR
	SELECT	cd_material,
		qt_material,
		cd_intervalo,
		IE_VIA_APLICACAO
	FROM	qt_acesso_mat
	WHERE	nr_seq_acesso = nr_seq_acesso_w;

c08 CURSOR FOR
	SELECT	nr_seq_atendimento,
		nr_ciclo,
		ds_dia_ciclo,
		nr_prescricao
	FROM	paciente_atendimento
	WHERE	nr_seq_paciente = nr_seq_paciente_w
	AND	coalesce(dt_cancelamento::text, '') = ''
	ORDER BY nr_ciclo, somente_numero_real( ds_dia_ciclo );



C09 CURSOR FOR
	SELECT	cd_recomendacao,
			ds_recomendacao,
			cd_intervalo,
			ie_acm,
			IE_SE_NECESSARIO,
			nr_seq_classif,
			nr_seq_ordem_adep,
			cd_kit
	FROM	paciente_atend_rec
	WHERE	nr_seq_atendimento = nr_seq_atendimento_p;


c11 CURSOR FOR
	SELECT	nr_sequencia,
			nr_sequencia_solucao
	FROM	prescr_material
	WHERE	nr_prescricao	= nr_prescricao_w
	AND		(nr_sequencia_solucao IS NOT NULL AND nr_sequencia_solucao::text <> '');

C12 CURSOR FOR
	SELECT	cd_material
	FROM	paciente_atend_medic
	WHERE	nr_seq_atendimento = nr_seq_atendimento_p;

c13 CURSOR FOR
	SELECT	nr_sequencia
	FROM	prescr_material
	WHERE	nr_prescricao	= nr_prescricao_w
	AND 	coalesce(nr_sequencia_solucao::text, '') = ''
	AND 	coalesce(nr_sequencia_dieta::text, '') = ''
	AND 	coalesce(nr_sequencia_diluicao::text, '') = ''
	AND 	coalesce(cd_kit_material::text, '') = ''
	AND 	ie_agrupador = 1;

c14 CURSOR FOR
	SELECT 	nr_sequencia,
			cd_material,
	   		qt_dose,
	   		cd_unidade_medida_plano,
	   		cd_intervalo,
	   		ie_via_aplicacao
	from   	paciente_medic_uso
	where  	(cd_material IS NOT NULL AND cd_material::text <> '')
	and	   	ie_nega_medicamentos = 'N'
	and	   	coalesce(dt_inativacao::text, '') = ''
	and	   	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and	   	(((dt_inicio IS NOT NULL AND dt_inicio::text <> '') and (coalesce(dt_fim::text, '') = '')) or ((dt_inicio IS NOT NULL AND dt_inicio::text <> '') and (dt_fim >= clock_timestamp())))
	and	  	cd_pessoa_fisica = cd_pessoa_fisica_w;




BEGIN
	BEGIN

		ie_gerar_data_atual_w := obter_param_usuario(3130, 52, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_data_atual_w);
		ie_gerar_lib_enf_w := obter_param_usuario(3130, 50, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_lib_enf_w);
		ie_gerar_prescr_w := Obter_Param_Usuario(3130, 55, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_prescr_w);
		qt_minutos_adic_w := obter_param_usuario(3130, 67, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, qt_minutos_adic_w);
		cd_subgrupo_param_w := obter_param_usuario(3130, 69, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_subgrupo_param_w);
		ie_define_disp_w := obter_param_usuario(3130, 133, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_define_disp_w);
		ie_gerar_prescricao_sem_data_w := obter_param_usuario(281, 306, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_prescricao_sem_data_w);
		qt_minutos_prev_w := Obter_param_Usuario(281, 404, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, qt_minutos_prev_w);
		qt_minutos_real_w := Obter_param_Usuario(281, 944, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, qt_minutos_real_w);
		ie_utliza_dt_atual_prescr_w := Obter_param_Usuario(281, 555, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_utliza_dt_atual_prescr_w);
		ie_gerar_prescr_data_atual_w := Obter_param_Usuario(3130, 137, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_prescr_data_atual_w);
		ie_atualiza_data_real_w := Obter_param_Usuario(3130, 178, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_atualiza_data_real_w);
		ie_setor_atendimento_padrao_w := Obter_param_Usuario(3130, 193, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_setor_atendimento_padrao_w);
		ie_gera_melhor_apres_w := Obter_param_Usuario(3130, 219, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gera_melhor_apres_w);
		ie_gera_prescr_dia_ant_w := Obter_param_Usuario(281, 975, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gera_prescr_dia_ant_w);
		ie_gerar_reconst_w := Obter_param_Usuario(924, 717, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_reconst_w);
		ie_calc_vol_diluicao_w := Obter_Param_Usuario(924, 600, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_calc_vol_diluicao_w);
		ie_diluicao_solucao_w := Obter_param_Usuario(924, 601, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_diluicao_solucao_w);
		ie_liberar_para_agend_w := Obter_param_Usuario(281, 1206, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_liberar_para_agend_w);
		ie_gerar_kit_n_lib_prescr_w := Obter_param_Usuario(281, 1246, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_kit_n_lib_prescr_w);
		ie_consit_local_adm_w := obter_param_usuario(3130, 388, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consit_local_adm_w);
		ie_prescr_mat_sem_lib_w := Obter_Param_Usuario(924, 530, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_prescr_mat_sem_lib_w);
		ie_questionar_diluicao_dose_w := Obter_Param_Usuario(924, 377, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_questionar_diluicao_dose_w);
		Var_gerar_material_dia_apli_w := obter_param_usuario(281, 1322, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, Var_gerar_material_dia_apli_w);
		Var_consistir_antim_w := obter_param_usuario(281, 1465, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, Var_consistir_antim_w);
		ie_atualiza_dt_chegada_w := obter_param_usuario(3130, 483, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_atualiza_dt_chegada_w);
		ie_gera_prescr_setor_atual_w := obter_param_usuario(3130, 490, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gera_prescr_setor_atual_w);
		ie_limpar_prim_hor_acm_w := Obter_Param_Usuario(924, 445, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_limpar_prim_hor_acm_w);
		ie_horario_cheio_w := obter_param_usuario(3130, 493, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_horario_cheio_w);
		ie_gerar_orientacao_preparo_w := obter_param_usuario(3130, 505, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_orientacao_preparo_w);

		SELECT	b.cd_protocolo,
			b.nr_seq_medicacao,
			b.nr_seq_acesso,
			a.nr_seq_protocolo
		INTO STRICT	cd_protocolo_w,
			nr_seq_medicacao_w,
			nr_seq_acesso_w,
			nr_seq_protocolo_w
		FROM	paciente_setor b,
			paciente_atendimento a
		WHERE	a.nr_seq_paciente	= b.nr_seq_paciente
		AND	a.nr_seq_atendimento	= nr_seq_atendimento_p;

		cd_protocolo_atual_w	:= cd_protocolo_w;

		if (ie_setor_atendimento_padrao_w = '') then
			ie_setor_atendimento_padrao_w := null;
		end if;


		OPEN C12;
		LOOP
		FETCH C12 INTO
			cd_mat_med_w;
		EXIT WHEN NOT FOUND; /* apply on C12 */
			BEGIN
			SELECT	MAX(SUBSTR(obter_dados_material(cd_mat_med_w,'SIT'),1,1))
			INTO STRICT	ie_situacao_w
			;

			IF (ie_situacao_w = 'I') THEN

					SELECT	MAX(ds_material)
					INTO STRICT	ds_medicamento_w
					FROM	material
					WHERE	cd_material = cd_mat_med_w;

				if (ie_gerar_prescr_w = 'N') then

					CALL Wheb_mensagem_pck.exibir_mensagem_abort(214974,'DS_MED_W=' || ds_medicamento_w);
				else
					ds_possui_med_inativo_w := substr(substr(ds_possui_med_inativo_w,1,100) || ' - '||substr(ds_medicamento_w,1,200),1,2000);
				end if;
			END IF;
			END;
		END LOOP;
		CLOSE C12;

		if (ds_possui_med_inativo_w IS NOT NULL AND ds_possui_med_inativo_w::text <> '') then
			ds_retorno_p := Wheb_mensagem_pck.get_texto(214974, 'DS_MED_W=' || ds_possui_med_inativo_w);
			goto Final;
		end if;




		SELECT	COUNT(*)
		INTO STRICT	qt_reg_w
		FROM	paciente_atend_medic
		WHERE	nr_seq_atendimento	= nr_seq_atendimento_p
		AND		coalesce(dt_cancelamento::text, '') = ''
		AND		coalesce(ie_local_adm,'H')	= 'H';

			IF	(qt_reg_w	= 0 AND ie_consit_local_adm_w = 'S')THEN

				SELECT	COUNT(*)
				INTO STRICT	qt_reg_w
				FROM	paciente_atend_soluc
				WHERE	nr_seq_atendimento	= nr_seq_atendimento_p;

				IF (qt_reg_w	= 0) THEN
					SELECT	COUNT(*)
					INTO STRICT	qt_reg_w
					FROM	paciente_atend_proc
					WHERE	nr_seq_atendimento	= nr_seq_atendimento_p;

					IF (qt_reg_w	= 0) THEN
						SELECT	COUNT(*)
						INTO STRICT	qt_reg_w
						FROM	paciente_atend_rec
						WHERE	nr_seq_atendimento	= nr_seq_atendimento_p;

						IF (qt_reg_w	=0) THEN
							SELECT	COUNT(*)
							INTO STRICT	qt_reg_w
							FROM	paciente_atend_medic
							WHERE	nr_seq_atendimento	= nr_seq_atendimento_p
							AND		coalesce(dt_cancelamento::text, '') = ''
							AND		coalesce(ie_local_adm,'H')	= 'C';

							IF (qt_reg_w	> 0) THEN
								ds_retorno_p := WHEB_MENSAGEM_PCK.get_texto(922074);
								GOTO Final;
							END IF;
						END IF;

					END IF;
				END IF;

			END IF;


		nr_atendimento_atual_w	:= NULL;
		IF (coalesce(nr_atendimento_p,0)	> 0) THEN
			nr_atendimento_atual_w	:= nr_Atendimento_p;
		END IF;


		IF (qt_minutos_prev_w > 0) THEN
			SELECT	coalesce(dt_prevista,clock_timestamp())
			INTO STRICT	dt_prevista_w
			FROM	Paciente_Atendimento
			WHERE	nr_seq_atendimento = nr_seq_atendimento_p;

			IF (clock_timestamp() < (dt_prevista_w - dividir(qt_minutos_prev_w,1440))) THEN
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(176462, 'QT_MINUTOS=' || TO_CHAR(TRUNC(qt_minutos_prev_w/60)));
			END IF;
		END IF;

		IF (qt_minutos_real_w > 0) THEN
			SELECT	coalesce(dt_real,clock_timestamp())
			INTO STRICT	dt_real_w
			FROM	paciente_atendimento
			WHERE	nr_seq_atendimento = nr_seq_atendimento_p;

			IF (clock_timestamp() < (dt_real_w - dividir(qt_minutos_real_w,1440))) THEN
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(176464, 'QT_HORAS=' || TO_CHAR(TRUNC(qt_minutos_real_w/60)));
			END IF;
		END IF;

		SELECT	MAX(nr_seq_paciente)
		INTO STRICT	nr_seq_paciente_w
		FROM	paciente_atendimento
		WHERE	nr_seq_atendimento	= nr_seq_atendimento_p;

		CALL Abortar_Se_Protoc_Inativo(nr_seq_paciente_w);

		IF (ie_gera_prescr_dia_ant_w = 'S' and coalesce(ie_gerar_todas_prescr_p, 'N') = 'N') THEN
			SELECT 	ds_dia_ciclo
			INTO STRICT	ds_dia_ciclo_w
			FROM	paciente_atendimento
			WHERE	nr_seq_atendimento = nr_seq_atendimento_p;

			SELECT 	nr_ciclo
			INTO STRICT	nr_ciclo_w
			FROM	paciente_atendimento
			WHERE	nr_seq_atendimento = nr_seq_atendimento_p;
			/*

			select 	count(*)
			into	ie_qtdade_ciclo_ant_w
			from	paciente_atendimento
			where	nr_seq_paciente = nr_seq_paciente_w
			and	nr_prescricao is null
			and	((nr_ciclo	< nr_ciclo_w) or
				(nr_ciclo 	= nr_ciclo_w and somente_numero(ds_dia_ciclo) < somente_numero(ds_dia_ciclo_w)));


			if	(ie_qtdade_ciclo_ant_w > 0) then
			end if;*/
			OPEN C08;
			LOOP
			FETCH C08 INTO
				nr_seq_atendimento_aux_w,
				nr_ciclo_w,
				ds_dia_ciclo_w,
				nr_prescricao_aux_w;
			EXIT WHEN NOT FOUND; /* apply on C08 */
				BEGIN

				IF (nr_seq_atendimento_aux_w	= nr_seq_atendimento_p) THEN
					EXIT;
				END IF;

				IF (coalesce(nr_prescricao_aux_w::text, '') = '') THEN
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(176471, 'NR_CICLO=' || nr_ciclo_w || ';DS_DIA=' || ds_dia_ciclo_w);
				END IF;

				END;
			END LOOP;
			CLOSE C08;


		END IF;

		UPDATE	paciente_atendimento
		SET	dt_real = clock_timestamp()
		WHERE	nr_seq_atendimento 	= nr_seq_atendimento_p
		AND	coalesce(dt_real::text, '') = ''
		AND	ie_gerar_prescricao_sem_data_w = 'S';

		-- obter ie_origem_inf se e medico ou nao
		SELECT 	coalesce(MAX('1'),'3')
		INTO STRICT	ie_origem_inf_w
		FROM	medico b,
			usuario a
		WHERE 	a.nm_usuario		= nm_usuario_p
		  AND	a.cd_pessoa_fisica	= b.cd_pessoa_fisica;

		ie_liberado_w := obter_param_usuario(281, 82, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_liberado_w);
		ie_atendimento_w := obter_param_usuario(281, 117, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_atendimento_w);
		ie_vincula_atend_w := obter_param_usuario(281, 247, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_vincula_atend_w);


			SELECT	b.cd_pessoa_fisica,
				a.nr_atendimento
			INTO STRICT	cd_pessoa_fisica_w,
				nr_atendimento_w
			FROM	paciente_setor b,
				paciente_atendimento a
			WHERE	a.nr_seq_atendimento = nr_seq_atendimento_p
			AND	a.nr_seq_paciente = b.nr_seq_paciente;


		IF (ie_atendimento_w = 'S') THEN

				IF (ie_vincula_atend_w = 'V') THEN
					SELECT	coalesce(a.dt_real, a.dt_prevista)
					INTO STRICT	dt_referencia_w
					FROM	paciente_atendimento a
					WHERE	a.nr_seq_atendimento	= nr_seq_atendimento_p;
					nr_atendimento_ww := obter_ult_laudo_vigente(cd_pessoa_fisica_w,dt_referencia_w);
				ELSIF (ie_vincula_atend_w	= 'A') THEN
					nr_atendimento_ww	:= coalesce(nr_atendimento_atual_w,obter_ultimo_atendimento(cd_pessoa_fisica_w));
				ELSIF (ie_vincula_atend_w	= 'AI') AND (obter_tipo_atendimento(nr_atendimento_atual_w) = 1) THEN
					nr_atendimento_ww	:= nr_atendimento_atual_w;
				ELSIF (ie_vincula_atend_w	= 'AT') THEN
					nr_atendimento_ww	:= nr_atendimento_w;	
				ELSIF (ie_vincula_atend_w	= 'VA') THEN
					nr_atendimento_ww	:= coalesce(obter_ult_laudo_vigente(cd_pessoa_fisica_w,dt_referencia_w),obter_ultimo_atendimento(cd_pessoa_fisica_w));
				ELSIF (ie_vincula_atend_w	= 'UA') THEN
					SELECT	MAX(nr_Atendimento)
					INTO STRICT	nr_atendimento_ww
					FROM	atendimento_paciente
					WHERE	cd_pessoa_fisica	= cd_pessoa_fisica_w
					AND	coalesce(dt_alta::text, '') = '';
				ELSIF (ie_vincula_atend_w	= 'VAA') THEN
					nr_atendimento_ww	:= Obter_atend_laudo_vigente(cd_pessoa_fisica_w,dt_referencia_w,1,'S','S');
				ELSIF (ie_vincula_atend_w = 'UAT') THEN
					SELECT	MAX(c.nr_atendimento)
					INTO STRICT	nr_atendimento_ww
					FROM	paciente_atendimento a,
							paciente_setor b,
							atendimento_paciente c
					WHERE	a.nr_seq_paciente = b.nr_seq_paciente
					AND		a.nr_atendimento = c.nr_atendimento
					AND		b.IE_STATUS = 'A'
					AND		coalesce(c.dt_alta::text, '') = ''
					AND		c.cd_pessoa_fisica = cd_pessoa_fisica_w;
				ELSE
					SELECT	MAX(nr_atendimento)
					INTO STRICT	nr_atendimento_ww
					FROM	sus_laudo_paciente
					WHERE	nr_seq_interno	= (	SELECT	MAX(b.nr_seq_interno)
									FROM	sus_laudo_paciente b,
										atendimento_paciente a
									WHERE	a.nr_atendimento	= b.nr_atendimento
									AND	a.cd_pessoa_fisica	= cd_pessoa_fisica_w
									AND	b.ie_classificacao	= 11);
				END IF;
			nr_atendimento_w	:= coalesce(nr_atendimento_ww,nr_atendimento_w);
		END IF;

		SELECT	MAX(dt_fim_conta)
		INTO STRICT	dt_fim_conta_w
		FROM	atendimento_paciente
		WHERE	nr_atendimento = nr_atendimento_ww;

		IF (dt_fim_conta_w IS NOT NULL AND dt_fim_conta_w::text <> '') THEN
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(176475, 'NR_ATENDIMENTO=' || nr_atendimento_ww);
		END IF;



		SELECT	MAX(nr_prescricao)
		INTO STRICT	nr_prescricao_ww
		FROM	paciente_atendimento
		WHERE	nr_seq_atendimento	= nr_seq_atendimento_p;


		IF (nr_prescricao_ww IS NOT NULL AND nr_prescricao_ww::text <> '') THEN
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(176479, 'NR_PRESCRICAO=' || nr_prescricao_ww);
		END IF;

		SELECT	MAX(dt_cancelamento)
		INTO STRICT	dt_cancelamento_w
		FROM	paciente_atendimento
		WHERE	nr_seq_atendimento	= nr_seq_atendimento_p;

		IF (dt_cancelamento_w IS NOT NULL AND dt_cancelamento_w::text <> '') THEN
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(293734);
		END IF;

		SELECT	nextval('prescr_medica_seq')
		INTO STRICT	nr_prescricao_w
		;

		SELECT	coalesce(MAX(ie_regra_prescr_onc),'U'),
				coalesce(max(ie_rep_cpoe),'N'),
				coalesce(max(ie_gera_med_uso),'N')
		INTO STRICT	ie_regra_prescr_onc_w,
				ie_rep_cpoe_w,
				ie_gera_med_uso_w
		FROM	parametro_medico
		WHERE	cd_estabelecimento	= cd_estabelecimento_p;

		SELECT	coalesce(MAX(dt_prevista),clock_timestamp())
		INTO STRICT	dt_prevista_w
		FROM	Paciente_Atendimento
		WHERE	nr_seq_atendimento = nr_seq_atendimento_p;

		IF (pkg_date_utils.get_time(dt_prevista_w,0,0,0) > pkg_date_utils.get_time(clock_timestamp(),0,0,0))  AND (ie_gerar_prescr_data_atual_w = 'S') THEN
			IF (ie_atualiza_data_real_w = 'S') THEN
				UPDATE	paciente_atendimento
				SET	dt_real = dt_prevista
				WHERE	nr_seq_atendimento 	= nr_seq_atendimento_p
				AND	coalesce(dt_real::text, '') = '';
			END IF;

			ie_gerar_prescr_data_atual_ww	:= 'S';
		END IF;

		SELECT 	MAX(dt_entrada)
		INTO STRICT	dt_entrada_w
		FROM atendimento_paciente
		WHERE nr_atendimento = nr_atendimento_w;

		dt_prescricao_ww := clock_timestamp();

		IF (dt_entrada_w IS NOT NULL AND dt_entrada_w::text <> '' AND dt_entrada_w > dt_prescricao_ww) THEN
			dt_prescricao_ww := dt_entrada_w;
		END IF;


		CALL Consiste_Prescr_Oncologia(cd_pessoa_fisica_w,nr_seq_atendimento_p,nr_prescricao_w,nm_usuario_p);


		SELECT	MAX(dt_obito),
				MAX(SUBSTR(OBTER_NOME_PF(c.cd_pessoa_fisica), 0, 255))
		INTO STRICT	dt_obito_w,
				nm_pessoa_fisica_w
		FROM	pessoa_fisica a,
				paciente_atendimento b,
				paciente_setor c
		WHERE	a.cd_pessoa_fisica	= c.cd_pessoa_fisica
		AND		b.nr_seq_paciente = c.nr_seq_paciente
		AND		b.nr_seq_atendimento = nr_seq_atendimento_p;

		 IF (dt_obito_w IS NOT NULL AND dt_obito_w::text <> '') THEN
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(176480,'NM_PACIENTE='||nm_pessoa_fisica_w);
		 END IF;


		IF (coalesce(ie_setor_atendimento_padrao_w,0) > 0) THEN
			SELECT	coalesce(MAX(ie_situacao),'A')
			INTO STRICT	ie_situacao_setor_w
			FROM	setor_atendimento
			WHERE	cd_setor_atendimento = ie_setor_atendimento_padrao_w;
		ELSE
			SELECT	coalesce(MAX(c.ie_situacao),'A')
			INTO STRICT	ie_situacao_setor_w
			FROM	setor_atendimento c,
				paciente_atendimento a,
				paciente_setor b
			WHERE	a.nr_seq_atendimento 	= nr_seq_atendimento_p
			AND	a.nr_seq_paciente   	= b.nr_seq_paciente
			AND	b.cd_setor_atendimento	= c.cd_setor_atendimento;
		END IF;

		IF (ie_situacao_setor_w = 'I') THEN
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(254681);
		END IF;


		SELECT MAX(cd_setor_atendimento)
		INTO STRICT cd_setor_atend_atual_w
		FROM atend_paciente_unidade
		WHERE nr_seq_interno = Obter_Atepacu_paciente(nr_atendimento_p,'A');

		ie_gerar_adep_w := null;
		if (coalesce(ie_setor_atendimento_padrao_w, 0) > 0) then
			select 	max(ie_adep)
			into STRICT	ie_gerar_adep_w
			from 	setor_atendimento
			where 	cd_setor_atendimento = ie_setor_atendimento_padrao_w;		
		elsif (ie_gera_prescr_setor_atual_w = 'S') then 	
			select 	max(ie_adep)
			into STRICT	ie_gerar_adep_w
			from 	setor_atendimento
			where 	cd_setor_atendimento = cd_setor_atend_atual_w;	
		end if;	

		SELECT MAX(cd_setor_atendimento)
		INTO STRICT cd_setor_atend_atual_w
		FROM atend_paciente_unidade
		WHERE nr_seq_interno = Obter_Atepacu_paciente(nr_atendimento_p,'A')
		and nr_atendimento = nr_atendimento_p
		and  ((ie_gera_prescr_setor_atual_w	= 'S') or ((ie_gera_prescr_setor_atual_w	= 'I') and (Obter_Se_Atend_Internado(nr_atendimento_p) = 'S')));

		INSERT INTO prescr_medica(
			nr_prescricao,
			cd_pessoa_fisica,
			nr_atendimento,
			cd_medico,
			dt_prescricao,
			--dt_liberacao,

			--dt_liberacao_medico,
			dt_atualizacao,
			nm_usuario,
			nm_usuario_original,
			nr_horas_validade,
			dt_primeiro_horario,
			cd_setor_atendimento,
			cd_setor_entrega,
			ie_origem_inf,
			ie_recem_nato,
			cd_estabelecimento,
			cd_prescritor,
			ie_adep,
			nr_seq_atend,
			QT_PESO,
			QT_ALTURA_CM,
			cd_funcao_origem)
		SELECT	nr_prescricao_w,
				b.cd_pessoa_fisica,
			CASE WHEN ie_atendimento_w='S' THEN nr_atendimento_w  ELSE NULL END ,
			b.cd_medico_resp,
			--   Este decode foi alterado pois estava dando conflito quando a data de saida do setor antigo do paciente para o novo

			--   Decode anterior:	DECODE(ie_gerar_prescr_data_atual_ww,'S',dt_prevista_w, DECODE(ie_utliza_dt_atual_prescr_w,'S',dt_prescricao_ww,NVL(a.dt_real, a.dt_prevista))),

			--DECODE(ie_gerar_prescr_data_atual_ww,'S',dt_prevista_w, decode(trunc(NVL(a.dt_real, a.dt_prevista)), trunc(dt_prescricao_ww), dt_prescricao_ww, NVL(a.dt_real, a.dt_prevista))),
			CASE WHEN ie_horario_cheio_w='N' THEN  CASE WHEN ie_gerar_prescr_data_atual_ww='S' THEN dt_prevista_w  ELSE CASE WHEN ie_utliza_dt_atual_prescr_w='S' THEN dt_prescricao_ww  ELSE coalesce(a.dt_real, a.dt_prevista) END  END   ELSE CASE WHEN ie_gerar_prescr_data_atual_ww='S' THEN TO_DATE( TO_CHAR(dt_prevista_w, 'dd/mm yyyy hh24' ), 'dd/mm/yyyy hh24:mi:ss' )  ELSE CASE WHEN ie_utliza_dt_atual_prescr_w='S' THEN TO_DATE( TO_CHAR(dt_prescricao_ww, 'dd/mm yyyy hh24' ), 'dd/mm/yyyy hh24:mi:ss' )  ELSE coalesce(TO_DATE( TO_CHAR(a.dt_real, 'dd/mm yyyy hh24' ), 'dd/mm/yyyy hh24:mi:ss' ), TO_DATE( TO_CHAR(a.dt_prevista, 'dd/mm yyyy hh24' ), 'dd/mm/yyyy hh24:mi:ss' )) END  END  END ,	
			dt_atualizacao_w,
			nm_usuario_p,
			nm_usuario_p,
			24,
			CASE WHEN ie_horario_cheio_w='N' THEN CASE WHEN ie_gerar_prescr_data_atual_ww='S' THEN dt_prevista_w  ELSE CASE WHEN ie_utliza_dt_atual_prescr_w='S' THEN dt_prescricao_ww  ELSE coalesce(a.dt_real, a.dt_prevista) END  END   ELSE CASE WHEN ie_gerar_prescr_data_atual_ww='S' THEN TO_DATE( TO_CHAR(dt_prevista_w, 'dd/mm yyyy hh24' ), 'dd/mm/yyyy hh24:mi:ss' )  ELSE CASE WHEN ie_utliza_dt_atual_prescr_w='S' THEN TO_DATE( TO_CHAR(dt_prescricao_ww, 'dd/mm yyyy hh24' ), 'dd/mm/yyyy hh24:mi:ss' )  ELSE coalesce(TO_DATE( TO_CHAR(a.dt_real, 'dd/mm yyyy hh24' ), 'dd/mm/yyyy hh24:mi:ss' ), TO_DATE( TO_CHAR(a.dt_prevista, 'dd/mm yyyy hh24' ), 'dd/mm/yyyy hh24:mi:ss' )) END  END  END ,
			coalesce(ie_setor_atendimento_padrao_w,CASE WHEN coalesce(ie_gera_prescr_setor_atual_w,'N')='N' THEN c.cd_setor_atendimento  ELSE cd_setor_atend_atual_w END ),
			coalesce(ie_setor_atendimento_padrao_w,CASE WHEN coalesce(ie_gera_prescr_setor_atual_w,'N')='N' THEN c.cd_setor_atendimento  ELSE cd_setor_atend_atual_w END ),
			ie_origem_inf_w,
			'N',
			cd_estabelecimento_p,
			CASE WHEN ie_regra_prescr_onc_w='U' THEN Obter_Dados_Usuario_Opcao(nm_usuario_p,'C')  ELSE b.cd_medico_resp END ,
			CASE WHEN coalesce(ie_setor_atendimento_padrao_w, 0)=0 THEN  CASE WHEN ie_gera_prescr_setor_atual_w='S' THEN  ie_gerar_adep_w  ELSE c.ie_adep END   ELSE ie_gerar_adep_w END ,
			nr_seq_atendimento_p,
			coalesce(a.qt_peso,b.qt_peso),
			coalesce(a.QT_ALTURA,b.QT_ALTURA),
			281
		FROM	setor_atendimento c,
			paciente_atendimento a,
			paciente_setor b
		WHERE	a.nr_seq_atendimento 	= nr_seq_atendimento_p
		AND	a.nr_seq_paciente   	= b.nr_seq_paciente
		AND	b.cd_setor_atendimento	= c.cd_setor_atendimento;

		UPDATE	paciente_atendimento
		SET	nr_prescricao = nr_prescricao_w,
			dt_geracao_prescricao = clock_timestamp()
		WHERE	nr_seq_atendimento = nr_seq_atendimento_p;

		COMMIT;

		cd_intervalo_w := obter_param_usuario(924, 41, 0, nm_usuario_p, cd_estabelecimento_p, cd_intervalo_w);

		SELECT	dt_primeiro_horario,
			dt_prescricao,
			dt_validade_prescr
		INTO STRICT	dt_primeiro_horario_w,
			dt_prescricao_w,
			dt_validade_prescr_w
		FROM	prescr_medica
		WHERE	nr_prescricao = nr_prescricao_w;

		IF (dt_primeiro_horario_w < clock_timestamp()) THEN
			dt_primeiro_horario_w	:= clock_timestamp();
			dt_prescricao_w		:= clock_timestamp();
		END IF;

		CALL Consistir_Medic_sem_apresent(nr_seq_atendimento_p);

		ie_utiliza_intervalo_w := obter_param_usuario(924, 590, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_utiliza_intervalo_w);
		ie_arredondar_etapas_w := obter_param_usuario(924, 742, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_arredondar_etapas_w);

		SELECT	MAX(dt_inicio_prescr)
		INTO STRICT	dt_inicio_prescr_w
		FROM	prescr_medica
		WHERE	nr_prescricao = nr_prescricao_w;

		OPEN C04;
		LOOP
		FETCH C04 INTO
			cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_proc_interno_w,
			nr_agrupamento_w,
			qt_procedimento_w,
			cd_intervalo_w,
			ie_se_necessario_w,
			ie_lado_w,
			ie_acm_w,
			nr_seq_proc_w,
			nr_seq_ordem_adep_w,
			cd_kit_material_w,
			ie_urgencia_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			BEGIN
		/*
			SELECT	NVL(MAX(nr_sequencia),0) +1
			INTO	nr_seq_proc_w
			FROM	prescr_procedimento
			WHERE	nr_prescricao	= nr_prescricao_w;*/
			IF (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') THEN
				SELECT * FROM obter_proc_tab_interno(	nr_seq_proc_interno_w, nr_prescricao_w, nr_atendimento_w, NULL, cd_procedimento_ww, ie_origem_proced_ww, NULL, NULL) INTO STRICT cd_procedimento_ww, ie_origem_proced_ww;

			IF (coalesce(cd_procedimento_ww,0)	> 0) THEN
				cd_procedimento_w	:= cd_procedimento_ww;
				ie_origem_proced_w	:= ie_origem_proced_ww;
			END IF;
			END IF;

			dt_prev_execucao_w	:= Obter_Horario_Proced_interv(cd_intervalo_w,nr_prescricao_w,dt_inicio_prescr_w,dt_inicio_prescr_w);

			SELECT * FROM calcular_horario_prescricao(nr_prescricao_w, cd_intervalo_w, coalesce(dt_primeiro_horario_w,dt_prescricao_w), dt_primeiro_horario_w, 24, cd_procedimento_w, 0, 0, nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'N', NULL, 'S', cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;
			ds_horarios_w		:= ds_horarios_w || ds_horarios2_w;

			INSERT INTO prescr_procedimento(
					nr_prescricao,
					nr_sequencia,
					cd_procedimento,
					ie_origem_proced,
					qt_procedimento,
					dt_atualizacao,
					nm_usuario,
					nr_seq_proc_interno,
					nr_agrupamento,
					cd_intervalo,
					ie_se_necessario,
					ie_lado,
					IE_ORIGEM_INF,
					ie_suspenso,
					cd_motivo_baixa,
					ie_acm,
					dt_prev_execucao,
					ds_horarios,
					nr_seq_ordem_adep,
					ie_urgencia)
			VALUES (	nr_prescricao_w,
					nr_seq_proc_w,
					cd_procedimento_w,
					ie_origem_proced_w,
					qt_procedimento_w,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_proc_interno_w,
					nr_agrupamento_w,
					cd_intervalo_w,
					ie_se_necessario_w,
					ie_lado_w,
					IE_ORIGEM_INF_w,
					'N',
					0,
					ie_acm_w,
					dt_prev_execucao_w,
					ds_horarios_w,
					nr_seq_ordem_adep_w,
					ie_urgencia_w);

				if (coalesce(cd_kit_material_w,0) > 0) then			
					CALL Gerar_Kit_Proced_manual(cd_estabelecimento_p, nr_prescricao_w, nr_seq_proc_w, cd_kit_material_w, nm_usuario_p);	
				end if;

				IF (ie_prescr_mat_sem_lib_w = 'S') THEN
					CALL Gerar_prescr_proc_sem_dt_lib(nr_prescricao_w,nr_seq_proc_w,obter_perfil_ativo,'N',nm_usuario_p);
				END IF;
			END;
		END LOOP;
		CLOSE C04;


		OPEN C05;
		LOOP
		FETCH C05 INTO
			nr_seq_solucao_w,
			nr_agrupamento_w,
			ie_tipo_dosagem_w,
			qt_dosagem_w,
			qt_solucao_total_w,
			qt_tempo_aplicacao_w,
			nr_etapas_w,
			ie_bomba_infusao_w,
			ie_esquema_alternado_w,
			ie_calc_aut_w,
			ie_acm_w,
			qt_hora_fase_w,
			ds_solucao_w,
			ds_orientacao_w,
			ie_se_necessario_w,
			ie_solucao_pca_w,
			ie_tipo_analgesia_w,
			ie_pca_modo_prog_w,
			qt_dose_inicial_pca_w,
			qt_vol_infusao_pca_w,
			qt_bolus_pca_w,
			qt_intervalo_bloqueio_w,
			qt_limite_quatro_hora_w,
			qt_dose_ataque_w,
			ie_tipo_sol_w,
			cd_intervalo_w,
			ie_via_aplicacao_w,
			nr_seq_ordem_adep_w,
			ie_pre_medic_sol_w,
            qt_tempo_aplicacao_min_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			BEGIN
			nr_etapas_ww := nr_etapas_w;
			IF (ie_utiliza_intervalo_w = 'S') AND (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') THEN
				SELECT * FROM Calcular_etapas_interv_solucao(cd_intervalo_w, qt_tempo_aplicacao_w, ie_arredondar_etapas_w, qt_hora_fase_w, nr_etapas_w, NULL, NULL) INTO STRICT qt_hora_fase_w, nr_etapas_w;
				IF (coalesce(nr_etapas_w,0) = 0) THEN
					nr_etapas_w  := nr_etapas_ww;
				END IF;
			END IF;
			
			 SELECT * FROM calcular_horario_prescricao(nr_prescricao_w, cd_intervalo_w, coalesce(dt_primeiro_horario_ww, dt_prescricao_w), dt_primeiro_horario_w, 24, null, 0, 0, nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'S', NULL, null, null, NULL, null, null, null, 'hh24:mi') INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;
												
			ds_horarios_w		:= ds_horarios_w || ds_horarios2_w;

			INSERT INTO prescr_solucao(
				nr_prescricao,
				nr_seq_solucao,
				ie_via_aplicacao,
				dt_atualizacao,
				nm_usuario,
				cd_unidade_medida,
				ie_tipo_dosagem,
				qt_dosagem,
				qt_solucao_total,
				qt_tempo_aplicacao,
				qt_volume,
				nr_etapas,
				ie_bomba_infusao,
				ie_suspenso,
					nr_agrupamento,
				ie_esquema_alternado,
				ie_calc_aut,
				ie_acm,
				qt_hora_fase,
				ds_horarios,
				hr_prim_horario,
				ie_urgencia,
				ds_solucao,
				ie_solucao_especial,
				ie_solucao_pca,
				ie_tipo_analgesia,
				ie_pca_modo_prog,
				qt_dose_inicial_pca,
				qt_vol_infusao_pca,
				qt_bolus_pca,
				qt_intervalo_bloqueio,
				qt_limite_quatro_hora,
				qt_dose_ataque,
				IE_SE_NECESSARIO,
				DS_ORIENTACAO,
				ie_tipo_sol,
				cd_intervalo,
				nr_seq_ordem_adep,
				ie_pre_medicacao,
                qt_tempo_infusao,
                qt_hora_infusao)
			VALUES (
				nr_prescricao_w,
				nr_seq_solucao_w,
				coalesce(ie_via_aplicacao_w,substr(obter_via_usuario('IV'),1,255)),
				clock_timestamp(),
				nm_usuario_p,
				substr(obter_unid_med_usua('ml'),1,255),
				ie_tipo_dosagem_w,
				qt_dosagem_w,
				qt_solucao_total_w,
				qt_tempo_aplicacao_w,
				0,
				nr_etapas_w,
				ie_bomba_infusao_w,
				'N',
				nr_agrupamento_w ,
				ie_esquema_alternado_w,
				ie_calc_aut_w,
				ie_acm_w,
				qt_hora_fase_w,
				ds_horarios_w,
				NULL,
				'N',
				ds_solucao_W,
				'N',
				ie_solucao_pca_w,
				ie_tipo_analgesia_w,
				ie_pca_modo_prog_w,
				qt_dose_inicial_pca_w,
				qt_vol_infusao_pca_w,
				qt_bolus_pca_w,
				qt_intervalo_bloqueio_w,
				qt_limite_quatro_hora_w,
				qt_dose_ataque_w,
				ie_se_necessario_w,
				ds_orientacao_w,
				ie_tipo_sol_w,
				cd_intervalo_w,
				nr_seq_ordem_adep_w,
				ie_pre_medic_sol_w,
                qt_tempo_aplicacao_min_w,
                qt_tempo_aplicacao_w);

			IE_SE_NECESSARIO_w	:= IE_SE_NECESSARIO_w;

			END;
		END LOOP;
		CLOSE C05;


		OPEN c01;
		LOOP
		FETCH c01 INTO
			cd_material_w,
			nr_seq_material_w,
			cd_unid_med_prescr_w,
			qt_dose_prescricao_w,
			ds_orientacao_uso_w,
			ie_via_aplicacao_w,
			cd_unid_med_consumo_w,
			qt_minimo_multiplo_solic_w,
			nr_agrupamento_w,
			ds_recomendacao_w,
			ds_observacao_w,
			nr_seq_diluicao_w,
			qt_min_aplicacao_w,
			qt_hora_aplicacao_w,
			ie_bomba_infusao_w,
			cd_intervalo_ww,
			qt_dias_util_w,
			nr_seq_interno_w,
			ie_se_necessario_w,
			ie_urgencia_w,
			ie_aplic_bolus_w,
			ie_aplic_lenta_w,
			ie_tipo_material_w,
			qt_dose_total_prescr_w,
			nr_seq_ficha_tecnica_w,
			nr_seq_via_acesso_w,
			ie_item_superior_w,
			cd_classe_w,
			ie_pre_medicacao_w,
			nr_seq_solucao_w,
			ie_agrupador_oncologia_w,
			ie_gerar_solucao_w,
			nr_seq_proc_w,
			nr_seq_prot_med_w,
			nr_seq_ordem_adep_w,
			nr_seq_medic_material_w,
			ds_dose_difer_w,
			NR_SEQ_MAT_DILUICAO_w,
			ie_acm_w,
			ds_justificativa_w,
			ie_objetivo_w,
			cd_topografia_cih_w,
			cd_amostra_cih_w,
			cd_microorganismo_cih_w,
			ie_origem_infeccao_w,
			ie_medicacao_paciente_w,
			nr_seq_mat_pro_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			BEGIN
			if (coalesce(nr_seq_prot_med_w::text, '') = '') then
				CD_PROTOCOLO_W := null;
			else
					begin
					select	cd_protocolo,
						nr_sequencia,
						nr_seq_material
							into STRICT	cd_protocolo_origem_w,
						nr_seq_medicacao_w,
						nr_seq_mat_pro_w
					from    protocolo_medic_material b
					where   b.nr_seq_interno = nr_seq_prot_med_w;
				exception
				when no_data_found then
					cd_protocolo_origem_w := null;
					nr_seq_medicacao_w := null;
					nr_seq_mat_pro_w := null;
				end;

				cd_protocolo_w := coalesce(cd_protocolo_origem_w, cd_protocolo_atual_w);
			end if;

			ie_agrupamento_w	:= 1;
			nr_ocorrencia_w		:= Obter_ocorrencia_intervalo(cd_intervalo_ww,24,'O');
			nr_seq_solucao_ww	:= NULL;

			SELECT	MAX(b.cd_pessoa_fisica)
			INTO STRICT	cd_pessoa_fisica_ww
			FROM	paciente_setor b,
				paciente_atendimento a
			WHERE	a.nr_seq_atendimento = nr_seq_atendimento_p
			AND	a.nr_seq_paciente = b.nr_seq_paciente;

			SELECT 	MAX(nr_Atendimento)
			INTO STRICT	nr_atendimento_www
			FROM 	atendimento_paciente
			WHERE 	cd_pessoa_fisica = cd_pessoa_fisica_ww
			AND 	coalesce(dt_alta::text, '') = '';

			IF (nr_seq_diluicao_w IS NOT NULL AND nr_seq_diluicao_w::text <> '') THEN
				ie_agrupamento_w	:= 3;
			ELSIF (nr_seq_solucao_w IS NOT NULL AND nr_seq_solucao_w::text <> '') OR (ie_gerar_solucao_w	= 'S') THEN
				ie_agrupamento_w	:= 4;
			ELSIF (nr_seq_proc_w IS NOT NULL AND nr_seq_proc_w::text <> '') THEN
				ie_agrupamento_w	:= 5;
			ELSIF (nr_seq_medic_material_w IS NOT NULL AND nr_seq_medic_material_w::text <> '') OR (ie_tipo_material_w	= 1)THEN
				ie_agrupamento_w	:= 2;
			END IF;

			IF (ie_agrupador_oncologia_w = 9) THEN
				ie_agrupamento_w	:= 9;
			END IF;

			IF (ie_tipo_material_w = '6') AND (ie_agrupamento_w <> 4) AND (coalesce(nr_seq_diluicao_w::text, '') = '') AND (coalesce(nr_seq_medic_material_w::text, '') = '') AND (ie_gera_melhor_apres_w = 'S') THEN
				ie_agrupamento_w	:= 1;
			END IF;

			qt_dias_util_ww		:= qt_dias_util_w;
			IF (coalesce(qt_dias_util_w::text, '') = '') OR (qt_dias_util_w < 1) THEN
				qt_dias_util_ww		:= 1;
			END IF;
			IF (cd_intervalo_ww = '') OR (coalesce(cd_intervalo_ww::text, '') = '') THEN
				cd_intervalo_ww	:= cd_intervalo_w;
			END IF;

			IF (coalesce(nr_seq_solucao_w::text, '') = '') AND (ie_gerar_solucao_w = 'S') AND (nr_seq_solucao_ww IS NOT NULL AND nr_seq_solucao_ww::text <> '') THEN
				nr_seq_solucao_w	:= nr_seq_solucao_ww;
			END IF;


			IF (ie_gerar_solucao_w = 'S') AND (coalesce(nr_seq_solucao_ww::text, '') = '') AND (coalesce(nr_seq_solucao_w::text, '') = '')THEN

				SELECT	coalesce(MAX(nr_seq_solucao),0) + 1
				INTO STRICT	nr_seq_solucao_w
				FROM	prescr_solucao
				WHERE	nr_prescricao = nr_prescricao_w;
				nr_seq_solucao_ww	:= nr_seq_solucao_w;
				--- Inicio MD 1

				/*
				SELECT	SUM(obter_conversao_ml(cd_material, qt_dose_prescricao, cd_unid_med_prescr))
				INTO	qt_solucao_total_w
				FROM 	paciente_atend_medic a
				WHERE  	a.nr_seq_atendimento 	= nr_seq_atendimento_p
				AND	ie_gerar_solucao	= 'S';
				*/
				for i in (SELECT obter_conversao_ml(cd_material, qt_dose_prescricao, cd_unid_med_prescr) as qt_solucao
							from paciente_atend_medic a
						   where a.nr_seq_atendimento = nr_seq_atendimento_p
							 and ie_gerar_solucao = 'S')
				loop
				  if coalesce(ds_lista_w::text, '') = '' then
                    ds_lista_w := coalesce(i.qt_solucao, 0);
				  else
					ds_lista_w := ds_lista_w || '@' || coalesce(i.qt_solucao, 0);
				  end if;
				end loop;

				begin
				  sql_w := 'call prescricao_paciente_pck_md.calcular_solucao_total_md(:1, :2) into :qt_solucao_total_w';
				  EXECUTE sql_w using in ds_lista_w, in '@', out qt_solucao_total_w;
				exception
				  when others then
				    qt_solucao_total_w := null;
				end;
				--- Fim MD 1
				qt_dosagem_w := Calcular_Volume_Total_Solucao('MLH', 24, qt_solucao_total_w, NULL, nr_prescricao_w, nr_seq_solucao_w, 1, qt_dosagem_w, 'N');

				SELECT	MAX(cd_intervalo)
				INTO STRICT	cd_intervalo_w
				FROM	intervalo_prescricao
				WHERE	obter_ocorrencia_intervalo(cd_intervalo,24,'O') = 1
				AND	ie_situacao = 'A'
				AND	Obter_se_intervalo(cd_intervalo,'15') = 'S'
				AND	((coalesce(cd_estabelecimento::text, '') = '') OR (cd_estabelecimento = cd_estabelecimento_p));

				SELECT	MAX(ds_rotina)
				INTO STRICT	ds_rotina_w
				FROM	protocolo_medic_material
				WHERE	nr_seq_interno	= nr_seq_prot_med_w;

				INSERT INTO prescr_solucao(
					nr_prescricao,
					nr_seq_solucao,
					ie_via_aplicacao,
					dt_atualizacao,
					nm_usuario,
					cd_unidade_medida,
					ie_tipo_dosagem,
					qt_dosagem,
					qt_solucao_total,
					qt_tempo_aplicacao,
					qt_volume,
					nr_etapas,
					ie_bomba_infusao,
					ie_suspenso,
					nr_agrupamento,
					ie_esquema_alternado,
					ie_calc_aut,
					ie_acm,
					qt_hora_fase,
					ds_horarios,
					hr_prim_horario,
					ie_urgencia,
					ds_solucao,
					ie_solucao_especial,
					ie_solucao_pca,
					ie_se_necessario,
					ds_orientacao,
					ie_tipo_sol,
					cd_intervalo,
					ie_pre_medicacao)
				VALUES (
					nr_prescricao_w,
					nr_seq_solucao_w,
					substr(obter_via_usuario('IV'),1,255),
					clock_timestamp(),
					nm_usuario_p,
					substr(obter_unid_med_usua('ml'),1,255),
					'mlh',
					qt_dosagem_w,
					qt_solucao_total_w,
					24,
					0,
					1,
					'N',
					'N',
					NULL ,
					'N',
					'S',
					'N',
					24,
					NULL,
					NULL,
					'N',
					coalesce(ds_rotina_w,WHEB_MENSAGEM_PCK.get_texto(299030,NULL) || nr_seq_atendimento_p),
					'N',
					'N',
					'N',
					NULL,
					NULL,
					cd_intervalo_w,
					ie_pre_medicacao_w);
			END IF;

			IF (coalesce(cd_subgrupo_param_w,0)	<> 0) THEN

				SELECT	coalesce(COUNT(*),0)
				INTO STRICT	qt_medic_w
				FROM	paciente_atend_medic a
				WHERE	a.nr_seq_atendimento 	= nr_seq_atendimento_p
				AND	a.ie_item_superior	= 'S'
				AND	a.nr_agrupamento	= nr_agrupamento_w;

				SELECT	MAX(cd_subgrupo_material)
				INTO STRICT	cd_subgrupo_w
				FROM	classe_material
				WHERE	cd_classe_material = cd_classe_w;

				IF (cd_subgrupo_param_w	= cd_subgrupo_w) AND (coalesce(qt_medic_w,0)		= 0) THEN
					ie_item_superior_w	:= 'S';

					UPDATE	paciente_atend_medic
					SET	ie_item_superior   = 'S'
					WHERE	nr_seq_atendimento = nr_seq_atendimento_p
					AND	nr_seq_material    = nr_seq_material_w;
				END IF;
			END IF;

			SELECT	coalesce(COUNT(*),0)
			INTO STRICT	cont_w
			FROM	material b
			WHERE	b.nr_seq_ficha_tecnica	= nr_seq_ficha_tecnica_w;

			IF (ie_gera_melhor_apres_w = 'N') AND
				((cont_w		> 0) AND
				((ie_tipo_material_w	= '6') OR (ie_define_disp_w	= 'S'))) THEN

				select	max(ie_fabricante_dist),
					max(nr_seq_fabric)
				into STRICT	ie_fabricante_w,
					nr_seq_fabric_ww
				from	material
				WHERE	cd_material	= cd_material_w;

				SELECT	coalesce(MAX(pr_desconto),0),
					coalesce(coalesce(ie_fabricante_w, MAX(ie_fabricante)),'N')
				INTO STRICT	pr_desconto_w,
					ie_fabricante_w
				FROM	material_sem_apresentacao
				WHERE	cd_material	= cd_material_w;

				SELECT 	coalesce(MAX(cd_convenio),0)
				INTO STRICT	cd_convenio_w
				FROM	atend_categoria_convenio a,
					paciente_atendimento b
				WHERE	a.nr_atendimento		=	b.nr_atendimento
				AND	b.nr_seq_atendimento	=	nr_seq_atendimento_p;

				IF (coalesce(cd_convenio_w,0) = 0) THEN

					SELECT 	coalesce(MAX(c.nr_atendimento),0)
					INTO STRICT	nr_atendimento_wwww
					FROM	atend_categoria_convenio a,
						atendimento_paciente c
					WHERE	a.nr_atendimento 	= 	c.nr_atendimento
					AND 	c.dt_alta IS  NULL
					AND	c.cd_pessoa_fisica 	=	cd_pessoa_fisica_w;


					SELECT 	coalesce(MAX(cd_convenio),0)
					INTO STRICT	cd_convenio_w
					FROM	atend_categoria_convenio a,
						atendimento_paciente c
					WHERE	a.nr_atendimento 	= 	c.nr_atendimento
					AND 	c.dt_alta IS  NULL
					AND	c.cd_pessoa_fisica 	=	cd_pessoa_fisica_w
					and	c.nr_atendimento 	= 	nr_atendimento_wwww;
				END IF;
				IF (ie_fabricante_w = 'N') THEN
					qt_fornec_w	:= 0;
					ie_reg_w	:= 0;
					OPEN c03;
					LOOP
					FETCH c03 INTO
						nr_seq_fabric_w;
					EXIT WHEN NOT FOUND; /* apply on c03 */

						--insert into temp values ('Fab: ' || nr_seq_fabric_w); commit;
						cd_mat_especifico_w := qt_obter_mat_especifico_regra(cd_material_w, cd_convenio_w, cd_pessoa_fisica_w, cd_estabelecimento_p);

						cont_w	:= 0;
						vetor_w.DELETE;
						OPEN c02;
						LOOP
						FETCH c02 INTO
							cd_material_regra_w,
							qt_dose_regra_w,
							cd_unidade_medida_consumo_w;
						EXIT WHEN NOT FOUND; /* apply on c02 */
							vetor_w[cont_w].cd_material_w	:= cd_material_regra_w;
							vetor_w[cont_w].qt_dose_w	:= qt_dose_regra_w;
							vetor_w[cont_w].cd_unidade_medida_w := cd_unidade_medida_consumo_w;
							cont_w := cont_w + 1;
							--insert into temp values ('Mat: ' || cd_material_regra_w || ' Dose: ' || qt_dose_regra_w || ' UM: ' || cd_unidade_medida_consumo_w); commit;
						END LOOP;
						CLOSE c02;

						qt_dose_total_aux_w	:= qt_dose_total_prescr_w;
						--- Inicio MD 2

						/*
						qt_desconto_w := ((pr_desconto_w * qt_dose_total_aux_w) / 100);
						*/
						begin
						  sql_w := 'call prescricao_paciente_pck_md.calcular_qt_desconto_md(:1, :2) into :qt_desconto_w';
						  EXECUTE sql_w using in pr_desconto_w,
														in qt_dose_total_aux_w,
														out qt_desconto_w;
						exception
						  when others then
							qt_desconto_w := null;
						end;

						--- Fim MD  2
						qt_controle_w := 0;

						-- nova
						if (vetor_w.count > 0) then
							select	nextval('qt_medic_disponivel_prescr_seq')
							into STRICT	nr_particao_medicamentos_w
							;

							for indice in vetor_w.first..vetor_w.last loop
								insert into qt_medic_disponivel_prescr(nr_sequencia,
									nr_particao,
									dt_criacao,
									cd_material,
									ds_material,
									qt_dose,
									cd_unidade_medida,
									qt_quantidade)
								values (nextval('qt_medic_disponivel_prescr_seq'),
									nr_particao_medicamentos_w,
									clock_timestamp(),
									vetor_w[indice].cd_material_w,
									obter_desc_material(vetor_w[indice].cd_material_w),
									vetor_w[indice].qt_dose_w,
									vetor_w[indice].cd_unidade_medida_w,
									1);
							end loop;

							select 	nextval('qt_prescricao_particao_seq')
							into STRICT	nr_particao_saida_w
							;

							begin
								sql_w := 'call qt_prescricao_md_pck.prescrever(:particao, :dose, :particao_medicamentos, :tolerancia)';
								EXECUTE sql_w using
									in nr_particao_saida_w,
									in qt_dose_total_prescr_w,
									in nr_particao_medicamentos_w,
									in qt_desconto_w;

							exception when others then
								-- Nao e possivel realizar esta acao devido a ausencia do modulo de dispositivo medico
								CALL wheb_mensagem_pck.exibir_mensagem_abort(1193267);
							end;

							-- inserir os medicamentos
							indice_saida_w := vetor_aux_w.count;
							for medicamento in melhor_prescr_do_fabricante loop
								for quantidade in 1..ceil(medicamento.qt_quantidade) loop
									vetor_aux_w[indice_saida_w].cd_material_w 		:= medicamento.cd_material;
									vetor_aux_w[indice_saida_w].qt_dose_w			:= medicamento.qt_dose;
									vetor_aux_w[indice_saida_w].cd_unidade_medida_w := medicamento.cd_unidade_medida;
									vetor_aux_w[indice_saida_w].nr_seq_fabric_w		:= nr_seq_fabric_w;

									indice_saida_w := indice_saida_w + 1;
								end loop;
							end loop;

							CALL limpar_qt_prescr();
						end if;

						-- end nova


						-- inserir os itens totais no vetor de fornecedores.
						k		:= -1;
						qt_mat_vetor_w	:= 0;
						qt_frasco_disp_w := 0;

						WHILE(k < vetor_aux_w.COUNT - 1) LOOP
							k	:= k + 1;
							IF (vetor_aux_w[k].nr_seq_fabric_w	= nr_seq_fabric_w) THEN
								qt_mat_vetor_w		:= qt_mat_vetor_w + vetor_aux_w[k].qt_dose_w;
								qt_frasco_disp_w	:= qt_frasco_disp_w + 1;
							END IF;
						END LOOP;
						vetor_fornecedor_w[qt_fornec_w].nr_seq_fabric_w	 := nr_seq_fabric_w;
						vetor_fornecedor_w[qt_fornec_w].qt_frasco_disp_w := qt_frasco_disp_w;
						vetor_fornecedor_w[qt_fornec_w].qt_perda_fornec_w := greatest(qt_mat_vetor_w - qt_dose_total_prescr_w, 0);
						qt_fornec_w	:= qt_fornec_w + 1;

					END LOOP;
					CLOSE c03;

					-- descobrir qual fornecedor tem a menor perda e a menor quantidade de frasco dispensados.
					k			:= -1;
					qt_menor_frasco_w	:= 999999999999;
					qt_menor_perda_w	:= 999999999999;
					qt_frasco_perda_zero_w	:= 999999999999;
					while(k < vetor_fornecedor_w.count - 1) loop
						k	:= k + 1;

						--insert into temp2 values ('Fab: ' || vetor_fornecedor_w(k).nr_seq_fabric_w || ' Perda ' || vetor_fornecedor_w(k).qt_perda_fornec_w || ' Frasco ' || vetor_fornecedor_w(k).qt_frasco_disp_w); commit;
						if (vetor_fornecedor_w[k].qt_frasco_disp_w > 0) then
							if	(vetor_fornecedor_w[k].qt_perda_fornec_w >= 0 AND vetor_fornecedor_w[k].qt_perda_fornec_w < qt_menor_perda_w) or
								(vetor_fornecedor_w[k].qt_perda_fornec_w = qt_menor_perda_w AND vetor_fornecedor_w[k].qt_frasco_disp_w <= qt_frasco_perda_zero_w) then
								nr_seq_fabric_melhor_w	:= vetor_fornecedor_w[k].nr_seq_fabric_w;
								qt_menor_perda_w		:= vetor_fornecedor_w[k].qt_perda_fornec_w;
								qt_menor_frasco_w		:= vetor_fornecedor_w[k].qt_frasco_disp_w;
								if (vetor_fornecedor_w[k].qt_perda_fornec_w = 0) then
									qt_frasco_perda_zero_w	:= vetor_fornecedor_w[k].qt_frasco_disp_w;
								end if;
								-- insert into temp2 values ('1:Fab: ' || nr_seq_fabric_melhor_w || ' qt_menor_perda_w: ' || qt_menor_perda_w || ' qt_menor_frasco_w  ' ||  qt_menor_frasco_w); commit;
							end if;	
						end if;
					end loop;

					--insert into temp2 values (nr_seq_fabric_melhor_w);
					vetor_fornecedor_w.delete;

					k					:= -1;
					y					:= -1;
					cd_mat_vetor_w		:= 0;
					qt_mat_vetor_w		:= 0;
					qt_a_lancar_w		:= qt_dose_total_prescr_w;
					ie_gerar_diluicao_w := 'S';
					ie_posicao_ultimo_w	:= 0;

					WHILE(k < vetor_aux_w.COUNT - 1) LOOP
						k	:= k + 1;
						--inserir somente os itens do melhor fabricante.
						IF (vetor_aux_w[k].nr_seq_fabric_w = nr_seq_fabric_melhor_w) THEN
							IF	((cd_mat_vetor_w = vetor_aux_w[k].cd_material_w) OR (cd_mat_vetor_w = 0)) AND (vetor_aux_w.COUNT > 1) THEN
								--(k <> (vetor_aux_w.count -1)) then

								--- Inicio MD 3

								/*
								qt_mat_vetor_w := qt_mat_vetor_w + vetor_aux_w(k).qt_dose_w;
								*/
								begin
								  sql_w := 'call prescricao_paciente_pck_md.calcular_qt_material_md(:1, :2) into :qt_mat_vetor_w';
								  EXECUTE sql_w using in qt_mat_vetor_w,
																in vetor_aux_w[k].qt_dose_w,
																out qt_mat_vetor_w;
								exception
								  when others then
									qt_mat_vetor_w := null;
								end;

								--- Fim MD 3
								qt_unitaria_w			:= vetor_aux_w[k].qt_dose_w;
								cd_mat_vetor_w			:= vetor_aux_w[k].cd_material_w;
								qt_conversao_dose_w		:= vetor_aux_w[k].qt_dose_w;
								cd_unidade_medida_consumo_w 	:= vetor_aux_w[k].cd_unidade_medida_w;
							ELSE
								--- Inicio MD 4

								/*
                                qt_a_lancar_w	:= (qt_a_lancar_w - qt_mat_vetor_w);

								IF	(qt_a_lancar_w >= 0) THEN
									qt_total_dispensar_w := qt_a_lancar_w;
								ELSE
									qt_mat_vetor_w := (qt_mat_vetor_w - ABS(qt_a_lancar_w));
								END IF;

								--insert into temp2 values ('antes do insert - qt_mat_vetor_w = ' || qt_mat_vetor_w || ' qt_a_lancar_w = ' || qt_a_lancar_w);


								qt_unitaria_w	:= dividir(qt_mat_vetor_w, qt_unitaria_w);
								*/
								begin
								  sql_w := 'begin prescricao_paciente_pck_md.obter_qt_unitaria_mat_md(:1, :2, :3, :4); end;';
								  EXECUTE sql_w using in out qt_a_lancar_w,
																in out qt_mat_vetor_w,
																in out qt_unitaria_w,
																out qt_total_dispensar_w;
								exception
								  when others then
									qt_a_lancar_w := null;
									qt_mat_vetor_w := null;
									qt_unitaria_w := null;
									qt_total_dispensar_w := null;
								end;

								--- Fim MD 4
								SELECT	coalesce(MAX(nr_sequencia),0) +1
								INTO STRICT	nr_seq_medic_w
								FROM	prescr_material
								WHERE	nr_prescricao	= nr_prescricao_w;

								SELECT	coalesce(MAX(ie_consignado), 'X')
								INTO STRICT	ie_consignado_w
								FROM  	material
								WHERE  	cd_material = cd_mat_vetor_w;

								IF (ie_consignado_w = '1') THEN
									SELECT  coalesce(MAX(a.cd_fornecedor),'X')
									INTO STRICT	cd_fornecedor_w
									FROM  	fornecedor_mat_consignado a,
										material m
									WHERE 	a.cd_material	= m.cd_material_estoque
									AND   	m.cd_material   = cd_mat_vetor_w
									AND   	m.ie_situacao 	= 'A'
									AND	a.dt_mesano_referencia = PKG_DATE_UTILS.start_of(dt_prescricao_w,'mm',0)
									AND qt_estoque = (	SELECT MAX(obter_saldo_estoque_consig(cd_estabelecimento_p, a.cd_fornecedor, a.cd_material, a.cd_local_estoque))
												FROM  	fornecedor_mat_consignado a,
													material m
												WHERE 	a.cd_material	= m.cd_material_estoque
												AND   	m.cd_material   = cd_mat_vetor_w
												AND   	m.ie_situacao 	= 'A'
												AND		a.dt_mesano_referencia = PKG_DATE_UTILS.start_of(dt_prescricao_w,'mm',0));

									IF (cd_fornecedor_w = 'X') THEN
										cd_fornecedor_w	:= NULL;
									END IF;
								ELSE
									cd_fornecedor_w	:= NULL;
								END IF;

								IF (coalesce(cd_subgrupo_param_w,0)	<> 0) THEN
									SELECT	coalesce(COUNT(*),0)
									INTO STRICT	qt_medic_w
									FROM	prescr_material a
									WHERE	a.nr_prescricao 	= nr_prescricao_w
									AND	a.ie_item_superior	= 'S'
									AND	a.nr_agrupamento	= nr_agrupamento_w;

									IF (coalesce(qt_medic_w,0)	> 0) THEN
										ie_item_superior_w	:= NULL;
									END IF;
								END IF;

								IF (coalesce(cd_mat_vetor_w,0) = '0') THEN
									cd_mat_vetor_w	:= vetor_aux_w[k].cd_material_w;
								END IF;

								IF (coalesce(qt_mat_vetor_w,0) > 0) THEN

									SELECT	MAX(ie_dias_util_medic)
									INTO STRICT	ie_dias_util_medic_w
									FROM	material
									WHERE	cd_material = cd_mat_vetor_w;

									IF (ie_dias_util_medic_w <> 'N')THEN
										SELECT  coalesce(MAX(a.nr_dia_util),0) + 1
										INTO STRICT	nr_dia_util_ww
										FROM    prescr_material a,
												prescr_medica b
										WHERE   a.nr_prescricao          = b.nr_prescricao
										AND     pkg_date_utils.get_time(b.dt_prescricao,0,0,0)   = pkg_date_utils.get_time(dt_prescricao_w - 1,0,0,0)
										AND     b.nr_atendimento		 = nr_atendimento_p
										AND     a.cd_material			 = cd_mat_vetor_w
										AND     b.nr_prescricao          <> nr_prescricao_w
										AND		coalesce(b.dt_suspensao::text, '') = '';
									END IF;

									begin
										nr_seq_diluicao_mapa_w := qt_prescr_diluicao_pck.obter_sequencia_diluicao(mapa_diluicao_w, nr_seq_diluicao_w);
										INSERT INTO prescr_material(
											nr_prescricao,
											nr_sequencia,
											ie_origem_inf,
											cd_material,
											cd_unidade_medida,
											qt_dose,
											qt_unitaria,
											qt_material,
											dt_atualizacao,
											nm_usuario,
											cd_intervalo,
											ds_observacao,
											ie_via_aplicacao,
											nr_agrupamento,
											cd_motivo_baixa,
											ie_utiliza_kit,
											cd_unidade_medida_dose,
											qt_conversao_dose,
											ie_urgencia,
											nr_ocorrencia,
											qt_total_dispensar,
											nr_sequencia_diluicao,
											ie_medicacao_paciente,
											ie_suspenso,
											ie_agrupador,
											ie_bomba_infusao,
											ie_se_necessario,
											ie_aplic_bolus,
											ie_aplic_lenta,
											ie_acm,
											qt_min_aplicacao,
											qt_hora_aplicacao,
											ie_recons_diluente_fixo,
											qt_dias_util,
											nr_seq_atend_medic,
											ie_sem_aprazamento,
											cd_fornec_consignado,
											nr_seq_material,
											nr_seq_atendimento,
											cd_mat_sem_apresent,
											ie_gerar_diluicao,
											nr_seq_via_acesso,
											ie_item_superior,
											ie_pre_medicacao,
											nr_sequencia_solucao,
											ds_observacao_enf,
											ie_agrupador_quimio,
											nr_sequencia_proc,
											nr_seq_ordem_adep,
											qt_dia_prim_hor,
											nr_seq_medic_material,
											ds_dose_diferenciada,
											NR_SEQ_MAT_DILUICAO,
											nr_dia_util,
											ds_justificativa,
											ie_objetivo,
											cd_topografia_cih,
											cd_amostra_cih,
											cd_microorganismo_cih,
											ie_origem_infeccao,
											nr_seq_mat_protocolo,
											cd_protocolo,
											nr_seq_protocolo)
										VALUES (nr_prescricao_w,
											nr_seq_medic_w,
											'S',
											cd_mat_vetor_w,
											cd_unidade_medida_consumo_w,
											qt_mat_vetor_w,
											qt_unitaria_w,
											qt_unitaria_w,
											dt_atualizacao_w,
											nm_usuario_p,
											cd_intervalo_ww,
											CASE WHEN coalesce(ds_observacao_w::text, '') = '' THEN ds_recomendacao_w  ELSE ds_recomendacao_w || CHR(10) || ds_observacao_w END ,
											ie_via_aplicacao_w,
											nr_agrupamento_w,
											0,
											'N',
											cd_unid_med_prescr_w,
											qt_conversao_dose_w,
											coalesce(ie_urgencia_w,'N'),
											coalesce(nr_ocorrencia_w,1),
											CEIL(qt_unitaria_w),
											nr_seq_diluicao_mapa_w,
											ie_medicacao_paciente_w,
											'N',
											ie_agrupamento_w,
											ie_bomba_infusao_w,
											coalesce(ie_se_necessario_w,'N'),
											coalesce(ie_aplic_bolus_w,'N'),
											coalesce(ie_aplic_lenta_w,'N'),
											coalesce(ie_acm_w,'N'),
											qt_min_aplicacao_w,
											qt_hora_aplicacao_w,
											'N',
											qt_dias_util_w,
											nr_seq_interno_w,
											'N',
											cd_fornecedor_w,
											nr_seq_material_w,
											nr_seq_atendimento_p,
											cd_material_w,
											ie_gerar_diluicao_w,
											nr_seq_via_acesso_w,
											ie_item_superior_w,
											ie_pre_medicacao_w,
											nr_seq_solucao_w,
											ds_justificativa_p || CASE WHEN coalesce(ds_justificativa_p::text, '') = '' THEN NULL  ELSE CHR(13) || WHEB_MENSAGEM_PCK.get_texto(299032,NULL) || ': ' || obter_nome_pf(obter_dados_usuario_opcao(nm_usuario_p,'C')) END ,
											ie_agrupador_oncologia_w,
											nr_seq_proc_w,
											nr_seq_ordem_adep_w,
											0,
											nr_seq_medic_material_w,
											ds_dose_difer_w,
											NR_SEQ_MAT_DILUICAO_w,
											nr_dia_util_ww,
											ds_justificativa_w,
											ie_objetivo_w,
											cd_topografia_cih_w,
											cd_amostra_cih_w,
											cd_microorganismo_cih_w,
											ie_origem_infeccao_w,
											nr_seq_mat_pro_w,
											cd_protocolo_w,
											nr_seq_medicacao_w);
									EXCEPTION
									when SQLSTATE '50009' then
										-- tentativa de gerar o diluente quando o medicamento principal nao existe
										null;
									end;

									-- mapear origem do medicamento principal
									if not mapa_diluicao_w.exists(nr_seq_material_w) then
										mapa_diluicao_w[nr_seq_material_w].nr_sequencia_origem := nr_seq_material_w;
										mapa_diluicao_w[nr_seq_material_w].nr_sequencia_destino := nr_seq_medic_w;
									end if;

									IF (ie_prescr_mat_sem_lib_w = 'S') THEN
										CALL Gerar_prescr_mat_sem_dt_lib(nr_prescricao_w,nr_seq_medic_w,obter_perfil_ativo,'N',nm_usuario_p,NULL);
									END IF;

									--gerar_reconst_diluicao(nr_prescricao_w, nr_seq_medic_w, 'A'); Caldas mandou comentar essa linha por estar duplicando
								END IF;
								ie_gerar_diluicao_w		:= 'N';
								cd_mat_vetor_w			:= vetor_aux_w[k].cd_material_w;
								qt_mat_vetor_w			:= vetor_aux_w[k].qt_dose_w;
								qt_unitaria_w			:= vetor_aux_w[k].qt_dose_w;
								qt_conversao_dose_w		:= vetor_aux_w[k].qt_dose_w;
								cd_unidade_medida_consumo_w 	:= vetor_aux_w[k].cd_unidade_medida_w;
								COMMIT;
							END IF;
						END IF;
					END LOOP;
					--- Inicio MD 5

					/*
					qt_a_lancar_w	:= (qt_a_lancar_w - qt_mat_vetor_w);

					IF	(qt_a_lancar_w >= 0) THEN
						qt_total_dispensar_w := qt_a_lancar_w;
						IF	(qt_mat_vetor_w = 0) THEN
							qt_mat_vetor_w	:= qt_a_lancar_w;
						END IF;
					ELSE
						qt_mat_vetor_w := (qt_mat_vetor_w - ABS(qt_a_lancar_w));
					END IF;

					--insert into temp2 values ('insert 2 - qt_mat_vetor_w = ' || qt_mat_vetor_w || ' qt_a_lancar_w = ' || qt_a_lancar_w);


					qt_unitaria_w	:= dividir(qt_mat_vetor_w, qt_unitaria_w);
					*/
					begin
					  sql_w := 'begin prescricao_paciente_pck_md.obter_qt_unitaria_mat_2_md(:1, :2, :3, :4); end;';
					  EXECUTE sql_w using in out qt_a_lancar_w,
													in out qt_mat_vetor_w,
													in out qt_unitaria_w,
													out qt_total_dispensar_w;
					exception
					  when others then
						qt_a_lancar_w := null;
						qt_mat_vetor_w := null;
						qt_unitaria_w := null;
						qt_total_dispensar_w := null;
					end;

					--- Fim MD 5
					SELECT	coalesce(MAX(nr_sequencia),0) +1
					INTO STRICT	nr_seq_medic_w
					FROM	prescr_material
					WHERE	nr_prescricao	= nr_prescricao_w;

					SELECT	coalesce(MAX(ie_consignado), 'X')
					INTO STRICT	ie_consignado_w
					FROM  	material
					WHERE  	cd_material = cd_mat_vetor_w;

					IF (ie_consignado_w = '1') THEN
						SELECT  coalesce(MAX(a.cd_fornecedor),'X')
						INTO STRICT	cd_fornecedor_w
						FROM  	fornecedor_mat_consignado a,
							material m
						WHERE 	a.cd_material	= m.cd_material_estoque
						AND   	m.cd_material   = cd_mat_vetor_w
						AND   	m.ie_situacao 	= 'A'
						AND	a.dt_mesano_referencia = PKG_DATE_UTILS.start_of(dt_prescricao_w,'mm',0)
						AND qt_estoque = (	SELECT MAX(obter_saldo_estoque_consig(cd_estabelecimento_p, a.cd_fornecedor, a.cd_material, a.cd_local_estoque))
									FROM  	fornecedor_mat_consignado a,
										material m
									WHERE 	a.cd_material	= m.cd_material_estoque
									AND   	m.cd_material   = cd_mat_vetor_w
									AND   	m.ie_situacao 	= 'A'
									AND		a.dt_mesano_referencia = PKG_DATE_UTILS.start_of(dt_prescricao_w,'mm',0));

						IF (cd_fornecedor_w = 'X') THEN
							cd_fornecedor_w	:= NULL;
						END IF;
					ELSE
						cd_fornecedor_w	:= NULL;
					END IF;

					IF (coalesce(cd_subgrupo_param_w,0)	<> 0) THEN
						SELECT	coalesce(COUNT(*),0)
						INTO STRICT	qt_medic_w
						FROM	prescr_material a
						WHERE	a.nr_prescricao 	= nr_prescricao_w
						AND	a.ie_item_superior	= 'S'
						AND	a.nr_agrupamento	= nr_agrupamento_w;

						IF (coalesce(qt_medic_w,0)	> 0) THEN
							ie_item_superior_w	:= NULL;
						END IF;
					END IF;

					IF (coalesce(cd_mat_vetor_w,0) = 0) AND (vetor_aux_w.COUNT > 0) THEN
						cd_mat_vetor_w	:= vetor_aux_w[k].cd_material_w;
					END IF;

					SELECT	coalesce(COUNT(*),0)
					INTO STRICT	qt_medic_w
					FROM	paciente_atend_medic a
					WHERE	a.nr_seq_atendimento 	= nr_seq_atendimento_p
					AND	a.ie_item_superior	= 'S'
					AND	a.nr_agrupamento	= nr_agrupamento_w;

					--Se nao tiver nenhum superior deve-se gerar como superior.
					IF (qt_medic_w	= 0) THEN
						ie_item_superior_w	:= 'S';
					END IF;

					--- Inicio MD 6

					/*
					ie_gerar_diluicao_w		:= 'N';
					IF	(ie_item_superior_w	= 'S') THEN
						ie_gerar_diluicao_w	:= 'S';
					END IF;
					*/
					begin
					  sql_w := 'call prescricao_paciente_pck_md.gerar_diluicao_md(:1) into :ie_gerar_diluicao_w';
					  EXECUTE sql_w using in ie_item_superior_w,
													out ie_gerar_diluicao_w;
					exception
					  when others then
						ie_gerar_diluicao_w := null;
					end;

					--- Fim MD 6
					IF (cd_mat_vetor_w <> 0) THEN

						SELECT	MAX(ie_dias_util_medic)
						INTO STRICT	ie_dias_util_medic_w
						FROM	material
						WHERE	cd_material = cd_mat_vetor_w;

						IF (ie_dias_util_medic_w <> 'N')THEN
							SELECT  coalesce(MAX(a.nr_dia_util),0) + 1
							INTO STRICT	nr_dia_util_ww
							FROM    prescr_material a,
									prescr_medica b
							WHERE   a.nr_prescricao          = b.nr_prescricao
							AND     pkg_date_utils.get_time(b.dt_prescricao,0,0,0)   = pkg_date_utils.get_time(dt_prescricao_w - 1,0,0,0)
							AND     b.nr_atendimento		 = nr_atendimento_p
							AND     a.cd_material			 = cd_mat_vetor_w
							AND     b.nr_prescricao          <> nr_prescricao_w
							AND		coalesce(b.dt_suspensao::text, '') = '';
						END IF;

						begin
							nr_seq_diluicao_mapa_w := qt_prescr_diluicao_pck.obter_sequencia_diluicao(mapa_diluicao_w, nr_seq_diluicao_w);
							INSERT INTO prescr_material(
								nr_prescricao,
								nr_sequencia,
								ie_origem_inf,
								cd_material,
								cd_unidade_medida,
								qt_dose,
								qt_unitaria,
								qt_material,
								dt_atualizacao,
								nm_usuario,
								cd_intervalo,
								ds_observacao,
								ie_via_aplicacao,
								nr_agrupamento,
								cd_motivo_baixa,
								ie_utiliza_kit,
								cd_unidade_medida_dose,
								qt_conversao_dose,
								ie_urgencia,
								nr_ocorrencia,
								qt_total_dispensar,
								nr_sequencia_diluicao,
								ie_medicacao_paciente,
								ie_suspenso,
								ie_agrupador,
								ie_bomba_infusao,
								ie_se_necessario,
								ie_aplic_bolus,
								ie_aplic_lenta,
								ie_acm,
								qt_min_aplicacao,
								qt_hora_aplicacao,
								ie_recons_diluente_fixo,
								qt_dias_util,
								nr_seq_atend_medic,
								ie_sem_aprazamento,
								cd_fornec_consignado,
								nr_seq_material,
								nr_seq_atendimento,
								cd_mat_sem_apresent,
								ie_gerar_diluicao,
								nr_seq_via_acesso,
								ie_item_superior,
								ie_pre_medicacao,
								nr_sequencia_solucao,
								ds_observacao_enf,
								ie_agrupador_quimio,
								nr_sequencia_proc,
								nr_seq_ordem_adep,
								qt_dia_prim_hor,
								nr_seq_medic_material,
								ds_dose_diferenciada,
								NR_SEQ_MAT_DILUICAO,
								nr_dia_util,
								ds_justificativa,
								ie_objetivo,
								cd_topografia_cih,
								cd_amostra_cih,
								cd_microorganismo_cih,
								ie_origem_infeccao,
								nr_seq_mat_protocolo,
								cd_protocolo,
								nr_seq_protocolo)
							VALUES (nr_prescricao_w,
								nr_seq_medic_w,
								'S',
								cd_mat_vetor_w,
								cd_unidade_medida_consumo_w,
								qt_mat_vetor_w,
								qt_unitaria_w,
								qt_unitaria_w,
								dt_atualizacao_w,
								nm_usuario_p,
								cd_intervalo_ww,
								CASE WHEN coalesce(ds_observacao_w::text, '') = '' THEN ds_recomendacao_w  ELSE ds_recomendacao_w || CHR(10) || ds_observacao_w END ,
								ie_via_aplicacao_w,
								nr_agrupamento_w,
								0,
								'N',
								cd_unid_med_prescr_w,
								qt_conversao_dose_w,
								coalesce(ie_urgencia_w,'N'),
								coalesce(nr_ocorrencia_w,1),
								CEIL(qt_unitaria_w),
								nr_seq_diluicao_mapa_w,
								ie_medicacao_paciente_w,
								'N',
								ie_agrupamento_w,
								ie_bomba_infusao_w,
								coalesce(ie_se_necessario_w,'N'),
								coalesce(ie_aplic_bolus_w,'N'),
								coalesce(ie_aplic_lenta_w,'N'),
								coalesce(ie_acm_w,'N'),
								qt_min_aplicacao_w,
								qt_hora_aplicacao_w,
								'N',
								qt_dias_util_w,
								nr_seq_interno_w,
								'N',
								cd_fornecedor_w,
								nr_seq_material_w,
								nr_seq_atendimento_p,
								cd_material_w,
								ie_gerar_diluicao_w,
								nr_seq_via_acesso_w,
								ie_item_superior_w,
								ie_pre_medicacao_w,
								nr_seq_solucao_w,
								ds_justificativa_p || CASE WHEN coalesce(ds_justificativa_p::text, '') = '' THEN NULL  ELSE CHR(13) || WHEB_MENSAGEM_PCK.get_texto(299032,NULL) || ': ' || obter_nome_pf(obter_dados_usuario_opcao(nm_usuario_p,'C')) END ,
								ie_agrupador_oncologia_w,
								nr_seq_proc_w,
								nr_seq_ordem_adep_w,
								0,
								nr_seq_medic_material_w,
								ds_dose_difer_w,
								NR_SEQ_MAT_DILUICAO_w,
								nr_dia_util_ww,
								ds_justificativa_w,
								ie_objetivo_w,
								cd_topografia_cih_w,
								cd_amostra_cih_w,
								cd_microorganismo_cih_w,
								ie_origem_infeccao_w,
								nr_seq_mat_pro_w,
								cd_protocolo_w,
								nr_seq_medicacao_w);
							EXCEPTION
							when SQLSTATE '50009' then
								-- tentativa de gerar o diluente quando o medicamento principal nao existe
								null;
						end;

						-- mapear origem do medicamento principal
						if not mapa_diluicao_w.exists(nr_seq_material_w) then
							mapa_diluicao_w[nr_seq_material_w].nr_sequencia_origem := nr_seq_material_w;
							mapa_diluicao_w[nr_seq_material_w].nr_sequencia_destino := nr_seq_medic_w;
						end if;

						IF (ie_prescr_mat_sem_lib_w = 'S') THEN
							CALL Gerar_prescr_mat_sem_dt_lib(nr_prescricao_w,nr_seq_medic_w,obter_perfil_ativo,'N',nm_usuario_p,NULL);
						END IF;

						---gerar_reconst_diluicao(nr_prescricao_w, nr_seq_medic_w, 'A');Caldas mandou comentar essa linha por estar duplicando
					END IF;

					vetor_aux_w.DELETE;

				ELSE

					cd_mat_especifico_w := qt_obter_mat_especifico_regra(cd_material_w, cd_convenio_w, cd_pessoa_fisica_w, cd_estabelecimento_p);

					cont_w	:= 0;
					vetor_w.DELETE;

					OPEN c02;
					LOOP
					FETCH c02 INTO
						cd_material_regra_w,
						qt_dose_regra_w,
						cd_unidade_medida_consumo_w;
					EXIT WHEN NOT FOUND; /* apply on c02 */
						vetor_w[cont_w].cd_material_w	:= cd_material_regra_w;
						vetor_w[cont_w].qt_dose_w	:= qt_dose_regra_w;
						vetor_w[cont_w].cd_unidade_medida_w := cd_unidade_medida_consumo_w;
						cont_w := cont_w + 1;
					END LOOP;
					CLOSE c02;

					qt_dose_total_aux_w	:= qt_dose_total_prescr_w;
					/*
                    qt_desconto_w		:= ((pr_desconto_w * qt_dose_total_aux_w) / 100);
                    */
                    begin
                      sql_w := 'call prescricao_paciente_pck_md.calcular_qt_desconto_md(:1, :2) into :qt_desconto_w';
                      EXECUTE sql_w using in pr_desconto_w,
                                                    in qt_dose_total_aux_w,
                                                    out qt_desconto_w;
                    exception
                      when others then
                        qt_desconto_w := null;
                    end;

					ie_reg_w := 0;

					qt_controle_w := 0;

					WHILE(qt_dose_total_aux_w > 0) AND (qt_controle_w < 1000) LOOP

						qt_registros_vetor_w := vetor_w.COUNT - 1;
						qt_controle_ww := 0;
						x := -1;

						WHILE(x < qt_registros_vetor_w) AND (qt_dose_total_aux_w > 0) AND (qt_controle_ww < 1000) LOOP

							x := x + 1;
							qt_controle_ww	:= qt_controle_ww + 1;

							IF	((qt_dose_total_aux_w - vetor_w[x].qt_dose_w) >= 0) THEN

								qt_dose_total_aux_w	:= (qt_dose_total_aux_w - vetor_w[x].qt_dose_w);
								vetor_aux_w[ie_reg_w].cd_material_w	:= vetor_w[x].cd_material_w;
								vetor_aux_w[ie_reg_w].qt_dose_w		:= vetor_w[x].qt_dose_w;
								vetor_aux_w[ie_reg_w].cd_unidade_medida_w := vetor_w[x].cd_unidade_medida_w;
								ie_reg_w	:= ie_reg_w + 1;
								x := -1;

							ELSIF (qt_dose_total_aux_w <= qt_desconto_w) THEN
								qt_dose_total_aux_w	:= 0;
							ELSIF (qt_registros_vetor_w = x) THEN

								qt_dose_total_aux_w	:= (qt_dose_total_aux_w - vetor_w[x].qt_dose_w);
								vetor_aux_w[ie_reg_w].cd_material_w	:= vetor_w[x].cd_material_w;
								vetor_aux_w[ie_reg_w].qt_dose_w	:= vetor_w[x].qt_dose_w;
								vetor_aux_w[ie_reg_w].cd_unidade_medida_w := vetor_w[x].cd_unidade_medida_w;
								ie_reg_w	:= ie_reg_w + 1;

							ELSIF ((qt_dose_total_aux_w - vetor_w[x].qt_dose_w) < 0) THEN
								qt_perda_w		:= (qt_dose_total_aux_w - vetor_w[x].qt_dose_w);
								qt_dose_total_aux_ww	:= qt_dose_total_aux_w;
								qt_perda_final_w	:= 0;
								qt_controle_wwww	:= 0;
								WHILE(qt_dose_total_aux_ww	> 0) AND (qt_controle_wwww	< 1000) LOOP
									qt_controle_www := 0;
									i 		:= -1;
									WHILE(i < qt_registros_vetor_w) AND (qt_dose_total_aux_ww	> 0) AND (qt_controle_www	< 1000) LOOP

										i	:= i + 1;
										qt_controle_www	:= qt_controle_www + 1;
										IF	((qt_dose_total_aux_ww - vetor_w[i].qt_dose_w) >= 0) THEN
											qt_perda_final_w	:= (qt_dose_total_aux_ww - vetor_w[i].qt_dose_w);
											qt_dose_total_aux_ww	:= (qt_dose_total_aux_ww - vetor_w[i].qt_dose_w);
											i := -1;
										ELSIF (qt_registros_vetor_w = i) THEN
											qt_perda_final_w	:= (qt_dose_total_aux_ww - vetor_w[i].qt_dose_w);
											qt_dose_total_aux_ww	:= (qt_dose_total_aux_ww - vetor_w[i].qt_dose_w);
										END IF;
									END LOOP;

									qt_controle_wwww := qt_controle_wwww + 1;

								END LOOP;

								qt_perda_2w	 := (qt_dose_total_aux_w - vetor_w[x].qt_dose_w);
								qt_dose_total_aux_ww	:= qt_dose_total_aux_w;
								qt_perda_final_2w	:= 0;
								qt_controle_wwww	:= 0;
								WHILE(qt_dose_total_aux_ww	> 0) AND (qt_controle_wwww	< 1000) LOOP

									qt_controle_www := 0;
									i 		:= -1;
									WHILE(i < qt_registros_vetor_w) AND (qt_dose_total_aux_ww > 0) AND (qt_controle_www < 1000) LOOP

										i	:= i + 1;
										qt_controle_www	:= qt_controle_www + 1;
										IF	((qt_dose_total_aux_ww - vetor_w[i].qt_dose_w) >= 0) THEN
											qt_perda_final_2w	:= (qt_dose_total_aux_ww - vetor_w[i].qt_dose_w);
											qt_dose_total_aux_ww	:= (qt_dose_total_aux_ww - vetor_w[i].qt_dose_w);
											i := -1;
										END IF;
									END LOOP;
									qt_controle_wwww := qt_controle_wwww + 1;
								END LOOP;

								IF (qt_dose_total_aux_ww < qt_desconto_w) THEN
									NULL;
								ELSIF (qt_perda_w >= qt_perda_final_w) THEN
									vetor_aux_w[ie_reg_w].cd_material_w	:= vetor_w[x].cd_material_w;
									vetor_aux_w[ie_reg_w].qt_dose_w		:= vetor_w[x].qt_dose_w;
									vetor_aux_w[ie_reg_w].cd_unidade_medida_w := vetor_w[x].cd_unidade_medida_w;
									ie_reg_w		:= ie_reg_w + 1;
									qt_dose_total_aux_w	:= 0;
								END IF;
							END IF;
						END LOOP;

						qt_controle_w	:= qt_controle_w + 1;
					END LOOP;

					k		:= -1;
					cd_mat_vetor_w	:= 0;
					qt_mat_vetor_w	:= 0;
					qt_a_lancar_w	:= qt_dose_total_prescr_w;
					ie_gerar_diluicao_w := 'S';

					WHILE(k < vetor_aux_w.COUNT - 1) LOOP
						k	:= k + 1;

						IF ((cd_mat_vetor_w = vetor_aux_w[k].cd_material_w) OR (cd_mat_vetor_w = 0)) AND (vetor_aux_w.COUNT > 1) THEN
							--(k <> (vetor_aux_w.count -1)) then

							/*
                            qt_mat_vetor_w			:= qt_mat_vetor_w + vetor_aux_w(k).qt_dose_w;
                            */
                            begin
                              sql_w := 'call prescricao_paciente_pck_md.calcular_qt_material_md(:1, :2) into :qt_mat_vetor_w';
                              EXECUTE sql_w using in qt_mat_vetor_w,
                                                            in vetor_aux_w[k].qt_dose_w,
                                                            out qt_mat_vetor_w;
                            exception
                              when others then
                                qt_mat_vetor_w := null;
                            end;

							qt_unitaria_w			:= vetor_aux_w[k].qt_dose_w;
							cd_mat_vetor_w			:= vetor_aux_w[k].cd_material_w;
							qt_conversao_dose_w		:= vetor_aux_w[k].qt_dose_w;
							cd_unidade_medida_consumo_w  := vetor_aux_w[k].cd_unidade_medida_w;
						ELSE

							/*if	(vetor_aux_w.count = 1) or
								(k = (vetor_aux_w.count -1)) then
								cd_mat_vetor_w			:= vetor_aux_w(k).cd_material_w;
								qt_mat_vetor_w			:= qt_mat_vetor_w + vetor_aux_w(k).qt_dose_w;
								qt_unitaria_w			:= vetor_aux_w(k).qt_dose_w;
								qt_conversao_dose_w		:= vetor_aux_w(k).qt_dose_w;
								cd_unidade_medida_consumo_w 	:= vetor_aux_w(k).cd_unidade_medida_w;
							end if;*/

                            /*
							qt_a_lancar_w	:= (qt_a_lancar_w - qt_mat_vetor_w);
							IF	(qt_a_lancar_w >= 0) THEN
								qt_total_dispensar_w := qt_a_lancar_w;
							ELSE
								qt_mat_vetor_w := (qt_mat_vetor_w - ABS(qt_a_lancar_w));
							END IF;
							qt_unitaria_w	:= dividir(qt_mat_vetor_w, qt_unitaria_w);
                            */
                            begin
                              sql_w := 'begin prescricao_paciente_pck_md.obter_qt_unitaria_mat_md(:1, :2, :3, :4); end;';
                              EXECUTE sql_w using in out qt_a_lancar_w,
                                                            in out qt_mat_vetor_w,
                                                            in out qt_unitaria_w,
                                                            out qt_total_dispensar_w;
                            exception
                              when others then
                                qt_a_lancar_w := null;
                                qt_mat_vetor_w := null;
                                qt_unitaria_w := null;
                                qt_total_dispensar_w := null;
                            end;

							SELECT	coalesce(MAX(nr_sequencia),0) +1
							INTO STRICT	nr_seq_medic_w
							FROM	prescr_material
							WHERE	nr_prescricao	= nr_prescricao_w;

							SELECT	coalesce(MAX(ie_consignado), 'X')
							INTO STRICT	ie_consignado_w
							FROM  	material
							WHERE  	cd_material = cd_mat_vetor_w;

							IF (ie_consignado_w = '1') THEN
								SELECT  coalesce(MAX(a.cd_fornecedor),'X')
								INTO STRICT	cd_fornecedor_w
								FROM  	fornecedor_mat_consignado a,
									material m
								WHERE 	a.cd_material	= m.cd_material_estoque
								AND   	m.cd_material   = cd_mat_vetor_w
								AND   	m.ie_situacao 	= 'A'
								AND	a.dt_mesano_referencia = PKG_DATE_UTILS.start_of(dt_prescricao_w,'mm',0)
								AND qt_estoque = (	SELECT MAX(obter_saldo_estoque_consig(cd_estabelecimento_p, a.cd_fornecedor, a.cd_material, a.cd_local_estoque))
											FROM  	fornecedor_mat_consignado a,
												material m
											WHERE 	a.cd_material	= m.cd_material_estoque
											AND   	m.cd_material   = cd_mat_vetor_w
											AND   	m.ie_situacao 	= 'A'
											AND		a.dt_mesano_referencia = PKG_DATE_UTILS.start_of(dt_prescricao_w,'mm',0));

								IF (cd_fornecedor_w = 'X') THEN
									cd_fornecedor_w	:= NULL;
								END IF;
							ELSE
								cd_fornecedor_w	:= NULL;
							END IF;

							IF (coalesce(cd_subgrupo_param_w,0)	<> 0) THEN
								SELECT	coalesce(COUNT(*),0)
								INTO STRICT	qt_medic_w
								FROM	prescr_material a
								WHERE	a.nr_prescricao 	= nr_prescricao_w
								AND	a.ie_item_superior	= 'S'
								AND	a.nr_agrupamento	= nr_agrupamento_w;

								IF (coalesce(qt_medic_w,0)	> 0) THEN
									ie_item_superior_w	:= NULL;
								END IF;
							END IF;

							IF (coalesce(cd_mat_vetor_w,0) = '0') THEN
								cd_mat_vetor_w	:= vetor_aux_w[k].cd_material_w;
							END IF;

							IF (qt_mat_vetor_w > 0) THEN

								SELECT	MAX(ie_dias_util_medic)
								INTO STRICT	ie_dias_util_medic_w
								FROM	material
								WHERE	cd_material = cd_mat_vetor_w;

								IF (ie_dias_util_medic_w <> 'N')THEN
									SELECT  coalesce(MAX(a.nr_dia_util),0) + 1
									INTO STRICT	nr_dia_util_ww
									FROM    prescr_material a,
											prescr_medica b
									WHERE   a.nr_prescricao          = b.nr_prescricao
									AND     pkg_date_utils.get_time(b.dt_prescricao,0,0,0)   = pkg_date_utils.get_time(dt_prescricao_w - 1,0,0,0)
									AND     b.nr_atendimento		 = nr_atendimento_p
									AND     a.cd_material			 = cd_mat_vetor_w
									AND     b.nr_prescricao          <> nr_prescricao_w
									AND		coalesce(b.dt_suspensao::text, '') = '';
								END IF;

								begin
									nr_seq_diluicao_mapa_w := qt_prescr_diluicao_pck.obter_sequencia_diluicao(mapa_diluicao_w, nr_seq_diluicao_w);
									INSERT INTO prescr_material(
										nr_prescricao,
										nr_sequencia,
										ie_origem_inf,
										cd_material,
										cd_unidade_medida,
										qt_dose,
										qt_unitaria,
										qt_material,
										dt_atualizacao,
										nm_usuario,
										cd_intervalo,
										ds_observacao,
										ie_via_aplicacao,
										nr_agrupamento,
										cd_motivo_baixa,
										ie_utiliza_kit,
										cd_unidade_medida_dose,
										qt_conversao_dose,
										ie_urgencia,
										nr_ocorrencia,
										qt_total_dispensar,
										nr_sequencia_diluicao,
										ie_medicacao_paciente,
										ie_suspenso,
										ie_agrupador,
										ie_bomba_infusao,
										ie_se_necessario,
										ie_aplic_bolus,
										ie_aplic_lenta,
										ie_acm,
										qt_min_aplicacao,
										qt_hora_aplicacao,
										ie_recons_diluente_fixo,
										qt_dias_util,
										nr_seq_atend_medic,
										ie_sem_aprazamento,
										cd_fornec_consignado,
										nr_seq_material,
										nr_seq_atendimento,
										cd_mat_sem_apresent,
										ie_gerar_diluicao,
										nr_seq_via_acesso,
										ie_item_superior,
										ie_pre_medicacao,
										nr_sequencia_solucao,
										ds_observacao_enf,
										ie_agrupador_quimio,
										nr_sequencia_proc,
										nr_seq_ordem_adep,
										qt_dia_prim_hor,
										nr_seq_medic_material,
										ds_dose_diferenciada,
										NR_SEQ_MAT_DILUICAO,
										nr_dia_util,
										ds_justificativa,
										ie_objetivo,
										cd_topografia_cih,
										cd_amostra_cih,
										cd_microorganismo_cih,
										ie_origem_infeccao,
										nr_seq_mat_protocolo,
										cd_protocolo,
										nr_seq_protocolo)
									VALUES (nr_prescricao_w,
										nr_seq_medic_w,
										'S',
										cd_mat_vetor_w,
										cd_unidade_medida_consumo_w,
										qt_mat_vetor_w,
										qt_unitaria_w,
										qt_unitaria_w,
										dt_atualizacao_w,
										nm_usuario_p,
										cd_intervalo_ww,
										CASE WHEN coalesce(ds_observacao_w::text, '') = '' THEN ds_recomendacao_w  ELSE ds_recomendacao_w || CHR(10) || ds_observacao_w END ,
										ie_via_aplicacao_w,
										nr_agrupamento_w,
										0,
										'N',
										cd_unid_med_prescr_w,
										qt_conversao_dose_w,
										coalesce(ie_urgencia_w,'N'),
										coalesce(nr_ocorrencia_w,1),
										CEIL(qt_unitaria_w),
										nr_seq_diluicao_mapa_w,
										ie_medicacao_paciente_w,
										'N',
										ie_agrupamento_w,
										ie_bomba_infusao_w,
										coalesce(ie_se_necessario_w,'N'),
										coalesce(ie_aplic_bolus_w,'N'),
										coalesce(ie_aplic_lenta_w,'N'),
										coalesce(ie_acm_w,'N'),
										qt_min_aplicacao_w,
										qt_hora_aplicacao_w,
										'N',
										qt_dias_util_w,
										nr_seq_interno_w,
										'N',
										cd_fornecedor_w,
										nr_seq_material_w,
										nr_seq_atendimento_p,
										cd_material_w,
										ie_gerar_diluicao_w,
										nr_seq_via_acesso_w,
										ie_item_superior_w,
										ie_pre_medicacao_w,
										nr_seq_solucao_w,
										ds_justificativa_p || CASE WHEN coalesce(ds_justificativa_p::text, '') = '' THEN NULL  ELSE CHR(13) || WHEB_MENSAGEM_PCK.get_texto(299032,NULL) || ': '  || obter_nome_pf(obter_dados_usuario_opcao(nm_usuario_p,'C')) END ,
										ie_agrupador_oncologia_w,
										nr_seq_proc_w,
										nr_seq_ordem_adep_w,
										0,
										nr_seq_medic_material_w,
										ds_dose_difer_w,
										NR_SEQ_MAT_DILUICAO_w,
										nr_dia_util_ww,
										ds_justificativa_w,
										ie_objetivo_w,
										cd_topografia_cih_w,
										cd_amostra_cih_w,
										cd_microorganismo_cih_w,
										ie_origem_infeccao_w,
										nr_seq_mat_pro_w,
										cd_protocolo_w,
										nr_seq_medicacao_w);
								EXCEPTION
								when SQLSTATE '50009' then
									-- tentativa de gerar o diluente quando o medicamento principal nao existe
									null;
								end;

								-- mapear origem do medicamento principal
								if not mapa_diluicao_w.exists(nr_seq_material_w) then
									mapa_diluicao_w[nr_seq_material_w].nr_sequencia_origem := nr_seq_material_w;
									mapa_diluicao_w[nr_seq_material_w].nr_sequencia_destino := nr_seq_medic_w;
								end if;

								IF (ie_prescr_mat_sem_lib_w = 'S') THEN
									CALL Gerar_prescr_mat_sem_dt_lib(nr_prescricao_w,nr_seq_medic_w,obter_perfil_ativo,'N',nm_usuario_p,NULL);
								END IF;


								IF ( coalesce(Var_consistir_antim_w,'N') = 'S') THEN

										SELECT  MAX(cd_setor_atendimento)
										INTO STRICT	cd_setor_atend_prescr_w
										FROM	prescr_medica
										WHERE	nr_prescricao = nr_prescricao_w;


										SELECT coalesce(MAX(obter_controle_medic(cd_material,cd_estabelecimento_p,ie_controle_medico,Obter_Tipo_Atendimento(nr_atendimento_p),cd_setor_atend_prescr_w, obter_clinica_atend(nr_atendimento_p,'C'))),0)
										INTO STRICT	ie_ctrl_medico_antimicrob_w
										FROM 	material
										WHERE  cd_material = cd_mat_vetor_w;

										IF (ie_ctrl_medico_antimicrob_w >0 ) THEN

											SELECT 	MAX(nr_ciclo)
											INTO STRICT	nr_ciclo_solicitado_w
											FROM	paciente_atendimento
											WHERE	nr_seq_atendimento = nr_seq_atendimento_p;


											SELECT 	COUNT(1)
											INTO STRICT	qt_dias_solicitado_w
											FROM	paciente_atendimento a,
													paciente_atend_medic b
											WHERE	a.nr_seq_paciente = nr_seq_paciente_w
											AND		a.nr_seq_atendimento = b.nr_seq_atendimento
											AND		b.cd_material = cd_mat_vetor_w
											AND		a.nr_ciclo	= nr_ciclo_solicitado_w
											AND		coalesce(b.nr_seq_diluicao::text, '') = ''
											AND		coalesce(b.nr_seq_solucao::text, '') = '';


											IF (qt_dias_solicitado_w > 0) THEN


												SELECT 	COUNT(1) + 1
												INTO STRICT	qt_dias_ant_microbianos_w
												FROM	paciente_atendimento a,
														paciente_atend_medic b
												WHERE	a.nr_seq_paciente = nr_seq_paciente_w
												AND		a.nr_seq_atendimento = b.nr_seq_atendimento
												AND		b.cd_material = cd_mat_vetor_w
												AND		a.nr_ciclo	= nr_ciclo_solicitado_w
												AND		a.nr_seq_atendimento < nr_seq_atendimento_p
												AND		coalesce(b.nr_seq_diluicao::text, '') = ''
												AND		coalesce(b.nr_seq_solucao::text, '') = '';

												SELECT  MAX(qt_dias_liberado),
														MAX(qt_total_dias_lib)
												INTO STRICT	qt_dias_liberado_w,
														qt_total_dias_lib_w
												FROM	prescr_material a,
														paciente_atendimento b
												WHERE	a.cd_material = cd_mat_vetor_w
												AND		b.nr_ciclo	= nr_ciclo_solicitado_w
												AND		b.nr_seq_paciente = nr_seq_paciente_w
												AND		a.nr_seq_Atendimento = b.nr_seq_atendimento
												AND		a.nr_seq_atendimento < nr_seq_atendimento_p;

												UPDATE  prescr_material
												SET		qt_dias_solicitado = qt_dias_solicitado_w,
														nr_dia_util = qt_dias_ant_microbianos_w,
														qt_dias_liberado = qt_dias_liberado_w
												WHERE 	nr_prescricao = nr_prescricao_w
												AND		nr_sequencia = nr_seq_medic_w;


											END IF;

										END IF;

									END IF;


								--gerar_reconst_diluicao(nr_prescricao_w, nr_seq_medic_w, 'A');Caldas mandou comentar essa linha por estar duplicando
							END IF;

							ie_gerar_diluicao_w		:= 'N';
							cd_mat_vetor_w			:= vetor_aux_w[k].cd_material_w;
							qt_mat_vetor_w			:= vetor_aux_w[k].qt_dose_w;
							qt_unitaria_w			:= vetor_aux_w[k].qt_dose_w;
							qt_conversao_dose_w		:= vetor_aux_w[k].qt_dose_w;
							cd_unidade_medida_consumo_w 	:= vetor_aux_w[k].cd_unidade_medida_w;
							COMMIT;
						END IF;
					END LOOP;

					vetor_aux_w.DELETE;

					IF (coalesce(cd_mat_vetor_w,0) <> '0') THEN
                        /*
						qt_a_lancar_w	:= (qt_a_lancar_w - qt_mat_vetor_w);
						IF	(qt_a_lancar_w >= 0) THEN
							qt_total_dispensar_w := qt_a_lancar_w;
						ELSE
							qt_mat_vetor_w := (qt_mat_vetor_w - ABS(qt_a_lancar_w));
						END IF;
						qt_unitaria_w	:= dividir(qt_mat_vetor_w, qt_unitaria_w);
                        */
                        begin
                          sql_w := 'begin prescricao_paciente_pck_md.obter_qt_unitaria_mat_md(:1, :2, :3, :4); end;';
                          EXECUTE sql_w using in out qt_a_lancar_w,
                                                        in out qt_mat_vetor_w,
                                                        in out qt_unitaria_w,
                                                        out qt_total_dispensar_w;
                        exception
                          when others then
                            qt_a_lancar_w := null;
                            qt_mat_vetor_w := null;
                            qt_unitaria_w := null;
                            qt_total_dispensar_w := null;
                        end;

						SELECT	coalesce(MAX(nr_sequencia),0) +1
						INTO STRICT	nr_seq_medic_w
						FROM	prescr_material
						WHERE	nr_prescricao	= nr_prescricao_w;

						SELECT	coalesce(MAX(ie_consignado), 'X'),
							MAX(SUBSTR(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UMS'),1,30))
						INTO STRICT	ie_consignado_w,
							cd_unidade_medida_consumo_w
						FROM  	material
						WHERE  	cd_material = cd_mat_vetor_w;

						IF (ie_consignado_w = '1') THEN
							SELECT  coalesce(MAX(a.cd_fornecedor),'X')
							INTO STRICT	cd_fornecedor_w
							FROM  	fornecedor_mat_consignado a,
								material m
							WHERE 	a.cd_material	= m.cd_material_estoque
							AND   	m.cd_material   = cd_mat_vetor_w
							AND   	m.ie_situacao 	= 'A'
							AND	a.dt_mesano_referencia = PKG_DATE_UTILS.start_of(dt_prescricao_w,'mm',0)
							AND	qt_estoque = (	SELECT MAX(obter_saldo_estoque_consig(cd_estabelecimento_p, a.cd_fornecedor, a.cd_material, a.cd_local_estoque))
										FROM  	fornecedor_mat_consignado a,
											material m
										WHERE 	a.cd_material	= m.cd_material_estoque
										AND   	m.cd_material   = cd_mat_vetor_w
										AND   	m.ie_situacao 	= 'A'
										AND		a.dt_mesano_referencia = PKG_DATE_UTILS.start_of(dt_prescricao_w,'mm',0));

							IF (cd_fornecedor_w = 'X') THEN
								cd_fornecedor_w	:= NULL;
							END IF;
						ELSE
							cd_fornecedor_w	:= NULL;
						END IF;

						SELECT	coalesce(COUNT(*),0)
						INTO STRICT	qt_medic_w
						FROM	paciente_atend_medic a
						WHERE	a.nr_seq_atendimento 	= nr_seq_atendimento_p
						AND	a.ie_item_superior	= 'S'
						AND	a.nr_agrupamento	= nr_agrupamento_w;

						--Se nao tiver nenhum superior deve-se gerar como superior.
						IF (qt_medic_w	= 0) THEN
							ie_item_superior_w	:= 'S';
						END IF;
                        /*
						ie_gerar_diluicao_w		:= 'N';
						IF	(ie_item_superior_w	= 'S') THEN
							ie_gerar_diluicao_w	:= 'S';
						END IF;
                        */
                        begin
                          sql_w := 'call prescricao_paciente_pck_md.gerar_diluicao_md(:1) into :ie_gerar_diluicao_w';
                          EXECUTE sql_w using in ie_item_superior_w,
                                                        out ie_gerar_diluicao_w;
                        exception
                          when others then
                            ie_gerar_diluicao_w := null;
                        end;


						IF (coalesce(cd_subgrupo_param_w,0)	<> 0) THEN
							SELECT	coalesce(COUNT(*),0)
							INTO STRICT	qt_medic_w
							FROM	prescr_material a
							WHERE	a.nr_prescricao 	= nr_prescricao_w
							AND	a.ie_item_superior	= 'S'
							AND	a.nr_agrupamento	= nr_agrupamento_w;

							IF (coalesce(qt_medic_w,0)	> 0) THEN
								ie_item_superior_w	:= NULL;
							END IF;
						END IF;

						SELECT	MAX(ie_dias_util_medic)
						INTO STRICT	ie_dias_util_medic_w
						FROM	material
						WHERE	cd_material = cd_mat_vetor_w;

						IF (ie_dias_util_medic_w <> 'N')THEN
							SELECT  coalesce(MAX(a.nr_dia_util),0) + 1
							INTO STRICT	nr_dia_util_ww
							FROM    prescr_material a,
									prescr_medica b
							WHERE   a.nr_prescricao          = b.nr_prescricao
							AND     pkg_date_utils.get_time(b.dt_prescricao,0,0,0)   = pkg_date_utils.get_time(dt_prescricao_w - 1,0,0,0)
							AND     b.nr_atendimento		 = nr_atendimento_p
							AND     a.cd_material			 = cd_mat_vetor_w
							AND     b.nr_prescricao          <> nr_prescricao_w
							AND		coalesce(b.dt_suspensao::text, '') = '';
						END IF;

						begin
							nr_seq_diluicao_mapa_w := qt_prescr_diluicao_pck.obter_sequencia_diluicao(mapa_diluicao_w, nr_seq_diluicao_w);
							INSERT INTO prescr_material(
								nr_prescricao,
								nr_sequencia,
								ie_origem_inf,
								cd_material,
								cd_unidade_medida,
								qt_dose,
								qt_unitaria,
								qt_material,
								dt_atualizacao,
								nm_usuario,
								cd_intervalo,
								ds_observacao,
								ie_via_aplicacao,
								nr_agrupamento,
								cd_motivo_baixa,
								ie_utiliza_kit,
								cd_unidade_medida_dose,
								qt_conversao_dose,
								ie_urgencia,
								nr_ocorrencia,
								qt_total_dispensar,
								nr_sequencia_diluicao,
								ie_medicacao_paciente,
								ie_suspenso,
								ie_agrupador,
								ie_bomba_infusao,
								ie_se_necessario,
								ie_aplic_bolus,
								ie_aplic_lenta,
								ie_acm,
								qt_min_aplicacao,
								qt_hora_aplicacao,
								ie_recons_diluente_fixo,
								qt_dias_util,
								nr_seq_atend_medic,
								ie_sem_aprazamento,
								cd_fornec_consignado,
								nr_seq_material,
								nr_seq_atendimento,
								cd_mat_sem_apresent,
								ie_gerar_diluicao,
								nr_seq_via_acesso,
								ie_item_superior,
								ie_pre_medicacao,
								nr_sequencia_solucao,
								ds_observacao_enf,
								ie_Agrupador_quimio,
								nr_sequencia_proc,
								nr_seq_ordem_adep,
								qt_dia_prim_hor,
								nr_seq_medic_material,
								ds_dose_diferenciada,
								NR_SEQ_MAT_DILUICAO,
								nr_dia_util,
								ds_justificativa,
								ie_objetivo,
								cd_topografia_cih,
								cd_amostra_cih,
								cd_microorganismo_cih,
								ie_origem_infeccao,
								nr_seq_mat_protocolo,
								cd_protocolo,
								nr_seq_protocolo)
							VALUES (nr_prescricao_w,
								nr_seq_medic_w,
								'S',
								cd_mat_vetor_w,
								cd_unidade_medida_consumo_w,
								qt_mat_vetor_w,
								qt_unitaria_w,
								qt_unitaria_w,
								dt_atualizacao_w,
								nm_usuario_p,
								cd_intervalo_ww,
								CASE WHEN coalesce(ds_observacao_w::text, '') = '' THEN ds_recomendacao_w  ELSE ds_recomendacao_w || CHR(10) || ds_observacao_w END ,
								ie_via_aplicacao_w,
								nr_agrupamento_w,
								0,
								'N',
								cd_unid_med_prescr_w,
								qt_conversao_dose_w,
								coalesce(ie_urgencia_w,'N'),
								coalesce(nr_ocorrencia_w,1),
								CEIL(qt_unitaria_w),
								nr_seq_diluicao_mapa_w,
								ie_medicacao_paciente_w,
								'N',
								ie_agrupamento_w,
								ie_bomba_infusao_w,
								coalesce(ie_se_necessario_w,'N'),
								coalesce(ie_aplic_bolus_w,'N'),
								coalesce(ie_aplic_lenta_w,'N'),
								coalesce(ie_acm_w,'N'),
								qt_min_aplicacao_w,
								qt_hora_aplicacao_w,
								'N',
								qt_dias_util_w,
								nr_seq_interno_w,
								'N',
								cd_fornecedor_w,
								nr_seq_material_w,
								nr_seq_atendimento_p,
								cd_material_w,
								ie_gerar_diluicao_w,
								nr_seq_via_acesso_w,
								ie_item_superior_w,
								ie_pre_medicacao_w,
								nr_seq_solucao_w,
								ds_justificativa_p || CASE WHEN coalesce(ds_justificativa_p::text, '') = '' THEN NULL  ELSE CHR(13) || WHEB_MENSAGEM_PCK.get_texto(299032,NULL) || ': ' || obter_nome_pf(obter_dados_usuario_opcao(nm_usuario_p,'C')) END ,
								ie_agrupador_oncologia_w,
								nr_seq_proc_w,
								nr_seq_ordem_adep_w,
								0,
								nr_seq_medic_material_w,
								ds_dose_difer_w,
								NR_SEQ_MAT_DILUICAO_w,
								nr_dia_util_ww,
								ds_justificativa_w,
								ie_objetivo_w,
								cd_topografia_cih_w,
								cd_amostra_cih_w,
								cd_microorganismo_cih_w,
								ie_origem_infeccao_w,
								nr_seq_mat_pro_w,
								cd_protocolo_w,
								nr_seq_medicacao_w);
						exception
						when SQLSTATE '50009' then
							-- tentativa de gerar o diluente quando o medicamento principal nao existe
							null;
						end;

						-- mapear origem do medicamento principal
						if not mapa_diluicao_w.exists(nr_seq_material_w) then
							mapa_diluicao_w[nr_seq_material_w].nr_sequencia_origem := nr_seq_material_w;
							mapa_diluicao_w[nr_seq_material_w].nr_sequencia_destino := nr_seq_medic_w;
						end if;

						IF (ie_prescr_mat_sem_lib_w = 'S') THEN
								CALL Gerar_prescr_mat_sem_dt_lib(nr_prescricao_w,nr_seq_medic_w,obter_perfil_ativo,'N',nm_usuario_p,NULL);
						END IF;

						--gerar_reconst_diluicao(nr_prescricao_w, nr_seq_medic_w, 'A');Caldas mandou comentar essa linha por estar duplicando
					END IF;
				END IF;
			ELSE
				IF (cd_unid_med_consumo_w = cd_unid_med_prescr_w) THEN
					qt_conversao_dose_w	:= 1;
				ELSE
					BEGIN
					SELECT	qt_conversao
					INTO STRICT	qt_conversao_dose_w
					FROM	material_conversao_unidade
					WHERE	cd_material 	= cd_material_w
					AND	cd_unidade_medida = cd_unid_med_prescr_w;
					EXCEPTION
						WHEN OTHERS THEN
							qt_conversao_dose_w	:= 1;
					END;
				END IF;

				qt_unitaria_w := dividir(qt_dose_prescricao_w , qt_conversao_dose_w);

                /*
                qt_total_dispensar_w := dividir(qt_unitaria_w, qt_minimo_multiplo_solic_w) * qt_minimo_multiplo_solic_w;
                IF (qt_total_dispensar_w < qt_unitaria_w) THEN
                  qt_total_dispensar_w := qt_total_dispensar_w + qt_minimo_multiplo_solic_w;
				END IF;
                */
                begin
                  sql_w := 'call prescricao_paciente_pck_md.calular_total_dispensar_md(:1, :2) into :qt_total_dispensar_w';
                  EXECUTE sql_w using in qt_unitaria_w,
                                                in qt_minimo_multiplo_solic_w,
                                                out qt_total_dispensar_w;
                exception
                  when others then
                    qt_total_dispensar_w := null;
                end;

				SELECT	coalesce(MAX(ie_consignado), 'X')
				INTO STRICT	ie_consignado_w
				FROM  	material
				WHERE  	cd_material = cd_material_w;

				IF (ie_consignado_w = '1') THEN

					SELECT  coalesce(MAX(a.cd_fornecedor),'X')
					INTO STRICT	cd_fornecedor_w
					FROM  	fornecedor_mat_consignado a,
						material m
					WHERE 	a.cd_material	= m.cd_material_estoque
					AND   	m.cd_material   = cd_material_w
					AND   	m.ie_situacao 	= 'A'
					AND	a.dt_mesano_referencia = PKG_DATE_UTILS.start_of(dt_prescricao_w,'mm',0)
					AND qt_estoque = (	SELECT MAX(obter_saldo_estoque_consig(cd_estabelecimento_p, a.cd_fornecedor, a.cd_material, a.cd_local_estoque))
								FROM  	fornecedor_mat_consignado a,
										material m
								WHERE 	a.cd_material	= m.cd_material_estoque
								AND   	m.cd_material   = cd_material_w
								AND   	m.ie_situacao 	= 'A'
								AND		a.dt_mesano_referencia = PKG_DATE_UTILS.start_of(dt_prescricao_w,'mm',0));

					IF (cd_fornecedor_w = 'X') THEN
						cd_fornecedor_w	:= NULL;
					END IF;
				ELSE
					cd_fornecedor_w	:= NULL;
				END IF;

				IF (nr_seq_medic_material_w IS NOT NULL AND nr_seq_medic_material_w::text <> '') THEN
					SELECT 	MAX(nr_sequencia)
					INTO STRICT	nr_seq_medic_material_w
					FROM	prescr_material
					WHERE	nr_prescricao 	= nr_prescricao_w
					AND	nr_seq_material = nr_seq_medic_material_w;
				END IF;



				IF (coalesce(cd_subgrupo_param_w,0)	<> 0) THEN
					SELECT	coalesce(COUNT(*),0)
					INTO STRICT	qt_medic_w
					FROM	prescr_material a
					WHERE	a.nr_prescricao 	= nr_prescricao_w
					AND	a.ie_item_superior	= 'S'
					AND	a.nr_agrupamento	= nr_agrupamento_w;

					IF (coalesce(qt_medic_w,0)	> 0) THEN
						ie_item_superior_w	:= NULL;
					END IF;
				END IF;

				SELECT	coalesce(MAX(nr_sequencia),0) +1
				INTO STRICT	nr_seq_medic_w
				FROM	prescr_material
				WHERE	nr_prescricao	= nr_prescricao_w;

				SELECT	MAX(ie_dias_util_medic)
				INTO STRICT	ie_dias_util_medic_w
				FROM	material
				WHERE	cd_material = cd_material_w;

				IF (ie_dias_util_medic_w <> 'N')THEN
					SELECT  coalesce(MAX(a.nr_dia_util),0) + 1
					INTO STRICT	nr_dia_util_ww
					FROM    prescr_material a,
							prescr_medica b
					WHERE   a.nr_prescricao          = b.nr_prescricao
					AND     pkg_date_utils.get_time(b.dt_prescricao,0,0,0)   = pkg_date_utils.get_time(dt_prescricao_w - 1,0,0,0)
					AND     b.nr_atendimento		 = nr_atendimento_p
					AND     a.cd_material			 = cd_material_w
					AND     b.nr_prescricao          <> nr_prescricao_w
					AND		coalesce(b.dt_suspensao::text, '') = '';
				END IF;

				cd_intervalo_sol_w := null;

				if (nr_seq_solucao_w IS NOT NULL AND nr_seq_solucao_w::text <> '') then
					select 	coalesce(max(cd_intervalo), '')
					into STRICT	cd_intervalo_sol_w
					from	paciente_atend_soluc
					where 	nr_seq_atendimento = nr_seq_atendimento_p
					and 	nr_seq_solucao = nr_seq_solucao_w;					

					if (cd_intervalo_sol_w = '') then
						cd_intervalo_sol_w := null;
					end if;			
				end if;	

				if (cd_intervalo_sol_w IS NOT NULL AND cd_intervalo_sol_w::text <> '') then
					nr_ocorrencia_w	:= Obter_ocorrencia_intervalo(cd_intervalo_sol_w,24,'O');
				end if;

				begin
					nr_seq_diluicao_mapa_w := qt_prescr_diluicao_pck.obter_sequencia_diluicao(mapa_diluicao_w, nr_seq_diluicao_w);
					INSERT INTO prescr_material(
							nr_prescricao,
							nr_sequencia,
							ie_origem_inf,
							cd_material,
							cd_unidade_medida,
							qt_dose,
							qt_unitaria,
							qt_material,
							dt_atualizacao,
							nm_usuario,
							cd_intervalo,
							ds_observacao,
							ie_via_aplicacao,
							nr_agrupamento,
							cd_motivo_baixa,
							ie_utiliza_kit,
							cd_unidade_medida_dose,
							qt_conversao_dose,
							ie_urgencia,
							nr_ocorrencia,
							qt_total_dispensar,
							nr_sequencia_diluicao,
							ie_medicacao_paciente,
							ie_suspenso,
							ie_agrupador,
							ie_bomba_infusao,
							ie_se_necessario,
							ie_aplic_bolus,
							ie_aplic_lenta,
							ie_acm,
							qt_min_aplicacao,
							qt_hora_aplicacao,
							ie_recons_diluente_fixo,
							qt_dias_util,
							nr_seq_atend_medic,
							ie_sem_aprazamento,
							cd_fornec_consignado,
							nr_seq_material,
							nr_seq_atendimento,
							nr_seq_via_acesso,
							ie_item_superior,
							ie_pre_medicacao,
							nr_sequencia_solucao,
							ds_observacao_enf,
							ie_agrupador_quimio,
							nr_sequencia_proc,
							nr_seq_ordem_adep,
							qt_dia_prim_hor,
							nr_seq_medic_material,
							ds_dose_diferenciada,
							NR_SEQ_MAT_DILUICAO,
							nr_dia_util,
							ds_justificativa,
							ie_objetivo,
							cd_topografia_cih,
							cd_amostra_cih,
							cd_microorganismo_cih,
							ie_origem_infeccao,
							nr_seq_mat_protocolo,
							cd_protocolo,
							nr_seq_protocolo)
					VALUES (nr_prescricao_w,
							nr_seq_medic_w,
							'S',
							cd_material_w,
							cd_unid_med_consumo_w,
							qt_dose_prescricao_w,
							coalesce(qt_unitaria_w,0),
							(coalesce(qt_unitaria_w,0) * qt_dias_util_ww),
							dt_atualizacao_w,
							nm_usuario_p,
							CASE WHEN coalesce(nr_seq_solucao_w::text, '') = '' THEN  coalesce(cd_intervalo_ww,cd_intervalo_w)  ELSE cd_intervalo_sol_w END ,
							CASE WHEN coalesce(ds_observacao_w::text, '') = '' THEN ds_recomendacao_w  ELSE ds_recomendacao_w || CHR(10) || ds_observacao_w END ,
							ie_via_aplicacao_w,
							nr_agrupamento_w,
							0,
							'N',
							cd_unid_med_prescr_w,
							qt_conversao_dose_w,
							coalesce(ie_urgencia_w,'N'),
							coalesce(nr_ocorrencia_w,1),
							CEIL(qt_total_dispensar_w * qt_dias_util_ww),
							nr_seq_diluicao_mapa_w,
							ie_medicacao_paciente_w,
							'N',
							ie_agrupamento_w,
							ie_bomba_infusao_w,
							coalesce(ie_se_necessario_w,'N'),
							coalesce(ie_aplic_bolus_w,'N'),
							coalesce(ie_aplic_lenta_w,'N'),
							coalesce(ie_acm_w,'N'),
							qt_min_aplicacao_w,
							qt_hora_aplicacao_w,
							'N',
							qt_dias_util_w,
							nr_seq_interno_w,
							'N',
							cd_fornecedor_w,
							nr_seq_material_w,
							nr_seq_atendimento_p,
							nr_seq_via_acesso_w,
							ie_item_superior_w,
							ie_pre_medicacao_w,
							nr_seq_solucao_w,
							SUBSTR(ds_justificativa_p || CASE WHEN coalesce(ds_justificativa_p::text, '') = '' THEN NULL  ELSE CHR(13) || WHEB_MENSAGEM_PCK.get_texto(299032,NULL) || ': '|| obter_nome_pf(obter_dados_usuario_opcao(nm_usuario_p,'C')) END ,1,2000),
							ie_agrupador_oncologia_w,
							nr_seq_proc_w,
							nr_seq_ordem_adep_w,
							0,
							nr_seq_medic_material_w,
							ds_dose_difer_w,
							NR_SEQ_MAT_DILUICAO_w,
							nr_dia_util_ww,
							ds_justificativa_w,
							ie_objetivo_w,
							cd_topografia_cih_w,
							cd_amostra_cih_w,
							cd_microorganismo_cih_w,
							ie_origem_infeccao_w,
							nr_seq_mat_pro_w,
							cd_protocolo_w,
							nr_seq_medicacao_w);
					EXCEPTION
					when SQLSTATE '50009' then
						-- tentativa de gerar o diluente quando o medicamento principal nao existe
						null;
					end;

					-- mapear origem do medicamento principal
					if not mapa_diluicao_w.exists(nr_seq_material_w) then
						mapa_diluicao_w[nr_seq_material_w].nr_sequencia_origem := nr_seq_material_w;
						mapa_diluicao_w[nr_seq_material_w].nr_sequencia_destino := nr_seq_medic_w;
					end if;

					IF (ie_prescr_mat_sem_lib_w = 'S') THEN
						CALL Gerar_prescr_mat_sem_dt_lib(nr_prescricao_w,nr_seq_medic_w,obter_perfil_ativo,'N',nm_usuario_p,NULL);
					END IF;


					IF ( coalesce(Var_consistir_antim_w,'N') = 'S') THEN

						SELECT  MAX(cd_setor_atendimento)
						INTO STRICT	cd_setor_atend_prescr_w
						FROM	prescr_medica
						WHERE	nr_prescricao = nr_prescricao_w;


						SELECT coalesce(MAX(obter_controle_medic(cd_material,cd_estabelecimento_p,ie_controle_medico,Obter_Tipo_Atendimento(nr_atendimento_p),cd_setor_atend_prescr_w, obter_clinica_atend(nr_atendimento_p,'C'))),0)
						INTO STRICT	ie_ctrl_medico_antimicrob_w
						FROM	material
						WHERE	cd_material	= cd_material_w;

						IF (ie_ctrl_medico_antimicrob_w > 0) THEN


							SELECT 	MAX(nr_ciclo)
							INTO STRICT	nr_ciclo_solicitado_w
							FROM	paciente_atendimento
							WHERE	nr_seq_atendimento = nr_seq_atendimento_p;


							SELECT 	COUNT(1)
							INTO STRICT	qt_dias_solicitado_w
							FROM	paciente_atendimento a,
									paciente_atend_medic b
							WHERE	a.nr_seq_paciente = nr_seq_paciente_w
							AND		a.nr_seq_atendimento = b.nr_seq_atendimento
							AND		b.cd_material = cd_material_w
							AND		a.nr_ciclo	= nr_ciclo_solicitado_w
							AND		coalesce(b.nr_seq_diluicao::text, '') = ''
							AND		coalesce(b.nr_seq_solucao::text, '') = '';


							IF (qt_dias_solicitado_w > 0) THEN

								SELECT 	COUNT(1) + 1
								INTO STRICT	qt_dias_ant_microbianos_w
								FROM	paciente_atendimento a,
										paciente_atend_medic b
								WHERE	a.nr_seq_paciente = nr_seq_paciente_w
								AND		a.nr_seq_atendimento = b.nr_seq_atendimento
								AND		b.cd_material = cd_material_w
								AND		a.nr_ciclo	= nr_ciclo_solicitado_w
								AND		a.nr_seq_atendimento < nr_seq_atendimento_p
								AND		coalesce(b.nr_seq_diluicao::text, '') = ''
								AND		coalesce(b.nr_seq_solucao::text, '') = '';



								SELECT  MAX(qt_dias_liberado),
										MAX(qt_total_dias_lib)
								INTO STRICT	qt_dias_liberado_w,
										qt_total_dias_lib_w
								FROM	prescr_material a,
										paciente_atendimento b
								WHERE	a.cd_material = cd_material_w
								AND		b.nr_ciclo	= nr_ciclo_solicitado_w
								AND		a.nr_seq_Atendimento = b.nr_seq_atendimento
								AND		b.nr_seq_paciente = nr_seq_paciente_w
								AND		a.nr_seq_atendimento < nr_seq_atendimento_p;



								UPDATE  prescr_material
								SET		qt_dias_solicitado = qt_dias_solicitado_w,
										nr_dia_util = qt_dias_ant_microbianos_w,
										qt_dias_liberado = qt_dias_liberado_w
								WHERE 	nr_prescricao = nr_prescricao_w
								AND		nr_sequencia = nr_seq_medic_w;


							END IF;

						END IF;

					END IF;

					--gerar_reconst_diluicao(nr_prescricao_w, nr_seq_medic_w, 'A');Caldas mandou comentar essa linha por estar duplicando
				END IF;
			END;
		END LOOP;
		CLOSE c01;

		-- incluir as dietas
		SELECT	coalesce(MAX(nr_sequencia),0)
		INTO STRICT	nr_seq_dieta_w
		FROM	prescr_dieta
		WHERE	nr_prescricao = nr_prescricao_w;

		OPEN C07;
		LOOP
		FETCH C07 INTO
			cd_material_w,
			qt_material_w,
			cd_intervalo_w,
			ie_via_aplicacao_w;
		EXIT WHEN NOT FOUND; /* apply on C07 */
			BEGIN
			nr_ocorrencia_w	:= 1;
				SELECT	SUBSTR(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo,
					ie_tipo_material
				INTO STRICT	cd_unidade_medida_consumo_w,
					ie_tipo_material_w
				FROM	material
				WHERE	cd_material = cd_material_w;

				IF (ie_tipo_material_w = '1') THEN
					ie_agrupador_w	:= '2';
				ELSIF (ie_tipo_material_w IN ('2','3','6')) THEN
					ie_agrupador_w	:= '1';
				END IF;

				SELECT	coalesce(MAX(qt_conversao),1)
				INTO STRICT	qt_conversao_w
				FROM	material_conversao_unidade
				WHERE	cd_material			= cd_material_w
				AND	cd_unidade_medida	= cd_unidade_medida_consumo_w;


				SELECT  coalesce(MAX(nr_sequencia),0) + 1
				INTO STRICT	nr_seq_presc_material_w
				FROM	prescr_material
				WHERE	nr_prescricao = nr_prescricao_w;

				INSERT	INTO Prescr_material(
					nr_prescricao,
					nr_sequencia,
					ie_origem_inf,
					cd_material,
					cd_unidade_medida_dose,
					cd_unidade_medida,
					qt_dose,
					qt_unitaria,
					qt_material,
					dt_atualizacao,
					nm_usuario,
					cd_intervalo,
					ds_observacao,
					nr_seq_pe_proc,
					ie_agrupador,
					ie_medicacao_paciente,
					ie_se_necessario,
					ie_urgencia,
					ie_suspenso,
					ie_utiliza_kit,
					ie_status_cirurgia,
					ie_bomba_infusao,
					ie_aplic_bolus,
					ie_aplic_lenta,
					ie_acm,
					cd_motivo_baixa,
					dt_baixa,
					qt_conversao_dose,
					ds_horarios,
					nr_ocorrencia,
					ie_via_aplicacao,
					ie_recons_diluente_fixo,
					ie_sem_aprazamento,
					ie_cobra_paciente,
					ie_intervalo_dif,
					hr_prim_horario,
					nr_agrupamento,
					ds_justificativa,
					qt_total_dispensar,
					ds_dose_diferenciada,
					nr_seq_mat_protocolo,
					cd_protocolo,
					nr_seq_protocolo)
				VALUES (
					nr_prescricao_w,
					nr_seq_presc_material_w,
					'A',
					cd_material_w,
					cd_unidade_medida_consumo_w,
					cd_unidade_medida_consumo_w,
					qt_material_w,
					obter_conversao_unid_med_cons(cd_material_w, cd_unidade_medida_consumo_w, qt_material_w),
					qt_material_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_intervalo_w,
					NULL,
					NULL,
					ie_agrupador_w,
					ie_medicacao_paciente_w,
					'N',
					'N',
					'N',
					'N',
					'GI',
					'N',
					'N',
					'N',
					coalesce(ie_acm_w,'N'),
					0,
					NULL,
					qt_conversao_w,
					NULL,
					nr_ocorrencia_w,
					ie_via_aplicacao_w,
					'N',
					'N',
					NULL,
					NULL,
					NULL,
					CASE WHEN ie_agrupador_w='1' THEN Obter_proximo_agrup_medic(nr_prescricao_w)  ELSE NULL END ,
					NULL,
					CASE WHEN nr_ocorrencia_w=0 THEN 1  ELSE nr_ocorrencia_w END  * QT_MATERIAL_w,
					ds_dose_difer_w,
					nr_seq_mat_pro_w,
					cd_protocolo_w,
					nr_seq_medicacao_w);


			END;
		END LOOP;
		CLOSE C07;

		IF (ie_diluicao_solucao_w	= 'S') THEN
			OPEN C11;
			LOOP
			FETCH C11 INTO
				nr_sequencia_w,
				nr_seq_solucao_w;
			EXIT WHEN NOT FOUND; /* apply on C11 */
				BEGIN
				CALL Gerar_Reconst_Diluicao_Sol(nr_prescricao_w,nr_sequencia_w,nr_seq_solucao_w,'A');
				END;
			END LOOP;
			CLOSE C11;
		END IF;


		OPEN c010;
		LOOP
		FETCH c010 INTO
			nr_seq_dieta_novo_w,
			nr_seq_dieta_prot_w,
			cd_dieta_w,
			ie_destino_dieta_w,
			ie_refeicao_w,
			ds_horarios_dieta_w,
			ds_observacao_dieta_w,
			cd_intervalo_w;
		EXIT WHEN NOT FOUND; /* apply on c010 */
			BEGIN
			INSERT INTO prescr_dieta(
				nr_prescricao,
				nr_sequencia,
				cd_dieta,
				dt_atualizacao,
				nm_usuario,
				ie_destino_dieta,
				ie_refeicao,
				ie_suspenso,
				ds_horarios,
				ds_observacao,
				cd_intervalo)
			VALUES (	nr_prescricao_w,
				nr_seq_dieta_novo_w,
				cd_dieta_w,
				clock_timestamp(),
				nm_usuario_p,
				ie_destino_dieta_w,
				ie_refeicao_w,
				'N',
				ds_horarios_dieta_w,
				ds_observacao_dieta_w,
				cd_intervalo_w);

			IF (ie_prescr_mat_sem_lib_w = 'S') THEN
				CALL Gerar_prescr_dieta_hor_sem_lib(nr_prescricao_w,nr_seq_dieta_novo_w,obter_perfil_ativo,'N','','N',nm_usuario_p);
			END IF;


			CALL inserir_mat_prescr_prot(nr_prescricao_w, cd_protocolo_w, nr_seq_medicacao_w, 0,
						6, nr_seq_dieta_prot_w, 0, 0, nr_seq_dieta_novo_w,
						NULL, NULL, cd_intervalo_w, 1, nm_usuario_p, 'N',0,NULL,0,nr_seq_atendimento_p, NULL,NULL,NULL, NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'S',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,null,null,null);
			END;
		END LOOP;
		CLOSE c010;

		IF (Var_gerar_material_dia_apli_w = 'N') THEN
			CALL inserir_mat_prescr_prot(nr_prescricao_w,
						cd_protocolo_w,
						nr_seq_medicacao_w,
						0,
						2,
						0,
						0,
						0,
						NULL,
						NULL,
						NULL,
						cd_intervalo_w,
						1,
						nm_usuario_p,
						'N',
						0,
						NULL,
						0,
						nr_seq_atendimento_p,
						NULL,
						NULL,
						NULL,
						NULL,
						NULL,
						NULL,
						NULL,
						NULL,
						NULL,
						NULL,
						'S',
						NULL,
						NULL,
						'S',
						NULL,
						NULL,
						NULL,
						NULL,NULL,NULL,NULL,NULL,NULL,null,null,null);
		END IF;

		COMMIT;

		ie_gerar_horarios := obter_param_usuario(281, 423, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_horarios);
		nr_ocorrencia_ww	:= NULL;


		dt_primeiro_horario_ww := dt_primeiro_horario_w;

		OPEN c10;
		LOOP
		FETCH c10 INTO
			nr_sequencia_w,
			nr_agrupamento_w,
			qt_hora_aplicacao_w,
			qt_min_aplicacao_w,
			cd_intervalo_ww,
			nr_ocorrencia_w,
			cd_material_w,
			dt_prescricao_w,
			dt_inicio_prescr_w,
			ie_acm_w,
			ie_se_necessario_w;
		EXIT WHEN NOT FOUND; /* apply on c10 */
			BEGIN
		    /*
			IF	(nr_agrupamento_ant_w = -1) THEN
				dt_primeiro_horario_w	:= dt_prescricao_w + (qt_minutos_adic_w/1440);
			END IF;

			IF	(dt_primeiro_horario_w < dt_inicio_prescr_w) THEN
				dt_primeiro_horario_w	:= (dt_primeiro_horario_w) + (1/1440);
			END IF;
            */
            begin
              sql_w := 'call prescricao_paciente_pck_md.calcular_dt_prim_horario_md(:1, :2, :3, :4, :5) into :dt_primeiro_horario_w';
              EXECUTE sql_w using in nr_agrupamento_ant_w,
                                            in dt_prescricao_w,
                                            in qt_minutos_adic_w,
                                            in dt_inicio_prescr_w,
                                            in dt_primeiro_horario_w,
                                            out dt_primeiro_horario_w;
            exception
              when others then
                 dt_primeiro_horario_w := null;
            end;


			IF (nr_agrupamento_w <> nr_agrupamento_ant_w) THEN
				BEGIN
                    IF (ie_gerar_horarios = 'S') THEN
                        nr_ocorrencia_w := 0;
                    END IF;

                    SELECT * FROM calcular_horario_prescricao(nr_prescricao_w, cd_intervalo_ww, coalesce(dt_primeiro_horario_ww, dt_prescricao_w), dt_primeiro_horario_w, 24, cd_material_w, 0, 0, nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'N', NULL) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;

                    ds_horarios_w		:= ds_horarios_w || ds_horarios2_w;

                    ds_prim_horario_w	:= TO_CHAR(dt_primeiro_horario_w, 'hh24:mi');
                    /*
                    if	(ie_acm_w = 'S') then
                        ds_horarios_w := 'ACM';
                        if	(ie_limpar_prim_hor_acm_w = 'S') then
                            ds_prim_horario_w := '';
                        end if;
                    elsif	(ie_se_necessario_w = 'S') then
                        ds_horarios_w := 'SN';
                        ds_prim_horario_w := '';
                    end if;
                    */
                    begin
                      sql_w := 'begin prescricao_paciente_pck_md.obter_prim_horario_md(:1, :2, :3, :4, :5); end;';
                      EXECUTE sql_w using in ie_acm_w,
                                                    in ie_limpar_prim_hor_acm_w,
                                                    in ie_se_necessario_w,
                                                    in out ds_horarios_w,
                                                    in out ds_prim_horario_w;
                    exception
                      when others then
                        ds_horarios_w := null;
                        ds_prim_horario_w := null;
                    end;

                    UPDATE	prescr_material
                    SET	ds_horarios	= ds_horarios_w,
                        hr_prim_horario	= ds_prim_horario_w,
                        nr_ocorrencia	= nr_ocorrencia_w
                    WHERE	nr_prescricao	= nr_prescricao_w
                    AND	nr_sequencia	= nr_sequencia_w;

                    nr_ocorrencia_ww	:= nr_ocorrencia_w;
                    /*
                    dt_primeiro_horario_w	:= dt_primeiro_horario_w + dividir_sem_round((NVL(qt_hora_aplicacao_w,0) * 60) + NVL(qt_min_aplicacao_w,0),1440);
                    */
                    begin
                      sql_w := 'call prescricao_paciente_pck_md.calcular_dt_prim_horario_2_md(:1, :2, :3) into :dt_primeiro_horario_w';
                      EXECUTE sql_w using in qt_hora_aplicacao_w,
                                                    in qt_min_aplicacao_w,
                                                    in dt_primeiro_horario_w,
                                                    out dt_primeiro_horario_w;
                    exception
                      when others then
                        dt_primeiro_horario_w := null;
                    end;

				END;
			ELSE
				UPDATE	prescr_material
				SET	ds_horarios	= ds_horarios_w,
					hr_prim_horario	= ds_prim_horario_w,
					nr_ocorrencia	= coalesce(nr_ocorrencia_ww,nr_ocorrencia_w)
				WHERE	nr_prescricao	= nr_prescricao_w
				AND	nr_sequencia	= nr_sequencia_w;
			END IF;
			nr_agrupamento_ant_w	:= nr_agrupamento_w;
			END;
		END LOOP;
		CLOSE c10;

		COMMIT;

		OPEN c000;
		LOOP
		FETCH c000 INTO
			cd_material_w,
			nr_sequencia_w,
			qt_unitaria_w,
			qt_material_w,
			ds_horarios_w,
			nr_ocorrencia_w,
			qt_total_dispensar_w,
			ds_dose_diferenciada_w,
			cd_intervalo_w,
			ie_via_aplicacao_w,
			cd_unidade_medida_dose_w,
			qt_dias_util_ww,
			ie_se_necessario_w,
			ie_acm_w;
		EXIT WHEN NOT FOUND; /* apply on c000 */
			BEGIN

			BEGIN
			SELECT * FROM obter_quant_dispensar(cd_estabelecimento_p, cd_material_w, nr_prescricao_w, nr_sequencia_w, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, 0, nr_ocorrencia_w, ds_dose_diferenciada_w, ie_origem_inf_w, cd_unidade_medida_dose_w, qt_dias_util_ww, qt_material_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_material_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w;

			UPDATE	prescr_material
			SET 	nr_ocorrencia		= nr_ocorrencia_w,
				qt_total_dispensar	= qt_total_dispensar_w,
				qt_material		= qt_material_w,
				ds_horarios		= ds_horarios_w,
				ie_regra_disp		= CASE WHEN coalesce(ie_regra_disp,'X')='D' THEN  ie_regra_disp  ELSE ie_regra_disp_w END
			WHERE	nr_prescricao 		= nr_prescricao_w
			AND	nr_sequencia		= nr_sequencia_w;

			IF (ie_gerar_reconst_w = 'S') THEN
				CALL gerar_reconst_diluicao(nr_prescricao_w, nr_sequencia_w, 'A');
			END IF;

			CALL ajustar_prescr_material(nr_prescricao_w,nr_sequencia_w);
			EXCEPTION WHEN OTHERS THEN
				erro_w	:= SQLERRM;

			END;
			END;
		END LOOP;
		CLOSE c000;

		OPEN C0000;
		LOOP
		FETCH C0000 INTO
			cd_material_w,
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on C0000 */
			BEGIN
			IF (ie_gerar_reconst_w = 'X') THEN
				CALL gerar_reconst_diluicao(nr_prescricao_w, nr_sequencia_w, 'A');
			END IF;
			END;
		END LOOP;
		CLOSE C0000;

		SELECT	MAX(dt_inicio_prescr)
		INTO STRICT	dt_inicio_prescr_w
		FROM	prescr_medica
		WHERE	nr_prescricao = nr_prescricao_w;

		SELECT	to_char(max(dt_primeiro_horario), 'hh24:mi')
		INTO STRICT	ds_prim_horario_w
		FROM	prescr_medica
		WHERE	nr_prescricao = nr_prescricao_w;

		OPEN C09;
		LOOP
		FETCH C09 INTO
			cd_recomendacao_w,
			ds_recomendacao_w,
			cd_intervalo_w,
			ie_acm_w,
			IE_SE_NECESSARIO_w,
			nr_seq_classif_w,
			nr_seq_ordem_adep_w,
			cd_kit_w;
		EXIT WHEN NOT FOUND; /* apply on C09 */
			BEGIN


			SELECT	coalesce(MAX(nr_sequencia),0) +1
			INTO STRICT	nr_seq_proc_w
			FROM	prescr_recomendacao
			WHERE	nr_prescricao	= nr_prescricao_w;

			INSERT INTO prescr_recomendacao(	NR_PRESCRICAO,
												nr_sequencia,
												IE_DESTINO_REC,
												dt_atualizacao,
												nm_usuario,
												cd_intervalo,
												CD_RECOMENDACAO,
												DS_RECOMENDACAO,
												IE_SE_NECESSARIO,
												ie_acm,
												nr_seq_classif,
												nr_seq_ordem_adep,
												hr_prim_horario,
												CD_KIT)
						VALUES (	nr_prescricao_w,
												nr_seq_proc_w,
												'E',
												clock_timestamp(),
												nm_usuario_p,
												cd_intervalo_w,
												cd_recomendacao_w,
												ds_recomendacao_w,
												ie_se_necessario_w,
												ie_acm_w,
												nr_seq_classif_w,
												nr_seq_ordem_adep_w,
												ds_prim_horario_w,
												cd_kit_w);

			IF (ie_prescr_mat_sem_lib_w = 'S') THEN
				CALL Gerar_prescr_hor_sem_lib(nr_prescricao_w,nr_seq_proc_w,obter_perfil_ativo,'N',nm_usuario_p);
			END IF;

			END;
		END LOOP;
		CLOSE C09;



		UPDATE	prescr_material
		SET	qt_solucao	= obter_dose_convertida(cd_material, qt_dose, cd_unidade_medida_dose, obter_unid_med_usua('ml'))
		WHERE	nr_prescricao	= nr_prescricao_w
		AND 	ie_agrupador	= 4
		AND	(nr_sequencia_solucao IS NOT NULL AND nr_sequencia_solucao::text <> '');

		OPEN C06;
		LOOP
		FETCH C06 INTO
			qt_solucao_total_w,
			nr_seq_solucao_w;
		EXIT WHEN NOT FOUND; /* apply on c06 */
			BEGIN

			UPDATE	prescr_solucao
			SET	qt_solucao_total = qt_solucao_total_w
			WHERE	nr_prescricao	= nr_prescricao_w
			AND	nr_seq_solucao 	= nr_seq_solucao_w;

			CALL Atualizar_dados_solucao(nr_prescricao_w, nr_seq_solucao_w, qt_solucao_total_w, 0, obter_perfil_ativo, cd_estabelecimento_p, nm_usuario_p);
			CALL Atualizar_dados_solucao(nr_prescricao_w, nr_seq_solucao_w, qt_solucao_total_w, 0, obter_perfil_ativo, cd_estabelecimento_p, nm_usuario_p);
			END;
		END LOOP;
		CLOSE C06;

		if (ie_gera_med_uso_w = 'S') then
			OPEN C14;
			LOOP
			FETCH C14 INTO
				nr_sequencia_med_w,
				cd_material_ww,
				qt_dose_ww,
				cd_unidade_medida_plano_ww,
				cd_intervalo_www,
				ie_via_aplicacao_ww;
			EXIT WHEN NOT FOUND; /* apply on c14 */
				BEGIN

				CALL inserir_medicamento_hist_saude( nr_prescricao_w, nr_atendimento_w, cd_material_ww, qt_dose_ww, cd_unidade_medida_plano_ww, cd_intervalo_www, ie_via_aplicacao_ww, nm_usuario_p, 'S');

				END;
			END LOOP;
			CLOSE C14;
		end if;

		COMMIT;


		IF (ie_gerar_reconst_w = 'S') THEN
			OPEN C13;
			LOOP
			FETCH C13 INTO
				nr_sequencia_w;
			EXIT WHEN NOT FOUND; /* apply on C13 */
				BEGIN

						SELECT 	COUNT(*)
						INTO STRICT	qt_diluicao_w
						FROM 	prescr_material
						WHERE 	nr_prescricao = nr_prescricao_w
						AND 	nr_sequencia_diluicao = nr_sequencia_w;

						IF (qt_diluicao_w = 0) OR (coalesce(ie_questionar_diluicao_dose_w,'N') <> 'N') THEN

							DELETE FROM prescr_material
							WHERE  nr_prescricao = nr_prescricao_w
							AND    nr_sequencia_diluicao = nr_sequencia_w;

							COMMIT;

						END IF;
					CALL gerar_reconst_diluicao(nr_prescricao_w, nr_sequencia_w, 'A');
					CALL ajustar_dose_diluente(nr_prescricao_w,nr_sequencia_w);
				END;
			END LOOP;
			CLOSE C13;
		END IF;

		IF ( coalesce(ie_calc_vol_diluicao_w,'N') = 'S' ) THEN
			CALL calcular_vol_dil_afterpost(nr_prescricao_w, nm_usuario_p);
		END IF;

		if (coalesce(ie_gerar_orientacao_preparo_w, 'N') = 'S') then
			CALL gerar_orientacao_preparo_onc(nr_prescricao_w);
		end if;

		IF (ie_liberado_w = 'S') OR (ie_liberado_w = 'L') OR
			(ie_liberado_w = 'Q' AND ie_liberado_p = 'S') THEN
			CALL liberar_prescr_onc(nr_prescricao_w,nr_seq_atendimento_p,cd_estabelecimento_p,ds_erro_w,nm_usuario_p);
			ie_rep_cpoe_w := 'N';

		ELSIF (ie_gerar_kit_n_lib_prescr_w = 'S') THEN
			CALL Gerar_kit_Prescricao(cd_estabelecimento_p,nr_prescricao_w,NULL,nm_usuario_p);
			CALL Gerar_kit_solucao(nr_prescricao_w,nm_usuario_p,obter_perfil_ativo);

		END IF;

		if (ie_rep_cpoe_w = 'S') then
			select case count(*) when 0 then 'N' else 'S' end
			  into STRICT ie_origem_inf_w
			  from medico a,
				   usuario b
			 where a.cd_pessoa_fisica = b.cd_pessoa_fisica
			   and b.nm_usuario = nm_usuario_p
			   and a.ie_situacao = 'A';

			select max(nr_atendimento)
			into STRICT	nr_atendimento_w
			from prescr_medica
			where nr_prescricao = nr_prescricao_w;

			CALL cpoe_rep_gerar_itens( nr_prescricao_w, nr_atendimento_w, dt_prescricao_w, dt_validade_prescr_w, null, nm_usuario_p, cd_pessoa_fisica_w, ie_origem_inf_w, 'S');
		end if;

		CALL define_local_disp_prescr(nr_prescricao_w, NULL, obter_perfil_ativo, nm_usuario_p); /* ivan em 18/10/2007 os70266*/
		IF (ie_liberar_para_agend_w = 'S') THEN
			CALL qt_liberar_para_agendamento(nr_seq_atendimento_p,'D','L',nm_usuario_p,cd_estabelecimento_p);
		END IF;

		UPDATE	prescr_medica
		SET	   	cd_protocolo  = cd_protocolo_w
		WHERE	nr_prescricao = nr_prescricao_w;

		IF (ie_atualiza_dt_chegada_w = 'S') THEN
		  CALL qt_atualizar_chegada_paciente(nm_usuario_p, nr_seq_atendimento_p);
		END IF;


	EXCEPTION
	WHEN OTHERS THEN
		ds_erro_abortar_w        := SUBSTR(SQLERRM,1,2000);
		ROLLBACK;
	  --Gerar prescricao paciente: = 457783
		CALL gravar_log_tasy(21812, WHEB_MENSAGEM_PCK.get_texto(457783, 'nr_prescricao_w='||nr_prescricao_w||';ds_erro_abortar_w='||ds_erro_abortar_w), nm_usuario_p);
		COMMIT;
		CALL exibir_erro_abortar(ds_erro_abortar_w,NULL);
		ds_retorno_p := ds_erro_abortar_w;
	END;


<<Final>>
qt_reg_w	:= 0;

COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescricao_paciente ( nr_seq_atendimento_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_atendimento_p text DEFAULT NULL, ds_justificativa_p text DEFAULT NULL, ie_liberado_p text DEFAULT 'N', ds_retorno_p INOUT text DEFAULT NULL, ie_gerar_todas_prescr_p text DEFAULT 'N') FROM PUBLIC;

