-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_lista_dest_email_hemot ( nr_seq_geracao_email_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
cd_pessoa_fisica_w	varchar(10);
nr_seq_lote_envio_w	bigint;
ie_Sexo_pf_w		varchar(1);
qt_Reg_sexo_W		bigint;
qt_reg_sexo_tc_W	bigint;
ie_ultimo_tipo_coleta_w	smallint;
QT_DIAS_ULT_DIA_w	bigint;
QT_DIAS_ULT_DIA_sexo_w	bigint;
ie_apto_W		varchar(1);	
dt_coleta_w		timestamp;
nr_coletas_ultimo_ano_w	bigint;
nr_col_perm_ano_w	bigint;	
dt_referencia_w		timestamp;
dt_referencia_final_w	timestamp;
ie_fator_rh_w		varchar(1);
ie_tipo_sangue_w	varchar(2);
ie_somente_email_w	varchar(1);	
cd_municipio_ibge_w	varchar(6);
ie_sexo_w		varchar(1);
dt_doacao_inicial_w	timestamp;
dt_doacao_final_w	timestamp;
cd_doador_w		varchar(10);
					
c01 CURSOR FOR 
	SELECT 	DISTINCT a.cd_pessoa_fisica, 
		a.nr_sequencia 
	FROM  	san_doacao a 
	WHERE 	ie_avaliacao_final = 'A' 
	AND	((obter_dados_pf(a.cd_pessoa_fisica,'RH') = ie_fator_rh_w) OR (ie_fator_rh_w = 'A')) 
	AND	((obter_dados_pf(a.cd_pessoa_fisica,'TS') = ie_tipo_sangue_w) OR (ie_tipo_sangue_w = 'T')) 
	AND	(((obter_compl_pf(a.cd_pessoa_fisica,1,'M') IS NOT NULL AND (obter_compl_pf(a.cd_pessoa_fisica,1,'M'))::text <> '')) OR (ie_somente_email_w = 'N')) 
	AND	((obter_compl_pf(a.cd_pessoa_fisica,1,'CDM') = cd_municipio_ibge_w) OR (coalesce(cd_municipio_ibge_w::text, '') = '')) 
	AND	((Obter_Sexo_PF(a.cd_pessoa_fisica,'C') = ie_sexo_w) OR (coalesce(ie_sexo_w::text, '') = '')) 
	AND	((coalesce(dt_doacao_inicial_w::text, '') = '') or (a.dt_doacao >= dt_doacao_inicial_w)) 
	AND	((coalesce(dt_doacao_final_w::text, '') = '') or (a.dt_doacao <= fim_dia(dt_doacao_final_w))) 
	AND	((a.cd_pessoa_fisica = cd_doador_w) OR (coalesce(cd_doador_w::text, '') = '')) 
	AND	a.nr_sequencia = (SELECT MAX(nr_sequencia) 
			 	 FROM 	 san_doacao x 
				 WHERE x.cd_pessoa_fisica = a.cd_pessoa_fisica)  
	
UNION
 
	SELECT 	DISTINCT a.cd_pessoa_fisica, 
		nr_seq_doacao 
	FROM  	san_impedimento c, 
		san_doacao_impedimento b, 
		san_doacao a 
	WHERE 	a.nr_sequencia = b.nr_seq_doacao  
	AND  	b.nr_seq_impedimento = c.nr_sequencia 
	AND  	a.ie_avaliacao_final <> 'A' 
	AND  	c.ie_definitivo = 'N' 
	AND  ((coalesce(dt_ocorrencia::text, '') = '') OR ((dt_ocorrencia IS NOT NULL AND dt_ocorrencia::text <> '') AND (TRUNC(dt_ocorrencia + coalesce(nr_dias_inaptidao,0))) <= TRUNC(dt_referencia_w))) 
	AND  	(dt_ocorrencia IS NOT NULL AND dt_ocorrencia::text <> '') 
	AND  	nr_dias_inaptidao > 0 
	AND	((obter_dados_pf(a.cd_pessoa_fisica,'RH') = ie_fator_rh_w) OR (ie_fator_rh_w = 'A')) 
	AND	((obter_dados_pf(a.cd_pessoa_fisica,'TS') = ie_tipo_sangue_w) OR (ie_tipo_sangue_w = 'T')) 
	AND	(((obter_compl_pf(a.cd_pessoa_fisica,1,'M') IS NOT NULL AND (obter_compl_pf(a.cd_pessoa_fisica,1,'M'))::text <> '')) OR (ie_somente_email_w = 'N')) 
	AND	((obter_compl_pf(a.cd_pessoa_fisica,1,'CDM') = cd_municipio_ibge_w) OR (coalesce(cd_municipio_ibge_w::text, '') = '')) 
	AND	((Obter_Sexo_PF(a.cd_pessoa_fisica,'C') = ie_sexo_w) OR (coalesce(ie_sexo_w::text, '') = '')) 
	AND	((coalesce(dt_doacao_inicial_w::text, '') = '') or (a.dt_doacao >= dt_doacao_inicial_w)) 
	AND	((coalesce(dt_doacao_final_w::text, '') = '') or (a.dt_doacao <= fim_dia(dt_doacao_final_w))) 
	AND	((a.cd_pessoa_fisica = cd_doador_w) OR (coalesce(cd_doador_w::text, '') = '')) 
	AND	a.nr_sequencia = (SELECT MAX(nr_sequencia) 
				 FROM 	 san_doacao x 
				 WHERE x.cd_pessoa_fisica = a.cd_pessoa_fisica) 
	
UNION
 
	SELECT 	DISTINCT a.cd_pessoa_fisica, 
					 nr_seq_doacao 
	FROM  	san_impedimento c, 
			san_questionario b, 
			san_doacao a 
	WHERE 	a.nr_sequencia = b.nr_seq_doacao  
	AND  	b.nr_seq_impedimento = c.nr_sequencia 
	AND  	a.ie_avaliacao_final <> 'A' 
	AND  	c.ie_definitivo = 'N' 
	AND  ((coalesce(dt_ocorrencia::text, '') = '') OR ((dt_ocorrencia IS NOT NULL AND dt_ocorrencia::text <> '') AND (TRUNC(dt_ocorrencia + coalesce(nr_dias_inaptidao,0))) <= TRUNC(dt_referencia_w))) 
	AND  	(dt_ocorrencia IS NOT NULL AND dt_ocorrencia::text <> '') 
	AND  	nr_dias_inaptidao > 0 
	AND	((obter_dados_pf(a.cd_pessoa_fisica,'RH') = ie_fator_rh_w) OR (ie_fator_rh_w = 'A')) 
	AND	((obter_dados_pf(a.cd_pessoa_fisica,'TS') = ie_tipo_sangue_w) OR (ie_tipo_sangue_w = 'T')) 
	AND	(((obter_compl_pf(a.cd_pessoa_fisica,1,'M') IS NOT NULL AND (obter_compl_pf(a.cd_pessoa_fisica,1,'M'))::text <> '')) OR (ie_somente_email_w = 'N')) 
	AND	((obter_compl_pf(a.cd_pessoa_fisica,1,'CDM') = cd_municipio_ibge_w) OR (coalesce(cd_municipio_ibge_w::text, '') = '')) 
	AND	((Obter_Sexo_PF(a.cd_pessoa_fisica,'C') = ie_sexo_w) OR (coalesce(ie_sexo_w::text, '') = '')) 
	AND	((coalesce(dt_doacao_inicial_w::text, '') = '') or (a.dt_doacao >= dt_doacao_inicial_w)) 
	AND	((coalesce(dt_doacao_final_w::text, '') = '') or (a.dt_doacao <= fim_dia(dt_doacao_final_w))) 
	AND	((a.cd_pessoa_fisica = cd_doador_w) OR (coalesce(cd_doador_w::text, '') = '')) 
	AND	a.nr_sequencia = (SELECT MAX(nr_sequencia) 
				 FROM 	 san_doacao x 
				 WHERE x.cd_pessoa_fisica = a.cd_pessoa_fisica) 				  
	AND  coalesce(b.ie_impede_doacao,'N') = 'S' 
	ORDER BY 1;
					

BEGIN 
 
select	max(dt_referencia), 
	max(dt_referencia_final), 
	max(ie_fator_rh), 
	max(ie_tipo_sangue), 
	max(ie_somente_email), 
	max(cd_municipio_ibge), 
	max(ie_sexo), 
	max(dt_doacao_inicial), 
	max(dt_doacao_final), 
	max(cd_pessoa_fisica) 
into STRICT	dt_referencia_w, 
	dt_referencia_final_w, 
	ie_fator_rh_w, 
	ie_tipo_sangue_w, 
	ie_somente_email_w, 
	cd_municipio_ibge_w, 
	ie_sexo_w, 
	dt_doacao_inicial_w, 
	dt_doacao_final_w, 
	cd_doador_w 
from	san_doador_envio 
where	nr_sequencia = nr_seq_geracao_email_p;
 
open c01;
loop 
fetch 	c01 into 
	cd_pessoa_fisica_w, 
	nr_seq_lote_envio_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
 
	select	a.ie_sexo 
	into STRICT	ie_Sexo_pf_w 
	from	pessoa_Fisica a 
	where	a.cd_pessoa_fisica = cd_pessoa_fisica_w;
	 
	select	count(1) 
	into STRICT	qt_Reg_sexo_w 
	from	san_regra_Doacao 
	where	ie_sexo = ie_sexo_pf_w;
	 
	ie_apto_w := 'S';
	 
	If (qt_Reg_sexo_w > 0) then 
				 
		select 	ie_tipo_coleta, 
			dt_coleta, 
			(select	count(1) 
			 from	san_doacao 
			 where	trunc(dt_coleta) between(trunc(dt_referencia_w)-365) and trunc(dt_referencia_w) 
			 and	cd_pessoa_Fisica = cd_pessoa_fisica_w) 
		into STRICT	ie_ultimo_tipo_coleta_w, 
			dt_coleta_w, 
			nr_coletas_ultimo_ano_w 
		from  	san_doacao 
		where	nr_sequencia = (SELECT 	max(nr_sequencia) 
					from	san_doacao 
					where	cd_pessoa_Fisica = cd_pessoa_fisica_w);
					 
		select	count(1) 
		into STRICT	qt_reg_sexo_tc_w 
		from	san_regra_doacao 
		where	ie_sexo = ie_sexo_pf_w 
		and	NR_TIPO_DOACAO_ANTERIOR = ie_ultimo_tipo_coleta_w;
		 
		If (qt_reg_sexo_tc_w > 0) then 
		 
			select	max(QT_DIAS_ULT_DIA), 
				max(qt_doacao_Ano) 
			into STRICT	QT_DIAS_ULT_DIA_w, 
				nr_col_perm_ano_w 
			from	san_regra_doacao 
			where	ie_sexo = ie_sexo_pf_w 
			and	NR_TIPO_DOACAO_ANTERIOR = ie_ultimo_tipo_coleta_w;
		 
			If (QT_DIAS_ULT_DIA_w > Obter_Dias_Entre_Datas(dt_coleta_w, dt_referencia_w)) 
			Or (nr_coletas_ultimo_ano_w > nr_col_perm_ano_w) then 
				ie_apto_w := 'N';
			End if;
		Else 
			select	max(QT_DIAS_ULT_DIA), 
				max(QT_DOACAO_ANO) 
			into STRICT	QT_DIAS_ULT_DIA_sexo_w, 
				nr_col_perm_ano_w 
			from	san_regra_Doacao 
			where	ie_sexo = ie_sexo_pf_w 
			and	coalesce(NR_TIPO_DOACAO_ANTERIOR::text, '') = '';
			 
			If (QT_DIAS_ULT_DIA_sexo_w > Obter_Dias_Entre_Datas(dt_coleta_w, dt_referencia_w)) 
			Or (nr_coletas_ultimo_ano_w > nr_col_perm_ano_w) then 
				ie_apto_w := 'N';
			End if;
		End if;
					 
	End if;				
	 
	If (ie_apto_w = 'S') then 
		insert into SAN_DOADOR_ENVIO_ITEM(nr_sequencia, 
				 dt_atualizacao, 
				 nm_usuario, 
				 dt_atualizacao_nrec, 
				 nm_usuario_nrec, 
				 nr_seq_lote_envio, 
				 cd_pessoa_fisica) 
				 values (nextval('san_doador_envio_item_seq'), 
				 clock_timestamp(), 
				 nm_usuario_p, 
				 clock_timestamp(), 
				 nm_usuario_p, 
				 nr_seq_geracao_email_p, 
				 cd_pessoa_fisica_w);
	End if;
			 
end loop;
close c01;			
	 
update	san_doador_envio 
set	nm_usuario = nm_usuario_p, 
	dt_geracao = clock_timestamp() 
where	nr_sequencia = nr_seq_geracao_email_p;
	 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_lista_dest_email_hemot ( nr_seq_geracao_email_p bigint, nm_usuario_p text) FROM PUBLIC;

