-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_laudo_integracao_iscv ( nr_acesso_dicom_p text, ds_laudo_p text ) AS $body$
DECLARE

nr_prescricao_w		bigint;
nr_seq_prescricao_w	bigint;
nr_seq_propaci_w	bigint;
nr_seq_proc_interno_w	bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
qt_procedimento_w	bigint;
cd_setor_atendimento_w	bigint;
cd_medico_exec_w	varchar(10);
nr_seq_exame_w		bigint;
ie_lado_w		varchar(15);
dt_prev_execucao_w	timestamp;
nr_atendimento_w	bigint;
dt_entrada_unidade_w	timestamp;
nr_laudo_w        	bigint;
cd_medico_resp_w	varchar(10);
qt_existe_medico_w	bigint;
ds_laudo_copia_w	text;
nr_seq_laudo_w		bigint;
nr_seq_laudo_ant_w	bigint;
nr_seq_laudo_atual_w	bigint;
nr_seq_copia_w		bigint;

cd_laudo_externo_w	bigint;
cd_medico_laudante_w	varchar(10);
ds_titulo_laudo_w	varchar(255);
dt_liberacao_laudo_w	timestamp;
ie_existe_laudo_w	varchar(1);
ie_tipo_ordem_w		varchar(5);
nm_usuario_w		varchar(30);
nr_acesso_dicom_w	varchar(30);
nr_seq_prescr_w		bigint;
nr_crm_w			varchar(20);

nm_medico_solicitante_w varchar(200);
ie_insere_medico_solic_w varchar(1);

dt_procedimento_w	timestamp;
ie_status_execucao_w	varchar(3);

cd_estabelecimento_w	smallint;
ie_alterar_medico_conta_w 	varchar(2);
ie_alterar_medico_exec_conta_w	varchar(2);
ie_cancelar_laudo_w   varchar(2);
nr_sequencia_ww varchar(10);


BEGIN

if (coalesce(wheb_usuario_pck.get_nm_usuario::text, '') = '') then
  CALL wheb_usuario_pck.set_nm_usuario('Integracao');
end if;

if (nr_acesso_dicom_p IS NOT NULL AND nr_acesso_dicom_p::text <> '') then
	begin

	select	nr_prescricao,
		nr_sequencia,
		nr_seq_proc_interno,
		cd_procedimento,
		ie_origem_proced,
		qt_procedimento,
		cd_setor_atendimento,
		cd_medico_exec,
		nr_seq_exame,
		coalesce(ie_lado,'A'),
		dt_prev_execucao
	into STRICT	nr_prescricao_w,
		nr_seq_prescricao_w,
		nr_seq_proc_interno_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		qt_procedimento_w,
		cd_setor_atendimento_w,
		cd_medico_exec_w,
		nr_seq_exame_w,
		ie_lado_w,
		dt_prev_execucao_w
	from	prescr_procedimento
	where	nr_acesso_dicom	= nr_acesso_dicom_p
	and	dt_atualizacao_nrec > (clock_timestamp() - interval '60 days')
	order by nr_prescricao asc LIMIT 1;

	exception
	when no_data_found then
		begin

		select	nr_prescricao,
			nr_sequencia,
			nr_seq_proc_interno,
			cd_procedimento,
			ie_origem_proced,
			qt_procedimento,
			cd_setor_atendimento,
			cd_medico_exec,
			nr_seq_exame,
			coalesce(ie_lado,'A'),
			dt_prev_execucao
		into STRICT	nr_prescricao_w,
			nr_seq_prescricao_w,
			nr_seq_proc_interno_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			qt_procedimento_w,
			cd_setor_atendimento_w,
			cd_medico_exec_w,
			nr_seq_exame_w,
			ie_lado_w,
			dt_prev_execucao_w
		from	prescr_procedimento
		where	nr_acesso_dicom	= nr_acesso_dicom_p;

		exception
		when no_data_found then

	commit;
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(192827,'NR_ACESSO_DICOM_P='|| nr_acesso_dicom_p);
		end;
	end;
end if;



if (coalesce(nr_prescricao_w,0) > 0) and (coalesce(nr_seq_prescricao_w,0) > 0) then
	begin

	select	coalesce(max(nr_sequencia),0),
		max(nr_atendimento),
		max(dt_entrada_unidade),
		max(dt_procedimento)
	into STRICT	nr_seq_propaci_w,
		nr_atendimento_w,
		dt_entrada_unidade_w,
		dt_procedimento_w
	from	procedimento_paciente
	where	nr_prescricao		= nr_prescricao_w
	and	nr_sequencia_prescricao	= nr_seq_prescricao_w
	and          coalesce(nr_seq_proc_princ::text, '') = '';

	if (nr_seq_propaci_w = 0) then
		begin

		CALL Gerar_Proc_Pac_item_Prescr(	nr_prescricao_w,
						nr_seq_prescricao_w,
						null,
						null,
						nr_seq_proc_interno_w,
						cd_procedimento_w,
						ie_origem_proced_w,
						qt_procedimento_w,
						cd_setor_atendimento_w,
						9,
						dt_prev_execucao_w,
						'Integração',
						cd_medico_exec_w,
						null,
						ie_lado_w,
						null);

		select	max(nr_sequencia),
			max(nr_atendimento),
			max(dt_entrada_unidade),
			max(dt_procedimento)
		into STRICT	nr_seq_propaci_w,
			nr_atendimento_w,
			dt_entrada_unidade_w,
			dt_procedimento_w
		from	procedimento_paciente
		where	nr_prescricao		= nr_prescricao_w
		and	nr_sequencia_prescricao	= nr_seq_prescricao_w
		and          coalesce(nr_seq_proc_princ::text, '') = '';

		end;
	end if;

	select	coalesce(max(nr_laudo),0) + 1
	into STRICT	nr_laudo_w
	from	laudo_paciente
	where	nr_atendimento	= nr_atendimento_w;

	select	count(*)
	into STRICT	qt_existe_medico_w
	from	medico
	where	cd_pessoa_fisica	= cd_medico_laudante_w;

	if (coalesce(ie_insere_medico_solic_w,'N') = 'S') then
		select 	MAX(substr(obter_nome_pf(cd_medico),1,60))
		into STRICT 	nm_medico_solicitante_w
		from 	prescr_medica
		where 	nr_prescricao = nr_prescricao_w;
	else
		nm_medico_solicitante_w := '';
	end if;


	select 	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_laudo_ant_w
	from	laudo_paciente
	where	cd_laudo_externo = cd_laudo_externo_w
	and	nr_seq_proc <> nr_seq_propaci_w;

	if (nr_seq_laudo_ant_w > 0) then

		update	procedimento_paciente
		set	nr_laudo 	= nr_seq_laudo_ant_w
		where	nr_sequencia	= nr_seq_propaci_w;

	else
		select	max(cd_estabelecimento)
		into STRICT	cd_estabelecimento_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_w;

		select coalesce(max(ie_cancelar_laudo),'N')
		into STRICT ie_cancelar_laudo_w
		from PARAMETRO_INTEGRACAO_PACS
		where cd_estabelecimento = cd_estabelecimento_w;

		if (ie_cancelar_laudo_w = 'S') then
			begin
			select  MAX(nr_sequencia)
			  into STRICT	nr_sequencia_ww
			  from 	laudo_paciente
			where   nr_prescricao = nr_prescricao_w
			 and	nr_seq_prescricao = nr_seq_prescricao_w;

			if (coalesce(nr_sequencia_ww,0)<>0) then
				begin
					CALL cancelar_laudo_paciente(nr_sequencia_ww,'C','Integracao','');
				end;
			end if;
		 end;
		end if;


		select	nextval('laudo_paciente_seq')
		into STRICT	nr_seq_laudo_w
		;

		select 	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_laudo_atual_w
		from	laudo_paciente
		where	cd_laudo_externo = cd_laudo_externo_w
		and	nr_seq_proc = nr_seq_propaci_w;


		select	substr(obter_desc_prescr_proc_laudo(p.cd_procedimento,
				p.ie_origem_proced,
				p.nr_seq_proc_interno,
				p.ie_lado,
				nr_seq_propaci_w),1,255)
		into STRICT	ds_titulo_laudo_w
		from	prescr_procedimento p
		where	nr_prescricao	= nr_prescricao_w
		and 	nr_sequencia	= nr_seq_prescricao_w;

		insert into laudo_paciente(
			nr_sequencia,
			nr_atendimento,
			dt_entrada_unidade,
			nr_laudo,
			nm_usuario,
			dt_atualizacao,
			cd_medico_resp,
			ds_titulo_laudo,
			dt_laudo,
			nr_prescricao,
			ds_laudo,
			nr_seq_proc,
			nr_seq_prescricao,
			dt_liberacao,
			qt_imagem,
			nm_medico_solicitante,
			ie_status_laudo,
			cd_laudo_externo,
			dt_exame)
		values (	nr_seq_laudo_w,
			nr_atendimento_w,
			dt_entrada_unidade_w,
			nr_laudo_w,
			'Integração',
			clock_timestamp(),
			cd_medico_resp_w,
			ds_titulo_laudo_w,
			dt_liberacao_laudo_w,
			nr_prescricao_w,
			ds_laudo_p,
			nr_seq_propaci_w,
			nr_seq_prescricao_w,
			dt_liberacao_laudo_w,
			0,
			nm_medico_solicitante_w,
			'LL',
			cd_laudo_externo_w,
			dt_procedimento_w);

	end if;

	end;
else
	CALL gravar_log_cdi(88877,'Não encontrou prescr_procedimento','Tasy');
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(192838);
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_laudo_integracao_iscv ( nr_acesso_dicom_p text, ds_laudo_p text ) FROM PUBLIC;

