-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_gerar_razao ( cd_empresa_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, cd_estab_p text, cd_conta_contabil_p text, cd_classificacao_p text, cd_centro_custo_p text, nm_usuario_p text, ie_valor_p text, cd_classif_inic_p text, cd_classif_final_p text, ie_centro_custo_p text, ie_ordenacao_p text, ie_contra_partida_p text, ie_historico_padrao_p text, nr_fato_contabil_p text ) AS $body$
DECLARE

/* ie_ordenacao_p:
1 - data do movimento
2 - numero do lote
3 - compl. histórico
4 - ds_histórico
5 - seq lançamento
*/
dt_movimento_w			timestamp;
cd_contrapartida_w			varchar(4000);
cd_contrapartida_ww		varchar(4000);
cd_conta_contabil_w		varchar(080);
ds_conta_w			varchar(255);
cd_classificacao_w			varchar(80);
ds_historico_w			varchar(255);
ds_compl_historico_w		varchar(255);
ie_contrapartida_w			varchar(15);
ie_debito_credito_w			varchar(1);
cd_historico_w			bigint;
vl_credito_w			double precision;
vl_debito_w			double precision;
vl_movimento_w			double precision;
vl_saldo_w			double precision;
vl_movto_saldo_w			double precision;
vl_saldo_ant_w			double precision;
ie_ordem_w			varchar(255);

ie_gerar_w			varchar(1);
ie_pos_w				bigint;
cd_classif_w			varchar(255);
cd_classif_ww			varchar(2000);
nr_sequencia_w			bigint;
nr_seq_saldo_ant_w		bigint;
ie_movimento_w			varchar(01);
ie_deb_cred_w			varchar(01);
nr_lote_contabil_w			bigint;
nr_seq_movto_w			bigint;
ie_centro_custo_w			varchar(01);
cd_centro_custo_w			bigint;
ds_centro_custo_w			varchar(100);
cd_estabelecimento_w		smallint;
cd_centro_custo_ww		varchar(500);
dt_inicial_w			timestamp;
dt_final_w			timestamp;
ds_erro_w			varchar(4000);
ie_contra_partida_w		varchar(1);

c001 CURSOR FOR
	SELECT	distinct s.cd_conta_contabil,
		substr(substr(c.cd_conta_contabil,1,20)  || ' - ' || substr(coalesce(s.cd_classificacao, c.cd_classificacao),1,40) || '  ' || substr(c.ds_conta_contabil,1,190),1,255),
		coalesce(s.cd_classificacao, c.cd_classificacao) cd_classificacao,
		d.ie_debito_credito,
		c.ie_centro_custo
	from	ctb_grupo_conta d,
		conta_contabil c,
		ctb_saldo s,
		ctb_mes_ref r
	where	s.nr_seq_mes_ref		= r.nr_sequencia
	and	s.cd_conta_contabil	= c.cd_conta_contabil
	and	c.cd_grupo		= d.cd_grupo
	and	c.cd_empresa		= r.cd_empresa
	and	r.cd_empresa		= cd_empresa_p
	and	((coalesce(cd_estab_p::text, '') = '') or (obter_se_contido(s.cd_estabelecimento, cd_estab_p) = 'S'))
	and	r.dt_referencia	between dt_inicial_w  and fim_dia(dt_final_w)
	and	c.ie_tipo		<> 'T'
	and	exists (	SELECT	1
				from	ctb_movimento_v a
				where	r.nr_sequencia	= a.nr_seq_mes_ref
				and		c.cd_conta_contabil = a.cd_conta_contabil
				and (a.nr_seq_agrupamento = nr_fato_contabil_p
				or		coalesce(nr_fato_contabil_p,0) = 0))
	and	exists (	select	1
			
			where	cd_centro_custo_ww	= 'X'
			
union all

			select	1
			from	ctb_movto_centro_custo y,
				ctb_movimento x
			where	x.nr_sequencia		= y.nr_seq_movimento
			and	x.nr_seq_mes_ref	= r.nr_sequencia
			and (obter_se_contido(y.cd_centro_custo,cd_centro_custo_p) = 'S'));

c002 CURSOR FOR
	SELECT	'M',
		a.dt_movimento,
		substr(a.ds_historico,1,255) ds_historico,
		a.ie_debito_credito,
		substr(a.ds_compl_historico,1,255) ds_compl_historico,
		a.cd_contrapartida,
		a.cd_historico,
		a.vl_credito,
		a.vl_debito,
		a.vl_movimento,
		a.nr_lote_contabil,
		a.nr_sequencia,
		CASE WHEN ie_ordenacao_p='2' THEN a.nr_lote_contabil  ELSE 0 END  ie_ordem1,
		substr(CASE WHEN ie_ordenacao_p='3' THEN  a.ds_compl_historico WHEN ie_ordenacao_p='4' THEN a.ds_historico  ELSE '' END ,1,255) ie_ordem2,
		CASE WHEN ie_ordenacao_p='1' THEN a.dt_movimento  ELSE to_date(null) END  ie_ordem3,
		a.cd_estabelecimento,
		CASE WHEN ie_ordenacao_p='5' THEN a.nr_sequencia  ELSE 0 END  ie_ordem4
	from	ctb_mes_ref b,
		ctb_movimento_v a
	where 	b.nr_sequencia	= a.nr_seq_mes_ref
	and	b.cd_empresa	= cd_empresa_p
	and	a.dt_movimento between trunc(dt_inicial_p,'dd')  and trunc(dt_final_p,'dd') + 86399 / 86400
	and	a.cd_conta_contabil	= cd_conta_contabil_w
	and	((coalesce(cd_estab_p::text, '') = '') or (obter_se_contido(a.cd_estabelecimento, cd_estab_p) = 'S'))
	and	(a.dt_atualizacao_saldo IS NOT NULL AND a.dt_atualizacao_saldo::text <> '')
	and	exists (	SELECT	1
			
			where	cd_centro_custo_ww = 'X'
			
union

			select	1
			from	ctb_movto_centro_custo x
			where	x.nr_seq_movimento	= a.nr_sequencia
			and (obter_se_contido(x.cd_centro_custo,cd_centro_custo_p) = 'S'))
	and (a.nr_seq_agrupamento = nr_fato_contabil_p
	or	coalesce(nr_fato_contabil_p,0) = 0)
	and coalesce(ie_historico_padrao_p,'N') = 'N'
	
union all

	select	'M',
		a.dt_movimento,
		substr(a.ds_historico,1,255) ds_historico,
		a.ie_debito_credito,
		substr(a.ds_historico,1,255) ds_compl_historico,
		a.cd_contrapartida,
		a.cd_historico,
		sum(a.vl_credito),
		sum(a.vl_debito),
		sum(a.vl_movimento),
		a.nr_lote_contabil,
		null,
		CASE WHEN ie_ordenacao_p='2' THEN a.nr_lote_contabil  ELSE 0 END  ie_ordem1,
		'' ie_ordem2,
		CASE WHEN ie_ordenacao_p='1' THEN a.dt_movimento  ELSE to_date(null) END  ie_ordem3,
		a.cd_estabelecimento,
		null ie_ordem4
	from	ctb_mes_ref b,
		ctb_movimento_v a
	where 	b.nr_sequencia	= a.nr_seq_mes_ref
	and	b.cd_empresa	= cd_empresa_p
	and	a.dt_movimento between trunc(dt_inicial_p,'dd')  and trunc(dt_final_p,'dd') + 86399 / 86400
	and	a.cd_conta_contabil	= cd_conta_contabil_w
	and	((coalesce(cd_estab_p::text, '') = '') or (obter_se_contido(a.cd_estabelecimento, cd_estab_p) = 'S'))
	and	(a.dt_atualizacao_saldo IS NOT NULL AND a.dt_atualizacao_saldo::text <> '')
	and	exists (	select	1
			
			where	cd_centro_custo_ww = 'X'
			
union

			select	1
			from	ctb_movto_centro_custo x
			where	x.nr_seq_movimento	= a.nr_sequencia
			and (obter_se_contido(x.cd_centro_custo,cd_centro_custo_p) = 'S'))
	and (a.nr_seq_agrupamento = nr_fato_contabil_p
	or	coalesce(nr_fato_contabil_p,0) = 0)
	and coalesce(ie_historico_padrao_p,'N') = 'S'
	group by a.dt_movimento,
			substr(a.ds_historico,1,255),
			a.ie_debito_credito,
			a.cd_contrapartida,
			a.cd_historico,
			a.nr_lote_contabil,
			CASE WHEN ie_ordenacao_p='2' THEN a.nr_lote_contabil  ELSE 0 END ,
			CASE WHEN ie_ordenacao_p='1' THEN a.dt_movimento  ELSE to_date(null) END ,
			a.cd_estabelecimento
	
union all

	select	'S',
		dt_inicial_p,
		obter_desc_expressao(298002),
		'',
		'',
		'',
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		'',
		to_date(null),
		(null)::numeric ,
		0
	
	order by 1 desc,
		13,
		14,
		15,
		17,
		2,
		11,
		7,
		5;

c003 CURSOR FOR
	SELECT	a.cd_centro_custo,
		b.ds_centro_custo,
		a.vl_movimento
	from	centro_custo b,
		ctb_movto_centro_custo a
	where 	nr_seq_movimento	= nr_seq_movto_w
	and	a.cd_centro_custo	= b.cd_centro_custo
	and coalesce(ie_historico_padrao_p,'N') = 'N';


BEGIN


ie_contra_partida_w	:= coalesce(ie_contra_partida_p, 'N');
dt_inicial_w		:= trunc(dt_inicial_p, 'month');
dt_final_w		:= coalesce(trunc(dt_final_p, 'month'),dt_inicial_w);

select	coalesce(max(ie_contrapartida),'SPD')
into STRICT	ie_contrapartida_w
from	empresa
where	cd_empresa	= cd_empresa_p;

/* matheus - tab temporaria pode ser usado truncate */

CALL exec_sql_dinamico(nm_usuario_p,'truncate table w_ctb_razao');

cd_centro_custo_ww	:= coalesce(cd_centro_custo_p,'X');
/*
delete from w_ctb_razao
where nm_usuario = nm_usuario_p;
commit;*/
vl_saldo_w	:= 0;

open c001;
loop
fetch c001 into
	cd_conta_contabil_w,
	ds_conta_w,
	cd_classificacao_w,
	ie_deb_cred_w,
	ie_centro_custo_w;
EXIT WHEN NOT FOUND; /* apply on c001 */
	ie_gerar_w	:= 'S';

	if (ie_valor_p = 'N') then
		begin
		select	coalesce(max('S'),'N')
		into STRICT	ie_gerar_w
		
		where	exists ( SELECT 1
				from	ctb_mes_ref y,
					ctb_movimento x
				where	y.nr_sequencia		= x.nr_seq_mes_ref
				and	y.cd_empresa		= cd_empresa_p
				and	x.cd_conta_debito	= cd_conta_contabil_w
				and	y.dt_referencia between dt_inicial_w and fim_dia(dt_final_w));

		if (ie_gerar_w = 'N') then

			select	coalesce(max('S'),'N')
			into STRICT	ie_gerar_w
			
			where	exists ( SELECT 1
					from	ctb_mes_ref y,
						ctb_movimento x
					where	y.nr_sequencia		= x.nr_seq_mes_ref
					and	y.cd_empresa		= cd_empresa_p
					and	x.cd_conta_credito	= cd_conta_contabil_w
					and	y.dt_referencia between dt_inicial_w and dt_final_w);
		end if;
		end;
	end if;

	if (ie_gerar_w	= 'S')  and (coalesce(cd_conta_contabil_p,'0')	<> '0') then
		select	ctb_obter_se_conta_contida(cd_conta_contabil_w, cd_conta_contabil_p)
		into STRICT	ie_gerar_w
		;
	end if;

	if (cd_classif_inic_p IS NOT NULL AND cd_classif_inic_p::text <> '') and (cd_classificacao_w < cd_classif_inic_p) then
		ie_gerar_w		:= 'N';
	end if;

	if (cd_classif_final_p IS NOT NULL AND cd_classif_final_p::text <> '') and (cd_classificacao_w > cd_classif_final_p) then
		ie_gerar_w		:= 'N';
	end if;

	if (ie_gerar_w	= 'S')  and (coalesce(cd_classificacao_p,'0') <> '0')  then
		begin
		ie_gerar_w	:= 'N';
		cd_classif_w	:= cd_classificacao_p;
		cd_classif_w	:= replace(cd_classif_w,'(','');
		cd_classif_w	:= replace(cd_classif_w,')','');
		cd_classif_w	:= replace(cd_classif_w,' ','');
		while(ie_gerar_w = 'N') and (length(cd_classif_w) > 0)  loop
			begin
			ie_pos_w 	:= position(',' in cd_classif_w);
			if (ie_pos_w = 0) then
				cd_classif_ww	:= cd_classif_w;
				cd_classif_w	:= '';
			else
				cd_classif_ww	:= substr(cd_classif_w,1, ie_pos_w - 1);
				cd_classif_w	:= substr(cd_classif_w, ie_pos_w + 1, 255);
			end if;
			select	ctb_obter_se_conta_classif_sup(cd_conta_contabil_w, cd_classif_ww)
			into STRICT	ie_gerar_w
			;
			end;
		end loop;
		end;
	end if;

	if (ie_gerar_w	= 'S')  then
		begin

		if (coalesce(cd_estab_p,'0') = '0') then
			begin
			select 	coalesce(sum(coalesce((s.vl_saldo - s.vl_movimento),0)),0)
			into STRICT	vl_saldo_w
			from	ctb_saldo s,
				ctb_mes_ref r
			where	s.nr_seq_mes_ref		= r.nr_sequencia
			and	trunc(r.dt_referencia,'dd')		= dt_inicial_w
			and	s.cd_conta_contabil	= cd_conta_contabil_w
			and	r.cd_empresa		= cd_empresa_p;

			end;
		else
			select 	coalesce(sum(coalesce((s.vl_saldo - s.vl_movimento),0)),0)
			into STRICT	vl_saldo_w
			from	ctb_saldo s,
				ctb_mes_ref r
			where	s.nr_seq_mes_ref		= r.nr_sequencia
			and	trunc(r.dt_referencia,'dd')		= dt_inicial_w
			and	s.cd_conta_contabil	= cd_conta_contabil_w
			and	r.cd_empresa		= cd_empresa_p
			and (obter_se_contido(s.cd_estabelecimento, cd_estab_p) = 'S');

		end if;

		if (to_char(dt_inicial_p,'dd')	= '01') then
			vl_movto_saldo_w		:= 0;
		else
			begin

			if (coalesce(cd_estab_p, '0') = '0') then

				select	coalesce(sum(CASE WHEN ie_debito_credito=ie_deb_cred_w THEN  vl_movimento  ELSE vl_movimento * -1 END ),0)
				into STRICT	vl_movto_saldo_w
				from	estabelecimento c,
					lote_contabil b,
					ctb_movimento_v a
				where 	a.dt_movimento	between trunc(dt_inicial_p,'month')
				and 	trunc(dt_inicial_p,'dd') - 1 / 86400
				and	a.cd_conta_contabil	= cd_conta_contabil_w
				and	a.nr_lote_contabil		= b.nr_lote_contabil
				and	b.cd_estabelecimento	= c.cd_estabelecimento
				and	c.cd_empresa		= cd_empresa_p
				and	(b.dt_atualizacao_saldo IS NOT NULL AND b.dt_atualizacao_saldo::text <> '');

			else
				select	coalesce(sum(CASE WHEN ie_debito_credito=ie_deb_cred_w THEN  vl_movimento  ELSE vl_movimento * -1 END ),0)
				into STRICT	vl_movto_saldo_w
				from	lote_contabil b,
					ctb_movimento_v a
				where 	a.dt_movimento	between dt_inicial_w and trunc(dt_inicial_p,'dd') - 1 / 86400
				and	a.cd_conta_contabil	= cd_conta_contabil_w
				and	a.nr_lote_contabil	= b.nr_lote_contabil
				and (obter_se_contido(a.cd_estabelecimento, cd_estab_p) = 'S')
				and	(b.dt_atualizacao_saldo IS NOT NULL AND b.dt_atualizacao_saldo::text <> '');
			end if;
			end;
		end if;
		vl_saldo_w				:= vl_saldo_w + vl_movto_saldo_w;

		open  c002;
		loop
		fetch c002 into
			ie_movimento_w,
			dt_movimento_w,
			ds_historico_w,
			ie_debito_credito_w,
			ds_compl_historico_w,
			cd_contrapartida_w,
			cd_historico_w,
			vl_credito_w,
			vl_debito_w,
			vl_movimento_w,
			nr_lote_contabil_w,
			nr_seq_movto_w,
			ie_ordem_w,
			ie_ordem_w,
			ie_ordem_w,
			cd_estabelecimento_w,
			ie_ordem_w;
		EXIT WHEN NOT FOUND; /* apply on c002 */


			if (ie_contrapartida_w = 'N') then
				cd_contrapartida_w	:= '';
			elsif (ie_contrapartida_w = 'SPD') then
				cd_contrapartida_w	:= substr(cd_contrapartida_w,1,20);
			elsif (ie_contrapartida_w in ('TCA','TCR')) and (ie_contra_partida_w = 'S') then /*Perfomance OS206296 - Somente se for relatório de Contra partida*/
				cd_contrapartida_ww	:= '';
				cd_contrapartida_ww	:= substr(ctb_obter_contrapartida_movto(nr_seq_movto_w, nr_lote_contabil_w, ie_contrapartida_w),1,4000);

				if (coalesce(cd_contrapartida_ww, 'X') <> 'X') then

					cd_contrapartida_w	:= cd_contrapartida_ww;
				else

					select	substr(ctb_obter_classif_conta(cd_contrapartida_w, null, dt_movimento_w),1,255)
					into STRICT	cd_contrapartida_ww
					;

					cd_contrapartida_w	:= substr(cd_contrapartida_ww, 1, 40);

				end if;

			end if;

			if (ie_debito_credito_w <> ie_deb_cred_w) then
				vl_movimento_w	:= vl_movimento_w * -1;
			end if;

			select	nextval('w_ctb_razao_seq')
			into STRICT	nr_sequencia_w
			;

			vl_saldo_w		:= vl_saldo_w + vl_movimento_w;

			if (ie_movimento_w = 'S') then
				dt_movimento_w:= null;
			end if;
			begin

			insert into w_ctb_razao(
				cd_estabelecimento,
				dt_movimento,
				cd_conta_contabil,
				cd_contrapartida,
				cd_classif_conta,
				cd_classif_centro,
				cd_historico,
				ds_historico,
				ie_debito_credito,
				ds_compl_historico,
				ds_conta,
				vl_credito,
				vl_debito,
				vl_movimento,
				vl_saldo,
				vl_saldo_ant,
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_lote_contabil,
				nr_seq_movto)
			values ( cd_estabelecimento_w, 		--cd_estab_p, anderson 29/03/2007 os53672 não gravava pra todos, só qdo filtrasse
				dt_movimento_w,
				cd_conta_contabil_w,
				cd_contrapartida_w,
				cd_classificacao_w,
				'',
				cd_historico_w,
				ds_historico_w,
				ie_debito_credito_w,
				ds_compl_historico_w,
				ds_conta_w,
				vl_credito_w,
				vl_debito_w,
				vl_movimento_w,
				vl_saldo_w,
				coalesce(vl_saldo_ant_w, 0),
				nr_sequencia_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_lote_contabil_w,
				nr_seq_movto_w);
			exception when others then
				ds_erro_w	:= sqlerrm(SQLSTATE);
				CALL wheb_mensagem_pck.exibir_mensagem_abort(184609,ds_erro_w);
			end;

			vl_saldo_ant_w	:= vl_saldo_w;

			if (coalesce(ie_centro_custo_p,'N') = 'S') and (ie_centro_custo_w = 'S') then
				open  c003;
				loop
				fetch c003 into
					cd_centro_custo_w,
					ds_centro_custo_w,
					vl_movimento_w;
				EXIT WHEN NOT FOUND; /* apply on c003 */

					ie_gerar_w	:= 'S';
					if (cd_centro_custo_ww <> 'X') then
						ie_gerar_w	:= ctb_obter_se_centro_contido(cd_centro_custo_w, cd_centro_custo_p);
					end if;

					if (ie_gerar_w = 'S') then
						select nextval('w_ctb_razao_seq')
						into STRICT	nr_sequencia_w
						;
						if (ie_debito_credito_w <> ie_deb_cred_w) then
							vl_movimento_w	:= vl_movimento_w * -1;
						end if;
						if (vl_debito_w <> 0) then
							vl_debito_w	:= vl_movimento_w;
						else
							vl_credito_w	:= vl_movimento_w;
						end if;
						insert into w_ctb_razao(
							cd_classif_conta,
							cd_conta_contabil,
							ds_conta,
							cd_centro_custo,
							ds_historico,
							vl_movimento,
							vl_debito,
							vl_credito,
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_movto,
							cd_estabelecimento)
						values (cd_classificacao_w,
							cd_conta_contabil_w,
							ds_conta_w,
							cd_centro_custo_w,
							'       ' || ds_centro_custo_w,
							vl_movimento_w,
							vl_debito_w,
							vl_credito_w,
							nr_sequencia_w,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_movto_w,
							cd_estabelecimento_w);
					end if;
				end loop;
				close c003;
			end if;
		end loop;
		close c002;
		end;
	end if;

end loop;
close c001;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_gerar_razao ( cd_empresa_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, cd_estab_p text, cd_conta_contabil_p text, cd_classificacao_p text, cd_centro_custo_p text, nm_usuario_p text, ie_valor_p text, cd_classif_inic_p text, cd_classif_final_p text, ie_centro_custo_p text, ie_ordenacao_p text, ie_contra_partida_p text, ie_historico_padrao_p text, nr_fato_contabil_p text ) FROM PUBLIC;

