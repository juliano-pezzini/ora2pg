-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_subst_trib_item_nf ( nr_sequencia_p bigint, nr_item_nf_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_material_w			integer;
PR_MVA_ORIGINAL_w		double precision;
PR_ALIQ_INTERNA_w		double precision;
VL_LIQUIDO_w			double precision;
vl_icms_destacado_w		double precision;
vl_base_mva_w			double precision;
vl_base_calculo_w		double precision;
vl_ipi_w			double precision;
vl_substituicao_trib_w		double precision;
cd_tributo_w			smallint;
qt_existe_w			smallint;
ie_existe_icms_w		varchar(1);
pr_imposto_w			double precision;
cd_estabelecimento_w		smallint;
cd_serie_nf_w			nota_fiscal.cd_serie_nf%type;
nr_sequencia_nf_w		bigint;
nr_nota_fiscal_w		varchar(255);

C01 CURSOR FOR
	SELECT 	pr_mva_original,
		pr_aliq_interna
	from 	material_fiscal a,
		lista_ncm b
	where	a.nr_seq_ncm = b.nr_sequencia
	and	a.cd_material = cd_material_w;


BEGIN
/*Busca o código do material da nota*/

select	cd_material
into STRICT	cd_material_w
from	nota_fiscal_item
where	nr_sequencia = nr_sequencia_p
and	nr_item_nf	= nr_item_nf_p;

/*Verifica de existe cadastro para substituição tributária do material*/

select 	count(*)
into STRICT	qt_existe_w
from 	MATERIAL_FISCAL a,
	LISTA_NCM b
where	a.NR_SEQ_NCM = b.nr_sequencia
and	a.cd_material = cd_material_w;

/*Busca o código do tributo de substituição tributária do item na nota caso já exista*/

select 	max(a.cd_tributo)
into STRICT	cd_tributo_w
from	NOTA_FISCAL_ITEM_TRIB a,
	TRIBUTO b
where	b.IE_TIPO_TRIBUTO = 'STI'
and	a.cd_tributo = b.cd_tributo
and	a.nr_sequencia = nr_sequencia_p
and	a.nr_item_nf = nr_item_nf_p;

/*Verifica se existe ICMS no item da nota*/

select 	coalesce(max('S'),'N')
into STRICT	ie_existe_icms_w
from	NOTA_FISCAL_ITEM_TRIB a,
	TRIBUTO b
where	b.IE_TIPO_TRIBUTO = 'ICMS'
and	a.cd_tributo = b.cd_tributo
and	a.nr_sequencia = nr_sequencia_p
and	a.nr_item_nf = nr_item_nf_p;

/*Caso ainda não exista o tributo de substituição tributária no item, verifica e busca o código de um tributo cadastrado para ser gerado*/

if (coalesce(cd_tributo_w::text, '') = '') then
	select 	max(cd_tributo)
	into STRICT	cd_tributo_w
	from	TRIBUTO
	where	ie_situacao = 'A'
	and	IE_TIPO_TRIBUTO = 'STI';
end if;

/*Busca o valor dos tributos de ICMS do item na nota*/

select	coalesce(sum(VL_TRIBUTO),0)
into STRICT	vl_icms_destacado_w
from	NOTA_FISCAL_ITEM_TRIB a,
	tributo b
where	a.cd_tributo = b.cd_tributo
and	b.IE_TIPO_TRIBUTO = 'ICMS'
and	nr_sequencia = nr_sequencia_p
and	nr_item_nf = nr_item_nf_p;

/*Realiza o cálculo somente se já existir substituição tributária para o item e tributo de substituição tributária para ser gerada*/

if (qt_existe_w > 0) and (cd_tributo_w IS NOT NULL AND cd_tributo_w::text <> '') and (ie_existe_icms_w = 'S') and (vl_icms_destacado_w > 0) then
	begin
	open C01;
	loop
	fetch C01 into
		PR_MVA_ORIGINAL_w,
		PR_ALIQ_INTERNA_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;

	/*Busca o percentual da substituição tributária*/

	select	coalesce(max(PR_IMPOSTO),0)
	into STRICT	pr_imposto_w
	from	regra_calculo_imposto
	where	cd_tributo = cd_tributo_w
	and	clock_timestamp() between dt_vigencia and fim_dia(coalesce(dt_fim_vigencia,clock_timestamp()));

	/*Busca o valor liquido do item na nota*/

	select	coalesce(sum(VL_LIQUIDO),0)
	into STRICT	VL_LIQUIDO_w
	from	NOTA_FISCAL_ITEM
	where	nr_sequencia = nr_sequencia_p
	and	nr_item_nf = nr_item_nf_p;

	/*Busca o valor dos tributos de ICMS do item na nota*/

	select	coalesce(sum(VL_TRIBUTO),0)
	into STRICT	vl_icms_destacado_w
	from	NOTA_FISCAL_ITEM_TRIB a,
		tributo b
	where	a.cd_tributo = b.cd_tributo
	and	b.IE_TIPO_TRIBUTO = 'ICMS'
	and	nr_sequencia = nr_sequencia_p
	and	nr_item_nf = nr_item_nf_p;

	/*Busca o valor de IPI do item da nota*/

	select 	coalesce(sum(vl_tributo),0)
	into STRICT	vl_ipi_w
	from	NOTA_FISCAL_ITEM_TRIB a,
		TRIBUTO b
	where	b.IE_TIPO_TRIBUTO = 'IPI'
	and	a.cd_tributo = b.cd_tributo
	and	a.nr_sequencia = nr_sequencia_p
	and	a.nr_item_nf = nr_item_nf_p;

	vl_base_calculo_w := VL_LIQUIDO_w + vl_ipi_w;

	/*Calcula o valor do MVA do Item*/

	vl_base_mva_w := (vl_base_calculo_w * dividir(coalesce(PR_MVA_ORIGINAL_w,0),100)) + vl_base_calculo_w;

	/*Calcula o valor da substituição tributária do item na nota*/

	vl_substituicao_trib_w := (vl_base_mva_w * dividir(coalesce(pr_imposto_w,0),100)) - vl_icms_destacado_w;

	if (vl_substituicao_trib_w > 0) then
		begin
		/*Verifica se já existe substituição tributária no item da nota*/

		select	count(*)
		into STRICT	qt_existe_w
		from	NOTA_FISCAL_ITEM_TRIB a,
			TRIBUTO b
		where	b.IE_TIPO_TRIBUTO = 'STI'
		and	a.cd_tributo = b.cd_tributo
		and	a.cd_tributo = cd_tributo_w
		and	a.nr_sequencia = nr_sequencia_p
		and	a.nr_item_nf = nr_item_nf_p;

		if (qt_existe_w > 0) then
			begin
			/*Atualiza o valor de substituição tributária do item na nota*/

			update	NOTA_FISCAL_ITEM_TRIB
			set	VL_BASE_CALCULO = vl_base_mva_w,
				VL_REDUCAO_BASE = vl_icms_destacado_w,
				TX_TRIBUTO = PR_ALIQ_INTERNA_w,
				VL_TRIBUTO = vl_substituicao_trib_w
			where	nr_sequencia = nr_sequencia_p
			and	nr_item_nf = nr_item_nf_p
			and	cd_tributo = cd_tributo_w;
			end;
		else
			begin
			/*Inseri valor de substituição tributária do item na nota*/

			select	cd_estabelecimento,
				cd_serie_nf,
				nr_sequencia_nf,
				nr_nota_fiscal
			into STRICT	cd_estabelecimento_w,
				cd_serie_nf_w,
				nr_sequencia_nf_w,
				nr_nota_fiscal_w
			from	nota_fiscal
			where	nr_sequencia = nr_sequencia_p;

			insert into	NOTA_FISCAL_ITEM_TRIB(
						nr_sequencia,
						cd_estabelecimento,
						cd_serie_nf,
						nr_sequencia_nf,
						nr_nota_fiscal,
						nr_item_nf,
						CD_TRIBUTO,
						vl_tributo,
						dt_atualizacao,
						nm_usuario,
						VL_BASE_CALCULO,
						TX_TRIBUTO,
						IE_RATEIO,
						VL_TRIB_NAO_RETIDO,
						VL_BASE_NAO_RETIDO,
						VL_TRIB_ADIC,
						VL_BASE_ADIC,
						VL_REDUCAO_BASE)
						values (
						nr_sequencia_p,
						cd_estabelecimento_w,
						cd_serie_nf_w,
						nr_sequencia_nf_w,
						nr_nota_fiscal_w,
						nr_item_nf_p,
						CD_TRIBUTO_w,
						vl_substituicao_trib_w,
						clock_timestamp(),
						nm_usuario_p,
						vl_base_mva_w,
						PR_ALIQ_INTERNA_w,
						'N',
						0,
						0,
						0,
						0,
						vl_icms_destacado_w);
			end;
		end if;
		end;
	else
		begin
		/*Caso o valor para a substituição tributária seja menos ou igual a zero, será excluido do item da nota*/

		delete from NOTA_FISCAL_ITEM_TRIB a
		where	a.nr_sequencia = nr_sequencia_p
		and	a.nr_item_nf = nr_item_nf_p
		and	exists (	SELECT 	1
				from	TRIBUTO b
				where	b.IE_TIPO_TRIBUTO = 'STI'
				and	a.cd_tributo = b.cd_tributo);
		end;
	end if;
	end;
elsif (vl_icms_destacado_w <= 0) then
	begin
	/*Caso o valor de icms do item seja menor ou igual a zero, será excluido a substituição tributária do item da nota*/

	delete from NOTA_FISCAL_ITEM_TRIB a
	where	a.nr_sequencia = nr_sequencia_p
	and	a.nr_item_nf = nr_item_nf_p
	and	exists (	SELECT 	1
			from	TRIBUTO b
			where	b.IE_TIPO_TRIBUTO = 'STI'
			and	a.cd_tributo = b.cd_tributo);
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_subst_trib_item_nf ( nr_sequencia_p bigint, nr_item_nf_p bigint, nm_usuario_p text) FROM PUBLIC;

