-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pat_definir_bens_transf ( nr_sequencia_p bigint, cd_tipo_p bigint, cd_localizacao_p bigint, cd_marca_p bigint, tx_deprec_p bigint, nr_seq_regra_conta_p bigint, cd_conta_contabil_p text, dt_inicial_p timestamp, dt_final_p timestamp, ie_data_p text, ie_situacao_p text, ie_bens_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE




nr_sequencia_w 				pat_bem.nr_sequencia%type;
ds_bem_w 					pat_bem.ds_bem%type;
ds_observacao_w 			pat_bem.ds_observacao%type;
vl_contabil_w               pat_valor_bem.vl_contabil%type;
tx_depreciacao_w			pat_valor_bem.tx_depreciacao%type;
dt_documento_w              pat_alteracao_base.dt_documento%type;

c01 CURSOR FOR
	SELECT 	nr_sequencia,
			ds_observacao
	from 	pat_bem
	where 	nr_seq_tipo         = coalesce(cd_tipo_p, nr_seq_tipo)
	and 	nr_seq_local        = coalesce(cd_localizacao_p, nr_seq_local)
	and (nr_seq_marca       = cd_marca_p or (coalesce(nr_seq_marca::text, '') = ''))
	and 	nr_seq_regra_conta  = coalesce(nr_seq_regra_conta_p, nr_seq_regra_conta)
	and 	cd_conta_contabil   = coalesce(cd_conta_contabil_p, cd_conta_contabil)
	and 	ie_situacao         = coalesce(ie_situacao_p, ie_situacao)
	and 	ie_imobilizado      = coalesce(ie_bens_p, ie_imobilizado)
	and    ((ie_data_p = 'N') OR ((ie_data_p = 'A') AND (dt_aquisicao between trunc(to_date(dt_inicial_p)) and pkg_date_utils.end_of(to_date(dt_final_p, 'dd/mm/yy'),'DAY')))
			OR ((ie_data_p = 'I') AND (dt_inicio_uso between trunc(to_date(dt_inicial_p)) and pkg_date_utils.end_of(to_date(dt_final_p, 'dd/mm/yy'),'DAY'))))
	AND	   cd_estabelecimento = cd_estabelecimento_p
	order by 
			cd_bem;
			
c02 CURSOR FOR
	SELECT 	a.nr_sequencia,
			a.ds_observacao
	FROM	PAT_BEM a
	WHERE 	a.nr_sequencia in (
			SELECT a.nr_seq_bem
			FROM		   pat_historico_bem a,
					       pat_tipo_historico b   
			WHERE          ((ie_data_p = 'T' AND b.ie_transferencia = 'S') OR (ie_data_p = 'V' AND b.ie_valor = 'V' AND b.ie_transferencia = 'N') OR
							(ie_data_p = 'B' AND b.ie_valor = 'B' AND b.ie_transferencia = 'N'))    
		   AND			   b.nr_sequencia = a.nr_seq_tipo    
		   AND			   a.dt_historico between trunc(to_date(dt_inicial_p)) 
		   AND			   pkg_date_utils.end_of(to_date(dt_final_p, 'dd/mm/yy'),'DAY')) 
	AND	a.cd_estabelecimento = cd_estabelecimento_p
	ORDER BY CD_BEM;


BEGIN

	
	
	begin
		select dt_documento
		into STRICT   dt_documento_w
		from   pat_alteracao_base
		where  nr_sequencia = NR_SEQUENCIA_P;
		exception when no_data_found or too_many_rows then
			   dt_documento_w := null;
	end;

	if (ie_data_p in ('N', 'A', 'I')) then

		open c01;
			loop
			fetch c01 into
					nr_sequencia_w,
					ds_observacao_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
			
				begin
					select vl_contabil - coalesce(vl_residual, 0),
						   coalesce(tx_depreciacao, 0)
					into STRICT   vl_contabil_w ,
						   tx_depreciacao_w
					from   pat_valor_bem
					where  nr_seq_bem = nr_sequencia_w
					and    trunc(dt_valor, 'MM') = add_months(trunc(dt_documento_w, 'MM'), -1);
					exception when no_data_found or too_many_rows then
						vl_contabil_w := 0;		
						tx_depreciacao_w := 0;
				end;				

				insert into pat_alteracao_base_bem(
								nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_seq_bem,
								tx_deprec,
								tx_base_deprec,
								ds_observacao,
								nr_seq_alt_base)
				values (
								nextval('pat_alteracao_base_bem_seq'),
								clock_timestamp(),
								nm_usuario_p,
								nr_sequencia_w,
								coalesce(tx_deprec_p, tx_depreciacao_w),
								vl_contabil_w,
								ds_observacao_w,
								nr_sequencia_p);
		
		end loop;
		close c01;
	
	else
	
		open c02;
			loop
			fetch c02 into
					nr_sequencia_w,
					ds_observacao_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
			
				begin
					select vl_contabil - coalesce(vl_residual, 0),
						   coalesce(tx_depreciacao, 0)
					into STRICT   vl_contabil_w ,
						   tx_depreciacao_w
					from   pat_valor_bem
					where  nr_seq_bem = nr_sequencia_w
					and    trunc(dt_valor, 'MM') = add_months(trunc(dt_documento_w, 'MM'), -1);
					exception when no_data_found or too_many_rows then
						vl_contabil_w := 0;		
						tx_depreciacao_w := 0;
				end;			
			
			
				insert into pat_alteracao_base_bem(
									nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									nr_seq_bem,
									tx_deprec,
									tx_base_deprec,
									ds_observacao,
									nr_seq_alt_base)
					values (
									nextval('pat_alteracao_base_bem_seq'),
									clock_timestamp(),
									nm_usuario_p,
									nr_sequencia_w,
									coalesce(tx_deprec_p, tx_depreciacao_w),
									vl_contabil_w,
									ds_observacao_w,
									nr_sequencia_p);
			
		end loop;
		close c02;
	
	end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pat_definir_bens_transf ( nr_sequencia_p bigint, cd_tipo_p bigint, cd_localizacao_p bigint, cd_marca_p bigint, tx_deprec_p bigint, nr_seq_regra_conta_p bigint, cd_conta_contabil_p text, dt_inicial_p timestamp, dt_final_p timestamp, ie_data_p text, ie_situacao_p text, ie_bens_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

